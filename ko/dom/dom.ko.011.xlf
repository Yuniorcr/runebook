<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="0953497a05c8c036448f27924c6f1d73f6e266dc" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../dompointreadonly&quot;&gt;&lt;code&gt;DOMPointReadOnly&lt;/code&gt;&lt;/a&gt; object representing the specified location in space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d8fec5cf13016591363707e9ae098209c4f0c2" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../dompointreadonly&quot;&gt;&lt;code&gt;DOMPointReadOnly&lt;/code&gt;&lt;/a&gt; object which is identical to the source point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f52ae20c4ff5b9053d0db4b15c2effe40e5eee" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7999684d5ca4744af88c2634cbccb9b2d314e942" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../iirfilternode&quot;&gt;&lt;code&gt;IIRFilterNode&lt;/code&gt;&lt;/a&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40390c1c0f3c326b97e162b427b318cadea39c71" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../imagedata&quot;&gt;&lt;code&gt;ImageData&lt;/code&gt;&lt;/a&gt; object with the specified width and height. The new object is filled with transparent black pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb245afa9a915e63adf8da6a2256e3fd4bd34fa" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../imagedata&quot;&gt;&lt;code&gt;ImageData&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a08e3d6a6d2a649142963ed53a5b7011c629141e" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;&lt;/a&gt; which can be used to watch for the visibility of a target element within the specified &lt;code&gt;root&lt;/code&gt; crossing through any of the specified visibility &lt;code&gt;threshold&lt;/code&gt;s. Call its &lt;a href=&quot;observe&quot;&gt;&lt;code&gt;observe()&lt;/code&gt;&lt;/a&gt; method to begin watching for the visibility changes on a given target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d3ba9b0d6570c4b00f73516ee1cd67e7877249" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt;&lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt;&lt;/a&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ad879d2d9ca2123d1847c7fad623d52cdeebf2" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; instance which has a new unique ID and contains clones of every &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; contained by the &lt;code&gt;MediaStream&lt;/code&gt; on which &lt;code&gt;clone()&lt;/code&gt; was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e9883e3c8ba0aecd44ebb87f1f22cbdefa0915" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../mediastreamaudiodestinationnode&quot;&gt;&lt;code&gt;MediaStreamAudioDestinationNode&lt;/code&gt;&lt;/a&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fbf867e191dddc772e39b609b4f3558aecd04e" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../mediastreamaudiosourcenode&quot;&gt;&lt;code&gt;MediaStreamAudioSourceNode&lt;/code&gt;&lt;/a&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aab59a14abe48859aa7d9f3a0abcfa129f5f9d8" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; instance which is identical to the one on which &lt;code&gt;clone()&lt;/code&gt; was called, except its ID is a new, unique, value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931cdfaa71cae08c235d8a890b757e8b4d28b34f" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../mediastreamtrackevent&quot;&gt;&lt;code&gt;MediaStreamTrackEvent&lt;/code&gt;&lt;/a&gt;, initialized based on the provided options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16919ffae5a478e457b3ccc8cc37ff8e4f758026" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../mutationobserver&quot;&gt;&lt;code&gt;MutationObserver&lt;/code&gt;&lt;/a&gt; object configured to call the specified callback when DOM mutations occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e2243ce9acc982fca463388bbf04c6e663217d" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../offlineaudiocompletionevent&quot;&gt;&lt;code&gt;OfflineAudioCompletionEvent&lt;/code&gt;&lt;/a&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a004d4fceaa015a29773ee1af627194d09db855e" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../offlineaudiocontext&quot;&gt;&lt;code&gt;OfflineAudioContext&lt;/code&gt;&lt;/a&gt; object whose associated &lt;code&gt;AudioBuffer&lt;/code&gt; is configured as requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fabf330309b07c91f3723abd6059999659eb82" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f10577a9cb6d49b9b4b18514f6fbb3c8dd699b" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4fceb573443e0e4c577f097a2472b00a08e01e" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; object, configured for use as configured by the input parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23e09e7f1eb655ec9d1136dce701c7de0c4627b" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../performanceobserver&quot;&gt;&lt;code&gt;PerformanceObserver&lt;/code&gt;&lt;/a&gt; object which will call the specified &lt;code&gt;callback&lt;/code&gt; when observed performance events occur.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82184eb82eeedb9638982d53dab7769d2b5bc33" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735a40419e383749ff19362e284f07a7815097f7" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ce1f7610503aa6d54708c54e6631b7d08978d3" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; object with the specified &lt;code&gt;label&lt;/code&gt;, configured using the options specified by &lt;code&gt;options&lt;/code&gt; if that parameter is included; otherwise, the defaults listed above are established.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85360c0e2482ce188f7802571d3d650c9358ce1b" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../rtcdatachannelevent&quot;&gt;&lt;code&gt;RTCDataChannelEvent&lt;/code&gt;&lt;/a&gt; configured as specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a53a24ab351b33cded9edaccc9109737e97a76f" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; is created with a &lt;em&gt;new&lt;/em&gt;&lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; as its &lt;a href=&quot;../rtcrtpreceiver/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; property (not the track specified as a parameter when calling &lt;code&gt;addTrack()&lt;/code&gt;). This track's &lt;a href=&quot;../mediastreamtrack/kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; is set to match the &lt;code&gt;kind&lt;/code&gt; of the track provided as an input parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe471e678c0cf17d4ef239af8d4fbaf3de4f2e3" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; is created and associated with the new sender and receiver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b889bee2ce84319066f5429f48a81455666913c" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../rtctrackevent&quot;&gt;&lt;code&gt;RTCTrackEvent&lt;/code&gt;&lt;/a&gt; describing a track which has been added to the &lt;code&gt;RTCPeerConnection&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9aa36f70a33ff30cda42be7a69bf46886f4ccb96" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../stereopannernode&quot;&gt;&lt;code&gt;StereoPannerNode&lt;/code&gt;&lt;/a&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268085fe748594aeffc44c62d621d850c8123e71" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../waveshapernode&quot;&gt;&lt;code&gt;WaveShaperNode&lt;/code&gt;&lt;/a&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9198001b8649c0443c9a0509bdfd882ad624cdcb" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; object. The object must be prepared by at least calling &lt;a href=&quot;open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; to initialize it before calling &lt;a href=&quot;send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; to send the request to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6e928208392b0e94f246e8c07ae22415f1e78c" translate="yes" xml:space="preserve">
          <source>A new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf937b5130cda1908e340011b55877e3c1e22dbb" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;CustomEvent&lt;/code&gt; object of the specified type, with any other properties configured according to the &lt;code&gt;CustomEventInit&lt;/code&gt; dictionary (if one was provided).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1dd905864a7bdf998319cd94cff2084ca1857e2" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;PaymentRequestUpdateEvent&lt;/code&gt; object.&lt;a href=&quot;https://w3c.github.io/payment-request/#paymentrequestupdateevent-interface&quot;&gt;Payment Request API&lt;br/&gt;&lt;small&gt;The definition of 'PaymentRequestUpdateEvent' in that specification.&lt;/small&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3287343097e52407eeafeb78c7bf445881e8c5" translate="yes" xml:space="preserve">
          <source>A new &lt;code&gt;PromiseRejectionEvent&lt;/code&gt; configured as specified by the parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ec9142ea0d87f1d06e0b2cec70fa57272c38a1" translate="yes" xml:space="preserve">
          <source>A new iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17dcb41d96e7b39b62f51067ba8c0f5ed28d1525" translate="yes" xml:space="preserve">
          <source>A new object based on the &lt;a href=&quot;../mediatracksupportedconstraints&quot;&gt;&lt;code&gt;MediaTrackSupportedConstraints&lt;/code&gt;&lt;/a&gt; dictionary listing the constraints supported by the user agent. Because only constraints supported by the user agent are included in the list, each of these Boolean properties has the value &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b26b0ebf8acb7bd9db9fc05ac3049a636150f84" translate="yes" xml:space="preserve">
          <source>A new service worker is replacing the current service worker, or the current service worker is being discarded due to an install failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4ca7b8dad1ba17b67f5b80bd6aeae70a1392aa9" translate="yes" xml:space="preserve">
          <source>A new shader is created by calling &lt;a href=&quot;../../webglrenderingcontext/createshader&quot;&gt;&lt;code&gt;gl.createShader()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2935d07f1e77c7e0cf8714a59dbe0f7db69c41f9" translate="yes" xml:space="preserve">
          <source>A new unordered list (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul&quot;&gt;&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;&lt;/a&gt;) element is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210fe6d89d965905b8aa439d62929bea1143d54d" translate="yes" xml:space="preserve">
          <source>A new value to be used for the uniform variable. Possible types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2343975ca25a8de8cd6e7c28596fd404433f9dc3" translate="yes" xml:space="preserve">
          <source>A newly created &lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf893b214ff9b883eb6e9691c956a9181299e30" translate="yes" xml:space="preserve">
          <source>A newly created &lt;a href=&quot;../messagechannel&quot;&gt;&lt;code&gt;MessageChannel&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ab4d61e8fb144a5924959101148f6d86c7c9da" translate="yes" xml:space="preserve">
          <source>A newly-created &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; object, either empty, or containing the tracks provided, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9cd76c50955dcdc1c9c0ca0285523fb13f8b5b" translate="yes" xml:space="preserve">
          <source>A newly-created &lt;a href=&quot;../merchantvalidationevent&quot;&gt;&lt;code&gt;MerchantValidationEvent&lt;/code&gt;&lt;/a&gt; providing the information that needs to be delivered to the client-side code to present to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; by calling &lt;a href=&quot;complete&quot;&gt;&lt;code&gt;complete()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fbdbefd08a5de49ac14380a286310357304df2b" translate="yes" xml:space="preserve">
          <source>A newly-created &lt;a href=&quot;../paymentmethodchangeevent&quot;&gt;&lt;code&gt;PaymentMethodChangeEvent&lt;/code&gt;&lt;/a&gt; object describing a change to the options specified for the payment method given in the &lt;code&gt;methodName&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e5d30fb5241704efa3d87312311190ed67af54" translate="yes" xml:space="preserve">
          <source>A newly-created &lt;a href=&quot;../rtcdtmftonechangeevent&quot;&gt;&lt;code&gt;RTCDTMFToneChangeEvent&lt;/code&gt;&lt;/a&gt;, configured as specified in the provided options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc3809a859787a5735d918bad71b78fa44b6dca" translate="yes" xml:space="preserve">
          <source>A newly-created &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; object, optionally configured based on the specified object based on the &lt;a href=&quot;../rtcicecandidateinit&quot;&gt;&lt;code&gt;RTCIceCandidateInit&lt;/code&gt;&lt;/a&gt; dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553f78a82d6ebdb4ffdc662e136e348a44462178" translate="yes" xml:space="preserve">
          <source>A newly-created &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; object, configured as described by &lt;code&gt;configuration&lt;/code&gt;, if specified; otherwise, configured to appropriate basic defaults.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a7c998d88dbf0a6379df140591ee6255f01583" translate="yes" xml:space="preserve">
          <source>A newly-created &lt;a href=&quot;../rtcpeerconnectioniceevent&quot;&gt;&lt;code&gt;RTCPeerConnectionIceEvent&lt;/code&gt;&lt;/a&gt;, configured as specified in the provided options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013f499e5000856aa9eb3a250d7bea927a2d13e4" translate="yes" xml:space="preserve">
          <source>A newly-created &lt;a href=&quot;../trackevent&quot;&gt;&lt;code&gt;TrackEvent&lt;/code&gt;&lt;/a&gt; object, initialized as described by the inputs to the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21e0ad8635bcb55f9932f83abce0e629f8dcd286" translate="yes" xml:space="preserve">
          <source>A non-empty &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../mediakeysystemconfiguration&quot;&gt;&lt;code&gt;MediaKeySystemConfiguration&lt;/code&gt;&lt;/a&gt; objects. The first element with a satisfiable configuration will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cec76a8290ad876e115f0eadfe2ceaef92cf128" translate="yes" xml:space="preserve">
          <source>A non-live &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; containing one &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; object for each descendant node that matches at least one of the specified selectors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69dc018216f1f2902d0b1c674b0d0fa3beb7436e" translate="yes" xml:space="preserve">
          <source>A non-live &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; containing one &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; object for each element that matches at least one of the specified selectors or an empty &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; in case of no matches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e75dab7d3a5b0ba23cdf6df2c57c040c7b47da" translate="yes" xml:space="preserve">
          <source>A non-negative &lt;a href=&quot;../webgl_api/types&quot;&gt;&lt;code&gt;Glsizei&lt;/code&gt;&lt;/a&gt; specifying the height of the scissor box. Default value: height of the canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b751f3c00719e9c02621d582181d0fbfd93c9a" translate="yes" xml:space="preserve">
          <source>A non-negative &lt;a href=&quot;../webgl_api/types&quot;&gt;&lt;code&gt;Glsizei&lt;/code&gt;&lt;/a&gt; specifying the height of the viewport. Default value: height of the canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b279d83aaee1ccb159fee8f2d5419b37b2f2bd" translate="yes" xml:space="preserve">
          <source>A non-negative &lt;a href=&quot;../webgl_api/types&quot;&gt;&lt;code&gt;Glsizei&lt;/code&gt;&lt;/a&gt; specifying the width of the scissor box. Default value: width of the canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6ffe948f71f0cca33524b05e0c77487cb4d65f" translate="yes" xml:space="preserve">
          <source>A non-negative &lt;a href=&quot;../webgl_api/types&quot;&gt;&lt;code&gt;Glsizei&lt;/code&gt;&lt;/a&gt; specifying the width of the viewport. Default value: width of the canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3038acc041e4470cc09790e987971d6f0fe6e9" translate="yes" xml:space="preserve">
          <source>A non-negative float specifying the level of shadow blur, where &lt;code&gt;0&lt;/code&gt; represents no blur and larger numbers represent increasingly more blur. This value doesn't correspond to a number of pixels, and is not affected by the current transformation matrix. The default value is &lt;code&gt;0&lt;/code&gt;. Negative, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; values are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff387784556326decfaac8129ab815be514cd8a" translate="yes" xml:space="preserve">
          <source>A non-negative integer &amp;mdash; this defines the total number of chunks that can be contained in the internal queue before backpressure is applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf267b855bc88224cae5a4bd0eca3fd2e5eb2fb" translate="yes" xml:space="preserve">
          <source>A non-negative number. If the value is set to less than 0, a &lt;code&gt;RangeError&lt;/code&gt; is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a78316a184ba663c6f59f67043a742f3c91668d" translate="yes" xml:space="preserve">
          <source>A non-standard alias (from old versions of Microsoft Internet Explorer) for &lt;a href=&quot;event/target&quot;&gt;&lt;code&gt;Event.target&lt;/code&gt;&lt;/a&gt;, which is starting to be supported in some other browsers for web compatibility purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06806a08c001471b8c01b0618d6c951f031e1015" translate="yes" xml:space="preserve">
          <source>A note to contributors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e648ccff4e5e1a1fe2abece4cf9e92142cc7dd6" translate="yes" xml:space="preserve">
          <source>A number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a503a0ffa0e3765ee84ee30d1f3db821abc3e11f" translate="yes" xml:space="preserve">
          <source>A number (to be precise, an unsigned short).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0529321c33bfd7dea42b668e3d0be7fd116cfa50" translate="yes" xml:space="preserve">
          <source>A number between 0.0 and 1.0 which indicates how much of the target element is actually visible within the root's intersection rectangle. More precisely, this value is the ratio of the area of the intersection rectangle (&lt;a href=&quot;intersectionrect&quot;&gt;&lt;code&gt;intersectionRect&lt;/code&gt;&lt;/a&gt;) to the area of the target's bounds rectangle (&lt;a href=&quot;boundingclientrect&quot;&gt;&lt;code&gt;boundingClientRect&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9259a8f3f26a5eec4f60a0edf54101f94e3da62" translate="yes" xml:space="preserve">
          <source>A number between &lt;code&gt;0.0&lt;/code&gt; (fully transparent) and &lt;code&gt;1.0&lt;/code&gt; (fully opaque), inclusive. The default value is &lt;code&gt;1.0&lt;/code&gt;. Values outside that range, including &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt;, will not be set and &lt;code&gt;globalAlpha&lt;/code&gt; will retain its previous value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7665dfdd89e6a105cd113d794c01d1ae17a80e" translate="yes" xml:space="preserve">
          <source>A number between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;, inclusive, representing the position of the color stop. &lt;code&gt;0&lt;/code&gt; represents the start of the gradient and &lt;code&gt;1&lt;/code&gt; represents the end; an &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt; is raised if the number is outside that range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad1e51da333150f49dc3844a531e7029efdc1f7" translate="yes" xml:space="preserve">
          <source>A number betwen 0 and 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20603a352ae7243560a6fc9ac45c00e68675142a" translate="yes" xml:space="preserve">
          <source>A number containing a 0-based index into the set of m-lines providing media descriptions, indicating which media source is associated with the candidate, or &lt;code&gt;null&lt;/code&gt; if no such association is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d89cc593f045662a91e94aa82a20bf677209ef8" translate="yes" xml:space="preserve">
          <source>A number equal to the number of CSS pixels from the left edge of the browser viewport to the left edge of the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="877f541a478058b5e0bb0726816479e049a17f75" translate="yes" xml:space="preserve">
          <source>A number equal to the number of CSS pixels from the top edge of the browser viewport to the top edge of the screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4726102086c3e544fa2509b7baea231226046d07" translate="yes" xml:space="preserve">
          <source>A number indicating how many audio tracks are included in the &lt;code&gt;AudioTrackList&lt;/code&gt;. Each track can be accessed by treating the &lt;code&gt;AudioTrackList&lt;/code&gt; as an array of objects of type &lt;a href=&quot;../audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcb6449516de7e6702247dc6098fcf531b36cb1" translate="yes" xml:space="preserve">
          <source>A number indicating how many video tracks are included in the &lt;code&gt;VideoTrackList&lt;/code&gt;. Each track can be accessed by treating the &lt;code&gt;VideoTrackList&lt;/code&gt; as an array of objects of type &lt;a href=&quot;../videotrack&quot;&gt;&lt;code&gt;VideoTrack&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b45f5051fb4396be14896337a44d77f53d90e1c" translate="yes" xml:space="preserve">
          <source>A number indicating the index of the currently selected track, if any, or &lt;code&gt;-1&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcaa21a435d263add813fb1365c40297ad8bf6f8" translate="yes" xml:space="preserve">
          <source>A number indicating the number of &lt;a href=&quot;../speechgrammar&quot;&gt;&lt;code&gt;SpeechGrammar&lt;/code&gt;&lt;/a&gt; objects contained in the &lt;a href=&quot;../speechgrammarlist&quot;&gt;&lt;code&gt;SpeechGrammarList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c88ee654e6683caa32e68e02130a517f81dccd" translate="yes" xml:space="preserve">
          <source>A number indicating the size of the file in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fafa3675f8208bf41732f70acb20c2384a32cf5" translate="yes" xml:space="preserve">
          <source>A number indicating the state of the &lt;code&gt;FileReader&lt;/code&gt;. This is one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7336e229509d5d682c71431025754c9030ad4e" translate="yes" xml:space="preserve">
          <source>A number representing a given button:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de5aeca7db71658cca146d1663058f771bb8e675" translate="yes" xml:space="preserve">
          <source>A number representing one or more buttons. For more than one button pressed simultaneously, the values are combined (e.g. 3 is primary + secondary).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d0f7f8572f168614e417b60bae465292a49de98" translate="yes" xml:space="preserve">
          <source>A number representing the HTTP status code of the document or worker in which the violation occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a10a66cd731b6590465e03fb59fed3d0bfe0a7" translate="yes" xml:space="preserve">
          <source>A number representing the ID of the specific &lt;code&gt;VRDisplay&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b211f1b8c1ddc1a386f0c19e0cd876f7c3b79ac7" translate="yes" xml:space="preserve">
          <source>A number representing the column number where the violation occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fc9b1370d32a5579bb8736d26b0ca52353dec79" translate="yes" xml:space="preserve">
          <source>A number representing the current time in milliseconds, or &lt;code&gt;null&lt;/code&gt; to deactivate the animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c73d323b869b7b2df4894bc86c3c00de89c8211d" translate="yes" xml:space="preserve">
          <source>A number representing the current time in milliseconds, or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b26a4a3428ccf08629eeca8418b219ef0f8c8f" translate="yes" xml:space="preserve">
          <source>A number representing the end delay, specified in milliseconds. The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c09dd581bf341cc1b73b6980729641b18b9e18" translate="yes" xml:space="preserve">
          <source>A number representing the interval of time, in milliseconds, at which data is obtained from the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5b5635912438d2e6069b7ad658c068aef9abd2" translate="yes" xml:space="preserve">
          <source>A number representing the line number at which the violation occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb6fadf25e89109761bb74eb8bca96f889701a4" translate="yes" xml:space="preserve">
          <source>A number representing the maximum returned alternatives for each result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b64245c83dabaa16f76c8e67b8a1047f8e01f8" translate="yes" xml:space="preserve">
          <source>A number representing the motion of the device around the x axis, express in degrees with values ranging from -180 to 180. This represents a front to back motion of the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be3a60cabeeb206c776fdfab09cdb03faf08e43" translate="yes" xml:space="preserve">
          <source>A number representing the motion of the device around the y axis, express in degrees with values ranging from -90 to 90. This represents a left to right motion of the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c93c17849b5e77108c0590acf0898bf938817791" translate="yes" xml:space="preserve">
          <source>A number representing the motion of the device around the z axis, express in degrees with values ranging from 0 to 360.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="019de0ad68e97d40624b6de07bf749560416e3d4" translate="yes" xml:space="preserve">
          <source>A number representing the number of redirects since the last non-redirect navigation under the current browsing context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78048dbfaf0a284cc5c06d8a25065f53f64d4ef3" translate="yes" xml:space="preserve">
          <source>A number representing the remaining time in seconds until the battery is completely discharged and the system will suspend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f647c4a035b5a6fb062cb315418aa0263fb711" translate="yes" xml:space="preserve">
          <source>A number representing the remaining time in seconds until the battery is fully charged, or 0 if the battery is already fully charged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8613a327ca8afe95322002720e6e230d48f30c5" translate="yes" xml:space="preserve">
          <source>A number representing the state of the connection. Possible values are &lt;code&gt;CONNECTING&lt;/code&gt; (&lt;code&gt;0&lt;/code&gt;), &lt;code&gt;OPEN&lt;/code&gt; (&lt;code&gt;1&lt;/code&gt;), or &lt;code&gt;CLOSED&lt;/code&gt; (&lt;code&gt;2&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2800eec3030e568c9ddf7b1f1d31daf616c4a1e" translate="yes" xml:space="preserve">
          <source>A number representing the state of the connection. Possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b423382343a3486e788b187173a1e9196ae5db" translate="yes" xml:space="preserve">
          <source>A number representing the status code of the document or worker in which the violation occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fd2387aa62d3cac217eb9b59514d32f1fe4936" translate="yes" xml:space="preserve">
          <source>A number representing the system's battery charge level scaled to a value between 0.0 and 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c608ff46ed1755c7f7b4e41ab0ce315238bff7" translate="yes" xml:space="preserve">
          <source>A number representing the timeline's current time in milliseconds, or &lt;code&gt;null&lt;/code&gt; if the timeline is inactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3e3d9cc6b498a931f4ff9642e67c8fae9f01cd" translate="yes" xml:space="preserve">
          <source>A number represents the difference between the motion of the device around the z axis of the world system and the direction of the north, express in degrees with values ranging from 0 to 360.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64769a64651cf4f058fa70b15f4fcae0d86e32b3" translate="yes" xml:space="preserve">
          <source>A number specifying the delay, in milliseconds, from the start of the animation's play cycle to the beginning of its &lt;strong&gt;active interval&lt;/strong&gt; (the time index at which actual animation begins). Defaults to 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604bfa48c8cadae6662da4d4646038c012c22b12" translate="yes" xml:space="preserve">
          <source>A number specifying the line width in coordinate space units. Zero, negative, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; values are ignored. This value is &lt;code&gt;1.0&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a776b50b7d101be8ac9130f1f41ef04006c6c799" translate="yes" xml:space="preserve">
          <source>A number specifying the miter limit ratio in coordinate space units. Zero, negative, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN&quot;&gt;&lt;code&gt;NaN&lt;/code&gt;&lt;/a&gt; values are ignored. The default value is &lt;code&gt;10.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e66d75d12a5d7cb39ecc954253732dbcaca893" translate="yes" xml:space="preserve">
          <source>A number that represents the number of milliseconds since the Unix epoch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd67a0c8b62f183d337f02f0fc1d0e8414eadd3b" translate="yes" xml:space="preserve">
          <source>A number which is one of the three possible state constants define for the &lt;a href=&quot;../filereader&quot;&gt;&lt;code&gt;FileReader&lt;/code&gt;&lt;/a&gt; API:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d35720dc8816ec56b24f3c2d307b38ae6eaaf6" translate="yes" xml:space="preserve">
          <source>A number which represents the general type of error that occurred, as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1183fcaa7d4cab8f3261a2041854e3f0119a3b5" translate="yes" xml:space="preserve">
          <source>A number whose range depends on the &lt;a href=&quot;distancemodel&quot;&gt;&lt;code&gt;distanceModel&lt;/code&gt;&lt;/a&gt; of the panner as follows (negative values are not allowed):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cbb55caa6e2f4ab00000a1a6d972f3b51ff319e" translate="yes" xml:space="preserve">
          <source>A number, &lt;code&gt;-1&lt;/code&gt;, &lt;code&gt;0&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt;, indicating whether the corresponding boundary-point of the &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; is respectively before, equal to, or after the corresponding boundary-point of &lt;em&gt;sourceRange&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bd5b84b42bbfd0273f7c8bfedb85c644c98272b" translate="yes" xml:space="preserve">
          <source>A number, representing the height in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53a44f793150a1209feaefb4314351d04e22790" translate="yes" xml:space="preserve">
          <source>A number, representing the width in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85cea9f41e1fbeb43d73620b44300ba3eec58253" translate="yes" xml:space="preserve">
          <source>A number, which must be 1 if &lt;a href=&quot;canpresent&quot;&gt;&lt;code&gt;VRDisplayCapabilities.canPresent&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;, or 0 otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed3c373d108b1b5e682a0caaea0fb68c8d2e5a0" translate="yes" xml:space="preserve">
          <source>A number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a364a6b2105563f6c97c72eb066f4f8600f27cd9" translate="yes" xml:space="preserve">
          <source>A numeric argument is out of range. The command is ignored and the error flag is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bcd5416507b195f03de0f397d2ff7c6191cedfc" translate="yes" xml:space="preserve">
          <source>A numeric value approximating the amount of storage space currently being used by the site or Web app, out of the available space as indicated by &lt;code&gt;quota&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edbdd81df7b9eb2128a85851a6274f46acf37f2a" translate="yes" xml:space="preserve">
          <source>A numeric value in the range of signed 32-bit integers, specifying the largest permissible value of the property it describes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e70fe8228011cfe8aad02a0ff2fac9b0f5a3f9" translate="yes" xml:space="preserve">
          <source>A numeric value in the range of signed 32-bit integers, specifying the smallest permissible value of the property it describes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66966f3e2489b482070375345d5239aefd5d1c7e" translate="yes" xml:space="preserve">
          <source>A numeric value indicating the general type of error which occurred. The possible values are described below, in &lt;a href=&quot;#Media_error_code_constants&quot;&gt;Media error code constants&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0f421d4d4c50897bf2ca71a9cd5e0c0f8f92d0" translate="yes" xml:space="preserve">
          <source>A numeric value indicating the number of CSS pixels tall the screen's available space is. This can be no larger than the value of &lt;a href=&quot;height&quot;&gt;&lt;code&gt;window.screen.height&lt;/code&gt;&lt;/a&gt;, and will be less if the device or user agent reserves any vertical space for itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ca46aea2fd8b7bf56804195986cdbe2ce2bdf1" translate="yes" xml:space="preserve">
          <source>A numeric value indicating the status code explaining why the connection is being closed. If this parameter is not specified, a default value of 1005 is assumed. See the &lt;a href=&quot;../closeevent#Status_codes&quot;&gt;list of status codes&lt;/a&gt; of &lt;a href=&quot;../closeevent&quot;&gt;&lt;code&gt;CloseEvent&lt;/code&gt;&lt;/a&gt; for permitted values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52cb9878ff53459ca4450ac5e5acd00e5234e2e3" translate="yes" xml:space="preserve">
          <source>A numeric value specifying an approximation of the total amount of storage space available for use by the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02cd2a4843570aa7687f016dfb154e3cc36eec70" translate="yes" xml:space="preserve">
          <source>A numeric value which provides a conservative approximation of the total storage the user's device or computer has available for the site origin or Web app. It's possible that there's more than this amount of space available though you can't rely on that being the case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe63d45ec1c50bb0d50ea34c1a249d61cfc29aeb" translate="yes" xml:space="preserve">
          <source>A object contaning initialization options to use when creating the constructor. These are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3fa2c00b8b6b51f9f4434196032c474d275ce42" translate="yes" xml:space="preserve">
          <source>A page wants to detect when it is being prerendered so it can keep accurate count of page views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f55ae0ec95b38abcfd13c2bd15edc006560215d" translate="yes" xml:space="preserve">
          <source>A paragraph with a span inside. Both the span and the paragraph have a border set. The client rects are in red. Note that the &lt;code&gt;p&lt;/code&gt; has only one border box, while the &lt;code&gt;span&lt;/code&gt; has multiple border boxes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349ff813016ec75b1c352bae3f14983b075af74f" translate="yes" xml:space="preserve">
          <source>A parking project using the Drag and Drop API: &lt;a href=&quot;https://park.glitch.me/&quot;&gt;https://park.glitch.me/&lt;/a&gt; (You can edit &lt;a href=&quot;https://glitch.com/edit/#!/park&quot;&gt;here&lt;/a&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610e9fb1ba4fda6904e5b51d934c65013c48f9dc" translate="yes" xml:space="preserve">
          <source>A payment request always starts with the creation of a new &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; object &amp;mdash; using the &lt;a href=&quot;../paymentrequest/paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest()&lt;/code&gt;&lt;/a&gt; constructor. This takes two mandatory parameters and one option parameter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a9e217fb108a38e47f9f935bae91df3940c266" translate="yes" xml:space="preserve">
          <source>A peer reflexive candidate is one whose IP address comes from a symmetric NAT between the two peers, usually as an additional candidate during trickle ICE (that is, additional candidate exchanges that occur after primary signaling but before the connection verification phase is finished).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52f9cf726e61d1ed1b52f9934e26a2b1fbb511fe" translate="yes" xml:space="preserve">
          <source>A percentage value was specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a431c52d319eb3c4dff3a29daae84f29487a02" translate="yes" xml:space="preserve">
          <source>A performance &lt;code&gt;&lt;strong&gt;mark&lt;/strong&gt;&lt;/code&gt; is a &lt;em&gt;named&lt;/em&gt;&lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;performance entry&lt;/code&gt;&lt;/a&gt; that is created by the application. The mark is a &lt;a href=&quot;domhighrestimestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; in the browser's &lt;em&gt;performance timeline&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769c3d7810752eb9ca6917cb268b57a0584ee7da" translate="yes" xml:space="preserve">
          <source>A ping or pong is just a regular frame, but it's a &lt;strong&gt;control frame&lt;/strong&gt;. Pings have an opcode of &lt;code&gt;0x9&lt;/code&gt;, and pongs have an opcode of &lt;code&gt;0xA&lt;/code&gt;. When you get a ping, send back a pong with the exact same Payload Data as the ping (for pings and pongs, the max payload length is 125). You might also get a pong without ever sending a ping; ignore this if it happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35225d1a0275c92e789563e517e443cc3a61576d" translate="yes" xml:space="preserve">
          <source>A point of contact with the surface. This may be a finger (or elbow, ear, nose, whatever, but typically a finger) or stylus.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1245679a22034bcb1caaea21678bc3aea78b32d2" translate="yes" xml:space="preserve">
          <source>A point of contact with the surface. This may be a finger (or elbow, ear, nose, whatever, but typically a finger), stylus, mouse, or any other method for specifying a single point on the surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc4016b6d7f89c93b56931395ee3b32b9452519" translate="yes" xml:space="preserve">
          <source>A pointer is considered primary if the pointer represents a mouse device. A pointer representing pen input is considered the primary pen input if its &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; event was dispatched when no other active pointers representing pen input existed. A pointer representing touch input is considered the primary touch input if its &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; event was dispatched when no other active pointers representing touch input existed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2848ae3b8cd8fda01923bf2d82bf09c09b56ffef" translate="yes" xml:space="preserve">
          <source>A pointer's &lt;em&gt;hit test&lt;/em&gt; is the process a browser uses to determine the target element for a pointer event. Typically, this is determined by considering the pointer's location and also the visual layout of elements in a document on screen media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6b91b782a35d84f37858d7869dbd2ef8aaebf2" translate="yes" xml:space="preserve">
          <source>A polyfill for the CSS.escape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58cf622eddf02e116e698f6c98423c6268dd270" translate="yes" xml:space="preserve">
          <source>A position along the web page's horizontal axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9bb8ba4dcb3e9f07aeaf12c4d4f3f3753206f8" translate="yes" xml:space="preserve">
          <source>A position along the web page's vertical axix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6d95ee173d01d1b88dce504a2d3362bbdd75e56" translate="yes" xml:space="preserve">
          <source>A positive integer less than or equal to &lt;code&gt;&lt;var&gt;stylesheet&lt;/var&gt;.cssRules.length&lt;/code&gt;, representing the newly inserted rule's position in &lt;code&gt;&lt;a href=&quot;../cssstylesheet&quot;&gt;CSSStyleSheet&lt;/a&gt;.cssRules&lt;/code&gt;. The default is &lt;code&gt;0&lt;/code&gt;. (In older implementations, this was required. See &lt;a href=&quot;#Browser_compatibility&quot;&gt;Browser Compatibility&lt;/a&gt; for details.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d4351a0728411674537c4a02acacc552ee9324" translate="yes" xml:space="preserve">
          <source>A positive number indicating the maximum distance, in centimeters (cm), that the device's proximity sensor is able to detect and report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efd87b5d577f77ca71c5a30cd6d975c8b601520" translate="yes" xml:space="preserve">
          <source>A positive number indicating the minimum distance, in centimeters (cm), the device's proximity sensor can report.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcaacebdb5264ed835c122c31708547699f03dc5" translate="yes" xml:space="preserve">
          <source>A positive number representing a distance in centimeters (cm) between the device's proximity sensor and the detected object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1194f1cb88006c2797cf1b4647f51bdfa7fd337" translate="yes" xml:space="preserve">
          <source>A positive number representing a light intensity expressed in &lt;a href=&quot;http://en.wikipedia.org/wiki/Lux&quot;&gt;lux&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e12d5312559c08a0fd84001955c8659aaacd86" translate="yes" xml:space="preserve">
          <source>A possible solution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567b748d20432628e39fa23fcb2e8620632a0e08" translate="yes" xml:space="preserve">
          <source>A possible way to solve the &quot;&lt;code&gt;this&lt;/code&gt;&quot; problem is to replace the two native &lt;code&gt;setTimeout()&lt;/code&gt; or &lt;code&gt;setInterval()&lt;/code&gt; global functions with two &lt;em&gt;non-native&lt;/em&gt; ones that enable their invocation through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;&lt;code&gt;Function.prototype.call&lt;/code&gt;&lt;/a&gt; method. The following example shows a possible replacement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8320dab3943134f6978c17691f8e8ef89fc28ebe" translate="yes" xml:space="preserve">
          <source>A potential alternative to the main track, such as a different audio take or a version of the soundtrack with only the music and no dialogue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333c1d669bb63f7de2ad25c442d81907f3bf2f16" translate="yes" xml:space="preserve">
          <source>A potential alternative to the main track, such as a different video take or a version of the soundtrack with only the music and no dialogue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afc7fb3141b2d5550d039d7dc340c7d17b646d52" translate="yes" xml:space="preserve">
          <source>A powerful feature of the Web Audio API is that it does not have a strict &quot;sound call limitation&quot;. For example, there is no ceiling of 32 or 64 sound calls at one time. Some processors may be capable of playing more than 1,000 simultaneous sounds without stuttering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cd1ef8e4aeae2313df92cb2a75600e0c4e44ff" translate="yes" xml:space="preserve">
          <source>A powerful, flexible storage mechanism for multiple Firefox OS applications to use to store and share data between one another quickly, efficiently, and securely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24996495329587d3dcfcd62c4ba3e532f8be4895" translate="yes" xml:space="preserve">
          <source>A precision type value. Either &lt;code&gt;gl.LOW_FLOAT&lt;/code&gt;, &lt;code&gt;gl.MEDIUM_FLOAT&lt;/code&gt;, &lt;code&gt;gl.HIGH_FLOAT&lt;/code&gt;, &lt;code&gt;gl.LOW_INT&lt;/code&gt;, &lt;code&gt;gl.MEDIUM_INT&lt;/code&gt;, or &lt;code&gt;gl.HIGH_INT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6cc851f6f23b57539a2f80c1f4433980c26631" translate="yes" xml:space="preserve">
          <source>A promise that resolves once the presentation has begun. there are a number of rules surrounding the promise's fulfillment or rejection:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae3577eea337d144954a738bdf19ce889f8004b" translate="yes" xml:space="preserve">
          <source>A promise that resolves once the presentation has ended.If the &lt;code&gt;VRDisplay&lt;/code&gt; is not presenting when &lt;code&gt;exitPresent()&lt;/code&gt; is called, the promise will reject.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3aeeecc84168d166c39cd432e747a69c98de04" translate="yes" xml:space="preserve">
          <source>A promise that resolves to an array of &lt;a href=&quot;../vrdisplay&quot;&gt;&lt;code&gt;VRDisplay&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954edc5b5465793a90b99bb106f10013e2686278" translate="yes" xml:space="preserve">
          <source>A promise that resolves with a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ebeaa0a844b65931ceb469892f44fff499427c" translate="yes" xml:space="preserve">
          <source>A promise that resolves with a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb7b8ee8d2b546fba696ab7ee7178f458b52951" translate="yes" xml:space="preserve">
          <source>A promise that resolves with an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37a798a87bb0708ca57f01768eb7ff9c66ac28f" translate="yes" xml:space="preserve">
          <source>A promise that resolves with the result of parsing the body text as JSON. This could be anything that can be represented by JSON &amp;mdash; an object, an array, a string, a number...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ceee83873157e15a94bc3409ca893da3ed4bf27" translate="yes" xml:space="preserve">
          <source>A prompt dialog contains a single-line textbox, a Cancel button, and an OK button, and returns the (possibly empty) text the user entered into that textbox.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6650988d7b2557fa039742ebf61efaabc51cdc" translate="yes" xml:space="preserve">
          <source>A property available on all form elements, &quot;type&quot; returns the type of the calling form element. For SELECT, the two possible values are &quot;&lt;code&gt;select-one&lt;/code&gt;&quot; or &quot;&lt;code&gt;select-multiple&lt;/code&gt;&quot;, depending on the type of selection list. The below code gives all SELECT elements in a particular form a CSS class of &quot;&lt;code&gt;selectclass&lt;/code&gt;&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75190efdf3d61ccc3bfee593d136ceeb6f01dfde" translate="yes" xml:space="preserve">
          <source>A property containing a string representing the human-readable reason why the event is to be fired (see &lt;a href=&quot;reason&quot;&gt;&lt;code&gt;VRDisplayEvent.reason&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b6bc2836f1354b85c66e4b5b106e16c50fee16" translate="yes" xml:space="preserve">
          <source>A property containing the &lt;a href=&quot;../vrdisplay&quot;&gt;&lt;code&gt;VRDisplay&lt;/code&gt;&lt;/a&gt; the event is to be associated with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e3fa8671bbcd3c7e4cfa4c05c47003ca8c488a" translate="yes" xml:space="preserve">
          <source>A property unique to &lt;code&gt;animate()&lt;/code&gt;: a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; with which to reference the animation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b926e6bfbf8c337f275c38548923d7632055661f" translate="yes" xml:space="preserve">
          <source>A provisional answer has been received and successfully applied in response to an offer previously sent and established by calling &lt;code&gt;setLocalDescription()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1142d02f16083be94904307bbefb9e158e91e34" translate="yes" xml:space="preserve">
          <source>A radial &lt;code&gt;CanvasGradient&lt;/code&gt; initialized with the two specified circles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e36458609b271fccef86f7840eb6166a1159342" translate="yes" xml:space="preserve">
          <source>A random ad is selected by computing &lt;code&gt;Math.floor(Math.random() * ads.length)&lt;/code&gt;; the result is a value between 0 and one less than the number of ads. The corresponding ad is now known as &lt;code&gt;adBox&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd58cdc5e4083c644b3bc62e306ae874dcb6aa91" translate="yes" xml:space="preserve">
          <source>A range can be created using the &lt;a href=&quot;document/createrange&quot;&gt;&lt;code&gt;createRange()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; object. Range objects can also be retrieved by using the &lt;a href=&quot;selection/getrangeat&quot;&gt;&lt;code&gt;getRangeAt()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;selection&quot;&gt;&lt;code&gt;Selection&lt;/code&gt;&lt;/a&gt; object or the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document/caretRangeFromPoint&quot;&gt;&lt;code&gt;caretRangeFromPoint()&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3631f2672dd4ece551a244834d2f22cda5315e04" translate="yes" xml:space="preserve">
          <source>A range is a contiguous part of a document. A range can contain entire nodes as well as portions of nodes, such as a portion of a text node. A user will normally only select a single range at a time, but it's possible for a user to select multiple ranges (e.g. by using the Control key). A range can be retrieved from a selection as a &lt;a href=&quot;range&quot;&gt;&lt;code&gt;range&lt;/code&gt;&lt;/a&gt; object. Range objects can also be created via the DOM and programmatically added or removed from a selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27ceeb6a7d07555199020c99df646badddef452f" translate="yes" xml:space="preserve">
          <source>A range object that will be removed to the selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a91b1fa620dc986e41c6133dd39f3bed4cb5bb" translate="yes" xml:space="preserve">
          <source>A read method has been called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54642c0da56d0cfce19acde080fbcc01b3184b4" translate="yes" xml:space="preserve">
          <source>A read only &lt;a href=&quot;svgangle&quot;&gt;&lt;code&gt;SVGAngle&lt;/code&gt;&lt;/a&gt; representing the current animated value of the given attribute. If the given attribute is not currently being animated, then the &lt;a href=&quot;svgangle&quot;&gt;&lt;code&gt;SVGAngle&lt;/code&gt;&lt;/a&gt; will have the same contents as &lt;code&gt;baseVal&lt;/code&gt;. The object referenced by &lt;code&gt;animVal&lt;/code&gt; will always be distinct from the one referenced by &lt;code&gt;baseVal&lt;/code&gt;, even when the attribute is not animated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af866957061680f50182fd5b48ee1c783ca1a057" translate="yes" xml:space="preserve">
          <source>A read only &lt;a href=&quot;svglengthlist&quot;&gt;&lt;code&gt;SVGLengthList&lt;/code&gt;&lt;/a&gt; representing the current animated value of the given attribute. If the given attribute is not currently being animated, then the &lt;a href=&quot;svglengthlist&quot;&gt;&lt;code&gt;SVGLengthList&lt;/code&gt;&lt;/a&gt; will have the same contents as &lt;code&gt;baseVal&lt;/code&gt;. The object referenced by &lt;code&gt;animVal&lt;/code&gt; will always be distinct from the one referenced by &lt;code&gt;baseVal&lt;/code&gt;, even when the attribute is not animated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53d2ae1b0e9dbcec183b00172d32f17d818b0785" translate="yes" xml:space="preserve">
          <source>A read only &lt;a href=&quot;svgnumberlist&quot;&gt;&lt;code&gt;SVGNumberList&lt;/code&gt;&lt;/a&gt; representing the current animated value of the given attribute. If the given attribute is not currently being animated, then the &lt;a href=&quot;svgnumberlist&quot;&gt;&lt;code&gt;SVGNumberList&lt;/code&gt;&lt;/a&gt; will have the same contents as &lt;code&gt;baseVal&lt;/code&gt;. The object referenced by &lt;code&gt;animVal&lt;/code&gt; will always be distinct from the one referenced by &lt;code&gt;baseVal&lt;/code&gt;, even when the attribute is not animated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2e9bb6978e7395c16bef82eb286c7beb56e490" translate="yes" xml:space="preserve">
          <source>A read only &lt;a href=&quot;svgpreserveaspectratio&quot;&gt;&lt;code&gt;SVGPreserveAspectRatio&lt;/code&gt;&lt;/a&gt; representing the current animated value of the given attribute. If the given attribute is not currently being animated, then the &lt;a href=&quot;svgpreserveaspectratio&quot;&gt;&lt;code&gt;SVGPreserveAspectRatio&lt;/code&gt;&lt;/a&gt; will have the same contents as &lt;code&gt;baseVal&lt;/code&gt;. The object referenced by &lt;code&gt;animVal&lt;/code&gt; is always distinct from the one referenced by &lt;code&gt;baseVal&lt;/code&gt;, even when the attribute is not animated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3172486ba2ad9a989b5aeca3295d960cfd354e2e" translate="yes" xml:space="preserve">
          <source>A read only &lt;a href=&quot;svgrect&quot;&gt;&lt;code&gt;SVGRect&lt;/code&gt;&lt;/a&gt; representing the current animated value of the given attribute. If the given attribute is not currently being animated, then the &lt;a href=&quot;svgrect&quot;&gt;&lt;code&gt;SVGRect&lt;/code&gt;&lt;/a&gt; will have the same contents as &lt;code&gt;baseVal&lt;/code&gt;. The object referenced by &lt;code&gt;animVal&lt;/code&gt; will always be distinct from the one referenced by &lt;code&gt;baseVal&lt;/code&gt;, even when the attribute is not animated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18cba3b53a4c919b425c8f61a11750f691b0e8ea" translate="yes" xml:space="preserve">
          <source>A read only &lt;a href=&quot;svgtransformlist&quot;&gt;&lt;code&gt;SVGTransformList&lt;/code&gt;&lt;/a&gt; representing the current animated value of the given attribute. If the given attribute is not currently being animated, then the &lt;a href=&quot;svgtransformlist&quot;&gt;&lt;code&gt;SVGTransformList&lt;/code&gt;&lt;/a&gt; will have the same contents as &lt;code&gt;baseVal&lt;/code&gt;. The object referenced by &lt;code&gt;animVal&lt;/code&gt; will always be distinct from the one referenced by &lt;code&gt;baseVal&lt;/code&gt;, even when the attribute is not animated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc96a7300fb87e33ab97bd620f5e4472c524ec8" translate="yes" xml:space="preserve">
          <source>A read-only &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; which uniquely identifies the payment handler which is requesting merchant validation. See &lt;a href=&quot;../payment_request_api/concepts#Merchant_validation&quot;&gt;Merchant validation&lt;/a&gt; in &lt;a href=&quot;../payment_request_api/concepts&quot;&gt;Payment processing concepts&lt;/a&gt; for more information on the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f455e5fde2de5feafbe7a4e47735329b5ecf4ff2" translate="yes" xml:space="preserve">
          <source>A read-only &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; giving the URL from which to load payment handler specific data needed to complete the merchant verification process. Once this has been loaded, it should be passed into &lt;a href=&quot;complete&quot;&gt;&lt;code&gt;complete()&lt;/code&gt;&lt;/a&gt;, either directly or using a promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fdd6b40bab94fd436c070d36700329fc4ea1282" translate="yes" xml:space="preserve">
          <source>A read-only array of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/NotificationAction&quot;&gt;&lt;code&gt;NotificationAction&lt;/code&gt;&lt;/a&gt; objects, each describing a single action the user can choose within a notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8c38f36145eed3eeb679a577876ba8a276a9fa" translate="yes" xml:space="preserve">
          <source>A read-only back-reference to the &lt;a href=&quot;htmlcanvaselement&quot;&gt;&lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/a&gt;. Might be &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null&quot;&gt;&lt;code&gt;null&lt;/code&gt;&lt;/a&gt; if it is not associated with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7206a966c0f470ebad34d13f7b13dd769d369b8" translate="yes" xml:space="preserve">
          <source>A read-only property containing additional information about the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="672186cbdd659bf377406986e0e2241d1941905d" translate="yes" xml:space="preserve">
          <source>A read-only value indicating the number of files in the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf7f35720e50c97a0cb6e8b3cc471227008f80c" translate="yes" xml:space="preserve">
          <source>A readAs method was invoked. A &lt;code&gt;&lt;a href=&quot;../file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;../blob&quot;&gt;Blob&lt;/a&gt;&lt;/code&gt; is being read, and no error has occurred yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b40274f5b67047cfc7b9b2812aa3955ac35e0b8" translate="yes" xml:space="preserve">
          <source>A readable stream is a data source represented in JavaScript by a &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; object that flows from an &lt;strong&gt;underlying source&lt;/strong&gt; &amp;mdash; this is a resource somewhere on the network or elsewhere on your domain that you want to get data from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cc5cdc78528a362204f900bee020961ad09605f" translate="yes" xml:space="preserve">
          <source>A reader&amp;rsquo;s lock cannot be released while it still has a pending read request, i.e., if a promise returned by the reader&amp;rsquo;s &lt;a href=&quot;../readablestreamdefaultreader/read&quot;&gt;&lt;code&gt;ReadableStreamDefaultReader.read()&lt;/code&gt;&lt;/a&gt; method has not finished. This will result in a &lt;code&gt;TypeError&lt;/code&gt; being thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755d03e470aadf75d793b46d68a226b4b93b0e70" translate="yes" xml:space="preserve">
          <source>A reader&amp;rsquo;s lock cannot be released while it still has a pending read request, i.e., if a promise returned by the reader&amp;rsquo;s &lt;a href=&quot;read&quot;&gt;&lt;code&gt;ReadableStreamDefaultReader.read()&lt;/code&gt;&lt;/a&gt; method has not finished. This will result in a &lt;code&gt;TypeError&lt;/code&gt; being thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23f1d149db50c0987164fa61b030dbe02b2f1da" translate="yes" xml:space="preserve">
          <source>A really easy way to start using a matrix is to use the CSS3 &lt;code&gt;matrix3d&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/transform&quot;&gt;transform&lt;/a&gt;. First we'll set up a simple &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; with some content. The style is not shown. But it is set to a fixed width and height and centered on the page. The &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; has a transition set for the transform so that matrix is animated in making it easy to see what is being done.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0013da820b94bd11ff4563cecc16212346ba78d9" translate="yes" xml:space="preserve">
          <source>A reference to a &lt;a href=&quot;../mediakeys&quot;&gt;&lt;code&gt;MediaKeys&lt;/code&gt;&lt;/a&gt; object that the &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; can use for decryption of media data during playback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e56d5b073176f7d0c9d36acb9231ddc49627b1" translate="yes" xml:space="preserve">
          <source>A reference to a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; object, which has a single &lt;a href=&quot;../canvascapturemediastreamtrack&quot;&gt;&lt;code&gt;CanvasCaptureMediaStreamTrack&lt;/code&gt;&lt;/a&gt; in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf88fff2786e756302e059b361f23b86bbc8b51" translate="yes" xml:space="preserve">
          <source>A reference to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/StorageInfo&quot;&gt;&lt;code&gt;StorageInfo&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc552e6658937fec2ceefd99c39f00b46e59170" translate="yes" xml:space="preserve">
          <source>A reference to a function that should be called in the near future, when the event loop is idle. The callback function is passed a &lt;a href=&quot;../idledeadline&quot;&gt;&lt;code&gt;IdleDeadline&lt;/code&gt;&lt;/a&gt; object describing the amount of time available and whether or not the callback has been run because the timeout period expired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19791a5ae933549affbd40922f547f712ed04769" translate="yes" xml:space="preserve">
          <source>A reference to a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04439c626039d3052a45e8d2f0ab5ce68d9ef5f5" translate="yes" xml:space="preserve">
          <source>A reference to an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../offlineaudiocontext&quot;&gt;&lt;code&gt;OfflineAudioContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce69eb7aab780cc14a3899ef9cca839794bf6a0b" translate="yes" xml:space="preserve">
          <source>A reference to an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcd60f8107f3d0b75a805acc7b4d304676deb56" translate="yes" xml:space="preserve">
          <source>A reference to an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt;. This parameter was removed from the spec.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e090158a327a19dc4f676b742b9295517e2a08" translate="yes" xml:space="preserve">
          <source>A reference to an &lt;a href=&quot;../rtccertificate&quot;&gt;&lt;code&gt;RTCCertificate&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0729c01255fa7da1f0c3737602767ea09716cfe" translate="yes" xml:space="preserve">
          <source>A reference to the &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; it was called on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9403795673329aebbf31e8e08cb72bef10b60f5" translate="yes" xml:space="preserve">
          <source>A reference to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main&quot;&gt;&lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;a href=&quot;../htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt; object in the DOM. This is where we'll insert the articles and ads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4729c939e6a0242a9a00e898ee7aec61a8578ccc" translate="yes" xml:space="preserve">
          <source>A reference to the &lt;code&gt;&lt;a href=&quot;../window&quot;&gt;window&lt;/a&gt;&lt;/code&gt; object that sent the message; you can use this to establish two-way communication between two windows with different origins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80fc43972e7e873325cf4f15595fbd37c75a8066" translate="yes" xml:space="preserve">
          <source>A reference to the currently registered target for the event. This is the object to which the event is currently slated to be sent; it's possible this has been changed along the way through &lt;em&gt;retargeting&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d64787b6f1baf00c9c83aefb7145c5fd44e7d80" translate="yes" xml:space="preserve">
          <source>A reference to the object that dispatched the event. It is different from &lt;a href=&quot;currenttarget&quot;&gt;&lt;code&gt;event.currentTarget&lt;/code&gt;&lt;/a&gt; when the event handler is called during the bubbling or capturing phase of the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365b0b86a3d6a653825ff7b77b277526d7b502c6" translate="yes" xml:space="preserve">
          <source>A reference to the parent of the current window or subframe.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08adbc2ea3ac07b4a34ce033387e986012a2a875" translate="yes" xml:space="preserve">
          <source>A reference to the target to which the event was originally dispatched.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3214fb3c351679f94d27d95a1c34634d7ee8c5a5" translate="yes" xml:space="preserve">
          <source>A reference to the window that will receive the message. Methods for obtaining such a reference include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf41393de1e01e0d65ee33fdfc403541c542ca04" translate="yes" xml:space="preserve">
          <source>A reference to this &lt;code&gt;AudioParam&lt;/code&gt; object. In some browsers older implementations of this interface return void.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b40d222d096f87e56f66d05741f87a40b6a518b1" translate="yes" xml:space="preserve">
          <source>A reference to this &lt;code&gt;AudioParam&lt;/code&gt; object. In some older implementations this method returns void.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccaab65d98b76cecb975e209922953cc17bd2a4" translate="yes" xml:space="preserve">
          <source>A reference to this &lt;code&gt;AudioParam&lt;/code&gt; object. Some older browser implementations of this interface return &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521cf9893496182fbafd05be68f4138ba8b49d4a" translate="yes" xml:space="preserve">
          <source>A reference to this &lt;code&gt;AudioParam&lt;/code&gt; object. Some older browser implementations of this interface return void.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc92f227c02724cc69737398a4bb8c8259a3fe72" translate="yes" xml:space="preserve">
          <source>A relay candidate is generated just like a server reflexive candidate (&lt;code&gt;&quot;srflx&quot;&lt;/code&gt;), but using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURN&lt;/a&gt; instead of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/STUN&quot;&gt;STUN&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1538c7bcc3c50541d0c945259e4713fcfd5dc6" translate="yes" xml:space="preserve">
          <source>A repository of information, typically comprising one or more &lt;a href=&quot;#gloss_object_store&quot;&gt;&lt;em&gt;object stores&lt;/em&gt;&lt;/a&gt;. Each database must have the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb748b2c95984710ffd38ab9fc2d458d12f5fc56" translate="yes" xml:space="preserve">
          <source>A request made via &lt;code&gt;XMLHttpRequest&lt;/code&gt; can fetch the data in one of two ways, asynchronously or synchronously. The type of request is dictated by the optional &lt;code&gt;async&lt;/code&gt; argument (the third argument) that is set on the &lt;a href=&quot;open&quot;&gt;&lt;code&gt;XMLHttpRequest.open()&lt;/code&gt;&lt;/a&gt; method. If this argument is &lt;code&gt;true&lt;/code&gt; or not specified, the &lt;code&gt;XMLHttpRequest&lt;/code&gt; is processed asynchronously, otherwise the process is handled synchronously. A detailed discussion and demonstrations of these two types of requests can be found on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/XMLHttpRequest/Synchronous_and_Asynchronous_Requests&quot;&gt;synchronous and asynchronous requests&lt;/a&gt; page. Do not use synchronous requests outside Web Workers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42f0c3d5ff21126b7d16d77e60a2318223388ff" translate="yes" xml:space="preserve">
          <source>A request was placed against a transaction which is currently not active, or which is finished (No legacy code value and constant name).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10fa111363a47480436dd12143241a10388d505f" translate="yes" xml:space="preserve">
          <source>A required file or directory could not be found at the time an operation was processed. For example, a file did not exist but was being opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3a7f4a21cd5da134d8e70f824ccecb20657210e" translate="yes" xml:space="preserve">
          <source>A result containing a single boolean value. This is useful for example, in an XPath expression using the &lt;code&gt;not()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7783d8d7496f581e232c923684a89b4bb143953" translate="yes" xml:space="preserve">
          <source>A result containing a single number. This is useful for example, in an XPath expression using the &lt;code&gt;count()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262e667b72b5ad885188146936388729b1804fd5" translate="yes" xml:space="preserve">
          <source>A result containing a single string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e103c903505b8c54de4b504c6e1790092509112a" translate="yes" xml:space="preserve">
          <source>A result node-set containing all the nodes matching the expression. The nodes in the result set are in the same order that they appear in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cff945454917e394642b7a7367f452a1e8c79bc" translate="yes" xml:space="preserve">
          <source>A result node-set containing all the nodes matching the expression. The nodes may not necessarily be in the same order that they appear in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d62d29593bdbfaa58adfc9e9b1d0e6cc3eb319" translate="yes" xml:space="preserve">
          <source>A result node-set containing any single node that matches the expression. The node is not necessarily the first node in the document that matches the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a513894726acaba1467287b8c5014ff08e414af0" translate="yes" xml:space="preserve">
          <source>A result node-set containing snapshots of all the nodes matching the expression. The nodes in the result set are in the same order that they appear in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915cb7bb78eafb8a7c9a85278affe7cbe9a2c738" translate="yes" xml:space="preserve">
          <source>A result node-set containing snapshots of all the nodes matching the expression. The nodes may not necessarily be in the same order that they appear in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf3cde7c516071bee4f880a73d2b2d19e6f1999" translate="yes" xml:space="preserve">
          <source>A result node-set containing the first node in the document that matches the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef9918c4277ffa89abb4af093f28cab3b85610e" translate="yes" xml:space="preserve">
          <source>A result set containing a single boolean value. Useful, for example, an an XPath expression using the &lt;code&gt;not()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66b22853564b2162cde4a77bebb54a4963244023" translate="yes" xml:space="preserve">
          <source>A result set containing a single number. Useful, for example, in an XPath expression using the &lt;code&gt;count()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f840c2cf27578d26317c485c2a8558fbd1c0b05b" translate="yes" xml:space="preserve">
          <source>A result set containing a single string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56fefb04baedac49fe9768a6cc8f7497b07b90ed" translate="yes" xml:space="preserve">
          <source>A result set containing all the nodes matching the expression. The nodes in the result set are in the same order they appear in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caddf5470571aa2128bbccf62243f6ddf51d1fae" translate="yes" xml:space="preserve">
          <source>A result set containing all the nodes matching the expression. The nodes in the result set are not necessarily in the same order they appear in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878415e2a9459435b4da54406143afd01d6f564e" translate="yes" xml:space="preserve">
          <source>A result set containing any single node that matches the expression. The node is not necessarily the first node in the document that matches the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d308d674a2e6e89b469e7f4fdf216ab9ac2b033f" translate="yes" xml:space="preserve">
          <source>A result set containing snapshots of all the nodes matching the expression. The nodes in the result set are in the same order they appear in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6330b94809bb91437b14d7f4f01cbcbfa10ab71" translate="yes" xml:space="preserve">
          <source>A result set containing snapshots of all the nodes matching the expression. The nodes in the result set are not necessarily in the same order they appear in the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7034d9ec849bf78e69507b6982b04603d4612d" translate="yes" xml:space="preserve">
          <source>A result set containing the first node in the document that matches the expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ac5ad1ce4b5db4b3f99690ae4d752e2670bb1d" translate="yes" xml:space="preserve">
          <source>A result set containing whatever type naturally results from evaluation of the expression. Note that if the result is a node-set then &lt;code&gt;UNORDERED_NODE_ITERATOR_TYPE&lt;/code&gt; is always the resulting type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eac50c3433ad6afc97e9243dd0882504ceaf64f" translate="yes" xml:space="preserve">
          <source>A sample application: Web Dictaphone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc117bb309f1ce29b43a03bb5f95fc5a5438b2ec" translate="yes" xml:space="preserve">
          <source>A sample is a single float32 value that represents the value of the audio stream at each specific point in time, in a specific channel (left or right, if in the case of stereo). A frame, or sample frame, is the set of all values for all channels that will play at a specific point in time: all the samples of all the channels that play at the same time (two for a stereo sound, six for 5.1, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6609abba1d04a22f09e5a1e9129746045294cf93" translate="yes" xml:space="preserve">
          <source>A scale matrix makes something larger or smaller in one of 3 dimension: width, height, and depth. In typical (cartesian) coordinates this would be stretching and shrinking in x, y, and z.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439c96b13837dce6892d781693983bd49bae677a" translate="yes" xml:space="preserve">
          <source>A screencast by Chromium developer Rafael Weinstein</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c67aeec68ca9097374219b1085dbc77c137d93" translate="yes" xml:space="preserve">
          <source>A selection object represents the &lt;a href=&quot;range&quot;&gt;&lt;code&gt;ranges&lt;/code&gt;&lt;/a&gt; that the user has selected. Typically, it holds only one range, accessed as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3dd5ba85aba7d5b08fe27cf5d57d6c16329fb39" translate="yes" xml:space="preserve">
          <source>A sensing device with a surface that can detect contact. Most commonly, the sensing device is a touch enable screen that can sense input from an input device such as a pen, stylus, or finger.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7003f8d3796f403b91fdd627324fd246f7aa93" translate="yes" xml:space="preserve">
          <source>A sequence (array) of &lt;a href=&quot;../trackdefault&quot;&gt;&lt;code&gt;TrackDefault&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55049feeb9a32c149d2868fec699225e08ace273" translate="yes" xml:space="preserve">
          <source>A sequence of &lt;a href=&quot;../pointerevent&quot;&gt;&lt;code&gt;PointerEvent&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7978a8a8959ea0dc547fb6f09038564150ca1df" translate="yes" xml:space="preserve">
          <source>A sequence of &lt;a href=&quot;../taskattributiontiming&quot;&gt;&lt;code&gt;TaskAttributionTiming&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="336ba71743dcaccefb0ce5a3d7c076d43624c3e5" translate="yes" xml:space="preserve">
          <source>A sequence of floating point numbers (for example a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; of numbers) for floating point vector methods (methods with &quot;fv&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14be12ff0a4277baba4e77bc4de2fba7939fd029" translate="yes" xml:space="preserve">
          <source>A sequence of objects to &lt;a href=&quot;../transferable&quot;&gt;transfer&lt;/a&gt;. These objects must also be present in the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5ada51a063c46796eca116d67fc4cb26c8a3f0" translate="yes" xml:space="preserve">
          <source>A serialization of HTML was requested but could not succeed due to the content not being well-formed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4b47af238c810906c7c0e5b59260c5cca5b74e" translate="yes" xml:space="preserve">
          <source>A series of live samples with short explanations that showcase WebGL concepts and capabilities. The examples are sorted according to topic and level of difficulty, covering the WebGL rendering context, shader programming, textures, geometry, user interaction, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3854daff921a7d8fc5924aa53a7c50222235c49" translate="yes" xml:space="preserve">
          <source>A server reflexive candidate is generated by a STUN/TURN server; the connection's initiator requests a candidate from the STUN server, which forwards the request through the remote peer's NAT, which creates and returns a candidate whose IP address is local to the remote peer. The STUN server then replies to the initiator's request with a candidate whose IP address is unrelated to the remote peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec4a83c8a3eb7c74a5570dfe2da76579fc887d1" translate="yes" xml:space="preserve">
          <source>A service worker is an event-driven &lt;a href=&quot;worker&quot;&gt;worker&lt;/a&gt; registered against an origin and a path. It takes the form of a JavaScript file that can control the web page/site it is associated with, intercepting and modifying navigation and resource requests, and caching resources in a very granular fashion to give you complete control over how your app behaves in certain situations, (the most obvious one being when the network is not available.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8732314bdf7098739aceb8669a8ba1006782091f" translate="yes" xml:space="preserve">
          <source>A service worker is first registered using the &lt;a href=&quot;serviceworkercontainer/register&quot;&gt;&lt;code&gt;ServiceWorkerContainer.register()&lt;/code&gt;&lt;/a&gt; method. If successful, your service worker will be downloaded to the client and attempt installation/activation (see below) for URLs accessed by the user inside the whole origin, or inside a subset specified by you.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c816d020f39bd44d39840034bcb2d645c761f54b" translate="yes" xml:space="preserve">
          <source>A service worker is run in a worker context: it therefore has no DOM access, and runs on a different thread to the main JavaScript that powers your app, so it is not blocking. It is designed to be fully async; as a consequence, APIs such as synchronous &lt;a href=&quot;xmlhttprequest&quot;&gt;XHR&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Storage&quot;&gt;localStorage&lt;/a&gt; can't be used inside a service worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81b390db29f526d73a975a47f1fe701155c9cbb" translate="yes" xml:space="preserve">
          <source>A set of &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects to insert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c2f7d4882dbc3936914dcd20663ff5ca56b1e7" translate="yes" xml:space="preserve">
          <source>A set of &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects to replace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e019611a828f5dd8214b5a129f176b4c6c37c027" translate="yes" xml:space="preserve">
          <source>A set of optional descriptors passed as an object. It can have the following keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090aba70c4da8e366f3b7c1a1e5b503c69fb09eb" translate="yes" xml:space="preserve">
          <source>A shadow DOM example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b74dc13d63f8d9d3cea10aad758d4474b51c7d52" translate="yes" xml:space="preserve">
          <source>A shadowed text example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66ec2d2275cea7de429d4f1df4a98afa222783ce" translate="yes" xml:space="preserve">
          <source>A shared worker is accessible by multiple scripts &amp;mdash; even if they are being accessed by different windows, iframes or even workers. In this section we'll discuss the JavaScript found in our &lt;a href=&quot;https://github.com/mdn/simple-shared-worker&quot;&gt;Basic shared worker example&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/simple-shared-worker/&quot;&gt;run shared worker&lt;/a&gt;): This is very similar to the basic dedicated worker example, except that it has two functions available handled by different script files: &lt;em&gt;multiplying two numbers&lt;/em&gt;, or &lt;em&gt;squaring a number&lt;/em&gt;. Both scripts use the same worker to do the actual calculation required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c1ec455f93f32f2478f36c64d3a95603d47da8" translate="yes" xml:space="preserve">
          <source>A short introduction to media queries in Firefox 3.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463d4a84518ce7f16cd64e25b6a46aa7866c57ff" translate="yes" xml:space="preserve">
          <source>A short number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869857f500d1b64ce1b47cb56f7b7063e902a991" translate="yes" xml:space="preserve">
          <source>A shortcut method for creating and playing an animation on an element. It returns the created &lt;a href=&quot;animation&quot;&gt;&lt;code&gt;Animation&lt;/code&gt;&lt;/a&gt; object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="154b843ade87beab52ffa0de810a848cd06cff8b" translate="yes" xml:space="preserve">
          <source>A shortcut method to create and run an animation on an element. Returns the created Animation object instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3759c5d30c0e7d852d9c86451960b950d0d268" translate="yes" xml:space="preserve">
          <source>A sign-language interpretation of an audio track.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daaed01b0a05f53824bce1c64a0b27100f5d2ffa" translate="yes" xml:space="preserve">
          <source>A similar approach can be taken elsewhere in the File and Directory Entries API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52aab3c2a5de8133a33e61957d095f468ed9b2b7" translate="yes" xml:space="preserve">
          <source>A similar information, but attached to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/browsing_context&quot;&gt;browsing context&lt;/a&gt;, &lt;a href=&quot;../window/location&quot;&gt;&lt;code&gt;Window.location&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ad228f9e13f41fc8ff3f8bbedd66f20e6261e3" translate="yes" xml:space="preserve">
          <source>A similar information, but attached to the document, &lt;a href=&quot;../document/location&quot;&gt;&lt;code&gt;Document.location&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04de89326dd0b32b89186bf52dda682d53cc001" translate="yes" xml:space="preserve">
          <source>A similar method: &lt;a href=&quot;getcurrentposition&quot;&gt;&lt;code&gt;Geolocation.getCurrentPosition()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc33258d227aba14d6a863c45e54760c864cc65" translate="yes" xml:space="preserve">
          <source>A simple &lt;code&gt;log()&lt;/code&gt; function is used throughout the code to append HTML to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; box for displaying status and errors to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e5d44557b68a37ab12590bb837bcde25402ed3" translate="yes" xml:space="preserve">
          <source>A simple B&amp;eacute;zier curve</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3889fcff63b3837580241626cb0410ad1407a0d" translate="yes" xml:space="preserve">
          <source>A simple RTCDataChannel sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1fbcc49ed63e45c23fb4d10a2280c5b29fd5bf8" translate="yes" xml:space="preserve">
          <source>A simple clipping region</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eedb475ddacf2ad33641e2938434ee934b93577" translate="yes" xml:space="preserve">
          <source>A simple container list for multiple &lt;code&gt;SourceBuffer&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6798be13f8a40a712544b3d7bd3371a8b7e671" translate="yes" xml:space="preserve">
          <source>A simple container list for multiple &lt;code&gt;TrackDefault&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780142ae894a498f4f14073938cca82699591586" translate="yes" xml:space="preserve">
          <source>A simple demonstration of procedural texturing with fragment shaders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cf8919ea34c404a49fa4a02115691af647ed4f" translate="yes" xml:space="preserve">
          <source>A simple example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92d8f34cabe009e8e448a194ec289516aacd134" translate="yes" xml:space="preserve">
          <source>A simple filled rectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d523b06cf7401a94749c78e13b36503027eb421" translate="yes" xml:space="preserve">
          <source>A simple game that demonstrates clearing with solid colors, scissoring, animation, and user interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3a5329d4c025e934d8335b3df7769f2d0d998f" translate="yes" xml:space="preserve">
          <source>A simple getter used to expose a &lt;a href=&quot;readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; of the body contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f12f0576dcbc1b6a85603d88e937b41b9e35f860" translate="yes" xml:space="preserve">
          <source>A simple quadratic curve</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c2aaa2d4741f111b902132f009eb8b530fa3ac" translate="yes" xml:space="preserve">
          <source>A simple stroked rectangle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703486ff2c303f97997bc3317eb375eea12cf4a5" translate="yes" xml:space="preserve">
          <source>A simple test case</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c73b5c26b96b8564ac6fc99005fa51fe6cc0335" translate="yes" xml:space="preserve">
          <source>A simple, typical workflow for web audio would look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803078fb557a03f3d38af37f8338d65c1d6f7000" translate="yes" xml:space="preserve">
          <source>A single &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ff1254697f3d029c10e9e82c50ff46f6941da8" translate="yes" xml:space="preserve">
          <source>A single ICE server</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cfeae8ad66b8a1612e907804213d64bbb58abb2" translate="yes" xml:space="preserve">
          <source>A single ICE server with authentication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0da00c98af01a72eb9685ec19b1aeb0bd47b51d" translate="yes" xml:space="preserve">
          <source>A single ICE server with multiple URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b2d3ca37513db7090ec85842343c7b06cfb0ab3" translate="yes" xml:space="preserve">
          <source>A single constraint is an object whose name matches the constrainable property whose desired value or range of values is being specified. This object contains zero or more individual constraints, as well as an optional sub-object named &lt;code&gt;advanced&lt;/code&gt;, which contains another set of zero or more constraints which the user agent must satisfy if at all possible. The user agent attempts to satisfy constraints in the order specified in the constraint set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fba00cda6cdde81f8e3a57c9d149d9225a5a657" translate="yes" xml:space="preserve">
          <source>A single service worker can control many pages. Each time a page within your scope is loaded, the service worker is installed against that page and operates on it. Bear in mind therefore that you need to be careful with global variables in the service worker script: each page doesn&amp;rsquo;t get its own unique worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8b5258feae0ca406a48f5b4c92b7426a18af35" translate="yes" xml:space="preserve">
          <source>A single vibration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849f7b0189aac6d82450932bf7e36971b87e2bd4" translate="yes" xml:space="preserve">
          <source>A single-character access key to give access to the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e4e48f51ed1fee5ac632286b8a94fb83456285" translate="yes" xml:space="preserve">
          <source>A site has an image carousel that shouldn't advance to the next slide unless the user is viewing the page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5db788f864d64f69c2f5d70e151f37cdb6415cf1" translate="yes" xml:space="preserve">
          <source>A site wants to switch off sounds when a device is in standby mode (user pushes power button to turn screen off)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3d1dad0cec08b38d086ba70c07607385d47e60" translate="yes" xml:space="preserve">
          <source>A skeleton template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ecc25de785a542f8330cd17674243b7b58d4a1" translate="yes" xml:space="preserve">
          <source>A slot is a placeholder inside a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components&quot;&gt;web component&lt;/a&gt; that users can fill with their own markup (see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_templates_and_slots&quot;&gt;Using templates and slots&lt;/a&gt; for more information).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e9a48e104c2263a399e1d7fe0bda0f152f7f7f" translate="yes" xml:space="preserve">
          <source>A space or a newline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afe659456a0f45c5e2f49cf35288691c3e1f49d" translate="yes" xml:space="preserve">
          <source>A special encoding, &lt;code&gt;'replacement'&lt;/code&gt;, which only emits an error and an &lt;code&gt;EOF&lt;/code&gt; code point. It is used to prevent attacks that mismatch encodings between the client and server. It can happen with &lt;code&gt;ISO-2022-CN&lt;/code&gt; and &lt;code&gt;ISO-2022-CN-ext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97a4e2e90eefae9cd734e2f6c2d2e489414e5c9" translate="yes" xml:space="preserve">
          <source>A special implementation of &lt;a href=&quot;window/cancelanimationframe&quot;&gt;&lt;code&gt;Window.cancelAnimationFrame&lt;/code&gt;&lt;/a&gt; that allows callbacks registered with &lt;a href=&quot;vrdisplay/requestanimationframe&quot;&gt;&lt;code&gt;VRDisplay.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; to be unregistered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58364ec2dc99e9370b0587764ef453e902d82e6b" translate="yes" xml:space="preserve">
          <source>A special implementation of &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;Window.requestAnimationFrame&lt;/code&gt;&lt;/a&gt; containing a callback function that will be called every time a new frame of the &lt;code&gt;VRDisplay&lt;/code&gt; presentation is rendered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23652a3989a2650e4037bebca7251fa73cb7587d" translate="yes" xml:space="preserve">
          <source>A specific ancestor of the target &lt;a href=&quot;element&quot;&gt;&lt;code&gt;element&lt;/code&gt;&lt;/a&gt; being observed. If no value was passed to the constructor or this is &lt;code&gt;null&lt;/code&gt;, the top-level document's viewport is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be74fbd7f34cf5b6a45205eb7ab18ab47fefc7e0" translate="yes" xml:space="preserve">
          <source>A specific type of event object, based on &lt;a href=&quot;extendableevent&quot;&gt;&lt;code&gt;ExtendableEvent&lt;/code&gt;&lt;/a&gt;, which represents a notification that has fired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba07c5cfdb441822178053e3466848c834131ad" translate="yes" xml:space="preserve">
          <source>A speed selector component would benefit from smooth updating of &lt;code&gt;updatePlaybackRate()&lt;/code&gt;, as demonstrated below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51185bc9e6d78a2da5620439c634c03fbc416a35" translate="yes" xml:space="preserve">
          <source>A standard CSS color value indicating the color of the shadow effect; by default, it is fully-transparent black.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb60e59b236958f0166268742b34c11d5aec6dba" translate="yes" xml:space="preserve">
          <source>A standard DOM example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f8baacba540f8a58178ba864710d39b494e07be" translate="yes" xml:space="preserve">
          <source>A standard getter that allows &lt;a href=&quot;speechrecognitionalternative&quot;&gt;&lt;code&gt;SpeechRecognitionAlternative&lt;/code&gt;&lt;/a&gt; objects within the result to be accessed via array syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c10b79d60f4b5506e2f9a75e160733f96eccdf" translate="yes" xml:space="preserve">
          <source>A standard getter that allows &lt;a href=&quot;speechrecognitionresult&quot;&gt;&lt;code&gt;SpeechRecognitionResult&lt;/code&gt;&lt;/a&gt; objects in the list to be accessed via array syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="436a188a9f4135baa080853049407ebb02b7be8a" translate="yes" xml:space="preserve">
          <source>A standard serializer that returns a JSON representation of the &lt;code&gt;PaymentAddress&lt;/code&gt; object's properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e2c1124250a8c1431cf62b028247888b876982" translate="yes" xml:space="preserve">
          <source>A static method that creates a new &lt;code&gt;DOMPointReadOnly&lt;/code&gt; object given the coordinates provided in the specified &lt;a href=&quot;dompointinit&quot;&gt;&lt;code&gt;DOMPointInit&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb9ae0897420968aee10a2b095c52bec596e05c" translate="yes" xml:space="preserve">
          <source>A string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab945fe2d663859d55ebd15a98055960f680c2d9" translate="yes" xml:space="preserve">
          <source>A string (defined by the &lt;a href=&quot;https://dvcs.w3.org/hg/IndexedDB/raw-file/default/Overview.html#idl-def-IDBCursorDirection&quot;&gt;&lt;code&gt;IDBCursorDirection&lt;/code&gt; enum&lt;/a&gt;) indicating the direction in which the cursor is traversing the data. Possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa91767bed042a194b5a631ed755ddeb3f7a2d96" translate="yes" xml:space="preserve">
          <source>A string (enum) representing a &lt;a href=&quot;http://webaudio.github.io/web-audio-api/#idl-def-BiquadFilterType&quot;&gt;BiquadFilterType&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa6326c95849358126acf24ad62f31bbc8928ad" translate="yes" xml:space="preserve">
          <source>A string &lt;code&gt;data&lt;/code&gt; parameter was provided, and the list already contains an item whose &lt;a href=&quot;../datatransferitem/kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; is &quot;Plain Unicode string&quot; and whose type is equal to the specified type parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e6d4412a5382c1f145219a9837537330d3aee8" translate="yes" xml:space="preserve">
          <source>A string containing a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; message describing the session. This value is an empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;) by default and may not be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce535f58e7755009a0b60accde2cbd04cb585c35" translate="yes" xml:space="preserve">
          <source>A string containing a valid 3-letter &lt;a href=&quot;https://www.iso.org/iso-4217-currency-codes.html&quot;&gt;ISO 4217&lt;/a&gt; currency identifier (&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO%204217&quot;&gt;ISO 4217&lt;/a&gt;) indicating the currency used for the payment &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab3b61d6f98ed11670ab70a14762db514ffa714" translate="yes" xml:space="preserve">
          <source>A string containing a valid decimal value representing the mount of currency constituting the payment amount. This string must only contain an optional leading &quot;-&quot; to indicate a negative value, then one or more digits from 0 to 9, and an optional decimal point (&quot;.&quot;, regardless of locale) followed by at least one more digit. No whitespace is permitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212ee926657a70c91abbdac1d76878c7e1d28bb1" translate="yes" xml:space="preserve">
          <source>A string containing the Base64 representation of &lt;code&gt;stringToEncode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16234a96873f84fcb5cec715e3b35498875df2b3" translate="yes" xml:space="preserve">
          <source>A string containing the data to be added to the Comment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdc47be29340a63d657dd73abc23b442827eda3" translate="yes" xml:space="preserve">
          <source>A string containing the default value displayed in the text input field. Note that in Internet Explorer 7 and 8, if you do not provide this parameter, the string &lt;code&gt;&quot;undefined&quot;&lt;/code&gt; is the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ff2e26eb42bb100504cc89898a8146398ebb5e" translate="yes" xml:space="preserve">
          <source>A string containing the payer name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86e2a0d999b8f68aeb19858ccd803029025196f" translate="yes" xml:space="preserve">
          <source>A string containing the text entered by the user, or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914d0956ac74fff97dd8c8ca0a72bd26dc73bc12" translate="yes" xml:space="preserve">
          <source>A string containing the text to be written to the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a4d153086e36f91ada5ef2dd0d062cd57d57e7" translate="yes" xml:space="preserve">
          <source>A string containing valid file extensions for the data displayed by the plugin, or an empty string if an extension is not valid for the particular module. For example, a browser's content decryption module may appear in the plugin list, but support more file extenions than can be anticipated. It might therefore return an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c290096b465c2eee636cfb8d31ccf3fd7ea75c9" translate="yes" xml:space="preserve">
          <source>A string controlling whether or not to keep browser user interface elements visible while the element is in full-screen mode. The default, &lt;code&gt;&quot;auto&quot;&lt;/code&gt;, lets the browser make this decision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8182a3808a75e08d7407286342b4331841f12ac" translate="yes" xml:space="preserve">
          <source>A string defining a color we'll apply to the target element when the visibility ratio is increasing. The word &quot;ratio&quot; in this string will be replaced with the target's current visibility ratio, so that the element not only changes color but also becomes increasingly opaque as it becomes less obscured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a72d253acd152e8bc8b3b18132bca63934bd1b" translate="yes" xml:space="preserve">
          <source>A string defining the timing function to use for easing transitions during the animation process. Accepts several pre-defined &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; values, a &lt;code&gt;steps()&lt;/code&gt; timing function like &lt;code&gt;steps(5, end)&lt;/code&gt;, or a custom &lt;code&gt;cubic-bezier&lt;/code&gt; value like &lt;code&gt;cubic-bezier(0.42, 0, 0.58, 1)&lt;/code&gt;. Defaults to &lt;code&gt;linear&lt;/code&gt;. Available values include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae52f3b6e0f41ebb1aa48cade0296db41d3331e9" translate="yes" xml:space="preserve">
          <source>A string describing the standard or specification as well as the currency system identifier within that system which was used to provide the &lt;code&gt;value&lt;/code&gt;. This has been removed; instead of allowing sites to choose the standard to use, ISO 4217 is always used for the &lt;code&gt;currency&lt;/code&gt; identifier now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02aed19d9b98656031597f241c848b4dbc973309" translate="yes" xml:space="preserve">
          <source>A string from the &lt;a href=&quot;../requestdestination&quot;&gt;&lt;code&gt;RequestDestination&lt;/code&gt;&lt;/a&gt; enumerated type which indicates the type of content the request is asking for. This type is much broader than the usual document type values (such as &lt;code&gt;&quot;document&quot;&lt;/code&gt; or &lt;code&gt;&quot;manifest&quot;&lt;/code&gt;), and may include contextual cues such as &lt;code&gt;&quot;image&quot;&lt;/code&gt; or &lt;code&gt;&quot;worker&quot;&lt;/code&gt; or &lt;code&gt;&quot;audioworklet&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fadfc7da3de2060255cd0c891a6af3535d49f9ed" translate="yes" xml:space="preserve">
          <source>A string from the &lt;a href=&quot;../rtcicegathererstate&quot;&gt;&lt;code&gt;RTCIceGathererState&lt;/code&gt;&lt;/a&gt; enumerated type whose value indicates the current state of the ICE agent's candidate gathering process:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8ad5bb8d6d4c936661fc3c01914a84a2634cc5" translate="yes" xml:space="preserve">
          <source>A string from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCPriorityType&quot;&gt;&lt;code&gt;RTCPriorityType&lt;/code&gt;&lt;/a&gt; enumerated type which indicates the encoding's priority. Default value is &lt;code&gt;&quot;low&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4ce610337b06bc287cd0712f12ce2f771852ea" translate="yes" xml:space="preserve">
          <source>A string from the enum &lt;a href=&quot;rtcrtptransceiverdirection&quot;&gt;&lt;code&gt;RTCRtpTransceiverDirection&lt;/code&gt;&lt;/a&gt; which indicates the transceiver's current directionality, or &lt;code&gt;null&lt;/code&gt; if the transceiver is stopped or has never participated in an exchange of offers and answers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21700cfea3474ed8a3a36b30aaddd04056bf5514" translate="yes" xml:space="preserve">
          <source>A string from the enum &lt;a href=&quot;rtcrtptransceiverdirection&quot;&gt;&lt;code&gt;RTCRtpTransceiverDirection&lt;/code&gt;&lt;/a&gt; which is used to set the transceiver's desired direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd1e3dfe9d243e99e5b73d6bd4eb37d6756c9bd" translate="yes" xml:space="preserve">
          <source>A string identifier assigned by the Web site or app when the data channel was created, as specified when &lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt;&lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt;&lt;/a&gt; was called to create the channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e56d3c973f7de14e8654638f7b34331450435ca" translate="yes" xml:space="preserve">
          <source>A string identifying the app-defined subprotocol being used for exchanging data on the channel. If none has been established, this is an empty string (&quot;&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52eaccff04560fb55534b6e80e84263480033b63" translate="yes" xml:space="preserve">
          <source>A string identifying the type of event described. If this is specified, an event will be dispatched on the browser to the listener for the specified event name; the website source code should use &lt;code&gt;addEventListener()&lt;/code&gt; to listen for named events. The &lt;code&gt;onmessage&lt;/code&gt; handler is called if no event name is specified for a message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa31d7968373fc11f16656bc1197d58d1e41f39e" translate="yes" xml:space="preserve">
          <source>A string indicating the MIME type of the data contained in the &lt;code&gt;Blob&lt;/code&gt;. If the type is unknown, this string is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f60d9e8084235cadbe7d06cda5eaa20ecd4cd3" translate="yes" xml:space="preserve">
          <source>A string indicating the direction in which the selection is performed. This string can be &quot;forward&quot; or &quot;backward&quot;, or &quot;none&quot; if the direction is unknown or irrelevant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f3ad76e83c87dca602ffad52489e3a14705e48" translate="yes" xml:space="preserve">
          <source>A string indicating the element's tag name. This string's capitalization depends on the document type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30238d307888e36bed08b639ac2776aa1bb8130c" translate="yes" xml:space="preserve">
          <source>A string indicating whether the candidate's protocol is &lt;code&gt;&quot;tcp&quot;&lt;/code&gt; or &lt;code&gt;&quot;udp&quot;&lt;/code&gt;. The string is one of those in the enumerated type &lt;code&gt;RTCIceProtocol&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a755fbcc3fce6dc89cb22299b5f0ea90b10cf3" translate="yes" xml:space="preserve">
          <source>A string of text to display to the user. Can be omitted if there is nothing to show in the prompt window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114fe8ecce21c26944679a5a82ba45c1f31b7184" translate="yes" xml:space="preserve">
          <source>A string passed to &lt;code&gt;setTimeout&lt;/code&gt; is evaluated in the global context, so local symbols in the context where &lt;code&gt;setTimeout()&lt;/code&gt; was called will not be available when the string is evaluated as code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd83f14be9fc7c8ecc2d95c366651eefc7d8d7ee" translate="yes" xml:space="preserve">
          <source>A string representing an action type to listen for. It will be one of &lt;code&gt;play&lt;/code&gt;, &lt;code&gt;pause&lt;/code&gt;, &lt;code&gt;seekbackward&lt;/code&gt;, &lt;code&gt;seekforward&lt;/code&gt;, &lt;code&gt;previoustrack&lt;/code&gt;, or &lt;code&gt;nexttrack&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876ba736230cd723328df0ab8b7955c43d249f50" translate="yes" xml:space="preserve">
          <source>A string representing the build identifier of the application. The build ID is in the form &lt;code&gt;YYYYMMDDHHMMSS&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c2de70d7fa0d3ec672c2f3fd07e7a0737e2336" translate="yes" xml:space="preserve">
          <source>A string representing the current permission to display notifications. Possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fe2b6cadaeba852452e34062a4d91e0f9ee3c4" translate="yes" xml:space="preserve">
          <source>A string representing the name of the type of the &lt;code&gt;PromiseRejectionEvent&lt;/code&gt;. This is case-sensitive and should be one of &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/rejectionhandled&quot;&gt;&quot;rejectionhandled&quot;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unhandledrejection&quot;&gt;&quot;unhandledrejection&quot;&lt;/a&gt;&lt;/code&gt;, to match the event names of the possible (non-synthetic) &lt;a href=&quot;../promiserejectionevent&quot;&gt;&lt;code&gt;PromiseRejectionEvent&lt;/code&gt;&lt;/a&gt; events that user agents can actually fire).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220b275d73d5e03011c477ef565d39ff36c93054" translate="yes" xml:space="preserve">
          <source>A string representing the reason why the event was fired. The available reasons are defined in the &lt;code&gt;&lt;a href=&quot;https://w3c.github.io/webvr/spec/1.1/#interface-vrdisplayeventreason&quot;&gt;VRDisplayEventReason&lt;/a&gt;&lt;/code&gt; enum, and are as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c506b6bdf8d03466c1101c09e597405579d4f50f" translate="yes" xml:space="preserve">
          <source>A string representing the rendered text content of an element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb4e21bfac2edeae2e8934428bce8a6e98a2050" translate="yes" xml:space="preserve">
          <source>A string specifying the encoding to use for the returned data. By default, UTF-8 is assumed if this parameter is not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be5dc1a81fea76fa6ae90dd7141aa434e52cf10" translate="yes" xml:space="preserve">
          <source>A string specifying the pseudo-element to match. Must be omitted (or &lt;code&gt;null&lt;/code&gt;) for regular elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285c63a0a06d28502d0ba486250f66e4ae9ec7b6" translate="yes" xml:space="preserve">
          <source>A string taken from the &lt;a href=&quot;../xmlhttprequestresponsetype&quot;&gt;&lt;code&gt;XMLHttpRequestResponseType&lt;/code&gt;&lt;/a&gt; enum which specifies what type of data the response contains.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b9ad072240a9769befc9827ba3e02dad6240ea" translate="yes" xml:space="preserve">
          <source>A string that may be used by the web application to provide a hint as to what type of content the track contains to guide how it should be treated by API consumers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a36df5729956c59e1e633f40a2ec9292f30241" translate="yes" xml:space="preserve">
          <source>A string that specifies the type of element to be created. The &lt;a href=&quot;../node/nodename&quot;&gt;&lt;code&gt;nodeName&lt;/code&gt;&lt;/a&gt; of the created element is initialized with the value of &lt;var&gt;tagName&lt;/var&gt;. Don't use qualified names (like &quot;html:a&quot;) with this method. When called on an HTML document, &lt;code&gt;createElement()&lt;/code&gt; converts &lt;var&gt;tagName&lt;/var&gt; to lower case before creating the element. In Firefox, Opera, and Chrome, &lt;code&gt;createElement(null)&lt;/code&gt; works like &lt;code&gt;createElement(&quot;null&quot;)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0648a9db8225890339e9c000846ffa483adafb52" translate="yes" xml:space="preserve">
          <source>A string was specified as &lt;code&gt;trackOrKind&lt;/code&gt; which is not valid. The string must be either &lt;code&gt;&quot;audio&quot;&lt;/code&gt; or &lt;code&gt;&quot;video&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3f06ccfa8920f68786eeab85a7372400ed1e68" translate="yes" xml:space="preserve">
          <source>A string which is one of the values in the &lt;a href=&quot;#RTCDataChannelState_enum&quot;&gt;RTCDataChannelState&lt;/a&gt; enum, indicating the current state of the underlying data transport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f669182f50b7141f396d05985c9787d639388d" translate="yes" xml:space="preserve">
          <source>A string which specifies a set of offsets to add to the root's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/bounding_box&quot;&gt;bounding_box&lt;/a&gt; when calculating intersections, effectively shrinking or growing the root for calculation purposes. The syntax is approximately the same as that for the CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/margin&quot;&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt; property; see &lt;a href=&quot;../intersection_observer_api#The_root_element_and_root_margin&quot;&gt;The root element and root margin&lt;/a&gt; in &lt;a href=&quot;../intersection_observer_api&quot;&gt;Intersection Observer API&lt;/a&gt; for more information on how the margin works and the syntax. The default is &quot;0px 0px 0px 0px&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ffb5234e6009562d6ecae9ee60550f55fa87b9" translate="yes" xml:space="preserve">
          <source>A string which specifies the shape of waveform to play; this can be one of a number of standard values, or &lt;code&gt;custom&lt;/code&gt; to use a &lt;a href=&quot;periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt; to describe a custom waveform. Different waves will produce different tones. Standard values are &lt;code&gt;&quot;sine&quot;&lt;/code&gt;, &lt;code&gt;&quot;square&quot;&lt;/code&gt;, &lt;code&gt;&quot;sawtooth&quot;&lt;/code&gt;, &lt;code&gt;&quot;triangle&quot;&lt;/code&gt; and &lt;code&gt;&quot;custom&quot;&lt;/code&gt;. The default is &lt;code&gt;&quot;sine&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f93e82e1ef4413ae92a61554a2507290ecac740f" translate="yes" xml:space="preserve">
          <source>A string which specifies the type of event for which to remove an event listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48bf8b559938eb1635b5076baf6b37c1454c1a4c" translate="yes" xml:space="preserve">
          <source>A string whose characters each represent a single byte of binary data to be encoded into ASCII.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99aa94a17ec23c33482b34b80eb9cf6788c2e1f7" translate="yes" xml:space="preserve">
          <source>A string without the question mark.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a77e6adaa2ca3f163342e518a4bda4e38d8b65d" translate="yes" xml:space="preserve">
          <source>A string you want to display in the alert dialog, or, alternatively, an object that is converted into a string and displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24aa0cae1a4bdfa5582dead49e98faabfef16d51" translate="yes" xml:space="preserve">
          <source>A string, containing the media type(MIME) indicating what type of the file is it for example &quot;image/png&quot; for PNG images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dad814c8bb5e40e9f4371417f3845e88e0a21d2" translate="yes" xml:space="preserve">
          <source>A string, containing the name of the file without path, such as &quot;My Resume.rtf&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6d7a1f949d79f7163c8d95e8b0e3b1567c014d" translate="yes" xml:space="preserve">
          <source>A string, formatted similarly to the CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/margin&quot;&gt;&lt;code&gt;margin&lt;/code&gt;&lt;/a&gt; property's value, which contains offsets for one or more sides of the root's bounding box. These offsets are added to the corresponding values in the root's bounding box before the intersection between the resulting rectangle and the target element's bounds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3db838be835d85c732cefb8441192474724c20" translate="yes" xml:space="preserve">
          <source>A string, representing the client type. The value can be one of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ae2a95c36707fddd184df825a230b93acea10b" translate="yes" xml:space="preserve">
          <source>A string, taken from the enum type &lt;code&gt;&lt;a href=&quot;#RTCStatsType&quot;&gt;RTCStatsType&lt;/a&gt;&lt;/code&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e95b380bb6e68f8d92ebbea2146b404a9530ac" translate="yes" xml:space="preserve">
          <source>A string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe95585e68099994ac72845297ca41847114dff6" translate="yes" xml:space="preserve">
          <source>A structured clone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddac9f9ae515b3723c8911586e47cf2bf8c1b54" translate="yes" xml:space="preserve">
          <source>A style declaration is reset by setting it to &lt;code&gt;null&lt;/code&gt; or an empty string, e.g. &lt;code&gt;elt.style.color = null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b84dd03e6b5f58b324630fb167f4f9fd0134d3e" translate="yes" xml:space="preserve">
          <source>A style sheet consists of &lt;em&gt;&lt;a href=&quot;cssrule&quot;&gt;rules&lt;/a&gt;&lt;/em&gt;, such as &lt;em&gt;&lt;a href=&quot;cssstylerule&quot;&gt;style rules&lt;/a&gt;&lt;/em&gt;(&quot;&lt;code&gt;h1,h2 { font-size: 16pt }&quot;&lt;/code&gt;), various &lt;em&gt;at-rules&lt;/em&gt; (&lt;code&gt;@import&lt;/code&gt;, &lt;code&gt;@media&lt;/code&gt;, ...), etc. This interface lets you inspect and modify the list of rules in the stylesheet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8c87f212b733331859e6b520e83d1667ece400" translate="yes" xml:space="preserve">
          <source>A stylesheet is associated with at most one &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, which it applies to (unless &lt;a href=&quot;stylesheet/disabled&quot;&gt;disabled&lt;/a&gt;). A list of &lt;code&gt;CSSStyleSheet&lt;/code&gt; objects for a given document can be obtained using the &lt;a href=&quot;documentorshadowroot/stylesheets&quot;&gt;&lt;code&gt;document.styleSheets&lt;/code&gt;&lt;/a&gt; property. A specific style sheet can also be accessed from its &lt;em&gt;owner&lt;/em&gt; object (&lt;code&gt;Node&lt;/code&gt; or &lt;code&gt;CSSImportRule&lt;/code&gt;), if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="904a7d25f9180b0fab8b5c3d275e8f34af09febd" translate="yes" xml:space="preserve">
          <source>A sublocality is an area within a city, such as a neighborhood, borough, or district. In the United Kingdom, this is used to indicate the &lt;strong&gt;post town&lt;/strong&gt; in the United Kingdom (known officially by the Royal Mail as the &lt;strong&gt;dependent locality&lt;/strong&gt;). This is a disambiguating feature of addresses in places where a city may have areas that duplicate street names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c333d2a1284819b4378afe08c884f60b3dce1c" translate="yes" xml:space="preserve">
          <source>A summary of the interfaces' implementation status is provided below, including a link to more detailed information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561bee65044d216769f2b694c2e061b0d957186d" translate="yes" xml:space="preserve">
          <source>A supporting browser installed &amp;mdash; the latest &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/channel/desktop/&quot;&gt;Firefox Nightly&lt;/a&gt; or &lt;a href=&quot;https://www.google.com/chrome/index.html&quot;&gt;Chrome&lt;/a&gt; are your best options right now, on desktop or mobile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0e1abd0d4b79d7a22df74f3d330a45146209b1" translate="yes" xml:space="preserve">
          <source>A table with a caption. Although the table's border box doesn't include the caption, the client rects do include the caption.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6091354f4a2f13f1b1ab73ab3657fa8caba70e" translate="yes" xml:space="preserve">
          <source>A table's &lt;a href=&quot;../element/innerhtml&quot;&gt;&lt;code&gt;innerHTML&lt;/code&gt;&lt;/a&gt; property should never be used to modify a table, although you can use it to write an entire table or the content of a cell.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd03c189f7e3aae959fe0040c0e99547889235a0" translate="yes" xml:space="preserve">
          <source>A term commonly used in VR because it is a major handicap of using an HMD &amp;mdash; we are constantly fooling the eye with what we are showing in the app canvas, and this leads to the eyes doing a lot more work than they normally would, so using VR apps for any extended period of time can lead to eye strain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cccc8f6e37c80279e613fc2d586442e1228f319" translate="yes" xml:space="preserve">
          <source>A text label for accessibility tools to use as a description of the region, if there is no control. Defaults to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80f70d97eed196d8df034ca64d2174ec30c5443" translate="yes" xml:space="preserve">
          <source>A text string that indicates the format of the attStmt. The &lt;a href=&quot;https://www.w3.org/TR/webauthn/#defined-attestation-formats&quot;&gt;WebAuthn specification defines a number of formats&lt;/a&gt;; however, formats may also be defined in other specifications and registered in an &lt;a href=&quot;https://www.w3.org/TR/webauthn/#sctn-att-fmt-reg&quot;&gt;IANA registry&lt;/a&gt;. Formats defined by WebAuthn are: &quot;packed&quot;, &quot;tpm&quot;, &quot;android-key&quot;, &quot;android-safetynet&quot;, &quot;fido-u2f&quot;, and &quot;none&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e973424762fef3568e3869b4e5ae4b5b4a30f4" translate="yes" xml:space="preserve">
          <source>A text string. The string is added to the buffer in UTF-8 format, and the value of &lt;code&gt;bufferedAmount&lt;/code&gt; is increased by the number of bytes required to represent the UTF-8 string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fdacbd5077fac4b8cf5a71f7d25c067dd38a021" translate="yes" xml:space="preserve">
          <source>A textBaseline example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b8274f9a951d1948bd72a25a563a3cee651061" translate="yes" xml:space="preserve">
          <source>A texture unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d9b034e1735700bcc12b1008c07406a21edeca" translate="yes" xml:space="preserve">
          <source>A three dimensional point is defined in a typical Cartesian coordinate system. The added 4th dimension changes this point into a homogeneous coordinate. It still represents a point in 3D space and it can easily be demonstrated how to construct this type of coordinate through a pair of simple functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e2963f90198dc7dfbaa8fa9cecbb30fc863eae" translate="yes" xml:space="preserve">
          <source>A threshold of 1.0 means that when 100% of the target is visible within the element specified by the &lt;code&gt;root&lt;/code&gt; option, the callback is invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74dc025dbb3c7951ea8e2c6b76a9411cc0ce0960" translate="yes" xml:space="preserve">
          <source>A total amount for the payment request that overrides value in details.total. This is typically used when &lt;code&gt;details.modifiers.additionalItems&lt;/code&gt; adds a discount or a surchase to the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed0e6d83e96f523320edcd2fd589f2ec23835bc" translate="yes" xml:space="preserve">
          <source>A touch of CSS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464b94e32caa3fca0f3199105f66fae0d8fb0683" translate="yes" xml:space="preserve">
          <source>A touch-sensitive surface. This may be a trackpad, a touch screen, or even a virtual mapping of a user's desk surface (or mousepad) with the physical screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097c998721abb96241d220239d5f7b76b5874d4a" translate="yes" xml:space="preserve">
          <source>A transceiver is uniquely identified using its &lt;a href=&quot;rtcrtptransceiver/mid&quot;&gt;&lt;code&gt;mid&lt;/code&gt;&lt;/a&gt; property, which is the same as the media ID (&lt;code&gt;mid&lt;/code&gt;) of its corresponding m-line. An &lt;code&gt;RTCRtpTransceiver&lt;/code&gt; is &lt;strong&gt;associated&lt;/strong&gt; with an m-line if its &lt;code&gt;mid&lt;/code&gt; is non-null; otherwise it's considered disassociated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470870d8f2ea70472224071f20ad087b643f2b86" translate="yes" xml:space="preserve">
          <source>A translated version of the primary audio track.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56bfcbc613dddd425d8b468d4f926e8ee8b0dc67" translate="yes" xml:space="preserve">
          <source>A translation matrix is based off the identity matrix. It moves the object in one of 3 directions, x, y, or z. The easiest way to think of a translation is like picking up a coffee cup. The coffee cup must be kept upright and oriented the same way so that no coffee is spilled. It can move up in the air off the table and around the air in space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c198f5be139a4adb0e77c1f29d89fc23bad9f6" translate="yes" xml:space="preserve">
          <source>A tutorial and example which turns a WebSocket-based chat system created for a previous example and adds support for opening video calls among participants. The chat server's WebSocket connection is used for WebRTC signaling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fa489447c5b260cf0a7ca543ec4707e7c63bfe" translate="yes" xml:space="preserve">
          <source>A typical (simple) WebVR app works like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7092d0973e43197904921e425ba0fec7ca569014" translate="yes" xml:space="preserve">
          <source>A typical (simple) WebVR app would work like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7714554602b78e32bde26ae9b9ba9774879e865" translate="yes" xml:space="preserve">
          <source>A typical registration process has six steps, as illustrated in Figure 1 and described further below. This is a simplification of the data required for the registration process that is only intended to provide an overview. The full set of required fields, optional fields, and their meanings for creating a registration request can be found in the &lt;a href=&quot;publickeycredentialcreationoptions&quot;&gt;&lt;code&gt;PublicKeyCredentialCreationOptions&lt;/code&gt;&lt;/a&gt; dictionary. Likewise, the full set of response fields can be found in the &lt;a href=&quot;publickeycredential&quot;&gt;&lt;code&gt;PublicKeyCredential&lt;/code&gt;&lt;/a&gt; interface (where &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/response&quot;&gt;&lt;code&gt;PublicKeyCredential.response&lt;/code&gt;&lt;/a&gt; is the &lt;a href=&quot;authenticatorattestationresponse&quot;&gt;&lt;code&gt;AuthenticatorAttestationResponse&lt;/code&gt;&lt;/a&gt; interface). Note most JavaScript programmers that are creating an application will only really care about steps 1 and 5 where the create() function is called and subsequently returns; however, steps 2, 3, and 4 are essential to understanding the processing that takes place in the browser and authenticator and what the resulting data means.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df514fdcfde973c13ca015967f049bbd6296442a" translate="yes" xml:space="preserve">
          <source>A typical use case, is to resume the iteration where a previous cursor has been closed, without having to compare the keys one by one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a204419b3c28f359f32802b026b5df1522b685" translate="yes" xml:space="preserve">
          <source>A unique ID can be found in the &lt;a href=&quot;id&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4211ba1d55766c207ae7628f28f6b0fdffe26a6" translate="yes" xml:space="preserve">
          <source>A unique identifier for a service worker registration &amp;mdash; the scope URL of the registration object you want to return. This is usually a relative URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47c4830ae49532475ff0e07aeb421a1d93ddf2a" translate="yes" xml:space="preserve">
          <source>A unique identifier for the pointer causing the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7396040aa352917f55f729fa9de060a70a0681a2" translate="yes" xml:space="preserve">
          <source>A unique string generated by the content decription module for the current media object and its associated keys or licenses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9770464bbad39fc1ea5365f89c94cd088f2aed1a" translate="yes" xml:space="preserve">
          <source>A unitless &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; interpreted as a value in degrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2365cf764b3ce64a498f249242e2efa5ddf294" translate="yes" xml:space="preserve">
          <source>A usable pairing of local and remote candidates has been found for all components of the connection, and the connection has been established. It's possible that gathering is still underway, and it's also possible that the ICE agent is still checking candidates against one another looking for a better connection to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c5945bc65893d37620f44ff8c0be4c9005633e" translate="yes" xml:space="preserve">
          <source>A useful guide to how 3D transform matrices work, and can be used on the web &amp;mdash; both for WebGL calculations and in CSS3 transforms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1449de31d894519699b9a1ab067099be557f77f3" translate="yes" xml:space="preserve">
          <source>A user can normally only select one range at a time, so the &lt;code&gt;rangeCount&lt;/code&gt; will usually be &lt;code&gt;1&lt;/code&gt;. Scripting can be used to make the selection contain more than 1 range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989652ea9e55cc71d7851dca6482907e07759f38" translate="yes" xml:space="preserve">
          <source>A user may make a selection from left to right (in document order) or right to left (reverse of document order). The &lt;strong&gt;anchor&lt;/strong&gt; is where the user began the selection and the &lt;strong&gt;focus&lt;/strong&gt; is where the user ends the selection. If you make a selection with a desktop mouse, the anchor is placed where you pressed the mouse button and the focus is placed where you released the mouse button. Anchor and focus should not be confused with the start and end positions of a selection, since anchor can be placed before the focus or vice versa, depending on the direction you made your selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec7a2344403395dbaddc57b1775b9a65dcd0e67" translate="yes" xml:space="preserve">
          <source>A user may make a selection from left to right (in document order) or right to left (reverse of document order). The anchor is where the user began the selection. This can be visualized by holding the Shift key and pressing the arrow keys on your keyboard. The selection's anchor does not move, but the selection's focus, the other end of the selection, does move.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7cdaa6f9206d42f83087bbdca654217dc089f5" translate="yes" xml:space="preserve">
          <source>A user may make a selection from left to right (in document order) or right to left (reverse of document order). The focus is where the user ended the selection. This can be visualized by holding the Shift key and pressing the arrow keys on your keyboard to modify the current selection. The selection's focus moves, but the selection's anchor, the other end of the selection, does not move.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f476155c6df49bcad8a3a192a9a7e9f4f6d70ec8" translate="yes" xml:space="preserve">
          <source>A user selects the (imaginary) text &quot;ve two ea&quot; from &quot;Rabbits have two ears.&quot; on a web page. The user then clicks a button that executes the JavaScript snippet &lt;code&gt;window.getSelection().deleteFromDocument()&lt;/code&gt;. The document's text becomes &quot;Rabbits hars.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83397bb41ded4bd6d2cac43902c54d177c450520" translate="yes" xml:space="preserve">
          <source>A user-readable title string for the protocol handler. This will be displayed to the user in interface objects as needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cfa328008fdf6325f05703a5e5c21cec6df07d2" translate="yes" xml:space="preserve">
          <source>A valid &lt;a href=&quot;../credential&quot;&gt;&lt;code&gt;Credential&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4b6188bce498cf26c7937f06a7223754634bbc" translate="yes" xml:space="preserve">
          <source>A valid &lt;a href=&quot;../mediadecodingconfiguration&quot;&gt;&lt;code&gt;MediaDecodingConfiguration&lt;/code&gt;&lt;/a&gt; dictionary containing a valid media decoding &lt;code&gt;type&lt;/code&gt; of &lt;code&gt;file&lt;/code&gt; or &lt;code&gt;media-source&lt;/code&gt; and a valid media configuration: either an &lt;a href=&quot;../audioconfiguration&quot;&gt;&lt;code&gt;AudioConfiguration&lt;/code&gt;&lt;/a&gt; or a &lt;a href=&quot;../videoconfiguration&quot;&gt;&lt;code&gt;VideoConfiguration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e5572c3e4d3d81e21eeabb7e371ad6a5dd5399" translate="yes" xml:space="preserve">
          <source>A valid &lt;a href=&quot;../mediaencodingconfiguration&quot;&gt;&lt;code&gt;MediaEncodingConfiguration&lt;/code&gt;&lt;/a&gt; dictionary containing a valid media encoding type of &lt;code&gt;record&lt;/code&gt; or &lt;code&gt;transmission&lt;/code&gt; and a valid media configuration: either an &lt;a href=&quot;../audioconfiguration&quot;&gt;&lt;code&gt;AudioConfiguration&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../videoconfiguration&quot;&gt;&lt;code&gt;VideoConfiguration&lt;/code&gt;&lt;/a&gt; dictionary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df7ead435e0d89ff64ffe2783fd3b33061732ce" translate="yes" xml:space="preserve">
          <source>A valid &lt;a href=&quot;audioconfiguration&quot;&gt;audio configuration&lt;/a&gt; includes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9487bec3241cec97b68535540ccd0a7a9bb177cd" translate="yes" xml:space="preserve">
          <source>A valid &lt;a href=&quot;videoconfiguration&quot;&gt;video configuration&lt;/a&gt; includes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23b8f21b5b8b89f97f5a16ae5ce900b1fb241458" translate="yes" xml:space="preserve">
          <source>A valid XML document. The exact contents can vary across user agents and recognition engines, but all supporting implementations will expose a valid XML document complete with an EMMA namespace. If the speech recognition system does not supply EMMA data then the user agent will return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376001736ca69b2ccb5c4ef38cacb01a73d85b21" translate="yes" xml:space="preserve">
          <source>A valid configuration includes a valid encoding configuration type or decoding configuration type and a valid &lt;a href=&quot;audioconfiguration&quot;&gt;audio configuration&lt;/a&gt; or &lt;a href=&quot;videoconfiguration&quot;&gt;video configuration&lt;/a&gt;. If you plan on querying &lt;a href=&quot;mediaencodingconfiguration&quot;&gt;encoding&lt;/a&gt; information, set the media type to record or transmission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdcdb160d5e2c49dd27d787b1fb4126d07911cc8" translate="yes" xml:space="preserve">
          <source>A valid media decoding configuration, to be submitted as the parameter for &lt;a href=&quot;mediacapabilities/decodinginfo&quot;&gt;&lt;code&gt;mediaCapabilities.decodingInfo()&lt;/code&gt;&lt;/a&gt; method, has it's `type` set as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979605ac5cbba5bb2ab8c6083c58d82a15162c17" translate="yes" xml:space="preserve">
          <source>A valid media encoding configuration, to be submitted as the parameter for &lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt;&lt;code&gt;mediaCapabilities.encodingInfo()&lt;/code&gt;&lt;/a&gt; method, has it's `type` set as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d06fa9bad9a9f15775b51f094cd990aadca1057" translate="yes" xml:space="preserve">
          <source>A value defined in the &lt;a href=&quot;https://w3c.github.io/webappsec-csp/#enumdef-securitypolicyviolationeventdisposition&quot;&gt;SecurityPolicyViolationEventDisposition enum&lt;/a&gt; representing the URI of the blocked resource. Possible values are &lt;code&gt;&quot;enforce&quot;&lt;/code&gt; or &lt;code&gt;&quot;report&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16abc66f13fb644fea454881c00b0522d1e7b7aa" translate="yes" xml:space="preserve">
          <source>A value defined in the &lt;code&gt;&lt;a href=&quot;https://dom.spec.whatwg.org/#enumdef-shadowrootmode&quot;&gt;ShadowRootMode&lt;/a&gt;&lt;/code&gt; enum &amp;mdash; either &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;closed&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5efea0fdfcc2e758b93833fca75e02470d538cc2" translate="yes" xml:space="preserve">
          <source>A value of 1.0 indicates it should play at the same speed as its sampling rate, values less than 1.0 cause the sound to play more slowly, while values greater than 1.0 result in audio playing faster than normal. The default value is &lt;code&gt;1.0&lt;/code&gt;. When set to another value, the &lt;code&gt;AudioBufferSourceNode&lt;/code&gt; resamples the audio before sending it to the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b717db290cca8960182e2f4935a104e3f14caf53" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;auto&lt;/code&gt; means the browser is free to apply its default touch behavior (to the specified region) and the value of &lt;code&gt;none&lt;/code&gt; disables the browser's default touch behavior for the region. The values &lt;code&gt;pan-x&lt;/code&gt; and &lt;code&gt;pan-y&lt;/code&gt;, mean that touches that begin on the specified region are only for horizontal and vertical scrolling, respectively. The value &lt;code&gt;manipulation&lt;/code&gt; means the browser may consider touches that begin on the element are only for scrolling and zooming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c49d2305031857a3663dba760dbebe64718e73" translate="yes" xml:space="preserve">
          <source>A value of &lt;code&gt;false&lt;/code&gt; indicates that the audio should continue to be transmitted regardless of whether or not speech is detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26564b7a172f8435e508bb56b82a9b9539ad467d" translate="yes" xml:space="preserve">
          <source>A value of any data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48e8f4d3c390fed5269c47dd6f3c6ca4a9b7238" translate="yes" xml:space="preserve">
          <source>A value of any type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb76c29a0cb33f270e0e54a84267a422a243f6d" translate="yes" xml:space="preserve">
          <source>A value or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; indicating why the promise was rejected, as passed to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/reject&quot;&gt;&lt;code&gt;Promise.reject()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af741cbe7ecb6dfff7390f7db45b41142e9bf835" translate="yes" xml:space="preserve">
          <source>A value or object which provides information you can use to understand why the promise was rejected. This could be anything from an error code to an object with text, links, and whatever else you might wish to include.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e2dadce0c7e2a664b9a31af3b699060e4ca8cc9" translate="yes" xml:space="preserve">
          <source>A value specified for &lt;code&gt;input&lt;/code&gt; or &lt;code&gt;output&lt;/code&gt; is invalid, referring to a node which doesn't exist or outside the permitted range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8adab2b020b07e7a154c1d156a227fcff0f163fc" translate="yes" xml:space="preserve">
          <source>A value that further specifies the value returned by the &lt;a href=&quot;performanceentry/entrytype&quot;&gt;&lt;code&gt;PerformanceEntry.entryType&lt;/code&gt;&lt;/a&gt; property. The value of both depends on the subtype. See property page for valid values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9965cbb39caf8e7c2e464ffb2a2f23a7a79c5fff" translate="yes" xml:space="preserve">
          <source>A value that is cloned and not shared is called &lt;em&gt;message&lt;/em&gt;. As you will probably know by now, &lt;em&gt;messages&lt;/em&gt; can be sent to and from the main thread by using &lt;code&gt;postMessage()&lt;/code&gt;, and the &lt;code&gt;message&lt;/code&gt; event's &lt;a href=&quot;../messageevent/data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute contains data passed back from the worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6fae9e18e5847edbb6d779feccbc7c1c70355e1" translate="yes" xml:space="preserve">
          <source>A value that is or resolves to an &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05cc020bd368e5d03ae8b12eb5b029e670aa4f11" translate="yes" xml:space="preserve">
          <source>A value was specified using the cm units defined in CSS2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e8825cc31aae3308899de35b7131396e40076f" translate="yes" xml:space="preserve">
          <source>A value was specified using the em units defined in CSS2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ab72e11e0cea46bbcff687422957a1a89933c8a" translate="yes" xml:space="preserve">
          <source>A value was specified using the ex units defined in CSS2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d42ac81a89959753494749755dd03fa4b55dacb3" translate="yes" xml:space="preserve">
          <source>A value was specified using the in units defined in CSS2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17d8ea32d929dcc1f132dc2c81c6715b77814d1" translate="yes" xml:space="preserve">
          <source>A value was specified using the mm units defined in CSS2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311be1579f60f8e5d183599c74f4d2735cbaaa59" translate="yes" xml:space="preserve">
          <source>A value was specified using the pc units defined in CSS2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d39c914bf41d104068a960508ec07ddb589630f" translate="yes" xml:space="preserve">
          <source>A value was specified using the pt units defined in CSS2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3f250cbfb34535043f0546e72a4ab0fcbd0039" translate="yes" xml:space="preserve">
          <source>A value was specified using the px units defined in CSS2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543425a99b5ddf94d3609098962b7c0ad338eae0" translate="yes" xml:space="preserve">
          <source>A variable to contain the data that will be transfered out of the device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cae7a98807a55e58f10d21d33edd0219b902389" translate="yes" xml:space="preserve">
          <source>A variable to contain the length of the data that will be read back from the device. The actual data is in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/USBInTransferResult&quot;&gt;&lt;code&gt;USBInTransferResult&lt;/code&gt;&lt;/a&gt; in the resolved Promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8228ab0e1a879dfb8f392dcd3f0946d46a62274f" translate="yes" xml:space="preserve">
          <source>A variable to hold the data returned by the transfer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ebe6761996befe7f790af5dd589cd53c461001" translate="yes" xml:space="preserve">
          <source>A variant of the &lt;code&gt;send()&lt;/code&gt; method that sends binary data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2e5aff31cdf634b0d3c33f65bee99d8b59c82e" translate="yes" xml:space="preserve">
          <source>A version of the main video track with captions burnt in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfc5b999f474a78ce4761b4bfe58b0a1c3e204b" translate="yes" xml:space="preserve">
          <source>A version of the main video track with subtitles burnt in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896b84f41e7c256da760b7df9c240db434db9dd0" translate="yes" xml:space="preserve">
          <source>A very basic color animation, done by clearing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebGL&quot;&gt;WebGL&lt;/a&gt; drawing buffer with a different random color every second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af69641d24771b5f78d7387acf9300497d61ee21" translate="yes" xml:space="preserve">
          <source>A very basic shader program that draws a solid color square.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3e0b0ac5fb51874147ef0ebe63931d423bc585" translate="yes" xml:space="preserve">
          <source>A viable candidate pair has been found and selected, and the &lt;code&gt;RTCIceTransport&lt;/code&gt; has connected the two peers together using that pair. However, there are still candidates pairings to consider, and there may still be gathering underway on one or both of the two devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00da3a20c2ddbfc6fe0e7e15ed7677e8869cd580" translate="yes" xml:space="preserve">
          <source>A video track containing a commentary. This might be used to contain the director's commentary track on a movie, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dd5d3a21b307585069230f4d14c647e3d388ba7" translate="yes" xml:space="preserve">
          <source>A view, as mentioned below, refers to a typed array representing the destination region to which the associated &lt;code&gt;ReadableByteStreamController&lt;/code&gt; controller can write generated data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe74e82ea0b82da3ea8b40f9320e85aefcdc137" translate="yes" xml:space="preserve">
          <source>A way to convert a canvas to an ico (Mozilla only)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2f2cfecd9dce07c0becd459f4eef500aa7fec07" translate="yes" xml:space="preserve">
          <source>A worker is an object created using a constructor (e.g. &lt;a href=&quot;../worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt;) that runs a named JavaScript file &amp;mdash; this file contains the code that will run in the worker thread; workers run in another global context that is different from the current &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt;. Thus, using the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; shortcut to get the current global scope (instead of &lt;a href=&quot;../window/self&quot;&gt;&lt;code&gt;self&lt;/code&gt;&lt;/a&gt;) within a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; will return an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd447a53ee6505a3c89a3b44b352d747a33ba15" translate="yes" xml:space="preserve">
          <source>A worker is an object created using a constructor (e.g. &lt;a href=&quot;worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt;) that runs a named JavaScript file &amp;mdash; this file contains the code that will run in the worker thread; workers run in another global context that is different from the current &lt;a href=&quot;window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt;. This context is represented by either a &lt;a href=&quot;dedicatedworkerglobalscope&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; object (in the case of dedicated workers - workers that are utilized by a single script), or a &lt;a href=&quot;sharedworkerglobalscope&quot;&gt;&lt;code&gt;SharedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; (in the case of shared workers - workers that are shared between multiple scripts).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9d8c107adf467b368a13e6996d99660279f52f" translate="yes" xml:space="preserve">
          <source>A&lt;sub&gt;C&lt;/sub&gt;</source>
          <target state="translated">A&lt;sub&gt;C&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="37dc86911b85f2d57dcc304f8c31669661ab1f8e" translate="yes" xml:space="preserve">
          <source>A&lt;sub&gt;C&lt;/sub&gt;, A&lt;sub&gt;C&lt;/sub&gt;, A&lt;sub&gt;C&lt;/sub&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0597c792996bdd593ff1899f2f82b5dec4d4ba9" translate="yes" xml:space="preserve">
          <source>A&lt;sub&gt;C&lt;/sub&gt;, A&lt;sub&gt;C&lt;/sub&gt;, A&lt;sub&gt;C&lt;/sub&gt;, A&lt;sub&gt;C&lt;/sub&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c4fb3161bdf5f5d30ce030fb70ec5ae32ee3b8" translate="yes" xml:space="preserve">
          <source>A&lt;sub&gt;D&lt;/sub&gt;</source>
          <target state="translated">A&lt;sub&gt;D&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="3ec41c25dedd49ed7b4c892a2364770dc05d381d" translate="yes" xml:space="preserve">
          <source>A&lt;sub&gt;D&lt;/sub&gt;, A&lt;sub&gt;D&lt;/sub&gt;, A&lt;sub&gt;D&lt;/sub&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b259d974a1731bb0c23bba1d6d03c84c31525d1e" translate="yes" xml:space="preserve">
          <source>A&lt;sub&gt;D&lt;/sub&gt;, A&lt;sub&gt;D&lt;/sub&gt;, A&lt;sub&gt;D&lt;/sub&gt;, A&lt;sub&gt;D&lt;/sub&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3feef21ca7f6e4c63b25e15f12bf521c780b904e" translate="yes" xml:space="preserve">
          <source>A&lt;sub&gt;S&lt;/sub&gt;</source>
          <target state="translated">A&lt;sub&gt;S&lt;/sub&gt;</target>
        </trans-unit>
        <trans-unit id="63085a8d29e84034132c3ad07b7993fa4b5a2748" translate="yes" xml:space="preserve">
          <source>A&lt;sub&gt;S&lt;/sub&gt;, A&lt;sub&gt;S&lt;/sub&gt;, A&lt;sub&gt;S&lt;/sub&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10531cb2caa0c708c98142ad5722f66cd4032a27" translate="yes" xml:space="preserve">
          <source>A&lt;sub&gt;S&lt;/sub&gt;, A&lt;sub&gt;S&lt;/sub&gt;, A&lt;sub&gt;S&lt;/sub&gt;, A&lt;sub&gt;S&lt;/sub&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca25ec9c4fb3553b64cd0127c5a76ef22d1c2ff" translate="yes" xml:space="preserve">
          <source>AElement</source>
          <target state="translated">AElement</target>
        </trans-unit>
        <trans-unit id="47fb044ff63a407dc3fe63adfa709884cef8023f" translate="yes" xml:space="preserve">
          <source>AElement.target</source>
          <target state="translated">AElement.target</target>
        </trans-unit>
        <trans-unit id="3a9ed1c68331f84af0cb00f84d95e144c4acf040" translate="yes" xml:space="preserve">
          <source>AF improves the quality of mipmapped texture access when viewing a textured primitive at an oblique angle. Using just mipmapping, these lookups have a tendency to average to grey.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063707d45c585c051cd6ba030c8b5a3911c408a2" translate="yes" xml:space="preserve">
          <source>AJAX</source>
          <target state="translated">AJAX</target>
        </trans-unit>
        <trans-unit id="c87278e27a09327c620856fc9212779a658058d2" translate="yes" xml:space="preserve">
          <source>ANDing the fragment's coverage with the temporary coverage value. See &lt;a href=&quot;samplecoverage&quot;&gt;&lt;code&gt;WebGLRenderingContext.sampleCoverage()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812fac581a187b981b02cd89789352495700fae5" translate="yes" xml:space="preserve">
          <source>ANGLE instanced arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ad7bbb09789e6dfb4476e2b14278c86321907a" translate="yes" xml:space="preserve">
          <source>ANGLE_: Extensions that are written by the &lt;a href=&quot;https://en.wikipedia.org/wiki/ANGLE_%28software%29&quot;&gt;ANGLE library&lt;/a&gt; authors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab59f272331e0e93ca310758eb7aa1a6f72831a" translate="yes" xml:space="preserve">
          <source>ANGLE_instanced_arrays&lt;br/&gt;&lt;small&gt;The definition of 'ANGLE_instanced_arrays' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="d6d7335e2254516d86344944df40426b900cad71" translate="yes" xml:space="preserve">
          <source>API (HTML or XML page) = DOM + JS (scripting language)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e6db0ea846e6bf95af2d6451cd89132b7414de" translate="yes" xml:space="preserve">
          <source>API: A basic ray-caster</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c30490cd6aa0f2fc76af682b95d6ae3ffae931" translate="yes" xml:space="preserve">
          <source>API: Adding 2D content to a WebGL context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a1dbe992bcb165877b2a66eb877dde16bff196" translate="yes" xml:space="preserve">
          <source>API: Advanced animations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad8a897f05c708772004f80687972c2db1ab25b4" translate="yes" xml:space="preserve">
          <source>API: Animating objects with WebGL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b6b9344871a30ecf183a196e3f81cbebf9715e" translate="yes" xml:space="preserve">
          <source>API: Animating textures in WebGL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41630905207a0631203badf6687a915e6685f6d" translate="yes" xml:space="preserve">
          <source>API: Applying styles and colors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5df20157e19afc7cb3315cec17d33a52d3eb649" translate="yes" xml:space="preserve">
          <source>API: Basic 2D animation example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e956114e11944853748fc3d6256df31fcff725b8" translate="yes" xml:space="preserve">
          <source>API: Basic Concepts Behind IndexedDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ab1cf75b6e42c4aa5fd8f6f437616aa04b803e" translate="yes" xml:space="preserve">
          <source>API: Basic animations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896dcf5af864fe43a024e689872ca1bbd9316040" translate="yes" xml:space="preserve">
          <source>API: Basic concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2564f21b38b1f891154993033537980a724b62" translate="yes" xml:space="preserve">
          <source>API: Basic usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2406c1ae476cdf7411bd9be5fe8da1c53e9e2f99" translate="yes" xml:space="preserve">
          <source>API: Best Practices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd3d71d1310b12af18045c72c48dfafd158248c1" translate="yes" xml:space="preserve">
          <source>API: Browser storage limits and eviction criteria</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb8a5310574596513454c9bbfda3ebd0fc42d31" translate="yes" xml:space="preserve">
          <source>API: By example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89c4db1384666026e091051352ca5eede70d7e7" translate="yes" xml:space="preserve">
          <source>API: Compositing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b80678a1b85164684b018aab85197f75c9bb05d" translate="yes" xml:space="preserve">
          <source>API: Compositing.Example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5b50d3ae3f907e5bf55025b771adacbb787d6f" translate="yes" xml:space="preserve">
          <source>API: Compressed texture formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433058088d21a0fc06d8eef2e4ea93e941f7cd2c" translate="yes" xml:space="preserve">
          <source>API: Concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b3a4ae4e9e7bd24270ced1d5a15fa71a261e83" translate="yes" xml:space="preserve">
          <source>API: Connectivity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff6cd9f47ad4713b303e04f575ef9b989ede49f" translate="yes" xml:space="preserve">
          <source>API: Constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25e6487a25944ec5dcd5408e8a3b11a57c0b738" translate="yes" xml:space="preserve">
          <source>API: Constraints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f736e995f9e8fc28bde71b2192f5a64ef22f45e" translate="yes" xml:space="preserve">
          <source>API: Creating 3D objects using WebGL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926a33d939b64918b040fac4691aa46951263710" translate="yes" xml:space="preserve">
          <source>API: Cross-global fetch usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdc729360909b89517097e63fb3e334b61ab01d5" translate="yes" xml:space="preserve">
          <source>API: Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132127439b52e9ca83d603d322878443b488784b" translate="yes" xml:space="preserve">
          <source>API: Drawing shapes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1565267f9f6694292670f6bb5cbe1be0de32cf" translate="yes" xml:space="preserve">
          <source>API: Drawing text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4de4557044cb4ee824ad34747ee6e28c97d08aa" translate="yes" xml:space="preserve">
          <source>API: Finale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce2841c92860371d5ee0242a273b65ed2b8b93d" translate="yes" xml:space="preserve">
          <source>API: Functions and classes available to workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8815eed870ff5ad1a0a246ba197e3aa61f95e0" translate="yes" xml:space="preserve">
          <source>API: Getting started with WebGL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859b789305fa1535b51cc8f45c4fee9a9bbc3e6d" translate="yes" xml:space="preserve">
          <source>API: Guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a340f3969b448dced56c1577c4461d13f63a97c" translate="yes" xml:space="preserve">
          <source>API: Hit regions and accessibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5540a3dac46f2f3638c94da6e6c75480ac1d1eb" translate="yes" xml:space="preserve">
          <source>API: Intro to RTP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf490f131e6e488044cc5c455cb331f93775a6b" translate="yes" xml:space="preserve">
          <source>API: Lighting in WebGL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be63d73a35fa54bdcb2b6a86ce6d610076b713bb" translate="yes" xml:space="preserve">
          <source>API: Manipulating video using canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3618350cd0c3a3a122e3861ea6b785ea6b51e68b" translate="yes" xml:space="preserve">
          <source>API: Matrix math for the web</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332b782a9cfae912bbdbd64bb5a167c57de17bab" translate="yes" xml:space="preserve">
          <source>API: Optimizing canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a13a3ef4811a81374ea227a9bcaf91b3712810" translate="yes" xml:space="preserve">
          <source>API: Pixel manipulation with canvas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68584cc0f680522055f02753e191c32c69272724" translate="yes" xml:space="preserve">
          <source>API: Protocols</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2cd020fc631a19386952863ea48722c78bfb0f" translate="yes" xml:space="preserve">
          <source>API: Session lifetime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc26094e60bbda045d5576d7085141e5363873a3" translate="yes" xml:space="preserve">
          <source>API: Signaling and video calling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad59c130d698fe9b63601787232506abe1030e88" translate="yes" xml:space="preserve">
          <source>API: Simple RTCDataChannel sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9c0c62110e16a61ee0beda103d667c252bebd8" translate="yes" xml:space="preserve">
          <source>API: Structured clone algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487f3a023d0cb580ac9a6b09c216ba57ee91b050" translate="yes" xml:space="preserve">
          <source>API: Taking still photos</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="345a19c3faee33c8c408e9380ad6fff1a2c80117" translate="yes" xml:space="preserve">
          <source>API: Transformations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7867b4392c21abdae109e062e45c0d249b185bc" translate="yes" xml:space="preserve">
          <source>API: Tutorial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f989c2ce4c730139a6753dca930153cef2ace60c" translate="yes" xml:space="preserve">
          <source>API: Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d9c3117ce37d5e913d924fddcefe8bf61b7915" translate="yes" xml:space="preserve">
          <source>API: Using DTMF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6e12103a7c838b5d1ae51e35b097bd7d7230e4" translate="yes" xml:space="preserve">
          <source>API: Using Extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64c2aef9cb2ac9be0b1150b356fcad33385525d2" translate="yes" xml:space="preserve">
          <source>API: Using Fetch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b2a35b9ee6f8d5ad4f00b8eb30df13d917861f5" translate="yes" xml:space="preserve">
          <source>API: Using IndexedDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d86a499eca35beda4ce11849ce3283aec3bcf056" translate="yes" xml:space="preserve">
          <source>API: Using IndexedDB in chrome</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55d24678f72fe92deceee65809fd3ef775cedca1" translate="yes" xml:space="preserve">
          <source>API: Using VR controllers with WebVR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011285a3cea70690dc07142ce282c19ec9c5c2f5" translate="yes" xml:space="preserve">
          <source>API: Using channel messaging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="634731e8534ccfd0fd95231315151e86e4ad97db" translate="yes" xml:space="preserve">
          <source>API: Using data channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1b54e20ac59da7702f0abcf2ecd2fa002831db" translate="yes" xml:space="preserve">
          <source>API: Using images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4306eee42a9a4dcc6f8faed1f79bfb53c836b6" translate="yes" xml:space="preserve">
          <source>API: Using shaders to apply color in WebGL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10b9d199dddc71fe11f6991cd0cc628dc2d95254" translate="yes" xml:space="preserve">
          <source>API: Using textures in WebGL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48dcbbd7cc27b2d7403d76f27afd5e3aac72acf" translate="yes" xml:space="preserve">
          <source>API: Using the Performance API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfd168898c20963cdb772b3a45cb27b13e75f285" translate="yes" xml:space="preserve">
          <source>API: Using the WebVR API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d16b89d19eaeb403506ad6b730b9e2f4f36845a" translate="yes" xml:space="preserve">
          <source>API: Using web workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb4a9ad65ef2fdc07f9becc2d4ef6c8dcce66cc" translate="yes" xml:space="preserve">
          <source>API: WebGL best practices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2591bf65b7a5dfedb95be391e481c99d46642f1" translate="yes" xml:space="preserve">
          <source>API: WebGL model view projection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4a38967d8ff0c8990ecf5b229461757ec61917" translate="yes" xml:space="preserve">
          <source>API: adapter.js</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf99f6c1bdd38b7891eb68c77fa777647211d8aa" translate="yes" xml:space="preserve">
          <source>APIs available in workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df9070118fddd671c88fe623de6e4bd696c835c" translate="yes" xml:space="preserve">
          <source>ARIA rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8ff99c9456a675b17782ec230bfd837a591440" translate="yes" xml:space="preserve">
          <source>Abnormal Closure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a0a90610cf79acb363147344cc16c53798d811" translate="yes" xml:space="preserve">
          <source>Abort all remaining steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ed22fd282c293696eff56343c6641f34f77772" translate="yes" xml:space="preserve">
          <source>Abort all the remaining steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0f511ba99355ab7dd8f96a9dc9096c669ffab8" translate="yes" xml:space="preserve">
          <source>Abort due to bad requests, e.g. trying to add() the same key twice, or put() with the same index key with a uniqueness constraint. This causes an error on the request, which can bubble up to an error on the transaction, which aborts the transaction. Can be prevented by using preventDefault() on the error event on the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb4d01e4dd8802f856fe0c72fe17a684b8fa319" translate="yes" xml:space="preserve">
          <source>Abort these steps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fdc333b7171f9ae1942a3007cd8c7e337f2c3d4" translate="yes" xml:space="preserve">
          <source>AbortController</source>
          <target state="translated">AbortController</target>
        </trans-unit>
        <trans-unit id="7742eb3258c59bd2f0e53e5c56dc52f83771c2b2" translate="yes" xml:space="preserve">
          <source>AbortController.abort</source>
          <target state="translated">AbortController.abort</target>
        </trans-unit>
        <trans-unit id="64405ce28923621163a1ff50cbe4caa784bcbf6b" translate="yes" xml:space="preserve">
          <source>AbortController.constructor</source>
          <target state="translated">AbortController.constructor</target>
        </trans-unit>
        <trans-unit id="dc31fe96a569d2c002b9f2e8bc433bf395a0171b" translate="yes" xml:space="preserve">
          <source>AbortController.signal</source>
          <target state="translated">AbortController.signal</target>
        </trans-unit>
        <trans-unit id="e311003a4fc7b781cdbc3250e7a4dcc3a7c5924c" translate="yes" xml:space="preserve">
          <source>AbortSignal</source>
          <target state="translated">AbortSignal</target>
        </trans-unit>
        <trans-unit id="c962dcaa5196764adfcd2b77935a2211a7d8fab4" translate="yes" xml:space="preserve">
          <source>AbortSignal.aborted</source>
          <target state="translated">AbortSignal.aborted</target>
        </trans-unit>
        <trans-unit id="c52e8a5d6bedc893eefa5890d3df30015b41c3e3" translate="yes" xml:space="preserve">
          <source>AbortSignal.onabort</source>
          <target state="translated">AbortSignal.onabort</target>
        </trans-unit>
        <trans-unit id="d3058117b2d67a42d54910bd56844cb6149b43d3" translate="yes" xml:space="preserve">
          <source>Aborting a fetch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ce198d39af93c5646ac4f0f1568b8e262117f57" translate="yes" xml:space="preserve">
          <source>Aborts a DOM request before it has completed. This is able to abort &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;fetch requests&lt;/a&gt;, consumption of any response &lt;a href=&quot;body&quot;&gt;&lt;code&gt;Body&lt;/code&gt;&lt;/a&gt;, and streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1587032b5f0c1dc65ce191931090ed6575f125cf" translate="yes" xml:space="preserve">
          <source>Aborts the current segment and resets the segment parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73292d636ff5e6cb67f18a61e12a8c3e98220113" translate="yes" xml:space="preserve">
          <source>Aborts the read operation. Upon return, the &lt;code&gt;readyState&lt;/code&gt; will be &lt;code&gt;DONE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41797ede533bb05a1c674780964184e3175c6e3" translate="yes" xml:space="preserve">
          <source>Aborts the request if it has already been sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfcef48c0ed3a15e495e73fcf8024965aa13897c" translate="yes" xml:space="preserve">
          <source>Aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be immediately moved to an error state, with any queued writes discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f420f31ae0edad63bcc8f497c8b51f1bde6759" translate="yes" xml:space="preserve">
          <source>About the session description parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02befbd420c9754ded8c9a688a174615ddafd2a6" translate="yes" xml:space="preserve">
          <source>About this document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80542d48973fcf56ae6494dac676365999047c60" translate="yes" xml:space="preserve">
          <source>About thread safety</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f327aae85f53786d9a52ebe54ffde04736c4d2" translate="yes" xml:space="preserve">
          <source>AbsoluteOrientationSensor</source>
          <target state="translated">AbsoluteOrientationSensor</target>
        </trans-unit>
        <trans-unit id="4cdd2bff4ccf059493984f6afaa6171baff41955" translate="yes" xml:space="preserve">
          <source>AbsoluteOrientationSensor.constructor</source>
          <target state="translated">AbsoluteOrientationSensor.constructor</target>
        </trans-unit>
        <trans-unit id="12ac816f21f4f83b233664946e7741c28c58d70c" translate="yes" xml:space="preserve">
          <source>AbstractView</source>
          <target state="translated">AbstractView</target>
        </trans-unit>
        <trans-unit id="78edc1854054dd0a65df4bf632ca35ca20d99437" translate="yes" xml:space="preserve">
          <source>AbstractWorker</source>
          <target state="translated">AbstractWorker</target>
        </trans-unit>
        <trans-unit id="8a0694c2d865a556f31cade363dbb2fb25a0c078" translate="yes" xml:space="preserve">
          <source>AbstractWorker.onerror</source>
          <target state="translated">AbstractWorker.onerror</target>
        </trans-unit>
        <trans-unit id="d681be48794c3c8d6483b4b676f9d82710c12280" translate="yes" xml:space="preserve">
          <source>Abstracts properties and methods common to all kind of workers (i.e. &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sharedworker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd75411d14f2c5816851b710d0dd27d7cd7d725b" translate="yes" xml:space="preserve">
          <source>Acceleration</source>
          <target state="translated">Acceleration</target>
        </trans-unit>
        <trans-unit id="eedc6523fd85d3f4f8479f88fb0ac512809dfa67" translate="yes" xml:space="preserve">
          <source>Acceleration &amp;mdash; There are two types of acceleration to consider in VR:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea33e5aa98639ec653425efc7f516e8fbff2297b" translate="yes" xml:space="preserve">
          <source>Acceleration is typically read in the &lt;a href=&quot;../sensor/onreading&quot;&gt;&lt;code&gt;Sensor.onreading&lt;/code&gt;&lt;/a&gt; event callback. In the example below this occurs sixty times a second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97425eb94b6c39be823442df6e6536e8c8e7bf3" translate="yes" xml:space="preserve">
          <source>Acceleration is typically read in the &lt;a href=&quot;sensor/onreading&quot;&gt;&lt;code&gt;Sensor.onreading&lt;/code&gt;&lt;/a&gt; event callback. In the example below this occurs sixty times a second.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="088fbdf0be09f2b57f797db06f694f1729caf35d" translate="yes" xml:space="preserve">
          <source>Accelerometer</source>
          <target state="translated">Accelerometer</target>
        </trans-unit>
        <trans-unit id="aa25ed68df19b392fd23569fc98d912132772396" translate="yes" xml:space="preserve">
          <source>Accelerometer.constructor</source>
          <target state="translated">Accelerometer.constructor</target>
        </trans-unit>
        <trans-unit id="b4a2976bdcc42d0794f5c4417ecf39a687495da6" translate="yes" xml:space="preserve">
          <source>Accelerometer.x</source>
          <target state="translated">Accelerometer.x</target>
        </trans-unit>
        <trans-unit id="47378817ec4f0333ec6c9f8c975f2bc466d54020" translate="yes" xml:space="preserve">
          <source>Accelerometer.y</source>
          <target state="translated">Accelerometer.y</target>
        </trans-unit>
        <trans-unit id="5e316edcb1f5f10f8bd4f60c7739b386bb20aaa2" translate="yes" xml:space="preserve">
          <source>Accelerometer.z</source>
          <target state="translated">Accelerometer.z</target>
        </trans-unit>
        <trans-unit id="4a6020ab1c5517bd5d30e781beba5515f12cafd7" translate="yes" xml:space="preserve">
          <source>Accelerometer&lt;br/&gt;&lt;small&gt;The definition of 'Accelerometer' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe38cdc16f1b0f5fc70816e0c44a0d2b4a444929" translate="yes" xml:space="preserve">
          <source>Accelerometer&lt;br/&gt;&lt;small&gt;The definition of 'LinearAccelerationSensor' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a46dd5d0c8a93485281ed6a5d8814e22c036b2" translate="yes" xml:space="preserve">
          <source>Accelerometer&lt;br/&gt;&lt;small&gt;The definition of 'x' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9bbbc3ff85aca58adb77fe6539c6b136c95f7e" translate="yes" xml:space="preserve">
          <source>Accelerometer&lt;br/&gt;&lt;small&gt;The definition of 'y' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70aa35132a21707773346c5f5ee50721c8c985f9" translate="yes" xml:space="preserve">
          <source>Accelerometer&lt;br/&gt;&lt;small&gt;The definition of 'z' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26bc9523a3fc714fe4e0d4b53cd1d077b8a93988" translate="yes" xml:space="preserve">
          <source>Accepts a &lt;a href=&quot;vrframedata&quot;&gt;&lt;code&gt;VRFrameData&lt;/code&gt;&lt;/a&gt; object and populates it with the information required to render the current frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0951dc83bc5d4e71820cacac7a30ca6d50767ee8" translate="yes" xml:space="preserve">
          <source>Accepts a namespace URI as an argument and returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; with a value of &lt;code&gt;true&lt;/code&gt; if the namespace is the default namespace on the given node or &lt;code&gt;false&lt;/code&gt; if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ceee615b62dfafde24491b3312ed4d2c9339a7" translate="yes" xml:space="preserve">
          <source>Accepts a prefix and returns the namespace URI associated with it on the given node if found (and &lt;code&gt;null&lt;/code&gt; if not). Supplying &lt;code&gt;null&lt;/code&gt; for the prefix will return the default namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ada21cb7bebbe4a1b29af8ee3f3be2d194ac5e6" translate="yes" xml:space="preserve">
          <source>Accepts a variety of different image sources, and returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which resolves to an &lt;a href=&quot;imagebitmap&quot;&gt;&lt;code&gt;ImageBitmap&lt;/code&gt;&lt;/a&gt;. Optionally the source is cropped to the rectangle of pixels originating at &lt;em&gt;(sx, sy)&lt;/em&gt; with width sw, and height sh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64da52d74e788434e721c6f6e986bf01741e2ea" translate="yes" xml:space="preserve">
          <source>Access API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873210c43320a6e508150f12606cfc7e64803d7d" translate="yes" xml:space="preserve">
          <source>Access API: Using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d3dc2a2389b4b7e232cc93ebb9a1c8e8ec648e" translate="yes" xml:space="preserve">
          <source>Access requests are automatically denied unless the embedded content is currently processing a user gesture such as a tap or click. This also prevents embedded content on the page from spamming the browser or user with excessive access requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91e6b7da84e5d39895e62affa564a74aadea6bef" translate="yes" xml:space="preserve">
          <source>Access the attributes of a touch point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332f19c5119e36e8726a48c167540807ed857e3d" translate="yes" xml:space="preserve">
          <source>Access to the files were denied for one of the following reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7228cbcab4c7f68c6285e144cc0c0667f70e08" translate="yes" xml:space="preserve">
          <source>Accessibility concerns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ba80e0845eb82172cf6bcc657c670b26d58713" translate="yes" xml:space="preserve">
          <source>Accessibility of keyboard-navigable JavaScript widgets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf5c63f4ce431972f95f9976bc671b2bde0b95d" translate="yes" xml:space="preserve">
          <source>Accessible Rich Internet Applications &lt;strong&gt;(&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA&quot;&gt;ARIA&lt;/a&gt;)&lt;/strong&gt; defines ways to make Web content and Web applications more accessible to people with disabilities. You can use ARIA attributes to describe the behavior and purpose of the canvas element. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA&quot;&gt;ARIA&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Techniques&quot;&gt;ARIA techniques&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6997759bccda9f3103a8b19cae3796ae746b03f4" translate="yes" xml:space="preserve">
          <source>Accessible from &lt;code&gt;Window&lt;/code&gt; from version 43.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91ea56eabb68971b064899fdb050714e9f30b1a4" translate="yes" xml:space="preserve">
          <source>Accessible from &lt;code&gt;WorkerGlobalScope&lt;/code&gt; from version 43.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f878573c942feb2e33b06d30f926ad88783d72" translate="yes" xml:space="preserve">
          <source>Accessing &lt;code&gt;response&lt;/code&gt; during a &lt;code&gt;progress&lt;/code&gt; event returns the data received so far. Outside the &lt;code&gt;progress&lt;/code&gt; event handler, the value of &lt;code&gt;response&lt;/code&gt; is always &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98fdc3e2ae4cc228baa64fa743dc9bd4992bcec" translate="yes" xml:space="preserve">
          <source>Accessing Event interfaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab2faa60e2fe9d7a8e75a722ed716ea71136b56" translate="yes" xml:space="preserve">
          <source>Accessing a user's cookies in an embedded cross-origin iframe</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4675cfced293f19c9a1910dc0aaca64c96cf1f43" translate="yes" xml:space="preserve">
          <source>Accessing form controls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e19797b64aa2c07359a6a33d89d925d9597ad3f" translate="yes" xml:space="preserve">
          <source>Accessing frame data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb26bfc20da1c3fbe80ed9ef80eb2509e7900da" translate="yes" xml:space="preserve">
          <source>Accessing one selected file using a classical DOM selector:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5f60488554d4c2fb3e0bab0c2c59695d2b77ef" translate="yes" xml:space="preserve">
          <source>Accessing selected file(s)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f64dba20faa7a7ecb4e133122426cae2eace22c" translate="yes" xml:space="preserve">
          <source>Accessing selected file(s) on a change event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e39d081e689ffad5a32bbae2a214d310c0a825" translate="yes" xml:space="preserve">
          <source>Accessing the clipboard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8120d301284d337f8d1a609fe011a1b0081b9008" translate="yes" xml:space="preserve">
          <source>Accessing the connection list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280af783201c0440ff0e730d24679789a872ddde" translate="yes" xml:space="preserve">
          <source>Accessing the form's elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdba2835f10ba38911659e09f277ac97e18ee679" translate="yes" xml:space="preserve">
          <source>Accessing the gamepad data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736c19f6a37dae0da8a4052195cb61e05eb266a4" translate="yes" xml:space="preserve">
          <source>Accessing the matches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c445d1f1ff0945cfa266ca7a0e20d80127c00648" translate="yes" xml:space="preserve">
          <source>Accessing values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2cf0ed09de3387fc8f1f11f903f330fdd1b480" translate="yes" xml:space="preserve">
          <source>According to the specification, the default value for the &lt;code&gt;passive&lt;/code&gt; option is always false. However, this introduces the potential for event listeners handling certain touch events (among others) to block the browser's main thread while it is attempting to handle scrolling, resulting in possibly enormous reduction in performance during scroll handling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebda329839000f83289946557fec03fd3153321" translate="yes" xml:space="preserve">
          <source>Accuracy of the derivative calculation for the GLSL built-in functions: &lt;code&gt;dFdx&lt;/code&gt;, &lt;code&gt;dFdy&lt;/code&gt;, and &lt;code&gt;fwidth&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ef08325a4813563a3110359906076374683282" translate="yes" xml:space="preserve">
          <source>Activate</source>
          <target state="translated">Activate</target>
        </trans-unit>
        <trans-unit id="1716b763422e14746e9cca17c0a5fde36d1058db" translate="yes" xml:space="preserve">
          <source>Activates ANDing the fragment's coverage with the temporary coverage value. See &lt;a href=&quot;samplecoverage&quot;&gt;&lt;code&gt;WebGLRenderingContext.sampleCoverage()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6cc1a1cff62b82323adc3aef50df7cdb4f61b2f" translate="yes" xml:space="preserve">
          <source>Activates adding an offset to depth values of polygon's fragments. See &lt;a href=&quot;polygonoffset&quot;&gt;&lt;code&gt;WebGLRenderingContext.polygonOffset()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8943611429c8a99280f60ebc0ad8777d3b063e0" translate="yes" xml:space="preserve">
          <source>Activates blending of the computed fragment color values. See &lt;a href=&quot;blendfunc&quot;&gt;&lt;code&gt;WebGLRenderingContext.blendFunc()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56fcfa87cb64d765903d70f1a2421de5e0ecd040" translate="yes" xml:space="preserve">
          <source>Activates culling of polygons. See &lt;a href=&quot;cullface&quot;&gt;&lt;code&gt;WebGLRenderingContext.cullFace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e219dd31839de8dff992ce7a1f4cb15747156a6" translate="yes" xml:space="preserve">
          <source>Activates depth comparisons and updates to the depth buffer. See &lt;a href=&quot;depthfunc&quot;&gt;&lt;code&gt;WebGLRenderingContext.depthFunc()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da3208f17b14a8e497d82c37aaee72cbf79394d" translate="yes" xml:space="preserve">
          <source>Activates dithering of color components before they get written to the color buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76422e1d98ace7587fb0454a42f3acabda798070" translate="yes" xml:space="preserve">
          <source>Activates one of the sensors based on &lt;code&gt;Sensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9941242c5c09659d2fa0740290c284ec94fc2673" translate="yes" xml:space="preserve">
          <source>Activates stencil testing and updates to the stencil buffer. See &lt;a href=&quot;stencilfunc&quot;&gt;&lt;code&gt;WebGLRenderingContext.stencilFunc()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e23895925449f82006369f9844ed9b4d7768d8a1" translate="yes" xml:space="preserve">
          <source>Activates the computation of a temporary coverage value determined by the alpha value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95f1154b88ed32f3b25ba1106a49124388be3f1" translate="yes" xml:space="preserve">
          <source>Activates the scissor test that discards fragments that are outside of the scissor rectangle. See &lt;a href=&quot;scissor&quot;&gt;&lt;code&gt;WebGLRenderingContext.scissor()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb78f65aa3470f046a265b7db3ef361cd3f53f37" translate="yes" xml:space="preserve">
          <source>Activating a service worker to deliver a push message can result in increased resource usage, particularly of the battery. Different browsers have different schemes for handling this, there is currently no standard mechanism. Firefox allows a limited number (quota) of push messages to be sent to an application, although Push messages that generate notifications are exempt from this limit. The limit is refreshed each time the site is visited. In comparison, Chrome applies no limit, but requires that every push message causes a notification to be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6891093a506f8057a03147d9058b04b2d60b7e" translate="yes" xml:space="preserve">
          <source>Activating full-screen mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f206809af8a16645246335dae372d42adc5da22" translate="yes" xml:space="preserve">
          <source>Activating hold mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1972df082168582bc4d82f475de616c07e7adac7" translate="yes" xml:space="preserve">
          <source>ActiveInfo</source>
          <target state="translated">ActiveInfo</target>
        </trans-unit>
        <trans-unit id="08f912e2026836e60bb37b0aabea7a54f62c14ea" translate="yes" xml:space="preserve">
          <source>ActiveInfo.name</source>
          <target state="translated">ActiveInfo.name</target>
        </trans-unit>
        <trans-unit id="f544244a36c82cc7bbe9a2def36dfe3e5407f404" translate="yes" xml:space="preserve">
          <source>ActiveInfo.size</source>
          <target state="translated">ActiveInfo.size</target>
        </trans-unit>
        <trans-unit id="1860549ec89df5b52094c028307c4a316648740b" translate="yes" xml:space="preserve">
          <source>ActiveInfo.type</source>
          <target state="translated">ActiveInfo.type</target>
        </trans-unit>
        <trans-unit id="0a8affc08c5f8416a8d30f48b136e0d61691c271" translate="yes" xml:space="preserve">
          <source>Actually part of CSS Animations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5579102409f342171194034e41ef9e0ceb462bf" translate="yes" xml:space="preserve">
          <source>Actually, regarding memory consumption, the lack of keeping a function reference is not the real issue; rather it is the lack of keeping a STATIC function reference. In both problem-cases below, a function reference is kept, but since it is redefined on each iteration, it is not static. In the third case, the reference to the anonymous function is being reassigned with each iteration. In the fourth case, the entire function definition is unchanging, but it is still being repeatedly defined as if new (unless it was [[promoted]] by the complier) and so is not static. Therefore, though appearing to be simply [[Multiple identical event listeners]], in both cases each iteration will instead create a new listener with its own unique reference to the handler function. However, since the function definition itself does not change, the SAME function may still be called for every duplicate listener (especially if the code gets optimized.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598213a8683c7c8c867a810689c571ceb7f04953" translate="yes" xml:space="preserve">
          <source>Adapting Sync XHR usecases to the Beacon API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c4e8456cae6d89d68f9e8957e4f08825012bb4" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchcancel&quot;&gt;touchcancel&lt;/a&gt;&lt;/code&gt; event handlers within the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6455e237b98ab3941441a4ff4ad1dd0b44958f0" translate="yes" xml:space="preserve">
          <source>Add &lt;code&gt;timeOrigin&lt;/code&gt; property to &lt;code&gt;Performance&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7d96c68dfb6754214569af3ec4ea12f45cf272" translate="yes" xml:space="preserve">
          <source>Add &lt;var&gt;S&lt;/var&gt; to the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-set-of-controlled-presentations&quot;&gt;set of controlled presentations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277e8dfc147f61eac5a65eb2622133df7880dc5f" translate="yes" xml:space="preserve">
          <source>Add a &lt;code&gt;rotateZ&lt;/code&gt; matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7184b938b7ac8872be50b9875393030403a27f8f" translate="yes" xml:space="preserve">
          <source>Add a listener for the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88ab58447596192f3f6725201b6f4fc0f48e796" translate="yes" xml:space="preserve">
          <source>Add a simple listener</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f425192b60b48c7860d6ef119a3ce222bed96043" translate="yes" xml:space="preserve">
          <source>Add fixed points of reference for fixed objects (otherwise the user will believe they are on the move.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="885c389e0f226e1ca4f806c6acd323d3b831a043" translate="yes" xml:space="preserve">
          <source>Add some rotation matrices to the view matrix to look around.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f431c7a391653e3f564ce5a2ac1d43b570983dc" translate="yes" xml:space="preserve">
          <source>Add the event handlers to a specific target element (rather than the entire document or nodes higher up in the document tree).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e2c4ca55327e3773e431a4320d9ff7c9e974122" translate="yes" xml:space="preserve">
          <source>Add the touch point handlers to the specific target element (rather than the entire document or nodes higher up in the document tree).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc11cbffbf92709ef216694d427dcbf6f6c7395b" translate="yes" xml:space="preserve">
          <source>Add touch screen support to your website (The easy way)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9f849584dab8bfa145b8fb5bd1d5defed2f691b" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;SECURITY_ERR&lt;/code&gt;, &lt;code&gt;NETWORK_ERR&lt;/code&gt;, &lt;code&gt;ABORT_ERR&lt;/code&gt;, &lt;code&gt;URL_MISMATCH_ERR&lt;/code&gt;, &lt;code&gt;QUOTA_EXCEEDED_ERR&lt;/code&gt;, &lt;code&gt;TIMEOUT_ERR&lt;/code&gt;, &lt;code&gt;INVALID_NODE_TYPE_ERR&lt;/code&gt;, and &lt;code&gt;DATA_CLONE_ERR&lt;/code&gt;. The property &lt;code&gt;code&lt;/code&gt; has been deprecated for exception values. The &lt;code&gt;EncodingError&lt;/code&gt; value added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc4a49807fafd1e6eddf0689120aa6e12451752" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;code&lt;/code&gt; and &lt;code&gt;key&lt;/code&gt; to &lt;em&gt;&lt;code&gt;KeyboardEventInit&lt;/code&gt;&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24b6f82db23b15196d268de67ae9f9d20a82d1b" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;continuePrimaryKey()&lt;/code&gt; and support for binary keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="139a0e41847eb84019131d87de1e64f9dea38a55" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;edgeMode&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44c3676c12a9caf367e1597fbfe390d78520b291" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;getNamedItemNS()&lt;/code&gt;, &lt;code&gt;setNamedItemNS()&lt;/code&gt; and &lt;code&gt;removeNamedItemNS()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264f3c6ddf0b3de1e5bff2eb5c86575b9559b956" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;null&lt;/code&gt; as return value in case that no target element is being animated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b79be5d23d14d6263e56c49816bfd71b924aaf" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;ontouchstart&lt;/code&gt;, &lt;code&gt;ontouchend&lt;/code&gt;, &lt;code&gt;ontouchmove&lt;/code&gt;, &lt;code&gt;ontouchend&lt;/code&gt; global attribute handlers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb119a7f58b3235c5b14283a488f8e44a58dcad" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;ownerElement&lt;/code&gt; property back</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475486dd1c6aa4f02960f823053d069876f830a2" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;radiusX&lt;/code&gt;, &lt;code&gt;radiusY&lt;/code&gt;, &lt;code&gt;rotationAngle&lt;/code&gt;, &lt;code&gt;force&lt;/code&gt; properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344f009f5e59e755dc95a5a13332ce4f32b891ab" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;radiusX&lt;/code&gt;, &lt;code&gt;radiusY&lt;/code&gt;, &lt;code&gt;rotationAngle&lt;/code&gt;, &lt;code&gt;force&lt;/code&gt; properties, as well as the &lt;code&gt;Touch()&lt;/code&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5596fdcbc650ea3a026f5ec75adb9e6011ae3816" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;setTransform()&lt;/code&gt; method in v5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c7461083aaf12909e809f6f8ee6c91001e6868" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;sourceCapabilities&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3bddace5e15be0b536db9e365847f3445cb2d5" translate="yes" xml:space="preserve">
          <source>Added &lt;code&gt;toJSON()&lt;/code&gt; serializer method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549970b1132546192b50babe4b39625fe63b41c3" translate="yes" xml:space="preserve">
          <source>Added a second inheritence, the &lt;a href=&quot;linkstyle&quot;&gt;&lt;code&gt;LinkStyle&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a27e26054f1d759659cde6c86902746a5db39225" translate="yes" xml:space="preserve">
          <source>Added for legacy compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8df4c7939a8d9b5e7553b85e75c3fdbaf05f53" translate="yes" xml:space="preserve">
          <source>Added implemention of the &lt;a href=&quot;childnode&quot;&gt;&lt;code&gt;ChildNode&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d01076c183362bb3f4175146129aeb1f7f69bc" translate="yes" xml:space="preserve">
          <source>Added in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTML/HTML5&quot;&gt;HTML5&lt;/a&gt;, the &lt;strong&gt;HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element&lt;/strong&gt; can be used to draw graphics via scripting in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;JavaScript&lt;/a&gt;. For example, it can be used to draw graphs, make photo compositions, create animations, or even do real-time video processing or rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe898322db3159edaf436aa2154076cca4c4e8d" translate="yes" xml:space="preserve">
          <source>Added inheritance of &lt;a href=&quot;linkstyle&quot;&gt;&lt;code&gt;LinkStyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff034ae92da804fcbe9fd1ce5d369b016c97fb3" translate="yes" xml:space="preserve">
          <source>Added inheritance of the &lt;a href=&quot;elementtraversal&quot;&gt;&lt;code&gt;ElementTraversal&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8499b075e943ac311f3af754453cec9e5d2bb7" translate="yes" xml:space="preserve">
          <source>Added its initial definition to the &lt;code&gt;ElementTraversal&lt;/code&gt; pure interface and use it on &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc40698f313704be8761d8cb59a7e3fd533bbf1" translate="yes" xml:space="preserve">
          <source>Added of &lt;code&gt;INVALID_STATE_ERR&lt;/code&gt;, &lt;code&gt;SYNTAX_ERR&lt;/code&gt;, &lt;code&gt;INVALID_MODIFICATION_ERR&lt;/code&gt;, &lt;code&gt;NAMESPACE_ERR&lt;/code&gt;, and &lt;code&gt;INVALID_ACCESS_ERR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6fa54dfe172d68d02bb638438e13371fce3550" translate="yes" xml:space="preserve">
          <source>Added of &lt;code&gt;VALIDATION_ERR&lt;/code&gt; and &lt;code&gt;TYPE_MISMATCH_ERR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d618c398a33a5ba522fa9f25148e91bba0f9c05" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;Text()&lt;/code&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ba31cda6fc2c8c60eb6c392a4707a78137df96" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;UIEvent()&lt;/code&gt; constructor, deprecated the &lt;code&gt;initUIEvent()&lt;/code&gt; method and changed the type of &lt;code&gt;view&lt;/code&gt; from &lt;code&gt;AbstractView&lt;/code&gt; to &lt;code&gt;WindowProxy&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902e3112793a6f1de1437629af7c767cc874fc75" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;appCodeName&lt;/code&gt; property and the &lt;code&gt;taintEnabled()&lt;/code&gt; method, for compatibility purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee33e7e857fe1fbbdff44a0d993210561e1911c" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;assignedSlot&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a3327474e1f3eb79d824f3d25f1c0d18d101136" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;createDocument()&lt;/code&gt; and &lt;code&gt;createDocumentType()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ea1f9b68eec692d804b5b6b99a16b6fcc0d11e" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;createHTMLDocument()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c014012830c382b4baaaa8560527f528edf7ed" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;createTBody()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b90493fe20bf704e3ae417ada5e416ffa2d559a" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;error&lt;/code&gt; property and the 5th parameter to the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6c944656a333c8d1cd4b50649b4f7aa04748d6" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;getAnimations()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e556e21aba06ba0fdb6792d9c41e2baee2b91f85" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;getFeature()&lt;/code&gt; method (never implemented by any user agent).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46881c93343c2c594db3fcc579bb19513752a28" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;getVideoPlaybackQuality()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f5893d4f012635223d61af5f5c08e994b98426c" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;isElementContentWhitespace&lt;/code&gt; and &lt;code&gt;wholeText&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13bb225bbe9984a66e7a87378d77190cfd08e3ac" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;keySystem&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5438968716a71204b3dafe6a06e266acf7b79e1" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;publicID&lt;/code&gt;, &lt;code&gt;systemID&lt;/code&gt;, and &lt;code&gt;internalSubset&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ec9c6f5b0275ed82e345d754ce63d0f9ba9c0d" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;querySelector()&lt;/code&gt; and &lt;code&gt;querySelectorAll()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b58c45eacb2bce345598ccfc8c42ace7ad794f3" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;referenceNode&lt;/code&gt; and &lt;code&gt;pointerBeforeReferenceNode&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d98eb2da1ff98042f2851bba5bbe50a8b69e88" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;referrerPolicy&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91d265f464b3b54d6c2acdd1b19123be1cc0bcd7" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;referrerPolicy&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e54928f42efd4da9e27ca420e09be3e7acd51b5" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;replaceWholeText()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7eefa2185139758f6893524bce956f8c508df1" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;requestFullscreen()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9af15dccdbe110d46ba3ea3a8f2056792a71bdd" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;requestPointerLock()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27883ceda106210608fa19528a218998cabab18" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;reversed&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7269433c84f5a72424c5eac2535fb8ba350bc09e" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;schemaTypeInfo&lt;/code&gt; property. This property was never implemented and has been removed in later specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd50bf0f20e06699461bd60dd160822982c8843" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;undoScope&lt;/code&gt; and &lt;code&gt;undoManager&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e78aa9ad9805eb59d7bb45c7cf7e1e2eed842d" translate="yes" xml:space="preserve">
          <source>Added the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18fe566a1f00e534c812b9df2b7cbd235ff56ded" translate="yes" xml:space="preserve">
          <source>Added the constructor &lt;code&gt;Range()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a248e054548e987df36636a4fea4b98bad58d71" translate="yes" xml:space="preserve">
          <source>Added the constructor and the implementation of &lt;a href=&quot;parentnode&quot;&gt;&lt;code&gt;ParentNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57484dda183aed0b3ff436749aac919439874a4f" translate="yes" xml:space="preserve">
          <source>Added the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="603ad1e1d44d4cb346925111aeebaa2cc6d7c7c4" translate="yes" xml:space="preserve">
          <source>Added the following event handlers: &lt;code&gt;ongotpointercapture&lt;/code&gt; and &lt;code&gt;onlostpointercapture&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6968898ce2a9f6ece8c8828e282526ae0fca7342" translate="yes" xml:space="preserve">
          <source>Added the following method: &lt;code&gt;forceSpellcheck()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8365e6536970ab42b900c1f4435355e21e2c3ae4" translate="yes" xml:space="preserve">
          <source>Added the following method: &lt;code&gt;insertAdjacentHTML()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e110f69384c9e0d2d34a588f037998323c422b" translate="yes" xml:space="preserve">
          <source>Added the following methods: &lt;code&gt;closest()&lt;/code&gt;, &lt;code&gt;insertAdjacentElement()&lt;/code&gt; and &lt;code&gt;insertAdjacentText()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b4a0276f16faf1dfabacd1eeab411d528a9f7e" translate="yes" xml:space="preserve">
          <source>Added the following methods: &lt;code&gt;compareDocumentPosition()&lt;/code&gt;, &lt;code&gt;isSameNode()&lt;/code&gt;, &lt;code&gt;lookupPrefix()&lt;/code&gt;, &lt;code&gt;isDefaultNamespace()&lt;/code&gt;, &lt;code&gt;lookupNamespaceURI()&lt;/code&gt;, &lt;code&gt;isEqualNode()&lt;/code&gt;, &lt;code&gt;getFeature()&lt;/code&gt;, &lt;code&gt;setUserData()&lt;/code&gt;, and &lt;code&gt;getUserData().&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea43a4f858d2733f33a0c48c432a9d8eed38055" translate="yes" xml:space="preserve">
          <source>Added the following methods: &lt;code&gt;getClientRects()&lt;/code&gt;, &lt;code&gt;getBoundingClientRect()&lt;/code&gt;, &lt;code&gt;scroll()&lt;/code&gt;, &lt;code&gt;scrollBy()&lt;/code&gt;, &lt;code&gt;scrollTo()&lt;/code&gt; and &lt;code&gt;scrollIntoView()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b27ec657e5a3d730ad9d03df344cb9e7ad7949" translate="yes" xml:space="preserve">
          <source>Added the following methods: &lt;code&gt;getRootNode()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a040663f6b0f7595ec021f00722c188ebd51f39c" translate="yes" xml:space="preserve">
          <source>Added the following methods: &lt;code&gt;normalize()&lt;/code&gt;, &lt;code&gt;isSupported()&lt;/code&gt; and &lt;code&gt;hasAttributes()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd589a60bcbd095a6d5d663ba915bd30061a2e49" translate="yes" xml:space="preserve">
          <source>Added the following methods: &lt;code&gt;querySelector()&lt;/code&gt; and &lt;code&gt;querySelectorAll()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89587a3b318e804af22c9e3fab2babd2e96a9306" translate="yes" xml:space="preserve">
          <source>Added the following methods: &lt;code&gt;setIdAttribute()&lt;/code&gt;, &lt;code&gt;setIdAttributeNS()&lt;/code&gt;, and &lt;code&gt;setIdAttributeNode()&lt;/code&gt;. These methods were never implemented and have been removed in later specifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df4b7e616b7a246612ba9fd7fa07f283a5c272a" translate="yes" xml:space="preserve">
          <source>Added the following methods: &lt;code&gt;setPointerCapture()&lt;/code&gt; and &lt;code&gt;releasePointerCapture()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d40851e59e2fcb2e09e2f3ad32632918998564c" translate="yes" xml:space="preserve">
          <source>Added the following properties: &lt;code&gt;baseURI&lt;/code&gt; and &lt;code&gt;textContent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5352a8a5b8c5df25ba3fc59567ec54407adabe2" translate="yes" xml:space="preserve">
          <source>Added the following properties: &lt;code&gt;dataset&lt;/code&gt;, &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;tabindex&lt;/code&gt;, &lt;code&gt;accessKey&lt;/code&gt;, &lt;code&gt;accessKeyLabel&lt;/code&gt;, &lt;code&gt;draggable&lt;/code&gt;, &lt;code&gt;dropzone&lt;/code&gt;, &lt;code&gt;contentEditable&lt;/code&gt;, &lt;code&gt;isContentEditable&lt;/code&gt;, &lt;code&gt;contextMenu&lt;/code&gt;, &lt;code&gt;spellcheck&lt;/code&gt;, &lt;code&gt;commandType&lt;/code&gt;, &lt;code&gt;commandLabel&lt;/code&gt;, &lt;code&gt;commandIcon&lt;/code&gt;, &lt;code&gt;commandHidden&lt;/code&gt;, &lt;code&gt;commandDisabled&lt;/code&gt;, &lt;code&gt;commandChecked&lt;/code&gt;, &lt;code&gt;style&lt;/code&gt;, and all the &lt;code&gt;onXYZ&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ff18a5ee033f9a4670c808eba5c45c632ca843" translate="yes" xml:space="preserve">
          <source>Added the following properties: &lt;code&gt;innerHTML&lt;/code&gt;, and &lt;code&gt;outerHTML&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcc0cd0e92fa8c8ff89f6bb324341ea9cdba9e2" translate="yes" xml:space="preserve">
          <source>Added the following properties: &lt;code&gt;namespaceURI&lt;/code&gt;, &lt;code&gt;prefix&lt;/code&gt;, and &lt;code&gt;localName&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="772f8a09bad23ab08b6159706259660f60d9f5d4" translate="yes" xml:space="preserve">
          <source>Added the following properties: &lt;code&gt;offsetParent&lt;/code&gt;, &lt;code&gt;offsetTop&lt;/code&gt;, &lt;code&gt;offsetLeft&lt;/code&gt;, &lt;code&gt;offsetWidth&lt;/code&gt;, and &lt;code&gt;offsetHeight&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa66e1135b8f14f595e837e86bda967b9551fec" translate="yes" xml:space="preserve">
          <source>Added the following properties: &lt;code&gt;scrollTop&lt;/code&gt;, &lt;code&gt;scrollLeft&lt;/code&gt;, &lt;code&gt;scrollWidth&lt;/code&gt;, &lt;code&gt;scrollHeight&lt;/code&gt;, &lt;code&gt;clientTop&lt;/code&gt;, &lt;code&gt;clientLeft&lt;/code&gt;, &lt;code&gt;clientWidth&lt;/code&gt;, and &lt;code&gt;clientHeight&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad73f53eba9b17838e0de09e2f898c7a7d1eace" translate="yes" xml:space="preserve">
          <source>Added the following properties: &lt;code&gt;translate&lt;/code&gt;, &lt;code&gt;itemScope&lt;/code&gt;, &lt;code&gt;itemType&lt;/code&gt;, &lt;code&gt;itemId&lt;/code&gt;, &lt;code&gt;itemRef&lt;/code&gt;, &lt;code&gt;itemProp&lt;/code&gt;, &lt;code&gt;properties&lt;/code&gt;, and &lt;code&gt;itemValue&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a2d6a4989c991e2a09c17b5c4a1d79cfa9c4ac" translate="yes" xml:space="preserve">
          <source>Added the initial definition of its properties to the &lt;code&gt;ElementTraversal&lt;/code&gt; pure interface and use it on &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3f64d6db7ebe69d778ff848864c5a3fd841a7e1" translate="yes" xml:space="preserve">
          <source>Added the initial definition of its properties to the &lt;code&gt;ElementTraversal&lt;/code&gt; pure interface and used it on &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eaf29871c0e9d06479d615f846c1b5eb12c56c8" translate="yes" xml:space="preserve">
          <source>Added the method &lt;code&gt;createContextualFragment()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f0cf26ad287528d133f1d32c03c1df53370608" translate="yes" xml:space="preserve">
          <source>Added the methods &lt;code&gt;getClientRects()&lt;/code&gt; and &lt;code&gt;getBoundingClientRect()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ab8086996af82fa8e8dd5633e609c01c67f666" translate="yes" xml:space="preserve">
          <source>Added the methods &lt;code&gt;isPointInRange()&lt;/code&gt;, &lt;code&gt;comparePoint()&lt;/code&gt;, and &lt;code&gt;intersectsNode()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4da995f5e9b9cdb8ddd6073a77d0c3af217f7bc" translate="yes" xml:space="preserve">
          <source>Added the static methods &lt;code&gt;URL.createObjectURL()&lt;/code&gt; and &lt;code&gt;URL.revokeObjectURL&lt;/code&gt;&lt;code&gt;()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80b57c4d5da910c4c4cf9e47e8728ad1531668a" translate="yes" xml:space="preserve">
          <source>Added value &lt;code&gt;COUNTER_STYLE_RULE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7c96503a94996e45594e11969dd416228c6cd7" translate="yes" xml:space="preserve">
          <source>Added value &lt;code&gt;FONT_FEATURE_VALUES_RULE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61e7d84ea6374f13438b78ca46c8b49b65c345d4" translate="yes" xml:space="preserve">
          <source>Added value &lt;code&gt;SUPPORTS_RULE&lt;/code&gt;. (&lt;code&gt;DOCUMENT_RULE&lt;/code&gt; has been pushed to CSS Conditional Rules Level 4)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f2009861d3800b349884e75b0d3b3ab544f75db" translate="yes" xml:space="preserve">
          <source>Added values &lt;code&gt;KEYFRAMES_RULE&lt;/code&gt; and &lt;code&gt;KEYFRAME_RULE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a7040a92475788bb9c8e9a738bbfdbd64b0761" translate="yes" xml:space="preserve">
          <source>Adding 2D content to a WebGL context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b3eb5c31fa850a0684bb1c8fea5eceadd78f0e" translate="yes" xml:space="preserve">
          <source>Adding &lt;em&gt;gestures&lt;/em&gt; to an application can significantly improve the user experience. There are many types of gestures, from the simple single-touch &lt;em&gt;swipe&lt;/em&gt; gesture to the more complex multi-touch &lt;em&gt;twist&lt;/em&gt; gesture, where the touch points (aka &lt;em&gt;pointers&lt;/em&gt;) move in different directions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874b3ed3943aee3561d29e812f83117cf192bc27" translate="yes" xml:space="preserve">
          <source>Adding a biquad filter to the mix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07af9cefae59a74177435fea9b216e55e3f6d670" translate="yes" xml:space="preserve">
          <source>Adding a listener during event dispatch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ce796c963fc9c89eb828523668076ccf4f6e20" translate="yes" xml:space="preserve">
          <source>Adding an offset to depth values of polygon's fragments. See &lt;a href=&quot;polygonoffset&quot;&gt;&lt;code&gt;WebGLRenderingContext.polygonOffset()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be742e19a6371e3949e5a6c1ea8087226a764e4" translate="yes" xml:space="preserve">
          <source>Adding and modifying history entries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa5430fefeb0e76208420a99a5c6897bffd918d" translate="yes" xml:space="preserve">
          <source>Adding candidates to the caller</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c330b9be5ff11aa350edae506b29f5aaf02ab937" translate="yes" xml:space="preserve">
          <source>Adding candidates to the receiver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a846c73b4ade53e568aae293344e9e0800b1929" translate="yes" xml:space="preserve">
          <source>Adding data to the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9bfba4e5d30bd471f4e3b5a1034b613caa1be8" translate="yes" xml:space="preserve">
          <source>Adding media to the receiver</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df4cfa6911215751beab6f7cdca2a0b600805a7" translate="yes" xml:space="preserve">
          <source>Adding mouse control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2447989d30c365d7ae38f319bb4e4599b6b831" translate="yes" xml:space="preserve">
          <source>Adding stereo panning to our app</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a124713f8b47fdde7e7bb0799dc8d9b9bf10a4" translate="yes" xml:space="preserve">
          <source>Adding text to the log</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884f46f817ec2e45658987a0d3caa357fa83f2fe" translate="yes" xml:space="preserve">
          <source>Adding the audio to the connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3adb783f5c952c3cd971150521e4b32396cf8db" translate="yes" xml:space="preserve">
          <source>Adding timestamps to the Waterfall</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="158c2f3be7c8caad003e920ce9182cf7ab696e73" translate="yes" xml:space="preserve">
          <source>Adding velocity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d243e21ed2c0f8fd8807f2c0487bd05996b21c1e" translate="yes" xml:space="preserve">
          <source>Adding, retrieving, and removing data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dbb575455257b9703edfc9d21479b770c0f8622" translate="yes" xml:space="preserve">
          <source>Additional constants defined WebGL 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046f00d83b5d7e16fb353580ddd42aaf584e3baf" translate="yes" xml:space="preserve">
          <source>Additional examples can be found at &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/Events/Creating_and_triggering_events&quot;&gt;Creating and triggering events&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd46da1321a170ae7cfcf43e36ff47c87a325ca" translate="yes" xml:space="preserve">
          <source>Additional methods for Mozilla chrome code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c7578e92b3e4d3c18faee566b9e905ba9d7810" translate="yes" xml:space="preserve">
          <source>Additional parameters which are passed through to the function specified by &lt;em&gt;func&lt;/em&gt; once the timer expires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2c48d91d80bfcd125fe1ee6fd63c5dfc85fd55" translate="yes" xml:space="preserve">
          <source>Additional parameters which are passed through to the function specified by &lt;em&gt;function &lt;/em&gt;or&lt;em&gt; code&lt;/em&gt; once the timer expires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea04744a9de18550f0e1489ff9b05ddfa8f2ea2" translate="yes" xml:space="preserve">
          <source>Additional pixel storage parameters that aren't specified in OpenGL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc2860c65fb6873892b4dec972b618a9c9a2135" translate="yes" xml:space="preserve">
          <source>Additional properties for isolated track support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52061a6de983a4c41cee4c64ce4a4b0b14ba3002" translate="yes" xml:space="preserve">
          <source>Additional tips</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6364f9f23e01ec41e24e8d7eaa67e01bcd24049" translate="yes" xml:space="preserve">
          <source>Additionally available in WebGL 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9bb4d6bd93fff2f53ef934dad30f772c82365f" translate="yes" xml:space="preserve">
          <source>Additionally available when using a WebGL 2 context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a7c5c1069094cbaf78f36eae9c105681ae4748" translate="yes" xml:space="preserve">
          <source>Additionally available when using the &lt;a href=&quot;../ext_texture_filter_anisotropic&quot;&gt;&lt;code&gt;EXT_texture_filter_anisotropic&lt;/code&gt;&lt;/a&gt; extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795867849ed12bbe949455c25e7e7051a0e226e6" translate="yes" xml:space="preserve">
          <source>Additionally, (not shown) the position and scale matrices of the model have been changed to take it out of clip space and into the larger coordinate system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f60fd5fac93a37cfb972292499527fee7279ee" translate="yes" xml:space="preserve">
          <source>Additionally, ArrayBuffer send and receive support for binary data has been implemented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9308f02582426691ff287b0d5889ec15acc2e013" translate="yes" xml:space="preserve">
          <source>Additionally, for uniforms declared as arrays, the following names are also valid:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c81b4794358a89133d8caf3ed06044602afce83" translate="yes" xml:space="preserve">
          <source>Additionally, indexes have the ability to enforce simple constraints on the stored data. By setting the unique flag when creating the index, the index ensures that no two objects are stored with both having the same value for the index's key path. So, for example, if you have an object store which holds a set of people, and you want to ensure that no two people have the same email address, you can use an index with the unique flag set to enforce this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2041437567f8984b0bc532720e6147f4a820a10a" translate="yes" xml:space="preserve">
          <source>Additionally, of course, the Feature Policy &lt;code&gt;&quot;fullscreen&quot;&lt;/code&gt; permission must be granted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dbef8798c869b168a79d5253d84ee0a9869a174" translate="yes" xml:space="preserve">
          <source>Additionally, synchronous requests are not allowed from within a service worker &amp;mdash; only asynchronous requests, like those initiated via the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/a&gt; method, can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af33ff4853f568cef8277b84c1a76a86bc2db0b9" translate="yes" xml:space="preserve">
          <source>Additionally, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/points&quot;&gt;points&lt;/a&gt;&lt;/code&gt; attribute on the original element accessed via the XML DOM (e.g., using the &lt;code&gt;getAttribute()&lt;/code&gt; method call) will reflect any changes made to the &lt;code&gt;SVGAnimatedPoints.points&lt;/code&gt; attribut.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59fa357316f69687b0e126ab619e3c649254caa" translate="yes" xml:space="preserve">
          <source>Additionally, the &lt;code&gt;scrollPathIntoView()&lt;/code&gt; method can be used to make an element visible on the screen if focused, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d79a7679eef47fa9283b43552aa74e6ab52e5ecb" translate="yes" xml:space="preserve">
          <source>Additionally, the server can decide on extension/subprotocol requests here; see &lt;a href=&quot;#Miscellaneous&quot;&gt;Miscellaneous&lt;/a&gt; for details. The &lt;code&gt;Sec-WebSocket-Accept&lt;/code&gt; part is interesting. The server must derive it from the &lt;code&gt;Sec-WebSocket-Key&lt;/code&gt; that the client sent. To get it, concatenate the client's &lt;code&gt;Sec-WebSocket-Key&lt;/code&gt; and &quot;&lt;code&gt;258EAFA5-E914-47DA-95CA-C5AB0DC85B11&lt;/code&gt;&quot; together (it's a &quot;&lt;a href=&quot;https://en.wikipedia.org/wiki/Magic_string&quot;&gt;magic string&lt;/a&gt;&quot;), take the &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA-1 hash&lt;/a&gt; of the result, and return the &lt;a href=&quot;https://en.wikipedia.org/wiki/Base64&quot;&gt;base64&lt;/a&gt; encoding of the hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58e2e2b58ecdea4b1d59dcc0e843a16ce3f46c6" translate="yes" xml:space="preserve">
          <source>Additionally, this property should update whenever a browser is no longer capable of connecting to the network. According to the specification:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c1cbaf5c67734db116618f64d542fc4b814c05" translate="yes" xml:space="preserve">
          <source>Additionally, when resetting :</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d9d824d312ca6d1d5a43be423ade3d647febc43" translate="yes" xml:space="preserve">
          <source>AddressErrors</source>
          <target state="translated">AddressErrors</target>
        </trans-unit>
        <trans-unit id="06e04060a6b90bd37d4d223392d8923a95178146" translate="yes" xml:space="preserve">
          <source>AddressErrors.addressLine</source>
          <target state="translated">AddressErrors.addressLine</target>
        </trans-unit>
        <trans-unit id="03851030f351aab5f8f6f4ee094ccd10c8a21bb2" translate="yes" xml:space="preserve">
          <source>AddressErrors.city</source>
          <target state="translated">AddressErrors.city</target>
        </trans-unit>
        <trans-unit id="e3297e1ef3ae8d561ef9b9ab145ba4b15546404d" translate="yes" xml:space="preserve">
          <source>AddressErrors.country</source>
          <target state="translated">AddressErrors.country</target>
        </trans-unit>
        <trans-unit id="720bef2963b61d232b0f011e2a0ab24e7ca927e6" translate="yes" xml:space="preserve">
          <source>AddressErrors.dependentLocality</source>
          <target state="translated">AddressErrors.dependentLocality</target>
        </trans-unit>
        <trans-unit id="d6f7bd0d140ba00085d8d8702758321739d9076b" translate="yes" xml:space="preserve">
          <source>AddressErrors.organization</source>
          <target state="translated">AddressErrors.organization</target>
        </trans-unit>
        <trans-unit id="be36eb9d7e368faf1af65c65f74eac42e9684795" translate="yes" xml:space="preserve">
          <source>AddressErrors.phone</source>
          <target state="translated">AddressErrors.phone</target>
        </trans-unit>
        <trans-unit id="9e51b7652baca7b8527cb06b6d14783dd5991d4b" translate="yes" xml:space="preserve">
          <source>AddressErrors.postalCode</source>
          <target state="translated">AddressErrors.postalCode</target>
        </trans-unit>
        <trans-unit id="912a5ad34d614761a0648b2ff0479edd357ee1e1" translate="yes" xml:space="preserve">
          <source>AddressErrors.recipient</source>
          <target state="translated">AddressErrors.recipient</target>
        </trans-unit>
        <trans-unit id="fcbc2b60abd235cd7af8d55c5f2fafba151d67a6" translate="yes" xml:space="preserve">
          <source>AddressErrors.region</source>
          <target state="translated">AddressErrors.region</target>
        </trans-unit>
        <trans-unit id="7fe99dd355f82e43b14a1822c756daa296247d72" translate="yes" xml:space="preserve">
          <source>AddressErrors.regionCode</source>
          <target state="translated">AddressErrors.regionCode</target>
        </trans-unit>
        <trans-unit id="be128adf5252ffd07e252c4f6714b516795ce2fd" translate="yes" xml:space="preserve">
          <source>AddressErrors.sortingCode</source>
          <target state="translated">AddressErrors.sortingCode</target>
        </trans-unit>
        <trans-unit id="6d1c894260193cd986ee5492e4b20123ec9f25b4" translate="yes" xml:space="preserve">
          <source>Adds &lt;a href=&quot;../federatedcredential&quot;&gt;&lt;code&gt;FederatedCredential&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../passwordcredential&quot;&gt;&lt;code&gt;PasswordCredential&lt;/code&gt;&lt;/a&gt; instance as a possible value for &lt;code&gt;init.credentials&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="229069c5a5ebe1026255a564af73dec1c508daad" translate="yes" xml:space="preserve">
          <source>Adds &lt;a href=&quot;mediakeys&quot;&gt;&lt;code&gt;MediaKeys&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaEncryptedEvent&quot;&gt;&lt;code&gt;MediaEncryptedEvent&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/SetMediaKeys&quot;&gt;&lt;code&gt;setMediaKeys&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Onencrypted&quot;&gt;&lt;code&gt;onencrypted&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Onwaitingforkey&quot;&gt;&lt;code&gt;onwaitingforkey&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bfd30d13c35d7403128940a6efe40f45e58d26" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;GLuint64EXT&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc45cd708d476e37cfcf0ff2bff173479bb7fef2" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;PerformanceFrameTiming&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39695a23fc0b26fa9d067231ed9735f3d07fcb78" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;PerformanceNavigationTiming&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6013beae25c6f5ada1b4c480962948d3e00fac8" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;allowPaymentRequest&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ae593b9a5dca989376262d0315a327f6dbfcde" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;getSelection()&lt;/code&gt;, &lt;code&gt;onselectstart&lt;/code&gt; and &lt;code&gt;onselectionchange&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c665682c70c74666b71ca0d99680c2d281d736a8" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;includes()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d00e1f2508dd2b1350e0044a4d9fb4f167f68c3" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;lock()&lt;/code&gt; and &lt;code&gt;unlock()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fcef01ffb0df4d02aaf793dfcb84ae8168e6118" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;mark()&lt;/code&gt;, &lt;code&gt;clearMarks()&lt;/code&gt;, &lt;code&gt;measure()&lt;/code&gt; and &lt;code&gt;clearMeasures()&lt;/code&gt; methods to the &lt;code&gt;Performance&lt;/code&gt; interface. Adds the &lt;code&gt;PerformanceMark&lt;/code&gt; and &lt;code&gt;PeformanceMeasure&lt;/code&gt; interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c359d16a3661eaf9930c5e7fb9de626263a819" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;onpointerlockchange&lt;/code&gt; and &lt;code&gt;onpointerlockerror&lt;/code&gt; on &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;. It is experimentally implemented on &lt;code&gt;GlobalEventHandlers&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533f74bd9f1885a3823fa07eb4cb7f68847a1e31" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;onselectionchange.&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9a5b752f043c2d2483d5bec54453f63419c056" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;performance&lt;/code&gt; attribute on &lt;code&gt;Window&lt;/code&gt; and &lt;code&gt;WorkerGlobalScope&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebbe4a71bc3721d6644760dc4c329a655b031c4" translate="yes" xml:space="preserve">
          <source>Adds &lt;code&gt;sinkId&lt;/code&gt; and &lt;code&gt;setSinkId()&lt;/code&gt;, and &lt;code&gt;captureStream()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395cf318bd264db55de8fddd8594867692a72197" translate="yes" xml:space="preserve">
          <source>Adds a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/big&quot;&gt;&lt;code&gt;&amp;lt;big&amp;gt;&lt;/code&gt;&lt;/a&gt; tag around the selection or at the insertion point. (Not supported by Internet Explorer.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b21903bdc0ed52fe8ac7ed8901ae957219f5468" translate="yes" xml:space="preserve">
          <source>Adds a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small&quot;&gt;&lt;code&gt;&amp;lt;small&amp;gt;&lt;/code&gt;&lt;/a&gt; tag around the selection or at the insertion point. (Not supported by Internet Explorer.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4aa5657e6fe9d9f31eba75c37312ef75d89744" translate="yes" xml:space="preserve">
          <source>Adds a circular arc to the path with the given control points and radius, connected to the previous point by a straight line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff1ec7dc9e66ec9b3cf256a081d68e5d251a6e5" translate="yes" xml:space="preserve">
          <source>Adds a cubic B&amp;eacute;zier curve to the path. It requires three points. The first two points are control points and the third one is the end point. The starting point is the last point in the current path, which can be changed using &lt;code&gt;moveTo()&lt;/code&gt; before creating the B&amp;eacute;zier curve.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b10333a27d986b0c9b11a3e97d13e07a1ad253c" translate="yes" xml:space="preserve">
          <source>Adds a cue (specified as a &lt;a href=&quot;texttrackcue&quot;&gt;&lt;code&gt;TextTrackCue&lt;/code&gt;&lt;/a&gt; object to the track's list of cues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad46e4c07d6ca98bd9b20a5db7e17be58be5070" translate="yes" xml:space="preserve">
          <source>Adds a font to the font set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6fab0e93d21f8cd1ad41b6780ec25989d71a9a3" translate="yes" xml:space="preserve">
          <source>Adds a heading element around a selection or insertion point line. Requires the tag-name string as a value argument (i.e. &lt;code&gt;&quot;H1&quot;&lt;/code&gt;, &lt;code&gt;&quot;H6&quot;&lt;/code&gt;). (Not supported by Internet Explorer and Safari.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49d4bcb32db13dc95dc65d3aacc46c5ba74b9e2" translate="yes" xml:space="preserve">
          <source>Adds a hit region to the canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45130dc40bd36c22a2a768956ea0977730e890e1" translate="yes" xml:space="preserve">
          <source>Adds a listener to the &lt;code&gt;MediaQueryListener&lt;/code&gt; that will run a custom callback function in response to the media query status changing. This is basically an alias for &lt;a href=&quot;eventtarget/addeventlistener&quot;&gt;&lt;code&gt;EventTarget.addEventListener()&lt;/code&gt;&lt;/a&gt;, for backwards compatibility purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e020552498d8c5d6296b2090856e840e16e8c0" translate="yes" xml:space="preserve">
          <source>Adds a marker to the browser's &lt;a href=&quot;https://developer.chrome.com/devtools/docs/timeline&quot;&gt;Timeline&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance/Waterfall&quot;&gt;Waterfall&lt;/a&gt; tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488e8a93225479ee077f6a808d9ce0c86af0ad8a" translate="yes" xml:space="preserve">
          <source>Adds a new &lt;code&gt;pname&lt;/code&gt; value:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2566ba34c15ebfc60275c6031e9d69d879ba68d4" translate="yes" xml:space="preserve">
          <source>Adds a new CSS declaration to the &lt;code&gt;StylePropertyMap&lt;/code&gt; with the given property and value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df0ff0088709ef3006a761486d56ff34c89e3d8" translate="yes" xml:space="preserve">
          <source>Adds a new stop, defined by an &lt;code&gt;offset&lt;/code&gt; and a &lt;code&gt;color&lt;/code&gt;, to the gradient. If the offset is not between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;, inclusive, an &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt; is raised; if the color can't be parsed as a CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/color_value&quot;&gt;&lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;SYNTAX_ERR&lt;/code&gt; is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0259ecd17823c4e71338ac4877acb13651ecb39e" translate="yes" xml:space="preserve">
          <source>Adds a path to the current path with an optional transformation matrix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f887c5c12602df9550b14de0d8c08de287f33a6" translate="yes" xml:space="preserve">
          <source>Adds a path to the current path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62595838cab5ecf2230a11fb0bab4b35533d8952" translate="yes" xml:space="preserve">
          <source>Adds a quadratic B&amp;eacute;zier curve to the current path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f247f368766e3dc83af5da0179459a9364654676" translate="yes" xml:space="preserve">
          <source>Adds a rotation to the transformation matrix. The angle argument represents a clockwise rotation angle and is expressed in radians.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58d7984e9af7a36f109c59c3fb314e5e2622fe8" translate="yes" xml:space="preserve">
          <source>Adds a scaling transformation to the canvas units by x horizontally and by y vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf9c3cf98df2cac146fbceed4c6e58cbc4e15ec" translate="yes" xml:space="preserve">
          <source>Adds a single marker to the browser's &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference&quot;&gt;Performance&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Performance/Waterfall&quot;&gt;Waterfall&lt;/a&gt; tool. This lets you correlate a point in your code with the other events recorded in the timeline, such as layout and paint events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ee9b0701a6a108d251c0a4ae64d26b11fe106a" translate="yes" xml:space="preserve">
          <source>Adds a straight line to the path, going to the start of the current sub-path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236bf05fbdb0372a9bdc94438e1cae7e9704d8e2" translate="yes" xml:space="preserve">
          <source>Adds a text track (such as a track for subtitles) to a media element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616fbe0fec923607b30e8a422b1dffe781651959" translate="yes" xml:space="preserve">
          <source>Adds a translation transformation by moving the canvas and its origin x horzontally and y vertically on the grid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9461cb1f50a956ba8c6ce5cf1c42771487b9bab0" translate="yes" xml:space="preserve">
          <source>Adds additional parameter names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ab41741143545a6ab79c6ab6250826d7e4c9d5" translate="yes" xml:space="preserve">
          <source>Adds all the children of the specified node to the selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d73158ef835885c2f0f8e6ca88b553ed5be7bf" translate="yes" xml:space="preserve">
          <source>Adds an &lt;a href=&quot;speechsynthesisutterance&quot;&gt;&lt;code&gt;utterance&lt;/code&gt;&lt;/a&gt; to the utterance queue; it will be spoken when any other utterances queued before it have been spoken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34d44f2e31aafab6704ac032178b79a7cf56286" translate="yes" xml:space="preserve">
          <source>Adds an HTML block-level element around the line containing the current selection, replacing the block element containing the line if one exists (in Firefox, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote&quot;&gt;&lt;code&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt;&lt;/a&gt; is the exception &amp;mdash; it will wrap any containing block element). Requires a tag-name string as a value argument. Virtually all block-level elements can be used. (Internet Explorer and Edge support only heading tags &lt;code&gt;H1&lt;/code&gt;&amp;ndash;&lt;code&gt;H6&lt;/code&gt;, &lt;code&gt;ADDRESS&lt;/code&gt;, and &lt;code&gt;PRE&lt;/code&gt;, which must be wrapped in angle brackets, such as &lt;code&gt;&quot;&amp;lt;H1&amp;gt;&quot;&lt;/code&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4dd5069394f57c6a7170f4b854029806f71873e" translate="yes" xml:space="preserve">
          <source>Adds an arc to the path which is centered at (&lt;code&gt;x, y&lt;/code&gt;) position with radius&lt;code&gt;r&lt;/code&gt; starting at &lt;code&gt;startAngle&lt;/code&gt; and ending at &lt;code&gt;endAngle&lt;/code&gt; going in the given direction by &lt;code&gt;anticlockwise&lt;/code&gt; (defaulting to clockwise).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca58fb14ac475df5699f293c9ead73d61e926fee" translate="yes" xml:space="preserve">
          <source>Adds an arc to the path which is centered at &lt;em&gt;(x, y)&lt;/em&gt; position with radius&lt;em&gt; r&lt;/em&gt; starting at &lt;em&gt;startAngle&lt;/em&gt; and ending at &lt;em&gt;endAngle&lt;/em&gt; going in the given direction by &lt;em&gt;anticlockwise&lt;/em&gt; (defaulting to clockwise).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93030537392f589cf254838f76d180a108f0584" translate="yes" xml:space="preserve">
          <source>Adds an arc to the path with the given control points and radius, connected to the previous point by a straight line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33d80215533828f03f117e6db21c260439ebc52e" translate="yes" xml:space="preserve">
          <source>Adds an element to the collection of &lt;code&gt;option&lt;/code&gt; elements for this &lt;code&gt;select&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b032aa9addfc0fe9602ac9428f7cbcf60ad6546c" translate="yes" xml:space="preserve">
          <source>Adds an ellipse to the path which is centered at &lt;em&gt;(x, y)&lt;/em&gt; position with the radii &lt;em&gt;radiusX&lt;/em&gt; and &lt;em&gt;radiusY&lt;/em&gt; starting at &lt;em&gt;startAngle&lt;/em&gt; and ending at &lt;em&gt;endAngle&lt;/em&gt; going in the given direction by &lt;em&gt;anticlockwise&lt;/em&gt; (defaulting to clockwise).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71df2fae6b45253fa6f05134a9204ef9a631bd7f" translate="yes" xml:space="preserve">
          <source>Adds an elliptical arc to the path which is centered at (&lt;code&gt;x, y&lt;/code&gt;) position with the radii &lt;code&gt;radiusX&lt;/code&gt; and &lt;code&gt;radiusY&lt;/code&gt; starting at &lt;code&gt;startAngle&lt;/code&gt; and ending at &lt;code&gt;endAngle&lt;/code&gt; going in the given direction by &lt;code&gt;anticlockwise&lt;/code&gt; (defaulting to clockwise).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c05a79790a59be22fb5a48a19fb9a5c180f2a2d" translate="yes" xml:space="preserve">
          <source>Adds an item (either a &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object or a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt;) to the drag item list and returns a &lt;a href=&quot;datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; object for the new item.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeefff007af3446e22ff23775fa5cd362c0443d1" translate="yes" xml:space="preserve">
          <source>Adds image constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78061172a12d9b248ace9544c9dc6d871033777e" translate="yes" xml:space="preserve">
          <source>Adds many new internal formats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83923ca0ee7423bababe1f5f04661e9bf5b0c6b6" translate="yes" xml:space="preserve">
          <source>Adds new &lt;code&gt;pname&lt;/code&gt; values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734ed6f196497319ed75aaad63a6a1bf22dfa033" translate="yes" xml:space="preserve">
          <source>Adds new &lt;code&gt;target&lt;/code&gt; buffers:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e642456351a381109a45801bec800888d0d01a90" translate="yes" xml:space="preserve">
          <source>Adds new &lt;code&gt;usage&lt;/code&gt; hints:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b3075673ca187014a2ec03ebe9deb1573ccb7f" translate="yes" xml:space="preserve">
          <source>Adds requirements regarding trusted and untrusted events, though it does not itself define the &lt;code&gt;isTrusted&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030388e14c955c9d6da5797bb0d01daec6f82bf4" translate="yes" xml:space="preserve">
          <source>Adds serializer to the &lt;code&gt;PerformanceEntry&lt;/code&gt; interface as well as adding the &lt;code&gt;PerformanceObserver&lt;/code&gt; interface and callback</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d062e187316ba30dbbdd36e954db50a1dcf78ef" translate="yes" xml:space="preserve">
          <source>Adds the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerRegistration/sync&quot;&gt;&lt;code&gt;sync&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00c87f225d3d47fe23f39fd0957d9785bae0271" translate="yes" xml:space="preserve">
          <source>Adds the &lt;a href=&quot;onsync&quot;&gt;&lt;code&gt;onsync&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348e19ba12c3cbb31fc6b4ae641a98f244bf3c61" translate="yes" xml:space="preserve">
          <source>Adds the &lt;a href=&quot;performanceframetiming&quot;&gt;&lt;code&gt;PerformanceFrameTiming&lt;/code&gt;&lt;/a&gt; interface and the &lt;code&gt;frame&lt;/code&gt; value for &lt;code&gt;entryType&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec24f0ac5101bf419487d7bd022b246586bc29c" translate="yes" xml:space="preserve">
          <source>Adds the &lt;a href=&quot;performancemark&quot;&gt;&lt;code&gt;PerformanceMark&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;performancemeasure&quot;&gt;&lt;code&gt;PerformanceMeasure&lt;/code&gt;&lt;/a&gt; interfaces as well as the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;measure&lt;/code&gt; values for &lt;code&gt;entryType&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3faa6203bc936e5d168978daa5a3cc04d6037f49" translate="yes" xml:space="preserve">
          <source>Adds the &lt;a href=&quot;performancenavigationtiming&quot;&gt;&lt;code&gt;PerformanceNavigationTiming&lt;/code&gt;&lt;/a&gt; interface and the &lt;code&gt;navigation&lt;/code&gt; value for &lt;code&gt;entryType&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65492adae98aad0873c380e777c3058004deb9f" translate="yes" xml:space="preserve">
          <source>Adds the &lt;a href=&quot;performanceresourcetiming&quot;&gt;&lt;code&gt;PerformanceResourceTiming&lt;/code&gt;&lt;/a&gt; interface and the &lt;code&gt;resource&lt;/code&gt; value for &lt;code&gt;entryType&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b245b5055be54aeb6c69d0c0ddb60e184d7e8d7" translate="yes" xml:space="preserve">
          <source>Adds the &lt;a href=&quot;pushmanager&quot;&gt;&lt;code&gt;pushManager&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b70d6dab00464ab8fbb3835c236138c4cee80a2" translate="yes" xml:space="preserve">
          <source>Adds the &lt;a href=&quot;serviceworkerregistration/shownotification&quot;&gt;&lt;code&gt;showNotification()&lt;/code&gt;&lt;/a&gt; method and the &lt;a href=&quot;serviceworkerregistration/getnotifications&quot;&gt;&lt;code&gt;getNotifications()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70dd0cf94ac5d18fec29abcdd9d8a92a4eb8654f" translate="yes" xml:space="preserve">
          <source>Adds the &lt;a href=&quot;svgelement/dataset&quot;&gt;&lt;code&gt;dataset&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fba23903119abf6bec4622604de7913bd38d6222" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;PerformanceEntry&lt;/code&gt; interface, the &lt;code&gt;PerformanceEntryList&lt;/code&gt; type, as well as the &lt;code&gt;getEntries()&lt;/code&gt;, &lt;code&gt;getEntriesByType()&lt;/code&gt;, and &lt;code&gt;getEntriesByName()&lt;/code&gt; methods on the &lt;code&gt;Performance&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45b164279668417048b563c6558dc818d1fc521" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;PerformanceNavigationTiming&lt;/code&gt; interface. Obsolete's the the &lt;code&gt;PerformanceTiming&lt;/code&gt; interface, the &lt;code&gt;PerformanceNavigation&lt;/code&gt; interface, as well as the &lt;code&gt;timing&lt;/code&gt; and &lt;code&gt;navigation&lt;/code&gt; properties to the &lt;code&gt;Performance&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d90c6cd73daca782b7a590d1a75ec7a584dfe0" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;PerformanceResourceTiming&lt;/code&gt; interface. Adds the &lt;code&gt;clearResourceTimings()&lt;/code&gt; method, the &lt;code&gt;setResourceTimingBufferSize()&lt;/code&gt; method, and the &lt;code&gt;onresourcetimingbufferfull&lt;/code&gt; event handler to the &lt;code&gt;Performance&lt;/code&gt; interface. Also adds the &lt;code&gt;Timing-Allow-Origin&lt;/code&gt; response header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c08160bf11db2d8d546ae99fb99f21b383c041" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;PerformanceTiming&lt;/code&gt; and &lt;code&gt;PerformanceNavigation&lt;/code&gt; interfaces. Adds &lt;code&gt;timing&lt;/code&gt; and &lt;code&gt;navigation&lt;/code&gt; properties to the &lt;code&gt;Performance&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3579f3a9fbacd33f47a6e8bd10318095664b7a" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;escape()&lt;/code&gt; static method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ef317f4ac563b815b5bf020b1e4fe70674990a" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;images&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d35ab49073c4e357ed657dca5ccff73cbec5488" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;nextHopProtocol&lt;/code&gt;, &lt;code&gt;workerStart&lt;/code&gt;, &lt;code&gt;transferSize&lt;/code&gt;, &lt;code&gt;encodedBodySize&lt;/code&gt;, and &lt;code&gt;decodedBodySize&lt;/code&gt; properties to the &lt;code&gt;PerformanceResourceTiming&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05da588dcefce4d3b51410657ad88c8dfbfa2842" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;paintWorklet&lt;/code&gt; static property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b5acf07fc02fcbabfffbc832976b7d7e7527c6" translate="yes" xml:space="preserve">
          <source>Adds the &lt;code&gt;scrollRestoration&lt;/code&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24fdac2626e73073b0249b006318826bf7e385d" translate="yes" xml:space="preserve">
          <source>Adds the constructor for the &lt;code&gt;DOMException&lt;/code&gt; class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7383272d9c315de864119c0ea4b8bad752393a9a" translate="yes" xml:space="preserve">
          <source>Adds the constructor for the &lt;code&gt;DOMException&lt;/code&gt; class. Adds the &lt;code&gt;NotReadableError&lt;/code&gt;, &lt;code&gt;UnknownError&lt;/code&gt;, &lt;code&gt;ConstraintError&lt;/code&gt;, &lt;code&gt;DataError&lt;/code&gt;, &lt;code&gt;TransactionInactiveError&lt;/code&gt;, &lt;code&gt;ReadOnlyError&lt;/code&gt;, &lt;code&gt;VersionError&lt;/code&gt;, &lt;code&gt;OperationError&lt;/code&gt;, and &lt;code&gt;NotAllowedError&lt;/code&gt; values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d8672102981c0c260406c690e1ecceb7a83178" translate="yes" xml:space="preserve">
          <source>Adds the following properties: &lt;code&gt;crossOrigin&lt;/code&gt;, &lt;code&gt;referrerPolicy&lt;/code&gt;, and &lt;code&gt;as&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e93778341c0c506266da3be78cc93c4b8e7132f" translate="yes" xml:space="preserve">
          <source>Adds the given &lt;em&gt;token&lt;/em&gt; to the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd259154cb49c727206dd5093ec41e1cf6336f4" translate="yes" xml:space="preserve">
          <source>Adds the method &lt;code&gt;captureStream()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df998e94030451dfb4dcce795e4e61e52d026789" translate="yes" xml:space="preserve">
          <source>Adds the script module at the given URL to the current worklet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512936ce117ae072a72b0732440e9b1d92970d12" translate="yes" xml:space="preserve">
          <source>Adds the specified childNode argument as the last child to the current node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539a63c5cf3a71ce0c3c676c9a45e5ae124ef8a6" translate="yes" xml:space="preserve">
          <source>Adds the specified class values. If these classes already exist in the element's &lt;code&gt;class&lt;/code&gt; attribute they are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9de3f92510ac6c1817ff14e8bb70b47cc1172b9" translate="yes" xml:space="preserve">
          <source>Adds two obsolete properties, &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;align&lt;/code&gt;, to help with compatibility with old Web sites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6342da7249914e0416226a0b71790b5327d202ea" translate="yes" xml:space="preserve">
          <source>Adds: &lt;code&gt;gl.DRAW_FRAMEBUFFER&lt;/code&gt; and &lt;code&gt;gl.READ_FRAMEBUFFER&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0763277dadbdefaf9b64340e0564c95c5631498d" translate="yes" xml:space="preserve">
          <source>Adds: &lt;code&gt;gl.TEXTURE_3D&lt;/code&gt; and &lt;code&gt;gl.TEXTURE_2D_ARRAY&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751fc8cbcccc517e7d1daea88fbe24d153564a2e" translate="yes" xml:space="preserve">
          <source>Adjusting layout based on the orientation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487f51797f4b7ab7ffdd6007035c653be9e9482c" translate="yes" xml:space="preserve">
          <source>Adjusts the clock for this SVG document fragment, establishing a new current time. If &lt;code&gt;setCurrentTime&lt;/code&gt; is called before the document timeline has begun (for example, by script running in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; element before the document's SVGLoad event is dispatched), then the value of seconds in the last invocation of the method gives the time that the document will seek to once the document timeline has begun.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a764e5979944fa2c3e3b702d5946db9d5f4d7acf" translate="yes" xml:space="preserve">
          <source>Adobe Illustrator to Canvas plug-in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01efd1ca4e4e7d46e0ede186ab3f50d8a64e2294" translate="yes" xml:space="preserve">
          <source>Adopt node from an external document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13bad3d96fce731bb45838b659f5d70f26588a1a" translate="yes" xml:space="preserve">
          <source>Ads</source>
          <target state="translated">Ads</target>
        </trans-unit>
        <trans-unit id="8fff8301582157f757478c0e3a5c0237a00e4be0" translate="yes" xml:space="preserve">
          <source>Advanced API for rendering complex graphics, including 3D.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93492696b54e79d39f98b7c67d7d669496f6f59e" translate="yes" xml:space="preserve">
          <source>Advanced animations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7c23ce6c77385558e4d262f20e229ac69a3abe" translate="yes" xml:space="preserve">
          <source>Advanced concepts and examples</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82d258c20a7f0a22cb87777fd54736875bd07ad" translate="yes" xml:space="preserve">
          <source>Advanced constraints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab875a4c694196a94f4e113d0f898307dc008e98" translate="yes" xml:space="preserve">
          <source>Advanced media stream recorder sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce287c4031b6e1769716b9e817e704961e1940e" translate="yes" xml:space="preserve">
          <source>Advanced techniques: creating sound, sequencing, timing, scheduling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19025ae65683adbafed5898d33d9441870f1930b" translate="yes" xml:space="preserve">
          <source>Advanced text measurements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14182af778c1aa7573224b77e042b1c004a2abf" translate="yes" xml:space="preserve">
          <source>Advanced text metrics properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b8839cf2697f67602716c4de14ba5f15b47896" translate="yes" xml:space="preserve">
          <source>Advanced tutorials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0da13bd8ab6a5b37c0bf90d59dab3c2acccc9435" translate="yes" xml:space="preserve">
          <source>Advances the cursor to the next position along its direction, to the item whose key matches the optional &lt;code&gt;key&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f236985731a18d567ac1d166a4f8c0b2fd7be1" translate="yes" xml:space="preserve">
          <source>Advances the cursor to the next position along its direction, to the item whose key matches the optional &lt;code&gt;key&lt;/code&gt; parameter. If no key is specified, advance to the immediate next position. Returns false if the cursor has reached the end of its range; otherwise returns true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df9ccf1a97bf52efbc09f92ab1006c40676e94b" translate="yes" xml:space="preserve">
          <source>Advantages of using the Payment Request API with &quot;basic-card&quot; (card-based payments):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064d49d943fac2367bc85e77ca73308dabcf551b" translate="yes" xml:space="preserve">
          <source>Affects how the index behaves when the result of evaluating the index's key path yields an array. If &lt;code&gt;true&lt;/code&gt;, there is one record in the index for each item in an array of keys. If &lt;code&gt;false&lt;/code&gt;, then there is one record for each key that is an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437b37b4fbe4affdaeb651973f4098aa0e9161f9" translate="yes" xml:space="preserve">
          <source>After a few failed attempts to get your attention, they send you an email, and your email app produces a push notification that successfully alerts you, even though your mail web app is not open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="177302a451023839d0e06ae7f33600a4982e0d2b" translate="yes" xml:space="preserve">
          <source>After a successful handshake, client can send messages to the server, but now these are encoded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c68ed70461efd86b9c480b441ada786f1504215" translate="yes" xml:space="preserve">
          <source>After a successful handshake, the client will send encoded messages to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f4fb1c4c99963451feec7a23d7995d96e82a9d8" translate="yes" xml:space="preserve">
          <source>After a successful installation, the service worker activates. This doesn&amp;rsquo;t have much of a distinct use the first time your service worker is installed/activated, but it means more when the service worker is updated (see the &lt;a href=&quot;#Updating_your_service_worker&quot;&gt;Updating your service worker&lt;/a&gt; section later on.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3bf464b8e3e0b6a4a62d4ecd2584b4f820422a7" translate="yes" xml:space="preserve">
          <source>After a user has registered with WebAuthn, they can subsequently authenticate (a.k.a. - login or sign-in) with the service. The authentication flow looks similar to the registration flow, and the illustration of actions in Figure 2 may be recognizable as being similar to the illustration of registration actions in Figure 1. The primary differences between registration and authentication are that: 1) authentication doesn't require user or relying party information; and 2) authentication creates an assertion using the previously generated key pair for the service rather than creating an attestation with the key pair that was burned into the authenticator during manufacturing. Again, the description of authentication below is a broad overview rather than getting into all the options and features of WebAuthn. The specific options for authenticating can be found in the &lt;a href=&quot;publickeycredentialrequestoptions&quot;&gt;&lt;code&gt;PublicKeyCredentialRequestOptions&lt;/code&gt;&lt;/a&gt; dictionary, and the resulting data can be found in the &lt;a href=&quot;publickeycredential&quot;&gt;&lt;code&gt;PublicKeyCredential&lt;/code&gt;&lt;/a&gt; interface (where &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PublicKeyCredential/response&quot;&gt;&lt;code&gt;PublicKeyCredential.response&lt;/code&gt;&lt;/a&gt; is the &lt;a href=&quot;authenticatorassertionresponse&quot;&gt;&lt;code&gt;AuthenticatorAssertionResponse&lt;/code&gt;&lt;/a&gt; interface) .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04bc11eb12bb73ba5efb73636a03c1cb5ec4f4d1" translate="yes" xml:space="preserve">
          <source>After an observer is created, the next step is to use the &lt;a href=&quot;../performanceobserver/observe&quot;&gt;&lt;code&gt;PerformanceObserver.observe()&lt;/code&gt;&lt;/a&gt; method to specify the set of performance events to observe. In the following example, the observer only registers for &quot;&lt;code&gt;frame&lt;/code&gt;&quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;performance entry&lt;/code&gt;&lt;/a&gt; notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc94b1535907de88b1436c3036c1375bd2a75ba" translate="yes" xml:space="preserve">
          <source>After calling &lt;code&gt;&lt;a href=&quot;../htmlmediaelement#play&quot;&gt;HTMLMediaElement.play()&lt;/a&gt;&lt;/code&gt; on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt;, there's a (hopefully brief) period of time that elapses before the stream of video begins to flow. To avoid blocking until that happens, we add an event listener to &lt;code&gt;video&lt;/code&gt;, &lt;code&gt;canplay&lt;/code&gt;, which is delivered when the video playback actually begins. At that point, all the properties in the &lt;code&gt;video&lt;/code&gt; object have been configured based on the stream's format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00dd52478620e84938935340fc9ff952dc5fda9e" translate="yes" xml:space="preserve">
          <source>After creating our &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; and saving it as &lt;code&gt;myPeerConnection&lt;/code&gt;, we pass the description included in the received offer message, &lt;code&gt;msg&lt;/code&gt;, directly into &lt;code&gt;setRemoteDescription()&lt;/code&gt; to tell the user agent's WebRTC layer what configuration the caller has proposed using. When our promise fulfillment handler is called, indicating that this has been done, we create a stream, add it to the connection, then create an SDP answer and call &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/setLocalConnection&quot;&gt;&lt;code&gt;setLocalConnection()&lt;/code&gt;&lt;/a&gt; to set that as the configuration at our end of the call before forwarding that answer to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cff516ffb99ea709b6bf9d4671da51dfc217c5" translate="yes" xml:space="preserve">
          <source>After creating the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, we set up handlers for the events that matter to us.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7523867d6de5436ffea124012129314d470d3e79" translate="yes" xml:space="preserve">
          <source>After creating the &lt;code&gt;RTCPeerConnection&lt;/code&gt; for the caller (&lt;code&gt;callerPC&lt;/code&gt;), we look to see if it has an &lt;a href=&quot;../rtcpeerconnection/addtrack&quot;&gt;&lt;code&gt;addTrack()&lt;/code&gt;&lt;/a&gt; method. If it does, we set &lt;code&gt;hasAddTrack&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;; otherwise, we set it to &lt;code&gt;false&lt;/code&gt;. This variable will let the example operate even on browsers not yet implementing the newer &lt;code&gt;addTrack()&lt;/code&gt; method; we'll do so by falling back to the older &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/addStream&quot;&gt;&lt;code&gt;addStream()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e6fcddadae565ded6a95f4c3a776eef651ffa3" translate="yes" xml:space="preserve">
          <source>After creating the elements that will represent the key and its label, we configure the key's element by setting its class to &quot;key&quot; (which establishes its appearance). Then we add &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-data-*&quot;&gt;data-*&lt;/a&gt;&lt;/code&gt; attributes which contain the key's octave (attribute &lt;code&gt;data-octave&lt;/code&gt;), string representing the note to play (attribute &lt;code&gt;data-note&lt;/code&gt;), and frequency (attribute &lt;code&gt;data-frequency&lt;/code&gt;) in Hertz. This will let us easily fetch that information as needed when handling events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c50a860c81544c5e37e8843893707325ff03ca" translate="yes" xml:space="preserve">
          <source>After declaring the key range, we log its &lt;code&gt;lower&lt;/code&gt; property value to the console, which should appear as &quot;F&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0bb8cc28d8f7615130fd6ecf79d216178fdeb3" translate="yes" xml:space="preserve">
          <source>After declaring the key range, we log its &lt;code&gt;lowerOpen&lt;/code&gt; property value to the console, which should appear as &quot;true&quot;: the lower bound is open, so won't be included in the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce2c1617609c4fa06ae834c680c3a3fe8143b059" translate="yes" xml:space="preserve">
          <source>After declaring the key range, we log its &lt;code&gt;upper&lt;/code&gt; property value to the console, which should appear as &quot;W&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30fd6a80a61cb8cc6deb540e86296a3dba161815" translate="yes" xml:space="preserve">
          <source>After declaring the key range, we log its &lt;code&gt;upperOpen&lt;/code&gt; property value to the console, which should appear as &quot;true&quot;: the upper bound is open, so won't be included in the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095ada755f07a849e0a0addb0a6ba23788dfb24c" translate="yes" xml:space="preserve">
          <source>After decoding the &lt;a href=&quot;https://tools.ietf.org/html/rfc7049&quot;&gt;CBOR&lt;/a&gt; encoded ArrayBuffer, the resulting JavaScript object will contain the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae7153ec971ed385ef573f91bb914ac55350f3b3" translate="yes" xml:space="preserve">
          <source>After drawing the line, we call &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice&quot;&gt;&lt;code&gt;Array.splice()&lt;/code&gt;&lt;/a&gt; to replace the previous information about the touch point with the current information in the &lt;code&gt;ongoingTouches&lt;/code&gt; array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fde9328982c691b998f451f8ea709ef7b3bec84" translate="yes" xml:space="preserve">
          <source>After executing the above code, &lt;code&gt;el&lt;/code&gt; contains the first element in the document whose ID is one of &lt;code&gt;main&lt;/code&gt;, &lt;code&gt;basic&lt;/code&gt;, or &lt;code&gt;exclamation&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e4a764c9e9cccf334b586e748aa054c9222233" translate="yes" xml:space="preserve">
          <source>After generating a suitable set of keyframes from the property value lists, each supplied offset is applied to the corresponding keyframe. If there are insufficient values, or if the list contains &lt;code&gt;null&lt;/code&gt; values, the keyframes without specified offsets will be evenly spaced as with the array format described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c9edfe350c6b4ac89be0eb0781a396f93bbe54" translate="yes" xml:space="preserve">
          <source>After getting a reference to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul&quot;&gt;&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;&lt;/a&gt; which contains the list of user names into the variable &lt;code&gt;listElem&lt;/code&gt;, we empty the list by removing each of its child elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="197dd81303c62c7f83cd1353864f1e9e4a194611" translate="yes" xml:space="preserve">
          <source>After getting access to the output list element in the variable &lt;code&gt;connectionView&lt;/code&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/receiver&quot;&gt;&lt;code&gt;navigator.receiver&lt;/code&gt;&lt;/a&gt; is used to get a reference to the &lt;a href=&quot;../presentationreceiver&quot;&gt;&lt;code&gt;PresentationReceiver&lt;/code&gt;&lt;/a&gt; object for this context, and its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PresentationReceiver/connectionList&quot;&gt;&lt;code&gt;connectionList&lt;/code&gt;&lt;/a&gt; is used to get a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which will be called when the list is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe1cf406ecb1a0a91619e7d4253e84dc7295855a" translate="yes" xml:space="preserve">
          <source>After getting the WebGL context, &lt;code&gt;gl&lt;/code&gt;, we need to begin by building the shader program. Here, we're using code designed to let us add multiple shaders to our program quite easily. The array &lt;code&gt;shaderSet&lt;/code&gt; contains a list of objects, each describing one shader function to be compiled into the program. Each function has a type (one of &lt;code&gt;gl.VERTEX_SHADER&lt;/code&gt; or &lt;code&gt;gl.FRAGMENT_SHADER&lt;/code&gt;) and an ID (the ID of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; element containing the shader's code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbf9da6f7ffa0fa4b2a84a297b2fe1da84656fb" translate="yes" xml:space="preserve">
          <source>After grabbing references to the output &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; and the HTML element (so we can output diagnostic messages and update the app background color later on), we implement an onclick handler so that when the screen is tapped/clicked, the speech recognition service will start. This is achieved by calling &lt;a href=&quot;../speechrecognition/start&quot;&gt;&lt;code&gt;SpeechRecognition.start()&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;forEach()&lt;/code&gt; method is used to output colored indicators showing what colors to try saying.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bac580b67e905a6ca68e1e47b2e9fcd57b0f7a" translate="yes" xml:space="preserve">
          <source>After having prompted the user for permission, returns the audio or video stream associated to a camera or microphone on the local computer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf71778bf0c86c957fdd1d1c82a74c53e5cf1715" translate="yes" xml:space="preserve">
          <source>After having seen how to &lt;a href=&quot;applying_styles_and_colors&quot;&gt;apply styles and colors&lt;/a&gt; in the previous chapter, we will now have a look at how to draw text onto the canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd06cca83f1a2e15b9f4da942f904d56c653961e" translate="yes" xml:space="preserve">
          <source>After pulling references to the two &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, we check if a WebRTC connection exists; if it does, we proceed to disconnect and close the call:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea520561c0c04a9220db27f1a7814af6c7245ecb" translate="yes" xml:space="preserve">
          <source>After realizing, to my delight, that the nifty &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element I'd been &lt;a href=&quot;http://www.whatwg.org/specs/web-apps/current-work/#dynamic&quot;&gt;reading about&lt;/a&gt; was not only soon to be supported in Firefox, but was &lt;strong&gt;already&lt;/strong&gt; supported in the current version of Safari, I had to try a little experiment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89bc27796717e8ec98c5bd7d00580978b736d462" translate="yes" xml:space="preserve">
          <source>After running this code, the resulting waveforms should look something like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2ce061ae08a30b59869dc12d0fc289fe2dc920" translate="yes" xml:space="preserve">
          <source>After setLocalDescription(), the caller asks STUN servers to generate the ice candidates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b4723f21524e8743f07db02f95591aa2d23b5c5" translate="yes" xml:space="preserve">
          <source>After setting &lt;code&gt;audioTracks&lt;/code&gt; to be a list of the audio tracks on the stream from the user's microphone, it's time to add the media to the caller's &lt;code&gt;RTCPeerConnection&lt;/code&gt;. If &lt;code&gt;addTrack()&lt;/code&gt; is available on the &lt;code&gt;RTCPeerConnection&lt;/code&gt;, we add each of the stream's audio tracks, one by one, to the connection using &lt;a href=&quot;../rtcpeerconnection/addtrack&quot;&gt;&lt;code&gt;RTCPeerConnection.addTrack()&lt;/code&gt;&lt;/a&gt;. Otherwise we call &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/addStream&quot;&gt;&lt;code&gt;RTCPeerConnection.addStream()&lt;/code&gt;&lt;/a&gt; to add the stream to the call as a single unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea673e99455fdc4a9beca15e9180f1d6ef662e74" translate="yes" xml:space="preserve">
          <source>After setting the current shading program to &lt;code&gt;shaderProgram&lt;/code&gt;, this code fetches the three uniforms &lt;code&gt;&quot;uScalingFactor&quot;&lt;/code&gt;, &lt;code&gt;&quot;uGlobalColor&quot;&lt;/code&gt;, and &lt;code&gt;&quot;uRotationVector&quot;&lt;/code&gt;, calling &lt;code&gt;getUniformLocation()&lt;/code&gt; once for each uniform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728d0d7ede5377af402f33383448cd70e4e971e7" translate="yes" xml:space="preserve">
          <source>After setting the window's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event handler to be the &lt;code&gt;setup()&lt;/code&gt; function, the stage is set. Let's see how the action plays out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bb6529724be177c5c055892e11bf029a4f3ef9" translate="yes" xml:space="preserve">
          <source>After setting up variables to more conveniently reference the button element and the two elements into which the latitude and logitude will be drawn, the event listener is established by calling &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt; on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; element. When the user clicks the button, we'll fetch and display the location information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0aa66c4632a84528ee93bfe1dd2750c771f3894" translate="yes" xml:space="preserve">
          <source>After storing some of the event's processing in the &lt;code&gt;ongoingTouches&lt;/code&gt; for later processing, the start point is drawn as a small circle. We're using a 4-pixel wide line, so a 4 pixel radius circle will show up neatly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269b1e9b0d5af7396fee59cecde287b8e6a8e693" translate="yes" xml:space="preserve">
          <source>After testing this sample, note that the words hello and world are together: helloworld. So visually, when you see the HTML page it seems like the two text nodes hello and world are a single node, but remember that in the document model, there are two nodes. The second node is a new node of type TEXT_NODE, and it is the second child of the second &amp;lt;p&amp;gt; tag. The following figure shows the recently created Text Node object inside the document tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0628ef6c85d910992797017d911e12ed95dbf527" translate="yes" xml:space="preserve">
          <source>After that, &lt;a href=&quot;readentries&quot;&gt;&lt;code&gt;directoryReader.readEntries()&lt;/code&gt;&lt;/a&gt; is called to read in all the entries in the directory. These are each, in turn, passed into a recursive call to &lt;code&gt;scanFiles()&lt;/code&gt; to process them. Any of them which are files are simply inserted into the list; any which are directories are inserted into the list and a new level of the list's hierarchy is added below, and so forth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789880a6f1c619c6fc12d69add6bae5cf4687e53" translate="yes" xml:space="preserve">
          <source>After that, it is downloaded every 24 hours or so. It &lt;em&gt;may&lt;/em&gt; be downloaded more frequently, but it &lt;strong&gt;must&lt;/strong&gt; be downloaded every 24 hours to prevent bad scripts from being annoying for too long.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac2187b4b6ba6e7c3be69aea81241953e503776" translate="yes" xml:space="preserve">
          <source>After that, the code paths converge once again. The ad's background color is set to the value specified in the new ad's record, and elements' classes and contents are set appropriately as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3d7852afffe6bbe445ddd6302296732e33ea3f" translate="yes" xml:space="preserve">
          <source>After that, we create a combined &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; out of the recorded audio chunks, and create an object URL pointing to it, using &lt;code&gt;window.URL.createObjectURL(blob)&lt;/code&gt;. We then set the value of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; attribute to the object URL, so that when the play button is pressed on the audio player, it will play the &lt;code&gt;Blob&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce8bc57cd3f582ce1972299b72a7853205ba0213" translate="yes" xml:space="preserve">
          <source>After that, we iterate over all the &lt;a href=&quot;touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; objects in the list, pushing them onto an array of active touch points and drawing the start point for the draw as a small circle; we're using a 4-pixel wide line, so a 4 pixel radius circle will show up neatly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc378d23912b5f40260d31e146686194c5c6a3f" translate="yes" xml:space="preserve">
          <source>After that, we set up the handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/shippingaddresschange&quot;&gt;shippingaddresschange&lt;/a&gt;&lt;/code&gt; event so we can validate address information and call the request's &lt;a href=&quot;paymentrequest/show&quot;&gt;&lt;code&gt;show()&lt;/code&gt;&lt;/a&gt; method to start running the payment UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d141c6c146f54c92b6387e1e6402f658dfd4f54c" translate="yes" xml:space="preserve">
          <source>After the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event has finished propagating, the drag and drop operation is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb6649343810aa602e7d509d4413d7787dfeac1" translate="yes" xml:space="preserve">
          <source>After the chunks have all been written, we then perform the &lt;code&gt;ready&lt;/code&gt; check once more, to check that the last chunk has finished being written and all the work is done. When this &lt;code&gt;ready&lt;/code&gt; check fulfills, we invoke &lt;a href=&quot;../writablestreamdefaultwriter/close&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter.close()&lt;/code&gt;&lt;/a&gt; to close the stream. This also triggers the &lt;code&gt;close()&lt;/code&gt; method specified inside the &lt;code&gt;WritableStream()&lt;/code&gt; constructor, as discussed above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743628c673a1abca8c497fa3c15d53464791b377" translate="yes" xml:space="preserve">
          <source>After the clientDataJSON is converted from an ArrayBuffer to a JavaScript object, it will have the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e952fd5f318ce963aa02710c4ae1923b09b414" translate="yes" xml:space="preserve">
          <source>After the code is executed the object store should contain the value &quot;2&quot;, since &lt;code&gt;trans2&lt;/code&gt; should run after &lt;code&gt;trans1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ba2871e75ba224e433e15c40f20bbdb91d6af2" translate="yes" xml:space="preserve">
          <source>After the initial keydown event, only keypress events are sent until the keyup event occurs; the inter-spaced keydown events are not sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47becc47defd42be8bbc108b88dc5010ec04f1af" translate="yes" xml:space="preserve">
          <source>After the split, the current node contains all the content up to the specified offset point, and a newly created node of the same type contains the remaining text. The newly created node is returned to the caller. If the original node had a parent, the new node is inserted as the next sibling of the original node. If the offset is equal to the length of the original node, the newly created node has no data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540f830e7f80e7b14712461ace762a2933b327d5" translate="yes" xml:space="preserve">
          <source>After this step the GPU pipeline will clip the out of range vertices, and send the model down to the fragment shader for rasterization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf5ab53474d6bd7781deddc4d8636d81e3266ce" translate="yes" xml:space="preserve">
          <source>After using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions/query&quot;&gt;&lt;code&gt;navigator.permissions.query()&lt;/code&gt;&lt;/a&gt; to find out if we have (or if the user will be prompted to allow) &lt;code&gt;&quot;clipboard-read&quot;&lt;/code&gt; access, this example fetches the data currently on the clipboard. If it's not plain text, an error message is presented. Otherwise, an element referred to using the variable &lt;code&gt;textElem&lt;/code&gt; has its contents replaced with the clipboard's contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b588fde4d93b0c1546db3caa6562d089344ce922" translate="yes" xml:space="preserve">
          <source>After we've created a shader program we need to look up the locations that WebGL assigned to our inputs. In this case we have one attribute and two uniforms. Attributes receive values from buffers. Each iteration of the vertex shader receives the next value from the buffer assigned to that attribute. &lt;a href=&quot;../data#Uniforms&quot;&gt;Uniforms&lt;/a&gt; are similar to JavaScript global variables. They stay the same value for all iterations of a shader. Since the attribute and uniform locations are specific to a single shader program we'll store them together to make them easy to pass around</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40741f13bdb5126890d9002daf5fcbef47a7a761" translate="yes" xml:space="preserve">
          <source>After you added three items in two different formats,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2270173e3951c3e2657386dca856c4f92bff18" translate="yes" xml:space="preserve">
          <source>After your service worker is registered, the browser will attempt to install then activate the service worker for your page/site.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d069102a851355433df5ce9eab0dfd0d270e8258" translate="yes" xml:space="preserve">
          <source>Again, at the end of the code we invoke the draw() function to set the whole process in motion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43eb296c2b0d6ebd056855311ed1caadd645e73a" translate="yes" xml:space="preserve">
          <source>Again, with these parameters, compatible WebGL devices will automatically accept any resolution for that texture (up to their maximum dimensions). Without performing the above configuration, WebGL requires all samples of NPOT textures to fail by returning transparent black: &lt;code&gt;rgba(0,0,0,0)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3353340eb185a8861fa2c21e521d7f7e8caeb25a" translate="yes" xml:space="preserve">
          <source>Again, you can &lt;a href=&quot;https://mdn.github.io/webaudio-examples/spacialization/&quot;&gt;check out the final demo here&lt;/a&gt;, and the &lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/spacialization&quot;&gt;final source code is here&lt;/a&gt;. There is also a &lt;a href=&quot;https://codepen.io/Rumyra/pen/MqayoK?editors=0100&quot;&gt;Codepen demo too&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4810382b481f238e53936bc3e0f56f0bf43577" translate="yes" xml:space="preserve">
          <source>Ajax &amp;mdash; Getting Started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760dbfb7b2e2466ea86dd4c03ffb95286c1add43" translate="yes" xml:space="preserve">
          <source>Ajax navigation example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070cef14b251f2fb6d4aea2dbec3fe97efde51f0" translate="yes" xml:space="preserve">
          <source>Alarm API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78fee0b8a34903ad75fbb79230f04c6e89095e84" translate="yes" xml:space="preserve">
          <source>Alerting the contents of a &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; makes an implicit &lt;code&gt;toString()&lt;/code&gt; call, so comparing range and text through an alert dialog is ineffective</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c5bce434784424b2e6207dd2959c047268c428" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;mouseevent/clientx&quot;&gt;&lt;code&gt;MouseEvent.clientX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb3ebe7bd8b0ba16010e4cdf975d079532726183" translate="yes" xml:space="preserve">
          <source>Alias for &lt;a href=&quot;mouseevent/clienty&quot;&gt;&lt;code&gt;MouseEvent.clientY&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="194e6c2aca161373bde09991b79a679092a73bfe" translate="yes" xml:space="preserve">
          <source>Alias for Console.error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cad7b6ed54ac6869bc0b02b395bbea0218648c" translate="yes" xml:space="preserve">
          <source>Alias of &lt;a href=&quot;document/characterset&quot;&gt;&lt;code&gt;Document.characterSet&lt;/code&gt;&lt;/a&gt;. Use this property instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515419ac2da7e07d77bd9509014bcc33a6832382" translate="yes" xml:space="preserve">
          <source>Alice&amp;rsquo;s animation has her going from half her size to twice her size over 8 seconds. Then we pause her:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53b237d509464d69694d1b2f3f2fdc126b7df2d3" translate="yes" xml:space="preserve">
          <source>Alignment character for cell data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65cc17087f74ae59ab7ad3f1b0512adbb2896018" translate="yes" xml:space="preserve">
          <source>Alignment relative to the form set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e274a8359afc763f828be199b05ee1f83429cce9" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../../canvasrenderingcontext2d#Paths&quot;&gt;path methods&lt;/a&gt; like &lt;code&gt;moveTo&lt;/code&gt;, &lt;code&gt;rect&lt;/code&gt;, &lt;code&gt;arc&lt;/code&gt; or &lt;code&gt;quadraticCurveTo&lt;/code&gt;, etc., which we got to know above, are available on &lt;code&gt;Path2D&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2972fb700bee5abe3131beae6e9ef576ac8d5e4" translate="yes" xml:space="preserve">
          <source>All &lt;a href=&quot;../dragevent&quot;&gt;&lt;code&gt;drag events&lt;/code&gt;&lt;/a&gt; have a property called &lt;a href=&quot;../dragevent/datatransfer&quot;&gt;&lt;code&gt;dataTransfer&lt;/code&gt;&lt;/a&gt; which holds the drag data (&lt;code&gt;dataTransfer&lt;/code&gt; is a &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a80f8f7d8db9aab24f8a383afc9c7d6285707ca" translate="yes" xml:space="preserve">
          <source>All &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element nodes have a &lt;code&gt;files&lt;/code&gt; array on them which allows access to the items in this list. For example, if the HTML includes the following file input:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc42d8ec044cb996fd86311167700bc60202bd4" translate="yes" xml:space="preserve">
          <source>All ICE candidates will be considered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1030f7f891f208d3854b59827ba8d4aea7831764" translate="yes" xml:space="preserve">
          <source>All Mozilla-based browsers offer &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XUL/tabbrowser&quot;&gt;tab-browsing&lt;/a&gt; and this is the preferred mode of &lt;a href=&quot;https://developer.mozilla.org/en-US/Add-ons/Code_snippets/Tabbed_browser?redirectlocale=en-US&amp;amp;redirectslug=Code_snippets%2FTabbed_browser&quot;&gt;opening referenced resources&lt;/a&gt; (&lt;a href=&quot;https://developer.mozilla.org/en-US/Add-ons/SDK/High-Level_APIs/tabs&quot;&gt;SDK&lt;/a&gt;)... not just in Mozilla-based browsers but in all other browsers offering tab-browsing. In other words, tab-capable browser users overall prefer opening new tabs than opening new windows in a majority of webpage situations. Tab-capable browsers have rapidly gained support and enthusiasm on internet in the last 3 years; this trend will not revert back. MSIE 7, released in October 2006, has full support for tab browsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc8ecd03d07b9c7150d9af08d68a24ff456b331" translate="yes" xml:space="preserve">
          <source>All areas considered by the Intersection Observer API are rectangles; elements which are irregularly shaped are considered as occupying the smallest rectangle which encloses all of the element's parts. Similarly, if the visible portion of an element is not rectangular, the element's intersection rectangle is construed to be the smallest rectangle that contains all the visible portions of the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250ecb0eafb42d23ef20ffd4a730366cf77c02f7" translate="yes" xml:space="preserve">
          <source>All asynchronous operations immediately return an &lt;a href=&quot;idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; instance. Each request has a &lt;code&gt;readyState&lt;/code&gt; that is set to the &lt;code&gt;'pending'&lt;/code&gt; state; this changes to &lt;code&gt;'done'&lt;/code&gt; when the request is completed or fails. When the state is set to &lt;code&gt;done&lt;/code&gt;, every request returns a &lt;code&gt;result&lt;/code&gt; and an &lt;code&gt;error&lt;/code&gt;, and an event is fired on the request. When the state is still &lt;code&gt;pending&lt;/code&gt;, any attempt to access the &lt;code&gt;result&lt;/code&gt; or &lt;code&gt;error&lt;/code&gt; raises an &lt;code&gt;InvalidStateError&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a5ec021496e4c89b2cee0c8cac1747a31e8ffc" translate="yes" xml:space="preserve">
          <source>All browsers have varying capacity levels for both localStorage and sessionStorage. Here is a &lt;a href=&quot;http://dev-test.nemikor.com/web-storage/support-test/&quot;&gt;detailed rundown of all the storage capacities for various browsers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57a4bf4bb7fbf23fe88230949861b4d84024b9f" translate="yes" xml:space="preserve">
          <source>All browsers: &lt;a href=&quot;https://jsbin.com/hiqasek/edit?html,js,output&quot;&gt;https://jsbin.com/hiqasek/&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34468335261ef998054e5c40b68c97c22fd241ab" translate="yes" xml:space="preserve">
          <source>All children of&lt;em&gt;&lt;code&gt;parentNode&lt;/code&gt;&lt;/em&gt; will be selected.&lt;em&gt;&lt;code&gt;parentNode&lt;/code&gt;&lt;/em&gt; itself is not part of the selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f755dc70e95718cf27ad12cb8827b33d1efbe7" translate="yes" xml:space="preserve">
          <source>All data transferred using WebRTC is encrypted. In the case of &lt;code&gt;RTCDataChannel&lt;/code&gt;, the encryption used is Datagram Transport Layer Security (DTLS), which is based on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Transport_Layer_Security&quot;&gt;Transport Layer Security&lt;/a&gt; (TLS). Since TLS is used to secure every HTTPS connection, any data you send on a data channel is as secure as any other data sent or received by the user's browser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783b36616359a02540152afce1401ba27df2b268" translate="yes" xml:space="preserve">
          <source>All even-ordered IIR filters can be created using &lt;a href=&quot;biquadfilternode&quot;&gt;&lt;code&gt;BiquadFilterNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a47595b10178762df3c5c63922f82faf820f89" translate="yes" xml:space="preserve">
          <source>All formats support 2D textures. Which formats support &lt;code&gt;TEXTURE_2D_ARRAY&lt;/code&gt; and &lt;code&gt;TEXTURE_3D&lt;/code&gt; targets (in combination with &lt;code&gt;compressedTexImage3D&lt;/code&gt;) are noted in the following table.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f032b6c4f30091773908639c57806d90151d9959" translate="yes" xml:space="preserve">
          <source>All four input channels (&lt;code&gt;L&lt;/code&gt;, &lt;code&gt;R&lt;/code&gt;, &lt;code&gt;SL&lt;/code&gt;, and &lt;code&gt;SR&lt;/code&gt;) are equally combined to produce the unique output channel (&lt;code&gt;M&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22687d400d15663e5ba25c6fc63d18275f398126" translate="yes" xml:space="preserve">
          <source>All keys &amp;ge; &lt;strong&gt;x&lt;/strong&gt; &amp;amp;&amp;amp; &amp;le; &lt;strong&gt;y&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33f47e476d0b1716f7b4f6fbdedf4991f3f2d065" translate="yes" xml:space="preserve">
          <source>All keys &amp;ge; &lt;strong&gt;x&lt;/strong&gt; &amp;amp;&amp;amp;&amp;lt; &lt;strong&gt;y&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd4bc3728154e2b77e452cdbc44a605851e4d6e" translate="yes" xml:space="preserve">
          <source>All keys &amp;ge;&lt;strong&gt; y&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4b43de1c6c0056059925fbf755b87d3addd86f" translate="yes" xml:space="preserve">
          <source>All keys &amp;gt; &lt;strong&gt;x&lt;/strong&gt; &amp;amp;&amp;amp; &amp;le; &lt;strong&gt;y&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5625549f7bddbba3b5886357f9e60d4d8bb45376" translate="yes" xml:space="preserve">
          <source>All keys &amp;gt; &lt;strong&gt;x&lt;/strong&gt; &amp;amp;&amp;amp;&amp;lt; &lt;strong&gt;y&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b3aa7af7363cb1d690c4fd6bb4e9df9d7d6c0f" translate="yes" xml:space="preserve">
          <source>All keys &amp;gt;&lt;strong&gt; y&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ad5d50b41337c9355eb85d6752203247bb96b9d" translate="yes" xml:space="preserve">
          <source>All keys &amp;le; &lt;strong&gt;x&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bd740faad42dc9274e0120db491c0d5dd5e7b0" translate="yes" xml:space="preserve">
          <source>All keys &amp;lt; &lt;strong&gt;x&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faeb0ab5fe6f0cff4262d687e8ecd4c171bb24f4" translate="yes" xml:space="preserve">
          <source>All modifiers (except &lt;code&gt;&quot;FnLock&quot;&lt;/code&gt;, &lt;code&gt;&quot;Hyper&quot;&lt;/code&gt;, &lt;code&gt;&quot;Super&quot;&lt;/code&gt; and &lt;code&gt;&quot;Symbol&quot;&lt;/code&gt; which are defined after Gecko implements this) are always supported for untrusted events on Gecko. This doesn't depend on the platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83812a1fea6a763bbd6a17b1b476d2f58435efd" translate="yes" xml:space="preserve">
          <source>All new XHR features such as &lt;code&gt;timeout&lt;/code&gt; or &lt;code&gt;abort&lt;/code&gt; aren't allowed for synchronous XHR. Doing so would invoke &lt;code&gt;InvalidAccessError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643fbd97ad19668f8f8b07c392c01a4f44f2a3ac" translate="yes" xml:space="preserve">
          <source>All of the &lt;a href=&quot;dragevent#Event_types&quot;&gt;drag event types&lt;/a&gt; have an associated &lt;a href=&quot;dragevent#GlobalEventHandlers&quot;&gt;global event handler&lt;/a&gt;. Each drag event type and drag global attribute has a reference document that describes the event. The following table provides a short description of the event types and a link to the reference documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d34aa1d7db726434b20cc2d9c00486e7d38a9d8" translate="yes" xml:space="preserve">
          <source>All of the &lt;code&gt;feedforward&lt;/code&gt; coefficients are 0, and/or the first &lt;code&gt;feedback&lt;/code&gt; coefficient is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f33b2e9cc427fe0aa9cfaec7d924e434123ebb" translate="yes" xml:space="preserve">
          <source>All of the Clipboard API methods operate asynchronously; they return a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which is resolved once the clipboard access has been completed. The promise is rejected if clipboard access is denied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908dfeec50cb1c75d5b957749f1f53a5c906fd90" translate="yes" xml:space="preserve">
          <source>All of the Headers methods throw a &lt;code&gt;TypeError&lt;/code&gt; if a header name is used that is not a valid HTTP Header name. The mutation operations will throw a &lt;code&gt;TypeError&lt;/code&gt; if there is an immutable guard (see below). Otherwise they fail silently. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e57f3ade37c0770af9eedea12956f08ca98a73" translate="yes" xml:space="preserve">
          <source>All of the SVG DOM interfaces that correspond directly to elements in the SVG language derive from the &lt;code&gt;SVGElement&lt;/code&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88fce782f7c3a8ba52dcd1c9dfba1ab114ac27ce" translate="yes" xml:space="preserve">
          <source>All of the event handlers are removed. This prevents stray event handlers from being triggered while the connection is in the process of closing, potentially causing errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d0fc9f0cac7e572c744896efe3f3090ec5ef83" translate="yes" xml:space="preserve">
          <source>All of the methods and properties in this document which have a &lt;strong&gt;moz&lt;/strong&gt; prefix (such as &lt;strong&gt;mozSetDataAt()&lt;/strong&gt; are Gecko specific interfaces. These interfaces will &lt;strong&gt;only&lt;/strong&gt; work with Gecko based browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d6ebac53d3167638576f5411f4f0d138686951" translate="yes" xml:space="preserve">
          <source>All of the methods and properties with a &lt;strong&gt;moz&lt;/strong&gt; prefix (such as &lt;strong&gt;mozSetDataAt()&lt;/strong&gt; are Gecko specific interfaces. These interfaces will &lt;strong&gt;only&lt;/strong&gt; work with Gecko based browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b32dc8d1fed114bd9e8757876e7072261dcee5c" translate="yes" xml:space="preserve">
          <source>All of the properties, methods, and events available for manipulating and creating web pages are organized into objects (e.g., the &lt;code&gt;document&lt;/code&gt; object that represents the document itself, the &lt;code&gt;table&lt;/code&gt; object that implements the special &lt;code&gt;HTMLTableElement&lt;/code&gt; DOM interface for accessing HTML tables, and so forth). This documentation provides an object-by-object reference to the DOM implemented in Gecko-based browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5a3a3afc645a423759181dcce1592c46cc2e39" translate="yes" xml:space="preserve">
          <source>All of this interface's methods and properties have their own reference page, and each reference page has an example of its usage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d554ef7227127ec2caf9b15de495d861ff4d1b7" translate="yes" xml:space="preserve">
          <source>All operations are permitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666e15efe5a0d9942fc7af44c5690ab079488c12" translate="yes" xml:space="preserve">
          <source>All other characters are unrecognized and will cause &lt;a href=&quot;../rtcdtmfsender/insertdtmf&quot;&gt;&lt;code&gt;insertDTMF()&lt;/code&gt;&lt;/a&gt; to throw an &lt;code&gt;InvalidCharacterError&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd188c2ba8fd8b0fd4ada568b727df8ec3921be0" translate="yes" xml:space="preserve">
          <source>All other characters are unrecognized and will cause &lt;a href=&quot;insertdtmf&quot;&gt;&lt;code&gt;insertDTMF()&lt;/code&gt;&lt;/a&gt; to throw an &lt;code&gt;InvalidCharacterError&lt;/code&gt; exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b43afb9fd3fb2443e071d9cbf035ee34e9f568" translate="yes" xml:space="preserve">
          <source>All other field names are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46cc86266bf4f4430582509896d53e0694e15efd" translate="yes" xml:space="preserve">
          <source>All parameters can be set during construction time and don't need to be set individually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bff248cc4697b09b6ca39baa35f9cf48114d72" translate="yes" xml:space="preserve">
          <source>All parameters optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14bbdcf05b22d9823019db7e84c3b3045e91f844" translate="yes" xml:space="preserve">
          <source>All pending &lt;a href=&quot;../idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; objects created during this transaction have their &lt;a href=&quot;../idbrequest/error&quot;&gt;&lt;code&gt;IDBRequest.error&lt;/code&gt;&lt;/a&gt; attribute set to &lt;code&gt;AbortError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ef98168f65883bc5b10871ca0faaa70866ddd19" translate="yes" xml:space="preserve">
          <source>All primitive types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b9cb405e868aecf8b181e49efb4023636844742" translate="yes" xml:space="preserve">
          <source>All properties are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f3dae84df4a3e62d44d23fb63456948ee9c12db" translate="yes" xml:space="preserve">
          <source>All set, right? &lt;em&gt;Wrong!&lt;/em&gt; What happened was you removed the &lt;code&gt;strong&lt;/code&gt; element, but the removed sentence&amp;rsquo;s element separated two text nodes. One for the first sentence, and one for the first word of the last. Instead, you now effectively have this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a910543b7fdf236492c32f51cb0bf20e68b34c17" translate="yes" xml:space="preserve">
          <source>All the animation's playback relies on this timeline: seeking the animation moves the animation&amp;rsquo;s position along the timeline; slowing down or speeding up the playback rate condenses or expands its spread across the timeline; repeating the animation lines up additional iterations of it along the timeline. In the future, we might have timelines based on gestures or scroll position or even parent and child timelines. The Web Animations API opens up so many possibilities!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c466a5596ccd5e27e5b8806915a17508e6a5c8a8" translate="yes" xml:space="preserve">
          <source>All these effects are done automatically by the web browser whenever you submit a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt;. If you want to perform the same effects using JavaScript you have to instruct the interpreter about &lt;em&gt;everything&lt;/em&gt;. Therefore, how to send forms in &lt;em&gt;pure&lt;/em&gt; AJAX is too complex to be explained here in detail. For this reason, here we place &lt;strong&gt;a complete (yet didactic) framework&lt;/strong&gt;, able to use all four ways to &lt;em&gt;submit&lt;/em&gt;, and to &lt;strong&gt;upload files&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df60ad89708fe3fd7b934e9ab22eba58a7bb6ff" translate="yes" xml:space="preserve">
          <source>All these features have been added little by little over the years to the different browsers: it was a quite complex process that can't be summarized in a simple table. Please refer to the specific interfaces for its availability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d574692a2740639641a90f3766cd4ac4140eaa" translate="yes" xml:space="preserve">
          <source>All this does is specify the size, border, and color information, as well as indicate that the box should be centered both vertically and horizontally inside its container. Note that there's no rotation applied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d74bcfbf48a563773c13d6a095dd045c979e27" translate="yes" xml:space="preserve">
          <source>All this function has to do is fetch the current value of the slider control we're using to control the paired nodes' gains, then store that value into the &lt;code&gt;ConstantSourceNode&lt;/code&gt;'s &lt;code&gt;offset&lt;/code&gt; parameter. That's done by simply changing the contents of its &lt;a href=&quot;../audioparam/value&quot;&gt;&lt;code&gt;AudioParam.value&lt;/code&gt;&lt;/a&gt; property. The two gain nodes quickly adopt the new volume level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02e89c30b566cac798ad0b75e3b279b5c1dcb29" translate="yes" xml:space="preserve">
          <source>All three parameters accept all constants listed below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ad27fe716e2156e7de0e3da8d06bdd4b336e4c" translate="yes" xml:space="preserve">
          <source>All your signaling server now needs to do is send the messages it's asked to. Your workflow may also demand login/authentication functionality, but such details will vary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaef0e8a9b952ac83254f3d77aa39158188acc17" translate="yes" xml:space="preserve">
          <source>Allowed values (for &lt;code&gt;param&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9df75eb1912b0c2028840043756339b2244a5f1" translate="yes" xml:space="preserve">
          <source>Allows a server to push data to a web page at any point, after a connection has been opened to it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="551550102b6918865ae7d39ba587e0461da37e74" translate="yes" xml:space="preserve">
          <source>Allows a user to attach, or remove, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DOMUserData&quot;&gt;&lt;code&gt;DOMUserData&lt;/code&gt;&lt;/a&gt; to the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9d478e4cd0e5c7f84566aa5d2ce15f340cd3a4" translate="yes" xml:space="preserve">
          <source>Allows a user to get some &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DOMUserData&quot;&gt;&lt;code&gt;DOMUserData&lt;/code&gt;&lt;/a&gt; from the node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aaf40ab17cee941dbdb6c7c1acd11fcb43c0147" translate="yes" xml:space="preserve">
          <source>Allows a web page to provide custom behaviors, for standard media playback interactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9a2ecbcfb657b8fafd9a4dc05a3ea270242822" translate="yes" xml:space="preserve">
          <source>Allows a web page to provide rich media metadata, for display in a platform UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262fc9b5cc94eda7fc95254c1618768e09e28d7d" translate="yes" xml:space="preserve">
          <source>Allows an active service worker to set itself as the &lt;a href=&quot;serviceworkercontainer/controller&quot;&gt;&lt;code&gt;controller&lt;/code&gt;&lt;/a&gt; for all clients within its &lt;a href=&quot;serviceworkerregistration/scope&quot;&gt;&lt;code&gt;scope&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1914e6a30345451fc06652bbe51ad0ff7634ed46" translate="yes" xml:space="preserve">
          <source>Allows any operation to be performed, including ones that delete and create object stores and indexes. This mode is for updating the version number of transactions that were started using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IDBDatabase/setVersion&quot;&gt;&lt;code&gt;IDBDatabase.setVersion()&lt;/code&gt;&lt;/a&gt;. Transactions of this mode cannot run concurrently with other transactions. Transactions in this mode are known as &quot;upgrade transactions.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63caca288cbe70edcebc17108f5a603f90b8bfef" translate="yes" xml:space="preserve">
          <source>Allows any operation to be performed, including ones that delete and create object stores and indexes. This mode is for updating the version number of transactions that were started using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#setVersion&quot;&gt;&lt;code&gt;setVersion()&lt;/code&gt;&lt;/a&gt; method of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase&quot;&gt;IDBDatabase&lt;/a&gt; objects. Transactions of this mode cannot run concurrently with other transactions. Transactions in this mode are known as &quot;upgrade transactions.&quot;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a0f1de076c13d73090347b675c37a08cb1d4c7" translate="yes" xml:space="preserve">
          <source>Allows data to be read but not changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b224563488562b0210dd53b79180524b2ecc9b" translate="yes" xml:space="preserve">
          <source>Allows in-app payment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8da7bbe2789a5859af307774a7111bbe7434d3" translate="yes" xml:space="preserve">
          <source>Allows reading and writing of data in existing data stores to be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="741dac3926315c14c26caf0f29aa3940db0da1d3" translate="yes" xml:space="preserve">
          <source>Allows simple communication between &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/browsing_context&quot;&gt;browsing contexts&lt;/a&gt; (that is &lt;em&gt;windows&lt;/em&gt;, &lt;em&gt;tabs&lt;/em&gt;, &lt;em&gt;frames&lt;/em&gt;, or &lt;em&gt;iframes&lt;/em&gt;) with the same &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/origin&quot;&gt;origin&lt;/a&gt; (usually pages from the same site).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21db493a0de6c929c50b24072f290dd8dd1f9d2" translate="yes" xml:space="preserve">
          <source>Allows the current service worker registration to progress from waiting to active state while service worker clients are using it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2096bf1c1b8333691aafeea101ea25e7d08a36f0" translate="yes" xml:space="preserve">
          <source>Allows to asynchronously ask for the pointer to be locked on the given element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878e05b5eef02fda4ade9be46a6d425fb70ae059" translate="yes" xml:space="preserve">
          <source>Allows two separate scripts running in different browsing contexts attached to the same document (e.g., two IFrames, or the main document and an IFrame, two documents via a &lt;a href=&quot;../sharedworker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt;, or two workers) to communicate directly via two ports.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dbd62f3eded3b7974d71ea13af3a205040b6dff" translate="yes" xml:space="preserve">
          <source>Allows us to connect the output of this node to be input into another node, either as audio data or as the value of an &lt;a href=&quot;audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5c5fee93b163d31e439de3b82df98e8e84fd13" translate="yes" xml:space="preserve">
          <source>Allows us to disconnect the current node from another one it is already connected to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dad1737ca3ce2fd6a632442af0ab23c93032d80" translate="yes" xml:space="preserve">
          <source>Allows web applications to explicitly set default scroll restoration behavior on history navigation. This property can be either &lt;code&gt;auto&lt;/code&gt; or &lt;code&gt;manual&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b486cb4dc369f4836a2005afd12d1ec47137f1" translate="yes" xml:space="preserve">
          <source>Allows web pages to control the display of system notifications to the end user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424828d42a1d776f4b5a0609f4bee0c0cfa3db56" translate="yes" xml:space="preserve">
          <source>Allows web sites to register themselves as a possible handler for a given MIME type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7efc424f62070793844f09ddfba6590f9790c6b3" translate="yes" xml:space="preserve">
          <source>Allows web sites to register themselves as a possible handler for a given protocol.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
