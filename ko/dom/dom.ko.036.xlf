<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="443510d9b52c1c2247ef2bfee31713659621e8e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loadRandomAd()&lt;/code&gt; function simulates loading an ad and adding it to the page. If you don't pass a value for &lt;code&gt;replaceBox&lt;/code&gt;, a new element is created to contain the ad; the ad is then appended to the page. if you specify a &lt;code&gt;replaceBox&lt;/code&gt;, that box is treated as an existing ad element; instead of creating a new one, the existing element is changed to contain the new ad's style, content, and other data. This avoids the risk of lengthy layout work being done when you update the ad, which could happen if you first delete the old element then insert a new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee0b46f6d6e67759a5648e9cd2fa09317eada11" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loadShader()&lt;/code&gt; function takes as input the WebGL context, the shader type, and the source code, then creates and compiles the shader as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c427439dadef7f43203e2e2aa749c7cac23cb3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loadTexture()&lt;/code&gt; routine starts by creating a WebGL texture object &lt;code&gt;texture&lt;/code&gt; by calling the WebGL &lt;a href=&quot;../../webglrenderingcontext/createtexture&quot;&gt;&lt;code&gt;createTexture()&lt;/code&gt;&lt;/a&gt; function. It then uploads a single blue pixel using &lt;a href=&quot;../../webglrenderingcontext/teximage2d&quot;&gt;&lt;code&gt;texImage2D()&lt;/code&gt;&lt;/a&gt;. This makes the texture immediately usable as a solid blue color even though it may take a few moments for our image to download.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc3b438c5fdabb5a0b6b8ebc9afe36c90bea74c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loadeddata&lt;/code&gt; event is fired when the first frame of the media has finished loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33fbdb86de7241b58eb161a00337905e63dbf5f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loadedmetadata&lt;/code&gt; event is fired when the metadata has been loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb565bc3c8374b5b8a5ae521a48cc091471a354" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loadstart&lt;/code&gt; event is not fired on &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6d560663af364378548181c57fb5dc54baadaa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locale&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt; interface returns the locale of the index (for example &lt;code&gt;en-US&lt;/code&gt;, or &lt;code&gt;pl&lt;/code&gt;) if it had a &lt;code&gt;locale&lt;/code&gt; value specified upon its creation (see &lt;a href=&quot;../idbobjectstore/createindex#Parameters&quot;&gt;&lt;code&gt;createIndex()&lt;/code&gt;'s optionalParameters&lt;/a&gt;.) Note that this property always returns the current locale being used in this index, in other words, it never returns &lt;code&gt;&quot;auto&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff56038ab438e6d7c0afe78cf698eff7d6a0dc86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locale&lt;/code&gt; value is logged to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8083b7e52dbaae89f140cb6a3ad0985c84be6a7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lock()&lt;/code&gt; method of the &lt;a href=&quot;../keyboard&quot;&gt;&lt;code&gt;Keyboard&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; after enabling the capture of keypresses for any or all of the keys on the physical keyboard. This method can only capture keys that are granted access by the underlying operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6485c8f886006f2a9b2b9b2f9e5881deea45271a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lock()&lt;/code&gt; property of the &lt;a href=&quot;../screenorientation&quot;&gt;&lt;code&gt;ScreenOrientation&lt;/code&gt;&lt;/a&gt; interface locks the orientation of the containing document to its default orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199e65f4fcf131a8b407d4ab4ab20cb6bed928e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lockOrientation&lt;/code&gt; method locks the screen into the specified orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d560d948be0a27a5f1064c3b354e0e042f7c20" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locked&lt;/code&gt; getter property of the &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; interface returns whether or not the readable stream is &lt;a href=&quot;https://streams.spec.whatwg.org/#locked-to-a-reader&quot; id=&quot;ref-for-locked-to-a-reader②&quot;&gt;locked to a reader&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f3972cc892efb2f906c7741747a9af63a7078ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locked&lt;/code&gt; getter property of the &lt;a href=&quot;../writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt; interface returns a boolean indicating whether the &lt;code&gt;WritableStream&lt;/code&gt; is locked to a writer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7113fe7bbd1f568c75ffe95eb346acc8005784" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locked&lt;/code&gt; getter returns whether or not the readable stream is &lt;a href=&quot;https://streams.spec.whatwg.org/#locked-to-a-reader&quot; id=&quot;ref-for-locked-to-a-reader②&quot;&gt;locked to a reader&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0df6d9f1f82a87e14f185227a0acef2e6128fbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locks&lt;/code&gt; read-only property of the &lt;a href=&quot;../navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../lockmanager&quot;&gt;&lt;code&gt;LockManager&lt;/code&gt;&lt;/a&gt; object which provides methods for requesting a new &lt;a href=&quot;../lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; object and querying for an existing &lt;code&gt;Lock&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc85adbe8eb983006ffb97403bca232147375bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locks&lt;/code&gt; read-only property of the &lt;a href=&quot;../workernavigator&quot;&gt;&lt;code&gt;WorkerNavigator&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../lockmanager&quot;&gt;&lt;code&gt;LockManager&lt;/code&gt;&lt;/a&gt; object which provides methods for requesting a new &lt;a href=&quot;../lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; object and querying for an existing &lt;code&gt;Lock&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f766e417eb722e5eb7a46d48a6afc1cc8e183b7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;log()&lt;/code&gt; function adds the specified text to the log. Since we don't know at the time &lt;code&gt;log()&lt;/code&gt; is called whether or not it's safe to immediately touch the DOM, we will cache the log text until it's safe to update. Above, in the code for &lt;code&gt;updateDisplay&lt;/code&gt;&lt;code&gt;()&lt;/code&gt;, you can find the code that actually adds the logged text to the log element when the animation frame is being updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921b92aa9ff74d91484f8fb0a4383f36c14c6977" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;log()&lt;/code&gt; function creates the log output by getting the current time from a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toLocaleTimeString&quot;&gt;&lt;code&gt;toLocaleTimeString()&lt;/code&gt;&lt;/a&gt;, and building a string with the timestamp and the message text. Then the message is appended to the box with the class &lt;code&gt;&quot;log&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4844881b5b1e7663d293302759a5b5f3cf93bc83" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;log()&lt;/code&gt; function is used to output text strings to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; so we can share information with the user. Not very pretty but it gets the job done for our purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327d8525cdbbf90d8d0e9a4381d40438d8692fcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loop&lt;/code&gt; property of the &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt; interface is a Boolean indicating if the audio asset must be replayed when the end of the &lt;a href=&quot;../audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt; is reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11a4775842760edd12bf03f8214d48a32a458f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loop&lt;/code&gt; property's default value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="336934b0a452f24be6a21e3e595151cc20483e25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loopEnd&lt;/code&gt; property of the &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt; interface specifies is a floating point number specifying, in seconds, at what offset into playing the &lt;a href=&quot;../audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt; playback should loop back to the time indicated by the &lt;a href=&quot;loopstart&quot;&gt;&lt;code&gt;loopStart&lt;/code&gt;&lt;/a&gt; property. This is only used if the &lt;a href=&quot;loop&quot;&gt;&lt;code&gt;loop&lt;/code&gt;&lt;/a&gt; property is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91a121e56ca6f672dbc776217c35b633a4196b1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loopStart&lt;/code&gt; property of the &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt; interface is a floating-point value indicating, in seconds, where in the &lt;a href=&quot;../audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt; the restart of the play must happen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516f30c40f1afc4aa2b7c0710cb2d1cb80423433" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;loopStart&lt;/code&gt; property's default value is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2213c25516af435dfe47f597540bda7bf5ca8ec3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lowSrc&lt;/code&gt; property has been removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04ae8131de164c5974a31c043204c534f4721e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lower&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt; interface returns the lower bound of the key range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a16df207fb2e610225a672c6428de4f11b5634" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lowerBound()&lt;/code&gt; method of the &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt; interface creates a new key range with only a lower bound. By default, it includes the lower endpoint value and is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783508e200018736683d6289c4fb58177c8664cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lowerOpen&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt; interface returns a boolean indicating whether the lower-bound value is included in the key range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="033eeb6757aa4cb2841070eb3cb0f7236a3637a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;main()&lt;/code&gt; function in our JavaScript code, is called when our script is loaded. Its purpose is to set up the WebGL context and start rendering content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e963dc560089e6ec6d162b0df078856ead751e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;manufacturerName&lt;/code&gt; read only property of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface the of the organization that manufactured the USB device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b28494401eb14772ea63d986a2b34ccf712bf377" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;marionette.enabled&lt;/code&gt; preference or &lt;code&gt;--marionette&lt;/code&gt; flag is passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca9315109a9a88b37481702fc501fa27bd13f7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mark's&lt;/code&gt;&lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;performance entry&lt;/code&gt;&lt;/a&gt; will have the following property values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd43d9015416cdc128d3a97f1fbec49d9dec96c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mark's&lt;/code&gt;&lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;performance entry&lt;/code&gt;&lt;/a&gt; will have the following property values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="503a09278d9a0d454ac5521741c23aa07c85d084" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mark()&lt;/code&gt; method creates a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; in the browser's &lt;em&gt;performance entry buffer&lt;/em&gt; with the given name. The application defined timestamp can be retrieved by one of the &lt;a href=&quot;../performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;getEntries*()&lt;/code&gt; methods (&lt;a href=&quot;getentries&quot;&gt;&lt;code&gt;getEntries()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;getentriesbyname&quot;&gt;&lt;code&gt;getEntriesByName()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;getentriesbytype&quot;&gt;&lt;code&gt;getEntriesByType()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4ec734380ebcf2f31c59a4ea94c774f7ed645e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;match()&lt;/code&gt; method of the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to the &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; associated with the first matching request in the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object. If no match is found, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; resolves to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a45feebb62cc103d2946688e1b224c568453cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;match()&lt;/code&gt; method of the &lt;a href=&quot;../cachestorage&quot;&gt;&lt;code&gt;CacheStorage&lt;/code&gt;&lt;/a&gt; interface (available globally as &lt;code&gt;caches&lt;/code&gt;) checks if a given &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; or url string is a key for a stored &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt;. This method returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; for a &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;undefined&lt;/code&gt; if no match is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2829ec5baef1c4933df42e640e7b60da2f672fa3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;matchAll()&lt;/code&gt; method of the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to an array of all matching requests in the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25c7c818dc3752678813cc093dcadfd8c4ee5fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;matchAll()&lt;/code&gt; method of the &lt;a href=&quot;../clients&quot;&gt;&lt;code&gt;Clients&lt;/code&gt;&lt;/a&gt; interface returns a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;Promise&lt;/a&gt;&lt;/code&gt; for a list of service worker &lt;a href=&quot;../client&quot;&gt;&lt;code&gt;Client&lt;/code&gt;&lt;/a&gt; objects. Include the &lt;code&gt;options&lt;/code&gt; parameter to return all service worker clients whose origin is the same as the associated service worker's origin. If options are not included, the method returns only the service worker clients controlled by the service worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548d2eed00a17330e50a5ff7ca2a2fa430824fbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;matches&lt;/code&gt; read-only property of the &lt;a href=&quot;../mediaquerylist&quot;&gt;&lt;code&gt;MediaQueryList&lt;/code&gt;&lt;/a&gt; interface is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; that returns &lt;code&gt;true&lt;/code&gt; if the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt; currently matches the media query list, or &lt;code&gt;false&lt;/code&gt; if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e562423e07575153a0949b1eb7fa85fe7d90826d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;matches&lt;/code&gt; read-only property of the &lt;a href=&quot;../mediaquerylistevent&quot;&gt;&lt;code&gt;MediaQueryListEvent&lt;/code&gt;&lt;/a&gt; interface is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; that returns &lt;code&gt;true&lt;/code&gt; if the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt; currently matches the media query list, or &lt;code&gt;false&lt;/code&gt; if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3785c0794182e977c80ece66e2f26b10951e88ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max&lt;/code&gt; property provides the maximum sensing distance the sensor is able to report, in centimeters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec23b64cab805c96d9cf20e2677f5dc66ef9ae8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;max&lt;/code&gt; read-only property of the &lt;a href=&quot;../mediasettingsrange&quot;&gt;&lt;code&gt;MediaSettingsRange&lt;/code&gt;&lt;/a&gt; interface returns the maximum value of the settings range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab15c95d8b3d6c1ee279922e1a4d3ff49c300a70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxAlternatives&lt;/code&gt; property of the &lt;a href=&quot;../speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; interface sets the maximum number of &lt;a href=&quot;../speechrecognitionalternative&quot;&gt;&lt;code&gt;SpeechRecognitionAlternative&lt;/code&gt;&lt;/a&gt;s provided per &lt;a href=&quot;../speechrecognitionresult&quot;&gt;&lt;code&gt;SpeechRecognitionResult&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4ec501b9dd17f889d1ee3c04c1053c56d8c3db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxDecibels&lt;/code&gt; property of the &lt;a href=&quot;../analysernode&quot;&gt;&lt;code&gt;AnalyserNode&lt;/code&gt;&lt;/a&gt; interface is a double value representing the maximum power value in the scaling range for the FFT analysis data, for conversion to unsigned byte/float values &amp;mdash; basically, this specifies the maximum value for the range of results when using &lt;code&gt;getFloatFrequencyData()&lt;/code&gt; or &lt;code&gt;getByteFrequencyData()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49238ef99059b665c0d2356eabb04c9c704872ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxDistance&lt;/code&gt; property of the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; interface is a double value representing the maximum distance between the audio source and the listener, after which the volume is not reduced any further. This value is used only by the &lt;code&gt;linear&lt;/code&gt; distance model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aea187ca2e7b8afae366d1ced73f5d81845f055" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxDistance&lt;/code&gt; property's default value is &lt;code&gt;10000&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a7d5c03e48456f2637454ace9d0524b55024f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxLayers&lt;/code&gt; read-only property of the &lt;a href=&quot;../vrdisplaycapabilities&quot;&gt;&lt;code&gt;VRDisplayCapabilities&lt;/code&gt;&lt;/a&gt; interface returns a number indicating the maximum number of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRLayer&quot;&gt;&lt;code&gt;VRLayer&lt;/code&gt;&lt;/a&gt;s that the VR display can present at once (e.g. the maximum length of the array that &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Display/requestPresent&quot;&gt;&lt;code&gt;Display.requestPresent()&lt;/code&gt;&lt;/a&gt; can accept.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9bcff6a8c6133dbe9d293f8b8c1b45a0e70e67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxTouchPoints&lt;/code&gt; read-only property of the &lt;a href=&quot;../navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; interface returns the maximum number of simultaneous touch contact points are supported by the current device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e673c54e0807ef60ca943fe2a219a76a61beb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxValue&lt;/code&gt; read-only property of the &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; interface represents the maximum possible value for the parameter's nominal (effective) range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737b29bb021502bbea66e45ded8f7a9f83adf8d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maxchannelCount&lt;/code&gt; property of the &lt;a href=&quot;../audiodestinationnode&quot;&gt;&lt;code&gt;AudioDestinationNode&lt;/code&gt;&lt;/a&gt; interface is an &lt;code&gt;unsigned long&lt;/code&gt; defining the maximum amount of channels that the physical device can handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a11b14c6bee3cf4c912f11594ac4e52f8b20a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maximumFieldOfView&lt;/code&gt; read-only property of the &lt;a href=&quot;../vreyeparameters&quot;&gt;&lt;code&gt;VREyeParameters&lt;/code&gt;&lt;/a&gt; interface describes the maximum supported field of view for the current eye.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67355a1885368ce0365fffbea9a07c218f32c08d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;measure's&lt;/code&gt;&lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;performance entry&lt;/code&gt;&lt;/a&gt; will have the following property values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d54e042f9b25ef9a6baa04fe46a3697d288e764" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;measure's&lt;/code&gt;&lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;performance entry&lt;/code&gt;&lt;/a&gt; will have the following property values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f252e316bbcf28d9fd5f36ce4b5e7021785c95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;measure()&lt;/code&gt; method creates a named &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; in the browser's &lt;em&gt;performance entry buffer&lt;/em&gt; between two specified marks (known as the &lt;em&gt;start mark&lt;/em&gt; and &lt;em&gt;end mark&lt;/em&gt;, respectively). The named timestamp is referred to as a &lt;em&gt;measure&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be68e3a3c7742d16904b3f4062baeaaaa702ab16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;measure&lt;/code&gt; can be retrieved by one of the &lt;a href=&quot;../performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;getEntries*()&lt;/code&gt; methods (&lt;a href=&quot;getentries&quot;&gt;&lt;code&gt;getEntries()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;getentriesbyname&quot;&gt;&lt;code&gt;getEntriesByName()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;getentriesbytype&quot;&gt;&lt;code&gt;getEntriesByType()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302ad2c2893d2f787f09070349b654fe7a97fd51" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;media&lt;/code&gt; read-only property of the &lt;a href=&quot;../mediaquerylistevent&quot;&gt;&lt;code&gt;MediaQueryListEvent&lt;/code&gt;&lt;/a&gt; interface is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing a serialized media query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adba456952cb1a3268ecab294cde5a6f9e47bed1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;menu&lt;/code&gt; attribute and &lt;code&gt;type=&quot;menu&quot;&lt;/code&gt; value have been removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a7d7e778e477b448e702fc7fab033e3284b62bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; parameter is serialized using the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Web_Workers_API/Structured_clone_algorithm&quot;&gt;structured clone algorithm&lt;/a&gt;. This means you can pass a broad variety of data objects safely to the destination window without having to serialize them yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2583f27e4841dd4fe53ca8064f22b94198205b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; parameter must be a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3778759072387dfaf7f44f5d2b8f47890dd9a7d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; read-only property of the &lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing a message or description associated with the given &lt;a href=&quot;../domexception#Error_names&quot;&gt;error name&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf8e07fd282eb8a0bca7254f76620fe5d630fffb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;metadata&lt;/code&gt; property of the &lt;a href=&quot;../mediasession&quot;&gt;&lt;code&gt;MediaSession&lt;/code&gt;&lt;/a&gt; interface, returns an instance of &lt;a href=&quot;../mediametadata&quot;&gt;&lt;code&gt;MediaMetadata&lt;/code&gt;&lt;/a&gt; which contains rich media metadata, for display in a platform UI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="714684a685c3719ce21ad35ad78ff071b7a5d3f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;method&lt;/code&gt; read-only property of the &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; interface contains the request's method (&lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7390a5bc271bbf125ce4bd39452fbf9be1c1fe0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;methodData&lt;/code&gt; read-only property of the &lt;a href=&quot;../paymentrequestevent&quot;&gt;&lt;code&gt;PaymentRequestEvent&lt;/code&gt;&lt;/a&gt; interface returns an array of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentMethodData&quot;&gt;&lt;code&gt;PaymentMethodData&lt;/code&gt;&lt;/a&gt; objects containing payment method identifers for the payment methods that the web site accepts and any associated payment method specific data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f068764af68bcab45bd54681439063698bf14ee0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;methodName&lt;/code&gt; read-only property of the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; interface returns a string uniquely identifying the payment handler selected by the user. This string may be either one of the standardized payment method identifiers or a URL used by the payment handler to process payments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2facefbd87b15c99a2d4104b173fa740591b31f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;min&lt;/code&gt; property provides the minimum distance the sensor can report, in centimeters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ca603a9b1ba8fcd5a2ecff06c30976bb486329" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;min&lt;/code&gt; read-only property of the &lt;a href=&quot;../mediasettingsrange&quot;&gt;&lt;code&gt;MediaSettingsRange&lt;/code&gt;&lt;/a&gt; interface returns the minimum value of the settings range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4571ab1deedd181f772b96f49babb418aa1e54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;minDecibels&lt;/code&gt; property of the &lt;a href=&quot;../analysernode&quot;&gt;&lt;code&gt;AnalyserNode&lt;/code&gt;&lt;/a&gt; interface is a double value representing the minimum power value in the scaling range for the FFT analysis data, for conversion to unsigned byte/float values &amp;mdash; basically, this specifies the minimum value for the range of results when using &lt;code&gt;getFloatFrequencyData()&lt;/code&gt; or &lt;code&gt;getByteFrequencyData()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb57e354d7632b69d4edc47b5b55473427b69ce3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;minValue&lt;/code&gt; read-only property of the &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; interface represents the minimum possible value for the parameter's nominal (effective) range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6791c764ba9453bfa132c288cdfe1cb96e9789" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;minimumFieldOfView&lt;/code&gt; read-only property of the &lt;a href=&quot;../vreyeparameters&quot;&gt;&lt;code&gt;VREyeParameters&lt;/code&gt;&lt;/a&gt; interface describes the minimum supported field of view for the current eye.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29b99eeb544b3a5a5c4172c5160ec806f26223d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;miterLimit&lt;/code&gt; property determines how far the outside connection point can be placed from the inside connection point. If two lines exceed this value, a bevel join gets drawn instead. Note that the maximum miter length is the product of the line width measured in the current coordinate system, by the value of this &lt;code&gt;miterLimit&lt;/code&gt; property (whose default value is 10.0 in the HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;), so the &lt;code&gt;miterLimit&lt;/code&gt; can be set independently from the current display scale or any affine transforms of paths: it only influences the effectively rendered shape of line edges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c70a43c88a8ac5d763930864bf51411610d10ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; property of the &lt;a href=&quot;../shadowroot&quot;&gt;&lt;code&gt;ShadowRoot&lt;/code&gt;&lt;/a&gt; specifies its mode &amp;mdash; either &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;closed&lt;/code&gt;. This defines whether or not the shadow root's internal features are accessible from JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0450464b791a0e5cfe6a4b96cb933afc2f046112" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; property of the &lt;code&gt;options&lt;/code&gt; parameter may be either &lt;code&gt;&quot;exclusive&quot;&lt;/code&gt; or &lt;code&gt;&quot;shared&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029086cdca8171a6611a1956ce3c38453edc9106" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt; interface returns the current mode for accessing the data in the object stores in the scope of the transaction (i.e. is the mode to be read-only, or do you want to write to the object stores?) The default value is &lt;code&gt;readonly&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fbfa79991ee3f160f53a5683a067ad3af11c19d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; read-only property of the &lt;a href=&quot;../lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; interface returns the access mode passed to &lt;a href=&quot;../lockmanager/request&quot;&gt;&lt;code&gt;LockManager.request()&lt;/code&gt;&lt;/a&gt; when the lock was requested. The mode is either &lt;code&gt;&quot;exclusive&quot;&lt;/code&gt; (the default) or &lt;code&gt;&quot;shared&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30484ce9f4c18e99b4ff98ac0cdc2789b9183b90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mode&lt;/code&gt; read-only property of the &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; interface contains the mode of the request (e.g., &lt;code&gt;cors&lt;/code&gt;, &lt;code&gt;no-cors&lt;/code&gt;, &lt;code&gt;same-origin&lt;/code&gt;, or &lt;code&gt;navigate&lt;/code&gt;.) This is used to determine if cross-origin requests lead to valid responses, and which properties of the response are readable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c18db70c1b8495796c972698dfa2b7fa19baf8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;modifiers&lt;/code&gt; read-only property of the &lt;a href=&quot;../paymentrequestevent&quot;&gt;&lt;code&gt;PaymentRequestEvent&lt;/code&gt;&lt;/a&gt; interface returns an array of objects containing changes to payment details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f8e389912dc7069159d3848c01df7f25fb17b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mousedown&lt;/code&gt; event is raised when the user presses the mouse button.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248afb9b2eade263e8565353e39d32f6d6c04806" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mouseenter&lt;/code&gt; event is fired when a pointing device (usually a mouse) is moved over the element that has the listener attached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e623c251caf3ad157b1149b479563809e215280b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mouseleave&lt;/code&gt; event is fired when a pointing device (usually a mouse) is moved off the element that has the listener attached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a79c859dc22ee36f1335e324ef4fc879141f7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mousemove&lt;/code&gt; event is raised when the user moves the mouse.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2054a370d7345cac0262fb960b5626c95b318d84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mozFrameBufferLength&lt;/code&gt; property can be set to a new value for lower latency, larger amounts of data, etc. The size given &lt;em&gt;must&lt;/em&gt; be a number between 512 and 16384. Using any other size results in an exception being thrown. The best time to set a new length is after the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/loadedmetadata&quot;&gt;loadedmetadata&lt;/a&gt; event fires, when the audio info is known, but before the audio has started or &lt;code&gt;MozAudioAvailable&lt;/code&gt; events have begun firing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692f84e3ca77c0509e8e60b555069a727280480a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;multiEntry&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt; interface returns a boolean value that affects how the index behaves when the result of evaluating the index's key path yields an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13760f45c00976eaafe089db6b970acb85d2894f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;muted&lt;/code&gt; read-only property of the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; value indicating whether or not the track is currently unable to provide media output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c739ddcc506af6650aef3d8e9cad6c621c7dcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;myArray.myMethod&lt;/code&gt; function is passed to &lt;code&gt;setTimeout&lt;/code&gt;, then when it's called, its &lt;code&gt;this&lt;/code&gt; is not set so it defaults to the &lt;code&gt;window&lt;/code&gt; object. There's also no option to pass a &lt;code&gt;thisArg&lt;/code&gt; to setTimeout as there is in Array methods like forEach, reduce, etc. and as shown below, using &lt;code&gt;call&lt;/code&gt; to set &lt;code&gt;this&lt;/code&gt; doesn't work either.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f47fa0d5268fd4a1fbd85d2a77dc30399a6582" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nackCount&lt;/code&gt; property of the &lt;a href=&quot;../rtcrtpstreamstats&quot;&gt;&lt;code&gt;RTCRtpStreamStats&lt;/code&gt;&lt;/a&gt; dictionary is a numeric value indicating the number of times the receiver sent a &lt;strong&gt;NACK packet&lt;/strong&gt; to the sender. A NACK (Negative ACKnowledgement, also called &quot;Generic NACK&quot;) packet tells the sender that one or more of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTP&quot;&gt;RTP&lt;/a&gt; packets it sent were lost in transport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86cb3296a8e2e071a8ac32c8848585da206e5666" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; property of the &lt;a href=&quot;../credential&quot;&gt;&lt;code&gt;Credential&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;, containing the name associated with a credential. It should be a human-readable, public name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37eebffac11f847ab37cc846de86ee3eecacdf9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; property of the &lt;a href=&quot;../htmlslotelement&quot;&gt;&lt;code&gt;HTMLSlotElement&lt;/code&gt;&lt;/a&gt; interface returns or sets the slot name. A slot is a placeholder inside a web component that users can fill with their own markup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b7b2cdf7a45755b93f9c1dee736769bcbd30b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; property of the &lt;a href=&quot;../idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt; interface contains a string which names the index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ff1977d9868c6aa5f74f641b825ca45a8340a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; property of the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; interface indicates the name of this object store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66cc3fc615bc040aa0f5fd9ec63681ecb803614f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; property of the &lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt; interface returns a value that further specifies the value returned by the &lt;a href=&quot;entrytype&quot;&gt;&lt;code&gt;PerformanceEntry.entryType&lt;/code&gt;&lt;/a&gt; property. This property is read only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964b16ba0326a41221ec0d14f86ab992d0a3f51e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; read-only property of the &lt;a href=&quot;../domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; that contains one of the strings associated with an &lt;a href=&quot;#Error_names&quot;&gt;error name&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2954f0e9565364b7e0323b60d627c2e29b0338f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; read-only property of the &lt;a href=&quot;../lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; interface returns the &lt;em&gt;name&lt;/em&gt; passed to &lt;a href=&quot;../lockmanager/request&quot;&gt;&lt;code&gt;LockManager.request&lt;/code&gt;&lt;/a&gt; selected when the lock was requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef15121e6ff53e945cc1255248bb90834c6837a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; read-only property of the &lt;a href=&quot;../passwordcredential&quot;&gt;&lt;code&gt;PasswordCredential&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVSTring&lt;/code&gt;&lt;/a&gt; containing a human-readable public name for display in a credential chooser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff74fb8242aac6926ac13f3027507dc6180591bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; read-only property of the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; interface returns the name associated with certain types of events occuring as the &lt;a href=&quot;../speechsynthesisutterance/text&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance.text&lt;/code&gt;&lt;/a&gt; is being spoken: the name of the &lt;a href=&quot;http://www.w3.org/TR/speech-synthesis/#S3.3.2&quot;&gt;SSML&lt;/a&gt; marker reached in the case of a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mark&quot;&gt;mark&lt;/a&gt;&lt;/code&gt; event, or the type of boundary reached in the case of a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/boundary&quot;&gt;boundary&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3fb37f837ec9810973bc7977b76fd4c06471471" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; read-only property of the &lt;code&gt;IDBDatabase&lt;/code&gt; interface is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; that contains the name of the connected database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3648563f07539b1aa8f46257be0e9b2cb119a38e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; read-only property returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; value of the server-specified metric name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414951daba26c332d585d32f889c32afd78a0c7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;navigate()&lt;/code&gt; method of the &lt;a href=&quot;../windowclient&quot;&gt;&lt;code&gt;WindowClient&lt;/code&gt;&lt;/a&gt; interface loads a specified URL into a controlled client page then returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to the existing &lt;a href=&quot;../windowclient&quot;&gt;&lt;code&gt;WindowClient&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3a27ea1e6a224e5941f0355ce90a574eca89f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;navigationPreload&lt;/code&gt; read-only property of the &lt;a href=&quot;../fetchevent&quot;&gt;&lt;code&gt;FetchEvent&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to the instance of &lt;a href=&quot;../navigationpreloadmanager&quot;&gt;&lt;code&gt;NavigationPreloadManager&lt;/code&gt;&lt;/a&gt; associated with the current service worker registration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1934ee30c8fe934d820e6215bed1ccf4654c267a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;navigationPreload&lt;/code&gt; read-only property of the &lt;a href=&quot;../serviceworkerregistration&quot;&gt;&lt;code&gt;ServiceWorkerRegistration&lt;/code&gt;&lt;/a&gt; interface returns the &lt;a href=&quot;../navigationpreloadmanager&quot;&gt;&lt;code&gt;NavigationPreloadManager&lt;/code&gt;&lt;/a&gt; associated with the current service worker registration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43384f193442e92e80effe4110549d5fa3d102ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;navigator.&lt;/code&gt;&lt;code&gt;webdriver&lt;/code&gt; property is true when in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec70db7c2ff7af0c21db8e81d27f5524abe4948b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;navigator.onLine&lt;/code&gt; attribute must return false if the user agent will not contact the network when the user follows links or when a script requests a remote page (or knows that such an attempt would fail)...</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb462bf5eabe9867f6a3534ba9c052f25c46d03" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;near&lt;/code&gt; property tell if there is an object close to the device (&lt;code&gt;true&lt;/code&gt;) or not (&lt;code&gt;false&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="574a9fb490582c7f6b520f08aeba2530dfae9d19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;newVersion&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbversionchangeevent&quot;&gt;&lt;code&gt;IDBVersionChangeEvent&lt;/code&gt;&lt;/a&gt; interface returns the new version number of the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cac764a09694b098ef8a90e5699875212765ee0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nextHopProtocol&lt;/code&gt; read-only property is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; representing the &lt;em&gt;network protocol&lt;/em&gt; used to fetch the resource, as identified by the &lt;a href=&quot;https://tools.ietf.org/html/rfc7301&quot;&gt;ALPN Protocol ID (RFC7301)&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd00d4a24b611990033663029bdafc974d1ea7e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nodeType&lt;/code&gt; property can be used to distinguish different kind of nodes, such that &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../text&quot;&gt;&lt;code&gt;text&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../comment&quot;&gt;&lt;code&gt;comments&lt;/code&gt;&lt;/a&gt;, from each other.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ba4606fbb2b94e087c2503250ff17ee428c1d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;noiseSuppression&lt;/code&gt; cconstraint indicates whether or not the browser offers the ability to automatically control the gain (volume) on media tracks; this obviously is contingent on whether or not the individual device supports automatic gain control as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94acd782db15f3d6b58351860adb1de77b3d581d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nonce&lt;/code&gt; property of the &lt;a href=&quot;../htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt; interface returns the cryptographic number used once that is used by Content Security Policy to determine whether a given fetch will be allowed to proceed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6ef4c6990112600c565e31f371a1939e5144e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;normalize()&lt;/code&gt; method has been modified so that &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt; node can also be normalized if the proper &lt;a href=&quot;domconfiguration&quot;&gt;&lt;code&gt;DOMConfiguration&lt;/code&gt;&lt;/a&gt; flag is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3da07856e845c031add8cad3ce96dd0c3f8916" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;normalize()&lt;/code&gt; method has been moved to &lt;a href=&quot;node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40aacd24da68ba2906f9e04abac6c02dfc3e46cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;normalize&lt;/code&gt; property of the &lt;a href=&quot;../convolvernode&quot;&gt;&lt;code&gt;ConvolverNode&lt;/code&gt;&lt;/a&gt; interface is a boolean that controls whether the impulse response from the buffer will be scaled by an equal-power normalization when the &lt;code&gt;buffer&lt;/code&gt; attribute is set, or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f3ab05fc2430adf6a793330ff7f8f05b150c7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;noteReleased()&lt;/code&gt; function is the event handler called when the user releases the mouse button or moves the mouse out of the key that's currently playing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e5db306c63259a67d5d8aaaf5b2f07a8ff05a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;notification&lt;/code&gt; read-only property of the &lt;a href=&quot;../notificationevent&quot;&gt;&lt;code&gt;NotificationEvent&lt;/code&gt;&lt;/a&gt; interface returns the instance of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; that was clicked to fire the event. The &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; provides read-only access to many properties that were set at the instantiation time of the Notification such as &lt;code&gt;tag&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; attributes that allow you to store information for defered use in the &lt;code&gt;notificationclick&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cacf6e3e1d984686864be00d58a947f7153913f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;numberOfChannels&lt;/code&gt; property of the &lt;a href=&quot;../audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt; interface returns an integer representing the number of discrete audio channels described by the PCM data stored in the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e20e26949744a3d3984c6e73fd53c94decc11617" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;numberOfInputs&lt;/code&gt; property of the &lt;a href=&quot;../audionode&quot;&gt;&lt;code&gt;AudioNode&lt;/code&gt;&lt;/a&gt; interface returns the number of inputs feeding the node. Source nodes are defined as nodes having a &lt;code&gt;numberOfInputs&lt;/code&gt; property with a value of 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260dab2d2143a99f491817715d22ef27cfff950e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;numberOfOutputs&lt;/code&gt; property of the &lt;a href=&quot;../audionode&quot;&gt;&lt;code&gt;AudioNode&lt;/code&gt;&lt;/a&gt; interface returns the number of outputs coming out of the node. Destination nodes &amp;mdash; like &lt;a href=&quot;../audiodestinationnode&quot;&gt;&lt;code&gt;AudioDestinationNode&lt;/code&gt;&lt;/a&gt; &amp;mdash; have a value of 0 for this attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eac9073ba9c845ae632202ddd1ca7ff3878a83b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;objectStore()&lt;/code&gt; method of the &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt; interface returns an object store that has already been added to the scope of this transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd451bd6544c6ae931bb005e5582b0bd7135dbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;objectStore&lt;/code&gt; property of the &lt;a href=&quot;../idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt; interface returns the name of the object store referenced by the current index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13bd620a8d63de75082e36ade20232bb698ce6d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;objectStoreNames&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbdatabase&quot;&gt;&lt;code&gt;IDBDatabase&lt;/code&gt;&lt;/a&gt; interface is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DOMStringList&quot;&gt;&lt;code&gt;DOMStringList&lt;/code&gt;&lt;/a&gt; containing a list of the names of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB#gloss_object_store&quot;&gt;object stores&lt;/a&gt; currently in the connected database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55c3182fceea3cebdec83b6139dcc0652604180" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;objectStoreNames&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DOMStringList&quot;&gt;&lt;code&gt;DOMStringList&lt;/code&gt;&lt;/a&gt; of names of &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2c8d45964cfec41eb865e0c394d548a3096f17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;observe()&lt;/code&gt; method of the&lt;strong&gt; &lt;a href=&quot;../performanceobserver&quot;&gt;&lt;code&gt;PerformanceObserver&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface is used to specify the set of performance entry types to observe. The performance entry types are specified as an array of &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects, each naming one entry type; the type names are documented in &lt;a href=&quot;../performanceentry/entrytype#Performance_entry_type_names&quot;&gt;Performance entry type names&lt;/a&gt; in &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;PerformanceEntry.entryType&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bfff56b0b594e98528c86b2d3a3b23762004838" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; argument is optional.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ffe603952a3879a3a99e747da061969e950f0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offset&lt;/code&gt; read-only property of the &lt;a href=&quot;../vreyeparameters&quot;&gt;&lt;code&gt;VREyeParameters&lt;/code&gt;&lt;/a&gt; interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0239f87755562d4afc8ab3b6e2fd1bd689694a16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offsetLeft&lt;/code&gt; read-only property of the &lt;a href=&quot;../visualviewport&quot;&gt;&lt;code&gt;VisualViewport&lt;/code&gt;&lt;/a&gt; interface returns the offset of the left edge of the visual viewport from the left edge of the layout viewport in CSS pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4443b9f22fe3e4ab29949d37b1c690073a803189" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offsetTop&lt;/code&gt; read-only property of the &lt;a href=&quot;../visualviewport&quot;&gt;&lt;code&gt;VisualViewport&lt;/code&gt;&lt;/a&gt; interface returns the offset of the top edge of the visual viewport from the top edge of the layout viewport in CSS pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4a83b7aaf14cceb00df78597235c349ec0a0de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offsetX&lt;/code&gt; read-only property of the &lt;a href=&quot;../mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt; interface provides the offset in the X coordinate of the mouse pointer between that event and the padding edge of the target node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f12b535d409a7cb166ea64d116c1f024ff78ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;offsetY&lt;/code&gt; read-only property of the &lt;a href=&quot;../mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt; interface provides the offset in the Y coordinate of the mouse pointer between that event and the padding edge of the target node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559e7de40866ada23f68955955df6c9a74079d62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;oldVersion&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbversionchangeevent&quot;&gt;&lt;code&gt;IDBVersionChangeEvent&lt;/code&gt;&lt;/a&gt; interface returns the old version number of the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3291542a9ec1ec2bf995aa852e8bc14c18a64d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onabort&lt;/code&gt; event handler of the &lt;code&gt;IDBTransaction&lt;/code&gt; interface handles the abort event, fired, when the current transaction is aborted via the &lt;a href=&quot;abort&quot;&gt;&lt;code&gt;IDBTransaction.abort&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29113af671f32b5235780263f3ba9e51594c3829" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onabort&lt;/code&gt; read-only property of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FetchSignal&quot;&gt;&lt;code&gt;FetchSignal&lt;/code&gt;&lt;/a&gt; interface is an event handler Invoked when an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/abort_(cancellable_fetch)&quot;&gt;abort&lt;/a&gt;&lt;/code&gt; event fires, i.e. when the fetch request(s) the signal is communicating with is/are aborted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264b87b1f95a1ed9309a12995cc4b9deb73190b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onactivate&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; is called when one of the Sensor interface's child interfaces becomes active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a573b7dfdf2c4d8a4d0bad5b9d76b77f5ebbb78a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onaudioend&lt;/code&gt; property of the &lt;a href=&quot;../speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when the user agent has finished capturing audio (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/audioend&quot;&gt;audioend&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cfe367d6e397468bdace8ce310a83da20ccf691" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onaudioprocess&lt;/code&gt; event handler of the &lt;a href=&quot;../scriptprocessornode&quot;&gt;&lt;code&gt;ScriptProcessorNode&lt;/code&gt;&lt;/a&gt; interface represents the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; to be called for the &lt;code&gt;audioprocess&lt;/code&gt; event that is dispatched to &lt;code&gt;ScriptProcessorNode&lt;/code&gt; node types. An event of type &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioProcessingEvent&quot;&gt;&lt;code&gt;AudioProcessingEvent&lt;/code&gt;&lt;/a&gt; will be dispatched to the event handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63994c9a8a5a1b50224a7b9df37f320d26671ff4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onaudiostart&lt;/code&gt; property of the &lt;a href=&quot;../speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when the user agent has started to capture audio (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/audiostart&quot;&gt;audiostart&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f618daa7087a94b90f26028dde6a37db834c3b0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onblocked &lt;/code&gt;event handler of the &lt;a href=&quot;../idbopendbrequest&quot;&gt;&lt;code&gt;IDBOpenDBRequest&lt;/code&gt;&lt;/a&gt; interface is the event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/blocked&quot;&gt;blocked&lt;/a&gt;&lt;/code&gt; event. This event is triggered when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/upgradeneeded&quot;&gt;upgradeneeded&lt;/a&gt;&lt;/code&gt; should be triggered because of a version change but the database is still in use (that is, not closed) somewhere, even after the &lt;code&gt;versionchange&lt;/code&gt; event was sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04dbc40bcce938847ccc4d0c43ce84f2929ce21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onboundary&lt;/code&gt; property of the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when the spoken utterance reaches a word or sentence boundary (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/boundary&quot;&gt;boundary&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6a1bc76017560c1c116f479dafbe7e57a194b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;oncanplay&lt;/code&gt; property sets and returns the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Guide/Events/Event_handlers&quot;&gt;event handler&lt;/a&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/canplay&quot;&gt;canplay&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ebd52d5aa6da1fd3437dc16e83e72adb394619" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;oncanplaythrough&lt;/code&gt; property sets and returns the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Guide/Events/Event_handlers&quot;&gt;event handler&lt;/a&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/canplaythrough&quot;&gt;canplaythrough&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e8a812cdda2d079dc5940a05d6a1e15d7f1204" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onchange&lt;/code&gt; property of the &lt;a href=&quot;../screenorientation&quot;&gt;&lt;code&gt;ScreenOrientation&lt;/code&gt;&lt;/a&gt; is an event handler fired whenever is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; called when the screen changes orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f09a5e3d7629d982e3ec160a1e7587f5eca6e063" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onchange&lt;/code&gt; property sets and returns the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Guide/Events/Event_handlers&quot;&gt;event handler&lt;/a&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b68c03e51309f575e67dca7e5b7a2fefa5148a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onclick&lt;/code&gt; property of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; interface specifies an event listener to receive &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; events. These events occur when the user clicks on a displayed &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49d71e6dac1dc95752698b4a57abbbddf8b8cdb3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onclose&lt;/code&gt; event handler of the &lt;a href=&quot;../idbdatabase&quot;&gt;&lt;code&gt;IDBDatabase&lt;/code&gt;&lt;/a&gt; interface handles the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; event, which is fired when the database is unexpectedly closed. This can happen, for example, when the application is shut down or access to the disk the database is stored on is lost while the database is open.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b97ac321b282e023084fae1ce5cc9ae0ac6bb24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onclose&lt;/code&gt; property of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; interface specifies an event listener to receive &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; events. These events occur when a &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e345f5667989b8f7e9da9d9ed24032df74996174" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onclose&lt;/code&gt; property of the &lt;a href=&quot;../workerglobalscope&quot;&gt;&lt;code&gt;WorkerGlobalScope&lt;/code&gt;&lt;/a&gt; interface represents an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/close&quot;&gt;close&lt;/a&gt;&lt;/code&gt; event occurs and bubbles through the &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0531626392b19951625bae503a1697b4a0222584" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;oncomplete&lt;/code&gt; event handler of the &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt; interface handles the complete event, fired when the transaction successfully completes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3aae95c7aef329035cc16e8cdb09a51368da73" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;oncomplete&lt;/code&gt; event handler of the &lt;code&gt;OfflineAudioContext&lt;/code&gt; interface is called when the audio processing is terminated, that is when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/complete&quot;&gt;complete&lt;/a&gt;&lt;/code&gt; event (of type &lt;a href=&quot;../offlineaudiocompletionevent&quot;&gt;&lt;code&gt;OfflineAudioCompletionEvent&lt;/code&gt;&lt;/a&gt;) is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c03567557dc978dc26efccca1d49158cf85f95ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onconnect&lt;/code&gt; property of the &lt;a href=&quot;../usb&quot;&gt;&lt;code&gt;USB&lt;/code&gt;&lt;/a&gt; interface is an event handler called whenever a paired device is connected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3a508579b35fe2da168a5643afbf00416d10ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;oncuechange&lt;/code&gt; property sets and returns the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Guide/Events/Event_handlers&quot;&gt;event handler&lt;/a&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/cuechange&quot;&gt;cuechange&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44793491ff048f81237b2584a0365961fcf1f565" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ondisconnect&lt;/code&gt; property of the &lt;a href=&quot;../usb&quot;&gt;&lt;code&gt;USB&lt;/code&gt;&lt;/a&gt; is an event handler called whenever a paired device is disconnected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ec2550de5b8a2977db1e362e8975a093c05a38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ondurationchange&lt;/code&gt; property sets and returns the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Guide/Events/Event_handlers&quot;&gt;event handler&lt;/a&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/durationchange&quot;&gt;durationchange&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a20d18a52c4a8686465f188e34adb8dee7a5516" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onemptied&lt;/code&gt; property sets and returns the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Guide/Events/Event_handlers&quot;&gt;event handler&lt;/a&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/emptied&quot;&gt;emptied&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63a43caa02d886c4a0b4e20c7f79b27b04ea7b06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onencrypted&lt;/code&gt; property of the &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; is an event handler, fired whenever an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/encrypted&quot;&gt;encrypted&lt;/a&gt;&lt;/code&gt; event occurs, denoting the media is encrypted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79ea0ab4aebfed3638a4bde49da7a93d62522710" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onend&lt;/code&gt; property of the &lt;a href=&quot;../speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when the speech recognition service has disconnected (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/end_(SpeechRecognition)&quot;&gt;end&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0244e384608dc8c633f2423de3404989bd6526a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onend&lt;/code&gt; property of the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when the utterance has finished being spoken (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/end_(SpeechSynthesis)&quot;&gt;end&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2689206a98e41e901e1761a7360d4d0598f548" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onended&lt;/code&gt; event handler for the &lt;code&gt;AudioScheduledSourceNode&lt;/code&gt; interface specifies an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; to be executed when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/ended&quot;&gt;ended&lt;/a&gt;&lt;/code&gt; event occurs on the node. This event is sent to the node when the concrete interface (such as &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../constantsourcenode&quot;&gt;&lt;code&gt;ConstantSourceNode&lt;/code&gt;&lt;/a&gt;) determines that it has stopped playing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eaf794ca49f93a7b304b4412083f7ee64ea2f7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onended&lt;/code&gt; property of the &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; interface is used to set the event handler for the ended event, which fires when the tone has stopped playing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe12af323c5e27aa9182c50140216e76d10207a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onended&lt;/code&gt; property sets and returns the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Guide/Events/Event_handlers&quot;&gt;event handler&lt;/a&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/ended&quot;&gt;ended &lt;/a&gt;&lt;/code&gt;event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90dd2ed936f350c723a4f2d34702190d6021bce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onerror&lt;/code&gt; event handler of the &lt;a href=&quot;../idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; interface handles the &lt;code&gt;error&lt;/code&gt; event, fired when a request returns an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e54cfcc053ce6496bdd1a5004b28d0ff19e03056" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onerror&lt;/code&gt; property of the &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; interface specifies an event listener function which will receive &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; events sent to the media element. These events occur when some form of error occurs while attempting to load or perform the media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff9fded57130bcd7cae91b7e85b9f9420dfc8c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onerror&lt;/code&gt; property of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; interface specifies an event listener to receive &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; events. These events occur when something goes wrong with a &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; (in many cases an error preventing the notification from being displayed.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8c06f1f4b89cf2f760b09e617f52f2633d5a67" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onerror&lt;/code&gt; property of the &lt;a href=&quot;../serviceworkercontainer&quot;&gt;&lt;code&gt;ServiceWorkerContainer&lt;/code&gt;&lt;/a&gt; interface is an event handler fired whenever an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; event occurs in the associated service workers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2cab173f81ac96ceaa3df1164cea496f73e4c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onerror&lt;/code&gt; property of the &lt;a href=&quot;../speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when a speech recognition error occurs (when the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error_%28SpeechRecognitionError%29&quot;&gt;error&lt;/a&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4013d112968fc00935b486fbedd742f28f6cca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onerror&lt;/code&gt; property of the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when an error occurs that prevents the utterance from being succesfully spoken (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error_(SpeechSynthesis)&quot;&gt;error&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a82469e15609dde7c6a359ea1b700191e41fa2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onerror&lt;/code&gt; property of the &lt;a href=&quot;../workerglobalscope&quot;&gt;&lt;code&gt;WorkerGlobalScope&lt;/code&gt;&lt;/a&gt; interface represents an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/error&quot;&gt;error&lt;/a&gt;&lt;/code&gt; event occurs and bubbles through the &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec81b88c437e6db3e88d2208aff06786e7081ef6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onerror&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; is called when an error occurs on one of the child interfaces of the &lt;a href=&quot;../sensor&quot;&gt;&lt;code&gt;Sensor&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f0243d9848da9117043817acfcaacef3ca2517" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ongoingTouchIndexById()&lt;/code&gt; function below scans through the &lt;code&gt;ongoingTouches&lt;/code&gt; array to find the touch matching the given identifier, then returns that touch's index into the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03acec778584ffe5c3dc878033378e035f4ed4cd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ongotpointercapture&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; property of the &lt;a href=&quot;../globaleventhandlers&quot;&gt;&lt;code&gt;GlobalEventHandlers&lt;/code&gt;&lt;/a&gt; interface returns the event handler (function) for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/gotpointercapture&quot;&gt;gotpointercapture&lt;/a&gt;&lt;/code&gt; event type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20e78d87aa5503a72b8fd51e0f9240693080c3bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;oninvalid&lt;/code&gt; property sets and returns the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Guide/Events/Event_handlers&quot;&gt;event handler&lt;/a&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/invalid&quot;&gt;invalid&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae8e85c5cfecd9dc6e0da113f16425e589cb19b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onkeystatuseschange&lt;/code&gt; property of the &lt;a href=&quot;../mediakeysession&quot;&gt;&lt;code&gt;MediaKeySession&lt;/code&gt;&lt;/a&gt; is an event handler, fired whenever a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keystatuschange&quot;&gt;keystatuschange&lt;/a&gt;&lt;/code&gt; event ocurrs, denoting there has been a change in the keys or their statuses within a session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80850b2abc0973ae2d12adcc0a98f5a431e5487" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onlanguagechange&lt;/code&gt; property of the &lt;a href=&quot;../workerglobalscope&quot;&gt;&lt;code&gt;WorkerGlobalScope&lt;/code&gt;&lt;/a&gt; interface represents an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/languagechange&quot;&gt;languagechange&lt;/a&gt;&lt;/code&gt; event occurs and bubbles through the &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="debeb25d6f7eaf2409dda884f7b126f02e8b372a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onload&lt;/code&gt; property of the &lt;a href=&quot;../globaleventhandlers&quot;&gt;&lt;code&gt;GlobalEventHandlers&lt;/code&gt;&lt;/a&gt; mixin is an event handler for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;&lt;code&gt;load&lt;/code&gt; event&lt;/a&gt; of a &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; element, etc., which fires when the resource has loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83efe9b1d37671682056966487734c1ba4cecf26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onloadeddata&lt;/code&gt; property sets and returns the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Guide/Events/Event_handlers&quot;&gt;event handler&lt;/a&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/loadeddata&quot;&gt;loadeddata&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59820eb1dec334bba6ec439b2296a58bf9ee1f79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onloadedmetadata&lt;/code&gt; property sets and returns the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Guide/Events/Event_handlers&quot;&gt;event handler&lt;/a&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/loadedmetadata&quot;&gt;loadedmetadata&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99deee1119f2d796868522a12fb93d2df7e425c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onloadend&lt;/code&gt; property of the &lt;a href=&quot;../globaleventhandlers&quot;&gt;&lt;code&gt;GlobalEventHandlers&lt;/code&gt;&lt;/a&gt; mixin is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; representing the code to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/loadend&quot;&gt;loadend&lt;/a&gt;&lt;/code&gt; event is raised (when progress has stopped on the loading of a resource.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9965a90fef78fa65b105064dec6b240806be43be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onloadstart&lt;/code&gt; property of the &lt;a href=&quot;../globaleventhandlers&quot;&gt;&lt;code&gt;GlobalEventHandlers&lt;/code&gt;&lt;/a&gt; mixin is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; representing the code to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/loadstart&quot;&gt;loadstart&lt;/a&gt;&lt;/code&gt; event is raised (when progress has begun on the loading of a resource.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e51546442bb02998a2fce7feb4ae54ffecb46c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onlostpointercapture&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; property of the &lt;a href=&quot;../globaleventhandlers&quot;&gt;&lt;code&gt;GlobalEventHandlers&lt;/code&gt;&lt;/a&gt; interface returns the event handler (function) for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/lostpointercapture&quot;&gt;lostpointercapture&lt;/a&gt;&lt;/code&gt; event type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469112bd0acccd19003f579fdccdebf9fbb34892" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;only()&lt;/code&gt; method of the &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt; interface creates a new key range containing a single value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c3f08a7757e1284325d9e19cfe8729c303578a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onmark&lt;/code&gt; property of the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when the spoken utterance reaches a named &lt;a href=&quot;http://www.w3.org/TR/speech-synthesis/#S3.3.2&quot;&gt;SSML mark tag&lt;/a&gt; (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mark&quot;&gt;mark&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f1585bdfa23ae493a9dc4c2c8a058ed8752dee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onmessage&lt;/code&gt; handler allows us to run some code whenever a message is received, with the message itself being available in the &lt;code&gt;message&lt;/code&gt; event's &lt;code&gt;data&lt;/code&gt; attribute. Here we simply multiply together the two numbers then use &lt;code&gt;postMessage()&lt;/code&gt; again, to post the result back to the main thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e802c35388195881ffaab9e2f589418c31ad05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onmessage&lt;/code&gt; property of the &lt;a href=&quot;../dedicatedworkerglobalscope&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; interface represents an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; event occurs and bubbles through the &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; &amp;mdash; i.e. when a message is sent to the worker using the &lt;a href=&quot;../worker/postmessage&quot;&gt;&lt;code&gt;Worker.postMessage&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955e52d6eee3553ee290d8488bb59ed0215f48b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onmessage&lt;/code&gt; property of the &lt;a href=&quot;../mediakeysession&quot;&gt;&lt;code&gt;MediaKeySession&lt;/code&gt;&lt;/a&gt; is an event handler, fired whenever a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/MediaKeyMessageEvent&quot;&gt;MediaKeyMessageEvent&lt;/a&gt;&lt;/code&gt; ocurrs, denoting a message is generated by the content decryption module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74345bf89506dabc11859fd405d7435bd4731f54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onmessage&lt;/code&gt; property of the &lt;a href=&quot;../serviceworkercontainer&quot;&gt;&lt;code&gt;ServiceWorkerContainer&lt;/code&gt;&lt;/a&gt; interface is an event handler fired whenever a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; event occurs &amp;mdash; when incoming messages are received to the &lt;a href=&quot;../serviceworkercontainer&quot;&gt;&lt;code&gt;ServiceWorkerContainer&lt;/code&gt;&lt;/a&gt; object (e.g., via a &lt;a href=&quot;../messageport/postmessage&quot;&gt;&lt;code&gt;MessagePort.postMessage()&lt;/code&gt;&lt;/a&gt; call).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34acd558d373cfe1ddc9dda22a752f198ac678a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onmessage&lt;/code&gt; property of the &lt;a href=&quot;../windoweventhandlers&quot;&gt;&lt;code&gt;WindowEventHandlers&lt;/code&gt;&lt;/a&gt; is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; called whenever an object receives a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e8b688cfc0b7f222a46c6da1d4d70fd6e73e15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onmessage&lt;/code&gt; property of the &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; interface represents an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt;, that is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; event occurs. These events are of type &lt;a href=&quot;../messageevent&quot;&gt;&lt;code&gt;MessageEvent&lt;/code&gt;&lt;/a&gt; and will be called when the worker's parent receives a message (i.e. from the &lt;a href=&quot;../dedicatedworkerglobalscope/postmessage&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope.postMessage&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc5a89f408b13bc5de73ceae2b40790878ce186" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onmousedown&lt;/code&gt; property returns the &lt;code&gt;onmousedown&lt;/code&gt; event handler code on the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aed444f04e9164569d2431e8be3aa16c6964b1fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onmouseenter&lt;/code&gt; property sets and returns the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Guide/Events/Event_handlers&quot;&gt;event handler&lt;/a&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseenter&quot;&gt;mouseenter&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b1494dd1114101f6b5ff51359dd9c452354ade" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onmouseleave&lt;/code&gt; property sets and returns the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Guide/Events/Event_handlers&quot;&gt;event handler&lt;/a&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseleave&quot;&gt;mouseleave&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ed01c94d3e017a1f979949688970dd86944426" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onnomatch&lt;/code&gt; property of the &lt;a href=&quot;../speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when the speech recognition service returns a final result with no significant recognition (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/nomatch&quot;&gt;nomatch&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a162051bfa58bfb74e1c396846343d921f4863f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onoffline&lt;/code&gt; property of the &lt;a href=&quot;../workerglobalscope&quot;&gt;&lt;code&gt;WorkerGlobalScope&lt;/code&gt;&lt;/a&gt; interface represents an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/offline&quot;&gt;offline&lt;/a&gt;&lt;/code&gt; event occurs and bubbles through the &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e493174fde799f8ffe2e11f30de00dec3f815440" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ononline&lt;/code&gt; property of the &lt;a href=&quot;../workerglobalscope&quot;&gt;&lt;code&gt;WorkerGlobalScope&lt;/code&gt;&lt;/a&gt; interface represents an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/online&quot;&gt;online&lt;/a&gt;&lt;/code&gt; event occurs and bubbles through the &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881536806c9fa5ce25355ab114ccd66cbe57a1bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onpause&lt;/code&gt; property of the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when the utterance is paused part way through (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pause_(SpeechSynthesis)&quot;&gt;pause&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51af3b503d02b77b22e1f4e1fdc1d82d9af05113" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onpause&lt;/code&gt; property sets and returns the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Guide/Events/Event_handlers&quot;&gt;event handler&lt;/a&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pause&quot;&gt;pause&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d7f088e98ac0cbb65729467f99ba0d84c1044d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onreading&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; is called when a reading is taken on one of the child interfaces of the &lt;a href=&quot;../sensor&quot;&gt;&lt;code&gt;Sensor&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919aa00b5ff66b9be2d94ad75816c899724639d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onresize&lt;/code&gt; event handler of the &lt;a href=&quot;../visualviewport&quot;&gt;&lt;code&gt;VisualViewport&lt;/code&gt;&lt;/a&gt; interface is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; called when a viewport is resized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215573e9b3cd7ddf4309f6f27ff1db2adca9aca5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onresourcetimingbufferfull&lt;/code&gt; property is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;event handler&lt;/code&gt;&lt;/a&gt; that will be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/resourcetimingbufferfull&quot;&gt;resourcetimingbufferfull&lt;/a&gt;&lt;/code&gt; event is fired. This event is fired when the browser's resource timing performance buffer is full.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a94313bbf1552ab382eacde4fac7d1835951fc0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onresult&lt;/code&gt; property of the &lt;a href=&quot;../speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when the speech recognition service returns a result &amp;mdash; a word or phrase has been positively recognized and this has been communicated back to the app (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/result&quot;&gt;result&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63c3a913eef03ab4a4a89f850e4bd78ac56cfb4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onresume&lt;/code&gt; property of the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when a paused utterance is resumed (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/resume&quot;&gt;resume&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b49e045a84c526cdb9849974dbb3e379599e84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onscroll&lt;/code&gt; event handler of the &lt;a href=&quot;../visualviewport&quot;&gt;&lt;code&gt;VisualViewport&lt;/code&gt;&lt;/a&gt; interface is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; called when a viewport is scrolled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6669829fdecbe786206b16ff6fd933a1f140ae7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onshippingaddresschange&lt;/code&gt; event of the &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; interface is fired whenever the user changes their shipping address, including when an address is added by the user for the first time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef94a8d4c3c4fe041924459511c6da5723a8b1f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onshippingoptionchange&lt;/code&gt; event of the &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; interface is fired whenever the user changes a shipping option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c79ec29df052d6d8aabe2580743365f897de1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onshow&lt;/code&gt; property of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; interface specifies an event listener to receive &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/show&quot;&gt;show&lt;/a&gt;&lt;/code&gt; events. These events occur when a &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; is displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee25e45bfa362ec2d827416e295b3e68f45ac413" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onsoundend&lt;/code&gt; property of the &lt;a href=&quot;../speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when any sound &amp;mdash; recognisable speech or not &amp;mdash; has stopped being detected (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/soundend&quot;&gt;soundend&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19011b235ab174c411426e644676c52d90dcf53a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onsoundstart&lt;/code&gt; property of the &lt;a href=&quot;../speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when any sound &amp;mdash; recognisable speech or not &amp;mdash; has been detected (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/soundstart&quot;&gt;soundstart&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1835e7025a9c2f630d607a75c38e2b9e04fa067" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onspeechend&lt;/code&gt; property of the &lt;a href=&quot;../speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when speech recognised by the speech recognition service has stopped being detected (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/speechend&quot;&gt;speechend&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4c101fc645ca59b47379da7ecb12ca810d3896a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onspeechstart&lt;/code&gt; property of the &lt;a href=&quot;../speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when sound recognised by the speech recognition service as speech has been detected (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/speechstart&quot;&gt;speechstart&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e3ca0b8c452eacaf58b8ddb1059b3e312e6ab4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onstart&lt;/code&gt; property of the &lt;a href=&quot;../speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when the speech recognition service has begun listening to incoming audio with intent to recognize grammars associated with the current &lt;code&gt;SpeechRecognition&lt;/code&gt; (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/start_(SpeechRecognition)&quot;&gt;start&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c7b7c5d2fc98ab052146115c483f25661f3ff4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onstart&lt;/code&gt; property of the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when the utterance has begun to be spoken (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/start&quot;&gt;start&lt;/a&gt;&lt;/code&gt; event fires.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb5f3db58d4a02bb26251c077248a3b861018b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onstatechange&lt;/code&gt; property of the &lt;a href=&quot;../baseaudiocontext&quot;&gt;&lt;code&gt;BaseAudioContext&lt;/code&gt;&lt;/a&gt; interface defines an event handler function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/statechange&quot;&gt;statechange&lt;/a&gt;&lt;/code&gt; event fires: this occurs when the audio context's state changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1bb7501a0ce2a61b6f27c642d708c5400a92c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onsuccess&lt;/code&gt; event handler of the &lt;a href=&quot;../idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; interface handles the &lt;code&gt;success&lt;/code&gt; event, fired when the result of a request is successfully returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e666d36ca195be4cbc075253cbde7045a57af7af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ontonechange&lt;/code&gt; property of the &lt;a href=&quot;../rtcdtmfsender&quot;&gt;&lt;code&gt;RTCDTMFSender&lt;/code&gt;&lt;/a&gt; interface is used to set the event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/tonechange&quot;&gt;tonechange&lt;/a&gt;&lt;/code&gt; event, which is sent to the &lt;code&gt;RTCDTMFSender&lt;/code&gt; each time a tone begins or ends. The event handler receives as input a single parameter of type &lt;a href=&quot;../rtcdtmftonechangeevent&quot;&gt;&lt;code&gt;RTCDTMFToneChangeEvent&lt;/code&gt;&lt;/a&gt;, which describes the change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66746304e85e320965bf15fb2e2e77a5cfa54f31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onupgradeneeded&lt;/code&gt; property of the &lt;a href=&quot;../idbopendbrequest&quot;&gt;&lt;code&gt;IDBOpenDBRequest&lt;/code&gt;&lt;/a&gt; interface is the event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/upgradeneeded&quot;&gt;upgradeneeded&lt;/a&gt;&lt;/code&gt; event, triggered when a database of a bigger version number than the existing stored database is loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a779c9d9d53fb321f442c496bd1b52ba87b73d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onversionchange&lt;/code&gt; event handler of the &lt;a href=&quot;../idbdatabase&quot;&gt;&lt;code&gt;IDBDatabase&lt;/code&gt;&lt;/a&gt; interface handles the versionchange event, fired when a database structure change (&lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt;&lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt;&lt;/a&gt; event or &lt;a href=&quot;../idbfactory/deletedatabase&quot;&gt;&lt;code&gt;IDBFactory.deleteDatabase&lt;/code&gt;&lt;/a&gt;) was requested elsewhere (most probably in another window/tab on the same computer).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace1a96fca5b660c94599ad7db1afd0da2c2d0eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onvrdisplayactivate&lt;/code&gt; property of the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when a display is able to be presented to (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/vrdisplayactivate&quot;&gt;vrdisplayactivate&lt;/a&gt;&lt;/code&gt; event fires), for example if an HMD has been moved to bring it out of standby, or woken up by being put on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abeaef4ea221dc29c1fadcea688295bc1183ccfb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onvrdisplayblur&lt;/code&gt; property of the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when presentation to a display has been paused for some reason by the browser, OS, or VR hardware (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/vrdisplayblur&quot;&gt;vrdisplayblur&lt;/a&gt;&lt;/code&gt; event fires) &amp;mdash; for example, while the user is interacting with a system menu or browser, to prevent tracking or loss of experience.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce0a26069cb8cd43bf33a44304ed7e5ca83f3b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onvrdisplaydeactivate&lt;/code&gt; property of the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when a display can no longer be presented to (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/vrdisplaydeactivate&quot;&gt;vrdisplaydeactivate&lt;/a&gt;&lt;/code&gt; event fires), for example if an HMD has gone into standby or sleep mode due to a period of inactivity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="032628a0f1303cc498d93340c69559dc9543e5cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onvrdisplayfocus&lt;/code&gt; property of the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when presentation to a display has resumed after being blurred (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/vrdisplayfocus&quot;&gt;vrdisplayfocus&lt;/a&gt;&lt;/code&gt; event fires).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d508467f0f4aeb5a6c9cb23de2d3663704bbdc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onvrdisplaypresentchange&lt;/code&gt; property of the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; interface represents an event handler that will run when the presenting state of a VR display changes &amp;mdash; i.e. goes from presenting to not presenting, or vice versa (when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/vrdisplaypresentchange&quot;&gt;vrdisplaypresentchange&lt;/a&gt;&lt;/code&gt; event fires).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db00d5f89606b466b0ee4deea9233f9aa4f3c374" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onwaitingforkey&lt;/code&gt; property of the &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; is an event handler, fired when a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/waitingforkey&quot;&gt;waitingforkey&lt;/a&gt;&lt;/code&gt; event occurs, when playback is blocked while waiting for an encryption key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c74f85936dc2d273348319e5880c0e87b5c96f02" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;onwheel&lt;/code&gt; property returns the &lt;code&gt;onwheel&lt;/code&gt; event handler code on the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e085597901afebc7722c28f7966de7f157b5fd41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;open()&lt;/code&gt; method creates a new secondary browser window, similar to choosing New Window from the File menu. The &lt;code&gt;strUrl&lt;/code&gt; parameter specifies the URL to be fetched and loaded in the new window. If &lt;code&gt;strUrl&lt;/code&gt; is an empty string, then a new blank, empty window (URL &lt;code&gt;about:blank&lt;/code&gt;) is created with the default toolbars of the main window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be5f4d5ad0b350f1d67b1d1f47d240041069c93d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;open()&lt;/code&gt; method of the &lt;a href=&quot;../cachestorage&quot;&gt;&lt;code&gt;CacheStorage&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object matching the &lt;code&gt;cacheName&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9b3ad20bd59395d3f02b4eeb458852e25915f5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;open()&lt;/code&gt; method of the &lt;a href=&quot;../idbfactory&quot;&gt;&lt;code&gt;IDBFactory&lt;/code&gt;&lt;/a&gt; interface requests opening a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB#gloss_database_connection&quot;&gt;connection to a database&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b550c9b4f2778d914b6db0a66532a9b8fd52d35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;open()&lt;/code&gt; method of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/promise&quot;&gt;&lt;code&gt;promise&lt;/code&gt;&lt;/a&gt; that resolves when a device session has started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49089eaf6068c22aa93d8c50183fd57b03a77e01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;open&lt;/code&gt; property of the &lt;a href=&quot;../htmldialogelement&quot;&gt;&lt;code&gt;HTMLDialogElement&lt;/code&gt;&lt;/a&gt; interface is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog#attr-open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; HTML attribute, indicating whether the dialog is available for interaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ef7e2a1d35d7089205986f53c225a6d23aac28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;openCursor()&lt;/code&gt; function takes several arguments. First, you can limit the range of items that are retrieved by using a key range object that we'll get to in a minute. Second, you can specify the direction that you want to iterate. In the above example, we're iterating over all objects in ascending order. The success callback for cursors is a little special. The cursor object itself is the &lt;code&gt;result&lt;/code&gt; of the request (above we're using the shorthand, so it's &lt;code&gt;event.target.result&lt;/code&gt;). Then the actual key and value can be found on the &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; properties of the cursor object. If you want to keep going, then you have to call &lt;code&gt;continue()&lt;/code&gt; on the cursor. When you've reached the end of the data (or if there were no entries that matched your &lt;code&gt;openCursor()&lt;/code&gt; request) you still get a success callback, but the &lt;code&gt;result&lt;/code&gt; property is &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0737b59d9ddce17ddc4b0688851827506ee742b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;openCursor()&lt;/code&gt; method of the &lt;a href=&quot;../idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt; interface returns an &lt;a href=&quot;../idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; object, and, in a separate thread, creates a &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#gloss_cursor&quot;&gt;cursor&lt;/a&gt; over the specified key range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b64f74fbc3e38ac88201807553c18d52ba535ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;openCursor()&lt;/code&gt; method of the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; interface returns an &lt;a href=&quot;../idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; object, and, in a separate thread, returns a new &lt;a href=&quot;../idbcursorwithvalue&quot;&gt;&lt;code&gt;IDBCursorWithValue&lt;/code&gt;&lt;/a&gt; object. Used for iterating through an object store with a cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d53dab4bf20280957af86642576cbdf2e6a01e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;openKeyCursor()&lt;/code&gt; method of the &lt;a href=&quot;../idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt; interface returns an &lt;a href=&quot;../idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; object, and, in a separate thread, creates a cursor over the specified key range, as arranged by this index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52587a703b8f65265e6adb1c418ed537cd4cf2d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;openKeyCursor()&lt;/code&gt; method of the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; interface returns an &lt;a href=&quot;../idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; object whose result will be set to an &lt;a href=&quot;../idbcursor&quot;&gt;&lt;code&gt;IDBCursor&lt;/code&gt;&lt;/a&gt; that can be used to iterate through matching results. Used for iterating through the keys of an object store with a cursor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2e34dbec915c9b419800c5de746205bde66b603" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;openWindow()&lt;/code&gt; method of the &lt;a href=&quot;../clients&quot;&gt;&lt;code&gt;Clients&lt;/code&gt;&lt;/a&gt; interface creates a new top level browsing context and loads a given URL. If the calling script doesn't have permission to show popups, &lt;code&gt;openWindow() &lt;/code&gt;will throw an InvalidAccessError.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a686259a7fcada3a76c5edeb68a8ee4d71d99b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;openWindow&lt;/code&gt; property of the &lt;a href=&quot;../paymentrequestevent&quot;&gt;&lt;code&gt;PaymentRequestEvent&lt;/code&gt;&lt;/a&gt; interface opens the specified URL in a new window, if and only if the given URL is on the same origin as the calling page. It returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves with a reference to a &lt;a href=&quot;../windowclient&quot;&gt;&lt;code&gt;WindowClient&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0296a8ffb6a3bf396eefc79b5265d73507fbeee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opened&lt;/code&gt; read only property of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface indicates whether a session has been started with a paired USB device. A device must be opened before it can conrolled by a web page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767fa90cb7d6a4cc51d2dbe2da1be7748be6d74c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; argument is optional. When provided, it is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object&quot;&gt;&lt;code&gt;Object&lt;/code&gt;&lt;/a&gt; which can contain the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62932f289f9605dff4e09b5a411874d9d947efab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; object passed into the &lt;a href=&quot;intersectionobserver/intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver()&lt;/code&gt;&lt;/a&gt; constructor let you control the circumstances under which the observer's callback is invoked. It has the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a451bc7977720007c4a66c3a37456231c02dd35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter is an object which is based on the &lt;a href=&quot;../filesystemflags&quot;&gt;&lt;code&gt;FileSystemFlags&lt;/code&gt;&lt;/a&gt; dictionary; it provides flags which make it possible to adjust the behavior of the &lt;code&gt;getDirectory()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e074d77ceca08b5e87e01749eeba9277a1b277" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter is an object which is based on the &lt;a href=&quot;../filesystemflags&quot;&gt;&lt;code&gt;FileSystemFlags&lt;/code&gt;&lt;/a&gt; dictionary; it provides flags which make it possible to adjust the behavior of the &lt;code&gt;getFile()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8019ac865adb20e05787b5614f2445a83554df5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; parameter with a &lt;code&gt;applicationServerKey&lt;/code&gt; value is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad1720b63c0945a3a8d504ab8ef39fcf0fc46d49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; read-only property of the &lt;a href=&quot;../pushsubscription&quot;&gt;&lt;code&gt;PushSubscription&lt;/code&gt;&lt;/a&gt; interface is an object containing containing the options used to create the subscription.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf54676d0162ce100cc75570dde783cf3754918" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;organization&lt;/code&gt; read-only property of the &lt;a href=&quot;../paymentaddress&quot;&gt;&lt;code&gt;PaymentAddress&lt;/code&gt;&lt;/a&gt; interface returns a string containing the name of the organization, firm, company, or institution at the address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6227dea2b42ee7c4dc09a6ea7056d9d1092dfd5c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;orientation&lt;/code&gt; read-only property of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRPositionState&quot;&gt;&lt;code&gt;VRPositionState&lt;/code&gt;&lt;/a&gt; interface returns the orientation of the sensor at the current &lt;a href=&quot;timestamp&quot;&gt;&lt;code&gt;VRPose.timestamp&lt;/code&gt;&lt;/a&gt;, as a quarternion value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b1fe9611fff2b94aa6ac2e575140ab16c9e256e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;orientationX&lt;/code&gt; property of the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; interface indicates the X (horizontal) component of the direction in which the audio source is facing, in a 3D Cartesian coordinate space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13dc08bbdcdce65bb3fa334ba4f9c22e6c76b73a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;orientationY&lt;/code&gt; property of the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; interface indicates the Y (vertical) component of the direction the audio source is facing, in 3D Cartesian coordinate space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccf4f6e5ad19fc3187eac82ea05908aefaf9e38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;orientationZ&lt;/code&gt; property of the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; interface indicates the Z (depth) component of the direction the audio source is facing, in 3D Cartesian coordinate space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c613625dcf4ea4107e4304818b3c6742da294f16" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outerHTML&lt;/code&gt; attribute of the &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; DOM interface gets the serialized HTML fragment describing the element including its descendants. It can also be set to replace the element with nodes parsed from the given string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a883be1e468a453251278cabb6c4963520aac5d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;outputLatency&lt;/code&gt; read-only property of the &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; Interface provides an estimation of the output latency of the current audio context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cead23a5e43bbd4f7959d84a092f9b68d6d7979" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;oversample&lt;/code&gt; property of the &lt;a href=&quot;../waveshapernode&quot;&gt;&lt;code&gt;WaveShaperNode&lt;/code&gt;&lt;/a&gt; interface is an enumerated value indicating if oversampling must be used. Oversampling is a technique for creating more samples (up-sampling) before applying a distortion effect to the audio signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c52cfa142e88555c67d92c907259ced6aaa992" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ownerDocument&lt;/code&gt; of doctype nodes (that is, nodes for which &lt;code&gt;Node.nodeType&lt;/code&gt; is &lt;code&gt;Node.DOCUMENT_TYPE_NODE&lt;/code&gt; or 10) is no longer null. Instead, the &lt;code&gt;ownerDocument&lt;/code&gt; is the document on which &lt;code&gt;document.implementation.createDocumentType()&lt;/code&gt; was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c7812154e37799550ccad56839f8965b1e8d2d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ownerDocument&lt;/code&gt; property was slightly modified so that &lt;a href=&quot;documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt; also returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a184730d85dcf106e980dfcdbce3fbec34047331" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pageLeft&lt;/code&gt; read-only property of the &lt;a href=&quot;../visualviewport&quot;&gt;&lt;code&gt;VisualViewport&lt;/code&gt;&lt;/a&gt; interface returns the x coordinate relative to the initial containing block origin of the left edge of the visual viewport, in CSS pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94ec2a722aeaa51556abefa5d45d3925ce6f4a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pageTop&lt;/code&gt; read-only property of the &lt;a href=&quot;../visualviewport&quot;&gt;&lt;code&gt;VisualViewport&lt;/code&gt;&lt;/a&gt; interface returns the y coordinate relative to the initial containing block origin of the top edge of the visual viewport, in CSS pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ddf6686ecbf663a19b176841dd0284584955926" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pageXOffset&lt;/code&gt; property is an alias for the &lt;code&gt;scrollX&lt;/code&gt; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fafa0f01d79a37de22995de7be674f08a4ea672" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pageYOffset&lt;/code&gt; property is an alias for the &lt;code&gt;scrollY&lt;/code&gt; property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f3ed41459e0a9af17fae24cf832da17f7b8dea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pan&lt;/code&gt; property of the &lt;a href=&quot;../stereopannernode&quot;&gt;&lt;code&gt;StereoPannerNode&lt;/code&gt;&lt;/a&gt; interface is an &lt;a href=&quot;../audioparam#a-rate&quot;&gt;a-rate&lt;/a&gt;&lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing the amount of panning to apply. The value can range between &lt;code&gt;-1&lt;/code&gt; (full left pan) and &lt;code&gt;1&lt;/code&gt; (full right pan).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26596b120e4c886353bb878206a4c628816fb421" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;panningModel&lt;/code&gt; property of the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; interface is an enumerated value determining which spatialisation algorithm to use to position the audio in 3D space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2484ba860b3875a071c427f4d39bfe953f91d334" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parse()&lt;/code&gt; method of the &lt;a href=&quot;../cssstylevalue&quot;&gt;&lt;code&gt;CSSStyleValue&lt;/code&gt;&lt;/a&gt; interface sets a specific CSS property to the specified values and returns the first value as a &lt;a href=&quot;../cssstylevalue&quot;&gt;&lt;code&gt;CSSStyleValue&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925c54b0303f2a7ae4bf0b6d7f48e4c12ca8a5be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parseAll()&lt;/code&gt; method of the &lt;a href=&quot;../cssstylevalue&quot;&gt;&lt;code&gt;CSSStyleValue&lt;/code&gt;&lt;/a&gt; interface sets all occurences of a specific CSS property to the specified valueand returns an array of &lt;a href=&quot;../cssstylevalue&quot;&gt;&lt;code&gt;CSSStyleValue&lt;/code&gt;&lt;/a&gt; objects, each containing one of the supplied values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034cf699cfb1c739846f8322dd093bacf7fc94ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;password&lt;/code&gt; read-only property of the &lt;a href=&quot;../passwordcredential&quot;&gt;&lt;code&gt;PasswordCredential&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; containing the password of the credential.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af46f9ccf8e6e7edfe009ea466618f558fbdbb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;passwordName&lt;/code&gt; property of the &lt;a href=&quot;../passwordcredential&quot;&gt;&lt;code&gt;PasswordCredential&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt;, depicting the name used by the password field, when submitting the current object to a remote endpoint via &lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;. This property defaults to &lt;code&gt;'password'&lt;/code&gt;, but may be matched to anything your backend service expects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e336add5b1c85228c14d913e421a96bc8386db8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pause&lt;/code&gt; event is fired when playback has been paused.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88aec7ec22904816b846dc0aa62a7e662602364" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pause&lt;/code&gt; event is thrown as a result of the &lt;a href=&quot;pause&quot;&gt;&lt;code&gt;MediaRecorder.pause()&lt;/code&gt;&lt;/a&gt; method being invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c76c5582028433d249bde8e0eb9a078ca74bb36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;paused&lt;/code&gt; read-only property of the &lt;a href=&quot;../speechsynthesis&quot;&gt;&lt;code&gt;SpeechSynthesis&lt;/code&gt;&lt;/a&gt; interface is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; that returns &lt;code&gt;true&lt;/code&gt; if the &lt;code&gt;SpeechSynthesis&lt;/code&gt; object is in a paused state, or &lt;code&gt;false&lt;/code&gt; if not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273fbb8dadab67ca1728773ed0fa52d2346af0d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;payerName&lt;/code&gt; readonly property of the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; interface returns the name supplied by the user. This option is only present when the &lt;code&gt;requestPayerName&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt; in the options parameter of the &lt;a href=&quot;../paymentrequest/paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d74a6afd3062985a665f8b8fd3d73ff0ab9d64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;paymentRequestId&lt;/code&gt; read-only property of the &lt;a href=&quot;../paymentrequestevent&quot;&gt;&lt;code&gt;PaymentRequestEvent&lt;/code&gt;&lt;/a&gt; interface returns the ID of the &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4cad722fc9bb5ed478e894e6cf25df88bc67ef6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;paymentRequestOrigin&lt;/code&gt; read-only property of the &lt;a href=&quot;../paymentrequestevent&quot;&gt;&lt;code&gt;PaymentRequestEvent&lt;/code&gt;&lt;/a&gt; interface returns the origin where the &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; object was initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f006abbf64d55677faab9de5024a309d6b9e75f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pending&lt;/code&gt; read-only property of the &lt;a href=&quot;../speechsynthesis&quot;&gt;&lt;code&gt;SpeechSynthesis&lt;/code&gt;&lt;/a&gt; interface is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; that returns &lt;code&gt;true&lt;/code&gt; if the utterance queue contains as-yet-unspoken utterances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5721bc58d35c4fe5ad0d37264f5aba3723f2cfc6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pendingLocalDescription&lt;/code&gt; contains not just the offer or answer under consideration, but any local ICE candidates which have already been gathered since the offer or answer was created. Similarly, &lt;code&gt;pendingRemoteDescription&lt;/code&gt; includes any remote ICE candidates which have been provided by calls to &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt;&lt;code&gt;RTCPeerConnection.addIceCandidate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62f0bbcd2d2bcbe56136a7495970640ab17da2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;permission&lt;/code&gt; read-only property of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; interface indicates the current permission granted by the user for the current origin to display web notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a85f6825fcf4716d5c147d255b1acfb988c6955e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;permissionState()&lt;/code&gt; method of the &lt;a href=&quot;../pushmanager&quot;&gt;&lt;code&gt;PushManager&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; indicating the permission state of the push manager. Possible values are &lt;code&gt;'prompt'&lt;/code&gt;, &lt;code&gt;'denied'&lt;/code&gt;, or &lt;code&gt;'granted'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b036619fcccc6531c42801f0f507f97f3aa2785" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;persist()&lt;/code&gt; method of the &lt;a href=&quot;../storagemanager&quot;&gt;&lt;code&gt;StorageManager&lt;/code&gt;&lt;/a&gt; interface requests permission to use persistent storage, and returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to &lt;code&gt;true&lt;/code&gt; if permission is granted and box mode is persistent, and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fea47fe526bc0491d0b06313d4d122ed0db2126" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;persisted&lt;/code&gt; property of the &lt;a href=&quot;../storagemanager&quot;&gt;&lt;code&gt;StorageManager&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to &lt;code&gt;true&lt;/code&gt; if box mode is persistent for your site's storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8672787ec14655845e19b0b7d8ddd27c7a40789" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pipeThrough()&lt;/code&gt; method of the &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; interface provides a chainable way of piping the current stream through a transform stream or any other writable/readable pair.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41089588112ea9f9afa85d9a87b73e05b34fa99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pipeTo()&lt;/code&gt; method of the &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; interface pipes the current &lt;code&gt;ReadableStream&lt;/code&gt; to a given &lt;a href=&quot;../writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt; and returns a promise that fulfills when the piping process completes successfully, or rejects if any errors were encountered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed563216b33fcb163647214399fa2628c44bf834" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pitch&lt;/code&gt; property of the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; interface gets and sets the pitch at which the utterance will be spoken at.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="955cd6668d691b34b8a6b3a4b8e6999e3ff807b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pixels&lt;/code&gt; parameter now accepts an &lt;code&gt;ArrayBufferView&lt;/code&gt; of type &lt;code&gt;Uint16Array&lt;/code&gt; and &lt;code&gt;Uint32Array&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23485b549758d29a068fdf7df37e5ce07465d24c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;play()&lt;/code&gt; method of the &lt;a href=&quot;../web_animations_api&quot;&gt;Web Animations API&lt;/a&gt;'s &lt;a href=&quot;../animation&quot;&gt;&lt;code&gt;Animation&lt;/code&gt;&lt;/a&gt; Interface starts or resumes playing of an animation. If the animation is finished, calling &lt;code&gt;play()&lt;/code&gt; restarts the animation, playing it from the beginning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b79ea8accdbba066730d888396005ea9925a7dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;playTone()&lt;/code&gt; function's job is to play a tone at the given frequency. This will be used by the handler for events triggering keys on the keyboard to start playing the appropriate notes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444af5b838b74d56a3fef90661be83ffddf8ad59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;playbackRate&lt;/code&gt; property of the &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt; interface Is a &lt;a href=&quot;../audioparam#k-rate&quot;&gt;k-rate&lt;/a&gt;&lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; that defines the speed at which the audio asset will be played.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="051f3bf91bd5dcea5cb4e1c9c7722bd586856185" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;playbackState&lt;/code&gt; property of the &lt;a href=&quot;../mediasession&quot;&gt;&lt;code&gt;MediaSession&lt;/code&gt;&lt;/a&gt; interface indicates whether the current media session is playing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3343dfc900ed26c9f9d5e8e1a8fdc137b8cfe7de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pliCount&lt;/code&gt; property of the &lt;a href=&quot;../rtcrtpstreamstats&quot;&gt;&lt;code&gt;RTCRtpStreamStats&lt;/code&gt;&lt;/a&gt; dictionary states the number of times the stream's receiving end sent a &lt;strong&gt;Picture Loss Indication&lt;/strong&gt; (&lt;strong&gt;PLI&lt;/strong&gt;) packet to the sender. A PLI packet indicates that some amount of encoded video data has been lost for one or more frames.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4834cb16571fd3fda393dae6d36032eb036c8395" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;plugins&lt;/code&gt; read-only property of the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; interface returns an &lt;a href=&quot;../htmlcollection&quot;&gt;&lt;code&gt;HTMLCollection&lt;/code&gt;&lt;/a&gt; object containing one or more &lt;a href=&quot;../htmlembedelement&quot;&gt;&lt;code&gt;HTMLEmbedElement&lt;/code&gt;&lt;/a&gt;s representing the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt;&lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;&lt;/a&gt; elements in the current document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a910c479e0de65de626440ca80cff46b09168dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pname&lt;/code&gt; parameter is a &lt;a href=&quot;../webgl_api/types&quot;&gt;&lt;code&gt;Glenum&lt;/code&gt;&lt;/a&gt; specifying the texture parameter to set. The &lt;code&gt;param&lt;/code&gt; parameter is a &lt;a href=&quot;../webgl_api/types&quot;&gt;&lt;code&gt;GLfloat&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../webgl_api/types&quot;&gt;&lt;code&gt;GLint&lt;/code&gt;&lt;/a&gt; specifying the value for the specified parameter &lt;code&gt;pname&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd91ea54068478e0adb85b9c01ab00ce1f5e962" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pointerLockElement&lt;/code&gt; property provides the element set as the target for mouse events while the pointer is locked. It is &lt;code&gt;null&lt;/code&gt; if lock is pending, pointer is unlocked, or the target is in another document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="120807e13363ad2342bffb843c691d486072b1b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;policy&lt;/code&gt; read-only property of the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; interface returns the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; interface which provides a simple API for introspecting the feature policies applied to a specific document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c7c50ab78a223522686633cacdc6b2b6e5f826" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;policy&lt;/code&gt; read-only property of the &lt;a href=&quot;../htmliframeelement&quot;&gt;&lt;code&gt;HTMLIFrameElement&lt;/code&gt;&lt;/a&gt; interface returns the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Policy&quot;&gt;&lt;code&gt;Policy&lt;/code&gt;&lt;/a&gt; interface which provides a simple API for introspecting the feature policies applied to a specific document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddeb76b7d5be73b1a32b652f65201f2859ba78b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;populateMatrix&lt;/code&gt; method of the &lt;a href=&quot;../orientationsensor&quot;&gt;&lt;code&gt;OrientationSensor&lt;/code&gt;&lt;/a&gt; interface populates the given target matrix with the rotation matrix based on the latest sensor reading. The rotation maxtrix is shown below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b904df2af9b1851ca80ac4596aa4bb72cfcb5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;populateStorage()&lt;/code&gt; function sets three items in local storage &amp;mdash; the background color, font, and image path. It then runs the &lt;code&gt;setStyles()&lt;/code&gt; function to update the page styles, etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f81ec0850c0eb59b639e153d2fbcf7e475bfeb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pose&lt;/code&gt; read-only property of the &lt;a href=&quot;../vrframedata&quot;&gt;&lt;code&gt;VRFrameData&lt;/code&gt;&lt;/a&gt; interface returns the &lt;a href=&quot;../vrpose&quot;&gt;&lt;code&gt;VRPose&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;../vrdisplay&quot;&gt;&lt;code&gt;VRDisplay&lt;/code&gt;&lt;/a&gt; at the current &lt;a href=&quot;timestamp&quot;&gt;&lt;code&gt;VRFrameData.timestamp&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f0419150027a8db46ac37c3ee4ae8ae96a51dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;position&lt;/code&gt; read-only property of the &lt;a href=&quot;../vrpose&quot;&gt;&lt;code&gt;VRPose&lt;/code&gt;&lt;/a&gt; interface returns the position of the &lt;a href=&quot;../vrdisplay&quot;&gt;&lt;code&gt;VRDisplay&lt;/code&gt;&lt;/a&gt; at the current &lt;a href=&quot;timestamp&quot;&gt;&lt;code&gt;VRPose.timestamp&lt;/code&gt;&lt;/a&gt; as a 3D vector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e691c4a6267e93f18374daa901b6561251365f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;position&lt;/code&gt; specified is not a recognised value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27b3fa305e02a898035b5f8065aea83c9d96f5d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;positionX&lt;/code&gt; property of the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; interface specifies the X coordinate of the audio source's position in 3D Cartesian coordinates, corresponding to the &lt;em&gt;horizontal&lt;/em&gt; axis (left-right).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5c2684ecf6042c0a9a8c341a21f4bde98b44ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;positionX&lt;/code&gt; read-only property of the &lt;a href=&quot;../audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; interface is an &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing the x position of the listener in 3D cartesian space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e389d5452891ced7cc2283a1dd29001b329e7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;positionY&lt;/code&gt; property of the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; interface specifies the Y coordinate of the audio source's position in 3D Cartesian coordinates, corresponding to the &lt;em&gt;vertical&lt;/em&gt; axis (top-bottom). The complete vector is defined by the position of the audio source, given as (&lt;a href=&quot;positionx&quot;&gt;&lt;code&gt;positionX&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;positiony&quot;&gt;&lt;code&gt;positionY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;positionz&quot;&gt;&lt;code&gt;positionZ&lt;/code&gt;&lt;/a&gt;), and the orientation of the audio source (that is, the direction in which it's facing), given as (&lt;a href=&quot;orientationx&quot;&gt;&lt;code&gt;orientationX&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;orientationy&quot;&gt;&lt;code&gt;orientationY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;orientationz&quot;&gt;&lt;code&gt;orientationZ&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4613d4daaf8cec40a93ce9d0f9db2068eebea00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;positionY&lt;/code&gt; read-only property of the &lt;a href=&quot;../audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; interface is an &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing the y position of the listener in 3D cartesian space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15cc778aa50dc4201146b3837aec996e251b091e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;positionZ&lt;/code&gt; property of the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; interface specifies the Z coordinate of the audio source's position in 3D Cartesian coordinates, corresponding to the &lt;em&gt;depth&lt;/em&gt; axis (behind-in front of the listener). The complete vector is defined by the position of the audio source, given as (&lt;a href=&quot;positionx&quot;&gt;&lt;code&gt;positionX&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;positiony&quot;&gt;&lt;code&gt;positionY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;positionz&quot;&gt;&lt;code&gt;positionZ&lt;/code&gt;&lt;/a&gt;), and the orientation of the audio source (that is, the direction in which it's facing), given as (&lt;a href=&quot;orientationx&quot;&gt;&lt;code&gt;orientationX&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;orientationy&quot;&gt;&lt;code&gt;orientationY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;orientationz&quot;&gt;&lt;code&gt;orientationZ&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ff30f6cddfe0a9c2a5637a8ab5750fc0303df1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;positionZ&lt;/code&gt; read-only property of the &lt;a href=&quot;../audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; interface is an &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing the z position of the listener in 3D cartesian space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c7eb5e2612692a1f0aa7e719db3454f893d876" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;postalCode&lt;/code&gt; read-only property of the &lt;a href=&quot;../paymentaddress&quot;&gt;&lt;code&gt;PaymentAddress&lt;/code&gt;&lt;/a&gt; interface returns a string containing a code used by a jurisdiction for mail routing, for example, the &lt;a href=&quot;https://en.wikipedia.org/wiki/ZIP%20Code&quot;&gt;ZIP Code&lt;/a&gt; in the United States or the &lt;a href=&quot;https://en.wikipedia.org/wiki/Postal%20Index%20Number&quot;&gt;Postal Index Number&lt;/a&gt; (PIN code) in India.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c6cbda93a27d2b8df156ceff1e0a8f35ba68db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prepend()&lt;/code&gt; method is not scoped into the &lt;code&gt;with&lt;/code&gt; statement. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/unscopables&quot;&gt;&lt;code&gt;Symbol.unscopables&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dad1deaafd78bfca2946943f775e88bda9f91896" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;preventSilentAccess()&lt;/code&gt; method of the &lt;a href=&quot;../credentialscontainer&quot;&gt;&lt;code&gt;CredentialsContainer&lt;/code&gt;&lt;/a&gt; interface sets a flag that specifies whether automatic log in is allowed for future visits to the current origin, then returns an empty &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;. For example, you might call this, after a user signs out of a website to ensure that he/she isn't automatically signed in on the next site visit. Mediation varies by origin, and is an added check point of browser stored credentials, informing a user of an account login status. This method is typically called after a user signs out of a website, ensuring this user's login information is not automatically passed on the next site visit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50d1ec83ce09953962bcf45b0e4f02f82ea195b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;primaryKey&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbcursor&quot;&gt;&lt;code&gt;IDBCursor&lt;/code&gt;&lt;/a&gt; interface returns the cursor's current effective key. If the cursor is currently being iterated or has iterated outside its range, this is set to undefined. The cursor's primary key can be any data type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e36b848bba6cd4c9c8df2293af040fad9a4dec9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;productID&lt;/code&gt; read only property of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface the manufacturer-defined code that identifies a USB device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d559f831a987f1257c6bfdc2e7a3d29769eb90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;productName&lt;/code&gt; read only property of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface the manufacturer-defined name that identifies a USB device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac66018627a7261c73a75be06b29efd11f357f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;program&lt;/code&gt; parameter doesn't correspond to a GLSL program generated by WebGL, or the specified program hasn't been linked successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4843fd5ff1882ad38d23df290e5dac8d7a5d80b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;program&lt;/code&gt; parameter is not a value or object generated by WebGL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0e2af78e01b64f036a04d64cbd3327100ca142" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prompt()&lt;/code&gt; method of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BeforeInstallPromptEvent&quot;&gt;&lt;code&gt;BeforeInstallPromptEvent&lt;/code&gt;&lt;/a&gt; interface allows a developer to show the install prompt at a time of their own choosing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60159031c75ab2febd207ffe9abd4ebd82d0331a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;protocol&lt;/code&gt; property's value is set when the &lt;a href=&quot;rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate()&lt;/code&gt;&lt;/a&gt; constructor is used. The value is automatically extracted from the &lt;a href=&quot;../rtcicecandidateinit/candidate&quot;&gt;&lt;code&gt;candidate&lt;/code&gt;&lt;/a&gt; a-line, if it's formatted properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b34141256747d32e773ece17256e6fb76c9d51a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provider&lt;/code&gt; property of the &lt;a href=&quot;../federatedcredential&quot;&gt;&lt;code&gt;FederatedCredential&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; containing a credential's federated identity provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0efced652ea3be65d45633e2e958d386363de4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pushManager&lt;/code&gt; property of the &lt;a href=&quot;../serviceworkerregistration&quot;&gt;&lt;code&gt;ServiceWorkerRegistration&lt;/code&gt;&lt;/a&gt; interface returns a reference to the &lt;a href=&quot;../pushmanager&quot;&gt;&lt;code&gt;PushManager&lt;/code&gt;&lt;/a&gt; interface for managing push subscriptions; this includes support for subscribing, getting an active subscription, and accessing push permission status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd04a62807e5064f6db27b47c1be8a0c38543238" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;put()&lt;/code&gt; method of the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; interface allows key/value pairs to be added to the current &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="357fe9317b030021b6d387dd4026b42af4fbfa3d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;put()&lt;/code&gt; method of the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; interface updates a given record in a database, or inserts a new record if the given item does not already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e985175877120abd633250cd411e8e3f33a282" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;qpSum&lt;/code&gt; property of the &lt;a href=&quot;../rtcrtpstreamstats&quot;&gt;&lt;code&gt;RTCRtpStreamStats&lt;/code&gt;&lt;/a&gt; dictionary is a value generated by adding the &lt;strong&gt;Quantization Parameter&lt;/strong&gt; (&lt;strong&gt;QP&lt;/strong&gt;) values for every frame sent or received to date on the video track corresponding to this &lt;code&gt;RTCRtpStreamStats&lt;/code&gt; object. In general, the higher this number is, the more heavily compressed the video data is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69fa7f18a264990405e606de6f522eac9d4d6dbd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;quaternion&lt;/code&gt; read-only property of the &lt;a href=&quot;../orientationsensor&quot;&gt;&lt;code&gt;OrientationSensor&lt;/code&gt;&lt;/a&gt; interface returns a four element &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array&quot;&gt;&lt;code&gt;Array&lt;/code&gt;&lt;/a&gt; whose elements contain the components of the unit quaternion representing the device's orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572aeae333737795da31397d85a327cb48fe1ed6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query()&lt;/code&gt; method of the &lt;a href=&quot;../lockmanager&quot;&gt;&lt;code&gt;LockManager&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves with an object that contains information about held and pending locks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ec4600b762a405827e5e7629dbe8b31e71f83b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queryInfo()&lt;/code&gt; property of the &lt;a href=&quot;../storagequota&quot;&gt;&lt;code&gt;StorageQuota&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/StorageInfo&quot;&gt;&lt;code&gt;StorageInfo&lt;/code&gt;&lt;/a&gt; object containting the current data usage and available quota information for the application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14ef170b13fd21b3a3c2a8fcbb4a817c4ca50a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rate&lt;/code&gt; property of the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; interface gets and sets the speed at which the utterance will be spoken at.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e2ba2f174ae2d33432ace08dc30deb4b8ddeb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ratio&lt;/code&gt; property of the &lt;a href=&quot;../dynamicscompressornode&quot;&gt;&lt;code&gt;DynamicsCompressorNode&lt;/code&gt;&lt;/a&gt; interface Is a &lt;a href=&quot;../audioparam#k-rate&quot;&gt;k-rate&lt;/a&gt;&lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing the amount of change, in dB, needed in the input for a 1 dB change in the output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22ad1cf649f616b90d1fd3c13493c8be410b68e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ratio&lt;/code&gt; property's default value is &lt;code&gt;12&lt;/code&gt; and it can be set between &lt;code&gt;1&lt;/code&gt; and &lt;code&gt;20&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95976081410da53738e905bc458c7cf24fbf3091" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read()&lt;/code&gt; method of the &lt;a href=&quot;../clipboard&quot;&gt;&lt;code&gt;Clipboard&lt;/code&gt;&lt;/a&gt; interface requests a copy of the clipboard's contents, delivering the data to the returned &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; when the promise is resolved. Unlike &lt;a href=&quot;readtext&quot;&gt;&lt;code&gt;readText()&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;read()&lt;/code&gt; method can return arbitrary data, such as images.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fc2855395fb5fba90f9ee86495308612837a8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read()&lt;/code&gt; method of the &lt;a href=&quot;../readablestreambyobreader&quot;&gt;&lt;code&gt;ReadableStreamBYOBReader&lt;/code&gt;&lt;/a&gt; interface returns a promise providing access to the next chunk in the byte stream's internal queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858c0df15027c05e522c403ec71980d60bc92ad9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read()&lt;/code&gt; method of the &lt;a href=&quot;../readablestreamdefaultreader&quot;&gt;&lt;code&gt;ReadableStreamDefaultReader&lt;/code&gt;&lt;/a&gt; interface returns a promise providing access to the next chunk in the stream's internal queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c573a8186cf730a5a2bc029637180e3834733a99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readAsBinaryString&lt;/code&gt; method is used to start reading the contents of the specified &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;. When the read operation is finished, the &lt;a href=&quot;readystate&quot;&gt;&lt;code&gt;readyState&lt;/code&gt;&lt;/a&gt; becomes &lt;code&gt;DONE&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/loadend&quot;&gt;loadend&lt;/a&gt;&lt;/code&gt; is triggered. At that time, the &lt;a href=&quot;result&quot;&gt;&lt;code&gt;result&lt;/code&gt;&lt;/a&gt; attribute contains the raw binary data from the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c678ef20311ca57bb28a73b875b9db99a50227" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readAsDataURL&lt;/code&gt; method is used to read the contents of the specified &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;. When the read operation is finished, the &lt;a href=&quot;readystate&quot;&gt;&lt;code&gt;readyState&lt;/code&gt;&lt;/a&gt; becomes &lt;code&gt;DONE&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/loadend&quot;&gt;loadend&lt;/a&gt;&lt;/code&gt; is triggered. At that time, the &lt;a href=&quot;result&quot;&gt;&lt;code&gt;result&lt;/code&gt;&lt;/a&gt; attribute contains the data as a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs&quot;&gt;data: URL&lt;/a&gt; representing the file's data as a base64 encoded string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea11419397974276f3067b6aca91400162dd44c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readAsText&lt;/code&gt; method is used to read the contents of the specified &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;. When the read operation is complete, the &lt;a href=&quot;readystate&quot;&gt;&lt;code&gt;readyState&lt;/code&gt;&lt;/a&gt; is changed to &lt;code&gt;DONE&lt;/code&gt;, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/loadend&quot;&gt;loadend&lt;/a&gt;&lt;/code&gt; event is triggered, and the &lt;a href=&quot;result&quot;&gt;&lt;code&gt;result&lt;/code&gt;&lt;/a&gt; attribute contains the contents of the file as a text string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6b117a43fc0d76c004251eb37164b5a459bc31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readable&lt;/code&gt; side of the &lt;code&gt;transformStream&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ec1d31b9da4ed187bf27d428e43bccd1c86596f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ready&lt;/code&gt; getter property of the &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves when the desired size of the stream's internal queue transitions from non-positive to positive, signaling that it is no longer applying backpressure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bbc5aae9f170cd1b44b082a21bee59cf298778d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ready&lt;/code&gt; read-only property of the &lt;a href=&quot;../serviceworkercontainer&quot;&gt;&lt;code&gt;ServiceWorkerContainer&lt;/code&gt;&lt;/a&gt; interface provides a way of delaying code execution until a service worker is active. It returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that will never reject, and which waits indefinitely until the &lt;a href=&quot;../serviceworkerregistration&quot;&gt;&lt;code&gt;ServiceWorkerRegistration&lt;/code&gt;&lt;/a&gt; associated with the current page has an &lt;a href=&quot;../serviceworkerregistration/active&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt; worker. Once that condition is met, it resolves with the &lt;a href=&quot;../serviceworkerregistration&quot;&gt;&lt;code&gt;ServiceWorkerRegistration&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcba0932616807b4c350b50b007467b64f1da4e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ready&lt;/code&gt; readonly property of the &lt;a href=&quot;../fontfaceset&quot;&gt;&lt;code&gt;FontFaceSet&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to the given &lt;a href=&quot;../fontfaceset&quot;&gt;&lt;code&gt;FontFaceSet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54583540466b07cb52724d46d9f9c68dcc65b84" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;readyState&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; interface returns the state of the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a48241f99c65c01205adb2419db4fce608b1c5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reason&lt;/code&gt; read-only property of the &lt;a href=&quot;../vrdisplayevent&quot;&gt;&lt;code&gt;VRDisplayEvent&lt;/code&gt;&lt;/a&gt; interface returns a human-readable reason why the event was fired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5779752ea6ab3fa19471072cfbda0613e434ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reason&lt;/code&gt; string is too long or contains unpaired surrogates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e325c52149f40b9e17fabd87d49bf732800b634f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;recommendedFieldOfView&lt;/code&gt; read-only property of the &lt;a href=&quot;../vreyeparameters&quot;&gt;&lt;code&gt;VREyeParameters&lt;/code&gt;&lt;/a&gt; interface describes the recommended field of view for the current eye &amp;mdash; ideally based on user calibration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c53532795dd0e6055694ab75a4c21e4d9fa7dad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rect()&lt;/code&gt; method creates a rectangular path whose starting point is at &lt;code&gt;(x, y)&lt;/code&gt; and whose size is specified by &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78381f526fcd3ce4955045158c49c50391a6209a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redEyeReduction&lt;/code&gt; read-only property of the &lt;a href=&quot;../photocapabilities&quot;&gt;&lt;code&gt;PhotoCapabilities&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RedEyeReduction&quot;&gt;&lt;code&gt;RedEyeReduction&lt;/code&gt;&lt;/a&gt; object indicating the red-eye reduction capability of the source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de283322d10662f4ddc07186a1ed65e34aeb379" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redirect()&lt;/code&gt; method of the &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; interface returns a &lt;code&gt;Response&lt;/code&gt; resulting in a redirect to the specified URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ba881b12d4d08196e5e70c40d2b4dc7772475f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redirect&lt;/code&gt; read-only property of the &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; interface contains the mode for how redirects are handled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5005a12c843dbc48ec0fc5673d9ceac9a9e7f870" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redirectCount&lt;/code&gt; property returns a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; representing the number of redirects since the last non-redirect navigation under the current browsing context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d04d910cdd265de91752f5c13934be020d2c10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redirectEnd&lt;/code&gt; read-only property returns a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; immediately after receiving the last byte of the response of the last redirect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34788614846ec805b23dddea96b2bd8ac9aa4e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redirectStart&lt;/code&gt; read-only property returns a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; representing the start time of the fetch which that initiates the redirect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4becc7d6cdcf6320c3d30b57caa66e31cb9c5737" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reduction&lt;/code&gt; read-only property of the &lt;a href=&quot;../dynamicscompressornode&quot;&gt;&lt;code&gt;DynamicsCompressorNode&lt;/code&gt;&lt;/a&gt; interface is a float representing the amount of gain reduction currently applied by the compressor to the signal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b32243078c05ed345255f7f7b5e94ac9c02f637" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;refDistance&lt;/code&gt; property of the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; interface is a double value representing the reference distance for reducing volume as the audio source moves further from the listener &amp;ndash; i.e. the distance at which the volume reduction starts taking effect. This value is used by all distance models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb7c5d97dc1ebc124017088cf08ebd9f63ad250" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;refDistance&lt;/code&gt; property's default value is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="409f65093fe4e0120e164f04050cc6fd96380b0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;refDistance&lt;/code&gt;, &lt;code&gt;maxDistance&lt;/code&gt;, or &lt;code&gt;rolloffFactor&lt;/code&gt; properties have been given a value that is outside the accepted range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f5166fb47886a200ed8e7c9969c42248c7f3d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;referrer&lt;/code&gt; read-only property of the &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; interface is set by the user agent to be the referrer of the Request. (e.g., &lt;code&gt;client&lt;/code&gt;, &lt;code&gt;no-referrer&lt;/code&gt;, or a URL.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a288991b7233a96200ede595994f7662ce6010" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;referrerPolicy&lt;/code&gt; read-only property of the &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; interface returns the referrer policy, which governs what referrer information, sent in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer&quot;&gt;&lt;code&gt;Referer&lt;/code&gt;&lt;/a&gt; header, should be included with the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e6fba20a492e2a6b21813d64686a53872cef43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;refresh()&lt;/code&gt; function handles applying the rotation and position by using an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform&quot;&gt;SVG transform&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a32c2fc73207fd5ebab5f0abf69845b739e8ce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;regionCode&lt;/code&gt; read-only attribute of the &lt;a href=&quot;../paymentaddress&quot;&gt;&lt;code&gt;PaymentAddress&lt;/code&gt;&lt;/a&gt; interface returns a one-, two-, or three-alphanumeric code (&lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;) representing the region of the address (e.g., &quot;CA&quot; for California, or &quot;11&quot; for Lisbon, Portugal).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f220facc333bc9df043401c1f93216d48720b6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;register()&lt;/code&gt; method of the &lt;a href=&quot;../serviceworkercontainer&quot;&gt;&lt;code&gt;ServiceWorkerContainer&lt;/code&gt;&lt;/a&gt; interface creates or updates a &lt;a href=&quot;../serviceworkerregistration&quot;&gt;&lt;code&gt;ServiceWorkerRegistration&lt;/code&gt;&lt;/a&gt; for the given &lt;code&gt;scriptURL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df4ec268a89a27cd161e9c4829ceae71bcaa80b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;registration&lt;/code&gt; read-only property of the &lt;a href=&quot;../serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; interface returns a reference to the &lt;a href=&quot;../serviceworkerregistration&quot;&gt;&lt;code&gt;ServiceWorkerRegistration&lt;/code&gt;&lt;/a&gt; object, which represents the service worker's registration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3decebdbb5d0e076d727307b01f3578bab752445" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;relatedAddress&lt;/code&gt; field's value is set when the &lt;a href=&quot;rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate()&lt;/code&gt;&lt;/a&gt; constructor is used. You can't specify the value of &lt;code&gt;relatedAddress&lt;/code&gt; in the options object, but the address is automatically extracted from the &lt;a href=&quot;../rtcicecandidateinit/candidate&quot;&gt;&lt;code&gt;candidate&lt;/code&gt;&lt;/a&gt; a-line, if it's formatted properly, being taken from its &lt;code&gt;rel-address&lt;/code&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d62967aa4d4102ef62a8f8251273bf8cc13401c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;relatedPort&lt;/code&gt; field's value is set when the &lt;a href=&quot;rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate()&lt;/code&gt;&lt;/a&gt; constructor is used. You can't specify the value of &lt;code&gt;relatedPort&lt;/code&gt; in the options object, but the address is automatically extracted from the &lt;a href=&quot;../rtcicecandidateinit/candidate&quot;&gt;&lt;code&gt;candidate&lt;/code&gt;&lt;/a&gt; a-line, if it's formatted properly, being taken from its &lt;code&gt;rel-port&lt;/code&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84ff04804ce31048ffb0417c12d45c77cf26c70d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;release&lt;/code&gt; property of the &lt;a href=&quot;../dynamicscompressornode&quot;&gt;&lt;code&gt;DynamicsCompressorNode&lt;/code&gt;&lt;/a&gt; interface Is a &lt;a href=&quot;../audioparam#k-rate&quot;&gt;k-rate&lt;/a&gt;&lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing the amount of time, in seconds, required to increase the gain by 10 dB. It defines how quick the signal is adapted when its volume is reduced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c6f4beff764f31de10fd79cff8be9fb6a60ed3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;release&lt;/code&gt; property's default value is &lt;code&gt;0.25&lt;/code&gt; and it can be set between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b14bb93320f628ce6c464f1951c4ec26e194dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;releaseInterface()&lt;/code&gt; method of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/promise&quot;&gt;&lt;code&gt;promise&lt;/code&gt;&lt;/a&gt; that resolves when a cliamed interface is released from exclusive access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d822891bf504c16d44c3f7b67817331376c7569" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;releaseLock()&lt;/code&gt; method of the &lt;a href=&quot;../readablestreambyobreader&quot;&gt;&lt;code&gt;ReadableStreamBYOBReader&lt;/code&gt;&lt;/a&gt; interface releases the reader's lock on the stream. After the lock is released, the reader is no longer active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49bb26bf16a2dd761bf89071b13a1e526a1bd22b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;releaseLock()&lt;/code&gt; method of the &lt;a href=&quot;../readablestreamdefaultreader&quot;&gt;&lt;code&gt;ReadableStreamDefaultReader&lt;/code&gt;&lt;/a&gt; interface releases the reader's lock on the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19794b7f79e5dc9920157c46a3669ce0f6f9bbfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;releaseLock()&lt;/code&gt; method of the &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt; interface releases the writer's lock on the corresponding stream. After the lock is released, the writer is no longer active. If the associated stream is errored when the lock is released, the writer will appear errored in the same way from now on; otherwise, the writer will appear closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a3599df2cc7309b33a40d58624798f7de89321" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remove()&lt;/code&gt; method is not scoped into the &lt;code&gt;with&lt;/code&gt; statement. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/unscopables&quot;&gt;&lt;code&gt;Symbol.unscopables&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d177d408eb91ef98f5f5efb7a6a782f491fe7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;removeItem()&lt;/code&gt; method of the &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; interface, when passed a key name, will remove that key from the storage if it exists. If there is no item associated with the given key, this method will do nothing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45ea02cefbc123d073c80940dcb0ec38f392e399" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;removetrack&lt;/code&gt; event does &lt;em&gt;not&lt;/em&gt; get fired when JavaScript code explicitly removes tracks from the stream (by calling &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/removeTrack&quot;&gt;&lt;code&gt;removeTrack()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf9b38cda23da680a9a403500661115519971d6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;renderHeight&lt;/code&gt; read-only property of the &lt;a href=&quot;../vreyeparameters&quot;&gt;&lt;code&gt;VREyeParameters&lt;/code&gt;&lt;/a&gt; interface describes the recommended render target height of each eye viewport, in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0cf1f0f17dcbf647320919785cfd1d97ca3ca38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;renderWidth&lt;/code&gt; read-only property of the &lt;a href=&quot;../vreyeparameters&quot;&gt;&lt;code&gt;VREyeParameters&lt;/code&gt;&lt;/a&gt; interface describes the recommended render target width of each eye viewport, in pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16224cb2a1cba072f53316e77a579378dc828267" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;renotify&lt;/code&gt; read-only property of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; interface specifies whether the user should be notified after a new notification replaces an old one, as specified in the &lt;code&gt;renotify&lt;/code&gt; option of the &lt;a href=&quot;notification&quot;&gt;&lt;code&gt;Notification()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18337811de335a68777642d6c636866a5eb1242a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replaceWith()&lt;/code&gt; method is not scoped into the &lt;code&gt;with&lt;/code&gt; statement. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/unscopables&quot;&gt;&lt;code&gt;Symbol.unscopables&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4100d245662e9a71ff784e5725a7edd2ac705a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reportGamepads()&lt;/code&gt; function looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1296005f7866a96f5797daa528257260a674baac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;request()&lt;/code&gt; method of the &lt;a href=&quot;../lockmanager&quot;&gt;&lt;code&gt;LockManager&lt;/code&gt;&lt;/a&gt; interface requests a &lt;a href=&quot;../lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; object with parameters specifying its name and characteristics. The requested &lt;code&gt;Lock&lt;/code&gt; is passed to a callback, while the function itself returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined&quot;&gt;&lt;code&gt;undefined&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9dd281fd65512a792107119d9ac28000f81cc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;request&lt;/code&gt; read-only property of the &lt;a href=&quot;../fetchevent&quot;&gt;&lt;code&gt;FetchEvent&lt;/code&gt;&lt;/a&gt; interface returns the &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; that triggered the event handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9c63dea8dbef30f876209f6bc3cb5c6171a83f6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;requestDevice()&lt;/code&gt; method of the &lt;a href=&quot;../usb&quot;&gt;&lt;code&gt;USB&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves with an instance of &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; if the specified device is found. Calling this function triggers the user agent's pairing flow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f2548ced590f1b7083b1ba9fed6614cdc8e9f99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;requestId&lt;/code&gt; read-only property of the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; interface rreturns the free-form identifier supplied by the &lt;code&gt;PaymentResponse()&lt;/code&gt; constructor by details.id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb150304714b1977740add99fe23d2e3467eed97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;requestPermission()&lt;/code&gt; method of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; interface requests permission from the user for the current origin to display notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb2da1bce08bfdfdad01086e3a4c973675e0f6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;requestPersistentQuota()&lt;/code&gt; property of the &lt;a href=&quot;../storagequota&quot;&gt;&lt;code&gt;StorageQuota&lt;/code&gt;&lt;/a&gt; interface requests persistent storage for the requesting application and returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; to an instance of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/StorageInfo&quot;&gt;&lt;code&gt;StorageInfo&lt;/code&gt;&lt;/a&gt;. There is no guarantee that the requested space will be granted by the user agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36697956608ab33959c8f556c8cdada5ae0c0eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;requestStart&lt;/code&gt; read-only property returns a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; of the time immediately before the browser starts requesting the resource from the server, cache, or local resource. If the transport connection fails and the browser retires the request, the value returned will be the start of the retry request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6a880b2a12891c61e5c3fecd08b9db95d1fd56" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;requireInteraction&lt;/code&gt; read-only property of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; indicating that a notification should remain active until the user clicks or dismisses it, rather than closing automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c301ce1e7cb4d0d9ee3d4664e0485e38d75bc7c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reserve()&lt;/code&gt; property of the &lt;a href=&quot;../budgetservice&quot;&gt;&lt;code&gt;BudgetService&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to a boolean indicating whether the requested budget operation can be reserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5515b7927e9c8d47718895fd8b4ffa5faf489b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;reset()&lt;/code&gt; method of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface eturns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/promise&quot;&gt;&lt;code&gt;promise&lt;/code&gt;&lt;/a&gt; that resolves when the device is reset and all app operations canceled and their promises rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6790889a2b5686de8784637f9cfb830f12aa365a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resetSensor()&lt;/code&gt; method of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay&quot;&gt;&lt;code&gt;VRDevice&lt;/code&gt;&lt;/a&gt; interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974f7df35219c16356ebc1104deaec50b8ecdb31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;respondWith()&lt;/code&gt; method of &lt;a href=&quot;../fetchevent&quot;&gt;&lt;code&gt;FetchEvent&lt;/code&gt;&lt;/a&gt; prevents the browser's default fetch handling, and allows you to provide a promise for a &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec1c0b64065f9868f5a1b74c956c29d91675e70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;respondWith&lt;/code&gt; property of the &lt;a href=&quot;../paymentrequestevent&quot;&gt;&lt;code&gt;PaymentRequestEvent&lt;/code&gt;&lt;/a&gt; interface prevents the default event handling and allows you to provide a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; for a &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; object yourself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a9bd4bec43230861b27c434d60e85513f54a2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;respondWithNewView()&lt;/code&gt; method of the &lt;a href=&quot;../readablestreambyobrequest&quot;&gt;&lt;code&gt;ReadableStreamBYOBRequest&lt;/code&gt;&lt;/a&gt; interface xxx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="924686393be38c9e65f648d4072a3e8a0b148cc3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; is a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; object containing the binary data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a686debb11a3c44c1f478ac2be98bdb113eaae29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; is a &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; object containing the binary data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1eb6e75878b2a17fc86a2248fe47e338960d7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; is a JavaScript object created by parsing the contents of received data as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/JSON&quot;&gt;JSON&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e81e6b3871fa6b46a389fcc7a98064e7ee33b7c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTML&quot;&gt;HTML&lt;/a&gt;&lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/XML&quot;&gt;XML&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLDocument&quot;&gt;&lt;code&gt;XMLDocument&lt;/code&gt;&lt;/a&gt;, as appropriate based on the MIME type of the received data. See &lt;a href=&quot;html_in_xmlhttprequest&quot;&gt;HTML in XMLHttpRequest&lt;/a&gt; to learn more about using XHR to fetch HTML content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9b60a676973b225c9a12922f976d18061ba296" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTML&quot;&gt;HTML&lt;/a&gt;&lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/XML&quot;&gt;XML&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLDocument&quot;&gt;&lt;code&gt;XMLDocument&lt;/code&gt;&lt;/a&gt;, as appropriate based on the MIME type of the received data. See &lt;a href=&quot;xmlhttprequest/html_in_xmlhttprequest&quot;&gt;HTML in XMLHttpRequest&lt;/a&gt; to learn more about using XHR to fetch HTML content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6726dfa6c48fcb5e10e77804884281c66dfede2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; is part of a streaming download; this response type is only allowed for download requests, and is only supported by Internet Explorer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101a43393c184222d1c59eabb475f25bda9c4ce6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; is text in a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35fcb95c728e78d99a4639d281a56c1d7fae2cb3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response&lt;/code&gt; is text in a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002d0731eb9ca8a40b396f8096c054d232b3d3b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;responseEnd&lt;/code&gt; read-only property returns a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; immediately after the browser receives the last byte of the resource or immediately before the transport connection is closed, whichever comes first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f25f23defe73693c71520868951beab7152466" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;responseStart&lt;/code&gt; read-only property returns a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; immediately after the browser receives the first byte of the response from the server, cache, or local resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52c911e97c61caff84167cf8a824d6097d73169" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;result&lt;/code&gt; contains the raw binary data from the file in a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1dd0ba355d6736f59397872657f51bc5190885" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;result&lt;/code&gt; is a JavaScript &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;&lt;/code&gt; containing binary data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b541c0ac3aa48ba9f440eac85a1d95e04260d2ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;result&lt;/code&gt; is a string with a &lt;code&gt;data:&lt;/code&gt; URL representing the file's data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fac37fe0c534dcd3d48376cd786be390035a638" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;result&lt;/code&gt; is text in a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fc73cae8449133c055936cfbe96c48a0a7fafe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;result&lt;/code&gt; of a request generated from a call to &lt;code&gt;add()&lt;/code&gt; is the key of the value that was added. So in this case, it should equal the &lt;code&gt;ssn&lt;/code&gt; property of the object that was added, since the object store uses the &lt;code&gt;ssn&lt;/code&gt; property for the key path. Note that the &lt;code&gt;add()&lt;/code&gt; function requires that no object already be in the database with the same key. If you're trying to modify an existing entry, or you don't care if one exists already, you can use the &lt;code&gt;put()&lt;/code&gt; function, as shown below in the &lt;a href=&quot;#Updating_an_entry_in_the_database&quot;&gt;Updating an entry in the database&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2044099be7a158a36dd1726e639a035cee1588" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;result&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; interface returns the result of the request. If the request failed and the result is not available, an &lt;code&gt;InvalidStateError&lt;/code&gt; exception is thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d024388b7a3ce4f3e8e7942e3385c254f6c0b883" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resume()&lt;/code&gt; method of the &lt;a href=&quot;../baseaudiocontext&quot;&gt;&lt;code&gt;BaseAudioContext&lt;/code&gt;&lt;/a&gt; Interface resumes the progression of time in an audio context that has previously been suspended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="153b5a6a9f2020051da051c355443ac1f599ac6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resume()&lt;/code&gt; method of the &lt;a href=&quot;../offlineaudiocontext&quot;&gt;&lt;code&gt;OfflineAudioContext&lt;/code&gt;&lt;/a&gt; interface resumes the progression of time in an audio context that has been suspended. The promise resolves immediately because the &lt;code&gt;OfflineAudioContext&lt;/code&gt; does not require the audio hardware. If the context is not currently suspended or the rendering has not started, the promise is rejected with &lt;code&gt;InvalidStateError&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d3f68776873d55af5ab6509a45b522db0ee2c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resume&lt;/code&gt; event is thrown as a result of the &lt;a href=&quot;resume&quot;&gt;&lt;code&gt;MediaRecorder.resume()&lt;/code&gt;&lt;/a&gt; method being invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9584b8fdd2a20ca8bb1776637ca7656809171930" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;returnValue&lt;/code&gt; property of the &lt;a href=&quot;../htmldialogelement&quot;&gt;&lt;code&gt;HTMLDialogElement&lt;/code&gt;&lt;/a&gt; interface gets or sets the return value for the &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;, usually to indicate which button the user pressed to close it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8011a02a2c9bc39f894a420e4dc5c4e39d52bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rgba()&lt;/code&gt; function is similar to the &lt;code&gt;rgb()&lt;/code&gt; function but it has one extra parameter. The last parameter sets the transparency value of this particular color. The valid range is again between 0.0 (fully transparent) and 1.0 (fully opaque).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c128fc2b88d2b6fcca1acfc06ae31a76635405c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rightDegrees&lt;/code&gt; read-only property of the &lt;a href=&quot;../vrfieldofview&quot;&gt;&lt;code&gt;VRFieldOfView&lt;/code&gt;&lt;/a&gt; interface returns the number of degrees to the right that the field of view extends in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a6908f26601c392fa2b976b539f7cab4f7cdd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rightProjectionMatrix&lt;/code&gt; read-only property of the &lt;a href=&quot;../vrframedata&quot;&gt;&lt;code&gt;VRFrameData&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt; representing a 4x4 matrix that describes the projection to be used for the right eye&amp;rsquo;s rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45a3325033db334289e5f1c46868170a290fab2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rightViewMatrix&lt;/code&gt; read-only property of the &lt;a href=&quot;../vrframedata&quot;&gt;&lt;code&gt;VRFrameData&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt; representing a 4x4 matrix that describes the view transform to be used for the right eye&amp;rsquo;s rendering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6f298cb625f32fa3f09666912fb9adf00bd032" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rolloffFactor&lt;/code&gt; property of the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; interface is a double value describing how quickly the volume is reduced as the source moves away from the listener. This value is used by all distance models.The &lt;code&gt;rolloffFactor&lt;/code&gt; property's default value is &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee19f7b2f43ecbfbcb27f379a4d0ed0edc8b4b85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rotationRates&lt;/code&gt; property is a read only object describing the rotation rates of the device around each of its axes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c2ba7f4cbf6b514593d63b82f3a1d78c9bfa989" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sampleRate&lt;/code&gt; property of the &lt;a href=&quot;../audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt; interface returns a float representing the sample rate, in samples per second, of the PCM data stored in the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132fa75d759daa5449de0706f8176703aab1bec2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sampleRate&lt;/code&gt; property of the &lt;a href=&quot;../baseaudiocontext&quot;&gt;&lt;code&gt;BaseAudioContext&lt;/code&gt;&lt;/a&gt; interface returns a floating point number representing the sample rate, in samples per second, used by all nodes in this audio context. This limitation means that sample-rate converters are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7d06fb655c7ff839e475a97336fc9be7173be9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scale&lt;/code&gt; read-only property of the &lt;a href=&quot;../visualviewport&quot;&gt;&lt;code&gt;VisualViewport&lt;/code&gt;&lt;/a&gt; interface returns the pinch-zoom scaling factor applied to the visual viewport.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b82e92d96287b36559c41008eda78126979b9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scope&lt;/code&gt; parameter is optional, and can be used to specify the subset of your content that you want the service worker to control. In this case, we have specified '&lt;code&gt;/sw-test/'&lt;/code&gt;, which means all content under the app's origin. If you leave it out, it will default to this value anyway, but we specified it here for illustration purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41fff1881a74b5e4d3fd96e56cf3748805181d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;screenX&lt;/code&gt; read-only property of the &lt;a href=&quot;../mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt; property provides the horizontal coordinate (offset) of the mouse pointer in global (screen) coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5ab7551d97033f52ca5b553a23cbbfd2be1a15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;screenY&lt;/code&gt; read-only property of the &lt;a href=&quot;../mouseevent&quot;&gt;&lt;code&gt;MouseEvent&lt;/code&gt;&lt;/a&gt; interface provides the vertical coordinate (offset) of the mouse pointer in global (screen) coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178d4c85443933c286c6b5ebf44af3649a16bd58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scripts&lt;/code&gt; property of the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; interface returns a list of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; elements in the document. The returned object is an &lt;a href=&quot;../htmlcollection&quot;&gt;&lt;code&gt;HTMLCollection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0b8217b0342a051ce172fd1aa28ce5c25c9253" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scroll()&lt;/code&gt; method of the &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; interface scrolls the element to a particular set of coordinates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06dbb7f93726bc83ba98f0ac38923c79c82ba534" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scroll&lt;/code&gt; event is raised when the user scrolls the contents of an element. &lt;code&gt;Element.onscroll&lt;/code&gt; is equivalent to &lt;code&gt;element.addEventListener(&quot;scroll&quot; ... )&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcef705b44cfd27a5d5267ef071afcbadba653c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scrollBy()&lt;/code&gt; method of the &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; interface scrolls an element by the given amount.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd801e67f71b85ef5619164fbc6fe4dae4ac33b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scrollHeight&lt;/code&gt; value is equal to the minimum height the element would require in order to fit all the content in the viewport without using a vertical scrollbar. The height is measured in the same way as &lt;a href=&quot;clientheight&quot;&gt;&lt;code&gt;clientHeight&lt;/code&gt;&lt;/a&gt;: it includes the element's padding, but not its border, margin or horizontal scrollbar (if present). It can also include the height of pseudo-elements such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/::before&quot;&gt;&lt;code&gt;::before&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/::after&quot;&gt;&lt;code&gt;::after&lt;/code&gt;&lt;/a&gt;. If the element's content can fit without a need for vertical scrollbar, its &lt;code&gt;scrollHeight&lt;/code&gt; is equal to &lt;a href=&quot;clientheight&quot;&gt;&lt;code&gt;clientHeight&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="879fb33f85980b7f1680a35a6c2795febebd480a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scrollWidth&lt;/code&gt; value is equal to the minimum width the element would require in order to fit all the content in the viewport without using a horizontal scrollbar. The width is measured in the same way as &lt;a href=&quot;clientwidth&quot;&gt;&lt;code&gt;clientWidth&lt;/code&gt;&lt;/a&gt;: it includes the element's padding, but not its border, margin or vertical scrollbar (if present). It can also include the width of pseudo-elements such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/::before&quot;&gt;&lt;code&gt;::before&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/::after&quot;&gt;&lt;code&gt;::after&lt;/code&gt;&lt;/a&gt;. If the element's content can fit without a need for horizontal scrollbar, its &lt;code&gt;scrollWidth&lt;/code&gt; is equal to &lt;a href=&quot;clientwidth&quot;&gt;&lt;code&gt;clientWidth&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f077a03de1eb95a5ac07189769c48e42a541240a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scrollingElement&lt;/code&gt; read-only property of the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; interface returns a reference to the &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; that scrolls the document. In standards mode, this is the root element of the document, &lt;a href=&quot;documentelement&quot;&gt;&lt;code&gt;document.documentElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cfa97d62a52b8676bcc42f0cddba94071a53ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;searchParams&lt;/code&gt; property of the &lt;a href=&quot;../url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; object allowing access to the GET query arguments contained in the URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63fe7f29de5e513ea028cc8881bcfed4928eeb5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;secureConnectionStart&lt;/code&gt; read-only property returns a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; immediately before the browser starts the handshake process to secure the current connection. If a secure connection is not used, the property returns zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738a07da3071d3ef0c53d821feb09275c6b42c3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;seekable&lt;/code&gt; read-only property of the &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; returns a &lt;a href=&quot;../timeranges&quot;&gt;&lt;code&gt;TimeRanges&lt;/code&gt;&lt;/a&gt; object that contains the time ranges that the user is able to seek to, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48eb989449b6a4b2c567b33c90763f1a7ba71c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;selectAlternateInterface()&lt;/code&gt; method of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/promise&quot;&gt;&lt;code&gt;promise&lt;/code&gt;&lt;/a&gt; that resolves when the specified alternative endpoint is selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346c6d469c5ec08a90cad4bfa0cdd88d7b42402c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;selectConfiguration()&lt;/code&gt; method of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/promise&quot;&gt;&lt;code&gt;promise&lt;/code&gt;&lt;/a&gt; that resolves when the specified configuration is selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb971f504ebc99f456846591145efddbffd2ac8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;selected&lt;/code&gt; property changed its meaning: it now indicates if the option is currently selected and no longer if it was initally selected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9af307540772697eb85192f6021caa9da070b9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;selected&lt;/code&gt; property is a Boolean whose value is &lt;code&gt;true&lt;/code&gt; if the track is active. Only a single video track can be active at any given time, so setting this property to &lt;code&gt;true&lt;/code&gt; for one track while another track is active will make that other track inactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8cd0aeacf345c27a85072bb851727462d53a7d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;send()&lt;/code&gt; method of the &lt;a href=&quot;../presentationconnection&quot;&gt;&lt;code&gt;PresentationConnection&lt;/code&gt;&lt;/a&gt; interface tells a controlling browsing context to send binary or text data to a presenting browsing context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cefcd7cbeb1f096b0733567c92c3f9808cc7f4ea" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sendMessage()&lt;/code&gt; definition looks like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9234bdf2fcc601030742b76e065737fc9fe066ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;serialNumber&lt;/code&gt; read only property of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface is the manufacturer-defined serial number for the specific USB device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a02afe91742f8f1faac0f349fd563c1a710805" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;serverTiming&lt;/code&gt; read-only property returns an array of &lt;a href=&quot;../performanceservertiming&quot;&gt;&lt;code&gt;PerformanceServerTiming&lt;/code&gt;&lt;/a&gt; entries containing server timing metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71cfa6d834a09ce45ce9ee7b7e293a7482edad1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;serviceURI&lt;/code&gt; property of the &lt;a href=&quot;../speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition&lt;/code&gt;&lt;/a&gt; interface specifies the location of the speech recognition service used by the current &lt;code&gt;SpeechRecognition&lt;/code&gt; to handle the actual recognition. The default is the user agent's default speech service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6727f8c35c1fe47c00128a9d47e9fa97538dd59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sessionDescription&lt;/code&gt; parameter is technically of type &lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt;, but because &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; serializes to be indistinguishable from &lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt;, you can also pass in an &lt;code&gt;RTCSessionDescription&lt;/code&gt;. This lets you simplify code such as the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f505f0f09cc1c353b1a8036ec2dbb1382dcd339" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sessionStorage&lt;/code&gt; property allows you to access a session &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object for the current origin. sessionStorage is similar to &lt;a href=&quot;localstorage&quot;&gt;&lt;code&gt;Window.localStorage&lt;/code&gt;&lt;/a&gt;; the only difference is while data stored in localStorage has no expiration set, data stored in sessionStorage gets cleared when the page session ends. A page session lasts for as long as the browser is open and survives over page reloads and restores. &lt;strong&gt;Opening a page in a new tab or window will cause a new session to be initiated with the value of the top-level browsing context, which differs from how session cookies work.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58e7a86b1ba101461ba6491f44871f1d5b16b7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set()&lt;/code&gt; method of the &lt;a href=&quot;../headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; interface sets a new value for an existing header inside a &lt;code&gt;Headers&lt;/code&gt; object, or adds the header if it does not already exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caed9b285b564acae820467823032e7d8daac64f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;set()&lt;/code&gt; method of the &lt;a href=&quot;../stylepropertymap&quot;&gt;&lt;code&gt;StylePropertyMap&lt;/code&gt;&lt;/a&gt; interface changes the CSS declaration with the given property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd9a96828258e4de9d19b61bf0c5841362f52b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setActionHandler()&lt;/code&gt; property of the &lt;a href=&quot;../mediasession&quot;&gt;&lt;code&gt;MediaSession&lt;/code&gt;&lt;/a&gt; interface sets an event handler for a media session action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0bf0da8e9b09bc111b90ad03098838e615ada57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setBaseAndExtent()&lt;/code&gt; method of the &lt;a href=&quot;../selection&quot;&gt;&lt;code&gt;Selection&lt;/code&gt;&lt;/a&gt; interface sets the selection to be a range including all or parts of two specified DOM nodes, and any content located between them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a397f4dba8aa227b1ce0a3eadcdeb4902700d5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setFieldOfView()&lt;/code&gt; method of the &lt;a href=&quot;../hmdvrdevice&quot;&gt;&lt;code&gt;HMDVRDevice&lt;/code&gt;&lt;/a&gt; interface can be used to set the field of view for one eye, or both eyes simultaneously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf8b560c0cde71fd4a56e37ec50ba5069b75ce4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setInterval()&lt;/code&gt; function is commonly used to set a delay for functions that are executed again and again, such as animations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc32b4ba72385c7324a56533dbc3010094c72e2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setInterval()&lt;/code&gt; method of the &lt;a href=&quot;../windoworworkerglobalscope&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; mixin repeatedly calls a function or executes a code snippet, with a fixed time delay between each call. It returns an &lt;code&gt;interval&lt;/code&gt;&lt;code&gt;ID&lt;/code&gt; which uniquely identifies the interval, so you can remove it later by calling &lt;a href=&quot;clearinterval&quot;&gt;&lt;code&gt;clearInterval()&lt;/code&gt;&lt;/a&gt;. This method is offered on the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b853f57ffc1de558b1278b9809ba0e2c123c9428" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setItem()&lt;/code&gt; method of the &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; interface, when passed a key name and value, will add that key to the storage, or update that key's value if it already exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c6f59824882c50d0b80e0ed2accf173127337e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setLineDash()&lt;/code&gt; method of the Canvas 2D API's &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt; interface sets the line dash pattern used when stroking lines. It uses an array of values that specify alternating lengths of lines and gaps which describe the pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d8386f643ae5153dfd2963a3e3e9c82a8f8779" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setLineDash&lt;/code&gt; method and the &lt;code&gt;lineDashOffset&lt;/code&gt; property specify the dash pattern for lines. The &lt;code&gt;setLineDash&lt;/code&gt; method accepts a list of numbers that specifies distances to alternately draw a line and a gap and the &lt;code&gt;lineDashOffset&lt;/code&gt; property sets an offset where to start the pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada6502e4e38248e9e8a10e8cc6e29cf8875e839" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setLiveSeekableRange()&lt;/code&gt; method of the &lt;a href=&quot;../mediasource&quot;&gt;&lt;code&gt;MediaSource&lt;/code&gt;&lt;/a&gt; interface sets the range that the user can seek to in the media element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac3e15c0ac6a35b1d863024a990f960ab77291c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setMediaKeys()&lt;/code&gt; property of the &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to the passed &lt;a href=&quot;../mediakeys&quot;&gt;&lt;code&gt;MediaKeys&lt;/code&gt;&lt;/a&gt;, which are those used to decrypt media during playback.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9463eeb8d4b5f3c6c3329cba9ebfe70f019dd4a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setOrientation()&lt;/code&gt; and &lt;code&gt;setPosition()&lt;/code&gt; methods have been replaced by setting their property value equivilents. For example &lt;code&gt;setPosition(x, y, z)&lt;/code&gt; can be achieved by setting &lt;code&gt;positionX.value&lt;/code&gt;, &lt;code&gt;positionY.value&lt;/code&gt;, and &lt;code&gt;positionZ.value&lt;/code&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bfb0dd62430b734eedaaeafca2b5b0852a4b231" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setOrientation()&lt;/code&gt; method of the &lt;a href=&quot;../audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; interface defines the orientation of the listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba06d3d44612b8a073a58b82bffd1c667f9e15a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setOrientation()&lt;/code&gt; method of the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; Interface defines the direction the audio source is playing in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ece315049aca7674888a06759971552cf1aeb9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setParameters()&lt;/code&gt; method of the &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; interface applies changes the configuration of the &lt;a href=&quot;track&quot;&gt;&lt;code&gt;RTCRtpSender.track&lt;/code&gt;&lt;/a&gt; property. &lt;code&gt;RTCRtpSender.track&lt;/code&gt; is an instance of &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79671f495c42c546ccbc3c34371b5c2ffbc3adfb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setPeriodicWave()&lt;/code&gt; method of the &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; interface is used to point to a &lt;a href=&quot;../periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt; defining a periodic waveform that can be used to shape the oscillator's output, when &lt;a href=&quot;type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;custom&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ea98b36d0cb20ee2c1fc8764cfa67b86fbe921b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setPosition()&lt;/code&gt; method of the &lt;a href=&quot;../audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; Interface defines the position of the listener.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72869f1f28f82189add549f035be91cc06cbca92" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setPosition()&lt;/code&gt; method of the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; Interface defines the position of the audio source relative to the listener (represented by an &lt;a href=&quot;../audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; object stored in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/listener&quot;&gt;&lt;code&gt;AudioContext.listener&lt;/code&gt;&lt;/a&gt; attribute.) The three parameters &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt; are unitless and describe the source's position in 3D space using the right-hand Cartesian coordinate system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3158f77f4873644955b652e08c2c793b26bf14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setPosition()&lt;/code&gt; method's default value of the position is &lt;code&gt;(0,&lt;/code&gt;&lt;code&gt;0,&lt;/code&gt;&lt;code&gt;0)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d1ddc9125ce427c750c18c2a4a898e2c343504" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setResourceTimingBufferSize()&lt;/code&gt; method sets the browser's &lt;em&gt;resource timing buffer&lt;/em&gt; size to the specified number of &quot;&lt;code&gt;resource&lt;/code&gt;&quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;performance entry type&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f210f2cb00250eec82783fe54297a68a9f4cb89c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setTargetAtTime()&lt;/code&gt; method of the &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; interface schedules the start of a gradual change to the &lt;code&gt;AudioParam&lt;/code&gt; value. This is useful for decay or release portions of ADSR envelopes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3470d8e9fc206d37e56a9e91deeee904390ae2eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setTimeout()&lt;/code&gt; method of the &lt;a href=&quot;../windoworworkerglobalscope&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; mixin (and successor to window.setTimeout) sets a timer which executes a function or specified piece of code once after the timer expires.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2963c41de08d9f2f2ca52a28bf38898191bcfc5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setValueAtTime()&lt;/code&gt; method of the &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; interface schedules an instant change to the &lt;code&gt;AudioParam&lt;/code&gt; value at a precise time, as measured against &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/currentTime&quot;&gt;&lt;code&gt;AudioContext.currentTime&lt;/code&gt;&lt;/a&gt;. The new value is given in the value parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="378febf2caecace84183c96ba90568f6efc84620" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setValueCurveAtTime()&lt;/code&gt; method of the &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; interface schedules the parameter's value to change following a curve defined by a list of values. The curve is a linear interpolation between the sequence of values defined in an array of floating-point values, which are scaled to fit into the given interval starting at &lt;code&gt;startTime&lt;/code&gt; and a specific duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33cf918d854d156be10868a22ee10075a5f5b2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setVelocity()&lt;/code&gt; method of the &lt;a href=&quot;../pannernode&quot;&gt;&lt;code&gt;PannerNode&lt;/code&gt;&lt;/a&gt; Interface defines the velocity vector of the audio source &amp;mdash; how fast it is moving and in what direction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976b1e3ce68a40bf078edbc1775220379f945ab4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setup()&lt;/code&gt; function is responsible for building the keyboard and preparing the app to play music.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93206f088d2a776472432fd2aec067e99e5ef246" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shadowBlur&lt;/code&gt; property indicates the size of the blurring effect; this value doesn't correspond to a number of pixels and is not affected by the current transformation matrix. The default value is 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbe271ea61dcc78db847fd433884d269d88e781" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shadowColor&lt;/code&gt; property is a standard CSS color value indicating the color of the shadow effect; by default, it is fully-transparent black.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d4c7d54f5f6f937511392c4d8094e3fb58758c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shippingAddress&lt;/code&gt; read-only property of the &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; interface returns the shipping address provided by the user. It is &lt;code&gt;null&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca8c6597d43a3cf742ae035c7fda21f90ec3f833" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shippingAddress&lt;/code&gt; read-only property of the &lt;code&gt;PaymentRequest&lt;/code&gt; interface returns a &lt;a href=&quot;../paymentaddress&quot;&gt;&lt;code&gt;PaymentAddress&lt;/code&gt;&lt;/a&gt; object containing the shipping address provided by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfd60558f4fed2b5367d87bb9cc4f42d4aacea9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shippingOption&lt;/code&gt; read-only attribute of the &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; interface returns either the id of a selected shipping option, null (if no shipping option was set to be selected) or a shipping option selected by the user. It is initially &lt;code&gt;null&lt;/code&gt; by when no &quot;selected&quot; shipping options are provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8a3c5c9d34dff328200d483b273943bcb9f2c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shippingOption&lt;/code&gt; read-only property of the &lt;code&gt;PaymentRequest&lt;/code&gt; interface returns the ID attribute of the shipping option selected by the user. This option is only present when the &lt;code&gt;requestShipping&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt; in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentOptions&quot;&gt;&lt;code&gt;PaymentOptions&lt;/code&gt;&lt;/a&gt; object passed to the &lt;a href=&quot;../paymentrequest/paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a626bb4fa343a4c05d4fc45696818e126db1269b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shippingType&lt;/code&gt; read-only property of the &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; interface returns one of &lt;code&gt;&quot;shipping&quot;&lt;/code&gt;, &lt;code&gt;&quot;delivery&quot;&lt;/code&gt;, &lt;code&gt;&quot;pickup&quot;&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if one was not provided by the constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25775e23e9ed4a16b2241e0e95be5682e62d87d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shippingaddresschange&lt;/code&gt; event doesn't receive the &lt;a href=&quot;paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; object directly, so we fetch it from the &lt;a href=&quot;event/target&quot;&gt;&lt;code&gt;target&lt;/code&gt;&lt;/a&gt; property of the event. If the request's &lt;a href=&quot;paymentrequest/shippingaddress&quot;&gt;&lt;code&gt;shippingAddress&lt;/code&gt;&lt;/a&gt; has a value for &lt;a href=&quot;paymentaddress/country&quot;&gt;&lt;code&gt;country&lt;/code&gt;&lt;/a&gt; which isn't in the array &lt;code&gt;validCountries&lt;/code&gt;, we generate the error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56c0f7372a4d1c63cbe5e3afa80f1041371dbe78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shippingaddresschange&lt;/code&gt; event is triggered by a user-agent controlled interaction. If the address stored by the user agent changes at any time during a payment process, the event is triggered. To make sure an updated address is included when sending payment information to the server, you should add event listeners for a &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; object after instantiation, but before the call to &lt;code&gt;show()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4866cfc5cc39b80d674606c074ae6dd7b5f6c070" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shippingoptionchange&lt;/code&gt; event is triggered by a user-agent controlled interaction. If the option stored by the user agent changes at any time during a payment process, the event is triggered. To make sure an updated option is included when sending payment information to the server, you should add event listeners for a &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; object after instantiation, but before the call to &lt;code&gt;show()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71fcfb298258adece16e04d921ee905f59da941f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;show()&lt;/code&gt; method of the &lt;a href=&quot;../htmldialogelement&quot;&gt;&lt;code&gt;HTMLDialogElement&lt;/code&gt;&lt;/a&gt; interface displays the dialog modelessly, i.e. still allowing interaction with content outside of the dialog.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4246efbd3d3f7773862a4ebc184418fa1f18649" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;showModal()&lt;/code&gt; method of the &lt;a href=&quot;../htmldialogelement&quot;&gt;&lt;code&gt;HTMLDialogElement&lt;/code&gt;&lt;/a&gt; interface displays the dialog as a modal, over the top of any other dialogs that might be present. It displays into the top layer, along with a ::backdrop pseudo-element. Interaction outside the dialog is blocked and the content outside it is rendered inert.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33478c70d7eb0fffc53de3a2eabe0f3dcdeb7b29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;showNotification()&lt;/code&gt; method of the &lt;a href=&quot;../serviceworkerregistration&quot;&gt;&lt;code&gt;ServiceWorkerRegistration&lt;/code&gt;&lt;/a&gt; interface creates a notification on an active service worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be05aa1c2ba3895448fd74344ca383c1eefe4a5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;signal&lt;/code&gt; read-only property of the &lt;a href=&quot;../abortcontroller&quot;&gt;&lt;code&gt;AbortController&lt;/code&gt;&lt;/a&gt; interface returns an &lt;a href=&quot;../abortsignal&quot;&gt;&lt;code&gt;AbortSignal&lt;/code&gt;&lt;/a&gt; object instance, which can be used to communicate with/abort a DOM request as desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a7a6709d865dfd6b609d0963f49c977200d48f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;silent&lt;/code&gt; read-only property of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; interface specifies whether the notification should be silent, i.e. no sounds or vibrations should be issued, regardless of the device settings. This is specified in the &lt;code&gt;renotify&lt;/code&gt; option of the &lt;a href=&quot;notification&quot;&gt;&lt;code&gt;Notification()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3582e57b3a15eb90388290ad9916db42f3f81a96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sittingToStandingTransform&lt;/code&gt; read-only property of the &lt;a href=&quot;../vrstageparameters&quot;&gt;&lt;code&gt;VRStageParameters&lt;/code&gt;&lt;/a&gt; interface contains a matrix that transforms the sitting-space view matrices of &lt;a href=&quot;../vrframedata&quot;&gt;&lt;code&gt;VRFrameData&lt;/code&gt;&lt;/a&gt; to standing-space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd5e0624e10711dedc348f239feb0a31eda88bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size()&lt;/code&gt; method of the &lt;a href=&quot;../countqueuingstrategy&quot;&gt;&lt;code&gt;CountQueuingStrategy&lt;/code&gt;&lt;/a&gt; interface always returns &lt;code&gt;1&lt;/code&gt;, so that the total queue size is a count of the number of chunks in the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbfc002c477f843f5320a6f3e67d5dedbe3bdd79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size()&lt;/code&gt; method of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ByteLengthQueueingStrategy&quot;&gt;&lt;code&gt;ByteLengthQueueingStrategy&lt;/code&gt;&lt;/a&gt; interface returns the given chunk&amp;rsquo;s &lt;code&gt;byteLength&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1e6e848e4945fbdfceecc051f33754ca8a5c01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; attribute of the return value corresponds to the length of the array for uniforms declared as arrays. Otherwise, it is 1 (this includes interface blocks instanced with arrays).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce00d30a17293622ca0fcc14617032ad4adf460" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; read-only property of the &lt;a href=&quot;../keyboardlayoutmap&quot;&gt;&lt;code&gt;KeyboardLayoutMap&lt;/code&gt;&lt;/a&gt; interface returns the number of elements in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fc5ed2a9f82a4bb2076eaee2dd79fc2179907e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; read-only property of the &lt;a href=&quot;../mediakeystatusmap&quot;&gt;&lt;code&gt;MediaKeyStatusMap&lt;/code&gt;&lt;/a&gt; interface returns the number of key/value paIrs in the status map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab57d1604a8ac0604ad017fedd3350c4ecd2b0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; read-only property of the &lt;a href=&quot;../stylepropertymapreadonly&quot;&gt;&lt;code&gt;StylePropertyMapReadOnly&lt;/code&gt;&lt;/a&gt; interface returns an unsinged long integer containing the size of the &lt;code&gt;StylePropertyMapReadOnly&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e86e1d85542590cb4da792a1e06d814c0125125" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sizeX&lt;/code&gt; read-only property of the &lt;a href=&quot;../vrstageparameters&quot;&gt;&lt;code&gt;VRStageParameters&lt;/code&gt;&lt;/a&gt; interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a47779f195f073608eafda34cedbae5d4654a007" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sizeY&lt;/code&gt; read-only property of the &lt;a href=&quot;../vrstageparameters&quot;&gt;&lt;code&gt;VRStageParameters&lt;/code&gt;&lt;/a&gt; interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0388da2e497258f018cd112f2cdb1694433fa6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sliCount&lt;/code&gt; property of the &lt;a href=&quot;../rtcrtpstreamstats&quot;&gt;&lt;code&gt;RTCRtpStreamStats&lt;/code&gt;&lt;/a&gt; dictionary indicates how many &lt;strong&gt;Slice Loss Indication&lt;/strong&gt; (&lt;strong&gt;SLI&lt;/strong&gt;) packets were received by the sender. An SLI packet is used by a decoder to let the encoder know that it's detected corruption of one or more consecutive macroblocks in the received media.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe774619d2cb28a696f78fa256888f78374a488" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slot&lt;/code&gt; property of the &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; interface returns the name of the shadow DOM slot the element is inserted in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b3a752998607a4e55edc4d95d0fec60dce4779" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;smoothingTimeConstant&lt;/code&gt; property of the &lt;a href=&quot;../analysernode&quot;&gt;&lt;code&gt;AnalyserNode&lt;/code&gt;&lt;/a&gt; interface is a double value representing the averaging constant with the last analysis frame. It's basically an average between the current buffer and the last buffer the &lt;code&gt;AnalyserNode&lt;/code&gt; processed, and results in a much smoother set of value changes over time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51a0fdec7045e2dad2d4c1afae3568afc694084" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sortingCode&lt;/code&gt; read-only property of the &lt;a href=&quot;../paymentaddress&quot;&gt;&lt;code&gt;PaymentAddress&lt;/code&gt;&lt;/a&gt; interface returns a string containing a postal sorting code such as is used in France.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be4f3940c3fae096d4455f7bca9676ac8ccd59eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbcursor&quot;&gt;&lt;code&gt;IDBCursor&lt;/code&gt;&lt;/a&gt; interface returns the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt; that the cursor is iterating over. This function never returns null or throws an exception, even if the cursor is currently being iterated, has iterated past its end, or its transaction is not active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9616770523e6597054a190e7f79873ffa9f3ac3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; interface returns the source of the request, such as an Index or an object store. If no source exists (such as when calling &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB/open&quot;&gt;&lt;code&gt;indexedDB.open&lt;/code&gt;&lt;/a&gt;), it returns null.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c80f859c6ee43f47b9d3b66a5d506ce0923cb6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;spacing&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042b8184fe88999e0b1bc8d464455fde7afaa05d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;spacingAndGlyphs&lt;/code&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b78c221f9e033fda9a27d7ec75f9c34b450210" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;span&lt;/code&gt; property is now an &lt;code&gt;unsigned long&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be1935a519dfe1c64bb1c197af90be20633b852" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;speaking&lt;/code&gt; read-only property of the &lt;a href=&quot;../speechsynthesis&quot;&gt;&lt;code&gt;SpeechSynthesis&lt;/code&gt;&lt;/a&gt; interface is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; that returns &lt;code&gt;true&lt;/code&gt; if an utterance is currently in the process of being spoken &amp;mdash; even if &lt;code&gt;SpeechSynthesis&lt;/code&gt; is in a &lt;a href=&quot;pause&quot;&gt;&lt;code&gt;paused&lt;/code&gt;&lt;/a&gt; state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7be2f53b6f4fcf017e2e1a8c67e68fa7bae493" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;speechSynthesis&lt;/code&gt; read-only property of the Window object returns a &lt;a href=&quot;../speechsynthesis&quot;&gt;&lt;code&gt;SpeechSynthesis&lt;/code&gt;&lt;/a&gt; object, which is the entry point into using &lt;a href=&quot;../web_speech_api&quot;&gt;Web Speech API&lt;/a&gt; speech synthesis functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1725f60ae42f3df9de84be39396e6c407e4d7fe4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; property of the constructed &lt;code&gt;HTMLAudioElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed71b4080e0bd4671d7c2e2b04fa451ce0d5fb3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;srcObject&lt;/code&gt; property of the &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; interface sets or returns the object which serves as the source of the media associated with the &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt;. The object can be a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;../mediasource&quot;&gt;&lt;code&gt;MediaSource&lt;/code&gt;&lt;/a&gt;, a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;, or a &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; (which inherits from &lt;code&gt;Blob&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e27403f16300181bea1719635d9cd84f2b857f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start()&lt;/code&gt; method of the &lt;a href=&quot;../audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt; Interface is used to schedule playback of the audio data contained in the buffer, or to begin playback immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9661b55b5bf54832f7a3472ff713a0dd79532db4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start()&lt;/code&gt; method on &lt;a href=&quot;../audioscheduledsourcenode&quot;&gt;&lt;code&gt;AudioScheduledSourceNode&lt;/code&gt;&lt;/a&gt; schedules a sound to begin playback at the specified time. If no time is specified, then the sound begins playing immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed85a9c6f59dcdb5dd802868f67d553af776da7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start()&lt;/code&gt; property of the &lt;a href=&quot;../presentationrequest&quot;&gt;&lt;code&gt;PresentationRequest&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves with a &lt;a href=&quot;../presentationconnection&quot;&gt;&lt;code&gt;PresentationConnection&lt;/code&gt;&lt;/a&gt; after the user agent prompts the user to select a display and grant permission to use that display.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9da2e03110a4656e52a8dc44df7accee1b6fc5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; event is thrown as a result of the &lt;a href=&quot;start&quot;&gt;&lt;code&gt;MediaRecorder.start()&lt;/code&gt;&lt;/a&gt; method being invoked. At this point, the data starts being gathered into a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea198499a03fca2b0ea187f8cc37af0ceae218bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; method activates one of the sensors based on &lt;code&gt;Sensor&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df4f6bb1a006da76e8469c2cedf18cdc4e3030a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;start&lt;/code&gt; method of the &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; interface specifies the exact time to start playing the tone. Its parameter is optional and default to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174468e374770611c0dce1e31280c23b57b69ded" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startContainer&lt;/code&gt; property of the &lt;a href=&quot;../staticrange&quot;&gt;&lt;code&gt;StaticRange&lt;/code&gt;&lt;/a&gt; interface returns the start &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; for the range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f287bce732e22df83344feb405cad2a6d7ccadb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startMessages()&lt;/code&gt; method of the &lt;a href=&quot;../serviceworkercontainer&quot;&gt;&lt;code&gt;ServiceWorkerContainer&lt;/code&gt;&lt;/a&gt; interface explicitly starts the flow of messages being dispatched from a service worker to pages under its control (e.g. sent via &lt;a href=&quot;../client/postmessage&quot;&gt;&lt;code&gt;Client.postMessage()&lt;/code&gt;&lt;/a&gt;). Can be used to avoid race conditions created when a service worker tries to post a message to a page before that page has actually finished loading an &lt;a href=&quot;onmessage&quot;&gt;&lt;code&gt;ServiceWorkerContainer.onmessage&lt;/code&gt;&lt;/a&gt; handler to process them..</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38263948e0d8456dda043250a4c318b69121d755" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startOffset&lt;/code&gt; property of the &lt;a href=&quot;../staticrange&quot;&gt;&lt;code&gt;StaticRange&lt;/code&gt;&lt;/a&gt; interface returns the offset into the start node of the range's start position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06655c3e89990561f71086f0bf1885c0f7b446e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startRecording()&lt;/code&gt; function handles starting the recording process:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a60d333978cb29b267e4037c1319fb2766740b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startRendering()&lt;/code&gt; method of the &lt;a href=&quot;../offlineaudiocontext&quot;&gt;&lt;code&gt;OfflineAudioContext&lt;/code&gt;&lt;/a&gt; Interface starts rendering the audio graph, taking into account the current connections and the current scheduled changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9271823c5c1f878eff3c0f9df725b6eac864091" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startTime&lt;/code&gt; property returns the first recorded &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; of the &lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;performance entry&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f445f525ef72b6fc5d47be796c15ca0f209d2ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startVideo()&lt;/code&gt; method handles setting up and starting the video stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa4001ab79a21f21ee740850188bb63c7d775546" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;startup()&lt;/code&gt; function is run when the page has finished loading, courtesy of &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;window.addEventListener()&lt;/code&gt;&lt;/a&gt;. This function's job is to request access to the user's webcam, initialize the output &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; to a default state, and to establish the event listeners needed to receive each frame of video from the camera and react when the button is clicked to capture an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92dd6a7ef502aa738008c5a5ddfa55b90c50fe61" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;state&lt;/code&gt; read-only property of the &lt;a href=&quot;../baseaudiocontext&quot;&gt;&lt;code&gt;BaseAudioContext&lt;/code&gt;&lt;/a&gt; interface returns the current state of the &lt;code&gt;AudioContext&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b61bdf70c4b7af7ef17105b85fa1f43216130e1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;state&lt;/code&gt; read-only property of the &lt;code&gt;ServiceWorker&lt;/code&gt; interface returns a string representing the current state of the service worker. It can be one of the following values: &lt;code&gt;installing&lt;/code&gt;, &lt;code&gt;installed,&lt;/code&gt;&lt;code&gt;activating&lt;/code&gt;, &lt;code&gt;activated&lt;/code&gt;, or &lt;code&gt;redundant&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4272afe5cb538d0242ba105dff0b699123628d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;status&lt;/code&gt; read-only property of the &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; interface contains the status code of the response (e.g., &lt;code&gt;200&lt;/code&gt; for a success).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9488073e1a2cd97a32b6edc9bd46d03fb352861" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;statusMessage&lt;/code&gt; property can contain a platform dependent string with details of an event. This can occur, for example, if the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextcreationerror&quot;&gt;webglcontextcreationerror&lt;/a&gt;&lt;/code&gt; event is fired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02e384beeb36042da9cc1c4f6980a0687d7ecba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;step&lt;/code&gt; read-only property of the &lt;a href=&quot;../mediasettingsrange&quot;&gt;&lt;code&gt;MediaSettingsRange&lt;/code&gt;&lt;/a&gt; interface returns the minimum difference between consecutive values of the settings range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d0844c25dba58aae00041cf0a16951decba512" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stop()&lt;/code&gt; function simply stops the input media:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96f82cbaefed9c439fd9dda0976f9a9033f3454" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stop()&lt;/code&gt; method in the &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; interface permanently stops the transceiver by stopping both the associated &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt;. Once stopped, the transceiver's &lt;a href=&quot;stopped&quot;&gt;&lt;code&gt;stopped&lt;/code&gt;&lt;/a&gt; property will return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7847243928e6a67aad7f85046a46f5f34a54a4ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stop()&lt;/code&gt; method on &lt;a href=&quot;../audioscheduledsourcenode&quot;&gt;&lt;code&gt;AudioScheduledSourceNode&lt;/code&gt;&lt;/a&gt; schedules a sound to cease playback at the specified time. If no time is specified, then the sound stops playing immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2acb20eb27a080d464db6decaa521ff7544ba4c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stop&lt;/code&gt; event is thrown either as a result of the &lt;a href=&quot;stop&quot;&gt;&lt;code&gt;MediaRecorder.stop()&lt;/code&gt;&lt;/a&gt; method being invoked, or when the media stream being captured ends. In each case, the &lt;code&gt;stop&lt;/code&gt; event is preceded by a &lt;code&gt;dataavailable&lt;/code&gt; event, making the &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; captured up to that point available for you to use in your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b7c1b06709f0b3ad9c7c1eb5189c91cb7b3a75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stop&lt;/code&gt; method of the &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; interface specifies the time to stop playing the tone. Its parameter is optional and defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="182b83d8e3763db74e98de89c972685b9b219370" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stop&lt;/code&gt; method of the &lt;a href=&quot;../sensor&quot;&gt;&lt;code&gt;Sensor&lt;/code&gt;&lt;/a&gt; interface deactivates the current sensor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c41d3183c221f0130483873599e55151ecafb28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;storage&lt;/code&gt; event is fired on a document's &lt;code&gt;Window&lt;/code&gt; object when a storage area changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b41be131669c23e88351b0ff811f5972cddb8e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;storageQuota&lt;/code&gt; property of the &lt;a href=&quot;navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; interface of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Quota_Management_API&quot;&gt;Quota Management API&lt;/a&gt; provides means to query and request storage usage and quota information. You can get a reference to this interface using &lt;code&gt;Navigator.storageQuota&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1b836b77e0f895e8675a68c2db42c386f24064c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;store()&lt;/code&gt; method of the &lt;a href=&quot;../credentialscontainer&quot;&gt;&lt;code&gt;CredentialsContainer&lt;/code&gt;&lt;/a&gt; stores a set of credentials for the user inside a &lt;a href=&quot;../credential&quot;&gt;&lt;code&gt;Credential&lt;/code&gt;&lt;/a&gt; instance, returning this in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e689b7a41a295d70958ad105843c36b80115c6e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stream&lt;/code&gt; property of the &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; interface represents a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; containing a single &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioMediaStreamTrack&quot;&gt;&lt;code&gt;AudioMediaStreamTrack&lt;/code&gt;&lt;/a&gt; with the same number of channels as the node itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fd2172b340ef8e8ebc63fb5d849ddf4bc83524" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;strict&lt;/code&gt; value will prevent the cookie from being sent by the browser to the target site in all cross-site browsing context, even when following a regular link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d2dd33ed7b29a258208c4627f02dddf772a1fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;strokeRect()&lt;/code&gt; method draws a stroked rectangle whose starting point is at &lt;code&gt;(x, y)&lt;/code&gt; and whose size is specified by &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9184ba0fd97fda88fe455e132ef3f103fa7d5298" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;style&lt;/code&gt; object represents an individual style statement. Unlike the individual rules available from the &lt;code&gt;&lt;a href=&quot;../documentorshadowroot/stylesheets&quot;&gt;document.styleSheets&lt;/a&gt;&lt;/code&gt; collection, the style object is accessed from the &lt;code&gt;document&lt;/code&gt; or from the elements to which that style is applied. It represents the &lt;em&gt;in-line&lt;/em&gt; styles on a particular element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277b90d387c3c1f274c65bf073208e7ce256d150" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;style&lt;/code&gt; property is not useful for completely learning about the styles applied on the element, since it represents only the CSS declarations set in the element's inline &lt;code&gt;style&lt;/code&gt; attribute, not those that come from style rules elsewhere, such as style rules in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head&quot;&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;&lt;/a&gt; section, or external style sheets. To get the values of all CSS properties for an element you should use &lt;a href=&quot;../window/getcomputedstyle&quot;&gt;&lt;code&gt;window.getComputedStyle()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43e52039085c871e06414ed597e851de9bf56ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;styleSheetSets&lt;/code&gt; read-only property returns a live list of all of the currently-available style sheet sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a850afaf85d8144b4018ad62f546e87cb0e467" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;styleSheets&lt;/code&gt; read-only property of the &lt;a href=&quot;../documentorshadowroot&quot;&gt;&lt;code&gt;DocumentOrShadowRoot&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../stylesheetlist&quot;&gt;&lt;code&gt;StyleSheetList&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../cssstylesheet&quot;&gt;&lt;code&gt;CSSStyleSheet&lt;/code&gt;&lt;/a&gt; objects, for stylesheets explicitly linked into or embedded in a document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe8190df5b6f1e84e4596ab05b799a558a98133" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subscribe()&lt;/code&gt; method of the &lt;a href=&quot;../pushmanager&quot;&gt;&lt;code&gt;PushManager&lt;/code&gt;&lt;/a&gt; interface subscribes to a push service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f3eb386cd7769e2cf771690e2b70a5f5a7cce2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;successCallback&lt;/code&gt; is called with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry&quot;&gt;&lt;code&gt;FileSystemFileEntry&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;getFile()&lt;/code&gt; was called or a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry&lt;/code&gt;&lt;/a&gt; if &lt;code&gt;getDirectory()&lt;/code&gt; was called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f769586a27f9fd6c27fea5a0adb1c72d626de235" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;supportedContentEncodings&lt;/code&gt; read-only property of the &lt;a href=&quot;../pushmanager&quot;&gt;&lt;code&gt;PushManager&lt;/code&gt;&lt;/a&gt; interface returns an array of supported content codings that can be used to encrypt the payload of a push message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6cdeae54f5340af0c038fba5ed1a5fed4ab400" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;supportedNetworks&lt;/code&gt; property of the &lt;a href=&quot;../basiccardrequest&quot;&gt;&lt;code&gt;BasicCardRequest&lt;/code&gt;&lt;/a&gt; dictionary contains an array of &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;s representing the card networks that the retailer supports (e.g. &lt;code&gt;amex&lt;/code&gt;, &lt;code&gt;mastercard&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8007e15ecfec62c60709270ec2e091df4d7ad6c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;supportedTypes&lt;/code&gt; read-only property of the &lt;a href=&quot;../storagequota&quot;&gt;&lt;code&gt;StorageQuota&lt;/code&gt;&lt;/a&gt; interface returns a list of the available storage types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f9a4d68f3d896934f0d8793a564914d7f578f1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;supports()&lt;/code&gt; method of the &lt;a href=&quot;../domtokenlist&quot;&gt;&lt;code&gt;DOMTokenList&lt;/code&gt;&lt;/a&gt; interface returns &lt;code&gt;true&lt;/code&gt; if a given &lt;em&gt;token&lt;/em&gt; is in the associated attribute's supported tokens. This method is intended to support feature detection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e1528f312b5b852bb8f9337cc3a26df2fc23f52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;suspend()&lt;/code&gt; method of the &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; Interface suspends the progression of time in the audio context, temporarily halting audio hardware access and reducing CPU/battery usage in the process &amp;mdash; this is useful if you want an application to power down the audio hardware when it will not be using an audio context for a while.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfba4eac0261027be538638e68d4ee0985e0fd39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;suspend()&lt;/code&gt; method of the &lt;a href=&quot;../offlineaudiocontext&quot;&gt;&lt;code&gt;OfflineAudioContext&lt;/code&gt;&lt;/a&gt; interface schedules a suspension of the time progression in the audio context at the specified time and returns a promise. This is generally useful at the time of manipulating the audio graph synchronously on OfflineAudioContext.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c01effcbb0e7da409a03a242c1004b81748a2f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;swapCommentaryMain()&lt;/code&gt; function above finds within the audio tracks of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element &lt;code&gt;&quot;main-video&quot;&lt;/code&gt; the audio tracks whose &lt;a href=&quot;kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; values are &lt;code&gt;&quot;main&quot;&lt;/code&gt; and &lt;code&gt;&quot;commentary&quot;&lt;/code&gt;. These represent the primary audio track and the commentary track.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d715f4203f08c247232552e1d79969f6d57c661" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tabindex&lt;/code&gt; property and the &lt;code&gt;blur()&lt;/code&gt; and &lt;code&gt;focus()&lt;/code&gt; methods have been moved to &lt;a href=&quot;htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0df40d9bd77706d8941324d11235480e51697f63" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tag&lt;/code&gt; read-only property of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; interface signifies an identifying tag for the notification, as specified in the &lt;code&gt;tag&lt;/code&gt; option of the &lt;a href=&quot;notification&quot;&gt;&lt;code&gt;Notification()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac79a6906019bf1b074ca501790778197aa8312a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;takePhoto()&lt;/code&gt; method of the &lt;a href=&quot;../imagecapture&quot;&gt;&lt;code&gt;ImageCapture&lt;/code&gt;&lt;/a&gt; interface takes a single exposure using the video capture device sourcing a &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; and returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves with a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; containing the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01412ab5eaf5bfea831bb986bad5fce455a2e47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;takeRecords()&lt;/code&gt; method of the &lt;a href=&quot;../performanceobserver&quot;&gt;&lt;code&gt;PerformanceObserver&lt;/code&gt;&lt;/a&gt; interface returns the current list of &lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;performance entries&lt;/code&gt;&lt;/a&gt; stored in the performance observer, emptying it out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afdc685c3422044712b91cf80836ca6bf70e17d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tangentialPressure&lt;/code&gt; read-only property of the &lt;a href=&quot;../pointerevent&quot;&gt;&lt;code&gt;PointerEvent&lt;/code&gt;&lt;/a&gt; interface represents the normalized tangential pressure of the pointer input (also known as barrel pressure or &lt;a href=&quot;https://en.wikipedia.org/wiki/Cylinder_stress&quot;&gt;cylinder stress&lt;/a&gt;) in the range -1 to 1, where 0 is the neutral position of the control.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d618d3dcefea63cf52160b4196eaef101c69159" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;target&lt;/code&gt; property of a &lt;a href=&quot;../keyframeeffect&quot;&gt;&lt;code&gt;KeyframeEffect&lt;/code&gt;&lt;/a&gt; interface represents the element or pseudo-element being animated. It may be &lt;code&gt;null&lt;/code&gt; for animations that do not target a specific element. It performs as both a getter and a setter, except with animations and transitions generated by CSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c2953ff53742763beb1c4f04c327212e264f10" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tcpType&lt;/code&gt; field's value is set when the &lt;a href=&quot;rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate()&lt;/code&gt;&lt;/a&gt; constructor is used. You can't directly set its value; instead, its value is automatically extracted from the &lt;a href=&quot;../rtcicecandidateinit/candidate&quot;&gt;&lt;code&gt;candidate&lt;/code&gt;&lt;/a&gt; a-line, if it's formatted properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d992f4db2c9b11438fd8b393f321a711345e1d90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tee()&lt;/code&gt; method of the &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; interface &lt;a href=&quot;https://streams.spec.whatwg.org/#tee-a-readable-stream&quot; id=&quot;ref-for-tee-a-readable-stream②&quot;&gt;tees&lt;/a&gt; the current readable stream, returning a two-element array containing the two resulting branches as new &lt;a href=&quot;../readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dae5e376ad410647bd351485a49f104707ccf04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tee&lt;/code&gt; method &lt;a href=&quot;https://streams.spec.whatwg.org/#tee-a-readable-stream&quot; id=&quot;ref-for-tee-a-readable-stream②&quot;&gt;tees&lt;/a&gt; this readable stream, returning a two-element array containing the two resulting branches as new &lt;a href=&quot;readablestream&quot;&gt;&lt;code&gt;ReadableStream&lt;/code&gt;&lt;/a&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3024206032674c031978965a27c5214af7b123ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;text()&lt;/code&gt;&lt;code&gt;method&lt;/code&gt; of the &lt;a href=&quot;../body&quot;&gt;&lt;code&gt;Body&lt;/code&gt;&lt;/a&gt; mixin takes a &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; stream and reads it to completion. It returns a promise that resolves with a &lt;a href=&quot;../usvstring&quot;&gt;&lt;code&gt;USVString&lt;/code&gt;&lt;/a&gt; object (text). The response is &lt;em&gt;always&lt;/em&gt; decoded using UTF-8.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cd8168b0dab9b2d8e2c88c9196ac7426002538" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;text&lt;/code&gt; property of the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; interface gets and sets the text that will be synthesised when the utterance is spoken.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b60a9474cd2f1cd48ca552b7c747faea94ff25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;textureCoordinates&lt;/code&gt; array defines the texture coordinates corresponding to each vertex of each face. Note that the texture coordinates range from 0.0 to 1.0; the dimensions of textures are normalized to a range of 0.0 to 1.0 regardless of their actual size, for the purpose of texture mapping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392e0df63ad1df9321d3f95a43cd4cfb29e3859a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;threshold&lt;/code&gt; property of the &lt;a href=&quot;../dynamicscompressornode&quot;&gt;&lt;code&gt;DynamicsCompressorNode&lt;/code&gt;&lt;/a&gt; interface is a &lt;a href=&quot;../audioparam#k-rate&quot;&gt;k-rate&lt;/a&gt;&lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing the decibel value above which the compression will start taking effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bce553e9cba15514ed1b226fe7d5d40a228b8b0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;threshold&lt;/code&gt; property's default value is &lt;code&gt;-24&lt;/code&gt; and it can be set between &lt;code&gt;-100&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab27151e518b271d36ba2560740bc9d69607a82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;time&lt;/code&gt; read-only property of the &lt;a href=&quot;../budgetstate&quot;&gt;&lt;code&gt;BudgetState&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Timestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; at which the &lt;code&gt;budgetAt&lt;/code&gt; value is valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8762498284f10034692175b23c56f774d49f7e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeOrigin&lt;/code&gt; read-only property of the &lt;a href=&quot;../performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface returns the high resolution timestamp of the start time of the performance measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7b7a709c4919efebee2133ba33d0299a20bdc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timecode&lt;/code&gt; readonlyinline property of the &lt;a href=&quot;../blobevent&quot;&gt;&lt;code&gt;BlobEvent&lt;/code&gt;&lt;/a&gt; interface a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; indicating the difference between the timestamp of the first chunk in data, and the timestamp of the first chunk in the first BlobEvent produced by this recorder. Note that the timecode in the first produced BlobEvent does not need to be zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc43e999a10ceb9c6271a79bf50369cfb7579bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeline&lt;/code&gt; readonly property of the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; interface represents the default timeline of the current document. This timeline is a special instance of &lt;a href=&quot;../documenttimeline&quot;&gt;&lt;code&gt;DocumentTimeline&lt;/code&gt;&lt;/a&gt; that is automatically created on page load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="645bb10c40108981bdfa436ff60111dbd02939f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timelineTime&lt;/code&gt; read-only property of the &lt;code&gt;&lt;a href=&quot;../animationplaybackevent&quot;&gt;&lt;code&gt;AnimationPlaybackEvent&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; interface represents the time value of the animation's &lt;a href=&quot;../animationtimeline&quot;&gt;&lt;code&gt;timeline&lt;/code&gt;&lt;/a&gt; at the moment the event is queued. This will be unresolved if the animation was not associated with a timeline at the time the event was generated or if the associated timeline was inactive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="432347210fa3dffdb5ce3cadf0a9d0239dbb5f74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timestamp&lt;/code&gt; read-only property of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; interface returns a &lt;code&gt;&lt;a href=&quot;https://heycam.github.io/webidl/#common-DOMTimeStamp&quot;&gt;DOMTimeStamp&lt;/a&gt;&lt;/code&gt;, as specified in the &lt;code&gt;timestamp&lt;/code&gt; option of the &lt;a href=&quot;notification&quot;&gt;&lt;code&gt;Notification()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16d3250a441956d430efb167e3384f53755c1ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timestamp&lt;/code&gt; read-only property of the &lt;a href=&quot;../sensor&quot;&gt;&lt;code&gt;Sensor&lt;/code&gt;&lt;/a&gt; interface returns the time stamp of the latest sensor reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f47f5224978c8e38c3532d6599d0c51c62eb88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timestamp&lt;/code&gt; read-only property of the &lt;a href=&quot;../vrframedata&quot;&gt;&lt;code&gt;VRFrameData&lt;/code&gt;&lt;/a&gt; interface returns a constantly increasing timestamp value representing the time a frame update occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e497c02a34af4e101fe8bd2443924b0a5f04b763" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timestamp&lt;/code&gt; read-only property of the &lt;a href=&quot;../vrpose&quot;&gt;&lt;code&gt;VRPose&lt;/code&gt;&lt;/a&gt; interface returns the current time stamp of the system &amp;mdash; a monotonically increasing value representing the time since the current app was started.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edce1db68b7272e4dc5092b9447f9ca39b58a1a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;title&lt;/code&gt; parameter is required, but can be empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2f8a531cb6e52547ef551ea43cf00a7a0a5c50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;title&lt;/code&gt; property of the &lt;a href=&quot;../mediametadata&quot;&gt;&lt;code&gt;MediaMetaData&lt;/code&gt;&lt;/a&gt; interface returns or sets the title of the media to be played.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14371c79bfdfe6a72bbe70aa04be3364a1758a57" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;title&lt;/code&gt; read-only property of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; interface indicates the title of the notification, as specified in the title parameter of the &lt;a href=&quot;notification&quot;&gt;&lt;code&gt;Notification()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3610f1743d04ae49941faeacc94f97cae4743b76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toJSON()&lt;/code&gt; method is a &lt;em&gt;serializer&lt;/em&gt; - it returns a JSON representation of the &lt;a href=&quot;../performancenavigationtiming&quot;&gt;&lt;code&gt;PerformanceNavigationTiming&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7fa3de3f3acc9aad90843380116bcddd7cb6f87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toJSON()&lt;/code&gt; method is a &lt;em&gt;serializer&lt;/em&gt; that returns a JSON representation of the &lt;a href=&quot;../performanceresourcetiming&quot;&gt;&lt;code&gt;PerformanceResourceTiming&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b8a63ec8f062d3a9d9296add4836f0747c23912" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toJSON()&lt;/code&gt; method is a &lt;em&gt;serializer&lt;/em&gt;; it returns a JSON representation of the &lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;performance entry&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3649d50e4dd45be8699e2903bcbd7dd58b991253" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toJSON()&lt;/code&gt; method of the &lt;a href=&quot;../performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface is a standard serializer: it returns a JSON representation of the performance object's properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df66824ea9e80e5cd33c4f683b07406a00ba38e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toJSON()&lt;/code&gt; method of the &lt;a href=&quot;../pushsubscription&quot;&gt;&lt;code&gt;PushSubscription&lt;/code&gt;&lt;/a&gt; interface is a standard serializer: it returns a JSON representation of the subscription properties, providing a useful shortcut.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5fc22adc2bac42d8534d06bb29968a05dc3d139" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toJSON()&lt;/code&gt; method of the &lt;a href=&quot;../url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the whole URL. It returns the same string as the &lt;code&gt;href&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a743fbc8bfe79698ea43d3a84487cad6be6a5fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toJSON()&lt;/code&gt; property of the &lt;a href=&quot;../paymentaddress&quot;&gt;&lt;code&gt;PaymentAddress&lt;/code&gt;&lt;/a&gt; interface is a standard serializer that returns a JSON representation of the PaymentAddress object's properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0948dcda6885ada252c4f09cff247cdefd0cbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;toRange()&lt;/code&gt; property of the &lt;a href=&quot;../staticrange&quot;&gt;&lt;code&gt;StaticRange&lt;/code&gt;&lt;/a&gt; interface converts the &lt;code&gt;StaticRange&lt;/code&gt; object to a &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16df0a21435b96958efc68ca70f48cc7429563a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;top&lt;/code&gt; property of the &lt;a href=&quot;../scrolltooptions&quot;&gt;&lt;code&gt;ScrollToOptions&lt;/code&gt;&lt;/a&gt; dictionary specifies the number of pixels along the Y axis to scroll the window or element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e7d9b0f516ad1c4692adeb5c18b2e7e89f7330" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;topLevelOrigin&lt;/code&gt; read-only property of the &lt;a href=&quot;../paymentrequestevent&quot;&gt;&lt;code&gt;PaymentRequestEvent&lt;/code&gt;&lt;/a&gt; interface returns the top-level origin where the &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; object was initialized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fd0b82bb5c6ed227827ddfc8ab474b2539832b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;total&lt;/code&gt; readonly property of the &lt;a href=&quot;../paymentrequestevent&quot;&gt;&lt;code&gt;PaymentRequestEvent&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentCurrencyAmount&quot;&gt;&lt;code&gt;PaymentCurrencyAmount&lt;/code&gt;&lt;/a&gt; object containing the total amount being requested for payment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e71f9e48826c88f5862a12deaaee747b1eca97" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;track&lt;/code&gt; event includes a &lt;a href=&quot;../rtctrackevent/streams&quot;&gt;&lt;code&gt;streams&lt;/code&gt;&lt;/a&gt; property containing an array of the streams the track is a member of (one track can be part of many streams). We take the first stream and attach it to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03ca5591ababe2e69728ddb8202bdebb68ac1c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;track&lt;/code&gt; read-only property of the &lt;a href=&quot;../imagecapture&quot;&gt;&lt;code&gt;ImageCapture&lt;/code&gt;&lt;/a&gt; interface returns a reference to the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; passed to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ImageCapture/ImageCapture&quot;&gt;&lt;code&gt;ImageCapture()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d485222ae55834f50d000c3914959c1e7f45fcfe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;track&lt;/code&gt; read-only property of the &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; interface returns the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; associated with the current &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf4b28a4e9218da645f2c3e59b0aacd59f48509" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;track&lt;/code&gt; read-only property of the &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; interface returns the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; which is being handled by the RTCRtpSender. If track is null, the RTCRtpSender doesn't transmit anything.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cda013ddca7dc3b102dcee926b1fcba57ebc4ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transaction()&lt;/code&gt; function takes two arguments (though one is optional) and returns a transaction object. The first argument is a list of object stores that the transaction will span. You can pass an empty array if you want the transaction to span all object stores, but don't do it because the spec says an empty array should generate an InvalidAccessError. If you don't specify anything for the second argument, you get a read-only transaction. Since you want to write to it here you need to pass the &lt;code&gt;&quot;readwrite&quot;&lt;/code&gt; flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98adc98e4a09b1402eb34520588a710779207b38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transaction&lt;/code&gt; method of the &lt;a href=&quot;../idbdatabase&quot;&gt;&lt;code&gt;IDBDatabase&lt;/code&gt;&lt;/a&gt; interface immediately returns a transaction object (&lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) containing the &lt;a href=&quot;../idbtransaction/objectstore&quot;&gt;&lt;code&gt;IDBTransaction.objectStore&lt;/code&gt;&lt;/a&gt; method, which you can use to access your object store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ea3a81e3e9b1af885e4e668b887cd38301a0b15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transaction&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; interface returns the transaction object to which this object store belongs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fd60869a37fd0a2284b6510682934f7e512a2b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transaction&lt;/code&gt; read-only property of the IDBRequest interface returns the transaction for the request, that is, the transaction the request is being made inside.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72fe3168a884d599e0c7b436712ec451e1232d2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transferControlToOffscreen()&lt;/code&gt;method has been added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc6ce8b34644927634e6c1b7cef5728d442840b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transferIn()&lt;/code&gt; method of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/promise&quot;&gt;&lt;code&gt;promise&lt;/code&gt;&lt;/a&gt; that resolves with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/USBTransferInResult&quot;&gt;&lt;code&gt;USBTransferInResult&lt;/code&gt;&lt;/a&gt; when bulk or interrupt data is transmitted to the USB device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec98dd662481cfe3a8312f408dc914c82668f645" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transferOut()&lt;/code&gt; method of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/promise&quot;&gt;&lt;code&gt;promise&lt;/code&gt;&lt;/a&gt; that resolves with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/USBTransferOutResult&quot;&gt;&lt;code&gt;USBTransferOutResult&lt;/code&gt;&lt;/a&gt; when bulk or interrupt data is transmitted from the USB device.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb2b2334a23bb277e0f2d568cd0c1b1b70d8b989" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transferSize&lt;/code&gt; read-only property represents the size (in octets) of the fetched resource. The size includes the response header fields plus the response payload body (as defined by &lt;a href=&quot;http://httpwg.github.io/specs/rfc7230.html#message.body&quot;&gt;RFC7230&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111954c2f45c3ff29dfaa27a8c70d17c48cd399e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;twist&lt;/code&gt; read-only property of the &lt;a href=&quot;../pointerevent&quot;&gt;&lt;code&gt;PointerEvent&lt;/code&gt;&lt;/a&gt; interface represents the clockwise rotation of the transducer (e.g. pen stylus) around its major axis in degrees, with a value in the range 0 to 359.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe959a40bd46cb2f534d9c3a74804779d15cb75c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; attribute can take one more value, &lt;code&gt;&quot;menu&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4bdad2dcb5bab57c25045ea3b46ea5a0e2442d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; attribute is no more read-only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e552d079021be7596815e7f7301493868141d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; attribute of the return value will be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f961f5861b47915f6f9c932c5e08089679de6fd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; field's value is set when the &lt;a href=&quot;rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate()&lt;/code&gt;&lt;/a&gt; constructor is used. You can't specify the value of &lt;code&gt;type&lt;/code&gt; in the options object, but the address is automatically extracted from the &lt;a href=&quot;../rtcicecandidateinit/candidate&quot;&gt;&lt;code&gt;candidate&lt;/code&gt;&lt;/a&gt; a-line, if it's formatted properly, being taken from its &lt;code&gt;cand-type&lt;/code&gt; field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa2be49ad4e0d31cf73b96b20cc1a00420930cbd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter now accepts &lt;code&gt;ext.HALF_FLOAT_OES&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d18503851233db85d8001340f2d69e3c65275de6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter now accepts &lt;code&gt;gl.UNSIGNED_INT&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d347eff97c7cd9fce31ab1bb677f72d4fd4e1a35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; parameter now accepts &lt;code&gt;gl.UNSIGNED_SHORT&lt;/code&gt;, &lt;code&gt;gl.UNSIGNED_INT&lt;/code&gt;, and &lt;code&gt;ext.UNSIGNED_INT_24_8_WEBGL&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf056019c1e1fa976191c02dd5ed6551950fde8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; property of a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; object provides the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Complete_list_of_MIME_types&quot;&gt;MIME type&lt;/a&gt; of the file. It returns an empty string if the type couldn't determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a24db30ec43f4a090032c54eb669b227d0a8d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; property of the &lt;a href=&quot;../biquadfilternode&quot;&gt;&lt;code&gt;BiquadFilterNode&lt;/code&gt;&lt;/a&gt; interface is a string (enum) value defining the kind of filtering algorithm the node is implementing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf199cd3577612b82098475ffc41802cd31423cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; property of the &lt;a href=&quot;../credential&quot;&gt;&lt;code&gt;Credential&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the credential's type. Valid values are &lt;code&gt;password&lt;/code&gt; and &lt;code&gt;federated&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de315ed2168f9ee796a5bb26684242a78e53280" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; property of the &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; interface specifies what shape of &lt;a href=&quot;https://en.wikipedia.org/wiki/waveform&quot;&gt;waveform&lt;/a&gt; the oscillator will output. There are several common waveforms available, as well as an option to specify a custom waveform shape. The shape of the waveform will affect the tone that is produced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b188af3b2059bac0d5a835112769f36b4f3f5d90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; read-only property of the &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; interface contains the type of the response. It can be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a46f9f96353ec52a35e620a235260c8e85f362" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; read-only property of the &lt;a href=&quot;../screenorientation&quot;&gt;&lt;code&gt;ScreenOrientation&lt;/code&gt;&lt;/a&gt; interface returns the document's current orientation type, one of &quot;portrait-primary&quot;, &quot;portrait-secondary&quot;, &quot;landscape-primary&quot;, or &quot;landscape-secondary&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="326b1ec6b73976966753c99d99bbdd768082b813" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; read-only property of the &lt;a href=&quot;../selection&quot;&gt;&lt;code&gt;Selection&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; describing the type of the current selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b93902494ed912f98323b9ca611a5e9d1cdc67d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;type&lt;/code&gt; read-only property returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;string&lt;/code&gt;&lt;/a&gt; representing the type of navigation. The value must be one of the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b600c290771dcb3b114b485a6d6681a774b2961f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uScalingFactor&lt;/code&gt; uniform &amp;mdash; a 2-component vertex &amp;mdash; receives the horizontal and vertical scaling factors from the variable &lt;code&gt;currentScale&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e87d619f66b74708db0e2590d3d19774120ffe66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unique&lt;/code&gt; read-only property returns a boolean that states whether the index allows duplicate keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e3d247d7840ab106e841a5f8665eb650acb2b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unload&lt;/code&gt; event is raised when the window is unloading its content and resources. The resources removal is processed &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;unload&lt;/code&gt; event occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f24d3d82d5050e720ec9e3b8583aef403aeef21" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unloadEventEnd&lt;/code&gt; read-only property returns a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; representing the time value equal to the time immediately after the user agent finishes the unload event of the previous document. If there is no previous document, this property value is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b93e57cb5ff33268b0459118c7ebb23476697f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unloadEventStart&lt;/code&gt; read-only property returns a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;timestamp&lt;/code&gt;&lt;/a&gt; representing the time value equal to the time immediately before the user agent starts the unload event of the previous document. If there is no previous document, this property returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c2756b3db329b05a72f9334dc19a4b22678036" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unlock()&lt;/code&gt; method of the &lt;a href=&quot;../keyboard&quot;&gt;&lt;code&gt;Keyboard&lt;/code&gt;&lt;/a&gt; interface unlocks all keys captured by the &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Keyboard.lock()&lt;/code&gt;&lt;/a&gt; method and returns synchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf9a5d48c7fa39cc83c959ab6bf09c3e10045ac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unlock()&lt;/code&gt; property of the &lt;a href=&quot;../screenorientation&quot;&gt;&lt;code&gt;ScreenOrientation&lt;/code&gt;&lt;/a&gt; interface unlocks the orientation of the containing document from its default orientation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c29fca289cc219e5ee893d6c8343dec282f3e9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;unsubscribe()&lt;/code&gt; method of the &lt;a href=&quot;../pushsubscription&quot;&gt;&lt;code&gt;PushSubscription&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; when the current subscription is successfully unsubscribed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82534b626a28cb8c8647c2950f8840fde88b96f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;upDegrees&lt;/code&gt; read-only property of the &lt;a href=&quot;../vrfieldofview&quot;&gt;&lt;code&gt;VRFieldOfView&lt;/code&gt;&lt;/a&gt; interface returns the number of degrees upwards that the field of view extends in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40ec3595e83313082c3acdb2df8b666c7dd9907" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;upX&lt;/code&gt; read-only property of the &lt;a href=&quot;../audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; interface is an &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing the x value of the direction vector defining the up direction the listener is pointing in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c0788c7dd187f22e8b0bb2936bbba396495a1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;upY&lt;/code&gt; read-only property of the &lt;a href=&quot;../audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; interface is an &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing the y value of the direction vector defining the up direction the listener is pointing in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb92f9e3555f05d973e7c51d7210b139ae9a1a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;upZ&lt;/code&gt; read-only property of the &lt;a href=&quot;../audiolistener&quot;&gt;&lt;code&gt;AudioListener&lt;/code&gt;&lt;/a&gt; interface is an &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; representing the z value of the direction vector defining the up direction the listener is pointing in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388da52127ffe904a721f597a11b980be12b341d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update()&lt;/code&gt; method of the &lt;a href=&quot;../idbcursor&quot;&gt;&lt;code&gt;IDBCursor&lt;/code&gt;&lt;/a&gt; interface returns an &lt;a href=&quot;../idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; object, and, in a separate thread, updates the value at the current position of the cursor in the object store. If the cursor points to a record that has just been deleted, a new record is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da58ec9d92573f99129a08308a7be3bb4fac33fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;updateDisplay()&lt;/code&gt; function is responsible for drawing the contents of the progress box and the log. It's called by the browser when the DOM is in a safe condition for us to apply changes during the process of rendering the next frame.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d26075c0877592289885cac9a18d782accdfe17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;updatePlaybackRate()&lt;/code&gt;method of the &lt;a href=&quot;../web_animations_api&quot;&gt;Web Animations API&lt;/a&gt;'s &lt;a href=&quot;../animation&quot;&gt;&lt;code&gt;Animation&lt;/code&gt;&lt;/a&gt; Interface sets the speed of an animation after first synchronizing its playback position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6226fc3534e1f73f6372078b0896bfc393b1c70d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;updateTiming()&lt;/code&gt; method of the &lt;a href=&quot;../animationeffect&quot;&gt;&lt;code&gt;AnimationEffect&lt;/code&gt;&lt;/a&gt; interface updates the specified timing properties for an animation effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a035cdaca9ca4d4b96ed8bd7fe9081e923eaeab2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;updateTrackEnabledButton()&lt;/code&gt;, in this example, should be a function that finds a user interface control using the track's &lt;a href=&quot;../audiotrack/id&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/a&gt; (perhaps the app uses the track ID as the control element's ID) and the track's &lt;a href=&quot;../audiotrack/enabled&quot;&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/a&gt; flag to determine which state the control should be in now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160b7b3b3e2194665cb6020209a990c652027b3f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;updateTrackSelectedButton()&lt;/code&gt;, in this example, should be a function that finds a user interface control using the track's &lt;a href=&quot;../videotrack/id&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/a&gt; (perhaps the app uses the track ID as the control element's ID) and the track's &lt;a href=&quot;../videotrack/selected&quot;&gt;&lt;code&gt;selected&lt;/code&gt;&lt;/a&gt; flag to determine which state the control should be in now.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb145cddd2476287b74a9c4f9548f16bdb19d0b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;updateWith()&lt;/code&gt; method of the &lt;a href=&quot;../paymentrequestupdateevent&quot;&gt;&lt;code&gt;PaymentRequestUpdateEvent&lt;/code&gt;&lt;/a&gt; interface updates the details of an existing &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78a626fb3081ea3ed4ba2996b182f446928fe23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;upper&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt; interface returns the upper bound of the key range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b42350faacf483ff92d96cd9e9d6b2ee70bb6e7b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;upperBound()&lt;/code&gt; method of the &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt; interface creates a new upper-bound key range. By default, it includes the upper endpoint value and is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70eea76d547680d258cd31c8be64c0f9c7c8d56f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;upperOpen&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt; interface returns a boolean indicating whether the upper-bound value is included in the key range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6c8ff88adbf5f278de7aab1eaae1473b8bc11c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; parameter indicates the resolved URL to which the &lt;code&gt;data&lt;/code&gt; is to be transmitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afad79db875219d8fbeb8af04baa8410281f75a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; read-only property of the &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; interface contains the URL of the request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65ba2a0c19c1915e729557555c6d561882bcbe6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; read-only property of the &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; interface contains the URL of the response. The value of the &lt;code&gt;url&lt;/code&gt; property will be the final URL obtained after any redirects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1e27c06e2ae91163855593a441527a3f1e888c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; readonly property of the &lt;a href=&quot;../presentationconnection&quot;&gt;&lt;code&gt;PresentationConnection&lt;/code&gt;&lt;/a&gt; interface returns the URL used to create or reconnect to the presentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40678807843c6ffe9577b5ce85712727498189b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;usbVersionMajor&lt;/code&gt; read only property of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface is one of three properties that declare the USB protocol version supported by the device. The other two properties are USBDevice.usbVersionMinor and USBDevice.usbVersionSubminor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85f8f7d37e5b72a0545dd0c7a6b69e01a8e0071" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;usbVersionMinor&lt;/code&gt; read only property of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface is one of three properties that declare the USB protocol version supported by the device. The other two properties are USBDevice.usbVersionMajor and USBDevice.usbVersionSubminor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a48fe9d4d9465cf465b3c74e153764ffd9bf4c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;usbVersionSubminor&lt;/code&gt; read only property of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface is one of three properties that declare the USB protocol version supported by the device. The other two properties are USBDevice.usbVersionMajor and USBDevice.usbVersionMinor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb480bfe570f9406d1680c86807d19d0cb384666" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;useFinalURL&lt;/code&gt; property of the &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; interface contains a boolean stating whether this is the final URL of the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b531b5ed7a868d8e151bbba921431bbb40162fd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;utterance&lt;/code&gt; read-only property of the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; interface returns the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; instance that the event was triggered on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe5556dfe72a5a6dd63191fd493d000ad01918f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;validateResponse()&lt;/code&gt; method, below, is called once &lt;code&gt;show()&lt;/code&gt; returns, in order to look at the returned &lt;code&gt;response&lt;/code&gt; and either submit the payment or reject the payment as failed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3043b36d9a7c016ddac54b3d0851aa9828369a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; property of &lt;a href=&quot;../deviceproximityevent&quot;&gt;&lt;code&gt;DeviceProximityEvent&lt;/code&gt;&lt;/a&gt; objects provides the current distance between the device and the detected object, in centimeters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d86b9d12303925ff2a223380046ed561e99f99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; property of the &lt;a href=&quot;../csskeywordvalue&quot;&gt;&lt;code&gt;CSSKeywordValue&lt;/code&gt;&lt;/a&gt; interface returns or sets the value of the &lt;code&gt;CSSKeywordValue&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3c7b54f828aead24f5110a62602f2c01bdad05" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; property of the &lt;a href=&quot;../htmldataelement&quot;&gt;&lt;code&gt;HTMLDataElement&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; reflecting the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/data#attr-value&quot;&gt;value&lt;/a&gt;&lt;/code&gt; HTML attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5540118954aef316cd338ff3aae45018575608" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; property provides the current level of the ambient light.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92856caee33cf535b44f0a09bda64a714d46c97a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;value&lt;/code&gt; read-only property of the &lt;a href=&quot;../idbcursorwithvalue&quot;&gt;&lt;code&gt;IDBCursorWithValue&lt;/code&gt;&lt;/a&gt; interface returns the value of the current cursor, whatever that is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b9c2224548f3477624d9387c619e76d938d05a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;values&lt;/code&gt; property of the &lt;a href=&quot;../mediakeystatusmap&quot;&gt;&lt;code&gt;MediaKeyStatusMap&lt;/code&gt;&lt;/a&gt; interface returns a new Iterator object, containing values for each element in the status map, in insertion order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c713062449998be9283416c1a46bec12303cfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;values&lt;/code&gt; read-only property of the &lt;a href=&quot;../keyboardlayoutmap&quot;&gt;&lt;code&gt;KeyboardLayoutMap&lt;/code&gt;&lt;/a&gt; interface returns a new Array Iterator object that contains the values for each index in the map.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da531b0922281955772888ce8e1dea8adf56424" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vendorID&lt;/code&gt; read only property of the &lt;a href=&quot;../usbdevice&quot;&gt;&lt;code&gt;USBDevice&lt;/code&gt;&lt;/a&gt; interface is the official usg.org-assigned vendor ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed064969ea7b3ed17c956bc673d4733989e4e9fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;version&lt;/code&gt; element has been removed, as it is non-conforming.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15e40a7e8039943ff6d91e6d553e4725d681144a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;version&lt;/code&gt; property of the &lt;a href=&quot;../idbdatabase&quot;&gt;&lt;code&gt;IDBDatabase&lt;/code&gt;&lt;/a&gt; interface is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/NSPR_API_Reference/Long_Long_%2864-bit%29_Integers&quot;&gt;64-bit integer&lt;/a&gt; that contains the version of the connected database. When a database is first created, this attribute is an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12cc3de404abf0eb66950139862bba93d1d98463" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;version&lt;/code&gt; property of the &lt;a href=&quot;../idbversionchangeevent&quot;&gt;&lt;code&gt;IDBVersionChangeEvent&lt;/code&gt;&lt;/a&gt; interface returns The new version of the database in a &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/IDBTransaction#VERSION_CHANGE&quot;&gt;versionchange&lt;/a&gt; transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="049020212cfadf21e96fe1da8ec8c09f09280e52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vibrate&lt;/code&gt; read-only property of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; interface specifies a a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/API/Vibration#Vibration_patterns&quot;&gt;vibration pattern&lt;/a&gt; for the device's vibration hardware to emit when the notification fires. This is specified in the &lt;code&gt;vibrate&lt;/code&gt; option of the &lt;a href=&quot;notification&quot;&gt;&lt;code&gt;Notification()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79adb23cb5dd2e2c51610be896dc399bfe455cc9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;videoBitsPerSecond&lt;/code&gt; read-only property of the &lt;a href=&quot;../mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; interface returns the video encoding bit rate in use. This may differ from the bit rate specified in the constructor, if it was provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222a065125afe31d3b1cd8ab6eac47eb9f40e7de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;view&lt;/code&gt; getter property of the &lt;a href=&quot;../readablestreambyobrequest&quot;&gt;&lt;code&gt;ReadableStreamBYOBRequest&lt;/code&gt;&lt;/a&gt; interface returns the current view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3423a7dc196a8ac4b9092a52d09ffc59f5d90ef0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;visibilityState&lt;/code&gt; read-only property of the &lt;a href=&quot;../windowclient&quot;&gt;&lt;code&gt;WindowClient&lt;/code&gt;&lt;/a&gt; interface indicates the visibility of the current client. This value can be one of &lt;code&gt;hidden&lt;/code&gt;, &lt;code&gt;visible&lt;/code&gt;, &lt;code&gt;prerender&lt;/code&gt;, or &lt;code&gt;unloaded&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02345b2e06c42035e97f7a867cdad36502ed2f04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;visualViewport&lt;/code&gt; read-only property of the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../visualviewport&quot;&gt;&lt;code&gt;VisualViewport&lt;/code&gt;&lt;/a&gt; object representing the visual viewport for a given window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9c895c8faa310df01c5fa14d5fe988a7be263f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;voice&lt;/code&gt; property of the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; interface gets and sets the voice that will be used to speak the utterance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44bf8d36b7db0cbaa1b66c5fd4f0f733658f7233" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;volume&lt;/code&gt; property of the &lt;a href=&quot;../speechsynthesisutterance&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance&lt;/code&gt;&lt;/a&gt; interface gets and sets the volume that the utterance will be spoken at.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779d7210d52b8003c8c4d1c60c7c56ddf2ea7cc7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;wait()&lt;/code&gt; function returns a new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which resolves once the specified number of milliseconds have elapsed. It works by using an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/Arrow_functions&quot;&gt;arrow function&lt;/a&gt; which calls &lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;window.setTimeout()&lt;/code&gt;&lt;/a&gt;, specifying the promise's resolution handler as the timeout handler function. That lets us use promise syntax when using timeouts, which can be very handy when chaining promises, as we'll see later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d18b8abf5ad86b7c9f0ffe42d37dce501acbf74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;waitUntil()&lt;/code&gt; method must be initially called within the event callback, but after that it can be called multiple times, until all the promises passed to it settle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dd4c5f0d3223dde336bcf289c334b8b8005437e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;waiting&lt;/code&gt; property of the &lt;a href=&quot;../serviceworkerregistration&quot;&gt;&lt;code&gt;ServiceWorkerRegistration&lt;/code&gt;&lt;/a&gt; interface returns a service worker whose &lt;a href=&quot;../serviceworker/state&quot;&gt;&lt;code&gt;ServiceWorker.state&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;installed&lt;/code&gt;. This property is initially set to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1804739e90aae1ec3302b52b3c4db0213883b4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webdriver&lt;/code&gt; read-only property of the &lt;a href=&quot;../navigator&quot;&gt;&lt;code&gt;navigator&lt;/code&gt;&lt;/a&gt; interface indicates whether the user agent is controlled by automation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485620322f98fb001f366a84ee083034814578c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; are the proportions of the video.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5faaf05ae4d4c36cdc25246e1175aa67980d27ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;width&lt;/code&gt; read-only property of the &lt;a href=&quot;../pointerevent&quot;&gt;&lt;code&gt;PointerEvent&lt;/code&gt;&lt;/a&gt; interface represents the width of the pointer's contact geometry along the x-axis, measured in CSS pixels. Depending on the source of the pointer device (such as a finger), for a given pointer, each event may produce a different value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca970356ed5b6cbe7ddc870679b8d466e8ac70f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;width&lt;/code&gt; read-only property of the &lt;a href=&quot;../visualviewport&quot;&gt;&lt;code&gt;VisualViewport&lt;/code&gt;&lt;/a&gt; interface returns the width of the visual viewport, in CSS pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73de216479d9ae1a0d4f563ab21287e75d9bd330" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;window.cancelIdleCallback()&lt;/code&gt; method cancels a callback previously scheduled with &lt;a href=&quot;requestidlecallback&quot;&gt;&lt;code&gt;window.requestIdleCallback()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37bfbff46a4774d02fbf91c1fde362631b920de6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;window.getComputedStyle()&lt;/code&gt; method returns an object that reports the values of all CSS properties of an element after applying active stylesheets and resolving any basic computation those values may contain. Individual CSS property values are accessed through APIs provided by the object or by simply indexing with CSS property names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d585506d3bdeea643540a4fb6f6a715f03eca86f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;window.innerHeight&lt;/code&gt; property is read only; it has no default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848f951cb5ee05ad4a1bd882a93619d7a5e88cfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;window.innerWidth&lt;/code&gt; property is read only; it has no default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04273ff471e7e38b8e335b883412e633c39e6ca5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;window.navigator.appVersion&lt;/code&gt;, &lt;code&gt;window.navigator.appName&lt;/code&gt; and &lt;code&gt;window.navigator.userAgent&lt;/code&gt; properties have been used in &quot;browser sniffing&quot; code: scripts that attempt to find out what kind of browser you are using and adjust pages accordingly. This lead to the current situation, where browsers had to return fake values from these properties in order not to be locked out of some websites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa98c53d30a1488ed9807a54e4f82d5c95459f1d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;window.navigator.userAgent&lt;/code&gt; property may also contain the version number (for example &quot;&lt;code&gt;Mozilla/5.0 (Windows; U; Win98; en-US; rv:0.9.2) Gecko/20010725 Netscape 6/6.1&lt;/code&gt;&quot;), but you should be aware of how easy it is to change the user agent string and &quot;spoof&quot; other browsers, platforms, or user agents, and also how cavalier the browser vendor themselves are with these properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c034a7d1945a8bc4a2a5de0a6b91298eefed5f66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;window.ondragdrop&lt;/code&gt; property and the &lt;code&gt;ondragdrop&lt;/code&gt; attribute are not implemented in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/en/Gecko&quot;&gt;Gecko&lt;/a&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=112288&quot;&gt;bug 112288&lt;/a&gt;), you have to use &lt;code&gt;addEventListener&lt;/code&gt;. See &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/en/DOM/element.addEventListener&quot;&gt;addEventListener&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c17572e3e3c6fb11027180ad968e4129222a1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;window.open()&lt;/code&gt; method gives a main window a reference to a secondary window; the &lt;a href=&quot;opener&quot;&gt;opener&lt;/a&gt; property gives a secondary window a reference to its main window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ff24228bc2a57c5833abd93d729778329822f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;window.postMessage()&lt;/code&gt; method safely enables cross-origin communication between &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; objects; &lt;em&gt;e.g.,&lt;/em&gt; between a page and a pop-up that it spawned, or between a page and an iframe embedded within it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0c02b36984551947d1ef1135a2a5a0c27651d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;window.requestAnimationFrame()&lt;/code&gt; method tells the browser that you wish to perform an animation and requests that the browser call a specified function to update an animation before the next repaint. The method takes a callback as an argument to be invoked before the repaint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5fe950e1fe4f9e5d9adcc0aa6f333d9025067e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;window.stop()&lt;/code&gt; stops further resource loading in the current browsing context, equivalent to the stop button in the browser.   Because of how scripts are executed, this method cannot interrupt its parent document's loading, but it will stop its images, new windows, and other still-loading objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1141bfc3114a688ab6c43314d70b9f73f64b2d62" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;window&lt;/code&gt; property of a window object points to the window object itself. Thus the following expressions all return the same window object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb863f7260a1541a39522939f8ac246a54f7588f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;workerStart&lt;/code&gt; read-only property of the &lt;a href=&quot;../performanceresourcetiming&quot;&gt;&lt;code&gt;PerformanceResourceTiming&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; immediately before dispatching the &lt;a href=&quot;../fetchevent&quot;&gt;&lt;code&gt;FetchEvent&lt;/code&gt;&lt;/a&gt; if a Service Worker thread is already running, or immediately before starting the Service Worker thread if it is not already running. If the resource is not intercepted by a Service Worker the property will always return 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4bfb85081e740014e64cc6b07e4d4cea8eefc6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;writable&lt;/code&gt; and/or &lt;code&gt;readable&lt;/code&gt; property of &lt;code&gt;transformStream&lt;/code&gt; are undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fcfd6b5df6113765d0d40b388bd6e19f70071b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;writableStream&lt;/code&gt; and/or &lt;code&gt;readableStream&lt;/code&gt; objects are not a writable stream/readable stream, or one or both of the streams are locked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06088cc5e3169f415bf2b3875c3497f109fe9e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write()&lt;/code&gt; method contains a promise including code that decodes each written chunk into a format that can be written to the UI. This is called when each chunk is actually written (see the next section).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9bd8a5a7222528802344f8ccdb854597df91c28" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;write()&lt;/code&gt; property of the &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt; interface writes a passed chunk of data to a &lt;a href=&quot;../writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt; and its underlying sink, then returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to indicate the success or failure of the write operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58f85c3cc9df7d73563eef6441ae99076991d90" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;writer.ready&lt;/code&gt; property returns a promise that resolves when the sink (the first property of the &lt;code&gt;WritableStream&lt;/code&gt; constructor) is done writing data. The data source can either write more data (line 9) or call &lt;code&gt;close()&lt;/code&gt; (line 21). Calling close() too early can prevent data from being written. This is why the example calls &lt;code&gt;writer.ready&lt;/code&gt; twice (lines 7 and 19).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf9ffc24f9305f4197e085e0eb6c82fac5ee328" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;writer.ready&lt;/code&gt; property returns a promise that resolves when the sink (the first property of the &lt;code&gt;WritableStream&lt;/code&gt; constructor) is done writing data. The data source can wither write more data (line 9) or call &lt;code&gt;close()&lt;/code&gt; (line 21). Calling close() too early can prevent data from being written. This is why the example calls &lt;code&gt;writer.ready&lt;/code&gt; twice (lines 7 and 19).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="766e5dad13b5e4da0fd920c4ebf9def0a5372f26" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; coordinates should be clear enough. &lt;code&gt;radius&lt;/code&gt; and &lt;code&gt;startAngle&lt;/code&gt; are fixed. The &lt;code&gt;endAngle&lt;/code&gt; starts at 180 degrees (half a circle) in the first column and is increased by steps of 90 degrees, culminating in a complete circle in the last column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eeff65d55b2d69ad6f3fe073445921a891a2044" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; parameters in both of these methods are the coordinates of the end point. &lt;code&gt;cp1x&lt;/code&gt; and &lt;code&gt;cp1y&lt;/code&gt; are the coordinates of the first control point, and &lt;code&gt;cp2x&lt;/code&gt; and &lt;code&gt;cp2y&lt;/code&gt; are the coordinates of the second control point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a12fba920761856f546b9653bce7995ad4edf36" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt; coordinate for the new &lt;code&gt;DOMPoint&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0af3cd70f094cdad1e502c690476ed362321f94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt; coordinate of the &lt;code&gt;DOMRect&lt;/code&gt;'s origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5d434f4f469c68baf12e230c435a3a7195db6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt; coordinate of the &lt;code&gt;DOMRectReadOnly&lt;/code&gt;'s origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501c3407e078d880dd79f5669e927ba19ce7a132" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt; property of the &lt;a href=&quot;../csspositionvalue&quot;&gt;&lt;code&gt;CSSPositionValue&lt;/code&gt;&lt;/a&gt; interface returns returns the item's position along the web page's horizontal axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb9cf5c3db3212ef79f278e471a585ea71a1be39" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt; read-only property of the &lt;a href=&quot;../accelerometer&quot;&gt;&lt;code&gt;Accelerometer&lt;/code&gt;&lt;/a&gt; interface returns a double precision integer containing the acceleration of the device along the its x axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72009e2cac13c45f76a87602e2e59017cd218ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt; read-only property of the &lt;a href=&quot;../gyroscope&quot;&gt;&lt;code&gt;Gyroscope&lt;/code&gt;&lt;/a&gt; interface returns a double precision integer containing the angular velocity of the device along the its x axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf4167d4fceade0db2ff47269240b77b2938657" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt; read-only property of the &lt;a href=&quot;../linearaccelerationsensor&quot;&gt;&lt;code&gt;LinearAccelerationSensor&lt;/code&gt;&lt;/a&gt; interface returns a double precision integer containing the linear acceleration of the device along the device's x axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d71347929010c6b97ddda7e7186859befcfd933" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;x&lt;/code&gt; read-only property of the &lt;a href=&quot;../magnetometer&quot;&gt;&lt;code&gt;Magnetometer&lt;/code&gt;&lt;/a&gt; interface returns a double precision integer containing the magnetic field around the device's x axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06f8ac28816e9fd73a5b8e6176a19b87b6130778" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;y&lt;/code&gt; coordinate for the new &lt;code&gt;DOMPoint&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dda8c49f84472863b2e3164148d5355e37d464b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;y&lt;/code&gt; coordinate of the &lt;code&gt;DOMRect&lt;/code&gt;'s origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5f9f9d6507ff1ff9448778b149c2f83d748cbf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;y&lt;/code&gt; coordinate of the &lt;code&gt;DOMRectReadOnly&lt;/code&gt;'s origin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87df337f0c6323c50e2e3344df9b1c8d58e25809" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;y&lt;/code&gt; property of the &lt;a href=&quot;../csspositionvalue&quot;&gt;&lt;code&gt;CSSPositionValue&lt;/code&gt;&lt;/a&gt; interface returns the item's position along the vertical axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d754518c8f4c26859e3cc40d5ae0d24c16f4cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;y&lt;/code&gt; read-only property of the &lt;a href=&quot;../accelerometer&quot;&gt;&lt;code&gt;Accelerometer&lt;/code&gt;&lt;/a&gt; interface returns a double precision integer containing the acceleration of the device along the its y axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493fdfcb5bfcae696ad385eafdad9449392edfc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;y&lt;/code&gt; read-only property of the &lt;a href=&quot;../gyroscope&quot;&gt;&lt;code&gt;Gyroscope&lt;/code&gt;&lt;/a&gt; interface returns a double precision integer containing the angular velocity of the device along the its y axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bf18823957819f8d906a232fb53182ab5ed4976" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;y&lt;/code&gt; read-only property of the &lt;a href=&quot;../linearaccelerationsensor&quot;&gt;&lt;code&gt;LinearAccelerationSensor&lt;/code&gt;&lt;/a&gt; interface returns a double precision integer containing the acceleration of the device along the device's y axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ecdd155fe0ddb6d8805f84ff8083fa5e91c1f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;y&lt;/code&gt; read-only property of the &lt;a href=&quot;../magnetometer&quot;&gt;&lt;code&gt;Magnetometer&lt;/code&gt;&lt;/a&gt; interface returns a double precision integer containing the magnetic field around the device's y axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e2e9e2c84e3be754ad5989e1205d14766b1fd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;z&lt;/code&gt; coordinate for the new &lt;code&gt;DOMPoint&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2bd82d2bac98f5a421a488e21d9a9ba76f4e45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;z&lt;/code&gt; read-only property of the &lt;a href=&quot;../accelerometer&quot;&gt;&lt;code&gt;Accelerometer&lt;/code&gt;&lt;/a&gt; interface returns a double precision integer containing the acceleration of the device along the its z axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f15dd1523c6411c71e67295190cfdf7785c5197a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;z&lt;/code&gt; read-only property of the &lt;a href=&quot;../gyroscope&quot;&gt;&lt;code&gt;Gyroscope&lt;/code&gt;&lt;/a&gt; interface returns a double precision integer containing the angular velocity of the device along the its z axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="792094ca901c1c7418d672a128a25e912d9c04ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;z&lt;/code&gt; read-only property of the &lt;a href=&quot;../linearaccelerationsensor&quot;&gt;&lt;code&gt;LinearAccelerationSensor&lt;/code&gt;&lt;/a&gt; interface returns a double precision integer containing the acceleration of the device along the device's z axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f152f718983daf8002fd4e8e30a2b885cc04fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;z&lt;/code&gt; read-only property of the &lt;a href=&quot;../magnetometer&quot;&gt;&lt;code&gt;Magnetometer&lt;/code&gt;&lt;/a&gt; interface returns a double precision integer containing the magnetic field around the device's z axis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19813486e4304ea6fecbeb21df8f8627cee9f073" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;&lt;code&gt;event&lt;/code&gt;&lt;/em&gt; argument of &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;EventTarget.addEventListener()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../eventtarget/removeeventlistener&quot;&gt;&lt;code&gt;EventTarget.removeEventListener()&lt;/code&gt;&lt;/a&gt; is case insensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454cc2a3dcd51f0fac00f874996ed73dc5cad156" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;drag&lt;/em&gt; event handler for element &lt;code&gt;targetElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832c460a3d770e832a22a07f452dabb799e23768" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;dragend&lt;/em&gt; event handler for element &lt;code&gt;targetElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95cfb0de76678bb9dca7dc904f9ca767f4a5966" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;dragenter&lt;/em&gt; event handler for element &lt;code&gt;targetElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92dc3a985168bea6a58534c5ac4391f3c71dadb3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;dragexit&lt;/em&gt; event handler for element &lt;code&gt;targetElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620a0bf1c5159afa33fc03a546246c4918e3f26d" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;dragleave&lt;/em&gt; event handler for element &lt;code&gt;targetElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02e85cc06e3f4c20e9a989f9b226558375d1302" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;dragstart&lt;/em&gt; event handler for element &lt;code&gt;targetElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca0e5c3230e291697a97b565ddc7f80bd1d2b49" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;drop&lt;/em&gt; event handler for element &lt;code&gt;targetElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625f3b7914fc8ac0595debcda2775ec7b86215c3" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;front vector&lt;/em&gt;, defined by the three unitless parameters &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;z&lt;/code&gt;, describes the direction of the face of the listener, that is the direction the nose of the person is pointing towards. The front vector's default value is &lt;code&gt;(0,&lt;/code&gt;&lt;code&gt;0,&lt;/code&gt;&lt;code&gt;-1)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68450120ff58bc6d74fad511b88c433391f9fd0" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;kind&lt;/em&gt; of drag data item, &lt;code&gt;string&lt;/code&gt; or &lt;code&gt;file&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437d519be95d1b320cb943c1ed0529057260d874" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;obsolete&lt;/em&gt;&lt;a href=&quot;../paymentcurrencyamount&quot;&gt;&lt;code&gt;PaymentCurrencyAmount&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;currencySystem&lt;/code&gt; is a string which specifies the standard being used to specify the &lt;a href=&quot;currency&quot;&gt;&lt;code&gt;currency&lt;/code&gt;&lt;/a&gt; the &lt;a href=&quot;value&quot;&gt;&lt;code&gt;value&lt;/code&gt;&lt;/a&gt; is specified in. For example, the default is &lt;code&gt;urn:iso:std:iso:4217&lt;/code&gt;, which specifies that the standard used is &lt;a href=&quot;https://en.wikipedia.org/wiki/ISO%204217&quot;&gt;ISO 4217&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe935e1177b7c2055de5b49cbe61383c7dc1039e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;performance observer&lt;/em&gt; interfaces allow an application to register an &lt;em&gt;observer&lt;/em&gt; for specific &lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;performance event types&lt;/code&gt;&lt;/a&gt;. When one of those event types is added to the browser's &lt;em&gt;performance timeline&lt;/em&gt;, the application is notified of the event via the observer's callback function that was specified when the observer was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58615560ad56ff71db9dd36a2434edf96688ac2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;performance observer&lt;/em&gt; interfaces allow an application to register an &lt;em&gt;observer&lt;/em&gt; for specific &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;performance event types&lt;/code&gt;&lt;/a&gt;. When one of those event types is recorded in the browser's &lt;em&gt;performance timeline&lt;/em&gt;, the application is notified of the event via the observer's callback function that was specified when the observer was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e1cae0ce3878b06dc562ad6f34c7f2864839b2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;performance observer&lt;/em&gt; interfaces allow an application to register an &lt;em&gt;observer&lt;/em&gt; for specific performance event types, and when one of those event types is recorded, the application is &lt;em&gt;notified&lt;/em&gt; of the event via the observer's callback function that was specified at the time, the observer was created. When the observer (callback) is invoked the callback's parameters include a &lt;em&gt;&lt;a href=&quot;../performanceobserverentrylist&quot;&gt;&lt;code&gt;performance observer entry list&lt;/code&gt;&lt;/a&gt;&lt;/em&gt; that only contains &lt;em&gt;observed&lt;/em&gt;&lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;performance entries&lt;/code&gt;&lt;/a&gt;. That is, the list only contains entries for the event types that were specified when the observer's &lt;a href=&quot;../performanceobserver/observe&quot;&gt;&lt;code&gt;observe()&lt;/code&gt;&lt;/a&gt; method was invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8dfddd1ca872c17a569c925bd4554e7a30782b2" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;performance observer&lt;/em&gt; interfaces allow an application to register an &lt;em&gt;observer&lt;/em&gt; for specific performance event types, and when one of those event types is recorded, the application is &lt;em&gt;notified&lt;/em&gt; of the event via the observer's callback function that was specified when the observer was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="795256c799087e898d4b2058412bd84d20910866" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;pointercancel&lt;/em&gt; event handler for element &lt;code&gt;targetElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9f70ae97d6cc7dd44b66c48df887c211f4b3d33" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;pointerenter&lt;/em&gt; event handler for element &lt;code&gt;targetElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="329f49f587671b7c89529cf2d0a0affcf1e56795" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;pointermove&lt;/em&gt; event handler for element &lt;code&gt;targetElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0664a3507dba8e22f03965e9682cd653e3e8895e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;pointerout&lt;/em&gt; event handler for element &lt;code&gt;targetElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66724b8a00a67f9e341ac96cb6c329557f450be" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;pointerover&lt;/em&gt; event handler for element &lt;code&gt;targetElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e48ca220a7a29cb78c975c60b4df1c8c3c99144" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;pointerup&lt;/em&gt; event handler for element &lt;code&gt;targetElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11981fb877da7d0d8233830f844d801de76b62e" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;target element&lt;/em&gt; of the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; event needs an &lt;a href=&quot;../globaleventhandlers/ondrop&quot;&gt;&lt;code&gt;ondrop&lt;/code&gt;&lt;/a&gt; global event handler. The following code snippet shows how this is done with a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7852926fc7c472e90859ff955538ab8910bc571a" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;touchcancel&lt;/em&gt; event handler for element &lt;code&gt;someElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70b508520a21e47ab28c8f2c3416a400fa07e1dc" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;touchend&lt;/em&gt; event handler for element &lt;code&gt;targetElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f538a93cc6889516eab9b2749aaa469da7c8fee1" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;touchmove&lt;/em&gt; event handler for element &lt;code&gt;someElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eed3383703df38356a519075e1b348238d96bc7" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;touchstart&lt;/em&gt; event handler for element &lt;code&gt;someElement&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00e39428e46c44eb0a4ab66dcb05711c46b73fc" translate="yes" xml:space="preserve">
          <source>The &lt;em&gt;up vector&lt;/em&gt;, defined by three unitless parameters &lt;code&gt;xUp&lt;/code&gt;, &lt;code&gt;yUp&lt;/code&gt; and &lt;code&gt;zUp&lt;/code&gt;, describes the direction of the top of the listener's head. The up vector's default value is &lt;code&gt;(0,&lt;/code&gt;&lt;code&gt;1,&lt;/code&gt;&lt;code&gt;0)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84f1afef07d4d54875e7faa61fa18ba275731cf" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;&lt;strong&gt;enabled&lt;/strong&gt;&lt;/code&gt; specifies whether or not the described audio track is currently enabled for use. If the track is disabled by setting &lt;code&gt;enabled&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, the track is muted and does not produce audio.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a288fbfe7a79cfcb5a71353a67fb7ec50e3f08" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../audiotracklist&quot;&gt;&lt;code&gt;AudioTrackList&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; method &lt;code&gt;getTrackById()&lt;/code&gt; returns the first &lt;a href=&quot;../audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt; object from the track list whose &lt;a href=&quot;../audiotrack/id&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/a&gt; matches the specified string. This lets you find a specified track if you know its ID string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d1894caaf6cc996f839e83f065c61faf5e572d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../audiotracklist&quot;&gt;&lt;code&gt;AudioTrackList&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;onaddtrack&lt;/code&gt; is an event handler which is called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; event occurs, indicating that a new audio track has been added to the media element whose audio tracks the &lt;code&gt;AudioTrackList&lt;/code&gt; represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351b26401368e73764a05c50ca4467505f1bc465" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../audiotracklist&quot;&gt;&lt;code&gt;AudioTrackList&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;onchange&lt;/code&gt; is an event handler which is called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; event occurs, indicating that one or more of the &lt;a href=&quot;../audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt;s in the &lt;code&gt;AudioTrackList&lt;/code&gt; have been enabled or disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb35c4e7533783747502759f961d0c0fb727987" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../audiotracklist&quot;&gt;&lt;code&gt;AudioTrackList&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;code&gt;onremovetrack&lt;/code&gt; event handler is called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; event occurs, indicating that an audio track has been removed from the media element, and therefore also from the &lt;code&gt;AudioTrackList&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d5016ddd49501fd924e5f889c1106c09d00c61" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../clipboard&quot;&gt;&lt;code&gt;Clipboard&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface's &lt;code&gt;readText()&lt;/code&gt; method returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which resolves with a copy of the textual contents of the system clipboard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c8d171b1fe8b7cc322916f735012f0c861269f" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../dompointinit&quot;&gt;&lt;code&gt;DOMPointInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary's &lt;code&gt;&lt;strong&gt;w&lt;/strong&gt;&lt;/code&gt; property is used to specify the &lt;em&gt;w&lt;/em&gt; perspective value of a point in space when either creating or serializing to JSON a &lt;a href=&quot;../dompoint&quot;&gt;&lt;code&gt;DOMPoint&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../dompointreadonly&quot;&gt;&lt;code&gt;DOMPointReadOnly&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdeb700f1b9c6f615bca3bb2640405de3efe385d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../dompointinit&quot;&gt;&lt;code&gt;DOMPointInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary's &lt;code&gt;&lt;strong&gt;x&lt;/strong&gt;&lt;/code&gt; property is used to specify the x component of a point in 2D or 3D space when either creating or serializing a &lt;a href=&quot;../dompoint&quot;&gt;&lt;code&gt;DOMPoint&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../dompointreadonly&quot;&gt;&lt;code&gt;DOMPointReadOnly&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81429cc5b29094b5138b01e3ba126422f8c9a689" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../dompointinit&quot;&gt;&lt;code&gt;DOMPointInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary's &lt;code&gt;&lt;strong&gt;y&lt;/strong&gt;&lt;/code&gt; property is used to specify the &lt;em&gt;y&lt;/em&gt;-coordinate of a point in 2D or 3D space when either creating or serializing to JSON a &lt;a href=&quot;../dompoint&quot;&gt;&lt;code&gt;DOMPoint&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../dompointreadonly&quot;&gt;&lt;code&gt;DOMPointReadOnly&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19cdb94d1606a6b9beee575fba22f84f003dab24" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../dompointinit&quot;&gt;&lt;code&gt;DOMPointInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary's &lt;code&gt;&lt;strong&gt;z&lt;/strong&gt;&lt;/code&gt; property is used to specify the &lt;em&gt;z&lt;/em&gt;-coordinate of a point in 2D or 3D space when either creating or serializing to JSON a &lt;a href=&quot;../dompoint&quot;&gt;&lt;code&gt;DOMPoint&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../dompointreadonly&quot;&gt;&lt;code&gt;DOMPointReadOnly&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e281fecdc181efec48fe5faacaf0284f82b0cec" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../htmlvideoelement&quot;&gt;&lt;code&gt;HTMLVideoElement&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; method &lt;code&gt;&lt;strong&gt;getVideoPlaybackQuality()&lt;/strong&gt;&lt;/code&gt; creates and returns a &lt;a href=&quot;../videoplaybackquality&quot;&gt;&lt;code&gt;VideoPlaybackQuality&lt;/code&gt;&lt;/a&gt; object containing metrics about the current quality of the video.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d93bd3069b82dd7cbfedfa10fb508013d7f4d41" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../mutationobserverinit&quot;&gt;&lt;code&gt;MutationObserverInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary's optional &lt;code&gt;attributeFilter&lt;/code&gt; property is an array of strings specifying the names of the attributes whose values are to be monitored for changes. If this property is specified, there's no need to also set &lt;a href=&quot;attributes&quot;&gt;&lt;code&gt;attributes&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;true&lt;/code&gt;, as it's implied.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9eec0f61176c64a9668f100a55cb66035fe7821" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../mutationobserverinit&quot;&gt;&lt;code&gt;MutationObserverInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary's optional &lt;code&gt;attributeOldValue&lt;/code&gt; property is used to specify whether or not to record the prior value of the altered attribute in &lt;a href=&quot;../mutationrecord&quot;&gt;&lt;code&gt;MutationRecord&lt;/code&gt;&lt;/a&gt; objects denoting attribute value changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c86e8c5bc6ca3d7ae1a03cf8ef52efb5ecb6b6ee" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../mutationobserverinit&quot;&gt;&lt;code&gt;MutationObserverInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary's optional &lt;code&gt;attributes&lt;/code&gt; property is used to specify whether or not to watch for attribute value changes on the node or nodes being observed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf9d956b74bf6ae1d3c7a2e2efdf77d430237da" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../mutationobserverinit&quot;&gt;&lt;code&gt;MutationObserverInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary's optional &lt;code&gt;characterData&lt;/code&gt; property is used to specify whether or not to monitor the node or nodes being observed for changes to their textual contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38edd93a51a1d519006ae4341f6892dd436cfdea" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../mutationobserverinit&quot;&gt;&lt;code&gt;MutationObserverInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary's optional &lt;code&gt;characterDataOldValue&lt;/code&gt; property is used to specify whether or not the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord/oldValue&quot;&gt;&lt;code&gt;MutationRecord.oldValue&lt;/code&gt;&lt;/a&gt; property for DOM mutations should be set to the previous value of text nodes which changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023bcaf0b2f9cd03d0374035e8314b9da0ccddb3" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../mutationobserverinit&quot;&gt;&lt;code&gt;MutationObserverInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary's optional &lt;code&gt;childList&lt;/code&gt; property indicates whether or not to monitor the specified node or nodes for the addition or removal of new child nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa813b06c33e9ef8f38498f4adefe576e11bc4f1" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../mutationobserverinit&quot;&gt;&lt;code&gt;MutationObserverInit&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary's optional &lt;code&gt;subtree&lt;/code&gt; property can be set to &lt;code&gt;true&lt;/code&gt; to monitor the targeted node &lt;em&gt;and&lt;/em&gt; all of its descendants. The default value, &lt;code&gt;false&lt;/code&gt;, indicates only the target node itself is to be monitored for changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba881a77717f3fc2ba1e14b4c79de1706d5e70a" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; method &lt;code&gt;&lt;strong&gt;registerProtocolHandler()&lt;/strong&gt;&lt;/code&gt; lets web sites register themselves as possible handlers for particular protocols.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4924f90e848d41cb7999ef6d776d3025055ad6bb" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface's &lt;code&gt;show()&lt;/code&gt; method instructs the user agent to begin the process of showing and handling the user interface for the payment request to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad88c393105399a1039d0a2ad6ef79afff1d3a3" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface's read-only &lt;code&gt;foundation&lt;/code&gt; property is a string which uniquely identifies the candidate across multiple transports. As such, the &lt;code&gt;foundation&lt;/code&gt; can be used to correlate candidates that are present on multiple &lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011dea67ab2bbd45b844ec587d1e08b885c09fbd" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface's read-only &lt;code&gt;ip&lt;/code&gt; property is a string providing the address of the device which is the source of the candidate. &lt;code&gt;ip&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; by default if not otherwise specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b2802148be598d62449d8ac296252a1a8fded7" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface's read-only &lt;code&gt;port&lt;/code&gt; property contains the port number on the device at the address given by &lt;a href=&quot;ip&quot;&gt;&lt;code&gt;ip&lt;/code&gt;&lt;/a&gt; at which the candidate's peer can be reached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b072aa0c9ab964772917d5e85c1654ca70d2bf" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface's read-only &lt;code&gt;priority&lt;/code&gt; property specifies the candidate's priority according to the remote peer; the higher this value is, the better the remote peer considers the candidate to be.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0190c8d628f4542967ecbf1e17467bfad318e2" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface's read-only &lt;code&gt;protocol&lt;/code&gt; property is a string which indicates whether the candidate uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/UDP&quot;&gt;UDP&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TCP&quot;&gt;TCP&lt;/a&gt; as its transport protocol. &lt;code&gt;protocol&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; by default if not specified properly in the SDP, but this is an error condition and will result in a thrown exception when you call &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt;&lt;code&gt;RTCPeerConnection.addIceCandidate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911274b3c321796acb390074cb66c125d9c455bb" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface's read-only &lt;code&gt;relatedAddress&lt;/code&gt; property is a string indicating the &lt;strong&gt;related address&lt;/strong&gt; of a relay or reflexive candidate. If the candidate is a host candidate (that is, its &lt;a href=&quot;ip&quot;&gt;&lt;code&gt;ip&lt;/code&gt;&lt;/a&gt; is in fact the real IP address of the remote peer), &lt;code&gt;relatedAddress&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00af6cd7a2550a06b4c4d555bbc346a6fbfc671b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface's read-only &lt;code&gt;relatedPort&lt;/code&gt; property indicates the port number of reflexive or relay candidates. If the candidate is a host candidate (that is, its &lt;a href=&quot;ip&quot;&gt;&lt;code&gt;ip&lt;/code&gt;&lt;/a&gt; is in fact the real IP address of the remote peer), &lt;code&gt;relatedPort&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a6f9e1af39996b1ec208a45b9f0c23bf7b17a0" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface's read-only &lt;code&gt;tcpType&lt;/code&gt; property is included on TCP candidates to provide additional details about the candidate type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56825a6060d0073d29e3f66b85fcb899e08b7655" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface's read-only &lt;code&gt;type&lt;/code&gt; specifies the type of candidate the object represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c892d56d2bf017d3dd0f2bb2a414b1fe339437c" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtciceparameters&quot;&gt;&lt;code&gt;RTCIceParameters&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary's &lt;code&gt;&lt;strong&gt;usernameFragment&lt;/strong&gt;&lt;/code&gt; property specifies the username fragment (&quot;ufrag&quot;) that uniquely identifies the corresponding ICE session for the duration of the current ICE session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02efdb759d0642372a174d63181d350777b36089" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtciceparameters&quot;&gt;&lt;code&gt;RTCIceParameters&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; dictionary's &lt;code&gt;password&lt;/code&gt; property specifies the ICE password that, in tandem with the &lt;a href=&quot;usernamefragment&quot;&gt;&lt;code&gt;usernameFragment&lt;/code&gt;&lt;/a&gt;, uniquely identifies an ICE session for its entire duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6791e8b90e5d4aa3fcf995867558fb1fbbd23b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; method &lt;code&gt;&lt;strong&gt;getLocalCandidates()&lt;/strong&gt;&lt;/code&gt; returns an array of &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; objects, one for each of the candidates that have been gathered by the local device during the current &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt; agent session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4612762e5423598cee40e811a00c7c0e9832d799" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; method &lt;code&gt;&lt;strong&gt;getLocalParameters()&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;../rtciceparameters&quot;&gt;&lt;code&gt;RTCIceParameters&lt;/code&gt;&lt;/a&gt; object which provides information uniquely identifying the local peer for the duration of the ICE session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75a83049a9fd55268deb2d891b26ea4cd033b6b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; method &lt;code&gt;&lt;strong&gt;getRemoteCandidates()&lt;/strong&gt;&lt;/code&gt; returns an array which contains one &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; for each of the candidates that have been received from the remote peer so far during the current &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt; gathering session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b876cea06ef90b4e1da8ddd43c74a1d28cb1be81" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; method &lt;code&gt;&lt;strong&gt;getRemoteParameters()&lt;/strong&gt;&lt;/code&gt; returns an &lt;a href=&quot;../rtciceparameters&quot;&gt;&lt;code&gt;RTCIceParameters&lt;/code&gt;&lt;/a&gt; object which provides information uniquely identifying the remote peer for the duration of the ICE session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cca2dce69e874d6fcaba54140d2c0f1b1fb98db" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../videotrack&quot;&gt;&lt;code&gt;VideoTrack&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;&lt;strong&gt;selected&lt;/strong&gt;&lt;/code&gt; controls whether or not a particular video track is active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c46fcad1291a84f5a128b9927f2bba981a31b49" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../videotracklist&quot;&gt;&lt;code&gt;VideoTrackList&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; method &lt;code&gt;getTrackById()&lt;/code&gt; returns the first &lt;a href=&quot;../videotrack&quot;&gt;&lt;code&gt;VideoTrack&lt;/code&gt;&lt;/a&gt; object from the track list whose &lt;a href=&quot;../videotrack/id&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/a&gt; matches the specified string. This lets you find a specified track if you know its ID string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060a62eddc24dbb351396b65bf22fa39a4333712" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../videotracklist&quot;&gt;&lt;code&gt;VideoTrackList&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;onaddtrack&lt;/code&gt; is an event handler which is called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addtrack&quot;&gt;addtrack&lt;/a&gt;&lt;/code&gt; event occurs, indicating that a new video track has been added to the media element whose video tracks the &lt;code&gt;VideoTrackList&lt;/code&gt; represents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17258a970c3a01b10c9c8b12de855de9c94851bd" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../videotracklist&quot;&gt;&lt;code&gt;VideoTrackList&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property &lt;code&gt;onchange&lt;/code&gt; is an event handler which is called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; event occurs, indicating that a &lt;a href=&quot;../videotrack&quot;&gt;&lt;code&gt;VideoTrack&lt;/code&gt;&lt;/a&gt; in the &lt;code&gt;VideoTrackList&lt;/code&gt; has been made active.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6379c1d82226f42a9e6f2f71d799c63b713132bb" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;../videotracklist&quot;&gt;&lt;code&gt;VideoTrackList&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt;&lt;code&gt;onremovetrack&lt;/code&gt; event handler is called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; event occurs, indicating that a video track has been removed from the media element, and therefore also from the &lt;code&gt;VideoTrackList&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7663607c38e0c74b454a0b7b4a04cb81ee208e9" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;htmlformelement&quot;&gt;&lt;code&gt;HTMLFormElement&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; interface represents a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt; element in the DOM; it allows access to and in some cases modification of aspects of the form, as well as access to its component elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d5af7225936cc5a46903e0384c1c763298d9c8" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;a href=&quot;https://w3c.github.io/performance-timeline/&quot;&gt;Performance Timeline&lt;/a&gt;&lt;/strong&gt; standard defines extensions to the &lt;a href=&quot;../performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface to support client-side latency measurements within applications. The standard also includes interfaces that allow an application to be notified when specific performance events occur. Together, these interfaces can be used to help identify an application's performance bottlenecks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e44a9a92f9c7f9ad4fa9e68252e92b7b585bf0" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;dfn&gt;&lt;code&gt;getAudioTracks()&lt;/code&gt;&lt;/dfn&gt;&lt;/strong&gt; method of the &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; interface returns a sequence that represents all the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; objects in this stream's &lt;code&gt;&lt;a href=&quot;https://www.w3.org/TR/mediacapture-streams/#track-set&quot;&gt;track set&lt;/a&gt;&lt;/code&gt; where &lt;a href=&quot;../mediastreamtrack/kind&quot;&gt;&lt;code&gt;MediaStreamTrack.kind&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;audio&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a12352dc89fa104601a39fec0161fc40faddcf" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;&lt;dfn&gt;&lt;code&gt;getTracks()&lt;/code&gt;&lt;/dfn&gt;&lt;/strong&gt; method of the &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; interface returns a sequence that represents all the &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; objects in this stream's &lt;code&gt;&lt;a href=&quot;https://www.w3.org/TR/mediacapture-streams/#track-set&quot;&gt;track set&lt;/a&gt;&lt;/code&gt;, regardless of &lt;a href=&quot;../mediastreamtrack/kind&quot;&gt;&lt;code&gt;MediaStreamTrack.kind&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aab8a8e810c2044b60f9464c1191e3995f5d851" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ANGLE_instanced_arrays.vertexAttribDivisorANGLE()&lt;/strong&gt; method of the &lt;a href=&quot;../webgl_api&quot;&gt;WebGL API&lt;/a&gt; modifies the rate at which generic vertex attributes advance when rendering multiple instances of primitives with &lt;a href=&quot;drawarraysinstancedangle&quot;&gt;&lt;code&gt;ext.drawArraysInstancedANGLE()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;drawelementsinstancedangle&quot;&gt;&lt;code&gt;ext.drawElementsInstancedANGLE()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f4a0495c7854e5642f5e9f9189281bb0d57c9e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Battery Status API&lt;/strong&gt;, more often referred to as the &lt;strong&gt;Battery API&lt;/strong&gt;, provides information about the system's battery charge level and lets you be notified by events that are sent when the battery level or charging status change. This can be used to adjust your app's resource usage to reduce battery drain when the battery is low, or to save changes before the battery runs out in order to prevent data loss.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227b07f8d07aa75089a2dfc2ab3bd76ec0de83b7" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Broadcast Channel API&lt;/strong&gt; allows simple communication between &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/browsing_context&quot;&gt;browsing contexts&lt;/a&gt; (that is &lt;em&gt;windows&lt;/em&gt;, &lt;em&gt;tabs&lt;/em&gt;, &lt;em&gt;frames&lt;/em&gt;, or &lt;em&gt;iframes&lt;/em&gt;) with the same &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/origin&quot;&gt;origin&lt;/a&gt; (usually pages from the same site).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84aae0d1f29fb6f6d21c83d8fc3ab2f13e02d5e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;CSS Object Model&lt;/strong&gt; is a set of APIs allowing the manipulation of CSS from JavaScript. It is much like the DOM, but for the CSS rather than the HTML. It allows users to read and modify CSS style dynamically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2b4a6e3647dae58bc935b3f2959ac78c8e0ec5b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;CSSStyleDeclaration.getPropertyCSSValue()&lt;/strong&gt; method interface returns a &lt;a href=&quot;../cssvalue&quot;&gt;&lt;code&gt;CSSValue&lt;/code&gt;&lt;/a&gt; containing the CSS value for a property. Note that it returns &lt;code&gt;null&lt;/code&gt; if the property name is a shorthand property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109a5b725e7acd2126d50b02d01eef8c82cd5cfa" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;CSSStyleDeclaration.getPropertyPriority()&lt;/strong&gt; method interface returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; that provides all explicitly set priorities on the CSS property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4a7e92d022ecc079206e6387f888fb9f6a3755" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;CSSStyleDeclaration.getPropertyValue()&lt;/strong&gt; method interface returns a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the value of a specified CSS property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c83c8513355a2e2a3296354c87e0bbb1ad05b0" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;CSSStyleDeclaration.parentRule&lt;/strong&gt; read-only property returns a &lt;a href=&quot;../cssrule&quot;&gt;&lt;code&gt;CSSRule&lt;/code&gt;&lt;/a&gt; that is the parent of this style block, e.g. a &lt;a href=&quot;../cssstylerule&quot;&gt;&lt;code&gt;CSSStyleRule&lt;/code&gt;&lt;/a&gt; representing the style for a CSS selector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17ecc9594739e37dde17d9d6f76007d91d4682f" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;CanvasRenderingContext2D&lt;/strong&gt; interface is used for drawing rectangles, text, images and other objects onto the canvas element. It provides the 2D rendering context for the drawing surface of a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a17c929930f181c0f1397b38ace4948073a6b0e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Channel Messaging API&lt;/strong&gt; allows two separate scripts running in different browsing contexts attached to the same document (e.g., two IFrames, or the main document and an IFrame, two documents via a &lt;a href=&quot;sharedworker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt;, or two workers) to communicate directly, passing messages between one another through two-way channels (or pipes) with a port at each end.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d305af62cef600434a2d6dac83dc88c4ce1cf842" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Clipboard API&lt;/strong&gt; provides the ability to respond to clipboard commands (cut, copy, and paste) as well as to asynchronously read from and write to the system clipboard. Access to the contents of the clipboard is gated behind the Permissions API; without user permission, reading or altering the clipboard contents is not permitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35381446984bff7d3ca4471626973dd396ddc39" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Cooperative Scheduling of Background Tasks API&lt;/strong&gt; (also referred to as the Background Tasks API or simply the &lt;code&gt;requestIdleCallback()&lt;/code&gt; API) provides the ability to queue tasks to be executed automatically by the user agent when it determines that there is free time to do so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f823af8f2a819131a5c0905b6e2433b95d4898" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Document.readyState&lt;/strong&gt; property of a &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt; describes the loading state of the document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d71dab25232d9dcf7847bd8e50fbb1205c2dd94" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;EXT_disjoint_timer_query&lt;/strong&gt; extension is part of the &lt;a href=&quot;webgl_api&quot;&gt;WebGL API&lt;/a&gt; and provides a way to measure the duration of a set of GL commands, without stalling the rendering pipeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2c451a5071b990017a29c08279658cc0a71e4b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Element.accessKey&lt;/strong&gt; property sets the keystroke by which a user can press to jump to this element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c02e76c46e02dd8b709db7f8d10919497dc8734" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Encoding API&lt;/strong&gt; provides a mechanism for handling text in various &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/character_encoding&quot;&gt;character encodings&lt;/a&gt;, including legacy non-&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/UTF-8&quot;&gt;UTF-8&lt;/a&gt; encodings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe913a9104dbaa8165660f67edc7e282d94108fe" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;FileReader.readyState&lt;/strong&gt; property provides the current state of the reading operation a FileReader is in. A FileReader exists in one of the following states:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6eaaf93253f1ef0b638e3e8a3fe280d6e60e311" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Fullscreen API&lt;/strong&gt; adds methods to present a specific &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; (and its descendants) in full-screen mode, and to exit full-screen mode once it is no longer needed. This makes it possible to present desired content&amp;mdash;such as an online game&amp;mdash;using the user's entire screen, removing all browser user interface elements and other applications from the screen until full-screen mode is shut off.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769f0b517ac44819178b3ed3dc4d5a1ecae92667" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Geolocation API&lt;/strong&gt; allows the user to provide their location to web applications if they so desire. For privacy reasons, the user is asked for permission to report location information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bfd220607154d73015dad4b893b3c9a46968f8" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;High Resolution Time&lt;/strong&gt; standard defines a &lt;a href=&quot;performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface that supports client-side latency measurements within applications. The &lt;a href=&quot;performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interfaces are considered &lt;em&gt;high resolution&lt;/em&gt; because they are accurate to a thousandth of a millisecond (subject to hardware or software constraints). The interfaces support a number of use cases including calculating frame-rates (potentially important in animations) and benchmarking (such as the time to load a resource).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a98a37c1763b9015a9c982023bbf574579610fd" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Media Capture and Streams&lt;/strong&gt; API, often called the &lt;strong&gt;Media Streams API&lt;/strong&gt; or simply &lt;strong&gt;MediaStream API&lt;/strong&gt;, is an API related to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebRTC&quot;&gt;WebRTC&lt;/a&gt; which provides support for streaming audio and video data. It provides the interfaces and methods for working with the streams and their constituent tracks, the constraints associated with data formats, the success and error callbacks when using the data asynchronously, and the events that are fired during the process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98bb45e8d685595233ff1015f73138566427c09" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;MediaKeyMessageEvent.messageType&lt;/strong&gt; read-only property indicates the type of message. It may be one of &lt;code&gt;license-request&lt;/code&gt;, &lt;code&gt;license-renewal&lt;/code&gt;, &lt;code&gt;license-release&lt;/code&gt;, or &lt;code&gt;individualization-request&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6857f61c3dfaaa1f19a405a1bf1fb33d5a85d1db" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;MediaStream Recording API&lt;/strong&gt;, sometimes simply referred to as the &lt;em&gt;Media Recording API&lt;/em&gt; or the &lt;em&gt;MediaRecorder API&lt;/em&gt;, is closely affiliated with the &lt;a href=&quot;media_streams_api&quot;&gt;Media Capture and Streams API&lt;/a&gt; and the &lt;a href=&quot;webrtc_api&quot;&gt;WebRTC API&lt;/a&gt;. The MediaStream Recording API makes it possible to capture the data generated by a &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; object for analysis, processing, or saving to disk. It's also surprisingly easy to work with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90667e9123cdb7e19230ce03c917d6c699108be" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Navigation Timing API&lt;/strong&gt; provides data that can be used to measure the performance of a web site. Unlike JavaScript-based libraries that have historically been used to collect similar information, the Navigation Timing API can be much more accurate and reliable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5339a653838eb1305b9a529af3d7e04b485baa5" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;OES_vertex_array_object&lt;/strong&gt; extension is part of the &lt;a href=&quot;webgl_api&quot;&gt;WebGL API&lt;/a&gt; and provides vertex array objects (VAOs) which encapsulate vertex array states. These objects keep pointers to vertex data and provide names for different sets of vertex data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d755bd4cf01060ce6d0fbf5cb12e58ddc4452ddb" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Performance Timeline&lt;/strong&gt; API defines extensions to the &lt;a href=&quot;performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface to support client-side latency measurements within applications. The extensions provide interfaces to retrieve &lt;a href=&quot;performanceentry&quot;&gt;performance entry metrics&lt;/a&gt; based on specific filter criteria. The standard also includes interfaces that allow an application to define &lt;em&gt;&lt;a href=&quot;#Performance_Observers&quot;&gt;performance observer&lt;/a&gt;&lt;/em&gt; callbacks that are notified when specific performance events are added to the browser's &lt;em&gt;performance timeline&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fba1c1910e8a33f6e126fe24aa884310c7c4189" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Pointer Lock API&lt;/strong&gt; (formerly called &lt;em&gt;Mouse Lock API&lt;/em&gt;) provides input methods based on the movement of the mouse over time (i.e., deltas), not just the absolute position of the mouse cursor in the viewport. It gives you access to raw mouse movement, locks the target of mouse events to a single element, eliminates limits on how far mouse movement can go in a single direction, and removes the cursor from view. It is ideal for first person 3D games, for example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0a1520ba71f8440f1cbd599ea1430c8025f9c7" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Push API&lt;/strong&gt; gives web applications the ability to receive messages pushed to them from a server, whether or not the web app is in the foreground, or even currently loaded, on a user agent. This lets developers deliver asynchronous notifications and updates to users that opt in, resulting in better engagement with timely new content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eecb35d3b09084d4d57f053a14215d3275de1ad" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Real-time Transport Protocol&lt;/strong&gt; (&lt;strong&gt;RTP&lt;/strong&gt;), defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc3550&quot;&gt;RFC 3550&lt;/a&gt;, is an IETF standard protocol to enable real-time connectivity for exchanging data that needs real-time priority. This article provides an overview of what RTP is and how it functions in the context of WebRTC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae397e10434e4e3802b7eadd1bcea602abc14fcc" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Resource Timing API&lt;/strong&gt; provides a way to retrieve and analyze detailed network timing data regarding the loading of an application's &lt;em&gt;resource(s)&lt;/em&gt;. An application can use the timing metrics to determine, for example, the length of time it takes to fetch a specific resource such as an &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/SVG&quot;&gt;&lt;code&gt;&amp;lt;SVG&amp;gt;&lt;/code&gt;&lt;/a&gt;, image, script, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a868795bab69af1642d7a5abd70c931957cf4ba" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ServiceWorkerGlobalScope.onmessage&lt;/strong&gt; event of the &lt;a href=&quot;../serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; interface is called whenever incoming messages are received.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a09125f17d5e2665d5857b8607728194115ad92" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ServiceWorkerGlobalScope.onnotificationclick&lt;/strong&gt; property is an event handler called whenever the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/notificationclick&quot;&gt;notificationclick&lt;/a&gt;&lt;/code&gt; event is dispatched on the &lt;a href=&quot;../serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; object, that is when a user clicks on a displayed notification spawned by &lt;a href=&quot;../serviceworkerregistration/shownotification&quot;&gt;&lt;code&gt;ServiceWorkerRegistration.showNotification()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd26b7b1fec4010e3a83929040a13f1355fbb832" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Touch&lt;/strong&gt;&lt;code&gt;Event()&lt;/code&gt; constructor creates a new &lt;a href=&quot;../touchevent&quot;&gt;&lt;code&gt;TouchEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9fc2d72ddae5164d274bf29a85d9fb093654b5" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Visual Viewport API&lt;/strong&gt; provides an explicit mechanism for querying and modifying the properties of the visual viewport. The visual viewport is the visual portion of a screen excluding on-screen keyboards, areas outside of a pinch-zoom area, or any other on-screen artifact that doesn't scale with the dimensions of a page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06d1caa39d5b3383e5719046bfe6c565e952c547" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WEBGL_lose_context.loseContext()&lt;/strong&gt; method is part of the &lt;a href=&quot;../webgl_api&quot;&gt;WebGL API&lt;/a&gt; and allows you to simulate losing the context of a &lt;a href=&quot;../webglrenderingcontext&quot;&gt;&lt;code&gt;WebGLRenderingContext&lt;/code&gt;&lt;/a&gt; context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4239b5b45adee4322216cb877f8bc6597fe1b98e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WEBGL_lose_context.restoreContext()&lt;/strong&gt; method is part of the &lt;a href=&quot;../webgl_api&quot;&gt;WebGL API&lt;/a&gt; and allows you to simulate restoring the context of a &lt;a href=&quot;../webglrenderingcontext&quot;&gt;&lt;code&gt;WebGLRenderingContext&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69b7edb11991ffd591728d020bab3764d661827" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WEBGL_lose_context&lt;/strong&gt; extension is part of the &lt;a href=&quot;webgl_api&quot;&gt;WebGL API&lt;/a&gt; and exposes functions to simulate losing and restoring a &lt;a href=&quot;webglrenderingcontext&quot;&gt;&lt;code&gt;WebGLRenderingContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a389c69cf124aef34b82b1f151ed468462d7cdc" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Web Crypto API&lt;/strong&gt; is an interface allowing a script to use cryptographic primitives in order to build systems using cryptography.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14aa4f0f898999e9d893107791af864441780f0f" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;Web Storage API&lt;/strong&gt; provides mechanisms by which browsers can store key/value pairs, in a much more intuitive fashion than using cookies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83c35b86b08b0b0bea30309c6205c3d5bc6d947" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebContextEvent&lt;/strong&gt; interface is part of the &lt;a href=&quot;webgl_api&quot;&gt;WebGL API&lt;/a&gt; and is an interface for an event that is generated in response to a status change to the WebGL rendering context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75234ba8c3fd5996fc17953feb778499969bca2d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGL2RenderingContext&lt;/strong&gt; interface provides the OpenGL ES 3.0 rendering context for the drawing surface of an HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86a15ce8ada7ee0d9254804013a56403c588009" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGLActiveInfo&lt;/strong&gt; interface is part of the &lt;a href=&quot;webgl_api&quot;&gt;WebGL API&lt;/a&gt; and represents the information returned by calling the &lt;a href=&quot;webglrenderingcontext/getactiveattrib&quot;&gt;&lt;code&gt;WebGLRenderingContext.getActiveAttrib()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;webglrenderingcontext/getactiveuniform&quot;&gt;&lt;code&gt;WebGLRenderingContext.getActiveUniform()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe30b8d86877f51db73e5d0fb7463e0920c2efd" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGLBuffer&lt;/strong&gt; interface is part of the &lt;a href=&quot;webgl_api&quot;&gt;WebGL API&lt;/a&gt; and represents an opaque buffer object storing data such as vertices or colors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7ba04ecbe5b2dcf900547bcd62824488a3e1b2" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGLFramebuffer&lt;/strong&gt; interface is part of the &lt;a href=&quot;webgl_api&quot;&gt;WebGL API&lt;/a&gt; and represents a collection of buffers that serve as a rendering destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20cd3ecbf1fa6544b0d65d75aa5d0eb5eea4f4f9" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGLRenderbuffer&lt;/strong&gt; interface is part of the &lt;a href=&quot;webgl_api&quot;&gt;WebGL API&lt;/a&gt; and represents a buffer that can contain an image, or can be source or target of an rendering operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c627f009805d626470d7e5bc1ff5b1c5968debc" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGLRenderingContext.attachShader()&lt;/strong&gt; method of the &lt;a href=&quot;../webgl_api&quot;&gt;WebGL API&lt;/a&gt; attaches either a fragment or vertex &lt;a href=&quot;../webglshader&quot;&gt;&lt;code&gt;WebGLShader&lt;/code&gt;&lt;/a&gt; to a &lt;a href=&quot;../webglprogram&quot;&gt;&lt;code&gt;WebGLProgram&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e0944739e1216550dcfef01d2ece350b6dd4b5e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGLRenderingContext.compileShader()&lt;/strong&gt; method of the &lt;a href=&quot;../webgl_api&quot;&gt;WebGL API&lt;/a&gt; compiles a GLSL shader into binary data so that it can be used by a &lt;a href=&quot;../webglprogram&quot;&gt;&lt;code&gt;WebGLProgram&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a524b9c16022e0f00d086c15674bb3a9f33228" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGLRenderingContext.createShader()&lt;/strong&gt; method of the &lt;a href=&quot;../webgl_api&quot;&gt;WebGL API&lt;/a&gt; creates a &lt;a href=&quot;../webglshader&quot;&gt;&lt;code&gt;WebGLShader&lt;/code&gt;&lt;/a&gt; that can then be configured further using &lt;a href=&quot;shadersource&quot;&gt;&lt;code&gt;WebGLRenderingContext.shaderSource()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;compileshader&quot;&gt;&lt;code&gt;WebGLRenderingContext.compileShader()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8087ef2a336434a5d0bcb32434f84d1367a4004" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGLRenderingContext.detachShader()&lt;/strong&gt; method of the &lt;a href=&quot;../webgl_api&quot;&gt;WebGL API&lt;/a&gt; detaches a previously attached &lt;a href=&quot;../webglshader&quot;&gt;&lt;code&gt;WebGLShader&lt;/code&gt;&lt;/a&gt; from a &lt;a href=&quot;../webglprogram&quot;&gt;&lt;code&gt;WebGLProgram&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7057a8b29e586bfa59bfe915d89bd27919fcab" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGLRenderingContext.getProgramInfoLog&lt;/strong&gt; returns the information log for the specified &lt;a href=&quot;../webglprogram&quot;&gt;&lt;code&gt;WebGLProgram&lt;/code&gt;&lt;/a&gt; object. It contains errors that occurred during failed linking or validation of &lt;code&gt;WebGLProgram&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06bf1eaeb5f16943dbbb46333f4a4b42b7f045a" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGLRenderingContext.getShaderInfoLog&lt;/strong&gt; returns the information log for the specified &lt;a href=&quot;../webglshader&quot;&gt;&lt;code&gt;WebGLShader&lt;/code&gt;&lt;/a&gt; object. It contains warnings, debugging and compile information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c27238e1afa5edca7caf504248a8a33c1cf6a57" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGLShader&lt;/strong&gt; is part of the &lt;a href=&quot;webgl_api&quot;&gt;WebGL API&lt;/a&gt; and can either be a vertex or a fragment shader. A &lt;a href=&quot;webglprogram&quot;&gt;&lt;code&gt;WebGLProgram&lt;/code&gt;&lt;/a&gt; requires both types of shaders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89885d189ed994e752bf95ae635b88f7f0bd2278" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGLShaderPrecisionFormat&lt;/strong&gt; interface is part of the &lt;a href=&quot;webgl_api&quot;&gt;WebGL API&lt;/a&gt; and represents the information returned by calling the &lt;a href=&quot;webglrenderingcontext/getshaderprecisionformat&quot;&gt;&lt;code&gt;WebGLRenderingContext.getShaderPrecisionFormat()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="623f9ccb901c91d6df22cd6a857e1743e2beee1a" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGLTexture&lt;/strong&gt; interface is part of the &lt;a href=&quot;webgl_api&quot;&gt;WebGL API&lt;/a&gt; and represents an opaque texture object providing storage and state for texturing operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccddfe0147710be7f7ddeffa38c2099fe7608bb7" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebGLUniformLocation&lt;/strong&gt; interface is part of the &lt;a href=&quot;webgl_api&quot;&gt;WebGL API&lt;/a&gt; and represents the location of a uniform variable in a shader program.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c8b54298c328586ae9104379ebdb294c21085f" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;WebSocket API&lt;/strong&gt; is an advanced technology that makes it possible to open a two-way interactive communication session between the user's browser and a server. With this API, you can send messages to a server and receive event-driven responses without having to poll the server for a reply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda460258e41c1ac4911ede0d774886ca259a97a" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;XMLHttpRequest.readyState&lt;/strong&gt; property returns the state an XMLHttpRequest client is in. An</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26fb5c1a3a9e25006cc3f261ab325ab1745a8c3a" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;animVal&lt;/strong&gt; property is a read only property. Internet Explorer 9 supports script-based SVG animation but it does not support declarative-based SVG animation. As a result, the &lt;strong&gt;animVal&lt;/strong&gt; property contains the same value as the &lt;strong&gt;baseVal&lt;/strong&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="235215456115836cb3ca57e2df76919ae9266c7e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;append() &lt;/strong&gt;method of the &lt;a href=&quot;../urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; interface appends a specified key/value pair as a new search parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c38fbfba3d8a5c7626193703838a91acfc502b88" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;current description&lt;/strong&gt; (which is returned by the &lt;a href=&quot;../rtcpeerconnection/currentlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.currentLocalDescription&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../rtcpeerconnection/currentremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.currentRemoteDescription&lt;/code&gt;&lt;/a&gt; properties) represents the description currently in actual use by the connection. This is the most recent connection that both sides have fully agreed to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="673596958874c446b8615ecfcb84d7a720ee101e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;delete() &lt;/strong&gt;method of the &lt;a href=&quot;../urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; interface deletes the given search parameter and its associated value, from the list of all search parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d04ae37d7a811e8d7f4f068f32261fc902416530" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;desired size&lt;/strong&gt; is the size of chunks the stream can still accept to keep the stream flowing but below the high water mark in size. After the calculation is performed, chunk generation will be slowed down/sped up as appropriate to keep the stream flowing as fast as possible while keeping the desired size above zero. If the value falls to zero (or below in the case of writable streams), it means that chunks are being generated faster than the stream can cope with, which results in problems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2815d26e419a4bb22070fa56aa4cf4437647e2" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;fragment shader&lt;/strong&gt; is called once for every pixel on each shape to be drawn, after the shape's vertices have been processed by the vertex shader. Its job is to determine the color of that pixel by figuring out which texel (that is, the pixel from within the shape's texture) to apply to the pixel, getting that texel's color, then applying the appropriate lighting to the color. The color is then returned to the WebGL layer by storing it in the special variable &lt;code&gt;gl_FragColor&lt;/code&gt;. That color is then drawn to the screen in the correct position for the shape's corresponding pixel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f3798404526ab1d9fed9f1ad3456081d516008" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;get() &lt;/strong&gt;method of the &lt;a href=&quot;../urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; interface returns the first value associated to the given search parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2b9d97e64ae85cf79343e5fa26b987f0bd82805" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;getAll() &lt;/strong&gt;method of the &lt;a href=&quot;../urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; interface returns all the values associated with a given search parameter as an array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba430e4030b7c1a8ef54efd7f2636894752d940" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;getElementsByName&lt;/strong&gt; method works differently in IE. There, &lt;code&gt;getElementsByName()&lt;/code&gt; does not return all elements which may not have a &lt;code&gt;name&lt;/code&gt; attribute (such as &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9558a61f512ee9ddae590a5f7e0e802b4eb54032" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;getElementsByName&lt;/strong&gt; method works differently in IE10 and below. There, &lt;code&gt;getElementsByName()&lt;/code&gt; also returns elements that have an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id&quot;&gt;&lt;code&gt;id&lt;/code&gt; attribute&lt;/a&gt; with the specified value. Be careful not to use the same string as both a &lt;code&gt;name&lt;/code&gt; and an &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a57f6b533ead6c7f5ac3cbccf2a93831545b1ce" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;has() &lt;/strong&gt;method of the &lt;a href=&quot;../urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; interface returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; that indicates whether a parameter with the specified name exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720eab6f9535fdebefa5b0550617c8949588cd44" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;hashchange&lt;/strong&gt; event fires when a window's hash changes (see &lt;a href=&quot;../window/location&quot;&gt;&lt;code&gt;location.hash&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a28d2fb0f37fdc3b4a268d2e01ffd01870b28f7" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;identifiedTouch&lt;/strong&gt; method returns the first &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; item in the &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt; matching the specified identifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afcb6feb9f4f1882705412de8b134bdce316a81f" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;media&lt;/strong&gt; and &lt;strong&gt;type&lt;/strong&gt; of the style may or may not be given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000982064837301ba59dd49123194b8e50bd601d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;obsolete&lt;/strong&gt;&lt;a href=&quot;../rtciceserver&quot;&gt;&lt;code&gt;RTCIceServer&lt;/code&gt;&lt;/a&gt; dictionary's &lt;code&gt;url&lt;/code&gt; property specifies the URL of a single ICE server to be used while negotiating connections. It was removed from the specification in June 2013 but is still broadly used in older examples and books, so we include documentation here to help adapt old code to new browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53abfc1d7afcc6913717b59335f7b77d5b7aead0" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;onabort&lt;/strong&gt; event handler of the &lt;a href=&quot;../idbdatabase&quot;&gt;&lt;code&gt;IDBDatabase&lt;/code&gt;&lt;/a&gt; interface handles the abort event, fired when a transaction is aborted and bubbles up to the connection object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9d648016a6c4abf51f2e2025e2f09b1905a4d5" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;onactivate&lt;/strong&gt; property of the &lt;a href=&quot;../serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; interface is an event handler fired whenever an &lt;code&gt;activate&lt;/code&gt; event occurs (when the service worker activates). This happens after installation, when the page to be controlled by the service worker refreshes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4469a49f7932e166f610b732dff082ee9229b480" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;onauxclick&lt;/strong&gt; property is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EventHandler&quot;&gt;&lt;code&gt;EventHandler&lt;/code&gt;&lt;/a&gt; called when an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/auxclick&quot;&gt;auxclick&lt;/a&gt;&lt;/code&gt; event is sent, indicating that a non-primary button has been pressed on an input device (e.g. a middle mouse button).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66197ffe4d575e8bf024b663fe8fbefb62472923" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;oncancel&lt;/strong&gt; property returns the onCancel event handler code on the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62f0cb2d32720a7b5032a0413127fb4ff3ec490" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;onclick&lt;/strong&gt; property returns the &lt;code&gt;click&lt;/code&gt; event handler code on the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca7cb8832dfaf487f1df1a1ad858217442bd546" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ondblclick&lt;/strong&gt; property returns the onDblClick event handler code on the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6acbe44fc81494309c3cf73d6d26712aba647b1" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;onfetch&lt;/strong&gt; property of the &lt;a href=&quot;../serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; interface is an event handler fired whenever a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fetch&quot;&gt;fetch&lt;/a&gt;&lt;/code&gt; event occurs (usually when the &lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.fetch&lt;/code&gt;&lt;/a&gt; method is called.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda78065fec88a03642dc746b7650849f2d8485a" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;onfocus&lt;/strong&gt; property returns the onFocus event handler code on the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25f72da5df819163934f16e1d4cb411ce027c07" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;oninstall&lt;/strong&gt; property of the &lt;a href=&quot;../serviceworkerglobalscope&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; interface is an event handler fired whenever an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/install&quot;&gt;install&lt;/a&gt;&lt;/code&gt; event occurs (when the service worker installs). This happens before activation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="956af534bf647ce4f767e0a993b96bc42440487d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;onkeypress&lt;/strong&gt; property sets and returns the onKeyPress event handler code for the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563be78dbe457d9b1e9a2f14339f5dfb840f3ae6" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;onkeyup&lt;/strong&gt; property returns the onKeyUp event handler code for the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e4b5af91d5f8c5519b786560ba76234775b4f1" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;onmousemove&lt;/strong&gt; property returns the &lt;code&gt;mousemove&lt;/code&gt; event handler code on the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd888a5990b5b5758d1b61ee7cfc3971689917f2" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;onmouseout&lt;/strong&gt; property returns the onMouseOut event handler code on the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4b26a9b63c17cbd184add3c035a185a9db4f0b9" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;onmouseover&lt;/strong&gt; property returns the onMouseOver event handler code on the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff791484ad299d48baf0077da080aebc5dd222e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;onmouseup&lt;/strong&gt; property returns the onMouseUp event handler code on the current element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05c9ef30c02aebb98036e34efa55542d49511181" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;origin&lt;/strong&gt; read-only property of the &lt;a href=&quot;../extendablemessageevent&quot;&gt;&lt;code&gt;ExtendableMessageEvent&lt;/code&gt;&lt;/a&gt; interface returns the origin of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ServiceWorkerClient&quot;&gt;&lt;code&gt;ServiceWorkerClient&lt;/code&gt;&lt;/a&gt; that sent the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9f9bfc4330921564f38167f77b0655e7d5bfce" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;payerEmail&lt;/strong&gt; read-only property of the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; interface returns the email address supplied by the user. This option is only present when the &lt;code&gt;requestPayerEmail&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt; in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentOptions&quot;&gt;&lt;code&gt;PaymentOptions&lt;/code&gt;&lt;/a&gt; object passed to the &lt;a href=&quot;../paymentrequest/paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ac529ce70def7d56693c1aea3359ebb12f879d" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;payerPhone&lt;/strong&gt; read-only property of the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; interface returns the phone number supplied by the user. This option is only present when the &lt;code&gt;requestPayerPhone&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt; in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentOptions&quot;&gt;&lt;code&gt;PaymentOptions&lt;/code&gt;&lt;/a&gt; object passed to the &lt;a href=&quot;../paymentrequest/paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5790d99982d72f8107d640760d4179041e39ad00" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;pending description&lt;/strong&gt; (returned by &lt;a href=&quot;../rtcpeerconnection/pendinglocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.pendingLocalDescription&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../rtcpeerconnection/pendingremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.pendingRemoteDescription&lt;/code&gt;&lt;/a&gt;) indicates a description which is currently under consideration following a call to &lt;code&gt;setLocalDescription()&lt;/code&gt; or &lt;code&gt;setRemoteDescription()&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a41a687660bad0b2850deb38ebe9c3a0eeee7e3" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;ports&lt;/strong&gt; read-only property of the &lt;a href=&quot;../extendablemessageevent&quot;&gt;&lt;code&gt;ExtendableMessageEvent&lt;/code&gt;&lt;/a&gt; interface returns the array containing the &lt;a href=&quot;../messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt; objects representing the ports of the associated message channel (the channel the message is being sent through.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335dc9d7840ae609e27c26d963470a87d2836b06" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;proximity events&lt;/strong&gt; are a handy way to know when a user is close to a device. These events make it possible to react to such a change, for example by shutting down the screen of a smartphone when the user is having a phone call with the device close to their ear.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d60bdafdd251f3dad504a79d1d480872857b31a" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;read-only&lt;/strong&gt;&lt;a href=&quot;../htmlselectelement&quot;&gt;&lt;code&gt;HTMLSelectElement&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;&lt;strong&gt;selectedOptions&lt;/strong&gt;&lt;/code&gt; contains a list of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option&quot;&gt;&lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;&lt;/a&gt; elements contained within the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element that are currently selected. The list of selected options is an &lt;a href=&quot;../htmlcollection&quot;&gt;&lt;code&gt;HTMLCollection&lt;/code&gt;&lt;/a&gt; object with one entry per currently selected option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b9a8b35411b874f6fd7e38f3b97def5e6024340" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;read-only&lt;/strong&gt;&lt;a href=&quot;../presentation&quot;&gt;&lt;code&gt;Presentation&lt;/code&gt;&lt;/a&gt; attribute &lt;code&gt;receiver&lt;/code&gt;, which is only available in browser contexts which are &lt;strong&gt;receiving&lt;/strong&gt; a presentation, returns the &lt;a href=&quot;../presentationreceiver&quot;&gt;&lt;code&gt;PresentationReceiver&lt;/code&gt;&lt;/a&gt; object which can be used to access and communicate with the browser context which controls the presentation. This property is always &lt;code&gt;null&lt;/code&gt; when accessed from outside a browser context which is receiving a presentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ee81a6971e694feda454c934afa43b7ec25e6b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;readyState&lt;/strong&gt; of a document can be one of following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd8b9de797736ba57e5052a69e3725e2dfbd2d4" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;set() &lt;/strong&gt;method of the &lt;a href=&quot;../urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; interface sets the value associated with a given search parameter to the given value. If there were several matching values, this method deletes the others. If the search parameter doesn't exist, this method creates it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70c22151907b612392dbf8f576c5c49e2e3906e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;source&lt;/strong&gt; read-only property of the &lt;a href=&quot;../extendablemessageevent&quot;&gt;&lt;code&gt;ExtendableMessageEvent&lt;/code&gt;&lt;/a&gt; returns a reference to the &lt;a href=&quot;../client&quot;&gt;&lt;code&gt;Client&lt;/code&gt;&lt;/a&gt; object from which the message was sent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7cd3f6190f7fc485a58ad2c4205b96ecfecf05" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;time origin&lt;/strong&gt; is a standard time which is considered to be the beginning of the current document's lifetime. It's calculated like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f71fe21ee5c0187872cc997442ac1ba6f27eec67" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;toString() &lt;/strong&gt;method of the &lt;a href=&quot;../urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; interface returns a query string suitable for use in a URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823d9c3c90001c73e7a1acec282f7993ad32339e" translate="yes" xml:space="preserve">
          <source>The &lt;var&gt;key&lt;/var&gt; is not a &lt;a href=&quot;https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#dfn-valid-key&quot;&gt;valid key&lt;/a&gt; or a &lt;a href=&quot;https://dvcs.w3.org/hg/IndexedDB/raw-file/tip/Overview.html#dfn-key-range&quot;&gt;key range&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6861c2897aed3582ee0f00eeb92f68470b473d9" translate="yes" xml:space="preserve">
          <source>The API allows for the creation of dynamic animations that can be updated on the fly as well as more straightforward, declarative animations like those CSS creates. It can be used in automated tests to ensure that your UI animations are running correctly. It opens up the browser&amp;rsquo;s rendering engine for building animation development tools like timelines. It is also a performant base on which to build a custom or commercial animation library. (See &lt;a href=&quot;https://hacks.mozilla.org/2016/08/animating-like-you-just-dont-care-with-element-animate/&quot;&gt;Animating like you just don&amp;rsquo;t care with Element.animate&lt;/a&gt;.) In some instances, it may negate the need for a fully fledged library entirely in the same way Vanilla JavaScript can be used without jQuery for many purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14887e5f4ae51c237f111776ca366db5df7fb95" translate="yes" xml:space="preserve">
          <source>The API is based on the manipulation of a &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; object representing a flux of audio- or video-related data. See an example in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebRTC/taking_webcam_photos#Get_the_video&quot;&gt;Get the video&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2743b0ad92249bf556b32ab0ace16722128a24" translate="yes" xml:space="preserve">
          <source>The API is currently only at the proposal stage &amp;mdash; the standardization process has yet to begin. You can currently find specification details of the API at Apple's &lt;a href=&quot;https://webkit.org/blog/8124/introducing-storage-access-api/&quot;&gt;Introducing Storage Access API&lt;/a&gt; blog post, and &lt;a href=&quot;https://github.com/whatwg/html/issues/3338&quot;&gt;WHATWG HTML issue 338 &amp;mdash; Proposal: Storage Access API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e56a14cd807b006aa9a092c0ccbb0fdbed3adf" translate="yes" xml:space="preserve">
          <source>The API is designed to limit the potential storage exceptions to origins for which the user has shown an intent to interact. This is enforced through the following constraints:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3277da5d00a582ce602ce03fde33f4c5d94d560" translate="yes" xml:space="preserve">
          <source>The API provides two interfaces: &lt;a href=&quot;textdecoder&quot;&gt;&lt;code&gt;TextDecoder&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;textencoder&quot;&gt;&lt;code&gt;TextEncoder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befb2f9a30a0533d8a4f3b026349e3bcf8c439f0" translate="yes" xml:space="preserve">
          <source>The APIs accepting &lt;code&gt;Blob&lt;/code&gt; objects are also listed on the &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f073d038c05615af11901298bd298bb4303d80a2" translate="yes" xml:space="preserve">
          <source>The AnimationPlaybackEvent interface of the &lt;a href=&quot;web_animations_api&quot;&gt;Web Animations API&lt;/a&gt; represents animation events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d330fd164d040682cf674830968c2722d3f271c" translate="yes" xml:space="preserve">
          <source>The Background Tasks API adds only one new interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3daa54bdb4b4c278d5ada5c160c7951d4a84f85a" translate="yes" xml:space="preserve">
          <source>The Battery API was supported on Android, Windows, and Linux with UPower installed. Support for macOS was available starting with Firefox 18.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a31e942e67e96a04cf5ed0f6c149709b075955" translate="yes" xml:space="preserve">
          <source>The Battery Status API extends &lt;a href=&quot;window/navigator&quot;&gt;&lt;code&gt;window.navigator&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;navigator/getbattery&quot;&gt;&lt;code&gt;navigator.getBattery()&lt;/code&gt;&lt;/a&gt; method returning a battery promise, which is resolved in a &lt;a href=&quot;batterymanager&quot;&gt;&lt;code&gt;BatteryManager&lt;/code&gt;&lt;/a&gt; object providing also some new events you can handle to monitor the battery status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c00194ca0c083bf7e027ff9f1608f2ec6307959" translate="yes" xml:space="preserve">
          <source>The Broadcast Channel API is a very simple API and the self-contained interface allows cross-context communication. It can be used to detect user actions in other tabs within a same site origin environment, like when the user logs into an account. The messaging protocol is not defined and the different documents in the different contexts need to implement it themselves: there is no negotiation, nor requirement from the specification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2806b702dd1fe8ff7828fc1ae3bdab24ed09f6ff" translate="yes" xml:space="preserve">
          <source>The CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function#matrix()&quot;&gt;&lt;code&gt;matrix()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/transform-function#matrix3d()&quot;&gt;&lt;code&gt;matrix3d()&lt;/code&gt;&lt;/a&gt; functional notation that can be generated from this interface to be used in a CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/transform&quot;&gt;&lt;code&gt;transform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6923e68d0dc64850a3d14fd9c55ddbfe6b2d6f47" translate="yes" xml:space="preserve">
          <source>The CSS Counter Styles module allows to define custom counter styles, which can be used for CSS list-marker and generated-content counters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dec02f1b67958cfeae289483a521f623c731129" translate="yes" xml:space="preserve">
          <source>The CSS Font Loading API provides events and interfaces for dynamically loading font resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b7d0697170a736bb109021e2d40306141eb40b" translate="yes" xml:space="preserve">
          <source>The CSS Object Model (CSSOM), part of the DOM, exposes specific interfaces allowing manipulation of a wide amount of information regarding CSS. Initially defined in the &lt;em&gt;DOM Level 2 Style&lt;/em&gt; recommendation, these interfaces forms now a specification, &lt;em&gt;CSS Object Model (CSSOM)&lt;/em&gt; which aims at superseding it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f46e1403e33f5ec008531ee104f0eb44dbdeedf" translate="yes" xml:space="preserve">
          <source>The CSS below styles the box and applies a transition effect which makes the box's color and size change, and causes the box to rotate, while the mouse cursor hovers over it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfbce982242a676d111585672c6754647ed93635" translate="yes" xml:space="preserve">
          <source>The CSS draws borders around the paragraph and the &lt;code&gt;span&lt;/code&gt; inside each &lt;code&gt;div&lt;/code&gt; block for the first, around the &lt;code&gt;ol&lt;/code&gt; and &lt;code&gt;li&lt;/code&gt; for the second and around &lt;code&gt;table&lt;/code&gt;, &lt;code&gt;th&lt;/code&gt; and &lt;code&gt;td&lt;/code&gt; elements for the third example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964eb31f78663829e18ac4cbd18fc02f7e7595e7" translate="yes" xml:space="preserve">
          <source>The CSS isn't terribly important for the purposes of this example; it lays out the element and establishes that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/background-color&quot;&gt;&lt;code&gt;background-color&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/border&quot;&gt;&lt;code&gt;border&lt;/code&gt;&lt;/a&gt; attributes can participate in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Transitions&quot;&gt;CSS transitions&lt;/a&gt;, which we'll use to affect the changes to the element as it becomes more or less obscured.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0dd34a0d21a7ca720c11445491ebfef6ee7c5a6" translate="yes" xml:space="preserve">
          <source>The CSS property values may be accessed using the &lt;code&gt;getPropertyValue(propName)&lt;/code&gt; API or by indexing directly into the object such as &lt;code&gt;cs[' z-index']&lt;/code&gt; or &lt;code&gt;cs.zIndex&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35f386b9a827d2dd8af3d8f753236d6a6d3c32de" translate="yes" xml:space="preserve">
          <source>The CSS provides a very simple responsive styling so that it looks ok across devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8c1964addf2b1ea5894a9edd6413b3df8a23ab" translate="yes" xml:space="preserve">
          <source>The CSS rule that contains this declaration block or &lt;code&gt;null&lt;/code&gt; if this &lt;a href=&quot;../cssstyledeclaration&quot;&gt;&lt;code&gt;CSSStyleDeclaration&lt;/code&gt;&lt;/a&gt; is not attached to a &lt;a href=&quot;../cssrule&quot;&gt;&lt;code&gt;CSSRule&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cdedcf480afa36c065e458ce236f26933f36cf3" translate="yes" xml:space="preserve">
          <source>The CSS simply sets up the appearance of the target, and doesn't affect its functionality at all.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1677fbd09ecf1bfe0c095e8a866b515e635cd65" translate="yes" xml:space="preserve">
          <source>The CSS used for this example is shown below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d0a51ff57bb9c90d0c0e74a17d874e1e2729a6d" translate="yes" xml:space="preserve">
          <source>The CSS version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="befa030312f51d48cb22bbd526af5bc34a76a256" translate="yes" xml:space="preserve">
          <source>The Chrome (and Canary) browsers also have a performance tool with similar functions as Firefox. See &lt;a href=&quot;https://developer.chrome.com/devtools/docs/timeline&quot;&gt;Performance profiling with the Timeline&lt;/a&gt; for more information about this tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd33fd252cd0601b932c057afc73cc9333e35b1" translate="yes" xml:space="preserve">
          <source>The Console's contents will be replaced with an informational message like &quot;Console was cleared&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ad30dfd5571ce62f08ccbdd7780d4c599727bb" translate="yes" xml:space="preserve">
          <source>The CountQueuingStrategy interface of the the &lt;a href=&quot;streams_api&quot;&gt;Streams API&lt;/a&gt; provides a built-in byte length queuing strategy that can be used when constructing streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea283b927587bedfa7d9393f573522ee69c7e005" translate="yes" xml:space="preserve">
          <source>The Credential Management API lets a website store and retrieve user, federated, and public key credentials. These capabilities allow users to sign in without typing passwords, see the federated account they used to sign in to a site, and resume a session without the explicit sign-in flow of an expired session.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5096ec31f8c837081da6c7388fe3fe7d40d5376" translate="yes" xml:space="preserve">
          <source>The DOM &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id&quot;&gt;&lt;strong&gt;id&lt;/strong&gt;&lt;/a&gt; global attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243fe6c8307ef093cde8df96e1d21e1d982f789d" translate="yes" xml:space="preserve">
          <source>The DOM &lt;a href=&quot;storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object representing the storage area on which this event occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12e145af0b4e40ef4e4b9823a03dcece954a4587" translate="yes" xml:space="preserve">
          <source>The DOM &lt;a href=&quot;window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; object provides access to the browser's history through the &lt;a href=&quot;window/history&quot;&gt;&lt;code&gt;history&lt;/code&gt;&lt;/a&gt; object. It exposes useful methods and properties that let you move back and forth through the user's history, as well as -- starting with HTML5 -- manipulate the contents of the history stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52262ee0a197d53103af55c894187cdfaa563a15" translate="yes" xml:space="preserve">
          <source>The DOM &lt;code&gt;&lt;a href=&quot;blob&quot;&gt;Blob&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; to read into the &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a4ee6add7285122ac685334b241ae1a9f03507" translate="yes" xml:space="preserve">
          <source>The DOM &lt;code&gt;&lt;a href=&quot;blob&quot;&gt;Blob&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; to read into the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5fc45a43fcd906aae50a3b6d100b50d66f0cdb0" translate="yes" xml:space="preserve">
          <source>The DOM &lt;code&gt;&lt;a href=&quot;blob&quot;&gt;Blob&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;file&quot;&gt;File&lt;/a&gt;&lt;/code&gt; to read.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56bc3cec9de7503f25d0e24d06c9af15a0e349b0" translate="yes" xml:space="preserve">
          <source>The DOM &lt;code&gt;&lt;strong&gt;MutationObserver()&lt;/strong&gt;&lt;/code&gt; constructor &amp;mdash; part of the &lt;a href=&quot;../mutationobserver&quot;&gt;&lt;code&gt;MutationObserver&lt;/code&gt;&lt;/a&gt; interface &amp;mdash; creates and returns a new observer which invokes a specified callback when DOM events occur. DOM observation does not begin immediately; the &lt;a href=&quot;observe&quot;&gt;&lt;code&gt;observe()&lt;/code&gt;&lt;/a&gt; method must be called first to establish which portion of the DOM to watch and what kinds of changes to watch for.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458351cbe2e6c16cdc590e27611f24135c35e70f" translate="yes" xml:space="preserve">
          <source>The DOM &lt;code&gt;CompositionEvent&lt;/code&gt; represents events that occur due to the user indirectly entering text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a2777946d3cf83b68aad01dbec79bd0b15c79c" translate="yes" xml:space="preserve">
          <source>The DOM HTMLTableElement interface provides some convenience methods for creating and manipulating tables. Two frequently used methods are &lt;a href=&quot;../htmltableelement/insertrow&quot;&gt;&lt;code&gt;HTMLTableElement.insertRow&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TableRow/insertCell&quot;&gt;&lt;code&gt;tableRow.insertCell&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ef99c05171c47828654dd2b6ae18221f7204d0" translate="yes" xml:space="preserve">
          <source>The DOM does not handle or enforce namespace validation per se. It is up to the DOM application to do any validation necessary. Note too that the namespace prefix, once it is associated with a particular element, cannot be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71cf2f2a20fdbb281b3f0db601d76bb88c21ed3b" translate="yes" xml:space="preserve">
          <source>The DOM does not handle or enforce namespace validation per se. It is up to the DOM application to do any validation necessary. Note too that the namespace prefix, once it is associated with a particular node, cannot be changed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2dd0fc383080e0b21aeb9f93a06f0b3d23cd6c" translate="yes" xml:space="preserve">
          <source>The DOM element to be animated, or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a17dac86a2f7aac444190a0f0abc8311404a75" translate="yes" xml:space="preserve">
          <source>The DOM interfaces index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b077cea2003a20b798f80da5d8009c39119ac6" translate="yes" xml:space="preserve">
          <source>The DOM interfaces index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03704b57a5c0c25ebedd4893bab476befe0ab45b" translate="yes" xml:space="preserve">
          <source>The DOM methods presented here are part of the Document Object Model (Core) level 1 specification. DOM level 1 includes both methods for generic document access and manipulation (DOM 1 Core) as well as methods specific to HTML documents (DOM 1 HTML).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3226d7a55fa791cacfdb34f601e7546c2f00a15" translate="yes" xml:space="preserve">
          <source>The DOM track object the event is in reference to. If not &lt;code&gt;null&lt;/code&gt;, this is always an object of one of the media track types: &lt;a href=&quot;audiotrack&quot;&gt;&lt;code&gt;AudioTrack&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;videotrack&quot;&gt;&lt;code&gt;VideoTrack&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;texttrack&quot;&gt;&lt;code&gt;TextTrack&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f1320ed048271bc08a9b2a3214feadc32d36144" translate="yes" xml:space="preserve">
          <source>The DOM was designed to be independent of any particular programming language, making the structural representation of the document available from a single, consistent API. Though we focus exclusively on JavaScript in this reference documentation, implementations of the DOM can be built for any language, as this Python example demonstrates:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211967c4eb2080bf2bf766523097c671d59dad64" translate="yes" xml:space="preserve">
          <source>The DTMF string the caller will send when the &quot;Dial&quot; button is clicked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2497baac689ae915a29c18953ea7b2be8b345b2c" translate="yes" xml:space="preserve">
          <source>The DTMF tones couldn't be sent because the track has been stopped, or is in a read-only or inactive state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7877e16ba919ddbea1947fe2124d4992f46ca73" translate="yes" xml:space="preserve">
          <source>The Do Not Track field guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52955ee8d39ec28a16607e3d7f89ae95cad0548" translate="yes" xml:space="preserve">
          <source>The Document Object Model (DOM) is a programming interface for HTML and XML documents. It represents the page so that programs can change the document structure, style, and content. The DOM represents the document as nodes and objects. That way, programming languages can connect to the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a364fae3eccb59d8c958598d75d534626cc012" translate="yes" xml:space="preserve">
          <source>The Draggable Attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7160ab9b1fcc09344dc9f4a71e34deb005cba90b" translate="yes" xml:space="preserve">
          <source>The Encrypted Media Extensions API provides interfaces for controlling the playback of content which is subject to a digital restrictions management scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e66007f44cdca3abbabf17cdd4b54ca6055690a5" translate="yes" xml:space="preserve">
          <source>The FIN and opcode fields work together to send a message split up into separate frames. This is called message fragmentation. Fragmentation is only available on opcodes &lt;code&gt;0x0&lt;/code&gt; to &lt;code&gt;0x2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7391efffc4abf0ba8e719026f15fc541e90c2cd5" translate="yes" xml:space="preserve">
          <source>The FIN bit tells whether this is the last message in a series. If it's 0, then the server will keep listening for more parts of the message; otherwise, the server should consider the message delivered. More on this later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b21e98edda947393cf70a8c357d1f31a596b95" translate="yes" xml:space="preserve">
          <source>The FOV is defined by the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23b0042c20e62e6f01ef5aaa4ebbc0438a718ac" translate="yes" xml:space="preserve">
          <source>The Fetch API provides an interface for fetching resources (including across the network). It will seem familiar to anyone who has used &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;, but the new API provides a more powerful and flexible feature set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a920c655b4c1c9d75c4911d8bcf8c6ae8e8f1ef0" translate="yes" xml:space="preserve">
          <source>The Fetch spec provides an up-to-date definition of, and API for, fetching resources (e.g. across the network.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71cf0bfc0793ffcd24578ad1d5a777de9b71b3bf" translate="yes" xml:space="preserve">
          <source>The File API makes it possible to access a &lt;a href=&quot;../filelist&quot;&gt;&lt;code&gt;FileList&lt;/code&gt;&lt;/a&gt; containing &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects representing the files selected by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5514a65c7492c1f7b6c480d9778314019ba034" translate="yes" xml:space="preserve">
          <source>The FileReader has been created, but no readAs method was called yet.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9077b67c9b91db88571e7947b02f50f11d0a7c44" translate="yes" xml:space="preserve">
          <source>The Firefox implementation currently only works as described in the specification when the media element's source is, itself, a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fac4ab93f72b976ed4d1f94d72191025419f47" translate="yes" xml:space="preserve">
          <source>The Fullscreen API adds methods to the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; interfaces to allow turning off and on full-screen mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa529bf50dd7a7cec73a2adedb2829d997b34fb" translate="yes" xml:space="preserve">
          <source>The Gamepad API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b7fe628facc1a4cc88cb31704cf4a4ca486f1ca" translate="yes" xml:space="preserve">
          <source>The Geolocation method &lt;code&gt;watchPosition()&lt;/code&gt; method is used to register a handler function that will be called automatically each time the position of the device changes. You can also, optionally, specify an error handling callback function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd34ad3e2da2c4a3b49d9733d22a04b865b144c5" translate="yes" xml:space="preserve">
          <source>The HTML</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731304735fa2576e7b7f3388e0bba089ed0bdac2" translate="yes" xml:space="preserve">
          <source>The HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter&quot;&gt;&lt;code&gt;&amp;lt;meter&amp;gt;&lt;/code&gt;&lt;/a&gt; elements expose the &lt;code&gt;&lt;strong&gt;HTMLMeterElement&lt;/strong&gt;&lt;/code&gt; interface, which provides special properties and methods (beyond the &lt;a href=&quot;htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt; object interface they also have available to them by inheritance) for manipulating the layout and presentation of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter&quot;&gt;&lt;code&gt;&amp;lt;meter&amp;gt;&lt;/code&gt;&lt;/a&gt; elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6395691491f95a1251df345a6ddcd9b9a2de072" translate="yes" xml:space="preserve">
          <source>The HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex&quot;&gt;&lt;strong&gt;tabindex&lt;/strong&gt;&lt;/a&gt; global attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d603cc2faf9b6dd52e7cd150933347bc9e570d8" translate="yes" xml:space="preserve">
          <source>The HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title&quot;&gt;&lt;strong&gt;title&lt;/strong&gt;&lt;/a&gt; global attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4535dae602f4958a25c2ece3454d0da1d2eecd0d" translate="yes" xml:space="preserve">
          <source>The HTML &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-data-*&quot;&gt;data-*&lt;/a&gt;&lt;/code&gt; class of global attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83ddc5cf59aaabfb4ab41308b57a2f86b48bcd8" translate="yes" xml:space="preserve">
          <source>The HTML &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/data-*&quot;&gt;&lt;strong&gt;data-*&lt;/strong&gt;&lt;/a&gt;&lt;/code&gt; class of global attributes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="663ccafd4e30615d3596c3b13b596b5ab0832f62" translate="yes" xml:space="preserve">
          <source>The HTML DOM APIs of the elements that can contain a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source&quot;&gt;&lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt;&lt;/a&gt; element: &lt;a href=&quot;htmlvideoelement&quot;&gt;&lt;code&gt;HTMLVideoElement&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;htmlaudioelement&quot;&gt;&lt;code&gt;HTMLAudioElement&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;htmlpictureelement&quot;&gt;&lt;code&gt;HTMLPictureElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9315b7bdb94c0f862062573df72d77e43f92ed" translate="yes" xml:space="preserve">
          <source>The HTML DOM generated from the above HTML will have a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody&quot;&gt;&lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;&lt;/a&gt; element even though the tags are not included in the source HTML.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca79f7d291cb8a8b9a18257216f2a45f19273c67" translate="yes" xml:space="preserve">
          <source>The HTML and CSS are again pretty trivial, simply containing a title, some instructions for use, and a form with some simple controls. The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; element is initially empty, but is populated with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option&quot;&gt;&lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;&lt;/a&gt;s via JavaScript (see later on.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2576d0aae855168b2c2c77a9f7a775ea9356171" translate="yes" xml:space="preserve">
          <source>The HTML and CSS for the app is really trivial. We simply have a title, instructions paragraph, and a div into which we output diagnostic messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c40dfe4a77db53e8e0a3fc80815f4e8596c3f0d" translate="yes" xml:space="preserve">
          <source>The HTML and CSS for this example are pretty simple, and aren't shown here. You can look at the complete example by &lt;a href=&quot;https://mdn.mozillademos.org/en-US/docs/Web/API/Media_Streams_API/Constraints%24samples/Example_Constraint_exerciser?revision=1430024&quot;&gt;clicking here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f4bc01ffc5ef9dcbeee47cd78031dc6b61d39a7" translate="yes" xml:space="preserve">
          <source>The HTML code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10804f12e119364751e2f0e09fb69d52dd0ed53" translate="yes" xml:space="preserve">
          <source>The HTML consists solely of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; that we'll obtain a WebGL context on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8248d899d14aed82faafe348bc6ad60eaa0262" translate="yes" xml:space="preserve">
          <source>The HTML content for this example is primarily a button to toggle the oscillator tones on and off and an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; element of type &lt;code&gt;range&lt;/code&gt; to control the volume of two of the three oscillators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37061e102112206d8ec8a748168f278b18858ade" translate="yes" xml:space="preserve">
          <source>The HTML document used to render this content is shown below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f052ee1fefdb11f9d4cafa5789cb1c4f750e31e5" translate="yes" xml:space="preserve">
          <source>The HTML drag and drop interfaces are &lt;a href=&quot;dragevent&quot;&gt;&lt;code&gt;DragEvent&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatransferitem&quot;&gt;&lt;code&gt;DataTransferItem&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datatransferitemlist&quot;&gt;&lt;code&gt;DataTransferItemList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ca4c85e48e1fbab0d8b5f36d5718756173bb38" translate="yes" xml:space="preserve">
          <source>The HTML element &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont&quot;&gt;&lt;code&gt;&amp;lt;basefont&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;em&gt;was&lt;/em&gt; implementing this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650366425cf7b75890249a42474d53232f9cf8b4" translate="yes" xml:space="preserve">
          <source>The HTML element &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/isindex&quot;&gt;&lt;code&gt;&amp;lt;isindex&amp;gt;&lt;/code&gt;&lt;/a&gt;&lt;em&gt;was&lt;/em&gt; implementing this interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e1f59cbcf7df83d12a8bf76571cbb8b427750c" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface and this property: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab1dd6179ad4395a481c6e77da126daadd47cf1" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a&quot;&gt;&lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9440b7451ec9c8367b793c663ae834e91bae73a" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption&quot;&gt;&lt;code&gt;&amp;lt;caption&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c2fa6b069cf265b0bca8d16484f7e518dd270d" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col&quot;&gt;&lt;code&gt;&amp;lt;col&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup&quot;&gt;&lt;code&gt;&amp;lt;colgroup&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9bc1ae08463a278f88ce84ccf9fc75044ae215" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/data&quot;&gt;&lt;code&gt;&amp;lt;data&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734f7bee06088637304260c09269c19cdb3105db" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist&quot;&gt;&lt;code&gt;&amp;lt;datalist&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b28a0ce314fe3cefc37e2e78e46f049dd22309" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details&quot;&gt;&lt;code&gt;&amp;lt;details&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6f669d00aa32e73655bc0cd6f4b2f6b65aaa9e" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="442b9ec3fa0ab24a0de0182435d58938c751239e" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db610ef9a756abead07d7829d5a523b46ba2e04e" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl&quot;&gt;&lt;code&gt;&amp;lt;dl&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156f9a22b98b002f13cc06cf44c37f17cf50f16b" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed&quot;&gt;&lt;code&gt;&amp;lt;embed&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd143d31481230d8464db6bc089d1dd7c55fcfb7" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset&quot;&gt;&lt;code&gt;&amp;lt;fieldset&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3888377db52272d523f77f15a94705f4f3fc064b" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font&quot;&gt;&lt;code&gt;&amp;lt;font&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3464578c5397ff47dfe26d0de253ee10a7abec9e" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77fd091e0da7640bb2c96b3182eb0483390e629" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h1&quot;&gt;&lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2&quot;&gt;&lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h3&quot;&gt;&lt;code&gt;&amp;lt;h3&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h4&quot;&gt;&lt;code&gt;&amp;lt;h4&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h5&quot;&gt;&lt;code&gt;&amp;lt;h5&amp;gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h6&quot;&gt;&lt;code&gt;&amp;lt;h6&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c964d0efe001532b76b03097ab2f921dce6a38" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head&quot;&gt;&lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a6beb647f33a6d3e8a1a25ae2e6ea74b4b4ce0" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr&quot;&gt;&lt;code&gt;&amp;lt;hr&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4ae333c06b09d355f57d7a24f5ca37bc35113b" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1052cb18f84b465982ea9197f7db42f1241783" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8609b9f32e0e0f8af75444ae796b94f038005060" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label&quot;&gt;&lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abaf336ccdfb2ce942f93e8ed24132e01494d7c" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend&quot;&gt;&lt;code&gt;&amp;lt;legend&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc50dc6ba9ca31819895989b3e73a4b3b596c0b7" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li&quot;&gt;&lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84dc92701bfcb57a5c1245fae8022688464f8b9a" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link&quot;&gt;&lt;code&gt;&amp;lt;link&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276b05cac39db0cc303f5e8fb4fd994d34393076" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta&quot;&gt;&lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b0679c8a35b9c52bdde65cdbf61207fea02c061" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter&quot;&gt;&lt;code&gt;&amp;lt;meter&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7b8f028085315ecb096a90f874885be4f52028" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object&quot;&gt;&lt;code&gt;&amp;lt;object&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000ac44182b38976d82bbc1bf5358f2469e79b20" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol&quot;&gt;&lt;code&gt;&amp;lt;ol&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36cb9669d023734264a2dec06fd160c110b7a391" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup&quot;&gt;&lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485c2dd9681639a4df69c0606afc22566d16f1c7" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option&quot;&gt;&lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c9e7e8a03564de3d7b41b38ae81c1899e4b66a" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output&quot;&gt;&lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add5b071f1558d8162e3c697ff9b8be6acb876e1" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df7b12ef9a1bf7873403fa8d64e21ac4c1144fa" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param&quot;&gt;&lt;code&gt;&amp;lt;param&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3674725ed9f4c3d833ba912261d7743b59ce9b72" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre&quot;&gt;&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd9dcb9b9b2873fc749ffed0a16cceefb9730e0" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress&quot;&gt;&lt;code&gt;&amp;lt;progress&amp;gt;&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc9ad4c64895639d1d0647d7e388bb2a15f3ea5" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source&quot;&gt;&lt;code&gt;&amp;lt;source&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd61d5458bdec07d19e01c4841fc365c03d77cb" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span&quot;&gt;&lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d14afd102a3c99bb4c5ac69d206c6c689e2683d2" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed6cdc068afd987b5e198cb7afdee0f30ab6139" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table&quot;&gt;&lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3535d2a117f772db363b14bc8bd11d06c716cb1" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time&quot;&gt;&lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="397b9c1b77eec6f10854012b4b74ba958cd6609d" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title&quot;&gt;&lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ce6b964c2970ae5bbbdf7f4e07b077ae59a987" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr&quot;&gt;&lt;code&gt;&amp;lt;tr&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcd26a91d97650a811753d9376ffe4d311ecef6" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track&quot;&gt;&lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0e1abef1ad3a91bb17f264c6aaeb84665129743" translate="yes" xml:space="preserve">
          <source>The HTML element implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul&quot;&gt;&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d541a198fa397e28c987bd3eadb55fa66e4a303" translate="yes" xml:space="preserve">
          <source>The HTML element representing cells: &lt;a href=&quot;../htmltablecellelement&quot;&gt;&lt;code&gt;HTMLTableCellElement&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020724b5224b9b46e5d1f34d7d5b45c2e0b3d3c1" translate="yes" xml:space="preserve">
          <source>The HTML elements implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote&quot;&gt;&lt;code&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q&quot;&gt;&lt;code&gt;&amp;lt;q&amp;gt;&lt;/code&gt;&lt;/a&gt;, but not &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite&quot;&gt;&lt;code&gt;&amp;lt;cite&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="867b6f0ee5d5e363297bac2d65118144a21e92d3" translate="yes" xml:space="preserve">
          <source>The HTML elements implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot&quot;&gt;&lt;code&gt;&amp;lt;tfoot&amp;gt;&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead&quot;&gt;&lt;code&gt;&amp;lt;thead&amp;gt;&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody&quot;&gt;&lt;code&gt;&amp;lt;tbody&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7143de27c9d728a28f34bf3036face4b1c1f400" translate="yes" xml:space="preserve">
          <source>The HTML elements implementing this interface: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th&quot;&gt;&lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td&quot;&gt;&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;&lt;/a&gt; by inheritance via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableHeaderCellElement&quot;&gt;&lt;code&gt;HTMLTableHeaderCellElement&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLTableDataCellElement&quot;&gt;&lt;code&gt;HTMLTableDataCellElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
