<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="de6b6a5a55f4a77afb320e3b4be4def705111336" translate="yes" xml:space="preserve">
          <source>The following code gets the precision format of a &lt;code&gt;gl.VERTEX_SHADER&lt;/code&gt; with a &lt;code&gt;gl.MEDIUM_FLOAT&lt;/code&gt; precision type.</source>
          <target state="translated">다음 코드는 &lt;code&gt;gl.MEDIUM_FLOAT&lt;/code&gt; 정밀도 유형을 가진 &lt;code&gt;gl.VERTEX_SHADER&lt;/code&gt; 의 정밀도 형식을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="76c3b93d88f4df998b0679c3d20ee38299be4f57" translate="yes" xml:space="preserve">
          <source>The following code is taken from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/grab-frame-take-photo.html&quot;&gt;Chrome's Grab Frame - Take Photo Sample&lt;/a&gt;. Since &lt;code&gt;ImageCapture&lt;/code&gt; requires some place to capture an image from, the example below starts with a device's media device (in other words a camera).</source>
          <target state="translated">다음 코드는 &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/grab-frame-take-photo.html&quot;&gt;Chrome의 Grab Frame-Take Photo Sample&lt;/a&gt; 에서 가져온 것입니다 . &lt;code&gt;ImageCapture&lt;/code&gt; 는 이미지를 캡처 할 장소가 필요 하므로 아래 예는 장치의 미디어 장치 (즉, 카메라)로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="39c8d6dd06d844097a2a28f5005649906b84ca4c" translate="yes" xml:space="preserve">
          <source>The following code is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/popup-info-box-web-component&quot;&gt;popup-info-box-web-component&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/popup-info-box-web-component/&quot;&gt;see it live also&lt;/a&gt;).</source>
          <target state="translated">다음 코드는 &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/popup-info-box-web-component&quot;&gt;popup-info-box-web-component&lt;/a&gt; 예제 에서 가져온 것입니다 ( &lt;a href=&quot;https://mdn.github.io/web-components-examples/popup-info-box-web-component/&quot;&gt;실제 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d52376d318549331dfe749e666bba226c099e12c" translate="yes" xml:space="preserve">
          <source>The following code is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;see it live also&lt;/a&gt;).</source>
          <target state="translated">다음 코드는 &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; 예제 에서 가져온 것입니다 ( &lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;실제 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b8637c867255f1eb90613948d7d2faa99a9a6978" translate="yes" xml:space="preserve">
          <source>The following code is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;see it live also&lt;/a&gt;). Note how we use the &lt;a href=&quot;customelementregistry/define&quot;&gt;&lt;code&gt;CustomElementRegistry.define()&lt;/code&gt;&lt;/a&gt; method to define the custom element after creating its class.</source>
          <target state="translated">다음 코드는 &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; 예제 에서 가져온 것입니다 ( &lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;실제 참조&lt;/a&gt; ). 클래스를 만든 후 &lt;a href=&quot;customelementregistry/define&quot;&gt; &lt;code&gt;CustomElementRegistry.define()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 사용자 지정 요소를 정의하는 방법에 유의하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fa3bd934780dbeadbe97fd790a7aaa6912ed51f" translate="yes" xml:space="preserve">
          <source>The following code sample defines a method on the &lt;code&gt;CubeDemo&lt;/code&gt; object that will create the model matrix. It uses custom functions to create and multiply matrices as defined in the &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;MDN WebGL&lt;/a&gt; shared code. The new function looks like this:</source>
          <target state="translated">다음 코드 샘플은 모델 매트릭스를 작성하는 &lt;code&gt;CubeDemo&lt;/code&gt; 오브젝트 의 메소드를 정의합니다 . &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;MDN WebGL&lt;/a&gt; 공유 코드에 정의 된대로 사용자 정의 함수를 사용하여 행렬을 작성하고 곱 합니다. 새로운 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8b6e719942df99d2615faf9f5247f9942c32fba4" translate="yes" xml:space="preserve">
          <source>The following code snippet compares a previously saved pointer id with the identifier of the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; event that was just fired.</source>
          <target state="translated">다음 코드 스 니펫은 이전에 저장된 포인터 ID를 방금 발생한 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; 이벤트 의 식별자와 비교합니다 .</target>
        </trans-unit>
        <trans-unit id="775c66860654f1a482346d46ae04ed76415aed56" translate="yes" xml:space="preserve">
          <source>The following code snippet demonstrates the difference between the values obtained using the element's &lt;code&gt;style&lt;/code&gt; property and that obtained using the &lt;code&gt;getComputedStyle()&lt;/code&gt; method:</source>
          <target state="translated">다음 코드 스 니펫은 요소의 &lt;code&gt;style&lt;/code&gt; 속성을 사용하여 얻은 값 과 &lt;code&gt;getComputedStyle()&lt;/code&gt; 메서드를 사용하여 얻은 값의 차이를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9298bde68914cf6707f3e2d818ffd112c34d4610" translate="yes" xml:space="preserve">
          <source>The following code snippet shows &lt;code&gt;worker.js&lt;/code&gt;, in which an &lt;code&gt;onmessage&lt;/code&gt; handler is used to handle messages from the main script. Inside the handler a calculation is done from which a result message is created; this is then sent back to the main thread using &lt;code&gt;postMessage(workerResult);&lt;/code&gt;</source>
          <target state="translated">다음 코드 스 니펫은 &lt;code&gt;worker.js&lt;/code&gt; 를 보여줍니다 . &lt;code&gt;onmessage&lt;/code&gt; 핸들러는 기본 스크립트의 메시지를 처리하는 데 사용됩니다. 핸들러 내에서 결과 메시지가 작성되는 계산이 수행됩니다. 그런 다음 &lt;code&gt;postMessage(workerResult);&lt;/code&gt; 사용하여 기본 스레드로 다시 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="f84e1e466d6bde7cf7eb1afd492a36554328cb67" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onclose&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">다음 코드 스 니펫은 작업자 내부에 설정된 &lt;code&gt;onclose&lt;/code&gt; 핸들러를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0a8b4d5b9ae6479895aad9dbd1e192d837527ee0" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onerror&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">다음 코드 스 니펫은 작업자 내부에 설정된 &lt;code&gt;onerror&lt;/code&gt; 핸들러를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="26c2e6e12bff62f674132dce872aede59a8207ad" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onlanguagechange&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">다음 코드 스 니펫은 작업자 내부에 설정된 &lt;code&gt;onlanguagechange&lt;/code&gt; 핸들러를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="a5da936e6566ad6f261c704691dd7d2ce78f9b17" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onoffline&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">다음 코드 스 니펫은 작업자 내부에 설정된 온 &lt;code&gt;onoffline&lt;/code&gt; 핸들러를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4b52b00d0167dbda85b110225e8b485594ec894e" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;ononline&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">다음 코드를 보여주는 &lt;code&gt;ononline&lt;/code&gt; 노동자 내부 핸들러 세트 :</target>
        </trans-unit>
        <trans-unit id="9a575193e3b6b0a60e4c783a9fbc7f6e374694b7" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../sharedworker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt; object using the &lt;code&gt;SharedWorker()&lt;/code&gt; constructor and subsequent usage of the object:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;code&gt;SharedWorker()&lt;/code&gt; 생성자를 사용하여 &lt;a href=&quot;../sharedworker&quot;&gt; &lt;code&gt;SharedWorker&lt;/code&gt; &lt;/a&gt; 객체를 만들고 그 이후의 객체 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="785eff56b7904ef3540f819687a7da47cd632ad7" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;../worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor and setting up of an &lt;code&gt;onerror&lt;/code&gt; handler on the resulting object:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;../worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 &lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 객체를 만들고 결과 객체에서 &lt;code&gt;onerror&lt;/code&gt; 핸들러를 설정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="78b1ae7ceeb12798d5ae473746b5fae9596d9c8e" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;../worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor. Messages are passed to the worker when the value inside the form input &lt;code&gt;first&lt;/code&gt; changes. A &lt;a href=&quot;../worker/onmessage&quot;&gt;&lt;code&gt;Worker.onmessage&lt;/code&gt;&lt;/a&gt; handler is also present, to deal with messages are passed back from the worker.</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;../worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 &lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 객체를 만드는 방법을 보여줍니다 . 양식 입력 내부의 값이 &lt;code&gt;first&lt;/code&gt; 변경 되면 메시지가 작업자에게 전달 됩니다. &lt;a href=&quot;../worker/onmessage&quot;&gt; &lt;code&gt;Worker.onmessage&lt;/code&gt; 의&lt;/a&gt; 핸들러는 메시지가 노동자에서 다시 전달됩니다 다루는 또한 존재한다.</target>
        </trans-unit>
        <trans-unit id="a6a4fd75ef54e0087c447be211a279bf142d2036" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor, which is then immediately terminated.</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 &lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 객체를 만든 다음 즉시 종료되는 과정을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="a02745d765c6148ec37a0dd6f786382463ff1b85" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor. Messages are passed to the worker when the value inside the form input &lt;code&gt;first&lt;/code&gt; changes. An onmessage handler is also present, to deal with messages are passed back from the worker.</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 &lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 객체를 만드는 방법을 보여줍니다 . 양식 입력 내부의 값이 &lt;code&gt;first&lt;/code&gt; 변경 되면 메시지가 작업자에게 전달 됩니다. 메시지를 처리하기 위해 onmessage 핸들러도 존재하며 작업자로부터 다시 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="ca44ddd5172033f656a689ae1bb0d67a63839b67" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;code&gt;Worker()&lt;/code&gt; constructor and subsequent usage of the object:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;code&gt;Worker()&lt;/code&gt; 생성자를 사용하여 &lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 객체를 만들고 그 이후의 객체 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="07affcc78a8d1acb22a1aceb23820650d9665a1d" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor and usage of the object:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용 하여 &lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 객체를 만들고 해당 객체의 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="2956808150f3932960cf6d4904d8de0af14e6b77" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;code&gt;&lt;a href=&quot;../filereader&quot;&gt;FileReader&lt;/a&gt;&lt;/code&gt; object using the &lt;code&gt;FileReader()&lt;/code&gt; constructor and subsequent usage of the object:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;code&gt;FileReader()&lt;/code&gt; 생성자를 사용하여 &lt;code&gt;&lt;a href=&quot;../filereader&quot;&gt;FileReader&lt;/a&gt;&lt;/code&gt; 오브젝트 작성 및 후속 오브젝트 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="fdecd25957058a333fa80ad0b3860361575d9a02" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;code&gt;SharedWorker&lt;/code&gt; object using the &lt;a href=&quot;sharedworker&quot;&gt;&lt;code&gt;SharedWorker()&lt;/code&gt;&lt;/a&gt; constructor. Multiple scripts can then access the worker through a &lt;a href=&quot;../messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt; object accessed using the &lt;code&gt;SharedWorker.port&lt;/code&gt; property &amp;mdash; the port is started using its &lt;code&gt;start()&lt;/code&gt; method:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;sharedworker&quot;&gt; &lt;code&gt;SharedWorker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 &lt;code&gt;SharedWorker&lt;/code&gt; 객체를 만드는 방법을 보여줍니다 . 그러면 여러 스크립트가 &lt;code&gt;SharedWorker.port&lt;/code&gt; 속성을 사용하여 액세스 한 &lt;a href=&quot;../messageport&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt; 객체를 통해 작업자에 액세스 할 수 있습니다 . 포트는 &lt;code&gt;start()&lt;/code&gt; 메서드를 사용하여 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="7fef72d3c85f272409a601154a01fc9b4faf6121" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;code&gt;SharedWorker&lt;/code&gt; object using the &lt;a href=&quot;sharedworker/sharedworker&quot;&gt;&lt;code&gt;SharedWorker()&lt;/code&gt;&lt;/a&gt; constructor. Both scripts contain this:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;sharedworker/sharedworker&quot;&gt; &lt;code&gt;SharedWorker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 &lt;code&gt;SharedWorker&lt;/code&gt; 객체를 만드는 방법을 보여줍니다 . 두 스크립트 모두 다음을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="3b543166718695298820dc044d5e81c7c0e926bd" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how you can measure a text and get its width.</source>
          <target state="translated">다음 코드 스 니펫은 텍스트를 측정하고 너비를 얻는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3f79234f8c9f517e6c44fae4e48b4d13e779d1bb" translate="yes" xml:space="preserve">
          <source>The following code snippet shows the creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor. When either of two form inputs (&lt;code&gt;first&lt;/code&gt; and &lt;code&gt;second&lt;/code&gt;) have their values changed, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; events invoke &lt;code&gt;postMessage()&lt;/code&gt; to send the value of both inputs to the current worker.</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 &lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 객체를 만드는 방법을 보여줍니다 . 두 양식 입력 ( &lt;code&gt;first&lt;/code&gt; 및 &lt;code&gt;second&lt;/code&gt; ) 중 하나의 값이 변경되면 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; events를 호출하여 &lt;code&gt;postMessage()&lt;/code&gt; 를 호출 하여 두 입력의 값을 현재 작업자에게 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b5d39e7325eb2c5b4fcdeb658dbc547caf41bf55" translate="yes" xml:space="preserve">
          <source>The following code snippet will slow down all animations on a page by halving their &lt;a href=&quot;../animation/playbackrate&quot;&gt;&lt;code&gt;Animation.playbackRate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;../animation/playbackrate&quot;&gt; &lt;code&gt;Animation.playbackRate&lt;/code&gt; &lt;/a&gt; 를 반으로 줄여 페이지의 모든 애니메이션 속도를 늦 춥니 다 .</target>
        </trans-unit>
        <trans-unit id="3ca3137616bf2b32c50802fc9cf0145d207d5a43" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;navigator.clipboard&lt;/code&gt; to access the system clipboard in order to read the contents of the clipboard.</source>
          <target state="translated">다음 코드는 &lt;code&gt;navigator.clipboard&lt;/code&gt; 를 사용하여 클립 보드의 내용을 읽기 위해 시스템 클립 보드에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="c346630a666a1c7ab1339f8a30e481800a97a5c4" translate="yes" xml:space="preserve">
          <source>The following code waits until all animations running on the element &lt;code&gt;elem&lt;/code&gt; have finished, then deletes the element from the DOM tree:</source>
          <target state="translated">다음 코드는 요소 &lt;code&gt;elem&lt;/code&gt; 에서 실행중인 모든 애니메이션 이 완료 될 때까지 기다린 다음 DOM 트리에서 요소를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="b9155d2103e72dd3ab11c30554d60373bb32b44f" translate="yes" xml:space="preserve">
          <source>The following code, if included in a page at the root of a site, would apply to exactly the same pages as the example above. Remember the scope, when included, uses the page's location as its base. Alternatively, if this code were included in a page at &lt;code&gt;example.com/product/description.html&lt;/code&gt;, the scope of &lt;code&gt;'./'&lt;/code&gt; would mean that the service worker only applies to resources under &lt;code&gt;example.com/product&lt;/code&gt;. If I needed to register a service worker on &lt;code&gt;example.com/product/description.html&lt;/code&gt; that applied to all of &lt;code&gt;example.com&lt;/code&gt;, I would leave off the scope as above.</source>
          <target state="translated">다음 코드는 사이트 루트의 페이지에 포함 된 경우 위 예제와 정확히 동일한 페이지에 적용됩니다. 포함 된 경우 범위는 페이지의 위치를 ​​기준으로 사용합니다. 또는이 코드가 &lt;code&gt;example.com/product/description.html&lt;/code&gt; 의 페이지에 포함 된 경우 &lt;code&gt;'./'&lt;/code&gt; 범위 는 서비스 워커가 &lt;code&gt;example.com/product&lt;/code&gt; 아래의 리소스에만 적용됨을 의미합니다 . 나는에서 서비스 노동자 등록하기 위해 필요한 경우 &lt;code&gt;example.com/product/description.html&lt;/code&gt; 모두에 적용 &lt;code&gt;example.com&lt;/code&gt; 을 , 나는 위와 같이 범위를 떠날 것이다.</target>
        </trans-unit>
        <trans-unit id="d491fd2b65326bcc2d9548ada2c065f112cca208" translate="yes" xml:space="preserve">
          <source>The following code:</source>
          <target state="translated">다음 코드 :</target>
        </trans-unit>
        <trans-unit id="cb4e5e69ea18c167c5a50d823ab464f0707bbace" translate="yes" xml:space="preserve">
          <source>The following conditions raise an exception:</source>
          <target state="translated">다음과 같은 조건에서는 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ab9ae87765be155d9e9bcac89d20e1e7953183bb" translate="yes" xml:space="preserve">
          <source>The following constants can be used for &lt;em&gt;sfactor&lt;/em&gt; and &lt;em&gt;dfactor&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;sfactor&lt;/em&gt; 및 &lt;em&gt;dfactor&lt;/em&gt; 에는 다음 상수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ce2850370b8167a2cfb32d9defec8e846c8161a3" translate="yes" xml:space="preserve">
          <source>The following constants can be used for &lt;em&gt;srcRGB&lt;/em&gt;, &lt;em&gt;dstRGB&lt;/em&gt;, &lt;em&gt;srcAlpha&lt;/em&gt;, and &lt;em&gt;dstAlpha&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;srcRGB&lt;/em&gt; , &lt;em&gt;dstRGB&lt;/em&gt; , &lt;em&gt;srcAlpha&lt;/em&gt; 및 &lt;em&gt;dstAlpha에&lt;/em&gt; 다음 상수를 사용할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1bfd67154540d68c74b98a6321b9be4de6783ead" translate="yes" xml:space="preserve">
          <source>The following constants have been deprecated and should not be used anymore.</source>
          <target state="translated">다음 상수는 더 이상 사용되지 않으며 더 이상 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="07ba7334b6e4056b80922f48347622631221d500" translate="yes" xml:space="preserve">
          <source>The following demonstrates a real-world use of the &lt;code&gt;eachNode&lt;/code&gt; function: searching for text on a web-page. We use a wrapper function named &lt;code&gt;grep&lt;/code&gt; to do the searching:</source>
          <target state="translated">다음은 &lt;code&gt;eachNode&lt;/code&gt; 함수를 실제로 사용하는 방법을 보여줍니다 . 웹 페이지에서 텍스트 검색. 검색을 수행하기 위해 &lt;code&gt;grep&lt;/code&gt; 이라는 랩퍼 함수를 ​​사용합니다 .</target>
        </trans-unit>
        <trans-unit id="41461c74510317c4f6145d3b1224ea046fb95f44" translate="yes" xml:space="preserve">
          <source>The following describes the steps that occur during a drag and drop operation.</source>
          <target state="translated">다음은 끌어서 놓기 작업 중에 발생하는 단계를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="8ae28d060623c1f98acb168ec0893392f29ec99f" translate="yes" xml:space="preserve">
          <source>The following diagram from the &lt;a href=&quot;http://www.whatwg.org/&quot;&gt;WHATWG&lt;/a&gt; demonstrates the various baselines supported by the &lt;code&gt;textBaseline&lt;/code&gt; property.</source>
          <target state="translated">&lt;a href=&quot;http://www.whatwg.org/&quot;&gt;WHATWG&lt;/a&gt; 의 다음 다이어그램 은 &lt;code&gt;textBaseline&lt;/code&gt; 속성이 지원하는 다양한 기준을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b2d63726f92cadc2f136766602168941477729be" translate="yes" xml:space="preserve">
          <source>The following documents describe how to use touch events and include example code:</source>
          <target state="translated">다음 문서는 터치 이벤트를 사용하는 방법을 설명하고 예제 코드를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="2ec4d49e2df92aba478e5086879fbc30de9ab5d1" translate="yes" xml:space="preserve">
          <source>The following elements can use the &lt;code&gt;cx&lt;/code&gt; attribute</source>
          <target state="translated">다음 요소는 &lt;code&gt;cx&lt;/code&gt; 속성을 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="2c0a9969617d890fe812be742a41a24d2198c718" translate="yes" xml:space="preserve">
          <source>The following equivalence returns &lt;code&gt;true&lt;/code&gt; if an element is at the end of its scroll, &lt;code&gt;false&lt;/code&gt; if it isn't.</source>
          <target state="translated">다음 등가 반환 &lt;code&gt;true&lt;/code&gt; 요소가 그 스크롤의 끝에있는 경우 &lt;code&gt;false&lt;/code&gt; , 그렇지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="d411998731f7e0069944923912244d337b11d120" translate="yes" xml:space="preserve">
          <source>The following errors may be thrown when calling this method.</source>
          <target state="translated">이 메소드를 호출 할 때 다음 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5433af10c3012bba69dc3a9a2920d1481b87028b" translate="yes" xml:space="preserve">
          <source>The following errors may be thrown when setting a new value for this property.</source>
          <target state="translated">이 속성에 새 값을 설정할 때 다음 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d094cbed75236d22908ba8793257298d72ebb58" translate="yes" xml:space="preserve">
          <source>The following errors may occur; to check for errors after &lt;code&gt;getUniformLocation()&lt;/code&gt; returns, call &lt;a href=&quot;geterror&quot;&gt;&lt;code&gt;getError()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음과 같은 오류가 발생할 수 있습니다. &lt;code&gt;getUniformLocation()&lt;/code&gt; 반환 된 후 오류를 확인하려면 &lt;a href=&quot;geterror&quot;&gt; &lt;code&gt;getError()&lt;/code&gt; &lt;/a&gt; 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="533d186fe2d300e6097dcf59eeeb1fa1a74b191f" translate="yes" xml:space="preserve">
          <source>The following events are listed in the spec, but do not currently seem to be implemented anywhere as yet.</source>
          <target state="translated">다음 이벤트는 사양에 나열되어 있지만 현재 어느 곳에서도 구현되지 않은 것 같습니다.</target>
        </trans-unit>
        <trans-unit id="f4da571c91381cb06a937f12193ffcad883aa639" translate="yes" xml:space="preserve">
          <source>The following events can be triggered on an upload object and used to monitor the state of the upload process:</source>
          <target state="translated">다음과 같은 이벤트가 업로드 객체에서 트리거되어 업로드 프로세스의 상태를 모니터링하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da7bbaecae40d9f33dd8a209e99744eb1c0c9592" translate="yes" xml:space="preserve">
          <source>The following example (from the &lt;a href=&quot;../navigator/sendbeacon&quot;&gt;sendBeacon docs&lt;/a&gt;) shows a theoretical analytics code that attempts to submit data to a server by using a synchronous XMLHttpRequest in an unload handler. This results in the unloading of the page to be delayed.</source>
          <target state="translated">&lt;a href=&quot;../navigator/sendbeacon&quot;&gt;sendBeacon docs&lt;/a&gt; 의 다음 예제 는 언로드 핸들러에서 동기 XMLHttpRequest를 사용하여 서버에 데이터를 제출하려고하는 이론적 분석 코드를 보여줍니다. 이로 인해 페이지 언로드가 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="6eccf72506bb36ad8cc98678d998c82dbb302e72" translate="yes" xml:space="preserve">
          <source>The following example adds a &lt;code&gt;ProgressEvent&lt;/code&gt; to a new &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHTTPRequest&lt;/code&gt;&lt;/a&gt; and uses it to display the status of the request.</source>
          <target state="translated">다음 예제에서는 새 &lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHTTPRequest&lt;/code&gt; 에&lt;/a&gt; &lt;code&gt;ProgressEvent&lt;/code&gt; 를 추가하고 이를 사용하여 요청 상태를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="0f16b7c83152a8a728921d0884db42ccfe44c6b7" translate="yes" xml:space="preserve">
          <source>The following example autosaves the contents of a text field, and if the browser is accidentally refreshed, restores the text field content so that no writing is lost.</source>
          <target state="translated">다음 예제는 텍스트 필드의 내용을 자동 저장하고 실수로 브라우저를 새로 고치면 텍스트 필드 내용을 복원하여 쓰기가 손실되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="cb6dece3fa9bda3ba581551a33ecb59eac605ce1" translate="yes" xml:space="preserve">
          <source>The following example calls the &lt;code&gt;flashtext()&lt;/code&gt; function once a second until the Stop button is pressed.</source>
          <target state="translated">다음 예제 는 Stop 버튼을 누를 때까지 1 초에 한 번 &lt;code&gt;flashtext()&lt;/code&gt; 함수 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="a1a47bfae0d8fb231f36f7aaf8142a231ba68043" translate="yes" xml:space="preserve">
          <source>The following example captures all keypresses.</source>
          <target state="translated">다음 예제는 모든 키 누르기를 캡처합니다.</target>
        </trans-unit>
        <trans-unit id="e38813eaf70fc464620e48f4b1063d81bcb72744" translate="yes" xml:space="preserve">
          <source>The following example captures the &quot;W&quot;, &quot;A&quot;, &quot;S&quot;, and &quot;D&quot; keys. It captures these keys regardless of which modifiers are used with the key press. Assuming a standard US QWERTY layout, registering &lt;code&gt;&quot;KeyW&quot;&lt;/code&gt; ensures that &quot;W&quot;, Shift+&quot;W&quot;, Control+&quot;W&quot;, Control+Shift+&quot;W&quot;, and all other key modifier combinations with &quot;W&quot; are sent to the app. The same applies to for &lt;code&gt;&quot;KeyA&quot;&lt;/code&gt;, &lt;code&gt;&quot;KeyS&quot;&lt;/code&gt; and &lt;code&gt;&quot;KeyD&quot;&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 &quot;W&quot;, &quot;A&quot;, &quot;S&quot;및 &quot;D&quot;키를 캡처합니다. 키 누름과 함께 사용되는 수정 자에 관계없이 이러한 키를 캡처합니다. 표준 US QWERTY 레이아웃을 가정 할 때 &lt;code&gt;&quot;KeyW&quot;&lt;/code&gt; 를 등록 하면 &quot;W&quot;, Shift + &quot;W&quot;, Control + &quot;W&quot;, Control + Shift + &quot;W&quot;및 &quot;W&quot;와의 다른 모든 키 수정 자 조합이 앱으로 전송됩니다. &lt;code&gt;&quot;KeyA&quot;&lt;/code&gt; , &lt;code&gt;&quot;KeyS&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;KeyD&quot;&lt;/code&gt; 에도 동일하게 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="fdf5d1af88595c220201eb81131ed3df7ae8e530" translate="yes" xml:space="preserve">
          <source>The following example causes a newly installed service worker to progress into the &lt;code&gt;activating&lt;/code&gt; state, regardless of whether there is already an active service worker.</source>
          <target state="translated">다음 예제 는 이미 활성화 된 서비스 워커가 있는지 여부에 관계없이 새로 설치된 서비스 워커가 &lt;code&gt;activating&lt;/code&gt; 상태 로 진행되도록합니다 .</target>
        </trans-unit>
        <trans-unit id="f9106ab353d01668f40b8e4a793e8f32b6125408" translate="yes" xml:space="preserve">
          <source>The following example checks all &lt;code&gt;PerformanceEntry&lt;/code&gt; properties to see if the browser supports them and if so, write their values to the console.</source>
          <target state="translated">다음 예제에서는 모든 &lt;code&gt;PerformanceEntry&lt;/code&gt; 속성을 확인하여 브라우저가 해당 속성을 지원하는지 확인하고 지원하는 경우 해당 값을 콘솔에 씁니다.</target>
        </trans-unit>
        <trans-unit id="d356565ed5f3dd072ee4363f9a0d214d6f62ea99" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;a href=&quot;../formdata&quot;&gt;&lt;code&gt;FormData&lt;/code&gt;&lt;/a&gt; object with an appended &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Security/Same-origin_policy#How_to_block_cross-origin_access&quot;&gt;CSRF token&lt;/a&gt;. It then stores the form object in the additionalData parameter, before sending it to server in a call to &lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 예제에서는 &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Security/Same-origin_policy#How_to_block_cross-origin_access&quot;&gt;CSRF 토큰&lt;/a&gt; 이 추가 된 &lt;a href=&quot;../formdata&quot;&gt; &lt;code&gt;FormData&lt;/code&gt; &lt;/a&gt; 객체 를 만듭니다 . 그런 다음 &lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt; &lt;code&gt;fetch&lt;/code&gt; &lt;/a&gt; 호출로 양식 객체를 additionalData 매개 변수에 서버에 보내기 전에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="84c8da872076116102ffdc018105267705612bdd" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/submit&quot;&gt;submit&lt;/a&gt;&lt;/code&gt; handler and when that event is fired, the handler calls &lt;code&gt;sendBeacon()&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/submit&quot;&gt;submit&lt;/a&gt;&lt;/code&gt; 핸들러 를 작성하고 해당 이벤트가 발생하면 핸들러는 &lt;code&gt;sendBeacon()&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="9b07dfcd216a3258aa9c76afc3be6a9dbea92c4a" translate="yes" xml:space="preserve">
          <source>The following example creates a new media session and assigns action handlers to it:</source>
          <target state="translated">다음 예제는 새로운 미디어 세션을 생성하고 액션 핸들러를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="75ff81017b5d4e13126fddb621e00510c8761629" translate="yes" xml:space="preserve">
          <source>The following example demonstrates &lt;code&gt;setInterval()&lt;/code&gt;'s basic syntax.</source>
          <target state="translated">다음 예제는 &lt;code&gt;setInterval()&lt;/code&gt; 의 기본 구문을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b143d34a8bda993f3eeed8ce9d5fe04ce5ca3f4a" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how a popup window can change the URL of the window that opened it. Before attempting to change the URL, it checks that the current window has an opener using the &lt;a href=&quot;opener&quot;&gt;window.opener&lt;/a&gt; property and that the opener isn't closed:</source>
          <target state="translated">다음 예제는 팝업 창에서 열린 창의 URL을 변경하는 방법을 보여줍니다. URL을 변경하기 전에 &lt;a href=&quot;opener&quot;&gt;window.opener&lt;/a&gt; 속성을 사용하여 현재 창 에 오프너가 있는지와 오프너가 닫히지 않았는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="96f439883149adbaf9e9a5fb875500f83926d862" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how invalid text input can be stopped from reaching the input field with &lt;code&gt;preventDefault()&lt;/code&gt;. Nowadays, you should usually use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Form_validation&quot;&gt;native HTML form validation&lt;/a&gt; instead.</source>
          <target state="translated">다음 예제는 &lt;code&gt;preventDefault()&lt;/code&gt; 유효하지 않은 텍스트 입력이 입력 필드에 도달하지 못하게하는 방법을 보여줍니다 . 요즘에는 일반적으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Form_validation&quot;&gt;기본 HTML 양식 유효성 검사를&lt;/a&gt; 대신 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="d115a980cf80419a5e42998b96b2fb220ca24575" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to get the location- or layout-specific string associated with the key that corresponds to the 'W' key on an English QWERTY keyboard.</source>
          <target state="translated">다음 예제는 영어 QWERTY 키보드에서 'W'키에 해당하는 키와 연관된 위치 또는 레이아웃 특정 문자열을 얻는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6a1f90bebe83ef56f548801b18cc524554e82137" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the usage of these two methods.</source>
          <target state="translated">다음 예제는이 두 가지 방법의 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3d6d7a660f7806ffb3fa5307cb73bf74be7fc6bc" translate="yes" xml:space="preserve">
          <source>The following example demonstrates using these three properties.</source>
          <target state="translated">다음 예제는이 세 가지 속성을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="aad2ea2e1e3c8eaeb54be5a776c3c6ccb948dfbb" translate="yes" xml:space="preserve">
          <source>The following example displays a button to open a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;code&gt;showModal()&lt;/code&gt; method. From there, either button will close the dialog.</source>
          <target state="translated">다음 예제는 &lt;code&gt;showModal()&lt;/code&gt; 메소드 를 통해 양식을 포함하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 여는 단추를 표시합니다 . 거기에서 두 버튼 중 하나가 대화 상자를 닫습니다.</target>
        </trans-unit>
        <trans-unit id="7d23059d7a9b94c8e97be5c01cd635ee29b89394" translate="yes" xml:space="preserve">
          <source>The following example displays information about the installed plugin(s).</source>
          <target state="translated">다음 예제는 설치된 플러그인에 대한 정보를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="81066703b0caadc4fa0ff211f98b6c7251222695" translate="yes" xml:space="preserve">
          <source>The following example extracts the details from the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; object to the promise returned from &lt;a href=&quot;../paymentrequest/show&quot;&gt;&lt;code&gt;PaymentRequest.show()&lt;/code&gt;&lt;/a&gt;. In a real-world implementation this data would then be sent to a payment server.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../paymentresponse&quot;&gt; &lt;code&gt;PaymentResponse&lt;/code&gt; &lt;/a&gt; 오브젝트에서 &lt;a href=&quot;../paymentrequest/show&quot;&gt; &lt;code&gt;PaymentRequest.show()&lt;/code&gt; &lt;/a&gt; 에서 리턴 된 약속으로 세부 사항을 추출합니다 . 실제 구현에서이 데이터는 결제 서버로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="25e39a1e409efa9bbcca7b383c65d562cbfabe47" translate="yes" xml:space="preserve">
          <source>The following example extracts the method name from the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; object to the promise returned from &lt;a href=&quot;../paymentrequest/show&quot;&gt;&lt;code&gt;PaymentRequest.show()&lt;/code&gt;&lt;/a&gt;. In a real-world implementation this data would then be sent to a payment server.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../paymentresponse&quot;&gt; &lt;code&gt;PaymentResponse&lt;/code&gt; &lt;/a&gt; 오브젝트에서 &lt;a href=&quot;../paymentrequest/show&quot;&gt; &lt;code&gt;PaymentRequest.show()&lt;/code&gt; &lt;/a&gt; 에서 리턴 된 약속으로 메소드 이름을 추출합니다 . 실제 구현에서이 데이터는 결제 서버로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="dbf470caff1de817651b6cf06db79034f566198d" translate="yes" xml:space="preserve">
          <source>The following example finishes all the animations on a single element, regardless of their direction of playback.</source>
          <target state="translated">다음 예제에서는 재생 방향에 관계없이 모든 요소를 ​​단일 요소에서 마무리합니다.</target>
        </trans-unit>
        <trans-unit id="0b71b2fbef0e5f6700dd695b9f07771024e2d970" translate="yes" xml:space="preserve">
          <source>The following example first checks whether a cache called 'v1' exists. If so, we add a list of assets to it. If not (meaning the &lt;code&gt;has()&lt;/code&gt; promise would reject) then we run some kind of cache set-up function.</source>
          <target state="translated">다음 예제는 먼저 'v1'이라는 캐시가 있는지 확인합니다. 그렇다면 자산 목록을 추가합니다. 그렇지 않은 경우 ( &lt;code&gt;has()&lt;/code&gt; promise가 거부 함을 의미 함 ) 일종의 캐시 설정 함수를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="a567cd1a114322f599117ece33641e09256a1195" translate="yes" xml:space="preserve">
          <source>The following example function returns the version of the Shockwave Flash plugin.</source>
          <target state="translated">다음 예제 함수는 Shockwave Flash 플러그인 버전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="194490be2e10b4b41e6ede90dbe2c0a1d7326b7d" translate="yes" xml:space="preserve">
          <source>The following example goes through all nodes in the body, reduces the set of nodes to elements, simply passes through as acceptable each node (it could reduce the set in the &lt;code&gt;acceptNode()&lt;/code&gt; method instead), and then makes use of tree walker iterator that is created to advance through the nodes (now all elements) and push them into an array.</source>
          <target state="translated">다음 예제는 본문의 모든 노드를 통과하고 노드 세트를 요소로 줄이고 단순히 허용 가능한 각 노드를 통과합니다 ( &lt;code&gt;acceptNode()&lt;/code&gt; 메소드 의 세트를 대신 줄일 수 있음 ). 그런 다음 트리 워커 반복자를 사용합니다. 노드 (현재 모든 요소)를 통과하여 배열로 밀어 넣기 위해 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="db3e9a5322525c5d5ca85411ef8409f9bc0d919c" translate="yes" xml:space="preserve">
          <source>The following example hints that the quality of filtering when generating mipmap images should be most efficient instead of best quality.</source>
          <target state="translated">다음 예제는 밉맵 이미지를 생성 할 때 필터링 품질이 최상의 품질 대신 가장 효율적이어야한다는 것을 암시합니다.</target>
        </trans-unit>
        <trans-unit id="35b51224b0799135bdce530675ce5c8453a3b3bc" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a bound key range. Here we declare a &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;);&lt;/code&gt; &amp;mdash; a range between values of &quot;A&quot; and &quot;F&quot;. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve records with keys inside that range. This range includes the values &quot;A&quot; and &quot;F&quot;, as we haven't declared that they should be open bounds. If we used IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;, true, true);, then the range would not include &quot;A&quot; and &quot;F&quot;, only the values between them.</source>
          <target state="translated">다음 예제는 바운드 키 범위를 사용하는 방법을 보여줍니다. 여기에서 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;);&lt;/code&gt; 선언합니다 . &amp;mdash; &quot;A&quot;와 &quot;F&quot;사이의 범위. 트랜잭션 ( &lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt; 사용 )과 객체 저장소를 열고 , &lt;code&gt;keyRangeValue&lt;/code&gt; 를 선택적 키 범위 값으로 선언 하여 &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt; 로 커서를 엽니 다 . 이는 커서가 해당 범위 내에 키가있는 레코드 만 검색 함을 의미합니다. 이 범위에는 개방 범위 여야한다고 선언하지 않았으므로 &quot;A&quot;및 &quot;F&quot;값이 포함됩니다. IDBKeyRange.bound ( &quot;A&quot;, &quot;F&quot;, true, true);를 사용하면 범위에는 &quot;A&quot;와 &quot;F&quot;가 포함되지 않으며 그 사이의 값만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="ddb30353976928d50d5a53d164c7b0047a41ca3e" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a key range. Here we declare &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;, &quot;W&quot;, true, true);&lt;/code&gt; &amp;mdash; a range that includes everything between &quot;F&quot; and &quot;W&quot; but not including them &amp;mdash; since both the upper and lower bounds have been declared as open (&lt;code&gt;true&lt;/code&gt;). We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value.</source>
          <target state="translated">다음 예제는 키 범위를 사용하는 방법을 보여줍니다. 여기에서 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;, &quot;W&quot;, true, true);&lt;/code&gt; 선언 합니다. 상한과 하한이 모두 개방 ( &lt;code&gt;true&lt;/code&gt; ) 으로 선언되었으므로 &quot;F&quot;와 &quot;W&quot;사이를 포함하지만 범위를 포함하지 않는 범위 입니다. 트랜잭션 ( &lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt; 사용 )과 객체 저장소를 열고 , &lt;code&gt;keyRangeValue&lt;/code&gt; 를 선택적 키 범위 값으로 선언 하여 &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt; 로 커서를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="b204b38aaabde66e48b16c02660e8fb750ae89b6" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a key range. Here we declare a &lt;code&gt;keyRangeValue&lt;/code&gt; as a range between values of &quot;A&quot; and &quot;F&quot;. We open a transaction (using &lt;a href=&quot;idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve records with keys inside that range. This range includes the values &quot;A&quot; and &quot;F&quot;, as we haven't declared that they should be open bounds. If we used IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;, true, true);, then the range would not include &quot;A&quot; and &quot;F&quot;, only the values between them.</source>
          <target state="translated">다음 예제는 키 범위를 사용하는 방법을 보여줍니다. 여기에서 &lt;code&gt;keyRangeValue&lt;/code&gt; 를 &quot;A&quot;와 &quot;F&quot;값 사이의 범위로 선언합니다 . 트랜잭션 ( &lt;a href=&quot;idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt; 사용 )과 객체 저장소를 열고 , &lt;code&gt;keyRangeValue&lt;/code&gt; 를 선택적 키 범위 값으로 선언 하여 &lt;a href=&quot;idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt; 로 커서를 엽니 다 . 이는 커서가 해당 범위 내에 키가있는 레코드 만 검색 함을 의미합니다. 이 범위에는 개방 범위 여야한다고 선언하지 않았으므로 &quot;A&quot;및 &quot;F&quot;값이 포함됩니다. IDBKeyRange.bound ( &quot;A&quot;, &quot;F&quot;, true, true);를 사용하면 범위에는 &quot;A&quot;와 &quot;F&quot;가 포함되지 않으며 그 사이의 값만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="02f4b77bc763c2252e0525b61c03dbfe8f753566" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a lower bound key range. Here we declare &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.lowerBound(&quot;F&quot;, false);&lt;/code&gt; &amp;mdash; a range that includes the value &quot;F&quot; and everthing after it. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve the record with the key value &quot;F&quot; and all that come after it. If we used &lt;code&gt;IDBKeyRange.lowerBound(&quot;F&quot;, true);&lt;/code&gt;, then the range would not include &quot;F&quot;; only the values after it.</source>
          <target state="translated">다음 예제는 하한 키 범위를 사용하는 방법을 보여줍니다. 여기에서 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.lowerBound(&quot;F&quot;, false);&lt;/code&gt; 선언합니다 . &amp;mdash; &quot;F&quot;값과 그 이후의 값을 포함하는 범위입니다. 트랜잭션 ( &lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt; 사용 )과 객체 저장소를 열고 , &lt;code&gt;keyRangeValue&lt;/code&gt; 를 선택적 키 범위 값으로 선언 하여 &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt; 로 커서를 엽니 다 . 이는 커서가 키 값이 &quot;F&quot;이고 그 뒤에 오는 모든 레코드 만 검색 함을 의미합니다. &lt;code&gt;IDBKeyRange.lowerBound(&quot;F&quot;, true);&lt;/code&gt; 사용 했다면; 범위는 &quot;F&quot;를 포함하지 않습니다. 그 이후의 값만.</target>
        </trans-unit>
        <trans-unit id="eb7b06a83b98a8307c1918f9823f142d4b61cbf5" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use an only key range. Here we declare a &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.only(&quot;A&quot;);&lt;/code&gt; &amp;mdash; a range that only includes the value &quot;A&quot;. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve the record with the key value &quot;A&quot;.</source>
          <target state="translated">다음 예제는 유일한 키 범위를 사용하는 방법을 보여줍니다. 여기에서 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.only(&quot;A&quot;);&lt;/code&gt; 선언합니다 . &amp;mdash; &quot;A&quot;값만 포함하는 범위입니다. 트랜잭션 ( &lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt; 사용 )과 객체 저장소를 열고 , &lt;code&gt;keyRangeValue&lt;/code&gt; 를 선택적 키 범위 값으로 선언 하여 &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt; 로 커서를 엽니 다 . 이는 커서가 키 값이 &quot;A&quot;인 레코드 만 검색 함을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="f81660c916b5714cab9e857713d7d142f8eca7eb" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use an upper bound key range. Here we declare &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;);&lt;/code&gt; &amp;mdash; a range that includes the value &quot;F&quot; and everything before it. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value.</source>
          <target state="translated">다음 예제는 상한 키 범위를 사용하는 방법을 보여줍니다. 여기에서 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;);&lt;/code&gt; 선언합니다 . &amp;mdash; 값 &quot;F&quot;와 그 이전의 모든 것을 포함하는 범위. 트랜잭션 ( &lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt; 사용 )과 객체 저장소를 열고 , &lt;code&gt;keyRangeValue&lt;/code&gt; 를 선택적 키 범위 값으로 선언 하여 &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt; 로 커서를 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="4e090a3f27eb36a7c6335c49f3de512b8cd5f335" translate="yes" xml:space="preserve">
          <source>The following example illustrates several features of this interface. It shows the creation of the &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">다음 예제는이 인터페이스의 여러 기능을 보여줍니다. 사용자 지정 싱크 및 API 제공 큐잉 전략 을 사용하여 &lt;code&gt;WritableStream&lt;/code&gt; 의 생성을 보여줍니다 . 그런 다음 &lt;code&gt;sendMessage()&lt;/code&gt; 라는 함수를 호출 하여 새로 만든 스트림과 문자열을 전달합니다. 이 함수 내에서 스트림의 &lt;code&gt;getWriter()&lt;/code&gt; 메소드를 호출하여 &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; &lt;/a&gt; 인스턴스를 리턴합니다 . &lt;code&gt;forEach()&lt;/code&gt; 호출은 스트림 스트링의 각 청크를 작성하는데 사용된다. 마지막으로 &lt;code&gt;write()&lt;/code&gt; 및 &lt;code&gt;close()&lt;/code&gt; 는 청크 및 스트림의 성공 또는 실패를 처리하도록 처리 된 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5ed73bdbaf82aa2eccfdf99f72137cfd2afeb74a" translate="yes" xml:space="preserve">
          <source>The following example illustrates several features of this interface. It shows the creation of the &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">다음 예제는이 인터페이스의 여러 기능을 보여줍니다. 사용자 지정 싱크 및 API 제공 큐잉 전략 을 사용하여 &lt;code&gt;WritableStream&lt;/code&gt; 의 생성을 보여줍니다 . 그런 다음 &lt;code&gt;sendMessage()&lt;/code&gt; 라는 함수를 호출 하여 새로 만든 스트림과 문자열을 전달합니다. 이 함수 내에서 스트림의 &lt;code&gt;getWriter()&lt;/code&gt; 메소드를 호출하여 &lt;a href=&quot;writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; &lt;/a&gt; 인스턴스를 리턴합니다 . &lt;code&gt;forEach()&lt;/code&gt; 호출은 스트림 스트링의 각 청크를 작성하는데 사용된다. 마지막으로 &lt;code&gt;write()&lt;/code&gt; 및 &lt;code&gt;close()&lt;/code&gt; 는 청크 및 스트림의 성공 또는 실패를 처리하도록 처리 된 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8660e7e32ee5dde47e9329ee74093427dbff1047" translate="yes" xml:space="preserve">
          <source>The following example illustrates simple usage of &lt;code&gt;createPeriodicWave()&lt;/code&gt;, recreating a sine wave from a periodic wave.</source>
          <target state="translated">다음 예제는 &lt;code&gt;createPeriodicWave()&lt;/code&gt; 의 간단한 사용법을 보여 주기 때문에 주기적 웨이브에서 사인파를 재생성합니다.</target>
        </trans-unit>
        <trans-unit id="bab3fad291454de1fc35966fb217fd19aee0b9a1" translate="yes" xml:space="preserve">
          <source>The following example illustrates simple usage of &lt;code&gt;createPeriodicWave()&lt;/code&gt;, to create a &lt;a href=&quot;../periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt; object containing a simple sine wave.</source>
          <target state="translated">다음 예제 는 간단한 사인파를 포함하는 &lt;a href=&quot;../periodicwave&quot;&gt; &lt;code&gt;PeriodicWave&lt;/code&gt; &lt;/a&gt; 객체 를 만들기 위해 &lt;code&gt;createPeriodicWave()&lt;/code&gt; 의 간단한 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="1823a7f0b766ef4dbe854d69b017db28e818b125" translate="yes" xml:space="preserve">
          <source>The following example illustrates simple usage of &lt;code&gt;createPeriodicWave()&lt;/code&gt;, to create a &lt;a href=&quot;periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt; object containing a simple sine wave.</source>
          <target state="translated">다음 예제 는 간단한 사인파를 포함하는 &lt;a href=&quot;periodicwave&quot;&gt; &lt;code&gt;PeriodicWave&lt;/code&gt; &lt;/a&gt; 객체 를 만들기 위해 &lt;code&gt;createPeriodicWave()&lt;/code&gt; 의 간단한 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e805d3e838ed10d317e4e32471a16c3d652b48bb" translate="yes" xml:space="preserve">
          <source>The following example illustrates this property's usage.</source>
          <target state="translated">다음 예제는이 속성의 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="78d6f1a441d319a767fb2ee0acd033b95f92146a" translate="yes" xml:space="preserve">
          <source>The following example illustrates using the resource timing properties to calculate the amount of time the following phases take: redirection (&lt;a href=&quot;../performanceresourcetiming/redirectstart&quot;&gt;&lt;code&gt;redirectStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/redirectend&quot;&gt;&lt;code&gt;redirectEnd&lt;/code&gt;&lt;/a&gt; ), DNS lookup (&lt;a href=&quot;../performanceresourcetiming/domainlookupstart&quot;&gt;&lt;code&gt;domainLookupStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/domainlookupend&quot;&gt;&lt;code&gt;domainLookupEnd&lt;/code&gt;&lt;/a&gt;), TCP handshake (&lt;a href=&quot;../performanceresourcetiming/connectstart&quot;&gt;&lt;code&gt;connectStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/connectend&quot;&gt;&lt;code&gt;connectEnd&lt;/code&gt;&lt;/a&gt;), and response (&lt;a href=&quot;../performanceresourcetiming/responsestart&quot;&gt;&lt;code&gt;responseStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt;&lt;code&gt;responseEnd&lt;/code&gt;&lt;/a&gt;). This example also calculates the time from the start of the fetch and request start phases (&lt;a href=&quot;../performanceresourcetiming/fetchstart&quot;&gt;&lt;code&gt;fetchStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/requeststart&quot;&gt;&lt;code&gt;requestStart&lt;/code&gt;&lt;/a&gt;, respectively), until the response has ended (&lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt;&lt;code&gt;responseEnd&lt;/code&gt;&lt;/a&gt;). This timing data provides a detailed profile of the resource loading phases and this data can be used to help identify performance bottlenecks.</source>
          <target state="translated">다음 예제는 자원 타이밍 특성을 사용하여 경로 재 지정 ( &lt;a href=&quot;../performanceresourcetiming/redirectstart&quot;&gt; &lt;code&gt;redirectStart&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../performanceresourcetiming/redirectend&quot;&gt; &lt;code&gt;redirectEnd&lt;/code&gt; &lt;/a&gt; ), DNS 조회 ( &lt;a href=&quot;../performanceresourcetiming/domainlookupstart&quot;&gt; &lt;code&gt;domainLookupStart&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../performanceresourcetiming/domainlookupend&quot;&gt; &lt;code&gt;domainLookupEnd&lt;/code&gt; &lt;/a&gt; ), TCP 핸드 셰이크 ( &lt;a href=&quot;../performanceresourcetiming/connectstart&quot;&gt; &lt;code&gt;connectStart&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../performanceresourcetiming/connectend&quot;&gt; &lt;code&gt;connectEnd&lt;/code&gt; &lt;/a&gt; ) 및 응답 ( &lt;a href=&quot;../performanceresourcetiming/responsestart&quot;&gt; &lt;code&gt;responseStart&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt; &lt;code&gt;responseEnd&lt;/code&gt; &lt;/a&gt; ) 단계에 걸리는 시간을 계산하는 방법을 보여줍니다. . 이 예제는 또한 페치 및 요청 시작 단계의 시작 ( 각각 &lt;a href=&quot;../performanceresourcetiming/fetchstart&quot;&gt; &lt;code&gt;fetchStart&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../performanceresourcetiming/requeststart&quot;&gt; &lt;code&gt;requestStart&lt;/code&gt; &lt;/a&gt; )에서 응답이 종료 될 때까지의 시간 ( &lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt; &lt;code&gt;responseEnd&lt;/code&gt; )을 계산합니다.&lt;/a&gt;). 이 타이밍 데이터는 리소스로드 단계에 대한 자세한 프로필을 제공하며이 데이터를 사용하여 성능 병목 현상을 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe3d3e53544e9413c755229f7715f1249ca26a6f" translate="yes" xml:space="preserve">
          <source>The following example is a little more complex than the ones we've seen above. It draws 12 different arcs all with different angles and fills.</source>
          <target state="translated">다음 예제는 위에서 본 것보다 약간 더 복잡합니다. 각기 다른 각도와 채우기로 12 개의 서로 다른 호를 그립니다.</target>
        </trans-unit>
        <trans-unit id="9091b5147a452e35edfa55027dfd27012dfc464a" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt; demo, which uses the WebVR API to update the view of a simple &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;2D canvas&lt;/code&gt;&lt;/a&gt; scene on each frame of a &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; loop.</source>
          <target state="translated">다음 예제는 우리의 &lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionensorvrdevice&lt;/a&gt; 데모 에서 발췌 한 것으로 WebVR API를 사용하여 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 루프 의 각 프레임에서 간단한 &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;2D canvas&lt;/code&gt; &lt;/a&gt; 장면 의 뷰를 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="8c9e5c16e4e1cba1dac8c0d2f23753d75b3c3ca7" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt; demo, which uses the WebVR API to update the view of a simple &lt;a href=&quot;canvasrenderingcontext2d&quot;&gt;&lt;code&gt;2D canvas&lt;/code&gt;&lt;/a&gt; scene on each frame of a &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; loop.</source>
          <target state="translated">다음 예제는 우리의 &lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionensorvrdevice&lt;/a&gt; 데모 에서 발췌 한 것으로 WebVR API를 사용하여 &lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 루프 의 각 프레임에서 간단한 &lt;a href=&quot;canvasrenderingcontext2d&quot;&gt; &lt;code&gt;2D canvas&lt;/code&gt; &lt;/a&gt; 장면 의 뷰를 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="a73ee493927b61af16297c354a50245955261d69" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; demo (&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;see it live also&lt;/a&gt;). You can see that we use &lt;code&gt;attachShadow()&lt;/code&gt; in the middle of the code to create a shadow root, which we then attach our custom element's contents to.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; 데모 에서 가져온 것입니다 ( &lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;실제 참조&lt;/a&gt; ). 당신은 우리가 사용하는 것을 볼 수 있습니다 &lt;code&gt;attachShadow()&lt;/code&gt; 우리가 다음 우리의 사용자 정의 요소의 내용을 첨부 그림자 루트를 만들 코드의 중간에.</target>
        </trans-unit>
        <trans-unit id="4e9378cdd85dabef22c84dd593e8f474bb1100ef" translate="yes" xml:space="preserve">
          <source>The following example is taken from the Mozilla VR Team's &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt; code &amp;mdash; to be precise, the &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.js file&lt;/a&gt;. Early on in the code the &lt;a href=&quot;../hmdvrdevice/geteyeparameters&quot;&gt;&lt;code&gt;HMDVRDevice.getEyeParameters&lt;/code&gt;&lt;/a&gt; method is used to access information about each eye &amp;mdash; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/eyeTranslation&quot;&gt;&lt;code&gt;VREyeParameters.eyeTranslation&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;recommendedfieldofview&quot;&gt;&lt;code&gt;VREyeParameters.recommendedFieldOfView&lt;/code&gt;&lt;/a&gt; &amp;mdash; which are used for rendering calulations later on.</source>
          <target state="translated">다음 예는 Mozilla VR 팀의 &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt; 코드 ( &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.js 파일&lt;/a&gt; )에서 발췌 한 것 입니다. 코드 초기에 &lt;a href=&quot;../hmdvrdevice/geteyeparameters&quot;&gt; &lt;code&gt;HMDVRDevice.getEyeParameters&lt;/code&gt; &lt;/a&gt; 메소드는 각 계산 에 대한 정보 ( &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/eyeTranslation&quot;&gt; &lt;code&gt;VREyeParameters.eyeTranslation&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;recommendedfieldofview&quot;&gt; &lt;code&gt;VREyeParameters.recommendedFieldOfView&lt;/code&gt; )&lt;/a&gt; 에 액세스하여 나중에 계산을 렌더링하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4c83038ff4deee70f3d0d107a275cd2c4ed87d96" translate="yes" xml:space="preserve">
          <source>The following example is taken from the Mozilla VR Team's &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt; code &amp;mdash; to be precise, the &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.js file&lt;/a&gt;. Early on in the code the &lt;code&gt;getEyeParameters()&lt;/code&gt; method is used to access information about each eye, which is then used for rendering calulations later on.</source>
          <target state="translated">다음 예는 Mozilla VR 팀의 &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt; 코드 ( &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.js 파일&lt;/a&gt; )에서 발췌 한 것 입니다. 코드 초반에 &lt;code&gt;getEyeParameters()&lt;/code&gt; 메소드는 각 눈에 대한 정보에 액세스하는 데 사용되며 나중에 계산을 렌더링하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="11ca9d29fc77585ce775ce9b31a46f2e7e1505ca" translate="yes" xml:space="preserve">
          <source>The following example logs the product name and serial number of paired devices to the console. For information on pairing devices, see &lt;a href=&quot;requestdevice&quot;&gt;&lt;code&gt;USB.requestDevice()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 예제는 페어링 된 장치의 제품 이름 및 일련 번호를 콘솔에 기록합니다. 장치 페어링에 대한 자세한 내용은 &lt;a href=&quot;requestdevice&quot;&gt; &lt;code&gt;USB.requestDevice()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4bcd07c1f5c495fd38e7674c48afc61f7ab14e11" translate="yes" xml:space="preserve">
          <source>The following example looks for one of two USB devices. Notice that two product IDs are specified. Both are passed to &lt;code&gt;requestDevice()&lt;/code&gt;. This triggers a user-agent flow that prompts the user to select a device for pairing. Only the selected device is passed to &lt;code&gt;then()&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 두 개의 USB 장치 중 하나를 찾습니다. 두 개의 제품 ID가 지정되어 있습니다. 둘 다 &lt;code&gt;requestDevice()&lt;/code&gt; 로 전달됩니다 . 그러면 사용자에게 페어링 할 장치를 선택하라는 메시지가 표시되는 사용자 에이전트 흐름이 트리거됩니다. 선택된 장치 만 &lt;code&gt;then()&lt;/code&gt; 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="9c03c947dc1246c1861de8c740f9704078b64672" translate="yes" xml:space="preserve">
          <source>The following example monitors the connection using the &lt;code&gt;change&lt;/code&gt; event and logs changes as they occur.</source>
          <target state="translated">다음 예제는 &lt;code&gt;change&lt;/code&gt; 이벤트를 사용하여 연결을 모니터링하고 변경 사항이 발생할 때이를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="d303269a86cd7e58b2c609ffa15d7d105cba440d" translate="yes" xml:space="preserve">
          <source>The following example positions a container &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 5 pixels from the top and 10 pixels from the left of the page.</source>
          <target state="translated">다음 예제에서는 컨테이너 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 를 위쪽에서 5 픽셀, 페이지 왼쪽에서 10 픽셀로 배치합니다.</target>
        </trans-unit>
        <trans-unit id="bb2d51b94b9a60b51094f2475685d4009bca7e1d" translate="yes" xml:space="preserve">
          <source>The following example prints the &lt;a href=&quot;node/textcontent&quot;&gt;&lt;code&gt;textContent&lt;/code&gt;&lt;/a&gt; properties of each &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag in a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element named &lt;code&gt;&quot;box&quot;&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 &lt;code&gt;&quot;box&quot;&lt;/code&gt; 라는 &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 요소 에 각 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 태그 의 &lt;a href=&quot;node/textcontent&quot;&gt; &lt;code&gt;textContent&lt;/code&gt; &lt;/a&gt; 속성을 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="6115eab559d31910e7acfcf0b01f54a368b902fe" translate="yes" xml:space="preserve">
          <source>The following example provides a box where the lists of items and formats dropped on it are displayed.</source>
          <target state="translated">다음 예제는 항목 및 형식 목록을 표시하는 상자를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1dc60c447a843173e8c9bbcaf99edbaf2826f787" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The &lt;code&gt;readyState&lt;/code&gt; of the 2nd request is logged to the developer console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">다음 예제는 주어진 레코드 제목을 요청하고, &lt;code&gt;onsuccess&lt;/code&gt; 하면 IDBObjectStore 에서 관련 레코드를 가져 &lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; 로 사용 가능하게 함 ) 레코드의 한 속성을 업데이트 한 다음 업데이트 된 레코드를 다른 요청의 개체 저장소에 다시 넣습니다. 두 번째 요청 의 &lt;code&gt;readyState&lt;/code&gt; 가 개발자 콘솔에 기록됩니다. 전체 예제를 보려면 &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; 앱 을 참조하십시오 ( &lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;실례보기&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e0336a4eabdc583e95680a3d0f1c0e8d996a6622" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The source of the 2nd request is logged to the developer console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">다음 예제는 지정된 레코드 제목을 요청하고, &lt;code&gt;onsuccess&lt;/code&gt; 하면 &lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; 로 사용 가능) 에서 관련 레코드를 가져 와서 레코드의 한 속성을 업데이트 한 다음 업데이트 된 레코드를 다른 요청의 개체 저장소에 다시 넣습니다. 두 번째 요청의 소스는 개발자 콘솔에 기록됩니다. 전체 예제를 보려면 &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; 앱 을 참조하십시오 ( &lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;실례보기&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="6ae97566e7a056d9130e6a429269fa84ca1510fc" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The source of the requests is logged to the developer console &amp;mdash; both originate from the same transaction. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">다음 예제는 지정된 레코드 제목을 요청하고, &lt;code&gt;onsuccess&lt;/code&gt; 하면 &lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; 로 사용 가능) 에서 관련 레코드를 가져 와서 레코드의 속성 하나를 업데이트 한 다음 업데이트 된 레코드를 다시 다른 요청의 개체 저장소에 넣습니다. 요청 소스는 개발자 콘솔에 기록되며 둘 다 동일한 트랜잭션에서 발생합니다. 전체 예제를 보려면 &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; 앱 을 참조하십시오 ( &lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;실례보기&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0bf0b7548845980c1d5dcad28742d81af7aedc0b" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store. Also included at the bottom is an &lt;code&gt;onerror&lt;/code&gt; function that reports what the error was if the request fails. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">다음 예제는 주어진 레코드 제목을 요청하고, &lt;code&gt;onsuccess&lt;/code&gt; 는 IDBObjectStore 에서 관련 레코드를 가져 &lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; 로 사용 가능하게 함 ) 레코드의 한 특성을 업데이트 한 다음 업데이트 된 레코드를 다시 오브젝트 저장소에 넣습니다. 요청의 실패시 오류가 무엇인지보고 하는 &lt;code&gt;onerror&lt;/code&gt; 함수도 맨 아래에 포함되어 있습니다 . 전체 예제를 보려면 &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; 앱 을 참조하십시오 ( &lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;실례보기&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="d07e5d312940b7b80d5322d83eef5ba6ff2866f3" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">다음 예제는 주어진 레코드 제목을 요청하고, &lt;code&gt;onsuccess&lt;/code&gt; 는 IDBObjectStore 에서 관련 레코드를 가져 &lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; 로 사용 가능하게 함 ) 레코드의 한 특성을 업데이트 한 다음 업데이트 된 레코드를 다시 오브젝트 저장소에 넣습니다. 전체 예제를 보려면 &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; 앱 을 참조하십시오 ( &lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;실례보기&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="850f99390f095f5e272ec1904dbe78d472bbe2fc" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title; when that request is successful the &lt;code&gt;onsuccess&lt;/code&gt; function gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request with &lt;code&gt;put()&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">다음 예제는 주어진 레코드 제목을 요청합니다. 해당 요청이 성공하면 &lt;code&gt;onsuccess&lt;/code&gt; 는 함수가에서 관련 기록을 얻을 수 &lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt; (로 사용할 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; 를 ) 레코드의 하나 개의 속성을 업데이트 한 다음에 다른 요청에서 객체 저장소에 업데이트 된 레코드 다시 넣 &lt;code&gt;put()&lt;/code&gt; . 전체 예제를 보려면 &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; 앱 을 참조하십시오 ( &lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;실례보기&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="990f96c3487ac24e580f88dcf924b2bb93b884c0" translate="yes" xml:space="preserve">
          <source>The following example resets the CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; property to its defaults.</source>
          <target state="translated">다음 예제는 CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt; 특성을 기본값으로 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="a4c1a57c4ca6684fa2f2d56c1548fee41c8ad915" translate="yes" xml:space="preserve">
          <source>The following example returns the data associated with the best-supported format:</source>
          <target state="translated">다음 예제는 가장 지원되는 형식과 관련된 데이터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2c576708ef5aaa02518bb5f857c48818940df581" translate="yes" xml:space="preserve">
          <source>The following example runs through the attribute nodes for the element in the document with id &quot;paragraph&quot;, and prints each attribute's value.</source>
          <target state="translated">다음 예제는 ID가 &quot;paragraph&quot;인 문서의 요소에 대한 속성 노드를 통해 실행되고 각 속성의 값을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="64636f22e839bb76e65af4be7439cec7abf92938" translate="yes" xml:space="preserve">
          <source>The following example sends payment information to a secure server using the &lt;a href=&quot;../fetch_api&quot;&gt;Fetch API&lt;/a&gt;. It calls &lt;code&gt;complete()&lt;/code&gt; with an answer appropriate to the status in the response.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../fetch_api&quot;&gt;Fetch API를&lt;/a&gt; 사용하여 지불 정보를 보안 서버로 보냅니다 . 응답의 상태에 맞는 응답으로 &lt;code&gt;complete()&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="53abf31adeec8a09dcd20df96daf7c3014d8ae99" translate="yes" xml:space="preserve">
          <source>The following example sets a callback function on the &lt;code&gt;onresourcetimingbufferfull&lt;/code&gt; property.</source>
          <target state="translated">다음 예제는 &lt;code&gt;onresourcetimingbufferfull&lt;/code&gt; 특성 에 콜백 함수를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="d3f7dbc2eb06624059a847a0d173430eea3c2d5d" translate="yes" xml:space="preserve">
          <source>The following example sets up a timeout to clear the payment request that might have been abandoned or neglected.</source>
          <target state="translated">다음 예는 포기되거나 무시되었을 수있는 지불 요청을 지우는 제한 시간을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="177b489e63fd126ecc71555c3891a912111adbae" translate="yes" xml:space="preserve">
          <source>The following example sets up event handlers for pausing and playing:</source>
          <target state="translated">다음 예제는 일시 정지 및 재생을위한 이벤트 핸들러를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4c5c78a1b0be981f77893b3d54c69156c847461d" translate="yes" xml:space="preserve">
          <source>The following example sets up event handlers, for pausing and playing:</source>
          <target state="translated">다음 예제는 일시 정지 및 재생을위한 이벤트 핸들러를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="46edbb0e256976b59fccba6f12043d13b9f70932" translate="yes" xml:space="preserve">
          <source>The following example sets up two simple buttons in a web page and hooks them to the &lt;code&gt;setTimeout()&lt;/code&gt; and &lt;code&gt;clearTimeout()&lt;/code&gt; routines. Pressing the first button will set a timeout which calls an alert dialog after two seconds and stores the timeout id for use by &lt;code&gt;clearTimeout()&lt;/code&gt;. You may optionally cancel this timeout by pressing on the second button.</source>
          <target state="translated">다음 예제는 웹 페이지에 두 개의 간단한 버튼을 설정하고 &lt;code&gt;setTimeout()&lt;/code&gt; 및 &lt;code&gt;clearTimeout()&lt;/code&gt; 루틴에 연결합니다. 첫 번째 버튼을 누르면 2 초 후에 경고 대화 상자를 호출하고 &lt;code&gt;clearTimeout()&lt;/code&gt; 에서 사용할 시간 초과 ID를 저장하는 시간 초과가 설정 됩니다. 선택적으로 두 번째 버튼을 눌러이 시간 초과를 취소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68d80a26b4b4a08ede321cf5bbcc2808f91817ac" translate="yes" xml:space="preserve">
          <source>The following example shows &quot;id&quot; in an alert dialog.</source>
          <target state="translated">다음 예제는 경고 대화 상자에서 &quot;id&quot;를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ed8d0f3f3df4dbbdb0877d093b925f1c6421132a" translate="yes" xml:space="preserve">
          <source>The following example shows &lt;code&gt;claimInterface()&lt;/code&gt; in the context of connecting to a USB device.</source>
          <target state="translated">다음 예제는 USB 장치 연결과 관련된 &lt;code&gt;claimInterface()&lt;/code&gt; 를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="855ee09d899529aa4e90342910c83a3624fafa6f" translate="yes" xml:space="preserve">
          <source>The following example shows a drop handler getting the source element's id from the drag data and then using the id to move the source element to the drop element.</source>
          <target state="translated">다음 예제는 드래그 데이터에서 소스 요소의 ID를 가져온 다음 ID를 사용하여 소스 요소를 드롭 요소로 이동하는 드롭 핸들러를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d0251c10297ab70e23d75732aa24809f1b880b02" translate="yes" xml:space="preserve">
          <source>The following example shows a pointer capture being released (when a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; event occurs. The browser does this automatically when a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">다음의 예를 보여줍니다 때 포인터 캡처 (출시되고 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; 의 이벤트가 발생합니다.하면 브라우저가 자동으로 수행 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ba3a2e0ca4ef19be9eb47ce63292c20cb6416871" translate="yes" xml:space="preserve">
          <source>The following example shows a possible use of the &lt;code&gt;size&lt;/code&gt; property:</source>
          <target state="translated">다음 예제는 &lt;code&gt;size&lt;/code&gt; 속성 의 가능한 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="705a4a5a7a7b30bdae2c02e4e01f6b9d2e1058c9" translate="yes" xml:space="preserve">
          <source>The following example shows a sample definition of the first parameter of the &lt;a href=&quot;../paymentrequest/paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest()&lt;/code&gt;&lt;/a&gt; constructor, the &lt;code&gt;data&lt;/code&gt; property of which contains &lt;code&gt;supportedNetworks&lt;/code&gt; and &lt;code&gt;supportedTypes&lt;/code&gt; properties.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../paymentrequest/paymentrequest&quot;&gt; &lt;code&gt;PaymentRequest()&lt;/code&gt; &lt;/a&gt; 생성자 의 첫 번째 매개 변수에 대한 샘플 정의를 보여줍니다. 여기에는 &lt;code&gt;data&lt;/code&gt; 특성에 &lt;code&gt;supportedNetworks&lt;/code&gt; 및 &lt;code&gt;supportedTypes&lt;/code&gt; 특성 이 포함 됩니다 .</target>
        </trans-unit>
        <trans-unit id="5f21bef05c016cada064653ab1afeee017aa62b2" translate="yes" xml:space="preserve">
          <source>The following example shows a simple button that, when clicked, opens a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;a href=&quot;htmldialogelement/showmodal&quot;&gt;&lt;code&gt;HTMLDialogElement.showModal()&lt;/code&gt;&lt;/a&gt; function. From there you can click the &lt;em&gt;Cancel&lt;/em&gt; button to close the dialog (via the &lt;a href=&quot;htmldialogelement/close&quot;&gt;&lt;code&gt;HTMLDialogElement.close()&lt;/code&gt;&lt;/a&gt; function), or submit the form via the submit button.</source>
          <target state="translated">다음 예제는 클릭 할 때 &lt;a href=&quot;htmldialogelement/showmodal&quot;&gt; &lt;code&gt;HTMLDialogElement.showModal()&lt;/code&gt; &lt;/a&gt; 함수 를 통해 양식을 포함하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 여는 간단한 버튼을 보여줍니다 . 거기서 &lt;em&gt;취소&lt;/em&gt; 단추를 클릭하여 대화 상자를 &lt;a href=&quot;htmldialogelement/close&quot;&gt; &lt;code&gt;HTMLDialogElement.close()&lt;/code&gt; &lt;/a&gt; 함수를 통해) 제출 단추를 통해 양식을 제출할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7eec4b00bae065e274bf4292ff9be05ad0c0d68" translate="yes" xml:space="preserve">
          <source>The following example shows a simple button that, when clicked, opens a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;code&gt;show()&lt;/code&gt; method. From there you can click the &lt;em&gt;Cancel&lt;/em&gt; button to close the dialog (via the &lt;a href=&quot;close&quot;&gt;&lt;code&gt;HTMLDialogElement.close()&lt;/code&gt;&lt;/a&gt; method), or submit the form via the submit button.</source>
          <target state="translated">다음 예제는 클릭 할 때 &lt;code&gt;show()&lt;/code&gt; 메서드 를 통해 양식을 포함하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 여는 간단한 버튼을 보여줍니다 . 거기서 &lt;em&gt;취소&lt;/em&gt; 단추를 클릭하여 대화 상자를 &lt;a href=&quot;close&quot;&gt; &lt;code&gt;HTMLDialogElement.close()&lt;/code&gt; &lt;/a&gt; 메소드를 통해) 제출 단추를 통해 양식을 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc1e841e69d6dcaef8b6a67cf0b94228e3d3d5ea" translate="yes" xml:space="preserve">
          <source>The following example shows a simple button that, when clicked, opens a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;code&gt;showModal()&lt;/code&gt; method. From there you can click the &lt;em&gt;Cancel&lt;/em&gt; button to close the dialog (via the &lt;a href=&quot;close&quot;&gt;&lt;code&gt;HTMLDialogElement.close()&lt;/code&gt;&lt;/a&gt; method), or submit the form via the submit button.</source>
          <target state="translated">다음 예제는 클릭 할 때 &lt;code&gt;showModal()&lt;/code&gt; 메서드 를 통해 양식을 포함하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 여는 간단한 버튼을 보여줍니다 . 거기서 &lt;em&gt;취소&lt;/em&gt; 단추를 클릭하여 대화 상자를 &lt;a href=&quot;close&quot;&gt; &lt;code&gt;HTMLDialogElement.close()&lt;/code&gt; &lt;/a&gt; 메소드를 통해) 제출 단추를 통해 양식을 제출할 수 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1dfb22cef2e2a04dc51023e4d17c1de72e8f465b" translate="yes" xml:space="preserve">
          <source>The following example shows a theoretical analytics code pattern that submits data to a server by using the &lt;code&gt;sendBeacon()&lt;/code&gt; method.</source>
          <target state="translated">다음 예제는 &lt;code&gt;sendBeacon()&lt;/code&gt; 메소드를 사용하여 서버에 데이터를 제출하는 이론적 분석 코드 패턴을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="89f75f9fb0dc0323340f2fcc02eca76baa2a4696" translate="yes" xml:space="preserve">
          <source>The following example shows a theoretical analytics code pattern that submits data to a server using the &lt;code&gt;sendBeacon()&lt;/code&gt; method.</source>
          <target state="translated">다음 예제는 &lt;code&gt;sendBeacon()&lt;/code&gt; 메소드를 사용하여 서버에 데이터를 제출하는 이론적 분석 코드 패턴을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="d0f36ea4bdd89f07960216ebd320f28329b5a515" translate="yes" xml:space="preserve">
          <source>The following example shows a theoretical analytics code that attempts to submit data to a server by using a synchronous &lt;code&gt;XMLHttpRequest&lt;/code&gt; in an unload handler. This results in the unload of the page to be delayed.</source>
          <target state="translated">다음 예제는 언로드 핸들러에서 동기 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 를 사용하여 서버에 데이터를 제출하려고하는 이론적 분석 코드를 보여줍니다 . 이로 인해 페이지 언로드가 지연됩니다.</target>
        </trans-unit>
        <trans-unit id="87f8c6dcf867bf56ad304750f42e1a5447693d96" translate="yes" xml:space="preserve">
          <source>The following example shows an existing chat window or creates a new one when the user clicks a notification.</source>
          <target state="translated">다음 예는 기존 대화 창을 보여 주거나 사용자가 알림을 클릭하면 새 대화 창을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="5a87c35f32473ca8c38be4c14c9fc4c23d2ad805" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of a &lt;code&gt;ScriptProcessorNode&lt;/code&gt; to take a track loaded via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt;, process it, adding a bit of white noise to each audio sample of the input track (buffer) and play it through the &lt;a href=&quot;../audiodestinationnode&quot;&gt;&lt;code&gt;AudioDestinationNode&lt;/code&gt;&lt;/a&gt;. For each channel and each sample frame, the &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; function takes the associated &lt;code&gt;audioProcessingEvent&lt;/code&gt; and uses it to loop through each channel of the input buffer, and each sample in each channel, and add a small amount of white noise, before setting that result to be the output sample in each case.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt; &lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt; &lt;/a&gt; 를 통해로드 된 트랙을 가져 와서 처리하고 입력 트랙 (버퍼)의 각 오디오 샘플에 약간의 백색 노이즈를 추가하고 &lt;a href=&quot;../audiodestinationnode&quot;&gt; &lt;code&gt;AudioDestinationNode&lt;/code&gt; 를&lt;/a&gt; 통해 재생 하는 &lt;code&gt;ScriptProcessorNode&lt;/code&gt; 의 기본 사용법을 보여줍니다 . 각 채널과 각 샘플 프레임에 대해 &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; 함수는 연관된 &lt;code&gt;audioProcessingEvent&lt;/code&gt; 를 사용하여이를 사용하여 입력 버퍼의 각 채널과 각 채널의 각 샘플을 반복하고 결과를 설정하기 전에 소량의 백색 잡음을 추가합니다. 각 경우에 출력 샘플이됩니다.</target>
        </trans-unit>
        <trans-unit id="cf9a772fd3f90faf43aa600df6c164eeba40d69e" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of a &lt;code&gt;ScriptProcessorNode&lt;/code&gt; to take a track loaded via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt;, process it, adding a bit of white noise to each audio sample of the input track (buffer) and play it through the &lt;a href=&quot;audiodestinationnode&quot;&gt;&lt;code&gt;AudioDestinationNode&lt;/code&gt;&lt;/a&gt;. For each channel and each sample frame, the &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; function takes the associated &lt;code&gt;audioProcessingEvent&lt;/code&gt; and uses it to loop through each channel of the input buffer, and each sample in each channel, and add a small amount of white noise, before setting that result to be the output sample in each case.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt; &lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt; &lt;/a&gt; 를 통해로드 된 트랙을 가져 와서 처리하고 입력 트랙 (버퍼)의 각 오디오 샘플에 약간의 백색 노이즈를 추가하고 &lt;a href=&quot;audiodestinationnode&quot;&gt; &lt;code&gt;AudioDestinationNode&lt;/code&gt; 를&lt;/a&gt; 통해 재생 하는 &lt;code&gt;ScriptProcessorNode&lt;/code&gt; 의 기본 사용법을 보여줍니다 . 각 채널과 각 샘플 프레임에 대해 &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; 함수는 연관된 &lt;code&gt;audioProcessingEvent&lt;/code&gt; 를 사용하여이를 사용하여 입력 버퍼의 각 채널과 각 채널의 각 샘플을 반복하고 결과를 설정하기 전에 소량의 백색 잡음을 추가합니다. 각 경우에 출력 샘플이됩니다.</target>
        </trans-unit>
        <trans-unit id="42ab16254b249cb27fc9204b2d611a2328fb9237" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to connect a &lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt;&lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt;&lt;/a&gt; to an &lt;code&gt;AnalyserNode&lt;/code&gt;. While the audio is playing, we collect the frequency data repeatedly with &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; and draw a &quot;winamp bargraph style&quot; to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">의 다음의 예를 보여줍니다 기본적인 사용법 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; 는&lt;/a&gt; 연결 &lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt; &lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt; 를&lt;/a&gt; 에 &lt;code&gt;AnalyserNode&lt;/code&gt; . 오디오가 재생되는 동안 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame()&lt;/code&gt; &lt;/a&gt; 사용하여 주파수 데이터를 반복적으로 수집하고 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소에 &quot;winamp bargraph style&quot;을 그립니다 .</target>
        </trans-unit>
        <trans-unit id="d2f7e3d29f51cfc546fa304e3493e74139e45a64" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;GainNode&lt;/code&gt;, which is then used to mute and unmute the audio when a Mute button is clicked by changing the &lt;code&gt;gain&lt;/code&gt; property value.</source>
          <target state="translated">다음의 예를 보여 기본적인 사용법 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; 는&lt;/a&gt; 크리에이트하는 &lt;code&gt;GainNode&lt;/code&gt; 후 소거하는 데 사용되며, 음소거 버튼이 변경하여 클릭 할 때 오디오를 뮤트 해제 &lt;code&gt;gain&lt;/code&gt; 특성 값.</target>
        </trans-unit>
        <trans-unit id="d6e8c9153bd9934791313aa228815e4a1b8ef407" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect frequency data repeatedly and draw a &quot;winamp bargraph style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;AnalyserNode&lt;/code&gt; 를 만든 다음 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 사용하여 주파수 데이터를 반복적으로 수집하고 현재 오디오 입력의 &quot;winamp bargraph style&quot;출력을 그립니다. 보다 완벽한 적용 예제 / 정보는 &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; 데모를 확인하십시오 ( 관련 코드는 &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js 라인 128&amp;ndash;205&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c2ceb5663ea45fa8eb7a948ffd2a87e564f8a58c" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect frequency data repeatedly and draw a &quot;winamp bargraph style&quot; output of the current audio input. For more examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;AnalyserNode&lt;/code&gt; 를 만든 다음 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 사용하여 주파수 데이터를 반복적으로 수집하고 현재 오디오 입력의 &quot;winamp bargraph style&quot;출력을 그립니다. 더 많은 예제 / 정보는 &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; 데모를 확인하십시오 ( 관련 코드는 &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js 라인 128&amp;ndash;205&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="60a89ee025ef0ca5ff74a457b786f45f59cfe768" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제에서는 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;AnalyserNode&lt;/code&gt; 를 만든 다음 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 사용하여 시간 도메인 데이터를 반복적으로 수집하고 현재 오디오 입력의 &quot;오실로스코프 스타일&quot;출력을 그립니다. 보다 완벽한 적용 예제 / 정보는 &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; 데모를 확인하십시오 ( 관련 코드는 &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js 라인 128&amp;ndash;205&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="b99b3956bcc6ea6b5e5e90476bd61de62dbf1a15" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic-float-data/&quot;&gt;Voice-change-O-matic-float-data&lt;/a&gt; demo (see the &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic-float-data&quot;&gt;source code&lt;/a&gt; too).</source>
          <target state="translated">다음 예제에서는 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;AnalyserNode&lt;/code&gt; 를 만든 다음 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 사용하여 시간 도메인 데이터를 반복적으로 수집하고 현재 오디오 입력의 &quot;오실로스코프 스타일&quot;출력을 그립니다. 보다 완벽한 적용 예제 / 정보는 &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic-float-data/&quot;&gt;Voice-change-O-matic-float-data&lt;/a&gt; 데모를 확인하십시오 ( &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic-float-data&quot;&gt;소스 코드&lt;/a&gt; 도 참조 ).</target>
        </trans-unit>
        <trans-unit id="6db4b9d609d45f2f06fc4a8f52a8bbca8601f9a4" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제에서는 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;AnalyserNode&lt;/code&gt; 를 만든 다음 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 사용하여 시간 도메인 데이터를 반복적으로 수집하고 현재 오디오 입력의 &quot;오실로스코프 스타일&quot;출력을 그립니다. 보다 완벽한 적용 예제 / 정보는 &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; 데모를 확인하십시오 ( 관련 코드는 &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js 라인 128&amp;ndash;205&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="3ebd5fd192d61507741492c46c698d926380166c" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node. For an applied example, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제는 오실레이터 노드를 만들기위한 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 의 기본 사용법을 보여줍니다 . 적용된 예제는 &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin 데모를 &lt;/a&gt;&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;확인하십시오&lt;/a&gt; ( 관련 코드는 app.js 참조 ).</target>
        </trans-unit>
        <trans-unit id="5f8b77398e7663408d24572e6b6dd698160eb069" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node. For applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제는 오실레이터 노드를 만들기위한 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 의 기본 사용법을 보여줍니다 . 적용된 예제 / 정보는 &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin 데모를 &lt;/a&gt;&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;확인하십시오&lt;/a&gt; ( 관련 코드는 app.js 참조 ).</target>
        </trans-unit>
        <trans-unit id="c96539704fe1ed36695d989f58aad156fb66c366" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;GainNode&lt;/code&gt;, which is then used to mute and unmute the audio when a Mute button is clicked by changing the &lt;code&gt;gain&lt;/code&gt; property value.</source>
          <target state="translated">다음의 예를 보여 기본적인 사용법 &lt;a href=&quot;audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; 는&lt;/a&gt; 크리에이트하는 &lt;code&gt;GainNode&lt;/code&gt; 후 소거하는 데 사용되며, 음소거 버튼이 변경하여 클릭 할 때 오디오를 뮤트 해제 &lt;code&gt;gain&lt;/code&gt; 특성 값.</target>
        </trans-unit>
        <trans-unit id="a9747c9f8c3bb979569330ffa761f53d29558850" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제에서는 &lt;a href=&quot;audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;AnalyserNode&lt;/code&gt; 를 만든 다음 &lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 를 사용하여 시간 도메인 데이터를 반복적으로 수집하고 현재 오디오 입력의 &quot;오실로스코프 스타일&quot;출력을 그립니다. 보다 완벽한 적용 예제 / 정보는 &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; 데모를 확인하십시오 ( 관련 코드는 &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js 라인 128&amp;ndash;205&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="67ce9e5ccb7d7881b13a2c1d3cbd89dbb23060f9" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node and to start playing a tone on it. For an applied example, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제는 오실레이터 노드를 생성하고 톤을 재생하기 위해 &lt;a href=&quot;audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 의 기본 사용법을 보여줍니다 . 적용된 예제는 &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin 데모를 &lt;/a&gt;&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;확인하십시오&lt;/a&gt; ( 관련 코드는 app.js 참조 ).</target>
        </trans-unit>
        <trans-unit id="c10035dff9da9a9cf27f0e78f7c0f415f921b864" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a Biquad filter node. For a complete working example, check out our &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;voice-change-o-matic&lt;/a&gt; demo (look at the &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;source code&lt;/a&gt; too).</source>
          <target state="translated">다음 예제는 Biquad 필터 노드를 만들기위한 AudioContext의 기본 사용법을 보여줍니다. 완전한 작동 예를 보려면 &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;음성 변경-오 메틱&lt;/a&gt; 데모를 확인하십시오 ( &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;소스 코드&lt;/a&gt; 도보십시오).</target>
        </trans-unit>
        <trans-unit id="5e790c8caa2130c5c5f71fc4cdf41b47706aee96" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a Biquad filter node. For a complete working example, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;voice-change-o-matic&lt;/a&gt; demo (look at the &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;source code&lt;/a&gt; too).</source>
          <target state="translated">다음 예제는 Biquad 필터 노드를 만들기위한 AudioContext의 기본 사용법을 보여줍니다. 완전한 작동 예를 보려면 &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;음성 변경-오 메틱&lt;/a&gt; 데모를 확인하십시오 ( &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;소스 코드&lt;/a&gt; 도보십시오).</target>
        </trans-unit>
        <trans-unit id="d419e6879edf66df35afcb16bc5b46def800d8fc" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a convolver node.</source>
          <target state="translated">다음 예제는 Convolver 노드를 만들기위한 AudioContext의 기본 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ec8b1964f1b8449c90dea469a4e77f282d04d4d9" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a convolver node. The basic premise is that you create an AudioBuffer containing a sound sample to be used as an ambience to shape the convolution (called the &lt;em&gt;impulse response&lt;/em&gt;,) and apply that to the convolver. The example below uses a short sample of a concert hall crowd, so the reverb effect applied is really deep and echoey.</source>
          <target state="translated">다음 예제는 Convolver 노드를 만들기위한 AudioContext의 기본 사용법을 보여줍니다. 기본 전제는 컨볼 루션 ( &lt;em&gt;임펄스 응답&lt;/em&gt; 이라고 함)을 형성하기위한 분위기로 사용되는 사운드 샘플을 포함하는 AudioBuffer를 만들어이를 컨 볼버에 적용하는 것입니다. 아래 예는 콘서트 홀 군중의 짧은 샘플을 사용하므로 적용된 리버브 효과는 실제로 깊고 반향입니다.</target>
        </trans-unit>
        <trans-unit id="d9c348a7a6d70c6ff50f28ddacbe7e644dc9ef17" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a wave shaper node. For applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt; demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제는 WaveContextr 노드를 작성하기위한 AudioContext의 기본 사용법을 보여줍니다. 적용된 예제 / 정보는 &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic &lt;/a&gt;&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;데모를 &lt;/a&gt;&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js&quot;&gt;확인하십시오&lt;/a&gt; ( 관련 코드는 app.js 참조 ).</target>
        </trans-unit>
        <trans-unit id="ce1cd519e0fac827e01535358e2b808f81b03596" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create an Analyser node, then use requestAnimationFrame() to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">다음 예제는 AudioContext를 사용하여 분석기 노드를 만든 다음 requestAnimationFrame ()을 사용하여 시간 도메인 데이터를 반복적으로 수집하고 현재 오디오 입력의 &quot;오실로스코프 스타일&quot;출력을 그립니다. 보다 완벽한 적용 예제 / 정보는 &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; 데모를 확인하십시오 ( 관련 코드는 &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js 라인 128&amp;ndash;205&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="544a4cb84984c5d452e79acde5d675be4fe422c5" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create an oscillator node. For applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code); also see our &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; page for more information.</source>
          <target state="translated">다음 예제는 오실레이터 노드를 만들기위한 AudioContext의 기본 사용법을 보여줍니다. 응용 예제 / 정보에 &lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;대해서는 &lt;/a&gt;&lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin 데모를 &lt;/a&gt;확인하십시오 ( 관련 코드는 app.js 참조 ). 자세한 내용 은 &lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6518b2d0b60eee0f55b63cdd4c525befb50caaf1" translate="yes" xml:space="preserve">
          <source>The following example shows both uses of the &lt;code&gt;clearMarks()&lt;/code&gt; method.</source>
          <target state="translated">다음 예제는 &lt;code&gt;clearMarks()&lt;/code&gt; 메소드 의 두 가지 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="767065d5ac6c188eab3c99130b840193a899a63d" translate="yes" xml:space="preserve">
          <source>The following example shows both uses of the &lt;code&gt;clearMeasures()&lt;/code&gt; method.</source>
          <target state="translated">다음 예제는 &lt;code&gt;clearMeasures()&lt;/code&gt; 메소드 의 두 가지 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="201d597b58c76c0725b95a0987335fa0f8db3fb1" translate="yes" xml:space="preserve">
          <source>The following example shows feature detection for the Media Session API. It then instantiates a metadata object for the session, and adds event handlers for the user control actions:</source>
          <target state="translated">다음 예는 미디어 세션 API의 기능 감지를 보여줍니다. 그런 다음 세션의 메타 데이터 개체를 인스턴스화하고 사용자 컨트롤 작업에 대한 이벤트 처리기를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0ac8600345a07c8b847e3a0f363d38d6b1c8692e" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;mark()&lt;/code&gt; is used to create an application-defined &lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;peformance entry&lt;/code&gt;&lt;/a&gt; in the browser's performance entry buffer.</source>
          <target state="translated">다음 예는 &lt;code&gt;mark()&lt;/code&gt; 를 사용 하여 브라우저의 성능 항목 버퍼에서 응용 프로그램 정의 &lt;a href=&quot;../performanceentry&quot;&gt; &lt;code&gt;peformance entry&lt;/code&gt; &lt;/a&gt; 을 만드는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="3d9634aea270d1ee77918f9ec397709546f2e081" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;measure()&lt;/code&gt; is used to create a new &lt;em&gt;measure&lt;/em&gt;&lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;performance entry&lt;/code&gt;&lt;/a&gt; in the browser's performance entry buffer.</source>
          <target state="translated">다음 예제는 &lt;code&gt;measure()&lt;/code&gt; 를 사용 하여 브라우저의 성능 항목 버퍼에서 새 &lt;em&gt;측정 값 &lt;/em&gt;&lt;a href=&quot;../performanceentry&quot;&gt; &lt;code&gt;performance entry&lt;/code&gt; &lt;/a&gt; 을 작성하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e1b60b080c32c75c7a6f4eb54f545aab50566e44" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a &lt;a href=&quot;../urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; object from a URL string.</source>
          <target state="translated">다음 예제는 URL 문자열에서 &lt;a href=&quot;../urlsearchparams&quot;&gt; &lt;code&gt;URLSearchParams&lt;/code&gt; &lt;/a&gt; 객체 를 만드는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9a14d8066371c9b7c2ac9ca18d0e40d2d88b2902" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an area for receiving dropped files:</source>
          <target state="translated">다음 예제는 삭제 된 파일을 수신하기위한 영역을 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8bc204ff21a909d29114194801ae6e06760cad3c" translate="yes" xml:space="preserve">
          <source>The following example shows how to register two observers: the first one registers for several event types and the second observer only registers for one event type.</source>
          <target state="translated">다음 예제는 두 개의 옵저버를 등록하는 방법을 보여줍니다. 첫 번째는 여러 이벤트 유형에 등록하고 두 번째 옵저버는 하나의 이벤트 유형에 대해서만 등록합니다.</target>
        </trans-unit>
        <trans-unit id="e1196fd43be06d94c1ba87b6a6013b1837cb0d45" translate="yes" xml:space="preserve">
          <source>The following example shows how to test for and clear a &lt;code&gt;'stall'&lt;/code&gt; condition in the result of a data transfer.</source>
          <target state="translated">다음 예는 데이터 전송 결과에서 &lt;code&gt;'stall'&lt;/code&gt; 조건 을 테스트하고 지우는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f9f91198697099e264c7db491f37b9ff589e2137" translate="yes" xml:space="preserve">
          <source>The following example shows how to update the payment sheet as it's being presented to the end-user.</source>
          <target state="translated">다음 예는 최종 사용자에게 제공되는 결제 시트를 업데이트하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2fac85cabdd57f827bd41b560875a5da02180055" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;finish()&lt;/code&gt; method and catch an &lt;code&gt;InvalidState&lt;/code&gt; error.</source>
          <target state="translated">다음 예제는 &lt;code&gt;finish()&lt;/code&gt; 메소드 를 사용하고 &lt;code&gt;InvalidState&lt;/code&gt; 오류를 포착하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9707b001d18380a2a47667559b4f827cc506834d" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;mode&lt;/code&gt; option for readers and writers.</source>
          <target state="translated">다음 예는 독자와 작가에게 &lt;code&gt;mode&lt;/code&gt; 옵션 을 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="24382fee2acb14c7acd876c809360a40dcb6cd0d" translate="yes" xml:space="preserve">
          <source>The following example shows how to use this property.</source>
          <target state="translated">다음 예제는이 속성을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="f6500a051169147e204ed47e488ed0becdda17cc" translate="yes" xml:space="preserve">
          <source>The following example shows how you could separate a stereo track (say, a piece of music), and process the left and right channel differently. To use them, you need to use the second and third parameters of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt;&lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt;&lt;/a&gt; method, which allow you to specify both the index of the channel to connect from and the index of the channel to connect to.</source>
          <target state="translated">다음 예는 스테레오 트랙 (예 : 음악)을 분리하고 왼쪽 및 오른쪽 채널을 다르게 처리하는 방법을 보여줍니다. 이들을 사용하려면 연결할 채널의 인덱스와 연결할 채널의 인덱스를 모두 지정할 수 있는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt; &lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt; &lt;/a&gt; 메서드 의 두 번째 및 세 번째 매개 변수를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="673d126c604f92225bb72fa3f2e312150b77f3a6" translate="yes" xml:space="preserve">
          <source>The following example shows minimal functionality and focuses instead on showing the complete context of instantiating a &lt;code&gt;PaymentRequest&lt;/code&gt; object.</source>
          <target state="translated">다음 예제는 최소한의 기능을 보여주고 대신 &lt;code&gt;PaymentRequest&lt;/code&gt; 객체 를 인스턴스화하는 완전한 컨텍스트를 표시하는 데 중점을 둡니다 .</target>
        </trans-unit>
        <trans-unit id="f2f0a117106320051ec8f4c04032a855363c87e7" translate="yes" xml:space="preserve">
          <source>The following example shows pointer capture being set on an element.</source>
          <target state="translated">다음 예제는 요소에서 설정되는 포인터 캡처를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="11a920ce7314e8f5f07f05319ec174856a969530" translate="yes" xml:space="preserve">
          <source>The following example shows the basic use of the &lt;code&gt;request()&lt;/code&gt; method with an asynchronous function as the callback. Once the callback is invoked, no other running code on this orign can hold `'my_resource'` until the callback returns.</source>
          <target state="translated">다음 예제는 콜백으로 비동기 함수와 함께 &lt;code&gt;request()&lt;/code&gt; 메소드 의 기본 사용법을 보여줍니다 . 콜백이 호출되면이 orign에서 실행중인 다른 코드는 콜백이 반환 될 때까지 'my_resource'를 유지할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9778f1dbf547fda12a38deba634bb5652a303a82" translate="yes" xml:space="preserve">
          <source>The following example shows the creation of a &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">다음 예제는 사용자 정의 싱크 및 API 제공 큐잉 전략 을 사용하여 &lt;code&gt;WritableStream&lt;/code&gt; 을 작성하는 방법을 보여줍니다 . 그런 다음 &lt;code&gt;sendMessage()&lt;/code&gt; 라는 함수를 호출 하여 새로 만든 스트림과 문자열을 전달합니다. 이 함수 내에서 스트림의 &lt;code&gt;getWriter()&lt;/code&gt; 메소드를 호출하여 &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; &lt;/a&gt; 인스턴스를 리턴합니다 . &lt;code&gt;forEach()&lt;/code&gt; 호출은 스트림 스트링의 각 청크를 작성하는데 사용된다. 마지막으로 &lt;code&gt;write()&lt;/code&gt; 및 &lt;code&gt;close()&lt;/code&gt; 는 청크 및 스트림의 성공 또는 실패를 처리하도록 처리 된 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c13aaf1ca7614e8c48feb2ed74c903915d7d1794" translate="yes" xml:space="preserve">
          <source>The following example shows the creation of a &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">다음 예제는 사용자 정의 싱크 및 API 제공 큐잉 전략 을 사용하여 &lt;code&gt;WritableStream&lt;/code&gt; 을 작성하는 방법을 보여줍니다 . 그런 다음 &lt;code&gt;sendMessage()&lt;/code&gt; 라는 함수를 호출 하여 새로 만든 스트림과 문자열을 전달합니다. 이 함수 내에서 스트림의 &lt;code&gt;getWriter()&lt;/code&gt; 메소드를 호출하여 &lt;a href=&quot;writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; &lt;/a&gt; 인스턴스를 리턴합니다 . &lt;code&gt;forEach()&lt;/code&gt; 호출은 스트림 스트링의 각 청크를 작성하는데 사용된다. 마지막으로 &lt;code&gt;write()&lt;/code&gt; 및 &lt;code&gt;close()&lt;/code&gt; 는 청크 및 스트림의 성공 또는 실패를 처리하도록 처리 된 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7b0fb33f6195c46408861bb4574ab2e64295f35d" translate="yes" xml:space="preserve">
          <source>The following example shows the implementation of a fetch event that uses a preloaded response.</source>
          <target state="translated">다음 예제는 사전로드 된 응답을 사용하는 페치 이벤트의 구현을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3f3e205fb1239ca5373b0433f4a24433b6e076d8" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;duration&lt;/code&gt; property.</source>
          <target state="translated">다음 예제는 &lt;code&gt;duration&lt;/code&gt; 속성을 사용하는 것을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="3c712f8b9dace25890e3b31e9196a67834497383" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;entryType&lt;/code&gt; property.</source>
          <target state="translated">다음 예제는 &lt;code&gt;entryType&lt;/code&gt; 속성 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4876b66305b9121a957b8075983954194fde2002" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; properties alongside images of varying dimensions:</source>
          <target state="translated">다음 예제는 다양한 치수의 이미지와 함께 &lt;code&gt;height&lt;/code&gt; 및 &lt;code&gt;width&lt;/code&gt; 속성을 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c01a708afcd2a65bcdbd8257238b8b6b86ebdfa1" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;name&lt;/code&gt; property.</source>
          <target state="translated">다음 예제는 &lt;code&gt;name&lt;/code&gt; 속성 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="92845b02be15ab1b985e66dd0b2501507224ed13" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;onkeypress&lt;/code&gt; event during a digitation into a form field in order to filter the typed characters:</source>
          <target state="translated">다음 예제는 입력 된 문자를 필터링하기 위해 양식 필드에 디지털화하는 동안 &lt;code&gt;onkeypress&lt;/code&gt; 이벤트를 사용하는 것을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="7f4f376de3fe0171cbc4ffb0b861d12e69f63398" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;onmousemove&lt;/code&gt; event with a javaScript tooltip.</source>
          <target state="translated">다음 예제는 &lt;code&gt;onmousemove&lt;/code&gt; 툴팁과 함께 onmousemove 이벤트 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="400ba02e6efdd886c269e97431fe228eec477af9" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;startTime&lt;/code&gt; property.</source>
          <target state="translated">다음 예제는 &lt;code&gt;startTime&lt;/code&gt; 속성 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f5279b0b84800499bd9b9c03f8ff414dbe27ce85" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;toJSON()&lt;/code&gt; method.</source>
          <target state="translated">다음 예제는 &lt;code&gt;toJSON()&lt;/code&gt; 메소드 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="790f6e1e59103e012c1df0838542d78d707ba633" translate="yes" xml:space="preserve">
          <source>The following example shows two uses of the &lt;code&gt;ready&lt;/code&gt; property. The first uses &lt;code&gt;ready&lt;/code&gt; to ensure that the &lt;code&gt;WritableStream&lt;/code&gt; is done writing and thus able to receive data before sending a binary chunk. The second also checks whether the the &lt;code&gt;WritableStream&lt;/code&gt; is done writing, but this time because the writing must be finished before the writer can be closed.</source>
          <target state="translated">다음 예제는 &lt;code&gt;ready&lt;/code&gt; 속성 의 두 가지 사용법을 보여줍니다 . 첫 번째는 &lt;code&gt;WritableStream&lt;/code&gt; 이 쓰기 를 완료하고 바이너리 청크를 보내기 전에 데이터를 수신 할 수 있도록하기 위해 &lt;code&gt;ready&lt;/code&gt; 를 사용합니다 . 두 번째는 &lt;code&gt;WritableStream&lt;/code&gt; 이 쓰기 를 완료 했는지 확인 하지만 이번에는 쓰기를 끝내기 전에 쓰기를 완료해야하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="913d88c16faba66028294d185d5390a8ff403089" translate="yes" xml:space="preserve">
          <source>The following example simulates typewriter by first clearing and then slowly typing content into the &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; that matches a specified group of selectors.</source>
          <target state="translated">다음 예제 는 지정된 선택기 그룹과 일치하는 &lt;a href=&quot;../nodelist&quot;&gt; &lt;code&gt;NodeList&lt;/code&gt; 에&lt;/a&gt; 컨텐츠를 지우고 천천히 입력하여 타자기를 시뮬레이트 합니다.</target>
        </trans-unit>
        <trans-unit id="24c68e32b3009378a12189d166b455d237cb02e7" translate="yes" xml:space="preserve">
          <source>The following example snippet is taken from our expanding-list-web-component example (see it live also). In this case, our custom element extends the &lt;a href=&quot;../htmlulistelement&quot;&gt;&lt;code&gt;HTMLUListElement&lt;/code&gt;&lt;/a&gt;, which represents the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul&quot;&gt;&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">다음 예제 스 니펫은 확장 목록 웹 구성 요소 예제에서 가져온 것입니다 (실제 참조). 이 경우 사용자 정의 요소 는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul&quot;&gt; &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소 를 나타내는 &lt;a href=&quot;../htmlulistelement&quot;&gt; &lt;code&gt;HTMLUListElement&lt;/code&gt; 를&lt;/a&gt; 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="ccb869b4735a71f30fafd9007990aa5e8154a417" translate="yes" xml:space="preserve">
          <source>The following example starts an oscillator and moves it in front of the listener after 1 second, behind the listener after 2 seconds, and back to the listener's position after 3 seconds. Note that in this case, the change will mainly affect the timbre and perceived volume of the sound.</source>
          <target state="translated">다음 예제는 발진기를 시작하여 1 초 후에 리스너 앞, 2 초 후에 리스너 뒤에, 3 초 후에 리스너의 위치로 다시 이동시킵니다. 이 경우, 변경은 주로 음색의 음량과 지각 된 음량에 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="c8bd99fb6a07ebfd16dffe834746f96fb3de907a" translate="yes" xml:space="preserve">
          <source>The following example starts an oscillator and pans it above the listener after 1 second, below the listener after 2 seconds, and back to the center after 3 seconds. Note that in this case, the change will mainly affect the timbre of the oscillator, as it's a simple mono wave.</source>
          <target state="translated">다음 예제는 발진기를 시작하고 1 초 후에 리스너 위로, 2 초 후에 리스너 아래로, 3 초 후에 중앙으로 다시 이동합니다. 이 경우 변경은 단순한 모노 웨이브이기 때문에 오실레이터의 음색에 주로 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="ed62b529aaa91ca42671d3cb897ade885b5c2d98" translate="yes" xml:space="preserve">
          <source>The following example starts an oscillator, and pans it to the left after 1 second, to the right after 2 seconds, and back to the center after 3 seconds.</source>
          <target state="translated">다음 예제는 발진기를 시작하고 1 초 후에 왼쪽으로, 2 초 후에 오른쪽으로, 3 초 후에 중앙으로 다시 이동합니다.</target>
        </trans-unit>
        <trans-unit id="2ebcff91173c5a4d6adfd0be41e2a5a62d5a5d62" translate="yes" xml:space="preserve">
          <source>The following example takes data from a &lt;a href=&quot;../pushevent&quot;&gt;&lt;code&gt;PushEvent&lt;/code&gt;&lt;/a&gt; and displays it on all of the service worker's clients. The data payload of the push message is available in the event object's &lt;code&gt;data&lt;/code&gt; property (&lt;a href=&quot;../pushevent/data&quot;&gt;&lt;code&gt;PushEvent.data&lt;/code&gt;&lt;/a&gt;, which contains a &lt;a href=&quot;../pushmessagedata&quot;&gt;&lt;code&gt;PushMessageData&lt;/code&gt;&lt;/a&gt; object.)</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../pushevent&quot;&gt; &lt;code&gt;PushEvent&lt;/code&gt; &lt;/a&gt; 에서 데이터를 가져 와서 모든 서비스 워커의 클라이언트에 표시합니다. 푸시 메시지의 데이터 페이로드는 이벤트 객체의에서 사용할 &lt;code&gt;data&lt;/code&gt; 속성 ( &lt;a href=&quot;../pushevent/data&quot;&gt; &lt;code&gt;PushEvent.data&lt;/code&gt; &lt;/a&gt; 포함, &lt;a href=&quot;../pushmessagedata&quot;&gt; &lt;code&gt;PushMessageData&lt;/code&gt; 의&lt;/a&gt; 객체를.)</target>
        </trans-unit>
        <trans-unit id="9ca190c23e8fe845a41d4cf375a355c8052fa962" translate="yes" xml:space="preserve">
          <source>The following example takes data from a &lt;code&gt;PushEvent&lt;/code&gt; and displays it on all of the service worker's clients.</source>
          <target state="translated">다음 예제는 &lt;code&gt;PushEvent&lt;/code&gt; 에서 데이터를 가져 와서 모든 서비스 워커의 클라이언트에 표시합니다.</target>
        </trans-unit>
        <trans-unit id="9b553504d5b37fce7cd61e0ad37d0e0226ee8ef4" translate="yes" xml:space="preserve">
          <source>The following example takes data from a PushEvent and displays it on all of the service workers' clients.</source>
          <target state="translated">다음 예제는 PushEvent에서 데이터를 가져 와서 모든 서비스 워커의 클라이언트에 표시합니다.</target>
        </trans-unit>
        <trans-unit id="d1ca73f426d6b3ab4e2caddc6a971035a5770380" translate="yes" xml:space="preserve">
          <source>The following example tests whether a plugin is available for the application/pdf mime type and if so, which plugin that is.</source>
          <target state="translated">다음 예제는 플러그인이 application / pdf mime 유형에 사용 가능한지 여부와 사용 가능한 경우 어떤 플러그인인지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="7d18190b5ad40d5dba90405dd6dc0bffd8bf922f" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;claim()&lt;/code&gt; inside service worker's &quot;&lt;code&gt;activate&lt;/code&gt;&quot; event listener so that clients loaded in the same scope do not need to be reloaded before their fetches will go through this service worker.</source>
          <target state="translated">다음 예제에서는 서비스 작업자의 &quot; &lt;code&gt;activate&lt;/code&gt; &quot;이벤트 리스너 에서 &lt;code&gt;claim()&lt;/code&gt; 사용 하므로 페치가이 서비스 작업자를 통과하기 전에 동일한 범위에로드 된 클라이언트를 다시로드 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="9bf8274744618f824cb8cd33401e03ca3df661b6" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;nextHopProtocol&lt;/code&gt; property.</source>
          <target state="translated">다음 예제는 &lt;code&gt;nextHopProtocol&lt;/code&gt; 속성을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="98a3e01bb1ea05beb7c5258ae3d9619f2cf3dd15" translate="yes" xml:space="preserve">
          <source>The following example uses the beforeinstallprompt event handler to make an install button operable, by using the event inside a click handler.</source>
          <target state="translated">다음 예제는 beforeinstallprompt 이벤트 핸들러를 사용하여 클릭 핸들러 내부의 이벤트를 사용하여 설치 단추를 작동 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="deed3fbc5b32cc39c5336ce13ec84c76cdccdbc3" translate="yes" xml:space="preserve">
          <source>The following example uses the default value of &lt;code&gt;scope&lt;/code&gt; (by omitting it). The service worker in this case will control &lt;code&gt;example.com/index.html&lt;/code&gt; as well as pages underneath it, like &lt;code&gt;example.com/product/description.html&lt;/code&gt;.</source>
          <target state="translated">다음 예제는 &lt;code&gt;scope&lt;/code&gt; 의 기본값 을 생략하여 사용합니다. 이 경우 서비스 노동자는 제어 할 &lt;code&gt;example.com/index.html&lt;/code&gt; 페이지처럼, 그것을 아래뿐만 아니라 &lt;code&gt;example.com/product/description.html&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="58c2b71b6bda82d8e4f2d04eaa2bfcbb66806236" translate="yes" xml:space="preserve">
          <source>The following example uses this property to test for the existence of a USBConfiguration property to select a configuration before claiming an interface.</source>
          <target state="translated">다음 예제는이 특성을 사용하여 인터페이스를 청구하기 전에 USBConfiguration 특성이 있는지 테스트하여 구성을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="9868c4aa3a49b3c141a541f1150589eb14c51e29" translate="yes" xml:space="preserve">
          <source>The following example was adapted from &lt;a href=&quot;http://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/&quot;&gt;this blog post&lt;/a&gt;.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;http://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/&quot;&gt;이 블로그 게시물&lt;/a&gt; 에서 수정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="6d2ef2f48d56b7190c80d6d945b8fbc26eaac266" translate="yes" xml:space="preserve">
          <source>The following example will do something after the user types the word &quot;exit&quot; in any point of a page.</source>
          <target state="translated">다음 예제는 사용자가 페이지의 어느 지점에서나 &quot;exit&quot;라는 단어를 입력 한 후에 무언가를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0148dd02e5aba9031325708640951708a88c1671" translate="yes" xml:space="preserve">
          <source>The following example will show the rangeCount every second. Select text in the browser to see it change.</source>
          <target state="translated">다음 예제는 초마다 rangeCount를 보여줍니다. 변경 내용을 보려면 브라우저에서 텍스트를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="5d74cac7b141bf68b7b90bb1e9d607b722e6e260" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses &lt;code&gt;getVideoTracks()&lt;/code&gt; to retrieve a track for passing to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ImageCapture/ImageCapture&quot;&gt;&lt;code&gt;ImageCapture()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome의 이미지 캡처 / 사진 해상도 샘플&lt;/a&gt; 에서 추출 된 다음 예제 는 &lt;code&gt;getVideoTracks()&lt;/code&gt; 를 사용 하여 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ImageCapture/ImageCapture&quot;&gt; &lt;code&gt;ImageCapture()&lt;/code&gt; &lt;/a&gt; 생성자로 전달할 트랙을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="4bdb7c10cd1aa2ea9ce4019a8fee2f11d76ccc9e" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoCapabilities().imageWidth&lt;/code&gt; to modify the size of an input range.</source>
          <target state="translated">&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome의 이미지 캡처 / 사진 해상도 샘플&lt;/a&gt; 에서 추출 된 다음 예제 는 &lt;code&gt;getPhotoCapabilities().imageWidth&lt;/code&gt; 의 결과를 사용하여 입력 범위의 크기를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="735419a02f63cbfe9f099ff618da4b9b89686b25" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; to modify the size of an input range. This example also shows how the &lt;code&gt;ImageCapture&lt;/code&gt; object is created using a &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; retrieved from a device's &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome의 이미지 캡처 / 사진 해상도 샘플&lt;/a&gt; 에서 추출한 다음 예제 는 &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; 의 결과를 사용하여 입력 범위의 크기를 수정합니다. 이 예제는 또한 장치의 &lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt; 에서 검색된 &lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; 을&lt;/a&gt; 사용하여 &lt;code&gt;ImageCapture&lt;/code&gt; 객체를 만드는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="d47e61ef5db7b087231285e6d30526695006aa9a" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; to modify the size of an input range. This example also shows how the &lt;code&gt;ImageCapture&lt;/code&gt; object is created using a &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; retrieved from a device's &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome의 이미지 캡처 / 사진 해상도 샘플&lt;/a&gt; 에서 추출한 다음 예제 는 &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; 의 결과를 사용하여 입력 범위의 크기를 수정합니다. 이 예제는 또한 장치의 &lt;a href=&quot;mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt; 에서 검색된 &lt;a href=&quot;mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; 을&lt;/a&gt; 사용하여 &lt;code&gt;ImageCapture&lt;/code&gt; 객체를 만드는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="6f368a60eeb43922f4fe5b4b9f4c49d5bf5d3ded" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoSettings()&lt;/code&gt; to modify the size of an input range. This example also shows how the ImageCapture object is created using a &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; retrieved from a device's &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome의 이미지 캡처 / 사진 해상도 샘플&lt;/a&gt; 에서 추출한 다음 예제 는 &lt;code&gt;getPhotoSettings()&lt;/code&gt; 의 결과를 사용하여 입력 범위의 크기를 수정합니다. 이 예제는 또한 장치의 &lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt; 에서 검색된 &lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; 을&lt;/a&gt; 사용하여 ImageCapture 객체를 만드는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="8f8a19722133c1ea455e5abb4fe2f372654ada60" translate="yes" xml:space="preserve">
          <source>The following example, taken from the WebVR spec, finds the first available &lt;code&gt;HMDVRDevice&lt;/code&gt; and its associated &lt;a href=&quot;positionsensorvrdevice&quot;&gt;&lt;code&gt;PositionSensorVRDevice&lt;/code&gt;&lt;/a&gt;, if it has one.</source>
          <target state="translated">WebVR 스펙에서 가져온 다음 예제는 사용 가능한 첫 번째 &lt;code&gt;HMDVRDevice&lt;/code&gt; 및 연관된 &lt;a href=&quot;positionsensorvrdevice&quot;&gt; &lt;code&gt;PositionSensorVRDevice&lt;/code&gt; &lt;/a&gt; (있는 경우)를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="27d98c26605ad9ae19e79ccc13cdfb4cd0be16f1" translate="yes" xml:space="preserve">
          <source>The following example, the value of size properties of all &quot;&lt;code&gt;resource&lt;/code&gt;&quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; events are logged.</source>
          <target state="translated">다음 예제에서는 모든 &quot; &lt;code&gt;resource&lt;/code&gt; &quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt; 이벤트 의 크기 특성 값 이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="a74953b245c7e7b2e65fbd4b6752e20e8a1c913a" translate="yes" xml:space="preserve">
          <source>The following example, the value of the size properties of all &quot;&lt;code&gt;resource&lt;/code&gt;&quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; events are logged.</source>
          <target state="translated">다음 예제에서는 모든 &quot; &lt;code&gt;resource&lt;/code&gt; &quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt; 이벤트 의 크기 특성 값 이 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="db92b07504cf60573c93d71f7a584f49a40e21bc" translate="yes" xml:space="preserve">
          <source>The following example, which is loosely based on &lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;Intel's Orientation Phone demo&lt;/a&gt;, instantiates an &lt;code&gt;AbsoluteOrientationSensor&lt;/code&gt; with a frequency of 60 times a second. On each reading it uses &lt;a href=&quot;orientationsensor/quaternion&quot;&gt;&lt;code&gt;OrientationSensor.quaternion&lt;/code&gt;&lt;/a&gt; to rotate a visual model of a phone.</source>
          <target state="translated">&lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;인텔 오리엔테이션 폰 데모를&lt;/a&gt; 기반으로하는 다음 예제 는 초당 60 번의 빈도로 &lt;code&gt;AbsoluteOrientationSensor&lt;/code&gt; 를 인스턴스화합니다 . 읽을 때마다 &lt;a href=&quot;orientationsensor/quaternion&quot;&gt; &lt;code&gt;OrientationSensor.quaternion&lt;/code&gt; &lt;/a&gt; 을 사용 하여 전화기의 시각적 모델을 회전시킵니다.</target>
        </trans-unit>
        <trans-unit id="faeada3c9f8138ed5c764668bc526abb27d92a55" translate="yes" xml:space="preserve">
          <source>The following example, which is loosely based on &lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;Intel's Orientation Phone demo&lt;/a&gt;, instantiates an &lt;code&gt;RelativeOrientationSensor&lt;/code&gt; with a frequency of 60 times a second. (Note that the Intel demo this is based on uses the &lt;code&gt;AbsoluteOreintationSensor&lt;/code&gt;.) On each reading it uses &lt;a href=&quot;orientationsensor/quaternion&quot;&gt;&lt;code&gt;OrientationSensor.quaternion&lt;/code&gt;&lt;/a&gt; to rotate a visual model of a phone.</source>
          <target state="translated">&lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;인텔의 오리엔테이션 폰 데모를&lt;/a&gt; 기반으로하는 다음 예제 는 초당 60 번의 빈도로 &lt;code&gt;RelativeOrientationSensor&lt;/code&gt; 를 인스턴스화합니다 . (이를 기반으로하는 Intel 데모는 &lt;code&gt;AbsoluteOreintationSensor&lt;/code&gt; 를 사용합니다 .) 각 판독에서 &lt;a href=&quot;orientationsensor/quaternion&quot;&gt; &lt;code&gt;OrientationSensor.quaternion&lt;/code&gt; &lt;/a&gt; 을 사용 하여 전화기의 시각적 모델을 회전시킵니다.</target>
        </trans-unit>
        <trans-unit id="0e9be9ccf6aaca2db19080340f5bf6effce1617f" translate="yes" xml:space="preserve">
          <source>The following examples are screenshots from the attached file.</source>
          <target state="translated">다음 예는 첨부 파일의 스크린 샷입니다.</target>
        </trans-unit>
        <trans-unit id="febdc7f77ee1e378fdb7983060b04d9078c5548a" translate="yes" xml:space="preserve">
          <source>The following examples show how the mode and name properties are passed in the call to &lt;a href=&quot;lockmanager/request&quot;&gt;&lt;code&gt;LockManager.request()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;LockManager&lt;/code&gt; is the object returned by &lt;a href=&quot;navigator/locks&quot;&gt;&lt;code&gt;navigator.locks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 예제는 모드 및 이름 특성이 &lt;a href=&quot;lockmanager/request&quot;&gt; &lt;code&gt;LockManager.request()&lt;/code&gt; &lt;/a&gt; 호출에서 전달되는 방법을 보여줍니다 . &lt;code&gt;LockManager&lt;/code&gt; 는 &lt;a href=&quot;navigator/locks&quot;&gt; &lt;code&gt;navigator.locks&lt;/code&gt; 가&lt;/a&gt; 반환 한 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="aea84d7771e836ef26e5cfa682717ab7b0670a1e" translate="yes" xml:space="preserve">
          <source>The following examples show how the mode property passed in the call to &lt;a href=&quot;../lockmanager/request&quot;&gt;&lt;code&gt;LockManager.request()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;LockManager&lt;/code&gt; is the object returned by &lt;a href=&quot;../navigator/locks&quot;&gt;&lt;code&gt;navigator.locks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 예제는 모드 특성이 &lt;a href=&quot;../lockmanager/request&quot;&gt; &lt;code&gt;LockManager.request()&lt;/code&gt; &lt;/a&gt; 호출에서 전달 된 방법을 보여줍니다 . &lt;code&gt;LockManager&lt;/code&gt; 는 &lt;a href=&quot;../navigator/locks&quot;&gt; &lt;code&gt;navigator.locks&lt;/code&gt; 가&lt;/a&gt; 반환 한 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="24c1ef3007f1e18404b508ad7b4f8b184159ed4b" translate="yes" xml:space="preserve">
          <source>The following examples show how the name property passed in the call to &lt;a href=&quot;../lockmanager/request&quot;&gt;&lt;code&gt;LockManager.request()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;LockManager&lt;/code&gt; is the object returned by &lt;a href=&quot;../navigator/locks&quot;&gt;&lt;code&gt;navigator.locks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 예제는 name 속성이 &lt;a href=&quot;../lockmanager/request&quot;&gt; &lt;code&gt;LockManager.request()&lt;/code&gt; &lt;/a&gt; 호출에서 전달 된 방법을 보여줍니다 . &lt;code&gt;LockManager&lt;/code&gt; 는 &lt;a href=&quot;../navigator/locks&quot;&gt; &lt;code&gt;navigator.locks&lt;/code&gt; 가&lt;/a&gt; 반환 한 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="3b63252171bdd483df676b3e519fc5383a295d21" translate="yes" xml:space="preserve">
          <source>The following exceptions can be raised by this method:</source>
          <target state="translated">이 방법으로 다음과 같은 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94737e1025dd41a1f555fb83fe451a64d957615b" translate="yes" xml:space="preserve">
          <source>The following fairly verbose snippet could be used if you wanted to first check whether notifications are supported, then check if permission has been granted for the current origin to send notifications, then request permission if required, before then sending a notification.</source>
          <target state="translated">먼저 알림이 지원되는지 여부를 확인한 다음 현재 출처가 알림을 보낼 수있는 권한이 부여되었는지 확인한 다음 필요한 경우 권한을 요청한 후 알림을 전송하려는 경우 다음과 같은 상세 스 니펫을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97270a71b3f307dbf5b479f5e623f0dfc2c361bd" translate="yes" xml:space="preserve">
          <source>The following features require the &lt;code&gt;UniversalBrowserWrite&lt;/code&gt; privilege, otherwise they will be ignored. Chrome scripts have this privilege automatically, others have to request it from the PrivilegeManager.</source>
          <target state="translated">다음 기능에는 &lt;code&gt;UniversalBrowserWrite&lt;/code&gt; 권한이 필요합니다 . 그렇지 않으면 무시됩니다. Chrome 스크립트에는이 권한이 자동으로 부여되고 다른 사용자는 PrivilegeManager에 요청해야합니다.</target>
        </trans-unit>
        <trans-unit id="ffe08c31f8f2de545ea35d64da0c17067c56c848" translate="yes" xml:space="preserve">
          <source>The following fields are initialized to &lt;code&gt;null&lt;/code&gt; if they are not included in the &lt;a href=&quot;candidate&quot;&gt;&lt;code&gt;RTCIceCandidate.candidate&lt;/code&gt;&lt;/a&gt; property: &lt;a href=&quot;foundation&quot;&gt;&lt;code&gt;foundation&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;component&quot;&gt;&lt;code&gt;component&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;priority&quot;&gt;&lt;code&gt;priority&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;ip&quot;&gt;&lt;code&gt;ip&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;protocol&quot;&gt;&lt;code&gt;protocol&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;port&quot;&gt;&lt;code&gt;port&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tcptype&quot;&gt;&lt;code&gt;tcpType&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;relatedaddress&quot;&gt;&lt;code&gt;relatedAddress&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;relatedport&quot;&gt;&lt;code&gt;relatedPort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;candidate&quot;&gt; &lt;code&gt;RTCIceCandidate.candidate&lt;/code&gt; &lt;/a&gt; 특성에 포함되지 않은 &lt;a href=&quot;foundation&quot;&gt; &lt;code&gt;foundation&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;component&quot;&gt; &lt;code&gt;component&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;priority&quot;&gt; &lt;code&gt;priority&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;ip&quot;&gt; &lt;code&gt;ip&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;protocol&quot;&gt; &lt;code&gt;protocol&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;port&quot;&gt; &lt;code&gt;port&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;tcptype&quot;&gt; &lt;code&gt;tcpType&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;relatedaddress&quot;&gt; &lt;code&gt;relatedAddress&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;relatedport&quot;&gt; &lt;code&gt;relatedPort&lt;/code&gt; &lt;/a&gt; 필드는 &lt;code&gt;null&lt;/code&gt; 로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="bca50c7f82bf8444ab26f5ba763468a2fb85b21d" translate="yes" xml:space="preserve">
          <source>The following figure shows the difference between &lt;code&gt;outerHeight&lt;/code&gt; and &lt;code&gt;innerHeight&lt;/code&gt;.</source>
          <target state="translated">다음 그림은 &lt;code&gt;outerHeight&lt;/code&gt; 와 &lt;code&gt;innerHeight&lt;/code&gt; 의 차이점을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="85993a51834b24eb9e0801e8b6f47efb69bf9929" translate="yes" xml:space="preserve">
          <source>The following function adds three data items to the local storage for the current domain, then returns the number of items in the storage:</source>
          <target state="translated">다음 함수는 세 개의 데이터 항목을 현재 도메인의 로컬 저장소에 추가 한 다음 저장소의 항목 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5481722ed64977b6ae2707736f3839dd2204677e" translate="yes" xml:space="preserve">
          <source>The following function calls a function recursively for each node contained by a root node (including the root itself):</source>
          <target state="translated">다음 함수는 루트 노드 (루트 자체 포함)에 포함 된 각 노드에 대해 함수를 재귀 적으로 호출합니다.</target>
        </trans-unit>
        <trans-unit id="f29118e3cbf3c3119f236d85d72dfd7c5ddd1b19" translate="yes" xml:space="preserve">
          <source>The following function creates three data entries in local storage, then deletes them using &lt;code&gt;clear()&lt;/code&gt;.</source>
          <target state="translated">다음 함수는 로컬 저장소에 세 개의 데이터 항목을 만든 다음 &lt;code&gt;clear()&lt;/code&gt; 사용하여 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="8c59f04f94c110412685e25067fd79a7ad968f04" translate="yes" xml:space="preserve">
          <source>The following function creates three data items inside local storage, then removes the &lt;code&gt;image&lt;/code&gt; data item.</source>
          <target state="translated">다음 기능은 로컬 저장소 내에 3 개의 데이터 항목을 만든 다음 &lt;code&gt;image&lt;/code&gt; 데이터 항목 을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="c726c324b2ef771544dc8d8843ed7ed613eba477" translate="yes" xml:space="preserve">
          <source>The following function creates three data items inside local storage.</source>
          <target state="translated">다음 기능은 로컬 저장소 내에 3 개의 데이터 항목을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a245266c521a157e3b0ab4ee4747b646579e8db1" translate="yes" xml:space="preserve">
          <source>The following function implements such a strategy. It assumes base64-js imported as &lt;code&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;base64js.min.js&quot;/&amp;gt;&lt;/code&gt;. Note that TextEncoderLite only works with UTF-8.</source>
          <target state="translated">다음 함수는 이러한 전략을 구현합니다. base64-js를 &lt;code&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;base64js.min.js&quot;/&amp;gt;&lt;/code&gt; 로 가져온 것으로 가정합니다 . TextEncoderLite는 UTF-8에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="322089a75937578eb39cb596132bbb12324c87f0" translate="yes" xml:space="preserve">
          <source>The following function iterates over the local storage keys and gets the value set for each key:</source>
          <target state="translated">다음 기능은 로컬 스토리지 키를 반복하고 각 키에 설정된 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e377fff921b5d64d21fb78200793e78ce73ee9f5" translate="yes" xml:space="preserve">
          <source>The following function iterates over the local storage keys:</source>
          <target state="translated">다음 기능은 로컬 스토리지 키를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="d280adc56c877d6601ff48aa27747aa07012585b" translate="yes" xml:space="preserve">
          <source>The following function retrieves three data items from local storage, then uses them to set custom styles on a page.</source>
          <target state="translated">다음 함수는 로컬 저장소에서 세 개의 데이터 항목을 검색 한 다음이를 사용하여 페이지에서 사용자 정의 스타일을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b7b8bee67da30dc571e12693bb9aa523d6b9439e" translate="yes" xml:space="preserve">
          <source>The following gets the number of explicitly set styles on the following HTML element:</source>
          <target state="translated">다음은 다음 HTML 요소에서 명시 적으로 설정된 스타일 수를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="c7174a30b7048940e586ca2432c1dfc7530a8b8d" translate="yes" xml:space="preserve">
          <source>The following interfaces all inherit from &lt;code&gt;Node&lt;/code&gt;&amp;rsquo;s methods and properties: &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;attr&quot;&gt;&lt;code&gt;Attr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CharacterData&quot;&gt;&lt;code&gt;CharacterData&lt;/code&gt;&lt;/a&gt; (which &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;comment&quot;&gt;&lt;code&gt;Comment&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;cdatasection&quot;&gt;&lt;code&gt;CDATASection&lt;/code&gt;&lt;/a&gt; inherit), &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction&quot;&gt;&lt;code&gt;ProcessingInstruction&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;documenttype&quot;&gt;&lt;code&gt;DocumentType&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EntityReference&quot;&gt;&lt;code&gt;EntityReference&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">다음 인터페이스는 모두 &lt;code&gt;Node&lt;/code&gt; 의 메소드 및 특성 에서 상속됩니다 . &lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;attr&quot;&gt; &lt;code&gt;Attr&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CharacterData&quot;&gt; &lt;code&gt;CharacterData&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;text&quot;&gt; &lt;code&gt;Text&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;comment&quot;&gt; &lt;code&gt;Comment&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;cdatasection&quot;&gt; &lt;code&gt;CDATASection&lt;/code&gt; 이&lt;/a&gt; 상속 함), &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction&quot;&gt; &lt;code&gt;ProcessingInstruction&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;documentfragment&quot;&gt; &lt;code&gt;DocumentFragment&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;documenttype&quot;&gt; &lt;code&gt;DocumentType&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt; &lt;code&gt;Notation&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt; &lt;code&gt;Entity&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EntityReference&quot;&gt; &lt;code&gt;EntityReference&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a021cb24ae8e384026dfa371fdd382f37c5e9ffd" translate="yes" xml:space="preserve">
          <source>The following interfaces are included in the spec for purposes such as defining features used in multiple other places, or to serve as bases for multiple interfaces which can all be used as values of the same properties. You wouldn't directly use these in web development work, but they may be interesting for library authors to understand how the technology works so their implementations can be more effective, or for browser engineers looking for an easier reference than the spec provides.</source>
          <target state="translated">다음 인터페이스는 여러 다른 장소에서 사용되는 기능 정의와 같은 목적으로 또는 동일한 속성의 값으로 사용할 수있는 여러 인터페이스의 기반으로 사용하기 위해 사양에 포함되어 있습니다. 웹 개발 작업에서 직접 사용하지는 않지만 라이브러리 작성자는 기술이 어떻게 작동하는지 이해하여 구현이 더 효과적 일 수 있거나 사양이 제공하는 것보다 쉬운 참조를 찾고있는 브라우저 엔지니어에게 흥미로울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07134442d211d7db7601d0757b95753d772d781b" translate="yes" xml:space="preserve">
          <source>The following interfaces were defined in old versions of the Web Audio API spec, but are now obsolete and have been replaced by other interfaces.</source>
          <target state="translated">다음 인터페이스는 이전 버전의 Web Audio API 사양에서 정의되었지만 이제 더 이상 사용되지 않으며 다른 인터페이스로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="a9a470057028792dfc9fc1d7fcfc260bd063a1b3" translate="yes" xml:space="preserve">
          <source>The following is a brief list of common APIs in web and XML page scripting using the DOM.</source>
          <target state="translated">다음은 DOM을 사용하는 웹 및 XML 페이지 스크립팅의 일반적인 API 목록입니다.</target>
        </trans-unit>
        <trans-unit id="2a0d98bd8137ccf5a2b1fe68d9d1408d675977e0" translate="yes" xml:space="preserve">
          <source>The following is a collection of tips to improve canvas performance.</source>
          <target state="translated">다음은 캔버스 성능을 개선하기위한 팁 모음입니다.</target>
        </trans-unit>
        <trans-unit id="44e9a24b4cb089c24adbfa0962b3605667b65759" translate="yes" xml:space="preserve">
          <source>The following line creates an empty &lt;code&gt;FormData&lt;/code&gt; object and prepopulates it with key/value pairs from a form:</source>
          <target state="translated">다음 줄은 빈 &lt;code&gt;FormData&lt;/code&gt; 객체를 만들어 폼의 키 / 값 쌍으로 미리 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="cde7c8cddf7ea566e202267a9500398411eeee16" translate="yes" xml:space="preserve">
          <source>The following line creates an empty &lt;code&gt;FormData&lt;/code&gt; object:</source>
          <target state="translated">다음 줄은 빈 &lt;code&gt;FormData&lt;/code&gt; 객체를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="81786697aa2915baa6eb1367d4520712fcfd6a90" translate="yes" xml:space="preserve">
          <source>The following line of code fetches the first file in the node's file list as a &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">다음 코드 줄은 노드 파일 목록의 첫 번째 파일을 &lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 객체 로 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="426e6e385386c94cdacea844c2a1f319cf0e51fe" translate="yes" xml:space="preserve">
          <source>The following logs &quot;x&quot; to the console.</source>
          <target state="translated">다음은 콘솔에 &quot;x&quot;를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="963c5a6e0aa3be83f64697774ff54e0d5e933af8" translate="yes" xml:space="preserve">
          <source>The following method has been added: &lt;code&gt;requestAutocomplete()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;requestAutocomplete()&lt;/code&gt; 메소드가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="dcbe7ab86dddca8525df7d71f73e7feaee0ef08e" translate="yes" xml:space="preserve">
          <source>The following method was obsoleted long ago and was never implemented in all major browsers.</source>
          <target state="translated">다음 방법은 오래 전에 폐기되었으며 모든 주요 브라우저에서 구현되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="e2935dacf46c413c9b6802dd367e7e4a0743412c" translate="yes" xml:space="preserve">
          <source>The following methods and properties control how lines are drawn.</source>
          <target state="translated">다음 방법과 속성은 선을 그리는 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="7a183f23fcb5b911e13e7161d484ab51c50cf954" translate="yes" xml:space="preserve">
          <source>The following methods are provided for drawing text. See also the &lt;a href=&quot;textmetrics&quot;&gt;&lt;code&gt;TextMetrics&lt;/code&gt;&lt;/a&gt; object for text properties.</source>
          <target state="translated">텍스트를 그리기 위해 다음과 같은 방법이 제공됩니다. 텍스트 속성에 대해서는 &lt;a href=&quot;textmetrics&quot;&gt; &lt;code&gt;TextMetrics&lt;/code&gt; &lt;/a&gt; 객체를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="26c5f80976aa0be20738820e4fd8d05bdd5546d7" translate="yes" xml:space="preserve">
          <source>The following methods can be used to manipulate paths of objects.</source>
          <target state="translated">다음 방법을 사용하여 객체의 경로를 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4d1432c2dbf68bc107ddaffb6824018b2b6a47d" translate="yes" xml:space="preserve">
          <source>The following methods have been added: &lt;code&gt;checkValidity()&lt;/code&gt; and &lt;code&gt;setCustomValidity()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;checkValidity()&lt;/code&gt; 및 &lt;code&gt;setCustomValidity()&lt;/code&gt; 메소드가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ff83193d8b7ea273739091d1b8a35da05b1c896f" translate="yes" xml:space="preserve">
          <source>The following methods have been added: &lt;code&gt;checkValidity()&lt;/code&gt;, &lt;code&gt;setCustomValidity()&lt;/code&gt;, and &lt;code&gt;setSelectionRange()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;checkValidity()&lt;/code&gt; , &lt;code&gt;setCustomValidity()&lt;/code&gt; 및 &lt;code&gt;setSelectionRange()&lt;/code&gt; 메소드가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="347b28106a91303e7112d8d47d1611f7c438ea69" translate="yes" xml:space="preserve">
          <source>The following methods have been added: &lt;code&gt;checkValidity()&lt;/code&gt;, &lt;code&gt;setCustomValidity()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;checkValidity()&lt;/code&gt; , &lt;code&gt;setCustomValidity()&lt;/code&gt; 메소드가 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="5a677c389659993fbee65633d9d269505fc3e2b0" translate="yes" xml:space="preserve">
          <source>The following methods have been added: checkValidity(), setCustomValidity(), setSelectionRange(), stepUp(), and stepDown().</source>
          <target state="translated">checkValidity (), setCustomValidity (), setSelectionRange (), stepUp () 및 stepDown () 메소드가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="844b0ae147b2e4a66f7638c3b13f724b9789d4c4" translate="yes" xml:space="preserve">
          <source>The following methods have been deprecated:</source>
          <target state="translated">다음 메소드는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7e23c0fb22ffdd5bcbd559ff503b4cc560f6235a" translate="yes" xml:space="preserve">
          <source>The following more complex example will, 1 second from now, start playing 10 seconds worth of sound starting 3 seconds into the audio buffer.</source>
          <target state="translated">다음보다 복잡한 예제는 지금부터 1 초 후에 오디오 버퍼에서 3 초부터 시작하여 10 초 분량의 사운드를 재생하기 시작합니다.</target>
        </trans-unit>
        <trans-unit id="0ce8afa470b4e22e25f79b369d753eab44f0ce8d" translate="yes" xml:space="preserve">
          <source>The following new functions can be used in GLSL shader code, if this extension is enabled:</source>
          <target state="translated">이 확장이 활성화 된 경우 GLSL 셰이더 코드에서 다음과 같은 새로운 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bb6ed2aea11e5dbc04bcda8f08fcc90ca8f615d" translate="yes" xml:space="preserve">
          <source>The following non-standard properties and methods were removed in Gecko 7 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4): &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileName&quot;&gt;&lt;code&gt;File.fileName&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileSize&quot;&gt;&lt;code&gt;File.fileSize&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsBinary&quot;&gt;&lt;code&gt;File.getAsBinary()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsDataURL&quot;&gt;&lt;code&gt;File.getAsDataURL()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsText&quot;&gt;&lt;code&gt;File.getAsText(string encoding)&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=661876&quot;&gt;bug 661876&lt;/a&gt;). Standard properties &lt;a href=&quot;file/name&quot;&gt;&lt;code&gt;File.name&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;blob/size&quot;&gt;&lt;code&gt;Blob.size&lt;/code&gt;&lt;/a&gt;, and methods on &lt;a href=&quot;filereader&quot;&gt;&lt;code&gt;FileReader&lt;/code&gt;&lt;/a&gt; should be used instead.</source>
          <target state="translated">Gecko 7 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4)에서 비표준 속성 및 메소드는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileName&quot;&gt; &lt;code&gt;File.fileName&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileSize&quot;&gt; &lt;code&gt;File.fileSize&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsBinary&quot;&gt; &lt;code&gt;File.getAsBinary()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsDataURL&quot;&gt; &lt;code&gt;File.getAsDataURL()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsText&quot;&gt; &lt;code&gt;File.getAsText(string encoding)&lt;/code&gt; &lt;/a&gt; ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=661876&quot;&gt;버그 661876&lt;/a&gt; ). &lt;a href=&quot;filereader&quot;&gt; &lt;code&gt;FileReader&lt;/code&gt; 의&lt;/a&gt; 표준 속성 &lt;a href=&quot;file/name&quot;&gt; &lt;code&gt;File.name&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;blob/size&quot;&gt; &lt;code&gt;Blob.size&lt;/code&gt; &lt;/a&gt; 및 메서드를 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7999e22162b843d28c2c7d7dadc1ae47ec77a0f9" translate="yes" xml:space="preserve">
          <source>The following options are currently not shipped anywhere, but will be added in the near future.</source>
          <target state="translated">다음 옵션은 현재 어디에도 제공되지 않지만 가까운 시일 내에 추가 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="0bca0b366d186075a610ccacd7763ba77630576a" translate="yes" xml:space="preserve">
          <source>The following options are listed in the most up-to-date spec, but are not supported in any browsers yet. It is advisable to keep checking back regularly to see if the status of these has updated, and let us know if you find any out of date information.</source>
          <target state="translated">다음 옵션은 최신 사양으로 나열되어 있지만 아직 모든 브라우저에서 지원되지 않습니다. 이러한 상태가 업데이트되었는지 정기적으로 다시 확인하고 오래된 정보가 있는지 알려주는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="dab6ae7d177978b8ad4a5f7a04acf9f23d4f35e0" translate="yes" xml:space="preserve">
          <source>The following polyfill for both &lt;code&gt;classList&lt;/code&gt; and &lt;code&gt;DOMTokenList&lt;/code&gt; ensures &lt;strong&gt;full&lt;/strong&gt; compliance (coverage) for all standard methods and properties of &lt;code&gt;Element.prototype.classList&lt;/code&gt; for &lt;strong&gt;IE10&lt;/strong&gt;-&lt;strong&gt;IE11 &lt;/strong&gt;browsers plus &lt;em&gt;nearly&lt;/em&gt; compliant behavior for &lt;strong&gt;IE 6-9&lt;/strong&gt;. Check it out:</source>
          <target state="translated">모두 다음 polyfill &lt;code&gt;classList&lt;/code&gt; 및 &lt;code&gt;DOMTokenList&lt;/code&gt; 는 보장 &lt;strong&gt;전체&lt;/strong&gt; 모든 표준 방법 및 속성에 대한 준수 (적용 범위) &lt;code&gt;Element.prototype.classList&lt;/code&gt; 에 대한 &lt;strong&gt;IE10&lt;/strong&gt; - &lt;strong&gt;IE11&lt;/strong&gt; 브라우저 플러스 &lt;em&gt;거의&lt;/em&gt; 호환 행동 &lt;strong&gt;IE 6-9&lt;/strong&gt; . 확인 해봐:</target>
        </trans-unit>
        <trans-unit id="b40c6195c1bf4082ae2e2c16ad99c64b92884a32" translate="yes" xml:space="preserve">
          <source>The following properties and methods provide general information and functionality to deal with the WebGL context:</source>
          <target state="translated">다음 특성 및 메소드는 WebGL 컨텍스트를 처리하기위한 일반 정보 및 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8cac2f579b1df11f92fc2cf3f414c007ee1107cd" translate="yes" xml:space="preserve">
          <source>The following properties are now &lt;code&gt;long&lt;/code&gt;, instead of &lt;code&gt;DOMString&lt;/code&gt;: &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;hspace&lt;/code&gt;, and &lt;code&gt;vspace&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 지금 &lt;code&gt;long&lt;/code&gt; 대신, &lt;code&gt;DOMString&lt;/code&gt; : &lt;code&gt;height&lt;/code&gt; , &lt;code&gt;width&lt;/code&gt; , &lt;code&gt;hspace&lt;/code&gt; 과 &lt;code&gt;vspace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="540ae2db3a026ae0b18dc8bb97dbd4a7b77d125d" translate="yes" xml:space="preserve">
          <source>The following properties are now &lt;code&gt;unsigned long&lt;/code&gt;, instead of &lt;code&gt;long&lt;/code&gt;: &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 지금 &lt;code&gt;unsigned long&lt;/code&gt; 대신, &lt;code&gt;long&lt;/code&gt; : &lt;code&gt;height&lt;/code&gt; 및 &lt;code&gt;width&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4bccfa5536c7256b5d16ac87aaa01c85ef8ce1cf" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;aLink&lt;/code&gt;, &lt;code&gt;bgColor&lt;/code&gt;, &lt;code&gt;background&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt;, and &lt;code&gt;vLink&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;aLink&lt;/code&gt; , &lt;code&gt;bgColor&lt;/code&gt; , &lt;code&gt;background&lt;/code&gt; , &lt;code&gt;link&lt;/code&gt; , &lt;code&gt;text&lt;/code&gt; 및 &lt;code&gt;vLink&lt;/code&gt; 속성은 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a28057a0939cfe25855eb347f2adca794ea2098c" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;align&lt;/code&gt;, &lt;code&gt;archive&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;, &lt;code&gt;code&lt;/code&gt;, &lt;code&gt;codeBase&lt;/code&gt;, &lt;code&gt;codeType&lt;/code&gt;, &lt;code&gt;declare&lt;/code&gt;, &lt;code&gt;hspace&lt;/code&gt;, &lt;code&gt;standby&lt;/code&gt;, and &lt;code&gt;vspace&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 이제 사용되지 않습니다 : &lt;code&gt;align&lt;/code&gt; , &lt;code&gt;archive&lt;/code&gt; , &lt;code&gt;border&lt;/code&gt; , &lt;code&gt;code&lt;/code&gt; , &lt;code&gt;codeBase&lt;/code&gt; , &lt;code&gt;codeType&lt;/code&gt; , &lt;code&gt;declare&lt;/code&gt; , &lt;code&gt;hspace&lt;/code&gt; , &lt;code&gt;standby&lt;/code&gt; 와 &lt;code&gt;vspace&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="40e41974a4b98c8371ff98df7e6df6de6a9955b2" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;charset&lt;/code&gt;, &lt;code&gt;coords&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;rev&lt;/code&gt;, and &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; , &lt;code&gt;coords&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;rev&lt;/code&gt; 및 &lt;code&gt;shape&lt;/code&gt; 속성은 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="033de105010b52742d2a10e0342cba893c4f499d" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;charset&lt;/code&gt;, &lt;code&gt;rev&lt;/code&gt;, and &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;charset&lt;/code&gt; , &lt;code&gt;rev&lt;/code&gt; 및 &lt;code&gt;shape&lt;/code&gt; 속성은 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="485a8f05dc0f225d0a0ceedea0acef1e0e685a9a" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;htmlFor,&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 이제 사용되지 않습니다 : &lt;code&gt;htmlFor,&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0596aede7b1e37bc1664dc66a6995aed451bd02a" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;, &lt;code&gt;align&lt;/code&gt;, &lt;code&gt;hspace&lt;/code&gt;, &lt;code&gt;vspace&lt;/code&gt;, and &lt;code&gt;longdesc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; , &lt;code&gt;border&lt;/code&gt; , &lt;code&gt;align&lt;/code&gt; , &lt;code&gt;hspace&lt;/code&gt; , &lt;code&gt;vspace&lt;/code&gt; 및 &lt;code&gt;longdesc&lt;/code&gt; 속성은 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="5f412282e5e7b092d0b22291afbc7c828c2654ad" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;scrolling&lt;/code&gt;, &lt;code&gt;marginWidth&lt;/code&gt;, &lt;code&gt;marginHeight&lt;/code&gt;, &lt;code&gt;longDesc&lt;/code&gt;, &lt;code&gt;frameBorder&lt;/code&gt;, and &lt;code&gt;align&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scrolling&lt;/code&gt; , &lt;code&gt;marginWidth&lt;/code&gt; , &lt;code&gt;marginHeight&lt;/code&gt; , &lt;code&gt;longDesc&lt;/code&gt; , &lt;code&gt;frameBorder&lt;/code&gt; 및 &lt;code&gt;align&lt;/code&gt; 속성은 이제 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ede688820ee2b35999d497dfdc00136c858b23b4" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;type&lt;/code&gt;, and &lt;code&gt;valueType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 및 &lt;code&gt;valueType&lt;/code&gt; 속성은 더 이상 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b3b8f0eeb230be61b2fe7e4de9ebb4b606f844a6" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: align and useMap.</source>
          <target state="translated">align 및 useMap 속성은 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad77311e62c8dfe88fd1e4714b17641bb468b386" translate="yes" xml:space="preserve">
          <source>The following properties are obsolete and should no longer be used, but may still be present in some browser versions.</source>
          <target state="translated">다음 속성은 더 이상 사용되지 않으며 더 이상 사용되지 않아야하지만 일부 브라우저 버전에는 여전히있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd659134cecfb8ed19671e5846f553a38447d2fe" translate="yes" xml:space="preserve">
          <source>The following properties control how text is laid out.</source>
          <target state="translated">다음 속성은 텍스트 레이아웃 방법을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="fcc56d9d42e1aeac5f778c3ec9e184c2ade16b45" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;crossorigin&lt;/code&gt;, &lt;code&gt;naturalWidth&lt;/code&gt;, &lt;code&gt;naturalHeight&lt;/code&gt;, and &lt;code&gt;complete&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;crossorigin&lt;/code&gt; , &lt;code&gt;naturalWidth&lt;/code&gt; , &lt;code&gt;naturalHeight&lt;/code&gt; 및 &lt;code&gt;complete&lt;/code&gt; 속성이 추가 되었습니다 .</target>
        </trans-unit>
        <trans-unit id="45af66c5828b7df3ca154ed8cfcacdfa24beb299" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;disabled&lt;/code&gt;, &lt;code&gt;elements&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;valdiationMessage&lt;/code&gt;, &lt;code&gt;validity&lt;/code&gt;, and &lt;code&gt;willValidate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;disabled&lt;/code&gt; , &lt;code&gt;elements&lt;/code&gt; , &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; , &lt;code&gt;valdiationMessage&lt;/code&gt; , &lt;code&gt;validity&lt;/code&gt; 및 &lt;code&gt;willValidate&lt;/code&gt; 특성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="9106c2f83ca823c1dbb62a4c66db05e31bee862e" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;hash&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;hostname&lt;/code&gt;, &lt;code&gt;media&lt;/code&gt;, &lt;code&gt;pathname&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;relList&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt;, and &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hash&lt;/code&gt; , &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;hostname&lt;/code&gt; , &lt;code&gt;media&lt;/code&gt; , &lt;code&gt;pathname&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; , &lt;code&gt;protocol&lt;/code&gt; , &lt;code&gt;relList&lt;/code&gt; , &lt;code&gt;search&lt;/code&gt; 및 &lt;code&gt;text&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="e5ce65405e3d1bf1df9d794039e6605f1b36dd9f" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;onafterprint&lt;/code&gt;, &lt;code&gt;onbeforeprint&lt;/code&gt;, &lt;code&gt;onbeforeunload&lt;/code&gt;, &lt;code&gt;onblur&lt;/code&gt;, &lt;code&gt;onerror&lt;/code&gt;, &lt;code&gt;onfocus&lt;/code&gt;, &lt;code&gt;onhashchange&lt;/code&gt;, &lt;code&gt;onload&lt;/code&gt;, &lt;code&gt;onmessage&lt;/code&gt;, &lt;code&gt;onoffline&lt;/code&gt;, &lt;code&gt;ononline&lt;/code&gt;, &lt;code&gt;onpopstate&lt;/code&gt;, &lt;code&gt;onresize&lt;/code&gt;, &lt;code&gt;onstorage&lt;/code&gt;, and &lt;code&gt;onunload&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;onafterprint&lt;/code&gt; , &lt;code&gt;onbeforeprint&lt;/code&gt; , &lt;code&gt;onbeforeunload&lt;/code&gt; , &lt;code&gt;onblur&lt;/code&gt; , &lt;code&gt;onerror&lt;/code&gt; , &lt;code&gt;onfocus&lt;/code&gt; , &lt;code&gt;onhashchange&lt;/code&gt; , &lt;code&gt;onload&lt;/code&gt; , &lt;code&gt;onmessage&lt;/code&gt; , &lt;code&gt;onoffline&lt;/code&gt; , &lt;code&gt;ononline&lt;/code&gt; , &lt;code&gt;onpopstate&lt;/code&gt; , &lt;code&gt;onresize&lt;/code&gt; , &lt;code&gt;onstorage&lt;/code&gt; 및 &lt;code&gt;onunload&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a68891bf522f8b6bd307ffd86d58976d54b29f94" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;rel&lt;/code&gt;, &lt;code&gt;relList&lt;/code&gt;, &lt;code&gt;media&lt;/code&gt;, &lt;code&gt;hreflang&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;hostname&lt;/code&gt;, &lt;code&gt;pathname&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt;, and &lt;code&gt;hash&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rel&lt;/code&gt; , &lt;code&gt;relList&lt;/code&gt; , &lt;code&gt;media&lt;/code&gt; , &lt;code&gt;hreflang&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; , &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;hostname&lt;/code&gt; , &lt;code&gt;pathname&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; , &lt;code&gt;protocol&lt;/code&gt; , &lt;code&gt;search&lt;/code&gt; 및 &lt;code&gt;hash&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="baf05f7eb800ee38c56a3a8baa12017aced053a3" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;relList&lt;/code&gt;, and &lt;code&gt;sizes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;relList&lt;/code&gt; 및 &lt;code&gt;sizes&lt;/code&gt; 특성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="549966605855e353cd122e4b189c5c5bd1960ada" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;srcdoc&lt;/code&gt;, &lt;code&gt;sandbox&lt;/code&gt;, and &lt;code&gt;contentWindow&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;srcdoc&lt;/code&gt; , &lt;code&gt;sandbox&lt;/code&gt; 및 &lt;code&gt;contentWindow&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="232b67171d17ab56813888110c8e2cc90c47eaca" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;srcset&lt;/code&gt;, &lt;code&gt;currentSrc&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;srcset&lt;/code&gt; , &lt;code&gt;currentSrc&lt;/code&gt; 및 &lt;code&gt;sizes&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a3a7dc190265feccf6bf2c4c5bc88c02a907e808" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;typeMustMatch&lt;/code&gt;, &lt;code&gt;contentWindow&lt;/code&gt;, &lt;code&gt;willValidate&lt;/code&gt;, &lt;code&gt;validity&lt;/code&gt;, and &lt;code&gt;validationMessage&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;typeMustMatch&lt;/code&gt; , &lt;code&gt;contentWindow&lt;/code&gt; , &lt;code&gt;willValidate&lt;/code&gt; , &lt;code&gt;validity&lt;/code&gt; 및 &lt;code&gt;validationMessage&lt;/code&gt; 특성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="927bd4b56683a253cd71c65593ef09d3afb2d262" translate="yes" xml:space="preserve">
          <source>The following properties have been added: autocomplete, autofocus, dirName, files, formAction, formEncType, formMethod, formNoValidate, formTarget, height, indeterminate, labels, list, max, min, multiple, pattern, placeholder, required, selectionDirection, selectionEnd, selectionStart, step, validationMessage, validity, valueAsDate, valueAsNumber, width, and willValidate.</source>
          <target state="translated">자동 완성, 자동 초점, dirName, 파일, formAction, formEncType, formMethod, formNoValidate, formTarget, 높이, 불확정, 레이블, 목록, 최대, 최소, 다중, 패턴, 자리 표시 자, 필수, selectionDirection, selectionEnd, selectionStart 속성이 추가되었습니다. , step, validationMessage, validity, valueAsDate, valueAsNumber, width 및 willValidate입니다.</target>
        </trans-unit>
        <trans-unit id="b9c33d1fdbc81019ebb51db1cee10b3e7c4d247b" translate="yes" xml:space="preserve">
          <source>The following properties have been deprecated. Where available, the appropriate replacement is provided.</source>
          <target state="translated">다음 속성이 더 이상 사용되지 않습니다. 가능한 경우 적절한 교체가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="6ceac8a5e280ec3f9c80acfd40b4e66ef249da1e" translate="yes" xml:space="preserve">
          <source>The following properties have been obsoleted: &lt;code&gt;align&lt;/code&gt;, &lt;code&gt;axis&lt;/code&gt;, &lt;code&gt;bgColor&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;ch&lt;/code&gt;, &lt;code&gt;chOff&lt;/code&gt;, &lt;code&gt;noWrap&lt;/code&gt;, and &lt;code&gt;vAlign&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;align&lt;/code&gt; , &lt;code&gt;axis&lt;/code&gt; , &lt;code&gt;bgColor&lt;/code&gt; , &lt;code&gt;height&lt;/code&gt; , &lt;code&gt;width&lt;/code&gt; , &lt;code&gt;ch&lt;/code&gt; , &lt;code&gt;chOff&lt;/code&gt; , &lt;code&gt;noWrap&lt;/code&gt; 및 &lt;code&gt;vAlign&lt;/code&gt; 속성은 폐기되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ba7ec829e748cc25bede51fb0e2a5704ec26a816" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;allowFullscreen&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;allowFullscreen&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ae9ec60baa162331f203be7299ebce783b46bc75" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;control&lt;/code&gt;.</source>
          <target state="translated">다음 속성이 추가되었습니다 : &lt;code&gt;control&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f4ea2922e4142c8c188c4d96c3856b3948ab5596" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;download&lt;/code&gt;.</source>
          <target state="translated">다음 속성이 추가되었습니다 : &lt;code&gt;download&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="980d30ca747c998299ab98797c9d5b281e41f2b7" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;scoped&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scoped&lt;/code&gt; 속성이 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8a8340e636b5f60ab51b727a2f2f98697c0a645b" translate="yes" xml:space="preserve">
          <source>The following property has been removed: &lt;code&gt;profile&lt;/code&gt;.</source>
          <target state="translated">다음 특성이 제거되었습니다 : &lt;code&gt;profile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a004dfcc4e2fb6306e02db51b6e2aa8c9926ea1b" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;align&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 더 이상 사용되지 않습니다 : &lt;code&gt;align&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cd8bdb68205c26b3479df47bb389f878b2a56a31" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;nohref&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 이제 사용되지 않습니다 : &lt;code&gt;nohref&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b201f43503b0631e93f31e7e2f9c5f1eafd78cfb" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;scheme&lt;/code&gt;.</source>
          <target state="translated">다음 특성이 더 이상 사용되지 않습니다 : &lt;code&gt;scheme&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bf1b9d2030a0ad21d36ec803f5cf39fd22de9f2a" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 더 이상 사용되지 않습니다 : &lt;code&gt;type&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="25ae194a75b8f2ff70996b25da37203a84313673" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">다음 속성은 더 이상 사용되지 않습니다 : &lt;code&gt;width&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2a66d5ab9a4ebbed41a434981b6a6e2112f4a86a" translate="yes" xml:space="preserve">
          <source>The following requests both audio and video without any specific requirements:</source>
          <target state="translated">다음은 특정 요구 사항없이 오디오 및 비디오를 모두 요청합니다.</target>
        </trans-unit>
        <trans-unit id="8d449485bc3e48e7ba6cfba963eddbf84784d3f7" translate="yes" xml:space="preserve">
          <source>The following sample is not optimized. It does not make use of .NET 4.5 Websocket support.</source>
          <target state="translated">다음 샘플은 최적화되지 않았습니다. .NET 4.5 Websocket 지원을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a4390c0b3b9e6eb1850207aad3e4d78393d8f404" translate="yes" xml:space="preserve">
          <source>The following script illustrates the use of &lt;code&gt;createJavaScriptNode()&lt;/code&gt;:</source>
          <target state="translated">다음 스크립트는 &lt;code&gt;createJavaScriptNode()&lt;/code&gt; 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="2efc08fc5fafa2d1a99ec29aaeae8e8165d2599f" translate="yes" xml:space="preserve">
          <source>The following shows how to specify a basic and advanced set of constraints. It specifies that the page or web app needs a width between 640 and 1280 and a height between 480 and 720, with the later number in each pair being preferred. The advanced property further specifies that an image size of 1920 by 1280 is the preferred or an aspect ratio of 1.333 if that is not available. Note that these constraints also illustrate what the spec refers to as a &lt;em&gt;backoff strategy&lt;/em&gt;.</source>
          <target state="translated">다음은 기본 및 고급 제한 조건 세트를 지정하는 방법을 보여줍니다. 페이지 또는 웹 앱에 640-1280 사이의 너비와 480-720 사이의 높이가 필요하며 각 쌍의 이후 숫자가 선호됨을 지정합니다. 고급 속성은 1920 x 1280의 이미지 크기를 사용할 수없는 경우 기본 크기 또는 1.333의 종횡비로 지정합니다. 이러한 제약 조건은 사양이 &lt;em&gt;백 오프 전략&lt;/em&gt; 이라고하는 것을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9fcee6ef9722b7fbb31ee3dc2c9420a162e09331" translate="yes" xml:space="preserve">
          <source>The following simple code snippet, registers a single handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; events. When the &lt;code&gt;src&lt;/code&gt; element is touched, the element's width and height will be calculate based on the touch point's &lt;code&gt;radiusX&lt;/code&gt; and &lt;code&gt;radiusY&lt;/code&gt; values and the element will then be rotated using the touch point's &lt;code&gt;rotationAngle&lt;/code&gt;.</source>
          <target state="translated">다음의 간단한 코드 스 니펫은 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; 이벤트에 대한 단일 핸들러를 등록 합니다. 때 &lt;code&gt;src&lt;/code&gt; 소자가 접촉되어, 소자의 폭과 높이를 계산 접촉점의 기반으로한다 &lt;code&gt;radiusX&lt;/code&gt; 및 &lt;code&gt;radiusY&lt;/code&gt; 값 요소는 터치 포인트의 사용 회전한다 &lt;code&gt;rotationAngle&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="6bbdb29db1d0c94109f1a7c92a3292460db82004" translate="yes" xml:space="preserve">
          <source>The following simple example loads a video chunk by chunk as fast as possible, playing it as soon as it can. This example was written by Nick Desaulniers and can be &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;viewed live here&lt;/a&gt; (you can also &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">다음의 간단한 예제는 가능한 한 빨리 비디오를 청크로로드하여 가능한 빨리 재생합니다. 이 예는 Nick Desaulniers가 작성했으며 &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;여기에서 실시간&lt;/a&gt; 으로 볼 수 있습니다 ( 추가 조사를 위해 &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;소스&lt;/a&gt; 를 다운로드 할 수도 있습니다).</target>
        </trans-unit>
        <trans-unit id="e9daee8c94d2e723d971c30ced2186df50e1d60f" translate="yes" xml:space="preserve">
          <source>The following simple example loads a video with &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;, playing it as soon as it can. This example was written by Nick Desaulniers and can be &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;viewed live here&lt;/a&gt; (you can also &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">다음 간단한 예제는 &lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt; 로 비디오를로드하여 최대한 빨리 재생합니다. 이 예는 Nick Desaulniers가 작성했으며 &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;여기에서 실시간&lt;/a&gt; 으로 볼 수 있습니다 ( 추가 조사를 위해 &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;소스&lt;/a&gt; 를 다운로드 할 수도 있습니다).</target>
        </trans-unit>
        <trans-unit id="1a55e4d8bfb84a88b63ff842a0ace53c76094e91" translate="yes" xml:space="preserve">
          <source>The following simple example registers a service worker example, an then adds an event handler to a button so you can explicitly update the service worker whenever desired:</source>
          <target state="translated">다음의 간단한 예제는 서비스 워커 예제를 등록한 다음 버튼에 이벤트 핸들러를 추가하여 원하는 때마다 서비스 워커를 명시 적으로 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="617fc251290155a680172f5f4801ef9cb2ba30f6" translate="yes" xml:space="preserve">
          <source>The following simple example registers a service worker example, but then immediately unregisters it again:</source>
          <target state="translated">다음 간단한 예제는 서비스 워커 예제를 등록한 다음 즉시 다시 등록 취소합니다.</target>
        </trans-unit>
        <trans-unit id="b51fb322fb3194ebc213fd36c4afcd7969fb5f83" translate="yes" xml:space="preserve">
          <source>The following simple example shows a function that can be used to set a custom field of view with four specified degree values for up, right, down and left. The &lt;a href=&quot;../vrfieldofview/vrfieldofview&quot;&gt;&lt;code&gt;VRFieldOfView()&lt;/code&gt;&lt;/a&gt; constructor is used to create a &lt;a href=&quot;../vrfieldofview&quot;&gt;&lt;code&gt;VRFieldOfView&lt;/code&gt;&lt;/a&gt; object from the supplied values, which is then fed into the &lt;code&gt;setFieldOfView()&lt;/code&gt; method (the default &lt;code&gt;zNear&lt;/code&gt; and &lt;code&gt;zFar&lt;/code&gt; values are always used, in this case.)</source>
          <target state="translated">다음의 간단한 예는 위, 오른쪽, 아래 및 왼쪽에 대해 네 개의 지정된 각도 값으로 사용자 정의 시야를 설정하는 데 사용할 수있는 함수를 보여줍니다. &lt;a href=&quot;../vrfieldofview/vrfieldofview&quot;&gt; &lt;code&gt;VRFieldOfView()&lt;/code&gt; &lt;/a&gt; 생성자는 생성하는데 사용된다 &lt;a href=&quot;../vrfieldofview&quot;&gt; &lt;code&gt;VRFieldOfView&lt;/code&gt; 의&lt;/a&gt; 다음에 공급되는 입력되는 값으로부터 오브젝트 &lt;code&gt;setFieldOfView()&lt;/code&gt; 메소드 (기본 &lt;code&gt;zNear&lt;/code&gt; 및 &lt;code&gt;zFar&lt;/code&gt; 값은 항상 이러한 경우, 사용한다.)</target>
        </trans-unit>
        <trans-unit id="5a7d41c5f1fb0748bc1a09a0e883699ed5b53cd4" translate="yes" xml:space="preserve">
          <source>The following simple example shows a function that can be used to set a custom field of view with four specified degree values for up, right, down and left. The &lt;code&gt;VRFieldOfView()&lt;/code&gt; constructor is used to create a &lt;a href=&quot;../vrfieldofview&quot;&gt;&lt;code&gt;VRFieldOfView&lt;/code&gt;&lt;/a&gt; object from the supplied values, which is then fed into the &lt;a href=&quot;../hmdvrdevice/setfieldofview&quot;&gt;&lt;code&gt;HMDVRDevice.setFieldOfView&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">다음의 간단한 예는 위, 오른쪽, 아래 및 왼쪽에 대해 네 개의 지정된 각도 값으로 사용자 정의 시야를 설정하는 데 사용할 수있는 함수를 보여줍니다. &lt;code&gt;VRFieldOfView()&lt;/code&gt; 생성자는 생성하는데 사용된다 &lt;a href=&quot;../vrfieldofview&quot;&gt; &lt;code&gt;VRFieldOfView&lt;/code&gt; 의&lt;/a&gt; 다음에 공급되는 공급 값으로부터 오브젝트 &lt;a href=&quot;../hmdvrdevice/setfieldofview&quot;&gt; &lt;code&gt;HMDVRDevice.setFieldOfView&lt;/code&gt; 의&lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="7f3908dd528be5154d6daac0a0350f268b9df9c3" translate="yes" xml:space="preserve">
          <source>The following simple example shows how to create an &lt;code&gt;AudioBuffer&lt;/code&gt; and fill it with random white noise. You can find the full source code at our &lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;webaudio-examples&lt;/a&gt; repository; a &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-buffer/&quot;&gt;running live&lt;/a&gt; version is also available.</source>
          <target state="translated">다음의 간단한 예는 &lt;code&gt;AudioBuffer&lt;/code&gt; 를 만들어 임의의 흰색 노이즈로 채우는 방법을 보여줍니다 . &lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;webaudio-examples&lt;/a&gt; 저장소 에서 전체 소스 코드를 찾을 수 있습니다 . &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-buffer/&quot;&gt;실행 라이브&lt;/a&gt; 버전도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0aaed96607a9eb8989fd88d3b37348479fa11ee0" translate="yes" xml:space="preserve">
          <source>The following simple example shows how you could separate a stereo track (say, a piece of music), and process the left and right channel differently. To use them, you need to use the second and third parameters of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt;&lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt;&lt;/a&gt; method, which allow you to specify the index of the channel to connect from and the index of the channel to connect to.</source>
          <target state="translated">다음의 간단한 예는 스테레오 트랙 (예 : 음악)을 분리하고 왼쪽 및 오른쪽 채널을 다르게 처리하는 방법을 보여줍니다. 이를 사용하려면 연결할 채널의 색인과 연결할 채널의 색인을 지정할 수 있는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt; &lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt; &lt;/a&gt; 메소드 의 두 번째 및 세 번째 매개 변수를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1ec998ed871fe631ecf6cff26f43ec1a15898cfa" translate="yes" xml:space="preserve">
          <source>The following sized formats become &lt;strong&gt;color-renderable&lt;/strong&gt;:</source>
          <target state="translated">다음과 같은 크기의 형식으로 &lt;strong&gt;색상을 렌더링 할 수 있습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="a334cac117a121f75de4d55a7d0d4d6eb76a64a1" translate="yes" xml:space="preserve">
          <source>The following snippet (see our &lt;a href=&quot;http://mdn.github.io/webvr-tests/vrdevice/&quot;&gt;VRDevice example&lt;/a&gt;) returns an array of all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay&quot;&gt;&lt;code&gt;VRDevice&lt;/code&gt;&lt;/a&gt;s connected to your computer via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getVRDevices&quot;&gt;&lt;code&gt;Navigator.getVRDevices()&lt;/code&gt;&lt;/a&gt;. For each connected device it then prints out the &lt;code&gt;hardwareUnitId&lt;/code&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceId&quot;&gt;&lt;code&gt;VRDevice.deviceId&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceName&quot;&gt;&lt;code&gt;VRDevice.deviceName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 코드 조각 ( &lt;a href=&quot;http://mdn.github.io/webvr-tests/vrdevice/&quot;&gt;VRDevice 예제&lt;/a&gt; 참조 )은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getVRDevices&quot;&gt; &lt;code&gt;Navigator.getVRDevices()&lt;/code&gt; &lt;/a&gt; 를 통해 컴퓨터에 연결된 모든 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay&quot;&gt; &lt;code&gt;VRDevice&lt;/code&gt; &lt;/a&gt; 의 배열을 반환합니다 . 연결된 각 장치에 대해 &lt;code&gt;hardwareUnitId&lt;/code&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceId&quot;&gt; &lt;code&gt;VRDevice.deviceId&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceName&quot;&gt; &lt;code&gt;VRDevice.deviceName&lt;/code&gt; &lt;/a&gt; 을 인쇄합니다 .</target>
        </trans-unit>
        <trans-unit id="457f5d04c88565917f43dfac13214bd074e2fa88" translate="yes" xml:space="preserve">
          <source>The following snippet accesses the current domain's local &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object and adds a data item to it using &lt;a href=&quot;../storage/setitem&quot;&gt;&lt;code&gt;Storage.setItem()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 스 니펫은 현재 도메인의 로컬 &lt;a href=&quot;../storage&quot;&gt; &lt;code&gt;Storage&lt;/code&gt; &lt;/a&gt; 객체에 액세스하고 &lt;a href=&quot;../storage/setitem&quot;&gt; &lt;code&gt;Storage.setItem()&lt;/code&gt; &lt;/a&gt; 사용하여 데이터 아이템을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="fed9e87e119969d675a88209e404113a28406dd4" translate="yes" xml:space="preserve">
          <source>The following snippet accesses the current domain's session &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object and adds a data item to it using &lt;a href=&quot;../storage/setitem&quot;&gt;&lt;code&gt;Storage.setItem()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 스 니펫은 현재 도메인의 세션 &lt;a href=&quot;../storage&quot;&gt; &lt;code&gt;Storage&lt;/code&gt; &lt;/a&gt; 객체에 액세스하고 &lt;a href=&quot;../storage/setitem&quot;&gt; &lt;code&gt;Storage.setItem()&lt;/code&gt; &lt;/a&gt; 사용하여 데이터 항목을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="ba0244756728a50c0765beef0b4721b1698b3625" translate="yes" xml:space="preserve">
          <source>The following snippet comes from &lt;a href=&quot;../service_worker_api/using_service_workers#Install_and_activate.3A_populating_your_cache&quot;&gt;Using Service Workers&lt;/a&gt;; go there for more details.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;../service_worker_api/using_service_workers#Install_and_activate.3A_populating_your_cache&quot;&gt;서비스 작업자 사용&lt;/a&gt; 에서 제공됩니다 . 자세한 내용은 거기로 가십시오.</target>
        </trans-unit>
        <trans-unit id="240c5a73fff654922ff506bc2264d123bdd90528" translate="yes" xml:space="preserve">
          <source>The following snippet comes from &lt;a href=&quot;../service_worker_api/using_service_workers#Updating_your_service_worker&quot;&gt;Using Service Workers&lt;/a&gt;; go there for more details.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;../service_worker_api/using_service_workers#Updating_your_service_worker&quot;&gt;서비스 작업자 사용&lt;/a&gt; 에서 제공됩니다 . 자세한 내용은 거기로 가십시오.</target>
        </trans-unit>
        <trans-unit id="de570ef0cc4fd015eda992f4688f44ba889a97c9" translate="yes" xml:space="preserve">
          <source>The following snippet fires a notification; a simple &lt;code&gt;options&lt;/code&gt; object is created, then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">다음 스 니펫은 알림을 발생시킵니다. 간단한 &lt;code&gt;options&lt;/code&gt; 객체가 생성되면 &lt;code&gt;Notification()&lt;/code&gt; 생성자를 사용하여 알림이 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="2514c9568e3a7b89e3d9c897679c74245d0200c3" translate="yes" xml:space="preserve">
          <source>The following snippet is based on a simple example written by Nick Desaulniers (&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">다음 코드는 닉 Desaulniers에 의해 작성된 간단한 예를 기반으로 ( &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;라이브 전체 데모를 보거나&lt;/a&gt; , 또는 &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;소스 다운로드&lt;/a&gt; 더 조사를.)</target>
        </trans-unit>
        <trans-unit id="72325033b7e522f00c5fb59a2aee669eb1445c62" translate="yes" xml:space="preserve">
          <source>The following snippet is excerpted from our &lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speak-easy-synthesis&quot;&gt;Speech synthesiser demo&lt;/a&gt;.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speak-easy-synthesis&quot;&gt;음성 합성기 데모&lt;/a&gt; 에서 발췌 한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="df97881cdcc699da0872492a819dff3185d0ccb3" translate="yes" xml:space="preserve">
          <source>The following snippet is from a simple example written by Nick Desaulniers (&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">다음 코드는 닉 Desaulniers에 의해 작성된 간단한 예에서이다 ( &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;라이브 전체 데모를 보거나&lt;/a&gt; , 또는 &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;소스 다운로드&lt;/a&gt; 더 조사를.)</target>
        </trans-unit>
        <trans-unit id="2d3422ae4b7d1141eefbeae98d1ff9ed4b5faff0" translate="yes" xml:space="preserve">
          <source>The following snippet is intended to create a notification that also triggers a device vibration; a simple &lt;code&gt;options&lt;/code&gt; object is created, and then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">다음 스 니펫은 장치 진동을 트리거하는 알림을 작성하기위한 것입니다. 간단한 &lt;code&gt;options&lt;/code&gt; 객체가 생성 된 다음 &lt;code&gt;Notification()&lt;/code&gt; 생성자를 사용하여 알림이 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="1f9b70c1893a9f85337dc0f6282c583f813de3bd" translate="yes" xml:space="preserve">
          <source>The following snippet is intended to fire a notification that renotifies the user after it has been replaced; a simple &lt;code&gt;options&lt;/code&gt; object is created, and then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">다음 스 니펫은 사용자가 교체 된 후이를 알리는 알림을 발생시킵니다. 간단한 &lt;code&gt;options&lt;/code&gt; 객체가 생성 된 다음 &lt;code&gt;Notification()&lt;/code&gt; 생성자를 사용하여 알림이 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="54a960e1233f36c8039008ae1581c185d1566349" translate="yes" xml:space="preserve">
          <source>The following snippet is intended to fire a silent notification; a simple &lt;code&gt;options&lt;/code&gt; object is created, and then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">다음 스 니펫은 자동 알림을 실행하기위한 것입니다. 간단한 &lt;code&gt;options&lt;/code&gt; 객체가 생성 된 다음 &lt;code&gt;Notification()&lt;/code&gt; 생성자를 사용하여 알림이 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="43c6c8734f601a5eed0db097efa6b6695a66a1b5" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from a simple example written by Nick Desaulniers (&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">다음 코드는 닉 Desaulniers에 의해 작성된 간단한 예에서 가져옵니다 ( &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;라이브 전체 데모를 보거나&lt;/a&gt; , 또는 &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;소스 다운로드&lt;/a&gt; 더 조사를.)</target>
        </trans-unit>
        <trans-unit id="beb73a2cb8b33cc2c1b40bb31d4d41bbf7c64336" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) The &lt;code&gt;onstatechange&lt;/code&gt; hander is used to log the current &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/State&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt; to the console every time it changes.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states 데모&lt;/a&gt; 에서 가져온 것입니다 ( &lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;실제로 실행 참조&lt;/a&gt; ) &lt;code&gt;onstatechange&lt;/code&gt; 처리기 는 콘솔이 변경 될 때마다 현재 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/State&quot;&gt; &lt;code&gt;state&lt;/code&gt; &lt;/a&gt; 를 기록하는 데 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="38c6adaeda835cb4f4b23b37a7a925fd9aa8ae00" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the suspend/resume button is clicked, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt;&lt;code&gt;AudioContext.state&lt;/code&gt;&lt;/a&gt; is queried &amp;mdash; if it is &lt;code&gt;running&lt;/code&gt;, &lt;a href=&quot;../audiocontext/suspend&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt; is called; if it is &lt;code&gt;suspended&lt;/code&gt;, &lt;code&gt;resume()&lt;/code&gt; is called. In each case, the text label of the button is updated as appropriate once the promise resolves.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext 상태 데모&lt;/a&gt; 에서 가져옵니다 ( &lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;실제로 실행 참조&lt;/a&gt; ). suspend / resume 버튼을 클릭하면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt; &lt;code&gt;AudioContext.state&lt;/code&gt; &lt;/a&gt; 가 쿼리됩니다. &lt;code&gt;running&lt;/code&gt; 경우 &lt;a href=&quot;../audiocontext/suspend&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt; 가 호출됩니다. 이 경우 &lt;code&gt;suspended&lt;/code&gt; , &lt;code&gt;resume()&lt;/code&gt; 호출된다. 각각의 경우, 약속이 해결되면 버튼의 텍스트 레이블이 적절하게 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="91143cc5df98401da6439e3a0f4134788f38b5f0" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the suspend/resume button is clicked, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt;&lt;code&gt;AudioContext.state&lt;/code&gt;&lt;/a&gt; is queried &amp;mdash; if it is &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;suspend()&lt;/code&gt; is called; if it is &lt;code&gt;suspended&lt;/code&gt;, &lt;a href=&quot;../baseaudiocontext/resume&quot;&gt;&lt;code&gt;resume()&lt;/code&gt;&lt;/a&gt; is called. In each case, the text label of the button is updated as appropriate once the promise resolves.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext 상태 데모&lt;/a&gt; 에서 가져옵니다 ( &lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;실제로 실행 참조&lt;/a&gt; ). suspend / resume 버튼을 클릭하면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt; &lt;code&gt;AudioContext.state&lt;/code&gt; &lt;/a&gt; 가 쿼리됩니다. &lt;code&gt;running&lt;/code&gt; 경우 &lt;code&gt;suspend()&lt;/code&gt; 가 호출됩니다. 이 경우 &lt;code&gt;suspended&lt;/code&gt; , &lt;a href=&quot;../baseaudiocontext/resume&quot;&gt; &lt;code&gt;resume()&lt;/code&gt; &lt;/a&gt; 호출된다. 각각의 경우, 약속이 해결되면 버튼의 텍스트 레이블이 적절하게 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="278711f80cd4f70bd587e31deb1ba93ca8206029" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/slotchange&quot;&gt;slotchange example&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/web-components-examples/slotchange/&quot;&gt;see it live also&lt;/a&gt;).</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/slotchange&quot;&gt;slotchange 예제&lt;/a&gt; 에서 가져온 것입니다 ( &lt;a href=&quot;https://mdn.github.io/web-components-examples/slotchange/&quot;&gt;실제 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f43d25a9601cb720c4f6f5fb7d2a5b4e47df6467" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/onstatechange&quot;&gt;&lt;code&gt;AudioContext.onstatechange&lt;/code&gt;&lt;/a&gt; hander is used to log the current state to the console every time it changes.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;AudioContext states 데모&lt;/a&gt; 에서 가져온 것입니다 ( &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;실제로 실행&lt;/a&gt; 되는 것을 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/onstatechange&quot;&gt; &lt;code&gt;AudioContext.onstatechange&lt;/code&gt; &lt;/a&gt; ) AudioContext.onstatechange 핸더 는 변경 될 때마다 현재 상태를 콘솔에 기록하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2cc52709cb8d1588f44ef12f2f804dc6f1d560dc" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audiocontext-states/index.html&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the stop button is clicked, &lt;code&gt;close()&lt;/code&gt; is called. When the promise resolves, the example is reset to its beginning state.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audiocontext-states/index.html&quot;&gt;AudioContext states 데모&lt;/a&gt; 에서 가져온 것입니다 ( &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;실제로 실행 참조&lt;/a&gt; ). 중지 버튼을 클릭하면 &lt;code&gt;close()&lt;/code&gt; 가 호출됩니다. 약속이 해결되면 예제가 시작 상태로 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4fe202609423894409975fd964be992d57404a90" translate="yes" xml:space="preserve">
          <source>The following snippet requests permission from the user, then logs a different result to the console depending on the users' choice.</source>
          <target state="translated">다음 스 니펫은 사용자의 권한을 요청한 다음 사용자의 선택에 따라 다른 결과를 콘솔에 기록합니다.</target>
        </trans-unit>
        <trans-unit id="9014c78a57a156cfb97e3754e18015825789076c" translate="yes" xml:space="preserve">
          <source>The following snippet shows the results of testing for the existence of &lt;code&gt;username&lt;/code&gt; in the &lt;code&gt;FormData&lt;/code&gt; object, before and after appending a &lt;code&gt;username&lt;/code&gt; value to it with &lt;a href=&quot;append&quot;&gt;&lt;code&gt;FormData.append&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">코드 조각 쇼를의 존재 여부를 테스트 한 결과 다음과 같은 &lt;code&gt;username&lt;/code&gt; 에 &lt;code&gt;FormData&lt;/code&gt; 전과 추가 후, 객체 &lt;code&gt;username&lt;/code&gt; 과 가치를 &lt;a href=&quot;append&quot;&gt; &lt;code&gt;FormData.append&lt;/code&gt; 를&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="14ce2d252042d387adc5b9436e0a2bb3a7228baf" translate="yes" xml:space="preserve">
          <source>The following snippets are taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/life-cycle-callbacks&quot;&gt;life-cycle-callbacks&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/life-cycle-callbacks&quot;&gt;see it live also&lt;/a&gt;), which creates an element that displays a square of a size and color specified in the element's attributes.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/life-cycle-callbacks&quot;&gt;수명주기 콜백&lt;/a&gt; 예제 ( &lt;a href=&quot;https://mdn.github.io/web-components-examples/life-cycle-callbacks&quot;&gt;실제 참조)에서 가져 와서&lt;/a&gt; 요소 속성에 지정된 크기와 색상의 제곱을 표시하는 요소를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="67ef3f9dc7d5caba906229758a1ef9d8bfceaa22" translate="yes" xml:space="preserve">
          <source>The following special attributes may also be specified:</source>
          <target state="translated">다음과 같은 특수 속성도 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f96fae6ce5ceff5ac67507957a759cce4424df0" translate="yes" xml:space="preserve">
          <source>The following strings are permitted values for the facing mode. These may represent separate cameras, or they may represent directions in which an adjustable camera can be pointed.</source>
          <target state="translated">다음 문자열은 페이싱 모드에 허용되는 값입니다. 이들은 별도의 카메라를 나타내거나 조정 가능한 카메라를 가리킬 수있는 방향을 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b869ceb7f13de7970a1ce24e07ddc38b172a5db1" translate="yes" xml:space="preserve">
          <source>The following strings represent the possible orientation requirements you may specify.</source>
          <target state="translated">다음 문자열은 지정할 수있는 가능한 방향 요구 사항을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="099adc8329d830f794c00acd033b1da0b448b1ab" translate="yes" xml:space="preserve">
          <source>The following strings will be displayed in the user's console:</source>
          <target state="translated">사용자 콘솔에 다음 문자열이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="2f172756246c880f3029487fd72e505a75fca45a" translate="yes" xml:space="preserve">
          <source>The following table briefly describes these data types.</source>
          <target state="translated">다음 표는 이러한 데이터 유형을 간략하게 설명합니다.</target>
        </trans-unit>
        <trans-unit id="587d2f2a8aaeeadc0c0001bb3f9aa1f4b4a19bea" translate="yes" xml:space="preserve">
          <source>The following table shows the different ways the keys are supplied:</source>
          <target state="translated">다음 표는 키가 제공되는 다양한 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="37eab136705d14ae80a537b8e821daf9f9baf8e4" translate="yes" xml:space="preserve">
          <source>The following table shows the return values for different elements:</source>
          <target state="translated">다음 표는 다른 요소에 대한 리턴 값을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6939c3cf5d5b611835b8cd9c48b653edb97f3222" translate="yes" xml:space="preserve">
          <source>The following tables show what code values are used for each native scancode or virtual keycode on major platforms. Because some browsers choose to interpret physical keys differently, there are some differences in which keys map to which codes. These tables show those variations when known.</source>
          <target state="translated">다음 표는 주요 플랫폼에서 각 원시 스캔 코드 또는 가상 키 코드에 사용되는 코드 값을 보여줍니다. 일부 브라우저는 실제 키를 다르게 해석하도록 선택하기 때문에 키와 코드를 매핑하는 데 약간의 차이가 있습니다. 이 표는 알려진 경우 이러한 변형을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="af4521bc495383ef37b6bffc2fc840203d23a965" translate="yes" xml:space="preserve">
          <source>The following tags are the HTML tags allowed in a cue and require opening and closing tags (e.g. &lt;code&gt;&amp;lt;b&amp;gt;text&amp;lt;/b&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">다음 태그는 큐에 허용되는 HTML 태그이며 열기 및 닫기 태그가 필요합니다 (예 : &lt;code&gt;&amp;lt;b&amp;gt;text&amp;lt;/b&amp;gt;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="dff431f40d7ff60d18d6833fbddc178194c47f3a" translate="yes" xml:space="preserve">
          <source>The following text is shared between this article, DOM:window.confirm and DOM:window.alert Dialog boxes are modal windows; they prevent the user from accessing the rest of the program's interface until the dialog box is closed. For this reason, you should not overuse any function that creates a dialog box (or modal window).</source>
          <target state="translated">DOM : window.confirm 및 DOM : window.alert 대화 상자는 모달 창입니다. 대화 상자가 닫힐 때까지 사용자가 나머지 프로그램 인터페이스에 액세스하지 못하게합니다. 이러한 이유로 대화 상자 (또는 모달 창)를 만드는 함수를 과도하게 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="cc96ab269e85a3c2dc2cf5a1982bf7fae6b0eacb" translate="yes" xml:space="preserve">
          <source>The following text is shared between this article, DOM:window.prompt and DOM:window.alert Dialog boxes are modal windows - they prevent the user from accessing the rest of the program's interface until the dialog box is closed. For this reason, you should not overuse any function that creates a dialog box (or modal window). And regardless, there are very good reasons to &lt;a href=&quot;http://alistapart.com/article/neveruseawarning&quot;&gt;avoid using dialog boxes for confirmation&lt;/a&gt;.</source>
          <target state="translated">이 글에서는 DOM : window.prompt와 DOM : window.alert 텍스트를 공유합니다. 대화 상자는 모달 창입니다. 대화 상자가 닫힐 때까지 사용자가 나머지 프로그램 인터페이스에 액세스 할 수 없습니다. 이러한 이유로 대화 상자 (또는 모달 창)를 만드는 함수를 과도하게 사용해서는 안됩니다. 그럼에도 &lt;a href=&quot;http://alistapart.com/article/neveruseawarning&quot;&gt;불구하고 확인&lt;/a&gt; 을 위해 대화 상자를 사용하지 않는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="15e06a226e5cbfcfe7eeef8afee245aef503569f" translate="yes" xml:space="preserve">
          <source>The following text is shared between this article, DOM:window.prompt and DOM:window.confirm Dialog boxes are modal windows - they prevent the user from accessing the rest of the program's interface until the dialog box is closed. For this reason, you should not overuse any function that creates a dialog box (or modal window).</source>
          <target state="translated">DOM : window.prompt 및 DOM : window.confirm 대화 상자는 모달 창이며, 대화 상자가 닫힐 때까지 사용자가 나머지 프로그램 인터페이스에 액세스 할 수 없습니다. 이러한 이유로 대화 상자 (또는 모달 창)를 만드는 함수를 과도하게 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="4a320c8e0d82a5ff008d8131b1a9708ec9aa9d7d" translate="yes" xml:space="preserve">
          <source>The following types are also permitted as descendants of the root node, in addition to &lt;code&gt;Node&lt;/code&gt; and &lt;code&gt;Attr&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; 및 &lt;code&gt;Attr&lt;/code&gt; 외에 루트 노드의 하위 항목으로 다음 유형도 허용됩니다 .</target>
        </trans-unit>
        <trans-unit id="44df6ec9f734ad3e2857bb208a65af405d15858b" translate="yes" xml:space="preserve">
          <source>The following types are used in &lt;a href=&quot;../webgl_api&quot;&gt;WebGL&lt;/a&gt; interfaces.</source>
          <target state="translated">&lt;a href=&quot;../webgl_api&quot;&gt;WebGL&lt;/a&gt; 인터페이스 에는 다음 유형이 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="12f6529433316717f49ccef56d04b522bdd179f1" translate="yes" xml:space="preserve">
          <source>The following would set up a simple audio graph, featuring an &lt;code&gt;AudioDestinationNode&lt;/code&gt; with &lt;code&gt;maxChannelCount&lt;/code&gt; of 2:</source>
          <target state="translated">다음은 &lt;code&gt;maxChannelCount&lt;/code&gt; 가 2 인 &lt;code&gt;AudioDestinationNode&lt;/code&gt; 를 특징으로하는 간단한 오디오 그래프를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="c3dfc201b0ad1a5f86d4eaab4e4f4a4ab7820a4a" translate="yes" xml:space="preserve">
          <source>The font source. This can be either:</source>
          <target state="translated">폰트 소스. 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51e1c1c17699a8587a876e229f70d9cdefa7b050" translate="yes" xml:space="preserve">
          <source>The form controls in the returned collection are in the same order in which they appear in the form by following a preorder, depth-first traversal of the tree. This is called &lt;strong&gt;tree order&lt;/strong&gt;.</source>
          <target state="translated">반환 된 컬렉션의 폼 컨트롤은 순서대로 트리의 깊이 우선 순회를 따라 폼에 나타나는 순서와 같습니다. 이것을 &lt;strong&gt;트리 순서&lt;/strong&gt; 라고 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="124a0f04f43a018ba98a8d22bd1275aa2d6b26a9" translate="yes" xml:space="preserve">
          <source>The form that this legend belongs to. If the legend has a fieldset element as its parent, then this attribute returns the same value as the &lt;strong&gt;form&lt;/strong&gt; attribute on the parent fieldset element. Otherwise, it returns null.</source>
          <target state="translated">이 전설이 속한 형태. 범례에 fieldset 요소가 부모 인 경우이 속성 은 부모 fieldset 요소 의 &lt;strong&gt;form&lt;/strong&gt; 속성 과 동일한 값을 반환합니다 . 그렇지 않으면 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="70f3b6ba6a96241580d1a54f82c3d94867d47693" translate="yes" xml:space="preserve">
          <source>The format of the ID string is not defined by the specification, so you cannot reliably make any assumptions about the contents of the string, or assume that the format of the string will remain unchanged for a given object type.</source>
          <target state="translated">ID 문자열의 형식은 사양에서 정의되지 않으므로 문자열의 내용에 대해 확실하게 가정하거나 문자열 형식이 지정된 객체 유형에 대해 변경되지 않은 것으로 가정 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b8a4ee2e37ccf04ab80c411770e74d74cd1d9357" translate="yes" xml:space="preserve">
          <source>The format of the string must follow one of the following HTML microsyntax:</source>
          <target state="translated">문자열 형식은 다음 HTML 마이크로 구문 중 하나를 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="b07887490e8e70b0a98f842832497826704c2208" translate="yes" xml:space="preserve">
          <source>The format of the string must follow one of the following HTML microsyntaxes:</source>
          <target state="translated">문자열의 형식은 다음 HTML 마이크로 구문 중 하나를 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="cd54e78ac53c76fd1d9c1efce5fd1406ad0f9364" translate="yes" xml:space="preserve">
          <source>The format of this message (as is the case with everything you do when handling signaling) is entirely up to you, depending on your needs; you can provide other information as required.</source>
          <target state="translated">이 메시지의 형식은 (신호 처리시 수행하는 모든 작업과 마찬가지로) 필요에 따라 전적으로 귀하에게 달려 있습니다. 필요에 따라 다른 정보를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d6a24afb0dece7dca5485bc27e2ff6b4f4a4a3b" translate="yes" xml:space="preserve">
          <source>The formats are Unicode strings giving the type or format of the data, generally given by a MIME type. Some values that are not MIME types are special-cased for legacy reasons (for example &quot;&lt;code&gt;text&lt;/code&gt;&quot;).</source>
          <target state="translated">형식은 일반적으로 MIME 형식으로 제공되는 데이터 형식 또는 형식을 제공하는 유니 코드 문자열입니다. MIME 유형이 아닌 일부 값은 레거시 이유로 특수한 경우입니다 (예 : &quot; &lt;code&gt;text&lt;/code&gt; &quot;).</target>
        </trans-unit>
        <trans-unit id="0087f6fd7646cd44d6104055d0b94fe848721be5" translate="yes" xml:space="preserve">
          <source>The formula for the blending color can be described like this: color(RGBA) = (sourceColor * &lt;em&gt;sfactor&lt;/em&gt;) + (destinationColor * &lt;em&gt;dfactor&lt;/em&gt;). The RBGA values are between 0 and 1.</source>
          <target state="translated">블렌딩 색상의 공식은 다음과 같이 설명 할 수 있습니다 : color (RGBA) = (sourceColor * &lt;em&gt;sfactor&lt;/em&gt; ) + (destinationColor * &lt;em&gt;dfactor&lt;/em&gt; ). RBGA 값은 0과 1 사이입니다.</target>
        </trans-unit>
        <trans-unit id="6818150b763e509afd9bc5e39880ecc483e16e2e" translate="yes" xml:space="preserve">
          <source>The formulas for the blending factors can be described like this (all RGBA values are between 0 and 1):</source>
          <target state="translated">혼합 계수에 대한 공식은 다음과 같이 설명 할 수 있습니다 (모든 RGBA 값은 0과 1 사이 임).</target>
        </trans-unit>
        <trans-unit id="e3e901979eacdd6ab73765b7b88f936e346f65f1" translate="yes" xml:space="preserve">
          <source>The forward properties represent the 3D coordinate position of the listener's forward direction (e.g. the direction they are facing in), while the up properties represent the 3D coordinate position of the top of the listener's head. These two together can nicely set the direction.</source>
          <target state="translated">앞으로 속성은 리스너 앞으로 방향의 3D 좌표 위치 (예 : 향하는 방향)를 나타내고 위로 속성은 리스너 머리 상단의 3D 좌표 위치를 나타냅니다. 이 둘은 함께 방향을 정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="041c138364aae62ecff69158e7c7a54a6fd35776" translate="yes" xml:space="preserve">
          <source>The four arguments work as follows.</source>
          <target state="translated">네 가지 주장은 다음과 같이 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1011d851c082a9b956ab13e54bd720393d521e67" translate="yes" xml:space="preserve">
          <source>The fragment is not &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding&quot;&gt;percent-decoded&lt;/a&gt;. If the URL does not have a fragment identifier, this property contains an empty string, &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">프래그먼트는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding&quot;&gt;퍼센트 디코딩&lt;/a&gt; 되지 않습니다 . URL에 조각 식별자가없는 경우이 속성에는 빈 문자열 &lt;code&gt;&quot;&quot;&lt;/code&gt; 이 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="e3af9acb9c95cf8e0f793580905b93e7a1b87001" translate="yes" xml:space="preserve">
          <source>The fragment shader</source>
          <target state="translated">프래그먼트 셰이더</target>
        </trans-unit>
        <trans-unit id="3df0104722963f36d878a0873d227d82b7fdd249" translate="yes" xml:space="preserve">
          <source>The fragment shader likewise needs to be updated:</source>
          <target state="translated">프래그먼트 셰이더도 마찬가지로 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="64fa5fd9f42ec961467a9058b9d13d5c91b99add" translate="yes" xml:space="preserve">
          <source>The fragment shader now needs to be updated to take into account the lighting value computed by the vertex shader:</source>
          <target state="translated">버텍스 셰이더가 계산 한 조명 값을 고려하여 프래그먼트 셰이더를 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="5a612e7bbe8d0fe6988d26a61483b15a1bc0a8f2" translate="yes" xml:space="preserve">
          <source>The frame should subsequently be rendered using the &lt;a href=&quot;../vrpose&quot;&gt;&lt;code&gt;VRPose&lt;/code&gt;&lt;/a&gt; and matrices provided by the last call to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GetFrameData&quot;&gt;&lt;code&gt;getFrameData()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이후 프레임은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GetFrameData&quot;&gt; &lt;code&gt;getFrameData()&lt;/code&gt; &lt;/a&gt; 에 대한 마지막 호출에서 제공 한 &lt;a href=&quot;../vrpose&quot;&gt; &lt;code&gt;VRPose&lt;/code&gt; &lt;/a&gt; 및 행렬을 사용하여 렌더링되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="2b3d3dea05d6834ea613bf164db65c8fe6e7da20" translate="yes" xml:space="preserve">
          <source>The frequency (in &lt;a href=&quot;https://en.wikipedia.org/wiki/hertz&quot;&gt;hertz&lt;/a&gt;) of the periodic waveform. Its default is 440.</source>
          <target state="translated">주기적 파형 의 주파수 ( &lt;a href=&quot;https://en.wikipedia.org/wiki/hertz&quot;&gt;헤르츠 단위&lt;/a&gt; ). 기본값은 440입니다.</target>
        </trans-unit>
        <trans-unit id="d484ec59c9af026e80edb2fe0d23c7da19757ee1" translate="yes" xml:space="preserve">
          <source>The frequency with the maximal &lt;a href=&quot;http://en.wikipedia.org/wiki/Group_delay_and_phase_delay&quot;&gt;group delay&lt;/a&gt;, that is, the frequency where the center of the phase transition occurs.</source>
          <target state="translated">최대 &lt;a href=&quot;http://en.wikipedia.org/wiki/Group_delay_and_phase_delay&quot;&gt;그룹 지연&lt;/a&gt; 이있는 주파수, 즉 위상 전이의 중심이 발생하는 주파수입니다.</target>
        </trans-unit>
        <trans-unit id="0fce4873ad033b593cf32077135a92543ed925f8" translate="yes" xml:space="preserve">
          <source>The full &lt;code&gt;RTCStatsReport&lt;/code&gt; interface is made up of a mapping of strings to subdictionaries which contain the statistics for each category, such as ICE candidate or media stream statistics. Each of these subdictionaries has in common the following values:</source>
          <target state="translated">전체 &lt;code&gt;RTCStatsReport&lt;/code&gt; 인터페이스는 문자열을 ICE 후보 또는 미디어 스트림 통계와 같은 각 범주에 대한 통계를 포함하는 하위 사전 에 맵핑하여 구성됩니다. 이러한 각 사전은 공통적으로 다음과 같은 값을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="ffa910ae7144ef34b200855cd6208b4a0b52608a" translate="yes" xml:space="preserve">
          <source>The function can be defined to take an &lt;code&gt;event&lt;/code&gt; parameter. &lt;a href=&quot;http://dev.w3.org/html5/spec/webappapis.html#the-event-handler-processing-algorithm&quot;&gt;The return value is treated in a special way, described in the HTML specification&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; 매개 변수 를 사용하도록 함수를 정의 할 수 있습니다 . &lt;a href=&quot;http://dev.w3.org/html5/spec/webappapis.html#the-event-handler-processing-algorithm&quot;&gt;리턴 값은 HTML 스펙에 설명 된 특수한 방식으로 처리됩니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="99f1ad93ba06b0d818b5733ec2a57a841c9efb3c" translate="yes" xml:space="preserve">
          <source>The function does not exist in insecure contexts. This was not enforced until Chrome 58.</source>
          <target state="translated">안전하지 않은 컨텍스트에는 기능이 없습니다. Chrome 58까지는 적용되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="b834639c76d4175964d23be8eebc0c701bc271ae" translate="yes" xml:space="preserve">
          <source>The function does not exist in insecure contexts. This was not enforced until Opera 45.</source>
          <target state="translated">안전하지 않은 컨텍스트에는 기능이 없습니다. 이것은 Opera 45까지 시행되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="7d289fbe4c0a20118120133713010873ee91a8b8" translate="yes" xml:space="preserve">
          <source>The function does not exist in insecure contexts. This was not enforced until version 58.</source>
          <target state="translated">안전하지 않은 컨텍스트에는 기능이 없습니다. 버전 58까지는 적용되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="13779048c72a0341f84d6e3b9c7129317fe74d21" translate="yes" xml:space="preserve">
          <source>The function should return &lt;code&gt;NodeFilter.FILTER_ACCEPT&lt;/code&gt;, which causes the TreeWalker to return the node, &lt;code&gt;NodeFilter.FILTER_REJECT&lt;/code&gt;, which causes the TreeWalker to ignore the entire subtree, or &lt;code&gt;NodeFilter.FILTER_SKIP&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;NodeFilter.FILTER_ACCEPT&lt;/code&gt; 를 반환해야합니다. 그러면 TreeWalker가 &lt;code&gt;NodeFilter.FILTER_REJECT&lt;/code&gt; 노드를 반환 하므로 TreeWalker는 전체 하위 트리 또는 &lt;code&gt;NodeFilter.FILTER_SKIP&lt;/code&gt; 를 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="9cc7d21d3594f11e9287cbb36ea5d03221e53307" translate="yes" xml:space="preserve">
          <source>The function that is repeatedly invoked (read/write). It is called with three arguments: &lt;em&gt;index&lt;/em&gt; (the iterative index of each invocation), &lt;em&gt;length&lt;/em&gt; (the number of total invocations assigned to the daemon - finite or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;) and backwards (a boolean expressing whether the &lt;em&gt;index&lt;/em&gt; is decreasing or not) &amp;ndash; see above. If the &lt;code&gt;myDaemon.task&lt;/code&gt; function returns a &lt;code&gt;false&lt;/code&gt; value the &lt;em&gt;daemon&lt;/em&gt; is paused.</source>
          <target state="translated">반복적으로 호출되는 함수 (읽기 / 쓰기) &lt;em&gt;인덱스&lt;/em&gt; (각 호출의 반복 인덱스), &lt;em&gt;길이&lt;/em&gt; (데몬에 지정된 총 호출 수-finite 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; ) 및 역방향 ( &lt;em&gt;인덱스&lt;/em&gt; 가 감소 하는지 여부를 나타내는 부울)의 세 인수로 호출됩니다. &amp;ndash; 위 참조 . 는 IF &lt;code&gt;myDaemon.task&lt;/code&gt; 의 함수가 반환 &lt;code&gt;false&lt;/code&gt; 값을 &lt;em&gt;데몬이&lt;/em&gt; 일시 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="ff919696a16860f3c446ef35472c58705a8c1296" translate="yes" xml:space="preserve">
          <source>The function that is repeatedly invoked . &lt;strong&gt;It is called with three parameters&lt;/strong&gt;: &lt;em&gt;index&lt;/em&gt; (the iterative index of each invocation), &lt;em&gt;length&lt;/em&gt; (the number of total invocations assigned to the &lt;em&gt;daemon&lt;/em&gt; - finite or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;) and &lt;em&gt;backwards&lt;/em&gt; (a boolean expressing whether the &lt;em&gt;index&lt;/em&gt; is increasing or decreasing). It is something like &lt;em&gt;callback&lt;/em&gt;.call(&lt;em&gt;thisObject&lt;/em&gt;, &lt;em&gt;index&lt;/em&gt;, &lt;em&gt;length&lt;/em&gt;, &lt;em&gt;backwards&lt;/em&gt;). &lt;strong&gt;If the callback function returns a &lt;code&gt;false&lt;/code&gt; value the &lt;em&gt;daemon&lt;/em&gt; is paused&lt;/strong&gt;.</source>
          <target state="translated">반복적으로 호출되는 함수입니다. &lt;strong&gt;그것은 세 개의 매개 변수로 호출&lt;/strong&gt; : &lt;em&gt;인덱스&lt;/em&gt; (각각의 호출의 반복 인덱스), &lt;em&gt;길이&lt;/em&gt; (합계에 할당 된 호출의 수 &lt;em&gt;데몬&lt;/em&gt; - 유한 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; )과 &lt;em&gt;뒤쪽&lt;/em&gt; (여부를 나타내는 부울 &lt;em&gt;인덱스가&lt;/em&gt; 증가 또는 감소된다). 그것은 같은 것입니다 &lt;em&gt;콜백&lt;/em&gt; .call ( &lt;em&gt;에서 thisObject&lt;/em&gt; , &lt;em&gt;인덱스&lt;/em&gt; , &lt;em&gt;길이&lt;/em&gt; , &lt;em&gt;뒤쪽&lt;/em&gt; ). &lt;strong&gt;콜백 함수가 &lt;code&gt;false&lt;/code&gt; 값을 반환 하면 &lt;em&gt;데몬&lt;/em&gt; 이 일시 중지 된 것&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2c512c5c25a4008fb0fa7e237ea0d8bc60871432" translate="yes" xml:space="preserve">
          <source>The function that we will be using is part of the &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;utility functions&lt;/a&gt;. It takes an array of matrices and multiplies them together. In WebGL shader code, this is built into the language and the * operator can be used. Additionally this example uses a scale and translate function which return matrices as defined above.</source>
          <target state="translated">우리가 사용할 &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;기능&lt;/a&gt; 은 유틸리티 기능의 일부입니다 . 행렬 배열을 취하고 함께 곱합니다. WebGL 셰이더 코드에서는 언어에 내장되어 있으며 * 연산자를 사용할 수 있습니다. 또한이 예제에서는 위에서 정의한대로 행렬을 반환하는 스케일 및 변환 함수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f8f3b51a9e8bb8d9b3e6e122bcfcfc0d2161b028" translate="yes" xml:space="preserve">
          <source>The function to be executed (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/function&quot;&gt;function&lt;/a&gt;).</source>
          <target state="translated">실행할 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/function&quot;&gt;기능&lt;/a&gt; ( function ).</target>
        </trans-unit>
        <trans-unit id="39c8e71128af91596336eb452e7286ea0d2aa576" translate="yes" xml:space="preserve">
          <source>The function to call when it's time to update your animation for the next repaint. The callback function is passed one single argument, a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; returned from &lt;a href=&quot;../performance/now&quot;&gt;&lt;code&gt;performance.now()&lt;/code&gt;&lt;/a&gt;, indicating the point in time when &lt;code&gt;requestAnimationFrame()&lt;/code&gt; starts to execute callback functions.</source>
          <target state="translated">다음 다시 그리기를 위해 애니메이션을 업데이트 할 때 호출 할 함수입니다. 콜백 함수에는 &lt;a href=&quot;../performance/now&quot;&gt; &lt;code&gt;performance.now()&lt;/code&gt; &lt;/a&gt; 에서 반환 된 &lt;a href=&quot;../domhighrestimestamp&quot;&gt; &lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; 라는&lt;/a&gt; 단일 인수가 전달 되어 &lt;code&gt;requestAnimationFrame()&lt;/code&gt; 이 콜백 함수 실행을 시작 하는 시점을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="118ddaf0d7e0d038f313fb7b5e3733d8da360196" translate="yes" xml:space="preserve">
          <source>The function to execute for each element, taking three arguments:</source>
          <target state="translated">세 가지 인수를 사용하여 각 요소에 대해 실행할 함수 :</target>
        </trans-unit>
        <trans-unit id="4bc7abcba83af8b98f18914055591a42c5efab95" translate="yes" xml:space="preserve">
          <source>The function was called with an empty list of store names.</source>
          <target state="translated">비어있는 상점 이름 목록으로 함수가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="1663bc9a623697e9b83a522640506562341c8556" translate="yes" xml:space="preserve">
          <source>The function we'll be using as our task handler&amp;mdash;that is, the function that will be used as the value of the task object's &lt;code&gt;handler&lt;/code&gt; property&amp;mdash;is &lt;code&gt;logTaskHandler&lt;/code&gt;(). It's a simple function that outputs a bunch of stuff to the log for each task. In your own application, you'd replace this code with whatever task it is you wish to perform during idle time. Just remember that anything you want to do that changes the DOM needs to be handled through &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">태스크 핸들러로 사용할 함수, 즉 태스크 오브젝트의 &lt;code&gt;handler&lt;/code&gt; 특성 값으로 사용될 함수 는 &lt;code&gt;logTaskHandler&lt;/code&gt; ()입니다. 각 작업의 로그에 많은 것들을 출력하는 간단한 함수입니다. 자신의 응용 프로그램 에서이 코드를 유휴 시간 동안 수행하려는 작업으로 바꿉니다. &lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame()&lt;/code&gt; &lt;/a&gt; 통해 DOM을 변경하기 위해 수행하려는 모든 작업을 기억하십시오 .</target>
        </trans-unit>
        <trans-unit id="018b1f6ee20d9b15c623644706ca5374bf085d12" translate="yes" xml:space="preserve">
          <source>The functions are used to log event activity to the application window, to support debugging and learning about the event flow.</source>
          <target state="translated">이 함수는 이벤트 활동을 응용 프로그램 창에 기록하여 이벤트 흐름에 대한 디버깅 및 학습을 지원하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="17b2e9fd5d662441712345f7eb618e097ccd34a4" translate="yes" xml:space="preserve">
          <source>The functions invoked inside the constructor simply return the required object parameters:</source>
          <target state="translated">생성자 내에서 호출 된 함수는 필요한 객체 매개 변수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="20d85c0c3b2679dda5186febb3376fe7275c45ee" translate="yes" xml:space="preserve">
          <source>The gain is a unitless value, changing with time, that is multiplied to each corresponding sample of all input channels. If modified, the new gain is instantly applied, causing unaesthetic 'clicks' in the resulting audio. To prevent this from happening, never change the value directly but use the exponential interpolation methods on the &lt;a href=&quot;audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">게인은 시간이 지남에 따라 변하는 단위가없는 값으로, 모든 입력 채널의 각 해당 샘플에 곱해집니다. 수정하면 새로운 게인이 즉시 적용되어 결과적인 오디오에 미학적 '클릭'이 발생합니다. 이를 방지하려면 값을 직접 변경하지 &lt;a href=&quot;audioparam&quot;&gt; &lt;code&gt;AudioParam&lt;/code&gt; &lt;/a&gt; 인터페이스 에서 지수 보간 방법을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="eaabf74fc177ea1394fb602c44a4fe5fd06cc393" translate="yes" xml:space="preserve">
          <source>The gathering state indicates whether or not the ICE agent has begun gathering candidates, and if so, whether or not gathering has finished. Its possible values are:</source>
          <target state="translated">수집 상태는 ICE 에이전트가 수집 후보를 시작했는지 여부와, 그렇다면 수집이 완료되었는지 여부를 나타냅니다. 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="785a9fed1f671752be81692bc482955696c534a2" translate="yes" xml:space="preserve">
          <source>The generated object is 100 pixels wide and 50 pixels tall, making 5,000 pixels in all. Each pixel within an &lt;code&gt;ImageData&lt;/code&gt; object consists of four array values, so the object's &lt;a href=&quot;../imagedata/data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; property has a length of 4 &amp;times; 5,000, or 20,000.</source>
          <target state="translated">생성 된 객체의 너비는 100 픽셀, 높이는 50 픽셀이므로 모두 5,000 픽셀입니다. &lt;code&gt;ImageData&lt;/code&gt; 객체 내의 각 픽셀 은 4 개의 배열 값으로 구성되므로 객체의 &lt;a href=&quot;../imagedata/data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt; 속성 길이는 4 &amp;times; 5,000 또는 20,000입니다.</target>
        </trans-unit>
        <trans-unit id="67bea8f0b32d9137a521d9e2514558f1502e539a" translate="yes" xml:space="preserve">
          <source>The generic syntax skeleton looks like this:</source>
          <target state="translated">일반적인 구문 골격은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0aeecffd6a3d66a9905b2dbf4cd36162a802c40f" translate="yes" xml:space="preserve">
          <source>The geolocation object</source>
          <target state="translated">지리적 위치 객체</target>
        </trans-unit>
        <trans-unit id="7b75b60fdb1488ade59db9302acd940a599daa7e" translate="yes" xml:space="preserve">
          <source>The given URL does not match another URL. (Legacy code value: &lt;code&gt;21&lt;/code&gt; and legacy constant name: &lt;code&gt;URL_MISMATCH_ERR&lt;/code&gt;)</source>
          <target state="translated">지정된 URL이 다른 URL과 일치하지 않습니다. (레거시 코드 값 : &lt;code&gt;21&lt;/code&gt; 및 레거시 상수 이름 : &lt;code&gt;URL_MISMATCH_ERR&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="628bfb259be7a4fa1db2d527e3b85167e6cdad06" translate="yes" xml:space="preserve">
          <source>The global limit is a &quot;soft limit&quot; since there's a chance that some space will be freed and the operation can continue.</source>
          <target state="translated">일부 공간이 비워지고 작업을 계속할 수 있으므로 전역 제한은 &quot;소프트 제한&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="36c3c80fb28b9c6e79d4ea20192420f8464a8db0" translate="yes" xml:space="preserve">
          <source>The global scope of workers. This objects defines &lt;a href=&quot;#workerscope&quot;&gt;worker-specific functions&lt;/a&gt;.</source>
          <target state="translated">노동자의 글로벌 범위. 이 객체는 &lt;a href=&quot;#workerscope&quot;&gt;작업자 별 기능을&lt;/a&gt; 정의 합니다 .</target>
        </trans-unit>
        <trans-unit id="7c077e2bc8896d8e1a3ac81c57a3fa9085b0fa6f" translate="yes" xml:space="preserve">
          <source>The grammar</source>
          <target state="translated">문법</target>
        </trans-unit>
        <trans-unit id="a8587c7b422a4ad7c17d1f12c5019e4a8e5d5ad9" translate="yes" xml:space="preserve">
          <source>The grammar format used is &lt;a href=&quot;http://www.w3.org/TR/jsgf/&quot;&gt;JSpeech Grammar Format&lt;/a&gt; (&lt;strong&gt;JSGF&lt;/strong&gt;) &amp;mdash; you can find a lot more about it at the previous link to its spec. However, for now let's just run through it quickly:</source>
          <target state="translated">사용 된 문법 형식은 &lt;a href=&quot;http://www.w3.org/TR/jsgf/&quot;&gt;JSGF&lt;/a&gt; ( JSpeech Grammar Format )입니다. 이전 사양에 대한 링크 &lt;strong&gt;에서이 &lt;/strong&gt;형식 에 대해 더 많이 찾을 수 있습니다. 그러나 지금 당장 빨리 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="ff7126ef3f8a2e144f217353ede8f0f395dc857c" translate="yes" xml:space="preserve">
          <source>The grid</source>
          <target state="translated">격자</target>
        </trans-unit>
        <trans-unit id="b94977a7bcdf0de930dedcd030e9115ea68daa7b" translate="yes" xml:space="preserve">
          <source>The group ID is not usable across multiple browsing sessions. However, it can be used to ensure that audio input and output are both being performed on the same headset, for example, or to ensure that the built-in camera and microphone on a phone are being used for video conferencing purposes.</source>
          <target state="translated">여러 브라우징 세션에서 그룹 ID를 사용할 수 없습니다. 그러나 예를 들어 오디오 입력 및 출력이 모두 동일한 헤드셋에서 수행되도록하거나 전화의 내장 카메라 및 마이크가 화상 회의용으로 사용되도록하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49f2ad6a68766544272001845469929b3d0171ee" translate="yes" xml:space="preserve">
          <source>The group limit is also called the &quot;hard limit&quot;: it doesn't trigger origin eviction.</source>
          <target state="translated">그룹 제한은 &quot;하드 제한&quot;이라고도합니다. 원점 제거를 트리거하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0df9f5bce3448710ec4c641e898d60e69be1ba01" translate="yes" xml:space="preserve">
          <source>The gyroscope is typically read in the &lt;a href=&quot;../sensor/onreading&quot;&gt;&lt;code&gt;Sensor.onreading&lt;/code&gt;&lt;/a&gt; event callback. In the example below this occurs sixty times a second.</source>
          <target state="translated">자이로 스코프는 일반적으로 &lt;a href=&quot;../sensor/onreading&quot;&gt; &lt;code&gt;Sensor.onreading&lt;/code&gt; &lt;/a&gt; 이벤트 콜백 에서 읽습니다 . 아래 예에서 이것은 초당 60 번 발생합니다.</target>
        </trans-unit>
        <trans-unit id="882926dabaed7a6bcbafe8d08a874c87f2d765cd" translate="yes" xml:space="preserve">
          <source>The gyroscope is typically read in the &lt;a href=&quot;sensor/onreading&quot;&gt;&lt;code&gt;Sensor.onreading&lt;/code&gt;&lt;/a&gt; event callback. In the example below this occurs sixty times a second.</source>
          <target state="translated">자이로 스코프는 일반적으로 &lt;a href=&quot;sensor/onreading&quot;&gt; &lt;code&gt;Sensor.onreading&lt;/code&gt; &lt;/a&gt; 이벤트 콜백 에서 읽습니다 . 아래 예에서 이것은 초당 60 번 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cf1e30de157aad7c9c8ca63b30b4c4456e03753a" translate="yes" xml:space="preserve">
          <source>The handle returned by the &lt;a href=&quot;requestanimationframe&quot;&gt;&lt;code&gt;VRDisplay.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; call that you want to unregister.</source>
          <target state="translated">등록을 취소하려는 &lt;a href=&quot;requestanimationframe&quot;&gt; &lt;code&gt;VRDisplay.requestAnimationFrame()&lt;/code&gt; &lt;/a&gt; 호출에 의해 반환 된 핸들 입니다.</target>
        </trans-unit>
        <trans-unit id="6a6911c94143ab79b4594c2e64266e7249222c2f" translate="yes" xml:space="preserve">
          <source>The handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; event is free to process the drag data in an application specific way. Typically, an application will use the &lt;a href=&quot;datatransfer/getdata&quot;&gt;&lt;code&gt;getData()&lt;/code&gt;&lt;/a&gt; method to retrieve drag items and process them accordingly. Additionally, application semantics may differ depending on the value of the &lt;a href=&quot;datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; and/or the state of modifier keys.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; 이벤트 의 핸들러 는 응용 프로그램 특정 방식으로 드래그 데이터를 처리 할 수 ​​있습니다. 일반적으로 응용 프로그램은 &lt;a href=&quot;datatransfer/getdata&quot;&gt; &lt;code&gt;getData()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 드래그 항목을 검색하고 그에 따라 처리합니다. 또한 응용 프로그램 시맨틱은 &lt;a href=&quot;datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt; 값 및 / 또는 수정 자 키 상태에 따라 다를 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="028e597e68ef221f6fab8aec24401ac514256c42" translate="yes" xml:space="preserve">
          <source>The handshake is the &quot;Web&quot; in WebSockets. It's the bridge from HTTP to WS. In the handshake, details of the connection are negotiated, and either party can back out before completion if the terms are unfavorable. The server must be careful to understand everything the client asks for, otherwise security issues will be introduced.</source>
          <target state="translated">악수는 WebSockets의 &quot;웹&quot;입니다. HTTP에서 WS 로의 브릿지입니다. 핸드 셰이크에서 연결에 대한 세부 사항이 협상되며 조건이 좋지 않은 경우 어느 당사자도 완료 전에 철회 할 수 있습니다. 서버는 클라이언트가 요구하는 모든 것을 이해하도록주의해야합니다. 그렇지 않으면 보안 문제가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="acb45443dc0323133b5342c3b627edc96183ba35" translate="yes" xml:space="preserve">
          <source>The hashchange event</source>
          <target state="translated">해시 변경 이벤트</target>
        </trans-unit>
        <trans-unit id="8fef2e5095e098313bf831bb7ab07cc47c996341" translate="yes" xml:space="preserve">
          <source>The header</source>
          <target state="translated">헤더</target>
        </trans-unit>
        <trans-unit id="8fc9ed6d785e10be433289507738b0c8578d5508" translate="yes" xml:space="preserve">
          <source>The header cell applies to all cells in the current column group that do not already have a scope applied to them. This value is only allowed if the cell is in a column group.</source>
          <target state="translated">머리글 셀은 아직 범위가 적용되지 않은 현재 열 그룹의 모든 셀에 적용됩니다. 이 값은 셀이 열 그룹에있는 경우에만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="cb07d9fb73079b2efbc4310a05e51e58116d85c3" translate="yes" xml:space="preserve">
          <source>The header cell applies to all cells in the current row group that do not already have a scope applied to them. This value is only allowed if the cell is in a row group.</source>
          <target state="translated">머리글 셀은 현재 행 그룹에 아직 범위가 적용되지 않은 모든 셀에 적용됩니다. 이 값은 셀이 행 그룹에있는 경우에만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="5cf0c4b4afe871220746a968aa309813a16018ab" translate="yes" xml:space="preserve">
          <source>The header cell applies to the following cells in the same column (or columns, if &lt;code&gt;colspan&lt;/code&gt; is used as well), until either the end of the column or another &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; in the column establishes a new scope.</source>
          <target state="translated">머리글 셀 은 열의 끝이나 열의 다른 &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; 가 새 범위를 설정할 때까지 동일한 열 (또는 &lt;code&gt;colspan&lt;/code&gt; 을 사용하는 경우 열)의 다음 셀에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ec11a0b2eb6ccf34714b1e6169b4ff4756556640" translate="yes" xml:space="preserve">
          <source>The header cell applies to the following cells in the same row (or rows, if &lt;code&gt;rowspan&lt;/code&gt; is used as well), until either the end of the row or another &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; in the same row establishes a new scope.</source>
          <target state="translated">머리글 셀 은 행의 끝이나 같은 행의 다른 &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; 가 새 범위를 설정할 때까지 동일한 행 (또는 &lt;code&gt;rowspan&lt;/code&gt; 이 사용되는 경우 행)의 다음 셀에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="21bc35e4e8cd01a607804d0ab8a46f86c9af6f92" translate="yes" xml:space="preserve">
          <source>The header cell has no predefined scope; the user agent will establish the scope based on contextual clues.</source>
          <target state="translated">헤더 셀에는 사전 정의 된 범위가 없습니다. 사용자 에이전트는 상황 단서에 따라 범위를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="677f5ec4023059fe1cfc57a225bb79b0add95606" translate="yes" xml:space="preserve">
          <source>The header is fairly simple, since for this example all it contains is some text. Its style looks like this:</source>
          <target state="translated">이 예제에서는 헤더가 텍스트이기 때문에 헤더는 매우 간단합니다. 스타일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="070f1e647da215ad888d0969167e0dcbf3485a21" translate="yes" xml:space="preserve">
          <source>The height (magnitude on the Y axis), in CSS pixels, of the contact geometry of the pointer.</source>
          <target state="translated">포인터의 접촉 지오메트리의 높이 (Y 축 크기) (CSS 픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="e39ca26ed973f60fcff1f9e24234b9045aee728c" translate="yes" xml:space="preserve">
          <source>The height of the &lt;code&gt;DOMRect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMRect&lt;/code&gt; 의 높이입니다 .</target>
        </trans-unit>
        <trans-unit id="34f838a2061b900af071c9a9c5fa3d0a55bdb78d" translate="yes" xml:space="preserve">
          <source>The height of the &lt;code&gt;DOMRectReadOnly&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMRectReadOnly&lt;/code&gt; 의 높이입니다 .</target>
        </trans-unit>
        <trans-unit id="fb7b31ed73aeb5d6b461284454c9ec84b76c6859" translate="yes" xml:space="preserve">
          <source>The height of the bounds.</source>
          <target state="translated">경계의 높이입니다.</target>
        </trans-unit>
        <trans-unit id="1ce51c099997a2e659e72e34569a70ace26de77f" translate="yes" xml:space="preserve">
          <source>The height of the event's contact area (in CSS pixels).</source>
          <target state="translated">이벤트 접촉 영역의 높이입니다 (CSS 픽셀 단위).</target>
        </trans-unit>
        <trans-unit id="23019d9c8925de1387057b03ae5baf8ae91adfad" translate="yes" xml:space="preserve">
          <source>The height of the image (i.e., the value for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-height&quot;&gt;height&lt;/a&gt;&lt;/code&gt; attribute).</source>
          <target state="translated">이미지의 높이 (즉, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-height&quot;&gt;height&lt;/a&gt;&lt;/code&gt; 속성 의 값 )</target>
        </trans-unit>
        <trans-unit id="9900bf4be748cebf8b3eed614db614bccb7cdd5e" translate="yes" xml:space="preserve">
          <source>The height of the image in pixels.</source>
          <target state="translated">이미지의 높이 (픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="546400b2a914b39dbbc597d9bd690245f06c22c7" translate="yes" xml:space="preserve">
          <source>The height of the offscreen canvas.</source>
          <target state="translated">오프 스크린 캔버스의 높이입니다.</target>
        </trans-unit>
        <trans-unit id="2302805078772e9435c24e06666e909f706716c3" translate="yes" xml:space="preserve">
          <source>The height of the rectangle from which the &lt;code&gt;ImageBitmap&lt;/code&gt; will be extracted. This value can be negative.</source>
          <target state="translated">&lt;code&gt;ImageBitmap&lt;/code&gt; 을 추출 할 사각형의 높이입니다 . 이 값은 음수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc436760d672f74e02a879dcb3da36a5090ce866" translate="yes" xml:space="preserve">
          <source>The height of the rectangle from which the &lt;code&gt;ImageData&lt;/code&gt; will be extracted. Positive values are down, and negative are up.</source>
          <target state="translated">&lt;code&gt;ImageData&lt;/code&gt; 가 추출 될 사각형의 높이입니다 . 양수 값은 감소하고 음수는 증가합니다.</target>
        </trans-unit>
        <trans-unit id="7a63ab000024777ce854d706337a587e757dfa56" translate="yes" xml:space="preserve">
          <source>The height of the rule.</source>
          <target state="translated">규칙의 높이입니다.</target>
        </trans-unit>
        <trans-unit id="b6139595ac3e62eb729d43ca2875adf7e1fee739" translate="yes" xml:space="preserve">
          <source>The height of the sub-rectangle of the source &lt;code&gt;image&lt;/code&gt; to draw into the destination context.</source>
          <target state="translated">대상 컨텍스트에 그릴 소스 &lt;code&gt;image&lt;/code&gt; 사각형의 높이입니다 .</target>
        </trans-unit>
        <trans-unit id="e2c78b354aa26985893add977f22ad35048def0e" translate="yes" xml:space="preserve">
          <source>The height to draw the &lt;code&gt;image&lt;/code&gt; in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</source>
          <target state="translated">대상 캔버스에 &lt;code&gt;image&lt;/code&gt; 를 그리는 높이 입니다. 이것은 그려진 이미지의 스케일링을 허용합니다. 지정하지 않으면 이미지를 그릴 때 높이가 조정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="42b9482f137b42f6d2c2652741f341496a9b4ed5" translate="yes" xml:space="preserve">
          <source>The height to give the new &lt;code&gt;ImageData&lt;/code&gt; object. A negative value flips the rectangle around the horizontal axis.</source>
          <target state="translated">새 &lt;code&gt;ImageData&lt;/code&gt; 객체 를 제공 할 높이 입니다. 음수 값은 가로 축 주위의 사각형을 뒤집습니다.</target>
        </trans-unit>
        <trans-unit id="5492b1fbeab33f939d26d4ab7f3557d9f700297f" translate="yes" xml:space="preserve">
          <source>The higher &lt;code&gt;firCount&lt;/code&gt; is, the more often frames were dropped, which may be an indication that the media's bit rate is too high for the available bandwidth, or that the receiving device is overburdened and is therefore unable to process the incoming data.</source>
          <target state="translated">&lt;code&gt;firCount&lt;/code&gt; 가 높을수록 프레임이 더 자주 삭제됩니다. 이는 미디어의 비트 전송률이 사용 가능한 대역폭에 비해 너무 높거나 수신 장치에 과부하가 발생하여 수신 데이터를 처리 할 수 ​​없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f88e0162e2a2462c00ce9015a13e8b520b542a07" translate="yes" xml:space="preserve">
          <source>The history of VR</source>
          <target state="translated">VR의 역사</target>
        </trans-unit>
        <trans-unit id="5bd28d46e0ce015344fed89ff0108f67372f94a0" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate of a point, relative to the left edge of the current &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/viewport&quot;&gt;viewport&lt;/a&gt;.</source>
          <target state="translated">현재 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/viewport&quot;&gt;뷰포트&lt;/a&gt; 의 왼쪽 모서리를 기준으로 한 점의 가로 좌표입니다 .</target>
        </trans-unit>
        <trans-unit id="6aaedd7be22a6bd8de7d1ac18c3d2120e179a4ed" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate of a point.</source>
          <target state="translated">점의 가로 좌표입니다.</target>
        </trans-unit>
        <trans-unit id="8a5adefafdc8be83181d5593e5a6132f1fe3fe1b" translate="yes" xml:space="preserve">
          <source>The human-readable description of the connected database.</source>
          <target state="translated">연결된 데이터베이스에 대한 사람이 읽을 수있는 설명입니다.</target>
        </trans-unit>
        <trans-unit id="65a2c610333142a8ac66463288fd361b6973e7cf" translate="yes" xml:space="preserve">
          <source>The idea of notification tags is that more than one notification can share the same tag, linking them together. One notification can then be programmatically replaced with another to avoid the users' screen being filled up with a huge number of similar notifications.</source>
          <target state="translated">알림 태그의 개념은 둘 이상의 알림이 동일한 태그를 공유하여 서로 연결할 수 있다는 것입니다. 그런 다음 하나의 알림을 프로그래밍 방식으로 다른 알림으로 대체하여 사용자의 화면에 수많은 유사한 알림이 채워지지 않도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d3310c1441dcc638e3bc51207608ab6fbe78712" translate="yes" xml:space="preserve">
          <source>The identification tag of the media stream with which the candidate is associated, or &lt;code&gt;null&lt;/code&gt; if there is no associated media stream. The default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">후보가 관련된 미디어 스트림의 식별 태그. 또는 관련된 미디어 스트림이없는 경우는 &lt;code&gt;null&lt;/code&gt; 기본값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3e5030f2cabe76d4a4a1d8e8d27b94ee979f5e73" translate="yes" xml:space="preserve">
          <source>The identifier is a name that identifies the cue. It can be used to reference the cue from a script. It must not contain a newline and cannot contain the string &quot;&lt;code&gt;--&amp;gt;&quot;&lt;/code&gt;. It must end with a single newline. They do not have to be unique, although it is common to number them (e.g. 1, 2, 3, ...).</source>
          <target state="translated">식별자는 큐를 식별하는 이름입니다. 스크립트에서 큐를 참조하는 데 사용할 수 있습니다. 개행 문자를 포함 할 수 없으며 문자열 &quot; &lt;code&gt;--&amp;gt;&quot;&lt;/code&gt; 포함 할 수 없습니다 . 단일 줄 바꿈으로 끝나야합니다. 번호를 지정하는 것이 일반적이지만 (예 : 1, 2, 3, ...) 고유 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="abfd34fa21b846f4eec39755053ebd711ae26a9f" translate="yes" xml:space="preserve">
          <source>The identifier of the repeated action you want to cancel. This ID was returned by the corresponding call to &lt;code&gt;setInterval()&lt;/code&gt;.</source>
          <target state="translated">취소하려는 반복 작업의 식별자입니다. 이 ID는 &lt;code&gt;setInterval()&lt;/code&gt; 에 대한 해당 호출에 의해 리턴되었습니다 .</target>
        </trans-unit>
        <trans-unit id="76a322d4de247e544cb9e52b7a9b0cafb87e2323" translate="yes" xml:space="preserve">
          <source>The identifier of the timeout you want to cancel. This ID was returned by the corresponding call to &lt;code&gt;setTimeout()&lt;/code&gt;.</source>
          <target state="translated">취소하려는 시간 초과의 식별자입니다. 이 ID는 &lt;code&gt;setTimeout()&lt;/code&gt; 에 대한 해당 호출에 의해 리턴되었습니다 .</target>
        </trans-unit>
        <trans-unit id="ef36f77da7251a3dee31b989a9d6c62f25e71ebc" translate="yes" xml:space="preserve">
          <source>The identifier to check, i.e. the name of the cookie (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string&lt;/a&gt;)</source>
          <target state="translated">확인할 식별자, 즉 쿠키 이름 ( &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="9021370e68fe07a54e9f9e4d4c20d66c9630c558" translate="yes" xml:space="preserve">
          <source>The identity provider wasn't able to provide an identity assertion.</source>
          <target state="translated">자격 증명 공급자가 자격 증명 어설 션을 제공 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2ccf402b00c180cce436af6f758ac17c8e150db8" translate="yes" xml:space="preserve">
          <source>The image has no image data.</source>
          <target state="translated">이미지에 이미지 데이터가 없습니다.</target>
        </trans-unit>
        <trans-unit id="0e06aae1f6a88dfa00da74e1b74dbc26f3890839" translate="yes" xml:space="preserve">
          <source>The image is not loaded yet. Use &lt;code&gt;.complete === true&lt;/code&gt; and &lt;code&gt;.onload&lt;/code&gt; to determine when it is ready.</source>
          <target state="translated">이미지가 아직로드되지 않았습니다. 사용 &lt;code&gt;.complete === true&lt;/code&gt; 및 &lt;code&gt;.onload&lt;/code&gt; 는 이 준비가되면 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f7d5758180a3d86c68a04955618213723b58b935" translate="yes" xml:space="preserve">
          <source>The image will typically be an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/image&quot;&gt;&lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt;&lt;/a&gt; element but it can also be a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; or any other image element. The method's &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; coordinates are offsets where the image should appear relative to the mouse pointer.</source>
          <target state="translated">이미지는 일반적으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/image&quot;&gt; &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소이지만 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 또는 다른 이미지 요소 일 수도 있습니다. 메소드의 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 좌표는 이미지가 마우스 포인터를 기준으로 나타나야하는 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="47c1b19dc684abb15f884cd0bba62b2d663ffb2b" translate="yes" xml:space="preserve">
          <source>The implementation may have stripped out insignificant whitespace while parsing the selector. If set to a selector string which cannot be parsed, a SyntaxError is thrown.</source>
          <target state="translated">구현자가 선택기를 구문 분석하는 동안 중요하지 않은 공백을 제거했을 수 있습니다. 구문 분석 할 수없는 선택기 문자열로 설정하면 SyntaxError가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7f0011b9907260bfee190baa50c6baacc569b8f6" translate="yes" xml:space="preserve">
          <source>The implementation of our shim for &lt;a href=&quot;window/cancelidlecallback&quot;&gt;&lt;code&gt;cancelIdleCallback()&lt;/code&gt;&lt;/a&gt; is much simpler:</source>
          <target state="translated">&lt;a href=&quot;window/cancelidlecallback&quot;&gt; &lt;code&gt;cancelIdleCallback()&lt;/code&gt; &lt;/a&gt; 에 대한 shim 구현 은 훨씬 간단합니다.</target>
        </trans-unit>
        <trans-unit id="41c1664c417a216c50b1ba1a8b515b50603428ab" translate="yes" xml:space="preserve">
          <source>The implementation of the code needed to interface with a particular payment method provider in order to process payments.</source>
          <target state="translated">지불을 처리하기 위해 특정 지불 방법 제공자와 인터페이스하는 데 필요한 코드 구현.</target>
        </trans-unit>
        <trans-unit id="f7680068b3f6bac7238e497f47fcbff52227c588" translate="yes" xml:space="preserve">
          <source>The implementation status of pointer events in browsers is &lt;a href=&quot;http://caniuse.com/#search=pointer&quot;&gt;relatively low&lt;/a&gt; with IE11 and Edge having complete implementations. Firefox's implementation has been withdrawn because of &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1166347&quot;&gt;bug 1166347&lt;/a&gt;.</source>
          <target state="translated">브라우저에서 포인터 이벤트의 구현 상태는 IE11 및 Edge가 완전히 구현되어 &lt;a href=&quot;http://caniuse.com/#search=pointer&quot;&gt;상대적으로 낮&lt;/a&gt; 습니다. &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1166347&quot;&gt;버그 1166347로&lt;/a&gt; 인해 Firefox의 구현이 철회되었습니다 .</target>
        </trans-unit>
        <trans-unit id="46a3565092409d0134c9059a403ebe25cd44703a" translate="yes" xml:space="preserve">
          <source>The imported node is not yet included in the document tree. To include it, you need to call an insertion method such as &lt;a href=&quot;../node/appendchild&quot;&gt;&lt;code&gt;appendChild()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../node/insertbefore&quot;&gt;&lt;code&gt;insertBefore()&lt;/code&gt;&lt;/a&gt; with a node that &lt;em&gt;is&lt;/em&gt; currently in the document tree.</source>
          <target state="translated">가져온 노드는 아직 문서 트리에 포함되어 있지 않습니다. 를 포함하려면, 당신은 같은 삽입 메서드를 호출 할 필요 &lt;a href=&quot;../node/appendchild&quot;&gt; &lt;code&gt;appendChild()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../node/insertbefore&quot;&gt; &lt;code&gt;insertBefore()&lt;/code&gt; &lt;/a&gt; 노드와 &lt;em&gt;인&lt;/em&gt; 문서 트리에서 현재.</target>
        </trans-unit>
        <trans-unit id="61647f41eded3642881c1b974f211c024664fd3c" translate="yes" xml:space="preserve">
          <source>The incoming stream is attached to the &lt;code&gt;&quot;received_video&quot;&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, and the &quot;Hang Up&quot; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; element is enabled so the user can hang up the call.</source>
          <target state="translated">수신 스트림이 &lt;code&gt;&quot;received_video&quot;&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소에 연결되고 &quot;Hang Up&quot; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소가 활성화되어 사용자가 전화를 끊을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8d2af1c11e53111323437c66cd6ebf95226234c" translate="yes" xml:space="preserve">
          <source>The index is a persistent key-value storage where the value part of its records is the key part of a record in the referenced object store. The records in an index are automatically populated whenever records in the referenced object store are inserted, updated, or deleted. Each record in an index can point to only one record in its referenced object store, but several indexes can reference the same object store. When the object store changes, all indexes that refers to the object store are automatically updated.</source>
          <target state="translated">인덱스는 레코드의 값 부분이 참조 된 오브젝트 저장소에서 레코드의 핵심 부분 인 영구 키-값 스토리지입니다. 참조 된 오브젝트 저장소의 레코드가 삽입, 업데이트 또는 삭제 될 때마다 인덱스의 레코드가 자동으로 채워집니다. 인덱스의 각 레코드는 참조 된 오브젝트 저장소에서 하나의 레코드 만 가리킬 수 있지만 여러 인덱스가 동일한 오브젝트 저장소를 참조 할 수 있습니다. 객체 저장소가 변경되면 객체 저장소를 참조하는 모든 인덱스가 자동으로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="5caf3eae625b862e9744df6202e03dcfa974da91" translate="yes" xml:space="preserve">
          <source>The index is not in the allowed range. For example, this can be thrown by the &lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; object. (Legacy code value: &lt;code&gt;1&lt;/code&gt; and legacy constant name: &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt;)</source>
          <target state="translated">색인이 허용 된 범위에 있지 않습니다. 예를 들어, 이것은 &lt;a href=&quot;range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 개체에 의해 발생할 수 있습니다 . (레거시 코드 값 : &lt;code&gt;1&lt;/code&gt; 및 레거시 상수 이름 : &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="ecc7fb0e3966e29d229b56d8007d3ec84e459e4c" translate="yes" xml:space="preserve">
          <source>The index of one of the interfaces supported by the device. Interfaces are device-specific.</source>
          <target state="translated">장치가 지원하는 인터페이스 중 하나의 색인입니다. 인터페이스는 장치마다 다릅니다.</target>
        </trans-unit>
        <trans-unit id="b67062da059f5db8635cd18c0d9e2971deb6f05c" translate="yes" xml:space="preserve">
          <source>The index of the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object to retrieve. The index is a number in the range of 0 to one less than the length of the &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">검색 할 &lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt; 객체 의 인덱스입니다 . 색인은 &lt;a href=&quot;../touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; &lt;/a&gt; 의 길이보다 0에서 1 사이의 숫자 입니다.</target>
        </trans-unit>
        <trans-unit id="7bf862af2bbac6295dbdd6c94670c47269d08e98" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the NodeList.</source>
          <target state="translated">NodeList에서 처리중인 현재 요소의 색인입니다.</target>
        </trans-unit>
        <trans-unit id="cc1ff8860b10df902ebff81881a58b531468f649" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the array.</source>
          <target state="translated">배열에서 처리중인 현재 요소의 색인입니다.</target>
        </trans-unit>
        <trans-unit id="b83dc200bf061d713d7d8b647e7347cc792a810c" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed.</source>
          <target state="translated">처리중인 현재 요소의 색인입니다.</target>
        </trans-unit>
        <trans-unit id="ab857101f2b25c7f314198c13aafd59e6c6393d3" translate="yes" xml:space="preserve">
          <source>The index of the currently selected track, if any, or &lt;code&gt;&amp;minus;1&lt;/code&gt; otherwise. .</source>
          <target state="translated">현재 선택된 트랙의 인덱스 (있는 경우) 또는 그렇지 않은 경우 &lt;code&gt;&amp;minus;1&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="66059b748974278daf492b3a6150404e9c015c3b" translate="yes" xml:space="preserve">
          <source>The index position of the &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; object you want to return.</source>
          <target state="translated">반환하려는 &lt;a href=&quot;../sourcebuffer&quot;&gt; &lt;code&gt;SourceBuffer&lt;/code&gt; &lt;/a&gt; 객체 의 인덱스 위치입니다 .</target>
        </trans-unit>
        <trans-unit id="91de6b281bf82a8409c27eac6824e59cd36e2e76" translate="yes" xml:space="preserve">
          <source>The index position of the &lt;a href=&quot;../trackdefault&quot;&gt;&lt;code&gt;TrackDefault&lt;/code&gt;&lt;/a&gt; object you want to return.</source>
          <target state="translated">반환하려는 &lt;a href=&quot;../trackdefault&quot;&gt; &lt;code&gt;TrackDefault&lt;/code&gt; &lt;/a&gt; 객체 의 인덱스 위치입니다 .</target>
        </trans-unit>
        <trans-unit id="d5ec857e15b7ca94530a52d181920354c38b8c9a" translate="yes" xml:space="preserve">
          <source>The index, or its object store, has been deleted; or the current transaction is not an upgrade transaction. You can only rename indexes during upgrade transactions; that is, when the mode is &lt;code&gt;&quot;versionchange&quot;&lt;/code&gt;.</source>
          <target state="translated">색인 또는 해당 객체 저장소가 삭제되었습니다. 또는 현재 트랜잭션이 업그레이드 트랜잭션이 아닙니다. 업그레이드 트랜잭션 중에 만 인덱스 이름을 바꿀 수 있습니다. 즉, 모드가 &lt;code&gt;&quot;versionchange&quot;&lt;/code&gt; 인 경우 입니다.</target>
        </trans-unit>
        <trans-unit id="b2e60486c580d0a0bb60584736ac5bf86565a28c" translate="yes" xml:space="preserve">
          <source>The information is accessed through the &lt;code&gt;&lt;strong&gt;mediaCapabilities&lt;/strong&gt;&lt;/code&gt; property of the &lt;a href=&quot;navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">정보는 &lt;a href=&quot;navigator&quot;&gt; &lt;code&gt;Navigator&lt;/code&gt; &lt;/a&gt; 인터페이스 의 &lt;code&gt;&lt;strong&gt;mediaCapabilities&lt;/strong&gt;&lt;/code&gt; 특성을 통해 액세스됩니다 .</target>
        </trans-unit>
        <trans-unit id="69293766aa78b7800b75687b2f6f7b0b2a2a9c12" translate="yes" xml:space="preserve">
          <source>The information provided is based on the last ten seconds of media received.</source>
          <target state="translated">제공된 정보는 최근 10 초 동안 수신 한 미디어를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="02ce20c8ea65e30641ca7f36e374b0dea6906590" translate="yes" xml:space="preserve">
          <source>The information we need to exchange is the Offer and Answer which just contains the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; mentioned below.</source>
          <target state="translated">교환해야 할 정보는 아래에 언급 된 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; 만 포함하는 제안 및 답변입니다 .</target>
        </trans-unit>
        <trans-unit id="9ad1ac79a38eff40c368d0d2da3eb4074d7fc087" translate="yes" xml:space="preserve">
          <source>The initTimeEvent method is used to initialize the value of a TimeEvent created through the DocumentEvent interface. This method may only be called before the TimeEvent has been dispatched via the dispatchEvent method, though it may be called multiple times during that phase if necessary.</source>
          <target state="translated">initTimeEvent 메소드는 DocumentEvent 인터페이스를 통해 작성된 TimeEvent 값을 초기화하는 데 사용됩니다. 이 메소드는 dispatchEvent 메소드를 통해 TimeEvent를 전달하기 전에 만 호출 할 수 있지만 필요한 경우 해당 단계 동안 여러 번 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c435ff3251bf15470a0a76bcc9fd6141fb6f630" translate="yes" xml:space="preserve">
          <source>The initial definition of the API of WebRTC.</source>
          <target state="translated">WebRTC API의 초기 정의.</target>
        </trans-unit>
        <trans-unit id="8d02431012098639b8c2598302c6373f95779f46" translate="yes" xml:space="preserve">
          <source>The initial definition of the object conveying the stream of media content.</source>
          <target state="translated">미디어 컨텐츠의 스트림을 전달하는 객체의 초기 정의.</target>
        </trans-unit>
        <trans-unit id="4ea3961ad5d4b44133d07b3a491c8034f4eb66d1" translate="yes" xml:space="preserve">
          <source>The initial definition on how to obtain stream of content from DOM Elements</source>
          <target state="translated">DOM Elements에서 컨텐츠 스트림을 얻는 방법에 대한 초기 정의</target>
        </trans-unit>
        <trans-unit id="b471c326596744d46e1159b88da83e7372151dd8" translate="yes" xml:space="preserve">
          <source>The initial value of &lt;code&gt;timestampOffset&lt;/code&gt; is 0.</source>
          <target state="translated">&lt;code&gt;timestampOffset&lt;/code&gt; 의 초기 값 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="bd7b4e609456ff4e052c1246bd502b94de2628c1" translate="yes" xml:space="preserve">
          <source>The initial view (i.e., before magnification and panning) of the current innermost SVG document fragment can be either the &quot;standard&quot; view, i.e., based on attributes on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt;&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;&lt;/a&gt; element such as &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox&quot;&gt;viewBox&lt;/a&gt;&lt;/code&gt;) or on a &quot;custom&quot; view (i.e., a hyperlink into a particular &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view&quot;&gt;&lt;code&gt;&amp;lt;view&amp;gt;&lt;/code&gt;&lt;/a&gt; or other element). If the initial view is the &quot;standard&quot; view, then this attribute is &lt;code&gt;false&lt;/code&gt;. If the initial view is a &quot;custom&quot; view, then this attribute is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">현재 가장 안쪽 SVG 문서 조각의 초기보기 (즉, 확대 및 패닝 전)는 &quot;표준&quot;보기, 즉 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt; &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소 (예 : &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox&quot;&gt;viewBox&lt;/a&gt;&lt;/code&gt; 등 )의 속성을 기반으로 하거나 &quot;사용자 정의&quot;보기 ( 즉, 특정 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view&quot;&gt; &lt;code&gt;&amp;lt;view&amp;gt;&lt;/code&gt; &lt;/a&gt; 또는 다른 요소에 대한 하이퍼 링크 ). 초기보기가 &quot;표준&quot;보기 인 경우이 속성은 &lt;code&gt;false&lt;/code&gt; 입니다. 초기보기가 &quot;사용자 정의&quot;보기 인 경우이 속성은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="66363a709ecb12db93fee7fad2250201826e6040" translate="yes" xml:space="preserve">
          <source>The input/output read operation failed (No legacy code value and constant name).</source>
          <target state="translated">입 / 출력 읽기 조작이 실패했습니다 (레거시 코드 값 및 상수 이름 없음).</target>
        </trans-unit>
        <trans-unit id="45132766641fa0600b00a0d2ded9649fae31c043" translate="yes" xml:space="preserve">
          <source>The install event is fired when an install is successfully completed. The install event is generally used to populate your browser&amp;rsquo;s offline caching capabilities with the assets you need to run your app offline. To do this, we use Service Worker&amp;rsquo;s brand new storage API &amp;mdash; &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/a&gt; &amp;mdash; a global object on the service worker that allows us to store assets delivered by responses, and keyed by their requests. This API works in a similar way to the browser&amp;rsquo;s standard cache, but it is specific to your domain. It persists until you tell it not to &amp;mdash; again, you have full control.</source>
          <target state="translated">설치가 성공적으로 완료되면 설치 이벤트가 시작됩니다. 설치 이벤트는 일반적으로 브라우저의 오프라인 캐싱 기능을 앱을 오프라인으로 실행하는 데 필요한 자산으로 채우는 데 사용됩니다. 이를 위해 Service Worker의 새로운 스토리지 API 인 &lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;cache&lt;/code&gt; &lt;/a&gt; 를 사용하여 응답으로 전달되고 요청에 의해 키가 지정된 자산을 저장할 수있는 서비스 워커의 글로벌 객체입니다. 이 API는 브라우저의 표준 캐시와 유사한 방식으로 작동하지만 도메인에 따라 다릅니다. 다시 말하지 않으면 완전히 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f6d533575dca4b047f9a9e8eac8a1e0c1821662" translate="yes" xml:space="preserve">
          <source>The instrument by which payment is submitted, such as a credit card or online payment service.</source>
          <target state="translated">신용 카드 또는 온라인 지불 서비스와 같이 지불이 제출되는 도구.</target>
        </trans-unit>
        <trans-unit id="f9787a36b74dcb77f1c6d92e71cf0fb1018f2122" translate="yes" xml:space="preserve">
          <source>The interface &lt;a href=&quot;idbopendbrequest&quot;&gt;&lt;code&gt;IDBOpenDBRequest&lt;/code&gt;&lt;/a&gt; is derived from &lt;code&gt;IDBRequest&lt;/code&gt;.</source>
          <target state="translated">인터페이스 &lt;a href=&quot;idbopendbrequest&quot;&gt; &lt;code&gt;IDBOpenDBRequest&lt;/code&gt; 는&lt;/a&gt; 로부터 유도된다 &lt;code&gt;IDBRequest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1586ceae149c3f1f6571cc12c6a6b49b07b42a07" translate="yes" xml:space="preserve">
          <source>The interface also supports the following properties which are listed in the order in which they are recorded for the fetching of a single resource. An alphabetical listing is shown in the navigation, at left.</source>
          <target state="translated">또한이 인터페이스는 단일 리소스 가져 오기를 위해 기록 된 순서대로 나열된 다음 속성을 지원합니다. 탐색 목록에 왼쪽에 알파벳순 목록이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="348c57b421d51d4da2f638e38a4d72e871bea062" translate="yes" xml:space="preserve">
          <source>The interface also supports the following properties:</source>
          <target state="translated">이 인터페이스는 다음 속성도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="1ab0596d2edf9246a634d5554a2710557598c081" translate="yes" xml:space="preserve">
          <source>The interface consists of master controls, which allow us to play/stop the sequencer, and adjust the BPM (beats per minute) to speed up or slow down the &quot;music&quot;.</source>
          <target state="translated">인터페이스는 마스터 컨트롤로 구성되어있어 시퀀서를 재생 / 중지하고 BPM (분당 비트 수)을 조정하여 &quot;음악&quot;의 속도를 높이거나 낮 춥니 다.</target>
        </trans-unit>
        <trans-unit id="407842243ba3bfd86b2b17daa56df451116b6929" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../canvaspattern&quot;&gt;&lt;code&gt;CanvasPattern&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">그것을 정의하는 인터페이스, &lt;a href=&quot;../canvaspattern&quot;&gt; &lt;code&gt;CanvasPattern&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c31415fa45bbade510bd4d6eb4a7a29db463afb" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">그것을 정의하는 인터페이스, &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbce26c8a8f32df63eeba5225e888721c01c1242" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인터페이스는, 그것을 정의 &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09bc4849716b6bd03cd6699c6ad0bde1c67085ee" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../htmlcanvaselement&quot;&gt;&lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그것을 정의하는 인터페이스, &lt;a href=&quot;../htmlcanvaselement&quot;&gt; &lt;code&gt;HTMLCanvasElement&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="739586ffbfb11d860f8093ebc9cd864ebac8e295" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그것을 정의하는 인터페이스, &lt;a href=&quot;../htmlmediaelement&quot;&gt; &lt;code&gt;HTMLMediaElement&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="88c2747119091f7708a563c0d930d015d391ab25" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../htmltrackelement&quot;&gt;&lt;code&gt;HTMLTrackElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그것을 정의하는 인터페이스, &lt;a href=&quot;../htmltrackelement&quot;&gt; &lt;code&gt;HTMLTrackElement&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cee15d4f73fca209487f4be41a66596304378c12" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../mediaerror&quot;&gt;&lt;code&gt;MediaError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인터페이스는, 그것을 정의 &lt;a href=&quot;../mediaerror&quot;&gt; &lt;code&gt;MediaError&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e3b6598e7db413a16e827a1e5b1ed5436e574fc8" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../path2d&quot;&gt;&lt;code&gt;Path2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인터페이스는, 그것을 정의하는 &lt;a href=&quot;../path2d&quot;&gt; &lt;code&gt;Path2D&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a366dd3834caf1e7c9e93372fddb5bccacf7de70" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../htmlcanvaselement&quot;&gt;&lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 메서드를 정의하는 인터페이스 &lt;a href=&quot;../htmlcanvaselement&quot;&gt; &lt;code&gt;HTMLCanvasElement&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f3cd20f50462042424e847a898746f78f51a51e" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../imagebitmap&quot;&gt;&lt;code&gt;ImageBitmap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인터페이스,이 방법을 정의 &lt;a href=&quot;../imagebitmap&quot;&gt; &lt;code&gt;ImageBitmap&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e4295c90e14090be33103d6861da7bb56bf248b5" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../imagebitmaprenderingcontext&quot;&gt;&lt;code&gt;ImageBitmapRenderingContext&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 메소드를 정의하는 인터페이스 &lt;a href=&quot;../imagebitmaprenderingcontext&quot;&gt; &lt;code&gt;ImageBitmapRenderingContext&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c30b008ac3791f8827753a507fcfe3c4fc386c27" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../offscreencanvas&quot;&gt;&lt;code&gt;OffscreenCanvas&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 메소드 인 &lt;a href=&quot;../offscreencanvas&quot;&gt; &lt;code&gt;OffscreenCanvas&lt;/code&gt; 를&lt;/a&gt; 정의하는 인터페이스</target>
        </trans-unit>
        <trans-unit id="1844e07a1a6cb93faf1e42a489322e1cbfdbffcf" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../offscreencanvas&quot;&gt;&lt;code&gt;OffscreenCanvas&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드 인 &lt;a href=&quot;../offscreencanvas&quot;&gt; &lt;code&gt;OffscreenCanvas&lt;/code&gt; 를&lt;/a&gt; 정의하는 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="75da6d6c041ca38f1711d4b22d5473ccf737b5d1" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../webglrenderingcontext&quot;&gt;&lt;code&gt;WebGLRenderingContext&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 메소드를 정의하는 인터페이스 &lt;a href=&quot;../webglrenderingcontext&quot;&gt; &lt;code&gt;WebGLRenderingContext&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e5a1185a313900e50ffa7fca7f64bedc7fc9bde" translate="yes" xml:space="preserve">
          <source>The interface defining this method: &lt;a href=&quot;../canvasgradient&quot;&gt;&lt;code&gt;CanvasGradient&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 메소드를 정의하는 인터페이스 : &lt;a href=&quot;../canvasgradient&quot;&gt; &lt;code&gt;CanvasGradient&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6159ab1a0e001b753fc80c7503d37d685addf47" translate="yes" xml:space="preserve">
          <source>The interface defining this method: &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 메소드를 정의하는 인터페이스 : &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f381c85144455856c15264cce5dfcba6dcd6f67" translate="yes" xml:space="preserve">
          <source>The interface defining this property: &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 속성을 정의하는 인터페이스 : &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4190f636c5f94b490aa753630bd1fc1f86fe89df" translate="yes" xml:space="preserve">
          <source>The interface defining this property: &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인터페이스는이 속성을 정의 : &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; 를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6463c0a91e8eaae381c941ec9ed922d50a6c4e2" translate="yes" xml:space="preserve">
          <source>The interface for the owner object</source>
          <target state="translated">소유자 객체의 인터페이스</target>
        </trans-unit>
        <trans-unit id="5298f0cfd7036ab1542876f1fa2864e22dcc0aae" translate="yes" xml:space="preserve">
          <source>The interface implementing this property: &lt;a href=&quot;../htmltableelement&quot;&gt;&lt;code&gt;HTMLTableElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">: 인터페이스는이 속성을 구현 &lt;a href=&quot;../htmltableelement&quot;&gt; &lt;code&gt;HTMLTableElement&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="05b96684055565c7a89cea05b0d9d61d21d96ecd" translate="yes" xml:space="preserve">
          <source>The interface it belongs to, &lt;a href=&quot;../geolocation&quot;&gt;&lt;code&gt;Geolocation&lt;/code&gt;&lt;/a&gt;, and the way to access it &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigatorGeolocation/geolocation&quot;&gt;&lt;code&gt;NavigatorGeolocation.geolocation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인터페이스가 속한 인터페이스, &lt;a href=&quot;../geolocation&quot;&gt; &lt;code&gt;Geolocation&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigatorGeolocation/geolocation&quot;&gt; &lt;code&gt;NavigatorGeolocation.geolocation&lt;/code&gt; &lt;/a&gt; 에 액세스하는 방법 .</target>
        </trans-unit>
        <trans-unit id="aeb1f85c339e16e7c965aae2f5ca47cc37388bac" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../nodefilter&quot;&gt;&lt;code&gt;NodeFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">속한 인터페이스 : &lt;a href=&quot;../nodefilter&quot;&gt; &lt;code&gt;NodeFilter&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6c38f187e583de7f72fe36b4490afbf568450741" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">속한 인터페이스 : &lt;a href=&quot;../nodeiterator&quot;&gt; &lt;code&gt;NodeIterator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec55632ee4a409f9ef75bd8ec5c856999d7648be" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">속한 인터페이스 : &lt;a href=&quot;../nodeiterator&quot;&gt; &lt;code&gt;NodeIterator&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7278619e61c8579f78d86e03f7781b1579084fe7" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">: 인터페이스는이 속한 &lt;a href=&quot;../url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f381c2c684cf9744f3fc05c0b0410d18eb80c8fb" translate="yes" xml:space="preserve">
          <source>The interface of the &lt;a href=&quot;credential_management_api&quot;&gt;Credential Management API&lt;/a&gt; provides information about a username/password pair. In supporting browsers an instance of this class may be passed in the &lt;code&gt;credential&lt;/code&gt; member of the &lt;code&gt;init&lt;/code&gt; object for global &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;credential_management_api&quot;&gt;Credential Management API&lt;/a&gt; 의 인터페이스는 사용자 이름 / 암호 쌍에 대한 정보를 제공합니다. 브라우저를 지원할 때,이 클래스의 인스턴스는 전역 &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt; &lt;code&gt;fetch&lt;/code&gt; &lt;/a&gt; 위해 &lt;code&gt;init&lt;/code&gt; 객체 의 &lt;code&gt;credential&lt;/code&gt; 멤버 로 전달 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b2b0cd221411d551c9e4eeb01dec1aca55f7b759" translate="yes" xml:space="preserve">
          <source>The interface of the object it creates: &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 생성 객체의 인터페이스 : &lt;a href=&quot;../treewalker&quot;&gt; &lt;code&gt;TreeWalker&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c3e7077536882ebea4c9419888860140f265d8d7" translate="yes" xml:space="preserve">
          <source>The interface of the promise returned by the &lt;a href=&quot;mediacapabilities&quot;&gt;&lt;code&gt;mediaCapabilities&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt;&lt;code&gt;encodingInfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt;&lt;code&gt;decodingInfo()&lt;/code&gt;&lt;/a&gt; methods; returning whether the media configuration tested is supported, smooth, and powerEfficient.</source>
          <target state="translated">&lt;a href=&quot;mediacapabilities&quot;&gt; &lt;code&gt;mediaCapabilities&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt; &lt;code&gt;encodingInfo()&lt;/code&gt; &lt;/a&gt; 및 decodeInfo &lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt; &lt;code&gt;decodingInfo()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 돌려 주어진 약속의 인터페이스 . 테스트 한 미디어 구성이 지원되고, 부드럽고, 효율적인지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="95ffc84a9a04373960151e54ae5381df48ae073b" translate="yes" xml:space="preserve">
          <source>The interface of the promise returned by the the &lt;a href=&quot;../mediacapabilities&quot;&gt;&lt;code&gt;mediaCapabilities&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;encodinginfo&quot;&gt;&lt;code&gt;encodingInfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;encodinginfo&quot;&gt;&lt;code&gt;decodingInfo()&lt;/code&gt;&lt;/a&gt; methods returning whether the media configuration tested is supported, smooth, and powerEfficient.</source>
          <target state="translated">&lt;a href=&quot;../mediacapabilities&quot;&gt; &lt;code&gt;mediaCapabilities&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;encodinginfo&quot;&gt; &lt;code&gt;encodingInfo()&lt;/code&gt; &lt;/a&gt; 및 codingInfo &lt;a href=&quot;encodinginfo&quot;&gt; &lt;code&gt;decodingInfo()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 반환 된 약속의 인터페이스는 테스트 된 미디어 구성이 지원되는지, 매끄럽고 powerEfficient인지 여부를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8bf30b04ea044cef865f5f8ff8a4fd68b9d4ee67" translate="yes" xml:space="preserve">
          <source>The interface of the returned value, &lt;a href=&quot;../location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">반환 값의 인터페이스 &lt;a href=&quot;../location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e242217621f1167956579e10892d15e6cd7edea4" translate="yes" xml:space="preserve">
          <source>The interface of the the &lt;a href=&quot;webrtc_api&quot;&gt;WebRTC API&lt;/a&gt; provides an object represents a certificate that an &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; uses to authenticate.</source>
          <target state="translated">&lt;a href=&quot;webrtc_api&quot;&gt;WebRTC API&lt;/a&gt; 의 인터페이스 는 &lt;a href=&quot;rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt; 이 인증 하는 데 사용 하는 인증서를 객체로 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="41db531f6013fb6ea8d50a1a010693a900161ee9" translate="yes" xml:space="preserve">
          <source>The interface that represents errors thrown by the MediaStream Recording API. Its &lt;a href=&quot;mediarecordererrorevent/error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; property is a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; that specifies that error occurred.</source>
          <target state="translated">MediaStream Recording API에서 발생한 오류를 나타내는 인터페이스입니다. 그것의 &lt;a href=&quot;mediarecordererrorevent/error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt; 속성은입니다 &lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt; 지정 오류가 발생했음을 것이다.</target>
        </trans-unit>
        <trans-unit id="539b691936c73ffac3bc933b434b424fe2c3cb42" translate="yes" xml:space="preserve">
          <source>The interface this property belongs to: &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">: 인터페이스는이 속성에 속하는 &lt;a href=&quot;../nodeiterator&quot;&gt; &lt;code&gt;NodeIterator&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="618038d08d9fea210e7695c10467fcf20ae5b8e9" translate="yes" xml:space="preserve">
          <source>The interface this property belongs to: &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인터페이스는이 부동산에 속하는 : &lt;a href=&quot;../treewalker&quot;&gt; &lt;code&gt;TreeWalker&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="66dfcc0a5dcfffa02636c957cfa59eb0ba675baf" translate="yes" xml:space="preserve">
          <source>The interface's properties create a &lt;em&gt;resource loading timeline&lt;/em&gt; with &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;high-resolution timestamps&lt;/code&gt;&lt;/a&gt; for network events such as redirect start and end times, fetch start, DNS lookup start and end times, response start and end times, etc. The interface also includes other properties that provide data about the size of the fetched resource as well as the &lt;em&gt;type&lt;/em&gt; of resource that initiated the fetch.</source>
          <target state="translated">인터페이스의 속성 은 리디렉션 시작 및 종료 시간, 가져 오기 시작, DNS 조회 시작 및 종료 시간, 응답 시작 및 종료 시간 등과 같은 네트워크 이벤트에 대한 &lt;a href=&quot;../domhighrestimestamp&quot;&gt; &lt;code&gt;high-resolution timestamps&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;em&gt;리소스로드 타임 라인&lt;/em&gt; 을 만듭니다 .이 인터페이스에는 다른 속성도 제공됩니다. 페치 된 자원의 크기 및 페치 를 시작한 자원 의 &lt;em&gt;유형&lt;/em&gt; 에 대한 데이터 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8095ea3ad68881483ee7d7cad0e3a6d13c5fb792" translate="yes" xml:space="preserve">
          <source>The interface's properties create a &lt;em&gt;resource loading timeline&lt;/em&gt; with &lt;a href=&quot;domhighrestimestamp&quot;&gt;&lt;code&gt;high-resolution timestamps&lt;/code&gt;&lt;/a&gt; for network events such as redirect start and end times, fetch start, DNS lookup start and end times, response start and end times, etc.. Additionally, the interface extends &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt; with other properties which provide data about the size of the fetched resource as well as the &lt;em&gt;type&lt;/em&gt; of resource that initiated the fetch.</source>
          <target state="translated">인터페이스의 속성 은 리디렉션 시작 및 종료 시간, 페치 시작, DNS 조회 시작 및 종료 시간, 응답 시작 및 종료 시간 등과 같은 네트워크 이벤트에 대한 &lt;a href=&quot;domhighrestimestamp&quot;&gt; &lt;code&gt;high-resolution timestamps&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;em&gt;리소스로드 타임 라인&lt;/em&gt; 을 만듭니다. 또한 인터페이스는 다음 과 같이 &lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;PerformanceEntry&lt;/code&gt; &lt;/a&gt; 를 확장합니다. 페치 된 자원의 크기 및 페치 를 시작한 자원 의 &lt;em&gt;유형&lt;/em&gt; 에 대한 데이터를 제공하는 기타 특성 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96b06f86d0b86353bdba641db118148b7c60b0ee" translate="yes" xml:space="preserve">
          <source>The interface's properties create a &lt;em&gt;resource loading timeline&lt;/em&gt; with &lt;a href=&quot;domhighrestimestamp&quot;&gt;high-resolution timestamps&lt;/a&gt; for network events such as redirect start and end times, DNS lookup start and end times, request start, response start and end times, etc. The interface also includes other properties that provide data about the size of the fetched resource as well as the &lt;em&gt;type&lt;/em&gt; of resource that initiated the fetch.</source>
          <target state="translated">인터페이스의 속성 은 리디렉션 시작 및 종료 시간, DNS 조회 시작 및 종료 시간, 요청 시작, 응답 시작 및 종료 시간 등과 같은 네트워크 이벤트에 대한 &lt;a href=&quot;domhighrestimestamp&quot;&gt;고해상도 타임 스탬프&lt;/a&gt; 가 포함 된 &lt;em&gt;리소스로드 타임 라인&lt;/em&gt; 을 만듭니다 .이 인터페이스에는 다른 속성도 제공됩니다. 페치 된 자원의 크기 및 페치 를 시작한 자원 의 &lt;em&gt;유형&lt;/em&gt; 에 대한 데이터 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="336b8c0f074dee4820ed71b35fa86bb4dd1b46c6" translate="yes" xml:space="preserve">
          <source>The interface:</source>
          <target state="translated">인터페이스 :</target>
        </trans-unit>
        <trans-unit id="84091c643115a9215d55c9d55a348492976290d7" translate="yes" xml:space="preserve">
          <source>The interfaces described in this document are defined in the &lt;code&gt;High Resolution Time&lt;/code&gt; standard which has two levels:</source>
          <target state="translated">이 문서에서 설명하는 인터페이스 는 다음 두 가지 수준의 &lt;code&gt;High Resolution Time&lt;/code&gt; 표준에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="33e8d4b6156f7fd7db871b356ca9b2ea71c92e97" translate="yes" xml:space="preserve">
          <source>The interfaces described in this document are defined in the &lt;strong&gt;Performance Timeline&lt;/strong&gt; standard which has two levels:</source>
          <target state="translated">이 문서에서 설명하는 인터페이스 는 다음 두 가지 수준 의 &lt;strong&gt;성능 타임 라인&lt;/strong&gt; 표준에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="09380fbe60824f1b7236f80ede7d4e2372d6bade" translate="yes" xml:space="preserve">
          <source>The interfaces related to the &lt;code&gt;WebGLRenderingContext&lt;/code&gt; are referenced under &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/WebGL&quot;&gt;WebGL&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WebGLRenderingContext&lt;/code&gt; 와 관련된 인터페이스 는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/WebGL&quot;&gt;WebGL에서&lt;/a&gt; 참조됩니다 .</target>
        </trans-unit>
        <trans-unit id="aaff9627d1120f1f8f30d0dbb36b911b3d4e842f" translate="yes" xml:space="preserve">
          <source>The interfaces that it allows to be use as image sources are the following:</source>
          <target state="translated">이미지 소스로 사용할 수있는 인터페이스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="17d96adbf82ef27098abb4d0cc3dcafb077bf739" translate="yes" xml:space="preserve">
          <source>The intersection root and root margin</source>
          <target state="translated">교차 루트와 루트 마진</target>
        </trans-unit>
        <trans-unit id="05ea4a2920b10c138f7ace947447c5f1da2d100c" translate="yes" xml:space="preserve">
          <source>The interval that this operation is allowed to take to acquire locks on all the objects stores and indexes identified in &lt;code&gt;storeNames&lt;/code&gt;.</source>
          <target state="translated">이 조작이 &lt;code&gt;storeNames&lt;/code&gt; 에서 식별 된 모든 오브젝트 저장소 및 인덱스에 대한 잠금을 획득하는 데 허용되는 간격입니다 .</target>
        </trans-unit>
        <trans-unit id="3eb926157324dcd68c93c19d08b965f35645ebd6" translate="yes" xml:space="preserve">
          <source>The introduction of new input mechanisms results in increased application complexity to handle various input events, such as key events, mouse events, pen/stylus events, and touch events. To help address this problem, the &lt;a href=&quot;http://www.w3.org/TR/pointerevents/&quot;&gt;Pointer Events standard&lt;/a&gt;&lt;em&gt;defines events and related interfaces for handling hardware agnostic pointer input from devices including a mouse, pen, touchscreen, etc.&lt;/em&gt;. That is, the abstract &lt;em&gt;pointer&lt;/em&gt; creates a unified input model that can represent a contact point for a finger, pen/stylus or mouse.</source>
          <target state="translated">새로운 입력 메커니즘의 도입으로 주요 이벤트, 마우스 이벤트, 펜 / 스타일러스 이벤트 및 터치 이벤트와 같은 다양한 입력 이벤트를 처리하기 위해 응용 프로그램의 복잡성이 증가합니다. 이 문제를 해결하기 위해 &lt;a href=&quot;http://www.w3.org/TR/pointerevents/&quot;&gt;포인터 이벤트 표준 &lt;/a&gt;&lt;em&gt;은 마우스, 펜, 터치 스크린 등의 장치에서 하드웨어 독립적 포인터 입력을 처리하기위한 이벤트 및 관련 인터페이스를 정의합니다&lt;/em&gt; . 즉, 추상 &lt;em&gt;포인터&lt;/em&gt; 는 손가락, 펜 / 스타일러스 또는 마우스의 접점을 나타낼 수있는 통합 된 입력 모델을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="abb9f95510dfcd52f47283d63812d3b38ccfdc76" translate="yes" xml:space="preserve">
          <source>The issue</source>
          <target state="translated">문제</target>
        </trans-unit>
        <trans-unit id="8f8da4b4e8269a0c03a44e750d7550c096ec982b" translate="yes" xml:space="preserve">
          <source>The item may not be dropped.</source>
          <target state="translated">아이템을 떨어 뜨릴 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="65a44245b173376cd7e34a331aa502b23a71bdbf" translate="yes" xml:space="preserve">
          <source>The item you wish to update (or insert).</source>
          <target state="translated">업데이트 (또는 삽입)하려는 항목입니다.</target>
        </trans-unit>
        <trans-unit id="12b90b70e812db945fca73c7ee81205442fcf32a" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;CSSValueList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">&lt;code&gt;CSSValueList&lt;/code&gt; 의 항목 은 0부터 시작하는 정수 색인을 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19014f936c326668ea2ca49937a45a65d80c8fe3" translate="yes" xml:space="preserve">
          <source>The items in the collection of nodes are objects and not strings. To get data from node objects, use their properties (e.g. &lt;code&gt;elementNodeReference.childNodes[1].nodeName&lt;/code&gt; to get the name, etc.).</source>
          <target state="translated">노드 모음의 항목은 문자열이 아닌 객체입니다. 노드 객체에서 데이터를 가져 오려면 해당 속성 (예 : &lt;code&gt;elementNodeReference.childNodes[1].nodeName&lt;/code&gt; 등)을 사용하여 이름을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1ed765510dec72b93a3437e7a05cf08d7bf7037b" translate="yes" xml:space="preserve">
          <source>The key = &lt;strong&gt;z&lt;/strong&gt;</source>
          <target state="translated">열쇠 = &lt;strong&gt;z&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e5f1dbfe9dee996a1a03522a884acd5b831e3d6" translate="yes" xml:space="preserve">
          <source>The key bits to take away from this are:</source>
          <target state="translated">이것에서 빼낼 핵심 비트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f4210dbf3b02cfa151ceac0a8d8faa5e79054d7b" translate="yes" xml:space="preserve">
          <source>The key change here is that instead of fetching the vertex color, we're fetching the texture coordinates and passing them to the vertex shader; this will indicate the location within the texture corresponding to the vertex.</source>
          <target state="translated">여기서 중요한 변경 사항은 정점 색상을 가져 오는 대신 텍스처 좌표를 가져와 정점 셰이더에 전달한다는 것입니다. 이것은 정점에 해당하는 텍스처 내 위치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="839ae84ae813d9ba3e334df960d534e9bfc5051f" translate="yes" xml:space="preserve">
          <source>The key difference here is that for each vertex, we pass its color using a &lt;code&gt;varying&lt;/code&gt; to the fragment shader.</source>
          <target state="translated">여기서 중요한 차이점은 각 정점마다 조각 셰이더에 &lt;code&gt;varying&lt;/code&gt; 색을 사용하여 색상을 전달한다는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="f15e79e3ad726a6eba111ac63901e860731ca800" translate="yes" xml:space="preserve">
          <source>The key for the record at the cursor's &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#gloss_position&quot;&gt;position&lt;/a&gt;.</source>
          <target state="translated">커서 &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#gloss_position&quot;&gt;위치&lt;/a&gt; 의 레코드 키 .</target>
        </trans-unit>
        <trans-unit id="192aee5c47f2716449ab102e49cc31ce4a4e0518" translate="yes" xml:space="preserve">
          <source>The key for the stored record.</source>
          <target state="translated">저장된 레코드의 키입니다.</target>
        </trans-unit>
        <trans-unit id="6f2c3975f2000d1b80af15edb055b357b5add06a" translate="yes" xml:space="preserve">
          <source>The key has only one version, or can't be distinguished between the left and right versions of the key, and was not pressed on the numeric keypad or a key that is considered to be part of the keypad.</source>
          <target state="translated">이 키에는 버전이 하나만 있거나 왼쪽과 오른쪽 버전을 구분할 수 없으며 숫자 키패드 나 키패드의 일부로 간주되는 키를 누르지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="34cb9fcb12f5003653d832e173841dd3cb519bd3" translate="yes" xml:space="preserve">
          <source>The key here is connecting the graph correctly, and also starting both oscillators:</source>
          <target state="translated">여기서 핵심은 그래프를 올바르게 연결하고 두 발진기를 시작하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a4d85226d43fbca0da6814f3a48caaef559ad393" translate="yes" xml:space="preserve">
          <source>The key is greater than or equal to this cursor's position and this cursor's direction is &lt;code&gt;prev&lt;/code&gt; or &lt;code&gt;prevunique&lt;/code&gt;.</source>
          <target state="translated">키가이 커서의 위치보다 크 거나 &lt;code&gt;prevunique&lt;/code&gt; 커서의 방향이 &lt;code&gt;prev&lt;/code&gt; 또는 prevunique 입니다.</target>
        </trans-unit>
        <trans-unit id="0aa6707942ff8ec6cfcc98023af97c687bbc7ff2" translate="yes" xml:space="preserve">
          <source>The key is less than or equal to this cursor's position and the cursor's direction is &lt;code&gt;next&lt;/code&gt; or &lt;code&gt;nextunique&lt;/code&gt;.</source>
          <target state="translated">키가이 커서의 위치보다 작거나 같고 커서 방향이 &lt;code&gt;next&lt;/code&gt; 또는 &lt;code&gt;nextunique&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c9f8e7e7f111ec47f68e534f4a806fa00ac2b734" translate="yes" xml:space="preserve">
          <source>The key is not a valid key.</source>
          <target state="translated">키가 유효한 키가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="89ba803d9ccc0b7d292ec0a987eb694cd130f540" translate="yes" xml:space="preserve">
          <source>The key of an element to search for in the map.</source>
          <target state="translated">지도에서 검색 할 요소의 키입니다.</target>
        </trans-unit>
        <trans-unit id="6682ef34c8531cbce3f2f9c8c513065b078d1f42" translate="yes" xml:space="preserve">
          <source>The key of the item to return from the map.</source>
          <target state="translated">지도에서 반환 할 항목의 키입니다.</target>
        </trans-unit>
        <trans-unit id="8e743125121265e42aca612b4ad4320cba650c60" translate="yes" xml:space="preserve">
          <source>The key of the record to be deleted, or an &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt; to delete all records with keys in range.</source>
          <target state="translated">삭제할 레코드의 키 또는 범위에 키가있는 모든 레코드를 삭제 하는 &lt;a href=&quot;../idbkeyrange&quot;&gt; &lt;code&gt;IDBKeyRange&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="36621c09eecc06761cbf034dbf2e1364e45c1975" translate="yes" xml:space="preserve">
          <source>The key or key range provided contains an invalid key or is null.</source>
          <target state="translated">제공된 키 또는 키 범위에 유효하지 않은 키가 있거나 널입니다.</target>
        </trans-unit>
        <trans-unit id="5469e34fb81e65f021a705f22386fe5d2d22c0b5" translate="yes" xml:space="preserve">
          <source>The key or key range provided contains an invalid key.</source>
          <target state="translated">제공된 키 또는 키 범위에 유효하지 않은 키가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d94fa87b9cd3f44b1cd4de7b5f7ab503a505876" translate="yes" xml:space="preserve">
          <source>The key or key range that identifies the record to be counted.</source>
          <target state="translated">계산할 레코드를 식별하는 키 또는 키 범위입니다.</target>
        </trans-unit>
        <trans-unit id="bccb616f056dc7cd3fe50b9d7cf455a16187b2c6" translate="yes" xml:space="preserve">
          <source>The key or key range that identifies the record to be retrieved.</source>
          <target state="translated">검색 할 레코드를 식별하는 키 또는 키 범위입니다.</target>
        </trans-unit>
        <trans-unit id="2688e8757b682681e72208df33c54ad3285da191" translate="yes" xml:space="preserve">
          <source>The key parameter may have any of the following conditions:</source>
          <target state="translated">키 매개 변수는 다음 조건 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="867a8ea3be0506e9509bb10dc676ea2f56df51ae" translate="yes" xml:space="preserve">
          <source>The key parameter was provided but does not contain a valid key.</source>
          <target state="translated">키 매개 변수가 제공되었지만 유효한 키를 포함하지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="e42629fcd872de243cb3908c73e213a0e269aad3" translate="yes" xml:space="preserve">
          <source>The key path for the index to use. Note that it is possible to create an index with an empty &lt;code&gt;keyPath&lt;/code&gt;, and also to pass in a sequence (array) as a &lt;code&gt;keyPath&lt;/code&gt;.</source>
          <target state="translated">사용할 인덱스의 키 경로입니다. 이 빈으로 인덱스를 작성하는 것이 가능하다 &lt;code&gt;keyPath&lt;/code&gt; , 또한 같은 서열 (배열)에 전달하는 &lt;code&gt;keyPath&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a9b765cfcdb4ca0356039bb9aebc8b845126d242" translate="yes" xml:space="preserve">
          <source>The key path of the current index is logged to the console: it should be returned as &lt;code&gt;lName&lt;/code&gt;.</source>
          <target state="translated">현재 색인의 키 경로가 콘솔에 로그됩니다 . &lt;code&gt;lName&lt;/code&gt; 으로 리턴되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="151e23165d553ba4ff3ecc0a0349dbe861efb206" translate="yes" xml:space="preserve">
          <source>The key path used by the new index.</source>
          <target state="translated">새 인덱스에서 사용하는 키 경로입니다.</target>
        </trans-unit>
        <trans-unit id="361a2fde03ec7860c0bc7c8d8b89dd0fdd31282a" translate="yes" xml:space="preserve">
          <source>The key range to be queried. If a single valid key is passed, this will default to a range containing only that key. If nothing is passed, this will default to a key range that selects all the records in this object store.</source>
          <target state="translated">쿼리 할 키 범위입니다. 유효한 단일 키가 전달되면 기본적으로 해당 키만 포함 된 범위로 설정됩니다. 아무것도 전달되지 않으면 기본적으로이 객체 저장소의 모든 레코드를 선택하는 키 범위로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="67daf28bdc41bbc759694518b484a008fc29e251" translate="yes" xml:space="preserve">
          <source>The key range to use as the cursor's range.</source>
          <target state="translated">커서 범위로 사용할 키 범위입니다.</target>
        </trans-unit>
        <trans-unit id="af33071c7b4e2359c4c00ff74c68b1babd5d82fd" translate="yes" xml:space="preserve">
          <source>The key that identifies the record to be retrieved.</source>
          <target state="translated">검색 할 레코드를 식별하는 키입니다.</target>
        </trans-unit>
        <trans-unit id="6b4b46b53d9839db99a9425a11064ea9909b7ee7" translate="yes" xml:space="preserve">
          <source>The key to be used to identify the record.</source>
          <target state="translated">레코드를 식별하는 데 사용되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="1fdf6e9c95d583e5e0876a5868e648cbfc84c1b6" translate="yes" xml:space="preserve">
          <source>The key to position the cursor at.</source>
          <target state="translated">커서를 놓을 키입니다.</target>
        </trans-unit>
        <trans-unit id="c682fc397e753d1c0d868d1c003d23412ed998cb" translate="yes" xml:space="preserve">
          <source>The key to use to identify the record. If unspecified, it results to null.</source>
          <target state="translated">레코드를 식별하는 데 사용되는 키입니다. 지정하지 않으면 null이됩니다.</target>
        </trans-unit>
        <trans-unit id="30075c2a6927cfea55a7e4d8986e1253d1981fde" translate="yes" xml:space="preserve">
          <source>The key to use to identify the record. If unspecified, it results to null. If the object store has a key generator (e.g. autoincrement) the key of the object must be passed in to update the object.</source>
          <target state="translated">레코드를 식별하는 데 사용되는 키입니다. 지정하지 않으면 null이됩니다. 객체 저장소에 키 생성기 (예 : 자동 증분)가있는 경우 객체를 업데이트하려면 객체의 키를 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="493cf1d1e74b75f78372abc1912fe52be61208c4" translate="yes" xml:space="preserve">
          <source>The key to which to move the cursor's position.</source>
          <target state="translated">커서 위치를 이동할 키입니다.</target>
        </trans-unit>
        <trans-unit id="b3bad5a1e956a0e4867df06685c0d2e87567135f" translate="yes" xml:space="preserve">
          <source>The key was a button on a game controller or a joystick on a mobile device.</source>
          <target state="translated">열쇠는 게임 컨트롤러의 버튼이거나 모바일 장치의 조이스틱이었습니다.</target>
        </trans-unit>
        <trans-unit id="cc57735dfcc679de2c5685a62b981f145801bc35" translate="yes" xml:space="preserve">
          <source>The key was on a mobile device; this can be on either a physical keypad or a virtual keyboard.</source>
          <target state="translated">열쇠는 휴대 기기에있었습니다. 이것은 실제 키패드 또는 가상 키보드에있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="40527e4fceb3e2126b2c515e200b6cf73051521c" translate="yes" xml:space="preserve">
          <source>The key was on the numeric keypad, or has a virtual key code that corresponds to the numeric keypad.</source>
          <target state="translated">키가 숫자 키패드에 있거나 숫자 키패드에 해당하는 가상 키 코드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d24c02cba586837216f3b2068b4e2937fc5de0f8" translate="yes" xml:space="preserve">
          <source>The key was the left-hand version of the key; for example, the left-hand</source>
          <target state="translated">키는 왼쪽 버전이었습니다. 예를 들어, 왼쪽</target>
        </trans-unit>
        <trans-unit id="e5a9032c9d30fc7148705d2f2591409eec53addf" translate="yes" xml:space="preserve">
          <source>The key was the right-hand version of the key; for example, the right-hand</source>
          <target state="translated">열쇠는 열쇠의 오른쪽 버전이었습니다. 예를 들어, 오른손</target>
        </trans-unit>
        <trans-unit id="1270c174b220e24a3377e4ba802e78a3a9be3dff" translate="yes" xml:space="preserve">
          <source>The key whose value is changing as a result of this event.</source>
          <target state="translated">이 이벤트의 결과로 값이 변경되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="7192b4a1edb91d4b777660c729182dd1560ada81" translate="yes" xml:space="preserve">
          <source>The key whose value you want returned</source>
          <target state="translated">값을 반환하려는 키</target>
        </trans-unit>
        <trans-unit id="adfb14ab21961c3042507b76d9f886f75c9c8318" translate="yes" xml:space="preserve">
          <source>The key whose value you want returned.</source>
          <target state="translated">값을 반환하려는 키입니다.</target>
        </trans-unit>
        <trans-unit id="b5f93027642b2967f7ba552cb5a6794d0446bf37" translate="yes" xml:space="preserve">
          <source>The key's new value.</source>
          <target state="translated">키의 새로운 가치.</target>
        </trans-unit>
        <trans-unit id="bcb57f63776a7d4a6c9afed5f91254aadbad8b98" translate="yes" xml:space="preserve">
          <source>The key's old value.</source>
          <target state="translated">키의 이전 값.</target>
        </trans-unit>
        <trans-unit id="7f76c6b2c5bda1e950d51d378999359849f255f5" translate="yes" xml:space="preserve">
          <source>The keyboard</source>
          <target state="translated">키보드</target>
        </trans-unit>
        <trans-unit id="785d40c49ae7d183fa7a21b102146104261dc8e8" translate="yes" xml:space="preserve">
          <source>The keyframeEffect is &lt;strong&gt;accumulated&lt;/strong&gt; on to the underlying value: &lt;code&gt;blur(5)&lt;/code&gt;.</source>
          <target state="translated">keyframeEffect는 기본 값인 &lt;code&gt;blur(5)&lt;/code&gt; 에 &lt;strong&gt;누적&lt;/strong&gt; 됩니다 .</target>
        </trans-unit>
        <trans-unit id="94f16f5a41187e1166716ffaebeac3bd28482ca2" translate="yes" xml:space="preserve">
          <source>The keypress event &lt;strong&gt;should&lt;/strong&gt; be raised when the user presses a key on the keyboard. However, not all browsers fire keypress events for certain keys.</source>
          <target state="translated">사용자가 키보드에서 키를 누르면 키 누르기 이벤트 &lt;strong&gt;가&lt;/strong&gt; 발생 &lt;strong&gt;해야&lt;/strong&gt; 합니다. 그러나 모든 브라우저가 특정 키에 대해 키 누르기 이벤트를 발생시키는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="cbf8e170c7f694cba63b8fa37d8f9d2871be0083" translate="yes" xml:space="preserve">
          <source>The keyup event is raised when the user releases a key that's been pressed.</source>
          <target state="translated">사용자가 누른 키를 놓으면 키업 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b55d97857332acbb459f32cabcf215ae7557960e" translate="yes" xml:space="preserve">
          <source>The kind of change that took place (either a change to the list of children or a change to an attribute) is detected by looking at the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord/type&quot;&gt;&lt;code&gt;mutation.type&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord/type&quot;&gt; &lt;code&gt;mutation.type&lt;/code&gt; &lt;/a&gt; 속성 을 보면 발생한 변경 종류 (자식 목록 변경 또는 특성 변경)가 감지됩니다 .</target>
        </trans-unit>
        <trans-unit id="5c48a2ceab27ce3680069083dc2cbd28009ca936" translate="yes" xml:space="preserve">
          <source>The kinds available for audio tracks are:</source>
          <target state="translated">오디오 트랙에 사용할 수있는 종류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d53bb75ade94ed31212d22e391697e1ff2a3679f" translate="yes" xml:space="preserve">
          <source>The kinds available for video tracks are:</source>
          <target state="translated">비디오 트랙에 사용할 수있는 종류는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7b361bd7e0d5d74ac8813cc9735af5840eca145c" translate="yes" xml:space="preserve">
          <source>The label and/or protocol string is too long; these cannot be longer than 65,535 bytes (bytes, rather than characters).</source>
          <target state="translated">레이블 및 / 또는 프로토콜 문자열이 너무 깁니다. 65,535 바이트 (문자가 아닌 바이트)를 초과 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2320addd9492913e5914aec07c23611ab7bc6d67" translate="yes" xml:space="preserve">
          <source>The language code of the notification as specified in the constructor's &lt;code&gt;options&lt;/code&gt; parameter.</source>
          <target state="translated">생성자의 &lt;code&gt;options&lt;/code&gt; 매개 변수에 지정된 알림의 언어 코드입니다 .</target>
        </trans-unit>
        <trans-unit id="4bc1c1f724790abf32447f656dfb92df32bd125f" translate="yes" xml:space="preserve">
          <source>The language code returned by this property is defined in the &lt;a href=&quot;https://www.ietf.org/rfc/bcp/bcp47.txt&quot;&gt;&lt;em&gt;Tags for Identifying Languages (BCP47)&lt;/em&gt;&lt;/a&gt; IETF document. Common examples include &quot;en&quot; for English, &quot;ja&quot; for Japanese, &quot;es&quot; for Spanish and so on. The default value of this attribute is &lt;code&gt;unknown&lt;/code&gt;. Note that this attribute, though valid at the individual element level described here, is most often specified for the root element of the document.</source>
          <target state="translated">이 특성에 의해 리턴되는 언어 코드는 언어 &lt;a href=&quot;https://www.ietf.org/rfc/bcp/bcp47.txt&quot;&gt;&lt;em&gt;식별 태그 (BCP47)&lt;/em&gt;&lt;/a&gt; IETF 문서에 정의되어 있습니다. 일반적인 예에는 영어의 경우 &quot;en&quot;, 일본어의 경우 &quot;ja&quot;, 스페인어의 경우 &quot;es&quot;등이 있습니다. 이 속성의 기본값은 &lt;code&gt;unknown&lt;/code&gt; . 이 속성은 여기에 설명 된 개별 요소 레벨에서 유효하지만 문서의 루트 요소에 대해 가장 자주 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="4987e96e6986297fb2f725f49d7c23b05097dbf0" translate="yes" xml:space="preserve">
          <source>The language itself is specified using a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing a &lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47 language tag&lt;/a&gt;. See the Sitepoint &lt;a href=&quot;http://www.sitepoint.com/web-foundations/iso-2-letter-language-codes/&quot;&gt;ISO 2 letter language codes&lt;/a&gt; page for a simple reference.</source>
          <target state="translated">언어 자체는 &lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47 언어 태그를&lt;/a&gt; 나타내는 &lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; 을&lt;/a&gt; 사용하여 지정 됩니다 . 간단한 참조 는 Sitepoint &lt;a href=&quot;http://www.sitepoint.com/web-foundations/iso-2-letter-language-codes/&quot;&gt;ISO 2 문자 언어 코드&lt;/a&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a8e4087ba337405b3a9b453774b84a0685fedf98" translate="yes" xml:space="preserve">
          <source>The language was not supported.</source>
          <target state="translated">언어가 지원되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="b0b07dd7d614eeb60bd3cf2fd1aa603997a5de3e" translate="yes" xml:space="preserve">
          <source>The last bit of code adds a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event on the stop button using &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">코드의 마지막 비트는 &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;addEventListener()&lt;/code&gt; &lt;/a&gt; 사용하여 중지 버튼 에서 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; 이벤트에 대한 핸들러를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="5b066a32955a10ad46e892f98de6f1d37f7ec635" translate="yes" xml:space="preserve">
          <source>The last box has thresholds each 25%.</source>
          <target state="translated">마지막 상자에는 각 25 %의 임계 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="79033c5a78365c5cdff3b580d1a7e54abdb7ecd0" translate="yes" xml:space="preserve">
          <source>The last candidate to be signaled this way by the remote peer will be a special candidate denoting end-of-candidates. Out of interest, end-of-candidates may be manually indicated as follows:</source>
          <target state="translated">원격 피어가이 방법으로 신호를 보낸 마지막 후보는 후보자 끝을 나타내는 특수 후보가됩니다. 관심이없는 후보자는 다음과 같이 수동으로 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d87f88141eadb5bdabe7b1e1d4e09d8f17dbba8" translate="yes" xml:space="preserve">
          <source>The last color stop in each of the four gradients uses a fully transparent color. If you want to have a nice transition from this to the previous color stop, both colors should be equal. This isn't very obvious from the code because it uses two different CSS color methods as a demonstration, but in the first gradient &lt;code&gt;#019F62 = rgba(1,159,98,1)&lt;/code&gt;.</source>
          <target state="translated">네 가지 그라디언트 각각의 마지막 색상 정지 점은 완전히 투명한 색상을 사용합니다. 이 색상을 이전 색상 정지 점으로 멋지게 전환하려면 두 색상이 같아야합니다. 이것은 두 가지 CSS 색상 메소드를 데모로 사용하기 때문에 코드에서 분명하지 않지만 첫 번째 그라디언트 &lt;code&gt;#019F62 = rgba(1,159,98,1)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d20b5925dc805c0f499ab58420f0ed328ac07175" translate="yes" xml:space="preserve">
          <source>The last keyframe says that the animation's final frame should draw the animation rotated 90&amp;deg; to the right from its original orientation.</source>
          <target state="translated">마지막 키 프레임은 애니메이션의 마지막 프레임이 원래 방향에서 오른쪽으로 90 &amp;deg; 회전 된 애니메이션을 그려야한다고 말합니다.</target>
        </trans-unit>
        <trans-unit id="cb70956ca1253ba3077f035042b417412983bf93" translate="yes" xml:space="preserve">
          <source>The last line contained in this function is a &lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/code&gt;&lt;/a&gt; call, which runs the &lt;code&gt;reportGamepads()&lt;/code&gt; function after a 1 second delay. Why do we need to do this? First of all, VR controllers will only be ready after their associated VR headset is active, so we need to invoke this after &lt;code&gt;getVRDisplays()&lt;/code&gt; has been called and returned the display information. Second, the Gamepad API is much older than the WebVR API, and not promise-based. As you'll see later, the &lt;code&gt;getGamepads()&lt;/code&gt; method is synchronous, and just returns the &lt;code&gt;Gamepad&lt;/code&gt; objects immediately &amp;mdash; it doesn't wait for the controller to be ready to report information. Unless you wait for a little while, returned information may not be accurate (at least, this is what we found in our tests).</source>
          <target state="translated">이 함수에 포함 된 마지막 줄은 &lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/code&gt; &lt;/a&gt; 호출이며 1 초 지연 후 &lt;code&gt;reportGamepads()&lt;/code&gt; 함수 를 실행합니다 . 왜 이렇게해야합니까? 우선 VR 컨트롤러는 연결된 VR 헤드셋이 활성화 된 후에 만 ​​준비되므로 &lt;code&gt;getVRDisplays()&lt;/code&gt; 가 호출되고 디스플레이 정보가 반환 된 후에 이를 호출해야합니다 . 둘째, 게임 패드 API는 약속 기반이 아닌 WebVR API보다 훨씬 오래되었습니다. 나중에 볼 수 있듯이 &lt;code&gt;getGamepads()&lt;/code&gt; 메서드는 동기식이며 &lt;code&gt;Gamepad&lt;/code&gt; 만 반환합니다.즉시 개체 &amp;mdash; 컨트롤러가 정보를보고 할 준비가 될 때까지 기다리지 않습니다. 잠시 기다리지 않으면 반환 된 정보가 정확하지 않을 수 있습니다 (적어도 테스트에서 찾은 것임).</target>
        </trans-unit>
        <trans-unit id="7d599ed7b8a42f11652d468a0d232ab7c33dc2e5" translate="yes" xml:space="preserve">
          <source>The last line could be simplified to:</source>
          <target state="translated">마지막 줄은 다음과 같이 단순화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d77e50ae88c50271c2cb28136fc36f82e901256" translate="yes" xml:space="preserve">
          <source>The last of three properties that declare the USB protocol version supported by the device.</source>
          <target state="translated">장치가 지원하는 USB 프로토콜 버전을 선언하는 세 가지 속성 중 마지막.</target>
        </trans-unit>
        <trans-unit id="34baddfe12a5a5f50b24934516856a87dbc3b0a2" translate="yes" xml:space="preserve">
          <source>The last part of the code simply updates the &lt;code&gt;pitch&lt;/code&gt;/&lt;code&gt;rate&lt;/code&gt; values displayed in the UI, each time the slider positions are moved.</source>
          <target state="translated">코드의 마지막 부분은 슬라이더 위치가 움직일 때마다 UI에 표시 되는 &lt;code&gt;pitch&lt;/code&gt; / &lt;code&gt;rate&lt;/code&gt; 값을 단순히 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="ec856fb858019878d9f8ced26d4113caf7988f3a" translate="yes" xml:space="preserve">
          <source>The last part of the rendering loop involves us calling &lt;a href=&quot;../vrdisplay/submitframe&quot;&gt;&lt;code&gt;VRDisplay.submitFrame()&lt;/code&gt;&lt;/a&gt; &amp;mdash; now all the work has been done and we've rendered the display on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;, this method then submits the frame to the VR display so it is displayed on there as well.</source>
          <target state="translated">렌더링 루프의 마지막 부분은 &lt;a href=&quot;../vrdisplay/submitframe&quot;&gt; &lt;code&gt;VRDisplay.submitFrame()&lt;/code&gt; &lt;/a&gt; 호출하는 것과 관련이 있습니다. 이제 모든 작업이 완료되었으며 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 에 디스플레이를 렌더링 한 다음이 메서드는 프레임을 VR 디스플레이에 제출하여 표시되도록합니다. 거기에.</target>
        </trans-unit>
        <trans-unit id="9195c9bfab4b64ce7140326bf3e1629cbed43290" translate="yes" xml:space="preserve">
          <source>The last significant piece of the puzzle: code that displays, for the user's reference, a list of the constrainable properties which their browser supports. Each property is a link to its documentation on MDN for the user's convenience. See the &lt;a href=&quot;../mediadevices/getsupportedconstraints#Example&quot;&gt;Example&lt;/a&gt; in &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;MediaDevices.getSupportedConstraints()&lt;/a&gt; for details on how this code works.</source>
          <target state="translated">퍼즐의 마지막 중요한 부분 : 사용자가 참조 할 수 있도록 브라우저가 지원하는 제한 가능한 속성 목록을 표시하는 코드입니다. 각 속성은 사용자 편의를 위해 MDN 관련 문서에 대한 링크입니다. 이 코드의 작동 방식에 대한 자세한 내용 은 &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;MediaDevices.getSupportedConstraints ()&lt;/a&gt; 의 &lt;a href=&quot;../mediadevices/getsupportedconstraints#Example&quot;&gt;예제&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d89deff0bfa30d0a2451b9502c471d2517af2c6c" translate="yes" xml:space="preserve">
          <source>The last step of filling in the w component can actually be accomplished with a simple matrix. Start with the identity matrix:</source>
          <target state="translated">w 컴포넌트를 채우는 마지막 단계는 실제로 간단한 매트릭스로 수행 할 수 있습니다. 항등 행렬로 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="067ca26823af4dc05a63d5370f6423572c52d1d6" translate="yes" xml:space="preserve">
          <source>The last thing the callback does is call &lt;code&gt;setTimeout()&lt;/code&gt; to schedule itself to be called again as soon as possible. In the real world, you would probably schedule this to be done based on knowledge of the video's frame rate.</source>
          <target state="translated">콜백이하는 마지막 작업은 &lt;code&gt;setTimeout()&lt;/code&gt; 을 호출하여 가능한 빨리 다시 호출되도록 예약하는 것입니다. 실제로는 비디오의 프레임 속도에 대한 지식을 바탕으로이 작업을 예약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f134de0e4ce37ae41c15bc1d8855fb82ffe86c05" translate="yes" xml:space="preserve">
          <source>The last thing to do here is set the &lt;code&gt;initialRun&lt;/code&gt; variable to &lt;code&gt;false&lt;/code&gt;, as the initial run is now over.</source>
          <target state="translated">마지막 실행은 이제 초기 실행이 &lt;code&gt;initialRun&lt;/code&gt; 변수를 &lt;code&gt;false&lt;/code&gt; 로 설정하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="dc25d4ee0d1e230ce2778ef0b95f0e68cfa9d621" translate="yes" xml:space="preserve">
          <source>The last thing we need to do in order to begin connecting our peers is to create a connection offer.</source>
          <target state="translated">동료를 연결하기 위해 마지막으로해야 할 일은 연결 제안을 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="75b96b94809c6003406d03408c5e923b24267fba" translate="yes" xml:space="preserve">
          <source>The last two handlers are there to handle cases where speech was recognised that wasn't in the defined grammar, or an error occured. &lt;a href=&quot;../speechrecognition/onnomatch&quot;&gt;&lt;code&gt;SpeechRecognition.onnomatch&lt;/code&gt;&lt;/a&gt; seems to be supposed to handle the first case mentioned, although note that at the moment it doesn't seem to fire correctly in Firefox or Chrome; it just returns whatever was recognised anyway:</source>
          <target state="translated">마지막 두 핸들러는 정의 된 문법에없는 음성이 인식되거나 오류가 발생한 경우를 처리하기 위해 존재합니다. &lt;a href=&quot;../speechrecognition/onnomatch&quot;&gt; &lt;code&gt;SpeechRecognition.onnomatch&lt;/code&gt; &lt;/a&gt; 는 언급 된 첫 번째 사례를 처리하는 것으로 보이지만 현재 Firefox 또는 Chrome에서는 제대로 실행되지 않는 것 같습니다. 어쨌든 인식 된 것을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d4fbd2e17b097cdc2fc2bd3589cc6e2ce286eeb5" translate="yes" xml:space="preserve">
          <source>The last way is to generate your own sound, which can be done with either an &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; or by creating a buffer and populating it with your own data. Check out the &lt;a href=&quot;advanced_techniques&quot;&gt;tutorial here for creating your own instrument&lt;/a&gt; for information on creating sounds with oscillators and buffers.</source>
          <target state="translated">마지막 방법은 &lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt; 하거나 버퍼를 만들어 자신의 데이터 로 채울 수있는 자체 사운드 를 생성하는 것입니다. 오실레이터와 버퍼로 사운드를 만드는 방법에 대한 정보는 &lt;a href=&quot;advanced_techniques&quot;&gt;자체 악기 만들기에&lt;/a&gt; 대한 자습서를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="0df62567dddb9a61427aa37a6b9f83b2a0940019" translate="yes" xml:space="preserve">
          <source>The latest spec has updated this method to a promise-based syntax that works like this:</source>
          <target state="translated">최신 사양에서는이 방법을 다음과 같은 약속 기반 구문으로 업데이트했습니다.</target>
        </trans-unit>
        <trans-unit id="c112df114cea7aee58c85eec22260049a206b052" translate="yes" xml:space="preserve">
          <source>The left (&lt;code&gt;L&lt;/code&gt; and &lt;code&gt;SL&lt;/code&gt;), right (&lt;code&gt;R&lt;/code&gt; and &lt;code&gt;SR&lt;/code&gt;) and central channels are all mixed together. The surround channels are slightly attenuated and the regular lateral channels are power-compensated to make them count as a single channel by multiplying by &lt;code&gt;&amp;radic;2/2&lt;/code&gt;. The subwoofer (&lt;code&gt;LFE&lt;/code&gt;) channel is lost.</source>
          <target state="translated">왼쪽 ( &lt;code&gt;L&lt;/code&gt; 및 &lt;code&gt;SL&lt;/code&gt; ), 오른쪽 ( &lt;code&gt;R&lt;/code&gt; 및 &lt;code&gt;SR&lt;/code&gt; ) 및 중앙 채널이 모두 혼합되어 있습니다. 서라운드 채널은 약간 감쇠되며 일반 측면 채널은 &lt;code&gt;&amp;radic;2/2&lt;/code&gt; 를 곱하여 단일 채널로 계산되도록 전력 보상됩니다 . 서브 우퍼 ( &lt;code&gt;LFE&lt;/code&gt; ) 채널이 손실되었습니다.</target>
        </trans-unit>
        <trans-unit id="8b361aef24ec293ed9fdf21d200a82b14e7ebefb" translate="yes" xml:space="preserve">
          <source>The left offset of the bounds.</source>
          <target state="translated">경계의 왼쪽 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="3deffa6bdd6f1859714ee9f5419eb48e584052f7" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/windows/ms536956(v=vs.71)&quot;&gt;onpropertychange&lt;/a&gt;&lt;/code&gt; event can be used to create a living &lt;code&gt;classList&lt;/code&gt; mockup thanks to a &lt;code&gt;Element.prototype.className&lt;/code&gt; property that fires the specified event once it is changed.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/windows/ms536956(v=vs.71)&quot;&gt;onpropertychange&lt;/a&gt;&lt;/code&gt; 이벤트는 지정된 이벤트가 변경되면 발생 하는 &lt;code&gt;Element.prototype.className&lt;/code&gt; 속성으로 인해 살아있는 &lt;code&gt;classList&lt;/code&gt; 모형 을 만드는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="991ee95f476371686a49139b801d252cad4655db" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.navigation&lt;/code&gt; read-only property returns a &lt;a href=&quot;../performancenavigation&quot;&gt;&lt;code&gt;PerformanceNavigation&lt;/code&gt;&lt;/a&gt; object representing the type of navigation that occurs in the given browsing context, such as the number of redirections needed to fetch the resource.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.navigation&lt;/code&gt; 읽기 전용 속성 은 리소스를 가져 오는 데 필요한 리디렉션 수와 같이 지정된 탐색 컨텍스트에서 발생하는 탐색 유형을 나타내는 &lt;a href=&quot;../performancenavigation&quot;&gt; &lt;code&gt;PerformanceNavigation&lt;/code&gt; &lt;/a&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b669d6807ccf1cfbe482bbddfbc335eb55e21a3d" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.timing&lt;/code&gt; read-only property returns a &lt;a href=&quot;../performancetiming&quot;&gt;&lt;code&gt;PerformanceTiming&lt;/code&gt;&lt;/a&gt; object containing latency-related performance information.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.timing&lt;/code&gt; 읽기 전용 속성은 대기 시간 관련 성능 정보가 포함 된 &lt;a href=&quot;../performancetiming&quot;&gt; &lt;code&gt;PerformanceTiming&lt;/code&gt; &lt;/a&gt; 개체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="226101c19f1d7ea020442ab860991c2ced0375ce" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.redirectCount&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned short&lt;/code&gt; representing the number of REDIRECTs done before reaching the page.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.redirectCount&lt;/code&gt; 읽기 전용 속성 은 페이지에 도달하기 전에 수행 된 REDIRECT 수를 나타내는 &lt;code&gt;unsigned short&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1d7651c61cf6df6c99b779f1cb47c197f52e4637" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.type&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned short&lt;/code&gt; containing a constant describing how the navigation to this page was done. Possible values are:</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.type&lt;/code&gt; 읽기 전용 속성은 이 페이지 탐색 방법을 설명하는 상수를 포함 하는 &lt;code&gt;unsigned short&lt;/code&gt; 를 반환합니다 . 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7751a05a46cb461f6928cc01ccc6bfb41b3b59d0" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.connectEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the connection is opened network. If the transport layer reports an error and the connection establishment is started again, the last connection establisment end time is given. If a persistent connection is used, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;. A connection is considered as opened when all secure connection handshake, or SOCKS authentication, is terminated.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.connectEnd&lt;/code&gt; 읽기 전용 속성 은 연결이 네트워크에서 열리는 UNIX 에포크 이후의 순간 (밀리 초)을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환 합니다. 전송 계층에서 오류를보고하고 연결 설정이 다시 시작되면 마지막 연결 설정 종료 시간이 제공됩니다. 지속적 연결이 사용되는 경우 값은 &lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt; 와 동일합니다 . 모든 보안 연결 핸드 셰이크 또는 SOCKS 인증이 종료되면 연결이 열린 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="5e8518f5d3524cb6abc645f41c2a0b56e1cd3a61" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.connectStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the request to open a connection is sent to the network. If the transport layer reports an error and the connection establishment is started again, the last connection establisment start time is given. If a persistent connection is used, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.connectStart&lt;/code&gt; 읽기 전용 속성은 연결을 열기위한 요청이 네트워크로 전송되는 UNIX 에포크 이후의 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환 합니다. 전송 계층에서 오류를보고하고 연결 설정이 다시 시작되면 마지막 연결 설정 시작 시간이 제공됩니다. 지속적 연결이 사용되는 경우 값은 &lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="ac255ec52b31ad62e317bef3cb4616880f070f84" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domComplete&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the parser finished its work on the main document, that is when its &lt;a href=&quot;../document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'complete'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domComplete&lt;/code&gt; 는 읽기 전용 속성의 반환을 &lt;code&gt;unsigned long long&lt;/code&gt; 파서 그 때입니다 주 문서에 그 작업이 완료되면, 유닉스 시대 이후 밀리 초에, 순간을 나타내는 &lt;a href=&quot;../document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; 가&lt;/a&gt; 로 변경 &lt;code&gt;'complete'&lt;/code&gt; 하고, 해당 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f464d3a9b36a7555db972e109e729df0662b306a" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domContentLoadedEventEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in milliseconds since the UNIX epoch, right after all the scripts that need to be executed as soon as possible, in order or not, has been executed.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domContentLoadedEventEnd&lt;/code&gt; 읽기 전용 속성은 가능한 한 빨리, 순서대로 실행해야하는 모든 스크립트가 실행 된 직후 UNIX epoch 이후 밀리 초 단위를 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="118852e6cd5d77518b33a873ce86e3ef63d53f22" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domContentLoadedEventStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, right before the parser sent the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt;DOMContentLoaded&lt;/a&gt;&lt;/code&gt; event, that is right after all the scripts that need to be executed right after parsing has been executed.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domContentLoadedEventStart&lt;/code&gt; 읽기 전용 특성은 구문 분석기가 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt;DOMContentLoaded&lt;/a&gt;&lt;/code&gt; 이벤트를 전송하기 직전 , 즉 구문 분석 직후 실행해야하는 모든 스크립트 바로 다음에 유닉스 시대 이후의 순간 (밀리 초)을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 리턴합니다. 처형되었다.</target>
        </trans-unit>
        <trans-unit id="c7bf348d5e545c8dee00a32759e591a7412fc209" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domInteractive&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the parser finished its work on the main document, that is when its &lt;a href=&quot;../document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'interactive'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domInteractive&lt;/code&gt; 읽기 전용 속성은 파서가 주 문서에 대한 작업을 완료 한 후 (즉, &lt;a href=&quot;../document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;'interactive'&lt;/code&gt; 로 변경되고 UNIX epoch가 시작된 이후 몇 밀리 초 단위의 순간을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 해당 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="03dfd3ffba9e555ad75bac281e9a2e746728a5c4" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domLoading&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the parser started its work, that is when its &lt;a href=&quot;../document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'loading'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domLoading&lt;/code&gt; 읽기 전용 속성은 파서가 작업을 시작한 시점 (즉, &lt;a href=&quot;../document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;'loading'&lt;/code&gt; 으로 변경되고 해당 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; 이벤트가 발생 하는 시점 인 UNIX 신기원 이후의 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다. 던졌습니다.</target>
        </trans-unit>
        <trans-unit id="d608e73cb2b1f6a7e9fe499082775a5dd0b0d623" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domainLookupEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the domain lookup is finished. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domainLookupEnd&lt;/code&gt; 읽기 전용 속성 은 도메인 조회가 완료된 UNIX 에포크 이후의 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 지속적 연결이 사용되거나 정보가 캐시 또는 로컬 자원에 저장된 경우 값은 &lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="adf40546d2d607c3a1be0c577385207611bcc1ec" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domainLookupStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the domain lookup starts. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domainLookupStart&lt;/code&gt; 읽기 전용 속성 은 도메인 조회가 시작되는 UNIX 에포크 이후의 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환 합니다. 지속적 연결이 사용되거나 정보가 캐시 또는 로컬 자원에 저장된 경우 값은 &lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ee2a8b4fb6a44cb3f9127070711872c829f618bd" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.fetchStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the browser is ready to fetch the document using an HTTP request. This moment is &lt;em&gt;before&lt;/em&gt; the check to any application cache.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.fetchStart&lt;/code&gt; 읽기 전용 속성은 UNIX 에포크 (epoch) 이후 몇 밀리 초 단위로 브라우저가 HTTP 요청을 사용하여 문서를 페치 할 준비가 된 순간을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 리턴합니다 . 이 순간은 응용 프로그램 캐시를 확인 &lt;em&gt;하기 전&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cb673292bb1c1718569717750f71aa718fdfc0d4" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.loadEventEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event handler terminated, that is when the load event is completed. If this event has not yet been sent, or is not yet completed, it returns &lt;code&gt;0.&lt;/code&gt;</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.loadEventEnd&lt;/code&gt; 읽기 전용 속성은 UNIX 이벤트가 발생한 후 ( &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; 이벤트 핸들러가 종료 된 후, 즉로드 이벤트가 완료된 이후) 밀리 초 단위 로 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 이 이벤트가 아직 전송되지 않았거나 아직 완료되지 않은 경우 &lt;code&gt;0.&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d605e5d9b460554f7b34223da6b5c6fa81d776b2" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.loadEventStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event was sent for the current document. If this event has not yet been sent, it returns &lt;code&gt;0.&lt;/code&gt;</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.loadEventStart&lt;/code&gt; 읽기 전용 속성 은 현재 문서에 대해 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; 이벤트가 전송 된 시점 (UNIX epoch) 이후의 순간 (밀리 초)을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 이 이벤트가 아직 전송되지 않은 경우 &lt;code&gt;0.&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cb18e8242f4599f9e6e56706171236c04003fc27" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.navigationStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, right after the prompt for unload terminates on the previous document in the same browsing context. If there is no previous document, this value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.navigationStart&lt;/code&gt; 읽기 전용 속성 은 동일한 탐색 컨텍스트에서 이전 문서에서 언로드 프롬프트가 종료 된 직후 UNIX 에포크 이후의 순간 (밀리 초)을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 이전 문서가없는 경우이 값은 &lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="71ea8521182e56178fca35d3d97284c7e660d2c9" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.redirectEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the last HTTP redirect is completed, that is when the last byte of the HTTP response has been received. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.redirectEnd&lt;/code&gt; 읽기 전용 속성은 UNIX epoch 이후 마지막 HTTP 리디렉션이 완료된 후 즉 HTTP 응답의 마지막 바이트가 수신 된 시점을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 리디렉션이 없거나 리디렉션 중 하나의 원점이 동일하지 않은 경우 반환되는 값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="be97e9a3c9498cb11974bb502b92e931ff7d7ca2" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.redirectStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the first HTTP redirect starts. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.redirectStart&lt;/code&gt; 읽기 전용 속성은 UNIX 에포크 이후 첫 번째 HTTP 리디렉션이 시작된 순간 (밀리 초)을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환 합니다. 리디렉션이 없거나 리디렉션 중 하나의 원점이 동일하지 않은 경우 반환되는 값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c2ee882c39baa6766799112f8d4f188d261ec2df" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.requestStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the browser sent the request to obtain the actual document, from the server or from a cache. If the transport layer fails after the start of the request and the connection is reopened, this property will be set to the time corresponding to the new request.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.requestStart&lt;/code&gt; 읽기 전용 속성은 브라우저가 서버 또는 캐시에서 실제 문서를 얻기 위해 요청을 보낸 UNIX UNIX 시대 이후의 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환 합니다. 요청 시작 후 전송 계층이 실패하고 연결이 다시 열리면이 특성은 새 요청에 해당하는 시간으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="161423cb0f8696c0a1f22f2f2509456ff7852724" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.responseEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the browser received the last byte of the response, or when the connection is closed if this happened first, from the server from a cache or from a local resource.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.responseEnd&lt;/code&gt; 읽기 전용 속성은 UNIX 에포크 이후 브라우저가 응답의 마지막 바이트를 받았을 때 또는 이것이 서버에서 처음 발생한 경우 연결이 닫히는 순간 (밀리 초)을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환 합니다. 캐시 또는 로컬 리소스에서</target>
        </trans-unit>
        <trans-unit id="995636fd3adbd5e1e1bf4c159a6e0d6cecc105ee" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.responseStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment in time (in milliseconds since the UNIX epoch) when the browser received the first byte of the response from the server, cache, or local resource.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.responseStart&lt;/code&gt; 읽기 전용 특성은 브라우저가 서버, 캐시 또는 로컬 자원으로부터 응답의 첫 번째 바이트를 수신 한 시간 (UNIX epoch 이후 밀리 초)을 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="3391ab6e530362c3c546a8edb123c7074511744a" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.secureConnectionStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the secure connection handshake starts. If no such connection is requested, it returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.secureConnectionStart&lt;/code&gt; 읽기 전용 속성 은 보안 연결 핸드 셰이크가 시작되는 UNIX 에포크 이후의 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환 합니다. 이러한 연결이 요청되지 않으면 &lt;code&gt;0&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="e978baf26aacb3860584a49e53518cf8203dc79a" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.unloadEventEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event handler finishes. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.unloadEventEnd&lt;/code&gt; 읽기 전용 속성은 UNIX 에포크 이후 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; 이벤트 핸들러가 완료된 시점을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 이전 문서가 없거나 이전 문서 또는 필요한 리디렉션 중 하나의 출처가 동일하지 않은 경우 반환되는 값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1c346cfcad772624e21c3caae0f1ba82de16086e" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.unloadEventStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event has been thrown. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">레거시 &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.unloadEventStart&lt;/code&gt; 읽기 전용 속성은 UNIX 에포크 이후 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; 이벤트가 발생한 순간을 밀리 초 단위로 나타내는 &lt;code&gt;unsigned long long&lt;/code&gt; 반환합니다 . 이전 문서가 없거나 이전 문서 또는 필요한 리디렉션 중 하나의 출처가 동일하지 않은 경우 반환되는 값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a09c9e0ff5b7eff186935e496eb51661102e5db9" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;PerformanceNavigation&lt;/code&gt; interface represents information about how the navigation to the current document was done.</source>
          <target state="translated">레거시 &lt;code&gt;PerformanceNavigation&lt;/code&gt; 인터페이스는 현재 문서를 탐색하는 방법에 대한 정보를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="03cf84e2a1418f35c66f1abc2a0ea73dfbc1221b" translate="yes" xml:space="preserve">
          <source>The legacy miscelleanous encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16be'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16le'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;'x-user-defined'&lt;/code&gt;.</source>
          <target state="translated">레거시 miscelleanous 인코딩 : &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16be'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16le'&lt;/a&gt;&lt;/code&gt; , 및 &lt;code&gt;'x-user-defined'&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="107e2f36965d453dab08ad335ad94a668a4f286b" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Chinese (simplified) encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GBK&quot;&gt;'gbk'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GB_18030&quot;&gt;'gb18030'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/HZ_(character_encoding)&quot;&gt;'hz-gb-2312'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">레거시 멀티 바이트 중국어 (간체) 인코딩 : &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GBK&quot;&gt;'gbk'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GB_18030&quot;&gt;'gb18030'&lt;/a&gt;&lt;/code&gt; , 그리고 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/HZ_(character_encoding)&quot;&gt;'hz-gb-2312'&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6a8a5835a2e8a1f5ec7e27d5bae3f4d80218d0e9" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Chinese (traditional) encoding: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Big5&quot;&gt;'big5'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">레거시 멀티 바이트 중국어 (번체) 인코딩 : &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Big5&quot;&gt;'big5'&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5f451bd6ace68cc71d8226268b330cdb99242f9f" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Japanese encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-JP&quot;&gt;'euc-jp'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-JP&quot;&gt;'iso-2022-jp'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Shift%20JIS&quot;&gt;'shift-jis'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">레거시 멀티 바이트 일본어 인코딩 : &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-JP&quot;&gt;'euc-jp'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-JP&quot;&gt;'iso-2022-jp'&lt;/a&gt;&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Shift%20JIS&quot;&gt;'shift-jis'&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2776496780c85245ee819a70dbb614637574ce6" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Korean encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-KR&quot;&gt;'euc-kr'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-KR&quot;&gt;'iso-2022-kr'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">레거시 멀티 바이트 한국어 인코딩 : &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-KR&quot;&gt;'euc-kr'&lt;/a&gt;&lt;/code&gt; , 및 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-KR&quot;&gt;'iso-2022-kr'&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="992cfc9bc19b3fba8793b0bb64fa18ad6effc447" translate="yes" xml:space="preserve">
          <source>The legacy single-byte encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Code_page_866&quot;&gt;'ibm866'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-2&quot;&gt;'iso-8859-2'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-3&quot;&gt;'iso-8859-3'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-4&quot;&gt;'iso-8859-4'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-5&quot;&gt;'iso-8859-5'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-6&quot;&gt;'iso-8859-6'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-7&quot;&gt;'iso-8859-7'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-8&quot;&gt;'iso-8859-8'&lt;/a&gt;'&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO-8859-8-I&quot;&gt;'iso-8859-8i'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-10&quot;&gt;'iso-8859-10'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-13&quot;&gt;'iso-8859-13'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-14&quot;&gt;'iso-8859-14'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-15&quot;&gt;'iso-8859-15'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-16&quot;&gt;'iso-8859-16'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-R&quot;&gt;'koi8-r'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-U&quot;&gt;'koi8-u'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mac%20OS%20Roman&quot;&gt;'macintosh'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-874&quot;&gt;'windows-874'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1250&quot;&gt;'windows-1250'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1251&quot;&gt;'windows-1251'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1252&quot;&gt;'windows-1252'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1253&quot;&gt;'windows-1253'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1254&quot;&gt;'windows-1254'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1255&quot;&gt;'windows-1255'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1256&quot;&gt;'windows-1256'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1257&quot;&gt;'windows-1257'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1258&quot;&gt;'windows-1258'&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Macintosh%20Cyrillic%20encoding&quot;&gt;'x-mac-cyrillic'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">레거시 단일 바이트 인코딩 : &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Code_page_866&quot;&gt;'ibm866'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-2&quot;&gt;'iso-8859-2'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-3&quot;&gt;'iso-8859-3'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-4&quot;&gt;'iso-8859-4'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-5&quot;&gt;'iso-8859-5'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-6&quot;&gt;'iso-8859-6'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-7&quot;&gt;'iso-8859-7'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-8&quot;&gt;'iso-8859-8'&lt;/a&gt;'&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO-8859-8-I&quot;&gt;'iso-8859-8i'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-10&quot;&gt;'iso-8859-10'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-13&quot;&gt;'iso-8859-13'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-14&quot;&gt;'iso-8859-14'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-15&quot;&gt;'iso-8859-15'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-16&quot;&gt;'iso-8859-16'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-R&quot;&gt;'koi8-r'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-U&quot;&gt;'koi8-u'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mac%20OS%20Roman&quot;&gt;'macintosh'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-874&quot;&gt;'windows-874'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1250&quot;&gt;'windows-1250'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1251&quot;&gt;'windows-1251'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1252&quot;&gt;'windows-1252'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1253&quot;&gt;'windows-1253'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1254&quot;&gt;'windows-1254'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1255&quot;&gt;'windows-1255'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1256&quot;&gt;'windows-1256'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1257&quot;&gt;'windows-1257'&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1258&quot;&gt;'windows-1258'&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Macintosh%20Cyrillic%20encoding&quot;&gt;'x-mac-cyrillic'&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3573556a9ad431ddcfbdd8000f2d7338da0ca8fc" translate="yes" xml:space="preserve">
          <source>The length of time in milliseconds that the animation's effects will run. This is equal to the &lt;a href=&quot;../effecttiming/duration&quot;&gt;iteration duration&lt;/a&gt; multiplied by the &lt;a href=&quot;../effecttiming/iterations&quot;&gt;iteration count&lt;/a&gt;.</source>
          <target state="translated">애니메이션 효과가 실행될 시간 (밀리 초)입니다. &lt;a href=&quot;../effecttiming/iterations&quot;&gt;반복 횟수&lt;/a&gt; 에 반복 횟수를 곱한 &lt;a href=&quot;../effecttiming/duration&quot;&gt;반복&lt;/a&gt; 주기와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5862e03466770c37062a2f977ebc77f035c1474d" translate="yes" xml:space="preserve">
          <source>The length of time, in milliseconds, to wait between tones. The browser will enforce a minimum value of 30 ms (that is, if you specify a lower value, 30 ms will be used instead); the default is 70 ms.</source>
          <target state="translated">톤 사이에서 대기하는 시간 (밀리 초)입니다. 브라우저는 최소 30ms의 값을 적용합니다 (즉, 더 낮은 값을 지정하면 30ms가 대신 사용됨). 기본값은 70ms입니다.</target>
        </trans-unit>
        <trans-unit id="0111f2ae0e188a0206cb4c68143ee4ad23564f60" translate="yes" xml:space="preserve">
          <source>The letters A-D</source>
          <target state="translated">편지 AD</target>
        </trans-unit>
        <trans-unit id="62c01630e4e7a2c34fddf0b6ea92c9b52e9bb15b" translate="yes" xml:space="preserve">
          <source>The level of the ambient light in &lt;a href=&quot;https://en.wikipedia.org/wiki/lux&quot;&gt;lux&lt;/a&gt;.</source>
          <target state="translated">주변 광 레벨 ( &lt;a href=&quot;https://en.wikipedia.org/wiki/lux&quot;&gt;lux)&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5d20631ddcf8499c56ada461011dd7fb5e5aa65c" translate="yes" xml:space="preserve">
          <source>The lifetime of a service worker registration is beyond that of the &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; objects that represent them within the lifetime of their corresponding service worker clients. The browser maintains a persistent list of active &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; objects.</source>
          <target state="translated">서비스 워커 등록 의 수명은 해당 서비스 워커 클라이언트의 수명 내에서이를 나타내는 &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; 객체의 수명을 초과합니다 . 브라우저는 활성 &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; 개체 의 영구 목록을 유지 관리 합니다.</target>
        </trans-unit>
        <trans-unit id="45f0e24c51a82152e5c4cc0b26a57a9b47fb7fe9" translate="yes" xml:space="preserve">
          <source>The line &lt;code&gt;let [kind, type, direction] = device.kind.match(/(\w+)(input|output)/i);&lt;/code&gt; deserves special notice. This uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;destructuring assignment&lt;/a&gt; (a new feature of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/ECMAScript_6_support_in_Mozilla&quot;&gt;ECMAScript 6&lt;/a&gt;) to assign the values of the first three items in the array returned by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match&quot;&gt;&lt;code&gt;String.match()&lt;/code&gt;&lt;/a&gt; to the variables &lt;code&gt;kind&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, and &lt;code&gt;direction&lt;/code&gt;. We do this because the value of &lt;a href=&quot;../mediadeviceinfo/kind&quot;&gt;&lt;code&gt;MediaDeviceInfo.kind&lt;/code&gt;&lt;/a&gt; is a single string that includes both the media type and the direction the media flows, such as &quot;audioinput&quot; or &quot;videooutput&quot;. This line, then, pulls out the type (&quot;audio&quot; or &quot;video&quot;) and direction (&quot;input&quot; or &quot;output&quot;) so they can be used to construct the string displayed in the list.</source>
          <target state="translated">줄 &lt;code&gt;let [kind, type, direction] = device.kind.match(/(\w+)(input|output)/i);&lt;/code&gt; 특별한 통지가 필요합니다. 이것은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;Destructuring assignment&lt;/a&gt; ( &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/ECMAScript_6_support_in_Mozilla&quot;&gt;ECMAScript 6&lt;/a&gt; 의 새로운 기능 )를 사용하여 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match&quot;&gt; &lt;code&gt;String.match()&lt;/code&gt; &lt;/a&gt; 에 의해 반환 된 배열의 처음 세 항목 값을 &lt;code&gt;kind&lt;/code&gt; , &lt;code&gt;type&lt;/code&gt; 및 &lt;code&gt;direction&lt;/code&gt; 변수 에 할당합니다 . &lt;a href=&quot;../mediadeviceinfo/kind&quot;&gt; &lt;code&gt;MediaDeviceInfo.kind&lt;/code&gt; &lt;/a&gt; 의 값 때문에&quot;audioinput&quot;또는 &quot;videooutput&quot;과 같이 미디어 유형과 미디어가 흐르는 방향을 모두 포함하는 단일 문자열입니다. 그런 다음이 줄은 유형 ( &quot;audio&quot;또는 &quot;video&quot;)과 방향 ( &quot;input&quot;또는 &quot;output&quot;)을 가져 와서 목록에 표시된 문자열을 구성하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="477ed0b11b70ecb616e18cd2d328c9322fbe0907" translate="yes" xml:space="preserve">
          <source>The line begins at (30, 50) and ends at (150, 100).</source>
          <target state="translated">줄은 (30, 50)에서 시작하여 (150, 100)에서 끝납니다.</target>
        </trans-unit>
        <trans-unit id="37afa4f4a4e5a0440375bf5c79eeec6928c43daf" translate="yes" xml:space="preserve">
          <source>The line height is the height of the first line of the cue as it appears on the video</source>
          <target state="translated">라인 높이는 비디오에 나타나는 큐의 첫 번째 라인의 높이입니다</target>
        </trans-unit>
        <trans-unit id="a35b61b88bc9c4a13be7c851bb1aa48c22507f5f" translate="yes" xml:space="preserve">
          <source>The line number in the document or worker at which the violation occurred.</source>
          <target state="translated">위반이 발생한 문서 또는 작업자의 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="ef5b420f030b6e7986aba8ce5f7fdd36c3e3b8af" translate="yes" xml:space="preserve">
          <source>The line number of the script file on which the error occurred.</source>
          <target state="translated">오류가 발생한 스크립트 파일의 행 번호입니다.</target>
        </trans-unit>
        <trans-unit id="092a475fe70500fefe52960a23f4d3ec27b6a092" translate="yes" xml:space="preserve">
          <source>The line on the left uses the default &lt;code&gt;&quot;butt&quot;&lt;/code&gt; option. It's drawn completely flush with the guides. The second is set to use the &lt;code&gt;&quot;round&quot;&lt;/code&gt; option. This adds a semicircle to the end that has a radius half the width of the line. The line on the right uses the &lt;code&gt;&quot;square&quot;&lt;/code&gt; option. This adds a box with an equal width and half the height of the line thickness.</source>
          <target state="translated">왼쪽의 줄은 기본 &lt;code&gt;&quot;butt&quot;&lt;/code&gt; 옵션을 사용합니다. 가이드와 완전히 같은 높이로 그려져 있습니다. 두 번째는 &lt;code&gt;&quot;round&quot;&lt;/code&gt; 옵션 을 사용하도록 설정되어 있습니다 . 이렇게하면 선 너비의 절반 인 반지름을 가진 반원이 끝에 추가됩니다. 오른쪽 줄은 &lt;code&gt;&quot;square&quot;&lt;/code&gt; 옵션을 사용합니다 . 그러면 선 두께의 너비와 높이가 같은 상자가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b0645312db6f85fd07e3d592af78842c6105586d" translate="yes" xml:space="preserve">
          <source>The line on the left uses the default &lt;code&gt;butt&lt;/code&gt; option. You'll notice that it's drawn completely flush with the guides. The second is set to use the &lt;code&gt;round&lt;/code&gt; option. This adds a semicircle to the end that has a radius half the width of the line. The line on the right uses the &lt;code&gt;square&lt;/code&gt; option. This adds a box with an equal width and half the height of the line thickness.</source>
          <target state="translated">왼쪽의 줄은 기본 &lt;code&gt;butt&lt;/code&gt; 옵션을 사용합니다 . 가이드와 완전히 닿아 있음을 알 수 있습니다. 두 번째는 &lt;code&gt;round&lt;/code&gt; 옵션 을 사용하도록 설정되어 있습니다 . 이렇게하면 선 너비의 절반 인 반지름을 가진 반원이 끝에 추가됩니다. 오른쪽의 선은 &lt;code&gt;square&lt;/code&gt; 옵션을 사용합니다 . 그러면 선 두께의 너비와 높이가 같은 상자가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="13a263019ac0aaa3ee14c6b3a09d74fcc05aca0e" translate="yes" xml:space="preserve">
          <source>The line width is the thickness of the stroke centered on the given path. In other words, the area that's drawn extends to half the line width on either side of the path. Because canvas coordinates do not directly reference pixels, special care must be taken to obtain crisp horizontal and vertical lines.</source>
          <target state="translated">선 너비는 주어진 경로를 중심으로 한 획의 두께입니다. 즉, 그려진 영역이 경로의 양쪽에서 선 너비의 절반으로 확장됩니다. 캔버스 좌표는 픽셀을 직접 참조하지 않으므로 선명하고 수평선이 잘 보이도록 특별한주의를 기울여야합니다.</target>
        </trans-unit>
        <trans-unit id="7d4d358573d94c8aafa5daa3567d2132ed11770a" translate="yes" xml:space="preserve">
          <source>The lines are separated by semi-colons, just like in JavaScript.</source>
          <target state="translated">JavaScript와 마찬가지로 줄은 세미콜론으로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="02118de50ed60268754384b2c843ee4cf1c8e67e" translate="yes" xml:space="preserve">
          <source>The list of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTML/Supported_media_formats&quot;&gt;supported media formats&lt;/a&gt; varies from one browser to the other. You should either provide your video in a single format that all the relevant browsers supports, or provide multiple video sources in enough different formats that all the browsers you need to support are covered.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTML/Supported_media_formats&quot;&gt;지원되는 미디어 형식&lt;/a&gt; 목록은 브라우저마다 다릅니다. 모든 관련 브라우저가 지원하는 단일 형식으로 비디오를 제공하거나 지원해야하는 모든 브라우저가 다룰 수 있도록 충분히 다른 형식으로 여러 비디오 소스를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="e1693d38a2f7928031b482f2ef043dde59e03fc2" translate="yes" xml:space="preserve">
          <source>The list of available style sheet sets is constructed by enumerating all the style sheets available for the document, in the order in which they're listed in the &lt;a href=&quot;../documentorshadowroot/stylesheets&quot;&gt;&lt;code&gt;document.styleSheets&lt;/code&gt;&lt;/a&gt; attribute, adding the &lt;code&gt;title&lt;/code&gt; of each style sheet that has a title to the list. Duplicates are dropped from the list (using a case-sensitive comparison).</source>
          <target state="translated">사용 가능한 스타일 시트 세트 목록은 문서에 사용 가능한 모든 스타일 시트를 &lt;a href=&quot;../documentorshadowroot/stylesheets&quot;&gt; &lt;code&gt;document.styleSheets&lt;/code&gt; &lt;/a&gt; 속성에 나열된 순서대로 나열 하고 &lt;code&gt;title&lt;/code&gt; 이있는 각 스타일 시트의 제목을 목록에 추가하여 구성됩니다. . 대소 문자 구분 비교를 사용하여 목록에서 중복이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="d263f9f26ecf473c5a3d74ba8cf9500edc40b3e4" translate="yes" xml:space="preserve">
          <source>The list of constraints specified is empty, or has all constraints set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">지정된 제한 조건 목록이 비어 있거나 모든 제한 조건이 &lt;code&gt;false&lt;/code&gt; 로 설정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="72948574fa12a24463e3081733218f5291115e49" translate="yes" xml:space="preserve">
          <source>The list of properties available in the DOM from the style property is given on the &lt;a href=&quot;../css&quot;&gt;DOM CSS Properties List&lt;/a&gt; page.</source>
          <target state="translated">스타일 특성에서 DOM에 사용 가능한 &lt;a href=&quot;../css&quot;&gt;특성 목록&lt;/a&gt; 은 DOM CSS 특성 목록 페이지에 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bfba7ac40ca9fdf5c9d26ec20a2b75f900b9f06" translate="yes" xml:space="preserve">
          <source>The list of visibility ratio thresholds, &lt;code&gt;threshold&lt;/code&gt;, is constructed by the function &lt;code&gt;buildThresholdList()&lt;/code&gt;. The threshold list is built programmatically in this example since there are a number of them and the number is intended to be adjustable.</source>
          <target state="translated">가시성 비율 임계 값 인 &lt;code&gt;threshold&lt;/code&gt; 의 목록은 &lt;code&gt;buildThresholdList()&lt;/code&gt; 함수로 구성됩니다 . 임계 값 목록은이 예에서 프로그래밍 방식으로 작성되며 그 수는 많고 조정 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="06210b70a8536de4f71e03b381abdc28211268e5" translate="yes" xml:space="preserve">
          <source>The listener's position is described using right-hand Cartesian coordinates; its movement using a velocity vector and the direction the listener's head is pointing using two direction vectors: up and front. These respectively define the direction of the top of the listener's head, and the direction the listener's nose is pointing, and are at right angles to one another.</source>
          <target state="translated">청취자의 위치는 오른쪽 데카르트 좌표를 사용하여 설명됩니다. 속도 벡터를 사용한 움직임과 청취자의 머리가 두 방향 벡터를 사용하여 가리키는 방향 : 위와 앞. 이것들은 각각 청취자의 머리 위쪽 방향과 청취자의 코가 가리키는 방향을 정의하며 서로 직각을 이룹니다.</target>
        </trans-unit>
        <trans-unit id="d4640acdb58d1270750109ae28847b261ca9c88d" translate="yes" xml:space="preserve">
          <source>The local ICE layer calls your &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; event handler, when it needs you to transmit an ICE candidate to the other peer, through your signaling server. See &lt;a href=&quot;#Sending_ICE_candidates&quot;&gt;Sending ICE candidates&lt;/a&gt; for more information and to see the code for this example.</source>
          <target state="translated">로컬 ICE 계층은 신호 서버를 통해 다른 피어에게 ICE 후보를 전송해야 할 때 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; 이벤트 핸들러를 호출 합니다. 자세한 정보 및이 예제의 코드를 보려면 &lt;a href=&quot;#Sending_ICE_candidates&quot;&gt;ICE 후보 전송&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4fa8c69ec3a7daad8be107622d6157361df6e93c" translate="yes" xml:space="preserve">
          <source>The local candidates are placed in this list by the ICE agent prior to being delivered to the local client's code in an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; event so that the client can forward the candidates to the remote peer.</source>
          <target state="translated">로컬 후보는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; 이벤트 에서 로컬 클라이언트의 코드로 전달되기 전에 ICE 에이전트가이 목록에 배치 하므로 클라이언트는 후보를 원격 피어에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48939c0961945566e9ad37510e1ebc83a1bfd876" translate="yes" xml:space="preserve">
          <source>The local name of a node is that part of the node's qualified name that comes after the colon. Qualified names are typically used in XML as part of the namespace(s) of the particular XML documents. For example, in the qualified name &lt;code&gt;ecomm:partners&lt;/code&gt;, &lt;code&gt;partners&lt;/code&gt; is the local name and &lt;code&gt;ecomm&lt;/code&gt; is the prefix:</source>
          <target state="translated">노드의 로컬 이름은 콜론 다음에 오는 노드의 규정 된 이름 부분입니다. 정규화 된 이름은 일반적으로 XML에서 특정 XML 문서의 네임 스페이스 (들)의 일부로 사용됩니다. 예를 들어, 규정 된 이름 인 &lt;code&gt;ecomm:partners&lt;/code&gt; 에서 &lt;code&gt;partners&lt;/code&gt; 는 로컬 이름이고 &lt;code&gt;ecomm&lt;/code&gt; 은 접두어입니다.</target>
        </trans-unit>
        <trans-unit id="9894ff5ab94b599a4bd21fe23e5557558bbaa572" translate="yes" xml:space="preserve">
          <source>The local name of an attribute is the part of the attribute's qualified name that comes after the colon. Qualified names are typically used in XML as part of the namespace(s) of the particular XML documents.</source>
          <target state="translated">속성의 로컬 이름은 콜론 다음에 오는 속성의 정규화 된 이름의 일부입니다. 정규화 된 이름은 일반적으로 XML에서 특정 XML 문서의 네임 스페이스 (들)의 일부로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f8ad3b0c9be1740e06da2c958db670ffc36f94f4" translate="yes" xml:space="preserve">
          <source>The local peer has called &lt;a href=&quot;rtcpeerconnection/setlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt;, passing in SDP representing an offer (usually created by calling &lt;a href=&quot;rtcpeerconnection/createoffer&quot;&gt;&lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt;&lt;/a&gt;), and the offer has been applied successfully.</source>
          <target state="translated">로컬 피어가 &lt;a href=&quot;rtcpeerconnection/setlocaldescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt; &lt;/a&gt; 을 호출하여 오퍼 (일반적으로 &lt;a href=&quot;rtcpeerconnection/createoffer&quot;&gt; &lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt; &lt;/a&gt; 를 호출하여 작성)를 나타내는 SDP를 전달 하고 오퍼가 성공적으로 적용되었습니다.</target>
        </trans-unit>
        <trans-unit id="73249b5dbeb86886c9f0e12966fe130c85f3e6c1" translate="yes" xml:space="preserve">
          <source>The local peer has called &lt;a href=&quot;setlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt;, passing in SDP representing an offer (usually created by calling &lt;a href=&quot;createoffer&quot;&gt;&lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt;&lt;/a&gt;), and the offer has been applied successfully.</source>
          <target state="translated">로컬 피어가 &lt;a href=&quot;setlocaldescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt; &lt;/a&gt; 을 호출하여 오퍼 (일반적으로 &lt;a href=&quot;createoffer&quot;&gt; &lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt; &lt;/a&gt; 를 호출하여 작성)를 나타내는 SDP를 전달 하고 오퍼가 성공적으로 적용되었습니다.</target>
        </trans-unit>
        <trans-unit id="9df847875183441e1cfcc8ad128184dadf03c816" translate="yes" xml:space="preserve">
          <source>The local peer's parameters are obtained during ICE signaling and delivered to the transport when the client calls &lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">로컬 피어의 매개 변수는 ICE 신호 처리 중에 획득되며 클라이언트가 &lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt; &lt;/a&gt; 호출 할 때 전송으로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="2a6b18930e5cc08c5493485efbaefddcc36d1e48" translate="yes" xml:space="preserve">
          <source>The location to navigate to.</source>
          <target state="translated">탐색 할 위치입니다.</target>
        </trans-unit>
        <trans-unit id="57860de82518d9575939e660631360117b717167" translate="yes" xml:space="preserve">
          <source>The lower bound of the key range (can be any type.)</source>
          <target state="translated">키 범위의 하한값 (모든 유형일 수 있음)</target>
        </trans-unit>
        <trans-unit id="8d66711d0d6e0828d7c46faee8a8803f353dd965" translate="yes" xml:space="preserve">
          <source>The lower key and upper key match and either of the bounds are open.</source>
          <target state="translated">하위 키와 상위 키가 일치하고 경계 중 하나가 열려 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4c7d1d301b02118147d2b782b6439c5782279db" translate="yes" xml:space="preserve">
          <source>The lower key is greater than the upper key.</source>
          <target state="translated">아래쪽 키가 위쪽 키보다 큽니다.</target>
        </trans-unit>
        <trans-unit id="c977243b46f7734a44196ead2f2e57feedf64b68" translate="yes" xml:space="preserve">
          <source>The lower limit of the frequencies getting a boost or an attenuation.</source>
          <target state="translated">부스트 또는 감쇠를 얻는 주파수의 하한.</target>
        </trans-unit>
        <trans-unit id="d9f3568bf0e3a79b60a4049714e5b835ed33b348" translate="yes" xml:space="preserve">
          <source>The lower or upper parameters were not passed a valid key.</source>
          <target state="translated">하위 또는 상위 매개 변수에 유효한 키가 전달되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="666282dd9013ac3fb3dacb0d78fcccbf911c5605" translate="yes" xml:space="preserve">
          <source>The lower value of the key range is one of the following:</source>
          <target state="translated">키 범위의 낮은 값은 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="174e1995c8be6a65a03fada9b4c3cc5b4dda69df" translate="yes" xml:space="preserve">
          <source>The lower-bound value is included in the key range.</source>
          <target state="translated">하한값이 키 범위에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4443343ffa1f9b20fb822eb5311d2e4a9c5b941b" translate="yes" xml:space="preserve">
          <source>The lower-bound value is not included in the key range.</source>
          <target state="translated">하한값은 키 범위에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c983310e34bf9a666dd86059ec7c5deff14a17d8" translate="yes" xml:space="preserve">
          <source>The magic of workers happens via the &lt;a href=&quot;../worker/postmessage&quot;&gt;&lt;code&gt;postMessage()&lt;/code&gt;&lt;/a&gt; method and the &lt;a href=&quot;../worker/onmessage&quot;&gt;&lt;code&gt;onmessage&lt;/code&gt;&lt;/a&gt; event handler. When you want to send a message to the worker, you post messages to it like this (&lt;a href=&quot;https://github.com/mdn/simple-web-worker/blob/gh-pages/main.js&quot;&gt;main.js&lt;/a&gt;):</source>
          <target state="translated">작업자의 마법은 &lt;a href=&quot;../worker/postmessage&quot;&gt; &lt;code&gt;postMessage()&lt;/code&gt; &lt;/a&gt; 메소드와 &lt;a href=&quot;../worker/onmessage&quot;&gt; &lt;code&gt;onmessage&lt;/code&gt; &lt;/a&gt; 이벤트 핸들러 를 통해 발생 합니다. 작업자에게 메시지를 보내려면 다음과 같이 메시지를 게시하십시오 ( &lt;a href=&quot;https://github.com/mdn/simple-web-worker/blob/gh-pages/main.js&quot;&gt;main.js&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c7ffa0ef7609d44507f1d7bddc1aa44fa62be967" translate="yes" xml:space="preserve">
          <source>The magnetometer is typically read in the &lt;a href=&quot;../sensor/onreading&quot;&gt;&lt;code&gt;Sensor.onreading&lt;/code&gt;&lt;/a&gt; event callback. In the example below this occurs sixty times a second.</source>
          <target state="translated">자력계는 일반적으로 &lt;a href=&quot;../sensor/onreading&quot;&gt; &lt;code&gt;Sensor.onreading&lt;/code&gt; &lt;/a&gt; 이벤트 콜백 에서 읽습니다 . 아래 예에서 이것은 초당 60 번 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dd8d69532b752303e53144e7a73e1ab89550b2a5" translate="yes" xml:space="preserve">
          <source>The magnetometer is typically read in the &lt;a href=&quot;sensor/onreading&quot;&gt;&lt;code&gt;Sensor.onreading&lt;/code&gt;&lt;/a&gt; event callback. In the example below this occurs sixty times a second.</source>
          <target state="translated">자력계는 일반적으로 &lt;a href=&quot;sensor/onreading&quot;&gt; &lt;code&gt;Sensor.onreading&lt;/code&gt; &lt;/a&gt; 이벤트 콜백 에서 읽습니다 . 아래 예에서 이것은 초당 60 번 발생합니다.</target>
        </trans-unit>
        <trans-unit id="704e038bce4362b9bdb846d5892e6de198e910dc" translate="yes" xml:space="preserve">
          <source>The main line of the previous clip space vertex shader contained this code:</source>
          <target state="translated">이전 클립 공간 정점 셰이더의 메인 라인에는 다음 코드가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="36f7febc49eb8185b489c7e9b8baf95cfa07b600" translate="yes" xml:space="preserve">
          <source>The main payment processing code is found in the &lt;code&gt;process()&lt;/code&gt; method, up next.</source>
          <target state="translated">기본 결제 처리 코드는 &lt;code&gt;process()&lt;/code&gt; 메소드 에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="802317ec842d239b2f3c7e031676c78705a6566d" translate="yes" xml:space="preserve">
          <source>The main program</source>
          <target state="translated">주요 프로그램</target>
        </trans-unit>
        <trans-unit id="c6c849adda2c882f0e0a0eb435b3972fbdf1a11d" translate="yes" xml:space="preserve">
          <source>The main program shares with us the attribute &lt;code&gt;aVertexPosition&lt;/code&gt;, which is the position of the vertex in whatever coordinate system it's using. We need to convert these values so that both components of the position are in the range -1.0 to 1.0. This can be done easily enough by multiplying by a scaling factor that's based on the context's aspect ratio. We'll see that computation shortly.</source>
          <target state="translated">메인 프로그램은 &lt;code&gt;aVertexPosition&lt;/code&gt; 속성을 공유 합니다. 이것은 사용하는 좌표계에서 정점의 위치입니다. 위치의 두 구성 요소가 모두 -1.0에서 1.0 사이가되도록이 값을 변환해야합니다. 컨텍스트의 종횡비를 기반으로 한 배율을 곱하면 쉽게 수행 할 수 있습니다. 우리는 그 계산을 곧 보게 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="d7a9d4e7965a253527c2e565484564736f74e116" translate="yes" xml:space="preserve">
          <source>The main scope that spawned the worker can send back information to the thread that spawned it using the &lt;a href=&quot;../worker/postmessage&quot;&gt;&lt;code&gt;Worker.postMessage&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">워커를 생성 한 기본 범위는 &lt;a href=&quot;../worker/postmessage&quot;&gt; &lt;code&gt;Worker.postMessage&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 스폰 된 스레드에 정보를 다시 보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1e79c1ddce9f81ca4e9dde371657740b90f9811f" translate="yes" xml:space="preserve">
          <source>The main steps to drag and drop are to define a &lt;em&gt;drop zone&lt;/em&gt; (i.e. a target element for the file drop) and to define event handlers for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; events. These steps are described below, including example code snippets. The full source code is available in &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/drag-and-drop&quot;&gt;MDN's drag-and-drop repository&lt;/a&gt; (pull requests and/or issues are welcome).</source>
          <target state="translated">끌어 놓기의 주요 단계는 &lt;em&gt;놓기 영역&lt;/em&gt; (예 : 파일 놓기의 대상 요소)을 정의하고 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; 이벤트에 대한 이벤트 핸들러를 정의하는 것 입니다. 이 단계는 코드 스 니펫 예제를 포함하여 아래에 설명되어 있습니다. 전체 소스 코드는 &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/drag-and-drop&quot;&gt;MDN의 끌어서 놓기 저장소&lt;/a&gt; 에서 사용할 수 있습니다 (풀 요청 및 / 또는 문제는 환영합니다).</target>
        </trans-unit>
        <trans-unit id="905bcb5547b24baec24797aaffcc7be56521f429" translate="yes" xml:space="preserve">
          <source>The main thing you &lt;em&gt;can't&lt;/em&gt; do in a Worker is directly affect the parent page. This includes manipulating the DOM and using that page's objects. You have to do it indirectly, by sending a message back to the main script via &lt;a href=&quot;../dedicatedworkerglobalscope/postmessage&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope.postMessage&lt;/code&gt;&lt;/a&gt;, then actioning the changes from there.</source>
          <target state="translated">Worker에서 할 &lt;em&gt;수없는&lt;/em&gt; 가장 중요한 것은 부모 페이지에 직접 영향을주는 것입니다. 여기에는 DOM 조작 및 해당 페이지의 개체 사용이 포함됩니다. &lt;a href=&quot;../dedicatedworkerglobalscope/postmessage&quot;&gt; &lt;code&gt;DedicatedWorkerGlobalScope.postMessage&lt;/code&gt; &lt;/a&gt; 를 통해 기본 스크립트로 메시지를 보낸 다음 변경 사항 을 조치하여 간접적으로 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="480d7f4cf58717bd86f63559acfa416a454d8461" translate="yes" xml:space="preserve">
          <source>The main thread of a Web browser is centered around its event loop. This code draws any pending updates to the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; currently being displayed, runs any JavaScript code the page needs to run, accepts events from input devices, and dispatches those events to the elements that should receive them. In addition, the event loop handles interactions with the operating system, updates to the browser's own user interface, and so forth. It's an extremely busy chunk of code, and your main JavaScript code may run right inside this thread along with all of this. Certainly most if not all code that is capable of making changes to the DOM is running in the main thread, since it's common for user interface changes to only be available to the main thread.</source>
          <target state="translated">웹 브라우저의 주요 스레드는 이벤트 루프를 중심으로합니다. 이 코드는 현재 표시된 &lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt; 대한 보류중인 업데이트를 가져오고 페이지를 실행하는 데 필요한 JavaScript 코드를 실행하고 입력 장치에서 이벤트를 수락 한 다음 해당 이벤트를 수신해야하는 요소로 해당 이벤트를 전달합니다. 또한 이벤트 루프는 운영 체제와의 상호 작용, 브라우저 자체의 사용자 인터페이스 업데이트 등을 처리합니다. 매우 바쁜 코드 덩어리이며 주요 JavaScript 코드는이 스레드와 함께이 스레드와 함께 실행될 수 있습니다. DOM을 변경할 수있는 모든 코드가 메인 스레드에서 실행되고있는 것은 아니지만 대부분은 사용자 인터페이스 변경이 메인 스레드에서만 가능하기 때문에 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="4ec4188ab91cf3d28a4c5a8c02bf5c380b30832c" translate="yes" xml:space="preserve">
          <source>The major version number of the device in a semantic versioning scheme.</source>
          <target state="translated">시맨틱 버전 관리 체계에서 장치의 주요 버전 번호입니다.</target>
        </trans-unit>
        <trans-unit id="07eb43421fb35163dda51a2b8120618054cfbfef" translate="yes" xml:space="preserve">
          <source>The manner in which these values are generated is not mandated by the specification, although it does make recommendations. You should not make any assumptions based on the value of &lt;code&gt;ssrc&lt;/code&gt; other than that any two objects with the same &lt;code&gt;ssrc&lt;/code&gt; value refer to the same source. See &lt;a href=&quot;https://tools.ietf.org/html/rfc3550#section-8&quot;&gt;RFC 3550, section 8&lt;/a&gt; for additional information about &lt;code&gt;ssrc&lt;/code&gt;.</source>
          <target state="translated">이러한 값이 생성되는 방식은 권장 사항을 제시하지만 사양에서 요구하지는 않습니다. 동일한 &lt;code&gt;ssrc&lt;/code&gt; 값을 가진 두 개의 객체가 동일한 소스를 참조 한다는 것 이외 의 &lt;code&gt;ssrc&lt;/code&gt; 의 값을 기준으로 어떤 가정도해서는 안됩니다 . &lt;code&gt;ssrc&lt;/code&gt; 에 대한 추가 정보는 &lt;a href=&quot;https://tools.ietf.org/html/rfc3550#section-8&quot;&gt;RFC 3550, 섹션 8&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ce3cd4b0e79e5ef9015a9209e1a15733ad9700b" translate="yes" xml:space="preserve">
          <source>The manufacturer-defined code that identifies a USB device.</source>
          <target state="translated">USB 장치를 식별하는 제조업체 정의 코드입니다.</target>
        </trans-unit>
        <trans-unit id="b4a768dec06feb43bb4ac5f220fda09ad49214d6" translate="yes" xml:space="preserve">
          <source>The manufacturer-defined name that identifies a USB device.</source>
          <target state="translated">USB 장치를 식별하는 제조업체 정의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c2fc170c6301b3e548a88034c34b076247d39032" translate="yes" xml:space="preserve">
          <source>The manufacturer-defined serial number for the specific USB device.</source>
          <target state="translated">특정 USB 장치에 대한 제조업체 정의 일련 번호입니다.</target>
        </trans-unit>
        <trans-unit id="6f82b6ab8d84d6d7fcc7b08e6abd8dd1c7f156ee" translate="yes" xml:space="preserve">
          <source>The marching ants effect is an animation technique often found in selection tools of computer graphics programs. It helps the user to distinguish the selection border from the image background by animating the border.</source>
          <target state="translated">행진하는 개미 효과는 컴퓨터 그래픽 프로그램의 선택 도구에서 흔히 볼 수있는 애니메이션 기법입니다. 사용자가 테두리에 애니메이션을 적용하여 선택 테두리를 이미지 배경과 구별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f6fee7a13e23b8b887faf6e6098d50fc04155dc" translate="yes" xml:space="preserve">
          <source>The matrix that represents this transformation. The matrix object is live, meaning that any changes made to the &lt;code&gt;SVGTransform&lt;/code&gt; object are immediately reflected in the matrix object and vice versa. In case the matrix object is changed directly (i.e., without using the methods on the &lt;code&gt;SVGTransform&lt;/code&gt; interface itself) then the type of the &lt;code&gt;SVGTransform&lt;/code&gt; changes to &lt;code&gt;SVG_TRANSFORM_MATRIX&lt;/code&gt;.</source>
          <target state="translated">이 변환을 나타내는 행렬입니다. 매트릭스 객체는 라이브이므로 &lt;code&gt;SVGTransform&lt;/code&gt; 객체 에 대한 모든 변경 사항 이 매트릭스 객체에 즉시 반영되고 그 반대도 마찬가지입니다. 경우 행렬 객체 (즉, 방법에 사용하지 않고 직접 변경 &lt;code&gt;SVGTransform&lt;/code&gt; 다음의 형식 자체 인터페이스) &lt;code&gt;SVGTransform&lt;/code&gt; 의 변경 &lt;code&gt;SVG_TRANSFORM_MATRIX&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="1af99f1e6713178d3348525f1edc3e9b9390778d" translate="yes" xml:space="preserve">
          <source>The max scope for a service worker is the location of the worker.</source>
          <target state="translated">서비스 근로자의 최대 범위는 근로자의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="d5dbc29fafe409fbba2094fdf23904a9804dfd5d" translate="yes" xml:space="preserve">
          <source>The maximum amount of time, in seconds, that the audio signal can be delayed by. Must be less than 180 seconds, and defaults to 1 second if not specified.</source>
          <target state="translated">오디오 신호가 지연 될 수있는 최대 시간 (초)입니다. 지정하지 않으면 180 초보다 작아야하며 기본값은 1 초입니다.</target>
        </trans-unit>
        <trans-unit id="adbd910933106246733b38e7def0ed875fefed16" translate="yes" xml:space="preserve">
          <source>The maximum browser storage space is dynamic &amp;mdash; it is based on your hard drive size. The &lt;strong&gt;global limit&lt;/strong&gt; is calculated as 50% of free disk space. In Firefox, an internal browser tool called the Quota Manager keeps track of how much disk space each origin is using up, and deletes data if necessary.</source>
          <target state="translated">최대 브라우저 저장 공간은 동적이며 하드 드라이브 크기를 기준으로합니다. &lt;strong&gt;글로벌 제한은&lt;/strong&gt; 사용 가능한 디스크 공간의 50 %로 계산됩니다. Firefox에서 Quota Manager라는 내부 브라우저 도구는 각 출처가 사용중인 디스크 공간을 추적하고 필요한 경우 데이터를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="95ff8f14af1f40f7276379908bf8b0418788b615" translate="yes" xml:space="preserve">
          <source>The maximum number of draw buffers.</source>
          <target state="translated">최대 드로우 버퍼 수입니다.</target>
        </trans-unit>
        <trans-unit id="1a47fcd06b07219a6677a63761ae3b44926bcf1c" translate="yes" xml:space="preserve">
          <source>The maximum number of entries possible in the vertex attribute list.</source>
          <target state="translated">꼭짓점 속성 목록에서 가능한 최대 항목 수입니다.</target>
        </trans-unit>
        <trans-unit id="6c834049227bbb93c02d8fe361e4d226ff4e61e9" translate="yes" xml:space="preserve">
          <source>The maximum number of framebuffer color attachment points.</source>
          <target state="translated">최대 프레임 버퍼 색상 부착 점 수입니다.</target>
        </trans-unit>
        <trans-unit id="e64d74b8a0e14810c00b9ce9bee12b0801b51055" translate="yes" xml:space="preserve">
          <source>The maximum number of milliseconds that attempts to transfer a message may take in unreliable mode. While this value is a 16-bit unsigned number, each user agent may clamp it to whatever maximum it deems appropriate. &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">메시지 전송을 시도하는 최대 시간 (밀리 초)은 신뢰할 수없는 모드가 될 수 있습니다. 이 값은 16 비트 부호없는 숫자이지만 각 사용자 에이전트는 적절하다고 생각되는 최대 값으로 고정 할 수 있습니다. &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dad7777d4717cb863ed50ef0e2cb6868d1f7fea7" translate="yes" xml:space="preserve">
          <source>The maximum number of pixels wide the text may be once rendered. If not specified, there is no limit to the width of the text. However, if this value is provided, the user agent will adjust the kerning, select a more horizontally condensed font (if one is available or can be generated without loss of quality), or scale down to a smaller font size in order to fit the text in the specified width.</source>
          <target state="translated">텍스트가 최대 너비 인 픽셀 수는 한 번 렌더링 될 수 있습니다. 지정하지 않으면 텍스트 너비에 제한이 없습니다. 그러나이 값이 제공되면 사용자 에이전트는 커닝을 조정하고,보다 수평 적으로 압축 된 글꼴을 선택하거나 (사용 가능한 경우 또는 품질의 손실없이 생성 할 수있는 경우) 작은 글꼴 크기로 축소하여 지정된 너비의 텍스트</target>
        </trans-unit>
        <trans-unit id="effbcabd51c9dae3b2e8645e1d142d0132027bde" translate="yes" xml:space="preserve">
          <source>The maximum number of times the browser will try to send a message before giving up, or &lt;code&gt;null&lt;/code&gt; if not set when &lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt;&lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt;&lt;/a&gt; was called. The default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">브라우저가 포기하기 전에 메시지를 보내려고 시도하는 최대 횟수 또는 &lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt; &lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt; &lt;/a&gt; 이 호출 될 때 설정되지 않은 경우 &lt;code&gt;null&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c262bd4ecd3a64741e39a167832c785b6c7bf5b5" translate="yes" xml:space="preserve">
          <source>The maximum number of times the user agent should attempt to retransmit a message which fails the first time in unreliable mode. While this value is a16-bit unsigned number, each user agent may clamp it to whatever maximum it deems appropriate. &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">사용자 에이전트가 신뢰할 수없는 모드에서 처음 실패한 메시지를 재전송하려고 시도하는 최대 횟수입니다. 이 값은 16 비트 부호없는 숫자이지만 각 사용자 에이전트는 적절하다고 생각되는 최대 값으로 고정 할 수 있습니다. &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e016f34e56112321999863e24b57d9c332d880e5" translate="yes" xml:space="preserve">
          <source>The maximum number of vertex attributes depends on the graphics card, and you can call &lt;code&gt;gl.getParameter(gl.MAX_VERTEX_ATTRIBS)&lt;/code&gt; to get this value. On high-end graphics cards, the maximum is 16, on lower-end graphics cards, the value will be lower.</source>
          <target state="translated">최대 정점 속성 수는 그래픽 카드에 따라 다르며 &lt;code&gt;gl.getParameter(gl.MAX_VERTEX_ATTRIBS)&lt;/code&gt; 를 호출 하여이 값을 얻을 수 있습니다. 고급 그래픽 카드의 경우 최대 값은 16이고, 고급 그래픽 카드의 경우 값이 낮아집니다.</target>
        </trans-unit>
        <trans-unit id="f21eb0eb3b402a71a47572c01ea1eabf8a6b51df" translate="yes" xml:space="preserve">
          <source>The maximum offset that the window can be scrolled to horizontally, that is the document width minus the viewport width.</source>
          <target state="translated">창을 가로로 스크롤 할 수있는 최대 오프셋, 즉 문서 너비에서 뷰포트 너비를 뺀 값입니다.</target>
        </trans-unit>
        <trans-unit id="05d035eddab5243ca794205f37eaecd0338441de" translate="yes" xml:space="preserve">
          <source>The maximum offset that the window can be scrolled to vertically (i.e., the document height minus the viewport height).</source>
          <target state="translated">창을 세로로 스크롤 할 수있는 최대 오프셋 (즉, 문서 높이에서 뷰포트 높이를 뺀 값)입니다.</target>
        </trans-unit>
        <trans-unit id="8bb2a591e4eb4c24fd95dfecea80fd249c6a1986" translate="yes" xml:space="preserve">
          <source>The maximum sensing distance the sensor is able to report, in centimeters.</source>
          <target state="translated">센서가보고 할 수있는 최대 감지 거리 (센티미터)입니다.</target>
        </trans-unit>
        <trans-unit id="252e11ffd05ab5c96123955476e7f066f7e44ec3" translate="yes" xml:space="preserve">
          <source>The maximum width the text may be once rendered. If not specified, there is no limit to the width of the text. However, if this value is provided, the user agent will adjust the kerning, select a more horizontally condensed font (if one is available or can be generated without loss of quality), or scale down to a smaller font size in order to fit the text in the specified width.</source>
          <target state="translated">텍스트가 한 번 렌더링 될 수있는 최대 너비입니다. 지정하지 않으면 텍스트 너비에 제한이 없습니다. 그러나이 값이 제공되면 사용자 에이전트는 커닝을 조정하고,보다 수평 적으로 압축 된 글꼴을 선택하거나 (사용 가능한 경우 또는 품질의 손실없이 생성 할 수있는 경우) 작은 글꼴 크기로 축소하여 지정된 너비의 텍스트</target>
        </trans-unit>
        <trans-unit id="1132fa61a29b2eaedc14d95e7932d887639fbc74" translate="yes" xml:space="preserve">
          <source>The meaning of the different parameters depending of the type of the filter (detune has the same meaning regardless, so isn't listed below)</source>
          <target state="translated">필터 유형에 따라 다른 매개 변수의 의미 (디튠은 관계없이 동일한 의미를 가지므로 아래에 나열되지 않음)</target>
        </trans-unit>
        <trans-unit id="0252ad21257f9e53deb267580ea418e2e71c3c2e" translate="yes" xml:space="preserve">
          <source>The mechanism by which data is stored in the database. The object store persistently holds records, which are key-value pairs. Records within an object store are sorted according to the &lt;em&gt;&lt;a href=&quot;#gloss_key&quot;&gt;keys&lt;/a&gt;&lt;/em&gt; in an ascending order.</source>
          <target state="translated">데이터베이스에 데이터가 저장되는 메커니즘입니다. 오브젝트 저장소는 키-값 쌍인 레코드를 지속적으로 보유합니다. 객체 저장소 내 레코드는 &lt;em&gt;&lt;a href=&quot;#gloss_key&quot;&gt;키&lt;/a&gt;&lt;/em&gt; 에 따라 오름차순으로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="dd8a62aa0c04a7621eb281c63a2aa75428708203" translate="yes" xml:space="preserve">
          <source>The media ID of the m-line associated with this transceiver. This association is established, when possible, whenever either a local or remote description is applied. This field is &lt;code&gt;null&lt;/code&gt; if neither a local or remote description has been applied, or if its associated m-line is rejected by either a remote offer or any answer.</source>
          <target state="translated">이 트랜시버와 연관된 m- 라인의 미디어 ID입니다. 이 연결은 가능하면 로컬 또는 원격 설명이 적용될 때마다 설정됩니다. 로컬 또는 원격 설명이 적용되지 않았거나 원격 제안 또는 응답으로 연관된 m-line이 거부 된 경우이 필드는 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="81a3274a31ed4a4f1f015ac6a8f1c7dc3db42b22" translate="yes" xml:space="preserve">
          <source>The media source (which may be specified as a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../mediasource&quot;&gt;&lt;code&gt;MediaSource&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, for example) doesn't represent a supported media format.</source>
          <target state="translated">미디어 소스 (예 : &lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../mediasource&quot;&gt; &lt;code&gt;MediaSource&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 로 지정 될 수 있음 )가 지원되는 미디어 형식을 나타내지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5f2a648297419ce869e8e95a69826bb154d31e40" translate="yes" xml:space="preserve">
          <source>The merchant code would look like this:</source>
          <target state="translated">판매자 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5c3183040e96411587800cc9203c3ac5c53d6756" translate="yes" xml:space="preserve">
          <source>The merchant&amp;mdash;either a person or an organization&amp;mdash;whose web site or app wishes to receive money through the Payment Request API.</source>
          <target state="translated">웹 사이트 또는 앱이 Payment Request API를 통해 돈을 받기를 원하는 판매자 (개인 또는 조직).</target>
        </trans-unit>
        <trans-unit id="6539481fabc8f536396f816755ac1f2d074fd520" translate="yes" xml:space="preserve">
          <source>The mere use of cryptography doesn't make your system secure. Security is a &lt;strong&gt;process&lt;/strong&gt; that constantly evaluates the risks a system incurs in its context of use. The context and the risks experienced evolve over time.</source>
          <target state="translated">암호화 기술 만 사용한다고해서 시스템이 안전하지는 않습니다. 보안은 시스템이 사용 환경에서 발생할 수있는 위험을 지속적으로 평가 하는 &lt;strong&gt;프로세스&lt;/strong&gt; 입니다. 경험과 상황에 따른 위험은 시간이 지남에 따라 진화합니다.</target>
        </trans-unit>
        <trans-unit id="f66900b23610bab381ac53f2de5cb0285f0eb3e6" translate="yes" xml:space="preserve">
          <source>The message being sent. For this initial port transfering this message could be an empty string but in this example it is set to &lt;code&gt;'init'&lt;/code&gt;.</source>
          <target state="translated">보내는 메시지입니다. 이 초기 포트 전송의 경우이 메시지는 빈 문자열 일 수 있지만이 예제에서는 &lt;code&gt;'init'&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="754314fd7f1670c82cfe8dc00183c744205e1d09" translate="yes" xml:space="preserve">
          <source>The message object passed into this function is converted into a JSON string by calling &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt;, then we call the WebSocket connection's &lt;a href=&quot;../websocket/send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; function to transmit the message to the server.</source>
          <target state="translated">이 함수에 전달 된 메시지 객체는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; &lt;/a&gt; 를 호출하여 JSON 문자열로 변환 된 다음 WebSocket 연결의 &lt;a href=&quot;../websocket/send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt; 함수를 호출 하여 메시지를 서버로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="62e86ba2df8ae85a50bdd76d659c9bed540e1ef6" translate="yes" xml:space="preserve">
          <source>The message to send to the service worker. This can be any &lt;a href=&quot;../web_workers_api/structured_clone_algorithm&quot;&gt;structured-clonable type&lt;/a&gt;.</source>
          <target state="translated">서비스 워커에게 보낼 메시지입니다. 이것은 &lt;a href=&quot;../web_workers_api/structured_clone_algorithm&quot;&gt;구조화 된 복제 가능한 유형&lt;/a&gt; 이 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f3b5e1f2518be907d12e2f59292e9cf379b0c387" translate="yes" xml:space="preserve">
          <source>The message type: &lt;code&gt;&quot;new-ice-candidate&quot;&lt;/code&gt;.</source>
          <target state="translated">메시지 유형 : &lt;code&gt;&quot;new-ice-candidate&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9be92ac70300041d900b7fd5c862af6d886dbec" translate="yes" xml:space="preserve">
          <source>The message type: &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt;.</source>
          <target state="translated">메시지 유형 : &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d8759a7f5578df4eac35d9b73d76eed68186b7f" translate="yes" xml:space="preserve">
          <source>The message type; either &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; or &lt;code&gt;&quot;video-answer&quot;&lt;/code&gt;.</source>
          <target state="translated">메시지 유형 &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;video-answer&quot;&lt;/code&gt; 중 하나 입니다.</target>
        </trans-unit>
        <trans-unit id="e80e0a99bb97f2a82d0f10e40cade43bf03bf33e" translate="yes" xml:space="preserve">
          <source>The message you want to send through the channel. This can be of any basic data type. Multiple data items can be sent as an array.</source>
          <target state="translated">채널을 통해 보내려는 메시지입니다. 기본 데이터 유형이 될 수 있습니다. 여러 데이터 항목을 배열로 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e404607496198deb2758f024173487082498be0" translate="yes" xml:space="preserve">
          <source>The metadata parameters are as follows:</source>
          <target state="translated">메타 데이터 매개 변수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9f0d87a73198bd6d2d0d12c2c7e0b2e35b683f9a" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../document/getelementsbyclassname&quot;&gt;&lt;code&gt;getElementsByClassName()&lt;/code&gt;&lt;/a&gt; on the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; interface works essentially the same way, except it acts on the entire document, starting at the document root.</source>
          <target state="translated">&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt; 인터페이스 의 &lt;a href=&quot;../document/getelementsbyclassname&quot;&gt; &lt;code&gt;getElementsByClassName()&lt;/code&gt; &lt;/a&gt; 메소드 는 문서 루트에서 시작하여 전체 문서에서 작동한다는 점을 제외하고는 기본적으로 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="2e73c405a65e8de5c5da828c4f2f31b7a761c0c4" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;detach()&lt;/code&gt; has been changed to be a no-op.</source>
          <target state="translated">&lt;code&gt;detach()&lt;/code&gt; 메소드 가 no-op로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="7f3a7e91eb523d15518ac3260276523462f0b8c3" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;getContext()&lt;/code&gt; now returns a &lt;a href=&quot;renderingcontext&quot;&gt;&lt;code&gt;RenderingContext&lt;/code&gt;&lt;/a&gt; rather than an opaque &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getContext()&lt;/code&gt; 메소드 는 이제 불투명 &lt;code&gt;object&lt;/code&gt; 대신 &lt;a href=&quot;renderingcontext&quot;&gt; &lt;code&gt;RenderingContext&lt;/code&gt; 를&lt;/a&gt; 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="8086caba394faa71b2db85e0d218842082b02478" translate="yes" xml:space="preserve">
          <source>The method can raise an IDBDatabaseException with the following code:</source>
          <target state="translated">이 메소드는 다음 코드를 사용하여 IDBDatabaseException을 발생시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f9212e4582ab50d3b113f1004a808c6add18578" translate="yes" xml:space="preserve">
          <source>The method is a no-op in the absence of the possibility of synchronizing between multiple GL contexts.</source>
          <target state="translated">이 방법은 여러 GL 컨텍스트간에 동기화 할 가능성이없는 경우 아무 문제가 없습니다.</target>
        </trans-unit>
        <trans-unit id="792460f39712788df87e1a43336d78e6d7859cc6" translate="yes" xml:space="preserve">
          <source>The method now throws an NOT_FOUND_ERR exception if the item of the &lt;code&gt;before&lt;/code&gt; parameter is not a child of this element.</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; 매개 변수 의 항목 이이 요소의 하위가 아닌 경우 메소드는 이제 NOT_FOUND_ERR 예외를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="98e87576ca4bfe3c4d7b35ff2c5552438e3978bf" translate="yes" xml:space="preserve">
          <source>The method returns an &lt;a href=&quot;../idbopendbrequest&quot;&gt;&lt;code&gt;IDBOpenDBRequest&lt;/code&gt;&lt;/a&gt; object immediately, and performs the open operation asynchronously. If the operation is successful, a &lt;code&gt;success&lt;/code&gt; event is fired on the request object that is returned from this method, with its &lt;code&gt;result&lt;/code&gt; attribute set to the new &lt;a href=&quot;../idbdatabase&quot;&gt;&lt;code&gt;IDBDatabase&lt;/code&gt;&lt;/a&gt; object for the connection.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../idbopendbrequest&quot;&gt; &lt;code&gt;IDBOpenDBRequest&lt;/code&gt; &lt;/a&gt; 오브젝트를 즉시 리턴 하고 열기 조작을 비동기 적으로 수행합니다. 조작이 성공하면 이 메소드에서 리턴 된 요청 오브젝트에서 &lt;code&gt;success&lt;/code&gt; 이벤트가 발생하며 &lt;code&gt;result&lt;/code&gt; 속성 은 연결 의 새 &lt;a href=&quot;../idbdatabase&quot;&gt; &lt;code&gt;IDBDatabase&lt;/code&gt; &lt;/a&gt; 오브젝트로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="6c4451e51d192830e817844ac8042367b7070fa8" translate="yes" xml:space="preserve">
          <source>The method returns immediately. If the assertion cannot be generated, an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/idpassertionerror&quot;&gt;idpassertionerror&lt;/a&gt;&lt;/code&gt; will be sent to the object.</source>
          <target state="translated">이 메소드는 즉시 리턴합니다. 어설 션을 생성 할 수 없으면 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/idpassertionerror&quot;&gt;idpassertionerror&lt;/a&gt;&lt;/code&gt; 가 객체로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="6dc6ceefe431b60b8e0eb97493e2bdcac061da69" translate="yes" xml:space="preserve">
          <source>The method sets the position of the cursor to the appropriate key, based on the specified direction.</source>
          <target state="translated">이 방법은 지정된 방향을 기준으로 커서 위치를 적절한 키로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5e1fee4c579d24826555b16f7a61416ab5e13deb" translate="yes" xml:space="preserve">
          <source>The method sets the position of the cursor to the appropriate record, based on the specified direction.</source>
          <target state="translated">이 방법은 지정된 방향을 기준으로 커서 위치를 적절한 레코드로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="419e717589549d5f3260ce01c3c51f57fb4867e2" translate="yes" xml:space="preserve">
          <source>The method takes the name of the store as well as a parameter object that lets you define important optional properties. You can use the property to uniquely identify individual objects in the store. As the property is an identifier, it should be unique to every object, and every object should have that property.</source>
          <target state="translated">이 메소드는 상점의 이름과 중요한 선택적 특성을 정의 할 수있는 매개 변수 오브젝트를 사용합니다. 이 특성을 사용하여 상점에서 개별 오브젝트를 고유하게 식별 할 수 있습니다. 속성은 식별자이므로 모든 개체에 고유해야하며 모든 개체에는 해당 속성이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="43182a05591f34206706429f8e80271516ee0422" translate="yes" xml:space="preserve">
          <source>The method throws an exception in 2 different ways:</source>
          <target state="translated">이 메소드는 두 가지 방법으로 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="1df1a062e7ab747a7c40892bbec3b4672ee48dcc" translate="yes" xml:space="preserve">
          <source>The method was not called from a &lt;code&gt;versionchange&lt;/code&gt; transaction mode callback, i.e. from inside a &lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt;&lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">이 방법은 호출되지 않은 &lt;code&gt;versionchange&lt;/code&gt; 의 트랜잭션 모드 콜백, 즉 내부에서 &lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt; &lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt; 의&lt;/a&gt; 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="aff1d90015ff50ae33a88b207c2a65853c418071" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;blur()&lt;/code&gt; and &lt;code&gt;focus()&lt;/code&gt;, as well as the properties &lt;code&gt;tabindex&lt;/code&gt; and &lt;code&gt;accessKey&lt;/code&gt;, are now defined on &lt;a href=&quot;htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;blur()&lt;/code&gt; 및 &lt;code&gt;focus()&lt;/code&gt; 메서드 와 &lt;code&gt;tabindex&lt;/code&gt; 및 &lt;code&gt;accessKey&lt;/code&gt; 속성 이 이제 &lt;a href=&quot;htmlelement&quot;&gt; &lt;code&gt;HTMLElement&lt;/code&gt; 에&lt;/a&gt; 정의되었습니다 .</target>
        </trans-unit>
        <trans-unit id="8021b7414aae72b178563155d6103fd9d81b2caf" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;insertBefore()&lt;/code&gt;, &lt;code&gt;replaceChild()&lt;/code&gt;, &lt;code&gt;removeChild()&lt;/code&gt;, and &lt;code&gt;appendChild()&lt;/code&gt; returns one more kind of error (&lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt;) if called on a &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;insertBefore()&lt;/code&gt; , &lt;code&gt;replaceChild()&lt;/code&gt; , &lt;code&gt;removeChild()&lt;/code&gt; 및 &lt;code&gt;appendChild()&lt;/code&gt; 메소드 는 &lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; 에서&lt;/a&gt; 호출 된 경우 하나 이상의 오류 ( &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt; )를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="12048f1e1aecb992ad80ceb8992e7e789058924b" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;insertCell&lt;/code&gt; and &lt;code&gt;deleteCell&lt;/code&gt; can raise exceptions.</source>
          <target state="translated">&lt;code&gt;insertCell&lt;/code&gt; 및 &lt;code&gt;deleteCell&lt;/code&gt; 메소드 는 예외를 발생시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb35df80d3f81641733624217cac7f06d0a27329" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;insertRow&lt;/code&gt; and &lt;code&gt;deleteRow&lt;/code&gt; can raise exceptions.</source>
          <target state="translated">&lt;code&gt;insertRow&lt;/code&gt; 및 &lt;code&gt;deleteRow&lt;/code&gt; 메소드 는 예외를 발생시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e4c67a6ed65873458b5a2b9dc7401f8650d5634" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;item()&lt;/code&gt;, &lt;code&gt;namedItem()&lt;/code&gt;, &lt;code&gt;checkValidity()&lt;/code&gt; and &lt;code&gt;setCustomValidity()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;item()&lt;/code&gt; , &lt;code&gt;namedItem()&lt;/code&gt; , &lt;code&gt;checkValidity()&lt;/code&gt; 및 &lt;code&gt;setCustomValidity()&lt;/code&gt; 메소드 .</target>
        </trans-unit>
        <trans-unit id="6d8cd5d911532e61b5b687de5fd8d4211079fb48" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;previousNode()&lt;/code&gt; and &lt;code&gt;nextNode()&lt;/code&gt; don't raise an exception any more.</source>
          <target state="translated">&lt;code&gt;previousNode()&lt;/code&gt; 및 &lt;code&gt;nextNode()&lt;/code&gt; 메소드 는 더 이상 예외를 발생시키지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e1fe714f72b15f30b50089a2270e1cfbc3a7d64f" translate="yes" xml:space="preserve">
          <source>The methods used for region are listed below along with description of their functionality:</source>
          <target state="translated">지역에 사용되는 방법은 기능에 대한 설명과 함께 아래에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2eb43b3acce03002d4c7bdb71cbcb5d03523d6f" translate="yes" xml:space="preserve">
          <source>The methods used in WebVTT are those which are used to alter the cue or region as the attributes for both interfaces are different. We can categorize them for better understanding relating to each interface in WebVTT:</source>
          <target state="translated">WebVTT에서 사용되는 방법은 두 인터페이스의 속성이 다르기 때문에 큐 또는 영역을 변경하는 데 사용되는 방법입니다. WebVTT의 각 인터페이스와 관련된 이해를 돕기 위해 분류 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd215e0754fcd855ffb2baaa1c5203e0c65ed148" translate="yes" xml:space="preserve">
          <source>The methods which are available in this interface are:</source>
          <target state="translated">이 인터페이스에서 사용 가능한 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e077b5dad83bced571617281082915357b4a1da4" translate="yes" xml:space="preserve">
          <source>The mid-element of the array is applied to any signal value of &lt;code&gt;0&lt;/code&gt;, the first one to signal values of &lt;code&gt;-1&lt;/code&gt;, and the last to signal values of &lt;code&gt;1&lt;/code&gt;; values lower than &lt;code&gt;-1&lt;/code&gt; or greater than &lt;code&gt;1&lt;/code&gt; are treated like &lt;code&gt;-1&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; respectively.</source>
          <target state="translated">어레이의 중간 요소는 임의의 신호 값 &lt;code&gt;0&lt;/code&gt; , 첫 번째 신호 신호 &lt;code&gt;-1&lt;/code&gt; , 마지막 신호 신호 값 &lt;code&gt;1&lt;/code&gt; 에 적용됩니다 . &lt;code&gt;-1&lt;/code&gt; 보다 작거나 &lt;code&gt;1&lt;/code&gt; 보다 큰 값 은 각각 &lt;code&gt;-1&lt;/code&gt; 또는 &lt;code&gt;1&lt;/code&gt; 처럼 처리 됩니다.</target>
        </trans-unit>
        <trans-unit id="008119ade4fbf91d99559499fd66994144f056f9" translate="yes" xml:space="preserve">
          <source>The middle of the frequency range getting a boost or an attenuation.</source>
          <target state="translated">주파수 범위의 중간에서 부스트 또는 감쇠가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="870447a1d3f20dbbae80ca89ec229e04fb1ef9ef" translate="yes" xml:space="preserve">
          <source>The mimeType to check.</source>
          <target state="translated">확인할 mimeType입니다.</target>
        </trans-unit>
        <trans-unit id="4920d17bd324064e15c675f15fa1570d84df31be" translate="yes" xml:space="preserve">
          <source>The mimimal size is clamped to prevent the window from being too small for the user to interact with.</source>
          <target state="translated">사용자가 상호 작용하기에 창의 크기가 너무 작아지는 것을 막기 위해 최소 크기가 고정됩니다.</target>
        </trans-unit>
        <trans-unit id="33aeb3ee0e28ecee7ccb6b846e87f581d2444f50" translate="yes" xml:space="preserve">
          <source>The minimum sensing distance the sensor is able to report, in centimeters. Ususally zero.</source>
          <target state="translated">센서가보고 할 수있는 최소 감지 거리 (센티미터)입니다. 일반적으로 0입니다.</target>
        </trans-unit>
        <trans-unit id="708032fcd05ef00e677b6e9853012278d8c42047" translate="yes" xml:space="preserve">
          <source>The minor version number of the device in a semantic versioning scheme.</source>
          <target state="translated">시맨틱 버전 관리 체계에서 장치의 부 버전 번호입니다.</target>
        </trans-unit>
        <trans-unit id="1ba3f190ae158a54076b7dfaf84f1471aa5ac3ec" translate="yes" xml:space="preserve">
          <source>The mobile web contains two viewports, the layout viewport and the visual viewport. The layout viewport covers all the elements on a page and the visual viewport is what is actually visible on the screen. When the user pinch-zooms into the page, the visual viewport shrinks but the layout viewport is unchanged. User-interface features like the on-screen keyboard (OSK) can shrink the visual viewport without affecting the layout viewport.</source>
          <target state="translated">모바일 웹에는 두 개의 뷰포트 인 배치 뷰포트와 시각적 뷰포트가 있습니다. 배치 뷰포트는 페이지의 모든 요소를 ​​포함하며 시각적 뷰포트는 실제로 화면에 표시됩니다. 사용자가 페이지를 확대 / 축소하면 시각적 뷰포트는 축소되지만 레이아웃 뷰포트는 변경되지 않습니다. 온 스크린 키보드 (OSK)와 같은 사용자 인터페이스 기능은 배치 뷰포트에 영향을주지 않고 시각적 뷰포트를 축소 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16e0a24740e1044f614e52f8c2f71687caa951ab" translate="yes" xml:space="preserve">
          <source>The mode for isolating access to data in the object stores that are in the scope of the transaction. For possible values, see the Constants section below. The default value is &lt;code&gt;&lt;a href=&quot;#const_read_only&quot;&gt;readonly&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">트랜잭션 범위에있는 오브젝트 저장소의 데이터에 대한 액세스를 분리하는 모드입니다. 가능한 값은 아래 상수 섹션을 참조하십시오. 기본값은 &lt;code&gt;&lt;a href=&quot;#const_read_only&quot;&gt;readonly&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="91bd11604baa6a9b96ddc8b730e3024d18a6c5ef" translate="yes" xml:space="preserve">
          <source>The mode for isolating access to the data in this object store. For possible values, see &lt;a href=&quot;https://developer.mozilla.org/en/indexeddb/idbobjectstoresync#Constants&quot;&gt;Constants&lt;/a&gt;.</source>
          <target state="translated">이 오브젝트 저장소의 데이터에 대한 액세스를 분리하기위한 모드입니다. 가능한 값은 &lt;a href=&quot;https://developer.mozilla.org/en/indexeddb/idbobjectstoresync#Constants&quot;&gt;상수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="67ebd22cbfb46b161186595a7d7b290c265fc9f7" translate="yes" xml:space="preserve">
          <source>The mode of the &lt;code&gt;ShadowRoot&lt;/code&gt; &amp;mdash; either &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;closed&lt;/code&gt;. This defines whether or not the shadow root's internal features are accessible from JavaScript.</source>
          <target state="translated">&lt;code&gt;ShadowRoot&lt;/code&gt; 의 모드 &amp;mdash; &lt;code&gt;open&lt;/code&gt; 또는 &lt;code&gt;closed&lt;/code&gt; . 이는 JavaScript에서 섀도우 루트의 내부 기능에 액세스 할 수 있는지 여부를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ea243867052b61f577640a83f6f036cdd659b244" translate="yes" xml:space="preserve">
          <source>The mode that is used to access the object store.</source>
          <target state="translated">오브젝트 저장소에 액세스하는 데 사용되는 모드입니다.</target>
        </trans-unit>
        <trans-unit id="b6ac017886a26e333fec21967eb931a57d6a603a" translate="yes" xml:space="preserve">
          <source>The mode value is initially set when the &lt;code&gt;SourceBuffer&lt;/code&gt; is created using &lt;code&gt;MediaSource.addSourceBuffer()&lt;/code&gt;. If timestamps already exist for the media segments, then the value will be set to &lt;code&gt;segments&lt;/code&gt;; if they don't, then the value will be set to &lt;code&gt;sequence&lt;/code&gt;.</source>
          <target state="translated">모드 값은 &lt;code&gt;MediaSource.addSourceBuffer()&lt;/code&gt; 사용하여 &lt;code&gt;SourceBuffer&lt;/code&gt; 를 만들 때 초기에 설정됩니다 . 미디어 세그먼트에 타임 스탬프가 이미 존재하면 값이 &lt;code&gt;segments&lt;/code&gt; 로 설정됩니다 . 그렇지 않은 경우 값은 &lt;code&gt;sequence&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="1dd924237a564aa100cf33a71e524e35ee23b6c8" translate="yes" xml:space="preserve">
          <source>The model, view, and projection matrices</source>
          <target state="translated">모델, 뷰 및 프로젝션 매트릭스</target>
        </trans-unit>
        <trans-unit id="f96c5a1b2cfe017ee611ea9c129286a49379ff35" translate="yes" xml:space="preserve">
          <source>The modification requested is not allowed. For example, the app might be trying to move a directory into its own child or moving a file into its parent directory without changing its name.</source>
          <target state="translated">요청한 수정은 허용되지 않습니다. 예를 들어, 앱이 이름을 변경하지 않고 디렉토리를 자체 하위 디렉토리로 이동하거나 파일을 상위 디렉토리로 이동하려고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05b698946e2e80d91166bcb1ed660dc71c87930a" translate="yes" xml:space="preserve">
          <source>The more nodes in a graph, the higher the latency will be. For example, if your graph has a latency of 500ms, when the source node plays a sound, it will take half a second until that sound can be heard on your speakers (or even longer because of latency in the underlying audio device). Therefore, if you need to have interactive audio, keep the graph as small as possible, and put user-controlled audio nodes at the end of a graph. For example, a volume control (&lt;code&gt;GainNode&lt;/code&gt;) should be the last node so that volume changes take immediate effect.</source>
          <target state="translated">그래프에 노드가 많을수록 대기 시간이 길어집니다. 예를 들어, 그래프의 대기 시간이 500ms 인 경우 소스 노드에서 사운드를 재생할 때 스피커에서 해당 사운드를들을 수있을 때까지 (또는 기본 오디오 장치의 대기 시간으로 인해 더 긴 시간) 0.5 초가 걸립니다. 따라서 대화 형 오디오가 필요한 경우 그래프를 가능한 작게 유지하고 사용자 제어 오디오 노드를 그래프 끝에 배치하십시오. 예를 들어, 볼륨 컨트롤 ( &lt;code&gt;GainNode&lt;/code&gt; )은 마지막 노드 여야하므로 볼륨 변경이 즉시 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="2cf23f703bb8c909726676a975800b5933914fba" translate="yes" xml:space="preserve">
          <source>The most appropriate error code for the condition. See &lt;a href=&quot;#Error_codes&quot;&gt;Error codes&lt;/a&gt; for possible values.</source>
          <target state="translated">조건에 가장 적합한 오류 코드입니다. 가능한 값 은 &lt;a href=&quot;#Error_codes&quot;&gt;오류 코드&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="45c7013ed7617359c166554319be2f4dbbd0b54b" translate="yes" xml:space="preserve">
          <source>The most common example you'll see of this property being used is to get access to the &lt;a href=&quot;../customelementregistry/define&quot;&gt;&lt;code&gt;CustomElementRegistry.define()&lt;/code&gt;&lt;/a&gt; method to define and register a new custom element, e.g.:</source>
          <target state="translated">이 속성을 사용하는 가장 일반적인 예는 &lt;a href=&quot;../customelementregistry/define&quot;&gt; &lt;code&gt;CustomElementRegistry.define()&lt;/code&gt; &lt;/a&gt; 메서드에 액세스하여 새 사용자 지정 요소를 정의하고 등록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8a68ff7c3aa8b6805f38d9e550a4fbccb010c233" translate="yes" xml:space="preserve">
          <source>The most common kind of rule:</source>
          <target state="translated">가장 일반적인 종류의 규칙 :</target>
        </trans-unit>
        <trans-unit id="80c4e38078ecbddf24b6927ba0c2438a7fdaf843" translate="yes" xml:space="preserve">
          <source>The most common patterns for using &lt;code&gt;show()&lt;/code&gt; involve either the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;async&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await&quot;&gt;await&lt;/a&gt;&lt;/code&gt; syntax or the use of &lt;code&gt;show().then().catch()&lt;/code&gt; to handle the response and any possible rejection. Those look like this:</source>
          <target state="translated">&lt;code&gt;show()&lt;/code&gt; 를 사용하는 가장 일반적인 패턴 은 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;async&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await&quot;&gt;await&lt;/a&gt;&lt;/code&gt; 구문 또는 &lt;code&gt;show().then().catch()&lt;/code&gt; 를 사용하여 응답 및 가능한 거부를 처리하는 것입니다. 그것들은 다음과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="b62738e824ed2ee339ba0ed168844be119b495e3" translate="yes" xml:space="preserve">
          <source>The most common response properties you'll use are:</source>
          <target state="translated">가장 일반적인 응답 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ecdd373464acbb5fd9b3eae3c4ccd62f9643c8b3" translate="yes" xml:space="preserve">
          <source>The most common use case for this method (and even then, probably not a very common use case) is to replace the set of ICE servers to be used. Two potential scenarios in which this might be done:</source>
          <target state="translated">이 방법의 가장 일반적인 사용 사례는 (그리고 아마도 매우 일반적인 사용 사례는 아님) 사용할 ICE 서버 세트를 교체하는 것입니다. 이를 수행 할 수있는 두 가지 잠재적 시나리오 :</target>
        </trans-unit>
        <trans-unit id="c83329b4795bbefcceb5bcc05efa21cd20e33538" translate="yes" xml:space="preserve">
          <source>The most common use of this attribute is to specify a link to an external style sheet: the property is set to &lt;code&gt;stylesheet&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link#attr-href&quot;&gt;href&lt;/a&gt;&lt;/code&gt; attribute is set to the URL of an external style sheet to format the page.</source>
          <target state="translated">이 속성의 가장 일반적인 사용은 외부 스타일 시트에 대한 링크를 지정하는 것입니다 : 속성이 설정되어 &lt;code&gt;stylesheet&lt;/code&gt; 과 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link#attr-href&quot;&gt;href&lt;/a&gt;&lt;/code&gt; 속성은 페이지의 형식을 외부 스타일 시트의 URL로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e398a9391fc684e02828d032c92cc20d2e346921" translate="yes" xml:space="preserve">
          <source>The most correct or the highest quality option should be used.</source>
          <target state="translated">가장 정확하거나 가장 높은 품질의 옵션을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="d21d77a4943a1f6f4ef32794304a8644f07880ba" translate="yes" xml:space="preserve">
          <source>The most efficient behavior should be used.</source>
          <target state="translated">가장 효율적인 동작을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="34d5c80a5a895c15204bae38b1ea44fa5c1d74e2" translate="yes" xml:space="preserve">
          <source>The most frequently-used feature of the console is logging of text and other data. There are four categories of output you can generate, using the &lt;a href=&quot;console/log&quot;&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;console/info&quot;&gt;&lt;code&gt;console.info()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;console/warn&quot;&gt;&lt;code&gt;console.warn()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;console/error&quot;&gt;&lt;code&gt;console.error()&lt;/code&gt;&lt;/a&gt; methods respectively. Each of these results in output styled differently in the log, and you can use the filtering controls provided by your browser to only view the kinds of output that interest you.</source>
          <target state="translated">콘솔에서 가장 자주 사용되는 기능은 텍스트 및 기타 데이터 로깅입니다. &lt;a href=&quot;console/log&quot;&gt; &lt;code&gt;console.log()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;console/info&quot;&gt; &lt;code&gt;console.info()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;console/warn&quot;&gt; &lt;code&gt;console.warn()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;console/error&quot;&gt; &lt;code&gt;console.error()&lt;/code&gt; &lt;/a&gt; 메소드를 각각 사용하여 생성 할 수있는 네 가지 출력 카테고리가 있습니다 . 이러한 각 결과는 로그에서 스타일이 다르게 출력되며 브라우저에서 제공하는 필터링 컨트롤을 사용하여 관심있는 출력 유형 만 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cf09065f1f4c754fc74c4fe4762c455ed1e118a" translate="yes" xml:space="preserve">
          <source>The most important thing to note here is that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column&quot;&gt;&lt;code&gt;grid-column&lt;/code&gt;&lt;/a&gt; is set to 1, to place the sidebar on the left-hand side of the screen. If you change this to -1, it will appear on the right (although some other elements will need some adjustments made to their margins to get the spacing just right). The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row&quot;&gt;&lt;code&gt;grid-row&lt;/code&gt;&lt;/a&gt; is set to 2, to place it alongside the site body.</source>
          <target state="translated">여기에서 가장 중요한 것은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column&quot;&gt; &lt;code&gt;grid-column&lt;/code&gt; &lt;/a&gt; 이 1로 설정되어 사이드 바를 화면 왼쪽에 배치한다는 것입니다. 이 값을 -1로 변경하면 오른쪽에 표시됩니다 (그러나 다른 요소는 간격을 올바르게 조정하기 위해 여백을 조정해야합니다). &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row&quot;&gt; &lt;code&gt;grid-row&lt;/code&gt; &lt;/a&gt; 사이트 본체와 함께 배치하는, 2로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f870ba056b605d8d304234d481b77038918732f7" translate="yes" xml:space="preserve">
          <source>The most important thing to understand before we get started is that even though we're only rendering a square plane object in this example, we're still drawing in 3D space. It's just we're drawing a square and we're putting it directly in front of the camera perpendicular to the view direction. We need to define the shaders that will create the color for our simple scene as well as draw our object. These will establish how the square plane appears on the screen.</source>
          <target state="translated">시작하기 전에 이해해야 할 가장 중요한 점은이 예제에서는 사각형 평면 객체 만 렌더링하더라도 3D 공간에서 여전히 그려지고 있다는 것입니다. 그냥 정사각형을 그리며 뷰 방향에 수직 인 카메라 바로 앞에 배치합니다. 간단한 장면의 색상을 생성하고 오브젝트를 그릴 셰이더를 정의해야합니다. 화면에 사각형 평면이 표시되는 방식을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="3cc23ee89804a1cef0e9b3a74597a43b98a0f4f8" translate="yes" xml:space="preserve">
          <source>The most important thing to understand is that most constraints aren't requirements; instead, they're requests. There are exceptions, and we'll get to those shortly.</source>
          <target state="translated">이해해야 할 가장 중요한 것은 대부분의 제약 조건이 요구 사항이 아니라는 것입니다. 대신 요청입니다. 예외가 있으며 조만간 알게 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="9fbd1bb2e6586bb6ec16b7773f74d89a808cfe84" translate="yes" xml:space="preserve">
          <source>The most obvious use of the &lt;code&gt;connect()&lt;/code&gt; method is to direct the audio output from one node into the audio input of another node for further processing. For example, you might send the audio from a &lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt;&lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt;&lt;/a&gt;&amp;mdash;that is, the audio from an HTML5 media element such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt;&amp;mdash;through a band pass filter implemented using a &lt;a href=&quot;../biquadfilternode&quot;&gt;&lt;code&gt;BiquadFilterNode&lt;/code&gt;&lt;/a&gt; to reduce noise before then sending the audio along to the speakers.</source>
          <target state="translated">&lt;code&gt;connect()&lt;/code&gt; 메소드 의 가장 확실한 사용법은 추가 처리를 위해 한 노드의 오디오 출력을 다른 노드의 오디오 입력으로 지정하는 것입니다. 예를 들어 &lt;a href=&quot;../biquadfilternode&quot;&gt; &lt;code&gt;BiquadFilterNode&lt;/code&gt; &lt;/a&gt; 를 사용하여 구현 된 대역 통과 필터를 통해 &lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt; &lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt; &lt;/a&gt; 에서 오디오, 즉 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt; 와 같은 HTML5 미디어 요소에서 나오는 오디오 를 전송하여 잡음을 줄인 다음 오디오를 스피커로 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c8ca7cfd10b18a375a899fc96fd43f124d6c331" translate="yes" xml:space="preserve">
          <source>The most simple example just starts the audio buffer playing from the beginning &amp;mdash; you don't need to specify any parameters in this case:</source>
          <target state="translated">가장 간단한 예는 오디오 버퍼를 처음부터 재생하기 시작합니다.이 경우에는 매개 변수를 지정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="a496838dc4fbf63316b6890d8e9bc8c961e0ebb0" translate="yes" xml:space="preserve">
          <source>The mouseout event is raised when the mouse leaves an element (e.g, when the mouse moves off of an image in the web page, the mouseout event is raised for that image element).</source>
          <target state="translated">마우스가 요소를 떠날 때 mouseout 이벤트가 발생합니다 (예를 들어, 마우스가 웹 페이지의 이미지에서 벗어나면 해당 이미지 요소에 대해 mouseout 이벤트가 발생 함).</target>
        </trans-unit>
        <trans-unit id="7d05d2e1de76dd1d01f96e2ca576630ffad70dfd" translate="yes" xml:space="preserve">
          <source>The mouseover event is raised when the user moves the mouse over a particular element.</source>
          <target state="translated">사용자가 마우스를 특정 요소 위로 움직이면 mouseover 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e7c096260da6763e8ec8cc0696281a7dfcbf9a59" translate="yes" xml:space="preserve">
          <source>The mouseover, mouseout, mouseenter, and mouseleave events are never prevented (even if the pointer is down).</source>
          <target state="translated">마우스 오버, mouseout, mouseenter 및 mouseleave 이벤트는 절대로 방지됩니다 (포인터가 다운 되더라도).</target>
        </trans-unit>
        <trans-unit id="f538ebb30d806685dd762f181bd15f6f4dfec9e8" translate="yes" xml:space="preserve">
          <source>The mouseup event is raised when the user releases the mouse button.</source>
          <target state="translated">사용자가 마우스 버튼을 놓으면 mouseup 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="86e24397b09b262693ec9e89cf114beb996d8e36" translate="yes" xml:space="preserve">
          <source>The multi-entry status of the index is logged to the console: it should be returned as &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">색인의 다중 항목 상태는 콘솔에 기록됩니다 . &lt;code&gt;false&lt;/code&gt; 로 리턴되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="56ac0f2dafbc15b4e214b6ea17d782828fd0a419" translate="yes" xml:space="preserve">
          <source>The mutating operation was attempted in a &quot;readonly&quot; transaction (No legacy code value and constant name).</source>
          <target state="translated">변경 조작이 &quot;읽기 전용&quot;트랜잭션 (레거시 코드 값 및 상수 이름 없음)에서 시도되었습니다.</target>
        </trans-unit>
        <trans-unit id="bf11a1e3c49f4f2d9d99ded2c9a8f5aedef0dc08" translate="yes" xml:space="preserve">
          <source>The name &lt;code&gt;className&lt;/code&gt; is used for this property instead of &lt;code&gt;class&lt;/code&gt; because of conflicts with the &quot;class&quot; keyword in many languages which are used to manipulate the DOM.</source>
          <target state="translated">DOM을 조작하는 데 사용되는 많은 언어에서 &quot;class&quot;키워드와 충돌하기 때문에 &lt;code&gt;className&lt;/code&gt; 이라는 이름 이 &lt;code&gt;class&lt;/code&gt; 대신이 특성 에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="56694a61b91b70b99f6dd6682d9039f6d71627b4" translate="yes" xml:space="preserve">
          <source>The name for the database.</source>
          <target state="translated">데이터베이스 이름</target>
        </trans-unit>
        <trans-unit id="49144086d2aeb48f6d9abbeebab7c601abdb76ee" translate="yes" xml:space="preserve">
          <source>The name of a custom data attribute begins with &lt;code&gt;&quot;data-&quot;&lt;/code&gt;. It must contain only letters, numbers and the following characters: dash (&lt;code&gt;-&lt;/code&gt;), dot (&lt;code&gt;.&lt;/code&gt;), colon (&lt;code&gt;:&lt;/code&gt;), underscore (&lt;code&gt;_&lt;/code&gt;). Moreover, it should not contain ASCII capital letters (&lt;code&gt;A&lt;/code&gt; to &lt;code&gt;Z&lt;/code&gt;).</source>
          <target state="translated">사용자 정의 데이터 속성의 이름은 &lt;code&gt;&quot;data-&quot;&lt;/code&gt; 로 시작합니다 . 그것은 문자, 숫자 및 다음 문자를 포함해야합니다 대시 ( &lt;code&gt;-&lt;/code&gt; () 점 &lt;code&gt;.&lt;/code&gt; ), 콜론 ( &lt;code&gt;:&lt;/code&gt; ), 밑줄 ( &lt;code&gt;_&lt;/code&gt; ). 또한 ASCII 대문자 ( &lt;code&gt;A&lt;/code&gt; ~ &lt;code&gt;Z&lt;/code&gt; ) 를 포함해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="f191f3deeb9987c8aaec81537cdc44ea43dde1ee" translate="yes" xml:space="preserve">
          <source>The name of a custom data attribute in HTML begins with &lt;code&gt;data-&lt;/code&gt;. It must contain only letters, numbers and the following characters: dash (&lt;code&gt;-&lt;/code&gt;), dot (&lt;code&gt;.&lt;/code&gt;), colon (&lt;code&gt;:&lt;/code&gt;), underscore (&lt;code&gt;_&lt;/code&gt;) -- but NOT any ASCII capital letters (&lt;code&gt;A&lt;/code&gt; to &lt;code&gt;Z&lt;/code&gt;).</source>
          <target state="translated">HTML에서 사용자 정의 데이터 속성의 이름은 &lt;code&gt;data-&lt;/code&gt; 로 시작합니다 . 그것은 문자, 숫자 및 다음 문자를 포함해야합니다 대시 ( &lt;code&gt;-&lt;/code&gt; () 점 &lt;code&gt;.&lt;/code&gt; ), 콜론 ( &lt;code&gt;:&lt;/code&gt; ), 밑줄 ( &lt;code&gt;_&lt;/code&gt; ) -하지만 모든 ASCII 대문자 ( 에 &lt;code&gt;Z&lt;/code&gt; 를 ). &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af439ef7df49a7aedc6a2a3ad1f51843e4062ee0" translate="yes" xml:space="preserve">
          <source>The name of a custom data attribute in JavaScript is the name of the same HTML attribute but in camelCase and with no dashes, dots, etc.</source>
          <target state="translated">JavaScript에서 사용자 정의 데이터 속성의 이름은 동일한 HTML 속성의 이름이지만 camelCase에는 대시, 점 등이 없습니다.</target>
        </trans-unit>
        <trans-unit id="7e61ef84301095ddfafaf7c6237e6b7bb466bb2d" translate="yes" xml:space="preserve">
          <source>The name of a lock is given by script when the lock is requested. The name is selected by the developer to represent some abstract resource for which use is being coordinated across multiple tabs, workers, or other code within the origin. For example, if only one tab of a web application should be synchronizing network resources with an offline database, it could use a lock name such as &lt;code&gt;&quot;net_db_sync&quot;&lt;/code&gt;.</source>
          <target state="translated">잠금 이름은 잠금이 요청 될 때 스크립트에 의해 제공됩니다. 이 이름은 개발자가 여러 탭, 작업자 또는 원본 내 다른 코드에서 사용되는 추상 리소스를 나타 내기 위해 선택합니다. 예를 들어, 웹 응용 프로그램의 한 탭에서만 네트워크 리소스를 오프라인 데이터베이스와 동기화해야하는 경우 &lt;code&gt;&quot;net_db_sync&quot;&lt;/code&gt; 와 같은 잠금 이름을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5faed4e72eb1cc9ae314eea93e5ee35081590f09" translate="yes" xml:space="preserve">
          <source>The name of a new index.</source>
          <target state="translated">새로운 인덱스의 이름.</target>
        </trans-unit>
        <trans-unit id="fc81631b41d62e5dee7f362382d3d0175bbae5d2" translate="yes" xml:space="preserve">
          <source>The name of a new object store.</source>
          <target state="translated">새 객체 저장소의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="0b8e17043257860fa0968eb5dc7bf2c031180ea3" translate="yes" xml:space="preserve">
          <source>The name of a property.</source>
          <target state="translated">속성의 이름</target>
        </trans-unit>
        <trans-unit id="5a699b308daf4c4328bb5238e8e622fff8265eb7" translate="yes" xml:space="preserve">
          <source>The name of an existing object store to remove.</source>
          <target state="translated">제거 할 기존 오브젝트 저장소의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b2df965a00ee99218a4409824395f56e7f71b81d" translate="yes" xml:space="preserve">
          <source>The name of entity reference</source>
          <target state="translated">엔터티 참조의 이름</target>
        </trans-unit>
        <trans-unit id="9161d67feccefeee181c6791f9bb625ec49f2985" translate="yes" xml:space="preserve">
          <source>The name of the HTTP header whose values you want to retrieve from the &lt;code&gt;Headers&lt;/code&gt; object. If the given name is not the name of an HTTP header, this method throws a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Headers&lt;/code&gt; 객체 에서 값을 검색하려는 HTTP 헤더의 이름입니다 . 지정된 이름이 HTTP 헤더의 이름이 아닌 경우이 메소드는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="b39ef7df35ce44c0fd60cbd4c4b90dced33c9297" translate="yes" xml:space="preserve">
          <source>The name of the HTTP header you want to add to the &lt;code&gt;Headers&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Headers&lt;/code&gt; 객체 에 추가하려는 HTTP 헤더의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="4ab6682eef6bf93552744df1b02b363d33331511" translate="yes" xml:space="preserve">
          <source>The name of the HTTP header you want to delete from the &lt;code&gt;Headers&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Headers&lt;/code&gt; 객체 에서 삭제하려는 HTTP 헤더의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="7af33c4f0c8b2fcaf82e831b2364797c4932d101" translate="yes" xml:space="preserve">
          <source>The name of the HTTP header you want to set to a new value. If the given name is not the name of an HTTP header, this method throws a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">새 값으로 설정하려는 HTTP 헤더의 이름입니다. 지정된 이름이 HTTP 헤더의 이름이 아닌 경우이 메소드는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="459f3295fea5e4783501f297836e36705cb5ee40" translate="yes" xml:space="preserve">
          <source>The name of the HTTP header you want to test for. If the given name is not the name of an HTTP header, this method throws a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">테스트하려는 HTTP 헤더의 이름입니다. 지정된 이름이 HTTP 헤더의 이름이 아닌 경우이 메소드는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="c48404d4d87f3acc4a1e4e1e0463012e8abef52c" translate="yes" xml:space="preserve">
          <source>The name of the cache you want to delete.</source>
          <target state="translated">삭제하려는 캐시의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="db900f0dacefb18bcf6674f57f661adaec976229" translate="yes" xml:space="preserve">
          <source>The name of the cache you want to open.</source>
          <target state="translated">열려는 캐시의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="d2fc1ada6101beb982beee76d196e982acd883b7" translate="yes" xml:space="preserve">
          <source>The name of the color of the rule.</source>
          <target state="translated">규칙 색상의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="fc581b28360ad7e686c159ce66da558b68e3cc4b" translate="yes" xml:space="preserve">
          <source>The name of the connected database.</source>
          <target state="translated">연결된 데이터베이스의 이름</target>
        </trans-unit>
        <trans-unit id="b46395c90e04c0899e9d58655c03f503a7e2143b" translate="yes" xml:space="preserve">
          <source>The name of the custom element whose constructor you want to return a reference to.</source>
          <target state="translated">생성자가 참조를 반환하려는 사용자 정의 요소의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="40b65fb1da2d2d0b71472bf6eb06d4d870e0f2a9" translate="yes" xml:space="preserve">
          <source>The name of the database you want to delete. Note that attempting to delete a database that doesn't exist does not throw an exception, in contrast to &lt;a href=&quot;../idbdatabase/deleteobjectstore&quot;&gt;&lt;code&gt;IDBDatabase.deleteObjectStore()&lt;/code&gt;&lt;/a&gt;, which does throw an exception if the named object store does not exist.</source>
          <target state="translated">삭제하려는 데이터베이스의 이름입니다. 명명 된 객체 저장소가 존재하지 않는 경우 예외를 발생시키는 &lt;a href=&quot;../idbdatabase/deleteobjectstore&quot;&gt; &lt;code&gt;IDBDatabase.deleteObjectStore()&lt;/code&gt; &lt;/a&gt; 와 달리 존재하지 않는 데이터베이스를 삭제하려고 시도해도 예외 가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="37576df4686b177205cb7f6611ca417d2ed725a4" translate="yes" xml:space="preserve">
          <source>The name of the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5350b0aa9d6ec37ea537858a3bbfa73b178ac4bc" translate="yes" xml:space="preserve">
          <source>The name of the entry to retrieve.</source>
          <target state="translated">검색 할 항목의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="47e223e8c5fe87dc2f017ef2eabcb21daf87ceb2" translate="yes" xml:space="preserve">
          <source>The name of the event (case-insensitive).</source>
          <target state="translated">이벤트 이름 (대소 문자 구분).</target>
        </trans-unit>
        <trans-unit id="b35a2b903389479f8fd59f26e80baffeb41a71d3" translate="yes" xml:space="preserve">
          <source>The name of the event.</source>
          <target state="translated">이벤트 이름</target>
        </trans-unit>
        <trans-unit id="92dc753e53ca04efed0bcbbc253b9fabbec28ec9" translate="yes" xml:space="preserve">
          <source>The name of the existing index to remove.</source>
          <target state="translated">제거 할 기존 색인의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="88876793d17cca1f03a79f66549eee4503d00336" translate="yes" xml:space="preserve">
          <source>The name of the field whose data is contained in &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 에 데이터가 포함 된 필드의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="26c3f034ccd50a10581653fcbf34a38b999dc669" translate="yes" xml:space="preserve">
          <source>The name of the header whose value is to be set.</source>
          <target state="translated">값을 설정할 헤더의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="bcc0587243522bb44ac3f76625883fc7e9d7535c" translate="yes" xml:space="preserve">
          <source>The name of the index is logged to the console: it should be returned as &lt;code&gt;lName&lt;/code&gt;.</source>
          <target state="translated">색인 이름은 콘솔에 기록됩니다 . &lt;code&gt;lName&lt;/code&gt; 으로 리턴되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="a239b29992b94a2369abfe5f5fa657c7a88959fb" translate="yes" xml:space="preserve">
          <source>The name of the index to create. Note that it is possible to create an index with an empty name.</source>
          <target state="translated">작성할 인덱스의 이름입니다. 빈 이름으로 색인을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="309bf1a783b0b51c51b38cc4d749641a30fc81fa" translate="yes" xml:space="preserve">
          <source>The name of the index to open.</source>
          <target state="translated">열려는 인덱스의 이름.</target>
        </trans-unit>
        <trans-unit id="5a2b9c1abeb2c7a84b51cd096ca4b6f96e5423cd" translate="yes" xml:space="preserve">
          <source>The name of the key you want to delete.</source>
          <target state="translated">삭제하려는 키의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="51582f80d3dacc9bab4de97eb72e88776ad05329" translate="yes" xml:space="preserve">
          <source>The name of the new object store to be created. Note that it is possible to create an object store with an empty name.</source>
          <target state="translated">작성할 새 오브젝트 저장소의 이름입니다. 빈 이름으로 객체 저장소를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6064b261a51e7a71aab6fa3a4eda6668bb583154" translate="yes" xml:space="preserve">
          <source>The name of the object store referenced by this index.</source>
          <target state="translated">이 인덱스가 참조하는 오브젝트 저장소의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="a09cabbd532284fd9f1763704878336dbed3ecd5" translate="yes" xml:space="preserve">
          <source>The name of the object store to open.</source>
          <target state="translated">열려는 오브젝트 저장소의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b0609ff4b29a67e9bcbb017197f66cb97a507e96" translate="yes" xml:space="preserve">
          <source>The name of the object store you want to delete.</source>
          <target state="translated">삭제하려는 객체 저장소의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="1a811105e51e3b087c38561c509a1162ebe0221f" translate="yes" xml:space="preserve">
          <source>The name of the parameter to append.</source>
          <target state="translated">추가 할 매개 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="3535909a65b914eac6d651985bca3ba2095996e1" translate="yes" xml:space="preserve">
          <source>The name of the parameter to be deleted.</source>
          <target state="translated">삭제할 매개 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="03f29c02d11f28091d6be4057058ff92700af6b9" translate="yes" xml:space="preserve">
          <source>The name of the parameter to find.</source>
          <target state="translated">찾을 매개 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="4730be470c40ca8957558d1969d78ab2de91ab32" translate="yes" xml:space="preserve">
          <source>The name of the parameter to return.</source>
          <target state="translated">반환 할 매개 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c8ab0e1fdc033df1b8cd057f1c707fc1f394915b" translate="yes" xml:space="preserve">
          <source>The name of the parameter to set.</source>
          <target state="translated">설정할 매개 변수의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f473b51a98d9dd3a878cf1daf4528aceb12f26af" translate="yes" xml:space="preserve">
          <source>The name of the performance entry when the metric was created.</source>
          <target state="translated">메트릭을 만들 때 성능 항목의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="efefc9a9b3c19a15360e92276c1213b327afaf82" translate="yes" xml:space="preserve">
          <source>The name of the plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18e4ad01858ade4a62658a9b001f0689dc97f145" translate="yes" xml:space="preserve">
          <source>The name of the property to retrieve all values of.</source>
          <target state="translated">모든 값을 검색 할 특성의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="5febba2ce1d517443777897fe4d29c46735fd633" translate="yes" xml:space="preserve">
          <source>The name of the property to retrieve the value of.</source>
          <target state="translated">값을 검색 할 속성의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="0949391ba21ff5dfad6984ed7fff7f85f5fb0016" translate="yes" xml:space="preserve">
          <source>The name of the requested object store.</source>
          <target state="translated">요청 된 오브젝트 저장소의 이름</target>
        </trans-unit>
        <trans-unit id="8ef15486243f1900b6c6b4de89a2ac18babcc9e4" translate="yes" xml:space="preserve">
          <source>The name of the script file in which the error occurred.</source>
          <target state="translated">오류가 발생한 스크립트 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="337442d543636aab977b8b8b9cf6ff26260ab3bb" translate="yes" xml:space="preserve">
          <source>The name of the style sheets to enable. All style sheets with a title that match this name will be enabled, while all others that have a title will be disabled. Specify an empty string for the &lt;code&gt;name&lt;/code&gt; parameter to disable all alternate and preferred style sheets (but not the persistent style sheets; that is, those with no &lt;code&gt;title&lt;/code&gt; attribute).</source>
          <target state="translated">사용할 스타일 시트의 이름입니다. 이 이름과 일치하는 제목을 가진 모든 스타일 시트는 활성화되고 다른 제목을 가진 스타일 시트는 비활성화됩니다. 대체 및 기본 스타일 시트 (영구적 스타일 시트가 아닌, 즉 &lt;code&gt;title&lt;/code&gt; 속성 이없는 스타일 시트)를 모두 사용하지 않으 려면 &lt;code&gt;name&lt;/code&gt; 매개 변수에 빈 문자열을 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="63af431ea5cd341830d2625e05fbc74110d3d4a3" translate="yes" xml:space="preserve">
          <source>The name of the sub-protocol being used on the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;, if any; otherwise, the empty string (&quot;&quot;). &lt;code&gt;&quot;&quot;&lt;/code&gt; This string may not be longer than 65,535 &lt;em&gt;bytes&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt; 에서 사용중인 서브 프로토콜의 이름입니다 (있는 경우). 그렇지 않으면 빈 문자열 ( &quot;&quot;)입니다. &lt;code&gt;&quot;&quot;&lt;/code&gt; 이 문자열은 65,535 &lt;em&gt;바이트를&lt;/em&gt; 초과 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="40467e3c2d88111d3eb2b2ad84a27a235f4aaaaf" translate="yes" xml:space="preserve">
          <source>The name of the timer to log to the console.</source>
          <target state="translated">콘솔에 기록 할 타이머 이름.</target>
        </trans-unit>
        <trans-unit id="b768212273b7d8ae91c0fdcc39170cc729b94c5f" translate="yes" xml:space="preserve">
          <source>The name of the timer to stop. Once stopped, the elapsed time is automatically displayed in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Web_Console&quot;&gt;Web Console&lt;/a&gt;.</source>
          <target state="translated">중지 할 타이머의 이름입니다. 중지되면 경과 시간이 자동으로 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Web_Console&quot;&gt;웹 콘솔에&lt;/a&gt; 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="6ae21042be6059d83527c4d79748ad82013273e5" translate="yes" xml:space="preserve">
          <source>The name of the user we wish to call.</source>
          <target state="translated">전화를 걸 사용자의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="5a0d5594c93396b42bb08315eeb16c59974b0b84" translate="yes" xml:space="preserve">
          <source>The name of the window is used primarily for setting targets for hyperlinks and forms. Windows do not need to have names.</source>
          <target state="translated">창의 이름은 주로 하이퍼 링크 및 양식의 대상을 설정하는 데 사용됩니다. Windows에는 이름이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="00cf9c79f89c16623bc0b9b769fe70a0be30a0ad" translate="yes" xml:space="preserve">
          <source>The name of this index.</source>
          <target state="translated">이 인덱스의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="6812f5dba332b8ae530720f8765ca073e0ee2713" translate="yes" xml:space="preserve">
          <source>The name of this object store.</source>
          <target state="translated">이 객체 저장소의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="1ec70812c80b4216a571bc94438dd6cc7e796cc9" translate="yes" xml:space="preserve">
          <source>The name that the &lt;a href=&quot;sharedworker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt; was (optionally) given when it was created using the &lt;a href=&quot;sharedworker/sharedworker&quot;&gt;&lt;code&gt;SharedWorker()&lt;/code&gt;&lt;/a&gt; constructor. This is mainly useful for debugging purposes.</source>
          <target state="translated">하는 이름 &lt;a href=&quot;sharedworker&quot;&gt; &lt;code&gt;SharedWorker&lt;/code&gt; 는&lt;/a&gt; 그것이 사용하여 만든 경우가 있었다 (선택적으로) 소정 &lt;a href=&quot;sharedworker/sharedworker&quot;&gt; &lt;code&gt;SharedWorker()&lt;/code&gt; &lt;/a&gt; 생성자를. 이것은 주로 디버깅 목적으로 유용합니다.</target>
        </trans-unit>
        <trans-unit id="8b77eaa466a870baece6dd0002677a8dc3b07bba" translate="yes" xml:space="preserve">
          <source>The name that the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; was (optionally) given when it was created using the &lt;a href=&quot;worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor. This is mainly useful for debugging purposes.</source>
          <target state="translated">&lt;a href=&quot;worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 생성 할 때 &lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 에 (선택적으로) 부여 된 이름입니다 . 이것은 주로 디버깅 목적으로 유용합니다.</target>
        </trans-unit>
        <trans-unit id="aa70c24cf2e18fd6af5bcd6c338b80a7b5a0b5e1" translate="yes" xml:space="preserve">
          <source>The name to give the new timer. This will identify the timer; use the same name when calling &lt;a href=&quot;timeend&quot;&gt;&lt;code&gt;console.timeEnd()&lt;/code&gt;&lt;/a&gt; to stop the timer and get the time output to the console.</source>
          <target state="translated">새 타이머의 이름입니다. 타이머를 식별합니다. &lt;a href=&quot;timeend&quot;&gt; &lt;code&gt;console.timeEnd()&lt;/code&gt; &lt;/a&gt; 를 호출 할 때 동일한 이름을 사용하여 타이머를 중지하고 콘솔에 시간 출력을 가져 오십시오.</target>
        </trans-unit>
        <trans-unit id="25188bad61495ac8f60aacb43aeb2c320740adfc" translate="yes" xml:space="preserve">
          <source>The name to give the profile. Optional.</source>
          <target state="translated">프로필 이름입니다. 선택 과목.</target>
        </trans-unit>
        <trans-unit id="4c49b2ac7ac83d00f8aaf6f728d88b984153468c" translate="yes" xml:space="preserve">
          <source>The name to give the profile. This parameter is optional.</source>
          <target state="translated">프로필 이름입니다. 이 매개 변수는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="16c4bc94e516291b8c5d17b0b6a990e28bfe7559" translate="yes" xml:space="preserve">
          <source>The name used when the mark was created by calling &lt;a href=&quot;../performance/mark&quot;&gt;&lt;code&gt;performance.mark()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../performance/mark&quot;&gt; &lt;code&gt;performance.mark()&lt;/code&gt; &lt;/a&gt; 를 호출하여 마크를 만들 때 사용 된 이름 입니다.</target>
        </trans-unit>
        <trans-unit id="838dc6e111eae7cef4026ed07221ad39a502215f" translate="yes" xml:space="preserve">
          <source>The names of object stores and indexes in the scope of the new transaction.</source>
          <target state="translated">새 트랜잭션 범위에서 오브젝트 저장소 및 인덱스의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="13b94e897c9e7de9dd0bd902e97e07660e36b890" translate="yes" xml:space="preserve">
          <source>The names of object stores that are in the scope of the new transaction, declared as an array of strings. Specify only the object stores that you need to access.</source>
          <target state="translated">새 트랜잭션 범위에있는 오브젝트 저장소의 이름으로, 문자열 배열로 선언됩니다. 액세스해야하는 오브젝트 저장소 만 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="1b148bf6c2154e221d5f873a46a06b19e3a57ce5" translate="yes" xml:space="preserve">
          <source>The names of the object stores that exist in the connected database.</source>
          <target state="translated">연결된 데이터베이스에 존재하는 오브젝트 저장소의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="d48612e32f98189c984135c6b7bd7b77a3741b9a" translate="yes" xml:space="preserve">
          <source>The namespace URI of the element, or &lt;code&gt;null&lt;/code&gt; if it is no namespace.</source>
          <target state="translated">요소의 네임 스페이스 URI . 네임 스페이스가 아닌 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="457e025186b382a0024d70d33719323024f08878" translate="yes" xml:space="preserve">
          <source>The namespace URI of this node, or &lt;code&gt;null&lt;/code&gt; if it is no namespace.</source>
          <target state="translated">이 노드의 이름 공간 URI . 이름 공간이 아닌 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e6b4c6ee546596096d21013047b9bae350fe74da" translate="yes" xml:space="preserve">
          <source>The network interface being used by the connection has gone offline.</source>
          <target state="translated">연결에 사용중인 네트워크 인터페이스가 오프라인 상태가되었습니다.</target>
        </trans-unit>
        <trans-unit id="9363b670c347648656a42eb773ff642a82b832d5" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;。</source>
          <target state="translated">새로운 &lt;a href=&quot;../element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0185167bbade6a4056e8a851ff1d1a7faf12479" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;RTCRtpSender&lt;/code&gt; is created with the specified &lt;code&gt;track&lt;/code&gt; and set of &lt;code&gt;stream&lt;/code&gt;(s).</source>
          <target state="translated">새로운 &lt;code&gt;RTCRtpSender&lt;/code&gt; 는 지정된 &lt;code&gt;track&lt;/code&gt; 과 &lt;code&gt;stream&lt;/code&gt; 세트로 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="5a4ea7ffdfc0e2b404670f896194da101e547bf8" translate="yes" xml:space="preserve">
          <source>The new URL can be any URL in the same origin as the current URL. In contrast, setting &lt;code&gt;window.location&lt;/code&gt; keeps you at the same &lt;a href=&quot;document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt; only if you modify only the hash.</source>
          <target state="translated">새 URL은 현재 URL과 동일한 출처의 URL 일 수 있습니다. 반대로, &lt;code&gt;window.location&lt;/code&gt; 을 설정 하면 해시 만 수정하는 경우에만 동일한 &lt;a href=&quot;document&quot;&gt; &lt;code&gt;document&lt;/code&gt; &lt;/a&gt; 유지 됩니다.</target>
        </trans-unit>
        <trans-unit id="539ad34597e9f74c4f204eccaec09b1b0af03fcd" translate="yes" xml:space="preserve">
          <source>The new URL to which the window is navigating.</source>
          <target state="translated">창이 탐색하는 새 URL입니다.</target>
        </trans-unit>
        <trans-unit id="579cabb526c788080d203a5db8635a90cc132f17" translate="yes" xml:space="preserve">
          <source>The new ad's element object is returned to the caller in case it's needed.</source>
          <target state="translated">필요한 경우 새 광고의 요소 개체가 호출자에게 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6a238c2c950ec79e7cd3c611817922c367e685ab" translate="yes" xml:space="preserve">
          <source>The new candidate is then passed into &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt;&lt;code&gt;RTCPeerConnection.addIceCandidate()&lt;/code&gt;&lt;/a&gt; to add the candidate to the list of candidates for WebRTC to consider using for the connection being established.</source>
          <target state="translated">그런 다음 새 후보는 &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt; &lt;code&gt;RTCPeerConnection.addIceCandidate()&lt;/code&gt; &lt;/a&gt; 로 전달되어 WebRTC의 후보 목록에 후보를 추가하여 설정된 연결에 사용할 것을 고려합니다.</target>
        </trans-unit>
        <trans-unit id="9c1ec9484f4f7063944e7de5893341a0637b76b2" translate="yes" xml:space="preserve">
          <source>The new element will be given an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/is&quot;&gt;is&lt;/a&gt;&lt;/code&gt; attribute whose value is the custom element's tag name.</source>
          <target state="translated">새 요소에는 값이 사용자 정의 요소의 태그 이름 인 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/is&quot;&gt;is&lt;/a&gt;&lt;/code&gt; 속성이 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="4fa69383511027c5851d8d49ce933a80085d6c89" translate="yes" xml:space="preserve">
          <source>The new keyword can be used for defining a new VTTRegion object which can then be used for containing the multiple cues. There are several properties of VTTRegion which are width, lines, regionAnchorX, RegionAnchorY, viewportAnchorX, viewportAnchorY and scroll that can be used to specify the look and feel of this VTT region. The interface code is given below which can be used to expose the WebVTT regions in DOM API:</source>
          <target state="translated">new 키워드는 새로운 VTTRegion 객체를 정의하는 데 사용될 수 있으며, 그 후 여러 큐를 포함하는 데 사용될 수 있습니다. VTTRegion에는 너비, 선, regionAnchorX, RegionAnchorY, viewportAnchorX, viewportAnchorY 및 스크롤 인 VTTRegion의 여러 속성이 있으며이 VTT 영역의 모양과 느낌을 지정하는 데 사용할 수 있습니다. DOM API에서 WebVTT 영역을 노출하는 데 사용할 수있는 인터페이스 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="840c66f2689e9a1e68da13ee95dcef4fe3c1b5ad" translate="yes" xml:space="preserve">
          <source>The new list element is inserted into the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; block by calling its &lt;a href=&quot;../node/appendchild&quot;&gt;&lt;code&gt;Node.appendChild()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../node/appendchild&quot;&gt; &lt;code&gt;Node.appendChild()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 새 목록 요소가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt; 블록에 삽입됩니다 .</target>
        </trans-unit>
        <trans-unit id="c846d51d76fa98dbbb92191a4f726dea259edd23" translate="yes" xml:space="preserve">
          <source>The new node is inserted at the start boundary point of the &lt;code&gt;Range&lt;/code&gt;. If the new node is to be added to a text &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt;, that &lt;code&gt;Node&lt;/code&gt; is split at the insertion point, and the insertion occurs between the two text nodes.</source>
          <target state="translated">새 노드가 &lt;code&gt;Range&lt;/code&gt; 의 시작 경계 지점에 삽입됩니다 . 새 노드가 텍스트 &lt;a href=&quot;../node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; 에&lt;/a&gt; 추가 되면 해당 &lt;code&gt;Node&lt;/code&gt; 가 삽입 점에서 분할되고 두 텍스트 노드 사이에 삽입이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8c4792cabb7d7bb5cc3ba4eacdfc1fd7b82098c3" translate="yes" xml:space="preserve">
          <source>The new node that will be a clone of &lt;code&gt;node&lt;/code&gt;</source>
          <target state="translated">노드의 복제가 될 새로운 &lt;code&gt;node&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5da44118b2d5be093cd46d507491f81e619d14f2" translate="yes" xml:space="preserve">
          <source>The new speed to set. This may be a positive number (to speed up or slow down the animation), a negative number (to make it play backwards), or zero (to effectively pause the animation).</source>
          <target state="translated">설정할 새로운 속도. 양수 (애니메이션 속도를 높이거나 늦추기 위해), 음수 (뒤로 재생하기 위해) 또는 0 (애니메이션을 효과적으로 일시 중지하기 위해) 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a326d6af17214e34ec51a6b3ac122e82f39e2e9" translate="yes" xml:space="preserve">
          <source>The new track has a resolution which is outside the bounds of the bounds of the current track; that is, the new track is either wider or taller than the current one.</source>
          <target state="translated">새로운 트랙의 해상도는 현재 트랙의 경계 범위를 벗어납니다. 즉, 새로운 트랙은 현재 트랙보다 넓거나 큽니다.</target>
        </trans-unit>
        <trans-unit id="a35c10acc77306cf39dd1c5b921c77b1c1aeabc8" translate="yes" xml:space="preserve">
          <source>The new track is a video track and its raw or pre-encoded state differs from that of the original track.</source>
          <target state="translated">새로운 트랙은 비디오 트랙이며 원시 또는 사전 인코딩 된 상태는 원래 트랙의 상태와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="45750fc8b4357bdc38ec2a975a019006f4b134ac" translate="yes" xml:space="preserve">
          <source>The new track is an audio track with a different number of channels fom the original.</source>
          <target state="translated">새로운 트랙은 원본과 다른 수의 채널을 가진 오디오 트랙입니다.</target>
        </trans-unit>
        <trans-unit id="efef25e593b0da5f3dfec542d81bff21e6a41e0f" translate="yes" xml:space="preserve">
          <source>The new track's &lt;code&gt;kind&lt;/code&gt; doesn't match the original track.</source>
          <target state="translated">새 트랙의 &lt;code&gt;kind&lt;/code&gt; 가 원본 트랙과 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d806897953eb68508b516ed3cc220f49d7b92d8b" translate="yes" xml:space="preserve">
          <source>The new track's frame rate is high enough to cause the codec's block rate to be exceeded.</source>
          <target state="translated">새로운 트랙의 프레임 속도는 코덱의 블록 속도를 초과 할 정도로 높습니다.</target>
        </trans-unit>
        <trans-unit id="402ee2ab24381413721c14320afac76912f1ba90" translate="yes" xml:space="preserve">
          <source>The new transceiver is added to the &lt;code&gt;RTCPeerConnection&lt;/code&gt;'s set of transceivers.</source>
          <target state="translated">새로운 트랜시버가 &lt;code&gt;RTCPeerConnection&lt;/code&gt; 의 트랜시버 세트에 추가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="92065811249e2bd91bad760c6f4803d4bddd912d" translate="yes" xml:space="preserve">
          <source>The new transceiver's &lt;a href=&quot;../rtcrtptransceiver/direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;&quot;sendrecv&quot;&lt;/code&gt;.</source>
          <target state="translated">새로운 트랜시버의 &lt;a href=&quot;../rtcrtptransceiver/direction&quot;&gt; &lt;code&gt;direction&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;&quot;sendrecv&quot;&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="6c93f3e0fb7d3c2702127b650c054a029d209739" translate="yes" xml:space="preserve">
          <source>The new transceiver's preferred directionality. This value is used to initialize the new &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../rtcrtptransceiver/direction&quot;&gt;&lt;code&gt;RTCRtpTransceiver.direction&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">새로운 트랜시버가 선호하는 방향성. 이 값은 새로운 &lt;a href=&quot;../rtcrtptransceiver&quot;&gt; &lt;code&gt;RTCRtpTransceiver&lt;/code&gt; &lt;/a&gt; 객체의 &lt;a href=&quot;../rtcrtptransceiver/direction&quot;&gt; &lt;code&gt;RTCRtpTransceiver.direction&lt;/code&gt; &lt;/a&gt; 속성 을 초기화하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="11187903d26379d5762e7b1dbd6a1c0ebad50a9f" translate="yes" xml:space="preserve">
          <source>The new transceiver's preferred directionality. This value is used to initialize the new &lt;a href=&quot;rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;rtcrtptransceiver/direction&quot;&gt;&lt;code&gt;RTCRtpTransceiver.direction&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">새로운 트랜시버가 선호하는 방향성. 이 값은 새로운 &lt;a href=&quot;rtcrtptransceiver&quot;&gt; &lt;code&gt;RTCRtpTransceiver&lt;/code&gt; &lt;/a&gt; 객체의 &lt;a href=&quot;rtcrtptransceiver/direction&quot;&gt; &lt;code&gt;RTCRtpTransceiver.direction&lt;/code&gt; &lt;/a&gt; 속성 을 초기화하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="8eec9458ef2a4b65f1084d0345f2ac175cd33808" translate="yes" xml:space="preserve">
          <source>The new value of the &lt;code&gt;key&lt;/code&gt;. The &lt;code&gt;newValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; when the change has been invoked by storage &lt;code&gt;clear()&lt;/code&gt; method or the &lt;code&gt;key&lt;/code&gt; has been removed from the storage. &lt;strong&gt;Read only.&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 의 새로운 값 . &lt;code&gt;newValue&lt;/code&gt; 인 &lt;code&gt;null&lt;/code&gt; 변경이 저장 호출되었을 때 &lt;code&gt;clear()&lt;/code&gt; 메소드 또는 &lt;code&gt;key&lt;/code&gt; 저장소에서 제거되었다. &lt;strong&gt;읽기 전용.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="217049ea4a1b5442891d8daf7f5c98748ed66721" translate="yes" xml:space="preserve">
          <source>The new value to be stored at the current position.</source>
          <target state="translated">현재 위치에 저장 될 새로운 값.</target>
        </trans-unit>
        <trans-unit id="e29f5e5ce5fec3f6e04a00b7b0a94444747aad58" translate="yes" xml:space="preserve">
          <source>The new value you want to set.</source>
          <target state="translated">설정하려는 새로운 값.</target>
        </trans-unit>
        <trans-unit id="633f8b0dc446df9331047c4bf78086249f7e7be5" translate="yes" xml:space="preserve">
          <source>The new version of the database in a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/versionchange&quot;&gt;versionchange&lt;/a&gt;&lt;/code&gt; transaction.</source>
          <target state="translated">A의 데이터베이스의 새로운 버전 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/versionchange&quot;&gt;versionchange&lt;/a&gt;&lt;/code&gt; 의 거래.</target>
        </trans-unit>
        <trans-unit id="1426dba996e4f807d689717ce43dd5d434e4c567" translate="yes" xml:space="preserve">
          <source>The new way to do it is to use the &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/IDBOpenDBRequest&quot;&gt;&lt;code&gt;IDBOpenDBRequest&lt;/code&gt;&lt;/a&gt; interface which has now the &lt;code&gt;onblocked&lt;/code&gt; handler and the newly needed &lt;code&gt;onupgradeneeded&lt;/code&gt; one.</source>
          <target state="translated">그것을 할 수있는 새로운 방법은 사용하는 것입니다 &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/IDBOpenDBRequest&quot;&gt; &lt;code&gt;IDBOpenDBRequest&lt;/code&gt; &lt;/a&gt; 지금이 인터페이스 &lt;code&gt;onblocked&lt;/code&gt; 핸들러 새로 필요 &lt;code&gt;onupgradeneeded&lt;/code&gt; 하나.</target>
        </trans-unit>
        <trans-unit id="72bf85d4a2f1c9f59cef6f38d94fc4035595a399" translate="yes" xml:space="preserve">
          <source>The newly constructed &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">새롭게 구성된 &lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="ce4dc16a693828f887903f8961519c639e9c32eb" translate="yes" xml:space="preserve">
          <source>The newly created object store.</source>
          <target state="translated">새로 작성된 오브젝트 저장소</target>
        </trans-unit>
        <trans-unit id="ac5941a057f01f0f816ad5e4bcdf4ed275f60244" translate="yes" xml:space="preserve">
          <source>The newly inserted rule's index within the stylesheet's rule-list.</source>
          <target state="translated">스타일 시트의 규칙 목록에 새로 삽입 된 규칙의 색인입니다.</target>
        </trans-unit>
        <trans-unit id="2d3d5f7a61cc2524505406b7aad16bd3403c449a" translate="yes" xml:space="preserve">
          <source>The next bit of the code has nothing to do with WebVR &amp;mdash; it just updates the rotation of the cube on each frame:</source>
          <target state="translated">다음 코드 비트는 WebVR과 아무 관련이 없습니다. 각 프레임에서 큐브의 회전을 업데이트하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="65519c09e710e352187cdb3c00a68d28a0aacfdd" translate="yes" xml:space="preserve">
          <source>The next change is to &lt;code&gt;initTexture()&lt;/code&gt;, which becomes much simpler, since it no longer needs to load an image file. Instead, all it does is create an empty texture object, put a single pixel in it, and set its filtering for later use:</source>
          <target state="translated">다음 변경은 &lt;code&gt;initTexture()&lt;/code&gt; 입니다. 이미지 파일을 더 이상로드 할 필요가 없기 때문에 훨씬 간단 해졌습니다. 대신 빈 텍스처 오브젝트를 만들고 그 안에 단일 픽셀을 넣고 나중에 사용할 수 있도록 필터링을 설정하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="f0202001eca2bf3e9f1851e14c0c4b4c27773429" translate="yes" xml:space="preserve">
          <source>The next example creates a new &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; which will use a single &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURN&lt;/a&gt; server which has multiple URLs. This is useful if the server is, for example, available both on &quot;turn&quot; and &quot;turns&quot; schemes, or if there's a fallback address available for the server.</source>
          <target state="translated">다음 예 는 여러 개의 URL이 있는 단일 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURN&lt;/a&gt; 서버를 사용 하는 새 &lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt; 을 작성 합니다. 예를 들어 서버가 &quot;턴&quot;및 &quot;턴&quot;방식으로 사용 가능하거나 서버에 사용 가능한 폴백 주소가있는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="fd45cc34cd12b844846552fec5fe3a73f8d5375e" translate="yes" xml:space="preserve">
          <source>The next example logs an object to the console, with the object's fields expandable using disclosure widgets:</source>
          <target state="translated">다음 예제는 공개 위젯을 사용하여 오브젝트의 필드를 확장 할 수있는 오브젝트를 콘솔에 로깅합니다.</target>
        </trans-unit>
        <trans-unit id="13ad29effe67c8f33ffe9812a49f0487f9aee43f" translate="yes" xml:space="preserve">
          <source>The next example removes the first child node inside the element with the id &lt;code&gt;&quot;foo&quot;&lt;/code&gt; if foo has child nodes.</source>
          <target state="translated">다음 예제는 foo에 자식 노드가있는 경우 id가 &lt;code&gt;&quot;foo&quot;&lt;/code&gt; 인 요소 내의 첫 번째 자식 노드를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="0d19656e75ba5dc7e1cec8a6982e6c2e37696889" translate="yes" xml:space="preserve">
          <source>The next example scans through all of the media's audio tracks, enabling any that are in the user's preferred language (taken from a variable &lt;code&gt;userLanguage&lt;/code&gt;) and disabling any others.</source>
          <target state="translated">다음 예제는 모든 미디어의 오디오 트랙을 스캔하여 사용자가 선호하는 언어 (변수 &lt;code&gt;userLanguage&lt;/code&gt; 에서 가져옴 ) 로 된 것을 활성화하고 다른 것을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="0c47f03e1d3ef3a2b8b77834e6b8dad39f04dd7c" translate="yes" xml:space="preserve">
          <source>The next example scans through all of the media's video tracks, activating the first video track that is in the user's preferred language (taken from a variable &lt;code&gt;userLanguage&lt;/code&gt;).</source>
          <target state="translated">다음 예제는 모든 미디어의 비디오 트랙을 스캔하여 사용자가 선호하는 언어 인 첫 번째 비디오 트랙을 활성화합니다 (변수 &lt;code&gt;userLanguage&lt;/code&gt; 에서 가져옴 ).</target>
        </trans-unit>
        <trans-unit id="21047ccf34653b836795eafe4c0713c7c696d1f4" translate="yes" xml:space="preserve">
          <source>The next parameter is &lt;a href=&quot;../pannernode/distancemodel&quot;&gt;&lt;code&gt;distanceModel&lt;/code&gt;&lt;/a&gt; &amp;mdash; this can only be set to &lt;code&gt;linear&lt;/code&gt;, &lt;code&gt;inverse&lt;/code&gt;, or &lt;code&gt;exponential&lt;/code&gt;. These are different algorithms, which are used to reduce the volume of the audio source as it moves away from the listener. We'll use &lt;code&gt;linear&lt;/code&gt;, as it is simple:</source>
          <target state="translated">다음 매개 변수는 &lt;a href=&quot;../pannernode/distancemodel&quot;&gt; &lt;code&gt;distanceModel&lt;/code&gt; 입니다&lt;/a&gt; .이 값은 &lt;code&gt;linear&lt;/code&gt; , &lt;code&gt;inverse&lt;/code&gt; 또는 &lt;code&gt;exponential&lt;/code&gt; 로만 설정할 수 있습니다 . 이들은 다른 알고리즘으로, 청취자로부터 멀어 질 때 오디오 소스의 볼륨을 줄이는 데 사용됩니다. 우리 는 간단하므로 &lt;code&gt;linear&lt;/code&gt; 를 사용 합니다 :</target>
        </trans-unit>
        <trans-unit id="15ed184ff5047c101069cceae6da1ae03fc4378a" translate="yes" xml:space="preserve">
          <source>The next part of our code defines the grammar we want our app to recognise. The following variable is defined to hold our grammar:</source>
          <target state="translated">코드의 다음 부분은 앱이 인식 할 문법을 정의합니다. 문법을 유지하기 위해 다음 변수가 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="20c5bd50accbaf6aace02193948327b480652af3" translate="yes" xml:space="preserve">
          <source>The next rendering step involves:</source>
          <target state="translated">다음 렌더링 단계에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9a7cc7c90fa1054937c90cd941077ed878ccf86a" translate="yes" xml:space="preserve">
          <source>The next step is to connect the local peer to the remote by telling the remote peer about it. This is done by calling &lt;code&gt;remoteConnection.&lt;/code&gt;&lt;a href=&quot;../rtcpeerconnection/setremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt;&lt;/a&gt;. Now the &lt;code&gt;remoteConnection&lt;/code&gt; knows about the connection that's being built.</source>
          <target state="translated">다음 단계는 원격 피어에 정보를 제공하여 로컬 피어를 원격에 연결하는 것입니다. 이것은 &lt;code&gt;remoteConnection.&lt;/code&gt; 을 호출하여 수행됩니다 . &lt;a href=&quot;../rtcpeerconnection/setremotedescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt; &lt;/a&gt; . 이제 &lt;code&gt;remoteConnection&lt;/code&gt; 은 작성중인 연결에 대해 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="11b84909e4a19511978db4e47091968fb73d78e5" translate="yes" xml:space="preserve">
          <source>The next step is to set up each connection with ICE candidate listeners; these will be called when there's a new ICE candidate to tell the other side about.</source>
          <target state="translated">다음 단계는 ICE 후보 리스너와의 각 연결을 설정하는 것입니다. 다른쪽에 대해 알려줄 새로운 ICE 후보자가있을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6e4d5d6650cca3e73d30618fd74a55a7f0d066ac" translate="yes" xml:space="preserve">
          <source>The next task is to get the media stream:</source>
          <target state="translated">다음 작업은 미디어 스트림을 얻는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0f43be3acc5d2494e1fc3ee3625b416ac549dff7" translate="yes" xml:space="preserve">
          <source>The next thing to do is define a speech recogntion instance to control the recognition for our application. This is done using the &lt;a href=&quot;../speechrecognition/speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition()&lt;/code&gt;&lt;/a&gt; constructor. We also create a new speech grammar list to contain our grammar, using the &lt;a href=&quot;../speechgrammarlist/speechgrammarlist&quot;&gt;&lt;code&gt;SpeechGrammarList()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">다음으로해야 할 일은 응용 프로그램의 인식을 제어하기 위해 음성 인식 인스턴스를 정의하는 것입니다. 이는 &lt;a href=&quot;../speechrecognition/speechrecognition&quot;&gt; &lt;code&gt;SpeechRecognition()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 수행됩니다 . 또한 &lt;a href=&quot;../speechgrammarlist/speechgrammarlist&quot;&gt; &lt;code&gt;SpeechGrammarList()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 문법을 포함 할 새로운 음성 문법 목록을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c3824c4838eae2055b86dee46d4ca585aeb2cb2d" translate="yes" xml:space="preserve">
          <source>The next thing we do is to get the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GamepadPose&quot;&gt;&lt;code&gt;GamepadPose&lt;/code&gt;&lt;/a&gt; object for the controller stored in gpPose (by querying &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/pose&quot;&gt;&lt;code&gt;Gamepad.pose&lt;/code&gt;&lt;/a&gt;), and also store the current gamepad position and orientation for this frame in variables so they are easuy to access later. We also display the post stats for this frame in the DOM using the &lt;code&gt;displayPoseStats()&lt;/code&gt; function. All of this is only done if &lt;code&gt;gp&lt;/code&gt; actually has a value (if a gamepad is connected), which stops the demo erroring if we don't have our gamepad connected.</source>
          <target state="translated">다음 으로 gpPose에 저장된 컨트롤러 의 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GamepadPose&quot;&gt; &lt;code&gt;GamepadPose&lt;/code&gt; &lt;/a&gt; 객체 를 가져 오고 (Gamepad.pose를 쿼리 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/pose&quot;&gt; &lt;code&gt;Gamepad.pose&lt;/code&gt; &lt;/a&gt; )이 프레임의 현재 게임 패드 위치와 방향을 변수에 저장하여 나중에 쉽게 액세스 할 수 있도록합니다. 또한 &lt;code&gt;displayPoseStats()&lt;/code&gt; 함수를 사용하여 DOM에서이 프레임에 대한 포스트 통계를 표시 합니다. 이 모든 것은 &lt;code&gt;gp&lt;/code&gt; 에 실제로 게임 패드가 연결된 경우 값이있는 경우에만 수행되며 , 게임 패드가 연결되어 있지 않으면 데모 오류가 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="663e3eed70f1f941e5633d693cfe0793f1eeaf27" translate="yes" xml:space="preserve">
          <source>The next transformation method is scaling. We use it to increase or decrease the units in our canvas grid. This can be used to draw scaled down or enlarged shapes and bitmaps.</source>
          <target state="translated">다음 변환 방법은 스케일링입니다. 캔버스 그리드에서 단위를 늘리거나 줄이기 위해이 도구를 사용합니다. 축소 또는 확대 된 모양과 비트 맵을 그리는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="012703a15a96c6194e0dbc04cc3672e74e8792ec" translate="yes" xml:space="preserve">
          <source>The next type of paths available are &lt;a href=&quot;http://en.wikipedia.org/wiki/B%C3%A9zier_curve&quot;&gt;B&amp;eacute;zier curves&lt;/a&gt;, available in both cubic and quadratic varieties. These are generally used to draw complex organic shapes.</source>
          <target state="translated">사용 가능한 다음 경로 유형은 3 차 및 2 차 품종으로 제공되는 &lt;a href=&quot;http://en.wikipedia.org/wiki/B%C3%A9zier_curve&quot;&gt;베 지어 곡선&lt;/a&gt; 입니다. 이들은 일반적으로 복잡한 유기 모양을 그리는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3fa592d27c05f5411a28ad4e0ac50fcbfb25d43a" translate="yes" xml:space="preserve">
          <source>The nice people here have manually copied my files up so you can take a &lt;a href=&quot;http://mdn.github.io/canvas-raycaster/&quot;&gt;look&lt;/a&gt;, and for your hacking enjoyment I've posted the individual file contents as code listings (see below).</source>
          <target state="translated">여기 멋진 사람들이 내 파일을 수동으로 복사하여 &lt;a href=&quot;http://mdn.github.io/canvas-raycaster/&quot;&gt;살펴볼&lt;/a&gt; 수 있으며 해킹을 즐기기 위해 개별 파일 내용을 코드 목록으로 게시했습니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="0b40fcb029eb6031f4d4868c8631a407b81900a5" translate="yes" xml:space="preserve">
          <source>The node at the end of the selection.</source>
          <target state="translated">선택 끝의 노드입니다.</target>
        </trans-unit>
        <trans-unit id="c1cdcdf50a0da67ee27c86ece93e4489e849eae9" translate="yes" xml:space="preserve">
          <source>The node at the start of the selection.</source>
          <target state="translated">선택 시작시 노드입니다.</target>
        </trans-unit>
        <trans-unit id="94ff982dcdbbe3ee2be9fad06dabc0e6dc11f360" translate="yes" xml:space="preserve">
          <source>The node from another document to be adopted.</source>
          <target state="translated">채택 할 다른 문서의 노드</target>
        </trans-unit>
        <trans-unit id="809eb12f5474532f889f8314a845fe38f3cbfad8" translate="yes" xml:space="preserve">
          <source>The node has already been started. This error occurs even if the node is no longer running because of a prior call to &lt;a href=&quot;stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">노드가 이미 시작되었습니다. 이 오류는 &lt;a href=&quot;stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt; 에 대한 이전 호출로 인해 노드가 더 이상 실행되지 않는 경우에도 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="968c415bc9c75715f17f21b9990e84eba89bd96f" translate="yes" xml:space="preserve">
          <source>The node has not been started by calling &lt;a href=&quot;start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; 를 호출하여 노드가 시작되지 않았습니다 .</target>
        </trans-unit>
        <trans-unit id="dc72a0a777cf8ffb325722d8957a047fcbdac979" translate="yes" xml:space="preserve">
          <source>The node is incorrect or has an incorrect ancestor for this operation. (Legacy code value: &lt;code&gt;24&lt;/code&gt; and legacy constant name: &lt;code&gt;INVALID_NODE_TYPE_ERR&lt;/code&gt;)</source>
          <target state="translated">이 작업에 대한 노드가 잘못되었거나 조상이 잘못되었습니다. (레거시 코드 값 : &lt;code&gt;24&lt;/code&gt; 및 레거시 상수 이름 : &lt;code&gt;INVALID_NODE_TYPE_ERR&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="c6883deacf638ae90698998c5be88561cdf8e852" translate="yes" xml:space="preserve">
          <source>The node on which &lt;code&gt;disconnect()&lt;/code&gt; was called isn't connected to the specified &lt;code&gt;destination&lt;/code&gt; node.</source>
          <target state="translated">있는 노드 &lt;code&gt;disconnect()&lt;/code&gt; 호출 된이 지정된 연결되지 않은 &lt;code&gt;destination&lt;/code&gt; 노드입니다.</target>
        </trans-unit>
        <trans-unit id="dc4383580a21a9ef270eb317400cbc0620df78be" translate="yes" xml:space="preserve">
          <source>The node that is being looked for in the selection.</source>
          <target state="translated">선택에서 찾고있는 노드입니다.</target>
        </trans-unit>
        <trans-unit id="a2edcd220b6cb4996b2a95ad076949481309186c" translate="yes" xml:space="preserve">
          <source>The node to append to the given parent node (commonly an element).</source>
          <target state="translated">주어진 부모 노드에 추가 할 노드 (일반적으로 요소)</target>
        </trans-unit>
        <trans-unit id="e9dc71ddb7062d632c41576ac73ba173546fc776" translate="yes" xml:space="preserve">
          <source>The node to be cloned.</source>
          <target state="translated">복제 할 노드입니다.</target>
        </trans-unit>
        <trans-unit id="90bd1a54c9951a6d42790e923276fbc879c682b9" translate="yes" xml:space="preserve">
          <source>The node tree hierarchy is not correct. (Legacy code value: &lt;code&gt;3&lt;/code&gt; and legacy constant name: &lt;code&gt;HIERARCHY_REQUEST_ERR&lt;/code&gt;)</source>
          <target state="translated">노드 트리 계층 구조가 올바르지 않습니다. (레거시 코드 값 : &lt;code&gt;3&lt;/code&gt; 및 레거시 상수 이름 : &lt;code&gt;HIERARCHY_REQUEST_ERR&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f15ae65dda0578f798d658904d73c7b6186a648f" translate="yes" xml:space="preserve">
          <source>The node within which the focus will be moved.</source>
          <target state="translated">포커스가 이동 될 노드입니다.</target>
        </trans-unit>
        <trans-unit id="26b005b3bbe7fb4c66ce067c48a62f263bd56461" translate="yes" xml:space="preserve">
          <source>The non-standard, read-only &lt;a href=&quot;../uievent&quot;&gt;&lt;code&gt;UIEvent&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;&lt;strong&gt;pageX&lt;/strong&gt;&lt;/code&gt; returns the horizontal coordinate of the event relative to the whole document.</source>
          <target state="translated">비표준, 읽기 전용 &lt;a href=&quot;../uievent&quot;&gt; &lt;code&gt;UIEvent&lt;/code&gt; &lt;/a&gt; 속성 &lt;code&gt;&lt;strong&gt;pageX&lt;/strong&gt;&lt;/code&gt; 는 전체 문서를 기준으로 이벤트의 가로 좌표를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="02939acfae0d8f4e472aa7548d6dabcdf81fff36" translate="yes" xml:space="preserve">
          <source>The normalized pressure of the pointer input in the range 0 to 1, where 0 and 1 represent the minimum and maximum pressure the hardware is capable of detecting, respectively.</source>
          <target state="translated">0에서 1 사이의 포인터 입력의 정규화 된 압력. 여기서 0과 1은 하드웨어가 각각 감지 할 수있는 최소 및 최대 압력을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cedfb91c735d5f0fc82f351c59d515e3521dbb9b" translate="yes" xml:space="preserve">
          <source>The normalized pressure of the pointer input in the range of 0 to 1, where 0 and 1 represent the minimum and maximum pressure the hardware is capable of detecting, respectively. For hardware that does not support pressure, including but not limited to mouse, the value MUST be 0.5 when the pointer is active and 0 otherwise.</source>
          <target state="translated">0에서 1 사이의 포인터 입력의 정규화 된 압력. 여기서 0과 1은 하드웨어가 각각 감지 할 수있는 최소 및 최대 압력을 나타냅니다. 마우스를 포함하지만 이에 국한되지 않는 압력을 지원하지 않는 하드웨어의 경우 포인터가 활성화되면 값은 0.5 여야하고 그렇지 않으면 0이어야합니다.</target>
        </trans-unit>
        <trans-unit id="c0402e0afc8d72e4c4288b51d7bc18e4d986bc21" translate="yes" xml:space="preserve">
          <source>The normalized tangential pressure of the pointer input (also known as barrel pressure or &lt;a href=&quot;https://en.wikipedia.org/wiki/Cylinder_stress&quot;&gt;cylinder stress&lt;/a&gt;) in the range -1 to 1, where 0 is the neutral position of the control.</source>
          <target state="translated">포인터 입력의 정규화 된 접선 압력 (배럴 압력 또는 &lt;a href=&quot;https://en.wikipedia.org/wiki/Cylinder_stress&quot;&gt;실린더 응력&lt;/a&gt; 이라고도 함 )은 -1에서 1 사이이며, 0은 컨트롤의 중립 위치입니다.</target>
        </trans-unit>
        <trans-unit id="47c50361f3d8ceec1a7eef1c2413f29988de3097" translate="yes" xml:space="preserve">
          <source>The notation name</source>
          <target state="translated">표기법 이름</target>
        </trans-unit>
        <trans-unit id="799789fa4113cd5d8f51e40e3f0dfd6ad373d33a" translate="yes" xml:space="preserve">
          <source>The notification's data can be any arbitrary data that you want associated with the notification.</source>
          <target state="translated">알림 데이터는 알림과 관련된 임의의 데이터 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3cb8e920e8e785aa3dbf9236c0c65418d32abd6" translate="yes" xml:space="preserve">
          <source>The notification's timestamp can represent the time, in milliseconds since 00:00:00 UTC on 1 January 1970, of the event for which the notification was created, or it can be an arbitrary timestamp that you want associated with the notification. For example, a timestamp for an upcoming meeting could be set in the future, whereas a timestamp for a missed message could be set in the past.</source>
          <target state="translated">알림의 타임 스탬프는 알림이 생성 된 이벤트의 1970 년 1 월 1 일 00:00:00 UTC 이후의 시간 (밀리 초)을 나타내거나 알림과 관련된 임의의 타임 스탬프 일 수 있습니다. 예를 들어 앞으로 예정된 회의의 타임 스탬프를 설정하고 부재 중 메시지의 타임 스탬프를 과거에 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9997e9506c6c92a6d9395c300e0f75b460dc5d9b" translate="yes" xml:space="preserve">
          <source>The notifications API spec lists four events that are triggered on the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; instance:</source>
          <target state="translated">알림 API 사양은 &lt;a href=&quot;../notification&quot;&gt; &lt;code&gt;Notification&lt;/code&gt; &lt;/a&gt; 인스턴스 에서 트리거되는 네 가지 이벤트를 나열 합니다.</target>
        </trans-unit>
        <trans-unit id="96861bce60a01b6634a460d7f9744dbcce397d6a" translate="yes" xml:space="preserve">
          <source>The number of &lt;a href=&quot;touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; objects in the &lt;code&gt;TouchList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TouchList&lt;/code&gt; 의 &lt;a href=&quot;touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt; 객체 수입니다 .</target>
        </trans-unit>
        <trans-unit id="efbe8d22cec5001fbddeffd29213ce19d70f32d2" translate="yes" xml:space="preserve">
          <source>The number of &lt;strong&gt;logical processor cores&lt;/strong&gt; is a way to measure the number of threads which can effectively be run at once without them having to share CPUs. Modern computers have multiple physical cores in their CPU (two or four cores is typical), but each physical core is also usually able to run more than one thread at a time using advanced scheduling techniques. So a four-core CPU may return 8. The browser may, however, choose to reduce the number in order to represent more accurately the number of &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;s that can run at once</source>
          <target state="translated">의 수는 &lt;strong&gt;논리 프로세서 코어는&lt;/strong&gt; 효율적으로 공유 CPU를 할 필요없이 한 번에 실행할 수있는 스레드의 수를 측정하는 방법입니다. 최신 컴퓨터에는 CPU에 여러 개의 물리적 코어가 있지만 (두 개 또는 네 개의 코어가 일반적 임) 각 물리적 코어는 일반적으로 고급 스케줄링 기술을 사용하여 한 번에 둘 이상의 스레드를 실행할 수 있습니다. 따라서 4 코어 CPU는 8을 반환 할 수 있습니다. 그러나 브라우저는 한 번에 실행할 수있는 &lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt; 수를보다 정확하게 나타 내기 위해 숫자를 줄 이도록 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cde37db42c5afb4694a3dd03d1036c28df2c9dcf" translate="yes" xml:space="preserve">
          <source>The number of a device-specific configuration.</source>
          <target state="translated">장치 별 구성의 수입니다.</target>
        </trans-unit>
        <trans-unit id="c3743f459177be40ccaf2ee7d8738e95bf91a284" translate="yes" xml:space="preserve">
          <source>The number of a device-specific endpoint (buffer).</source>
          <target state="translated">장치 별 엔드 포인트 (버퍼)의 수입니다.</target>
        </trans-unit>
        <trans-unit id="1d002abf050fca12fc7759562d22c94648bba9ac" translate="yes" xml:space="preserve">
          <source>The number of alternatives contained in the result depends on what the &lt;a href=&quot;../speechrecognition/maxalternatives&quot;&gt;&lt;code&gt;SpeechRecognition.maxAlternatives&lt;/code&gt;&lt;/a&gt; property was set to when the speech recognition was first initiated.</source>
          <target state="translated">결과에 포함 된 대체 수는 음성 인식을 처음 시작할 때 &lt;a href=&quot;../speechrecognition/maxalternatives&quot;&gt; &lt;code&gt;SpeechRecognition.maxAlternatives&lt;/code&gt; &lt;/a&gt; 속성이 설정 한 내용에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="5d9fd7e7639d716312f6bec4cf90bd88bd5bb17a" translate="yes" xml:space="preserve">
          <source>The number of audio channels available on a signal is frequently presented in a numeric format, such as 2.0 or 5.1. This is called &lt;a href=&quot;https://en.wikipedia.org/wiki/Surround_sound#Channel_notation&quot;&gt;channel notation&lt;/a&gt;. The first number is the total number of audio channels that the signal includes. The number after the period indicates the number of those channels which are reserved for low-frequency effect (LFE) outputs; these are often referred to as &lt;strong&gt;subwoofers&lt;/strong&gt;.</source>
          <target state="translated">신호에서 사용할 수있는 오디오 채널 수는 종종 2.0 또는 5.1과 같은 숫자 형식으로 표시됩니다. 이것을 &lt;a href=&quot;https://en.wikipedia.org/wiki/Surround_sound#Channel_notation&quot;&gt;채널 표기법&lt;/a&gt; 이라고 합니다 . 첫 번째 숫자는 신호에 포함 된 총 오디오 채널 수입니다. 주기 이후의 숫자는 LFE (Low-Frequency Effect) 출력용으로 예약 된 채널 수를 나타냅니다. 이들은 종종 &lt;strong&gt;서브 우퍼&lt;/strong&gt; 라고합니다 .</target>
        </trans-unit>
        <trans-unit id="7fe85c7a0d030fcceac26b8abe5be1fcb346257f" translate="yes" xml:space="preserve">
          <source>The number of bits of precision that can be represented. For integer formats this value is always 0.</source>
          <target state="translated">표현할 수있는 정밀도의 비트 수입니다. 정수 형식의 경우이 값은 항상 0입니다.</target>
        </trans-unit>
        <trans-unit id="a2f70db77214b8e14904d7fde6bafc3f7d6ff7ca" translate="yes" xml:space="preserve">
          <source>The number of bits used to hold the query result for the given target.</source>
          <target state="translated">주어진 대상에 대한 쿼리 결과를 보유하는 데 사용되는 비트 수입니다.</target>
        </trans-unit>
        <trans-unit id="e2372431c7c6369969d5fcd302aac0df1bb1bf52" translate="yes" xml:space="preserve">
          <source>The number of bytes of data currently queued to be sent over the data channel but have not yet been sent.</source>
          <target state="translated">현재 데이터 채널을 통해 전송 대기 중이지만 아직 전송되지 않은 데이터의 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="e722b81dc5743a37af0f80cb552971786f1eba8c" translate="yes" xml:space="preserve">
          <source>The number of bytes of queued data.</source>
          <target state="translated">대기중인 데이터의 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="db37c948e1aed3d7c8be314c3f63262188772145" translate="yes" xml:space="preserve">
          <source>The number of channels in the input audio stream that you want to output separately; the default is 6 if this parameter is not specified.</source>
          <target state="translated">입력 오디오 스트림에서 별도로 출력하려는 ​​채널 수입니다. 이 매개 변수를 지정하지 않으면 기본값은 6입니다.</target>
        </trans-unit>
        <trans-unit id="ce3851a5e81392c527f3e4cfe6b84a169c922f97" translate="yes" xml:space="preserve">
          <source>The number of channels in the input audio streams, which the output stream will contain; the default is 6 if this parameter is not specified.</source>
          <target state="translated">출력 스트림에 포함될 입력 오디오 스트림의 채널 수입니다. 이 매개 변수를 지정하지 않으면 기본값은 6입니다.</target>
        </trans-unit>
        <trans-unit id="8727f7a0aa727a53b1337a81d3b5169512171492" translate="yes" xml:space="preserve">
          <source>The number of channels is defined by the value of &lt;code&gt;channelCount&lt;/code&gt;.</source>
          <target state="translated">채널 수는 &lt;code&gt;channelCount&lt;/code&gt; 값으로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="53b2b59a5a427b0fd8bc91ed6151b86e8406fbd2" translate="yes" xml:space="preserve">
          <source>The number of channels is equal to the maximum number of channels of all connections, &lt;em&gt;clamped&lt;/em&gt; to the value of &lt;code&gt;channelCount&lt;/code&gt;.</source>
          <target state="translated">채널 수는 모든 연결의 최대 채널 수와 같으며 &lt;code&gt;channelCount&lt;/code&gt; 값으로 &lt;em&gt;고정&lt;/em&gt; 됩니다 .</target>
        </trans-unit>
        <trans-unit id="87d7f172a1bfb2bb4c825471186eeca818175e51" translate="yes" xml:space="preserve">
          <source>The number of channels is equal to the maximum number of channels of all connections. In this case, &lt;code&gt;channelCount&lt;/code&gt; is ignored and only up-mixing happens.</source>
          <target state="translated">채널 수는 모든 연결의 최대 채널 수와 같습니다. 이 경우 &lt;code&gt;channelCount&lt;/code&gt; 는 무시되고 업 믹싱 만 발생합니다.</target>
        </trans-unit>
        <trans-unit id="316b488011d1c33c2acbd70862fce7d5e5c93ad0" translate="yes" xml:space="preserve">
          <source>The number of child nodes from the start of the anchor node that should be excluded from the selection. So for example, if the value is 0 the whole node is included. If the value is 1, the whole node minus the first child node is included. And so on.</source>
          <target state="translated">선택에서 제외해야하는 앵커 노드의 시작부터 하위 노드의 수입니다. 예를 들어, 값이 0이면 전체 노드가 포함됩니다. 값이 1이면 전체 노드에서 첫 번째 하위 노드를 뺀 값이 포함됩니다. 등등.</target>
        </trans-unit>
        <trans-unit id="4f29def6d08d013ccd4b1fa29404e2946a5ef95f" translate="yes" xml:space="preserve">
          <source>The number of child nodes from the start of the focus node that should be included in the selection. So for example, if the value is 0 the whole node is excluded. If the value is 1, the first child node is included. And so on.</source>
          <target state="translated">선택에 포함되어야하는 포커스 노드의 시작부터 자식 노드의 수입니다. 예를 들어, 값이 0이면 전체 노드가 제외됩니다. 값이 1이면 첫 번째 자식 노드가 포함됩니다. 등등.</target>
        </trans-unit>
        <trans-unit id="7501fca47effe759dca92624c170b5ae3c0f3032" translate="yes" xml:space="preserve">
          <source>The number of degrees downwards that the field of view extends in.</source>
          <target state="translated">화각이 확장되는 아래쪽 각도입니다.</target>
        </trans-unit>
        <trans-unit id="46910ba7e3a0368f44f1280afb3db3400f84e007" translate="yes" xml:space="preserve">
          <source>The number of degrees downwards that the field of view will extend in.</source>
          <target state="translated">시야각이 아래로 확장되는 각도입니다.</target>
        </trans-unit>
        <trans-unit id="d0074a9613f198f2ef03c10663dcfd55bdcf88b3" translate="yes" xml:space="preserve">
          <source>The number of degrees of rotation to apply to the described ellipse to align with the contact area between the user and the touch surface.</source>
          <target state="translated">사용자와 터치 표면 사이의 접촉 영역에 정렬하기 위해 설명 된 타원에 적용되는 회전 각도.</target>
        </trans-unit>
        <trans-unit id="0ab6cea78975eba961bf1ca0548dbff9f4ec6ffa" translate="yes" xml:space="preserve">
          <source>The number of degrees to the left that the field of view extends in.</source>
          <target state="translated">시야가 확장되는 왼쪽의 각도입니다.</target>
        </trans-unit>
        <trans-unit id="cb2aa593abed15545234b7422320dbb8a4e13834" translate="yes" xml:space="preserve">
          <source>The number of degrees to the left that the field of view will extend in.</source>
          <target state="translated">시야가 확장 될 왼쪽의 각도입니다.</target>
        </trans-unit>
        <trans-unit id="7b7e2849aad1e4f1ce0c53430509b4b794b109cc" translate="yes" xml:space="preserve">
          <source>The number of degrees to the right that the field of view extends in.</source>
          <target state="translated">시야가 확장되는 오른쪽의 각도입니다.</target>
        </trans-unit>
        <trans-unit id="550f2003b355dd55c3d46e032a5b378145ddbd40" translate="yes" xml:space="preserve">
          <source>The number of degrees to the right that the field of view will extend in.</source>
          <target state="translated">시야가 확장되는 오른쪽의 각도입니다.</target>
        </trans-unit>
        <trans-unit id="0bd10870e4038b238c6c20c6ca218f7a001ae936" translate="yes" xml:space="preserve">
          <source>The number of degrees upwards that the field of view extends in.</source>
          <target state="translated">화각이 확대되는 각도입니다.</target>
        </trans-unit>
        <trans-unit id="ef440326158da6519189c3064eda19981619f0f1" translate="yes" xml:space="preserve">
          <source>The number of degrees upwards that the field of view will extend in.</source>
          <target state="translated">화각이 확장 될 수있는 각도입니다.</target>
        </trans-unit>
        <trans-unit id="df69abc3b244a0603971a2251fdb1225667d2929" translate="yes" xml:space="preserve">
          <source>The number of drag data items in the list, or 0 if the list is empty or disabled. The drag item list is considered to be disabled if the item list's &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object is not associated with a drag data store.</source>
          <target state="translated">목록의 끌기 데이터 항목 수 또는 목록이 비어 있거나 비활성화 된 경우 0 항목 목록의 &lt;a href=&quot;../datatransfer&quot;&gt; &lt;code&gt;DataTransfer&lt;/code&gt; &lt;/a&gt; 객체가 끌기 데이터 저장소와 연결되어 있지 않으면 끌기 항목 목록이 비활성화 된 것으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="a3a4a4db116235bcb3dda1ac04352387aacd4096" translate="yes" xml:space="preserve">
          <source>The number of filters does not specifiy the number of devices shown by the user agent. For example, if only a USB device with product ID 0xa800 is found, then only one device will be listed by the user agent. On the other hand if the user agent finds two of the first listed device and one of the second, then all three devices will be listed.</source>
          <target state="translated">필터 수는 사용자 에이전트가 표시하는 장치 수를 지정하지 않습니다. 예를 들어, 제품 ID가 0xa800 인 USB 장치 만 있으면 사용자 에이전트가 하나의 장치 만 나열합니다. 반면에 사용자 에이전트가 첫 번째로 나열된 장치 중 두 개와 두 번째 중 하나를 찾으면 세 개의 장치가 모두 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="18170293f5095a67ef38fea447bf5dd5bc8bd221" translate="yes" xml:space="preserve">
          <source>The number of form controls within the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;. This is the same as the number of the elements in the &lt;a href=&quot;../htmlformcontrolscollection&quot;&gt;&lt;code&gt;HTMLFormControlsCollection&lt;/code&gt;&lt;/a&gt; returned by the &lt;a href=&quot;elements&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 내의 양식 컨트롤 수입니다 . 이것은 &lt;a href=&quot;elements&quot;&gt; &lt;code&gt;elements&lt;/code&gt; &lt;/a&gt; 속성에 의해 반환되는 &lt;a href=&quot;../htmlformcontrolscollection&quot;&gt; &lt;code&gt;HTMLFormControlsCollection&lt;/code&gt; &lt;/a&gt; 의 요소 수와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="59c20253be6ba0943de342b6137ed6b43a01c42a" translate="yes" xml:space="preserve">
          <source>The number of frames which have been</source>
          <target state="translated">프레임 수</target>
        </trans-unit>
        <trans-unit id="e56391c93683cf30c12252d6fe04e0d4bc26bcb5" translate="yes" xml:space="preserve">
          <source>The number of input channels in the audio stream.</source>
          <target state="translated">오디오 스트림의 입력 채널 수입니다.</target>
        </trans-unit>
        <trans-unit id="3b0ec35c37c9bedffdb792ad75088830399024d2" translate="yes" xml:space="preserve">
          <source>The number of items in the array.</source>
          <target state="translated">배열의 항목 수입니다.</target>
        </trans-unit>
        <trans-unit id="f1f798cd1bcf3388c5823cb438fa9a19c9ecc858" translate="yes" xml:space="preserve">
          <source>The number of items in the list.</source>
          <target state="translated">목록의 항목 수입니다.</target>
        </trans-unit>
        <trans-unit id="14967b2ef3b1fe9b7ffd1ce55242babd2bea97b9" translate="yes" xml:space="preserve">
          <source>The number of milliseconds each iteration of the animation takes to complete. Defaults to 0. Although this is technically optional, keep in mind that your animation will not run if this value is 0.</source>
          <target state="translated">애니메이션의 각 반복이 완료되는 데 걸리는 시간 (밀리 초)입니다. 기술적으로는 선택 사항이지만이 값이 0이면 애니메이션이 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="683d96cd7dd20529422424bcd56ff146cc833ec6" translate="yes" xml:space="preserve">
          <source>The number of milliseconds long a single beginning-to-end iteration of the animation should take. The default is &lt;code&gt;&quot;auto&quot;&lt;/code&gt;. This value must not be negative; otherwise, it can have any value (including positive infinity).</source>
          <target state="translated">애니메이션의 단일 시작부터 끝까지 반복하는 데 걸리는 시간 (밀리 초)입니다. 기본값은 &lt;code&gt;&quot;auto&quot;&lt;/code&gt; 입니다. 이 값은 음수가 아니어야합니다. 그렇지 않으면 양의 무한대를 포함한 모든 값을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="933193f6294ca35c147f2a1056e9aadfc757cc70" translate="yes" xml:space="preserve">
          <source>The number of milliseconds over which the browser may continue to attempt to transmit the message until it either succeeds or gives up. If not set when &lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt;&lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt;&lt;/a&gt; was called to create the data channel, this value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">브라우저가 성공하거나 포기할 때까지 메시지 전송을 계속 시도 할 수있는 시간 (밀리 초)입니다. &lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt; &lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt; &lt;/a&gt; 을 호출하여 데이터 채널을 작성할 때 설정되지 않은 경우이 값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1256524eb6ce59ebd55b08ea767551f33ddef37c" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to delay after the end of an animation. This is primarily of use when sequencing animations based on the end time of another animation. Defaults to 0.</source>
          <target state="translated">애니메이션이 끝난 후 지연되는 시간 (밀리 초)입니다. 다른 애니메이션의 종료 시간을 기준으로 애니메이션을 시퀀싱 할 때 주로 사용됩니다. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="5b0b349358d28f59ed583a58b44daf964a8a37ac" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to delay the start of the animation. Defaults to 0.</source>
          <target state="translated">애니메이션 시작을 지연시키는 시간 (밀리 초)입니다. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="9b57f1d889b2d42a982c0ce5d8fb6b4bc0a01764" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to record into each &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;. If this parameter isn't included, the entire media duration is recorded into a single &lt;code&gt;Blob&lt;/code&gt; unless the &lt;a href=&quot;requestdata&quot;&gt;&lt;code&gt;requestData()&lt;/code&gt;&lt;/a&gt; method is called to obtain the &lt;code&gt;Blob&lt;/code&gt; and trigger the creation of a new &lt;code&gt;Blob&lt;/code&gt; into which the media continues to be recorded.</source>
          <target state="translated">각 &lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt; 에 기록 할 시간 (밀리 초) 입니다. 이 매개 변수가 포함되어 있지 않으면 &lt;a href=&quot;requestdata&quot;&gt; &lt;code&gt;requestData()&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 &lt;code&gt;Blob&lt;/code&gt; 을 얻지 않고 미디어가 계속 기록되는 새 &lt;code&gt;Blob&lt;/code&gt; 만들기를 트리거 하지 않는 한 전체 미디어 기간이 단일 &lt;code&gt;Blob&lt;/code&gt; 에 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="e1440568a832c81fa0471dec58a38037eeda2255" translate="yes" xml:space="preserve">
          <source>The number of nodes in the &lt;code&gt;NodeList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NodeList&lt;/code&gt; 의 노드 수입니다 .</target>
        </trans-unit>
        <trans-unit id="bb66f479fd694f60bd95e9d9addd7c2e255c45da" translate="yes" xml:space="preserve">
          <source>The number of output channels in the audio stream.</source>
          <target state="translated">오디오 스트림의 출력 채널 수입니다.</target>
        </trans-unit>
        <trans-unit id="35755bdfbe4453b2f7ad8307c4b580060bf7cf64" translate="yes" xml:space="preserve">
          <source>The number of plugins in the array.</source>
          <target state="translated">배열의 플러그인 수입니다.</target>
        </trans-unit>
        <trans-unit id="bf3abe5e2ae81f6b42746080da17d103008fc35b" translate="yes" xml:space="preserve">
          <source>The number of properties. See the &lt;a href=&quot;cssstyledeclaration/item&quot;&gt;&lt;code&gt;item()&lt;/code&gt;&lt;/a&gt; method below.</source>
          <target state="translated">속성 수 아래의 &lt;a href=&quot;cssstyledeclaration/item&quot;&gt; &lt;code&gt;item()&lt;/code&gt; &lt;/a&gt; 메소드를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4a9bdbffe9a45f7451205b35bbf5f321fdc77574" translate="yes" xml:space="preserve">
          <source>The number of queued outgoing data bytes below which the buffer is considered to be &quot;low.&quot;</source>
          <target state="translated">버퍼가 &quot;낮은&quot;것으로 간주되는 큐잉 된 발신 데이터 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="2eb105ff5f5eadd6b4563b9796ca85032d69171f" translate="yes" xml:space="preserve">
          <source>The number of texture units is implementation dependent, you can get this number with the help of the &lt;code&gt;MAX_COMBINED_TEXTURE_IMAGE_UNITS&lt;/code&gt; constant. It is, per specification, at least 8.</source>
          <target state="translated">텍스처 유닛의 수는 구현에 따라 다르며 &lt;code&gt;MAX_COMBINED_TEXTURE_IMAGE_UNITS&lt;/code&gt; 상수를 사용 하여이 수를 얻을 수 있습니다 . 사양에 따라 8 이상입니다.</target>
        </trans-unit>
        <trans-unit id="5f6b3a5cc4cf1a0e8fc8c41986e1cb18dceec66e" translate="yes" xml:space="preserve">
          <source>The number of times the animation should repeat. Defaults to &lt;code&gt;1&lt;/code&gt;, and can also take a value of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; to make it repeat for as long as the element exists.</source>
          <target state="translated">애니메이션이 반복되어야하는 횟수입니다. 기본값은 &lt;code&gt;1&lt;/code&gt; 이며 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt; 값을 가져 와서 요소가 존재하는 한 반복되도록 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="38991625820099d023e9148b47a9c204d93a1987" translate="yes" xml:space="preserve">
          <source>The number of times the receiver notified the sender that one or more RTP packets has been lost by sending a Negative ACKnowledgement (NACK, also called &quot;Generic NACK&quot;) packet to the sender. This value is only available to the receiver.</source>
          <target state="translated">수신자가 발신자에게 부정 승인 (NACK, &quot;Generic NACK&quot;이라고도 함) 패킷을 전송하여 하나 이상의 RTP 패킷이 유실되었음을 발신자에게 통지 한 횟수입니다. 이 값은 수신자에게만 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="2a21953e3a4e85719ea4c37affda6a15a2b60aeb" translate="yes" xml:space="preserve">
          <source>The number of times the receiver notified the sender that one or more consecutive (in scan order) encoded video macroblocks have been lost or corrupted; this notification is sent by the receiver to the sender using a Slice Loss Indication (SLI) packet. This is a fairly technical part of how codecs work and while the higher this value is, the more errors occurred in the stream, generally most of the time this value is only interesting to very intensively hardcore media developers.</source>
          <target state="translated">수신기가 하나 이상의 연속적인 (스캔 순서로) 인코딩 된 비디오 매크로 블록이 손실 또는 손상되었다는 것을 발신자에게 통지 한 횟수; 이 알림은 SLI (Slice Loss Indication) 패킷을 사용하여 수신자가 발신자에게 보냅니다. 이것은 코덱 작동 방식의 기술적 인 부분이며이 값이 높을수록 스트림에서 더 많은 오류가 발생합니다. 일반적으로이 값은 대부분 매우 집중적 인 하드 코어 미디어 개발자에게만 흥미 롭습니다.</target>
        </trans-unit>
        <trans-unit id="421b9982b9e3ff143738678a8bf895b051ff6a4a" translate="yes" xml:space="preserve">
          <source>The number of times the receiving end of the stream sent a Picture Loss Indiciation (PLI) packet to the sender, indicating that it has lost some amount of encoded video data for one or more frames. Only the receiver has this value, and it's only valid for video tracks.</source>
          <target state="translated">스트림의 수신 측이 발신자에게 PLI (Picture Loss Indiciation) 패킷을 보낸 횟수로, 하나 이상의 프레임에 대해 인코딩 된 비디오 데이터의 양이 손실되었음을 나타냅니다. 수신기에만이 값이 있으며 비디오 트랙에만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="ae4c2c7c0a5e8ef2c588a984c110b2351007c57c" translate="yes" xml:space="preserve">
          <source>The number of times this animation has looped, starting from &lt;code&gt;0&lt;/code&gt;. Returns &lt;code&gt;null&lt;/code&gt; if the animation is not running or its &lt;code&gt;KeyframeEffect&lt;/code&gt; isn't associated with an &lt;code&gt;Animation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 부터 시작하여이 애니메이션이 반복 된 횟수입니다 . 애니메이션이 실행 중이 아니거나 &lt;code&gt;KeyframeEffect&lt;/code&gt; 가 &lt;code&gt;Animation&lt;/code&gt; 과 연결되어 있지 않은 경우 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="f5edd6f4b0d754a9fd396af9085a3caf16f65cae" translate="yes" xml:space="preserve">
          <source>The number of times to move the cursor forward.</source>
          <target state="translated">커서를 앞으로 이동하는 횟수입니다.</target>
        </trans-unit>
        <trans-unit id="a54cd64e3c383cb5275ae9259806946b89d14fc4" translate="yes" xml:space="preserve">
          <source>The number of touch points in &lt;code&gt;touchList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;touchList&lt;/code&gt; 의 터치 포인트 수입니다 .</target>
        </trans-unit>
        <trans-unit id="356ca446a244fdf26d6766442fee3e9bbc58af35" translate="yes" xml:space="preserve">
          <source>The number of tracks in the list.</source>
          <target state="translated">목록의 트랙 수입니다.</target>
        </trans-unit>
        <trans-unit id="016575cd042a7bb1dd546840a9fc38b06e82e6a4" translate="yes" xml:space="preserve">
          <source>The number records to return. If this value exceeds the number of records in the query, the browser will only retrieve the first item. If it is lower than &lt;code&gt;0&lt;/code&gt; or greater than &lt;code&gt;2&lt;sup&gt;32&lt;/sup&gt;-1&lt;/code&gt; a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception will be thrown.</source>
          <target state="translated">반환 할 숫자 레코드입니다. 이 값이 쿼리의 레코드 수를 초과하면 브라우저는 첫 번째 항목 만 검색합니다. 이 이하이면 &lt;code&gt;0&lt;/code&gt; 또는 이상 &lt;code&gt;2&lt;sup&gt;32&lt;/sup&gt;-1&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt; 예외가 발생한다.</target>
        </trans-unit>
        <trans-unit id="9fbcf07bdcf7563a103853f672eb70cef2430cad" translate="yes" xml:space="preserve">
          <source>The object URL is a string identifying the &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object. Each time you call &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;window.URL.createObjectURL()&lt;/code&gt;&lt;/a&gt;, a unique object URL is created even if you've created an object URL for that file already. Each of these must be released. While they are released automatically when the document is unloaded, if your page uses them dynamically you should release them explicitly by calling &lt;a href=&quot;../url/revokeobjecturl&quot;&gt;&lt;code&gt;window.URL.revokeObjectURL()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">객체 URL은 &lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 객체를 식별하는 문자열 입니다. &lt;a href=&quot;../url/createobjecturl&quot;&gt; &lt;code&gt;window.URL.createObjectURL()&lt;/code&gt; &lt;/a&gt; 을 호출 할 때마다 해당 파일에 대한 객체 URL을 이미 생성 한 경우에도 고유 한 객체 URL이 생성됩니다. 이들 각각을 해제해야합니다. 문서가 언로드 될 때 자동으로 해제되지만 페이지에서 동적으로 사용하는 경우 &lt;a href=&quot;../url/revokeobjecturl&quot;&gt; &lt;code&gt;window.URL.revokeObjectURL()&lt;/code&gt; &lt;/a&gt; 을 호출하여 명시 적으로 해제해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8f7e1152eec6e565328f5aa0532375cefa4fb5d9" translate="yes" xml:space="preserve">
          <source>The object can not be cloned. (Legacy code value: &lt;code&gt;25&lt;/code&gt; and legacy constant name: &lt;code&gt;DATA_CLONE_ERR&lt;/code&gt;)</source>
          <target state="translated">개체를 복제 할 수 없습니다. (레거시 코드 값 : &lt;code&gt;25&lt;/code&gt; 및 레거시 상수 이름 : &lt;code&gt;DATA_CLONE_ERR&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="41fae5493a7c616ab9a91eca1fab3576993b28b2" translate="yes" xml:space="preserve">
          <source>The object cannot be found here. (Legacy code value: &lt;code&gt;8&lt;/code&gt; and legacy constant name: &lt;code&gt;NOT_FOUND_ERR&lt;/code&gt;)</source>
          <target state="translated">여기서 개체를 찾을 수 없습니다. (레거시 코드 값 : &lt;code&gt;8&lt;/code&gt; 및 레거시 상수 이름 : &lt;code&gt;NOT_FOUND_ERR&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="86e52dcd4de5c09e6c89741d56c0a004960e3ca0" translate="yes" xml:space="preserve">
          <source>The object cannot be modified in this way. (Legacy code value: &lt;code&gt;13&lt;/code&gt; and legacy constant name: &lt;code&gt;INVALID_MODIFICATION_ERR&lt;/code&gt;)</source>
          <target state="translated">이런 방식으로 개체를 수정할 수 없습니다. (레거시 코드 값 : &lt;code&gt;13&lt;/code&gt; 및 레거시 상수 이름 : &lt;code&gt;INVALID_MODIFICATION_ERR&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b9cac598d3cb6c14b988bfdaef4cf39d84105039" translate="yes" xml:space="preserve">
          <source>The object cannot be modified. (Legacy code value: &lt;code&gt;7&lt;/code&gt; and legacy constant name: &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt;)</source>
          <target state="translated">개체를 수정할 수 없습니다. (레거시 코드 값 : &lt;code&gt;7&lt;/code&gt; 및 레거시 상수 이름 : &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="81cbc7340c035ecf29968c2df345ce1301f54757" translate="yes" xml:space="preserve">
          <source>The object does not support the operation or argument. (Legacy code value: &lt;code&gt;15&lt;/code&gt; and legacy constant name: &lt;code&gt;INVALID_ACCESS_ERR&lt;/code&gt;)</source>
          <target state="translated">개체가 작업이나 인수를 지원하지 않습니다. (레거시 코드 값 : &lt;code&gt;15&lt;/code&gt; 및 레거시 상수 이름 : &lt;code&gt;INVALID_ACCESS_ERR&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="73e925e320c0509a668a953ed018af76dc69754b" translate="yes" xml:space="preserve">
          <source>The object is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats&quot;&gt;&lt;code&gt;RTCIceCandidateStats&lt;/code&gt;&lt;/a&gt; object containing statistics about the remote candidate's &lt;a href=&quot;rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt;. This may include information such as the type of network, the protocol, the URL, the type of relay being used, and so forth.</source>
          <target state="translated">객체는 원격 후보의 &lt;a href=&quot;rtcicetransport&quot;&gt; &lt;code&gt;RTCIceTransport&lt;/code&gt; 에&lt;/a&gt; 대한 통계를 포함 하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats&quot;&gt; &lt;code&gt;RTCIceCandidateStats&lt;/code&gt; &lt;/a&gt; 객체 입니다. 여기에는 네트워크 유형, 프로토콜, URL, 사용중인 릴레이 유형 등과 같은 정보가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c6ae28269d9e29e115132558c93ddd2fafe921d" translate="yes" xml:space="preserve">
          <source>The object is in an invalid state. (Legacy code value: &lt;code&gt;11&lt;/code&gt; and legacy constant name: &lt;code&gt;INVALID_STATE_ERR&lt;/code&gt;)</source>
          <target state="translated">오브젝트가 유효하지 않은 상태입니다. (레거시 코드 값 : &lt;code&gt;11&lt;/code&gt; 및 레거시 상수 이름 : &lt;code&gt;INVALID_STATE_ERR&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6ca2f8f0ae3d4e10b27e048cfe6f6e4cb6004495" translate="yes" xml:space="preserve">
          <source>The object is in the wrong &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;. (Legacy code value: &lt;code&gt;4&lt;/code&gt; and legacy constant name: &lt;code&gt;WRONG_DOCUMENT_ERR&lt;/code&gt;)</source>
          <target state="translated">개체가 잘못된 &lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; 에&lt;/a&gt; 있습니다. (레거시 코드 값 : &lt;code&gt;4&lt;/code&gt; 및 레거시 상수 이름 : &lt;code&gt;WRONG_DOCUMENT_ERR&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3978375f83b944580de7065e78bec8922da32a80" translate="yes" xml:space="preserve">
          <source>The object is one of the types based on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCMediaHandlerStats&quot;&gt;&lt;code&gt;RTCMediaHandlerStats&lt;/code&gt;&lt;/a&gt;: for audio tracks, the type is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCSenderAudioTrackAttachmentStats&quot;&gt;&lt;code&gt;RTCSenderAudioTrackAttachmentStats&lt;/code&gt;&lt;/a&gt; and for video tracks, the type is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCSenderVideoTrackAttachmentStats&quot;&gt;&lt;code&gt;RTCSenderVideoTrackAttachmentStats&lt;/code&gt;&lt;/a&gt;. The data within provides statistics related to a particular &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt;'s attachment to an &lt;a href=&quot;rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt;; also included are the media level metrics that go along with the track.</source>
          <target state="translated">이 객체는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCMediaHandlerStats&quot;&gt; &lt;code&gt;RTCMediaHandlerStats&lt;/code&gt; &lt;/a&gt; 기반의 유형 중 하나입니다 . 오디오 트랙의 경우 유형은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCSenderAudioTrackAttachmentStats&quot;&gt; &lt;code&gt;RTCSenderAudioTrackAttachmentStats&lt;/code&gt; &lt;/a&gt; 이고 비디오 트랙의 경우 유형은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCSenderVideoTrackAttachmentStats&quot;&gt; &lt;code&gt;RTCSenderVideoTrackAttachmentStats&lt;/code&gt; &lt;/a&gt; 입니다. 내부의 데이터 는 &lt;a href=&quot;rtcrtpsender&quot;&gt; &lt;code&gt;RTCRtpSender&lt;/code&gt; &lt;/a&gt; 에 대한 특정 &lt;a href=&quot;mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt; 의 첨부 와 관련된 통계를 제공합니다 . 트랙과 함께 사용되는 미디어 레벨 메트릭도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="1c75ada1ffa819b6f9057a46434b696786ccc78a" translate="yes" xml:space="preserve">
          <source>The object passed from the other window.</source>
          <target state="translated">다른 창에서 객체가 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="f37d3e43ab8f456f4feae06e2b3bd3228c9eecc7" translate="yes" xml:space="preserve">
          <source>The object retrieved by &lt;code&gt;getImageData()&lt;/code&gt; has a width of 200 and a height of 100, for a total of 20,000 pixels. Of those pixels, most are either transparent or taken from off the canvas; only 5,000 of them are opaque black (the color of the drawn rectangle).</source>
          <target state="translated">&lt;code&gt;getImageData()&lt;/code&gt; 의해 검색된 객체 의 너비는 200이고 높이는 100이며 총 20,000 픽셀입니다. 이 픽셀들 중 대부분은 투명하거나 캔버스에서 가져온 것입니다. 그중 5,000 개만 불투명 한 검은 색 (그린 사각형의 색)입니다.</target>
        </trans-unit>
        <trans-unit id="42de8b2cfbf68fb7e9c63862f1622149f1254cea" translate="yes" xml:space="preserve">
          <source>The object store auto increments.</source>
          <target state="translated">오브젝트 저장소가 자동으로 증가합니다.</target>
        </trans-unit>
        <trans-unit id="fda742e1752774a961d8045105bec267b1cfe6a7" translate="yes" xml:space="preserve">
          <source>The object store does not auto increment.</source>
          <target state="translated">오브젝트 저장소는 자동 증가하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3c929b26fdf46f1f74a7d8927013c89493657808" translate="yes" xml:space="preserve">
          <source>The object store has been deleted.</source>
          <target state="translated">객체 저장소가 삭제되었습니다.</target>
        </trans-unit>
        <trans-unit id="6ca655228ef3bf7c1e2128141577be66e6cda2fe" translate="yes" xml:space="preserve">
          <source>The object store uses in-line keys but no key generator, and the object store's key path does not yield a valid key.</source>
          <target state="translated">객체 저장소는 인라인 키를 사용하지만 키 생성기는 사용하지 않으며 객체 저장소의 키 경로는 유효한 키를 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2a6cc858beb1a5a3a5f24d5ae53d0d0e9fed447d" translate="yes" xml:space="preserve">
          <source>The object store uses in-line keys or has a key generator, and a key parameter was provided.</source>
          <target state="translated">오브젝트 저장소는 인라인 키를 사용하거나 키 생성기가 있으며 키 매개 변수가 제공되었습니다.</target>
        </trans-unit>
        <trans-unit id="c9fcdb5e3a217f30d32be711a73880f9b1cd885f" translate="yes" xml:space="preserve">
          <source>The object store uses out-of-line keys and has no key generator, and no key parameter was provided.</source>
          <target state="translated">오브젝트 저장소는 라인 외부 키를 사용하며 키 생성기가 없으며 키 매개 변수가 제공되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="ed6ec6ff89052c855205d2217f930d346ed64965" translate="yes" xml:space="preserve">
          <source>The object store's transaction mode is read-only.</source>
          <target state="translated">오브젝트 저장소의 트랜잭션 모드는 읽기 전용입니다.</target>
        </trans-unit>
        <trans-unit id="c2348a73fe3a748d9936ced47f683fe80779fa30" translate="yes" xml:space="preserve">
          <source>The object to deliver to the main thread; this will be in the data field in the event delivered to the &lt;a href=&quot;../worker/onmessage&quot;&gt;&lt;code&gt;Worker.onmessage&lt;/code&gt;&lt;/a&gt; handler. This may be any value or JavaScript object handled by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/The_structured_clone_algorithm&quot;&gt;structured clone&lt;/a&gt; algorithm, which includes cyclical references.</source>
          <target state="translated">메인 스레드로 전달할 객체입니다. 이것은 &lt;a href=&quot;../worker/onmessage&quot;&gt; &lt;code&gt;Worker.onmessage&lt;/code&gt; &lt;/a&gt; 핸들러로 전달 된 이벤트의 데이터 필드에 있습니다. 순환 참조를 포함 하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/The_structured_clone_algorithm&quot;&gt;구조화 된 클론&lt;/a&gt; 알고리즘으로 처리되는 모든 값 또는 JavaScript 객체 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ca21df3908f16a4852714eba69f3663943f64b31" translate="yes" xml:space="preserve">
          <source>The object to deliver to the worker; this will be in the data field in the event delivered to the &lt;a href=&quot;../dedicatedworkerglobalscope/onmessage&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope.onmessage&lt;/code&gt;&lt;/a&gt; handler. This may be any value or JavaScript object handled by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/The_structured_clone_algorithm&quot;&gt;structured clone&lt;/a&gt; algorithm, which includes cyclical references.</source>
          <target state="translated">근로자에게 전달할 물건. 이것은 &lt;a href=&quot;../dedicatedworkerglobalscope/onmessage&quot;&gt; &lt;code&gt;DedicatedWorkerGlobalScope.onmessage&lt;/code&gt; &lt;/a&gt; 핸들러로 전달 된 이벤트의 데이터 필드에 있습니다. 순환 참조를 포함 하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/The_structured_clone_algorithm&quot;&gt;구조화 된 클론&lt;/a&gt; 알고리즘으로 처리되는 모든 값 또는 JavaScript 객체 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="249b91ba9ef524769ba27e86619f3d0a6099186e" translate="yes" xml:space="preserve">
          <source>The object which receives a notification (an object that implements the &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; interface) when an event of the specified type occurs. This must be an object implementing the &lt;a href=&quot;../eventlistener&quot;&gt;&lt;code&gt;EventListener&lt;/code&gt;&lt;/a&gt; interface, or a JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Functions&quot;&gt;function&lt;/a&gt;. See &lt;a href=&quot;#The_event_listener_callback&quot;&gt;The event listener callback&lt;/a&gt; for details on the callback itself.</source>
          <target state="translated">지정된 유형의 이벤트가 발생할 때 알림을받는 객체 ( &lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt; 인터페이스 를 구현하는 객체)입니다 . &lt;a href=&quot;../eventlistener&quot;&gt; &lt;code&gt;EventListener&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하는 객체 이거나 JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Functions&quot;&gt;함수&lt;/a&gt; 여야합니다 . 콜백 자체에 대한 자세한 내용 &lt;a href=&quot;#The_event_listener_callback&quot;&gt;은 이벤트 리스너 콜백&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bce9159c2d6fe858047e20c068733851ba27ad2c" translate="yes" xml:space="preserve">
          <source>The observer, &lt;code&gt;adObserver&lt;/code&gt;, is created by calling &lt;code&gt;IntersectionObserver&lt;/code&gt;'s constructor, passing in the callback function, &lt;code&gt;intersectionCallback&lt;/code&gt;, and our options.</source>
          <target state="translated">관찰자, &lt;code&gt;adObserver&lt;/code&gt; 는 호출에 의해 생성된다 &lt;code&gt;IntersectionObserver&lt;/code&gt; 콜백 함수에 전달의 생성자를 &lt;code&gt;intersectionCallback&lt;/code&gt; , 우리의 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a85392ca2b70414aaaeaf5ff6593c900b04900ae" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;fullscreen&lt;/code&gt; read-only property reports whether or not the document is currently displaying content in full-screen mode.</source>
          <target state="translated">사용되지 않는 &lt;a href=&quot;../document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt; 인터페이스의 &lt;code&gt;fullscreen&lt;/code&gt; 읽기 전용 속성은 문서가 현재 전체 화면 모드로 내용을 표시하는지 여부를보고합니다.</target>
        </trans-unit>
        <trans-unit id="0594ff94db8c16e94bffb9865a0292e4fe1c2af8" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;sendAsBinary()&lt;/strong&gt;&lt;/code&gt; is a variant of the &lt;a href=&quot;send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; method that sends binary data. The &lt;code&gt;send()&lt;/code&gt; method now supports binary data and should now be used instead.</source>
          <target state="translated">더 이상 사용되지 않는 &lt;a href=&quot;../xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt; 메소드 &lt;code&gt;&lt;strong&gt;sendAsBinary()&lt;/strong&gt;&lt;/code&gt; 는 이진 데이터를 보내는 &lt;a href=&quot;send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt; 메소드 의 변형입니다 . &lt;code&gt;send()&lt;/code&gt; 메소드는 이제 바이너리 데이터를 지원하며, 현재 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="74921b809a01d66286cf0670a5bd4703031c8f14" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;code&gt;&lt;strong&gt;HTMLFontElement.size&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; that reflects the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font#attr-size&quot;&gt;size&lt;/a&gt;&lt;/code&gt; HTML attribute. It contains either an integer number in the range of 1-7 or a relative value to increase/decrease the value of the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont#attr-size&quot;&gt;size&lt;/a&gt;&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont&quot;&gt;&lt;code&gt;&amp;lt;basefont&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">사용되지 않는 &lt;code&gt;&lt;strong&gt;HTMLFontElement.size&lt;/strong&gt;&lt;/code&gt; 속성은 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font#attr-size&quot;&gt;size&lt;/a&gt;&lt;/code&gt; HTML 특성 을 반영 하는 &lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt; 입니다 . 1-7 범위의 정수 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont&quot;&gt; &lt;code&gt;&amp;lt;basefont&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소 의 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont#attr-size&quot;&gt;size&lt;/a&gt;&lt;/code&gt; 속성 값을 증가 / 감소시키기위한 상대 값을 포함 합니다.</target>
        </trans-unit>
        <trans-unit id="2e7be84e3af9393fc180766abb232ba0af18d4bf" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;code&gt;&lt;strong&gt;HTMLFontElement&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.color&lt;/code&gt; property is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; that reflects the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font#attr-color&quot;&gt;color&lt;/a&gt;&lt;/code&gt; HTML attribute, containing either a named color or a color specified in the hexadecimal #RRGGBB format.</source>
          <target state="translated">사용되지 않는 &lt;code&gt;&lt;strong&gt;HTMLFontElement&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.color&lt;/code&gt; 속성은 16 진수 #RRGGBB 형식으로 지정된 색상 또는 명명 된 색상을 포함 하는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font#attr-color&quot;&gt;color&lt;/a&gt;&lt;/code&gt; HTML 속성 을 반영 하는 &lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="7fe27bd9758fd119b2da7f345f4c3ad45aebf69b" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;code&gt;&lt;strong&gt;HTMLFontElement&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.face&lt;/code&gt; property is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; that reflects the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font#attr-face&quot;&gt;face&lt;/a&gt;&lt;/code&gt; HTML attribute, containing a comma-separated list of one or more font names.</source>
          <target state="translated">오래된 &lt;code&gt;&lt;strong&gt;HTMLFontElement&lt;/strong&gt;&lt;/code&gt; 의 &lt;code&gt;.face&lt;/code&gt; 의 속성이있다 &lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; 에&lt;/a&gt; 반영하며 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font#attr-face&quot;&gt;face&lt;/a&gt;&lt;/code&gt; 하나 이상의 폰트 이름 쉼표로 구분 된 목록을 포함하는 HTML 속성.</target>
        </trans-unit>
        <trans-unit id="b92ec60bc7209da5c1a6ac560678c2854a061e9f" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;code&gt;supportedTypes&lt;/code&gt; property of the &lt;a href=&quot;../basiccardrequest&quot;&gt;&lt;code&gt;BasicCardRequest&lt;/code&gt;&lt;/a&gt; dictionary can optionally be provided to specify an array of &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;s representing the card types that the retailer supports (e.g. &lt;code&gt;credit&lt;/code&gt;, &lt;code&gt;debit&lt;/code&gt;, &lt;code&gt;prepaid&lt;/code&gt;).</source>
          <target state="translated">소매점에서 지원하는 카드 유형 (예 : &lt;code&gt;credit&lt;/code&gt; , &lt;code&gt;debit&lt;/code&gt; , &lt;code&gt;prepaid&lt;/code&gt; )을 나타내는 &lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt; 배열을 지정하기 위해 &lt;a href=&quot;../basiccardrequest&quot;&gt; &lt;code&gt;BasicCardRequest&lt;/code&gt; &lt;/a&gt; 사전 의 사용되지 않는 &lt;code&gt;supportedTypes&lt;/code&gt; 특성을 선택적으로 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9893659d36bb2f180e6292097ac0f1ab645b848b" translate="yes" xml:space="preserve">
          <source>The of the organization that manufactured the USB device.</source>
          <target state="translated">USB 장치를 제조 한 조직</target>
        </trans-unit>
        <trans-unit id="1b2f2ba65ea12009f5170e42f4790316dd4a4a81" translate="yes" xml:space="preserve">
          <source>The offer sent by the remote peer has been applied and an answer has been created (usually by calling &lt;a href=&quot;createanswer&quot;&gt;&lt;code&gt;RTCPeerConnection.createAnswer()&lt;/code&gt;&lt;/a&gt;) and applied by calling &lt;a href=&quot;setlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt;. This provisional answer describes the supported media formats and so forth, but may not have a complete set of ICE candidates included. Further candidates will be delivered separately later.</source>
          <target state="translated">원격 피어가 보낸 오퍼가 적용되었고 응답이 작성되었으며 (보통 &lt;a href=&quot;createanswer&quot;&gt; &lt;code&gt;RTCPeerConnection.createAnswer()&lt;/code&gt; &lt;/a&gt; 호출 &lt;a href=&quot;setlocaldescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt; &lt;/a&gt; 호출하여 적용되었습니다 . 이 임시 답변은 지원되는 미디어 형식 등을 설명하지만 완전한 ICE 후보 세트가 포함되어 있지 않을 수 있습니다. 추가 지원자는 나중에 별도로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="bbe9f4020efdf896252cc2a50e221643e18bd276" translate="yes" xml:space="preserve">
          <source>The offer sent by the remote peer has been applied and an answer has been created (usually by calling &lt;a href=&quot;rtcpeerconnection/createanswer&quot;&gt;&lt;code&gt;RTCPeerConnection.createAnswer()&lt;/code&gt;&lt;/a&gt;) and applied by calling &lt;a href=&quot;rtcpeerconnection/setlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt;. This provisional answer describes the supported media formats and so forth, but may not have a complete set of ICE candidates included. Further candidates will be delivered separately later.</source>
          <target state="translated">원격 피어가 보낸 오퍼가 적용되었고 응답이 작성되었으며 (보통 &lt;a href=&quot;rtcpeerconnection/createanswer&quot;&gt; &lt;code&gt;RTCPeerConnection.createAnswer()&lt;/code&gt; &lt;/a&gt; 호출 &lt;a href=&quot;rtcpeerconnection/setlocaldescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt; &lt;/a&gt; 호출하여 적용되었습니다 . 이 임시 답변은 지원되는 미디어 형식 등을 설명하지만 완전한 ICE 후보 세트가 포함되어 있지 않을 수 있습니다. 추가 지원자는 나중에 별도로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="111d2bfb525534634dd62f73706ae977f66ed481" translate="yes" xml:space="preserve">
          <source>The offer/answer process is performed both when a call is first established, but also any time the call's format or other configuration needs to change. Regardless of whether it's a new call, or reconfiguring an existing one, these are the basic steps which must occur to exchange the offer and answer, leaving out the ICE layer for the moment:</source>
          <target state="translated">오퍼 / 응답 프로세스는 통화가 처음 설정 될 때뿐만 아니라 통화 형식이나 기타 구성을 변경해야 할 때에도 수행됩니다. 새 통화인지 기존 통화를 재구성하든 관계없이 다음 단계는 오퍼와 응답을 교환하기 위해 수행해야하는 기본 단계이며, ICE 레이어는 당분간 제외됩니다.</target>
        </trans-unit>
        <trans-unit id="6e32e34135f643e8fcd7544e168050ebb59b751d" translate="yes" xml:space="preserve">
          <source>The official usg.org-assigned vendor ID.</source>
          <target state="translated">공식 usg.org 지정 공급 업체 ID</target>
        </trans-unit>
        <trans-unit id="24e803145b9d98a608511667c57d9fe7a77eea28" translate="yes" xml:space="preserve">
          <source>The offset in &lt;code&gt;node&lt;/code&gt; to which the selection will be collapsed. If not specified, the default value &lt;code&gt;0&lt;/code&gt; is used.</source>
          <target state="translated">선택 영역이 축소 될 &lt;code&gt;node&lt;/code&gt; 의 오프셋입니다 . 지정하지 않으면 기본값 &lt;code&gt;0&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f56e753b1ca7812a24749c03c753ac54306a50cf" translate="yes" xml:space="preserve">
          <source>The offset into &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; of the point to compare with the &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 와 비교할 점의 &lt;a href=&quot;../node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt; 에 대한 오프셋 입니다.</target>
        </trans-unit>
        <trans-unit id="fde1ca73714bba267261a69533ebe9489f587767" translate="yes" xml:space="preserve">
          <source>The offset is added before the depth test is performed and before the value is written into the depth buffer.</source>
          <target state="translated">깊이 테스트가 수행되기 전과 값이 깊이 버퍼에 기록되기 전에 오프셋이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="9e481b8af02f52e81213732763dbbea8c2add144" translate="yes" xml:space="preserve">
          <source>The offset of the keyframe specified as a number between &lt;code&gt;0.0&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt; inclusive or &lt;code&gt;null&lt;/code&gt;. This is equivalent to specifying start and end states in percentages in CSS stylesheets using &lt;code&gt;@keyframes&lt;/code&gt;. If this value is &lt;code&gt;null&lt;/code&gt; or missing, the keyframe will be evenly spaced between adjacent keyframes.</source>
          <target state="translated">&lt;code&gt;0.0&lt;/code&gt; 과 &lt;code&gt;1.0&lt;/code&gt; 사이의 숫자 또는 &lt;code&gt;null&lt;/code&gt; 로 지정된 키 프레임의 오프셋입니다 . &lt;code&gt;@keyframes&lt;/code&gt; 를 사용하여 CSS 스타일 시트에서 시작 및 종료 상태를 백분율로 지정하는 것과 같습니다 . 이 값이 &lt;code&gt;null&lt;/code&gt; 이거나 누락 된 경우 키 프레임은 인접한 키 프레임 사이에 균등하게 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="79f5ceec885154cec885d1378c05c0548931aa0a" translate="yes" xml:space="preserve">
          <source>The offset of the keyframe specified as a number between &lt;code&gt;0.0&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt; inclusive or &lt;code&gt;null&lt;/code&gt;. This is equivalent to specifying start and end states in percentages in CSS stylesheets using &lt;code&gt;@keyframes&lt;/code&gt;. This will be &lt;code&gt;null&lt;/code&gt; if the keyframe is automatically spaced using &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffect/spacing&quot;&gt;&lt;code&gt;KeyframeEffect.spacing&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;0.0&lt;/code&gt; 과 &lt;code&gt;1.0&lt;/code&gt; 사이의 숫자 또는 &lt;code&gt;null&lt;/code&gt; 로 지정된 키 프레임의 오프셋입니다 . &lt;code&gt;@keyframes&lt;/code&gt; 를 사용하여 CSS 스타일 시트에서 시작 및 종료 상태를 백분율로 지정하는 것과 같습니다 . &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffect/spacing&quot;&gt;&lt;code&gt;KeyframeEffect.spacing&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 을 사용하여 키 프레임의 간격을 자동으로 지정하면 &lt;code&gt;null&lt;/code&gt; 이됩니다 .</target>
        </trans-unit>
        <trans-unit id="5cd4f2ab48e17112b71398072dacc08e800c8cca" translate="yes" xml:space="preserve">
          <source>The offset position within &lt;code&gt;node&lt;/code&gt; where the focus will be moved to. If not specified, the default value &lt;code&gt;0&lt;/code&gt; is used.</source>
          <target state="translated">포커스가 이동 될 &lt;code&gt;node&lt;/code&gt; 내 오프셋 위치 입니다. 지정하지 않으면 기본값 &lt;code&gt;0&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="03a1f964afec1e47c0b816a8b459524bf9701772" translate="yes" xml:space="preserve">
          <source>The older &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getUserMedia&quot;&gt;&lt;code&gt;navigator.getUserMedia()&lt;/code&gt;&lt;/a&gt; legacy API.</source>
          <target state="translated">이전 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getUserMedia&quot;&gt; &lt;code&gt;navigator.getUserMedia()&lt;/code&gt; &lt;/a&gt; 레거시 API.</target>
        </trans-unit>
        <trans-unit id="832c380434eda11f499f15ae8a9a20d93f60664e" translate="yes" xml:space="preserve">
          <source>The onanimationiteration event handler is then set up. It simply sets the box's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/animation-play-state&quot;&gt;&lt;code&gt;animation-play-state&lt;/code&gt;&lt;/a&gt; to &quot;paused&quot;, then updates the text displayed in the button to indicate that clicking the button will start playing the next iteration of theanimation.</source>
          <target state="translated">그런 다음 onanimationiteration 이벤트 핸들러가 설정됩니다. 단순히 상자의 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/animation-play-state&quot;&gt; &lt;code&gt;animation-play-state&lt;/code&gt; &lt;/a&gt; 를 &quot;일시 중지&quot;로 설정 한 다음 버튼에 표시되는 텍스트를 업데이트하여 버튼을 클릭하면 다음 번의 애니메이션 반복 재생이 시작됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0d21a2361b4f732de35d1e16271c34e025268511" translate="yes" xml:space="preserve">
          <source>The one value that needs explaining is the vertical offset position we are drawing each bar at: &lt;code&gt;HEIGHT-barHeight/2&lt;/code&gt;. I am doing this because I want each bar to stick up from the bottom of the canvas, not down from the top, as it would if we set the vertical position to 0. Therefore, we instead set the vertical position each time to the height of the canvas minus &lt;code&gt;barHeight/2&lt;/code&gt;, so therefore each bar will be drawn from partway down the canvas, down to the bottom.</source>
          <target state="translated">설명해야 할 값 중 하나는 &lt;code&gt;HEIGHT-barHeight/2&lt;/code&gt; 에서 각 막대를 그리는 수직 오프셋 위치 입니다. 수직 위치를 0으로 설정하는 것처럼 각 막대가 위쪽에서 아래로가 아니라 캔버스의 바닥에서 튀어 나오도록하기 위해이 작업을 수행하고 있습니다. 따라서 매번 수직 ​​위치를 높이로 설정합니다. 캔버스에서 &lt;code&gt;barHeight/2&lt;/code&gt; 를 뺀 값 이므로 각 막대는 캔버스의 아래쪽에서 아래쪽으로 그려집니다.</target>
        </trans-unit>
        <trans-unit id="d7348ea1897117e0e7cee3c6764e3ab4c250bf9e" translate="yes" xml:space="preserve">
          <source>The only other primitive shapes are &lt;em&gt;paths&lt;/em&gt;. A path is a list of points, connected by segments of lines that can be of different shapes, curved or not, of different width and of different color. A path, or even a subpath, can be closed. To make shapes using paths takes some extra steps:</source>
          <target state="translated">유일한 다른 기본 모양은 &lt;em&gt;경로&lt;/em&gt; 입니다. 경로는 다른 모양, 곡선 또는 너비, 색상 및 색상이 다른 선 세그먼트로 연결된 점 목록입니다. 경로 또는 하위 경로를 닫을 수 있습니다. 패스를 사용하여 모양을 만들려면 몇 가지 추가 단계가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="acc018782ccdf0859068674cb7de7de18ec0f15b" translate="yes" xml:space="preserve">
          <source>The only sequence which is not allowed within a CDATA section is the closing sequence of a CDATA section itself:</source>
          <target state="translated">CDATA 섹션 내에서 허용되지 않는 유일한 시퀀스는 CDATA 섹션 자체의 닫는 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="3e2afd4b63f2d2858899c24174b1f432775e3ff0" translate="yes" xml:space="preserve">
          <source>The only thing left is to look up the location of the &lt;code&gt;aVertexNormal&lt;/code&gt; attribute and the &lt;code&gt;uNormalMatrix&lt;/code&gt; uniform.</source>
          <target state="translated">남은 것은 &lt;code&gt;aVertexNormal&lt;/code&gt; 속성과 &lt;code&gt;uNormalMatrix&lt;/code&gt; 유니폼 의 위치를 ​​찾는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="e40c3ebc54c0141d8469216656c62834914e3618" translate="yes" xml:space="preserve">
          <source>The only thing left to do is give the app a try: &lt;a href=&quot;https://codepen.io/Rumyra/pen/qyMzqN/&quot;&gt;Check out the final demo here on Codepen&lt;/a&gt;.</source>
          <target state="translated">남은 것은 앱을 시험해 &lt;a href=&quot;https://codepen.io/Rumyra/pen/qyMzqN/&quot;&gt;보는 것&lt;/a&gt; 입니다. Codepen에서 최종 데모를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="403a936dc672ca16b0bb8117c4a03f5890a664f9" translate="yes" xml:space="preserve">
          <source>The only thing we do here is disable the &quot;Connect&quot; button when the local peer is connected and enable the &quot;Disconnect&quot; button when the remote peer connects.</source>
          <target state="translated">로컬 피어가 연결되면 &quot;연결&quot;버튼을 비활성화하고 원격 피어가 연결되면 &quot;연결 해제&quot;버튼을 활성화하면됩니다.</target>
        </trans-unit>
        <trans-unit id="2018dda0f784765af37643b59b129e7e5a67961f" translate="yes" xml:space="preserve">
          <source>The only trouble we have now is that if the request doesn&amp;rsquo;t match anything in the cache, and the network is not available, our request will still fail. Let&amp;rsquo;s provide a default fallback so that whatever happens, the user will at least get something:</source>
          <target state="translated">우리가 가진 유일한 문제는 요청이 캐시의 어떤 것과도 일치하지 않고 네트워크를 사용할 수 없으면 요청이 여전히 실패한다는 것입니다. 어떤 일이 발생하더라도 사용자는 최소한 무언가를 얻도록 기본 대체를 제공합시다.</target>
        </trans-unit>
        <trans-unit id="6fdb86250d8e6038a297f5d9f0ab96029b639bf5" translate="yes" xml:space="preserve">
          <source>The only way to read content from a Blob is to use a &lt;a href=&quot;filereader&quot;&gt;&lt;code&gt;FileReader&lt;/code&gt;&lt;/a&gt;. The following code reads the content of a Blob as a typed array.</source>
          <target state="translated">Blob에서 컨텐츠를 읽는 유일한 방법은 &lt;a href=&quot;filereader&quot;&gt; &lt;code&gt;FileReader&lt;/code&gt; &lt;/a&gt; 를 사용하는 것 입니다. 다음 코드는 Blob의 내용을 형식화 된 배열로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="adb00994e9836c05570c6bb074bd80d894e97fd0" translate="yes" xml:space="preserve">
          <source>The opcode field defines how to interpret the payload data: 0x0 for continuation,&lt;code&gt;0x1&lt;/code&gt; for text (which is always encoded in UTF-8), &lt;code&gt;0x2&lt;/code&gt; for binary, and other so-called &quot;control codes&quot; that will be discussed later. In this version of WebSockets, &lt;code&gt;0x3&lt;/code&gt; to &lt;code&gt;0x7&lt;/code&gt; and &lt;code&gt;0xB&lt;/code&gt; to &lt;code&gt;0xF&lt;/code&gt; have no meaning.</source>
          <target state="translated">opcode 필드는 페이로드 데이터를 해석하는 방법을 정의합니다. 연속의 경우 0x0, 텍스트의 경우 &lt;code&gt;0x1&lt;/code&gt; (항상 UTF-8로 인코딩 됨), 0의 경우 2 &lt;code&gt;0x2&lt;/code&gt; 바이너리 및 나중에 설명 할 소위 &quot;제어 코드&quot;. 이 버전의 WebSocket에서 &lt;code&gt;0x3&lt;/code&gt; ~ &lt;code&gt;0x7&lt;/code&gt; 및 &lt;code&gt;0xB&lt;/code&gt; ~ &lt;code&gt;0xF&lt;/code&gt; 는 의미가 없습니다.</target>
        </trans-unit>
        <trans-unit id="c9e12b46f409c9b71bc1b1142e057fc26beab9dc" translate="yes" xml:space="preserve">
          <source>The open request doesn't open the database or start the transaction right away. The call to the &lt;code&gt;open()&lt;/code&gt; function returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBOpenDBRequest&quot;&gt;&lt;code&gt;IDBOpenDBRequest&lt;/code&gt;&lt;/a&gt; object with a result (success) or error value that you handle as an event. Most other asynchronous functions in IndexedDB do the same thing - return an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBRequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; object with the result or error. The result for the open function is an instance of an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase&quot;&gt;IDBDatabase&lt;/a&gt;.&lt;/code&gt;</source>
          <target state="translated">공개 요청은 데이터베이스를 열거 나 트랜잭션을 즉시 시작하지 않습니다. &lt;code&gt;open()&lt;/code&gt; 함수를 호출 하면 이벤트로 처리하는 결과 (성공) 또는 오류 값과 함께 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBOpenDBRequest&quot;&gt; &lt;code&gt;IDBOpenDBRequest&lt;/code&gt; &lt;/a&gt; 객체가 반환 됩니다. IndexedDB의 대부분의 다른 비동기 함수는 동일한 작업을 수행합니다 . 결과 또는 오류와 함께 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBRequest&quot;&gt; &lt;code&gt;IDBRequest&lt;/code&gt; &lt;/a&gt; 객체를 반환합니다 . open 함수의 결과는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase&quot;&gt;IDBDatabase&lt;/a&gt;.&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="ce3f8c4ab4b6f1e5d468aacb1d779b7775772ed8" translate="yes" xml:space="preserve">
          <source>The operation by which reading and writing on a database is done. Every request represents one read or write operation.</source>
          <target state="translated">데이터베이스에서 읽고 쓰는 작업입니다. 모든 요청은 하나의 읽기 또는 쓰기 작업을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cf37381e707e8fdeba0614fd2136073d8a9f3b77" translate="yes" xml:space="preserve">
          <source>The operation cannot be performed on the current state of the interface object. For example, the state that was cached in an interface object has changed since it was last read from disk.</source>
          <target state="translated">인터페이스 객체의 현재 상태에서 작업을 수행 할 수 없습니다. 예를 들어, 인터페이스 객체에 캐시 된 상태는 디스크에서 마지막으로 읽은 이후로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="b7c47802c079abbd299dfab071cef95657b06551" translate="yes" xml:space="preserve">
          <source>The operation couldn't be completed at this time because no synthesis engine was available (For example, the user may need to install or configure a synthesis engine.)</source>
          <target state="translated">사용 가능한 합성 엔진이 없기 때문에 현재 작업을 완료 할 수 없습니다 (예 : 사용자가 합성 엔진을 설치 또는 구성해야 할 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="6152893c28d81b680ef3a0d86057695683a244c5" translate="yes" xml:space="preserve">
          <source>The operation couldn't be completed at this time because some required network communication failed.</source>
          <target state="translated">필요한 네트워크 통신이 실패하여 현재 작업을 완료 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e1ae4f8b303a4ed549d2aa8354267b7fb3548f8c" translate="yes" xml:space="preserve">
          <source>The operation couldn't be completed at this time because the user-agent couldn't access the audio output device (for example, the user may need to correct this by closing another application.)</source>
          <target state="translated">사용자 에이전트가 오디오 출력 장치에 액세스 할 수 없어서 현재 작업을 완료 할 수 없습니다 (예를 들어, 사용자는 다른 애플리케이션을 닫아서이를 정정해야 할 수 있습니다).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
