<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="a53e08ee8aa6ac62cf922d2234ff6a1c6f09852a" translate="yes" xml:space="preserve">
          <source>When invoked, will empty all keys out of the storage.</source>
          <target state="translated">호출되면 모든 키가 스토리지에서 비워집니다.</target>
        </trans-unit>
        <trans-unit id="7c6de2a28bfed4b9ba32899cd8c2429a452cb375" translate="yes" xml:space="preserve">
          <source>When invoking this method directly, no submit event is raised (in particular, the form's &lt;code&gt;onsubmit&lt;/code&gt; event handler is not run), and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation&quot;&gt;constraint validation&lt;/a&gt; is not triggered either.</source>
          <target state="translated">이 메소드를 직접 호출하면 제출 이벤트가 발생하지 않으며 (특히 양식의 &lt;code&gt;onsubmit&lt;/code&gt; 이벤트 핸들러가 실행되지 않음) &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation&quot;&gt;제한 조건 유효성 검증&lt;/a&gt; 도 트리거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="62d45ca92f9517f71a3f209b5b95a09ac458d113" translate="yes" xml:space="preserve">
          <source>When it gets this request, the &lt;strong&gt;server&lt;/strong&gt; should send a pretty odd-looking (but still HTTP) response that looks like this (remember each header ends with &lt;code&gt;\r\n&lt;/code&gt; and put an extra &lt;code&gt;\r\n&lt;/code&gt; after the last one):</source>
          <target state="translated">이이 요청을 얻을 때, &lt;strong&gt;서버는&lt;/strong&gt; 이 같은 외모 (각 헤더의 끝을 기억하는 아주 이상한 보이는 (하지만 여전히 HTTP) 응답을 전송한다 &lt;code&gt;\r\n&lt;/code&gt; 하고 추가로 넣어 &lt;code&gt;\r\n&lt;/code&gt; 마지막 후) :</target>
        </trans-unit>
        <trans-unit id="1c1692e30bcef2404cee756389d9cea218936288" translate="yes" xml:space="preserve">
          <source>When it takes a positive value it is a real gain, when negative it is an attenuation.</source>
          <target state="translated">양수 값을 사용하면 실제 게인이되고 음수이면 감쇠입니다.</target>
        </trans-unit>
        <trans-unit id="0ae5bee557d9c9272e102b88fbfad4d5a969d111" translate="yes" xml:space="preserve">
          <source>When its value changes, as the user's preferred languages are changed a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/languagechange&quot;&gt;languagechange&lt;/a&gt;&lt;/code&gt; event is fired on the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">값이 변경되면 사용자가 선호하는 언어가 변경됨에 따라 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/languagechange&quot;&gt;languagechange&lt;/a&gt;&lt;/code&gt; 변경 이벤트가 &lt;a href=&quot;../window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt; 객체에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="90cf237ff8e56b11687a19c6737df3ce64a1017c" translate="yes" xml:space="preserve">
          <source>When looping is enabled, the sound begins playing at the time specified as the start point when &lt;a href=&quot;start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; is called. When the time specified by the &lt;a href=&quot;loopend&quot;&gt;&lt;code&gt;loopEnd&lt;/code&gt;&lt;/a&gt; property is reached, playback continues at the time specified by &lt;a href=&quot;loopstart&quot;&gt;&lt;code&gt;loopStart&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">루핑이 활성화되면 &lt;a href=&quot;start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; 가 호출 될 때 시작 지점으로 지정된 시간에 사운드가 재생되기 시작합니다 . 에 의해 지정된 시간 때 &lt;a href=&quot;loopend&quot;&gt; &lt;code&gt;loopEnd&lt;/code&gt; 의&lt;/a&gt; 특성에 도달 할 때, 재생에 의해 지정된 시간에 계속 &lt;a href=&quot;loopstart&quot;&gt; &lt;code&gt;loopStart&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6a2d424ecb60622519388a142a990319875abb6" translate="yes" xml:space="preserve">
          <source>When moving a directory, the move is always recursive; you can't leave out subfolders.</source>
          <target state="translated">디렉토리를 이동할 때 이동은 항상 재귀 적입니다. 하위 폴더를 남길 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f1bf6915fcb0876cbfb452bd4523b334fcdef515" translate="yes" xml:space="preserve">
          <source>When new tracks are added to the &lt;code&gt;RTCPeerConnection&lt;/code&gt;&amp;mdash; either by calling its &lt;a href=&quot;../rtcpeerconnection/addtrack&quot;&gt;&lt;code&gt;addTrack()&lt;/code&gt;&lt;/a&gt; method or because of renegotiation of the stream's format&amp;mdash;a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; event is set to the &lt;code&gt;RTCPeerConnection&lt;/code&gt; for each track added to the connection. Making use of newly added media requires implementing a handler for the &lt;code&gt;track&lt;/code&gt; event. A common need is to attach the incoming media to an appropriate HTML element. In our example, we add the track's stream to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element that displays the incoming video:</source>
          <target state="translated">새로운 트랙이 추가되면 &lt;code&gt;RTCPeerConnection&lt;/code&gt; - 그 호출 중 &lt;a href=&quot;../rtcpeerconnection/addtrack&quot;&gt; &lt;code&gt;addTrack()&lt;/code&gt; &lt;/a&gt; 메소드 또는 때문에 스트림의 포맷 (A)의 재협상 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; 의 이벤트로 설정 &lt;code&gt;RTCPeerConnection&lt;/code&gt; 연결 추가 트랙마다. 새로 추가 된 미디어를 사용하려면 &lt;code&gt;track&lt;/code&gt; 이벤트 처리기를 구현해야합니다 . 일반적으로 들어오는 미디어를 적절한 HTML 요소에 연결해야합니다. 이 예에서는 수신 비디오를 표시하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소에 트랙 스트림을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="8fa282965910599814d2e295744e01e2115ba58e" translate="yes" xml:space="preserve">
          <source>When no pages are using the current version, the new worker activates and becomes responsible for fetches.</source>
          <target state="translated">현재 버전을 사용중인 페이지가 없으면 새 작업자가 활성화되어 가져 오기를 담당합니다.</target>
        </trans-unit>
        <trans-unit id="7b667f6155d8918de818445c7301cf5daf675998" translate="yes" xml:space="preserve">
          <source>When numbers are extremely large (or extremely small) on computers they begin to become less and less precise because there are only so many ones and zeros that are used to represent them. The more operations that are done on larger numbers, the more and more errors accumulate into the result. When dividing by w, this can effectively increase the precision of very large numbers by operating on two potentially smaller, less error-prone numbers.</source>
          <target state="translated">컴퓨터에서 숫자가 매우 크거나 매우 작 으면 숫자를 나타내는 데 사용되는 1과 0이 너무 많기 때문에 점점 정확도가 떨어지기 시작합니다. 더 많은 수의 작업을 수행할수록 결과에 더 많은 오류가 누적됩니다. w로 나눌 때, 이것은 잠재적으로 더 작고 오류가 덜 발생하는 두 개의 숫자에서 작동함으로써 매우 큰 숫자의 정밀도를 효과적으로 증가시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="081a8cdbc8e662c681be1eefd201a61d32f6a8d4" translate="yes" xml:space="preserve">
          <source>When only one argument is present: Toggle the class value; i.e., if the class exists then remove it and return &lt;code&gt;false&lt;/code&gt;, if not, then add it and return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">인수가 하나 뿐인 경우 : 클래스 값을 토글하십시오. 즉, 클래스가 존재하면 클래스를 제거하고 &lt;code&gt;false&lt;/code&gt; 를 리턴 하고 그렇지 않은 경우 클래스 를 추가하고 &lt;code&gt;true&lt;/code&gt; 를 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad839b2f539650a13de37b86845dc0102ff323ec" translate="yes" xml:space="preserve">
          <source>When our button is clicked, we prevent the form from submitting as normal and then send the value entered in our text input to the IFrame via the &lt;a href=&quot;../messagechannel&quot;&gt;&lt;code&gt;MessageChannel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">버튼을 클릭하면 양식이 정상적으로 제출되는 것을 방지 한 다음 텍스트 입력에 입력 한 값을 &lt;a href=&quot;../messagechannel&quot;&gt; &lt;code&gt;MessageChannel&lt;/code&gt; 을&lt;/a&gt; 통해 IFrame으로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="37586336583587a213a08db4df01979dde4b3ffc" translate="yes" xml:space="preserve">
          <source>When passed a key name and value, will add that key to the storage, or update that key's value if it already exists.</source>
          <target state="translated">키 이름과 값을 전달하면 해당 키를 스토리지에 추가하거나 해당 키 값이 이미있는 경우이를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="be2997d2b3ccc462a2263e8660cd2a4d0fa0ffe7" translate="yes" xml:space="preserve">
          <source>When passed a key name, will remove that key from the storage.</source>
          <target state="translated">키 이름을 전달하면 스토리지에서 해당 키가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="7a49270cc6131e60ab2563477a2294fb09d3b2ca" translate="yes" xml:space="preserve">
          <source>When passed a key name, will return that key's value.</source>
          <target state="translated">키 이름을 전달하면 해당 키 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1113729c3b7579559ff96b61dada291309f8c0be" translate="yes" xml:space="preserve">
          <source>When passed a number n, this method will return the name of the nth key in the storage.</source>
          <target state="translated">숫자 n을 전달하면이 메소드는 스토리지에서 n 번째 키의 이름을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8095e25b62d000e13eb6255863c379be3b074531" translate="yes" xml:space="preserve">
          <source>When passed a valid media configuration, it returns a promise with information as to whether the media type is supported, and whether decoding such media would be smooth and power efficient.</source>
          <target state="translated">유효한 미디어 구성을 통과하면 미디어 유형이 지원되는지 여부와 이러한 미디어의 디코딩이 원활하고 전력 효율적인지에 대한 정보가 담긴 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d7cc6fdf4f61b0a31f3b2ea3f41b6a93345e0d8e" translate="yes" xml:space="preserve">
          <source>When passed a valid media configuration, it returns a promise with information as to whether the media type is supported, and whether encoding such media would be smooth and power efficient.</source>
          <target state="translated">유효한 미디어 구성을 전달하면 미디어 유형이 지원되는지 여부 및 이러한 미디어를 인코딩하는 것이 매끄럽고 전력 효율적인지 여부에 대한 정보가 담긴 약속을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b5dbb8016e4e618bf1d6de3834052f9e1c14f2dd" translate="yes" xml:space="preserve">
          <source>When playing sound on the web, it's important to allow the user to control it. Depending on the use case, there's a myriad of options, but we'll provide functionality to play/pause the sound, alter the track's volume, and pan it from left to right.</source>
          <target state="translated">웹에서 사운드를 재생할 때 사용자가 사운드를 제어 할 수 있도록하는 것이 중요합니다. 사용 사례에 따라 다양한 옵션이 있지만 사운드 재생 / 일시 정지, 트랙 음량 변경 및 왼쪽에서 오른쪽으로 이동하는 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="25caa96ed56e35d7d2b9bc8eaa2fad4a2feb8036" translate="yes" xml:space="preserve">
          <source>When pointer capture is set, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerover&quot;&gt;&lt;code&gt;pointerover&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerout&quot;&gt;&lt;code&gt;pointerout&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerenter&quot;&gt;&lt;code&gt;pointerenter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerleave&quot;&gt;&lt;code&gt;pointerleave&lt;/code&gt;&lt;/a&gt; events are only generated when crossing the boundary of the element that has capture set since other elements can no longer be targeted by the pointer. This has the effect of suppressing these events on all other elements.</source>
          <target state="translated">포인터 캡처가 설정되면, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerover&quot;&gt; &lt;code&gt;pointerover&lt;/code&gt; 는&lt;/a&gt; , &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerout&quot;&gt; &lt;code&gt;pointerout&lt;/code&gt; 의&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerenter&quot;&gt; &lt;code&gt;pointerenter&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerleave&quot;&gt; &lt;code&gt;pointerleave&lt;/code&gt; &lt;/a&gt; 다른 요소가 더 이상 포인터의 대상이 될 수 있기 때문에 캡처 설정되지 않은 요소의 경계를 횡단 할 때 이벤트 만 생성됩니다. 이는 다른 모든 요소에서 이러한 이벤트를 억제하는 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="803eb401ef9424c0dd1a55a8c44174f01a800482" translate="yes" xml:space="preserve">
          <source>When possible, avoid polling &lt;code&gt;muted&lt;/code&gt; to monitor the track's muting status. Instead, add event listeners for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mute&quot;&gt;mute&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unmute&quot;&gt;unmute&lt;/a&gt;&lt;/code&gt; events.</source>
          <target state="translated">가능 하면 트랙의 음소거 상태를 모니터링하기 위해 &lt;code&gt;muted&lt;/code&gt; 폴링을 피 하십시오. 대신, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mute&quot;&gt;mute&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unmute&quot;&gt;unmute&lt;/a&gt;&lt;/code&gt; 이벤트에 대한 이벤트 리스너를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="b1912c7e2a7ad62198a0f08bd99551faf6ff11ae" translate="yes" xml:space="preserve">
          <source>When preparing to open an &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, you can change the codec parameters from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent's&lt;/a&gt; default configuration by calling &lt;code&gt;setCodecParameters()&lt;/code&gt;&lt;em&gt;before&lt;/em&gt; calling either &lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt;&lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../rtcpeerconnection/createanswer&quot;&gt;&lt;code&gt;createAnswer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt; 을 열 준비를 할 때 &lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt; &lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../rtcpeerconnection/createanswer&quot;&gt; &lt;code&gt;createAnswer()&lt;/code&gt; &lt;/a&gt;&lt;em&gt; 를&lt;/em&gt; 호출 &lt;em&gt;하기 전에 &lt;/em&gt; &lt;code&gt;setCodecParameters()&lt;/code&gt; &lt;em&gt;를&lt;/em&gt; 호출 하여 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;사용자 에이전트의&lt;/a&gt; 기본 구성 에서 코덱 매개 변수를 변경할 수 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ee6493009b6431b9980b49942a6355d2a9ef723" translate="yes" xml:space="preserve">
          <source>When problems occur (such as a network timeout or issues pertaining to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS&quot;&gt;access control&lt;/a&gt;), an error event is generated. You can take action on this programmatically by implementing the &lt;code&gt;onerror&lt;/code&gt; callback on the EventSource object:</source>
          <target state="translated">네트워크 시간 초과 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS&quot;&gt;액세스 제어&lt;/a&gt; 관련 문제와 같은 문제가 발생 하면 오류 이벤트가 생성됩니다. EventSource 객체 에서 &lt;code&gt;onerror&lt;/code&gt; 콜백을 구현하여 프로그래밍 방식으로 조치를 취할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="43967ee727b9fa7d551a4702810bf536a051500b" translate="yes" xml:space="preserve">
          <source>When put all together with the rest of the HTML and the CSS not shown above, it looks and works like this:</source>
          <target state="translated">위에 표시되지 않은 나머지 HTML 및 CSS와 모두 함께 사용하면 다음과 같이 보이고 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1d22a87170e59c2c29ea0fb54d09a04db32671bb" translate="yes" xml:space="preserve">
          <source>When reading the description (returned by &lt;a href=&quot;../rtcpeerconnection/localdescription&quot;&gt;&lt;code&gt;RTCPeerConnection.localDescription&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../rtcpeerconnection/remotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.remoteDescription&lt;/code&gt;&lt;/a&gt;), the returned value is the value of &lt;code&gt;pendingLocalDescription&lt;/code&gt;/&lt;code&gt;pendingRemoteDescription&lt;/code&gt; if there's a pending description (that is, the pending description isn't &lt;code&gt;null&lt;/code&gt;); otherwise, the current description (&lt;code&gt;currentLocalDescription&lt;/code&gt;/&lt;code&gt;currentRemoteDescription&lt;/code&gt;) is returned.</source>
          <target state="translated">설명을 읽을 때 ( &lt;a href=&quot;../rtcpeerconnection/localdescription&quot;&gt; &lt;code&gt;RTCPeerConnection.localDescription&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../rtcpeerconnection/remotedescription&quot;&gt; &lt;code&gt;RTCPeerConnection.remoteDescription&lt;/code&gt; 에&lt;/a&gt; 의해 리턴 됨 ) 보류중인 설명이있는 경우 리턴되는 값은 &lt;code&gt;pendingLocalDescription&lt;/code&gt; / &lt;code&gt;pendingRemoteDescription&lt;/code&gt; 의 값입니다 (즉, 보류중인 설명이 &lt;code&gt;null&lt;/code&gt; 이 아님 ). 그렇지 않으면 현재 설명 ( &lt;code&gt;currentLocalDescription&lt;/code&gt; / &lt;code&gt;currentRemoteDescription&lt;/code&gt; )이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="8612bf8e013b9fd3e94709a3077ed536e8f96a80" translate="yes" xml:space="preserve">
          <source>When recording has stopped, the &lt;code&gt;state&lt;/code&gt; property returns a value of &quot;inactive&quot;, and a stop event is fired. We register an event handler for this using &lt;a href=&quot;../mediarecorder/onstop&quot;&gt;&lt;code&gt;mediaRecorder.onstop&lt;/code&gt;&lt;/a&gt;, and finalize our blob there from all the chunks we have received:</source>
          <target state="translated">기록이 중지되면 &lt;code&gt;state&lt;/code&gt; 속성은 &quot;inactive&quot;값을 반환하고 중지 이벤트가 발생합니다. &lt;a href=&quot;../mediarecorder/onstop&quot;&gt; &lt;code&gt;mediaRecorder.onstop&lt;/code&gt; 을&lt;/a&gt; 사용하여 이벤트 핸들러를 등록하고 수신 한 모든 청크에서 Blob을 마무리합니다.</target>
        </trans-unit>
        <trans-unit id="cdeaeeb318f26705d3a5c755ea0f3c87fa0ffab4" translate="yes" xml:space="preserve">
          <source>When retrieving a dropped link, you should ensure you handle the case where multiple links may have been dragged, including any comments that appear in the data. For convenience, the special type &lt;code&gt;URL&lt;/code&gt; may be used to refer to the first valid link within the data for the &lt;code&gt;text/uri-list&lt;/code&gt; type. You should not add data using the &lt;code&gt;URL&lt;/code&gt; type; attempting to do so will just set the value of the &lt;code&gt;text/uri-list&lt;/code&gt; type instead.</source>
          <target state="translated">삭제 된 링크를 검색 할 때 데이터에 표시되는 주석을 포함하여 여러 링크가 드래그 된 경우를 처리해야합니다. 편의상, 특수 유형 &lt;code&gt;URL&lt;/code&gt; 은 &lt;code&gt;text/uri-list&lt;/code&gt; 유형에 대한 데이터 내의 첫 번째 유효한 링크를 참조하는 데 사용될 수 있습니다 . &lt;code&gt;URL&lt;/code&gt; 유형을 사용하여 데이터를 추가해서는 안됩니다 . 그렇게하려고하면 &lt;code&gt;text/uri-list&lt;/code&gt; 유형 의 값이 대신 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="696d52160b1e3be1741d07cdf9d07723c2cf0c7f" translate="yes" xml:space="preserve">
          <source>When set to &lt;var&gt;no or 0&lt;/var&gt;, this feature removes the system close command icon and system close menu item. It will only work for dialog windows (&lt;code&gt;dialog&lt;/code&gt; feature set). &lt;code&gt;close=no&lt;/code&gt; will override &lt;code&gt;minimizable=yes&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;no or 0&lt;/var&gt; 설정하면 이 기능은 시스템 닫기 명령 아이콘 및 시스템 닫기 메뉴 항목을 제거합니다. 대화 상자 창 ( &lt;code&gt;dialog&lt;/code&gt; 기능 세트) 에서만 작동합니다 . &lt;code&gt;close=no&lt;/code&gt; 는 &lt;code&gt;minimizable=yes&lt;/code&gt; 를 대체 합니다 .</target>
        </trans-unit>
        <trans-unit id="15ee8d812737b39143c7fb57d7614507069983a4" translate="yes" xml:space="preserve">
          <source>When setting &lt;code&gt;responseType&lt;/code&gt; to a particular value, the author should make sure that the server is actually sending a response compatible with that format. If the server returns data that is not compatible with the &lt;code&gt;responseType&lt;/code&gt; that was set, the value of &lt;a href=&quot;response&quot;&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt; will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;responseType&lt;/code&gt; 을 특정 값으로 설정할 때 작성자는 서버가 실제로 해당 형식과 호환되는 응답을 보내는 지 확인해야합니다. 와 호환되지 않습니다 서버 데이터를 반환하는 경우 &lt;code&gt;responseType&lt;/code&gt; 설정의 값 &lt;a href=&quot;response&quot;&gt; &lt;code&gt;response&lt;/code&gt; &lt;/a&gt; 할 것이다 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a590456297f1f8daa1809fc0ea3649d7f02dce02" translate="yes" xml:space="preserve">
          <source>When setting our coefficients, the &lt;code&gt;feedforward&lt;/code&gt; values can't all be set to zero, otherwise nothing would be sent to the filter. Something like this is acceptable:</source>
          <target state="translated">계수를 설정할 때 &lt;code&gt;feedforward&lt;/code&gt; 값을 모두 0으로 설정할 수 없으며, 그렇지 않으면 필터로 전송되지 않습니다. 이와 같은 것이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="2319f30338438d879bc2e193b33159ccd9fe8936" translate="yes" xml:space="preserve">
          <source>When setting the value of &lt;code&gt;direction&lt;/code&gt;, the following exceptions can occur:</source>
          <target state="translated">&lt;code&gt;direction&lt;/code&gt; 값을 설정할 때 다음 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98988dc7aa1cb1eb0462f1becd5ffb24aa01eb7d" translate="yes" xml:space="preserve">
          <source>When starting the signaling process, an &lt;strong&gt;offer&lt;/strong&gt; is created by the user initiating the call. This offer includes a session description, in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; format, and needs to be delivered to the receiving user, which we'll call the &lt;strong&gt;callee&lt;/strong&gt;. The callee responds to the offer with an &lt;strong&gt;answer&lt;/strong&gt; message, also containing an SDP description. Our signaling server will use WebSocket to transmit offer messages with the type &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt;, and answer messages with the type &lt;code&gt;&quot;video-answer&quot;&lt;/code&gt;. These messages have the following fields:</source>
          <target state="translated">신호 처리 프로세스를 시작할 때 사용자가 통화를 시작하면 &lt;strong&gt;오퍼&lt;/strong&gt; 가 작성됩니다. 이 제안에는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; 형식 의 세션 설명이 포함 되며 수신 사용자에게 전달해야하며이를 &lt;strong&gt;수신자에게&lt;/strong&gt; 전화합니다 . 수신자 는 SDP 설명이 포함 된 &lt;strong&gt;응답&lt;/strong&gt; 메시지 와 함께 오퍼에 &lt;strong&gt;응답&lt;/strong&gt; 합니다. Google 시그널링 서버는 WebSocket을 사용하여 &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; 유형의 오퍼 메시지를 전송하고 &lt;code&gt;&quot;video-answer&quot;&lt;/code&gt; 유형의 메시지에 응답합니다 . 이 메시지에는 다음과 같은 필드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="81bc27e6843e09c3f87f20bab3f68914edebd437" translate="yes" xml:space="preserve">
          <source>When testing you can get around the HTTPS restriction by checking the &quot;Enable Service Workers over HTTP (when toolbox is open)&quot; option in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Settings&quot;&gt;Firefox Developer Tools settings&lt;/a&gt;.</source>
          <target state="translated">테스트 할 때 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Settings&quot;&gt;Firefox 개발자 도구 설정&lt;/a&gt; 에서 &quot;HTTP를 통해 서비스 워커 사용 (도구 상자가 열려있을 때)&quot;옵션을 선택하여 HTTPS 제한을 극복 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3dce835c28213f3bb867cdb69f7c2acf000e9f3c" translate="yes" xml:space="preserve">
          <source>When that happens, we know the video has started playing, so we call our &lt;code&gt;getCurrentSettings()&lt;/code&gt; function (described above) to display the actual settings that the browser decided upon after considering our constraints and the capabilities of the hardware.</source>
          <target state="translated">이러한 상황이 발생하면 비디오 재생이 시작된 것이므로 &lt;code&gt;getCurrentSettings()&lt;/code&gt; 함수 (위에서 설명 )를 호출 하여 제약 조건과 하드웨어 기능을 고려한 후 브라우저가 결정한 실제 설정을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="170458374de8d9d34b21effc3f5cd7cf1d8ede7e" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object is created, &lt;code&gt;dropEffect&lt;/code&gt; is set to a string value. On getting, it returns its current value. On setting, if the new value is one of the values listed below, then the property's current value will be set to the new value and other values will be ignored.</source>
          <target state="translated">때 &lt;a href=&quot;../datatransfer&quot;&gt; &lt;code&gt;DataTransfer&lt;/code&gt; &lt;/a&gt; 객체가 생성, &lt;code&gt;dropEffect&lt;/code&gt; 를이 문자열 값으로 설정됩니다. 가져 오면 현재 값을 반환합니다. 설정시 새 값이 아래 나열된 값 중 하나 인 경우 속성의 현재 값이 새 값으로 설정되고 다른 값은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1e4a897014deee64b512b044886966ea42c42661" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; object's ICE connection state changes to &lt;code&gt;&quot;failed&quot;&lt;/code&gt;, you should try to trigger an &lt;a href=&quot;../webrtc_api/session_lifetime#ICE_restart&quot;&gt;ICE restart&lt;/a&gt;.</source>
          <target state="translated">때 &lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; 의&lt;/a&gt; 객체의 ICE 연결 상태가 변경 &lt;code&gt;&quot;failed&quot;&lt;/code&gt; , 당신은 트리거하도록해야 &lt;a href=&quot;../webrtc_api/session_lifetime#ICE_restart&quot;&gt;ICE 다시 시작&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f2e55a38c36655d933210552203f47251809730" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt;fetch request&lt;/a&gt; is initiated, we pass in the &lt;code&gt;AbortSignal&lt;/code&gt; as an option inside the request's options object (see &lt;code&gt;{signal}&lt;/code&gt;, below). This associates the signal and controller with the fetch request and allows us to abort it by calling &lt;a href=&quot;abort&quot;&gt;&lt;code&gt;AbortController.abort()&lt;/code&gt;&lt;/a&gt;, as seen below in the second event listener.</source>
          <target state="translated">때 &lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt;가져 오기 요청을&lt;/a&gt; 시작, 우리가 전달 &lt;code&gt;AbortSignal&lt;/code&gt; 요청의 옵션 객체의 내부 옵션으로 (참조 &lt;code&gt;{signal}&lt;/code&gt; 아래). 이것은 시그널과 컨트롤러를 페치 요청과 연관 시키며 아래 두 번째 이벤트 리스너에서 볼 수 있듯이 &lt;a href=&quot;abort&quot;&gt; &lt;code&gt;AbortController.abort()&lt;/code&gt; &lt;/a&gt; 를 호출하여 중단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfb74bd244de5d5466e811370eee97f905789dcf" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;fetch request&lt;/a&gt; is initiated, we pass in the &lt;code&gt;AbortSignal&lt;/code&gt; as an option inside the request's options object (see &lt;code&gt;{signal}&lt;/code&gt;, below). This associates the signal and controller with the fetch request and allows us to abort it by calling &lt;a href=&quot;abortcontroller/abort&quot;&gt;&lt;code&gt;AbortController.abort()&lt;/code&gt;&lt;/a&gt;, as seen below in the second event listener.</source>
          <target state="translated">때 &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;가져 오기 요청을&lt;/a&gt; 시작, 우리가 전달 &lt;code&gt;AbortSignal&lt;/code&gt; 요청의 옵션 객체의 내부 옵션으로 (참조 &lt;code&gt;{signal}&lt;/code&gt; 아래). 이것은 시그널과 컨트롤러를 페치 요청과 연관 시키며 아래 두 번째 이벤트 리스너에서 볼 수 있듯이 &lt;a href=&quot;abortcontroller/abort&quot;&gt; &lt;code&gt;AbortController.abort()&lt;/code&gt; &lt;/a&gt; 를 호출하여 중단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b4be292eea0d62bed233f932a55f02cfb7dc31c" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&quot;sendrecv&quot;&lt;/code&gt; offer is received by the remote peer, it calls its &lt;code&gt;holdEnded()&lt;/code&gt; method:</source>
          <target state="translated">때 &lt;code&gt;&quot;sendrecv&quot;&lt;/code&gt; 제공이 원격 피어에 의해 수신되고, 그것의 호출 &lt;code&gt;holdEnded()&lt;/code&gt; 메소드를 :</target>
        </trans-unit>
        <trans-unit id="6e0833b39914236c0c18fdf6c35e8d2ad6272fdb" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event handler terminated, that is when the load event is completed. If this event has not yet been sent, or is not yet completed, it returns &lt;code&gt;0.&lt;/code&gt;</source>
          <target state="translated">때 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; 이벤트 핸들러가 종료 load 이벤트가 완료되면, 즉. 이 이벤트가 아직 전송되지 않았거나 아직 완료되지 않은 경우 &lt;code&gt;0.&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="155be4bdc0e49aedda66d74b36e03f99a0570c78" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event was sent for the current document. If this event has not yet been sent, it returns &lt;code&gt;0.&lt;/code&gt;</source>
          <target state="translated">때 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; 이벤트는 현재 문서를 보냈습니다. 이 이벤트가 아직 전송되지 않은 경우 &lt;code&gt;0.&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6cd684a1da502ba55e06034dbbe608b4c135ecec" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mousedown&quot;&gt;mousedown&lt;/a&gt;&lt;/code&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Mouseover&quot;&gt;&lt;code&gt;mouseover&lt;/code&gt;&lt;/a&gt; event occurs on a key, we want to start playing the corresponding note. The &lt;code&gt;notePressed()&lt;/code&gt; function is used as the event handler for these events.</source>
          <target state="translated">키 에서 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mousedown&quot;&gt;mousedown&lt;/a&gt;&lt;/code&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Mouseover&quot;&gt; &lt;code&gt;mouseover&lt;/code&gt; &lt;/a&gt; 이벤트가 발생하면 해당 음표 연주를 시작하려고합니다. &lt;code&gt;notePressed()&lt;/code&gt; 함수는 이러한 이벤트에 대한 이벤트 핸들러로 사용된다.</target>
        </trans-unit>
        <trans-unit id="42ebd58fc29230c0a260ba3031de970a3c61db76" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event handler finishes. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">때 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; 이벤트 처리기가 완료됩니다. 이전 문서가 없거나 이전 문서 또는 필요한 리디렉션 중 하나의 출처가 동일하지 않은 경우 반환되는 값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cc03a551d332d5cd1fa1a4ddf2018e191917b767" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event has been thrown, indicating the time at which the previous document in the window began to unload. If there is no previous document, or if the previous document or one of the needed redirects is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">때 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; 이벤트가 발생 된 시간을 표시하는 창에서 이전 문서는 언로드하기 시작했다. 이전 문서가 없거나 이전 문서 또는 필요한 리디렉션 중 하나가 동일한 출처가 아닌 경우 반환되는 값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2a47d8b540256fcfc3d14f8c14a13539b4826781" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;close&lt;/dfn&gt;()&lt;/code&gt; method is called on a &lt;a href=&quot;../presentationconnection&quot;&gt;&lt;code&gt;PresentationConnection&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; begins the process of closing the connection by sending an empty &lt;code&gt;closeMessage&lt;/code&gt; with the &lt;code&gt;closeReason&lt;/code&gt; set to &lt;code&gt;closed&lt;/code&gt;.</source>
          <target state="translated">때 &lt;code&gt;&lt;dfn&gt;close&lt;/dfn&gt;()&lt;/code&gt; 메소드가 호출되어 &lt;a href=&quot;../presentationconnection&quot;&gt; &lt;code&gt;PresentationConnection&lt;/code&gt; &lt;/a&gt; 상기 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;사용자 에이전트는&lt;/a&gt; 빈 전송하여 연결 닫는 과정 시작 &lt;code&gt;closeMessage&lt;/code&gt; 와 &lt;code&gt;closeReason&lt;/code&gt; 용 으로 설정 &lt;code&gt;closed&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="42ffa15d469d09132a6b45fcbd902817e8aa2270" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;getAvailability&lt;/dfn&gt;()&lt;/code&gt; method is called, the user agent &lt;em&gt;MUST&lt;/em&gt; run the following steps:</source>
          <target state="translated">때 &lt;code&gt;&lt;dfn&gt;getAvailability&lt;/dfn&gt;()&lt;/code&gt; 메소드가 호출 될 때, 사용자 에이전트는 &lt;em&gt;반드시&lt;/em&gt; 다음 단계를 실행합니다 :</target>
        </trans-unit>
        <trans-unit id="4391a06c9d0f2338a7c223835dc8fc4b32ce1dd6" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;getAvailability&lt;/dfn&gt;()&lt;/code&gt; method is called, the user agent &lt;em&gt;MUST&lt;/em&gt; run the steps as the link.</source>
          <target state="translated">때 &lt;code&gt;&lt;dfn&gt;getAvailability&lt;/dfn&gt;()&lt;/code&gt; 메소드가 호출 될 때, 사용자 에이전트는 &lt;em&gt;반드시&lt;/em&gt; 링크로 단계를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="15baee29e476d71d5e423c6e177f7644e49dc536" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;reconnect&lt;/dfn&gt;(presentationId)&lt;/code&gt; method is called on a &lt;code&gt;PresentationRequest&lt;/code&gt;&lt;var&gt;presentationRequest&lt;/var&gt;, the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-user-agents&quot;&gt;user agent&lt;/a&gt;&lt;em&gt;MUST&lt;/em&gt; run the following steps to</source>
          <target state="translated">&lt;code&gt;PresentationRequest&lt;/code&gt; &lt;var&gt;presentationRequest&lt;/var&gt; 에서 &lt;code&gt;&lt;dfn&gt;reconnect&lt;/dfn&gt;(presentationId)&lt;/code&gt; 메소드가 호출 되면 &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-user-agents&quot;&gt;사용자 에이전트&lt;/a&gt; 는 다음 단계를 수행 &lt;em&gt;해야&lt;/em&gt; 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2fea13ca177f96f2cce88b05d8eb364696e1f353" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;terminate&lt;/dfn&gt;()&lt;/code&gt; method is called on a &lt;a href=&quot;../presentationconnection&quot;&gt;&lt;code&gt;PresentationConnection&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; begins the process of terminating the presentation. The exact process differs depending on whether &lt;code&gt;terminate()&lt;/code&gt; is called in the controlling or the presenting context.</source>
          <target state="translated">&lt;a href=&quot;../presentationconnection&quot;&gt; &lt;code&gt;PresentationConnection&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;&lt;dfn&gt;terminate&lt;/dfn&gt;()&lt;/code&gt; 메소드가 호출 되면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;사용자 에이전트&lt;/a&gt; 는 프리젠 테이션 종료 프로세스를 시작합니다. 정확한 프로세스는 제어 또는 제시 컨텍스트에서 &lt;code&gt;terminate()&lt;/code&gt; 가 호출 되는지에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="afab87a55a2cbb60584dec7012dd16c616599150" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;VRDisplay&lt;/code&gt; is not presenting a scene, this is functionally equivalent to &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;Window.requestAnimationFrame&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때 &lt;code&gt;VRDisplay&lt;/code&gt; 이 장면을 제시하지 않는,이 기능적으로 동일 &lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;Window.requestAnimationFrame&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9bacba41f7f222545591f6432c766b199d19e287" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;VRDisplay&lt;/code&gt; is presenting, the callback is called at its native refresh rate.</source>
          <target state="translated">때 &lt;code&gt;VRDisplay&lt;/code&gt; 가 제시 콜백은 네이티브 새로 고침 속도라고합니다.</target>
        </trans-unit>
        <trans-unit id="ce9c61230318f6b91dfe6f655b2ab29cd51199b8" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;mode&lt;/code&gt; of a shadow root is &quot;&lt;code&gt;closed&lt;/code&gt;&quot;, the shadow root&amp;rsquo;s implementation internals are inaccessible and unchangeable from JavaScript&amp;mdash;in the same way the implementation internals of, for example, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element are inaccessible and unchangeable from JavaScript.</source>
          <target state="translated">섀도우 루트 의 &lt;code&gt;mode&lt;/code&gt; 가 &quot; &lt;code&gt;closed&lt;/code&gt; &quot;경우 섀도우 루트의 구현 내부는 JavaScript에서 액세스 할 수없고 변경할 수 없습니다. 예를 들어 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소 의 구현 내부는 JavaScript에서 액세스 할 수없고 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fc4934e8bd3a8da0e29e9d7f7b1ef67047ec5e45" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;oninstall&lt;/code&gt; handler completes, the service worker is considered installed.</source>
          <target state="translated">때 &lt;code&gt;oninstall&lt;/code&gt; 핸들러 완료가 서비스 노동자 고려 설치.</target>
        </trans-unit>
        <trans-unit id="cf22449b85a37cdd14b29a36f972942979bbe90b" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;onunmute&lt;/code&gt; event handler is called, the track's &lt;a href=&quot;muted&quot;&gt;&lt;code&gt;muted&lt;/code&gt;&lt;/a&gt; flag is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">때 &lt;code&gt;onunmute&lt;/code&gt; 이벤트 핸들러가 호출 될 때, 트랙의 &lt;a href=&quot;muted&quot;&gt; &lt;code&gt;muted&lt;/code&gt; &lt;/a&gt; 플래그가 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60dc0f2a025f4d10adf32869bc65b2b714c66281" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;requestData()&lt;/code&gt; method is invoked, the browser queues a task that runs the following steps:</source>
          <target state="translated">때 &lt;code&gt;requestData()&lt;/code&gt; 메소드가 호출되고, 브라우저는 다음 단계를 실행하는 작업을 큐 :</target>
        </trans-unit>
        <trans-unit id="90885fc32dbfbad8b23af1666efeb791aeccac8b" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;resume()&lt;/code&gt; method is invoked, the browser queues a task that runs the following steps:</source>
          <target state="translated">때 &lt;code&gt;resume()&lt;/code&gt; 메소드가 호출되고, 브라우저는 다음 단계를 실행하는 작업을 큐 :</target>
        </trans-unit>
        <trans-unit id="d86262e8364e3cf4d9684f7eb30500de8684042d" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;startRendering()&lt;/code&gt; promise resolves, rendering has completed and the output &lt;code&gt;AudioBuffer&lt;/code&gt; is returned out of the promise.</source>
          <target state="translated">때 &lt;code&gt;startRendering()&lt;/code&gt; 약속의 결의는, 렌더링이 완료 한 출력 &lt;code&gt;AudioBuffer&lt;/code&gt; 약속 밖으로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c37cbd465b80e0d4ec473469eefaf3ae4e0eb9c3" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;stop()&lt;/code&gt; method is invoked, the UA queues a task that runs the following steps:</source>
          <target state="translated">때 &lt;code&gt;stop()&lt;/code&gt; 메소드가 호출되면, UA는 다음 단계를 실행하는 작업을 큐 :</target>
        </trans-unit>
        <trans-unit id="e63c9a36b0456d2f72f7188fa624ad4d35c38d6a" translate="yes" xml:space="preserve">
          <source>When the IFrame has loaded, we register an &lt;code&gt;onclick&lt;/code&gt; handler for our button and an &lt;code&gt;onmessage&lt;/code&gt; handler for &lt;a href=&quot;../messagechannel/port1&quot;&gt;&lt;code&gt;MessageChannel.port1&lt;/code&gt;&lt;/a&gt;. Finally we transfer &lt;a href=&quot;../messagechannel/port2&quot;&gt;&lt;code&gt;MessageChannel.port2&lt;/code&gt;&lt;/a&gt; to the IFrame using the &lt;a href=&quot;../window/postmessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">IFrame이로드되면 버튼 의 &lt;code&gt;onclick&lt;/code&gt; 핸들러와 &lt;a href=&quot;../messagechannel/port1&quot;&gt; &lt;code&gt;MessageChannel.port1&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;onmessage&lt;/code&gt; 핸들러를 등록합니다 . 마지막으로 &lt;a href=&quot;../window/postmessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 &lt;a href=&quot;../messagechannel/port2&quot;&gt; &lt;code&gt;MessageChannel.port2&lt;/code&gt; &lt;/a&gt; 를 IFrame 으로 전송 합니다.</target>
        </trans-unit>
        <trans-unit id="dc1fb33c3cdd6daf218a397fb6256d6ed43ebfc8" translate="yes" xml:space="preserve">
          <source>When the IFrame has loaded, we register an &lt;code&gt;onmessage&lt;/code&gt; handler for &lt;a href=&quot;messagechannel/port1&quot;&gt;&lt;code&gt;MessageChannel.port1&lt;/code&gt;&lt;/a&gt; and transfer &lt;a href=&quot;messagechannel/port2&quot;&gt;&lt;code&gt;MessageChannel.port2&lt;/code&gt;&lt;/a&gt; to the IFrame using the &lt;a href=&quot;window/postmessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt; method along with a message.</source>
          <target state="translated">IFrame이로드되면 &lt;a href=&quot;messagechannel/port1&quot;&gt; &lt;code&gt;MessageChannel.port1&lt;/code&gt; 에&lt;/a&gt; 대한 &lt;code&gt;onmessage&lt;/code&gt; 핸들러를 등록 하고 메시지와 함께 &lt;a href=&quot;window/postmessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 &lt;a href=&quot;messagechannel/port2&quot;&gt; &lt;code&gt;MessageChannel.port2&lt;/code&gt; &lt;/a&gt; 를 IFrame으로 전송 합니다.</target>
        </trans-unit>
        <trans-unit id="a7e4ad3a03781aabf88e28bcd4efb42210025bdc" translate="yes" xml:space="preserve">
          <source>When the MediaRecorder is recording, the &lt;a href=&quot;../mediarecorder/state&quot;&gt;&lt;code&gt;MediaRecorder.state&lt;/code&gt;&lt;/a&gt; property will return a value of &quot;recording&quot;.</source>
          <target state="translated">MediaRecorder가 기록중인 경우 &lt;a href=&quot;../mediarecorder/state&quot;&gt; &lt;code&gt;MediaRecorder.state&lt;/code&gt; &lt;/a&gt; 속성은 &quot;recording&quot;값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2bf78d4d77467531848593da2c12d66578716e7f" translate="yes" xml:space="preserve">
          <source>When the Pointer lock state changes&amp;mdash;for example, when calling &lt;a href=&quot;element/requestpointerlock&quot;&gt;&lt;code&gt;requestPointerLock()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;document/exitpointerlock&quot;&gt;&lt;code&gt;exitPointerLock()&lt;/code&gt;&lt;/a&gt;, the user pressing the ESC key, etc.&amp;mdash;the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockchange&quot;&gt;pointerlockchange&lt;/a&gt;&lt;/code&gt; event is dispatched to the &lt;code&gt;document&lt;/code&gt;. This is a simple event and contains no extra data.</source>
          <target state="translated">포인터 잠금 상태가 변경되면 (예 : &lt;a href=&quot;element/requestpointerlock&quot;&gt; &lt;code&gt;requestPointerLock()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;document/exitpointerlock&quot;&gt; &lt;code&gt;exitPointerLock()&lt;/code&gt; &lt;/a&gt; 호출 , 사용자가 ESC 키 누르기 등) &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockchange&quot;&gt;pointerlockchange&lt;/a&gt;&lt;/code&gt; 이벤트가 &lt;code&gt;document&lt;/code&gt; 로 전달됩니다 . 이것은 간단한 이벤트이며 추가 데이터가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4ea347fd70c4fb3150ede93f0a7797537c904ffe" translate="yes" xml:space="preserve">
          <source>When the Promise returned by &lt;code&gt;getUserMedia()&lt;/code&gt; is resolved, the preview &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; attribute is set to be the input stream, which causes the video being captured by the user's camera to be displayed in the preview box. Since the &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; element is muted, the audio won't play. The &quot;Download&quot; button's link is then set to refer to the stream as well. Then, in line 8, we arrange for &lt;code&gt;preview.captureStream()&lt;/code&gt; to call &lt;code&gt;preview.mozCaptureStream()&lt;/code&gt; so that our code will work on Firefox, on which the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/captureStream&quot;&gt;&lt;code&gt;MediaRecorder.captureStream()&lt;/code&gt;&lt;/a&gt; method is prefixed. Then a new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which resolves when the preview video starts to play is created and returned.</source>
          <target state="translated">&lt;code&gt;getUserMedia()&lt;/code&gt; 의해 반환 된 Promise 가 해결되면 preview &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소의 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; 속성이 입력 스트림으로 설정되어 사용자 카메라가 캡처 한 비디오가 미리보기 상자에 표시됩니다. 이후 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; 요소가 음소거되고 오디오가 재생되지 않습니다. 그런 다음 &quot;다운로드&quot;버튼의 링크가 스트림을 참조하도록 설정됩니다. 그런 다음, 8 번, 우리가 준비 &lt;code&gt;preview.captureStream()&lt;/code&gt; 호출 &lt;code&gt;preview.mozCaptureStream()&lt;/code&gt; 우리의 코드가있는 파이어 폭스에서 작동 할 수 있도록 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/captureStream&quot;&gt; &lt;code&gt;MediaRecorder.captureStream()&lt;/code&gt; &lt;/a&gt; 메소드가 앞에 붙습니다. 그런 다음 새로운 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 미리보기 비디오가 재생되기 시작하면 해결되고 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a615e8d216a008e09a0aaa6303aef7ad3335f0ba" translate="yes" xml:space="preserve">
          <source>When the amount of a target element which is visible within the root element crosses one of the visibility thresholds,</source>
          <target state="translated">루트 요소 내에서 볼 수있는 대상 요소의 양이 가시성 임계 값 중 하나를 초과하면</target>
        </trans-unit>
        <trans-unit id="32d7fed74aa3c9bf9e7b2463d00efc4b82768b3f" translate="yes" xml:space="preserve">
          <source>When the audio is played to the end, it loops, but you can control how long the loops last by altering &lt;code&gt;loopStart&lt;/code&gt; and &lt;code&gt;loopEnd&lt;/code&gt;. For example, if you set their values to 20 and 25, respectively, the audio will start to loop between 20 and 25 seconds in to the track.</source>
          <target state="translated">오디오가 끝까지 재생되면 루프가 반복되지만 &lt;code&gt;loopStart&lt;/code&gt; 및 &lt;code&gt;loopEnd&lt;/code&gt; 를 변경하여 루프 지속 시간을 제어 할 수 있습니다 . 예를 들어, 값을 각각 20과 25로 설정하면 오디오가 트랙에서 20 초와 25 초 사이에서 반복되기 시작합니다.</target>
        </trans-unit>
        <trans-unit id="e24b0cc32d22e2488193cf1bd94e74f452949ea5" translate="yes" xml:space="preserve">
          <source>When the audio is played to the end, it loops, but you can control how long the loops last by altering &lt;code&gt;loopStart&lt;/code&gt; and &lt;code&gt;loopEnd&lt;/code&gt;. For example, if you set their values to 20 and 25, respectively, then begin playback, the sound will play normally until it reaches the 25 second mark. Then the current play position will loop back to the 20 second mark and continue playing until the 25 second mark, ad infinitum (or at least until &lt;a href=&quot;../audioscheduledsourcenode/stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; is called).</source>
          <target state="translated">오디오가 끝까지 재생되면 루프가 반복되지만 &lt;code&gt;loopStart&lt;/code&gt; 및 &lt;code&gt;loopEnd&lt;/code&gt; 를 변경하여 루프 지속 시간을 제어 할 수 있습니다 . 예를 들어, 값을 각각 20과 25로 설정 한 다음 재생을 시작하면 25 초 표시에 도달 할 때까지 사운드가 정상적으로 재생됩니다. 그런 다음 현재 재생 위치가 20 초 마크로 되돌아 가고 25 초 마크까지 무한대로 (또는 적어도 &lt;a href=&quot;../audioscheduledsourcenode/stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt; 이 호출 될 때까지 ) 계속 재생 됩니다.</target>
        </trans-unit>
        <trans-unit id="39d3f50da9c0d82ba411371bee723b13d4be77b5" translate="yes" xml:space="preserve">
          <source>When the available disk space is filled up, the quota manager will start clearing out data based on an LRU policy &amp;mdash; the least recently used origin will be deleted first, then the next one, until the browser is no longer over the limit.</source>
          <target state="translated">사용 가능한 디스크 공간이 가득 차면 할당량 관리자가 LRU 정책에 따라 데이터 지우기를 시작합니다. 브라우저가 더 이상 제한을 초과하지 않을 때까지 가장 최근에 사용한 원본이 먼저 삭제 된 다음 다음 원본이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="f0b279040d65102fcafc743e176713b9b8be7341" translate="yes" xml:space="preserve">
          <source>When the browser adds a new &quot;&lt;code&gt;frame&lt;/code&gt;&quot; entry to the performance timeline, both of the observer callbacks will be invoked.</source>
          <target state="translated">브라우저가 성능 타임 라인에 새 &quot; &lt;code&gt;frame&lt;/code&gt; &quot;항목을 추가하면 두 옵저버 콜백이 모두 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c4cbb2e1cb16505ffea56fb85c6e49a6dda278ae" translate="yes" xml:space="preserve">
          <source>When the browser detects that the target element (in our case, the one with the ID &lt;code&gt;&quot;box&quot;&lt;/code&gt;) has been unveiled or obscured such that its visibility ratio crosses one of the thresholds in our list, it calls our handler function, &lt;code&gt;handleIntersect()&lt;/code&gt;:</source>
          <target state="translated">브라우저가 대상 요소 (이 경우 ID가 &lt;code&gt;&quot;box&quot;&lt;/code&gt; 인 요소 )가 공개되거나 가려져서 가시성 비율이 목록의 임계 값 중 하나를 초과하는 것을 &lt;code&gt;handleIntersect()&lt;/code&gt; 핸들러 함수 handleIntersect ()를 호출합니다. :</target>
        </trans-unit>
        <trans-unit id="8496a9863ad494d02d25096932d5f3577a3b859f" translate="yes" xml:space="preserve">
          <source>When the browser is ready to fetch the document using an HTTP request. This moment is &lt;em&gt;before&lt;/em&gt; the check to any application cache.</source>
          <target state="translated">브라우저가 HTTP 요청을 사용하여 문서를 페치 할 준비가 된 경우 이 순간은 응용 프로그램 캐시를 확인 &lt;em&gt;하기 전&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="350a1fd062dc804995b1031003ef6f2de0f91e04" translate="yes" xml:space="preserve">
          <source>When the browser received the first byte of the response, from the server from a cache, or from a local resource.</source>
          <target state="translated">브라우저가 캐시 또는 로컬 리소스에서 서버로부터 응답의 첫 번째 바이트를 수신 한 경우</target>
        </trans-unit>
        <trans-unit id="105409482e116bc47983c4229d28d9dda32f73db" translate="yes" xml:space="preserve">
          <source>When the browser received the last byte of the response, or when the connection is closed if this happened first, from the server, the cache, or from a local resource.</source>
          <target state="translated">브라우저가 응답의 마지막 바이트를 수신했을 때 또는 서버, 캐시 또는 로컬 자원에서 처음 발생한 경우 연결이 닫힐 때.</target>
        </trans-unit>
        <trans-unit id="50ba4ed179b7791a1be1374a91e79aeb1d381644" translate="yes" xml:space="preserve">
          <source>When the browser sent the request to obtain the actual document, from the server or from a cache. If the transport layer fails after the start of the request and the connection is reopened, this property will be set to the time corresponding to the new request.</source>
          <target state="translated">브라우저가 서버 나 캐시에서 실제 문서를 얻기 위해 요청을 보냈을 때. 요청 시작 후 전송 계층이 실패하고 연결이 다시 열리면이 특성은 새 요청에 해당하는 시간으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="beb363aa3681e984cec0e93d51cec6346c056a16" translate="yes" xml:space="preserve">
          <source>When the browser shuts down (because the user chose the Quit or Exit option), the disk containing the database is removed unexpectedly, or permissions are lost to the database store, the following things happen:</source>
          <target state="translated">사용자가 Quit (종료) 또는 Exit (종료) 옵션을 선택했기 때문에 브라우저가 종료되면 데이터베이스가 포함 된 디스크가 예기치 않게 제거되거나 데이터베이스 저장소에 대한 사용 권한이 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="61efc49afc4e840226c8362204bfe6b25d174615" translate="yes" xml:space="preserve">
          <source>When the button is clicked, the oscillator starts, and the &lt;code&gt;MediaRecorder&lt;/code&gt; is started. When the button is stopped, the oscillator and&lt;code&gt; MediaRecorder&lt;/code&gt; both stop. Stopping the &lt;code&gt;MediaRecorder&lt;/code&gt; causes the &lt;code&gt;dataavailable&lt;/code&gt; event to fire, and the event data is pushed into the &lt;code&gt;chunks&lt;/code&gt; array. After that, the &lt;code&gt;stop&lt;/code&gt; event fires, a new &lt;code&gt;blob&lt;/code&gt; is made of type opus &amp;mdash; which contains the data in the &lt;code&gt;chunks&lt;/code&gt; array, and a new window (tab) is then opened that points to a URL created from the blob.</source>
          <target state="translated">버튼을 클릭하면 발진기가 시작되고 &lt;code&gt;MediaRecorder&lt;/code&gt; 가 시작됩니다. 버튼이 중지되면 오실레이터와 &lt;code&gt; MediaRecorder&lt;/code&gt; 가 모두 중지됩니다. 정지 &lt;code&gt;MediaRecorder&lt;/code&gt; 하는 원인 &lt;code&gt;dataavailable&lt;/code&gt; 화재 이벤트, 이벤트 데이터는로 밀려 &lt;code&gt;chunks&lt;/code&gt; 배열. 그런 다음 &lt;code&gt;stop&lt;/code&gt; 이벤트가 발생 하고 &lt;code&gt;chunks&lt;/code&gt; 배열 의 데이터가 포함 된 opus 유형 의 새 &lt;code&gt;blob&lt;/code&gt; 이 만들어 지고 Blob에서 생성 된 URL을 가리키는 새 창 (탭)이 열립니다.</target>
        </trans-unit>
        <trans-unit id="533788242fd866bfaf98a429979be6b6c17e1071" translate="yes" xml:space="preserve">
          <source>When the button is pressed, the current position, orientation, etc. of the sensor/head mounted display is set to be 0 &amp;mdash; this makes the method useful for calibration when an app is first loaded.</source>
          <target state="translated">버튼을 누르면 센서 / 헤드 마운트 디스플레이의 현재 위치, 방향 등이 0으로 설정됩니다. 따라서 앱을 처음로드 할 때이 방법을 사용하면 캘리브레이션에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="aa3d1042776a40be3f647ebe46e6279e0edfe9dc" translate="yes" xml:space="preserve">
          <source>When the caller's &lt;code&gt;RTCPeerConnection&lt;/code&gt; ICE layer comes up with a new candidate to propose, it issues an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; event to &lt;code&gt;callerPC&lt;/code&gt;. The &lt;code&gt;icecandidate&lt;/code&gt; event handler's job is to transmit the candidate to the receiver. In our example, we are directly controlling both the caller and the receiver, so we can just directly add the candidate to the receiver by calling its &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt;&lt;code&gt;addIceCandidate()&lt;/code&gt;&lt;/a&gt; method. That's handled by &lt;code&gt;handleCallerIceEvent()&lt;/code&gt;:</source>
          <target state="translated">발신자의 &lt;code&gt;RTCPeerConnection&lt;/code&gt; ICE 레이어가 제안 할 새로운 후보를 제시하면 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; 이벤트를 &lt;code&gt;callerPC&lt;/code&gt; 에 발행 합니다. &lt;code&gt;icecandidate&lt;/code&gt; 의 이벤트 핸들러의 역할은 전송에 수신기에 후보입니다. 이 예에서는 호출자와 수신자를 모두 직접 제어하므로 &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt; &lt;code&gt;addIceCandidate()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 후보를 수신자에 직접 추가 할 수 있습니다 . &lt;code&gt;handleCallerIceEvent()&lt;/code&gt; 가 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="18d29ea866555b83f31f522311de83636997435a" translate="yes" xml:space="preserve">
          <source>When the calling &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; begins to receive media (after the microphone's stream is added to it), a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; event is delivered to the caller, letting it know that it's time to start negotiating the connection with the receiver. As previously mentioned, our example is simplified somewhat because we control both the caller and the receiver, so &lt;code&gt;handleCallerNegotiationNeeded()&lt;/code&gt; is able to quickly construct the connection by chaining the required calls together for both the caller and receiver, as shown below.</source>
          <target state="translated">호출 &lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt; 이 미디어 수신을 시작하면 (마이크 스트림이 추가 된 후) &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; 이벤트가 호출자에게 전달되어 수신자와의 연결 협상을 시작할 시간임을 알려줍니다. 앞에서 언급 한 것처럼 호출자와 수신자를 모두 제어하기 때문에 예제가 다소 단순화되었으므로 &lt;code&gt;handleCallerNegotiationNeeded()&lt;/code&gt; 는 아래 표시된 것처럼 호출자와 수신자 모두에 대해 필요한 호출을 연결하여 신속하게 연결을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8cca7d1c8177e7f4f8aa1998030d5e56bd42c09" translate="yes" xml:space="preserve">
          <source>When the canvas is initialized or &lt;code&gt;beginPath()&lt;/code&gt; is called, you typically will want to use the &lt;code&gt;moveTo()&lt;/code&gt; function to place the starting point somewhere else. We could also use &lt;code&gt;moveTo()&lt;/code&gt; to draw unconnected paths. Take a look at the smiley face below.</source>
          <target state="translated">캔버스가 초기화되거나 &lt;code&gt;beginPath()&lt;/code&gt; 가 호출되면 일반적으로 &lt;code&gt;moveTo()&lt;/code&gt; 함수를 사용하여 시작 지점을 다른 곳에 배치하려고합니다. &lt;code&gt;moveTo()&lt;/code&gt; 를 사용 하여 연결되지 않은 경로를 그릴 수도 있습니다 . 아래의 웃는 얼굴을보십시오.</target>
        </trans-unit>
        <trans-unit id="53eb8eba2a3daab13bf34be7e700aa658187cd56" translate="yes" xml:space="preserve">
          <source>When the connection is opened network. If the transport layer reports an error and the connection establishment is started again, the last connection establishment end time is given. If a persistent connection is used, the value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;. A connection is considered as opened when all secure connection handshake, or SOCKS authentication, is terminated.</source>
          <target state="translated">연결이 열려있을 때 네트워크. 전송 계층이 오류를보고하고 연결 설정이 다시 시작되면 마지막 연결 설정 종료 시간이 제공됩니다. 지속적 연결이 사용되는 경우 값은 &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; 와 동일합니다 . 모든 보안 연결 핸드 셰이크 또는 SOCKS 인증이 종료되면 연결이 열린 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="76c9c3d99b351f029d70d5db9fd9568e6eb3a785" translate="yes" xml:space="preserve">
          <source>When the container does not scroll, but has overflowing children, these checks determine if the container can scroll:</source>
          <target state="translated">컨테이너가 스크롤되지 않지만 넘친 자식이있는 경우 이러한 검사는 컨테이너가 스크롤 가능한지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="f999374b8edb4032b0a23c52bc5ae64b0f926872" translate="yes" xml:space="preserve">
          <source>When the current port receives a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MIDIMessage&quot;&gt;&lt;code&gt;MIDIMessage&lt;/code&gt;&lt;/a&gt; it triggers a call to this event handler.</source>
          <target state="translated">현재 포트가 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MIDIMessage&quot;&gt; &lt;code&gt;MIDIMessage&lt;/code&gt; 를&lt;/a&gt; 수신하면 이 이벤트 핸들러에 대한 호출을 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="612eb0282a020d53d02c4e2675af913b08ae504d" translate="yes" xml:space="preserve">
          <source>When the device proximity sensor detects a change between the device and an object, it notifies the browser of that change. When the browser gets such a notification, it fires a &lt;a href=&quot;deviceproximityevent&quot;&gt;&lt;code&gt;DeviceProximityEvent&lt;/code&gt;&lt;/a&gt; for any change, and a &lt;a href=&quot;userproximityevent&quot;&gt;&lt;code&gt;UserProximityEvent&lt;/code&gt;&lt;/a&gt; event in the case of a more rough change.</source>
          <target state="translated">장치 근접 센서는 장치와 물체 사이의 변화를 감지하면 해당 변화를 브라우저에 알립니다. 브라우저가 이러한 알림을 받으면 변경 사항 이있을 때 &lt;a href=&quot;deviceproximityevent&quot;&gt; &lt;code&gt;DeviceProximityEvent&lt;/code&gt; &lt;/a&gt; 가 발생하고 변경 이 더 &lt;a href=&quot;userproximityevent&quot;&gt; &lt;code&gt;UserProximityEvent&lt;/code&gt; &lt;/a&gt; 경우 UserProximityEvent 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6307cceb0ab0826ee9ad7c09c446be851e147976" translate="yes" xml:space="preserve">
          <source>When the dial button is clicked, &lt;code&gt;connectAndDial()&lt;/code&gt; is called. This starts building the WebRTC connection in preparation for sending the DTMF codes.</source>
          <target state="translated">다이얼 버튼을 클릭하면 &lt;code&gt;connectAndDial()&lt;/code&gt; 이 호출됩니다. DTMF 코드 전송 준비에 WebRTC 연결 구축이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="c7f73abc508f8682c32e1f3e323ea5afcdb1d543" translate="yes" xml:space="preserve">
          <source>When the domain lookup is finished. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;.</source>
          <target state="translated">도메인 조회가 완료된 경우 지속적 연결이 사용되거나 정보가 캐시 또는 로컬 자원에 저장된 경우 값은 &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6ad592848fdf8928a7eb321d91c7c9a32dae5882" translate="yes" xml:space="preserve">
          <source>When the domain lookup starts. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;.</source>
          <target state="translated">도메인 조회가 시작될 때 지속적 연결이 사용되거나 정보가 캐시 또는 로컬 자원에 저장된 경우 값은 &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="9ce1a04e3c286d36884562c0642e05dc2a986176" translate="yes" xml:space="preserve">
          <source>When the element does not have a first child, then &lt;code&gt;firstChild&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;. The element is still appended to the parent, after the last child. Since the parent element did not have a first child, it did not have a last child either. Consequently, the new element is the only element, after insertion.</source>
          <target state="translated">요소에 첫 번째 자식이 &lt;code&gt;firstChild&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 입니다. 요소는 마지막 자식 이후에도 여전히 부모에 추가됩니다. 부모 요소에는 첫 번째 자식이 없으므로 마지막 자식도 없었습니다. 결과적으로 새로운 요소는 삽입 후 유일한 요소입니다.</target>
        </trans-unit>
        <trans-unit id="8eff7324c9524a5ccfee088b6bad52429f10f081" translate="yes" xml:space="preserve">
          <source>When the first HTTP redirect starts. If there is no redirect, or if one of the redirects is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">첫 번째 HTTP 리디렉션이 시작될 때 리디렉션이 없거나 리디렉션 중 하나의 원점이 동일하지 않은 경우 반환되는 값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ffba0997651e82706a57373f5ce453c0458a27a8" translate="yes" xml:space="preserve">
          <source>When the following code is used inside a service worker to respond to a push messages by sending the data received via &lt;a href=&quot;../pushmessagedata&quot;&gt;&lt;code&gt;PushMessageData&lt;/code&gt;&lt;/a&gt; to the main context via a &lt;a href=&quot;../channel_messaging_api&quot;&gt;channel message&lt;/a&gt;, the event object of &lt;code&gt;onmessage&lt;/code&gt; will be a &lt;code&gt;ExtendableMessageEvent&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../pushmessagedata&quot;&gt; &lt;code&gt;PushMessageData&lt;/code&gt; &lt;/a&gt; 를 통해 수신 된 데이터를 &lt;a href=&quot;../channel_messaging_api&quot;&gt;채널 메시지&lt;/a&gt; 를 통해 기본 컨텍스트 로 전송하여 푸시 메시지에 응답하기 위해 서비스 워커 내부에서 다음 코드를 사용 하는 경우 &lt;code&gt;onmessage&lt;/code&gt; 의 이벤트 객체 는 &lt;code&gt;ExtendableMessageEvent&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="a84bb2c2165f75feccb7fb59ab1acd531f76be6e" translate="yes" xml:space="preserve">
          <source>When the following code is used inside a service worker to respond to a push messages by sending the data received via &lt;a href=&quot;pushmessagedata&quot;&gt;&lt;code&gt;PushMessageData&lt;/code&gt;&lt;/a&gt; to the main context via a &lt;a href=&quot;channel_messaging_api&quot;&gt;channel message&lt;/a&gt;, the event object of &lt;code&gt;onmessage&lt;/code&gt; will be a &lt;code&gt;ExtendableMessageEvent&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;pushmessagedata&quot;&gt; &lt;code&gt;PushMessageData&lt;/code&gt; &lt;/a&gt; 를 통해 수신 된 데이터를 &lt;a href=&quot;channel_messaging_api&quot;&gt;채널 메시지&lt;/a&gt; 를 통해 기본 컨텍스트 로 전송하여 푸시 메시지에 응답하기 위해 서비스 워커 내부에서 다음 코드를 사용 하는 경우 &lt;code&gt;onmessage&lt;/code&gt; 의 이벤트 객체 는 &lt;code&gt;ExtendableMessageEvent&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="2f311172178989f9d4dc13b5188cf4041e8ebf5b" translate="yes" xml:space="preserve">
          <source>When the following code is used inside the main thread to set up a message channel between it and a service worker for sending messages between the two, the event object of &lt;code&gt;onmessage&lt;/code&gt; will be a &lt;code&gt;ServiceWorkerMessageEvent&lt;/code&gt;.</source>
          <target state="translated">메인 스레드 내에서 다음 코드를 사용하여 두 코드 사이에 메시지를 보내기 &lt;code&gt;onmessage&lt;/code&gt; 코드와 서비스 워커 사이에 메시지 채널을 설정하면 onmessage 의 이벤트 객체 는 &lt;code&gt;ServiceWorkerMessageEvent&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="3bac4700ec5c761184b42bc84aedc27117745e7b" translate="yes" xml:space="preserve">
          <source>When the form is submitted, an event handler is run that puts the entered values into a ScrollToOptions dictionary, and then invokes the &lt;a href=&quot;../window/scrollto&quot;&gt;&lt;code&gt;Window.ScrollTo()&lt;/code&gt;&lt;/a&gt; method, passing the dictionary as a parameter:</source>
          <target state="translated">양식이 제출되면 입력 된 값을 ScrollToOptions 사전에 넣은 다음 이벤트 핸들러가 실행 되어 사전을 매개 변수로 전달하여 &lt;a href=&quot;../window/scrollto&quot;&gt; &lt;code&gt;Window.ScrollTo()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="699cc75134158d3a793326f96977d944bea59451" translate="yes" xml:space="preserve">
          <source>When the form is submitted, an event handler is run that puts the entered values into a ScrollToOptions dictionary, and then invokes the &lt;a href=&quot;window/scrollto&quot;&gt;&lt;code&gt;Window.ScrollTo()&lt;/code&gt;&lt;/a&gt; method, passing the dictionary as a parameter:</source>
          <target state="translated">양식이 제출되면 입력 된 값을 ScrollToOptions 사전에 넣은 다음 이벤트 핸들러가 실행 되어 사전을 매개 변수로 전달하여 &lt;a href=&quot;window/scrollto&quot;&gt; &lt;code&gt;Window.ScrollTo()&lt;/code&gt; &lt;/a&gt; 메소드 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="902216d2ce5fc2ca7a98151ccb8cbfac79f84472" translate="yes" xml:space="preserve">
          <source>When the function returns &lt;code&gt;true&lt;/code&gt;, this prevents the firing of the default event handler.</source>
          <target state="translated">함수가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 기본 이벤트 처리기가 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ba06b9cdd699f177726e7f57bcdcd3cd88b9d315" translate="yes" xml:space="preserve">
          <source>When the intial message is received from the main page via the &lt;a href=&quot;../window/postmessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt; method, we run the &lt;code&gt;initPort&lt;/code&gt; function. This saves the transfered port and register an onmessage handler that will be called each time a message is passed through our &lt;a href=&quot;../messagechannel&quot;&gt;&lt;code&gt;MessageChannel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본 메시지가 &lt;a href=&quot;../window/postmessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 초기 메시지를 수신 하면 &lt;code&gt;initPort&lt;/code&gt; 함수를 실행합니다 . 전송 된 포트를 저장하고 메시지가 &lt;a href=&quot;../messagechannel&quot;&gt; &lt;code&gt;MessageChannel&lt;/code&gt; 을&lt;/a&gt; 통과 할 때마다 호출 될 onmessage 핸들러를 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="dfa418df41a8e2c804b46c47c170e8d2746bbbba" translate="yes" xml:space="preserve">
          <source>When the key is first depressed, the &lt;code&gt;keydown&lt;/code&gt; event is sent.</source>
          <target state="translated">키가 처음 우울 될 때 &lt;code&gt;keydown&lt;/code&gt; 이벤트가 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="9bf05f6fc0519d8976526ddb13344e76d19faee8" translate="yes" xml:space="preserve">
          <source>When the last HTTP redirect is completed, that is when the last byte of the HTTP response has been received. If there is no redirect, or if one of the redirects is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">마지막 HTTP 리디렉션이 완료되면, 즉 HTTP 응답의 마지막 바이트가 수신 된 시점입니다. 리디렉션이 없거나 리디렉션 중 하나의 원점이 동일하지 않은 경우 반환되는 값은 &lt;code&gt;0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9b57ce896dfd5cd7a4903a914d77303cd695f765" translate="yes" xml:space="preserve">
          <source>When the light sensor of a device detects a change in the light level, it notifies the browser of that change. When the browser gets such a notification, it fires a &lt;a href=&quot;devicelightevent&quot;&gt;&lt;code&gt;DeviceLightEvent&lt;/code&gt;&lt;/a&gt; event that provides information about the exact light intensity (in lux units).</source>
          <target state="translated">장치의 광 센서가 광 레벨의 변화를 감지하면 해당 변경 사항을 브라우저에 알립니다. 브라우저가 이러한 알림을 받으면 정확한 조명 강도 (럭스 단위)에 대한 정보를 제공 하는 &lt;a href=&quot;devicelightevent&quot;&gt; &lt;code&gt;DeviceLightEvent&lt;/code&gt; &lt;/a&gt; 이벤트를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="560082e7dcd947cb29a93eede56e926881ba8fc5" translate="yes" xml:space="preserve">
          <source>When the local peer experiences an open or close event, the &lt;code&gt;handleSendChannelStatusChange()&lt;/code&gt; method is called:</source>
          <target state="translated">로컬 피어에서 열기 또는 닫기 이벤트가 발생하면 &lt;code&gt;handleSendChannelStatusChange()&lt;/code&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="27a889f8a007c01abcb4faf6d63d40c5a15a91a5" translate="yes" xml:space="preserve">
          <source>When the local user clicks the interface widget to disable hold mode, the &lt;code&gt;disableHold()&lt;/code&gt; method is called to begin the process of restoring normal functionality.</source>
          <target state="translated">로컬 사용자가 인터페이스 위젯을 클릭하여 보류 모드를 사용 안함으로 설정하면 &lt;code&gt;disableHold()&lt;/code&gt; 메소드가 호출되어 일반 기능 복원 프로세스를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="ebac40f6a72793796b91bcfc5c8b72b1f2b17b70" translate="yes" xml:space="preserve">
          <source>When the local user decides to enable hold mode, the &lt;code&gt;enableHold()&lt;/code&gt; method below is called. It accepts as input a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; containing the audio to play while the call is on hold.</source>
          <target state="translated">로컬 사용자가 보류 모드를 사용하기로 결정하면 아래 의 &lt;code&gt;enableHold()&lt;/code&gt; 메소드가 호출됩니다. 통화 대기 중 재생할 오디오가 포함 된 &lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt; 을 입력으로 받아들 입니다.</target>
        </trans-unit>
        <trans-unit id="d7f09e809f3f680076d45cee843a01c1fe3f673e" translate="yes" xml:space="preserve">
          <source>When the media stream ends, any media data not already delivered to your &lt;code&gt;ondataavailable&lt;/code&gt; handler is passed in a single &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">미디어 스트림이 끝나면 &lt;code&gt;ondataavailable&lt;/code&gt; 핸들러로 아직 전달되지 않은 미디어 데이터 는 단일 &lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; 에&lt;/a&gt; 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="200a112377c2d0da736664ec1a452098ea2f0425" translate="yes" xml:space="preserve">
          <source>When the mode is &lt;code&gt;&quot;showing&quot;&lt;/code&gt;, text tracks are performed differently depending on their &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt;. In general:</source>
          <target state="translated">모드가 &lt;code&gt;&quot;showing&quot;&lt;/code&gt; 이면 텍스트 트랙은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/kind&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt; 에 따라 다르게 수행 됩니다. 일반적으로 :</target>
        </trans-unit>
        <trans-unit id="9b66bfe8f53f6ad854aabf7ab0116c143bf98838" translate="yes" xml:space="preserve">
          <source>When the mouse is unlocked, the system cursor can exit and re-enter the browser window. If that happens, &lt;a href=&quot;mouseevent/movementx&quot;&gt;&lt;code&gt;movementX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mouseevent/movementy&quot;&gt;&lt;code&gt;movementY&lt;/code&gt;&lt;/a&gt; could be set to zero.</source>
          <target state="translated">마우스 잠금이 해제되면 시스템 커서가 브라우저 창을 종료했다가 다시 입력 할 수 있습니다. 이 경우 &lt;a href=&quot;mouseevent/movementx&quot;&gt; &lt;code&gt;movementX&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;mouseevent/movementy&quot;&gt; &lt;code&gt;movementY&lt;/code&gt; &lt;/a&gt; 를 0으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f915c69d3f7277d60c1e7e7d9711fc6729338a13" translate="yes" xml:space="preserve">
          <source>When the number of channels doesn't match between an input and an output, up- or down-mixing happens according the following rules. This can be somewhat controlled by setting the &lt;a href=&quot;../audionode/channelinterpretation&quot;&gt;&lt;code&gt;AudioNode.channelInterpretation&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;speakers&lt;/code&gt; or &lt;code&gt;discrete&lt;/code&gt;:</source>
          <target state="translated">채널 수가 입력과 출력간에 일치하지 않으면 다음 규칙에 따라 업 믹스 또는 다운 믹스가 발생합니다. &lt;a href=&quot;../audionode/channelinterpretation&quot;&gt; &lt;code&gt;AudioNode.channelInterpretation&lt;/code&gt; &lt;/a&gt; 속성을 &lt;code&gt;speakers&lt;/code&gt; 또는 &lt;code&gt;discrete&lt;/code&gt; 으로 설정하여 다소 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="91cf2afc707473bc973d50d6ca2efd4285a74d39" translate="yes" xml:space="preserve">
          <source>When the number of channels doesn't match between an input and an output, up- or down-mixing happens according the following rules. This can be somewhat controlled by setting the &lt;a href=&quot;channelinterpretation&quot;&gt;&lt;code&gt;AudioNode.channelInterpretation&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;speakers&lt;/code&gt; or &lt;code&gt;discrete&lt;/code&gt;:</source>
          <target state="translated">채널 수가 입력과 출력간에 일치하지 않으면 다음 규칙에 따라 업 믹스 또는 다운 믹스가 발생합니다. &lt;a href=&quot;channelinterpretation&quot;&gt; &lt;code&gt;AudioNode.channelInterpretation&lt;/code&gt; &lt;/a&gt; 속성을 &lt;code&gt;speakers&lt;/code&gt; 또는 &lt;code&gt;discrete&lt;/code&gt; 으로 설정하여 다소 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8ad483e8bf409e425b58e8efd619abdc5050a0c3" translate="yes" xml:space="preserve">
          <source>When the observer (callback) is invoked, the callback's parameters include a &lt;em&gt;&lt;a href=&quot;performanceobserverentrylist&quot;&gt;&lt;code&gt;performance observer entry list&lt;/code&gt;&lt;/a&gt;&lt;/em&gt; that contains only &lt;em&gt;observed&lt;/em&gt;&lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;performance entries&lt;/code&gt;&lt;/a&gt;. That is, the list contains entries only for the event types that were specified when the observer's &lt;a href=&quot;performanceobserver/observe&quot;&gt;&lt;code&gt;observe()&lt;/code&gt;&lt;/a&gt; method was invoked. The &lt;a href=&quot;performanceobserverentrylist&quot;&gt;&lt;code&gt;performance observer entry list&lt;/code&gt;&lt;/a&gt; interface has the same three &lt;code&gt;getEntries*()&lt;/code&gt; methods as the &lt;a href=&quot;performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface. However, note there is one key difference with these methods; the &lt;a href=&quot;performanceobserverentrylist&quot;&gt;&lt;code&gt;performance observer entry list&lt;/code&gt;&lt;/a&gt; versions are used to retrieve &lt;em&gt;observed&lt;/em&gt; performance entries within the observer callback.</source>
          <target state="translated">관찰자 (콜백)가 호출되면 콜백의 매개 변수에는 &lt;em&gt;관찰 된 &lt;/em&gt;&lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;performance entries&lt;/code&gt; &lt;/a&gt; 만 포함하는 &lt;em&gt;&lt;a href=&quot;performanceobserverentrylist&quot;&gt; &lt;code&gt;performance observer entry list&lt;/code&gt; &lt;/a&gt;&lt;/em&gt; 이 포함됩니다 . 즉, 목록에는 관찰자의 &lt;a href=&quot;performanceobserver/observe&quot;&gt; &lt;code&gt;observe()&lt;/code&gt; &lt;/a&gt; 메소드가 호출 될 때 지정된 이벤트 유형에 대한 항목 만 포함 됩니다. &lt;a href=&quot;performanceobserverentrylist&quot;&gt; &lt;code&gt;performance observer entry list&lt;/code&gt; &lt;/a&gt; 인터페이스는 같은 세 가지가 &lt;code&gt;getEntries*()&lt;/code&gt; 는 AS 방법 &lt;a href=&quot;performance&quot;&gt; &lt;code&gt;Performance&lt;/code&gt; &lt;/a&gt; 인터페이스를. 그러나 이러한 방법에는 한 가지 중요한 차이점이 있습니다. &lt;a href=&quot;performanceobserverentrylist&quot;&gt; &lt;code&gt;performance observer entry list&lt;/code&gt; &lt;/a&gt; 버전은 검색하는 데 사용되는 &lt;em&gt;관찰&lt;/em&gt; 관찰자 콜백 내에서 성능 항목을.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7175f21e5a2e17845e87b2f7b83e601c87827619" translate="yes" xml:space="preserve">
          <source>When the offer arrives, the callee's &lt;code&gt;handleVideoOfferMsg()&lt;/code&gt; function is called with the &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; message that was received. This function needs to do two things. First, it needs to create its own &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; and add the tracks containing the audio and video from its microphone and webcam to that. Second, it needs to process the received offer, constructing and sending its answer.</source>
          <target state="translated">오퍼가 도착하면 수신자의 &lt;code&gt;handleVideoOfferMsg()&lt;/code&gt; 함수가 수신 된 &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; 메시지 와 함께 호출됩니다 . 이 기능은 두 가지 작업을 수행해야합니다. 먼저 자체 &lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt; 을 만들고 마이크와 웹캠의 오디오 및 비디오가 포함 된 트랙을 여기에 추가해야합니다. 둘째, 수신 한 제안을 처리하고 답변을 구성하고 발송해야합니다.</target>
        </trans-unit>
        <trans-unit id="b0bec275fd0f6273c0d0acf797afd767ae95035d" translate="yes" xml:space="preserve">
          <source>When the opened database doesn't exist yet, the value of &lt;code&gt;oldVersion&lt;/code&gt; is 0.</source>
          <target state="translated">열린 데이터베이스가 아직 없으면 &lt;code&gt;oldVersion&lt;/code&gt; 값 은 0입니다.</target>
        </trans-unit>
        <trans-unit id="ee5c225e0694b3df91bd7af04aec1826c22c80d2" translate="yes" xml:space="preserve">
          <source>When the page content finishes loading (e.g. on &lt;code&gt;DOMContentLoaded&lt;/code&gt;).</source>
          <target state="translated">페이지 컨텐츠로드가 완료되면 (예 : &lt;code&gt;DOMContentLoaded&lt;/code&gt; 에서 ).</target>
        </trans-unit>
        <trans-unit id="8e922759a0f9be599e7731ead610cb8c60760586" translate="yes" xml:space="preserve">
          <source>When the page is loaded, this code is run to set up an event listener to watch for the</source>
          <target state="translated">페이지가로드되면이 코드가 실행되어 이벤트 리스너를 설정하여</target>
        </trans-unit>
        <trans-unit id="14f06ff227348a175a5ecda369bb2dfb11462ebf" translate="yes" xml:space="preserve">
          <source>When the page loads, the &lt;code&gt;startup()&lt;/code&gt; function shown below should be called by our &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;onload&lt;/code&gt; attribute (but in the example we use a button to trigger it, due to limitations of the MDN live example system).</source>
          <target state="translated">페이지가로드 될 때 아래에 표시된 &lt;code&gt;startup()&lt;/code&gt; 함수는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt; &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소의 &lt;code&gt;onload&lt;/code&gt; 속성에 의해 호출되어야 합니다 (그러나이 예에서는 MDN 라이브 예제 시스템의 제한으로 인해 버튼을 사용하여이를 트리거합니다).</target>
        </trans-unit>
        <trans-unit id="f8d059be663cdcd4a12850cd2f6a0c99689b6fdf" translate="yes" xml:space="preserve">
          <source>When the page loads, this code runs to set up and run the example:</source>
          <target state="translated">페이지가로드되면이 코드가 실행되어 예제를 설정하고 실행합니다.</target>
        </trans-unit>
        <trans-unit id="8986747220e0569aa52b83a6cd262503f62f9870" translate="yes" xml:space="preserve">
          <source>When the page loads, we do some basic setup: we fetch references to the dial button and the log output box elements, and we use &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt; to add an event listener to the dial button so that clicking it calls the &lt;code&gt;connectAndDial()&lt;/code&gt; function to begin the connection process.</source>
          <target state="translated">페이지가로드되면 몇 가지 기본 설정을 수행합니다. 다이얼 버튼과 로그 출력 상자 요소에 대한 참조를 가져오고 &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;addEventListener()&lt;/code&gt; &lt;/a&gt; 를 사용 하여 이벤트 리스너를 다이얼 버튼에 추가하여 클릭하면 &lt;code&gt;connectAndDial()&lt;/code&gt; 함수를 호출합니다. 연결 프로세스를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="839549cedee1215fb2d0d740f0fd133bdc03411a" translate="yes" xml:space="preserve">
          <source>When the parameter's value finishes following the curve, its value is guaranteed to match the last value in the set of values specified in the &lt;code&gt;values&lt;/code&gt; parameter.</source>
          <target state="translated">매개 변수 값이 곡선을 따라 완료되면 해당 값은 &lt;code&gt;values&lt;/code&gt; 매개 변수에 지정된 값 세트의 마지막 값과 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="3134eb9034ba0688c09d8933a0459e0314d97425" translate="yes" xml:space="preserve">
          <source>When the parser finished its work on the main document, that is when its &lt;a href=&quot;document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'complete'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">파서가 주 문서에 대한 작업을 마치면, 즉 &lt;a href=&quot;document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;'complete'&lt;/code&gt; 로 변경되고 해당 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f808803da015941c4bf2374be53dabc0ea78103f" translate="yes" xml:space="preserve">
          <source>When the parser finished its work on the main document, that is when its &lt;a href=&quot;document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'interactive'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">파서가 주 문서에 대한 작업을 마치면, 즉 &lt;a href=&quot;document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;'interactive'&lt;/code&gt; 로 변경되고 해당 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dbb3c5d76fb79c825556e2cee9e32a2b42390e41" translate="yes" xml:space="preserve">
          <source>When the parser started its work, that is when its &lt;a href=&quot;document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'loading'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">파서가 작업을 시작했을 때, 즉 &lt;a href=&quot;document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;'loading'&lt;/code&gt; 으로 변경되고 해당 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; 이벤트가 발생 하는 시점 입니다.</target>
        </trans-unit>
        <trans-unit id="21ee0794ad950a44e9f58b2c0a55f4df23b09dd1" translate="yes" xml:space="preserve">
          <source>When the port is started, both scripts post messages to the worker and handle messages sent from it using &lt;code&gt;port.postMessage()&lt;/code&gt; and &lt;code&gt;port.onmessage&lt;/code&gt;, respectively:</source>
          <target state="translated">포트가 시작되면 두 스크립트는 모두 작업자에게 메시지를 게시 하고 각각 &lt;code&gt;port.postMessage()&lt;/code&gt; 및 &lt;code&gt;port.onmessage&lt;/code&gt; 를 사용하여 보낸 메시지를 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="88d47ec674ecb886615c0be510f12c1e0ec92e38" translate="yes" xml:space="preserve">
          <source>When the preview video begins to play, we know there's media to record, so we respond by calling the &lt;code&gt;&lt;a href=&quot;#Starting_media_recording&quot;&gt;startRecording()&lt;/a&gt;&lt;/code&gt; function we created earlier, passing in the preview video stream (as the source media to be recorded) and &lt;code&gt;recordingTimeMS&lt;/code&gt; as the number of milliseconds of media to record. As mentioned before, &lt;code&gt;startRecording()&lt;/code&gt; returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; whose resolution handler is called (receiving as input an array of &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; objects containing the chunks of recorded media data) once recording has completed.</source>
          <target state="translated">미리보기 비디오가 재생되기 시작하면 기록 할 미디어가 있다는 것을 알기 때문에 앞에서 만든 &lt;code&gt;&lt;a href=&quot;#Starting_media_recording&quot;&gt;startRecording()&lt;/a&gt;&lt;/code&gt; 함수 를 호출 하여 미리보기 비디오 스트림 (기록 할 소스 미디어로)과 &lt;code&gt;recordingTimeMS&lt;/code&gt; 를 기록 할 미디어 (밀리 초)입니다. 앞에서 언급했듯이 &lt;code&gt;startRecording()&lt;/code&gt; 은 일단 기록이 완료되면 해상도 핸들러가 호출 된 ( 기록 된 미디어 데이터 청크를 포함하는 &lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt; 객체 의 배열을 입력으로 수신) &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d28c7be1ba200f05c9f79e1058a1e236de27ea78" translate="yes" xml:space="preserve">
          <source>When the problem is reported, the user agent may focus the element and change the scrolling position of the document or perform some other action that brings the element to the user's attention. User agents may report more than one constraint violation if this element suffers from multiple problems at once. If the element is not rendered, then the user agent may report the error for the running script instead of notifying the user.</source>
          <target state="translated">문제가보고되면 사용자 에이전트는 요소의 초점을 맞추고 문서의 스크롤 위치를 변경하거나 요소를 사용자의주의를 끌 수있는 다른 작업을 수행 할 수 있습니다. 이 요소에 여러 문제가 동시에 발생하면 사용자 에이전트는 둘 이상의 제약 조건 위반을보고 할 수 있습니다. 요소가 렌더링되지 않으면 사용자 에이전트는 사용자에게 알리지 않고 실행중인 스크립트에 대한 오류를보고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd399f4e43d1fbff3051d2f3cc9db341694f374e" translate="yes" xml:space="preserve">
          <source>When the promise is fulfilled, the fulfillment handler receives a value of &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">약속이 이행되면 이행 핸들러는 &lt;code&gt;undefined&lt;/code&gt; 값을받습니다 .</target>
        </trans-unit>
        <trans-unit id="1a97df6b10a130f07c83f20a008316d901cdbda8" translate="yes" xml:space="preserve">
          <source>When the prompt for unload terminates on the previous document in the same browsing context. If there is no previous document, this value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;.</source>
          <target state="translated">언로드 프롬프트가 동일한 찾아보기 컨텍스트에서 이전 문서에서 종료되는 경우 이전 문서가없는 경우이 값은 &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="adad6cb70dcae1a052aa53cd9c1eeeba06043a37" translate="yes" xml:space="preserve">
          <source>When the receiver begins to receive media, an event is delivered to the receiver's &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;receiverPC&lt;/code&gt;. As explained in &lt;a href=&quot;#Starting_the_connection_process&quot;&gt;Starting the connection process&lt;/a&gt;, the current WebRTC specification uses the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; event for this, but some browsers haven't been updated to support this yet, so we also need to handle the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addstream&quot;&gt;addstream&lt;/a&gt;&lt;/code&gt; event. The &lt;code&gt;handleReceiverTrackEvent()&lt;/code&gt; and &lt;code&gt;handleReceiverAddStreamEvent()&lt;/code&gt; methods, shown below, handle these.</source>
          <target state="translated">수신자가 매체를 수신하기 시작하면 이벤트가 수신자의 &lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;receiverPC&lt;/code&gt; 로 전달됩니다 . &lt;a href=&quot;#Starting_the_connection_process&quot;&gt;연결 프로세스 시작에&lt;/a&gt; 설명 된대로 현재 WebRTC 스펙은이를 위해 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; 이벤트를 사용 하지만 일부 브라우저는 아직이를 지원하도록 업데이트되지 않았으므로 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addstream&quot;&gt;addstream&lt;/a&gt;&lt;/code&gt; 이벤트도 처리해야합니다 . 아래에 표시된 &lt;code&gt;handleReceiverTrackEvent()&lt;/code&gt; 및 &lt;code&gt;handleReceiverAddStreamEvent()&lt;/code&gt; 메소드가 이를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="537c5b67511ced3deaf928994ad8df896145f723" translate="yes" xml:space="preserve">
          <source>When the receiver's &lt;code&gt;RTCPeerConnection&lt;/code&gt; ICE layer comes up with a new candidate to propose, it issues an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; event to &lt;code&gt;receiverPC&lt;/code&gt;. The &lt;code&gt;icecandidate&lt;/code&gt; event handler's job is to transmit the candidate to the caller. In our example, we are directly controlling both the caller and the receiver, so we can just directly add the candidate to the caller by calling its &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt;&lt;code&gt;addIceCandidate()&lt;/code&gt;&lt;/a&gt; method. That's handled by &lt;code&gt;handleReceiverIceEvent()&lt;/code&gt;.</source>
          <target state="translated">수신기의 경우 &lt;code&gt;RTCPeerConnection&lt;/code&gt; 의 얼음 층이 제안하는 새로운 후보와 함께 제공, 그것은 문제 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; 의 에 이벤트 &lt;code&gt;receiverPC&lt;/code&gt; 을 . &lt;code&gt;icecandidate&lt;/code&gt; 의 이벤트 핸들러의 역할은 전송에 호출자에게 후보입니다. 이 예에서는 호출자와 수신자를 모두 직접 제어하므로 &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt; &lt;code&gt;addIceCandidate()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 후보를 호출자에 직접 추가 할 수 있습니다 . 이것은 &lt;code&gt;handleReceiverIceEvent()&lt;/code&gt; 의해 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="3e08a7dedbb40b64e048a6926edb37c0ec6a93f0" translate="yes" xml:space="preserve">
          <source>When the request to open a connection is sent to the network. If the transport layer reports an error and the connection establishment is started again, the last connection establishment start time is given. If a persistent connection is used, the value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;.</source>
          <target state="translated">연결 열기 요청이 네트워크로 전송 될 때 전송 계층이 오류를보고하고 연결 설정이 다시 시작되면 마지막 연결 설정 시작 시간이 제공됩니다. 지속적 연결이 사용되는 경우 값은 &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="6330942dde22ea4f2ab3c7b78ab71f7dcc0e416d" translate="yes" xml:space="preserve">
          <source>When the sample is ready to play, the program sets up the UI so it is ready to go.</source>
          <target state="translated">샘플을 재생할 준비가되면 프로그램은 UI를 설정하여 바로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd95af1279863fef4276b2646716dcbc0614ae30" translate="yes" xml:space="preserve">
          <source>When the scissor test is enabled, only pixels within the scissor box can be modified by drawing commands.</source>
          <target state="translated">가위 테스트가 활성화되면 가위 상자 내의 픽셀 만 드로잉 명령으로 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03fc356dce5942faad0d83681aaba03d171f758a" translate="yes" xml:space="preserve">
          <source>When the script is run, we set up an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event listener, so that once the page is fully loaded, our &lt;code&gt;startup()&lt;/code&gt; function is called.</source>
          <target state="translated">스크립트가 실행될 때 페이지가 완전히로드되면 &lt;code&gt;startup()&lt;/code&gt; 함수가 호출 되도록 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; 이벤트 리스너를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="b0a37825790ba0caa1e8e247362ba97814c0ef39" translate="yes" xml:space="preserve">
          <source>When the second &lt;code&gt;restore()&lt;/code&gt; statement is called, the original state (the one we set up before the first call to &lt;code&gt;save&lt;/code&gt;) is restored and the last rectangle is once again drawn in black.</source>
          <target state="translated">두 번째 &lt;code&gt;restore()&lt;/code&gt; 문이 호출되면 원래 상태 ( &lt;code&gt;save&lt;/code&gt; 하기 위해 첫 번째 호출 전에 설정 한 상태 )가 복원되고 마지막 사각형이 다시 한 번 검은 색으로 그려집니다.</target>
        </trans-unit>
        <trans-unit id="fc7bf41b6462d43688e17f92d02accf760e77236" translate="yes" xml:space="preserve">
          <source>When the secure connection handshake starts. If no such connection is requested, it returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">보안 연결 핸드 셰이크가 시작될 때 이러한 연결이 요청되지 않으면 &lt;code&gt;0&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="33155266d0c1586320b9d2840caac0f2b71eeadf" translate="yes" xml:space="preserve">
          <source>When the shift key is pressed, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; event is first fired, and the &lt;code&gt;key&lt;/code&gt; property value is set to be the string &lt;code&gt;&quot;Shift&quot;&lt;/code&gt;. As we keep holding this key, the keydown event does not continue to fire repeatedly because it produced no character key.</source>
          <target state="translated">Shift 키를 누르면 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; 이벤트가 먼저 시작되고 &lt;code&gt;key&lt;/code&gt; 속성 값이 문자열 &lt;code&gt;&quot;Shift&quot;&lt;/code&gt; 로 설정 됩니다. 이 키를 계속 누르고 있으면 키 다운 이벤트는 문자 키가 생성되지 않아 계속 반복적으로 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c33925f313b9963274b88c6fe522b5dbd1c593f0" translate="yes" xml:space="preserve">
          <source>When the shift key is pressed, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; event is first fired, and the &lt;code&gt;key&lt;/code&gt; property value is set to the string &lt;code&gt;&quot;Shift&quot;&lt;/code&gt;. As we keep holding this key, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; event does not continue to fire repeatedly because it does not produce a character key.</source>
          <target state="translated">Shift 키를 누르면 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; 이벤트가 먼저 시작되고 &lt;code&gt;key&lt;/code&gt; 속성 값이 &lt;code&gt;&quot;Shift&quot;&lt;/code&gt; 문자열로 설정됩니다 . 우리가이 키를 계속 누르고으로, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; 이벤트는 문자 키를 생성하지 않기 때문에 반복적으로 불을 계속하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="edb11773ee8c2aacfc99893b3087a6f719b5dae2" translate="yes" xml:space="preserve">
          <source>When the source stream ends, &lt;code&gt;state&lt;/code&gt; is set to &lt;code&gt;&quot;inactive&quot;&lt;/code&gt; and data gathering stops. A final &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dataavailable&quot;&gt;dataavailable&lt;/a&gt;&lt;/code&gt; event is sent to the &lt;code&gt;MediaRecorder&lt;/code&gt;, followed by a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/stop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="translated">소스 스트림이 종료되면 &lt;code&gt;state&lt;/code&gt; 가 &lt;code&gt;&quot;inactive&quot;&lt;/code&gt; 설정 되고 데이터 수집이 중지됩니다. 최종 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dataavailable&quot;&gt;dataavailable&lt;/a&gt;&lt;/code&gt; 이벤트가 &lt;code&gt;MediaRecorder&lt;/code&gt; 로 전송 된 후 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/stop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt; 이벤트가 이어집니다 .</target>
        </trans-unit>
        <trans-unit id="6feee11ede65732d796f8f44eec1bdd622f546c7" translate="yes" xml:space="preserve">
          <source>When the stream is done (&lt;code&gt;if (done)&lt;/code&gt;), we run &lt;code&gt;reader.cancel()&lt;/code&gt; to cancel the stream, signalling that we don't need to use it any more.</source>
          <target state="translated">스트림이 완료되면 ( &lt;code&gt;if (done)&lt;/code&gt; ), &lt;code&gt;reader.cancel()&lt;/code&gt; 을 실행 하여 스트림을 취소하고 더 ​​이상 사용할 필요가 없다는 신호를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="c9605836e46f30a630e4532dbbfb1b2329dc5df4" translate="yes" xml:space="preserve">
          <source>When the stream is obtained, it's attached to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element so that it's visible on screen, and we grab the audio track and video track into the variables &lt;code&gt;audioTrack&lt;/code&gt; and &lt;code&gt;videoTrack&lt;/code&gt;.</source>
          <target state="translated">스트림을 가져 오면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소에 연결되어 화면에 표시되며 오디오 트랙 및 비디오 트랙을 &lt;code&gt;audioTrack&lt;/code&gt; 및 &lt;code&gt;videoTrack&lt;/code&gt; 변수로 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="44380c5f983cc0aa64cc8e5f12f59ade351d3e24" translate="yes" xml:space="preserve">
          <source>When the user begins a drag by clicking and dragging from the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/vbox&quot;&gt;vbox&lt;/a&gt;&lt;/code&gt; above, the &lt;code&gt;startDrag()&lt;/code&gt; function below is called.</source>
          <target state="translated">사용자가 위 의 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/vbox&quot;&gt;vbox&lt;/a&gt;&lt;/code&gt; 에서 클릭하고 드래그하여 드래그를 시작하면 아래 의 &lt;code&gt;startDrag()&lt;/code&gt; 함수가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a727dd034a906afe61a84778788e2557337f530d" translate="yes" xml:space="preserve">
          <source>When the user clicks on a username they want to call, the &lt;code&gt;invite()&lt;/code&gt; function is invoked as the event handler for that &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event:</source>
          <target state="translated">사용자가 호출하려는 사용자 이름을 클릭하면 &lt;code&gt;invite()&lt;/code&gt; 함수가 해당 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; 이벤트 의 이벤트 핸들러로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="1a9cb607dc7ab7c1e6a20774f9edcd5040f0b611" translate="yes" xml:space="preserve">
          <source>When the user clicks the &quot;Connect&quot; button, the &lt;code&gt;connectPeers()&lt;/code&gt; method is called. We're going to break this up and look at it a bit at a time, for clarity.</source>
          <target state="translated">사용자가 &quot;연결&quot;버튼을 클릭하면 &lt;code&gt;connectPeers()&lt;/code&gt; 메소드가 호출됩니다. 우리는 이것을 명확하게하기 위해 이것을 분해하고 한 번에 조금 살펴볼 것입니다.</target>
        </trans-unit>
        <trans-unit id="6cf9ab1ead49e14d7101b88104637155345dba0b" translate="yes" xml:space="preserve">
          <source>When the user clicks the &quot;Disconnect&quot; button, the &lt;code&gt;disconnectPeers()&lt;/code&gt; method previously set as that button's handler is called.</source>
          <target state="translated">사용자가 &quot;연결 끊기&quot;단추를 클릭하면 이전에 해당 단추의 처리기로 설정된 &lt;code&gt;disconnectPeers()&lt;/code&gt; 메서드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="38f71e84f14303251b25fa9bc7c263c60c6e12ea" translate="yes" xml:space="preserve">
          <source>When the user clicks the &quot;Hang Up&quot; button to end the call, the &lt;code&gt;hangUpCall()&lt;/code&gt; function is called:</source>
          <target state="translated">사용자가 &quot;전화 끊기&quot;버튼을 클릭하여 통화를 종료하면 &lt;code&gt;hangUpCall()&lt;/code&gt; 함수가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="a0560da4e829067e55910d706beed3eb7c32acaf" translate="yes" xml:space="preserve">
          <source>When the user clicks the OK button, text entered in the input field is returned. If the user clicks OK without entering any text, an empty string is returned. If the user clicks the Cancel button, this function returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">사용자가 확인 버튼을 클릭하면 입력 필드에 입력 한 텍스트가 반환됩니다. 사용자가 텍스트를 입력하지 않고 확인을 클릭하면 빈 문자열이 반환됩니다. 사용자가 취소 버튼을 클릭하면이 함수는 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0da7af71e9afccd4774acf1db4d7f301071f054e" translate="yes" xml:space="preserve">
          <source>When the user clicks the play/pause toggle button while the oscillators aren't playing, the &lt;code&gt;startOscillators()&lt;/code&gt; function gets called.</source>
          <target state="translated">오실레이터가 재생되지 않는 동안 사용자가 재생 / 일시 정지 토글 버튼을 클릭하면 &lt;code&gt;startOscillators()&lt;/code&gt; 함수가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="85a5b4ec0d907d93592cb3b8ce597a8b5f7e9392" translate="yes" xml:space="preserve">
          <source>When the user lifts a finger off the surface, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; event is sent. We handle this event by calling the &lt;code&gt;handleEnd()&lt;/code&gt; function below. Its job is to draw the last line segment for the touch that ended and remove the touch point from the ongoing touch list.</source>
          <target state="translated">사용자가 표면에서 손가락을 떼면 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; 이벤트가 전송됩니다. 아래 &lt;code&gt;handleEnd()&lt;/code&gt; 함수 를 호출하여이 이벤트를 처리 합니다. 그 작업은 종료 된 터치의 마지막 선분을 그리고 진행중인 터치리스트에서 터치 포인트를 제거하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="6dbd3f962c7dae65fbc32df1e5d887467a22b95e" translate="yes" xml:space="preserve">
          <source>When the user lifts a finger off the surface, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; event is sent. We handle this by calling the &lt;code&gt;handleEnd()&lt;/code&gt; function below. Its job is to draw the last line segment for each touch that ended and remove the touch point from the ongoing touch list.</source>
          <target state="translated">사용자가 손가락을 표면에서 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; 이벤트가 전송됩니다. 아래 &lt;code&gt;handleEnd()&lt;/code&gt; 함수 를 호출하여 이를 처리 합니다. 그 작업은 종료 된 각 터치에 대해 마지막 선 세그먼트를 그리고 진행중인 터치 목록에서 터치 포인트를 제거하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="71d928d3e6a835e3c077144d6aedf206b3dd2962" translate="yes" xml:space="preserve">
          <source>When the user minimizes the window or switches to another tab, the API sends a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/visibilitychange&quot;&gt;visibilitychange&lt;/a&gt;&lt;/code&gt; event to let listeners know the state of the page has changed. You can detect the event and perform some actions or behave differently. For example, if your web app is playing a video, it can pause the video when the user puts the tab into the background, and resume playback when the user returns to the tab. The user doesn't lose their place in the video, the video's soundtrack doesn't interfere with audio in the new foreground tab, and the user doesn't miss any of the video in the meantime.</source>
          <target state="translated">사용자가 창을 최소화하거나 다른 탭으로 전환하면 API는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/visibilitychange&quot;&gt;visibilitychange&lt;/a&gt;&lt;/code&gt; 이벤트를 보내 청취자에게 페이지 상태가 변경되었음을 알립니다. 이벤트를 감지하고 일부 조치를 수행하거나 다르게 작동 할 수 있습니다. 예를 들어, 웹 앱에서 비디오를 재생하는 경우 사용자가 탭을 배경에 넣을 때 비디오를 일시 중지하고 사용자가 탭으로 돌아 오면 재생을 다시 시작할 수 있습니다. 사용자가 비디오에서 자리를 잃지 않고 비디오의 사운드 트랙이 새로운 전경 탭의 오디오를 방해하지 않으며 그 동안 사용자는 비디오를 놓치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e9767aacd80e0e11093c6182eb78d14ae45fcb58" translate="yes" xml:space="preserve">
          <source>When the user presses the &quot;Send&quot; button, the sendMessage() method we've established as the handler for the button's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event is called. That method is simple enough:</source>
          <target state="translated">사용자가 &quot;Send&quot;버튼을 누르면 버튼의 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; 이벤트 핸들러로 설정 한 sendMessage () 메소드 가 호출됩니다. 그 방법은 충분히 간단합니다.</target>
        </trans-unit>
        <trans-unit id="691a84eb7e0015fcfba268cd3a31b2d0b4a6aad7" translate="yes" xml:space="preserve">
          <source>When the user releases the key, the &lt;code&gt;keyup&lt;/code&gt; event is sent.</source>
          <target state="translated">사용자가 키를 &lt;code&gt;keyup&lt;/code&gt; 이벤트가 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="046dc1872cb2544b6c632950577d726593ff414e" translate="yes" xml:space="preserve">
          <source>When the user releases the mouse, the drag and drop operation ends. If the mouse was released over an element that is a valid drop target, that is, one that cancelled the last &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; or &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event, and then the drop will be successful, and a &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event will fire at the target. Otherwise, the drag operation is cancelled, and no &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event is fired.</source>
          <target state="translated">사용자가 마우스를 놓으면 드래그 앤 드롭 작업이 종료됩니다. 마우스가 유효한 놓기 대상인 요소, 즉 마지막 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 이벤트 를 취소 한 요소 위에 놓인 경우 놓기가 성공하고 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 이벤트가 대상에서 시작됩니다. 그렇지 않으면 드래그 작업이 취소되고 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 이벤트가 발생 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="90cd70947355aae5353dbe81d9dacd074974261d" translate="yes" xml:space="preserve">
          <source>When the user selects a file, the &lt;code&gt;handleFiles()&lt;/code&gt; function gets called with a &lt;a href=&quot;../filelist&quot;&gt;&lt;code&gt;FileList&lt;/code&gt;&lt;/a&gt; object containing &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects representing the files selected by the user.</source>
          <target state="translated">사용자가 파일을 선택하면 &lt;code&gt;handleFiles()&lt;/code&gt; 함수가 사용자가 선택한 파일을 나타내는 &lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 객체를 포함 하는 &lt;a href=&quot;../filelist&quot;&gt; &lt;code&gt;FileList&lt;/code&gt; &lt;/a&gt; 객체 와 함께 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="8204c07806596cca627eedd95b13c66cb1a8f3e1" translate="yes" xml:space="preserve">
          <source>When the value of this property changes a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event fires on the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">이 속성 값이 변경되면 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; 이벤트가 &lt;a href=&quot;../document&quot;&gt; &lt;code&gt;document&lt;/code&gt; &lt;/a&gt; 객체 에서 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="23287c04cee6187c8575338ae4ce1445f08cebdf" translate="yes" xml:space="preserve">
          <source>When the value of this property changes, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/visibilitychange&quot;&gt;visibilitychange&lt;/a&gt;&lt;/code&gt; event is sent to the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 속성의 값이 변경되면 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/visibilitychange&quot;&gt;visibilitychange&lt;/a&gt;&lt;/code&gt; 변경 이벤트가 &lt;a href=&quot;../document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt; 로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="4aabbed96dc4375bad394b2d3431585bafa5eb9e" translate="yes" xml:space="preserve">
          <source>When the visibility of the specified element crosses over one of the observer's visibility thresholds (as listed in &lt;a href=&quot;thresholds&quot;&gt;&lt;code&gt;IntersectionObserver.thresholds&lt;/code&gt;&lt;/a&gt;, the observer's callback is executed with an &lt;a href=&quot;../intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; representing the intersection change which occurred. Note that this design allows multiple elements' intersection changes to be processed by a single call to the callback using an array of &lt;code&gt;IntersectionObserverEntry&lt;/code&gt; objects.</source>
          <target state="translated">나열된 바와 같이 관찰자의 시야 임계 값 중 하나 (이상 지정된 요소 십자가의 공개시 &lt;a href=&quot;thresholds&quot;&gt; &lt;code&gt;IntersectionObserver.thresholds&lt;/code&gt; 은&lt;/a&gt; , 관찰자의 콜백가 함께 실행 &lt;a href=&quot;../intersectionobserverentry&quot;&gt; &lt;code&gt;IntersectionObserverEntry&lt;/code&gt; 이&lt;/a&gt; 교차 변화를 나타내는 발생한다. 이러한 설계는 여러 요소의 교점으로 변경 허용 참고 &lt;code&gt;IntersectionObserverEntry&lt;/code&gt; 객체 의 배열을 사용하여 콜백에 대한 단일 호출로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="d2941bdb6d2957bace5c69002a5658260596873c" translate="yes" xml:space="preserve">
          <source>When there is an error caused by calling &lt;a href=&quot;element/requestpointerlock&quot;&gt;&lt;code&gt;requestPointerLock()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;document/exitpointerlock&quot;&gt;&lt;code&gt;exitPointerLock()&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockerror&quot;&gt;pointerlockerror&lt;/a&gt;&lt;/code&gt; event is dispatched to the &lt;code&gt;document&lt;/code&gt;. This is a simple event and contains no extra data.</source>
          <target state="translated">전화에 의한 오류가있는 경우 &lt;a href=&quot;element/requestpointerlock&quot;&gt; &lt;code&gt;requestPointerLock()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;document/exitpointerlock&quot;&gt; &lt;code&gt;exitPointerLock()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockerror&quot;&gt;pointerlockerror&lt;/a&gt;&lt;/code&gt; 의 이벤트가 파견되는 &lt;code&gt;document&lt;/code&gt; . 이것은 간단한 이벤트이며 추가 데이터가 없습니다.</target>
        </trans-unit>
        <trans-unit id="33c0c76361bf9f839d684610f50b7454c7d59ae1" translate="yes" xml:space="preserve">
          <source>When there is no selection, the active element is the page's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">선택이 없으면 활성 요소는 페이지의 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt; &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="939ca88904b6a1bf7a85b5630413d3f6b194d620" translate="yes" xml:space="preserve">
          <source>When these transferable objects are transferred, they are 'neutered' on the previous context &amp;mdash; the one they previously belonged to. For instance a port, when is sent, cannot be used anymore by the original context. Note that the only two objects that can currently be transferred are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 전송 가능한 객체가 전송되면 이전 컨텍스트 (이전에 속한 객체)에서 '중립'됩니다. 예를 들어, 포트가 전송되면 더 이상 원래 컨텍스트에서 사용할 수 없습니다. 현재 전송할 수있는 두 개의 오브젝트는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;messageport&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="04293ceb4c72045381c1033f9d03a53a9fc46188" translate="yes" xml:space="preserve">
          <source>When this event is processed, the target's border is set to &lt;code&gt;dashed&lt;/code&gt; to provide a clear visual indication the element has received a move event.</source>
          <target state="translated">이 이벤트가 처리되면 요소의 이동 이벤트를 수신 한 명확한 시각적 표시를 제공하기 위해 대상의 경계가 &lt;code&gt;dashed&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="55306c9e63cf68f3a0947c7106d9b313abd34896" translate="yes" xml:space="preserve">
          <source>When this event returns (or sets the &lt;code&gt;returnValue&lt;/code&gt; property to) a value other than &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, the user is prompted to confirm the page unload. In some browsers, the return value of the event is displayed in this dialog. Starting with Firefox 44, Chrome 51, Opera 38 and Safari 9.1, a generic string not under the control of the webpage will be shown instead of the returned string. For example, Firefox displays the string &quot;This page is asking you to confirm that you want to leave - data you have entered may not be saved.&quot; (See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=588292&quot;&gt;bug 588292&lt;/a&gt;), and Chrome displays the string &quot;Do you want to leave this site? Changes you made may not be saved&quot; (see &lt;a href=&quot;https://www.chromestatus.com/feature/5349061406228480&quot;&gt;Chrome Platform Status&lt;/a&gt;).</source>
          <target state="translated">이 이벤트가 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; 이외의 값을 반환하거나 &lt;code&gt;returnValue&lt;/code&gt; 속성을 설정 하면 페이지 언로드를 확인하라는 메시지가 표시됩니다. 일부 브라우저에서는이 대화 상자에 이벤트 반환 값이 표시됩니다. Firefox 44, Chrome 51, Opera 38 및 Safari 9.1부터는 웹 페이지에서 제어하지 않는 일반 문자열이 반환 된 문자열 대신 표시됩니다. 예를 들어, Firefox는 &quot;이 페이지에서 나가고 싶은지 묻는 메시지를 표시합니다. 입력 한 데이터가 저장되지 않았을 수 있습니다.&quot; ( &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=588292&quot;&gt;버그 588292&lt;/a&gt; 참조 ) Chrome에 '이 사이트를 떠나시겠습니까? 변경 사항이 저장되지 않았을 수 있습니다'라는 문자열이 표시됩니다 ( &lt;a href=&quot;https://www.chromestatus.com/feature/5349061406228480&quot;&gt;Chrome 플랫폼 상태&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="b675ce375b683ebfefb729b81a7eb5944f8b8e72" translate="yes" xml:space="preserve">
          <source>When this example is executed, it begins by collecting references to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element as well as the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; used to toggle playback on and off. It then sets up an event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event on the play toggle button and attempts to automatically begin playback by calling &lt;code&gt;playVideo()&lt;/code&gt;.</source>
          <target state="translated">이 예제가 실행되면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소와 재생을 켜고 끄는 데 사용되는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; 에&lt;/a&gt; 대한 참조를 수집하여 시작 합니다. 그런 다음 재생 전환 버튼 에서 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; 이벤트에 대한 이벤트 핸들러를 설정하고 &lt;code&gt;playVideo()&lt;/code&gt; 를 호출하여 자동으로 재생을 시작하려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="d6963259b1639a97714b25bf71859ceda2efe355" translate="yes" xml:space="preserve">
          <source>When this is a new document created dynamically.</source>
          <target state="translated">이 문서가 동적으로 작성된 새 문서 인 경우</target>
        </trans-unit>
        <trans-unit id="a7cc7af49aee2c249093e11831d780c2917df107" translate="yes" xml:space="preserve">
          <source>When this property is used, font loading has a timeline with three periods. The lengths of the first two periods depend on the value of the property and the user agent. (See below.)</source>
          <target state="translated">이 속성을 사용하면 글꼴로드에 3 개의 마침표가있는 타임 라인이 있습니다. 처음 두 기간의 길이는 속성 값과 사용자 에이전트에 따라 다릅니다. (아래 참조)</target>
        </trans-unit>
        <trans-unit id="d3b8d4c5e0bbbf65d205f57082e9e093bfa6a136" translate="yes" xml:space="preserve">
          <source>When this property's value changes, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/connectionstatechange&quot;&gt;connectionstatechange&lt;/a&gt;&lt;/code&gt; event is sent to the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">이 속성 값이 변경되면 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/connectionstatechange&quot;&gt;connectionstatechange&lt;/a&gt;&lt;/code&gt; 이벤트가 &lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt; 인스턴스로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="72fcf2f3217fcc81de10c510d68d0a69d72945d4" translate="yes" xml:space="preserve">
          <source>When this routine is called, the video element is displaying the most recent frame of video data, which looks like this:</source>
          <target state="translated">이 루틴이 호출되면 video 요소는 가장 최근의 비디오 데이터 프레임을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="12da763f4582496e5d8fcc3f5219d4d93ab09a37" translate="yes" xml:space="preserve">
          <source>When this script gets executed, the image starts loading.</source>
          <target state="translated">이 스크립트가 실행되면 이미지가로드되기 시작합니다.</target>
        </trans-unit>
        <trans-unit id="79065f4bd450dbbee8cbd4937d33d44eccde0b47" translate="yes" xml:space="preserve">
          <source>When time runs out, if there are still tasks left in the list, we call &lt;a href=&quot;window/requestidlecallback&quot;&gt;&lt;code&gt;requestIdleCallback()&lt;/code&gt;&lt;/a&gt; again so that we can continue to process the tasks the next time there's idle time available. If the queue is empty, we set taskHandle to 0 to indicate that we don't have a callback scheduled. That way, we'll know to request a callback next time &lt;code&gt;enqueueTask()&lt;/code&gt; is called.</source>
          <target state="translated">시간이 &lt;a href=&quot;window/requestidlecallback&quot;&gt; &lt;code&gt;requestIdleCallback()&lt;/code&gt; &lt;/a&gt; 때 목록에 아직 작업이 남아 있으면 다음에 유휴 시간이있을 때 작업을 계속 처리 할 수 ​​있도록 requestIdleCallback ()을 다시 호출 합니다. 대기열이 비어 있으면 우리는 callHand이 예약되지 않았 음을 나타 내기 위해 taskHandle을 0으로 설정합니다. 그렇게하면 다음에 &lt;code&gt;enqueueTask()&lt;/code&gt; 가 호출 될 때 콜백을 요청해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0aac95d000954a3d204a1d1969ae467ca96ea7d4" translate="yes" xml:space="preserve">
          <source>When two or more pointer device types are being used concurrently, multiple pointers (one for each pointerType) are considered primary. For example, a touch contact and a mouse cursor moved simultaneously will produce pointers that are both considered primary. If there are multiple primary pointers, these pointers will all produce &lt;em&gt;compatibility mouse events&lt;/em&gt; (see &lt;a href=&quot;../pointer_events&quot;&gt;&lt;code&gt;Pointer_events&lt;/code&gt;&lt;/a&gt; for more information about pointer, mouse and touch interaction).</source>
          <target state="translated">둘 이상의 포인터 장치 유형을 동시에 사용하는 경우 여러 포인터 (각 pointerType에 하나씩)가 기본으로 간주됩니다. 예를 들어, 터치 접점과 마우스 커서가 동시에 이동하면 기본으로 간주되는 포인터가 생성됩니다. 기본 포인터가 여러 개인 경우 이러한 포인터는 모두 &lt;em&gt;호환 마우스 이벤트를&lt;/em&gt; 생성 &lt;em&gt;합니다&lt;/em&gt; ( 포인터, 마우스 및 터치 상호 작용에 대한 자세한 내용 은 &lt;a href=&quot;../pointer_events&quot;&gt; &lt;code&gt;Pointer_events&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="79146cc2fed45810d8933ee53b7f0d75b48acaa3" translate="yes" xml:space="preserve">
          <source>When two users running Firefox are communicating on a data channel, the message size limit is much larger than when Firefox and Chrome are communicating because Firefox implements a now deprecated technique for sending large messages in multiple SCTP messages, which Chrome does not. Chrome will instead see a series of messages that it believes are complete, and will deliver them to the receiving &lt;code&gt;RTCDataChannel&lt;/code&gt; as multiple messages.</source>
          <target state="translated">Firefox를 실행하는 두 명의 사용자가 데이터 채널을 통해 통신하는 경우 Firefox는 현재는 더 이상 사용되지 않는 여러 기술을 사용하여 Chrome에서 지원하지 않는 여러 SCTP 메시지로 여러 SCTP 메시지를 전송하기 때문에 Firefox와 Chrome이 통신 할 때보 다 메시지 크기 제한이 훨씬 큽니다. 대신 Chrome은 완료된 것으로 판단되는 일련의 메시지를보고 수신 한 &lt;code&gt;RTCDataChannel&lt;/code&gt; 에 여러 메시지로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="03ab3dc0897982abbf51b2d2f98ed4e141beaa2d" translate="yes" xml:space="preserve">
          <source>When user privacy is a concern, It is important that any web app implementation will invalidate cookie data after a certain timeout and won't rely on the browser clearing session cookies</source>
          <target state="translated">사용자 개인 정보 보호가 중요한 경우, 웹 앱 구현은 특정 시간 초과 후 쿠키 데이터를 무효화하고 브라우저 지우기 세션 쿠키에 의존하지 않는 것이 중요합니다</target>
        </trans-unit>
        <trans-unit id="d2e5e3cd9b9145fc3fafcf8fa78521b8237792c4" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;attributeOldValue&lt;/code&gt;, setting the &lt;a href=&quot;attributes&quot;&gt;&lt;code&gt;attributes&lt;/code&gt;&lt;/a&gt; option to &lt;code&gt;true&lt;/code&gt; is optional.</source>
          <target state="translated">사용하는 경우 &lt;code&gt;attributeOldValue&lt;/code&gt; 을 , 설정, &lt;a href=&quot;attributes&quot;&gt; &lt;code&gt;attributes&lt;/code&gt; &lt;/a&gt; 옵션을 ' &lt;code&gt;true&lt;/code&gt; 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="3c2c8af7b21e55d22c72205444d7779f95b876bc" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;fill&lt;/code&gt; (or &lt;a href=&quot;../../canvasrenderingcontext2d/clip&quot;&gt;&lt;code&gt;clip&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../canvasrenderingcontext2d/ispointinpath&quot;&gt;&lt;code&gt;isPointinPath&lt;/code&gt;&lt;/a&gt;) you can optionally provide a fill rule algorithm by which to determine if a point is inside or outside a path and thus if it gets filled or not. This is useful when a path intersects itself or is nested.</source>
          <target state="translated">사용하는 경우 &lt;code&gt;fill&lt;/code&gt; (또는 &lt;a href=&quot;../../canvasrenderingcontext2d/clip&quot;&gt; &lt;code&gt;clip&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../../canvasrenderingcontext2d/ispointinpath&quot;&gt; &lt;code&gt;isPointinPath&lt;/code&gt; 을&lt;/a&gt; ) 선택적이 작성되지 않았거나 들어간 경우 포인트가 내부 또는 경로 외부에 따라서인지 확인하여 채우기 규칙 알고리즘을 제공 할 수 있습니다. 경로가 서로 교차하거나 중첩 될 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5525b44cb435301e9e2d96a565462e3b7e7bd0de" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt; and the &lt;a href=&quot;../ext_color_buffer_float&quot;&gt;&lt;code&gt;EXT_color_buffer_float&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">때 사용 &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL을이 컨텍스트&lt;/a&gt; 와 &lt;a href=&quot;../ext_color_buffer_float&quot;&gt; &lt;code&gt;EXT_color_buffer_float&lt;/code&gt; 의&lt;/a&gt; 확장 :</target>
        </trans-unit>
        <trans-unit id="c3a9d9ab629bb1bafb9d6af3f01a8328b78f7c95" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, a &lt;code&gt;gl.INVALID_OPERATION&lt;/code&gt; error is thrown if this vertex attribute is defined as a integer in the vertex shader (e.g. &lt;code&gt;uvec4&lt;/code&gt; or &lt;code&gt;ivec4&lt;/code&gt;, instead of &lt;code&gt;vec4&lt;/code&gt;).</source>
          <target state="translated">사용시 &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL을 2 컨텍스트&lt;/a&gt; 하는 &lt;code&gt;gl.INVALID_OPERATION&lt;/code&gt; 의 버텍스 속성 정점 셰이더의 정수로서 정의되는 경우 에러 (예 슬로우 &lt;code&gt;uvec4&lt;/code&gt; 또는 &lt;code&gt;ivec4&lt;/code&gt; 대신, &lt;code&gt;vec4&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="ef8a8674d827d3157a103d101c1065fd8d184038" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, the following value is available additionally:</source>
          <target state="translated">사용시 &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL을 2 콘텍스트를&lt;/a&gt; 다음 값을 별도로 사용할 :</target>
        </trans-unit>
        <trans-unit id="7fec16d0a877f1230719ce7d2e45502118b7fcce" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, the following values are available additionally:</source>
          <target state="translated">사용시 &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL을 2 콘텍스트를&lt;/a&gt; 다음 값을 별도로 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="cffddfb39d31b7f924328b8a24c9e1e7b124cdb2" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, the following values are possible additionally:</source>
          <target state="translated">&lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 컨텍스트를&lt;/a&gt; 사용하는 경우 다음 값이 추가로 가능합니다.</target>
        </trans-unit>
        <trans-unit id="901bd858af36cd2f860d3cc5cf18b06261148069" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, the following values can be returned additionally:</source>
          <target state="translated">&lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 컨텍스트를&lt;/a&gt; 사용하는 경우 다음 값이 추가로 리턴 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfc5a807a16d8763a6af26723eb7f8de518d16c2" translate="yes" xml:space="preserve">
          <source>When using a user agent where no constructor has been implemented yet, it is possible to access such an object using the &lt;a href=&quot;url&quot;&gt;&lt;code&gt;Window.URL&lt;/code&gt;&lt;/a&gt; properties (prefixed with Webkit-based browser as &lt;code&gt;Window.webkitURL&lt;/code&gt;).</source>
          <target state="translated">생성자는 아직 실행되지 않은 사용자 에이전트를 사용하는 경우, 상기 사용하여 이러한 개체 액세스 가능 &lt;a href=&quot;url&quot;&gt; &lt;code&gt;Window.URL&lt;/code&gt; 의&lt;/a&gt; (AS 웹킷 기반 브라우저 접두사 특성 &lt;code&gt;Window.webkitURL&lt;/code&gt; 는 ).</target>
        </trans-unit>
        <trans-unit id="6059ede8763193571c8298041ada7ceb08b9b717" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../angle_instanced_arrays&quot;&gt;&lt;code&gt;ANGLE_instanced_arrays&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../angle_instanced_arrays&quot;&gt; &lt;code&gt;ANGLE_instanced_arrays&lt;/code&gt; &lt;/a&gt; 확장을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="e240042b8c5547c103948c7d0738bdd865ac9dc0" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../ext_blend_minmax&quot;&gt;&lt;code&gt;EXT_blend_minmax&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../ext_blend_minmax&quot;&gt; &lt;code&gt;EXT_blend_minmax&lt;/code&gt; &lt;/a&gt; 확장을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="71829a009bdbb443a69713bbf6ee5fb36b746c77" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../ext_srgb&quot;&gt;&lt;code&gt;EXT_sRGB&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../ext_srgb&quot;&gt; &lt;code&gt;EXT_sRGB&lt;/code&gt; &lt;/a&gt; 확장자를 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="7e7f33789e2adf6a8f07c9c64b3d7ff1a06208b7" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../oes_element_index_uint&quot;&gt;&lt;code&gt;OES_element_index_uint&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../oes_element_index_uint&quot;&gt; &lt;code&gt;OES_element_index_uint&lt;/code&gt; &lt;/a&gt; 확장을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="098c02e50b889a98a266cefa28187523880306a1" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../oes_standard_derivatives&quot;&gt;&lt;code&gt;OES_standard_derivatives&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../oes_standard_derivatives&quot;&gt; &lt;code&gt;OES_standard_derivatives&lt;/code&gt; &lt;/a&gt; 확장을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="5878b2b9f9491e09388f470dce3148619add20d1" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../oes_texture_half_float&quot;&gt;&lt;code&gt;OES_texture_half_float&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../oes_texture_half_float&quot;&gt; &lt;code&gt;OES_texture_half_float&lt;/code&gt; &lt;/a&gt; 확장을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="076f5831e432985cd0dab8de24bd154c44f98b1a" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../rtcpeerconnection/rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection()&lt;/code&gt;&lt;/a&gt; constructor, we will specify an &lt;a href=&quot;../rtcconfiguration&quot;&gt;&lt;code&gt;RTCConfiguration&lt;/code&gt;&lt;/a&gt;-compliant object providing configuration parameters for the connection. We use only one of these in this example: &lt;code&gt;iceServers&lt;/code&gt;. This is an array of objects describing STUN and/or TURN servers for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt; layer to use when attempting to establish a route between the caller and the callee. These servers are used to determine the best route and protocols to use when communicating between the peers, even if they're behind a firewall or using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/NAT&quot;&gt;NAT&lt;/a&gt;.</source>
          <target state="translated">사용하는 경우 &lt;a href=&quot;../rtcpeerconnection/rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection()&lt;/code&gt; &lt;/a&gt; 생성자를, 우리는 지정됩니다 &lt;a href=&quot;../rtcconfiguration&quot;&gt; &lt;code&gt;RTCConfiguration&lt;/code&gt; &lt;/a&gt; 연결에 대한 구성 매개 변수를 제공하는 호환 개체를. 이 예제에서는 &lt;code&gt;iceServers&lt;/code&gt; 중 하나만 사용합니다 . 이것은 발신자와 수신자 사이의 경로를 설정하려고 시도 할 때 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt; 계층에 사용할 STUN 및 / 또는 TURN 서버를 설명하는 객체의 배열입니다 . 이 서버는 방화벽 뒤에 있거나 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/NAT&quot;&gt;NAT를&lt;/a&gt; 사용하는 경우에도 피어간에 통신 할 때 사용할 최상의 경로와 프로토콜을 결정하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="151e0be03dfc6be359a3a921b91810424de829bd" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_color_buffer_float&quot;&gt;&lt;code&gt;WEBGL_color_buffer_float&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_color_buffer_float&quot;&gt; &lt;code&gt;WEBGL_color_buffer_float&lt;/code&gt; &lt;/a&gt; 확장을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="f49ea6b64d516fee7209a8df82fcb44a2847417a" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_astc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_astc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_astc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_astc&lt;/code&gt; &lt;/a&gt; 확장을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="19823bedcb0c759e981165e869c32a435dc8cf88" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_atc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_atc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_atc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_atc&lt;/code&gt; &lt;/a&gt; 확장자를 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="fa6ec0efb0979f86b9941a490dfa61c365c83a90" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_etc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_etc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_etc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_etc&lt;/code&gt; &lt;/a&gt; 확장을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="13ceb5fa832db0a0aae7e9ef04d05aa0613e5dad" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_etc1&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_etc1&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_etc1&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_etc1&lt;/code&gt; &lt;/a&gt; 확장을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="58f4f58fcbe5f1fe8252165cb77b50c134490559" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_pvrtc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_pvrtc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_pvrtc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_pvrtc&lt;/code&gt; &lt;/a&gt; 확장을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="38a9d850924d40adf91cade1e57a5f780ea720d5" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_s3tc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_s3tc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_s3tc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_s3tc&lt;/code&gt; &lt;/a&gt; 확장을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="7c6eca164002431deb6ae22b534fe06cd95bec1a" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_s3tc_srgb&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_s3tc_srgb&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_s3tc_srgb&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_s3tc_srgb&lt;/code&gt; &lt;/a&gt; 확장자를 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="e36293671aea26271a85137a0ba2bd84259355ed" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_depth_texture&quot;&gt;&lt;code&gt;WEBGL_depth_texture&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_depth_texture&quot;&gt; &lt;code&gt;WEBGL_depth_texture&lt;/code&gt; &lt;/a&gt; 확장을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="1f392a7166e8e2ca483c3f6e047ee57b892fc9a3" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_draw_buffers&quot;&gt;&lt;code&gt;WEBGL_draw_buffers&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_draw_buffers&quot;&gt; &lt;code&gt;WEBGL_draw_buffers&lt;/code&gt; &lt;/a&gt; 확장을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="0552f1ae794471fbf65586e2e2f7c6e7ef59bda7" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; method it is possible to use the third optional parameter to pass a filename inside the &lt;code&gt;Content-Disposition&lt;/code&gt; header that is sent to the server. When no filename is specified (or the parameter isn't supported), the name &quot;blob&quot; is used.</source>
          <target state="translated">사용시 &lt;a href=&quot;append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt; 메소드는이를 내부의 파일 이름을 통과하는 세 번째 옵션 매개 변수를 사용할 수있다 &lt;code&gt;Content-Disposition&lt;/code&gt; 서버에 전송되는 헤더. 파일 이름이 지정되지 않았거나 매개 변수가 지원되지 않으면 &quot;blob&quot;라는 이름이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8698e9a59e52f4976079a9d3a23753b4f05b604a" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float&quot;&gt;&lt;code&gt;OES_texture_float&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float&quot;&gt; &lt;code&gt;OES_texture_float&lt;/code&gt; &lt;/a&gt; 확장을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="488c629de7c8b1461d0e2a3edf0b7719602ab347" translate="yes" xml:space="preserve">
          <source>When using the deprecated callback-based version of &lt;code&gt;setLocalDescription()&lt;/code&gt;, the following exceptions may occur:</source>
          <target state="translated">더 이상 사용되지 않는 콜백 기반 버전의 &lt;code&gt;setLocalDescription()&lt;/code&gt; 을 사용하는 경우 다음 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c11852cf7f6d35f27feb76f547f683d816548a6" translate="yes" xml:space="preserve">
          <source>When using the deprecated callback-based version of &lt;code&gt;setRemoteDescription()&lt;/code&gt;, the following exceptions may occur:</source>
          <target state="translated">더 이상 사용되지 않는 콜백 기반 버전의 &lt;code&gt;setRemoteDescription()&lt;/code&gt; 을 사용하는 경우 다음 예외가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f7a2d9bc03cf525798c002ab65cb112b9a6cf49" translate="yes" xml:space="preserve">
          <source>When using the inline HTML markup (&lt;code&gt;&amp;lt;body onerror=&quot;alert('an error occurred')&quot;&amp;gt;&lt;/code&gt;), the HTML specification requires arguments passed to &lt;code&gt;onerror&lt;/code&gt; to be named &lt;code&gt;event&lt;/code&gt;, &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;lineno&lt;/code&gt;, &lt;code&gt;colno&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;. In browsers that have not implemented this requirement, they can still be obtained via &lt;code&gt;arguments[0]&lt;/code&gt; through &lt;code&gt;arguments[2]&lt;/code&gt;.</source>
          <target state="translated">인라인 HTML 마크 업 ( &lt;code&gt;&amp;lt;body onerror=&quot;alert('an error occurred')&quot;&amp;gt;&lt;/code&gt; )을 사용하는 경우 HTML 사양에서는 &lt;code&gt;onerror&lt;/code&gt; 에 전달 된 인수의 이름을 &lt;code&gt;event&lt;/code&gt; , &lt;code&gt;source&lt;/code&gt; , &lt;code&gt;lineno&lt;/code&gt; , &lt;code&gt;colno&lt;/code&gt; , &lt;code&gt;error&lt;/code&gt; 로 지정해야 합니다. 이 요구 사항을 구현하지 않은 브라우저에서는 &lt;code&gt;arguments[0]&lt;/code&gt; ~ &lt;code&gt;arguments[2]&lt;/code&gt; 를 통해 여전히 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="28da46c0755b3ffe2198514ad0b3aa40f4e11454" translate="yes" xml:space="preserve">
          <source>When viewing a document, an element with focus is always the &lt;a href=&quot;../documentorshadowroot/activeelement&quot;&gt;active element&lt;/a&gt; in the document, but an active element does not necessarily have focus. For example, an active element within a popup window that is not the foreground does not have focus.</source>
          <target state="translated">문서를 볼 때 초점 요소는 항상있다 &lt;a href=&quot;../documentorshadowroot/activeelement&quot;&gt;활성 요소&lt;/a&gt; 문서,하지만 활성 요소는 반드시 초점이 없습니다. 예를 들어, 전경이 아닌 팝업 창 내의 활성 요소에는 초점이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a4ef80d4e5aef04ff5ba6df1ae55c5427bace4b5" translate="yes" xml:space="preserve">
          <source>When we come to call the &lt;code&gt;imgLoad()&lt;/code&gt; function, we call it with the url to the image we want to load, as we might expect, but the rest of the code is a little different:</source>
          <target state="translated">&lt;code&gt;imgLoad()&lt;/code&gt; 함수 를 호출 할 때로드 할 이미지의 url을 호출합니다. 예상대로 코드의 나머지 부분은 약간 다릅니다.</target>
        </trans-unit>
        <trans-unit id="daa8612a0c9c45f58a41457196952f1438a32ef4" translate="yes" xml:space="preserve">
          <source>When we come to run the function, we do the following. This is because Firefox doesn't support &lt;a href=&quot;../speechsynthesis/onvoiceschanged&quot;&gt;&lt;code&gt;SpeechSynthesis.onvoiceschanged&lt;/code&gt;&lt;/a&gt;, and will just return a list of voices when &lt;a href=&quot;../speechsynthesis/getvoices&quot;&gt;&lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt;&lt;/a&gt; is fired. With Chrome however, you have to wait for the event to fire before populating the list, hence the if statement seen below.</source>
          <target state="translated">함수를 실행하면 다음을 수행합니다. Firefox는 &lt;a href=&quot;../speechsynthesis/onvoiceschanged&quot;&gt; &lt;code&gt;SpeechSynthesis.onvoiceschanged&lt;/code&gt; 를&lt;/a&gt; 지원하지 않기 때문에 &lt;a href=&quot;../speechsynthesis/getvoices&quot;&gt; &lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt; &lt;/a&gt; 가 시작될 때 음성 목록 만 반환합니다 . 그러나 Chrome에서는 목록을 채우기 전에 이벤트가 시작될 때까지 기다려야합니다. 따라서 if 문은 아래와 같습니다.</target>
        </trans-unit>
        <trans-unit id="0c95a9e8c24eeb31488c12c1c3406c5ae1c457e9" translate="yes" xml:space="preserve">
          <source>When we want to explicitly set a key&amp;rsquo;s offset from the other keys, we can specify an offset directly in the object, separated from the declaration with a comma. In the above example, to make sure that Alice&amp;rsquo;s color changes at 30% (not 50%) for the color change, we are giving it &lt;code&gt;offset: 0.3&lt;/code&gt;.</source>
          <target state="translated">다른 키와 키 오프셋을 명시 적으로 설정하려면 선언에서 쉼표로 구분하여 객체에 직접 오프셋을 지정할 수 있습니다. 위의 예에서, 색상 변경에 대해 Alice의 색상이 50 %가 아닌 30 %로 변경되도록하려면 &lt;code&gt;offset: 0.3&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="4bee466b9b61109435ee1146df9ef9dd231d861e" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLQuery&lt;/code&gt; objects, the following methods of the &lt;a href=&quot;webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt; are useful:</source>
          <target state="translated">&lt;code&gt;WebGLQuery&lt;/code&gt; 오브젝트로 작업 할 때 다음 &lt;a href=&quot;webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; &lt;/a&gt; 메소드 가 유용합니다.</target>
        </trans-unit>
        <trans-unit id="43143ffc89e172f649dfaa01f74554ab08b5d302" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLSampler&lt;/code&gt; objects, the following methods of the &lt;a href=&quot;webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt; are useful:</source>
          <target state="translated">&lt;code&gt;WebGLSampler&lt;/code&gt; 오브젝트로 작업 할 때 다음 &lt;a href=&quot;webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; &lt;/a&gt; 메소드 가 유용합니다.</target>
        </trans-unit>
        <trans-unit id="a204f461438b2bffcbacd97612b7d7dd04f3dc41" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLSync&lt;/code&gt; objects, the following methods of the &lt;a href=&quot;webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt; are useful:</source>
          <target state="translated">&lt;code&gt;WebGLSync&lt;/code&gt; 오브젝트로 작업 할 때 다음 &lt;a href=&quot;webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; &lt;/a&gt; 메소드 가 유용합니다.</target>
        </trans-unit>
        <trans-unit id="999fea53b32cb0175886ac200d5445d5cc584f4f" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLTransformFeedback&lt;/code&gt; objects, the following methods of the &lt;a href=&quot;webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt; are useful:</source>
          <target state="translated">&lt;code&gt;WebGLTransformFeedback&lt;/code&gt; 오브젝트로 작업 할 때 다음 &lt;a href=&quot;webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; &lt;/a&gt; 메소드 가 유용합니다.</target>
        </trans-unit>
        <trans-unit id="3909ef72341ca4702e501c73befc333a25b9763d" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLVertexArrayObject&lt;/code&gt; objects, the following methods are useful:</source>
          <target state="translated">&lt;code&gt;WebGLVertexArrayObject&lt;/code&gt; 객체로 작업 할 때 다음 방법이 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c678ee9895b7dbff3144d5dd35ada232c348f208" translate="yes" xml:space="preserve">
          <source>When working with MSE, the following tools are a must have:</source>
          <target state="translated">MSE로 작업 할 때는 다음 도구가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="16bafe2426e5dc4186e26ad59cd9d6c052eec641" translate="yes" xml:space="preserve">
          <source>When working with an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt;, if you create the audio context from inside a &lt;code&gt;click&lt;/code&gt; event the state should automatically be set to &lt;code&gt;running&lt;/code&gt;. Here is a simple example of creating the context from inside a &lt;code&gt;click&lt;/code&gt; event:</source>
          <target state="translated">&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; 로&lt;/a&gt; 작업 할 때 &lt;code&gt;click&lt;/code&gt; 이벤트 내부에서 오디오 컨텍스트를 생성 하면 상태가 자동으로 &lt;code&gt;running&lt;/code&gt; 으로 설정되어야 합니다 . 다음은 &lt;code&gt;click&lt;/code&gt; 이벤트 내부에서 컨텍스트를 작성하는 간단한 예입니다 .</target>
        </trans-unit>
        <trans-unit id="ef480760ef4502ba63b9c5946d9bbb6f124b2d6e" translate="yes" xml:space="preserve">
          <source>When working with files, you are looking at either the grabbing the file from an &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; (i.e. an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element), or you're looking to fetch the file and decode it into a buffer. Both are legitimate ways of working, however, it's more common to use the former when you are working will full-length tracks, and the latter when working with shorter, more sample-like tracks.</source>
          <target state="translated">파일로 작업 할 때 &lt;a href=&quot;../htmlmediaelement&quot;&gt; &lt;code&gt;HTMLMediaElement&lt;/code&gt; &lt;/a&gt; (예 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소)에서 파일을 가져 오거나 파일을 가져 와서 버퍼로 디코딩하려고합니다. 둘 다 합법적 인 작업 방식이지만, 전장 트랙을 작업 할 때는 전자를 사용하고, 더 짧고 샘플 같은 트랙을 작업 할 때는 전자를 사용하는 것이 더 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="93563d9724827d60d0fc12b8c68aa5c0bbc5c2f9" translate="yes" xml:space="preserve">
          <source>When working with media source extensions, it is likely that you need to condition your assets before you can stream them. This article takes you through the requirements and shows you a toolchain you can use to encode your assets appropriately.</source>
          <target state="translated">미디어 소스 확장으로 작업 할 때 자산을 스트리밍하기 전에 자산을 조정해야 할 수 있습니다. 이 기사에서는 요구 사항을 살펴보고 자산을 적절히 인코딩하는 데 사용할 수있는 툴체인을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b33f2b99a3d01e4dd9689a6763cfbebecd22daf0" translate="yes" xml:space="preserve">
          <source>When working with the keyboard, focus rings are a handy indicator to help navigating on a page. To draw focus rings on a canvas drawing, the &lt;code&gt;drawFocusIfNeeded&lt;/code&gt; property can be used.</source>
          <target state="translated">키보드로 작업 할 때 포커스 링은 페이지를 탐색하는 데 도움이되는 편리한 표시기입니다. 캔버스 도면에 초점 링을 그리려면 &lt;code&gt;drawFocusIfNeeded&lt;/code&gt; 속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="212d058f76197537c8637cc3abc9611b30b850f5" translate="yes" xml:space="preserve">
          <source>When writing code for the Web with JavaScript, there are a great many APIs available. Below is a list of all the interfaces (that is, types of objects) that you may be able to use while developing your Web app or site.</source>
          <target state="translated">JavaScript를 사용하여 웹용 코드를 작성할 때 사용할 수있는 많은 API가 있습니다. 다음은 웹앱 또는 사이트를 개발하는 동안 사용할 수있는 모든 인터페이스 (즉, 객체 유형) 목록입니다.</target>
        </trans-unit>
        <trans-unit id="eb67b1e9a2a9d6fd72938c0bf3d17c62284c482d" translate="yes" xml:space="preserve">
          <source>When you are using an &lt;a href=&quot;../iirfilternode&quot;&gt;&lt;code&gt;IIRFilterNode&lt;/code&gt;&lt;/a&gt; instead of a &lt;a href=&quot;../biquadfilternode&quot;&gt;&lt;code&gt;BiquadFilterNode&lt;/code&gt;&lt;/a&gt; you are creating the filter yourself, rather than just choosing a pre-programmed type. So you can create a highpass filter, or a lowpass filter, or a more bespoke one. And this is where the IIR filter node is useful &amp;mdash; you can create your own if none of the alaready available settings is right for what you want. As well as this, if your audio graph needed a highpass and a bandpass filter within it, you could just use one IIR filter node in place of the two biquad filter nodes you would otherwise need for this.</source>
          <target state="translated">당신은 사용하는 경우 &lt;a href=&quot;../iirfilternode&quot;&gt; &lt;code&gt;IIRFilterNode&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;../biquadfilternode&quot;&gt; &lt;code&gt;BiquadFilterNode&lt;/code&gt; 을&lt;/a&gt; 오히려 단지 미리 프로그램 유형을 선택하는 것보다, 필터를 직접 만들 수 있습니다. 따라서 고역 통과 필터 또는 저역 통과 필터 또는보다 맞춤형 필터를 만들 수 있습니다. 그리고 이것이 IIR 필터 노드가 유용한 곳입니다. 사용 가능한 설정 중 어느 것도 원하는 것에 맞지 않으면 직접 만들 수 있습니다. 뿐만 아니라 오디오 그래프에 고역 통과 및 대역 통과 필터가 필요한 경우, 필요에 따라 두 개의 바이 쿼드 필터 노드 대신 하나의 IIR 필터 노드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b6f3bdf5b3e9728f4dfa61f824b1bd8ddad1687" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;stop()&lt;/code&gt; on a transceiver, the sender immediately stops sending media and each of its RTP streams are closed using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTCP&quot;&gt;RTCP&lt;/a&gt;&lt;code&gt;&quot;BYE&quot;&lt;/code&gt; message. The receiver then stops receiving media; the receiver's &lt;a href=&quot;../rtcrtpreceiver/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; is stopped, and the transceiver's &lt;a href=&quot;stopped&quot;&gt;&lt;code&gt;stopped&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">송수신기에서 &lt;code&gt;stop()&lt;/code&gt; 을 호출 하면 발신자가 즉시 미디어 전송을 중지하고 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTCP&quot;&gt;RTCP &lt;/a&gt; &lt;code&gt;&quot;BYE&quot;&lt;/code&gt; 메시지를 사용하여 각 RTP 스트림이 닫힙니다 . 그러면 수신기가 미디어 수신을 중지합니다. 수신자의 &lt;a href=&quot;../rtcrtpreceiver/track&quot;&gt; &lt;code&gt;track&lt;/code&gt; &lt;/a&gt; 이 중지되고 트랜시버의 &lt;a href=&quot;stopped&quot;&gt; &lt;code&gt;stopped&lt;/code&gt; &lt;/a&gt; 특성이 &lt;code&gt;true&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="752816c410a167aa92af868f97203689aa5abf87" translate="yes" xml:space="preserve">
          <source>When you change the value of &lt;code&gt;direction&lt;/code&gt;, an &lt;code&gt;InvalidStateError&lt;/code&gt; exception will occur if the connection is closed or the receiver is stopped.</source>
          <target state="translated">만약 값 변경하면 &lt;code&gt;direction&lt;/code&gt; , &lt;code&gt;InvalidStateError&lt;/code&gt; 의 접속이 폐쇄되거나 수신기가 중지 된 경우 예외가 발생할 것이다.</target>
        </trans-unit>
        <trans-unit id="575ee9c5def7c7753488ae6c2dfe0e6d80c78123" translate="yes" xml:space="preserve">
          <source>When you choose different options, the page is instantly updated; in addition, your choices are stored in &lt;code&gt;localStorage&lt;/code&gt;, so that when you leave the page and load it again, later on, your choices are remembered.</source>
          <target state="translated">다른 옵션을 선택하면 페이지가 즉시 업데이트됩니다. 또한 선택 사항은 &lt;code&gt;localStorage&lt;/code&gt; 에 저장 되므로 페이지를 떠나서 다시로드 할 때 선택 사항이 기억됩니다.</target>
        </trans-unit>
        <trans-unit id="d9140f42d6088c690941df0d4bd0d84684481de6" translate="yes" xml:space="preserve">
          <source>When you click on the &lt;code&gt;&amp;lt;open-shadow&amp;gt;&lt;/code&gt; element and then the &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; element, you'll notice two things. First, the &lt;code&gt;composed&lt;/code&gt; property returns &lt;code&gt;true&lt;/code&gt; beause the &lt;code&gt;click&lt;/code&gt; event is always able to propagate across shadow boundaries. Second, you'll notice a difference in the value of &lt;code&gt;composedPath&lt;/code&gt; for the two elements. The &lt;code&gt;&amp;lt;open-shadow&amp;gt;&lt;/code&gt; element's composed path is this:</source>
          <target state="translated">&lt;code&gt;&amp;lt;open-shadow&amp;gt;&lt;/code&gt; 요소 를 클릭 한 다음 &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; 요소를 클릭하면 두 가지가 있습니다. 첫째, &lt;code&gt;composed&lt;/code&gt; 속성 반환 &lt;code&gt;true&lt;/code&gt; beause &lt;code&gt;click&lt;/code&gt; 이벤트는 항상 그림자의 경계를 넘어 전파 할 수 있습니다. 둘째, 두 요소에 대해 &lt;code&gt;composedPath&lt;/code&gt; 의 값이 다릅니다 . &lt;code&gt;&amp;lt;open-shadow&amp;gt;&lt;/code&gt; 요소의 합성 경로는이있다 :</target>
        </trans-unit>
        <trans-unit id="e50e7cd11e676bc9b9a31e2c689dc5beb22f1344" translate="yes" xml:space="preserve">
          <source>When you create a new database or increase the version number of an existing database (by specifying a higher version number than you did previously, when &lt;a href=&quot;#Opening_a_database&quot;&gt;Opening a database&lt;/a&gt;), the &lt;code&gt;onupgradeneeded&lt;/code&gt; event will be triggered and an &lt;a href=&quot;../idbversionchangeevent&quot;&gt;IDBVersionChangeEvent&lt;/a&gt; object will be passed to any &lt;code&gt;onversionchange&lt;/code&gt; event handler set up on &lt;code&gt;request.result&lt;/code&gt; (i.e., &lt;code&gt;db&lt;/code&gt; in the example). In the handler for the &lt;code&gt;upgradeneeded&lt;/code&gt; event, you should create the object stores needed for this version of the database:</source>
          <target state="translated">새 데이터베이스를 만들거나 기존 데이터베이스의 버전 번호를 증가 할 때 (이전보다 더 높은 버전 번호를 지정하는 경우, &lt;a href=&quot;#Opening_a_database&quot;&gt;데이터베이스를 열기&lt;/a&gt; )에 &lt;code&gt;onupgradeneeded&lt;/code&gt; 이벤트가 트리거됩니다 및 &lt;a href=&quot;../idbversionchangeevent&quot;&gt;IDBVersionChangeEvent의&lt;/a&gt; 객체 하나에 전달됩니다 &lt;code&gt;onversionchange&lt;/code&gt; 의 이벤트 &lt;code&gt;request.result&lt;/code&gt; 에 핸들러 설정 (예 : &lt;code&gt;db&lt;/code&gt; ) 의 핸들러에서 &lt;code&gt;upgradeneeded&lt;/code&gt; 이벤트, 데이터베이스의이 버전에 필요한 객체 저장소를 만들어야합니다 :</target>
        </trans-unit>
        <trans-unit id="374af22673faa85cdb234cce75182580d5b5ba0a" translate="yes" xml:space="preserve">
          <source>When you create a script&amp;ndash;whether it's inline in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element or included in the web page by means of a script loading instruction&amp;ndash;you can immediately begin using the API for the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; elements to manipulate the document itself or to get at the children of that document, which are the various elements in the web page. Your DOM programming may be something as simple as the following, which displays an alert message by using the &lt;a href=&quot;../window/alert&quot;&gt;&lt;code&gt;alert()&lt;/code&gt;&lt;/a&gt; function from the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; object, or it may use more sophisticated DOM methods to actually create new content, as in the longer example below.</source>
          <target state="translated">&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 요소에 인라인이든 스크립트로드 명령을 통해 웹 페이지에 포함 된 스크립트를 만들 때 즉시 &lt;a href=&quot;../document&quot;&gt; &lt;code&gt;document&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt; 요소에 API를 사용 하여 문서 자체를 조작하거나 얻을 수 있습니다. 웹 페이지의 다양한 요소 인 해당 문서의 하위에서 DOM 프로그래밍은 다음과 같이 간단 할 수 있습니다.이 방법 은 &lt;a href=&quot;../window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;a href=&quot;../window/alert&quot;&gt; &lt;code&gt;alert()&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 경고 메시지를 표시 하거나 아래의 더 긴 예에서와 같이보다 정교한 DOM 메서드를 사용하여 실제로 새 내용을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a26d422cfe918fc94972b2cddcce0d19cc79225" translate="yes" xml:space="preserve">
          <source>When you create an audio context (either offline or online) it is created with a &lt;code&gt;state&lt;/code&gt;, which can be &lt;code&gt;suspended&lt;/code&gt;, &lt;code&gt;running&lt;/code&gt;, or &lt;code&gt;closed&lt;/code&gt;.</source>
          <target state="translated">오디오 컨텍스트 (오프라인 또는 온라인)를 만들면 &lt;code&gt;suspended&lt;/code&gt; , &lt;code&gt;running&lt;/code&gt; 또는 &lt;code&gt;closed&lt;/code&gt; 수 있는 &lt;code&gt;state&lt;/code&gt; 로 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="dedc19355c2c70e85291c33a0546eb73b75e7849" translate="yes" xml:space="preserve">
          <source>When you first create a WebGL context, the size of the viewport will match the size of the canvas. However, if you resize the canvas, you will need to tell the WebGL context a new viewport setting. In this situation, you can use &lt;code&gt;gl.viewport&lt;/code&gt;.</source>
          <target state="translated">WebGL 컨텍스트를 처음 작성할 때 뷰포트의 크기는 캔버스의 크기와 일치합니다. 그러나 캔버스 크기를 조정하는 경우 WebGL 컨텍스트에 새로운 뷰포트 설정을 알려야합니다. 이 상황에서는 &lt;code&gt;gl.viewport&lt;/code&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d8bb6baedfd0b37f85b2cbecbee095bfc96babdd" translate="yes" xml:space="preserve">
          <source>When you get a reference to a &lt;code&gt;table&lt;/code&gt; object, as in the following example, you routinely use all three of these interfaces interchangeably on the object, perhaps without knowing it.</source>
          <target state="translated">다음 예제와 같이 &lt;code&gt;table&lt;/code&gt; 개체에 대한 참조를 얻으면 이러한 세 가지 인터페이스를 모두 개체에 대해 서로 모르게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76e487e4cdcfcfbcb00f9d7533125332467f8420" translate="yes" xml:space="preserve">
          <source>When you have a &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object you'd like to reference by URL from HTML, you can create an object URL for it like this:</source>
          <target state="translated">HTML에서 URL로 참조 하려는 &lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 객체가 있으면 다음과 같이 객체 URL을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ced5e892d53e45c9af4b4e5f88747350156148d5" translate="yes" xml:space="preserve">
          <source>When you instantiate the ServerSocket class, it is bound to the port number you specified by the &lt;em&gt;port&lt;/em&gt; argument.</source>
          <target state="translated">ServerSocket 클래스를 인스턴스화하면 &lt;em&gt;port&lt;/em&gt; 인수로 지정한 포트 번호에 바인딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="62d0f0d62628b8ed9a95636e6c00dc90b7bef672" translate="yes" xml:space="preserve">
          <source>When you look through the source code of &lt;a href=&quot;https://github.com/mdn/webvr-tests/blob/master/raw-webgl-example/webgl-demo.js&quot;&gt;our demo's main JavaScript file&lt;/a&gt;, you can easily find the WebVR-specific parts by searching for the string &quot;WebVR&quot; in preceding comments.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mdn/webvr-tests/blob/master/raw-webgl-example/webgl-demo.js&quot;&gt;데모 메인 JavaScript 파일의&lt;/a&gt; 소스 코드를 살펴보면 앞의 주석에서 &quot;WebVR&quot;문자열을 검색하여 WebVR 관련 부분을 쉽게 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b6370283fec311ae4dd8ef646dac7e106c7c5f36" translate="yes" xml:space="preserve">
          <source>When you pass a method to &lt;code&gt;setInterval()&lt;/code&gt; or any other function, it is invoked with the wrong &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&lt;code&gt;this&lt;/code&gt;&lt;/a&gt; value. This problem is explained in detail in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#As_an_object_method&quot;&gt;JavaScript reference&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;setInterval()&lt;/code&gt; 또는 다른 함수에 메소드를 전달하면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt; &lt;code&gt;this&lt;/code&gt; &lt;/a&gt; 값 이 잘못 호출됩니다 . 이 문제는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#As_an_object_method&quot;&gt;JavaScript 참조&lt;/a&gt; 에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="39e1a9153308bb8ee47af5cb3755e6a1d9bb81c5" translate="yes" xml:space="preserve">
          <source>When you pass a method to &lt;code&gt;setTimeout()&lt;/code&gt; (or any other function, for that matter), it will be invoked with a &lt;code&gt;this&lt;/code&gt; value that may differ from your expectation. This issue is explained in detail in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#As_an_object_method&quot;&gt;JavaScript reference&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;setTimeout()&lt;/code&gt; (또는 그 문제에 대한 다른 함수 )에 메소드를 전달하면 예상과 다를 수 있는 &lt;code&gt;this&lt;/code&gt; 값 으로 호출됩니다 . 이 문제는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#As_an_object_method&quot;&gt;JavaScript 참조&lt;/a&gt; 에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1225f7125b5ee57e4758124d1b46580cf6102326" translate="yes" xml:space="preserve">
          <source>When you trap events on the window, document, or other roomy elements, you can get the coordinates of that event (e.g., a click) and route it properly, as the following example demonstrates:</source>
          <target state="translated">창, 문서 또는 기타 넓은 요소에서 이벤트를 잡을 때 다음 예제와 같이 해당 이벤트의 좌표 (예 : 클릭)를 가져 와서 올바르게 라우팅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="993d68d0d2cf41ae1b379f9d8014b2e37154b27b" translate="yes" xml:space="preserve">
          <source>When you want to remove an attribute, you can use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete&quot;&gt;delete operator&lt;/a&gt;.</source>
          <target state="translated">속성을 제거하려는 경우 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete&quot;&gt;delete 연산자를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a23a487ac9773df26d204b78f917023c484472cb" translate="yes" xml:space="preserve">
          <source>When you want to stop sending messages down the channel, you can invoke &lt;a href=&quot;messageport/close&quot;&gt;&lt;code&gt;MessagePort.close&lt;/code&gt;&lt;/a&gt; to close the ports.</source>
          <target state="translated">채널을 통한 메시지 전송을 중지하려면 &lt;a href=&quot;messageport/close&quot;&gt; &lt;code&gt;MessagePort.close&lt;/code&gt; &lt;/a&gt; 를 호출 하여 포트를 닫을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e41e085dc476e29380f021d890bfa6b70a87d89" translate="yes" xml:space="preserve">
          <source>When you wish to provide your own certificates for use by an &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; instead of having the &lt;code&gt;RTCPeerConnection&lt;/code&gt; generate them automatically, you do so through calls to &lt;a href=&quot;rtcpeerconnection/generatecertificate&quot;&gt;&lt;code&gt;RTCPeerConnection.generateCertificate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;RTCPeerConnection&lt;/code&gt; 이 자동으로 생성하는 대신 &lt;a href=&quot;rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt; 에서 사용할 자체 인증서를 제공 하려면 &lt;a href=&quot;rtcpeerconnection/generatecertificate&quot;&gt; &lt;code&gt;RTCPeerConnection.generateCertificate()&lt;/code&gt; &lt;/a&gt; 호출을 통해 인증서를 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d70a0a55d60c98f66c2029191d41371c303563d" translate="yes" xml:space="preserve">
          <source>When you've finished using the WebSocket connection, call the WebSocket method &lt;a href=&quot;https://developer.mozilla.org/en/WebSockets/WebSockets_reference/WebSocket#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">WebSocket 연결 사용을 마치면 WebSocket 메소드 &lt;a href=&quot;https://developer.mozilla.org/en/WebSockets/WebSockets_reference/WebSocket#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="a8f8ffeed03dc8f2d0cf7dbe3d3e9cdb7dc8637e" translate="yes" xml:space="preserve">
          <source>When your page loads, it might have a non-null state object. This can happen, for example, if the page sets a state object (using &lt;code&gt;pushState()&lt;/code&gt; or &lt;code&gt;replaceState()&lt;/code&gt;) and then the user restarts their browser. When your page reloads, the page will receive an onload event, but no popstate event. However, if you read the history.state property, you'll get back the state object you would have gotten if a popstate had fired.</source>
          <target state="translated">페이지가로드되면 널이 아닌 상태 오브젝트가있을 수 있습니다. 예를 들어 페이지가 &lt;code&gt;pushState()&lt;/code&gt; 또는 &lt;code&gt;replaceState()&lt;/code&gt; 사용하여 상태 객체를 설정 한 다음 사용자가 브라우저를 다시 시작 하면 이런 일이 발생할 수 있습니다 . 페이지가 다시로드되면 페이지에 onload 이벤트가 수신되지만 popstate 이벤트는 수신되지 않습니다. 그러나 history.state 속성을 읽으면 popstate가 시작된 경우 얻을 수있는 상태 객체를 다시 얻게됩니다.</target>
        </trans-unit>
        <trans-unit id="062c9a4f9d449b003b7ca18c5f85fdfa9d1c09ed" translate="yes" xml:space="preserve">
          <source>When your web app changes in such a way that a version change is required for your database, you need to consider what happens if the user has the old version of your app open in one tab and then loads the new version of your app in another. When you call &lt;code&gt;open()&lt;/code&gt; with a greater version than the actual version of the database, all other open databases must explicitly acknowledge the request before you can start making changes to the database (an &lt;code&gt;onblocked&lt;/code&gt; event is fired until they are closed or reloaded). Here's how it works:</source>
          <target state="translated">데이터베이스에 버전 변경이 필요한 방식으로 웹 앱이 변경되면 사용자가 한 탭에서 이전 버전의 앱을 연 다음 다른 버전에 새 버전의 앱을로드하면 어떻게되는지 고려해야합니다. . 실제 버전의 데이터베이스보다 큰 버전으로 &lt;code&gt;open()&lt;/code&gt; 을 호출 하면 데이터베이스를 변경하기 시작하기 전에 열려있는 다른 모든 데이터베이스가 요청을 명시 적으로 승인해야합니다 ( 차단되거나 다시로드 될 때까지 &lt;code&gt;onblocked&lt;/code&gt; 이벤트가 발생 함). 작동 방식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7f1519c231b2cc34c8d8a9d88c74b6cebf629c8e" translate="yes" xml:space="preserve">
          <source>Whenever a new value is assigned to the location object, a document will be loaded using the URL as if &lt;code&gt;location.assign()&lt;/code&gt; had been called with the modified URL. Note that security settings, like CORS, may prevent this to effectively happen.</source>
          <target state="translated">새 값이 위치 객체에 할당 될 때마다 수정 된 URL로 &lt;code&gt;location.assign()&lt;/code&gt; 이 호출 된 것처럼 URL을 사용하여 문서가로드됩니다 . CORS와 같은 보안 설정으로 인해 이러한 상황이 효과적으로 발생하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13d80bc77477a352d26e0b670a11509478d97d2e" translate="yes" xml:space="preserve">
          <source>Whenever the target meets a threshold specified for the &lt;code&gt;IntersectionObserver&lt;/code&gt;, the callback is invoked. The callback receives a list of &lt;a href=&quot;intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; objects and the observer:</source>
          <target state="translated">대상이 &lt;code&gt;IntersectionObserver&lt;/code&gt; 에 지정된 임계 값을 충족 할 때마다 콜백이 호출됩니다. 콜백은 &lt;a href=&quot;intersectionobserverentry&quot;&gt; &lt;code&gt;IntersectionObserverEntry&lt;/code&gt; &lt;/a&gt; 객체와 관찰자 의 목록을받습니다 :</target>
        </trans-unit>
        <trans-unit id="12ec40acd39b349647f72e20d888bc02e7e928fa" translate="yes" xml:space="preserve">
          <source>Whenever this value decreases to fall to or below the value specified in the &lt;a href=&quot;bufferedamountlowthreshold&quot;&gt;&lt;code&gt;bufferedAmountLowThreshold&lt;/code&gt;&lt;/a&gt; property, the user agent fires the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/bufferedamountlow&quot;&gt;bufferedamountlow&lt;/a&gt;&lt;/code&gt; event. This event may be used, for example, to implement code which queues more messages to be sent whenever there's room to buffer them.</source>
          <target state="translated">이 값이 &lt;a href=&quot;bufferedamountlowthreshold&quot;&gt; &lt;code&gt;bufferedAmountLowThreshold&lt;/code&gt; &lt;/a&gt; 특성에 지정된 값 이하로 떨어지면 사용자 에이전트는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/bufferedamountlow&quot;&gt;bufferedamountlow&lt;/a&gt;&lt;/code&gt; 이벤트를 발생시킵니다 . 예를 들어,이 이벤트는 버퍼링 할 공간이있을 때마다 더 많은 메시지를 보내도록 대기하는 코드를 구현하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0ebe48a3c94951af91835ac4308b7fb4af93ccb" translate="yes" xml:space="preserve">
          <source>Whenever you move the mouse, this example checks whether the cursor is in a circular &lt;code&gt;Path2D&lt;/code&gt; path. If yes, the circle becomes green, otherwise it is red.</source>
          <target state="translated">마우스를 움직일 때마다이 예제는 커서가 원형 &lt;code&gt;Path2D&lt;/code&gt; 경로 에 있는지 확인합니다 . 그렇다면 원이 녹색이되고, 그렇지 않으면 빨간색이됩니다.</target>
        </trans-unit>
        <trans-unit id="6929b561cca04bbe53d80605e1ebc2768bfd7f3e" translate="yes" xml:space="preserve">
          <source>Whenever you move the mouse, this example checks whether the cursor is in the stroke of an elliptical &lt;code&gt;Path2D&lt;/code&gt; path. If yes, the ellipse's stroke becomes green, otherwise it is red.</source>
          <target state="translated">마우스를 움직일 때마다이 예제는 커서가 타원형 &lt;code&gt;Path2D&lt;/code&gt; 경로 의 획에 있는지 확인합니다 . 그렇다면 타원의 획이 녹색이되고, 그렇지 않으면 빨간색이됩니다.</target>
        </trans-unit>
        <trans-unit id="9d0d6636dc2bf750351fbd92bd9e1b711132900a" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; is a &lt;a href=&quot;../batterymanager&quot;&gt;&lt;code&gt;BatteryManager&lt;/code&gt;&lt;/a&gt; object, and &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingchange&quot;&gt;chargingchange&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">어디 &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; A는 &lt;a href=&quot;../batterymanager&quot;&gt; &lt;code&gt;BatteryManager&lt;/code&gt; 의&lt;/a&gt; 객체 및 &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; 는 때 호출하는 기능입니다 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingchange&quot;&gt;chargingchange&lt;/a&gt;&lt;/code&gt; 의 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d36f0ff60574ff33b5a7a3e045701e8a6594f836" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; is a &lt;a href=&quot;../batterymanager&quot;&gt;&lt;code&gt;BatteryManager&lt;/code&gt;&lt;/a&gt; object, and &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingtimechange&quot;&gt;chargingtimechange&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">여기서 &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; 는 &lt;a href=&quot;../batterymanager&quot;&gt; &lt;code&gt;BatteryManager&lt;/code&gt; &lt;/a&gt; 객체이고 &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingtimechange&quot;&gt;chargingtimechange&lt;/a&gt;&lt;/code&gt; 이벤트가 발생할 때 호출되는 함수 입니다.</target>
        </trans-unit>
        <trans-unit id="9041a88cefdc3d77196d7812a51677ca7177b77b" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; is a &lt;a href=&quot;../batterymanager&quot;&gt;&lt;code&gt;BatteryManager&lt;/code&gt;&lt;/a&gt; object, and &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dischargingtimechange&quot;&gt;dischargingtimechange&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">여기서 &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; 는 &lt;a href=&quot;../batterymanager&quot;&gt; &lt;code&gt;BatteryManager&lt;/code&gt; &lt;/a&gt; 객체이고 &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dischargingtimechange&quot;&gt;dischargingtimechange&lt;/a&gt;&lt;/code&gt; 이벤트가 발생할 때 호출되는 함수 입니다.</target>
        </trans-unit>
        <trans-unit id="78e2d2de85cc3ccfef3a5b8e8a619265bd75004d" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; is a &lt;a href=&quot;../batterymanager&quot;&gt;&lt;code&gt;BatteryManager&lt;/code&gt;&lt;/a&gt; object, and &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/levelchange&quot;&gt;levelchange&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">여기서 &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; 는 &lt;a href=&quot;../batterymanager&quot;&gt; &lt;code&gt;BatteryManager&lt;/code&gt; &lt;/a&gt; 객체이고 &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/levelchange&quot;&gt;levelchange&lt;/a&gt;&lt;/code&gt; 이벤트가 발생할 때 호출되는 함수 입니다.</target>
        </trans-unit>
        <trans-unit id="5a4eee02f3f097ff38a344dee19eb455de207db0" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicelight&quot;&gt;devicelight&lt;/a&gt;&lt;/code&gt; event occurs. These events are of type &lt;a href=&quot;../devicelightevent&quot;&gt;&lt;code&gt;DeviceLightEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">어디 &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; 는 때 호출하는 기능입니다 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicelight&quot;&gt;devicelight&lt;/a&gt;&lt;/code&gt; 의 이벤트가 발생이. 이러한 이벤트는 &lt;a href=&quot;../devicelightevent&quot;&gt; &lt;code&gt;DeviceLightEvent&lt;/code&gt; &lt;/a&gt; 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="855d6e97dd06c760bfc54cd0834a5b596826c2ff" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/deviceproximity&quot;&gt;deviceproximity&lt;/a&gt;&lt;/code&gt; event occurs. These events are of type &lt;a href=&quot;../deviceproximityevent&quot;&gt;&lt;code&gt;DeviceProximityEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">어디 &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; 는 때 호출하는 기능입니다 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/deviceproximity&quot;&gt;deviceproximity&lt;/a&gt;&lt;/code&gt; 의 이벤트가 발생이. 이러한 이벤트는 &lt;a href=&quot;../deviceproximityevent&quot;&gt; &lt;code&gt;DeviceProximityEvent&lt;/code&gt; &lt;/a&gt; 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="35ac77582d7c567f16c6980afcf32505c256f5d2" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;funcRef&lt;/code&gt; is a reference to a function.</source>
          <target state="translated">여기서 &lt;code&gt;funcRef&lt;/code&gt; 는 함수에 대한 참조이다.</target>
        </trans-unit>
        <trans-unit id="1761a310ddf608c0f04bd115e2a97e1741cb1a59" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;funcRef&lt;/code&gt; is a reference to a function. This function receives a &lt;a href=&quot;../devicemotionevent&quot;&gt;&lt;code&gt;DeviceMotionEvent&lt;/code&gt;&lt;/a&gt; object describing the motion that occurred.</source>
          <target state="translated">여기서 &lt;code&gt;funcRef&lt;/code&gt; 는 함수에 대한 참조이다. 이 함수는 발생한 모션을 설명 하는 &lt;a href=&quot;../devicemotionevent&quot;&gt; &lt;code&gt;DeviceMotionEvent&lt;/code&gt; &lt;/a&gt; 객체를 받습니다 .</target>
        </trans-unit>
        <trans-unit id="9b95aebddef29decaeb051575dfedfcbd4106ac8" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;width&lt;/code&gt; is a string representing the width in number of pixels or as a percentage value.</source>
          <target state="translated">여기서 &lt;code&gt;width&lt;/code&gt; 는 너비를 픽셀 수 또는 백분율 값으로 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="3285d96d1174e09478c085d5c0d23acce0ac2ef4" translate="yes" xml:space="preserve">
          <source>Where is the data stored?</source>
          <target state="translated">데이터는 어디에 저장됩니까?</target>
        </trans-unit>
        <trans-unit id="7467fe8dfca0de5a7e53e1ad793bbdec24383169" translate="yes" xml:space="preserve">
          <source>Where it matters for WebRTC purposes, these are dealt with in a variety of places within the WebRTC infrastructure. For example, RTCP handles QoS monitoring.</source>
          <target state="translated">WebRTC 목적에 중요한 경우, WebRTC 인프라 내의 다양한 위치에서 처리됩니다. 예를 들어 RTCP는 QoS 모니터링을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="91a87fb79d960cece8f96056c2af6befa24f1c98" translate="yes" xml:space="preserve">
          <source>Where p and a are the tags which are used in HTML for paragraph and link, respectively and they can be replaced by identifiers which are used for Cues in WebVTT file.</source>
          <target state="translated">여기서 p와 a는 각각 단락과 링크에 HTML로 사용되는 태그이며 WebVTT 파일에서 큐에 사용되는 식별자로 대체 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fddbe0cb10eaa8b4994516f5b590fa1ffe7d04b6" translate="yes" xml:space="preserve">
          <source>Where the &lt;a href=&quot;parent&quot;&gt;&lt;code&gt;window.parent&lt;/code&gt;&lt;/a&gt; property returns the immediate parent of the current window, &lt;code&gt;window.top&lt;/code&gt; returns the topmost window in the hierarchy of window objects.</source>
          <target state="translated">&lt;a href=&quot;parent&quot;&gt; &lt;code&gt;window.parent&lt;/code&gt; 의&lt;/a&gt; 속성은 현재 윈도우의 바로 위 부모를 반환 &lt;code&gt;window.top&lt;/code&gt; 의 창 개체의 계층 구조에서 반환 최상위 창을여십시오.</target>
        </trans-unit>
        <trans-unit id="9033ce8d21ed06b1408ca216cffa39cc3f095102" translate="yes" xml:space="preserve">
          <source>Where the components are defined as follows:</source>
          <target state="translated">구성 요소가 다음과 같이 정의 된 위치 :</target>
        </trans-unit>
        <trans-unit id="574e95b6d8efa0022fbdde2c832cda5a47026661" translate="yes" xml:space="preserve">
          <source>Whereas the &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; element's composed path is a follows:</source>
          <target state="translated">반면 &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; 요소의 합성 경로는 다음이다 :</target>
        </trans-unit>
        <trans-unit id="4711f67e3cc0bb19d232e4c530869b9832f09b6a" translate="yes" xml:space="preserve">
          <source>Whether a device uses hardware or software decoding impacts how smooth and power efficient the video decoding is and how efficient the playback will be. The Media Capabilities API enables determining which codecs are supported and how performant a media file will be both in terms of smoothness and power efficiency.</source>
          <target state="translated">장치가 하드웨어 또는 소프트웨어 디코딩을 사용하는지 여부는 비디오 디코딩이 얼마나 매끄럽고 전력 효율적이며 재생 효율성에 영향을줍니다. 미디어 기능 API를 사용하면 지원되는 코덱과 미디어 파일의 성능 및 부드러움 및 전력 효율성을 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0210f3057e96b2243ad943c8728ce49f3f1ec69" translate="yes" xml:space="preserve">
          <source>Whether an event can be canceled or not is something that's determined when that event is initialized.</source>
          <target state="translated">이벤트를 취소 할 수 있는지 여부는 해당 이벤트가 초기화 될 때 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="22a49a142295885bf2698e17d4e6b3207f89d2a5" translate="yes" xml:space="preserve">
          <source>Whether the animation runs forwards (&lt;code&gt;normal&lt;/code&gt;), backwards (&lt;code&gt;reverse&lt;/code&gt;), switches direction after each iteration (&lt;code&gt;alternate&lt;/code&gt;), or runs backwards and switches direction after each iteration (&lt;code&gt;alternate-reverse&lt;/code&gt;). Defaults to &lt;code&gt;&quot;normal&quot;&lt;/code&gt;.</source>
          <target state="translated">애니메이션이 앞으로 실행되는지 ( &lt;code&gt;normal&lt;/code&gt; ) 뒤로 이동 하는지 ( &lt;code&gt;reverse&lt;/code&gt; ), 각 반복 후에 방향을 전환 하거나 ( &lt;code&gt;alternate&lt;/code&gt; ), 각 반복 후에 방향을 전환하고 방향을 전환합니다 ( &lt;code&gt;alternate-reverse&lt;/code&gt; ). 기본값은 &lt;code&gt;&quot;normal&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1395955c5a2548d4a30efb6327390af52ac0ea32" translate="yes" xml:space="preserve">
          <source>Whether the mouse coordinates are within a particular area on the canvas, is a common problem to solve. The hit region API allows you to define an area of your canvas and provides another possibility to expose interactive content on a canvas to accessibility tools. It allows you to make hit detection easier and lets you route events to DOM elements. The API has the following three methods (which are still experimental in current web browsers; check the browser compatibility tables).</source>
          <target state="translated">마우스 좌표가 캔버스의 특정 영역 내에 있는지 여부는 일반적인 문제입니다. 적중 영역 API를 사용하면 캔버스 영역을 정의하고 캔버스의 대화 형 컨텐츠를 내게 필요한 옵션 도구에 노출 할 수 있습니다. 적중 감지를보다 쉽게하고 이벤트를 DOM 요소로 라우트 할 수 있습니다. API에는 다음 세 가지 방법이 있습니다 (현재 웹 브라우저에서 아직 실험 중이며 브라우저 호환성 표를 확인하십시오).</target>
        </trans-unit>
        <trans-unit id="a750597dbe2dc313c41aabb70b3b34b1d1884551" translate="yes" xml:space="preserve">
          <source>Which array &lt;code&gt;forEach()&lt;/code&gt; is being applied to.</source>
          <target state="translated">적용 할 배열 ( &lt;code&gt;forEach()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2fa608cfd082a248a72feb1d19024301841e78f2" translate="yes" xml:space="preserve">
          <source>Which is exactly the same as the &lt;code&gt;(z + 1) * scaleFactor&lt;/code&gt; that we used in the previous example.</source>
          <target state="translated">이전 예제에서 사용한 &lt;code&gt;(z + 1) * scaleFactor&lt;/code&gt; 와 정확히 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="9c325461434f28b91467db739ce54f53cecbbcde" translate="yes" xml:space="preserve">
          <source>Which must be greater than the start time</source>
          <target state="translated">시작 시간보다 커야합니다</target>
        </trans-unit>
        <trans-unit id="22aa7b656b3bc7c7d0b959e574f102d7aab0f495" translate="yes" xml:space="preserve">
          <source>Which of the two functions, &lt;code&gt;onsuccess()&lt;/code&gt; or &lt;code&gt;onerror()&lt;/code&gt;, gets called? If everything succeeds, a success event (that is, a DOM event whose &lt;code&gt;type&lt;/code&gt; property is set to &lt;code&gt;&quot;success&quot;&lt;/code&gt;) is fired with &lt;code&gt;request&lt;/code&gt; as its &lt;code&gt;target&lt;/code&gt;. Once it is fired, the &lt;code&gt;onsuccess()&lt;/code&gt; function on &lt;code&gt;request&lt;/code&gt; is triggered with the success event as its argument. Otherwise, if there was any problem, an error event (that is, a DOM event whose &lt;code&gt;type&lt;/code&gt; property is set to &lt;code&gt;&quot;error&quot;&lt;/code&gt;) is fired at &lt;code&gt;request&lt;/code&gt;. This triggers the &lt;code&gt;&lt;code&gt;onerror()&lt;/code&gt;&lt;/code&gt; function with the error event as its argument.</source>
          <target state="translated">&lt;code&gt;onsuccess()&lt;/code&gt; 또는 &lt;code&gt;onerror()&lt;/code&gt; 중 어떤 함수 가 호출됩니까? 모든 성공하면, (이다, 누구는 DOM 이벤트 성공 이벤트 &lt;code&gt;type&lt;/code&gt; 속성에 설정되어있는 &lt;code&gt;&quot;success&quot;&lt;/code&gt; )와 해고 &lt;code&gt;request&lt;/code&gt; 는 같은 &lt;code&gt;target&lt;/code&gt; . 일단 실행되면 &lt;code&gt;request&lt;/code&gt; &lt;code&gt;onsuccess()&lt;/code&gt; 함수 가 성공 이벤트를 인수로 사용하여 트리거됩니다. 어떤 문제가 발생했을 경우 그렇지 않으면, (이다, 누구는 DOM 이벤트 오류 이벤트 &lt;code&gt;type&lt;/code&gt; 속성에 설정되어있는 &lt;code&gt;&quot;error&quot;&lt;/code&gt; )에서 발사되는 &lt;code&gt;request&lt;/code&gt; . 오류 이벤트를 인수로 하여 &lt;code&gt;&lt;code&gt;onerror()&lt;/code&gt;&lt;/code&gt; 함수를 트리거합니다 .</target>
        </trans-unit>
        <trans-unit id="d86a5675cc6478e7030415aaa83cd72801292548" translate="yes" xml:space="preserve">
          <source>While</source>
          <target state="translated">While</target>
        </trans-unit>
        <trans-unit id="c6e6f3689e2ba49330864598266c50c96132a904" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;addEventListener()&lt;/code&gt; will let you add the same listener more than once for the same type if the options are different, the only option &lt;code&gt;removeEventListener()&lt;/code&gt; checks is the &lt;code&gt;capture&lt;/code&gt;/&lt;code&gt;useCapture&lt;/code&gt; flag. Its value must match for &lt;code&gt;removeEventListener()&lt;/code&gt; to match, but the other values don't.</source>
          <target state="translated">옵션이 다른 경우 &lt;code&gt;addEventListener()&lt;/code&gt; 를 사용하면 동일한 유형에 대해 동일한 리스너를 두 번 이상 추가 할 수 있지만 &lt;code&gt;removeEventListener()&lt;/code&gt; 검사 옵션 만 &lt;code&gt;capture&lt;/code&gt; / &lt;code&gt;useCapture&lt;/code&gt; 플래그입니다. &lt;code&gt;removeEventListener()&lt;/code&gt; 가 일치 하도록 값이 일치해야 하지만 다른 값은 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c1ad5174754f314bfbceffd519c9479861a974d5" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;self.skipWaiting()&lt;/code&gt; can be called at any point during the service worker's execution, it will only have an effect if there's a newly installed service worker that might otherwise remain in the &lt;code&gt;waiting&lt;/code&gt; state. Therefore, it's common to call &lt;code&gt;self.skipWaiting()&lt;/code&gt; from inside of an &lt;a href=&quot;../installevent&quot;&gt;&lt;code&gt;InstallEvent&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">하지만 &lt;code&gt;self.skipWaiting()&lt;/code&gt; 서비스 노동자의 실행 중에 언제든지 호출 할 수 있습니다 그렇지 않으면 남아있을 수 있습니다 새로 설치 서비스 작업자가 있다면, 그것은 단지 영향을 미칠 것이다 &lt;code&gt;waiting&lt;/code&gt; 상태입니다. 따라서 &lt;a href=&quot;../installevent&quot;&gt; &lt;code&gt;InstallEvent&lt;/code&gt; &lt;/a&gt; 핸들러 내부에서 &lt;code&gt;self.skipWaiting()&lt;/code&gt; 을 호출하는 것이 일반적 입니다.</target>
        </trans-unit>
        <trans-unit id="58b29086e504954a8dc55b56aaafed1688c8d4a5" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;textContent&lt;/code&gt; gets the content of all elements, including &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, &lt;code&gt;innerText&lt;/code&gt; does not, only showing &amp;ldquo;human-readable&amp;rdquo; elements.</source>
          <target state="translated">&lt;code&gt;textContent&lt;/code&gt; 는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt; &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소를 포함한 모든 요소의 내용을 가져 오는 반면 &lt;code&gt;innerText&lt;/code&gt; 는 &quot;사람이 읽을 수있는&quot;요소 만 표시하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="1677d5cb2e08363d28b42f87c2956814a4aa4b6c" translate="yes" xml:space="preserve">
          <source>While RTP is intended for use in latency-critical scenarios, it doesn't inherently offer any features that ensure QoS. Instead, it only offers the information necessary to allow QoS to be implemented elsewhere in the stack.</source>
          <target state="translated">RTP는 대기 시간이 긴 시나리오에서 사용하기위한 것이지만 본질적으로 QoS를 보장하는 기능을 제공하지는 않습니다. 대신 스택의 다른 곳에서 QoS를 구현하는 데 필요한 정보 만 제공합니다.</target>
        </trans-unit>
        <trans-unit id="01b5afbf41773c3c75e65b325870d18afd092ed1" translate="yes" xml:space="preserve">
          <source>While a &lt;a href=&quot;../vrdisplay&quot;&gt;&lt;code&gt;VRDisplay&lt;/code&gt;&lt;/a&gt; is blurred it does not lose it&amp;rsquo;s presenting status (&lt;a href=&quot;../vrdisplay/ispresenting&quot;&gt;&lt;code&gt;VRDisplay.isPresenting&lt;/code&gt;&lt;/a&gt; continues to report &lt;code&gt;true&lt;/code&gt;) but &lt;a href=&quot;../vrdisplay/getframedata&quot;&gt;&lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt; without updating the provided &lt;a href=&quot;../vrframedata&quot;&gt;&lt;code&gt;VRFrameData&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/getPose&quot;&gt;&lt;code&gt;VRDisplay.getPose()&lt;/code&gt;&lt;/a&gt; returns a &lt;a href=&quot;../vrpose&quot;&gt;&lt;code&gt;VRPose&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;null&lt;/code&gt; members.</source>
          <target state="translated">&lt;a href=&quot;../vrdisplay&quot;&gt; &lt;code&gt;VRDisplay&lt;/code&gt; &lt;/a&gt; 가 흐려지는 동안 현재 상태 ( &lt;a href=&quot;../vrdisplay/ispresenting&quot;&gt; &lt;code&gt;VRDisplay.isPresenting&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;true&lt;/code&gt; 를 계속보고 함 )를 &lt;a href=&quot;../vrdisplay/getframedata&quot;&gt; &lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt; &lt;/a&gt; 않지만 제공된 &lt;a href=&quot;../vrframedata&quot;&gt; &lt;code&gt;VRFrameData&lt;/code&gt; &lt;/a&gt; 를 업데이트하지 않고 VRDisplay.getFrameData () 는 &lt;code&gt;false&lt;/code&gt; 를 반환 하고 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/getPose&quot;&gt; &lt;code&gt;VRDisplay.getPose()&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;null&lt;/code&gt; 멤버 와 함께 &lt;a href=&quot;../vrpose&quot;&gt; &lt;code&gt;VRPose&lt;/code&gt; &lt;/a&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="aed3e1ed6ba05d0bd2deb652db96e58b8fbc306e" translate="yes" xml:space="preserve">
          <source>While creating a CustomEvent object, you must create the object from the same &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XUL/window&quot;&gt;window&lt;/a&gt;. The &lt;code&gt;detail&lt;/code&gt; attribute of your CustomEvent will be subjected to the same restrictions. String and Array values will be readable by the content without restrictions, but custom Objects will not. While using a custom Object, you will need to define the attributes of that object that are readable from the content script using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/&quot;&gt;Components.utils.cloneInto()&lt;/a&gt;.</source>
          <target state="translated">CustomEvent 객체를 만드는 동안 동일한 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XUL/window&quot;&gt;창&lt;/a&gt; 에서 객체를 만들어야합니다 . CustomEvent 의 &lt;code&gt;detail&lt;/code&gt; 속성에도 동일한 제한이 적용됩니다. 문자열 및 배열 값은 제한없이 컨텐츠에서 읽을 수 있지만 사용자 정의 오브젝트는 읽을 수 없습니다. 사용자 정의 오브젝트를 사용하는 동안 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/&quot;&gt;Components.utils.cloneInto ()를&lt;/a&gt; 사용하여 컨텐츠 스크립트에서 읽을 수있는 해당 오브젝트의 속성을 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7b78b9ed44c178f4579608dc427ab472e6c6b06b" translate="yes" xml:space="preserve">
          <source>While handling an asynchronous request, the value of &lt;code&gt;responseText&lt;/code&gt; always has the current content received from the server, even if it's incomplete because the data has not been completely received yet.</source>
          <target state="translated">비동기 요청을 처리하는 동안 &lt;code&gt;responseText&lt;/code&gt; 값은 데이터가 아직 완전히 수신되지 않아서 불완전하더라도 서버에서 수신 한 현재 컨텐츠를 항상 갖습니다.</target>
        </trans-unit>
        <trans-unit id="a90e109a6a6f027b28c605504e9754ef85c08a1d" translate="yes" xml:space="preserve">
          <source>While iframes work by default, &quot;sandboxed&quot; iframes block Pointer lock. The ability to avoid this limitation, in the form of the attribute/value combination &lt;code&gt;&amp;lt;iframe sandbox=&quot;allow-pointer-lock&quot;&amp;gt;&lt;/code&gt;, is expected to appear in Chrome soon.</source>
          <target state="translated">iframe은 기본적으로 작동하지만 &quot;샌드 박스&quot;iframe은 포인터 잠금을 차단합니다. 속성 / 값 조합 &lt;code&gt;&amp;lt;iframe sandbox=&quot;allow-pointer-lock&quot;&amp;gt;&lt;/code&gt; 의 형식으로이 제한을 피하는 기능 은 곧 Chrome에 나타날 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="a4ee9cf3cfba692860032328902f2f45d9229ca6" translate="yes" xml:space="preserve">
          <source>While information about a user's cameras and microphones are inaccessible for privacy reasons, an application can request the camera and microphone capabilities it needs and wants, using additional constraints. The following expresses a preference for 1280x720 camera resolution:</source>
          <target state="translated">개인 정보 보호를 위해 사용자의 카메라 및 마이크에 대한 정보에 액세스 할 수 없지만 응용 프로그램은 추가 제약 조건을 사용하여 필요한 카메라 및 마이크 기능을 요청할 수 있습니다. 다음은 1280x720 카메라 해상도에 대한 기본 설정을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3bf401a186baf2c5f165729ade6c02a73c539e5c" translate="yes" xml:space="preserve">
          <source>While slightly painful when initially working with scalable 2D graphics, paying attention to the pixel grid and the position of paths ensures that your drawings will look correct regardless of scaling or any other transformations involved. A 1.0-width vertical line drawn at the correct position will become a crisp 2-pixel line when scaled up by 2, and will appear at the correct position.</source>
          <target state="translated">처음에 확장 가능한 2D 그래픽으로 작업 할 때 약간 고통 스럽지만 픽셀 격자와 경로 위치에주의를 기울이면 스케일링이나 기타 변형에 관계없이 도면이 올바르게 보일 수 있습니다. 올바른 위치에 그려진 1.0 너비 세로선은 2 씩 확대하면 선명한 2 픽셀 선이되고 올바른 위치에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="8e42a26e3e14767ec938e2efc79ed1a212618720" translate="yes" xml:space="preserve">
          <source>While the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/browsing-the-web.html#abort-a-document&quot;&gt;standard for aborting a document load&lt;/a&gt; is defined, &lt;a href=&quot;https://github.com/whatwg/html/issues/3525&quot;&gt;HTML issue #3525&lt;/a&gt; suggests that browsers do not currently fire the &quot;abort&quot; event on &lt;code&gt;window&lt;/code&gt; that would trigger &lt;code&gt;onabort&lt;/code&gt; to be called.</source>
          <target state="translated">그동안 &lt;a href=&quot;https://html.spec.whatwg.org/multipage/browsing-the-web.html#abort-a-document&quot;&gt;문서 부하를 중단 표준을&lt;/a&gt; 정의, &lt;a href=&quot;https://github.com/whatwg/html/issues/3525&quot;&gt;HTML 문제 # 3525는&lt;/a&gt; 브라우저가 현재 &quot;취소&quot;에 이벤트가 발생하지 않는 것을 제안 &lt;code&gt;window&lt;/code&gt; 발생하게됩니다 &lt;code&gt;onabort&lt;/code&gt; 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35cf1e475b7bded5eb2a8c85006f09a919173abe" translate="yes" xml:space="preserve">
          <source>While the &lt;a href=&quot;label&quot;&gt;&lt;code&gt;label&lt;/code&gt;&lt;/a&gt; property doesn't have to be unique, this ID number is guaranteed to be unique among all data channels. Additionally, known implementations of WebRTC use the same ID on both peers. A unique ID makes it easier for your code to do its own out-of-band data channel-related signaling.</source>
          <target state="translated">&lt;a href=&quot;label&quot;&gt; &lt;code&gt;label&lt;/code&gt; &lt;/a&gt; 속성은 고유하지 않아도 되지만 이 ID 번호는 모든 데이터 채널에서 고유해야합니다. 또한 알려진 WebRTC 구현은 두 피어에서 동일한 ID를 사용합니다. 고유 한 ID를 사용하면 코드에서 자체 대역 외 데이터 채널 관련 신호를보다 쉽게 ​​수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e31addbffe614238773279550765fdb4361122e" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;ArrayBuffer&lt;/code&gt; can be filled with both integers and floats, the attributes will always be converted to a float when they are sent to the vertex shader. If you need to use integers in your vertex shader code, you can either cast the float back to an integer in the vertex shader (e.g. &lt;code&gt;(int) floatNumber&lt;/code&gt;), or use &lt;a href=&quot;../webgl2renderingcontext/vertexattribipointer&quot;&gt;&lt;code&gt;gl.vertexAttribIPointer()&lt;/code&gt;&lt;/a&gt; from WebGL2.</source>
          <target state="translated">&lt;code&gt;ArrayBuffer&lt;/code&gt; 는 정수와 부동 소수점으로 채워질 수 있지만 속성은 꼭 정점 셰이더로 보내질 때 부동 소수점으로 변환됩니다. 정점 셰이더 코드에서 정수를 사용해야하는 경우, 부동 소수점을 정점 셰이더의 정수 (예 : &lt;code&gt;(int) floatNumber&lt;/code&gt; )로 다시 캐스팅 하거나 &lt;a href=&quot;../webgl2renderingcontext/vertexattribipointer&quot;&gt; &lt;code&gt;gl.vertexAttribIPointer()&lt;/code&gt; &lt;/a&gt; 를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a20f42a68e5aecf135d2ea686e7f9f1237921a3" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;AudioParam&lt;/code&gt; named &lt;code&gt;offset&lt;/code&gt; is read-only, the &lt;code&gt;value&lt;/code&gt; property within is not. So you can change the value of &lt;code&gt;offset&lt;/code&gt; by setting the value of &lt;code&gt;ConstantSourceNode.offset.value&lt;/code&gt;:</source>
          <target state="translated">이름 이 &lt;code&gt;AudioParam&lt;/code&gt; 인 &lt;code&gt;offset&lt;/code&gt; 은 읽기 전용이지만 &lt;code&gt;value&lt;/code&gt; 속성은 아닙니다. 따라서 &lt;code&gt;ConstantSourceNode.offset.value&lt;/code&gt; 값을 설정하여 &lt;code&gt;offset&lt;/code&gt; 값을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="97a5fb8cfae9e9a388d84f10512d99ad5f83304b" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;createWriter()&lt;/code&gt; method existed, it immediately called &lt;code&gt;errorCallback&lt;/code&gt; with the &lt;code&gt;NS_ERROR_DOM_SECURITY_ERR&lt;/code&gt; error.</source>
          <target state="translated">&lt;code&gt;createWriter()&lt;/code&gt; 메소드가 존재 하는 동안 &lt;code&gt;NS_ERROR_DOM_SECURITY_ERR&lt;/code&gt; 오류 와 함께 &lt;code&gt;errorCallback&lt;/code&gt; 을 즉시 호출했습니다 .</target>
        </trans-unit>
        <trans-unit id="d37f7320e358b7e65dbf5f9cd612fb8b1f3dc4fc" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;removeRecursively()&lt;/code&gt; method existed, it immediately called the error callback with &lt;code&gt;NS_ERROR_DOM_SECURITY_ERR&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;removeRecursively()&lt;/code&gt; 메소드가 존재 하는 동안 &lt;code&gt;NS_ERROR_DOM_SECURITY_ERR&lt;/code&gt; 을 사용 하여 오류 콜백을 즉시 호출했습니다 .</target>
        </trans-unit>
        <trans-unit id="bdebc4b3b3ef8b054b9215aa56ac45c65438bd54" translate="yes" xml:space="preserve">
          <source>While the WebRTC &lt;a href=&quot;http://www.w3.org/TR/webrtc/&quot;&gt;specification&lt;/a&gt; is relatively stable, not all browsers have fully implemented all of its features. In addition, some browsers still have prefixes on some or all WebRTC APIs. While you can manually code around these issues, there is an easier way. The WebRTC organization &lt;a href=&quot;https://github.com/webrtc/adapter/&quot;&gt;provides on GitHub the WebRTC adapter&lt;/a&gt; to work around compatibility issues in different browsers' WebRTC implementations. The adapter is a JavaScript shim which lets your code to be written to the specification so that it will &quot;just work&quot; in all browsers with WebRTC support. There's no need to conditionally use prefixed APIs or implement other workarounds.</source>
          <target state="translated">WebRTC &lt;a href=&quot;http://www.w3.org/TR/webrtc/&quot;&gt;사양&lt;/a&gt; 은 비교적 안정적이지만 모든 브라우저가 모든 기능을 완전히 구현 한 것은 아닙니다. 또한 일부 브라우저에는 여전히 일부 또는 모든 WebRTC API에 접두사가 있습니다. 이러한 문제를 수동으로 코딩 할 수 있지만 더 쉬운 방법이 있습니다. WebRTC 조직 &lt;a href=&quot;https://github.com/webrtc/adapter/&quot;&gt;은 GitHub에서 WebRTC 어댑터&lt;/a&gt; 를 제공하여 다른 브라우저의 WebRTC 구현에서 호환성 문제를 해결합니다. 어댑터는 JavaScript shim으로 WebRTC를 지원하는 모든 브라우저에서 &quot;작동&quot;할 수 있도록 사양에 코드를 작성할 수 있습니다. 조건부 접두사 API를 사용하거나 다른 해결 방법을 구현할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b6cad4644fa34e0054b44bf1d4207b28ebb5ac7d" translate="yes" xml:space="preserve">
          <source>While the article Using the MediaStream Recording API demonstrates using the &lt;a href=&quot;../mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; interface to capture a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; generated by a hardware device, as returned by &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia()&lt;/code&gt;&lt;/a&gt;, you can also use an HTML media element (namely &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt;) as the source of the &lt;code&gt;MediaStream&lt;/code&gt; to be recorded. In this article, we'll look at an example that does just that.</source>
          <target state="translated">&lt;a href=&quot;../mediadevices/getusermedia&quot;&gt; &lt;code&gt;navigator.mediaDevices.getUserMedia()&lt;/code&gt; &lt;/a&gt; 에서 리턴 한대로 MediaStream 레코딩 API 사용 기사는 &lt;a href=&quot;../mediarecorder&quot;&gt; &lt;code&gt;MediaRecorder&lt;/code&gt; &lt;/a&gt; 인터페이스를 사용하여 하드웨어 디바이스에 의해 생성 된 &lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt; 을 캡처하는 방법을 설명하지만 HTML 매체 요소 (예 : &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; )를 기록 할 &lt;code&gt;MediaStream&lt;/code&gt; 의 소스로 지정하십시오 . 이 기사에서는이를 수행하는 예제를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="797b382246f26d1255a1cfed6292ce9f609e0c65" translate="yes" xml:space="preserve">
          <source>While the published specification describes this as an interface, it has since been changed to a dictionary in follow-up drafts.</source>
          <target state="translated">게시 된 사양은이를 인터페이스로 설명하지만 그 이후 후속 초안에서 사전으로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="feb6f214a2ac495b564c14534cad54174d2e6d80" translate="yes" xml:space="preserve">
          <source>While there's other CSS involved in this example, tparh that really matters for our purposes is the CSS that styles the &lt;code&gt;&quot;box&quot;&lt;/code&gt; element that we'll be animating. That CSS looks like this:</source>
          <target state="translated">이 예제에는 다른 CSS가 포함되어 있지만 실제로 우리의 목적에 중요한 tparh는 애니메이션을 적용 할 &lt;code&gt;&quot;box&quot;&lt;/code&gt; 요소의 스타일을 지정하는 CSS입니다 . 해당 CSS는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3f983776633f57cc6691d5d3fb869bba846d4d8b" translate="yes" xml:space="preserve">
          <source>While this article uses CSS3 for the ease of explanations, matrices are a core concept used by many different technologies including WebGL and shaders. This article is also available as an &lt;a href=&quot;https://github.com/TatumCreative/mdn-matrix-math&quot;&gt;MDN content kit&lt;/a&gt;. The live examples use a collection of &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;utility functions&lt;/a&gt; availabile under a global object named &quot;MDN&quot;.</source>
          <target state="translated">이 기사에서는 설명을 쉽게하기 위해 CSS3을 사용하지만 매트릭스는 WebGL 및 셰이더를 포함한 많은 다른 기술에서 사용되는 핵심 개념입니다. 이 기사는 &lt;a href=&quot;https://github.com/TatumCreative/mdn-matrix-math&quot;&gt;MDN 컨텐츠 키트&lt;/a&gt; 로도 제공됩니다 . 라이브 예제 는 &quot;MDN&quot;이라는 전역 객체에서 사용 가능한 &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;유틸리티 함수&lt;/a&gt; 모음을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="de434f88a34e3c3a64dc0c79d1ce2d9a8963ab73" translate="yes" xml:space="preserve">
          <source>While this example is trivial, you can replace the simple output of &quot;Supported&quot; vs. &quot;Not supported&quot; with code to provide alternative methods for presenting the audiovisual information you want to share with the user or otherwise work with.</source>
          <target state="translated">이 예제는 사소한 것이지만 &quot;지원됨&quot;과 &quot;지원되지 않음&quot;의 간단한 출력을 코드로 대체하여 사용자와 공유하거나 다른 방법으로 작업하려는 시청각 정보를 제시하는 대체 방법을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73391f9feabc77b6f8f917fb779ffda3f8fa05b7" translate="yes" xml:space="preserve">
          <source>While this happens, the previous version is still responsible for fetches. The new version is installing in the background. We are calling the new cache &lt;code&gt;v2&lt;/code&gt;, so the previous &lt;code&gt;v1&lt;/code&gt; cache isn't disturbed.</source>
          <target state="translated">이러한 상황이 발생하더라도 이전 버전은 여전히 ​​페치를 담당합니다. 새 버전이 백그라운드에서 설치 중입니다. 새 캐시 &lt;code&gt;v2&lt;/code&gt; 를 호출 하므로 이전 &lt;code&gt;v1&lt;/code&gt; 캐시가 방해받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0bfa65f684f8b28bb7488c726fd58c21e5193aa7" translate="yes" xml:space="preserve">
          <source>While this is an extremely simple example, imagine having a 32 oscillator synthesizer with multiple linked parameters in play across a number of patched nodes. Being able to shorten the number of operations to adjust them all will prove invaluable for code size and performance both.</source>
          <target state="translated">이것은 매우 간단한 예이지만 여러 패치 된 노드에서 여러 개의 연결된 파라미터가있는 32 개의 오실레이터 신시사이저가 있다고 상상해보십시오. 모든 작업을 조정하기 위해 작업 수를 단축 할 수 있으면 코드 크기와 성능 모두에서 매우 중요합니다.</target>
        </trans-unit>
        <trans-unit id="15445e729aa96a028be12f8eeb34097c920be46d" translate="yes" xml:space="preserve">
          <source>While using document.evaluate() works in FF2, in FF3 one must use someXMLDoc.evaluate() if evaluating against something other than the current document.</source>
          <target state="translated">FF2에서 document.evaluate ()를 사용하는 동안 FF3에서는 현재 문서 이외의 다른 것에 대해 평가할 경우 someXMLDoc.evaluate ()를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f232a5ab3a83a44a1e973dbaef1ca3af873e08e9" translate="yes" xml:space="preserve">
          <source>While vertex attributes are usually used to specify values which are different for each vertex (using &lt;a href=&quot;vertexattribpointer&quot;&gt;&lt;code&gt;vertexAttribPointer&lt;/code&gt;&lt;/a&gt;), it can be useful to specify a constant value. For example, if you have a shader which has a &lt;code&gt;color&lt;/code&gt; vertex attribute, but you want to draw everything in a single color, you can use &lt;code&gt;vertexAttrib&lt;/code&gt; to achieve that without creating a buffer filled with only one value or having to create a separate shader which uses a uniform for the color.</source>
          <target state="translated">정점 속성은 일반적으로 각 정점마다 다른 값을 지정하는 데 사용 &lt;a href=&quot;vertexattribpointer&quot;&gt; &lt;code&gt;vertexAttribPointer&lt;/code&gt; &lt;/a&gt; ( vertexAttribPointer 사용 ) 상수 값을 지정하는 것이 유용 할 수 있습니다. 예를 들어, &lt;code&gt;color&lt;/code&gt; 정점 속성 이있는 셰이더가 있지만 모든 것을 단일 색상으로 그리려면 &lt;code&gt;vertexAttrib&lt;/code&gt; 을 사용 하여 하나의 값으로 채워진 버퍼를 만들거나 별도의 셰이더를 만들지 않고도이를 달성 할 수 있습니다. 색상에 유니폼을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9735502472fb8645f3f3ce406fb7680c8d1a15b4" translate="yes" xml:space="preserve">
          <source>While we can write CSS Animations with the Web Animations API, where the API really comes in handy is manipulating the animation&amp;rsquo;s playback. The Web Animations API provides several useful methods for controlling playback. Let&amp;rsquo;s take a look at pausing and playing animations in the Growing/Shrinking Alice game (check out the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ&quot;&gt;full code on Codepen&lt;/a&gt;):</source>
          <target state="translated">Web Animations API로 CSS 애니메이션을 작성할 수 있지만 API가 실제로 유용한 곳은 애니메이션의 재생을 조작하는 것입니다. Web Animations API는 재생을 제어하는 ​​몇 가지 유용한 방법을 제공합니다. Alice의 Growing / Shrinking Alice 게임에서 애니메이션 일시 정지 및 재생을 살펴 보겠습니다 ( &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ&quot;&gt;Codepen&lt;/a&gt; 의 전체 코드 확인 ).</target>
        </trans-unit>
        <trans-unit id="ad808409f9233584eacb6f81aba6de2f8b0666c2" translate="yes" xml:space="preserve">
          <source>While working on your Web Audio API code, you may find that you need tools to analyze the graph of nodes you create or to otherwise debug your work. This article discusses tools available to help you do that.</source>
          <target state="translated">Web Audio API 코드에서 작업하는 동안 생성 한 노드의 그래프를 분석하거나 작업을 디버깅하는 도구가 필요할 수 있습니다. 이 기사에서는이를 수행하는 데 도움이되는 도구에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="1affea20cdd4173ba4ba9192dd973a33d5530c24" translate="yes" xml:space="preserve">
          <source>While you can just &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-simple-datachannel/main.js&quot;&gt;look at the code itself on GitHub&lt;/a&gt;, below we'll review the parts of the code that do the heavy lifting.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-simple-datachannel/main.js&quot;&gt;GitHub에서 코드 자체를 살펴볼&lt;/a&gt; 수는 있지만 , 아래에서는 코드를 크게 들어 올리는 부분을 검토합니다.</target>
        </trans-unit>
        <trans-unit id="9d622eb69a5875a65853870e99381ca1c9e10477" translate="yes" xml:space="preserve">
          <source>While you should instead use the CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/border-spacing&quot;&gt;&lt;code&gt;border-spacing&lt;/code&gt;&lt;/a&gt; property, the obsolete &lt;a href=&quot;../htmltableelement&quot;&gt;&lt;code&gt;HTMLTableElement&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;&lt;strong&gt;cellSpacing&lt;/strong&gt;&lt;/code&gt; property represents the spacing around the individual &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th&quot;&gt;&lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td&quot;&gt;&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;&lt;/a&gt; elements representing a table's cells. Any two cells are separated by the sum of the &lt;code&gt;cellSpacing&lt;/code&gt; of each of the two cells.</source>
          <target state="translated">대신 CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/border-spacing&quot;&gt; &lt;code&gt;border-spacing&lt;/code&gt; &lt;/a&gt; 속성 을 사용해야하지만 사용 되지 않는 &lt;a href=&quot;../htmltableelement&quot;&gt; &lt;code&gt;HTMLTableElement&lt;/code&gt; &lt;/a&gt; 인터페이스의 &lt;code&gt;&lt;strong&gt;cellSpacing&lt;/strong&gt;&lt;/code&gt; 속성은 테이블의 셀을 나타내는 개별 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th&quot;&gt; &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td&quot;&gt; &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소 주위의 간격을 나타냅니다. 임의의 두 셀은 두 셀 각각의 &lt;code&gt;cellSpacing&lt;/code&gt; 의 합에 의해 분리된다 .</target>
        </trans-unit>
        <trans-unit id="f110937a31794d7af371747f9b664d4615df8d41" translate="yes" xml:space="preserve">
          <source>Why does WebVR have its own requestAnimationFrame()?</source>
          <target state="translated">WebVR에 자체 requestAnimationFrame ()이있는 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="c6ddafdf36167a3465e231aba3ea6cd469e4d8dd" translate="yes" xml:space="preserve">
          <source>Why is my service worker failing to register?</source>
          <target state="translated">서비스 담당자가 등록하지 못한 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="d7208f97a187e41a0f79c932e9258d95ba937eab" translate="yes" xml:space="preserve">
          <source>Why matrices are important</source>
          <target state="translated">행렬이 중요한 이유</target>
        </trans-unit>
        <trans-unit id="930bf7e073fccab7f3f3f6f189b150f8ac14c0fb" translate="yes" xml:space="preserve">
          <source>Why use &lt;code&gt;addEventListener&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;addEventListener&lt;/code&gt; 를 사용하는 이유는 무엇 입니까?</target>
        </trans-unit>
        <trans-unit id="9ffeed44a345e5f320b12d679f8b1d74979925fe" translate="yes" xml:space="preserve">
          <source>Why use Beacon?</source>
          <target state="translated">왜 비콘을 사용합니까?</target>
        </trans-unit>
        <trans-unit id="fbe7cc3ca81e30d0c2df2fb6ddd130b17a5108d1" translate="yes" xml:space="preserve">
          <source>Why, you may wonder, is something fundamental to the process of establishing a WebRTC connection left out of the specification? The answer is simple: since the two devices have no way to directly contact each other, and the specification can&amp;rsquo;t predict every possible use case for WebRTC, it makes more sense to let the developer select an appropriate networking technology and messaging protocol.</source>
          <target state="translated">왜 사양에서 벗어난 WebRTC 연결을 설정하는 과정에서 근본적인 것이 궁금할까요? 대답은 간단합니다. 두 장치가 서로 직접 연락 할 방법이없고 사양이 WebRTC의 가능한 모든 사용 사례를 예측할 수 없기 때문에 개발자가 적절한 네트워킹 기술 및 메시징 프로토콜을 선택하도록하는 것이 더 합리적입니다.</target>
        </trans-unit>
        <trans-unit id="d77989c1e3c0e0ace735631597dc367ffdfa6f32" translate="yes" xml:space="preserve">
          <source>Why?</source>
          <target state="translated">Why?</target>
        </trans-unit>
        <trans-unit id="812eda1ec8a8550c1241c997b5510e45c2853039" translate="yes" xml:space="preserve">
          <source>WiFi Information API</source>
          <target state="translated">WiFi 정보 API</target>
        </trans-unit>
        <trans-unit id="82718d060967c684aa0c9faae3fa0070ecd6bea3" translate="yes" xml:space="preserve">
          <source>WiFi P2P API</source>
          <target state="translated">WiFi P2P API</target>
        </trans-unit>
        <trans-unit id="783c82091a962d6967bbaf9053f242f2256a974f" translate="yes" xml:space="preserve">
          <source>WiFi Tethering API</source>
          <target state="translated">WiFi 테 더링 API</target>
        </trans-unit>
        <trans-unit id="1642f118c8b0528714d276f4650abfce53ee0d45" translate="yes" xml:space="preserve">
          <source>Width (in pixels) of the browser window viewport including, if rendered, the vertical scrollbar.</source>
          <target state="translated">렌더링 된 경우 세로 스크롤 막대를 포함하여 브라우저 창 뷰포트의 너비 (픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="6ed6746e16e9da7f183eb810cc239f5eb028a623" translate="yes" xml:space="preserve">
          <source>Width and height</source>
          <target state="translated">폭과 높이</target>
        </trans-unit>
        <trans-unit id="04517969e4e88b6ac77e48991dd3507a4b32fdc6" translate="yes" xml:space="preserve">
          <source>Width and height must be multiples of 4.</source>
          <target state="translated">너비와 높이는 4의 배수 여야합니다.</target>
        </trans-unit>
        <trans-unit id="c32471fdfcc936eaef45f672707805517f43a478" translate="yes" xml:space="preserve">
          <source>Width and height must be powers of 2.</source>
          <target state="translated">너비와 높이는 2의 거듭 제곱이어야합니다.</target>
        </trans-unit>
        <trans-unit id="adf48bc5d5aad8c317971b9e2c49d1baf4b4d0a7" translate="yes" xml:space="preserve">
          <source>Width of lines. Default &lt;code&gt;1.0&lt;/code&gt;</source>
          <target state="translated">선의 너비. 기본 &lt;code&gt;1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e6911ae8c2c39729fed25810c0c64aed59e4b53" translate="yes" xml:space="preserve">
          <source>Width of the rectangle to be painted. Defaults to the width of the image data.</source>
          <target state="translated">칠할 사각형의 너비입니다. 이미지 데이터의 너비가 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="f0b2f802b10ce4db36dd6d0609fc630e8c7ea5cb" translate="yes" xml:space="preserve">
          <source>Wikipedia article on B&amp;eacute;zier curves</source>
          <target state="translated">베 지어 곡선에 관한 Wikipedia 기사</target>
        </trans-unit>
        <trans-unit id="cacc40419d0e71d22493f603adeb315123597bdc" translate="yes" xml:space="preserve">
          <source>Will always be &lt;code&gt;'SensorErrorEvent'&lt;/code&gt;.</source>
          <target state="translated">항상 &lt;code&gt;'SensorErrorEvent'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c457525ac41d909f890bde5a63d11f13205d57cf" translate="yes" xml:space="preserve">
          <source>Will be stored in the array buffer as follows:</source>
          <target state="translated">다음과 같이 배열 버퍼에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="bb375493900031c658af955fbed577798f48ba2f" translate="yes" xml:space="preserve">
          <source>Will describe the color gamut, or the range of color, the screen can display (not currently supported anywhere).</source>
          <target state="translated">화면이 표시 할 수있는 색 영역 또는 색 범위를 설명합니다 (현재는 지원되지 않음).</target>
        </trans-unit>
        <trans-unit id="9932ab684ce0f7e2f7cf8d93016e7f5a37562a2d" translate="yes" xml:space="preserve">
          <source>Will describe the known luminance characteristics of the screen (not currently supported anywhere).</source>
          <target state="translated">화면의 알려진 휘도 특성을 설명합니다 (현재는 지원되지 않음).</target>
        </trans-unit>
        <trans-unit id="97b82711e660baa7cf3a85a7a46e0f3884daca1e" translate="yes" xml:space="preserve">
          <source>Will hold our &lt;a href=&quot;../intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;&lt;/a&gt; used to track the intersection between the ads and the &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; element's bounds.</source>
          <target state="translated">광고와 &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; 요소의 경계 사이의 교차점을 추적하는 데 사용되는 &lt;a href=&quot;../intersectionobserver&quot;&gt; &lt;code&gt;IntersectionObserver&lt;/code&gt; 를&lt;/a&gt; 보유 합니다.</target>
        </trans-unit>
        <trans-unit id="410a70e773546db24768ac427861e4b752ec5155" translate="yes" xml:space="preserve">
          <source>Will hold the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; element which contains the time the ad has been visible so far.</source>
          <target state="translated">광고가 지금까지 표시된 시간을 포함 하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소를 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="d5a6580c3c1187e5dc9fdc06a7338a94d6e4571c" translate="yes" xml:space="preserve">
          <source>Will hold the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2&quot;&gt;&lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;&lt;/a&gt; element representing the ad's title.</source>
          <target state="translated">광고 제목을 나타내는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2&quot;&gt; &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소를 보유합니다 .</target>
        </trans-unit>
        <trans-unit id="e9bad46ef5286cdd60bef087b89ca4af12b8d41a" translate="yes" xml:space="preserve">
          <source>Will hold the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the ad's body text.</source>
          <target state="translated">광고 본문을 나타내는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt; &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; 를&lt;/a&gt; 보유합니다 .</target>
        </trans-unit>
        <trans-unit id="720f0131c6416ed9e457c366b630cd9b19bb0eae" translate="yes" xml:space="preserve">
          <source>Will log the time needed by the user to dismiss the alert box, log the time to the console, wait for the user to dismiss the second alert, and then log the ending time to the console:</source>
          <target state="translated">사용자가 경고 상자를 해제하고 콘솔에 시간을 기록한 다음 사용자가 두 번째 경고를 해제 할 때까지 기다린 다음 종료 시간을 콘솔에 기록하는 데 필요한 시간을 기록합니다.</target>
        </trans-unit>
        <trans-unit id="cb306168f02adeddcbd30194a965ee718444d3e3" translate="yes" xml:space="preserve">
          <source>Will throw a &lt;code&gt;NS_ERROR_DOM_INVALID_CHARACTER_ERR&lt;/code&gt; exception if one tries to submit the closing CDATA sequence (&quot;]]&amp;gt;&quot;) as part of the data, so unescaped user-provided data cannot be safely used without with this method getting this exception (&lt;code&gt;&lt;a href=&quot;createtextnode&quot;&gt;createTextNode()&lt;/a&gt;&lt;/code&gt; can often be used in its place).</source>
          <target state="translated">던져 것 &lt;code&gt;NS_ERROR_DOM_INVALID_CHARACTER_ERR&lt;/code&gt; 의 하나 개의 시도가 닫는 CDATA 순서를 제출하는 경우 데이터의 일부로서 ( &quot;]]&amp;gt;&quot;) 예외를, 그래서 이스케이프 사용자가 제공 한 데이터가 안전하게이 예외 (점점이 방법없이 사용할 수 없습니다 &lt;code&gt;&lt;a href=&quot;createtextnode&quot;&gt;createTextNode()&lt;/a&gt;&lt;/code&gt; 종종 있습니다 그 자리에 사용).</target>
        </trans-unit>
        <trans-unit id="5ac302cd37f782694646e0f66f5e065da2aaaeff" translate="yes" xml:space="preserve">
          <source>Will write to the console:</source>
          <target state="translated">콘솔에 쓸 것이다 :</target>
        </trans-unit>
        <trans-unit id="41dfc0a6c92707948578891c51d98c6443be63cc" translate="yes" xml:space="preserve">
          <source>Window</source>
          <target state="translated">Window</target>
        </trans-unit>
        <trans-unit id="6c058d9178cae138c823f18de3e8cd52c6d85cfd" translate="yes" xml:space="preserve">
          <source>Window events</source>
          <target state="translated">창 이벤트</target>
        </trans-unit>
        <trans-unit id="47044b57cd8f08779dff853e0bbb5e3e1f639acf" translate="yes" xml:space="preserve">
          <source>Window features</source>
          <target state="translated">창 특징</target>
        </trans-unit>
        <trans-unit id="d7834573ce9a2f9c71d41b38388fd8af273a3626" translate="yes" xml:space="preserve">
          <source>Window functionality features</source>
          <target state="translated">창 기능 기능</target>
        </trans-unit>
        <trans-unit id="847fd5b0e7d19b54f0ebf121df83ee37523e321d" translate="yes" xml:space="preserve">
          <source>Window.localStorage</source>
          <target state="translated">Window.localStorage</target>
        </trans-unit>
        <trans-unit id="e06553da442fe83bb81f9d16d444ebaf29427291" translate="yes" xml:space="preserve">
          <source>Window.postMessage</source>
          <target state="translated">Window.postMessage</target>
        </trans-unit>
        <trans-unit id="730be718e137a1c210a0ee0fe5c0e5f9c2de5cc0" translate="yes" xml:space="preserve">
          <source>WindowBase64.Base64 encoding and decoding</source>
          <target state="translated">WindowBase64.Base64 인코딩 및 디코딩</target>
        </trans-unit>
        <trans-unit id="ad1e0b4c85449d1543b482c415e6853a319bc6be" translate="yes" xml:space="preserve">
          <source>WindowClient</source>
          <target state="translated">WindowClient</target>
        </trans-unit>
        <trans-unit id="9d6627e726b5cd54a1cdade14ee86172c35a6398" translate="yes" xml:space="preserve">
          <source>WindowClient.focus</source>
          <target state="translated">WindowClient.focus</target>
        </trans-unit>
        <trans-unit id="ec8da8acf8bd50ef4044dfab3009d325a98d632a" translate="yes" xml:space="preserve">
          <source>WindowClient.focused</source>
          <target state="translated">WindowClient.focused</target>
        </trans-unit>
        <trans-unit id="1718e9d8b2b7bfa5a3830b3afea61429c64a9927" translate="yes" xml:space="preserve">
          <source>WindowClient.navigate</source>
          <target state="translated">WindowClient.navigate</target>
        </trans-unit>
        <trans-unit id="414bb71b657edc2dbb3e1b5db8e46d07f3c53362" translate="yes" xml:space="preserve">
          <source>WindowClient.visibilityState</source>
          <target state="translated">WindowClient.visibilityState</target>
        </trans-unit>
        <trans-unit id="1a6e732a37845c36fcda3afa6f1ba0d920b0ebca" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers</source>
          <target state="translated">WindowEventHandlers</target>
        </trans-unit>
        <trans-unit id="e0d5cb550a45faff2b9506f4b1765ed96267e3d0" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onafterprint</source>
          <target state="translated">WindowEventHandlers.onafterprint</target>
        </trans-unit>
        <trans-unit id="db85a0101308193e4bd8f57371bfe0436c9b17e9" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onbeforeprint</source>
          <target state="translated">WindowEventHandlers.onbeforeprint</target>
        </trans-unit>
        <trans-unit id="e444d73e40f34442ebc5f8ee36601c99cefeed62" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onbeforeunload</source>
          <target state="translated">WindowEventHandlers.onbeforeunload</target>
        </trans-unit>
        <trans-unit id="f5a28eaed2e9a3c4e1935f2031b3f4db7f6edac5" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onhashchange</source>
          <target state="translated">WindowEventHandlers.onhashchange</target>
        </trans-unit>
        <trans-unit id="ca66e4b89923d5faa447ef489205809bbe8c39f8" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onlanguagechange</source>
          <target state="translated">WindowEventHandlers.onlanguagechange</target>
        </trans-unit>
        <trans-unit id="2b858c20f019e6dc8a0ccff83249f8d8755a39ec" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onmessage</source>
          <target state="translated">WindowEventHandlers.onmessage</target>
        </trans-unit>
        <trans-unit id="80407d07cac41a8f7d9ca0dbc6a431d605e997d2" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onmessageerror</source>
          <target state="translated">WindowEventHandlers.onmessageerror</target>
        </trans-unit>
        <trans-unit id="1e6db104f8269652f6af517cad59bddb8ab54bd8" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onpopstate</source>
          <target state="translated">WindowEventHandlers.onpopstate</target>
        </trans-unit>
        <trans-unit id="b5295ee0cadfbc9f05a94859c94f84fd25dc8090" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onrejectionhandled</source>
          <target state="translated">WindowEventHandlers.onrejectionhandled</target>
        </trans-unit>
        <trans-unit id="29b824c41f886a5eaa4aa169891d4c0c368c473c" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onstorage</source>
          <target state="translated">WindowEventHandlers.onstorage</target>
        </trans-unit>
        <trans-unit id="1cc5da3986b0d97b681eb258ee732cdbaa51cf68" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onunhandledrejection</source>
          <target state="translated">WindowEventHandlers.onunhandledrejection</target>
        </trans-unit>
        <trans-unit id="4ee3a8b6d5951c23c66f22e4e25378ec88fcc7af" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onunload</source>
          <target state="translated">WindowEventHandlers.onunload</target>
        </trans-unit>
        <trans-unit id="4695cae95157eec4a2f36b8710914191b7160a60" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope</source>
          <target state="translated">WindowOrWorkerGlobalScope</target>
        </trans-unit>
        <trans-unit id="d763098d050b46b02a523444b14d83e6f520d9d4" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope mixin</source>
          <target state="translated">WindowOrWorkerGlobalScope 믹스 인</target>
        </trans-unit>
        <trans-unit id="097752d5e348c24d5a189c3ca9fab78d55edd767" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.atob</source>
          <target state="translated">WindowOrWorkerGlobalScope.atob</target>
        </trans-unit>
        <trans-unit id="efc90a4cc92535fec2b748e4d0c3139ab6e37dc1" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.btoa</source>
          <target state="translated">WindowOrWorkerGlobalScope.btoa</target>
        </trans-unit>
        <trans-unit id="3d20e90dd0a29c76ced115f916d7a14a46329a5e" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.caches</source>
          <target state="translated">WindowOrWorkerGlobalScope.caches</target>
        </trans-unit>
        <trans-unit id="7dd146554d30a2996c66fae533a3e3c64a8c7159" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.clearInterval</source>
          <target state="translated">WindowOrWorkerGlobalScope.clearInterval</target>
        </trans-unit>
        <trans-unit id="62bdc2ee357307721b13e63db237f52f659efe11" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.clearTimeout</source>
          <target state="translated">WindowOrWorkerGlobalScope.clearTimeout</target>
        </trans-unit>
        <trans-unit id="b5be5c80eb9dcc1f179f98df9281505a83260eac" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.createImageBitmap</source>
          <target state="translated">WindowOrWorkerGlobalScope.createImageBitmap</target>
        </trans-unit>
        <trans-unit id="2ca6e3e1ac96b6d84d852f89047da28707a24b60" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.fetch</source>
          <target state="translated">WindowOrWorkerGlobalScope.fetch</target>
        </trans-unit>
        <trans-unit id="7cc7c43efcbd55a98bbced2e7dbf78253d2fa4e5" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.indexedDB</source>
          <target state="translated">WindowOrWorkerGlobalScope.indexedDB</target>
        </trans-unit>
        <trans-unit id="56962c266078a8dfca6eb0d27c27f1b8f74ec9a6" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.isSecureContext</source>
          <target state="translated">WindowOrWorkerGlobalScope.isSecureContext</target>
        </trans-unit>
        <trans-unit id="412904ea302f96e7e920b5afdf1e9c0dc1137495" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.origin</source>
          <target state="translated">WindowOrWorkerGlobalScope.origin</target>
        </trans-unit>
        <trans-unit id="7b2908b81e1bd458f36a12196a0149d1180c5c2c" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.setInterval</source>
          <target state="translated">WindowOrWorkerGlobalScope.setInterval</target>
        </trans-unit>
        <trans-unit id="20aa5c5c874ca192a5c0e6e9063131a2c6249f6e" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.setTimeout</source>
          <target state="translated">WindowOrWorkerGlobalScope.setTimeout</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="deebb7cd337d6895afb7ebc103c7f94f9207cd40" translate="yes" xml:space="preserve">
          <source>Windows 32-bit</source>
          <target state="translated">Windows 32 비트</target>
        </trans-unit>
        <trans-unit id="9cdfc54cc3b508486d3c59faddc9ea935b42584b" translate="yes" xml:space="preserve">
          <source>Windows 64-bit (32-bit build)</source>
          <target state="translated">Windows 64 비트 (32 비트 빌드)</target>
        </trans-unit>
        <trans-unit id="2840441da35f1084b02fc6bd50f15074d123f5f4" translate="yes" xml:space="preserve">
          <source>Windows 64-bit (64-bit build)</source>
          <target state="translated">Windows 64 비트 (64 비트 빌드)</target>
        </trans-unit>
        <trans-unit id="ed4932a7d32c6b1177526419c99a7cb3119925da" translate="yes" xml:space="preserve">
          <source>Windows CE</source>
          <target state="translated">윈도우 CE</target>
        </trans-unit>
        <trans-unit id="336c28309e5afeb0c32155db22da77f63062ac51" translate="yes" xml:space="preserve">
          <source>Windows NT x.y</source>
          <target state="translated">Windows NT xy</target>
        </trans-unit>
        <trans-unit id="39f688fd5cdc12e1f9cfb5fdb1b6ddc424d6165f" translate="yes" xml:space="preserve">
          <source>Windows NT x.y; WOW64</source>
          <target state="translated">Windows NT xy; 와우 64</target>
        </trans-unit>
        <trans-unit id="84b88ff322a19609192efbdd1b51aaee788f69d8" translate="yes" xml:space="preserve">
          <source>Windows NT x.y; Win64; x64</source>
          <target state="translated">Windows NT xy; Win64; x64</target>
        </trans-unit>
        <trans-unit id="794350602423fad8a09162b1af95c325f2cea71b" translate="yes" xml:space="preserve">
          <source>Windows are subjected to throttling after 30 seconds, with the same throttling delay rules as specified for window timers (again, see &lt;a href=&quot;windoworworkerglobalscope/settimeout#Reasons_for_delays_longer_than_specified&quot;&gt;Reasons for delays longer than specified&lt;/a&gt;). In Chrome, this value is 10 seconds.</source>
          <target state="translated">Windows는 창 타이머에 대해 지정된 것과 동일한 제한 지연 규칙을 사용하여 30 초 후에 제한을받습니다 (다시 말하면 &lt;a href=&quot;windoworworkerglobalscope/settimeout#Reasons_for_delays_longer_than_specified&quot;&gt;지정된 지연 시간보다 긴 지연 이유&lt;/a&gt; 참조 ). Chrome에서이 값은 10 초입니다.</target>
        </trans-unit>
        <trans-unit id="947f52a223f8d1c40cbde62959f38d0c2399e825" translate="yes" xml:space="preserve">
          <source>Windows support was enabled in Firefox 55.</source>
          <target state="translated">Firefox 55에서 Windows 지원이 활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="ce5ccaad45e0b5f1fdae7ce25be2d15c9913d784" translate="yes" xml:space="preserve">
          <source>WindowsCE x.y&lt;sup&gt;1&lt;/sup&gt;</source>
          <target state="translated">WindowsCE xy &lt;sup&gt;1&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b08b8379a55e1493f146e03b1df5f8c29cf0dad7" translate="yes" xml:space="preserve">
          <source>Wiring this up is the same as we've seen before. We create the &lt;a href=&quot;../biquadfilternode&quot;&gt;&lt;code&gt;BiquadFilterNode&lt;/code&gt;&lt;/a&gt;, configure the properties we want for it and connect it through our graph. Different types of biquad filters have different properties &amp;mdash; for instance setting the frequency on a bandpass type adjusts the middle frequency, however on a lowpass it would set the top frequency.</source>
          <target state="translated">이 배선은 이전에 본 것과 동일합니다. &lt;a href=&quot;../biquadfilternode&quot;&gt; &lt;code&gt;BiquadFilterNode&lt;/code&gt; 를&lt;/a&gt; 생성하고 원하는 속성을 구성한 후 그래프를 통해 연결합니다. 예를 들어 대역 통과 유형에서 주파수를 설정하면 중간 주파수가 조정되지만 저역 통과에서는 최고 주파수가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e59274a3f1b62379fb3b23d357e01ab5b9203b2f" translate="yes" xml:space="preserve">
          <source>Wiring up our controls</source>
          <target state="translated">컨트롤 배선</target>
        </trans-unit>
        <trans-unit id="11912a273673cc3dbd7f8d8470a2f28603227b0a" translate="yes" xml:space="preserve">
          <source>Wiring up out control buttons is comparatively simple &amp;mdash; now we can listen for a mouse event on our controls and run this function, as well as stop it when the mouse is released:</source>
          <target state="translated">컨트롤 버튼의 배선은 비교적 간단합니다. 이제 컨트롤에서 마우스 이벤트를 수신하고이 기능을 실행하고 마우스를 놓을 때 중지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="587941514c3c716b9903ba75d1411936906c3587" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;webglrenderingcontext/scissor&quot;&gt;&lt;code&gt;scissor()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;webglrenderingcontext/clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; we can demonstrate how the WebGL drawing buffer is affected by the size of the canvas.</source>
          <target state="translated">함께 &lt;a href=&quot;webglrenderingcontext/scissor&quot;&gt; &lt;code&gt;scissor()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;webglrenderingcontext/clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt; 우리는 WebGL을 그리기 버퍼가 캔버스의 크기에 의해 영향을받는 방법을 설명 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4034675f295cb5f3e8e6fdc87d027df0afb718b" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;globalAlpha&lt;/code&gt; applied this sets how shapes and images are drawn onto the existing bitmap.</source>
          <target state="translated">함께 &lt;code&gt;globalAlpha&lt;/code&gt; 도형 및 이미지 기존 비트 맵에 그리는 방식이 세트를 적용 하였다.</target>
        </trans-unit>
        <trans-unit id="33042f6c0abb01a45c937d2e32999ac38c5e3e93" translate="yes" xml:space="preserve">
          <source>With Media Source Extensions (MSE), this is changing. MSE allows us to replace the usual single track &lt;code&gt;src&lt;/code&gt; value fed to media elements with a reference to a &lt;code&gt;MediaSource&lt;/code&gt; object, which is a container for information like the ready state of the media for being played, and references to multiple &lt;code&gt;SourceBuffer&lt;/code&gt; objects that represent the different chunks of media that make up the entire stream. MSE gives us finer grained control over how much and how often content is fetched, and some control over memory usage details, such as when buffers are evicted. It lays the groundwork for adaptive bitrate streaming clients (such as those using DASH or HLS) to be built on its extensible API.</source>
          <target state="translated">MSE (Media Source Extensions)에서는 이와 같이 변화하고 있습니다. MSE를 사용하면 미디어 요소에 공급되는 일반적인 단일 트랙 &lt;code&gt;src&lt;/code&gt; 값을 &lt;code&gt;MediaSource&lt;/code&gt; 객체에 대한 참조 로 바꿀 수 있습니다 . MediaSource 객체는 재생을 위해 미디어의 준비 상태와 같은 정보를위한 컨테이너이며 , 다른 것을 나타내는 여러 &lt;code&gt;SourceBuffer&lt;/code&gt; 객체에 대한 참조입니다. 전체 스트림을 구성하는 미디어 덩어리. MSE는 컨텐츠를 얼마나 많이 그리고 얼마나 자주 가져 오는지를보다 세밀하게 제어하고 버퍼가 제거 될 때와 같은 메모리 사용 세부 사항을 제어합니다. 확장 가능한 API를 기반으로하는 적응 형 비트 전송률 스트리밍 클라이언트 (예 : DASH 또는 HLS를 사용하는 클라이언트)를위한 토대를 마련합니다.</target>
        </trans-unit>
        <trans-unit id="123c426ce26786c920eff725894b3adae3c6b111" translate="yes" xml:space="preserve">
          <source>With Streams being available to JavaScript, this all changes &amp;mdash; you can now start processing raw data with JavaScript bit by bit as soon as it is available on the client-side, without needing to generate a buffer, string, or blob.</source>
          <target state="translated">Streams를 JavaScript로 사용할 수있게되면이 모든 것이 변경됩니다. 이제 버퍼, 문자열 또는 블로 브를 생성 할 필요없이 클라이언트 측에서 JavaScript로 원시 데이터를 비트 단위로 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="622e96cbd1a045b478716e13976a9a20bdac74dd" translate="yes" xml:space="preserve">
          <source>With animations, use &lt;a href=&quot;../../window/requestanimationframe&quot;&gt;&lt;code&gt;window.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../windoworworkerglobalscope/setinterval&quot;&gt;&lt;code&gt;window.setInterval()&lt;/code&gt;&lt;/a&gt; .</source>
          <target state="translated">애니메이션에서는 &lt;a href=&quot;../../windoworworkerglobalscope/setinterval&quot;&gt; &lt;code&gt;window.setInterval()&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;../../window/requestanimationframe&quot;&gt; &lt;code&gt;window.requestAnimationFrame()&lt;/code&gt; &lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0585d73f5f04985cc96e7e4fc8ca2277bcc28ca2" translate="yes" xml:space="preserve">
          <source>With chrome privileges, the property is read-write, otherwise it is read-only. Bear in mind that if you try to set this property without chrome privileges, it will not throw an exception and instead just silently fail. This is to prevent scripts designed to set this property in Internet Explorer from breaking.</source>
          <target state="translated">크롬 권한을 사용하면 속성이 읽기 / 쓰기이고 그렇지 않은 경우 읽기 전용입니다. 크롬 권한없이이 속성을 설정하려고하면 예외가 발생하지 않고 대신 자동으로 실패합니다. 이는 Internet Explorer에서이 속성을 설정하도록 설계된 스크립트가 손상되지 않도록하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="75db5ee23b5a65f08162a3cce882d3bcd3e6d83d" translate="yes" xml:space="preserve">
          <source>With each new circle, the opacity of the previous circles underneath is effectively increased. If we were to increase the step count (and thus draw more circles), the background would eventually disappear completely from the center of the image.</source>
          <target state="translated">각각의 새로운 원으로, 이전 원의 불투명도가 효과적으로 증가합니다. 걸음 수를 늘려서 더 많은 원을 그리면 배경이 이미지 중앙에서 완전히 사라집니다.</target>
        </trans-unit>
        <trans-unit id="58d6fd5a66be936878dc30d2be42354e8d08fffb" translate="yes" xml:space="preserve">
          <source>With our presentation request successful, we now want to start setting up to render content to present to the VRDisplay. First of all we set the canvas to the same size as the VR display area. We do this by getting the &lt;a href=&quot;../vreyeparameters&quot;&gt;&lt;code&gt;VREyeParameters&lt;/code&gt;&lt;/a&gt; for both eyes using &lt;a href=&quot;../vrdisplay/geteyeparameters&quot;&gt;&lt;code&gt;VRDisplay.getEyeParameters()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">프레젠테이션 요청이 성공적으로 완료되면 이제 콘텐츠를 VRDisplay에 표시하도록 렌더링을 설정하려고합니다. 우선 캔버스를 VR 표시 영역과 동일한 크기로 설정했습니다. &lt;a href=&quot;../vrdisplay/geteyeparameters&quot;&gt; &lt;code&gt;VRDisplay.getEyeParameters()&lt;/code&gt; &lt;/a&gt; 사용하여 두 눈에 대한 &lt;a href=&quot;../vreyeparameters&quot;&gt; &lt;code&gt;VREyeParameters&lt;/code&gt; &lt;/a&gt; 를 가져 와서이 작업을 수행합니다 .</target>
        </trans-unit>
        <trans-unit id="475c638ecca2e0aa5deab71cece409d7616d19c9" translate="yes" xml:space="preserve">
          <source>With service workers, the following steps are generally observed for basic set up:</source>
          <target state="translated">서비스 작업자의 경우 일반적으로 기본 설정을 위해 다음 단계가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="4ef018c89bac5a1f15c8d985b4c3db2ebf523806" translate="yes" xml:space="preserve">
          <source>With some payment handlers (e.g., Apple Pay), dispatched whenever the user changes payment instrument, like switching from a credit card to a debit card.</source>
          <target state="translated">일부 결제 처리기 (예 : Apple Pay)를 사용하면 신용 카드에서 직불 카드로 전환하는 등 사용자가 결제 수단을 변경할 때마다 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="d7b2cee01555913708425f8b4d2d83591aa39ba9" translate="yes" xml:space="preserve">
          <source>With some payment handlers (e.g., Apple Pay), this event handler is called to handle the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; event, which is dispatched when the user agent requires that the merchant validate that the merchant or vendor requesting payment is legitimate.</source>
          <target state="translated">일부 지불 처리기 (예를 들어, 애플 유료)로,이 이벤트 핸들러는 처리하기 위해 호출됩니다 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; 의 사용자 에이전트가 상인 또는 공급 업체가 지불을 요구하는 상인의 validate가 합법적해야 할 때 전달되는 이벤트.</target>
        </trans-unit>
        <trans-unit id="283c8f301ff63a2a1b520c116d14517c3c3e3aab" translate="yes" xml:space="preserve">
          <source>With tabbed browsing, there is a reasonable chance that any given webpage is in the background and thus not visible to the user. The Page Visibility API provides events you can watch for to know when a document becomes visible or hidden, as well as features to look at the current visibility state of the page.</source>
          <target state="translated">탭 브라우징을 사용하면 지정된 웹 페이지가 백그라운드에있어 사용자에게 보이지 않을 가능성이 있습니다. 페이지 가시성 API는 문서의 현재 가시성 상태를 볼 수있는 기능뿐만 아니라 문서가 표시되거나 숨겨지는시기를 알 수있는 이벤트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8f88bdd2d45f0f48ea15e71d299b791576eb1ed4" translate="yes" xml:space="preserve">
          <source>With that all in mind, let's take a look at the code to create an IIR filter with the Web Audio API.</source>
          <target state="translated">이를 염두에두고 Web Audio API를 사용하여 IIR 필터를 작성하는 코드를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="824f585c959f8f70672e6232e46d690305fb4be1" translate="yes" xml:space="preserve">
          <source>With that in hand, we set the &lt;a href=&quot;font&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt; to 50-pixel-tall &quot;serif&quot; (the user's default &lt;a href=&quot;https://en.wikipedia.org/wiki/serif&quot;&gt;serif&lt;/a&gt; font), then call &lt;code&gt;fillText()&lt;/code&gt; to draw the text &quot;Hello world,&quot; starting at the coordinates (50, 90).</source>
          <target state="translated">이를 사용하여 &lt;a href=&quot;font&quot;&gt; &lt;code&gt;font&lt;/code&gt; &lt;/a&gt; 을 50 픽셀 높이의 &quot;serif&quot;(사용자의 기본 &lt;a href=&quot;https://en.wikipedia.org/wiki/serif&quot;&gt;serif&lt;/a&gt; 글꼴)로 설정 한 다음 &lt;code&gt;fillText()&lt;/code&gt; 를 호출 하여 좌표 (50, 90)에서 시작하여 &quot;Hello world&quot;라는 텍스트를 그립니다.</target>
        </trans-unit>
        <trans-unit id="04ea948dd70fbbf6b77fcd91951fefee88e0fd3f" translate="yes" xml:space="preserve">
          <source>With that in hand, we set the &lt;a href=&quot;font&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt; to 50-pixel-tall &quot;serif&quot; (the user's default &lt;a href=&quot;https://en.wikipedia.org/wiki/serif&quot;&gt;serif&lt;/a&gt; font), then call &lt;code&gt;strokeText()&lt;/code&gt; to draw the text &quot;Hello world,&quot; starting at the coordinates (50, 90).</source>
          <target state="translated">이를 사용하여 &lt;a href=&quot;font&quot;&gt; &lt;code&gt;font&lt;/code&gt; &lt;/a&gt; 을 50 픽셀 높이의 &quot;serif&quot;(사용자의 기본 &lt;a href=&quot;https://en.wikipedia.org/wiki/serif&quot;&gt;serif&lt;/a&gt; 글꼴)로 설정 한 다음 &lt;code&gt;strokeText()&lt;/code&gt; 를 호출 하여 좌표 (50, 90)에서 시작하여 &quot;Hello world&quot;라는 텍스트를 그립니다.</target>
        </trans-unit>
        <trans-unit id="524dce0be1ce55ccc6b932d6f3166cabf9853e0c" translate="yes" xml:space="preserve">
          <source>With that key, we will be able to compute the &lt;em&gt;mac&lt;/em&gt; of the data.</source>
          <target state="translated">이 키를 사용 하여 데이터 의 &lt;em&gt;맥&lt;/em&gt; 을 계산할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="81e3cc29ef214d7f001756261741ed56bf894b75" translate="yes" xml:space="preserve">
          <source>With the &quot;Include local directory pass when uploading files to a server&quot; option enabled, IE will change the filename inside the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; on the fly. To have direct control of the sent filename, the developer should send the filename as the third parameter value, i.e. &lt;code&gt;formData.append(name, value, filename)&lt;/code&gt;.</source>
          <target state="translated">&quot;서버에 파일을 업로드 할 때 로컬 디렉토리 패스 포함&quot;옵션을 활성화하면 IE가 &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt; 내부의 파일 이름을 즉시 변경합니다 . 전송 된 파일 이름을 직접 제어하려면 개발자는 파일 이름을 세 번째 매개 변수 값 (예 : &lt;code&gt;formData.append(name, value, filename)&lt;/code&gt; 으로 보내야합니다 .</target>
        </trans-unit>
        <trans-unit id="0b2bd2ea3acafa99b467b627258375ddc9ca19c7" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event, the &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property is initialized to the effect that the user is requesting. The user can modify the desired effect by pressing modifier keys. Although the exact keys used vary by platform, typically the Shift and Control keys would be used to switch between copying, moving, and linking. The mouse pointer will change to indicate which operation is desired; for instance, for a copy, the cursor might appear with a plus sign next to it.</source>
          <target state="translated">으로 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 행사, &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; 를의&lt;/a&gt; 특성은 사용자가 요청하고 있다는 효과가 초기화된다. 사용자는 수정 키를 눌러 원하는 효과를 수정할 수 있습니다. 사용되는 정확한 키는 플랫폼마다 다르지만 일반적으로 Shift 및 Control 키는 복사, 이동 및 링크를 전환하는 데 사용됩니다. 마우스 포인터가 변경되어 원하는 작업을 나타냅니다. 예를 들어, 사본의 경우 커서 옆에 더하기 부호가 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90dd4ea9efa94f11d39366b3dc421afbcde1b22b" translate="yes" xml:space="preserve">
          <source>With the IIRFIlter node it's up to you to set what &lt;code&gt;feedforward&lt;/code&gt; and &lt;code&gt;feedback&lt;/code&gt; values the filter needs &amp;mdash; this determines the characteristics of the filter. The downside is that this involves some complex maths.</source>
          <target state="translated">IIRFIlter 노드를 사용하면 필터에 필요한 &lt;code&gt;feedforward&lt;/code&gt; 및 &lt;code&gt;feedback&lt;/code&gt; 값 을 설정할 수 있습니다 . 이는 필터의 특성을 결정합니다. 단점은 복잡한 수학과 관련이 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="3c0e5e110d6fecbc0aa44994529f76d105b26872" translate="yes" xml:space="preserve">
          <source>With the Web Animations API, all you need to change is just one little property!</source>
          <target state="translated">Web Animations API를 사용하면 하나의 작은 속성 만 변경하면됩니다!</target>
        </trans-unit>
        <trans-unit id="a85d0b6832368867becfacd793181be50c35ca7b" translate="yes" xml:space="preserve">
          <source>With the Web Animations API, we can move interactive animations from stylesheets to JavaScript, separating presentation from behavior. We no longer need to rely on DOM-heavy techniques such as writing CSS properties and scoping classes onto elements to control playback direction. And unlike pure, declarative CSS, JavaScript also lets us dynamically set values from properties to durations. For building custom animation libraries and creating interactive animations, the Web Animations API might be the perfect tool for the job. Let's see what it can do!</source>
          <target state="translated">Web Animations API를 사용하면 대화식 애니메이션을 스타일 시트에서 JavaScript로 이동하여 프리젠 테이션을 동작과 분리 할 수 ​​있습니다. 더 이상 재생 방향을 제어하기 위해 CSS 속성 작성 및 요소에 클래스 범위 지정과 같은 DOM이 많은 기술에 의존 할 필요가 없습니다. 순수하고 선언적인 CSS와 달리 JavaScript를 사용하면 속성에서 기간까지 값을 동적으로 설정할 수 있습니다. 사용자 정의 애니메이션 라이브러리를 작성하고 대화식 애니메이션을 작성하는 경우 Web Animations API가 작업에 완벽한 도구 일 수 있습니다. 그것이 무엇을 할 수 있는지 보자!</target>
        </trans-unit>
        <trans-unit id="a54e82323c0ae7c79ee68042b2e1bb2d7ca8fd44" translate="yes" xml:space="preserve">
          <source>With the association in place between the vertex buffer for our shape and the &lt;code&gt;aVertexPosition&lt;/code&gt; attribute used to deliver vertexes one by one into the vertex shader, we're ready to draw the shape by calling &lt;a href=&quot;../webglrenderingcontext/drawarrays&quot;&gt;&lt;code&gt;drawArrays()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">정점에 대한 정점 버퍼와 정점 셰이더에 정점을 하나씩 전달하는 데 사용되는 &lt;code&gt;aVertexPosition&lt;/code&gt; 속성 사이의 연결을 사용하면 &lt;a href=&quot;../webglrenderingcontext/drawarrays&quot;&gt; &lt;code&gt;drawArrays()&lt;/code&gt; &lt;/a&gt; 를 호출하여 모양을 그릴 준비가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="55351da2e8fbca9c3979a774ef437b511c178f6e" translate="yes" xml:space="preserve">
          <source>With the association in place between the vertex buffer for our shape and the &lt;code&gt;aVertexPosition&lt;/code&gt; attribute used to deliver vertexes one by one into the vertex shader, we're ready to draw the shape by calling &lt;a href=&quot;drawarrays&quot;&gt;&lt;code&gt;drawArrays()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">정점에 대한 정점 버퍼와 정점 셰이더에 정점을 하나씩 전달하는 데 사용되는 &lt;code&gt;aVertexPosition&lt;/code&gt; 속성 사이의 연결을 사용하면 &lt;a href=&quot;drawarrays&quot;&gt; &lt;code&gt;drawArrays()&lt;/code&gt; &lt;/a&gt; 를 호출하여 모양을 그릴 준비가되었습니다 .</target>
        </trans-unit>
        <trans-unit id="372fac645750cd24a713bdd67eb92870c39ea0b9" translate="yes" xml:space="preserve">
          <source>With the built-in popup blockers of Mozilla/Firefox and Internet Explorer 6 SP2, you have to check the return value of &lt;code&gt;window.open()&lt;/code&gt;: it will be &lt;var&gt;null&lt;/var&gt; if the window wasn't allowed to open. However, for most other popup blockers, there is no reliable way.</source>
          <target state="translated">함께 내장 된 모질라 / 파이어 폭스와 인터넷 익스플로러 6 SP2의 팝업 차단, 당신의 반환 값을 확인해야 &lt;code&gt;window.open()&lt;/code&gt; :이 될 것 &lt;var&gt;null&lt;/var&gt; 창을 열도록 허용되지 않은 경우. 그러나 대부분의 다른 팝업 차단기에는 신뢰할 수있는 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="16e542e1cdcc282a5a2d4bd8bc7d1a8cf7f93967" translate="yes" xml:space="preserve">
          <source>With the chunks encoded, we then call &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;Array/forEach&lt;/code&gt;&lt;/a&gt; on the resulting array. Inside this block we use &lt;a href=&quot;../writablestreamdefaultwriter/ready&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter.ready&lt;/code&gt;&lt;/a&gt; to check whether the writer is ready to have another chunk written to it. &lt;code&gt;ready&lt;/code&gt; returns a promise that fulfills when this is the case, inside of which we call &lt;a href=&quot;../writablestreamdefaultwriter/write&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter.write()&lt;/code&gt;&lt;/a&gt; to actually write the chunk to the stream. This also triggers the &lt;code&gt;write()&lt;/code&gt; method specified inside the &lt;code&gt;WritableStream()&lt;/code&gt; constructor, as discussed above.</source>
          <target state="translated">청크가 인코딩되면 결과 배열에서 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt; &lt;code&gt;Array/forEach&lt;/code&gt; &lt;/a&gt; 를 호출 합니다. 이 블록 내에서 &lt;a href=&quot;../writablestreamdefaultwriter/ready&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter.ready&lt;/code&gt; &lt;/a&gt; 를 사용 하여 기록기에 다른 청크를 쓸 준비가되었는지 확인합니다. &lt;code&gt;ready&lt;/code&gt; 는이 경우에 이행하는 약속을 반환합니다. 내부에서 &lt;a href=&quot;../writablestreamdefaultwriter/write&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter.write()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 실제로 청크를 스트림에 씁니다. 또한 위에서 설명한 것처럼 &lt;code&gt;WritableStream()&lt;/code&gt; 생성자 내에 지정된 &lt;code&gt;write()&lt;/code&gt; 메서드를 트리거합니다 .</target>
        </trans-unit>
        <trans-unit id="5bb67e872994a46782754507025c87dd7ad6061a" translate="yes" xml:space="preserve">
          <source>With the help of the &lt;a href=&quot;../../canvasrenderingcontext2d/drawimage&quot;&gt;&lt;code&gt;drawImage()&lt;/code&gt;&lt;/a&gt; method, a second canvas and the &lt;a href=&quot;../../canvasrenderingcontext2d/imagesmoothingenabled&quot;&gt;&lt;code&gt;imageSmoothingEnabled&lt;/code&gt;&lt;/a&gt; property, we are able to zoom into our picture and see the details.</source>
          <target state="translated">의 도움으로 &lt;a href=&quot;../../canvasrenderingcontext2d/drawimage&quot;&gt; &lt;code&gt;drawImage()&lt;/code&gt; &lt;/a&gt; 방법, 두 번째 캔버스와 &lt;a href=&quot;../../canvasrenderingcontext2d/imagesmoothingenabled&quot;&gt; &lt;code&gt;imageSmoothingEnabled&lt;/code&gt; &lt;/a&gt; 재산, 우리는 우리의 사진을 확대하고 세부 사항을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5bef082f7c4f61bc5cbafc769bef716c244ef51d" translate="yes" xml:space="preserve">
          <source>With the help of the &lt;a href=&quot;../fontface&quot;&gt;&lt;code&gt;FontFace&lt;/code&gt;&lt;/a&gt; API, you can explicitly load fonts before using it in canvas.</source>
          <target state="translated">의 도움으로 &lt;a href=&quot;../fontface&quot;&gt; &lt;code&gt;FontFace&lt;/code&gt; 의&lt;/a&gt; API 명시 적으로 캔버스를 사용하기 전에 글꼴을로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7af46fc9bd78e3c73ec4e832eac2cbd0e2ebf0c9" translate="yes" xml:space="preserve">
          <source>With the help of the &lt;a href=&quot;webgl_lose_context&quot;&gt;&lt;code&gt;WEBGL_lose_context&lt;/code&gt;&lt;/a&gt; extension, you can simulate the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; events:</source>
          <target state="translated">&lt;a href=&quot;webgl_lose_context&quot;&gt; &lt;code&gt;WEBGL_lose_context&lt;/code&gt; &lt;/a&gt; 확장 의 도움으로 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; 이벤트를 시뮬레이션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6326322bfbb8795b35ede077b61f6922dccb4109" translate="yes" xml:space="preserve">
          <source>With the help of this extension, privileged contexts are able to retrieve debugging information about about the user's graphic driver:</source>
          <target state="translated">이 확장의 도움으로 권한있는 컨텍스트는 사용자의 그래픽 드라이버에 대한 디버깅 정보를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49c0612a2e28d43a1a66b95588c3d7754981bf08" translate="yes" xml:space="preserve">
          <source>With the help of this extension, you can now set the magnification or minification filter in the &lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt;&lt;code&gt;WebGLRenderingContext.texParameter()&lt;/code&gt;&lt;/a&gt; method to one of &lt;code&gt;gl.LINEAR&lt;/code&gt;, &lt;code&gt;gl.LINEAR_MIPMAP_NEAREST&lt;/code&gt;, &lt;code&gt;gl.NEAREST_MIPMAP_LINEAR&lt;/code&gt;, or &lt;code&gt;gl.LINEAR_MIPMAP_LINEAR&lt;/code&gt;, and use floating-point textures.</source>
          <target state="translated">이 확장을 사용하여 &lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt; &lt;code&gt;WebGLRenderingContext.texParameter()&lt;/code&gt; &lt;/a&gt; 메서드 의 확대 또는 축소 필터 를 &lt;code&gt;gl.LINEAR&lt;/code&gt; , &lt;code&gt;gl.LINEAR_MIPMAP_NEAREST&lt;/code&gt; , &lt;code&gt;gl.NEAREST_MIPMAP_LINEAR&lt;/code&gt; 또는 &lt;code&gt;gl.LINEAR_MIPMAP_LINEAR&lt;/code&gt; 중 하나로 설정 하고 부동 소수점 텍스처를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a933ce180c6fad4edba3fab29ef2f91d8cad459f" translate="yes" xml:space="preserve">
          <source>With the help of this extension, you can now set the magnification or minification filter in the &lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt;&lt;code&gt;WebGLRenderingContext.texParameter()&lt;/code&gt;&lt;/a&gt; method to one of &lt;code&gt;gl.LINEAR&lt;/code&gt;, &lt;code&gt;gl.LINEAR_MIPMAP_NEAREST&lt;/code&gt;, &lt;code&gt;gl.NEAREST_MIPMAP_LINEAR&lt;/code&gt;, or &lt;code&gt;gl.LINEAR_MIPMAP_LINEAR&lt;/code&gt;, and use half floating-point textures.</source>
          <target state="translated">이 확장을 사용하여 &lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt; &lt;code&gt;WebGLRenderingContext.texParameter()&lt;/code&gt; &lt;/a&gt; 메소드 의 확대 또는 축소 필터 를 &lt;code&gt;gl.LINEAR&lt;/code&gt; , &lt;code&gt;gl.LINEAR_MIPMAP_NEAREST&lt;/code&gt; , &lt;code&gt;gl.NEAREST_MIPMAP_LINEAR&lt;/code&gt; 또는 &lt;code&gt;gl.LINEAR_MIPMAP_LINEAR&lt;/code&gt; 중 하나로 설정 하고 반 부동 소수점을 사용할 수 있습니다 텍스처.</target>
        </trans-unit>
        <trans-unit id="2cc00bbddfb710fc0691818558c6fbcb71a5aa34" translate="yes" xml:space="preserve">
          <source>With the index of the vertex position attribute now available in &lt;code&gt;aVertexPosition&lt;/code&gt;, we call &lt;code&gt;enableVertexAttribArray()&lt;/code&gt; to enable the position attribute so it can be used by the shader program (in particular, by the vertex shader).</source>
          <target state="translated">이제 &lt;code&gt;aVertexPosition&lt;/code&gt; 에서 사용 가능한 정점 위치 속성의 색인을 사용하여 &lt;code&gt;enableVertexAttribArray()&lt;/code&gt; 를 호출 하여 위치 속성을 활성화하여 셰이더 프로그램 (특히 정점 셰이더)에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7bf64d3949733da974c20eedab6fd34b775c6a3e" translate="yes" xml:space="preserve">
          <source>With the key generator, the key would be generated automatically as you add the value to the object store. The current number of a key generator is always set to 1 when the object store for that key generator is first created. Basically the newly auto-generated key is increased by 1 based on the previous key. The current number for a key generator never decreases, other than as a result of database operations being reverted, for example, the database transaction is aborted. Therefore deleting a record or even clearing all records from an object store never affects the object store's key generator.</source>
          <target state="translated">키 생성기를 사용하면 값을 객체 저장소에 추가 할 때 키가 자동으로 생성됩니다. 해당 키 생성기의 오브젝트 저장소가 처음 작성 될 때 키 생성기의 현재 수는 항상 1로 설정됩니다. 기본적으로 새로 생성 된 키는 이전 키를 기준으로 1 씩 증가합니다. 키 생성기의 현재 수는 데이터베이스 조작이 복귀 된 결과 (예 : 데이터베이스 트랜잭션이 중단 된 결과)를 제외하고는 절대 감소하지 않습니다. 따라서 객체 저장소에서 레코드를 삭제하거나 모든 레코드를 지우더라도 객체 저장소의 키 생성기에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9456e13ad3bc20d9d10f3fdc696c591711a62371" translate="yes" xml:space="preserve">
          <source>With the structure of the site defined, we turn to the styling for the site. Let's look at the style for each component of the page individually.</source>
          <target state="translated">사이트의 구조가 정의되면 사이트의 스타일을 설정합니다. 페이지의 각 구성 요소에 대한 스타일을 개별적으로 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="c4766a07076583dc04214965503b8753a31349a4" translate="yes" xml:space="preserve">
          <source>With the target element in hand, we set the &lt;a href=&quot;../element/scrolltop&quot;&gt;&lt;code&gt;scrollTop&lt;/code&gt;&lt;/a&gt; of the frame's &lt;a href=&quot;../document/scrollingelement&quot;&gt;&lt;code&gt;scrollingElement&lt;/code&gt;&lt;/a&gt; to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/offsetTop&quot;&gt;&lt;code&gt;offsetTop&lt;/code&gt;&lt;/a&gt; of the target element. By doing so, we set the vertical scrolling position of the frame's document so that it's the same as the top edge of the target element.</source>
          <target state="translated">대상 요소를 손 으로 사용하여 프레임 &lt;a href=&quot;../document/scrollingelement&quot;&gt; &lt;code&gt;scrollingElement&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;../element/scrolltop&quot;&gt; &lt;code&gt;scrollTop&lt;/code&gt; &lt;/a&gt; 을 대상 요소 의 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/offsetTop&quot;&gt; &lt;code&gt;offsetTop&lt;/code&gt; &lt;/a&gt; 으로 설정합니다. 이를 통해 대상 문서의 상단 가장자리와 동일하도록 프레임 문서의 세로 스크롤 위치를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e88e8622e274f1ebeb983438f7b26a2f87e8c5e7" translate="yes" xml:space="preserve">
          <source>With the user's permission through a prompt, turns on a camera or screensharing and/or a microphone on the system and provides a &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; containing a video track and/or an audio track with the input.</source>
          <target state="translated">프롬프트를 통한 사용자의 권한으로 시스템에서 카메라 또는 화면 공유 및 / 또는 마이크를 켜고 비디오 트랙 및 / 또는 오디오 트랙이 포함 된 &lt;a href=&quot;mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt; 을 입력과 함께 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1b468afcfdf19875b48968ca43a3849d0d8c0094" translate="yes" xml:space="preserve">
          <source>With the vertex data now provided to WebGL, we set &lt;code&gt;vertexNumComponents&lt;/code&gt; to the number of components in each vertex (2, since they're 2D vertexes) and &lt;code&gt;vertexCount&lt;/code&gt; to the number of vertexes in the vertex list.</source>
          <target state="translated">이제 정점 데이터가 WebGL에 제공되면 &lt;code&gt;vertexNumComponents&lt;/code&gt; 를 각 정점의 구성 요소 수 (2D 정점이므로 2)로 설정하고 &lt;code&gt;vertexCount&lt;/code&gt; 를 정점 목록의 정점 수로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e585e1993bc271947d97639b9e2d7bd6073ffa57" translate="yes" xml:space="preserve">
          <source>With these big concepts under our belts, we can get to more concrete stuff.</source>
          <target state="translated">벨트 아래에 이러한 큰 개념을 사용하면보다 구체적인 내용을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39f05fb2284f0bc47f94036cb08c4e0ffa2afcae" translate="yes" xml:space="preserve">
          <source>With these big concepts under our belts, we can get to more concrete stuff. For a tutorial on how to use the API, see &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/Using_IndexedDB&quot;&gt;Using IndexedDB&lt;/a&gt;.</source>
          <target state="translated">벨트 아래에 이러한 큰 개념을 사용하면보다 구체적인 내용을 얻을 수 있습니다. API 사용 방법에 대한 학습서는 &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/Using_IndexedDB&quot;&gt;IndexedDB 사용을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9bd411077698f97ffa81e2a28c9b9e7871ccf888" translate="yes" xml:space="preserve">
          <source>With this code in place, each time the user plugs in a camera, microphone, or other media device, or turns one on or off, we call &lt;code&gt;updateDeviceList()&lt;/code&gt; to redraw the list of connected devices.</source>
          <target state="translated">이 코드를 사용하여 사용자가 카메라, 마이크 또는 기타 미디어 장치를 꽂거나 켜거나 끌 때마다 &lt;code&gt;updateDeviceList()&lt;/code&gt; 를 호출 하여 연결된 장치 목록을 다시 그립니다.</target>
        </trans-unit>
        <trans-unit id="5d0732cf9cfe5b4099e1505216e0992ca0bde3ae" translate="yes" xml:space="preserve">
          <source>With this code in place, the result looks like this:</source>
          <target state="translated">이 코드를 사용하면 결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ec0404607a980fd5b9cd16a3e85645b9a750988d" translate="yes" xml:space="preserve">
          <source>With this extension, you can simulate the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; events:</source>
          <target state="translated">이 확장을 사용하면 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; 이벤트를 시뮬레이션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16ea8709d1511ba3b03fccc2295c99744fe633cb" translate="yes" xml:space="preserve">
          <source>With this method, you can simulate the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; event:</source>
          <target state="translated">이 방법을 사용하면 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; 이벤트를 시뮬레이션 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88f3f7c0e22ab6115c9f43ac1615342d428a4b14" translate="yes" xml:space="preserve">
          <source>With this method, you can simulate the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; event:</source>
          <target state="translated">이 방법을 사용하면 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; 이벤트를 시뮬레이션 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a884c64cfc571fd48023eb4273cf6f26af1099e" translate="yes" xml:space="preserve">
          <source>With this table in place, we can find out the frequency for a given note in a particular octave quite easily. If we want the frequency for the note G# in octave 1, we simply use &lt;code&gt;noteFreq[1][&quot;G#&quot;]&lt;/code&gt; and get the value 51.9 as a result.</source>
          <target state="translated">이 표를 사용하면 특정 옥타브에서 주어진 음표의 주파수를 매우 쉽게 찾을 수 있습니다. 옥타브 1에서 음표 G #의 주파수를 원한다면, 간단히 &lt;code&gt;noteFreq[1][&quot;G#&quot;]&lt;/code&gt; 를 사용하고 그 결과 값 51.9를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="892207f2edf7542576ac45a227a9c260fda91319" translate="yes" xml:space="preserve">
          <source>With those settings included it's time to directly draw to the screen using clip space coordinates.</source>
          <target state="translated">이러한 설정이 포함되면 클립 공간 좌표를 사용하여 화면에 직접 그릴 때입니다.</target>
        </trans-unit>
        <trans-unit id="aa4b5acb4cc342c42949520deb37509c671e5bee" translate="yes" xml:space="preserve">
          <source>With your video properly encoded and adaptive bitrate media generated, you're now ready to begin adaptive bitrate streaming on the web using DASH and MSE.</source>
          <target state="translated">비디오가 올바르게 인코딩되고 적응 형 비트 전송률 미디어가 생성되면 이제 DASH 및 MSE를 사용하여 웹에서 적응 형 비트 전송률 스트리밍을 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3cc479cbff77863350a14cd5e5acd16377352285" translate="yes" xml:space="preserve">
          <source>Within a web page, there are certain cases where a default drag behavior is used. These include text selections, images, and links. When an image or link is dragged, the URL of the image or link is set as the drag data, and a drag begins. For other elements, they must be part of a selection for a default drag to occur. To see this in effect, select an area of a webpage, and then click and hold the mouse and drag the selection. An OS-specific rendering of the selection will appear and follow the mouse pointer as the drag occurs. However, this behavior is only the default drag behavior, if no listeners adjust the data to be dragged.</source>
          <target state="translated">웹 페이지에는 기본 끌기 동작이 사용되는 경우가 있습니다. 여기에는 텍스트 선택, 이미지 및 링크가 포함됩니다. 이미지 또는 링크를 드래그하면 이미지 또는 링크의 URL이 드래그 데이터로 설정되고 드래그가 시작됩니다. 다른 요소의 경우 기본 드래그가 발생하도록 선택의 일부 여야합니다. 이 기능을 보려면 웹 페이지 영역을 선택한 다음 마우스를 클릭 한 채로 선택 영역을 드래그하십시오. 선택 항목의 OS 별 렌더링이 나타나고 드래그가 발생할 때 마우스 포인터를 따라갑니다. 그러나 리스너가 드래그 할 데이터를 조정하지 않으면이 동작은 기본 드래그 동작입니다.</target>
        </trans-unit>
        <trans-unit id="fc43be0e00e924dacd3bb06a355176e423ada085" translate="yes" xml:space="preserve">
          <source>Within site CSS</source>
          <target state="translated">사이트 CSS 내</target>
        </trans-unit>
        <trans-unit id="f493720c0b682bbd7dc9d44627e0f89f05f4be75" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; events, you can check the &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property to determine which effect was ultimately chosen. If the chosen effect were &quot;move&quot;, then the original data should be removed from the source of the drag within the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 이벤트 내에서 &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt; 속성을 확인하여 궁극적으로 선택된 효과를 확인할 수 있습니다 . 선택한 효과가 &quot;이동&quot;이면 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 이벤트 내에서 드래그 소스에서 원본 데이터를 제거해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1db54bc51e85b2de5417757bf5d36d3b98af01f1" translate="yes" xml:space="preserve">
          <source>Within the SVG DOM, a &amp;lt;coordinate&amp;gt; is represented as an &lt;a href=&quot;../svglength&quot;&gt;&lt;code&gt;SVGLength&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../svganimatedlength&quot;&gt;&lt;code&gt;SVGAnimatedLength&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">SVG DOM 내에서 &amp;lt;coordinate&amp;gt;는 &lt;a href=&quot;../svglength&quot;&gt; &lt;code&gt;SVGLength&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../svganimatedlength&quot;&gt; &lt;code&gt;SVGAnimatedLength&lt;/code&gt; &lt;/a&gt; 로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="7d1a551c3e917b6a767f7fe289128cc7bc7c6772" translate="yes" xml:space="preserve">
          <source>Within the WebVTT file itself</source>
          <target state="translated">WebVTT 파일 자체 내</target>
        </trans-unit>
        <trans-unit id="e22f62d4eb22532f66fdef12a14f0847c636b79a" translate="yes" xml:space="preserve">
          <source>Without any boundary collision testing our ball runs out of the canvas quickly. We need to check if the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; position of the ball is out of the canvas dimensions and invert the direction of the velocity vectors. To do so, we add the following checks to the &lt;code&gt;draw&lt;/code&gt; method:</source>
          <target state="translated">경계 충돌 테스트가 없으면 공이 캔버스 밖으로 빠르게 빠져 나옵니다. 볼 의 &lt;code&gt;x&lt;/code&gt; 와 &lt;code&gt;y&lt;/code&gt; 위치가 캔버스 크기를 벗어나 있는지 확인 하고 속도 벡터의 방향을 반전 시켜야합니다 . 그렇게하기 위해 &lt;code&gt;draw&lt;/code&gt; 메소드에 다음 검사를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="3e48fc16a05b9e5ec9cc58f341586b7b35b9759b" translate="yes" xml:space="preserve">
          <source>Workaround for event.newURL and event.oldURL</source>
          <target state="translated">event.newURL 및 event.oldURL에 대한 해결 방법</target>
        </trans-unit>
        <trans-unit id="97de39ae118b23bf5c7480efba0263d4b3523884" translate="yes" xml:space="preserve">
          <source>Workarounds</source>
          <target state="translated">Workarounds</target>
        </trans-unit>
        <trans-unit id="99edd8c8e615e373739d2cdd38a8942b8a573113" translate="yes" xml:space="preserve">
          <source>Worker</source>
          <target state="translated">Worker</target>
        </trans-unit>
        <trans-unit id="557ecc750b78133ef46c941190d2035f31c8e3ef" translate="yes" xml:space="preserve">
          <source>Worker Interface</source>
          <target state="translated">작업자 인터페이스</target>
        </trans-unit>
        <trans-unit id="45f351551597f42a738de45d92186592bc96c2cb" translate="yes" xml:space="preserve">
          <source>Worker code</source>
          <target state="translated">작업자 코드</target>
        </trans-unit>
        <trans-unit id="444702735f0fed9f8b96bd9c9c1a013dd2c0cf03" translate="yes" xml:space="preserve">
          <source>Worker context</source>
          <target state="translated">작업자 컨텍스트</target>
        </trans-unit>
        <trans-unit id="27e5d7b86605ca1f916eb4c434ac66638402dfec" translate="yes" xml:space="preserve">
          <source>Worker feature detection</source>
          <target state="translated">작업자 기능 감지</target>
        </trans-unit>
        <trans-unit id="2817f9e4b4c7c7d617bb714ffa668284ae432a2b" translate="yes" xml:space="preserve">
          <source>Worker threads have access to a global function, &lt;code&gt;importScripts()&lt;/code&gt;, which lets them import scripts. It accepts zero or more URIs as parameters to resources to import; all of the following examples are valid:</source>
          <target state="translated">작업자 스레드는 전역 함수 &lt;code&gt;importScripts()&lt;/code&gt; 액세스하여 스크립트를 가져올 수 있습니다. 가져올 자원에 대한 매개 변수로 0 개 이상의 URI를 허용합니다. 다음 예제는 모두 유효합니다.</target>
        </trans-unit>
        <trans-unit id="7fcbf383d375a68e192d36f72dd2a7d644226b70" translate="yes" xml:space="preserve">
          <source>Worker.constructor</source>
          <target state="translated">Worker.constructor</target>
        </trans-unit>
        <trans-unit id="4cb08f8fcfe7ed6a88e084a618784110212fa831" translate="yes" xml:space="preserve">
          <source>Worker.onmessage</source>
          <target state="translated">Worker.onmessage</target>
        </trans-unit>
        <trans-unit id="bdca11fd9765dd33362e4e00434a69f88eefba00" translate="yes" xml:space="preserve">
          <source>Worker.onmessageerror</source>
          <target state="translated">Worker.onmessageerror</target>
        </trans-unit>
        <trans-unit id="c683d0df6a04846df93f030586bbc6677b85a85b" translate="yes" xml:space="preserve">
          <source>Worker.postMessage</source>
          <target state="translated">Worker.postMessage</target>
        </trans-unit>
        <trans-unit id="8d6799029efbbf3fd6883f5e6028ef4f7fb3c461" translate="yes" xml:space="preserve">
          <source>Worker.terminate</source>
          <target state="translated">Worker.terminate</target>
        </trans-unit>
        <trans-unit id="958d8e26e3b98c62cdd72e1f83e755dbf3211860" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope</source>
          <target state="translated">WorkerGlobalScope</target>
        </trans-unit>
        <trans-unit id="db121ff82e01165cc9576f7795aa88da975f66d1" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.importScripts</source>
          <target state="translated">WorkerGlobalScope.importScripts</target>
        </trans-unit>
        <trans-unit id="f6831b001a4cf6b39302eb0fcf3acea67134ff9a" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.location</source>
          <target state="translated">WorkerGlobalScope.location</target>
        </trans-unit>
        <trans-unit id="b1db2dc6f0b0033fceee51aa503e72d4920f6fa2" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.navigator</source>
          <target state="translated">WorkerGlobalScope.navigator</target>
        </trans-unit>
        <trans-unit id="e1a576f4e0b3ba4e6a55bfb7ff67483fc54ed716" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.onclose</source>
          <target state="translated">WorkerGlobalScope.onclose</target>
        </trans-unit>
        <trans-unit id="95d483e3ff45af7d10447ed80ad2ba199c13f06d" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.onerror</source>
          <target state="translated">WorkerGlobalScope.onerror</target>
        </trans-unit>
        <trans-unit id="5515d9288bba6547d8d55d05cf323a85411e5a85" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.onlanguagechange</source>
          <target state="translated">WorkerGlobalScope.onlanguagechange</target>
        </trans-unit>
        <trans-unit id="4483f2487bbc8bb7f126184a5652ac4f8058eb7c" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.onoffline</source>
          <target state="translated">WorkerGlobalScope.onoffline</target>
        </trans-unit>
        <trans-unit id="170c26198a9da8fca9fda3571dc105dc352da134" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.ononline</source>
          <target state="translated">WorkerGlobalScope.ononline</target>
        </trans-unit>
        <trans-unit id="2a557663b947a7e390e61d6222fe7a95a5383d6e" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.performance</source>
          <target state="translated">WorkerGlobalScope.performance</target>
        </trans-unit>
        <trans-unit id="0306d4b19bdff06aa9f87c973cfd2a1e15facbcd" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.self</source>
          <target state="translated">WorkerGlobalScope.self</target>
        </trans-unit>
        <trans-unit id="74a0d635bad8cb921832f022e80f37a47e5b135d" translate="yes" xml:space="preserve">
          <source>WorkerLocation</source>
          <target state="translated">WorkerLocation</target>
        </trans-unit>
        <trans-unit id="315e6d0000af41369aa07e54a100988d3fd17dee" translate="yes" xml:space="preserve">
          <source>WorkerNavigator</source>
          <target state="translated">WorkerNavigator</target>
        </trans-unit>
        <trans-unit id="e5fe3477ef2e6d808558d970bc78565c8048db91" translate="yes" xml:space="preserve">
          <source>WorkerNavigator.connection</source>
          <target state="translated">WorkerNavigator.connection</target>
        </trans-unit>
        <trans-unit id="16145348d388cbf26ca66f7579a2ec82840071f0" translate="yes" xml:space="preserve">
          <source>WorkerNavigator.locks</source>
          <target state="translated">WorkerNavigator.locks</target>
        </trans-unit>
        <trans-unit id="ee5a9e6beb452533d5f36a9d23c50fb23b5809da" translate="yes" xml:space="preserve">
          <source>WorkerNavigator.permissions</source>
          <target state="translated">WorkerNavigator.permissions</target>
        </trans-unit>
        <trans-unit id="74dcc4d991545e8d02f0deeddbddf70e41880ee6" translate="yes" xml:space="preserve">
          <source>WorkerNavigator.sendBeacon()</source>
          <target state="translated">WorkerNavigator.sendBeacon()</target>
        </trans-unit>
        <trans-unit id="b6ef3acd0f91c0c6e2a6bad2692c8aa84dfc4c73" translate="yes" xml:space="preserve">
          <source>Workers</source>
          <target state="translated">Workers</target>
        </trans-unit>
        <trans-unit id="92e96706f9c71190a5f854fa3bb63763988bbf36" translate="yes" xml:space="preserve">
          <source>Workers are considered to have their own execution context, distinct from the document that created them. For this reason they are, in general, not governed by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_Security_Policy&quot;&gt;content security policy&lt;/a&gt; of the document (or parent worker) that created them. So for example, suppose a document is served with the following header:</source>
          <target state="translated">작업자는 자신을 만든 문서와는 달리 고유 한 실행 컨텍스트를 갖는 것으로 간주됩니다. 이러한 이유로 인해 일반적으로 문서를 만든 문서 (또는 상위 작업자) 의 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_Security_Policy&quot;&gt;콘텐츠 보안 정책&lt;/a&gt; 이 적용되지 않습니다 . 예를 들어, 문서가 다음 헤더와 함께 제공된다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="e0faa61746d2dc83992776547c3a106ba44e5fd4" translate="yes" xml:space="preserve">
          <source>Workers are mainly useful for allowing your code to perform processor-intensive calculations without blocking the user interface thread. In this example, a worker is used to calculate Fibonacci numbers.</source>
          <target state="translated">작업자는 주로 코드가 사용자 인터페이스 스레드를 차단하지 않고 프로세서 집약적 인 계산을 수행 할 수 있도록하는 데 유용합니다. 이 예에서 작업자는 피보나치 수를 계산하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6de8a4ef2fd42f731bc7d4aba330b604b8dbf94e" translate="yes" xml:space="preserve">
          <source>Workers can also create a new URL using the &lt;a href=&quot;../url/url&quot;&gt;&lt;code&gt;URL()&lt;/code&gt;&lt;/a&gt; constructor and call any normal method on the returned object.</source>
          <target state="translated">작업자는 &lt;a href=&quot;../url/url&quot;&gt; &lt;code&gt;URL()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 새 URL을 만들고 반환 된 객체에서 일반 메서드를 호출 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bbc0cd62c963e533e26d418859faf51d471ed093" translate="yes" xml:space="preserve">
          <source>Workers can use the static methods &lt;a href=&quot;../url/createobjecturl&quot;&gt;URL.createObjectURL&lt;/a&gt; and &lt;a href=&quot;../url/revokeobjecturl&quot;&gt;URL.revokeObjectURL&lt;/a&gt; with &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; objects accesible to the worker.</source>
          <target state="translated">작업자는 작업자가 액세스 할 수있는 &lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt; 객체 와 함께 정적 메서드 &lt;a href=&quot;../url/createobjecturl&quot;&gt;URL.createObjectURL&lt;/a&gt; 및 &lt;a href=&quot;../url/revokeobjecturl&quot;&gt;URL.revokeObjectURL&lt;/a&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ee8e17f609e5a3529e298faa3430175587745eb" translate="yes" xml:space="preserve">
          <source>Workers may in turn spawn new workers as long as those workers are hosted within the same &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;origin&lt;/a&gt; as the parent page (Note: nested workers are &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=22723&quot;&gt;currently not implemented in WebKit&lt;/a&gt;). In addition workers may use &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; for network I/O, with the stipulation that the &lt;code&gt;responseXML&lt;/code&gt; and &lt;code&gt;channel&lt;/code&gt; attributes on &lt;code&gt;XMLHttpRequest&lt;/code&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">작업자는 부모 페이지 와 동일한 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;출처&lt;/a&gt; 내에 호스트되는 한 새로운 작업자를 생성 할 수 있습니다 (참고 : 중첩 된 작업자는 &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=22723&quot;&gt;현재 WebKit에서 구현되지 않습니다&lt;/a&gt; ). 또한 근로자가 사용할 수 있습니다 &lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; 의&lt;/a&gt; 하는 규정으로, 네트워크 I / O에 대한 &lt;code&gt;responseXML&lt;/code&gt; 및 &lt;code&gt;channel&lt;/code&gt; 의 특성 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 를 항상 반환 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74cee3adf91cebc05c18c7b9063880a5b0b27ca0" translate="yes" xml:space="preserve">
          <source>Workers may in turn spawn new workers, as long as those workers are hosted within the same origin as the parent page. In addition, workers may use &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; for network I/O, with the exception that the &lt;code&gt;responseXML&lt;/code&gt; and &lt;code&gt;channel&lt;/code&gt; attributes on &lt;code&gt;XMLHttpRequest&lt;/code&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">근로자가 부모 페이지와 동일한 출처 내에서 호스트되는 한 근로자는 새로운 근로자를 생성 할 수 있습니다. 또한, 근로자가 사용할 수 있습니다 &lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; 의&lt;/a&gt; 것을 제외하고, 네트워크 I / O에 대한 &lt;code&gt;responseXML&lt;/code&gt; 및 &lt;code&gt;channel&lt;/code&gt; 의 특성 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 를 항상 반환 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6e654449b2757a4fb08da980d01570baa564b70c" translate="yes" xml:space="preserve">
          <source>Workers may spawn more workers if they wish. So-called sub-workers must be hosted within the same origin as the parent page. Also, the URIs for subworkers are resolved relative to the parent worker's location rather than that of the owning page. This makes it easier for workers to keep track of where their dependencies are.</source>
          <target state="translated">원한다면 더 많은 근로자를 스폰 할 수 있습니다. 소위 하위 근로자는 상위 페이지와 동일한 출처 내에서 호스팅되어야합니다. 또한 하위 작업자의 URI는 소유 페이지의 위치가 아닌 상위 작업자의 위치를 ​​기준으로 확인됩니다. 따라서 작업자가 종속성의 위치를 ​​쉽게 추적 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d5c4ce1a26a6e586b1bdb77deaef520b5287f1fd" translate="yes" xml:space="preserve">
          <source>Workers may, in turn, spawn new workers, as long as those workers are hosted within the same origin as the parent page. In addition, workers may use &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; for network I/O, with the exception that the &lt;code&gt;responseXML&lt;/code&gt; and &lt;code&gt;channel&lt;/code&gt; attributes on &lt;code&gt;XMLHttpRequest&lt;/code&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">근로자는 부모 페이지와 동일한 원산지 내에 호스트되는 한 새로운 근로자를 생성 할 수 있습니다. 또한, 근로자가 사용할 수 있습니다 &lt;a href=&quot;../xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; 의&lt;/a&gt; 것을 제외하고, 네트워크 I / O에 대한 &lt;code&gt;responseXML&lt;/code&gt; 및 &lt;code&gt;channel&lt;/code&gt; 의 특성 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 를 항상 반환 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dd81953275e4c603fc6e296163f16395c6ee5da7" translate="yes" xml:space="preserve">
          <source>Working Draft</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d5132306a8d60e8bca8cc47a924e629d79ce94" translate="yes" xml:space="preserve">
          <source>Working with extensions</source>
          <target state="translated">확장 작업</target>
        </trans-unit>
        <trans-unit id="3f431c547b0c92488c93507145ba5204b4cd4f9a" translate="yes" xml:space="preserve">
          <source>Working with windows in chrome code</source>
          <target state="translated">크롬 코드에서 윈도우 작업</target>
        </trans-unit>
        <trans-unit id="9a228d880b9910b61ce9bd91c7b7b322839414e9" translate="yes" xml:space="preserve">
          <source>Worklet</source>
          <target state="translated">Worklet</target>
        </trans-unit>
        <trans-unit id="3b5f27aab06de1e65689543feb5bb98725bd1b5d" translate="yes" xml:space="preserve">
          <source>Worklet types</source>
          <target state="translated">워크 릿 유형</target>
        </trans-unit>
        <trans-unit id="bea772fca721f599a72e792fcae363af6b27f58a" translate="yes" xml:space="preserve">
          <source>Worklet.addModule</source>
          <target state="translated">Worklet.addModule</target>
        </trans-unit>
        <trans-unit id="a04589c9de7934ee0efbd0faf239f57f555e123d" translate="yes" xml:space="preserve">
          <source>Worklets Level 1&lt;br/&gt;&lt;small&gt;The definition of 'Worklet' in that specification.&lt;/small&gt;</source>
          <target state="translated">Worklets Level 1 &lt;br/&gt;&lt;small&gt;해당 사양에서 'Worklet'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d8e39a843fe2d3c37723b93c44e39e568b5f3fee" translate="yes" xml:space="preserve">
          <source>Worklets Level 1&lt;br/&gt;&lt;small&gt;The definition of 'addModule()' in that specification.&lt;/small&gt;</source>
          <target state="translated">Worklets Level 1 &lt;br/&gt;&lt;small&gt;해당 사양에서 'addModule ()'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1bdb94b6fa73b2bf71f07b2f00f3356bf3d0cd13" translate="yes" xml:space="preserve">
          <source>Worklets are restricted to specific use cases; they cannot be used for arbitrary computations like Web Workers. The &lt;code&gt;Worklet&lt;/code&gt; interface abstracts properties and methods common to all kind of worklets, and cannot be created directly. Instead, you can use one of the following classes:</source>
          <target state="translated">워크 릿은 특정 사용 사례로 제한됩니다. 웹 워커와 같은 임의의 계산에는 사용할 수 없습니다. &lt;code&gt;Worklet&lt;/code&gt; 의 인터페이스는 worklets의 모든 종류의 속성과 메소드 일반을 추상화, 직접 만들 수 없습니다. 대신 다음 클래스 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f57fa8de020173285d4a3296513c8975f36ae41" translate="yes" xml:space="preserve">
          <source>Wrapping function for texture coordinate &lt;code&gt;r&lt;/code&gt;</source>
          <target state="translated">텍스처 좌표 &lt;code&gt;r&lt;/code&gt; 의 랩핑 기능</target>
        </trans-unit>
        <trans-unit id="b85e9fbd902ae93fc7384ea883cf75e2df7fd24e" translate="yes" xml:space="preserve">
          <source>Wrapping function for texture coordinate &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">텍스처 좌표에 대한 포장 기능 &lt;code&gt;s&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6511461a8f068e6307d98b1791e151f29af62ed9" translate="yes" xml:space="preserve">
          <source>Wrapping function for texture coordinate &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">텍스처 좌표 &lt;code&gt;t&lt;/code&gt; 에 대한 랩핑 기능</target>
        </trans-unit>
        <trans-unit id="4d77822dc5b91ca9ef4c744ff10647ed567f0c23" translate="yes" xml:space="preserve">
          <source>Wrapping up the startup() method</source>
          <target state="translated">startup () 메소드 마무리</target>
        </trans-unit>
        <trans-unit id="86793abc57b7f140d05eafeb0e1a06f397559249" translate="yes" xml:space="preserve">
          <source>Writable streams</source>
          <target state="translated">쓰기 가능한 스트림</target>
        </trans-unit>
        <trans-unit id="cb1b8b7b4f6fe87b5560f6db7162aa9f8346d70f" translate="yes" xml:space="preserve">
          <source>WritableStream</source>
          <target state="translated">WritableStream</target>
        </trans-unit>
        <trans-unit id="d3da910dd66c5fbf6bc164bbb7e033ca3b00264d" translate="yes" xml:space="preserve">
          <source>WritableStream.abort</source>
          <target state="translated">WritableStream.abort</target>
        </trans-unit>
        <trans-unit id="5da357be5a24fb338c3c3656fc0d9e834e00cddf" translate="yes" xml:space="preserve">
          <source>WritableStream.constructor</source>
          <target state="translated">WritableStream.constructor</target>
        </trans-unit>
        <trans-unit id="257cc5b9714e97c085901c1434a3eb460f507fc2" translate="yes" xml:space="preserve">
          <source>WritableStream.getWriter</source>
          <target state="translated">WritableStream.getWriter</target>
        </trans-unit>
        <trans-unit id="f028b8f923b52c93fb6b368ce8826ad1c383f7b5" translate="yes" xml:space="preserve">
          <source>WritableStream.locked</source>
          <target state="translated">WritableStream.locked</target>
        </trans-unit>
        <trans-unit id="db95ad84de234c815c23a48ef5f26dbbb569c6e6" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultController</source>
          <target state="translated">WritableStreamDefaultController</target>
        </trans-unit>
        <trans-unit id="ab0bc77d85967d53533c5d405c67eaa9da0762f9" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultController.constructor</source>
          <target state="translated">WritableStreamDefaultController.constructor</target>
        </trans-unit>
        <trans-unit id="1481613ed0eb266f7b0325e8db8cce5e36c19680" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultController.error</source>
          <target state="translated">WritableStreamDefaultController.error</target>
        </trans-unit>
        <trans-unit id="adb31476b8ab736ad37b323dc9b1bbba778122ca" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter</source>
          <target state="translated">WritableStreamDefaultWriter</target>
        </trans-unit>
        <trans-unit id="2baea71edd8514732824138dc1ba8c850eabae62" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.abort</source>
          <target state="translated">WritableStreamDefaultWriter.abort</target>
        </trans-unit>
        <trans-unit id="3195b8588306a7d1edf2e3573482c99902105917" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.close</source>
          <target state="translated">WritableStreamDefaultWriter.close</target>
        </trans-unit>
        <trans-unit id="373e63f5b29bdecdd6fa0d85622dba3930738807" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.closed</source>
          <target state="translated">WritableStreamDefaultWriter.closed</target>
        </trans-unit>
        <trans-unit id="49eca0322e57a91dcf7dc4612ac48cb31bb59265" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.constructor</source>
          <target state="translated">WritableStreamDefaultWriter.constructor</target>
        </trans-unit>
        <trans-unit id="8d5ec6fc733e411c6c35c8805d317d62d645fffb" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.desiredSize</source>
          <target state="translated">WritableStreamDefaultWriter.desiredSize</target>
        </trans-unit>
        <trans-unit id="bf49714da5a0ec81048719f0cd0bb9ad9ddc10bc" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.ready</source>
          <target state="translated">WritableStreamDefaultWriter.ready</target>
        </trans-unit>
        <trans-unit id="6792498dd73efaea90088575539b26425017a2c7" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.releaseLock</source>
          <target state="translated">WritableStreamDefaultWriter.releaseLock</target>
        </trans-unit>
        <trans-unit id="7da63f57b4561f0763d871ef19418a85b416780c" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.write</source>
          <target state="translated">WritableStreamDefaultWriter.write</target>
        </trans-unit>
        <trans-unit id="e04761e13f10b5a90ad2cb289d4340d058b4756e" translate="yes" xml:space="preserve">
          <source>Write a new cookie</source>
          <target state="translated">새로운 쿠키를 작성</target>
        </trans-unit>
        <trans-unit id="55543e48cc6534225c5388e5104b3f8151d092bb" translate="yes" xml:space="preserve">
          <source>Write it back as value of &lt;em&gt;Sec-WebSocket-Accept&lt;/em&gt; response header as part of a HTTP response.</source>
          <target state="translated">HTTP 응답의 일부로 &lt;em&gt;Sec-WebSocket-Accept&lt;/em&gt; 응답 헤더의 값으로 다시 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="57369ff3e4f8ea463d1b55fdfacdc12457bb0376" translate="yes" xml:space="preserve">
          <source>Write the hash back as the value of &quot;Sec-WebSocket-Accept&quot; response header in an HTTP response</source>
          <target state="translated">HTTP 응답에서 &quot;Sec-WebSocket-Accept&quot;응답 헤더 값으로 해시를 다시 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="3931405017ef076792278ee97d7bcbdce21ddc10" translate="yes" xml:space="preserve">
          <source>Write your code, using WebRTC APIs per the specification, knowing that your code should work on all browsers.</source>
          <target state="translated">사양에 따라 WebRTC API를 사용하여 코드가 모든 브라우저에서 작동해야한다는 것을 알고 코드를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="c49376792985d1b88974dcb9ae087990ee557acf" translate="yes" xml:space="preserve">
          <source>Write your own code to negotiate the data transport and write your own code to signal to the other peer that it needs to connect to the new channel.</source>
          <target state="translated">데이터 전송을 협상하기 위해 자신의 코드를 작성하고 새로운 채널에 연결해야한다는 다른 피어에게 신호를 보내기 위해 자신의 코드를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="e18520123476873237d468e57f57ef6713062042" translate="yes" xml:space="preserve">
          <source>Writes &lt;em&gt;&lt;code&gt;len&lt;/code&gt;&lt;/em&gt; bytes from the specified byte array starting at offset &lt;em&gt;&lt;code&gt;off&lt;/code&gt;&lt;/em&gt; to this output stream.</source>
          <target state="translated">오프셋 &lt;em&gt; &lt;code&gt;off&lt;/code&gt; &lt;/em&gt; 에서 시작하여 지정된 바이트 배열에서 &lt;em&gt; &lt;code&gt;len&lt;/code&gt; &lt;/em&gt; 바이트 를이 출력 스트림에 씁니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e199aae15f0ab86109c1df2c22b120e8d8b4c7cb" translate="yes" xml:space="preserve">
          <source>Writes a line of text in a document.</source>
          <target state="translated">문서에 한 줄의 텍스트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="21e4b0d93e1e251813913ab939b119fed73858af" translate="yes" xml:space="preserve">
          <source>Writes a message to the console.</source>
          <target state="translated">콘솔에 메시지를 씁니다.</target>
        </trans-unit>
        <trans-unit id="947e9228b06c46f157db71cd1d04fc4bbfc5867f" translate="yes" xml:space="preserve">
          <source>Writes a passed chunk of data to a &lt;a href=&quot;writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt; and its underlying sink, then returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to indicate the success or failure of the write operation.</source>
          <target state="translated">전달 된 데이터 청크를 &lt;a href=&quot;writablestream&quot;&gt; &lt;code&gt;WritableStream&lt;/code&gt; &lt;/a&gt; 및 해당 기본 싱크 에 쓴 다음 쓰기 작업의 성공 또는 실패를 나타내도록 해결 되는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="00253bf1b5322cad1ae84c2c63a59b81232f9bde" translate="yes" xml:space="preserve">
          <source>Writes a string of text followed by a newline character to a document.</source>
          <target state="translated">문서에 줄 바꿈 문자와 함께 문자열을 씁니다.</target>
        </trans-unit>
        <trans-unit id="4cbc4a9a3fc44dfe4b8664ba2f2e541da673c3eb" translate="yes" xml:space="preserve">
          <source>Writes an error message to the console if the assertion is false. If the assertion is true, nothing happens.</source>
          <target state="translated">어설 션이 false 인 경우 콘솔에 오류 메시지를 씁니다. 어설 션이 true이면 아무 일도 일어나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5b9d47ac2bdaa06766816480f2210af557454a7c" translate="yes" xml:space="preserve">
          <source>Writes arbitrary data to the system clipboard. This asynchronous operation signals that it's finished by resolving the returned &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="translated">시스템 클립 보드에 임의의 데이터를 씁니다. 이 비동기 작업은 반환 된 &lt;code&gt;Promise&lt;/code&gt; 를 해결하여 작업이 완료되었음을 나타 냅니다.</target>
        </trans-unit>
        <trans-unit id="9b8960f32b77e4309090e69ebd8bcf8716bfcb95" translate="yes" xml:space="preserve">
          <source>Writes audio into the stream at the current offset. Returns the number of bytes actually written to the stream.</source>
          <target state="translated">현재 오프셋에서 스트림에 오디오를 씁니다. 실제로 스트림에 쓴 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="af189bf4e8f78eeda4d7eb768cffb60dedbf06fc" translate="yes" xml:space="preserve">
          <source>Writes bytes from buffer, offset and size determine length of message.</source>
          <target state="translated">버퍼에서 바이트를 쓰고, 오프셋 및 크기에 따라 메시지 길이가 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="894fd94d264b246782aeb91490b3f4931370f6ec" translate="yes" xml:space="preserve">
          <source>Writes text in a document.</source>
          <target state="translated">문서에 텍스트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="e63dfb4f590be37465a41f92795c3a28f4596df0" translate="yes" xml:space="preserve">
          <source>Writes text to the system clipboard, returning a &lt;code&gt;Promise&lt;/code&gt; which is resolved once the text is fully copied into the clipboard.</source>
          <target state="translated">텍스트를 시스템 클립 보드에 기록 하고 텍스트가 클립 보드에 완전히 복사되면 해결 되는 &lt;code&gt;Promise&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2dabb8334b6cbbc19635a160f00032f11eeb9962" translate="yes" xml:space="preserve">
          <source>Writing</source>
          <target state="translated">Writing</target>
        </trans-unit>
        <trans-unit id="75cb81f5d9005409ce4dbeb3d073ae62b20017a8" translate="yes" xml:space="preserve">
          <source>Writing CSS Animations with the Web Animations API</source>
          <target state="translated">웹 애니메이션 API를 사용하여 CSS 애니메이션 작성</target>
        </trans-unit>
        <trans-unit id="7bd31533c664cad6c1d5c8b4117b72230f799269" translate="yes" xml:space="preserve">
          <source>Writing Web Audio API code that works in every browser</source>
          <target state="translated">모든 브라우저에서 작동하는 Web Audio API 코드 작성</target>
        </trans-unit>
        <trans-unit id="06265c3a1b120d66a122daab42a58ce9893ce343" translate="yes" xml:space="preserve">
          <source>Writing WebSocket client applications</source>
          <target state="translated">WebSocket 클라이언트 애플리케이션 작성</target>
        </trans-unit>
        <trans-unit id="ec42012e65f141dfe4b612d0198c10447264de4e" translate="yes" xml:space="preserve">
          <source>Writing WebSocket servers</source>
          <target state="translated">WebSocket 서버 작성</target>
        </trans-unit>
        <trans-unit id="c53f56645448ed404ea76f0eb89de92b15cce24b" translate="yes" xml:space="preserve">
          <source>Writing to a document that has already loaded without calling &lt;a href=&quot;open&quot;&gt;&lt;code&gt;document.open()&lt;/code&gt;&lt;/a&gt; will automatically call &lt;code&gt;document.open&lt;/code&gt;. Once you have finished writing, it is recommended to call &lt;a href=&quot;close&quot;&gt;&lt;code&gt;document.close()&lt;/code&gt;&lt;/a&gt; to tell the browser to finish loading the page. The text you write is parsed into the document's structure model. In the example above, the &lt;code&gt;h1&lt;/code&gt; element becomes a node in the document.</source>
          <target state="translated">&lt;a href=&quot;open&quot;&gt; &lt;code&gt;document.open()&lt;/code&gt; &lt;/a&gt; 을 호출하지 않고 이미로드 된 문서에 쓰면 자동으로 &lt;code&gt;document.open&lt;/code&gt; 이 호출됩니다 . 쓰기가 끝나면 &lt;a href=&quot;close&quot;&gt; &lt;code&gt;document.close()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 브라우저에 페이지로드를 완료 하도록 지시하는 것이 좋습니다 . 작성한 텍스트가 문서의 구조 모델로 구문 분석됩니다. 위의 예에서 &lt;code&gt;h1&lt;/code&gt; 요소는 문서의 노드가됩니다.</target>
        </trans-unit>
        <trans-unit id="45786e1c7f1ba36f6f3fa162ec9adc900dd40a60" translate="yes" xml:space="preserve">
          <source>Writing to the clipboard is available without permission in secure contexts and browser extensions, but only from user-initiated event callbacks. Browser extensions with the &lt;code&gt;&quot;clipboardWrite&quot;&lt;/code&gt; permission can write to the clipboard at any time.</source>
          <target state="translated">안전한 컨텍스트 및 브라우저 확장 프로그램에서 권한없이 클립 보드에 쓸 수 있지만 사용자가 시작한 이벤트 콜백에서만 가능합니다. &lt;code&gt;&quot;clipboardWrite&quot;&lt;/code&gt; 권한 이있는 브라우저 확장 프로그램 은 언제든지 클립 보드에 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="c484f501ad8135e8cfa50666eb037c60fb38009d" translate="yes" xml:space="preserve">
          <source>X = Vx * sin(&amp;theta;/2)</source>
          <target state="translated">X = Vx * sin (&amp;theta; / 2)</target>
        </trans-unit>
        <trans-unit id="1e01cba2f6638d438d27938366658f92af3051eb" translate="yes" xml:space="preserve">
          <source>X1 (back) Mouse</source>
          <target state="translated">X1 (뒤) 마우스</target>
        </trans-unit>
        <trans-unit id="237d1efafbc3e2759b36d1a298cdc97f81476996" translate="yes" xml:space="preserve">
          <source>X2 (forward) Mouse</source>
          <target state="translated">X2 (앞으로) 마우스</target>
        </trans-unit>
        <trans-unit id="97e0a00fd8dc25a78eb8ea7c949d7d4e9c3f8c40" translate="yes" xml:space="preserve">
          <source>XDomain</source>
          <target state="translated">XDomain</target>
        </trans-unit>
        <trans-unit id="855e3d169b349a14867ed875f329653292225aef" translate="yes" xml:space="preserve">
          <source>XHR</source>
          <target state="translated">XHR</target>
        </trans-unit>
        <trans-unit id="14df91620c76417e3eabf9c3fc67337392f4a971" translate="yes" xml:space="preserve">
          <source>XHR in Android 4.0 sends empty content for &lt;code&gt;FormData&lt;/code&gt; with &lt;code&gt;blob&lt;/code&gt;.</source>
          <target state="translated">Android 4.0의 XHR은 &lt;code&gt;blob&lt;/code&gt; 과 함께 &lt;code&gt;FormData&lt;/code&gt; 에 빈 내용을 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="translated">XML</target>
        </trans-unit>
        <trans-unit id="f48015ce22da2cb62dc55092e9e541944096e051" translate="yes" xml:space="preserve">
          <source>XML content may use the &lt;code&gt;text/xml&lt;/code&gt; type, but you should ensure that the data value is well-formed XML.</source>
          <target state="translated">XML 컨텐츠는 &lt;code&gt;text/xml&lt;/code&gt; 유형을 사용할 수 있지만 데이터 값이 올바른 형식인지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="cbfb5e9da4d4e953346b880559ac2756d402c79d" translate="yes" xml:space="preserve">
          <source>XMLHTTPRequest</source>
          <target state="translated">XMLHTTPRequest</target>
        </trans-unit>
        <trans-unit id="1a1dc754a10525066d7d47c74e38c2ea14cb7e3f" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest</source>
          <target state="translated">XMLHttpRequest</target>
        </trans-unit>
        <trans-unit id="9c7ac98c5678de235355b246629689d55756876e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest - REST and the Rich User Experience</source>
          <target state="translated">XMLHttpRequest-REST 및 풍부한 사용자 경험</target>
        </trans-unit>
        <trans-unit id="d48537600e415d0b70f2c0c7986f879ac4ce3d8f" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.HTML in XMLHttpRequest</source>
          <target state="translated">XMLHttpRequest의 XMLHttpRequest.HTML</target>
        </trans-unit>
        <trans-unit id="184713aba0b06a3ef26cdf2cb1845a34d124e9c4" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.Synchronous and Asynchronous Requests</source>
          <target state="translated">XMLHttpRequest. 동기 및 비동기 요청</target>
        </trans-unit>
        <trans-unit id="58c9e1ac412a8a9fd10ae2678a48305d78262c19" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.Using XMLHttpRequest</source>
          <target state="translated">XMLHttpRequest. XMLHttpRequest 사용</target>
        </trans-unit>
        <trans-unit id="1e13e5f7185280de648b1bba241ab7dd98343fd9" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.abort</source>
          <target state="translated">XMLHttpRequest.abort</target>
        </trans-unit>
        <trans-unit id="8ade0ba8152baaa16000d1e18549499ac95853c1" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.channel</source>
          <target state="translated">XMLHttpRequest.channel</target>
        </trans-unit>
        <trans-unit id="955808f3ce72fee7425e29ce5ea98a4893fb1439" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.channel is an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIChannel&quot;&gt;nsIChannel&lt;/a&gt;&lt;/code&gt; that used by the object when performing the request. This is &lt;code&gt;null&lt;/code&gt; if the channel hasn't been created yet. In the case of a multi-part request, this is the initial channel, not the different parts in the multi-part request. &lt;strong&gt;Requires elevated privileges to access.&lt;/strong&gt;</source>
          <target state="translated">XMLHttpRequest.channel은 요청을 수행 할 때 개체가 사용 하는 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIChannel&quot;&gt;nsIChannel&lt;/a&gt;&lt;/code&gt; 입니다. 이다 &lt;code&gt;null&lt;/code&gt; 채널이 아직 생성되지 않은 경우. 멀티 파트 요청의 경우 멀티 파트 요청의 다른 파트가 아닌 초기 채널입니다. &lt;strong&gt;액세스하려면 높은 권한이 필요합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4de8f0cc699497a6e084c092f6a12589ab5e0ab1" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.getAllResponseHeaders</source>
          <target state="translated">XMLHttpRequest.getAllResponseHeaders</target>
        </trans-unit>
        <trans-unit id="ec6d6ea9ea7be9bb9fb3e2e596160ae59226845b" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.getResponseHeader</source>
          <target state="translated">XMLHttpRequest.getResponseHeader</target>
        </trans-unit>
        <trans-unit id="6a5ac3629b02948e0cbd31a9d356489be0d62208" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.init()</source>
          <target state="translated">XMLHttpRequest.init()</target>
        </trans-unit>
        <trans-unit id="e11ff8fe84349a0536b8ebea8e77eac02b3005f9" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.onreadystatechange</source>
          <target state="translated">XMLHttpRequest.onreadystatechange</target>
        </trans-unit>
        <trans-unit id="e885975abc209b2f1ced9f1478719dfdb114b4ac" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.open</source>
          <target state="translated">XMLHttpRequest.open</target>
        </trans-unit>
        <trans-unit id="9d89f2fe7c8fdaed4a1559a738c82167bcb1baf7" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.openRequest()</source>
          <target state="translated">XMLHttpRequest.openRequest()</target>
        </trans-unit>
        <trans-unit id="403e8e5fd1686f5ac44560f3d25a44ad18d1b426" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.overrideMimeType</source>
          <target state="translated">XMLHttpRequest.overrideMimeType</target>
        </trans-unit>
        <trans-unit id="94e03029629a1a9f2efe6846d4342a49ea5447f7" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.readyState</source>
          <target state="translated">XMLHttpRequest.readyState</target>
        </trans-unit>
        <trans-unit id="44aaffbcc2d83cf89c6d27cc6dc61baa7ea0760e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.response</source>
          <target state="translated">XMLHttpRequest.response</target>
        </trans-unit>
        <trans-unit id="e0d968fc57686669b874e373617f99a5a935bef5" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.responseText</source>
          <target state="translated">XMLHttpRequest.responseText</target>
        </trans-unit>
        <trans-unit id="6a076eabfc4893fca4a5829fff2a9a3ffcb690f5" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.responseType</source>
          <target state="translated">XMLHttpRequest.responseType</target>
        </trans-unit>
        <trans-unit id="57ceb2818770474b8c62e768fe7f9db2828f2b56" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.responseURL</source>
          <target state="translated">XMLHttpRequest.responseURL</target>
        </trans-unit>
        <trans-unit id="8a1fae050423115e14607649d39e0caf9994a103" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.responseXML</source>
          <target state="translated">XMLHttpRequest.responseXML</target>
        </trans-unit>
        <trans-unit id="dd18743e28f021ed90fe5737b195efda13dc49ee" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.send</source>
          <target state="translated">XMLHttpRequest.send</target>
        </trans-unit>
        <trans-unit id="786937ed1c59de4db64b2a8f1a989c907ba3f1e6" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.sendAsBinary</source>
          <target state="translated">XMLHttpRequest.sendAsBinary</target>
        </trans-unit>
        <trans-unit id="24cf61a93bec456d364b4b240abe412fdea1243f" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.setRequestHeader</source>
          <target state="translated">XMLHttpRequest.setRequestHeader</target>
        </trans-unit>
        <trans-unit id="4e6e73c0f575d9568da304e1e26216f373c2661d" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.status</source>
          <target state="translated">XMLHttpRequest.status</target>
        </trans-unit>
        <trans-unit id="b5e4dd6c7e3d308c66492ffaa4033d54e5888852" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.statusText</source>
          <target state="translated">XMLHttpRequest.statusText</target>
        </trans-unit>
        <trans-unit id="f74cae9e57479e3b5b01d1766334502a7000f9b4" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.timeout</source>
          <target state="translated">XMLHttpRequest.timeout</target>
        </trans-unit>
        <trans-unit id="49a6b171f9a873d7d116fe84d4fbbe8e5c47060d" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.upload</source>
          <target state="translated">XMLHttpRequest.upload</target>
        </trans-unit>
        <trans-unit id="214c23a08b508fd38d9a8fc0b37887dddf4af9a2" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.withCredentials</source>
          <target state="translated">XMLHttpRequest.withCredentials</target>
        </trans-unit>
        <trans-unit id="ccf8e117681d1c793356c31e43954acaa6ce763c" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'FormData' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'FormData'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="06bed2935ea9c83774e80c0c4d963f4510deb2aa" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'FormData()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'FormData ()'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="04915acea4987c520a855ad2669ad1e35685549a" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'ProgressEvent' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'ProgressEvent'의 정의입니다.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="51823600eabe9d6b97e3b2b44f3c1e72b5d54310" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'ProgressEvent()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'ProgressEvent ()'의 정의입니다.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8009260d7b46da5f9bd22c4640eb0811d6eea516" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'ProgressEvent.lengthComputable' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'ProgressEvent.lengthComputable'의 정의입니다.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="96dc0453da94420f5252f412f1bb7289ce263d1e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'ProgressEvent.loaded' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'ProgressEvent.loaded'의 정의입니다.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="066eb04c6dc5060c5872b13c1bb106cc4ec3c30e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'append()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'append ()'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="62024f985656319fc5fa5c6b4a90e2e6f4f1add7" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'delete()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'delete ()'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a48b46505ed029c2e8e8e599ccfc79da33a7b63d" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'entries() (as iterator&amp;lt;&amp;gt;)' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 스펙에서 'entries () (iterator &amp;lt;&amp;gt;)'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a3168bb2ef5c76fdb186ec2740ebc8d050d28f56" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'get()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'get ()'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0ca5a5bcb9567c368c17013d7709c3380e4fdb56" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'getAll()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'getAll ()'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c18e2f3e7590238f353d1b0ecc696f14aec417a7" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'getAllResponseHeaders()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'getAllResponseHeaders ()'의 정의입니다.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="73e3c1f62d7a54c9d8311a5cfc5fd3c39b922d79" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'getResponseHeader()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'getResponseHeader ()'의 정의입니다.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2c4423ae14ed9c228fd680312ae0b3cfe9236db4" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'has()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'has ()'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5eb37963c2b4753cb22b727155bf47faaf35b9fd" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'keys() (as iterator&amp;lt;&amp;gt;)' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'keys () (iterator &amp;lt;&amp;gt;)'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6869b7325a237345873ef1b84f078ca584309108" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'open()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'open ()'의 정의입니다.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="76f703ee004aa1470cabe4046e7ef59976e9b664" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'overrideMimeType()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'overrideMimeType ()'의 정의입니다.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c7f70bab78a0e2d17a0dd645e11c66a2343486db" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'responseXML' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'responseXML'의 정의입니다.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3189816b7f8d0b211f75059468951dcf7ab94de8" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'send()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'send ()'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b2ba2f9c1f6a6b797b8de44721d36a9368ecef7e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'set()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'set ()'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d54d9851eead5fe435a1bd3bff4f9a4419d0356c" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'setRequestHeader()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 사양에서 'setRequestHeader ()'의 정의입니다.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="dfb8a510c93e45a85ad3387602a07e471c36377d" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'values() (as iterator&amp;lt;&amp;gt;)' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;해당 스펙에서 'values ​​() (iterator &amp;lt;&amp;gt;)'의 정의.&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9b68e15e4875c1705acf2dcd068ce37e8fbd2212" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget</source>
          <target state="translated">XMLHttpRequestEventTarget</target>
        </trans-unit>
        <trans-unit id="ef5784b83727e814badf283144796dcf41a3b5d2" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.onabort</source>
          <target state="translated">XMLHttpRequestEventTarget.onabort</target>
        </trans-unit>
        <trans-unit id="92a8e777a4ed2873052a3c63cffb8fb82dd07a56" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.onerror</source>
          <target state="translated">XMLHttpRequestEventTarget.onerror</target>
        </trans-unit>
        <trans-unit id="1f12987f2230f3f6d0a4a519754bdb20baa514ed" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.onload</source>
          <target state="translated">XMLHttpRequestEventTarget.onload</target>
        </trans-unit>
        <trans-unit id="b81824430492121422a2a45bc7e0c4b5cfd04ad6" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.onloadstart</source>
          <target state="translated">XMLHttpRequestEventTarget.onloadstart</target>
        </trans-unit>
        <trans-unit id="be50a6b8ccdeab5ebd9ab18e299bb60ff734fc7a" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.onprogress</source>
          <target state="translated">XMLHttpRequestEventTarget.onprogress</target>
        </trans-unit>
        <trans-unit id="0a418644fdcc422515cb9ef63ed0346f9a0bd3b1" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.ontimeout</source>
          <target state="translated">XMLHttpRequestEventTarget.ontimeout</target>
        </trans-unit>
        <trans-unit id="5fff9cda50156cd056976ef35552984685930eca" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestResponseType</source>
          <target state="translated">XMLHttpRequestResponseType</target>
        </trans-unit>
        <trans-unit id="6f3370e25dd9f16a29cc587ca178715bf38adb6b" translate="yes" xml:space="preserve">
          <source>XMLHttpRequests being stopped</source>
          <target state="translated">XMLHttpRequests 중지</target>
        </trans-unit>
        <trans-unit id="36819db18efcb8496bc5a919d2b1549693e0dfdd" translate="yes" xml:space="preserve">
          <source>XMLSerializer</source>
          <target state="translated">XMLSerializer</target>
        </trans-unit>
        <trans-unit id="a5cff5e2475634402443c4344ad891baaefdc245" translate="yes" xml:space="preserve">
          <source>XMLSerializer.serializeToString</source>
          <target state="translated">XMLSerializer.serializeToString</target>
        </trans-unit>
        <trans-unit id="0a3d7ea26ec76d93907265c923a9954480d5facb" translate="yes" xml:space="preserve">
          <source>XPath</source>
          <target state="translated">XPath</target>
        </trans-unit>
        <trans-unit id="2783bc34941f9b19f098ef9ab8f0564e218d7d13" translate="yes" xml:space="preserve">
          <source>XPath Code Snippets</source>
          <target state="translated">XPath 코드 스 니펫</target>
        </trans-unit>
        <trans-unit id="e2c69e2bbd1fdad1c94f96a26facc9020959a30f" translate="yes" xml:space="preserve">
          <source>XPath expressions can be evaluated on HTML and XML documents.</source>
          <target state="translated">XPath 표현식은 HTML 및 XML 문서에서 평가할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4afd3f752904891bcc2fb225ebaf2cc76d4aa45" translate="yes" xml:space="preserve">
          <source>XPathExpression</source>
          <target state="translated">XPathExpression</target>
        </trans-unit>
        <trans-unit id="f93fce9e947bc9c55a3456e19482e414a1b12398" translate="yes" xml:space="preserve">
          <source>XPathResult</source>
          <target state="translated">XPathResult</target>
        </trans-unit>
        <trans-unit id="20026dc165c030fe3a5d9609a6e61ab26210cbc1" translate="yes" xml:space="preserve">
          <source>XX</source>
          <target state="translated">XX</target>
        </trans-unit>
        <trans-unit id="e59abfab5a8d9ffbe982c6bea90524b795f90549" translate="yes" xml:space="preserve">
          <source>Y = Vy * sin(&amp;theta;/2)</source>
          <target state="translated">Y = Vy * sin (&amp;theta; / 2)</target>
        </trans-unit>
        <trans-unit id="b4bd23e305681daab0f9e17ca26b95b668e43017" translate="yes" xml:space="preserve">
          <source>Yaffle&amp;rsquo;s &lt;a href=&quot;https://github.com/Yaffle/EventSource&quot;&gt;EventSource polyfill&lt;/a&gt;</source>
          <target state="translated">Yaffle의 &lt;a href=&quot;https://github.com/Yaffle/EventSource&quot;&gt;EventSource 폴리 필&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="1b0956ff65f8c19f33df41e2f1ed1ad0a14ffa34" translate="yes" xml:space="preserve">
          <source>Yet another possibility is to use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;function's &lt;code&gt;bind&lt;/code&gt;&lt;/a&gt;. Example:</source>
          <target state="translated">또 다른 가능성은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;함수의 &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 를 사용 하는 것 입니다. 예:</target>
        </trans-unit>
        <trans-unit id="ac238ffe71097f39a6d89ce7e305f006d1c5487c" translate="yes" xml:space="preserve">
          <source>Yet another reason to use this property, is for libraries which wish to offer OOP-versions, and non-OOP versions (especially JavaScript modules). For example, if we refer to &quot;this.window.location.href&quot;, a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules&quot;&gt;JavaScript module&lt;/a&gt; could define a property called &quot;window&quot; inside of a class it defined (since no global &quot;window&quot; variable exists for it by default) which could be created after passing in a window object to the module class' constructor. Thus, &quot;this.window&quot; inside of its functions would refer to that window object. In the non-namespaced version, &quot;this.window&quot; would refer back to &quot;window&quot;, and also be able to readily get the document location. Another advantage, is that the objects of such a class (even if the class were defined outside of a module) could change their reference to the window at will, they would not be able to do this if they had hard-coded a reference to &quot;window&quot;. The default in the class could still be set as the current window object.</source>
          <target state="translated">이 특성을 사용하는 또 다른 이유는 OOP 버전을 제공하려는 라이브러리 및 비 OOP 버전 (특히 JavaScript 모듈) 때문입니다. 예를 들어 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules&quot;&gt;JavaScript 모듈&lt;/a&gt; &quot;this.window.location.href&quot;를 참조하면창 객체를 모듈 클래스의 생성자에 전달한 후 만들 수있는 정의 된 클래스 (기본적으로 전역 &quot;창&quot;변수가 없기 때문에) 내에 &quot;창&quot;이라는 속성을 정의 할 수 있습니다. 따라서 함수 내부의 &quot;this.window&quot;는 해당 창 객체를 참조합니다. 네임 스페이스가없는 버전에서 &quot;this.window&quot;는 &quot;window&quot;를 다시 가리키며 문서 위치를 쉽게 얻을 수 있습니다. 또 다른 장점은 그러한 클래스의 객체 (클래스가 모듈 외부에서 정의 된 경우에도)가 임의로 창에 대한 참조를 변경할 수 있다는 것입니다. 참조를 하드 코딩 한 경우이를 수행 할 수 없습니다 &quot;창문&quot;. 클래스의 기본값은 여전히 ​​현재 창 객체로 설정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="37c5eea98bda163a9f361d6b5f5f782803c21f2e" translate="yes" xml:space="preserve">
          <source>You &lt;em&gt;can&lt;/em&gt; and &lt;em&gt;should&lt;/em&gt; handle this event through &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;window.addEventListener()&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&quot;&gt;beforeunload&lt;/a&gt;&lt;/code&gt; event. More documentation is available there.</source>
          <target state="translated">당신은 &lt;em&gt;할 수 있습니다&lt;/em&gt; 및 &lt;em&gt;되어야&lt;/em&gt; 통해이 이벤트 처리 &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;window.addEventListener()&lt;/code&gt; &lt;/a&gt; 과 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&quot;&gt;beforeunload&lt;/a&gt;&lt;/code&gt; 의 이벤트를. 더 많은 문서가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c93a98cde6595b8b666af490dfbed44d2f5957df" translate="yes" xml:space="preserve">
          <source>You &lt;em&gt;can&lt;/em&gt; and &lt;em&gt;should&lt;/em&gt; handle this event through &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;window.addEventListener()&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event. More documentation is available there.</source>
          <target state="translated">당신은 &lt;em&gt;할 수 있습니다&lt;/em&gt; 및 &lt;em&gt;되어야&lt;/em&gt; 통해이 이벤트 처리 &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;window.addEventListener()&lt;/code&gt; &lt;/a&gt; 와 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; 이벤트를. 더 많은 문서가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2db166a314df5622d6718a6732c9c6a2a46a8ab" translate="yes" xml:space="preserve">
          <source>You &lt;em&gt;should&lt;/em&gt; avoid using this property in new code, and should instead use the &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; passed into the event handler function. This property is not universally supported and even when supported introduces potential fragility to your code.</source>
          <target state="translated">당신은 &lt;em&gt;해야&lt;/em&gt; 새로운 코드에서이 속성을 사용하지 말고, 대신 사용해야 &lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt; 이벤트 핸들러 함수에 전달합니다. 이 속성은 보편적으로 지원되지 않으며 지원되는 경우에도 코드에 취약성이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30b74affd88d61a14e7e5c19fe509a7701aeaeb2" translate="yes" xml:space="preserve">
          <source>You also get an &lt;code&gt;activate&lt;/code&gt; event. This is a generally used to do stuff that would have broken the previous version while it was still running, for example getting rid of old caches. This is also useful for removing data that is no longer needed to avoid filling up too much disk space &amp;mdash; each browser has a hard limit on the amount of cache storage that a given service worker can use. The browser does its best to manage disk space, but it may delete the Cache storage for an origin. The browser will generally delete all of the data for an origin or none of the data for an origin.</source>
          <target state="translated">&lt;code&gt;activate&lt;/code&gt; 이벤트 도받습니다 . 이것은 일반적으로 예전 캐시를 제거하는 등 이전 버전이 여전히 실행되는 동안 손상되었을 수있는 작업을 수행하는 데 사용됩니다. 또한 디스크 공간을 너무 많이 채우지 않기 위해 더 이상 필요하지 않은 데이터를 제거하는 데 유용합니다. 각 브라우저에는 지정된 서비스 작업자가 사용할 수있는 캐시 스토리지의 양이 제한되어 있습니다. 브라우저는 디스크 공간을 관리하기 위해 최선을 다하지만 원점의 캐시 스토리지를 삭제할 수 있습니다. 브라우저는 일반적으로 원점에 대한 모든 데이터를 삭제하거나 원점에 대한 데이터를 삭제하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f66e32f73dcdbc24fb0438bb8f8a58f85efec07d" translate="yes" xml:space="preserve">
          <source>You also need a privileged app, so you need to include this as well:</source>
          <target state="translated">또한 특권 앱이 필요하므로이를 포함시켜야합니다.</target>
        </trans-unit>
        <trans-unit id="c2dd15713e741cd2e21350e48ac9ec95fadb28a9" translate="yes" xml:space="preserve">
          <source>You are also responsible for periodically purging cache entries. Each browser has a hard limit on the amount of cache storage that a given origin can use. Cache quota usage estimates are available via the &lt;a href=&quot;storageestimate&quot;&gt;&lt;code&gt;StorageEstimate&lt;/code&gt;&lt;/a&gt; API. The browser does its best to manage disk space, but it may delete the Cache storage for an origin. The browser will generally delete all of the data for an origin or none of the data for an origin. Make sure to version caches by name and use the caches only from the version of the script that they can safely operate on. See &lt;a href=&quot;service_worker_api/using_service_workers#Deleting_old_caches&quot;&gt;Deleting old caches&lt;/a&gt; for more information.</source>
          <target state="translated">또한 캐시 항목을 정기적으로 제거해야합니다. 각 브라우저에는 지정된 출처가 사용할 수있는 캐시 스토리지 양에 대한 제한이 있습니다. 캐시 할당량 사용량 추정치는 &lt;a href=&quot;storageestimate&quot;&gt; &lt;code&gt;StorageEstimate&lt;/code&gt; &lt;/a&gt; API 를 통해 제공됩니다 . 브라우저는 디스크 공간을 관리하기 위해 최선을 다하지만 원점의 캐시 스토리지를 삭제할 수 있습니다. 브라우저는 일반적으로 원점에 대한 모든 데이터를 삭제하거나 원점에 대한 데이터를 삭제하지 않습니다. 캐시를 이름으로 버전 화하고 안전하게 작동 할 수있는 스크립트 버전의 캐시 만 사용하십시오. 자세한 정보는 &lt;a href=&quot;service_worker_api/using_service_workers#Deleting_old_caches&quot;&gt;이전 캐시 삭제&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7907845bcf01362e5a619f84c3ff9f9bcfe17f9c" translate="yes" xml:space="preserve">
          <source>You are free to use either constructors or factory methods, or mix both, however there are advantages to using the constructors:</source>
          <target state="translated">생성자 또는 팩토리 메소드를 자유롭게 사용하거나 두 가지를 혼합 할 수 있지만 생성자를 사용하면 이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce981040499e17cace6bb15a2ca79ec758e110f6" translate="yes" xml:space="preserve">
          <source>You are not running your application through HTTPS.</source>
          <target state="translated">HTTPS를 통해 애플리케이션을 실행하고 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="93284dce17383bd17ae576ca2ebd9e911e84966e" translate="yes" xml:space="preserve">
          <source>You are trying to attach a shadow root to an element outside the HTML namespace, or the element cannot have a shadow attached to it (see above).</source>
          <target state="translated">HTML 네임 스페이스 외부의 요소에 섀도우 루트를 연결하려고하거나 요소에 그림자를 첨부 할 수 없습니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="5538054a343b19daed9f0b5cd8150195bf4c32ef" translate="yes" xml:space="preserve">
          <source>You are trying to delete an object store that does not exist. Names are case sensitive.</source>
          <target state="translated">존재하지 않는 오브젝트 저장소를 삭제하려고합니다. 이름은 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="67c2d30014dc5fe7a096a0bca553e422bcb1b621" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://fullscreen-requestfullscreen-demo.glitch.me/&quot;&gt;see this example in action&lt;/a&gt; or &lt;a href=&quot;https://glitch.com/edit/#!/fullscreen-requestfullscreen-demo&quot;&gt;view or remix the code&lt;/a&gt; on &lt;a href=&quot;http://glitch.com/&quot;&gt;Glitch&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8ca52bd01654e170ffb355c6c9218445ff65d0c" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://github.com/WebAudio/web-audio-api/issues/251&quot;&gt;sub-class an audio node&lt;/a&gt;. While the actual processing is done internally by the browser and cannot be altered, you could write a wrapper around an audio node to provide custom properties and methods.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/WebAudio/web-audio-api/issues/251&quot;&gt;오디오 노드를 서브 클래&lt;/a&gt; 싱 할 수 있습니다 . 실제 처리는 브라우저에서 내부적으로 수행되며 변경할 수 없지만 오디오 노드 주위에 래퍼를 작성하여 사용자 지정 속성 및 메서드를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a70cd61ca239f25d8dcb998ba9171a4b79e0698" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://mdn.github.io/webaudio-examples/decode-audio-data/&quot;&gt;run the example live&lt;/a&gt; (or &lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/decode-audio-data&quot;&gt;view the source&lt;/a&gt;.) Play the song and alter the playback rate for some fun results.</source>
          <target state="translated">&lt;a href=&quot;https://mdn.github.io/webaudio-examples/decode-audio-data/&quot;&gt;예제를 라이브로 실행&lt;/a&gt; 하거나 &lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/decode-audio-data&quot;&gt;소스를 볼&lt;/a&gt; 수 있습니다 . 재미있는 결과를 위해 노래를 재생하고 재생 속도를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="1ac4fe1482fcfd739774d775e68b0e2c5245d72b" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://mdn.github.io/webaudio-examples/decode-audio-data/&quot;&gt;run the full example live&lt;/a&gt; (or &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/decode-audio-data/index.html&quot;&gt;view the source&lt;/a&gt;.)</source>
          <target state="translated">&lt;a href=&quot;https://mdn.github.io/webaudio-examples/decode-audio-data/&quot;&gt;전체 예제를 실시간으로 실행&lt;/a&gt; 하거나 &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/decode-audio-data/index.html&quot;&gt;소스를 볼&lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="52e0b5da662406793287553e9dacb75ac98ee494" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://mdn.mozillademos.org/en-US/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element%24samples/Example?revision=1395579&quot;&gt;take a look at all the code&lt;/a&gt;, including the parts hidden above because they aren't critical to the explanation of how the APIs are being used.</source>
          <target state="translated">API 사용 방법에 대한 설명에 중요하지 않기 때문에 위에 숨겨진 부분을 포함하여 &lt;a href=&quot;https://mdn.mozillademos.org/en-US/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element%24samples/Example?revision=1395579&quot;&gt;모든 코드를 살펴볼&lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b03aa5753f4986da11cc559b070d082fafd34185" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://media-play-promise.glitch.me/&quot;&gt;try out or remix this example in real time on Glitch&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://media-play-promise.glitch.me/&quot;&gt;이 예제를 Glitch에서 실시간으로 시도하거나 리믹스&lt;/a&gt; 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="08ca0567bebf8778c4da3b3fb53b2d7e0b5b33f6" translate="yes" xml:space="preserve">
          <source>You can access &lt;code&gt;CacheStorage&lt;/code&gt; through the global &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/caches&quot;&gt;&lt;code&gt;caches&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">글로벌 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/caches&quot;&gt; &lt;code&gt;caches&lt;/code&gt; &lt;/a&gt; 특성을 통해 &lt;code&gt;CacheStorage&lt;/code&gt; 에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dc47c92a4fa4f2b807dc1118a2edd63a2ef76e6c" translate="yes" xml:space="preserve">
          <source>You can access a particular form control in the returned collection by using either an index or the element's &lt;a href=&quot;../element/name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../element/id&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">index 또는 요소 &lt;a href=&quot;../element/name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../element/id&quot;&gt; &lt;code&gt;id&lt;/code&gt; &lt;/a&gt; 를 사용하여 반환 된 컬렉션의 특정 양식 컨트롤에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6af68dd1f15c259f2cc131766c150235f4b63954" translate="yes" xml:space="preserve">
          <source>You can access the list of the form's data-containing elements by examining the form's &lt;a href=&quot;htmlformelement/elements&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt; property. This returns an &lt;a href=&quot;htmlformcontrolscollection&quot;&gt;&lt;code&gt;HTMLFormControlsCollection&lt;/code&gt;&lt;/a&gt; listing all of the form's user data entry elements, both those which are descendants of the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; and those which are made members of the form using their &lt;code&gt;form&lt;/code&gt; attributes.</source>
          <target state="translated">양식의 &lt;a href=&quot;htmlformelement/elements&quot;&gt; &lt;code&gt;elements&lt;/code&gt; &lt;/a&gt; 속성 을 검사하여 양식의 데이터 포함 요소 목록에 액세스 할 수 있습니다 . 이것은 &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 의 자손 인 요소 와 &lt;code&gt;form&lt;/code&gt; 속성을 사용하여 폼의 멤버가 된 모든 폼의 사용자 데이터 입력 요소를 나열 하는 &lt;a href=&quot;htmlformcontrolscollection&quot;&gt; &lt;code&gt;HTMLFormControlsCollection&lt;/code&gt; 을&lt;/a&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="4fca8042a402fd351a49ac7c652236afae54a377" translate="yes" xml:space="preserve">
          <source>You can access the supported constraints dictionary by calling &lt;code&gt;navigator.mediaDevices.getSupportedConstraints()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;navigator.mediaDevices.getSupportedConstraints()&lt;/code&gt; 를 호출하여 지원되는 제한 조건 사전에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="37f279619c079f1ad2b58a94311ce73d9225ddae" translate="yes" xml:space="preserve">
          <source>You can add a &lt;code&gt;&quot;track&quot;&lt;/code&gt; event listener to be notified when the new track is available so that you can, for example, attach its media to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, using either &lt;a href=&quot;eventtarget/addeventlistener&quot;&gt;&lt;code&gt;RTCPeerConnection.addEventListener()&lt;/code&gt;&lt;/a&gt; or the &lt;code&gt;ontrack&lt;/code&gt; event handler property.</source>
          <target state="translated">&lt;a href=&quot;eventtarget/addeventlistener&quot;&gt; &lt;code&gt;RTCPeerConnection.addEventListener()&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;ontrack&lt;/code&gt; 이벤트 핸들러 속성을 사용하여 미디어를 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소에 연결할 수 있도록 새 트랙을 사용할 수있을 때 알림을받을 &lt;code&gt;&quot;track&quot;&lt;/code&gt; 이벤트 리스너를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9a3865166babad5f86b341c6167daf21bacf342" translate="yes" xml:space="preserve">
          <source>You can add a hit region to your path and check for the &lt;a href=&quot;../../mouseevent/region&quot;&gt;&lt;code&gt;MouseEvent.region&lt;/code&gt;&lt;/a&gt; property to test if your mouse is hitting your region, for example.</source>
          <target state="translated">예를 들어 경로에 적중 영역을 추가하고 &lt;a href=&quot;../../mouseevent/region&quot;&gt; &lt;code&gt;MouseEvent.region&lt;/code&gt; &lt;/a&gt; 속성을 확인하여 마우스가 해당 지역에 도달하는지 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="558854bcaa54cbcce3fbe52ef610bd2e770ef846" translate="yes" xml:space="preserve">
          <source>You can add as many color stops to a gradient as you need. Below is a very simple linear gradient from white to black.</source>
          <target state="translated">그라디언트에 필요한만큼 색상 정지 점을 추가 할 수 있습니다. 아래는 흰색에서 검은 색으로 매우 간단한 선형 그래디언트입니다.</target>
        </trans-unit>
        <trans-unit id="0048dc8f9ca298c81f2fa3d75775d69606ed9d0d" translate="yes" xml:space="preserve">
          <source>You can add key/value pairs to this using &lt;a href=&quot;append&quot;&gt;&lt;code&gt;FormData.append&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;append&quot;&gt; &lt;code&gt;FormData.append&lt;/code&gt; 를&lt;/a&gt; 사용하여 키 / 값 쌍을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e688a1ed171409353a44a79c684a2e09517fed43" translate="yes" xml:space="preserve">
          <source>You can add multiple tokens as well:</source>
          <target state="translated">여러 토큰을 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4da216f443d7f630812f86f94b053f67c5a6af0d" translate="yes" xml:space="preserve">
          <source>You can also &lt;a href=&quot;http://mdn.github.io/webaudio-examples/audio-buffer/&quot;&gt;run the code live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audio-buffer/index.html&quot;&gt;view the source&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://mdn.github.io/webaudio-examples/audio-buffer/&quot;&gt;코드를 실시간으로 실행&lt;/a&gt; 하거나 &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audio-buffer/index.html&quot;&gt;소스를 볼&lt;/a&gt; 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="406ff04cf3457ee8c863864072197258caf7a74f" translate="yes" xml:space="preserve">
          <source>You can also append a &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; directly to the &lt;a href=&quot;../formdata&quot;&gt;&lt;code&gt;FormData&lt;/code&gt;&lt;/a&gt; object, like this:</source>
          <target state="translated">다음과 같이 &lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt; 을 &lt;a href=&quot;../formdata&quot;&gt; &lt;code&gt;FormData&lt;/code&gt; &lt;/a&gt; 객체에 직접 추가 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dc48c138d8b3a236e0329213c4df50f5af3b441f" translate="yes" xml:space="preserve">
          <source>You can also append additional data to the &lt;code&gt;FormData&lt;/code&gt; object between retrieving it from a form and sending it, like this:</source>
          <target state="translated">다음 과 같이 양식에서 데이터를 검색하여 전송하는 사이에 &lt;code&gt;FormData&lt;/code&gt; 객체에 추가 데이터를 추가 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b5375e30dc9c7e182816f2e291127cde0bd40ab" translate="yes" xml:space="preserve">
          <source>You can also change the constraints of an existing &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; on the fly, by calling the track's &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;applyConstraints()&lt;/code&gt;&lt;/a&gt; method, passing into it an object representing the constraints you wish to apply to the track:</source>
          <target state="translated">또한 트랙의 &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt; &lt;code&gt;applyConstraints()&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하고 트랙 에 적용하려는 제약 조건을 나타내는 객체를 전달 하여 기존 &lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt; 의 제약 조건을 즉석에서 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bd0b492a4f79f41169046301f1322987e2788cee" translate="yes" xml:space="preserve">
          <source>You can also create a &lt;a href=&quot;../../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; from the canvas.</source>
          <target state="translated">캔버스에서 &lt;a href=&quot;../../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt; 을 만들 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="791a513b8ad3c13abdd8e24883bf37a13b86fd6c" translate="yes" xml:space="preserve">
          <source>You can also create a &lt;code&gt;DOMPoint&lt;/code&gt; by calling the &lt;a href=&quot;frompoint&quot;&gt;&lt;code&gt;DOMPoint.fromPoint()&lt;/code&gt;&lt;/a&gt; static function. That function accepts as input a &lt;a href=&quot;../dompointinit&quot;&gt;&lt;code&gt;DOMPointInit&lt;/code&gt;&lt;/a&gt; compatible object, including a &lt;code&gt;DOMPoint&lt;/code&gt; or &lt;a href=&quot;../dompointreadonly&quot;&gt;&lt;code&gt;DOMPointReadOnly&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">또한 만들 수 있습니다 &lt;code&gt;DOMPoint&lt;/code&gt; 를 호출하여 &lt;a href=&quot;frompoint&quot;&gt; &lt;code&gt;DOMPoint.fromPoint()&lt;/code&gt; &lt;/a&gt; 정적 기능. 이 함수는 &lt;code&gt;DOMPoint&lt;/code&gt; 또는 &lt;a href=&quot;../dompointreadonly&quot;&gt; &lt;code&gt;DOMPointReadOnly&lt;/code&gt; 를&lt;/a&gt; 포함한 &lt;a href=&quot;../dompointinit&quot;&gt; &lt;code&gt;DOMPointInit&lt;/code&gt; &lt;/a&gt; 호환 객체 를 입력으로 받아들 입니다.</target>
        </trans-unit>
        <trans-unit id="ae557e1f0ffb7d35f3eb5d450b9648d5ebb179ad" translate="yes" xml:space="preserve">
          <source>You can also create a new &lt;code&gt;DOMPoint&lt;/code&gt; object using the &lt;a href=&quot;dompoint&quot;&gt;&lt;code&gt;new DOMPoint()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;a href=&quot;dompoint&quot;&gt; &lt;code&gt;new DOMPoint()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 새 &lt;code&gt;DOMPoint&lt;/code&gt; 객체를 만들 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="96111962e97539d845b66f440aa1d75559551c6c" translate="yes" xml:space="preserve">
          <source>You can also create a new &lt;code&gt;DOMPointReadOnly&lt;/code&gt; object using the &lt;a href=&quot;dompointreadonly&quot;&gt;&lt;code&gt;new DOMPointReadOnly()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;a href=&quot;dompointreadonly&quot;&gt; &lt;code&gt;new DOMPointReadOnly()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 새 &lt;code&gt;DOMPointReadOnly&lt;/code&gt; 객체를 만들 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9cb9f784017a4ab37abdaa456d470e025caa8845" translate="yes" xml:space="preserve">
          <source>You can also create a new &lt;code&gt;ImageData&lt;/code&gt; object with the same dimensions as the object specified by &lt;code&gt;anotherImageData&lt;/code&gt;. The new object's pixels are all preset to transparent black. &lt;strong&gt;This does not copy the image data!&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;anotherImageData&lt;/code&gt; 로 지정된 객체와 동일한 차원으로 새 &lt;code&gt;ImageData&lt;/code&gt; 객체를 만들 수도 있습니다 . 새 객체의 픽셀은 모두 투명한 검은 색으로 사전 설정되어 있습니다. &lt;strong&gt;이미지 데이터를 복사하지 않습니다!&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d39b522cfef252c89ec9b8923ef5cfee8219d05" translate="yes" xml:space="preserve">
          <source>You can also create indices on any object store, provided the object store holds objects, not primitives. An index lets you look up the values stored in an object store using the value of a property of the stored object, rather than the object's key.</source>
          <target state="translated">오브젝트 저장소가 기본 요소가 아닌 오브젝트를 보유하는 경우 모든 오브젝트 저장소에서 인덱스를 작성할 수도 있습니다. 인덱스를 사용하면 객체의 키가 아니라 저장된 객체의 속성 값을 사용하여 객체 저장소에 저장된 값을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e5ae3c9ca0613bc21b33f158ee3cb26a95bee53" translate="yes" xml:space="preserve">
          <source>You can also define the style directly in the WebVTT file. In this case, you insert your CSS rules into the file with each rule preceded by the string &lt;code&gt;&quot;STYLE&quot;&lt;/code&gt; all by itelf on a line of text, as shown below:</source>
          <target state="translated">WebVTT 파일에서 직접 스타일을 정의 할 수도 있습니다. 이 경우 아래와 같이 CSS 규칙을 파일에 삽입하고 각 규칙 앞에 문자열 &lt;code&gt;&quot;STYLE&quot;&lt;/code&gt; 이 모두 한 줄씩 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9c38e6bf55d71cf0cb2c410f326dafc95db9b60d" translate="yes" xml:space="preserve">
          <source>You can also jump straight to the &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-capturestill&quot;&gt;code on Github&lt;/a&gt; if you like.</source>
          <target state="translated">원하는 경우 &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-capturestill&quot;&gt;Github&lt;/a&gt; 의 코드로 바로 이동할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5159ab522368e969f31b08d805b7b74c5aeae680" translate="yes" xml:space="preserve">
          <source>You can also let the user drag and drop files into your web application.</source>
          <target state="translated">사용자가 파일을 웹 응용 프로그램으로 끌어서 놓을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="39943fb52f3f0919f6c3871ce5a1496fea51c0c8" translate="yes" xml:space="preserve">
          <source>You can also listen for events, using &lt;code&gt;addEventListener()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;addEventListener()&lt;/code&gt; 사용하여 이벤트를 수신 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c07c3f5d697c9c56f678c763d4202b70e115439" translate="yes" xml:space="preserve">
          <source>You can also make such function able to open only 1 secondary window and to reuse such single secondary window for other links in this manner:</source>
          <target state="translated">이러한 기능을 사용하여 하나의 보조 창만 열 수 있으며 이러한 단일 보조 창을 다음과 같은 방식으로 다른 링크에 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71f19c0d8b0d97c0933ebf61b3a7a9b2229957d2" translate="yes" xml:space="preserve">
          <source>You can also output multiple objects by simply listing them when calling the logging method, like this:</source>
          <target state="translated">다음과 같이 logging 메소드를 호출 할 때 간단히 나열하여 여러 오브젝트를 출력 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdc1b93cfce2bcdd2b8be26f4cf728678bb6c735" translate="yes" xml:space="preserve">
          <source>You can also parameterize the function to make it versatile, functional in more situations, therefore re-usable in scripts and webpages:</source>
          <target state="translated">또한 함수를 매개 변수화하여 더 많은 상황에서 다양하고 기능적으로 만들 수 있으므로 스크립트 및 웹 페이지에서 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24195b6f11b1bfc587e55b366ce42d5dd84a6a48" translate="yes" xml:space="preserve">
          <source>You can also query by ID. For example:</source>
          <target state="translated">ID로 쿼리 할 수도 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6d785b23afe0431fa9705038221b24affed629e3" translate="yes" xml:space="preserve">
          <source>You can also retrieve details of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt;s that have been fired from the current service worker using &lt;a href=&quot;getnotifications&quot;&gt;&lt;code&gt;ServiceWorkerRegistration.getNotifications()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;getnotifications&quot;&gt; &lt;code&gt;ServiceWorkerRegistration.getNotifications()&lt;/code&gt; &lt;/a&gt; 사용하여 현재 서비스 작업자로부터 시작된 &lt;a href=&quot;../notification&quot;&gt; &lt;code&gt;Notification&lt;/code&gt; &lt;/a&gt; 의 세부 사항을 검색 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d2a8f37b0616efa9c589de4027c87b3bc1bd5790" translate="yes" xml:space="preserve">
          <source>You can also see a &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/channel-messaging-multimessage&quot;&gt;multimessaging demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/dom-examples/channel-messaging-multimessage/&quot;&gt;run this live&lt;/a&gt;), which shows a slightly more complex setup that can send multiple messages between main page and IFrame.</source>
          <target state="translated">메인 페이지와 IFrame간에 여러 메시지를 보낼 수있는 약간 더 복잡한 설정을 보여주는 &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/channel-messaging-multimessage&quot;&gt;멀티 메시징 데모&lt;/a&gt; ( &lt;a href=&quot;http://mdn.github.io/dom-examples/channel-messaging-multimessage/&quot;&gt;이 라이브 실행)&lt;/a&gt; 도 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="04b375003de71d473b54c9baf91dd84cfbfe84a4" translate="yes" xml:space="preserve">
          <source>You can also see an example that demonstrates &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_View/Coordinate_systems#Example&quot;&gt;how to access the mouse position&lt;/a&gt; information in every available coordinate system.</source>
          <target state="translated">사용 가능한 모든 좌표계에서 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_View/Coordinate_systems#Example&quot;&gt;마우스 위치&lt;/a&gt; 정보에 액세스하는 방법을 보여주는 예제도 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="02f36abc730a22f0cc74a4b72e0b59bd70914bdc" translate="yes" xml:space="preserve">
          <source>You can also send files using &lt;code&gt;FormData&lt;/code&gt;. Simply include an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; element of type &lt;code&gt;file&lt;/code&gt; in your &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;FormData&lt;/code&gt; 를 사용하여 파일을 보낼 수도 있습니다 . 단순히 포함 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt; 유형의 요소 &lt;code&gt;file&lt;/code&gt; 사용자에 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt; &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="47f75c2bb31de6441f7c82309bf985de6825b250" translate="yes" xml:space="preserve">
          <source>You can also specify the value of the property as simply &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, in which case the user agent will use that value if possible once all efforts have been made to match the &lt;code&gt;exact&lt;/code&gt; and &lt;code&gt;ideal&lt;/code&gt; values for other properties.</source>
          <target state="translated">속성 값을 단순히 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 로 지정할 수도 있습니다 .이 경우 사용자 에이전트는 가능한 경우 다른 속성에 대한 &lt;code&gt;exact&lt;/code&gt; 하고 &lt;code&gt;ideal&lt;/code&gt; 값 과 일치하도록 모든 노력을 기울이면 해당 값을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="6e5d26b3980bb74d46f7a70e738ddf1f8603e899" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt; to add a listener for &lt;code&gt;pointerdown&lt;/code&gt; events.</source>
          <target state="translated">&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;addEventListener()&lt;/code&gt; &lt;/a&gt; 를 사용 하여 &lt;code&gt;pointerdown&lt;/code&gt; 이벤트에 대한 리스너를 추가 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f829ad3ee74921192e162bbb6674ced9159b3de3" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;isdirectory&quot;&gt;&lt;code&gt;isDirectory&lt;/code&gt;&lt;/a&gt; to determine if the entry is a directory.</source>
          <target state="translated">&lt;a href=&quot;isdirectory&quot;&gt; &lt;code&gt;isDirectory&lt;/code&gt; &lt;/a&gt; 를 사용 하여 항목이 디렉토리인지 판별 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6f502a1659e9f1370692df5f693f9287a35e42df" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;isfile&quot;&gt;&lt;code&gt;isFile&lt;/code&gt;&lt;/a&gt; to determine if the entry is a file.</source>
          <target state="translated">&lt;a href=&quot;isfile&quot;&gt; &lt;code&gt;isFile&lt;/code&gt; &lt;/a&gt; 을 사용 하여 항목이 파일인지 판별 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aafced0ab178724e813b827a9b11b941637f5f34" translate="yes" xml:space="preserve">
          <source>You can also use an object literal as &lt;code&gt;headers&lt;/code&gt; in &lt;code&gt;init&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;init&lt;/code&gt; 에서 객체 리터럴을 &lt;code&gt;headers&lt;/code&gt; 로 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5866697f6534aa6d5c1e52273eb6db7f47be02e3" translate="yes" xml:space="preserve">
          <source>You can also use frames from a video being presented by a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element (even if the video is not visible). For example, if you have a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element with the ID &quot;myvideo&quot;, you can do this:</source>
          <target state="translated">비디오가 보이지 않더라도 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소 로 표시되는 비디오의 프레임을 사용할 수도 있습니다 . 예를 들어 ID가 &quot;myvideo&quot;인 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소가있는 경우 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff7321d591eba51968fc711534173113f31f868f" translate="yes" xml:space="preserve">
          <source>You can also use other types that you make up for custom purposes. You should strive to always include a plain text alternative unless that object being dragged is specific to a particular site or application. In this case, the custom type ensures that the data cannot be dropped elsewhere.</source>
          <target state="translated">사용자 정의 목적으로 구성한 다른 유형을 사용할 수도 있습니다. 끌고있는 개체가 특정 사이트 나 응용 프로그램에 특정한 것이 아닌 한 항상 일반 텍스트 대안을 포함하도록 노력해야합니다. 이 경우 사용자 정의 유형을 사용하면 다른 곳에서 데이터를 삭제할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5e6cef3a71b9b48c5d59af322be1d9a2155b2ac2" translate="yes" xml:space="preserve">
          <source>You can also use requestAnimationFrame in workers</source>
          <target state="translated">워커에서 requestAnimationFrame을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdf7f90c4a9575eb00e1b01b5b94e82ea86d073f" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;a href=&quot;response/response&quot;&gt;&lt;code&gt;Response.Response()&lt;/code&gt;&lt;/a&gt; constructor to create your own custom &lt;code&gt;Response&lt;/code&gt; object:</source>
          <target state="translated">당신은 또한 사용할 수 있습니다 &lt;a href=&quot;response/response&quot;&gt; &lt;code&gt;Response.Response()&lt;/code&gt; &lt;/a&gt; 사용자 정의 만들 생성자를 &lt;code&gt;Response&lt;/code&gt; 객체를 :</target>
        </trans-unit>
        <trans-unit id="0a90ac35f33ff5a9d21c0b74b755b956173bf103" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;a href=&quot;settransform&quot;&gt;&lt;code&gt;setTransform()&lt;/code&gt;&lt;/a&gt; method to reset the current transform to the identity matrix, like so:</source>
          <target state="translated">다음과 같이 &lt;a href=&quot;settransform&quot;&gt; &lt;code&gt;setTransform()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 현재 변환을 항등 행렬로 재설정 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="378710cc940f8fc35a648f0762178ba50d7234ab" translate="yes" xml:space="preserve">
          <source>You can also use the connection between two peers to exchange arbitrary binary data using the &lt;a href=&quot;rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; interface. This can be used for back-channel information, metadata exchange, game status packets, file transfers, or even as a primary channel for data transfer.</source>
          <target state="translated">&lt;a href=&quot;rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt; 인터페이스를 사용하여 임의의 이진 데이터를 교환하기 위해 두 피어 간의 연결을 사용할 수도 있습니다 . 백 채널 정보, 메타 데이터 교환, 게임 상태 패킷, 파일 전송 또는 데이터 전송을위한 기본 채널로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b33fc021795df2822b760078c9812a923ef5da66" translate="yes" xml:space="preserve">
          <source>You can also use the older promise-based approach to work with payments, using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then&quot;&gt;&lt;code&gt;then()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch&quot;&gt;&lt;code&gt;catch()&lt;/code&gt;&lt;/a&gt; functions on the promise returned by &lt;code&gt;show()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;show()&lt;/code&gt; 반환 한 약속에 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then&quot;&gt; &lt;code&gt;then()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch&quot;&gt; &lt;code&gt;catch()&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 이전 약속 기반 접근 방식을 사용하여 지불 작업을 수행 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4fda8437e5a95f2c9af2841e399ae216acb34f36" translate="yes" xml:space="preserve">
          <source>You can also use the properties of the &lt;code&gt;MediaRecorder&lt;/code&gt; object to determine the state of the recording process, and its &lt;a href=&quot;mediarecorder/pause&quot;&gt;&lt;code&gt;pause()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mediarecorder/resume&quot;&gt;&lt;code&gt;resume()&lt;/code&gt;&lt;/a&gt; methods to pause and resume recording of the source media.</source>
          <target state="translated">&lt;code&gt;MediaRecorder&lt;/code&gt; 객체 의 속성을 사용하여 기록 프로세스의 상태를 확인하고 &lt;a href=&quot;mediarecorder/pause&quot;&gt; &lt;code&gt;pause()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;mediarecorder/resume&quot;&gt; &lt;code&gt;resume()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 소스 미디어의 기록을 일시 중지하고 다시 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f67cef35ce48394a604fd26780647727ab4a7b6d" translate="yes" xml:space="preserve">
          <source>You can also write data to streams using &lt;a href=&quot;writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;writablestream&quot;&gt; &lt;code&gt;WritableStream&lt;/code&gt; 을&lt;/a&gt; 사용하여 스트림에 데이터를 쓸 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a63abc2fe1f24703e3d38140d0cdd7ccd41befb9" translate="yes" xml:space="preserve">
          <source>You can associate arbitrary data with your new history entry. With the hash-based approach, you need to encode all of the relevant data into a short string.</source>
          <target state="translated">임의의 데이터를 새로운 내역 항목과 연결할 수 있습니다. 해시 기반 접근 방식을 사용하면 모든 관련 데이터를 짧은 문자열로 인코딩해야합니다.</target>
        </trans-unit>
        <trans-unit id="8a8b8c292dc4d7defa2d8db63609f1c1660f696f" translate="yes" xml:space="preserve">
          <source>You can attach a &lt;code&gt;fetch&lt;/code&gt; event listener to the service worker, then call the &lt;code&gt;respondWith()&lt;/code&gt; method on the event to hijack our HTTP responses and update them with your own magic.</source>
          <target state="translated">&lt;code&gt;fetch&lt;/code&gt; 이벤트 리스너를 서비스 워커에 첨부 한 후 이벤트에서 &lt;code&gt;respondWith()&lt;/code&gt; 메소드 를 호출하여 HTTP 응답을 하이재킹하고 자신의 마법으로 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d36116ce4346fa2bd8bb4549c70554f244d5f3ff" translate="yes" xml:space="preserve">
          <source>You can automate the creation of a DOM tree using a &lt;a href=&quot;https://developer.mozilla.org/en/JXON#JXON_reverse_algorithms&quot;&gt;JXON reverse algorithm&lt;/a&gt; in association with the following JSON representation:</source>
          <target state="translated">다음 JSON 표현과 관련 하여 &lt;a href=&quot;https://developer.mozilla.org/en/JXON#JXON_reverse_algorithms&quot;&gt;JXON 리버스 알고리즘&lt;/a&gt; 을 사용하여 DOM 트리 작성을 자동화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cfdf1ec456b66d10aa0a52faf5204de53b73618b" translate="yes" xml:space="preserve">
          <source>You can automatically adjust URLs using the following code:</source>
          <target state="translated">다음 코드를 사용하여 URL을 자동으로 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93e9eee349cc6256bcb0745bc6b80c4adfe82cf0" translate="yes" xml:space="preserve">
          <source>You can build a &lt;code&gt;FormData&lt;/code&gt; object yourself, instantiating it then appending fields to it by calling its &lt;a href=&quot;append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; method, like this:</source>
          <target state="translated">&lt;code&gt;FormData&lt;/code&gt; 객체를 직접 빌드하고 인스턴스화 한 다음 &lt;a href=&quot;append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt; 메서드를 다음과 같이 호출하여 필드를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="acacfb16efc6aa2c5da163b8c597b3a1a2a4e4a2" translate="yes" xml:space="preserve">
          <source>You can build this table and its internal child elements by using just a few DOM methods. Remember to keep in mind the tree model for the structures you are planning to create; this will make it easier to write the necessary code. In the &amp;lt;table&amp;gt; tree of Figure 1 the element &amp;lt;table&amp;gt; has one child, the element &amp;lt;tbody&amp;gt;. &amp;lt;tbody&amp;gt; has two children. Each &amp;lt;tbody&amp;gt;'s child (&amp;lt;tr&amp;gt;) has two children (&amp;lt;td&amp;gt;). Finally, each &amp;lt;td&amp;gt; has one child, a text node.</source>
          <target state="translated">몇 가지 DOM 메소드 만 사용하여이 테이블과 내부 하위 요소를 빌드 할 수 있습니다. 작성하려는 구조의 트리 모델을 명심하십시오. 이렇게하면 필요한 코드를보다 쉽게 ​​작성할 수 있습니다. 그림 1의 &amp;lt;table&amp;gt; 트리에서 &amp;lt;table&amp;gt; 요소에는 &amp;lt;tbody&amp;gt; 요소가 하나 있습니다. &amp;lt;tbody&amp;gt;에는 두 자녀가 있습니다. 각 &amp;lt;tbody&amp;gt;의 자식 (&amp;lt;tr&amp;gt;)에는 두 개의 자식 (&amp;lt;td&amp;gt;)이 있습니다. 마지막으로 각 &amp;lt;td&amp;gt;에는 하나의 자식 노드 인 텍스트 노드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="8bb99e35782fd28e52e8ae8f3cb9a84828d609b3" translate="yes" xml:space="preserve">
          <source>You can calculate the time elapsed between the beginning of a request and the completion of getting the response using code like this:</source>
          <target state="translated">다음과 같은 코드를 사용하여 요청 시작과 응답 수신 완료 사이의 경과 시간을 계산할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13a32936b5a3f3931af53c5667a3820c179e2c54" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;../mediastreamtrack/getcapabilities&quot;&gt;&lt;code&gt;MediaStreamTrack.getCapabilities()&lt;/code&gt;&lt;/a&gt; to get a list of all of the supported capabilities and the values or ranges of values which each one accepts on the current platform and user agent&lt;em&gt;.&lt;/em&gt; This function returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackCapabilities&quot;&gt;&lt;code&gt;MediaTrackCapabilities&lt;/code&gt;&lt;/a&gt; object which lists each constrainable property supported by the browser and a value or range of values which are supported for each one of those properties.</source>
          <target state="translated">&lt;a href=&quot;../mediastreamtrack/getcapabilities&quot;&gt; &lt;code&gt;MediaStreamTrack.getCapabilities()&lt;/code&gt; &lt;/a&gt; 를 호출 하여 현재 지원되는 모든 기능 및 현재 플랫폼 및 사용자 에이전트에서 허용되는 값 또는 값 범위의 목록을 가져올 수 있습니다 &lt;em&gt;.&lt;/em&gt; 이 함수는 브라우저에서 지원하는 각 제한 가능 속성과 해당 속성 각각에 대해 지원되는 값 또는 값 범위를 나열 하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackCapabilities&quot;&gt; &lt;code&gt;MediaTrackCapabilities&lt;/code&gt; &lt;/a&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="72d6e80d0c68671db69bd0f68ca85bab311561ea" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;getvertexattrib&quot;&gt;&lt;code&gt;gl.getVertexAttrib()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;getvertexattriboffset&quot;&gt;&lt;code&gt;gl.getVertexAttribOffset()&lt;/code&gt;&lt;/a&gt; to get the current parameters for an attribute, e.g. the data type or whether the attribute should be normalized. Keep in mind that these WebGL functions have a slow performance and it is better to store the state inside your JavaScript application. However, these functions are great for debugging a WebGL context without touching the application code.</source>
          <target state="translated">&lt;a href=&quot;getvertexattrib&quot;&gt; &lt;code&gt;gl.getVertexAttrib()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;getvertexattriboffset&quot;&gt; &lt;code&gt;gl.getVertexAttribOffset()&lt;/code&gt; &lt;/a&gt; 을 호출 하여 속성의 현재 매개 변수 (예 : 데이터 유형 또는 속성의 정규화 여부 ) 를 가져올 수 있습니다. 이러한 WebGL 함수는 성능이 느리므로 JavaScript 애플리케이션 내에 상태를 저장하는 것이 좋습니다. 그러나이 함수는 애플리케이션 코드를 건드리지 않고 WebGL 컨텍스트를 디버깅하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="92922f567a2245b3a61ada853c9082a4cca1890c" translate="yes" xml:space="preserve">
          <source>You can call &lt;code&gt;observe()&lt;/code&gt; multiple times on the same &lt;code&gt;MutationObserver&lt;/code&gt; to watch for changes to different parts of the DOM tree and/or different types of changes. There are some caveats to note:</source>
          <target state="translated">동일한 &lt;code&gt;MutationObserver&lt;/code&gt; 에서 &lt;code&gt;observe()&lt;/code&gt; 여러 번 호출 하여 DOM 트리의 다른 부분 및 / 또는 다른 유형의 변경에 대한 변경을 감시 할 수 있습니다 . 주의해야 할 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b83c5856408773c3222ad9fe8f4db71701645f1" translate="yes" xml:space="preserve">
          <source>You can call &lt;code&gt;requestIdleCallback()&lt;/code&gt; within an idle callback function to schedule another callback to take place no sooner than the next pass through the event loop.</source>
          <target state="translated">유휴 콜백 함수 내에서 &lt;code&gt;requestIdleCallback()&lt;/code&gt; 호출 하여 다음 루프가 이벤트 루프를 통과 할 때까지 다른 콜백이 발생하도록 예약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3484c03a5af17542a9410cb06b6545366413619d" translate="yes" xml:space="preserve">
          <source>You can call the &lt;code&gt;save()&lt;/code&gt; method as many times as you like. Each time the &lt;code&gt;restore()&lt;/code&gt; method is called, the last saved state is popped off the stack and all saved settings are restored.</source>
          <target state="translated">&lt;code&gt;save()&lt;/code&gt; 메소드를 원하는만큼 호출 할 수 있습니다 . &lt;code&gt;restore()&lt;/code&gt; 메소드가 호출 될 때마다 마지막 저장된 상태가 스택에서 튀어 나와 저장된 모든 설정이 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="81e10e8a0dc5da46dd74a151110879aee389ea28" translate="yes" xml:space="preserve">
          <source>You can cancel the interval using &lt;a href=&quot;clearinterval&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.clearInterval()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;clearinterval&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.clearInterval()&lt;/code&gt; &lt;/a&gt; 사용하여 간격을 취소 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b55c3f3dbcac1020c1fe55219d63543f6e347ad2" translate="yes" xml:space="preserve">
          <source>You can check out the &lt;a href=&quot;https://codepen.io/Rumyra/pen/oPxvYB/&quot;&gt;full demo here on Codepen&lt;/a&gt;. Also see the &lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/iirfilter-node&quot;&gt;source code on GitHub&lt;/a&gt;. It includes some different coefficient values for different lowpass frequencies &amp;mdash; you can change the value of the &lt;code&gt;filterNumber&lt;/code&gt; constant to a value between 0 and 3 to check out the different available effects.</source>
          <target state="translated">&lt;a href=&quot;https://codepen.io/Rumyra/pen/oPxvYB/&quot;&gt;Codepen&lt;/a&gt; 에서 전체 데모를 확인할 수 있습니다 . &lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/iirfilter-node&quot;&gt;GitHub&lt;/a&gt; 의 소스 코드 도 참조하십시오 . 저역 통과 주파수마다 다른 계수 값이 포함되어 있습니다. &lt;code&gt;filterNumber&lt;/code&gt; 상수 값을 0에서 3 사이 의 값으로 변경하여 사용 가능한 다른 효과를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e96b8636753cd5275574176d3150a7cf07dfc78a" translate="yes" xml:space="preserve">
          <source>You can check to see if you already have permission by checking the value of the &lt;a href=&quot;../notification/permission&quot;&gt;&lt;code&gt;Notification.permission&lt;/code&gt;&lt;/a&gt; read only property. It can have one of three possible values:</source>
          <target state="translated">&lt;a href=&quot;../notification/permission&quot;&gt; &lt;code&gt;Notification.permission&lt;/code&gt; &lt;/a&gt; 읽기 전용 속성 값을 확인하여 이미 권한이 있는지 확인할 수 있습니다. 가능한 세 가지 값 중 하나를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28acf5ce04a81364c85610c6d1079ca6297219a3" translate="yes" xml:space="preserve">
          <source>You can check whether any option is supported this way. Just add a getter for that option using code similar to what is shown above.</source>
          <target state="translated">이 방법으로 지원되는 옵션이 있는지 확인할 수 있습니다. 위에 표시된 것과 유사한 코드를 사용하여 해당 옵션에 대한 getter를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="ad526f3ce59082981af298040bb50bcf7c1d63fd" translate="yes" xml:space="preserve">
          <source>You can clear an item using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozClearDataAt&quot;&gt;&lt;code&gt;mozClearDataAt()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozClearDataAt&quot;&gt; &lt;code&gt;mozClearDataAt()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 항목을 지울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f24c3e6a7023bd48c1a4b11c461888d2ca916bd" translate="yes" xml:space="preserve">
          <source>You can clear the data using the &lt;a href=&quot;../datatransfer/cleardata&quot;&gt;&lt;code&gt;clearData()&lt;/code&gt;&lt;/a&gt; method, which takes one argument, the type of the data to remove.</source>
          <target state="translated">&lt;a href=&quot;../datatransfer/cleardata&quot;&gt; &lt;code&gt;clearData()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 데이터를 지울 수 있습니다. clearData () 메소드는 제거 할 데이터 유형 인 하나의 인수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b141c235a32d69526b1516de2a047b09dc4cd8d1" translate="yes" xml:space="preserve">
          <source>You can copy&amp;amp;paste the example in your [Scratchpad]</source>
          <target state="translated">[스크래치 패드]에서 예제를 복사하여 붙여 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5173871837e9f2a198bdcceeb88268b574d2e924" translate="yes" xml:space="preserve">
          <source>You can create a new &lt;code&gt;AbortController&lt;/code&gt; object using the &lt;a href=&quot;abortcontroller/abortcontroller&quot;&gt;&lt;code&gt;AbortController.AbortController()&lt;/code&gt;&lt;/a&gt; constructor. Communicating with a DOM request is done using an &lt;a href=&quot;abortsignal&quot;&gt;&lt;code&gt;AbortSignal&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;abortcontroller/abortcontroller&quot;&gt; &lt;code&gt;AbortController.AbortController()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 새 &lt;code&gt;AbortController&lt;/code&gt; 객체를 만들 수 있습니다 . DOM 요청과의 통신은 &lt;a href=&quot;abortsignal&quot;&gt; &lt;code&gt;AbortSignal&lt;/code&gt; &lt;/a&gt; 객체를 사용하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="0d1742c6a5afbfac26dc47c56a5d61c6ca275a04" translate="yes" xml:space="preserve">
          <source>You can create a new &lt;code&gt;Request&lt;/code&gt; object using the &lt;a href=&quot;request/request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor, but you are more likely to encounter a &lt;code&gt;Request&lt;/code&gt; object being returned as the result of another API operation, such as a service worker &lt;a href=&quot;fetchevent/request&quot;&gt;&lt;code&gt;FetchEvent.request&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;request/request&quot;&gt; &lt;code&gt;Request.Request()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 새 &lt;code&gt;Request&lt;/code&gt; 객체를 만들 수 있지만 서비스 워커 &lt;a href=&quot;fetchevent/request&quot;&gt; &lt;code&gt;FetchEvent.request&lt;/code&gt; &lt;/a&gt; 와 같은 다른 API 작업의 결과로 &lt;code&gt;Request&lt;/code&gt; 객체가 반환 될 가능성이 높습니다 .</target>
        </trans-unit>
        <trans-unit id="893f8a85c07698db3c0bfdc70de91ea277b77575" translate="yes" xml:space="preserve">
          <source>You can create a new &lt;code&gt;Response&lt;/code&gt; object using the &lt;a href=&quot;response/response&quot;&gt;&lt;code&gt;Response.Response()&lt;/code&gt;&lt;/a&gt; constructor, but you are more likely to encounter a Response object being returned as the result of another API operation, for example a service worker &lt;a href=&quot;fetchevent/respondwith&quot;&gt;&lt;code&gt;Fetchevent.respondWith&lt;/code&gt;&lt;/a&gt;, or a simple &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;GlobalFetch.fetch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;response/response&quot;&gt; &lt;code&gt;Response.Response()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 새 &lt;code&gt;Response&lt;/code&gt; 오브젝트를 작성할 수 있지만 다른 API 조작 (예 : 서비스 워커 &lt;a href=&quot;fetchevent/respondwith&quot;&gt; &lt;code&gt;Fetchevent.respondWith&lt;/code&gt; &lt;/a&gt; 또는 간단한 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt; &lt;code&gt;GlobalFetch.fetch()&lt;/code&gt; &lt;/a&gt; 의 결과로 응답 오브젝트가 리턴 될 가능성이 높습니다 . fetch () .</target>
        </trans-unit>
        <trans-unit id="c33df4559891386ab064b7c650c1ecb99caf1e70" translate="yes" xml:space="preserve">
          <source>You can create a request and response directly using the &lt;a href=&quot;request/request&quot;&gt;&lt;code&gt;Request()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;response/response&quot;&gt;&lt;code&gt;Response()&lt;/code&gt;&lt;/a&gt; constructors, but you are unlikely to do this directly. Instead, these are more likely to be created as results of other API actions (for example, &lt;a href=&quot;fetchevent/respondwith&quot;&gt;&lt;code&gt;FetchEvent.respondWith()&lt;/code&gt;&lt;/a&gt; from service workers).</source>
          <target state="translated">&lt;a href=&quot;request/request&quot;&gt; &lt;code&gt;Request()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;response/response&quot;&gt; &lt;code&gt;Response()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 직접 요청 및 응답을 작성할 수 있지만 직접 수행 할 가능성은 없습니다. 대신 다른 API 작업 (예 : 서비스 작업자의 &lt;a href=&quot;fetchevent/respondwith&quot;&gt; &lt;code&gt;FetchEvent.respondWith()&lt;/code&gt; &lt;/a&gt; 결과로 생성 될 가능성이 높습니다 .</target>
        </trans-unit>
        <trans-unit id="820ad6d6cd7e34268be90a7cc9d837b360024736" translate="yes" xml:space="preserve">
          <source>You can create an attribute with the specified &lt;code&gt;namespaceURI&lt;/code&gt; using the DOM Level 2 method &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/setAttributeNS&quot;&gt;&lt;code&gt;Element.setAttributeNS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">DOM 레벨 2 메소드 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/setAttributeNS&quot;&gt; &lt;code&gt;Element.setAttributeNS&lt;/code&gt; 를&lt;/a&gt; 사용하여 지정된 &lt;code&gt;namespaceURI&lt;/code&gt; 로 속성을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="401f6db89365d506f4467d6ef4a74a2465318e92" translate="yes" xml:space="preserve">
          <source>You can create an element with the specified &lt;code&gt;namespaceURI&lt;/code&gt; using the DOM Level 2 method &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document/createElementNS&quot;&gt;&lt;code&gt;Document.createElementNS&lt;/code&gt;&lt;/a&gt; and attributes with the method &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/setAttributeNS&quot;&gt;&lt;code&gt;Element.setAttributeNS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">DOM Level 2 메소드 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document/createElementNS&quot;&gt; &lt;code&gt;Document.createElementNS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/setAttributeNS&quot;&gt; &lt;code&gt;Element.setAttributeNS&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 속성을 사용하여 지정된 &lt;code&gt;namespaceURI&lt;/code&gt; 로 요소를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2b053b3bc34ac734ed50f6f2b1ee73afed27d38e" translate="yes" xml:space="preserve">
          <source>You can create an element with the specified &lt;code&gt;namespaceURI&lt;/code&gt; using the DOM Level 2 method &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document/createElementNS&quot;&gt;document.createElementNS&lt;/a&gt;.</source>
          <target state="translated">DOM 레벨 2 메소드 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document/createElementNS&quot;&gt;document.createElementNS를&lt;/a&gt; 사용하여 지정된 &lt;code&gt;namespaceURI&lt;/code&gt; 로 요소를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c5de96cacaced42a2a56337781e78791e8784029" translate="yes" xml:space="preserve">
          <source>You can create new HTML elements or any other element you want with createElement. For example, if you want to create a new &amp;lt;p&amp;gt; element as a child of the &amp;lt;body&amp;gt; element, you can use the myBody in the previous example and append a new element node. To create a node simply call &lt;code&gt;document.createElement(&quot;tagname&quot;)&lt;/code&gt;. For example:</source>
          <target state="translated">createElement를 사용하여 새 HTML 요소 또는 원하는 다른 요소를 만들 수 있습니다. 예를 들어, &amp;lt;body&amp;gt; 요소의 자식으로 새 &amp;lt;p&amp;gt; 요소를 작성하려는 경우 이전 예에서 myBody를 사용하고 새 요소 노드를 추가 할 수 있습니다. 노드를 작성하려면 &lt;code&gt;document.createElement(&quot;tagname&quot;)&lt;/code&gt; 을 호출하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ec369e14d92aa4976b85617061f4e7b15046b076" translate="yes" xml:space="preserve">
          <source>You can delete a cookie by simply updating its expiration time to zero.</source>
          <target state="translated">만료 시간을 0으로 간단히 업데이트하여 쿠키를 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="467a507ae6d1d280bbd5e1383a4beed755b8dd72" translate="yes" xml:space="preserve">
          <source>You can delete keys and their values using &lt;code&gt;delete()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;delete()&lt;/code&gt; 사용하여 키와 해당 값을 삭제할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="174ea88788ae0d5a2971790a23a33b621a034eeb" translate="yes" xml:space="preserve">
          <source>You can detect when the value of this property changes by watching for an event of type &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icegatheringstatechange&quot;&gt;icegatheringstatechange&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icegatheringstatechange&quot;&gt;icegatheringstatechange&lt;/a&gt;&lt;/code&gt; 유형의 이벤트를 보고이 특성 값이 변경되는시기를 감지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="25ea728a03aca42f2aa04dc241d66280240a1be4" translate="yes" xml:space="preserve">
          <source>You can detect when this value has changed by watching for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/iceconnectionstatechange&quot;&gt;iceconnectionstatechange&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/iceconnectionstatechange&quot;&gt;iceconnectionstatechange&lt;/a&gt;&lt;/code&gt; 이벤트를 관찰하여이 값이 변경된시기를 감지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7097c3d1d7971f52ac229ebf527d429872cf4cbc" translate="yes" xml:space="preserve">
          <source>You can determine the number of pages in the history stack by looking at the value of the length property:</source>
          <target state="translated">length 속성 값을 확인하여 기록 스택의 페이지 수를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="158346e1ef76368de1640c6c29166fe20a325762" translate="yes" xml:space="preserve">
          <source>You can determine whether or not your attempt to switch to full-screen mode is successful by using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by &lt;code&gt;requestFullscreen()&lt;/code&gt;, as seen in the &lt;a href=&quot;#Example&quot;&gt;Example&lt;/a&gt; below.</source>
          <target state="translated">아래 &lt;a href=&quot;#Example&quot;&gt;예&lt;/a&gt; 에 표시된 것처럼 &lt;code&gt;requestFullscreen()&lt;/code&gt; 에서 반환 한 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 를 사용하여 전체 화면 모드로 전환하려는 시도가 성공했는지 여부를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1c00b4880de0aeed262858b177ae77fe5a668e0" translate="yes" xml:space="preserve">
          <source>You can disable the attribute array by calling &lt;a href=&quot;disablevertexattribarray&quot;&gt;&lt;code&gt;disableVertexAttribArray()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;disablevertexattribarray&quot;&gt; &lt;code&gt;disableVertexAttribArray()&lt;/code&gt; &lt;/a&gt; 를 호출하여 속성 배열을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8f053bc00c85c7d7cfd694811864ce33e3dfc0a6" translate="yes" xml:space="preserve">
          <source>You can disable this feature using the &lt;code&gt;dom.enable_performance_navigation_timing&lt;/code&gt; preference (see &lt;a href=&quot;https://bugzil.la/1403926&quot;&gt;bug 1403926&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;dom.enable_performance_navigation_timing&lt;/code&gt; 환경 설정을 사용하여이 기능을 비활성화 할 수 있습니다 ( &lt;a href=&quot;https://bugzil.la/1403926&quot;&gt;버그 1403926&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="7f854f63c29112a87156a6a81e53f6a717a01746" translate="yes" xml:space="preserve">
          <source>You can easily determine whether or not the context is the receiver for a presentation by checking the value of &lt;code&gt;navigator.receiver&lt;/code&gt;. If it's a non-null value, then the context is indeed receiving a presentation. If it's &lt;code&gt;null&lt;/code&gt;, there's no incoming presentation.</source>
          <target state="translated">&lt;code&gt;navigator.receiver&lt;/code&gt; 값을 확인하여 컨텍스트가 프리젠 테이션의 수신자인지 여부를 쉽게 판별 할 수 있습니다 . 널이 아닌 값이면 컨텍스트가 실제로 프리젠 테이션을 수신하는 것입니다. 그것의 경우 &lt;code&gt;null&lt;/code&gt; , 들어오는 프리젠 테이션 없습니다.</target>
        </trans-unit>
        <trans-unit id="07fdb417a28e1772d17e210f1a15d00984673810" translate="yes" xml:space="preserve">
          <source>You can effectively detect support for the Payment Request API by checking if the user's browser supports &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt;, i.e. &lt;code&gt;if (window.PaymentRequest)&lt;/code&gt;.</source>
          <target state="translated">사용자의 브라우저가 &lt;a href=&quot;../paymentrequest&quot;&gt; &lt;code&gt;PaymentRequest&lt;/code&gt; 를&lt;/a&gt; 지원 하는지 &lt;code&gt;if (window.PaymentRequest)&lt;/code&gt; 예 : if ( window.PaymentRequest )) 를 확인하여 Payment Request API에 대한 지원을 효과적으로 감지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="85f9230d5b9a15fdd3885cc4257019c18269c3e5" translate="yes" xml:space="preserve">
          <source>You can ensure that the value entered as a price is formatted correctly prior to submission by matching it against a simple &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/regular_expression&quot;&gt;regular expression&lt;/a&gt;:</source>
          <target state="translated">간단한 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/regular_expression&quot;&gt;정규식&lt;/a&gt; 과 비교하여 제출 전에 가격으로 입력 한 값의 형식이 올바른지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="779c032fcd47b3b113ee9502be8d42626d30c7f7" translate="yes" xml:space="preserve">
          <source>You can examine and set the transceiver's preferred directionality using &lt;a href=&quot;direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;direction&quot;&gt; &lt;code&gt;direction&lt;/code&gt; &lt;/a&gt; 속성을 사용하여 트랜시버의 선호 방향을 검사하고 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="24393bc698ab31f725810a9acb470ce2e501afc2" translate="yes" xml:space="preserve">
          <source>You can expand the capabilities of attribute mutation monitoring using other options:</source>
          <target state="translated">다른 옵션을 사용하여 속성 돌연변이 모니터링 기능을 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb27465cd632efa63e23b8943a9e9fe15df2a6e0" translate="yes" xml:space="preserve">
          <source>You can find a complete guide in &lt;a href=&quot;payment_request_api/using_the_payment_request_api&quot;&gt;Using the Payment Request API&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;payment_request_api/using_the_payment_request_api&quot;&gt;지불 요청 API 사용에서&lt;/a&gt; 완전한 안내서를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d7b8752e4ef487b902a499766589ad71288b64f0" translate="yes" xml:space="preserve">
          <source>You can find a full working example on GitHub &amp;mdash; see &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/abort-api&quot;&gt;abort-api&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/dom-examples/abort-api/&quot;&gt;see it running live also&lt;/a&gt;).</source>
          <target state="translated">당신은 GitHub의에서 전체 작업의 예를 찾을 수 있습니다 - 볼 &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/abort-api&quot;&gt;중단-API를&lt;/a&gt; ( &lt;a href=&quot;https://mdn.github.io/dom-examples/abort-api/&quot;&gt;라이브 실행을 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="4f0125a0f9082e5d75486570aacae26ceaa735af" translate="yes" xml:space="preserve">
          <source>You can find a number of examples at our &lt;a href=&quot;https://github.com/mdn/webaudio-examples/&quot;&gt;webaudio-example repo&lt;/a&gt; on GitHub.</source>
          <target state="translated">GitHub 의 &lt;a href=&quot;https://github.com/mdn/webaudio-examples/&quot;&gt;webaudio-example repo&lt;/a&gt; 에서 많은 예제를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="96963962d953ed838ef5d25b4a704c60e7482654" translate="yes" xml:space="preserve">
          <source>You can find a number of examples at these locations:</source>
          <target state="translated">다음 위치에서 여러 가지 예를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2146d86b5e473cd5609ca46d4945619c99f2320d" translate="yes" xml:space="preserve">
          <source>You can find a simple IIR filter demo live &lt;a href=&quot;https://codepen.io/Rumyra/pen/oPxvYB/&quot;&gt;on Codepen&lt;/a&gt;. Also see the &lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/iirfilter-node&quot;&gt;source code on GitHub&lt;/a&gt;. It includes some different coefficient values for different lowpass frequencies &amp;mdash; you can change the value of the &lt;code&gt;filterNumber&lt;/code&gt; constant to a value between 0 and 3 to check out the different available effects.</source>
          <target state="translated">&lt;a href=&quot;https://codepen.io/Rumyra/pen/oPxvYB/&quot;&gt;Codepen&lt;/a&gt; 에서 간단한 IIR 필터 데모를 라이브로 찾을 수 있습니다 . &lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/iirfilter-node&quot;&gt;GitHub&lt;/a&gt; 의 소스 코드 도 참조하십시오 . 저역 통과 주파수마다 다른 계수 값이 포함되어 있습니다. &lt;code&gt;filterNumber&lt;/code&gt; 상수 값을 0에서 3 사이 의 값으로 변경하여 사용 가능한 다른 효과를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16be333dad94783d1206e00eed81a24179537d71" translate="yes" xml:space="preserve">
          <source>You can find an example of this in the article &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Using_workers_in_extensions&quot;&gt;Using workers in extensions&lt;/a&gt; .</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Using_workers_in_extensions&quot;&gt;확장에 워커 사용&lt;/a&gt; 기사에서이 예제를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e8451a9cde019bb078ed5ed00601e5f8ec4879e" translate="yes" xml:space="preserve">
          <source>You can find more about basic Gamepad API usage in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API&quot;&gt;Using the Gamepad API&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Games/Techniques/Controls_Gamepad_API&quot;&gt;Implementing controls using the Gamepad API&lt;/a&gt;.</source>
          <target state="translated">Gamepad API 사용 및 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API&quot;&gt;Gamepad API&lt;/a&gt; 를 사용하여 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Games/Techniques/Controls_Gamepad_API&quot;&gt;컨트롤 구현&lt;/a&gt; 에서 기본 Gamepad API 사용법에 대한 자세한 내용을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="95c6ac768de0432484307d347f8fb345b6fa7994" translate="yes" xml:space="preserve">
          <source>You can find more examples on the MDN Web Docs GitHub repository:</source>
          <target state="translated">MDN Web Docs GitHub 리포지토리에서 더 많은 예제를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a8d00719598f44fdad5bb84e9d7c6a2b933a472" translate="yes" xml:space="preserve">
          <source>You can find more information about &lt;code&gt;getImageData()&lt;/code&gt; and general manipulation of canvas contents in &lt;a href=&quot;../canvas_api/tutorial/pixel_manipulation_with_canvas&quot;&gt;Pixel manipulation with canvas&lt;/a&gt;.</source>
          <target state="translated">canvas로 &lt;a href=&quot;../canvas_api/tutorial/pixel_manipulation_with_canvas&quot;&gt;픽셀 조작&lt;/a&gt; 에서 &lt;code&gt;getImageData()&lt;/code&gt; 및 캔버스 컨텐츠의 일반 조작에 대한 자세한 정보를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0767ab94b5b878e61e3fee426ca96d63f80a132a" translate="yes" xml:space="preserve">
          <source>You can find more information about &lt;code&gt;putImageData()&lt;/code&gt; and general manipulation of canvas contents in the article &lt;a href=&quot;../canvas_api/tutorial/pixel_manipulation_with_canvas&quot;&gt;Pixel manipulation with canvas&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;putImageData()&lt;/code&gt; 및 캔버스 내용의 일반적인 조작에 대한 자세한 정보 는 canvas를 사용한 &lt;a href=&quot;../canvas_api/tutorial/pixel_manipulation_with_canvas&quot;&gt;픽셀 조작&lt;/a&gt; 기사에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="821b90229f5e3d8cd2c1b265c1f7c5aecf2a1b23" translate="yes" xml:space="preserve">
          <source>You can find out more information on how these demos work in &lt;a href=&quot;web_workers_api/using_web_workers&quot;&gt;Using web workers&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;web_workers_api/using_web_workers&quot;&gt;웹 작업자 사용&lt;/a&gt; 에서 이러한 데모의 작동 방식에 대한 자세한 정보를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad01dabc5a87b2b8becd7cb755febdc479c55949" translate="yes" xml:space="preserve">
          <source>You can find the full code in our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-writer/&quot;&gt;Simple writer example&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-writer/&quot;&gt;Simple writer 예제&lt;/a&gt; 에서 전체 코드를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b8dbe1d5345851e36e3b244d2bc5ce277471150c" translate="yes" xml:space="preserve">
          <source>You can find the members of &lt;code&gt;HTMLDocument&lt;/code&gt; in the documentation of the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt; 인터페이스 의 문서에서 &lt;code&gt;HTMLDocument&lt;/code&gt; 의 멤버를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="646860b6b989f4d33a94771393214de7756fe084" translate="yes" xml:space="preserve">
          <source>You can get a &lt;a href=&quot;../textmetrics&quot;&gt;&lt;code&gt;TextMetrics&lt;/code&gt;&lt;/a&gt; object using the following code:</source>
          <target state="translated">다음 코드를 사용하여 &lt;a href=&quot;../textmetrics&quot;&gt; &lt;code&gt;TextMetrics&lt;/code&gt; &lt;/a&gt; 객체를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b4a17dd71bfd35e7158292266b561e1081204470" translate="yes" xml:space="preserve">
          <source>You can get a &lt;code&gt;2d&lt;/code&gt; context of the canvas with the following code:</source>
          <target state="translated">다음 코드를 사용하여 캔버스 의 &lt;code&gt;2d&lt;/code&gt; 컨텍스트를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cea1126ee88a9a3cca8bfae9fa5bd00f5d729fd1" translate="yes" xml:space="preserve">
          <source>You can get a data-URL of the canvas with the following lines:</source>
          <target state="translated">다음 줄을 사용하여 캔버스의 데이터 URL을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d97d2854993794f799775d4e5412e28992d471a5" translate="yes" xml:space="preserve">
          <source>You can get a window's visual viewport using &lt;a href=&quot;window/visualviewport&quot;&gt;&lt;code&gt;Window.visualViewport&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;window/visualviewport&quot;&gt; &lt;code&gt;Window.visualViewport&lt;/code&gt; 를&lt;/a&gt; 사용하여 창의 시각적 뷰포트를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4aa6bb3d24b88af6798bce5d43e541c81b8996b6" translate="yes" xml:space="preserve">
          <source>You can get back a reference to it from the &lt;code&gt;WebGLRenderingContext&lt;/code&gt; using the &lt;code&gt;canvas&lt;/code&gt; property:</source>
          <target state="translated">&lt;code&gt;canvas&lt;/code&gt; 속성을 사용하여 &lt;code&gt;WebGLRenderingContext&lt;/code&gt; 에서 참조를 다시 가져올 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="53e4c634cc9db32988f7dfd584561ff8b364a10d" translate="yes" xml:space="preserve">
          <source>You can get the height of the canvas with the following code:</source>
          <target state="translated">다음 코드를 사용하여 캔버스의 높이를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17883140b435c2b86cc74106cf313b62b1ce02fe" translate="yes" xml:space="preserve">
          <source>You can get the height of the drawing buffer with the following lines:</source>
          <target state="translated">다음 줄을 사용하여 그리기 버퍼의 높이를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff2c7b546c7d4e7bd0764a3641d2b98ec57819c3" translate="yes" xml:space="preserve">
          <source>You can get the width of the canvas with the following code:</source>
          <target state="translated">다음 코드를 사용하여 캔버스 너비를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="109472ddfc5e638419b6b19fa5763a87d1a21f52" translate="yes" xml:space="preserve">
          <source>You can get the width of the drawing buffer with the following lines:</source>
          <target state="translated">다음 줄을 사용하여 그리기 버퍼의 너비를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79b7abb68b2b7a339ecbbb272f849a9dad453f37" translate="yes" xml:space="preserve">
          <source>You can grab a set of keys within a range. To learn more, see &lt;a href=&quot;idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">범위 내에서 일련의 키를 잡을 수 있습니다. 자세한 내용은 &lt;a href=&quot;idbkeyrange&quot;&gt; &lt;code&gt;IDBKeyRange&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="50ae302f28a6a19d0207abe6102486769c4cff88" translate="yes" xml:space="preserve">
          <source>You can grab data using the following methods:</source>
          <target state="translated">다음 방법을 사용하여 데이터를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fcfb007e223ec34535cad6819cc086e262a45c6a" translate="yes" xml:space="preserve">
          <source>You can have an unlimited number of cursors at the same time. You always get the same &lt;code&gt;IDBCursor&lt;/code&gt; object representing a given cursor. Operations are performed on the underlying index or object store.</source>
          <target state="translated">동시에 커서를 무제한으로 가질 수 있습니다. 주어진 커서를 나타내는 동일한 &lt;code&gt;IDBCursor&lt;/code&gt; 객체를 항상 얻습니다 . 기본 인덱스 또는 객체 저장소에서 작업이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="1668dde2a8bd9291a6f7c077319945286fef742f" translate="yes" xml:space="preserve">
          <source>You can have an unlimited number of cursors at the same time. You always get the same &lt;code&gt;IDBCursorWithValue&lt;/code&gt; object representing a given cursor. Operations are performed on the underlying index or object store.</source>
          <target state="translated">동시에 커서를 무제한으로 가질 수 있습니다. 주어진 커서를 나타내는 동일한 &lt;code&gt;IDBCursorWithValue&lt;/code&gt; 객체를 항상 얻습니다 . 기본 인덱스 또는 객체 저장소에서 작업이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="69ebf13baf71b6185e01ec21f7905727873a0866" translate="yes" xml:space="preserve">
          <source>You can have as many terms defined as you want on separate lines following the above structure, and include fairly complex grammar definitions. For this basic demo, we are just keeping things simple.</source>
          <target state="translated">위의 구조에 따라 별도의 줄에 원하는만큼 많은 용어를 정의 할 수 있으며 상당히 복잡한 문법 정의를 포함 할 수 있습니다. 이 기본 데모에서는 간단하게 유지합니다.</target>
        </trans-unit>
        <trans-unit id="2fa14a35a47c3f64fc27b0b6d3d55f360e65e923" translate="yes" xml:space="preserve">
          <source>You can learn more about ICE roles in &lt;a href=&quot;../webrtc_api/connectivity#Choosing_a_candidate_pair&quot;&gt;Choosing a candidate pair&lt;/a&gt; in &lt;a href=&quot;../webrtc_api/connectivity&quot;&gt;WebRTC connectivity&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../webrtc_api/connectivity&quot;&gt;WebRTC 연결&lt;/a&gt; 에서 &lt;a href=&quot;../webrtc_api/connectivity#Choosing_a_candidate_pair&quot;&gt;후보 쌍 선택&lt;/a&gt; 에서 ICE 역할에 대해 자세히 학습 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="12261901d0fa1d60e8296b4fe113f509b9ce09e9" translate="yes" xml:space="preserve">
          <source>You can learn more about ICE roles in &lt;a href=&quot;webrtc_api/connectivity#Choosing_a_candidate_pair&quot;&gt;Choosing a candidate pair&lt;/a&gt; in &lt;a href=&quot;webrtc_api/connectivity&quot;&gt;WebRTC connectivity&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;webrtc_api/connectivity&quot;&gt;WebRTC 연결&lt;/a&gt; 에서 &lt;a href=&quot;webrtc_api/connectivity#Choosing_a_candidate_pair&quot;&gt;후보 쌍 선택&lt;/a&gt; 에서 ICE 역할에 대해 자세히 학습 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a17352e1345526bd591255ae8ccb9362c81cc9a8" translate="yes" xml:space="preserve">
          <source>You can learn more from the article about &lt;code&gt;&lt;a href=&quot;https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection&quot;&gt;EventListenerOptions&lt;/a&gt;&lt;/code&gt; from the &lt;a href=&quot;https://wicg.github.io/admin/charter.html&quot;&gt;Web Incubator Community Group&lt;/a&gt;.</source>
          <target state="translated">당신에 관한 기사에서 더 배울 수 &lt;code&gt;&lt;a href=&quot;https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection&quot;&gt;EventListenerOptions&lt;/a&gt;&lt;/code&gt; 로부터 &lt;a href=&quot;https://wicg.github.io/admin/charter.html&quot;&gt;웹 보육 커뮤니티 그룹&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1014998d5e4a30001a94698bc8a34fa494e215e3" translate="yes" xml:space="preserve">
          <source>You can listen out for the &lt;a href=&quot;installevent&quot;&gt;&lt;code&gt;InstallEvent&lt;/code&gt;&lt;/a&gt;; a standard action is to prepare your service worker for usage when this fires, for example by creating a cache using the built in storage API, and placing assets inside it that you'll want for running your app offline.</source>
          <target state="translated">&lt;a href=&quot;installevent&quot;&gt; &lt;code&gt;InstallEvent&lt;/code&gt; 를&lt;/a&gt; 들을 수 있습니다 . 기본 조치는 내장 스토리지 API를 사용하여 캐시를 작성하고 앱을 오프라인으로 실행하려는 자산을 배치하는 등 서비스 담당자가이를 실행할 때 사용하도록 준비하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d6cd2fbb0b65441e1c0c67b8c6ce39a42d06ddf7" translate="yes" xml:space="preserve">
          <source>You can make use of ready-made readable streams via mechanisms like a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response/body&quot;&gt;&lt;code&gt;Response.body&lt;/code&gt;&lt;/a&gt; from a fetch request, or roll your own streams using the &lt;a href=&quot;../readablestream/readablestream&quot;&gt;&lt;code&gt;ReadableStream.ReadableStream()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">페치 요청 의 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response/body&quot;&gt; &lt;code&gt;Response.body&lt;/code&gt; &lt;/a&gt; 와 같은 메커니즘을 통해 미리 작성된 읽기 가능한 스트림을 사용하거나 &lt;a href=&quot;../readablestream/readablestream&quot;&gt; &lt;code&gt;ReadableStream.ReadableStream()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 자체 스트림을 롤링 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1c9df0f4b4f6aca190478800188e98af8330dcef" translate="yes" xml:space="preserve">
          <source>You can make use of writable streams using the &lt;a href=&quot;../writablestream/writablestream&quot;&gt;&lt;code&gt;WritableStream.WritableStream()&lt;/code&gt;&lt;/a&gt; constructor. These currently have very limited availability in browsers.</source>
          <target state="translated">&lt;a href=&quot;../writablestream/writablestream&quot;&gt; &lt;code&gt;WritableStream.WritableStream()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 쓰기 가능한 스트림을 사용할 수 있습니다 . 이들은 현재 브라우저에서 가용성이 매우 제한되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c39ff9b79a3f13fe329a5b0cb29aa98a3154e6b" translate="yes" xml:space="preserve">
          <source>You can manipulate files of other formats the same way. Here is how to preview uploaded video:</source>
          <target state="translated">다른 형식의 파일을 같은 방식으로 조작 할 수 있습니다. 업로드 된 비디오를 미리 보는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f1d55174f97737be9decae5647b132c1753c676a" translate="yes" xml:space="preserve">
          <source>You can modify the &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property during the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; or &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; events, if for example, a particular drop target only supports certain operations. You can modify the &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property to override the user effect, and enforce a specific drop operation to occur. Note that this effect must be one listed within the &lt;a href=&quot;../datatransfer/effectallowed&quot;&gt;&lt;code&gt;effectAllowed&lt;/code&gt;&lt;/a&gt; property. Otherwise, it will be set to an alternate value that is allowed.</source>
          <target state="translated">예를 들어 특정 놓기 대상이 특정 작업 만 지원하는 경우 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 이벤트 중에 &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt; 속성을 수정할 수 있습니다 . &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt; 속성을 수정하여 사용자 효과를 재정의하고 특정 삭제 작업을 수행 할 수 있습니다. 이 효과는 &lt;a href=&quot;../datatransfer/effectallowed&quot;&gt; &lt;code&gt;effectAllowed&lt;/code&gt; &lt;/a&gt; 속성 내에 나열된 것이 어야 합니다. 그렇지 않으면 허용되는 대체 값으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f4600f2168e879d37c2acd4841614abcdb7be9ec" translate="yes" xml:space="preserve">
          <source>You can navigate to &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/about:debugging&quot;&gt;about:debugging&lt;/a&gt;&lt;/code&gt; to see what SWs are registered and update/remove them.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/about:debugging&quot;&gt;about:debugging&lt;/a&gt;&lt;/code&gt; 으로 이동하여 등록 된 SW를 확인하고 SW를 업데이트 / 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e6a7306ec25116f31a960a0fc87e528acca8e54" translate="yes" xml:space="preserve">
          <source>You can not reliably because the users can prevent the window from being resized by unchecking the &lt;code&gt;Edit/Preferences/Advanced/Scripts &amp;amp; Plug-ins/Allow Scripts to/ Move or resize existing windows&lt;/code&gt; checkbox in Mozilla or &lt;code&gt;Tools/Options.../Content tab/Enable Javascript/Advanced button/Move or resize existing windows&lt;/code&gt; checkbox in Firefox or by setting &lt;code&gt;dom.disable_window_move_resize&lt;/code&gt; to &lt;var&gt;true&lt;/var&gt; in &lt;code&gt;about:config&lt;/code&gt; or by editing accordingly their &lt;a href=&quot;http://www.mozilla.org/support/firefox/edit#user&quot;&gt;user.js file&lt;/a&gt;.</source>
          <target state="translated">Mozilla 또는 &lt;code&gt;Tools/Options.../Content tab/Enable Javascript/Advanced button/Move or resize existing windows&lt;/code&gt; 의 &lt;code&gt;Edit/Preferences/Advanced/Scripts &amp;amp; Plug-ins/Allow Scripts to/ Move or resize existing windows&lt;/code&gt; 확인란을 선택 취소하여 사용자가 창의 크기를 조정할 수 없기 때문에 안정적으로 신뢰할 수 없습니다. 탭 / 자바 스크립트 / 고급 버튼 / 이동을 사용하거나 기존의 윈도우 크기를 조정 파이어 폭스 나 설정하여 체크 박스를 &lt;code&gt;dom.disable_window_move_resize&lt;/code&gt; 을 에 &lt;var&gt;true&lt;/var&gt; 에 &lt;code&gt;about:config&lt;/code&gt; 또는 이에 따른 편집 &lt;a href=&quot;http://www.mozilla.org/support/firefox/edit#user&quot;&gt;의 user.js 파일을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6d625c32b7730c186506b1632f47f0aed0879232" translate="yes" xml:space="preserve">
          <source>You can not. &lt;strong&gt;New windows not opened by javascript can not as a rule be closed by JavaScript.&lt;/strong&gt; The JavaScript Console in Mozilla-based browsers will report the warning message: &lt;code&gt;&quot;Scripts may not close windows that were not opened by script.&quot;&lt;/code&gt; Otherwise the history of URLs visited during the browser session would be lost.</source>
          <target state="translated">당신은 할 수 없습니다. &lt;strong&gt;자바 스크립트로 열지 않은 새 창은 일반적으로 JavaScript로 닫을 수 없습니다. &lt;/strong&gt;Mozilla 기반 브라우저의 JavaScript 콘솔은 &lt;code&gt;&quot;Scripts may not close windows that were not opened by script.&quot;&lt;/code&gt; 라는 경고 메시지를보고합니다 . 그렇지 않으면 브라우저 세션 중에 방문한 URL 기록이 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="8160c73d835cc474fe9f6792243ca3949812238f" translate="yes" xml:space="preserve">
          <source>You can now &lt;a href=&quot;https://webrtc-from-chat.glitch.me/&quot;&gt;try out this example on Glitch&lt;/a&gt; to see it in action. Open the Web console on both devices and look at the logged output&amp;mdash;although you don't see it in the code as shown above, the code on the server (and on &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-from-chat&quot;&gt;GitHub&lt;/a&gt;) has a lot of console output so you can see the signaling and connection processes at work.</source>
          <target state="translated">이제 &lt;a href=&quot;https://webrtc-from-chat.glitch.me/&quot;&gt;글리치에서이 예제를 시도하여&lt;/a&gt; 실제로 작동하는지 확인할 수 있습니다. 두 장치 모두에서 웹 콘솔을 열고 기록 된 출력을 확인하십시오. 위와 같이 코드에는 표시되지 않지만 서버 및 &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-from-chat&quot;&gt;GitHub&lt;/a&gt; 의 코드 에는 많은 콘솔 출력이 있으므로 신호를 볼 수 있습니다 그리고 직장에서의 연결 과정.</target>
        </trans-unit>
        <trans-unit id="206e0ed35388abbf30de765940d8894ff65be8a2" translate="yes" xml:space="preserve">
          <source>You can now create another &lt;code&gt;Headers&lt;/code&gt; object, passing it the first &lt;code&gt;Headers&lt;/code&gt; object as its init object:</source>
          <target state="translated">이제 다른 &lt;code&gt;Headers&lt;/code&gt; 객체를 만들어 첫 번째 &lt;code&gt;Headers&lt;/code&gt; 객체를 초기화 객체로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="39d3a471da89fe4af3f873a3385c34b9fabf11ab" translate="yes" xml:space="preserve">
          <source>You can only include in the &lt;code&gt;codecs&lt;/code&gt; list codecs which the transceiver actually supports. That means that either the associated &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; needs to support every codec in the list. If any unsupported codecs are listed, the browser will throw an &lt;code&gt;InvalidAccessError&lt;/code&gt; exception when you call this method.</source>
          <target state="translated">송수신기가 실제로 지원하는 &lt;code&gt;codecs&lt;/code&gt; 목록 만 코덱에 포함 할 수 있습니다 . 즉, 관련 &lt;a href=&quot;../rtcrtpsender&quot;&gt; &lt;code&gt;RTCRtpSender&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../rtcrtpreceiver&quot;&gt; &lt;code&gt;RTCRtpReceiver&lt;/code&gt; &lt;/a&gt; 가 목록의 모든 코덱을 지원해야합니다. 지원되지 않는 코덱이 나열되면 이 메서드를 호출 할 때 브라우저에서 &lt;code&gt;InvalidAccessError&lt;/code&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="73d59eccf554bd34bd55f54ebc813a802ec23c01" translate="yes" xml:space="preserve">
          <source>You can only overwrite a directory if it's empty.</source>
          <target state="translated">디렉토리가 비어있는 경우에만 겹쳐 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="992ec8ee602ff09079e443eafd09ce8f880d6b53" translate="yes" xml:space="preserve">
          <source>You can only return &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; objects of &lt;a href=&quot;../response/type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; &quot;&lt;code&gt;opaque&lt;/code&gt;&quot; if the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;fetchEvent.request&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../request/mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; is &quot;&lt;code&gt;no-cors&lt;/code&gt;&quot;. This prevents the leaking of private data.</source>
          <target state="translated">&lt;a href=&quot;request&quot;&gt; &lt;code&gt;fetchEvent.request&lt;/code&gt; &lt;/a&gt; 객체의 &lt;a href=&quot;../request/mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt; 가 &quot; &lt;code&gt;no-cors&lt;/code&gt; cors &quot;인 경우 &quot; &lt;code&gt;opaque&lt;/code&gt; &quot; &lt;a href=&quot;../response/type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; 객체 만 반환 할 수 있습니다 . 이것은 개인 데이터의 유출을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="d5bc8889492e5b0d711da173fb10bce03c7a2a6a" translate="yes" xml:space="preserve">
          <source>You can only return &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; objects of &lt;a href=&quot;../response/type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; &quot;&lt;code&gt;opaqueredirect&lt;/code&gt;&quot; if the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;fetchEvent.request&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../request/mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; is &quot;&lt;code&gt;manual&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;a href=&quot;request&quot;&gt; &lt;code&gt;fetchEvent.request&lt;/code&gt; &lt;/a&gt; 객체의 &lt;a href=&quot;../request/mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt; 가 &quot; &lt;code&gt;manual&lt;/code&gt; &quot;인 경우 &quot; &lt;code&gt;opaqueredirect&lt;/code&gt; &quot; &lt;a href=&quot;../response/type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; 객체 만 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3dbbab80633765bdbf42e622140207104bfc56cf" translate="yes" xml:space="preserve">
          <source>You can optionally supply an argument to label the timestamp, and this label will then be shown alongside the marker.</source>
          <target state="translated">선택적으로 타임 스탬프에 레이블을 지정하는 인수를 제공하면이 레이블이 마커와 함께 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c333e5528578081d52db4c7d37aa94dcdcdb8e96" translate="yes" xml:space="preserve">
          <source>You can optionally supply an argument to name the profile and this then enables you to stop only that profile if multiple profiles being recorded. See &lt;a href=&quot;profileend&quot;&gt;&lt;code&gt;Console.profileEnd()&lt;/code&gt;&lt;/a&gt; to see how this argument is interpreted.</source>
          <target state="translated">선택적으로 프로파일 이름을 지정하기위한 인수를 제공 할 수 있으며 여러 프로파일이 기록되는 경우 해당 프로파일 만 중지 할 수 있습니다. 이 인수가 어떻게 해석되는지 보려면 &lt;a href=&quot;profileend&quot;&gt; &lt;code&gt;Console.profileEnd()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d9d1acdede8f19168cbbd67ca1b36562f45ce4c9" translate="yes" xml:space="preserve">
          <source>You can optionally supply an argument to name the profile. Doing so enables you to stop only that profile if you have multiple profiles being recorded.</source>
          <target state="translated">선택적으로 프로파일 이름을 지정하는 인수를 제공 할 수 있습니다. 그렇게하면 여러 개의 프로파일이 기록 된 경우 해당 프로파일 만 중지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bcdd7efc6a8bd407631335b132aec044aea74e22" translate="yes" xml:space="preserve">
          <source>You can override this behavior by explicitly setting the value of &lt;code&gt;passive&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, as shown here:</source>
          <target state="translated">다음 과 같이 &lt;code&gt;passive&lt;/code&gt; 값 을 &lt;code&gt;false&lt;/code&gt; 로 명시 적으로 설정하여이 동작을 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3861bee411d9287b03fab231b5fa34c6cd39b86d" translate="yes" xml:space="preserve">
          <source>You can perform the opposite operation&amp;mdash;converting a DOM tree into XML or HTML source&amp;mdash;using the &lt;a href=&quot;xmlserializer&quot;&gt;&lt;code&gt;XMLSerializer&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;xmlserializer&quot;&gt; &lt;code&gt;XMLSerializer&lt;/code&gt; &lt;/a&gt; 인터페이스를 사용하여 DOM 트리를 XML 또는 HTML 소스로 변환하는 반대 작업을 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e2cab38fd2aceeaff00b1705e5607946758c24c4" translate="yes" xml:space="preserve">
          <source>You can play with this effect using, for example, the Firefox developer tools' &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Style_Editor&quot;&gt;style editor&lt;/a&gt;; see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector/How_to/Edit_CSS_filters&quot;&gt;Edit CSS filters&lt;/a&gt; for details on how to do so.</source>
          <target state="translated">예를 들어 Firefox 개발자 도구의 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Style_Editor&quot;&gt;스타일 편집기를&lt;/a&gt; 사용하여이 효과를 사용할 수 있습니다 . 그렇게하는 방법에 대한 자세한 내용은 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector/How_to/Edit_CSS_filters&quot;&gt;CSS 필터 편집을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="fdfb4e7f5c0a2e73f38f3affee65e4ec926eb84e" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;CustomEvent()&lt;/code&gt; constructor functionality in Internet Explorer 9 and higher with the following code:</source>
          <target state="translated">다음 코드를 사용하여 Internet Explorer 9 이상에서 &lt;code&gt;CustomEvent()&lt;/code&gt; 생성자 기능을 폴리 필 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a572e3f2a629f41042b269411b22ebd433dad10a" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;MouseEvent()&lt;/code&gt; constructor functionality in Internet Explorer 9 and higher with the following code:</source>
          <target state="translated">Internet Explorer 9 이상에서 &lt;code&gt;MouseEvent()&lt;/code&gt; 생성자 기능을 다음 코드를 사용하여 채울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e442c1816dcbbaf5c4c621e9bec96be836911d10" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;after() method&lt;/code&gt; in Internet Explorer 9 and higher with the following code:</source>
          <target state="translated">다음 코드를 사용하여 Internet Explorer 9 이상에서 &lt;code&gt;after() method&lt;/code&gt; 를 polyfill 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="65713c6e18b5f14a54453d50c54a806251283494" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;append() method&lt;/code&gt; in Internet Explorer 9 and higher with the following code:</source>
          <target state="translated">Internet Explorer 9 이상에서 &lt;code&gt;append() method&lt;/code&gt; 를 다음 코드를 사용하여 채울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b05507c01e36bbbee1f78611653a700bb189adf" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;before() method&lt;/code&gt; in Internet Explorer 9 and higher with the following code:</source>
          <target state="translated">Internet Explorer 9 이상에서 &lt;code&gt;before() method&lt;/code&gt; 를 다음 코드를 사용하여 채울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="77bdeb545ab8b78d3b9f1681df9200620c75fe34" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;prepend()&lt;/code&gt; method if it's not available:</source>
          <target state="translated">&lt;code&gt;prepend()&lt;/code&gt; 메소드를 사용할 수없는 경우 polyfill 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93679d0f87e27250a1320708f739d2d03aa569d2" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;remove() method&lt;/code&gt; in Internet Explorer 9 and higher with the following code:</source>
          <target state="translated">다음 코드를 사용하여 Internet Explorer 9 이상에서 &lt;code&gt;remove() method&lt;/code&gt; 를 polyfill 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b6df9b25046edf035cd4cce70d4aa1358cf924f4" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;replaceWith()&lt;/code&gt; method in Internet Explorer 10+ and higher with the following code:</source>
          <target state="translated">다음 코드를 사용하여 Internet Explorer 10 이상에서 &lt;code&gt;replaceWith()&lt;/code&gt; 메서드를 polyfill 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="97456efa07b953981a1aec8e92e5f09fc5220bdf" translate="yes" xml:space="preserve">
          <source>You can polyfill the insertAdjacentText&lt;code&gt;() method&lt;/code&gt; in Internet Explorer 5.5 (maybe earlier) and higher with the following code:</source>
          <target state="translated">다음 코드를 사용하여 Internet Explorer 5.5 이상에서 insertAdjacentText &lt;code&gt;() method&lt;/code&gt; 를 폴리 필 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="38b75097c5091847113ea9ef86d82b2ccf641a72" translate="yes" xml:space="preserve">
          <source>You can provide data in multiple formats. To do this, call the &lt;a href=&quot;../datatransfer/setdata&quot;&gt;&lt;code&gt;setData()&lt;/code&gt;&lt;/a&gt; method multiple times with different formats. You should call it with formats in order from most specific to least specific.</source>
          <target state="translated">여러 형식으로 데이터를 제공 할 수 있습니다. 이렇게하려면 다른 형식으로 &lt;a href=&quot;../datatransfer/setdata&quot;&gt; &lt;code&gt;setData()&lt;/code&gt; &lt;/a&gt; 메서드를 여러 번 호출하십시오 . 가장 구체적인 것부터 가장 작은 것까지 형식으로 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="d78b8bac9442fd34576b47c43b8e4309cc95ee0a" translate="yes" xml:space="preserve">
          <source>You can query the following &lt;code&gt;pname&lt;/code&gt; parameters when using &lt;a href=&quot;../webgl_api/using_extensions&quot;&gt;WebGL extensions&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../webgl_api/using_extensions&quot;&gt;WebGL 확장을&lt;/a&gt; 사용할 때 다음 &lt;code&gt;pname&lt;/code&gt; 매개 변수를 조회 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4a051147d998adb406fada67b38a9b235de233f9" translate="yes" xml:space="preserve">
          <source>You can query the following &lt;code&gt;pname&lt;/code&gt; parameters when using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; 를&lt;/a&gt; 사용할 때 다음 &lt;code&gt;pname&lt;/code&gt; 매개 변수를 조회 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9f9b7d654dcef4add84088b7531d52f8474df92" translate="yes" xml:space="preserve">
          <source>You can query the following &lt;code&gt;pname&lt;/code&gt; parameters when using a &lt;a href=&quot;../webglrenderingcontext&quot;&gt;&lt;code&gt;WebGLRenderingContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../webglrenderingcontext&quot;&gt; &lt;code&gt;WebGLRenderingContext&lt;/code&gt; &lt;/a&gt; 사용시 다음 &lt;code&gt;pname&lt;/code&gt; 매개 변수를 조회 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c274b7c60b523412b24ff7d93f6cc0deddfc3cf4" translate="yes" xml:space="preserve">
          <source>You can read about the theory of the Web Audio API in a lot more detail in our article &lt;a href=&quot;web_audio_api/basic_concepts_behind_web_audio_api&quot;&gt;Basic concepts behind Web Audio API&lt;/a&gt;.</source>
          <target state="translated">Web Audio API에 대한 &lt;a href=&quot;web_audio_api/basic_concepts_behind_web_audio_api&quot;&gt;기본 개념&lt;/a&gt; 기사에서 Web Audio API 이론에 대해보다 자세히 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="50dda598d80f66d593e012bbaf4de63fbe03e58e" translate="yes" xml:space="preserve">
          <source>You can read the state of the current history entry without waiting for a &lt;code&gt;popstate&lt;/code&gt; event using the &lt;code&gt;history.state&lt;/code&gt; property like this:</source>
          <target state="translated">다음 과 같이 &lt;code&gt;history.state&lt;/code&gt; 속성을 사용하여 &lt;code&gt;popstate&lt;/code&gt; 이벤트를 기다리지 않고 현재 기록 항목의 상태를 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f8358c51de5b638021364b57020141a227a5b945" translate="yes" xml:space="preserve">
          <source>You can register a service worker from inside a standard worker, and use associated functionality.</source>
          <target state="translated">표준 작업자 내부에서 서비스 작업자를 등록하고 관련 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e8e9ee919063907906801a2f07cd71420305ce9" translate="yes" xml:space="preserve">
          <source>You can register listeners for these events in a few familiar ways:</source>
          <target state="translated">몇 가지 익숙한 방법으로 이러한 이벤트에 대한 리스너를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f0437aa66c53b79fba0312ab25233b8cb355cc4" translate="yes" xml:space="preserve">
          <source>You can request a certain latency during &lt;a href=&quot;audiocontext&quot;&gt;construction time&lt;/a&gt; with the &lt;code&gt;latencyHint&lt;/code&gt; option but the browser may ignore the option.</source>
          <target state="translated">&lt;code&gt;latencyHint&lt;/code&gt; 옵션을 사용하여 &lt;a href=&quot;audiocontext&quot;&gt;구성 시간&lt;/a&gt; 동안 특정 대기 시간 을 요청할 수 있지만 브라우저는이 옵션을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d20c1282a17b3a7031fd0afe481e8e9f37f4715" translate="yes" xml:space="preserve">
          <source>You can retrieve &lt;code&gt;VRLayerInit&lt;/code&gt; objects using &lt;a href=&quot;vrdisplay/getlayers&quot;&gt;&lt;code&gt;VRDisplay.getLayers()&lt;/code&gt;&lt;/a&gt;, and present them using the &lt;a href=&quot;vrdisplay/requestpresent&quot;&gt;&lt;code&gt;VRDisplay.requestPresent()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;vrdisplay/getlayers&quot;&gt; &lt;code&gt;VRDisplay.getLayers()&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;VRLayerInit&lt;/code&gt; 오브젝트를 검색 하고 &lt;a href=&quot;vrdisplay/requestpresent&quot;&gt; &lt;code&gt;VRDisplay.requestPresent()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여이를 제시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e7bc49a66229b15d558e46a83af5facf5bd6a40" translate="yes" xml:space="preserve">
          <source>You can retrieve a &lt;code&gt;Headers&lt;/code&gt; object via the &lt;a href=&quot;request/headers&quot;&gt;&lt;code&gt;Request.headers&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;response/headers&quot;&gt;&lt;code&gt;Response.headers&lt;/code&gt;&lt;/a&gt; properties, and create a new &lt;code&gt;Headers&lt;/code&gt; object using the &lt;a href=&quot;headers/headers&quot;&gt;&lt;code&gt;Headers.Headers()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;a href=&quot;request/headers&quot;&gt; &lt;code&gt;Request.headers&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;response/headers&quot;&gt; &lt;code&gt;Response.headers&lt;/code&gt; &lt;/a&gt; 속성을 통해 &lt;code&gt;Headers&lt;/code&gt; 객체를 검색 하고 &lt;a href=&quot;headers/headers&quot;&gt; &lt;code&gt;Headers.Headers()&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 새 &lt;code&gt;Headers&lt;/code&gt; 객체를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="91b0e6afa0cb0673a77f57b611cdbb1d93076a84" translate="yes" xml:space="preserve">
          <source>You can retrieve a lot of information about each request by calling parameters of the &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object returned by the &lt;a href=&quot;../fetchevent&quot;&gt;&lt;code&gt;FetchEvent&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../fetchevent&quot;&gt; &lt;code&gt;FetchEvent&lt;/code&gt; 가&lt;/a&gt; 반환 한 &lt;a href=&quot;../request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt; 객체의 매개 변수를 호출하여 각 요청에 대한 많은 정보를 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="510df6e88737bc81b6817b5bc60c3d417ee844a4" translate="yes" xml:space="preserve">
          <source>You can retrieve a reference to an element's shadow root using its &lt;a href=&quot;element/shadowroot&quot;&gt;&lt;code&gt;Element.shadowRoot&lt;/code&gt;&lt;/a&gt; property, provided it was created using &lt;a href=&quot;element/attachshadow&quot;&gt;&lt;code&gt;Element.attachShadow()&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;mode&lt;/code&gt; option set to &lt;code&gt;open&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;element/attachshadow&quot;&gt; &lt;code&gt;Element.attachShadow()&lt;/code&gt; &lt;/a&gt; 사용하여 &lt;code&gt;mode&lt;/code&gt; 옵션이 &lt;code&gt;open&lt;/code&gt; 으로 설정된 경우 &lt;a href=&quot;element/shadowroot&quot;&gt; &lt;code&gt;Element.shadowRoot&lt;/code&gt; &lt;/a&gt; 속성을 사용하여 요소의 섀도우 루트에 대한 참조를 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6a6e5099572c9bc1b4692e8efbdb621f80e40989" translate="yes" xml:space="preserve">
          <source>You can retrieve other types of data as well. If the data is a link, it should have the type &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#link&quot;&gt;text/uri-list&lt;/a&gt;. You could then insert a link into the content.</source>
          <target state="translated">다른 유형의 데이터도 검색 할 수 있습니다. 데이터가 링크 인 경우 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#link&quot;&gt;text / uri-list&lt;/a&gt; 유형이어야 합니다 . 그런 다음 컨텐츠에 링크를 삽입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73838202745060ec19e18470803bc3eb3c31552f" translate="yes" xml:space="preserve">
          <source>You can retrieve records in an object store through the primary key or by using an index. An index lets you look up records in an object store using properties of the values in the object stores records other than the primary key</source>
          <target state="translated">기본 키 또는 색인을 사용하여 오브젝트 저장소에서 레코드를 검색 할 수 있습니다. 인덱스를 사용하면 기본 키 이외의 객체 저장소 레코드 값 속성을 사용하여 객체 저장소에서 레코드를 조회 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d78f780b80186b4e6779e404b265126738c4b4d" translate="yes" xml:space="preserve">
          <source>You can retrieve the &lt;code&gt;HTMLHtmlElement&lt;/code&gt; object for a given document by reading the value of the &lt;a href=&quot;document/documentelement&quot;&gt;&lt;code&gt;document.documentElement&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;document/documentelement&quot;&gt; &lt;code&gt;document.documentElement&lt;/code&gt; &lt;/a&gt; 속성 값을 읽어 주어진 문서에 대한 &lt;code&gt;HTMLHtmlElement&lt;/code&gt; 객체를 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c3ebb79c730ad8b52d39116a50fc948035eba509" translate="yes" xml:space="preserve">
          <source>You can run code in response to the selection being changed, or a new selection being started, using the &lt;a href=&quot;globaleventhandlers/onselectionchange&quot;&gt;&lt;code&gt;GlobalEventHandlers.onselectionchange&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;globaleventhandlers/onselectstart&quot;&gt;&lt;code&gt;GlobalEventHandlers.onselectstart&lt;/code&gt;&lt;/a&gt; event handlers.</source>
          <target state="translated">&lt;a href=&quot;globaleventhandlers/onselectionchange&quot;&gt; &lt;code&gt;GlobalEventHandlers.onselectionchange&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;globaleventhandlers/onselectstart&quot;&gt; &lt;code&gt;GlobalEventHandlers.onselectstart&lt;/code&gt; &lt;/a&gt; 이벤트 핸들러를 사용하여 선택 사항이 변경되거나 새로운 선택 사항이 시작되면 응답하여 코드를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="68dea9f12f4a0d26ea62bc5748f7cb58fd5c489b" translate="yes" xml:space="preserve">
          <source>You can run whatever code you like inside the worker thread, with some exceptions. For example, you can't directly manipulate the DOM from inside a worker, or use some default methods and properties of the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; object. But you can use a large number of items available under &lt;code&gt;window&lt;/code&gt;, including &lt;a href=&quot;../websockets_api&quot;&gt;WebSockets&lt;/a&gt;, and data storage mechanisms like &lt;a href=&quot;../indexeddb_api&quot;&gt;IndexedDB&lt;/a&gt; and the Firefox OS-only &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Data_Store_API&quot;&gt;Data Store API&lt;/a&gt;. See &lt;a href=&quot;functions_and_classes_available_to_workers&quot;&gt;Functions and classes available to workers&lt;/a&gt; for more details.</source>
          <target state="translated">몇 가지 예외를 제외하고 작업자 스레드 내에서 원하는 코드를 실행할 수 있습니다. 예를 들어 작업자 내부에서 DOM을 직접 조작하거나 &lt;a href=&quot;../window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt; 객체 의 일부 기본 메서드 및 속성을 사용할 수 없습니다 . 그러나 &lt;a href=&quot;../websockets_api&quot;&gt;WebSockets&lt;/a&gt; 및 &lt;a href=&quot;../indexeddb_api&quot;&gt;IndexedDB&lt;/a&gt; 및 Firefox OS 전용 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Data_Store_API&quot;&gt;데이터 저장소 API&lt;/a&gt; 와 같은 데이터 저장 메커니즘을 포함하여 &lt;code&gt;window&lt;/code&gt; 에서 사용 가능한 많은 항목을 사용할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;functions_and_classes_available_to_workers&quot;&gt;작업자&lt;/a&gt; 가 사용할 수있는 함수 및 클래스 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="49ea35891878c04281f348699c563559d74b6bf3" translate="yes" xml:space="preserve">
          <source>You can run whatever code you like inside the worker thread, with some exceptions. For example, you can't directly manipulate the DOM from inside a worker, or use some default methods and properties of the &lt;a href=&quot;window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; object. But you can use a large number of items available under &lt;code&gt;window&lt;/code&gt;, including &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebSockets&quot;&gt;WebSockets&lt;/a&gt;, and data storage mechanisms like &lt;a href=&quot;indexeddb_api&quot;&gt;IndexedDB&lt;/a&gt;. See &lt;a href=&quot;web_workers_api/functions_and_classes_available_to_workers&quot;&gt;Functions and classes available to workers&lt;/a&gt; for more details.</source>
          <target state="translated">몇 가지 예외를 제외하고 작업자 스레드 내에서 원하는 코드를 실행할 수 있습니다. 예를 들어 작업자 내부에서 DOM을 직접 조작하거나 &lt;a href=&quot;window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt; 객체 의 일부 기본 메서드 및 속성을 사용할 수 없습니다 . 그러나 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebSockets&quot;&gt;WebSockets&lt;/a&gt; 및 &lt;a href=&quot;indexeddb_api&quot;&gt;IndexedDB&lt;/a&gt; 와 같은 데이터 저장 메커니즘을 포함하여 &lt;code&gt;window&lt;/code&gt; 에서 사용할 수있는 많은 항목을 사용할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;web_workers_api/functions_and_classes_available_to_workers&quot;&gt;작업자&lt;/a&gt; 가 사용할 수있는 함수 및 클래스 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9201bb1e6c70899833542ef8abaeb20222b11d1b" translate="yes" xml:space="preserve">
          <source>You can see changes in the network state by listening for the events on &lt;a href=&quot;../document/ononline&quot;&gt;&lt;code&gt;window.ononline&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../document/onoffline&quot;&gt;&lt;code&gt;window.onoffline&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../document/ononline&quot;&gt; &lt;code&gt;window.ononline&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../document/onoffline&quot;&gt; &lt;code&gt;window.onoffline&lt;/code&gt; &lt;/a&gt; 에서 이벤트를 수신하여 네트워크 상태의 변경 사항을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f0c1744874e7b38aa4c44bcdc46914537792291c" translate="yes" xml:space="preserve">
          <source>You can see how this works by trying it out below. Find some files and directories and drag them in, and take a look at the resulting output.</source>
          <target state="translated">아래에서 시도하여 이것이 어떻게 작동하는지 확인할 수 있습니다. 일부 파일과 디렉토리를 찾아서 끌어서 결과 출력을보십시오.</target>
        </trans-unit>
        <trans-unit id="b6df4d66676092e310ca265f9a2ebfd436491a23" translate="yes" xml:space="preserve">
          <source>You can see something similar in action in Nick Desaulnier's &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html&quot;&gt;bufferWhenNeeded demo&lt;/a&gt; &amp;mdash; in &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L48&quot;&gt;line 48, an event listener is added to the playing video&lt;/a&gt; so a function called &lt;code&gt;seek()&lt;/code&gt; is run when the &lt;code&gt;seeking&lt;/code&gt; event fires. In &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L92-L101&quot;&gt;lines 92-101, the seek() function is defined&lt;/a&gt; &amp;mdash; note that &lt;code&gt;abort()&lt;/code&gt; is called if &lt;a href=&quot;../mediasource/readystate&quot;&gt;&lt;code&gt;MediaSource.readyState&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;open&lt;/code&gt;, which means that it is ready to receive new source buffers &amp;mdash; at this point it is worth aborting the current segment and just getting the one for the new seek position (see &lt;code&gt;&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L78-L90&quot;&gt;checkBuffer()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L103-L105&quot;&gt;getCurrentSegment()&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">Nick Desaulnier의 &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html&quot;&gt;bufferWhenNeeded 데모&lt;/a&gt; 에서 &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L48&quot;&gt;48 행에서 이벤트 리스너가 재생중인 비디오에 추가되어 &lt;/a&gt; &lt;code&gt;seeking&lt;/code&gt; 이벤트 가 실행될 때 &lt;code&gt;seek()&lt;/code&gt; 라는 함수 가 실행됩니다 . 에서 &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L92-L101&quot;&gt;라인 92-101의 기능이 정의 () 추구&lt;/a&gt; - 메모 것을 &lt;code&gt;abort()&lt;/code&gt; 경우라고 &lt;a href=&quot;../mediasource/readystate&quot;&gt; &lt;code&gt;MediaSource.readyState&lt;/code&gt; 이&lt;/a&gt; 설정되어 &lt;code&gt;open&lt;/code&gt; , 어떤 수단는 새로운 소스 버퍼를 수신 할 준비가되어 있음 -이 시점에서 그것은을 중단 가치입니다 현재 세그먼트와 새로운 탐색 위치에 대한 세그먼트를 가져 &lt;code&gt;&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L78-L90&quot;&gt;checkBuffer()&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L103-L105&quot;&gt;getCurrentSegment()&lt;/a&gt;&lt;/code&gt; 참조 ) .</target>
        </trans-unit>
        <trans-unit id="e23d7fb03b3dd0ded4110a7940aad068f2075e87" translate="yes" xml:space="preserve">
          <source>You can see the &lt;a href=&quot;https://github.com/mdn/sw-test/&quot;&gt;source code on GitHub&lt;/a&gt;, and &lt;a href=&quot;https://mdn.github.io/sw-test/&quot;&gt;view the example live&lt;/a&gt;. The one bit we&amp;rsquo;ll call out here is the promise (see &lt;a href=&quot;https://github.com/mdn/sw-test/blob/gh-pages/app.js#L22-L47&quot;&gt;app.js lines 22-47&lt;/a&gt;), which is a modified version of what you read about above, in the &lt;a href=&quot;https://mdn.github.io/js-examples/promises-test/&quot;&gt;Promises test demo&lt;/a&gt;. It is different in the following ways:</source>
          <target state="translated">당신은 볼 수 &lt;a href=&quot;https://github.com/mdn/sw-test/&quot;&gt;GitHub의에 대한 소스 코드를&lt;/a&gt; , 그리고 &lt;a href=&quot;https://mdn.github.io/sw-test/&quot;&gt;라이브의 예를 볼&lt;/a&gt; . 여기서 설명 할 한 가지 약속 은 &lt;a href=&quot;https://mdn.github.io/js-examples/promises-test/&quot;&gt;Promises 테스트 데모&lt;/a&gt; 에서 위에서 읽은 내용의 수정 된 버전 인 promise ( &lt;a href=&quot;https://github.com/mdn/sw-test/blob/gh-pages/app.js#L22-L47&quot;&gt;app.js 22-47 행&lt;/a&gt; 참조 ) 입니다. 다음과 같은 방식으로 다릅니다.</target>
        </trans-unit>
        <trans-unit id="a76483e1526f560165b8dd289b3632d8cfc1c428" translate="yes" xml:space="preserve">
          <source>You can see this &lt;a href=&quot;https://mdn.github.io/web-dictaphone/&quot;&gt;demo running live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/mdn/web-dictaphone&quot;&gt;grab the source code&lt;/a&gt; on Github (&lt;a href=&quot;https://github.com/mdn/web-dictaphone/archive/master.zip&quot;&gt;direct zip file download&lt;/a&gt;.)</source>
          <target state="translated">이 &lt;a href=&quot;https://mdn.github.io/web-dictaphone/&quot;&gt;데모는 실시간으로 실행&lt;/a&gt; 되거나 Github &lt;a href=&quot;https://github.com/mdn/web-dictaphone&quot;&gt;에서 소스 코드&lt;/a&gt; 를 가져옵니다 ( &lt;a href=&quot;https://github.com/mdn/web-dictaphone/archive/master.zip&quot;&gt;직접 zip 파일 다운로드)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="eda1b2008260e852a97657a6d3a6ff26099092de" translate="yes" xml:space="preserve">
          <source>You can see this in action here:</source>
          <target state="translated">당신은 이것을 여기에서 실제로 볼 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="8bf2abc1a50e0d98f102be8b5e89dba0cc01d3be" translate="yes" xml:space="preserve">
          <source>You can see this script as &lt;a href=&quot;https://developer.mozilla.org/@api/deki/files/2866/=example.html&quot;&gt;a complete example&lt;/a&gt;.</source>
          <target state="translated">이 스크립트를 &lt;a href=&quot;https://developer.mozilla.org/@api/deki/files/2866/=example.html&quot;&gt;완전한 예제&lt;/a&gt; 로 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1254bec7f36b8781aebe4cab26b860b50a8889c" translate="yes" xml:space="preserve">
          <source>You can send any &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;JavaScript typed array&lt;/a&gt; object as a binary frame; its binary data contents are queued in the buffer, increasing the value of &lt;code&gt;bufferedAmount&lt;/code&gt; by the requisite number of bytes.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;JavaScript 형식의 배열&lt;/a&gt; 객체를 이진 프레임으로 보낼 수 있습니다 . 이진 데이터 내용은 버퍼에 대기 하여 필요한 바이트 수만큼 &lt;code&gt;bufferedAmount&lt;/code&gt; 의 값을 증가시킵니다 .</target>
        </trans-unit>
        <trans-unit id="e44500efc5a924342e8d30f93146b6d98c28f2f3" translate="yes" xml:space="preserve">
          <source>You can send data as a string, &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">데이터를 문자열, &lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt; 로 보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4fccf1de1f3664c605aba08d8d50cebd281b8e11" translate="yes" xml:space="preserve">
          <source>You can send the underlying binary data used by a typed array object; its binary data contents are queued in the buffer, increasing the value of &lt;code&gt;bufferedAmount&lt;/code&gt; by the requisite number of bytes.</source>
          <target state="translated">형식화 된 배열 객체에서 사용하는 기본 이진 데이터를 보낼 수 있습니다. 이진 데이터 내용은 버퍼에 대기 하여 필요한 바이트 수만큼 &lt;code&gt;bufferedAmount&lt;/code&gt; 의 값을 증가시킵니다 .</target>
        </trans-unit>
        <trans-unit id="258a2f0114541ed129e6aa0b3921f994d7002b9d" translate="yes" xml:space="preserve">
          <source>You can set key/value pairs on this using &lt;a href=&quot;set&quot;&gt;&lt;code&gt;FormData.set&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;FormData.set&lt;/code&gt; 을&lt;/a&gt; 사용하여 키 / 값 쌍을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b9b7e8ab0099fbdd994f7b584eb42b8ee55f5214" translate="yes" xml:space="preserve">
          <source>You can similarly use &lt;a href=&quot;availwidth&quot;&gt;&lt;code&gt;Screen.availWidth&lt;/code&gt;&lt;/a&gt; to get the number of pixels which are horizontally available to the browser for its use.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;availwidth&quot;&gt; &lt;code&gt;Screen.availWidth&lt;/code&gt; &lt;/a&gt; 를 사용 하여 브라우저에서 가로로 사용할 수있는 픽셀 수를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9eaf125e454b06f1ac82cc4cff2066607fa67775" translate="yes" xml:space="preserve">
          <source>You can sort the table by a particular column by clicking on that column's label.</source>
          <target state="translated">해당 열의 레이블을 클릭하여 특정 열을 기준으로 테이블을 정렬 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f509592af125ea8bfcb6f7292adec8e3e794d414" translate="yes" xml:space="preserve">
          <source>You can specify one or more media input device IDs to establish restrictions on which input sources are allowed. To collect a list of the available devices, you can call &lt;a href=&quot;../mediadevices/enumeratedevices&quot;&gt;&lt;code&gt;navigator.mediaDevices.enumerateDevices()&lt;/code&gt;&lt;/a&gt;, then for each device which meets the desired criteria, add its &lt;code&gt;deviceId&lt;/code&gt; to the &lt;code&gt;MediaConstraints&lt;/code&gt; object that eventually gets passed into &lt;code&gt;getUserMedia()&lt;/code&gt;.</source>
          <target state="translated">하나 이상의 미디어 입력 장치 ID를 지정하여 허용되는 입력 소스에 대한 제한을 설정할 수 있습니다. 사용 가능한 장치 목록을 수집하려면 &lt;a href=&quot;../mediadevices/enumeratedevices&quot;&gt; &lt;code&gt;navigator.mediaDevices.enumerateDevices()&lt;/code&gt; &lt;/a&gt; 호출 한 다음 원하는 기준을 충족하는 각 장치에 대해 해당 장치 &lt;code&gt;deviceId&lt;/code&gt; 를 &lt;code&gt;MediaConstraints&lt;/code&gt; 객체에 추가하여 &lt;code&gt;getUserMedia()&lt;/code&gt; 로 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="f97313a8442e3b3b15b332cd325b4a6729d126a4" translate="yes" xml:space="preserve">
          <source>You can specify the parameters for the &lt;code&gt;OfflineAudioContext()&lt;/code&gt; constructor as either the same set of parameters as are inputs into the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createBuffer&quot;&gt;&lt;code&gt;AudioContext.createBuffer()&lt;/code&gt;&lt;/a&gt; method, or by passing those parameters in an &lt;code&gt;options&lt;/code&gt; object. Either way, the individual parameters are the same.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createBuffer&quot;&gt; &lt;code&gt;AudioContext.createBuffer()&lt;/code&gt; &lt;/a&gt; 메서드에 입력 한 것과 동일한 매개 변수 집합으로 또는 &lt;code&gt;options&lt;/code&gt; 개체 에 해당 매개 변수를 전달 하여 &lt;code&gt;OfflineAudioContext()&lt;/code&gt; 생성자에 대한 매개 변수를 지정할 수 있습니다 . 어느 쪽이든 개별 매개 변수는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="2f52285c960c67aad502082cda8732cbaf7fc506" translate="yes" xml:space="preserve">
          <source>You can specify which of the three operations are allowed for a drag source by setting the &lt;a href=&quot;../datatransfer/effectallowed&quot;&gt;&lt;code&gt;effectAllowed&lt;/code&gt;&lt;/a&gt; property within a &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event listener.</source>
          <target state="translated">&lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; 이벤트 리스너 내 에서 &lt;a href=&quot;../datatransfer/effectallowed&quot;&gt; &lt;code&gt;effectAllowed&lt;/code&gt; &lt;/a&gt; 속성 을 설정하여 세 가지 작업 중 드래그 소스에 허용되는 작업을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="420363b3630563fc773ffb128359c8eebc3ed711" translate="yes" xml:space="preserve">
          <source>You can speed up data access by using the right scope and mode in the transaction. Here are a couple of tips:</source>
          <target state="translated">트랜잭션에서 올바른 범위와 모드를 사용하여 데이터 액세스 속도를 높일 수 있습니다. 다음은 몇 가지 팁입니다.</target>
        </trans-unit>
        <trans-unit id="7d307501c2df01a8b31b9cd4a788cf286aa4dcfd" translate="yes" xml:space="preserve">
          <source>You can stop recording at any time by calling &lt;a href=&quot;mediarecorder/stop&quot;&gt;&lt;code&gt;MediaRecorder.stop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mediarecorder/stop&quot;&gt; &lt;code&gt;MediaRecorder.stop()&lt;/code&gt; &lt;/a&gt; 을 호출하여 언제든지 녹화를 중지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="67908b956e0f66e8b6c9102f598ca9479a200dae" translate="yes" xml:space="preserve">
          <source>You can style WebVTT cues by looking for elements which match the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/::cue&quot;&gt;&lt;code&gt;::cue&lt;/code&gt;&lt;/a&gt; pseudo-element.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/::cue&quot;&gt; &lt;code&gt;::cue&lt;/code&gt; &lt;/a&gt; pseudo-element 와 일치하는 요소를 찾아 WebVTT 큐 스타일을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="775f7f69de499648afcb3f3e8e910c0b6e90baa2" translate="yes" xml:space="preserve">
          <source>You can style the new button for opening the file picker as you wish.</source>
          <target state="translated">파일 선택기를 여는 데 사용할 새 단추의 스타일을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7acc977ed13e28dca554f74bf25f0f5670bc83d1" translate="yes" xml:space="preserve">
          <source>You can temporarily (for this shell session) add the directory containing the Bento4 utilities to your path with:</source>
          <target state="translated">다음과 같이 경로에 Bento4 유틸리티가 포함 된 디렉토리를 임시로 (이 쉘 세션의 경우) 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3084d9c3a52db34ad12fd98b68fe423515071a5" translate="yes" xml:space="preserve">
          <source>You can test for sessionStorage instead by calling &lt;code&gt;storageAvailable('sessionStorage')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;storageAvailable('sessionStorage')&lt;/code&gt; 를 호출하여 sessionStorage를 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="29473220d0f29fc2f79dcbfb754c2567adbfa0f3" translate="yes" xml:space="preserve">
          <source>You can test for the existence of the window object reference which is the returned value in case of success of the window.open() call and then verify that &lt;var&gt;windowObjectReference&lt;/var&gt;.closed return value is &lt;var&gt;false&lt;/var&gt;.</source>
          <target state="translated">window.open () 호출이 성공한 경우 반환 된 값인 윈도우 객체 참조가 있는지 테스트 한 다음 &lt;var&gt;windowObjectReference&lt;/var&gt; .closed 반환 값이 &lt;var&gt;false&lt;/var&gt; 인지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3062289a7ed7fba033bb684074325912a201ebbb" translate="yes" xml:space="preserve">
          <source>You can test whether e10s is disabled by going to &lt;code&gt;about:support&lt;/code&gt; and looking at the &quot;Multiprocess Windows&quot; entry in the &quot;Application Basics&quot; section. 1/1 means it is enabled, 0/1 means disabled.</source>
          <target state="translated">&lt;code&gt;about:support&lt;/code&gt; 로 이동하여 &quot;Application Basics&quot;섹션의 &quot;Multiprocess Windows&quot;항목을 확인하여 e10이 비활성화되어 있는지 테스트 할 수 있습니다 . 1/1은 활성화되었음을, 0/1은 비활성화를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="de62559edbdaaade65265f2aa3c8009a39b28a80" translate="yes" xml:space="preserve">
          <source>You can then access the media's individual tracks using either array syntax or functions such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그런 다음 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt; &lt;code&gt;forEach()&lt;/code&gt; &lt;/a&gt; 와 같은 함수 또는 배열 구문을 사용하여 미디어의 개별 트랙에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="65a18e6a8e2e8b70706675fdb2da4c77e59bc2bf" translate="yes" xml:space="preserve">
          <source>You can then delete it again:</source>
          <target state="translated">그런 다음 다시 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa572c3f8b283136020b8697d23e34cae1787b0c" translate="yes" xml:space="preserve">
          <source>You can then get a stringified version of the object by calling &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;&lt;code&gt;stringify()&lt;/code&gt;&lt;/a&gt; on the returned object. See the &lt;a href=&quot;#Example&quot;&gt;example&lt;/a&gt; below.</source>
          <target state="translated">그런 다음 반환 된 객체에서 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt; &lt;code&gt;stringify()&lt;/code&gt; &lt;/a&gt; 를 호출하여 스트링 화 된 버전의 객체를 얻을 수 있습니다 . 아래 &lt;a href=&quot;#Example&quot;&gt;예를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fcd5fac3d10ca04c073970d810c002151cf72783" translate="yes" xml:space="preserve">
          <source>You can try out this example below, and can &lt;a href=&quot;https://mdn.github.io/dom-examples/media/mediaerror/&quot;&gt;see the example in action outside this page here&lt;/a&gt;.</source>
          <target state="translated">아래에서이 예제를 시도해 볼 수 있으며 &lt;a href=&quot;https://mdn.github.io/dom-examples/media/mediaerror/&quot;&gt;여기에서이 페이지 외부에서 실행중인 예제를 볼&lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="92c042f02a61a460b01f699f19cc2f73d13efde5" translate="yes" xml:space="preserve">
          <source>You can try this example here. When you click the &quot;Dial&quot; button, you should see a series of logging messages output, then the dialing will begin. If your browser plays the tones audibly as part of its user experience, you should hear them as they're transmitted.</source>
          <target state="translated">이 예제를 사용해보십시오. &quot;다이얼&quot;버튼을 클릭하면 일련의 로깅 메시지가 출력되고 다이얼링이 시작됩니다. 브라우저가 사용자 경험의 일부로 소리를들을 수있는 경우, 전송되는 소리를 들어야합니다.</target>
        </trans-unit>
        <trans-unit id="2d9cfaca589346ac80f1d7b886fa1a6ab5c22072" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;cancelable&quot;&gt;&lt;code&gt;Event.cancelable&lt;/code&gt;&lt;/a&gt; to check if the event is cancelable. Calling &lt;code&gt;preventDefault()&lt;/code&gt; for a non-cancelable event has no effect.</source>
          <target state="translated">&lt;a href=&quot;cancelable&quot;&gt; &lt;code&gt;Event.cancelable&lt;/code&gt; &lt;/a&gt; 을 사용 하여 이벤트가 취소 가능한지 확인할 수 있습니다 . &lt;code&gt;preventDefault()&lt;/code&gt; 할 수없는 이벤트에 대해 preventDefault () 를 호출 해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4e36eee7f271596d9640d1ce35ac05f02223fb17" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;&lt;em&gt;&lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;.baseURI&lt;/code&gt; to obtain the base URL of a document. Note that obtaining the base URL for a document may return different URLs over time if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base&quot;&gt;&lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt;&lt;/a&gt; tags or the document's location change.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;&lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;.baseURI&lt;/code&gt; 를 사용하여 &lt;em&gt;문서&lt;/em&gt; 의 기본 URL을 얻을 수 있습니다 . &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base&quot;&gt; &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; &lt;/a&gt; 태그 또는 문서의 위치가 변경되면 문서의 기본 URL을 확보하면 시간이 지남에 따라 다른 URL을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b0b4b438dbc30171aa9ad5c66f9046a4a29e88b" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;&lt;em&gt;&lt;a href=&quot;../element&quot;&gt;&lt;code&gt;element&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;.baseURI&lt;/code&gt; to obtain the base URL of an element.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;&lt;a href=&quot;../element&quot;&gt;&lt;code&gt;element&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;.baseURI&lt;/code&gt; &lt;em&gt;&lt;a href=&quot;../element&quot;&gt; &lt;code&gt;element&lt;/code&gt; &lt;/a&gt;&lt;/em&gt; 를 사용하여 &lt;em&gt;요소&lt;/em&gt; 의 기본 URL을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8fcdd685fdd9e94b909ac7afabd6c53d4f76879a" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ctx.scale(-1, 1)&lt;/code&gt; to flip the context horizontally and &lt;code&gt;ctx.scale(1, -1)&lt;/code&gt; to flip it vertically.</source>
          <target state="translated">사용자는 사용 &lt;code&gt;ctx.scale(-1, 1)&lt;/code&gt; 수평으로 문맥 플립 &lt;code&gt;ctx.scale(1, -1)&lt;/code&gt; 수직으로 뒤집을.</target>
        </trans-unit>
        <trans-unit id="bd99e14e2102533c5673aa42a98c96a834d21cb4" translate="yes" xml:space="preserve">
          <source>You can use DOM trees to model data which isn't well-suited for RDF (or perhaps you just don't like RDF). Another application is that, since XUL is XML, the UI of your application can be dynamically manipulated, downloaded, uploaded, saved, loaded, converted, or transformed quite easily.</source>
          <target state="translated">DOM 트리를 사용하여 RDF에 적합하지 않은 데이터를 모델링하거나 RDF가 마음에 들지 않는 데이터를 모델링 할 수 있습니다. 또 다른 응용 프로그램은 XUL이 XML이기 때문에 응용 프로그램의 UI를 매우 쉽게 조작, 다운로드, 업로드, 저장,로드, 변환 또는 변환 할 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a309663237fbdd4503120b1297140ae69a7c8c1c" translate="yes" xml:space="preserve">
          <source>You can use a timeout to prevent hanging your code forever while waiting for a read to occur. This is done by setting the value of the &lt;code&gt;timeout&lt;/code&gt; property on the &lt;code&gt;XMLHttpRequest&lt;/code&gt; object, as shown in the code below:</source>
          <target state="translated">시간 초과를 사용하면 읽기가 발생할 때까지 코드가 영원히 중단되는 것을 방지 할 수 있습니다. 아래 코드와 같이 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 객체 의 &lt;code&gt;timeout&lt;/code&gt; 속성 값을 설정하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="257822e4921829c10892ce8efc8b8e0c6ffb000a" translate="yes" xml:space="preserve">
          <source>You can use another &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element as your image source.</source>
          <target state="translated">다른 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소를 이미지 소스로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="543b7866690306a76c2aa49e2c3c6491dabb459b" translate="yes" xml:space="preserve">
          <source>You can use either JavaScript array notation or the &lt;a href=&quot;../htmlcollection/item&quot;&gt;&lt;code&gt;item()&lt;/code&gt;&lt;/a&gt; method on the returned collection to access the items in the collection. The following are equivalent:</source>
          <target state="translated">반환 된 컬렉션에서 JavaScript 배열 표기법 또는 &lt;a href=&quot;../htmlcollection/item&quot;&gt; &lt;code&gt;item()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 컬렉션의 항목에 액세스 할 수 있습니다. 다음은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="25df6920633777d2da6264014c14973379b09fdb" translate="yes" xml:space="preserve">
          <source>You can use either the &lt;a href=&quot;../htmlcollection/item&quot;&gt;&lt;code&gt;item()&lt;/code&gt;&lt;/a&gt; method on the returned &lt;code&gt;HTMLCollection&lt;/code&gt; or standard array syntax to examine individual elements in the collection. However&lt;u&gt;&lt;strong&gt; the following code will not work&lt;/strong&gt;&lt;/u&gt; as one might expect because &lt;code&gt;&quot;matches&quot; &lt;/code&gt;will change as soon as any &lt;code&gt;&quot;colorbox&quot;&lt;/code&gt; class is removed.</source>
          <target state="translated">반환 된 &lt;code&gt;HTMLCollection&lt;/code&gt; 에서 &lt;a href=&quot;../htmlcollection/item&quot;&gt; &lt;code&gt;item()&lt;/code&gt; &lt;/a&gt; 메서드를 사용 하거나 표준 배열 구문을 사용하여 컬렉션의 개별 요소를 검사 할 수 있습니다. 그러나 &lt;u&gt;&lt;strong&gt;다음과 같은 코드가 작동하지 않습니다&lt;/strong&gt;&lt;/u&gt; 때문에 하나는 예상대로 &lt;code&gt;&quot;matches&quot; &lt;/code&gt; 빨리 모든으로 변경됩니다 &lt;code&gt;&quot;colorbox&quot;&lt;/code&gt; 클래스가 제거됩니다.&lt;u&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/u&gt;</target>
        </trans-unit>
        <trans-unit id="a565b5dc44c842c6ba6f579ba97ef74bc01a3d58" translate="yes" xml:space="preserve">
          <source>You can use feature detection to check whether they are in a secure context or not by using the &lt;code&gt;isSecureContext&lt;/code&gt; boolean which is exposed on the global scope.</source>
          <target state="translated">기능 감지를 사용 하여 글로벌 범위에 노출 된 &lt;code&gt;isSecureContext&lt;/code&gt; 부울을 사용하여 보안 컨텍스트에 있는지 여부를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b8733ba4212efdb43559fc019db342cc17de30ac" translate="yes" xml:space="preserve">
          <source>You can use most standard JavaScript features inside a web worker, including:</source>
          <target state="translated">다음을 포함하여 웹 워커 내에서 대부분의 표준 JavaScript 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b4178cadd1d34a1e056b3a5ca70677516a092af" translate="yes" xml:space="preserve">
          <source>You can use negative numbers as parameters for this function. This function makes a relative move while &lt;a href=&quot;moveto&quot;&gt;&lt;code&gt;window.moveTo&lt;/code&gt;&lt;/a&gt; makes an absolute move.</source>
          <target state="translated">이 함수의 매개 변수로 음수를 사용할 수 있습니다. 이 함수는 &lt;a href=&quot;moveto&quot;&gt; &lt;code&gt;window.moveTo&lt;/code&gt; &lt;/a&gt; 동안 상대 이동을 절대 이동으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="30ab34f63035dce9b68b7159732f17447b210af9" translate="yes" xml:space="preserve">
          <source>You can use nested groups to help organize your output by visually associating related messages. To create a new nested block, call &lt;code&gt;console.group()&lt;/code&gt;. The &lt;code&gt;console.groupCollapsed()&lt;/code&gt; method is similar, but the new block is collapsed and requires clicking a disclosure button to read it.</source>
          <target state="translated">중첩 된 그룹을 사용하여 관련 메시지를 시각적으로 연결하여 출력을 구성 할 수 있습니다. 새 중첩 블록을 만들려면 &lt;code&gt;console.group()&lt;/code&gt; 호출 하십시오 . &lt;code&gt;console.groupCollapsed()&lt;/code&gt; 방법과 유사하지만, 새로운 블록을 축소하고 읽을 개시 버튼을 클릭 필요하다.</target>
        </trans-unit>
        <trans-unit id="0f01138e0d2b694619984d4f73b54893c73accb6" translate="yes" xml:space="preserve">
          <source>You can use nested groups to help organize your output by visually combining related material. To create a new nested block, call &lt;code&gt;console.group()&lt;/code&gt;. The &lt;code&gt;console.groupCollapsed()&lt;/code&gt; method is similar but creates the new block collapsed, requiring the use of a disclosure button to open it for reading.</source>
          <target state="translated">중첩 된 그룹을 사용하여 관련 자료를 시각적으로 결합하여 출력을 구성 할 수 있습니다. 새 중첩 블록을 만들려면 &lt;code&gt;console.group()&lt;/code&gt; 호출 하십시오 . &lt;code&gt;console.groupCollapsed()&lt;/code&gt; 방법은 비슷하지만, 판독을 열기 위해 개시 버튼의 사용을 필요로 축소 새로운 블록을 생성한다.</target>
        </trans-unit>
        <trans-unit id="e8a5199cea5493ea39a1874956066691485caca6" translate="yes" xml:space="preserve">
          <source>You can use several context attributes when creating your rendering context, for example:</source>
          <target state="translated">렌더링 컨텍스트를 만들 때 다음과 같은 몇 가지 컨텍스트 특성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="809a748850108bb617cef1853b6645e87f28e6f1" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;iscontenteditable&quot;&gt;&lt;code&gt;HTMLElement.isContentEditable&lt;/code&gt;&lt;/a&gt; property to test the computed &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; value of this property.</source>
          <target state="translated">&lt;a href=&quot;iscontenteditable&quot;&gt; &lt;code&gt;HTMLElement.isContentEditable&lt;/code&gt; &lt;/a&gt; 속성을 사용 하여이 속성 의 계산 된 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt; 값 을 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ff38389403c37e51173516d7ad722225d1a89a16" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;%c&lt;/code&gt; directive to apply a CSS style to console output:</source>
          <target state="translated">&lt;code&gt;%c&lt;/code&gt; 지시문을 사용하여 CSS 스타일을 콘솔 출력에 적용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0bdf49ab8a40066f28053c6fc7f4384df9618d39" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;go()&lt;/code&gt; method to load a specific page from session history, identified by its relative position to the current page (with the current page being, of course, relative index 0).</source>
          <target state="translated">&lt;code&gt;go()&lt;/code&gt; 메소드를 사용하면 세션 히스토리에서 특정 페이지를 상대 위치로 현재 페이지로로드 할 수 있습니다 (현재 페이지는 물론 상대 색인 0 임).</target>
        </trans-unit>
        <trans-unit id="971134d7c7e84f428685780aecab20b16a1bdb34" translate="yes" xml:space="preserve">
          <source>You can use the Navigation Timing API to gather performance data on the client side which you can then transmit to a server using &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; or other techniques. Also, the API lets you measure data that was previously difficult to obtain, such as the amount of time needed to unload the previous page, how long domain lookups take, the total time spent executing the window's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; handler, and so forth.</source>
          <target state="translated">Navigation Timing API를 사용하여 클라이언트 측에서 성능 데이터를 수집 한 다음 &lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt; 또는 기타 기술을 사용하여 서버로 전송할 수 있습니다 . 또한 API를 사용하면 이전 페이지를 언로드하는 데 필요한 시간, 도메인 조회에 걸리는 시간, 창 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; 핸들러를 실행하는 데 소요 된 총 시간 등과 같이 이전에는 얻기 어려운 데이터를 측정 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dcfa5df32c1dbfe79110e972c9b9f5a39f745a7a" translate="yes" xml:space="preserve">
          <source>You can use the value &lt;code&gt;none&lt;/code&gt; to indicate that no drop is allowed at this location, although it is preferred not to cancel the event in this case.</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; 값을 사용 하여이 위치에서 삭제가 허용되지 않음 을 표시 할 수 있지만이 경우 이벤트를 취소하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="e07cbcaaa12c95d93b90eb32478e8be36e40684f" translate="yes" xml:space="preserve">
          <source>You can use the&lt;a href=&quot;../../canvasrenderingcontext2d/putimagedata&quot;&gt; putImageData() &lt;/a&gt;method to paint pixel data into a context:</source>
          <target state="translated">&lt;a href=&quot;../../canvasrenderingcontext2d/putimagedata&quot;&gt;putImageData ()&lt;/a&gt; 메소드를 사용하여 픽셀 데이터를 컨텍스트에 페인트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a9d1c9f3e57ffd776a31f603481ddeb7e81cdc9" translate="yes" xml:space="preserve">
          <source>You can use this method to encode data which may otherwise cause communication problems, transmit it, then use the &lt;code&gt;&lt;a href=&quot;atob&quot;&gt;&lt;code&gt;atob()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method to decode the data again. For example, you can encode control characters such as ASCII values 0 through 31.</source>
          <target state="translated">이 메소드를 사용하여 통신 문제를 일으킬 수있는 데이터를 인코딩하고 전송 한 다음 &lt;code&gt;&lt;a href=&quot;atob&quot;&gt;&lt;code&gt;atob()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드를 사용하여 데이터를 다시 디코딩 할 수 있습니다. 예를 들어 ASCII 값 0-31과 같은 제어 문자를 인코딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eda10e850fd3b7a5c9894e371e19b68a1c99060c" translate="yes" xml:space="preserve">
          <source>You can use this property to detect mouse events that represent an action that may already have been handled by touch event handlers. This doesn't necessarily mean the device is a touch screen. For example, stylus and mouse devices typically generate touch events on mobile browsers.</source>
          <target state="translated">이 특성을 사용하여 터치 이벤트 핸들러가 이미 처리 한 조치를 나타내는 마우스 이벤트를 감지 할 수 있습니다. 이것이 반드시 장치가 터치 스크린이라는 의미는 아닙니다. 예를 들어 스타일러스 및 마우스 장치는 일반적으로 모바일 브라우저에서 터치 이벤트를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="8efadf45d9335e41101baf388eaa5aac30afb393" translate="yes" xml:space="preserve">
          <source>You can use this property to get a stream out of the audio graph and feed it into another construct, such as a &lt;a href=&quot;../mediastream_recording_api&quot;&gt;Media Recorder&lt;/a&gt;.</source>
          <target state="translated">이 속성을 사용하여 오디오 그래프에서 스트림을 가져 와서 &lt;a href=&quot;../mediastream_recording_api&quot;&gt;Media Recorder&lt;/a&gt; 와 같은 다른 구성으로 피드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbdf6a9a507178d1d90a9cd26c19abc6d05c3b0d" translate="yes" xml:space="preserve">
          <source>You can use this technique in association with mouse events in order to dynamically change images (gray-scale vs. color in this example):</source>
          <target state="translated">이미지를 동적으로 변경하기 위해이 이벤트를 마우스 이벤트와 함께 사용할 수 있습니다 (이 예에서는 회색조 대 색상).</target>
        </trans-unit>
        <trans-unit id="acfaa72a67fb3a284a3b23d5bc0b421f0753a02f" translate="yes" xml:space="preserve">
          <source>You can use this test page or create a similar one to test the DOM interfaces you are interested in and see how they work on the browser platform. You can update the contents of the &lt;code&gt;test()&lt;/code&gt; function as needed, create more buttons, or add elements as necessary.</source>
          <target state="translated">이 테스트 페이지를 사용하거나 비슷한 인터페이스를 만들어 관심있는 DOM 인터페이스를 테스트하고 브라우저 플랫폼에서 어떻게 작동하는지 확인할 수 있습니다. 필요 에 따라 &lt;code&gt;test()&lt;/code&gt; 함수 의 내용을 업데이트 하거나 더 많은 버튼을 만들거나 필요에 따라 요소를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5d4edc5694c860328077dbec9eec2ffbf7bab43" translate="yes" xml:space="preserve">
          <source>You can work around &lt;code&gt;addEventListener()&lt;/code&gt;, &lt;code&gt;removeEventListener()&lt;/code&gt;, &lt;a href=&quot;../event/preventdefault&quot;&gt;&lt;code&gt;Event.preventDefault()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../event/stoppropagation&quot;&gt;&lt;code&gt;Event.stopPropagation()&lt;/code&gt;&lt;/a&gt; not being supported by Internet Explorer 8 by using the following code at the beginning of your script. The code supports the use of &lt;code&gt;handleEvent()&lt;/code&gt; and also the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt;DOMContentLoaded&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="translated">당신은 해결할 수 있습니다 &lt;code&gt;addEventListener()&lt;/code&gt; , &lt;code&gt;removeEventListener()&lt;/code&gt; , &lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;Event.preventDefault()&lt;/code&gt; &lt;/a&gt; , 및 &lt;a href=&quot;../event/stoppropagation&quot;&gt; &lt;code&gt;Event.stopPropagation()&lt;/code&gt; &lt;/a&gt; 스크립트의 시작 부분에 다음 코드를 사용하여 Internet Explorer 8에서 지원되지 않고 있습니다. 이 코드는 &lt;code&gt;handleEvent()&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt;DOMContentLoaded&lt;/a&gt;&lt;/code&gt; 이벤트 사용을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="3f26b704bae8366ceb7916a8174feb521120f830" translate="yes" xml:space="preserve">
          <source>You can't correlate these local candidates with matching remote candidates. To find the best match found so far, call &lt;a href=&quot;getselectedcandidatepair&quot;&gt;&lt;code&gt;RTCIceTransport.getSelectedCandidatePair()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 로컬 후보를 일치하는 원격 후보와 연관시킬 수 없습니다. 지금까지 찾은 가장 일치하는 것을 찾으려면 &lt;a href=&quot;getselectedcandidatepair&quot;&gt; &lt;code&gt;RTCIceTransport.getSelectedCandidatePair()&lt;/code&gt; &lt;/a&gt; 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c754c4bf7577965dd233a7b0562c54a6c46d142" translate="yes" xml:space="preserve">
          <source>You can't create an &lt;code&gt;AudioScheduledSourceNode&lt;/code&gt; object directly. Instead, use the interface which extends it, such as &lt;a href=&quot;audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;constantsourcenode&quot;&gt;&lt;code&gt;ConstantSourceNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;AudioScheduledSourceNode&lt;/code&gt; 개체를 직접 만들 수 없습니다 . 대신 &lt;a href=&quot;audiobuffersourcenode&quot;&gt; &lt;code&gt;AudioBufferSourceNode&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;constantsourcenode&quot;&gt; &lt;code&gt;ConstantSourceNode&lt;/code&gt; &lt;/a&gt; 와 같이이를 확장하는 인터페이스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3928639855d290b773143fd4a7c7a5d3ee8ec507" translate="yes" xml:space="preserve">
          <source>You can't move a file such that it replaces an existing directory, and you can't move a directory such that it replaces an existing file. However, a file can replace a file and a directory can replace a directory.</source>
          <target state="translated">기존 디렉토리를 대체하도록 파일을 이동할 수 없으며 기존 파일을 대체하도록 디렉토리를 이동할 수 없습니다. 그러나 파일은 파일을 대체하고 디렉토리는 디렉토리를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f79a8b07f2f84fcc2f35732f05957b0df86278c" translate="yes" xml:space="preserve">
          <source>You can't move a window or tab that wasn&amp;rsquo;t created by &lt;a href=&quot;open&quot;&gt;&lt;code&gt;window.open&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;open&quot;&gt; &lt;code&gt;window.open&lt;/code&gt; 에&lt;/a&gt; 의해 생성되지 않은 창 또는 탭은 이동할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="a028d93c666f4405a5268dc6d38af45721624415" translate="yes" xml:space="preserve">
          <source>You can't move a window or tab that wasn&amp;rsquo;t created by window.open.</source>
          <target state="translated">window.open으로 만들지 않은 창이나 탭을 이동할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fab08ecdeba62796a61bc4e4952f5180157c53cf" translate="yes" xml:space="preserve">
          <source>You can't move a window or tab when it&amp;rsquo;s in a window with more than one tab.</source>
          <target state="translated">하나 이상의 탭이있는 창에있는 창 또는 탭은 이동할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d9c65dcc00dfae6038b03fcbe6582253752b01cc" translate="yes" xml:space="preserve">
          <source>You can, if needed, restrict the set of permitted video sources to a specific device or set of devices. To do so, call &lt;a href=&quot;../mediadevices/enumeratedevices&quot;&gt;&lt;code&gt;navigator.mediaDevices.enumerateDevices()&lt;/code&gt;&lt;/a&gt;. When the promise is fulfilled with an array of &lt;a href=&quot;../mediadeviceinfo&quot;&gt;&lt;code&gt;MediaDeviceInfo&lt;/code&gt;&lt;/a&gt; objects describing the available devices, find the ones that you want to allow and specify the corresponding &lt;a href=&quot;../mediatrackconstraints/deviceid&quot;&gt;&lt;code&gt;deviceId&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;deviceId&lt;/code&gt;s in the &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; object passed into &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">필요한 경우 허용 된 비디오 소스 세트를 특정 장치 나 장치 세트로 제한 할 수 있습니다. 그렇게하려면 &lt;a href=&quot;../mediadevices/enumeratedevices&quot;&gt; &lt;code&gt;navigator.mediaDevices.enumerateDevices()&lt;/code&gt; &lt;/a&gt; 호출하십시오 . 사용 가능한 장치를 설명하는 &lt;a href=&quot;../mediadeviceinfo&quot;&gt; &lt;code&gt;MediaDeviceInfo&lt;/code&gt; &lt;/a&gt; 객체 배열로 약속이 이행되면 허용하려는 것을 찾아 &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt; &lt;code&gt;getUserMedia()&lt;/code&gt; &lt;/a&gt; 로 전달 된 &lt;a href=&quot;../mediatrackconstraints&quot;&gt; &lt;code&gt;MediaTrackConstraints&lt;/code&gt; &lt;/a&gt; 객체 에서 해당 &lt;a href=&quot;../mediatrackconstraints/deviceid&quot;&gt; &lt;code&gt;deviceId&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;deviceId&lt;/code&gt; 를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="f864322870086e34fa08b866b13c26a0892622a6" translate="yes" xml:space="preserve">
          <source>You cannot change the identity information for a connection once it's already been set.</source>
          <target state="translated">이미 설정된 연결의 ID 정보는 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="33e2afa3c6d7d13c81e48aca9fd9aebea4227d60" translate="yes" xml:space="preserve">
          <source>You cannot change the value of &lt;code&gt;responseType&lt;/code&gt; in a synchronous &lt;code&gt;XMLHttpRequest&lt;/code&gt; except when the request belongs to a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;. This restriction is designed in part to help ensure that synchronous operations aren't used for large transactions that block the browser's main thread, thereby bogging down the user experience.</source>
          <target state="translated">요청이 &lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; 에&lt;/a&gt; 속하는 경우를 제외하고 동기 &lt;code&gt;XMLHttpRequest&lt;/code&gt; 에서 &lt;code&gt;responseType&lt;/code&gt; 의 값을 변경할 수 없습니다 . 이 제한은 브라우저의 메인 스레드를 차단하는 대규모 트랜잭션에 동기식 작업이 사용되지 않도록하여 사용자 경험을 저하시키는 데 일부 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="2f8ffbd0c778f55783eeb01f521636990601955a" translate="yes" xml:space="preserve">
          <source>You cannot force this. Users with Mozilla-based browsers have absolute control over window functionalities like resizability, scrollability and toolbars presence via user preferences in &lt;code&gt;about:config&lt;/code&gt;. Since your users are the ones who are supposed to use such windows (and not you, being the web author), the best is to avoid interfering with their habits and preferences. We recommend to always set the resizability and scrollbars presence (if needed) to yes to insure accessibility to content and usability of windows. This is in the best interests of both the web author and the users.</source>
          <target state="translated">당신은 이것을 강요 할 수 없습니다. Mozilla 기반 브라우저를 사용하는 사용자는 &lt;code&gt;about:config&lt;/code&gt; 에서 사용자 환경 설정을 통해 크기 조정, 스크롤 가능성 및 도구 모음의 존재와 같은 창 기능을 완벽하게 제어 할 수 있습니다 . 사용자는 웹 작성자가 아닌 그러한 창을 사용해야하는 사용자이므로 습관과 환경 설정을 방해하지 않는 것이 가장 좋습니다. 콘텐츠에 대한 접근성과 창의 유용성을 보장하기 위해 항상 크기 조정 및 스크롤바 존재 (필요한 경우)를 예로 설정하는 것이 좋습니다. 이것은 웹 작성자와 사용자 모두에게 가장 큰 이익입니다.</target>
        </trans-unit>
        <trans-unit id="290aea76f30db2b0cfbdf01c08ffcbe580701288" translate="yes" xml:space="preserve">
          <source>You cannot return &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; objects of &lt;a href=&quot;../response/type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; &quot;&lt;code&gt;cors&lt;/code&gt;&quot; if the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;fetchEvent.request&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../request/mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; is &quot;&lt;code&gt;same-origin&lt;/code&gt;&quot;.</source>
          <target state="translated">당신은 반환 할 수 없습니다 &lt;a href=&quot;../response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt; 의 객체 &lt;a href=&quot;../response/type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt; &quot; &lt;code&gt;cors&lt;/code&gt; 경우&quot; &lt;a href=&quot;request&quot;&gt; &lt;code&gt;fetchEvent.request&lt;/code&gt; &lt;/a&gt; 개체의 &lt;a href=&quot;../request/mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt; &quot;이다 &lt;code&gt;same-origin&lt;/code&gt; .&quot;</target>
        </trans-unit>
        <trans-unit id="cd318e61d039afb257368947e5349aab5e8b117b" translate="yes" xml:space="preserve">
          <source>You cannot. All browser manufacturers try to make the opening of new secondary windows noticed by users and noticeable by users to avoid confusion, to avoid disorienting users.</source>
          <target state="translated">당신은 할 수 없습니다. 모든 브라우저 제조업체는 혼란을 피하고 혼란을 피하기 위해 사용자가 주목하고 사용자가 눈에 띄는 새로운 보조 창을 열도록 노력합니다.</target>
        </trans-unit>
        <trans-unit id="1976542e3239f3f3f836f2424b98f3e30bf61245" translate="yes" xml:space="preserve">
          <source>You could add a header to this using &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt;, then retrieve it using &lt;code&gt;get()&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; &lt;/a&gt; 사용하여 헤더를 추가 한 다음 &lt;code&gt;get()&lt;/code&gt; 사용하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bfa1369ce7f6a4d1d7d6934fd662abc47a141980" translate="yes" xml:space="preserve">
          <source>You could add a header to this using &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt;, then retrieve it using &lt;code&gt;getAll()&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; &lt;/a&gt; 사용하여 헤더를 추가 한 다음 &lt;code&gt;getAll()&lt;/code&gt; 사용하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="34d3700db6ffe6a5b0ece2021cfa47c558ca49ac" translate="yes" xml:space="preserve">
          <source>You could add a header to this using &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt;, then set a new value for this header using &lt;code&gt;set()&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; 을&lt;/a&gt; 사용하여 헤더를 추가 한 다음 &lt;code&gt;set()&lt;/code&gt; 사용하여이 헤더의 새 값을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6d4abf0d49a53a26f7f0cd248f2404c003cbb302" translate="yes" xml:space="preserve">
          <source>You could add a header to this using &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt;, then test for the existence of it using &lt;code&gt;has()&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; &lt;/a&gt; 사용하여 헤더를 추가 한 다음 &lt;code&gt;has()&lt;/code&gt; 사용 하여 헤더가 있는지 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9fe05cf9b5213e6dc7f7ef17bacba810fb4caae5" translate="yes" xml:space="preserve">
          <source>You could add a header to this using &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; &lt;/a&gt; 사용하여 헤더를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="382369ad20f21c339c850823c5348f87dcfbe345" translate="yes" xml:space="preserve">
          <source>You could add a header to this using &lt;code&gt;append()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;append()&lt;/code&gt; 사용하여 헤더를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="52d5ad37abf214011cbef57b259bdc04069d7eb3" translate="yes" xml:space="preserve">
          <source>You could add a key/value pair to this using &lt;a href=&quot;append&quot;&gt;&lt;code&gt;FormData.append&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;append&quot;&gt; &lt;code&gt;FormData.append&lt;/code&gt; &lt;/a&gt; 사용하여 키 / 값 쌍을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9d91fa91b099f3438c9bb9f21466a5ef185ccb3b" translate="yes" xml:space="preserve">
          <source>You could always use some feature detection to determine which method is supported on &lt;code&gt;types&lt;/code&gt;, and run code as appropriate.</source>
          <target state="translated">항상 일부 기능 감지를 사용하여 &lt;code&gt;types&lt;/code&gt; 에서 지원되는 메소드를 판별 하고 적절한 코드를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72bd93d15a45323826dd72c65c10d03a01e571f0" translate="yes" xml:space="preserve">
          <source>You could even have &lt;code&gt;checkAllValues()&lt;/code&gt; be a synchronous function, although that may have performance implications you don't want to deal with:</source>
          <target state="translated">당신은 심지어 수 &lt;code&gt;checkAllValues()&lt;/code&gt; 그건 당신이 처리하지 않으려는 성능에 영향이있을 수 있지만, 동기 기능을 수 :</target>
        </trans-unit>
        <trans-unit id="1a829a204ac832521ba9e630d01de3934b5c8e48" translate="yes" xml:space="preserve">
          <source>You could stop messages being sent at any time using</source>
          <target state="translated">언제든지 메시지 전송을 중지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="637130187fe910bd4be7289513beab6ee20459e3" translate="yes" xml:space="preserve">
          <source>You could then fetch this api request by passing the &lt;code&gt;Request&lt;/code&gt; object in as a parameter to a &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt;&lt;/a&gt; call, for example and get the response:</source>
          <target state="translated">그런 다음 &lt;code&gt;Request&lt;/code&gt; 객체를 매개 변수로 &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt; &lt;/a&gt; 호출 에 전달하여이 API 요청을 페치 하고 응답을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="578b9b61213b49e7e7d65be234b56fac7a7851bd" translate="yes" xml:space="preserve">
          <source>You could then fetch this request by passing the &lt;code&gt;Request&lt;/code&gt; object in as a parameter to a &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt;&lt;/a&gt; call, for example:</source>
          <target state="translated">그런 다음 &lt;code&gt;Request&lt;/code&gt; 객체를 매개 변수로 &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt; &lt;/a&gt; 호출 에 전달하여이 요청을 가져올 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="13a7ca2da6db8dcbe69e297f905f3888cff77497" translate="yes" xml:space="preserve">
          <source>You could use this location object to return more information about the document's location, as you might do with a normal &lt;a href=&quot;../location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">이 Location 객체를 사용하면 일반적인 &lt;a href=&quot;../location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt; 객체 와 마찬가지로 문서의 위치에 대한 추가 정보를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8b8fd68a431511cb127199fdaf5631bbcc271e98" translate="yes" xml:space="preserve">
          <source>You could use this navigator object to return more information about the runtime envinronment, as you might do with a normal &lt;a href=&quot;../navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">이 네비게이터 객체를 사용하면 일반 &lt;a href=&quot;../navigator&quot;&gt; &lt;code&gt;Navigator&lt;/code&gt; &lt;/a&gt; 객체 와 마찬가지로 런타임 환경에 대한 자세한 정보를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ef769b2cba0e0feb4d258e6ae78cb3a79d4b1d8" translate="yes" xml:space="preserve">
          <source>You could use this performance object to return performance data, as you might do with a normal &lt;a href=&quot;../performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">일반 &lt;a href=&quot;../performance&quot;&gt; &lt;code&gt;Performance&lt;/code&gt; &lt;/a&gt; 개체 와 마찬가지로이 Performance 개체를 사용하여 성능 데이터를 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="95e88c3c5e4ade509d2c63cc97f2821ec7f84f9b" translate="yes" xml:space="preserve">
          <source>You could use this to add a description to the file</source>
          <target state="translated">이것을 사용하여 파일에 설명을 추가 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="84ebb69dfbf275952f5c743b1e3ba46c86fc48e9" translate="yes" xml:space="preserve">
          <source>You decide you don&amp;rsquo;t like the middle sentence, so you remove it:</source>
          <target state="translated">중간 문장이 마음에 들지 않기 때문에 제거합니다.</target>
        </trans-unit>
        <trans-unit id="0ef178c62701c0e3e776ab2d94fdb70ce249643b" translate="yes" xml:space="preserve">
          <source>You don't create &lt;a href=&quot;rtcsctptransport&quot;&gt;&lt;code&gt;RTCSctpTransport&lt;/code&gt;&lt;/a&gt; objects yourself; instead, you get access to the &lt;code&gt;RTCSctpTransport&lt;/code&gt; for a given &lt;code&gt;RTCPeerConnection&lt;/code&gt; through its &lt;strong&gt;&lt;a href=&quot;rtcpeerconnection/sctp&quot;&gt;&lt;code&gt;sctp&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property.</source>
          <target state="translated">&lt;a href=&quot;rtcsctptransport&quot;&gt; &lt;code&gt;RTCSctpTransport&lt;/code&gt; &lt;/a&gt; 객체를 직접 만들지 마십시오 . 대신 &lt;strong&gt;&lt;a href=&quot;rtcpeerconnection/sctp&quot;&gt; &lt;code&gt;sctp&lt;/code&gt; &lt;/a&gt;&lt;/strong&gt; 속성을 통해 지정된 &lt;code&gt;RTCPeerConnection&lt;/code&gt; 에 대한 &lt;code&gt;RTCSctpTransport&lt;/code&gt; 에 액세스 할 수 있습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee579a632c8cb462cef490a111e05fef99d81cef" translate="yes" xml:space="preserve">
          <source>You don't have to change the URL if you don't want to. In contrast, setting &lt;code&gt;window.location = &quot;#foo&quot;;&lt;/code&gt; creates a new history entry only if the current hash isn't &lt;code&gt;#foo&lt;/code&gt;.</source>
          <target state="translated">원하지 않으면 URL을 변경할 필요가 없습니다. 반대로 설정 &lt;code&gt;window.location = &quot;#foo&quot;;&lt;/code&gt; 현재 해시가 &lt;code&gt;#foo&lt;/code&gt; 가 아닌 경우에만 새 기록 항목을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="4bb1591107d014c7dcf77b559dfe94f0d348a580" translate="yes" xml:space="preserve">
          <source>You don't have to do anything special to begin using the DOM. Different browsers have different implementations of the DOM, and these implementations exhibit varying degrees of conformance to the actual DOM standard (a subject we try to avoid in this documentation), but every web browser uses some document object model to make web pages accessible via JavaScript.</source>
          <target state="translated">DOM 사용을 시작하기 위해 특별한 작업을 수행 할 필요는 없습니다. 브라우저마다 DOM의 구현이 다르며 실제 구현 된 DOM 표준 (이 문서에서는 피하려고하는 주제)에 따라 다양한 수준의 적합성이 있지만 모든 웹 브라우저는 일부 문서 객체 모델을 사용하여 JavaScript를 통해 웹 페이지에 액세스 할 수 있도록합니다. .</target>
        </trans-unit>
        <trans-unit id="0c7e9e4378e662b55a7c04a3c7a8430bd007cdf4" translate="yes" xml:space="preserve">
          <source>You don't have to use just unnamed messages or typed events; you can mix them together in a single event stream.</source>
          <target state="translated">명명되지 않은 메시지 나 입력 된 이벤트 만 사용할 필요는 없습니다. 단일 이벤트 스트림에서 함께 혼합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27a80e9ee1978c0efe558318760987b08343fb8f" translate="yes" xml:space="preserve">
          <source>You don't need to watch for this event unless you have specific reasons to want to closely monitor the state of ICE gathering.</source>
          <target state="translated">ICE 수집 상태를 면밀히 모니터링해야하는 특별한 이유가없는 한이 이벤트를 볼 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="9daec27e1a7e06061360c41bfff810c71034501e" translate="yes" xml:space="preserve">
          <source>You don't need to worry about the value of &lt;code&gt;passive&lt;/code&gt; for the basic &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/scroll&quot;&gt;scroll&lt;/a&gt;&lt;/code&gt; event. Since it can't be canceled, event listeners can't block page rendering anyway.</source>
          <target state="translated">기본 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/scroll&quot;&gt;scroll&lt;/a&gt;&lt;/code&gt; 이벤트 의 &lt;code&gt;passive&lt;/code&gt; 값에 대해 걱정할 필요가 없습니다 . 취소 할 수 없으므로 이벤트 리스너는 페이지 렌더링을 차단할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e1c5cfd556cdded5b136860bea91e294776fd905" translate="yes" xml:space="preserve">
          <source>You have to use the fetch function cross-global, e.g. &lt;code&gt;frame.contentWindow.fetch()&lt;/code&gt;</source>
          <target state="translated">프레임 전역에서 페치 함수를 사용해야합니다 &lt;code&gt;frame.contentWindow.fetch()&lt;/code&gt; 예 : frame.contentWindow.fetch ()).</target>
        </trans-unit>
        <trans-unit id="65065bf369f287c4873c4652a26838324ab030db" translate="yes" xml:space="preserve">
          <source>You keep running the function recursively until there is no more stream to read, in which case step 2 is followed.</source>
          <target state="translated">읽을 스트림이 더 이상 없을 때까지 함수를 계속 재귀 적으로 실행합니다.이 경우 2 단계가 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="da934b62b4f5b8fb2de80d9145466c28511ba34b" translate="yes" xml:space="preserve">
          <source>You know the entire content has been received when the value of &lt;a href=&quot;readystate&quot;&gt;&lt;code&gt;readyState&lt;/code&gt;&lt;/a&gt; becomes &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/DONE&quot;&gt;&lt;code&gt;XMLHttpRequest.DONE&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;4&lt;/code&gt;), and &lt;a href=&quot;status&quot;&gt;&lt;code&gt;status&lt;/code&gt;&lt;/a&gt; becomes 200 (&lt;code&gt;&quot;OK&quot;&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;readystate&quot;&gt; &lt;code&gt;readyState&lt;/code&gt; &lt;/a&gt; 의 값 이 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/DONE&quot;&gt; &lt;code&gt;XMLHttpRequest.DONE&lt;/code&gt; &lt;/a&gt; ( &lt;code&gt;4&lt;/code&gt; )이되고 &lt;a href=&quot;status&quot;&gt; &lt;code&gt;status&lt;/code&gt; &lt;/a&gt; 가 200 ( &lt;code&gt;&quot;OK&quot;&lt;/code&gt; ) 이되면 전체 컨텐츠가 수신되었음을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="02fea3ed9a47d804bceb0363ee2a7af2bbed3347" translate="yes" xml:space="preserve">
          <source>You may also access the size of the pixel array in bytes by reading the &lt;code&gt;Uint8ClampedArray.length&lt;/code&gt; attribute:</source>
          <target state="translated">&lt;code&gt;Uint8ClampedArray.length&lt;/code&gt; 속성 을 읽어 픽셀 배열의 크기 (바이트)에 액세스 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="741b7943a84048afc64827cfd10596171ced2abf" translate="yes" xml:space="preserve">
          <source>You may also include a plain text representation of the HTML or XML data using the &lt;code&gt;text/plain&lt;/code&gt; type. The data should be just the text and should not include any of the source tags or attributes. For instance:</source>
          <target state="translated">&lt;code&gt;text/plain&lt;/code&gt; 유형을 사용하여 HTML 또는 XML 데이터의 일반 텍스트 표현을 포함 할 수도 있습니다 . 데이터는 텍스트 일 ​​뿐이며 소스 태그 나 속성을 포함해서는 안됩니다. 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="e77f6890122c1bf0d2d4e6588826cd2f74336f00" translate="yes" xml:space="preserve">
          <source>You may also pass a &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object to the &lt;code&gt;Request()&lt;/code&gt; constructor to create a copy of the Request (This is similar to calling the &lt;a href=&quot;clone&quot;&gt;&lt;code&gt;clone()&lt;/code&gt;&lt;/a&gt; method.)</source>
          <target state="translated">&lt;a href=&quot;../request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt; 객체를 &lt;code&gt;Request()&lt;/code&gt; 생성자에 전달하여 Request 의 복사본을 만들 수도 있습니다 ( &lt;a href=&quot;clone&quot;&gt; &lt;code&gt;clone()&lt;/code&gt; &lt;/a&gt; 메서드 호출과 유사 ) .</target>
        </trans-unit>
        <trans-unit id="7a322f9d05fe74fea73885623fbffa93d7f8c783" translate="yes" xml:space="preserve">
          <source>You may also see data using the Mozilla specific type &lt;code&gt;text/x-moz-url&lt;/code&gt;. If it appears, it should be used before the &lt;code&gt;text/uri-list&lt;/code&gt; type. It holds the URL of the link followed by the title of the link, separated by a linebreak. For example:</source>
          <target state="translated">Mozilla 전용 유형 &lt;code&gt;text/x-moz-url&lt;/code&gt; 을 사용하여 데이터를 볼 수도 있습니다 . 표시되는 경우 &lt;code&gt;text/uri-list&lt;/code&gt; 유형 보다 먼저 사용해야합니다 . 링크의 URL 다음에 링크 제목이 있으며 줄 바꿈으로 구분됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c6fb654e04b3fa5f7630ab130d25c0cb485dbb92" translate="yes" xml:space="preserve">
          <source>You may also wish to check if the desired format exists using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozTypesAt&quot;&gt;&lt;code&gt;mozTypesAt&lt;/code&gt;&lt;/a&gt; method. As with the &lt;a href=&quot;../datatransfer/types&quot;&gt;&lt;code&gt;types&lt;/code&gt;&lt;/a&gt; property, it returns a list of strings of the types for an item. &lt;a href=&quot;../datatransfer/types&quot;&gt;&lt;code&gt;types &lt;/code&gt;&lt;/a&gt; property is equivalent to retrieving the list of types for the item at index 0.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozTypesAt&quot;&gt; &lt;code&gt;mozTypesAt&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 원하는 형식이 존재하는지 확인할 수도 있습니다 . &lt;a href=&quot;../datatransfer/types&quot;&gt; &lt;code&gt;types&lt;/code&gt; &lt;/a&gt; 속성 과 마찬가지로 항목 유형의 문자열 목록을 반환합니다. &lt;a href=&quot;../datatransfer/types&quot;&gt; &lt;code&gt;types &lt;/code&gt; &lt;/a&gt; 속성은 인덱스 0에서 항목의 유형 목록을 검색하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="af794cdd01ec99fb796dfdf978df9ad80e44e16a" translate="yes" xml:space="preserve">
          <source>You may also wish to set either the &lt;a href=&quot;../datatransfer/effectallowed&quot;&gt;&lt;code&gt;effectAllowed&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property, or both at the same time, if you wish to be more specific about the type of operation that will performed. Naturally, changing either property will have no effect if you do not cancel the event as well.</source>
          <target state="translated">수행 할 작업 유형에 대해보다 구체적으로 설명하려는 경우 &lt;a href=&quot;../datatransfer/effectallowed&quot;&gt; &lt;code&gt;effectAllowed&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt; 속성 또는 둘 다를 동시에 설정할 수도 있습니다 . 당연히 이벤트를 취소하지 않으면 두 속성을 변경해도 아무런 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="7291ddbbfd26239c194d43c513a876ef20c6eeff" translate="yes" xml:space="preserve">
          <source>You may find examples and details by reading the documentation for the &lt;a href=&quot;../element/queryselector&quot;&gt;&lt;code&gt;Element.querySelector()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../element/queryselectorall&quot;&gt;&lt;code&gt;Element.querySelectorAll()&lt;/code&gt;&lt;/a&gt; methods, as well as in the article &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Code_snippets/QuerySelector&quot;&gt;Code snippets for querySelector&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../element/queryselector&quot;&gt; &lt;code&gt;Element.querySelector()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../element/queryselectorall&quot;&gt; &lt;code&gt;Element.querySelectorAll()&lt;/code&gt; &lt;/a&gt; 메소드에 대한 문서 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Code_snippets/QuerySelector&quot;&gt;와 querySelector에 대한 코드 스 니펫&lt;/a&gt; 기사 를 읽고 예제 및 세부 사항을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7d430cc3a1d259b5eda07242c46bd7ee002b800a" translate="yes" xml:space="preserve">
          <source>You may find that the &lt;code&gt;quota&lt;/code&gt; varies from app to app based on factors such as the frequency with which the user visits it, commonly-known site popularity data, and so forth.</source>
          <target state="translated">당신은 찾을 수 있습니다 &lt;code&gt;quota&lt;/code&gt; 같은있는 사용자가 방문 그것은 일반적으로 알려진 사이트 인기 데이터 등 주파수 등의 요인에 따라 응용 프로그램을 응용 프로그램에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="30b26557c2df610e899f7ed141827d0a25407405" translate="yes" xml:space="preserve">
          <source>You may have times when you want to have multiple audio parameters be linked so they share the same value even while being changed in some way. For example, perhaps you have a set of oscillators, and two of them need to share the same, configurable volume, or you have a filter that's been applied to certain inputs but not to all of them. You could use a loop and change the value of each affected &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; one at a time, but there are two drawbacks to doing it that way: first, that's extra code that, as you're about to see, you don't have to write; and second, that loop uses valuable CPU time on your thread (likely the main thread), and there's a way to offload all that work to the audio rendering thread, which is optimized for this kind of work and may run at a more appropriate priority level than your code.</source>
          <target state="translated">여러 가지 오디오 매개 변수를 연결하여 어떤 방식 으로든 변경되는 동안에도 동일한 값을 공유하려는 경우가 있습니다. 예를 들어, 오실레이터 세트가 있고 그 중 두 개가 구성 가능한 동일한 볼륨을 공유해야하거나 특정 입력에 적용되었지만 일부는 적용되지 않은 필터가 있어야합니다. 루프를 사용하여 영향을받는 각 &lt;a href=&quot;../audioparam&quot;&gt; &lt;code&gt;AudioParam&lt;/code&gt; &lt;/a&gt; 의 값을 한 번에 하나씩 변경할 수는 있지만이를 수행하는 데에는 두 가지 단점이 있습니다. 먼저 보려고 할 필요가없는 추가 코드입니다. 쓰다; 둘째, 해당 루프는 스레드 (예 : 메인 스레드)에서 귀중한 CPU 시간을 사용하며 모든 작업을 오디오 렌더링 스레드로 오프로드하는 방법이 있습니다.이러한 종류의 작업에 최적화되어 있으며 코드보다 적절한 우선 순위 수준에서 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a4db3faa216c617318e4186afc3db0c2158970f" translate="yes" xml:space="preserve">
          <source>You may pulse the vibration hardware one time by specifying either a single value, or an array consisting of only one value:</source>
          <target state="translated">단일 값 또는 하나의 값으로 만 구성된 배열을 지정하여 진동 하드웨어를 한 번 펄스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b370eb5ff7cd990726f1e363592e3ee27153f35f" translate="yes" xml:space="preserve">
          <source>You may specify as many vibration/pause pairs as you like, and you may provide either an even or odd number of entries; it's worth noting that you don't have to provide a pause as your last entry since the vibration automatically stops at the end of each vibration period.</source>
          <target state="translated">원하는만큼 진동 / 일시 정지 쌍을 지정할 수 있으며 짝수 또는 홀수의 항목을 제공 할 수 있습니다. 진동이 각 진동주기의 끝에서 자동으로 중지되므로 마지막 입력으로 일시 중지를 제공 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="5ac398709c43d5dbbd7d56cce3736793093aba17" translate="yes" xml:space="preserve">
          <source>You may use any CSS selectors with the &lt;code&gt;querySelector()&lt;/code&gt; and &lt;code&gt;querySelectorAll()&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;querySelector()&lt;/code&gt; 및 &lt;code&gt;querySelectorAll()&lt;/code&gt; 메소드 와 함께 CSS 선택기를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b6cd50b24d7be9a3ec520e0263416d9813fe28b9" translate="yes" xml:space="preserve">
          <source>You may use anything in the text header except newlines or the string &quot;&lt;code&gt;--&amp;gt;&lt;/code&gt;&quot;</source>
          <target state="translated">줄 바꿈 또는 문자열 &quot; &lt;code&gt;--&amp;gt;&lt;/code&gt; &quot;을 제외한 텍스트 헤더에 무엇이든 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9b9d13b9c186414773f76606a71f5de78b37734" translate="yes" xml:space="preserve">
          <source>You may use the label as you wish; you could use it to identify all the channels that are being used for the same purpose, by giving them all the same namel. Or you could give each channel a unique label for tracking purposes. It's entirely up to the design decisions made when building your site or app.</source>
          <target state="translated">원하는대로 레이블을 사용할 수 있습니다. 이를 사용하여 동일한 이름으로 사용함으로써 동일한 목적으로 사용중인 모든 채널을 식별 할 수 있습니다. 또는 추적 목적으로 각 채널에 고유 한 레이블을 지정할 수 있습니다. 사이트 또는 앱을 구축 할 때 내려진 디자인 결정에 전적으로 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="28c286dea128c960afe92671ba298be86e9806de" translate="yes" xml:space="preserve">
          <source>You might also try experimenting with the direction of the light source, the colors of the light sources, and so forth.</source>
          <target state="translated">광원의 방향, 광원의 색상 등을 실험 해 볼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="34118ce7601f19afbdfb2e3b7a98a60e6e468523" translate="yes" xml:space="preserve">
          <source>You might ask yourself what's the difference between console.dir() and console.log().</source>
          <target state="translated">console.dir ()과 console.log ()의 차이점이 무엇인지 스스로에게 물어볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3472d1c357797f4d7c55915ce36987a9d87fd6c" translate="yes" xml:space="preserve">
          <source>You might do this for example in a &lt;a href=&quot;../service_worker_api&quot;&gt;ServiceWorker&lt;/a&gt; if you want to fetch a response from the server and stream it to the browser, but also stream it to the Service Worker cache. Since a response body cannot be consumed more than once, and a stream can't be read by more than one reader at once, you&amp;rsquo;d need two copies to do this.</source>
          <target state="translated">예를 들어 서버에서 응답을 가져 와서 브라우저로 스트리밍하고 Service Worker 캐시로 스트리밍하려는 경우 &lt;a href=&quot;../service_worker_api&quot;&gt;ServiceWorker&lt;/a&gt; 에서이를 수행 할 수 있습니다 . 응답 본문을 두 번 이상 사용할 수 없으며 한 번에 여러 리더가 스트림을 읽을 수 없으므로이 작업을 수행하려면 두 개의 사본이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="5a2ea1aed0d5851f9811f0de82581387ac4fa1fc" translate="yes" xml:space="preserve">
          <source>You might do this for example in a &lt;a href=&quot;../service_worker_api&quot;&gt;ServiceWorker&lt;/a&gt; if you want to fetch a response from the server and stream it to the browser, but also stream it to the ServiceWorker cache. Since a response body cannot be consumed more than once, and a stream can't be read by more than one reader at once, you&amp;rsquo;d need two copies to do this.</source>
          <target state="translated">예를 들어 서버에서 응답을 가져 와서 브라우저로 스트리밍하고 ServiceWorker 캐시로 스트리밍하려는 경우 &lt;a href=&quot;../service_worker_api&quot;&gt;ServiceWorker&lt;/a&gt; 에서이를 수행 할 수 있습니다 . 응답 본문을 두 번 이상 사용할 수 없으며 한 번에 여러 리더가 스트림을 읽을 수 없으므로이 작업을 수행하려면 두 개의 사본이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="894c446cbb7647f9ccc77a2b8627ca03d77e078f" translate="yes" xml:space="preserve">
          <source>You might instead be working with an &lt;a href=&quot;../offlineaudiocontext&quot;&gt;&lt;code&gt;OfflineAudioContext&lt;/code&gt;&lt;/a&gt;, in which case you can resume the suspended audio context with the &lt;a href=&quot;../offlineaudiocontext/startrendering&quot;&gt;&lt;code&gt;startRendering()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">대신 &lt;a href=&quot;../offlineaudiocontext&quot;&gt; &lt;code&gt;OfflineAudioContext&lt;/code&gt; &lt;/a&gt; 작업을하는 경우 &lt;a href=&quot;../offlineaudiocontext/startrendering&quot;&gt; &lt;code&gt;startRendering()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 일시 중단 된 오디오 컨텍스트를 다시 시작할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2ca277b3c74b2e8bbf25ba762b8c5b9355c14a43" translate="yes" xml:space="preserve">
          <source>You must,</source>
          <target state="translated">당신은,</target>
        </trans-unit>
        <trans-unit id="c56212e119df260eafbc088a5b22d9aa6de9a027" translate="yes" xml:space="preserve">
          <source>You must:</source>
          <target state="translated">당신은해야합니다 :</target>
        </trans-unit>
        <trans-unit id="ccf5e5178062825b7841dd6efd2a8ef5c3f7cee7" translate="yes" xml:space="preserve">
          <source>You need a same-origin iframe</source>
          <target state="translated">동일한 출처 iframe이 필요합니다</target>
        </trans-unit>
        <trans-unit id="6584c0d6e4f7b9ea83e6bce98771fede979c50f3" translate="yes" xml:space="preserve">
          <source>You need to know when the user comes back online, so that you can re-synchronize with the server.</source>
          <target state="translated">서버와 재 동기화 할 수 있도록 사용자가 온라인으로 돌아 오는시기를 알아야합니다.</target>
        </trans-unit>
        <trans-unit id="d7aa1db5015c61cbf3832824b0fda141890a71c5" translate="yes" xml:space="preserve">
          <source>You need to know when the user is offline, so that you can queue your server requests for a later time.</source>
          <target state="translated">나중에 서버 요청을 대기열에 넣을 수 있도록 사용자가 오프라인 상태 인시기를 알아야합니다.</target>
        </trans-unit>
        <trans-unit id="ceee724de5fa9a27af638d27b0fb26534d75f00e" translate="yes" xml:space="preserve">
          <source>You need to use &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;EventTarget.addEventListener()&lt;/code&gt;&lt;/a&gt; to add the &lt;code&gt;change&lt;/code&gt; event listener, like this:</source>
          <target state="translated">다음 과 같이 &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;EventTarget.addEventListener()&lt;/code&gt; &lt;/a&gt; 를 사용 하여 &lt;code&gt;change&lt;/code&gt; 이벤트 리스너 를 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="fe1db2fab5ec97a71303752f352c7fcbfd530061" translate="yes" xml:space="preserve">
          <source>You should &lt;a href=&quot;https://mdn-samples.mozilla.org/s/webrtc-simple-datachannel&quot;&gt;try out this example&lt;/a&gt; and take a look at the &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-simple-datachannel&quot;&gt;webrtc-simple-datachannel&lt;/a&gt; source code, available on GitHub.</source>
          <target state="translated">당신은해야 &lt;a href=&quot;https://mdn-samples.mozilla.org/s/webrtc-simple-datachannel&quot;&gt;이 예제를 시도&lt;/a&gt; 하고 한 번 봐 걸릴 &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-simple-datachannel&quot;&gt;WebRTC가-단순 datachannel의&lt;/a&gt; GitHub의에서 사용할 소스 코드를.</target>
        </trans-unit>
        <trans-unit id="250be8529c6f2bce136f2d8e8abe9bba970da312" translate="yes" xml:space="preserve">
          <source>You should also include the &lt;code&gt;application/x-moz-file&lt;/code&gt; type if the image is located on disk. In fact, this a common way in which image files are dragged.</source>
          <target state="translated">이미지가 디스크에있는 경우 &lt;code&gt;application/x-moz-file&lt;/code&gt; 유형 도 포함해야합니다 . 실제로 이것은 이미지 파일을 드래그하는 일반적인 방법입니다.</target>
        </trans-unit>
        <trans-unit id="ba221c25ee372d94b6a01ca03a8562b4af3f9616" translate="yes" xml:space="preserve">
          <source>You should also listen for &lt;code&gt;VersionError&lt;/code&gt; errors to handle the situation where already opened apps may initiate code leading to a new attempt to open the database, but using an outdated version.</source>
          <target state="translated">또한 이미 열려있는 앱이 코드를 시작하여 데이터베이스를 열려고 시도하지만 오래된 버전을 사용하는 상황을 처리하려면 &lt;code&gt;VersionError&lt;/code&gt; 오류를 수신해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ed04fd7661e73aa23be8369eb447a187e425a811" translate="yes" xml:space="preserve">
          <source>You should always include a plain text alternative for the node.</source>
          <target state="translated">항상 노드에 대한 대체 텍스트를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="39b9bdd050facf5c516315a72e4ddbd94dc379da" translate="yes" xml:space="preserve">
          <source>You should assume that a large majority of browsers will have the status bar or that a large majority of users will want to force the status bar presence: best is to always set this feature to yes. Also, if you specifically request to remove the status bar, then Firefox users will not be able to view the Site Navigation toolbar if it is installed. In Mozilla and in Firefox, all windows with a status bar have a window resizing grippy at its right-most side. The status bar also provides info on http connection, hypertext resource location, download progress bar, encryption/secure connection info with</source>
          <target state="translated">대부분의 브라우저에 상태 표시 줄이 있거나 대부분의 사용자가 상태 표시 줄을 강제로 사용하려고한다고 가정해야합니다. 항상이 기능을 예로 설정하는 것이 가장 좋습니다. 또한 상태 표시 줄 제거를 구체적으로 요청하면 Firefox 사용자는 사이트 탐색 도구 모음이 설치되어 있으면이를 볼 수 없습니다. Mozilla 및 Firefox에서 상태 표시 줄이있는 모든 창에는 맨 오른쪽에 크기 조정 창이 있습니다. 상태 표시 줄은 http 연결, 하이퍼 텍스트 리소스 위치, 다운로드 진행률 표시 줄, 암호화 / 보안 연결 정보에 대한 정보도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4d7385600bcfa3597283e969aacfcb94a0c0dc81" translate="yes" xml:space="preserve">
          <source>You should call this method whenever you're ready to update your animation onscreen. This will request that your animation function be called before the browser performs the next repaint. The number of callbacks is usually 60 times per second, but will generally match the display refresh rate in most web browsers as per W3C recommendation. &lt;code&gt;requestAnimationFrame()&lt;/code&gt; calls are paused in most browsers when running in background tabs or hidden &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;s in order to improve performance and battery life.</source>
          <target state="translated">화면에서 애니메이션을 업데이트 할 준비가 될 때마다이 메소드를 호출해야합니다. 브라우저가 다음 다시 그리기를 수행하기 전에 애니메이션 함수를 호출하도록 요청합니다. 콜백 수는 일반적으로 초당 60 회이지만 W3C 권장 사항에 따라 대부분의 웹 브라우저에서 디스플레이 새로 고침 빈도와 일치합니다. 성능 및 배터리 수명을 향상시키기 위해 백그라운드 탭 또는 숨겨진 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt; 에서 실행할 때 대부분의 브라우저에서 &lt;code&gt;requestAnimationFrame()&lt;/code&gt; 호출이 일시 중지됩니다 .</target>
        </trans-unit>
        <trans-unit id="9ff7b9c7bd2c6d7e018055e47685d177ac9d00c0" translate="yes" xml:space="preserve">
          <source>You should never use &lt;code&gt;#ifdef GL_ES&lt;/code&gt; in your WebGL shaders; although some early examples used this, it's not necessary, since this condition is always true in WebGL shaders.</source>
          <target state="translated">WebGL 셰이더에서 &lt;code&gt;#ifdef GL_ES&lt;/code&gt; 를 사용해서는 안됩니다 . 일부 초기 예제에서이를 사용했지만 WebGL 셰이더에서는이 조건이 항상 참이므로 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="79e23a87e598f3ff29a3aa082ee996bcd6c580e3" translate="yes" xml:space="preserve">
          <source>You should not assume that any entry which isn't a directory is a file or vice-versa. There are other types of file descriptors on many operating systems. Be sure to use both &lt;code&gt;isDirectory&lt;/code&gt; and &lt;code&gt;isFile&lt;/code&gt; as needed to ensure that the entry is something you know how to work with.</source>
          <target state="translated">디렉토리가 아닌 항목이 파일이거나 그 반대라고 가정해서는 안됩니다. 많은 운영 체제에 다른 유형의 파일 디스크립터가 있습니다. 항목이 작업 방법을 알고 있는지 확인하려면 필요에 따라 &lt;code&gt;isDirectory&lt;/code&gt; 와 &lt;code&gt;isFile&lt;/code&gt; 을 모두 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5e344725af255f55e21d5ba9e6439e2c7ca9414" translate="yes" xml:space="preserve">
          <source>You should not assume that any entry which isn't a file is a directory or vice-versa. There are other types of file descriptors on many operating systems. Be sure to use both &lt;code&gt;isDirectory&lt;/code&gt; and &lt;code&gt;isFile&lt;/code&gt; as needed to ensure that the entry is something you know how to work with.</source>
          <target state="translated">파일이 아닌 항목이 디렉토리이거나 그 반대라고 가정해서는 안됩니다. 많은 운영 체제에 다른 유형의 파일 디스크립터가 있습니다. 항목이 작업 방법을 알고 있는지 확인하려면 필요에 따라 &lt;code&gt;isDirectory&lt;/code&gt; 와 &lt;code&gt;isFile&lt;/code&gt; 을 모두 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8aab55003783e08037eb9efc1ff534408d31d59c" translate="yes" xml:space="preserve">
          <source>You should note that we've used a conditional expression to detect whether the linear acceleration and angular acceleration arrays are successfully returned before we display the data. These values are not reported by most VR hardware as yet, so the code would throw an error if we did not do this (the arrays return &lt;code&gt;null&lt;/code&gt; if they are not successfully reported).</source>
          <target state="translated">데이터를 표시하기 전에 선형 가속 및 각 가속 배열이 성공적으로 반환되는지 여부를 감지하기 위해 조건식을 사용했습니다. 이러한 값은 아직 대부분의 VR 하드웨어에서보고되지 않으므로이 작업을 수행하지 않으면 코드에서 오류가 발생합니다 ( 보고되지 않은 경우 배열 은 &lt;code&gt;null&lt;/code&gt; 을 반환 함 ).</target>
        </trans-unit>
        <trans-unit id="128af0c0cca69ce2a29fbb32167a24263a6335a1" translate="yes" xml:space="preserve">
          <source>You should try to reuse existing contexts rather than creating a new one for each sound you play, and be sure to call &lt;a href=&quot;close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; on each context as you finish using it. Once &lt;code&gt;close()&lt;/code&gt;'s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; is resolved, it's safe to create a new context.</source>
          <target state="translated">연주하는 각 사운드에 대해 새 컨텍스트를 작성하지 않고 기존 컨텍스트를 재사용하고 사용을 마칠 때마다 각 컨텍스트에서 &lt;a href=&quot;close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 를 호출해야 합니다. 일단 &lt;code&gt;close()&lt;/code&gt; 의 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 은 새로운 상황을 만들 안전, 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="31d53cbfa3a75b1394dd068c757f90b6a69e933c" translate="yes" xml:space="preserve">
          <source>You should use &lt;a href=&quot;getpropertyvalue&quot;&gt;&lt;code&gt;CSSStyleDeclaration.getPropertyValue()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;getpropertyvalue&quot;&gt; &lt;code&gt;CSSStyleDeclaration.getPropertyValue()&lt;/code&gt; &lt;/a&gt; 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="91d8f17936b1ea42040f8e6de51d17cb1e9933ea" translate="yes" xml:space="preserve">
          <source>You should use &lt;code&gt;removeAttribute()&lt;/code&gt; instead of setting the attribute value to &lt;code&gt;null&lt;/code&gt; either directly or using &lt;a href=&quot;setattribute&quot;&gt;&lt;code&gt;setAttribute()&lt;/code&gt;&lt;/a&gt;. Many attributes will not behave as expected if you set them to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">직접 또는 &lt;a href=&quot;setattribute&quot;&gt; &lt;code&gt;setAttribute()&lt;/code&gt; &lt;/a&gt; 사용하여 속성 값을 &lt;code&gt;null&lt;/code&gt; 로 설정하는 대신 &lt;code&gt;removeAttribute()&lt;/code&gt; 를 사용해야합니다 . 많은 속성을 &lt;code&gt;null&lt;/code&gt; 로 설정하면 예상대로 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="22e0fc69675c3a3d0ac5dc67e49718a91ce859ed" translate="yes" xml:space="preserve">
          <source>You should watch for &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Events/change&quot;&gt;change&lt;/a&gt; events on &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; instead of watching &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; elements for events. See &lt;a href=&quot;https://bugzil.la/1090602&quot;&gt;bug 1090602&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/Firefox/Multiprocess_Firefox/Web_content_compatibility&quot;&gt;Multiprocess Firefox Web content compatibility&lt;/a&gt; for details.</source>
          <target state="translated">이벤트 의 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 요소를 보는 대신 &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/select&quot;&gt; &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; &lt;/a&gt; 에서 &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Events/change&quot;&gt;변경&lt;/a&gt; 이벤트를 감시해야 합니다. 세부 사항 은 &lt;a href=&quot;https://bugzil.la/1090602&quot;&gt;버그 1090602&lt;/a&gt; 및 &lt;a href=&quot;https://developer.mozilla.org/Firefox/Multiprocess_Firefox/Web_content_compatibility&quot;&gt;다중 &lt;/a&gt;프로세스 Firefox 웹 컨텐츠 호환성 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="513c31fb2d05aea777b6f4ea44da00386b06ae69" translate="yes" xml:space="preserve">
          <source>You shouldn't have been using this in the first place, so you probably don't care that this is going away.</source>
          <target state="translated">처음에는 이것을 사용해서는 안되었으므로 아마도 이것이 사라지는 것을 신경 쓰지 않을 것입니다.</target>
        </trans-unit>
        <trans-unit id="5ebb0c753ce02d576eca4a4312f2491529b832cf" translate="yes" xml:space="preserve">
          <source>You use &lt;code&gt;clip()&lt;/code&gt; instead of &lt;code&gt;closePath()&lt;/code&gt; to close a path and turn it into a clipping path instead of stroking or filling the path.</source>
          <target state="translated">당신이 사용하는 &lt;code&gt;clip()&lt;/code&gt; 대신 &lt;code&gt;closePath()&lt;/code&gt; 경로를 닫고 대신 쓰다듬어 또는 경로를 채우는 클리핑 패스으로 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de9680760c6f064505ac104da8a86b9b6522315c" translate="yes" xml:space="preserve">
          <source>You will need to already know how HTTP works and have medium programming experience. Depending on language support, knowledge of TCP sockets may be required. The scope of this guide is to present the minimum knowledge you need to write a WebSocket server.</source>
          <target state="translated">HTTP의 작동 방식을 이미 알고 있고 프로그래밍 경험이 보통이어야합니다. 언어 지원에 따라 TCP 소켓에 대한 지식이 필요할 수 있습니다. 이 안내서의 범위는 WebSocket 서버를 작성하는 데 필요한 최소한의 지식을 제시하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="46e20587af3de1356dbd28ea299b395cf2e6b5fc" translate="yes" xml:space="preserve">
          <source>You will rarely if ever construct an &lt;code&gt;RTCDataChannelEvent&lt;/code&gt; by hand; instead, the WebRTC layer will generate and deliver them to you at the appropriate time. Just listen for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; event and when you receive it, use the &lt;a href=&quot;rtcdatachannelevent/channel&quot;&gt;&lt;code&gt;RTCDataChannelEvent.channel&lt;/code&gt;&lt;/a&gt; property to gain access to the data channel which has been opened.</source>
          <target state="translated">&lt;code&gt;RTCDataChannelEvent&lt;/code&gt; 를 직접 작성 하는 경우는 거의 없습니다 . 대신 WebRTC 계층이 적절한 시간에이를 생성하여 전달합니다. 그냥 수신 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; 의 이벤트 당신이 그것을받을 때 사용 &lt;a href=&quot;rtcdatachannelevent/channel&quot;&gt; &lt;code&gt;RTCDataChannelEvent.channel&lt;/code&gt; 의&lt;/a&gt; 개방 된 데이터 채널에 액세스 할 속성을.</target>
        </trans-unit>
        <trans-unit id="793f91ac33be70fae27a4d7cde00ff9629a23e3a" translate="yes" xml:space="preserve">
          <source>You will rarely if ever construct an &lt;code&gt;RTCDataChannelEvent&lt;/code&gt; by hand; these events are normally created and sent by the WebRTC layer itself.</source>
          <target state="translated">&lt;code&gt;RTCDataChannelEvent&lt;/code&gt; 를 직접 작성 하는 경우는 거의 없습니다 . 이러한 이벤트는 일반적으로 WebRTC 계층 자체에서 작성하고 전송합니다.</target>
        </trans-unit>
        <trans-unit id="f1dd7c2262916d129a1c96f3ed6d335cd1561927" translate="yes" xml:space="preserve">
          <source>You will, however, have more control if you use a buffer node. You have to request the file and wait for it to load (&lt;a href=&quot;advanced_techniques#Dial_up_%E2%80%94_loading_a_sound_sample&quot;&gt;this section of our advanced article&lt;/a&gt; shows a good way to do it), but then you have access to the data directly, which means more precision, and more precise manipulation.</source>
          <target state="translated">그러나 버퍼 노드를 사용하면 더 많은 제어권을 갖게됩니다. 파일을 요청하고 파일 &lt;a href=&quot;advanced_techniques#Dial_up_%E2%80%94_loading_a_sound_sample&quot;&gt;이&lt;/a&gt; 로드 될 때까지 기다려야합니다 ( 고급 기사의이 섹션 에서 파일을 작성 하는 좋은 방법을 보여줍니다). 그러면 데이터에 직접 액세스 할 수 있으므로 더 정확하고 정밀하게 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9984b64af29311674b09c688d582977aeb43ecb1" translate="yes" xml:space="preserve">
          <source>You won't access &lt;code&gt;WorkerGlobalScope&lt;/code&gt; directly in your code; however, its properties and methods are inherited by more specific global scopes such as &lt;a href=&quot;dedicatedworkerglobalscope&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sharedworkerglobalscope&quot;&gt;&lt;code&gt;SharedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt;. For example, you could import another script into the worker and print out the contents of the worker scope's &lt;code&gt;navigator&lt;/code&gt; object using the following two lines:</source>
          <target state="translated">코드에서 &lt;code&gt;WorkerGlobalScope&lt;/code&gt; 에 직접 액세스하지 않습니다 . 그러나 해당 특성 및 메소드는 &lt;a href=&quot;dedicatedworkerglobalscope&quot;&gt; &lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;sharedworkerglobalscope&quot;&gt; &lt;code&gt;SharedWorkerGlobalScope&lt;/code&gt; &lt;/a&gt; 와 같은보다 구체적인 글로벌 범위에 의해 상속됩니다 . 예를 들어, 다른 스크립트를 작업자로 가져 와서 다음 두 줄을 사용하여 작업자 범위의 &lt;code&gt;navigator&lt;/code&gt; 개체 내용을 인쇄 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0413400fb3bf61df04a1c1e063f6b1e33c7af000" translate="yes" xml:space="preserve">
          <source>You write a function that starts off by reading the stream.</source>
          <target state="translated">스트림을 읽어서 시작하는 함수를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="6f8f3524dd770735f69b346878b9d8fee657b8c2" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;d really prefer to treat all those adjacent text nodes as a single one. That&amp;rsquo;s where &lt;code&gt;wholeText&lt;/code&gt; comes in: if you have multiple adjacent text nodes, you can access the contents of all of them using &lt;code&gt;wholeText&lt;/code&gt;. Let&amp;rsquo;s pretend you never made that last mistake. In that case, we have:</source>
          <target state="translated">인접한 모든 텍스트 노드를 단일 노드로 취급하는 것이 좋습니다. 여기서 &lt;code&gt;wholeText&lt;/code&gt; 가 시작됩니다. 인접한 텍스트 노드가 여러 개인 경우 &lt;code&gt;wholeText&lt;/code&gt; 를 사용하여 모든 노드의 내용에 액세스 할 수 있습니다 . 마지막 실수를 한 적이없는 척하자. 이 경우 다음이 있습니다.</target>
        </trans-unit>
        <trans-unit id="55f79d8b6af40daaf07aa44485854a8f0e9d528f" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll also need to serve your code via HTTPS &amp;mdash; Service workers are restricted to running across HTTPS for security reasons. GitHub is therefore a good place to host experiments, as it supports HTTPS. In order to facilitate local development, &lt;code&gt;localhost&lt;/code&gt; is considered a secure origin by browsers as well.</source>
          <target state="translated">또한 HTTPS를 통해 코드를 제공해야합니다. 보안상의 이유로 서비스 워커는 HTTPS에서 실행하도록 제한되어 있습니다. 따라서 GitHub는 HTTPS를 지원하므로 실험을 호스팅하기에 좋은 장소입니다. 로컬 개발을 용이하게하기 위해 &lt;code&gt;localhost&lt;/code&gt; 는 브라우저에서도 안전한 출처로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="e458e4892384f3263bbbdd722d9d4609b1496f00" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll notice a few differences here from how equivalent values are represented in CSS:</source>
          <target state="translated">CSS에서 동등한 값을 나타내는 방법과는 약간의 차이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a651a3b5669977d5c8e81e8cf13e2879fbcf7dde" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll notice that the &lt;code&gt;start()&lt;/code&gt; and &lt;code&gt;pull()&lt;/code&gt; methods passed into the &lt;code&gt;ReadableStream&lt;/code&gt; constructor are given &lt;code&gt;controller&lt;/code&gt; parameters &amp;mdash; these are instances of the &lt;a href=&quot;../readablestreamdefaultcontroller&quot;&gt;&lt;code&gt;ReadableStreamDefaultController&lt;/code&gt;&lt;/a&gt; class, which can be used to control your stream.</source>
          <target state="translated">당신은 것을 알 수 있습니다 &lt;code&gt;start()&lt;/code&gt; 와 &lt;code&gt;pull()&lt;/code&gt; 에 전달 방법 &lt;code&gt;ReadableStream&lt;/code&gt; 의 생성자가 주어진다 &lt;code&gt;controller&lt;/code&gt; 매개 변수를 - 이들의 인스턴스 &lt;a href=&quot;../readablestreamdefaultcontroller&quot;&gt; &lt;code&gt;ReadableStreamDefaultController&lt;/code&gt; &lt;/a&gt; 스트림을 제어하는 데 사용할 수있는 클래스.</target>
        </trans-unit>
        <trans-unit id="6eb5d2a3909c5b271ebe6474ac19662ef474f617" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll want to update your &lt;code&gt;install&lt;/code&gt; event listener in the new service worker to something like this (notice the new version number):</source>
          <target state="translated">새 서비스 워커 의 &lt;code&gt;install&lt;/code&gt; 이벤트 리스너를 다음과 같이 업데이트하십시오 (새 버전 번호에 주목).</target>
        </trans-unit>
        <trans-unit id="577f804d8fe6ea0abe9e0e5606b4994fd8344c6f" translate="yes" xml:space="preserve">
          <source>You'd need &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt; to append the new value onto the values, not overwrite it.</source>
          <target state="translated">새 값을 덮어 쓰지 않고 값에 추가 하려면 &lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; &lt;/a&gt; 가 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="9fe7d78d475aa209b8f77e981521f29e8843591b" translate="yes" xml:space="preserve">
          <source>You'll find the following useful:</source>
          <target state="translated">다음과 같은 유용한 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8ec0e1774d1ee1d75e45ccb12c88dc134a33176" translate="yes" xml:space="preserve">
          <source>You'll get a better understanding of what these do by looking at the examples below.</source>
          <target state="translated">아래 예제를 보면 이러한 기능에 대해 더 잘 이해할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2709e0c189788ac87fd3dd7443044630c818fb6" translate="yes" xml:space="preserve">
          <source>You'll learn below how the stereoscopic view is actually produced.</source>
          <target state="translated">입체 영상이 실제로 어떻게 생성되는지 아래에서 배우게됩니다.</target>
        </trans-unit>
        <trans-unit id="aba6a9c82449f3108df424821442911543939779" translate="yes" xml:space="preserve">
          <source>You'll need to serve your code through a web server for recognition to work.</source>
          <target state="translated">인식이 작동하려면 웹 서버를 통해 코드를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="49309a358394c35b40eab1a6a72a827d86863585" translate="yes" xml:space="preserve">
          <source>You'll notice the difference between the filled and stroked triangle. This is, as mentioned above, because shapes are automatically closed when a path is filled, but not when they are stroked. If we left out the &lt;code&gt;closePath()&lt;/code&gt; for the stroked triangle, only two lines would have been drawn, not a complete triangle.</source>
          <target state="translated">채워진 삼각형과 획이있는 삼각형의 차이점을 알 수 있습니다. 위에서 언급 한 것처럼 패스를 채울 때는 셰이프가 자동으로 닫히지 만 획을 칠 때는 그렇지 않기 때문입니다. 스트로크 된 삼각형에 대해 &lt;code&gt;closePath()&lt;/code&gt; 를 생략하면 완전한 삼각형이 아닌 두 개의 선만 그려졌을 것입니다.</target>
        </trans-unit>
        <trans-unit id="b26ff849b7a0bf500824e5ee758ab6f7ee6b3265" translate="yes" xml:space="preserve">
          <source>You'll see that we are modifying these values by the position (&lt;code&gt;curPos&lt;/code&gt;) and orientation (&lt;code&gt;curOrient&lt;/code&gt;) of the VR display we got from the &lt;a href=&quot;../vrpose&quot;&gt;&lt;code&gt;VRPose&lt;/code&gt;&lt;/a&gt; object. The result is that, for example, as you move or rotate your head left, the x position value (&lt;code&gt;curPos[0]&lt;/code&gt;) and y rotation value (&lt;code&gt;[curOrient[1]&lt;/code&gt;) are added to the x translation value, meaning that the cube will move to the right, as you'd expect when you are looking at something and then move/turn your head left.</source>
          <target state="translated">&lt;a href=&quot;../vrpose&quot;&gt; &lt;code&gt;VRPose&lt;/code&gt; &lt;/a&gt; 객체 에서 가져온 VR 디스플레이 의 위치 ( &lt;code&gt;curPos&lt;/code&gt; ) 및 방향 ( &lt;code&gt;curOrient&lt;/code&gt; ) 으로이 값을 수정하고 있음을 알 수 있습니다 . 예를 들어, 머리를 왼쪽으로 움직이거나 회전 시키면 x 위치 값 ( &lt;code&gt;curPos[0]&lt;/code&gt; ) 및 y 회전 값 ( &lt;code&gt;[curOrient[1]&lt;/code&gt; )이 x 평행 이동 값에 추가되어 큐브가 무언가를보고있을 때 예상 한대로 머리를 왼쪽으로 움직입니다.</target>
        </trans-unit>
        <trans-unit id="1044afa265dc5d4abe6bef03e131e24e5033d35d" translate="yes" xml:space="preserve">
          <source>You'll want to be sure to let your users know that they can press the</source>
          <target state="translated">사용자에게 사용자가 키를 누를 수 있음을 알리고 싶을 것입니다</target>
        </trans-unit>
        <trans-unit id="5b467f31409c53651bb860d1f7f9f194095d8f2f" translate="yes" xml:space="preserve">
          <source>You've removed the second item clearing all types, then the old third item becomes new second item, and its index decreases.</source>
          <target state="translated">모든 유형을 지우는 두 번째 항목을 제거하면 이전 세 번째 항목이 새 두 번째 항목이되고 색인이 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="b8de0a4677e93fc00ffe2db2861e36f3c2926f29" translate="yes" xml:space="preserve">
          <source>You've seen this code before. It's nearly identical to the image onload function in the previous example &amp;mdash; except when we call &lt;code&gt;texImage2D()&lt;/code&gt;, instead of passing an &lt;code&gt;Image&lt;/code&gt; object, we pass in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element. WebGL knows how to pull the current frame out and use it as a texture.</source>
          <target state="translated">이 코드를 본 적이 있습니다. 이전 예제의 이미지 onload 함수와 거의 동일합니다. &lt;code&gt;Image&lt;/code&gt; 객체 를 전달하는 대신 &lt;code&gt;texImage2D()&lt;/code&gt; 호출 할 때를 제외하고 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소를 전달합니다. WebGL은 현재 프레임을 잡아 당겨 텍스처로 사용하는 방법을 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="092109e86c78ed08e202ab67fb732c07e8481eb6" translate="yes" xml:space="preserve">
          <source>Your &lt;a href=&quot;../rtcpeerconnection/onicecandidate&quot;&gt;&lt;code&gt;onicecandidate&lt;/code&gt;&lt;/a&gt; handler receives an event whose &lt;code&gt;candidate&lt;/code&gt; property is the SDP describing the candidate (or is &lt;code&gt;null&lt;/code&gt; to indicate that the ICE layer has run out of potential configurations to suggest). The contents of &lt;code&gt;candidate&lt;/code&gt; are what you need to transmit using your signaling server. Here's our example's implementation:</source>
          <target state="translated">내 &lt;a href=&quot;../rtcpeerconnection/onicecandidate&quot;&gt; &lt;code&gt;onicecandidate&lt;/code&gt; &lt;/a&gt; 핸들러는 그 이벤트를 수신 할 &lt;code&gt;candidate&lt;/code&gt; 등록 후보를 설명하는 SDP이다 (또는 인 &lt;code&gt;null&lt;/code&gt; 얼음 층 제안 전위 구성이 부족하게 된 것을 나타 내기 위해서). &lt;code&gt;candidate&lt;/code&gt; 의 내용은 시그널링 서버를 사용하여 전송해야하는 내용입니다 . 예제 구현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7d137df5b7b02562d59384aabbad810f7696490e" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dataavailable&quot;&gt;dataavailable&lt;/a&gt;&lt;/code&gt; event handler gets called every time there's data ready for you to do with as you will; the event has a &lt;code&gt;data&lt;/code&gt; attribute whose value is a &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; that contains the media data. You can force a &lt;code&gt;dataavailable&lt;/code&gt; event to occur, thereby delivering the latest sound to you so you can filter it, save it, or whatever.</source>
          <target state="translated">귀하의 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dataavailable&quot;&gt;dataavailable&lt;/a&gt;&lt;/code&gt; 이벤트 핸들러는 당신이 의지로 함께 할 데이터가 준비가있을 때마다 호출됩니다; 이벤트에는 값이 미디어 데이터를 포함 하는 &lt;a href=&quot;blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt; 인 &lt;code&gt;data&lt;/code&gt; 속성 이 있습니다. 당신은 강제 할 수 &lt;code&gt;dataavailable&lt;/code&gt; 당신이 그것을 저장, 그것을 필터, 또는 무엇이든 할 수 있도록함으로써 당신에게 최신의 사운드를 제공, 발생하는 이벤트.</target>
        </trans-unit>
        <trans-unit id="64bc65448052540477cfebd403f9ce5f81e9d0b5" translate="yes" xml:space="preserve">
          <source>Your HTML page:</source>
          <target state="translated">HTML 페이지 :</target>
        </trans-unit>
        <trans-unit id="8e5b0b8be62e6f9e9b6038b901a182ddcd3e0b0f" translate="yes" xml:space="preserve">
          <source>Your code receives a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; event when the remote peer removes a track from the connection by calling &lt;a href=&quot;../rtcpeerconnection/removetrack&quot;&gt;&lt;code&gt;RTCPeerConnection.removeTrack()&lt;/code&gt;&lt;/a&gt;. Our handler for &lt;code&gt;&quot;removetrack&quot;&lt;/code&gt; is:</source>
          <target state="translated">원격 피어가 &lt;a href=&quot;../rtcpeerconnection/removetrack&quot;&gt; &lt;code&gt;RTCPeerConnection.removeTrack()&lt;/code&gt; &lt;/a&gt; 을 호출하여 연결에서 트랙을 제거하면 코드가 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; 이벤트를 수신합니다 . &lt;code&gt;&quot;removetrack&quot;&lt;/code&gt; 에 대한 핸들러 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="22437800610e0fe4be608037339d96db40cc02ea" translate="yes" xml:space="preserve">
          <source>Your service worker can respond to requests using the &lt;a href=&quot;fetchevent&quot;&gt;&lt;code&gt;FetchEvent&lt;/code&gt;&lt;/a&gt; event. You can modify the response to these requests in any way you want, using the &lt;a href=&quot;fetchevent/respondwith&quot;&gt;&lt;code&gt;FetchEvent.respondWith&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">서비스 담당자는 &lt;a href=&quot;fetchevent&quot;&gt; &lt;code&gt;FetchEvent&lt;/code&gt; &lt;/a&gt; 이벤트를 사용하여 요청에 응답 할 수 있습니다 . &lt;a href=&quot;fetchevent/respondwith&quot;&gt; &lt;code&gt;FetchEvent.respondWith&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 원하는 방식으로 이러한 요청에 대한 응답을 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5215bcc1c5ac55b8e7a0ff1fd02a58454df6fab9" translate="yes" xml:space="preserve">
          <source>Z = Vz * sin(&amp;theta;/2)</source>
          <target state="translated">Z = Vz * sin (&amp;theta; / 2)</target>
        </trans-unit>
        <trans-unit id="ee19ee8521779c883c663ee6e0c1b8295bdbb43d" translate="yes" xml:space="preserve">
          <source>Zero or more &lt;code&gt;touchmove&lt;/code&gt; events, depending on movement of the finger(s)</source>
          <target state="translated">손가락의 움직임에 따라 0 개 이상의 &lt;code&gt;touchmove&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="5b62d82711b9f8f238c19d20a79d213dd5394a37" translate="yes" xml:space="preserve">
          <source>Zero or more blank lines</source>
          <target state="translated">0 개 이상의 빈 줄</target>
        </trans-unit>
        <trans-unit id="505a0b8c4af86d1c8442115b1be0a980ebfd5179" translate="yes" xml:space="preserve">
          <source>Zero or more characters other than those noted above</source>
          <target state="translated">위에서 언급 한 것 이외의 0 개 이상의 문자</target>
        </trans-unit>
        <trans-unit id="9f2f5d0f5f4187f4e5ee859a122e1f753be302bb" translate="yes" xml:space="preserve">
          <source>Zero or more cues or comments</source>
          <target state="translated">0 개 이상의 큐 또는 주석</target>
        </trans-unit>
        <trans-unit id="e04d8e653212ebe3017a71c370155b60a1c1f062" translate="yes" xml:space="preserve">
          <source>ZoomAndPan</source>
          <target state="translated">ZoomAndPan</target>
        </trans-unit>
        <trans-unit id="2532b55a1cc7cef9cd095920304f5c8474a99204" translate="yes" xml:space="preserve">
          <source>Zooming and anti-aliasing</source>
          <target state="translated">확대 / 축소 및 앤티 앨리어싱</target>
        </trans-unit>
        <trans-unit id="c84101bc97c0b9dde05a414dc66ddba805c7ebd7" translate="yes" xml:space="preserve">
          <source>[0] (c) Copyright 2008, Blender Foundation / www.bigbuckbunny.org / https://peach.blender.org/about/</source>
          <target state="translated">[0] (c) Copyright 2008, Blender Foundation / www.bigbuckbunny.org / https://peach.blender.org/about/</target>
        </trans-unit>
        <trans-unit id="d67455fe968e8994cbb2d962a68430f781aeed20" translate="yes" xml:space="preserve">
          <source>[1] &lt;a href=&quot;idbcursorwithvalue&quot;&gt;&lt;code&gt;IDBCursorWithValue&lt;/code&gt;&lt;/a&gt; is not available in workers until Gecko 42.0 (Firefox 42.0 / Thunderbird 42.0 / SeaMonkey 2.39).</source>
          <target state="translated">[1] &lt;a href=&quot;idbcursorwithvalue&quot;&gt;&lt;code&gt;IDBCursorWithValue&lt;/code&gt;&lt;/a&gt; is not available in workers until Gecko 42.0 (Firefox 42.0 / Thunderbird 42.0 / SeaMonkey 2.39).</target>
        </trans-unit>
        <trans-unit id="59852a7518407b58e80b2507227f44b7c0f72c80" translate="yes" xml:space="preserve">
          <source>[1] Before Firefox 35, it was implemented on the &lt;code&gt;Node&lt;/code&gt; interface.</source>
          <target state="translated">[1] Before Firefox 35, it was implemented on the &lt;code&gt;Node&lt;/code&gt; interface.</target>
        </trans-unit>
        <trans-unit id="4c87b007056d9a14e962637d64591a6408e75cbe" translate="yes" xml:space="preserve">
          <source>[1] Behind the chrome://flags#enable-webauthentication flag. (This only works as a link in Chrome.)</source>
          <target state="translated">[1] Behind the chrome://flags#enable-webauthentication flag. (This only works as a link in Chrome.)</target>
        </trans-unit>
        <trans-unit id="b2b1df3fa1c480004478ae95f7311c6df4426c4d" translate="yes" xml:space="preserve">
          <source>[1] Chrome and Opera give an error &quot;&lt;code&gt;Uncaught SecurityError: Failed to construct 'Worker': Script at 'file:///Path/to/worker.js' cannot be accessed from origin 'null'.&lt;/code&gt;&quot; when you try to run a worker locally. It needs to be on a proper domain.</source>
          <target state="translated">[1] Chrome and Opera give an error &quot;&lt;code&gt;Uncaught SecurityError: Failed to construct 'Worker': Script at 'file:///Path/to/worker.js' cannot be accessed from origin 'null'.&lt;/code&gt;&quot; when you try to run a worker locally. It needs to be on a proper domain.</target>
        </trans-unit>
        <trans-unit id="14d2285a18e12af793810941f6cb61516c1d710a" translate="yes" xml:space="preserve">
          <source>[1] In Gecko, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt; is not dispatched if the source node is moved or removed during the drag (e.g. on drop or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;). &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=460801&quot;&gt;bug 460801&lt;/a&gt;</source>
          <target state="translated">[1] In Gecko, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt; is not dispatched if the source node is moved or removed during the drag (e.g. on drop or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;). &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=460801&quot;&gt;bug 460801&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0c147ebbd08509d39d80d1182c4d90127c54128" translate="yes" xml:space="preserve">
          <source>[1] Internet Explorer does not support &lt;a href=&quot;../transferable&quot;&gt;&lt;code&gt;Transferable&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">[1] Internet Explorer does not support &lt;a href=&quot;../transferable&quot;&gt;&lt;code&gt;Transferable&lt;/code&gt;&lt;/a&gt; objects.</target>
        </trans-unit>
        <trans-unit id="878b3e058e60cd1842db5a2e7282f7442b16fce3" translate="yes" xml:space="preserve">
          <source>[1] Service workers (and &lt;a href=&quot;push_api&quot;&gt;Push&lt;/a&gt;) have been disabled in the &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/organizations/&quot;&gt;Firefox 45 &amp;amp; 52 &amp;amp; 60 Extended Support Releases&lt;/a&gt; (ESR.)</source>
          <target state="translated">[1] Service workers (and &lt;a href=&quot;push_api&quot;&gt;Push&lt;/a&gt;) have been disabled in the &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/organizations/&quot;&gt;Firefox 45 &amp;amp; 52 &amp;amp; 60 Extended Support Releases&lt;/a&gt; (ESR.)</target>
        </trans-unit>
        <trans-unit id="179a9641d2254ee2ca6dbeab3a2e2da7f5309985" translate="yes" xml:space="preserve">
          <source>[1] Speech recognition interfaces are currently prefixed on Chrome, so you'll need to prefix interface names appropriately, e.g. &lt;code&gt;webkitSpeechRecognition&lt;/code&gt;; You'll also need to serve your code through a web server for recognition to work.</source>
          <target state="translated">[1] Speech recognition interfaces are currently prefixed on Chrome, so you'll need to prefix interface names appropriately, e.g. &lt;code&gt;webkitSpeechRecognition&lt;/code&gt;; You'll also need to serve your code through a web server for recognition to work.</target>
        </trans-unit>
        <trans-unit id="10414ca55b7bbc8c714a39f9fa591124f5d9fe4a" translate="yes" xml:space="preserve">
          <source>[1] This interface's features are still implemented on the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">[1] This interface's features are still implemented on the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; object.</target>
        </trans-unit>
        <trans-unit id="2c47f0c9bcbeae5ede8e179f8563bb25efa4f305" translate="yes" xml:space="preserve">
          <source>[1] To determine if a sender has at least one active encoding, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; gets its parameters using &lt;a href=&quot;../rtcrtpsender/getparameters&quot;&gt;&lt;code&gt;RTCRtpSender.getParameters()&lt;/code&gt;&lt;/a&gt;, then looks at the parameters' &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpParameters/encodings&quot;&gt;&lt;code&gt;encodings&lt;/code&gt;&lt;/a&gt; property; if any of the listed encodings has its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/active&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt; property set to &lt;code&gt;true&lt;/code&gt;, the sender has an active encoding.</source>
          <target state="translated">[1] To determine if a sender has at least one active encoding, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; gets its parameters using &lt;a href=&quot;../rtcrtpsender/getparameters&quot;&gt;&lt;code&gt;RTCRtpSender.getParameters()&lt;/code&gt;&lt;/a&gt;, then looks at the parameters' &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpParameters/encodings&quot;&gt;&lt;code&gt;encodings&lt;/code&gt;&lt;/a&gt; property; if any of the listed encodings has its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/active&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt; property set to &lt;code&gt;true&lt;/code&gt;, the sender has an active encoding.</target>
        </trans-unit>
        <trans-unit id="1080863bfad749d50b17a8bfdbef03d8825960c9" translate="yes" xml:space="preserve">
          <source>[1] To determine if a sender has at least one active encoding, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; gets its parameters using &lt;a href=&quot;rtcrtpsender/getparameters&quot;&gt;&lt;code&gt;RTCRtpSender.getParameters()&lt;/code&gt;&lt;/a&gt;, then looks at the parameters' &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpParameters/encodings&quot;&gt;&lt;code&gt;encodings&lt;/code&gt;&lt;/a&gt; property; if any of the listed encodings has its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/active&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt; property set to &lt;code&gt;true&lt;/code&gt;, the sender has an active encoding.</source>
          <target state="translated">[1] To determine if a sender has at least one active encoding, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; gets its parameters using &lt;a href=&quot;rtcrtpsender/getparameters&quot;&gt;&lt;code&gt;RTCRtpSender.getParameters()&lt;/code&gt;&lt;/a&gt;, then looks at the parameters' &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpParameters/encodings&quot;&gt;&lt;code&gt;encodings&lt;/code&gt;&lt;/a&gt; property; if any of the listed encodings has its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/active&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt; property set to &lt;code&gt;true&lt;/code&gt;, the sender has an active encoding.</target>
        </trans-unit>
        <trans-unit id="8e919050c78e2eb092b19334923a4884b4b8ea37" translate="yes" xml:space="preserve">
          <source>[1] When &lt;code&gt;create&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the value of &lt;code&gt;exclusive&lt;/code&gt; is irrelevant and ignored.</source>
          <target state="translated">[1] When &lt;code&gt;create&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the value of &lt;code&gt;exclusive&lt;/code&gt; is irrelevant and ignored.</target>
        </trans-unit>
        <trans-unit id="bfb1589a051fb9e4f70cb77b5ef8c2797251d896" translate="yes" xml:space="preserve">
          <source>[2] As of Safari 7.1.2, you can call &lt;code&gt;console.log&lt;/code&gt; from inside a worker, but it won't print anything to the console. Older versions of Safari don't allow you to call &lt;code&gt;console.log&lt;/code&gt; from inside a worker.</source>
          <target state="translated">[2] As of Safari 7.1.2, you can call &lt;code&gt;console.log&lt;/code&gt; from inside a worker, but it won't print anything to the console. Older versions of Safari don't allow you to call &lt;code&gt;console.log&lt;/code&gt; from inside a worker.</target>
        </trans-unit>
        <trans-unit id="8da93cb6380d2eecbafaa6325129de644b082a14" translate="yes" xml:space="preserve">
          <source>[2] Can be enabled via the &lt;code&gt;media.webspeech.recognition.enable&lt;/code&gt; flag in &lt;a&gt;about:config&lt;/a&gt;, although note that currently speech recognition won't work on Desktop Firefox &amp;mdash; it will be properly exposed soon, once the required internal permissions are sorted out.</source>
          <target state="translated">[2] Can be enabled via the &lt;code&gt;media.webspeech.recognition.enable&lt;/code&gt; flag in &lt;a&gt;about:config&lt;/a&gt;, although note that currently speech recognition won't work on Desktop Firefox &amp;mdash; it will be properly exposed soon, once the required internal permissions are sorted out.</target>
        </trans-unit>
        <trans-unit id="631e9c7289963ec1fba68be556de5fab193a8e03" translate="yes" xml:space="preserve">
          <source>[2] This feature is currently hidden behind a flag &amp;mdash; to enable it and experiment, go to about:config and enable dom.indexedDB.experimental.</source>
          <target state="translated">[2] This feature is currently hidden behind a flag &amp;mdash; to enable it and experiment, go to about:config and enable dom.indexedDB.experimental.</target>
        </trans-unit>
        <trans-unit id="1ceecb07fe5bec0ab760115a4aa589331ea6b1d0" translate="yes" xml:space="preserve">
          <source>[3] AKA &quot;Private Browsing Mode&quot; (Firefox) and &quot;Incognito&quot; (Chrome).</source>
          <target state="translated">[3] AKA &quot;Private Browsing Mode&quot; (Firefox) and &quot;Incognito&quot; (Chrome).</target>
        </trans-unit>
        <trans-unit id="e13214c517f2bc7af9ad01d337425ffd23bf38e8" translate="yes" xml:space="preserve">
          <source>[3] This feature is implemented prefixed as &lt;code&gt;webkitURL&lt;/code&gt;.</source>
          <target state="translated">[3] This feature is implemented prefixed as &lt;code&gt;webkitURL&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="792a418df69109ae32e213cb1cc338711b7054f3" translate="yes" xml:space="preserve">
          <source>[4] Safari &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=116359&quot;&gt;removed SharedWorker support&lt;/a&gt;.</source>
          <target state="translated">[4] Safari &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=116359&quot;&gt;removed SharedWorker support&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="71c32a040534e289f1c01307a09f88e171ca8c42" translate="yes" xml:space="preserve">
          <source>[enter description]</source>
          <target state="translated">[enter description]</target>
        </trans-unit>
        <trans-unit id="08534f33c201a45017b502e90a800f1b708ebcb3" translate="yes" xml:space="preserve">
          <source>\</source>
          <target state="translated">\</target>
        </trans-unit>
        <trans-unit id="6e3d5f575d8cc3b5211d393dae6e8dfc82b54c77" translate="yes" xml:space="preserve">
          <source>\left(a+bi\right)e^{i} , \left(c+di\right)e^{2i} , \left(f+gi\right)e^{3i}</source>
          <target state="translated">\left(a+bi\right)e^{i} , \left(c+di\right)e^{2i} , \left(f+gi\right)e^{3i}</target>
        </trans-unit>
        <trans-unit id="87f4324b5b95d003ae6e7287e63fc520bfda280b" translate="yes" xml:space="preserve">
          <source>\left[ \begin{array}{ccc} a &amp;amp; c &amp;amp; e \\ b &amp;amp; d &amp;amp; f \\ 0 &amp;amp; 0 &amp;amp; 1 \end{array} \right]</source>
          <target state="translated">\left[ \begin{array}{ccc} a &amp;amp; c &amp;amp; e \\ b &amp;amp; d &amp;amp; f \\ 0 &amp;amp; 0 &amp;amp; 1 \end{array} \right]</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="4706b3722c78cb06aa127405460caec3d0c571e6" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt; is raised if the index number is greater than or equal to &lt;code&gt;numberOfItems&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt; 코드와 &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt; 는 인덱스 번호가 동일하거나보다 큰 경우에 발생 &lt;code&gt;numberOfItems&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7401565154f7690c023d54a0c11daacd0d105c4d" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt; is raised if &lt;code&gt;unitType&lt;/code&gt; is &lt;code&gt;SVG_ANGLETYPE_UNKNOWN&lt;/code&gt; or not a valid unit type constant (one of the other &lt;code&gt;SVG_ANGLETYPE_*&lt;/code&gt; constants defined on this interface). a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; is raised when the length corresponds to a read only attribute or when the object itself is read only.</source>
          <target state="translated">&lt;code&gt;unitType&lt;/code&gt; 이 &lt;code&gt;SVG_ANGLETYPE_UNKNOWN&lt;/code&gt; 이거나 유효한 단위 유형 상수 ( 이 인터페이스에 정의 된 다른 &lt;code&gt;SVG_ANGLETYPE_*&lt;/code&gt; 상수 중 하나)가 아닌 경우 &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt; 코드가 있는 &lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt; 이 발생합니다 . &lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt; 코드와 &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; 는 (A)에 대응하고, 길이 만 특성을 읽을 때 또는 개체 자체 만 판독 될 때 발생된다.</target>
        </trans-unit>
        <trans-unit id="fd89625fd50148c103db19a6a80563a9e0aa4747" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt; is raised if &lt;code&gt;unitType&lt;/code&gt; is &lt;code&gt;SVG_LENGTHTYPE_UNKNOWN&lt;/code&gt; or not a valid unit type constant (one of the other &lt;code&gt;SVG_LENGTHTYPE_*&lt;/code&gt; constants defined on this interface).</source>
          <target state="translated">&lt;code&gt;unitType&lt;/code&gt; 이 &lt;code&gt;SVG_LENGTHTYPE_UNKNOWN&lt;/code&gt; 이거나 유효한 단위 유형 상수 ( 이 인터페이스에 정의 된 다른 &lt;code&gt;SVG_LENGTHTYPE_*&lt;/code&gt; 상수 중 하나)가 아닌 경우 &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt; 코드가 있는 &lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt; 이 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="b658d3e64c030c46188bb501f9fd26adc952a017" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; is raised when attempting to modify a read only attribute or when the object itself is read only.</source>
          <target state="translated">읽기 전용 속성을 수정하려고 할 때 또는 객체 자체가 읽기 전용 인 경우 코드 &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; 의 &lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2f8964157f5954e5e456549734c0a0094d5af691" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; is raised when the length corresponds to a read only attribute or when the object itself is read only.</source>
          <target state="translated">&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt; 코드와 &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; 는 (A)에 대응하고, 길이 만 특성을 읽을 때 또는 개체 자체 만 판독 될 때 발생된다.</target>
        </trans-unit>
        <trans-unit id="b25abf8a6c12fa9d7954392099a054692f27884d" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; is raised when the list corresponds to a read only attribute or when the object itself is read only.</source>
          <target state="translated">목록이 읽기 전용 속성에 해당하거나 오브젝트 자체가 읽기 전용 인 경우 코드 &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; 의 &lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fe2f9a8b4a3ebe40be4ab7c6e2545b4dbb4a5677" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;SYNTAX_ERR&lt;/code&gt; is raised if the assigned string cannot be parsed as a valid &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt;. a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; is raised when the length corresponds to a read only attribute or when the object itself is read only.</source>
          <target state="translated">&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt; 코드와 &lt;code&gt;SYNTAX_ERR&lt;/code&gt; 는 지정된 문자열이 유효한 것으로 해석 할 수없는 경우 발생 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt; &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt; 코드와 &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; 는 (A)에 대응하고, 길이 만 특성을 읽을 때 또는 개체 자체 만 판독 될 때 발생된다.</target>
        </trans-unit>
        <trans-unit id="0141036b7c50b07dc28ca582206fae76b4a0b663" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;SYNTAX_ERR&lt;/code&gt; is raised if the assigned string cannot be parsed as a valid &lt;a href=&quot;https://developer.mozilla.org/en/SVG/Content_type#Length&quot;&gt;&amp;lt;length&amp;gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt; 코드와 &lt;code&gt;SYNTAX_ERR&lt;/code&gt; 는 지정된 문자열이 유효한 것으로 해석 할 수없는 경우 발생 &lt;a href=&quot;https://developer.mozilla.org/en/SVG/Content_type#Length&quot;&gt;&amp;lt;길이&amp;gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="774a0c9914af39ce0c2e77a4dc5d1998b507db9e" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves if the access to first-party storage was granted, and rejects if access was denied.</source>
          <target state="translated">자사 스토리지에 대한 액세스 권한이 부여되었는지 확인하고 액세스가 거부 된 경우 거부 하는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="437fdf32516e8a6ca311732fe66f23798460e61e" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to &lt;code&gt;true&lt;/code&gt; if the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object is found and deleted, and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; 에 해결합니다 &lt;code&gt;true&lt;/code&gt; 경우 &lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;Cache&lt;/code&gt; &lt;/a&gt; 개체를 발견하고 삭제하고 &lt;code&gt;false&lt;/code&gt; 이 없습니다.</target>
        </trans-unit>
        <trans-unit id="56f0d54402257d66d2640216a00c49cb4ac18d94" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to &lt;code&gt;true&lt;/code&gt; if the cache exists or false if not.</source>
          <target state="translated">캐시가 존재하면 &lt;code&gt;true&lt;/code&gt; 로, 그렇지 않으면 false로 확인 되는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5e95e1841fde6d96a4b0e772cc0916f13b3cd3bf" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to an array of all matching requests in the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;Cache&lt;/code&gt; &lt;/a&gt; 객체 에서 일치하는 모든 요청의 배열로 해석 되는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6d4d22be5f59e376180cd52f71be5e46fd8e02a" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to the matching &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt;. If no matching response to the specified request is found, the promise resolves with &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">일치하는 &lt;a href=&quot;../response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; 로&lt;/a&gt; 해결 되는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; . 지정된 요청에 일치하는 응답이 없으면 약속은 &lt;code&gt;undefined&lt;/code&gt; 로 해결됩니다 .</target>
        </trans-unit>
        <trans-unit id="d4c4bbbe5d04fae943e46c17008cf8595a386532" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to true if the cache entry is deleted, or false otherwise.</source>
          <target state="translated">캐시 항목이 삭제되면 true로, 그렇지 않으면 false로 확인 되는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="39de01b60f99c52665013693b541ec1efd1ef1f6" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves with a reference to a &lt;a href=&quot;../windowclient&quot;&gt;&lt;code&gt;WindowClient&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../windowclient&quot;&gt; &lt;code&gt;WindowClient&lt;/code&gt; 에&lt;/a&gt; 대한 참조로 해결 되는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2825cf0e69ad5ea178e9aaa2759ffd79783b4dad" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves with an array of the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; names inside the &lt;a href=&quot;../cachestorage&quot;&gt;&lt;code&gt;CacheStorage&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;../cachestorage&quot;&gt; &lt;code&gt;CacheStorage&lt;/code&gt; &lt;/a&gt; 객체 내부의 &lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;Cache&lt;/code&gt; &lt;/a&gt; 이름 배열로 해결 되는 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="34928c61486c15d543e014284ae2a5080cecba1b" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;MessageEventSource&lt;/code&gt; (which can be a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowProxy&quot;&gt;&lt;code&gt;WindowProxy&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../serviceworker&quot;&gt;&lt;code&gt;ServiceWorker&lt;/code&gt;&lt;/a&gt; object) representing the message emitter.</source>
          <target state="translated">&lt;code&gt;MessageEventSource&lt;/code&gt; (a 될 수 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowProxy&quot;&gt; &lt;code&gt;WindowProxy&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../messageport&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../serviceworker&quot;&gt; &lt;code&gt;ServiceWorker&lt;/code&gt; 의&lt;/a&gt; 메시지 터를 나타내는 오브젝트).</target>
        </trans-unit>
        <trans-unit id="86ebcd98b3ba51b776b287ab73e385755284d48c" translate="yes" xml:space="preserve">
          <source>a negative number</source>
          <target state="translated">음수</target>
        </trans-unit>
        <trans-unit id="c37f5d4c24ebe19faceff2fa752f48ced17e4bc7" translate="yes" xml:space="preserve">
          <source>a number</source>
          <target state="translated">숫자</target>
        </trans-unit>
        <trans-unit id="75e36bb9195e419f37609272a26c4e98941ff732" translate="yes" xml:space="preserve">
          <source>a prefix &lt;code&gt;&quot;data-&quot;&lt;/code&gt; is added;</source>
          <target state="translated">접두사 &lt;code&gt;&quot;data-&quot;&lt;/code&gt; 가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="645d64d5932c9c8857626b5399835e1311631b78" translate="yes" xml:space="preserve">
          <source>a prefix &lt;code&gt;data-&lt;/code&gt; is added;</source>
          <target state="translated">접두사 &lt;code&gt;data-&lt;/code&gt; 가 추가된다;</target>
        </trans-unit>
        <trans-unit id="66f76d333064700ae9eacf0b67b6d575ce88c90a" translate="yes" xml:space="preserve">
          <source>a record that doesn't exist in the database</source>
          <target state="translated">데이터베이스에 존재하지 않는 레코드</target>
        </trans-unit>
        <trans-unit id="40a522f9f12fcbc2f3ff3b802f7db4c29b4713c1" translate="yes" xml:space="preserve">
          <source>a record that has an undefined value</source>
          <target state="translated">정의되지 않은 값을 가진 레코드</target>
        </trans-unit>
        <trans-unit id="e068bff98fa3f77a8cc6eeedb532854435c62093" translate="yes" xml:space="preserve">
          <source>a time value</source>
          <target state="translated">시간 가치</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
