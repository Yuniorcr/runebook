<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cmake">
    <body>
      <group id="cmake">
        <trans-unit id="e3d7d2d76574037a34e6a4ec72e8fbe060b16051" translate="yes" xml:space="preserve">
          <source>Maximum time allowed for file download operations.</source>
          <target state="translated">파일 다운로드 작업에 허용되는 최대 시간입니다.</target>
        </trans-unit>
        <trans-unit id="2e4f7c0b52aebcd5ff58a7c64599074ff687b91e" translate="yes" xml:space="preserve">
          <source>Mercurial branch name, tag or commit id.</source>
          <target state="translated">Mercurial 지점 이름, 태그 또는 커밋 ID</target>
        </trans-unit>
        <trans-unit id="54b84fa396a4a13fc34a6821a36ddc302574ac1b" translate="yes" xml:space="preserve">
          <source>Message-Digest Algorithm 5, RFC 1321.</source>
          <target state="translated">메시지 요약 알고리즘 5, RFC 1321.</target>
        </trans-unit>
        <trans-unit id="d2af5c4900d20d41a540ea0db7807d5590d7a1fd" translate="yes" xml:space="preserve">
          <source>Messages of type &amp;ldquo;progress&amp;rdquo; will be followed by more &amp;ldquo;progress&amp;rdquo; messages or with a message of type &amp;ldquo;reply&amp;rdquo; or &amp;ldquo;error&amp;rdquo; that complete the request.</source>
          <target state="translated">&quot;progress&quot;유형의 메시지 다음에는 더 많은 &quot;progress&quot;메시지가 표시되거나 요청을 완료하는 &quot;reply&quot;또는 &quot;error&quot;유형의 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="116e45a50b0928df8ecf336b155f0dada276d8a0" translate="yes" xml:space="preserve">
          <source>Messages sent to and from the process are wrapped in magic strings:</source>
          <target state="translated">프로세스와주고받는 메시지는 다음과 같은 마법 문자열로 싸여 있습니다.</target>
        </trans-unit>
        <trans-unit id="67482705b28fed8b03b5babf0c412680b5694b2a" translate="yes" xml:space="preserve">
          <source>Middle of a module symbol with an underscore that appears between the name of the module and the name of the symbol.</source>
          <target state="translated">모듈 이름과 기호 이름 사이에 밑줄이있는 모듈 기호의 중간입니다.</target>
        </trans-unit>
        <trans-unit id="8952fdd54c073767d997f72ff6a3fecda5342602" translate="yes" xml:space="preserve">
          <source>Middle of a module symbol without an underscore that appears between the name of the module and the name of the symbol.</source>
          <target state="translated">밑줄없이 모듈 이름 중간에 모듈 이름과 기호 이름 사이에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="0ba6dc4c3ea9cf83da3f3eb9a5acb62b323ccd80" translate="yes" xml:space="preserve">
          <source>MinGW Makefiles</source>
          <target state="translated">MinGW 메이크 파일</target>
        </trans-unit>
        <trans-unit id="fbc37860f091a8ef2162de0a10dea7b6ecaa0ce2" translate="yes" xml:space="preserve">
          <source>Minimal C++ without STL</source>
          <target state="translated">STL이없는 최소 C ++</target>
        </trans-unit>
        <trans-unit id="9746ddc90a14ff2c250090da85600aaa32726998" translate="yes" xml:space="preserve">
          <source>Minimal version of MPI detected among the requested languages, or all enabled languages if no components were specified.</source>
          <target state="translated">요청 된 언어 또는 구성 요소가 지정되지 않은 경우 사용 가능한 모든 언어 중에서 최소 MPI 버전이 감지되었습니다.</target>
        </trans-unit>
        <trans-unit id="4fa50fe572c9cd4b24e17bc0dc3c01f1c659958c" translate="yes" xml:space="preserve">
          <source>Minimal version of the OpenMP standard detected among the requested languages, or all enabled languages if no components were specified.</source>
          <target state="translated">요청 된 언어 또는 구성 요소가 지정되지 않은 경우 사용 가능한 모든 언어 중에서 최소 버전의 OpenMP 표준이 감지되었습니다.</target>
        </trans-unit>
        <trans-unit id="2d4a9ba951614144ea91ed45a638637f7f9f3ba3" translate="yes" xml:space="preserve">
          <source>Minor version if provided, else 0</source>
          <target state="translated">제공되는 경우 부 버전, 그렇지 않은 경우 0</target>
        </trans-unit>
        <trans-unit id="d5092ceabc1f61e2121d2dc65ec7f9011286ccf3" translate="yes" xml:space="preserve">
          <source>Minor version if requested, else 0</source>
          <target state="translated">요청이있는 경우 부 버전, 그렇지 않으면 0</target>
        </trans-unit>
        <trans-unit id="bf0fac20c3a131e7fb3cccb2d92507607a4512bb" translate="yes" xml:space="preserve">
          <source>Minor version of CMake used to create the &lt;code&gt;CMakeCache.txt&lt;/code&gt; file</source>
          <target state="translated">&lt;code&gt;CMakeCache.txt&lt;/code&gt; 를 만드는 데 사용되는 CMake의 부 버전 파일</target>
        </trans-unit>
        <trans-unit id="143fd3e90e8e61474b529114fca6298a3dd1f000" translate="yes" xml:space="preserve">
          <source>Minor version of MPI implemented for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; by the MPI distribution.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 에 대해 구현 된 부 버전의 MPIMPI 배포에 의해 에</target>
        </trans-unit>
        <trans-unit id="9f84ca60708628d00b397e268d273ffcf9c595af" translate="yes" xml:space="preserve">
          <source>Minor version of OpenACC implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 에 의해 구현 된 부 버전의 OpenACC 컴파일러로 .</target>
        </trans-unit>
        <trans-unit id="20f494e5fe42ab2172bddc8d3b7bb691325ee7d0" translate="yes" xml:space="preserve">
          <source>Minor version of OpenMP implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 에 의해 구현 된 부 버전의 OpenMP 컴파일러에 .</target>
        </trans-unit>
        <trans-unit id="e3ea079ded57effba0d3c11311c33855f14ee35e" translate="yes" xml:space="preserve">
          <source>Modification</source>
          <target state="translated">Modification</target>
        </trans-unit>
        <trans-unit id="3551c3f58a53b291d43c9dc67506c0e874144a41" translate="yes" xml:space="preserve">
          <source>Modified by Eric Wing. Added code to assist with automated building by using environmental variables and providing a more controlled/consistent search behavior. Added new modifications to recognize OS X frameworks and additional Unix paths (FreeBSD, etc). Also corrected the header search path to follow &amp;ldquo;proper&amp;rdquo; SDL guidelines. Added a search for SDLmain which is needed by some platforms. Added a search for threads which is needed by some platforms. Added needed compile switches for MinGW.</source>
          <target state="translated">Eric Wing에 의해 수정되었습니다. 환경 변수를 사용하고보다 통제 된 / 일관된 검색 동작을 제공하여 자동화 된 건물을 지원하는 코드를 추가했습니다. OS X 프레임 워크 및 추가 Unix 경로 (FreeBSD 등)를 인식하도록 새로운 수정 사항이 추가되었습니다. 또한 &quot;적절한&quot;SDL 지침을 따르도록 헤더 검색 경로를 수정했습니다. 일부 플랫폼에 필요한 SDLmain에 대한 검색을 추가했습니다. 일부 플랫폼에 필요한 스레드 검색이 추가되었습니다. MinGW에 필요한 컴파일 스위치가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="3a7ea294bf33134dce4b142b8b7182de29b978b2" translate="yes" xml:space="preserve">
          <source>Modifiers</source>
          <target state="translated">Modifiers</target>
        </trans-unit>
        <trans-unit id="6395f8327bd07812babbe38b248c6564d3e3499a" translate="yes" xml:space="preserve">
          <source>Module Functions</source>
          <target state="translated">모듈 기능</target>
        </trans-unit>
        <trans-unit id="54e6527deb2bd649c3ec22314d056950dce8d9cf" translate="yes" xml:space="preserve">
          <source>Module Input Variables</source>
          <target state="translated">모듈 입력 변수</target>
        </trans-unit>
        <trans-unit id="be778ece53ab9c5d58fb887a3aea4ee7cb771a1b" translate="yes" xml:space="preserve">
          <source>Module Variables</source>
          <target state="translated">모듈 변수</target>
        </trans-unit>
        <trans-unit id="175c3d1fd40f923ef77c51b3b206e93bdfc956b2" translate="yes" xml:space="preserve">
          <source>Module libraries are always treated as &lt;code&gt;LIBRARY&lt;/code&gt; targets. For non- DLL platforms shared libraries are treated as &lt;code&gt;LIBRARY&lt;/code&gt; targets, except those marked with the &lt;code&gt;FRAMEWORK&lt;/code&gt; property on macOS (see &lt;code&gt;FRAMEWORK&lt;/code&gt; below.)</source>
          <target state="translated">모듈 라이브러리는 항상 &lt;code&gt;LIBRARY&lt;/code&gt; 대상으로 취급됩니다 . DLL이 아닌 플랫폼의 경우 공유 라이브러리는 macOS 에서 &lt;code&gt;FRAMEWORK&lt;/code&gt; 속성으로 표시된 것을 제외하고 &lt;code&gt;LIBRARY&lt;/code&gt; 대상 으로 처리됩니다 ( &lt;code&gt;FRAMEWORK&lt;/code&gt; 참조). 참조).</target>
        </trans-unit>
        <trans-unit id="0dee0ed9fd1608e7da81212bcc36e039af3ecfb4" translate="yes" xml:space="preserve">
          <source>Module subroutines and functions (declared by &amp;ldquo;MODULE PROCEDURE&amp;rdquo;).</source>
          <target state="translated">모듈 서브 루틴 및 기능 ( &quot;MODULE PROCEDURE&quot;로 선언).</target>
        </trans-unit>
        <trans-unit id="345abb2baa2a3598524715630c0aa2faa475c821" translate="yes" xml:space="preserve">
          <source>Module symbols with &amp;lsquo;_&amp;rsquo; : &lt;code&gt;use mymod; call my_sub()&lt;/code&gt;</source>
          <target state="translated">'_'가있는 모듈 기호 : &lt;code&gt;use mymod; call my_sub()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a9444175947c2d7375cf8e34d01af38fd34a1ebd" translate="yes" xml:space="preserve">
          <source>Module symbols without &amp;lsquo;_&amp;rsquo;: &lt;code&gt;use mymod; call mysub()&lt;/code&gt;</source>
          <target state="translated">'_'없는 모듈 기호 : &lt;code&gt;use mymod; call mysub()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="706faf589f1108794b95be44a75cf38502fe50e8" translate="yes" xml:space="preserve">
          <source>Module to checkout from the CVS repository.</source>
          <target state="translated">CVS 저장소에서 체크 아웃하기위한 모듈.</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="4503dcd560f2c67c0c0274d5d0b24b8879cc1a38" translate="yes" xml:space="preserve">
          <source>Modules &lt;a href=&quot;../module/findpython3#module:FindPython3&quot; id=&quot;index-0-module:FindPython3&quot;&gt;&lt;code&gt;FindPython3&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../module/findpython2#module:FindPython2&quot; id=&quot;index-0-module:FindPython2&quot;&gt;&lt;code&gt;FindPython2&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../module/findpython#module:FindPython&quot; id=&quot;index-0-module:FindPython&quot;&gt;&lt;code&gt;FindPython&lt;/code&gt;&lt;/a&gt; use &lt;code&gt;LOCATION&lt;/code&gt; for lookup strategy.</source>
          <target state="translated">모듈 &lt;a href=&quot;../module/findpython3#module:FindPython3&quot; id=&quot;index-0-module:FindPython3&quot;&gt; &lt;code&gt;FindPython3&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../module/findpython2#module:FindPython2&quot; id=&quot;index-0-module:FindPython2&quot;&gt; &lt;code&gt;FindPython2&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../module/findpython#module:FindPython&quot; id=&quot;index-0-module:FindPython&quot;&gt; &lt;code&gt;FindPython&lt;/code&gt; &lt;/a&gt; 은 검색 전략에 &lt;code&gt;LOCATION&lt;/code&gt; 을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="11ea7602152c2c4a2016681871b5333091744962" translate="yes" xml:space="preserve">
          <source>More characters are allowed to be escaped in variable names. Previously, only &lt;code&gt;()#&quot; \@^&lt;/code&gt; were valid characters to escape. Now any non-alphanumeric, non-semicolon, non-NUL character may be escaped following the &lt;code&gt;escape_identity&lt;/code&gt; production in the &lt;a href=&quot;../manual/cmake-language.7#escape-sequences&quot;&gt;Escape Sequences&lt;/a&gt; section of the &lt;a href=&quot;../manual/cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-1-manual:cmake-language(7)&quot;&gt;&lt;code&gt;cmake-language(7)&lt;/code&gt;&lt;/a&gt; manual.</source>
          <target state="translated">변수 이름에서 더 많은 문자를 이스케이프 할 수 있습니다. 이전에는 &lt;code&gt;()#&quot; \@^&lt;/code&gt; 만 이스케이프 할 수있는 유효한 문자였습니다. 이제 &lt;a href=&quot;../manual/cmake-language.7#manual:cmake-language(7)&quot; id=&quot;index-1-manual:cmake-language(7)&quot;&gt; &lt;code&gt;cmake-language(7)&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;../manual/cmake-language.7#escape-sequences&quot;&gt;이스케이프 시퀀스&lt;/a&gt; 섹션 에서 &lt;code&gt;escape_identity&lt;/code&gt; 생성에 따라 영숫자가 아닌 비 세미콜론이 아닌 NUL 문자는 이스케이프 처리 될 수 있습니다. 설명서.</target>
        </trans-unit>
        <trans-unit id="ae537d52d67b6612d1874c1551afaea2f86545b2" translate="yes" xml:space="preserve">
          <source>More details can be found in the documentation of the respective functions.</source>
          <target state="translated">자세한 내용은 해당 기능의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="57988802eb61551fb04e01d74993707e8606fa78" translate="yes" xml:space="preserve">
          <source>Most Fortran compilers write &lt;code&gt;.mod&lt;/code&gt; files out by default. For others, this stores the flag needed to enable module output.</source>
          <target state="translated">대부분의 포트란 컴파일러 는 기본적으로 &lt;code&gt;.mod&lt;/code&gt; 파일을 작성 합니다. 다른 경우에는 모듈 출력을 활성화하는 데 필요한 플래그가 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="b8544de8e7d81f990d80490b01d4c8745be0d9f4" translate="yes" xml:space="preserve">
          <source>Most Fortran compilers write &lt;code&gt;.mod&lt;/code&gt; files to the current working directory. For those that do not, this is set to &lt;code&gt;.&lt;/code&gt; and used when the &lt;a href=&quot;../prop_tgt/fortran_module_directory#prop_tgt:Fortran_MODULE_DIRECTORY&quot; id=&quot;index-0-prop_tgt:Fortran_MODULE_DIRECTORY&quot;&gt;&lt;code&gt;Fortran_MODULE_DIRECTORY&lt;/code&gt;&lt;/a&gt; target property is not set.</source>
          <target state="translated">대부분의 포트란 컴파일러는 &lt;code&gt;.mod&lt;/code&gt; 파일을 현재 작업 디렉토리에 씁니다 . 그렇지 않은 경우에는로 설정됩니다 &lt;code&gt;.&lt;/code&gt; &lt;a href=&quot;../prop_tgt/fortran_module_directory#prop_tgt:Fortran_MODULE_DIRECTORY&quot; id=&quot;index-0-prop_tgt:Fortran_MODULE_DIRECTORY&quot;&gt; &lt;code&gt;Fortran_MODULE_DIRECTORY&lt;/code&gt; &lt;/a&gt; 대상 속성이 설정되지 않은 경우에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7abcb41e0064e2fad134aef1289b0c9b6d500b82" translate="yes" xml:space="preserve">
          <source>Most of the cache variables should be hidden in the &lt;code&gt;ccmake&lt;/code&gt; interface unless the user explicitly asks to edit them.</source>
          <target state="translated">사용자가 명시 적으로 편집하도록 요청하지 않는 한 대부분의 캐시 변수는 &lt;code&gt;ccmake&lt;/code&gt; 인터페이스 에서 숨겨져 야 합니다.</target>
        </trans-unit>
        <trans-unit id="8c5af964cfcd3172bb05e5667cf43baa5f019d36" translate="yes" xml:space="preserve">
          <source>Most of the time, the default directory layout is sufficient. It is largely an implementation detail that the main project usually doesn&amp;rsquo;t need to change. In some circumstances, however, control over the directory layout can be useful or necessary. The directory options are potentially more useful from the point of view that the main build can use the &lt;a href=&quot;#command:externalproject_get_property&quot; id=&quot;index-0-command:externalproject_get_property&quot;&gt;&lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt;&lt;/a&gt; command to retrieve their values, thereby allowing the main project to refer to build artifacts of the external project.</source>
          <target state="translated">대부분의 경우 기본 디렉토리 레이아웃으로 충분합니다. 주로 주요 프로젝트가 변경 될 필요가 없다는 것은 구현 세부 사항입니다. 그러나 어떤 경우에는 디렉토리 레이아웃을 제어하는 ​​것이 유용하거나 필요할 수 있습니다. 디렉토리 옵션은 기본 빌드가 &lt;a href=&quot;#command:externalproject_get_property&quot; id=&quot;index-0-command:externalproject_get_property&quot;&gt; &lt;code&gt;ExternalProject_Get_Property()&lt;/code&gt; &lt;/a&gt; 사용할 수 있다는 관점에서 더 유용 할 수 있습니다. 명령을 해당 값을 검색하여 기본 프로젝트가 외부 프로젝트의 빌드 아티팩트를 참조 .</target>
        </trans-unit>
        <trans-unit id="ab7b3413230c1dc3a34f9f01ee7733f3ca0382b5" translate="yes" xml:space="preserve">
          <source>Most options are the same as those for the &lt;a href=&quot;ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">대부분의 옵션은 &lt;a href=&quot;ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt; &lt;code&gt;ctest_test()&lt;/code&gt; &lt;/a&gt; 명령 의 옵션과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="27874c90fe9d891cd2ab966b3ca8ecab8fb8b7c6" translate="yes" xml:space="preserve">
          <source>Move a file or directory within a filesystem from &lt;code&gt;&amp;lt;oldname&amp;gt;&lt;/code&gt; to &lt;code&gt;&amp;lt;newname&amp;gt;&lt;/code&gt;, replacing the destination atomically.</source>
          <target state="translated">파일 시스템 내에서 파일 또는 디렉토리를 &lt;code&gt;&amp;lt;oldname&amp;gt;&lt;/code&gt; 에서 &lt;code&gt;&amp;lt;newname&amp;gt;&lt;/code&gt; 으로 이동 으로 이동하여 대상을 원자 적으로 대체하십시오.</target>
        </trans-unit>
        <trans-unit id="8aea8fd9e49bfb648a1e7049459a7171531a81e8" translate="yes" xml:space="preserve">
          <source>Multiple content links of the same name with different hash algorithms are supported (e.g. &lt;code&gt;img.png.sha256&lt;/code&gt; and &lt;code&gt;img.png.sha1&lt;/code&gt;) so long as they all correspond to the same real file. This allows objects to be fetched from sources indexed by different hash algorithms.</source>
          <target state="translated">해시 알고리즘이 다른 동일한 이름의 여러 콘텐츠 링크가 지원됩니다 (예 : &lt;code&gt;img.png.sha256&lt;/code&gt; 및 &lt;code&gt;img.png.sha1&lt;/code&gt; )는 모두 동일한 실제 파일에 해당하는 한 지원됩니다. 이를 통해 서로 다른 해시 알고리즘으로 색인이 생성 된 소스에서 객체를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="720d2f3d2ed41c55bf66cfeaf092ec31b2977526" translate="yes" xml:space="preserve">
          <source>Multiple options are allowed.</source>
          <target state="translated">여러 옵션이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="3feda0153eee1380b496298450dc5a74324eb8c1" translate="yes" xml:space="preserve">
          <source>NA</source>
          <target state="translated">NA</target>
        </trans-unit>
        <trans-unit id="d156608bcd55b8352c33b3f46590d9f6a4e6ddd9" translate="yes" xml:space="preserve">
          <source>NA &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;: Means that no System or Local DCMTK is available</source>
          <target state="translated">NA &amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip;&amp;hellip; : 시스템 또는 로컬 DCMTK를 사용할 수 없음을 의미</target>
        </trans-unit>
        <trans-unit id="a9d371451b6909ac85117130b9153a96499a362c" translate="yes" xml:space="preserve">
          <source>NAME</source>
          <target state="translated">NAME</target>
        </trans-unit>
        <trans-unit id="e75dedcc315971ca035b9f33d5ff4a268f0acad9" translate="yes" xml:space="preserve">
          <source>NAS</source>
          <target state="translated">NAS</target>
        </trans-unit>
        <trans-unit id="940f3337540f9e486b0499494968e017fa326221" translate="yes" xml:space="preserve">
          <source>NDK</source>
          <target state="translated">NDK</target>
        </trans-unit>
        <trans-unit id="66e14c9725fbe173cbd030d10de9d42e32b56eeb" translate="yes" xml:space="preserve">
          <source>NMake Makefiles</source>
          <target state="translated">NMake Makefiles</target>
        </trans-unit>
        <trans-unit id="bffb5aa6b2fef07f84591173794ea0d50f268585" translate="yes" xml:space="preserve">
          <source>NMake Makefiles JOM</source>
          <target state="translated">NMake Makefiles JOM</target>
        </trans-unit>
        <trans-unit id="a0509b7780628bd9d9abc7eb8a2163477341053a" translate="yes" xml:space="preserve">
          <source>NO</source>
          <target state="translated">NO</target>
        </trans-unit>
        <trans-unit id="356de56e8b201a3656acb6919561b09abc5b59d9" translate="yes" xml:space="preserve">
          <source>NOTE 1: &lt;a href=&quot;file#command:file&quot; id=&quot;index-1-command:file&quot;&gt;&lt;code&gt;file(WRITE)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;file#command:file&quot; id=&quot;index-2-command:file&quot;&gt;&lt;code&gt;file(APPEND)&lt;/code&gt;&lt;/a&gt; do exactly the same as this one but add some more functionality.</source>
          <target state="translated">참고 1 : &lt;a href=&quot;file#command:file&quot; id=&quot;index-1-command:file&quot;&gt; &lt;code&gt;file(WRITE)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;file#command:file&quot; id=&quot;index-2-command:file&quot;&gt; &lt;code&gt;file(APPEND)&lt;/code&gt; &lt;/a&gt; 은 이것과 정확히 동일하지만 더 많은 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="8cdccfd9d5ece25c04c8827d759f75e2059e770c" translate="yes" xml:space="preserve">
          <source>NOTE 2: When using &lt;code&gt;write_file&lt;/code&gt; the produced file cannot be used as an input to CMake (CONFIGURE_FILE, source file &amp;hellip;) because it will lead to an infinite loop. Use &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; if you want to generate input files to CMake.</source>
          <target state="translated">참고 2 : &lt;code&gt;write_file&lt;/code&gt; 을 사용할 때 생성 된 파일은 무한 루프로 이어 지므로 CMake (CONFIGURE_FILE, 소스 파일&amp;hellip;)에 대한 입력으로 사용할 수 없습니다. CMake에 입력 파일을 생성 하려면 &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt; &lt;code&gt;configure_file()&lt;/code&gt; &lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="63e59a6ae6276f19e05e341a6c54f7649b4c1d24" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;${Java_VERSION}&lt;/code&gt; and &lt;code&gt;${Java_VERSION_STRING}&lt;/code&gt; are not guaranteed to be identical. For example some java version may return: &lt;code&gt;Java_VERSION_STRING = 1.8.0_17&lt;/code&gt; and &lt;code&gt;Java_VERSION = 1.8.0.17&lt;/code&gt;</source>
          <target state="translated">참고 : &lt;code&gt;${Java_VERSION}&lt;/code&gt; 과 &lt;code&gt;${Java_VERSION_STRING}&lt;/code&gt; 은 (는) 동일하지 않을 수 있습니다. 예를 들어 일부 Java 버전은 &lt;code&gt;Java_VERSION_STRING = 1.8.0_17&lt;/code&gt; 및 &lt;code&gt;Java_VERSION = 1.8.0.17&lt;/code&gt; 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0670808df734c6f1bd325aa81aa0dfe9fc8d47b" translate="yes" xml:space="preserve">
          <source>NOTE: A git version of 1.6.5 or later is required if this download method is used.</source>
          <target state="translated">참고 :이 다운로드 방법을 사용하려면 git 버전 1.6.5 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="6a1de7761fc041b53a5842b0e9689ff963c830e2" translate="yes" xml:space="preserve">
          <source>NOTE: If you intend to use version checking, CMake 2.6.2 or later is</source>
          <target state="translated">참고 : 버전 확인을 사용하려는 경우 CMake 2.6.2 이상은</target>
        </trans-unit>
        <trans-unit id="2308285530c387e46519d4e80330c76c70a2de42" translate="yes" xml:space="preserve">
          <source>NOTE: It is highly recommended that you use the new FindOpenSceneGraph.cmake introduced in CMake 2.6.3 and not use this Find module directly.</source>
          <target state="translated">참고 : CMake 2.6.3에 도입 된 새로운 FindOpenSceneGraph.cmake를 사용하고이 찾기 모듈을 직접 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="1ac07f107d1433f76094bc641b65f53758d8514e" translate="yes" xml:space="preserve">
          <source>NOTE: To use this module effectively you must either require &lt;code&gt;CMake &amp;gt;=
2.6.3&lt;/code&gt; with &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION 2.6.3)&lt;/code&gt;&lt;/a&gt; or download and place &lt;a href=&quot;findopenthreads#module:FindOpenThreads&quot; id=&quot;index-1-module:FindOpenThreads&quot;&gt;&lt;code&gt;FindOpenThreads&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-0-module:Findosg&quot;&gt;&lt;code&gt;Findosg&lt;/code&gt;&lt;/a&gt; functions, &lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-1-module:Findosg&quot;&gt;&lt;code&gt;Findosg&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;Find&amp;lt;etc&amp;gt;.cmake&lt;/code&gt; files into your &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt;&lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참고 :이 모듈을 효과적으로 사용하려면 &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required(VERSION 2.6.3)&lt;/code&gt; &lt;/a&gt; 와 함께 &lt;code&gt;CMake &amp;gt;= 2.6.3&lt;/code&gt; 이 필요 하거나 &lt;a href=&quot;findopenthreads#module:FindOpenThreads&quot; id=&quot;index-1-module:FindOpenThreads&quot;&gt; &lt;code&gt;FindOpenThreads&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-0-module:Findosg&quot;&gt; &lt;code&gt;Findosg&lt;/code&gt; &lt;/a&gt; 함수, &lt;a href=&quot;findosg#module:Findosg&quot; id=&quot;index-1-module:Findosg&quot;&gt; &lt;code&gt;Findosg&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;Find&amp;lt;etc&amp;gt;.cmake&lt;/code&gt; 파일을 CMAKE_MODULE_PATH에 다운로드하여 배치 해야 &lt;a href=&quot;../variable/cmake_module_path#variable:CMAKE_MODULE_PATH&quot; id=&quot;index-0-variable:CMAKE_MODULE_PATH&quot;&gt; &lt;code&gt;CMAKE_MODULE_PATH&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6901d07c945d6bd8bceb4f94e63987efeaa4c804" translate="yes" xml:space="preserve">
          <source>NOTES wxWidgets 2.6.x is supported for monolithic builds e.g. compiled in wx/build/msw dir as:</source>
          <target state="translated">참고 사항 wxWidgets 2.6.x는 다음과 같이 단일 빌드에 지원됩니다 (예 : wx / build / msw dir에 컴파일 됨).</target>
        </trans-unit>
        <trans-unit id="22eaa553f817c41824014d7412dd87fa514b2f7f" translate="yes" xml:space="preserve">
          <source>NO_SONAME</source>
          <target state="translated">NO_SONAME</target>
        </trans-unit>
        <trans-unit id="8102d33a6f88e8e41850527f1d4be0ab2bf4d596" translate="yes" xml:space="preserve">
          <source>NO_SYSTEM_FROM_IMPORTED</source>
          <target state="translated">NO_SYSTEM_FROM_IMPORTED</target>
        </trans-unit>
        <trans-unit id="d305d3f7a6cee55b97b42f595107d702f99ddd1a" translate="yes" xml:space="preserve">
          <source>NVIDIA CUDA Toolkit version whose Visual Studio toolset to use.</source>
          <target state="translated">Visual Studio 툴셋을 사용할 NVIDIA CUDA 툴킷 버전.</target>
        </trans-unit>
        <trans-unit id="553f1f34c87346d39022e7fc991188f09e1bb299" translate="yes" xml:space="preserve">
          <source>Name of &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;*_autogen&lt;/code&gt; targets that are added automatically by CMake for targets for which &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; is enabled.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 가 사용 가능한 대상에 대해 CMake에 의해 자동으로 추가되는 &lt;code&gt;*_autogen&lt;/code&gt; 대상에 대한 &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; 의&lt;/a&gt; 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="2a6ca01c8cb211e9a2b0f8260bc2252f6f17f7e8" translate="yes" xml:space="preserve">
          <source>Name of FOLDER for targets that are added automatically by CMake.</source>
          <target state="translated">CMake에 의해 자동으로 추가되는 대상의 폴더 이름입니다.</target>
        </trans-unit>
        <trans-unit id="2c34dff4bcf78af82b273aa72d09ad18f3607fab" translate="yes" xml:space="preserve">
          <source>Name of archiving tool for static libraries.</source>
          <target state="translated">정적 라이브러리를위한 보관 도구의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="8fa1c8314c835d228e98189553a36ea97e50b2d7" translate="yes" xml:space="preserve">
          <source>Name of file used to link (.a, .lib, .so).</source>
          <target state="translated">링크하는 데 사용되는 파일 이름 (.a, .lib, .so)</target>
        </trans-unit>
        <trans-unit id="ca381ef31498f7fa8c609a94fe871f71cbb48853" translate="yes" xml:space="preserve">
          <source>Name of file with soname (.so.3).</source>
          <target state="translated">soname (.so.3)을 가진 파일 이름</target>
        </trans-unit>
        <trans-unit id="0c2dc622095d2959bab7436b01d1bb0834ba1e73" translate="yes" xml:space="preserve">
          <source>Name of library containing &lt;code&gt;dlopen&lt;/code&gt; and &lt;code&gt;dlclose&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dlopen&lt;/code&gt; 및 &lt;code&gt;dlclose&lt;/code&gt; 를 포함하는 라이브러리의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="436be8e88cfed1e1483b542ce5c3f18dcaebc0be" translate="yes" xml:space="preserve">
          <source>Name of main file (.exe, .so.1.2, .a).</source>
          <target state="translated">기본 파일 이름 (.exe, .so.1.2, .a)</target>
        </trans-unit>
        <trans-unit id="cfaee1558e2912eb9ee08db68e357a00093f3057" translate="yes" xml:space="preserve">
          <source>Name of randomizing tool for static libraries.</source>
          <target state="translated">정적 라이브러리 용 무작위 화 도구의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="e9184b9021d32addcdca39a5573e7eb139ec7240" translate="yes" xml:space="preserve">
          <source>Name of target aliased by this target.</source>
          <target state="translated">이 대상이 별명을 지정한 대상의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c642788c7b0e6f004f10e2695693fc3c80d37d95" translate="yes" xml:space="preserve">
          <source>Name of the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; generated files.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 생성 파일에 대한 &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt; 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="5ff73a9a79b9bf16b59eb540fe1823ba7bef3e2c" translate="yes" xml:space="preserve">
          <source>Name of the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; generated files.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 생성 파일에 대한 &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt; 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="7d28528c0dbeec45a5115d53d9426fd180839b80" translate="yes" xml:space="preserve">
          <source>Name of the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; for &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; generated files.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt; &lt;code&gt;AUTORCC&lt;/code&gt; &lt;/a&gt; 생성 파일에 대한 &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt; 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="0a8b0debdea49cb6391827662915991bf1c64fc6" translate="yes" xml:space="preserve">
          <source>Name of the OS CMake is running on.</source>
          <target state="translated">OS CMake가 실행중인 이름입니다.</target>
        </trans-unit>
        <trans-unit id="1886b6bef9c8c7e25f9d01181832a8f22c9c8fe1" translate="yes" xml:space="preserve">
          <source>Name of the linker generated program database file (.pdb).</source>
          <target state="translated">링커 생성 프로그램 데이터베이스 파일 (.pdb)의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="bc2fc15e9ca64c8c870db215293aaaceace4cc55" translate="yes" xml:space="preserve">
          <source>Name of the project given to the project command.</source>
          <target state="translated">프로젝트 명령에 지정된 프로젝트 이름.</target>
        </trans-unit>
        <trans-unit id="3b9de04514e91474f84cf8749c735059d33d9393" translate="yes" xml:space="preserve">
          <source>Name of the variable in which the list of keys is stored</source>
          <target state="translated">키 목록이 저장된 변수의 이름</target>
        </trans-unit>
        <trans-unit id="41b3db9e7197d3ae80518399e9a5330f528aabf8" translate="yes" xml:space="preserve">
          <source>Name of the variable with the computed &amp;ldquo;base&amp;rdquo; of &lt;code&gt;KEY&lt;/code&gt;.</source>
          <target state="translated">계산 된 &quot;base&quot;가 &lt;code&gt;KEY&lt;/code&gt; 인 변수의 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="36455ca7ed5f12f4faf49095dcba669b16457295" translate="yes" xml:space="preserve">
          <source>Name of the variable with the result value</source>
          <target state="translated">결과 값이있는 변수의 이름</target>
        </trans-unit>
        <trans-unit id="f509c864dab7ca8a7168c27c9b5babaf8c262dd4" translate="yes" xml:space="preserve">
          <source>Native build system toolset specification provided by user.</source>
          <target state="translated">사용자가 제공 한 기본 빌드 시스템 도구 세트 사양.</target>
        </trans-unit>
        <trans-unit id="c687420ff41c09bf7a06c79234b06b37c90bd40e" translate="yes" xml:space="preserve">
          <source>Natural sorting can be employed to return the highest version when multiple versions of the same library are found by &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;. For example suppose that the following libraries have been found:</source>
          <target state="translated">&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 가 동일한 라이브러리의 여러 버전을 찾은 경우 자연 정렬을 사용하여 최고 버전을 반환 할 수 있습니다 . 예를 들어 다음 라이브러리가 발견되었다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="1fef217aa68495981fdc1e5596a5c2b3d0e9de16" translate="yes" xml:space="preserve">
          <source>Never try to find application bundles.</source>
          <target state="translated">응용 프로그램 번들을 찾지 마십시오.</target>
        </trans-unit>
        <trans-unit id="9d6e608e16c89137b5b7dafa58a7d2541849042a" translate="yes" xml:space="preserve">
          <source>Never try to find frameworks.</source>
          <target state="translated">프레임 워크를 찾지 마십시오.</target>
        </trans-unit>
        <trans-unit id="506e4ea1bc2ec2438e22280017e459faca57e8e6" translate="yes" xml:space="preserve">
          <source>Next configuration will install fat 5 architectures iOS library and add the &lt;code&gt;-miphoneos-version-min=9.3&lt;/code&gt;/&lt;code&gt;-mios-simulator-version-min=9.3&lt;/code&gt; flags to the compiler:</source>
          <target state="translated">다음 구성은 fat 5 아키텍처 iOS 라이브러리를 설치하고 &lt;code&gt;-miphoneos-version-min=9.3&lt;/code&gt; / &lt;code&gt;-mios-simulator-version-min=9.3&lt;/code&gt; 플래그를 컴파일러에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="7eb0443b62987568d843eadd92e5fdf618341050" translate="yes" xml:space="preserve">
          <source>Ninja</source>
          <target state="translated">Ninja</target>
        </trans-unit>
        <trans-unit id="5accf33da27571381c51d2a1c8982dc86c68d95b" translate="yes" xml:space="preserve">
          <source>Ninja Generator</source>
          <target state="translated">닌자 생성기</target>
        </trans-unit>
        <trans-unit id="4accf6b5c730c03612c08ed92b56345ae3739cd1" translate="yes" xml:space="preserve">
          <source>Ninja only: List of available pools.</source>
          <target state="translated">닌자 전용 : 사용 가능한 풀 목록.</target>
        </trans-unit>
        <trans-unit id="551054357f2e8728172e8ff9e9cd150b7ddfd3bf" translate="yes" xml:space="preserve">
          <source>Ninja only: Pool used for compiling.</source>
          <target state="translated">닌자 만 : 컴파일에 사용되는 풀.</target>
        </trans-unit>
        <trans-unit id="103413c2e46dc5dac8a6d13dd69b928646f58daf" translate="yes" xml:space="preserve">
          <source>Ninja only: Pool used for linking.</source>
          <target state="translated">닌자 만 : 연결에 사용되는 풀.</target>
        </trans-unit>
        <trans-unit id="07c2b961f0adec689b30ee2d3b8b3a5e614a7c7e" translate="yes" xml:space="preserve">
          <source>Ninja requires custom command byproducts to be explicit.</source>
          <target state="translated">Ninja는 사용자 정의 명령 부산물을 명시 적으로 요구합니다.</target>
        </trans-unit>
        <trans-unit id="4679f16e5ef177fb48f8688cfae396cd5498ebd2" translate="yes" xml:space="preserve">
          <source>No C++ Support</source>
          <target state="translated">C ++ 지원 없음</target>
        </trans-unit>
        <trans-unit id="249510bb1c1ad1354dd3c70d53681a8e446af0ea" translate="yes" xml:space="preserve">
          <source>No check is made for whether content for &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; has already been populated.</source>
          <target state="translated">내용이 있는지 여부를 확인하지 않습니다 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 의 내용 이 이미 채워져 않았습니다.</target>
        </trans-unit>
        <trans-unit id="bffcec9e4220f5c5f0bed45cce4d54907bfe8145" translate="yes" xml:space="preserve">
          <source>No explicit &lt;code&gt;DEPENDS&lt;/code&gt; relationships were needed to make the setup tests run before or the cleanup tests run after the regular tests.</source>
          <target state="translated">명시 적 없음 &lt;code&gt;DEPENDS&lt;/code&gt; 설정 테스트 이전에 정리 테스트를 실행하거나 정기 테스트 후에 정리 테스트를 실행하는 데 DEPENDS 관계가 필요 .</target>
        </trans-unit>
        <trans-unit id="97947fe6c257409cb8c740c3baf25fd1b7ed0a13" translate="yes" xml:space="preserve">
          <source>No global properties record the source or binary directories used for the populated content.</source>
          <target state="translated">채워진 내용에 사용 된 소스 또는 이진 디렉터리를 기록하는 전역 속성은 없습니다.</target>
        </trans-unit>
        <trans-unit id="4d99d2b47a83169367dc1659fa9dc2d5a1b0a30b" translate="yes" xml:space="preserve">
          <source>No global property is set to record that the population has occurred.</source>
          <target state="translated">인구가 발생했음을 기록하도록 설정된 글로벌 자산은 없습니다.</target>
        </trans-unit>
        <trans-unit id="41e4d4b193bcde5c986925a9152d12c280e94dce" translate="yes" xml:space="preserve">
          <source>Non-Makefile generators currently ignore this property.</source>
          <target state="translated">비 Makefile 생성기는 현재이 특성을 무시합니다.</target>
        </trans-unit>
        <trans-unit id="45cf99e5094000ceea4f2bcc621384cfeab8cf11" translate="yes" xml:space="preserve">
          <source>Non-boolean properties may also participate in &amp;ldquo;compatible interface&amp;rdquo; computations. Properties specified in the &lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt;&lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt;&lt;/a&gt; property must be either unspecified or compare to the same string among all transitively specified dependencies. This can be useful to ensure that multiple incompatible versions of a library are not linked together through transitive requirements of a target:</source>
          <target state="translated">부울이 아닌 속성은 &quot;호환 가능한 인터페이스&quot;계산에도 참여할 수 있습니다. &lt;a href=&quot;../prop_tgt/compatible_interface_string#prop_tgt:COMPATIBLE_INTERFACE_STRING&quot; id=&quot;index-0-prop_tgt:COMPATIBLE_INTERFACE_STRING&quot;&gt; &lt;code&gt;COMPATIBLE_INTERFACE_STRING&lt;/code&gt; 에&lt;/a&gt; 지정된 특성 특성은 지정되지 않거나 전 이적으로 지정된 모든 종속 항목에서 동일한 문자열과 비교되어야합니다. 이는 호환되지 않는 여러 버전의 라이브러리가 대상의 전이 요구 사항을 통해 서로 연결되지 않도록하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61031049c8013452e7b3d52c5d5f001fff99de5e" translate="yes" xml:space="preserve">
          <source>Non-static data member initialization, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2756.htm&quot;&gt;N2756&lt;/a&gt;.</source>
          <target state="translated">로 정의 비 정적 데이터 멤버 초기화 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2756.htm&quot;&gt;N2756&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="38cfcb432bb57e2eb26034910d5d7f500f0169e5" translate="yes" xml:space="preserve">
          <source>Normal Libraries</source>
          <target state="translated">일반 라이브러리</target>
        </trans-unit>
        <trans-unit id="6229d1c8b3cf41f8c4fc10b2e875a989abcd254a" translate="yes" xml:space="preserve">
          <source>Normal libraries and executables may link to &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt; to get their objects and usage requirements. Continuing the above example, the code</source>
          <target state="translated">일반 라이브러리 및 실행 파일은 객체 및 사용 요구 사항을 얻기 위해 객체 &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;라이브러리&lt;/a&gt; 에 연결할 수 있습니다 . 위 예제를 계속하면 코드</target>
        </trans-unit>
        <trans-unit id="b2b797dee9ae31a08815efc0fabfa014583e7784" translate="yes" xml:space="preserve">
          <source>Normally CMake requires that all targets built in a project have globally unique logical names (see policy &lt;a href=&quot;../policy/cmp0002#policy:CMP0002&quot; id=&quot;index-0-policy:CMP0002&quot;&gt;&lt;code&gt;CMP0002&lt;/code&gt;&lt;/a&gt;). This is necessary to generate meaningful project file names in &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE generators. It also allows the target names to be referenced unambiguously.</source>
          <target state="translated">일반적으로 CMake는 프로젝트에 빌드 된 모든 대상이 전역 적으로 고유 한 논리적 이름을 갖도록 요구합니다 (정책 &lt;a href=&quot;../policy/cmp0002#policy:CMP0002&quot; id=&quot;index-0-policy:CMP0002&quot;&gt; &lt;code&gt;CMP0002&lt;/code&gt; &lt;/a&gt; 참조 ). 이것은 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; IDE 생성기 에서 의미있는 프로젝트 파일 이름을 생성하는 데 필요합니다 . 또한 대상 이름을 명확하게 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f84663b487b1635a4a345914ad0fa224022aec4e" translate="yes" xml:space="preserve">
          <source>Normally CMake uses the build tree for the &lt;code&gt;RPATH&lt;/code&gt; when building executables etc on systems that use &lt;code&gt;RPATH&lt;/code&gt;. When the software is installed the executables etc are relinked by CMake to have the install &lt;code&gt;RPATH&lt;/code&gt;. If this variable is set to true then the software is always built with the install path for the &lt;code&gt;RPATH&lt;/code&gt; and does not need to be relinked when installed.</source>
          <target state="translated">일반적으로 CMake는의 빌드 트리를 사용 &lt;code&gt;RPATH&lt;/code&gt; 사용하는 시스템에서 실행 파일 등을 만들 때 &lt;code&gt;RPATH&lt;/code&gt; 를 . 소프트웨어가 설치되면 실행 파일 등이 CMake에 의해 다시 연결되어 &lt;code&gt;RPATH&lt;/code&gt; 를 설치 합니다. 이 변수가 true로 설정되면 소프트웨어는 항상 &lt;code&gt;RPATH&lt;/code&gt; 의 설치 경로로 빌드되며 설치 시 다시 링크 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="58f12b4e33c96e29e960f0555c59f783bb5c5b89" translate="yes" xml:space="preserve">
          <source>Normally CMake uses the build tree for the RPATH when building executables etc on systems that use RPATH. When the software is installed the executables etc are relinked by CMake to have the install RPATH. If this variable is set to true then the software is always built with no RPATH.</source>
          <target state="translated">일반적으로 CMake는 RPATH를 사용하는 시스템에서 실행 파일 등을 빌드 할 때 RPATH의 빌드 트리를 사용합니다. 소프트웨어가 설치되면 실행 파일 등이 CMake에 의해 다시 연결되어 RPATH를 설치합니다. 이 변수가 true로 설정되면 소프트웨어는 항상 RPATH없이 빌드됩니다.</target>
        </trans-unit>
        <trans-unit id="03011fecce3136586e8e0cddb707b4fe66605b32" translate="yes" xml:space="preserve">
          <source>Normally CMake uses the build tree for the RPATH when building executables etc on systems that use RPATH. When the software is installed the executables etc are relinked by CMake to have the install RPATH. If this variable is set to true then the software is always installed without RPATH, even if RPATH is enabled when building. This can be useful for example to allow running tests from the build directory with RPATH enabled before the installation step. To omit RPATH in both the build and install steps, use &lt;a href=&quot;cmake_skip_rpath#variable:CMAKE_SKIP_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_RPATH&quot;&gt;&lt;code&gt;CMAKE_SKIP_RPATH&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">일반적으로 CMake는 RPATH를 사용하는 시스템에서 실행 파일 등을 빌드 할 때 RPATH의 빌드 트리를 사용합니다. 소프트웨어가 설치되면 실행 파일 등이 CMake에 의해 다시 연결되어 RPATH를 설치합니다. 이 변수가 true로 설정되면 빌드 할 때 RPATH가 사용 가능하더라도 소프트웨어는 항상 RPATH없이 설치됩니다. 예를 들어 설치 단계 전에 RPATH를 활성화 한 상태에서 빌드 디렉토리에서 테스트를 실행하는 데 유용 할 수 있습니다. 빌드 및 설치 단계 모두에서 RPATH를 생략하려면 &lt;a href=&quot;cmake_skip_rpath#variable:CMAKE_SKIP_RPATH&quot; id=&quot;index-0-variable:CMAKE_SKIP_RPATH&quot;&gt; &lt;code&gt;CMAKE_SKIP_RPATH&lt;/code&gt; 를&lt;/a&gt; 대신 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5e0f271f5c2895e64990a57b2e432c7f28e62b69" translate="yes" xml:space="preserve">
          <source>Normally an executable does not export any symbols because it is the final program. It is possible for an executable to export symbols to be used by loadable modules. When this property is set to true CMake will allow other targets to &amp;ldquo;link&amp;rdquo; to the executable with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt;&lt;/a&gt; command. On all platforms a target-level dependency on the executable is created for targets that link to it. For DLL platforms an import library will be created for the exported symbols and then used for linking. All Windows-based systems including Cygwin are DLL platforms. For non-DLL platforms that require all symbols to be resolved at link time, such as macOS, the module will &amp;ldquo;link&amp;rdquo; to the executable using a flag like &lt;code&gt;-bundle_loader&lt;/code&gt;. For other non-DLL platforms the link rule is simply ignored since the dynamic loader will automatically bind symbols when the module is loaded.</source>
          <target state="translated">일반적으로 실행 파일은 최종 프로그램이므로 심볼을 내 보내지 않습니다. 실행 파일이로드 가능한 모듈에서 사용하기 위해 심볼을 내보낼 수 있습니다. 이 속성이 true로 설정되면 CMake는 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt; &lt;/a&gt; 명령으로 다른 대상이 실행 파일에 &quot;링크&quot;되도록합니다 . 모든 플랫폼에서 실행 파일에 대한 대상 수준의 종속성이 해당 대상에 연결됩니다. DLL 플랫폼의 경우 내 보낸 심볼에 대해 가져 오기 라이브러리가 생성 된 다음 연결에 사용됩니다. Cygwin을 포함한 모든 Windows 기반 시스템은 DLL 플랫폼입니다. macOS와 같이 링크 타임에 모든 심볼을 확인해야하는 비 DLL 플랫폼의 경우 모듈은 다음과 같은 플래그를 사용하여 실행 파일에 &quot;링크&quot;됩니다. &lt;code&gt;-bundle_loader&lt;/code&gt; . DLL이 아닌 다른 플랫폼의 경우, 모듈이로드 될 때 동적 로더가 자동으로 심볼을 바인딩하므로 링크 규칙은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="ddcbc0f4a8ceab9b951e0446687125cd5fa31a88" translate="yes" xml:space="preserve">
          <source>Normally an executable does not export any symbols because it is the final program. It is possible for an executable to export symbols to be used by loadable modules. When this property is set to true CMake will allow other targets to &lt;code&gt;link&lt;/code&gt; to the executable with the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt;&lt;/a&gt; command. On all platforms a target-level dependency on the executable is created for targets that link to it. For DLL platforms an import library will be created for the exported symbols and then used for linking. All Windows-based systems including Cygwin are DLL platforms. For non-DLL platforms that require all symbols to be resolved at link time, such as macOS, the module will &lt;code&gt;link&lt;/code&gt; to the executable using a flag like &lt;code&gt;-bundle_loader&lt;/code&gt;. For other non-DLL platforms the link rule is simply ignored since the dynamic loader will automatically bind symbols when the module is loaded.</source>
          <target state="translated">일반적으로 실행 파일은 최종 프로그램이므로 심볼을 내 보내지 않습니다. 실행 파일이로드 가능한 모듈에서 사용하기 위해 심볼을 내보낼 수 있습니다. 이 특성이 true로 설정되면 CMake는 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;TARGET_LINK_LIBRARIES()&lt;/code&gt; &lt;/a&gt; 명령으로 다른 대상 이 실행 파일 에 &lt;code&gt;link&lt;/code&gt; 될 수 있도록 합니다. 모든 플랫폼에서 실행 파일에 대한 대상 수준의 종속성이 해당 대상에 연결됩니다. DLL 플랫폼의 경우 내 보낸 심볼에 대해 가져 오기 라이브러리가 생성 된 다음 연결에 사용됩니다. Cygwin을 포함한 모든 Windows 기반 시스템은 DLL 플랫폼입니다. macOS와 같이 링크 타임에 모든 기호를 확인해야하는 비 DLL 플랫폼의 경우 모듈은 다음 과 같은 플래그를 사용하여 실행 파일에 &lt;code&gt;link&lt;/code&gt; 됩니다. &lt;code&gt;-bundle_loader&lt;/code&gt; . DLL이 아닌 다른 플랫폼의 경우, 모듈이로드 될 때 동적 로더가 자동으로 심볼을 바인딩하므로 링크 규칙은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="0e0a027e445fe8663e10a601c500a1a4ec5e9a81" translate="yes" xml:space="preserve">
          <source>Normally the build &lt;code&gt;RPATH&lt;/code&gt; of a binary contains absolute paths to the directory of each shared library it links to. The &lt;code&gt;RPATH&lt;/code&gt; entries for directories contained within the build tree can be made relative to enable relocatable builds and to help achieve reproducible builds by omitting the build directory from the build environment.</source>
          <target state="translated">일반적으로 바이너리 의 빌드 &lt;code&gt;RPATH&lt;/code&gt; 에는 링크 된 각 공유 라이브러리의 디렉토리에 대한 절대 경로가 포함됩니다. 빌드 트리 내에 포함 된 디렉토리 의 &lt;code&gt;RPATH&lt;/code&gt; 항목은 재배치 가능한 빌드를 가능하게하고 빌드 환경에서 빌드 디렉토리를 생략하여 재현 가능한 빌드를 달성하는 데 도움이되도록 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="104d068a09d02a98c430a7da93fd342184a64a6e" translate="yes" xml:space="preserve">
          <source>Normally, the function creates a dependency which will cause CMake to be re-run if any of the sources being scanned are changed. This is to ensure that the list of discovered tests is updated. If this behavior is not desired (as may be the case while actually writing the test cases), this option can be used to prevent the dependency from being added.</source>
          <target state="translated">일반적으로이 함수는 종속성을 생성하여 스캔중인 소스가 변경되면 CMake가 다시 실행되게합니다. 검색된 테스트 목록이 업데이트되도록합니다. 이 동작이 바람직하지 않은 경우 (실제로 테스트 케이스를 작성하는 동안과 같이)이 옵션을 사용하여 종속성이 추가되지 않도록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd45e68de040d72f5bc4ac3c7d8eb400604bf1fb" translate="yes" xml:space="preserve">
          <source>Normally, unused and uninitialized variables are searched for only in &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;. This flag tells CMake to warn about other files as well.</source>
          <target state="translated">일반적으로 사용되지 &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; 초기화되지 않은 변수는 CMAKE_SOURCE_DIR 및 &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 에서만 검색됩니다 . 이 플래그는 CMake에게 다른 파일에 대해서도 경고하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="8adf0077403ccbda5153eb0097042b7e03c5f67d" translate="yes" xml:space="preserve">
          <source>Not included &lt;code&gt;moc_&amp;lt;basename&amp;gt;.cpp&lt;/code&gt; files will be generated in custom folders to avoid name collisions and included in a separate &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/mocs_compilation.cpp&lt;/code&gt; file which is compiled into the target.</source>
          <target state="translated">포함되지 &lt;code&gt;moc_&amp;lt;basename&amp;gt;.cpp&lt;/code&gt; 파일을 피하기 이름 충돌에 대한 사용자 지정 폴더에 생성되어 별도에 포함됩니다 &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;/mocs_compilation.cpp&lt;/code&gt; 의 목표로 컴파일 파일입니다.</target>
        </trans-unit>
        <trans-unit id="4a97d3767289c9a5ee3012b740a273cc434550ad" translate="yes" xml:space="preserve">
          <source>Not included moc output files</source>
          <target state="translated">moc 출력 파일은 포함되지 않음</target>
        </trans-unit>
        <trans-unit id="1f08a460d8c734da42ffd7f5cfe94591cc6654b5" translate="yes" xml:space="preserve">
          <source>Not set: no flags are passed to the linker step.</source>
          <target state="translated">설정되지 않음 : 링커 단계에 플래그가 전달되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="1822ac32d88c3d89064dbd816b46f45f929e6e8d" translate="yes" xml:space="preserve">
          <source>Note also that &lt;code&gt;file(GENERATE)&lt;/code&gt; does not create the output file until the generation phase. The output file will not yet have been written when the &lt;code&gt;file(GENERATE)&lt;/code&gt; command returns, it is written only after processing all of a project&amp;rsquo;s &lt;code&gt;CMakeLists.txt&lt;/code&gt; files.</source>
          <target state="translated">또한 &lt;code&gt;file(GENERATE)&lt;/code&gt; 은 생성 단계까지 출력 파일을 작성하지 않습니다. 출력 파일은 &lt;code&gt;file(GENERATE)&lt;/code&gt; 명령이 리턴 될 때 아직 작성되지 않았 으며 프로젝트의 모든 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 을 처리 한 후에 만 ​​작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="71a425529bb06aec901f03c327d14edbfaa8c1aa" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;&amp;lt;C&amp;gt;&lt;/code&gt; is the uppercased name of the component.</source>
          <target state="translated">참고는 &lt;code&gt;&amp;lt;C&amp;gt;&lt;/code&gt; 요소의 대문자로 이름이다.</target>
        </trans-unit>
        <trans-unit id="7746d9032f8b937f7779e6e2fc406fb2c52ad714" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;CMAKE_CFG_INTDIR&lt;/code&gt; is no longer necessary for this purpose but has been left for compatibility with existing projects. Instead &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; recognizes executable target names in its &lt;code&gt;COMMAND&lt;/code&gt; option, so &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/mytool&lt;/code&gt; can be replaced by just &lt;code&gt;mytool&lt;/code&gt;.</source>
          <target state="translated">유의하십시오 &lt;code&gt;CMAKE_CFG_INTDIR&lt;/code&gt; 는 이 목적을 위해 더 이상 필요하지만, 기존 사업과의 호환성을 위해 남아있다. 대신 &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 의에서 실행 목표 이름을 인식 &lt;code&gt;COMMAND&lt;/code&gt; 옵션을, 그래서 &lt;code&gt;${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/mytool&lt;/code&gt; 바로 교체 할 수 있습니다 &lt;code&gt;mytool&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="645dab9a5255614ea7fc6803ec7f9aec3dc2ef22" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; is not set to anything by default when running in script mode, since it&amp;rsquo;s not building anything.</source>
          <target state="translated">참고 &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; 이 는 아무 것도 구축하지 이후, 스크립트 모드에서 실행할 때 기본적으로 아무것도 설정되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c0899894d1fcac71c748c2dc6fd3a62999bc8856" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;CONFIGURATIONS&lt;/code&gt; appears BEFORE &lt;code&gt;RUNTIME DESTINATION&lt;/code&gt;.</source>
          <target state="translated">참고 것을 &lt;code&gt;CONFIGURATIONS&lt;/code&gt; 하기 전에 나타납니다 &lt;code&gt;RUNTIME DESTINATION&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70b9cb5e1012bc0e0de4ff9051bfc59bccbf2ed1" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;tgt&lt;/code&gt; is not added as a dependency of the target this expression is evaluated on.</source>
          <target state="translated">참고 &lt;code&gt;tgt&lt;/code&gt; 이 식에 평가 대상의 의존성으로 추가되지 않는다.</target>
        </trans-unit>
        <trans-unit id="a43722478003908154d67648ee9b9cfef890653e" translate="yes" xml:space="preserve">
          <source>Note that Boost Python components require a Python version suffix (Boost 1.67 and later), e.g. &lt;code&gt;python36&lt;/code&gt; or &lt;code&gt;python27&lt;/code&gt; for the versions built against Python 3.6 and 2.7, respectively. This also applies to additional components using Python including &lt;code&gt;mpi_python&lt;/code&gt; and &lt;code&gt;numpy&lt;/code&gt;. Earlier Boost releases may use distribution-specific suffixes such as &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt; or &lt;code&gt;2.7&lt;/code&gt;. These may also be used as suffixes, but note that they are not portable.</source>
          <target state="translated">Boost Python 구성 요소에는 Python 3.6 및 2.7에 대해 각각 빌드 된 버전의 경우 Python 버전 접미사 (부스트 1.67 이상) (예 : &lt;code&gt;python36&lt;/code&gt; 또는 &lt;code&gt;python27&lt;/code&gt; )가 필요합니다. 이것은 &lt;code&gt;mpi_python&lt;/code&gt; 및 &lt;code&gt;numpy&lt;/code&gt; 를 포함하여 Python을 사용하는 추가 구성 요소에도 적용됩니다 . 이전 Boost 릴리스는 &lt;code&gt;2&lt;/code&gt; , &lt;code&gt;3&lt;/code&gt; 또는 &lt;code&gt;2.7&lt;/code&gt; 과 같은 배포 판별 접미사를 사용할 수 있습니다 . 이것들은 접미사로도 사용될 수 있지만 이식 가능하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="a968b623d10f301b080581b8506f144e329c8a81" translate="yes" xml:space="preserve">
          <source>Note that CMake generates postSolution sections &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; and &lt;code&gt;ExtensibilityAddIns&lt;/code&gt; by default. If you set the corresponding property, it will override the default section. For example, setting &lt;code&gt;VS_GLOBAL_SECTION_POST_ExtensibilityGlobals&lt;/code&gt; will override the default contents of the &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; section, while keeping ExtensibilityAddIns on its default. However, CMake will always add a &lt;code&gt;SolutionGuid&lt;/code&gt; to the &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; section if it is not specified explicitly.</source>
          <target state="translated">CMake는 기본적으로 postSolution 섹션 &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; 및 &lt;code&gt;ExtensibilityAddIns&lt;/code&gt; 를 생성 합니다. 해당 속성을 설정하면 기본 섹션보다 우선합니다. 예를 들어 &lt;code&gt;VS_GLOBAL_SECTION_POST_ExtensibilityGlobals&lt;/code&gt; 를 설정 하면 &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; 기본값으로 유지하면서 ExtensibilityGlobals 섹션 의 기본 내용을 재정의합니다 . 그러나 CMake는 명시 적으로 지정되지 않은 경우 항상 &lt;code&gt;SolutionGuid&lt;/code&gt; 를 &lt;code&gt;ExtensibilityGlobals&lt;/code&gt; 섹션에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="e37008e017e701de1fc44e974b1281394a953ddd" translate="yes" xml:space="preserve">
          <source>Note that a &lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt;&lt;code&gt;macro&lt;/code&gt;&lt;/a&gt;, unlike a &lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function&lt;/code&gt;&lt;/a&gt;, is expanded in place and therefore cannot handle &lt;code&gt;return()&lt;/code&gt;.</source>
          <target state="translated">&amp;bull; 그래도 참고 &lt;a href=&quot;macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt; &lt;code&gt;macro&lt;/code&gt; &lt;/a&gt; 하는 달리 &lt;a href=&quot;function#command:function&quot; id=&quot;index-0-command:function&quot;&gt; &lt;code&gt;function&lt;/code&gt; &lt;/a&gt; , 처리 할 수 있으므로 장소에 확장하고 &lt;code&gt;return()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b7addc7be0fce228bb844409363fbe12c4cc1802" translate="yes" xml:space="preserve">
          <source>Note that any given value is ignored. It&amp;rsquo;s just checked for existence.</source>
          <target state="translated">주어진 값은 무시됩니다. 방금 존재 여부를 확인했습니다.</target>
        </trans-unit>
        <trans-unit id="0224d23b505eb36de0b2809a3302e286acc686fd" translate="yes" xml:space="preserve">
          <source>Note that any source file line not inside &lt;a href=&quot;#command-arguments&quot;&gt;Command Arguments&lt;/a&gt; or a &lt;a href=&quot;#bracket-comment&quot;&gt;Bracket Comment&lt;/a&gt; can end in a &lt;a href=&quot;#line-comment&quot;&gt;Line Comment&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#command-arguments&quot;&gt;Command Arguments&lt;/a&gt; 또는 &lt;a href=&quot;#bracket-comment&quot;&gt;Bracket Comment에&lt;/a&gt; 없는 소스 파일 행 은 &lt;a href=&quot;#line-comment&quot;&gt;Line Comment로&lt;/a&gt; 끝날 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a97fd7ee56fa3971600f1637f6ba1297705e9e7" translate="yes" xml:space="preserve">
          <source>Note that care must be taken when specifying usage requirements for targets which will be exported for installation using the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; command. See &lt;a href=&quot;cmake-packages.7#creating-packages&quot;&gt;Creating Packages&lt;/a&gt; for more.</source>
          <target state="translated">&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 설치를 위해 내보낼 대상의 사용 요구 사항을 지정할 때주의해야합니다 . 자세한 내용은 &lt;a href=&quot;cmake-packages.7#creating-packages&quot;&gt;패키지 만들기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3b8ca471ebeb1ef90783c23534a44e98652fe915" translate="yes" xml:space="preserve">
          <source>Note that device linking is not supported for &lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;Object Libraries&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#object-libraries&quot;&gt;개체 라이브러리에&lt;/a&gt; 대해서는 장치 연결이 지원되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="5ce154023a8115e73637add41fd01034743578ac" translate="yes" xml:space="preserve">
          <source>Note that for each dependee, the set of properties specified in each compatible interface property must not intersect with the set specified in any of the other properties.</source>
          <target state="translated">각 종속 자에 대해 호환 가능한 각 인터페이스 속성에 지정된 속성 집합이 다른 속성에 지정된 집합과 교차해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="32e839d08baf002b2c3043084e689998b1b4dbae" translate="yes" xml:space="preserve">
          <source>Note that for each dependee, the set of properties specified in this property must not intersect with the set specified in any of the other &lt;a href=&quot;../manual/cmake-buildsystem.7#compatible-interface-properties&quot;&gt;Compatible Interface Properties&lt;/a&gt;.</source>
          <target state="translated">각 종속 자에 대해이 특성에 지정된 특성 세트가 다른 &lt;a href=&quot;../manual/cmake-buildsystem.7#compatible-interface-properties&quot;&gt;호환 가능한 인터페이스 특성에&lt;/a&gt; 지정된 세트와 교차해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="40f1804cb6f8a7ce094584d54978c3e47118fa75" translate="yes" xml:space="preserve">
          <source>Note that generator expressions will not be used in OLD handling of policy &lt;a href=&quot;../policy/cmp0003#policy:CMP0003&quot; id=&quot;index-0-policy:CMP0003&quot;&gt;&lt;code&gt;CMP0003&lt;/code&gt;&lt;/a&gt; or policy &lt;a href=&quot;../policy/cmp0004#policy:CMP0004&quot; id=&quot;index-0-policy:CMP0004&quot;&gt;&lt;code&gt;CMP0004&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">정책 &lt;a href=&quot;../policy/cmp0003#policy:CMP0003&quot; id=&quot;index-0-policy:CMP0003&quot;&gt; &lt;code&gt;CMP0003&lt;/code&gt; &lt;/a&gt; 또는 정책 &lt;a href=&quot;../policy/cmp0004#policy:CMP0004&quot; id=&quot;index-0-policy:CMP0004&quot;&gt; &lt;code&gt;CMP0004&lt;/code&gt; &lt;/a&gt; 의 OLD 처리에는 생성기 표현식이 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="16f086a8f3d77a7abae646176eed2f8e4743e8f5" translate="yes" xml:space="preserve">
          <source>Note that if you have a variable with the same name in the scope from which the macro is called, using unreferenced names will use the existing variable instead of the arguments. For example:</source>
          <target state="translated">매크로가 호출되는 범위에서 이름이 같은 변수가 있으면 참조되지 않은 이름을 사용하면 인수 대신 기존 변수가 사용됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="05a48c49253cf59541895210ee57def8247750ae" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-7-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">의존성에 대한 절대 경로로 대상 의 &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-7-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt; 를 채우는 것은 바람직하지 않습니다 . &lt;strong&gt;패키지가 만들어진 머신에서 발견 된&lt;/strong&gt; 의존성에 대한 라이브러리 파일 경로를 설치된 패키지에 하드 코딩 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="59a48a5d20f18c89a15adf31d67badb00db37938" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of a target with absolute paths to the include directories of dependencies. That would hard-code into installed packages the include directory paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">종속의 포함 디렉토리에 대한 절대 경로로 대상 의 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-2-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 를 채우는 것은 바람직하지 않습니다 . 패키지가 설치된 &lt;strong&gt;머신에서 발견 된&lt;/strong&gt; 의존성에 대한 포함 디렉토리 경로를 설치된 패키지에 하드 코딩 &lt;strong&gt;합니다&lt;/strong&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="85eaba3c941bfe29ab9b364c50ef4dcca79449e1" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; of the &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; of a target with absolute paths to the include directories of dependencies. That would hard-code into installed packages the include directory paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">종속의 포함 디렉토리에 대한 절대 경로로 대상 의 &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 의 &lt;code&gt;INSTALL_INTERFACE&lt;/code&gt; 를 채우는 것은 바람직하지 않습니다 . 패키지가 설치된 &lt;strong&gt;머신에서 발견 된&lt;/strong&gt; 의존성에 대한 포함 디렉토리 경로를 설치된 패키지에 하드 코딩 &lt;strong&gt;합니다&lt;/strong&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1a736c9fe74c18a87b4c5959a3149f4d46024e70" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">의존성에 대한 절대 경로로 대상 의 &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; 를 채우는 것은 바람직하지 않습니다 . &lt;strong&gt;패키지가 만들어진 머신에서 발견 된&lt;/strong&gt; 의존성에 대한 라이브러리 파일 경로를 설치된 패키지에 하드 코딩 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="048f6109a708af64128647230683886e9d8dec90" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">대상 의 &lt;code&gt;LINK_INTERFACE_LIBRARIES&lt;/code&gt; 를 종속성에 대한 절대 경로로 채우는 것은 권장되지 않습니다 . &lt;strong&gt;패키지가 만들어진 머신에서 발견 된&lt;/strong&gt; 의존성에 대한 라이브러리 파일 경로를 설치된 패키지에 하드 코딩 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="bc7f396eb8551c37d8aeae258ad89be0a52a02b1" translate="yes" xml:space="preserve">
          <source>Note that it is not advisable to populate the &lt;code&gt;LINK_INTERFACE_LIBRARIES_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; of a target with absolute paths to dependencies. That would hard-code into installed packages the library file paths for dependencies &lt;strong&gt;as found on the machine the package was made on&lt;/strong&gt;.</source>
          <target state="translated">대상 의 &lt;code&gt;LINK_INTERFACE_LIBRARIES_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 를 종속성에 대한 절대 경로로 채우는 것은 권장되지 않습니다 . &lt;strong&gt;패키지가 만들어진 머신에서 발견 된&lt;/strong&gt; 의존성에 대한 라이브러리 파일 경로를 설치된 패키지에 하드 코딩 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="439e50463f66534f0662330bb9a7818c4b9f81cc" translate="yes" xml:space="preserve">
          <source>Note that it is the value of this policy setting at the end of the directory scope that is important, not its setting at the time of the call to &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-10-command:install&quot;&gt;&lt;code&gt;install(CODE)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-11-command:install&quot;&gt;&lt;code&gt;install(SCRIPT)&lt;/code&gt;&lt;/a&gt;. This has implications for calling these commands from places that have their own policy scope but not their own directory scope (e.g. from files brought in via &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; rather than &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-10-command:install&quot;&gt; &lt;code&gt;install(CODE)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-11-command:install&quot;&gt; &lt;code&gt;install(SCRIPT)&lt;/code&gt; &lt;/a&gt; 호출 할 때의 설정이 아니라 중요한 디렉토리 범위의 끝에있는이 정책 설정의 값입니다 . 이는 자체 정책 범위는 있지만 자체 디렉토리 범위가 아닌 장소 (예 : &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 대신 &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; 를 통해 가져온 파일)에서 이러한 명령을 호출하는 데 영향을 미칩니다 .</target>
        </trans-unit>
        <trans-unit id="3cfd3c4ffe3ba3311bb34ef5b2ec5abd58de183c" translate="yes" xml:space="preserve">
          <source>Note that lock is advisory - there is no guarantee that other processes will respect this lock, i.e. lock synchronize two or more CMake instances sharing some modifiable resources. Similar logic applied to &lt;code&gt;DIRECTORY&lt;/code&gt; option - locking parent directory doesn&amp;rsquo;t prevent other &lt;code&gt;LOCK&lt;/code&gt; commands to lock any child directory or file.</source>
          <target state="translated">잠금은 권고입니다. 다른 프로세스가이 잠금을 존중한다고 보장 할 수 없습니다. 즉, 수정 가능한 일부 자원을 공유하는 둘 이상의 CMake 인스턴스를 잠금 동기화합니다. &lt;code&gt;DIRECTORY&lt;/code&gt; 옵션에 유사한 논리가 적용됨 -상위 디렉토리 잠금으로 인해 다른 &lt;code&gt;LOCK&lt;/code&gt; 명령이 하위 디렉토리 또는 파일을 잠그는 것을 막을 수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="2c6a870f28530d2f2d249bf2f36f935940885a8d" translate="yes" xml:space="preserve">
          <source>Note that on Windows &lt;code&gt;data&lt;/code&gt; is named &lt;code&gt;dt&lt;/code&gt; and &lt;code&gt;i18n&lt;/code&gt; is named &lt;code&gt;in&lt;/code&gt;; any of the names may be used, and the appropriate platform-specific library name will be automatically selected.</source>
          <target state="translated">Windows에서 &lt;code&gt;data&lt;/code&gt; 이름은 &lt;code&gt;dt&lt;/code&gt; 이고 &lt;code&gt;i18n&lt;/code&gt; 의 이름 &lt;code&gt;in&lt;/code&gt; ; 모든 이름을 사용할 수 있으며 적절한 플랫폼 별 라이브러리 이름이 자동으로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="59d58b9f3c162e6e6c53a43052209b1f035d1350" translate="yes" xml:space="preserve">
          <source>Note that some compilers will automatically search the module output directory for modules USEd during compilation but others will not. If your sources USE modules their location must be specified by &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; regardless of this property.</source>
          <target state="translated">일부 컴파일러는 컴파일 중에 USEd 모듈에 대한 모듈 출력 디렉토리를 자동으로 검색하지만 다른 컴파일러는 그렇지 않습니다. 소스 USE 모듈 의 경우이 특성에 관계없이 &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt; 로&lt;/a&gt; 해당 위치를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6c467dfd0e283a08e1043f346cffe4880f5fff10" translate="yes" xml:space="preserve">
          <source>Note that some of the types&amp;rsquo; built-in defaults use the &lt;code&gt;DATAROOT&lt;/code&gt; directory as a prefix. The &lt;code&gt;DATAROOT&lt;/code&gt; prefix is calculated similarly to the types, with &lt;code&gt;CMAKE_INSTALL_DATAROOTDIR&lt;/code&gt; as the variable and &lt;code&gt;share&lt;/code&gt; as the built-in default. You cannot use &lt;code&gt;DATAROOT&lt;/code&gt; as a &lt;code&gt;TYPE&lt;/code&gt; parameter; please use &lt;code&gt;DATA&lt;/code&gt; instead.</source>
          <target state="translated">유형의 내장 기본값 중 일부는 &lt;code&gt;DATAROOT&lt;/code&gt; 디렉토리를 접두어로 사용합니다 . &lt;code&gt;DATAROOT&lt;/code&gt; 의 접두사로, 유형과 유사하게 계산 &lt;code&gt;CMAKE_INSTALL_DATAROOTDIR&lt;/code&gt; 변수와 같은 &lt;code&gt;share&lt;/code&gt; 내장 된 기본값으로. &lt;code&gt;DATAROOT&lt;/code&gt; 를 &lt;code&gt;TYPE&lt;/code&gt; 매개 변수 로 사용할 수 없습니다 . 대신 &lt;code&gt;DATA&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf8c493778f5b4388cf2c9de70f37b3c92f29640" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt;&lt;/a&gt; command implicitly calls &lt;code&gt;cmake_policy(VERSION)&lt;/code&gt; too.</source>
          <target state="translated">있습니다 &lt;a href=&quot;cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt; &lt;/a&gt; 명령이 암시 적으로 호출 &lt;code&gt;cmake_policy(VERSION)&lt;/code&gt; 도 있습니다.</target>
        </trans-unit>
        <trans-unit id="67e768f999f6d23a61d52b776e7c7de3e8a154f8" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;&amp;lt;suffix&amp;gt;&lt;/code&gt; of a series does not include a hash-algorithm extension.</source>
          <target state="translated">시리즈 의 &lt;code&gt;&amp;lt;suffix&amp;gt;&lt;/code&gt; 는 해시 알고리즘 확장을 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="69fd022bedad8743a6cbb01ff828162f9bad931f" translate="yes" xml:space="preserve">
          <source>Note that the command invocation must appear in the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file itself; a call in an included file is not sufficient. However, the &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy()&lt;/code&gt;&lt;/a&gt; command may be called to set policy &lt;code&gt;CMP0000&lt;/code&gt; to &lt;code&gt;OLD&lt;/code&gt; or &lt;code&gt;NEW&lt;/code&gt; behavior explicitly. The &lt;code&gt;OLD&lt;/code&gt; behavior is to silently ignore the missing invocation. The &lt;code&gt;NEW&lt;/code&gt; behavior is to issue an error instead of a warning. An included file may set &lt;code&gt;CMP0000&lt;/code&gt; explicitly to affect how this policy is enforced for the main &lt;code&gt;CMakeLists.txt&lt;/code&gt; file.</source>
          <target state="translated">명령 호출은 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 자체에 나타나야 합니다. 포함 된 파일의 호출로는 충분하지 않습니다. 그러나 정책 &lt;code&gt;CMP0000&lt;/code&gt; 을 &lt;code&gt;OLD&lt;/code&gt; 또는 &lt;code&gt;NEW&lt;/code&gt; 동작으로 명시 적으로 설정하기 위해 &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt; &lt;code&gt;cmake_policy()&lt;/code&gt; &lt;/a&gt; 명령을 호출 할 수 있습니다 . &lt;code&gt;OLD&lt;/code&gt; 동작은 자동으로 누락 된 호출을 무시하는 것이다. 그만큼 &lt;code&gt;NEW&lt;/code&gt; 동작은 오류 대신 경고를 발행하는 것입니다. 포함 된 파일은 기본 &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 에이 정책이 적용되는 방식에 영향을 미치기 위해 &lt;code&gt;CMP0000&lt;/code&gt; 을 명시 적으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="541a3833cb4fbbdc38bde301a59d0f7d984c9cc9" translate="yes" xml:space="preserve">
          <source>Note that the expected include convention is</source>
          <target state="translated">예상되는 포함 규칙은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="bb2b90f720982fe008fa43f3a5683779f4891447" translate="yes" xml:space="preserve">
          <source>Note that the hashes are used only for unique data identification and download verification.</source>
          <target state="translated">해시는 고유 한 데이터 식별 및 다운로드 확인에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="acaab0de51c8108578ec13b98f6a495b2618eada" translate="yes" xml:space="preserve">
          <source>Note that the header path has changed from SDL/SDL.h to just SDL.h This needed to change because &amp;ldquo;proper&amp;rdquo; SDL convention is #include &amp;ldquo;SDL.h&amp;rdquo;, not &amp;lt;SDL/SDL.h&amp;gt;. This is done for portability reasons because not all systems place things in SDL/ (see FreeBSD).</source>
          <target state="translated">헤더 경로가 SDL / SDL.h에서 SDL.h로 변경되었습니다.&amp;ldquo;적절한&amp;rdquo;SDL 규칙은 &amp;lt;SDL / SDL.h&amp;gt;가 아니라 #include&amp;ldquo;SDL.h&amp;rdquo;이므로 변경해야했습니다. 이것은 모든 시스템이 SDL /에 배치하는 것은 아니기 때문에 이식성의 이유로 수행됩니다 (FreeBSD 참조).</target>
        </trans-unit>
        <trans-unit id="b45e434e8f686be4ee04a3a3f8c3a2f36e53ac21" translate="yes" xml:space="preserve">
          <source>Note that the implementation is 8-bit clean so source files may be encoded as UTF-8 on platforms with system APIs supporting this encoding. In addition, CMake 3.2 and above support source files encoded in UTF-8 on Windows (using UTF-16 to call system APIs). Furthermore, CMake 3.0 and above allow a leading UTF-8 &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;Byte-Order Mark&lt;/a&gt; in source files.</source>
          <target state="translated">구현은 8 비트 클린이므로 소스 파일은이 인코딩을 지원하는 시스템 API가있는 플랫폼에서 UTF-8로 인코딩 될 수 있습니다. 또한 CMake 3.2 이상은 Windows에서 UTF-8로 인코딩 된 소스 파일을 지원합니다 (UTF-16을 사용하여 시스템 API 호출). 또한 CMake 3.0 이상에서는 선행 UTF-8 &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order_mark&quot;&gt;바이트 순서 마크를 사용할 수 있습니다.&lt;/a&gt; 은 소스 파일에서 를 합니다.</target>
        </trans-unit>
        <trans-unit id="fc40eddac2f499a1c6a950edcc5999c7a8a4e519" translate="yes" xml:space="preserve">
          <source>Note that the prefix(es) may still be searched for other reasons, such as being the same prefix as the CMake installation, or for being a built-in system prefix.</source>
          <target state="translated">CMake 설치와 동일한 접두사 또는 내장 시스템 접두사와 같은 다른 이유로 접두사를 계속 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8903f4774852403fae25828a644a87510a24a025" translate="yes" xml:space="preserve">
          <source>Note that the set of supported components is Ice version-specific.</source>
          <target state="translated">지원되는 구성 요소 집합은 Ice 버전에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="9e03f00613d87ee8c036e50cd9f69dc4a8ebc7a7" translate="yes" xml:space="preserve">
          <source>Note that the standard &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; features are supported (i.e., &lt;code&gt;QUIET&lt;/code&gt;, &lt;code&gt;REQUIRED&lt;/code&gt;, etc.).</source>
          <target state="translated">표준 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-2-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 기능이 지원됩니다 (예 : &lt;code&gt;QUIET&lt;/code&gt; , &lt;code&gt;REQUIRED&lt;/code&gt; 등).</target>
        </trans-unit>
        <trans-unit id="8bcab119581a5bfc5319861531f6cf336a95ab6c" translate="yes" xml:space="preserve">
          <source>Note that the warning for this policy will be issued for at most one target. This avoids flooding users with messages for every target when setting the policy once will probably fix all targets.</source>
          <target state="translated">이 정책에 대한 경고는 최대 하나의 대상에 대해 발행됩니다. 이렇게하면 정책을 한 번 설정하면 모든 대상이 수정 될 때 모든 대상에 대한 메시지가 사용자에게 넘치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ed1dca6959287a44a2e2a42736da332b9bffba6b" translate="yes" xml:space="preserve">
          <source>Note that there&amp;rsquo;s no variable for the C bindings being accessible through &lt;code&gt;mpi.h&lt;/code&gt;, since the MPI standards always have required this binding to work in both C and C++ code.</source>
          <target state="translated">MPI 표준은 항상이 바인딩이 C 및 C ++ 코드 모두에서 작동하도록 요구했기 때문에 &lt;code&gt;mpi.h&lt;/code&gt; 를 통해 C 바인딩에 액세스 할 수있는 변수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="beebc73d4611e774d509944217d8006ffb0853c7" translate="yes" xml:space="preserve">
          <source>Note that this command returns the raw symlink path and does not resolve a relative path. The following is an example of how to ensure that an absolute path is obtained:</source>
          <target state="translated">이 명령은 원시 심볼릭 링크 경로를 반환하고 상대 경로를 확인하지 않습니다. 다음은 절대 경로를 확보하는 방법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="7884845fe4a77a551b625f18c9e934374908c819" translate="yes" xml:space="preserve">
          <source>Note that this scope chaining behavior only applies to calls to &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-4-command:get_property&quot;&gt;&lt;code&gt;get_property()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;get_directory_property#command:get_directory_property&quot; id=&quot;index-0-command:get_directory_property&quot;&gt;&lt;code&gt;get_directory_property()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;get_target_property#command:get_target_property&quot; id=&quot;index-0-command:get_target_property&quot;&gt;&lt;code&gt;get_target_property()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;get_source_file_property#command:get_source_file_property&quot; id=&quot;index-0-command:get_source_file_property&quot;&gt;&lt;code&gt;get_source_file_property()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;get_test_property#command:get_test_property&quot; id=&quot;index-0-command:get_test_property&quot;&gt;&lt;code&gt;get_test_property()&lt;/code&gt;&lt;/a&gt;. There is no inheriting behavior when &lt;em&gt;setting&lt;/em&gt; properties, so using &lt;code&gt;APPEND&lt;/code&gt; or &lt;code&gt;APPEND_STRING&lt;/code&gt; with the &lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-2-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; command will not consider inherited values when working out the contents to append to.</source>
          <target state="translated">이 범위 체인 동작은 &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-4-command:get_property&quot;&gt; &lt;code&gt;get_property()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;get_directory_property#command:get_directory_property&quot; id=&quot;index-0-command:get_directory_property&quot;&gt; &lt;code&gt;get_directory_property()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;get_target_property#command:get_target_property&quot; id=&quot;index-0-command:get_target_property&quot;&gt; &lt;code&gt;get_target_property()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;get_source_file_property#command:get_source_file_property&quot; id=&quot;index-0-command:get_source_file_property&quot;&gt; &lt;code&gt;get_source_file_property()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;get_test_property#command:get_test_property&quot; id=&quot;index-0-command:get_test_property&quot;&gt; &lt;code&gt;get_test_property()&lt;/code&gt; &lt;/a&gt; 대한 호출에만 적용됩니다 . 속성을 &lt;em&gt;설정할&lt;/em&gt; 때 상속 동작이 없으므로 &lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-2-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt; 명령 과 함께 &lt;code&gt;APPEND&lt;/code&gt; 또는 &lt;code&gt;APPEND_STRING&lt;/code&gt; 을 사용하면 추가 할 내용을 작업 할 때 상속 된 값을 고려하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="08220f5d5eff8872083954f44f517d0f93baaab4" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt;&lt;code&gt;set_property()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-2-command:get_property&quot;&gt;&lt;code&gt;get_property()&lt;/code&gt;&lt;/a&gt; no actual scope needs to be given; only the kind of scope is important.</source>
          <target state="translated">&lt;a href=&quot;set_property#command:set_property&quot; id=&quot;index-1-command:set_property&quot;&gt; &lt;code&gt;set_property()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;get_property#command:get_property&quot; id=&quot;index-2-command:get_property&quot;&gt; &lt;code&gt;get_property()&lt;/code&gt; &lt;/a&gt;() 와 달리 실제 범위는 제공 할 필요가 없습니다. 범위의 종류 만 중요합니다.</target>
        </trans-unit>
        <trans-unit id="aa6421f58a325323c372d9989be3ba6b83236ea9" translate="yes" xml:space="preserve">
          <source>Note that usage requirements are not designed as a way to make downstreams use particular &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_OPTIONS&quot;&gt;&lt;code&gt;COMPILE_OPTIONS&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_DEFINITIONS&quot;&gt;&lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt;&lt;/a&gt; etc for convenience only. The contents of the properties must be &lt;strong&gt;requirements&lt;/strong&gt;, not merely recommendations or convenience.</source>
          <target state="translated">사용 요구 사항은 다운 스트림이 특정 &lt;a href=&quot;../prop_tgt/compile_options#prop_tgt:COMPILE_OPTIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_OPTIONS&quot;&gt; &lt;code&gt;COMPILE_OPTIONS&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../prop_tgt/compile_definitions#prop_tgt:COMPILE_DEFINITIONS&quot; id=&quot;index-1-prop_tgt:COMPILE_DEFINITIONS&quot;&gt; &lt;code&gt;COMPILE_DEFINITIONS&lt;/code&gt; &lt;/a&gt; 등을 편의상 사용하도록 만드는 방법으로 설계되지 않았습니다 . 속성의 내용은 권장 사항이나 편의성이 아니라 &lt;strong&gt;요구 사항&lt;/strong&gt; 이어야 합니다.</target>
        </trans-unit>
        <trans-unit id="2e1f3a9dd0419a106187145f1ab7e40cdae28bae" translate="yes" xml:space="preserve">
          <source>Note that using the &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt; variables inside a toolchain file is typically undesirable. The toolchain file is used in contexts where these variables have different values when used in different places (e.g. as part of a call to &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt;). In most cases, where there is a need to evaluate paths inside a toolchain file, the more appropriate variable to use would be &lt;a href=&quot;../variable/cmake_current_list_dir#variable:CMAKE_CURRENT_LIST_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_LIST_DIR&lt;/code&gt;&lt;/a&gt;, since it always has an unambiguous, predictable value.</source>
          <target state="translated">툴체인 파일 내 에서 &lt;a href=&quot;../variable/cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../variable/cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 변수 를 사용하는 것은 일반적으로 바람직하지 않습니다. 툴체인 파일은 다른 위치에서 사용될 때 (예 : &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 호출의 일부로) 이러한 변수의 값이 다른 컨텍스트에서 사용됩니다 . 대부분의 경우 툴체인 파일 내부의 경로를 평가해야하는 경우 사용하기에 더 적합한 변수는 &lt;a href=&quot;../variable/cmake_current_list_dir#variable:CMAKE_CURRENT_LIST_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_LIST_DIR&lt;/code&gt; 입니다.&lt;/a&gt; 는 항상 명확하고 예측 가능한 값을 때문입니다.</target>
        </trans-unit>
        <trans-unit id="2c03a5a0d8e8fa9594d093e6fdfcbf0c230a5fac" translate="yes" xml:space="preserve">
          <source>Note that with &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; and &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; there is no way to represent target-wide compile definitions or include directories separately for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; languages. Also, with &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; there is no way to represent target-wide flags separately for &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; languages. Under these generators, expressions for both C and C++ sources will be evaluated using &lt;code&gt;CXX&lt;/code&gt; if there are any C++ sources and otherwise using &lt;code&gt;C&lt;/code&gt;. A workaround is to create separate libraries for each source file language instead:</source>
          <target state="translated">참고 것을 함께 &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기&lt;/a&gt; 및 &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt; &lt;code&gt;Xcode&lt;/code&gt; 를&lt;/a&gt; 대상 전체 컴파일 정의를 대표하거나 별도로 디렉토리를 포함 할 수있는 방법이 없습니다 &lt;code&gt;C&lt;/code&gt; 와 &lt;code&gt;CXX&lt;/code&gt; 언어. 또한 &lt;a href=&quot;cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; 를 사용하면 &lt;code&gt;C&lt;/code&gt; 및 &lt;code&gt;CXX&lt;/code&gt; 언어에 대해 대상 전체 플래그를 개별적으로 나타내는 방법이 없습니다 . 이 발전기에서 C 및 C ++ 소스를 모두 표현하여 평가됩니다 &lt;code&gt;CXX&lt;/code&gt; 를 사용하는 C ++ 소스와 그렇지 않은 경우가있는 경우 &lt;code&gt;C&lt;/code&gt; 가 . 해결 방법은 각 소스 파일 언어마다 별도의 라이브러리를 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fab189de3bf655a6d92b1317980dbddc74c41d45" translate="yes" xml:space="preserve">
          <source>Now we can use &lt;a href=&quot;../module/findpackagehandlestandardargs#module:FindPackageHandleStandardArgs&quot; id=&quot;index-1-module:FindPackageHandleStandardArgs&quot;&gt;&lt;code&gt;FindPackageHandleStandardArgs&lt;/code&gt;&lt;/a&gt; to do most of the rest of the work for us</source>
          <target state="translated">이제 &lt;a href=&quot;../module/findpackagehandlestandardargs#module:FindPackageHandleStandardArgs&quot; id=&quot;index-1-module:FindPackageHandleStandardArgs&quot;&gt; &lt;code&gt;FindPackageHandleStandardArgs&lt;/code&gt; &lt;/a&gt; 를 사용 하여 나머지 작업을 대부분 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c4ce8c5233f46c9cbb8f11e6b815dcefb7e603e" translate="yes" xml:space="preserve">
          <source>Now we need to find the libraries and include files; we use the information from &lt;code&gt;pkg-config&lt;/code&gt; to provide hints to CMake about where to look.</source>
          <target state="translated">이제 라이브러리를 찾고 파일을 포함시켜야합니다. 우리는 &lt;code&gt;pkg-config&lt;/code&gt; 의 정보를 사용하여 어디에서 CMake에 힌트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8d077a61a1c112d07535b8869aa326e3ffc29965" translate="yes" xml:space="preserve">
          <source>Null pointer, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2431.pdf&quot;&gt;N2431&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2431.pdf&quot;&gt;N2431에&lt;/a&gt; 정의 된 널 포인터 .</target>
        </trans-unit>
        <trans-unit id="4e33ab127a2fcf146100d3d84dd3dccba4ee334f" translate="yes" xml:space="preserve">
          <source>NumPy Python library. Target defined if component &lt;code&gt;NumPy&lt;/code&gt; is found.</source>
          <target state="translated">NumPy Python 라이브러리. 구성 요소 &lt;code&gt;NumPy&lt;/code&gt; 가있는 경우 정의 된 대상 .</target>
        </trans-unit>
        <trans-unit id="3aa58fa2a36dcf6be068fc411b39262950a44cdf" translate="yes" xml:space="preserve">
          <source>NumPy library for Python 2. Target defined if component &lt;code&gt;NumPy&lt;/code&gt; is found.</source>
          <target state="translated">Python 2 용 NumPy 라이브러리 . 구성 요소 &lt;code&gt;NumPy&lt;/code&gt; 가있는 경우 대상이 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="fba964df5c30ec5ef79cb140f58480def575d65e" translate="yes" xml:space="preserve">
          <source>NumPy library for Python 3. Target defined if component &lt;code&gt;NumPy&lt;/code&gt; is found.</source>
          <target state="translated">Python 3 용 NumPy 라이브러리 . 구성 요소 &lt;code&gt;NumPy&lt;/code&gt; 가있는 경우 대상이 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="c802dfca903c2a2d97f2a9a6c5fc2e5ad7cf6df5" translate="yes" xml:space="preserve">
          <source>Number of MPI processors to utilize. Defaults to the number of processors detected on the host system.</source>
          <target state="translated">사용할 MPI 프로세서 수 호스트 시스템에서 감지 된 프로세서 수는 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="1cb0011a6258db2a2a59f5fe51f730d3b71d910c" translate="yes" xml:space="preserve">
          <source>Number of command line arguments passed to CMake in script mode.</source>
          <target state="translated">스크립트 모드에서 CMake에 전달 된 명령 줄 인수의 수입니다.</target>
        </trans-unit>
        <trans-unit id="a037c2d6117b3123656653aa77d4d68fa37543ba" translate="yes" xml:space="preserve">
          <source>Number of logical cores</source>
          <target state="translated">논리 코어 수</target>
        </trans-unit>
        <trans-unit id="701494a30c898736fff1a7b1b8c1d5a138ec5d44" translate="yes" xml:space="preserve">
          <source>Number of parallel &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; processes to start when using &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">병렬 수 &lt;code&gt;moc&lt;/code&gt; 또는 &lt;code&gt;uic&lt;/code&gt; 프로세스를 사용하는 경우 시작 &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9e9ec0542e8fe5407201e4705269e9661cc05030" translate="yes" xml:space="preserve">
          <source>Number of parallel &lt;code&gt;moc&lt;/code&gt; or &lt;code&gt;uic&lt;/code&gt; processes to start when using &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">병렬 수 &lt;code&gt;moc&lt;/code&gt; 또는 &lt;code&gt;uic&lt;/code&gt; 프로세스를 사용하는 경우 시작 &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt; &lt;code&gt;AUTOMOC&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt; &lt;code&gt;AUTOUIC&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7eeda1c731e1f3d6019a494278d310c806dfd79f" translate="yes" xml:space="preserve">
          <source>Number of physical cores</source>
          <target state="translated">물리적 코어 수</target>
        </trans-unit>
        <trans-unit id="53fed443889b5067e0ce1565f3e6aaf85385ac1f" translate="yes" xml:space="preserve">
          <source>Number of threads for parallel compilation for Swift targets.</source>
          <target state="translated">Swift 대상에 대한 병렬 컴파일을위한 스레드 수</target>
        </trans-unit>
        <trans-unit id="aaf507339d6a5441d02449948e8658251284de51" translate="yes" xml:space="preserve">
          <source>Number of version components, 0 to 4</source>
          <target state="translated">버전 구성 요소 수, 0 ~ 4</target>
        </trans-unit>
        <trans-unit id="3a8cbcf5cb4e32d9dcd121755ea1b93ec6755eb9" translate="yes" xml:space="preserve">
          <source>OBJECT_DEPENDS</source>
          <target state="translated">OBJECT_DEPENDS</target>
        </trans-unit>
        <trans-unit id="486e7d54a1c6dc3b34e9cd5091a2aa9d7aa485b8" translate="yes" xml:space="preserve">
          <source>OBJECT_OUTPUTS</source>
          <target state="translated">OBJECT_OUTPUTS</target>
        </trans-unit>
        <trans-unit id="0fb01508b6d15eee3431078e3ee55df0aed8f005" translate="yes" xml:space="preserve">
          <source>ONE_PER_GROUP (default): creates one package file per component group</source>
          <target state="translated">ONE_PER_GROUP (기본값) : 구성 요소 그룹당 하나의 패키지 파일을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="ee556e47159c055a64fe397a86c24b6f5516e1cf" translate="yes" xml:space="preserve">
          <source>OPTIONS If you need OpenGL support please</source>
          <target state="translated">옵션 OpenGL 지원이 필요한 경우</target>
        </trans-unit>
        <trans-unit id="de8aa86286dbb8eb74d2748c7b6d4486d0458203" translate="yes" xml:space="preserve">
          <source>OS</source>
          <target state="translated">OS</target>
        </trans-unit>
        <trans-unit id="79cd8301d2c73c8df2769fba809939382ba38597" translate="yes" xml:space="preserve">
          <source>OS X: The installed versions of Matlab/MCR are given by the MATLAB default installation paths in &lt;code&gt;/Application&lt;/code&gt;. If no such application is found, it falls back to the one that might be accessible from the &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="translated">OS X : 설치된 Matlab / MCR 버전은 &lt;code&gt;/Application&lt;/code&gt; 의 MATLAB 기본 설치 경로에 의해 제공됩니다 . 이러한 응용 프로그램을 찾지 못하면 &lt;code&gt;PATH&lt;/code&gt; 에서 액세스 할 수있는 응용 프로그램으로 돌아갑니다 .</target>
        </trans-unit>
        <trans-unit id="42528febd8e9722a1588b91f2af82366cf9eb79b" translate="yes" xml:space="preserve">
          <source>OSGANIMATION_FOUND - Was osgAnimation found? OSGANIMATION_INCLUDE_DIR - Where to find the headers OSGANIMATION_LIBRARIES - The libraries to link against for the OSG (use this)</source>
          <target state="translated">OSGANIMATION_FOUND-osgAnimation을 찾았습니까? OSGANIMATION_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGANIMATION_LIBRARIES-OSG에 대해 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="8e4548385da58522f55038216a8e7fb15d42facb" translate="yes" xml:space="preserve">
          <source>OSGANIMATION_LIBRARY - The OSG library OSGANIMATION_LIBRARY_DEBUG - The OSG debug library</source>
          <target state="translated">OSGANIMATION_LIBRARY-OSG 라이브러리 OSGANIMATION_LIBRARY_DEBUG-OSG 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="8090e9bbcf8bf38dc5d14b4556af9c0f22b20a0a" translate="yes" xml:space="preserve">
          <source>OSGFX_FOUND - Was osgFX found? OSGFX_INCLUDE_DIR - Where to find the headers OSGFX_LIBRARIES - The libraries to link against for the osgFX (use this)</source>
          <target state="translated">OSGFX_FOUND-osgFX를 찾았습니까? OSGFX_INCLUDE_DIR-헤더를 찾을 위치 OSGFX_LIBRARIES-osgFX에 대해 링크 할 라이브러리 (이것을 사용하십시오)</target>
        </trans-unit>
        <trans-unit id="c49266128c8fc1fe62170de0d1b75c72aaa28ec5" translate="yes" xml:space="preserve">
          <source>OSGFX_LIBRARY - The osgFX library OSGFX_LIBRARY_DEBUG - The osgFX debug library</source>
          <target state="translated">OSGFX_LIBRARY-osgFX 라이브러리 OSGFX_LIBRARY_DEBUG-osgFX 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="a3d2aab905675a8f0c71f1ad8c4603d1069a6137" translate="yes" xml:space="preserve">
          <source>OSGGA_FOUND - Was osgGA found? OSGGA_INCLUDE_DIR - Where to find the headers OSGGA_LIBRARIES - The libraries to link against for the osgGA (use this)</source>
          <target state="translated">OSGGA_FOUND-osgGA를 찾았습니까? OSGGA_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGGA_LIBRARIES-osgGA에 대해 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="d47d0798fcec889fbda51dba05e55768a62b7808" translate="yes" xml:space="preserve">
          <source>OSGGA_LIBRARY - The osgGA library OSGGA_LIBRARY_DEBUG - The osgGA debug library</source>
          <target state="translated">OSGGA_LIBRARY-osgGA 라이브러리 OSGGA_LIBRARY_DEBUG-osgGA 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="19f62c46c97d8d6634a38dd0c68599e0151563d2" translate="yes" xml:space="preserve">
          <source>OSGINTROSPECTION_FOUND - Was osgIntrospection found? OSGINTROSPECTION_INCLUDE_DIR - Where to find the headers OSGINTROSPECTION_LIBRARIES - The libraries to link for osgIntrospection (use this)</source>
          <target state="translated">OSGINTROSPECTION_FOUND-osgIntrospection을 찾았습니까? OSGINTROSPECTION_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGINTROSPECTION_LIBRARIES-osgIntrospection에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="5b05156cfa516be8dd1a21b273d9534e1e2aa1a3" translate="yes" xml:space="preserve">
          <source>OSGINTROSPECTION_LIBRARY - The osgIntrospection library OSGINTROSPECTION_LIBRARY_DEBUG - The osgIntrospection debug library</source>
          <target state="translated">OSGINTROSPECTION_LIBRARY-osgIntrospection 라이브러리 OSGINTROSPECTION_LIBRARY_DEBUG-osgIntrospection 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="454638bc2a61e329ccda1cf5458521c72769c4e5" translate="yes" xml:space="preserve">
          <source>OSGMANIPULATOR_FOUND - Was osgManipulator found? OSGMANIPULATOR_INCLUDE_DIR - Where to find the headers OSGMANIPULATOR_LIBRARIES - The libraries to link for osgManipulator (use this)</source>
          <target state="translated">OSGMANIPULATOR_FOUND-osgManipulator를 찾았습니까? OSGMANIPULATOR_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGMANIPULATOR_LIBRARIES-osgManipulator에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="25bc747926a66c9bca81bb6154daa78a0615d883" translate="yes" xml:space="preserve">
          <source>OSGMANIPULATOR_LIBRARY - The osgManipulator library OSGMANIPULATOR_LIBRARY_DEBUG - The osgManipulator debug library</source>
          <target state="translated">OSGMANIPULATOR_LIBRARY-osgManipulator 라이브러리 OSGMANIPULATOR_LIBRARY_DEBUG-osgManipulator 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="834b94753b186d32d77393b50ab76b294180c50e" translate="yes" xml:space="preserve">
          <source>OSGPARTICLE_FOUND - Was osgParticle found? OSGPARTICLE_INCLUDE_DIR - Where to find the headers OSGPARTICLE_LIBRARIES - The libraries to link for osgParticle (use this)</source>
          <target state="translated">OSGPARTICLE_FOUND-osgParticle을 찾았습니까? OSGPARTICLE_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGPARTICLE_LIBRARIES-osgParticle에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="695fde7fcd5e800ca826d49e39e8b3f76bdb33ec" translate="yes" xml:space="preserve">
          <source>OSGPARTICLE_LIBRARY - The osgParticle library OSGPARTICLE_LIBRARY_DEBUG - The osgParticle debug library</source>
          <target state="translated">OSGPARTICLE_LIBRARY-osgParticle 라이브러리 OSGPARTICLE_LIBRARY_DEBUG-osgParticle 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="6381502041b1fafa1be9bba1237e7c6aa093d1ca" translate="yes" xml:space="preserve">
          <source>OSGPRESENTATION_FOUND - Was osgPresentation found? OSGPRESENTATION_INCLUDE_DIR - Where to find the headers OSGPRESENTATION_LIBRARIES - The libraries to link for osgPresentation (use this)</source>
          <target state="translated">OSGPRESENTATION_FOUND-osgPresentation을 찾았습니까? OSGPRESENTATION_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGPRESENTATION_LIBRARIES-osgPresentation에 링크 할 라이브러리 (이것을 사용하십시오)</target>
        </trans-unit>
        <trans-unit id="d0257f130ffddebfe0a1fcb5ecaa87912234acbd" translate="yes" xml:space="preserve">
          <source>OSGPRESENTATION_LIBRARY - The osgPresentation library OSGPRESENTATION_LIBRARY_DEBUG - The osgPresentation debug library</source>
          <target state="translated">OSGPRESENTATION_LIBRARY-osgPresentation 라이브러리 OSGPRESENTATION_LIBRARY_DEBUG-osgPresentation 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="a4faafac3d0f8283ab62aba9835a48a243a0ffe0" translate="yes" xml:space="preserve">
          <source>OSGPRODUCER_FOUND - Was osgProducer found? OSGPRODUCER_INCLUDE_DIR - Where to find the headers OSGPRODUCER_LIBRARIES - The libraries to link for osgProducer (use this)</source>
          <target state="translated">OSGPRODUCER_FOUND-osgProducer를 찾았습니까? OSGPRODUCER_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGPRODUCER_LIBRARIES-osgProducer에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="d9ca7e9bce957919bfb21b5338454c7899033282" translate="yes" xml:space="preserve">
          <source>OSGPRODUCER_LIBRARY - The osgProducer library OSGPRODUCER_LIBRARY_DEBUG - The osgProducer debug library</source>
          <target state="translated">OSGPRODUCER_LIBRARY-osgProducer 라이브러리 OSGPRODUCER_LIBRARY_DEBUG-osgProducer 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="b77a1e0eebaceab85e7b402fb76b8bd7fc197924" translate="yes" xml:space="preserve">
          <source>OSGQT_FOUND - Was osgQt found? OSGQT_INCLUDE_DIR - Where to find the headers OSGQT_LIBRARIES - The libraries to link for osgQt (use this)</source>
          <target state="translated">OSGQT_FOUND-osgQt를 찾았습니까? OSGQT_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGQT_LIBRARIES-osgQt에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="45ee56f004c3fc8e30dc0d1c8b6456978e2455f5" translate="yes" xml:space="preserve">
          <source>OSGQT_LIBRARY - The osgQt library OSGQT_LIBRARY_DEBUG - The osgQt debug library</source>
          <target state="translated">OSGQT_LIBRARY-osgQt 라이브러리 OSGQT_LIBRARY_DEBUG-osgQt 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="ea2bd6554099a8692ab732f7889d7f0b1aadaba3" translate="yes" xml:space="preserve">
          <source>OSGSHADOW_FOUND - Was osgShadow found? OSGSHADOW_INCLUDE_DIR - Where to find the headers OSGSHADOW_LIBRARIES - The libraries to link for osgShadow (use this)</source>
          <target state="translated">OSGSHADOW_FOUND-osgShadow를 찾았습니까? OSGSHADOW_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGSHADOW_LIBRARIES-osgShadow에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="08cf01767a2e3e74ae06e1891aeab84c8042dd98" translate="yes" xml:space="preserve">
          <source>OSGSHADOW_LIBRARY - The osgShadow library OSGSHADOW_LIBRARY_DEBUG - The osgShadow debug library</source>
          <target state="translated">OSGSHADOW_LIBRARY-osgShadow 라이브러리 OSGSHADOW_LIBRARY_DEBUG-osgShadow 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="4ca83357f1dd24096293f286eee631fd63e201f9" translate="yes" xml:space="preserve">
          <source>OSGSIM_FOUND - Was osgSim found? OSGSIM_INCLUDE_DIR - Where to find the headers OSGSIM_LIBRARIES - The libraries to link for osgSim (use this)</source>
          <target state="translated">OSGSIM_FOUND-osgSim을 찾았습니까? OSGSIM_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGSIM_LIBRARIES-osgSim에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="3921f2b851bbf015d31b0d244408a66d458ed80c" translate="yes" xml:space="preserve">
          <source>OSGSIM_LIBRARY - The osgSim library OSGSIM_LIBRARY_DEBUG - The osgSim debug library</source>
          <target state="translated">OSGSIM_LIBRARY-osgSim 라이브러리 OSGSIM_LIBRARY_DEBUG-osgSim 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="9439bb02c45fa8801aaada57eed5d6d016d8b5ee" translate="yes" xml:space="preserve">
          <source>OSGTERRAIN_FOUND - Was osgTerrain found? OSGTERRAIN_INCLUDE_DIR - Where to find the headers OSGTERRAIN_LIBRARIES - The libraries to link for osgTerrain (use this)</source>
          <target state="translated">OSGTERRAIN_FOUND-osgTerrain을 찾았습니까? OSGTERRAIN_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGTERRAIN_LIBRARIES-osgTerrain에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="312b549fb657938a5736198f61bf76bc5ba76ec7" translate="yes" xml:space="preserve">
          <source>OSGTERRAIN_LIBRARY - The osgTerrain library OSGTERRAIN_LIBRARY_DEBUG - The osgTerrain debug library</source>
          <target state="translated">OSGTERRAIN_LIBRARY-osgTerrain 라이브러리 OSGTERRAIN_LIBRARY_DEBUG-osgTerrain 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="c34ca640eb4c268edbe287680b959a76a0c65d8c" translate="yes" xml:space="preserve">
          <source>OSGTEXT_FOUND - Was osgText found? OSGTEXT_INCLUDE_DIR - Where to find the headers OSGTEXT_LIBRARIES - The libraries to link for osgText (use this)</source>
          <target state="translated">OSGTEXT_FOUND-osgText를 찾았습니까? OSGTEXT_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGTEXT_LIBRARIES-osgText에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="9c528ef250d02fbbc184503fafd57fe752442d73" translate="yes" xml:space="preserve">
          <source>OSGTEXT_LIBRARY - The osgText library OSGTEXT_LIBRARY_DEBUG - The osgText debug library</source>
          <target state="translated">OSGTEXT_LIBRARY-osgText 라이브러리 OSGTEXT_LIBRARY_DEBUG-osgText 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="dd0a7d9212d0b151a9ccdc19aeded78f9e53bafd" translate="yes" xml:space="preserve">
          <source>OSGUTIL_FOUND - Was osgUtil found? OSGUTIL_INCLUDE_DIR - Where to find the headers OSGUTIL_LIBRARIES - The libraries to link for osgUtil (use this)</source>
          <target state="translated">OSGUTIL_FOUND-osgUtil을 찾았습니까? OSGUTIL_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGUTIL_LIBRARIES-osgUtil에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="8cd643f75dc3c7788844ed557e75678f66d43723" translate="yes" xml:space="preserve">
          <source>OSGUTIL_LIBRARY - The osgUtil library OSGUTIL_LIBRARY_DEBUG - The osgUtil debug library</source>
          <target state="translated">OSGUTIL_LIBRARY-osgUtil 라이브러리 OSGUTIL_LIBRARY_DEBUG-osgUtil 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="5f697aaaae1519e52c80ca4d33d6758565e91e05" translate="yes" xml:space="preserve">
          <source>OSGVIEWER_FOUND - Was osgViewer found? OSGVIEWER_INCLUDE_DIR - Where to find the headers OSGVIEWER_LIBRARIES - The libraries to link for osgViewer (use this)</source>
          <target state="translated">OSGVIEWER_FOUND-osgViewer를 찾았습니까? OSGVIEWER_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGVIEWER_LIBRARIES-osgViewer에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="d569ed8bd0cdb04dbc5e2b0965d5e06f4055b552" translate="yes" xml:space="preserve">
          <source>OSGVIEWER_LIBRARY - The osgViewer library OSGVIEWER_LIBRARY_DEBUG - The osgViewer debug library</source>
          <target state="translated">OSGVIEWER_LIBRARY-osgViewer 라이브러리 OSGVIEWER_LIBRARY_DEBUG-osgViewer 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="05d13c79e496119e00cf1521332ea9a11aea302d" translate="yes" xml:space="preserve">
          <source>OSGVOLUME_FOUND - Was osgVolume found? OSGVOLUME_INCLUDE_DIR - Where to find the headers OSGVOLUME_LIBRARIES - The libraries to link for osgVolume (use this)</source>
          <target state="translated">OSGVOLUME_FOUND-osgVolume을 찾았습니까? OSGVOLUME_INCLUDE_DIR-헤더를 찾을 위치 OSGVOLUME_LIBRARIES-osgVolume에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="1a90817375c33fb365e6c0c18845995a2404ca90" translate="yes" xml:space="preserve">
          <source>OSGVOLUME_LIBRARY - The osgVolume library OSGVOLUME_LIBRARY_DEBUG - The osgVolume debug library</source>
          <target state="translated">OSGVOLUME_LIBRARY-osgVolume 라이브러리 OSGVOLUME_LIBRARY_DEBUG-osgVolume 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="3a0edc6162c3978b653bf2f171a4654855b9b045" translate="yes" xml:space="preserve">
          <source>OSGWIDGET_FOUND - Was osgWidget found? OSGWIDGET_INCLUDE_DIR - Where to find the headers OSGWIDGET_LIBRARIES - The libraries to link for osgWidget (use this)</source>
          <target state="translated">OSGWIDGET_FOUND-osgWidget을 찾았습니까? OSGWIDGET_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSGWIDGET_LIBRARIES-osgWidget에 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="eba713224ac219f7f83a0a69a40cab68643dccdc" translate="yes" xml:space="preserve">
          <source>OSGWIDGET_LIBRARY - The osgWidget library OSGWIDGET_LIBRARY_DEBUG - The osgWidget debug library</source>
          <target state="translated">OSGWIDGET_LIBRARY-osgWidget 라이브러리 OSGWIDGET_LIBRARY_DEBUG-osgWidget 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="8f5b1d9fdef728c21939ce6df6f80d309a3cbea0" translate="yes" xml:space="preserve">
          <source>OSG_FOUND - Was the Osg found? OSG_INCLUDE_DIR - Where to find the headers OSG_LIBRARIES - The libraries to link against for the OSG (use this)</source>
          <target state="translated">OSG_FOUND-Osg가 발견 되었습니까? OSG_INCLUDE_DIR-헤더를 찾을 수있는 위치 OSG_LIBRARIES-OSG에 대해 링크 할 라이브러리 (사용)</target>
        </trans-unit>
        <trans-unit id="9da85b533534ccc4a909728d17ef3e661128e795" translate="yes" xml:space="preserve">
          <source>OSG_LIBRARY - The OSG library OSG_LIBRARY_DEBUG - The OSG debug library</source>
          <target state="translated">OSG_LIBRARY-OSG 라이브러리 OSG_LIBRARY_DEBUG-OSG 디버그 라이브러리</target>
        </trans-unit>
        <trans-unit id="147b5df69cbff1fb9fcc12402a749b463e399d7b" translate="yes" xml:space="preserve">
          <source>OSX_ARCHITECTURES</source>
          <target state="translated">OSX_ARCHITECTURES</target>
        </trans-unit>
        <trans-unit id="4ca90eccf010ad00a92d6e2729e25f1bfb9416ca" translate="yes" xml:space="preserve">
          <source>OSX_ARCHITECTURES_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">OSX_ARCHITECTURES_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="148b41c6adcab0e02abfb7ada86d61b54bc3a6c3" translate="yes" xml:space="preserve">
          <source>OSX_ARCHITECTURES_CONFIG</source>
          <target state="translated">OSX_ARCHITECTURES_CONFIG</target>
        </trans-unit>
        <trans-unit id="c207e86c0d9a9db23073b5ea413ad94770b3d9df" translate="yes" xml:space="preserve">
          <source>OUTPUT Variables</source>
          <target state="translated">출력 변수</target>
        </trans-unit>
        <trans-unit id="526abf6c53197b5839e88b9379104dcf1297460d" translate="yes" xml:space="preserve">
          <source>OUTPUT_NAME</source>
          <target state="translated">OUTPUT_NAME</target>
        </trans-unit>
        <trans-unit id="f704977e03348ee941ccc6f13f8b30e81c3a2a0f" translate="yes" xml:space="preserve">
          <source>OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="fe2be4f2249782214a1ff8e907ad33b3949fb519" translate="yes" xml:space="preserve">
          <source>OUTPUT_NAME_CONFIG</source>
          <target state="translated">OUTPUT_NAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="a20981736356a13ca4dd0ac64fb73e5458f9718a" translate="yes" xml:space="preserve">
          <source>Object Kind &amp;ldquo;cache&amp;rdquo;</source>
          <target state="translated">객체 종류&amp;ldquo;캐시&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="2e7ca2f14251a21e0aaf1cfcf82fc6d978aa9c7b" translate="yes" xml:space="preserve">
          <source>Object Kind &amp;ldquo;cmakeFiles&amp;rdquo;</source>
          <target state="translated">객체 종류&amp;ldquo;cmakeFiles&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="044a14badb05857d3356792b4764131c222ea370" translate="yes" xml:space="preserve">
          <source>Object Kind &amp;ldquo;codemodel&amp;rdquo;</source>
          <target state="translated">객체 종류&amp;ldquo;코드 모델&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="21479870ddaccef90452d07663aa320cb6218e8c" translate="yes" xml:space="preserve">
          <source>Object Kinds</source>
          <target state="translated">객체 종류</target>
        </trans-unit>
        <trans-unit id="a125b2c7d3e1c411fc3abd3fd86312e03b3e4a93" translate="yes" xml:space="preserve">
          <source>Object Libraries</source>
          <target state="translated">객체 라이브러리</target>
        </trans-unit>
        <trans-unit id="45c93e143a8b17bcf7b6baa9b32514eae50f1efa" translate="yes" xml:space="preserve">
          <source>Object libraries (a simple group of object files) are always treated as &lt;code&gt;OBJECTS&lt;/code&gt; targets.</source>
          <target state="translated">객체 라이브러리 (단순한 객체 파일 그룹)는 항상 &lt;code&gt;OBJECTS&lt;/code&gt; 대상으로 취급됩니다 .</target>
        </trans-unit>
        <trans-unit id="9241ca5e1c776e510ea4790856c684d5ebaca6ec" translate="yes" xml:space="preserve">
          <source>Object libraries may not be used as the &lt;code&gt;TARGET&lt;/code&gt; in a use of the &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command(TARGET)&lt;/code&gt;&lt;/a&gt; command signature. However, the list of objects can be used by &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command(OUTPUT)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(GENERATE)&lt;/code&gt;&lt;/a&gt; by using &lt;code&gt;$&amp;lt;TARGET_OBJECTS:objlib&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">개체 라이브러리는 사용되지 않을 수 있습니다 &lt;code&gt;TARGET&lt;/code&gt; 의 용도에 &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command(TARGET)&lt;/code&gt; &lt;/a&gt; 명령에 서명. 그러나 개체의 목록을 사용할 수 있습니다 &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-2-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command(OUTPUT)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt; &lt;code&gt;file(GENERATE)&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;code&gt;$&amp;lt;TARGET_OBJECTS:objlib&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="03155ec7a78d1163dcb3cf311caa3bedaa351f74" translate="yes" xml:space="preserve">
          <source>Obsolete pkg-config module for CMake, use FindPkgConfig instead.</source>
          <target state="translated">CMake에 사용되지 않는 pkg-config 모듈은 대신 FindPkgConfig를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b0e2f32beaa96bf3efcf25709fed2c8763d31cef" translate="yes" xml:space="preserve">
          <source>Obsolete variables</source>
          <target state="translated">사용되지 않는 변수</target>
        </trans-unit>
        <trans-unit id="5ac2eaebd052aa270d01cb9dbd42b769361a11e8" translate="yes" xml:space="preserve">
          <source>Obsolete. Specifies either &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; or &lt;code&gt;&amp;lt;PACKAGENAME&amp;gt;_FOUND&lt;/code&gt; as the result variable. This exists only for compatibility with older versions of CMake and is now ignored. Result variables of both names are always set for compatibility.</source>
          <target state="translated">더 이상 사용되지 않습니다. 결과 변수로 &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;PACKAGENAME&amp;gt;_FOUND&lt;/code&gt; 를 지정합니다 . 이는 이전 버전의 CMake와의 호환성을 위해서만 존재하며 이제 무시됩니다. 두 이름의 결과 변수는 항상 호환성을 위해 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="71f5d52a36de7de8f82a9094facc4721650733c8" translate="yes" xml:space="preserve">
          <source>Obtaining Project Properties</source>
          <target state="translated">프로젝트 속성 얻기</target>
        </trans-unit>
        <trans-unit id="1b12d13facf7352b079a55882c8b7d7c782b3599" translate="yes" xml:space="preserve">
          <source>Of course users may still add this option manually by setting &lt;a href=&quot;../variable/ctest_build_command#variable:CTEST_BUILD_COMMAND&quot; id=&quot;index-0-variable:CTEST_BUILD_COMMAND&quot;&gt;&lt;code&gt;CTEST_BUILD_COMMAND&lt;/code&gt;&lt;/a&gt; or the &lt;code&gt;MAKECOMMAND&lt;/code&gt; cache entry. See the &lt;a href=&quot;../manual/ctest.1#ctest-build-step&quot;&gt;CTest Build Step&lt;/a&gt;&lt;code&gt;MakeCommand&lt;/code&gt; setting documentation for their effects.</source>
          <target state="translated">물론 사용자는 &lt;a href=&quot;../variable/ctest_build_command#variable:CTEST_BUILD_COMMAND&quot; id=&quot;index-0-variable:CTEST_BUILD_COMMAND&quot;&gt; &lt;code&gt;CTEST_BUILD_COMMAND&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;MAKECOMMAND&lt;/code&gt; 캐시 항목 을 설정 하여이 옵션을 수동으로 추가 할 수 있습니다 . 그 효과에 대해서는 &lt;code&gt;MakeCommand&lt;/code&gt; &lt;a href=&quot;../manual/ctest.1#ctest-build-step&quot;&gt;Build Step &lt;/a&gt;MakeCommand 설정 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="14db15e1ad7d4b01cde71b5cacb6e75a17bde43f" translate="yes" xml:space="preserve">
          <source>Old executable location variable.</source>
          <target state="translated">이전 실행 가능 위치 변수</target>
        </trans-unit>
        <trans-unit id="909e8626404002308ea9a010ebf6795b987020a6" translate="yes" xml:space="preserve">
          <source>Old library location variable.</source>
          <target state="translated">오래된 라이브러리 위치 변수.</target>
        </trans-unit>
        <trans-unit id="1f8797297a29bb767a5840802d50d39001d33e10" translate="yes" xml:space="preserve">
          <source>Old per-configuration target file base name. Use &lt;code&gt;OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; instead.</source>
          <target state="translated">이전의 구성 별 대상 파일 기본 이름입니다. 사용 &lt;code&gt;OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="f5ba41545ef577de7f78fca6dba24355e72ad228" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; for VS 2010 and above, library files ending in &lt;code&gt;.targets&lt;/code&gt; will be treated as MSBuild targets files and imported into generated project files. This is not supported by other generators.</source>
          <target state="translated">에 &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기&lt;/a&gt; VS 2010 이상에,로 끝나는 라이브러리 파일 &lt;code&gt;.targets&lt;/code&gt; 은 MSBuild를 목표 파일로 취급되며, 생성 된 프로젝트 파일로 가져옵니다. 다른 생성기에서는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0ead94d8a777326f811ef86fed93b9a01c8e9c0e" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; the selected platform name is provided in the &lt;a href=&quot;cmake_vs_platform_name#variable:CMAKE_VS_PLATFORM_NAME&quot; id=&quot;index-0-variable:CMAKE_VS_PLATFORM_NAME&quot;&gt;&lt;code&gt;CMAKE_VS_PLATFORM_NAME&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">에 &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기&lt;/a&gt; 선택한 플랫폼 이름이 제공됩니다 &lt;a href=&quot;cmake_vs_platform_name#variable:CMAKE_VS_PLATFORM_NAME&quot; id=&quot;index-0-variable:CMAKE_VS_PLATFORM_NAME&quot;&gt; &lt;code&gt;CMAKE_VS_PLATFORM_NAME&lt;/code&gt; 의&lt;/a&gt; 변수입니다.</target>
        </trans-unit>
        <trans-unit id="be4bbf8341f4b8cca066138daf71ce8c4b294c92" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt;, run before any other rules are executed within the target. On other generators, run just before &lt;code&gt;PRE_LINK&lt;/code&gt; commands.</source>
          <target state="translated">에 &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;비주얼 스튜디오 발생기&lt;/a&gt; 다른 규칙이 대상 내에서 실행되기 전에 실행합니다. 다른 생성기에서는 &lt;code&gt;PRE_LINK&lt;/code&gt; 명령 직전에 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="4af3f901c9f0c6791cf4ed7b184621e3566317cd" translate="yes" xml:space="preserve">
          <source>On AIX shared libraries may be named &amp;ldquo;lib&amp;lt;name&amp;gt;.a&amp;rdquo;. This property is set to true on such platforms.</source>
          <target state="translated">AIX에서 공유 라이브러리의 이름은&amp;ldquo;lib &amp;lt;name&amp;gt; .a&amp;rdquo;일 수 있습니다. 이 특성은 해당 플랫폼에서 true로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="9bcafbbe5f835438683d07de1fdb5e4a8b719ae8" translate="yes" xml:space="preserve">
          <source>On DLL platforms: the executable file (e.g. &lt;code&gt;.dll&lt;/code&gt;) of a shared library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-4-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;SHARED&lt;/code&gt; option.</source>
          <target state="translated">DLL 플랫폼 : &lt;code&gt;SHARED&lt;/code&gt; 옵션 과 함께 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-4-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 명령으로 작성된 공유 라이브러리 대상 의 실행 파일 (예 : &lt;code&gt;.dll&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="bd497974175aa0bfe54ccd4308910214baaa99e6" translate="yes" xml:space="preserve">
          <source>On DLL platforms: the import library file (e.g. &lt;code&gt;.lib&lt;/code&gt;) of a shared library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-8-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;SHARED&lt;/code&gt; option. This file is only guaranteed to exist if the library exports at least one unmanaged symbol.</source>
          <target state="translated">DLL 플랫폼 : &lt;code&gt;SHARED&lt;/code&gt; 옵션 과 함께 &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-8-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 명령으로 작성된 공유 라이브러리 대상 의 가져 오기 라이브러리 파일 (예 : &lt;code&gt;.lib&lt;/code&gt; ) . 이 파일은 라이브러리가 관리되지 않는 기호를 하나 이상 내보내는 경우에만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="962f24fc3f89a30da2f16bd5f942940fc5688207" translate="yes" xml:space="preserve">
          <source>On DLL platforms: the import library file (e.g. &lt;code&gt;.lib&lt;/code&gt;) of an executable target created by the &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-4-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; command when its &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; target property is set.</source>
          <target state="translated">DLL 플랫폼 : &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt; &lt;code&gt;ENABLE_EXPORTS&lt;/code&gt; &lt;/a&gt; 대상 속성이 설정 될 때 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-4-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; executable () 명령으로 생성 된 실행 가능 대상 의 가져 오기 라이브러리 파일 (예 : &lt;code&gt;.lib&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="6adfcd254db33aef249ae7572c3525bfa611dea0" translate="yes" xml:space="preserve">
          <source>On Darwin or systems supporting macOS Application Bundles, the &lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">macOS 응용 프로그램 번들을 지원하는 Darwin 또는 시스템에서 &lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt; 변수는 비어 있거나 다음 중 하나로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="456fb48e62178331c1aea7fcfe1e8d12cbdc2d24" translate="yes" xml:space="preserve">
          <source>On Darwin or systems supporting macOS Frameworks, the &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">macOS 프레임 워크를 지원하는 Darwin 또는 시스템에서 &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; 변수는 비어 있거나 다음 중 하나로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="263f8f1950001a9f3f3d8386aae60f3f9d76abc1" translate="yes" xml:space="preserve">
          <source>On OSX FindOpenGL defaults to using the framework version of OpenGL. People will have to change the cache values of OPENGL_glu_LIBRARY and OPENGL_gl_LIBRARY to use OpenGL with X11 on OSX.</source>
          <target state="translated">OSX에서 FindOpenGL은 기본적으로 OpenGL의 프레임 워크 버전을 사용합니다. OSX에서 X11과 함께 OpenGL을 사용하려면 OPENGL_glu_LIBRARY 및 OPENGL_gl_LIBRARY의 캐시 값을 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="b22f48ac057de662733e75a4aa0eafa3941e5c50" translate="yes" xml:space="preserve">
          <source>On OSX, this will prefer the Framework version (if found) over others. People will have to manually change the cache values of SDL_LIBRARY to override this selection or set the CMake environment CMAKE_INCLUDE_PATH to modify the search paths.</source>
          <target state="translated">OSX에서는 다른 버전보다 프레임 워크 버전 (있는 경우)을 선호합니다. 이 선택 사항을 대체하거나 검색 경로를 수정하도록 CMake 환경 CMAKE_INCLUDE_PATH를 설정하려면 SDL_LIBRARY의 캐시 값을 수동으로 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="7e9794abdb6d3812c20fd174806669b1234a0c0e" translate="yes" xml:space="preserve">
          <source>On OSX, this will prefer the Framework version (if found) over others. People will have to manually change the cache values of SDL_LIBRARY to override this selectionor set the CMake environment CMAKE_INCLUDE_PATH to modify the search paths.</source>
          <target state="translated">OSX에서는 다른 버전보다 프레임 워크 버전 (있는 경우)을 선호합니다. 사용자는이 선택을 대체하기 위해 SDL_LIBRARY의 캐시 값을 수동으로 변경하거나 검색 경로를 수정하도록 CMake 환경 CMAKE_INCLUDE_PATH를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="7c018cb9f8d1812d015ca2ecd3832e78d636b2d4" translate="yes" xml:space="preserve">
          <source>On POSIX platforms, iconv might be part of the C library and the cache variables &lt;code&gt;Iconv_INCLUDE_DIR&lt;/code&gt; and &lt;code&gt;Iconv_LIBRARY&lt;/code&gt; might be empty.</source>
          <target state="translated">POSIX 플랫폼에서 iconv는 C 라이브러리의 일부이며 캐시 변수 &lt;code&gt;Iconv_INCLUDE_DIR&lt;/code&gt; 및 &lt;code&gt;Iconv_LIBRARY&lt;/code&gt; 는 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10b84629e3ba83e422b3943c70a385e9457cfeb1" translate="yes" xml:space="preserve">
          <source>On UNIX one can use the &lt;code&gt;DESTDIR&lt;/code&gt; mechanism in order to relocate the whole installation. &lt;code&gt;DESTDIR&lt;/code&gt; means DESTination DIRectory. It is commonly used by makefile users in order to install software at non-default location. It is usually invoked like this:</source>
          <target state="translated">UNIX 에서는 전체 설치를 재배치하기 위해 &lt;code&gt;DESTDIR&lt;/code&gt; 메커니즘을 사용할 수 있습니다 . &lt;code&gt;DESTDIR&lt;/code&gt; 은 DESTination DIRectory를 의미합니다. 기본이 아닌 위치에 소프트웨어를 설치하기 위해 makefile 사용자가 일반적으로 사용합니다. 일반적으로 다음과 같이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c0aff98d2e80946e9d8a77ed604f5befeb1f9efd" translate="yes" xml:space="preserve">
          <source>On UNIX one can use the &lt;code&gt;DESTDIR&lt;/code&gt; mechanism in order to relocate the whole installation. See &lt;a href=&quot;../envvar/destdir#envvar:DESTDIR&quot; id=&quot;index-0-envvar:DESTDIR&quot;&gt;&lt;code&gt;DESTDIR&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">UNIX 에서는 전체 설치를 재배치하기 위해 &lt;code&gt;DESTDIR&lt;/code&gt; 메커니즘을 사용할 수 있습니다 . 자세한 정보는 &lt;a href=&quot;../envvar/destdir#envvar:DESTDIR&quot; id=&quot;index-0-envvar:DESTDIR&quot;&gt; &lt;code&gt;DESTDIR&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d0b8695db9f347bb169ca5e8accfa929a018d748" translate="yes" xml:space="preserve">
          <source>On UNIX platforms the user package registry is stored in the user home directory under &lt;code&gt;~/.cmake/packages&lt;/code&gt;. A &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; may appear under the directory:</source>
          <target state="translated">UNIX 플랫폼에서 사용자 패키지 레지스트리는 &lt;code&gt;~/.cmake/packages&lt;/code&gt; 아래의 사용자 홈 디렉토리에 저장 됩니다 . &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 디렉토리 아래에 나타날 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="fcc8c20d86383e015de97227ede41d97f5b564b7" translate="yes" xml:space="preserve">
          <source>On Unix, this module allows to search for ODBC library provided by unixODBC or iODBC implementations of ODBC API. This module reads hint about location of the config program:</source>
          <target state="translated">Unix에서이 모듈을 사용하면 unixODBC 또는 iODBC ODBC API 구현에서 제공하는 ODBC 라이브러리를 검색 할 수 있습니다. 이 모듈은 구성 프로그램의 위치에 대한 힌트를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="4c76833b0f9beb919a9f174b41e8217cc19d0fdd" translate="yes" xml:space="preserve">
          <source>On Visual Studio and Borland compilers Boost headers request automatic linking to corresponding libraries. This requires matching libraries to be linked explicitly or available in the link library search path. In this case setting &lt;code&gt;Boost_USE_STATIC_LIBS&lt;/code&gt; to &lt;code&gt;OFF&lt;/code&gt; may not achieve dynamic linking. Boost automatic linking typically requests static libraries with a few exceptions (such as &lt;code&gt;Boost.Python&lt;/code&gt;). Use:</source>
          <target state="translated">Visual Studio 및 Borland 컴파일러에서 Boost 헤더는 해당 라이브러리에 대한 자동 링크를 요청합니다. 이를 위해서는 일치하는 라이브러리가 명시 적으로 링크되거나 링크 라이브러리 검색 경로에서 사용 가능해야합니다. 이 경우 &lt;code&gt;Boost_USE_STATIC_LIBS&lt;/code&gt; 를 &lt;code&gt;OFF&lt;/code&gt; 로 설정 하면 동적 연결이 이루어지지 않을 수 있습니다. Boost 자동 링크는 일반적으로 &lt;code&gt;Boost.Python&lt;/code&gt; 과 같은 몇 가지 예외를 제외하고 정적 라이브러리를 요청합니다 . 사용하다:</target>
        </trans-unit>
        <trans-unit id="c8f1098537870f37227124500f81a97499c8cde2" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. the &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">Windows에서 &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; 변수는 레지스트리와 환경 변수 사이의 우선 순위를 결정합니다. &lt;code&gt;Python2_FIND_REGISTRY&lt;/code&gt; 의 변수는 다음 중 하나를 비우거나 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="65ffdec9374b39fd1874560699a4297da759dcaf" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. The &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">Windows에서 &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; 변수는 레지스트리와 환경 변수 사이의 우선 순위를 결정합니다. &lt;code&gt;Python3_FIND_REGISTRY&lt;/code&gt; 의 변수는 다음 중 하나를 비우거나 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ef0ccdeac97a0ce24eefc233a43eab9ecb96fbbf" translate="yes" xml:space="preserve">
          <source>On Windows the &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; variable determine the order of preference between registry and environment variables. the &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; variable can be set to empty or one of the following:</source>
          <target state="translated">Windows에서 &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; 변수는 레지스트리와 환경 변수 사이의 우선 순위를 결정합니다. &lt;code&gt;Python_FIND_REGISTRY&lt;/code&gt; 의 변수는 다음 중 하나를 비우거나 설정할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="07555c5068f5b2637dbffb1621d2bd0f2c5c8987" translate="yes" xml:space="preserve">
          <source>On Windows the system package registry is stored in the Windows registry under a key in &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt;. A &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; may appear under registry key:</source>
          <target state="translated">Windows에서 시스템 패키지 레지스트리는 &lt;code&gt;HKEY_LOCAL_MACHINE&lt;/code&gt; 의 키로 Windows 레지스트리에 저장됩니다 . &lt;code&gt;&amp;lt;PackageName&amp;gt;&lt;/code&gt; 레지스트리 키 아래에 나타날 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="19d71df50480638cf35b6952af6c9566865b26f9" translate="yes" xml:space="preserve">
          <source>On Windows the user package registry is stored in the Windows registry under a key in &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt;.</source>
          <target state="translated">Windows에서 사용자 패키지 레지스트리는 &lt;code&gt;HKEY_CURRENT_USER&lt;/code&gt; 의 키로 Windows 레지스트리에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="21ed806a3ecbdd9d0ebfd513e2fa21fb190220c4" translate="yes" xml:space="preserve">
          <source>On Windows, Ice 3.7.0 and later provide libraries via the NuGet package manager. Appropriate NuGet packages will be searched for using &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt;, or alternatively &lt;code&gt;Ice_HOME&lt;/code&gt; may be set to the location of a specific NuGet package to restrict the search.</source>
          <target state="translated">Windows에서 Ice 3.7.0 이상은 NuGet 패키지 관리자를 통해 라이브러리를 제공합니다. &lt;code&gt;CMAKE_PREFIX_PATH&lt;/code&gt; 를 사용하여 적절한 NuGet 패키지를 검색 하거나 , 검색을 제한하기 위해 &lt;code&gt;Ice_HOME&lt;/code&gt; 을 특정 NuGet 패키지의 위치로 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0578feda7af189368b34c8d77777918c69c673c2" translate="yes" xml:space="preserve">
          <source>On Windows, the encoding that is used to decode output from the process. Ignored on other platforms. Valid encoding names are:</source>
          <target state="translated">Windows에서는 프로세스의 출력을 디코딩하는 데 사용되는 인코딩입니다. 다른 플랫폼에서는 무시되었습니다. 유효한 인코딩 이름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8fc1bd4890ad2bd126ae3ed53507df06f0ccca82" translate="yes" xml:space="preserve">
          <source>On Windows, this module does not search for iODBC. On Unix, there is no way to prefer unixODBC over iODBC, or vice versa, other than providing the config program location using the &lt;code&gt;ODBC_CONFIG&lt;/code&gt;. This module does not allow to search for a specific ODBC driver.</source>
          <target state="translated">Windows에서이 모듈은 iODBC를 검색하지 않습니다. Unix에서는 &lt;code&gt;ODBC_CONFIG&lt;/code&gt; 를 사용하여 구성 프로그램 위치를 제공하는 것 외에 iODBC보다 unixODBC를 선호하거나 그 반대의 방법을 선택할 수 없습니다 . 이 모듈은 특정 ODBC 드라이버를 검색 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fafdffa51a93a1f9824f7dd32ec37d90e1b21528" translate="yes" xml:space="preserve">
          <source>On Windows, when building with Visual Studio, this module assumes the ODBC library is provided by the available Windows SDK.</source>
          <target state="translated">Windows에서 Visual Studio로 빌드 할 때이 모듈은 사용 가능한 Windows SDK가 ODBC 라이브러리를 제공한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="782fd67e966901b0456723dd7caff50cb6c92f52" translate="yes" xml:space="preserve">
          <source>On any given system, the following combinations of DCMTK versions could be considered:</source>
          <target state="translated">주어진 시스템에서 다음과 같은 DCMTK 버전 조합을 고려할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29ea7f7089702b5e4abece7f02e25e4412c5272b" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../variable/cmake_find_appbundle#variable:CMAKE_FIND_APPBUNDLE&quot; id=&quot;index-0-variable:CMAKE_FIND_APPBUNDLE&quot;&gt;&lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt;&lt;/a&gt; variables determine the order of preference between Apple-style and unix-style package components.</source>
          <target state="translated">macOS에서 &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../variable/cmake_find_appbundle#variable:CMAKE_FIND_APPBUNDLE&quot; id=&quot;index-0-variable:CMAKE_FIND_APPBUNDLE&quot;&gt; &lt;code&gt;CMAKE_FIND_APPBUNDLE&lt;/code&gt; &lt;/a&gt; 변수는 Apple 스타일 및 unix 스타일 패키지 구성 요소 사이의 우선 순위를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="11d6d66bdd1aff922023b134b45ff27e238996ce" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can be set to empty or take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">macOS에서 &lt;code&gt;Python2_FIND_FRAMEWORK&lt;/code&gt; 변수는 Apple 스타일과 unix 스타일 패키지 구성 요소 사이의 우선 순위를 결정합니다. 이 변수는 비어 있거나 &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt; 변수 와 동일한 값을 갖도록 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="804fdc3c2c5f91faf6ab2175a04ad4f48a004888" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can be set to empty or take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">macOS에서 &lt;code&gt;Python3_FIND_FRAMEWORK&lt;/code&gt; 변수는 Apple 스타일과 unix 스타일 패키지 구성 요소 사이의 우선 순위를 결정합니다. 이 변수는 비어 있거나 &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt; 변수 와 동일한 값을 갖도록 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6542dc6fd7fe937ce1a191991c3a9b760484a4d" translate="yes" xml:space="preserve">
          <source>On macOS the &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; variable determine the order of preference between Apple-style and unix-style package components. This variable can be set to empty or take same values as &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt;&lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="translated">macOS에서 &lt;code&gt;Python_FIND_FRAMEWORK&lt;/code&gt; 변수는 Apple 스타일 및 unix 스타일 패키지 구성 요소 사이의 우선 순위를 결정합니다. 이 변수는 비어 있거나 &lt;a href=&quot;../variable/cmake_find_framework#variable:CMAKE_FIND_FRAMEWORK&quot; id=&quot;index-0-variable:CMAKE_FIND_FRAMEWORK&quot;&gt; &lt;code&gt;CMAKE_FIND_FRAMEWORK&lt;/code&gt; &lt;/a&gt; 변수 와 동일한 값을 갖도록 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c84e85ff2f95eb75f16d54b62f8423318b0bf987" translate="yes" xml:space="preserve">
          <source>On macOS, installers that download components on-the-fly can only be built and installed on system using macOS 10.5 or later.</source>
          <target state="translated">macOS에서 구성 요소를 즉시 다운로드하는 설치 프로그램은 macOS 10.5 이상을 사용하는 시스템에서만 빌드하고 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18323629cb17be5a9936d8d64046209ce7d91d19" translate="yes" xml:space="preserve">
          <source>On non-DLL platforms: the shared library file (e.g. &lt;code&gt;.so&lt;/code&gt; or &lt;code&gt;.dylib&lt;/code&gt;) of a shared library target created by the &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-6-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; command with the &lt;code&gt;SHARED&lt;/code&gt; option.</source>
          <target state="translated">비 DLL 플랫폼의 경우 : &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-6-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 명령으로 &lt;code&gt;SHARED&lt;/code&gt; 옵션 을 사용하여 공유 라이브러리 대상 의 공유 라이브러리 파일 (예 : &lt;code&gt;.so&lt;/code&gt; 또는 &lt;code&gt;.dylib&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="34ffa0aee967dbf4ba5ed6c723151d2165110b30" translate="yes" xml:space="preserve">
          <source>On platforms that support runtime paths (&lt;code&gt;RPATH&lt;/code&gt;) with the &lt;code&gt;$ORIGIN&lt;/code&gt; token, setting this property to &lt;code&gt;TRUE&lt;/code&gt; enables relative paths in the build &lt;code&gt;RPATH&lt;/code&gt; for executables and shared libraries that point to shared libraries in the same build tree.</source>
          <target state="translated">&lt;code&gt;$ORIGIN&lt;/code&gt; 토큰 과 함께 런타임 경로 ( &lt;code&gt;RPATH&lt;/code&gt; ) 를 지원하는 플랫폼 에서이 특성을 &lt;code&gt;TRUE&lt;/code&gt; 로 설정 하면 동일한 빌드 트리에서 공유 라이브러리를 가리키는 실행 파일 및 공유 라이브러리 에 대한 빌드 &lt;code&gt;RPATH&lt;/code&gt; 의 상대 경로를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f6ec22a5bdec60726cea624f9dd7b3f63ddd669d" translate="yes" xml:space="preserve">
          <source>On some platforms a versioned shared library has a symbolic link such as:</source>
          <target state="translated">일부 플랫폼에서는 버전이 지정된 공유 라이브러리에 다음과 같은 기호 링크가 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfcdb80a0b7aff29eddc44d906c06c372ac4e4bd" translate="yes" xml:space="preserve">
          <source>On some platforms, such as Linux with GNU libc, the gettext functions are present in the C standard library and libintl is not required. &lt;code&gt;Intl_LIBRARIES&lt;/code&gt; will be empty in this case.</source>
          <target state="translated">GNU libc가 설치된 Linux와 같은 일부 플랫폼에서는 gettext 함수가 C 표준 라이브러리에 있으며 libintl이 필요하지 않습니다. 이 경우 &lt;code&gt;Intl_LIBRARIES&lt;/code&gt; 는 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0ccaefb4745f4a9dd885d662df6770c1e08989b" translate="yes" xml:space="preserve">
          <source>On systems supporting macOS &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt;&lt;code&gt;BUNDLE&lt;/code&gt;&lt;/a&gt;, the following directories are searched for Frameworks or Application Bundles containing a configuration file:</source>
          <target state="translated">macOS &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_tgt/bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt; &lt;code&gt;BUNDLE&lt;/code&gt; 을&lt;/a&gt; 지원하는 시스템 에서 다음 디렉토리는 구성 파일이 포함 된 프레임 워크 또는 애플리케이션 번들을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="511162c2941323b14b7c7c7ce3a52591d1f47653" translate="yes" xml:space="preserve">
          <source>On systems that have the uname command, this variable is set to the output of &lt;code&gt;uname -s&lt;/code&gt;. &lt;code&gt;Linux&lt;/code&gt;, &lt;code&gt;Windows&lt;/code&gt;, and &lt;code&gt;Darwin&lt;/code&gt; for macOS are the values found on the big three operating systems.</source>
          <target state="translated">uname 명령이있는 시스템에서이 변수는 &lt;code&gt;uname -s&lt;/code&gt; 의 출력으로 설정됩니다 . macOS &lt;code&gt;Linux&lt;/code&gt; , &lt;code&gt;Windows&lt;/code&gt; 및 &lt;code&gt;Darwin&lt;/code&gt; 은 큰 세 가지 운영 체제에서 볼 수있는 값입니다.</target>
        </trans-unit>
        <trans-unit id="79c5c2771a52aadc26c945461550801bc6c8a1a3" translate="yes" xml:space="preserve">
          <source>On systems that support &lt;code&gt;uname&lt;/code&gt;, this variable is set to the output of &lt;code&gt;uname -p&lt;/code&gt;. On Windows it is set to the value of the environment variable &lt;code&gt;PROCESSOR_ARCHITECTURE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;uname&lt;/code&gt; 을 지원하는 시스템 에서이 변수는 &lt;code&gt;uname -p&lt;/code&gt; 출력으로 설정됩니다 . Windows에서는 환경 변수 &lt;code&gt;PROCESSOR_ARCHITECTURE&lt;/code&gt; 의 값으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="9078c3a414d763947d4df1d4d04f43dc90a8b407" translate="yes" xml:space="preserve">
          <source>Once an imported target has been made global, it cannot be changed back to non-global. Therefore, if a project sets this property, it may only provide a value of True. CMake will issue an error if the project tries to set the property to a non-True value, even if the value was already False.</source>
          <target state="translated">가져온 대상을 전역으로 만들면 다시 전역이 아닌 대상으로 변경할 수 없습니다. 따라서 프로젝트가이 속성을 설정하면 True 값만 제공 할 수 있습니다. 값이 이미 False 인 경우에도 프로젝트가 속성을 True가 아닌 값으로 설정하려고하면 CMake에서 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="657cd42c50adfb192ddc200dc7c7c5a637cf7612" translate="yes" xml:space="preserve">
          <source>Once done this will define</source>
          <target state="translated">완료되면 이것이 정의됩니다</target>
        </trans-unit>
        <trans-unit id="8734757975a256cda47784204481a61ff1279b9a" translate="yes" xml:space="preserve">
          <source>Once done this will define:</source>
          <target state="translated">완료되면 다음을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="618ae98caa9b6895c393024838f17e4d62e9934a" translate="yes" xml:space="preserve">
          <source>Once found, a package configuration file is immediately loaded. It, together with a package version file, contains all the information the project needs to use the package.</source>
          <target state="translated">패키지 구성 파일이 발견되면 즉시로드됩니다. 패키지 버전 파일과 함께 프로젝트가 패키지를 사용하는 데 필요한 모든 정보를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="711d045273559e03221f0c3af28d85f876c7d9bb" translate="yes" xml:space="preserve">
          <source>Once one of the calls succeeds the result variable will be set and stored in the cache so that no call will search again.</source>
          <target state="translated">호출 중 하나가 성공하면 결과 변수가 설정되어 캐시에 저장되므로 호출이 다시 검색되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="26abd690a72eead9acb2ffa1e81ad4ef7bc14c4d" translate="yes" xml:space="preserve">
          <source>Once such an include statement is found in a file, CMake searches for the &lt;code&gt;uic&lt;/code&gt; input file &lt;code&gt;&amp;lt;ui_base&amp;gt;.ui&lt;/code&gt;</source>
          <target state="translated">그런 후, 문이 파일에 대한 상기 검색 CMake 포함 &lt;code&gt;uic&lt;/code&gt; 입력 파일 &lt;code&gt;&amp;lt;ui_base&amp;gt;.ui&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e5315ffb865814a4af6ea5a7d77f27011ed33484" translate="yes" xml:space="preserve">
          <source>Once the generator has initialized a particular value for this variable, changing the value has undefined behavior.</source>
          <target state="translated">생성기가이 변수에 대한 특정 값을 초기화 한 후 값을 변경하면 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="28af5d67b0f833fe47dfb08a73ca49f9f0eda6aa" translate="yes" xml:space="preserve">
          <source>Once the policy has taken effect at the top of a project for a given language, that choice must be used throughout the tree for that language. In projects that have nested projects in subdirectories, be sure to convert everything together.</source>
          <target state="translated">특정 언어에 대해 프로젝트 상단에서 정책이 적용되면 해당 언어의 트리 전체에서 해당 선택을 사용해야합니다. 하위 디렉토리에 중첩 된 프로젝트가있는 프로젝트에서는 모든 것을 함께 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="a36257d3cdfa3c9a2d026d7c3014389a262f06b4" translate="yes" xml:space="preserve">
          <source>Once the policy has taken effect at the top of a project, that choice must be used throughout the tree. In projects that have nested projects in subdirectories, be sure to convert everything together.</source>
          <target state="translated">정책이 프로젝트 상단에서 적용되면 트리 전체에서 해당 선택을 사용해야합니다. 하위 디렉토리에 중첩 된 프로젝트가있는 프로젝트에서는 모든 것을 함께 변환해야합니다.</target>
        </trans-unit>
        <trans-unit id="e7da51b90dcbb51fc5ffb1794882bfeab175219f" translate="yes" xml:space="preserve">
          <source>Once this variable is set, it is the responsibility of the exported &lt;code&gt;&amp;lt;pkg&amp;gt;Config.cmake&lt;/code&gt; files to provide the same result variables as the &lt;code&gt;Find&amp;lt;pkg&amp;gt;.cmake&lt;/code&gt; modules so that dependent projects can use them interchangeably.</source>
          <target state="translated">이 변수가 설정되면 내 보낸 &lt;code&gt;&amp;lt;pkg&amp;gt;Config.cmake&lt;/code&gt; 파일이 &lt;code&gt;Find&amp;lt;pkg&amp;gt;.cmake&lt;/code&gt; 모듈 과 동일한 결과 변수를 제공하여 종속 프로젝트가 상호 교환 적으로 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="3fdaaf86d1dcce0f6072260015662fb5e88d5d29" translate="yes" xml:space="preserve">
          <source>One can specify different grouping for different CPack generator by using a CPACK_PROJECT_CONFIG_FILE.</source>
          <target state="translated">CPACK_PROJECT_CONFIG_FILE을 사용하여 다른 CPack 생성기에 다른 그룹을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84630b8d50d85655474a0f54df7ccd0bd15cb054" translate="yes" xml:space="preserve">
          <source>One common use case for this module was to skip CMake&amp;rsquo;s checks for a working compiler when using a cross-compiler that cannot link binaries without special flags or custom linker scripts. This case is now supported by setting the &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-0-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt;&lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt;&lt;/a&gt; variable in the toolchain file instead.</source>
          <target state="translated">이 모듈의 일반적인 사용 사례는 특수 플래그 나 사용자 지정 링커 스크립트없이 바이너리를 연결할 수없는 크로스 컴파일러를 사용할 때 작동하는 컴파일러에 대한 CMake의 검사를 건너 뛰는 것입니다. 이 사례는 이제 툴체인 파일에서 &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-0-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt; &lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt; &lt;/a&gt; 변수를 설정하여 지원 됩니다.</target>
        </trans-unit>
        <trans-unit id="9134f5d295f620709575bab3649d05fe9cedc578" translate="yes" xml:space="preserve">
          <source>One if IA64 processor emulating x86</source>
          <target state="translated">x86을 에뮬레이트하는 IA64 프로세서 인 경우 1 개</target>
        </trans-unit>
        <trans-unit id="a28f14a1bdd81f2f490fa98d5dbbd6cd450f6ba1" translate="yes" xml:space="preserve">
          <source>One if processor has floating point unit</source>
          <target state="translated">프로세서에 부동 소수점 장치가있는 경우 1</target>
        </trans-unit>
        <trans-unit id="4853cef7404f5783d1fa098541a4d04116bde4b6" translate="yes" xml:space="preserve">
          <source>One if processor has serial number</source>
          <target state="translated">프로세서에 일련 번호가있는 경우 1</target>
        </trans-unit>
        <trans-unit id="e6a30b6b5d6c6f35bbebf2ccbb753fd9cf12dc80" translate="yes" xml:space="preserve">
          <source>One if processor is 64Bit</source>
          <target state="translated">프로세서가 64 비트 인 경우 1</target>
        </trans-unit>
        <trans-unit id="7cff716eb6da8a118ce580c3df5157435a8a16e6" translate="yes" xml:space="preserve">
          <source>One if processor supports 3DNow instructions</source>
          <target state="translated">프로세서가 3DNow 명령어를 지원하는 경우 하나</target>
        </trans-unit>
        <trans-unit id="64d7bfd1ae0d182ebfa6779acfee00a597029ba8" translate="yes" xml:space="preserve">
          <source>One if processor supports 3DNow+ instructions</source>
          <target state="translated">프로세서가 3DNow + 명령어를 지원하는 경우 하나</target>
        </trans-unit>
        <trans-unit id="f5255e1fe2288a45b6b2a30126fc4739d86541e1" translate="yes" xml:space="preserve">
          <source>One if processor supports Ext. MMX instructions</source>
          <target state="translated">프로세서가 Ext를 지원하는 경우 하나. MMX 명령어</target>
        </trans-unit>
        <trans-unit id="f1b49ed457fd0b9fb56443dfdd37cfea3ccbed85" translate="yes" xml:space="preserve">
          <source>One if processor supports MMX instructions</source>
          <target state="translated">프로세서가 MMX 명령어를 지원하는 경우 하나</target>
        </trans-unit>
        <trans-unit id="0553dcf89a724a5dcd334bc8c7defb31d6046b34" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE FP instructions</source>
          <target state="translated">프로세서가 SSE FP 명령어를 지원하는 경우 하나</target>
        </trans-unit>
        <trans-unit id="2a0785534cdedfc4855f7a24528e91b6e8fda910" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE MMX instructions</source>
          <target state="translated">프로세서가 SSE MMX 명령어를 지원하는 경우 하나</target>
        </trans-unit>
        <trans-unit id="37f6e1767299c24afe9e799ae2a2c15eaf8dd158" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE instructions</source>
          <target state="translated">프로세서가 SSE 명령어를 지원하는 경우 하나</target>
        </trans-unit>
        <trans-unit id="6328486f6ed0227b1bca2e62fe5695bc3e33c8f5" translate="yes" xml:space="preserve">
          <source>One if processor supports SSE2 instructions</source>
          <target state="translated">프로세서가 SSE2 명령어를 지원하는 경우 하나</target>
        </trans-unit>
        <trans-unit id="fe580c029d8516226eb9cc2c50de37e5c9d04d4b" translate="yes" xml:space="preserve">
          <source>One may set a &lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt;&lt;em&gt;environment variable&lt;/em&gt; to an absolute path to tell CMake to look for Windows 10 SDKs in a custom location. The specified directory is expected to contain &lt;code&gt;Include/10.0.*&lt;/code&gt; directories.</source>
          <target state="translated">&lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt; &lt;em&gt;환경 변수&lt;/em&gt; 를 CMake가 사용자 정의 위치에서 Windows 10 SDK를 찾도록 지시하는 절대 경로로 설정할 수 있습니다. 지정된 디렉토리에는 &lt;code&gt;Include/10.0.*&lt;/code&gt; 디렉토리가 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="1754f3bf27d6535ae9ecf31c5a86df7d1c33dd4b" translate="yes" xml:space="preserve">
          <source>One may set a &lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt;&lt;em&gt;environment variable&lt;/em&gt; to an absolute path to tell CMake to look for Windows 10 SDKs in a custom location. The specified directory is expected to contain &lt;code&gt;Redist/ucrt/DLLs/*&lt;/code&gt; directories.</source>
          <target state="translated">&lt;code&gt;CMAKE_WINDOWS_KITS_10_DIR&lt;/code&gt; &lt;em&gt;환경 변수&lt;/em&gt; 를 CMake가 사용자 정의 위치에서 Windows 10 SDK를 찾도록 지시하는 절대 경로로 설정할 수 있습니다. 지정된 디렉토리에는 &lt;code&gt;Redist/ucrt/DLLs/*&lt;/code&gt; 디렉토리가 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="2a28f4f724140f6d53c903b814b031ada7852a32" translate="yes" xml:space="preserve">
          <source>One may then use the &lt;a href=&quot;include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt; command to specify the output directory as an include directory:</source>
          <target state="translated">그런 다음 &lt;a href=&quot;include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt; &lt;code&gt;include_directories()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 출력 디렉토리를 include 디렉토리로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7cd7722fc8c26bb3c58b1020dd5359eb29f7f48" translate="yes" xml:space="preserve">
          <source>One or more groups of properties may be specified in a single call to the &lt;code&gt;TARGETS&lt;/code&gt; form of this command. A target may be installed more than once to different locations. Consider hypothetical targets &lt;code&gt;myExe&lt;/code&gt;, &lt;code&gt;mySharedLib&lt;/code&gt;, and &lt;code&gt;myStaticLib&lt;/code&gt;. The code:</source>
          <target state="translated">이 명령 의 &lt;code&gt;TARGETS&lt;/code&gt; 양식 에 대한 단일 호출로 하나 이상의 특성 그룹을 지정할 수 있습니다 . 대상은 다른 위치에 두 번 이상 설치 될 수 있습니다. 가상의 목표 &lt;code&gt;myExe&lt;/code&gt; , &lt;code&gt;mySharedLib&lt;/code&gt; 및 &lt;code&gt;myStaticLib&lt;/code&gt; 를 고려하십시오 . 코드:</target>
        </trans-unit>
        <trans-unit id="c162754e9b9304c18c41df671acdced1d072de4e" translate="yes" xml:space="preserve">
          <source>One possible way to generate debug messages is to add a custom target,</source>
          <target state="translated">디버그 메시지를 생성하는 한 가지 가능한 방법은 맞춤 타겟을 추가하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a62d99f6659901dda0f92081a62dbc33af23c2db" translate="yes" xml:space="preserve">
          <source>One thing to note about this is that the &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; and similar properties should only contain information about the target itself, and not any of its dependencies. Instead, those dependencies should also be targets, and CMake should be told that they are dependencies of this target. CMake will then combine all the necessary information automatically.</source>
          <target state="translated">이것에 대해 한 가지주의 할 점은 &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; 및 이와 유사한 특성에는 종속물이 아닌 대상 자체에 대한 정보 만 포함되어야합니다. 대신 이러한 종속성도 대상이어야하며 CMake는이 대상의 종속성임을 알려야합니다. 그런 다음 CMake는 필요한 모든 정보를 자동으로 결합합니다.</target>
        </trans-unit>
        <trans-unit id="b4290c57fecb2e046b57519cd6d4a6649e47e918" translate="yes" xml:space="preserve">
          <source>Online Documentation and Community Resources</source>
          <target state="translated">온라인 설명서 및 커뮤니티 리소스</target>
        </trans-unit>
        <trans-unit id="85b51ae1b3fa6a9581c72ddc3a83573774a9b3ae" translate="yes" xml:space="preserve">
          <source>Only interpret &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; arguments as variables or keywords when unquoted.</source>
          <target state="translated">인용 부호가 &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt; 에만 if () 인수를 변수 또는 키워드로 해석 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c35412ac6bf128c64b3019fb32454c9338189bad" translate="yes" xml:space="preserve">
          <source>Only load the cache. Do not actually run configure and generate steps.</source>
          <target state="translated">캐시 만로드하십시오. 실제로 구성을 실행하고 단계를 생성하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="7b51bbde19a57cb73dca334340df8eebb1203656" translate="yes" xml:space="preserve">
          <source>Only most principal support files are listed. In case some advanced features of &lt;code&gt;SWIG&lt;/code&gt; are used (for example &lt;code&gt;%template&lt;/code&gt;), associated support files may not be listed. Prefer to use the &lt;code&gt;SWIG_SUPPORT_FILES_DIRECTORY&lt;/code&gt; property to handle support files.</source>
          <target state="translated">대부분의 주요 지원 파일 만 나열됩니다. &lt;code&gt;SWIG&lt;/code&gt; 의 일부 고급 기능 이 사용되는 경우 (예 : &lt;code&gt;%template&lt;/code&gt; ) 관련 지원 파일이 나열되지 않을 수 있습니다. 지원 파일을 처리 하려면 &lt;code&gt;SWIG_SUPPORT_FILES_DIRECTORY&lt;/code&gt; 특성 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="83fc6f5feb6148cef23ea9bc32762ced8931a7eb" translate="yes" xml:space="preserve">
          <source>Only the versions are provided. No check is made over the existence of the installation referenced in the registry,</source>
          <target state="translated">버전 만 제공됩니다. 레지스트리에서 참조 된 설치가 있는지 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fa83c90a72c7028ac74e5d0985db22a7dd12460a" translate="yes" xml:space="preserve">
          <source>Only try to find application bundles.</source>
          <target state="translated">응용 프로그램 번들 만 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="7ac85c65432e3aed056fcfba743266ff50858e9d" translate="yes" xml:space="preserve">
          <source>Only try to find frameworks.</source>
          <target state="translated">프레임 워크 만 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="9f0e1655342fdb720a7215b3efba1bd86bca79db" translate="yes" xml:space="preserve">
          <source>Only your build tool of choice will still print verbose output when you start to actually build your project.</source>
          <target state="translated">실제로 빌드를 시작하면 선택한 빌드 도구 만 자세한 출력을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="21244ee6e08d40cd736ba3cf4622bf2a0828091f" translate="yes" xml:space="preserve">
          <source>Open a Project</source>
          <target state="translated">프로젝트 열기</target>
        </trans-unit>
        <trans-unit id="c1e49f69d5b3cb75c158fe0db6564f08ce1de5bb" translate="yes" xml:space="preserve">
          <source>Open the generated project in the associated application. This is only supported by some generators.</source>
          <target state="translated">연관된 애플리케이션에서 생성 된 프로젝트를여십시오. 일부 생성기에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="9c80292e452e29c791ce56e213c9f7a95bc1f60d" translate="yes" xml:space="preserve">
          <source>OpenACC compiler flags for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;, separated by spaces.</source>
          <target state="translated">공백으로 구분 된 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 에 대한 OpenACC 컴파일러 플래그 .</target>
        </trans-unit>
        <trans-unit id="612a1c808f295e75fcc12495ab48a5369db657a5" translate="yes" xml:space="preserve">
          <source>OpenACC version implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 컴파일러로 구현 된 OpenACC 버전 .</target>
        </trans-unit>
        <trans-unit id="988a0621a69f95c126d429edd6ad72b8b9753d30" translate="yes" xml:space="preserve">
          <source>OpenBLAS</source>
          <target state="translated">OpenBLAS</target>
        </trans-unit>
        <trans-unit id="43012a2c835ddb49fa9f96b8aa86d0f24cba199e" translate="yes" xml:space="preserve">
          <source>OpenMP compiler flags for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt;, separated by spaces.</source>
          <target state="translated">공백으로 구분 된 &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 에 대한 OpenMP 컴파일러 플래그 .</target>
        </trans-unit>
        <trans-unit id="870df999b9eafdf1cb70c3456044c711d0985a0d" translate="yes" xml:space="preserve">
          <source>OpenMP version implemented by the &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; compiler.</source>
          <target state="translated">&lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; 컴파일러로 구현 된 OpenMP 버전 .</target>
        </trans-unit>
        <trans-unit id="279e71df826b0cc6897af1190be2e850fec6ab50" translate="yes" xml:space="preserve">
          <source>OpenThreads is a C++ based threading library. Its largest userbase seems to OpenSceneGraph so you might notice I accept OSGDIR as an environment path. I consider this part of the Findosg* suite used to find OpenSceneGraph components. Each component is separate and you must opt in to each module.</source>
          <target state="translated">OpenThreads는 C ++ 기반 스레딩 라이브러리입니다. 가장 큰 사용자 기반은 OpenSceneGraph로 보이므로 OSGDIR을 환경 경로로 받아들입니다. OpenSceneGraph 구성 요소를 찾는 데 사용 된 Findosg * 제품군의이 부분을 고려합니다. 각 구성 요소는 별개이므로 각 모듈을 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="179d7b83d0b51949e8160d69a96aa0a1d414e4cb" translate="yes" xml:space="preserve">
          <source>Operator to read cache variables.</source>
          <target state="translated">캐시 변수를 읽는 연산자</target>
        </trans-unit>
        <trans-unit id="8e87e28cca5898d69daa86d82c7277bdfd036015" translate="yes" xml:space="preserve">
          <source>Operator to read environment variables.</source>
          <target state="translated">환경 변수를 읽는 연산자</target>
        </trans-unit>
        <trans-unit id="3f165b619d50dcf84366c965769bcbd58ea9f279" translate="yes" xml:space="preserve">
          <source>Optional COMPONENTS</source>
          <target state="translated">선택적 구성 요소</target>
        </trans-unit>
        <trans-unit id="db0c2ad3a6ee5e06ca66bbc7567b741a4597885a" translate="yes" xml:space="preserve">
          <source>Optional Compile Features</source>
          <target state="translated">선택적 컴파일 기능</target>
        </trans-unit>
        <trans-unit id="b341150357fbb9c63b7604e12146923c3cb5871b" translate="yes" xml:space="preserve">
          <source>Optional member present when a minimum required version of CMake is known for the directory. This is the &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; version given to the most local call to the &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt;&lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt;&lt;/a&gt; command in the directory itself or one of its ancestors. The value is a JSON object with one member:</source>
          <target state="translated">디렉토리에 필요한 최소 CMake 버전이 알려진 경우 선택적 멤버가 존재합니다. 이것은 디렉토리 자체 또는 상위 항목 중 하나에서 &lt;a href=&quot;../command/cmake_minimum_required#command:cmake_minimum_required&quot; id=&quot;index-0-command:cmake_minimum_required&quot;&gt; &lt;code&gt;cmake_minimum_required(VERSION)&lt;/code&gt; &lt;/a&gt; 명령에 대한 가장 로컬 호출에 제공된 &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; 버전 입니다. 값은 멤버가 하나 인 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="23eb6170758352ed83c60379e4049efb17133c89" translate="yes" xml:space="preserve">
          <source>Optional member reserved for use by the client. This value is preserved in the reply written for the client in the &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 Reply Index File&lt;/a&gt; but is otherwise ignored. Clients may use this to pass custom information with a query through to its reply.</source>
          <target state="translated">클라이언트가 사용하도록 예약 된 선택적 멤버입니다. 이 값은 &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 응답 색인 파일&lt;/a&gt; 에서 클라이언트에 대해 작성된 응답에 유지 되지만 그렇지 않으면 무시됩니다. 고객은이 정보를 사용하여 사용자 정의 정보를 쿼리와 함께 회신에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af0ebe2864d465438fdc78e3cd2b2f23d3c84e54" translate="yes" xml:space="preserve">
          <source>Optional member reserved for use by the client. This value is preserved in the reply written for the client in the &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 Reply Index File&lt;/a&gt; but is otherwise ignored. Clients may use this to pass custom information with a request through to its reply.</source>
          <target state="translated">클라이언트가 사용하도록 예약 된 선택적 멤버입니다. 이 값은 &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 응답 색인 파일&lt;/a&gt; 에서 클라이언트에 대해 작성된 응답에 유지 되지만 그렇지 않으면 무시됩니다. 고객은이 정보를 사용하여 요청과 함께 사용자 정의 정보를 회신에 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af995ba93c25c6c2dfabf8824b266bbefb3a7d24" translate="yes" xml:space="preserve">
          <source>Optional member that is present for executable and library targets that are linked or archived into a single primary artifact. The value is a string specifying the file name of that artifact on disk.</source>
          <target state="translated">단일 기본 아티팩트로 링크되거나 아카이브 된 실행 파일 및 라이브러리 대상에 존재하는 선택적 멤버입니다. 값은 디스크에서 해당 아티팩트의 파일 이름을 지정하는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="37df46c6c39ce2a62eac45c041d578c4114f4d02" translate="yes" xml:space="preserve">
          <source>Optional member that is present for executable and library targets that produce artifacts on disk meant for consumption by dependents. The value is a JSON array of entries corresponding to the artifacts. Each entry is a JSON object containing one member:</source>
          <target state="translated">부양 가족이 소비 할 수 있도록 디스크에서 아티팩트를 생성하는 실행 파일 및 라이브러리 대상에 존재하는 선택적 멤버입니다. 값은 아티팩트에 해당하는 항목의 JSON 배열입니다. 각 항목은 하나의 멤버를 포함하는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="35efa44dd15d85e7497c9e557e149e0baa768bdd" translate="yes" xml:space="preserve">
          <source>Optional member that is present for executables and shared library targets that link into a runtime binary. The value is a JSON object with members describing the link step:</source>
          <target state="translated">런타임 바이너리에 링크되는 실행 파일 및 공유 라이브러리 대상에 존재하는 선택적 멤버입니다. 값은 링크 단계를 설명하는 멤버가있는 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="be757cc5dc85395ba82066d5803f711c0f2b127a" translate="yes" xml:space="preserve">
          <source>Optional member that is present for static library targets. The value is a JSON object with members describing the archive step:</source>
          <target state="translated">정적 라이브러리 대상에 존재하는 선택적 멤버입니다. 값은 아카이브 단계를 설명하는 멤버가있는 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="a1d4d4143efd4f4b72118d0fcedcfd1deac0c6ae" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;, or other command invocation that created this dependency is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">&lt;a href=&quot;../command/add_dependencies#command:add_dependencies&quot; id=&quot;index-0-command:add_dependencies&quot;&gt; &lt;code&gt;add_dependencies()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 또는이 종속성을 만든 다른 명령 호출에 대한 CMake 언어 역 추적이있을 때 존재하는 선택적 멤버입니다 . 값은 &lt;code&gt;backtraceGraph&lt;/code&gt; 멤버의 &lt;code&gt;nodes&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="23f267841aef05aa6322ee2c995f91c7d6446b4c" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; command invocation that specified this destination is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">이 대상을 지정한 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-2-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 명령 호출에 대한 CMake 언어 역 추적을 사용할 수있는 경우 선택적 멤버입니다 . 값은 &lt;code&gt;backtraceGraph&lt;/code&gt; 멤버의 &lt;code&gt;nodes&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="b5356e46eee3621dfdba9d3bbf9b33802993c288" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt;&lt;code&gt;target_compile_definitions()&lt;/code&gt;&lt;/a&gt; or other command invocation that added this preprocessor definition is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">&lt;a href=&quot;../command/target_compile_definitions#command:target_compile_definitions&quot; id=&quot;index-0-command:target_compile_definitions&quot;&gt; &lt;code&gt;target_compile_definitions()&lt;/code&gt; &lt;/a&gt; 대한 CMake 언어 역 추적 또는이 전 처리기 정의를 추가 한 다른 명령 호출을 사용할 수 있는 경우 선택적인 멤버입니다 . 값은 &lt;code&gt;backtraceGraph&lt;/code&gt; 멤버의 &lt;code&gt;nodes&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="ca4a9a012d39e457a1e7899a1ed82671715e86ee" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; or other command invocation that added this include directory is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">&lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt; 대한 CMake 언어 역 추적 또는이 포함 디렉토리를 추가 한 다른 명령 호출이 사용 가능한 경우 존재하는 선택적 멤버입니다 . 값은 &lt;code&gt;backtraceGraph&lt;/code&gt; 멤버의 &lt;code&gt;nodes&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="cda949e8dd0a3c7d131d05f5f38c5c6ff8c1ff8d" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt;&lt;code&gt;target_sources()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt;, or other command invocation that added this source to the target is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">에 CMake 언어 역 추적 할 때 존재하는 선택 부재 &lt;a href=&quot;../command/target_sources#command:target_sources&quot; id=&quot;index-0-command:target_sources&quot;&gt; &lt;code&gt;target_sources()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-1-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-1-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt; 대상이 소스를 추가 또는 다른 명령 호출이 가능하다. 값은 &lt;code&gt;backtraceGraph&lt;/code&gt; 멤버의 &lt;code&gt;nodes&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="44b11fad8ea6b8f2ae12d7a0831aa38e87f0baf2" translate="yes" xml:space="preserve">
          <source>Optional member that is present when a CMake language backtrace to the command in the source code that created the target is available. The value is an unsigned integer 0-based index into the &lt;code&gt;backtraceGraph&lt;/code&gt; member&amp;rsquo;s &lt;code&gt;nodes&lt;/code&gt; array.</source>
          <target state="translated">대상을 작성한 소스 코드의 명령에 대한 CMake 언어 역 추적이 사용 가능한 경우 존재하는 선택적 멤버입니다. 값은 &lt;code&gt;backtraceGraph&lt;/code&gt; 멤버의 &lt;code&gt;nodes&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="8c55fb49578fb9b27483626907d9a6943a8cdb39" translate="yes" xml:space="preserve">
          <source>Optional member that is present when fragments of the archiver command line invocation are available. The value is a JSON array of entries specifying the fragments. Each entry is a JSON object with members:</source>
          <target state="translated">아카이버 명령 행 호출의 단편을 사용할 수있을 때 존재하는 선택적 멤버입니다. 값은 조각을 지정하는 항목의 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="bf5afa00106c6e8caf3f79165586b718dd254738" translate="yes" xml:space="preserve">
          <source>Optional member that is present when fragments of the compiler command line invocation are available. The value is a JSON array of entries specifying ordered fragments. Each entry is a JSON object with one member:</source>
          <target state="translated">컴파일러 명령 행 호출의 단편을 사용할 수있을 때 존재하는 선택적 멤버입니다. 값은 순서 조각을 지정하는 항목의 JSON 배열입니다. 각 항목은 멤버가 하나 인 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="0b6e7f84b79aafd4a94baca257b5f09d2558da33" translate="yes" xml:space="preserve">
          <source>Optional member that is present when fragments of the link command line invocation are available. The value is a JSON array of entries specifying ordered fragments. Each entry is a JSON object with members:</source>
          <target state="translated">링크 명령 행 호출의 단편을 사용할 수있을 때 존재하는 선택적 멤버입니다. 값은 순서 조각을 지정하는 항목의 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="d79096b6ba626298692b0951fe9b36614518859e" translate="yes" xml:space="preserve">
          <source>Optional member that is present when sources are grouped together by the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-1-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; command or by default. The value is a JSON array of entries corresponding to the groups. Each entry is a JSON object with members:</source>
          <target state="translated">&lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-1-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt; 명령 또는 기본적으로 소스를 그룹화 할 때 존재하는 선택적 멤버입니다 . 값은 그룹에 해당하는 항목의 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="2492431c33d13ce5a984cef66b742eb57a0141e1" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; target property is set. The value is a JSON object with one member:</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt; &lt;code&gt;FOLDER&lt;/code&gt; &lt;/a&gt; 대상 특성이 설정 될 때 존재하는 선택적 멤버입니다 . 값은 멤버가 하나 인 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="18e546748e34151d32ce58779ce4df520b7a5f42" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;../variable/cmake_sysroot_compile#variable:CMAKE_SYSROOT_COMPILE&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_COMPILE&quot;&gt;&lt;code&gt;CMAKE_SYSROOT_COMPILE&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-1-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; variable is defined. The value is a JSON object with one member:</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_sysroot_compile#variable:CMAKE_SYSROOT_COMPILE&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_COMPILE&quot;&gt; &lt;code&gt;CMAKE_SYSROOT_COMPILE&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-1-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 변수가 정의 될 때 존재하는 선택적 멤버입니다 . 값은 멤버가 하나 인 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="dbda13d8b135308fa146242aaf8058d0933b7917" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;../variable/cmake_sysroot_link#variable:CMAKE_SYSROOT_LINK&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_LINK&quot;&gt;&lt;code&gt;CMAKE_SYSROOT_LINK&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; variable is defined. The value is a JSON object with one member:</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_sysroot_link#variable:CMAKE_SYSROOT_LINK&quot; id=&quot;index-0-variable:CMAKE_SYSROOT_LINK&quot;&gt; &lt;code&gt;CMAKE_SYSROOT_LINK&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../variable/cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 변수가 정의 될 때 존재하는 선택적 멤버입니다 . 값은 멤버가 하나 인 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="a255720ed7d59371079490b4ce93090013cfe42d" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the &lt;a href=&quot;cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-0-manual:cmake-file-api(7)&quot;&gt;&lt;code&gt;cmake-file-api(7)&lt;/code&gt;&lt;/a&gt; is available. The value is a JSON object with one member:</source>
          <target state="translated">&lt;a href=&quot;cmake-file-api.7#manual:cmake-file-api(7)&quot; id=&quot;index-0-manual:cmake-file-api(7)&quot;&gt; &lt;code&gt;cmake-file-api(7)&lt;/code&gt; &lt;/a&gt; 를 사용할 수 있을 때 존재하는 선택적 멤버입니다 . 값은 멤버가 하나 인 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="470102bf9edb53bf8c889fb13e2a02c4d659ee79" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the directory has subdirectories. The value is a JSON array of entries corresponding to child directories created by the &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/subdirs#command:subdirs&quot; id=&quot;index-0-command:subdirs&quot;&gt;&lt;code&gt;subdirs()&lt;/code&gt;&lt;/a&gt; command. Each entry is an unsigned integer 0-based index of another entry in the main &lt;code&gt;directories&lt;/code&gt; array.</source>
          <target state="translated">디렉토리에 서브 디렉토리가있을 때 존재하는 선택적 멤버. 값은 &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt; &lt;code&gt;add_subdirectory()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../command/subdirs#command:subdirs&quot; id=&quot;index-0-command:subdirs&quot;&gt; &lt;code&gt;subdirs()&lt;/code&gt; &lt;/a&gt; 명령으로 작성된 하위 디렉토리에 해당하는 항목의 JSON 배열입니다 . 각 항목은 기본 &lt;code&gt;directories&lt;/code&gt; 배열 에있는 다른 항목의 부호없는 정수 0 기반 인덱스입니다 .</target>
        </trans-unit>
        <trans-unit id="cae094027876a926871cdd70cf524c21f2827b70" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the directory is not top-level. The value is an unsigned integer 0-based index of another entry in the main &lt;code&gt;directories&lt;/code&gt; array that corresponds to the parent directory that added this directory as a subdirectory.</source>
          <target state="translated">디렉토리가 최상위 레벨이 아닌 경우 존재하는 선택적 멤버입니다. 값은 이 디렉토리를 서브 디렉토리로 추가 한 상위 디렉토리에 해당하는 기본 &lt;code&gt;directories&lt;/code&gt; 배열 의 다른 항목의 부호없는 정수 0 기반 색인입니다 .</target>
        </trans-unit>
        <trans-unit id="b1ca774ddae3385f4c9129d6afbc8e05e0462435" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the directory itself has targets, excluding those belonging to subdirectories. The value is a JSON array of entries corresponding to the targets. Each entry is an unsigned integer 0-based index into the main &lt;code&gt;targets&lt;/code&gt; array.</source>
          <target state="translated">디렉토리 자체에 대상이있을 때 존재하는 선택적 구성원 (하위 디렉토리에 속하는 대상 제외). 값은 대상에 해당하는 항목의 JSON 배열입니다. 각 항목은 기본 &lt;code&gt;targets&lt;/code&gt; 배열에 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="7bb828ae72eb64c69825d3286e85919aabef020d" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the project has sub-projects. The value is a JSON array of entries corresponding to the sub-projects. Each entry is an unsigned integer 0-based index of another entry in the main &lt;code&gt;projects&lt;/code&gt; array.</source>
          <target state="translated">프로젝트에 하위 프로젝트가있을 때 존재하는 선택적 멤버입니다. 값은 하위 프로젝트에 해당하는 항목의 JSON 배열입니다. 각 항목은 기본 &lt;code&gt;projects&lt;/code&gt; 배열 에있는 다른 항목의 부호없는 정수 0 기반 인덱스입니다 .</target>
        </trans-unit>
        <trans-unit id="2f6e771e9726e9bd20abf9c1f70502d533a823e9" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the project is not top-level. The value is an unsigned integer 0-based index of another entry in the main &lt;code&gt;projects&lt;/code&gt; array that corresponds to the parent project that added this project as a sub-project.</source>
          <target state="translated">프로젝트가 최상위가 아닌 경우 존재하는 선택적 멤버입니다. 값은 이 프로젝트를 하위 프로젝트로 추가 한 상위 프로젝트에 해당하는 기본 &lt;code&gt;projects&lt;/code&gt; 배열 의 다른 항목에 대한 부호없는 정수 0 기반 인덱스입니다 .</target>
        </trans-unit>
        <trans-unit id="48295a220c56e2acd5c4df3c057fb3f8cac6c956" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the project itself has targets, excluding those belonging to sub-projects. The value is a JSON array of entries corresponding to the targets. Each entry is an unsigned integer 0-based index into the main &lt;code&gt;targets&lt;/code&gt; array.</source>
          <target state="translated">하위 프로젝트에 속한 대상을 제외하고 프로젝트 자체에 대상이있을 때 존재하는 선택적 멤버입니다. 값은 대상에 해당하는 항목의 JSON 배열입니다. 각 항목은 기본 &lt;code&gt;targets&lt;/code&gt; 배열에 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="90923382d548612413cb2df4db76ad960f970bbe" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the source is compiled. The value is an unsigned integer 0-based index into the &lt;code&gt;compileGroups&lt;/code&gt; array.</source>
          <target state="translated">소스가 컴파일 될 때 존재하는 선택적 멤버입니다. 값은 &lt;code&gt;compileGroups&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="1d3530f9990b97c460490d4000b7a7b8ce0efbee" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the source is part of a source group either via the &lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt;&lt;code&gt;source_group()&lt;/code&gt;&lt;/a&gt; command or by default. The value is an unsigned integer 0-based index into the &lt;code&gt;sourceGroups&lt;/code&gt; array.</source>
          <target state="translated">&lt;a href=&quot;../command/source_group#command:source_group&quot; id=&quot;index-0-command:source_group&quot;&gt; &lt;code&gt;source_group()&lt;/code&gt; &lt;/a&gt; 명령을 통해 또는 기본적으로 소스가 소스 그룹의 일부인 경우 존재하는 선택적 멤버입니다 . 값은 &lt;code&gt;sourceGroups&lt;/code&gt; 배열에 대한 부호없는 정수 0 기반 인덱스 입니다.</target>
        </trans-unit>
        <trans-unit id="d3deeed7ed71b4b6699adc66a07d8d4781686943" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the target depends on other targets. The value is a JSON array of entries corresponding to the dependencies. Each entry is a JSON object with members:</source>
          <target state="translated">대상이 다른 대상에 종속 될 때 존재하는 선택적 멤버입니다. 값은 종속성에 해당하는 항목의 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="4584b96781381936ca64c710dbca36084c0aabc8" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the target has an &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; rule. The value is a JSON object with members:</source>
          <target state="translated">대상에 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 규칙 이있을 때 존재하는 선택적 멤버입니다 . 값은 멤버가있는 JSON 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="d338cb76d81e0050b9bd066fc9d1a396fec0c00e" translate="yes" xml:space="preserve">
          <source>Optional member that is present when the target has sources that compile. The value is a JSON array of entries corresponding to groups of sources that all compile with the same settings. Each entry is a JSON object with members:</source>
          <target state="translated">대상에 컴파일 소스가있을 때 존재하는 선택적 멤버입니다. 값은 모두 동일한 설정으로 컴파일되는 소스 그룹에 해당하는 항목의 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="355a8abc455b50c0a9f66138683030f921de7b8c" translate="yes" xml:space="preserve">
          <source>Optional member that is present when there are include directories. The value is a JSON array with an entry for each directory. Each entry is a JSON object with members:</source>
          <target state="translated">포함 디렉토리가있을 때 존재하는 선택적 멤버입니다. 값은 각 디렉토리에 대한 항목이있는 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="49f48fb7bdb99ba6a513443f933a83264c37c0d1" translate="yes" xml:space="preserve">
          <source>Optional member that is present when there are preprocessor definitions. The value is a JSON array with an entry for each definition. Each entry is a JSON object with members:</source>
          <target state="translated">전 처리기 정의가있을 때 존재하는 선택적 멤버입니다. 값은 각 정의에 대한 항목이있는 JSON 배열입니다. 각 항목은 멤버가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="ddfc4871a9d9ed4feee132088f1565eeec964ed0" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the include directory is marked as a system include directory.</source>
          <target state="translated">포함 디렉토리가 시스템 포함 디렉토리로 표시되면 부울 값 &lt;code&gt;true&lt;/code&gt; 로 표시되는 선택적 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="9053c5b38f0a832287e94b893cac5b811de2486e" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the path specifies a file in the CMake installation.</source>
          <target state="translated">경로가 CMake 설치에서 파일을 지정하면 부울 값이 &lt;code&gt;true&lt;/code&gt; 인 선택적 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="d1a3f70f227d9cd359a630cdceb2cf2ff170bdd1" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the path specifies a file that is not under the top-level source or build directories.</source>
          <target state="translated">부울 값으로 존재하는 선택적 멤버 경로가 최상위 소스 또는 빌드 디렉토리에없는 파일을 지정하는 경우 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="35d11ceabca0c20a9ecfba31d3ffc079a690bf87" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the path specifies a file that is under the top-level build directory and the build is out-of-source. This member is not available on in-source builds.</source>
          <target state="translated">부울 값이있는 선택적 멤버 경로가 최상위 빌드 디렉토리 아래에있는 파일을 지정하고 빌드가 소스가 아닌 경우 &lt;code&gt;true&lt;/code&gt; 입니다. 이 멤버는 소스 빌드에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ea8e2697329a2165d96a8539df60315f6b1f22c3" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the source is &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스가 &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt; &lt;code&gt;GENERATED&lt;/code&gt; 인&lt;/a&gt; 경우 부울 값 &lt;code&gt;true&lt;/code&gt; 로 존재하는 선택적 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="bbfffb88eb547dcca9a32d4fa4a7368fcb56c70f" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; if the target is provided by CMake&amp;rsquo;s build system generator rather than by a command in the source code.</source>
          <target state="translated">부울 값이있는 선택적 멤버 소스가 소스 코드의 명령이 아닌 CMake의 빌드 시스템 생성기에서 대상을 제공하는 경우 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="01f394b80565e758caa7b8bfd857a2918e642060" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; when link-time optimization (a.k.a. interprocedural optimization or link-time code generation) is enabled.</source>
          <target state="translated">링크 타임 최적화 (일명 절차 간 최적화 또는 링크 타임 코드 생성)가 활성화 된 경우 부울 값 &lt;code&gt;true&lt;/code&gt; 로 표시 되는 선택적 멤버입니다 .</target>
        </trans-unit>
        <trans-unit id="8921c2b92fbced21b19e1f2fdebcb273ed2fc0eb" translate="yes" xml:space="preserve">
          <source>Optional member that is present with boolean value &lt;code&gt;true&lt;/code&gt; when the directory or one of its subdirectories contains any &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install()&lt;/code&gt;&lt;/a&gt; rules, i.e. whether a &lt;code&gt;make install&lt;/code&gt; or equivalent rule is available.</source>
          <target state="translated">디렉토리 또는 서브 디렉토리 중 하나에 &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt; &lt;code&gt;install()&lt;/code&gt; &lt;/a&gt; 규칙이 포함 된 경우 ( 예 : &lt;code&gt;make install&lt;/code&gt; 또는 동등한 규칙이 사용 가능한지 여부 ) 부울 값 &lt;code&gt;true&lt;/code&gt; 로 표시되는 선택적 멤버 .</target>
        </trans-unit>
        <trans-unit id="295073c8a2eb759c3eae2ca772570d63d380a273" translate="yes" xml:space="preserve">
          <source>Optional variables you can define prior to calling this module:</source>
          <target state="translated">이 모듈을 호출하기 전에 정의 할 수있는 선택적 변수 :</target>
        </trans-unit>
        <trans-unit id="01319d8d1c1c535d53d2e16d119e5395db5d222e" translate="yes" xml:space="preserve">
          <source>Optional. Can also be specified without &lt;code&gt;LANGUAGES&lt;/code&gt; keyword per the first, short signature.</source>
          <target state="translated">선택 과목. 첫 번째 짧은 서명마다 &lt;code&gt;LANGUAGES&lt;/code&gt; 키워드 없이 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d81cc973f0e23b63a4be861299df252f0a63187" translate="yes" xml:space="preserve">
          <source>Optional. Sets the variables</source>
          <target state="translated">선택 과목. 변수를 설정</target>
        </trans-unit>
        <trans-unit id="c7ff844e41419814f57f8792f01e887e18c49a7b" translate="yes" xml:space="preserve">
          <source>Optional; may not be used unless policy &lt;a href=&quot;../policy/cmp0048#policy:CMP0048&quot; id=&quot;index-0-policy:CMP0048&quot;&gt;&lt;code&gt;CMP0048&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">선택 과목; 정책 &lt;a href=&quot;../policy/cmp0048#policy:CMP0048&quot; id=&quot;index-0-policy:CMP0048&quot;&gt; &lt;code&gt;CMP0048&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;NEW&lt;/code&gt; 로 설정되어 있지 않으면 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="3136af140b86a38af7572707be6fba6a57d545fc" translate="yes" xml:space="preserve">
          <source>Optionally a section listing cache variables used by the module, if any.</source>
          <target state="translated">선택적으로 모듈이 사용하는 캐시 변수를 나열하는 섹션입니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="2105faa0cdf20603843b77667271fb317964f07f" translate="yes" xml:space="preserve">
          <source>Optionally, the final set of library directories listed in one variable for use by client code. This should not be a cache entry.</source>
          <target state="translated">선택적으로 클라이언트 코드에서 사용하기 위해 하나의 변수에 나열된 최종 라이브러리 디렉토리 세트입니다. 캐시 항목이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="9326da7df152ff264da507cf0fd827c61160bb90" translate="yes" xml:space="preserve">
          <source>Optionally, the runtime library search path for use when running an executable linked to shared libraries. The list should be used by user code to create the &lt;code&gt;PATH&lt;/code&gt; on windows or &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; on UNIX. This should not be a cache entry.</source>
          <target state="translated">선택적으로 공유 라이브러리에 링크 된 실행 파일을 실행할 때 사용할 런타임 라이브러리 검색 경로입니다. 이 목록은 사용자 코드가 Windows 에서 &lt;code&gt;PATH&lt;/code&gt; 를 작성 하거나 UNIX에서 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; 를 작성하는 데 사용해야합니다 . 캐시 항목이 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="5c6497a0f460b11b3df1519ab6e63118b0b13622" translate="yes" xml:space="preserve">
          <source>Optionally, using option &lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt;, native header files can be generated for methods declared as native. These files provide the connective glue that allow your Java and C code to interact. An INTERFACE target will be created for an easy usage of generated files. Sub-option &lt;code&gt;DESTINATION&lt;/code&gt; can be used to specify the output directory for generated header files.</source>
          <target state="translated">선택적으로 &lt;code&gt;GENERATE_NATIVE_HEADERS&lt;/code&gt; 옵션을 사용하여 native로 선언 된 메소드에 대해 고유 헤더 파일을 생성 할 수 있습니다. 이 파일은 Java 및 C 코드가 상호 작용할 수있는 연결 접착제를 제공합니다. 생성 된 파일을 쉽게 사용할 수 있도록 인터페이스 대상이 작성됩니다. 하위 옵션 &lt;code&gt;DESTINATION&lt;/code&gt; 을 사용하여 생성 된 헤더 파일의 출력 디렉토리를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="8886b381a94f23a6e9af413e4bc25e8fb76941b3" translate="yes" xml:space="preserve">
          <source>Options are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0c0840b475c2a546bf624e9a9bbc54c4480602" translate="yes" xml:space="preserve">
          <source>Options for Dashboard Client include:</source>
          <target state="translated">Dashboard Client의 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="85b85ab75dd0ae66d7aa6313828663d28696cdc6" translate="yes" xml:space="preserve">
          <source>Options include:</source>
          <target state="translated">옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8bc492fdfa7c9f26661839feac27aaa4b885193c" translate="yes" xml:space="preserve">
          <source>Options to both &lt;code&gt;DOWNLOAD&lt;/code&gt; and &lt;code&gt;UPLOAD&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;DOWNLOAD&lt;/code&gt; 및 &lt;code&gt;UPLOAD&lt;/code&gt; 옵션 은 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5865b2a20f3bdf9e258514a6340f3b9deea4fba6" translate="yes" xml:space="preserve">
          <source>Options used in the &lt;code&gt;bison&lt;/code&gt; command line</source>
          <target state="translated">&lt;code&gt;bison&lt;/code&gt; 명령 행 에서 사용되는 옵션</target>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="translated">Options:</target>
        </trans-unit>
        <trans-unit id="040579f2bccd771aaaec951523b2fa53a2bd958a" translate="yes" xml:space="preserve">
          <source>Or, after installing the package content but before creating the package installation binary for redistribution, manually replace the absolute paths with placeholders for substitution by the installation tool when the package is installed.</source>
          <target state="translated">또는 패키지 컨텐츠를 설치 한 후 재배포를 위해 패키지 설치 바이너리를 작성하기 전에 패키지를 설치할 때 설치 도구가 대체 할 절대 경로를 자리 표시 자로 수동으로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="1a984f13cdcd0d866dc687475ede5878adb5f191" translate="yes" xml:space="preserve">
          <source>Ordering is done in ascending mode. The lowest folder found will be tested first.</source>
          <target state="translated">주문은 오름차순 모드로 수행됩니다. 가장 낮은 폴더를 먼저 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="519255ae1f74ffc5ddd29979295c7572f048ad81" translate="yes" xml:space="preserve">
          <source>Organization</source>
          <target state="translated">Organization</target>
        </trans-unit>
        <trans-unit id="822cb67c870a18008d47c17af4a74ee4fb09eb67" translate="yes" xml:space="preserve">
          <source>Other &lt;code&gt;query.json&lt;/code&gt; top-level members are reserved for future use. If present they are ignored for forward compatibility.</source>
          <target state="translated">다른 &lt;code&gt;query.json&lt;/code&gt; 최상위 멤버는 나중에 사용하기 위해 예약되어 있습니다. 존재하는 경우, 순방향 호환성을 위해 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="9cf80f9019a6509a21f323a696f4231b663fd481" translate="yes" xml:space="preserve">
          <source>Other Behavior Settings</source>
          <target state="translated">다른 행동 설정</target>
        </trans-unit>
        <trans-unit id="03bd6aa5eb4dd3e7da3f9629c11782a53abacd66" translate="yes" xml:space="preserve">
          <source>Other Generators</source>
          <target state="translated">다른 발전기</target>
        </trans-unit>
        <trans-unit id="c34ec1b223be4052e2cfc9b968487a04965da69c" translate="yes" xml:space="preserve">
          <source>Other IDEs like QtCreator that also use the CodeBlocks generator may ignore this setting.</source>
          <target state="translated">CodeBlocks 생성기를 사용하는 QtCreator와 같은 다른 IDE는이 설정을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7be83674f6749c6c30ac7cd68c439bf1239ec7b" translate="yes" xml:space="preserve">
          <source>Other steps (custom or pre-defined) on which this step depends.</source>
          <target state="translated">이 단계가 종속 된 다른 단계 (사용자 정의 또는 사전 정의).</target>
        </trans-unit>
        <trans-unit id="81e5c2c0eb405c739cdc2f74bc5777fbe5714ad1" translate="yes" xml:space="preserve">
          <source>Other steps (custom or pre-defined) that depend on this new custom step.</source>
          <target state="translated">이 새로운 사용자 정의 단계에 의존하는 다른 단계 (사용자 정의 또는 사전 정의).</target>
        </trans-unit>
        <trans-unit id="cd23a3a339b95ca3110ceda99ac377643b02559a" translate="yes" xml:space="preserve">
          <source>Other values have undefined behavior and may not be diagnosed.</source>
          <target state="translated">다른 값은 정의되지 않은 동작을 가지며 진단되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b842962e775bdb60889773e196709d59501a61a6" translate="yes" xml:space="preserve">
          <source>Other variables one may set to control this module are:</source>
          <target state="translated">이 모듈을 제어하기 위해 설정할 수있는 다른 변수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="32ad498a7cd4419e84abdcc9bb03d4a47da68ef3" translate="yes" xml:space="preserve">
          <source>Otherwise a single thread/process is started.</source>
          <target state="translated">그렇지 않으면 단일 스레드 / 프로세스가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="40a6319348dbdbd3c896ac46836444cc2a12361d" translate="yes" xml:space="preserve">
          <source>Otherwise evaluates to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;1&lt;/code&gt; 로 평가됩니다 .</target>
        </trans-unit>
        <trans-unit id="f9737ccbae5dddad2bcc291123720458cfd529ea" translate="yes" xml:space="preserve">
          <source>Otherwise it will contain:</source>
          <target state="translated">그렇지 않으면 다음을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="e33d71a00d511909d98879ec111b05d21ab14b8c" translate="yes" xml:space="preserve">
          <source>Otherwise, if the &lt;code&gt;EP_BASE&lt;/code&gt; directory property is set then components of an external project are stored under the specified base:</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;EP_BASE&lt;/code&gt; 디렉토리 특성이 설정되면 외부 프로젝트의 컴포넌트가 지정된 기준 아래에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="0cd7102474ee66a73a1d5ba511d582a7d336043b" translate="yes" xml:space="preserve">
          <source>Otherwise, the latest API level available in the NDK is used.</source>
          <target state="translated">그렇지 않으면 NDK에서 사용 가능한 최신 API 레벨이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1749f766f2ea9d08bc5fd97e719a51402473b742" translate="yes" xml:space="preserve">
          <source>Otherwise, this module tries to find the config program, first from unixODBC, then from iODBC. If no config program found, this module searches for ODBC header and library in list of known locations.</source>
          <target state="translated">그렇지 않으면이 모듈은 먼저 unixODBC에서 iODBC에서 구성 프로그램을 찾습니다. 구성 프로그램이 없으면이 모듈은 알려진 위치 목록에서 ODBC 헤더 및 라이브러리를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="575d5494e56697fbff0a9c52fb43d44fb7308e2e" translate="yes" xml:space="preserve">
          <source>Otherwise, when &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt;, this variable provides the Android API version number targeted. This will be the same value as the &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; variable for &lt;code&gt;Android&lt;/code&gt; platforms.</source>
          <target state="translated">그렇지 않으면 &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Android 용 크로스 컴파일시이&lt;/a&gt; 변수는 대상으로 지정된 Android API 버전 번호를 제공합니다. 이는 &lt;code&gt;Android&lt;/code&gt; 플랫폼 의 &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; &lt;/a&gt; 변수 와 동일한 값 입니다.</target>
        </trans-unit>
        <trans-unit id="264f4e149d0b64776fa86b5ad752026582c3f5d5" translate="yes" xml:space="preserve">
          <source>Otherwise, when &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt;, this variable provides the name of the Android architecture corresponding to the value of the &lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt;&lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt;&lt;/a&gt; variable. The architecture name may be one of:</source>
          <target state="translated">그렇지 않으면 &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Android 용 크로스 컴파일 &lt;/a&gt;&lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt; &lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt; &lt;/a&gt; 변수 는 CMAKE_ANDROID_ARCH_ABI 변수 의 값에 해당하는 Android 아키텍처의 이름을 제공합니다 . 아키텍처 이름은 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19f8352fbdf28e8ba69d66658e9edd8faf04bfe6" translate="yes" xml:space="preserve">
          <source>Output Artifacts</source>
          <target state="translated">산출물</target>
        </trans-unit>
        <trans-unit id="2343b0ca5b797dd02411866e4aa17e8bf582c1ad" translate="yes" xml:space="preserve">
          <source>Output anything outputted by the test program if the test should fail. This option can also be enabled by setting the &lt;a href=&quot;../envvar/ctest_output_on_failure#envvar:CTEST_OUTPUT_ON_FAILURE&quot; id=&quot;index-0-envvar:CTEST_OUTPUT_ON_FAILURE&quot;&gt;&lt;code&gt;CTEST_OUTPUT_ON_FAILURE&lt;/code&gt;&lt;/a&gt; environment variable</source>
          <target state="translated">테스트에 실패하면 테스트 프로그램에서 출력 한 내용을 출력하십시오. 이 옵션은 &lt;a href=&quot;../envvar/ctest_output_on_failure#envvar:CTEST_OUTPUT_ON_FAILURE&quot; id=&quot;index-0-envvar:CTEST_OUTPUT_ON_FAILURE&quot;&gt; &lt;code&gt;CTEST_OUTPUT_ON_FAILURE&lt;/code&gt; &lt;/a&gt; 환경 변수를 설정하여 활성화 할 수도 있습니다</target>
        </trans-unit>
        <trans-unit id="535f07da4e699fd2acbab6b05429b78c1c0cedb9" translate="yes" xml:space="preserve">
          <source>Output directory for MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; files generated by the compiler while building source files.</source>
          <target state="translated">소스 파일을 빌드하는 동안 컴파일러가 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일의 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="a756805abfe12cfb451dfeb1ddb6740cd54210d1" translate="yes" xml:space="preserve">
          <source>Output directory for MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; files generated by the linker for executable and shared library targets.</source>
          <target state="translated">실행 파일 및 공유 라이브러리 대상에 대해 링커에서 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일의 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="fede65554c776dfcfdf720a34d6af6459601b160" translate="yes" xml:space="preserve">
          <source>Output directory for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the compiler while building source files.</source>
          <target state="translated">소스 파일을 빌드하는 동안 컴파일러가 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일 의 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="b2ab6bfea46b6c0ce8cf26585c29350de561b425" translate="yes" xml:space="preserve">
          <source>Output directory for the MS debug symbols &lt;code&gt;.pdb&lt;/code&gt; file generated by the linker for an executable or shared library target.</source>
          <target state="translated">실행 파일 또는 공유 라이브러리 대상에 대해 링커에서 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일 의 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="9e423302ff95148b4156904d083ce731511d55f7" translate="yes" xml:space="preserve">
          <source>Output directory in which to build &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; 대상 파일 을 빌드 할 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="c7b00243976ae9b66ce89c45eabaa5750b859b36" translate="yes" xml:space="preserve">
          <source>Output directory in which to build &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; 대상 파일 을 빌드 할 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="555267d70d65751b96eda7f889bd7107ce7731b9" translate="yes" xml:space="preserve">
          <source>Output directory in which to build &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; 대상 파일 을 빌드 할 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="b0c24f5819c5769eebd8081c3253a9d6ba3745a0" translate="yes" xml:space="preserve">
          <source>Output file location</source>
          <target state="translated">출력 파일 위치</target>
        </trans-unit>
        <trans-unit id="53d19b975b7bdaba19870194ab3d51fd771da33a" translate="yes" xml:space="preserve">
          <source>Output from stdout and stderr if the executable were to be run on the target platform. This is created only if the &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; or &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; option was used.</source>
          <target state="translated">실행 파일을 대상 플랫폼에서 실행하려는 경우 stdout 및 stderr의 출력 &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; 또는 &lt;code&gt;OUTPUT_VARIABLE&lt;/code&gt; 옵션이 사용 된 경우에만 작성 됩니다.</target>
        </trans-unit>
        <trans-unit id="b1adc32e3b3ccdc48da406236ff28316fd1557b5" translate="yes" xml:space="preserve">
          <source>Output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; 대상 파일의 출력 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="e2ef7381a066e9589c66c399de6fb05e76bbf865" translate="yes" xml:space="preserve">
          <source>Output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; 대상 파일의 출력 이름 .</target>
        </trans-unit>
        <trans-unit id="dd2b0b40bd8c7672ce0b18668b00271a5b4d80ea" translate="yes" xml:space="preserve">
          <source>Output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; 대상 파일의 출력 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="513963de1ed0d4278d05b0be07c3b88af7dce641" translate="yes" xml:space="preserve">
          <source>Output name for target files.</source>
          <target state="translated">대상 파일의 출력 이름입니다.</target>
        </trans-unit>
        <trans-unit id="77bd4f0e287c3158ec0885b565de272a3e921a63" translate="yes" xml:space="preserve">
          <source>Output name for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the compiler while building source files.</source>
          <target state="translated">소스 파일을 빌드하는 동안 컴파일러가 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일 의 출력 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="85889ac9d0127200bfbfc0d74968525f96bb750a" translate="yes" xml:space="preserve">
          <source>Output name for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the linker for an executable or shared library target.</source>
          <target state="translated">실행 파일 또는 공유 라이브러리 대상에 대해 링커에서 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일 의 출력 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="b35877099180878ed78f20b7acfe157ba3ccc57b" translate="yes" xml:space="preserve">
          <source>Output to log file.</source>
          <target state="translated">로그 파일로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="388540448869594b9d558b8525802cdb0fe4e69e" translate="yes" xml:space="preserve">
          <source>Output-Related Expressions</source>
          <target state="translated">출력 관련 표현식</target>
        </trans-unit>
        <trans-unit id="574586b51a4f26e9ed16afa662df09313fb00f18" translate="yes" xml:space="preserve">
          <source>Outputs a list of all the source files that are required by the specified &lt;code&gt;srcfile&lt;/code&gt;. This list is written into &lt;code&gt;outputfile&lt;/code&gt;. This is similar to writing out the dependencies for &lt;code&gt;srcfile&lt;/code&gt; except that it jumps from &lt;code&gt;.h&lt;/code&gt; files into &lt;code&gt;.cxx&lt;/code&gt;, &lt;code&gt;.c&lt;/code&gt; and &lt;code&gt;.cpp&lt;/code&gt; files if possible.</source>
          <target state="translated">지정된 &lt;code&gt;srcfile&lt;/code&gt; 에 필요한 모든 소스 파일의 목록을 출력합니다 . 이 목록은 &lt;code&gt;outputfile&lt;/code&gt; 에 기록됩니다 . 이것은 가능한 경우 &lt;code&gt;.h&lt;/code&gt; 파일에서 &lt;code&gt;.cxx&lt;/code&gt; , &lt;code&gt;.c&lt;/code&gt; 및 &lt;code&gt;.cpp&lt;/code&gt; 파일 로 점프 &lt;code&gt;srcfile&lt;/code&gt; 점을 제외하고 srcfile에 대한 종속성을 작성하는 것과 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="bb2ddd8e65bb738740ce4ef57c8fd6d0c626ba83" translate="yes" xml:space="preserve">
          <source>Override control &lt;code&gt;final&lt;/code&gt; keyword, as defined in &lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt;, &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt; and &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt; , &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt; 및 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272에&lt;/a&gt; 정의 된대로 제어 &lt;code&gt;final&lt;/code&gt; 키워드를 재정의 하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d46f200cdbb4c965833fd365834a1af93182f2d" translate="yes" xml:space="preserve">
          <source>Override control &lt;code&gt;override&lt;/code&gt; keyword, as defined in &lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt;, &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt; and &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/JTC1/SC22/WG21/docs/papers/2009/n2928.htm&quot;&gt;N2928&lt;/a&gt; , &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2010/n3206.htm&quot;&gt;N3206&lt;/a&gt; 및 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2011/n3272.htm&quot;&gt;N3272에&lt;/a&gt; 정의 된대로 제어 &lt;code&gt;override&lt;/code&gt; 키워드를 대체 하십시오 .</target>
        </trans-unit>
        <trans-unit id="05b8f9e81d581e4ba2840b32a4cee72e780eee7e" translate="yes" xml:space="preserve">
          <source>Override on a per-project basis by providing a project-specific gp_item_default_embedded_path_override function.</source>
          <target state="translated">프로젝트 별 gp_item_default_embedded_path_override 함수를 제공하여 프로젝트별로 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="1bf7813e483c9c6df8c93ddcbd64184c00765432" translate="yes" xml:space="preserve">
          <source>Override on a per-project basis by providing a project-specific gp_resolve_item_override function.</source>
          <target state="translated">프로젝트 별 gp_resolve_item_override 함수를 제공하여 프로젝트별로 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="3b6bca2bdc640e9f40c2cde7759461ff451cfad6" translate="yes" xml:space="preserve">
          <source>Override on a per-project basis by providing a project-specific gp_resolved_file_type_override function.</source>
          <target state="translated">프로젝트 별 gp_resolved_file_type_override 함수를 제공하여 프로젝트별로 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="437afd82fb736e754db9aa73d9cffd5cb1d1efe0" translate="yes" xml:space="preserve">
          <source>Override the CMake generator used for the configure step. Without this option, the same generator as the main build will be used. This option is ignored if a custom configure command has been specified with the &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; option.</source>
          <target state="translated">구성 단계에 사용 된 CMake 생성기를 재정의하십시오. 이 옵션이 없으면 기본 빌드와 동일한 생성기가 사용됩니다. &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; 옵션 으로 사용자 정의 구성 명령이 지정된 경우이 옵션은 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="7bf5e7295de248c038b9ab5ad9a5982050fe259b" translate="yes" xml:space="preserve">
          <source>Override the default Visual Studio tool that will be applied to the source file with a new tool not based on the extension of the file.</source>
          <target state="translated">파일 확장자를 기준으로하지 않는 새 도구를 사용하여 소스 파일에 적용될 기본 Visual Studio 도구를 재정의하십시오.</target>
        </trans-unit>
        <trans-unit id="e6d9849d3ea35ad5c77b0779ca7324c918b6d630" translate="yes" xml:space="preserve">
          <source>Override the installation prefix, &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">설치 접두사 &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-0-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 를&lt;/a&gt; 재정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="1dd80e31c2a9d4e5129a44fd128654121d526acb" translate="yes" xml:space="preserve">
          <source>Override the make program chosen by CTest with a given one.</source>
          <target state="translated">CTest에서 선택한 make 프로그램을 지정된 것으로 재정의하십시오.</target>
        </trans-unit>
        <trans-unit id="d607d1a1f4ef49fa084352d194c41559ee3e784a" translate="yes" xml:space="preserve">
          <source>Override/define &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_DIRECTORY&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DIRECTORY&quot;&gt;&lt;code&gt;CPACK_PACKAGE_DIRECTORY&lt;/code&gt;&lt;/a&gt;, which controls the directory where CPack will perform its packaging work. The resultant package(s) will be created at this location by default and a &lt;code&gt;_CPack_Packages&lt;/code&gt; subdirectory will also be created below this directory to use as a working area during package creation.</source>
          <target state="translated">CPack이 패키지 작업을 수행 할 디렉토리를 제어 하는 &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_DIRECTORY&quot; id=&quot;index-0-variable:CPACK_PACKAGE_DIRECTORY&quot;&gt; &lt;code&gt;CPACK_PACKAGE_DIRECTORY&lt;/code&gt; 를&lt;/a&gt; 재정의 / 정의 합니다. 결과 패키지는 기본적으로이 위치에 작성되며 패키지 작성 중 작업 영역으로 사용하기 위해이 디렉토리 아래에 &lt;code&gt;_CPack_Packages&lt;/code&gt; 서브 디렉토리도 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="a7292fafd59fdc6e4ad3dccbb8baf9788fcab04e" translate="yes" xml:space="preserve">
          <source>Override/define &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VENDOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VENDOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VENDOR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">재정 / 정의 &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VENDOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VENDOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VENDOR&lt;/code&gt; 을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d901968af00caba75a6efc24e15d3ba4fc9d5e6f" translate="yes" xml:space="preserve">
          <source>Override/define the value of the &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_NAME&quot; id=&quot;index-0-variable:CPACK_PACKAGE_NAME&quot;&gt;&lt;code&gt;CPACK_PACKAGE_NAME&lt;/code&gt;&lt;/a&gt; variable used for packaging. Any value set for this variable in the &lt;code&gt;CPackConfig.cmake&lt;/code&gt; file will then be ignored.</source>
          <target state="translated">패키징에 사용 된 &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_NAME&quot; id=&quot;index-0-variable:CPACK_PACKAGE_NAME&quot;&gt; &lt;code&gt;CPACK_PACKAGE_NAME&lt;/code&gt; &lt;/a&gt; 변수 의 값을 재정의 / 정의합니다 . &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 파일 에서이 변수에 설정된 모든 값 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="1ab54100489e396947952606c92ce779ecbe4a9e" translate="yes" xml:space="preserve">
          <source>Override/define the value of the &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION&lt;/code&gt;&lt;/a&gt; variable used for packaging. It will override a value set in the &lt;code&gt;CPackConfig.cmake&lt;/code&gt; file or one automatically computed from &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MAJOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MAJOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MINOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MINOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_PATCH&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_PATCH&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">패키징에 사용 된 &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION&lt;/code&gt; &lt;/a&gt; 변수 의 값을 재정의 / 정의합니다 . &lt;code&gt;CPackConfig.cmake&lt;/code&gt; 파일에 설정된 값 또는 &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MAJOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MAJOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_MINOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MINOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../module/cpack#variable:CPACK_PACKAGE_VERSION_PATCH&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_PATCH&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; &lt;/a&gt; 에서 자동으로 계산 된 값을 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="638b86b6fa6d48b49772e2c38147177479731832" translate="yes" xml:space="preserve">
          <source>Overrides the command used for the download step (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). If this option is specified, all other download options will be ignored. Providing an empty string for &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; effectively disables the download step.</source>
          <target state="translated">다운로드 단계에 사용 된 명령을 대체합니다 ( &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 이 지원됨). 이 옵션을 지정하면 다른 모든 다운로드 옵션이 무시됩니다. &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; 에 빈 문자열을 제공하면 다운로드 단계가 효과적으로 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="fe07d0eb814d45b5666dfca64f6e4b2bad5a8673" translate="yes" xml:space="preserve">
          <source>Overrides the default build command (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-5-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). If this option is not given, the default build command will be chosen to integrate with the main build in the most appropriate way (e.g. using recursive &lt;code&gt;make&lt;/code&gt; for Makefile generators or &lt;code&gt;cmake --build&lt;/code&gt; if the project uses a CMake build). This option can be specified with an empty string as the command to make the build step do nothing.</source>
          <target state="translated">기본 빌드 명령을 대체합니다 ( &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-5-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 이 지원됨). 이 옵션을 지정하지 않으면 기본 빌드 명령이 가장 적합한 방식으로 기본 빌드와 통합되도록 선택됩니다 (예 : 프로젝트가 CMake 빌드를 사용하는 경우 Makefile 생성기의 재귀 &lt;code&gt;make&lt;/code&gt; 또는 &lt;code&gt;cmake --build&lt;/code&gt; 사용). 이 옵션은 빌드 단계에서 아무것도하지 않도록하는 명령으로 빈 문자열로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01492b60c06af3d8f8d77d48bfb4bc7e5960729a" translate="yes" xml:space="preserve">
          <source>Overrides the default test command (&lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-7-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; are supported). If this option is not given, the default behavior of the test step is to build the external project&amp;rsquo;s own &lt;code&gt;test&lt;/code&gt; target. This option can be specified with &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; as an empty string, which allows the test step to still be defined, but it will do nothing. Do not specify any of the other &lt;code&gt;TEST_...&lt;/code&gt; options if providing an empty string as the test command, but prefer to omit all &lt;code&gt;TEST_...&lt;/code&gt; options altogether if the test step target is not needed.</source>
          <target state="translated">기본 테스트 명령을 대체합니다 ( &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-7-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 이 지원됨). 이 옵션을 지정하지 않으면 테스트 단계의 기본 동작은 외부 프로젝트 자체의 &lt;code&gt;test&lt;/code&gt; 대상 을 빌드하는 것 입니다. 이 옵션은 &lt;code&gt;&amp;lt;cmd&amp;gt;&lt;/code&gt; 를 빈 문자열로 지정 하여 테스트 단계를 계속 정의 할 수 있지만 아무 것도 수행하지 않습니다. 테스트 명령으로 빈 문자열을 제공하는 경우 다른 &lt;code&gt;TEST_...&lt;/code&gt; 옵션을 지정하지 말고 테스트 단계 대상이 필요하지 않은 경우 모든 &lt;code&gt;TEST_...&lt;/code&gt; 옵션을 모두 생략 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e42f58c8386993e0206bef0ef7c69ca77a4b2231" translate="yes" xml:space="preserve">
          <source>Overrides the download method&amp;rsquo;s update step with a custom command. The command may use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자 지정 명령으로 다운로드 방법의 업데이트 단계를 재정의합니다. 명령은 &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-1-manual:cmake-generator-expressions(7)&quot;&gt; &lt;code&gt;generator expressions&lt;/code&gt; &lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="264ff677acc7e78d8f342c25f0181efd3f98eb7e" translate="yes" xml:space="preserve">
          <source>Overwrite CTest configuration option.</source>
          <target state="translated">CTest 구성 옵션을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="665a8e0be08c636daa63c0bac43e01fac2e7241c" translate="yes" xml:space="preserve">
          <source>PACKAGES_FOUND</source>
          <target state="translated">PACKAGES_FOUND</target>
        </trans-unit>
        <trans-unit id="4bc224bbb0f7e2b2e3681c072de8fcf0a975a04b" translate="yes" xml:space="preserve">
          <source>PACKAGES_NOT_FOUND</source>
          <target state="translated">PACKAGES_NOT_FOUND</target>
        </trans-unit>
        <trans-unit id="84ff02f7dac86df480d8836122e9d4b4dd429842" translate="yes" xml:space="preserve">
          <source>PARENT_DIRECTORY</source>
          <target state="translated">PARENT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="6bcf76119ef22d667b52f5cb91cd4cd1fd701750" translate="yes" xml:space="preserve">
          <source>PARENT_GROUP, if supplied, names the parent group of this group. Parent groups are used to establish a hierarchy of groups, providing an arbitrary hierarchy of groups.</source>
          <target state="translated">PARENT_GROUP (제공된 경우)은이 그룹의 상위 그룹 이름을 지정합니다. 부모 그룹은 임의의 그룹 계층을 제공하여 그룹 계층을 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="765a36a81bd85e7b09f462729ed9db51efc19591" translate="yes" xml:space="preserve">
          <source>PASS_REGULAR_EXPRESSION</source>
          <target state="translated">PASS_REGULAR_EXPRESSION</target>
        </trans-unit>
        <trans-unit id="c1db62663da179bb41f28a57283ad50491197b8e" translate="yes" xml:space="preserve">
          <source>PDB_NAME</source>
          <target state="translated">PDB_NAME</target>
        </trans-unit>
        <trans-unit id="4f87246d0ad8666299503a93213abef196e5db87" translate="yes" xml:space="preserve">
          <source>PDB_NAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">PDB_NAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9e921119a948a7777a6c1fbd0e54908819a8d290" translate="yes" xml:space="preserve">
          <source>PDB_NAME_CONFIG</source>
          <target state="translated">PDB_NAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="dfa7c06e20acead154fc69b8e53b5e901c9b2727" translate="yes" xml:space="preserve">
          <source>PDB_OUTPUT_DIRECTORY</source>
          <target state="translated">PDB_OUTPUT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="a265cacfea2d2932769bef7ed7ca446e7f074e81" translate="yes" xml:space="preserve">
          <source>PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">PDB_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="e10fb8abcb6dd697a27813de8f2f3b249884d9de" translate="yes" xml:space="preserve">
          <source>PDB_OUTPUT_DIRECTORY_CONFIG</source>
          <target state="translated">PDB_OUTPUT_DIRECTORY_CONFIG</target>
        </trans-unit>
        <trans-unit id="1db9cc570b23ac46a3b520d988410fca96ca9145" translate="yes" xml:space="preserve">
          <source>PKGCONFIG(package includedir libdir linkflags cflags)</source>
          <target state="translated">PKGCONFIG (패키지 포함 libdir 링크 플래그 cflags)</target>
        </trans-unit>
        <trans-unit id="0faf1966db6726535cbd31ebafce7d48ec84ab37" translate="yes" xml:space="preserve">
          <source>PLIST gives a filename that is passed to pkgbuild with the &lt;code&gt;--component-plist&lt;/code&gt; argument when using the productbuild generator.</source>
          <target state="translated">PLIST는 제품 빌드 생성기를 사용할 때 &lt;code&gt;--component-plist&lt;/code&gt; 인수 와 함께 pkgbuild에 전달되는 파일 이름을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="5f17cf662dcfd0d8d192171312c95d2dc8c51434" translate="yes" xml:space="preserve">
          <source>POSITION_INDEPENDENT_CODE</source>
          <target state="translated">POSITION_INDEPENDENT_CODE</target>
        </trans-unit>
        <trans-unit id="20ed513115e392291d5121ffb66d5bb7379526b5" translate="yes" xml:space="preserve">
          <source>POST_INSTALL_SCRIPT</source>
          <target state="translated">POST_INSTALL_SCRIPT</target>
        </trans-unit>
        <trans-unit id="418ea1730dc3c4dc9a7329e859a02f2fd5148f4d" translate="yes" xml:space="preserve">
          <source>PREDEFINED_TARGETS_FOLDER</source>
          <target state="translated">PREDEFINED_TARGETS_FOLDER</target>
        </trans-unit>
        <trans-unit id="890121a7a9c78fd5d5d495e5aa9c86c681e6fbbb" translate="yes" xml:space="preserve">
          <source>PREFIX</source>
          <target state="translated">PREFIX</target>
        </trans-unit>
        <trans-unit id="791d0020f51578dfb5eff96143a026d7b67b24e0" translate="yes" xml:space="preserve">
          <source>PRE_INSTALL_SCRIPT</source>
          <target state="translated">PRE_INSTALL_SCRIPT</target>
        </trans-unit>
        <trans-unit id="8d49cd64c4a22b9fafd9722599d8c185a52449a7" translate="yes" xml:space="preserve">
          <source>PRIVATE_HEADER</source>
          <target state="translated">PRIVATE_HEADER</target>
        </trans-unit>
        <trans-unit id="ee1781533c5c7b392b78ee0ca1d0cc24897ef0b1" translate="yes" xml:space="preserve">
          <source>PROCESSORS</source>
          <target state="translated">PROCESSORS</target>
        </trans-unit>
        <trans-unit id="4353202ce875e7a88d23cbe7980bcaf41a661e32" translate="yes" xml:space="preserve">
          <source>PROCESSOR_AFFINITY</source>
          <target state="translated">PROCESSOR_AFFINITY</target>
        </trans-unit>
        <trans-unit id="e0bc918a3e342f3de5599dfd0387fd86fd7c66cc" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_BINARY_DIR</source>
          <target state="translated">PROJECT-NAME_BINARY_DIR</target>
        </trans-unit>
        <trans-unit id="02217c972d1c202a71238505a99e44d37e4409df" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_DESCRIPTION</source>
          <target state="translated">PROJECT-NAME_DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="c6df2ef0693fc488b86da382a2e9e798f75e59b0" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_HOMEPAGE_URL</source>
          <target state="translated">PROJECT-NAME_HOMEPAGE_URL</target>
        </trans-unit>
        <trans-unit id="2d430e600c23dfa8bf41811de6e5343642f1351e" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_SOURCE_DIR</source>
          <target state="translated">PROJECT-NAME_SOURCE_DIR</target>
        </trans-unit>
        <trans-unit id="5ea705c22e1f6651c65893b3ea47bea1461cf10e" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION</source>
          <target state="translated">PROJECT-NAME_VERSION</target>
        </trans-unit>
        <trans-unit id="d47b86f407626f00df89532460c830200fec1815" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION_MAJOR</source>
          <target state="translated">PROJECT-NAME_VERSION_MAJOR</target>
        </trans-unit>
        <trans-unit id="3fac9f95ad17c79c078e8341052cd5307c8022d8" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION_MINOR</source>
          <target state="translated">PROJECT-NAME_VERSION_MINOR</target>
        </trans-unit>
        <trans-unit id="9b55e4a5bd7bf0adf37c0db810453b26ad997bf5" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION_PATCH</source>
          <target state="translated">PROJECT-NAME_VERSION_PATCH</target>
        </trans-unit>
        <trans-unit id="04ba0c6f30c0dc2b8c2350e096a68fbb68ecd5a2" translate="yes" xml:space="preserve">
          <source>PROJECT-NAME_VERSION_TWEAK</source>
          <target state="translated">PROJECT-NAME_VERSION_TWEAK</target>
        </trans-unit>
        <trans-unit id="63a25519ed955888d0e53c35af88c7fe66730fe1" translate="yes" xml:space="preserve">
          <source>PROJECT_BINARY_DIR</source>
          <target state="translated">PROJECT_BINARY_DIR</target>
        </trans-unit>
        <trans-unit id="4bc19c04848216a47338d567fd428f6d1c511519" translate="yes" xml:space="preserve">
          <source>PROJECT_DESCRIPTION</source>
          <target state="translated">PROJECT_DESCRIPTION</target>
        </trans-unit>
        <trans-unit id="72a1dbea86c8798e7eaab2310567e5bb38b482ed" translate="yes" xml:space="preserve">
          <source>PROJECT_HOMEPAGE_URL</source>
          <target state="translated">PROJECT_HOMEPAGE_URL</target>
        </trans-unit>
        <trans-unit id="c673855072a3c37c5f3be8518433b652ef87187a" translate="yes" xml:space="preserve">
          <source>PROJECT_LABEL</source>
          <target state="translated">PROJECT_LABEL</target>
        </trans-unit>
        <trans-unit id="0138a5e2e4eff557ee4a2cef825e2de35faf0729" translate="yes" xml:space="preserve">
          <source>PROJECT_NAME</source>
          <target state="translated">PROJECT_NAME</target>
        </trans-unit>
        <trans-unit id="e45f39055bb96d89f30b1f9ffdc0f00fc750b87a" translate="yes" xml:space="preserve">
          <source>PROJECT_SOURCE_DIR</source>
          <target state="translated">PROJECT_SOURCE_DIR</target>
        </trans-unit>
        <trans-unit id="b174f35aa53b67f4408f2fb6e9ddaa434ba19443" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION</source>
          <target state="translated">PROJECT_VERSION</target>
        </trans-unit>
        <trans-unit id="f8403e7606eed993bba2fa83a8160b3ec88dc7ef" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION_MAJOR</source>
          <target state="translated">PROJECT_VERSION_MAJOR</target>
        </trans-unit>
        <trans-unit id="db1988f8a31be3e36fd9ea29b0931a4861fe8b7a" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION_MINOR</source>
          <target state="translated">PROJECT_VERSION_MINOR</target>
        </trans-unit>
        <trans-unit id="8d3e41b5c83cc2df3f452d12c283123fe0d78348" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION_PATCH</source>
          <target state="translated">PROJECT_VERSION_PATCH</target>
        </trans-unit>
        <trans-unit id="23875c278b713e5447bf4f9d34039b773f265017" translate="yes" xml:space="preserve">
          <source>PROJECT_VERSION_TWEAK</source>
          <target state="translated">PROJECT_VERSION_TWEAK</target>
        </trans-unit>
        <trans-unit id="19e3b34c0a3c641d43c92a2bdd24f329abc90189" translate="yes" xml:space="preserve">
          <source>PUBLIC_HEADER</source>
          <target state="translated">PUBLIC_HEADER</target>
        </trans-unit>
        <trans-unit id="0bc313af33dbb0549e4ef746d2de3883c504e1a8" translate="yes" xml:space="preserve">
          <source>Package Configuration File</source>
          <target state="translated">패키지 구성 파일</target>
        </trans-unit>
        <trans-unit id="599cc2bcb32b78fd76217ca9ce7962c6cb0609b0" translate="yes" xml:space="preserve">
          <source>Package File Interface Variables</source>
          <target state="translated">패키지 파일 인터페이스 변수</target>
        </trans-unit>
        <trans-unit id="960861456dabfcb43f15448e13c89e85cc543535" translate="yes" xml:space="preserve">
          <source>Package Layout</source>
          <target state="translated">패키지 레이아웃</target>
        </trans-unit>
        <trans-unit id="2f7a3957ff9261064316c9292f2ba7f75c73e61b" translate="yes" xml:space="preserve">
          <source>Package Registry</source>
          <target state="translated">패키지 레지스트리</target>
        </trans-unit>
        <trans-unit id="df605cb0545d8d1fb53a0b9597f50c4d9be8bc9f" translate="yes" xml:space="preserve">
          <source>Package Registry Example</source>
          <target state="translated">패키지 레지스트리 예</target>
        </trans-unit>
        <trans-unit id="bbd334bcd98c436cb073f762c5877fb86ec6b409" translate="yes" xml:space="preserve">
          <source>Package Registry Ownership</source>
          <target state="translated">패키지 레지스트리 소유권</target>
        </trans-unit>
        <trans-unit id="9b294d037e37fb0fa6e9edb4e167cc344dd3020f" translate="yes" xml:space="preserve">
          <source>Package Version File</source>
          <target state="translated">패키지 버전 파일</target>
        </trans-unit>
        <trans-unit id="173afc01c4f40622162232e1763aba912052906f" translate="yes" xml:space="preserve">
          <source>Package full version, used internally. By default, this is built from &lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_MAJOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MAJOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_MINOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MINOR&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_PATCH&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_PATCH&quot;&gt;&lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">내부에서 사용되는 패키지 정식 버전. 기본적으로 &lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_MAJOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MAJOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_MINOR&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_MINOR&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#variable:CPACK_PACKAGE_VERSION_PATCH&quot; id=&quot;index-0-variable:CPACK_PACKAGE_VERSION_PATCH&quot;&gt; &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; 에서 빌드&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="06a5c64cbe1727d0fbead485569c6ace32a85649" translate="yes" xml:space="preserve">
          <source>Package maintainers providing CMake package configuration files are encouraged to name and install them such that the &lt;a href=&quot;#search-procedure&quot;&gt;Search Procedure&lt;/a&gt; outlined below will find them without requiring use of additional options.</source>
          <target state="translated">CMake 패키지 구성 파일을 제공하는 패키지 관리자 는 추가 옵션을 사용하지 않고도 아래에 설명 된 &lt;a href=&quot;#search-procedure&quot;&gt;검색 절차에서&lt;/a&gt; 파일을 찾을 수 있도록 이름을 지정하고 설치하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="a655d04336e25842aafa559717e4fa32a737013f" translate="yes" xml:space="preserve">
          <source>Package major version. This variable will always be set, but its default value depends on whether or not version details were given to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command in the top level CMakeLists.txt file. If version details were given, the default value will be &lt;a href=&quot;../variable/cmake_project_version_major#variable:CMAKE_PROJECT_VERSION_MAJOR&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_MAJOR&quot;&gt;&lt;code&gt;CMAKE_PROJECT_VERSION_MAJOR&lt;/code&gt;&lt;/a&gt;. If no version details were given, a default version of 0.1.1 will be assumed, leading to &lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt; having a default value of 0.</source>
          <target state="translated">패키지 메이저 버전. 이 변수는 항상 설정되지만 기본값 은 최상위 CMakeLists.txt 파일 의 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령에 버전 세부 정보가 제공되었는지 여부에 따라 다릅니다 . 버전 세부 사항이 제공된 경우 기본값은 &lt;a href=&quot;../variable/cmake_project_version_major#variable:CMAKE_PROJECT_VERSION_MAJOR&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_MAJOR&quot;&gt; &lt;code&gt;CMAKE_PROJECT_VERSION_MAJOR&lt;/code&gt; &lt;/a&gt; 입니다. 버전 세부 사항이 제공되지 않으면 기본 버전 0.1.1이 가정되어 &lt;code&gt;CPACK_PACKAGE_VERSION_MAJOR&lt;/code&gt; 가 기본값 0 을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="65a68477af5d3066989a09e8d07c6de26530b3cc" translate="yes" xml:space="preserve">
          <source>Package minor version. The default value is determined based on whether or not version details were given to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command in the top level CMakeLists.txt file. If version details were given, the default value will be &lt;a href=&quot;../variable/cmake_project_version_minor#variable:CMAKE_PROJECT_VERSION_MINOR&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_MINOR&quot;&gt;&lt;code&gt;CMAKE_PROJECT_VERSION_MINOR&lt;/code&gt;&lt;/a&gt;, but if no minor version component was specified then &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; will be left unset. If no project version was given at all, a default version of 0.1.1 will be assumed, leading to &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; having a default value of 1.</source>
          <target state="translated">패키지 부 버전. 기본값은 최상위 CMakeLists.txt 파일 의 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령에 버전 세부 정보가 제공되었는지 여부에 따라 결정 됩니다. 버전 세부 사항이 제공되면 기본값은 &lt;a href=&quot;../variable/cmake_project_version_minor#variable:CMAKE_PROJECT_VERSION_MINOR&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_MINOR&quot;&gt; &lt;code&gt;CMAKE_PROJECT_VERSION_MINOR&lt;/code&gt; &lt;/a&gt; 이지만 부 버전 구성 요소가 지정 되지 않은 경우 &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; 은 설정되지 않은 상태로 남아 있습니다. 프로젝트 버전이 전혀 제공되지 않으면 기본 버전 0.1.1이 가정되어 &lt;code&gt;CPACK_PACKAGE_VERSION_MINOR&lt;/code&gt; 의 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="89d0b0911758a0158ffeb6c6cc405febc0e0b7fe" translate="yes" xml:space="preserve">
          <source>Package patch version. The default value is determined based on whether or not version details were given to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command in the top level CMakeLists.txt file. If version details were given, the default value will be &lt;a href=&quot;../variable/cmake_project_version_patch#variable:CMAKE_PROJECT_VERSION_PATCH&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_PATCH&quot;&gt;&lt;code&gt;CMAKE_PROJECT_VERSION_PATCH&lt;/code&gt;&lt;/a&gt;, but if no patch version component was specified then &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; will be left unset. If no project version was given at all, a default version of 0.1.1 will be assumed, leading to &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; having a default value of 1.</source>
          <target state="translated">패키지 패치 버전. 기본값은 최상위 CMakeLists.txt 파일 의 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-2-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령에 버전 세부 정보가 제공되었는지 여부에 따라 결정 됩니다. 버전 세부 사항이 제공된 경우 기본값은 &lt;a href=&quot;../variable/cmake_project_version_patch#variable:CMAKE_PROJECT_VERSION_PATCH&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION_PATCH&quot;&gt; &lt;code&gt;CMAKE_PROJECT_VERSION_PATCH&lt;/code&gt; &lt;/a&gt; 이지만 패치 버전 구성 요소가 지정 되지 않은 경우 &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; 는 설정되지 않은 상태로 남아 있습니다. 프로젝트 버전이 전혀 제공되지 않은 경우 기본 버전 0.1.1이 가정되어 &lt;code&gt;CPACK_PACKAGE_VERSION_PATCH&lt;/code&gt; 의 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="1956b440bc160c57aad0b8165a3274f651d02b39" translate="yes" xml:space="preserve">
          <source>Package registry entries are individually owned by the project installations that they reference. A package installer is responsible for adding its own entry and the corresponding uninstaller is responsible for removing it.</source>
          <target state="translated">패키지 레지스트리 항목은 참조하는 프로젝트 설치에서 개별적으로 소유합니다. 패키지 설치 관리자는 자체 항목을 추가해야하며 해당 제거 관리자는 해당 항목을 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="ba9e06f3043d83b0d36c5334b696ad0aeefc6240" translate="yes" xml:space="preserve">
          <source>PackageName_ROOT</source>
          <target state="translated">PackageName_ROOT</target>
        </trans-unit>
        <trans-unit id="0a999012ffb87b3edac99adbdfc498b12831a1e2" translate="yes" xml:space="preserve">
          <source>Packages</source>
          <target state="translated">Packages</target>
        </trans-unit>
        <trans-unit id="ab582a4b4d47dddaba2562e40670bc42996910a4" translate="yes" xml:space="preserve">
          <source>Packages created by &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-3-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; are designed to be relocatable, using paths relative to the location of the package itself. When defining the interface of a target for &lt;code&gt;EXPORT&lt;/code&gt;, keep in mind that the include directories should be specified as relative paths which are relative to the &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt;&lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-3-command:install&quot;&gt; &lt;code&gt;install(EXPORT)&lt;/code&gt; &lt;/a&gt; 작성된 패키지 는 패키지 자체의 위치에 상대적인 경로를 사용하여 재배치 가능하도록 설계되었습니다. &lt;code&gt;EXPORT&lt;/code&gt; 대상의 인터페이스를 정의 할 때 include 디렉토리는 &lt;a href=&quot;../variable/cmake_install_prefix#variable:CMAKE_INSTALL_PREFIX&quot; id=&quot;index-1-variable:CMAKE_INSTALL_PREFIX&quot;&gt; &lt;code&gt;CMAKE_INSTALL_PREFIX&lt;/code&gt; 에&lt;/a&gt; 상대적인 상대 경로로 지정되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="dc0f3dea95472da473a0a274cbb347124189762f" translate="yes" xml:space="preserve">
          <source>Packages provide dependency information to CMake based buildsystems. Packages are found with the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command. The result of using &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; is either a set of &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets, or a set of variables corresponding to build-relevant information.</source>
          <target state="translated">패키지는 CMake 기반 빌드 시스템에 종속성 정보를 제공합니다. 패키지는 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 명령 으로 찾을 수 있습니다. 사용한 결과 &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 하나의 집합 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-0-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 대상 또는 빌드 관련 정보에 대응하는 변수의 세트.</target>
        </trans-unit>
        <trans-unit id="2b435559e4958264fc983563be55defed112e3fb" translate="yes" xml:space="preserve">
          <source>Packages that find multiple semi-independent parts (like bundles of libraries) should search for the components listed in &lt;code&gt;Foo_FIND_COMPONENTS&lt;/code&gt; if it is set , and only set &lt;code&gt;Foo_FOUND&lt;/code&gt; to true if for each searched-for component &lt;code&gt;&amp;lt;c&amp;gt;&lt;/code&gt; that was not found, &lt;code&gt;Foo_FIND_REQUIRED_&amp;lt;c&amp;gt;&lt;/code&gt; is not set to true. The &lt;code&gt;HANDLE_COMPONENTS&lt;/code&gt; argument of &lt;code&gt;find_package_handle_standard_args()&lt;/code&gt; can be used to implement this.</source>
          <target state="translated">(라이브러리의 번들 같은) 여러 반 독립적 인 부분을 찾을 패키지에 나열된 구성 요소를 검색한다 &lt;code&gt;Foo_FIND_COMPONENTS&lt;/code&gt; 이 설정되어있는 경우, 만 설정 &lt;code&gt;Foo_FOUND&lt;/code&gt; 를 각각 검색-위해 대한 경우 구성 요소 true로 &lt;code&gt;&amp;lt;c&amp;gt;&lt;/code&gt; 찾을 수 없습니다 &lt;code&gt;Foo_FIND_REQUIRED_&amp;lt;c&amp;gt;&lt;/code&gt; 가 true로 설정되지 않았습니다. &lt;code&gt;find_package_handle_standard_args()&lt;/code&gt; 의 &lt;code&gt;HANDLE_COMPONENTS&lt;/code&gt; 인수를 사용하여이를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e32098b11ab3862cf0ca1bdc51751217b15de476" translate="yes" xml:space="preserve">
          <source>Parse a list of ASCII strings from &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; and store it in &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;. Binary data in the file are ignored. Carriage return (&lt;code&gt;\r&lt;/code&gt;, CR) characters are ignored. The options are:</source>
          <target state="translated">&lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; 에서 ASCII 문자열 목록을 구문 분석하여 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 에 저장하십시오 . 파일의 이진 데이터는 무시됩니다. 캐리지 리턴 ( &lt;code&gt;\r&lt;/code&gt; , CR) 문자는 무시됩니다. 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="162ad98a23544e5062cae919f6ce2562f79ee311" translate="yes" xml:space="preserve">
          <source>Parse command-line arguments into a semicolon-separated list.</source>
          <target state="translated">명령 행 인수를 세미콜론으로 구분 된 목록으로 구문 분석하십시오.</target>
        </trans-unit>
        <trans-unit id="3babb6c4a27872a21e1bb1d156e50d95771f51cf" translate="yes" xml:space="preserve">
          <source>Parse function or macro arguments.</source>
          <target state="translated">함수 또는 매크로 인수를 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="587c6e4674d1312db70bd70a2666661f8078b8bb" translate="yes" xml:space="preserve">
          <source>Parses a space-separated string &lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; into a list of items, and stores this list in semicolon-separated standard form in &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">공백으로 구분 된 문자열 &lt;code&gt;&amp;lt;args&amp;gt;&lt;/code&gt; 를 항목 목록으로 구문 분석 하고이 목록을 세미콜론으로 구분 된 표준 양식으로 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 로 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f515a9b7e499bdc8744c4a41b9c2c722b1fa019" translate="yes" xml:space="preserve">
          <source>Pass a generator-specific instance selection to the CMake command (see &lt;a href=&quot;../variable/cmake_generator_instance#variable:CMAKE_GENERATOR_INSTANCE&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_INSTANCE&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_INSTANCE&lt;/code&gt;&lt;/a&gt;). It is an error to provide this option without the &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; option.</source>
          <target state="translated">생성기 별 인스턴스 선택을 CMake 명령에 전달하십시오 ( &lt;a href=&quot;../variable/cmake_generator_instance#variable:CMAKE_GENERATOR_INSTANCE&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_INSTANCE&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_INSTANCE&lt;/code&gt; &lt;/a&gt; 참조 ). &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; 옵션 없이이 옵션 을 제공하는 것은 오류 입니다.</target>
        </trans-unit>
        <trans-unit id="33fb58dcadf10abda2ea068bc5ce4e089ca9af73" translate="yes" xml:space="preserve">
          <source>Pass a generator-specific platform name to the CMake command (see &lt;a href=&quot;../variable/cmake_generator_platform#variable:CMAKE_GENERATOR_PLATFORM&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_PLATFORM&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt;&lt;/a&gt;). It is an error to provide this option without the &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; option.</source>
          <target state="translated">CMake 명령에 생성기 별 플랫폼 이름을 전달하십시오 ( &lt;a href=&quot;../variable/cmake_generator_platform#variable:CMAKE_GENERATOR_PLATFORM&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_PLATFORM&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt; &lt;/a&gt; 참조 ). &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; 옵션 없이이 옵션 을 제공하는 것은 오류 입니다.</target>
        </trans-unit>
        <trans-unit id="9cc4881aaea7b3dd0055a8abab114e7de0866927" translate="yes" xml:space="preserve">
          <source>Pass a generator-specific toolset name to the CMake command (see &lt;a href=&quot;../variable/cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt;&lt;/a&gt;). It is an error to provide this option without the &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; option.</source>
          <target state="translated">생성기 별 도구 세트 이름을 CMake 명령에 전달하십시오 ( &lt;a href=&quot;../variable/cmake_generator_toolset#variable:CMAKE_GENERATOR_TOOLSET&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_TOOLSET&quot;&gt; &lt;code&gt;CMAKE_GENERATOR_TOOLSET&lt;/code&gt; &lt;/a&gt; 참조 ). &lt;code&gt;CMAKE_GENERATOR&lt;/code&gt; 옵션 없이이 옵션 을 제공하는 것은 오류 입니다.</target>
        </trans-unit>
        <trans-unit id="06bfce4fc6303353fd89c798c110f9ed156e32a6" translate="yes" xml:space="preserve">
          <source>Pass additional arguments to the underlying build command. If not specified the &lt;code&gt;CTEST_BUILD_FLAGS&lt;/code&gt; variable will be checked. This can, e.g., be used to trigger a parallel build using the &lt;code&gt;-j&lt;/code&gt; option of make. See the &lt;a href=&quot;../module/processorcount#module:ProcessorCount&quot; id=&quot;index-0-module:ProcessorCount&quot;&gt;&lt;code&gt;ProcessorCount&lt;/code&gt;&lt;/a&gt; module for an example.</source>
          <target state="translated">기본 빌드 명령에 추가 인수를 전달하십시오. 지정하지 않으면 &lt;code&gt;CTEST_BUILD_FLAGS&lt;/code&gt; 변수가 검사됩니다. 예를 들어 make 의 &lt;code&gt;-j&lt;/code&gt; 옵션을 사용하여 병렬 빌드를 트리거하는 데 사용할 수 있습니다 . 예 는 &lt;a href=&quot;../module/processorcount#module:ProcessorCount&quot; id=&quot;index-0-module:ProcessorCount&quot;&gt; &lt;code&gt;ProcessorCount&lt;/code&gt; &lt;/a&gt; 모듈을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c0254cd5dd52c1e3efb742988f5dd5b210ae782" translate="yes" xml:space="preserve">
          <source>Pass in variable values on the command line. Use in conjunction with &lt;code&gt;-S&lt;/code&gt; to pass variable values to a dashboard script. Parsing &lt;code&gt;-D&lt;/code&gt; arguments as variable values is only attempted if the value following &lt;code&gt;-D&lt;/code&gt; does not match any of the known dashboard types.</source>
          <target state="translated">명령 행에서 변수 값을 전달하십시오. 변수 값을 대시 보드 스크립트에 전달 하려면 &lt;code&gt;-S&lt;/code&gt; 와 함께 사용하십시오 . 구문 분석 &lt;code&gt;-D&lt;/code&gt; 값 다음과 같은 경우 변수 값 등의 인수는 시도 &lt;code&gt;-D&lt;/code&gt; 는 알려진 대시 보드의 유형과 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="96ac495c7b78e401bdf2fe425d46df882268ce4e" translate="yes" xml:space="preserve">
          <source>Pass remaining options to the native tool.</source>
          <target state="translated">나머지 옵션을 기본 도구로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="cd1ee2548ae7cf105ea1b7df893459a49c084585" translate="yes" xml:space="preserve">
          <source>Password for the Subversion checkout and update.</source>
          <target state="translated">Subversion 체크 아웃 및 업데이트를위한 비밀번호입니다.</target>
        </trans-unit>
        <trans-unit id="e1b2da3e62111c268d6e481272003d344d3c3673" translate="yes" xml:space="preserve">
          <source>Password for the download operation if authentication is required.</source>
          <target state="translated">인증이 필요한 경우 다운로드 작업을위한 비밀번호입니다.</target>
        </trans-unit>
        <trans-unit id="3c13e146aa6f573d1a243a44ff8054e8798285fd" translate="yes" xml:space="preserve">
          <source>Patch version if provided, else 0</source>
          <target state="translated">제공되는 경우 패치 버전, 그렇지 않은 경우 0</target>
        </trans-unit>
        <trans-unit id="59fc759542412da7d7e30b0bd6718c781b7d4ea8" translate="yes" xml:space="preserve">
          <source>Patch version if requested, else 0</source>
          <target state="translated">요청 된 경우 패치 버전, 그렇지 않으면 0</target>
        </trans-unit>
        <trans-unit id="cc08993bcba21ce2a1f5678fae51c504cf2e7a29" translate="yes" xml:space="preserve">
          <source>Patch version of CMake used to create the &lt;code&gt;CMakeCache.txt&lt;/code&gt; file</source>
          <target state="translated">&lt;code&gt;CMakeCache.txt&lt;/code&gt; 파일 을 작성하는 데 사용되는 CMake의 패치 버전</target>
        </trans-unit>
        <trans-unit id="e173739a90dcad0702af51463c8395979113bb50" translate="yes" xml:space="preserve">
          <source>Path Conversion</source>
          <target state="translated">경로 변환</target>
        </trans-unit>
        <trans-unit id="ca5bc9ff6f48469d567826b31bce83bd1ddd88eb" translate="yes" xml:space="preserve">
          <source>Path components have to be separated by forward slashes, must be normalized and are case sensitive.</source>
          <target state="translated">경로 구성 요소는 슬래시로 구분해야하며 정규화되어야하며 대소 문자를 구분해야합니다.</target>
        </trans-unit>
        <trans-unit id="3890ce321e531fcee70fadf086917c2d555e520d" translate="yes" xml:space="preserve">
          <source>Path to Curses include. Use &lt;code&gt;CURSES_INCLUDE_DIRS&lt;/code&gt; instead.</source>
          <target state="translated">저주 경로는 다음과 같습니다. 대신 &lt;code&gt;CURSES_INCLUDE_DIRS&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d6ae2951cce73f7e978fc2656492a6ddf7532d6" translate="yes" xml:space="preserve">
          <source>Path to Curses library. Use &lt;code&gt;CURSES_LIBRARIES&lt;/code&gt; instead.</source>
          <target state="translated">Curses 라이브러리 경로. 대신 &lt;code&gt;CURSES_LIBRARIES&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b2d61b895f78a436baae6fb142f6eb04a19a9ca7" translate="yes" xml:space="preserve">
          <source>Path to Git command-line client.</source>
          <target state="translated">Git 명령 행 클라이언트의 경로.</target>
        </trans-unit>
        <trans-unit id="a5228380c1ca06692b72b9fe6bce467bdabcd902" translate="yes" xml:space="preserve">
          <source>Path to ODBC include directory with &lt;code&gt;sql.h&lt;/code&gt; header.</source>
          <target state="translated">ODBC 경로는 &lt;code&gt;sql.h&lt;/code&gt; 헤더가있는 디렉토리를 포함 합니다.</target>
        </trans-unit>
        <trans-unit id="e9438c57084c65e8c8cfaf56277770f1bb010d72" translate="yes" xml:space="preserve">
          <source>Path to ODBC library to be linked.</source>
          <target state="translated">연결할 ODBC 라이브러리의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="e7e2de4f494ffa98a159b4d2fccc4ad4efff951c" translate="yes" xml:space="preserve">
          <source>Path to a directory on disk. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-2-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; offers a file dialog.</source>
          <target state="translated">디스크의 디렉토리 경로. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-2-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; 은 파일 대화 상자를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="543a66a40bcf570e10830c40965b3c902bea3128" translate="yes" xml:space="preserve">
          <source>Path to a file on disk. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-1-manual:cmake-gui(1)&quot;&gt;&lt;code&gt;cmake-gui(1)&lt;/code&gt;&lt;/a&gt; offers a file dialog.</source>
          <target state="translated">디스크의 파일 경로. &lt;a href=&quot;../manual/cmake-gui.1#manual:cmake-gui(1)&quot; id=&quot;index-1-manual:cmake-gui(1)&quot;&gt; &lt;code&gt;cmake-gui(1)&lt;/code&gt; &lt;/a&gt; 은 파일 대화 상자를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f35388b377bab54db1bb2a0af3cbe3571e708a1d" translate="yes" xml:space="preserve">
          <source>Path to directory which CMake will use as the root of build directory.</source>
          <target state="translated">CMake가 빌드 디렉토리의 루트로 사용할 디렉토리 경로.</target>
        </trans-unit>
        <trans-unit id="b2eb5a661ed29bd35d16e08afc53f977bbaedf37" translate="yes" xml:space="preserve">
          <source>Path to pass to the compiler in the &lt;code&gt;--sysroot&lt;/code&gt; flag when compiling source files. This is the same as &lt;a href=&quot;cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; but is used only for compiling sources and not linking.</source>
          <target state="translated">소스 파일을 컴파일 할 때 &lt;code&gt;--sysroot&lt;/code&gt; 플래그로 컴파일러에 전달할 경로 입니다. 이것은 &lt;a href=&quot;cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 링크를 컴파일하지 않고 소스를 컴파일하는 데만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a28897d0c48a5231708d6be614e3b980717a352b" translate="yes" xml:space="preserve">
          <source>Path to pass to the compiler in the &lt;code&gt;--sysroot&lt;/code&gt; flag when linking. This is the same as &lt;a href=&quot;cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; but is used only for linking and not compiling sources.</source>
          <target state="translated">연결할 때 &lt;code&gt;--sysroot&lt;/code&gt; 플래그로 컴파일러에 전달할 경로 입니다. 이것은 &lt;a href=&quot;cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt; &lt;code&gt;CMAKE_SYSROOT&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 소스를 링크하지 않고 컴파일하는 데에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="238c56f58d9db0abc2f1847a6dddb1a56bdcdf59" translate="yes" xml:space="preserve">
          <source>Path to pass to the compiler in the &lt;code&gt;--sysroot&lt;/code&gt; flag.</source>
          <target state="translated">&lt;code&gt;--sysroot&lt;/code&gt; 플래그 에서 컴파일러에 전달할 경로 입니다.</target>
        </trans-unit>
        <trans-unit id="5f723dbdc1ce76254cdcb0cd25f0873a01e413da" translate="yes" xml:space="preserve">
          <source>Path to patch command-line executable.</source>
          <target state="translated">패치 명령 줄 실행 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="5b1c8a8da864a9bd48a0cfc132fa20ff231c0fd5" translate="yes" xml:space="preserve">
          <source>Path to root directory of the CMake project to build.</source>
          <target state="translated">빌드 할 CMake 프로젝트의 루트 디렉토리 경로입니다.</target>
        </trans-unit>
        <trans-unit id="5d74b2aca3344a205fef5094d7fa476abf81a3f8" translate="yes" xml:space="preserve">
          <source>Path to the EGL include directory.</source>
          <target state="translated">EGL 포함 디렉토리의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="0cba96ab6a398071866a846f5b5938b7d75dc066" translate="yes" xml:space="preserve">
          <source>Path to the EGL library.</source>
          <target state="translated">EGL 라이브러리의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="5d978f93735411ece304deaa9047928907e79ed1" translate="yes" xml:space="preserve">
          <source>Path to the FLUID binary tool</source>
          <target state="translated">FLUID 바이너리 도구의 경로</target>
        </trans-unit>
        <trans-unit id="21e85ceb4db67d3c1cc36a9fb4133ee7589d375d" translate="yes" xml:space="preserve">
          <source>Path to the GLU library.</source>
          <target state="translated">GLU 라이브러리의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="4971a017f826708948394180de5d937014561af8" translate="yes" xml:space="preserve">
          <source>Path to the GLVND &amp;lsquo;GLX&amp;rsquo; library.</source>
          <target state="translated">GLVND 'GLX'라이브러리의 경로.</target>
        </trans-unit>
        <trans-unit id="9049d7b18c4ec15df30ff528945a02dde7404df9" translate="yes" xml:space="preserve">
          <source>Path to the GLVND &amp;lsquo;OpenGL&amp;rsquo; library</source>
          <target state="translated">GLVND 'OpenGL'라이브러리의 경로</target>
        </trans-unit>
        <trans-unit id="edacbe7f7d558abccc6e8ae14355dc57437b0ee8" translate="yes" xml:space="preserve">
          <source>Path to the OpenGL include directory.</source>
          <target state="translated">OpenGL 포함 디렉토리의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="33c912e637011c432d81cc0bf9908a1d4e4dd0f8" translate="yes" xml:space="preserve">
          <source>Path to the OpenGL library. New code should prefer the &lt;code&gt;OpenGL::*&lt;/code&gt; import targets.</source>
          <target state="translated">OpenGL 라이브러리의 경로입니다. 새 코드는 &lt;code&gt;OpenGL::*&lt;/code&gt; 가져 오기 대상을 선호해야합니다 .</target>
        </trans-unit>
        <trans-unit id="3722cc239632510b6039ef728557ffd40d3abce9" translate="yes" xml:space="preserve">
          <source>Path to the Python 2 compiler. Only offered by IronPython.</source>
          <target state="translated">Python 2 컴파일러의 경로입니다. IronPython에서만 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b7402065c512cbdc549cde82c01d0bc8742439a8" translate="yes" xml:space="preserve">
          <source>Path to the Python 2 interpreter.</source>
          <target state="translated">파이썬 2 인터프리터의 경로.</target>
        </trans-unit>
        <trans-unit id="f7c24cc8a5447339a323d2ed42718d7b46e2ba98" translate="yes" xml:space="preserve">
          <source>Path to the Python 3 compiler. Only offered by IronPython.</source>
          <target state="translated">Python 3 컴파일러의 경로입니다. IronPython에서만 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="9ffc326ac29472bf0ee914658d468ce76ce9d0bf" translate="yes" xml:space="preserve">
          <source>Path to the Python 3 interpreter.</source>
          <target state="translated">파이썬 3 인터프리터로가는 길.</target>
        </trans-unit>
        <trans-unit id="97082577f0467f149470ab404496e88a864a2297" translate="yes" xml:space="preserve">
          <source>Path to the Python compiler. Only offered by IronPython.</source>
          <target state="translated">파이썬 컴파일러의 경로. IronPython에서만 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="10cecdcca7bb95bca736cda482c7f507ff03c4f9" translate="yes" xml:space="preserve">
          <source>Path to the Python interpreter.</source>
          <target state="translated">파이썬 인터프리터의 경로.</target>
        </trans-unit>
        <trans-unit id="b966f7169a51295d364e1630360402d56749cb0c" translate="yes" xml:space="preserve">
          <source>Path to the include directory for FLTK header files</source>
          <target state="translated">FLTK 헤더 파일의 포함 디렉토리 경로</target>
        </trans-unit>
        <trans-unit id="43034ad4230b452314c1f3ac0c7823242978620b" translate="yes" xml:space="preserve">
          <source>Path to the input file. A relative path is treated with respect to the value of &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;. The input path must be a file, not a directory.</source>
          <target state="translated">입력 파일의 경로입니다. 상대 경로는 &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; 값과 관련하여 처리됩니다 . 입력 경로는 디렉토리가 아닌 파일이어야합니다.</target>
        </trans-unit>
        <trans-unit id="852dbd97a95bfc42990f685a7213b9fb2c994d0c" translate="yes" xml:space="preserve">
          <source>Path to the output file or directory. A relative path is treated with respect to the value of &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt;. If the path names an existing directory the output file is placed in that directory with the same file name as the input file.</source>
          <target state="translated">출력 파일 또는 디렉토리의 경로입니다. 상대 경로는 &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt; &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; &lt;/a&gt; 값과 관련하여 처리됩니다 . 경로에 기존 디렉토리 이름이 지정된 경우 출력 파일은 입력 파일과 동일한 파일 이름으로 해당 디렉토리에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="976f1ceeab16cbf6790d065ccfbbcd310150b1ed" translate="yes" xml:space="preserve">
          <source>Path to toolchain file supplied to &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 제공된 툴체인 파일의 경로 입니다.</target>
        </trans-unit>
        <trans-unit id="17061be186d2f1756137a2b4f14e023e0b0d58a5" translate="yes" xml:space="preserve">
          <source>Path to top of source tree. Same as &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">소스 트리의 상단에 대한 경로입니다. &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt; &lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt; &lt;/a&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="1a8f7b37f741e86069370d88cc37914b8ac77b5c" translate="yes" xml:space="preserve">
          <source>Path to unixODBC or iODBC config program, if found or specified.</source>
          <target state="translated">unixODBC 또는 iODBC 구성 프로그램의 경로 (발견되었거나 지정된 경우)</target>
        </trans-unit>
        <trans-unit id="5d6d31ac3a8a90af23bd00b8e22bbba31bef1a33" translate="yes" xml:space="preserve">
          <source>Path to where &lt;code&gt;&amp;lt;new&amp;gt;&lt;/code&gt; symbolic link will be created has to exist beforehand.</source>
          <target state="translated">&lt;code&gt;&amp;lt;new&amp;gt;&lt;/code&gt; 심볼릭 링크가 생성 될 경로 는 미리 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="edeedbebb08109d64698f0ef5de0faf338425002" translate="yes" xml:space="preserve">
          <source>Path variables for include folders referred to by &lt;code&gt;&amp;lt;include_name&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;include_name&amp;gt;&lt;/code&gt; 이 참조하는 포함 폴더의 경로 변수 .</target>
        </trans-unit>
        <trans-unit id="3311d94745b26ff9b38353010532e0ee240f8724" translate="yes" xml:space="preserve">
          <source>Paths are returned with forward slashes and have no trailing slashes. If the optional &lt;code&gt;CACHE&lt;/code&gt; argument is specified, the result variable is added to the cache.</source>
          <target state="translated">경로는 슬래시와 함께 반환되며 뒤에 슬래시가 없습니다. 선택적 &lt;code&gt;CACHE&lt;/code&gt; 인수가 지정되면 결과 변수가 캐시에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="24eebebb9aaecad6f49abab3e874487407974c7e" translate="yes" xml:space="preserve">
          <source>Paths to include directories listed in one variable for use by ODBC client. May be empty on Windows, where the include directory corresponding to the expected Windows SDK is already available in the compilation environment.</source>
          <target state="translated">ODBC 클라이언트에서 사용하기 위해 하나의 변수에 나열된 디렉토리를 포함 할 경로입니다. 예상 Windows SDK에 해당하는 포함 디렉토리가 컴파일 환경에서 이미 사용 가능한 Windows에서는 비어있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3aecdc681a70627e270497ee6109607c1890bee" translate="yes" xml:space="preserve">
          <source>Paths to libraries to linked against to use ODBC. May just a library name on Windows, where the library directory corresponding to the expected Windows SDK is already available in the compilation environment.</source>
          <target state="translated">ODBC를 사용하기 위해 링크 된 라이브러리 경로. 예상되는 Windows SDK에 해당하는 라이브러리 디렉토리가 컴파일 환경에서 이미 사용 가능한 Windows의 라이브러리 이름 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba929d01e1ee060a193afaae62bcc875e95c78fe" translate="yes" xml:space="preserve">
          <source>Paths to the OpenGL library, windowing system libraries, and GLU libraries. On Linux, this assumes GLX and is never correct for EGL-based targets. Clients are encouraged to use the &lt;code&gt;OpenGL::*&lt;/code&gt; import targets instead.</source>
          <target state="translated">OpenGL 라이브러리, 윈도우 시스템 라이브러리 및 GLU 라이브러리에 대한 경로입니다. Linux에서 이는 GLX를 가정하며 EGL 기반 대상에 대해서는 절대 올바르지 않습니다. 클라이언트는 &lt;code&gt;OpenGL::*&lt;/code&gt; 가져 오기 대상을 대신 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="d3d1394b424fce8d8f41c3e44e364ffd9c58f419" translate="yes" xml:space="preserve">
          <source>Paths with &lt;code&gt;lib/&amp;lt;arch&amp;gt;&lt;/code&gt; are enabled if the &lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-0-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt;&lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt;&lt;/a&gt; variable is set. &lt;code&gt;lib*&lt;/code&gt; includes one or more of the values &lt;code&gt;lib64&lt;/code&gt;, &lt;code&gt;lib32&lt;/code&gt;, &lt;code&gt;libx32&lt;/code&gt; or &lt;code&gt;lib&lt;/code&gt; (searched in that order).</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_library_architecture#variable:CMAKE_LIBRARY_ARCHITECTURE&quot; id=&quot;index-0-variable:CMAKE_LIBRARY_ARCHITECTURE&quot;&gt; &lt;code&gt;CMAKE_LIBRARY_ARCHITECTURE&lt;/code&gt; &lt;/a&gt; 변수가 설정 되면 &lt;code&gt;lib/&amp;lt;arch&amp;gt;&lt;/code&gt; 가있는 경로 가 활성화됩니다 . &lt;code&gt;lib*&lt;/code&gt; 에는 하나 이상의 &lt;code&gt;lib64&lt;/code&gt; , &lt;code&gt;lib32&lt;/code&gt; , &lt;code&gt;libx32&lt;/code&gt; 또는 &lt;code&gt;lib&lt;/code&gt; 값 이 순서대로 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="cc1fa30c902b3888e0b6e27ae4bd2efdec17c306" translate="yes" xml:space="preserve">
          <source>Paths with &lt;code&gt;lib32&lt;/code&gt; are searched on 32 bit platforms if the &lt;a href=&quot;../prop_gbl/find_library_use_lib32_paths#prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../prop_gbl/find_library_use_lib32_paths#prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB32_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIB32_PATHS&lt;/code&gt; &lt;/a&gt; 특성이 &lt;code&gt;TRUE&lt;/code&gt; 로 설정된 경우 32 비트 플랫폼에서 &lt;code&gt;lib32&lt;/code&gt; 가있는 경로 가 검색됩니다 .</target>
        </trans-unit>
        <trans-unit id="5a515fb638885c8b71ccfd9092eb3c10cb90bf45" translate="yes" xml:space="preserve">
          <source>Paths with &lt;code&gt;lib64&lt;/code&gt; are searched on 64 bit platforms if the &lt;a href=&quot;../prop_gbl/find_library_use_lib64_paths#prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIB64_PATHS&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../prop_gbl/find_library_use_lib64_paths#prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIB64_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIB64_PATHS&lt;/code&gt; &lt;/a&gt; 특성이 &lt;code&gt;TRUE&lt;/code&gt; 로 설정된 경우 64 비트 플랫폼에서 &lt;code&gt;lib64&lt;/code&gt; 가있는 경로 가 검색됩니다 .</target>
        </trans-unit>
        <trans-unit id="6b318eb0e54a47cf32d5dac204b943e6f53d6cb0" translate="yes" xml:space="preserve">
          <source>Paths with &lt;code&gt;libx32&lt;/code&gt; are searched on platforms using the x32 ABI if the &lt;a href=&quot;../prop_gbl/find_library_use_libx32_paths#prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot;&gt;&lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;TRUE&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../prop_gbl/find_library_use_libx32_paths#prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot; id=&quot;index-0-prop_gbl:FIND_LIBRARY_USE_LIBX32_PATHS&quot;&gt; &lt;code&gt;FIND_LIBRARY_USE_LIBX32_PATHS&lt;/code&gt; &lt;/a&gt; 특성이 &lt;code&gt;TRUE&lt;/code&gt; 로 설정된 경우 x32 ABI를 사용하는 플랫폼 에서 &lt;code&gt;libx32&lt;/code&gt; 가있는 경로 가 검색됩니다 .</target>
        </trans-unit>
        <trans-unit id="50c864e0b2c84fe668730acd97977dca6c447b86" translate="yes" xml:space="preserve">
          <source>Pattern of files in the source tree that won&amp;rsquo;t be packaged when building a source package. This is a list of regular expression patterns (that must be properly escaped), e.g., &lt;code&gt;/CVS/;/\\.svn/;\\.swp$;\\.#;/#;.*~;cscope.*&lt;/code&gt;</source>
          <target state="translated">소스 패키지를 빌드 할 때 패키지되지 않는 소스 트리의 파일 패턴. 이것은 &lt;code&gt;/CVS/;/\\.svn/;\\.swp$;\\.#;/#;.*~;cscope.*&lt;/code&gt; 와 같이 정규식 패턴 (올바로 이스케이프되어야 함)의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="6c304ba65823d4dc6db188c4ec069f5a9e9c745c" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;else#command:else&quot; id=&quot;index-0-command:else&quot;&gt;&lt;code&gt;else()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;endif#command:endif&quot; id=&quot;index-0-command:endif&quot;&gt;&lt;code&gt;endif()&lt;/code&gt;&lt;/a&gt; commands admit an optional &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;if&lt;/code&gt; command.</source>
          <target state="translated">레거시마다 &lt;a href=&quot;else#command:else&quot; id=&quot;index-0-command:else&quot;&gt; &lt;code&gt;else()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;endif#command:endif&quot; id=&quot;index-0-command:endif&quot;&gt; &lt;code&gt;endif()&lt;/code&gt; &lt;/a&gt; 명령은 선택적 &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; 인수를 허용합니다 . 사용되는 경우 여는 &lt;code&gt;if&lt;/code&gt; 명령 의 인수를 그대로 반복해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2ab76ed1afa1140e9e9f0071996327e018195c73" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;endforeach#command:endforeach&quot; id=&quot;index-0-command:endforeach&quot;&gt;&lt;code&gt;endforeach()&lt;/code&gt;&lt;/a&gt; command admits an optional &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;foreach&lt;/code&gt; command.</source>
          <target state="translated">레거시마다 &lt;a href=&quot;endforeach#command:endforeach&quot; id=&quot;index-0-command:endforeach&quot;&gt; &lt;code&gt;endforeach()&lt;/code&gt; &lt;/a&gt; 명령은 선택적 &lt;code&gt;&amp;lt;loop_var&amp;gt;&lt;/code&gt; 인수를 허용합니다 . 사용되는 경우, &lt;code&gt;foreach&lt;/code&gt; 명령을 여는 인수를 그대로 반복해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d9a48e8196d27b370e9f8f7c01febbff973acfc9" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;endfunction#command:endfunction&quot; id=&quot;index-0-command:endfunction&quot;&gt;&lt;code&gt;endfunction()&lt;/code&gt;&lt;/a&gt; command admits an optional &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;function&lt;/code&gt; command.</source>
          <target state="translated">기존 기능에 따라 &lt;a href=&quot;endfunction#command:endfunction&quot; id=&quot;index-0-command:endfunction&quot;&gt; &lt;code&gt;endfunction()&lt;/code&gt; &lt;/a&gt; 명령은 선택적 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 인수를 허용합니다 . 사용되는 경우 열기 &lt;code&gt;function&lt;/code&gt; 명령 의 인수를 그대로 반복해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7bca2f4eceaf989c2019eece4b0d88f0d1d694d5" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;endmacro#command:endmacro&quot; id=&quot;index-1-command:endmacro&quot;&gt;&lt;code&gt;endmacro()&lt;/code&gt;&lt;/a&gt; command admits an optional &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;macro&lt;/code&gt; command.</source>
          <target state="translated">레거시마다 &lt;a href=&quot;endmacro#command:endmacro&quot; id=&quot;index-1-command:endmacro&quot;&gt; &lt;code&gt;endmacro()&lt;/code&gt; &lt;/a&gt; 명령은 선택적 &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; 인수를 허용합니다 . 사용되는 경우, &lt;code&gt;macro&lt;/code&gt; 열기 명령 의 인수를 그대로 반복해야합니다 .</target>
        </trans-unit>
        <trans-unit id="671a255642581d24665e028371371581eade4415" translate="yes" xml:space="preserve">
          <source>Per legacy, the &lt;a href=&quot;endwhile#command:endwhile&quot; id=&quot;index-2-command:endwhile&quot;&gt;&lt;code&gt;endwhile()&lt;/code&gt;&lt;/a&gt; command admits an optional &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; argument. If used, it must be a verbatim repeat of the argument of the opening &lt;code&gt;while&lt;/code&gt; command.</source>
          <target state="translated">레거시마다 &lt;a href=&quot;endwhile#command:endwhile&quot; id=&quot;index-2-command:endwhile&quot;&gt; &lt;code&gt;endwhile()&lt;/code&gt; &lt;/a&gt; 명령은 선택적 &lt;code&gt;&amp;lt;condition&amp;gt;&lt;/code&gt; 인수를 허용합니다 . 사용되는 경우, 여는 &lt;code&gt;while&lt;/code&gt; 명령 의 인수를 그대로 반복해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c2829ee3f3fe3965e1e0f13fea88450ef70949b9" translate="yes" xml:space="preserve">
          <source>Per-configuration archiver (or MSVC librarian) flags for a static library target.</source>
          <target state="translated">정적 라이브러리 대상에 대한 구성 별 아카이버 (또는 MSVC 라이브러리) 플래그.</target>
        </trans-unit>
        <trans-unit id="2d24d861956a4b45be3c7b039e6b688f4471af33" translate="yes" xml:space="preserve">
          <source>Per-configuration interprocedural optimization for a directory.</source>
          <target state="translated">디렉토리에 대한 구성 별 절차 별 최적화.</target>
        </trans-unit>
        <trans-unit id="dac08bbc61e66e2e262b4db893f5bc5fb6fcf3e1" translate="yes" xml:space="preserve">
          <source>Per-configuration interprocedural optimization for a target.</source>
          <target state="translated">대상에 대한 구성 별 절차 별 절차 최적화.</target>
        </trans-unit>
        <trans-unit id="eda594c28767be922de722d91972c938d4692c73" translate="yes" xml:space="preserve">
          <source>Per-configuration linker flags for a &lt;code&gt;SHARED&lt;/code&gt; library, &lt;code&gt;MODULE&lt;/code&gt; or &lt;code&gt;EXECUTABLE&lt;/code&gt; target.</source>
          <target state="translated">&lt;code&gt;SHARED&lt;/code&gt; 라이브러리, &lt;code&gt;MODULE&lt;/code&gt; 또는 &lt;code&gt;EXECUTABLE&lt;/code&gt; 대상에 대한 구성 별 링커 플래그입니다 .</target>
        </trans-unit>
        <trans-unit id="77b836e51d1d71788fdcf5019a1a8aaf3944702b" translate="yes" xml:space="preserve">
          <source>Per-configuration list of public interface libraries for a target.</source>
          <target state="translated">대상에 대한 공용 인터페이스 라이브러리의 구성 별 목록.</target>
        </trans-unit>
        <trans-unit id="cf716035169bd0f95ef3d1a12a88eaa18f38b645" translate="yes" xml:space="preserve">
          <source>Per-configuration macOS and iOS binary architectures for a target.</source>
          <target state="translated">대상에 대한 구성 별 macOS 및 iOS 바이너리 아키텍처.</target>
        </trans-unit>
        <trans-unit id="f8cd6ded3a7b51107f17b6aa7e6180626f22dba4" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; 대상 파일의 구성 별 출력 디렉토리 .</target>
        </trans-unit>
        <trans-unit id="3093ecc3dd1b0a18cef7309619fe5e138bc77ccd" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; 대상 파일의 구성 별 출력 디렉토리 .</target>
        </trans-unit>
        <trans-unit id="a82219fe844eaf632d3f92c781cc777c75e94067" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; 대상 파일의 구성 별 출력 디렉토리 .</target>
        </trans-unit>
        <trans-unit id="69c8270082255f371802b7e345e671ffc002360c" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; files generated by the compiler while building source files.</source>
          <target state="translated">소스 파일을 빌드하는 동안 컴파일러가 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일의 구성 별 출력 디렉토리 .</target>
        </trans-unit>
        <trans-unit id="ddb7a707e8adfea6b3d2a046decdfe247eeac892" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; files generated by the linker for executable and shared library targets.</source>
          <target state="translated">실행 파일 및 공유 라이브러리 대상에 대해 링커에서 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일의 구성 별 출력 디렉토리입니다 .</target>
        </trans-unit>
        <trans-unit id="65b8e550d9a94cab027a8a947e97202b05acbb78" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the compiler while building source files.</source>
          <target state="translated">소스 파일을 빌드하는 동안 컴파일러가 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일 의 구성 별 출력 디렉토리 .</target>
        </trans-unit>
        <trans-unit id="21132e0f0c9fcbadcdec2cb36251838a86737d91" translate="yes" xml:space="preserve">
          <source>Per-configuration output directory for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the linker for an executable or shared library target.</source>
          <target state="translated">링커가 실행 파일 또는 공유 라이브러리 대상에 대해 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일 의 구성 별 출력 디렉토리 .</target>
        </trans-unit>
        <trans-unit id="672af643b7aa60625ebcf40bba039f5c0ac52014" translate="yes" xml:space="preserve">
          <source>Per-configuration output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; 대상 파일의 구성 별 출력 이름 .</target>
        </trans-unit>
        <trans-unit id="bcb228b152d8ebabe23091a5e6a73c6c44e0e4f4" translate="yes" xml:space="preserve">
          <source>Per-configuration output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; 대상 파일의 구성 별 출력 이름 .</target>
        </trans-unit>
        <trans-unit id="fa59dfcfce723d5d85ff37e9ae78e73e4d38449e" translate="yes" xml:space="preserve">
          <source>Per-configuration output name for &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files.</source>
          <target state="translated">&lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; 대상 파일의 구성 별 출력 이름 .</target>
        </trans-unit>
        <trans-unit id="e0a123e67314271853548a80a4e4f34adb3395e0" translate="yes" xml:space="preserve">
          <source>Per-configuration output name for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the compiler while building source files.</source>
          <target state="translated">소스 파일을 빌드하는 동안 컴파일러가 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일 의 구성 별 출력 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="32b1d5860dab2c976b53c4c2b25a27dc456f63e3" translate="yes" xml:space="preserve">
          <source>Per-configuration output name for the MS debug symbol &lt;code&gt;.pdb&lt;/code&gt; file generated by the linker for an executable or shared library target.</source>
          <target state="translated">링커가 실행 파일 또는 공유 라이브러리 대상에 대해 생성 한 MS 디버그 기호 &lt;code&gt;.pdb&lt;/code&gt; 파일 의 구성 별 출력 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="a13cdcc7e9595217dbdb6c1196f48a84a61f2943" translate="yes" xml:space="preserve">
          <source>Per-configuration preprocessor definitions in a directory.</source>
          <target state="translated">디렉토리의 구성 별 전 처리기 정의</target>
        </trans-unit>
        <trans-unit id="f70216a9f949d5e6d74b008f43fe9654035bb1c0" translate="yes" xml:space="preserve">
          <source>Per-configuration preprocessor definitions on a source file.</source>
          <target state="translated">소스 파일의 구성 별 전 처리기 정의</target>
        </trans-unit>
        <trans-unit id="0c463047b127966434613739c3055bb28991ae6d" translate="yes" xml:space="preserve">
          <source>Per-configuration preprocessor definitions on a target.</source>
          <target state="translated">대상의 구성 별 사전 프로세서 정의</target>
        </trans-unit>
        <trans-unit id="a27c6d4dde97ffec0d0d7d05abf51d4ea2e60c35" translate="yes" xml:space="preserve">
          <source>Per-configuration repetition count for cycles of &lt;code&gt;STATIC&lt;/code&gt; libraries.</source>
          <target state="translated">&lt;code&gt;STATIC&lt;/code&gt; 라이브러리 주기에 대한 구성 별 반복 횟수 .</target>
        </trans-unit>
        <trans-unit id="5dc7f2220480ef51ebd6090aafb8c67661307c84" translate="yes" xml:space="preserve">
          <source>Per-configuration target file base name.</source>
          <target state="translated">구성 별 대상 파일 기본 이름.</target>
        </trans-unit>
        <trans-unit id="83e20fe9cc0829fe367690fdd1e439be4c4ad62a" translate="yes" xml:space="preserve">
          <source>Per-configuration version of target exclusion from &lt;code&gt;Build Solution&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Build Solution&lt;/code&gt; 에서 대상 제외의 구성 별 버전 .</target>
        </trans-unit>
        <trans-unit id="302f32e4ac7a7d708582897562bfcfb4a4d5c41f" translate="yes" xml:space="preserve">
          <source>Perform no decoding. This assumes that the process output is encoded in the same way as CMake&amp;rsquo;s internal encoding (UTF-8). This is the default.</source>
          <target state="translated">디코딩을 수행하지 마십시오. 이는 프로세스 출력이 CMake의 내부 인코딩 (UTF-8)과 동일한 방식으로 인코딩된다고 가정합니다. 이것이 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="952ce7591b3105d09226b3d35efe429bff825626" translate="yes" xml:space="preserve">
          <source>Perform the &lt;a href=&quot;../manual/ctest.1#ctest-build-step&quot;&gt;CTest Build Step&lt;/a&gt; as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/ctest.1#ctest-build-step&quot;&gt;CTest 빌드 단계&lt;/a&gt; 를 &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;대시 보드 클라이언트&lt;/a&gt; 로 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="98077bcdebae4656c9cf94b4b62d80035e3e072b" translate="yes" xml:space="preserve">
          <source>Perform the &lt;a href=&quot;../manual/ctest.1#ctest-configure-step&quot;&gt;CTest Configure Step&lt;/a&gt; as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/ctest.1#ctest-configure-step&quot;&gt;CTest 구성 단계&lt;/a&gt; 를 &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;대시 보드 클라이언트&lt;/a&gt; 로 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="6249af67399a39af063075c99e377a08c49f47d5" translate="yes" xml:space="preserve">
          <source>Perform the &lt;a href=&quot;../manual/ctest.1#ctest-coverage-step&quot;&gt;CTest Coverage Step&lt;/a&gt; as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/ctest.1#ctest-coverage-step&quot;&gt;CTest Coverage 단계&lt;/a&gt; 를 &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;대시 보드 클라이언트&lt;/a&gt; 로 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8ae27133c6304316be5f486dabaeecc1cb41d8d" translate="yes" xml:space="preserve">
          <source>Perform the &lt;a href=&quot;../manual/ctest.1#ctest-memcheck-step&quot;&gt;CTest MemCheck Step&lt;/a&gt; as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/ctest.1#ctest-memcheck-step&quot;&gt;CTest MemCheck 단계&lt;/a&gt; 를 &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;대시 보드 클라이언트&lt;/a&gt; 로 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="77b031e6e558b07ef1384e4ce4d8317b76f59f76" translate="yes" xml:space="preserve">
          <source>Perform the &lt;a href=&quot;../manual/ctest.1#ctest-submit-step&quot;&gt;CTest Submit Step&lt;/a&gt; as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/ctest.1#ctest-submit-step&quot;&gt;CTest 제출 단계&lt;/a&gt; 를 &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;대시 보드 클라이언트&lt;/a&gt; 로 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="4e38a31f065a4a07f9c4812106ad71c691838405" translate="yes" xml:space="preserve">
          <source>Perform the &lt;a href=&quot;../manual/ctest.1#ctest-test-step&quot;&gt;CTest Test Step&lt;/a&gt; as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/ctest.1#ctest-test-step&quot;&gt;CTest 테스트 단계&lt;/a&gt; 를 &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;대시 보드 클라이언트&lt;/a&gt; 로 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="27a20e4589c71e8ccd25814ea33b663a5431c7ea" translate="yes" xml:space="preserve">
          <source>Perform the &lt;a href=&quot;../manual/ctest.1#ctest-update-step&quot;&gt;CTest Update Step&lt;/a&gt; as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../manual/ctest.1#ctest-update-step&quot;&gt;CTest 업데이트 단계&lt;/a&gt; 를 &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;대시 보드 클라이언트&lt;/a&gt; 로 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="70096319aba819530b8d8f264c2ecf018a71e89e" translate="yes" xml:space="preserve">
          <source>Persistent Cache</source>
          <target state="translated">영구 캐시</target>
        </trans-unit>
        <trans-unit id="84e46088cb0d7af885a307a2a6ab0bee8c79ff53" translate="yes" xml:space="preserve">
          <source>Place a source file inside a Application Bundle (&lt;a href=&quot;../prop_tgt/macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt;&lt;code&gt;MACOSX_BUNDLE&lt;/code&gt;&lt;/a&gt;), Core Foundation Bundle (&lt;a href=&quot;../prop_tgt/bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt;&lt;code&gt;BUNDLE&lt;/code&gt;&lt;/a&gt;), or Framework Bundle (&lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt;). It is applicable for macOS and iOS.</source>
          <target state="translated">소스 파일을 애플리케이션 번들 ( &lt;a href=&quot;../prop_tgt/macosx_bundle#prop_tgt:MACOSX_BUNDLE&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE&quot;&gt; &lt;code&gt;MACOSX_BUNDLE&lt;/code&gt; &lt;/a&gt; ), 핵심 재단 번들 ( &lt;a href=&quot;../prop_tgt/bundle#prop_tgt:BUNDLE&quot; id=&quot;index-0-prop_tgt:BUNDLE&quot;&gt; &lt;code&gt;BUNDLE&lt;/code&gt; &lt;/a&gt; ) 또는 프레임 워크 번들 ( &lt;a href=&quot;../prop_tgt/framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt; &lt;code&gt;FRAMEWORK&lt;/code&gt; &lt;/a&gt; ) 내에 배치하십시오. macOS 및 iOS에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="0a26e366503228f3f6a0a388ece6c864691653f7" translate="yes" xml:space="preserve">
          <source>Plain and keyword &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; signatures cannot be mixed.</source>
          <target state="translated">일반 및 키워드 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 서명은 혼합 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a62f4253e931864bda98fe0c1eb44daf3f5cd6dc" translate="yes" xml:space="preserve">
          <source>Platform specification is supported only on specific generators:</source>
          <target state="translated">플랫폼 사양은 특정 생성기에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="4f15fc18915ab061535c18488d22a1e4f69cae76" translate="yes" xml:space="preserve">
          <source>Please look in &lt;code&gt;FindKDE4Internal.cmake&lt;/code&gt; and &lt;code&gt;KDE4Macros.cmake&lt;/code&gt; for more information. They are installed with the KDE 4 libraries in $KDEDIRS/share/apps/cmake/modules/.</source>
          <target state="translated">자세한 내용 은 &lt;code&gt;FindKDE4Internal.cmake&lt;/code&gt; 및 &lt;code&gt;KDE4Macros.cmake&lt;/code&gt; 를 참조하십시오. 이들은 $ KDEDIRS / share / apps / cmake / modules /에 KDE 4 라이브러리와 함께 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="5284f5be5090194690e1fd2a79925d6fb7f64ab9" translate="yes" xml:space="preserve">
          <source>Please note that checks made during configuration were performed against the configure-time SDK and might not hold true for other SDKs. Commands like &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt;, etc. store and use details only for the configured SDK/platform, so they can be problematic if wanting to switch between device and simulator builds. You can follow the next rules to make device + simulator configuration work:</source>
          <target state="translated">구성 중 확인은 구성 시간 SDK에 대해 수행되었으며 다른 SDK에는 적용되지 않을 수 있습니다. &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; 등과 같은 명령 은 구성된 SDK / 플랫폼에 대해서만 세부 정보를 저장하고 사용하므로 장치와 시뮬레이터 빌드간에 전환하려는 경우 문제가 될 수 있습니다. 다음 규칙에 따라 장치 + 시뮬레이터 구성 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f33e70085fc39a49fc46758d54e48962894d917" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;../prop_tgt/xcode_generate_scheme#prop_tgt:XCODE_GENERATE_SCHEME&quot; id=&quot;index-0-prop_tgt:XCODE_GENERATE_SCHEME&quot;&gt;&lt;code&gt;XCODE_GENERATE_SCHEME&lt;/code&gt;&lt;/a&gt; target property documentation to see all Xcode schema related properties.</source>
          <target state="translated">를 참조하십시오 &lt;a href=&quot;../prop_tgt/xcode_generate_scheme#prop_tgt:XCODE_GENERATE_SCHEME&quot; id=&quot;index-0-prop_tgt:XCODE_GENERATE_SCHEME&quot;&gt; &lt;code&gt;XCODE_GENERATE_SCHEME&lt;/code&gt; &lt;/a&gt; 모든 엑스 코드 스키마 관련 속성을 볼 target 속성 문서.</target>
        </trans-unit>
        <trans-unit id="e5ef79656470f7a5cd3d96505a6c082c36c37b67" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;xcode_generate_scheme#prop_tgt:XCODE_GENERATE_SCHEME&quot; id=&quot;index-0-prop_tgt:XCODE_GENERATE_SCHEME&quot;&gt;&lt;code&gt;XCODE_GENERATE_SCHEME&lt;/code&gt;&lt;/a&gt; target property documentation to see all Xcode schema related properties.</source>
          <target state="translated">를 참조하십시오 &lt;a href=&quot;xcode_generate_scheme#prop_tgt:XCODE_GENERATE_SCHEME&quot; id=&quot;index-0-prop_tgt:XCODE_GENERATE_SCHEME&quot;&gt; &lt;code&gt;XCODE_GENERATE_SCHEME&lt;/code&gt; &lt;/a&gt; 모든 엑스 코드 스키마 관련 속성을 볼 target 속성 문서.</target>
        </trans-unit>
        <trans-unit id="8d61184962dda249c7c096096c40ff46b825f4a7" translate="yes" xml:space="preserve">
          <source>Policies</source>
          <target state="translated">Policies</target>
        </trans-unit>
        <trans-unit id="d24977bd6636c976a681fdf6cfda2bec9fc94657" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 2.6</source>
          <target state="translated">CMake 2.6에 의해 도입 된 정책</target>
        </trans-unit>
        <trans-unit id="16c2815fab0dde3e2d17f2f8f478fe470feecb6c" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 2.8</source>
          <target state="translated">CMake 2.8에 의해 도입 된 정책</target>
        </trans-unit>
        <trans-unit id="d8e690f1f1b093b0862cb6488a22aca3ef13e229" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.0</source>
          <target state="translated">CMake 3.0에 의해 도입 된 정책</target>
        </trans-unit>
        <trans-unit id="ffaf4eb6ac95713144d5961ef1eaab1c61ac2406" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.1</source>
          <target state="translated">CMake 3.1에서 도입 한 정책</target>
        </trans-unit>
        <trans-unit id="fc97ea9478bd94064607789bf5f7b43941c9f62a" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.10</source>
          <target state="translated">CMake 3.10에서 도입 한 정책</target>
        </trans-unit>
        <trans-unit id="e122a2ad6b69b8fe9dc36cc05112eb4251ed1c3a" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.11</source>
          <target state="translated">CMake 3.11에서 도입 한 정책</target>
        </trans-unit>
        <trans-unit id="c72647cd372190fbae9d1fbc001dfeab5213cdb6" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.12</source>
          <target state="translated">CMake 3.12에서 도입 한 정책</target>
        </trans-unit>
        <trans-unit id="5fb177e3b1c7694bd019fe1a57639d3857a9e6e2" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.13</source>
          <target state="translated">CMake 3.13에서 도입 한 정책</target>
        </trans-unit>
        <trans-unit id="4d92b4e33c3b194167d1955633901db9462babfc" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.14</source>
          <target state="translated">CMake 3.14에서 도입 한 정책</target>
        </trans-unit>
        <trans-unit id="e4b98f374408e8a2f857028939042dc7d5c90bdc" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.15</source>
          <target state="translated">CMake 3.15에서 도입 한 정책</target>
        </trans-unit>
        <trans-unit id="3e20212170e4040d5baca48302f73ea8875c783c" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.2</source>
          <target state="translated">CMake 3.2에 의해 도입 된 정책</target>
        </trans-unit>
        <trans-unit id="b338f4f8a0a6a39fbb69099faaf7408c95c130f8" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.3</source>
          <target state="translated">CMake 3.3에 의해 도입 된 정책</target>
        </trans-unit>
        <trans-unit id="57ab9866ed4e993a9c4d9295b9ae13f204e1ea38" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.4</source>
          <target state="translated">CMake 3.4에 의해 도입 된 정책</target>
        </trans-unit>
        <trans-unit id="e51c78f754667045661fed3942a4f8ca119b703e" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.7</source>
          <target state="translated">CMake 3.7에서 도입 한 정책</target>
        </trans-unit>
        <trans-unit id="bb32c2573245ab1ddb70675d1b50e74c2dab6913" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.8</source>
          <target state="translated">CMake 3.8에 의해 도입 된 정책</target>
        </trans-unit>
        <trans-unit id="06d74f0cf83f54eafc38f5c65db7fecce082ae69" translate="yes" xml:space="preserve">
          <source>Policies Introduced by CMake 3.9</source>
          <target state="translated">CMake 3.9에 의해 도입 된 정책</target>
        </trans-unit>
        <trans-unit id="ac1cce053d710c95b8fc8b115eb2b0f9e701e4ea" translate="yes" xml:space="preserve">
          <source>Policies in CMake are used to preserve backward compatible behavior across multiple releases. When a new policy is introduced, newer CMake versions will begin to warn about the backward compatible behavior. It is possible to disable the warning by explicitly requesting the OLD, or backward compatible behavior using the &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy()&lt;/code&gt;&lt;/a&gt; command. It is also possible to request &lt;code&gt;NEW&lt;/code&gt;, or non-backward compatible behavior for a policy, also avoiding the warning. Each policy can also be set to either &lt;code&gt;NEW&lt;/code&gt; or &lt;code&gt;OLD&lt;/code&gt; behavior explicitly on the command line with the &lt;code&gt;CMAKE_POLICY_DEFAULT_CMP&amp;lt;NNNN&amp;gt;&lt;/code&gt; variable.</source>
          <target state="translated">CMake의 정책은 여러 릴리스에서 이전 버전과 호환되는 동작을 유지하는 데 사용됩니다. 새로운 정책이 도입되면 최신 CMake 버전은 이전 버전과 호환되는 동작에 대해 경고하기 시작합니다. &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-0-command:cmake_policy&quot;&gt; &lt;code&gt;cmake_policy()&lt;/code&gt; &lt;/a&gt; 명령을 사용하여 OLD 또는 이전 버전과 호환되는 동작을 명시 적으로 요청하여 경고를 비활성화 할 수 있습니다 . 경고를 피하면서 정책에 대해 &lt;code&gt;NEW&lt;/code&gt; 또는 이전 버전과 호환되지 않는 동작 을 요청할 수도 있습니다 . &lt;code&gt;CMAKE_POLICY_DEFAULT_CMP&amp;lt;NNNN&amp;gt;&lt;/code&gt; 변수 를 사용하여 명령 줄에서 명시 적으로 &lt;code&gt;NEW&lt;/code&gt; 또는 &lt;code&gt;OLD&lt;/code&gt; 동작으로 각 정책을 설정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ab33d9eb92ecaa61d076fb32301bc82783342f5" translate="yes" xml:space="preserve">
          <source>Policy &lt;a href=&quot;../policy/cmp0042#policy:CMP0042&quot; id=&quot;index-0-policy:CMP0042&quot;&gt;&lt;code&gt;CMP0042&lt;/code&gt;&lt;/a&gt; was introduced to change the default value of &lt;code&gt;MACOSX_RPATH&lt;/code&gt; to &lt;code&gt;TRUE&lt;/code&gt;. This is because use of &lt;code&gt;@rpath&lt;/code&gt; is a more flexible and powerful alternative to &lt;code&gt;@executable_path&lt;/code&gt; and &lt;code&gt;@loader_path&lt;/code&gt;.</source>
          <target state="translated">정책 &lt;a href=&quot;../policy/cmp0042#policy:CMP0042&quot; id=&quot;index-0-policy:CMP0042&quot;&gt; &lt;code&gt;CMP0042&lt;/code&gt; 은&lt;/a&gt; 기본값 변경하기 위해 도입 된 &lt;code&gt;MACOSX_RPATH&lt;/code&gt; 을 에 &lt;code&gt;TRUE&lt;/code&gt; . &lt;code&gt;@rpath&lt;/code&gt; 를 사용 하는 것이 &lt;code&gt;@executable_path&lt;/code&gt; 및 &lt;code&gt;@loader_path&lt;/code&gt; 에 대한보다 유연하고 강력한 대안 이기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="484d9606533811470e6562165937bf74d78a3e9f" translate="yes" xml:space="preserve">
          <source>Policy &lt;a href=&quot;cmp0003#policy:CMP0003&quot; id=&quot;index-0-policy:CMP0003&quot;&gt;&lt;code&gt;CMP0003&lt;/code&gt;&lt;/a&gt; was introduced with the intention of always linking library files by full path when a full path is given to the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command. However, on some platforms (e.g. HP-UX) the compiler front-end adds alternative library search paths for the current architecture (e.g. &lt;code&gt;/usr/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; has alternatives to libraries in &lt;code&gt;/usr/lib&lt;/code&gt; for the current architecture). On such platforms the &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; may find a library such as &lt;code&gt;/usr/lib/libfoo.so&lt;/code&gt; that does not belong to the current architecture.</source>
          <target state="translated">정책 &lt;a href=&quot;cmp0003#policy:CMP0003&quot; id=&quot;index-0-policy:CMP0003&quot;&gt; &lt;code&gt;CMP0003&lt;/code&gt; &lt;/a&gt; 은 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 명령에 전체 경로가 제공 될 때 항상 전체 경로로 라이브러리 파일을 링크하기 위해 도입되었습니다 . 그러나 일부 플랫폼 (예 : HP-UX)에서 컴파일러 프런트 엔드는 현재 아키텍처에 대한 대체 라이브러리 검색 경로를 추가합니다 (예 : &lt;code&gt;/usr/lib/&amp;lt;arch&amp;gt;&lt;/code&gt; 는 현재 아키텍처에 대해 &lt;code&gt;/usr/lib&lt;/code&gt; 의 라이브러리에 대한 대안이 있음 ). 이러한 플랫폼에서 &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt; &lt;code&gt;find_library()&lt;/code&gt; &lt;/a&gt; 는 현재 아키텍처에 속하지 않는 &lt;code&gt;/usr/lib/libfoo.so&lt;/code&gt; 와 같은 라이브러리를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3004c3e22e5bafbb9767209bbc520a9209d8e806" translate="yes" xml:space="preserve">
          <source>Policy Settings</source>
          <target state="translated">정책 설정</target>
        </trans-unit>
        <trans-unit id="2cf6fcdfc4cde31b0807e6b962f3ceb6c1f95c25" translate="yes" xml:space="preserve">
          <source>Populated with the description of the current project (i.e. &lt;a href=&quot;../variable/project_description#variable:PROJECT_DESCRIPTION&quot; id=&quot;index-0-variable:PROJECT_DESCRIPTION&quot;&gt;&lt;code&gt;PROJECT_DESCRIPTION&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">현재 프로젝트에 대한 설명으로 채워집니다 (예 : &lt;a href=&quot;../variable/project_description#variable:PROJECT_DESCRIPTION&quot; id=&quot;index-0-variable:PROJECT_DESCRIPTION&quot;&gt; &lt;code&gt;PROJECT_DESCRIPTION&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="561ee967885485b3c61b3bf7be8688adb57ea738" translate="yes" xml:space="preserve">
          <source>Populated with the name of the current project (i.e. &lt;a href=&quot;../variable/project_name#variable:PROJECT_NAME&quot; id=&quot;index-0-variable:PROJECT_NAME&quot;&gt;&lt;code&gt;PROJECT_NAME&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">현재 프로젝트의 이름으로 채워집니다 (예 : &lt;a href=&quot;../variable/project_name#variable:PROJECT_NAME&quot; id=&quot;index-0-variable:PROJECT_NAME&quot;&gt; &lt;code&gt;PROJECT_NAME&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="e02e9986c2794a617cf273e1f79745162f056ee4" translate="yes" xml:space="preserve">
          <source>Populated with the version of the current project (i.e. &lt;a href=&quot;../variable/project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt;&lt;code&gt;PROJECT_VERSION&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">현재 프로젝트의 버전으로 채워집니다 (예 : &lt;a href=&quot;../variable/project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt; &lt;code&gt;PROJECT_VERSION&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="c96a8f7adb7abfb58ac49270f1815ac1d8bfc1da" translate="yes" xml:space="preserve">
          <source>Populates the Matlab root with valid versions of Matlab or Matlab Runtime (MCR). The returned matlab_roots is organized in triplets &lt;code&gt;(type,version_number,matlab_root_path)&lt;/code&gt;, where &lt;code&gt;type&lt;/code&gt; indicates either &lt;code&gt;MATLAB&lt;/code&gt; or &lt;code&gt;MCR&lt;/code&gt;.</source>
          <target state="translated">Matlab 루트를 유효한 버전의 Matlab 또는 Matlab 런타임 (MCR)으로 채 웁니다. 반환 된 matlab_roots는 트리플렛 &lt;code&gt;(type,version_number,matlab_root_path)&lt;/code&gt; 으로 구성 되며 여기서 &lt;code&gt;type&lt;/code&gt; 은 &lt;code&gt;MATLAB&lt;/code&gt; 또는 &lt;code&gt;MCR&lt;/code&gt; 을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="70c04d4f39c337302a8d5c5b3a6b3ee2af0434bf" translate="yes" xml:space="preserve">
          <source>Populating The Content</source>
          <target state="translated">내용 채우기</target>
        </trans-unit>
        <trans-unit id="270fd3e860ce1aaf953899fc744a526747544dbb" translate="yes" xml:space="preserve">
          <source>Possible compiler identifiers are documented with the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; variable. Available features in this version of CMake are listed in the &lt;a href=&quot;../prop_gbl/cmake_c_known_features#prop_gbl:CMAKE_C_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_C_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_C_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_gbl/cmake_cxx_known_features#prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot;&gt;&lt;code&gt;CMAKE_CXX_KNOWN_FEATURES&lt;/code&gt;&lt;/a&gt; global properties. The &lt;code&gt;{c,cxx}_std_*&lt;/code&gt; meta-features are ignored if requested.</source>
          <target state="translated">가능한 컴파일러 식별자는 &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_COMPILER_ID&lt;/code&gt; 변수 와 함께 문서화되어 있습니다. 이 CMake 버전에서 사용 가능한 기능은 &lt;a href=&quot;../prop_gbl/cmake_c_known_features#prop_gbl:CMAKE_C_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_C_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_C_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../prop_gbl/cmake_cxx_known_features#prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot; id=&quot;index-0-prop_gbl:CMAKE_CXX_KNOWN_FEATURES&quot;&gt; &lt;code&gt;CMAKE_CXX_KNOWN_FEATURES&lt;/code&gt; &lt;/a&gt; 전역 속성에 나열되어 있습니다. &lt;code&gt;{c,cxx}_std_*&lt;/code&gt; 요청하는 경우 메타 기능은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="3e724aa30cc95402b0e32ebb590e4bf73370faf3" translate="yes" xml:space="preserve">
          <source>Possible components are:</source>
          <target state="translated">가능한 구성 요소는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f127b3f08f10025937f91563ae40e2249f1490c1" translate="yes" xml:space="preserve">
          <source>Possible conditions are:</source>
          <target state="translated">가능한 조건은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ff5bef3750fc25eeea2e83e9b6275e605c030a5a" translate="yes" xml:space="preserve">
          <source>Possible types are:</source>
          <target state="translated">가능한 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d68bc16b40d151c76579959a324eae22ee0b9dc7" translate="yes" xml:space="preserve">
          <source>Possible values are: TRUE, FALSE, and SCRIPT. Set to FALSE to disable the component in the installer or to SCRIPT to resolved during runtime (don&amp;rsquo;t forget add the file of the script as a value of the &lt;code&gt;SCRIPT&lt;/code&gt; option).</source>
          <target state="translated">가능한 값은 TRUE, FALSE 및 SCRIPT입니다. 설치 프로그램에서 구성 요소를 비활성화하거나 런타임 중에 해결하기 위해 SCRIPT를 비활성화하려면 FALSE로 설정하십시오 (스크립트 파일을 &lt;code&gt;SCRIPT&lt;/code&gt; 옵션 의 값으로 추가하는 것을 잊지 마십시오 ).</target>
        </trans-unit>
        <trans-unit id="1b94267fd152c5cb04389df440706d15c1c576ec" translate="yes" xml:space="preserve">
          <source>Possible values are: TRUE, FALSE, and SCRIPT. Set to TRUE to preselect the group in the installer (this takes effect only on groups that have no visible child components) or to SCRIPT to resolved during runtime (don&amp;rsquo;t forget add the file of the script as a value of the &lt;code&gt;SCRIPT&lt;/code&gt; option).</source>
          <target state="translated">가능한 값은 TRUE, FALSE 및 SCRIPT입니다. 설치 프로그램에서 그룹을 사전 선택하려면 (참으로 표시되는 하위 구성 요소가없는 그룹에만 적용됨) 또는 런타임 중에 해결하기 위해 SCRIPT로 설정하려면 TRUE로 설정하십시오 (스크립트 파일을 &lt;code&gt;SCRIPT&lt;/code&gt; 옵션 의 값으로 추가하는 것을 잊지 마십시오 ) .</target>
        </trans-unit>
        <trans-unit id="53ecc17096f1ef25346a8567313abf834761d19f" translate="yes" xml:space="preserve">
          <source>Possible values are: TRUE, FALSE. Set to FALSE if you want to hide the checkbox for an item. This is useful when only a few subcomponents should be selected instead of all.</source>
          <target state="translated">가능한 값은 TRUE, FALSE입니다. 항목의 확인란을 숨기려면 FALSE로 설정하십시오. 이 기능은 모두 대신 몇 개의 하위 구성 요소 만 선택해야 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d51189c4ac34b2d595f24b8c61a92c75a4fe6270" translate="yes" xml:space="preserve">
          <source>Postfix to append to the target file name for configuration &amp;lt;CONFIG&amp;gt;.</source>
          <target state="translated">&amp;lt;CONFIG&amp;gt; 구성의 대상 파일 이름에 추가 할 접미사.</target>
        </trans-unit>
        <trans-unit id="6a3350985d4b5ceb8de70d9b9584cc59ff154acf" translate="yes" xml:space="preserve">
          <source>Pre-load a script to populate the cache.</source>
          <target state="translated">캐시를 채우려면 스크립트를 미리로드하십시오.</target>
        </trans-unit>
        <trans-unit id="7ce06b4e2ad00569a4a984a4b2009dc2bd5971d0" translate="yes" xml:space="preserve">
          <source>Predefined &lt;code&gt;__func__&lt;/code&gt; identifier, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2340.htm&quot;&gt;N2340&lt;/a&gt;.</source>
          <target state="translated">미리 정의 &lt;code&gt;__func__&lt;/code&gt; 식별자 항에 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2340.htm&quot;&gt;N2340&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4924158b9e4bac4ac94445565f5871e11262a2d9" translate="yes" xml:space="preserve">
          <source>Prefer files from the CMake module directory when including from there.</source>
          <target state="translated">CMake 모듈 디렉토리에서 파일을 포함 할 때 파일을 선호하십시오.</target>
        </trans-unit>
        <trans-unit id="58c0ddbdbd23c23fd8e505d155a0768079cd1007" translate="yes" xml:space="preserve">
          <source>Prefer the &lt;a href=&quot;target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories()&lt;/code&gt;&lt;/a&gt; command to add include directories to individual targets and optionally propagate/export them to dependents.</source>
          <target state="translated">선호 &lt;a href=&quot;target_include_directories#command:target_include_directories&quot; id=&quot;index-0-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories()&lt;/code&gt; &lt;/a&gt; 추가하는 명령은 각각의 대상에 디렉토리를 포함하고 선택적으로 부양로 내보낼 / 전파.</target>
        </trans-unit>
        <trans-unit id="acc13c99c45265500578fbfa4bb6e897a5610c28" translate="yes" xml:space="preserve">
          <source>Prefer to use the legacy libGL library, if available. This is the default if no components were requested and policy &lt;a href=&quot;../policy/cmp0072#policy:CMP0072&quot; id=&quot;index-1-policy:CMP0072&quot;&gt;&lt;code&gt;CMP0072&lt;/code&gt;&lt;/a&gt; is not set to &lt;code&gt;NEW&lt;/code&gt;.</source>
          <target state="translated">가능한 경우 레거시 libGL 라이브러리를 사용하는 것이 좋습니다. 요청 된 구성 요소가없고 정책 &lt;a href=&quot;../policy/cmp0072#policy:CMP0072&quot; id=&quot;index-1-policy:CMP0072&quot;&gt; &lt;code&gt;CMP0072&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;NEW&lt;/code&gt; 로 설정되지 않은 경우 이것이 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="eee23d7a92d532b9b295a037d0bdb7429a795369" translate="yes" xml:space="preserve">
          <source>Prefer using &lt;a href=&quot;checksymbolexists#module:CheckSymbolExists&quot; id=&quot;index-0-module:CheckSymbolExists&quot;&gt;&lt;code&gt;CheckSymbolExists&lt;/code&gt;&lt;/a&gt; instead of this module, for the following reasons:</source>
          <target state="translated">다음과 같은 이유로이 모듈 대신 &lt;a href=&quot;checksymbolexists#module:CheckSymbolExists&quot; id=&quot;index-0-module:CheckSymbolExists&quot;&gt; &lt;code&gt;CheckSymbolExists&lt;/code&gt; &lt;/a&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e3a42d9fd661c432f4eb882a6f904afcfa1e826" translate="yes" xml:space="preserve">
          <source>Preference value for linker language selection.</source>
          <target state="translated">링커 언어 선택에 대한 기본 설정 값</target>
        </trans-unit>
        <trans-unit id="94855aaf37b14359c6578f70adfd904cb8932b56" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling &lt;code&gt;C&lt;/code&gt; language files. Will only be used by CMake on the first configuration to determine &lt;code&gt;C&lt;/code&gt; compiler, after which the value for &lt;code&gt;CC&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_C_COMPILER&lt;/code&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;code&gt;CMAKE_C_COMPILER&lt;/code&gt; variable is defined.</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 언어 파일 을 컴파일하기위한 기본 실행 파일 &lt;code&gt;C&lt;/code&gt; 컴파일러 를 결정하기 위해 첫 번째 구성에서 CMake에 의해서만 사용되며 , &lt;code&gt;CC&lt;/code&gt; 값 은 캐시에 &lt;code&gt;CMAKE_C_COMPILER&lt;/code&gt; 로 저장됩니다 . &lt;code&gt;CMAKE_C_COMPILER&lt;/code&gt; 변수가 정의 되면 구성 실행 (첫 번째 포함)의 환경 변수가 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="da21f09c8612934805630245456ba2a74a24abc3" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling &lt;code&gt;CSharp&lt;/code&gt; language files. Will only be used by CMake on the first configuration to determine &lt;code&gt;CSharp&lt;/code&gt; default compilation flags, after which the value for &lt;code&gt;CSFLAGS&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_CSharp_FLAGS&lt;/code&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;code&gt;CMAKE_CSharp_FLAGS&lt;/code&gt; variable is defined.</source>
          <target state="translated">&lt;code&gt;CSharp&lt;/code&gt; 언어 파일 을 컴파일하기위한 기본 실행 파일 단지 결정하는 첫 번째 구성에 CMake에 의해 사용됩니다 &lt;code&gt;CSharp&lt;/code&gt; 값 후 기본 컴파일 플래그, &lt;code&gt;CSFLAGS&lt;/code&gt; 이 같은 캐시에 저장됩니다 &lt;code&gt;CMAKE_CSharp_FLAGS&lt;/code&gt; 을 . &lt;code&gt;CMAKE_CSharp_FLAGS&lt;/code&gt; 변수가 정의 되면 구성 실행 (첫 번째 포함)에 대해 환경 변수가 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="0b91f929969fe4b207ff4996c5d947bc4ac5f4fc" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling &lt;code&gt;CUDA&lt;/code&gt; language files. Will only be used by CMake on the first configuration to determine &lt;code&gt;CUDA&lt;/code&gt; compiler, after which the value for &lt;code&gt;CUDA&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_CUDA_COMPILER&lt;/code&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;code&gt;CMAKE_CUDA_COMPILER&lt;/code&gt; variable is defined.</source>
          <target state="translated">&lt;code&gt;CUDA&lt;/code&gt; 언어 파일 을 컴파일하기위한 기본 실행 파일. 단지 결정하는 첫 번째 구성에 CMake에 의해 사용되는 &lt;code&gt;CUDA&lt;/code&gt; 에 대한 값 이후 컴파일러, &lt;code&gt;CUDA&lt;/code&gt; 는 같은 캐시에 저장됩니다 &lt;code&gt;CMAKE_CUDA_COMPILER&lt;/code&gt; 을 . &lt;code&gt;CMAKE_CUDA_COMPILER&lt;/code&gt; 변수가 정의 되면 구성 실행 (첫 번째 포함)에 대해 환경 변수가 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="b30aeb094cf4749cadf2c843332eb94cd39bf89a" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling &lt;code&gt;CXX&lt;/code&gt; language files. Will only be used by CMake on the first configuration to determine &lt;code&gt;CXX&lt;/code&gt; compiler, after which the value for &lt;code&gt;CXX&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt; variable is defined.</source>
          <target state="translated">&lt;code&gt;CXX&lt;/code&gt; 언어 파일 컴파일을위한 기본 실행 파일 &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt; 는 첫 번째 구성에서만 &lt;code&gt;CXX&lt;/code&gt; 컴파일러 를 판별하기 위해 사용하며 , 그 후에 &lt;code&gt;CXX&lt;/code&gt; 의 값 은 캐시에 CMAKE_CXX_COMPILER 로 저장됩니다 . &lt;code&gt;CMAKE_CXX_COMPILER&lt;/code&gt; 변수가 정의 되면 구성 실행 (첫 번째 포함)의 환경 변수가 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="4be7b63c98647386e13c80b70c8a2eaae56d6525" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling &lt;code&gt;Fortran&lt;/code&gt; language files. Will only be used by CMake on the first configuration to determine &lt;code&gt;Fortran&lt;/code&gt; compiler, after which the value for &lt;code&gt;Fortran&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_Fortran_COMPILER&lt;/code&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;code&gt;CMAKE_Fortran_COMPILER&lt;/code&gt; variable is defined.</source>
          <target state="translated">&lt;code&gt;Fortran&lt;/code&gt; 언어 파일 을 컴파일하기위한 기본 실행 파일. 단지 결정하는 제 1 구성에 CMake 의해 사용될 &lt;code&gt;Fortran&lt;/code&gt; 값 후 컴파일러 &lt;code&gt;Fortran&lt;/code&gt; 아니라 캐시에 저장된다 &lt;code&gt;CMAKE_Fortran_COMPILER&lt;/code&gt; 를 . &lt;code&gt;CMAKE_Fortran_COMPILER&lt;/code&gt; 변수가 정의 되면 구성 실행 (첫 번째 포함)의 환경 변수가 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="cdff0b0ee42fcbca5d759f7844d2586b36d094cb" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling &lt;code&gt;Swift&lt;/code&gt; language files. Will only be used by CMake on the first configuration to determine &lt;code&gt;Swift&lt;/code&gt; compiler, after which the value for &lt;code&gt;SWIFTC&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_Swift_COMPILER&lt;/code&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;code&gt;CMAKE_Swift_COMPILER&lt;/code&gt; variable is defined.</source>
          <target state="translated">&lt;code&gt;Swift&lt;/code&gt; 언어 파일 을 컴파일하기위한 기본 실행 파일. 단지 결정하는 제 1 구성에 CMake 의해 사용될 &lt;code&gt;Swift&lt;/code&gt; 값 후 컴파일러 &lt;code&gt;SWIFTC&lt;/code&gt; 이 아니라 캐시에 저장된다 &lt;code&gt;CMAKE_Swift_COMPILER&lt;/code&gt; 를 . &lt;code&gt;CMAKE_Swift_COMPILER&lt;/code&gt; 변수가 정의 되면 구성 실행 (첫 번째 포함)의 환경 변수가 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="521a3c69a443390f535cd5734214865dc639e3f2" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling &lt;code&gt;resource&lt;/code&gt; files. Will only be used by CMake on the first configuration to determine &lt;code&gt;resource&lt;/code&gt; compiler, after which the value for &lt;code&gt;RC&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_RC_COMPILER&lt;/code&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;code&gt;CMAKE_RC_COMPILER&lt;/code&gt; variable is defined.</source>
          <target state="translated">&lt;code&gt;resource&lt;/code&gt; 파일 컴파일을위한 기본 실행 파일 &lt;code&gt;resource&lt;/code&gt; 컴파일러 를 판별하기 위해 첫 번째 구성에서 CMake에 의해서만 사용되며 &lt;code&gt;RC&lt;/code&gt; 값은 &lt;code&gt;CMAKE_RC_COMPILER&lt;/code&gt; 로 캐시에 저장됩니다 . &lt;code&gt;CMAKE_RC_COMPILER&lt;/code&gt; 변수가 정의 되면 구성 실행 (첫 번째 포함)에 대해 환경 변수가 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="948fcfeb189821c75f0438cba8ad919be256272f" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling a specific dialect of assembly language files. &lt;code&gt;ASM&amp;lt;DIALECT&amp;gt;&lt;/code&gt; can be &lt;code&gt;ASM&lt;/code&gt;, &lt;code&gt;ASM_NASM&lt;/code&gt; (Netwide Assembler), &lt;code&gt;ASM_MASM&lt;/code&gt; (Microsoft Assembler) or &lt;code&gt;ASM-ATT&lt;/code&gt; (Assembler AT&amp;amp;T). Will only be used by CMake on the first configuration to determine &lt;code&gt;ASM&amp;lt;DIALECT&amp;gt;&lt;/code&gt; compiler, after which the value for &lt;code&gt;ASM&amp;lt;DIALECT&amp;gt;&lt;/code&gt; is stored in the cache as &lt;code&gt;CMAKE_ASM&amp;lt;DIALECT&amp;gt;_COMPILER&lt;/code&gt;. For subsequent configuration runs, the environment variable will be ignored in favor of &lt;code&gt;CMAKE_ASM&amp;lt;DIALECT&amp;gt;_COMPILER&lt;/code&gt;.</source>
          <target state="translated">어셈블리 언어 파일의 특정 방언을 컴파일하기위한 기본 실행 파일. &lt;code&gt;ASM&amp;lt;DIALECT&amp;gt;&lt;/code&gt; 는 &lt;code&gt;ASM&lt;/code&gt; , &lt;code&gt;ASM_NASM&lt;/code&gt; (Netwide Assembler), &lt;code&gt;ASM_MASM&lt;/code&gt; (Microsoft Assembler) 또는 &lt;code&gt;ASM-ATT&lt;/code&gt; (Assembler AT &amp;amp; T) 일 수 있습니다. CMake는 첫 번째 구성에서만 &lt;code&gt;ASM&amp;lt;DIALECT&amp;gt;&lt;/code&gt; 컴파일러 를 결정하기 위해 사용되며 , 그 후에 &lt;code&gt;ASM&amp;lt;DIALECT&amp;gt;&lt;/code&gt; 값 은 캐시에 &lt;code&gt;CMAKE_ASM&amp;lt;DIALECT&amp;gt;_COMPILER&lt;/code&gt; 로 저장됩니다 . 후속 구성 실행의 경우 &lt;code&gt;CMAKE_ASM&amp;lt;DIALECT&amp;gt;_COMPILER&lt;/code&gt; 대신 환경 변수가 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="3a7f24ad8a34556d00c7f2ca77c9d497d9e10fad" translate="yes" xml:space="preserve">
          <source>Preferred executable for compiling host code when compiling &lt;code&gt;CUDA&lt;/code&gt; language files. Will only be used by CMake on the first configuration to determine &lt;code&gt;CUDA&lt;/code&gt; host compiler, after which the value for &lt;code&gt;CUDAHOSTCXX&lt;/code&gt; is stored in the cache as &lt;a href=&quot;../variable/cmake_cuda_host_compiler#variable:CMAKE_CUDA_HOST_COMPILER&quot; id=&quot;index-0-variable:CMAKE_CUDA_HOST_COMPILER&quot;&gt;&lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt;&lt;/a&gt;. For any configuration run (including the first), the environment variable will be ignored if the &lt;a href=&quot;../variable/cmake_cuda_host_compiler#variable:CMAKE_CUDA_HOST_COMPILER&quot; id=&quot;index-1-variable:CMAKE_CUDA_HOST_COMPILER&quot;&gt;&lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt;&lt;/a&gt; variable is defined.</source>
          <target state="translated">&lt;code&gt;CUDA&lt;/code&gt; 언어 파일을 컴파일 할 때 호스트 코드를 컴파일하기위한 기본 실행 파일. 단지 결정하는 첫 번째 구성에 CMake에 의해 사용되는 &lt;code&gt;CUDA&lt;/code&gt; 에 대한 값 이후 호스트 컴파일러, &lt;code&gt;CUDAHOSTCXX&lt;/code&gt; 이 같은 캐시에 저장됩니다 &lt;a href=&quot;../variable/cmake_cuda_host_compiler#variable:CMAKE_CUDA_HOST_COMPILER&quot; id=&quot;index-0-variable:CMAKE_CUDA_HOST_COMPILER&quot;&gt; &lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt; 을&lt;/a&gt; . &lt;a href=&quot;../variable/cmake_cuda_host_compiler#variable:CMAKE_CUDA_HOST_COMPILER&quot; id=&quot;index-1-variable:CMAKE_CUDA_HOST_COMPILER&quot;&gt; &lt;code&gt;CMAKE_CUDA_HOST_COMPILER&lt;/code&gt; &lt;/a&gt; 변수가 정의 되면 구성 실행 (첫 번째 포함)에 대해 환경 변수가 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="228cf06de56985100ae50cec4eb5d180cf762e19" translate="yes" xml:space="preserve">
          <source>Prefix all preprocessor definitions generated by the &lt;code&gt;SYMBOLS&lt;/code&gt; option with a given namespace &lt;code&gt;&amp;lt;ns&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SYMBOLS&lt;/code&gt; 옵션으로 생성 된 모든 전 처리기 정의 앞에 지정된 네임 스페이스 &lt;code&gt;&amp;lt;ns&amp;gt;&lt;/code&gt; 를 접두사로 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a0a23a6f25eb62a372ac9737dba449a403d31832" translate="yes" xml:space="preserve">
          <source>Prefix for a global symbol with an underscore.</source>
          <target state="translated">밑줄이있는 전역 기호의 접두사.</target>
        </trans-unit>
        <trans-unit id="263aacbf2f50f6362c5b01cd37074565d61ad4de" translate="yes" xml:space="preserve">
          <source>Prefix for a global symbol without an underscore.</source>
          <target state="translated">밑줄이없는 전역 기호의 접두사.</target>
        </trans-unit>
        <trans-unit id="4b01d43dc9fbf42d259d950a45cb8e7a44f066e8" translate="yes" xml:space="preserve">
          <source>Prefix for a module symbol with an underscore.</source>
          <target state="translated">밑줄이있는 모듈 기호의 접두사.</target>
        </trans-unit>
        <trans-unit id="e43e61243bc443067587971cdbee6bf61ce25348" translate="yes" xml:space="preserve">
          <source>Prefix for a module symbol without an underscore.</source>
          <target state="translated">밑줄이없는 모듈 기호의 접두사.</target>
        </trans-unit>
        <trans-unit id="cd6045f9bca1c4998b0c296b6a77bca128a28bec" translate="yes" xml:space="preserve">
          <source>Prefix of file used to link where &lt;code&gt;tgt&lt;/code&gt; is the name of a target.</source>
          <target state="translated">링크에 사용되는 파일의 접두어 여기서 &lt;code&gt;tgt&lt;/code&gt; 는 대상의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b6cb22e9dab92386c0518af5ec3832f9d53cf4eb" translate="yes" xml:space="preserve">
          <source>Prefix of main file where &lt;code&gt;tgt&lt;/code&gt; is the name of a target.</source>
          <target state="translated">기본 파일의 접 두부입니다. 여기서 &lt;code&gt;tgt&lt;/code&gt; 는 대상의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="acf6674aa8b2ca970a4e4689d55f3ff8a47b83b0" translate="yes" xml:space="preserve">
          <source>Prefixes to prepend when looking for libraries.</source>
          <target state="translated">라이브러리를 찾을 때 앞에 붙는 접두사입니다.</target>
        </trans-unit>
        <trans-unit id="5f6f8fb4a6a70f16d6f774bbf727634d968a8687" translate="yes" xml:space="preserve">
          <source>Prepend all the input arguments to the string.</source>
          <target state="translated">모든 입력 인수를 문자열 앞에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="6eac5a4855ca1c1ac86604a28124795fcef97539" translate="yes" xml:space="preserve">
          <source>Preprocessor definition values are now escaped automatically.</source>
          <target state="translated">전 처리기 정의 값이 이제 자동으로 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="13fec9e2e275cee615be569d7a08957fc4885567" translate="yes" xml:space="preserve">
          <source>Preprocessor definitions for compiling a directory&amp;rsquo;s sources.</source>
          <target state="translated">디렉토리의 소스를 컴파일하기위한 전 처리기 정의.</target>
        </trans-unit>
        <trans-unit id="f478f177bbf5c5c60be0cd5ef47911306061a702" translate="yes" xml:space="preserve">
          <source>Preprocessor definitions for compiling a source file.</source>
          <target state="translated">소스 파일을 컴파일하기위한 전 처리기 정의.</target>
        </trans-unit>
        <trans-unit id="28cda5e47efef7bede101f9a5adb6e5489710fe6" translate="yes" xml:space="preserve">
          <source>Preprocessor definitions for compiling a target&amp;rsquo;s sources.</source>
          <target state="translated">대상의 소스를 컴파일하기위한 전 처리기 정의</target>
        </trans-unit>
        <trans-unit id="91dc9feabf382fd3797bb2740a4be295329d98ce" translate="yes" xml:space="preserve">
          <source>Prevent the generation of the wrapper layer (swig &lt;code&gt;-noproxy&lt;/code&gt; option).</source>
          <target state="translated">랩퍼 계층 생성을 방지하십시오 (swig &lt;code&gt;-noproxy&lt;/code&gt; 옵션).</target>
        </trans-unit>
        <trans-unit id="f21d24d3968fb7dc1bab4aa3609f501761be8faa" translate="yes" xml:space="preserve">
          <source>Previously, setting &lt;a href=&quot;../prop_tgt/build_with_install_rpath#prop_tgt:BUILD_WITH_INSTALL_RPATH&quot; id=&quot;index-1-prop_tgt:BUILD_WITH_INSTALL_RPATH&quot;&gt;&lt;code&gt;BUILD_WITH_INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; had the effect of setting both the &lt;code&gt;install_name&lt;/code&gt; of a target to &lt;a href=&quot;../prop_tgt/install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;RPATH&lt;/code&gt; to &lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt;. In CMake 3.9, it only affects setting of &lt;code&gt;RPATH&lt;/code&gt;. However, if one wants &lt;a href=&quot;../prop_tgt/install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-1-prop_tgt:INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt; to apply to the target in the build tree, one may set &lt;a href=&quot;../prop_tgt/build_with_install_name_dir#prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;BUILD_WITH_INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이전에는 &lt;a href=&quot;../prop_tgt/build_with_install_rpath#prop_tgt:BUILD_WITH_INSTALL_RPATH&quot; id=&quot;index-1-prop_tgt:BUILD_WITH_INSTALL_RPATH&quot;&gt; &lt;code&gt;BUILD_WITH_INSTALL_RPATH&lt;/code&gt; &lt;/a&gt; 를 설정 하면 대상 의 &lt;code&gt;install_name&lt;/code&gt; 을 &lt;a href=&quot;../prop_tgt/install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt; &lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt; &lt;/a&gt; 로 설정하고 &lt;code&gt;RPATH&lt;/code&gt; 를 &lt;a href=&quot;../prop_tgt/install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; &lt;/a&gt; 로 설정하는 효과가있었습니다 . CMake 3.9에서는 &lt;code&gt;RPATH&lt;/code&gt; 설정에만 영향을줍니다 . 그러나 &lt;a href=&quot;../prop_tgt/install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-1-prop_tgt:INSTALL_NAME_DIR&quot;&gt; &lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt; &lt;/a&gt; 을 빌드 트리의 대상에 적용하려면 &lt;a href=&quot;../prop_tgt/build_with_install_name_dir#prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:BUILD_WITH_INSTALL_NAME_DIR&quot;&gt; &lt;code&gt;BUILD_WITH_INSTALL_NAME_DIR&lt;/code&gt; 을&lt;/a&gt; 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b159026996abe98a37c233eace8bbe31f0a0934e" translate="yes" xml:space="preserve">
          <source>Print &lt;code&gt;Installing&lt;/code&gt; but not &lt;code&gt;Up-to-date&lt;/code&gt; messages.</source>
          <target state="translated">인쇄 &lt;code&gt;Installing&lt;/code&gt; 하지만 &lt;code&gt;Up-to-date&lt;/code&gt; 메시지를.</target>
        </trans-unit>
        <trans-unit id="0baf5a8838b66c5f889a27e36200b20d7582b17f" translate="yes" xml:space="preserve">
          <source>Print a message listing the prerequisites of &amp;lt;target&amp;gt;.</source>
          <target state="translated">&amp;lt;target&amp;gt;의 전제 조건이 나열된 메시지를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="f78b663fc42c1dd9f76e52569bdf4eab7ea68c06" translate="yes" xml:space="preserve">
          <source>Print a trace of all calls made and from where.</source>
          <target state="translated">어디에서나 온 전화의 흔적을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="262f1cf4f06368842d714b075ea4e77c36cc42db" translate="yes" xml:space="preserve">
          <source>Print a warning when an uninitialized variable is used.</source>
          <target state="translated">초기화되지 않은 변수가 사용될 때 경고를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="59014557cd61c4808d9d3acbba8966edcfadc315" translate="yes" xml:space="preserve">
          <source>Print all available test labels.</source>
          <target state="translated">사용 가능한 모든 테스트 레이블을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="451311d215065b029a139dbf2103fb37dd9a75ca" translate="yes" xml:space="preserve">
          <source>Print all help manuals and exit.</source>
          <target state="translated">모든 도움말 매뉴얼을 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="9809b8f6dcf3f16e615915175f8d251314721806" translate="yes" xml:space="preserve">
          <source>Print both &lt;code&gt;Installing&lt;/code&gt; and &lt;code&gt;Up-to-date&lt;/code&gt; messages.</source>
          <target state="translated">&lt;code&gt;Installing&lt;/code&gt; 및 &lt;code&gt;Up-to-date&lt;/code&gt; 메시지 를 모두 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="8b0a19aad721d9dd29a07c6dcf382af6dd801b61" translate="yes" xml:space="preserve">
          <source>Print cmake-commands manual and exit.</source>
          <target state="translated">cmake-commands 매뉴얼을 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="baab17278c4588e091690670116c2cec966c742d" translate="yes" xml:space="preserve">
          <source>Print cmake-modules manual and exit.</source>
          <target state="translated">cmake-modules 매뉴얼을 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="cd3920ad9000cc800fd9c41a23f2a0eeb769bd6e" translate="yes" xml:space="preserve">
          <source>Print cmake-policies manual and exit.</source>
          <target state="translated">cmake-policies 매뉴얼을 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="c9a5505c0e5730c981c3fc44599c03a9ca9d91e2" translate="yes" xml:space="preserve">
          <source>Print cmake-properties manual and exit.</source>
          <target state="translated">cmake-properties 매뉴얼을 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="49647508e1910d4d1c2a6638c8ca51acf0dbb363" translate="yes" xml:space="preserve">
          <source>Print cmake-variables manual and exit.</source>
          <target state="translated">cmake-variables 매뉴얼을 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="2173fed0e2ade412bfd0210b226ea1273565d260" translate="yes" xml:space="preserve">
          <source>Print extra information during the cmake run like stack traces with &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-1-command:message&quot;&gt;&lt;code&gt;message(SEND_ERROR)&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="translated">cmake를 실행하는 동안 &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-1-command:message&quot;&gt; &lt;code&gt;message(SEND_ERROR)&lt;/code&gt; &lt;/a&gt; 호출로 스택 추적과 같은 추가 정보를 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="a77185a53fc51acc91458734d82677825794f9e2" translate="yes" xml:space="preserve">
          <source>Print help for one command and exit.</source>
          <target state="translated">하나의 명령에 대한 도움말을 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="fad7cd5ce7b76a34e970248c585b9367cd5a328d" translate="yes" xml:space="preserve">
          <source>Print help for one module and exit.</source>
          <target state="translated">하나의 모듈에 대한 도움말을 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="bd1839ed6022e3dcec3e247e6ac410489cb95d50" translate="yes" xml:space="preserve">
          <source>Print help for one policy and exit.</source>
          <target state="translated">하나의 정책에 대한 도움말을 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="23e08f5086d6cc34fd6a4083ce8071c4db91451e" translate="yes" xml:space="preserve">
          <source>Print help for one property and exit.</source>
          <target state="translated">하나의 속성에 대한 도움말을 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="4027472a5c6482e2c8e36739d52dd1fbba0b477f" translate="yes" xml:space="preserve">
          <source>Print help for one variable and exit.</source>
          <target state="translated">하나의 변수에 대한 도움말을 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="6b4bb7b43f6caecf6130c831ffbc3ee86974e63b" translate="yes" xml:space="preserve">
          <source>Print neither &lt;code&gt;Installing&lt;/code&gt; nor &lt;code&gt;Up-to-date&lt;/code&gt; messages.</source>
          <target state="translated">&lt;code&gt;Installing&lt;/code&gt; 중이거나 &lt;code&gt;Up-to-date&lt;/code&gt; 메시지가 인쇄되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="56340d1675c5f4182422415eb617857d8103962a" translate="yes" xml:space="preserve">
          <source>Print one help manual and exit.</source>
          <target state="translated">하나의 도움말 매뉴얼을 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="e4f3a2a8f70e90c32a1aff83f5abd839674b9351" translate="yes" xml:space="preserve">
          <source>Print progress information as status messages until the operation is complete.</source>
          <target state="translated">작업이 완료 될 때까지 진행 정보를 상태 메시지로 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="abfc0884824221b7b62ae377e6f57cc8e9453e85" translate="yes" xml:space="preserve">
          <source>Print the prerequisites of shared library and executable files matching a globbing pattern. &amp;lt;glob_arg&amp;gt; is GLOB or GLOB_RECURSE and &amp;lt;glob_exp&amp;gt; is a globbing expression used with &amp;ldquo;file(GLOB&amp;rdquo; or &amp;ldquo;file(GLOB_RECURSE&amp;rdquo; to retrieve a list of matching files. If a matching file is executable, its prerequisites are listed.</source>
          <target state="translated">글 로빙 패턴과 일치하는 공유 라이브러리 및 실행 파일의 전제 조건을 인쇄하십시오. &amp;lt;glob_arg&amp;gt;는 GLOB 또는 GLOB_RECURSE이고 &amp;lt;glob_exp&amp;gt;는 &quot;file (GLOB&quot;또는 &quot;file (GLOB_RECURSE&quot;와 함께 사용되는 일치하는 파일 목록을 검색하는 데 사용되는 globbing 표현식입니다. 일치하는 파일이 실행 가능한 경우 해당 필수 구성 요소가 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="9ddb59ed6a9acf2314df92d29276627db087572a" translate="yes" xml:space="preserve">
          <source>Print usage information and exit.</source>
          <target state="translated">사용 정보를 인쇄하고 종료하십시오.</target>
        </trans-unit>
        <trans-unit id="8afaea077454eb37aa2931122e18c6e2d8f3119b" translate="yes" xml:space="preserve">
          <source>Prior to CMake 3.13 the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; command did not accept targets not created in the calling directory as its first argument for calls that update the &lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt;&lt;code&gt;LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt; of the target itself. It did accidentally accept targets from other directories on calls that only update the &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt;&lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt;&lt;/a&gt;, but would simply add entries to the property as if the call were made in the original directory. Thus link interface libraries specified this way were always looked up by generators in the scope of the original target rather than in the scope that called &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">CMake 3.13 이전에는 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 명령이 호출 디렉토리에 작성되지 않은 대상을 대상 자체 의 &lt;a href=&quot;../prop_tgt/link_libraries#prop_tgt:LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:LINK_LIBRARIES&quot;&gt; &lt;code&gt;LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt; 를 업데이트하는 호출의 첫 번째 인수로 승인하지 않았습니다 . &lt;a href=&quot;../prop_tgt/interface_link_libraries#prop_tgt:INTERFACE_LINK_LIBRARIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_LINK_LIBRARIES&quot;&gt; &lt;code&gt;INTERFACE_LINK_LIBRARIES&lt;/code&gt; &lt;/a&gt; 만 업데이트하는 호출에서 다른 디렉토리의 대상을 실수로 수락 했지만 원래 디렉토리에서 호출 한 것처럼 속성에 항목을 추가 하기 만합니다 . 따라서 이런 방식으로 지정된 링크 인터페이스 라이브러리는 항상 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-2-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 라는 범위가 아닌 원래 대상의 범위에서 생성기에 의해 검색되었습니다 .</target>
        </trans-unit>
        <trans-unit id="56de6c17cb363a59b12ad970dbfc87c7f7eb5a27" translate="yes" xml:space="preserve">
          <source>Prior to policy &lt;a href=&quot;cmp0003#policy:CMP0003&quot; id=&quot;index-1-policy:CMP0003&quot;&gt;&lt;code&gt;CMP0003&lt;/code&gt;&lt;/a&gt; projects would still build in such cases because the incorrect library path would be converted to &lt;code&gt;-lfoo&lt;/code&gt; on the link line and the linker would find the proper library in the arch-specific search path provided by the compiler front-end implicitly. At the time we chose to remain compatible with such projects by always converting library files found in implicit link directories to &lt;code&gt;-lfoo&lt;/code&gt; flags to ask the linker to search for them. This approach allowed existing projects to continue to build while still linking to libraries outside implicit link directories via full path (such as those in the build tree).</source>
          <target state="translated">정책 이전에 &lt;a href=&quot;cmp0003#policy:CMP0003&quot; id=&quot;index-1-policy:CMP0003&quot;&gt; &lt;code&gt;CMP0003&lt;/code&gt; &lt;/a&gt; 프로젝트는 링크 라인 에서 잘못된 라이브러리 경로가 &lt;code&gt;-lfoo&lt;/code&gt; 로 변환되고 링커가 컴파일러 프론트 엔드가 암시 적으로 제공하는 아치 별 검색 경로에서 적절한 라이브러리를 찾을 수 있기 때문에 이러한 경우에도 여전히 빌드됩니다 . 당시 우리는 링커가 검색하도록 요청 하기 위해 항상 암시 적 링크 디렉토리에있는 라이브러리 파일을 &lt;code&gt;-lfoo&lt;/code&gt; 플래그로 변환하여 이러한 프로젝트와 호환되도록 선택 했습니다. 이 접근 방식을 사용하면 기존 프로젝트를 계속 빌드하면서 전체 경로를 통해 암시 적 링크 디렉토리 외부의 라이브러리 (예 : 빌드 트리의 라이브러리)에 계속 링크 할 수있었습니다.</target>
        </trans-unit>
        <trans-unit id="9fb2af2faa567957b021a9c66095864cde9f911b" translate="yes" xml:space="preserve">
          <source>Proceeds as in &lt;code&gt;WINDOWS_COMMAND&lt;/code&gt; mode if the host system is Windows. Otherwise proceeds as in &lt;code&gt;UNIX_COMMAND&lt;/code&gt; mode.</source>
          <target state="translated">호스트 시스템이 Windows 인 경우 &lt;code&gt;WINDOWS_COMMAND&lt;/code&gt; 모드 에서와 같이 진행 하십시오. 그렇지 않으면 &lt;code&gt;UNIX_COMMAND&lt;/code&gt; 모드 에서와 같이 진행됩니다 .</target>
        </trans-unit>
        <trans-unit id="17ab6784e2868146e3bbb6bd020f10e35aca26d8" translate="yes" xml:space="preserve">
          <source>Process the given cmake file as a script written in the CMake language. No configure or generate step is performed and the cache is not modified. If variables are defined using &lt;code&gt;-D&lt;/code&gt;, this must be done before the &lt;code&gt;-P&lt;/code&gt; argument.</source>
          <target state="translated">주어진 cmake 파일을 CMake 언어로 작성된 스크립트로 처리하십시오. 구성 또는 생성 단계가 수행되지 않고 캐시가 수정되지 않습니다. 변수가 &lt;code&gt;-D&lt;/code&gt; 를 사용하여 정의 된 경우 , &lt;code&gt;-P&lt;/code&gt; 인수 전에 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bfff74770e9b454a80ed3fc9f00177a9b58b4342" translate="yes" xml:space="preserve">
          <source>Processor serial number</source>
          <target state="translated">프로세서 일련 번호</target>
        </trans-unit>
        <trans-unit id="e98c6555f6fee7ec04152970e196339b33401a8b" translate="yes" xml:space="preserve">
          <source>ProcessorCount</source>
          <target state="translated">ProcessorCount</target>
        </trans-unit>
        <trans-unit id="8bcc76a268930fdd0073916e77467b7d450c6ed6" translate="yes" xml:space="preserve">
          <source>ProcessorCount(var)</source>
          <target state="translated">ProcessorCount(var)</target>
        </trans-unit>
        <trans-unit id="9726c7a51be31026975c4c941beec6ae5a21db6c" translate="yes" xml:space="preserve">
          <source>Produce .h and .cxx files for all the .fl and .fld files listed. The resulting .h and .cxx files will be added to a variable named &lt;code&gt;resultingLibraryName_FLTK_UI_SRCS&lt;/code&gt; which should be added to your library.</source>
          <target state="translated">나열된 모든 .fl 및 .fld 파일에 대해 .h 및 .cxx 파일을 생성하십시오. 그 결과 .H 및 .CXX 파일은라는 변수에 추가됩니다 &lt;code&gt;resultingLibraryName_FLTK_UI_SRCS&lt;/code&gt; 라이브러리에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="cf53bfb44b01bd8a5d0b50194f397aa4ef81e723" translate="yes" xml:space="preserve">
          <source>Produce the output string as repetion of &lt;code&gt;input string&lt;/code&gt;&lt;code&gt;count&lt;/code&gt; times.</source>
          <target state="translated">&lt;code&gt;input string&lt;/code&gt; &lt;code&gt;count&lt;/code&gt; 반복 하여 출력 문자열을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="1cc6b99d14f883d0162728eb83cdaaa1f95f8d40" translate="yes" xml:space="preserve">
          <source>Produce verbose output.</source>
          <target state="translated">자세한 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f4abbd86a9391a4d8f1b7b6de05d9455b8a3b6f9" translate="yes" xml:space="preserve">
          <source>Produces .h and .cxx files for all the .ui files listed in the &lt;code&gt;SourceLists&lt;/code&gt;. The .h files will be added to the library using the &lt;code&gt;HeadersDestNamesource&lt;/code&gt; list. The .cxx files will be added to the library using the &lt;code&gt;SourcesDestNamesource&lt;/code&gt; list.</source>
          <target state="translated">&lt;code&gt;SourceLists&lt;/code&gt; 에 나열된 모든 .ui 파일에 대해 .h 및 .cxx 파일을 생성합니다 . .h 파일은 &lt;code&gt;HeadersDestNamesource&lt;/code&gt; 목록을 사용하여 라이브러리에 추가됩니다 . .cxx 파일은 &lt;code&gt;SourcesDestNamesource&lt;/code&gt; 목록을 사용하여 라이브러리에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="3efea4a0aca5baf79e621c5775e85b639a808166" translate="yes" xml:space="preserve">
          <source>Produces moc files for all the .h files listed in the SourceLists. The moc files will be added to the library using the &lt;code&gt;DestName&lt;/code&gt; source list.</source>
          <target state="translated">SourceList에 나열된 모든 .h 파일에 대한 moc 파일을 생성합니다. moc 파일은 &lt;code&gt;DestName&lt;/code&gt; 소스 목록을 사용하여 라이브러리에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="d567868ceac78ef65e8e3543b78fc7260f87bacf" translate="yes" xml:space="preserve">
          <source>Project Commands</source>
          <target state="translated">프로젝트 명령</target>
        </trans-unit>
        <trans-unit id="c0877bdef820182d0a11fa36a2eb4db9923659fc" translate="yes" xml:space="preserve">
          <source>Project binary directory to be built. This is required and must be first.</source>
          <target state="translated">빌드 할 프로젝트 바이너리 디렉토리. 이것은 필수이며 먼저해야합니다.</target>
        </trans-unit>
        <trans-unit id="c93d571f1ae88545c43a2fbfc578acc5f2473aee" translate="yes" xml:space="preserve">
          <source>Project binary directory to install. This is required and must be first.</source>
          <target state="translated">설치할 프로젝트 바이너리 디렉토리. 이것은 필수이며 먼저해야합니다.</target>
        </trans-unit>
        <trans-unit id="19c4715bdd9fe9ca7ffc2fcb402f717fc856318a" translate="yes" xml:space="preserve">
          <source>Project generators like Xcode where the user can switch target architecture at build time, but a full path to a library cannot be used because it only provides one architecture (i.e. it is not a universal binary).</source>
          <target state="translated">사용자가 빌드시 대상 아키텍처를 전환 할 수 있지만 라이브러리에 대한 전체 경로는 하나의 아키텍처 만 제공하므로 (즉, 범용 바이너리가 아님) Xcode와 같은 프로젝트 생성기는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6db52dcddfe38f99411190c7c47f8ad2cd90886b" translate="yes" xml:space="preserve">
          <source>Project homepage URL. The default value is taken from the &lt;a href=&quot;../variable/cmake_project_homepage_url#variable:CMAKE_PROJECT_HOMEPAGE_URL&quot; id=&quot;index-0-variable:CMAKE_PROJECT_HOMEPAGE_URL&quot;&gt;&lt;code&gt;CMAKE_PROJECT_HOMEPAGE_URL&lt;/code&gt;&lt;/a&gt; variable, which is set by the top level &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-3-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command, or else the default will be empty if no URL was provided to &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-4-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">프로젝트 홈페이지 URL. 기본값 은 최상위 레벨 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-3-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; 명령으로 설정된 &lt;a href=&quot;../variable/cmake_project_homepage_url#variable:CMAKE_PROJECT_HOMEPAGE_URL&quot; id=&quot;index-0-variable:CMAKE_PROJECT_HOMEPAGE_URL&quot;&gt; &lt;code&gt;CMAKE_PROJECT_HOMEPAGE_URL&lt;/code&gt; &lt;/a&gt; 변수 에서 가져 오거나 그렇지 않으면 &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-4-command:project&quot;&gt; &lt;code&gt;project()&lt;/code&gt; &lt;/a&gt; URL이 제공되지 않은 경우 기본값이 비어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="79a259f01c4af4d66349875cfbc9e839494b52d0" translate="yes" xml:space="preserve">
          <source>Project objects define one (sub-)project defined in the cmake build system.</source>
          <target state="translated">프로젝트 객체는 cmake 빌드 시스템에 정의 된 하나의 (하위) 프로젝트를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="d4daec9863b792334b78daa26204faa0cfe3a408" translate="yes" xml:space="preserve">
          <source>Project source code may depend on, or be conditional on, the availability of certain features of the compiler. There are three use-cases which arise: &lt;a href=&quot;#compile-feature-requirements&quot;&gt;Compile Feature Requirements&lt;/a&gt;, &lt;a href=&quot;#optional-compile-features&quot;&gt;Optional Compile Features&lt;/a&gt; and &lt;a href=&quot;#conditional-compilation-options&quot;&gt;Conditional Compilation Options&lt;/a&gt;.</source>
          <target state="translated">프로젝트 소스 코드는 컴파일러의 특정 기능의 가용성에 의존하거나 조건에 따라 달라질 수 있습니다. &lt;a href=&quot;#compile-feature-requirements&quot;&gt;컴파일 기능 요구 사항&lt;/a&gt; , &lt;a href=&quot;#optional-compile-features&quot;&gt;선택적 컴파일 기능&lt;/a&gt; 및 &lt;a href=&quot;#conditional-compilation-options&quot;&gt;조건부 컴파일 옵션의&lt;/a&gt; 세 가지 사용 사례가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="38f57fb42b648eb89795b6c1ecd4011b3b4ba230" translate="yes" xml:space="preserve">
          <source>Projects built by &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-1-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; are built synchronously during the CMake configuration step. Therefore a specific build configuration must be chosen even if the generated build system supports multiple configurations.</source>
          <target state="translated">&lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-1-command:try_compile&quot;&gt; &lt;code&gt;try_compile()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-1-command:try_run&quot;&gt; &lt;code&gt;try_run()&lt;/code&gt; &lt;/a&gt; 으로 빌드 된 프로젝트 는 CMake 구성 단계에서 동 기적으로 빌드됩니다. 따라서 생성 된 빌드 시스템이 다중 구성을 지원하더라도 특정 빌드 구성을 선택해야합니다.</target>
        </trans-unit>
        <trans-unit id="0cb99cc4e6cc51cd2b653ed7117d1f633f019365" translate="yes" xml:space="preserve">
          <source>Projects don&amp;rsquo;t always need to add the populated content to the build. Sometimes the project just wants to make the downloaded content available at a predictable location. The next example ensures that a set of standard company toolchain files (and potentially even the toolchain binaries themselves) is available early enough to be used for that same build.</source>
          <target state="translated">프로젝트가 항상 채워진 컨텐츠를 빌드에 추가 할 필요는 없습니다. 때로는 프로젝트가 다운로드 한 콘텐츠를 예측 가능한 위치에 제공하려고합니다. 다음 예는 표준 회사 툴체인 파일 (및 잠재적으로 툴체인 바이너리 자체)을 동일한 빌드에 사용할 수있을만큼 일찍 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="187dab43ce44cceb6b0eec9179c7115cd2521501" translate="yes" xml:space="preserve">
          <source>Projects may also get and set the property directly, but must be aware that adding directories to this property does not make those directories used during compilation. Adding directories to this property marks directories as &lt;code&gt;SYSTEM&lt;/code&gt; which otherwise would be used in a non-&lt;code&gt;SYSTEM&lt;/code&gt; manner. This can appear similar to &amp;lsquo;duplication&amp;rsquo;, so prefer the high-level &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt;&lt;code&gt;target_include_directories(SYSTEM)&lt;/code&gt;&lt;/a&gt; command and avoid setting the property by low-level means.</source>
          <target state="translated">프로젝트는 속성을 직접 가져 와서 설정할 수도 있지만이 속성에 디렉터리를 추가해도 컴파일 중에 해당 디렉터리가 사용되지는 않습니다. 이 특성에 디렉토리를 추가하면 디렉토리가 &lt;code&gt;SYSTEM&lt;/code&gt; 으로 표시되고 그렇지 않으면 &lt;code&gt;SYSTEM&lt;/code&gt; 이외의 방식으로 사용됩니다. 이는 '중복'과 유사하게 나타날 수 있으므로 높은 수준의 &lt;a href=&quot;../command/target_include_directories#command:target_include_directories&quot; id=&quot;index-1-command:target_include_directories&quot;&gt; &lt;code&gt;target_include_directories(SYSTEM)&lt;/code&gt; &lt;/a&gt; 명령을 선호하고 낮은 수준의 방법으로 속성을 설정하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="6c8a70733eaf461f62acd9a2b5fca4a36673bf09" translate="yes" xml:space="preserve">
          <source>Projects may skip &lt;code&gt;IMPORTED_OBJECTS&lt;/code&gt; if the configuration-specific property &lt;code&gt;IMPORTED_OBJECTS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; is set instead.</source>
          <target state="translated">구성 별 속성 &lt;code&gt;IMPORTED_OBJECTS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; 가 대신 설정된 경우 프로젝트는 &lt;code&gt;IMPORTED_OBJECTS&lt;/code&gt; 를 건너 뛸 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8b871591b9cb334279a1de02b79ac2886c9f6716" translate="yes" xml:space="preserve">
          <source>Projects may use the &lt;code&gt;OpenGL::GL&lt;/code&gt; target (or &lt;code&gt;OPENGL_LIBRARIES&lt;/code&gt; variable) to use legacy GL interfaces. These will use the legacy GL library located by &lt;code&gt;OPENGL_gl_LIBRARY&lt;/code&gt;, if available. If &lt;code&gt;OPENGL_gl_LIBRARY&lt;/code&gt; is empty or not found and GLVND is available, the &lt;code&gt;OpenGL::GL&lt;/code&gt; target will use GLVND &lt;code&gt;OpenGL::OpenGL&lt;/code&gt; and &lt;code&gt;OpenGL::GLX&lt;/code&gt; (and the &lt;code&gt;OPENGL_LIBRARIES&lt;/code&gt; variable will use the corresponding libraries). Thus, for non-EGL-based Linux targets, the &lt;code&gt;OpenGL::GL&lt;/code&gt; target is most portable.</source>
          <target state="translated">프로젝트는 기존 GL 인터페이스를 사용 하기 위해 &lt;code&gt;OpenGL::GL&lt;/code&gt; 대상 (또는 &lt;code&gt;OPENGL_LIBRARIES&lt;/code&gt; 변수)을 사용할 수 있습니다. 가능한 경우 &lt;code&gt;OPENGL_gl_LIBRARY&lt;/code&gt; 에 위치한 레거시 GL 라이브러리를 사용합니다 . 경우 &lt;code&gt;OPENGL_gl_LIBRARY&lt;/code&gt; 가 비어 있거나 발견되지 않고 GLVND를 사용할 수는 &lt;code&gt;OpenGL::GL&lt;/code&gt; 목표는 GLVND 사용 &lt;code&gt;OpenGL::OpenGL&lt;/code&gt; 하고 &lt;code&gt;OpenGL::GLX&lt;/code&gt; (그리고 &lt;code&gt;OPENGL_LIBRARIES&lt;/code&gt; 의 변수는 해당 라이브러리를 사용합니다). 따라서 비 EGL 기반 Linux 대상의 경우 &lt;code&gt;OpenGL::GL&lt;/code&gt; 대상이 가장 이식성이 뛰어납니다.</target>
        </trans-unit>
        <trans-unit id="06858a699a6aacc37bc9abe5c18767c62e8021d4" translate="yes" xml:space="preserve">
          <source>Projects should not set this variable. It will be populated with the set of files and directories passed to &lt;code&gt;doxygen_add_docs()&lt;/code&gt;, thereby providing consistent behavior with the other built-in commands like &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt;. If a variable named &lt;code&gt;DOXYGEN_INPUT&lt;/code&gt; is set by the project, it will be ignored and a warning will be issued.</source>
          <target state="translated">프로젝트는이 변수를 설정하지 않아야합니다. 그것은 파일에 전달 된 디렉토리의 세트로 채워집니다 &lt;code&gt;doxygen_add_docs()&lt;/code&gt; 하여 일관성있는 동작을 제공하는 다른 내장 같은 명령 &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt; &lt;code&gt;add_executable()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt; &lt;code&gt;add_library()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;DOXYGEN_INPUT&lt;/code&gt; 이라는 변수 가 프로젝트에 의해 설정되면 무시되고 경고가 발행됩니다.</target>
        </trans-unit>
        <trans-unit id="991f714359f32ed3989c9e977e06d642b769732e" translate="yes" xml:space="preserve">
          <source>Projects wishing to follow the common practice of installing headers into a project-specific subdirectory will need to provide a destination rather than rely on the above.</source>
          <target state="translated">프로젝트 특정 서브 디렉토리에 헤더를 설치하는 일반적인 관행을 따르려는 프로젝트는 위의 내용이 아닌 대상을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="a3a2e7e8ed4e4a89288835442129e27d1bd4fffe" translate="yes" xml:space="preserve">
          <source>Properties containing generator expressions are also not allowed.</source>
          <target state="translated">생성자 표현식을 포함하는 특성도 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a49b291e3ed7d7fb9b0870fd54edc52c494d7657" translate="yes" xml:space="preserve">
          <source>Properties matching &lt;code&gt;IMPORTED_LIBNAME_*&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;IMPORTED_LIBNAME_*&lt;/code&gt; 와 일치하는 속성</target>
        </trans-unit>
        <trans-unit id="4fca803ae37a4a8a681b252ccd6dba1bf3743e0d" translate="yes" xml:space="preserve">
          <source>Properties matching &lt;code&gt;INTERFACE_*&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;INTERFACE_*&lt;/code&gt; 와 일치하는 속성</target>
        </trans-unit>
        <trans-unit id="17a3fc817cf13ee603db35b108dff94f02706913" translate="yes" xml:space="preserve">
          <source>Properties matching &lt;code&gt;MAP_IMPORTED_CONFIG_*&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MAP_IMPORTED_CONFIG_*&lt;/code&gt; 와 일치하는 속성</target>
        </trans-unit>
        <trans-unit id="694aee29dede827a185d8a6881a37981ffddd5d3" translate="yes" xml:space="preserve">
          <source>Properties of Global Scope</source>
          <target state="translated">글로벌 범위의 속성</target>
        </trans-unit>
        <trans-unit id="fc2d308f70d3d459f2665c27ade8cf97214394c5" translate="yes" xml:space="preserve">
          <source>Properties on Cache Entries</source>
          <target state="translated">캐시 항목의 속성</target>
        </trans-unit>
        <trans-unit id="baeaab6c92e6a08f084bd4d89e0e7a74d6df4d0e" translate="yes" xml:space="preserve">
          <source>Properties on Directories</source>
          <target state="translated">디렉토리의 속성</target>
        </trans-unit>
        <trans-unit id="e86e4c12ef4368feff05101b03205e2c7e36ba19" translate="yes" xml:space="preserve">
          <source>Properties on Installed Files</source>
          <target state="translated">설치된 파일의 속성</target>
        </trans-unit>
        <trans-unit id="e8ce2cfeb5ac5a03deb84eb26c4f7e9a56aae7bf" translate="yes" xml:space="preserve">
          <source>Properties on Source Files</source>
          <target state="translated">소스 파일의 속성</target>
        </trans-unit>
        <trans-unit id="10e87905da3ab5a75e9ee5498b4df14bd8d0ef03" translate="yes" xml:space="preserve">
          <source>Properties on Targets</source>
          <target state="translated">대상 속성</target>
        </trans-unit>
        <trans-unit id="2a955c914fc26f9dc7f67ff288c46a47649236b3" translate="yes" xml:space="preserve">
          <source>Properties on Tests</source>
          <target state="translated">테스트 속성</target>
        </trans-unit>
        <trans-unit id="836942101d02d01ce505d7fcf8abe7c847385fdd" translate="yes" xml:space="preserve">
          <source>Properties starting with &lt;code&gt;INTERFACE_&lt;/code&gt; or &lt;code&gt;IMPORTED_&lt;/code&gt; are not allowed as they are reserved for internal CMake use.</source>
          <target state="translated">&lt;code&gt;INTERFACE_&lt;/code&gt; 또는 &lt;code&gt;IMPORTED_&lt;/code&gt; 로 시작하는 특성 은 내부 CMake 사용을 위해 예약되어 있으므로 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d308f26be762c1e3a0e5c8297c6380b272e1015e" translate="yes" xml:space="preserve">
          <source>Properties which must be compatible with their link interface</source>
          <target state="translated">링크 인터페이스와 호환되어야하는 속성</target>
        </trans-unit>
        <trans-unit id="9bb194bd03b3e0e9b707758cdc68914fd24f077e" translate="yes" xml:space="preserve">
          <source>Properties which must be string-compatible with their link interface</source>
          <target state="translated">링크 인터페이스와 문자열 호환 가능해야하는 속성</target>
        </trans-unit>
        <trans-unit id="eb2e3e0d9e4353b248995425049430a23f661421" translate="yes" xml:space="preserve">
          <source>Properties whose maximum value from the link interface will be used.</source>
          <target state="translated">링크 인터페이스의 최대 값이 사용되는 속성입니다.</target>
        </trans-unit>
        <trans-unit id="c1c8096538c9a0cd5376eb157da311703ac69736" translate="yes" xml:space="preserve">
          <source>Properties: Cache Entries</source>
          <target state="translated">속성 : 캐시 항목</target>
        </trans-unit>
        <trans-unit id="72f0d7c5719594ee2ccc944ae117bdab7b2ca6b8" translate="yes" xml:space="preserve">
          <source>Properties: Directories</source>
          <target state="translated">속성 : 디렉토리</target>
        </trans-unit>
        <trans-unit id="16a5b7fe341b618a264d90e67a501c30b1cb9d0a" translate="yes" xml:space="preserve">
          <source>Properties: Installed Files</source>
          <target state="translated">속성 : 설치된 파일</target>
        </trans-unit>
        <trans-unit id="192f2f1499bacab954928249a819b3187c8bc240" translate="yes" xml:space="preserve">
          <source>Properties: Source Files</source>
          <target state="translated">특성 : 소스 파일</target>
        </trans-unit>
        <trans-unit id="64c6cf2627f6b194123ea0ac393aaa68ae2626ea" translate="yes" xml:space="preserve">
          <source>Properties: Targets</source>
          <target state="translated">속성 : 대상</target>
        </trans-unit>
        <trans-unit id="f539ad6f112ae73aa73d76111894636230fb559a" translate="yes" xml:space="preserve">
          <source>Properties: Tests</source>
          <target state="translated">속성 : 테스트</target>
        </trans-unit>
        <trans-unit id="c94ebb18a9ca5cc59dc4422c5ecc594a14806d63" translate="yes" xml:space="preserve">
          <source>Property Origin Debugging</source>
          <target state="translated">속성 원점 디버깅</target>
        </trans-unit>
        <trans-unit id="e2aeba6afdbba2f75acb2f5db649e4efdaf2b374" translate="yes" xml:space="preserve">
          <source>Property to define if the target uses &lt;code&gt;C++/CLI&lt;/code&gt;.</source>
          <target state="translated">대상이 &lt;code&gt;C++/CLI&lt;/code&gt; 사용하는지 여부를 정의하는 특성 입니다.</target>
        </trans-unit>
        <trans-unit id="7998957f0fbdae800f7c8a0b0be35b5a82edf33e" translate="yes" xml:space="preserve">
          <source>Protocol API</source>
          <target state="translated">프로토콜 API</target>
        </trans-unit>
        <trans-unit id="00d007818280d9cd8533a4e65eab1d4f89aa64ae" translate="yes" xml:space="preserve">
          <source>Protocol version 1.0 requires the following attributes to be set:</source>
          <target state="translated">프로토콜 버전 1.0에서는 다음 속성을 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="06746ad05b767c8deedd2e801c3049deaccca736" translate="yes" xml:space="preserve">
          <source>Protocol version 1.2 makes all but the build directory optional, provided there is a valid cache in the build directory that contains all the other information already.</source>
          <target state="translated">프로토콜 버전 1.2는 빌드 디렉토리에 다른 모든 정보가 이미 포함 된 유효한 캐시가있는 경우 빌드 디렉토리를 제외한 모든 것을 선택 사항으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a7cf69fe64939586c6dd0e7ed0d180d174fb684d" translate="yes" xml:space="preserve">
          <source>Provide a complete and easily parsed source of all information relevant to the tooling as it relates to the source code. There should be no need for tooling to parse generated buildsystems to access include directories or compile definitions for example.</source>
          <target state="translated">소스 코드와 관련하여 툴링과 관련된 모든 정보의 완전하고 쉽게 구문 분석 된 소스를 제공하십시오. 예를 들어 include 디렉토리 또는 컴파일 정의에 액세스하기 위해 생성 된 빌드 시스템을 구문 분석하는 툴링이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7a5ed553ef1bd256d23c408ab5d2454e3617e688" translate="yes" xml:space="preserve">
          <source>Provide a stable interface for reading the information in the CMake cache.</source>
          <target state="translated">CMake 캐시에서 정보를 읽기위한 안정적인 인터페이스를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="a0051717eaac65154415fbeffae5641eeab2bf37" translate="yes" xml:space="preserve">
          <source>Provide an option that the user can optionally select.</source>
          <target state="translated">사용자가 선택적으로 선택할 수있는 옵션을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="ca27bb7181784a33568111470c6efaf82c8f4d28" translate="yes" xml:space="preserve">
          <source>Provided Functions</source>
          <target state="translated">제공되는 기능</target>
        </trans-unit>
        <trans-unit id="cd98a8eb51ea34cdbf591520b902ffb9c9a86304" translate="yes" xml:space="preserve">
          <source>Provided functions</source>
          <target state="translated">제공된 기능</target>
        </trans-unit>
        <trans-unit id="bddb03ccd0e6a27cdb56e2c5ab13c3c04d4d17ed" translate="yes" xml:space="preserve">
          <source>Provided macros</source>
          <target state="translated">제공된 매크로</target>
        </trans-unit>
        <trans-unit id="de310da11164dc81c33f529a06ff6fec07fa3332" translate="yes" xml:space="preserve">
          <source>Provides a macro to check if a header file can be included in &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">헤더 파일이 &lt;code&gt;C&lt;/code&gt; 에 포함될 수 있는지 확인하기위한 매크로를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="803d5656254163bd786cc2a49d6d04e67ffb1e91" translate="yes" xml:space="preserve">
          <source>Provides a macro to check if a header file can be included in &lt;code&gt;CXX&lt;/code&gt;.</source>
          <target state="translated">헤더 파일이 &lt;code&gt;CXX&lt;/code&gt; 에 포함될 수 있는지 확인하기위한 매크로를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="99d73b61d3b74df8ee0b9fedd854e743609d153c" translate="yes" xml:space="preserve">
          <source>Provides a macro to check if a list of one or more header files can be included together.</source>
          <target state="translated">하나 이상의 헤더 파일 목록이 함께 포함될 수 있는지 확인하기위한 매크로를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="84b0e6703c1021be5d03ddaa42dc9e04570afefb" translate="yes" xml:space="preserve">
          <source>Provides a macro to check if a symbol exists as a function, variable, or macro in &lt;code&gt;C&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;C&lt;/code&gt; 에서 기호가 함수, 변수 또는 매크로로 존재하는지 확인하는 매크로를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="75d46f4958ebaf6a4135b48c985ce3f62da62fe7" translate="yes" xml:space="preserve">
          <source>Provides an arbitrary list of HTTP headers for the download operation. This can be useful for accessing content in systems like AWS, etc.</source>
          <target state="translated">다운로드 작업을위한 임의의 HTTP 헤더 목록을 제공합니다. 이는 AWS 등과 같은 시스템의 컨텐츠에 액세스하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ac39c2f626cd08878bf22b40fafb2a0b54aba90" translate="yes" xml:space="preserve">
          <source>Provides an include guard for the file currently being processed by CMake.</source>
          <target state="translated">CMake에서 현재 처리중인 파일에 대한 포함 보호를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e8301d10ec6f895a3bc709a38a955f0b3dcd1952" translate="yes" xml:space="preserve">
          <source>Provides an option for the user to select as &lt;code&gt;ON&lt;/code&gt; or &lt;code&gt;OFF&lt;/code&gt;. If no initial &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; is provided, &lt;code&gt;OFF&lt;/code&gt; is used. If &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; is already set as a normal variable then the command does nothing (see policy &lt;a href=&quot;../policy/cmp0077#policy:CMP0077&quot; id=&quot;index-0-policy:CMP0077&quot;&gt;&lt;code&gt;CMP0077&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">사용자가 &lt;code&gt;ON&lt;/code&gt; 또는 &lt;code&gt;OFF&lt;/code&gt; 로 선택할 수있는 옵션을 제공합니다 . 초기 &lt;code&gt;&amp;lt;value&amp;gt;&lt;/code&gt; 이 제공 되지 않으면 &lt;code&gt;OFF&lt;/code&gt; 가 사용됩니다. &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 이 이미 일반 변수로 설정되어 있으면 명령이 수행하지 않습니다 (정책 &lt;a href=&quot;../policy/cmp0077#policy:CMP0077&quot; id=&quot;index-0-policy:CMP0077&quot;&gt; &lt;code&gt;CMP0077&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="0510d15ffcb2e28a3a50d48282bbd1d453db4142" translate="yes" xml:space="preserve">
          <source>Provides install directory variables as defined by the &lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/Directory-Variables.html&quot;&gt;GNU Coding Standards&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.gnu.org/prep/standards/html_node/Directory-Variables.html&quot;&gt;GNU 코딩 표준에&lt;/a&gt; 정의 된대로 설치 디렉토리 변수를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="1fcbac7cbd04fbd1382d9dbd342a3962accb8425" translate="yes" xml:space="preserve">
          <source>Pseudo Targets</source>
          <target state="translated">의사 대상</target>
        </trans-unit>
        <trans-unit id="7f00d752b4eccc51ff5bce5f7b064841d498e633" translate="yes" xml:space="preserve">
          <source>Put cmake in a debug mode.</source>
          <target state="translated">cmake를 디버그 모드로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="329c988be407f13140cb7fd0a9b33c847d222e40" translate="yes" xml:space="preserve">
          <source>Put cmake in trace mode, but output only lines of a specified file.</source>
          <target state="translated">cmake를 추적 모드로 설정하지만 지정된 파일의 행만 출력합니다.</target>
        </trans-unit>
        <trans-unit id="bbc5b864990dfed686808c2aed0024a69641c26c" translate="yes" xml:space="preserve">
          <source>Put cmake in trace mode.</source>
          <target state="translated">cmake를 추적 모드로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="6f6c447fd357a3eda7406098cef5ce9c7d30a9ad" translate="yes" xml:space="preserve">
          <source>Put the underlying cmake scripts in expanded trace mode.</source>
          <target state="translated">기본 cmake 스크립트를 확장 추적 모드로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="73e131a9fd79bd9b487f60312b9c198796178760" translate="yes" xml:space="preserve">
          <source>Put the underlying cmake scripts in trace mode.</source>
          <target state="translated">기본 cmake 스크립트를 추적 모드로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">Python</target>
        </trans-unit>
        <trans-unit id="6b30c841a15182b7711d9fc443f2f7b333da3af0" translate="yes" xml:space="preserve">
          <source>Python 2 compiler. Target defined if component &lt;code&gt;Compiler&lt;/code&gt; is found.</source>
          <target state="translated">파이썬 2 컴파일러. 컴포넌트 &lt;code&gt;Compiler&lt;/code&gt; 가 발견 되면 정의 된 대상 입니다.</target>
        </trans-unit>
        <trans-unit id="30c9702a3e7330cc73a5891e8e9f604ee64afb37" translate="yes" xml:space="preserve">
          <source>Python 2 interpreter. Target defined if component &lt;code&gt;Interpreter&lt;/code&gt; is found.</source>
          <target state="translated">파이썬 2 인터프리터. 컴포넌트 &lt;code&gt;Interpreter&lt;/code&gt; 가있는 경우 정의 된 대상 .</target>
        </trans-unit>
        <trans-unit id="34006dec20db058831cedab08ecfeba7cd448069" translate="yes" xml:space="preserve">
          <source>Python 2 library for Python embedding. Target defined if component &lt;code&gt;Development&lt;/code&gt; is found.</source>
          <target state="translated">Python 임베딩을위한 Python 2 라이브러리 컴포넌트 &lt;code&gt;Development&lt;/code&gt; 이 발견 되면 정의 된 대상 .</target>
        </trans-unit>
        <trans-unit id="0dc98305d6f0d91eaac86f5c80598f07c60fd30d" translate="yes" xml:space="preserve">
          <source>Python 2 library for Python module. Target defined if component &lt;code&gt;Development&lt;/code&gt; is found.</source>
          <target state="translated">Python 모듈 용 Python 2 라이브러리 컴포넌트 &lt;code&gt;Development&lt;/code&gt; 이 발견 되면 정의 된 대상 .</target>
        </trans-unit>
        <trans-unit id="85f8b5c4c24033cab74218d4ea6c1def21badd91" translate="yes" xml:space="preserve">
          <source>Python 2 major version.</source>
          <target state="translated">파이썬 2 메이저 버전.</target>
        </trans-unit>
        <trans-unit id="2a279aecaabede676fbcde04e9d0d1626561fd49" translate="yes" xml:space="preserve">
          <source>Python 2 minor version.</source>
          <target state="translated">파이썬 2 부 버전.</target>
        </trans-unit>
        <trans-unit id="d2fc64325859828d3b9d561ad178c79617ed8db6" translate="yes" xml:space="preserve">
          <source>Python 2 patch version.</source>
          <target state="translated">파이썬 2 패치 버전.</target>
        </trans-unit>
        <trans-unit id="e2d363b9324e885c192e45156a083153126fa340" translate="yes" xml:space="preserve">
          <source>Python 2 version.</source>
          <target state="translated">파이썬 2 버전.</target>
        </trans-unit>
        <trans-unit id="d6881afe99613af884782ab826fb8d441783d4dc" translate="yes" xml:space="preserve">
          <source>Python 3 compiler. Target defined if component &lt;code&gt;Compiler&lt;/code&gt; is found.</source>
          <target state="translated">파이썬 3 컴파일러. 컴포넌트 &lt;code&gt;Compiler&lt;/code&gt; 가 발견 되면 정의 된 대상 입니다.</target>
        </trans-unit>
        <trans-unit id="7a0131bc3d85363546c3bf006e8ee298e5f6008a" translate="yes" xml:space="preserve">
          <source>Python 3 interpreter. Target defined if component &lt;code&gt;Interpreter&lt;/code&gt; is found.</source>
          <target state="translated">파이썬 3 인터프리터. 컴포넌트 &lt;code&gt;Interpreter&lt;/code&gt; 가있는 경우 정의 된 대상 .</target>
        </trans-unit>
        <trans-unit id="7ae532231df549360c441aafdbaa91dc0c40b5bf" translate="yes" xml:space="preserve">
          <source>Python 3 library for Python embedding. Target defined if component &lt;code&gt;Development&lt;/code&gt; is found.</source>
          <target state="translated">Python 임베딩을위한 Python 3 라이브러리 컴포넌트 &lt;code&gt;Development&lt;/code&gt; 이 발견 되면 정의 된 대상 .</target>
        </trans-unit>
        <trans-unit id="93f6f62ea9f1776d6624730777a935cd03028287" translate="yes" xml:space="preserve">
          <source>Python 3 library for Python module. Target defined if component &lt;code&gt;Development&lt;/code&gt; is found.</source>
          <target state="translated">Python 모듈 용 Python 3 라이브러리 컴포넌트 &lt;code&gt;Development&lt;/code&gt; 이 발견 되면 정의 된 대상 .</target>
        </trans-unit>
        <trans-unit id="403eb7f11160231e615ddafbe0d63d3b5b203a7b" translate="yes" xml:space="preserve">
          <source>Python 3 major version.</source>
          <target state="translated">파이썬 3 메이저 버전.</target>
        </trans-unit>
        <trans-unit id="7ff44a7fbfb3056a7d8bb570e0b4c337dccb755c" translate="yes" xml:space="preserve">
          <source>Python 3 minor version.</source>
          <target state="translated">파이썬 3 부 버전.</target>
        </trans-unit>
        <trans-unit id="4deedcde9e4ebe75e67e8e3ba41f3278d9f67955" translate="yes" xml:space="preserve">
          <source>Python 3 patch version.</source>
          <target state="translated">파이썬 3 패치 버전.</target>
        </trans-unit>
        <trans-unit id="66e76c467d6b69ba09369da14d94bda757fb5d5c" translate="yes" xml:space="preserve">
          <source>Python 3 version.</source>
          <target state="translated">파이썬 3 버전.</target>
        </trans-unit>
        <trans-unit id="8350631259703c242d69d70386dc3389aa49c9ca" translate="yes" xml:space="preserve">
          <source>Python compiler. Target defined if component &lt;code&gt;Compiler&lt;/code&gt; is found.</source>
          <target state="translated">파이썬 컴파일러. 컴포넌트 &lt;code&gt;Compiler&lt;/code&gt; 가 발견 되면 정의 된 대상 입니다.</target>
        </trans-unit>
        <trans-unit id="1f5b04ddba128897dad72c3bfdee14c0043e4445" translate="yes" xml:space="preserve">
          <source>Python interpreter. Target defined if component &lt;code&gt;Interpreter&lt;/code&gt; is found.</source>
          <target state="translated">파이썬 인터프리터. 컴포넌트 &lt;code&gt;Interpreter&lt;/code&gt; 가있는 경우 정의 된 대상 .</target>
        </trans-unit>
        <trans-unit id="744b31f37ac5518c074cc060d174d4c58d2586ee" translate="yes" xml:space="preserve">
          <source>Python library for Python embedding. Target defined if component &lt;code&gt;Development&lt;/code&gt; is found.</source>
          <target state="translated">파이썬 내장을위한 파이썬 라이브러리. 컴포넌트 &lt;code&gt;Development&lt;/code&gt; 이 발견 되면 정의 된 대상 .</target>
        </trans-unit>
        <trans-unit id="a0fc4f52e8c019bc70b4742454136270e4671e5d" translate="yes" xml:space="preserve">
          <source>Python library for Python module. Target defined if component &lt;code&gt;Development&lt;/code&gt; is found.</source>
          <target state="translated">Python 모듈 용 Python 라이브러리. 컴포넌트 &lt;code&gt;Development&lt;/code&gt; 이 발견 되면 정의 된 대상 .</target>
        </trans-unit>
        <trans-unit id="846cde6ca60fd4e05b2b3a07c1bad07f59cfe0ce" translate="yes" xml:space="preserve">
          <source>Python major version.</source>
          <target state="translated">파이썬 메이저 버전.</target>
        </trans-unit>
        <trans-unit id="a5c74de47ae93cab44656ec1c3d5bf99c93113db" translate="yes" xml:space="preserve">
          <source>Python minor version.</source>
          <target state="translated">파이썬 부 버전.</target>
        </trans-unit>
        <trans-unit id="5b55d494f185650998d7cc943f8f445a6546db7a" translate="yes" xml:space="preserve">
          <source>Python patch version.</source>
          <target state="translated">파이썬 패치 버전.</target>
        </trans-unit>
        <trans-unit id="b84b2ebbfe114abe36a4bd19bca5aa9c5949f61f" translate="yes" xml:space="preserve">
          <source>Python version.</source>
          <target state="translated">파이썬 버전.</target>
        </trans-unit>
        <trans-unit id="fbeba94c4e9b16a43991c5615fab8c4406d33231" translate="yes" xml:space="preserve">
          <source>Qt</source>
          <target state="translated">Qt</target>
        </trans-unit>
        <trans-unit id="c0e9715765912e802bb090a608e4dffd9ed17c95" translate="yes" xml:space="preserve">
          <source>Qt 4 and Qt 5 may be used together in the same &lt;a href=&quot;cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt;&lt;code&gt;CMake buildsystem&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">Qt 4와 Qt 5는 동일한 &lt;a href=&quot;cmake-buildsystem.7#manual:cmake-buildsystem(7)&quot; id=&quot;index-0-manual:cmake-buildsystem(7)&quot;&gt; &lt;code&gt;CMake buildsystem&lt;/code&gt; &lt;/a&gt; 에서 함께 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3b5f3e7000a7039fdba83bf1988958966ba61329" translate="yes" xml:space="preserve">
          <source>Qt Build Tools</source>
          <target state="translated">Qt 빌드 도구</target>
        </trans-unit>
        <trans-unit id="020155a5f862226db67a5bbe1929cd63c6fd445e" translate="yes" xml:space="preserve">
          <source>Qt Macros</source>
          <target state="translated">Qt 매크로</target>
        </trans-unit>
        <trans-unit id="3a35467d17a7ce7b1264d9a12eafc52ee7e28c2d" translate="yes" xml:space="preserve">
          <source>Qt relies on some bundled tools for code generation, such as &lt;code&gt;moc&lt;/code&gt; for meta-object code generation, &lt;code&gt;uic&lt;/code&gt; for widget layout and population, and &lt;code&gt;rcc&lt;/code&gt; for virtual file system content generation. These tools may be automatically invoked by &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; if the appropriate conditions are met. The automatic tool invocation may be used with both Qt 4 and Qt 5.</source>
          <target state="translated">Qt는 같은 코드 생성에 대한 몇 가지 번들 도구에 의존 &lt;code&gt;moc&lt;/code&gt; 메타 오브젝트 코드 생성, &lt;code&gt;uic&lt;/code&gt; 위젯 레이아웃과 인구 및 &lt;code&gt;rcc&lt;/code&gt; 가상 파일 시스템의 콘텐츠 생성을위한. 적절한 조건이 충족되면 이러한 도구는 &lt;a href=&quot;cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 의해 자동으로 호출 될 수 있습니다 . 자동 공구 호출은 Qt 4 및 Qt 5와 함께 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bd531933b3ef1a4fb152bc653b44b86e52f2d1e" translate="yes" xml:space="preserve">
          <source>Qt relies on some bundled tools for code generation, such as &lt;code&gt;moc&lt;/code&gt; for meta-object code generation,``uic`` for widget layout and population, and &lt;code&gt;rcc&lt;/code&gt; for virtual filesystem content generation. These tools may be automatically invoked by &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; if the appropriate conditions are met. See &lt;a href=&quot;../manual/cmake-qt.7#manual:cmake-qt(7)&quot; id=&quot;index-0-manual:cmake-qt(7)&quot;&gt;&lt;code&gt;cmake-qt(7)&lt;/code&gt;&lt;/a&gt; for more.</source>
          <target state="translated">Qt 는 메타 객체 코드 생성을위한 &lt;code&gt;moc&lt;/code&gt; , 위젯 레이아웃 및 채우기를위한``uic '', 가상 파일 시스템 컨텐츠 생성을위한 &lt;code&gt;rcc&lt;/code&gt; 와 같은 코드 생성을위한 일부 번들 도구를 사용합니다 . 적절한 조건이 충족되면 이러한 도구는 &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt; &lt;code&gt;cmake(1)&lt;/code&gt; &lt;/a&gt; 의해 자동으로 호출 될 수 있습니다 . 자세한 내용은 &lt;a href=&quot;../manual/cmake-qt.7#manual:cmake-qt(7)&quot; id=&quot;index-0-manual:cmake-qt(7)&quot;&gt; &lt;code&gt;cmake-qt(7)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2a1e02568ebc448425e842744420994430b474db" translate="yes" xml:space="preserve">
          <source>Qt version detection</source>
          <target state="translated">Qt 버전 감지</target>
        </trans-unit>
        <trans-unit id="77164a8474eddd0c8191067a911d4895e876ab87" translate="yes" xml:space="preserve">
          <source>Queries system information of the host system on which cmake runs. One or more &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt; can be provided to select the information to be queried. The list of queried values is stored in &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">cmake가 실행되는 호스트 시스템의 시스템 정보를 조회합니다. 쿼리 할 정보를 선택하기 위해 하나 이상의 &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt; 를 제공 할 수 있습니다. 쿼리 된 값의 목록은 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="e853d333bc980259f704dff02c5e7567bbd44b21" translate="yes" xml:space="preserve">
          <source>Query host system specific information.</source>
          <target state="translated">호스트 시스템 특정 정보를 조회하십시오.</target>
        </trans-unit>
        <trans-unit id="577e7849675d318f26ef64a3d09a732701f9251a" translate="yes" xml:space="preserve">
          <source>Quoted Argument</source>
          <target state="translated">인용 인수</target>
        </trans-unit>
        <trans-unit id="338ec086f431c9407ce9095744e2e8ad6a15636e" translate="yes" xml:space="preserve">
          <source>Quoted argument content consists of all text between opening and closing quotes. Both &lt;a href=&quot;#escape-sequences&quot;&gt;Escape Sequences&lt;/a&gt; and &lt;a href=&quot;#variable-references&quot;&gt;Variable References&lt;/a&gt; are evaluated. A quoted argument is always given to the command invocation as exactly one argument.</source>
          <target state="translated">따옴표로 묶은 인수 내용은 여는 따옴표와 닫는 따옴표 사이의 모든 텍스트로 구성됩니다. 두 &lt;a href=&quot;#escape-sequences&quot;&gt;이스케이프 시퀀스&lt;/a&gt; 와 &lt;a href=&quot;#variable-references&quot;&gt;변수 참조는&lt;/a&gt; 평가됩니다. 인용 된 인수는 항상 정확히 하나의 인수로 명령 호출에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="ff9a40c55e2f02465b3248c4ad4078aa6d68ff6f" translate="yes" xml:space="preserve">
          <source>R-value references, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n2118.html&quot;&gt;N2118&lt;/a&gt;.</source>
          <target state="translated">R 값은 참조로서 정의 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n2118.html&quot;&gt;N2118&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57fdad6851467bc85aa55b88c0690d58cff7489e" translate="yes" xml:space="preserve">
          <source>RC</source>
          <target state="translated">RC</target>
        </trans-unit>
        <trans-unit id="378153e72cacafe21823d80300519a89a55b24f5" translate="yes" xml:space="preserve">
          <source>RCFLAGS</source>
          <target state="translated">RCFLAGS</target>
        </trans-unit>
        <trans-unit id="ccb9dd3824612c32210e27770ebb015642926f2d" translate="yes" xml:space="preserve">
          <source>REPORT_UNDEFINED_PROPERTIES</source>
          <target state="translated">REPORT_UNDEFINED_PROPERTIES</target>
        </trans-unit>
        <trans-unit id="e5de690c6148c5294059e1a982e94863d0f76764" translate="yes" xml:space="preserve">
          <source>REQUIRED indicates that this component is required, and therefore will always be installed. It will be visible in the graphical installer, but it cannot be unselected. (Typically, required components are shown greyed out).</source>
          <target state="translated">REQUIRED는이 구성 요소가 필요하므로 항상 설치됨을 나타냅니다. 그래픽 설치 프로그램에서 볼 수 있지만 선택 해제 할 수는 없습니다. 일반적으로 필요한 구성 요소는 회색으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="52373f477957e4bd53b98562acb0443f1a0108dd" translate="yes" xml:space="preserve">
          <source>REQUIRED_FILES</source>
          <target state="translated">REQUIRED_FILES</target>
        </trans-unit>
        <trans-unit id="530c43105810f88110846c74ac62b159aa2ac710" translate="yes" xml:space="preserve">
          <source>RESOURCE</source>
          <target state="translated">RESOURCE</target>
        </trans-unit>
        <trans-unit id="1fb05829998ab481ce8008d7fe8f5b7ee4e21551" translate="yes" xml:space="preserve">
          <source>RESOURCE_LOCK</source>
          <target state="translated">RESOURCE_LOCK</target>
        </trans-unit>
        <trans-unit id="2c581797ce8f46c0e6b090ffc3f50033fd52e27d" translate="yes" xml:space="preserve">
          <source>RTI is a simulation infrastructure standardized by IEEE and SISO. It has a well defined C++ API that assures that simulation applications are independent on a particular RTI implementation.</source>
          <target state="translated">RTI는 IEEE 및 SISO에 의해 표준화 된 시뮬레이션 인프라입니다. 시뮬레이션 애플리케이션이 특정 RTI 구현과 독립적임을 보장하는 잘 정의 된 C ++ API를 가지고 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6a88e6db75aafadc502f63cf5687671f8ff0489" translate="yes" xml:space="preserve">
          <source>RULE_LAUNCH_COMPILE</source>
          <target state="translated">RULE_LAUNCH_COMPILE</target>
        </trans-unit>
        <trans-unit id="098fb8faac85207ed3c004bbff3ccdc15006fcab" translate="yes" xml:space="preserve">
          <source>RULE_LAUNCH_CUSTOM</source>
          <target state="translated">RULE_LAUNCH_CUSTOM</target>
        </trans-unit>
        <trans-unit id="d585f103fffe4ba71c9f43e5a278d46f815c76c1" translate="yes" xml:space="preserve">
          <source>RULE_LAUNCH_LINK</source>
          <target state="translated">RULE_LAUNCH_LINK</target>
        </trans-unit>
        <trans-unit id="39e24e7723aacb0096e070e8153a8e49eabe6aa2" translate="yes" xml:space="preserve">
          <source>RULE_MESSAGES</source>
          <target state="translated">RULE_MESSAGES</target>
        </trans-unit>
        <trans-unit id="5b71db6a4921c00850d85dcbc4ca58cd9240572d" translate="yes" xml:space="preserve">
          <source>RUNTIME_OUTPUT_DIRECTORY</source>
          <target state="translated">RUNTIME_OUTPUT_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="8ba06d90265881b456dc99189f8de2f7769975fe" translate="yes" xml:space="preserve">
          <source>RUNTIME_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">RUNTIME_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="2e2c033fab2528f7bfaba675d8049c930603bb1f" translate="yes" xml:space="preserve">
          <source>RUNTIME_OUTPUT_DIRECTORY_CONFIG</source>
          <target state="translated">RUNTIME_OUTPUT_DIRECTORY_CONFIG</target>
        </trans-unit>
        <trans-unit id="c32d37619beb2c95d0210944d7c8996e1e39b56d" translate="yes" xml:space="preserve">
          <source>RUNTIME_OUTPUT_NAME</source>
          <target state="translated">RUNTIME_OUTPUT_NAME</target>
        </trans-unit>
        <trans-unit id="b4851708884271d52c9faef3d64f61f0951f9cb5" translate="yes" xml:space="preserve">
          <source>RUNTIME_OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</source>
          <target state="translated">RUNTIME_OUTPUT_NAME_&amp;lt;CONFIG&amp;gt;</target>
        </trans-unit>
        <trans-unit id="abb52b451ebbe9744a56f1733864dcd19630fd40" translate="yes" xml:space="preserve">
          <source>RUNTIME_OUTPUT_NAME_CONFIG</source>
          <target state="translated">RUNTIME_OUTPUT_NAME_CONFIG</target>
        </trans-unit>
        <trans-unit id="ec13fd4abab8aa5452dffd56f897df8e40d6a402" translate="yes" xml:space="preserve">
          <source>RUN_SERIAL</source>
          <target state="translated">RUN_SERIAL</target>
        </trans-unit>
        <trans-unit id="57bf944a4b17bf8686022f8bb9d4c795f789a088" translate="yes" xml:space="preserve">
          <source>Range-based for, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2930.html&quot;&gt;N2930&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2009/n2930.html&quot;&gt;N2930에&lt;/a&gt; 정의 된대로 범위 기반 .</target>
        </trans-unit>
        <trans-unit id="965f793b27d385faa073b206c85a902c5e780f53" translate="yes" xml:space="preserve">
          <source>Raw string literals, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2442.htm&quot;&gt;N2442&lt;/a&gt;.</source>
          <target state="translated">원시 문자열 리터럴로 정의 &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2442.htm&quot;&gt;N2442&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3f3a52b75e2afd32742d8a0d0af6e3408e79f3f3" translate="yes" xml:space="preserve">
          <source>Read all the CTestCustom.ctest or CTestCustom.cmake files from the given directory.</source>
          <target state="translated">주어진 디렉토리에서 모든 CTestCustom.ctest 또는 CTestCustom.cmake 파일을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="eeab64138e95288fcd865c7e4a86c5804858271e" translate="yes" xml:space="preserve">
          <source>Read content from a file called &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; and store it in a &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt;. Optionally start from the given &lt;code&gt;&amp;lt;offset&amp;gt;&lt;/code&gt; and read at most &lt;code&gt;&amp;lt;max-in&amp;gt;&lt;/code&gt; bytes. The &lt;code&gt;HEX&lt;/code&gt; option causes data to be converted to a hexadecimal representation (useful for binary data).</source>
          <target state="translated">&lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; 파일에서 컨텐츠를 읽고 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 에 저장하십시오 . 선택적으로 주어진 &lt;code&gt;&amp;lt;offset&amp;gt;&lt;/code&gt; 에서 시작하여 &lt;code&gt;&amp;lt;max-in&amp;gt;&lt;/code&gt; 바이트를 읽습니다 . &lt;code&gt;HEX&lt;/code&gt; 의 옵션 원인 데이터 (바이너리 데이터에 유용) 16 진수 표현으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="eeed0c874e76af6858d9f7def88eaadab2478987" translate="yes" xml:space="preserve">
          <source>Read file names from the given file, one per line. Blank lines are ignored. Lines may not start in &lt;code&gt;-&lt;/code&gt; except for &lt;code&gt;--add-file=&amp;lt;name&amp;gt;&lt;/code&gt; to add files whose names start in &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="translated">주어진 파일에서 한 줄에 하나씩 파일 이름을 읽습니다. 빈 줄은 무시됩니다. 라인에서 시작되지 않을 수 있습니다 &lt;code&gt;-&lt;/code&gt; 을 제외하고 &lt;code&gt;--add-file=&amp;lt;name&amp;gt;&lt;/code&gt; 이름이로 시작하는 파일을 추가 할 수 &lt;code&gt;-&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e3c865bf329d0fc41f7fdf009a1f30997a5347e" translate="yes" xml:space="preserve">
          <source>Read-only indication of whether a target is &lt;code&gt;IMPORTED&lt;/code&gt;.</source>
          <target state="translated">대상이 &lt;code&gt;IMPORTED&lt;/code&gt; 인지 여부를 읽기 전용으로 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="4a8c11a5975b7c559928536088cc9890d7da3073" translate="yes" xml:space="preserve">
          <source>Read-only location of a target on disk.</source>
          <target state="translated">디스크에서 대상의 읽기 전용 위치</target>
        </trans-unit>
        <trans-unit id="db18c3d0ad62e9995edad91809a65cd782a4cbc5" translate="yes" xml:space="preserve">
          <source>Read-only logical name for the target as used by CMake.</source>
          <target state="translated">CMake가 사용하는 대상의 읽기 전용 논리 이름.</target>
        </trans-unit>
        <trans-unit id="184a9c5008a9eb471f596bfbf83cc23bdf0c082a" translate="yes" xml:space="preserve">
          <source>Read-only property providing a target location on disk.</source>
          <target state="translated">디스크의 대상 위치를 제공하는 읽기 전용 속성입니다.</target>
        </trans-unit>
        <trans-unit id="77e121cf098a41fe8d669a50ad8789b145345617" translate="yes" xml:space="preserve">
          <source>Read-only property that contains the list of currently enabled languages</source>
          <target state="translated">현재 사용 가능한 언어 목록이 포함 된 읽기 전용 속성</target>
        </trans-unit>
        <trans-unit id="a2135f4d2bf0f76fbef4fb661b74e48ea01345e0" translate="yes" xml:space="preserve">
          <source>Read-only property that is true during a try-compile configuration.</source>
          <target state="translated">try-compile 구성 중에 참인 읽기 전용 특성입니다.</target>
        </trans-unit>
        <trans-unit id="55203a763fea4b40b7a59f8511ea8e038e9aae55" translate="yes" xml:space="preserve">
          <source>Read-only property that is true on multi-configuration generators.</source>
          <target state="translated">다중 구성 생성기에서 참인 읽기 전용 속성입니다.</target>
        </trans-unit>
        <trans-unit id="81d0dc457abce0a3eb7a9afe6b94e749728511bf" translate="yes" xml:space="preserve">
          <source>ReadMe file to be embedded in the installer. It typically describes in some detail the purpose of the project during the installation. Not all CPack generators use this file.</source>
          <target state="translated">설치 프로그램에 포함될 ReadMe 파일. 일반적으로 설치 중 프로젝트의 목적을 자세하게 설명합니다. 모든 CPack 생성기가이 파일을 사용하는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="cffa2af0a3a67cf2123e3411d020161abc01fc05" translate="yes" xml:space="preserve">
          <source>Reading</source>
          <target state="translated">Reading</target>
        </trans-unit>
        <trans-unit id="9bd6b12f855d2b764aae6c8ee24d8010d57364ba" translate="yes" xml:space="preserve">
          <source>Reading or writing variables that are being watched by a &lt;a href=&quot;../command/variable_watch#command:variable_watch&quot; id=&quot;index-0-command:variable_watch&quot;&gt;&lt;code&gt;variable_watch()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../command/variable_watch#command:variable_watch&quot; id=&quot;index-0-command:variable_watch&quot;&gt; &lt;code&gt;variable_watch()&lt;/code&gt; &lt;/a&gt; 에서 감시중인 변수 읽기 또는 쓰기</target>
        </trans-unit>
        <trans-unit id="35b8030613eb0539eac21ce69388f68888c8b1f7" translate="yes" xml:space="preserve">
          <source>Reads the cache and store the requested entries in variables with their name prefixed with the given prefix. This only reads the values, and does not create entries in the local project&amp;rsquo;s cache.</source>
          <target state="translated">캐시를 읽고 이름 앞에 접두사가 붙은 변수로 요청 된 항목을 저장합니다. 이 값만 읽고 로컬 프로젝트의 캐시에 항목을 만들지 않습니다.</target>
        </trans-unit>
        <trans-unit id="87a3811b4d100d36662fde527be361ab34184da9" translate="yes" xml:space="preserve">
          <source>Recognize &lt;code&gt;TEST&lt;/code&gt; as a operator for the &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">&lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt; &lt;code&gt;if()&lt;/code&gt; &lt;/a&gt; 명령 의 연산자로 &lt;code&gt;TEST&lt;/code&gt; 를 인식 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b5de7190312ae1619f883135ec7e722185bf1ad" translate="yes" xml:space="preserve">
          <source>Recursively search for .gcda files in build_dir rather than determining search locations by reading TargetDirectories.txt.</source>
          <target state="translated">TargetDirectories.txt를 읽고 검색 위치를 결정하지 않고 build_dir에서 .gcda 파일을 반복적으로 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="214e4184a3a64f6e721f63a60d9a27e522f22257" translate="yes" xml:space="preserve">
          <source>Reference Manuals</source>
          <target state="translated">참조 매뉴얼</target>
        </trans-unit>
        <trans-unit id="cc0d83581a6575111ee15a75d9babe90fce5087f" translate="yes" xml:space="preserve">
          <source>Reference files and outputs of custom commands created with &lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; command calls in the same directory (&lt;code&gt;CMakeLists.txt&lt;/code&gt; file). They will be brought up to date when the target is built.</source>
          <target state="translated">&lt;a href=&quot;add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt; &lt;code&gt;add_custom_command()&lt;/code&gt; &lt;/a&gt; 명령으로 작성된 사용자 정의 명령의 참조 파일 및 출력은 동일한 디렉토리 ( &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일) 에서 호출됩니다 . 대상이 구축되면 최신 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="a5f16d8119c023d81e1429a5524cccb376a9e0b7" translate="yes" xml:space="preserve">
          <source>Reference properties can be set for .NET references which are defined by the target properties &lt;a href=&quot;vs_dotnet_references#prop_tgt:VS_DOTNET_REFERENCES&quot; id=&quot;index-0-prop_tgt:VS_DOTNET_REFERENCES&quot;&gt;&lt;code&gt;VS_DOTNET_REFERENCES&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;VS_DOTNET_REFERENCE_&amp;lt;refname&amp;gt;&lt;/code&gt; and also for project references to other C# targets which are established by &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대상 속성 &lt;a href=&quot;vs_dotnet_references#prop_tgt:VS_DOTNET_REFERENCES&quot; id=&quot;index-0-prop_tgt:VS_DOTNET_REFERENCES&quot;&gt; &lt;code&gt;VS_DOTNET_REFERENCES&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;VS_DOTNET_REFERENCE_&amp;lt;refname&amp;gt;&lt;/code&gt; 에 의해 정의 된 .NET 참조 및 &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt; &lt;code&gt;target_link_libraries()&lt;/code&gt; &lt;/a&gt; 의해 설정된 다른 C # 대상에 대한 프로젝트 참조를 위해 참조 속성을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9862623c014fb0f2433bc953f1ef03790fe8e4c3" translate="yes" xml:space="preserve">
          <source>Reference qualified functions, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2439.htm&quot;&gt;N2439&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2439.htm&quot;&gt;N2439에&lt;/a&gt; 정의 된 기준 규정 함수 .</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="85e557e3a33e3bca6adacbe38878cfa5de313155" translate="yes" xml:space="preserve">
          <source>Referencing Associated Files</source>
          <target state="translated">관련 파일 참조</target>
        </trans-unit>
        <trans-unit id="2097cf5e219856f1954660a56648b19b1a0b0fb6" translate="yes" xml:space="preserve">
          <source>Referencing Directories</source>
          <target state="translated">참조 디렉토리</target>
        </trans-unit>
        <trans-unit id="4ffb39fb38f875ab2c33a6754e8e1771391f3f66" translate="yes" xml:space="preserve">
          <source>Referencing File Series</source>
          <target state="translated">파일 시리즈 참조</target>
        </trans-unit>
        <trans-unit id="2ef27b6b892f89c36ad41b738380268d0b587d94" translate="yes" xml:space="preserve">
          <source>Referencing Files</source>
          <target state="translated">파일 참조</target>
        </trans-unit>
        <trans-unit id="711514d75fdbfc437ddff16aec930ff292801248" translate="yes" xml:space="preserve">
          <source>Referencing Single Files</source>
          <target state="translated">단일 파일 참조</target>
        </trans-unit>
        <trans-unit id="6e8bb3ba1ca7076d5d20a415905375da68415d46" translate="yes" xml:space="preserve">
          <source>Regardless of which population method is used, when using the declare-populate pattern with a hierarchical project arrangement, projects at higher levels in the hierarchy are able to override the population details of content specified anywhere lower in the project hierarchy. The ability to detect whether content has already been populated ensures that even if multiple child projects want certain content to be available, the first one to populate it wins. The other child project can simply make use of the already available content instead of repeating the population for itself. See the &lt;a href=&quot;#fetch-content-examples&quot;&gt;Examples&lt;/a&gt; section which demonstrates this scenario.</source>
          <target state="translated">사용 된 채우기 방법에 관계없이 계층 적 프로젝트 배열과 함께 선언-인식 패턴을 사용할 때 계층 구조에서 더 높은 레벨의 프로젝트는 프로젝트 계층 구조에서 더 낮은 위치에 지정된 컨텐츠의 채우기 세부 사항을 대체 할 수 있습니다. 컨텐츠가 이미 채워 졌는지 여부를 감지하는 기능을 통해 여러 하위 프로젝트가 특정 컨텐츠를 사용할 수 있기를 원하더라도 컨텐츠를 채우는 첫 번째 컨텐츠가 우선합니다. 다른 하위 프로젝트는 인구 자체를 반복하는 대신 이미 사용 가능한 컨텐츠를 간단히 사용할 수 있습니다. 이 시나리오를 보여주는 &lt;a href=&quot;#fetch-content-examples&quot;&gt;예제&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="78605e4a83d73d088fa827349d9209b8ea85dbaf" translate="yes" xml:space="preserve">
          <source>Regex Specification</source>
          <target state="translated">정규식 사양</target>
        </trans-unit>
        <trans-unit id="b09d70de5c1381cfd2099534173c39992f7a7f75" translate="yes" xml:space="preserve">
          <source>Regex matching possible target architecture library directory names.</source>
          <target state="translated">가능한 대상 아키텍처 라이브러리 디렉토리 이름과 일치하는 정규식.</target>
        </trans-unit>
        <trans-unit id="ebfa2518426694318fa20133d2c831e195187a52" translate="yes" xml:space="preserve">
          <source>Registry key used when installing this project. This is only used by installers for Windows. The default value is based on the installation directory.</source>
          <target state="translated">이 프로젝트를 설치할 때 사용되는 레지스트리 키. Windows 용 설치 프로그램에서만 사용합니다. 기본값은 설치 디렉토리를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="ab140354a34bd045ff52d42f722acc1c4ffada22" translate="yes" xml:space="preserve">
          <source>Regular Expressions</source>
          <target state="translated">정규식</target>
        </trans-unit>
        <trans-unit id="abbe243d70cfd6d3424ea5acc788a43505a7e157" translate="yes" xml:space="preserve">
          <source>Reject source and build dirs in installed &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">설치된 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 에서 소스를 거부하고 디렉토리를 빌드하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c67114b009f9a52837bcd967754cee1e225f3f5" translate="yes" xml:space="preserve">
          <source>Relative paths are allowed and are interpreted relative to the current binary directory.</source>
          <target state="translated">상대 경로가 허용되며 현재 이진 디렉토리를 기준으로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="44fd0a18925b15f60c12a881415331ec552eea17" translate="yes" xml:space="preserve">
          <source>Relative paths are interpreted relative to the source directory where the command appears. Relative paths are not allowed in the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-3-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets.</source>
          <target state="translated">상대 경로는 명령이 나타나는 소스 디렉토리를 기준으로 해석됩니다. 상대 경로는 허용되지 않습니다 &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-4-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt; &lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-3-prop_tgt:IMPORTED&quot;&gt; &lt;code&gt;IMPORTED&lt;/code&gt; &lt;/a&gt; 목표.</target>
        </trans-unit>
        <trans-unit id="1af3da37b7a7328b9408b5936beaf0c224b2ff53" translate="yes" xml:space="preserve">
          <source>Relative paths in &lt;code&gt;ARCHIVE_DIR&lt;/code&gt; and &lt;code&gt;RUNTIME_DIR&lt;/code&gt; are interpreted with respect to the build directory corresponding to the source directory in which the function is invoked.</source>
          <target state="translated">&lt;code&gt;ARCHIVE_DIR&lt;/code&gt; 및 &lt;code&gt;RUNTIME_DIR&lt;/code&gt; 의 상대 경로 는 함수가 호출 된 소스 디렉토리에 해당하는 빌드 디렉토리와 관련하여 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="18a1e66c18a9008a51d581ff895cc778a119d586" translate="yes" xml:space="preserve">
          <source>Relative paths not allowed in &lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:LINK_DIRECTORIES&quot;&gt;&lt;code&gt;LINK_DIRECTORIES&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="translated">&lt;a href=&quot;../prop_tgt/link_directories#prop_tgt:LINK_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:LINK_DIRECTORIES&quot;&gt; &lt;code&gt;LINK_DIRECTORIES&lt;/code&gt; &lt;/a&gt; 대상 속성 에 상대 경로가 허용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="4b7950632565091dde4451335284dd601ece1efa" translate="yes" xml:space="preserve">
          <source>Relative paths should not be added to this property directly.</source>
          <target state="translated">상대 경로는이 속성에 직접 추가해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="6c11af06c5b262fbcdc5a31dbfa23d1e038b99a4" translate="yes" xml:space="preserve">
          <source>Relative paths should not be added to this property directly. Use one of the commands above instead to handle relative paths.</source>
          <target state="translated">상대 경로는이 속성에 직접 추가해서는 안됩니다. 상대 경로를 처리하려면 위의 명령 중 하나를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fb22eaad75eba4cfc01e609a76dc358f4a1f459c" translate="yes" xml:space="preserve">
          <source>Relaxed constexpr, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3652.html&quot;&gt;N3652&lt;/a&gt;.</source>
          <target state="translated">로 정의 편안 constexpr, &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3652.html&quot;&gt;N3652&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fb339ce58b2d6df3daf462f90965de45acd1a894" translate="yes" xml:space="preserve">
          <source>Relaxed mode has to be enabled for KDE4 compatibility.</source>
          <target state="translated">KDE4 호환성을 위해서는 릴랙스 모드를 활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="fbff3ff04a0b73cb047eabb3c0142ef2dfff872a" translate="yes" xml:space="preserve">
          <source>Release versions and release candidate versions of CMake use the format:</source>
          <target state="translated">CMake의 릴리스 버전 및 릴리스 후보 버전은 다음 형식을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8673ccb8a67277901c706b56daa3d16a127397f0" translate="yes" xml:space="preserve">
          <source>Remove -D define flags added by &lt;a href=&quot;add_definitions#command:add_definitions&quot; id=&quot;index-0-command:add_definitions&quot;&gt;&lt;code&gt;add_definitions()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;add_definitions#command:add_definitions&quot; id=&quot;index-0-command:add_definitions&quot;&gt; &lt;code&gt;add_definitions()&lt;/code&gt; &lt;/a&gt; 에 의해 추가 된 -D define 플래그를 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad26ca387f2bbbda8509454bca078699c6c52102" translate="yes" xml:space="preserve">
          <source>Remove &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; directories and their contents. If a directory does not exist it will be silently ignored.</source>
          <target state="translated">&lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; 디렉토리와 그 내용을 제거하십시오 . 디렉토리가 없으면 자동으로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="479cb2ffa2271052a0d148b28f22bbed14d67322" translate="yes" xml:space="preserve">
          <source>Remove DCMTK entry from the CMake cache per &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 문서 마다 CMake 캐시에서 DCMTK 항목을 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="7bed97ed83bfea7e2ea3c6079707f532b0f18c42" translate="yes" xml:space="preserve">
          <source>Remove matching entries from CMake &lt;code&gt;CACHE&lt;/code&gt;.</source>
          <target state="translated">CMake &lt;code&gt;CACHE&lt;/code&gt; 에서 일치하는 항목을 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="de2f6a1377faae08e5232c24fd32a840ff60d687" translate="yes" xml:space="preserve">
          <source>Remove the file(s). If any of the listed files already do not exist, the command returns a non-zero exit code, but no message is logged. The &lt;code&gt;-f&lt;/code&gt; option changes the behavior to return a zero exit code (i.e. success) in such situations instead. &lt;code&gt;remove&lt;/code&gt; does not follow symlinks. That means it remove only symlinks and not files it point to.</source>
          <target state="translated">파일을 제거하십시오. 나열된 파일 중 하나라도 존재하지 않으면 명령은 0이 아닌 종료 코드를 리턴하지만 메시지는 기록되지 않습니다. &lt;code&gt;-f&lt;/code&gt; 옵션 대신 이러한 상황에서 제로 (0) 종료 코드 (즉, 성공)을 반환하는 동작을 변경합니다. &lt;code&gt;remove&lt;/code&gt; 는 심볼릭 링크를 따르지 않습니다. 즉, 심볼릭 링크 만 제거하고 가리키는 파일은 제거하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7ab727799a066538ea90664f6e5294293f5422e6" translate="yes" xml:space="preserve">
          <source>Remove the given files. The &lt;code&gt;REMOVE_RECURSE&lt;/code&gt; mode will remove the given files and directories, also non-empty directories. No error is emitted if a given file does not exist. Relative input paths are evaluated with respect to the current source directory. Empty input paths are ignored with a warning.</source>
          <target state="translated">주어진 파일을 제거하십시오. &lt;code&gt;REMOVE_RECURSE&lt;/code&gt; 의 모드는 주어진 파일과 디렉토리, 비어 있지 않은 디렉토리를 제거합니다. 주어진 파일이 존재하지 않으면 오류가 발생하지 않습니다. 상대 입력 경로는 현재 소스 디렉토리와 관련하여 평가됩니다. 빈 입력 경로는 경고와 함께 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="7cf3b376a2ceebb66a9367d761f11a89594e8ea5" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; from the currently available &lt;a href=&quot;../manual/cmake-env-variables.7#manual:cmake-env-variables(7)&quot; id=&quot;index-0-manual:cmake-env-variables(7)&quot;&gt;&lt;code&gt;Environment Variables&lt;/code&gt;&lt;/a&gt;. Subsequent calls of &lt;code&gt;$ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt; will return the empty string.</source>
          <target state="translated">현재 사용 가능한 &lt;a href=&quot;../manual/cmake-env-variables.7#manual:cmake-env-variables(7)&quot; id=&quot;index-0-manual:cmake-env-variables(7)&quot;&gt; &lt;code&gt;Environment Variables&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;&amp;lt;variable&amp;gt;&lt;/code&gt; 를 제거합니다 . &lt;code&gt;$ENV{&amp;lt;variable&amp;gt;}&lt;/code&gt; 의 후속 호출은 빈 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="167c4d938bb7bbae561dd495d7848c3f270f2c42" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;VALUE&lt;/code&gt; from the variable &lt;code&gt;VAR&lt;/code&gt;. This is typically used to remove entries from a vector (e.g. semicolon separated list). &lt;code&gt;VALUE&lt;/code&gt; is expanded.</source>
          <target state="translated">변수 &lt;code&gt;VAR&lt;/code&gt; 에서 &lt;code&gt;VALUE&lt;/code&gt; 를 제거합니다 . 일반적으로 벡터에서 항목을 제거하는 데 사용됩니다 (예 : 세미콜론으로 구분 된 목록). &lt;code&gt;VALUE&lt;/code&gt; 이 (가) 확장되었습니다.</target>
        </trans-unit>
        <trans-unit id="1a82299e8a046a85a31cd07938c47588fdd9b12b" translate="yes" xml:space="preserve">
          <source>Removes a binary directory. This command will perform some checks prior to deleting the directory in an attempt to avoid malicious or accidental directory deletion.</source>
          <target state="translated">이진 디렉토리를 제거합니다. 이 명령은 악의적이거나 우발적 인 디렉토리 삭제를 피하기 위해 디렉토리를 삭제하기 전에 몇 가지 검사를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="676400a15444d683161367f1dadac9d14446a0d8" translate="yes" xml:space="preserve">
          <source>Removes a normal variable from the current scope, causing it to become undefined. If &lt;code&gt;CACHE&lt;/code&gt; is present, then a cache variable is removed instead of a normal variable. Note that when evaluating &lt;a href=&quot;../manual/cmake-language.7#variable-references&quot;&gt;Variable References&lt;/a&gt; of the form &lt;code&gt;${VAR}&lt;/code&gt;, CMake first searches for a normal variable with that name. If no such normal variable exists, CMake will then search for a cache entry with that name. Because of this unsetting a normal variable can expose a cache variable that was previously hidden. To force a variable reference of the form &lt;code&gt;${VAR}&lt;/code&gt; to return an empty string, use &lt;code&gt;set(&amp;lt;variable&amp;gt; &quot;&quot;)&lt;/code&gt;, which clears the normal variable but leaves it defined.</source>
          <target state="translated">현재 범위에서 정규 변수를 제거하여 정의되지 않게합니다. 경우 &lt;code&gt;CACHE&lt;/code&gt; 가 존재하고, 캐시 변수 대신 통상의 변수를 제거한다. &lt;code&gt;${VAR}&lt;/code&gt; 형식의 &lt;a href=&quot;../manual/cmake-language.7#variable-references&quot;&gt;변수 참조&lt;/a&gt; 를 평가할 때 CMake는 먼저 해당 이름의 일반 변수를 검색합니다. 이러한 일반 변수가 없으면 CMake는 해당 이름의 캐시 항목을 검색합니다. 이 설정 해제로 인해 일반 변수는 이전에 숨겨진 캐시 변수를 노출시킬 수 있습니다. &lt;code&gt;${VAR}&lt;/code&gt; 형식의 변수 참조가 빈 문자열을 리턴하도록하려면 &lt;code&gt;set(&amp;lt;variable&amp;gt; &quot;&quot;)&lt;/code&gt; . 이는 일반 변수를 지우지 만 정의 된 상태로 둡니다.</target>
        </trans-unit>
        <trans-unit id="1ca698b994b89730ff15f58bd50fca87a9f432fa" translate="yes" xml:space="preserve">
          <source>Removes duplicated items in the given &lt;code&gt;list&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;list&lt;/code&gt; 에서 중복 된 항목을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="39acdeccaf48ebca4afe5d5d3b3b02e7f141ea40" translate="yes" xml:space="preserve">
          <source>Removes duplicated items in the list. The relative order of items is preserved, but if duplicates are encountered, only the first instance is preserved.</source>
          <target state="translated">목록에서 중복 된 항목을 제거합니다. 항목의 상대적 순서는 유지되지만 중복이 발생하면 첫 번째 인스턴스 만 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="78b9f6ad389449a7cf7417a495e50c9985619316" translate="yes" xml:space="preserve">
          <source>Removes flags (added by &lt;a href=&quot;add_definitions#command:add_definitions&quot; id=&quot;index-1-command:add_definitions&quot;&gt;&lt;code&gt;add_definitions()&lt;/code&gt;&lt;/a&gt;) from the compiler command line for sources in the current directory and below.</source>
          <target state="translated">현재 디렉토리와 그 아래의 소스에 대한 컴파일러 명령 행에서 플래그 ( &lt;a href=&quot;add_definitions#command:add_definitions&quot; id=&quot;index-1-command:add_definitions&quot;&gt; &lt;code&gt;add_definitions()&lt;/code&gt; &lt;/a&gt; 에 의해 추가됨)를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="bdc88d87d128bca66d930055a032fe9f8fcf7bea" translate="yes" xml:space="preserve">
          <source>Removes items at given indices from the list.</source>
          <target state="translated">주어진 색인에서 항목을 목록에서 제거합니다.</target>
        </trans-unit>
        <trans-unit id="e9f733c69ed0ff230d88dafce58852a812d7407e" translate="yes" xml:space="preserve">
          <source>Removes the given items from the list.</source>
          <target state="translated">주어진 항목을 목록에서 제거합니다.</target>
        </trans-unit>
        <trans-unit id="23198055461ea48e56a07a2afe093d35eceefb91" translate="yes" xml:space="preserve">
          <source>Rename a file or directory (on one volume). If file with the &lt;code&gt;&amp;lt;newname&amp;gt;&lt;/code&gt; name already exists, then it will be silently replaced.</source>
          <target state="translated">하나의 볼륨에서 파일 또는 디렉토리의 이름을 바꿉니다. &lt;code&gt;&amp;lt;newname&amp;gt;&lt;/code&gt; 이름을 가진 파일이 이미 존재하면 자동으로 교체됩니다.</target>
        </trans-unit>
        <trans-unit id="d27940112b132367045a1f095062316c2429ecdd" translate="yes" xml:space="preserve">
          <source>Repetition count for &lt;code&gt;STATIC&lt;/code&gt; libraries with cyclic dependencies.</source>
          <target state="translated">주기적 종속성이있는 &lt;code&gt;STATIC&lt;/code&gt; 라이브러리의 반복 수</target>
        </trans-unit>
        <trans-unit id="7d4bc2eade34fbc64cb6642d193586a60d7d103d" translate="yes" xml:space="preserve">
          <source>Repetition count for cycles of &lt;code&gt;IMPORTED&lt;/code&gt; static libraries.</source>
          <target state="translated">&lt;code&gt;IMPORTED&lt;/code&gt; 정적 라이브러리의 주기에 대한 반복 횟수 .</target>
        </trans-unit>
        <trans-unit id="d934c3bc93e2ee4e576e083dec140ee8ec8d3e25" translate="yes" xml:space="preserve">
          <source>Replace all occurrences of &lt;code&gt;match_string&lt;/code&gt; in the input with &lt;code&gt;replace_string&lt;/code&gt; and store the result in the output.</source>
          <target state="translated">입력에서 &lt;code&gt;match_string&lt;/code&gt; 을 모두 &lt;code&gt;replace_string&lt;/code&gt; 으로 바꾸고 결과를 출력에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="9149b08820ddcb6eeb1e845b4bcf88a6bb9bb6d4" translate="yes" xml:space="preserve">
          <source>Replace the default &lt;code&gt;FortranCInterface_&lt;/code&gt; prefix with a given namespace &lt;code&gt;&amp;lt;macro-ns&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">기본 &lt;code&gt;FortranCInterface_&lt;/code&gt; 접 두부를 지정된 네임 스페이스 &lt;code&gt;&amp;lt;macro-ns&amp;gt;&lt;/code&gt; 로바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="c385e347b2af0a4d67c9b1c9902c4b0b140d1abd" translate="yes" xml:space="preserve">
          <source>Replacement</source>
          <target state="translated">Replacement</target>
        </trans-unit>
        <trans-unit id="1378fc73762b234abf29dc695426a05536c57649" translate="yes" xml:space="preserve">
          <source>Reply files (including the index file) will never be replaced by files of the same name but different content. This allows a client to read the files concurrently with a running CMake that may generate a new reply. However, after generating a new reply CMake will attempt to remove reply files from previous runs that it did not just write. If a client attempts to read a reply file referenced by the index but finds the file missing, that means a concurrent CMake has generated a new reply. The client may simply start again by reading the new reply index file.</source>
          <target state="translated">응답 파일 (인덱스 파일 포함)은 이름은 같지만 내용이 다른 파일로 대체되지 않습니다. 이를 통해 클라이언트는 새로운 응답을 생성 할 수있는 실행중인 CMake와 동시에 파일을 읽을 수 있습니다. 그러나 새 응답을 생성 한 후 CMake는 이전 실행에서 응답 파일을 제거하지 않고 제거하려고 시도합니다. 클라이언트가 색인이 참조하는 응답 파일을 읽으려고하지만 누락 된 파일을 찾으면 동시 CMake가 새 응답을 생성했음을 의미합니다. 클라이언트는 새 응답 색인 파일을 읽고 다시 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c0b1fb0d80ddc00f2df105650d8ce7944550c02" translate="yes" xml:space="preserve">
          <source>Reply files containing specific &lt;a href=&quot;#object-kinds&quot;&gt;Object Kinds&lt;/a&gt; are written by CMake. The names of these files are unspecified and must not be interpreted by clients. Clients must first read the &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 Reply Index File&lt;/a&gt; and and follow references to the names of the desired response objects.</source>
          <target state="translated">특정 &lt;a href=&quot;#object-kinds&quot;&gt;객체 종류&lt;/a&gt; 가 포함 된 응답 파일 은 CMake에서 작성합니다. 이 파일의 이름은 지정되어 있지 않으며 클라이언트가 해석해서는 안됩니다. 클라이언트는 먼저 &lt;a href=&quot;#v1-reply-index-file&quot;&gt;v1 응답 색인 파일을&lt;/a&gt; 읽고 원하는 응답 오브젝트의 이름에 대한 참조를 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="f7042183bf1f3c902107109f980256a174fe76ad" translate="yes" xml:space="preserve">
          <source>Report cmake capabilities in JSON format. The output is a JSON object with the following keys:</source>
          <target state="translated">cmake 기능을 JSON 형식으로보고하십시오. 출력은 다음 키가있는 JSON 객체입니다.</target>
        </trans-unit>
        <trans-unit id="e4b0bf7fd40549654e2e7666b4839611d7be7a5b" translate="yes" xml:space="preserve">
          <source>Report problems to &amp;lt;&lt;a href=&quot;mailto:certi-devel%40nongnu.org&quot;&gt;certi-devel@nongnu.org&lt;/a&gt;&amp;gt;</source>
          <target state="translated">&amp;lt; &lt;a href=&quot;mailto:certi-devel%40nongnu.org&quot;&gt;certi-devel@nongnu.org&lt;/a&gt; &amp;gt;에 문제 신고</target>
        </trans-unit>
        <trans-unit id="b87289c6047a63d36caa5f36ae3fa7b23eb082e7" translate="yes" xml:space="preserve">
          <source>Report the compile build output and the output from running the executable in the given variable. This option exists for legacy reasons. Prefer &lt;code&gt;COMPILE_OUTPUT_VARIABLE&lt;/code&gt; and &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; instead.</source>
          <target state="translated">컴파일 빌드 출력과 주어진 변수에서 실행 파일을 실행 한 결과를보고하십시오. 이 옵션은 레거시 이유로 존재합니다. 대신 &lt;code&gt;COMPILE_OUTPUT_VARIABLE&lt;/code&gt; 및 &lt;code&gt;RUN_OUTPUT_VARIABLE&lt;/code&gt; 을 선호 하십시오 .</target>
        </trans-unit>
        <trans-unit id="1192c695bedb1e42fcde4ef5867755b6c3d81ca3" translate="yes" xml:space="preserve">
          <source>Report the compile step build output in a given variable.</source>
          <target state="translated">주어진 변수에서 컴파일 단계 빌드 출력을보고하십시오.</target>
        </trans-unit>
        <trans-unit id="dbdbc1be288413b7da835d08ff5b9f82a6749abb" translate="yes" xml:space="preserve">
          <source>Report the output from running the executable in a given variable.</source>
          <target state="translated">주어진 변수에서 실행 파일을 실행 한 결과를보고합니다.</target>
        </trans-unit>
        <trans-unit id="a097f45af15efec688b240772c2c1236518d6562" translate="yes" xml:space="preserve">
          <source>Request scanning of implicit dependencies of an input file. The language given specifies the programming language whose corresponding dependency scanner should be used. Currently only &lt;code&gt;C&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; language scanners are supported. The language has to be specified for every file in the &lt;code&gt;IMPLICIT_DEPENDS&lt;/code&gt; list. Dependencies discovered from the scanning are added to those of the custom command at build time. Note that the &lt;code&gt;IMPLICIT_DEPENDS&lt;/code&gt; option is currently supported only for Makefile generators and will be ignored by other generators.</source>
          <target state="translated">입력 파일의 암시 적 종속성 스캔을 요청하십시오. 주어진 언어는 해당 종속성 스캐너를 사용해야하는 프로그래밍 언어를 지정합니다. 현재 &lt;code&gt;C&lt;/code&gt; 및 &lt;code&gt;CXX&lt;/code&gt; 언어 스캐너 만 지원됩니다. &lt;code&gt;IMPLICIT_DEPENDS&lt;/code&gt; 목록의 모든 파일에 언어를 지정해야 합니다. 스캔시 발견 된 종속성은 빌드시 사용자 정의 명령의 종속성에 추가됩니다. 있습니다 &lt;code&gt;IMPLICIT_DEPENDS&lt;/code&gt; 의 옵션은 현재 메이크 발전기에만 지원되고 다른 발전기에 의해 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="6a3f41b8b0f9cd2158548ffadbd15caa495d91f3" translate="yes" xml:space="preserve">
          <source>Request that this file not be overwritten on install or reinstall.</source>
          <target state="translated">설치 또는 재설치시이 파일을 덮어 쓰지 않도록 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="1ca01875a026c44f48c85befee65ddf51220531a" translate="yes" xml:space="preserve">
          <source>Request that this file not be removed on uninstall.</source>
          <target state="translated">설치 제거시이 파일을 제거하지 않도록 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="e1f85276c4618227f4a6a29347408a3341b387e5" translate="yes" xml:space="preserve">
          <source>Require a minimum version of cmake.</source>
          <target state="translated">cmake의 최소 버전이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ea664bc088e8a31d1f8dd35eb88af2a9fd61d4fc" translate="yes" xml:space="preserve">
          <source>Require each test to run &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; times without failing in order to pass.</source>
          <target state="translated">합격하지 않고 각 테스트를 &lt;code&gt;&amp;lt;n&amp;gt;&lt;/code&gt; 번 실행 해야합니다.</target>
        </trans-unit>
        <trans-unit id="ed684ef0ebd379dbfdb0b3914f9e7df6398e08f3" translate="yes" xml:space="preserve">
          <source>Required compiler definitions for HDF5</source>
          <target state="translated">HDF5에 필요한 컴파일러 정의</target>
        </trans-unit>
        <trans-unit id="69b27864ffb611c1dd8518b9ddf5db5f671186ed" translate="yes" xml:space="preserve">
          <source>Required compiler definitions for HDF5 C bindings</source>
          <target state="translated">HDF5 C 바인딩에 필요한 컴파일러 정의</target>
        </trans-unit>
        <trans-unit id="788474847cf0f18894369c4bad8f49d47df54e93" translate="yes" xml:space="preserve">
          <source>Required compiler definitions for HDF5 C++ bindings</source>
          <target state="translated">HDF5 C ++ 바인딩에 필요한 컴파일러 정의</target>
        </trans-unit>
        <trans-unit id="ff8336e0e4eeee7b9e0f33ee81a38bd5c3083a62" translate="yes" xml:space="preserve">
          <source>Required compiler definitions for HDF5 Fortran bindings</source>
          <target state="translated">HDF5 포트란 바인딩에 필요한 컴파일러 정의</target>
        </trans-unit>
        <trans-unit id="8bc9510ef72795c9c74ddf5b04cec2736a8d0428" translate="yes" xml:space="preserve">
          <source>Required include directories for HDF5 C bindings</source>
          <target state="translated">HDF5 C 바인딩을위한 필수 포함 디렉토리</target>
        </trans-unit>
        <trans-unit id="982bb2832ab60822ca2dad3de123c55be0794be5" translate="yes" xml:space="preserve">
          <source>Required include directories for HDF5 C++ bindings</source>
          <target state="translated">HDF5 C ++ 바인딩을위한 필수 포함 디렉토리</target>
        </trans-unit>
        <trans-unit id="29545692ddb989ac79b5b51b9f7a37b2de6bad48" translate="yes" xml:space="preserve">
          <source>Required include directories for HDF5 Fortran bindings</source>
          <target state="translated">HDF5 포트란 바인딩에 필요한 포함 디렉토리</target>
        </trans-unit>
        <trans-unit id="888600419bea479936e140e78edc608b5f25f1eb" translate="yes" xml:space="preserve">
          <source>Required libraries for all requested bindings</source>
          <target state="translated">요청 된 모든 바인딩에 필요한 라이브러리</target>
        </trans-unit>
        <trans-unit id="3dd0a1a3fe08d05f5a684904db59fb864517f5de" translate="yes" xml:space="preserve">
          <source>Required libraries for the HDF5 C bindings</source>
          <target state="translated">HDF5 C 바인딩에 필요한 라이브러리</target>
        </trans-unit>
        <trans-unit id="fa1ac59d84966f6d7284eac7d5243744f0f90758" translate="yes" xml:space="preserve">
          <source>Required libraries for the HDF5 C++ bindings</source>
          <target state="translated">HDF5 C ++ 바인딩에 필요한 라이브러리</target>
        </trans-unit>
        <trans-unit id="f835133f817015705cc21c3dd4a69870649ccba6" translate="yes" xml:space="preserve">
          <source>Required libraries for the HDF5 Fortran bindings</source>
          <target state="translated">HDF5 포트란 바인딩에 필요한 라이브러리</target>
        </trans-unit>
        <trans-unit id="f7be38497b595b0b20649ba010c06d74a60035b1" translate="yes" xml:space="preserve">
          <source>Required libraries for the HDF5 high level API for all bindings, if the &lt;code&gt;HL&lt;/code&gt; component is enabled</source>
          <target state="translated">&lt;code&gt;HL&lt;/code&gt; 구성 요소가 사용 가능한 경우 모든 바인딩에 대한 HDF5 고급 API에 필요한 라이브러리</target>
        </trans-unit>
        <trans-unit id="8d942b1f798393fb47c8b4d1f23f2329fce1ed9c" translate="yes" xml:space="preserve">
          <source>Required libraries for the high level C bindings</source>
          <target state="translated">높은 수준의 C 바인딩에 필요한 라이브러리</target>
        </trans-unit>
        <trans-unit id="24c8b65bc3be0d909769c8745f29a41ba66ab3b4" translate="yes" xml:space="preserve">
          <source>Required libraries for the high level C++ bindings</source>
          <target state="translated">고급 C ++ 바인딩에 필요한 라이브러리</target>
        </trans-unit>
        <trans-unit id="383422329b315a778fb318da122caaf9d4a37b47" translate="yes" xml:space="preserve">
          <source>Required libraries for the high level Fortran bindings.</source>
          <target state="translated">고급 Fortran 바인딩에 필요한 라이브러리.</target>
        </trans-unit>
        <trans-unit id="ab93990150d7ee2ada12f61fcd6c664332ff4f60" translate="yes" xml:space="preserve">
          <source>Requires CMake 2.6 or greater because it uses function and PARENT_SCOPE. Also depends on BundleUtilities.cmake.</source>
          <target state="translated">함수 및 PARENT_SCOPE를 사용하므로 CMake 2.6 이상이 필요합니다. 또한 BundleUtilities.cmake에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d7901f5b21040783d43e4d20a2a4726aa7b909c4" translate="yes" xml:space="preserve">
          <source>Requires CMake 2.6 or greater because it uses function, break and &lt;code&gt;PARENT_SCOPE&lt;/code&gt;. Also depends on &lt;code&gt;GetPrerequisites.cmake&lt;/code&gt;.</source>
          <target state="translated">function, break 및 &lt;code&gt;PARENT_SCOPE&lt;/code&gt; 를 사용하므로 CMake 2.6 이상이 필요합니다 . &lt;code&gt;GetPrerequisites.cmake&lt;/code&gt; 에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="3febd0b2216d13af08f7ec6406b1f9d81d63cf39" translate="yes" xml:space="preserve">
          <source>Requires CMake 2.6 or greater because it uses function, break, return and PARENT_SCOPE.</source>
          <target state="translated">function, break, return 및 PARENT_SCOPE를 사용하므로 CMake 2.6 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2f1c45f190e2ba402151cc28b1954d5a0859d628" translate="yes" xml:space="preserve">
          <source>Requires any version of &lt;code&gt;xrender&lt;/code&gt;. Example output variables set by a successful call:</source>
          <target state="translated">&lt;code&gt;xrender&lt;/code&gt; 의 모든 버전이 필요합니다 . 성공적인 호출로 설정된 출력 변수의 예 :</target>
        </trans-unit>
        <trans-unit id="4ce3f119c600059a6f6b499202057e3418b513f3" translate="yes" xml:space="preserve">
          <source>Requiring Language Standards</source>
          <target state="translated">언어 표준 요구</target>
        </trans-unit>
        <trans-unit id="912cf1116ac86f61192b0ae538df98aa691f6a1b" translate="yes" xml:space="preserve">
          <source>Resolve an item into an existing full path file.</source>
          <target state="translated">항목을 기존 전체 경로 파일로 해결하십시오.</target>
        </trans-unit>
        <trans-unit id="cac591640d9bd05732e851993506a6901de4bf31" translate="yes" xml:space="preserve">
          <source>Responds to the $SDLDIR and $SDLSOUNDDIR environmental variable that would correspond to the ./configure &amp;ndash;prefix=$SDLDIR used in building SDL.</source>
          <target state="translated">SDL 빌드에 사용 된 ./configure &amp;ndash;prefix = $ SDLDIR에 해당하는 $ SDLDIR 및 $ SDLSOUNDDIR 환경 변수에 응답합니다.</target>
        </trans-unit>
        <trans-unit id="d9edf49cbc2accc8eead830d36731645a9809a49" translate="yes" xml:space="preserve">
          <source>Restrict execution of the test only to the named configurations.</source>
          <target state="translated">명명 된 구성으로 만 테스트 실행을 제한하십시오.</target>
        </trans-unit>
        <trans-unit id="89f6058d2fa17c09d8a263de7215ab839f8d40f1" translate="yes" xml:space="preserve">
          <source>Restrict variable replacement to references of the form &lt;code&gt;@VAR@&lt;/code&gt;. This is useful for configuring scripts that use &lt;code&gt;${VAR}&lt;/code&gt; syntax.</source>
          <target state="translated">변수 대체는 &lt;code&gt;@VAR@&lt;/code&gt; 형식의 참조로 제한하십시오 . &lt;code&gt;${VAR}&lt;/code&gt; 구문 을 사용하는 스크립트를 구성 할 때 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="3edced4502507c24653991b9076fe530160ad72e" translate="yes" xml:space="preserve">
          <source>Result Variables</source>
          <target state="translated">결과 변수</target>
        </trans-unit>
        <trans-unit id="585a85bdbf4b4f295967d678ea3f26d7f2f02e2c" translate="yes" xml:space="preserve">
          <source>Result variables</source>
          <target state="translated">결과 변수</target>
        </trans-unit>
        <trans-unit id="81890f0a816a8c3e54525fa2e95f42a5776e3f67" translate="yes" xml:space="preserve">
          <source>Retrieve the list of available modules:</source>
          <target state="translated">사용 가능한 모듈 목록을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="e4a4b1d4e24c0f8114c167b0f46ad53a2124a0b1" translate="yes" xml:space="preserve">
          <source>Retrieve the list of currently loaded modules:</source>
          <target state="translated">현재로드 된 모듈 목록을 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="754be4ef42b03fec8eb30a0ff42abf543fb301c0" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a pkg-config variable &lt;code&gt;varName&lt;/code&gt; and stores it in the result variable &lt;code&gt;resultVar&lt;/code&gt; in the calling scope.</source>
          <target state="translated">pkg-config 변수 &lt;code&gt;varName&lt;/code&gt; 의 값을 검색하여 호출 범위 의 결과 변수 &lt;code&gt;resultVar&lt;/code&gt; 에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="5cea601bc04466236e43c98159fb4dfe44bd0c8e" translate="yes" xml:space="preserve">
          <source>Return 1 in &amp;lt;result_var&amp;gt; if &amp;lt;file&amp;gt; is a binary executable, 0 otherwise.</source>
          <target state="translated">&amp;lt;file&amp;gt;이 이진 실행 파일이면 &amp;lt;result_var&amp;gt;에서 1을, 그렇지 않으면 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1d1550777810d00507cbb78076a2a42ea87882cf" translate="yes" xml:space="preserve">
          <source>Return a random string of given length consisting of characters from the given alphabet. Default length is 5 characters and default alphabet is all numbers and upper and lower case letters. If an integer &lt;code&gt;RANDOM_SEED&lt;/code&gt; is given, its value will be used to seed the random number generator.</source>
          <target state="translated">주어진 알파벳의 문자로 구성된 주어진 길이의 임의 문자열을 반환합니다. 기본 길이는 5 자이며 기본 알파벳은 모든 숫자와 대문자와 소문자입니다. 정수 &lt;code&gt;RANDOM_SEED&lt;/code&gt; 가 제공되면 그 값은 난수 생성기를 시드하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2397a76cd925c9a2874f492546285dd8ea532e31" translate="yes" xml:space="preserve">
          <source>Return code to mark a test as skipped.</source>
          <target state="translated">테스트를 건너 뛴 것으로 표시하는 리턴 코드.</target>
        </trans-unit>
        <trans-unit id="6fd870810382a4f8e194fa99ad99dcb28e2b2e09" translate="yes" xml:space="preserve">
          <source>Return from a file, directory or function.</source>
          <target state="translated">파일, 디렉토리 또는 함수에서 돌아옵니다.</target>
        </trans-unit>
        <trans-unit id="db9a42a3471dd8c045b2eaaf44a72bb08fe7f4e0" translate="yes" xml:space="preserve">
          <source>Return the path that others should refer to the item by when the item is embedded inside a bundle.</source>
          <target state="translated">항목이 번들 안에 포함될 때 다른 사람이 항목을 참조해야하는 경로를 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="95a4f2a0a8a3d3737a2a86d7b8e0d86b55f671d5" translate="yes" xml:space="preserve">
          <source>Return the position where the given substring was found in the supplied string. If the &lt;code&gt;REVERSE&lt;/code&gt; flag was used, the command will search for the position of the last occurrence of the specified substring. If the substring is not found, a position of -1 is returned.</source>
          <target state="translated">제공된 문자열에서 지정된 부분 문자열이있는 위치를 반환합니다. 경우 &lt;code&gt;REVERSE&lt;/code&gt; 플래그가 사용 된 명령은 지정된 부분 캐릭터 라인이 마지막에 출현하는 위치를 검색합니다. 부분 문자열이 없으면 -1의 위치가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="42fed37aac8f493c1c82130f2da2ab00aad2cb9f" translate="yes" xml:space="preserve">
          <source>Return the type of &amp;lt;file&amp;gt; with respect to &amp;lt;original_file&amp;gt;. String describing type of prerequisite is returned in variable named &amp;lt;type_var&amp;gt;.</source>
          <target state="translated">&amp;lt;original_file&amp;gt;과 관련하여 &amp;lt;file&amp;gt;의 유형을 리턴하십시오. 전제 조건 유형을 설명하는 문자열이 &amp;lt;type_var&amp;gt; 변수에 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="b6573c9b0305aec967cdb3a7dae9a4c27a1769fc" translate="yes" xml:space="preserve">
          <source>Return type deduction on normal functions, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3386.html&quot;&gt;N3386&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2012/n3386.html&quot;&gt;N3386에&lt;/a&gt; 정의 된대로 일반 함수에서 리턴 유형 공제 .</target>
        </trans-unit>
        <trans-unit id="3cbf252d79dab73012edb823509f0e6ec94c397b" translate="yes" xml:space="preserve">
          <source>Returns a string joining all list&amp;rsquo;s elements using the glue string. To join multiple strings, which are not part of a list, use &lt;code&gt;JOIN&lt;/code&gt; operator from &lt;a href=&quot;string#command:string&quot; id=&quot;index-0-command:string&quot;&gt;&lt;code&gt;string()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">글루 문자열을 사용하여 모든 목록 요소를 연결하는 문자열을 반환합니다. 목록의 일부가 아닌 여러 문자열을 결합하려면 &lt;a href=&quot;string#command:string&quot; id=&quot;index-0-command:string&quot;&gt; &lt;code&gt;string()&lt;/code&gt; &lt;/a&gt; 명령 에서 &lt;code&gt;JOIN&lt;/code&gt; 연산자를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5eb6dbba6b968692d6cca9e220953ee74503ef4c" translate="yes" xml:space="preserve">
          <source>Returns a sublist of the given list. If &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; is 0, an empty list will be returned. If &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; is -1 or the list is smaller than &lt;code&gt;&amp;lt;begin&amp;gt;+&amp;lt;length&amp;gt;&lt;/code&gt; then the remaining elements of the list starting at &lt;code&gt;&amp;lt;begin&amp;gt;&lt;/code&gt; will be returned.</source>
          <target state="translated">주어진 목록의 하위 목록을 반환합니다. 경우 &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; 0 인 빈 목록이 반환됩니다. 경우 &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; -1 또는 목록보다도 작은 &lt;code&gt;&amp;lt;begin&amp;gt;+&amp;lt;length&amp;gt;&lt;/code&gt; 다음부터리스트의 나머지 요소는 &lt;code&gt;&amp;lt;begin&amp;gt;&lt;/code&gt; 반환된다.</target>
        </trans-unit>
        <trans-unit id="d086e5f1c96dd3bffa0e426e1aa2e728d2bc0ab2" translate="yes" xml:space="preserve">
          <source>Returns from a file, directory or function. When this command is encountered in an included file (via &lt;a href=&quot;include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;), it causes processing of the current file to stop and control is returned to the including file. If it is encountered in a file which is not included by another file, e.g. a &lt;code&gt;CMakeLists.txt&lt;/code&gt;, control is returned to the parent directory if there is one. If return is called in a function, control is returned to the caller of the function.</source>
          <target state="translated">파일, 디렉토리 또는 함수에서 반환합니다. &lt;a href=&quot;include#command:include&quot; id=&quot;index-0-command:include&quot;&gt; &lt;code&gt;include()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt; &lt;code&gt;find_package()&lt;/code&gt; &lt;/a&gt; 를 통해 포함 된 파일에서이 명령이 발생 하면 현재 파일 처리가 중지되고 제어는 포함 파일로 리턴됩니다. &lt;code&gt;CMakeLists.txt&lt;/code&gt; 와 같은 다른 파일에 포함되지 않은 파일에서 발견 되면 상위 디렉토리 (있는 경우)로 제어가 리턴됩니다. 함수에서 return이 호출되면 함수 호출자에게 제어가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="97c623ec07f1a481a08b672cd4967a616010de52" translate="yes" xml:space="preserve">
          <source>Returns the extension of the mex files (the suffixes). This function should not be called before the appropriate Matlab root has been found.</source>
          <target state="translated">mex 파일의 확장자 (접미사)를 리턴합니다. 적절한 Matlab 루트를 찾기 전에이 함수를 호출하면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="8f05d83077b9e55b2d65efdefe0eeb82b250b060" translate="yes" xml:space="preserve">
          <source>Returns the full filepath and name &lt;strong&gt;without&lt;/strong&gt; extension of a key. KEY is expected to be a key from csharp_get_filename_keys. In BASE the value of KEY without the file extension is returned:</source>
          <target state="translated">키 확장자 &lt;strong&gt;없이&lt;/strong&gt; 전체 파일 경로와 이름 &lt;strong&gt;을&lt;/strong&gt; 반환합니다 . KEY는 csharp_get_filename_keys의 키일 것으로 예상됩니다. BASE에서 파일 확장자가없는 KEY 값이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="c98cbf98f44142e0df2e0518f95a9e0ef642edfc" translate="yes" xml:space="preserve">
          <source>Returns the index of the element specified in the list or -1 if it wasn&amp;rsquo;t found.</source>
          <target state="translated">리스트에 지정된 요소의 인덱스를 반환하거나 찾지 못한 경우 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cc1e0e3497a20cc59703f13d53560dbf2fb45be1" translate="yes" xml:space="preserve">
          <source>Returns the list of elements specified by indices from the list.</source>
          <target state="translated">목록에서 색인으로 지정된 요소 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="db48b1193fb657bbc6f34d2b0b9f6145d01f049b" translate="yes" xml:space="preserve">
          <source>Returns the list&amp;rsquo;s length.</source>
          <target state="translated">리스트의 길이를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="de872a62e73f96f44a51513eef1a636c43d09920" translate="yes" xml:space="preserve">
          <source>Returns the nearest parent dir whose name ends with &lt;code&gt;.app&lt;/code&gt; given the full path to an executable. If there is no such parent dir, then simply return the dir containing the executable.</source>
          <target state="translated">실행 파일의 전체 경로가 지정된 이름이 &lt;code&gt;.app&lt;/code&gt; 로 끝나는 가장 가까운 상위 디렉토리를 리턴합니다 . 그러한 상위 디렉토리가 없으면 실행 파일이 포함 된 디렉토리를 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="74a6441d7ddfa44f458d716adae38a0406ab872a" translate="yes" xml:space="preserve">
          <source>Returns the release name (R2017k) from the version of Matlab (17.58)</source>
          <target state="translated">Matlab 버전 (17.58)에서 릴리스 이름 (R2017k)을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8d17b16637d5f89b2b5fb9cc2b1bdddd3ebc3385" translate="yes" xml:space="preserve">
          <source>Returns the version of Matlab (17.58) from a release name (R2017k)</source>
          <target state="translated">릴리스 이름 (R2017k)에서 Matlab (17.58) 버전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="36ab5418e6a56c97db6e5d0900fda492771cb9dd" translate="yes" xml:space="preserve">
          <source>Reverses the contents of the list in-place.</source>
          <target state="translated">목록의 내용을 원래 위치로 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="bab4665addfe10c6fd7931a32375047feafbc2f9" translate="yes" xml:space="preserve">
          <source>Revision to checkout from the Subversion repository.</source>
          <target state="translated">Subversion 저장소에서 체크 아웃하도록 개정.</target>
        </trans-unit>
        <trans-unit id="958c4b08b5c7f86384a7968d13e68dfe65e690be" translate="yes" xml:space="preserve">
          <source>Right angle bracket parsing, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1757.html&quot;&gt;N1757&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2005/n1757.html&quot;&gt;N1757에&lt;/a&gt; 정의 된 직각 브래킷 구문 분석 .</target>
        </trans-unit>
        <trans-unit id="b6a1f1819376914af74524129faf5cd9d18b609a" translate="yes" xml:space="preserve">
          <source>Root directory for the external project. Unless otherwise noted below, all other directories associated with the external project will be created under here.</source>
          <target state="translated">외부 프로젝트의 루트 디렉토리 아래에 달리 명시되지 않는 한 외부 프로젝트와 관련된 다른 모든 디렉토리가 여기에 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="b5a363db70d59b1ea2f2d323aaf7fe41b29fe0f9" translate="yes" xml:space="preserve">
          <source>Rule variable to append to a static archive.</source>
          <target state="translated">정적 아카이브에 추가 할 규칙 변수.</target>
        </trans-unit>
        <trans-unit id="b099e4fddc6829c1407378b3a9466b56e3e306ac" translate="yes" xml:space="preserve">
          <source>Rule variable to compile a single object file.</source>
          <target state="translated">단일 오브젝트 파일을 컴파일하기위한 규칙 변수.</target>
        </trans-unit>
        <trans-unit id="949a0f60812bc25ea8a34d1ed655720bf41695be" translate="yes" xml:space="preserve">
          <source>Rule variable to create a new static archive.</source>
          <target state="translated">새 정적 아카이브를 작성하기위한 규칙 변수.</target>
        </trans-unit>
        <trans-unit id="d61815064f66f6b64e9594f42b6764ae1ea89644" translate="yes" xml:space="preserve">
          <source>Rule variable to create a shared library.</source>
          <target state="translated">공유 라이브러리를 작성하기위한 규칙 변수.</target>
        </trans-unit>
        <trans-unit id="ea39d4c1918ba01d6db5e03d7543a27189c89efe" translate="yes" xml:space="preserve">
          <source>Rule variable to create a shared module.</source>
          <target state="translated">공유 모듈을 작성하기위한 규칙 변수.</target>
        </trans-unit>
        <trans-unit id="e1678ab6e8a3b120eef365c2b25770f81e90ed25" translate="yes" xml:space="preserve">
          <source>Rule variable to create a static library.</source>
          <target state="translated">정적 라이브러리를 작성하기위한 규칙 변수.</target>
        </trans-unit>
        <trans-unit id="e7de8478294e14ad99fafa6162c6af9d4186dd90" translate="yes" xml:space="preserve">
          <source>Rule variable to finish an existing static archive.</source>
          <target state="translated">기존 정적 아카이브를 완료하기위한 규칙 변수.</target>
        </trans-unit>
        <trans-unit id="2b260abd49eb7ddf8b1ea1cdbf03d8fa1f334d90" translate="yes" xml:space="preserve">
          <source>Rule variable to link an executable for the given language.</source>
          <target state="translated">주어진 언어에 대한 실행 파일을 연결하기위한 규칙 변수.</target>
        </trans-unit>
        <trans-unit id="591cec87667492a46834fde921b8c761cc5b8281" translate="yes" xml:space="preserve">
          <source>Rule variable to link an executable.</source>
          <target state="translated">실행 파일을 연결하는 규칙 변수</target>
        </trans-unit>
        <trans-unit id="69f6001ee2d2885feb2a07c4e0a0a54a12855578" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;cmake --build&lt;/code&gt; with no options for quick help.</source>
          <target state="translated">빠른 도움말을위한 옵션없이 &lt;code&gt;cmake --build&lt;/code&gt; 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="12c949b50a0c0d3c96efc0631fa3ad249cd143cf" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;cmake --install&lt;/code&gt; with no options for quick help.</source>
          <target state="translated">빠른 도움말을위한 옵션없이 &lt;code&gt;cmake --install&lt;/code&gt; 을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="21f45ad7c21fc1c6583522de0d60920943e6c709" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;cmake -E&lt;/code&gt; or &lt;code&gt;cmake -E help&lt;/code&gt; for a summary of commands. Available commands are:</source>
          <target state="translated">명령 요약을 보려면 &lt;code&gt;cmake -E&lt;/code&gt; 또는 &lt;code&gt;cmake -E help&lt;/code&gt; 를 실행하십시오 . 사용 가능한 명령은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="853622ed3e05ad6106c8b264b527120d35581d04" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;cpack&lt;/code&gt; with debug output. This option is intended mainly for the developers of &lt;code&gt;cpack&lt;/code&gt; itself and is not normally needed by project developers.</source>
          <target state="translated">디버그 출력으로 &lt;code&gt;cpack&lt;/code&gt; 을 실행하십시오 . 이 옵션은 주로 &lt;code&gt;cpack&lt;/code&gt; 자체 의 개발자를위한 것이며 일반적으로 프로젝트 개발자에게는 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="233f8305d6cd15cad9675d969b486e30ffd214a2" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;cpack&lt;/code&gt; with verbose output. This can be used to show more details from the package generation tools and is suitable for project developers.</source>
          <target state="translated">자세한 출력으로 &lt;code&gt;cpack&lt;/code&gt; 을 실행하십시오 . 패키지 생성 도구의 세부 정보를 표시하는 데 사용할 수 있으며 프로젝트 개발자에게 적합합니다.</target>
        </trans-unit>
        <trans-unit id="bd47cea34b35767924c3439d13518ef5ec3b593a" translate="yes" xml:space="preserve">
          <source>Run CMake twice.</source>
          <target state="translated">CMake를 두 번 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="17f0a3ea81191bfdaa8b388053868c2972ccb483" translate="yes" xml:space="preserve">
          <source>Run CMake with one of the following command signatures to specify the source and build trees and generate a buildsystem:</source>
          <target state="translated">다음 명령 서명 중 하나로 CMake를 실행하여 소스 및 빌드 트리를 지정하고 빌드 시스템을 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="ddf799faee741a636d12f7f8573e8dcd83e43acf" translate="yes" xml:space="preserve">
          <source>Run a Command-Line Tool</source>
          <target state="translated">명령 줄 도구 실행</target>
        </trans-unit>
        <trans-unit id="7ba973e8f78517e9fcd95aa84bd71e4e6fb24dd8" translate="yes" xml:space="preserve">
          <source>Run a Script</source>
          <target state="translated">스크립트 실행</target>
        </trans-unit>
        <trans-unit id="a99579fb06ecacb84caf30f74443c2904e3c3055" translate="yes" xml:space="preserve">
          <source>Run a specific number of tests by number.</source>
          <target state="translated">숫자로 특정 수의 테스트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="cebd6182f9227df24ad40a994e58735397f1d2fd" translate="yes" xml:space="preserve">
          <source>Run after all other rules within the target have been executed.</source>
          <target state="translated">대상 내의 다른 모든 규칙이 실행 된 후 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="fc84dd3f3cbcc015989ef2374f99cd03f43aba5e" translate="yes" xml:space="preserve">
          <source>Run after sources have been compiled but before linking the binary or running the librarian or archiver tool of a static library. This is not defined for targets created by the &lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-2-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">소스를 컴파일 한 후 바이너리를 링크하거나 정적 라이브러리의 라이브러리 나 아카이버 도구를 실행하기 전에 실행하십시오. &lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-2-command:add_custom_target&quot;&gt; &lt;code&gt;add_custom_target()&lt;/code&gt; &lt;/a&gt; 명령으로 작성된 대상에 대해서는 정의되지 않았습니다 .</target>
        </trans-unit>
        <trans-unit id="c7b352347280762946d696e9279f81b411437872" translate="yes" xml:space="preserve">
          <source>Run an executable program during the processing of the CMakeList.txt file.</source>
          <target state="translated">CMakeList.txt 파일을 처리하는 동안 실행 프로그램을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="8ede629c59a7173ae59a75c857eb0f467daeec77" translate="yes" xml:space="preserve">
          <source>Run child CTest instances as new processes.</source>
          <target state="translated">자식 CTest 인스턴스를 새 프로세스로 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="ef734cd61567af63585ef02c3a397be0044868a4" translate="yes" xml:space="preserve">
          <source>Run command and display elapsed time.</source>
          <target state="translated">명령을 실행하고 경과 시간을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="c5503626e8a6669915ddef89ec4b5dcbd9cdbd55" translate="yes" xml:space="preserve">
          <source>Run command in a modified environment.</source>
          <target state="translated">수정 된 환경에서 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="cd54289c6322cdb65041c69c16c6cf1462ffc92a" translate="yes" xml:space="preserve">
          <source>Run gcov and package a tar file for CDash. The options are:</source>
          <target state="translated">gcov를 실행하고 CDash 용 tar 파일을 패키지하십시오. 옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e826610d9e1cdad6fada44f6af6d57630ab0cadf" translate="yes" xml:space="preserve">
          <source>Run only the tests that failed previously.</source>
          <target state="translated">이전에 실패한 테스트 만 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="9188d5e69bd03259c3092cc170e1908f12c44fdd" translate="yes" xml:space="preserve">
          <source>Run tests in the project build tree and store results in &lt;code&gt;Test.xml&lt;/code&gt; for submission with the &lt;a href=&quot;ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt;&lt;code&gt;ctest_submit()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">프로젝트 빌드 트리에서 테스트를 실행 하고 &lt;a href=&quot;ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt; &lt;code&gt;ctest_submit()&lt;/code&gt; &lt;/a&gt; 명령으로 제출할 수 있도록 &lt;code&gt;Test.xml&lt;/code&gt; 에 결과를 저장 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d2b28cb3b57a74d93923e29a401643a0090f0d9a" translate="yes" xml:space="preserve">
          <source>Run tests matching regular expression.</source>
          <target state="translated">정규식과 일치하는 테스트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="610f5ecd4e79e512d371bead0b39d1b3bd8cc1f2" translate="yes" xml:space="preserve">
          <source>Run tests with a dynamic analysis tool and store results in &lt;code&gt;MemCheck.xml&lt;/code&gt; for submission with the &lt;a href=&quot;ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt;&lt;code&gt;ctest_submit()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="translated">동적 분석 도구로 테스트를 실행 하고 &lt;a href=&quot;ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt; &lt;code&gt;ctest_submit()&lt;/code&gt; &lt;/a&gt; 명령으로 제출할 수 &lt;code&gt;MemCheck.xml&lt;/code&gt; 에 결과를 저장 하십시오 .</target>
        </trans-unit>
        <trans-unit id="244d66d0c667841450a569b1867876a6d397001d" translate="yes" xml:space="preserve">
          <source>Run tests with labels matching regular expression.</source>
          <target state="translated">정규식과 일치하는 레이블로 테스트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="1a7b273900439b77fc15726b83b59c0f813a4d62" translate="yes" xml:space="preserve">
          <source>Run the Find-Package Tool</source>
          <target state="translated">찾기 패키지 도구 실행</target>
        </trans-unit>
        <trans-unit id="34af2c56e6d389979a1d5259aa5689c11373dfc8" translate="yes" xml:space="preserve">
          <source>Run the build without running cmake first.</source>
          <target state="translated">cmake를 먼저 실행하지 않고 빌드를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="33bab5b581d77ed2472b9d1803b6b2cf69a777dc" translate="yes" xml:space="preserve">
          <source>Run the software test suite through a memory check tool. Record the test output, results, and issues reported by the tool. See the &lt;a href=&quot;#ctest-memcheck-step&quot;&gt;CTest MemCheck Step&lt;/a&gt; section below.</source>
          <target state="translated">메모리 검사 도구를 통해 소프트웨어 테스트 스위트를 실행하십시오. 도구에서보고 한 테스트 결과, 결과 및 문제를 기록하십시오. 아래의 &lt;a href=&quot;#ctest-memcheck-step&quot;&gt;CTest MemCheck 단계&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="da665f91a23a3da85cce1e4a6208050eb5dce998" translate="yes" xml:space="preserve">
          <source>Run the tests in parallel using the given number of jobs.</source>
          <target state="translated">주어진 작업 수를 사용하여 테스트를 병렬로 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="30d53296e6e753dedd8d860a7bcbcd93492d9241" translate="yes" xml:space="preserve">
          <source>Running CMake without specifying &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; will run the configure step in host mode assuming a standard Linux environment. If not overridden, the &lt;code&gt;PrgEnv-*&lt;/code&gt; compiler wrappers will end up getting used, which if targeting the either the login node or compute node, is likely not the desired behavior. The exception to this would be if you are building directly on a NID instead of cross-compiling from a login node. If trying to build software for a login node, you will need to either first unload the currently loaded &lt;code&gt;PrgEnv-*&lt;/code&gt; module or explicitly tell CMake to use the system compilers in &lt;code&gt;/usr/bin&lt;/code&gt; instead of the Cray wrappers. If instead targeting a compute node is desired, just specify the &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; as mentioned above.</source>
          <target state="translated">&lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; &lt;/a&gt; 을 지정하지 않고 CMake를 실행하면 표준 Linux 환경을 가정하여 호스트 모드에서 구성 단계가 실행됩니다. 재정의되지 않으면 &lt;code&gt;PrgEnv-*&lt;/code&gt; 컴파일러 래퍼가 결국 사용됩니다. 로그인 노드 또는 계산 노드를 대상으로하는 경우 원하는 동작이 아닐 수 있습니다. 로그인 노드에서 크로스 컴파일하는 대신 NID를 직접 구축하는 경우는 예외입니다. 로그인 노드 용 소프트웨어를 구축하려는 경우 먼저 현재로드 된 &lt;code&gt;PrgEnv-*&lt;/code&gt; 모듈을 언로드 하거나 CMake에게 Cray 래퍼 대신 &lt;code&gt;/usr/bin&lt;/code&gt; 의 시스템 컴파일러를 사용하도록 명시 적으로 지정해야합니다 . 대신 컴퓨팅 노드를 타겟팅하려면 &lt;a href=&quot;../variable/cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_NAME&quot;&gt; &lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt; 을&lt;/a&gt; 지정하십시오 . 상술 한 바와 같이.</target>
        </trans-unit>
        <trans-unit id="b10e85ac787b97ef6646972a590d1a2034ddb11f" translate="yes" xml:space="preserve">
          <source>Running in &lt;code&gt;--find-package&lt;/code&gt; mode.</source>
          <target state="translated">&lt;code&gt;--find-package&lt;/code&gt; 모드 에서 실행 중 입니다.</target>
        </trans-unit>
        <trans-unit id="86fc31e25cff8a1ca69a3f0cdad8c2172b6dd896" translate="yes" xml:space="preserve">
          <source>Running in &lt;code&gt;-P&lt;/code&gt; script mode.</source>
          <target state="translated">&lt;code&gt;-P&lt;/code&gt; 스크립트 모드 에서 실행 중 입니다.</target>
        </trans-unit>
        <trans-unit id="2e0c9fb03ae840882603db599eb93a32ed82f66d" translate="yes" xml:space="preserve">
          <source>Running in CPack.</source>
          <target state="translated">CPack에서 실행 중입니다.</target>
        </trans-unit>
        <trans-unit id="2da8b6959cdf17c07ef95d90db4ac2a58fefbaa9" translate="yes" xml:space="preserve">
          <source>Running in CTest script mode.</source>
          <target state="translated">CTest 스크립트 모드에서 실행</target>
        </trans-unit>
        <trans-unit id="aebd750bb432d3b69ef9e7bc3e7e82ed84c3c35f" translate="yes" xml:space="preserve">
          <source>Running in project mode (processing a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file).</source>
          <target state="translated">프로젝트 모드에서 실행 ( &lt;code&gt;CMakeLists.txt&lt;/code&gt; 파일 처리 ).</target>
        </trans-unit>
        <trans-unit id="81053aad1a88bd03545cfbaa7c0bc25575716f88" translate="yes" xml:space="preserve">
          <source>Runs a script or scripts much like if it was run from ctest -S. If no argument is provided then the current script is run using the current settings of the variables. If &lt;code&gt;NEW_PROCESS&lt;/code&gt; is specified then each script will be run in a separate process.If &lt;code&gt;RETURN_VALUE&lt;/code&gt; is specified the return value of the last script run will be put into &lt;code&gt;var&lt;/code&gt;.</source>
          <target state="translated">ctest -S에서 실행 된 것과 매우 유사한 스크립트를 실행합니다. 인수가 제공되지 않으면 변수의 현재 설정을 사용하여 현재 스크립트가 실행됩니다. 경우 &lt;code&gt;NEW_PROCESS&lt;/code&gt; 는 각 스크립트가 별도의 process.If에서 실행됩니다 지정 &lt;code&gt;RETURN_VALUE&lt;/code&gt; 마지막 스크립트 실행의 반환 값을 지정에 투입됩니다 &lt;code&gt;var&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c839f6e9c4252495d9a075919bca07bc3ae7387c" translate="yes" xml:space="preserve">
          <source>Runs the given sequence of one or more commands.</source>
          <target state="translated">주어진 하나 이상의 명령 시퀀스를 실행합니다.</target>
        </trans-unit>
        <trans-unit id="6e53425bf54ceac88cace93b551e87809a57a288" translate="yes" xml:space="preserve">
          <source>Runtime Output Artifacts</source>
          <target state="translated">런타임 출력 아티팩트</target>
        </trans-unit>
        <trans-unit id="50e6b5821850f09f94806beac076055689ab90cc" translate="yes" xml:space="preserve">
          <source>Runtime paths will also be embedded in binaries using this target and can be controlled by the &lt;a href=&quot;install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt;&lt;code&gt;INSTALL_RPATH&lt;/code&gt;&lt;/a&gt; target property on the target linking to this target.</source>
          <target state="translated">런타임 경로는이 대상을 사용하여 바이너리에 임베드 &lt;a href=&quot;install_rpath#prop_tgt:INSTALL_RPATH&quot; id=&quot;index-0-prop_tgt:INSTALL_RPATH&quot;&gt; &lt;code&gt;INSTALL_RPATH&lt;/code&gt; &lt;/a&gt; 대상에 링크되는 대상 의 INSTALL_RPATH 대상 특성으로 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4050482efdf37ebb087bf60e8a0858effa1fd9fa" translate="yes" xml:space="preserve">
          <source>SCSL</source>
          <target state="translated">SCSL</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
