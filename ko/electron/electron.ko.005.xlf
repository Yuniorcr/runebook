<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="electron">
    <body>
      <group id="electron">
        <trans-unit id="aab3f4b6a862893ca2745b7d3f5a93b3d8a71a95" translate="yes" xml:space="preserve">
          <source>Rebranding with Downloaded Binaries</source>
          <target state="translated">다운로드 한 바이너리로 브랜드 변경</target>
        </trans-unit>
        <trans-unit id="2da859183da0a2a5939d0521e5e572cd185b5873" translate="yes" xml:space="preserve">
          <source>Recent Documents</source>
          <target state="translated">최근 문서</target>
        </trans-unit>
        <trans-unit id="1bdfd2d5cf2aa4d3a6455330d3725dbf63c620b2" translate="yes" xml:space="preserve">
          <source>Recent Documents (Windows &amp;amp; macOS)</source>
          <target state="translated">최근 문서 (Windows 및 macOS)</target>
        </trans-unit>
        <trans-unit id="d17d14d3136aefc8aebae7b8a5de5b80991199a4" translate="yes" xml:space="preserve">
          <source>Recording begins immediately locally and asynchronously on child processes as soon as they receive the EnableRecording request. The &lt;code&gt;callback&lt;/code&gt; will be called once all child processes have acknowledged the &lt;code&gt;startRecording&lt;/code&gt; request.</source>
          <target state="translated">EnableRecording 요청을 수신하는 즉시 하위 프로세스에서 즉시 로컬 및 비동기 적으로 레코딩이 시작됩니다. 모든 자식 프로세스가 &lt;code&gt;startRecording&lt;/code&gt; 요청 을 승인하면 &lt;code&gt;callback&lt;/code&gt; 이 호출 됩니다 .</target>
        </trans-unit>
        <trans-unit id="c158695a64adb40952c1cf9fde78b62bd6147f42" translate="yes" xml:space="preserve">
          <source>Rectangle</source>
          <target state="translated">Rectangle</target>
        </trans-unit>
        <trans-unit id="3c809bf54e005cede67a090955c8df54827d8ad3" translate="yes" xml:space="preserve">
          <source>Rectangle Object</source>
          <target state="translated">사각형 객체</target>
        </trans-unit>
        <trans-unit id="9df9d8580463745d00107d2f335e0f77d0b500ba" translate="yes" xml:space="preserve">
          <source>Redux DevTools Extension</source>
          <target state="translated">Redux DevTools 확장</target>
        </trans-unit>
        <trans-unit id="d4c0f5f893f53d13f88f5a14fe122120153a0a1f" translate="yes" xml:space="preserve">
          <source>Regenerate Ninja files against both targets</source>
          <target state="translated">두 대상 모두에 대해 닌자 파일 재생성</target>
        </trans-unit>
        <trans-unit id="246d882dc22f0917cd24e816ad33e8843cdebf88" translate="yes" xml:space="preserve">
          <source>Register a custom protocol and intercept existing protocol requests.</source>
          <target state="translated">사용자 정의 프로토콜을 등록하고 기존 프로토콜 요청을 인터셉트하십시오.</target>
        </trans-unit>
        <trans-unit id="90173092fa06923b7e54a90be85f3d4d938a4498" translate="yes" xml:space="preserve">
          <source>Registering a scheme as standard will allow access to files through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/LocalFileSystem&quot;&gt;FileSystem API&lt;/a&gt;. Otherwise the renderer will throw a security error for the scheme.</source>
          <target state="translated">체계를 표준으로 등록하면 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/LocalFileSystem&quot;&gt;FileSystem API를&lt;/a&gt; 통해 파일에 액세스 할 수 있습니다 . 그렇지 않으면 렌더러가 구성표에 대한 보안 오류를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="4525fa5debb6dff048dfe1b8e39b408ab2399711" translate="yes" xml:space="preserve">
          <source>Registering a scheme as standard, will allow relative and absolute resources to be resolved correctly when served. Otherwise the scheme will behave like the &lt;code&gt;file&lt;/code&gt; protocol, but without the ability to resolve relative URLs.</source>
          <target state="translated">체계를 표준으로 등록하면 상대 자원과 절대 자원을 올바르게 처리 할 수 ​​있습니다. 그렇지 않으면 구성표가 &lt;code&gt;file&lt;/code&gt; 프로토콜 처럼 작동 하지만 상대 URL을 확인할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="cafee7f453b666aa166ff252bd07ebc3c1d9142a" translate="yes" xml:space="preserve">
          <source>Registers a global shortcut of &lt;code&gt;accelerator&lt;/code&gt;. The &lt;code&gt;callback&lt;/code&gt; is called when the registered shortcut is pressed by the user.</source>
          <target state="translated">&lt;code&gt;accelerator&lt;/code&gt; 의 글로벌 바로 가기를 등록합니다 . &lt;code&gt;callback&lt;/code&gt; 등록 된 바로 가기는 사용자가 눌렀을 때 호출된다.</target>
        </trans-unit>
        <trans-unit id="a35599ae3c1755bbcef65e880f3546f5e5d86fcc" translate="yes" xml:space="preserve">
          <source>Registers a protocol of &lt;code&gt;scheme&lt;/code&gt; that will send a &lt;code&gt;Buffer&lt;/code&gt; as a response.</source>
          <target state="translated">&lt;code&gt;Buffer&lt;/code&gt; 를 응답으로 보낼 &lt;code&gt;scheme&lt;/code&gt; 프로토콜을 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="b288e3fb7d42671251526b050f731a8f0c9c6a13" translate="yes" xml:space="preserve">
          <source>Registers a protocol of &lt;code&gt;scheme&lt;/code&gt; that will send a &lt;code&gt;Readable&lt;/code&gt; as a response.</source>
          <target state="translated">&lt;code&gt;Readable&lt;/code&gt; 을 응답으로 보낼 &lt;code&gt;scheme&lt;/code&gt; 프로토콜을 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="3c3dab7b85103c70db0f95e63d334445c3c51855" translate="yes" xml:space="preserve">
          <source>Registers a protocol of &lt;code&gt;scheme&lt;/code&gt; that will send a &lt;code&gt;String&lt;/code&gt; as a response.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 을 응답으로 보낼 &lt;code&gt;scheme&lt;/code&gt; 프로토콜을 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="308a2acf3826b12a083ff61c836d58b7eb854331" translate="yes" xml:space="preserve">
          <source>Registers a protocol of &lt;code&gt;scheme&lt;/code&gt; that will send an HTTP request as a response.</source>
          <target state="translated">HTTP 요청을 응답으로 보낼 &lt;code&gt;scheme&lt;/code&gt; 프로토콜을 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="6355438297d8703ea8f592dc38637a7dd141cec0" translate="yes" xml:space="preserve">
          <source>Registers a protocol of &lt;code&gt;scheme&lt;/code&gt; that will send the file as a response. The &lt;code&gt;handler&lt;/code&gt; will be called with &lt;code&gt;handler(request, callback)&lt;/code&gt; when a &lt;code&gt;request&lt;/code&gt; is going to be created with &lt;code&gt;scheme&lt;/code&gt;. &lt;code&gt;completion&lt;/code&gt; will be called with &lt;code&gt;completion(null)&lt;/code&gt; when &lt;code&gt;scheme&lt;/code&gt; is successfully registered or &lt;code&gt;completion(error)&lt;/code&gt; when failed.</source>
          <target state="translated">파일을 응답으로 보낼 &lt;code&gt;scheme&lt;/code&gt; 프로토콜을 등록합니다 . &lt;code&gt;handler&lt;/code&gt; 호출 될 &lt;code&gt;handler(request, callback)&lt;/code&gt; &lt;code&gt;request&lt;/code&gt; 으로 생성 될 것입니다 &lt;code&gt;scheme&lt;/code&gt; . &lt;code&gt;completion&lt;/code&gt; 호출됩니다 &lt;code&gt;completion(null)&lt;/code&gt; 할 때 &lt;code&gt;scheme&lt;/code&gt; 성공적으로 등록 또는 &lt;code&gt;completion(error)&lt;/code&gt; 실패했을 경우.</target>
        </trans-unit>
        <trans-unit id="245eef811656a2431714b5c8a83758043ea844f9" translate="yes" xml:space="preserve">
          <source>Registers the &lt;code&gt;scheme&lt;/code&gt; as secure scheme.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; 를 보안 체계 로 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="c8567951f0a78751010faa2e1c53e8e20b45ba53" translate="yes" xml:space="preserve">
          <source>Registers the &lt;code&gt;scheme&lt;/code&gt; as secure, bypasses content security policy for resources, allows registering ServiceWorker and supports fetch API.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; 를 보안으로 등록하고 자원에 대한 컨텐츠 보안 정책을 무시하고 ServiceWorker 등록을 허용하며 페치 API를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a9a970d09a7698ae83de0c77a559ae54c267f02d" translate="yes" xml:space="preserve">
          <source>Relaunches the app when current instance exits.</source>
          <target state="translated">현재 인스턴스가 종료되면 앱을 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="aeaba4caa011cac6918a532f6e79aa1451f13e40" translate="yes" xml:space="preserve">
          <source>Release branches &lt;em&gt;do&lt;/em&gt; contain the correct version in their &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">릴리스 브랜치 에는 &lt;code&gt;package.json&lt;/code&gt; 올바른 버전 &lt;em&gt;이&lt;/em&gt; 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7adb40de6d0a75368db3171d6e1d4da989627141" translate="yes" xml:space="preserve">
          <source>Release branches are never merged back to master</source>
          <target state="translated">릴리스 브랜치는 마스터로 다시 병합되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8fa41d59c259d95cfaded10953d5a2f8e0b38bb4" translate="yes" xml:space="preserve">
          <source>Releases</source>
          <target state="translated">Releases</target>
        </trans-unit>
        <trans-unit id="7b6964d2a2f294ee834684480cd8729910bcdbbf" translate="yes" xml:space="preserve">
          <source>Releases all locks that were created by &lt;code&gt;makeSingleInstance&lt;/code&gt;. This will allow multiple instances of the application to once again run side by side.</source>
          <target state="translated">&lt;code&gt;makeSingleInstance&lt;/code&gt; 로 작성된 모든 잠금을 해제합니다 . 이를 통해 응용 프로그램의 여러 인스턴스가 다시 나란히 실행될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f6926d22af1651f2c470a1e97bcdb97dbc4eb46" translate="yes" xml:space="preserve">
          <source>Releasing</source>
          <target state="translated">Releasing</target>
        </trans-unit>
        <trans-unit id="b9567504c6ca6e0ebad216a90992e16a171ff874" translate="yes" xml:space="preserve">
          <source>Relevant code files can be found in &lt;code&gt;./atom/&lt;/code&gt; as well as in Brightray, found in &lt;code&gt;./brightray/browser&lt;/code&gt; and &lt;code&gt;./brightray/common&lt;/code&gt;.</source>
          <target state="translated">관련 코드 파일에서 찾을 수 있습니다 &lt;code&gt;./atom/&lt;/code&gt; 에서 발견뿐만 아니라 Brightray에 &lt;code&gt;./brightray/browser&lt;/code&gt; 및 &lt;code&gt;./brightray/common&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9d3ddae8636b737ee61aa96f8490996404a3c508" translate="yes" xml:space="preserve">
          <source>Reloads current page and ignores cache.</source>
          <target state="translated">현재 페이지를 다시로드하고 캐시를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="9b5e97fa935b39b76d274e23182c55b10026b74d" translate="yes" xml:space="preserve">
          <source>Reloads the current web page.</source>
          <target state="translated">현재 웹 페이지를 다시로드합니다.</target>
        </trans-unit>
        <trans-unit id="65896c279cd48fcae8bff5d6a9dbed1ca9695342" translate="yes" xml:space="preserve">
          <source>Reloads the guest page and ignores cache.</source>
          <target state="translated">게스트 페이지를 다시로드하고 캐시를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="db33b1cd6dfaa5a8b5ac5e8eeb147b5acec9d0e8" translate="yes" xml:space="preserve">
          <source>Reloads the guest page.</source>
          <target state="translated">게스트 페이지를 다시로드합니다.</target>
        </trans-unit>
        <trans-unit id="9a539893b246a62b1bc68e790cfd1554742fe28b" translate="yes" xml:space="preserve">
          <source>Remember the port number &lt;code&gt;9515&lt;/code&gt;, which will be used later</source>
          <target state="translated">나중에 사용될 포트 번호 &lt;code&gt;9515&lt;/code&gt; 를 기억하십시오</target>
        </trans-unit>
        <trans-unit id="38523766ee19faa3152202ffc2b9f309e577a96d" translate="yes" xml:space="preserve">
          <source>Remote Objects</source>
          <target state="translated">원격 객체</target>
        </trans-unit>
        <trans-unit id="b32f56488400a1032562ddf55e0d553c7015b5f2" translate="yes" xml:space="preserve">
          <source>Remove a Chrome extension by name.</source>
          <target state="translated">이름으로 Chrome 확장 프로그램을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="12a87d75d1f62e12e4c47fb5d898025e1fee4df9" translate="yes" xml:space="preserve">
          <source>Remove a DevTools extension by name.</source>
          <target state="translated">이름으로 DevTools 확장자를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="26c05d9b4960573d5f72bf063e932326a18854e6" translate="yes" xml:space="preserve">
          <source>Remove a extra parameter from the current set of parameters so that it will not be sent with the crash report.</source>
          <target state="translated">충돌 보고서와 함께 전송되지 않도록 현재 매개 변수 세트에서 추가 매개 변수를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="a4ff11c263dcde3c088e538863871d851b9167ac" translate="yes" xml:space="preserve">
          <source>Remove our copies of the old Node v8 patches</source>
          <target state="translated">이전 Node v8 패치 사본을 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="ef7ade55814007a315723d2f3df33db3cb8f1563" translate="yes" xml:space="preserve">
          <source>Remove progress bar when progress &amp;lt; 0; Change to indeterminate mode when progress &amp;gt; 1.</source>
          <target state="translated">진행률 &amp;lt;0 인 경우 진행률 표시 줄을 제거하십시오. 진행&amp;gt; 1 인 경우 미정 모드로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="de48b5eb7e363f562fbca192dec883404e72f335" translate="yes" xml:space="preserve">
          <source>Remove the interceptor installed for &lt;code&gt;scheme&lt;/code&gt; and restore its original handler.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; 설치된 인터셉터를 제거 하고 원래 핸들러를 복원하십시오.</target>
        </trans-unit>
        <trans-unit id="be84b4e8b00bb85da728aba3c1e939ed03c3667d" translate="yes" xml:space="preserve">
          <source>Remove those files from &lt;code&gt;patches/v8/&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;patches/v8/&lt;/code&gt; 에서 해당 파일을 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="09ff1af3c250bf4804e7515d67a6fdc6096bc8f6" translate="yes" xml:space="preserve">
          <source>RemoveClientCertificate</source>
          <target state="translated">RemoveClientCertificate</target>
        </trans-unit>
        <trans-unit id="f3eea37d7fdb499edb9f43f4a5b0facc6a189c5b" translate="yes" xml:space="preserve">
          <source>RemoveClientCertificate Object</source>
          <target state="translated">RemoveClientCertificate 객체</target>
        </trans-unit>
        <trans-unit id="e7610639d794efee3f91d89b7cabcc1d7e9693bb" translate="yes" xml:space="preserve">
          <source>RemovePassword</source>
          <target state="translated">RemovePassword</target>
        </trans-unit>
        <trans-unit id="e77379db0cdb0131289912d772c0a48ab33cb592" translate="yes" xml:space="preserve">
          <source>RemovePassword Object</source>
          <target state="translated">암호 객체 제거</target>
        </trans-unit>
        <trans-unit id="1257a7ee095d25add93a52164b9d210e2c449190" translate="yes" xml:space="preserve">
          <source>Removes a previously set extra header name. This method can be called only before first write. Trying to call it after the first write will throw an error.</source>
          <target state="translated">이전에 설정 한 추가 헤더 이름을 제거합니다. 이 메소드는 처음 쓰기 전에 만 호출 할 수 있습니다. 첫 번째 쓰기 후에 호출하려고하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9d021ea0d5c81e124a640e8e877f1173a3b2f4b7" translate="yes" xml:space="preserve">
          <source>Removes all listeners, or those of the specified &lt;code&gt;channel&lt;/code&gt;.</source>
          <target state="translated">모든 리스너 또는 지정된 &lt;code&gt;channel&lt;/code&gt; 의 리스너를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="dc479d2f5c4704f2eda2daa74079d455087a3044" translate="yes" xml:space="preserve">
          <source>Removes focus from the child window.</source>
          <target state="translated">자식 창에서 포커스를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="6001a13abacd5fa30a532cfea3f0eb04210623c3" translate="yes" xml:space="preserve">
          <source>Removes focus from the window.</source>
          <target state="translated">창에서 초점을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="dd4147ec72db2746a75a1577f300530efff5233d" translate="yes" xml:space="preserve">
          <source>Removes listeners of the specified &lt;code&gt;channel&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;channel&lt;/code&gt; 청취자를 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="520cba612036b18a9bf0f55898bf9056553b64b9" translate="yes" xml:space="preserve">
          <source>Removes the &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;NSUserDefaults&lt;/code&gt;. This can be used to restore the default or global value of a &lt;code&gt;key&lt;/code&gt; previously set with &lt;code&gt;setUserDefault&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NSUserDefaults&lt;/code&gt; 의 &lt;code&gt;key&lt;/code&gt; 를 제거합니다 . 이전에 &lt;code&gt;setUserDefault&lt;/code&gt; 로 설정된 &lt;code&gt;key&lt;/code&gt; 의 기본값 또는 전역 값을 복원하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5c550812e2aa80eb376963271ac2e316a99b2832" translate="yes" xml:space="preserve">
          <source>Removes the cookies matching &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;callback&lt;/code&gt; will called with &lt;code&gt;callback()&lt;/code&gt; on complete.</source>
          <target state="translated">일치하는 쿠키 삭제 &lt;code&gt;url&lt;/code&gt; 과 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;callback&lt;/code&gt; 호출됩니다 &lt;code&gt;callback()&lt;/code&gt; 완료에.</target>
        </trans-unit>
        <trans-unit id="6cb324aee0bdaf62a85cf80c1a2357306019eb54" translate="yes" xml:space="preserve">
          <source>Removes the specified &lt;code&gt;listener&lt;/code&gt; from the listener array for the specified &lt;code&gt;channel&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;channel&lt;/code&gt; 의 청취자 배열로부터 지정된 &lt;code&gt;listener&lt;/code&gt; 를 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="5f06c2f042c46d9602cd45f2d24f143f25aef97c" translate="yes" xml:space="preserve">
          <source>Removes the specified path from DevTools workspace.</source>
          <target state="translated">DevTools 작업 공간에서 지정된 경로를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="ce1003e1cb0cbabdda24d25fb4173fb6dc32b894" translate="yes" xml:space="preserve">
          <source>Removes the subscriber with &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; 가 있는 가입자를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="f850aaef1da63a4197f29d6e8b20c0ad29393ee4" translate="yes" xml:space="preserve">
          <source>Render and control the contents of a BrowserWindow instance.</source>
          <target state="translated">BrowserWindow 인스턴스의 내용을 렌더링하고 제어합니다.</target>
        </trans-unit>
        <trans-unit id="28ce00edb10cb7876e38df9fc1ee595207dc8c35" translate="yes" xml:space="preserve">
          <source>Render and control web pages.</source>
          <target state="translated">웹 페이지를 렌더링하고 제어합니다.</target>
        </trans-unit>
        <trans-unit id="c8f52c0d0de083fe407b6e411e94c7e08b0b7d51" translate="yes" xml:space="preserve">
          <source>Render process</source>
          <target state="translated">렌더링 프로세스</target>
        </trans-unit>
        <trans-unit id="e72008facbad3c15c8bae1dc5a6d48d55c2181ce" translate="yes" xml:space="preserve">
          <source>Renderer</source>
          <target state="translated">Renderer</target>
        </trans-unit>
        <trans-unit id="62ee5f19f2ff2b19b013f15f7939722a9abb32e1" translate="yes" xml:space="preserve">
          <source>Renderer Process</source>
          <target state="translated">렌더러 프로세스</target>
        </trans-unit>
        <trans-unit id="24effdd311437c70c467c65e10d1672e26de4d31" translate="yes" xml:space="preserve">
          <source>Rendering Modes</source>
          <target state="translated">렌더링 모드</target>
        </trans-unit>
        <trans-unit id="d5e58a33f26427702dbc6fe526525d72c2dedb46" translate="yes" xml:space="preserve">
          <source>Repeat until finished</source>
          <target state="translated">끝날 때까지 반복</target>
        </trans-unit>
        <trans-unit id="d50988b0c8e7a24a70a53a7e4db4b88e44a73303" translate="yes" xml:space="preserve">
          <source>Replace instances of &lt;code&gt;a/deps/v8/filename.ext&lt;/code&gt; with &lt;code&gt;a/filename.ext&lt;/code&gt;</source>
          <target state="translated">인스턴스 교체 &lt;code&gt;a/deps/v8/filename.ext&lt;/code&gt; 와 &lt;code&gt;a/filename.ext&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c4469bba7c117edec05a5cca69c4beea0479616" translate="yes" xml:space="preserve">
          <source>Replace the old patch with the new:</source>
          <target state="translated">이전 패치를 새 패치로 교체하십시오.</target>
        </trans-unit>
        <trans-unit id="67178858add815552f6e0f5d410dc5c8e03bf642" translate="yes" xml:space="preserve">
          <source>Reporting Security Issues</source>
          <target state="translated">보안 문제보고</target>
        </trans-unit>
        <trans-unit id="ed53d550f98b8f0ee8133202b89fb29035df1e31" translate="yes" xml:space="preserve">
          <source>Represented File for macOS BrowserWindows</source>
          <target state="translated">macOS BrowserWindows 용 대표 파일</target>
        </trans-unit>
        <trans-unit id="dc720595ae724d464c85ca164a4381bcb761e788" translate="yes" xml:space="preserve">
          <source>Represented File for macOS Window</source>
          <target state="translated">macOS 창용 대표 파일</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="aaf5d2de2e03219f57ad898da5a1155ef21552e0" translate="yes" xml:space="preserve">
          <source>Resizes and moves the view to the supplied bounds relative to the window.</source>
          <target state="translated">뷰의 크기를 조정하고 창을 기준으로 제공된 경계로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="6a29bed7bd02e6b4b8d5aee066acee9eef8f1334" translate="yes" xml:space="preserve">
          <source>Resizes and moves the window to the supplied bounds</source>
          <target state="translated">창 크기를 조정하고 제공된 범위로 이동</target>
        </trans-unit>
        <trans-unit id="89c533eb6e0dadf6e3fcce7971144371f986affe" translate="yes" xml:space="preserve">
          <source>Resizes and moves the window's client area (e.g. the web page) to the supplied bounds.</source>
          <target state="translated">창의 클라이언트 영역 (예 : 웹 페이지)의 크기를 조정하고 제공된 범위로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="76391a02fa0f4d6d6b827102a543db9a155a76c8" translate="yes" xml:space="preserve">
          <source>Resizes the window to &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="translated">창의 크기를 &lt;code&gt;width&lt;/code&gt; 및 &lt;code&gt;height&lt;/code&gt; 로 조정 합니다.</target>
        </trans-unit>
        <trans-unit id="859085023d05090223a47f218dd175eca7c442f4" translate="yes" xml:space="preserve">
          <source>Resizes the window's client area (e.g. the web page) to &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="translated">창의 클라이언트 영역 (예 : 웹 페이지)을 &lt;code&gt;width&lt;/code&gt; 및 &lt;code&gt;height&lt;/code&gt; 로 크기 를 조정 합니다.</target>
        </trans-unit>
        <trans-unit id="4f38f0b268d5286a32e6ce45a81d91ebca5a57e9" translate="yes" xml:space="preserve">
          <source>Resolve any conflicts</source>
          <target state="translated">모든 갈등 해결</target>
        </trans-unit>
        <trans-unit id="d97bd32b4cb4cd1e7a5e9a4cef94caa0b6e055ba" translate="yes" xml:space="preserve">
          <source>Resolve merge conflicts in each file encountered, then:</source>
          <target state="translated">발생한 각 파일에서 병합 충돌을 해결 한 후 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="388e3381f2bfc150f0df31d6b4a6f8164f942b24" translate="yes" xml:space="preserve">
          <source>Resolves the proxy information for &lt;code&gt;url&lt;/code&gt;. The &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(proxy)&lt;/code&gt; when the request is performed.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 의 프록시 정보를 해결합니다 . &lt;code&gt;callback&lt;/code&gt; 으로 호출 될 &lt;code&gt;callback(proxy)&lt;/code&gt; 요청이 수행 될 때.</target>
        </trans-unit>
        <trans-unit id="5b8d86f00439228d4dfc8d370cdf4cd2489dd84f" translate="yes" xml:space="preserve">
          <source>Resolves the shortcut link at &lt;code&gt;shortcutPath&lt;/code&gt;.</source>
          <target state="translated">shortcutPath에서 &lt;code&gt;shortcutPath&lt;/code&gt; 가기 링크를 해결합니다 .</target>
        </trans-unit>
        <trans-unit id="d72e78895c7162662d891ce37735e60f211c5a09" translate="yes" xml:space="preserve">
          <source>Resolving a Bug Report</source>
          <target state="translated">버그 리포트 해결</target>
        </trans-unit>
        <trans-unit id="838f2922cbe7154ee6fcd54ca307e7934456e101" translate="yes" xml:space="preserve">
          <source>Resources will be loaded from this &lt;code&gt;scheme&lt;/code&gt; regardless of the current page's Content Security Policy.</source>
          <target state="translated">현재 페이지의 콘텐츠 보안 정책에 관계없이이 &lt;code&gt;scheme&lt;/code&gt; 에서 리소스가로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="ba7a3029fcf748633dabaef75f8b46cc45d9bec4" translate="yes" xml:space="preserve">
          <source>Restarts the app and installs the update after it has been downloaded. It should only be called after &lt;code&gt;update-downloaded&lt;/code&gt; has been emitted.</source>
          <target state="translated">앱을 다시 시작하고 다운로드 한 후 업데이트를 설치합니다. &lt;code&gt;update-downloaded&lt;/code&gt; 가 발생한 후에 만 ​​호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e770b92b955525e9969ceddbe9b1f80e9bdde11c" translate="yes" xml:space="preserve">
          <source>Restores the window from minimized state to its previous state.</source>
          <target state="translated">창을 최소화 된 상태에서 이전 상태로 복원합니다.</target>
        </trans-unit>
        <trans-unit id="9b1b19445e959832b91867b8753037d7237774a5" translate="yes" xml:space="preserve">
          <source>Results in a hidden title bar and a full size content window, yet the title bar still has the standard window controls (&amp;ldquo;traffic lights&amp;rdquo;) in the top left.</source>
          <target state="translated">숨겨진 제목 표시 줄과 전체 크기의 컨텐츠 창이 표시되지만 제목 표시 줄에는 여전히 왼쪽 상단에 표준 창 컨트롤 ( &quot;신호등&quot;)이 있습니다.</target>
        </trans-unit>
        <trans-unit id="01e086f5aca6cd9ada243f30b3fa901ee5229f35" translate="yes" xml:space="preserve">
          <source>Results in a hidden title bar with an alternative look where the traffic light buttons are slightly more inset from the window edge.</source>
          <target state="translated">신호등 버튼이 창 가장자리에서 약간 더 삽입 된 다른 모양의 숨겨진 제목 표시 줄이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="45958d46f82710b1c12fe8709efe0a373f2c7fb5" translate="yes" xml:space="preserve">
          <source>Resumes the download that has been paused.</source>
          <target state="translated">일시 중지 된 다운로드를 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="c721982a46543497da67b95949526849c498f45e" translate="yes" xml:space="preserve">
          <source>Retrieve information about screen size, displays, cursor position, etc.</source>
          <target state="translated">화면 크기, 디스플레이, 커서 위치 등에 대한 정보를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="87d9ab43bdb81f58adfb61a1262e3e6f91e13117" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; - The window to which this web page belongs.</source>
          <target state="translated">Returns &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; -&lt;/a&gt; 이 웹 페이지가 속한 창.</target>
        </trans-unit>
        <trans-unit id="15fabae02b7074408b9f5975a48e7b0555be9509" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;browser-window-proxy&quot;&gt;&lt;code&gt;BrowserWindowProxy&lt;/code&gt;&lt;/a&gt; - Creates a new window and returns an instance of &lt;code&gt;BrowserWindowProxy&lt;/code&gt; class.</source>
          <target state="translated">&lt;a href=&quot;browser-window-proxy&quot;&gt; &lt;code&gt;BrowserWindowProxy&lt;/code&gt; &lt;/a&gt; 반환 -새 창을 만들고 &lt;code&gt;BrowserWindowProxy&lt;/code&gt; 클래스 의 인스턴스를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d26c95a1c5874b2028c8820a34b3ce1ac24ad0e4" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;client-request&quot;&gt;&lt;code&gt;ClientRequest&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;client-request&quot;&gt; &lt;code&gt;ClientRequest&lt;/code&gt; 를&lt;/a&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4c04183f820c416e665555da3947de195d283e12" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;native-image&quot;&gt;&lt;code&gt;NativeImage&lt;/code&gt;&lt;/a&gt; - The image content in the clipboard.</source>
          <target state="translated">&lt;a href=&quot;native-image&quot;&gt; &lt;code&gt;NativeImage&lt;/code&gt; -&lt;/a&gt; 클립 보드의 이미지 내용을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="06cbfc7db093be3abb86232eb9e70ae24657b544" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/cpu-usage&quot;&gt;&lt;code&gt;CPUUsage&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;structures/cpu-usage&quot;&gt; &lt;code&gt;CPUUsage&lt;/code&gt; 를&lt;/a&gt; 반환</target>
        </trans-unit>
        <trans-unit id="5f1b336f77e34e58ba3dad45d3fd49531da49ce8" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/crash-report&quot;&gt;&lt;code&gt;CrashReport&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;structures/crash-report&quot;&gt; &lt;code&gt;CrashReport&lt;/code&gt; 를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="78dbd8fe8e9c362541846b2ba872ca764841eac6" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/crash-report&quot;&gt;&lt;code&gt;CrashReport[]&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;structures/crash-report&quot;&gt; &lt;code&gt;CrashReport[]&lt;/code&gt; &lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="67fcfe4d08d29bdd5f271de21f37c60ace7911f3" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; - The display nearest the specified point.</source>
          <target state="translated">반환 &lt;a href=&quot;structures/display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt; -지정된 포인트에 가장 가까운 디스플레이.</target>
        </trans-unit>
        <trans-unit id="0b6d7af8a706cd7935a4dced7578c3e9293dc7a0" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; - The display that most closely intersects the provided bounds.</source>
          <target state="translated">반환 &lt;a href=&quot;structures/display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt; -제공된 경계와 가장 근접한 디스플레이입니다.</target>
        </trans-unit>
        <trans-unit id="b79b4dbc055428e6fef468976ea3ed39e7d56ae4" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/display&quot;&gt;&lt;code&gt;Display&lt;/code&gt;&lt;/a&gt; - The primary display.</source>
          <target state="translated">반환 &lt;a href=&quot;structures/display&quot;&gt; &lt;code&gt;Display&lt;/code&gt; &lt;/a&gt; -기본 디스플레이.</target>
        </trans-unit>
        <trans-unit id="627b28bc87006e731c3ae948256eac1724bf30a2" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/display&quot;&gt;&lt;code&gt;Display[]&lt;/code&gt;&lt;/a&gt; - An array of displays that are currently available.</source>
          <target state="translated">Returns &lt;a href=&quot;structures/display&quot;&gt; &lt;code&gt;Display[]&lt;/code&gt; &lt;/a&gt; -현재 사용 가능한 디스플레이 배열.</target>
        </trans-unit>
        <trans-unit id="df53a870f0b4ca983446d77291b8588eb0814612" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/gpu-feature-status&quot;&gt;&lt;code&gt;GPUFeatureStatus&lt;/code&gt;&lt;/a&gt; - The Graphics Feature Status from &lt;code&gt;chrome://gpu/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chrome://gpu/&lt;/code&gt; 에서 &lt;a href=&quot;structures/gpu-feature-status&quot;&gt; &lt;code&gt;GPUFeatureStatus&lt;/code&gt; -&lt;/a&gt; 그래픽 기능 상태를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="4e88ae714728a8c15d720a3a5e493de9c19ba47b" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/io-counters&quot;&gt;&lt;code&gt;IOCounters&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;structures/io-counters&quot;&gt; &lt;code&gt;IOCounters&lt;/code&gt; 를&lt;/a&gt; 반환</target>
        </trans-unit>
        <trans-unit id="1cf6bb30577bb06ed5c3330ab246eaa499fcaa65" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/point&quot;&gt;&lt;code&gt;Point&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">반품 &lt;a href=&quot;structures/point&quot;&gt; &lt;code&gt;Point&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7666cf5ae9f43e45bfa18b53e37af490671106b" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/printer-info&quot;&gt;&lt;code&gt;PrinterInfo[]&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;structures/printer-info&quot;&gt; &lt;code&gt;PrinterInfo[]&lt;/code&gt; &lt;/a&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="58188f1fb1b35d46eb786a1f0ade14ac22542469" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/process-metric&quot;&gt;&lt;code&gt;ProcessMetric[]&lt;/code&gt;&lt;/a&gt;: Array of &lt;code&gt;ProcessMetric&lt;/code&gt; objects that correspond to memory and cpu usage statistics of all the processes associated with the app.</source>
          <target state="translated">반환 값 &lt;a href=&quot;structures/process-metric&quot;&gt; &lt;code&gt;ProcessMetric[]&lt;/code&gt; &lt;/a&gt; : 앱과 관련된 모든 프로세스의 메모리 및 CPU 사용량 통계에 해당하는 &lt;code&gt;ProcessMetric&lt;/code&gt; 객체의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="0ea2f360440f3e5232aefe4839692da181159c7e" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/rectangle&quot;&gt;&lt;code&gt;Rectangle&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;structures/rectangle&quot;&gt; &lt;code&gt;Rectangle&lt;/code&gt; &lt;/a&gt; 반환</target>
        </trans-unit>
        <trans-unit id="7041456528603e9baf62ae56965c05295b891b8c" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/shortcut-details&quot;&gt;&lt;code&gt;ShortcutDetails&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;structures/shortcut-details&quot;&gt; &lt;code&gt;ShortcutDetails&lt;/code&gt; &lt;/a&gt; 반환합니다</target>
        </trans-unit>
        <trans-unit id="eaecd5cb81749c2f9b8a1503b6173ab6f3972c5a" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;structures/size&quot;&gt;&lt;code&gt;Size&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">반품 &lt;a href=&quot;structures/size&quot;&gt; &lt;code&gt;Size&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ab59468727170b519ed97fe8aac9a9e85759d90d" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;web-contents&quot;&gt;&lt;code&gt;WebContents&lt;/code&gt;&lt;/a&gt; - The web contents associated with this &lt;code&gt;webview&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;web-contents&quot;&gt; &lt;code&gt;WebContents&lt;/code&gt; -&lt;/a&gt; 이 &lt;code&gt;webview&lt;/code&gt; 와 연관된 웹 컨텐츠를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="b9ceddc464e7cbac01edbd6ffc1e765f72f7e7cf" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;web-contents&quot;&gt;&lt;code&gt;WebContents&lt;/code&gt;&lt;/a&gt; - The web contents of this web page.</source>
          <target state="translated">&lt;a href=&quot;web-contents&quot;&gt; &lt;code&gt;WebContents&lt;/code&gt; -&lt;/a&gt; 이 웹 페이지의 웹 컨텐츠를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="44019f5f8a7801094423b09e8a3a220db82d9c65" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; 반환</target>
        </trans-unit>
        <trans-unit id="e66f1d328abd0213ae86503ae66114bf075870a4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; if &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa969540.aspx&quot;&gt;DWM composition&lt;/a&gt; (Aero Glass) is enabled, and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; - &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/aa969540.aspx&quot;&gt;DWM 컴포지션&lt;/a&gt; (Aero Glass)이 활성화 된 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="eddb1d0cde650dabc94d55ac605d7862bd2fd7b2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; if Chrome's accessibility support is enabled, &lt;code&gt;false&lt;/code&gt; otherwise. This API will return &lt;code&gt;true&lt;/code&gt; if the use of assistive technologies, such as screen readers, has been detected. See &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;https://www.chromium.org/developers/design-documents/accessibility&lt;/a&gt; for more details.</source>
          <target state="translated">반환 값 &lt;code&gt;Boolean&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; 크롬의 접근성 지원이 활성화되어있는 경우, &lt;code&gt;false&lt;/code&gt; 그렇지. 화면 판독기와 같은 보조 기술의 사용이 감지되면 이 API는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 자세한 내용은 &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;https://www.chromium.org/developers/design-documents/accessibility&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="02b005d7c744c6c4e28d289d13d9d710c7e4ce60" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; if Electron has finished initializing, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; - Electron 초기화가 완료되면 &lt;code&gt;true&lt;/code&gt; 를 반환 &lt;code&gt;false&lt;/code&gt; 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c8e84a14f88c167fa0c11231314bf2ab764bbf9e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; if an inverted color scheme, such as a high contrast theme, is active, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 값 &lt;code&gt;Boolean&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; 같은 고 대비 테마로 반전 된 색상이 활성화 된 경우, &lt;code&gt;false&lt;/code&gt; 그렇지.</target>
        </trans-unit>
        <trans-unit id="baa1c10d76bc9979efce1cb83baa7ac7a0172008" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; depending on whether the message is hooked.</source>
          <target state="translated">반환 값 &lt;code&gt;Boolean&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 메시지가 걸려 있는지 여부에 따라 달라집니다.</target>
        </trans-unit>
        <trans-unit id="df74cc99061d4efb44d82bceeda6b3c08c119fa6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled returns whether it is currently painting.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; - 경우 &lt;em&gt;오프 스크린 렌더링이&lt;/em&gt; 반환을 사용할 수는 현재 페인트되어 있는지 여부를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="15a67f7eb837af38338b2e144a9a3c16bebd2b40" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Indicates whether &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; - &lt;em&gt;오프 스크린 렌더링&lt;/em&gt; 사용 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="095a7d39ae770882fc3333130b60c9e57ccf5fdf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether DevTools window of guest page is focused.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -게스트 페이지의 DevTools 창이 포커스되었는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="f3bc1dbf33560145d88bd66c3848ddbcaad5136e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether a debugger is attached to the &lt;code&gt;webContents&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; -디버거가 &lt;code&gt;webContents&lt;/code&gt; 에 연결되어 있는지 여부를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="60454485cb763c79ecb29cd75c8ae8b4cfd602e9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether an application was available to open the URL. If callback is specified, always returns true.</source>
          <target state="translated">반환 값 &lt;code&gt;Boolean&lt;/code&gt; - 여부는 응용 프로그램이 URL을 열 사용할 수있었습니다. 콜백이 지정되면 항상 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="57a59e84b71d19a10fae9556f7617146e63f6f33" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether current window is a modal window.</source>
          <target state="translated">반환 값 &lt;code&gt;Boolean&lt;/code&gt; - 여부 현재 창은 모달 창입니다.</target>
        </trans-unit>
        <trans-unit id="4e82e302084f1945bf1b562fb00a4c4f27397b0a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether guest page has a DevTools window attached.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -게스트 페이지에 DevTools 창이 연결되어 있는지 여부</target>
        </trans-unit>
        <trans-unit id="37ca72a204cc854d271681f956096c95186a6f1e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether guest page has been muted.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -게스트 페이지가 음소거되었는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="644a28cf45c8c5f88ae15b19441dbec2f5c23b68" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether guest page is still loading resources.</source>
          <target state="translated">반환 값 &lt;code&gt;Boolean&lt;/code&gt; - 여부 게스트 페이지는 여전히 자원을로드하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="6c0c8933fd3d1e24196067946f7ca0871d7dc508" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether menu bar automatically hides itself.</source>
          <target state="translated">반환 값 &lt;code&gt;Boolean&lt;/code&gt; - 여부 메뉴 모음이 자동으로 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="54569c175d5b1690d6ec7b3875012a8aa5a7ec32" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether or not desktop notifications are supported on the current system</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; -현재 시스템에서 데스크탑 알림이 지원되는지 여부를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="eeed3399bff793720cd6a578f635a5e98825e0cc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether reports should be submitted to the server. Set through the &lt;code&gt;start&lt;/code&gt; method or &lt;code&gt;setUploadToServer&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -보고서를 서버에 제출해야하는지 여부입니다. &lt;code&gt;start&lt;/code&gt; 메소드 또는 &lt;code&gt;setUploadToServer&lt;/code&gt; 를 통해 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="42db401a87c3e67f4b4675235fa1ef93bb8b01a2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the Swipe between pages setting is on.</source>
          <target state="translated">반환 값 &lt;code&gt;Boolean&lt;/code&gt; - 여부 설정 페이지의 문지가 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c599075dd1514e5934f6b2025fa139af2b62b85" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the application is currently running from the systems Application folder. Use in combination with &lt;code&gt;app.moveToApplicationsFolder()&lt;/code&gt;</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 여부는 응용 프로그램이 현재 시스템의 응용 프로그램 폴더에서 실행 -. &lt;code&gt;app.moveToApplicationsFolder()&lt;/code&gt; 와 함께 사용</target>
        </trans-unit>
        <trans-unit id="28622861106f7d332685e3ec0f8f6a2c65ad0fe1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the browser can go back to previous web page.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; - 여부는 브라우저는 이전 웹 페이지로 돌아갈 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd5b9e857548d4a6a63b33f93606a48e621bb563" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the browser can go forward to next web page.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 브라우저는 다음 웹 페이지로 전진 할 수 있는지 여부 -.</target>
        </trans-unit>
        <trans-unit id="8068f982346f159bcc0d6fe32560dc80b01005a7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the buttons were added successfully</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -버튼이 성공적으로 추가되었는지 여부</target>
        </trans-unit>
        <trans-unit id="ade0f7d4747dbbb1cc005e8dec5b97932e3e1c15" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the call succeeded.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -호출 성공 여부.</target>
        </trans-unit>
        <trans-unit id="4fc2d967a14fcfbaaf2a2596b38c72bf8e55fae6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the clipboard supports the specified &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -클립 보드가 지정된 &lt;code&gt;format&lt;/code&gt; 지원하는지 여부를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="49e216449fe3b929d7976f30e880c3dfa81631de" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the corresponding &lt;code&gt;powerSaveBlocker&lt;/code&gt; has started.</source>
          <target state="translated">반환 값 &lt;code&gt;Boolean&lt;/code&gt; - 여부 해당 &lt;code&gt;powerSaveBlocker&lt;/code&gt; 을 시작했다.</target>
        </trans-unit>
        <trans-unit id="81539845285a1bdc08a80e6bd12c49f7aab27d45" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the current desktop environment is Unity launcher.</source>
          <target state="translated">Returns &lt;code&gt;Boolean&lt;/code&gt; - 현재 데스크탑 환경이 Unity 런처인지 여부.</target>
        </trans-unit>
        <trans-unit id="30485c6a3426ec639c178460c348f9678c644407" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the devtools is opened.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -devtools가 열렸는지 여부.</target>
        </trans-unit>
        <trans-unit id="1227356747c3aacaa0e9e71e6b9c20c8e6bbe73d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the devtools view is focused .</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -devtools 뷰의 포커스 여부.</target>
        </trans-unit>
        <trans-unit id="6b7c71e6ddfab751d09365d853231c3304550c1a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the dock icon is visible. The &lt;code&gt;app.dock.show()&lt;/code&gt; call is asynchronous so this method might not return true immediately after that call.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -도크 아이콘이 표시되는지 여부입니다. &lt;code&gt;app.dock.show()&lt;/code&gt; 이 메소드는 즉시 그 호출 후에 true를 반환되지 않을 수도 있습니다 호출은 비동기입니다.</target>
        </trans-unit>
        <trans-unit id="7abb95218ffaec4bde3f82f5c6a6423b7afc3516" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the download can resume.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -다운로드를 다시 시작할 수 있는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="c793d7c4340c7295e510a00bc01433889625ca62" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the download has user gesture.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -다운로드에 사용자 제스처가 있는지 여부</target>
        </trans-unit>
        <trans-unit id="6ac16d8e14a362aa982dea0239eb3ef5f6ed6b1f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the download is paused.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 다운로드가 일시 정지 여부를 -.</target>
        </trans-unit>
        <trans-unit id="4dca539dc7a99dfef117dd54f360f1f9cacb044f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the guest page can go back.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -게스트 페이지를 되돌릴 수 있는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="f5f067d13af8b8e1fd13b3e6a0bea6a917400aa2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the guest page can go forward.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 게스트 페이지가 앞으로 갈 수 있는지 여부 -.</target>
        </trans-unit>
        <trans-unit id="5a1e029590b8a08576f8346438ca04467349b494" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the guest page can go to &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 여부가 게스트 페이지로 이동 수 - &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c9c25780779b20eba38fbfc4fd62edac1d5648f0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the guest page is waiting for a first-response for the main resource of the page.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -게스트 페이지가 페이지의 기본 리소스에 대한 첫 번째 응답을 기다리는 지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="ddbf785d4ad7ff81db1a6214e9e3bc115cb1e11d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the image is a template image.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 여부 이미지 템플릿 이미지 -.</target>
        </trans-unit>
        <trans-unit id="94a78a15778a6809f0f1f581093b951abd6a57a8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the image is empty.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 여부는 이미지가 비어 -.</target>
        </trans-unit>
        <trans-unit id="6edfe3e2cce5b013e8f0597b73671816c4769431" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the item was successfully moved to the trash.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -항목이 휴지통으로 이동되었는지 여부</target>
        </trans-unit>
        <trans-unit id="ca98b5ad29ab951220a6b2d64e08604840370af4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the item was successfully opened.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 여부 항목이 성공적으로 열렸다는 -.</target>
        </trans-unit>
        <trans-unit id="c0bdcdefa43597c2b8a33361c3a507ee11ccfdd3" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the item was successfully shown.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 여부 항목이 성공적으로 보였다는 -.</target>
        </trans-unit>
        <trans-unit id="e1d11eacb6a5c62481a433f7d2f3519b24c6197b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the main frame (and not just iframes or frames within it) is still loading.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; - 메인 프레임 (및 iframe 또는 그 안의 프레임이 아님)이 여전히로드 중인지 여부</target>
        </trans-unit>
        <trans-unit id="d204f44f197756b21f122c8f9ff6a0d9f042a9f5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the maximize/zoom window button toggles fullscreen mode or maximizes the window.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -창 최대화 / 확대 / 축소 버튼이 전체 화면 모드를 전환하거나 창을 최대화하는지 여부를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1b0c95ab80e9db56ac4911298cad85e59b71266b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the menu bar is visible.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 여부는 메뉴 막대가 표시됩니다 -.</target>
        </trans-unit>
        <trans-unit id="f83a22ecb62ba3c66a58eae15fbf394645b316e1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the move was successful. Please note that if the move is successful your application will quit and relaunch.</source>
          <target state="translated">반환 값 &lt;code&gt;Boolean&lt;/code&gt; - 여부는 이동에 성공했습니다. 이동이 성공하면 응용 프로그램이 종료되었다가 다시 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="6b485d0888c71547a2bc81ce130affaf6622dafe" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the renderer process has crashed.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 렌더러 프로세스가 추락 여부 -.</target>
        </trans-unit>
        <trans-unit id="da90a079a87023039c2b945d7e25b35978dcfe87" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the shortcut was created successfully.</source>
          <target state="translated">반환 값 &lt;code&gt;Boolean&lt;/code&gt; - 여부 바로 가기가 성공적으로 만들어졌습니다.</target>
        </trans-unit>
        <trans-unit id="335494b7b8e38c2b8cd312a74e7b24fe62f413a9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the system is in Dark Mode.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -시스템이 어두운 모드인지 여부.</target>
        </trans-unit>
        <trans-unit id="fffa04c97c3085f330e3227d7f376784c2041719" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the tray icon is destroyed.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -트레이 아이콘이 손상되었는지 여부.</target>
        </trans-unit>
        <trans-unit id="d4b10bbcf8e7afba8569937cb813851310703f44" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the view is destroyed.</source>
          <target state="translated">Returns &lt;code&gt;Boolean&lt;/code&gt; - 뷰가 파괴되었는지 여부.</target>
        </trans-unit>
        <trans-unit id="1682729058680c77a7616a06efe3a73806f5863d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the web page can go to &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 여부는 웹 페이지로 이동 수 - &lt;code&gt;offset&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="608d4893071facc33a7785c388d502f7a03cbec0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the web page is destroyed.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 웹 페이지가 파괴 여부 -.</target>
        </trans-unit>
        <trans-unit id="aa158dbea98b79d01dc3ddcb4e3c6d8f5f99ab2f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the web page is focused.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 웹 페이지가 초점이 맞았는지 -.</target>
        </trans-unit>
        <trans-unit id="094ea089985f7ecdb669567954ffc922634ac107" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the web page is waiting for a first-response from the main resource of the page.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; - 여부는 웹 페이지는 페이지의 주요 자원에서 최초의 응답을 기다리고 있습니다.</target>
        </trans-unit>
        <trans-unit id="912c7d5058713bf14a990f4f58a8df13d257d64e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window can be manually closed by user.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -사용자가 창을 수동으로 닫을 수 있는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="df1728226f9fded7e143f8ea3d4a4d2b4e846b7c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window can be manually maximized by user.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -사용자가 창을 수동으로 최대화 할 수 있는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="c2d6190fff60ed2b6a2e611f6e8599922d67de54" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window can be manually minimized by user</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -사용자가 창을 수동으로 최소화 할 수 있는지 여부</target>
        </trans-unit>
        <trans-unit id="341efd0b4a6e662ffc1469c156f5cac351684191" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window can be manually resized by user.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -사용자가 창 크기를 수동으로 조정할 수 있는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="c6c7c0fb9c75976eca0e5c125a5b928cf998514e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window can be moved by user.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 여부는 윈도우가 사용자에 의해 이동 될 수 있습니다 -.</target>
        </trans-unit>
        <trans-unit id="b1a07749d0aa9b3b59f6a47913714e27d11ee036" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window has a shadow.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 여부는 윈도우가 그림자를 가지고 -.</target>
        </trans-unit>
        <trans-unit id="17772d3cd8f295e146457d80f53e0c493f30934d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is always on top of other windows.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 여부는 윈도우가 다른 윈도우의 상단에 항상 -.</target>
        </trans-unit>
        <trans-unit id="a1dda7c411d32153c13317aa1e1bdbcc7ea9346f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is destroyed.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 윈도우가 파괴 여부를 -.</target>
        </trans-unit>
        <trans-unit id="4eaaf1b8ba96086910ecda86d86328099c10ec37" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is focused.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; -창의 포커스 여부입니다.</target>
        </trans-unit>
        <trans-unit id="0e8659fa6b054a43983acb35f45207495991fcfb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is in fullscreen mode.</source>
          <target state="translated">반환 값 &lt;code&gt;Boolean&lt;/code&gt; - 여부 창이 전체 화면 모드에 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ba483904912a4b27b8c6f7df84665c072c2cf2a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is in kiosk mode.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; - 여부를 창은 키오스크 모드에 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbfcf3fce5a796acfc12a4ab63d39e9d80bf507c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is in simple (pre-Lion) fullscreen mode.</source>
          <target state="translated">반환 값 &lt;code&gt;Boolean&lt;/code&gt; - 여부 윈도우가 간단한에 전체 화면 모드 (사자 사전).</target>
        </trans-unit>
        <trans-unit id="6605aa63e704b0c62fcd5bbe5dfdbb53fc414327" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is maximized.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 창이 최대화되어 있는지 여부를 -.</target>
        </trans-unit>
        <trans-unit id="a2f69437d833ae30b1369d75b1a6272d6593313f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is minimized.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 창을 최소화 여부를 -.</target>
        </trans-unit>
        <trans-unit id="c216c6f8e4065bf9f522951657f1f4b4ba1c0cc0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is visible on all workspaces.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 여부는 윈도우가 모든 작업 공간에서 볼 수 있습니다 -.</target>
        </trans-unit>
        <trans-unit id="df336163ad8a5cecad1037492589b83dd8c71277" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window is visible to the user.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 여부는 윈도우가 사용자에게 표시됩니다 -.</target>
        </trans-unit>
        <trans-unit id="3e9f60bddbd84d7aab0860903b83bd4de698e302" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether the window's document has been edited.</source>
          <target state="translated">Returns &lt;code&gt;Boolean&lt;/code&gt; - 윈도우 문서가 편집되었는지 여부.</target>
        </trans-unit>
        <trans-unit id="aff13f9ab79810fee9a68173e5d851b87ac5cb7c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether this application has registered &lt;code&gt;accelerator&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; - 여부,이 응용 프로그램이 등록되어 &lt;code&gt;accelerator&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a8e2576afdafc879d4c18ca55e57fa8570adcbbb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether this page has been muted.</source>
          <target state="translated">반환 &lt;code&gt;Boolean&lt;/code&gt; 이 페이지가 음소거되었는지 여부를 -.</target>
        </trans-unit>
        <trans-unit id="c266032fc92030a33c7f44770037ef9ea7c3b0e6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - Whether web page is still loading resources.</source>
          <target state="translated">반환 값 &lt;code&gt;Boolean&lt;/code&gt; - 여부 웹 페이지는 여전히 자원을로드하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="68e909b4350e68f9b3aadd683aca89c2cb08597b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt; - true if the process of saving page has been initiated successfully.</source>
          <target state="translated">페이지를 저장하는 프로세스가 성공적으로 시작된 경우 &lt;code&gt;Boolean&lt;/code&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="2b63d925c4d2cc176465cfdab1331981aa910cf6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt;, whether a user can make a payment.</source>
          <target state="translated">사용자가 결제 할 수 있는지 여부를 &lt;code&gt;Boolean&lt;/code&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="7407ab9f6706dc3c49ec7eec10137f2a4731d50f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Boolean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Boolean&lt;/code&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="dc9f5a0d7f98033eb65f4d16287e5ae20d472df6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserView | null&lt;/code&gt; - The BrowserView that owns the given &lt;code&gt;webContents&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt; if the contents are not owned by a BrowserView.</source>
          <target state="translated">&lt;code&gt;BrowserView | null&lt;/code&gt; 반환 합니다 | 널 (null) - 지정된 소유 한 BrowserView &lt;code&gt;webContents&lt;/code&gt; 또는 &lt;code&gt;null&lt;/code&gt; 내용이 BrowserView 소유하지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="6aeb7b3db18bf1a8f2bfd06c567c4c18d1eaabef" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserView | null&lt;/code&gt; - an attached BrowserView. Returns &lt;code&gt;null&lt;/code&gt; if none is attached.</source>
          <target state="translated">&lt;code&gt;BrowserView | null&lt;/code&gt; 반환 합니다 | null- 첨부 된 BrowserView 연결되어 있지 않은 경우 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b2e4e16b51837d7895977b7653fb565226e3b1af" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserView&lt;/code&gt; - The view with the given &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">반환 값 &lt;code&gt;BrowserView&lt;/code&gt; - 주어진 &lt;code&gt;id&lt;/code&gt; 를 가진 뷰 .</target>
        </trans-unit>
        <trans-unit id="3d704ad7b5de2c9a6bbe00fa57499ce82aefa148" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserView[]&lt;/code&gt; - An array of all opened BrowserViews.</source>
          <target state="translated">반환 값 &lt;code&gt;BrowserView[]&lt;/code&gt; -열려있는 모든 BrowserView의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="07d4f2179a2db2990d5c2d89ee55196909288d29" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserWindow | null&lt;/code&gt; - The window that owns the given &lt;code&gt;browserView&lt;/code&gt;. If the given view is not attached to any window, returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BrowserWindow | null&lt;/code&gt; 반환 합니다 | null- 지정된 &lt;code&gt;browserView&lt;/code&gt; 를 소유 한 창입니다 . 제공된 뷰가 창에 연결되지 않은 경우 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4d125f268cc802b239cb3c04ced878166d6cae60" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserWindow&lt;/code&gt; - The parent window.</source>
          <target state="translated">Returns &lt;code&gt;BrowserWindow&lt;/code&gt; - 부모 윈도우.</target>
        </trans-unit>
        <trans-unit id="66af0e2e10e1d3d3129657f99cf4be1b53ccc48b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserWindow&lt;/code&gt; - The window that is focused in this application, otherwise returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Returns &lt;code&gt;BrowserWindow&lt;/code&gt; - 이 응용 프로그램에 초점을 둔 창, 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8749ee110b773362dee1e14f4ed1bb3a389dbd85" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserWindow&lt;/code&gt; - The window that owns the given &lt;code&gt;webContents&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;BrowserWindow&lt;/code&gt; - 지정된 소유 한 창 &lt;code&gt;webContents&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="aa92ae0923be19806a14f391fd778bb82de7029f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserWindow&lt;/code&gt; - The window with the given &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">반환 값 &lt;code&gt;BrowserWindow&lt;/code&gt; - 주어진 &lt;code&gt;id&lt;/code&gt; 를 가진 창 .</target>
        </trans-unit>
        <trans-unit id="c4d5560a2a68d8f1b447347c850ed347030fc301" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserWindow[]&lt;/code&gt; - All child windows.</source>
          <target state="translated">&lt;code&gt;BrowserWindow[]&lt;/code&gt; -모든 자식 창을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1ed6af64913af4fe92fd223b0c64703ab49848db" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BrowserWindow[]&lt;/code&gt; - An array of all opened browser windows.</source>
          <target state="translated">반환 값 &lt;code&gt;BrowserWindow[]&lt;/code&gt; -열려있는 모든 브라우저 창의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="552e7aa7fa91e71c01b48a584c87dd631b8b20ad" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Buffer&lt;/code&gt; - A &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;Buffer&lt;/a&gt; that contains a copy of the image's raw bitmap pixel data.</source>
          <target state="translated">반환 &lt;code&gt;Buffer&lt;/code&gt; - 이미지의 원시 비트 맵 픽셀 데이터의 복사본이 포함 된 &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;버퍼&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b03633cf9734f0c753213dd8c2ace1f2916cd3ae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Buffer&lt;/code&gt; - A &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;Buffer&lt;/a&gt; that contains the image's &lt;code&gt;JPEG&lt;/code&gt; encoded data.</source>
          <target state="translated">반환 &lt;code&gt;Buffer&lt;/code&gt; - 이미지의 &lt;code&gt;JPEG&lt;/code&gt; 인코딩 데이터 가 포함 된 &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;버퍼&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="1941fce7f93d8b153e5671dbd4abc2ae41f76d51" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Buffer&lt;/code&gt; - A &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;Buffer&lt;/a&gt; that contains the image's &lt;code&gt;PNG&lt;/code&gt; encoded data.</source>
          <target state="translated">반환 &lt;code&gt;Buffer&lt;/code&gt; - 이미지의 &lt;code&gt;PNG&lt;/code&gt; 인코딩 데이터 가 포함 된 &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;버퍼&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="3aab9da119f507a3c43d72c3ca40f868ad8be74b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Buffer&lt;/code&gt; - A &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;Buffer&lt;/a&gt; that contains the image's raw bitmap pixel data.</source>
          <target state="translated">반환 &lt;code&gt;Buffer&lt;/code&gt; - 이미지의 원시 비트 맵 픽셀 데이터가 포함 된 &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;버퍼&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="af87c405260f3c78ffadc67649a31e69ef5c6f74" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Buffer&lt;/code&gt; - A &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;Buffer&lt;/a&gt; that stores C pointer to underlying native handle of the image. On macOS, a pointer to &lt;code&gt;NSImage&lt;/code&gt; instance would be returned.</source>
          <target state="translated">반환 &lt;code&gt;Buffer&lt;/code&gt; - 이미지의 기본 네이티브 핸들에 대한 C 포인터를 저장 하는 &lt;a href=&quot;https://nodejs.org/api/buffer.html#buffer_class_buffer&quot;&gt;버퍼&lt;/a&gt; 입니다. macOS에서는 &lt;code&gt;NSImage&lt;/code&gt; 인스턴스에 대한 포인터 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b7df25ed934a1b0bd2e7d35690b17b00ef385414" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Buffer&lt;/code&gt; - Reads &lt;code&gt;format&lt;/code&gt; type from the clipboard.</source>
          <target state="translated">&lt;code&gt;Buffer&lt;/code&gt; 반환 - 클립 보드에서 &lt;code&gt;format&lt;/code&gt; 유형을 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="3b6ab53b75d59771d8e6e8f090c97266edc2918c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Buffer&lt;/code&gt; - The platform-specific handle of the window.</source>
          <target state="translated">반환 &lt;code&gt;Buffer&lt;/code&gt; -창의 플랫폼 별 핸들입니다.</target>
        </trans-unit>
        <trans-unit id="021ebb0ff0554814ee373c744760d5500402cbc1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Double&lt;/code&gt; - Number of seconds since the UNIX epoch when the download was started.</source>
          <target state="translated">반환 &lt;code&gt;Double&lt;/code&gt; (초) 다운로드가 시작된 UNIX의 시대부터 -.</target>
        </trans-unit>
        <trans-unit id="a5430abe928d3cce51a147008f509f34138bc565" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Float&lt;/code&gt; - The image's aspect ratio.</source>
          <target state="translated">반환 &lt;code&gt;Float&lt;/code&gt; - 이미지의 종횡비입니다.</target>
        </trans-unit>
        <trans-unit id="cd8fbdb067a79f0cb13e32a951922ed7851280fc" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Function&lt;/code&gt; - This function &lt;strong&gt;must&lt;/strong&gt; be called once you have finished accessing the security scoped file. If you do not remember to stop accessing the bookmark, &lt;a href=&quot;https://developer.apple.com/reference/foundation/nsurl/1417051-startaccessingsecurityscopedreso?language=objc&quot;&gt;kernel resources will be leaked&lt;/a&gt; and your app will lose its ability to reach outside the sandbox completely, until your app is restarted.</source>
          <target state="translated">반환 &lt;code&gt;Function&lt;/code&gt; - 보안 범위 파일에 대한 액세스가 완료되면 이 함수 &lt;strong&gt;를&lt;/strong&gt; 호출 &lt;strong&gt;해야&lt;/strong&gt; 합니다. 북마크 액세스를 중지하지 않으면 &lt;a href=&quot;https://developer.apple.com/reference/foundation/nsurl/1417051-startaccessingsecurityscopedreso?language=objc&quot;&gt;커널 리소스가 유출&lt;/a&gt; 되고 앱이 다시 시작될 때까지 앱이 샌드 박스 외부에 완전히 도달 할 수 없게됩니다.</target>
        </trans-unit>
        <trans-unit id="ace51d88523149566c51b808fbfae8a3651edd00" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled returns the current frame rate.</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; 반환 - &lt;em&gt;오프 스크린 렌더링&lt;/em&gt; 이 활성화 된 경우 현재 프레임 속도를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8ae2d39bc0f656cc8c12d72d68783e3cda66888e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - The &lt;code&gt;pid&lt;/code&gt; of the associated renderer process.</source>
          <target state="translated">반환 &lt;code&gt;Integer&lt;/code&gt; - &lt;code&gt;pid&lt;/code&gt; 관련 렌더러 프로세스의.</target>
        </trans-unit>
        <trans-unit id="5561afafa71f8771da66c95cb0384224f9047806" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - The blocker ID that is assigned to this power blocker.</source>
          <target state="translated">반환 &lt;code&gt;Integer&lt;/code&gt; 이 전원 차단 기능에 할당 된 차단 ID는 -.</target>
        </trans-unit>
        <trans-unit id="de4fd7d85c96ad6a94897f8572d91a0a6c9a5571" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - The current value displayed in the counter badge.</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; - 카운터 배지에 표시된 현재 값을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="d57c1870bc8e6ce9964823196ff1d6f5ba012b7a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - The height of the menu bar in pixels.</source>
          <target state="translated">반환 값 &lt;code&gt;Integer&lt;/code&gt; -메뉴 막대의 높이 (픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="16431ca648a763c5222773de29ff0af7c1735231" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - The received bytes of the download item.</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; - 다운로드 항목의 수신 바이트 수를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="0c55279aa4201ebe94ef68583c9414b2d706b139" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - The request id used for the request.</source>
          <target state="translated">&lt;code&gt;Integer&lt;/code&gt; - 요청에 사용 된 요청 ID를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="a265e9a3d9ec5cd9f336be0c5d446d14cd2a0638" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; - The total size in bytes of the download item.</source>
          <target state="translated">반환 &lt;code&gt;Integer&lt;/code&gt; - 다운로드 항목의 전체 바이트 크기입니다.</target>
        </trans-unit>
        <trans-unit id="9afe8a7a9ec877f091af13a627490dfbf0b7152d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt; an ID representing the request.</source>
          <target state="translated">요청을 나타내는 ID를 &lt;code&gt;Integer&lt;/code&gt; 로 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="eba0d8f92dbf8fec9290b6bc28db5f530d60c9fe" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer&lt;/code&gt;, the index of the clicked button, if a callback is provided it returns undefined.</source>
          <target state="translated">클릭 된 버튼의 인덱스 인 &lt;code&gt;Integer&lt;/code&gt; 를 반환 합니다. 콜백이 제공되면 undefined를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ec3f05e3ffcaaf35b5fe84561c5de60c0bda1db0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer[]&lt;/code&gt; - Contains the window's client area's width and height.</source>
          <target state="translated">반환 &lt;code&gt;Integer[]&lt;/code&gt; - 윈도우의 클라이언트 영역의 폭과 높이를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="31e3e31b345d1f5d57005f115e9a939416554cbb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer[]&lt;/code&gt; - Contains the window's current position.</source>
          <target state="translated">반환 &lt;code&gt;Integer[]&lt;/code&gt; - 윈도우의 현재 위치를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="60bb0353967c6e8a1ec493d455bf5e5edc5dfd74" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer[]&lt;/code&gt; - Contains the window's maximum width and height.</source>
          <target state="translated">반환 &lt;code&gt;Integer[]&lt;/code&gt; - 윈도우의 최대 폭과 높이를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="37643b65f7bfeca106927a104650e41ea399ce03" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer[]&lt;/code&gt; - Contains the window's minimum width and height.</source>
          <target state="translated">반환 값 &lt;code&gt;Integer[]&lt;/code&gt; -창의 최소 너비와 높이를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="ca5e920300260f220f9c24d40339b52b67befd31" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Integer[]&lt;/code&gt; - Contains the window's width and height.</source>
          <target state="translated">반환 &lt;code&gt;Integer[]&lt;/code&gt; - 윈도우의 폭과 높이를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="50aee53b6c4276745ab6c90b5cd9528605695abd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Menu | null&lt;/code&gt; - The application menu, if set, or &lt;code&gt;null&lt;/code&gt;, if not set.</source>
          <target state="translated">반품 &lt;code&gt;Menu | null&lt;/code&gt; 응용 프로그램 메뉴 (설정된 경우) 또는 설정되지 않은 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2110b941953c31e37201eed150997ccc6061923d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Menu&lt;/code&gt;</source>
          <target state="translated">반품 &lt;code&gt;Menu&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c73b708c454c000ef59ce3cf36debae6eada96a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;MenuItem&lt;/code&gt; the item with the specified &lt;code&gt;id&lt;/code&gt;</source>
          <target state="translated">지정된 &lt;code&gt;id&lt;/code&gt; 를 가진 항목을 &lt;code&gt;MenuItem&lt;/code&gt; 으로 반환</target>
        </trans-unit>
        <trans-unit id="eeaddd7534e0a34cd76f9dd45cd2047d9a2c8920" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NativeImage&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NativeImage&lt;/code&gt; 를 반환</target>
        </trans-unit>
        <trans-unit id="d16f36832e07d3f8547c540d3c79ac34f72bcf30" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NativeImage&lt;/code&gt; - The cropped image.</source>
          <target state="translated">&lt;code&gt;NativeImage&lt;/code&gt; - 자른 이미지를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="089ea04a64a9bf0269289e627e1e975cf092dcbd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NativeImage&lt;/code&gt; - The resized image.</source>
          <target state="translated">반환 값 &lt;code&gt;NativeImage&lt;/code&gt; - 크기가 조정 된 이미지.</target>
        </trans-unit>
        <trans-unit id="7ae182cf5cb32381b2f53f22105de833cc9df313" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Number&lt;/code&gt; - The current zoom factor.</source>
          <target state="translated">반환 값 &lt;code&gt;Number&lt;/code&gt; - 현재 확대 / 축소 비율입니다.</target>
        </trans-unit>
        <trans-unit id="95e714fb74d17110fc412d122732cd303811a76e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Number&lt;/code&gt; - The current zoom level.</source>
          <target state="translated">반환 값 &lt;code&gt;Number&lt;/code&gt; - 현재 줌 레벨입니다.</target>
        </trans-unit>
        <trans-unit id="cc652ac72f541d0b4162a946667537fb08802f9c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Number&lt;/code&gt; - between 0.0 (fully transparent) and 1.0 (fully opaque)</source>
          <target state="translated">0.0 (완전 투명)에서 1.0 (완전 불투명) 사이의 &lt;code&gt;Number&lt;/code&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7c518d0f008a480d7f9ddb3c2a7d7c5e41df7963" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Object&lt;/code&gt; - The keys are the extension names and each value is an Object containing &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt; properties.</source>
          <target state="translated">반환 &lt;code&gt;Object&lt;/code&gt; -키는 확장명이며 각 값은 &lt;code&gt;name&lt;/code&gt; 및 &lt;code&gt;version&lt;/code&gt; 속성을 포함하는 객체 입니다.</target>
        </trans-unit>
        <trans-unit id="7993fb666a558773a8807e88305fbb955b8034cb" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Object&lt;/code&gt; - The value of a previously set extra header name.</source>
          <target state="translated">반환 값 &lt;code&gt;Object&lt;/code&gt; - 이전에 설정 한 추가 헤더 이름의 값입니다.</target>
        </trans-unit>
        <trans-unit id="549ffa4db5a4c2511c0986809af90bc5bb6d240c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Object&lt;/code&gt;:</source>
          <target state="translated">반환 &lt;code&gt;Object&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="1c1bafece679483ef109e87abcb0065d5bbec7f9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Promise&lt;/code&gt; - A promise that resolves with the result of the executed code or is rejected if the result of the code is a rejected promise.</source>
          <target state="translated">반환 &lt;code&gt;Promise&lt;/code&gt; -실행 된 코드의 결과로 해결되거나 코드 결과가 거부 된 약속 인 경우 거부되는 약속입니다.</target>
        </trans-unit>
        <trans-unit id="2960ae11aef49d53150ca5ae4333cdea45a48906" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Session&lt;/code&gt; - A session instance from &lt;code&gt;partition&lt;/code&gt; string. When there is an existing &lt;code&gt;Session&lt;/code&gt; with the same &lt;code&gt;partition&lt;/code&gt;, it will be returned; otherwise a new &lt;code&gt;Session&lt;/code&gt; instance will be created with &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; - &lt;code&gt;partition&lt;/code&gt; 문자열 에서 세션 인스턴스를 리턴 합니다. 동일한 &lt;code&gt;partition&lt;/code&gt; 가진 기존 &lt;code&gt;Session&lt;/code&gt; 이 있으면 반환됩니다. 그렇지 않으면 새로운 &lt;code&gt;Session&lt;/code&gt; 인스턴스가 작성됩니다 &lt;code&gt;options&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="114f794825dfb425dd64688c907740b9bb441ffa" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - A path to a special directory or file associated with &lt;code&gt;name&lt;/code&gt;. On failure an &lt;code&gt;Error&lt;/code&gt; is thrown.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - &lt;code&gt;name&lt;/code&gt; 과 관련된 특수 디렉토리 또는 파일의 경로 입니다. 실패하면 &lt;code&gt;Error&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c453588becf3b452bd50be2c853e6b1fce617a0a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - ETag header value.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; -ETag 헤더 값을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="6472f92e065ba69b2aa8d979e570be939ab2a619" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - Last-Modified header value.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; -Last-Modified 헤더 값을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="ddc95a3d6b55b0241dfaf3b172b2852d21238fad" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - Reads &lt;code&gt;format&lt;/code&gt; type from the clipboard.</source>
          <target state="translated">반환 &lt;code&gt;String&lt;/code&gt; - 클립 보드에서 &lt;code&gt;format&lt;/code&gt; 유형을 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="b49b1d0e0f52f3fef733b19e92aae6a3a294b153" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - Returns the WebRTC IP Handling Policy.</source>
          <target state="translated">반환 &lt;code&gt;String&lt;/code&gt; -WebRTC IP 처리 정책을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c5e25201adf485d95c2cbdee5554f6de7e38356a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The Content-Disposition field from the response header.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 응답 헤더에서 Content-Disposition 필드입니다.</target>
        </trans-unit>
        <trans-unit id="ae0289c73a587ba06adedef95a01f01f0741cd6d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The URL of guest page.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 손님 페이지의 URL입니다.</target>
        </trans-unit>
        <trans-unit id="04b21b44fa16d2bd09c503272df9ee65acf73e3d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The URL of the current web page.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 현재 웹 페이지의 URL입니다.</target>
        </trans-unit>
        <trans-unit id="6cfef0bfdc53067c4f67c62ed015cf8ecdd7b0b9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The badge string of the dock.</source>
          <target state="translated">반환 &lt;code&gt;String&lt;/code&gt; -도크의 배지 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="c889a4e3a831704d4487d2de9d1f433cd1ec4023" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The content in the clipboard as RTF.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 클립 보드의 내용을 RTF로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="96615497815bb1e95f99cc154bdc022069bfcccf" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The content in the clipboard as markup.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 클립 보드의 내용을 마크 업으로 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="58f0f60fa2f6011527dc2e9561caf3ed71c1e295" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The content in the clipboard as plain text.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 클립 보드의 내용을 일반 텍스트로 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1e6ec423fd1e337f1f1ae06affb9dd72cda4caf6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The current application directory.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 현재 응용 프로그램 디렉토리.</target>
        </trans-unit>
        <trans-unit id="f2270d6cd03d2247e440510be9d9b4dcff4c708e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The current application locale. Possible return values are documented &lt;a href=&quot;locales&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 현재 응용 프로그램 로캘입니다. 가능한 반환 값은 &lt;a href=&quot;locales&quot;&gt;여기&lt;/a&gt; 에 설명되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7ae485cc03e14657d711b26e299aaae0d0571db7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The current application's name, which is the name in the application's &lt;code&gt;package.json&lt;/code&gt; file.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 현재 응용 프로그램의 이름 . 응용 프로그램의 &lt;code&gt;package.json&lt;/code&gt; 파일 에있는 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="f8a9d6a8d737e834b40bd7d30e90924715831e4a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The current state. Can be &lt;code&gt;progressing&lt;/code&gt;, &lt;code&gt;completed&lt;/code&gt;, &lt;code&gt;cancelled&lt;/code&gt; or &lt;code&gt;interrupted&lt;/code&gt;.</source>
          <target state="translated">Returns &lt;code&gt;String&lt;/code&gt; - 현재 상태. &lt;code&gt;progressing&lt;/code&gt; , &lt;code&gt;completed&lt;/code&gt; , &lt;code&gt;cancelled&lt;/code&gt; 또는 &lt;code&gt;interrupted&lt;/code&gt; 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="31c46d83249473e8daae49b662285edd08fd977d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The current update feed URL.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 현재 업데이트 피드 URL입니다.</target>
        </trans-unit>
        <trans-unit id="27a13e258316d55c3eb3fb1669a06534857a2e6c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The data URL of the image.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 이미지의 데이터 URL입니다.</target>
        </trans-unit>
        <trans-unit id="d98ecf1de329777d5d40e1469a501bc1ef9dc9e6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The file name of the download item.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 다운로드 항목의 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b2578578b72607349dd3b1ce2a7d33b017778962" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The files mime type.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 파일 MIME 유형입니다.</target>
        </trans-unit>
        <trans-unit id="1e465f498d1c1038a629daa20e18747d8c01c463" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The origin url where the item is downloaded from.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 항목을 다운로드 한 원본 URL입니다.</target>
        </trans-unit>
        <trans-unit id="6b65bf32c5ab839ea3ad50dfba29f8031901c19e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The pathname of the file the window represents.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 윈도우가 나타내는 파일의 경로명.</target>
        </trans-unit>
        <trans-unit id="df3776a5075fda56f67c5ba1eaa2fed5af0086a0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The save path of the download item. This will be either the path set via &lt;code&gt;downloadItem.setSavePath(path)&lt;/code&gt; or the path selected from the shown save dialog.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 다운로드 항목의 저장 경로입니다. 이것은 &lt;code&gt;downloadItem.setSavePath(path)&lt;/code&gt; 를 통해 설정된 경로 이거나 표시된 저장 대화 상자에서 선택한 경로입니다.</target>
        </trans-unit>
        <trans-unit id="4627c797e44c85c91c80e565c749871d165b3f71" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The system color setting in RGB hexadecimal form (&lt;code&gt;#ABCDEF&lt;/code&gt;). See the &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms724371(v=vs.85).aspx&quot;&gt;Windows docs&lt;/a&gt; for more details.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; -RGB 16 진수 형식 ( &lt;code&gt;#ABCDEF&lt;/code&gt; ) 의 시스템 색상 설정입니다 . 자세한 내용은 &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/ms724371(v=vs.85).aspx&quot;&gt;Windows 문서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6cc103b346be2c62ef187c318a93915ca0f8b361" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The text on the find pasteboard. This method uses synchronous IPC when called from the renderer process. The cached value is reread from the find pasteboard whenever the application is activated.</source>
          <target state="translated">반환 &lt;code&gt;String&lt;/code&gt; -찾기 대지의 텍스트입니다. 이 메소드는 렌더러 프로세스에서 호출 될 때 동기 IPC를 사용합니다. 캐시 된 값은 애플리케이션이 활성화 될 때마다 찾기 보드에서 다시 읽습니다.</target>
        </trans-unit>
        <trans-unit id="a482c7b713f4c1fb607eb34e0065c6a674abffed" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The title of guest page.</source>
          <target state="translated">반환 &lt;code&gt;String&lt;/code&gt; -손님 페이지의 제목입니다.</target>
        </trans-unit>
        <trans-unit id="9e39454287dd8a3d79da35f503001c7f3e60ecee" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The title of the current web page.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 현재 웹 페이지의 제목입니다.</target>
        </trans-unit>
        <trans-unit id="c8bad9bdeae11693611970b837962f72e2fc9dae" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The title of the native window.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 기본 윈도우의 제목입니다.</target>
        </trans-unit>
        <trans-unit id="882b91c18a9b36b8ea09851936c89db27af526e8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The type of the currently running activity.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 현재 실행중인 활동의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="048b0c177e928ead29ac67c1d1ff64555b0a5a6f" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The user agent for guest page.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 게스트 페이지의 사용자 에이전트입니다.</target>
        </trans-unit>
        <trans-unit id="03e6e1eb06d7d5cc9f39d8b7269ce4635781175b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The user agent for this session.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 이 세션의 사용자 에이전트.</target>
        </trans-unit>
        <trans-unit id="68b69dedc72d008512ab87276ebf6d31b4f3d096" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The user agent for this web page.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 이 웹 페이지의 사용자 에이전트.</target>
        </trans-unit>
        <trans-unit id="2463a8b34e81637b22f3f7f75981a7385d6a4643" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The users current system wide accent color preference in RGBA hexadecimal form.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; -RGBA 16 진수 형식의 사용자 현재 시스템 전체 악센트 색상 선호.</target>
        </trans-unit>
        <trans-unit id="1f36897a755c5aded221fa8cc0368b23f6f27136" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt; - The version of the loaded application. If no version is found in the application's &lt;code&gt;package.json&lt;/code&gt; file, the version of the current bundle or executable is returned.</source>
          <target state="translated">반환 값 &lt;code&gt;String&lt;/code&gt; - 로드 된 응용 프로그램의 버전입니다. 응용 프로그램의 &lt;code&gt;package.json&lt;/code&gt; 파일 에 버전이 없으면 현재 번들 또는 실행 파일의 버전이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="31694c0110b171ba5391158b3f43cd58ede0fc72" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt;, the path of the file chosen by the user, if a callback is provided it returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">사용자가 선택한 파일의 경로 인 &lt;code&gt;String&lt;/code&gt; 을 반환 합니다. 콜백이 제공되면 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f0db62cb2c4f123b8d855f8c9b70e6ceff6773ed" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String&lt;/code&gt;, the path to the receipt.</source>
          <target state="translated">영수증 경로 인 &lt;code&gt;String&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="a1e73221f969b7cae7ec948cf3ba4ee9d5bbf996" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; - An array of supported formats for the clipboard &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">반환 값 &lt;code&gt;String[]&lt;/code&gt; -클립 보드 &lt;code&gt;type&lt;/code&gt; 에 지원되는 형식의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="f9e13a4ef5289d5b06e288b829cf2d5ed471f74b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; - The complete url chain of the item including any redirects.</source>
          <target state="translated">반환 값 &lt;code&gt;String[]&lt;/code&gt; -리디렉션을 포함한 항목의 전체 URL 체인.</target>
        </trans-unit>
        <trans-unit id="923e64e60ef25f4e78822b1cd693b0873fa2d0b8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt; an array of paths to preload scripts that have been registered.</source>
          <target state="translated">등록 된 스크립트를 사전로드하기위한 경로 배열을 &lt;code&gt;String[]&lt;/code&gt; 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="bae73c2c98331612dc6c366ce51f6f8429956a79" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;String[]&lt;/code&gt;, an array of file paths chosen by the user, if the callback is provided it returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">사용자가 선택한 파일 경로의 배열 인 &lt;code&gt;String[]&lt;/code&gt; 반환 합니다. 콜백이 제공되면 &lt;code&gt;undefined&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1a6c7a586b56f17a276ba312c2721c92e1c77ba9" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebContents&lt;/code&gt; - A WebContents instance with the given ID.</source>
          <target state="translated">&lt;code&gt;WebContents&lt;/code&gt; - 제공된 ID를 가진 WebContents 인스턴스를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="a68d5585df401c31a588c98855e8e5fafec74456" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebContents&lt;/code&gt; - The web contents that is focused in this application, otherwise returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">Return &lt;code&gt;WebContents&lt;/code&gt; - 이 애플리케이션에 초점을 맞춘 웹 컨텐츠, 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0c2bd07476b13cc89053e1c18dcf742542b3eef1" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;WebContents[]&lt;/code&gt; - An array of all &lt;code&gt;WebContents&lt;/code&gt; instances. This will contain web contents for all windows, webviews, opened devtools, and devtools extension background pages.</source>
          <target state="translated">&lt;code&gt;WebContents[]&lt;/code&gt; -모든 &lt;code&gt;WebContents&lt;/code&gt; 인스턴스 의 배열을 리턴 합니다. 여기에는 모든 창, 웹뷰, 열린 devtools 및 devtools 확장 배경 페이지에 대한 웹 컨텐츠가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="1902ac569a2312f8815b290037988cdb744757be" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The global variable of &lt;code&gt;name&lt;/code&gt; (e.g. &lt;code&gt;global[name]&lt;/code&gt;) in the main process.</source>
          <target state="translated">기본 프로세스에서 &lt;code&gt;name&lt;/code&gt; 의 전역 변수 (예 : &lt;code&gt;global[name]&lt;/code&gt; )를 리턴 &lt;code&gt;any&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8401e8866b40f51fbb6d7e2633e6ecafe4c3465" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The object returned by &lt;code&gt;require(module)&lt;/code&gt; in the main process. Modules specified by their relative path will resolve relative to the entrypoint of the main process.</source>
          <target state="translated">반환 &lt;code&gt;any&lt;/code&gt; -에 의해 반환되는 객체 &lt;code&gt;require(module)&lt;/code&gt; 의 주요 과정에서. 상대 경로로 지정된 모듈은 기본 프로세스의 진입 점을 기준으로 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="c522e66dfd87ddf28ee211d7e7036eadfb473e12" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The value of &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;NSUserDefaults&lt;/code&gt;.</source>
          <target state="translated">반환 &lt;code&gt;any&lt;/code&gt; -의 값 &lt;code&gt;key&lt;/code&gt; 에 &lt;code&gt;NSUserDefaults&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f5e5a88f4417c1e0d0af3bc1659070da4a5ca98b" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;any&lt;/code&gt; - The value sent back by the &lt;a href=&quot;ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">반환 &lt;code&gt;any&lt;/code&gt; - 값은에 의해 다시 전송 &lt;a href=&quot;ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; 의&lt;/a&gt; 핸들러입니다.</target>
        </trans-unit>
        <trans-unit id="2ee052be19e00638713aaaa08413c76413615780" translate="yes" xml:space="preserve">
          <source>Returns all uploaded crash reports. Each report contains the date and uploaded ID.</source>
          <target state="translated">업로드 된 모든 충돌 보고서를 반환합니다. 각 보고서에는 날짜와 업로드 된 ID가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="2b5ec4cbb83869df3cc77a808f126fcd0460ed29" translate="yes" xml:space="preserve">
          <source>Returns an Object containing &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt; keys representing the bookmark in the clipboard. The &lt;code&gt;title&lt;/code&gt; and &lt;code&gt;url&lt;/code&gt; values will be empty strings when the bookmark is unavailable.</source>
          <target state="translated">클립 보드의 책갈피를 나타내는 &lt;code&gt;title&lt;/code&gt; 및 &lt;code&gt;url&lt;/code&gt; 키가 포함 된 Object를 반환합니다 . &lt;code&gt;title&lt;/code&gt; 과 &lt;code&gt;url&lt;/code&gt; 북마크를 사용할 수 없을 때 값은 빈 문자열이 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="e581a2f5b9be500264cea39b4d29a52d661ab229" translate="yes" xml:space="preserve">
          <source>Returns an object describing usage information of Blink's internal memory caches.</source>
          <target state="translated">Blink의 내부 메모리 캐시 사용 정보를 설명하는 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f23bd54100e425b9c76fe9a1f52022c20ae112ef" translate="yes" xml:space="preserve">
          <source>Returns an object giving memory usage statistics about the current process. Note that all statistics are reported in Kilobytes.</source>
          <target state="translated">현재 프로세스에 대한 메모리 사용 통계를 제공하는 객체를 반환합니다. 모든 통계는 킬로바이트 단위로보고됩니다.</target>
        </trans-unit>
        <trans-unit id="f27c5643d974431418e69f225c656a0234dd61c8" translate="yes" xml:space="preserve">
          <source>Returns an object giving memory usage statistics about the entire system. Note that all statistics are reported in Kilobytes.</source>
          <target state="translated">전체 시스템에 대한 메모리 사용 통계를 제공하는 객체를 반환합니다. 모든 통계는 킬로바이트 단위로보고됩니다.</target>
        </trans-unit>
        <trans-unit id="e8057890e22b9f8b67929c5723eef8eca4e93b25" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;webContents&lt;/code&gt; that sent the message, you can call &lt;code&gt;event.sender.send&lt;/code&gt; to reply to the asynchronous message, see &lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; for more information.</source>
          <target state="translated">메시지를 보낸 &lt;code&gt;webContents&lt;/code&gt; 를 리턴합니다 . 비동기 메시지에 응답하기 위해 &lt;code&gt;event.sender.send&lt;/code&gt; 를 호출 할 수 있습니다 . 자세한 정보는 &lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c6880d91bc5cf27aec068ed67155ffa4d3e91110" translate="yes" xml:space="preserve">
          <source>Returns the date and ID of the last crash report. If no crash reports have been sent or the crash reporter has not been started, &lt;code&gt;null&lt;/code&gt; is returned.</source>
          <target state="translated">마지막 충돌 보고서의 날짜와 ID를 반환합니다. 충돌 보고서가 전송되지 않았거나 충돌보고자가 시작되지 않은 경우 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6da92a267240aa12670fc2f0602964c5acbaa063" translate="yes" xml:space="preserve">
          <source>Returns the visible URL. Writing to this attribute initiates top-level navigation.</source>
          <target state="translated">보이는 URL을 반환합니다. 이 속성에 쓰면 최상위 탐색이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="7749fcf802c472b6c2f5bd0556805e456ffd5674" translate="yes" xml:space="preserve">
          <source>Returns:</source>
          <target state="translated">Returns:</target>
        </trans-unit>
        <trans-unit id="47dcc27d6e87ece8baebe7e3877a261a5467093d" translate="yes" xml:space="preserve">
          <source>Roles</source>
          <target state="translated">Roles</target>
        </trans-unit>
        <trans-unit id="aadecd5653a198be5411a0643f9e5b01ef6f2d10" translate="yes" xml:space="preserve">
          <source>Roles allow menu items to have predefined behaviors.</source>
          <target state="translated">역할을 통해 메뉴 항목에 사전 정의 된 동작이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cfd5233f6c25112a7ae3ff91e4acc195f899f25f" translate="yes" xml:space="preserve">
          <source>Romanian</source>
          <target state="translated">Romanian</target>
        </trans-unit>
        <trans-unit id="40929586610053a634b9e4f61c5b20f26870e295" translate="yes" xml:space="preserve">
          <source>Romansh</source>
          <target state="translated">Romansh</target>
        </trans-unit>
        <trans-unit id="b8a5fd736772c4a313c4de796bec65f8ab2effb0" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git add your_changed_file.cc&lt;/code&gt;, and commit your change.</source>
          <target state="translated">&lt;code&gt;git add your_changed_file.cc&lt;/code&gt; 를 실행 하고 변경 사항을 커밋하십시오.</target>
        </trans-unit>
        <trans-unit id="5e3f8f0f74f3021861b7f6085e5662f13aa5f041" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git add your_changed_file.cc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git add your_changed_file.cc&lt;/code&gt; 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="fdbeb0a5cc782bcd533b4b0a06f1b19fe2ee18f6" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;git-clang-format&lt;/code&gt;, and you will probably see modifications in &lt;code&gt;your_changed_file.cc&lt;/code&gt;, these modifications are generated from &lt;code&gt;clang-format&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;git-clang-format&lt;/code&gt; 을 실행 하면 &lt;code&gt;your_changed_file.cc&lt;/code&gt; 에 수정 사항이 표시 될 것입니다 . 이러한 수정 사항은 &lt;code&gt;clang-format&lt;/code&gt; 에서 생성 됩니다 .</target>
        </trans-unit>
        <trans-unit id="b47d63fed4fd82e91407d1c5b1f60dbed9cec7ab" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;npm run prepare-release -- --notesOnly&lt;/code&gt; to view auto generated release notes. The notes generated should help you determine if this is a major, minor, patch, or beta version change. Read the &lt;a href=&quot;../tutorial/electron-versioning#semver&quot;&gt;Version Change Rules&lt;/a&gt; for more information.</source>
          <target state="translated">실행 &lt;code&gt;npm run prepare-release -- --notesOnly&lt;/code&gt; 보기 자동 생성 된 릴리스 노트에. 생성 된 메모는 이것이 주요, 부, 패치 또는 베타 버전 변경인지 확인하는 데 도움이됩니다. 자세한 내용은 &lt;a href=&quot;../tutorial/electron-versioning#semver&quot;&gt;버전 변경 규칙&lt;/a&gt; 을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="3ec56dd036ed12028c3a4befb8d157c78271cd84" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;script/update&lt;/code&gt; to get the latest libcc</source>
          <target state="translated">최신 libcc를 얻으려면 &lt;code&gt;script/update&lt;/code&gt; 를 실행하십시오</target>
        </trans-unit>
        <trans-unit id="ecc04fc73bd9e28cc2dbb2e34bc699872e727cb1" translate="yes" xml:space="preserve">
          <source>Run the build when all patches can be applied without errors</source>
          <target state="translated">모든 패치를 오류없이 적용 할 수있을 때 빌드를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="f81da03623f4678b1d0a88cb300ef073313365b4" translate="yes" xml:space="preserve">
          <source>Run the example inside Electron: &lt;code&gt;./node_modules/.bin/electron touchbar.js&lt;/code&gt;</source>
          <target state="translated">Electron 내부에서 예제를 실행하십시오. &lt;code&gt;./node_modules/.bin/electron touchbar.js&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="03eea6fe68d08c23ee051601b792e86069c57548" translate="yes" xml:space="preserve">
          <source>Run the prepare-release script</source>
          <target state="translated">준비 릴리스 스크립트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="f4f5eadb085530c0a2c8afe8a1bc775ad08cccca" translate="yes" xml:space="preserve">
          <source>Run the update script with the --xcode argument.</source>
          <target state="translated">--xcode 인수와 함께 업데이트 스크립트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="fb8a1b5cd9e545a0e99ce044671aa84c2328b9f2" translate="yes" xml:space="preserve">
          <source>Running Your App</source>
          <target state="translated">앱 실행</target>
        </trans-unit>
        <trans-unit id="2ce1fe4a10500dae85aef09840368cfcd8ecbdc6" translate="yes" xml:space="preserve">
          <source>Running the above example</source>
          <target state="translated">위의 예제를 실행</target>
        </trans-unit>
        <trans-unit id="74ad93cbebf587ac46ab0ef1e3f24139ddd3f535" translate="yes" xml:space="preserve">
          <source>Russian</source>
          <target state="translated">Russian</target>
        </trans-unit>
        <trans-unit id="7c2ec64b2c38d12b505b5fd75ee288dceedd8a1b" translate="yes" xml:space="preserve">
          <source>SHA - &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf&quot;&gt;FIPS 180-4&lt;/a&gt;</source>
          <target state="translated">SHA- &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf&quot;&gt;FIPS 180-4&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9546a799e70aa601e431551d80f31b5bfd8b9df8" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;protocol.registerStreamProtocol&lt;/code&gt;, except that it replaces an existing protocol handler.</source>
          <target state="translated">&lt;code&gt;protocol.registerStreamProtocol&lt;/code&gt; 과 동일하지만 기존 프로토콜 핸들러를 대체한다는 점이 다릅니다.</target>
        </trans-unit>
        <trans-unit id="6dfdbade7002a2d69f55f64ad452636f5c27b3d0" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;subscribeNotification&lt;/code&gt;, but uses &lt;code&gt;NSNotificationCenter&lt;/code&gt; for local defaults. This is necessary for events such as &lt;code&gt;NSUserDefaultsDidChangeNotification&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;subscribeNotification&lt;/code&gt; 과 동일 하지만 로컬 기본값으로 &lt;code&gt;NSNotificationCenter&lt;/code&gt; 를 사용합니다 . &lt;code&gt;NSUserDefaultsDidChangeNotification&lt;/code&gt; 과 같은 이벤트에 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="bcd0d52364d10f3bc81d47694637bdfd654e86fc" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;unsubscribeNotification&lt;/code&gt;, but removes the subscriber from &lt;code&gt;NSNotificationCenter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;unsubscribeNotification&lt;/code&gt; 과 동일 하지만 &lt;code&gt;NSNotificationCenter&lt;/code&gt; 에서 구독자를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="26f78a3edab8bc49aa9671cccc476cba80b28d93" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.capturePage([rect, ]callback)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.capturePage([rect, ]callback)&lt;/code&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="636f1e73cded8b523350006257f0bb65497d6eea" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.loadFile&lt;/code&gt;, &lt;code&gt;filePath&lt;/code&gt; should be a path to an HTML file relative to the root of your application. See the &lt;code&gt;webContents&lt;/code&gt; docs for more information.</source>
          <target state="translated">&lt;code&gt;webContents.loadFile&lt;/code&gt; 과 동일하게 &lt;code&gt;filePath&lt;/code&gt; 는 애플리케이션의 루트에 상대적인 HTML 파일의 경로 여야합니다. 자세한 내용은 &lt;code&gt;webContents&lt;/code&gt; 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0190a18aa72702f8b45e07e46046dbb9c99de065" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.loadURL(url[, options])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.loadURL(url[, options])&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="82b95b7d5f77471ef8f73b6ed8179b6cf1dedd03" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.reload&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.reload&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="129890bda53ef7ad60257818882912fbe53db967" translate="yes" xml:space="preserve">
          <source>Same as &lt;code&gt;webContents.showDefinitionForSelection()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.showDefinitionForSelection()&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="2cc0724359a61b01f6c24fc544e7ae4f41c3c9b2" translate="yes" xml:space="preserve">
          <source>Save the above file to your computer as &lt;code&gt;touchbar.js&lt;/code&gt;</source>
          <target state="translated">위의 파일을 컴퓨터에 &lt;code&gt;touchbar.js&lt;/code&gt; 로 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="2c959d69ea6f6fb685ee79d3bafa0d911a7d6283" translate="yes" xml:space="preserve">
          <source>Save the file</source>
          <target state="translated">파일을 저장하십시오</target>
        </trans-unit>
        <trans-unit id="58df2ed823cdd4690f8dacf52369ef08b8917119" translate="yes" xml:space="preserve">
          <source>Schedules a full repaint of the window this web contents is in.</source>
          <target state="translated">이 웹 컨텐츠가있는 창의 전체 다시 그리기를 예약합니다.</target>
        </trans-unit>
        <trans-unit id="e80af8419edd6924a4eb2492086ded3cee61c310" translate="yes" xml:space="preserve">
          <source>Scots Gaelic</source>
          <target state="translated">스코틀랜드 게 일어</target>
        </trans-unit>
        <trans-unit id="26b25ac9ab334d5c9ee9e642ca52b0327da6ec72" translate="yes" xml:space="preserve">
          <source>ScrubberItem</source>
          <target state="translated">ScrubberItem</target>
        </trans-unit>
        <trans-unit id="c1ec744a093e0c733e3fb2cec799ce791643a673" translate="yes" xml:space="preserve">
          <source>ScrubberItem Object</source>
          <target state="translated">ScrubberItem 객체</target>
        </trans-unit>
        <trans-unit id="329e5602e2833d8f93a85c833b53d05b708870d0" translate="yes" xml:space="preserve">
          <source>Second, the callbacks passed to the main process will persist until the main process garbage-collects them.</source>
          <target state="translated">둘째, 메인 프로세스로 전달 된 콜백은 메인 프로세스가 가비지 수집 할 때까지 지속됩니다.</target>
        </trans-unit>
        <trans-unit id="4758bf3cf3612cd75e13622feee413991c1858ca" translate="yes" xml:space="preserve">
          <source>Secure schemes do not trigger mixed content warnings. For example, &lt;code&gt;https&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; are secure schemes because they cannot be corrupted by active network attackers.</source>
          <target state="translated">보안 체계는 혼합 컨텐츠 경고를 트리거하지 않습니다. 예를 들어 &lt;code&gt;https&lt;/code&gt; 및 &lt;code&gt;data&lt;/code&gt; 는 활성 네트워크 공격자가 손상시킬 수 없으므로 안전한 구성표입니다.</target>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="translated">Security</target>
        </trans-unit>
        <trans-unit id="c1affc9c83b3714d09711172b7a83267645eb627" translate="yes" xml:space="preserve">
          <source>Security Checklist</source>
          <target state="translated">보안 점검표</target>
        </trans-unit>
        <trans-unit id="23c4cfbbeab885f5c9f74d1d9f315d17e5af7bbd" translate="yes" xml:space="preserve">
          <source>Security, Native Capabilities, and Your Responsibility</source>
          <target state="translated">보안, 기본 기능 및 책임</target>
        </trans-unit>
        <trans-unit id="9833dcb00345ddae5cbd773addffd50c815f9400" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;build-system-overview#tests&quot;&gt;Build System Overview: Tests&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;build-system-overview#tests&quot;&gt;빌드 시스템 개요 : 테스트를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="a58813d3c3b3053b8fb6a1701995d091905cb0d3" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;coding-style&quot;&gt;coding style&lt;/a&gt; for more information about best practice when modifying code in different parts of the project.</source>
          <target state="translated">프로젝트의 다른 부분에서 코드를 수정할 때 모범 사례에 대한 자세한 내용은 &lt;a href=&quot;coding-style&quot;&gt;코딩 스타일&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a05ce16ce3715b5f1b58051e476bd537c72d85c8" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;development/readme&quot;&gt;development/README.md&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;development/readme&quot;&gt;development / README.md를&lt;/a&gt; 참조하십시오</target>
        </trans-unit>
        <trans-unit id="73d7c8150c6ce0f7a93108b05f8e9a1539cd2800" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/mojo/README.md&quot;&gt;https://chromium.googlesource.com/chromium/src/+/master/mojo/README.md&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/mojo/README.md&quot;&gt;https://chromium.googlesource.com/chromium/src/+/master/mojo/README.md를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="4b2cc1d5f3de0bc2fee791afea5fb8f6ee059a4d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://conventionalcommits.org&quot;&gt;conventionalcommits.org&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://conventionalcommits.org&quot;&gt;traditionalcommits.org&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e684b0d18691b980d96ed18ab327fdd2feb3a0be" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://stackoverflow.com/help/mcve&quot;&gt;How to create a Minimal, Complete, and Verifiable example&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://stackoverflow.com/help/mcve&quot;&gt;최소, 완료 및 검증 가능한 예 작성 방법을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ecd3b3463460c3f2e1881313a2e4f8363afe741d" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;ipc-main&quot;&gt;ipcMain&lt;/a&gt; for code examples.</source>
          <target state="translated">코드 예제는 &lt;a href=&quot;ipc-main&quot;&gt;ipcMain&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="736407e10a23c2fc73aff20a0f1192ef6e57d6ae" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;menu&quot;&gt;&lt;code&gt;Menu&lt;/code&gt;&lt;/a&gt; for examples.</source>
          <target state="translated">예제는 &lt;a href=&quot;menu&quot;&gt; &lt;code&gt;Menu&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dffc89e4cb43c122a0e7f1cec023eed2ef4220d4" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;recent-documents&quot;&gt;Recent Documents documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;recent-documents&quot;&gt;최근 문서 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0d7fd10b14d2e1a7a21087fc165dfa2018ff0174" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;upgrading-node&quot;&gt;Upgrading Node&lt;/a&gt; for instructions on this.</source>
          <target state="translated">이에 대한 지시 사항은 &lt;a href=&quot;upgrading-node&quot;&gt;노드 업그레이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="85d0afa43609910152eee14c8ad3286150838366" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;web-contents#contentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; for examples.</source>
          <target state="translated">예제는 &lt;a href=&quot;web-contents#contentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dcfe31bd9dbfddfa95546d8b0d8d5a19fa9f8e6b" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;web-contents#contentssendinputeventevent&quot;&gt;webContents.sendInputEvent&lt;/a&gt; for detailed description of &lt;code&gt;event&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; 객체에 대한 자세한 설명은 &lt;a href=&quot;web-contents#contentssendinputeventevent&quot;&gt;webContents.sendInputEvent&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="337be7104bf5a3851c42003b32034e4f98ea2f7b" translate="yes" xml:space="preserve">
          <source>See all of the current parameters being passed to the crash reporter.</source>
          <target state="translated">충돌 리포터에 전달되는 모든 현재 매개 변수를보십시오.</target>
        </trans-unit>
        <trans-unit id="e29007005b40bf1fc4ec2d10c7139e89b8170472" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;chromium-development&quot;&gt;Chromium Development&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;chromium-development&quot;&gt;크롬 개발&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="58ef5af520d1a7d088abd3d02633745691f5398b" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;tutorial/using-native-node-modules&quot;&gt;Using Native Node Modules&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;tutorial/using-native-node-modules&quot;&gt;기본 노드 모듈 사용을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ab749aa774f584827785b49b4d1861c7f37386f" translate="yes" xml:space="preserve">
          <source>See also &lt;a href=&quot;v8-development&quot;&gt;V8 Development&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;v8-development&quot;&gt;V8 개발&lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="eb76eeea4869bec20abc0606e7a8d45239249d90" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#main-process&quot;&gt;main process&lt;/a&gt;, &lt;a href=&quot;#renderer-process&quot;&gt;renderer process&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#main-process&quot;&gt;주요 과정을&lt;/a&gt; , &lt;a href=&quot;#renderer-process&quot;&gt;렌더링 과정&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5527483ee74ea81aba9bc6afa79cb258a4afdd57" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#process&quot;&gt;process&lt;/a&gt;, &lt;a href=&quot;#main-process&quot;&gt;main process&lt;/a&gt;</source>
          <target state="translated">또한보십시오 : &lt;a href=&quot;#process&quot;&gt;process&lt;/a&gt; , &lt;a href=&quot;#main-process&quot;&gt;main process&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ffe6b1b4c07ca59d0a31a452b02200bd7fe3440a" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;#process&quot;&gt;process&lt;/a&gt;, &lt;a href=&quot;#renderer-process&quot;&gt;renderer process&lt;/a&gt;</source>
          <target state="translated">참조 : &lt;a href=&quot;#process&quot;&gt;process&lt;/a&gt; , &lt;a href=&quot;#renderer-process&quot;&gt;renderer process&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07f3407502f02ad6d9324dfe027804f8e0c61929" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../api/browser-window#winsetprogressbarprogress&quot;&gt;API documentation for more options and modes&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../api/browser-window#winsetprogressbarprogress&quot;&gt;추가 옵션 및 모드&lt;/a&gt; 는 API 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="922af4639f13ee2e081e9da7e55f5a4e48b82809" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;build-instructions-osx#prerequisites&quot;&gt;macOS&lt;/a&gt; or &lt;a href=&quot;build-instructions-linux#prerequisites&quot;&gt;Linux&lt;/a&gt; build instructions for the requirements for your platform. In addition, you'll need to install &lt;a href=&quot;http://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up&quot;&gt;&lt;code&gt;depot_tools&lt;/code&gt;&lt;/a&gt;, the toolset used for fetching Chromium and its dependencies.</source>
          <target state="translated">플랫폼 요구 사항 은 &lt;a href=&quot;build-instructions-osx#prerequisites&quot;&gt;macOS&lt;/a&gt; 또는 &lt;a href=&quot;build-instructions-linux#prerequisites&quot;&gt;Linux&lt;/a&gt; 빌드 지침을 참조하십시오 . 또한 Chromium을 가져 오는 데 사용되는 도구 세트 인 &lt;a href=&quot;http://commondatastorage.googleapis.com/chrome-infra-docs/flat/depot_tools/docs/html/depot_tools_tutorial.html#_setting_up&quot;&gt; &lt;code&gt;depot_tools&lt;/code&gt; &lt;/a&gt; 및 해당 종속성 을 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a72f6b3fee71b5ee27e43e4c277da90b203d6211" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;electron-versioning&quot;&gt;Electron versioning doc&lt;/a&gt; for info on how to manage Electron versions in your apps.</source>
          <target state="translated">앱에서 Electron 버전을 관리하는 방법에 대한 정보 는 &lt;a href=&quot;electron-versioning&quot;&gt;Electron 버전 관리 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="75d1df3201ba8ff332a54dd5604ceb7856b1f323" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nssound&quot;&gt;&lt;code&gt;NSSound&lt;/code&gt;&lt;/a&gt; docs for more information.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://developer.apple.com/documentation/appkit/nssound&quot;&gt; &lt;code&gt;NSSound&lt;/code&gt; &lt;/a&gt; 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b363dc9dae171616eaac7df6d3b3dd2dcbaa69c8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW9&quot;&gt;Enabling Network Access documentation&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW9&quot;&gt;네트워크 액세스 활성화 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e14f95642ba46acbb1edbb2a5d74ce0062156ead" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/EventOverview/EventArchitecture/EventArchitecture.html#//apple_ref/doc/uid/10000060i-CH3-SW7&quot;&gt;macOS Cocoa Event Handling Guide&lt;/a&gt; for more information on macOS' native actions.</source>
          <target state="translated">macOS의 기본 조치에 대한 자세한 정보 는 &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/EventOverview/EventArchitecture/EventArchitecture.html#//apple_ref/doc/uid/10000060i-CH3-SW7&quot;&gt;macOS Cocoa 이벤트 처리 안내서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7ee477ba47414c448dc2b5680377bdbb4cb080b9" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW6&quot;&gt;Enabling User-Selected File Access documentation&lt;/a&gt; for more details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html#//apple_ref/doc/uid/TP40011195-CH4-SW6&quot;&gt;사용자가 선택한 파일 액세스 사용 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8af3f81ab6e9c039c559ab3c7ac5f466983267db" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles#Adding_shortcuts_to_a_launcher&quot;&gt;Unity Launcher documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles#Adding_shortcuts_to_a_launcher&quot;&gt;Unity Launcher 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e751e583ba867e212b34eb4bd8e9020730a2b27c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://nodejs.org/api/cli.html&quot;&gt;Node documentation&lt;/a&gt; or run &lt;code&gt;node --help&lt;/code&gt; in your terminal for a list of available flags. Additionally, run &lt;code&gt;node --v8-options&lt;/code&gt; to see a list of flags that specifically refer to Node's V8 JavaScript engine.</source>
          <target state="translated">사용 가능한 플래그 목록은 터미널에서 &lt;a href=&quot;https://nodejs.org/api/cli.html&quot;&gt;노드 설명서&lt;/a&gt; 또는 run &lt;code&gt;node --help&lt;/code&gt; 를 참조하십시오 . 또한 &lt;code&gt;node --v8-options&lt;/code&gt; 를 실행 하여 노드의 V8 JavaScript 엔진을 구체적으로 나타내는 플래그 목록을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e892ae8b32202c13cdeb96f7a5865a50aa322aea" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;native-file-drag-drop&quot;&gt;Native File Drag &amp;amp; Drop documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;native-file-drag-drop&quot;&gt;기본 파일 끌어서 놓기 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b1281c35eacd3ba14e8868188e2d0a04cb5e310b" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;notifications&quot;&gt;Notifications documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;notifications&quot;&gt;알림 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f8669d8d2974ee35575500f8482370ab20c1913" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;progress-bar&quot;&gt;Progress Bar documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;progress-bar&quot;&gt;진행률 표시 줄 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0324004b1500cf9129273ae604a6e8a0a77d7ef4" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;represented-file&quot;&gt;Represented File documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;represented-file&quot;&gt;대표 파일 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f864e177f43b7cb234d77b7df618bc99d7b82ba" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;web-contents&quot;&gt;&lt;code&gt;webContents&lt;/code&gt; documentation&lt;/a&gt; for its methods and events.</source>
          <target state="translated">메소드 및 이벤트에 대해서는 &lt;a href=&quot;web-contents&quot;&gt; &lt;code&gt;webContents&lt;/code&gt; 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae91d406fcbd618d12f5c235dc3e56d9b698056e" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;windows-store-guide&quot;&gt;Windows Store Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;windows-store-guide&quot;&gt;Windows 스토어 가이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="70457ac5b9ba95528640a6b9ef6a955b285ea1da" translate="yes" xml:space="preserve">
          <source>See the description of the &lt;code&gt;window-all-closed&lt;/code&gt; event for the differences between the &lt;code&gt;will-quit&lt;/code&gt; and &lt;code&gt;window-all-closed&lt;/code&gt; events.</source>
          <target state="translated">&lt;code&gt;will-quit&lt;/code&gt; 이벤트 와 &lt;code&gt;window-all-closed&lt;/code&gt; 이벤트 의 차이점 에 대해서는 &lt;code&gt;window-all-closed&lt;/code&gt; 이벤트에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="71695eaa30fa4f50190447174f2b56a0ea8f143a" translate="yes" xml:space="preserve">
          <source>SegmentedControlSegment</source>
          <target state="translated">SegmentedControlSegment</target>
        </trans-unit>
        <trans-unit id="4394ae9f946ada7d5b66bd57512f2b0ffffcc7f4" translate="yes" xml:space="preserve">
          <source>SegmentedControlSegment Object</source>
          <target state="translated">SegmentedControlSegment 객체</target>
        </trans-unit>
        <trans-unit id="4208d8084338685df1c0978e4dd221efe2d57392" translate="yes" xml:space="preserve">
          <source>Selects the next tab when native tabs are enabled and there are other tabs in the window.</source>
          <target state="translated">기본 탭이 활성화되어 있고 창에 다른 탭이있는 경우 다음 탭을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="a1f51b697f96978cd01f1977f3790edf482286e7" translate="yes" xml:space="preserve">
          <source>Selects the previous tab when native tabs are enabled and there are other tabs in the window.</source>
          <target state="translated">기본 탭이 활성화되어 있고 창에 다른 탭이있는 경우 이전 탭을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="72ac6f4346e1855115a073803fab5a0d300cceeb" translate="yes" xml:space="preserve">
          <source>Semantic Commits</source>
          <target state="translated">시맨틱 커밋</target>
        </trans-unit>
        <trans-unit id="1cb1b3bc1e2b6809211c45cfc2e520d9dc52d504" translate="yes" xml:space="preserve">
          <source>Send a message to the main process asynchronously via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; 을 통해 비동기 적으로 메인 프로세스에 메시지를 보내면 임의의 인수를 보낼 수도 있습니다. 인수는 내부적으로 JSON으로 직렬화되므로 함수 또는 프로토 타입 체인이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7398add735120c8a300b1754e7b3ef793c612ca8" translate="yes" xml:space="preserve">
          <source>Send a message to the main process synchronously via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; 을 통해 동 기적으로 기본 프로세스에 메시지를 보내면 임의의 인수를 보낼 수도 있습니다. 인수는 내부적으로 JSON으로 직렬화되므로 함수 또는 프로토 타입 체인이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3e29a5fc7e4c5a211355753ef9eef4b1b3d04a1e" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to renderer process via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. Arguments will be serialized in JSON internally and hence no functions or prototype chain will be included.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; 을 통해 렌더러 프로세스에 비동기 메시지를 보내면 임의의 인수를 보낼 수도 있습니다. 인수는 내부적으로 JSON으로 직렬화되므로 함수 또는 프로토 타입 체인이 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7fb72802b0104119949d9f29b532cb6e097c6286" translate="yes" xml:space="preserve">
          <source>Send an asynchronous message to renderer process via &lt;code&gt;channel&lt;/code&gt;, you can also send arbitrary arguments. The renderer process can handle the message by listening to the &lt;code&gt;channel&lt;/code&gt; event with the &lt;a href=&quot;ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; 을 통해 렌더러 프로세스에 비동기 메시지를 보내면 임의의 인수를 보낼 수도 있습니다. 렌더러 프로세스는 &lt;a href=&quot;ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt; 모듈로 &lt;code&gt;channel&lt;/code&gt; 이벤트를 청취하여 메시지를 처리 ​​할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="921d99cf1d942e986d0ed0e985fc309e73536b31" translate="yes" xml:space="preserve">
          <source>Send given command to the debugging target.</source>
          <target state="translated">주어진 명령을 디버깅 대상으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="f0662ea4ce2ba05b7f07ad1199c4b10caa58025d" translate="yes" xml:space="preserve">
          <source>Sending Messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d2829e520d5866a20eed4c2a57a504779d223f" translate="yes" xml:space="preserve">
          <source>Sends a message to a window with &lt;code&gt;windowid&lt;/code&gt; via &lt;code&gt;channel&lt;/code&gt;.</source>
          <target state="translated">와 창으로 메시지를 보냅니다 &lt;code&gt;windowid&lt;/code&gt; 를 통해 &lt;code&gt;channel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b27c31ff5ce037a37f2b25c4b494e32bfda85239" translate="yes" xml:space="preserve">
          <source>Sends a message to the child window with the specified origin or &lt;code&gt;*&lt;/code&gt; for no origin preference.</source>
          <target state="translated">지정된 원점 또는 원점 환경 설정이없는 &lt;code&gt;*&lt;/code&gt; 를 사용하여 하위 창에 메시지를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="719b8fdd50b4650b966a5dd46c6c08f9d1623a9c" translate="yes" xml:space="preserve">
          <source>Sends a message to the parent window with the specified origin or &lt;code&gt;*&lt;/code&gt; for no origin preference.</source>
          <target state="translated">지정된 원산지 또는 원산지 기본 설정이없는 &lt;code&gt;*&lt;/code&gt; 를 사용하여 부모 창으로 메시지를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="7a3b9453a9588f935f3b836cdd322a7738117100" translate="yes" xml:space="preserve">
          <source>Sends a request to get all cookies matching &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(error, cookies)&lt;/code&gt; on complete.</source>
          <target state="translated">일치하는 모든 쿠키를 얻을 수있는 요청 전송 &lt;code&gt;filter&lt;/code&gt; , &lt;code&gt;callback&lt;/code&gt; 호출 될 &lt;code&gt;callback(error, cookies)&lt;/code&gt; 전체에.</target>
        </trans-unit>
        <trans-unit id="d3ce1f777ecc3e7a8a13bbb32eb04f0541d80eee" translate="yes" xml:space="preserve">
          <source>Sends a request to get current zoom factor, the &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(zoomFactor)&lt;/code&gt;.</source>
          <target state="translated">현재 확대 / 축소 비율을 가져 오기위한 요청을 보냅니다. &lt;code&gt;callback&lt;/code&gt; 은 &lt;code&gt;callback(zoomFactor)&lt;/code&gt; 로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="6c2c4588d04b3b811a73cf7f809fde89008cf374" translate="yes" xml:space="preserve">
          <source>Sends a request to get current zoom level, the &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(zoomLevel)&lt;/code&gt;.</source>
          <target state="translated">현재 확대 / 축소 수준을 가져 오기위한 요청을 보냅니다. &lt;code&gt;callback&lt;/code&gt; 은 &lt;code&gt;callback(zoomLevel)&lt;/code&gt; 으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="5d9b8e7c7636eb24670712f8a2b8d94e29c24623" translate="yes" xml:space="preserve">
          <source>Sends an input &lt;code&gt;event&lt;/code&gt; to the page.</source>
          <target state="translated">입력 &lt;code&gt;event&lt;/code&gt; 를 페이지로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="84c5cda6527732e60e0c4dc69e60c71e5fdce3db" translate="yes" xml:space="preserve">
          <source>Sends an input &lt;code&gt;event&lt;/code&gt; to the page. &lt;strong&gt;Note:&lt;/strong&gt; The &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; containing the contents needs to be focused for &lt;code&gt;sendInputEvent()&lt;/code&gt; to work.</source>
          <target state="translated">입력 &lt;code&gt;event&lt;/code&gt; 를 페이지로 보냅니다 . &lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;sendInputEvent()&lt;/code&gt; 가 작동 하려면 내용이 포함 된 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; 에&lt;/a&gt; 포커스를 두어야 합니다.</target>
        </trans-unit>
        <trans-unit id="c5cfbdf37308003d0b30614f7029c3869dcfa23a" translate="yes" xml:space="preserve">
          <source>Sends the &lt;code&gt;action&lt;/code&gt; to the first responder of application. This is used for emulating default macOS menu behaviors. Usually you would just use the &lt;a href=&quot;menu-item#roles&quot;&gt;&lt;code&gt;role&lt;/code&gt;&lt;/a&gt; property of a &lt;a href=&quot;menu-item&quot;&gt;&lt;code&gt;MenuItem&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 를 애플리케이션의 첫 번째 응답자에게 보냅니다 . 기본 macOS 메뉴 비헤이비어를 에뮬레이션하는 데 사용됩니다. 일반적으로 &lt;a href=&quot;menu-item&quot;&gt; &lt;code&gt;MenuItem&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;menu-item#roles&quot;&gt; &lt;code&gt;role&lt;/code&gt; &lt;/a&gt; 속성 만 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="d92d32aa796cabbd87cf999a10e42b89f9c87024" translate="yes" xml:space="preserve">
          <source>Sends the last chunk of the request data. Subsequent write or end operations will not be allowed. The &lt;code&gt;finish&lt;/code&gt; event is emitted just after the end operation.</source>
          <target state="translated">요청 데이터의 마지막 청크를 보냅니다. 후속 쓰기 또는 종료 작업은 허용되지 않습니다. &lt;code&gt;finish&lt;/code&gt; 이벤트는 단지 최종 작업 후 배출된다.</target>
        </trans-unit>
        <trans-unit id="a75ee8482a2c82952f1802a71a9ee0d0e4f4ff43" translate="yes" xml:space="preserve">
          <source>Serbian</source>
          <target state="translated">Serbian</target>
        </trans-unit>
        <trans-unit id="427973e4372d64bc21861e671a9618503e480670" translate="yes" xml:space="preserve">
          <source>Serbo-Croatian</source>
          <target state="translated">Serbo-Croatian</target>
        </trans-unit>
        <trans-unit id="cc48b6b6f41313fcbf7e6d28144f8119b84edc00" translate="yes" xml:space="preserve">
          <source>Sesotho</source>
          <target state="translated">Sesotho</target>
        </trans-unit>
        <trans-unit id="615b44ac8bf6fbdb390f334c49d76f2b76637dea" translate="yes" xml:space="preserve">
          <source>Set &lt;code&gt;CLANG_REVISION&lt;/code&gt; in &lt;code&gt;script/update-clang.sh&lt;/code&gt; to match the version Chromium is using.</source>
          <target state="translated">설정 &lt;code&gt;CLANG_REVISION&lt;/code&gt; 의 &lt;code&gt;script/update-clang.sh&lt;/code&gt; 크롬이 사용하는 버전과 일치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87b775ea6e988edfb5d895216c1a7c32c4c89b62" translate="yes" xml:space="preserve">
          <source>Set a custom locale.</source>
          <target state="translated">사용자 정의 로캘을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="e48b662602383e1a650c7f01c1eb6efd6f6008d8" translate="yes" xml:space="preserve">
          <source>Set an extra parameter to be sent with the crash report. The values specified here will be sent in addition to any values set via the &lt;code&gt;extra&lt;/code&gt; option when &lt;code&gt;start&lt;/code&gt; was called. This API is only available on macOS, if you need to add/update extra parameters on Linux and Windows after your first call to &lt;code&gt;start&lt;/code&gt; you can call &lt;code&gt;start&lt;/code&gt; again with the updated &lt;code&gt;extra&lt;/code&gt; options.</source>
          <target state="translated">충돌 보고서와 함께 보낼 추가 매개 변수를 설정하십시오. 여기에 지정된 값은 &lt;code&gt;start&lt;/code&gt; 이 호출 될 때 &lt;code&gt;extra&lt;/code&gt; 옵션을 통해 설정된 모든 값과 함께 전송됩니다 . 이 API는 추가해야하는 경우 / 첫 번째 호출 후 Linux 및 Windows에서 업데이트를 추가 매개 변수는 다음의 제품에, 맥 OS에서만 사용할 수 있습니다 &lt;code&gt;start&lt;/code&gt; 당신이 호출 할 수 있습니다 &lt;code&gt;start&lt;/code&gt; 업데이트 다시 &lt;code&gt;extra&lt;/code&gt; 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="02839a2f233f11d3f8cc0847ac0196c5644bb103" translate="yes" xml:space="preserve">
          <source>Set guest page muted.</source>
          <target state="translated">손님 페이지를 음소거했습니다.</target>
        </trans-unit>
        <trans-unit id="cd0e769eb096f3a6f326481bc15a4201393bc940" translate="yes" xml:space="preserve">
          <source>Set some breakpoints in &lt;code&gt;main.js&lt;/code&gt;, and start debugging in the &lt;a href=&quot;https://code.visualstudio.com/docs/editor/debugging&quot;&gt;Debug View&lt;/a&gt;. You should be able to hit the breakpoints.</source>
          <target state="translated">&lt;code&gt;main.js&lt;/code&gt; 에 중단 점을 설정 하고 &lt;a href=&quot;https://code.visualstudio.com/docs/editor/debugging&quot;&gt;디버그보기&lt;/a&gt; 에서 디버깅을 시작하십시오 . 중단 점에 도달 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="5b471c6934637140581395be23de584b9edaf293" translate="yes" xml:space="preserve">
          <source>Set the &lt;code&gt;MinimumSDKVersion&lt;/code&gt; to &lt;code&gt;10.10&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MinimumSDKVersion&lt;/code&gt; 을 &lt;code&gt;10.10&lt;/code&gt; 으로 설정</target>
        </trans-unit>
        <trans-unit id="92cf2be8dfdc293ae7fa03b35e87fb813c43bbf2" translate="yes" xml:space="preserve">
          <source>Set the about panel options. This will override the values defined in the app's &lt;code&gt;.plist&lt;/code&gt; file. See the &lt;a href=&quot;https://developer.apple.com/reference/appkit/nsapplication/1428479-orderfrontstandardaboutpanelwith?language=objc&quot;&gt;Apple docs&lt;/a&gt; for more details.</source>
          <target state="translated">정보 패널 옵션을 설정하십시오. 앱의 &lt;code&gt;.plist&lt;/code&gt; 파일에 정의 된 값보다 우선 합니다. 자세한 내용은 &lt;a href=&quot;https://developer.apple.com/reference/appkit/nsapplication/1428479-orderfrontstandardaboutpanelwith?language=objc&quot;&gt;Apple 문서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1ec7d7721ce717d1561dc072f65cf16a915a88ba" translate="yes" xml:space="preserve">
          <source>Set the app's login item settings.</source>
          <target state="translated">앱의 로그인 항목 설정을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="6e0a08b6fcf27bd16fc47e3ef22595040af25803" translate="yes" xml:space="preserve">
          <source>Set the content security policy of the isolated world.</source>
          <target state="translated">고립 된 세계의 콘텐츠 보안 정책을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="bd569f6a9da9e1c91aeb48048ab5d92a09399a6f" translate="yes" xml:space="preserve">
          <source>Set the following Environment Variables:</source>
          <target state="translated">다음 환경 변수를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b2cc131d67a290a6d88094b91656eebfcc131d4f" translate="yes" xml:space="preserve">
          <source>Set the name of the isolated world. Useful in devtools.</source>
          <target state="translated">고립 된 세계의 이름을 설정하십시오. devtools에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="9194cdfaef43f6c163697328915dd5a8291cc957" translate="yes" xml:space="preserve">
          <source>Set the security origin of the isolated world.</source>
          <target state="translated">고립 된 세계의 보안 원점을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="9b1ca9457899c08b346660869529f5a371273cf0" translate="yes" xml:space="preserve">
          <source>Set the size of the page. This is only supported for &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; guest contents.</source>
          <target state="translated">페이지 크기를 설정하십시오. 이것은 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 게스트 컨텐츠 에만 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="b71a3de4c9539412238109eeef9747c83cba89aa" translate="yes" xml:space="preserve">
          <source>Set the value of &lt;code&gt;key&lt;/code&gt; in &lt;code&gt;NSUserDefaults&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NSUserDefaults&lt;/code&gt; 에서 &lt;code&gt;key&lt;/code&gt; 값을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="46619168d5abf2b87e0a02117f598273b464f4d8" translate="yes" xml:space="preserve">
          <source>Set this string as &lt;code&gt;_NT_SYMBOL_PATH&lt;/code&gt; in the environment, using the Windbg menus, or by typing the &lt;code&gt;.sympath&lt;/code&gt; command. If you would like to get symbols from Microsoft's symbol server as well, you should list that first:</source>
          <target state="translated">Windbg 메뉴를 사용하거나 &lt;code&gt;.sympath&lt;/code&gt; 명령 을 입력하여 환경 에서이 문자열을 &lt;code&gt;_NT_SYMBOL_PATH&lt;/code&gt; 로 설정하십시오 . Microsoft의 심볼 서버에서도 심볼을 얻으려면 먼저 해당 심볼을 나열해야합니다.</target>
        </trans-unit>
        <trans-unit id="990794dde4fce604b77700bf70eb7956e7fc2854" translate="yes" xml:space="preserve">
          <source>Set this to the value to be returned in a synchronous message.</source>
          <target state="translated">동기 메시지에 리턴 될 값으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="3e8dc4c5eabfddf9a7c13af8083300ff171e8192" translate="yes" xml:space="preserve">
          <source>Set your tokens and environment variables</source>
          <target state="translated">토큰 및 환경 변수 설정</target>
        </trans-unit>
        <trans-unit id="fcabe3320d4d2fe8250e6fd9149fd060d6a02215" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;menu&lt;/code&gt; as the application menu on macOS. On Windows and Linux, the &lt;code&gt;menu&lt;/code&gt; will be set as each window's top menu.</source>
          <target state="translated">macOS에서 메뉴를 응용 프로그램 &lt;code&gt;menu&lt;/code&gt; 로 설정 합니다 . Windows 및 Linux에서 &lt;code&gt;menu&lt;/code&gt; 는 각 창의 최상위 메뉴로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="44ee768780ac31f433d81cfa60398b836e99b866" translate="yes" xml:space="preserve">
          <source>Sets &lt;code&gt;parent&lt;/code&gt; as current window's parent window, passing &lt;code&gt;null&lt;/code&gt; will turn current window into a top-level window.</source>
          <target state="translated">&lt;code&gt;parent&lt;/code&gt; 를 현재 창의 부모 창으로 설정합니다. &lt;code&gt;null&lt;/code&gt; 을 전달 하면 현재 창이 최상위 창으로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="e53cc5934631e24bf519cbb45bc8d436a1baa394" translate="yes" xml:space="preserve">
          <source>Sets a 16 x 16 pixel overlay onto the current taskbar icon, usually used to convey some sort of application status or to passively notify the user.</source>
          <target state="translated">현재 작업 표시 줄 아이콘에 16 x 16 픽셀 오버레이를 설정합니다. 일반적으로 일종의 응용 프로그램 상태를 전달하거나 수동으로 사용자에게 알리는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="69b3972da4258b12b92f71f96e53814c40885eb9" translate="yes" xml:space="preserve">
          <source>Sets a cookie with &lt;code&gt;details&lt;/code&gt;, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(error)&lt;/code&gt; on complete.</source>
          <target state="translated">쿠키를 &lt;code&gt;details&lt;/code&gt; 로 설정합니다 . &lt;code&gt;callback&lt;/code&gt; 은 &lt;code&gt;callback(error)&lt;/code&gt; 과 함께 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="d73f3ad6b7dcc615503667fa14af3e92b810d62a" translate="yes" xml:space="preserve">
          <source>Sets a provider for spell checking in input fields and text areas.</source>
          <target state="translated">입력 필드 및 텍스트 영역에서 맞춤법 검사를위한 공급자를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ff1039c3d538d298053860a1181740831c87486f" translate="yes" xml:space="preserve">
          <source>Sets download saving directory. By default, the download directory will be the &lt;code&gt;Downloads&lt;/code&gt; under the respective app folder.</source>
          <target state="translated">다운로드 저장 디렉토리를 설정합니다. 기본적으로 다운로드 디렉토리는 해당 앱 폴더 아래의 &lt;code&gt;Downloads&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d53db72c06f060c7bdb6fb5f0a84889913b252f8" translate="yes" xml:space="preserve">
          <source>Sets or removes a custom Jump List for the application, and returns one of the following strings:</source>
          <target state="translated">응용 프로그램의 사용자 정의 점프 목록을 설정하거나 제거하고 다음 문자열 중 하나를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a82dd772291cfd7bec76d72317acf8bc124765ba" translate="yes" xml:space="preserve">
          <source>Sets progress value in progress bar. Valid range is [0, 1.0].</source>
          <target state="translated">진행률 표시 줄에 진행률 값을 설정합니다. 유효한 범위는 [0, 1.0]입니다.</target>
        </trans-unit>
        <trans-unit id="290783aef4e7c376c84c825743a28d792faad7b5" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;image&lt;/code&gt; associated with this dock icon.</source>
          <target state="translated">이 독 아이콘과 관련된 &lt;code&gt;image&lt;/code&gt; 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="251fc90db70cb7037b10cbe3f92c3f4b138d7122" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;image&lt;/code&gt; associated with this tray icon when pressed on macOS.</source>
          <target state="translated">macOS에서 누를 때이 트레이 아이콘과 관련된 &lt;code&gt;image&lt;/code&gt; 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="50e0143fe4c1102c9bf0e8e010a67500e7b42631" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;image&lt;/code&gt; associated with this tray icon.</source>
          <target state="translated">이 트레이 아이콘과 관련된 &lt;code&gt;image&lt;/code&gt; 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="6905ec900101f6e4a3f2037a93b01422b34ddb71" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;item&lt;/code&gt; as dragging item for current drag-drop operation, &lt;code&gt;file&lt;/code&gt; is the absolute path of the file to be dragged, and &lt;code&gt;icon&lt;/code&gt; is the image showing under the cursor when dragging.</source>
          <target state="translated">항목을 현재 끌어서 놓기 작업의 끌기 &lt;code&gt;item&lt;/code&gt; 으로 설정하고 , &lt;code&gt;file&lt;/code&gt; 은 끌 파일의 절대 경로이며, &lt;code&gt;icon&lt;/code&gt; 은 끌 때 커서 아래에 표시되는 이미지입니다.</target>
        </trans-unit>
        <trans-unit id="23f9d7b3d7555797eb9ab914db969433a4ad54d8" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;menu&lt;/code&gt; as the window's menu bar, setting it to &lt;code&gt;null&lt;/code&gt; will remove the menu bar.</source>
          <target state="translated">세트 &lt;code&gt;menu&lt;/code&gt; 로 설정, 윈도우의 메뉴 바 등을 &lt;code&gt;null&lt;/code&gt; 메뉴 표시 줄을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="7c137b86904d3e1181cfb7ce1cb4e0f286f7e116" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;path&lt;/code&gt; of the pepper flash plugin.</source>
          <target state="translated">페퍼 플래시 플러그인 의 &lt;code&gt;path&lt;/code&gt; 를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="279ab3b4dac0ea37dba9e40f9865562ac862180e" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;url&lt;/code&gt; and initialize the auto updater.</source>
          <target state="translated">세트 &lt;code&gt;url&lt;/code&gt; 하고 자동 업데이트 프로그램을 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="411613b1ec44176c1d91a8f311a52c06789cbab1" translate="yes" xml:space="preserve">
          <source>Sets the &lt;code&gt;version&lt;/code&gt; of the pepper flash plugin.</source>
          <target state="translated">페퍼 플래시 플러그인 의 &lt;code&gt;version&lt;/code&gt; 을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="478045962ca72fedb01b6d52b1c224ce8054eb20" translate="yes" xml:space="preserve">
          <source>Sets the application's &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Carbon/Conceptual/customizing_docktile/concepts/dockconcepts.html#//apple_ref/doc/uid/TP30000986-CH2-TPXREF103&quot;&gt;dock menu&lt;/a&gt;.</source>
          <target state="translated">응용 프로그램의 &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/Carbon/Conceptual/customizing_docktile/concepts/dockconcepts.html#//apple_ref/doc/uid/TP30000986-CH2-TPXREF103&quot;&gt;도크 메뉴를&lt;/a&gt; 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="6a17957d2f10c933c37aa11da3b5570f08602910" translate="yes" xml:space="preserve">
          <source>Sets the certificate verify proc for &lt;code&gt;session&lt;/code&gt;, the &lt;code&gt;proc&lt;/code&gt; will be called with &lt;code&gt;proc(request, callback)&lt;/code&gt; whenever a server certificate verification is requested. Calling &lt;code&gt;callback(0)&lt;/code&gt; accepts the certificate, calling &lt;code&gt;callback(-2)&lt;/code&gt; rejects it.</source>
          <target state="translated">인증서에 대한 PROC 확인 설정합니다 &lt;code&gt;session&lt;/code&gt; 의 &lt;code&gt;proc&lt;/code&gt; 호출됩니다 &lt;code&gt;proc(request, callback)&lt;/code&gt; 서버 인증서 확인이 요청 될 때마다. 호출 &lt;code&gt;callback(0)&lt;/code&gt; 호출, 인증서를 받아 &lt;code&gt;callback(-2)&lt;/code&gt; 를 거부합니다.</target>
        </trans-unit>
        <trans-unit id="7e8e6665350130532caaa387575f5aeeb432cdb4" translate="yes" xml:space="preserve">
          <source>Sets the context menu for this icon.</source>
          <target state="translated">이 아이콘의 컨텍스트 메뉴를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="47060fc887d88d145b8ae1672076595718bcf2a9" translate="yes" xml:space="preserve">
          <source>Sets the counter badge for current app. Setting the count to &lt;code&gt;0&lt;/code&gt; will hide the badge.</source>
          <target state="translated">현재 앱의 카운터 배지를 설정합니다. 카운트를 &lt;code&gt;0&lt;/code&gt; 으로 설정하면 배지가 숨겨집니다.</target>
        </trans-unit>
        <trans-unit id="b22db1f55140252f5b6f27842096a7127c3235d4" translate="yes" xml:space="preserve">
          <source>Sets the file descriptor soft limit to &lt;code&gt;maxDescriptors&lt;/code&gt; or the OS hard limit, whichever is lower for the current process.</source>
          <target state="translated">파일 디스크립터 소프트 한계를 &lt;code&gt;maxDescriptors&lt;/code&gt; 또는 OS 하드 한계 중 현재 프로세스에 대해 더 낮은 값으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="84e76ee6dd09d76ffebb057cee2549f82c568b6e" translate="yes" xml:space="preserve">
          <source>Sets the handler which can be used to respond to permission requests for the &lt;code&gt;session&lt;/code&gt;. Calling &lt;code&gt;callback(true)&lt;/code&gt; will allow the permission and &lt;code&gt;callback(false)&lt;/code&gt; will reject it. To clear the handler, call &lt;code&gt;setPermissionRequestHandler(null)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 대한 권한 요청에 응답하는 데 사용할 수있는 핸들러를 설정합니다 . &lt;code&gt;callback(true)&lt;/code&gt; 호출 하면 권한이 허용되고 &lt;code&gt;callback(false)&lt;/code&gt; 은 권한 을 거부합니다. 핸들러를 지우려면 &lt;code&gt;setPermissionRequestHandler(null)&lt;/code&gt; 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="160238f1004dace71015337d0fa49ada48136e08" translate="yes" xml:space="preserve">
          <source>Sets the hover text for this tray icon.</source>
          <target state="translated">이 트레이 아이콘의 호버 텍스트를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f620ce244e19e7037a80498c69e715898a04054c" translate="yes" xml:space="preserve">
          <source>Sets the maximum and minimum layout-based (i.e. non-visual) zoom level.</source>
          <target state="translated">최대 및 최소 레이아웃 기반 (예 : 비 시각적) 줌 레벨을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="1e70c9ccdb495c7ec470dc0b177457079b9a31e3" translate="yes" xml:space="preserve">
          <source>Sets the maximum and minimum pinch-to-zoom level.</source>
          <target state="translated">최대 및 최소 핀치 투 줌 레벨을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4acaadb2ba73fce19695ad12402e5934ae8b4bbe" translate="yes" xml:space="preserve">
          <source>Sets the maximum size of window to &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="translated">창의 최대 크기를 &lt;code&gt;width&lt;/code&gt; 및 &lt;code&gt;height&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="ec44967d4662b91c9b3f114ee8dbd993031b1517" translate="yes" xml:space="preserve">
          <source>Sets the minimum size of window to &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt;.</source>
          <target state="translated">창의 최소 크기를 &lt;code&gt;width&lt;/code&gt; 및 &lt;code&gt;height&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="02185a3b76590596fc0a2b0e9e046e9d1cbf98bc" translate="yes" xml:space="preserve">
          <source>Sets the opacity of the window. On Linux does nothing.</source>
          <target state="translated">창의 불투명도를 설정합니다. 리눅스에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2d3956e4e5ad14d58c86116c39a15d30905b01aa" translate="yes" xml:space="preserve">
          <source>Sets the pathname of the file the window represents, and the icon of the file will show in window's title bar.</source>
          <target state="translated">윈도우가 나타내는 파일의 경로 이름을 설정하면 파일의 아이콘이 윈도우의 제목 표시 줄에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c281609f460bb0635f2bc8f3787ceb433cbb6792" translate="yes" xml:space="preserve">
          <source>Sets the properties for the window's taskbar button.</source>
          <target state="translated">창의 작업 표시 줄 버튼에 대한 속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7c8c58c282aea9b22e2a024b2110f2eabc609253" translate="yes" xml:space="preserve">
          <source>Sets the proxy settings.</source>
          <target state="translated">프록시 설정을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="51e0ad3eb7d3f90dd1e90c0d2a66935e2de393e2" translate="yes" xml:space="preserve">
          <source>Sets the referrer URL for the guest page.</source>
          <target state="translated">게스트 페이지의 리퍼러 URL을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="ba636a58b5e807db3627d3269957da72f7b802b3" translate="yes" xml:space="preserve">
          <source>Sets the region of the window to show as the thumbnail image displayed when hovering over the window in the taskbar. You can reset the thumbnail to be the entire window by specifying an empty region: &lt;code&gt;{x: 0, y: 0, width: 0, height: 0}&lt;/code&gt;.</source>
          <target state="translated">작업 표시 줄의 창 위로 마우스를 가져갈 때 표시되는 축소판 이미지로 표시 할 창의 영역을 설정합니다. 빈 영역 &lt;code&gt;{x: 0, y: 0, width: 0, height: 0}&lt;/code&gt; 을 지정하여 축소판을 전체 창으로 재설정 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="222d29f00c5b8fe41a83a99e0a4aaab642809d3a" translate="yes" xml:space="preserve">
          <source>Sets the session used by the page. If &lt;code&gt;partition&lt;/code&gt; starts with &lt;code&gt;persist:&lt;/code&gt;, the page will use a persistent session available to all pages in the app with the same &lt;code&gt;partition&lt;/code&gt;. if there is no &lt;code&gt;persist:&lt;/code&gt; prefix, the page will use an in-memory session. By assigning the same &lt;code&gt;partition&lt;/code&gt;, multiple pages can share the same session. If the &lt;code&gt;partition&lt;/code&gt; is unset then default session of the app will be used.</source>
          <target state="translated">페이지에서 사용하는 세션을 설정합니다. 경우 &lt;code&gt;partition&lt;/code&gt; 과 시작이 &lt;code&gt;persist:&lt;/code&gt; 페이지가 같은과 응용 프로그램의 모든 페이지에 사용할 수있는 지속적인 세션을 사용하는 &lt;code&gt;partition&lt;/code&gt; . &lt;code&gt;persist:&lt;/code&gt; 접두사 가 없으면 페이지는 메모리 내 세션을 사용합니다. 동일한 &lt;code&gt;partition&lt;/code&gt; 을 지정하면 여러 페이지가 동일한 세션을 공유 할 수 있습니다. &lt;code&gt;partition&lt;/code&gt; 이 설정되어 있지 않으면 앱의 기본 세션이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="aa4871ac41dc8e0cc5d8a79634f3e4c8c2225c26" translate="yes" xml:space="preserve">
          <source>Sets the string to be displayed in the dock&amp;rsquo;s badging area.</source>
          <target state="translated">독의 배지 영역에 표시 할 문자열을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4ed70b5602ed50380f332352a448a5d46ca14626" translate="yes" xml:space="preserve">
          <source>Sets the title displayed aside of the tray icon in the status bar (Support ANSI colors).</source>
          <target state="translated">상태 표시 줄에서 트레이 아이콘 옆에 표시되는 제목을 설정합니다 (ANSI 색상 지원).</target>
        </trans-unit>
        <trans-unit id="ad1d0ca05bd8b312ef122cdef7c9c56ba92bfd82" translate="yes" xml:space="preserve">
          <source>Sets the toolTip that is displayed when hovering over the window thumbnail in the taskbar.</source>
          <target state="translated">작업 표시 줄의 창 축소판 위에 마우스를 놓을 때 표시되는 도구 설명을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f1fed9386060f627fae88f6fd5ff6df70a290474" translate="yes" xml:space="preserve">
          <source>Sets the touchBar layout for the current window. Specifying &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt; clears the touch bar. This method only has an effect if the machine has a touch bar and is running on macOS 10.12.1+.</source>
          <target state="translated">현재 창의 터치 바 레이아웃을 설정합니다. &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt; 를 지정 하면 터치 바가 지워집니다. 이 방법은 컴퓨터에 터치 바가 있고 macOS 10.12.1 이상에서 실행중인 경우에만 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd49171152fe57bd3038e165f32fc1c7c0d42709" translate="yes" xml:space="preserve">
          <source>Sets the user agent for the guest page before the page is navigated to. Once the page is loaded, use the &lt;code&gt;setUserAgent&lt;/code&gt; method to change the user agent.</source>
          <target state="translated">페이지를 탐색하기 전에 게스트 페이지의 사용자 에이전트를 설정합니다. 페이지가로드되면 &lt;code&gt;setUserAgent&lt;/code&gt; 메소드를 사용하여 사용자 에이전트를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="81370e69987ebdde392e760a63b1068c9e8874db" translate="yes" xml:space="preserve">
          <source>Sets when the tray's icon background becomes highlighted (in blue).</source>
          <target state="translated">트레이 아이콘 배경이 강조 표시 될 때 설정합니다 (파란색).</target>
        </trans-unit>
        <trans-unit id="fc658c9234d2127d992372efec1e104afb6c25d5" translate="yes" xml:space="preserve">
          <source>Sets whether the maximize/zoom window button toggles fullscreen mode or maximizes the window.</source>
          <target state="translated">창 최대화 / 확대 / 축소 단추가 전체 화면 모드를 전환하거나 창을 최대화할지 여부를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="60cbb16f01710677c4aca8ab228fc78a8b5a4f30" translate="yes" xml:space="preserve">
          <source>Sets whether the menu bar should be visible. If the menu bar is auto-hide, users can still bring up the menu bar by pressing the single &lt;code&gt;Alt&lt;/code&gt; key.</source>
          <target state="translated">메뉴 표시 줄을 표시할지 여부를 설정합니다. 메뉴 막대가 자동 숨기기 인 경우 사용자는 단일 &lt;code&gt;Alt&lt;/code&gt; 키를 눌러 메뉴 막대를 계속 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="29572ab350834fc7ed97067a2571ca0cf5d07264" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually closed by user. On Linux does nothing.</source>
          <target state="translated">사용자가 창을 수동으로 닫을 수 있는지 여부를 설정합니다. 리눅스에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="937a60be613e0a567f310ec31e8702820020bfc2" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually maximized by user. On Linux does nothing.</source>
          <target state="translated">사용자가 창을 수동으로 최대화 할 수 있는지 여부를 설정합니다. 리눅스에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1e08d12f4202c84cf190f1e4b2b3f89a182a8e3c" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually minimized by user. On Linux does nothing.</source>
          <target state="translated">사용자가 창을 수동으로 최소화 할 수 있는지 여부를 설정합니다. 리눅스에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bc46361f979c4d9608eacf60c091b8f13224a076" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be manually resized by user.</source>
          <target state="translated">사용자가 창 크기를 수동으로 조정할 수 있는지 여부를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="0ee42db3c183bd619c91435b2e71bbd6c1476421" translate="yes" xml:space="preserve">
          <source>Sets whether the window can be moved by user. On Linux does nothing.</source>
          <target state="translated">사용자가 창을 이동할 수 있는지 여부를 설정합니다. 리눅스에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="660351dc0ff01662151be83ecefa7781c7d7ea1e" translate="yes" xml:space="preserve">
          <source>Sets whether the window menu bar should hide itself automatically. Once set the menu bar will only show when users press the single &lt;code&gt;Alt&lt;/code&gt; key.</source>
          <target state="translated">창 메뉴 표시 줄이 자동으로 숨겨 지도록 설정합니다. 일단 설정되면 메뉴 막대는 사용자가 단일 &lt;code&gt;Alt&lt;/code&gt; 키를 누를 때만 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="abdc140d5edc99f9aeb4494edf72d927570abbf0" translate="yes" xml:space="preserve">
          <source>Sets whether the window should be in fullscreen mode.</source>
          <target state="translated">창이 전체 화면 모드 여야하는지 여부를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="5cacce487fa9cb3032791e9ea0c0822f8d560079" translate="yes" xml:space="preserve">
          <source>Sets whether the window should be visible on all workspaces.</source>
          <target state="translated">모든 작업 공간에서 창을 표시할지 여부를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="313834a95379cc46f912f8547ebec8f8298ef2a0" translate="yes" xml:space="preserve">
          <source>Sets whether the window should have a shadow. On Windows and Linux does nothing.</source>
          <target state="translated">창에 그림자가 있어야하는지 여부를 설정합니다. Windows 및 Linux에서는 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5383b5cfd52722f50fe448048159329ed6ee4604" translate="yes" xml:space="preserve">
          <source>Sets whether the window should show always on top of other windows. After setting this, the window is still a normal window, not a toolbox window which can not be focused on.</source>
          <target state="translated">창을 항상 다른 창 위에 표시할지 여부를 설정합니다. 이 설정을 한 후에는 창은 여전히 ​​일반 창이며 초점을 맞출 수없는 도구 상자 창이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="cbb1d7c6f064d9ffaa5f9b140d9b2b956a8a19c3" translate="yes" xml:space="preserve">
          <source>Setting &lt;code&gt;backgroundColor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;backgroundColor&lt;/code&gt; 설정</target>
        </trans-unit>
        <trans-unit id="f9ce609889da174d9c83ea3624c698222b364eb0" translate="yes" xml:space="preserve">
          <source>Setting Breakpoints</source>
          <target state="translated">중단 점 설정</target>
        </trans-unit>
        <trans-unit id="e5547a55fab0d40b3cabc33cae036e7f42cdb37b" translate="yes" xml:space="preserve">
          <source>Setting Menu for Specific Browser Window (&lt;em&gt;Linux&lt;/em&gt;&lt;em&gt;Windows&lt;/em&gt;)</source>
          <target state="translated">특정 브라우저 창에 대한 설정 메뉴 ( &lt;em&gt;Linux &lt;/em&gt;&lt;em&gt;Windows&lt;/em&gt; )</target>
        </trans-unit>
        <trans-unit id="1458460daaa5e87b409b5cb4d401b501e226605c" translate="yes" xml:space="preserve">
          <source>Setting Up Symbol Server in Debugger</source>
          <target state="translated">디버거에서 심볼 서버 설정</target>
        </trans-unit>
        <trans-unit id="e39f7090f23f74e7e9b0ab5052ee54a40828e151" translate="yes" xml:space="preserve">
          <source>Setting the WebRTC IP handling policy allows you to control which IPs are exposed via WebRTC. See &lt;a href=&quot;https://browserleaks.com/webrtc&quot;&gt;BrowserLeaks&lt;/a&gt; for more details.</source>
          <target state="translated">WebRTC IP 처리 정책을 설정하면 WebRTC를 통해 노출되는 IP를 제어 할 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://browserleaks.com/webrtc&quot;&gt;BrowserLeaks&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0eeaecc3151e72805fa15b69d0bf5149e1ecba04" translate="yes" xml:space="preserve">
          <source>Setting up Linux</source>
          <target state="translated">리눅스 설정</target>
        </trans-unit>
        <trans-unit id="3873588638e10cb327083b50714e7c9f69300587" translate="yes" xml:space="preserve">
          <source>Setting up Spectron</source>
          <target state="translated">Spectron 설정</target>
        </trans-unit>
        <trans-unit id="ce37e0462dd2f82f7b7712227358924a5aa8bccd" translate="yes" xml:space="preserve">
          <source>Setting up Windows</source>
          <target state="translated">Windows 설정</target>
        </trans-unit>
        <trans-unit id="9557ea808723c270d45f5c1d9a28bb3fdc5243cc" translate="yes" xml:space="preserve">
          <source>Setting up macOS</source>
          <target state="translated">macOS 설정</target>
        </trans-unit>
        <trans-unit id="b2d64e208a0addb02888d3a43464174bc36ae42c" translate="yes" xml:space="preserve">
          <source>Setting up the Development Environment</source>
          <target state="translated">개발 환경 설정</target>
        </trans-unit>
        <trans-unit id="b983dabe1b76125ab113e4ddaca190ed5fa68275" translate="yes" xml:space="preserve">
          <source>Setting up with WebDriverJs</source>
          <target state="translated">WebDriverJ를 사용하여 설정</target>
        </trans-unit>
        <trans-unit id="5350d8c2b080582c6bfb05a60d35c93a21a16e3c" translate="yes" xml:space="preserve">
          <source>Setting up with WebdriverIO</source>
          <target state="translated">WebdriverIO를 사용하여 설정</target>
        </trans-unit>
        <trans-unit id="d4047b9ccffcd56a081d5fb456adc03f94256ada" translate="yes" xml:space="preserve">
          <source>Setting up your local environment</source>
          <target state="translated">로컬 환경 설정</target>
        </trans-unit>
        <trans-unit id="3a97f965c7c56f962fd374f807c93dd0df8b340b" translate="yes" xml:space="preserve">
          <source>Sheets</source>
          <target state="translated">Sheets</target>
        </trans-unit>
        <trans-unit id="5b84cc8c584f215d33c18b24ad0b89c6c23c5367" translate="yes" xml:space="preserve">
          <source>Shona</source>
          <target state="translated">Shona</target>
        </trans-unit>
        <trans-unit id="7b0d9e595041021fed77c0a4fa8fe16ad22cc27f" translate="yes" xml:space="preserve">
          <source>ShortcutDetails</source>
          <target state="translated">ShortcutDetails</target>
        </trans-unit>
        <trans-unit id="fafa49dd90a16dcbb088bf3792b8b7016d458e25" translate="yes" xml:space="preserve">
          <source>ShortcutDetails Object</source>
          <target state="translated">ShortcutDetails 객체</target>
        </trans-unit>
        <trans-unit id="06417898f90eaf159edbf6f7673bee719a0bb860" translate="yes" xml:space="preserve">
          <source>Shortcuts are registered with the &lt;a href=&quot;global-shortcut&quot;&gt;&lt;code&gt;globalShortcut&lt;/code&gt;&lt;/a&gt; module using the &lt;a href=&quot;global-shortcut#globalshortcutregisteraccelerator-callback&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method, i.e.</source>
          <target state="translated">단축키는 register 메소드를 사용하여 &lt;a href=&quot;global-shortcut&quot;&gt; &lt;code&gt;globalShortcut&lt;/code&gt; &lt;/a&gt; 모듈에 &lt;a href=&quot;global-shortcut#globalshortcutregisteraccelerator-callback&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="c505ab90b458ef9940a43737388d3c6b217987e8" translate="yes" xml:space="preserve">
          <source>Shortcuts within a BrowserWindow</source>
          <target state="translated">BrowserWindow 내의 바로 가기</target>
        </trans-unit>
        <trans-unit id="3eada8d8b3747bc389420c924b29ba54c328d989" translate="yes" xml:space="preserve">
          <source>Show the given file in a file manager. If possible, select the file.</source>
          <target state="translated">주어진 파일을 파일 관리자에 표시하십시오. 가능하면 파일을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="d1238c5b9cb1e67edf1451c77e1ffa426aa90a88" translate="yes" xml:space="preserve">
          <source>Showing window gracefully</source>
          <target state="translated">창을 정상적으로 표시</target>
        </trans-unit>
        <trans-unit id="a17a2ec8a1ae841cdfb4e1b4532e1caaf251acbf" translate="yes" xml:space="preserve">
          <source>Shows a message box, it will block the process until the message box is closed. It returns the index of the clicked button.</source>
          <target state="translated">메시지 상자를 표시합니다. 메시지 상자를 닫을 때까지 프로세스를 차단합니다. 클릭 한 버튼의 인덱스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="18022873b70dca3d65700645d4513ec2ec6dd203" translate="yes" xml:space="preserve">
          <source>Shows and gives focus to the window.</source>
          <target state="translated">창에 초점을 표시하고 제공합니다.</target>
        </trans-unit>
        <trans-unit id="53db27871a1d17480387a6a11639bd53e76f37fc" translate="yes" xml:space="preserve">
          <source>Shows application windows after they were hidden. Does not automatically focus them.</source>
          <target state="translated">숨겨진 응용 프로그램 창을 표시합니다. 자동으로 초점을 맞추지 않습니다.</target>
        </trans-unit>
        <trans-unit id="701512b17e97a60c66e7b50b9cf18aa6e0b6c4f1" translate="yes" xml:space="preserve">
          <source>Shows pop-up dictionary that searches the selected word on the page.</source>
          <target state="translated">페이지에서 선택한 단어를 검색하는 팝업 사전을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="0d822acb95b0144cb7dc2d75727253f5d1253ed8" translate="yes" xml:space="preserve">
          <source>Shows the Windows's crash dialog when Electron crashes.</source>
          <target state="translated">Electron이 충돌 할 때 Windows의 충돌 대화 상자를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="20700e2dcfc17906d5966c2f94b2be9b5f55f286" translate="yes" xml:space="preserve">
          <source>Shows the dock icon.</source>
          <target state="translated">독 아이콘을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="64240689492efc7a3210cdedd1dd2c7fcabf32cb" translate="yes" xml:space="preserve">
          <source>Shows the window but doesn't focus on it.</source>
          <target state="translated">창을 표시하지만 초점을 맞추지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b6fa7b4bd103aa87ee11e6fde910511f6a97fdb0" translate="yes" xml:space="preserve">
          <source>Sign Native Modules</source>
          <target state="translated">네이티브 모듈 서명</target>
        </trans-unit>
        <trans-unit id="9fc8fc0641ff7b8ede4aec2f3a27d76dd5410bd4" translate="yes" xml:space="preserve">
          <source>Sign Your App</source>
          <target state="translated">앱 서명</target>
        </trans-unit>
        <trans-unit id="28f4ea0e1d26a0a9cac047ea787dd3e6d05fb0e7" translate="yes" xml:space="preserve">
          <source>Signing Windows builds</source>
          <target state="translated">Windows 빌드 서명</target>
        </trans-unit>
        <trans-unit id="b02542c655ad3f4ac13c43496f81624184b1225a" translate="yes" xml:space="preserve">
          <source>Signing macOS builds</source>
          <target state="translated">macOS 빌드 서명</target>
        </trans-unit>
        <trans-unit id="625506f52394201963a85ee6b051eb84ae0bb69d" translate="yes" xml:space="preserve">
          <source>Similarly for &lt;code&gt;arm64&lt;/code&gt;, install the following:</source>
          <target state="translated">&lt;code&gt;arm64&lt;/code&gt; 와 유사하게 다음을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="e62bd7a2e139406201417e8042dd2531204a1a6c" translate="yes" xml:space="preserve">
          <source>Simple fullscreen mode emulates the native fullscreen behavior found in versions of Mac OS X prior to Lion (10.7).</source>
          <target state="translated">단순 전체 화면 모드는 Lion (10.7) 이전의 Mac OS X 버전에서 발견 된 기본 전체 화면 동작을 에뮬레이트합니다.</target>
        </trans-unit>
        <trans-unit id="87ee5667fa508301eb8f820026607f3bc3836541" translate="yes" xml:space="preserve">
          <source>Since Chromium is quite a large project, the final linking stage can take quite a few minutes, which makes it hard for development. In order to solve this, Chromium introduced the &quot;component build&quot;, which builds each component as a separate shared library, making linking very quick but sacrificing file size and performance.</source>
          <target state="translated">Chromium은 규모가 큰 프로젝트이므로 최종 연결 단계에는 몇 분이 걸릴 수 있으므로 개발하기가 어렵습니다. 이 문제를 해결하기 위해 Chromium은 &quot;구성 요소 빌드&quot;를 도입했습니다.이 구성 요소는 각 구성 요소를 별도의 공유 라이브러리로 빌드하므로 링크가 매우 빠르지 만 파일 크기와 성능이 저하됩니다.</target>
        </trans-unit>
        <trans-unit id="8047395872e46168268025bd69d79822303df699" translate="yes" xml:space="preserve">
          <source>Since Electron uses Chromium for displaying web pages, Chromium's multi-process architecture is also used. Each web page in Electron runs in its own process, which is called &lt;strong&gt;the renderer process&lt;/strong&gt;.</source>
          <target state="translated">Electron은 웹 페이지를 표시하기 위해 Chromium을 사용하므로 Chromium의 다중 프로세스 아키텍처도 사용됩니다. Electron의 각 웹 페이지는 자체 프로세스에서 실행되며이를 &lt;strong&gt;렌더러 프로세스&lt;/strong&gt; 라고 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="7ff151b3d48273ded92d11ad24b2acd36b4ba43d" translate="yes" xml:space="preserve">
          <source>Since WebViews live in the DOM, they can be created by a script running on your website even if Node.js integration is otherwise disabled.</source>
          <target state="translated">WebView는 DOM에 존재하므로 Node.js 통합이 비활성화되어 있어도 웹 사이트에서 실행되는 스크립트로 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2fa6d77f608edec50cafb0a6541c0208b155cc8b" translate="yes" xml:space="preserve">
          <source>Since a major feature in electron is the ability to run node.js in the renderer process (making it easier to develop desktop applications using web technologies), the sandbox is disabled by electron. This is because most node.js APIs require system access. &lt;code&gt;require()&lt;/code&gt; for example, is not possible without file system permissions, which are not available in a sandboxed environment.</source>
          <target state="translated">전자의 주요 기능은 렌더러 프로세스에서 node.js를 실행하는 기능 (웹 기술을 사용하여 데스크탑 응용 프로그램을보다 쉽게 ​​개발할 수있는 기능)이므로 전자에 의해 샌드 박스가 비활성화됩니다. 대부분의 node.js API에는 시스템 액세스가 필요하기 때문입니다. 예를 들어, 샌드 박스 환경에서는 사용할 수없는 파일 시스템 권한이 없으면 &lt;code&gt;require()&lt;/code&gt; 를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d9383966ac5db425b8c83aa1299a2f850cf72704" translate="yes" xml:space="preserve">
          <source>Since communication between the processes is possible, a renderer process can call upon the main process to perform tasks. Electron comes with a module called &lt;code&gt;remote&lt;/code&gt; that exposes APIs usually only available on the main process. In order to create a &lt;code&gt;BrowserWindow&lt;/code&gt; from a renderer process, we'd use the remote as a middle-man:</source>
          <target state="translated">프로세스 간 통신이 가능하므로 렌더러 프로세스는 기본 프로세스를 호출하여 작업을 수행 할 수 있습니다. Electron에는 일반적으로 주 프로세스에서만 사용할 수있는 API를 제공하는 &lt;code&gt;remote&lt;/code&gt; 라는 모듈이 있습니다. 렌더러 프로세스에서 &lt;code&gt;BrowserWindow&lt;/code&gt; 를 만들려면 리모컨 을 중개인 으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c31559d62f258a908e80f13ee96c49a0297706ff" translate="yes" xml:space="preserve">
          <source>Since rendering untrusted content in electron is still uncharted territory, the APIs exposed to the sandbox preload script should be considered more unstable than the rest of electron APIs, and may have breaking changes to fix security issues.</source>
          <target state="translated">전자에서 신뢰할 수없는 내용을 렌더링하는 것은 여전히 ​​미지의 영역이므로 샌드 박스 사전로드 스크립트에 노출 된 API는 나머지 전자 API보다 불안정한 것으로 간주해야하며 보안 문제를 해결하기 위해 변경 사항이 중단 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ebf894ce3fc4564f248b7389b55e4a853f73a6f" translate="yes" xml:space="preserve">
          <source>Since v0.34.0, Electron allows submitting packaged apps to the Mac App Store (MAS). This guide provides information on: how to submit your app and the limitations of the MAS build.</source>
          <target state="translated">Electron은 v0.34.0부터 패키지 앱을 Mac App Store (MAS)에 제출할 수 있습니다. 이 가이드는 앱 제출 방법 및 MAS 빌드의 제한 사항에 대한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e0330c530209f2358f617c569b6bbdce28505654" translate="yes" xml:space="preserve">
          <source>Sindhi</source>
          <target state="translated">Sindhi</target>
        </trans-unit>
        <trans-unit id="6d5508fa76121a44df1c719d90ac812896b52caf" translate="yes" xml:space="preserve">
          <source>Sinhalese</source>
          <target state="translated">Sinhalese</target>
        </trans-unit>
        <trans-unit id="b7152342a267362add3c0d7f69f720f7a9c76c9e" translate="yes" xml:space="preserve">
          <source>Size</source>
          <target state="translated">Size</target>
        </trans-unit>
        <trans-unit id="0852eb086cfb0b72e55069ef131253e3c1fa0079" translate="yes" xml:space="preserve">
          <source>Size Object</source>
          <target state="translated">크기 객체</target>
        </trans-unit>
        <trans-unit id="d6a8b06eb4898f96a2fc6d5d10dfc35b13982cb6" translate="yes" xml:space="preserve">
          <source>Slovak</source>
          <target state="translated">Slovak</target>
        </trans-unit>
        <trans-unit id="0cd368bf67c2a1142f1a3890e53e4127424e77a4" translate="yes" xml:space="preserve">
          <source>Slovenian</source>
          <target state="translated">Slovenian</target>
        </trans-unit>
        <trans-unit id="9a2625f98c9a48c32c7ca4ab61100678556c7288" translate="yes" xml:space="preserve">
          <source>Small icon</source>
          <target state="translated">작은 아이콘</target>
        </trans-unit>
        <trans-unit id="ade99a9999f491266743ef60204af9fec999a307" translate="yes" xml:space="preserve">
          <source>Snapcraft</source>
          <target state="translated">Snapcraft</target>
        </trans-unit>
        <trans-unit id="85cd2418343c4f3225f8cab6909ac25c19269930" translate="yes" xml:space="preserve">
          <source>Snapcraft Guide (Ubuntu Software Center &amp;amp; More)</source>
          <target state="translated">Snapcraft Guide (우분투 소프트웨어 센터 등)</target>
        </trans-unit>
        <trans-unit id="9942c10fdc570b8e644c4ec7a84cbcbfcd9f04f2" translate="yes" xml:space="preserve">
          <source>Snapcraft is capable of taking an existing &lt;code&gt;.deb&lt;/code&gt; file and turning it into a &lt;code&gt;.snap&lt;/code&gt; file. The creation of a snap is configured using a &lt;code&gt;snapcraft.yaml&lt;/code&gt; file that describes the sources, dependencies, description, and other core building blocks.</source>
          <target state="translated">Snapcraft는 기존 &lt;code&gt;.deb&lt;/code&gt; 파일을 가져 &lt;code&gt;.snap&lt;/code&gt; 파일 로 변환 할 수 있습니다. 스냅 작성은 소스, 종속성, 설명 및 기타 핵심 빌딩 블록을 설명 하는 &lt;code&gt;snapcraft.yaml&lt;/code&gt; 파일을 사용하여 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="e9d1604f0abb6338328027ef31d51bd7dfbbc088" translate="yes" xml:space="preserve">
          <source>So in short, the primary steps are:</source>
          <target state="translated">간단히 말해서 기본 단계는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="688a580feb7e7f568eb9f58a542d2ad9f51f2cfb" translate="yes" xml:space="preserve">
          <source>Software output device</source>
          <target state="translated">소프트웨어 출력 장치</target>
        </trans-unit>
        <trans-unit id="2ed94ff47ed12a08088bd82b2b23088a5ac4cffc" translate="yes" xml:space="preserve">
          <source>Somali</source>
          <target state="translated">Somali</target>
        </trans-unit>
        <trans-unit id="54cb427cf311e299dc022158e6543a8093761d79" translate="yes" xml:space="preserve">
          <source>Some bug in V8 engine may allow malicious code to access the renderer preload APIs, effectively granting full access to the system through the &lt;code&gt;remote&lt;/code&gt; module.</source>
          <target state="translated">V8 엔진의 일부 버그로 인해 악성 코드가 렌더러 사전로드 API에 액세스하여 &lt;code&gt;remote&lt;/code&gt; 모듈을 통해 시스템에 대한 전체 액세스 권한을 효과적으로 부여 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47628a96f6e8e830dce46609d2b995a38ad53ee6" translate="yes" xml:space="preserve">
          <source>Some compilation and linking errors are caused by missing source/object files in the libcc &lt;code&gt;dist&lt;/code&gt;</source>
          <target state="translated">libcc &lt;code&gt;dist&lt;/code&gt; 에 소스 / 오브젝트 파일이 누락되어 일부 컴파일 및 링크 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="197b70ba6a8008b4cd8284d70ac6ac4cdabb89a3" translate="yes" xml:space="preserve">
          <source>Some popular &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;type&lt;/code&gt;s are:</source>
          <target state="translated">인기있는 &lt;code&gt;key&lt;/code&gt; 및 &lt;code&gt;type&lt;/code&gt; 은 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7b37110e5b01350732eac4676af2611966b9ccef" translate="yes" xml:space="preserve">
          <source>Source Code</source>
          <target state="translated">소스 코드</target>
        </trans-unit>
        <trans-unit id="de95723a62c1fc0a018a2398690f4e65f039455b" translate="yes" xml:space="preserve">
          <source>Source Code Directory Structure</source>
          <target state="translated">소스 코드 디렉토리 구조</target>
        </trans-unit>
        <trans-unit id="8df7f1b361b2af42d36011e00d22c0f9891ec0b0" translate="yes" xml:space="preserve">
          <source>Spanish</source>
          <target state="translated">Spanish</target>
        </trans-unit>
        <trans-unit id="6ae3588f0de424b70dc66d7ba808c0edd567776a" translate="yes" xml:space="preserve">
          <source>Spanish (Latin America)</source>
          <target state="translated">스페인어 (라틴 아메리카)</target>
        </trans-unit>
        <trans-unit id="5ccc6278f24a22a631ba4a5e5cc7f1577c6185b9" translate="yes" xml:space="preserve">
          <source>Specifies a script that will be loaded before other scripts run in the guest page. The protocol of script's URL must be either &lt;code&gt;file:&lt;/code&gt; or &lt;code&gt;asar:&lt;/code&gt;, because it will be loaded by &lt;code&gt;require&lt;/code&gt; in guest page under the hood.</source>
          <target state="translated">게스트 페이지에서 다른 스크립트를 실행하기 전에로드 할 스크립트를 지정합니다. 스크립트 URL의 프로토콜은 &lt;code&gt;file:&lt;/code&gt; 또는 &lt;code&gt;asar:&lt;/code&gt; 중 하나 여야 합니다. &lt;code&gt;require&lt;/code&gt; 에 따라 게스트 페이지에서 후드 아래 로로드되기 때문입니다 .</target>
        </trans-unit>
        <trans-unit id="c7be3814d051f68aac332b816a65dc938c0320e0" translate="yes" xml:space="preserve">
          <source>Specifies the flags passed to the Node JS engine. It has to be passed when starting Electron if you want to enable the &lt;code&gt;flags&lt;/code&gt; in the main process.</source>
          <target state="translated">Node JS 엔진에 전달 된 플래그를 지정합니다. 메인 프로세스에서 &lt;code&gt;flags&lt;/code&gt; 를 활성화하려면 Electron을 시작할 때 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c74f74dba1179cb4536444d27537cabff9e5439a" translate="yes" xml:space="preserve">
          <source>Specifies whether the window&amp;rsquo;s document has been edited, and the icon in title bar will become gray when set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">창의 문서가 편집되었는지 여부를 지정하고 &lt;code&gt;true&lt;/code&gt; 로 설정하면 제목 표시 줄의 아이콘이 회색이됩니다 .</target>
        </trans-unit>
        <trans-unit id="9f63e8cd6cf9cc8066c5e76619ab91b82e2b04f2" translate="yes" xml:space="preserve">
          <source>Specify an option with the value of &lt;code&gt;false&lt;/code&gt; to omit it from the registration. An example of registering a privileged scheme, without bypassing Content Security Policy:</source>
          <target state="translated">등록에서 생략하려면 &lt;code&gt;false&lt;/code&gt; 값을 가진 옵션을 지정 하십시오. 콘텐츠 보안 정책을 우회하지 않고 권한있는 체계를 등록하는 예 :</target>
        </trans-unit>
        <trans-unit id="5bd1abd3d894b4f807a4e89a97452fdac984d9b7" translate="yes" xml:space="preserve">
          <source>Spectron</source>
          <target state="translated">Spectron</target>
        </trans-unit>
        <trans-unit id="c3d3af07d6e79183a7c87b53cbd8537d0c48ccb5" translate="yes" xml:space="preserve">
          <source>Squirrel</source>
          <target state="translated">Squirrel</target>
        </trans-unit>
        <trans-unit id="74798804bf02ba616248416fdead7670f76672e4" translate="yes" xml:space="preserve">
          <source>Squirrel is an open-source framework that enables Electron apps to update automatically as new versions are released. See the &lt;a href=&quot;api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; API for info about getting started with Squirrel.</source>
          <target state="translated">Squirrel은 새로운 버전이 출시 될 때 Electron 앱이 자동으로 업데이트되도록하는 오픈 소스 프레임 워크입니다. Squirrel 시작에 대한 정보 는 &lt;a href=&quot;api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; API를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4210cee5eab0b745b002c7f95add76c38ff996e9" translate="yes" xml:space="preserve">
          <source>Stabilization Branches</source>
          <target state="translated">안정화 지점</target>
        </trans-unit>
        <trans-unit id="9f238fde84c8102be7f84a560d0639cae0152ae8" translate="yes" xml:space="preserve">
          <source>Stabilization branches are always either &lt;strong&gt;major&lt;/strong&gt; or &lt;strong&gt;minor&lt;/strong&gt; version lines, and named against the following template &lt;code&gt;$MAJOR-$MINOR-x&lt;/code&gt; e.g. &lt;code&gt;2-0-x&lt;/code&gt;.</source>
          <target state="translated">안정화 브랜치는 항상 &lt;strong&gt;메이저&lt;/strong&gt; 또는 &lt;strong&gt;마이너&lt;/strong&gt; 버전 라인이며 다음 템플릿 &lt;code&gt;$MAJOR-$MINOR-x&lt;/code&gt; 에 대해 이름이 지정됩니다 ( 예 : &lt;code&gt;2-0-x&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="2d99181c503126531951a1d63aacafde75a53b4a" translate="yes" xml:space="preserve">
          <source>Stabilization branches are branches that run parallel to master, taking in only cherry-picked commits that are related to security or stability. These branches are never merged back to master.</source>
          <target state="translated">안정화 브랜치는 마스터와 병렬로 실행되는 보안으로, 보안 또는 안정성과 관련된 체리 선택 커밋 만받습니다. 이 지점은 다시 마스터로 병합되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b84e82591dfd7e3bdc6c7cd680590a9f03472b79" translate="yes" xml:space="preserve">
          <source>Standard Menu Item Actions</source>
          <target state="translated">표준 메뉴 항목 동작</target>
        </trans-unit>
        <trans-unit id="a9a8dccaccbf655647957c75601b588b7da64cf5" translate="yes" xml:space="preserve">
          <source>Standard Menus</source>
          <target state="translated">표준 메뉴</target>
        </trans-unit>
        <trans-unit id="51644d168a94193f3c9c83deeefc4bacb9498973" translate="yes" xml:space="preserve">
          <source>Start accessing a security scoped resource. With this method electron applications that are packaged for the Mac App Store may reach outside their sandbox to access files chosen by the user. See &lt;a href=&quot;https://developer.apple.com/library/content/documentation/Security/Conceptual/AppSandboxDesignGuide/AppSandboxInDepth/AppSandboxInDepth.html#//apple_ref/doc/uid/TP40011183-CH3-SW16&quot;&gt;Apple's documentation&lt;/a&gt; for a description of how this system works.</source>
          <target state="translated">보안 범위의 리소스에 액세스를 시작하십시오. 이 방법을 사용하면 Mac App Store 용으로 패키지 된 전자 응용 프로그램이 샌드 박스 외부에 도달하여 사용자가 선택한 파일에 액세스 할 수 있습니다. 이 시스템의 작동 방식에 대한 설명은 &lt;a href=&quot;https://developer.apple.com/library/content/documentation/Security/Conceptual/AppSandboxDesignGuide/AppSandboxInDepth/AppSandboxInDepth.html#//apple_ref/doc/uid/TP40011183-CH3-SW16&quot;&gt;Apple 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3a7b0c3a0ad3617ee8b08891c922bdf861d9315d" translate="yes" xml:space="preserve">
          <source>Start monitoring on all processes.</source>
          <target state="translated">모든 프로세스에서 모니터링을 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="e99639e9715c1d41ab81462c45be1945467eb2b7" translate="yes" xml:space="preserve">
          <source>Start recording on all processes.</source>
          <target state="translated">모든 프로세스에서 기록을 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="1793221da64d52d98c86212e1cd147064d099076" translate="yes" xml:space="preserve">
          <source>Starts a request to find all matches for the &lt;code&gt;text&lt;/code&gt; in the web page. The result of the request can be obtained by subscribing to &lt;a href=&quot;web-contents#event-found-in-page&quot;&gt;&lt;code&gt;found-in-page&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">웹 페이지에서 &lt;code&gt;text&lt;/code&gt; 와 일치하는 모든 항목을 찾기위한 요청을 시작합니다 . &lt;a href=&quot;web-contents#event-found-in-page&quot;&gt; &lt;code&gt;found-in-page&lt;/code&gt; &lt;/a&gt; 이벤트 를 구독하면 요청 결과를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ceb5a8300c14b98f9fe0d3cb7de4378c0ee4a60" translate="yes" xml:space="preserve">
          <source>Starts a request to find all matches for the &lt;code&gt;text&lt;/code&gt; in the web page. The result of the request can be obtained by subscribing to &lt;a href=&quot;webview-tag#event-found-in-page&quot;&gt;&lt;code&gt;found-in-page&lt;/code&gt;&lt;/a&gt; event.</source>
          <target state="translated">웹 페이지에서 &lt;code&gt;text&lt;/code&gt; 와 일치하는 모든 항목을 찾기위한 요청을 시작합니다 . &lt;a href=&quot;webview-tag#event-found-in-page&quot;&gt; &lt;code&gt;found-in-page&lt;/code&gt; &lt;/a&gt; 이벤트 를 구독하면 요청 결과를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7c428be943bbb7b09e973865c7fa9bd465358ae3" translate="yes" xml:space="preserve">
          <source>Starts gathering information about all available desktop media sources, and calls &lt;code&gt;callback(error, sources)&lt;/code&gt; when finished.</source>
          <target state="translated">사용 가능한 모든 데스크탑 미디어 소스에 대한 정보 수집을 시작하고 완료되면 &lt;code&gt;callback(error, sources)&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="06cbf86e2cce84ea76ae7498035d501154d9a3e3" translate="yes" xml:space="preserve">
          <source>Starts inspecting element at position (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) of guest page.</source>
          <target state="translated">게스트 페이지의 위치 ( &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; ) 에서 요소 검사를 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="7045988b61bc2eb7342e6f56e6add38559fb2a9b" translate="yes" xml:space="preserve">
          <source>Starts inspecting element at position (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;).</source>
          <target state="translated">위치 ( &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; ) 에서 요소 검사를 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="5493530eca13ae2d998698f12402dfdcb7d4b70c" translate="yes" xml:space="preserve">
          <source>Starts or stops flashing the window to attract user's attention.</source>
          <target state="translated">사용자의주의를 끌기 위해 창 깜박임을 시작하거나 중지합니다.</target>
        </trans-unit>
        <trans-unit id="bd117d5ab0c408102a03aa5a1f39f24267c613ce" translate="yes" xml:space="preserve">
          <source>Starts preventing the system from entering lower-power mode. Returns an integer identifying the power save blocker.</source>
          <target state="translated">시스템이 저전력 모드로 들어 가지 않도록 시작합니다. 절전 차단기를 식별하는 정수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="722a15ab9252afbe8e0bd511ed9500f99c648da6" translate="yes" xml:space="preserve">
          <source>Starts the process as a normal Node.js process.</source>
          <target state="translated">프로세스를 일반 Node.js 프로세스로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="6a5813201a4580fe5f1fbb25f1a522d4d505bf2d" translate="yes" xml:space="preserve">
          <source>Static Methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae7d5be70820ed56467bd9a63744e23b47bd711" translate="yes" xml:space="preserve">
          <source>Status</source>
          <target state="translated">Status</target>
        </trans-unit>
        <trans-unit id="7de39102e71973f2b4c9e9fb6dac682aecd8cf94" translate="yes" xml:space="preserve">
          <source>Step 10: Discuss and Update</source>
          <target state="translated">10 단계 : 토론 및 업데이트</target>
        </trans-unit>
        <trans-unit id="662dfae726354bffc7db9630caa7bd67eefc9a6d" translate="yes" xml:space="preserve">
          <source>Step 10: Discuss and update</source>
          <target state="translated">10 단계 : 토론 및 업데이트</target>
        </trans-unit>
        <trans-unit id="afd1675ce941a091f16700e236a4f78ec2dfad55" translate="yes" xml:space="preserve">
          <source>Step 11: Landing</source>
          <target state="translated">11 단계 : 착륙</target>
        </trans-unit>
        <trans-unit id="7bd30c8936103523f83b34c764b38a96178d6db7" translate="yes" xml:space="preserve">
          <source>Step 1: Create a Debian Package</source>
          <target state="translated">1 단계 : 데비안 패키지 만들기</target>
        </trans-unit>
        <trans-unit id="3a5f7dd7276dbf8791d45ab909b29b602b9f844a" translate="yes" xml:space="preserve">
          <source>Step 1: Fork</source>
          <target state="translated">1 단계 : 포크</target>
        </trans-unit>
        <trans-unit id="982ffe830b3039cc7f4b8415778987e3a8f473de" translate="yes" xml:space="preserve">
          <source>Step 1: Package Your Electron Application</source>
          <target state="translated">1 단계 : 전자 응용 프로그램 패키지</target>
        </trans-unit>
        <trans-unit id="d20ecf8d0baedcfa6da1a547723fa5bd4a4921de" translate="yes" xml:space="preserve">
          <source>Step 2: Build</source>
          <target state="translated">2 단계 : 빌드</target>
        </trans-unit>
        <trans-unit id="af62df57b1ca6089276e10a762c159ae1f59afb8" translate="yes" xml:space="preserve">
          <source>Step 2: Create a snapcraft.yaml</source>
          <target state="translated">2 단계 : snapcraft.yaml 만들기</target>
        </trans-unit>
        <trans-unit id="275558b46203433d5c44c48e86d11c0678b226ab" translate="yes" xml:space="preserve">
          <source>Step 2: Running &lt;code&gt;electron-installer-snap&lt;/code&gt;</source>
          <target state="translated">2 단계 : &lt;code&gt;electron-installer-snap&lt;/code&gt; 실행</target>
        </trans-unit>
        <trans-unit id="79d25bf9fb6ae3bee37a7daa1e63e2520d3a2b1c" translate="yes" xml:space="preserve">
          <source>Step 2: Running electron-windows-store</source>
          <target state="translated">2 단계 : 전자 윈도우 스토어 실행</target>
        </trans-unit>
        <trans-unit id="085c619408ba85f500cca4078bc6993a1943481e" translate="yes" xml:space="preserve">
          <source>Step 3: Branch</source>
          <target state="translated">3 단계 : 지점</target>
        </trans-unit>
        <trans-unit id="42f536cd108752a5d4c14dab76fc220c2a52be56" translate="yes" xml:space="preserve">
          <source>Step 3: Using the AppX Package</source>
          <target state="translated">3 단계 : AppX 패키지 사용</target>
        </trans-unit>
        <trans-unit id="f888c34ad31ebff32c41387dd24f54772ed28504" translate="yes" xml:space="preserve">
          <source>Step 4: Code</source>
          <target state="translated">4 단계 : 코드</target>
        </trans-unit>
        <trans-unit id="18a14b62cdfef7caa365404c01690312608f3716" translate="yes" xml:space="preserve">
          <source>Step 5: Commit</source>
          <target state="translated">5 단계 : 커밋</target>
        </trans-unit>
        <trans-unit id="b01ca2567556356c334a1cbf9d37ca9fd395d35b" translate="yes" xml:space="preserve">
          <source>Step 6: Rebase</source>
          <target state="translated">6 단계 : 리베이스</target>
        </trans-unit>
        <trans-unit id="6d84ee8f1e7b86aadc817929a98f58c069a4f673" translate="yes" xml:space="preserve">
          <source>Step 7: Test</source>
          <target state="translated">7 단계 : 테스트</target>
        </trans-unit>
        <trans-unit id="dba4c9ae1373ba83140e40fb09eb37be3b0e1c0c" translate="yes" xml:space="preserve">
          <source>Step 8: Push</source>
          <target state="translated">8 단계 : 푸시</target>
        </trans-unit>
        <trans-unit id="9ee5a72675fb5ec976da7fa298ce7bfb67ad3ff1" translate="yes" xml:space="preserve">
          <source>Step 9: Opening the Pull Request</source>
          <target state="translated">9 단계 : 풀 요청 열기</target>
        </trans-unit>
        <trans-unit id="b86f2f9e7039c672bc135fae708eb87036251ae9" translate="yes" xml:space="preserve">
          <source>Steps to package your app into an &lt;code&gt;asar&lt;/code&gt; archive:</source>
          <target state="translated">앱을 &lt;code&gt;asar&lt;/code&gt; 아카이브 로 패키징하는 단계 :</target>
        </trans-unit>
        <trans-unit id="8370e7640e1265b2ff1387c489b345506060c60c" translate="yes" xml:space="preserve">
          <source>Stop monitoring on all processes.</source>
          <target state="translated">모든 프로세스에서 모니터링을 중지하십시오.</target>
        </trans-unit>
        <trans-unit id="78f3f1419fba05c1946bad423e2a2c661e189e16" translate="yes" xml:space="preserve">
          <source>Stop recording on all processes.</source>
          <target state="translated">모든 프로세스에서 기록을 중지하십시오.</target>
        </trans-unit>
        <trans-unit id="9cba0d3e2c5b605f39289352fffcc0b5368f3e36" translate="yes" xml:space="preserve">
          <source>Stops any &lt;code&gt;findInPage&lt;/code&gt; request for the &lt;code&gt;webContents&lt;/code&gt; with the provided &lt;code&gt;action&lt;/code&gt;.</source>
          <target state="translated">제공된 &lt;code&gt;action&lt;/code&gt; 으로 &lt;code&gt;webContents&lt;/code&gt; 에 대한 &lt;code&gt;findInPage&lt;/code&gt; 요청을 중지합니다 .</target>
        </trans-unit>
        <trans-unit id="5e5eeb16588d48c3b8a2d024259209772e5fb650" translate="yes" xml:space="preserve">
          <source>Stops any &lt;code&gt;findInPage&lt;/code&gt; request for the &lt;code&gt;webview&lt;/code&gt; with the provided &lt;code&gt;action&lt;/code&gt;.</source>
          <target state="translated">제공된 &lt;code&gt;action&lt;/code&gt; 으로 &lt;code&gt;webview&lt;/code&gt; 대한 &lt;code&gt;findInPage&lt;/code&gt; 요청을 중지합니다 .</target>
        </trans-unit>
        <trans-unit id="a60f8e2575f729879818c2189915ae2373b00b1f" translate="yes" xml:space="preserve">
          <source>Stops any pending navigation.</source>
          <target state="translated">보류중인 탐색을 중지합니다.</target>
        </trans-unit>
        <trans-unit id="d2c0432f252cabdf881a5b1de7d21307e3108eac" translate="yes" xml:space="preserve">
          <source>Stops the specified power save blocker.</source>
          <target state="translated">지정된 절전 차단기를 중지합니다.</target>
        </trans-unit>
        <trans-unit id="cd7ac16ecf07dffbfa1314c6d4fc11224228b1e6" translate="yes" xml:space="preserve">
          <source>StreamProtocolResponse</source>
          <target state="translated">StreamProtocolResponse</target>
        </trans-unit>
        <trans-unit id="0b932126a37351eca28af5c545c6050320fbafe4" translate="yes" xml:space="preserve">
          <source>StreamProtocolResponse Object</source>
          <target state="translated">StreamProtocolResponse 개체</target>
        </trans-unit>
        <trans-unit id="07986ba3f490221acef1d2c2b54da37f801672d6" translate="yes" xml:space="preserve">
          <source>Strict use of semver</source>
          <target state="translated">semver의 엄격한 사용</target>
        </trans-unit>
        <trans-unit id="b28ce922b3d6733942016c7204231819c4d13493" translate="yes" xml:space="preserve">
          <source>Structure of Other Directories</source>
          <target state="translated">다른 디렉토리의 구조</target>
        </trans-unit>
        <trans-unit id="f0a6dc559018a4e099b96d3ed7b5f1b03af5b24a" translate="yes" xml:space="preserve">
          <source>Structure of Source Code</source>
          <target state="translated">소스 코드의 구조</target>
        </trans-unit>
        <trans-unit id="e917b4ec2b1055f6900c394da62ccec5d1d3b323" translate="yes" xml:space="preserve">
          <source>Submit Your App for Review</source>
          <target state="translated">검토를 위해 앱 제출</target>
        </trans-unit>
        <trans-unit id="1309deaf0ef292c659a9167472c5ab66acd093f6" translate="yes" xml:space="preserve">
          <source>Submit crash reports to a remote server.</source>
          <target state="translated">충돌 보고서를 원격 서버에 제출하십시오.</target>
        </trans-unit>
        <trans-unit id="cdc8d7c68289726905ca8577af8767a794cde90e" translate="yes" xml:space="preserve">
          <source>Submitting a Bug Report</source>
          <target state="translated">버그 리포트 제출</target>
        </trans-unit>
        <trans-unit id="63fa5aa992cb17b44abb684ac147fdb7bae81d44" translate="yes" xml:space="preserve">
          <source>Subscribes to native notifications of macOS, &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(event, userInfo)&lt;/code&gt; when the corresponding &lt;code&gt;event&lt;/code&gt; happens. The &lt;code&gt;userInfo&lt;/code&gt; is an Object that contains the user information dictionary sent along with the notification.</source>
          <target state="translated">맥 OS의 기본 통지 구독은 &lt;code&gt;callback&lt;/code&gt; 호출 될 &lt;code&gt;callback(event, userInfo)&lt;/code&gt; 해당 &lt;code&gt;event&lt;/code&gt; 발생합니다. &lt;code&gt;userInfo&lt;/code&gt; 통지와 함께 전송되는 사용자 정보 사전을 포함하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="14bb55d7d7430a4e707657bbba24d20d9e03a1c8" translate="yes" xml:space="preserve">
          <source>Sundanese</source>
          <target state="translated">Sundanese</target>
        </trans-unit>
        <trans-unit id="f32d5a3b17e614297417cc279a7ec1cd02274d65" translate="yes" xml:space="preserve">
          <source>Support</source>
          <target state="translated">Support</target>
        </trans-unit>
        <trans-unit id="0bbfba9b9ff08cee1fcec9f293c4eb19430339a8" translate="yes" xml:space="preserve">
          <source>Support for authenticating proxies using basic, digest, NTLM, Kerberos or negotiate authentication schemes.</source>
          <target state="translated">기본, 요약, NTLM, Kerberos 또는 협상 인증 체계를 사용하여 프록시 인증을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="70da0ceff673ee93c735fb842e02d74844dd618b" translate="yes" xml:space="preserve">
          <source>Support for traffic monitoring proxies: Fiddler-like proxies used for access control and monitoring.</source>
          <target state="translated">트래픽 모니터링 프록시 지원 : 액세스 제어 및 모니터링에 사용되는 Fiddler와 같은 프록시입니다.</target>
        </trans-unit>
        <trans-unit id="43e4b99d8f796a6596b3536c4a983b7cb9155b68" translate="yes" xml:space="preserve">
          <source>Supported Chrome Command Line Switches</source>
          <target state="translated">지원되는 Chrome 명령 행 스위치</target>
        </trans-unit>
        <trans-unit id="ee5b1ee6bc8a9f095e69f419328c6a4405e7c8ac" translate="yes" xml:space="preserve">
          <source>Supported DevTools Extensions</source>
          <target state="translated">지원되는 DevTools 확장</target>
        </trans-unit>
        <trans-unit id="2c4dac57669722579d0059c86b886c8076e5f699" translate="yes" xml:space="preserve">
          <source>Supported Formats</source>
          <target state="translated">지원되는 형식</target>
        </trans-unit>
        <trans-unit id="1a182e900ad0b28f084dbe30c2f1ab8dc81f123a" translate="yes" xml:space="preserve">
          <source>Supported Platforms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27688c5327abb2b73ea437b43fa29c356a128ee7" translate="yes" xml:space="preserve">
          <source>Supported Versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d07764fc1204ad402a2687ddda6ae939e80fec9" translate="yes" xml:space="preserve">
          <source>Swahili</source>
          <target state="translated">Swahili</target>
        </trans-unit>
        <trans-unit id="04a422d38c95415cece1ac86e1ad2a1030048c03" translate="yes" xml:space="preserve">
          <source>Swedish</source>
          <target state="translated">Swedish</target>
        </trans-unit>
        <trans-unit id="36c0630a340d2960affa1c4d2360b0e2c06793fb" translate="yes" xml:space="preserve">
          <source>Synopsis</source>
          <target state="translated">Synopsis</target>
        </trans-unit>
        <trans-unit id="57536136efa291cb99584f051a0e6e8328a62928" translate="yes" xml:space="preserve">
          <source>Tag Attributes</source>
          <target state="translated">태그 속성</target>
        </trans-unit>
        <trans-unit id="e301d53adc28f8dfd9375071aa503322cf99bba4" translate="yes" xml:space="preserve">
          <source>Tajik</source>
          <target state="translated">Tajik</target>
        </trans-unit>
        <trans-unit id="86c2b6275f076b31c4be9812e835dab2a6f07ccf" translate="yes" xml:space="preserve">
          <source>Tamil</source>
          <target state="translated">Tamil</target>
        </trans-unit>
        <trans-unit id="cea42d26ebd4929ac343e1a6d381b343d198a94f" translate="yes" xml:space="preserve">
          <source>Target Names</source>
          <target state="translated">대상 이름</target>
        </trans-unit>
        <trans-unit id="7bb0ddf9221c03b806b03c209e8366000124aa15" translate="yes" xml:space="preserve">
          <source>Task</source>
          <target state="translated">Task</target>
        </trans-unit>
        <trans-unit id="df740b79240b1ed7d5039a52848bff953794ae64" translate="yes" xml:space="preserve">
          <source>Task Object</source>
          <target state="translated">작업 객체</target>
        </trans-unit>
        <trans-unit id="586e90006bbbcd684ab54ec3ea76e4098393f572" translate="yes" xml:space="preserve">
          <source>Tatar</source>
          <target state="translated">Tatar</target>
        </trans-unit>
        <trans-unit id="d14dd0f1027c9118f0a2c6414bff0d3fbb7c8297" translate="yes" xml:space="preserve">
          <source>Technical Differences Between Electron and NW.js (formerly node-webkit)</source>
          <target state="translated">Electron과 NW.js의 기술적 차이점 (이전의 node-webkit)</target>
        </trans-unit>
        <trans-unit id="ea6c03461dc3a543514f149ca6bb793d0a9e158a" translate="yes" xml:space="preserve">
          <source>Telugu</source>
          <target state="translated">Telugu</target>
        </trans-unit>
        <trans-unit id="7de91f3e9d75a52bb4c67b291e19d61e60d41099" translate="yes" xml:space="preserve">
          <source>Template Image</source>
          <target state="translated">템플릿 이미지</target>
        </trans-unit>
        <trans-unit id="61f4c40bafaf925c90d8aec2fb8fe82177a28538" translate="yes" xml:space="preserve">
          <source>Template images consist of black and clear colors (and an alpha channel). Template images are not intended to be used as standalone images and are usually mixed with other content to create the desired final appearance.</source>
          <target state="translated">템플릿 이미지는 검은 색과 선명한 색상 (및 알파 채널)으로 구성됩니다. 템플릿 이미지는 독립형 이미지로 사용하기위한 것이 아니며 일반적으로 원하는 최종 모양을 만들기 위해 다른 내용과 혼합됩니다.</target>
        </trans-unit>
        <trans-unit id="7d0db7be1461de15be97b4fcf849f0ce026908fa" translate="yes" xml:space="preserve">
          <source>Template:</source>
          <target state="translated">Template:</target>
        </trans-unit>
        <trans-unit id="f597cdd5c3c89fe269776fca18c862a026294b15" translate="yes" xml:space="preserve">
          <source>Terse responses that provide neither additional context nor supporting detail are not helpful or professional. To many, such responses are annoying and unfriendly.</source>
          <target state="translated">추가적인 맥락이나 지원 세부 사항을 제공하지 않는 간결한 답변은 도움이되지 않거나 전문적이지 않습니다. 많은 사람들에게 그러한 반응은 성 가시고 비우호적입니다.</target>
        </trans-unit>
        <trans-unit id="74b3791a94489341394b02e06d475b9a10d864b3" translate="yes" xml:space="preserve">
          <source>Test functionality using:</source>
          <target state="translated">다음을 사용하여 기능을 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="0fcdbe88dfea7bef908cb935c5e6a5a7cc750c5d" translate="yes" xml:space="preserve">
          <source>Test your changes conform to the project coding style using:</source>
          <target state="translated">다음을 사용하여 변경 사항이 프로젝트 코딩 스타일에 맞는지 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="translated">Testing</target>
        </trans-unit>
        <trans-unit id="66bb682e02caf9ddc029a0c2316d21b9d64ccfae" translate="yes" xml:space="preserve">
          <source>Testing and Debugging</source>
          <target state="translated">테스트 및 디버깅</target>
        </trans-unit>
        <trans-unit id="7b87088e3905b59b59b4a799f15c55321f33e99c" translate="yes" xml:space="preserve">
          <source>Testing on Headless CI Systems (Travis CI, Jenkins)</source>
          <target state="translated">헤드리스 CI 시스템 테스트 (Travis CI, Jenkins)</target>
        </trans-unit>
        <trans-unit id="b199b027369ad4d90d0312908b79cd8855d69615" translate="yes" xml:space="preserve">
          <source>Testing on Headless CI Systems (Travis, Jenkins)</source>
          <target state="translated">헤드리스 CI 시스템 테스트 (Travis, Jenkins)</target>
        </trans-unit>
        <trans-unit id="39fdec1194d94212b871a28b2aa04a73cd40fce1" translate="yes" xml:space="preserve">
          <source>Tests</source>
          <target state="translated">Tests</target>
        </trans-unit>
        <trans-unit id="a722e0bd49de206034a1eab35e631a36cab05fe7" translate="yes" xml:space="preserve">
          <source>Tests that include native modules (e.g. &lt;code&gt;runas&lt;/code&gt;) can't be executed with the debug build (see &lt;a href=&quot;https://github.com/electron/electron/issues/2558&quot;&gt;#2558&lt;/a&gt; for details), but they will work with the release build.</source>
          <target state="translated">기본 모듈 (예 : &lt;code&gt;runas&lt;/code&gt; ) 을 포함하는 테스트 는 디버그 빌드에서 실행할 수 없지만 (자세한 내용은 &lt;a href=&quot;https://github.com/electron/electron/issues/2558&quot;&gt;# 2558&lt;/a&gt; 참조) 릴리스 빌드에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="3f57c1784bd97f2d870b0ed9e38ca45dff50c643" translate="yes" xml:space="preserve">
          <source>Text selection</source>
          <target state="translated">텍스트 선택</target>
        </trans-unit>
        <trans-unit id="c32767e0541fe7038ff8d87e7b8aed17f49474f8" translate="yes" xml:space="preserve">
          <source>Thai</source>
          <target state="translated">Thai</target>
        </trans-unit>
        <trans-unit id="fbb60eaf6f45c9af5307617f93cfba5afc963630" translate="yes" xml:space="preserve">
          <source>That level of modularity and extendability ensures that all developers working with Electron, both big and small in team-size, are never restricted in what they can or cannot do at any time during their development lifecycle. However, for many developers, one of the community-driven boilerplates or command line tools might make it dramatically easier to compile, package, and release an app.</source>
          <target state="translated">이러한 수준의 모듈 성과 확장 성은 팀 규모에 상관없이 Electron을 사용하는 모든 개발자가 개발 수명주기 동안 언제든지 수행 할 수 있거나 수행 할 수없는 작업에 제한을 두지 않습니다. 그러나 많은 개발자의 경우 커뮤니티 중심 상용구 또는 명령 줄 도구 중 하나를 사용하여 앱을 쉽게 컴파일, 패키지 및 릴리스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd22760d2471b9fe162b9358078abedcb3b5b880" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../api/web-contents#event-before-input-event&quot;&gt;&lt;code&gt;before-input-event&lt;/code&gt;&lt;/a&gt; event is emitted before dispatching &lt;code&gt;keydown&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt; events in the page. It can be used to catch and handle custom shortcuts that are not visible in the menu.</source>
          <target state="translated">&lt;a href=&quot;../api/web-contents#event-before-input-event&quot;&gt; &lt;code&gt;before-input-event&lt;/code&gt; &lt;/a&gt; 이벤트는 발송하기 전에 방출 &lt;code&gt;keydown&lt;/code&gt; 과 &lt;code&gt;keyup&lt;/code&gt; 페이지에서 이벤트를. 메뉴에 표시되지 않는 사용자 정의 바로 가기를 포착하고 처리하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="546f43fddeffeeda41d593ce9fea7c08e6acc480" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API&quot;&gt;Page Visibility API&lt;/a&gt; works as follows:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API&quot;&gt;페이지 가시성 API는&lt;/a&gt; 다음과 같이 작동합니다 :</target>
        </trans-unit>
        <trans-unit id="50be31a1aec1cf6ff184e304cbd59137cf9d97d1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/browser-window.md#winsetmenumenu-linux-windows&quot;&gt;&lt;code&gt;setMenu&lt;/code&gt; method&lt;/a&gt; of browser windows can set the menu of certain browser windows.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/electron/blob/master/docs/api/browser-window.md#winsetmenumenu-linux-windows&quot;&gt; &lt;code&gt;setMenu&lt;/code&gt; 방법&lt;/a&gt; 브라우저 창은 특정 브라우저 윈도우의 메뉴를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c18a39ea0a59ab8d6b7ac00ca6274e07ff4e3710" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/mapbox/node-pre-gyp&quot;&gt;&lt;code&gt;node-pre-gyp&lt;/code&gt; tool&lt;/a&gt; provides a way to deploy native Node modules with prebuilt binaries, and many popular modules are using it.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mapbox/node-pre-gyp&quot;&gt; &lt;code&gt;node-pre-gyp&lt;/code&gt; 도구&lt;/a&gt; 를 사용하는 미리 만들어진 바이너리, 많은 인기 모듈을 기본 노드 모듈을 전개 할 수있는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4285f06f330851132a1bb653b9f3ed2e10705d5e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/sindresorhus/awesome-electron#boilerplates&quot;&gt;&quot;Awesome Electron&quot; list&lt;/a&gt; contains more tools and boilerplates to choose from. If you find the length of the list intimidating, don't forget that adding tools as you go along is a valid approach, too.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sindresorhus/awesome-electron#boilerplates&quot;&gt;&quot;굉장 전자&quot;목록에&lt;/a&gt; 더 많은 도구와 선택 boilerplates가 포함되어 있습니다. 목록의 길이가 협박되는 경우 도구를 추가하는 것도 유효한 방법이라는 것을 잊지 마십시오.</target>
        </trans-unit>
        <trans-unit id="26d4924ea4b8c06c6a5af32fe6dcfdc2d9472e9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-x&lt;/code&gt; flag should be used with any required module that is already exposed in the preload scope, and tells browserify to use the enclosing &lt;code&gt;require&lt;/code&gt; function for it. &lt;code&gt;--insert-global-vars&lt;/code&gt; will ensure that &lt;code&gt;process&lt;/code&gt;, &lt;code&gt;Buffer&lt;/code&gt; and &lt;code&gt;setImmediate&lt;/code&gt; are also taken from the enclosing scope(normally browserify injects code for those).</source>
          <target state="translated">&lt;code&gt;-x&lt;/code&gt; 플래그는 이미 프리로드 범위에 노출되어 필요한 모듈을 사용하고, 바깥 사용 browserify 지시해야 &lt;code&gt;require&lt;/code&gt; 그것을 위해 기능을. &lt;code&gt;--insert-global-vars&lt;/code&gt; 는 &lt;code&gt;process&lt;/code&gt; , &lt;code&gt;Buffer&lt;/code&gt; 및 &lt;code&gt;setImmediate&lt;/code&gt; 도 둘러싸는 범위에서 가져옵니다 (일반적으로 browserify 는 코드를 주입합니다).</target>
        </trans-unit>
        <trans-unit id="07787c413e40de525905bace4028a285133a7977" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindow&lt;/code&gt; class has the following static methods:</source>
          <target state="translated">&lt;code&gt;BrowserWindow&lt;/code&gt; 의 클래스는 다음과 같은 정적 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="5fb74cf64078c3266f27fdc27672e6d77567d9c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindowProxy&lt;/code&gt; object has the following instance methods:</source>
          <target state="translated">&lt;code&gt;BrowserWindowProxy&lt;/code&gt; 의 객체는 다음 인스턴스 메소드가 있습니다</target>
        </trans-unit>
        <trans-unit id="d2e8026a49cfe035502c70155d7822608b823c7f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindowProxy&lt;/code&gt; object has the following instance properties:</source>
          <target state="translated">&lt;code&gt;BrowserWindowProxy&lt;/code&gt; 의 객체는 다음 인스턴스 속성이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="378c32718c3701cfe2b78f42dbf353799ed3e872" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;BrowserWindowProxy&lt;/code&gt; object is returned from &lt;code&gt;window.open&lt;/code&gt; and provides limited functionality with the child window.</source>
          <target state="translated">&lt;code&gt;BrowserWindowProxy&lt;/code&gt; 의 객체에서 반환 &lt;code&gt;window.open&lt;/code&gt; 과 자식 창으로 제한된 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e205851e02ff44e952b5b6432b8733e0d512cc1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Display&lt;/code&gt; object represents a physical display connected to the system. A fake &lt;code&gt;Display&lt;/code&gt; may exist on a headless system, or a &lt;code&gt;Display&lt;/code&gt; may correspond to a remote, virtual display.</source>
          <target state="translated">&lt;code&gt;Display&lt;/code&gt; 객체가 시스템에 연결되어있는 물리적 인 디스플레이를 나타냅니다. 헤드리스 시스템에 가짜 &lt;code&gt;Display&lt;/code&gt; 가 있거나 &lt;code&gt;Display&lt;/code&gt; 가 원격 가상 디스플레이에 해당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36111e3a5ab27ddad11383f671b1db57b263f884" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;HOME=~/.electron-gyp&lt;/code&gt; changes where to find development headers. The &lt;code&gt;--target=1.2.3&lt;/code&gt; is version of Electron. The &lt;code&gt;--dist-url=...&lt;/code&gt; specifies where to download the headers. The &lt;code&gt;--arch=x64&lt;/code&gt; says the module is built for 64bit system.</source>
          <target state="translated">&lt;code&gt;HOME=~/.electron-gyp&lt;/code&gt; 변화는 어디에서 개발 헤더를 찾을 수 있습니다. &lt;code&gt;--target=1.2.3&lt;/code&gt; 전자의 버전입니다. &lt;code&gt;--dist-url=...&lt;/code&gt; 지정합니다 헤더를 다운로드합니다. &lt;code&gt;--arch=x64&lt;/code&gt; 모듈은 64 비트 시스템 구축 말한다.</target>
        </trans-unit>
        <trans-unit id="9514231a4bc92a133c52dca0d2e94a52bdd7b4cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Menu&lt;/code&gt; class is only available in the main process, but you can also use it in the render process via the &lt;a href=&quot;remote&quot;&gt;&lt;code&gt;remote&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">&lt;code&gt;Menu&lt;/code&gt; 클래스는 기본 프로세스에서만 사용할 수 있습니다,하지만 당신은 또한을 통해 렌더링 과정에서 사용할 수있는 &lt;a href=&quot;remote&quot;&gt; &lt;code&gt;remote&lt;/code&gt; &lt;/a&gt; 모듈.</target>
        </trans-unit>
        <trans-unit id="90637a5eccddf5840df8977ac78bf5a858511ee0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Notification&lt;/code&gt; class has the following static methods:</source>
          <target state="translated">&lt;code&gt;Notification&lt;/code&gt; 클래스는 다음과 같은 정적 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="95804347995e70d453f68b137daf116055a4d34c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Stats&lt;/code&gt; object returned by &lt;code&gt;fs.stat&lt;/code&gt; and its friends on files in &lt;code&gt;asar&lt;/code&gt; archives is generated by guessing, because those files do not exist on the filesystem. So you should not trust the &lt;code&gt;Stats&lt;/code&gt; object except for getting file size and checking file type.</source>
          <target state="translated">&lt;code&gt;Stats&lt;/code&gt; 에 의해 반환 된 객체 &lt;code&gt;fs.stat&lt;/code&gt; 와의 파일에 그 친구 &lt;code&gt;asar&lt;/code&gt; 해당 파일은 파일 시스템에 존재하지 않기 때문에 아카이브는 추측에 의해 생성됩니다. 따라서 파일 크기를 가져오고 파일 유형을 확인하는 것 외에는 &lt;code&gt;Stats&lt;/code&gt; 객체를 신뢰해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="095dd42a57b5876b1a6eb4597c1c2e6d0fd7fe76" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Super&lt;/code&gt; key is mapped to the &lt;code&gt;Windows&lt;/code&gt; key on Windows and Linux and &lt;code&gt;Cmd&lt;/code&gt; on macOS.</source>
          <target state="translated">&lt;code&gt;Super&lt;/code&gt; 키는 매핑되는 &lt;code&gt;Windows&lt;/code&gt; Windows 및 Linux와 키 &lt;code&gt;Cmd&lt;/code&gt; 를 맥 OS에.</target>
        </trans-unit>
        <trans-unit id="548888cfaa24b5e46bb879ba09c005e135f4e50f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tray&lt;/code&gt; class has the following methods:</source>
          <target state="translated">&lt;code&gt;Tray&lt;/code&gt; 클래스는 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="4b63c9111b71a3a4ecd76b489350d61f921c316d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Tray&lt;/code&gt; module emits the following events:</source>
          <target state="translated">&lt;code&gt;Tray&lt;/code&gt; 모듈은 다음 이벤트를 방출 :</target>
        </trans-unit>
        <trans-unit id="49db5017dbb7fcd31b41d7c2bbd8e4e2ef8bd894" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;acceptLanguages&lt;/code&gt; must a comma separated ordered list of language codes, for example &lt;code&gt;&quot;en-US,fr,de,ko,zh-CN,ja&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;acceptLanguages&lt;/code&gt; 는 쉼표 예를 들어, 언어 코드의 목록을 주문 분리 된해야한다 &lt;code&gt;&quot;en-US,fr,de,ko,zh-CN,ja&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b15a23f3e4538bb79d20fd17bb0e7e16fa3b3f59" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; object emits the following events:</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 객체는 다음과 같은 이벤트를 방출 :</target>
        </trans-unit>
        <trans-unit id="002fdff755f07b750c740ea76c9ad4d8538566c4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app&lt;/code&gt; object has the following methods:</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 객체는 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="bb1acceddcd94f2f7ba1e55e4b2100588ac1d786" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoUpdater&lt;/code&gt; object emits the following events:</source>
          <target state="translated">&lt;code&gt;autoUpdater&lt;/code&gt; 객체는 다음과 같은 이벤트를 방출 :</target>
        </trans-unit>
        <trans-unit id="3b4e5e4aebb061efee47a8a13fcf6a4b5cc16b96" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoUpdater&lt;/code&gt; object has the following methods:</source>
          <target state="translated">&lt;code&gt;autoUpdater&lt;/code&gt; 객체는 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e3a18bd191c6bb3e87e89299d68faf09f0ac3a17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;blur&lt;/code&gt; filter only applies to the web page, so there is no way to apply blur effect to the content below the window (i.e. other applications open on the user's system).</source>
          <target state="translated">&lt;code&gt;blur&lt;/code&gt; 필터는 웹 페이지에 적용되므로 창 아래의 내용 (즉, 다른 응용 프로그램이 사용자의 시스템에 열)에 흐림 효과를 적용 할 수있는 방법은 없습니다.</target>
        </trans-unit>
        <trans-unit id="e2355778305a7074fcec2fb4ec88d449e5a1e40b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bounds&lt;/code&gt; of this tray icon as &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">이 트레이 아이콘 의 &lt;code&gt;bounds&lt;/code&gt; 는 &lt;code&gt;Object&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e9dbc7cd3bcff2b75b0f1d3596349050baee4036" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;browserWindow&lt;/code&gt; argument allows the dialog to attach itself to a parent window, making it modal.</source>
          <target state="translated">&lt;code&gt;browserWindow&lt;/code&gt; 의 인수는 대화 상자가 모달 만드는 부모 창에 자신을 첨부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63a7588ba2bc1f88e743b453cf4a04f1f17b9355" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;browserWindow&lt;/code&gt; argument is ignored since it is not possible to make this confirmation dialog modal.</source>
          <target state="translated">&lt;code&gt;browserWindow&lt;/code&gt; 의 인수는이 확인 대화 상자의 모달을 할 수 없습니다 때문에 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="5396c28a26b135b4e02d8c03a179881499cbc516" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;buttons&lt;/code&gt; is an array of &lt;code&gt;Button&lt;/code&gt; objects:</source>
          <target state="translated">&lt;code&gt;buttons&lt;/code&gt; 의 배열 &lt;code&gt;Button&lt;/code&gt; 오브젝트 :</target>
        </trans-unit>
        <trans-unit id="a85420db83103b60313c540377497e810fdfe12c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; function is expected to be called back with user credentials:</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 기능은 사용자 자격 증명을 다시 호출 할 것으로 예상된다 :</target>
        </trans-unit>
        <trans-unit id="d0ea095cd807318dc09f88cb0623c0b9f76a5c12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; has to be called with an &lt;code&gt;response&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 호출해야하는 &lt;code&gt;response&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="722e658697e82305d3fc4ad9883c4ea54a96e299" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; is guaranteed to be executed after the &lt;code&gt;ready&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; gets emitted.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 애프터 실행되도록 보장 &lt;code&gt;ready&lt;/code&gt; 의 경우 &lt;code&gt;app&lt;/code&gt; 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="a00dd859c40cd9cb490ab9fe3f58740b20b89324" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; will be called with &lt;code&gt;callback(error, data)&lt;/code&gt; on completion. The &lt;code&gt;data&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt; that contains the generated PDF data.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 호출 될 &lt;code&gt;callback(error, data)&lt;/code&gt; 완료에. &lt;code&gt;data&lt;/code&gt; A는 &lt;code&gt;Buffer&lt;/code&gt; 생성 된 PDF 데이터를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="356f68b035169a45ce9d444a247220b106430430" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;callback&lt;/code&gt; will be called with a boolean that indicates whether there is already a handler for &lt;code&gt;scheme&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 이미에 대한 핸들러가 있는지 여부를 나타내는 부울 호출 할 것이다 &lt;code&gt;scheme&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fe244816958e1ab626feaede5fa1d3dbe5730b37" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;child&lt;/code&gt; window will always show on top of the &lt;code&gt;top&lt;/code&gt; window.</source>
          <target state="translated">&lt;code&gt;child&lt;/code&gt; 창을 항상 위에 표시됩니다 &lt;code&gt;top&lt;/code&gt; 창.</target>
        </trans-unit>
        <trans-unit id="7a2313446db8e81753e97957c071d74a94bd65f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clipboard&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;clipboard&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="bb07e41210d7fff1788acac73dfb010bb237c483" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;contentTracing&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;contentTracing&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="93991c1e8a60fa256116cc32be4c8bda608260fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;crashReporter&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;crashReporter&lt;/code&gt; 의 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="241b7d90fa34196856ed435b3363c3b6a90d07c7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data&lt;/code&gt; event is the usual method of transferring response data into applicative code.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 이벤트 실용적 코드에 응답하여 데이터를 전송하는 일반적인 방법이다.</target>
        </trans-unit>
        <trans-unit id="403f5086c41f36c4fef65505be759177ba388421" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;desktop&lt;/code&gt; type places the window at the desktop background window level (&lt;code&gt;kCGDesktopWindowLevel - 1&lt;/code&gt;). Note that desktop window will not receive focus, keyboard or mouse events, but you can use &lt;code&gt;globalShortcut&lt;/code&gt; to receive input sparingly.</source>
          <target state="translated">&lt;code&gt;desktop&lt;/code&gt; 유형은 바탕 화면 배경 창 수준 (에 창을 배치 &lt;code&gt;kCGDesktopWindowLevel - 1&lt;/code&gt; ). 데스크탑 창에는 포커스, 키보드 또는 마우스 이벤트 가 수신되지 &lt;code&gt;globalShortcut&lt;/code&gt; 을 사용 하여 입력을 드물게받을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c91ffc57c958c7d8acdb45b0a7b46f1817c75746" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;desktopCapturer&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;desktopCapturer&lt;/code&gt; 의 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="5c86af2d3eca32ea6c29be53122248ebc912a2db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;devToolsWebContents&lt;/code&gt; must not have done any navigation, and it should not be used for other purposes after the call.</source>
          <target state="translated">&lt;code&gt;devToolsWebContents&lt;/code&gt; 은 어떤 탐색을 수행하지 않아야하고, 통화 후 다른 목적으로 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="936fe58c56fb05911024b85cff388024ba3116ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dialog&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;dialog&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="4095e62c7ce99006c409a16aa80713cfe7c69501" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dirtyRect&lt;/code&gt; is an object with &lt;code&gt;x, y, width, height&lt;/code&gt; properties that describes which part of the page was repainted. If &lt;code&gt;onlyDirty&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;frameBuffer&lt;/code&gt; will only contain the repainted area. &lt;code&gt;onlyDirty&lt;/code&gt; defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dirtyRect&lt;/code&gt; 가 갖는 목적 &lt;code&gt;x, y, width, height&lt;/code&gt; 페이지의 일부를 다시 칠 된 설명 특성. 경우 &lt;code&gt;onlyDirty&lt;/code&gt; 가 설정되어 &lt;code&gt;true&lt;/code&gt; , &lt;code&gt;frameBuffer&lt;/code&gt; 만 다시 칠 영역을 포함합니다. &lt;code&gt;onlyDirty&lt;/code&gt; 의 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="05f576a2a158a83cd7ce5968c7932e1f336b7007" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;downloadItem&lt;/code&gt; object has the following methods:</source>
          <target state="translated">&lt;code&gt;downloadItem&lt;/code&gt; 의 객체는 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ed6c50abf3a121448cce42cd5e2c77e7b44b0029" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;electron&lt;/code&gt; module exposes features in namespaces. As examples, the lifecycle of the application is managed through &lt;code&gt;electron.app&lt;/code&gt;, windows can be created using the &lt;code&gt;electron.BrowserWindow&lt;/code&gt; class. A simple &lt;code&gt;main.js&lt;/code&gt; file might wait for the application to be ready and open a window:</source>
          <target state="translated">&lt;code&gt;electron&lt;/code&gt; 모듈이 노출 네임 스페이스의 기능. 예를 들어 응용 프로그램의 수명주기는 &lt;code&gt;electron.app&lt;/code&gt; 를 통해 관리 되며, &lt;code&gt;electron.BrowserWindow&lt;/code&gt; 클래스를 사용하여 창을 만들 수 있습니다 . 간단한 &lt;code&gt;main.js&lt;/code&gt; 파일은 응용 프로그램이 준비 될 때까지 기다렸다가 창을 열 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e713198ae5aa3d7860ac6a3ebb58bc755e36869" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eval()&lt;/code&gt; method has precisely one mission: To evaluate a series of characters as JavaScript and execute it. It is a required method whenever you need to evaluate code that is not known ahead of time. While legitimate use cases exist, like any other code generators, &lt;code&gt;eval()&lt;/code&gt; is difficult to harden.</source>
          <target state="translated">&lt;code&gt;eval()&lt;/code&gt; 자바 스크립트와 같은 일련의 문자를 평가하고 실행하려면 다음 방법은 정확하게 하나의 사명을 가지고있다. 미리 알려지지 않은 코드를 평가해야 할 때마다 필요한 방법입니다. 다른 코드 생성기와 마찬가지로 합법적 인 사용 사례가 존재하지만 &lt;code&gt;eval()&lt;/code&gt; 을 강화하기는 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="019cd8312f1a5fda260bfd332d18f88cd5919fe5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;event&lt;/code&gt; object passed to the &lt;code&gt;callback&lt;/code&gt; has the following methods:</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 전달 된 &lt;code&gt;event&lt;/code&gt; 객체 에는 다음과 같은 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e24c53e04a1e278fe4236904cb31e9fccf0e561f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extensions&lt;/code&gt; array should contain extensions without wildcards or dots (e.g. &lt;code&gt;'png'&lt;/code&gt; is good but &lt;code&gt;'.png'&lt;/code&gt; and &lt;code&gt;'*.png'&lt;/code&gt; are bad). To show all files, use the &lt;code&gt;'*'&lt;/code&gt; wildcard (no other wildcard is supported).</source>
          <target state="translated">&lt;code&gt;extensions&lt;/code&gt; 배열 (예 : 와일드 카드 또는 점없이 확장을 포함해야한다 &lt;code&gt;'png'&lt;/code&gt; 좋지만 &lt;code&gt;'.png'&lt;/code&gt; 및 &lt;code&gt;'*.png'&lt;/code&gt; 나쁜). 모든 파일을 표시하려면 &lt;code&gt;'*'&lt;/code&gt; 와일드 카드를 사용하십시오 (다른 와일드 카드는 지원되지 않음).</target>
        </trans-unit>
        <trans-unit id="f3d501c675b0d84ae308df640a7d8d0a5378ef74" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;features&lt;/code&gt; string follows the format of standard browser, but each feature has to be a field of &lt;code&gt;BrowserWindow&lt;/code&gt;'s options.</source>
          <target state="translated">&lt;code&gt;features&lt;/code&gt; 문자열은 표준 브라우저의 형식을 따르지만, 각 기능의 필드 수있다 &lt;code&gt;BrowserWindow&lt;/code&gt; 의 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="94ffd4d3baf2d1de08f14cfdc6edb75368339278" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; object has a &lt;code&gt;urls&lt;/code&gt; property which is an Array of URL patterns that will be used to filter out the requests that do not match the URL patterns. If the &lt;code&gt;filter&lt;/code&gt; is omitted then all requests will be matched.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 객체는이 &lt;code&gt;urls&lt;/code&gt; 의 URL 패턴과 일치하지 않는 요청을 필터링하는 데 사용되는 URL 패턴의 배열입니다 속성을. 는 IF &lt;code&gt;filter&lt;/code&gt; 다음 생략 모든 요청이 일치됩니다.</target>
        </trans-unit>
        <trans-unit id="bfee38503c0250eb4e4343bcbcc1335f4e55bda4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filters&lt;/code&gt; specifies an array of file types that can be displayed or selected when you want to limit the user to a specific type. For example:</source>
          <target state="translated">&lt;code&gt;filters&lt;/code&gt; 특정 유형의 사용자를 제한 할 때 표시하거나 선택할 수있는 파일 형식의 배열을 지정합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2a171949c0c23f49efff8c99983f73afc8dcbb4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filters&lt;/code&gt; specifies an array of file types that can be displayed, see &lt;code&gt;dialog.showOpenDialog&lt;/code&gt; for an example.</source>
          <target state="translated">&lt;code&gt;filters&lt;/code&gt; 지정 표시 할 수있는 파일 형식의 배열을 참조 &lt;code&gt;dialog.showOpenDialog&lt;/code&gt; 을 예제.</target>
        </trans-unit>
        <trans-unit id="1111c9edc37ca4ec0da599ababcc1c555f969fba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;flags&lt;/code&gt; is an array that can include following &lt;code&gt;String&lt;/code&gt;s:</source>
          <target state="translated">&lt;code&gt;flags&lt;/code&gt; 다음을 포함 할 수있는 배열입니다 &lt;code&gt;String&lt;/code&gt; 의 :</target>
        </trans-unit>
        <trans-unit id="1efcf6d7d014bb9491f1998332ceaecd85bc09ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;frameBuffer&lt;/code&gt; is a &lt;code&gt;Buffer&lt;/code&gt; that contains raw pixel data. On most machines, the pixel data is effectively stored in 32bit BGRA format, but the actual representation depends on the endianness of the processor (most modern processors are little-endian, on machines with big-endian processors the data is in 32bit ARGB format).</source>
          <target state="translated">&lt;code&gt;frameBuffer&lt;/code&gt; A는 &lt;code&gt;Buffer&lt;/code&gt; 의 픽셀 데이터를 포함한다. 대부분의 컴퓨터에서 픽셀 데이터는 32 비트 BGRA 형식으로 효과적으로 저장되지만 실제 표현은 프로세서의 엔디안에 따라 다릅니다 (대부분의 최신 프로세서는 리틀 엔디안, 빅 엔디안 프로세서가있는 컴퓨터에서는 데이터가 32 비트 ARGB 형식 임) .</target>
        </trans-unit>
        <trans-unit id="9fcc494ee17ffd205cbbac07d73e00106aaa27c5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;globalShortcut&lt;/code&gt; module can register/unregister a global keyboard shortcut with the operating system so that you can customize the operations for various shortcuts.</source>
          <target state="translated">&lt;code&gt;globalShortcut&lt;/code&gt; 의 다양한 바로 가기에 대한 작업을 사용자 정의 할 수 있도록 모듈은 운영 체제와 글로벌 키보드 바로 가기 등록을 취소 / 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e81a564399a9942cb864d440b50ddece338d8694" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;globalShortcut&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;globalShortcut&lt;/code&gt; 의 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="6e46ae7cad787cdb21735231e0621ab5e4b87b0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hslShift&lt;/code&gt; is applied to the image with the following rules</source>
          <target state="translated">&lt;code&gt;hslShift&lt;/code&gt; 는 다음과 같은 규칙을 이미지에 적용됩니다</target>
        </trans-unit>
        <trans-unit id="011be400a53eb4b292815de9c842d46cdff7274b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;id&lt;/code&gt; of the subscriber is returned, which can be used to unsubscribe the &lt;code&gt;event&lt;/code&gt;.</source>
          <target state="translated">구독자 의 &lt;code&gt;id&lt;/code&gt; 가 반환되어 &lt;code&gt;event&lt;/code&gt; 구독을 취소하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2fc3adee636a52c8789e208afca9c876a4f682fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inAppPurchase&lt;/code&gt; module emits the following events:</source>
          <target state="translated">&lt;code&gt;inAppPurchase&lt;/code&gt; 의 모듈은 다음 이벤트를 방출 :</target>
        </trans-unit>
        <trans-unit id="f56c660b8b8c9904524895909d5a74c1b2fbb582" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;inAppPurchase&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;inAppPurchase&lt;/code&gt; 의 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="1fb362b5518a8a407a6aad6446c86825b49e86e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcMain&lt;/code&gt; module has the following method to listen for events:</source>
          <target state="translated">&lt;code&gt;ipcMain&lt;/code&gt; 의 모듈은 이벤트를 수신 할 수있는 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="b7799500275679df5ddea761fe0657908f30a1ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcMain&lt;/code&gt; module is an instance of the &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter&lt;/a&gt; class. When used in the main process, it handles asynchronous and synchronous messages sent from a renderer process (web page). Messages sent from a renderer will be emitted to this module.</source>
          <target state="translated">&lt;code&gt;ipcMain&lt;/code&gt; 의 모듈의 인스턴스 &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter의&lt;/a&gt; 클래스입니다. 기본 프로세스에서 사용되면 렌더러 프로세스 (웹 페이지)에서 보낸 비동기 및 동기 메시지를 처리합니다. 렌더러에서 보낸 메시지는이 모듈로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="8265e24d240bfe6a3dfe63b6b278908fe5d9519a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcRenderer&lt;/code&gt; module has the following method to listen for events and send messages:</source>
          <target state="translated">&lt;code&gt;ipcRenderer&lt;/code&gt; 의 모듈은 이벤트 및 전송 메시지를 수신하려면 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="0c51c2ec9e808b95e61dd514549310ac0facf95f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipcRenderer&lt;/code&gt; module is an instance of the &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter&lt;/a&gt; class. It provides a few methods so you can send synchronous and asynchronous messages from the render process (web page) to the main process. You can also receive replies from the main process.</source>
          <target state="translated">&lt;code&gt;ipcRenderer&lt;/code&gt; 의 모듈의 인스턴스 &lt;a href=&quot;https://nodejs.org/api/events.html#events_class_eventemitter&quot;&gt;EventEmitter의&lt;/a&gt; 클래스입니다. 렌더링 프로세스 (웹 페이지)에서 기본 프로세스로 동기 및 비동기 메시지를 보낼 수있는 몇 가지 방법을 제공합니다. 기본 프로세스에서 회신을받을 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="300264d1e0671551832d554597a0bc97a0d28e8c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;label&lt;/code&gt; and &lt;code&gt;accelerator&lt;/code&gt; values are optional when using a &lt;code&gt;role&lt;/code&gt; and will default to appropriate values for each platform.</source>
          <target state="translated">&lt;code&gt;label&lt;/code&gt; 및 &lt;code&gt;accelerator&lt;/code&gt; 사용하는 경우 값은 선택 사항 &lt;code&gt;role&lt;/code&gt; 하고 각 플랫폼에 대한 값을 적절한 기본값으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="af38248cb8f69543f813cdf21b3e807251021ee5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;landscape&lt;/code&gt; will be ignored if &lt;code&gt;@page&lt;/code&gt; CSS at-rule is used in the web page.</source>
          <target state="translated">&lt;code&gt;landscape&lt;/code&gt; 경우 무시됩니다 &lt;code&gt;@page&lt;/code&gt; 에서 규칙 CSS는 웹 페이지에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dbf959665216876f492e4618b1a0129bb27d0817" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; just before a request is going to be sent to the server, modifications of previous &lt;code&gt;onBeforeSendHeaders&lt;/code&gt; response are visible by the time this listener is fired.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 는 요청이 서버로 전송되기 직전에 &lt;code&gt;listener(details)&lt;/code&gt; 와 함께 호출되며, 이 리스너 가 실행될 때 까지 이전 &lt;code&gt;onBeforeSendHeaders&lt;/code&gt; 응답의 수정 사항 이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9215c04064a4ed2450d3abb28463a9e692fda80d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when a request is completed.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details)&lt;/code&gt; 요청이 완료 될 때.</target>
        </trans-unit>
        <trans-unit id="5518520eb40cc63810d6c31a0f90284102462216" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when a server initiated redirect is about to occur.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details)&lt;/code&gt; 서버 시작 리디렉션에 대한 발생할 때.</target>
        </trans-unit>
        <trans-unit id="be75ee692d0f3eca2c167129b260d4ce5a1fe1a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when an error occurs.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details)&lt;/code&gt; 오류가 발생할 때.</target>
        </trans-unit>
        <trans-unit id="f164f04e3efe8be2764610b61e71394fe5d505d9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when first byte of the response body is received. For HTTP requests, this means that the status line and response headers are available.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 로 호출 될 &lt;code&gt;listener(details)&lt;/code&gt; 응답 본문의 첫 번째 바이트가 수신 될 때. HTTP 요청의 경우 상태 표시 줄과 응답 헤더를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba486b1778a17fa02402e64a5245797eeb7c813d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details, callback)&lt;/code&gt; before sending an HTTP request, once the request headers are available. This may occur after a TCP connection is made to the server, but before any http data is sent.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details, callback)&lt;/code&gt; 요청 헤더가 가능하면, HTTP 요청을 보내기 전에. 이것은 TCP 연결이 서버에 연결되고 HTTP 데이터가 전송되기 전에 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c0db93f48b5d14a434faf475fdbe51cc74f2ac6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details, callback)&lt;/code&gt; when HTTP response headers of a request have been received.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details, callback)&lt;/code&gt; 때 HTTP 요청의 응답 헤더가 수신되었다.</target>
        </trans-unit>
        <trans-unit id="c9f8325f73304e0b2fc67501df6524daf1b7ae9d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details, callback)&lt;/code&gt; when a request is about to occur.</source>
          <target state="translated">&lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details, callback)&lt;/code&gt; 요청에 대해 발생하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="40e21ff6cd4033f75abd16fef09a34ef9cbb8db5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;main.js&lt;/code&gt; should create windows and handle all the system events your application might encounter. A more complete version of the above example might open developer tools, handle the window being closed, or re-create windows on macOS if the user clicks on the app's icon in the dock.</source>
          <target state="translated">&lt;code&gt;main.js&lt;/code&gt; 는 창을 만들고 응용 프로그램에서 발생할 수있는 모든 시스템 이벤트를 처리해야합니다. 위 예제의보다 완전한 버전은 개발자 도구를 열거 나, 닫힌 창을 처리하거나, 사용자가 도크에서 앱 아이콘을 클릭하면 macOS에서 창을 다시 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e156f3425bc64cf234216f3a4ad15f1262e55180" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;master&lt;/code&gt; branch is versionless; only stabilization branches contain version information</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; 분기 버전 숫자이다; 안정화 지점에만 버전 정보가 포함됩니다</target>
        </trans-unit>
        <trans-unit id="cd69d2937edbb31950318c4602ffe9667bf7641d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;master&lt;/code&gt; branch will always contain &lt;code&gt;0.0.0-dev&lt;/code&gt; in its &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;master&lt;/code&gt; 지점은 항상 포함됩니다 &lt;code&gt;0.0.0-dev&lt;/code&gt; 에 자사의 &lt;code&gt;package.json&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="6d44a4be769d34f100f7fffaa317dd46cca03d7d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;menu&lt;/code&gt; class has the following static methods:</source>
          <target state="translated">&lt;code&gt;menu&lt;/code&gt; 클래스는 다음과 같은 정적 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="92922bc283ff2b5f563f918d93e631fae8ea780e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;menu&lt;/code&gt; object has the following instance methods:</source>
          <target state="translated">&lt;code&gt;menu&lt;/code&gt; 객체는 다음 인스턴스 메소드가 있습니다</target>
        </trans-unit>
        <trans-unit id="f6d9d983763e23320f63c15ebadcfd58353d5512" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;message&lt;/code&gt; argument is not used, as the OS provides its own confirmation dialog.</source>
          <target state="translated">&lt;code&gt;message&lt;/code&gt; 는 OS 자체 확인 대화 상자를 제공하기 때문에 인수는 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0d8e2ef655fd474b07350ac6c7ca3a95b52fd785" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nativeImage&lt;/code&gt; module has the following methods, all of which return an instance of the &lt;code&gt;NativeImage&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;nativeImage&lt;/code&gt; 의 모듈의 인스턴스 반환 모두 다음과 같은 방법이 있습니다 &lt;code&gt;NativeImage&lt;/code&gt; 의 클래스를 :</target>
        </trans-unit>
        <trans-unit id="a528025aee2b6d56eef29e9a2494554d6c37e589" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; API can be used only after the application emits the &lt;code&gt;ready&lt;/code&gt; event. Trying to use the module before the &lt;code&gt;ready&lt;/code&gt; event will throw an error.</source>
          <target state="translated">&lt;code&gt;net&lt;/code&gt; 응용 프로그램이 방출 후에 만 API를 사용할 수 있습니다 &lt;code&gt;ready&lt;/code&gt; 이벤트를. &lt;code&gt;ready&lt;/code&gt; 이벤트 전에 모듈을 사용하려고 하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="10e9fc6061228c1537b0f0d93df762eb2393612c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; module API has been specifically designed to mimic, as closely as possible, the familiar Node.js API. The API components including classes, methods, properties and event names are similar to those commonly used in Node.js.</source>
          <target state="translated">&lt;code&gt;net&lt;/code&gt; 모듈 API는 특히 모방, 가깝게 가능한, 친숙한 Node.js를 API에 대한 설계되었습니다. 클래스, 메서드, 속성 및 이벤트 이름을 포함한 API 구성 요소는 Node.js에서 일반적으로 사용되는 것과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="e4e31f2daa5204b7f21cf12768d4fdc274b416c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;net&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="b747748bc902166a3602c80be0b1f6495180c577" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;net&lt;/code&gt; module is a client-side API for issuing HTTP(S) requests. It is similar to the &lt;a href=&quot;https://nodejs.org/api/http.html&quot;&gt;HTTP&lt;/a&gt; and &lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS&lt;/a&gt; modules of Node.js but uses Chromium's native networking library instead of the Node.js implementation, offering better support for web proxies.</source>
          <target state="translated">&lt;code&gt;net&lt;/code&gt; 모듈은 HTTP (S) 요청을 발행 클라이언트 측 API이다. Node.js 의 &lt;a href=&quot;https://nodejs.org/api/http.html&quot;&gt;HTTP&lt;/a&gt; 및 &lt;a href=&quot;https://nodejs.org/api/https.html&quot;&gt;HTTPS&lt;/a&gt; 모듈 과 비슷 하지만 Node.js 구현 대신 Chromium의 기본 네트워킹 라이브러리를 사용하여 웹 프록시를보다 잘 지원합니다.</target>
        </trans-unit>
        <trans-unit id="cb922a08b94d3505f969ca109b706e874110a130" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; can be used independent of &lt;code&gt;nodeIntegration&lt;/code&gt;, but &lt;code&gt;sandbox&lt;/code&gt; must not be set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; 는 의 사용 독립적 일 수있다 &lt;code&gt;nodeIntegration&lt;/code&gt; 있지만, &lt;code&gt;sandbox&lt;/code&gt; 로 설정해서는 안 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6581436836cfa57252c1cca1308513606ec18ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;position&lt;/code&gt; attribute of &lt;code&gt;MenuItem&lt;/code&gt; has the form &lt;code&gt;[placement]=[id]&lt;/code&gt;, where &lt;code&gt;placement&lt;/code&gt; is one of &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;after&lt;/code&gt;, or &lt;code&gt;endof&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; is the unique ID of an existing item in the menu:</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; 의 속성 &lt;code&gt;MenuItem&lt;/code&gt; 형태 갖는다 &lt;code&gt;[placement]=[id]&lt;/code&gt; , &lt;code&gt;placement&lt;/code&gt; 중 하나 &lt;code&gt;before&lt;/code&gt; , &lt;code&gt;after&lt;/code&gt; 또는 &lt;code&gt;endof&lt;/code&gt; 와 &lt;code&gt;id&lt;/code&gt; 메뉴의 기존 항목의 고유 ID이다 :</target>
        </trans-unit>
        <trans-unit id="35cc56a47175cc5030b31c1cf856950911375160" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;position&lt;/code&gt; is only available on Windows, and it is (0, 0) by default.</source>
          <target state="translated">&lt;code&gt;position&lt;/code&gt; 윈도우에서만 사용할 수 있습니다, 그것은 기본적으로 (0, 0)입니다.</target>
        </trans-unit>
        <trans-unit id="6b0d3989f4c443dde3dd1eab4ce1bf29d8645057" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;powerMonitor&lt;/code&gt; module emits the following events:</source>
          <target state="translated">&lt;code&gt;powerMonitor&lt;/code&gt; 모듈은 다음 이벤트를 방출 :</target>
        </trans-unit>
        <trans-unit id="d1d8528431e6e2308391f888af7a45db060216b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;powerSaveBlocker&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;powerSaveBlocker&lt;/code&gt; 의 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="358dd2d79dff7a34bd03fa85e1fe7c4751948f15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;prepare-release&lt;/code&gt; script will trigger the builds via API calls. To monitor the build progress, see the following pages:</source>
          <target state="translated">&lt;code&gt;prepare-release&lt;/code&gt; 가 트리거 스크립트 API의 호출을 통해 구축합니다. 빌드 진행 상황을 모니터링하려면 다음 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bb25017d09d12310bf78c3b0b503ec32d098fa15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;process&lt;/code&gt; object has the following methods:</source>
          <target state="translated">&lt;code&gt;process&lt;/code&gt; 객체는 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e0b2e6e59ddf7a1cdc951ec5bbde5679ce338514" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;process&lt;/code&gt; object in the main process. This is the same as &lt;code&gt;remote.getGlobal('process')&lt;/code&gt; but is cached.</source>
          <target state="translated">기본 프로세스 의 &lt;code&gt;process&lt;/code&gt; 오브젝트 이것은 &lt;code&gt;remote.getGlobal('process')&lt;/code&gt; 와 동일 하지만 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="c114dda8df33944bf9644233ca4e48b6741e79dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;protocol&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;protocol&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="dd616142c9b1da65c3cad2b3338fafedd2935f8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provider&lt;/code&gt; must be an object that has a &lt;code&gt;spellCheck&lt;/code&gt; method that returns whether the word passed is correctly spelled.</source>
          <target state="translated">&lt;code&gt;provider&lt;/code&gt; 가진 개체 수 있어야 &lt;code&gt;spellCheck&lt;/code&gt; 전달 된 단어가 올바르게 입력 반환 여부 것이 방법.</target>
        </trans-unit>
        <trans-unit id="1fd33f21d8a009f756ed1aac013d5fd3de5b45b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxyBypassRules&lt;/code&gt; is a comma separated list of rules described below:</source>
          <target state="translated">&lt;code&gt;proxyBypassRules&lt;/code&gt; 는 콤마 규칙 목록 후술 분리 :</target>
        </trans-unit>
        <trans-unit id="58404a68412b49fd1cbbe75d295d8fc17f95948c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;proxyRules&lt;/code&gt; has to follow the rules below:</source>
          <target state="translated">&lt;code&gt;proxyRules&lt;/code&gt; 는 아래의 규칙을 따라야한다 :</target>
        </trans-unit>
        <trans-unit id="84bbd26f2ff6ec1962ac441f908309e1bc7a83db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;remote&lt;/code&gt; 모듈은 다음과 같은 방법이있다 :</target>
        </trans-unit>
        <trans-unit id="1298a808b09704a87ed114a571e897e21d45a884" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote&lt;/code&gt; module provides a simple way to do inter-process communication (IPC) between the renderer process (web page) and the main process.</source>
          <target state="translated">&lt;code&gt;remote&lt;/code&gt; 모듈 렌더링 처리 (웹 페이지)와 메인 프로세스 간의 프로세스 간 통신 (IPC)을 수행 할 수있는 간단한 방법을 제공한다.</target>
        </trans-unit>
        <trans-unit id="46d7df063ac5a3584ba0b77532f9778df1196547" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;repl&lt;/code&gt; module provides a REPL implementation that can be accessed using:</source>
          <target state="translated">&lt;code&gt;repl&lt;/code&gt; 모듈을 사용하여 액세스 할 수있는 REPL 구현을 제공합니다 :</target>
        </trans-unit>
        <trans-unit id="e36ba45cd5d963c9a70566790479735504ca487a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;role&lt;/code&gt; property can have following values:</source>
          <target state="translated">&lt;code&gt;role&lt;/code&gt; 속성은 다음 값을 가질 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="7c6608156889a4fa5318ff0313d856b3b6dc07c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;screen&lt;/code&gt; module emits the following events:</source>
          <target state="translated">&lt;code&gt;screen&lt;/code&gt; 모듈은 다음 이벤트를 방출 :</target>
        </trans-unit>
        <trans-unit id="dc991c240048cdabdab92374361368ae85195ed1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;screen&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;screen&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="bbeb11871421b95c101bb5d6fb82d63e08970826" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; module can be used to create new &lt;code&gt;Session&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 모듈은 새로운 만들 수 있습니다 &lt;code&gt;Session&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="3481326c81f1d35bcca80a22390f482c4aebc224" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="539734ec469f572dbdf5e703b654a370f3a5f521" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;session&lt;/code&gt; module has the following properties:</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; 모듈은 다음과 같은 속성이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="a2d0b0b61e564f6da294fad88765bd81248d6c52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shell&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;shell&lt;/code&gt; 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="d03d8fed6535206b4075d9c69e2a5ea3da4d9cde" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;shell&lt;/code&gt; module provides functions related to desktop integration.</source>
          <target state="translated">&lt;code&gt;shell&lt;/code&gt; 모듈은 데스크탑 통합 관련 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="302311f6e8c7212f24d35cc403438b58e3fd818e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;src&lt;/code&gt; attribute can also accept data URLs, such as &lt;code&gt;data:text/plain,Hello, world!&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;src&lt;/code&gt; 속성은 또한 다음과 같은 데이터 URL을 받아 들일 수 &lt;code&gt;data:text/plain,Hello, world!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c038f24be666c6c8decc27728f86fa426f53c877" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;state&lt;/code&gt; can be one of following:</source>
          <target state="translated">&lt;code&gt;state&lt;/code&gt; 다음 중 하나가 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="9b3563ff6b4bb91671c2c2f2985fa055d8348c11" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;systemPreferences&lt;/code&gt; object emits the following events:</source>
          <target state="translated">&lt;code&gt;systemPreferences&lt;/code&gt; 는 다음과 같은 이벤트를 방출 개체 :</target>
        </trans-unit>
        <trans-unit id="50fe0225c880579bccc99b1e28f378d94787ba86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;textured&lt;/code&gt; type adds metal gradient appearance (&lt;code&gt;NSTexturedBackgroundWindowMask&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;textured&lt;/code&gt; 형 금속 그라데이션 모양 (추가 &lt;code&gt;NSTexturedBackgroundWindowMask&lt;/code&gt; 을 ).</target>
        </trans-unit>
        <trans-unit id="80683066099d2b02bb828424b5205a6d8c073610" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;uploadData&lt;/code&gt; is an array of &lt;code&gt;UploadData&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;uploadData&lt;/code&gt; 는 배열이다 &lt;code&gt;UploadData&lt;/code&gt; 의 개체.</target>
        </trans-unit>
        <trans-unit id="dccd2aa264a7a22e9e34024147d6e051dda98a5d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; can be a remote address (e.g. &lt;code&gt;http://&lt;/code&gt;) or a path to a local HTML file using the &lt;code&gt;file://&lt;/code&gt; protocol.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 원격 주소 (예, 할 수 있습니다 &lt;code&gt;http://&lt;/code&gt; 또는 사용하여 로컬 HTML 파일의 경로) &lt;code&gt;file://&lt;/code&gt; 프로토콜입니다.</target>
        </trans-unit>
        <trans-unit id="a5d42dc1f925cb0dd172848fbd14de0098b1958c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url&lt;/code&gt; corresponds to the navigation entry requesting the client certificate and &lt;code&gt;callback&lt;/code&gt; can be called with an entry filtered from the list. Using &lt;code&gt;event.preventDefault()&lt;/code&gt; prevents the application from using the first certificate from the store.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 클라이언트 인증서 및 요청 탐색 항목에 해당 &lt;code&gt;callback&lt;/code&gt; 목록에서 필터링 항목으로 호출 할 수 있습니다. 사용 &lt;code&gt;event.preventDefault()&lt;/code&gt; 가게에서 첫 번째 인증서를 사용에서 응용 프로그램을 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ead3e68794e45920d2721fa26bd426ca485a37fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webFrame&lt;/code&gt; module has the following methods:</source>
          <target state="translated">&lt;code&gt;webFrame&lt;/code&gt; 의 모듈은 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="70bbea7daceb37cfdc1db49b4bc8447c74d9d422" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webview&lt;/code&gt; tag has the following attributes:</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; 태그의 속성은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="65a6f3875f9cda232f4f5eb3c5363c8e2778dfce" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;webview&lt;/code&gt; tag has the following methods:</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; 태그는 다음과 같은 방법이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="0a7eb9f238397f1aa98cdc508b599a5e9be67999" translate="yes" xml:space="preserve">
          <source>The API is based on the &lt;a href=&quot;https://developer.chrome.com/extensions/permissions&quot;&gt;Chromium permissions API&lt;/a&gt; and implements the same types of permissions.</source>
          <target state="translated">API는 &lt;a href=&quot;https://developer.chrome.com/extensions/permissions&quot;&gt;Chromium 권한 API를&lt;/a&gt; 기반으로 하며 동일한 유형의 권한을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="bf3b1592ea369c6aee1bcc228913fb6a081059b1" translate="yes" xml:space="preserve">
          <source>The API is only available in session's &lt;code&gt;will-download&lt;/code&gt; callback function. If user doesn't set the save path via the API, Electron will use the original routine to determine the save path(Usually prompts a save dialog).</source>
          <target state="translated">API는 세션의 &lt;code&gt;will-download&lt;/code&gt; 콜백 기능 에서만 사용할 수 있습니다 . 사용자가 API를 통해 저장 경로를 설정하지 않으면 Electron은 원래 루틴을 사용하여 저장 경로를 결정합니다 (보통 저장 대화 상자를 표시합니다).</target>
        </trans-unit>
        <trans-unit id="75917ee7ddf41b2b07e7b99872a198b129538a14" translate="yes" xml:space="preserve">
          <source>The API uses the Windows Registry and LSCopyDefaultHandlerForURLScheme internally.</source>
          <target state="translated">API는 Windows 레지스트리 및 LSCopyDefaultHandlerForURLScheme을 내부적으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3ec55df529521dd3ab286f51777a4f69e7c047b5" translate="yes" xml:space="preserve">
          <source>The API uses the Windows Registry and LSSetDefaultHandlerForURLScheme internally.</source>
          <target state="translated">API는 Windows 레지스트리 및 LSSetDefaultHandlerForURLScheme을 내부적으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6bcad7f559199b16f00560b8d1f569927742f9ea" translate="yes" xml:space="preserve">
          <source>The ASAR format was created primarily to improve performance on Windows... TODO</source>
          <target state="translated">ASAR 형식은 주로 Windows의 성능을 향상시키기 위해 만들어졌습니다 ... TODO</target>
        </trans-unit>
        <trans-unit id="679cc05bca3e1e8fd7b8d049e0a3d3d37f22503c" translate="yes" xml:space="preserve">
          <source>The C Run-time Library (CRT) is the part of the C++ Standard Library that incorporates the ISO C99 standard library. The Visual C++ libraries that implement the CRT support native code development, and both mixed native and managed code, and pure managed code for .NET development.</source>
          <target state="translated">CRT (C 런타임 라이브러리)는 ISO C99 표준 라이브러리를 통합하는 C ++ 표준 라이브러리의 일부입니다. CRT를 구현하는 Visual C ++ 라이브러리는 네이티브 코드 개발, 혼합 네이티브 및 관리 코드, .NET 개발을위한 순수 관리 코드를 모두 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a6ab9ef9b58e1d430a986bb1158e6a2dd7ba3b55" translate="yes" xml:space="preserve">
          <source>The C++ code uses a lot of Chromium's abstractions and types, so it's recommended to get acquainted with them. A good place to start is Chromium's &lt;a href=&quot;https://www.chromium.org/developers/coding-style/important-abstractions-and-data-structures&quot;&gt;Important Abstractions and Data Structures&lt;/a&gt; document. The document mentions some special types, scoped types (that automatically release their memory when going out of scope), logging mechanisms etc.</source>
          <target state="translated">C ++ 코드는 많은 Chromium의 추상화와 유형을 사용하므로 이에 익숙해지는 것이 좋습니다. 시작하기에 좋은 곳은 Chromium의 &lt;a href=&quot;https://www.chromium.org/developers/coding-style/important-abstractions-and-data-structures&quot;&gt;중요 추상화 및 데이터 구조&lt;/a&gt; 문서입니다. 이 문서에는 일부 특수 유형, 범위 유형 (범위를 벗어날 때 자동으로 메모리를 해제), 로깅 메커니즘 등이 언급되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d900f892d2734b5afc607fbf947c8bb0f3c75b5" translate="yes" xml:space="preserve">
          <source>The Chrome version of Electron is usually bumped within one or two weeks after a new stable Chrome version gets released. This estimate is not guaranteed and depends on the amount of work involved with upgrading.</source>
          <target state="translated">Chrome 버전의 Electron은 일반적으로 안정적인 새 Chrome 버전이 출시 된 후 1-2 주 내에 충돌합니다. 이 추정치는 보장되지 않으며 업그레이드와 관련된 작업량에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="11af2b2cbe42d313dcc02c8ba66bab4ba1e5ac86" translate="yes" xml:space="preserve">
          <source>The DOM's File interface provides abstraction around native files in order to let users work on native files directly with the HTML5 file API. Electron has added a &lt;code&gt;path&lt;/code&gt; attribute to the &lt;code&gt;File&lt;/code&gt; interface which exposes the file's real path on filesystem.</source>
          <target state="translated">DOM의 파일 인터페이스는 사용자가 HTML5 파일 API를 사용하여 기본 파일을 직접 작업 할 수 있도록 기본 파일에 대한 추상화를 제공합니다. Electron은 파일 시스템에 파일의 실제 경로를 노출시키는 &lt;code&gt;path&lt;/code&gt; 속성을 &lt;code&gt;File&lt;/code&gt; 인터페이스에 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="67424874b1092e40e703a68f4543158d74245d8a" translate="yes" xml:space="preserve">
          <source>The DevTools in an Electron browser window can only debug JavaScript that's executed in that window (i.e. the web pages). To debug JavaScript that's executed in the main process you will need to use an external debugger and launch Electron with the &lt;code&gt;--inspect&lt;/code&gt; or &lt;code&gt;--inspect-brk&lt;/code&gt; switch.</source>
          <target state="translated">Electron 브라우저 창의 DevTools는 해당 창에서 실행되는 JavaScript (예 : 웹 페이지) 만 디버깅 할 수 있습니다. 기본 프로세스에서 실행되는 JavaScript를 디버깅하려면 외부 디버거를 사용하고 &lt;code&gt;--inspect&lt;/code&gt; 또는 &lt;code&gt;--inspect-brk&lt;/code&gt; 스위치 를 사용하여 Electron을 시작해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c7697146094d0f2f337708d521985c083814a05c" translate="yes" xml:space="preserve">
          <source>The Dialog is opened from Electron's main thread. If you want to use the dialog object from a renderer process, remember to access it using the remote:</source>
          <target state="translated">대화 상자는 Electron의 메인 스레드에서 열립니다. 렌더러 프로세스에서 대화 상자 객체를 사용하려면 원격을 사용하여 대화 상자 객체에 액세스해야합니다.</target>
        </trans-unit>
        <trans-unit id="3408643c2b39f150bb6c8426902e0f24c6f93f45" translate="yes" xml:space="preserve">
          <source>The Electron account's credentials are kept by GitHub. &quot;Electron - NPM&quot; for the URL &quot;&lt;a href=&quot;https://www.npmjs.com/login%22&quot;&gt;https://www.npmjs.com/login&quot;&lt;/a&gt;.</source>
          <target state="translated">Electron 계정의 자격 증명은 GitHub에 의해 유지됩니다. URL의 - &quot;전자 NPM&quot; &quot; &lt;a href=&quot;https://www.npmjs.com/login%22&quot;&gt;https://www.npmjs.com/login&quot;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e683e1d7d3da98dfd59ff9337dfba925c2851a8b" translate="yes" xml:space="preserve">
          <source>The Electron repository has a few vendored dependencies, found in the &lt;a href=&quot;https://github.com/electron/electron/tree/master/vendor&quot;&gt;/vendor&lt;/a&gt; directory. Occasionally you might see a message like this when running &lt;code&gt;git status&lt;/code&gt;:</source>
          <target state="translated">Electron 저장소에는 &lt;a href=&quot;https://github.com/electron/electron/tree/master/vendor&quot;&gt;/ vendor&lt;/a&gt; 디렉토리 에있는 몇 가지 벤더 종속성이 있습니다. 때때로 &lt;code&gt;git status&lt;/code&gt; 를 실행할 때 다음과 같은 메시지가 표시 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="88820826bbbc3baa83a6828e19bc35fd6b3eb2e9" translate="yes" xml:space="preserve">
          <source>The Python version we are using now is Python 2.7.</source>
          <target state="translated">현재 사용중인 Python 버전은 Python 2.7입니다.</target>
        </trans-unit>
        <trans-unit id="91f690d466597ab142abf88aeb48da2b29abd23b" translate="yes" xml:space="preserve">
          <source>The Unity DE also has a similar feature that allows you to specify the progress bar in the launcher.</source>
          <target state="translated">Unity DE에는 또한 런처에서 진행률 표시 줄을 지정할 수있는 유사한 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d37923186c114f05a55a85afbb9ce8bd82d595e5" translate="yes" xml:space="preserve">
          <source>The Windbg symbol path is configured with a string value delimited with asterisk characters. To use only the Electron symbol server, add the following entry to your symbol path (&lt;strong&gt;Note:&lt;/strong&gt; you can replace &lt;code&gt;c:\code\symbols&lt;/code&gt; with any writable directory on your computer, if you'd prefer a different location for downloaded symbols):</source>
          <target state="translated">Windbg 심볼 경로는 별표 문자로 구분 된 문자열 값으로 구성됩니다. Electron 기호 서버 만 사용하려면 기호 경로에 다음 항목을 추가하십시오 ( &lt;strong&gt;참고 : &lt;/strong&gt; &lt;code&gt;c:\code\symbols&lt;/code&gt; 를 컴퓨터의 쓰기 가능한 디렉토리로 대체 할 수 있습니다 ( 다운로드 한 기호의 다른 위치를 선호하는 경우)).</target>
        </trans-unit>
        <trans-unit id="11e20ac73f33051ef798fc830d5c811160f5dc31" translate="yes" xml:space="preserve">
          <source>The Windows 10 SDK, &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk&quot;&gt;downloadable here&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.microsoft.com/en-us/windows/downloads/windows-10-sdk&quot;&gt;여기&lt;/a&gt; 에서 다운로드 할 수 있는 Windows 10 SDK</target>
        </trans-unit>
        <trans-unit id="e2b1285d4772ecec63e27725c792888155a3349f" translate="yes" xml:space="preserve">
          <source>The above would only run spec modules matching &lt;code&gt;menu&lt;/code&gt;, which is useful for anyone who's working on tests that would otherwise be at the very end of the testing cycle.</source>
          <target state="translated">위의 코드는 spec 모듈 일치 &lt;code&gt;menu&lt;/code&gt; 만 실행 합니다 . 이는 테스트주기가 끝날 때 테스트를 수행하는 모든 사람에게 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c625b7623672f8fd22e91c0510e4c7196a733295" translate="yes" xml:space="preserve">
          <source>The app will immediately be paused, since Electron sets the app's name on launch:</source>
          <target state="translated">Electron은 시작시 앱의 이름을 설정하므로 앱이 즉시 일시 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="fb3a3538bbcaba9543e6108eb12d6e3226594901" translate="yes" xml:space="preserve">
          <source>The architecture of Pepper Flash plugin has to match Electron's one. On Windows, a common error is to use 32bit version of Flash plugin against 64bit version of Electron.</source>
          <target state="translated">Pepper Flash 플러그인의 아키텍처는 Electron의 아키텍처와 일치해야합니다. Windows에서 일반적인 오류는 64 비트 버전의 Electron에 대해 32 비트 버전의 Flash 플러그인을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a0371f8e990439f7a02a892607be6c6c1aa14ca1" translate="yes" xml:space="preserve">
          <source>The architecture of the module has to match Electron's architecture (ia32 or x64).</source>
          <target state="translated">모듈의 아키텍처는 Electron의 아키텍처 (ia32 또는 x64)와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="f58f3f45afd47bdf977f9729c58d77c8908ea3c8" translate="yes" xml:space="preserve">
          <source>The archives can not be modified so all Node APIs that can modify files will not work with &lt;code&gt;asar&lt;/code&gt; archives.</source>
          <target state="translated">아카이브를 수정할 수 없으므로 파일을 수정할 수있는 모든 노드 API가 &lt;code&gt;asar&lt;/code&gt; 아카이브에서 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="32a060018e068697b5647ac80282c2a9d09c40be" translate="yes" xml:space="preserve">
          <source>The basic rule is: if a module is &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphical_user_interface&quot;&gt;GUI&lt;/a&gt; or low-level system related, then it should be only available in the main process. You need to be familiar with the concept of &lt;a href=&quot;../tutorial/quick-start#main-process&quot;&gt;main process vs. renderer process&lt;/a&gt; scripts to be able to use those modules.</source>
          <target state="translated">기본 규칙은 다음과 같습니다. 모듈이 &lt;a href=&quot;https://en.wikipedia.org/wiki/Graphical_user_interface&quot;&gt;GUI&lt;/a&gt; 또는 하위 시스템과 관련된 경우 기본 프로세스에서만 사용할 수 있습니다. 이러한 모듈을 사용하려면 &lt;a href=&quot;../tutorial/quick-start#main-process&quot;&gt;기본 프로세스 대 렌더러 프로세스&lt;/a&gt; 스크립트 의 개념을 잘 알고 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="ebdd3e402b9b0ecb9ed69476766e0f23e9710e04" translate="yes" xml:space="preserve">
          <source>The beta is considered &lt;em&gt;generally stable&lt;/em&gt; and it is published again as a non-beta under &lt;code&gt;2.0.0&lt;/code&gt;.</source>
          <target state="translated">베타는 &lt;em&gt;일반적으로 안정적인&lt;/em&gt; 것으로 간주되며 &lt;code&gt;2.0.0&lt;/code&gt; 이하에서 비 베타로 다시 게시됩니다 .</target>
        </trans-unit>
        <trans-unit id="3a40a3921de74217cab0e0ecf818211585ec95e3" translate="yes" xml:space="preserve">
          <source>The bootstrap script will download all necessary build dependencies and create the build project files. Notice that we're using &lt;a href=&quot;https://ninja-build.org/&quot;&gt;ninja&lt;/a&gt; to build Electron so there is no Xcode project generated.</source>
          <target state="translated">부트 스트랩 스크립트는 필요한 모든 빌드 종속성을 다운로드하고 빌드 프로젝트 파일을 만듭니다. 우리는 Electron을 빌드하기 위해 &lt;a href=&quot;https://ninja-build.org/&quot;&gt;닌자&lt;/a&gt; 를 사용 하고 있으므로 Xcode 프로젝트가 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e25ed6372fd4ca19b4760e84e58fbda285fd4119" translate="yes" xml:space="preserve">
          <source>The bootstrap script will download all necessary build dependencies and create the build project files. Notice that we're using &lt;code&gt;ninja&lt;/code&gt; to build Electron so there is no Visual Studio project generated.</source>
          <target state="translated">부트 스트랩 스크립트는 필요한 모든 빌드 종속성을 다운로드하고 빌드 프로젝트 파일을 만듭니다. 우리는 Electron을 빌드하기 위해 &lt;code&gt;ninja&lt;/code&gt; 를 사용 하고 있으므로 Visual Studio 프로젝트는 생성되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c95202c1d36a2764e88f2ccd6ce4d585cf9750b7" translate="yes" xml:space="preserve">
          <source>The bootstrap script will download all necessary build dependencies and create the build project files. You must have Python 2.7.x for the script to succeed. Downloading certain files can take a long time. Notice that we are using &lt;code&gt;ninja&lt;/code&gt; to build Electron so there is no &lt;code&gt;Makefile&lt;/code&gt; generated.</source>
          <target state="translated">부트 스트랩 스크립트는 필요한 모든 빌드 종속성을 다운로드하고 빌드 프로젝트 파일을 만듭니다. 스크립트가 성공하려면 Python 2.7.x가 있어야합니다. 특정 파일을 다운로드하는 데 시간이 오래 걸릴 수 있습니다. &lt;code&gt;ninja&lt;/code&gt; 를 사용하여 Electron을 빌드하고 있으므로 &lt;code&gt;Makefile&lt;/code&gt; 이 생성 되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="79d1572aa8488a3529ae6511d651a6a0d1000c3f" translate="yes" xml:space="preserve">
          <source>The built executable will be under &lt;code&gt;./out/Default&lt;/code&gt;:</source>
          <target state="translated">빌드 된 실행 파일은 &lt;code&gt;./out/Default&lt;/code&gt; 아래에 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87a6ded8f0d9ef25e412395b22c18a38e3309740" translate="yes" xml:space="preserve">
          <source>The built-in modules in the main process are added as getters in the &lt;code&gt;remote&lt;/code&gt; module, so you can use them directly like the &lt;code&gt;electron&lt;/code&gt; module.</source>
          <target state="translated">기본 프로세스의 내장 모듈은 &lt;code&gt;remote&lt;/code&gt; 모듈 에서 게터로 추가 되므로 &lt;code&gt;electron&lt;/code&gt; 모듈 처럼 직접 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cacf868ee4dce7e4fc278f0df03ca45ef1cc5b24" translate="yes" xml:space="preserve">
          <source>The cache contains the version's official zip file as well as a checksum, stored as a text file. A typical cache might look like this:</source>
          <target state="translated">캐시에는 버전의 공식 zip 파일과 텍스트 파일로 저장된 체크섬이 포함되어 있습니다. 일반적인 캐시는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4635ce3be0aef8aff745b8c96e66bf18b41fb7aa" translate="yes" xml:space="preserve">
          <source>The command line switches have to be passed before the &lt;code&gt;ready&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt; module gets emitted, and the page that uses this plugin must have plugin enabled.</source>
          <target state="translated">&lt;code&gt;app&lt;/code&gt; 모듈 의 &lt;code&gt;ready&lt;/code&gt; 이벤트 가 발생 하기 전에 명령 행 스위치를 전달 해야하며이 플러그인을 사용하는 페이지에서 플러그인이 사용 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="bb547774a63521a187ad3bb21ddd86419474ac03" translate="yes" xml:space="preserve">
          <source>The crash reporter will send the following data to the &lt;code&gt;submitURL&lt;/code&gt; as a &lt;code&gt;multipart/form-data&lt;/code&gt;&lt;code&gt;POST&lt;/code&gt;:</source>
          <target state="translated">충돌 리포터는 다음 데이터를 &lt;code&gt;multipart/form-data&lt;/code&gt; &lt;code&gt;POST&lt;/code&gt; 로 &lt;code&gt;submitURL&lt;/code&gt; 에 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="0f40ef1f6e4ccf3e4bfe888ec95e68c123a4ab11" translate="yes" xml:space="preserve">
          <source>The creation of the &lt;code&gt;BrowserWindow&lt;/code&gt; is customizable via &lt;code&gt;WebContents&lt;/code&gt;'s &lt;code&gt;new-window&lt;/code&gt; event.</source>
          <target state="translated">의 창조 &lt;code&gt;BrowserWindow&lt;/code&gt; 을 통해 사용자 정의 할 수 있습니다 &lt;code&gt;WebContents&lt;/code&gt; 의 &lt;code&gt;new-window&lt;/code&gt; 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="a84166f19e3821524c95b826a488cfad4a943b88" translate="yes" xml:space="preserve">
          <source>The current absolute position of the mouse pointer.</source>
          <target state="translated">마우스 포인터의 현재 절대 위치</target>
        </trans-unit>
        <trans-unit id="ec3240c3c12bbda24aa64960666921821da1f01c" translate="yes" xml:space="preserve">
          <source>The custom dock is commonly used to add shortcuts to tasks the user wouldn't want to open the whole app window for.</source>
          <target state="translated">사용자 정의 도크는 일반적으로 사용자가 전체 앱 창을 열고 싶지 않은 작업에 바로 가기를 추가하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e8cb86baaffbfe782d928d94296401cd40b1132c" translate="yes" xml:space="preserve">
          <source>The default behavior is to cancel all authentications, to override this you should prevent the default behavior with &lt;code&gt;event.preventDefault()&lt;/code&gt; and call &lt;code&gt;callback(username, password)&lt;/code&gt; with the credentials.</source>
          <target state="translated">기본 동작은 모든 인증을 취소하는 것입니다.이를 무시하려면 &lt;code&gt;event.preventDefault()&lt;/code&gt; 의 기본 동작을 방지 하고 자격 증명으로 &lt;code&gt;callback(username, password)&lt;/code&gt; 을 호출 해야합니다.</target>
        </trans-unit>
        <trans-unit id="eed37c59390ece33f402535de65017db6959cb55" translate="yes" xml:space="preserve">
          <source>The default building configuration is targeted for major desktop Linux distributions. To build for a specific distribution or device, the following information may help you.</source>
          <target state="translated">기본 건물 구성은 주요 데스크탑 Linux 배포판을 대상으로합니다. 특정 배포 또는 장치를 구축하려면 다음 정보가 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a836089b20b522142ba336af0ffba1b7ea6756df" translate="yes" xml:space="preserve">
          <source>The difference between &lt;code&gt;getBitmap()&lt;/code&gt; and &lt;code&gt;toBitmap()&lt;/code&gt; is, &lt;code&gt;getBitmap()&lt;/code&gt; does not copy the bitmap data, so you have to use the returned Buffer immediately in current event loop tick, otherwise the data might be changed or destroyed.</source>
          <target state="translated">차이 &lt;code&gt;getBitmap()&lt;/code&gt; 와 &lt;code&gt;toBitmap()&lt;/code&gt; 이다 &lt;code&gt;getBitmap()&lt;/code&gt; 당신이 현재의 이벤트 루프 틱 즉시 반환 된 버퍼를 사용할 필요가 있으므로, 그렇지 않으면 데이터가 변경되거나 파괴 될 수있는 비트 맵 데이터를 복사하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9293338eb4ef937a2029304cfc21c780ed35545b" translate="yes" xml:space="preserve">
          <source>The easiest way to use this service is by installing &lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;update-electron-app&lt;/a&gt;, a Node.js module preconfigured for use with update.electronjs.org.</source>
          <target state="translated">이 서비스를 사용하는 가장 쉬운 방법은 update.electronjs.org와 함께 사용하도록 사전 구성된 Node.js 모듈 인 &lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;update-electron-app&lt;/a&gt; 를 설치 하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4e0a6a32dd6f0c1918523c114e06c2c6ed8cb2e1" translate="yes" xml:space="preserve">
          <source>The environment variables have to be set when executing the &lt;code&gt;bootstrap.py&lt;/code&gt; script, it won't work in the &lt;code&gt;build.py&lt;/code&gt; script.</source>
          <target state="translated">&lt;code&gt;bootstrap.py&lt;/code&gt; 스크립트를 실행할 때 환경 변수를 설정해야 하며 &lt;code&gt;build.py&lt;/code&gt; 스크립트 에서 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="1775a2ba70be76e5cd9f2d2b5d87922c0e21f488" translate="yes" xml:space="preserve">
          <source>The existing webview will see the &lt;code&gt;destroy&lt;/code&gt; event and will then create a new webContents when a new url is loaded.</source>
          <target state="translated">기존 webview는 &lt;code&gt;destroy&lt;/code&gt; 이벤트 를보고 새 URL이로드 될 때 새 webContents를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="45cd3e807c7fd694f209776f14d4d85d8e1c31c1" translate="yes" xml:space="preserve">
          <source>The extension will be remembered so you only need to call this API once, this API is not for programming use. If you try to add an extension that has already been loaded, this method will not return and instead log a warning to the console.</source>
          <target state="translated">확장명을 기억하므로이 API를 한 번만 호출하면되며이 API는 프로그래밍 용이 아닙니다. 이미로드 된 확장을 추가하려고하면이 메서드는 콘솔에 경고를 반환하지 않고 대신 기록합니다.</target>
        </trans-unit>
        <trans-unit id="807d917e174965f29f52692cbaf299ca8879915e" translate="yes" xml:space="preserve">
          <source>The files in &lt;code&gt;/chromium_src&lt;/code&gt; tend to be pieces of Chromium that aren't part of the content layer. For example to implement Pepper API, we need some wiring similar to what official Chrome does. We could have built the relevant sources as a part of &lt;a href=&quot;../glossary#libchromiumcontent&quot;&gt;libcc&lt;/a&gt; but most often we don't require all the features (some tend to be proprietary, analytics stuff) so we took parts of the code. These could have easily been patches in libcc, but at the time when these were written the goal of libcc was to maintain very minimal patches and chromium_src changes tend to be big ones. Also, note that these patches can never be upstreamed unlike other libcc patches we maintain now.</source>
          <target state="translated">&lt;code&gt;/chromium_src&lt;/code&gt; 의 파일 은 콘텐츠 계층에 속하지 않는 Chromium 조각 인 경향이 있습니다. 예를 들어 Pepper API를 구현하려면 공식 Chrome과 유사한 배선이 필요합니다. 우리는 &lt;a href=&quot;../glossary#libchromiumcontent&quot;&gt;libcc&lt;/a&gt; 의 일부로 관련 소스를 구축 할 수 있었지만 대부분의 경우 모든 기능 (일부는 독점적이며 분석적인 경향이 있음)을 요구하지 않으므로 코드의 일부를 사용했습니다. 이것들은 libcc에서 쉽게 패치되었을 수 있지만, 이것들이 쓰여질 당시 libcc의 목표는 최소한의 패치를 유지하는 것이었고 chromium_src 변경은 큰 경향이 있습니다. 또한 지금 유지 관리하는 다른 libcc 패치와 달리 이러한 패치는 업스트림 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="457233dd3e65c7e4b1a26409a273fd1b1bafea77" translate="yes" xml:space="preserve">
          <source>The first 3 options are trace recording modes and hence mutually exclusive. If more than one trace recording modes appear in the &lt;code&gt;traceOptions&lt;/code&gt; string, the last one takes precedence. If none of the trace recording modes are specified, recording mode is &lt;code&gt;record-until-full&lt;/code&gt;.</source>
          <target state="translated">처음 3 가지 옵션은 트레이스 레코딩 모드이므로 상호 배타적입니다. &lt;code&gt;traceOptions&lt;/code&gt; 문자열 에 둘 이상의 추적 기록 모드가 나타나면 마지막 모드 가 우선합니다. 추적 기록 모드를 지정하지 않은 경우 기록 모드는 &lt;code&gt;record-until-full&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0efe33d64ae8fc2ca88edad27924431ab14a57de" translate="yes" xml:space="preserve">
          <source>The first line should:</source>
          <target state="translated">첫 번째 줄은 :</target>
        </trans-unit>
        <trans-unit id="2b24538741e2c956585d562cdd1ad703db214882" translate="yes" xml:space="preserve">
          <source>The first step is to go to the &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;Releases&lt;/a&gt; page and delete the corrupted binaries with the &lt;code&gt;SHASUMS256.txt&lt;/code&gt; checksum file.</source>
          <target state="translated">첫 번째 단계는 &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;릴리스&lt;/a&gt; 페이지 로 이동 하여 &lt;code&gt;SHASUMS256.txt&lt;/code&gt; 체크섬 파일로 손상된 바이너리를 삭제하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="96ee1eed9747359cdb30aeeed257bcc687dedd46" translate="yes" xml:space="preserve">
          <source>The following CSP will allow Electron to execute scripts from the current website and from &lt;code&gt;apis.mydomain.com&lt;/code&gt;.</source>
          <target state="translated">다음 CSP를 통해 Electron은 현재 웹 사이트 및 &lt;code&gt;apis.mydomain.com&lt;/code&gt; 에서 스크립트를 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="863e74b210263b70d8d1d74644d55dd0fcefdbcc" translate="yes" xml:space="preserve">
          <source>The following DOM events are available to the &lt;code&gt;webview&lt;/code&gt; tag:</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; 태그에 사용 가능한 DOM 이벤트는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="13f9c4bc3e3eee333a74f8c923abc52e950ddc87" translate="yes" xml:space="preserve">
          <source>The following additional roles are available on &lt;em&gt;macOS&lt;/em&gt;:</source>
          <target state="translated">&lt;em&gt;macOS&lt;/em&gt; 에서는 다음과 같은 추가 역할을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c2973ab61031b504aa1fcecc8e49986ff3a8af8f" translate="yes" xml:space="preserve">
          <source>The following environment variables are intended primarily for development and debugging purposes.</source>
          <target state="translated">다음 환경 변수는 주로 개발 및 디버깅 목적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5ac3260cead16a78938f601530def24b4ea4ac92" translate="yes" xml:space="preserve">
          <source>The following environment variables are intended primarily for use at runtime in packaged Electron applications.</source>
          <target state="translated">다음 환경 변수는 패키지 된 Electron 응용 프로그램에서 런타임에 주로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6d46353d4da755261f02826cc4e562d2285a35e8" translate="yes" xml:space="preserve">
          <source>The following events are available on instances of &lt;code&gt;Cookies&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Cookies&lt;/code&gt; 인스턴스에서 다음 이벤트를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="54c9e2a9a0a73dc882520d10b2ca079a0beef36f" translate="yes" xml:space="preserve">
          <source>The following events are available on instances of &lt;code&gt;Session&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; 인스턴스에서 다음 이벤트를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b034f553ec80ef9a74ec658af3ef9d311b4f26ea" translate="yes" xml:space="preserve">
          <source>The following example code forwards all log messages to the embedder's console without regard for log level or other properties.</source>
          <target state="translated">다음 예제 코드는 로그 수준 또는 기타 속성에 관계없이 모든 로그 메시지를 임 베더 콘솔에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="412f6394578caf90d6f08e305bc45dd7a499eb0c" translate="yes" xml:space="preserve">
          <source>The following example code navigates the &lt;code&gt;webview&lt;/code&gt; to &lt;code&gt;about:blank&lt;/code&gt; when the guest attempts to close itself.</source>
          <target state="translated">다음 예제 코드 는 게스트가 자신을 닫으려고 할 때 &lt;code&gt;webview&lt;/code&gt; 를 &lt;code&gt;about:blank&lt;/code&gt; 로 탐색합니다 .</target>
        </trans-unit>
        <trans-unit id="e297c13288b5494f48c892304c4685e142c2f359" translate="yes" xml:space="preserve">
          <source>The following example code opens the new url in system's default browser.</source>
          <target state="translated">다음 예제 코드는 시스템의 기본 브라우저에서 새 URL을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="96c5cfe0246d651a35fd511efd2ba0f3ed22db5f" translate="yes" xml:space="preserve">
          <source>The following example shows how to capture video from a desktop window whose title is &lt;code&gt;Electron&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 제목이 &lt;code&gt;Electron&lt;/code&gt; 인 데스크탑 창에서 비디오를 캡처하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4a5e64570d57b68bcc11e2010a4253a965aa1f32" translate="yes" xml:space="preserve">
          <source>The following example shows how to quit the application when the last window is closed:</source>
          <target state="translated">다음 예제는 마지막 창이 닫힐 때 응용 프로그램을 종료하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3f6a87feccae153d14a8090ee5f48f12c447861c" translate="yes" xml:space="preserve">
          <source>The following example shows how to write a string to the clipboard:</source>
          <target state="translated">다음 예제는 클립 보드에 문자열을 쓰는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="81c6031b5e2c96305bec9706b7c67d3750fcd099" translate="yes" xml:space="preserve">
          <source>The following is a non-exhaustive list of why you may consider using the &lt;code&gt;net&lt;/code&gt; module instead of the native Node.js modules:</source>
          <target state="translated">다음은 기본 Node.js 모듈 대신 &lt;code&gt;net&lt;/code&gt; 모듈을 사용하는 것을 고려할 수있는 전체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="b6487e58f7fd63ed2be0c3a2a9c726a501b79eb1" translate="yes" xml:space="preserve">
          <source>The following is an example of automatically submitting a crash report to a remote server:</source>
          <target state="translated">다음은 충돌 보고서를 원격 서버에 자동으로 제출하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="e2460efd3b194a8bb68bf2b7e9f8cab9d619bfca" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of &lt;code&gt;Cookies&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Cookies&lt;/code&gt; 인스턴스에서 다음 방법을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f4edeb192e26fd5b685c6ec571fa25126485efea" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of &lt;code&gt;Session&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; 인스턴스에서 다음 방법을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="41bcf5a62a573a8cc5fb83b2b0ca3023bc5643f8" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of &lt;code&gt;WebRequest&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;WebRequest&lt;/code&gt; 인스턴스에서 다음 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="86154d83bccd7a4b57c68d8cd6f90d9c971f95d4" translate="yes" xml:space="preserve">
          <source>The following methods are available on instances of the &lt;code&gt;NativeImage&lt;/code&gt; class:</source>
          <target state="translated">&lt;code&gt;NativeImage&lt;/code&gt; 클래스의 인스턴스에서 다음 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9a3b5c7545a0293b6358e101905e854c70f4102a" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;MenuItem&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;MenuItem&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d8656a694792848f68ade1e927e17424b474569c" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;Session&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Session&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="def49f62a446c81186a380e2a1dce3115758979c" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBar&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBar&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bb57d90554803861a88a2753b989f061a9f5dc27" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarButton&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarButton&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b20f464fbc40e27073060beed56e38762bf2ec5f" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarColorPicker&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarColorPicker&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3ace2633b47d31b77187bb2daeb06860f123cc84" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarLabel&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarLabel&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="db9bb37fb754d6983049c81473d1ed7ee83c0529" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarPopover&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarPopover&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0ae481cb3e6e682837041ef8635daf8423012551" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarScrubber&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarScrubber&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cf2c708351aaff2edf23f053e2722905afcda326" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarSegmentedControl&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarSegmentedControl&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="195378df2cd4e2ad758131138b1fef6f60754314" translate="yes" xml:space="preserve">
          <source>The following properties are available on instances of &lt;code&gt;TouchBarSlider&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TouchBarSlider&lt;/code&gt; 인스턴스에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="66529044801589f67c9319b12f81a0025eb3daa7" translate="yes" xml:space="preserve">
          <source>The following steps introduce a simple way to submit your app to Mac App Store. However, these steps do not ensure your app will be approved by Apple; you still need to read Apple's &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/AppDistributionGuide/SubmittingYourApp/SubmittingYourApp.html&quot;&gt;Submitting Your App&lt;/a&gt; guide on how to meet the Mac App Store requirements.</source>
          <target state="translated">다음 단계는 Mac App Store에 앱을 제출하는 간단한 방법을 소개합니다. 그러나 이러한 단계는 앱이 Apple의 승인을받는 것은 아닙니다. 여전히 Mac App Store 요구 사항을 충족시키는 방법에 대한 Apple의 &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/AppDistributionGuide/SubmittingYourApp/SubmittingYourApp.html&quot;&gt;앱 제출&lt;/a&gt; 안내서 를 읽어야 합니다.</target>
        </trans-unit>
        <trans-unit id="893c7bb1e6d91b53055e3852294044b7cb67b593" translate="yes" xml:space="preserve">
          <source>The installer generated with Squirrel will create a shortcut icon with an &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;Application User Model ID&lt;/a&gt; in the format of &lt;code&gt;com.squirrel.PACKAGE_ID.YOUR_EXE_WITHOUT_DOT_EXE&lt;/code&gt;, examples are &lt;code&gt;com.squirrel.slack.Slack&lt;/code&gt; and &lt;code&gt;com.squirrel.code.Code&lt;/code&gt;. You have to use the same ID for your app with &lt;code&gt;app.setAppUserModelId&lt;/code&gt; API, otherwise Windows will not be able to pin your app properly in task bar.</source>
          <target state="translated">Squirrel로 생성 된 설치 &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;프로그램&lt;/a&gt; 은 &lt;code&gt;com.squirrel.PACKAGE_ID.YOUR_EXE_WITHOUT_DOT_EXE&lt;/code&gt; 형식의 애플리케이션 사용자 모델 ID 로 바로 가기 아이콘을 작성합니다 ( 예 : &lt;code&gt;com.squirrel.slack.Slack&lt;/code&gt; 및 &lt;code&gt;com.squirrel.code.Code&lt;/code&gt; ) . &lt;code&gt;app.setAppUserModelId&lt;/code&gt; API 와 함께 앱에 동일한 ID를 사용해야합니다 . 그렇지 않으면 Windows가 작업 표시 줄에서 앱을 올바르게 고정 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d90ed43ccd133ad2a69189c543d458bb4158ae61" translate="yes" xml:space="preserve">
          <source>The latest three release branches are supported by the Electron team. For example, if the latest release is 2.0.x, then the 2-0-x series is supported, as are the two previous release series 1-7-x and 1-8-x.</source>
          <target state="translated">Electron 팀은 최신 3 개의 릴리스 브랜치를 지원합니다. 예를 들어, 최신 릴리스가 2.0.x 인 경우 2 개의 이전 릴리스 시리즈 1-7-x 및 1-8-x와 같이 2-0-x 시리즈가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="873a6e801edc60a1c32293c8a502234ca368cf39" translate="yes" xml:space="preserve">
          <source>The main process creates web pages by creating &lt;code&gt;BrowserWindow&lt;/code&gt; instances. Each &lt;code&gt;BrowserWindow&lt;/code&gt; instance runs the web page in its own renderer process. When a &lt;code&gt;BrowserWindow&lt;/code&gt; instance is destroyed, the corresponding renderer process is also terminated.</source>
          <target state="translated">기본 프로세스는 &lt;code&gt;BrowserWindow&lt;/code&gt; 인스턴스를 만들어 웹 페이지를 만듭니다 . 각 &lt;code&gt;BrowserWindow&lt;/code&gt; 인스턴스는 자체 렌더러 프로세스에서 웹 페이지를 실행합니다. 때 &lt;code&gt;BrowserWindow&lt;/code&gt; 의 인스턴스가 파괴되어, 해당 묘화 프로세스는 종료된다.</target>
        </trans-unit>
        <trans-unit id="3e57d2e2088d6bf8c5aa05e4f6662ae76ff4fa5e" translate="yes" xml:space="preserve">
          <source>The main process handles it by listening for &lt;code&gt;channel&lt;/code&gt; with &lt;a href=&quot;ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; module, and replies by setting &lt;code&gt;event.returnValue&lt;/code&gt;.</source>
          <target state="translated">기본 프로세스는 &lt;a href=&quot;ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt; 모듈 로 &lt;code&gt;channel&lt;/code&gt; 을 수신하여 처리하고 &lt;code&gt;event.returnValue&lt;/code&gt; 를 설정하여 응답합니다 .</target>
        </trans-unit>
        <trans-unit id="099f6cac6dff60632e157c5d20a0c768e8532de9" translate="yes" xml:space="preserve">
          <source>The main process handles it by listening for &lt;code&gt;channel&lt;/code&gt; with &lt;a href=&quot;ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">기본 프로세스는 &lt;a href=&quot;ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; &lt;/a&gt; 모듈 로 &lt;code&gt;channel&lt;/code&gt; 을 수신하여 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="8609c822b7c373ca2706e01a9ff9173dcf0b4260" translate="yes" xml:space="preserve">
          <source>The main process manages all web pages and their corresponding renderer processes. Each renderer process is isolated and only cares about the web page running in it.</source>
          <target state="translated">기본 프로세스는 모든 웹 페이지와 해당 렌더러 프로세스를 관리합니다. 각 렌더러 프로세스는 격리되어 있으며 해당 웹 페이지에서 실행중인 웹 페이지 만 처리합니다.</target>
        </trans-unit>
        <trans-unit id="11d23cd92e3578986785fa874e0009a06841da0b" translate="yes" xml:space="preserve">
          <source>The main process script is just like a normal Node.js script:</source>
          <target state="translated">기본 프로세스 스크립트는 일반적인 Node.js 스크립트와 같습니다.</target>
        </trans-unit>
        <trans-unit id="30517931a8f87b0311fae62c14d68aeb359fd488" translate="yes" xml:space="preserve">
          <source>The main process, commonly a file named &lt;code&gt;main.js&lt;/code&gt;, is the entry point to every Electron app. It controls the life of the app, from open to close. It also manages native elements such as the Menu, Menu Bar, Dock, Tray, etc. The main process is responsible for creating each new renderer process in the app. The full Node API is built in.</source>
          <target state="translated">일반적으로 &lt;code&gt;main.js&lt;/code&gt; 라는 파일 인 기본 프로세스 는 모든 Electron 앱의 진입 점입니다. 오픈에서 클로즈까지 앱의 수명을 제어합니다. 또한 메뉴, 메뉴 막대, 도크, 트레이 등과 같은 기본 요소를 관리합니다. 기본 프로세스는 앱에서 각각의 새 렌더러 프로세스를 생성합니다. 전체 노드 API가 내장되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e5bb90d65721405e2b6798587777de6453c9216" translate="yes" xml:space="preserve">
          <source>The method will also not return if the extension's manifest is missing or incomplete.</source>
          <target state="translated">확장의 매니페스트가 없거나 불완전한 경우이 메서드는 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1263854ac164eefd7b257aa2b5a4652d6be04b02" translate="yes" xml:space="preserve">
          <source>The methods of &lt;code&gt;WebRequest&lt;/code&gt; accept an optional &lt;code&gt;filter&lt;/code&gt; and a &lt;code&gt;listener&lt;/code&gt;. The &lt;code&gt;listener&lt;/code&gt; will be called with &lt;code&gt;listener(details)&lt;/code&gt; when the API's event has happened. The &lt;code&gt;details&lt;/code&gt; object describes the request. Passing &lt;code&gt;null&lt;/code&gt; as &lt;code&gt;listener&lt;/code&gt; will unsubscribe from the event.</source>
          <target state="translated">&lt;code&gt;WebRequest&lt;/code&gt; 의 메소드 는 선택적 &lt;code&gt;filter&lt;/code&gt; 와 &lt;code&gt;listener&lt;/code&gt; 승인합니다 . &lt;code&gt;listener&lt;/code&gt; 호출됩니다 &lt;code&gt;listener(details)&lt;/code&gt; API의 이벤트가 발생했을 때. &lt;code&gt;details&lt;/code&gt; 객체는 요청에 대해 설명합니다. &lt;code&gt;listener&lt;/code&gt; &lt;code&gt;null&lt;/code&gt; 을 전달 하면 이벤트 구독이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="02dfe6ee6ff7ce4a1b723feacfd9b47eeb84e18e" translate="yes" xml:space="preserve">
          <source>The module works like &lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt;&lt;code&gt;electron-winstaller&lt;/code&gt;&lt;/a&gt; and similar modules in that its scope is limited to building snap packages. You can install it with:</source>
          <target state="translated">이 모듈은 &lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt; &lt;code&gt;electron-winstaller&lt;/code&gt; &lt;/a&gt; 패키지와 유사한 모듈 처럼 작동 하며 그 범위는 스냅 패키지 작성으로 제한됩니다. 다음과 같이 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb8604cf10f9ac649333a12bb463d49c84a13cf9" translate="yes" xml:space="preserve">
          <source>The most common case is to use template images for a menu bar icon so it can adapt to both light and dark menu bars.</source>
          <target state="translated">가장 일반적인 경우는 메뉴 막대 아이콘에 템플릿 이미지를 사용하여 밝은 메뉴 막대와 어두운 메뉴 막대 모두에 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b94e875d0b85466a93df9fb0fac2134d2b4034a" translate="yes" xml:space="preserve">
          <source>The most comprehensive tool to debug individual renderer processes is the Chromium Developer Toolset. It is available for all renderer processes, including instances of &lt;code&gt;BrowserWindow&lt;/code&gt;, &lt;code&gt;BrowserView&lt;/code&gt;, and &lt;code&gt;WebView&lt;/code&gt;. You can open them programmatically by calling the &lt;code&gt;openDevTools()&lt;/code&gt; API on the &lt;code&gt;webContents&lt;/code&gt; of the instance:</source>
          <target state="translated">개별 렌더러 프로세스를 디버깅하는 가장 포괄적 인 도구는 Chromium Developer Toolset입니다. &lt;code&gt;BrowserWindow&lt;/code&gt; , &lt;code&gt;BrowserView&lt;/code&gt; 및 &lt;code&gt;WebView&lt;/code&gt; 인스턴스를 포함한 모든 렌더러 프로세스에 사용할 수 있습니다 . 인스턴스 의 &lt;code&gt;webContents&lt;/code&gt; 에서 &lt;code&gt;openDevTools()&lt;/code&gt; API를 호출하여 프로그래밍 방식으로 열 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9279298928bc0dfa7b7dabeac0471502dfbbce67" translate="yes" xml:space="preserve">
          <source>The name of the extension is returned by &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt;, and you can pass the name of the extension to the &lt;code&gt;BrowserWindow.removeDevToolsExtension&lt;/code&gt; API to unload it.</source>
          <target state="translated">확장명은 &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt; 에 의해 반환되며 확장명을 &lt;code&gt;BrowserWindow.removeDevToolsExtension&lt;/code&gt; API에 전달하여 확장명 을 언로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30a79e8d6966a4a2414fe7b9771b3c9f123cf632" translate="yes" xml:space="preserve">
          <source>The native Node modules are supported by Electron, but since Electron is very likely to use a different V8 version from the Node binary installed in your system, you have to manually specify the location of Electron's headers when building native modules.</source>
          <target state="translated">기본 노드 모듈은 Electron에서 지원되지만 Electron은 시스템에 설치된 Node 바이너리와 다른 V8 버전을 사용할 가능성이 높으므로 기본 모듈을 빌드 할 때 Electron 헤더의 위치를 ​​수동으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="b7946f3aee148212b0466cff97ef58316736f962" translate="yes" xml:space="preserve">
          <source>The native type of the handle is &lt;code&gt;HWND&lt;/code&gt; on Windows, &lt;code&gt;NSView*&lt;/code&gt; on macOS, and &lt;code&gt;Window&lt;/code&gt; (&lt;code&gt;unsigned long&lt;/code&gt;) on Linux.</source>
          <target state="translated">핸들의 기본 유형은 Windows의 &lt;code&gt;HWND&lt;/code&gt; , macOS의 &lt;code&gt;NSView*&lt;/code&gt; 및 Linux의 &lt;code&gt;Window&lt;/code&gt; ( &lt;code&gt;unsigned long&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="71f5e2f019afcb5feb85a1c99c89b1e3ad5dffb2" translate="yes" xml:space="preserve">
          <source>The newly created &lt;code&gt;BrowserWindow&lt;/code&gt; will inherit the parent window's options by default. To override inherited options you can set them in the &lt;code&gt;features&lt;/code&gt; string.</source>
          <target state="translated">새로 생성 된 &lt;code&gt;BrowserWindow&lt;/code&gt; 는 기본적으로 부모 창의 옵션을 상속합니다. 상속 된 옵션을 무시하려면 &lt;code&gt;features&lt;/code&gt; 문자열 에서 옵션을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2a89274ff334223332ddb2c643ba3507a28917fb" translate="yes" xml:space="preserve">
          <source>The number of buttons in thumbnail toolbar should be no greater than 7 due to the limited room. Once you setup the thumbnail toolbar, the toolbar cannot be removed due to the platform's limitation. But you can call the API with an empty array to clean the buttons.</source>
          <target state="translated">제한된 공간으로 인해 썸네일 도구 모음의 단추 수는 7보다 크지 않아야합니다. 축소판 도구 모음을 설정하면 플랫폼 제한으로 인해 도구 모음을 제거 할 수 없습니다. 그러나 빈 배열로 API를 호출하여 버튼을 정리할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="125ea8def83a481dab8fbddf8d5749a2b90d5cbe" translate="yes" xml:space="preserve">
          <source>The official symbol server URL for Electron is &lt;a href=&quot;https://electron-symbols.githubapp.com&quot;&gt;https://electron-symbols.githubapp.com&lt;/a&gt;. You cannot visit this URL directly, you must add it to the symbol path of your debugging tool. In the examples below, a local cache directory is used to avoid repeatedly fetching the PDB from the server. Replace &lt;code&gt;c:\code\symbols&lt;/code&gt; with an appropriate cache directory on your machine.</source>
          <target state="translated">Electron의 공식 심볼 서버 URL은 &lt;a href=&quot;https://electron-symbols.githubapp.com&quot;&gt;https://electron-symbols.githubapp.com&lt;/a&gt; 입니다. 이 URL을 직접 방문 할 수 없으므로 디버깅 도구의 기호 경로에 추가해야합니다. 아래 예에서 로컬 캐시 디렉토리는 서버에서 PDB를 반복적으로 가져 오는 것을 피하기 위해 사용됩니다. 교체 &lt;code&gt;c:\code\symbols&lt;/code&gt; 컴퓨터에 적절한 캐시 디렉토리와 함께.</target>
        </trans-unit>
        <trans-unit id="008325aba6751725e103a92cb088a5a8c8c92af9" translate="yes" xml:space="preserve">
          <source>The old &quot;Quick Start&quot; document that used to live here has been split up into two documents:</source>
          <target state="translated">여기에 살았던 예전의 &quot;빠른 시작&quot;문서는 두 개의 문서로 나뉩니다.</target>
        </trans-unit>
        <trans-unit id="fa8cd0d5e0019201e7bd835902c5ff0cd1f02674" translate="yes" xml:space="preserve">
          <source>The only way to load a native module safely for now, is to make sure the app loads no native modules after the Web Workers get started.</source>
          <target state="translated">현재 기본 모듈을 안전하게로드하는 유일한 방법은 웹 작업자가 시작된 후 앱이 기본 모듈을로드하지 않도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="bf9949f4fb2156fb17fc40e74580436ede2d40f5" translate="yes" xml:space="preserve">
          <source>The other building steps are exactly the same.</source>
          <target state="translated">다른 건물 단계는 정확히 같습니다.</target>
        </trans-unit>
        <trans-unit id="81ea8998cc56ab5955043c21441988d75cde142b" translate="yes" xml:space="preserve">
          <source>The output should look roughly like this:</source>
          <target state="translated">출력은 대략 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="e161ecf856105089a99c6b53bfa26e65e3c5ce6d" translate="yes" xml:space="preserve">
          <source>The possible values and behaviors of the &lt;code&gt;type&lt;/code&gt; option are platform dependent. Possible values are:</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 옵션 의 가능한 값과 동작 은 플랫폼에 따라 다릅니다. 가능한 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1238273cd66721667847a8ea46f8156223d79358" translate="yes" xml:space="preserve">
          <source>The prebuilt &lt;code&gt;ia32&lt;/code&gt; (&lt;code&gt;i686&lt;/code&gt;) and &lt;code&gt;x64&lt;/code&gt; (&lt;code&gt;amd64&lt;/code&gt;) binaries of Electron are built on Ubuntu 12.04, the &lt;code&gt;armv7l&lt;/code&gt; binary is built against ARM v7 with hard-float ABI and NEON for Debian Wheezy.</source>
          <target state="translated">Electron 의 사전 빌드 된 &lt;code&gt;ia32&lt;/code&gt; ( &lt;code&gt;i686&lt;/code&gt; ) 및 &lt;code&gt;x64&lt;/code&gt; ( &lt;code&gt;amd64&lt;/code&gt; ) 바이너리는 Ubuntu 12.04에서 빌드되며 &lt;code&gt;armv7l&lt;/code&gt; 바이너리는 hard-float ABI 및 NEON for Debian Wheezy를 사용하여 ARM v7에 대해 빌드됩니다.</target>
        </trans-unit>
        <trans-unit id="b70e88b19e2f46234ac6fbb5e859622ac9fd34e6" translate="yes" xml:space="preserve">
          <source>The preload script can indirectly access all APIs from the main process through the &lt;code&gt;remote&lt;/code&gt; and &lt;code&gt;ipcRenderer&lt;/code&gt; modules. This is how &lt;code&gt;fs&lt;/code&gt; (used above) and other modules are implemented: They are proxies to remote counterparts in the main process.</source>
          <target state="translated">사전로드 스크립트는 &lt;code&gt;remote&lt;/code&gt; 및 &lt;code&gt;ipcRenderer&lt;/code&gt; 모듈을 통해 기본 프로세스에서 모든 API에 간접적으로 액세스 할 수 있습니다 . 이 어떻게 &lt;code&gt;fs&lt;/code&gt; (상기 사용) 및 다른 모듈이 구현된다 : 그들은 주 공정에 대응 원격 프록시이다.</target>
        </trans-unit>
        <trans-unit id="2f78e0c6f474005db369426975ffe7a44b2b1fc0" translate="yes" xml:space="preserve">
          <source>The preload script must be contained in a single script, but it is possible to have complex preload code composed with multiple modules by using a tool like browserify, as explained below. In fact, browserify is already used by electron to provide a node-like environment to the preload script.</source>
          <target state="translated">사전로드 스크립트는 단일 스크립트에 포함되어야하지만 아래 설명 된 것처럼 browserify와 같은 도구를 사용하여 여러 모듈로 구성된 복잡한 사전로드 코드를 가질 수 있습니다. 실제로, browserify는 전자에 의해 사전로드 스크립트에 노드와 유사한 환경을 제공하기 위해 이미 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c0de20e0722e9e32fadbeb6c3d6bc00e6d698502" translate="yes" xml:space="preserve">
          <source>The prepare release script will do the following: 1. Check if a release is already in process and if so it will halt. 2. Create a release branch. 3. Bump the version number in several files. See &lt;a href=&quot;https://github.com/electron/electron/commit/78ec1b8f89b3886b856377a1756a51617bc33f5a&quot;&gt;this bump commit&lt;/a&gt; for an example. 4. Create a draft release on GitHub with auto-generated release notes. 5. Push the release branch. 6. Call the APIs to run the release builds.</source>
          <target state="translated">릴리스 준비 스크립트는 다음을 수행합니다. 1. 릴리스가 이미 진행 중인지 확인하고 중지되는지 확인합니다. 2. 릴리스 분기를 작성하십시오. 3. 여러 파일에서 버전 번호를 범프하십시오. 예를 보려면 &lt;a href=&quot;https://github.com/electron/electron/commit/78ec1b8f89b3886b856377a1756a51617bc33f5a&quot;&gt;이 범프 커밋&lt;/a&gt; 을 참조하십시오 . 4. 자동 생성 된 릴리스 노트와 함께 GitHub에서 드래프트 릴리스를 만듭니다. 5. 분리 분기를 밉니다. 6. API를 호출하여 릴리스 빌드를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="f58a8b975b36977ca2a1bde930770d09c3751eb7" translate="yes" xml:space="preserve">
          <source>The process is as follows:</source>
          <target state="translated">과정은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4c16399b3abfc9798f8cf1c54ca267905ac305a5" translate="yes" xml:space="preserve">
          <source>The proxy has limited standard functionality implemented to be compatible with traditional web pages. For full control of the new window you should create a &lt;code&gt;BrowserWindow&lt;/code&gt; directly.</source>
          <target state="translated">프록시에는 기존 웹 페이지와 호환되도록 구현 된 표준 기능이 제한되어 있습니다. 새 창을 완전히 제어하려면 &lt;code&gt;BrowserWindow&lt;/code&gt; 를 직접 만들어야합니다 .</target>
        </trans-unit>
        <trans-unit id="6ed14764967dcc3afa5cf06693453c5de6781001" translate="yes" xml:space="preserve">
          <source>The renderer process can handle the message by listening to &lt;code&gt;channel&lt;/code&gt; with the &lt;a href=&quot;ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; module.</source>
          <target state="translated">렌더러 프로세스는 &lt;a href=&quot;ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt; 모듈 로 &lt;code&gt;channel&lt;/code&gt; 을 청취하여 메시지를 처리 ​​할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="6357d30e30adeab3af7b2ad8bc2f9d5463155c10" translate="yes" xml:space="preserve">
          <source>The renderer process is a browser window in your app. Unlike the main process, there can be multiple of these and each is run in a separate process. They can also be hidden.</source>
          <target state="translated">렌더러 프로세스는 앱의 브라우저 창입니다. 기본 프로세스와 달리 이들 중 여러 개가있을 수 있으며 각각 별도의 프로세스에서 실행됩니다. 숨길 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2981d6faaf1e0d9461c1a14f3f83abf43711910d" translate="yes" xml:space="preserve">
          <source>The renderer process is no different than a normal web page, except for the extra ability to use node modules:</source>
          <target state="translated">렌더러 프로세스는 노드 모듈을 사용하는 추가 기능을 제외하고 일반 웹 페이지와 다르지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fee4c15168b7bd8906486990b32196cc673c0da4" translate="yes" xml:space="preserve">
          <source>The source code of Electron is separated into a few parts, mostly following Chromium on the separation conventions.</source>
          <target state="translated">Electron의 소스 코드는 분리 규칙에서 주로 Chromium에 따라 몇 부분으로 분리됩니다.</target>
        </trans-unit>
        <trans-unit id="4a11b559f814a1c283145da0379f6db69b8584d1" translate="yes" xml:space="preserve">
          <source>The string follows the same format as the features string in &lt;code&gt;window.open&lt;/code&gt;. A name by itself is given a &lt;code&gt;true&lt;/code&gt; boolean value. A preference can be set to another value by including an &lt;code&gt;=&lt;/code&gt;, followed by the value. Special values &lt;code&gt;yes&lt;/code&gt; and &lt;code&gt;1&lt;/code&gt; are interpreted as &lt;code&gt;true&lt;/code&gt;, while &lt;code&gt;no&lt;/code&gt; and &lt;code&gt;0&lt;/code&gt; are interpreted as &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">문자열은 &lt;code&gt;window.open&lt;/code&gt; 의 기능 문자열과 동일한 형식을 따릅니다 . 이름 자체에는 &lt;code&gt;true&lt;/code&gt; 부울 값이 제공됩니다. &lt;code&gt;=&lt;/code&gt; 다음에 값을 포함시켜 환경 설정을 다른 값으로 설정할 수 있습니다 . 특수 값의 &lt;code&gt;yes&lt;/code&gt; 와 &lt;code&gt;1&lt;/code&gt; 로 해석된다 &lt;code&gt;true&lt;/code&gt; 동안, &lt;code&gt;no&lt;/code&gt; 및 &lt;code&gt;0&lt;/code&gt; 으로 해석됩니다 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="aaf00317265afc530080d71d6dca62e5c84a8698" translate="yes" xml:space="preserve">
          <source>The structure of a renamed app would be like:</source>
          <target state="translated">이름이 바뀐 앱의 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cc7693ce1e285d2c415bac1b5c914d37430aa520" translate="yes" xml:space="preserve">
          <source>The trace option will first be reset to the default option (&lt;code&gt;record_mode&lt;/code&gt; set to &lt;code&gt;record-until-full&lt;/code&gt;, &lt;code&gt;enable_sampling&lt;/code&gt; and &lt;code&gt;enable_systrace&lt;/code&gt; set to &lt;code&gt;false&lt;/code&gt;) before options parsed from &lt;code&gt;traceOptions&lt;/code&gt; are applied on it.</source>
          <target state="translated">&lt;code&gt;record_mode&lt;/code&gt; 에서 구문 분석 된 옵션 이 적용 되기 전에 추적 옵션이 기본 옵션 ( record_mode 는 &lt;code&gt;record-until-full&lt;/code&gt; , &lt;code&gt;enable_sampling&lt;/code&gt; 및 &lt;code&gt;enable_systrace&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 로 설정 됨 )으로 &lt;code&gt;traceOptions&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="6aebac9da6bd250ae1889e17eabd700eb379b422" translate="yes" xml:space="preserve">
          <source>The two most important pieces of information needed to evaluate the report are a description of the bug and a simple test case to recreate it. It easier to fix a bug if it can be reproduced.</source>
          <target state="translated">보고서를 평가하는 데 필요한 가장 중요한 두 가지 정보는 버그에 대한 설명과이를 재현하기위한 간단한 테스트 사례입니다. 재현 할 수 있으면 버그를 수정하기가 더 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="a449aea3f35918b88ea1e6b94d950e512a220b9e" translate="yes" xml:space="preserve">
          <source>The usage is similar to the other &lt;code&gt;register{Any}Protocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;Readable&lt;/code&gt; object or an object that has the &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;statusCode&lt;/code&gt;, and &lt;code&gt;headers&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 을 &lt;code&gt;Readable&lt;/code&gt; 객체 또는 &lt;code&gt;data&lt;/code&gt; , &lt;code&gt;statusCode&lt;/code&gt; 및 &lt;code&gt;headers&lt;/code&gt; 속성 이있는 객체 로 호출해야한다는 점을 제외하면 사용법은 다른 &lt;code&gt;register{Any}Protocol&lt;/code&gt; 과 유사 합니다.</target>
        </trans-unit>
        <trans-unit id="9812fb60be5cc4cec7a4283a492d96ea38c7d135" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;app#event-certificate-error&quot;&gt;the &lt;code&gt;certificate-error&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용법은 &lt;a href=&quot;app#event-certificate-error&quot;&gt; &lt;code&gt;app&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;certificate-error&lt;/code&gt; 이벤트 와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="18eabd0a931c3b6ea20fb4f5ade4b250dc83120d" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;app#event-login&quot;&gt;the &lt;code&gt;login&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용법은 &lt;a href=&quot;app#event-login&quot;&gt; &lt;code&gt;app&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;login&lt;/code&gt; 이벤트 와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="b250244d415c277c40e8184450593465b1879846" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;a href=&quot;app#event-select-client-certificate&quot;&gt;the &lt;code&gt;select-client-certificate&lt;/code&gt; event of &lt;code&gt;app&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용법은 &lt;a href=&quot;app#event-select-client-certificate&quot;&gt; &lt;code&gt;app&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;select-client-certificate&lt;/code&gt; 이벤트와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="ace9b5626e9a6055f530d59320c339f2a079923b" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with a &lt;code&gt;redirectRequest&lt;/code&gt; object that has the &lt;code&gt;url&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;referrer&lt;/code&gt;, &lt;code&gt;uploadData&lt;/code&gt; and &lt;code&gt;session&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; , &lt;code&gt;method&lt;/code&gt; , &lt;code&gt;referrer&lt;/code&gt; , &lt;code&gt;uploadData&lt;/code&gt; 및 &lt;code&gt;session&lt;/code&gt; 속성 이 있는 &lt;code&gt;redirectRequest&lt;/code&gt; 객체로 &lt;code&gt;callback&lt;/code&gt; 해야한다는 점을 제외하면 &lt;code&gt;registerFileProtocol&lt;/code&gt; 과 사용법이 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="0aaf6840393ba02debae0d4c1295f27cd0ce66e0" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;Buffer&lt;/code&gt; object or an object that has the &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;mimeType&lt;/code&gt;, and &lt;code&gt;charset&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 을 &lt;code&gt;Buffer&lt;/code&gt; 객체 또는 &lt;code&gt;data&lt;/code&gt; , &lt;code&gt;mimeType&lt;/code&gt; 및 &lt;code&gt;charset&lt;/code&gt; 속성 이있는 객체 로 호출해야한다는 점을 제외하면 &lt;code&gt;registerFileProtocol&lt;/code&gt; 과 사용법이 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="03748049d6ae04e4d12dbb56a6a1247729c2d706" translate="yes" xml:space="preserve">
          <source>The usage is the same with &lt;code&gt;registerFileProtocol&lt;/code&gt;, except that the &lt;code&gt;callback&lt;/code&gt; should be called with either a &lt;code&gt;String&lt;/code&gt; or an object that has the &lt;code&gt;data&lt;/code&gt;, &lt;code&gt;mimeType&lt;/code&gt;, and &lt;code&gt;charset&lt;/code&gt; properties.</source>
          <target state="translated">&lt;code&gt;callback&lt;/code&gt; 을 &lt;code&gt;String&lt;/code&gt; 또는 &lt;code&gt;data&lt;/code&gt; , &lt;code&gt;mimeType&lt;/code&gt; 및 &lt;code&gt;charset&lt;/code&gt; 속성 이있는 객체 로 호출해야한다는 점을 제외하면 &lt;code&gt;registerFileProtocol&lt;/code&gt; 과 사용법이 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="7189e6a417d94da2937de6349a31b69e3c021fee" translate="yes" xml:space="preserve">
          <source>The usage of &lt;code&gt;selenium-webdriver&lt;/code&gt; with Electron is the same with upstream, except that you have to manually specify how to connect chrome driver and where to find Electron's binary:</source>
          <target state="translated">의 사용 &lt;code&gt;selenium-webdriver&lt;/code&gt; 전자와 수동 크롬 드라이버를 연결하고 여기서 전자의 바이너리를 찾을 수있는 방법을 지정해야하는 것을 제외하고 업스트림과 동일합니다 :</target>
        </trans-unit>
        <trans-unit id="4acbb045832bbb7de008cac348c1d6a07239b61c" translate="yes" xml:space="preserve">
          <source>The user tasks will still show even after your application closes, so the icon and program path specified for a task should exist until your application is uninstalled.</source>
          <target state="translated">응용 프로그램을 닫은 후에도 사용자 작업이 계속 표시되므로 응용 프로그램을 제거 할 때까지 작업에 지정된 아이콘과 프로그램 경로가 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="e9b99637f2515a34e3bbf90ecfdac697c2461d7d" translate="yes" xml:space="preserve">
          <source>The vast majority of Node.js modules are &lt;em&gt;not&lt;/em&gt; native. Only 400 out of the ~650.000 modules are native. However, if you do need native modules, please consult &lt;a href=&quot;using-native-node-modules&quot;&gt;this guide on how to recompile them for Electron&lt;/a&gt;.</source>
          <target state="translated">Node.js 모듈의 대부분은 네이티브 가 &lt;em&gt;아닙니다&lt;/em&gt; . ~ 650.000 개 모듈 중 400 개만 기본 모듈입니다. 그러나 기본 모듈이 필요한 경우 &lt;a href=&quot;using-native-node-modules&quot;&gt;Electron에 대해 다시 컴파일하는 방법에 대해서는이 안내서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fd8026d813ea905232959978e568e2de6501e83" translate="yes" xml:space="preserve">
          <source>The version update process is detailed explicitly in our &lt;a href=&quot;electron-versioning&quot;&gt;Versioning Doc&lt;/a&gt;.</source>
          <target state="translated">버전 업데이트 프로세스는 &lt;a href=&quot;electron-versioning&quot;&gt;버전 관리 문서에&lt;/a&gt; 명시 적으로 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fca882e172462489277d043917c2c2af6fc1608" translate="yes" xml:space="preserve">
          <source>The workflow to format your changed code:</source>
          <target state="translated">변경된 코드를 형식화하는 워크 플로우 :</target>
        </trans-unit>
        <trans-unit id="2669c327c063205625472ade42ce230661b243b9" translate="yes" xml:space="preserve">
          <source>Then execute &lt;code&gt;Electron.app&lt;/code&gt; (or &lt;code&gt;electron&lt;/code&gt; on Linux, &lt;code&gt;electron.exe&lt;/code&gt; on Windows), and Electron will start as your app. The &lt;code&gt;electron&lt;/code&gt; directory will then be your distribution to deliver to final users.</source>
          <target state="translated">그런 다음 실행 &lt;code&gt;Electron.app&lt;/code&gt; (또는 &lt;code&gt;electron&lt;/code&gt; , 리눅스에 &lt;code&gt;electron.exe&lt;/code&gt; Windows에서), 및 전자 앱으로 시작됩니다. 그러면 &lt;code&gt;electron&lt;/code&gt; 디렉터리가 최종 사용자에게 배포 할 배포판이됩니다.</target>
        </trans-unit>
        <trans-unit id="9fd24e6b8c7964a9f85124ee0cb90aa5f8b951f4" translate="yes" xml:space="preserve">
          <source>Then file a bug at Electron's issues list, and describe which part of the extension is not working as expected.</source>
          <target state="translated">그런 다음 Electron의 문제 목록에 버그를 신고하고 확장의 어느 부분이 예상대로 작동하지 않는지 설명하십시오.</target>
        </trans-unit>
        <trans-unit id="ea169d72ec8fb9e58317d4d8c139e8146a8d2349" translate="yes" xml:space="preserve">
          <source>Then manually create distributions for each platform and upload them:</source>
          <target state="translated">그런 다음 각 플랫폼에 대한 배포를 수동으로 생성하고 업로드하십시오.</target>
        </trans-unit>
        <trans-unit id="71075abbb4d96721b9fee736eb07204752987288" translate="yes" xml:space="preserve">
          <source>Then, assuming that the Xcode 6.4 DMG has been mounted at &lt;code&gt;/Volumes/Xcode&lt;/code&gt; and that your Xcode 8.2.1 install is at &lt;code&gt;/Applications/Xcode.app&lt;/code&gt;, run:</source>
          <target state="translated">그런 다음 Xcode 6.4 DMG가 &lt;code&gt;/Volumes/Xcode&lt;/code&gt; 에 마운트되었고 Xcode 8.2.1 설치가 &lt;code&gt;/Applications/Xcode.app&lt;/code&gt; 에 있다고 가정하면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="2b200704d3fdd92791b2627d608e135073603845" translate="yes" xml:space="preserve">
          <source>Then, create a virtual xvfb screen and export an environment variable called DISPLAY that points to it. Chromium in Electron will automatically look for &lt;code&gt;$DISPLAY&lt;/code&gt;, so no further configuration of your app is required. This step can be automated with Paul Betts's &lt;a href=&quot;https://github.com/paulcbetts/xvfb-maybe&quot;&gt;xvfb-maybe&lt;/a&gt;: Prepend your test commands with &lt;code&gt;xvfb-maybe&lt;/code&gt; and the little tool will automatically configure xvfb, if required by the current system. On Windows or macOS, it will do nothing.</source>
          <target state="translated">그런 다음 가상 xvfb 화면을 만들고이를 가리키는 DISPLAY라는 환경 변수를 내 보냅니다. Electron in Chron은 &lt;code&gt;$DISPLAY&lt;/code&gt; 자동으로 찾으 므로 더 이상 앱을 구성 할 필요가 없습니다. 이 단계는 폴 베츠의 자동화 할 수 &lt;a href=&quot;https://github.com/paulcbetts/xvfb-maybe&quot;&gt;Xvfb가 - 어쩌면&lt;/a&gt; : 앞에 추가에게 테스트 명령을 함께 &lt;code&gt;xvfb-maybe&lt;/code&gt; 및 작은 도구를 자동으로 구성 Xvfb가, 현재의 시스템에 의해 필요한 경우. Windows 또는 macOS에서는 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="55bf9c6f8ac8ab1bf6778b2f1394facf290c2989" translate="yes" xml:space="preserve">
          <source>Then, go and install the &lt;code&gt;electron-windows-store&lt;/code&gt; CLI:</source>
          <target state="translated">그런 다음 &lt;code&gt;electron-windows-store&lt;/code&gt; CLI를 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="72eb15729a4805941d065f88ea8bbb5580ab8d49" translate="yes" xml:space="preserve">
          <source>Then, in the main process, augment the event with a path to the file that is being dragged and an icon.</source>
          <target state="translated">그런 다음 기본 프로세스에서 끌고있는 파일의 경로와 아이콘으로 이벤트를 보강하십시오.</target>
        </trans-unit>
        <trans-unit id="f4a1638ecbe326cf45f914f93c15a4be6dfe94c3" translate="yes" xml:space="preserve">
          <source>Then, in your Electron app, require and use the module as if you were building a Node.js application:</source>
          <target state="translated">그런 다음 Electron 앱에서 Node.js 애플리케이션을 빌드하는 것처럼 모듈을 요구하고 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="acfbc37bb35b8dc64a08678926284923f14178bb" translate="yes" xml:space="preserve">
          <source>Then, in your test suite, you can use your test-driver as follows:</source>
          <target state="translated">그런 다음 테스트 스위트에서 다음과 같이 테스트 드라이버를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64075cebafe989152ef2fc4e1a534bec9aaa1ec0" translate="yes" xml:space="preserve">
          <source>Then, open up Visual Studio. Electron is not built with Visual Studio and hence does not contain a project file - you can however open up the source code files &quot;As File&quot;, meaning that Visual Studio will open them up by themselves. You can still set breakpoints - Visual Studio will automatically figure out that the source code matches the code running in the attached process and break accordingly.</source>
          <target state="translated">그런 다음 Visual Studio를 엽니 다. Electron은 Visual Studio로 빌드되지 않았으므로 프로젝트 파일을 포함하지 않습니다. 그러나 소스 코드 파일 &quot;As File&quot;을 열 수 있습니다. 즉, Visual Studio에서 직접 열 수 있습니다. 여전히 중단 점을 설정할 수 있습니다. Visual Studio는 소스 코드가 첨부 된 프로세스에서 실행중인 코드와 일치하는지 자동으로 파악하여 그에 따라 중단합니다.</target>
        </trans-unit>
        <trans-unit id="152c8ff56637023c5f144e0e8dc5699f53302f41" translate="yes" xml:space="preserve">
          <source>Then, run Electron with &lt;code&gt;electron/spec&lt;/code&gt; as the argument:</source>
          <target state="translated">그런 다음 &lt;code&gt;electron/spec&lt;/code&gt; 을 인수로 사용하여 Electron을 실행 하십시오.</target>
        </trans-unit>
        <trans-unit id="972c4a60ba2c597025cda850862a151cdd4dc6af" translate="yes" xml:space="preserve">
          <source>Then, run the installation of the Desktop App Converter, passing in the location of the Windows base Image (downloaded as &lt;code&gt;BaseImage-14316.wim&lt;/code&gt;), by calling &lt;code&gt;.\DesktopAppConverter.ps1 -Setup -BaseImage .\BaseImage-14316.wim&lt;/code&gt;.</source>
          <target state="translated">그런 다음 &lt;code&gt;.\DesktopAppConverter.ps1 -Setup -BaseImage .\BaseImage-14316.wim&lt;/code&gt; 을 호출 하여 Windows 기본 이미지 ( &lt;code&gt;BaseImage-14316.wim&lt;/code&gt; 으로 다운로드)의 위치를 ​​전달하여 Desktop App Converter 설치를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb5cf5c469151c5f14d54bfb8a272e43396cc203" translate="yes" xml:space="preserve">
          <source>Then, start Electron:</source>
          <target state="translated">그런 다음 Electron을 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="45ddb09189f3d7087a7050982078022d3abfa53b" translate="yes" xml:space="preserve">
          <source>Then, you need to prepare three entitlements files.</source>
          <target state="translated">그런 다음 세 가지 자격 파일을 준비해야합니다.</target>
        </trans-unit>
        <trans-unit id="9c4e9d318559cb234d0162bb4b4d4b0fd556a59b" translate="yes" xml:space="preserve">
          <source>Then, you'll need to configure your in-app purchases in iTunes Connect, and include details such as name, pricing, and description that highlights the features and functionality of your in-app purchase.</source>
          <target state="translated">그런 다음 iTunes Connect에서 인앱 구매를 구성하고 인앱 구매의 기능을 강조하는 이름, 가격 및 설명과 같은 세부 정보를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="192ebec0df374f64d0b3dc1a9afedd99cf52b5e4" translate="yes" xml:space="preserve">
          <source>There are Node APIs that can execute binaries like &lt;code&gt;child_process.exec&lt;/code&gt;, &lt;code&gt;child_process.spawn&lt;/code&gt; and &lt;code&gt;child_process.execFile&lt;/code&gt;, but only &lt;code&gt;execFile&lt;/code&gt; is supported to execute binaries inside &lt;code&gt;asar&lt;/code&gt; archive.</source>
          <target state="translated">&lt;code&gt;child_process.exec&lt;/code&gt; , &lt;code&gt;child_process.spawn&lt;/code&gt; 및 &lt;code&gt;child_process.execFile&lt;/code&gt; 과 같은 이진 파일을 실행할 수있는 노드 API가 있지만 &lt;code&gt;asar&lt;/code&gt; 아카이브 내에서 이진 파일을 실행하는 &lt;code&gt;execFile&lt;/code&gt; 만 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="e1c9a4723ba431993a248218effc57c06ba7510c" translate="yes" xml:space="preserve">
          <source>There are a handful of &lt;code&gt;*_TOKEN&lt;/code&gt; environment variables needed by the release scripts. Once you've generated these per-user tokens, you may want to keep them in a local file that you can &lt;code&gt;source&lt;/code&gt; when starting a release.</source>
          <target state="translated">릴리스 스크립트에 필요한 소수의 &lt;code&gt;*_TOKEN&lt;/code&gt; 환경 변수가 있습니다. 이러한 사용자 별 토큰을 생성하면, 당신은 당신이 할 수있는 로컬 파일에 보관하는 것이 좋습니다 &lt;code&gt;source&lt;/code&gt; 릴리스를 시작할 때.</target>
        </trans-unit>
        <trans-unit id="5c977ee526b253faabfc2e1542328fbc400b282b" translate="yes" xml:space="preserve">
          <source>There are a number of more advanced mechanisms for managing commits using &lt;code&gt;git rebase&lt;/code&gt; that can be used, but are beyond the scope of this guide.</source>
          <target state="translated">사용할 수 있지만 &lt;code&gt;git rebase&lt;/code&gt; 를 사용하여 커밋을 관리하기위한 고급 메커니즘이 많이 있지만이 안내서의 범위를 벗어납니다.</target>
        </trans-unit>
        <trans-unit id="9a9ef43ccd8caf2e708ab5074e4e0abb3c1ab637" translate="yes" xml:space="preserve">
          <source>There are a number of tools for signing your packaged app:</source>
          <target state="translated">패키지 앱에 서명하기위한 여러 가지 도구가 있습니다.</target>
        </trans-unit>
        <trans-unit id="004aab477cea089e16c90111f185db2c7a87f6e9" translate="yes" xml:space="preserve">
          <source>There are questions that are asked quite often. Check this out before creating an issue:</source>
          <target state="translated">자주 묻는 질문이 있습니다. 문제를 만들기 전에이를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f3594ebce627515e92051d5777e5ec1d0dd0b473" translate="yes" xml:space="preserve">
          <source>There are several major changes from our 1.x strategy outlined below. Each change is intended to satisfy the needs and priorities of developers/maintainers and app developers.</source>
          <target state="translated">아래에 요약 된 1.x 전략에는 몇 가지 주요 변경 사항이 있습니다. 각 변경 사항은 개발자 / 유지 업체 및 앱 개발자의 요구와 우선 순위를 충족시키기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="6a9ff1589bd15784761ca923818d0727ca501089" translate="yes" xml:space="preserve">
          <source>There are several ways to update an Electron application. The easiest and officially supported one is taking advantage of the built-in &lt;a href=&quot;https://github.com/Squirrel&quot;&gt;Squirrel&lt;/a&gt; framework and Electron's &lt;a href=&quot;../api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; module.</source>
          <target state="translated">Electron 응용 프로그램을 업데이트하는 방법에는 여러 가지가 있습니다. 가장 쉽고 공식적으로 지원되는 것은 내장 &lt;a href=&quot;https://github.com/Squirrel&quot;&gt;다람쥐&lt;/a&gt; 프레임 워크와 Electron의 &lt;a href=&quot;../api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; 모듈 을 이용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="de8a36bc5c6e7059274d4fd4661f84f4dc105cfb" translate="yes" xml:space="preserve">
          <source>There are three ways to create a &lt;code&gt;.snap&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;.snap&lt;/code&gt; 파일 을 만드는 세 가지 방법이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0d95bb8a7dee45320eb44fe7853039108a4a1741" translate="yes" xml:space="preserve">
          <source>There is a second script, &lt;code&gt;script/patch.py&lt;/code&gt; that may be useful. Read &lt;code&gt;./script/patch.py -h&lt;/code&gt; for more information.</source>
          <target state="translated">유용 할 수 있는 두 번째 스크립트 인 &lt;code&gt;script/patch.py&lt;/code&gt; 가 있습니다. 자세한 내용은 &lt;code&gt;./script/patch.py -h&lt;/code&gt; 를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="a8ee2e2a678feae54ac5c2aa26213901010f7d5c" translate="yes" xml:space="preserve">
          <source>There is not a lot of Python in this repository, but it too is governed by coding style rules. &lt;code&gt;npm run lint-py&lt;/code&gt; will check all Python, using &lt;code&gt;pylint&lt;/code&gt; to do so.</source>
          <target state="translated">이 저장소에는 많은 Python이 없지만 코딩 스타일 규칙에 의해 제어됩니다. &lt;code&gt;npm run lint-py&lt;/code&gt; 는 &lt;code&gt;pylint&lt;/code&gt; 를 사용하여 모든 Python을 검사합니다 .</target>
        </trans-unit>
        <trans-unit id="f1bb9ca43ae7748f326896a6ab75ed4d14280b8e" translate="yes" xml:space="preserve">
          <source>There is one important caveat: Native Node.js modules (that is, modules that require compilation of native code before they can be used) will need to be compiled to be used with Electron.</source>
          <target state="translated">한 가지 중요한주의 사항이 있습니다. Native Node.js 모듈 (즉, 네이티브 코드를 컴파일하기 전에 컴파일해야하는 모듈)을 Electron과 함께 사용하려면 컴파일해야합니다.</target>
        </trans-unit>
        <trans-unit id="9a0e9dc372e0c40d38d2958352a0d648c5040d89" translate="yes" xml:space="preserve">
          <source>There may be instances where you want to respond to these events in the main process as well. The main process however does not have a &lt;code&gt;navigator&lt;/code&gt; object and thus cannot detect these events directly. Using Electron's inter-process communication utilities, the events can be forwarded to the main process and handled as needed, as shown in the following example.</source>
          <target state="translated">기본 프로세스에서 이러한 이벤트에 응답하려는 경우가있을 수도 있습니다. 그러나 기본 프로세스에는 &lt;code&gt;navigator&lt;/code&gt; 오브젝트가 없으므로 이러한 이벤트를 직접 감지 할 수 없습니다. Electron의 프로세스 간 통신 유틸리티를 사용하여 다음 예제와 같이 이벤트를 기본 프로세스로 전달하고 필요에 따라 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="c76908a4e62bf35d62ab8daa6831ef2e371fa76d" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a chance we need to change our build configuration to match the build flags that node wants in &lt;code&gt;node/common.gypi&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;node/common.gypi&lt;/code&gt; 에서 노드 가 원하는 빌드 플래그와 일치하도록 빌드 구성을 변경해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d6027584eb7ad264155776e956f099186c67b37" translate="yes" xml:space="preserve">
          <source>These are the style guidelines for coding in Electron.</source>
          <target state="translated">Electron에서의 코딩을위한 스타일 가이드 라인입니다.</target>
        </trans-unit>
        <trans-unit id="e0d8c7951f5bc627a70a99d0271644e93dc97b85" translate="yes" xml:space="preserve">
          <source>These guides are intended for people working on the Electron project itself. For guides on Electron app development, see &lt;a href=&quot;../readme#guides-and-tutorials&quot;&gt;/docs/README.md&lt;/a&gt;.</source>
          <target state="translated">이 안내서는 Electron 프로젝트 자체에서 작업하는 사람들을위한 것입니다. Electron 앱 개발에 대한 지침은 &lt;a href=&quot;../readme#guides-and-tutorials&quot;&gt;/docs/README.md를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="37c441683da7e488d5912c3b7aea3e8a75035f9f" translate="yes" xml:space="preserve">
          <source>These individual tutorials expand on topics discussed in the guide above.</source>
          <target state="translated">이 개별 자습서는 위 가이드에서 논의 된 주제를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="db666ef559d2fa34de4bff16e1c88aed612ebb1e" translate="yes" xml:space="preserve">
          <source>These mappings apply to the endpoint host in a net request (the TCP connect and host resolver in a direct connection, and the &lt;code&gt;CONNECT&lt;/code&gt; in an HTTP proxy connection, and the endpoint host in a &lt;code&gt;SOCKS&lt;/code&gt; proxy connection).</source>
          <target state="translated">이러한 맵핑은 순 요청의 엔드 포인트 호스트 (직접 연결의 TCP 연결 및 호스트 해석기 , HTTP 프록시 연결 의 &lt;code&gt;CONNECT&lt;/code&gt; 및 &lt;code&gt;SOCKS&lt;/code&gt; 프록시 연결 의 엔드 포인트 호스트 )에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5959f576697cc4d5a5e88b90052ec389f612923a" translate="yes" xml:space="preserve">
          <source>These methods can be accessed from the &lt;code&gt;webContents&lt;/code&gt; module:</source>
          <target state="translated">이러한 메소드는 &lt;code&gt;webContents&lt;/code&gt; 모듈 에서 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="630557d884064039ed6c85e2f5ccbb60cf40eb54" translate="yes" xml:space="preserve">
          <source>These new features bring those auditing tools to your Electron app. You can choose to add audits to your tests with Spectron or use them within DevTools with Devtron. Read on for a summary of the tools.</source>
          <target state="translated">이러한 새로운 기능은 이러한 감사 도구를 Electron 앱에 제공합니다. Spectron을 사용하여 테스트에 감사를 추가하거나 Devtron과 함께 DevTools 내에서 감사를 사용할 수 있습니다. 도구 요약을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="d50011daa060d619340c176124cf64eb2f14b2ad" translate="yes" xml:space="preserve">
          <source>These steps are to help app developers learn when a branch they're using becomes unsupported, but without being excessively intrusive to end users.</source>
          <target state="translated">이 단계는 앱 개발자가 사용중인 브랜치가 지원되지 않지만 최종 사용자에게 지나치게 방해받지 않을 때 배우는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="fa7a3b8057245a9a53616fa5a39e6151d07de38f" translate="yes" xml:space="preserve">
          <source>They backport a small amount of things as needed</source>
          <target state="translated">필요에 따라 소량의 물건을 백 포트</target>
        </trans-unit>
        <trans-unit id="925561daf4358b3834107004f7ee8e98e9571064" translate="yes" xml:space="preserve">
          <source>This API can be called safely before the &lt;code&gt;ready&lt;/code&gt; event the &lt;code&gt;app&lt;/code&gt; module emits, it is usually used to report errors in early stage of startup. If called before the app &lt;code&gt;ready&lt;/code&gt;event on Linux, the message will be emitted to stderr, and no GUI dialog will appear.</source>
          <target state="translated">이 API는 &lt;code&gt;app&lt;/code&gt; 모듈이 생성하는 &lt;code&gt;ready&lt;/code&gt; 이벤트 전에 안전하게 호출 할 수 있으며 일반적으로 시작 초기 단계에서 오류를보고하는 데 사용됩니다. Linux 에서 앱 &lt;code&gt;ready&lt;/code&gt; 이벤트 전에 호출 되면 메시지가 stderr로 생성되고 GUI 대화 상자가 나타나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="340c45f7f9a661e9ecd6ebb65818f8f2c652ab5b" translate="yes" xml:space="preserve">
          <source>This allows you to determine ahead of time whether or not Windows will silently throw the notification away.</source>
          <target state="translated">이를 통해 Windows가 자동으로 알림을 버릴지 여부를 미리 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f46f0abdadcedbe72ac0adb70eeb03055c2be70" translate="yes" xml:space="preserve">
          <source>This can be done manually by visiting OmahaProxy in a browser, or automatically:</source>
          <target state="translated">브라우저에서 OmahaProxy를 방문하여 수동으로 수행하거나 자동으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e19abaa13d0dba98679bd7418a20016c22238a79" translate="yes" xml:space="preserve">
          <source>This can be used in combination with &lt;a href=&quot;web-contents#contentssetsizeoptions&quot;&gt;&lt;code&gt;webContents.setSize&lt;/code&gt;&lt;/a&gt; to manually resize the webview contents in reaction to a window size change. This can make resizing faster compared to relying on the webview element bounds to automatically resize the contents.</source>
          <target state="translated">이것은 &lt;a href=&quot;web-contents#contentssetsizeoptions&quot;&gt; &lt;code&gt;webContents.setSize&lt;/code&gt; &lt;/a&gt; 와 함께 사용 하여 창 크기 변경에 대한 반응으로 webview 컨텐츠의 크기를 수동으로 조정할 수 있습니다. 그러면 webview 요소 경계를 사용하여 내용의 크기를 자동으로 조정하는 것보다 크기를 더 빠르게 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92d95071d9f0757b88558f8b1d59a4ba138589a4" translate="yes" xml:space="preserve">
          <source>This can take a significant amount of time depending on build machine as it has to build all of the libchromium source.</source>
          <target state="translated">모든 libchromium 소스를 빌드해야하므로 빌드 시스템에 따라 상당한 시간이 걸릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85a949ce4a405bc3ce050a428eb09e1fccb5184d" translate="yes" xml:space="preserve">
          <source>This document describes the process for releasing a new version of Electron.</source>
          <target state="translated">이 문서는 새로운 버전의 Electron을 출시하는 과정을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="2b08ebef74426ddb6ada26f318d5041f72ce60d2" translate="yes" xml:space="preserve">
          <source>This document outlines the process for manually loading an extension. You may also try &lt;a href=&quot;https://github.com/GPMDP/electron-devtools-installer&quot;&gt;electron-devtools-installer&lt;/a&gt;, a third-party tool that downloads extensions directly from the Chrome WebStore.</source>
          <target state="translated">이 문서는 확장을 수동으로로드하는 프로세스를 간략하게 설명합니다. Chrome 웹 스토어에서 직접 확장 프로그램을 다운로드하는 타사 도구 인 &lt;a href=&quot;https://github.com/GPMDP/electron-devtools-installer&quot;&gt;electron-devtools-installer를&lt;/a&gt; 사용해 볼 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dd9bda8f3bea4fa30568a20bc89b0c284f32afe4" translate="yes" xml:space="preserve">
          <source>This doesn't affect existing &lt;code&gt;WebContents&lt;/code&gt;, and each &lt;code&gt;WebContents&lt;/code&gt; can use &lt;code&gt;webContents.setUserAgent&lt;/code&gt; to override the session-wide user agent.</source>
          <target state="translated">이는 기존 &lt;code&gt;WebContents&lt;/code&gt; 에 영향을 미치지 않으며 각 &lt;code&gt;WebContents&lt;/code&gt; 는 &lt;code&gt;webContents.setUserAgent&lt;/code&gt; 를 사용 하여 세션 전체 사용자 에이전트를 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="305bb661633e2bd54b8cde837bb1530865ff1b43" translate="yes" xml:space="preserve">
          <source>This doesn't mean Electron is a JavaScript binding to graphical user interface (GUI) libraries. Instead, Electron uses web pages as its GUI, so you could also see it as a minimal Chromium browser, controlled by JavaScript.</source>
          <target state="translated">이는 Electron이 GUI (그래픽 사용자 인터페이스) 라이브러리에 대한 JavaScript 바인딩을 의미하지는 않습니다. 대신 Electron은 웹 페이지를 GUI로 사용하므로 JavaScript로 제어되는 최소 Chromium 브라우저로 볼 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="27dcdff876f06b48e0909172d36571d4132749c8" translate="yes" xml:space="preserve">
          <source>This ensures that your working branch has the latest changes from &lt;code&gt;electron/electron&lt;/code&gt; master.</source>
          <target state="translated">이를 통해 작업 지점에 &lt;code&gt;electron/electron&lt;/code&gt; 마스터 에서 최신 변경 사항이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="735aff75680f019b5b2eef8d283ba1c664d12844" translate="yes" xml:space="preserve">
          <source>This environment variable will not work if the &lt;code&gt;crashReporter&lt;/code&gt; is started.</source>
          <target state="translated">&lt;code&gt;crashReporter&lt;/code&gt; 가 시작 되면이 환경 변수가 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c53962e4beb1ce1eb5a88e924f00d58d0735bdc2" translate="yes" xml:space="preserve">
          <source>This event can be used to configure &lt;code&gt;webPreferences&lt;/code&gt; for the &lt;code&gt;webContents&lt;/code&gt; of a &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; before it's loaded, and provides the ability to set settings that can't be set via &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; attributes.</source>
          <target state="translated">이 이벤트는 로드되기 전에 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 의 &lt;code&gt;webPreferences&lt;/code&gt; 에 대한 &lt;code&gt;webContents&lt;/code&gt; 를 구성하는 데 사용될 수 있으며 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 속성을 통해 설정할 수없는 설정을 설정하는 기능을 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="534c78030b6fb5c4bb033d9366092911a59d6437" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-finish-load&lt;/code&gt; but emitted when the load failed or was cancelled, e.g. &lt;code&gt;window.stop()&lt;/code&gt; is invoked. The full list of error codes and their meaning is available &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">이 이벤트는 &lt;code&gt;did-finish-load&lt;/code&gt; 와 유사 하지만로드가 실패하거나 취소 될 때 생성됩니다 &lt;code&gt;window.stop()&lt;/code&gt; 예 : window.stop () 호출). 오류 코드의 전체 목록과 의미는 &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;여기에서&lt;/a&gt; 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ebc14d8e2cd1b5d75f2d9ca245ca5574d93e3694" translate="yes" xml:space="preserve">
          <source>This event is like &lt;code&gt;did-finish-load&lt;/code&gt;, but fired when the load failed or was cancelled, e.g. &lt;code&gt;window.stop()&lt;/code&gt; is invoked.</source>
          <target state="translated">이 이벤트는 &lt;code&gt;did-finish-load&lt;/code&gt; 와 비슷하지만로드가 실패하거나 취소 된 경우 발생합니다 &lt;code&gt;window.stop()&lt;/code&gt; 예 : window.stop () 호출).</target>
        </trans-unit>
        <trans-unit id="16cd81301f3901898ca383be2a9937686fea4f1b" translate="yes" xml:space="preserve">
          <source>This event is not emitted for in-page navigations, such as clicking anchor links or updating the &lt;code&gt;window.location.hash&lt;/code&gt;. Use &lt;code&gt;did-navigate-in-page&lt;/code&gt; event for this purpose.</source>
          <target state="translated">이 이벤트는 앵커 링크 클릭 또는 &lt;code&gt;window.location.hash&lt;/code&gt; 업데이트와 같은 인 페이지 내비게이션에서는 생성되지 않습니다 . 사용은 &lt;code&gt;did-navigate-in-page&lt;/code&gt; 이 목적을 위해 이벤트를.</target>
        </trans-unit>
        <trans-unit id="43532412863a913d8fd70d6050dfc6b00fea2882" translate="yes" xml:space="preserve">
          <source>This event is not guaranteed to be emitted in all cases where the notification is closed.</source>
          <target state="translated">이 이벤트는 알림이 닫힌 모든 경우에 생성 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="daef2593fd9388d64158392d015f2a866d5cba6f" translate="yes" xml:space="preserve">
          <source>This event is usually emitted after the &lt;code&gt;did-finish-load&lt;/code&gt; event, but for pages with many remote resources, it may be emitted before the &lt;code&gt;did-finish-load&lt;/code&gt; event.</source>
          <target state="translated">이 이벤트는 일반적으로 &lt;code&gt;did-finish-load&lt;/code&gt; 이벤트 후에 생성되지만 원격 리소스가 많은 페이지의 경우 &lt;code&gt;did-finish-load&lt;/code&gt; 이벤트 전에 생성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="adc211e73307119fcd816d42f8b4a9ab15005889" translate="yes" xml:space="preserve">
          <source>This event will not emit when the navigation is started programmatically with APIs like &lt;code&gt;&amp;lt;webview&amp;gt;.loadURL&lt;/code&gt; and &lt;code&gt;&amp;lt;webview&amp;gt;.back&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;webview&amp;gt;.loadURL&lt;/code&gt; 및 &lt;code&gt;&amp;lt;webview&amp;gt;.back&lt;/code&gt; .back 과 같은 API를 사용하여 프로그래밍 방식으로 탐색이 시작되면이 이벤트가 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ba25365ba095998aa9f6d8616d04d7760dce95d3" translate="yes" xml:space="preserve">
          <source>This event will not emit when the navigation is started programmatically with APIs like &lt;code&gt;webContents.loadURL&lt;/code&gt; and &lt;code&gt;webContents.back&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webContents.loadURL&lt;/code&gt; 및 &lt;code&gt;webContents.back&lt;/code&gt; 과 같은 API를 사용하여 프로그래밍 방식으로 탐색을 시작하면이 이벤트가 발생하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2ce3421f7d7f0f139f1c0fc738d83adefc9eead4" translate="yes" xml:space="preserve">
          <source>This flag is global to all renderer processes, if you only want to disable throttling in one window, you can take the hack of &lt;a href=&quot;https://github.com/atom/atom/pull/9485/files&quot;&gt;playing silent audio&lt;/a&gt;.</source>
          <target state="translated">이 플래그는 모든 렌더러 프로세스에 대해 전역 적이며, 하나의 창에서만 제한을 사용하지 않으려면 &lt;a href=&quot;https://github.com/atom/atom/pull/9485/files&quot;&gt;자동 오디오 재생을&lt;/a&gt; 해킹 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="59739245235d20d9bd2627de64d6feb1f1353c69" translate="yes" xml:space="preserve">
          <source>This guide explains how to integrate your application into those desktop environments with Electron APIs.</source>
          <target state="translated">이 안내서는 Electron API를 사용하여 애플리케이션을 해당 데스크탑 환경에 통합하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="2ae7cd976045436112f7fa0b340e654a51d5286c" translate="yes" xml:space="preserve">
          <source>This guide provides information on how to package your Electron application for any Snapcraft environment, including the Ubuntu Software Center.</source>
          <target state="translated">이 안내서는 Ubuntu Software Center를 포함하여 Snapcraft 환경을 위해 Electron 응용 프로그램을 패키지화하는 방법에 대한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bd12afa1587b8243c8bdd506b686e1935e49b3f7" translate="yes" xml:space="preserve">
          <source>This happens when the variable which is used to store the window/tray gets garbage collected.</source>
          <target state="translated">이것은 창 / 트레이를 저장하는 데 사용되는 변수가 가비지 수집 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="53ddae2e4ad6d22bd6d864ba578a7a1b81d8dd78" translate="yes" xml:space="preserve">
          <source>This is an overview of the steps needed to upgrade Chromium in Electron.</source>
          <target state="translated">다음은 Electron에서 Chromium을 업그레이드하는 데 필요한 단계에 대한 개요입니다.</target>
        </trans-unit>
        <trans-unit id="48fd1ce46ca3f75a8fcf1a2738bb79a6e11234ae" translate="yes" xml:space="preserve">
          <source>This is because &lt;code&gt;exec&lt;/code&gt; and &lt;code&gt;spawn&lt;/code&gt; accept &lt;code&gt;command&lt;/code&gt; instead of &lt;code&gt;file&lt;/code&gt; as input, and &lt;code&gt;command&lt;/code&gt;s are executed under shell. There is no reliable way to determine whether a command uses a file in asar archive, and even if we do, we can not be sure whether we can replace the path in command without side effects.</source>
          <target state="translated">이는이다 &lt;code&gt;exec&lt;/code&gt; 및 &lt;code&gt;spawn&lt;/code&gt; 동의 &lt;code&gt;command&lt;/code&gt; 대신 &lt;code&gt;file&lt;/code&gt; 입력으로하고, &lt;code&gt;command&lt;/code&gt; 의 쉘에서 실행됩니다. 명령이 asar 아카이브에서 파일을 사용하는지 여부를 결정하는 신뢰할 수있는 방법은 없으며, 그렇게해도 부작용없이 명령에서 경로를 바꿀 수 있는지 여부를 확신 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c91f0b5809499b2aac2c817187db2006a90e9d9c" translate="yes" xml:space="preserve">
          <source>This is because you have the &lt;a href=&quot;https://www.npmjs.com/package/electron&quot;&gt;npm &lt;code&gt;electron&lt;/code&gt; module&lt;/a&gt; installed either locally or globally, which overrides Electron's built-in module.</source>
          <target state="translated">이는 &lt;a href=&quot;https://www.npmjs.com/package/electron&quot;&gt;npm &lt;code&gt;electron&lt;/code&gt; 모듈&lt;/a&gt; 이 로컬 또는 전역으로 설치되어 Electron의 내장 모듈보다 우선하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="5a3986c71d0e4c78e6cd21bb0ce8b7a2f2efbb87" translate="yes" xml:space="preserve">
          <source>This is caused by a bug when using Cygwin Python and Win32 Node together. The solution is to use the Win32 Python to execute the bootstrap script (assuming you have installed Python under &lt;code&gt;C:\Python27&lt;/code&gt;):</source>
          <target state="translated">Cygwin Python과 Win32 Node를 함께 사용할 때 발생하는 버그로 인해 발생합니다. 해결책은 Win32 Python을 사용하여 부트 스트랩 스크립트를 실행하는 것입니다 ( &lt;code&gt;C:\Python27&lt;/code&gt; 아래에 Python을 설치했다고 가정 ).</target>
        </trans-unit>
        <trans-unit id="8b27aed9ee162e49847966b3b51b71c4860ae778" translate="yes" xml:space="preserve">
          <source>This is equivalent to the following code:</source>
          <target state="translated">이것은 다음 코드와 같습니다.</target>
        </trans-unit>
        <trans-unit id="3fe1df8532e63229df92d06cf43d9987ae371204" translate="yes" xml:space="preserve">
          <source>This is needed because the first patch has Node commit checksums that we don't want</source>
          <target state="translated">첫 번째 패치에는 원하지 않는 노드 커밋 체크섬이 있기 때문에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e8aca70cc5480516ee291e9bca8a4cd91b7eaa92" translate="yes" xml:space="preserve">
          <source>This is needed because upstream Node keeps its V8 files in a subdirectory</source>
          <target state="translated">이것은 업스트림 노드가 V8 파일을 서브 디렉토리에 보관하기 때문에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="91aef02790b0da10b0da3faa252a645dace7a8f0" translate="yes" xml:space="preserve">
          <source>This is not bulletproof, but at the least, you should follow these steps to improve the security of your application.</source>
          <target state="translated">이것은 방탄은 아니지만 최소한 다음 단계를 따라 응용 프로그램의 보안을 향상시켜야합니다.</target>
        </trans-unit>
        <trans-unit id="6ce540b607105f2ab510762e21fa5b7df27b2a8c" translate="yes" xml:space="preserve">
          <source>This list is managed by the OS. On Windows you can visit the list from the task bar, and on macOS you can visit it from dock menu.</source>
          <target state="translated">이 목록은 OS에서 관리합니다. Windows에서는 작업 표시 줄에서 목록을 방문하고 macOS에서는 도크 메뉴에서 목록을 방문 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="21b8fbf53205cd07ff1caf5968650d4e51e33e22" translate="yes" xml:space="preserve">
          <source>This makes the web page click-through when over &lt;code&gt;el&lt;/code&gt;, and returns to normal outside it.</source>
          <target state="translated">이렇게하면 &lt;code&gt;el&lt;/code&gt; 위에있을 때 웹 페이지를 클릭 연결 하여 외부의 일반 페이지로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="b38119f44b494dd0bb6f6f9163b806e1c7ab1524" translate="yes" xml:space="preserve">
          <source>This means that &lt;code&gt;[-1, 0, 1]&lt;/code&gt; will make the image completely white and &lt;code&gt;[-1, 1, 0]&lt;/code&gt; will make the image completely black.</source>
          <target state="translated">즉, &lt;code&gt;[-1, 0, 1]&lt;/code&gt; 은 이미지를 완전히 흰색으로 만들고 &lt;code&gt;[-1, 1, 0]&lt;/code&gt; 은 이미지를 완전히 검정색으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="67a355799483968abe863664dade8bc4d946b24a" translate="yes" xml:space="preserve">
          <source>This method can only be called before app is ready.</source>
          <target state="translated">이 메소드는 앱이 준비되기 전에 만 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f90ad39418944444e5ae54b4ab541a29f5479860" translate="yes" xml:space="preserve">
          <source>This method checks if the current executable as the default handler for a protocol (aka URI scheme). If so, it will remove the app as the default handler.</source>
          <target state="translated">이 메소드는 현재 실행 파일이 프로토콜의 기본 핸들러 (일명 URI 체계)인지 확인합니다. 그렇다면 앱을 기본 처리기로 제거합니다.</target>
        </trans-unit>
        <trans-unit id="3c819fac6bfe7e98002d421c14d1dc5a3975abd6" translate="yes" xml:space="preserve">
          <source>This method checks if the current executable is the default handler for a protocol (aka URI scheme). If so, it will return true. Otherwise, it will return false.</source>
          <target state="translated">이 메소드는 현재 실행 파일이 프로토콜 (일명 URI 스킴)의 기본 핸들러인지 확인합니다. 그렇다면 true를 반환합니다. 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="77a9284738b6a5154a2e369ad66253b0849a1915" translate="yes" xml:space="preserve">
          <source>This method guarantees that all &lt;code&gt;beforeunload&lt;/code&gt; and &lt;code&gt;unload&lt;/code&gt; event handlers are correctly executed. It is possible that a window cancels the quitting by returning &lt;code&gt;false&lt;/code&gt; in the &lt;code&gt;beforeunload&lt;/code&gt; event handler.</source>
          <target state="translated">이 메소드는 모든 &lt;code&gt;beforeunload&lt;/code&gt; 및 &lt;code&gt;unload&lt;/code&gt; 이벤트 핸들러가 올바르게 실행되도록합니다. &lt;code&gt;beforeunload&lt;/code&gt; 이벤트 핸들러 에서 &lt;code&gt;false&lt;/code&gt; 를 반환하여 창이 종료를 취소 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ecd46eba6601163296f629d7617bddef184d9505" translate="yes" xml:space="preserve">
          <source>This method makes your application a Single Instance Application - instead of allowing multiple instances of your app to run, this will ensure that only a single instance of your app is running, and other instances signal this instance and exit.</source>
          <target state="translated">이 방법을 사용하면 응용 프로그램을 단일 인스턴스 응용 프로그램으로 만들 수 있습니다. 즉, 여러 응용 프로그램 인스턴스를 실행하는 대신 단일 응용 프로그램 인스턴스 만 실행되고 다른 인스턴스는이 인스턴스에 신호를 보내고 종료합니다.</target>
        </trans-unit>
        <trans-unit id="128082992770bd52e00e31ab2c7ee17b1d861f36" translate="yes" xml:space="preserve">
          <source>This method returns &lt;code&gt;false&lt;/code&gt; if your process is the primary instance of the application and your app should continue loading. And returns &lt;code&gt;true&lt;/code&gt; if your process has sent its parameters to another instance, and you should immediately quit.</source>
          <target state="translated">프로세스가 애플리케이션의 기본 인스턴스이고 앱이 계속로드되어야하는 경우이 메소드는 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 . 프로세스가 매개 변수를 다른 인스턴스로 보낸 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 하고 즉시 종료해야합니다.</target>
        </trans-unit>
        <trans-unit id="576d1f0fde5bf163523a7bf4784d972829571325" translate="yes" xml:space="preserve">
          <source>This method sets the current executable as the default handler for a protocol (aka URI scheme). It allows you to integrate your app deeper into the operating system. Once registered, all links with &lt;code&gt;your-protocol://&lt;/code&gt; will be opened with the current executable. The whole link, including protocol, will be passed to your application as a parameter.</source>
          <target state="translated">이 메소드는 현재 실행 파일을 프로토콜 (일명 URI 체계)의 기본 핸들러로 설정합니다. 앱을 운영 체제에 더 깊이 통합 할 수 있습니다. 등록되면 &lt;code&gt;your-protocol://&lt;/code&gt; 과 의 모든 링크가 현재 실행 파일과 함께 열립니다. 프로토콜을 포함한 전체 링크는 응용 프로그램에 매개 변수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="e1635376cd173bd570494637f07d70e9a8bc4e7d" translate="yes" xml:space="preserve">
          <source>This mode uses a software output device for rendering in the CPU, so the frame generation is much faster, thus this mode is preferred over the GPU accelerated one.</source>
          <target state="translated">이 모드는 CPU에서 렌더링하기 위해 소프트웨어 출력 장치를 사용하므로 프레임 생성이 훨씬 빠르므로이 모드는 GPU 가속 모드보다 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="94190404689a379b97619e82a180839a7032b318" translate="yes" xml:space="preserve">
          <source>This module does not include a web interface so you need to open &lt;code&gt;chrome://tracing/&lt;/code&gt; in a Chrome browser and load the generated file to view the result.</source>
          <target state="translated">이 모듈에는 웹 인터페이스가 포함되어 있지 않으므로 Chrome 브라우저에서 &lt;code&gt;chrome://tracing/&lt;/code&gt; 을 열고 생성 된 파일을로드하여 결과를 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="8f151969ca83729d41c12755b271e4baa545fb6b" translate="yes" xml:space="preserve">
          <source>This only affects developers, if you are building Electron for rebranding you are not affected.</source>
          <target state="translated">브랜딩을 위해 Electron을 빌드하는 경우 개발자에게만 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="56607a829de2a1f19d7e738a52d963a4fbb9ddcd" translate="yes" xml:space="preserve">
          <source>This only creates a REPL for the main process. You can use the Console tab of the Dev Tools to get a REPL for the renderer processes.</source>
          <target state="translated">주 프로세스에 대한 REPL 만 작성합니다. 개발자 도구의 콘솔 탭을 사용하여 렌더러 프로세스에 대한 REPL을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="375038a02af1d24b74b5f70b87659606996caf92" translate="yes" xml:space="preserve">
          <source>This option can also be set on &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tags as well:</source>
          <target state="translated">이 옵션은 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그 에서도 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="79c050b71c61bcff34ea9522fff3873a756c2ae0" translate="yes" xml:space="preserve">
          <source>This page defines some terminology that is commonly used in Electron development.</source>
          <target state="translated">이 페이지는 전자 개발에 일반적으로 사용되는 몇 가지 용어를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="22c5e6a1bdbeb5e09af34f1a0b46ccebd975fbc6" translate="yes" xml:space="preserve">
          <source>This repository comes with linting rules for both JavaScript and C++ &amp;ndash; as well as unit and integration tests. To learn more about Electron's coding style, please see the &lt;a href=&quot;coding-style&quot;&gt;coding-style&lt;/a&gt; document.</source>
          <target state="translated">이 리포지토리에는 JavaScript 및 C ++에 대한 보푸라기 규칙과 단위 및 통합 테스트가 함께 제공됩니다. Electron의 코딩 스타일에 대한 자세한 내용은 &lt;a href=&quot;coding-style&quot;&gt;코딩 스타일&lt;/a&gt; 문서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ab2ffd8b47da3913e31fa804ea93f7b5a7a4a6f5" translate="yes" xml:space="preserve">
          <source>This script will cause a very large Electron executable to be placed in the directory &lt;code&gt;out/R&lt;/code&gt;. The file size is in excess of 1.3 gigabytes. This happens because the Release target binary contains debugging symbols. To reduce the file size, run the &lt;code&gt;create-dist.py&lt;/code&gt; script:</source>
          <target state="translated">이 스크립트는 매우 큰 Electron 실행 파일이 &lt;code&gt;out/R&lt;/code&gt; 디렉토리에 위치하게합니다 . 파일 크기가 1.3GB를 초과합니다. 이는 릴리스 대상 바이너리에 디버깅 기호가 포함되어 있기 때문에 발생합니다. 파일 크기를 줄이려면 &lt;code&gt;create-dist.py&lt;/code&gt; 스크립트를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="71693d265198cdad88d7bca56b4f1a7f4d1fb418" translate="yes" xml:space="preserve">
          <source>This switch can not be used in &lt;code&gt;app.commandLine.appendSwitch&lt;/code&gt; since it is parsed earlier than user's app is loaded, but you can set the &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; environment variable to achieve the same effect.</source>
          <target state="translated">이 스위치는 사용자의 앱이로드되기 전에 구문 분석 &lt;code&gt;app.commandLine.appendSwitch&lt;/code&gt; 에서 사용할 수 없지만 &lt;code&gt;ELECTRON_ENABLE_LOGGING&lt;/code&gt; 환경 변수를 설정 하여 동일한 효과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbba81275e266bde8685801ca839dd4f9c6b0a34" translate="yes" xml:space="preserve">
          <source>This switch only works when &lt;code&gt;--enable-logging&lt;/code&gt; is also passed.</source>
          <target state="translated">이 스위치는 &lt;code&gt;--enable-logging&lt;/code&gt; 도 전달 될 때만 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="6846735df161128a67c0582a4de46319858cb9a8" translate="yes" xml:space="preserve">
          <source>This term originated in the Unix community, where &quot;userland&quot; or &quot;userspace&quot; referred to programs that run outside of the operating system kernel. More recently, the term has been popularized in the Node and npm community to distinguish between the features available in &quot;Node core&quot; versus packages published to the npm registry by the much larger &quot;user&quot; community.</source>
          <target state="translated">이 용어는 &quot;userland&quot;또는 &quot;userspace&quot;가 운영 체제 커널 외부에서 실행되는 프로그램을 나타내는 Unix 커뮤니티에서 유래되었습니다. 보다 최근에는 &quot;노드 코어&quot;에서 사용 가능한 기능과 훨씬 더 큰 &quot;사용자&quot;커뮤니티에서 npm 레지스트리에 게시 한 패키지를 구별하기 위해이 용어가 노드 및 npm 커뮤니티에서 널리 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="b99439216edb1f47887775ea8c02567931505db8" translate="yes" xml:space="preserve">
          <source>This toolbar is the familiar standard toolbar common control. It has a maximum of seven buttons. Each button's ID, image, tooltip, and state are defined in a structure, which is then passed to the taskbar. The application can show, enable, disable, or hide buttons from the thumbnail toolbar as required by its current state.</source>
          <target state="translated">이 툴바는 친숙한 표준 툴바 공통 컨트롤입니다. 최대 7 개의 버튼이 있습니다. 각 버튼의 ID, 이미지, 툴팁 및 상태는 구조로 정의 된 다음 작업 표시 줄로 전달됩니다. 응용 프로그램은 현재 상태에 따라 축소판 도구 모음에서 단추를 표시, 활성화, 비활성화 또는 숨길 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67799efe884534d21c75845d127954a9bb9dfbe7" translate="yes" xml:space="preserve">
          <source>This value can only be modified before the first navigation, since the session of an active renderer process cannot change. Subsequent attempts to modify the value will fail with a DOM exception.</source>
          <target state="translated">활성 렌더러 프로세스의 세션을 변경할 수 없으므로이 값은 첫 번째 탐색 전에 만 수정할 수 있습니다. 이후의 값 수정 시도는 DOM 예외로 실패합니다.</target>
        </trans-unit>
        <trans-unit id="fbaa6d5fd03f0d67460b559ac4734d32b43188b8" translate="yes" xml:space="preserve">
          <source>This will allow you to detect ahead of time whether or not the notification will be displayed.</source>
          <target state="translated">이를 통해 알림 표시 여부를 미리 감지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="310772b745c9bd2e5897c31686b366f0ca7a83fe" translate="yes" xml:space="preserve">
          <source>This will be time-consuming</source>
          <target state="translated">시간이 많이 걸릴 것입니다</target>
        </trans-unit>
        <trans-unit id="4ee48038aa020d935bb7ab14bd9b9501be0b6b5c" translate="yes" xml:space="preserve">
          <source>This will build all of what was previously 'libchromiumcontent' (i.e. the &lt;code&gt;content/&lt;/code&gt; directory of &lt;code&gt;chromium&lt;/code&gt; and its dependencies, incl. WebKit and V8), so it will take a while.</source>
          <target state="translated">이것은 이전에 'libchromiumcontent'(즉, WebKit 및 V8을 포함한 &lt;code&gt;chromium&lt;/code&gt; 의 &lt;code&gt;content/&lt;/code&gt; 디렉토리 및 디렉토리) 인 모든 것을 빌드 하므로 시간이 걸립니다.</target>
        </trans-unit>
        <trans-unit id="c1d164648fb645df77aacd2d3406870e9f6529fe" translate="yes" xml:space="preserve">
          <source>This will build debug electron with debug version of libchromiumcontent.</source>
          <target state="translated">libchromiumcontent의 디버그 버전으로 디버그 전자를 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="a5ad23d8e2c4bcda5ace9dc6a50d0d65568cc890" translate="yes" xml:space="preserve">
          <source>This will download and build libchromiumcontent locally, similarly to the &lt;code&gt;--build_release_libcc&lt;/code&gt;, but it will create a shared library build of libchromiumcontent and won't strip any symbols, making it ideal for debugging.</source>
          <target state="translated">이것은 --build_release_libcc와 비슷하게 libchromiumcontent를 로컬로 다운로드하여 빌드 하지만 &lt;code&gt;--build_release_libcc&lt;/code&gt; 의 공유 라이브러리 빌드를 만들고 심볼을 제거하지 않으므로 디버깅에 이상적입니다.</target>
        </trans-unit>
        <trans-unit id="49e2296dbebe48f43f37289b354787ff74589354" translate="yes" xml:space="preserve">
          <source>This will fail when the app is signed for distribution in the Mac App Store. Subscribe to &lt;a href=&quot;https://github.com/electron/electron/issues/9005&quot;&gt;#9005&lt;/a&gt; for updates.</source>
          <target state="translated">Mac App Store에서 앱을 배포하도록 서명하면 실패합니다. 업데이트 는 &lt;a href=&quot;https://github.com/electron/electron/issues/9005&quot;&gt;# 9005&lt;/a&gt; 를 구독하십시오 .</target>
        </trans-unit>
        <trans-unit id="541c07fe9ee230201344ad82fc5f36ad622cf514" translate="yes" xml:space="preserve">
          <source>This will generate all the ninja files needed for the build. You shouldn't have to run &lt;code&gt;gn gen&lt;/code&gt; again&amp;mdash;if you want to change the build arguments you can run &lt;code&gt;gn args out/Default&lt;/code&gt; to bring up an editor.</source>
          <target state="translated">빌드에 필요한 모든 닌자 파일이 생성됩니다. &lt;code&gt;gn gen&lt;/code&gt; 을 다시 실행할 필요는 없습니다 . 빌드 인수를 변경하려면 &lt;code&gt;gn args out/Default&lt;/code&gt; 를 실행 하여 편집기를 불러올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec4cf475c98a6af3a04432e0f82fd5ad81b34a5c" translate="yes" xml:space="preserve">
          <source>This will generate the electron.ninjs.xcworkspace. You will have to open this workspace to set breakpoints and inspect.</source>
          <target state="translated">그러면 electron.ninjs.xcworkspace가 생성됩니다. 중단 점을 설정하고 검사하려면이 작업 공간을 열어야합니다.</target>
        </trans-unit>
        <trans-unit id="02eb50512f6212b38a5f022b6eb6b5e324c5192f" translate="yes" xml:space="preserve">
          <source>This will generate:</source>
          <target state="translated">이것은 다음을 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="e83d3d3598b2797efd7ec8e1d91124cd1b7f8f97" translate="yes" xml:space="preserve">
          <source>This will make a window maintain an aspect ratio. The extra size allows a developer to have space, specified in pixels, not included within the aspect ratio calculations. This API already takes into account the difference between a window's size and its content size.</source>
          <target state="translated">이렇게하면 창이 가로 세로 비율을 유지하게됩니다. 추가 크기는 개발자가 가로 세로 비율 계산에 포함되지 않은 픽셀로 지정된 공간을 가질 수 있도록합니다. 이 API는 이미 창의 크기와 내용 크기의 차이를 고려합니다.</target>
        </trans-unit>
        <trans-unit id="ce6ae84ac82058b3c68d240475e22e7867870592" translate="yes" xml:space="preserve">
          <source>This will put a working distribution with much smaller file sizes in the &lt;code&gt;dist&lt;/code&gt; directory. After running the &lt;code&gt;create-dist.py&lt;/code&gt; script, you may want to remove the 1.3+ gigabyte binary which is still in &lt;code&gt;out/R&lt;/code&gt;.</source>
          <target state="translated">이렇게하면 파일 크기가 훨씬 작은 작업 배포가 &lt;code&gt;dist&lt;/code&gt; 디렉토리에 배치됩니다. &lt;code&gt;create-dist.py&lt;/code&gt; 스크립트를 실행 한 후에도 여전히 &lt;code&gt;out/R&lt;/code&gt; 인 1.3+ 기가 바이트 바이너리를 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="06f1fff384311d54372d57e586748b6d220f83ac" translate="yes" xml:space="preserve">
          <source>This would normally be controlled by user preferences. This has no effect if called before &lt;code&gt;start&lt;/code&gt; is called.</source>
          <target state="translated">이것은 일반적으로 사용자 기본 설정에 의해 제어됩니다. &lt;code&gt;start&lt;/code&gt; 가 호출 되기 전에 호출 된 경우에는 효과가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="5d3775183e8f21e56320e67e89e50fc4420ccf2b" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;asar&lt;/code&gt; archives are treated as directories, there are no actual directories in the filesystem, so you can never set the working directory to directories in &lt;code&gt;asar&lt;/code&gt; archives. Passing them as the &lt;code&gt;cwd&lt;/code&gt; option of some APIs will also cause errors.</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; 아카이브는 디렉토리로 취급 되지만 파일 시스템에는 실제 디렉토리가 없으므로 작업 디렉토리를 &lt;code&gt;asar&lt;/code&gt; 아카이브의 디렉토리로 설정할 수 없습니다 . 일부 API 의 &lt;code&gt;cwd&lt;/code&gt; 옵션 으로 전달 하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c25fb617132c60aa22b5ad88639757fd795725db" translate="yes" xml:space="preserve">
          <source>Three ways to install native modules:</source>
          <target state="translated">기본 모듈을 설치하는 세 가지 방법 :</target>
        </trans-unit>
        <trans-unit id="018226bcc54ac78679d7e8cd478163dcf8940f27" translate="yes" xml:space="preserve">
          <source>ThumbarButton</source>
          <target state="translated">ThumbarButton</target>
        </trans-unit>
        <trans-unit id="a45fe261e1bd8ea4b2384009627cf81239d42ffe" translate="yes" xml:space="preserve">
          <source>ThumbarButton Object</source>
          <target state="translated">ThumbarButton 객체</target>
        </trans-unit>
        <trans-unit id="68534756f2a43c9ca088bf006a84307cf3d82b08" translate="yes" xml:space="preserve">
          <source>Thumbnail Toolbars</source>
          <target state="translated">썸네일 툴바</target>
        </trans-unit>
        <trans-unit id="671d7b141c957f28935c045970c0c111c71dfb47" translate="yes" xml:space="preserve">
          <source>Tigrinya</source>
          <target state="translated">Tigrinya</target>
        </trans-unit>
        <trans-unit id="2d93bfa0c66a344a9d453793e2a3b275bbe5a889" translate="yes" xml:space="preserve">
          <source>Tip: You can test the new version number before running &lt;code&gt;prepare-release&lt;/code&gt; with a dry run of the &lt;code&gt;bump-version&lt;/code&gt; script with the same major/minor/patch/beta arguments, e.g.:</source>
          <target state="translated">팁 : 동일한 주 / 부 / 패치 / 베타 인수 를 사용하여 &lt;code&gt;bump-version&lt;/code&gt; 스크립트를 건식 실행하여 &lt;code&gt;prepare-release&lt;/code&gt; 를 실행 하기 전에 새 버전 번호를 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a1a55c0d1792b8d6468a37f479b18279fa043440" translate="yes" xml:space="preserve">
          <source>Tips for fixing compilation errors</source>
          <target state="translated">컴파일 오류 수정을위한 팁</target>
        </trans-unit>
        <trans-unit id="547184d2eb07d1e52c4d74ab23282f7c9977fe1d" translate="yes" xml:space="preserve">
          <source>Tips:</source>
          <target state="translated">Tips:</target>
        </trans-unit>
        <trans-unit id="51ccfd339eac71e6278eab9692f5352cf183f4aa" translate="yes" xml:space="preserve">
          <source>To add a file to recent documents, you can use the &lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; API:</source>
          <target state="translated">최근 문서에 파일을 추가하려면 &lt;a href=&quot;../api/app#appaddrecentdocumentpath-macos-windows&quot;&gt;app.addRecentDocument&lt;/a&gt; API를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a9664d5f84ea2545060bbee8ef877fd89e837721" translate="yes" xml:space="preserve">
          <source>To automatically format a file according to Electron C++ code style, run &lt;code&gt;clang-format -i path/to/electron/file.cc&lt;/code&gt;. It should work on macOS/Linux/Windows.</source>
          <target state="translated">Electron C ++ 코드 스타일에 따라 파일을 자동으로 포맷하려면 &lt;code&gt;clang-format -i path/to/electron/file.cc&lt;/code&gt; 를 실행하십시오 . macOS / Linux / Windows에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="fbdd9e0e1f5169f11845d03f9a4b24b8851b4328" translate="yes" xml:space="preserve">
          <source>To avoid this problem, ensure you clean up any references to renderer callbacks passed to the main process. This involves cleaning up event handlers, or ensuring the main process is explicitly told to dereference callbacks that came from a renderer process that is exiting.</source>
          <target state="translated">이 문제를 방지하려면 기본 프로세스에 전달 된 렌더러 콜백에 대한 참조를 정리하십시오. 여기에는 이벤트 처리기를 정리하거나 종료되는 렌더러 프로세스에서 발생한 콜백을 역 참조하도록 기본 프로세스에 명시 적으로 알리는 것이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f729edcee19e3b35f18f931c0af6f8268c97b5d4" translate="yes" xml:space="preserve">
          <source>To avoid using the prebuilt binaries of &lt;code&gt;libchromiumcontent&lt;/code&gt;, you can build &lt;code&gt;libchromiumcontent&lt;/code&gt; locally. To do so, follow these steps:</source>
          <target state="translated">사전 빌드 된 &lt;code&gt;libchromiumcontent&lt;/code&gt; 바이너리를 사용하지 않으려면 &lt;code&gt;libchromiumcontent&lt;/code&gt; 를 로컬로 빌드 할 수 있습니다. 이렇게하려면 다음 단계를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="19976a15788c70fd26ec283fb2a6d554b40bc217" translate="yes" xml:space="preserve">
          <source>To build Electron with compilers like &lt;code&gt;g++&lt;/code&gt;, you first need to disable &lt;code&gt;clang&lt;/code&gt; with &lt;code&gt;--disable_clang&lt;/code&gt; switch first, and then set &lt;code&gt;CC&lt;/code&gt; and &lt;code&gt;CXX&lt;/code&gt; environment variables to the ones you want.</source>
          <target state="translated">같은 컴파일러로 전자를 구축하기 위해 &lt;code&gt;g++&lt;/code&gt; , 당신이 사용하지 않도록 설정하는 첫 번째 필요 &lt;code&gt;clang&lt;/code&gt; 와 &lt;code&gt;--disable_clang&lt;/code&gt; 제 1 스위치, 다음 세트 &lt;code&gt;CC&lt;/code&gt; 와 &lt;code&gt;CXX&lt;/code&gt; 를 원하는 사람에 대한 환경 변수.</target>
        </trans-unit>
        <trans-unit id="d6cd83725cfa73ae4725497beceb7d033c9cce9b" translate="yes" xml:space="preserve">
          <source>To build for the 32bit target, you need to pass &lt;code&gt;--target_arch=ia32&lt;/code&gt; when running the bootstrap script:</source>
          <target state="translated">32 비트 대상을 빌드하려면 부트 스트랩 스크립트를 실행할 때 &lt;code&gt;--target_arch=ia32&lt;/code&gt; 를 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="821a75b76ea57d2ebf97a34d857fed4df2cade15" translate="yes" xml:space="preserve">
          <source>To build, run &lt;code&gt;ninja&lt;/code&gt; with the &lt;code&gt;electron:electron_app&lt;/code&gt; target:</source>
          <target state="translated">빌드하려면 &lt;code&gt;electron:electron_app&lt;/code&gt; 대상으로 &lt;code&gt;ninja&lt;/code&gt; 를 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="eb59b218f28d7b858bdf2ed54eeac06e692808d8" translate="yes" xml:space="preserve">
          <source>To capture both audio and video from the entire desktop the constraints passed to &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt;&lt;/a&gt; must include &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt;, for both &lt;code&gt;audio&lt;/code&gt; and &lt;code&gt;video&lt;/code&gt;, but should not include a &lt;code&gt;chromeMediaSourceId&lt;/code&gt; constraint.</source>
          <target state="translated">전체 바탕 화면에서 전달 제약 오디오 및 비디오를 캡처하려면 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt; &lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt; &lt;/a&gt; 포함해야 &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt; , 모두를위한 &lt;code&gt;audio&lt;/code&gt; 와 &lt;code&gt;video&lt;/code&gt; 하지만, 포함하지 않아야 &lt;code&gt;chromeMediaSourceId&lt;/code&gt; 의 제약 조건을.</target>
        </trans-unit>
        <trans-unit id="ad024e97cbf72e17d0494dc407b356d3cd2d6654" translate="yes" xml:space="preserve">
          <source>To capture video from a source provided by &lt;code&gt;desktopCapturer&lt;/code&gt; the constraints passed to &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt;&lt;/a&gt; must include &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt;, and &lt;code&gt;audio: false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;desktopCapturer&lt;/code&gt; 가 제공하는 소스에서 비디오를 캡처하려면 &lt;a href=&quot;https://developer.mozilla.org/en/docs/Web/API/MediaDevices/getUserMedia&quot;&gt; &lt;code&gt;navigator.mediaDevices.getUserMedia&lt;/code&gt; 에&lt;/a&gt; 전달 된 제한 조건에 &lt;code&gt;chromeMediaSource: 'desktop'&lt;/code&gt; 및 &lt;code&gt;audio: false&lt;/code&gt; 가 포함되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="c4940cd6896449350d0e22ff6a037fc2012f95be" translate="yes" xml:space="preserve">
          <source>To check if a DevTools extension is installed you can run the following:</source>
          <target state="translated">DevTools 확장이 설치되어 있는지 확인하려면 다음을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4b0244100e839dce97df084a927399cebf56784" translate="yes" xml:space="preserve">
          <source>To check out how a simple Electron app is built, see &lt;a href=&quot;first-app&quot;&gt;Writing Your First Electron App&lt;/a&gt;</source>
          <target state="translated">간단한 Electron 앱의 구축 방법을 확인하려면 &lt;a href=&quot;first-app&quot;&gt;첫 번째 Electron 앱 작성을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3035d11dba22f59c2a05ae50e84cbd4beacd68c3" translate="yes" xml:space="preserve">
          <source>To check out how an Electron app that uses a background task to send toast notifications and live tiles, &lt;a href=&quot;https://github.com/felixrieseberg/electron-uwp-background&quot;&gt;check out the Microsoft-provided sample&lt;/a&gt;.</source>
          <target state="translated">백그라운드 작업을 사용하여 토스트 알림 및 라이브 타일을 보내는 Electron 앱을 &lt;a href=&quot;https://github.com/felixrieseberg/electron-uwp-background&quot;&gt;확인하려면 Microsoft 제공 샘플을 확인하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="16073334d646ccfac2edf89e53cff76005d5a9e7" translate="yes" xml:space="preserve">
          <source>To check out the process architecture, see &lt;a href=&quot;application-architecture#main-and-renderer-processes&quot;&gt;Main and Renderer Processes&lt;/a&gt;.</source>
          <target state="translated">프로세스 아키텍처를 확인하려면 &lt;a href=&quot;application-architecture#main-and-renderer-processes&quot;&gt;기본 및 렌더러 프로세스를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="47fa821b0f83e7586fb85804250c66d0d13ab94c" translate="yes" xml:space="preserve">
          <source>To clean only &lt;code&gt;out&lt;/code&gt; and &lt;code&gt;dist&lt;/code&gt; directories:</source>
          <target state="translated">깨끗하고 &lt;code&gt;out&lt;/code&gt; 및 &lt;code&gt;dist&lt;/code&gt; 디렉토리 :</target>
        </trans-unit>
        <trans-unit id="c3a8e3b3ba3c693c9aa963abbc63ed4672f90e2b" translate="yes" xml:space="preserve">
          <source>To clean the build files:</source>
          <target state="translated">빌드 파일을 정리하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="fd19315b5d8b4d48df4ffad2c2078c0ed5d6c4c8" translate="yes" xml:space="preserve">
          <source>To clean thumbnail toolbar buttons, just call &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; with an empty array:</source>
          <target state="translated">축소판 도구 모음 단추를 정리하려면 빈 배열로 &lt;code&gt;BrowserWindow.setThumbarButtons&lt;/code&gt; 를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="535c3ee8e8e2739219eb5319c8cac023145fc1bb" translate="yes" xml:space="preserve">
          <source>To clean your tasks list, call &lt;code&gt;app.setUserTasks&lt;/code&gt; with an empty array:</source>
          <target state="translated">작업 목록을 정리하려면 빈 배열로 &lt;code&gt;app.setUserTasks&lt;/code&gt; 를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2134ea0ff07c37dd63e847fbf7d7cc6b27be05cb" translate="yes" xml:space="preserve">
          <source>To compile any existing Electron app, ensure that you have the following requirements:</source>
          <target state="translated">기존 Electron 앱을 컴파일하려면 다음 요구 사항이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ef5ea456f6758585b278e513aefa5cb807b4ef93" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;Session&lt;/code&gt; with &lt;code&gt;options&lt;/code&gt;, you have to ensure the &lt;code&gt;Session&lt;/code&gt; with the &lt;code&gt;partition&lt;/code&gt; has never been used before. There is no way to change the &lt;code&gt;options&lt;/code&gt; of an existing &lt;code&gt;Session&lt;/code&gt; object.</source>
          <target state="translated">만들려면 &lt;code&gt;Session&lt;/code&gt; 과 &lt;code&gt;options&lt;/code&gt; , 당신은 확인해야 &lt;code&gt;Session&lt;/code&gt; 와 &lt;code&gt;partition&lt;/code&gt; 이전에 사용 된 적이 없다. 기존 &lt;code&gt;Session&lt;/code&gt; 객체 의 &lt;code&gt;options&lt;/code&gt; 을 변경할 수있는 방법이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="edb532d22f5908482440f8346cec7745e9149b67" translate="yes" xml:space="preserve">
          <source>To create a browserify bundle and use it as a preload script, something like the following should be used:</source>
          <target state="translated">browserify 번들을 만들어 사전로드 스크립트로 사용하려면 다음과 같은 것을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="d4504a0a533285a94c124801a9670c64f2a2e1d6" translate="yes" xml:space="preserve">
          <source>To create a click-through window, i.e. making the window ignore all mouse events, you can call the &lt;a href=&quot;browser-window#winsetignoremouseeventsignore&quot;&gt;win.setIgnoreMouseEvents(ignore)&lt;/a&gt; API:</source>
          <target state="translated">클릭 연결 창을 만들려면, 즉 창에서 모든 마우스 이벤트를 &lt;a href=&quot;browser-window#winsetignoremouseeventsignore&quot;&gt;무시&lt;/a&gt; 하도록하려면 win.setIgnoreMouseEvents (ignore) API를 호출하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="772c951591704df38eae61542fd514f0fae11027" translate="yes" xml:space="preserve">
          <source>To create a custom driver, we'll use nodejs' &lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt; API. The test suite will spawn the Electron process, then establish a simple messaging protocol:</source>
          <target state="translated">커스텀 드라이버를 만들기 위해 nodejs의 &lt;a href=&quot;https://nodejs.org/api/child_process.html&quot;&gt;child_process&lt;/a&gt; API를 사용 합니다. 테스트 스위트는 Electron 프로세스를 생성 한 후 간단한 메시징 프로토콜을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="14fa77793c887f131ecab2b39703d63c2fb21efd" translate="yes" xml:space="preserve">
          <source>To create a frameless window, you need to set &lt;code&gt;frame&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; in &lt;a href=&quot;browser-window&quot;&gt;BrowserWindow&lt;/a&gt;'s &lt;code&gt;options&lt;/code&gt;:</source>
          <target state="translated">프레임리스 창을 만들려면 &lt;a href=&quot;browser-window&quot;&gt;BrowserWindow&lt;/a&gt; 의 &lt;code&gt;options&lt;/code&gt; 에서 &lt;code&gt;frame&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1a722dcf46a3cbeaf79a09b4d16ddc687f912186" translate="yes" xml:space="preserve">
          <source>To create a sandboxed window, simply pass &lt;code&gt;sandbox: true&lt;/code&gt; to &lt;code&gt;webPreferences&lt;/code&gt;:</source>
          <target state="translated">샌드 박스 윈도우를 만들려면 간단히 &lt;code&gt;sandbox: true&lt;/code&gt; 를 &lt;code&gt;webPreferences&lt;/code&gt; 에 전달 하십시오 .</target>
        </trans-unit>
        <trans-unit id="7168a31db235db73d7406740d08f55b04b316abe" translate="yes" xml:space="preserve">
          <source>To create a window without chrome, or a transparent window in arbitrary shape, you can use the &lt;a href=&quot;frameless-window&quot;&gt;Frameless Window&lt;/a&gt; API.</source>
          <target state="translated">크롬이없는 창 또는 임의의 모양의 투명 창을 만들려면 &lt;a href=&quot;frameless-window&quot;&gt;프레임리스 창&lt;/a&gt; API를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2f5e21c0065cc1231645772a60b9ffb4db284f60" translate="yes" xml:space="preserve">
          <source>To detect whether or not you're allowed to send a notification, use the userland module &lt;a href=&quot;https://github.com/felixrieseberg/electron-notification-state&quot;&gt;electron-notification-state&lt;/a&gt;.</source>
          <target state="translated">알림을 보낼 수 있는지 여부를 감지하려면 userland 모듈 &lt;a href=&quot;https://github.com/felixrieseberg/electron-notification-state&quot;&gt;electron-notification-state를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="18993c3ec7650af89951a8eb01d2c6f69ddbc0ad" translate="yes" xml:space="preserve">
          <source>To distribute your app with Electron, you need to download Electron's &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;prebuilt binaries&lt;/a&gt;. Next, the folder containing your app should be named &lt;code&gt;app&lt;/code&gt; and placed in Electron's resources directory as shown in the following examples. Note that the location of Electron's prebuilt binaries is indicated with &lt;code&gt;electron/&lt;/code&gt; in the examples below.</source>
          <target state="translated">Electron과 함께 앱을 배포하려면 Electron의 &lt;a href=&quot;https://github.com/electron/electron/releases&quot;&gt;내장 바이너리&lt;/a&gt; 를 다운로드해야 합니다 . 다음으로 앱을 포함하는 폴더의 이름을 &lt;code&gt;app&lt;/code&gt; 으로 지정 하고 다음 예제와 같이 Electron의 resources 디렉토리에 배치 해야합니다 . Electron의 사전 빌드 된 바이너리 위치는 아래 예제에서 &lt;code&gt;electron/&lt;/code&gt; 으로 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="7f5c2511eb5e2692a8e70be365b110b5b21b368c" translate="yes" xml:space="preserve">
          <source>To do a source level single step in the currently selected thread, execute &lt;code&gt;step&lt;/code&gt; (or &lt;code&gt;s&lt;/code&gt;). This would take you into &lt;code&gt;name_override_.empty()&lt;/code&gt;. To proceed and do a step over, run &lt;code&gt;next&lt;/code&gt; (or &lt;code&gt;n&lt;/code&gt;).</source>
          <target state="translated">현재 선택된 스레드에서 소스 레벨 단일 단계를 수행하려면 &lt;code&gt;step&lt;/code&gt; (또는 &lt;code&gt;s&lt;/code&gt; )를 실행하십시오 . 그러면 &lt;code&gt;name_override_.empty()&lt;/code&gt; 합니다. 계속 진행하고 &lt;code&gt;next&lt;/code&gt; 단계를 수행하려면 다음 (또는 &lt;code&gt;n&lt;/code&gt; )을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="94fa16b9d0f4ea3ec28a1d741fb3059be08b5f5e" translate="yes" xml:space="preserve">
          <source>To embed a web page in your app, add the &lt;code&gt;webview&lt;/code&gt; tag to your app's embedder page (this is the app page that will display the guest content). In its simplest form, the &lt;code&gt;webview&lt;/code&gt; tag includes the &lt;code&gt;src&lt;/code&gt; of the web page and css styles that control the appearance of the &lt;code&gt;webview&lt;/code&gt; container:</source>
          <target state="translated">앱에 웹 페이지를 포함 시키려면 &lt;code&gt;webview&lt;/code&gt; 태그를 앱의 임 베더 페이지 (게스트 콘텐츠를 표시 할 앱 페이지)에 추가하십시오. 가장 간단한 형태로 &lt;code&gt;webview&lt;/code&gt; 태그에는 웹 페이지 의 &lt;code&gt;src&lt;/code&gt; 와 &lt;code&gt;webview&lt;/code&gt; 컨테이너 의 모양을 제어하는 ​​CSS 스타일이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="74afbad1cd98c17c4f61f99669eab36512f313cb" translate="yes" xml:space="preserve">
          <source>To enable OS-enforced sandbox on &lt;code&gt;BrowserWindow&lt;/code&gt; or &lt;code&gt;webview&lt;/code&gt; process with &lt;code&gt;sandbox:true&lt;/code&gt; without causing entire app to be in sandbox, &lt;code&gt;--enable-mixed-sandbox&lt;/code&gt; command-line argument must be passed to electron. This option is currently only supported on macOS and Windows.</source>
          <target state="translated">&lt;code&gt;BrowserWindow&lt;/code&gt; &lt;code&gt;sandbox:true&lt;/code&gt; 를 사용하여 BrowserWindow 또는 &lt;code&gt;webview&lt;/code&gt; 프로세스 에서 OS 적용 샌드 박스를 활성화하려면 전체 응용 프로그램을 샌드 박스에 두지 않고 &lt;code&gt;--enable-mixed-sandbox&lt;/code&gt; 명령 줄 인수를 전자에 전달해야합니다. 이 옵션은 현재 macOS 및 Windows에서만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="7d10111789110c128904cbac5eea80100c463835" translate="yes" xml:space="preserve">
          <source>To enable this mode GPU acceleration has to be disabled by calling the &lt;a href=&quot;../api/app#appdisablehardwareacceleration&quot;&gt;&lt;code&gt;app.disableHardwareAcceleration()&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">이 모드를 활성화하려면 &lt;a href=&quot;../api/app#appdisablehardwareacceleration&quot;&gt; &lt;code&gt;app.disableHardwareAcceleration()&lt;/code&gt; &lt;/a&gt; API를 호출하여 GPU 가속을 비활성화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="eb5bafd8fcceb25769e49c0e2f881eddea2335a3" translate="yes" xml:space="preserve">
          <source>To ensure that file URLs are properly formatted, it is recommended to use Node's &lt;a href=&quot;https://nodejs.org/api/url.html#url_url_format_urlobject&quot;&gt;&lt;code&gt;url.format&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">파일 URL의 형식이 &lt;a href=&quot;https://nodejs.org/api/url.html#url_url_format_urlobject&quot;&gt; &lt;code&gt;url.format&lt;/code&gt; &lt;/a&gt; 하려면 Node의 url.format 메소드 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="db09d3bac654dc1b140e3a8525ebc081f1aca261" translate="yes" xml:space="preserve">
          <source>To ensure that your C++ is in compliance with the Electron coding style, run &lt;code&gt;npm run lint-cpp&lt;/code&gt;, which runs a &lt;code&gt;cpplint&lt;/code&gt; script. We recommend that you use &lt;code&gt;clang-format&lt;/code&gt; and prepared &lt;a href=&quot;clang-format&quot;&gt;a short tutorial&lt;/a&gt;.</source>
          <target state="translated">C ++가 Electron 코딩 스타일을 준수하도록하려면 &lt;code&gt;cpplint&lt;/code&gt; 스크립트 를 실행하는 &lt;code&gt;npm run lint-cpp&lt;/code&gt; 를 실행하십시오 . &lt;code&gt;clang-format&lt;/code&gt; 을 사용 &lt;a href=&quot;clang-format&quot;&gt;하고 간단한 자습서를&lt;/a&gt; 준비 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="f76a95ae71cef0d386309c3b00dd01a15c7be53c" translate="yes" xml:space="preserve">
          <source>To ensure that your JavaScript is in compliance with the Electron coding style, run &lt;code&gt;npm run lint-js&lt;/code&gt;, which will run &lt;code&gt;standard&lt;/code&gt; against both Electron itself as well as the unit tests. If you are using an editor with a plugin/addon system, you might want to use one of the many &lt;a href=&quot;https://standardjs.com/#are-there-text-editor-plugins&quot;&gt;StandardJS addons&lt;/a&gt; to be informed of coding style violations before you ever commit them.</source>
          <target state="translated">JavaScript가 Electron 코딩 스타일을 준수하는지 확인하려면 &lt;code&gt;npm run lint-js&lt;/code&gt; 를 실행 하십시오. 이는 단위 자체 테스트뿐만 아니라 Electron 자체에 대해 &lt;code&gt;standard&lt;/code&gt; 실행됩니다 . 플러그인 / 애도 시스템이있는 편집기를 사용하는 경우, 많은 &lt;a href=&quot;https://standardjs.com/#are-there-text-editor-plugins&quot;&gt;StandardJS 애드온&lt;/a&gt; 중 하나를 사용하여 커밋하기 전에 코딩 스타일 위반에 대한 정보를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f3e67e920081f7bc356db1f791eb16dfb792e39" translate="yes" xml:space="preserve">
          <source>To finish debugging at this point, run &lt;code&gt;process continue&lt;/code&gt;. You can also continue until a certain line is hit in this thread (&lt;code&gt;thread until 100&lt;/code&gt;). This command will run the thread in the current frame till it reaches line 100 in this frame or stops if it leaves the current frame.</source>
          <target state="translated">이 시점에서 디버깅을 마치려면 &lt;code&gt;process continue&lt;/code&gt; 를 실행하십시오 . 이 스레드에서 특정 줄에 도달 할 때까지 계속할 수 있습니다 ( &lt;code&gt;thread until 100&lt;/code&gt; ). 이 명령은이 프레임의 100 행에 도달 할 때까지 현재 프레임에서 스레드를 실행하거나 현재 프레임을 벗어나면 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="db20ed2d7ab5ce6c9ab8108e55b92cdfc30f46ae" translate="yes" xml:space="preserve">
          <source>To flash the BrowserWindow taskbar button, you can use the &lt;a href=&quot;../api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrame&lt;/a&gt; API:</source>
          <target state="translated">BrowserWindow 작업 표시 줄 단추를 플래시하려면 &lt;a href=&quot;../api/browser-window#winflashframeflag&quot;&gt;BrowserWindow.flashFrame&lt;/a&gt; API를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9f9efd08eb76de8870458a9009c7e1a3dfc78bf4" translate="yes" xml:space="preserve">
          <source>To generate a Visual Studio project, you can pass the &lt;code&gt;--msvs&lt;/code&gt; parameter:</source>
          <target state="translated">Visual Studio 프로젝트를 생성하려면 &lt;code&gt;--msvs&lt;/code&gt; 매개 변수를 전달하면 됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
