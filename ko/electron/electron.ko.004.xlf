<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="electron">
    <body>
      <group id="electron">
        <trans-unit id="995966e6c20175910f22196dd266f8bc5154a3f3" translate="yes" xml:space="preserve">
          <source>Event: 'updated'</source>
          <target state="translated">이벤트 : '업데이트 됨'</target>
        </trans-unit>
        <trans-unit id="c5ae3b222d134285cac1aac21d26c8e851ced680" translate="yes" xml:space="preserve">
          <source>Event: 'web-contents-created'</source>
          <target state="translated">이벤트 : '웹 컨텐츠 제작'</target>
        </trans-unit>
        <trans-unit id="88ff9cf6a58d42e3f4e0e1510c4b4126ca7c7f09" translate="yes" xml:space="preserve">
          <source>Event: 'will-attach-webview'</source>
          <target state="translated">이벤트 : 'will-attach-webview'</target>
        </trans-unit>
        <trans-unit id="305197e69d1bbb6e3d791951cded7a230e12a2eb" translate="yes" xml:space="preserve">
          <source>Event: 'will-continue-activity' &lt;em&gt;macOS&lt;/em&gt;</source>
          <target state="translated">이벤트 : '의지 지속 활동' &lt;em&gt;macOS&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="224f35ab398eb761932c82885d89339c30951963" translate="yes" xml:space="preserve">
          <source>Event: 'will-download'</source>
          <target state="translated">이벤트 : 'will-download'</target>
        </trans-unit>
        <trans-unit id="5bf328bd009a74c5410e09a6c3cfc586e1808ba0" translate="yes" xml:space="preserve">
          <source>Event: 'will-finish-launching'</source>
          <target state="translated">이벤트 : '의사 완료'</target>
        </trans-unit>
        <trans-unit id="5acba750151c5026a73fb9dd6843b406f4cbcb62" translate="yes" xml:space="preserve">
          <source>Event: 'will-navigate'</source>
          <target state="translated">이벤트 : '탐색'</target>
        </trans-unit>
        <trans-unit id="40d2598ce0fdbb01d309cae0e7832040e154a1d3" translate="yes" xml:space="preserve">
          <source>Event: 'will-prevent-unload'</source>
          <target state="translated">이벤트 : '언로드 방지'</target>
        </trans-unit>
        <trans-unit id="323ed8640629c76373d154eaefb9032827dca55a" translate="yes" xml:space="preserve">
          <source>Event: 'will-quit'</source>
          <target state="translated">이벤트 : '종료'</target>
        </trans-unit>
        <trans-unit id="c091128c2cc84697664f69da9f735b514083ee1f" translate="yes" xml:space="preserve">
          <source>Event: 'window-all-closed'</source>
          <target state="translated">이벤트 : '창 닫기'</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="31c041967d6140eec241eaee7ac37dab37524808" translate="yes" xml:space="preserve">
          <source>Every app's main process file is specified in the &lt;code&gt;main&lt;/code&gt; property in &lt;code&gt;package.json&lt;/code&gt;. This is how &lt;code&gt;electron .&lt;/code&gt; knows what file to execute at startup.</source>
          <target state="translated">모든 앱의 기본 프로세스 파일은 &lt;code&gt;package.json&lt;/code&gt; 의 &lt;code&gt;main&lt;/code&gt; 속성에 지정되어 있습니다. 이것이 &lt;code&gt;electron .&lt;/code&gt; 시작할 때 실행할 파일을 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="a38435d6bc9be7f6c37b9fefb75e8a2ffab8e165" translate="yes" xml:space="preserve">
          <source>Every pull request is tested on the Continuous Integration (CI) system to confirm that it works on Electron's supported platforms.</source>
          <target state="translated">모든 풀 요청은 CI (Continuous Integration) 시스템에서 테스트되어 Electron 지원 플랫폼에서 작동하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0f01ed56a1e32a05e5ef96e4d779f34784af9a96" translate="yes" xml:space="preserve">
          <source>Example</source>
          <target state="translated">Example</target>
        </trans-unit>
        <trans-unit id="1fabb1683d22d0469c9e9cac437dfd3fa193ab75" translate="yes" xml:space="preserve">
          <source>Example code:</source>
          <target state="translated">예제 코드 :</target>
        </trans-unit>
        <trans-unit id="4312c0d196667d274b37be2ada9008127d0d5796" translate="yes" xml:space="preserve">
          <source>Example of getting a real path from a dragged-onto-the-app file:</source>
          <target state="translated">끌어온 앱 파일에서 실제 경로를 가져 오는 예 :</target>
        </trans-unit>
        <trans-unit id="c63737abd7347a7ae582cb9fbdf37d6c0e5b251e" translate="yes" xml:space="preserve">
          <source>Example:</source>
          <target state="translated">Example:</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="d43f17e39a48deb85e042478b50aaf24697d443d" translate="yes" xml:space="preserve">
          <source>Examples of commit messages with semantic prefixes:</source>
          <target state="translated">의미 접두사가있는 커밋 메시지의 예 :</target>
        </trans-unit>
        <trans-unit id="fb3447b632f6a431215776dcf254a01001a40c4f" translate="yes" xml:space="preserve">
          <source>Examples:</source>
          <target state="translated">Examples:</target>
        </trans-unit>
        <trans-unit id="5580e714c8c2bcdee301e532b1f7e69aa9ebb22e" translate="yes" xml:space="preserve">
          <source>Examples: &quot;.google.com&quot;, &quot;.com&quot;, &quot;&lt;a href=&quot;http://.google.com&quot;&gt;http://.google.com&lt;/a&gt;&quot;</source>
          <target state="translated">예 : &quot;.google.com&quot;, &quot;.com&quot;, &quot; &lt;a href=&quot;http://.google.com&quot;&gt;http : //.google.com&lt;/a&gt; &quot;</target>
        </trans-unit>
        <trans-unit id="5add125af3931a2968212be29052de4245883903" translate="yes" xml:space="preserve">
          <source>Examples: &quot;127.0.1&quot;, &quot;[0:0::1]&quot;, &quot;[::1]&quot;, &quot;http://[::1]:99&quot;</source>
          <target state="translated">예 : &quot;127.0.1&quot;, &quot;[0 : 0 :: 1]&quot;, &quot;[:: 1]&quot;, &quot;http : // [:: 1] : 99&quot;</target>
        </trans-unit>
        <trans-unit id="631af215657ac273b156db9dd18c1493b36168bb" translate="yes" xml:space="preserve">
          <source>Examples: &quot;192.168.1.1/16&quot;, &quot;fefe:13::abc/33&quot;.</source>
          <target state="translated">예 : &quot;192.168.1.1/16&quot;, &quot;fefe : 13 :: abc / 33&quot;.</target>
        </trans-unit>
        <trans-unit id="6f4a00d592015b8e3e0b85c73293a684edb1129f" translate="yes" xml:space="preserve">
          <source>Examples: &quot;foobar.com&quot;, &quot;&lt;em&gt;foobar.com&quot;, &quot;&lt;/em&gt;.foobar.com&quot;, &quot;&lt;em&gt;foobar.com:99&quot;, &quot;&lt;a href=&quot;https://x&quot;&gt;https://x&lt;/a&gt;.&lt;/em&gt;.y.com:99&quot;</source>
          <target state="translated">예 : &quot;foobar.com&quot;, &quot; &lt;em&gt;foobar.com&quot;, &quot;&lt;/em&gt; .foobar.com&quot;, &quot; &lt;em&gt;foobar.com:99&quot;, &quot; &lt;a href=&quot;https://x&quot;&gt;https : //로 X&lt;/a&gt; .&lt;/em&gt; .y.com : 99&quot;</target>
        </trans-unit>
        <trans-unit id="c2d9551e2b12d915f4919195330ae215fbc42b22" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;copy&lt;/code&gt; in page.</source>
          <target state="translated">페이지에서 편집 명령 &lt;code&gt;copy&lt;/code&gt; 을 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="00bc5db4eeee069096756fd1644887f76eb809b0" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;cut&lt;/code&gt; in page.</source>
          <target state="translated">페이지에서 편집 명령 &lt;code&gt;cut&lt;/code&gt; 기를 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="ccbbda924e45f6118b8b552daa0b82b7a488e798" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;delete&lt;/code&gt; in page.</source>
          <target state="translated">페이지에서 편집 명령 &lt;code&gt;delete&lt;/code&gt; 를 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="3acca9d1f00ee36a78e96320b3150e2601260a20" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;paste&lt;/code&gt; in page.</source>
          <target state="translated">페이지에서 편집 명령 &lt;code&gt;paste&lt;/code&gt; 를 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="d545a517f9fe12f3be0e891a9b8eb416d2e2eb96" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;pasteAndMatchStyle&lt;/code&gt; in page.</source>
          <target state="translated">페이지에서 &lt;code&gt;pasteAndMatchStyle&lt;/code&gt; 명령을 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="7aaa4ea53a03cbd6eea043d99bf3024bad7ddbb7" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;redo&lt;/code&gt; in page.</source>
          <target state="translated">페이지에서 편집 명령 &lt;code&gt;redo&lt;/code&gt; 을 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="c3f9550816c2719469411609586d51f96f1151a6" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;replace&lt;/code&gt; in page.</source>
          <target state="translated">페이지에서 편집 명령 &lt;code&gt;replace&lt;/code&gt; 를 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="1f2c825fece30efe7c633fd90e4a10180af08e99" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;replaceMisspelling&lt;/code&gt; in page.</source>
          <target state="translated">페이지에서 &lt;code&gt;replaceMisspelling&lt;/code&gt; 편집 명령을 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="37686ee6b1340e6a5fdbf0ce9a298da5fe7aa426" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;selectAll&lt;/code&gt; in page.</source>
          <target state="translated">페이지에서 &lt;code&gt;selectAll&lt;/code&gt; 편집 명령을 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="fb9c21383404017bdc5782991a9c014b1825ef09" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;undo&lt;/code&gt; in page.</source>
          <target state="translated">페이지에서 편집 명령 &lt;code&gt;undo&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="927940fdd81e43defc5ea18ae14a37bdb2ead7c5" translate="yes" xml:space="preserve">
          <source>Executes editing command &lt;code&gt;unselect&lt;/code&gt; in page.</source>
          <target state="translated">페이지에서 &lt;code&gt;unselect&lt;/code&gt; 편집 명령을 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="fc9babe3164047839e389e91298ad1d4dac2cee2" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;copy&lt;/code&gt; in web page.</source>
          <target state="translated">웹 페이지에서 편집 명령 &lt;code&gt;copy&lt;/code&gt; 을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="63ee1a60d1e56539e7fd8d73fc2238cb8e670017" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;cut&lt;/code&gt; in web page.</source>
          <target state="translated">웹 페이지에서 편집 명령 &lt;code&gt;cut&lt;/code&gt; 기를 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="91f09d7b0162338de4e37dc9d1801a2ff53ec05a" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;delete&lt;/code&gt; in web page.</source>
          <target state="translated">웹 페이지에서 편집 명령 &lt;code&gt;delete&lt;/code&gt; 를 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="e3768e532ff3028538eb4ee29a692607ac4619bf" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;paste&lt;/code&gt; in web page.</source>
          <target state="translated">웹 페이지에서 편집 명령 &lt;code&gt;paste&lt;/code&gt; 를 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="a50e68032753fa0c9889c1bb29a20b8ab0f19563" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;pasteAndMatchStyle&lt;/code&gt; in web page.</source>
          <target state="translated">웹 페이지에서 &lt;code&gt;pasteAndMatchStyle&lt;/code&gt; 편집 명령을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="e4d8992bb54b83e9089ceea8ead0390b07f386a7" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;redo&lt;/code&gt; in web page.</source>
          <target state="translated">웹 페이지에서 편집 명령 &lt;code&gt;redo&lt;/code&gt; 실행을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="ba22204717a3a5fb87a06159db63e0d249bcab09" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;replace&lt;/code&gt; in web page.</source>
          <target state="translated">웹 페이지에서 편집 명령 &lt;code&gt;replace&lt;/code&gt; 를 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="0894ebf8c4f9be36d10ca3cb3c6a5148046ffce3" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;replaceMisspelling&lt;/code&gt; in web page.</source>
          <target state="translated">웹 페이지에서 &lt;code&gt;replaceMisspelling&lt;/code&gt; 편집 명령을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="d2f8d6567fa8a752c2e297d44afd66f714fda6af" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;selectAll&lt;/code&gt; in web page.</source>
          <target state="translated">웹 페이지에서 편집 명령 &lt;code&gt;selectAll&lt;/code&gt; 을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="44837e55e0ac490d3d2c3e10e0f1d3ea048b6cea" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;undo&lt;/code&gt; in web page.</source>
          <target state="translated">웹 페이지에서 편집 명령 &lt;code&gt;undo&lt;/code&gt; 를 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="95ff6b03dbdc9ff6d6ac679c35352e28f8cc6a2b" translate="yes" xml:space="preserve">
          <source>Executes the editing command &lt;code&gt;unselect&lt;/code&gt; in web page.</source>
          <target state="translated">웹 페이지에서 편집 명령 &lt;code&gt;unselect&lt;/code&gt; 를 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="5b5874df7dc1eb5e12ec5179c4894d9611dfea17" translate="yes" xml:space="preserve">
          <source>Executing Binaries Inside &lt;code&gt;asar&lt;/code&gt; Archive</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; Archive 내부에서 바이너리 실행</target>
        </trans-unit>
        <trans-unit id="7c212da9b7b08836f30a2f44d7b0b631db17e1a8" translate="yes" xml:space="preserve">
          <source>Exits immediately with &lt;code&gt;exitCode&lt;/code&gt;. &lt;code&gt;exitCode&lt;/code&gt; defaults to 0.</source>
          <target state="translated">&lt;code&gt;exitCode&lt;/code&gt; 로 즉시 종료합니다 . &lt;code&gt;exitCode&lt;/code&gt; 의 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="e5a7308aee4bb7cb898c7a91834daec766eb3d8f" translate="yes" xml:space="preserve">
          <source>Experimental features are, as the name suggests, experimental and have not been enabled for all Chromium users. Furthermore, their impact on Electron as a whole has likely not been tested.</source>
          <target state="translated">실험적인 기능은 이름에서 알 수 있듯이 실험적이며 모든 Chromium 사용자가 사용할 수있는 것은 아닙니다. 또한 Electron에 미치는 영향은 아직 테스트되지 않았을 것입니다.</target>
        </trans-unit>
        <trans-unit id="15fc9eab791707cb2be3aa36774b444776b06642" translate="yes" xml:space="preserve">
          <source>Extensions to process object.</source>
          <target state="translated">객체를 처리하기위한 확장.</target>
        </trans-unit>
        <trans-unit id="36bdb0c4e95eb235a9dae5ec3bc3c0e50ebb1632" translate="yes" xml:space="preserve">
          <source>External Debuggers</source>
          <target state="translated">외부 디버거</target>
        </trans-unit>
        <trans-unit id="6665ae025d7bfde53cfcf2c9c281e3a277b67fe8" translate="yes" xml:space="preserve">
          <source>Extra Unpacking on Some APIs</source>
          <target state="translated">일부 API에서 추가 압축 풀기</target>
        </trans-unit>
        <trans-unit id="03688ba6aa340b87549088aa5739944cb6b1dc73" translate="yes" xml:space="preserve">
          <source>FAQ</source>
          <target state="translated">FAQ</target>
        </trans-unit>
        <trans-unit id="a53ac626975f27602b101ee26086bf28679223ca" translate="yes" xml:space="preserve">
          <source>Fake Stat Information of &lt;code&gt;fs.stat&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;fs.stat&lt;/code&gt; 의 가짜 통계 정보</target>
        </trans-unit>
        <trans-unit id="0e9430a5c15a25c2e0bc6a804e7395a0d585931b" translate="yes" xml:space="preserve">
          <source>Faroese</source>
          <target state="translated">Faroese</target>
        </trans-unit>
        <trans-unit id="ed3bdadf84df50841fa3f667344949be09290c26" translate="yes" xml:space="preserve">
          <source>Fatal internal compiler error: C1001</source>
          <target state="translated">치명적인 내부 컴파일러 오류 : C1001</target>
        </trans-unit>
        <trans-unit id="4f5a54627dea26b6876632913ba4f8191aad7605" translate="yes" xml:space="preserve">
          <source>Feature Flags</source>
          <target state="translated">기능 플래그</target>
        </trans-unit>
        <trans-unit id="b2e49793fe93779cb01b8dc38d230ea8124b18f9" translate="yes" xml:space="preserve">
          <source>Feature flags are a common practice in Chromium, and are well-established in the web-development ecosystem. In the context of Electron, a feature flag or &lt;strong&gt;soft branch&lt;/strong&gt; must have the following properties:</source>
          <target state="translated">기능 플래그는 Chromium의 일반적인 관행이며 웹 개발 생태계에서 잘 확립되어 있습니다. Electron과 관련하여 기능 플래그 또는 &lt;strong&gt;소프트 브랜치&lt;/strong&gt; 는 다음 특성을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="d4dcd7fef14f742aac1948cca5e3aa19a6d26619" translate="yes" xml:space="preserve">
          <source>Fedora 21</source>
          <target state="translated">페도라 21</target>
        </trans-unit>
        <trans-unit id="68ef9cadad56547c3404ff7d01f699cf1f121a09" translate="yes" xml:space="preserve">
          <source>Feel free to post a comment in the pull request to ping reviewers if you are awaiting an answer on something. If you encounter words or acronyms that seem unfamiliar, refer to this &lt;a href=&quot;https://sites.google.com/a/chromium.org/dev/glossary&quot;&gt;glossary&lt;/a&gt;.</source>
          <target state="translated">무언가에 대한 답변을 기다리는 경우 핑 검토 자에게 풀 요청에 의견을 게시하십시오. 익숙하지 않은 단어 나 머리 글자를 만나면이 &lt;a href=&quot;https://sites.google.com/a/chromium.org/dev/glossary&quot;&gt;용어집을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="175df75ca866a486722893cf48cbe47ba7932e38" translate="yes" xml:space="preserve">
          <source>Fetch the git submodules:</source>
          <target state="translated">자식 서브 모듈을 가져옵니다 :</target>
        </trans-unit>
        <trans-unit id="927b92da1ee917ff26d97054707f38033a5f0818" translate="yes" xml:space="preserve">
          <source>Fetches a path's associated icon.</source>
          <target state="translated">패스의 관련 아이콘을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="2c3cafa4db3f3e1e51b3dff4303502dbe42b7a89" translate="yes" xml:space="preserve">
          <source>File</source>
          <target state="translated">File</target>
        </trans-unit>
        <trans-unit id="246b2f9db7afd4afaa3d5e709533172c78ad8d0e" translate="yes" xml:space="preserve">
          <source>File Object</source>
          <target state="translated">파일 객체</target>
        </trans-unit>
        <trans-unit id="7a3acd779d548299a9f1c4a2da5a38f640685def" translate="yes" xml:space="preserve">
          <source>File names should be concatenated with &lt;code&gt;-&lt;/code&gt; instead of &lt;code&gt;_&lt;/code&gt;, e.g. &lt;code&gt;file-name.js&lt;/code&gt; rather than &lt;code&gt;file_name.js&lt;/code&gt;, because in &lt;a href=&quot;https://github.com/github/atom&quot;&gt;github/atom&lt;/a&gt; module names are usually in the &lt;code&gt;module-name&lt;/code&gt; form. This rule only applies to &lt;code&gt;.js&lt;/code&gt; files.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/github/atom&quot;&gt;github / atom&lt;/a&gt; 모듈 이름은 일반적으로 &lt;code&gt;module-name&lt;/code&gt; 형식 이므로 파일 이름은 &lt;code&gt;_&lt;/code&gt; 대신 &lt;code&gt;-&lt;/code&gt; 와 연결해야합니다 ( 예 : &lt;code&gt;file_name.js&lt;/code&gt; 가 아닌 &lt;code&gt;file-name.js&lt;/code&gt; ) . 이 규칙은 &lt;code&gt;.js&lt;/code&gt; 파일 에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7af55e1bfa851e12bdbfb75d7450fac19000151a" translate="yes" xml:space="preserve">
          <source>FileFilter</source>
          <target state="translated">FileFilter</target>
        </trans-unit>
        <trans-unit id="f462d97028e01e1f17e34060a7c99429b205e942" translate="yes" xml:space="preserve">
          <source>FileFilter Object</source>
          <target state="translated">FileFilter 객체</target>
        </trans-unit>
        <trans-unit id="cd9a5554356141790a82e86864449b480ac00a5e" translate="yes" xml:space="preserve">
          <source>Filipino</source>
          <target state="translated">Filipino</target>
        </trans-unit>
        <trans-unit id="131e90e96326989c97e15eca9aa16fac395ba444" translate="yes" xml:space="preserve">
          <source>Finally the &lt;code&gt;index.html&lt;/code&gt; is the web page you want to show:</source>
          <target state="translated">마지막으로 &lt;code&gt;index.html&lt;/code&gt; 은 표시하려는 웹 페이지입니다.</target>
        </trans-unit>
        <trans-unit id="02b74ef965a4dcee339726db07647fc90cfb8e47" translate="yes" xml:space="preserve">
          <source>Find out filesystem location used by Chrome for storing extensions:</source>
          <target state="translated">확장 프로그램을 저장하기 위해 Chrome에서 사용하는 파일 시스템 위치를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="b9648adc5da1390634fe986be70082d1a7314302" translate="yes" xml:space="preserve">
          <source>Find out what version change is needed</source>
          <target state="translated">어떤 버전 변경이 필요한지 알아보십시오</target>
        </trans-unit>
        <trans-unit id="f97c03477f029ec97161fb3249f40975f98cb43e" translate="yes" xml:space="preserve">
          <source>Finding Support</source>
          <target state="translated">지원 찾기</target>
        </trans-unit>
        <trans-unit id="57eef27b1643e8b06fcc0444b2a3519d01b2cef8" translate="yes" xml:space="preserve">
          <source>Finnish</source>
          <target state="translated">Finnish</target>
        </trans-unit>
        <trans-unit id="5e52497e1cdbc228ec84c3a498a510d9eb0a9578" translate="yes" xml:space="preserve">
          <source>Fired when a frame has done navigation.</source>
          <target state="translated">프레임 탐색이 완료되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="51a13a5d80380bc539de3421f81e3ce28e63bd46" translate="yes" xml:space="preserve">
          <source>Fired when a load has committed. This includes navigation within the current document as well as subframe document-level loads, but does not include asynchronous resource loads.</source>
          <target state="translated">로드가 커밋되면 시작됩니다. 여기에는 현재 문서 내 탐색 및 서브 프레임 문서 수준로드가 포함되지만 비동기 리소스로드는 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="277b75ade0fe25c29d720450d6e66a97fb6cf510" translate="yes" xml:space="preserve">
          <source>Fired when a plugin process is crashed.</source>
          <target state="translated">플러그인 프로세스가 중단되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="6a0ffe5f413971478388bb78716740c0bc854831" translate="yes" xml:space="preserve">
          <source>Fired when a redirect was received while requesting a resource.</source>
          <target state="translated">리소스를 요청하는 동안 리디렉션이 수신되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="6e3ac89d8432eea459401b7b1793621958ef5765" translate="yes" xml:space="preserve">
          <source>Fired when a result is available for &lt;a href=&quot;#webviewfindinpagetext-options&quot;&gt;&lt;code&gt;webview.findInPage&lt;/code&gt;&lt;/a&gt; request.</source>
          <target state="translated">&lt;a href=&quot;#webviewfindinpagetext-options&quot;&gt; &lt;code&gt;webview.findInPage&lt;/code&gt; &lt;/a&gt; 요청에 대한 결과를 사용할 수있을 때 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="52d384e722ca2265adbacfacb3b2c4c7da5b36c0" translate="yes" xml:space="preserve">
          <source>Fired when details regarding a requested resource is available. &lt;code&gt;status&lt;/code&gt; indicates socket connection to download the resource.</source>
          <target state="translated">요청 된 리소스에 대한 세부 정보가 제공되면 시작됩니다. &lt;code&gt;status&lt;/code&gt; 는 리소스를 다운로드하기위한 소켓 연결을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4451d0b8ebb6b9a5a3977344345d786b96cc8075" translate="yes" xml:space="preserve">
          <source>Fired when document in the given frame is loaded.</source>
          <target state="translated">주어진 프레임에 문서가로드되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="f63f99464becc370d140a795365e8fd6b207381a" translate="yes" xml:space="preserve">
          <source>Fired when page enters fullscreen triggered by HTML API.</source>
          <target state="translated">HTML API에 의해 트리거 된 페이지가 전체 화면으로 들어가면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="e2934ed79f57401f01947d5576b783caae267c53" translate="yes" xml:space="preserve">
          <source>Fired when page leaves fullscreen triggered by HTML API.</source>
          <target state="translated">HTML API에 의해 페이지가 전체 화면으로 표시되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="0570c1500c67e1d7aebc65a98a1b7e823f516360" translate="yes" xml:space="preserve">
          <source>Fired when page receives favicon urls.</source>
          <target state="translated">페이지에 파비콘 URL이 수신되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="117e37459607abb65dce79a7c045800ead6888db" translate="yes" xml:space="preserve">
          <source>Fired when page title is set during navigation. &lt;code&gt;explicitSet&lt;/code&gt; is false when title is synthesized from file url.</source>
          <target state="translated">탐색 중에 페이지 제목이 설정되면 시작됩니다. 파일 URL에서 제목을 합성 할 때 &lt;code&gt;explicitSet&lt;/code&gt; 이 false입니다.</target>
        </trans-unit>
        <trans-unit id="be44199f58d36bd4301154b23d0dcb330ea0d875" translate="yes" xml:space="preserve">
          <source>Fired when the WebContents is destroyed.</source>
          <target state="translated">WebContents가 파괴되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="4c9f296f1d9e1fa51dbae125c7971829e6c0c607" translate="yes" xml:space="preserve">
          <source>Fired when the gpu process is crashed.</source>
          <target state="translated">GPU 프로세스가 충돌하면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="10d97ea48a6bad16b15200e1a9908e3087d0cf68" translate="yes" xml:space="preserve">
          <source>Fired when the guest page attempts to close itself.</source>
          <target state="translated">게스트 페이지 자체를 닫으려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f369a2095107e692ef2ece44e4987543937640cc" translate="yes" xml:space="preserve">
          <source>Fired when the guest page attempts to open a new browser window.</source>
          <target state="translated">게스트 페이지가 새 브라우저 창을 열려고하면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="f24231d7fc3dfa3fde6a0c2f7d4794cda64c29f8" translate="yes" xml:space="preserve">
          <source>Fired when the guest page has sent an asynchronous message to embedder page.</source>
          <target state="translated">게스트 페이지가 내장 페이지에 비동기 메시지를 보냈을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ec7f3851082921c42a1028ddac2f7bc640c59467" translate="yes" xml:space="preserve">
          <source>Fired when the guest window logs a console message.</source>
          <target state="translated">게스트 창에 콘솔 메시지가 기록되면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="dd8723914c8724f48e88e5f7cbd957e9107f2781" translate="yes" xml:space="preserve">
          <source>Fired when the navigation is done, i.e. the spinner of the tab will stop spinning, and the &lt;code&gt;onload&lt;/code&gt; event is dispatched.</source>
          <target state="translated">탐색이 완료되면 시작됩니다. 즉, 탭의 회전자가 회전을 멈추고 &lt;code&gt;onload&lt;/code&gt; 이벤트가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="2129d76f2db58520ccfef9c9d47b3b2327db6bd4" translate="yes" xml:space="preserve">
          <source>Fired when the renderer process is crashed.</source>
          <target state="translated">렌더러 프로세스가 충돌하면 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="fc1e93fb67c9edaeda6350f0a4f6392669140d9d" translate="yes" xml:space="preserve">
          <source>First please make sure the extension is still being maintained, some extensions can not even work for recent versions of Chrome browser, and we are not able to do anything for them.</source>
          <target state="translated">먼저 확장 프로그램이 계속 유지되고 있는지 확인하세요. 일부 확장 프로그램은 최신 버전의 Chrome 브라우저에서도 작동하지 않으며 확장 기능을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="12a0d3bebd41a47a1ebcd202cc5fd6f469240c5a" translate="yes" xml:space="preserve">
          <source>First you need to download the &lt;code&gt;chromedriver&lt;/code&gt; binary, and run it:</source>
          <target state="translated">먼저 &lt;code&gt;chromedriver&lt;/code&gt; 바이너리 를 다운로드하여 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="c97db4162758208ef13df66721f7af8cb0c380b7" translate="yes" xml:space="preserve">
          <source>First, in order to avoid deadlocks, the callbacks passed to the main process are called asynchronously. You should not expect the main process to get the return value of the passed callbacks.</source>
          <target state="translated">먼저 교착 상태를 피하기 위해 기본 프로세스에 전달 된 콜백이 비동기 적으로 호출됩니다. 메인 프로세스가 전달 된 콜백의 반환 값을 얻을 것으로 기 대해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="34b7a02caa86c50def87d171ced86e2b7a6d85dc" translate="yes" xml:space="preserve">
          <source>First, install &lt;a href=&quot;https://en.wikipedia.org/wiki/Xvfb&quot;&gt;Xvfb&lt;/a&gt;. It's a virtual framebuffer, implementing the X11 display server protocol - it performs all graphical operations in memory without showing any screen output, which is exactly what we need.</source>
          <target state="translated">먼저 &lt;a href=&quot;https://en.wikipedia.org/wiki/Xvfb&quot;&gt;Xvfb를&lt;/a&gt; 설치 하십시오 . X11 디스플레이 서버 프로토콜을 구현하는 가상 프레임 버퍼입니다. 화면 출력을 표시하지 않고 메모리에서 모든 그래픽 작업을 수행하므로 정확히 필요한 것입니다.</target>
        </trans-unit>
        <trans-unit id="9be1e7185b5c9d3d7dabfa2ff2d7a828031f3d46" translate="yes" xml:space="preserve">
          <source>First, install a recent version of Node.js. Depending on your Linux distribution, the installation steps might differ. Assuming that you normally install software using a package manager like &lt;code&gt;apt&lt;/code&gt; or &lt;code&gt;pacman&lt;/code&gt;, use the official &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;Node.js guidance on installing on Linux&lt;/a&gt;.</source>
          <target state="translated">먼저 최신 버전의 Node.js를 설치하십시오. Linux 배포판에 따라 설치 단계가 다를 수 있습니다. 일반적으로 &lt;code&gt;apt&lt;/code&gt; 또는 &lt;code&gt;pacman&lt;/code&gt; 과 같은 패키지 관리자를 사용하여 소프트웨어를 설치한다고 가정하면 &lt;a href=&quot;https://nodejs.org/en/download/package-manager/&quot;&gt;Linux에 설치하는 데&lt;/a&gt; 공식 Node.js 지침을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0af76cb4ec629443cfcf87eae3eddbd49728f097" translate="yes" xml:space="preserve">
          <source>First, install a recent version of Node.js. We recommend that you install either the latest &lt;code&gt;LTS&lt;/code&gt; or &lt;code&gt;Current&lt;/code&gt; version available. Visit &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;the Node.js download page&lt;/a&gt; and select the &lt;code&gt;Windows Installer&lt;/code&gt;. Once downloaded, execute the installer and let the installation wizard guide you through the installation.</source>
          <target state="translated">먼저 최신 버전의 Node.js를 설치하십시오. 사용 가능한 최신 &lt;code&gt;LTS&lt;/code&gt; 또는 &lt;code&gt;Current&lt;/code&gt; 버전 을 설치하는 것이 좋습니다 . &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js 다운로드 페이지를&lt;/a&gt; 방문 하여 &lt;code&gt;Windows Installer&lt;/code&gt; 를 선택하십시오 . 다운로드가 완료되면 설치 관리자를 실행하고 설치 마법사가 설치 과정을 안내합니다.</target>
        </trans-unit>
        <trans-unit id="cc292aedc916ac210a076b2b0186247bdd714b0b" translate="yes" xml:space="preserve">
          <source>First, install a recent version of Node.js. We recommend that you install either the latest &lt;code&gt;LTS&lt;/code&gt; or &lt;code&gt;Current&lt;/code&gt; version available. Visit &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;the Node.js download page&lt;/a&gt; and select the &lt;code&gt;macOS Installer&lt;/code&gt;. While Homebrew is an offered option, but we recommend against it - many tools will be incompatible with the way Homebrew installs Node.js.</source>
          <target state="translated">먼저 최신 버전의 Node.js를 설치하십시오. 사용 가능한 최신 &lt;code&gt;LTS&lt;/code&gt; 또는 &lt;code&gt;Current&lt;/code&gt; 버전 을 설치하는 것이 좋습니다 . &lt;a href=&quot;https://nodejs.org/en/download/&quot;&gt;Node.js 다운로드 페이지를&lt;/a&gt; 방문 하여 &lt;code&gt;macOS Installer&lt;/code&gt; 선택하십시오 . Homebrew가 제공되는 옵션이지만 권장하지는 않지만 많은 도구는 Homebrew가 Node.js를 설치하는 방식과 호환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1d7df8cadd80eb18446994d001ea3461e077d6dd" translate="yes" xml:space="preserve">
          <source>First, you have to add a &lt;code&gt;ElectronTeamID&lt;/code&gt; key to your app's &lt;code&gt;Info.plist&lt;/code&gt;, which has your Team ID as value:</source>
          <target state="translated">먼저 Team ID가 값인 앱의 &lt;code&gt;Info.plist&lt;/code&gt; 에 &lt;code&gt;ElectronTeamID&lt;/code&gt; 키 를 추가해야 합니다.</target>
        </trans-unit>
        <trans-unit id="ca0882e805f3e57f974f180e01085f543e2fb36d" translate="yes" xml:space="preserve">
          <source>Fix &lt;code&gt;*.patch&lt;/code&gt; files in the &lt;code&gt;patches/&lt;/code&gt; and &lt;code&gt;patches-mas/&lt;/code&gt; folders.</source>
          <target state="translated">&lt;code&gt;patches/&lt;/code&gt; 및 &lt;code&gt;patches-mas/&lt;/code&gt; 폴더 에서 &lt;code&gt;*.patch&lt;/code&gt; 파일을 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="3573878e20013b55583b98e25b25480b5f447544" translate="yes" xml:space="preserve">
          <source>Fix build config errors first</source>
          <target state="translated">먼저 빌드 구성 오류 수정</target>
        </trans-unit>
        <trans-unit id="2fd326b2a55bcce8aaf40e5b205a43586f01e477" translate="yes" xml:space="preserve">
          <source>Fix compilation and linking errors</source>
          <target state="translated">컴파일 및 연결 오류 수정</target>
        </trans-unit>
        <trans-unit id="be472760b1c59aabacb468181805b6d35ea1f4a6" translate="yes" xml:space="preserve">
          <source>Fix fatal errors first, like missing files and errors related to compiler flags or defines</source>
          <target state="translated">누락 된 파일 및 컴파일러 플래그와 관련된 오류 또는 정의와 같은 치명적 오류를 먼저 수정</target>
        </trans-unit>
        <trans-unit id="d1cadd8ae95fff74283ef0e169c388a7747600a6" translate="yes" xml:space="preserve">
          <source>Fix missing binaries of a release manually</source>
          <target state="translated">릴리스의 누락 된 바이너리를 수동으로 수정</target>
        </trans-unit>
        <trans-unit id="ecdbb9113c4d8c2f61653a2c4c861cc1dc00c823" translate="yes" xml:space="preserve">
          <source>Flash Frame</source>
          <target state="translated">플래시 프레임</target>
        </trans-unit>
        <trans-unit id="bd43ec85fdff6518874fb812586a2433706d81d5" translate="yes" xml:space="preserve">
          <source>Focuses on the window.</source>
          <target state="translated">창에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="cee144f2d216cdc7631ba053ba3f05f1965d28a6" translate="yes" xml:space="preserve">
          <source>Focuses the child window (brings the window to front).</source>
          <target state="translated">자식 창에 초점을 맞 춥니 다 (창을 앞으로 가져옵니다).</target>
        </trans-unit>
        <trans-unit id="14c6a7fd821dc867b3d84617a634eef0422b84c7" translate="yes" xml:space="preserve">
          <source>Focuses the web page.</source>
          <target state="translated">웹 페이지를 집중시킵니다.</target>
        </trans-unit>
        <trans-unit id="aecd03a4a4b9d532aa63bf7dc404e53645c982b7" translate="yes" xml:space="preserve">
          <source>Follow all the steps above to fix Electron code on all supported platforms.</source>
          <target state="translated">지원되는 모든 플랫폼에서 Electron 코드를 수정하려면 위의 모든 단계를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="1c24b5bf867b6e42c0299f9cc8698367f71b90cc" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron on Linux.</source>
          <target state="translated">Linux에서 Electron을 빌드하려면 아래 지침을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="5b7fa4ec60b9d247ca93f67ab735d3ef943d7b6a" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron on Windows.</source>
          <target state="translated">Windows에서 Electron을 구축하려면 아래 지침을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="fd80cb5d21b263826159e8667626fffe170c3f97" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron on macOS.</source>
          <target state="translated">macOS에서 Electron을 구축하려면 아래 지침을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="7918e53919f3efaa0dfa15fb15011ba6065eb834" translate="yes" xml:space="preserve">
          <source>Follow the guidelines below for building Electron with the experimental GN build.</source>
          <target state="translated">실험적인 GN 빌드로 Electron을 구축하려면 아래 지침을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="921acf758984257599ba401c33220ee705e3803f" translate="yes" xml:space="preserve">
          <source>Following &lt;code&gt;gyp&lt;/code&gt; files contain the main rules for building Electron:</source>
          <target state="translated">다음 &lt;code&gt;gyp&lt;/code&gt; 파일에는 Electron 빌드에 대한 기본 규칙이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="549cb66a7786a536325eec62186f803c70217c72" translate="yes" xml:space="preserve">
          <source>Following platforms are supported by Electron:</source>
          <target state="translated">Electron은 다음 플랫폼을 지원합니다 :</target>
        </trans-unit>
        <trans-unit id="c2e6ed1cc1e40ea38253fb9692c1bee87a7a9da6" translate="yes" xml:space="preserve">
          <source>Following suffixes for DPI are also supported:</source>
          <target state="translated">DPI의 다음 접미사도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="7ed62a7bbd3406e1648a659173663fd21604ab49" translate="yes" xml:space="preserve">
          <source>For C++ and Python, we follow Chromium's &lt;a href=&quot;https://www.chromium.org/developers/coding-style&quot;&gt;Coding Style&lt;/a&gt;. You can use &lt;a href=&quot;clang-format&quot;&gt;clang-format&lt;/a&gt; to format the C++ code automatically. There is also a script &lt;code&gt;script/cpplint.py&lt;/code&gt; to check whether all files conform.</source>
          <target state="translated">C ++ 및 Python의 경우 Chromium 's &lt;a href=&quot;https://www.chromium.org/developers/coding-style&quot;&gt;Coding Style을&lt;/a&gt; 따릅니다 . &lt;a href=&quot;clang-format&quot;&gt;clang-format&lt;/a&gt; 을 사용하여 C ++ 코드를 자동으로 포맷 할 수 있습니다 . 모든 파일이 일치하는지 확인 하는 스크립트 &lt;code&gt;script/cpplint.py&lt;/code&gt; 도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1111e6b08b7a2e0ce97ca11efe04cef41bea428e" translate="yes" xml:space="preserve">
          <source>For Jenkins, a &lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin&quot;&gt;Xvfb plugin is available&lt;/a&gt;.</source>
          <target state="translated">Jenkins의 경우 &lt;a href=&quot;https://wiki.jenkins-ci.org/display/JENKINS/Xvfb+Plugin&quot;&gt;Xvfb 플러그인을 사용할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2e234ecf902399c6ca2e2168815587789055c246" translate="yes" xml:space="preserve">
          <source>For POST requests the &lt;code&gt;uploadData&lt;/code&gt; object must be provided.</source>
          <target state="translated">POST 요청의 경우 &lt;code&gt;uploadData&lt;/code&gt; 객체를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="2e94ed3bd242175238f65cecbea47db530efc30e" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;minor&lt;/code&gt; release, e.g. &lt;code&gt;1.8.0&lt;/code&gt;, use this format:</source>
          <target state="translated">A에 대한 &lt;code&gt;minor&lt;/code&gt; 예 릴리스 &lt;code&gt;1.8.0&lt;/code&gt; 을 ,이 형식을 사용합니다 :</target>
        </trans-unit>
        <trans-unit id="c3aef3c0a78c4ebdda5b31c717e34be096a56311" translate="yes" xml:space="preserve">
          <source>For a &lt;code&gt;patch&lt;/code&gt; release, use the following format:</source>
          <target state="translated">A에 대한 &lt;code&gt;patch&lt;/code&gt; 릴리스, 다음 형식을 사용합니다 :</target>
        </trans-unit>
        <trans-unit id="fc84c5b30853e927ab61c178eca9058bf3442a18" translate="yes" xml:space="preserve">
          <source>For a complex app, the &lt;code&gt;ready-to-show&lt;/code&gt; event could be emitted too late, making the app feel slow. In this case, it is recommended to show the window immediately, and use a &lt;code&gt;backgroundColor&lt;/code&gt; close to your app's background:</source>
          <target state="translated">복잡한 앱의 경우 &lt;code&gt;ready-to-show&lt;/code&gt; 이벤트가 너무 늦게 발생하여 앱이 느리게 느껴질 수 있습니다. 이 경우 창을 즉시 표시하고 앱의 배경에 가까운 &lt;code&gt;backgroundColor&lt;/code&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="22fe9873a98adb59030dea1269d80e54827cd0a8" translate="yes" xml:space="preserve">
          <source>For a list of boilerplates and tools to kick-start your development process, see the &lt;a href=&quot;boilerplates-and-clis&quot;&gt;Boilerplates and CLIs documentation&lt;/a&gt;.</source>
          <target state="translated">개발 프로세스를 시작하기위한 상용구 및 도구 목록은 상용구 &lt;a href=&quot;boilerplates-and-clis&quot;&gt;및 CLI 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d588bcee88995a0c7fae3327f86fa8df139ed0a0" translate="yes" xml:space="preserve">
          <source>For an introduction to ProcMon's basic and advanced debugging features, go check out &lt;a href=&quot;https://channel9.msdn.com/shows/defrag-tools/defrag-tools-4-process-monitor&quot;&gt;this video tutorial&lt;/a&gt; provided by Microsoft.</source>
          <target state="translated">ProcMon의 기본 및 고급 디버깅 기능에 대한 소개 는 Microsoft에서 제공하는 &lt;a href=&quot;https://channel9.msdn.com/shows/defrag-tools/defrag-tools-4-process-monitor&quot;&gt;이 비디오 자습서를&lt;/a&gt; 확인 하십시오.</target>
        </trans-unit>
        <trans-unit id="20758183c3e1338dc8a6b93162460ce862ff75d3" translate="yes" xml:space="preserve">
          <source>For any issue, there are fundamentally three ways an individual can contribute:</source>
          <target state="translated">어떤 문제 든 개인이 기여할 수있는 근본적인 세 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c36476d109a6eac638160d47ed71c4848f206bb8" translate="yes" xml:space="preserve">
          <source>For certain events the &lt;code&gt;listener&lt;/code&gt; is passed with a &lt;code&gt;callback&lt;/code&gt;, which should be called with a &lt;code&gt;response&lt;/code&gt; object when &lt;code&gt;listener&lt;/code&gt; has done its work.</source>
          <target state="translated">특정 이벤트의 경우 &lt;code&gt;listener&lt;/code&gt; 는 &lt;code&gt;callback&lt;/code&gt; 과 함께 전달되며 &lt;code&gt;listener&lt;/code&gt; 는 작업을 수행 했을 때 &lt;code&gt;response&lt;/code&gt; 객체 와 함께 호출되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="502cf085450be5d6d8a56eda1a567fd820d5644e" translate="yes" xml:space="preserve">
          <source>For certain features (e.g. pinch-zoom) to work properly, you must target the macOS 10.10 SDK.</source>
          <target state="translated">특정 기능 (예 : 핀치 줌)이 제대로 작동하려면 macOS 10.10 SDK를 대상으로해야합니다.</target>
        </trans-unit>
        <trans-unit id="f55316ce3b72dc39959ab1636a82f40fea730083" translate="yes" xml:space="preserve">
          <source>For convenience, you may want to wrap &lt;code&gt;appProcess&lt;/code&gt; in a driver object that provides more high-level functions. Here is an example of how you can do this:</source>
          <target state="translated">편의상 더 높은 수준의 기능을 제공하는 드라이버 객체에 &lt;code&gt;appProcess&lt;/code&gt; 를 래핑 할 수 있습니다. 이를 수행하는 방법의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6265093784bd7dbf5e19bb812e72dae142bf8944" translate="yes" xml:space="preserve">
          <source>For each major and minor bump, you should expect to see something like the following:</source>
          <target state="translated">각각의 주 및 부 범프에 대해 다음과 같은 내용이 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="58abffa9ea34b3901414814791108b8b1b94cc23" translate="yes" xml:space="preserve">
          <source>For each patch, do:</source>
          <target state="translated">각 패치에 대해 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="83edd08299e575573bc5493f6bc769dea6d6a6c1" translate="yes" xml:space="preserve">
          <source>For each patch:</source>
          <target state="translated">각 패치마다 :</target>
        </trans-unit>
        <trans-unit id="7e1e492e1ff102dacf9ee3206f3207099b0d6167" translate="yes" xml:space="preserve">
          <source>For example building with GCC toolchain:</source>
          <target state="translated">예를 들어 GCC 툴체인으로 구축 :</target>
        </trans-unit>
        <trans-unit id="065f28411e5112140feb1dde5f9794fa00a0584d" translate="yes" xml:space="preserve">
          <source>For example if &lt;code&gt;icon.png&lt;/code&gt; is a normal image that has standard resolution, then &lt;code&gt;icon@2x.png&lt;/code&gt; will be treated as a high resolution image that has double DPI density.</source>
          <target state="translated">예를 들어 &lt;code&gt;icon.png&lt;/code&gt; 가 표준 해상도의 일반 이미지 인 경우 &lt;code&gt;icon@2x.png&lt;/code&gt; 는 DPI 밀도가 두 배인 고해상도 이미지로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="7c473301f00f572dccbc6dcc4c5399d4e0ed0ace" translate="yes" xml:space="preserve">
          <source>For example if you installed &lt;code&gt;clang&lt;/code&gt; under &lt;code&gt;/user/local/bin/clang&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;/user/local/bin/clang&lt;/code&gt; 아래에 &lt;code&gt;clang&lt;/code&gt; 을 설치 한 경우 :</target>
        </trans-unit>
        <trans-unit id="ba48d1140902ffdcb02cd8e0d7757e695bd35f62" translate="yes" xml:space="preserve">
          <source>For example when you load following page with custom protocol without registering it as standard scheme, the image will not be loaded because non-standard schemes can not recognize relative URLs:</source>
          <target state="translated">예를 들어 다음 페이지를 표준 구성표로 등록하지 않고 사용자 지정 프로토콜을 사용하여로드하는 경우 비표준 구성표는 상대 URL을 인식 할 수 없으므로 이미지가로드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="493ec61d1e04b47a4387b0ca5addeea25d2a2575" translate="yes" xml:space="preserve">
          <source>For example, Windows Media Player might offer standard media transport controls such as play, pause, mute, and stop.</source>
          <target state="translated">예를 들어 Windows Media Player는 재생, 일시 중지, 음소거 및 중지와 같은 표준 미디어 전송 컨트롤을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3494f8de5fe0b0ecf247fa44514610b6a4b5dc01" translate="yes" xml:space="preserve">
          <source>For example, an API calling A requests for &lt;code&gt;prevent-app-suspension&lt;/code&gt;, and another calling B requests for &lt;code&gt;prevent-display-sleep&lt;/code&gt;. &lt;code&gt;prevent-display-sleep&lt;/code&gt; will be used until B stops its request. After that, &lt;code&gt;prevent-app-suspension&lt;/code&gt; is used.</source>
          <target state="translated">예를 들어 A를 호출하는 API는 &lt;code&gt;prevent-app-suspension&lt;/code&gt; 을 요청하고 다른 호출 B는 &lt;code&gt;prevent-display-sleep&lt;/code&gt; 을 요청합니다 . B가 요청을 중지 할 때까지 &lt;code&gt;prevent-display-sleep&lt;/code&gt; 가 사용됩니다. 그런 다음 &lt;code&gt;prevent-app-suspension&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9c1f50d21d4007f1d24f2deda38646ce1693771a" translate="yes" xml:space="preserve">
          <source>For example, suppose we have an &lt;code&gt;example.asar&lt;/code&gt; archive under &lt;code&gt;/path/to&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;/path/to&lt;/code&gt; 아래에 &lt;code&gt;example.asar&lt;/code&gt; 아카이브 가 있다고 가정 합니다 .</target>
        </trans-unit>
        <trans-unit id="e6543b5df66545d392593abae27aaf4d3618aaa2" translate="yes" xml:space="preserve">
          <source>For example, the following code seems innocent at first glance. It installs a callback for the &lt;code&gt;close&lt;/code&gt; event on a remote object:</source>
          <target state="translated">예를 들어, 다음 코드는 언뜻보기에 결백합니다. 원격 객체에 &lt;code&gt;close&lt;/code&gt; 이벤트에 대한 콜백을 설치 합니다.</target>
        </trans-unit>
        <trans-unit id="b2c330e45eb22f06fc0ae8f33da09f6bd6a525e6" translate="yes" xml:space="preserve">
          <source>For example, to get a file with &lt;code&gt;$.get&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;$.get&lt;/code&gt; 파일을 얻으려면 :</target>
        </trans-unit>
        <trans-unit id="49a277e10dfd7299cf73cfb6c1f4de56cad0bbf3" translate="yes" xml:space="preserve">
          <source>For example, when creating a tray or setting a window's icon, you can pass an image file path as a &lt;code&gt;String&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 트레이를 만들거나 창 아이콘을 설정할 때 이미지 파일 경로를 &lt;code&gt;String&lt;/code&gt; 으로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dc165346dfd2f10c3f19f087c010877da49b91ef" translate="yes" xml:space="preserve">
          <source>For information on how to properly disclose an Electron vulnerability, see &lt;a href=&quot;https://github.com/electron/electron/tree/master/SECURITY.md&quot;&gt;SECURITY.md&lt;/a&gt;</source>
          <target state="translated">전자 취약점을 올바르게 공개하는 방법에 대한 자세한 내용은 &lt;a href=&quot;https://github.com/electron/electron/tree/master/SECURITY.md&quot;&gt;SECURITY.md를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="26000534d32ef52933841a528d4d8361afeb23a6" translate="yes" xml:space="preserve">
          <source>For instance you can't use a function from the renderer process in an &lt;code&gt;Array.map&lt;/code&gt; called in the main process:</source>
          <target state="translated">예를 들어 메인 프로세스에서 호출 된 &lt;code&gt;Array.map&lt;/code&gt; 의 렌더러 프로세스에서 함수를 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="21d1e0d87b298c57a74a76988b09ab848fb4f7af" translate="yes" xml:space="preserve">
          <source>For instance, Electron uses Chromium's rendering library rather than all of Chromium. This makes it easier to upgrade Chromium but also means some browser features found in Google Chrome do not exist in Electron.</source>
          <target state="translated">예를 들어 Electron은 모든 Chromium 대신 Chromium의 렌더링 라이브러리를 사용합니다. 이렇게하면 Chromium을 쉽게 업그레이드 할 수 있지만 Chrome에있는 일부 브라우저 기능은 Electron에 존재하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="85f3a1e5e439ec3b7f4fca1ecd7c8de55b68620e" translate="yes" xml:space="preserve">
          <source>For instance, the following example quickly shows how the &lt;code&gt;net&lt;/code&gt; API might be used:</source>
          <target state="translated">예를 들어 다음 예제는 &lt;code&gt;net&lt;/code&gt; API 사용 방법을 신속하게 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="248c4264fd961b911b66e5010fd921898cf7d57a" translate="yes" xml:space="preserve">
          <source>For instance, to use the China mirror:</source>
          <target state="translated">예를 들어 차이나 미러를 사용하려면</target>
        </trans-unit>
        <trans-unit id="253f8917506432b3ee4474e59a0b7110f22e5749" translate="yes" xml:space="preserve">
          <source>For instance, we could have created the same request to 'github.com' as follows:</source>
          <target state="translated">예를 들어 다음과 같이 'github.com'에 동일한 요청을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f1c45df08669248a19de97849fd5f55d5638340a" translate="yes" xml:space="preserve">
          <source>For instructions on how to acquire a Google API key, visit &lt;a href=&quot;https://www.chromium.org/developers/how-tos/api-keys&quot;&gt;this page&lt;/a&gt;.</source>
          <target state="translated">Google API 키를 얻는 방법에 대한 지침을 보려면 &lt;a href=&quot;https://www.chromium.org/developers/how-tos/api-keys&quot;&gt;이 페이지를&lt;/a&gt; 방문 하십시오 .</target>
        </trans-unit>
        <trans-unit id="243e0173737239b628ca89b755eb49cb3a3707d3" translate="yes" xml:space="preserve">
          <source>For keyboard events, the &lt;code&gt;event&lt;/code&gt; object also have following properties:</source>
          <target state="translated">키보드 이벤트의 &lt;code&gt;event&lt;/code&gt; 객체에는 다음과 같은 속성도 있습니다.</target>
        </trans-unit>
        <trans-unit id="12ce8d2e3bf4689b50d95cab569ba2b0adf45656" translate="yes" xml:space="preserve">
          <source>For more info, see the &lt;a href=&quot;mac-app-store-submission-guide&quot;&gt;Mac App Store Submission Guide&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;mac-app-store-submission-guide&quot;&gt;Mac App Store 제출 안내서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="72310bb077b7a4aabe4c2bd84e6c77d6e4541848" translate="yes" xml:space="preserve">
          <source>For more information on the available configuration options, see the &lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;documentation on the snapcraft syntax&lt;/a&gt;. Let's look at an example:</source>
          <target state="translated">사용 가능한 구성 옵션에 대한 자세한 내용 &lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;은 snapcraft 구문에 대한 설명서를&lt;/a&gt; 참조하십시오 . 예를 보자.</target>
        </trans-unit>
        <trans-unit id="a49cdb56dde81924b746254a7f24e97ae73d88e0" translate="yes" xml:space="preserve">
          <source>For more information, please see the &lt;a href=&quot;tutorial/security&quot;&gt;security introduction&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;tutorial/security&quot;&gt;보안 소개&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2af1bafb37e1efc8e25030cb405ee2425e632d82" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;debugging-main-process&quot;&gt;Debugging the Main Process documentation&lt;/a&gt;.</source>
          <target state="translated">자세한 정보 &lt;a href=&quot;debugging-main-process&quot;&gt;는 기본 프로세스 디버깅 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="41cd0116e7dd1d6789182cceddbd7400a085cc79" translate="yes" xml:space="preserve">
          <source>For mouse events, the &lt;code&gt;event&lt;/code&gt; object also have following properties:</source>
          <target state="translated">마우스 이벤트의 &lt;code&gt;event&lt;/code&gt; 객체에는 다음과 같은 속성도 있습니다.</target>
        </trans-unit>
        <trans-unit id="55c6af6d16985648f77a3161d644bf54c2338ed4" translate="yes" xml:space="preserve">
          <source>For other non-module APIs, use natural titles, like &lt;code&gt;&amp;lt;webview&amp;gt; Tag&lt;/code&gt; or &lt;code&gt;Process Object&lt;/code&gt;.</source>
          <target state="translated">다른 비 모듈 API의 경우 &lt;code&gt;&amp;lt;webview&amp;gt; Tag&lt;/code&gt; 또는 &lt;code&gt;Process Object&lt;/code&gt; 와 같은 자연 제목을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="874be508e5c6c8bb81ba63b5d40f3aa79ddc3ebe" translate="yes" xml:space="preserve">
          <source>For setting up a server to accept and process crash reports, you can use following projects:</source>
          <target state="translated">충돌 보고서를 승인하고 처리하도록 서버를 설정하려면 다음 프로젝트를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="893021d623407b15b31b3974ad7dd84b9b512520" translate="yes" xml:space="preserve">
          <source>For some cases like verifying the &lt;code&gt;asar&lt;/code&gt; archive's checksum, we need to read the content of an &lt;code&gt;asar&lt;/code&gt; archive as a file. For this purpose you can use the built-in &lt;code&gt;original-fs&lt;/code&gt; module which provides original &lt;code&gt;fs&lt;/code&gt; APIs without &lt;code&gt;asar&lt;/code&gt; support:</source>
          <target state="translated">검증과 같은 경우를 들어 &lt;code&gt;asar&lt;/code&gt; 아카이브의 체크섬을, 우리는의 내용을 읽을 필요가 &lt;code&gt;asar&lt;/code&gt; 파일로 보관합니다. 이 목적을 위해 당신은 내장에서 사용할 수있는 &lt;code&gt;original-fs&lt;/code&gt; 원래 제공 모듈 &lt;code&gt;fs&lt;/code&gt; 없이 API를 &lt;code&gt;asar&lt;/code&gt; 지원 :</target>
        </trans-unit>
        <trans-unit id="b835b6381166067c2c6c297fb53d050596f4659d" translate="yes" xml:space="preserve">
          <source>For some operations, such as streaming media using RTMP, it is necessary to grant wider permissions to players&amp;rsquo; &lt;code&gt;.swf&lt;/code&gt; files. One way of accomplishing this, is to use &lt;a href=&quot;https://github.com/szwacz/nw-flash-trust&quot;&gt;nw-flash-trust&lt;/a&gt;.</source>
          <target state="translated">RTMP를 사용한 미디어 스트리밍과 같은 일부 작업의 경우 플레이어의 &lt;code&gt;.swf&lt;/code&gt; 파일에 더 넓은 권한을 부여해야 합니다. 이를 달성하는 한 가지 방법은 &lt;a href=&quot;https://github.com/szwacz/nw-flash-trust&quot;&gt;nw-flash-trust를 사용하는 것&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4bca33f19785ae50790d03e5e8b8f9fa3f8e8940" translate="yes" xml:space="preserve">
          <source>For the &lt;code&gt;mouseWheel&lt;/code&gt; event, the &lt;code&gt;event&lt;/code&gt; object also have following properties:</source>
          <target state="translated">를 들어 &lt;code&gt;mouseWheel&lt;/code&gt; 이벤트는 &lt;code&gt;event&lt;/code&gt; 객체는 다음과 같은 특성을 가지고 :</target>
        </trans-unit>
        <trans-unit id="42cf0bcb717e6e1c5bc2bab69a7555abd5c7050c" translate="yes" xml:space="preserve">
          <source>Force closing the view, the &lt;code&gt;unload&lt;/code&gt; and &lt;code&gt;beforeunload&lt;/code&gt; events won't be emitted for the web page. After you're done with a view, call this function in order to free memory and other resources as soon as possible.</source>
          <target state="translated">보기를 닫는 힘은 &lt;code&gt;unload&lt;/code&gt; 및 &lt;code&gt;beforeunload&lt;/code&gt; 이벤트는 웹 페이지에 대한 방출되지 않습니다. 보기를 완료 한 후 가능한 빨리 메모리 및 기타 자원을 확보하려면이 함수를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="41c34d9172157555e51609e1dd9cdae11457b4a8" translate="yes" xml:space="preserve">
          <source>Force closing the window, the &lt;code&gt;unload&lt;/code&gt; and &lt;code&gt;beforeunload&lt;/code&gt; event won't be emitted for the web page, and &lt;code&gt;close&lt;/code&gt; event will also not be emitted for this window, but it guarantees the &lt;code&gt;closed&lt;/code&gt; event will be emitted.</source>
          <target state="translated">창을 강제로 닫으면 웹 페이지에 대해 &lt;code&gt;unload&lt;/code&gt; 및 &lt;code&gt;beforeunload&lt;/code&gt; 이벤트가 생성되지 않으며이 창에 대해서도 &lt;code&gt;close&lt;/code&gt; 이벤트가 생성되지 않지만 &lt;code&gt;closed&lt;/code&gt; 이벤트가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8a6a94c0656419d75d09c1f47735e377b3dc71eb" translate="yes" xml:space="preserve">
          <source>Forcefully closes the child window without calling its unload event.</source>
          <target state="translated">unload 이벤트를 호출하지 않고 자식 창을 강제로 닫습니다.</target>
        </trans-unit>
        <trans-unit id="11ec4772862b480bc0d4330e63394f4c0dd82ef7" translate="yes" xml:space="preserve">
          <source>Forces the maximum disk space to be used by the disk cache, in bytes.</source>
          <target state="translated">디스크 캐시가 사용하는 최대 디스크 공간을 바이트 단위로 강제합니다.</target>
        </trans-unit>
        <trans-unit id="ffda46761bf18cf0dd922e7a16c1a3454103fb87" translate="yes" xml:space="preserve">
          <source>Forge comes with &lt;a href=&quot;https://electronforge.io/templates&quot;&gt;ready-to-use templates&lt;/a&gt; for popular frameworks like React, Vue, or Angular. It uses the same core modules used by the greater Electron community (like &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;) &amp;ndash; changes made by Electron maintainers (like Slack) benefit Forge's users, too.</source>
          <target state="translated">Forge에는 React, Vue 또는 Angular와 같은 널리 &lt;a href=&quot;https://electronforge.io/templates&quot;&gt;사용&lt;/a&gt; 되는 프레임 워크를위한 즉시 사용 가능한 템플릿 이 제공됩니다 . &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; &lt;/a&gt; 와 같은 더 큰 Electron 커뮤니티에서 사용하는 것과 동일한 코어 모듈을 사용합니다. Slack과 같은 Electron 관리자가 변경 한 사항은 Forge 사용자에게도 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="a640134df49a1d7ac759c390662f71687021a130" translate="yes" xml:space="preserve">
          <source>Fork the project &lt;a href=&quot;https://github.com/electron/electron&quot;&gt;on GitHub&lt;/a&gt; and clone your fork locally.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron/electron&quot;&gt;GitHub&lt;/a&gt; 에서 프로젝트 를 포크하고 로컬로 포크를 복제하십시오.</target>
        </trans-unit>
        <trans-unit id="d735aafe3953821674bcc047eed0a464f448083f" translate="yes" xml:space="preserve">
          <source>Forwarding</source>
          <target state="translated">Forwarding</target>
        </trans-unit>
        <trans-unit id="048394d7b70f10b345e72c4c9fdb7401b26faee6" translate="yes" xml:space="preserve">
          <source>Frameless Window</source>
          <target state="translated">프레임리스 창</target>
        </trans-unit>
        <trans-unit id="17a56f23cb49369abb90876a7fc79db233cbec85" translate="yes" xml:space="preserve">
          <source>Frameless window</source>
          <target state="translated">프레임리스 창</target>
        </trans-unit>
        <trans-unit id="44389f6a466eaabf5c1db729e369511134e2b03b" translate="yes" xml:space="preserve">
          <source>French</source>
          <target state="translated">French</target>
        </trans-unit>
        <trans-unit id="33f0ca3b78634f70f34727200cfe101d4f639b17" translate="yes" xml:space="preserve">
          <source>French (Canada)</source>
          <target state="translated">프랑스어 (캐나다)</target>
        </trans-unit>
        <trans-unit id="950e3b8444abd67e768a641c20181ffe0042529b" translate="yes" xml:space="preserve">
          <source>French (France)</source>
          <target state="translated">프랑스어 (프랑스)</target>
        </trans-unit>
        <trans-unit id="d4e7895fbc7b89b31127508cafb2663fdb083fa2" translate="yes" xml:space="preserve">
          <source>French (Switzerland)</source>
          <target state="translated">프랑스어 (스위스)</target>
        </trans-unit>
        <trans-unit id="6f09db2793c736909bd6c37b71f7a0bc8a0f19ae" translate="yes" xml:space="preserve">
          <source>Frisian</source>
          <target state="translated">Frisian</target>
        </trans-unit>
        <trans-unit id="0ff10501f7e66c9f19bf9c4babdd10ca579ce254" translate="yes" xml:space="preserve">
          <source>From 2.0 onward, Electron will follow semver.</source>
          <target state="translated">2.0 이후부터 Electron은 semver를 따릅니다.</target>
        </trans-unit>
        <trans-unit id="c3a8674a8d599ddfc6957634e4c486efbfebd3ff" translate="yes" xml:space="preserve">
          <source>From &lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/&quot;&gt;ChromeDriver - WebDriver for Chrome&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://sites.google.com/a/chromium.org/chromedriver/&quot;&gt;ChromeDriver&lt;/a&gt; 에서 -Chrome 용 WebDriver :</target>
        </trans-unit>
        <trans-unit id="2913aab19780bda8d7bb89f9e9bccc9c50a55e58" translate="yes" xml:space="preserve">
          <source>From Electron 2.0 on, developers will see warnings and recommendations printed to the developer console. They only show up when the binary's name is Electron, indicating that a developer is currently looking at the console.</source>
          <target state="translated">Electron 2.0부터 개발자는 개발자 콘솔에 경고 및 권장 사항이 인쇄됩니다. 바이너리 이름이 Electron 인 경우에만 표시되며 개발자가 현재 콘솔을보고 있음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4a3e35689697ec190cd2fb0c4be0d315bd4c2251" translate="yes" xml:space="preserve">
          <source>From Electron root's root, run &lt;code&gt;script/update.py&lt;/code&gt;</source>
          <target state="translated">Electron 루트의 루트에서 &lt;code&gt;script/update.py&lt;/code&gt; 를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="4c958b0e9d4b9e2e2a54c9e8c8cd51e301fc6448" translate="yes" xml:space="preserve">
          <source>From MSDN, it's illustrated:</source>
          <target state="translated">MSDN에서는 다음과 같이 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4394da6bd07f1ee0042ce07dda3d202ffb90075" translate="yes" xml:space="preserve">
          <source>From a terminal that has &lt;code&gt;snapcraft&lt;/code&gt; in its &lt;code&gt;PATH&lt;/code&gt;, run &lt;code&gt;electron-installer-snap&lt;/code&gt; with the only required parameter &lt;code&gt;--src&lt;/code&gt;, which is the location of your packaged Electron application created in the first step.</source>
          <target state="translated">이 터미널에서 &lt;code&gt;snapcraft&lt;/code&gt; 을 자사에서 &lt;code&gt;PATH&lt;/code&gt; 실행 &lt;code&gt;electron-installer-snap&lt;/code&gt; 유일한 필수 매개 변수로 &lt;code&gt;--src&lt;/code&gt; 첫 번째 단계에서 만든 패키지 전자 응용 프로그램의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="e5b99d0a24b6837e0fdb16a7b9dadc5b38ac1363" translate="yes" xml:space="preserve">
          <source>From an elevated PowerShell (run it &quot;as Administrator&quot;), run &lt;code&gt;electron-windows-store&lt;/code&gt; with the required parameters, passing both the input and output directories, the app's name and version, and confirmation that &lt;code&gt;node_modules&lt;/code&gt; should be flattened.</source>
          <target state="translated">승격 된 PowerShell ( &quot;관리자&quot;로 실행) 에서 필수 매개 변수를 사용하여 &lt;code&gt;electron-windows-store&lt;/code&gt; 를 실행 하고 입력 및 출력 디렉토리, 앱 이름 및 버전을 &lt;code&gt;node_modules&lt;/code&gt; 하고 node_modules의 병합 여부를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="734f49b3b8a88010f69b244bff01621f449f9ac4" translate="yes" xml:space="preserve">
          <source>From within GitHub, opening a new pull request will present you with a template that should be filled out:</source>
          <target state="translated">GitHub에서 새 풀 요청을 열면 템플릿을 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="2131cc39138eced8836ed354bc7b8c3289d46bc7" translate="yes" xml:space="preserve">
          <source>From within the Electron app, you can listen for messages and send replies using the nodejs &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;process&lt;/a&gt; API:</source>
          <target state="translated">Electron 앱 내에서 nodejs &lt;a href=&quot;https://nodejs.org/api/process.html&quot;&gt;프로세스&lt;/a&gt; API를 사용하여 메시지를 듣고 답장을 보낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="translated">추가 자료</target>
        </trans-unit>
        <trans-unit id="5bdf7278fcea3b5007a7f31401ae7da8c28c2e82" translate="yes" xml:space="preserve">
          <source>Furthermore, in Windows 8, the maximum length for the notification body is 250 characters, with the Windows team recommending that notifications should be kept to 200 characters. That said, that limitation has been removed in Windows 10, with the Windows team asking developers to be reasonable. Attempting to send gigantic amounts of text to the API (thousands of characters) might result in instability.</source>
          <target state="translated">또한 Windows 8의 경우 알림 본문의 최대 길이는 250 자이며 Windows 팀은 알림을 200 자로 유지하도록 권장합니다. 즉, Windows 팀에서는 개발자에게 합리적인 수준을 요구하면서 Windows 10에서 이러한 제한이 제거되었습니다. 엄청난 양의 텍스트를 API (수천 개의 문자)에 보내려고하면 불안정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1db4aba2bc9d400d5e75f5473ff811cd819a436d" translate="yes" xml:space="preserve">
          <source>GOOGLE_API_KEY</source>
          <target state="translated">GOOGLE_API_KEY</target>
        </trans-unit>
        <trans-unit id="3ee288cccc04fc78b1de48dba8362ca4f281d5e7" translate="yes" xml:space="preserve">
          <source>GPU accelerated</source>
          <target state="translated">GPU 가속</target>
        </trans-unit>
        <trans-unit id="63e7c142f025c95ec8531acfd0d122a163cb6b1f" translate="yes" xml:space="preserve">
          <source>GPU accelerated rendering means that the GPU is used for composition. Because of that the frame has to be copied from the GPU which requires more performance, thus this mode is quite a bit slower than the other one. The benefit of this mode that WebGL and 3D CSS animations are supported.</source>
          <target state="translated">GPU 가속 렌더링은 GPU가 컴포지션에 사용됨을 의미합니다. 이 때문에 더 많은 성능이 필요한 GPU에서 프레임을 복사해야하므로이 모드는 다른 모드보다 약간 느립니다. WebGL 및 3D CSS 애니메이션이 지원되는이 모드의 이점.</target>
        </trans-unit>
        <trans-unit id="27e0642d3d0283fa0d1d5b490eeb105437323129" translate="yes" xml:space="preserve">
          <source>GPUFeatureStatus</source>
          <target state="translated">GPUFeatureStatus</target>
        </trans-unit>
        <trans-unit id="1fae790cf35d61c88e97f17c988718c8de99c880" translate="yes" xml:space="preserve">
          <source>GPUFeatureStatus Object</source>
          <target state="translated">GPUFeatureStatus 객체</target>
        </trans-unit>
        <trans-unit id="ccece2966ff8b4cb279897a70ef4ca32da17c0cd" translate="yes" xml:space="preserve">
          <source>Galician</source>
          <target state="translated">Galician</target>
        </trans-unit>
        <trans-unit id="63f15e2cad489c7f65563ae7617fe47ac16f9b26" translate="yes" xml:space="preserve">
          <source>General Code</source>
          <target state="translated">일반 코드</target>
        </trans-unit>
        <trans-unit id="3c5d21815e853ee353943f1b16ccdedddafbb86a" translate="yes" xml:space="preserve">
          <source>Generally speaking, Electron supports Ubuntu 12.04, Fedora 21, Debian 8 and later.</source>
          <target state="translated">일반적으로 Electron은 Ubuntu 12.04, Fedora 21, Debian 8 이상을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="90b6f5d52bf8b14dce89eab99bf56fc36ee3ce58" translate="yes" xml:space="preserve">
          <source>Generally speaking, it is easier to completely disable &lt;code&gt;eval()&lt;/code&gt; than to make it bulletproof. Thus, if you do not need it, it is a good idea to disable it.</source>
          <target state="translated">일반적으로 말해서 &lt;code&gt;eval()&lt;/code&gt; 을 완전히 비활성화 하는 것이 방탄을 만드는 것보다 쉽습니다 . 따라서 필요하지 않은 경우 비활성화하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="13f9f22123ed9e158e8f29705aa35590736ffaba" translate="yes" xml:space="preserve">
          <source>Generally speaking, setting the parameter to a value below zero (like &lt;code&gt;-1&lt;/code&gt;) will remove the progress bar while setting it to a value higher than one (like &lt;code&gt;2&lt;/code&gt;) will switch the progress bar to intermediate mode.</source>
          <target state="translated">일반적으로, 매개 변수를 0 이하의 값 (예 : &lt;code&gt;-1&lt;/code&gt; )으로 설정하면 진행률 표시 줄이 제거되고 &lt;code&gt;2&lt;/code&gt; 보다 큰 값으로 설정 하면 진행률 표시 줄이 중간 모드로 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="9a1b685e55f4b94987ef88208f8882ad9106ba1c" translate="yes" xml:space="preserve">
          <source>Generally speaking, shortcuts are added by providing a &lt;code&gt;Name&lt;/code&gt; and &lt;code&gt;Exec&lt;/code&gt; property for each entry in the shortcuts menu. Unity will execute the &lt;code&gt;Exec&lt;/code&gt; field once clicked by the user. The format is as follows:</source>
          <target state="translated">일반적으로, 바로 가기 메뉴의 각 항목에 대한 &lt;code&gt;Name&lt;/code&gt; 및 &lt;code&gt;Exec&lt;/code&gt; 속성을 제공하여 바로 가기가 추가됩니다 . Unity는 사용자가 클릭하면 &lt;code&gt;Exec&lt;/code&gt; 필드 를 실행합니다 . 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1538647f42f7d3d79050cbefe208f89d3f10ca55" translate="yes" xml:space="preserve">
          <source>Generally speaking, there are likely good reasons if a feature was not enabled by default. Legitimate use cases for enabling specific features exist. As a developer, you should know exactly why you need to enable a feature, what the ramifications are, and how it impacts the security of your application. Under no circumstances should you enable features speculatively.</source>
          <target state="translated">일반적으로 기능이 기본적으로 활성화되어 있지 않은 경우에는 적절한 이유가 있습니다. 특정 기능을 활성화하기위한 합법적 인 사용 사례가 존재합니다. 개발자는 기능을 사용해야하는 이유, 결과, 응용 프로그램의 보안에 어떤 영향을 미치는지 정확하게 알고 있어야합니다. 어떤 상황에서도 기능을 추론 적으로 활성화해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="3169e818304c83f7b1d25d45a63a2afbec618473" translate="yes" xml:space="preserve">
          <source>Generally, the &lt;code&gt;template&lt;/code&gt; is just an array of &lt;code&gt;options&lt;/code&gt; for constructing a &lt;a href=&quot;menu-item&quot;&gt;MenuItem&lt;/a&gt;. The usage can be referenced above.</source>
          <target state="translated">일반적으로 &lt;code&gt;template&lt;/code&gt; 은 &lt;a href=&quot;menu-item&quot;&gt;MenuItem&lt;/a&gt; 구성 &lt;code&gt;options&lt;/code&gt; 의 배열 일뿐 입니다. 사용법은 위에서 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e016c4e6c4388b4fdc614cd782c50dda7199bee" translate="yes" xml:space="preserve">
          <source>Generate xcode project for debugging sources (cannot build code from xcode)</source>
          <target state="translated">소스 디버깅을위한 xcode 프로젝트 생성 (xcode에서 코드를 빌드 할 수 없음)</target>
        </trans-unit>
        <trans-unit id="0afb4a7756056519dfbd37bafb195e85a8b71d1c" translate="yes" xml:space="preserve">
          <source>Generate, download, and install &lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign/wiki/1.-Getting-Started#certificates&quot;&gt;signing certificates&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron-userland/electron-osx-sign/wiki/1.-Getting-Started#certificates&quot;&gt;서명 인증서&lt;/a&gt; 생성, 다운로드 및 설치</target>
        </trans-unit>
        <trans-unit id="a3d952d915882776a804ebcb451b68280f150a03" translate="yes" xml:space="preserve">
          <source>Generating &lt;code&gt;asar&lt;/code&gt; Archives</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; 아카이브 생성</target>
        </trans-unit>
        <trans-unit id="0e4e031d86d0110b37d71551b28614ffdcf68aee" translate="yes" xml:space="preserve">
          <source>Generating asar Archives</source>
          <target state="translated">asar 아카이브 생성</target>
        </trans-unit>
        <trans-unit id="aca441ddd2e8d07643b87c1b24a828fa5b4b3e42" translate="yes" xml:space="preserve">
          <source>Georgian</source>
          <target state="translated">Georgian</target>
        </trans-unit>
        <trans-unit id="da91388c72d3e31da19dcd85c97374197748485d" translate="yes" xml:space="preserve">
          <source>German</source>
          <target state="translated">German</target>
        </trans-unit>
        <trans-unit id="078c5c2d83171c5c9230eb9470f612f005a42c2d" translate="yes" xml:space="preserve">
          <source>German (Austria)</source>
          <target state="translated">독일어 (오스트리아)</target>
        </trans-unit>
        <trans-unit id="9c71d86768bbc4160407ef4ed71ede2d112003c0" translate="yes" xml:space="preserve">
          <source>German (Germany)</source>
          <target state="translated">독일어 (독일)</target>
        </trans-unit>
        <trans-unit id="09e6c204b1cd8e89c8f7fe995a77b7e2feb3c179" translate="yes" xml:space="preserve">
          <source>German (Switzerland)</source>
          <target state="translated">독일어 (스위스)</target>
        </trans-unit>
        <trans-unit id="9a96c736087dc403a036da96c29f464627719640" translate="yes" xml:space="preserve">
          <source>Get Certificate</source>
          <target state="translated">인증서 받기</target>
        </trans-unit>
        <trans-unit id="97902b12593780ddf28d3457dbb261e2b807323d" translate="yes" xml:space="preserve">
          <source>Get Team ID</source>
          <target state="translated">팀 ID 받기</target>
        </trans-unit>
        <trans-unit id="1d751cd6f2223c387565d489fdaf84c5a57d5ce2" translate="yes" xml:space="preserve">
          <source>Get a Windows Authenticode code signing certificate</source>
          <target state="translated">Windows Authenticode 코드 서명 인증서 받기</target>
        </trans-unit>
        <trans-unit id="b9b7985f4cabac6df8ab0ce7316af20136bc9a96" translate="yes" xml:space="preserve">
          <source>Get a copy of Electron's libcc fork</source>
          <target state="translated">Electron의 libcc 포크 사본을 구하십시오</target>
        </trans-unit>
        <trans-unit id="3dfdaa9a34c13df1a4918f14dbd278dbcb6ad6d1" translate="yes" xml:space="preserve">
          <source>Get a set of category groups. The category groups can change as new code paths are reached.</source>
          <target state="translated">카테고리 그룹 세트를 가져옵니다. 새 코드 경로에 도달하면 카테고리 그룹이 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b31590d49ba6cc9bd37661826a0e210780ebf287" translate="yes" xml:space="preserve">
          <source>Get and set properties of a session.</source>
          <target state="translated">세션의 속성을 가져오고 설정합니다.</target>
        </trans-unit>
        <trans-unit id="4651f3efda204499e94165cf4e7980b1e52540ef" translate="yes" xml:space="preserve">
          <source>Get system preferences.</source>
          <target state="translated">시스템 환경 설정을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="f8a9296dea080088611ff14ad0eae0f5c7d1c3c8" translate="yes" xml:space="preserve">
          <source>Get the code and initialize the project:</source>
          <target state="translated">코드를 가져 와서 프로젝트를 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="42e39f6d0cb0eadebb6a9541f6e152c7e729a7f1" translate="yes" xml:space="preserve">
          <source>Get the code:</source>
          <target state="translated">코드를 얻으십시오 :</target>
        </trans-unit>
        <trans-unit id="6e09fde08da990083e9a1d35f798afb7b2e02572" translate="yes" xml:space="preserve">
          <source>Get the current monitoring traced data.</source>
          <target state="translated">현재 모니터링 추적 데이터를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="af84e9850a364806c20ee98a9f19df0ba5a1b68f" translate="yes" xml:space="preserve">
          <source>Get the maximum usage across processes of trace buffer as a percentage of the full state. When the TraceBufferUsage value is determined the &lt;code&gt;callback&lt;/code&gt; is called.</source>
          <target state="translated">전체 상태의 백분율로 추적 버퍼 프로세스 전체에서 최대 사용량을 가져옵니다. TraceBufferUsage 값이 결정되면 &lt;code&gt;callback&lt;/code&gt; 이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f0e6b1c9b8b0f68211223759203e1903246b8a61" translate="yes" xml:space="preserve">
          <source>Get the system printer list.</source>
          <target state="translated">시스템 프린터 목록을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7c8c41f61ee8c8b61ef31de98aef8618369ead6d" translate="yes" xml:space="preserve">
          <source>Get the version of crashpad that we're going to use.</source>
          <target state="translated">우리가 사용할 크래시 패드의 버전을 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="774b49b5b98b5374e54d194a189001e6997ca6b2" translate="yes" xml:space="preserve">
          <source>Getting the Code</source>
          <target state="translated">코드 얻기</target>
        </trans-unit>
        <trans-unit id="1f5fe669e18521007ce5a8aa2cce9d3c3fa007a4" translate="yes" xml:space="preserve">
          <source>Getting the plugin</source>
          <target state="translated">플러그인 얻기</target>
        </trans-unit>
        <trans-unit id="5819778898df55e3a762f0c5728b457970d72cae" translate="yes" xml:space="preserve">
          <source>Git</source>
          <target state="translated">Git</target>
        </trans-unit>
        <trans-unit id="31a9c72c1cf9aa2b3749a61100d0110a62a633e0" translate="yes" xml:space="preserve">
          <source>GitHub's Electron team maintains &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;update.electronjs.org&lt;/a&gt;, a free and open-source webservice that Electron apps can use to self-update. The service is designed for Electron apps that meet the following criteria:</source>
          <target state="translated">GitHub의 Electron 팀 은 Electron 앱이 자체 업데이트에 사용할 수있는 무료 오픈 소스 웹 서비스 인 &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;update.electronjs.org를&lt;/a&gt; 유지 관리 합니다. 이 서비스는 다음 기준을 충족하는 Electron 앱을 위해 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="74fe7d567bf71c112291a363a3d9b39b53cc1350" translate="yes" xml:space="preserve">
          <source>Gives the default maximal active V-logging level; 0 is the default. Normally positive values are used for V-logging levels.</source>
          <target state="translated">기본 최대 활성 V 로깅 수준을 제공합니다. 0이 기본값입니다. 일반적으로 V 로깅 수준에는 양수 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="04622ff2db8ee08e5e23ba617b529878c0062cd3" translate="yes" xml:space="preserve">
          <source>Gives the per-module maximal V-logging levels to override the value given by &lt;code&gt;--v&lt;/code&gt;. E.g. &lt;code&gt;my_module=2,foo*=3&lt;/code&gt; would change the logging level for all code in source files &lt;code&gt;my_module.*&lt;/code&gt; and &lt;code&gt;foo*.*&lt;/code&gt;.</source>
          <target state="translated">모듈 당 최대 V 로깅 수준을 지정하여 &lt;code&gt;--v&lt;/code&gt; 로 지정된 값을 재정의합니다 . 예를 들어 &lt;code&gt;my_module=2,foo*=3&lt;/code&gt; 은 소스 파일 &lt;code&gt;my_module.*&lt;/code&gt; 및 &lt;code&gt;foo*.*&lt;/code&gt; 모든 코드에 대한 로깅 수준을 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="2a102f27f850350772f2e44ae41ae0c25df0de90" translate="yes" xml:space="preserve">
          <source>Global Installation</source>
          <target state="translated">글로벌 설치</target>
        </trans-unit>
        <trans-unit id="9b2c45900d277c38ce7727bdb988069b357640ce" translate="yes" xml:space="preserve">
          <source>Global Shortcuts</source>
          <target state="translated">글로벌 바로 가기</target>
        </trans-unit>
        <trans-unit id="7427cf697be16a4ec1d916910128a59d920125e7" translate="yes" xml:space="preserve">
          <source>Glossary</source>
          <target state="translated">Glossary</target>
        </trans-unit>
        <trans-unit id="47ba3bd2a5c6aeb3e8cad3b83d7b5602dbe77429" translate="yes" xml:space="preserve">
          <source>Glossary of Terms</source>
          <target state="translated">용어집</target>
        </trans-unit>
        <trans-unit id="c476992f33540e23daa401c4e60e99186e563a56" translate="yes" xml:space="preserve">
          <source>GoDaddy</source>
          <target state="translated">GoDaddy</target>
        </trans-unit>
        <trans-unit id="28732829f3eca4da96a693af0bb508a19d3ecbdf" translate="yes" xml:space="preserve">
          <source>Google offers &lt;a href=&quot;https://developer.chrome.com/devtools&quot;&gt;excellent documentation for their developer tools&lt;/a&gt;. We recommend that you make yourself familiar with them - they are usually one of the most powerful utilities in any Electron Developer's tool belt.</source>
          <target state="translated">Google은 &lt;a href=&quot;https://developer.chrome.com/devtools&quot;&gt;개발자 도구에 대한 훌륭한 문서를&lt;/a&gt; 제공 합니다 . 우리는 당신이 그들에게 익숙해 지길 권장합니다. 그것들은 보통 Electron Developer의 툴 벨트에서 가장 강력한 유틸리티 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="59d5f5b13f13f6d5e8e88a5a92e137f7d64b2954" translate="yes" xml:space="preserve">
          <source>Greek</source>
          <target state="translated">Greek</target>
        </trans-unit>
        <trans-unit id="e96b7da2918127b11fa0a0e9eee6e9a1c10a65ca" translate="yes" xml:space="preserve">
          <source>Guarani</source>
          <target state="translated">Guarani</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="8da0077fda7c3873b2109d7ff97c49289bade98b" translate="yes" xml:space="preserve">
          <source>Guides and Tutorials</source>
          <target state="translated">가이드 및 튜토리얼</target>
        </trans-unit>
        <trans-unit id="7d874f5abb3950680f297babc41172373fdc4c32" translate="yes" xml:space="preserve">
          <source>Guides: Development</source>
          <target state="translated">가이드 : 개발</target>
        </trans-unit>
        <trans-unit id="c06c55a5bcd005bf56c5234eb953099ffc1de3f1" translate="yes" xml:space="preserve">
          <source>Gujarati</source>
          <target state="translated">Gujarati</target>
        </trans-unit>
        <trans-unit id="12b4aa2e03f9d0d04893ebd755d57aa21da50f87" translate="yes" xml:space="preserve">
          <source>Gyp Files</source>
          <target state="translated">Gyp 파일</target>
        </trans-unit>
        <trans-unit id="6ab64c2c4cbe25df11defa0cabb6e1d056d0b05d" translate="yes" xml:space="preserve">
          <source>HKDF - &lt;a href=&quot;https://csrc.nist.gov/publications/nistpubs/800-56C/SP-800-56C.pdf&quot;&gt;NIST SP 800-56C&lt;/a&gt;</source>
          <target state="translated">HKDF- &lt;a href=&quot;https://csrc.nist.gov/publications/nistpubs/800-56C/SP-800-56C.pdf&quot;&gt;NIST SP 800-56C&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96aef50bf3aade35f7355d1a4921a735889e4d65" translate="yes" xml:space="preserve">
          <source>HMAC - &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips198-1/FIPS-198-1_final.pdf&quot;&gt;FIPS 198-1&lt;/a&gt;</source>
          <target state="translated">HMAC- &lt;a href=&quot;https://csrc.nist.gov/publications/fips/fips198-1/FIPS-198-1_final.pdf&quot;&gt;FIPS 198-1&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ec65432dccf7be3dd348b42b4845c542f32d36e" translate="yes" xml:space="preserve">
          <source>Handle responses to HTTP/HTTPS requests.</source>
          <target state="translated">HTTP / HTTPS 요청에 대한 응답을 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="c6198e10656789bfc9a2ce6cde36df2a0803c265" translate="yes" xml:space="preserve">
          <source>Hausa</source>
          <target state="translated">Hausa</target>
        </trans-unit>
        <trans-unit id="cd7668c561bd17eb1bdc17551d90f80f2444fe05" translate="yes" xml:space="preserve">
          <source>Hawaiian</source>
          <target state="translated">Hawaiian</target>
        </trans-unit>
        <trans-unit id="348d00693e12bc983bd092677b90434b5a4d869e" translate="yes" xml:space="preserve">
          <source>Hebrew</source>
          <target state="translated">Hebrew</target>
        </trans-unit>
        <trans-unit id="32e9448bc4ec32f0e45beaffa974dfcc238350cc" translate="yes" xml:space="preserve">
          <source>Here is a pre-configured project that you can download and directly debug in VSCode: &lt;a href=&quot;https://github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&quot;&gt;https://github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&lt;/a&gt;</source>
          <target state="translated">다음은 VSCode에서 다운로드하여 직접 디버깅 할 수있는 사전 구성된 프로젝트입니다. &lt;a href=&quot;https://github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&quot;&gt;https://github.com/octref/vscode-electron-debug/tree/master/electron-quick-start&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7511063de052867ece2aea3d8c3eafd004df2d88" translate="yes" xml:space="preserve">
          <source>Here is an example of the 1.x strategy:</source>
          <target state="translated">1.x 전략의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="536ab89c6edf5aadcd8667b06d61bfd9d8b1c469" translate="yes" xml:space="preserve">
          <source>Here is an example that shows how to use In-App Purchases in Electron. You'll have to replace the product ids by the identifiers of the products created with iTunes Connect (the identifier of &lt;code&gt;com.example.app.product1&lt;/code&gt; is &lt;code&gt;product1&lt;/code&gt;). Note that you have to listen to the &lt;code&gt;transactions-updated&lt;/code&gt; event as soon as possible in your app.</source>
          <target state="translated">다음은 Electron에서 인앱 구매를 사용하는 방법을 보여주는 예입니다. iTunes Connect로 생성 한 제품의 식별자 ( &lt;code&gt;com.example.app.product1&lt;/code&gt; 의 식별자 는 &lt;code&gt;product1&lt;/code&gt; )로 제품 ID를 교체해야합니다 . 앱에서 가능한 빨리 &lt;code&gt;transactions-updated&lt;/code&gt; 이벤트 를 수신 해야합니다.</target>
        </trans-unit>
        <trans-unit id="6d95a763e8b803427825f074147dbb618bb8baf8" translate="yes" xml:space="preserve">
          <source>Here's a very simple example of creating a custom Jump List:</source>
          <target state="translated">다음은 사용자 정의 점프 목록을 만드는 매우 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="a2e3007d0832120c6f9a0f910d309296102f99f4" translate="yes" xml:space="preserve">
          <source>Hides all application windows without minimizing them.</source>
          <target state="translated">모든 응용 프로그램 창을 최소화하지 않고 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="c6b1b93e545fd554605800d785e996e3dc0eb5ee" translate="yes" xml:space="preserve">
          <source>Hides the dock icon.</source>
          <target state="translated">독 아이콘을 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="5a43dc7f2f465c2745f7cb820f2abef02d340442" translate="yes" xml:space="preserve">
          <source>Hides the window.</source>
          <target state="translated">창을 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="ef8f36f42eba0b8668da702476cc74241114add9" translate="yes" xml:space="preserve">
          <source>High Resolution Image</source>
          <target state="translated">고해상도 이미지</target>
        </trans-unit>
        <trans-unit id="c9e6b253fc34a7155f97dc0aab1c389d34cafdad" translate="yes" xml:space="preserve">
          <source>Hindi</source>
          <target state="translated">Hindi</target>
        </trans-unit>
        <trans-unit id="90ccd6497400b5576aeca1bd94af74aae1e0a250" translate="yes" xml:space="preserve">
          <source>History</source>
          <target state="translated">History</target>
        </trans-unit>
        <trans-unit id="9b0ec9db7c0e86a129f9fa1bab0da6d3e2b91722" translate="yes" xml:space="preserve">
          <source>Hooks a windows message. The &lt;code&gt;callback&lt;/code&gt; is called when the message is received in the WndProc.</source>
          <target state="translated">Windows 메시지를 연결합니다. &lt;code&gt;callback&lt;/code&gt; 메시지가의 WndProc에 수신 될 때 호출된다.</target>
        </trans-unit>
        <trans-unit id="e31334bebb7eaceff6fb89067353d34e43f8191c" translate="yes" xml:space="preserve">
          <source>How to Contribute in Issues</source>
          <target state="translated">이슈에 참여하는 방법</target>
        </trans-unit>
        <trans-unit id="5a8e3da66fa923f0ece07325d1e26b9f23216424" translate="yes" xml:space="preserve">
          <source>How to Submit Your App</source>
          <target state="translated">앱을 제출하는 방법</target>
        </trans-unit>
        <trans-unit id="77a4a1a408e307fcb086698bb67fe202442adacb" translate="yes" xml:space="preserve">
          <source>How to install native modules</source>
          <target state="translated">기본 모듈을 설치하는 방법</target>
        </trans-unit>
        <trans-unit id="e219f690385e428b335d5c1debc806bb7f162143" translate="yes" xml:space="preserve">
          <source>How to load a DevTools Extension</source>
          <target state="translated">DevTools Extension을로드하는 방법</target>
        </trans-unit>
        <trans-unit id="42990de13e12a6f3fe14f015c9fa5f168409cf6f" translate="yes" xml:space="preserve">
          <source>How to share data between web pages?</source>
          <target state="translated">웹 페이지간에 데이터를 공유하는 방법은 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="006cb42291b4d2a8b6209f1743122eaed8f3b45c" translate="yes" xml:space="preserve">
          <source>How to use Node.js and Electron APIs.</source>
          <target state="translated">Node.js 및 Electron API 사용 방법</target>
        </trans-unit>
        <trans-unit id="a592ebd85a69060d7634d9886b10816e9eb5584f" translate="yes" xml:space="preserve">
          <source>How?</source>
          <target state="translated">How?</target>
        </trans-unit>
        <trans-unit id="3dd7ebb42cfd90c92c21fd773d0d3b2eaa35204b" translate="yes" xml:space="preserve">
          <source>However if you are using the built-in module but still getting this error, it is very likely you are using the module in the wrong process. For example &lt;code&gt;electron.app&lt;/code&gt; can only be used in the main process, while &lt;code&gt;electron.webFrame&lt;/code&gt; is only available in renderer processes.</source>
          <target state="translated">그러나 내장 모듈을 사용하고 있지만이 오류가 계속 발생하면 잘못된 프로세스에서 모듈을 사용하고있을 가능성이 큽니다. 예를 들어 &lt;code&gt;electron.app&lt;/code&gt; 는 기본 프로세스 에서만 사용할 수있는 반면 &lt;code&gt;electron.webFrame&lt;/code&gt; 은 렌더러 프로세스에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80cb96f852d1ce7ae9b00c59c13912122674f7ce" translate="yes" xml:space="preserve">
          <source>Hungarian</source>
          <target state="translated">Hungarian</target>
        </trans-unit>
        <trans-unit id="4663bd433a3403bb10d42d1a6d961eb823a20381" translate="yes" xml:space="preserve">
          <source>I can not use jQuery/RequireJS/Meteor/AngularJS in Electron.</source>
          <target state="translated">Electron에서 jQuery / RequireJS / Meteor / AngularJS를 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f6443e9e80d7ff5014bd87a1c30a8be0edfc3cec" translate="yes" xml:space="preserve">
          <source>IDEA - &quot;On the Design and Security of Block Ciphers&quot; book by X. Lai</source>
          <target state="translated">IDEA-X. Lai의 &quot;블록 암호의 디자인 및 보안&quot;책</target>
        </trans-unit>
        <trans-unit id="2d2784b01eb1135581b7a56e053cc184e7b456aa" translate="yes" xml:space="preserve">
          <source>IDL</source>
          <target state="translated">IDL</target>
        </trans-unit>
        <trans-unit id="d0f99dc7f22f9fd48a428327fd8c96820f8a762f" translate="yes" xml:space="preserve">
          <source>IME</source>
          <target state="translated">IME</target>
        </trans-unit>
        <trans-unit id="7c68728ac018ddf5a25a386395b4b5962be1aaf6" translate="yes" xml:space="preserve">
          <source>IOCounters</source>
          <target state="translated">IOCounters</target>
        </trans-unit>
        <trans-unit id="1fd209e564e2f820f91ecf2931819f28bad1b99c" translate="yes" xml:space="preserve">
          <source>IOCounters Object</source>
          <target state="translated">IOCounters 객체</target>
        </trans-unit>
        <trans-unit id="f4aa7e6cdf843e01253be3fd2becaee731842f78" translate="yes" xml:space="preserve">
          <source>IPC</source>
          <target state="translated">IPC</target>
        </trans-unit>
        <trans-unit id="890a7404cde81122526f825a731ae1012afa8fc4" translate="yes" xml:space="preserve">
          <source>IPC stands for Inter-Process Communication. Electron uses IPC to send serialized JSON messages between the &lt;a href=&quot;#main-process&quot;&gt;main&lt;/a&gt; and &lt;a href=&quot;#renderer-process&quot;&gt;renderer&lt;/a&gt; processes.</source>
          <target state="translated">IPC는 프로세스 간 통신을 의미합니다. Electron은 IPC를 사용하여 &lt;a href=&quot;#main-process&quot;&gt;기본&lt;/a&gt; 프로세스 와 &lt;a href=&quot;#renderer-process&quot;&gt;렌더러&lt;/a&gt; 프로세스 간에 직렬화 된 JSON 메시지를 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="4908b12c142b7bd671d43e5185556c158bb0999c" translate="yes" xml:space="preserve">
          <source>Icelandic</source>
          <target state="translated">Icelandic</target>
        </trans-unit>
        <trans-unit id="b1faf3607f00a15313ffe083e5f26329c2c9887b" translate="yes" xml:space="preserve">
          <source>Icon Overlays in Taskbar</source>
          <target state="translated">작업 표시 줄의 아이콘 오버레이</target>
        </trans-unit>
        <trans-unit id="4b58f92cb05655184beba35216e41c88e52c8808" translate="yes" xml:space="preserve">
          <source>Icon overlays serve as a contextual notification of status, and are intended to negate the need for a separate notification area status icon to communicate that information to the user. For instance, the new mail status in Microsoft Outlook, currently shown in the notification area, can now be indicated through an overlay on the taskbar button. Again, you must decide during your development cycle which method is best for your application. Overlay icons are intended to supply important, long-standing status or notifications such as network status, messenger status, or new mail. The user should not be presented with constantly changing overlays or animations.</source>
          <target state="translated">아이콘 오버레이는 상황에 대한 상황 알림으로 사용되며, 해당 정보를 사용자에게 전달하기 위해 별도의 알림 영역 상태 아이콘이 필요하지 않습니다. 예를 들어, 현재 알림 영역에 표시된 Microsoft Outlook의 새 메일 상태를 작업 표시 줄 단추의 오버레이를 통해 표시 할 수 있습니다. 다시 한 번, 개발주기 동안 응용 프로그램에 가장 적합한 방법을 결정해야합니다. 오버레이 아이콘은 네트워크 상태, 메신저 상태 또는 새 메일과 같은 중요하고 오랜 상태 또는 알림을 제공하기위한 것입니다. 사용자에게 끊임없이 변화하는 오버레이 또는 애니메이션이 표시되어서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="1431424e0aa0d00794b34d04eefeac90cc58d9b8" translate="yes" xml:space="preserve">
          <source>Icons associated with certain file extensions, like &lt;code&gt;.mp3&lt;/code&gt;, &lt;code&gt;.png&lt;/code&gt;, etc.</source>
          <target state="translated">같은 특정 파일 확장자와 관련된 아이콘 &lt;code&gt;.mp3&lt;/code&gt; , &lt;code&gt;.png&lt;/code&gt; 등,</target>
        </trans-unit>
        <trans-unit id="b87b9c7cefbb13a341bb1187e3a49551471edda0" translate="yes" xml:space="preserve">
          <source>Icons inside the file itself, like &lt;code&gt;.exe&lt;/code&gt;, &lt;code&gt;.dll&lt;/code&gt;, &lt;code&gt;.ico&lt;/code&gt;.</source>
          <target state="translated">파일 자체, 같은 내부 아이콘 &lt;code&gt;.exe&lt;/code&gt; , &lt;code&gt;.dll&lt;/code&gt; , &lt;code&gt;.ico&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="186bfe94308b4c8b9444f82e3fabdd4996e0d6b2" translate="yes" xml:space="preserve">
          <source>Ideally, the pull request will pass (&quot;be green&quot;) on all of CI's platforms. This means that all tests pass and there are no linting errors. However, it is not uncommon for the CI infrastructure itself to fail on specific platforms or for so-called &quot;flaky&quot; tests to fail (&quot;be red&quot;). Each CI failure must be manually inspected to determine the cause.</source>
          <target state="translated">이상적으로는 모든 CI 플랫폼에서 풀 요청이 통과 ( &quot;녹색&quot;)됩니다. 이것은 모든 테스트가 통과되고 보푸라기 오류가 없음을 의미합니다. 그러나 CI 인프라 자체가 특정 플랫폼에서 실패하거나 소위 &quot;정상적인&quot;테스트가 실패하는 경우 ( &quot;빨간색&quot;)는 드문 일이 아닙니다. 원인을 판별하려면 각 CI 장애를 수동으로 검사해야합니다.</target>
        </trans-unit>
        <trans-unit id="9241deb084a6d5babf2886e1ab3012b3abf8b22b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;backgroundThrottling&lt;/code&gt; is disabled, the visibility state will remain &lt;code&gt;visible&lt;/code&gt; even if the window is minimized, occluded, or hidden.</source>
          <target state="translated">경우 &lt;code&gt;backgroundThrottling&lt;/code&gt; 가 비활성화되어, 가시성 상태가 유지됩니다 &lt;code&gt;visible&lt;/code&gt; 창이 최소화 폐색, 또는 숨겨진 경우에도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="271d04a59e510c2f17aaa6bc0a410f5e69008aa0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;categories&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; the previously set custom Jump List (if any) will be replaced by the standard Jump List for the app (managed by Windows).</source>
          <target state="translated">경우 &lt;code&gt;categories&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; 이전에 설정 한 사용자 지정 점프 목록 (있는 경우) (Windows에서 관리) 응용 프로그램의 표준 점프 목록으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="556f915b2e5f20804107a01cb875b2dc9074fb1f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;partition&lt;/code&gt; starts with &lt;code&gt;persist:&lt;/code&gt;, the page will use a persistent session available to all pages in the app with the same &lt;code&gt;partition&lt;/code&gt;. if there is no &lt;code&gt;persist:&lt;/code&gt; prefix, the page will use an in-memory session. If the &lt;code&gt;partition&lt;/code&gt; is empty then default session of the app will be returned.</source>
          <target state="translated">경우 &lt;code&gt;partition&lt;/code&gt; 과 시작이 &lt;code&gt;persist:&lt;/code&gt; 페이지가 같은과 응용 프로그램의 모든 페이지에 사용할 수있는 지속적인 세션을 사용하는 &lt;code&gt;partition&lt;/code&gt; . &lt;code&gt;persist:&lt;/code&gt; 접두사 가 없으면 페이지는 메모리 내 세션을 사용합니다. 경우 &lt;code&gt;partition&lt;/code&gt; 있는 응용 프로그램의 빈 다음 기본 세션이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="159278b031266e4365b8e89cb754ee1575e08111" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled and not painting, start painting.</source>
          <target state="translated">경우 &lt;em&gt;오프 스크린 렌더링이&lt;/em&gt; 가능하고 그림되지 않고, 그림 시작합니다.</target>
        </trans-unit>
        <trans-unit id="727cf6c7299aabc319e19a37a009db3233858a37" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled and painting, stop painting.</source>
          <target state="translated">경우 &lt;em&gt;오프 스크린 렌더링이&lt;/em&gt; 활성화되어 그림, 정지 그림.</target>
        </trans-unit>
        <trans-unit id="0341ea0a3b398358cb52497946e862feaf676cae" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled invalidates the frame and generates a new one through the &lt;code&gt;'paint'&lt;/code&gt; event.</source>
          <target state="translated">경우 &lt;em&gt;오프 스크린 렌더링을&lt;/em&gt; 무효화에게 프레임을 활성화하고를 통해 새로운 생성되는 &lt;code&gt;'paint'&lt;/code&gt; 이벤트를.</target>
        </trans-unit>
        <trans-unit id="71adc365e97dd03614eb0aaea1310a81945c3c0a" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;offscreen rendering&lt;/em&gt; is enabled sets the frame rate to the specified number. Only values between 1 and 60 are accepted.</source>
          <target state="translated">경우 &lt;em&gt;오프 스크린 렌더링&lt;/em&gt; 설정을 지정한 번호로 프레임 속도를 사용할 수 있습니다. 1에서 60 사이의 값만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="4722ea2a3cf0c60dab14c9eaa28ad6f7054a8910" translate="yes" xml:space="preserve">
          <source>If Electron is running under a different user account, select the &lt;code&gt;Show processes from all users&lt;/code&gt; check box. Notice that depending on how many BrowserWindows your app opened, you will see multiple processes. A typical one-window app will result in Visual Studio presenting you with two &lt;code&gt;Electron.exe&lt;/code&gt; entries - one for the main process and one for the renderer process. Since the list only gives you names, there's currently no reliable way of figuring out which is which.</source>
          <target state="translated">Electron이 다른 사용자 계정으로 실행중인 경우 &lt;code&gt;Show processes from all users&lt;/code&gt; 확인란을 선택하십시오 . 앱이 몇 개의 BrowserWindows를 열 었는지에 따라 여러 프로세스가 표시됩니다. 일반적인 단일 창 응용 프로그램을 사용하면 Visual Studio에서 두 개의 &lt;code&gt;Electron.exe&lt;/code&gt; 항목 (주 프로세스 및 렌더러 프로세스)을 제공합니다. 이 목록은 이름 만 제공하기 때문에 현재 어느 것이 어떤 것인지 알아낼 수있는 확실한 방법은 없습니다.</target>
        </trans-unit>
        <trans-unit id="dfa45c90a49b752076cafae378cbfb0fc75ef031" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;BrowserWindow&lt;/code&gt; is created with &lt;code&gt;show: false&lt;/code&gt;, the initial visibility state will be &lt;code&gt;visible&lt;/code&gt; despite the window actually being hidden.</source>
          <target state="translated">경우 &lt;code&gt;BrowserWindow&lt;/code&gt; 가 만들어집니다 &lt;code&gt;show: false&lt;/code&gt; , 초기 가시성 상태가 될 것입니다 &lt;code&gt;visible&lt;/code&gt; 실제로 숨겨진 된 창에도 불구하고.</target>
        </trans-unit>
        <trans-unit id="e0338bcfcb4104ead00fe9414b0bc6c798aebd82" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; is passed, the API call will be asynchronous and the result will be passed via &lt;code&gt;callback(filename)&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;callback&lt;/code&gt; 통과되면, API 호출은 비동기 될 것이며, 그 결과를 통해 전달되는 &lt;code&gt;callback(filename)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71e356d72e9973e91887cd4f40f232a75076438d" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; is passed, the API call will be asynchronous and the result will be passed via &lt;code&gt;callback(filenames)&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;callback&lt;/code&gt; 통과되면, API 호출은 비동기 될 것이며, 그 결과를 통해 전달되는 &lt;code&gt;callback(filenames)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3791cf12a77a8315d2f8d2c28114944e087288f" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;callback&lt;/code&gt; is passed, the dialog will not block the process. The API call will be asynchronous and the result will be passed via &lt;code&gt;callback(response)&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;callback&lt;/code&gt; 전달되는 대화 과정을 차단하지 않습니다. API 호출은 비동기 적이며 결과는 &lt;code&gt;callback(response)&lt;/code&gt; 를 통해 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="933de00af7bd0e61f4522a7eb8447733c9fb6a06" translate="yes" xml:space="preserve">
          <source>If a diff section has no instances of &lt;code&gt;deps/V8&lt;/code&gt;, remove it altogether.</source>
          <target state="translated">diff 섹션에 &lt;code&gt;deps/V8&lt;/code&gt; 인스턴스가 없으면 완전히 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="ce51a26435dc6c860dd5b7261fd1da0add0d6ab9" translate="yes" xml:space="preserve">
          <source>If a particular beta release is &lt;em&gt;generally regarded&lt;/em&gt; as stable, it will be re-released as a stable build, changing only the version information. e.g. &lt;code&gt;2.0.0&lt;/code&gt;.</source>
          <target state="translated">특정 베타 릴리스가 &lt;em&gt;일반적&lt;/em&gt; 으로 안정적인 &lt;em&gt;것으로 간주&lt;/em&gt; 되면 버전 정보 만 변경하여 안정적인 빌드로 다시 릴리스됩니다. 예를 들어 &lt;code&gt;2.0.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="62a428d1aa74808bcd0676cdc2f0ecc3426101a5" translate="yes" xml:space="preserve">
          <source>If an application has exceptional circumstances and needs to stay on an unsupported series of Electron, developers can silence the end-of-support warning by omitting the final release from the app's &lt;code&gt;package.json&lt;/code&gt;&lt;code&gt;devDependencies&lt;/code&gt;. For example, since the 1-6-x series ended with an end-of-support 1.6.18 release, developers could choose to stay in the 1-6-x series without warnings with &lt;code&gt;devDependency&lt;/code&gt; of &lt;code&gt;&quot;electron&quot;: 1.6.0 - 1.6.17&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램에 예외적 인 상황이 발생하고 지원되지 않는 Electron 시리즈를 유지해야하는 경우 개발자는 앱의 &lt;code&gt;package.json&lt;/code&gt; &lt;code&gt;devDependencies&lt;/code&gt; 에서 최종 릴리스를 생략하여 지원 종료 경고를 무시할 수 있습니다. 예를 들어, 1-6-x 시리즈는 지원 종료 1.6.18 릴리스로 종료되었으므로 개발자 는 &lt;code&gt;&quot;electron&quot;: 1.6.0 - 1.6.17&lt;/code&gt; &lt;code&gt;devDependency&lt;/code&gt; 와 함께 경고없이 1-6-x 시리즈를 유지하도록 선택할 수 있습니다. 1.6.0- 1.6.17 .</target>
        </trans-unit>
        <trans-unit id="b3b63c9e15d16c79e73b80be24bb123149539714" translate="yes" xml:space="preserve">
          <source>If both commands printed a version number, you are all set! Before you get started, you might want to install a &lt;a href=&quot;#a-good-editor&quot;&gt;code editor&lt;/a&gt; suited for JavaScript development.</source>
          <target state="translated">두 명령 모두 버전 번호를 인쇄하면 모든 설정이 완료된 것입니다! 시작하기 전에 JavaScript 개발에 적합한 &lt;a href=&quot;#a-good-editor&quot;&gt;코드 편집기&lt;/a&gt; 를 설치하려고 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3bb932b3c9db14b7bf8934cd43d3008c15bd7ef5" translate="yes" xml:space="preserve">
          <source>If building under Cygwin, you may see &lt;code&gt;bootstrap.py&lt;/code&gt; failed with following error:</source>
          <target state="translated">Cygwin에서 빌드하는 경우 &lt;code&gt;bootstrap.py&lt;/code&gt; 가 다음 오류와 함께 실패한 것을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0c921c76717bc0c31716bfb5e7e1d21ffd8545b4" translate="yes" xml:space="preserve">
          <source>If either of these requirements are not met the button simply won't appear.</source>
          <target state="translated">이러한 요구 사항 중 하나가 충족되지 않으면 버튼이 나타나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6f7cf0c5d1b5e702650badf2be6e09235ead62c0" translate="yes" xml:space="preserve">
          <source>If future bug fixes or security patches need to be made once a release is stable, they are applied and the &lt;em&gt;patch&lt;/em&gt; version is incremented accordingly e.g. &lt;code&gt;2.0.1&lt;/code&gt;.</source>
          <target state="translated">릴리스가 안정되면 향후 버그 수정 또는 보안 패치를 작성해야하는 경우 적용되며 &lt;em&gt;패치&lt;/em&gt; 버전은 예를 들어 &lt;code&gt;2.0.1&lt;/code&gt; 과 같이 증가 합니다.</target>
        </trans-unit>
        <trans-unit id="44ed5688e741dfaf087bcb72ad97d72432431f8e" translate="yes" xml:space="preserve">
          <source>If installation fails with an &lt;code&gt;EACCESS&lt;/code&gt; error you may need to &lt;a href=&quot;https://docs.npmjs.com/getting-started/fixing-npm-permissions&quot;&gt;fix your npm permissions&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;EACCESS&lt;/code&gt; 오류 와 함께 설치가 실패하면 &lt;a href=&quot;https://docs.npmjs.com/getting-started/fixing-npm-permissions&quot;&gt;npm 권한&lt;/a&gt; 을 수정 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="815eb8dd187b8fd58d929aed602225532bb831cc" translate="yes" xml:space="preserve">
          <source>If it is something like &lt;code&gt;node_modules/electron/index.js&lt;/code&gt;, then you have to either remove the npm &lt;code&gt;electron&lt;/code&gt; module, or rename it.</source>
          <target state="translated">&lt;code&gt;node_modules/electron/index.js&lt;/code&gt; 와 같은 경우 npm &lt;code&gt;electron&lt;/code&gt; 모듈을 제거 하거나 이름을 바꿔야합니다.</target>
        </trans-unit>
        <trans-unit id="a859a4ddd12f0e153e138787f8b6dc0429da67f2" translate="yes" xml:space="preserve">
          <source>If modules provide binaries for the usage in Electron, make sure to omit &lt;code&gt;--build-from-source&lt;/code&gt; and the &lt;code&gt;npm_config_build_from_source&lt;/code&gt; environment variable in order to take full advantage of the prebuilt binaries.</source>
          <target state="translated">모듈이 Electron에서 사용할 바이너리를 제공하는 경우 사전 빌드 된 바이너리를 최대한 활용하려면 &lt;code&gt;--build-from-source&lt;/code&gt; 및 &lt;code&gt;npm_config_build_from_source&lt;/code&gt; 환경 변수 를 생략하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a7fc7f45e66e5f0ebd9efc56a7fc45a306be368" translate="yes" xml:space="preserve">
          <source>If only the &lt;code&gt;height&lt;/code&gt; or the &lt;code&gt;width&lt;/code&gt; are specified then the current aspect ratio will be preserved in the resized image.</source>
          <target state="translated">만하면 &lt;code&gt;height&lt;/code&gt; 또는 &lt;code&gt;width&lt;/code&gt; 다음 지정된 현재 종횡비 해상도 변경에 보존한다.</target>
        </trans-unit>
        <trans-unit id="9d9162a12eb8774afee04e7764955db85194d35b" translate="yes" xml:space="preserve">
          <source>If running the above command prompts you for a reboot, please restart your machine and run the above command again after a successful restart.</source>
          <target state="translated">위 명령을 실행하면 재부팅하라는 메시지가 표시되면 컴퓨터를 다시 시작하고 성공적으로 다시 시작한 후 위 명령을 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="036a6278d7e573afe9f50df254cc0f6f441e101f" translate="yes" xml:space="preserve">
          <source>If some patches are no longer compatible with the Chromium code, fix compilation errors.</source>
          <target state="translated">일부 패치가 더 이상 Chromium 코드와 호환되지 않으면 컴파일 오류를 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="45e3367833fa240b813e722d92da74d613a9b625" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;type&lt;/code&gt; parameter is &lt;code&gt;custom&lt;/code&gt;, the &lt;code&gt;image&lt;/code&gt; parameter will hold the custom cursor image in a &lt;a href=&quot;native-image&quot;&gt;&lt;code&gt;NativeImage&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;scale&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;hotspot&lt;/code&gt; will hold additional information about the custom cursor.</source>
          <target state="translated">는 IF &lt;code&gt;type&lt;/code&gt; 매개 변수가 &lt;code&gt;custom&lt;/code&gt; 의 &lt;code&gt;image&lt;/code&gt; 매개 변수는에 사용자 정의 커서 이미지를 개최한다 &lt;a href=&quot;native-image&quot;&gt; &lt;code&gt;NativeImage&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;scale&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; 및 &lt;code&gt;hotspot&lt;/code&gt; 사용자 정의 커서에 대한 추가 정보를 개최한다.</target>
        </trans-unit>
        <trans-unit id="3074d076d9db7915861fa0e3b33bf85ee60ae69e" translate="yes" xml:space="preserve">
          <source>If the above error persists, the &lt;a href=&quot;https://docs.npmjs.com/misc/config#unsafe-perm&quot;&gt;unsafe-perm&lt;/a&gt; flag may need to be set to true:</source>
          <target state="translated">위의 오류가 지속되면 &lt;a href=&quot;https://docs.npmjs.com/misc/config#unsafe-perm&quot;&gt;unsafe-perm&lt;/a&gt; 플래그를 true로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="a2d265f7d654fec2f7394cb9d7e334abf7e454fc" translate="yes" xml:space="preserve">
          <source>If the bootstrap script is interrupted while using the git cache, it will leave the cache locked. To remove the lock, delete the files ending in &lt;code&gt;.lock&lt;/code&gt;:</source>
          <target state="translated">git 캐시를 사용하는 동안 부트 스트랩 스크립트가 중단되면 캐시가 잠긴 상태로 유지됩니다. 잠금을 제거하려면 &lt;code&gt;.lock&lt;/code&gt; 으로 끝나는 파일을 삭제하십시오 .</target>
        </trans-unit>
        <trans-unit id="d777a0bd454d49b73cbb2b36d2133d3780f64fba" translate="yes" xml:space="preserve">
          <source>If the menu bar is already visible, calling &lt;code&gt;setAutoHideMenuBar(true)&lt;/code&gt; won't hide it immediately.</source>
          <target state="translated">메뉴 막대가 이미 표시되어 &lt;code&gt;setAutoHideMenuBar(true)&lt;/code&gt; 호출 해도 즉시 숨겨지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0d81ef85e9492d93d3361d1faa21f3536481d645" translate="yes" xml:space="preserve">
          <source>If the notification has been shown before, this method will dismiss the previously shown notification and create a new one with identical properties.</source>
          <target state="translated">알림이 이전에 표시된 경우이 방법은 이전에 표시된 알림을 닫고 동일한 속성을 가진 새 알림을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="46d9109487375980a467e3475b5025f5fb361e14" translate="yes" xml:space="preserve">
          <source>If the remote object is leaked in the renderer process (e.g. stored in a map but never freed), the corresponding object in the main process will also be leaked, so you should be very careful not to leak remote objects.</source>
          <target state="translated">렌더러 프로세스에서 원격 객체가 누출 된 경우 (예 : 맵에 저장되었지만 해제되지 않은 경우) 기본 프로세스의 해당 객체도 유출되므로 원격 객체가 누출되지 않도록 매우주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="5e6949fb4346277bbe7db3c64a65fcba98095e0f" translate="yes" xml:space="preserve">
          <source>If the result of the executed code is a promise the callback result will be the resolved value of the promise. We recommend that you use the returned Promise to handle code that results in a Promise.</source>
          <target state="translated">실행 된 코드의 결과가 약속이면 콜백 결과는 약속의 해결 된 값이됩니다. 반환 된 Promise를 사용하여 Promise를 생성하는 코드를 처리하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d826471e04a7d4fc05bf0a83dfdd02e0fb722702" translate="yes" xml:space="preserve">
          <source>If the script returns that your configuration is using an outdated security protocol, use your system's package manager to update Python to the latest version in the 2.7.x branch. Alternatively, visit &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;https://www.python.org/downloads/&lt;/a&gt; for detailed instructions.</source>
          <target state="translated">스크립트가 구성에서 오래된 보안 프로토콜을 사용하고 있다고 반환하면 시스템의 패키지 관리자를 사용하여 Python을 2.7.x 분기의 최신 버전으로 업데이트하십시오. 자세한 내용 은 &lt;a href=&quot;https://www.python.org/downloads/&quot;&gt;https://www.python.org/downloads/&lt;/a&gt; 를 방문 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4adbc188f4d1ddc4f11150ad0b6625adc75ae52" translate="yes" xml:space="preserve">
          <source>If the script returns that your configuration is using an outdated security protocol, you can either update macOS to High Sierra or install a new version of Python 2.7.x. To upgrade Python, use &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;:</source>
          <target state="translated">스크립트가 구성에서 오래된 보안 프로토콜을 사용하고 있다고 반환하면 macOS를 High Sierra로 업데이트하거나 새 버전의 Python 2.7.x를 설치할 수 있습니다. Python을 업그레이드하려면 &lt;a href=&quot;https://brew.sh/&quot;&gt;Homebrew를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="07e786051fa4107bbbfff765db6fcd965cc9e749" translate="yes" xml:space="preserve">
          <source>If the size is unknown, it returns 0.</source>
          <target state="translated">크기를 알 수 없으면 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a6400f1ceae84e75b1798da7ac8f97b4940146c9" translate="yes" xml:space="preserve">
          <source>If there are any compilation errors related to the Crashpad, it probably means you need to update the fork to a newer revision. See &lt;a href=&quot;upgrading-crashpad&quot;&gt;Upgrading Crashpad&lt;/a&gt; for instructions on how to do that.</source>
          <target state="translated">크래시 패드와 관련된 컴파일 오류가있는 경우 포크를 최신 버전으로 업데이트해야 할 수도 있습니다. 이를 수행하는 방법에 대한 지시 사항은 &lt;a href=&quot;upgrading-crashpad&quot;&gt;Crashpad 업그레이드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e6f86e7d6a316512c338668077a47aabdfb66578" translate="yes" xml:space="preserve">
          <source>If you are a developer developing a native module and want to test it against Electron, you might want to rebuild the module for Electron manually. You can use &lt;code&gt;node-gyp&lt;/code&gt; directly to build for Electron:</source>
          <target state="translated">기본 모듈을 개발하는 개발자이고 Electron에 대해 테스트하려는 경우 Electron 용 모듈을 수동으로 재구성 할 수 있습니다. &lt;code&gt;node-gyp&lt;/code&gt; 를 직접 사용하여 Electron을 빌드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3546e0934a49c0841002196b0423ec133b58edb9" translate="yes" xml:space="preserve">
          <source>If you are an experienced NW.js user, you should be familiar with the concept of Node context and web context. These concepts were invented because of how NW.js was implemented.</source>
          <target state="translated">숙련 된 NW.js 사용자 인 경우 노드 컨텍스트 및 웹 컨텍스트 개념에 익숙해야합니다. 이러한 개념은 NW.js가 구현 된 방식으로 개발되었습니다.</target>
        </trans-unit>
        <trans-unit id="f518771fd5cfe4822af6e39ccae8294353675f7b" translate="yes" xml:space="preserve">
          <source>If you are building an Electron app that you intend to package and distribute, it should be code signed. The Mac and Windows app stores do not allow unsigned apps.</source>
          <target state="translated">패키지 및 배포하려는 Electron 앱을 빌드하는 경우 코드 서명되어야합니다. Mac 및 Windows 앱 스토어는 서명되지 않은 앱을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="372e64afe8410fe3d2465d66f766d65bf0c095de" translate="yes" xml:space="preserve">
          <source>If you are following the &lt;code&gt;npm&lt;/code&gt; way of installing modules, then this is done by default, if not, you have to pass &lt;code&gt;--build-from-source&lt;/code&gt; to &lt;code&gt;npm&lt;/code&gt;, or set the &lt;code&gt;npm_config_build_from_source&lt;/code&gt; environment variable.</source>
          <target state="translated">모듈을 설치 하는 &lt;code&gt;npm&lt;/code&gt; 방식을 따르는 경우 기본적으로 수행되며 그렇지 않은 경우 &lt;code&gt;--build-from-source&lt;/code&gt; 를 &lt;code&gt;npm&lt;/code&gt; 으로 전달하거나 &lt;code&gt;npm_config_build_from_source&lt;/code&gt; 환경 변수를 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2cfb529b6f7d16f1e4b79765a55450d85ee67a59" translate="yes" xml:space="preserve">
          <source>If you are new to app sandboxing under macOS, you should also read through Apple's &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html&quot;&gt;Enabling App Sandbox&lt;/a&gt; to have a basic idea, then add keys for the permissions needed by your app to the entitlements files.</source>
          <target state="translated">macOS에서 앱 샌드 박싱을 처음 사용하는 경우 Apple의 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/Miscellaneous/Reference/EntitlementKeyReference/Chapters/EnablingAppSandbox.html&quot;&gt;Enabling App Sandbox&lt;/a&gt; 를 읽고 기본적인 아이디어를 얻은 다음 앱에 필요한 권한의 키를 자격 파일에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="03cf4ab71384adf8e5e662d0d5afa5788d1fca8c" translate="yes" xml:space="preserve">
          <source>If you are one of the many developers with a strong preference, know that virtually all code editors and IDEs these days support JavaScript.</source>
          <target state="translated">선호도가 높은 많은 개발자 중 한 사람이라면 요즘에는 거의 모든 코드 편집기와 IDE가 JavaScript를 지원한다는 것을 알고 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="511ece18190383d8648593fd41d94edf88da2d63" translate="yes" xml:space="preserve">
          <source>If you are unable to access GitHub or you need to provide a custom build, you can do so by either providing a mirror or an existing cache directory.</source>
          <target state="translated">GitHub에 액세스 할 수 없거나 사용자 정의 빌드를 제공해야하는 경우 미러 또는 기존 캐시 디렉토리를 제공하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b718a7b2269d6aeeadc157ddb6619fbdfb0c4120" translate="yes" xml:space="preserve">
          <source>If you are updating tests and want to run a single spec to check it:</source>
          <target state="translated">테스트를 업데이트하고 단일 스펙을 실행하여 테스트하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="74e0ec616a5f2db0a595e964d3bee0948512b949" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;WebViews&lt;/code&gt;&lt;/a&gt;, you might need the pages and scripts loaded in your &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag to open new windows. The &lt;code&gt;allowpopups&lt;/code&gt; attribute enables them to create new &lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindows&lt;/code&gt;&lt;/a&gt; using the &lt;code&gt;window.open()&lt;/code&gt; method. &lt;code&gt;WebViews&lt;/code&gt; are otherwise not allowed to create new windows.</source>
          <target state="translated">&lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;WebViews&lt;/code&gt; &lt;/a&gt; 를 사용하는 경우 새 창을 열려면 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그에 로드 된 페이지와 스크립트가 필요할 수 있습니다 . &lt;code&gt;allowpopups&lt;/code&gt; 의 속성은 그들에게 새로운 만들 수 있습니다 &lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; &lt;/a&gt; 은 Using &lt;code&gt;window.open()&lt;/code&gt; 메소드를. 그렇지 않으면 &lt;code&gt;WebViews&lt;/code&gt; 에서 새 창을 만들 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="debc2e94eac4ca97e2e31778bad9a6ac9e1e229c" translate="yes" xml:space="preserve">
          <source>If you are using Python as provided by Homebrew, you also need to install the following Python modules:</source>
          <target state="translated">Homebrew에서 제공 한대로 Python을 사용하는 경우 다음 Python 모듈도 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="80fc6f9726825bf77f66d4a114a758748f0e0bf6" translate="yes" xml:space="preserve">
          <source>If you are using editor supports &lt;a href=&quot;http://clang.llvm.org/docs/JSONCompilationDatabase.html&quot;&gt;JSON compilation database&lt;/a&gt; based language server, you can generate it:</source>
          <target state="translated">편집기를 사용하여 &lt;a href=&quot;http://clang.llvm.org/docs/JSONCompilationDatabase.html&quot;&gt;JSON 컴파일 데이터베이스&lt;/a&gt; 기반 언어 서버를 지원 하는 경우이를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0743e84e5a23466f35691c6aa8c710c8f0896bd" translate="yes" xml:space="preserve">
          <source>If you believe that you have found a bug in Electron, please fill out this form to the best of your ability.</source>
          <target state="translated">Electron에서 버그를 발견했다고 생각되면이 양식을 최대한 활용하십시오.</target>
        </trans-unit>
        <trans-unit id="04ed95949f9fc3a03f546e9a18f26b5b78dac1cb" translate="yes" xml:space="preserve">
          <source>If you do not already have a &lt;code&gt;.deb&lt;/code&gt; package, using &lt;code&gt;electron-installer-snap&lt;/code&gt; might be an easier path to create snap packages. However, multiple solutions for creating Debian packages exist, including &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;&lt;code&gt;electron-forge&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://github.com/unindented/electron-installer-debian&quot;&gt;&lt;code&gt;electron-installer-debian&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;.deb&lt;/code&gt; 패키지 가없는 경우 &lt;code&gt;electron-installer-snap&lt;/code&gt; 을 사용하면 스냅 패키지를 만드는 것이 더 쉬울 수 있습니다. 그러나 &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt; &lt;code&gt;electron-forge&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/unindented/electron-installer-debian&quot;&gt; &lt;code&gt;electron-installer-debian&lt;/code&gt; 을&lt;/a&gt; 포함하여 데비안 패키지를 만들기위한 여러 가지 솔루션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="dae223953c408d185a172c63bf31851f299204f8" translate="yes" xml:space="preserve">
          <source>If you do not need popups, you are better off not allowing the creation of new &lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindows&lt;/code&gt;&lt;/a&gt; by default. This follows the principle of minimally required access: Don't let a website create new popups unless you know it needs that feature.</source>
          <target state="translated">팝업이 필요하지 않은 경우 기본적 으로 새 &lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindows&lt;/code&gt; &lt;/a&gt; 를 만들지 않는 것이 좋습니다 . 이것은 최소한으로 필요한 액세스 원칙을 따릅니다. 웹 사이트에서 해당 기능이 필요하다는 것을 알지 못하면 새 팝업을 만들지 마십시오.</target>
        </trans-unit>
        <trans-unit id="75e742cb1e3b85a399839264fcadf6ad1ed680a7" translate="yes" xml:space="preserve">
          <source>If you do not subscribe to this event and all windows are closed, the default behavior is to quit the app; however, if you subscribe, you control whether the app quits or not. If the user pressed &lt;code&gt;Cmd + Q&lt;/code&gt;, or the developer called &lt;code&gt;app.quit()&lt;/code&gt;, Electron will first try to close all the windows and then emit the &lt;code&gt;will-quit&lt;/code&gt; event, and in this case the &lt;code&gt;window-all-closed&lt;/code&gt; event would not be emitted.</source>
          <target state="translated">이 이벤트에 가입하지 않고 모든 창이 닫히면 기본 동작은 앱을 종료하는 것입니다. 그러나 구독하면 앱이 종료되는지 여부를 제어합니다. 사용자가 &lt;code&gt;Cmd + Q&lt;/code&gt; 누르 거나 개발자가 &lt;code&gt;app.quit()&lt;/code&gt; 누르면 Electron은 먼저 모든 창을 닫으려고 시도한 다음 &lt;code&gt;will-quit&lt;/code&gt; 이벤트를 발생시킵니다.이 경우 &lt;code&gt;window-all-closed&lt;/code&gt; 이벤트는 발생하지 않습니다. 방출.</target>
        </trans-unit>
        <trans-unit id="5d0f3f38792a28a4c020dd49aaa3a70bf46349b1" translate="yes" xml:space="preserve">
          <source>If you don't currently have a Windows installation, &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&quot;&gt;dev.microsoftedge.com&lt;/a&gt; has timebombed versions of Windows that you can use to build Electron.</source>
          <target state="translated">현재 Windows가 설치되어 있지 않은 경우 &lt;a href=&quot;https://developer.microsoft.com/en-us/microsoft-edge/tools/vms/&quot;&gt;dev.microsoftedge.com&lt;/a&gt; 에는 Electron을 빌드하는 데 사용할 수있는 시한이 지난 버전의 Windows가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c78880b2801eaeed7ce1f2cc4299bfdc75ef332" translate="yes" xml:space="preserve">
          <source>If you don't want any tools but only a solid boilerplate to build from, CT Lin's &lt;a href=&quot;https://github.com/chentsulin/electron-react-boilerplate&quot;&gt;&lt;code&gt;electron-react-boilerplate&lt;/code&gt;&lt;/a&gt; might be worth a look. It's quite popular in the community and uses &lt;code&gt;electron-builder&lt;/code&gt; internally.</source>
          <target state="translated">도구를 원하지 않고 단단한 상용구 만 만들려면 CT Lin의 &lt;a href=&quot;https://github.com/chentsulin/electron-react-boilerplate&quot;&gt; &lt;code&gt;electron-react-boilerplate&lt;/code&gt; &lt;/a&gt; 하는 것이 좋습니다. 그것은 커뮤니티에서 꽤 인기가 있으며 내부에서 &lt;code&gt;electron-builder&lt;/code&gt; 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="c2d2d4069ba374557cc5e36c5e853eb18c112d2e" translate="yes" xml:space="preserve">
          <source>If you don't want to do manual shortcut parsing there are libraries that do advanced key detection such as &lt;a href=&quot;https://github.com/ccampbell/mousetrap&quot;&gt;mousetrap&lt;/a&gt;.</source>
          <target state="translated">수동 바로 가기 구문 분석을 원하지 않는 경우 &lt;a href=&quot;https://github.com/ccampbell/mousetrap&quot;&gt;mousetrap&lt;/a&gt; 과 같은 고급 키 감지를 수행하는 라이브러리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1634a77e4ab54136589ef244b5dfae0ea6e1af51" translate="yes" xml:space="preserve">
          <source>If you encounter this problem, the following articles may prove helpful:</source>
          <target state="translated">이 문제가 발생하면 다음 문서가 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d3538dfb360b356c09289f91591872a5d74f7fc" translate="yes" xml:space="preserve">
          <source>If you encountered an error like &lt;code&gt;Command xxxx not found&lt;/code&gt;, you may try to use the &lt;code&gt;VS2015 Command Prompt&lt;/code&gt; console to execute the build scripts.</source>
          <target state="translated">당신과 같은 오류가 발생하면 &lt;code&gt;Command xxxx not found&lt;/code&gt; , 당신이 사용하려고 할 수 있습니다 &lt;code&gt;VS2015 Command Prompt&lt;/code&gt; 빌드 스크립트를 실행하는 콘솔.</target>
        </trans-unit>
        <trans-unit id="76da07e932527a6117c3a56371ba3e3878b1de65" translate="yes" xml:space="preserve">
          <source>If you experience crashes or issues in Electron that you believe are not caused by your JavaScript application, but instead by Electron itself, debugging can be a little bit tricky, especially for developers not used to native/C++ debugging. However, using Visual Studio, GitHub's hosted Electron Symbol Server, and the Electron source code, you can enable step-through debugging with breakpoints inside Electron's source code.</source>
          <target state="translated">Electron에서 JavaScript 응용 프로그램이 아니라 Electron 자체에 의한 것으로 생각되는 충돌이나 문제가 발생하는 경우 특히 네이티브 / C ++ 디버깅에 익숙하지 않은 개발자의 경우 디버깅이 약간 까다로울 수 있습니다. 그러나 Visual Studio, GitHub에서 호스팅하는 Electron Symbol Server 및 Electron 소스 코드를 사용하면 Electron의 소스 코드 내부에서 중단 점을 사용하여 단계별 디버깅을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea02dd04609c3e21d8286b42c8f5b437dc845f82" translate="yes" xml:space="preserve">
          <source>If you experience crashes or issues in Electron that you believe are not caused by your JavaScript application, but instead by Electron itself, debugging can be a little bit tricky, especially for developers not used to native/C++ debugging. However, using lldb, and the Electron source code, you can enable step-through debugging with breakpoints inside Electron's source code. You can also use &lt;a href=&quot;debugging-instructions-macos-xcode&quot;&gt;XCode for debugging&lt;/a&gt; if you prefer a graphical interface.</source>
          <target state="translated">Electron에서 JavaScript 응용 프로그램이 아니라 Electron 자체에 의한 것으로 생각되는 충돌 또는 문제가 발생하는 경우 특히 네이티브 / C ++ 디버깅에 익숙하지 않은 개발자의 경우 디버깅이 약간 까다로울 수 있습니다. 그러나 lldb 및 Electron 소스 코드를 사용하면 Electron의 소스 코드 내에서 중단 점을 사용하여 단계별 디버깅을 사용할 수 있습니다. 그래픽 인터페이스를 선호하는 경우 &lt;a href=&quot;debugging-instructions-macos-xcode&quot;&gt;디버깅에 XCode를&lt;/a&gt; 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fda1e9a41486e8e36fc4cac6397fc3739cf7ace7" translate="yes" xml:space="preserve">
          <source>If you find yourself running this command often, you can create an alias for it in your &lt;code&gt;~/.gitconfig&lt;/code&gt; file:</source>
          <target state="translated">이 명령을 자주 실행하는 경우 &lt;code&gt;~/.gitconfig&lt;/code&gt; 파일 에서 해당 별칭을 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="977cfcf861c658c441dcec6fe519ad85a7fcbd6c" translate="yes" xml:space="preserve">
          <source>If you have a security concern, please see the &lt;a href=&quot;https://electronjs.org/SECURITY&quot;&gt;security document&lt;/a&gt;.</source>
          <target state="translated">보안 문제가있는 경우 &lt;a href=&quot;https://electronjs.org/SECURITY&quot;&gt;보안 문서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="90986c2e6ef30ce59319ba1048589dd7c4ace399" translate="yes" xml:space="preserve">
          <source>If you have an existing build pipeline, you can use &lt;code&gt;electron-installer-snap&lt;/code&gt; programmatically. For more information, see the &lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;Snapcraft API docs&lt;/a&gt;.</source>
          <target state="translated">기존 빌드 파이프 라인이 있으면 &lt;code&gt;electron-installer-snap&lt;/code&gt; 프로그래밍 방식으로 사용할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;https://docs.snapcraft.io/build-snaps/syntax&quot;&gt;Snapcraft API docs를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9dd61e326667f41af614721259e6dba815d5abe" translate="yes" xml:space="preserve">
          <source>If you have libcc built on your machine in its own repo, tell Electron to use it:</source>
          <target state="translated">시스템에 자체 저장소로 libcc를 빌드 한 경우 Electron에게 다음을 사용하도록 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="eccf94d9d65934fc068a168b1624f831893d9ff6" translate="yes" xml:space="preserve">
          <source>If you haven't already, you&amp;rsquo;ll need to sign the Paid Applications Agreement and set up your banking and tax information in iTunes Connect.</source>
          <target state="translated">아직 지불하지 않은 경우 유료 응용 프로그램 계약에 서명하고 iTunes Connect에서 은행 및 세금 정보를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="6edde71923d9748cba71b225bd9e64e0b494c180" translate="yes" xml:space="preserve">
          <source>If you haven't yet built libcc but it's already supposed to be upgraded to a new Chromium, bootstrap Electron as usual &lt;code&gt;$ ./script/bootstrap.py -v&lt;/code&gt;</source>
          <target state="translated">libcc를 아직 구축하지 않았지만 이미 새로운 Chromium으로 업그레이드해야하는 경우 평상시와 같이 부트 스트랩 Electron &lt;code&gt;$ ./script/bootstrap.py -v&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="085847f31a461d6e1ddd1ea7a20e15c8719731d9" translate="yes" xml:space="preserve">
          <source>If you installed a native module and found it was not working, you need to check following things:</source>
          <target state="translated">기본 모듈을 설치했는데 작동하지 않는 경우 다음 사항을 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="7118d24a866d3a9a6e79ed6be1e457ffad2d3d88" translate="yes" xml:space="preserve">
          <source>If you know of other great accessibility tools for Electron, add them to the accessibility documentation with a pull request.</source>
          <target state="translated">Electron을위한 다른 훌륭한 접근성 도구를 알고 있다면, 풀 요청으로 접근성 문서에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="52d812014ac06ca7d290314b0daf6918fd02d885" translate="yes" xml:space="preserve">
          <source>If you need the entire &lt;code&gt;electron&lt;/code&gt; module, you can require it and then using destructuring to access the individual modules from &lt;code&gt;electron&lt;/code&gt;.</source>
          <target state="translated">전체 &lt;code&gt;electron&lt;/code&gt; 모듈 이 필요한 경우 전자 모듈을 요구 한 다음 &lt;code&gt;electron&lt;/code&gt; 통해 개별 모듈에 액세스하기 위해 구조화를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="13f9e4e0c8e8e4ed90e08b42600091d977f0e2ed" translate="yes" xml:space="preserve">
          <source>If you need to customize your configuration, you can &lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;pass options to &lt;code&gt;update-electron-app&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;use the update service directly&lt;/a&gt;.</source>
          <target state="translated">구성을 사용자 정의해야하는 경우 &lt;a href=&quot;https://github.com/electron/update-electron-app&quot;&gt;옵션을 &lt;code&gt;update-electron-app&lt;/code&gt; 로 전달&lt;/a&gt; 하거나 &lt;a href=&quot;https://github.com/electron/update.electronjs.org&quot;&gt;업데이트 서비스를 직접 사용할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="476bf4b37d10e866176315b603d648667b556ae6" translate="yes" xml:space="preserve">
          <source>If you need to force a re-download of the asset and the SHASUM file set the &lt;code&gt;force_no_cache&lt;/code&gt; environment variable to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">자산 및 SHASUM 파일을 강제로 다시 다운로드해야하는 경우 &lt;code&gt;force_no_cache&lt;/code&gt; 환경 변수를 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="5862300ccd0c3e98db2dcc5d2da273c4be2b2485" translate="yes" xml:space="preserve">
          <source>If you need to mix sandboxed and non-sandboxed renderers in one application, simply omit the &lt;code&gt;--enable-sandbox&lt;/code&gt; argument. Without this argument, windows created with &lt;code&gt;sandbox: true&lt;/code&gt; will still have node.js disabled and communicate only via IPC, which by itself is already a gain from security POV.</source>
          <target state="translated">하나의 응용 프로그램에서 샌드 박스 및 비 샌드 박스 렌더러를 혼합해야하는 경우 &lt;code&gt;--enable-sandbox&lt;/code&gt; 인수 를 생략하십시오 . 이 인수가 없으면 &lt;code&gt;sandbox: true&lt;/code&gt; 생성 된 창 은 여전히 ​​node.js를 비활성화하고 IPC를 통해서만 통신하며, 그 자체로는 이미 보안 POV를 통해 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="629e945de9624fcccddb1992beb1d4c29daab014" translate="yes" xml:space="preserve">
          <source>If you need to use an HTTP proxy you can &lt;a href=&quot;https://github.com/request/request/tree/f0c4ec061141051988d1216c24936ad2e7d5c45d#controlling-proxy-behaviour-using-environment-variables&quot;&gt;set these environment variables&lt;/a&gt;.</source>
          <target state="translated">HTTP 프록시를 사용해야하는 경우 &lt;a href=&quot;https://github.com/request/request/tree/f0c4ec061141051988d1216c24936ad2e7d5c45d#controlling-proxy-behaviour-using-environment-variables&quot;&gt;이러한 환경 변수를 설정할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="792716b5a2b850708663c8f195d92cab5976c508" translate="yes" xml:space="preserve">
          <source>If you only want to build Electron quickly for testing or development, you can download the shared library versions by passing the &lt;code&gt;--dev&lt;/code&gt; parameter:</source>
          <target state="translated">테스트 또는 개발을 위해 Electron을 빠르게 빌드하려는 경우 &lt;code&gt;--dev&lt;/code&gt; 매개 변수 를 전달하여 공유 라이브러리 버전을 다운로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2d7d40dcd0ee25b28e3d79e5292f1b6c52000d40" translate="yes" xml:space="preserve">
          <source>If you provided &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;args&lt;/code&gt; options to &lt;code&gt;app.setLoginItemSettings&lt;/code&gt; then you need to pass the same arguments here for &lt;code&gt;openAtLogin&lt;/code&gt; to be set correctly.</source>
          <target state="translated">&lt;code&gt;app.setLoginItemSettings&lt;/code&gt; 에 &lt;code&gt;path&lt;/code&gt; 및 &lt;code&gt;args&lt;/code&gt; 옵션을 제공 한 경우 &lt;code&gt;openAtLogin&lt;/code&gt; 을 올바르게 설정하려면 여기에 동일한 인수를 전달해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1f1e57d4cd3f8005ef706f6a418f0bd254fc0428" translate="yes" xml:space="preserve">
          <source>If you want a quick fix, you can make the variables global by changing your code from this:</source>
          <target state="translated">빠른 수정이 필요한 경우 코드를 다음과 같이 변경하여 전역 변수를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9335e6d51d50f1c8319d8890f1068dd36a905ea" translate="yes" xml:space="preserve">
          <source>If you want to build for an &lt;code&gt;arm&lt;/code&gt; target you should also install the following dependencies:</source>
          <target state="translated">&lt;code&gt;arm&lt;/code&gt; 대상 을 빌드 하려면 다음 종속성도 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="4c1e6dc0c9b9cafd7d68ef3e780b5817a75fc949" translate="yes" xml:space="preserve">
          <source>If you want to change the architecture that is downloaded (e.g., &lt;code&gt;ia32&lt;/code&gt; on an &lt;code&gt;x64&lt;/code&gt; machine), you can use the &lt;code&gt;--arch&lt;/code&gt; flag with npm install or set the &lt;code&gt;npm_config_arch&lt;/code&gt; environment variable:</source>
          <target state="translated">당신이 다운로드되는 구조를 변경하려는 경우 (예를 들어, &lt;code&gt;ia32&lt;/code&gt; 온 &lt;code&gt;x64&lt;/code&gt; 기계), 당신은 사용할 수 있습니다 &lt;code&gt;--arch&lt;/code&gt; 설치 NPM과 플래그를하거나 설정 &lt;code&gt;npm_config_arch&lt;/code&gt; 환경 변수를 :</target>
        </trans-unit>
        <trans-unit id="5201d3612d4e2d0860bad7ca51a07c78c1f45c88" translate="yes" xml:space="preserve">
          <source>If you want to control the guest content in any way, you can write JavaScript that listens for &lt;code&gt;webview&lt;/code&gt; events and responds to those events using the &lt;code&gt;webview&lt;/code&gt; methods. Here's sample code with two event listeners: one that listens for the web page to start loading, the other for the web page to stop loading, and displays a &quot;loading...&quot; message during the load time:</source>
          <target state="translated">어떤 방식 으로든 게스트 컨텐츠를 제어하려면 &lt;code&gt;webview&lt;/code&gt; 이벤트 를 수신 하고 &lt;code&gt;webview&lt;/code&gt; 메소드를 사용하여 해당 이벤트에 응답하는 JavaScript를 작성할 수 있습니다 . 다음은 두 개의 이벤트 리스너가있는 샘플 코드입니다. 하나는로드를 시작하기 위해 웹 페이지를 수신 대기하고 다른 하나는로드를 중지하기 위해 웹 페이지 수신을 대기하고로드 시간 동안 &quot;로드 중 ...&quot;메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="4fb4f89f45ce1db939f58b3755053c11fd6862aa" translate="yes" xml:space="preserve">
          <source>If you want to debug and step through libchromiumcontent, you will have to run the bootsrap script with the &lt;code&gt;--build_debug_libcc&lt;/code&gt; argument.</source>
          <target state="translated">libchromiumcontent를 디버그하고 단계별로 실행하려면 &lt;code&gt;--build_debug_libcc&lt;/code&gt; 인수로 부트 스트랩 스크립트를 실행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="70bc54ee6a7f8f0d7dd27d707f8b8f93a407e696" translate="yes" xml:space="preserve">
          <source>If you want to format the changed code on your latest git commit (HEAD), you can run &lt;code&gt;git-clang-format HEAD~1&lt;/code&gt;. See &lt;code&gt;git-clang-format -h&lt;/code&gt; for more details.</source>
          <target state="translated">최신 git commit (HEAD)에서 변경된 코드를 포맷하려면 &lt;code&gt;git-clang-format HEAD~1&lt;/code&gt; 실행할 수 있습니다 . 자세한 내용은 &lt;code&gt;git-clang-format -h&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1a26518fe1e613b5d3ff699a348197b25272e778" translate="yes" xml:space="preserve">
          <source>If you want to handle keyboard shortcuts for a &lt;a href=&quot;../api/browser-window&quot;&gt;BrowserWindow&lt;/a&gt;, you can use the &lt;code&gt;keyup&lt;/code&gt; and &lt;code&gt;keydown&lt;/code&gt; event listeners on the window object inside the renderer process.</source>
          <target state="translated">&lt;a href=&quot;../api/browser-window&quot;&gt;BrowserWindow의&lt;/a&gt; 키보드 단축키를 처리하려는 경우 렌더러 프로세스 내의 window 객체 에서 &lt;code&gt;keyup&lt;/code&gt; 및 &lt;code&gt;keydown&lt;/code&gt; 이벤트 리스너를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e23f9ec8d6d374e4f11ab44cabacc757c58d8152" translate="yes" xml:space="preserve">
          <source>If you want to keep exact same behaviors on all platforms, you should not rely on the &lt;code&gt;click&lt;/code&gt; event and always attach a context menu to the tray icon.</source>
          <target state="translated">모든 플랫폼에서 정확히 동일한 동작을 유지하려면 &lt;code&gt;click&lt;/code&gt; 이벤트 에 의존하지 말고 항상 상황에 맞는 메뉴를 트레이 아이콘에 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="f18bc349ad3d428e75b99e3c156715cfcda822c2" translate="yes" xml:space="preserve">
          <source>If you want to show Notifications from a renderer process you should use the &lt;a href=&quot;../tutorial/notifications&quot;&gt;HTML5 Notification API&lt;/a&gt;</source>
          <target state="translated">렌더러 프로세스에서 알림을 표시하려면 &lt;a href=&quot;../tutorial/notifications&quot;&gt;HTML5 알림 API를&lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9767f677f83eca842bdd0bf0ecee26c0ee37f559" translate="yes" xml:space="preserve">
          <source>If you want to support displays with different DPI densities at the same time, you can put images with different sizes in the same folder and use the filename without DPI suffixes. For example:</source>
          <target state="translated">다른 DPI 밀도를 가진 디스플레이를 동시에 지원하려면 같은 폴더에 다른 크기의 이미지를 넣고 DPI 접미사없이 파일 이름을 사용할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8e9880ad441ad45f30eca80c7b9d8eefd5e0f74c" translate="yes" xml:space="preserve">
          <source>If you want to use Chrome's built-in &lt;code&gt;window.open()&lt;/code&gt; implementation, set &lt;code&gt;nativeWindowOpen&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; in the &lt;code&gt;webPreferences&lt;/code&gt; options object.</source>
          <target state="translated">Chrome의 내장 &lt;code&gt;window.open()&lt;/code&gt; 구현 을 사용하려면 &lt;code&gt;webPreferences&lt;/code&gt; 옵션 객체 에서 &lt;code&gt;nativeWindowOpen&lt;/code&gt; 을 &lt;code&gt;true&lt;/code&gt; 로 설정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="aaffc18ff167e6c5dc5030e5cecc520f958918d9" translate="yes" xml:space="preserve">
          <source>If you would like to build both &lt;code&gt;Release&lt;/code&gt; and &lt;code&gt;Debug&lt;/code&gt; targets:</source>
          <target state="translated">&lt;code&gt;Release&lt;/code&gt; 및 &lt;code&gt;Debug&lt;/code&gt; 대상을 모두 빌드하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="f79f8a39f57cfbd50d711f9530442b82349e7cfe" translate="yes" xml:space="preserve">
          <source>If you'd like to contribute to Electron, see the &lt;a href=&quot;https://electronjs.org/CONTRIBUTING&quot;&gt;contributing document&lt;/a&gt;.</source>
          <target state="translated">Electron에 &lt;a href=&quot;https://electronjs.org/CONTRIBUTING&quot;&gt;기고&lt;/a&gt; 하려면 기고 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2aead26dae48a464ea0fe8f7ce84ef9144a991e3" translate="yes" xml:space="preserve">
          <source>If you're debugging something, it can be helpful to pass some extra flags to the Electron binary:</source>
          <target state="translated">무언가를 디버깅하는 경우 Electron 바이너리에 추가 플래그를 전달하는 것이 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f5e9e99ea82483efec97ab08ba1a5f91453255c" translate="yes" xml:space="preserve">
          <source>If you're developing Electron and don't plan to redistribute your custom Electron build, you may skip this section.</source>
          <target state="translated">Electron을 개발 중이고 사용자 정의 Electron 빌드를 재배포하지 않으려는 경우이 섹션을 건너 뛸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c161dc98d83657640db26ca7b021acbcc3a9d819" translate="yes" xml:space="preserve">
          <source>If you're developing a private Electron application, or if you're not publishing releases to GitHub Releases, it may be necessary to run your own update server.</source>
          <target state="translated">비공개 Electron 응용 프로그램을 개발 중이거나 GitHub 릴리스에 릴리스를 게시하지 않는 경우 자체 업데이트 서버를 실행해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b9eaf73429dbe46c500b2d1339d9d43d1c25e98" translate="yes" xml:space="preserve">
          <source>If you're looking for programming help, for answers to questions, or to join in discussion with other developers who use Electron, you can interact with the community in these locations:</source>
          <target state="translated">프로그래밍 도움말, 질문에 대한 답변 또는 Electron을 사용하는 다른 개발자와 토론에 참여하려는 경우 다음 위치에서 커뮤니티와 상호 작용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af25fd84a5e354fae9ce7065072bc6d204e2a1e1" translate="yes" xml:space="preserve">
          <source>If you're setting just a custom titlebar as draggable, you also need to make all buttons in titlebar non-draggable.</source>
          <target state="translated">사용자 정의 제목 표시 줄 만 드래그 가능으로 설정하는 경우 제목 표시 줄의 모든 단추를 드래그 할 수 없도록 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="e6b3c3654b5d12a62eae18258917bf4a22841276" translate="yes" xml:space="preserve">
          <source>If you've found a bug in a &lt;a href=&quot;#supported-versions&quot;&gt;supported version&lt;/a&gt; of Electron, please report it with the &lt;a href=&quot;../development/issues&quot;&gt;issue tracker&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#supported-versions&quot;&gt;지원되는&lt;/a&gt; Electron 버전 에서 버그를 발견 한 경우 &lt;a href=&quot;../development/issues&quot;&gt;이슈 트래커&lt;/a&gt; 로 버그 를 신고하십시오 .</target>
        </trans-unit>
        <trans-unit id="51aa10ea3c1c92e6ecacb529aa885236faf8f979" translate="yes" xml:space="preserve">
          <source>If your app is packaged with &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt; you can use the &lt;a href=&quot;https://www.electron.build/auto-update&quot;&gt;electron-updater&lt;/a&gt; module, which does not require a server and allows for updates from S3, GitHub or any other static file host. This sidesteps Electron's built-in update mechanism, meaning that the rest of this documentation will not apply to &lt;code&gt;electron-builder&lt;/code&gt;'s updater.</source>
          <target state="translated">앱이 &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; &lt;/a&gt; 와 함께 제공 되는 경우 서버가 필요없고 S3, GitHub 또는 기타 정적 파일 호스트의 업데이트를 허용 하는 &lt;a href=&quot;https://www.electron.build/auto-update&quot;&gt;electron-updater&lt;/a&gt; 모듈을 사용할 수 있습니다 . 이것은 Electron의 내장 업데이트 메커니즘을 회피합니다. 즉,이 문서의 나머지 부분은 &lt;code&gt;electron-builder&lt;/code&gt; 의 업데이터 에는 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="892280c67a78254c94b3aa2e961496a6129be496" translate="yes" xml:space="preserve">
          <source>Ignore application menu shortcuts while this web contents is focused.</source>
          <target state="translated">이 웹 컨텐츠에 초점을 맞추는 동안 애플리케이션 메뉴 바로 가기를 무시하십시오.</target>
        </trans-unit>
        <trans-unit id="424100d46b3ab239a3c2ec5d1347f13d4479a06e" translate="yes" xml:space="preserve">
          <source>Ignore the connections limit for &lt;code&gt;domains&lt;/code&gt; list separated by &lt;code&gt;,&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;,&lt;/code&gt; 로 구분 된 &lt;code&gt;domains&lt;/code&gt; 목록 의 연결 제한을 무시하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5fcbfbdcdfee026e6182c4343823188f45b893e" translate="yes" xml:space="preserve">
          <source>Ignores certificate related errors.</source>
          <target state="translated">인증서 관련 오류를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="5044799f824f27630de93bd0f1eb314c6bd530a3" translate="yes" xml:space="preserve">
          <source>Ignoring Above Advice</source>
          <target state="translated">위의 조언을 무시</target>
        </trans-unit>
        <trans-unit id="a063d213139ef01259fb2e1362319e9b85ed8247" translate="yes" xml:space="preserve">
          <source>Ignoring mouse messages makes the web page oblivious to mouse movement, meaning that mouse movement events will not be emitted. On Windows operating systems an optional parameter can be used to forward mouse move messages to the web page, allowing events such as &lt;code&gt;mouseleave&lt;/code&gt; to be emitted:</source>
          <target state="translated">마우스 메시지를 무시하면 웹 페이지가 마우스 움직임을 잊게되어 마우스 움직임 이벤트가 발생하지 않습니다. Windows 운영 체제에서 선택적 매개 변수를 사용하여 마우스 이동 메시지를 웹 페이지로 전달하여 마우스 &lt;code&gt;mouseleave&lt;/code&gt; 와 같은 이벤트를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ca349de6e383b65bb6d1144f63a50efd179453b" translate="yes" xml:space="preserve">
          <source>Immediately shows the notification to the user, please note this means unlike the HTML5 Notification implementation, simply instantiating a &lt;code&gt;new Notification&lt;/code&gt; does not immediately show it to the user, you need to call this method before the OS will display it.</source>
          <target state="translated">사용자에게 알림을 즉시 표시합니다. HTML5 알림 구현과 달리 &lt;code&gt;new Notification&lt;/code&gt; 인스턴스화 해도 즉시 사용자에게 알림 이 표시되지 않으므로 OS에서 알림 을 표시하기 전에이 메서드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="ebb90ad1916e70a7d909dacfe5051f48aa4dd948" translate="yes" xml:space="preserve">
          <source>Implementing Updates in Your App</source>
          <target state="translated">앱에서 업데이트 구현</target>
        </trans-unit>
        <trans-unit id="ebcfb4906925f0491b8dbb88fb357667615aabaa" translate="yes" xml:space="preserve">
          <source>Important things to notice in the preload script:</source>
          <target state="translated">사전로드 스크립트에서 유의해야 할 사항 :</target>
        </trans-unit>
        <trans-unit id="aeebb2ee44266da25bb466aa24666f88aee9acbf" translate="yes" xml:space="preserve">
          <source>Imports the certificate in pkcs12 format into the platform certificate store. &lt;code&gt;callback&lt;/code&gt; is called with the &lt;code&gt;result&lt;/code&gt; of import operation, a value of &lt;code&gt;0&lt;/code&gt; indicates success while any other value indicates failure according to chromium &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net_error_list&lt;/a&gt;.</source>
          <target state="translated">pkcs12 형식의 인증서를 플랫폼 인증서 저장소로 가져옵니다. 가져 오기 작업 의 &lt;code&gt;result&lt;/code&gt; 로 &lt;code&gt;callback&lt;/code&gt; 이 호출되며, 값 &lt;code&gt;0&lt;/code&gt; 은 성공을 나타내고 다른 값은 크롬 &lt;a href=&quot;https://code.google.com/p/chromium/codesearch#chromium/src/net/base/net_error_list.h&quot;&gt;net_error_list&lt;/a&gt; 에 따라 실패를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="54d043d66902b54dc09febe87486b632a9ed7082" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;electron-crashpad-vA.B.C.D&lt;/code&gt;, cherry-pick the patch's checksum</source>
          <target state="translated">에서 &lt;code&gt;electron-crashpad-vA.B.C.D&lt;/code&gt; , 패치의 체크섬을 체리 - 선택</target>
        </trans-unit>
        <trans-unit id="2c0a5b221735fd5165fe6a72b7dd95e84d476107" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;script/upload.py&lt;/code&gt;, you &lt;em&gt;must&lt;/em&gt; set &lt;code&gt;ELECTRON_REPO&lt;/code&gt; to your fork (&lt;code&gt;MYORG/electron&lt;/code&gt;), especially if you are a contributor to Electron proper.</source>
          <target state="translated">에서 &lt;code&gt;script/upload.py&lt;/code&gt; , 당신은 &lt;em&gt;해야한다&lt;/em&gt; 설정 &lt;code&gt;ELECTRON_REPO&lt;/code&gt; 을 (포크에 &lt;code&gt;MYORG/electron&lt;/code&gt; 당신이 적절한 전자에 기여 특히 경우).</target>
        </trans-unit>
        <trans-unit id="21e0f6f2ce9e10de95c77dbb8d73d89c7bd736b0" translate="yes" xml:space="preserve">
          <source>In Chromium, this process is referred to as the &quot;browser process&quot;. It is renamed in Electron to avoid confusion with renderer processes.</source>
          <target state="translated">Chromium에서는이 프로세스를 &quot;브라우저 프로세스&quot;라고합니다. 렌더러 프로세스와의 혼동을 피하기 위해 Electron에서 이름이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="f1437a264a3475229aede1c4942b00e775cc3256" translate="yes" xml:space="preserve">
          <source>In Detail: Electron's Versioning Scheme</source>
          <target state="translated">세부 사항 : Electron의 버전 관리 체계</target>
        </trans-unit>
        <trans-unit id="48a32c72dc62cc33ed97d937cb01ff3252d0a200" translate="yes" xml:space="preserve">
          <source>In Detail: Installing Electron</source>
          <target state="translated">자세히 : 전자 설치</target>
        </trans-unit>
        <trans-unit id="f1e68e5a8bcc9c028bebf7a43fc653e2a4ab4f00" translate="yes" xml:space="preserve">
          <source>In Detail: Packaging App Source Code with asar</source>
          <target state="translated">자세히 : asar로 앱 소스 코드 패키징</target>
        </trans-unit>
        <trans-unit id="cad4f214e72fcc9d3a93d8052858e48edb7b60be" translate="yes" xml:space="preserve">
          <source>In Detail: Using Pepper Flash Plugin</source>
          <target state="translated">자세히 : Pepper Flash 플러그인 사용</target>
        </trans-unit>
        <trans-unit id="7fada1074b55085e8425e24c9b5cdb61ea84c1ba" translate="yes" xml:space="preserve">
          <source>In Detail: Using Widevine CDM Plugin</source>
          <target state="translated">상세 : Widevine CDM 플러그인 사용</target>
        </trans-unit>
        <trans-unit id="6cff52c011bfed815b8af07ca624dea395e580f9" translate="yes" xml:space="preserve">
          <source>In Devtron, there is a new accessibility tab which will allow you to audit a page in your app, sort and filter the results.</source>
          <target state="translated">Devtron에는 앱의 페이지를 감사하고 결과를 정렬 및 필터링 할 수있는 새로운 접근성 탭이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d9c3ade67add20f1f2811f5e2457d94c8480632" translate="yes" xml:space="preserve">
          <source>In Electron there are two sets of APIs: Node APIs provided by Node.js and Web APIs provided by Chromium. Both APIs support reading files from &lt;code&gt;asar&lt;/code&gt; archives.</source>
          <target state="translated">Electron에는 Node.js에서 제공하는 Node API와 Chromium에서 제공하는 Web API의 두 가지 API 세트가 있습니다. 두 API 모두 &lt;code&gt;asar&lt;/code&gt; 아카이브 에서 파일 읽기를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="0b42fd03fbe33fd66fe7eccfe82548b3608207c4" translate="yes" xml:space="preserve">
          <source>In Electron we took a very similar approach: for &lt;code&gt;Debug&lt;/code&gt; builds, the binary will be linked to a shared library version of Chromium's components to achieve fast linking time; for &lt;code&gt;Release&lt;/code&gt; builds, the binary will be linked to the static library versions, so we can have the best possible binary size and performance.</source>
          <target state="translated">Electron에서는 매우 유사한 접근 방식을 취했습니다. &lt;code&gt;Debug&lt;/code&gt; 빌드의 경우 바이너리는 Chromium 구성 요소의 공유 라이브러리 버전에 연결되어 빠른 연결 시간을 달성합니다. 대한 &lt;code&gt;Release&lt;/code&gt; 빌드 우리가 최선의 진 크기와 성능을 가질 수 있도록 바이너리, 정적 라이브러리 버전으로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="625f5fe9d865e659c090177d284e16759fd6bea9" translate="yes" xml:space="preserve">
          <source>In Electron you can use the Widevine CDM plugin shipped with Chrome browser.</source>
          <target state="translated">Electron에서는 Chrome 브라우저와 함께 제공된 Widevine CDM 플러그인을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e1e890d94f8d23d7f8fadfe52d2a05946a4ed8db" translate="yes" xml:space="preserve">
          <source>In Electron, GUI-related modules (such as &lt;code&gt;dialog&lt;/code&gt;, &lt;code&gt;menu&lt;/code&gt; etc.) are only available in the main process, not in the renderer process. In order to use them from the renderer process, the &lt;code&gt;ipc&lt;/code&gt; module is necessary to send inter-process messages to the main process. With the &lt;code&gt;remote&lt;/code&gt; module, you can invoke methods of the main process object without explicitly sending inter-process messages, similar to Java's &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_remote_method_invocation&quot;&gt;RMI&lt;/a&gt;. An example of creating a browser window from a renderer process:</source>
          <target state="translated">Electron에서 GUI 관련 모듈 (예 : &lt;code&gt;dialog&lt;/code&gt; , &lt;code&gt;menu&lt;/code&gt; 등)은 렌더러 프로세스가 아닌 기본 프로세스에서만 사용할 수 있습니다. 렌더러 프로세스에서 이들을 사용하려면 프로세스 간 메시지를 기본 프로세스로 전송하기 위해 &lt;code&gt;ipc&lt;/code&gt; 모듈이 필요합니다. &lt;code&gt;remote&lt;/code&gt; 모듈을 사용하면 Java의 &lt;a href=&quot;https://en.wikipedia.org/wiki/Java_remote_method_invocation&quot;&gt;RMI&lt;/a&gt; 와 유사한 프로세스 간 메시지를 명시 적으로 보내지 않고도 기본 프로세스 객체의 메소드를 호출 할 수 있습니다 . 렌더러 프로세스에서 브라우저 창을 만드는 예 :</target>
        </trans-unit>
        <trans-unit id="1202e6b2d57c7ee8995daa820672658a3e0badef" translate="yes" xml:space="preserve">
          <source>In Electron, Node.js and Chromium share a single V8 instance&amp;mdash;usually the version that Chromium is using. Most of the time this &lt;em&gt;just works&lt;/em&gt; but sometimes it means patching Node.js.</source>
          <target state="translated">Electron에서 Node.js와 Chromium은 단일 V8 인스턴스 (일반적으로 Chromium이 사용하는 버전)를 공유합니다. 대부분의 경우 이것이 &lt;em&gt;작동&lt;/em&gt; 하지만 때로는 Node.js 패치를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="3034223aae286e52538a3884619c4b3277a74c70" translate="yes" xml:space="preserve">
          <source>In Electron, for the APIs that take images, you can pass either file paths or &lt;code&gt;NativeImage&lt;/code&gt; instances. An empty image will be used when &lt;code&gt;null&lt;/code&gt; is passed.</source>
          <target state="translated">Electron에서 이미지를 가져 오는 API의 경우 파일 경로 또는 &lt;code&gt;NativeImage&lt;/code&gt; 인스턴스를 전달할 수 있습니다 . &lt;code&gt;null&lt;/code&gt; 이 전달 되면 빈 이미지가 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b349f269ed56f6dd1e5062315e66fa6cb87823e6" translate="yes" xml:space="preserve">
          <source>In Electron, the entry point is a JavaScript script. Instead of providing a URL directly, you manually create a browser window and load an HTML file using the API. You also need to listen to window events to decide when to quit the application.</source>
          <target state="translated">Electron에서 진입 점은 JavaScript 스크립트입니다. URL을 직접 제공하는 대신 브라우저 창을 수동으로 작성하고 API를 사용하여 HTML 파일을로드하십시오. 또한 응용 프로그램을 종료 할시기를 결정하려면 창 이벤트를 수신해야합니다.</target>
        </trans-unit>
        <trans-unit id="63df86282942316da6f7f2debaa8b9d3f7f75671" translate="yes" xml:space="preserve">
          <source>In Electron, the process that runs &lt;code&gt;package.json&lt;/code&gt;'s &lt;code&gt;main&lt;/code&gt; script is called &lt;strong&gt;the main process&lt;/strong&gt;. The script that runs in the main process can display a GUI by creating web pages. An Electron app always has one main process, but never more.</source>
          <target state="translated">Electron에서는 &lt;code&gt;package.json&lt;/code&gt; 의 &lt;code&gt;main&lt;/code&gt; 스크립트 를 실행하는 프로세스를 &lt;strong&gt;기본 프로세스&lt;/strong&gt; 라고 &lt;strong&gt;합니다&lt;/strong&gt; . 기본 프로세스에서 실행되는 스크립트는 웹 페이지를 작성하여 GUI를 표시 할 수 있습니다. Electron 앱에는 항상 하나의 주요 프로세스가 있지만 더 이상은 없습니다.</target>
        </trans-unit>
        <trans-unit id="37b502635f1118a89c49c89684115bf4576afe89" translate="yes" xml:space="preserve">
          <source>In Electron, we have several ways to communicate between the main process and renderer processes. Like &lt;a href=&quot;../api/ipc-renderer&quot;&gt;&lt;code&gt;ipcRenderer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../api/ipc-main&quot;&gt;&lt;code&gt;ipcMain&lt;/code&gt;&lt;/a&gt; modules for sending messages, and the &lt;a href=&quot;../api/remote&quot;&gt;remote&lt;/a&gt; module for RPC style communication. There is also an FAQ entry on &lt;a href=&quot;../faq#how-to-share-data-between-web-pages&quot;&gt;how to share data between web pages&lt;/a&gt;.</source>
          <target state="translated">Electron에는 메인 프로세스와 렌더러 프로세스간에 통신하는 여러 가지 방법이 있습니다. 마찬가지로 &lt;a href=&quot;../api/ipc-renderer&quot;&gt; &lt;code&gt;ipcRenderer&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../api/ipc-main&quot;&gt; &lt;code&gt;ipcMain&lt;/code&gt; 의&lt;/a&gt; 메시지를 보내는 모듈 및 &lt;a href=&quot;../api/remote&quot;&gt;원격&lt;/a&gt; RPC 스타일 통신을위한 모듈. &lt;a href=&quot;../faq#how-to-share-data-between-web-pages&quot;&gt;웹 페이지간에 데이터를 공유하는 방법&lt;/a&gt; 에 대한 FAQ 항목도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1a0df57b98ac115921f2ce0f52c5cef0f577cce5" translate="yes" xml:space="preserve">
          <source>In NW.js the main entry point of an application is a web page or a JS script. You specify a html or js file in the &lt;code&gt;package.json&lt;/code&gt; and it is opened in a browser window as the application's main window (in case of an html entrypoint) or the script is executed.</source>
          <target state="translated">NW.js에서 응용 프로그램의 주요 진입 점은 웹 페이지 또는 JS 스크립트입니다. &lt;code&gt;package.json&lt;/code&gt; 에 html 또는 js 파일을 지정 하면 응용 프로그램의 기본 창 (html 진입 점의 경우)으로 스크립트 창이 열리거나 스크립트가 실행될 때 브라우저 창에서 열립니다.</target>
        </trans-unit>
        <trans-unit id="c8afc68a42dc2274d210dd3bcb2dc90a34aef201" translate="yes" xml:space="preserve">
          <source>In NW.js, the Node integration in web pages requires patching Chromium to work, while in Electron we chose a different way to integrate the libuv loop with each platform's message loop to avoid hacking Chromium. See the &lt;a href=&quot;https://github.com/electron/electron/tree/master/atom/common&quot;&gt;&lt;code&gt;node_bindings&lt;/code&gt;&lt;/a&gt; code for how that was done.</source>
          <target state="translated">NW.js에서 웹 페이지의 노드 통합에는 Chromium 패치가 필요하지만 Electron에서는 Chromium 해킹을 피하기 위해 libuv 루프를 각 플랫폼의 메시지 루프와 통합하는 다른 방법을 선택했습니다. 그 방법에 대해서는 &lt;a href=&quot;https://github.com/electron/electron/tree/master/atom/common&quot;&gt; &lt;code&gt;node_bindings&lt;/code&gt; &lt;/a&gt; 코드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ef45d1cc4d48650ae9b6257f804949f11c64aa48" translate="yes" xml:space="preserve">
          <source>In Node.js and Electron, each running process has a &lt;code&gt;process&lt;/code&gt; object. This object is a global that provides information about, and control over, the current process. As a global, it is always available to applications without using require().</source>
          <target state="translated">Node.js 및 Electron에서 실행중인 각 프로세스에는 &lt;code&gt;process&lt;/code&gt; 객체가 있습니다. 이 객체는 현재 프로세스에 대한 정보를 제공하고 현재 프로세스를 제어하는 ​​글로벌입니다. 전역 적으로 require ()를 사용하지 않고도 응용 프로그램에서 항상 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd36a9edb29970d52de8da21b0c6a4fa6aa74ad9" translate="yes" xml:space="preserve">
          <source>In a frameless window the dragging behaviour may conflict with selecting text. For example, when you drag the titlebar you may accidentally select the text on the titlebar. To prevent this, you need to disable text selection within a draggable area like this:</source>
          <target state="translated">프레임이없는 창에서 드래그 동작은 텍스트 선택과 충돌 할 수 있습니다. 예를 들어 제목 표시 줄을 끌 때 실수로 제목 표시 줄에서 텍스트를 선택할 수 있습니다. 이를 방지하려면 다음과 같이 드래그 가능한 영역 내에서 텍스트 선택을 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="0993be2098f3d2d823e3f842cc460f60cc7dc51f" translate="yes" xml:space="preserve">
          <source>In a web page, files in an archive can be requested with the &lt;code&gt;file:&lt;/code&gt; protocol. Like the Node API, &lt;code&gt;asar&lt;/code&gt; archives are treated as directories.</source>
          <target state="translated">웹 페이지에서 &lt;code&gt;file:&lt;/code&gt; protocol을 사용하여 아카이브의 파일을 요청할 수 있습니다 . Node API와 마찬가지로 &lt;code&gt;asar&lt;/code&gt; 아카이브는 디렉토리로 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="4ebbe08fb4030b6ca8614a5b9c6fc5a297df17c6" translate="yes" xml:space="preserve">
          <source>In addition to changing the architecture, you can also specify the platform (e.g., &lt;code&gt;win32&lt;/code&gt;, &lt;code&gt;linux&lt;/code&gt;, etc.) using the &lt;code&gt;--platform&lt;/code&gt; flag:</source>
          <target state="translated">아키텍처를 변경하는 것 외에도 &lt;code&gt;--platform&lt;/code&gt; 플래그를 사용하여 플랫폼 (예 : &lt;code&gt;win32&lt;/code&gt; , &lt;code&gt;linux&lt;/code&gt; 등)을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad38744a2cd250359b7a0139989ab544e5c30bfd" translate="yes" xml:space="preserve">
          <source>In addition to these methods, the child window implements &lt;code&gt;window.opener&lt;/code&gt; object with no properties and a single method.</source>
          <target state="translated">이러한 메서드 외에도 자식 창은 속성과 단일 메서드없이 &lt;code&gt;window.opener&lt;/code&gt; 객체를 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="eb6b63b8a09f8385b54d78c9291e4e4e947d73b7" translate="yes" xml:space="preserve">
          <source>In addition, the exe is launched inside the appx model - meaning that it can use many of the APIs available to the Universal Windows Platform. To gain even more capabilities, an Electron app can pair up with an invisible UWP background task launched together with the &lt;code&gt;exe&lt;/code&gt; - sort of launched as a sidekick to run tasks in the background, receive push notifications, or to communicate with other UWP applications.</source>
          <target state="translated">또한 exe는 appx 모델 내에서 시작되므로 Universal Windows 플랫폼에서 사용할 수있는 많은 API를 사용할 수 있습니다. 훨씬 더 많은 기능을 얻기 위해 Electron 앱은 백그라운드에서 작업 을 실행하거나 푸시 알림을 받거나 다른 UWP 응용 프로그램과 통신하기위한 조수로 시작된 일종의 &lt;code&gt;exe&lt;/code&gt; 와 함께 시작된 보이지 않는 UWP 백그라운드 작업과 쌍을 이룰 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f65725b617730ca820bb32d3b898b98d459f50d" translate="yes" xml:space="preserve">
          <source>In addition, there are some subtle differences on each platform:</source>
          <target state="translated">또한 각 플랫폼마다 약간의 차이가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f2fa843ea25b67d9f9124439c22087532ac27ad" translate="yes" xml:space="preserve">
          <source>In all cases, you will need to have the &lt;code&gt;snapcraft&lt;/code&gt; tool installed. We recommend building on Ubuntu 16.04 (or the current LTS).</source>
          <target state="translated">모든 경우에 &lt;code&gt;snapcraft&lt;/code&gt; 도구가 설치되어 있어야합니다. Ubuntu 16.04 (또는 현재 LTS)를 빌드하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="88eb93dee96b67a7045b74d8bbad7d7a85a57f79" translate="yes" xml:space="preserve">
          <source>In almost all cases, these errors are the result of network problems and not actual issues with the &lt;code&gt;electron&lt;/code&gt; npm package. Errors like &lt;code&gt;ELIFECYCLE&lt;/code&gt;, &lt;code&gt;EAI_AGAIN&lt;/code&gt;, &lt;code&gt;ECONNRESET&lt;/code&gt;, and &lt;code&gt;ETIMEDOUT&lt;/code&gt; are all indications of such network problems. The best resolution is to try switching networks, or wait a bit and try installing again.</source>
          <target state="translated">거의 모든 경우에 이러한 오류는 &lt;code&gt;electron&lt;/code&gt; npm 패키지 의 실제 문제가 아니라 네트워크 문제의 결과입니다 . &lt;code&gt;ELIFECYCLE&lt;/code&gt; , &lt;code&gt;EAI_AGAIN&lt;/code&gt; , &lt;code&gt;ECONNRESET&lt;/code&gt; 및 &lt;code&gt;ETIMEDOUT&lt;/code&gt; 과 같은 오류 는 모두 해당 네트워크 문제를 나타냅니다. 가장 좋은 해결책은 네트워크 전환을 시도하거나 잠시 기다렸다가 다시 설치하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="195f1e249de6eef85e19604ad6504295fedc65f1" translate="yes" xml:space="preserve">
          <source>In most cases, you should just do everything in the &lt;code&gt;ready&lt;/code&gt; event handler.</source>
          <target state="translated">대부분의 경우 &lt;code&gt;ready&lt;/code&gt; 이벤트 핸들러 에서 모든 작업을 수행해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1c30404658bd31cd20bc5c1bc6d71f1b96198591" translate="yes" xml:space="preserve">
          <source>In normal browsers, web pages usually run in a sandboxed environment and are not allowed access to native resources. Electron users, however, have the power to use Node.js APIs in web pages allowing lower level operating system interactions.</source>
          <target state="translated">일반 브라우저에서 웹 페이지는 일반적으로 샌드 박스 환경에서 실행되며 기본 리소스에 액세스 할 수 없습니다. 그러나 전자 사용자는 웹 페이지에서 Node.js API를 사용하여 더 낮은 수준의 운영 체제 상호 작용을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fc60981dde25a35adbe4ec9983a99588cfe1f9d" translate="yes" xml:space="preserve">
          <source>In opposition to traditional UWP apps, packaged apps currently need to undergo a manual verification process, for which you can apply &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/projects/campaigns/desktop-bridge&quot;&gt;here&lt;/a&gt;. In the meantime, all users will be able to install your package by double-clicking it, so a submission to the store might not be necessary if you're looking for an easier installation method. In managed environments (usually enterprises), the &lt;code&gt;Add-AppxPackage&lt;/code&gt;&lt;a href=&quot;https://technet.microsoft.com/en-us/library/hh856048.aspx&quot;&gt;PowerShell Cmdlet can be used to install it in an automated fashion&lt;/a&gt;.</source>
          <target state="translated">기존 UWP 앱과 달리 패키지 앱은 현재 수동 확인 프로세스를 거쳐야하며 &lt;a href=&quot;https://developer.microsoft.com/en-us/windows/projects/campaigns/desktop-bridge&quot;&gt;여기에서&lt;/a&gt; 신청할 수 있습니다 . 그 동안 모든 사용자가 패키지를 두 번 클릭하여 패키지를 설치할 수 있으므로보다 쉬운 설치 방법을 찾고 있다면 상점에 제출하지 않아도됩니다. 관리되는 환경 (일반적으로 기업)에서 &lt;code&gt;Add-AppxPackage&lt;/code&gt; &lt;a href=&quot;https://technet.microsoft.com/en-us/library/hh856048.aspx&quot;&gt;PowerShell Cmdlet을 사용하여 자동화 된 방식으로 설치할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="17b33efa1e685afd83e922c98be3ad7481f7164a" translate="yes" xml:space="preserve">
          <source>In order for extra notification buttons to work on macOS your app must meet the following criteria.</source>
          <target state="translated">macOS에서 추가 알림 단추가 작동하려면 앱이 다음 기준을 충족해야합니다.</target>
        </trans-unit>
        <trans-unit id="f6e38a957812e9a29ac5c2d2a05f0c16dc841b4a" translate="yes" xml:space="preserve">
          <source>In order to avoid the complexity of building all of Chromium, Electron uses &lt;a href=&quot;https://github.com/electron/libchromiumcontent&quot;&gt;&lt;code&gt;libchromiumcontent&lt;/code&gt;&lt;/a&gt; to access Chromium's Content API. &lt;code&gt;libchromiumcontent&lt;/code&gt; is a single shared library that includes the Chromium Content module and all of its dependencies. Users don't need a powerful machine to build Electron.</source>
          <target state="translated">Electron은 모든 Chromium을 구축하는 복잡성을 피하기 위해 &lt;a href=&quot;https://github.com/electron/libchromiumcontent&quot;&gt; &lt;code&gt;libchromiumcontent&lt;/code&gt; &lt;/a&gt; 를 사용 하여 Chromium의 Content API에 액세스합니다. &lt;code&gt;libchromiumcontent&lt;/code&gt; 는 Chromium Content 모듈 및 모든 해당 종속성을 포함하는 단일 공유 라이브러리입니다. 사용자는 Electron을 구축하기 위해 강력한 기계가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="002692fd3df32049bef10d52e5d3b2dc239a4e1a" translate="yes" xml:space="preserve">
          <source>In order to be able to use this feature on Windows, your application has to be registered as a handler of the file type of the document, otherwise the file won't appear in JumpList even after you have added it. You can find everything on registering your application in &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc144104(VS.85).aspx&quot;&gt;Application Registration&lt;/a&gt;.</source>
          <target state="translated">Windows에서이 기능을 사용하려면 응용 프로그램을 문서 파일 형식의 처리기로 등록해야합니다. 그렇지 않으면 파일을 추가 한 후에도 파일이 JumpList에 나타나지 않습니다. &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/cc144104(VS.85).aspx&quot;&gt;응용 프로그램 등록&lt;/a&gt; 에서 모든 응용 프로그램 등록 에 대한 정보를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6017616527bbb59b4e2288b1e97e6e007923f3e5" translate="yes" xml:space="preserve">
          <source>In order to keep Electron small (file size) and sustainable (the spread of dependencies and APIs) the project limits the scope of the core project.</source>
          <target state="translated">Electron을 작게 (파일 크기) 유지하고 지속 가능 (종속성 및 API의 확산)을 유지하기 위해 프로젝트는 핵심 프로젝트의 범위를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="9e93969c6ab6312de3ab1b1363ee597f5e3607f7" translate="yes" xml:space="preserve">
          <source>In order to land, a pull request needs to be reviewed and approved by at least one Electron Code Owner and pass CI. After that, if there are no objections from other contributors, the pull request can be merged.</source>
          <target state="translated">착륙하기 위해서는 최소 한 명의 전자 코드 소유자가 풀 요청을 검토하고 승인하고 CI를 통과해야합니다. 그런 다음 다른 기고자로부터 이의가 없으면 풀 요청을 병합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5038620daa1de28b5745b004ae182c0ced6a13fd" translate="yes" xml:space="preserve">
          <source>In order to run your package, your users will need Windows 10 with the so-called &quot;Anniversary Update&quot; - details on how to update Windows can be found &lt;a href=&quot;https://blogs.windows.com/windowsexperience/2016/08/02/how-to-get-the-windows-10-anniversary-update&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">패키지를 실행하려면 사용자에게 소위 &quot;기념일 업데이트&quot;가 포함 된 Windows 10이 필요합니다. Windows 업데이트 방법에 대한 자세한 내용은 &lt;a href=&quot;https://blogs.windows.com/windowsexperience/2016/08/02/how-to-get-the-windows-10-anniversary-update&quot;&gt;여기를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e6c6f45a1b0186062309a1e7bd6d2d0cdccc0365" translate="yes" xml:space="preserve">
          <source>In order to satisfy all requirements for app sandboxing, the following modules have been disabled in the MAS build:</source>
          <target state="translated">앱 샌드 박싱에 대한 모든 요구 사항을 충족하기 위해 MAS 빌드에서 다음 모듈이 비활성화되었습니다.</target>
        </trans-unit>
        <trans-unit id="2aa9e4b60cc508d244b171006423246637a0b33f" translate="yes" xml:space="preserve">
          <source>In other words, when the sandbox is enabled, the renderers can only make changes to the system by delegating tasks to the main process via IPC. &lt;a href=&quot;https://www.chromium.org/developers/design-documents/sandbox&quot;&gt;Here's&lt;/a&gt; more information about the sandbox.</source>
          <target state="translated">즉, 샌드 박스가 활성화되면 렌더러는 IPC를 통해 작업을 주 프로세스에 위임하여 시스템을 변경할 수만 있습니다. 샌드 박스에 대한 자세한 내용은 &lt;a href=&quot;https://www.chromium.org/developers/design-documents/sandbox&quot;&gt;다음과 같습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="add54ea319b290d6512f35724ac20b939ad3c263" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;release&lt;/code&gt; branch, verify that the release's files have been created:</source>
          <target state="translated">에서 &lt;code&gt;release&lt;/code&gt; 지점, 릴리스의 파일이 생성되었는지 확인합니다 :</target>
        </trans-unit>
        <trans-unit id="af7489da9de75d590f13f01cdc9c2b48b8b1b424" translate="yes" xml:space="preserve">
          <source>In the above code the &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; that was created has node.js disabled and can communicate only via IPC. The use of this option stops electron from creating a node.js runtime in the renderer. Also, within this new window &lt;code&gt;window.open&lt;/code&gt; follows the native behaviour (by default electron creates a &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; and returns a proxy to this via &lt;code&gt;window.open&lt;/code&gt;).</source>
          <target state="translated">위 코드에서 생성 된 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; 는 node.js가 비활성화되어 있으며 IPC를 통해서만 통신 할 수 있습니다. 이 옵션을 사용하면 전자가 렌더러에서 node.js 런타임을 작성하지 못하게됩니다. 또한이 새 창 &lt;code&gt;window.open&lt;/code&gt; 내 에서 기본 동작을 따릅니다 (기본적으로 전자는 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; 를&lt;/a&gt; 만들고 &lt;code&gt;window.open&lt;/code&gt; 통해 프록시를 반환합니다 ).</target>
        </trans-unit>
        <trans-unit id="dd8a333887f050bcaedb3788895a13b656bcd030" translate="yes" xml:space="preserve">
          <source>In the app, you'd need to write a simple handler for the RPC calls:</source>
          <target state="translated">앱에서 RPC 호출을위한 간단한 핸들러를 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="8caa74ae2f7b42454248de05b842fae89740cc2b" translate="yes" xml:space="preserve">
          <source>In the browser window some HTML APIs like &lt;code&gt;requestFullScreen&lt;/code&gt; can only be invoked by a gesture from the user. Setting &lt;code&gt;userGesture&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; will remove this limitation.</source>
          <target state="translated">브라우저 창에서 &lt;code&gt;requestFullScreen&lt;/code&gt; 과 같은 일부 HTML API 는 사용자의 제스처로만 호출 할 수 있습니다. &lt;code&gt;userGesture&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정하면 이 제한이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="db52ca544e2d57543b2ade9a5da326a4317aad0a" translate="yes" xml:space="preserve">
          <source>In the case of a corrupted release with broken CI machines, we might have to re-upload the binaries for an already published release.</source>
          <target state="translated">CI 시스템이 손상된 손상된 릴리스의 경우 이미 게시 된 릴리스의 바이너리를 다시 업로드해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b49bd272eea5595d87ad5e2fe5c9c9b77041719c" translate="yes" xml:space="preserve">
          <source>In the example above, both &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;win&lt;/code&gt; were remote objects and &lt;code&gt;new BrowserWindow&lt;/code&gt; didn't create a &lt;code&gt;BrowserWindow&lt;/code&gt; object in the renderer process. Instead, it created a &lt;code&gt;BrowserWindow&lt;/code&gt; object in the main process and returned the corresponding remote object in the renderer process, namely the &lt;code&gt;win&lt;/code&gt; object.</source>
          <target state="translated">위의 예제에서 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; 와 &lt;code&gt;win&lt;/code&gt; 은 모두 원격 객체였으며 &lt;code&gt;new BrowserWindow&lt;/code&gt; 는 렌더러 프로세스에서 &lt;code&gt;BrowserWindow&lt;/code&gt; 객체를 만들지 않았습니다 . 대신 기본 프로세스에서 &lt;code&gt;BrowserWindow&lt;/code&gt; 객체를 만들고 렌더러 프로세스에서 해당 원격 객체, 즉 &lt;code&gt;win&lt;/code&gt; 객체를 반환했습니다 .</target>
        </trans-unit>
        <trans-unit id="5074e68733d141bd5c5268004d80f2dacb17e13e" translate="yes" xml:space="preserve">
          <source>In the following example preload script, the later loaded website will have access to a &lt;code&gt;window.readConfig()&lt;/code&gt; method, but no Node.js features.</source>
          <target state="translated">다음 예제 사전로드 스크립트에서 나중에로드 된 웹 사이트는 &lt;code&gt;window.readConfig()&lt;/code&gt; 메소드에 액세스 할 수 있지만 Node.js 기능은 없습니다.</target>
        </trans-unit>
        <trans-unit id="51b18288d03cd733f92b99f7141ed513739578d6" translate="yes" xml:space="preserve">
          <source>In the testing framework Spectron, you can now audit each window and &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; tag in your application. For example:</source>
          <target state="translated">테스트 프레임 워크 Spectron에서 이제 응용 프로그램의 각 창과 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 태그를 감사 할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1afa241f36d4217397dfec694d2d1215891c4684" translate="yes" xml:space="preserve">
          <source>In web pages, calling native GUI related APIs is not allowed because managing native GUI resources in web pages is very dangerous and it is easy to leak resources. If you want to perform GUI operations in a web page, the renderer process of the web page must communicate with the main process to request that the main process perform those operations.</source>
          <target state="translated">웹 페이지에서 네이티브 GUI 관련 API를 호출하는 것은 허용되지 않습니다. 웹 페이지에서 네이티브 GUI 리소스를 관리하는 것은 매우 위험하고 리소스를 유출하기 쉽습니다. 웹 페이지에서 GUI 작업을 수행하려면 웹 페이지의 렌더러 프로세스가 기본 프로세스와 통신하여 기본 프로세스가 해당 작업을 수행하도록 요청해야합니다.</target>
        </trans-unit>
        <trans-unit id="c4d0e6c3e076cd6a699c60ad2b55fac7991337f3" translate="yes" xml:space="preserve">
          <source>In your renderer process, handle the &lt;code&gt;ondragstart&lt;/code&gt; event and forward the information to your main process.</source>
          <target state="translated">렌더러 프로세스에서 &lt;code&gt;ondragstart&lt;/code&gt; 이벤트를 처리 하고 정보를 기본 프로세스로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="fdaff53585816691fa4fe5c4dfd5b6e20360de51" translate="yes" xml:space="preserve">
          <source>In-App Purchase (macOS)</source>
          <target state="translated">인앱 구매 (macOS)</target>
        </trans-unit>
        <trans-unit id="fcd33c35409267d26cf472bd170c7b44220760a0" translate="yes" xml:space="preserve">
          <source>In-app purchases on Mac App Store.</source>
          <target state="translated">Mac App Store에서 인앱 구매.</target>
        </trans-unit>
        <trans-unit id="01b9ecc39af8da56d7570c19b704feba4523b1b2" translate="yes" xml:space="preserve">
          <source>IncomingMessage</source>
          <target state="translated">IncomingMessage</target>
        </trans-unit>
        <trans-unit id="13e9abca83628630f255579050b5c29afcf1c1f8" translate="yes" xml:space="preserve">
          <source>Indicates that response body has ended.</source>
          <target state="translated">응답 본문이 종료되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2339b8ad3625abec50c5fec9ccfe1b4c0adb5b6e" translate="yes" xml:space="preserve">
          <source>Indonesian</source>
          <target state="translated">Indonesian</target>
        </trans-unit>
        <trans-unit id="56476d27ce24389481bda3f5413b884651cdc573" translate="yes" xml:space="preserve">
          <source>Initiates a download of the resource at &lt;code&gt;url&lt;/code&gt; without navigating. The &lt;code&gt;will-download&lt;/code&gt; event of &lt;code&gt;session&lt;/code&gt; will be triggered.</source>
          <target state="translated">탐색하지 않고 &lt;code&gt;url&lt;/code&gt; 에서 리소스 다운로드를 시작합니다 . &lt;code&gt;session&lt;/code&gt; 의 &lt;code&gt;will-download&lt;/code&gt; 이벤트 가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="f0dfd5f0e298aa47a48b7d8cbced854e9d4e2a6d" translate="yes" xml:space="preserve">
          <source>Injects CSS into the current web page.</source>
          <target state="translated">현재 웹 페이지에 CSS를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="b7e359bfdb20491c11d50453bcef336f0fdfbaf1" translate="yes" xml:space="preserve">
          <source>Injects CSS into the guest page.</source>
          <target state="translated">게스트 페이지에 CSS를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="0c476f7fcf5175b2a06fb617a213f4c2f93acbb8" translate="yes" xml:space="preserve">
          <source>Input Method Editor. A program that allows users to enter characters and symbols not found on their keyboard. For example, this allows users of Latin keyboards to input Chinese, Japanese, Korean and Indic characters.</source>
          <target state="translated">입력기 편집기. 사용자가 키보드에서 찾을 수없는 문자와 기호를 입력 할 수있는 프로그램입니다. 예를 들어 라틴 키보드 사용자는 중국어, 일본어, 한국어 및 인도 문자를 입력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24599b3c6ab1eb1b9bce61098d2b77a02aba0f64" translate="yes" xml:space="preserve">
          <source>Inserts &lt;code&gt;text&lt;/code&gt; to the focused element.</source>
          <target state="translated">포커스가있는 요소에 &lt;code&gt;text&lt;/code&gt; 를 삽입합니다 .</target>
        </trans-unit>
        <trans-unit id="d8520f87c739aa4e579f6880a74b33685e460efb" translate="yes" xml:space="preserve">
          <source>Inserts the &lt;code&gt;menuItem&lt;/code&gt; to the &lt;code&gt;pos&lt;/code&gt; position of the menu.</source>
          <target state="translated">&lt;code&gt;menuItem&lt;/code&gt; 을 메뉴 의 &lt;code&gt;pos&lt;/code&gt; 위치에 삽입 합니다.</target>
        </trans-unit>
        <trans-unit id="b18ed5b223e999f64c1ccaea33926bea7922e4c2" translate="yes" xml:space="preserve">
          <source>Inside Application</source>
          <target state="translated">내부 응용</target>
        </trans-unit>
        <trans-unit id="67efb1af030003bc2e370e914ca924f2de6b7ff4" translate="yes" xml:space="preserve">
          <source>Inspect Node &lt;a href=&quot;https://github.com/electron/node&quot;&gt;repo&lt;/a&gt; to see what patches upstream Node used with their v8 after bumping its version</source>
          <target state="translated">노드 &lt;a href=&quot;https://github.com/electron/node&quot;&gt;리포지토리&lt;/a&gt; 를 검사 하여 업스트림 노드가 v8에 어떤 패치를 사용했는지 확인한 후</target>
        </trans-unit>
        <trans-unit id="a092085f2c9866b83b7573ea43eba27961c12c78" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install&quot;&gt;depot_tools&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install&quot;&gt;depot_tools&lt;/a&gt; 설치</target>
        </trans-unit>
        <trans-unit id="9ddc5636813d8d39f423ad830592f346531bb89f" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install-additional-build-dependencies&quot;&gt;additional build dependencies&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/linux_build_instructions.md#Install-additional-build-dependencies&quot;&gt;추가 빌드 종속성&lt;/a&gt; 설치</target>
        </trans-unit>
        <trans-unit id="c751bdc0defb0bcc2e0fb38801b511d7b20b126b" translate="yes" xml:space="preserve">
          <source>Install &lt;a href=&quot;https://github.com/surf-build/surf&quot;&gt;Surf&lt;/a&gt;, via npm: &lt;code&gt;npm install -g surf-build@latest&lt;/code&gt;</source>
          <target state="translated">npm을 통해 &lt;a href=&quot;https://github.com/surf-build/surf&quot;&gt;Surf&lt;/a&gt; 설치 : &lt;code&gt;npm install -g surf-build@latest&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af7e1eda11eb3ba6c4a6534ba4973cba0e85d446" translate="yes" xml:space="preserve">
          <source>Install Electron via &lt;code&gt;npm install electron&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;npm install electron&lt;/code&gt; 을 통해 Electron 설치</target>
        </trans-unit>
        <trans-unit id="59def4f4c416f5ec11a55b89f42f9c04dda49d4c" translate="yes" xml:space="preserve">
          <source>Install Visual Studio 2015/2017 (to get the signing utility)</source>
          <target state="translated">서명 유틸리티를 얻으려면 Visual Studio 2015/2017을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="b0a08fb068315f0e1c7ff6b9951586a86d940581" translate="yes" xml:space="preserve">
          <source>Install it in Chrome browser.</source>
          <target state="translated">Chrome 브라우저에 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="c1cf7ea58fe26587ea330bcf3383edd9081a470a" translate="yes" xml:space="preserve">
          <source>Install the module:</source>
          <target state="translated">모듈을 설치하십시오 :</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="49badac7f3152085c3ccdfbd4aec9ad26474d44b" translate="yes" xml:space="preserve">
          <source>Installing Electron</source>
          <target state="translated">전자 설치</target>
        </trans-unit>
        <trans-unit id="01530047c3eb49aada2802a1ac3a4c313f6cdb3e" translate="yes" xml:space="preserve">
          <source>Installing modules and rebuilding for Electron</source>
          <target state="translated">Electron을위한 모듈 설치 및 재 구축</target>
        </trans-unit>
        <trans-unit id="93e1f66298d41be94ea2442fc257bf8bcd4c056b" translate="yes" xml:space="preserve">
          <source>Instance Events</source>
          <target state="translated">인스턴스 이벤트</target>
        </trans-unit>
        <trans-unit id="dd4a61ab3dc44ab9b5a205303724a68f74a735a7" translate="yes" xml:space="preserve">
          <source>Instance Methods</source>
          <target state="translated">인스턴스 메소드</target>
        </trans-unit>
        <trans-unit id="227bff69876b172aeee6752f9b003b6b9627ce6c" translate="yes" xml:space="preserve">
          <source>Instance Properties</source>
          <target state="translated">인스턴스 속성</target>
        </trans-unit>
        <trans-unit id="8362b73eb793173f5bd3a1f478b69e06eecb033b" translate="yes" xml:space="preserve">
          <source>Instance methods and properties</source>
          <target state="translated">인스턴스 메소드 및 속성</target>
        </trans-unit>
        <trans-unit id="20d33549668c4d09ea6ef7d6c02f07fdfb9c25a1" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;code&gt;Cookies&lt;/code&gt; class are accessed by using &lt;code&gt;cookies&lt;/code&gt; property of a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cookies&lt;/code&gt; 클래스의 인스턴스는 &lt;code&gt;Session&lt;/code&gt; 의 &lt;code&gt;cookies&lt;/code&gt; 속성을 사용하여 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="ba9374c6843f9596e1f6431ed4d21e4162f669de" translate="yes" xml:space="preserve">
          <source>Instances of the &lt;code&gt;WebRequest&lt;/code&gt; class are accessed by using the &lt;code&gt;webRequest&lt;/code&gt; property of a &lt;code&gt;Session&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WebRequest&lt;/code&gt; 클래스의 인스턴스는 &lt;code&gt;Session&lt;/code&gt; 의 &lt;code&gt;webRequest&lt;/code&gt; 속성을 사용하여 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="16270f869f551f34445155955c881cfa37616466" translate="yes" xml:space="preserve">
          <source>Instructs Electron to bypass the proxy server for the given semi-colon-separated list of hosts. This flag has an effect only if used in tandem with &lt;code&gt;--proxy-server&lt;/code&gt;.</source>
          <target state="translated">주어진 세미콜론으로 구분 된 호스트 목록에 대해 프록시 서버를 무시하도록 Electron에 지시합니다. 이 플래그는 &lt;code&gt;--proxy-server&lt;/code&gt; 와 함께 사용하는 경우에만 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d6d2d7b468b24a48b35ded8843a5bd10903effd" translate="yes" xml:space="preserve">
          <source>Intercept and modify the contents of a request at various stages of its lifetime.</source>
          <target state="translated">수명주기의 다양한 단계에서 요청 내용을 가로 채고 수정합니다.</target>
        </trans-unit>
        <trans-unit id="ee6f75429405860b71bcefde477ecaf5969a2348" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a &lt;code&gt;Buffer&lt;/code&gt; as a response.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; 프로토콜을 가로 채고 &lt;code&gt;handler&lt;/code&gt; 를 프로토콜의 새로운 처리기로 사용하여 &lt;code&gt;Buffer&lt;/code&gt; 를 응답으로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="be11c9050ebdb78d8293caf5907f221e92288ad5" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a &lt;code&gt;String&lt;/code&gt; as a response.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; 프로토콜을 가로 채고 &lt;code&gt;handler&lt;/code&gt; 를 프로토콜의 새로운 처리기로 사용하여 &lt;code&gt;String&lt;/code&gt; 을 응답으로 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="637ab926f95aaf76690f739533e2ba5eb9714a4e" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a file as a response.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; 프로토콜을 가로 채고 &lt;code&gt;handler&lt;/code&gt; 를 프로토콜의 새 핸들러로 사용하여 파일을 응답으로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="c92f450a734d695eb0e09f842f66dc4c08221e1d" translate="yes" xml:space="preserve">
          <source>Intercepts &lt;code&gt;scheme&lt;/code&gt; protocol and uses &lt;code&gt;handler&lt;/code&gt; as the protocol's new handler which sends a new HTTP request as a response.</source>
          <target state="translated">&lt;code&gt;scheme&lt;/code&gt; 프로토콜을 가로 채고 handler를 새로운 HTTP 요청을 응답으로 보내는 프로토콜의 새로운 &lt;code&gt;handler&lt;/code&gt; 로 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="afee89207b5b63f5ec244d5599398760f821a96d" translate="yes" xml:space="preserve">
          <source>Interface description language. Write function signatures and data types in a format that can be used to generate interfaces in Java, C++, JavaScript, etc.</source>
          <target state="translated">인터페이스 설명 언어. Java, C ++, JavaScript 등의 인터페이스를 생성하는 데 사용할 수있는 형식으로 함수 서명 및 데이터 유형을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="06fac3d23961645b440211045f3413e391d15637" translate="yes" xml:space="preserve">
          <source>Interlingua</source>
          <target state="translated">Interlingua</target>
        </trans-unit>
        <trans-unit id="2b7835ef37ebd3e0fc33cd0b04741ea8f2f7dedf" translate="yes" xml:space="preserve">
          <source>Introduction of &lt;a href=&quot;https://conventionalcommits.org/&quot;&gt;conventional commit messages&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://conventionalcommits.org/&quot;&gt;기존 커밋 메시지&lt;/a&gt; 소개</target>
        </trans-unit>
        <trans-unit id="41573236e6fbc505575a3621ccf0f5fca3ab0ac6" translate="yes" xml:space="preserve">
          <source>Introduction of semver-compliant &lt;code&gt;-beta&lt;/code&gt; tags</source>
          <target state="translated">semver 준수의 소개 &lt;code&gt;-beta&lt;/code&gt; 태그</target>
        </trans-unit>
        <trans-unit id="c9bc3dddf21efcfe1e523f2f2860c73024488699" translate="yes" xml:space="preserve">
          <source>Invalidates the current &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;Handoff&lt;/a&gt; user activity.</source>
          <target state="translated">현재 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/Handoff/HandoffFundamentals/HandoffFundamentals.html&quot;&gt;핸드 오프&lt;/a&gt; 사용자 활동을 무효화합니다 .</target>
        </trans-unit>
        <trans-unit id="8b99998c625d0b440d99f2fb14b8c59a1c9c7445" translate="yes" xml:space="preserve">
          <source>Invoke the updater from your app's main process file:</source>
          <target state="translated">앱의 기본 프로세스 파일에서 업데이터를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="98e37149c6765bae15ead855a09f4ad812f8e179" translate="yes" xml:space="preserve">
          <source>Invokes the print dialog on the child window.</source>
          <target state="translated">자식 창에서 인쇄 대화 상자를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="2bddaea174340270be5a83fe7aed2e32aa628eba" translate="yes" xml:space="preserve">
          <source>Irish</source>
          <target state="translated">Irish</target>
        </trans-unit>
        <trans-unit id="3a83c1973a29789e42e9e79148e2ce42769de102" translate="yes" xml:space="preserve">
          <source>Issue HTTP/HTTPS requests using Chromium's native networking library</source>
          <target state="translated">Chromium의 기본 네트워킹 라이브러리를 사용하여 HTTP / HTTPS 요청 발행</target>
        </trans-unit>
        <trans-unit id="30ce4cb25faae86427d8ac22e8f50a0a74f3f393" translate="yes" xml:space="preserve">
          <source>Issues</source>
          <target state="translated">Issues</target>
        </trans-unit>
        <trans-unit id="6cd8dd2ee0aacb1c1c58c1806551c4e2b82b59a5" translate="yes" xml:space="preserve">
          <source>Issues In Electron</source>
          <target state="translated">전자 문제</target>
        </trans-unit>
        <trans-unit id="71df46d765d8779ff3c19865c5451195c37e4d80" translate="yes" xml:space="preserve">
          <source>It can be used by the preload script to add removed Node global symbols back to the global scope when node integration is turned off:</source>
          <target state="translated">노드 통합이 해제 된 경우 사전로드 스크립트에서이를 사용하여 제거 된 노드 글로벌 기호를 글로벌 범위에 다시 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5496611a4bb2d2ad0c6f82becb4734760e9dc457" translate="yes" xml:space="preserve">
          <source>It creates a new &lt;code&gt;BrowserWindow&lt;/code&gt; with native properties as set by the &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 에서 설정 한 기본 속성으로 새 &lt;code&gt;BrowserWindow&lt;/code&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="7391d87c0a1a2fe7c0ab00835f38a129f96ed5e0" translate="yes" xml:space="preserve">
          <source>It creates a new &lt;code&gt;Notification&lt;/code&gt; with native properties as set by the &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 으로 설정된 고유 속성으로 새 &lt;code&gt;Notification&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="9172bf0f438712c9c3dd7ca8795d16a4bee8eaa8" translate="yes" xml:space="preserve">
          <source>It has since become a popular tool used by open source developers, startups, and established companies. &lt;a href=&quot;https://electronjs.org/apps&quot;&gt;See who is building on Electron&lt;/a&gt;.</source>
          <target state="translated">이후 오픈 소스 개발자, 신생 기업 및 기존 회사에서 널리 사용되는 도구가되었습니다. &lt;a href=&quot;https://electronjs.org/apps&quot;&gt;Electron에서 누가 구축하고 있는지 확인하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0f85d3bf8bcd7441256bc10040e9eefdc09d6b25" translate="yes" xml:space="preserve">
          <source>It is a good idea to control the creation of new &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;WebViews&lt;/code&gt;&lt;/a&gt; from the main process and to verify that their webPreferences do not disable security features.</source>
          <target state="translated">기본 프로세스에서 새 &lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;WebViews&lt;/code&gt; &lt;/a&gt; 작성을 제어하고 해당 webPreferences가 보안 기능을 사용하지 않는지 확인하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="964da9fea4bbafe96ef1db6a86f52b43e7414473" translate="yes" xml:space="preserve">
          <source>It is acceptable for some commits in a pull request to not include a semantic prefix, as long as a later commit in the same pull request contains a meaningful encompassing semantic message.</source>
          <target state="translated">동일한 풀 요청의 이후의 커밋에 의미있는 포괄적 인 의미 론적 메시지가 포함되어있는 경우, 풀 요청의 일부 커밋이 시맨틱 접두사를 포함하지 않는 것이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="6513c3b2261075b5414276dd4b7c570732e84c37" translate="yes" xml:space="preserve">
          <source>It is also not emitted during in-page navigation, such as clicking anchor links or updating the &lt;code&gt;window.location.hash&lt;/code&gt;. Use &lt;code&gt;did-navigate-in-page&lt;/code&gt; event for this purpose.</source>
          <target state="translated">앵커 링크 클릭 또는 &lt;code&gt;window.location.hash&lt;/code&gt; 업데이트와 같은 인 페이지 탐색 중에도 생성되지 않습니다 . 사용은 &lt;code&gt;did-navigate-in-page&lt;/code&gt; 이 목적을 위해 이벤트를.</target>
        </trans-unit>
        <trans-unit id="3c815f956f73b5874b39eadfd911308e44d74e4a" translate="yes" xml:space="preserve">
          <source>It is also not emitted for in-page navigations, such as clicking anchor links or updating the &lt;code&gt;window.location.hash&lt;/code&gt;. Use &lt;code&gt;did-navigate-in-page&lt;/code&gt; event for this purpose.</source>
          <target state="translated">앵커 링크 클릭 또는 &lt;code&gt;window.location.hash&lt;/code&gt; 업데이트와 같은 인 페이지 내비게이션에서도 생성되지 않습니다 . 사용은 &lt;code&gt;did-navigate-in-page&lt;/code&gt; 이 목적을 위해 이벤트를.</target>
        </trans-unit>
        <trans-unit id="f8da655fcd87f5210eafad0aaf91c55a5fb6c0b3" translate="yes" xml:space="preserve">
          <source>It is also possible to rebrand Electron by changing the product name and building it from source. To do this you need to modify the &lt;code&gt;atom.gyp&lt;/code&gt; file and have a clean rebuild.</source>
          <target state="translated">제품 이름을 변경하고 소스에서 빌드하여 Electron의 브랜드를 변경할 수도 있습니다. 이렇게하려면 &lt;code&gt;atom.gyp&lt;/code&gt; 파일 을 수정하고 새로 빌드해야합니다.</target>
        </trans-unit>
        <trans-unit id="4b32930b704c36912af4b6b8a8b75fd0314d1679" translate="yes" xml:space="preserve">
          <source>It is also possible to send messages from the main process to the renderer process, see &lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; for more information.</source>
          <target state="translated">기본 프로세스에서 렌더러 프로세스로 메시지를 보낼 수도 있습니다 . 자세한 내용 은 &lt;a href=&quot;web-contents#webcontentssendchannel-arg1-arg2-&quot;&gt;webContents.send&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0b91cede13154f320e8b22c673ef890bdace73b6" translate="yes" xml:space="preserve">
          <source>It is best to specify &lt;code&gt;role&lt;/code&gt; for any menu item that matches a standard role, rather than trying to manually implement the behavior in a &lt;code&gt;click&lt;/code&gt; function. The built-in &lt;code&gt;role&lt;/code&gt; behavior will give the best native experience.</source>
          <target state="translated">&lt;code&gt;click&lt;/code&gt; 기능 에서 동작을 수동으로 구현하지 않고 표준 역할과 일치하는 모든 메뉴 항목에 대한 &lt;code&gt;role&lt;/code&gt; 을 지정하는 것이 가장 좋습니다 . 기본 제공 &lt;code&gt;role&lt;/code&gt; 동작은 최상의 기본 경험을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="70390302435eeaafda262133a9e687cdd3b70aea" translate="yes" xml:space="preserve">
          <source>It is highly recommended to format your changed C++ code before opening pull requests, which will save you and the reviewers' time.</source>
          <target state="translated">풀 요청을 열기 전에 변경된 C ++ 코드를 포맷하여 사용자와 검토 자의 시간을 절약하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="7830172c1d0f8fe69e4f504337f2d2af361b31bd" translate="yes" xml:space="preserve">
          <source>It is important to note that this option alone won't enable the OS-enforced sandbox. To enable this feature, the &lt;code&gt;--enable-sandbox&lt;/code&gt; command-line argument must be passed to electron, which will force &lt;code&gt;sandbox: true&lt;/code&gt; for all &lt;code&gt;BrowserWindow&lt;/code&gt; instances.</source>
          <target state="translated">이 옵션만으로는 OS 적용 샌드 박스를 사용할 수 없습니다. 이 기능을 사용하려면 &lt;code&gt;--enable-sandbox&lt;/code&gt; 명령 줄 인수를 전자에 전달해야합니다 . &lt;code&gt;BrowserWindow&lt;/code&gt; 모든 BrowserWindow 인스턴스에 대해 &lt;code&gt;sandbox: true&lt;/code&gt; 가됩니다 .</target>
        </trans-unit>
        <trans-unit id="06b0757ae0de67fc7189e624df8530d408b9ad1e" translate="yes" xml:space="preserve">
          <source>It is not possible to have the OS sandbox active only for some renderers, if &lt;code&gt;--enable-sandbox&lt;/code&gt; is enabled, normal electron windows cannot be created.</source>
          <target state="translated">일부 렌더러에 대해서만 OS 샌드 박스를 활성화 할 수 없습니다. &lt;code&gt;--enable-sandbox&lt;/code&gt; 를 활성화하면 일반 전자 창을 만들 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="26eccb2be6647f437eee41fc998f1735f2fdfb59" translate="yes" xml:space="preserve">
          <source>It is paramount that you disable Node.js integration in any renderer (&lt;a href=&quot;../api/browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../api/browser-view&quot;&gt;&lt;code&gt;BrowserView&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../api/web-view&quot;&gt;&lt;code&gt;WebView&lt;/code&gt;&lt;/a&gt;) that loads remote content. The goal is to limit the powers you grant to remote content, thus making it dramatically more difficult for an attacker to harm your users should they gain the ability to execute JavaScript on your website.</source>
          <target state="translated">원격 컨텐츠를로드 하는 렌더러 ( &lt;a href=&quot;../api/browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../api/browser-view&quot;&gt; &lt;code&gt;BrowserView&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../api/web-view&quot;&gt; &lt;code&gt;WebView&lt;/code&gt; &lt;/a&gt; ) 에서 Node.js 통합을 사용하지 않는 것이 가장 중요합니다 . 목표는 원격 콘텐츠에 부여하는 권한을 제한하여 공격자가 웹 사이트에서 JavaScript를 실행할 수있는 능력을 얻는 사용자에게 해를 입히는 것을 더욱 어렵게 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="199273e0544a82108bdacc659f2b6ad6ccf8c086" translate="yes" xml:space="preserve">
          <source>It is possible to debug Chromium with Electron by passing &lt;code&gt;--build_debug_libcc&lt;/code&gt; to the bootstrap script:</source>
          <target state="translated">부트 스트랩 스크립트에 &lt;code&gt;--build_debug_libcc&lt;/code&gt; 를 전달하여 Electron으로 Chromium을 디버깅 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="89660d837d9b5fa4be0177ad642c3c4194a2b505" translate="yes" xml:space="preserve">
          <source>It is possible to pass any object that implements the readable stream API (emits &lt;code&gt;data&lt;/code&gt;/&lt;code&gt;end&lt;/code&gt;/&lt;code&gt;error&lt;/code&gt; events). For example, here's how a file could be returned:</source>
          <target state="translated">읽을 수있는 스트림 API를 구현하는 모든 객체를 전달할 수 있습니다 ( &lt;code&gt;data&lt;/code&gt; / &lt;code&gt;end&lt;/code&gt; / &lt;code&gt;error&lt;/code&gt; 이벤트 발생). 예를 들어 파일을 반환하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e711e87900ad11545fe6d11f0b1dd6baa4c2a7bf" translate="yes" xml:space="preserve">
          <source>It is possible to share this directory with other machines by exporting it as SMB share on linux, but only one process/machine can be using the cache at a time. The locks created by git-cache script will try to prevent this, but it may not work perfectly in a network.</source>
          <target state="translated">Linux에서 SMB 공유로 내 보내서이 디렉토리를 다른 컴퓨터와 공유 할 수 있지만 한 번에 하나의 프로세스 / 기계 만 캐시를 사용할 수 있습니다. git-cache 스크립트로 작성된 잠금은이를 방지하려고 시도하지만 네트워크에서 완벽하게 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="729b1792b3971af4760afa3ec670d4bd463f68ae" translate="yes" xml:space="preserve">
          <source>It is possible to use Node.js features in Electron's Web Workers, to do so the &lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; option should be set to &lt;code&gt;true&lt;/code&gt; in &lt;code&gt;webPreferences&lt;/code&gt;.</source>
          <target state="translated">Node.js를가 이렇게하려면 전자의 웹 노동자의 기능을 사용할 수 있습니다 &lt;code&gt;nodeIntegrationInWorker&lt;/code&gt; 의 옵션을 설정해야합니다 &lt;code&gt;true&lt;/code&gt; 에 &lt;code&gt;webPreferences&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="60e41f92d43dd7cb52a699ea13c91a702e3b522b" translate="yes" xml:space="preserve">
          <source>It is recommended that you pause expensive operations when the visibility state is &lt;code&gt;hidden&lt;/code&gt; in order to minimize power consumption.</source>
          <target state="translated">전력 소비를 최소화하기 위해 가시성 상태가 &lt;code&gt;hidden&lt;/code&gt; 있으면 값 비싼 작업을 일시 중지하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="af7b492c8cb4914e87549f09be97fa5754d25b6e" translate="yes" xml:space="preserve">
          <source>It is recommended to keep your changes grouped logically within individual commits. Many contributors find it easier to review changes that are split across multiple commits. There is no limit to the number of commits in a pull request.</source>
          <target state="translated">개별 커밋 내에서 변경 사항을 논리적으로 그룹화하는 것이 좋습니다. 많은 기고자들이 여러 커밋으로 분할 된 변경 사항을 쉽게 검토 할 수 있다고 생각합니다. 풀 요청의 커밋 수에는 제한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="e1cf52e7ed40575673e4cacbc143a8a1d2a41a19" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that the task list be static. It should remain the same regardless of the state or status of the application. While it is possible to vary the list dynamically, you should consider that this could confuse the user who does not expect that portion of the destination list to change.</source>
          <target state="translated">작업 목록은 정적 인 것이 좋습니다. 응용 프로그램의 상태 나 상태에 관계없이 동일하게 유지되어야합니다. 목록을 동적으로 변경할 수 있지만 대상 목록의 해당 부분이 변경 될 것으로 예상하지 않는 사용자를 혼동시킬 수 있다는 점을 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="06810b9a24cd224beebc872577e421af21ac01c7" translate="yes" xml:space="preserve">
          <source>It will create a &lt;code&gt;dist/main&lt;/code&gt; folder in the libcc repo's root. You will need this to build Electron.</source>
          <target state="translated">libcc 저장소의 루트에 &lt;code&gt;dist/main&lt;/code&gt; 폴더 가 생성됩니다 . Electron을 빌드하려면 이것이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3647db27602728c98ee2a2301c17868327282d6d" translate="yes" xml:space="preserve">
          <source>It will probably fail applying patches.</source>
          <target state="translated">패치를 적용하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3343764ed4d8b21d498c1a44d6f90876c8454213" translate="yes" xml:space="preserve">
          <source>It's common for open issues to involve discussion. Some contributors may have differing opinions, including whether the behavior is a bug or feature. This discussion is part of the process and should be kept focused, helpful, and professional.</source>
          <target state="translated">공개 된 이슈가 토론을하는 것이 일반적입니다. 일부 기고자들은 행동이 버그인지 기능인지를 포함하여 의견이 다를 수 있습니다. 이 토론은 프로세스의 일부이며 집중되고 도움이되고 전문적인 태도를 유지해야합니다.</target>
        </trans-unit>
        <trans-unit id="485b57adcc80650a0f376fe516e0ea35fef68007" translate="yes" xml:space="preserve">
          <source>Italian</source>
          <target state="translated">Italian</target>
        </trans-unit>
        <trans-unit id="b9bc30a5feae532b939b0112f6162a8c1d64ca9e" translate="yes" xml:space="preserve">
          <source>Italian (Italy)</source>
          <target state="translated">이탈리아어 (이탈리아)</target>
        </trans-unit>
        <trans-unit id="9b542a61893cf94c6b2aa33589915292aa185c08" translate="yes" xml:space="preserve">
          <source>Italian (Switzerland)</source>
          <target state="translated">이탈리아어 (스위스)</target>
        </trans-unit>
        <trans-unit id="9239c22d1d1c990ca8c206cb408b345a3ec8114c" translate="yes" xml:space="preserve">
          <source>Japanese</source>
          <target state="translated">Japanese</target>
        </trans-unit>
        <trans-unit id="ee620923ff5fc510555dc37083a135ee93b5404b" translate="yes" xml:space="preserve">
          <source>JavaScript</source>
          <target state="translated">JavaScript</target>
        </trans-unit>
        <trans-unit id="6910a0b5a00af25b7ba39985cfb9347d8203a0a2" translate="yes" xml:space="preserve">
          <source>JavaScript will always be disabled in the opened &lt;code&gt;window&lt;/code&gt; if it is disabled on the parent window.</source>
          <target state="translated">부모 창 에서 JavaScript를 비활성화하면 열린 &lt;code&gt;window&lt;/code&gt; 에서 JavaScript가 항상 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="4d3bb51ea74dbb54d8ffaf04425ff843127f10a5" translate="yes" xml:space="preserve">
          <source>Javanese</source>
          <target state="translated">Javanese</target>
        </trans-unit>
        <trans-unit id="a2feefe9afbc3d0f6fec53c2b390d4515e363675" translate="yes" xml:space="preserve">
          <source>Jenkins</source>
          <target state="translated">Jenkins</target>
        </trans-unit>
        <trans-unit id="2023379a50fddc81cf53bdb2ea7da27bdc589b20" translate="yes" xml:space="preserve">
          <source>JumpList</source>
          <target state="translated">JumpList</target>
        </trans-unit>
        <trans-unit id="6298a2509790f8ae562a533cfb770f6ee7778f71" translate="yes" xml:space="preserve">
          <source>JumpListCategory</source>
          <target state="translated">JumpListCategory</target>
        </trans-unit>
        <trans-unit id="0ff8418a0fc25bab796d47849f1222ead79fc898" translate="yes" xml:space="preserve">
          <source>JumpListCategory Object</source>
          <target state="translated">JumpListCategory 객체</target>
        </trans-unit>
        <trans-unit id="94afa3adf74d2a4329032ec8d8dda74daa3c70b5" translate="yes" xml:space="preserve">
          <source>JumpListItem</source>
          <target state="translated">JumpListItem</target>
        </trans-unit>
        <trans-unit id="46eed83a18817455ede51e512cb72e4bd08a77a3" translate="yes" xml:space="preserve">
          <source>JumpListItem Object</source>
          <target state="translated">JumpListItem 객체</target>
        </trans-unit>
        <trans-unit id="c3ed665577f91f82c451742a0c8875950d42b19f" translate="yes" xml:space="preserve">
          <source>Kannada</source>
          <target state="translated">Kannada</target>
        </trans-unit>
        <trans-unit id="b9fedaa07b209e1f7a9c2d83295a76fe49f3b49f" translate="yes" xml:space="preserve">
          <source>Kazakh</source>
          <target state="translated">Kazakh</target>
        </trans-unit>
        <trans-unit id="bae6d59bf391c6b00cbe84e270764a5b277dd65c" translate="yes" xml:space="preserve">
          <source>Keep the second line blank.</source>
          <target state="translated">두 번째 줄은 비워 두십시오.</target>
        </trans-unit>
        <trans-unit id="3aed4e511b017fafe9de3e6cb5aa57466d57dfaa" translate="yes" xml:space="preserve">
          <source>Keeping Git Submodules Up to Date</source>
          <target state="translated">Git 서브 모듈을 최신 상태로 유지</target>
        </trans-unit>
        <trans-unit id="b465751c05fbc426234f552a5d95e9103bd3e6dc" translate="yes" xml:space="preserve">
          <source>Keyboard Shortcuts</source>
          <target state="translated">키보드 단축키</target>
        </trans-unit>
        <trans-unit id="b05203cf89b60eb36609a1a8b7f3cafe0927486a" translate="yes" xml:space="preserve">
          <source>Known issues</source>
          <target state="translated">알려진 문제</target>
        </trans-unit>
        <trans-unit id="dec66c5bf0f7fe4cc038ac871def8eb1ac31c146" translate="yes" xml:space="preserve">
          <source>Korean</source>
          <target state="translated">Korean</target>
        </trans-unit>
        <trans-unit id="a06efeaf4455fbbc03855e222511ad582f621f28" translate="yes" xml:space="preserve">
          <source>Kurdish</source>
          <target state="translated">Kurdish</target>
        </trans-unit>
        <trans-unit id="5aea8700748f6946f70240cab14148a2c449ed9c" translate="yes" xml:space="preserve">
          <source>Kyrgyz</source>
          <target state="translated">Kyrgyz</target>
        </trans-unit>
        <trans-unit id="843195acc182eab1aff0d0e1f754451a5eccd288" translate="yes" xml:space="preserve">
          <source>LLDB is a powerful tool and supports multiple strategies for code inspection. For this basic introduction, let's assume that you're calling a command from JavaScript that isn't behaving correctly - so you'd like to break on that command's C++ counterpart inside the Electron source.</source>
          <target state="translated">LLDB는 강력한 도구이며 코드 검사를위한 여러 전략을 지원합니다. 이 기본 소개에서는 올바르게 동작하지 않는 JavaScript에서 명령을 호출한다고 가정합니다. 따라서 Electron 소스 내에서 해당 명령의 C ++ 대응 항목을 중단하고 싶습니다.</target>
        </trans-unit>
        <trans-unit id="7d3d95ffa3f81f91f71534d6dadf0dec108ea6c6" translate="yes" xml:space="preserve">
          <source>LLDB is a powerful tool with a great documentation. To learn more about it, consider Apple's debugging documentation, for instance the &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-basics.html#//apple_ref/doc/uid/TP40012917-CH2-SW2&quot;&gt;LLDB Command Structure Reference&lt;/a&gt; or the introduction to &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-terminal-workflow-tutorial.html&quot;&gt;Using LLDB as a Standalone Debugger&lt;/a&gt;.</source>
          <target state="translated">LLDB는 훌륭한 문서가있는 강력한 도구입니다. 이에 대한 자세한 내용은 Apple의 디버깅 설명서 (예 : &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-basics.html#//apple_ref/doc/uid/TP40012917-CH2-SW2&quot;&gt;LLDB 명령 구조 참조)&lt;/a&gt; 또는 &lt;a href=&quot;https://developer.apple.com/library/mac/documentation/IDEs/Conceptual/gdb_to_lldb_transition_guide/document/lldb-terminal-workflow-tutorial.html&quot;&gt;LLDB를 독립형 디버거로 사용&lt;/a&gt; 소개를 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d19a4be135980e5ef4a065ac5b4d796f7207e00d" translate="yes" xml:space="preserve">
          <source>LNK1181: cannot open input file 'kernel32.lib'</source>
          <target state="translated">LNK1181 : 입력 파일 'kernel32.lib'을 열 수 없습니다</target>
        </trans-unit>
        <trans-unit id="80fea83804bf0e1f73c7272f7a19c26bc52d63ef" translate="yes" xml:space="preserve">
          <source>LTS</source>
          <target state="translated">LTS</target>
        </trans-unit>
        <trans-unit id="800734d40ea8493c3a8bf4b7794c379316a3df97" translate="yes" xml:space="preserve">
          <source>Language Code</source>
          <target state="translated">언어 코드</target>
        </trans-unit>
        <trans-unit id="2ccd20b6dbc9562a28819fbf7ff0129d89476dcb" translate="yes" xml:space="preserve">
          <source>Language Name</source>
          <target state="translated">언어 이름</target>
        </trans-unit>
        <trans-unit id="535cdb9bf5c901974567357abde733d39ad34291" translate="yes" xml:space="preserve">
          <source>Laothian</source>
          <target state="translated">Laothian</target>
        </trans-unit>
        <trans-unit id="d110f1435e34b27515c30f3be3bcd2bfb2388e70" translate="yes" xml:space="preserve">
          <source>Large icon</source>
          <target state="translated">큰 아이콘</target>
        </trans-unit>
        <trans-unit id="e05f92ac1b16cc7edb8d43150b49e59e79895476" translate="yes" xml:space="preserve">
          <source>Later versions of Windows allow for advanced notifications, with custom templates, images, and other flexible elements. To send those notifications (from either the main process or the renderer process), use the userland module &lt;a href=&quot;https://github.com/felixrieseberg/electron-windows-notifications&quot;&gt;electron-windows-notifications&lt;/a&gt;, which uses native Node addons to send &lt;code&gt;ToastNotification&lt;/code&gt; and &lt;code&gt;TileNotification&lt;/code&gt; objects.</source>
          <target state="translated">이후 버전의 Windows에서는 사용자 지정 템플릿, 이미지 및 기타 유연한 요소와 함께 고급 알림을 사용할 수 있습니다. 기본 프로세스 또는 렌더러 프로세스에서 해당 알림을 보내려면 기본 노드 애드온을 사용하여 &lt;code&gt;ToastNotification&lt;/code&gt; 및 &lt;code&gt;TileNotification&lt;/code&gt; 객체 를 보내는 userland 모듈 &lt;a href=&quot;https://github.com/felixrieseberg/electron-windows-notifications&quot;&gt;electron-windows-notifications&lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1728312ad64b08dc2b1876cfbbf9262bc117c354" translate="yes" xml:space="preserve">
          <source>Later versions of macOS allow for notifications with an input field, allowing the user to quickly reply to a notification. In order to send notifications with an input field, use the userland module &lt;a href=&quot;https://github.com/CharlieHess/node-mac-notifier&quot;&gt;node-mac-notifier&lt;/a&gt;.</source>
          <target state="translated">이후 버전의 macOS에서는 입력 필드를 사용하여 알림을 허용하므로 사용자가 알림에 빠르게 회신 할 수 있습니다. 입력 필드와 함께 알림을 보내려면 userland 모듈 &lt;a href=&quot;https://github.com/CharlieHess/node-mac-notifier&quot;&gt;node-mac-notifier를 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="79102e50ec1470cd9d985bb97a7ee168aea5c9fa" translate="yes" xml:space="preserve">
          <source>Later, a zero-day exploit is revealed and a fix is applied to master. We backport the fix to the &lt;code&gt;2-0-x&lt;/code&gt; line and release &lt;code&gt;2.0.1&lt;/code&gt;.</source>
          <target state="translated">나중에 제로 데이 익스플로잇이 공개되고 수정 사항이 마스터에 적용됩니다. 수정 사항을 &lt;code&gt;2-0-x&lt;/code&gt; 행 으로 백 포트하고 &lt;code&gt;2.0.1&lt;/code&gt; 을 릴리스 합니다.</target>
        </trans-unit>
        <trans-unit id="9bde795b72be44b343c829314d764282997de688" translate="yes" xml:space="preserve">
          <source>Latin</source>
          <target state="translated">Latin</target>
        </trans-unit>
        <trans-unit id="9ed6ae997b1668915a9529a0889d5ac9735b0c4b" translate="yes" xml:space="preserve">
          <source>Latvian</source>
          <target state="translated">Latvian</target>
        </trans-unit>
        <trans-unit id="12c9e11f89aca32c500a6c6be3bcd67a6e93e727" translate="yes" xml:space="preserve">
          <source>Launch electron app after build. You can now open the xcode workspace created above and attach to the electron process through the Debug &amp;gt; Attach To Process &amp;gt; Electron debug menu. [Note: If you want to debug the renderer process, you need to attach to the Electron Helper as well.]</source>
          <target state="translated">빌드 후 전자 앱을 시작하십시오. 이제 위에서 만든 xcode 작업 공간을 열고 디버그&amp;gt; 프로세스에 연결&amp;gt; 전자 디버그 메뉴를 통해 전자 프로세스에 연결할 수 있습니다. [참고 : 렌더러 프로세스를 디버그하려면 Electron Helper도 연결해야합니다.]</target>
        </trans-unit>
        <trans-unit id="edb627b677bb2e85eb500bda16bcdd868b84eb44" translate="yes" xml:space="preserve">
          <source>Legitimate use cases exist, but unless you know what you are doing, you should not enable this property.</source>
          <target state="translated">합법적 인 사용 사례가 존재하지만 수행중인 작업을 모르는 경우이 속성을 사용하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="e5416149c06382c28af60fb1dc625ea79a1e2812" translate="yes" xml:space="preserve">
          <source>Let's assume that you want to debug &lt;code&gt;app.setName()&lt;/code&gt;, which is defined in &lt;code&gt;browser.cc&lt;/code&gt; as &lt;code&gt;Browser::SetName()&lt;/code&gt;. Set the breakpoint using the &lt;code&gt;breakpoint&lt;/code&gt; command, specifying file and line to break on:</source>
          <target state="translated">&lt;code&gt;browser.cc&lt;/code&gt; 에 &lt;code&gt;Browser::SetName()&lt;/code&gt; 으로 정의 된 &lt;code&gt;app.setName()&lt;/code&gt; 을 디버그한다고 가정합니다 . 중단 점을 설정할 파일 및 행을 지정 하여 &lt;code&gt;breakpoint&lt;/code&gt; 명령을 사용하여 중단 점을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="c58bd40e95aef48eee67a645bb4f78e1797cdf10" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT license.</source>
          <target state="translated">MIT 라이센스에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="2685bc981621da79d2600fee575db7b305064b8d" translate="yes" xml:space="preserve">
          <source>Lifetime of Remote Objects</source>
          <target state="translated">원격 객체의 수명</target>
        </trans-unit>
        <trans-unit id="5e9ffa6ffac7ebf299d8829cf9d9d0fbcc4082a7" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--host-rules&lt;/code&gt; but these &lt;code&gt;rules&lt;/code&gt; only apply to the host resolver.</source>
          <target state="translated">&lt;code&gt;--host-rules&lt;/code&gt; 와 유사 하지만 이러한 &lt;code&gt;rules&lt;/code&gt; 은 호스트 확인자에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="cf07f03f4c10e887c4ab3647d44403ccb8dab3d1" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;--inspect&lt;/code&gt; but pauses execution on the first line of JavaScript.</source>
          <target state="translated">&lt;code&gt;--inspect&lt;/code&gt; 와 유사 하지만 JavaScript의 첫 번째 행에서 실행을 일시 중지합니다.</target>
        </trans-unit>
        <trans-unit id="f2c530a19bd62e37e3a792fa8bf53464fa79e244" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;ipcRenderer.send&lt;/code&gt; but the event will be sent to the &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; element in the host page instead of the main process.</source>
          <target state="translated">&lt;code&gt;ipcRenderer.send&lt;/code&gt; 와 유사 하지만 이벤트는 기본 프로세스 대신 호스트 페이지 의 &lt;code&gt;&amp;lt;webview&amp;gt;&lt;/code&gt; 요소 로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="94b0ded4d60e2107d4aeb10a52dcd568cfff0aed" translate="yes" xml:space="preserve">
          <source>Like NW.js, Electron provides a platform to write desktop applications with JavaScript and HTML and has Node integration to grant access to the low level system from web pages.</source>
          <target state="translated">Electron은 NW.js와 마찬가지로 JavaScript 및 HTML로 데스크탑 애플리케이션을 작성하는 플랫폼을 제공하며 웹 페이지에서 저수준 시스템에 액세스 할 수 있도록 노드 통합 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="71c3e236560dfd383eb6c25132ec2f90fb850124" translate="yes" xml:space="preserve">
          <source>Like Node, Electron is focused on having a small set of APIs that provide all the necessary primitives for developing multi-platform desktop applications. This design philosophy allows Electron to remain a flexible tool without being overly prescriptive about how it should be used. Userland enables users to create and share tools that provide additional functionality on top of what is available in &quot;core&quot;.</source>
          <target state="translated">Node와 마찬가지로 Electron은 다중 플랫폼 데스크톱 응용 프로그램 개발에 필요한 모든 기본 요소를 제공하는 작은 API 집합에 중점을 둡니다. 이 디자인 철학을 통해 Electron은 어떻게 사용해야하는지에 대해 지나치게 규정하지 않고도 유연한 도구를 유지할 수 있습니다. Userland를 통해 사용자는 &quot;핵심&quot;에서 제공되는 기능 외에 추가 기능을 제공하는 도구를 작성하고 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="3c46b62eb65be1e5fd1cb89afd7c2ec725817824" translate="yes" xml:space="preserve">
          <source>Limitations of MAS Build</source>
          <target state="translated">MAS 빌드의 한계</target>
        </trans-unit>
        <trans-unit id="b62ec0042a445f3138737f83a1b75da7db12a301" translate="yes" xml:space="preserve">
          <source>Limitations of the Node API</source>
          <target state="translated">노드 API의 한계</target>
        </trans-unit>
        <trans-unit id="bdf581cc1c81ea3b5fa1a390925a643afcab19e5" translate="yes" xml:space="preserve">
          <source>Lingala</source>
          <target state="translated">Lingala</target>
        </trans-unit>
        <trans-unit id="8740f6b1646315b108f5a7b7630739c109bdee42" translate="yes" xml:space="preserve">
          <source>Linting</source>
          <target state="translated">Linting</target>
        </trans-unit>
        <trans-unit id="83ad8510bbd3f22363d068e1c96f82fd0fcccd31" translate="yes" xml:space="preserve">
          <source>Linux</source>
          <target state="translated">Linux</target>
        </trans-unit>
        <trans-unit id="7f370089b00f31b78935318c07ce7b050337cf2a" translate="yes" xml:space="preserve">
          <source>Linux: &lt;code&gt;$XDG_CACHE_HOME&lt;/code&gt; or &lt;code&gt;~/.cache/electron/&lt;/code&gt;</source>
          <target state="translated">Linux : &lt;code&gt;$XDG_CACHE_HOME&lt;/code&gt; 또는 &lt;code&gt;~/.cache/electron/&lt;/code&gt; .cache / electron /</target>
        </trans-unit>
        <trans-unit id="20cb29cb8daab844a02a18f0ac83d7c62fbad7dc" translate="yes" xml:space="preserve">
          <source>List all files under the root of the archive:</source>
          <target state="translated">아카이브의 루트 아래에있는 모든 파일을 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="ebd312c54c59e660e8a804202db75a55093c1d92" translate="yes" xml:space="preserve">
          <source>Listens to &lt;code&gt;channel&lt;/code&gt;, when a new message arrives &lt;code&gt;listener&lt;/code&gt; would be called with &lt;code&gt;listener(event, args...)&lt;/code&gt;.</source>
          <target state="translated">수신 대기를하는 &lt;code&gt;channel&lt;/code&gt; 새 메시지가 도착하면, &lt;code&gt;listener&lt;/code&gt; 호출 될 것이다 &lt;code&gt;listener(event, args...)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="553c519c9addc3f4dad41b4a23238251692354b7" translate="yes" xml:space="preserve">
          <source>Lithuanian</source>
          <target state="translated">Lithuanian</target>
        </trans-unit>
        <trans-unit id="ef941bb9afb25b349511256cc034b5e38d94c79b" translate="yes" xml:space="preserve">
          <source>Loading content over &lt;code&gt;HTTPS&lt;/code&gt; assures the authenticity and integrity of the loaded resources while encrypting the traffic itself. See the section on &lt;a href=&quot;#1-only-load-secure-content&quot;&gt;only displaying secure content&lt;/a&gt; for more details.</source>
          <target state="translated">&lt;code&gt;HTTPS&lt;/code&gt; 를 통해 콘텐츠를 로드하면 트래픽 자체를 암호화하면서로드 된 리소스의 신뢰성과 무결성을 보장합니다. 자세한 내용은 &lt;a href=&quot;#1-only-load-secure-content&quot;&gt;보안 컨텐트 만 표시&lt;/a&gt; 섹션 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fc079f52aed3f3417e23c1f910ecdea48460cc9f" translate="yes" xml:space="preserve">
          <source>Loading the initial HTML of a website over &lt;code&gt;HTTPS&lt;/code&gt; and attempting to load subsequent resources via &lt;code&gt;HTTP&lt;/code&gt; is also known as &quot;mixed content&quot;.</source>
          <target state="translated">&lt;code&gt;HTTPS&lt;/code&gt; 를 통해 웹 사이트의 초기 HTML을로드하고 &lt;code&gt;HTTP&lt;/code&gt; 를 통해 후속 리소스를로드하는 것을 &quot;혼합 컨텐츠&quot;라고도합니다.</target>
        </trans-unit>
        <trans-unit id="30a1a104adb3f5e456c05c2a32c27218b68a7f56" translate="yes" xml:space="preserve">
          <source>Loads the &lt;code&gt;url&lt;/code&gt; in the webview, the &lt;code&gt;url&lt;/code&gt; must contain the protocol prefix, e.g. the &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;file://&lt;/code&gt;.</source>
          <target state="translated">로드는 &lt;code&gt;url&lt;/code&gt; 웹보기에서의 &lt;code&gt;url&lt;/code&gt; 예, 프로토콜 접두사를 포함해야 &lt;code&gt;http://&lt;/code&gt; 또는 &lt;code&gt;file://&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be93699ca87035f9fc36269481c3bdb20862991d" translate="yes" xml:space="preserve">
          <source>Loads the &lt;code&gt;url&lt;/code&gt; in the window. The &lt;code&gt;url&lt;/code&gt; must contain the protocol prefix, e.g. the &lt;code&gt;http://&lt;/code&gt; or &lt;code&gt;file://&lt;/code&gt;. If the load should bypass http cache then use the &lt;code&gt;pragma&lt;/code&gt; header to achieve it.</source>
          <target state="translated">창에 &lt;code&gt;url&lt;/code&gt; 을 로드합니다 . &lt;code&gt;url&lt;/code&gt; 예, 프로토콜 접두사를 포함해야 &lt;code&gt;http://&lt;/code&gt; 또는 &lt;code&gt;file://&lt;/code&gt; . 로드가 http 캐시를 우회해야하는 경우 &lt;code&gt;pragma&lt;/code&gt; 헤더를 사용하여 이를 달성하십시오.</target>
        </trans-unit>
        <trans-unit id="49f3107176240c3484499f42d4ea3791ab0eb6ce" translate="yes" xml:space="preserve">
          <source>Loads the given file in the window, &lt;code&gt;filePath&lt;/code&gt; should be a path to an HTML file relative to the root of your application. For instance an app structure like this:</source>
          <target state="translated">주어진 파일을 창에로드합니다. &lt;code&gt;filePath&lt;/code&gt; 는 응용 프로그램의 루트에 상대적인 HTML 파일의 경로 여야합니다. 예를 들어 다음과 같은 앱 구조 :</target>
        </trans-unit>
        <trans-unit id="9ee0cb93b5814acea6da884dc9bf6b78f5602f71" translate="yes" xml:space="preserve">
          <source>Local Modules (using relative paths)</source>
          <target state="translated">로컬 모듈 (상대 경로 사용)</target>
        </trans-unit>
        <trans-unit id="bf7c326f8217d8d073a4c87dc6c0c16e9df63e9f" translate="yes" xml:space="preserve">
          <source>Local Shortcuts</source>
          <target state="translated">지역 바로 가기</target>
        </trans-unit>
        <trans-unit id="031b11f4c0cdf5c68d2539db1248bf550f65668e" translate="yes" xml:space="preserve">
          <source>Locale values returned by &lt;code&gt;app.getLocale()&lt;/code&gt;.</source>
          <target state="translated">로케일에 의해 반환 된 값 &lt;code&gt;app.getLocale()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9a621b0da3425ea2613fe09c377400e16b011ee6" translate="yes" xml:space="preserve">
          <source>Locale values returned by app.getLocale().</source>
          <target state="translated">app.getLocale ()에 의해 리턴 된 로케일 값.</target>
        </trans-unit>
        <trans-unit id="a222060e32289bf6910ac4a07a10733be500bd99" translate="yes" xml:space="preserve">
          <source>Locales</source>
          <target state="translated">Locales</target>
        </trans-unit>
        <trans-unit id="e101dd7d36fcf91f4a7562468263eaf821e410bf" translate="yes" xml:space="preserve">
          <source>Located in &lt;code&gt;electron/libchromiumcontent/src/tools/clang/scripts/update.py&lt;/code&gt;</source>
          <target state="translated">에 위치한 &lt;code&gt;electron/libchromiumcontent/src/tools/clang/scripts/update.py&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="857d812e97fcac1b5c82d2064588db4e5ddd72d4" translate="yes" xml:space="preserve">
          <source>Long term support of older versions of Electron does not currently exist. If your current version of Electron works for you, you can stay on it for as long as you'd like. If you want to make use of new features as they come in you should upgrade to a newer version.</source>
          <target state="translated">이전 버전의 Electron에 대한 장기 지원은 현재 존재하지 않습니다. 현재 버전의 Electron이 효과가 있으면 원하는 기간 동안 계속 사용할 수 있습니다. 새로운 기능이 제공 될 때 새로운 기능을 사용하려면 최신 버전으로 업그레이드해야합니다.</target>
        </trans-unit>
        <trans-unit id="68af66810bb202c8b75471176a3f65b13ff42f73" translate="yes" xml:space="preserve">
          <source>MAS</source>
          <target state="translated">MAS</target>
        </trans-unit>
        <trans-unit id="87622d875bec8a4daf829da2f6e6a4da0aa5935c" translate="yes" xml:space="preserve">
          <source>MD2 - &lt;a href=&quot;https://tools.ietf.org/html/rfc1319&quot;&gt;RFC 1319&lt;/a&gt;</source>
          <target state="translated">MD2- &lt;a href=&quot;https://tools.ietf.org/html/rfc1319&quot;&gt;RFC 1319&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48c7fdf5c55534c6ded90e9795080da11821105c" translate="yes" xml:space="preserve">
          <source>MD4 - &lt;a href=&quot;https://tools.ietf.org/html/rfc6150&quot;&gt;RFC 6150&lt;/a&gt;</source>
          <target state="translated">MD4- &lt;a href=&quot;https://tools.ietf.org/html/rfc6150&quot;&gt;RFC 6150&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b2779c17e43e24356f84eb01a1a814532502f63" translate="yes" xml:space="preserve">
          <source>MD5 - &lt;a href=&quot;https://tools.ietf.org/html/rfc1321&quot;&gt;RFC 1321&lt;/a&gt;</source>
          <target state="translated">MD5- &lt;a href=&quot;https://tools.ietf.org/html/rfc1321&quot;&gt;RFC 1321&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4eb4ebbec5df5de4887b468de43d79bcbae01a9d" translate="yes" xml:space="preserve">
          <source>MDC2 - &lt;a href=&quot;https://wiki.openssl.org/index.php/Manual:Mdc2(3)&quot;&gt;ISO/IEC 10118-2&lt;/a&gt;</source>
          <target state="translated">MDC2- &lt;a href=&quot;https://wiki.openssl.org/index.php/Manual:Mdc2(3)&quot;&gt;ISO / IEC 10118-2&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1764c9b488881944bdd8aa802a90466c19b07913" translate="yes" xml:space="preserve">
          <source>Mac App Store</source>
          <target state="translated">맥 앱 스토어</target>
        </trans-unit>
        <trans-unit id="780c258bc4ad975884ac6bdcaf6f0e1e3b380a9d" translate="yes" xml:space="preserve">
          <source>Mac App Store Submission Guide</source>
          <target state="translated">Mac App Store 제출 안내서</target>
        </trans-unit>
        <trans-unit id="e1147b6f453aa3574afe7faf01df8f4f43a25471" translate="yes" xml:space="preserve">
          <source>MacOS Dock</source>
          <target state="translated">맥 OS 독</target>
        </trans-unit>
        <trans-unit id="55d8cae81f999b148f7f11049a80625438104669" translate="yes" xml:space="preserve">
          <source>MacOS: &lt;code&gt;~/Library/Caches/electron/&lt;/code&gt;</source>
          <target state="translated">MacOS : &lt;code&gt;~/Library/Caches/electron/&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3fe571f349f4b42daacd19bf3d1a708f4bec7cd" translate="yes" xml:space="preserve">
          <source>Macedonian</source>
          <target state="translated">Macedonian</target>
        </trans-unit>
        <trans-unit id="62bce9422ff2d14f69ab80a154510232fc8a9afd" translate="yes" xml:space="preserve">
          <source>Main</source>
          <target state="translated">Main</target>
        </trans-unit>
        <trans-unit id="99effeb4610a03a43d98c6d679f8583dca53d6ac" translate="yes" xml:space="preserve">
          <source>Main Menu's Name</source>
          <target state="translated">메인 메뉴 이름</target>
        </trans-unit>
        <trans-unit id="e49b821b2c7b6714f350a8dd1146a21a18871a8c" translate="yes" xml:space="preserve">
          <source>Main Process</source>
          <target state="translated">주요 프로세스</target>
        </trans-unit>
        <trans-unit id="9efa37270cf8257d0ec596934c9bc2db502ebdcd" translate="yes" xml:space="preserve">
          <source>Main and Renderer</source>
          <target state="translated">메인과 렌더러</target>
        </trans-unit>
        <trans-unit id="b53208d488815855dd895906ff829adc9ff78cea" translate="yes" xml:space="preserve">
          <source>Main and Renderer Processes</source>
          <target state="translated">메인 및 렌더러 프로세스</target>
        </trans-unit>
        <trans-unit id="bd28ae81bb664c783b6f9a050e87f13629f673d6" translate="yes" xml:space="preserve">
          <source>Main process</source>
          <target state="translated">주요 과정</target>
        </trans-unit>
        <trans-unit id="e92739bf5eb177cbc20df5d923a76a756209a14d" translate="yes" xml:space="preserve">
          <source>Major Version Increments</source>
          <target state="translated">주요 버전 증가</target>
        </trans-unit>
        <trans-unit id="15658f56ce81f1e448f2ea894b48e7e0a98dfaa8" translate="yes" xml:space="preserve">
          <source>Major releases</source>
          <target state="translated">주요 릴리스</target>
        </trans-unit>
        <trans-unit id="538d8b92993a68dce392ee56fb0fb80b9f6b4060" translate="yes" xml:space="preserve">
          <source>Major version change</source>
          <target state="translated">주요 버전 변경</target>
        </trans-unit>
        <trans-unit id="6304d1caf7f16f9be785c9c328a018b0d5156b1d" translate="yes" xml:space="preserve">
          <source>Make Electron code compatible with the new libcc</source>
          <target state="translated">Electron 코드를 새로운 libcc와 호환 가능하게하십시오</target>
        </trans-unit>
        <trans-unit id="123ebe43cb0ceb7111bbb2d0db8366fa969b4407" translate="yes" xml:space="preserve">
          <source>Make HTTP/HTTPS requests.</source>
          <target state="translated">HTTP / HTTPS 요청을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="78ccfead62fd93ae7a93727e70b96ebb1a1ca6c1" translate="yes" xml:space="preserve">
          <source>Make a checklist of the Electron patches that need to be applied with &lt;code&gt;git log --oneline&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;git log --oneline&lt;/code&gt; 을 적용해야하는 Electron 패치 체크리스트 작성</target>
        </trans-unit>
        <trans-unit id="fb9d214a8c3a813ca4f40f1248f0fa923e2c259d" translate="yes" xml:space="preserve">
          <source>Make codes changes in Electron repository.</source>
          <target state="translated">Electron 저장소에서 코드를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="20990824044b34a54949bd84530966fc5cb788ea" translate="yes" xml:space="preserve">
          <source>Make internal builds of libcc and electron</source>
          <target state="translated">libcc와 전자의 내부 빌드</target>
        </trans-unit>
        <trans-unit id="22a93996cb9b35166bec2f617cb93d4e0a0ce26d" translate="yes" xml:space="preserve">
          <source>Make sure it builds then add, commit, and push work to electron's crashpad fork</source>
          <target state="translated">빌드하고 전자의 크래쉬 패드 포크에 작업을 추가, 커밋 및 푸시하십시오.</target>
        </trans-unit>
        <trans-unit id="ce695f6c79213567b657ab0ab0a20b729a1495b1" translate="yes" xml:space="preserve">
          <source>Make sure the linter does not report any issues and that all tests pass. Please do not submit patches that fail either check.</source>
          <target state="translated">린터가 문제를보고하지 않고 모든 테스트에 합격했는지 확인하십시오. 확인에 실패한 패치는 제출하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="971665255c9f7514f0fb7340e444b4ea708018ac" translate="yes" xml:space="preserve">
          <source>Make sure you have the latest Visual Studio update installed.</source>
          <target state="translated">최신 Visual Studio 업데이트가 설치되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="bd200749e96183e292d7ffb6a2e24e6e794542ea" translate="yes" xml:space="preserve">
          <source>Makes the browser go back a web page.</source>
          <target state="translated">브라우저가 웹 페이지로 돌아가도록합니다.</target>
        </trans-unit>
        <trans-unit id="fb33f8c8468b4ef03b24447c1b467fe21bdd8e7f" translate="yes" xml:space="preserve">
          <source>Makes the browser go forward a web page.</source>
          <target state="translated">브라우저가 웹 페이지를 앞으로 이동하게합니다.</target>
        </trans-unit>
        <trans-unit id="3598715e580b14a7b0457c42b72ca9d527ffe21e" translate="yes" xml:space="preserve">
          <source>Makes the guest page go back.</source>
          <target state="translated">손님 페이지를 되돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="8fecea1ee7ec37d488b674dfe0c96e2d98ff2179" translate="yes" xml:space="preserve">
          <source>Makes the guest page go forward.</source>
          <target state="translated">손님 페이지를 앞으로 이동시킵니다.</target>
        </trans-unit>
        <trans-unit id="267a0d8700d17b6e1c1981abe6b4204bfac85631" translate="yes" xml:space="preserve">
          <source>Makes the window ignore all mouse events.</source>
          <target state="translated">창에서 모든 마우스 이벤트를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="6dd49a56260ae56c79b5cb939972481551eeff57" translate="yes" xml:space="preserve">
          <source>Makes the window not show in the taskbar.</source>
          <target state="translated">창을 작업 표시 줄에 표시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="671c4a1a00d83c053d9d4fc465a563ed8e1f7e2c" translate="yes" xml:space="preserve">
          <source>Making Changes</source>
          <target state="translated">변경</target>
        </trans-unit>
        <trans-unit id="046dd363a2869c372fd92b4d7fc805573323a713" translate="yes" xml:space="preserve">
          <source>Making accessible applications is important and we're happy to introduce new functionality to &lt;a href=&quot;https://electronjs.org/devtron&quot;&gt;Devtron&lt;/a&gt; and &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron&lt;/a&gt; that gives developers the opportunity to make their apps better for everyone.</source>
          <target state="translated">액세스 가능한 응용 프로그램을 만드는 것이 중요하며 개발자가 모든 사람에게 더 나은 앱을 만들 수있는 기회를 제공 하는 &lt;a href=&quot;https://electronjs.org/devtron&quot;&gt;Devtron&lt;/a&gt; 및 &lt;a href=&quot;https://electronjs.org/spectron&quot;&gt;Spectron에&lt;/a&gt; 새로운 기능을 도입하게되어 기쁩니다 .</target>
        </trans-unit>
        <trans-unit id="08f0c0cf51888a42175c6e62922d9b9e24579a11" translate="yes" xml:space="preserve">
          <source>Malay</source>
          <target state="translated">Malay</target>
        </trans-unit>
        <trans-unit id="c730df3afaaac142f305e8f798eca241f12abf9f" translate="yes" xml:space="preserve">
          <source>Malayalam</source>
          <target state="translated">Malayalam</target>
        </trans-unit>
        <trans-unit id="cfb5310c4958ed16357aa5406e541fbeec602420" translate="yes" xml:space="preserve">
          <source>Maltese</source>
          <target state="translated">Maltese</target>
        </trans-unit>
        <trans-unit id="64ee1d8049f251ea9cde4c5ba76bbc0737728e80" translate="yes" xml:space="preserve">
          <source>Manage browser sessions, cookies, cache, proxy settings, etc.</source>
          <target state="translated">브라우저 세션, 쿠키, 캐시, 프록시 설정 등을 관리합니다.</target>
        </trans-unit>
        <trans-unit id="dec209aaca99776ec018cbb9ee0ec7a9b32b56e6" translate="yes" xml:space="preserve">
          <source>Manage files and URLs using their default applications.</source>
          <target state="translated">기본 응용 프로그램을 사용하여 파일과 URL을 관리하십시오.</target>
        </trans-unit>
        <trans-unit id="c14e21aaec4b77e9b50c210353d726630a69b1b8" translate="yes" xml:space="preserve">
          <source>Manipulate the child browser window</source>
          <target state="translated">자식 브라우저 창을 조작</target>
        </trans-unit>
        <trans-unit id="a0ba40e77497397867a1a3dd6568cf58eee5431d" translate="yes" xml:space="preserve">
          <source>Manually building for Electron</source>
          <target state="translated">전자를위한 수동 구축</target>
        </trans-unit>
        <trans-unit id="568e03bb96ad8f988e60a033c47bd9714368a07a" translate="yes" xml:space="preserve">
          <source>Manually enables Chrome's accessibility support, allowing to expose accessibility switch to users in application settings. &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;https://www.chromium.org/developers/design-documents/accessibility&lt;/a&gt; for more details. Disabled by default.</source>
          <target state="translated">Chrome의 접근성 지원을 수동으로 사용 설정하여 애플리케이션 설정에서 접근성 스위치를 사용자에게 노출 할 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://www.chromium.org/developers/design-documents/accessibility&quot;&gt;https://www.chromium.org/developers/design-documents/accessibility&lt;/a&gt; 를 참조하십시오. 기본적으로 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bb4b981fc369f78634393c244cc62dcb75bb23c" translate="yes" xml:space="preserve">
          <source>Marathi</source>
          <target state="translated">Marathi</target>
        </trans-unit>
        <trans-unit id="e8ceadd643faeb0bb54502b73c425647ff136a31" translate="yes" xml:space="preserve">
          <source>Marks the image as a template image.</source>
          <target state="translated">이미지를 템플릿 이미지로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="e4cb68450d6ee60729f8e6bf50c6178cacca48e3" translate="yes" xml:space="preserve">
          <source>Match URLs which are IP address literals.</source>
          <target state="translated">IP 주소 리터럴 인 URL을 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="33ab1c88001bf081442d8776abcc8ae32ce1b8a6" translate="yes" xml:space="preserve">
          <source>Match a particular domain suffix.</source>
          <target state="translated">특정 도메인 접미사와 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="7ef5c8e655993c05557e9aa0674b43d038556da1" translate="yes" xml:space="preserve">
          <source>Match all hostnames that match the pattern HOSTNAME_PATTERN.</source>
          <target state="translated">HOSTNAME_PATTERN 패턴과 일치하는 모든 호스트 이름을 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="a6ab65cfe6eda9c382fe697344f8af846c1bc900" translate="yes" xml:space="preserve">
          <source>Match any URL that is to an IP literal that falls between the given range. IP range is specified using CIDR notation.</source>
          <target state="translated">주어진 범위 사이에있는 IP 리터럴에 대한 URL을 일치시킵니다. IP 범위는 CIDR 표기법을 사용하여 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="66b5a35f9ebfbc106121468ab684462bb4780f8a" translate="yes" xml:space="preserve">
          <source>Match local addresses. The meaning of &lt;code&gt;&amp;lt;local&amp;gt;&lt;/code&gt; is whether the host matches one of: &quot;127.0.0.1&quot;, &quot;::1&quot;, &quot;localhost&quot;.</source>
          <target state="translated">지역 주소와 일치합니다. &lt;code&gt;&amp;lt;local&amp;gt;&lt;/code&gt; 의 의미는 호스트가 &quot;127.0.0.1&quot;, &quot;:: 1&quot;, &quot;localhost&quot;중 하나와 일치하는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="bc1970136ab27583ccea13cbf7161d7e25b69a5e" translate="yes" xml:space="preserve">
          <source>Maximizes the window. This will also show (but not focus) the window if it isn't being displayed already.</source>
          <target state="translated">창을 최대화합니다. 창이 아직 표시되지 않은 경우 창에 표시되지만 초점이 맞지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="e0efdce50032a40b3a3914e5fc8bfa6cd4288bb5" translate="yes" xml:space="preserve">
          <source>Memory Management</source>
          <target state="translated">메모리 관리</target>
        </trans-unit>
        <trans-unit id="a39a2691f8ac63df7fcbe6ae7ece40b10d717679" translate="yes" xml:space="preserve">
          <source>MemoryInfo</source>
          <target state="translated">MemoryInfo</target>
        </trans-unit>
        <trans-unit id="d2f3ea8610a8148842353371965b406006ea2e95" translate="yes" xml:space="preserve">
          <source>MemoryInfo Object</source>
          <target state="translated">MemoryInfo 객체</target>
        </trans-unit>
        <trans-unit id="b6f34e962df288485f4a23a96a69701e9811a805" translate="yes" xml:space="preserve">
          <source>MemoryUsageDetails</source>
          <target state="translated">MemoryUsageDetails</target>
        </trans-unit>
        <trans-unit id="6b8e378b13b324bf2719d56f05d2a76e1fdca001" translate="yes" xml:space="preserve">
          <source>MemoryUsageDetails Object</source>
          <target state="translated">MemoryUsageDetails 객체</target>
        </trans-unit>
        <trans-unit id="57f5f5efbc5990f5230aa95359042338b856707b" translate="yes" xml:space="preserve">
          <source>Menu</source>
          <target state="translated">Menu</target>
        </trans-unit>
        <trans-unit id="ac638b6bd0a0e2ae3936b49675084e959e08498d" translate="yes" xml:space="preserve">
          <source>Menu Item Position</source>
          <target state="translated">메뉴 항목 위치</target>
        </trans-unit>
        <trans-unit id="c80d07f2f5248a4d681913d75eca7a816c2ab9da" translate="yes" xml:space="preserve">
          <source>Menu()</source>
          <target state="translated">Menu()</target>
        </trans-unit>
        <trans-unit id="6c4aea89b61f6d70b9afb61efa7ba962a76cb7a1" translate="yes" xml:space="preserve">
          <source>Menu:</source>
          <target state="translated">Menu:</target>
        </trans-unit>
        <trans-unit id="fd0b0b8f9535c21f5c697415e34da8e008d26d26" translate="yes" xml:space="preserve">
          <source>MenuItem</source>
          <target state="translated">MenuItem</target>
        </trans-unit>
        <trans-unit id="7cc9eb5ad4b43fe57d0aef498e053f33d8a9c732" translate="yes" xml:space="preserve">
          <source>MenuItem()</source>
          <target state="translated">MenuItem()</target>
        </trans-unit>
        <trans-unit id="79343f29f5723f9f94c0038b7028cb8a494caeb2" translate="yes" xml:space="preserve">
          <source>Merge temporary branch (pre-2-0-x branches only)</source>
          <target state="translated">임시 브랜치 병합 (-2-0-x 브랜치 만 해당)</target>
        </trans-unit>
        <trans-unit id="edbc4cdf49b60f12acfba715eaa71dd0dc3b31f8" translate="yes" xml:space="preserve">
          <source>Merges all windows into one window with multiple tabs when native tabs are enabled and there is more than one open window.</source>
          <target state="translated">기본 탭이 활성화되어 있고 둘 이상의 열린 창이있는 경우 모든 창을 여러 개의 탭이있는 하나의 창으로 병합합니다.</target>
        </trans-unit>
        <trans-unit id="f62e9e3e46d782563d406255ceb97e4d191cd710" translate="yes" xml:space="preserve">
          <source>Merging back into master</source>
          <target state="translated">마스터로 다시 병합</target>
        </trans-unit>
        <trans-unit id="b8b0b3aac0d6933ac642e6939867daa972acb2a1" translate="yes" xml:space="preserve">
          <source>Merging back into old release branch</source>
          <target state="translated">이전 릴리스 지점으로 다시 병합</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="37d18b76453fed3e678a25bf44af7335d8a1f834" translate="yes" xml:space="preserve">
          <source>Microsoft &lt;a href=&quot;https://github.com/catalystcode/electron-windows-store&quot;&gt;developed a tool that compiles Electron apps as &lt;code&gt;.appx&lt;/code&gt; packages&lt;/a&gt;, enabling developers to use some of the goodies found in the new application model. This guide explains how to use it - and what the capabilities and limitations of an Electron AppX package are.</source>
          <target state="translated">Microsoft &lt;a href=&quot;https://github.com/catalystcode/electron-windows-store&quot;&gt;는 Electron 앱을 &lt;code&gt;.appx&lt;/code&gt; 패키지 로 컴파일하는 도구를&lt;/a&gt; 개발하여 개발자가 새로운 애플리케이션 모델에서 찾은 장점 중 일부를 사용할 수 있도록했습니다. 이 안내서는 사용 방법 및 Electron AppX 패키지의 기능 및 제한 사항에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="28128d38fad00ed20714cff948ab05f77479d1e6" translate="yes" xml:space="preserve">
          <source>MimeTypedBuffer</source>
          <target state="translated">MimeTypedBuffer</target>
        </trans-unit>
        <trans-unit id="d6b317ab061a8236f4adc5d7739f52a26b4e8122" translate="yes" xml:space="preserve">
          <source>MimeTypedBuffer Object</source>
          <target state="translated">MimeTypedBuffer 객체</target>
        </trans-unit>
        <trans-unit id="5c250802ed4e299671bafdfe26fbd5c52d2f174a" translate="yes" xml:space="preserve">
          <source>Minimal Bootstrapping</source>
          <target state="translated">최소 부트 스트랩</target>
        </trans-unit>
        <trans-unit id="59d44ab0c473a6e50cdb5fc05dcae565d64d32c4" translate="yes" xml:space="preserve">
          <source>Minimizes the window. On some platforms the minimized window will be shown in the Dock.</source>
          <target state="translated">창을 최소화합니다. 일부 플랫폼에서는 최소화 된 창이 Dock에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="822d8a4f24b72b15bce76b88a8306344b595b682" translate="yes" xml:space="preserve">
          <source>Minor Version Increments</source>
          <target state="translated">부 버전 증가</target>
        </trans-unit>
        <trans-unit id="f00051475cd7040e49b1165a98e0ececdb494a4c" translate="yes" xml:space="preserve">
          <source>Minor releases</source>
          <target state="translated">부 릴리스</target>
        </trans-unit>
        <trans-unit id="187790ce114a2fd84cf44bc5850252f1405fdd09" translate="yes" xml:space="preserve">
          <source>Minor version change</source>
          <target state="translated">부 버전 변경</target>
        </trans-unit>
        <trans-unit id="74adc5789ce92de7bbb5e3d84a287a1ce6d3e7f5" translate="yes" xml:space="preserve">
          <source>Mirror</source>
          <target state="translated">Mirror</target>
        </trans-unit>
        <trans-unit id="50b753b77904c96a7fe67edc0e7799140807aeb3" translate="yes" xml:space="preserve">
          <source>Missing Features: Alphas, and Nightly</source>
          <target state="translated">누락 된 기능 : 알파 및 야간</target>
        </trans-unit>
        <trans-unit id="aa608f50164ae4468eca5f7a4828180613e032b7" translate="yes" xml:space="preserve">
          <source>MobX Developer Tools</source>
          <target state="translated">MobX 개발자 도구</target>
        </trans-unit>
        <trans-unit id="901b00eb5476b91a74e2f260fe55be50affcee6d" translate="yes" xml:space="preserve">
          <source>Modal windows</source>
          <target state="translated">모달 창</target>
        </trans-unit>
        <trans-unit id="0655e943f357853a23dbc1fca9b8b8b74187fed0" translate="yes" xml:space="preserve">
          <source>Modules for Both Processes:</source>
          <target state="translated">두 프로세스를위한 모듈 :</target>
        </trans-unit>
        <trans-unit id="fad485f2b0513e07b52567a6f2a346d73ddbc539" translate="yes" xml:space="preserve">
          <source>Modules for the Main Process:</source>
          <target state="translated">주요 프로세스를위한 모듈 :</target>
        </trans-unit>
        <trans-unit id="dfc2146f5598a75fa9da745d85433f8c014cba38" translate="yes" xml:space="preserve">
          <source>Modules for the Renderer Process (Web Page):</source>
          <target state="translated">렌더러 프로세스 (웹 페이지) 용 모듈 :</target>
        </trans-unit>
        <trans-unit id="859556f94b13fc510ff5085b5fb29e88a587fc7b" translate="yes" xml:space="preserve">
          <source>Modules that rely on &lt;code&gt;node-pre-gyp&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;node-pre-gyp&lt;/code&gt; 에 의존하는 모듈</target>
        </trans-unit>
        <trans-unit id="9e6cb54b92e776ea4523222c80634966b1a25f1c" translate="yes" xml:space="preserve">
          <source>Modules that rely on &lt;code&gt;prebuild&lt;/code&gt;</source>
          <target state="translated">사전 &lt;code&gt;prebuild&lt;/code&gt; 의존하는 모듈</target>
        </trans-unit>
        <trans-unit id="977ca71334b90aac52382878a5bc9c5fe2dc63d2" translate="yes" xml:space="preserve">
          <source>Mojo</source>
          <target state="translated">Mojo</target>
        </trans-unit>
        <trans-unit id="981fb1a731db18be7ffbc618830d04ecbc60cd90" translate="yes" xml:space="preserve">
          <source>Moldavian</source>
          <target state="translated">Moldavian</target>
        </trans-unit>
        <trans-unit id="c3bdbab40a4be4ac1b8eb1ccb2dbb2eaf8ed480f" translate="yes" xml:space="preserve">
          <source>Mongolian</source>
          <target state="translated">Mongolian</target>
        </trans-unit>
        <trans-unit id="ad3be9da0333f2d86e25caf5c419702d7e211450" translate="yes" xml:space="preserve">
          <source>Monitor power state changes.</source>
          <target state="translated">전원 상태 변경을 모니터링합니다.</target>
        </trans-unit>
        <trans-unit id="0d6772c17c36f0f8030e0a6c6baa2bec775c05de" translate="yes" xml:space="preserve">
          <source>Monitoring begins immediately locally and asynchronously on child processes as soon as they receive the &lt;code&gt;startMonitoring&lt;/code&gt; request.</source>
          <target state="translated">모니터링은 &lt;code&gt;startMonitoring&lt;/code&gt; 요청 을받는 즉시 하위 프로세스에서 로컬 및 비동기 적으로 즉시 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="5eaa209d8dce0c8c489a3d027ee8e07c8703eb01" translate="yes" xml:space="preserve">
          <source>More details can be found in &lt;a href=&quot;application-packaging&quot;&gt;Application packaging&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;application-packaging&quot;&gt;응용 프로그램 패키징&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac12df785b0417cadd38f4b76e9fd5ed4a671464" translate="yes" xml:space="preserve">
          <source>More information can be found in the &lt;a href=&quot;https://nodejs.org/dist/latest/docs/api/repl.html&quot;&gt;Node.js REPL docs&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;https://nodejs.org/dist/latest/docs/api/repl.html&quot;&gt;Node.js REPL 문서&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="381a4f2cdda5a922f71425e63e4ead748c557260" translate="yes" xml:space="preserve">
          <source>More may be added as needed to expose more electron APIs in the sandbox, but any module in the main process can already be used through &lt;code&gt;electron.remote.require&lt;/code&gt;.</source>
          <target state="translated">샌드 박스에서 더 많은 전자 API를 노출하는 데 필요한만큼 더 추가 할 수 있지만 기본 프로세스의 모든 모듈은 &lt;code&gt;electron.remote.require&lt;/code&gt; 를 통해 이미 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="91ad2fc5f8c51939d84c8988f4bdd7e13db85699" translate="yes" xml:space="preserve">
          <source>Most &lt;code&gt;fs&lt;/code&gt; APIs can read a file or get a file's information from &lt;code&gt;asar&lt;/code&gt; archives without unpacking, but for some APIs that rely on passing the real file path to underlying system calls, Electron will extract the needed file into a temporary file and pass the path of the temporary file to the APIs to make them work. This adds a little overhead for those APIs.</source>
          <target state="translated">대부분의 &lt;code&gt;fs&lt;/code&gt; API는 압축 을 &lt;code&gt;asar&lt;/code&gt; 않고 파일을 읽거나 asar 아카이브 에서 파일 정보를 얻을 수 있지만 실제 파일 경로를 기본 시스템 호출에 전달하는 데 의존하는 일부 API의 경우 Electron은 필요한 파일을 임시 파일로 추출하여 경로를 전달합니다. 임시 파일을 API에 적용하여 작동시킵니다. 이는 해당 API에 약간의 오버 헤드를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="24df657906e0a9ff5dd9d380b688073ddd400cbe" translate="yes" xml:space="preserve">
          <source>Most issues are resolved by opening a pull request. The process for opening and reviewing a pull request is similar to that of opening and triaging issues, but carries with it a necessary review and approval workflow that ensures that the proposed changes meet the minimal quality and functional guidelines of the Electron project.</source>
          <target state="translated">풀 요청을 열면 대부분의 문제가 해결됩니다. 끌어 오기 요청을 열고 검토하는 프로세스는 열기 및 심사 문제와 유사하지만 제안 된 변경 사항이 Electron 프로젝트의 최소 품질 및 기능 지침을 충족시키는 데 필요한 검토 및 승인 워크 플로우와 함께 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="1963afbf0297022503035c708168c89e69e8dc93" translate="yes" xml:space="preserve">
          <source>Most pull requests opened against the &lt;code&gt;electron/electron&lt;/code&gt; repository include changes to either the C/C++ code in the &lt;code&gt;atom/&lt;/code&gt; or &lt;code&gt;brightray/&lt;/code&gt; folders, the JavaScript code in the &lt;code&gt;lib/&lt;/code&gt; folder, the documentation in &lt;code&gt;docs/api/&lt;/code&gt; or tests in the &lt;code&gt;spec/&lt;/code&gt; folder.</source>
          <target state="translated">&lt;code&gt;electron/electron&lt;/code&gt; 저장소 에 대해 열린 대부분의 풀 요청 에는 &lt;code&gt;atom/&lt;/code&gt; 또는 &lt;code&gt;brightray/&lt;/code&gt; 폴더 의 C / C ++ 코드 , &lt;code&gt;lib/&lt;/code&gt; 폴더 의 JavaScript 코드 , &lt;code&gt;docs/api/&lt;/code&gt; 의 문서 또는 &lt;code&gt;spec/&lt;/code&gt; 테스트의 변경 사항이 포함됩니다. 폴더.</target>
        </trans-unit>
        <trans-unit id="61d68b3e3473c488df7dd74b03100ff56229d822" translate="yes" xml:space="preserve">
          <source>Most users will get this feature for free, since it's supported out of the box by &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;&lt;code&gt;electron-packager&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;&lt;code&gt;electron-forge&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;&lt;code&gt;electron-builder&lt;/code&gt;&lt;/a&gt;. If you are not using any of these tools, read on.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt; &lt;code&gt;electron-packager&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt; &lt;code&gt;electron-forge&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt; &lt;code&gt;electron-builder&lt;/code&gt; 가&lt;/a&gt;기본적으로 지원하므로 대부분의 사용자는이 기능을 무료로 이용할 수 있습니다. 이러한 도구를 사용하지 않는 경우 계속 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="f6950455d237806d5d93ac0532b6858342225fe4" translate="yes" xml:space="preserve">
          <source>Move the given file to trash and returns a boolean status for the operation.</source>
          <target state="translated">주어진 파일을 휴지통으로 옮기고 작업에 대한 부울 상태를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1a3875c81017814140fd6c2816640edc744cfd83" translate="yes" xml:space="preserve">
          <source>Moves the current tab into a new window if native tabs are enabled and there is more than one tab in the current window.</source>
          <target state="translated">기본 탭이 활성화되어 있고 현재 창에 둘 이상의 탭이있는 경우 현재 탭을 새 창으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="2151334426d72b39234474a7474182d61ff5ba8c" translate="yes" xml:space="preserve">
          <source>Moves window to &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">윈도우를 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 로 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="a9fd7b0bda50a6a5e59d1f13795eb4c168f24976" translate="yes" xml:space="preserve">
          <source>Moves window to the center of the screen.</source>
          <target state="translated">창을 화면 중앙으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="1675dfdf0c0e828011d9fe463c61a7c1dcc4c9bf" translate="yes" xml:space="preserve">
          <source>Multi-threaded Node.js</source>
          <target state="translated">멀티 스레드 Node.js</target>
        </trans-unit>
        <trans-unit id="8a86acdcb9f782d0a3ed3f193ab37879a5d757d7" translate="yes" xml:space="preserve">
          <source>Multithreading</source>
          <target state="translated">Multithreading</target>
        </trans-unit>
        <trans-unit id="0858aa585025719dcb749334174b44308e0269ab" translate="yes" xml:space="preserve">
          <source>Mute the audio on the current web page.</source>
          <target state="translated">현재 웹 페이지에서 오디오를 음소거합니다.</target>
        </trans-unit>
        <trans-unit id="be25b242342faf05470c6814b3981c11e4d6e95a" translate="yes" xml:space="preserve">
          <source>My app's window/tray disappeared after a few minutes.</source>
          <target state="translated">몇 분 후에 내 앱의 창 / 트레이가 사라졌습니다.</target>
        </trans-unit>
        <trans-unit id="c0852d99c6166cb90a169f7534edc83335406d11" translate="yes" xml:space="preserve">
          <source>NSIS</source>
          <target state="translated">NSIS</target>
        </trans-unit>
        <trans-unit id="273a0d30662970ff3c1562fa729c143a281a5505" translate="yes" xml:space="preserve">
          <source>Naming Things</source>
          <target state="translated">명명 것들</target>
        </trans-unit>
        <trans-unit id="ae115ec106ec45e4acef8b97a3b04cca7c1f1d09" translate="yes" xml:space="preserve">
          <source>Native &lt;code&gt;window.open()&lt;/code&gt; allows synchronous access to opened windows so it is convenient choice if you need to open a dialog or a preferences window.</source>
          <target state="translated">기본 &lt;code&gt;window.open()&lt;/code&gt; 사용하면 열린 창에 동기식으로 액세스 할 수 있으므로 대화 상자 나 환경 설정 창을 열어야하는 경우 편리한 선택입니다.</target>
        </trans-unit>
        <trans-unit id="7d611eb47a347300aeaa1deaddf41b48c00f9725" translate="yes" xml:space="preserve">
          <source>Native File Drag &amp;amp; Drop</source>
          <target state="translated">기본 파일 드래그 앤 드롭</target>
        </trans-unit>
        <trans-unit id="ac15282ea8b85dc5260071b32c7e5ff56c9c347e" translate="yes" xml:space="preserve">
          <source>Native Node modules are supported by Electron, but since Electron is very likely to use a different V8 version from the Node binary installed in your system, you have to manually specify the location of Electron&amp;rsquo;s headers when building native modules.</source>
          <target state="translated">기본 노드 모듈은 Electron에서 지원되지만 Electron은 시스템에 설치된 Node 바이너리와 다른 V8 버전을 사용할 가능성이 높으므로 기본 모듈을 작성할 때 Electron 헤더의 위치를 ​​수동으로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="0c4e246e4c5248d193e844f72b5652be7b507bcc" translate="yes" xml:space="preserve">
          <source>Native Node.js modules</source>
          <target state="translated">기본 Node.js 모듈</target>
        </trans-unit>
        <trans-unit id="252c5b3fb963128ed002a67e92becb15fcab1ed6" translate="yes" xml:space="preserve">
          <source>Native modules (also called &lt;a href=&quot;https://nodejs.org/api/addons.html&quot;&gt;addons&lt;/a&gt; in Node.js) are modules written in C or C++ that can be loaded into Node.js or Electron using the require() function, and used as if they were an ordinary Node.js module. They are used primarily to provide an interface between JavaScript running in Node.js and C/C++ libraries.</source>
          <target state="translated">네이티브 모듈 ( Node.js에서 &lt;a href=&quot;https://nodejs.org/api/addons.html&quot;&gt;애드온&lt;/a&gt; 이라고도 함 )은 require () 함수를 사용하여 Node.js 또는 Electron에로드 할 수있는 C 또는 C ++로 작성된 모듈로 일반 Node.js 모듈처럼 사용됩니다. 주로 Node.js에서 실행되는 JavaScript와 C / C ++ 라이브러리 간의 인터페이스를 제공하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="95da8c4ccd596fdaf1d4ac210f1d149385879626" translate="yes" xml:space="preserve">
          <source>Native modules used in your app also need to be signed. If using electron-osx-sign, be sure to include the path to the built binaries in the argument list:</source>
          <target state="translated">앱에서 사용되는 기본 모듈도 서명해야합니다. electron-osx-sign을 사용하는 경우 인수 목록에 빌드 된 바이너리의 경로를 포함시켜야합니다.</target>
        </trans-unit>
        <trans-unit id="3c1a0aac6eaaa3568576fc55694001ccec9a9126" translate="yes" xml:space="preserve">
          <source>Natively wrap images such as tray, dock, and application icons.</source>
          <target state="translated">트레이, 독 및 응용 프로그램 아이콘과 같은 이미지를 기본적으로 감 쌉니다.</target>
        </trans-unit>
        <trans-unit id="e29cb027789071ad70a535a33a8f10fdf355c340" translate="yes" xml:space="preserve">
          <source>Navigate to &lt;code&gt;chrome://extensions&lt;/code&gt;, and find its extension ID, which is a hash string like &lt;code&gt;fmkadmapgofadopljbjfkapdkoienihi&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;chrome://extensions&lt;/code&gt; 로 이동하여 확장 ID ( &lt;code&gt;fmkadmapgofadopljbjfkapdkoienihi&lt;/code&gt; 와 같은 해시 문자열)를 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="5e6c22608544a75c4105c8e3ea59ba4558dab1e1" translate="yes" xml:space="preserve">
          <source>Navigates browser to the specified absolute web page index.</source>
          <target state="translated">브라우저를 지정된 절대 웹 페이지 색인으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="096aee03999803b7750d1f1e58efbe795719b44e" translate="yes" xml:space="preserve">
          <source>Navigates to the specified absolute index.</source>
          <target state="translated">지정된 절대 인덱스로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="5da599b4dcf6a1a695f24f512ee12b0c89165ea2" translate="yes" xml:space="preserve">
          <source>Navigates to the specified offset from the &quot;current entry&quot;.</source>
          <target state="translated">&quot;현재 항목&quot;에서 지정된 오프셋으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="16e340746126ed50b9b41c11e75938dcc3f78df2" translate="yes" xml:space="preserve">
          <source>Nepali</source>
          <target state="translated">Nepali</target>
        </trans-unit>
        <trans-unit id="0f04ef9e75e01e7515a22d9e98493a1c51268306" translate="yes" xml:space="preserve">
          <source>Network Access</source>
          <target state="translated">네트워크 액세스</target>
        </trans-unit>
        <trans-unit id="dea662d4213385906aca0bf7758685ae7df5d472" translate="yes" xml:space="preserve">
          <source>New features added to Electron should primarily be native APIs. If a feature can be its own Node.js module, it probably should be. See the &lt;a href=&quot;https://electronjs.org/community&quot;&gt;Electron tools built by the community&lt;/a&gt;.</source>
          <target state="translated">Electron에 추가 된 새로운 기능은 기본적으로 기본 API 여야합니다. 기능이 자체 Node.js 모듈 일 수 있다면 아마도 그럴 것입니다. &lt;a href=&quot;https://electronjs.org/community&quot;&gt;커뮤니티에서 구축 한 Electron 도구를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2e8b4b10c7bf8faf81576631e2d2607ea58bd942" translate="yes" xml:space="preserve">
          <source>New features of Node.js are usually brought by V8 upgrades, since Electron is using the V8 shipped by Chrome browser, the shiny new JavaScript feature of a new Node.js version is usually already in Electron.</source>
          <target state="translated">Electron은 Chrome 브라우저에서 제공하는 V8을 사용하기 때문에 Node.js의 새로운 기능은 대개 V8 업그레이드를 통해 제공됩니다. 새로운 Node.js 버전의 반짝이는 새로운 JavaScript 기능은 보통 Electron에 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd1607d822da1cd7db9648fff4d1a2fb20f20f38" translate="yes" xml:space="preserve">
          <source>Next, construct the URL of the update server and tell &lt;a href=&quot;../api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; about it:</source>
          <target state="translated">다음으로, 업데이트 서버의 URL을 구성하고 &lt;a href=&quot;../api/auto-updater&quot;&gt;autoUpdater&lt;/a&gt; 에 이에 대한 정보를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="32c4b1de3a9f56586dd96265e3aec6259c4a4716" translate="yes" xml:space="preserve">
          <source>No confirmation dialog will be presented by default, if you wish to allow the user to confirm the operation you may do so using the &lt;a href=&quot;dialog&quot;&gt;&lt;code&gt;dialog&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">사용자가 &lt;a href=&quot;dialog&quot;&gt; &lt;code&gt;dialog&lt;/code&gt; &lt;/a&gt; API를 사용하여 작업을 확인할 수 있도록하려면 확인 대화 상자가 기본적으로 표시되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="af3b9ab53d82eb15fe1899738bc0d7df769b1ea4" translate="yes" xml:space="preserve">
          <source>No need to use link markup when referencing PRs. Strings like &lt;code&gt;#123&lt;/code&gt; will automatically be converted to links on github.com.</source>
          <target state="translated">PR을 참조 할 때 링크 마크 업을 사용할 필요가 없습니다. &lt;code&gt;#123&lt;/code&gt; 과 같은 문자열 은 github.com의 링크로 자동 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="850fae31c96276a74dcd3f2dd75d52f10ee5355f" translate="yes" xml:space="preserve">
          <source>Node API</source>
          <target state="translated">노드 API</target>
        </trans-unit>
        <trans-unit id="18e6baa5730021d04e9eaf16965f19f1b23a8dfd" translate="yes" xml:space="preserve">
          <source>Node integration will always be disabled in the opened &lt;code&gt;window&lt;/code&gt; if it is disabled on the parent window.</source>
          <target state="translated">부모 창 에서 노드 통합을 비활성화하면 열린 &lt;code&gt;window&lt;/code&gt; 에서 노드 통합이 항상 비활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="06c8c7552c1d8c757da60f82c5c852f21814e5f5" translate="yes" xml:space="preserve">
          <source>Node maintains its own fork of V8</source>
          <target state="translated">노드는 V8의 자체 포크를 유지합니다</target>
        </trans-unit>
        <trans-unit id="10b3493287f831e81a438811a1ffba01f8cec4b7" translate="yes" xml:space="preserve">
          <source>Node.js</source>
          <target state="translated">Node.js</target>
        </trans-unit>
        <trans-unit id="29fbb22c1376e061d9bda596cf1a09670be35490" translate="yes" xml:space="preserve">
          <source>Node.js major version updates</source>
          <target state="translated">Node.js 주요 버전 업데이트</target>
        </trans-unit>
        <trans-unit id="0edf4fc951592cff636d9829219dc676ea032486" translate="yes" xml:space="preserve">
          <source>Node.js minor version updates</source>
          <target state="translated">Node.js 부 버전 업데이트</target>
        </trans-unit>
        <trans-unit id="dfa646ee2d707cdcf97ec82e290c927dc78bf10d" translate="yes" xml:space="preserve">
          <source>Node.js patch version updates</source>
          <target state="translated">Node.js 패치 버전 업데이트</target>
        </trans-unit>
        <trans-unit id="41fc9647f853328b7dd9f5803d22c79f16061377" translate="yes" xml:space="preserve">
          <source>Node.js. There are various ways to install Node. You can download source code from &lt;a href=&quot;https://nodejs.org&quot;&gt;nodejs.org&lt;/a&gt; and compile it. Doing so permits installing Node on your own home directory as a standard user. Or try repositories such as &lt;a href=&quot;https://nodesource.com/blog/nodejs-v012-iojs-and-the-nodesource-linux-repositories&quot;&gt;NodeSource&lt;/a&gt;.</source>
          <target state="translated">Node.js. 노드를 설치하는 방법에는 여러 가지가 있습니다. &lt;a href=&quot;https://nodejs.org&quot;&gt;nodejs.org&lt;/a&gt; 에서 소스 코드를 다운로드 하여 컴파일 할 수 있습니다. 그렇게하면 표준 사용자로서 자신의 홈 디렉토리에 Node를 설치할 수 있습니다. 또는 &lt;a href=&quot;https://nodesource.com/blog/nodejs-v012-iojs-and-the-nodesource-linux-repositories&quot;&gt;NodeSource&lt;/a&gt; 와 같은 저장소를 사용해보십시오 .</target>
        </trans-unit>
        <trans-unit id="43645d9584cb12e426d0fe2c7d32bf6edb4bd70e" translate="yes" xml:space="preserve">
          <source>Non-standard features (that are not handled by Chromium or Electron) given in &lt;code&gt;features&lt;/code&gt; will be passed to any registered &lt;code&gt;webContent&lt;/code&gt;'s &lt;code&gt;new-window&lt;/code&gt; event handler in the &lt;code&gt;additionalFeatures&lt;/code&gt; argument.</source>
          <target state="translated">기능에 제공된 비표준 기능 (Chromium 또는 Electron에서 처리하지 않는 &lt;code&gt;features&lt;/code&gt; 은 &lt;code&gt;additionalFeatures&lt;/code&gt; 인수에 등록 된 &lt;code&gt;webContent&lt;/code&gt; 의 &lt;code&gt;new-window&lt;/code&gt; 이벤트 핸들러로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="79b723002f87708ebc11fd4f3b902a03f7c9a5c1" translate="yes" xml:space="preserve">
          <source>Norwegian</source>
          <target state="translated">Norwegian</target>
        </trans-unit>
        <trans-unit id="1fd773f7270851b6c0f785cf1c8b3ad262e28551" translate="yes" xml:space="preserve">
          <source>Norwegian (Bokmal)</source>
          <target state="translated">노르웨이어 (Bokmal)</target>
        </trans-unit>
        <trans-unit id="51bf329743c855bf7dc6f4020eb2ab76d286da23" translate="yes" xml:space="preserve">
          <source>Norwegian (Nynorsk)</source>
          <target state="translated">노르웨이어 (니 노르 스크)</target>
        </trans-unit>
        <trans-unit id="5140d673735e21810cb3644de66dcc4e9f32dacf" translate="yes" xml:space="preserve">
          <source>Not &lt;code&gt;return null&lt;/code&gt;, &lt;code&gt;return undefined&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;return null&lt;/code&gt; 안함 , &lt;code&gt;return undefined&lt;/code&gt; , &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;undefined&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ee1a6b1365a1b87ccbf238c954c25836b1d8612a" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;type&lt;/code&gt; should match actual type of &lt;code&gt;value&lt;/code&gt;. An exception is thrown if they don't.</source>
          <target state="translated">참고 &lt;code&gt;type&lt;/code&gt; 의 실제 유형과 일치해야합니다 &lt;code&gt;value&lt;/code&gt; . 그렇지 않은 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3938e66f59355a1e1fdfffa6a12a6f83a038fb1d" translate="yes" xml:space="preserve">
          <source>Note that all statistics are reported in Kilobytes.</source>
          <target state="translated">모든 통계는 킬로바이트 단위로보고됩니다.</target>
        </trans-unit>
        <trans-unit id="95ed4cd9e873cae3bfe1941051202b6af393dfe2" translate="yes" xml:space="preserve">
          <source>Note that because released Electron builds are heavily optimized, debugging is not always easy. The debugger will not be able to show you the content of all variables and the execution path can seem strange because of inlining, tail calls, and other compiler optimizations. The only workaround is to build an unoptimized local build.</source>
          <target state="translated">릴리스 된 Electron 빌드는 매우 최적화되어 있기 때문에 디버깅이 항상 쉬운 것은 아닙니다. 디버거는 모든 변수의 내용을 보여줄 수 없으며 인라인, 테일 호출 및 기타 컴파일러 최적화로 인해 실행 경로가 이상하게 보일 수 있습니다. 유일한 해결 방법은 최적화되지 않은 로컬 빌드를 빌드하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c57c65d5ac0ceb092e295f90d36125a6b1a639d3" translate="yes" xml:space="preserve">
          <source>Note that blindly calling this method probably makes Electron slower since it will have to refill these emptied caches, you should only call it if an event in your app has occurred that makes you think your page is actually using less memory (i.e. you have navigated from a super heavy page to a mostly empty one, and intend to stay there).</source>
          <target state="translated">이 메소드를 맹목적으로 호출하면 비어있는 캐시를 다시 채워야하므로 Electron이 느려질 수 있습니다. 앱에서 이벤트가 발생하여 페이지에서 실제로 메모리를 덜 사용한다고 생각하는 경우에만 호출해야합니다 (예 : 빈 페이지에 매우 무거워서 계속 유지하려고합니다.</target>
        </trans-unit>
        <trans-unit id="91fe91a59caa7f2571d180091fa2f1b4bd136763" translate="yes" xml:space="preserve">
          <source>Note that by default the &lt;code&gt;shared_library&lt;/code&gt; configuration is not built, so you can only build &lt;code&gt;Release&lt;/code&gt; version of Electron if you use this mode:</source>
          <target state="translated">기본적으로 &lt;code&gt;shared_library&lt;/code&gt; 구성은 빌드되지 않으므로이 모드를 사용하는 경우 &lt;code&gt;Release&lt;/code&gt; 버전의 Electron 만 빌드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8395177b79afdb728b7fbc2fb9a1f9c36a3715ec" translate="yes" xml:space="preserve">
          <source>Note that closing the devtools does not destroy the &lt;code&gt;devToolsWebContents&lt;/code&gt;, it is caller's responsibility to destroy &lt;code&gt;devToolsWebContents&lt;/code&gt;.</source>
          <target state="translated">DevTools로를 폐쇄하는 것은 파괴하지 않습니다 &lt;code&gt;devToolsWebContents&lt;/code&gt; 는 , 그것을 파괴하는 호출자의 책임입니다 &lt;code&gt;devToolsWebContents&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="1eedba0e2f0c0c9e262c378f7939d5ba00020db5" translate="yes" xml:space="preserve">
          <source>Note that even for apps that use &lt;code&gt;ready-to-show&lt;/code&gt; event, it is still recommended to set &lt;code&gt;backgroundColor&lt;/code&gt; to make app feel more native.</source>
          <target state="translated">&lt;code&gt;ready-to-show&lt;/code&gt; 이벤트 를 사용하는 앱의 경우에도 앱을 보다 기본적으로 느끼도록 &lt;code&gt;backgroundColor&lt;/code&gt; 를 설정하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="08183e08214b251b35c3a78f2bdb3429bcb63edb" translate="yes" xml:space="preserve">
          <source>Note that even if a native Node.js module is thread-safe it's still not safe to load it in a Web Worker because the &lt;code&gt;process.dlopen&lt;/code&gt; function is not thread safe.</source>
          <target state="translated">네이티브 Node.js 모듈이 스레드로부터 안전하더라도 &lt;code&gt;process.dlopen&lt;/code&gt; 함수는 스레드로부터 안전하지 않기 때문에 웹 워커에로드하는 것은 여전히 ​​안전 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4e121bdd5545f00f66c429e9bf4b431fdd189179" translate="yes" xml:space="preserve">
          <source>Note that it is not enough to call &lt;code&gt;app.commandLine.appendSwitch('--enable-sandbox')&lt;/code&gt;, as electron/node startup code runs after it is possible to make changes to chromium sandbox settings. The switch must be passed to electron on the command-line:</source>
          <target state="translated">전자 / 노드 시작 코드가 크롬 샌드 박스 설정을 변경 한 후에 실행 &lt;code&gt;app.commandLine.appendSwitch('--enable-sandbox')&lt;/code&gt; 를 호출하는 것만으로는 충분하지 않습니다 . 명령 줄에서 스위치를 전자에 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="c508dd193a53212800eba7a0f9bebf074a2cb119" translate="yes" xml:space="preserve">
          <source>Note that most chromium updates will be considered breaking. Fixes that can be backported will likely be cherry-picked as patches.</source>
          <target state="translated">대부분의 크롬 업데이트는 최신 버전으로 간주됩니다. 백 포트 할 수있는 수정 사항은 패치로 선택 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc8f7867794f761960f6e52c00d04a6ed42068f4" translate="yes" xml:space="preserve">
          <source>Note that multiple commits often get squashed when they are landed.</source>
          <target state="translated">여러 커밋이 착륙 할 때 종종 뭉개집니다.</target>
        </trans-unit>
        <trans-unit id="4395e7962b69e7ac44ab88b7ad7bf169f1421b25" translate="yes" xml:space="preserve">
          <source>Note that notifications are limited to 256 bytes in size and will be truncated if you exceed that limit.</source>
          <target state="translated">알림의 크기는 256 바이트로 제한되며 해당 제한을 초과하면 잘립니다.</target>
        </trans-unit>
        <trans-unit id="e93984575496bad02a8e3734296d35061d016065" translate="yes" xml:space="preserve">
          <source>Note that this method does not quit the app when executed, you have to call &lt;code&gt;app.quit&lt;/code&gt; or &lt;code&gt;app.exit&lt;/code&gt; after calling &lt;code&gt;app.relaunch&lt;/code&gt; to make the app restart.</source>
          <target state="translated">실행될 때이 방법은 응용 프로그램을 종료하지 않습니다, 당신은 전화로이 &lt;code&gt;app.quit&lt;/code&gt; 또는 &lt;code&gt;app.exit&lt;/code&gt; 호출 한 후 &lt;code&gt;app.relaunch&lt;/code&gt; 을 응용 프로그램을 다시 시작하기 위해.</target>
        </trans-unit>
        <trans-unit id="e08d170ebb9f28988bc671214d999a6d835b8873" translate="yes" xml:space="preserve">
          <source>Note the third parameter &lt;code&gt;true&lt;/code&gt; which means the listener will always receive key presses before other listeners so they can't have &lt;code&gt;stopPropagation()&lt;/code&gt; called on them.</source>
          <target state="translated">세 번째 매개 변수 &lt;code&gt;true&lt;/code&gt; 는 다른 리스너보다 먼저 리스너가 키 누름을 수신하므로 &lt;code&gt;stopPropagation()&lt;/code&gt; 호출 할 수 없다는 의미 입니다.</target>
        </trans-unit>
        <trans-unit id="fb99d36cac174b30cb19262d8b9442e6b4af1eb8" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; is known to have problems while the developer tools are open. See this &lt;a href=&quot;https://github.com/electron/electron/issues/3647&quot;&gt;GitHub issue&lt;/a&gt; for more information including a workaround.</source>
          <target state="translated">참고 : &lt;code&gt;-webkit-app-region: drag&lt;/code&gt; 개발자 도구가 열려있는 동안 드래그 에 문제가있는 것으로 알려져 있습니다. 해결 방법을 포함한 자세한 내용 은이 &lt;a href=&quot;https://github.com/electron/electron/issues/3647&quot;&gt;GitHub 문제&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="857f3244e22200575f24361a0a6bed40558140aa" translate="yes" xml:space="preserve">
          <source>Note: In general you should be using the latest Node during this process; however, older versions of the &lt;code&gt;publish-to-npm&lt;/code&gt; script may have trouble with Node 7 or higher. If you have trouble with this in an older branch, try running with an older version of Node, e.g. a 6.x LTS.</source>
          <target state="translated">참고 : 일반적으로이 프로세스 중에 최신 노드를 사용해야합니다. 그러나 &lt;code&gt;publish-to-npm&lt;/code&gt; 스크립트 의 이전 버전은 노드 7 이상에서 문제가있을 수 있습니다. 이전 분기에서이 문제가 발생하면 이전 버전의 Node (예 : 6.x LTS)로 실행 해보십시오.</target>
        </trans-unit>
        <trans-unit id="6cdd3e373b09cee7e85d4d4feba4e36696da41c4" translate="yes" xml:space="preserve">
          <source>Note: NW.js has optionally supported multi-context since 0.13.</source>
          <target state="translated">참고 : NW.js는 0.13부터 다중 컨텍스트를 선택적으로 지원했습니다.</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="6bda6fe60f2b8199e29a9c40e5ad1d09dcf8ce2b" translate="yes" xml:space="preserve">
          <source>Notes on macOS Application Menu</source>
          <target state="translated">macOS 응용 프로그램 메뉴에 대한 참고 사항</target>
        </trans-unit>
        <trans-unit id="5637e9944caf4f89cd62750a829b1c3fa5bc6385" translate="yes" xml:space="preserve">
          <source>Notice that the returned pointer is a weak pointer to the underlying native image instead of a copy, so you &lt;em&gt;must&lt;/em&gt; ensure that the associated &lt;code&gt;nativeImage&lt;/code&gt; instance is kept around.</source>
          <target state="translated">반환 된 포인터는 복사본 대신 기본 네이티브 이미지에 대한 약한 포인터이므로 연결된 &lt;code&gt;nativeImage&lt;/code&gt; 인스턴스가 유지 되도록 &lt;em&gt;해야합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c18f8f255ab9c208f23d0340eb9dff5a84efe311" translate="yes" xml:space="preserve">
          <source>Notification</source>
          <target state="translated">Notification</target>
        </trans-unit>
        <trans-unit id="a594ef9fc3a14f65f3d2ab8b828c8c75fe684d38" translate="yes" xml:space="preserve">
          <source>Notification()</source>
          <target state="translated">Notification()</target>
        </trans-unit>
        <trans-unit id="ac46cd6bf2ec7e9d90f5e3709af6c843ffd8a6af" translate="yes" xml:space="preserve">
          <source>NotificationAction</source>
          <target state="translated">NotificationAction</target>
        </trans-unit>
        <trans-unit id="40564c7354196ec7b43499a220981a5f70e93b10" translate="yes" xml:space="preserve">
          <source>NotificationAction Object</source>
          <target state="translated">NotificationAction 객체</target>
        </trans-unit>
        <trans-unit id="753a22b2eb617204efee4644795034b8ace1ee14" translate="yes" xml:space="preserve">
          <source>Notifications</source>
          <target state="translated">Notifications</target>
        </trans-unit>
        <trans-unit id="c6c0fd0a8fedd2b6b1ef8fbd8744de54662703f6" translate="yes" xml:space="preserve">
          <source>Notifications (Windows, Linux, macOS)</source>
          <target state="translated">알림 (Windows, Linux, macOS)</target>
        </trans-unit>
        <trans-unit id="d2650cb61a9299a0c8fb77939303cdda3e79f923" translate="yes" xml:space="preserve">
          <source>Notifications are sent using &lt;code&gt;libnotify&lt;/code&gt; which can show notifications on any desktop environment that follows &lt;a href=&quot;https://developer.gnome.org/notification-spec/&quot;&gt;Desktop Notifications Specification&lt;/a&gt;, including Cinnamon, Enlightenment, Unity, GNOME, KDE.</source>
          <target state="translated">Cinnamon, Enlightenment, Unity, GNOME, KDE를 포함하여 &lt;a href=&quot;https://developer.gnome.org/notification-spec/&quot;&gt;Desktop Notifications Specification&lt;/a&gt; 을 따르는 모든 데스크탑 환경에서 알림을 표시 할 수있는 &lt;code&gt;libnotify&lt;/code&gt; 를 사용하여 알림이 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="35bafe95fcb0bab1b6a8caea7673f3a3b5834500" translate="yes" xml:space="preserve">
          <source>Notifications are straight-forward on macOS, but you should be aware of &lt;a href=&quot;https://developer.apple.com/macos/human-interface-guidelines/system-capabilities/notifications/&quot;&gt;Apple's Human Interface guidelines regarding notifications&lt;/a&gt;.</source>
          <target state="translated">macOS에서는 알림이 간단하지만 &lt;a href=&quot;https://developer.apple.com/macos/human-interface-guidelines/system-capabilities/notifications/&quot;&gt;알림과 관련된 Apple의 휴먼 인터페이스 지침을&lt;/a&gt; 알고 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="ed0e8ffe3cf4db1b27449fea2b15ef5961dbabb0" translate="yes" xml:space="preserve">
          <source>Now that you've configured the basic update mechanism for your application, you need to ensure that the user will get notified when there's an update. This can be achieved using the autoUpdater API &lt;a href=&quot;../api/auto-updater#events&quot;&gt;events&lt;/a&gt;:</source>
          <target state="translated">응용 프로그램에 대한 기본 업데이트 메커니즘을 구성 했으므로 업데이트가있을 때 사용자에게 알림을 표시해야합니다. 이는 autoUpdater API &lt;a href=&quot;../api/auto-updater#events&quot;&gt;이벤트를&lt;/a&gt; 사용하여 달성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="abbe0677fa1392e41c33243fac215b9de1771cda" translate="yes" xml:space="preserve">
          <source>Now the branch is ready to be opened as a pull request.</source>
          <target state="translated">이제 지점을 풀 요청으로 열 준비가되었습니다.</target>
        </trans-unit>
        <trans-unit id="65e530ec35cfd4c1145e1bebf7e8070b8c5edb30" translate="yes" xml:space="preserve">
          <source>Now, if you open up Electron's developer tools and call &lt;code&gt;setName&lt;/code&gt;, you will once again hit the breakpoint.</source>
          <target state="translated">이제 Electron의 개발자 도구를 열고 &lt;code&gt;setName&lt;/code&gt; 을 호출 하면 중단 점에 다시 도달하게됩니다.</target>
        </trans-unit>
        <trans-unit id="a2d0cf792e2e66a08ef4428e45ba19479e6d7246" translate="yes" xml:space="preserve">
          <source>Nullsoft Scriptable Install System is a script-driven Installer authoring tool for Microsoft Windows. It is released under a combination of free software licenses, and is a widely-used alternative to commercial proprietary products like InstallShield. &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;electron-builder&lt;/a&gt; supports NSIS as a build target.</source>
          <target state="translated">Nullsoft Scriptable Install System은 Microsoft Windows 용 스크립트 기반 설치 프로그램 작성 도구입니다. 이 소프트웨어는 무료 소프트웨어 라이센스의 조합으로 배포되며 InstallShield와 같은 상업용 독점 제품에 대한 널리 사용되는 대안입니다. &lt;a href=&quot;https://github.com/electron-userland/electron-builder&quot;&gt;electron-builder&lt;/a&gt; 는 빌드 대상으로 NSIS를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="8e947de0e02745757e78e2c843661c374d389f89" translate="yes" xml:space="preserve">
          <source>OSR</source>
          <target state="translated">OSR</target>
        </trans-unit>
        <trans-unit id="8208349e3cbd33043b272ef1b88fca8dfb159e64" translate="yes" xml:space="preserve">
          <source>OSR (Off-screen rendering) can be used for loading heavy page in background and then displaying it after (it will be much faster). It allows you to render page without showing it on screen.</source>
          <target state="translated">OSR (Off-screen rendering)을 사용하면 배경에 무거운 페이지를로드 한 후 표시 할 수 있습니다 (훨씬 빠릅니다). 화면에 표시하지 않고 페이지를 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="33658a4e2701149e1a4ddd472a0648928297bf4f" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new BrowserView&lt;/code&gt; have the following instance methods:</source>
          <target state="translated">&lt;code&gt;new BrowserView&lt;/code&gt; 생성 된 객체 에는 다음과 같은 인스턴스 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9795168f6b349083e3eebd6949c6091a304887b3" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new BrowserView&lt;/code&gt; have the following properties:</source>
          <target state="translated">&lt;code&gt;new BrowserView&lt;/code&gt; 작성된 오브젝트 에는 다음 특성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b49c77bbbf49bf0356e35fd42f88deeaf12a01db" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new BrowserWindow&lt;/code&gt; emit the following events:</source>
          <target state="translated">&lt;code&gt;new BrowserWindow&lt;/code&gt; 생성 된 객체 는 다음과 같은 이벤트를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="159f92ad7fea76c83f9c8b2328c92786e755851e" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new BrowserWindow&lt;/code&gt; have the following instance methods:</source>
          <target state="translated">&lt;code&gt;new BrowserWindow&lt;/code&gt; 생성 된 객체 에는 다음과 같은 인스턴스 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0dd72c18bb11c45514bb4e5dc8e54091aa186de" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new BrowserWindow&lt;/code&gt; have the following properties:</source>
          <target state="translated">&lt;code&gt;new BrowserWindow&lt;/code&gt; 생성 된 객체 는 다음과 같은 속성을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="9beb8e44c703cb8648a80c808fad9139f7c84c4c" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new Menu&lt;/code&gt; emit the following events:</source>
          <target state="translated">&lt;code&gt;new Menu&lt;/code&gt; 생성 된 객체 는 다음과 같은 이벤트를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="f4e254bf48842d766b6aebdf62f342ea7756100e" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new Menu&lt;/code&gt; or returned by &lt;code&gt;Menu.buildFromTemplate&lt;/code&gt; emit the following events:</source>
          <target state="translated">&lt;code&gt;new Menu&lt;/code&gt; 만들 거나 &lt;code&gt;Menu.buildFromTemplate&lt;/code&gt; 에서 반환 한 객체 는 다음과 같은 이벤트를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="5010471810dd09f6d0dcef00c7180209b4d76008" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new Notification&lt;/code&gt; emit the following events:</source>
          <target state="translated">&lt;code&gt;new Notification&lt;/code&gt; 으로 생성 된 객체 는 다음과 같은 이벤트를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="55a3ac4d31a0b03e344fb88c400cc92b93ef6209" translate="yes" xml:space="preserve">
          <source>Objects created with &lt;code&gt;new Notification&lt;/code&gt; have the following instance methods:</source>
          <target state="translated">&lt;code&gt;new Notification&lt;/code&gt; 작성된 객체 에는 다음과 같은 인스턴스 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa226d0aa31507a49a884ea7baf4c1391ef97dbe" translate="yes" xml:space="preserve">
          <source>Occitan</source>
          <target state="translated">Occitan</target>
        </trans-unit>
        <trans-unit id="e67630caabf29751687a5cb1374761d41a2c37af" translate="yes" xml:space="preserve">
          <source>Official Electron builds are built with &lt;a href=&quot;http://adcdownload.apple.com/Developer_Tools/Xcode_8.2.1/Xcode_8.2.1.xip&quot;&gt;Xcode 8.2.1&lt;/a&gt;, which does not contain the 10.10 SDK by default. To obtain it, first download and mount the &lt;a href=&quot;http://developer.apple.com/devcenter/download.action?path=/Developer_Tools/Xcode_6.4/Xcode_6.4.dmg&quot;&gt;Xcode 6.4&lt;/a&gt; DMG.</source>
          <target state="translated">공식 Electron 빌드는 기본적으로 10.10 SDK를 포함하지 않는 &lt;a href=&quot;http://adcdownload.apple.com/Developer_Tools/Xcode_8.2.1/Xcode_8.2.1.xip&quot;&gt;Xcode 8.2.1로&lt;/a&gt; 빌드됩니다 . 이를 얻으려면 먼저 &lt;a href=&quot;http://developer.apple.com/devcenter/download.action?path=/Developer_Tools/Xcode_6.4/Xcode_6.4.dmg&quot;&gt;Xcode 6.4&lt;/a&gt; DMG를 다운로드하여 마운트하십시오 .</target>
        </trans-unit>
        <trans-unit id="712a04ce85e14167c7de62825fdc014691091bf0" translate="yes" xml:space="preserve">
          <source>Official Guides</source>
          <target state="translated">공식 가이드</target>
        </trans-unit>
        <trans-unit id="f55f923d2a1cd291e229ca8bf683b80f6340694e" translate="yes" xml:space="preserve">
          <source>Offline/Online Detection</source>
          <target state="translated">오프라인 / 온라인 탐지</target>
        </trans-unit>
        <trans-unit id="1df95ecefd5595862e9f3946295d5d0b2872cc0b" translate="yes" xml:space="preserve">
          <source>Offscreen Rendering</source>
          <target state="translated">오프 스크린 렌더링</target>
        </trans-unit>
        <trans-unit id="a2bb50744ae19bf7c0cece8e7ccd76862706f059" translate="yes" xml:space="preserve">
          <source>Offscreen rendering lets you obtain the content of a browser window in a bitmap, so it can be rendered anywhere, for example on a texture in a 3D scene. The offscreen rendering in Electron uses a similar approach than the &lt;a href=&quot;https://bitbucket.org/chromiumembedded/cef&quot;&gt;Chromium Embedded Framework&lt;/a&gt; project.</source>
          <target state="translated">오프 스크린 렌더링을 사용하면 비트 맵으로 브라우저 창의 내용을 얻을 수 있으므로 3D 장면의 텍스처 등 어디에서나 렌더링 할 수 있습니다. Electron의 오프 스크린 렌더링은 &lt;a href=&quot;https://bitbucket.org/chromiumembedded/cef&quot;&gt;Chromium Embedded Framework&lt;/a&gt; 프로젝트 와 유사한 방식을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="cb75572f6518e2b4d9ec1a8878a1d7c532cc9e23" translate="yes" xml:space="preserve">
          <source>Often the Release build will have different linking errors that you'll need to fix.</source>
          <target state="translated">릴리스 빌드에는 종종 수정해야 할 다른 연결 오류가 있습니다.</target>
        </trans-unit>
        <trans-unit id="c68e7ecd2431f1ba158da791ec6a678643496f18" translate="yes" xml:space="preserve">
          <source>Older lines will not be supported by GitHub, but other groups can take ownership and backport stability and security fixes on their own. We discourage this, but recognize that it makes life easier for many app developers.</source>
          <target state="translated">이전 라인은 GitHub에서 지원되지 않지만 다른 그룹은 소유권과 백 포트 안정성 및 보안 수정을 자체적으로 취할 수 있습니다. 우리는 이것을 권장하지 않지만 많은 앱 개발자가 인생을 더 쉽게 만든다는 것을 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="cff0c4b81a6d4d688edcd0fb4501754cd605b40b" translate="yes" xml:space="preserve">
          <source>OmahaProxy</source>
          <target state="translated">OmahaProxy</target>
        </trans-unit>
        <trans-unit id="1dd41cec5073739bf5a7f9e39333289dd7e89885" translate="yes" xml:space="preserve">
          <source>On &lt;em&gt;Linux&lt;/em&gt; and &lt;em&gt;macOS&lt;/em&gt;, icons depend on the application associated with file mime type.</source>
          <target state="translated">에 &lt;em&gt;리눅스&lt;/em&gt; 와 &lt;em&gt;맥 OS&lt;/em&gt; , 아이콘 파일의 MIME 타입과 연결된 응용 프로그램에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="b605a6af368c43a978b906d986fed972e9e7779d" translate="yes" xml:space="preserve">
          <source>On &lt;em&gt;Windows&lt;/em&gt;, there a 2 kinds of icons:</source>
          <target state="translated">에 &lt;em&gt;윈도우&lt;/em&gt; ,이 아이콘의 2가지 :</target>
        </trans-unit>
        <trans-unit id="ff60e9613d1f13404a1e463a64235f8be0a1bea8" translate="yes" xml:space="preserve">
          <source>On Fedora, install the following libraries:</source>
          <target state="translated">Fedora에서 다음 라이브러리를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="9df00d34c513832118c2176e40f5f645abf17f02" translate="yes" xml:space="preserve">
          <source>On Linux always returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Linux에서는 항상 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="b9cf55a56c003de0fd63c47953026707f35e6f0a" translate="yes" xml:space="preserve">
          <source>On Linux and Windows, the &lt;code&gt;Command&lt;/code&gt; key does not have any effect so use &lt;code&gt;CommandOrControl&lt;/code&gt; which represents &lt;code&gt;Command&lt;/code&gt; on macOS and &lt;code&gt;Control&lt;/code&gt; on Linux and Windows to define some accelerators.</source>
          <target state="translated">Linux 및 Windows에서 &lt;code&gt;Command&lt;/code&gt; 키를 사용하므로, 어떠한 효과가없는 &lt;code&gt;CommandOrControl&lt;/code&gt; 나타내는 &lt;code&gt;Command&lt;/code&gt; 맥 OS와에 &lt;code&gt;Control&lt;/code&gt; 일부 가속기를 정의하기 위해 리눅스와 윈도우에 있습니다.</target>
        </trans-unit>
        <trans-unit id="09927bca2807b444e68af8010e3eb95d77cf5004" translate="yes" xml:space="preserve">
          <source>On Linux distributions that only have app indicator support, you have to install &lt;code&gt;libappindicator1&lt;/code&gt; to make the tray icon work.</source>
          <target state="translated">앱 표시기 만 지원하는 Linux 배포 에서는 트레이 아이콘이 작동하도록 &lt;code&gt;libappindicator1&lt;/code&gt; 을 설치해야 합니다.</target>
        </trans-unit>
        <trans-unit id="d4ffda71afd8d95f3d5d382fda21cad9567eb6e6" translate="yes" xml:space="preserve">
          <source>On Linux in order for changes made to individual &lt;code&gt;MenuItem&lt;/code&gt;s to take effect, you have to call &lt;code&gt;setContextMenu&lt;/code&gt; again. For example:</source>
          <target state="translated">Linux에서 개별 &lt;code&gt;MenuItem&lt;/code&gt; 에 대한 변경 사항 을 적용하려면 &lt;code&gt;setContextMenu&lt;/code&gt; 를 다시 호출해야 합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d25f80bd1913ef0298c7ac73fdcc88165a8e90c9" translate="yes" xml:space="preserve">
          <source>On Linux many desktop environments do not support hiding a modal window.</source>
          <target state="translated">Linux에서 많은 데스크탑 환경은 모달 창 숨기기를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="64054e1bfae97d33f190cb6d1b6b2cb59989e9b4" translate="yes" xml:space="preserve">
          <source>On Linux platform, only supports Unity desktop environment, you need to specify the &lt;code&gt;*.desktop&lt;/code&gt; file name to &lt;code&gt;desktopName&lt;/code&gt; field in &lt;code&gt;package.json&lt;/code&gt;. By default, it will assume &lt;code&gt;app.getName().desktop&lt;/code&gt;.</source>
          <target state="translated">Linux 플랫폼에서는 Unity 데스크탑 환경 만 지원하므로 &lt;code&gt;package.json&lt;/code&gt; 의 &lt;code&gt;*.desktop&lt;/code&gt; 파일 이름을 &lt;code&gt;desktopName&lt;/code&gt; 필드 로 지정해야합니다 . 기본적으로 &lt;code&gt;app.getName().desktop&lt;/code&gt; 이라고 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="fc556337c6f12b29c561cc53f3788cf8066d7493" translate="yes" xml:space="preserve">
          <source>On Linux the app indicator will be used if it is supported, otherwise &lt;code&gt;GtkStatusIcon&lt;/code&gt; will be used instead.</source>
          <target state="translated">Linux에서는 앱 표시기가 지원되면 사용되며 그렇지 않으면 &lt;code&gt;GtkStatusIcon&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e2c237290a4057eaed8a5d209964105eb8512622" translate="yes" xml:space="preserve">
          <source>On Linux the plugin binaries are shipped together with Chrome browser, you can find them under &lt;code&gt;/opt/google/chrome&lt;/code&gt;, the filenames are &lt;code&gt;libwidevinecdm.so&lt;/code&gt; and &lt;code&gt;libwidevinecdmadapter.so&lt;/code&gt;.</source>
          <target state="translated">Linux에서 플러그인 바이너리는 Chrome 브라우저와 함께 제공되며 &lt;code&gt;/opt/google/chrome&lt;/code&gt; 에서 찾을 수 있으며 파일 이름은 &lt;code&gt;libwidevinecdm.so&lt;/code&gt; 및 &lt;code&gt;libwidevinecdmadapter.so&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7cd15dcf06126179b85e68ee618fba408f5f7c17" translate="yes" xml:space="preserve">
          <source>On Linux the type of modal windows will be changed to &lt;code&gt;dialog&lt;/code&gt;.</source>
          <target state="translated">Linux에서는 모달 창의 유형이 &lt;code&gt;dialog&lt;/code&gt; 로 변경됩니다 .</target>
        </trans-unit>
        <trans-unit id="65d731b4216c0b9d25e8da648f273953bb999ccf" translate="yes" xml:space="preserve">
          <source>On Linux, focuses on the first visible window. On macOS, makes the application the active app. On Windows, focuses on the application's first window.</source>
          <target state="translated">Linux에서는 첫 번째 표시 창에 중점을 둡니다. macOS에서는 응용 프로그램을 활성 응용 프로그램으로 만듭니다. Windows에서는 응용 프로그램의 첫 번째 창에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="8ef57ab9303969685f30709afe54551f5ac97291" translate="yes" xml:space="preserve">
          <source>On Linux, possible types are &lt;code&gt;desktop&lt;/code&gt;, &lt;code&gt;dock&lt;/code&gt;, &lt;code&gt;toolbar&lt;/code&gt;, &lt;code&gt;splash&lt;/code&gt;, &lt;code&gt;notification&lt;/code&gt;.</source>
          <target state="translated">Linux에서 가능한 유형은 &lt;code&gt;desktop&lt;/code&gt; , &lt;code&gt;dock&lt;/code&gt; , &lt;code&gt;toolbar&lt;/code&gt; , &lt;code&gt;splash&lt;/code&gt; , &lt;code&gt;notification&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1dca352ac4807a0f71b06d4364285f5ee47a679f" translate="yes" xml:space="preserve">
          <source>On Linux, users have to put &lt;code&gt;--enable-transparent-visuals --disable-gpu&lt;/code&gt; in the command line to disable GPU and allow ARGB to make transparent window, this is caused by an upstream bug that &lt;a href=&quot;https://code.google.com/p/chromium/issues/detail?id=369209&quot;&gt;alpha channel doesn't work on some NVidia drivers&lt;/a&gt; on Linux.</source>
          <target state="translated">Linux에서 사용자는 명령 줄 에 &lt;code&gt;--enable-transparent-visuals --disable-gpu&lt;/code&gt; 를 넣어 GPU를 비활성화하고 ARGB가 투명 창을 만들 수 있도록해야합니다. 이는 &lt;a href=&quot;https://code.google.com/p/chromium/issues/detail?id=369209&quot;&gt;알파 채널이 일부에서 작동하지 않는&lt;/a&gt; 업스트림 버그로 인해 발생합니다. Linux의 NVidia 드라이버</target>
        </trans-unit>
        <trans-unit id="21e8b969d4eb9b0689568607c75e662068d65643" translate="yes" xml:space="preserve">
          <source>On Mac, the native window shadow will not be shown on a transparent window.</source>
          <target state="translated">Mac에서는 기본 창 그림자가 투명 창에 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c9db96e7742ad2789c1db9be9817332c77b3f4fd" translate="yes" xml:space="preserve">
          <source>On RHEL / CentOS, install the following libraries:</source>
          <target state="translated">RHEL / CentOS에서 다음 라이브러리를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="e3beaea4fd3026c5977e5474d42e7bc1e179e30f" translate="yes" xml:space="preserve">
          <source>On Travis, your &lt;code&gt;.travis.yml&lt;/code&gt; should look roughly like this:</source>
          <target state="translated">Travis에서 &lt;code&gt;.travis.yml&lt;/code&gt; 은 대략 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="b0f687fec1ad97dcab1d5ee00eb902d02e07ae85" translate="yes" xml:space="preserve">
          <source>On Ubuntu, install the following libraries:</source>
          <target state="translated">우분투에서 다음 라이브러리를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="d79f9ec1efa8d85dd2eaa27515d35b62bec5fc8d" translate="yes" xml:space="preserve">
          <source>On Windows 10, a shortcut to your app with an &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;Application User Model ID&lt;/a&gt; must be installed to the Start Menu.</source>
          <target state="translated">Windows 10에서는 &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;응용 프로그램 사용자 모델 ID&lt;/a&gt; 가있는 앱 바로 가기가 시작 메뉴에 설치되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="158204f37fcdb734a933f29e5e206f94ab9744a3" translate="yes" xml:space="preserve">
          <source>On Windows 7, notifications work via a custom implementation which visually resembles the native one on newer systems.</source>
          <target state="translated">Windows 7에서 알림은 최신 시스템의 기본 알림과 시각적으로 유사한 사용자 지정 구현을 통해 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ac532371ea4a3568f398e7522e520757ae0841ee" translate="yes" xml:space="preserve">
          <source>On Windows 8.1 and Windows 8, a shortcut to your app with an &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;Application User Model ID&lt;/a&gt; must be installed to the Start screen. Note, however, that it does not need to be pinned to the Start screen.</source>
          <target state="translated">Windows 8.1 및 Windows 8에서는 &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/windows/desktop/dd378459(v=vs.85).aspx&quot;&gt;응용 프로그램 사용자 모델 ID&lt;/a&gt; 가있는 앱 바로 가기가 시작 화면에 설치되어 있어야합니다. 그러나 시작 화면에 고정 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="c11f27d46b1d1c963b3aea4ade3662a0a82e52aa" translate="yes" xml:space="preserve">
          <source>On Windows a taskbar button can be used to display a progress bar. This enables a window to provide progress information to the user without the user having to switch to the window itself.</source>
          <target state="translated">Windows에서는 작업 표시 줄 단추를 사용하여 진행률 표시 줄을 표시 할 수 있습니다. 이것은 사용자가 윈도우 자체로 전환 할 필요없이 윈도우가 사용자에게 진행 정보를 제공 할 수있게한다.</target>
        </trans-unit>
        <trans-unit id="118db4d60107c6dc6a0b03561d0955952b95fc16" translate="yes" xml:space="preserve">
          <source>On Windows a taskbar button can use a small overlay to display application status, as quoted from MSDN:</source>
          <target state="translated">Windows에서 작업 표시 줄 단추는 작은 오버레이를 사용하여 MSDN에서 인용 한대로 응용 프로그램 상태를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="437b8495d4350237f6ae5235bf717da334c226ea" translate="yes" xml:space="preserve">
          <source>On Windows and Linux always returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Windows 및 Linux에서는 항상 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="16584a41d4ea080224da151ed1fd19bbb62de610" translate="yes" xml:space="preserve">
          <source>On Windows and Linux:</source>
          <target state="translated">Windows 및 Linux에서 :</target>
        </trans-unit>
        <trans-unit id="c09288594ba580e8d6454045fc8d3cc4af991599" translate="yes" xml:space="preserve">
          <source>On Windows it is not supported to change parent window dynamically.</source>
          <target state="translated">Windows에서는 상위 창을 동적으로 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e63a28bcb85b5f4b20b6a348d0c5c27b4528effa" translate="yes" xml:space="preserve">
          <source>On Windows it is recommended to use &lt;code&gt;ICO&lt;/code&gt; icons to get best visual effects.</source>
          <target state="translated">Windows에서는 최상의 시각 효과를 얻으려면 &lt;code&gt;ICO&lt;/code&gt; 아이콘을 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="4d48f08ee5a6be0d4c73726951cf86f5832b7cc5" translate="yes" xml:space="preserve">
          <source>On Windows only &lt;code&gt;releaseName&lt;/code&gt; is available.</source>
          <target state="translated">Windows에서는 &lt;code&gt;releaseName&lt;/code&gt; 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00eb46388cf9db4458f404f55cd58cdb5b3d0aaa" translate="yes" xml:space="preserve">
          <source>On Windows operating systems, transparent windows will not work when DWM is disabled.</source>
          <target state="translated">Windows 운영 체제에서 DWM을 사용하지 않으면 투명 창이 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="890e5493c687e00e48bcbc4f18de9af380043e5f" translate="yes" xml:space="preserve">
          <source>On Windows the options are more limited, due to the Win32 APIs used:</source>
          <target state="translated">Windows에서는 사용 된 Win32 API로 인해 옵션이 더 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="5d9747468a0ea5d23be19d8e66d390b36dd26350" translate="yes" xml:space="preserve">
          <source>On Windows the path passed to &lt;code&gt;--ppapi-flash-path&lt;/code&gt; has to use &lt;code&gt;\&lt;/code&gt; as path delimiter, using POSIX-style paths will not work.</source>
          <target state="translated">Windows에서 &lt;code&gt;--ppapi-flash-path&lt;/code&gt; 로 전달 된 경로 는 &lt;code&gt;\&lt;/code&gt; 를 경로 구분 기호 로 사용해야 하며 POSIX 스타일 경로를 사용하면 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fb914279b524366ce3b126d942a95431ad2661dd" translate="yes" xml:space="preserve">
          <source>On Windows the required binaries are &lt;code&gt;widevinecdm.dll&lt;/code&gt; and &lt;code&gt;widevinecdmadapter.dll&lt;/code&gt;, on macOS they are &lt;code&gt;libwidevinecdm.dylib&lt;/code&gt; and &lt;code&gt;widevinecdmadapter.plugin&lt;/code&gt;. You can copy them to anywhere you like, but they have to be put together.</source>
          <target state="translated">Windows에서 필요한 바이너리는 &lt;code&gt;widevinecdm.dll&lt;/code&gt; 및 &lt;code&gt;widevinecdmadapter.dll&lt;/code&gt; 이고 macOS에서는 &lt;code&gt;libwidevinecdm.dylib&lt;/code&gt; 및 &lt;code&gt;widevinecdmadapter.plugin&lt;/code&gt; 입니다. 원하는 곳으로 복사 할 수 있지만 함께 모아야합니다.</target>
        </trans-unit>
        <trans-unit id="cef93dcf509e35de277c596d4f02fcf51928158b" translate="yes" xml:space="preserve">
          <source>On Windows the system assigns a trust level to your code signing certificate which if you don't have, or if your trust level is low will cause security dialogs to appear when users start using your application. Trust level builds over time so it's better to start code signing as early as possible.</source>
          <target state="translated">Windows에서 시스템은 코드 서명 인증서에 신뢰 레벨을 지정합니다. 인증 서명이 없거나 신뢰 레벨이 낮은 경우 사용자가 애플리케이션 사용을 시작할 때 보안 대화 상자가 나타납니다. 신뢰 수준은 시간이 지남에 따라 빌드되므로 가능한 빨리 코드 서명을 시작하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0527616434b21d002814451d17a6ee0eb72edcef" translate="yes" xml:space="preserve">
          <source>On Windows you can add a thumbnail toolbar with specified buttons in a taskbar layout of an application window. It provides users a way to access to a particular window's command without restoring or activating the window.</source>
          <target state="translated">Windows에서는 응용 프로그램 창의 작업 표시 줄 레이아웃에 지정된 단추가있는 축소판 도구 모음을 추가 할 수 있습니다. 창을 복원하거나 활성화하지 않고도 특정 창의 명령에 액세스 할 수있는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f373bc50ef1e10ee64478282d7a1b97783af36e6" translate="yes" xml:space="preserve">
          <source>On Windows you can highlight the taskbar button to get the user's attention. This is similar to bouncing the dock icon on macOS. From the MSDN reference documentation:</source>
          <target state="translated">Windows에서는 작업 표시 줄 단추를 강조 표시하여 사용자의주의를 끌 수 있습니다. 이것은 macOS에서 도크 아이콘을 수신 거부하는 것과 유사합니다. MSDN 참조 설명서에서 :</target>
        </trans-unit>
        <trans-unit id="3c46c57043e34d67484d57f8757ab56a3df794a0" translate="yes" xml:space="preserve">
          <source>On Windows you can provide optional parameters path, the path to your executable, and args, an array of arguments to be passed to your executable when it launches.</source>
          <target state="translated">Windows에서는 선택적 매개 변수 path, 실행 파일 경로 및 args, 실행 파일이 실행될 때 실행 파일로 전달 될 인수 배열을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f30aed1484dc20882b59dfac85e8fda6d673cced" translate="yes" xml:space="preserve">
          <source>On Windows, SMBv2 has a directory cache that will cause problems with the git cache script, so it is necessary to disable it by setting the registry key</source>
          <target state="translated">Windows에서 SMBv2에는 git cache 스크립트에 문제를 유발하는 디렉토리 캐시가 있으므로 레지스트리 키를 설정하여 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="2b082fe1b363a39db809e0477149680648c290c5" translate="yes" xml:space="preserve">
          <source>On Windows, a mode can be passed. Accepted values are &lt;code&gt;none&lt;/code&gt;, &lt;code&gt;normal&lt;/code&gt;, &lt;code&gt;indeterminate&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, and &lt;code&gt;paused&lt;/code&gt;. If you call &lt;code&gt;setProgressBar&lt;/code&gt; without a mode set (but with a value within the valid range), &lt;code&gt;normal&lt;/code&gt; will be assumed.</source>
          <target state="translated">Windows에서는 모드를 전달할 수 있습니다. 허용되는 값은 &lt;code&gt;none&lt;/code&gt; , &lt;code&gt;normal&lt;/code&gt; , &lt;code&gt;indeterminate&lt;/code&gt; , &lt;code&gt;error&lt;/code&gt; 및 &lt;code&gt;paused&lt;/code&gt; 입니다. 모드를 설정하지 않고 (유효 범위 내의 값으로) &lt;code&gt;setProgressBar&lt;/code&gt; 를 호출하면 &lt;code&gt;normal&lt;/code&gt; 으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="8e645a55425a69ee31ae274400940c40a0cabfa3" translate="yes" xml:space="preserve">
          <source>On Windows, possible type is &lt;code&gt;toolbar&lt;/code&gt;.</source>
          <target state="translated">Windows에서 가능한 유형은 &lt;code&gt;toolbar&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="78c2dbdb841cd73e268f0f6eacf3a5b75a6a3100" translate="yes" xml:space="preserve">
          <source>On Windows, you can also load &lt;code&gt;ICO&lt;/code&gt; icons from file paths. For best visual quality it is recommended to include at least the following sizes in the:</source>
          <target state="translated">Windows에서는 파일 경로에서 &lt;code&gt;ICO&lt;/code&gt; 아이콘을 로드 할 수도 있습니다 . 최상의 시각적 품질을 위해 최소한 다음 크기를 포함하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="27fa187906b876326016ad394754286efef3792a" translate="yes" xml:space="preserve">
          <source>On Windows, you have to install your app into a user's machine before you can use the &lt;code&gt;autoUpdater&lt;/code&gt;, so it is recommended that you use the &lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt;electron-winstaller&lt;/a&gt;, &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;electron-forge&lt;/a&gt; or the &lt;a href=&quot;https://github.com/electron/grunt-electron-installer&quot;&gt;grunt-electron-installer&lt;/a&gt; package to generate a Windows installer.</source>
          <target state="translated">Windows에서는 &lt;code&gt;autoUpdater&lt;/code&gt; 를 사용하기 전에 앱을 사용자 컴퓨터에 설치해야 하므로 &lt;a href=&quot;https://github.com/electron/windows-installer&quot;&gt;electron-winstaller&lt;/a&gt; , &lt;a href=&quot;https://github.com/electron-userland/electron-forge&quot;&gt;electron-forge&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/electron/grunt-electron-installer&quot;&gt;grunt-electron-installer&lt;/a&gt; 패키지를 사용하여 Windows 설치 프로그램을 생성하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="150e17f0ecce9fe33fbe81c12b65643384ffc06b" translate="yes" xml:space="preserve">
          <source>On Windows, you have to parse &lt;code&gt;process.argv&lt;/code&gt; (in the main process) to get the filepath.</source>
          <target state="translated">Windows에서는 파일 경로를 가져 오기 위해 &lt;code&gt;process.argv&lt;/code&gt; (주 프로세스에서)를 구문 분석 해야합니다.</target>
        </trans-unit>
        <trans-unit id="14ddeef3f76541485dc093f488797a02cd77368b" translate="yes" xml:space="preserve">
          <source>On X Window systems, there is also a selection clipboard. To manipulate it you need to pass &lt;code&gt;selection&lt;/code&gt; to each method:</source>
          <target state="translated">X Window 시스템에는 선택 클립 보드도 있습니다. 그것을 조작하려면 각 방법에 &lt;code&gt;selection&lt;/code&gt; 을 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e06a2a29df61f547f731b0958cf67e29eb89e00f" translate="yes" xml:space="preserve">
          <source>On all platforms, the visibility state tracks whether the window is hidden/minimized or not.</source>
          <target state="translated">모든 플랫폼에서 가시성 상태는 창이 숨겨 지거나 최소화되었는지 추적합니다.</target>
        </trans-unit>
        <trans-unit id="dd348a6925a30ffc3cba942b344c51b4cc128000" translate="yes" xml:space="preserve">
          <source>On electron/libchromiumcontent, this option is exposed through the &lt;code&gt;LIBCHROMIUMCONTENT_GIT_CACHE&lt;/code&gt; environment variable. If you intend to have several libchromiumcontent build trees on the same machine(to work on different branches for example), it is recommended to set the variable to speed up the download of Chromium source. For example:</source>
          <target state="translated">전자 / libchromiumcontent에서이 옵션은 &lt;code&gt;LIBCHROMIUMCONTENT_GIT_CACHE&lt;/code&gt; 환경 변수를 통해 노출됩니다 . 동일한 머신에서 여러 가지 libchromiumcontent 빌드 트리를 사용하려는 경우 (예 : 다른 브랜치에서 작업하기 위해) Chromium 소스 다운로드 속도를 높이기 위해 변수를 설정하는 것이 좋습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d5d29fa330ea984755517fe0efbe1523540801c7" translate="yes" xml:space="preserve">
          <source>On environments that have been using older versions of Electron, you might find the cache also in &lt;code&gt;~/.electron&lt;/code&gt;.</source>
          <target state="translated">이전 버전의 Electron을 사용했던 환경에서는 &lt;code&gt;~/.electron&lt;/code&gt; 에서도 캐시를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5216cda480d3345c1c54c9e19a792ece96b9144a" translate="yes" xml:space="preserve">
          <source>On how to get the ERN approval, you can reference the article: &lt;a href=&quot;https://carouselapps.com/2015/12/15/legally-submit-app-apples-app-store-uses-encryption-obtain-ern/&quot;&gt;How to legally submit an app to Apple&amp;rsquo;s App Store when it uses encryption (or how to obtain an ERN)&lt;/a&gt;.</source>
          <target state="translated">ERN 승인을 얻는 방법에 대한 기사를 참조 할 수 있습니다. &lt;a href=&quot;https://carouselapps.com/2015/12/15/legally-submit-app-apples-app-store-uses-encryption-obtain-ern/&quot;&gt;암호화를 사용할 때 Apple의 App Store에 앱을 합법적으로 제출하는 방법 (또는 ERN을 얻는 방법)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57c362811477f683b3a4b745ef3eea48bae29116" translate="yes" xml:space="preserve">
          <source>On macOS 10.9 Mavericks and newer, there's an alternative way to specify a chromeless window. Instead of setting &lt;code&gt;frame&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; which disables both the titlebar and window controls, you may want to have the title bar hidden and your content extend to the full window size, yet still preserve the window controls (&quot;traffic lights&quot;) for standard window actions. You can do so by specifying the &lt;code&gt;titleBarStyle&lt;/code&gt; option:</source>
          <target state="translated">macOS 10.9 Mavericks 이상에서는 크롬리스 윈도우를 지정하는 다른 방법이 있습니다. 제목 표시 줄과 창 컨트롤을 모두 비활성화하는 &lt;code&gt;frame&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정하는 대신 제목 표시 줄을 숨기고 내용을 전체 창 크기로 확장하고 표준 창 동작에 대한 창 컨트롤 ( &quot;신호등&quot;)을 유지하는 것이 좋습니다. . &lt;code&gt;titleBarStyle&lt;/code&gt; 옵션 을 지정하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="a2584409ed72447a0e460bfee3acbab390572762" translate="yes" xml:space="preserve">
          <source>On macOS a window can set its represented file, so the file's icon can show in the title bar and when users Command-Click or Control-Click on the title a path popup will show.</source>
          <target state="translated">macOS에서는 윈도우가 표시된 파일을 설정할 수 있으므로 파일 아이콘이 제목 표시 줄에 표시 될 수 있으며 사용자가 제목을 Command-Click 또는 Control-Click하면 경로 팝업이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a2655a587bc8e06a8ff58279f52a0b5d7c76d834" translate="yes" xml:space="preserve">
          <source>On macOS and Linux, the details of the Pepper Flash plugin can be found by navigating to &lt;code&gt;chrome://plugins&lt;/code&gt; in the Chrome browser. Its location and version are useful for Electron's Pepper Flash support. You can also copy it to another location.</source>
          <target state="translated">macOS 및 Linux에서는 Pepper 브라우저 의 세부 사항은 Chrome 브라우저에서 &lt;code&gt;chrome://plugins&lt;/code&gt; 로 이동하여 찾을 수 있습니다 . 위치와 버전은 Electron 's Pepper Flash 지원에 유용합니다. 다른 위치로 복사 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fe8d71464d08cd82c2244fa423a0fbc93a2a2f6" translate="yes" xml:space="preserve">
          <source>On macOS it sets the NSWindow's sharingType to NSWindowSharingNone. On Windows it calls SetWindowDisplayAffinity with &lt;code&gt;WDA_MONITOR&lt;/code&gt;.</source>
          <target state="translated">macOS에서는 NSWindow의 sharingType을 NSWindowSharingNone으로 설정합니다. Windows에서는 &lt;code&gt;WDA_MONITOR&lt;/code&gt; 와 함께 SetWindowDisplayAffinity를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="7b719ed9c305f63f420f6c9829ca0d539c95212d" translate="yes" xml:space="preserve">
          <source>On macOS it shows on the dock icon. On Linux it only works for Unity launcher,</source>
          <target state="translated">macOS에서는 도크 아이콘에 표시됩니다. Linux에서는 Unity 런처에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5b9c827b72f60556580bcb5998f26643c90f630d" translate="yes" xml:space="preserve">
          <source>On macOS modal windows will be displayed as sheets attached to the parent window.</source>
          <target state="translated">macOS에서는 모달 윈도우가 부모 윈도우에 첨부 된 시트로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="97b4e5bacd614db0d764685ab8808b714f27cedb" translate="yes" xml:space="preserve">
          <source>On macOS the child windows will keep the relative position to parent window when parent window moves, while on Windows and Linux child windows will not move.</source>
          <target state="translated">macOS에서는 자식 창이 부모 창이 이동할 때 부모 창의 상대 위치를 유지하지만 Windows와 Linux에서는 자식 창이 움직이지 않습니다.</target>
        </trans-unit>
        <trans-unit id="39f1dbf0ba55abc37d1e6fb150e9fcdcd3055d9c" translate="yes" xml:space="preserve">
          <source>On macOS the label of the application menu's first item is always your app's name, no matter what label you set. To change it, modify your app bundle's &lt;code&gt;Info.plist&lt;/code&gt; file. See &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/general/Reference/InfoPlistKeyReference/Articles/AboutInformationPropertyListFiles.html&quot;&gt;About Information Property List Files&lt;/a&gt; for more information.</source>
          <target state="translated">macOS에서 응용 프로그램 메뉴의 첫 번째 항목 레이블은 설정 한 레이블에 관계없이 항상 앱 이름입니다. 변경하려면 앱 번들의 &lt;code&gt;Info.plist&lt;/code&gt; 파일을 수정하십시오 . 자세한 &lt;a href=&quot;https://developer.apple.com/library/ios/documentation/general/Reference/InfoPlistKeyReference/Articles/AboutInformationPropertyListFiles.html&quot;&gt;내용은 정보 속성 목록 파일&lt;/a&gt; 정보를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="962efd6dbb14a99f9d0befa74276fb63cb5be210" translate="yes" xml:space="preserve">
          <source>On macOS the progress bar will be displayed as a part of the dock icon.</source>
          <target state="translated">macOS에서는 진행률 표시 줄이 도크 아이콘의 일부로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9ea80c98060bdc72945684d30b2f8a5c7ab7bcc9" translate="yes" xml:space="preserve">
          <source>On macOS the system can detect any change to the app, whether the change is introduced accidentally or by malicious code.</source>
          <target state="translated">macOS에서 시스템은 변경이 실수로 발생했는지 또는 악성 코드에 의해 발생했는지에 관계없이 앱의 변경 사항을 감지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3c9b3fca1c23e6c9ed465458eb791a4854332ee" translate="yes" xml:space="preserve">
          <source>On macOS the system enforces single instance automatically when users try to open a second instance of your app in Finder, and the &lt;code&gt;open-file&lt;/code&gt; and &lt;code&gt;open-url&lt;/code&gt; events will be emitted for that. However when users start your app in command line the system's single instance mechanism will be bypassed and you have to use this method to ensure single instance.</source>
          <target state="translated">macOS에서는 사용자가 Finder에서 앱의 두 번째 인스턴스를 열려고 할 때 시스템이 자동으로 단일 인스턴스를 시행하며,이를 위해 &lt;code&gt;open-file&lt;/code&gt; 및 &lt;code&gt;open-url&lt;/code&gt; 이벤트가 생성됩니다. 그러나 사용자가 명령 줄에서 앱을 시작하면 시스템의 단일 인스턴스 메커니즘이 무시되고 단일 인스턴스를 보장하려면이 방법을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="b7840f977bfb99194365725b9ce38b97953a1203" translate="yes" xml:space="preserve">
          <source>On macOS there are many system-defined standard menus, like the &lt;code&gt;Services&lt;/code&gt; and &lt;code&gt;Windows&lt;/code&gt; menus. To make your menu a standard menu, you should set your menu's &lt;code&gt;role&lt;/code&gt; to one of the following and Electron will recognize them and make them become standard menus:</source>
          <target state="translated">macOS에는 &lt;code&gt;Services&lt;/code&gt; 및 &lt;code&gt;Windows&lt;/code&gt; 메뉴 와 같은 시스템 정의 표준 메뉴가 많이 있습니다 . 메뉴를 표준 메뉴로 만들려면 메뉴의 &lt;code&gt;role&lt;/code&gt; 을 다음 중 하나로 설정해야합니다. 그러면 Electron이이를 인식하여 표준 메뉴로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="eca75d79de0a9a7453ab45469d56affb44220b51" translate="yes" xml:space="preserve">
          <source>On macOS, dialogs are presented as sheets attached to a window if you provide a &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt; reference in the &lt;code&gt;browserWindow&lt;/code&gt; parameter, or modals if no window is provided.</source>
          <target state="translated">macOS의 경우 , &lt;code&gt;browserWindow&lt;/code&gt; 매개 변수 에 &lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; 참조 를 제공하면 대화 상자가 창에 첨부 된 시트로 표시 되거나 창이 제공되지 않으면 모달이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="930eff2e98cbfe58c3b54a6114b8875b97f89d80" translate="yes" xml:space="preserve">
          <source>On macOS, possible types are &lt;code&gt;desktop&lt;/code&gt;, &lt;code&gt;textured&lt;/code&gt;.</source>
          <target state="translated">macOS에서 가능한 유형은 &lt;code&gt;desktop&lt;/code&gt; , &lt;code&gt;textured&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="00de65421124783bf23813e9e6459a80e63b403f" translate="yes" xml:space="preserve">
          <source>On macOS, the &lt;code&gt;autoUpdater&lt;/code&gt; module is built upon &lt;a href=&quot;https://github.com/Squirrel/Squirrel.Mac&quot;&gt;Squirrel.Mac&lt;/a&gt;, meaning you don't need any special setup to make it work. For server-side requirements, you can read &lt;a href=&quot;https://github.com/Squirrel/Squirrel.Mac#server-support&quot;&gt;Server Support&lt;/a&gt;. Note that &lt;a href=&quot;https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW35&quot;&gt;App Transport Security&lt;/a&gt; (ATS) applies to all requests made as part of the update process. Apps that need to disable ATS can add the &lt;code&gt;NSAllowsArbitraryLoads&lt;/code&gt; key to their app's plist.</source>
          <target state="translated">macOS에서 &lt;code&gt;autoUpdater&lt;/code&gt; 모듈은 &lt;a href=&quot;https://github.com/Squirrel/Squirrel.Mac&quot;&gt;Squirrel.Mac을&lt;/a&gt; 기반으로 하므로 작동하기 위해 특별한 설정이 필요하지 않습니다. 서버 측 요구 사항에 대해서는 서버 &lt;a href=&quot;https://github.com/Squirrel/Squirrel.Mac#server-support&quot;&gt;지원을&lt;/a&gt; 읽을 수 있습니다 . 하는 것으로 &lt;a href=&quot;https://developer.apple.com/library/content/documentation/General/Reference/InfoPlistKeyReference/Articles/CocoaKeys.html#//apple_ref/doc/uid/TP40009251-SW35&quot;&gt;응용 프로그램 전송 보안&lt;/a&gt; (ATS) 업데이트 프로세스의 일부로서 모든 요청에 적용됩니다. ATS를 비활성화해야하는 앱 은 &lt;code&gt;NSAllowsArbitraryLoads&lt;/code&gt; 키를 앱의 plist에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="40365161d9e6a461903a4a80d95269a07719a20f" translate="yes" xml:space="preserve">
          <source>On macOS, third-party assistive technology can switch accessibility inside Electron applications by setting the attribute &lt;code&gt;AXManualAccessibility&lt;/code&gt; programmatically:</source>
          <target state="translated">macOS에서 타사 지원 기술은 프로그래밍 방식으로 &lt;code&gt;AXManualAccessibility&lt;/code&gt; 속성을 설정하여 Electron 응용 프로그램 내에서 접근성을 전환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8060ac604c4db11844d351962afdfa9b65a22b9f" translate="yes" xml:space="preserve">
          <source>On macOS, this displays a modal dialog that shows a message and certificate information, and gives the user the option of trusting/importing the certificate. If you provide a &lt;code&gt;browserWindow&lt;/code&gt; argument the dialog will be attached to the parent window, making it modal.</source>
          <target state="translated">macOS에서는 메시지 및 인증서 정보를 표시하고 사용자에게 인증서 신뢰 / 가져 오기 옵션을 제공하는 모달 대화 상자가 표시됩니다. &lt;code&gt;browserWindow&lt;/code&gt; 인수 를 제공 하면 대화 상자가 부모 창에 첨부되어 모달이됩니다.</target>
        </trans-unit>
        <trans-unit id="7a42506216f6516bb98b755deb461c9962c4a02b" translate="yes" xml:space="preserve">
          <source>On macOS, you can specify the name of the sound you'd like to play when the notification is shown. Any of the default sounds (under System Preferences &amp;gt; Sound) can be used, in addition to custom sound files. Be sure that the sound file is copied under the app bundle (e.g., &lt;code&gt;YourApp.app/Contents/Resources&lt;/code&gt;), or one of the following locations:</source>
          <target state="translated">macOS에서는 알림이 표시 될 때 재생할 소리 이름을 지정할 수 있습니다. 사용자 정의 사운드 파일 외에 모든 기본 사운드 (시스템 환경 설정&amp;gt; 사운드 아래에 있음)를 사용할 수 있습니다. 사운드 파일이 앱 번들 (예 : &lt;code&gt;YourApp.app/Contents/Resources&lt;/code&gt; ) 또는 다음 위치 중 하나에 복사되어 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="05fa8d4a31ff2dd443da846d8cd791198ad32ce6" translate="yes" xml:space="preserve">
          <source>On macOS:</source>
          <target state="translated">macOS에서 :</target>
        </trans-unit>
        <trans-unit id="d91878d802027ae1f7f585fe6cea240e5c2e9867" translate="yes" xml:space="preserve">
          <source>On many Linux environments, you can add custom entries to its launcher by modifying the &lt;code&gt;.desktop&lt;/code&gt; file. For Canonical's Unity documentation, see &lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles#Adding_shortcuts_to_a_launcher&quot;&gt;Adding Shortcuts to a Launcher&lt;/a&gt;. For details on a more generic implementation, see the &lt;a href=&quot;https://specifications.freedesktop.org/desktop-entry-spec/1.1/ar01s11.html&quot;&gt;freedesktop.org Specification&lt;/a&gt;.</source>
          <target state="translated">많은 Linux 환경에서 &lt;code&gt;.desktop&lt;/code&gt; 파일 을 수정하여 시작 프로그램에 사용자 정의 항목을 추가 할 수 있습니다 . Canonical의 Unity 설명서 &lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles#Adding_shortcuts_to_a_launcher&quot;&gt;는 실행기에 바로 가기 추가를&lt;/a&gt; 참조하십시오 . 보다 일반적인 구현에 대한 자세한 내용은 &lt;a href=&quot;https://specifications.freedesktop.org/desktop-entry-spec/1.1/ar01s11.html&quot;&gt;freedesktop.org 사양을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3175a00a94b5ac5668bf15ea82680ed7696496dc" translate="yes" xml:space="preserve">
          <source>On platforms that have high-DPI support such as Apple Retina displays, you can append &lt;code&gt;@2x&lt;/code&gt; after image's base filename to mark it as a high resolution image.</source>
          <target state="translated">Apple Retina 디스플레이와 같이 DPI가 높은 플랫폼에서는 이미지의 기본 파일 이름 뒤에 &lt;code&gt;@2x&lt;/code&gt; 추가 하여 고해상도 이미지로 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4f14ae3997fd148e8454de2f452851367d49927" translate="yes" xml:space="preserve">
          <source>On slower networks, it may be advisable to use the &lt;code&gt;--verbose&lt;/code&gt; flag in order to show download progress:</source>
          <target state="translated">느린 네트워크 에서는 다운로드 진행률을 표시하기 위해 &lt;code&gt;--verbose&lt;/code&gt; 플래그 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="ad8c7ad7f0b9abe97f0528bf5c8da186b920bbfc" translate="yes" xml:space="preserve">
          <source>On some platforms, the draggable area will be treated as a non-client frame, so when you right click on it a system menu will pop up. To make the context menu behave correctly on all platforms you should never use a custom context menu on draggable areas.</source>
          <target state="translated">일부 플랫폼에서는 드래그 가능한 영역이 클라이언트가 아닌 프레임으로 취급되므로 마우스 오른쪽 버튼을 클릭하면 시스템 메뉴가 나타납니다. 모든 플랫폼에서 상황에 맞는 메뉴를 올바르게 작동 시키려면 드래그 가능한 영역에서 사용자 정의 상황에 맞는 메뉴를 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="05df37334108b614c859014ba1a56e7d96ade900" translate="yes" xml:space="preserve">
          <source>On the screen that allows you to configure the installation, make sure to select the &lt;code&gt;Node.js runtime&lt;/code&gt;, &lt;code&gt;npm package manager&lt;/code&gt;, and &lt;code&gt;Add to PATH&lt;/code&gt; options.</source>
          <target state="translated">설치를 구성 할 수있는 화면에서 &lt;code&gt;Node.js runtime&lt;/code&gt; , &lt;code&gt;npm package manager&lt;/code&gt; 및 &lt;code&gt;Add to PATH&lt;/code&gt; 옵션을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="5774f08783d2103ac6cbe1802349acb56ef498f7" translate="yes" xml:space="preserve">
          <source>Once all child processes have acknowledged the &lt;code&gt;captureMonitoringSnapshot&lt;/code&gt; request the &lt;code&gt;callback&lt;/code&gt; will be called with a file that contains the traced data.</source>
          <target state="translated">모든 하위 프로세스가 &lt;code&gt;captureMonitoringSnapshot&lt;/code&gt; 요청 을 승인 하면 추적 된 데이터가 포함 된 파일로 &lt;code&gt;callback&lt;/code&gt; 이 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="9c44343ed4ea2502c1fee0d7789757dcf9e4ffb5" translate="yes" xml:space="preserve">
          <source>Once all child processes have acknowledged the &lt;code&gt;getCategories&lt;/code&gt; request the &lt;code&gt;callback&lt;/code&gt; is invoked with an array of category groups.</source>
          <target state="translated">모든 하위 프로세스가 &lt;code&gt;getCategories&lt;/code&gt; 요청 을 승인하면 범주 그룹 배열로 &lt;code&gt;callback&lt;/code&gt; 이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="98776a3ffec4cad6c715b1def985b57231053670" translate="yes" xml:space="preserve">
          <source>Once all child processes have acknowledged the &lt;code&gt;startMonitoring&lt;/code&gt; request the &lt;code&gt;callback&lt;/code&gt; will be called.</source>
          <target state="translated">모든 하위 프로세스가 &lt;code&gt;startMonitoring&lt;/code&gt; 요청 을 승인 하면 &lt;code&gt;callback&lt;/code&gt; 이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7d6e3c4b0729dbc1bbdfda76bcdfcfd3875529bd" translate="yes" xml:space="preserve">
          <source>Once all child processes have acknowledged the &lt;code&gt;stopMonitoring&lt;/code&gt; request the &lt;code&gt;callback&lt;/code&gt; is called.</source>
          <target state="translated">모든 하위 프로세스가 &lt;code&gt;stopMonitoring&lt;/code&gt; 요청 을 승인 하면 &lt;code&gt;callback&lt;/code&gt; 이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b263577cee616902969d72ac20dba5b3da591aac" translate="yes" xml:space="preserve">
          <source>Once all child processes have acknowledged the &lt;code&gt;stopRecording&lt;/code&gt; request, &lt;code&gt;callback&lt;/code&gt; will be called with a file that contains the traced data.</source>
          <target state="translated">모든 하위 프로세스가 &lt;code&gt;stopRecording&lt;/code&gt; 요청 을 승인 하면 추적 된 데이터가 포함 된 파일로 &lt;code&gt;callback&lt;/code&gt; 이 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="dba12ea503ae33bccb24c51a78b166fd8cc1fc92" translate="yes" xml:space="preserve">
          <source>Once all of Electron's dependencies are building and using the same copy of V8, the next step is to fix any Electron code issues caused by the Node upgrade.</source>
          <target state="translated">Electron의 모든 종속성이 동일한 V8 사본을 빌드하고 사용하면 다음 단계는 노드 업그레이드로 인한 Electron 코드 문제를 해결하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="776b4d3131b12059ffa06e971d85117dff1673db" translate="yes" xml:space="preserve">
          <source>Once downloaded, execute the installer and let the installation wizard guide you through the installation.</source>
          <target state="translated">다운로드가 완료되면 설치 관리자를 실행하고 설치 마법사가 설치 과정을 안내합니다.</target>
        </trans-unit>
        <trans-unit id="9762bd3e5739d1cded2e18b07c4cca18f08e2ffd" translate="yes" xml:space="preserve">
          <source>Once executed, the tool goes to work: It accepts your Electron app as an input, flattening the &lt;code&gt;node_modules&lt;/code&gt;. Then, it archives your application as &lt;code&gt;app.zip&lt;/code&gt;. Using an installer and a Windows Container, the tool creates an &quot;expanded&quot; AppX package - including the Windows Application Manifest (&lt;code&gt;AppXManifest.xml&lt;/code&gt;) as well as the virtual file system and the virtual registry inside your output folder.</source>
          <target state="translated">일단 실행되면 도구가 작동합니다. Electron 앱을 입력으로 받아 &lt;code&gt;node_modules&lt;/code&gt; 를 평탄화합니다 . 그런 다음 애플리케이션을 &lt;code&gt;app.zip&lt;/code&gt; 으로 아카이브합니다 . 이 도구는 설치 프로그램과 Windows 컨테이너를 사용하여 Windows 응용 프로그램 매니페스트 ( &lt;code&gt;AppXManifest.xml&lt;/code&gt; )와 가상 파일 시스템 및 출력 폴더 내의 가상 레지스트리를 포함하여 &quot;확장 된&quot;AppX 패키지를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="8209fd5775eb5f0f6b38e2b831be94219fc12b2b" translate="yes" xml:space="preserve">
          <source>Once installation succeeded, you can move on to compiling your Electron app.</source>
          <target state="translated">설치가 완료되면 Electron 앱 컴파일로 넘어갈 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f52b764874aea12781ae2894d4d713d2983206de" translate="yes" xml:space="preserve">
          <source>Once installed, confirm that everything works as expected. Find the Windows PowerShell by opening the Start Menu and typing &lt;code&gt;PowerShell&lt;/code&gt;. Open up &lt;code&gt;PowerShell&lt;/code&gt; or another command line client of your choice and confirm that both &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; are available:</source>
          <target state="translated">설치가 완료되면 모든 것이 예상대로 작동하는지 확인하십시오. 시작 메뉴를 열고 입력하여 Windows PowerShell을 찾기 &lt;code&gt;PowerShell&lt;/code&gt; 을 . &lt;code&gt;PowerShell&lt;/code&gt; 또는 선택한 다른 명령 줄 클라이언트를 열고 &lt;code&gt;node&lt;/code&gt; 및 &lt;code&gt;npm&lt;/code&gt; 을 모두 사용할 수 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="0190d758bbb3600ff11db5af35330a7f595d05b3" translate="yes" xml:space="preserve">
          <source>Once installed, confirm that everything works as expected. Find the macOS &lt;code&gt;Terminal&lt;/code&gt; application in your &lt;code&gt;/Applications/Utilities&lt;/code&gt; folder (or by searching for the word &lt;code&gt;Terminal&lt;/code&gt; in Spotlight). Open up &lt;code&gt;Terminal&lt;/code&gt; or another command line client of your choice and confirm that both &lt;code&gt;node&lt;/code&gt; and &lt;code&gt;npm&lt;/code&gt; are available:</source>
          <target state="translated">설치가 완료되면 모든 것이 예상대로 작동하는지 확인하십시오. &lt;code&gt;/Applications/Utilities&lt;/code&gt; 폴더에서 또는 Spotlight에서 &lt;code&gt;Terminal&lt;/code&gt; 이라는 단어를 검색 하여 macOS &lt;code&gt;Terminal&lt;/code&gt; 응용 프로그램을 찾으십시오 . &lt;code&gt;Terminal&lt;/code&gt; 또는 선택한 다른 명령 행 클라이언트를 열고 &lt;code&gt;node&lt;/code&gt; 및 &lt;code&gt;npm&lt;/code&gt; 을 모두 사용할 수 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="de534bd247da2de87c3c6e4f6c1d1f88d0f52d3d" translate="yes" xml:space="preserve">
          <source>Once the expanded AppX files are created, the tool uses the Windows App Packager (&lt;code&gt;MakeAppx.exe&lt;/code&gt;) to create a single-file AppX package from those files on disk. Finally, the tool can be used to create a trusted certificate on your computer to sign the new AppX package. With the signed AppX package, the CLI can also automatically install the package on your machine.</source>
          <target state="translated">확장 된 AppX 파일이 만들어지면이 도구는 Windows App Packager ( &lt;code&gt;MakeAppx.exe&lt;/code&gt; )를 사용하여 디스크의 해당 파일에서 단일 파일 AppX 패키지를 만듭니다. 마지막으로이 도구를 사용하여 컴퓨터에서 신뢰할 수있는 인증서를 만들어 새 AppX 패키지에 서명 할 수 있습니다. 서명 된 AppX 패키지를 사용하여 CLI는 시스템에 패키지를 자동으로 설치할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="29a1565d09fedc8a37523bb2973f4deaa6a7b1de" translate="yes" xml:space="preserve">
          <source>Once the merge has finished successfully, run the &lt;code&gt;release&lt;/code&gt; script via &lt;code&gt;npm run release&lt;/code&gt; to finish the release process. This script will do the following: 1. Build the project to validate that the correct version number is being released. 2. Download the binaries and generate the node headers and the .lib linker used on Windows by node-gyp to build native modules. 3. Create and upload the SHASUMS files stored on S3 for the node files. 4. Create and upload the SHASUMS256.txt file stored on the GitHub release. 5. Validate that all of the required files are present on GitHub and S3 and have the correct checksums as specified in the SHASUMS files. 6. Publish the release on GitHub 7. Delete the &lt;code&gt;release&lt;/code&gt; branch.</source>
          <target state="translated">병합이 성공적으로 완료되면 &lt;code&gt;npm run release&lt;/code&gt; 를 통해 &lt;code&gt;release&lt;/code&gt; 스크립트를 실행 하여 릴리스 프로세스를 완료하십시오. 이 스크립트는 다음을 수행합니다. 1. 프로젝트를 빌드하여 올바른 버전 번호가 릴리스되고 있는지 확인합니다. 2. 바이너리를 다운로드하고 node-gyp가 Windows에서 사용하는 노드 헤더와 .lib 링커를 생성하여 기본 모듈을 만듭니다. 3. 노드 파일 용 S3에 저장된 SHASUMS 파일을 작성하고 업로드하십시오. 4. GitHub 릴리스에 저장된 SHASUMS256.txt 파일을 생성하고 업로드하십시오. 5. 필요한 모든 파일이 GitHub 및 S3에 있고 SHASUMS 파일에 지정된 올바른 체크섬이 있는지 확인하십시오. 6. GitHub에 릴리스를 게시하십시오. 7. &lt;code&gt;release&lt;/code&gt; 분기를 삭제하십시오 .</target>
        </trans-unit>
        <trans-unit id="018870f6c422a3d261faedabaa572318f015b552" translate="yes" xml:space="preserve">
          <source>Once the release builds have finished, merge the &lt;code&gt;release&lt;/code&gt; branch back into the source release branch using the &lt;code&gt;merge-release&lt;/code&gt; script. If the branch cannot be successfully merged back this script will automatically rebase the &lt;code&gt;release&lt;/code&gt; branch and push the changes which will trigger the release builds again, which means you will need to wait for the release builds to run again before proceeding.</source>
          <target state="translated">릴리스가 완료 빌드되면 병합 &lt;code&gt;release&lt;/code&gt; 사용하여 소스 릴리스 지점에 지점 다시 &lt;code&gt;merge-release&lt;/code&gt; 스크립트를. 분기를 성공적으로 병합 할 수없는 경우이 스크립트는 &lt;code&gt;release&lt;/code&gt; 분기를 자동으로 리베이스하고 변경 사항을 푸시하여 릴리스 빌드를 다시 트리거하므로 릴리스 빌드가 다시 실행될 때까지 기다려야 진행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="146982f70d5f8ded9db304459c8223f4a1fa2a13" translate="yes" xml:space="preserve">
          <source>Once you have committed your changes, it is a good idea to use &lt;code&gt;git rebase&lt;/code&gt; (not &lt;code&gt;git merge&lt;/code&gt;) to synchronize your work with the main repository.</source>
          <target state="translated">변경 사항을 커밋 한 후에는 &lt;code&gt;git rebase&lt;/code&gt; ( &lt;code&gt;git merge&lt;/code&gt; 아님)를 사용하여 작업을 기본 리포지토리와 동기화 하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="53708def307a9b9b51e0444894f876c949dae216" translate="yes" xml:space="preserve">
          <source>Once you have determined which type of version change is needed, run the &lt;code&gt;prepare-release&lt;/code&gt; script with arguments according to your need:</source>
          <target state="translated">필요한 버전 변경 유형을 결정한 후 필요 에 따라 인수와 함께 &lt;code&gt;prepare-release&lt;/code&gt; 스크립트를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="80a06ffe9368590b951905eb2fde9ce7315b5a43" translate="yes" xml:space="preserve">
          <source>Once you've built the project locally, you're ready to start making changes!</source>
          <target state="translated">프로젝트를 로컬로 빌드하면 변경을 시작할 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="9c276f933ac32fd3d3448dc805eaa775d162dfc2" translate="yes" xml:space="preserve">
          <source>Once you've created your initial &lt;code&gt;main.js&lt;/code&gt;, &lt;code&gt;index.html&lt;/code&gt;, and &lt;code&gt;package.json&lt;/code&gt; files, you can try your app by running &lt;code&gt;npm start&lt;/code&gt; from your application's directory.</source>
          <target state="translated">초기 &lt;code&gt;main.js&lt;/code&gt; , &lt;code&gt;index.html&lt;/code&gt; 및 &lt;code&gt;package.json&lt;/code&gt; 파일을 만든 후에는 애플리케이션 디렉토리에서 &lt;code&gt;npm start&lt;/code&gt; 를 실행하여 앱을 사용해 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b31e35ce4ec0bbb306af8b0e29fe2bd1021ed8c" translate="yes" xml:space="preserve">
          <source>Once you've deployed your update server, continue with importing the required modules in your code. The following code might vary for different server software, but it works like described when using &lt;a href=&quot;https://github.com/zeit/hazel&quot;&gt;Hazel&lt;/a&gt;.</source>
          <target state="translated">업데이트 서버를 배포 한 후에는 코드에서 필요한 모듈을 계속 가져옵니다. 다음 코드는 서버 소프트웨어마다 다를 수 있지만 &lt;a href=&quot;https://github.com/zeit/hazel&quot;&gt;Hazel&lt;/a&gt; 사용시 설명 된대로 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="064981ba6cdfd53aaad23b77588a841f3aba6ee6" translate="yes" xml:space="preserve">
          <source>Once your application is &lt;a href=&quot;application-distribution&quot;&gt;packaged&lt;/a&gt;, it will receive an update for each new &lt;a href=&quot;https://help.github.com/articles/creating-releases/&quot;&gt;GitHub Release&lt;/a&gt; that you publish.</source>
          <target state="translated">애플리케이션이 &lt;a href=&quot;application-distribution&quot;&gt;패키징&lt;/a&gt; 되면 게시하는 새로운 &lt;a href=&quot;https://help.github.com/articles/creating-releases/&quot;&gt;GitHub 릴리즈&lt;/a&gt; 마다 업데이트를받습니다 .</target>
        </trans-unit>
        <trans-unit id="ee767409aeb4133eb0ffcf2e9af7d2a59427d0b9" translate="yes" xml:space="preserve">
          <source>Once your commits are ready to go -- with passing tests and linting -- begin the process of opening a pull request by pushing your working branch to your fork on GitHub.</source>
          <target state="translated">테스트와 보푸라기를 통과하여 커밋을 시작할 준비가되면 작업 지점을 GitHub의 포크로 밀어 풀 요청을 여는 프로세스를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="96ff8cd263b4a1462748b61bea0d19cbedd36e79" translate="yes" xml:space="preserve">
          <source>Once, the lib is built, create a symlink to the built directory under download</source>
          <target state="translated">lib가 빌드되면 다운로드중인 빌드 된 디렉토리에 대한 심볼릭 링크를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1cfdf3d36632913f5a7e448e775909dc1fc34682" translate="yes" xml:space="preserve">
          <source>One of the key security features of Chromium is that all blink rendering/JavaScript code is executed within a sandbox. This sandbox uses OS-specific features to ensure that exploits in the renderer process cannot harm the system.</source>
          <target state="translated">Chromium의 주요 보안 기능 중 하나는 모든 깜박임 렌더링 / 자바 스크립트 코드가 샌드 박스 내에서 실행된다는 것입니다. 이 샌드 박스는 OS 별 기능을 사용하여 렌더러 프로세스의 익스플로잇으로 인해 시스템이 손상되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="a147608ca5bd5f2922cc0528d8c6928e11775edc" translate="yes" xml:space="preserve">
          <source>One planned enhancement that should greatly increase security is to block IPC messages from sandboxed renderers by default, allowing the main process to explicitly define a set of messages the renderer is allowed to send.</source>
          <target state="translated">보안을 크게 향상시켜야하는 계획된 개선 사항 중 하나는 기본적으로 샌드 박스 렌더러에서 IPC 메시지를 차단하여 기본 프로세스가 렌더러가 보낼 수있는 메시지 세트를 명시 적으로 정의 할 수 있도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="99744705bcbeb063f61bc8390c3d750f2309ed47" translate="yes" xml:space="preserve">
          <source>One upgrade issue is building all of Electron with a single copy of V8 to ensure compatibility. This is important because upstream Node and &lt;a href=&quot;upgrading-chromium&quot;&gt;libchromiumcontent&lt;/a&gt; both use their own versions of V8.</source>
          <target state="translated">한 가지 업그레이드 문제는 호환성을 보장하기 위해 V8의 단일 사본으로 모든 Electron을 빌드하는 것입니다. 업스트림 노드와 &lt;a href=&quot;upgrading-chromium&quot;&gt;libchromiumcontent는&lt;/a&gt; 모두 자체 버전의 V8을 사용 하기 때문에 이것은 중요 합니다.</target>
        </trans-unit>
        <trans-unit id="9932af99967f42cc38fbd13ef5168301ea164088" translate="yes" xml:space="preserve">
          <source>One-liner for the latest stable mac version: &lt;code&gt;curl -so- https://omahaproxy.appspot.com/mac &amp;gt; VERSION&lt;/code&gt;</source>
          <target state="translated">최신 안정된 Mac 버전을위한 하나의 라이너 : &lt;code&gt;curl -so- https://omahaproxy.appspot.com/mac &amp;gt; VERSION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="53db714ea1277ad5e9f60f9af9067c62522f2da3" translate="yes" xml:space="preserve">
          <source>One-liner for the latest win64 beta version: &lt;code&gt;curl -so- https://omahaproxy.appspot.com/all | grep &quot;win64,beta&quot; | awk -F, 'NR==1{print $3}' &amp;gt; VERSION&lt;/code&gt;</source>
          <target state="translated">최신 win64 베타 버전을위한 하나의 라이너 : &lt;code&gt;curl -so- https://omahaproxy.appspot.com/all | grep &quot;win64,beta&quot; | awk -F, 'NR==1{print $3}' &amp;gt; VERSION&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="abd4bbe261603692df27f3b3e7a61372efdea2c2" translate="yes" xml:space="preserve">
          <source>Online/Offline Event Detection</source>
          <target state="translated">온라인 / 오프라인 이벤트 감지</target>
        </trans-unit>
        <trans-unit id="e68be3e69c989094db5ef8028d36a4a57dd58c6c" translate="yes" xml:space="preserve">
          <source>Only 64bit binaries are provided for macOS, and the minimum macOS version supported is macOS 10.9.</source>
          <target state="translated">macOS에는 64 비트 바이너리 만 제공되며 지원되는 최소 macOS 버전은 macOS 10.9입니다.</target>
        </trans-unit>
        <trans-unit id="09c3b33ff6c4a5729d827169c013ea2302cff06b" translate="yes" xml:space="preserve">
          <source>Only load secure content</source>
          <target state="translated">안전한 콘텐츠 만로드</target>
        </trans-unit>
        <trans-unit id="5f51e85615b4a968e854ef7f5865e4da533c71bd" translate="yes" xml:space="preserve">
          <source>Only the first one is used. If multiple are provided, those beyond the first will be listed as additional actions (displayed when mouse active over the action button). Any such action also is incompatible with &lt;code&gt;hasReply&lt;/code&gt; and will be ignored if &lt;code&gt;hasReply&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; .</source>
          <target state="translated">첫 번째 것만 사용됩니다. 여러 개가 제공되는 경우 첫 번째 이외의 항목은 추가 작업으로 표시됩니다 (작업 버튼 위에 마우스가 활성화되면 표시됨). 이러한 조치는 &lt;code&gt;hasReply&lt;/code&gt; 와도 호환되지 &lt;code&gt;hasReply&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="f174f6b2e526237a94d6c82041bd806c03f336ab" translate="yes" xml:space="preserve">
          <source>Only the stable channel of Chrome is used. If an important fix is in beta or dev channel, we will back-port it.</source>
          <target state="translated">Chrome의 안정적인 채널 만 사용됩니다. 중요한 수정 사항이 베타 또는 개발자 채널 인 경우 백 포트합니다.</target>
        </trans-unit>
        <trans-unit id="524d4649df49e0f25d3d223d5bd0ba7b6a2181a9" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://www.dash-player.com/demo/drm-test-area/&quot;&gt;http://www.dash-player.com/demo/drm-test-area/&lt;/a&gt;, check whether the page says &lt;code&gt;bitdash uses Widevine in your browser&lt;/code&gt;, then play the video.</source>
          <target state="translated">&lt;a href=&quot;http://www.dash-player.com/demo/drm-test-area/&quot;&gt;http://www.dash-player.com/demo/drm-test-area/를&lt;/a&gt; 열고 페이지 &lt;code&gt;bitdash uses Widevine in your browser&lt;/code&gt; 하는지 여부를 확인한 다음 비디오를 재생하십시오.</target>
        </trans-unit>
        <trans-unit id="698e1eaa37d0aa74f264feab2e3553688b92bd0e" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;https://shaka-player-demo.appspot.com/&quot;&gt;https://shaka-player-demo.appspot.com/&lt;/a&gt; and load a manifest that uses &lt;code&gt;Widevine&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://shaka-player-demo.appspot.com/&quot;&gt;https://shaka-player-demo.appspot.com/을&lt;/a&gt; 열고 &lt;code&gt;Widevine&lt;/code&gt; 을 사용하는 매니페스트를로드 하십시오 .</target>
        </trans-unit>
        <trans-unit id="265c66a384b75881ff660808ed1cba9fd220e6ab" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Info.plist&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Info.plist&lt;/code&gt; 를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="ce2078dc5b9fcc322ad79af589dae59a57cb5b8a" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;chrome://components/&lt;/code&gt; in Chrome browser, find &lt;code&gt;WidevineCdm&lt;/code&gt; and make sure it is up to date, then you can find all the plugin binaries from the &lt;code&gt;Program Files(x86)/Google/Chrome/Application/VERSION/WidevineCDM/_platform_specific/PLATFORM_ARCH/&lt;/code&gt; directory.</source>
          <target state="translated">Chrome 브라우저에서 &lt;code&gt;chrome://components/&lt;/code&gt; 를 열고 &lt;code&gt;WidevineCdm&lt;/code&gt; 을 찾아 최신 상태인지 확인한 다음 &lt;code&gt;Program Files(x86)/Google/Chrome/Application/VERSION/WidevineCDM/_platform_specific/PLATFORM_ARCH/&lt;/code&gt; 에서 모든 플러그인 바이너리를 찾을 수 있습니다. PLATFORM_ARCH / 디렉토리.</target>
        </trans-unit>
        <trans-unit id="8db72797e15d549ca389e32d8083cb63d04c4802" translate="yes" xml:space="preserve">
          <source>Open a new window and load a URL.</source>
          <target state="translated">새 창을 열고 URL을로드하십시오.</target>
        </trans-unit>
        <trans-unit id="df66569cc6e6afb220ffbf6d2b7adcbc48a16d11" translate="yes" xml:space="preserve">
          <source>Open a window without toolbars, borders, or other graphical &quot;chrome&quot;.</source>
          <target state="translated">툴바, 테두리 또는 기타 그래픽 &quot;크롬&quot;없이 창을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="34a28ea3ae9ecbdbf3e1bb94c0eda57b35f7b31e" translate="yes" xml:space="preserve">
          <source>Open devtools and check whether &lt;code&gt;navigator.plugins&lt;/code&gt; includes the Widevine CDM plugin.</source>
          <target state="translated">devtools를 열고 &lt;code&gt;navigator.plugins&lt;/code&gt; 에 Widevine CDM 플러그인이 포함되어 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="8767b38ccc465dcdd919dccb24c4a15fb5460291" translate="yes" xml:space="preserve">
          <source>Open the given external protocol URL in the desktop's default manner. (For example, mailto: URLs in the user's default mail agent).</source>
          <target state="translated">데스크탑의 기본 방식으로 지정된 외부 프로토콜 URL을여십시오. (예 : mailto : 사용자 기본 메일 에이전트의 URL).</target>
        </trans-unit>
        <trans-unit id="a683b301d99f6c989fec699f23120fe44d252234" translate="yes" xml:space="preserve">
          <source>Open the given file in the desktop's default manner.</source>
          <target state="translated">데스크탑의 기본 방식으로 지정된 파일을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="3b823b976de0885fd5a717acb3a5685a59a5cb54" translate="yes" xml:space="preserve">
          <source>Opens a DevTools window for guest page.</source>
          <target state="translated">게스트 페이지에 대한 DevTools 창을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="414694f47784d351d0d66b622b44880bb219b6be" translate="yes" xml:space="preserve">
          <source>Opens the DevTools for the service worker context present in the guest page.</source>
          <target state="translated">게스트 페이지에있는 서비스 워커 컨텍스트에 대한 DevTools를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="68a6214fddfea0b441a7f17f6397c79b9c58debb" translate="yes" xml:space="preserve">
          <source>Opens the developer tools for the service worker context.</source>
          <target state="translated">서비스 워커 컨텍스트에 대한 개발자 도구를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="abf22d936cd3ab6e4ff86e36b994267ef455e2e9" translate="yes" xml:space="preserve">
          <source>Opens the devtools.</source>
          <target state="translated">devtools를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="4e27fc5a56ba64d45d09bd80fa644db16b9a4cd5" translate="yes" xml:space="preserve">
          <source>Optimizing compiler</source>
          <target state="translated">컴파일러 최적화</target>
        </trans-unit>
        <trans-unit id="80d9b72ea1c8f1787c347e35ccd1175f7a825495" translate="yes" xml:space="preserve">
          <source>Optional: Add UWP Features using a BackgroundTask</source>
          <target state="translated">선택 사항 : BackgroundTask를 사용하여 UWP 기능 추가</target>
        </trans-unit>
        <trans-unit id="e8de9b5cfe974e3ac30344817b777efcdb11949d" translate="yes" xml:space="preserve">
          <source>Optional: Convert using Container Virtualization</source>
          <target state="translated">선택 사항 : 컨테이너 가상화를 사용하여 변환</target>
        </trans-unit>
        <trans-unit id="9d9bcce22766242a692c07392d9626d02e911414" translate="yes" xml:space="preserve">
          <source>Or read the image from the clipboard which returns a &lt;code&gt;NativeImage&lt;/code&gt;:</source>
          <target state="translated">또는 클립 보드에서 &lt;code&gt;NativeImage&lt;/code&gt; 를 반환하는 이미지를 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="651a806b332d45e9f30ca8f251978c2732666026" translate="yes" xml:space="preserve">
          <source>Or view &lt;a href=&quot;https://github.com/electron/crashpad/commits/previous-branch-name&quot;&gt;https://github.com/electron/crashpad/commits/previous-branch-name&lt;/a&gt;</source>
          <target state="translated">또는 &lt;a href=&quot;https://github.com/electron/crashpad/commits/previous-branch-name&quot;&gt;https://github.com/electron/crashpad/commits/previous-branch-name을&lt;/a&gt; 봅니다.</target>
        </trans-unit>
        <trans-unit id="5225700698dd6a7df0e9ec33842d002b6d1fa24e" translate="yes" xml:space="preserve">
          <source>Or you can use the IPC system, which is specific to Electron, to store objects in the main process as a global variable, and then to access them from the renderers through the &lt;code&gt;remote&lt;/code&gt; property of &lt;code&gt;electron&lt;/code&gt; module:</source>
          <target state="translated">또는 Electron과 관련된 IPC 시스템을 사용하여 주 프로세스에서 객체를 전역 변수로 저장 한 다음 &lt;code&gt;electron&lt;/code&gt; 모듈 의 &lt;code&gt;remote&lt;/code&gt; 속성을 통해 렌더러에서 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c10643b85fbfbd4fbb63e61c52588993e2ffbfa5" translate="yes" xml:space="preserve">
          <source>Oriya</source>
          <target state="translated">Oriya</target>
        </trans-unit>
        <trans-unit id="cdde40b7cdbdf6471f71c878831054ceb02afaeb" translate="yes" xml:space="preserve">
          <source>Oromo</source>
          <target state="translated">Oromo</target>
        </trans-unit>
        <trans-unit id="b822462b62b0966fb729a938d96d627dc2946a3b" translate="yes" xml:space="preserve">
          <source>Other Tools and Boilerplates</source>
          <target state="translated">기타 도구 및 보일러 플레이트</target>
        </trans-unit>
        <trans-unit id="2489530e3022fc2dee88bba2c8eea65b468ed88b" translate="yes" xml:space="preserve">
          <source>Other distributions may offer similar packages for installation via package managers such as pacman. Or one can compile from source code.</source>
          <target state="translated">다른 배포판은 pacman과 같은 패키지 관리자를 통해 설치하기 위해 유사한 패키지를 제공 할 수 있습니다. 또는 소스 코드에서 컴파일 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34ccfe33ccaf70c20d9223b02137ae4913515126" translate="yes" xml:space="preserve">
          <source>Other means for installing Electron exist. Please consult the &lt;a href=&quot;installation&quot;&gt;installation guide&lt;/a&gt; to learn about use with proxies, mirrors, and custom caches.</source>
          <target state="translated">Electron을 설치하기위한 다른 수단이 존재합니다. 프록시, 미러 및 사용자 정의 캐시와 함께 사용하는 방법에 대해서는 &lt;a href=&quot;installation&quot;&gt;설치 안내서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="efdfba66cdf27ef875bb9d4971100d96e23a6de1" translate="yes" xml:space="preserve">
          <source>Other things to keep in mind when writing a commit message:</source>
          <target state="translated">커밋 메시지를 작성할 때 명심해야 할 다른 것들 :</target>
        </trans-unit>
        <trans-unit id="8eb35eb5263c9ae63a3c98ee9bf38cb2ccdd9990" translate="yes" xml:space="preserve">
          <source>Our strategy has a few tradeoffs, which for now we feel are appropriate. Most importantly that new features in master may take a while before reaching a stable release line. If you want to try a new feature immediately, you will have to build Electron yourself.</source>
          <target state="translated">우리의 전략에는 몇 가지 장단점이 있는데, 현재로서는 적절하다고 생각합니다. 가장 중요한 점은 마스터의 새로운 기능이 안정적인 릴리스 라인에 도달하기까지 시간이 걸릴 수 있다는 것입니다. 새로운 기능을 즉시 사용하려면 Electron을 직접 구축해야합니다.</target>
        </trans-unit>
        <trans-unit id="ef3cd7d2d24f7e37320f7fa6047d29e628259470" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;code&gt;path&lt;/code&gt; to a special directory or file associated with &lt;code&gt;name&lt;/code&gt;. If the path specifies a directory that does not exist, the directory will be created by this method. On failure an &lt;code&gt;Error&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 과 연관된 특수 디렉토리 또는 파일 의 &lt;code&gt;path&lt;/code&gt; 를 대체합니다 . 경로가 존재하지 않는 디렉토리를 지정하면이 메소드로 디렉토리가 작성됩니다. 실패하면 &lt;code&gt;Error&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d9fcf698030d714263c769f523705ea373aa8094" translate="yes" xml:space="preserve">
          <source>Overrides the &lt;code&gt;userAgent&lt;/code&gt; and &lt;code&gt;acceptLanguages&lt;/code&gt; for this session.</source>
          <target state="translated">이 세션에 대한 &lt;code&gt;userAgent&lt;/code&gt; 및 &lt;code&gt;acceptLanguages&lt;/code&gt; 를 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="62e5b17bb125ee02173fd3de2f85038d128b3e12" translate="yes" xml:space="preserve">
          <source>Overrides the current application's name.</source>
          <target state="translated">현재 응용 프로그램 이름을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="d626978538596411af1092e84b923536e440c5f5" translate="yes" xml:space="preserve">
          <source>Overrides the user agent for the guest page.</source>
          <target state="translated">게스트 페이지의 사용자 에이전트를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="667bce9263ee470f194153b33ed64daa93ecede6" translate="yes" xml:space="preserve">
          <source>Overrides the user agent for this web page.</source>
          <target state="translated">이 웹 페이지의 사용자 에이전트를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="41f1ed073588aa8127f5ec21426f1a1d3afd97ee" translate="yes" xml:space="preserve">
          <source>PBKDF2 - &lt;a href=&quot;https://tools.ietf.org/html/rfc2898&quot;&gt;RFC 2898&lt;/a&gt;</source>
          <target state="translated">PBKDF2- &lt;a href=&quot;https://tools.ietf.org/html/rfc2898&quot;&gt;RFC 2898&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35dde1a41cc9583f0aba39510fe609bed3090181" translate="yes" xml:space="preserve">
          <source>POSIX shell example:</source>
          <target state="translated">POSIX 쉘 예제 :</target>
        </trans-unit>
        <trans-unit id="4f2c91e60f87b798fc8b1daf301a1775f6845875" translate="yes" xml:space="preserve">
          <source>Package the application using &lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;electron-packager&lt;/a&gt; (or a similar tool). Make sure to remove &lt;code&gt;node_modules&lt;/code&gt; that you don't need in your final application, since any module you don't actually need will increase your application's size.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/electron-userland/electron-packager&quot;&gt;전자 패키저&lt;/a&gt; (또는 유사한 도구)를 사용하여 응용 프로그램을 패키지하십시오 . 실제로 필요하지 않은 모듈은 응용 프로그램의 크기를 증가 시키므로 최종 응용 프로그램에 필요하지 않은 &lt;code&gt;node_modules&lt;/code&gt; 를 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="3a39b68c35be609fae3db651a70893a29f102145" translate="yes" xml:space="preserve">
          <source>Packaging</source>
          <target state="translated">Packaging</target>
        </trans-unit>
        <trans-unit id="f6040caa38342b33a6e2561f81b6b745ebcb9010" translate="yes" xml:space="preserve">
          <source>Packaging Tools</source>
          <target state="translated">포장 도구</target>
        </trans-unit>
        <trans-unit id="f2f88690043494eaff489df1755ad734e4601324" translate="yes" xml:space="preserve">
          <source>Packaging Your App into a File</source>
          <target state="translated">앱을 파일로 패키징</target>
        </trans-unit>
        <trans-unit id="d6932a33a7ea7529e748ffd4e2cf89238214ab67" translate="yes" xml:space="preserve">
          <source>Page visibility</source>
          <target state="translated">페이지 가시성</target>
        </trans-unit>
        <trans-unit id="461fb079bf9bc5eadbc105028fc4954c4cef8ab4" translate="yes" xml:space="preserve">
          <source>Paid Applications Agreement</source>
          <target state="translated">유료 응용 프로그램 계약</target>
        </trans-unit>
        <trans-unit id="4b2609d41c5d5b2979141aeb1c932ae4c9884b80" translate="yes" xml:space="preserve">
          <source>Parent and child windows</source>
          <target state="translated">부모와 자식 창</target>
        </trans-unit>
        <trans-unit id="cc50b3253c9ec78d83c0178cbd9aff6a66d8ced8" translate="yes" xml:space="preserve">
          <source>Pashto</source>
          <target state="translated">Pashto</target>
        </trans-unit>
        <trans-unit id="924ed5f84b43a504120ae93740a6f288ace719a6" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--build_release_libcc&lt;/code&gt; switch to &lt;code&gt;bootstrap.py&lt;/code&gt; script:</source>
          <target state="translated">패스 &lt;code&gt;--build_release_libcc&lt;/code&gt; 로 전환 &lt;code&gt;bootstrap.py&lt;/code&gt; 스크립트를 :</target>
        </trans-unit>
        <trans-unit id="09a60a69d3768ba08acceb430b2193dfa1062021" translate="yes" xml:space="preserve">
          <source>Pass the location of the extension to &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt; API, for the React Developer Tools, it is something like: &lt;code&gt;~/Library/Application Support/Google/Chrome/Default/Extensions/fmkadmapgofadopljbjfkapdkoienihi/0.15.0_0&lt;/code&gt;</source>
          <target state="translated">React 개발자 도구 의 경우 확장 기능의 위치를 &lt;code&gt;BrowserWindow.addDevToolsExtension&lt;/code&gt; API에 전달하십시오. &lt;code&gt;~/Library/Application Support/Google/Chrome/Default/Extensions/fmkadmapgofadopljbjfkapdkoienihi/0.15.0_0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad5c3f0e7c0ef6dc59fcaf76e87eec1a515227b4" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;null&lt;/code&gt; will remove the menu bar on Windows and Linux but has no effect on macOS.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 을 전달하면 Windows 및 Linux에서 메뉴 표시 줄이 제거되지만 macOS에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4b65bc0f6da235ceeadaec44625db7442aff7217" translate="yes" xml:space="preserve">
          <source>Passing callbacks to the main process</source>
          <target state="translated">기본 프로세스로 콜백 전달</target>
        </trans-unit>
        <trans-unit id="a99d0e2dd062b9c5c794e56955e687db2ecf97ab" translate="yes" xml:space="preserve">
          <source>Patch Version Increments</source>
          <target state="translated">패치 버전 증가</target>
        </trans-unit>
        <trans-unit id="3963cdc12053af5418ae355295fd6ccd18a4d561" translate="yes" xml:space="preserve">
          <source>Patch releases</source>
          <target state="translated">패치 릴리스</target>
        </trans-unit>
        <trans-unit id="0d241b0b236f4475ae94fc48a9a5dcce104fb400" translate="yes" xml:space="preserve">
          <source>Patch version change</source>
          <target state="translated">패치 버전 변경</target>
        </trans-unit>
        <trans-unit id="f80a8f9b768a3feb8df7ca4acf5c378a47165efb" translate="yes" xml:space="preserve">
          <source>Pauses the download.</source>
          <target state="translated">다운로드를 일시 정지합니다.</target>
        </trans-unit>
        <trans-unit id="443386f993dbc8a8ff5bb30ce71e28d777697096" translate="yes" xml:space="preserve">
          <source>Perform copy and paste operations on the system clipboard.</source>
          <target state="translated">시스템 클립 보드에서 복사하여 붙여 넣기 작업을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="1ab65965d820e1b8eca39b19a367bfcd2c286297" translate="yes" xml:space="preserve">
          <source>Persian</source>
          <target state="translated">Persian</target>
        </trans-unit>
        <trans-unit id="4cf594f49b23917ecac391fc8d28d0d1e5b855aa" translate="yes" xml:space="preserve">
          <source>Place class properties in the following order:</source>
          <target state="translated">다음 순서로 클래스 속성을 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="af1347140163c48647d892425f4f3bc50eccee64" translate="yes" xml:space="preserve">
          <source>Place requires in the following order:</source>
          <target state="translated">장소는 다음 순서로 요구됩니다.</target>
        </trans-unit>
        <trans-unit id="042177b7cf2ecd03f1d33f5139586ccfde836561" translate="yes" xml:space="preserve">
          <source>Platform / Action Support</source>
          <target state="translated">플랫폼 / 액션 지원</target>
        </trans-unit>
        <trans-unit id="0a6e24e9beaf32c341db1338e51395b530c05067" translate="yes" xml:space="preserve">
          <source>Platform Notices</source>
          <target state="translated">플랫폼 공지</target>
        </trans-unit>
        <trans-unit id="38b10a3fef9531f82571079e6c0973fde8c3c114" translate="yes" xml:space="preserve">
          <source>Platform Support</source>
          <target state="translated">플랫폼 지원</target>
        </trans-unit>
        <trans-unit id="2364f85bf32088b9bba3fb1fa24b23a86d1b860d" translate="yes" xml:space="preserve">
          <source>Platform notice</source>
          <target state="translated">플랫폼 공지</target>
        </trans-unit>
        <trans-unit id="8aea3f326b0cea1fb7ceee876fb1c27718690998" translate="yes" xml:space="preserve">
          <source>Platform notices</source>
          <target state="translated">플랫폼 공지</target>
        </trans-unit>
        <trans-unit id="32e290a6a60cbaa09f402ce42bfa030da4e3c345" translate="yes" xml:space="preserve">
          <source>Play the beep sound.</source>
          <target state="translated">비프 음을 재생합니다.</target>
        </trans-unit>
        <trans-unit id="d7c1d9a01ad8204f5d85c6d157708d2fcbfeb87f" translate="yes" xml:space="preserve">
          <source>Playing Sounds</source>
          <target state="translated">소리 재생</target>
        </trans-unit>
        <trans-unit id="23e9988106970ce7b3543f1f6d42c879b97c98fc" translate="yes" xml:space="preserve">
          <source>Please also ensure that your system and Python version support at least TLS 1.2. For a quick test, run the following script:</source>
          <target state="translated">또한 시스템 및 Python 버전이 TLS 1.2 이상을 지원하는지 확인하십시오. 빠른 테스트를 위해 다음 스크립트를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="a761177e083f69d01f97ca3181e94353d4e2d984" translate="yes" xml:space="preserve">
          <source>Please also ensure that your system and Python version support at least TLS 1.2. This depends on both your version of macOS and Python. For a quick test, run:</source>
          <target state="translated">또한 시스템 및 Python 버전이 TLS 1.2 이상을 지원하는지 확인하십시오. 이는 사용중인 macOS 및 Python 버전에 따라 다릅니다. 빠른 테스트를 위해 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="0babb3cd8cdf201644ae75713e3f2a0989a24561" translate="yes" xml:space="preserve">
          <source>Please be sure to run &lt;code&gt;npm run lint&lt;/code&gt; from time to time on any code changes to ensure that they follow the project's code style.</source>
          <target state="translated">코드 변경 사항이 프로젝트의 코드 스타일을 따르도록하기 위해 때때로 &lt;code&gt;npm run lint&lt;/code&gt; 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="48d9522bf6728cf2b89e34b109ee642a9c217a29" translate="yes" xml:space="preserve">
          <source>Please make sure that you use the documents that match your Electron version. The version number should be a part of the page URL. If it's not, you are probably using the documentation of a development branch which may contain API changes that are not compatible with your Electron version. To view older versions of the documentation, you can &lt;a href=&quot;https://github.com/electron/electron/tree/v1.4.0&quot;&gt;browse by tag&lt;/a&gt; on GitHub by opening the &quot;Switch branches/tags&quot; dropdown and selecting the tag that matches your version.</source>
          <target state="translated">Electron 버전과 일치하는 문서를 사용해야합니다. 버전 번호는 페이지 URL의 일부 여야합니다. 그렇지 않은 경우 Electron 버전과 호환되지 않는 API 변경 사항이 포함될 수있는 개발 지점의 문서를 사용하고있을 것입니다. 이전 버전의 문서를 보려면 &quot;분기 / 태그 전환&quot;드롭 다운을 열고 버전과 일치하는 태그를 선택하여 GitHub에서 &lt;a href=&quot;https://github.com/electron/electron/tree/v1.4.0&quot;&gt;태그별로 찾아 볼&lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c1e7b230d5ac1cd5fa7a1b20a5b2042fc585ad03" translate="yes" xml:space="preserve">
          <source>Please note that the &lt;code&gt;webview&lt;/code&gt; tag's style uses &lt;code&gt;display:flex;&lt;/code&gt; internally to ensure the child &lt;code&gt;object&lt;/code&gt; element fills the full height and width of its &lt;code&gt;webview&lt;/code&gt; container when used with traditional and flexbox layouts (since v0.36.11). Please do not overwrite the default &lt;code&gt;display:flex;&lt;/code&gt; CSS property, unless specifying &lt;code&gt;display:inline-flex;&lt;/code&gt; for inline layout.</source>
          <target state="translated">있습니다 &lt;code&gt;webview&lt;/code&gt; 태그의 스타일 용도가 &lt;code&gt;display:flex;&lt;/code&gt; 내부 및 하위 &lt;code&gt;object&lt;/code&gt; 요소가 기존 및 flexbox 레이아웃과 함께 사용될 때 &lt;code&gt;webview&lt;/code&gt; 컨테이너 의 전체 높이와 너비를 채울 수 있도록 내부적으로 (V0.36.11부터). 기본 &lt;code&gt;display:flex;&lt;/code&gt; 덮어 쓰지 마십시오 . &lt;code&gt;display:inline-flex;&lt;/code&gt; 를 지정하지 않으면 CSS 속성 인라인 레이아웃.</target>
        </trans-unit>
        <trans-unit id="088a3e6d67c0c501479c0d8618ef47460be9bc90" translate="yes" xml:space="preserve">
          <source>Please use the &lt;code&gt;sandbox&lt;/code&gt; option with care, as it is still an experimental feature. We are still not aware of the security implications of exposing some electron renderer APIs to the preload script, but here are some things to consider before rendering untrusted content:</source>
          <target state="translated">&lt;code&gt;sandbox&lt;/code&gt; 옵션은 아직 실험적인 기능이므로주의 해서 사용하십시오 . 우리는 여전히 일부 전자 렌더러 API를 사전로드 스크립트에 노출시키는 보안 영향을 인식하지 못하지만 신뢰할 수없는 컨텐츠를 렌더링하기 전에 고려해야 할 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f79a28423ed1ae0232efb54ad41227d0955084f3" translate="yes" xml:space="preserve">
          <source>Point</source>
          <target state="translated">Point</target>
        </trans-unit>
        <trans-unit id="2e7f95ae69f783b8f12ac614fc9f6c701a01a190" translate="yes" xml:space="preserve">
          <source>Point Object</source>
          <target state="translated">점 개체</target>
        </trans-unit>
        <trans-unit id="d011986407b1110e57283981ea38a369075023b8" translate="yes" xml:space="preserve">
          <source>Polish</source>
          <target state="translated">Polish</target>
        </trans-unit>
        <trans-unit id="b8ea4738e0718e5370704d025df3fa743832ceab" translate="yes" xml:space="preserve">
          <source>Pops up the context menu of the tray icon. When &lt;code&gt;menu&lt;/code&gt; is passed, the &lt;code&gt;menu&lt;/code&gt; will be shown instead of the tray icon's context menu.</source>
          <target state="translated">트레이 아이콘의 상황에 맞는 메뉴를 표시합니다. &lt;code&gt;menu&lt;/code&gt; 가 전달 되면 트레이 아이콘의 상황에 맞는 메뉴 대신 &lt;code&gt;menu&lt;/code&gt; 가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="d8f7694c404bee70115fa55b459203ec212d6128" translate="yes" xml:space="preserve">
          <source>Pops up this menu as a context menu in the &lt;a href=&quot;browser-window&quot;&gt;&lt;code&gt;BrowserWindow&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;browser-window&quot;&gt; &lt;code&gt;BrowserWindow&lt;/code&gt; &lt;/a&gt; 에서이 메뉴를 컨텍스트 메뉴로 팝업 합니다.</target>
        </trans-unit>
        <trans-unit id="23882c575954a0789bf02aba9e6dd01f539bc738" translate="yes" xml:space="preserve">
          <source>Portuguese</source>
          <target state="translated">Portuguese</target>
        </trans-unit>
        <trans-unit id="f3f91e1ec3e0ae32e56bc723e25644fbcc1e3fe2" translate="yes" xml:space="preserve">
          <source>Portuguese (Brazil)</source>
          <target state="translated">포르투갈어 (브라질)</target>
        </trans-unit>
        <trans-unit id="0210d3ef06cf7ebec67d99c9ec36bf81243fae52" translate="yes" xml:space="preserve">
          <source>Portuguese (Portugal)</source>
          <target state="translated">포르투갈어 (포르투갈)</target>
        </trans-unit>
        <trans-unit id="b2ef221e3193ecc713338eb88d02a0cab9694e2a" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
          <target state="translated">가능한 값 :</target>
        </trans-unit>
        <trans-unit id="63a37317050caea125271af9285cd85201b4ac23" translate="yes" xml:space="preserve">
          <source>Posts &lt;code&gt;event&lt;/code&gt; as native notifications of macOS. The &lt;code&gt;userInfo&lt;/code&gt; is an Object that contains the user information dictionary sent along with the notification.</source>
          <target state="translated">macOS의 기본 알림으로 &lt;code&gt;event&lt;/code&gt; 를 게시합니다 . &lt;code&gt;userInfo&lt;/code&gt; 통지와 함께 전송되는 사용자 정보 사전을 포함하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="02dd8194ae786db94f966a924c8c4d7410b3015b" translate="yes" xml:space="preserve">
          <source>Prebuilt &lt;code&gt;clang&lt;/code&gt; will try to link to &lt;code&gt;libtinfo.so.5&lt;/code&gt;. Depending on the host architecture, symlink to appropriate &lt;code&gt;libncurses&lt;/code&gt;:</source>
          <target state="translated">사전 빌드 된 &lt;code&gt;clang&lt;/code&gt; 은 &lt;code&gt;libtinfo.so.5&lt;/code&gt; 에 연결을 시도합니다 . 호스트 아키텍처에 따라 적절한 &lt;code&gt;libncurses&lt;/code&gt; 에 대한 심볼릭 링크 :</target>
        </trans-unit>
        <trans-unit id="5fb051931887eb99f2dccd92e7c46b609a3e39a9" translate="yes" xml:space="preserve">
          <source>Preload</source>
          <target state="translated">Preload</target>
        </trans-unit>
        <trans-unit id="9b94153249fd46af1d00a1d29427a032ebc6409f" translate="yes" xml:space="preserve">
          <source>Prepare a Copy of Flash Plugin</source>
          <target state="translated">플래시 플러그인 사본 준비</target>
        </trans-unit>
        <trans-unit id="96a9b7cdbe400c8b44756e76d158b85eb3370995" translate="yes" xml:space="preserve">
          <source>Preparing</source>
          <target state="translated">Preparing</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="e8168f34ea6b8cf31e7d2fcaaff5225ad4caab17" translate="yes" xml:space="preserve">
          <source>Prevents Chromium from lowering the priority of invisible pages' renderer processes.</source>
          <target state="translated">Chromium이 보이지 않는 페이지의 렌더러 프로세스의 우선 순위를 낮추지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="33ba329d953e56f8b3b25899450215e101e7c2b6" translate="yes" xml:space="preserve">
          <source>Prevents the window contents from being captured by other apps.</source>
          <target state="translated">창 내용이 다른 앱에 의해 캡처되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="8bdbe869bf6b9311a87a30cce2e990ca7b2d729b" translate="yes" xml:space="preserve">
          <source>Primary value types like strings and numbers, however, are sent by copy.</source>
          <target state="translated">그러나 문자열 및 숫자와 같은 기본 값 유형은 복사로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="abf25c4b6adbc4a8ee0c4a0aacd78e8bbda63d67" translate="yes" xml:space="preserve">
          <source>PrinterInfo</source>
          <target state="translated">PrinterInfo</target>
        </trans-unit>
        <trans-unit id="ee5c861992f6a941c664d052f91ec0b0181b8991" translate="yes" xml:space="preserve">
          <source>PrinterInfo Object</source>
          <target state="translated">PrinterInfo 객체</target>
        </trans-unit>
        <trans-unit id="a6afbaa1522967cc94045c3505aceafd45bc75ff" translate="yes" xml:space="preserve">
          <source>Prints &lt;code&gt;webview&lt;/code&gt;'s web page as PDF, Same as &lt;code&gt;webContents.printToPDF(options, callback)&lt;/code&gt;.</source>
          <target state="translated">인쇄는 &lt;code&gt;webview&lt;/code&gt; PDF 등의 웹 페이지, 동일 &lt;code&gt;webContents.printToPDF(options, callback)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="317538220488eb5a910ebdcfb35a09555682fb2d" translate="yes" xml:space="preserve">
          <source>Prints &lt;code&gt;webview&lt;/code&gt;'s web page. Same as &lt;code&gt;webContents.print([options])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;webview&lt;/code&gt; 의 웹 페이지를 인쇄 합니다. &lt;code&gt;webContents.print([options])&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="8d52de956a256a75cc2e7d421b8d9d6c31e5d286" translate="yes" xml:space="preserve">
          <source>Prints Chrome's internal logging to the console.</source>
          <target state="translated">Chrome의 내부 로깅을 콘솔에 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="369a9fed0ccc77eec2fb3928b8f6b176f3479500" translate="yes" xml:space="preserve">
          <source>Prints Chromium's logging into console.</source>
          <target state="translated">콘솔에 Chromium의 로그인을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="389e6dc0b768ba8f062f3063f5898912d1f3bf7b" translate="yes" xml:space="preserve">
          <source>Prints the stack trace to the console when Electron crashes.</source>
          <target state="translated">Electron 충돌시 스택 추적을 콘솔에 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="05e502c39854c52e50ec88a0a458fc96dfc210c6" translate="yes" xml:space="preserve">
          <source>Prints window's web page as PDF with Chromium's preview printing custom settings.</source>
          <target state="translated">Chromium의 미리보기 인쇄 사용자 정의 설정을 사용하여 창의 웹 페이지를 PDF로 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="23bcf1f2fd4149bc3867161b9396ffaff448056c" translate="yes" xml:space="preserve">
          <source>Prints window's web page. When &lt;code&gt;silent&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;, Electron will pick the system's default printer if &lt;code&gt;deviceName&lt;/code&gt; is empty and the default settings for printing.</source>
          <target state="translated">창의 웹 페이지를 인쇄합니다. 때 &lt;code&gt;silent&lt;/code&gt; 설정되어 &lt;code&gt;true&lt;/code&gt; 경우, 전자는 시스템의 기본 프린터를 선택합니다 &lt;code&gt;deviceName&lt;/code&gt; 비어 있고 인쇄 기본 설정.</target>
        </trans-unit>
        <trans-unit id="098c331fcfda0dc457987614db8d0cb06b6707ea" translate="yes" xml:space="preserve">
          <source>Process Object</source>
          <target state="translated">프로세스 객체</target>
        </trans-unit>
        <trans-unit id="717a4cbe5c68565fd57f8a35f4d678ea6b5fd71e" translate="yes" xml:space="preserve">
          <source>Process: &lt;a href=&quot;../glossary#main-process&quot;&gt;Main&lt;/a&gt;</source>
          <target state="translated">프로세스 : &lt;a href=&quot;../glossary#main-process&quot;&gt;메인&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="368e6fb7706d4fd2a70ab7c53be5e425a4b7d120" translate="yes" xml:space="preserve">
          <source>Process: &lt;a href=&quot;../glossary#main-process&quot;&gt;Main&lt;/a&gt;, &lt;a href=&quot;../glossary#renderer-process&quot;&gt;Renderer&lt;/a&gt;</source>
          <target state="translated">프로세스 : &lt;a href=&quot;../glossary#main-process&quot;&gt;메인&lt;/a&gt; , &lt;a href=&quot;../glossary#renderer-process&quot;&gt;렌더러&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7b8acb27e9b7462b1e3013f3e4e6c9f1b84602dc" translate="yes" xml:space="preserve">
          <source>Process: &lt;a href=&quot;../glossary#renderer-process&quot;&gt;Renderer&lt;/a&gt;</source>
          <target state="translated">프로세스 : &lt;a href=&quot;../glossary#renderer-process&quot;&gt;렌더러&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e754dd126184a1dcc8f9da34fb1e447a007456e" translate="yes" xml:space="preserve">
          <source>Process: &lt;a href=&quot;../tutorial/quick-start#main-process&quot;&gt;Main&lt;/a&gt;</source>
          <target state="translated">프로세스 : &lt;a href=&quot;../tutorial/quick-start#main-process&quot;&gt;메인&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f888ccdec8c9224a350d6738aec2401071ff29b6" translate="yes" xml:space="preserve">
          <source>Process: &lt;a href=&quot;../tutorial/quick-start#renderer-process&quot;&gt;Renderer&lt;/a&gt;</source>
          <target state="translated">프로세스 : &lt;a href=&quot;../tutorial/quick-start#renderer-process&quot;&gt;렌더러&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b9010e7b7912542b080685f7901930e084a4879" translate="yes" xml:space="preserve">
          <source>ProcessMetric</source>
          <target state="translated">ProcessMetric</target>
        </trans-unit>
        <trans-unit id="ed6284d13129b6e4961cd97cd0c98caae7ecbee6" translate="yes" xml:space="preserve">
          <source>ProcessMetric Object</source>
          <target state="translated">ProcessMetric 객체</target>
        </trans-unit>
        <trans-unit id="ed7308bb59f2876220e45299939d241199595df2" translate="yes" xml:space="preserve">
          <source>Processes</source>
          <target state="translated">Processes</target>
        </trans-unit>
        <trans-unit id="3d0acdfa0f2bb50113a1acdde2c73649dc676ba0" translate="yes" xml:space="preserve">
          <source>Production Variables</source>
          <target state="translated">생산 변수</target>
        </trans-unit>
        <trans-unit id="151fcb771556728ca2f9f2085e8378e1e5453822" translate="yes" xml:space="preserve">
          <source>Progress Bar</source>
          <target state="translated">진행 표시 줄</target>
        </trans-unit>
        <trans-unit id="fc575e5724e3b513946e86d3e2bd30ce4c1c0864" translate="yes" xml:space="preserve">
          <source>Progress Bar in Taskbar (Windows, macOS, Unity)</source>
          <target state="translated">작업 표시 줄의 진행률 표시 줄 (Windows, macOS, Unity)</target>
        </trans-unit>
        <trans-unit id="9322f459f71bfa8fc91038412dbbbab584fbfb4e" translate="yes" xml:space="preserve">
          <source>Promote beta to stable</source>
          <target state="translated">안정적인 베타 버전 홍보</target>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="153a2b1eab9a64675a1cdcd42c45812dca52cfa5" translate="yes" xml:space="preserve">
          <source>Providing empty credentials will cancel the request and report an authentication error on the response object:</source>
          <target state="translated">빈 자격 증명을 제공하면 요청이 취소되고 응답 개체에 대한 인증 오류가보고됩니다.</target>
        </trans-unit>
        <trans-unit id="9db0b745b6fa2951c35528cc5a431b74d851a2e8" translate="yes" xml:space="preserve">
          <source>Proxies</source>
          <target state="translated">Proxies</target>
        </trans-unit>
        <trans-unit id="f4ac133b3346381334e7a22465bb1271a3e71cd6" translate="yes" xml:space="preserve">
          <source>Publish the release</source>
          <target state="translated">릴리스 공개</target>
        </trans-unit>
        <trans-unit id="df47c135a9d6b7a1ecf29d4ba2266301243bf2e1" translate="yes" xml:space="preserve">
          <source>Publish the release to npm.</source>
          <target state="translated">릴리스를 npm에 게시하십시오.</target>
        </trans-unit>
        <trans-unit id="b1aa195e794b4f66b923622c595d29c04615285a" translate="yes" xml:space="preserve">
          <source>Publish to npm</source>
          <target state="translated">npm에 게시</target>
        </trans-unit>
        <trans-unit id="30ab8d084e2209d47a1dc198c8de1e251f390a94" translate="yes" xml:space="preserve">
          <source>Pull Requests</source>
          <target state="translated">풀 요청</target>
        </trans-unit>
        <trans-unit id="f1ce36bbabe07bdb27688021c4ac478fd9f25821" translate="yes" xml:space="preserve">
          <source>Punctuations like &lt;code&gt;~&lt;/code&gt;, &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;@&lt;/code&gt;, &lt;code&gt;#&lt;/code&gt;, &lt;code&gt;$&lt;/code&gt;, etc.</source>
          <target state="translated">같은 문장 부호 &lt;code&gt;~&lt;/code&gt; , &lt;code&gt;!&lt;/code&gt; , &lt;code&gt;@&lt;/code&gt; , &lt;code&gt;#&lt;/code&gt; , &lt;code&gt;$&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="feaafc60ba98d7e0fbce4f0362fd6da7774b94b5" translate="yes" xml:space="preserve">
          <source>Punjabi</source>
          <target state="translated">Punjabi</target>
        </trans-unit>
        <trans-unit id="7a68ba00f0b9b96745538ec2779f1b225962491f" translate="yes" xml:space="preserve">
          <source>Push changes to submodule reference</source>
          <target state="translated">서브 모듈 참조로 변경 사항 푸시</target>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="translated">Python</target>
        </trans-unit>
        <trans-unit id="e5753a9b59b38e69823f51414bf66f9f68ba9622" translate="yes" xml:space="preserve">
          <source>Python 2.7</source>
          <target state="translated">파이썬 2.7</target>
        </trans-unit>
        <trans-unit id="f303c43bd4a5c1f9956036901345d403602cc40a" translate="yes" xml:space="preserve">
          <source>Python 2.7 with support for TLS 1.2</source>
          <target state="translated">TLS 1.2를 지원하는 Python 2.7</target>
        </trans-unit>
        <trans-unit id="4a79a1115c19d6bf73cc5cfa9736c31adc4253ed" translate="yes" xml:space="preserve">
          <source>Python 2.7.x. Some distributions like CentOS 6.x still use Python 2.6.x so you may need to check your Python version with &lt;code&gt;python -V&lt;/code&gt;.</source>
          <target state="translated">파이썬 2.7.x. CentOS 6.x와 같은 일부 배포판은 여전히 ​​Python 2.6.x를 사용하므로 &lt;code&gt;python -V&lt;/code&gt; 로 Python 버전을 확인해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2307d71ee74acad008353c63cf8b4e73a00950b1" translate="yes" xml:space="preserve">
          <source>Quechua</source>
          <target state="translated">Quechua</target>
        </trans-unit>
        <trans-unit id="5be69e949cb2acc68e23b5073aa0d68a64a9a965" translate="yes" xml:space="preserve">
          <source>Query and modify a session's cookies.</source>
          <target state="translated">세션 쿠키를 쿼리하고 수정합니다.</target>
        </trans-unit>
        <trans-unit id="455083cac2ae96eabe3895762b6080aa09e6afa4" translate="yes" xml:space="preserve">
          <source>Quick Start</source>
          <target state="translated">빠른 시작</target>
        </trans-unit>
        <trans-unit id="91a30c67baa4915d60aa61550dedd8da8458c4f3" translate="yes" xml:space="preserve">
          <source>Quiet Hours / Presentation Mode</source>
          <target state="translated">조용한 시간 / 프리젠 테이션 모드</target>
        </trans-unit>
        <trans-unit id="daafa9b6d6f23a76fa0a90163a85988bb55fe736" translate="yes" xml:space="preserve">
          <source>RC2 - &lt;a href=&quot;https://tools.ietf.org/html/rfc2268&quot;&gt;RFC 2268&lt;/a&gt;</source>
          <target state="translated">RC2- &lt;a href=&quot;https://tools.ietf.org/html/rfc2268&quot;&gt;RFC 2268&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="644659bb059b859b7d9e66d791fb21bea7adc199" translate="yes" xml:space="preserve">
          <source>RC4 - &lt;a href=&quot;https://tools.ietf.org/html/rfc4345&quot;&gt;RFC 4345&lt;/a&gt;</source>
          <target state="translated">RC4- &lt;a href=&quot;https://tools.ietf.org/html/rfc4345&quot;&gt;RFC 4345&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08b00831200706ca933fc1e50c17317060c8cdcc" translate="yes" xml:space="preserve">
          <source>RC5 - &lt;a href=&quot;http://people.csail.mit.edu/rivest/Rivest-rc5rev.pdf&quot;&gt;http://people.csail.mit.edu/rivest/Rivest-rc5rev.pdf&lt;/a&gt;</source>
          <target state="translated">RC5- &lt;a href=&quot;http://people.csail.mit.edu/rivest/Rivest-rc5rev.pdf&quot;&gt;http&lt;/a&gt; : //people.csail.mit.edu/rivest/Rivest-rc5rev.pdf</target>
        </trans-unit>
        <trans-unit id="73775a59948e85039bd898e23e868a9ee126c00f" translate="yes" xml:space="preserve">
          <source>REPL</source>
          <target state="translated">REPL</target>
        </trans-unit>
        <trans-unit id="c3836c1a777fd28d3905c75f7143440ae8f0dad5" translate="yes" xml:space="preserve">
          <source>RIPEMD - &lt;a href=&quot;https://webstore.ansi.org/RecordDetail.aspx?sku=ISO%2FIEC%2010118-3:2004&quot;&gt;ISO/IEC 10118-3&lt;/a&gt;</source>
          <target state="translated">RIPEMD- &lt;a href=&quot;https://webstore.ansi.org/RecordDetail.aspx?sku=ISO%2FIEC%2010118-3:2004&quot;&gt;ISO / IEC 10118-3&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5aa1eabfd92c1a7e53e1ddffc2f5cfcba43caa10" translate="yes" xml:space="preserve">
          <source>RSA - &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447&quot;&gt;RFC 3447&lt;/a&gt;</source>
          <target state="translated">RSA- &lt;a href=&quot;http://www.ietf.org/rfc/rfc3447&quot;&gt;RFC 3447&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09f5bc6c29b43ce1bddc8842a9f10b3c7bc1d465" translate="yes" xml:space="preserve">
          <source>Re-apply our commits from the previous version of node we were using (&lt;code&gt;vY.Y.Y&lt;/code&gt;) to &lt;code&gt;v.X.X.X&lt;/code&gt;</source>
          <target state="translated">( &lt;code&gt;vY.Y.Y&lt;/code&gt; )를 사용하던 이전 버전의 노드 에서 &lt;code&gt;v.X.X.X&lt;/code&gt; 커밋을 다시 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="0b8d9d4504138b82d751a5f283a8095308246310" translate="yes" xml:space="preserve">
          <source>React Developer Tools</source>
          <target state="translated">반응 개발자 도구</target>
        </trans-unit>
        <trans-unit id="14b03aa9844af44df8d8d191fa1ab1b1abcab51a" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;patches/v8/README.md&lt;/code&gt; to see which patchfiles came from the previous version of V8 and therefore need to be removed.</source>
          <target state="translated">&lt;code&gt;patches/v8/README.md&lt;/code&gt; 를 읽고 이전 버전의 V8에서 가져온 패치 파일 을 확인하여 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="538de3cf371599ad0e8f2db393721015612f6b7e" translate="yes" xml:space="preserve">
          <source>Read a file in the &lt;code&gt;asar&lt;/code&gt; archive:</source>
          <target state="translated">&lt;code&gt;asar&lt;/code&gt; 아카이브 에서 파일을 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="2577ab3462ca24a2f95836946b10de199868dda0" translate="yes" xml:space="preserve">
          <source>Read on to learn more about the contributors and releases of Electron or get started building with Electron in the &lt;a href=&quot;quick-start&quot;&gt;Quick Start Guide&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;quick-start&quot;&gt;빠른 시작 안내서&lt;/a&gt; 에서 Electron의 기고자 및 릴리스에 대해 자세히 알아 보거나 Electron을 사용하여 구축을 시작하십시오 .</target>
        </trans-unit>
        <trans-unit id="6587d703242bd4f420cfe4d4a60f26b78c44559e" translate="yes" xml:space="preserve">
          <source>Read-Eval-Print-Loop (REPL) is a simple, interactive computer programming environment that takes single user inputs (i.e. single expressions), evaluates them, and returns the result to the user.</source>
          <target state="translated">REPL (Read-Eval-Print-Loop)은 단일 사용자 입력 (예 : 단일 표현식)을 가져 와서 평가 한 후 결과를 사용자에게 반환하는 간단한 대화식 컴퓨터 프로그래밍 환경입니다.</target>
        </trans-unit>
        <trans-unit id="289806dd8208404bcdeae0ecffb9418fdf178d01" translate="yes" xml:space="preserve">
          <source>Rebranding by Rebuilding Electron from Source</source>
          <target state="translated">소스에서 전자를 재생성하여 브랜드 변경</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
