<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="4f496c49fc48ac58a6465818165fdbe954dad476" translate="yes" xml:space="preserve">
          <source>As this function sorts the returned values on the client side it is possible that you might not get the expected results in case you reach the &lt;code&gt;sizelimit&lt;/code&gt; either of the server or defined within &lt;a href=&quot;function.ldap-search&quot;&gt;ldap_search()&lt;/a&gt;.</source>
          <target state="translated">이 기능은 클라이언트 측에서 반환 된 값을 정렬로 당신이 도달 할 경우 예상되는 결과를 얻지 못할 수도 가능성이 &lt;code&gt;sizelimit&lt;/code&gt; 을 서버 중 하나 또는 내에서 정의 &lt;a href=&quot;function.ldap-search&quot;&gt;) (ldap_search&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="79e56cfe26f27e39615c5352d949b56d66f872da" translate="yes" xml:space="preserve">
          <source>As with &lt;a href=&quot;function.curl-setopt&quot;&gt;curl_setopt()&lt;/a&gt;, passing an array to &lt;strong&gt;&lt;code&gt;CURLOPT_POST&lt;/code&gt;&lt;/strong&gt; will encode the data as &lt;em&gt;multipart/form-data&lt;/em&gt;, while passing a URL-encoded string will encode the data as &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;function.curl-setopt&quot;&gt;curl_setopt ()&lt;/a&gt; 와 마찬가지로 &lt;strong&gt; &lt;code&gt;CURLOPT_POST&lt;/code&gt; 에&lt;/strong&gt; 배열을 전달 하면 데이터가 &lt;em&gt;multipart / form-data&lt;/em&gt; 로 인코딩되고 URL로 인코딩 된 문자열을 전달하면 데이터가 &lt;em&gt;application / x-www-form-urlencoded로 인코딩&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="d13997fcfe7c0f1efd14eb10e7943dcc0d2d7873" translate="yes" xml:space="preserve">
          <source>As with all classes that implement the &lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; interface, &lt;strong&gt;Phar::offsetGet()&lt;/strong&gt; is automatically called when using the &lt;em&gt;[]&lt;/em&gt; angle bracket operator.</source>
          <target state="translated">&lt;a href=&quot;class.arrayaccess&quot;&gt;ArrayAccess&lt;/a&gt; 인터페이스 를 구현하는 모든 클래스와 마찬가지로 &lt;strong&gt;Phar :: offsetGet ()&lt;/strong&gt; 은 &lt;em&gt;[]&lt;/em&gt; 꺾쇠 괄호 연산자를 사용할 때 자동으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="09bcbb027939832d5da0536111efbc1d21929fb2" translate="yes" xml:space="preserve">
          <source>As with all internal PHP functions as of 5.3.0, &lt;strong&gt;array_search()&lt;/strong&gt; returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; if invalid parameters are passed to it.</source>
          <target state="translated">5.3.0부터 모든 내부 PHP 함수와 마찬가지로 &lt;strong&gt;array_search ()&lt;/strong&gt; 는 잘못된 매개 변수가 전달되면 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 을&lt;/strong&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="2754f5cb2efc68df43ef21e96df9aed0e29a677f" translate="yes" xml:space="preserve">
          <source>As with anything that outputs its result directly to the browser, the &lt;a href=&quot;https://secure.php.net/manual/en/book.outcontrol.php&quot;&gt;output-control functions&lt;/a&gt; can be used to capture the output of this function, and save it in a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; (for example).</source>
          <target state="translated">결과를 브라우저로 직접 출력하는 것과 마찬가지로 &lt;a href=&quot;https://secure.php.net/manual/en/book.outcontrol.php&quot;&gt;출력 제어 기능&lt;/a&gt; 을 사용하여이 기능의 출력을 캡처하고이를 &lt;a href=&quot;language.types.string&quot;&gt;문자열로&lt;/a&gt; 저장할 수 있습니다 (예 :).</target>
        </trans-unit>
        <trans-unit id="afdc770b27552bdbfc1d5e96ff256244e5c1c631" translate="yes" xml:space="preserve">
          <source>As with normal exceptions, these &lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; exceptions will bubble up until they reach the first matching &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;em&gt;catch&lt;/em&gt;&lt;/a&gt; block. If there are no matching blocks, then any default exception handler installed with &lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler()&lt;/a&gt; will be called, and if there is no default exception handler, then the exception will be converted to a fatal error and will be handled like a traditional error.</source>
          <target state="translated">일반적인 예외와 마찬가지로 이러한 &lt;a href=&quot;class.error&quot;&gt;오류&lt;/a&gt; 예외는 첫 번째 일치하는 &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;em&gt;catch&lt;/em&gt;&lt;/a&gt; 블록에 도달 할 때까지 버블 링됩니다 . 일치하는 블록이 없으면 &lt;a href=&quot;function.set-exception-handler&quot;&gt;set_exception_handler ()&lt;/a&gt; 와 함께 설치된 기본 예외 처리기 가 호출되고 기본 예외 처리기가 없으면 예외는 치명적 오류로 변환되어 기존 오류처럼 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="b550c3ac1e42f23a262b44df4347d67db42bae49" translate="yes" xml:space="preserve">
          <source>As with the simple value yields shown earlier, yielding a key/value pair in an expression context requires the yield statement to be parenthesised:</source>
          <target state="translated">앞에서 설명한 간단한 값 산출량과 마찬가지로 표현식 컨텍스트에서 키 / 값 쌍을 산출하려면 산출 문을 괄호로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="49f22e6a92ee439bc6f3bee91d46cfb6a8a092ca" translate="yes" xml:space="preserve">
          <source>As with timers, the callback is guaranteed to be invoked only when the point in time where it is supposed to trigger has passed. If multiple timers become ready during the same loop iteration then the ones with earlier time-out values are invoked before ones with later time-out values (but this is no longer true when a callback calls &lt;a href=&quot;evloop.run&quot;&gt;EvLoop::run()&lt;/a&gt; recursively).</source>
          <target state="translated">타이머와 마찬가지로 콜백은 트리거되어야하는 특정 시점이 지났을 때만 호출되도록 보장됩니다. 동일한 루프 반복 동안 여러 타이머가 준비되면 시간 초과 값이 빠른 타이머가 더 늦은 시간 초과 값을 갖는 타이머보다 먼저 호출됩니다 (하지만 콜백이 &lt;a href=&quot;evloop.run&quot;&gt;EvLoop :: run ()을&lt;/a&gt; 재귀 적으로 호출 할 때는 더 이상 적용되지 않습니다 ).</target>
        </trans-unit>
        <trans-unit id="a55e180254feddc7051291fa44fffe5250c7f193" translate="yes" xml:space="preserve">
          <source>As you can see the last value &lt;em&gt;&quot;d&quot;&lt;/em&gt; was assigned the key &lt;em&gt;7&lt;/em&gt;. This is because the largest integer key before that was &lt;em&gt;6&lt;/em&gt;.</source>
          <target state="translated">보시다시피 마지막 값 &lt;em&gt;&quot;d&quot;&lt;/em&gt; 에 키 &lt;em&gt;7&lt;/em&gt; 이 할당되었습니다 . 그 전에 가장 큰 정수 키가 &lt;em&gt;6&lt;/em&gt; 이었기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="a173e725607d0f98c78ebac0b31138d8d136aa84" translate="yes" xml:space="preserve">
          <source>Asia</source>
          <target state="translated">Asia</target>
        </trans-unit>
        <trans-unit id="8a2e1326cdf7280fae9246438545acb80c113182" translate="yes" xml:space="preserve">
          <source>Asia time zones.</source>
          <target state="translated">아시아 시간대.</target>
        </trans-unit>
        <trans-unit id="4b486b14ba35128f7d93a1ababac7427a61b35c0" translate="yes" xml:space="preserve">
          <source>Ask the multi handle if there are any messages or information from the individual transfers. Messages may include information such as an error code from the transfer or just the fact that a transfer is completed.</source>
          <target state="translated">개별 전송에서 온 메시지 나 정보가 있는지 멀티 핸들에 문의하십시오. 메시지에는 전송의 오류 코드 또는 전송이 완료된 사실과 같은 정보가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae40253ef527434fa7ad991157d295b5459561ae" translate="yes" xml:space="preserve">
          <source>Assemble a url.</source>
          <target state="translated">URL을 조립하십시오.</target>
        </trans-unit>
        <trans-unit id="8beae02d3fb5c0677ad1bcbaf1643e335192928b" translate="yes" xml:space="preserve">
          <source>Assertion subpatterns are not capturing subpatterns, and may not be repeated, because it makes no sense to assert the same thing several times. If any kind of assertion contains capturing subpatterns within it, these are counted for the purposes of numbering the capturing subpatterns in the whole pattern. However, substring capturing is carried out only for positive assertions, because it does not make sense for negative assertions.</source>
          <target state="translated">어설 션 하위 패턴은 하위 패턴을 캡처하지 않으며 동일한 것을 여러 번 주장하는 것이 의미가 없으므로 반복되지 않을 수 있습니다. 어떤 종류의 어설 션에 캡처 하위 패턴이 포함되어 있으면 전체 패턴에서 캡처 하위 패턴의 번호를 매기려는 목적으로 계산됩니다. 그러나 하위 문자열 캡처는 부정적인 어설 션에는 의미가 없으므로 긍정적 인 어설 션에 대해서만 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="e3292c12a856a02722a46d87471ff4e6faefa104" translate="yes" xml:space="preserve">
          <source>AssertionError</source>
          <target state="translated">AssertionError</target>
        </trans-unit>
        <trans-unit id="5061cebcb33e24b0b2cbfc16366a8edfa6d92c7e" translate="yes" xml:space="preserve">
          <source>AssertionError &amp;rarr;</source>
          <target state="translated">AssertionError &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="d20104ab8cafeb2e9adc34db570adec53186f0a5" translate="yes" xml:space="preserve">
          <source>Assertions &amp;rarr;</source>
          <target state="translated">주장 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6cca3af175147a1e2ced06a09dcdbcfa5589c1e7" translate="yes" xml:space="preserve">
          <source>Assertions can be nested in any combination. For example, &lt;em&gt;(?&amp;lt;=(?&amp;lt;!foo)bar)baz&lt;/em&gt; matches an occurrence of &quot;baz&quot; that is preceded by &quot;bar&quot; which in turn is not preceded by &quot;foo&quot;, while &lt;em&gt;(?&amp;lt;=\d{3}...(?&amp;lt;!999))foo&lt;/em&gt; is another pattern which matches &quot;foo&quot; preceded by three digits and any three characters that are not &quot;999&quot;.</source>
          <target state="translated">어설 션은 어떤 조합으로도 중첩 될 수 있습니다. 예를 들어, &lt;em&gt;(? &amp;lt;= (? &amp;lt;! foo) bar) baz&lt;/em&gt; 는 &quot;baz&quot;앞에 나오는 &quot;baz&quot;와 일치하며, &quot;bar&quot;앞에 &quot;foo&quot;가 나오지 않지만 &lt;em&gt;(? &amp;lt;= \ d {3 } ... (? &amp;lt;! 999)) foo&lt;/em&gt; 는 &quot;foo&quot;앞에 세 자리 숫자와 &quot;999&quot;가 아닌 세 문자가 일치하는 또 다른 패턴입니다.</target>
        </trans-unit>
        <trans-unit id="b804f4a6ab5e2c167fd317138b99dc6366096e68" translate="yes" xml:space="preserve">
          <source>Assertions count towards the maximum of 200 parenthesized subpatterns.</source>
          <target state="translated">어설 션은 최대 200 개의 괄호로 묶인 하위 패턴으로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="2b9a809e908781ed11ffadd5bebf5f3a87ba4cad" translate="yes" xml:space="preserve">
          <source>Assertions should be used as a debugging feature only. You may use them for sanity-checks that test for conditions that should always be &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; and that indicate some programming errors if not or to check for the presence of certain features like extension functions or certain system limits and features.</source>
          <target state="translated">어설 션은 디버깅 기능으로 만 사용해야합니다. 항상 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 이어야하는 조건을 테스트하고 그렇지 않은 경우 일부 프로그래밍 오류를 나타내거나 확장 기능 또는 특정 시스템 한계 및 기능과 같은 특정 기능의 존재 여부를 확인하는 상태 검사에이 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6248b428b39b066def39b2e5939bf5a11c38888b" translate="yes" xml:space="preserve">
          <source>Assertions should not be used for normal runtime operations like input parameter checks. As a rule of thumb your code should always be able to work correctly if assertion checking is not activated.</source>
          <target state="translated">입력 매개 변수 확인과 같은 일반적인 런타임 작업에는 어설 션을 사용해서는 안됩니다. 일반적으로 어설 션 검사가 활성화되어 있지 않으면 코드가 항상 올바르게 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="d67a13ffa859bea51d61bead619ff75b205f57e3" translate="yes" xml:space="preserve">
          <source>Assigan values to View engine, then the value can access directly by name in template.</source>
          <target state="translated">뷰 엔진에 대한 Assigan 값은 템플릿에서 이름으로 직접 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43a5914cb54169a132f368602d585b3591a64c2e" translate="yes" xml:space="preserve">
          <source>Assign By Reference</source>
          <target state="translated">참조로 할당</target>
        </trans-unit>
        <trans-unit id="2e1338237507c7388e7d9e6ec98854728b4ccadc" translate="yes" xml:space="preserve">
          <source>Assign a priority to a bufferevent</source>
          <target state="translated">버퍼 이벤트에 우선 순위 지정</target>
        </trans-unit>
        <trans-unit id="2933b45c5b7d8813f7e25ba4ee811087ef92cdfc" translate="yes" xml:space="preserve">
          <source>Assign a priority to the &lt;code&gt;bevent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;bevent&lt;/code&gt; 에 우선 순위를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="fba89c9ce1d594bf39c58422b4377b05d2075aea" translate="yes" xml:space="preserve">
          <source>Assign a priority to the &lt;code&gt;event&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; 우선 순위를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f295ce28f9cbc17aea0f0a8a47be7aea940db86" translate="yes" xml:space="preserve">
          <source>Assign the specified &lt;code&gt;bevent&lt;/code&gt; to the &lt;code&gt;event_base&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;bevent&lt;/code&gt; 를 &lt;code&gt;event_base&lt;/code&gt; 에 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa1903eca18ae92e9ccec9552cb537e97ef0bb80" translate="yes" xml:space="preserve">
          <source>Assigning another value to &lt;code&gt;handle&lt;/code&gt; argument in subsequent code will release the lock.</source>
          <target state="translated">후속 코드에서 인수 를 &lt;code&gt;handle&lt;/code&gt; 하기 위해 다른 값을 지정 하면 잠금이 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="7bec00ae67953bf63f8b1b3f8ddf8f9255f79d82" translate="yes" xml:space="preserve">
          <source>Assignment Operators</source>
          <target state="translated">할당 연산자</target>
        </trans-unit>
        <trans-unit id="cb6d2508064b7f34a684c58cc5638ae8ef631ba2" translate="yes" xml:space="preserve">
          <source>Assignment Operators &amp;rarr;</source>
          <target state="translated">할당 연산자 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c6606fee6331c4bf43802ca0b5860b36d427bd3a" translate="yes" xml:space="preserve">
          <source>Assignment by Reference</source>
          <target state="translated">참조에 의한 할당</target>
        </trans-unit>
        <trans-unit id="18074dc5203632c6d67fd9f3e446f952068f75b1" translate="yes" xml:space="preserve">
          <source>Assignment by reference is also supported, using the &quot;$var = &amp;amp;$othervar;&quot; syntax. Assignment by reference means that both variables end up pointing at the same data, and nothing is copied anywhere.</source>
          <target state="translated">&quot;$ var = &amp;amp; $ othervar;&quot;를 사용하여 참조에 의한 지정도 지원됩니다. 통사론. 참조에 의한 할당은 두 변수가 모두 동일한 데이터를 가리키고 어디에도 복사되지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="1a4d1e9b1f92e8358f67ebe0d07dd9be86ee5dd8" translate="yes" xml:space="preserve">
          <source>Assigns a value to the specified offset.</source>
          <target state="translated">지정된 오프셋에 값을 할당합니다.</target>
        </trans-unit>
        <trans-unit id="3bd14e94cfa66f2a989979afbdcb1b1617634303" translate="yes" xml:space="preserve">
          <source>Assigns read, write and event(status) callbacks.</source>
          <target state="translated">읽기, 쓰기 및 이벤트 (상태) 콜백을 할당합니다.</target>
        </trans-unit>
        <trans-unit id="339cd85eb93aa3433fd2f5c1ca2ce016c9c0e06a" translate="yes" xml:space="preserve">
          <source>Assigns the worker an identifier.</source>
          <target state="translated">작업자에게 식별자를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="4a3c6a876faf9eebf78adc58f7f63329fdbe70f6" translate="yes" xml:space="preserve">
          <source>Assocates the previous image in an image list with the Imagick object.</source>
          <target state="translated">Imagick 객체를 사용하여 이미지 목록의 이전 이미지를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="eaedce342dbac2ea574b1f9507f683f16a32aa67" translate="yes" xml:space="preserve">
          <source>Associate data to an &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; in the storage.</source>
          <target state="translated">스토리지 의 &lt;a href=&quot;language.types.object&quot;&gt;오브젝트&lt;/a&gt; 에 데이터를 연관 시키십시오 .</target>
        </trans-unit>
        <trans-unit id="30eddbbad08eee6756fcfd86ff9fbd66fe153bac" translate="yes" xml:space="preserve">
          <source>Associated event base</source>
          <target state="translated">관련 이벤트 기반</target>
        </trans-unit>
        <trans-unit id="fa576c78e63e88239909b14c7528b5a4310d6406" translate="yes" xml:space="preserve">
          <source>Associated event base.</source>
          <target state="translated">연관된 이벤트 기반.</target>
        </trans-unit>
        <trans-unit id="374444a94f64db04ab46e6f36b35b3af9d56122b" translate="yes" xml:space="preserve">
          <source>Associates a &lt;code&gt;key&lt;/code&gt; with a &lt;code&gt;value&lt;/code&gt;, overwriting a previous association if one exists.</source>
          <target state="translated">어소 시에이 &lt;code&gt;key&lt;/code&gt; A의 &lt;code&gt;value&lt;/code&gt; 존재하는 경우 이전 연결을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="e0d9f64c47ea42d90f316abd2a595de0ef60e1b2" translate="yes" xml:space="preserve">
          <source>Associates a named clipping path with the image. Only the areas drawn on by the clipping path will be modified as long as it remains in effect.</source>
          <target state="translated">명명 된 클리핑 패스를 이미지와 연결합니다. 클리핑 패스로 그려진 영역 만 적용되는 한 수정됩니다.</target>
        </trans-unit>
        <trans-unit id="344ee9b67fa905db38fe4ff6485782100f3dda78" translate="yes" xml:space="preserve">
          <source>Associates all key-value &lt;code&gt;pairs&lt;/code&gt; of a &lt;a href=&quot;class.traversable&quot;&gt;traversable&lt;/a&gt; object or &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;class.traversable&quot;&gt;순회 가능한&lt;/a&gt; 객체 또는 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 의 모든 키-값 &lt;code&gt;pairs&lt;/code&gt; 을 연결합니다 .</target>
        </trans-unit>
        <trans-unit id="b99ca8450f7a962b387d42777891f64550857030" translate="yes" xml:space="preserve">
          <source>Associates an artifact with the image. The difference between image properties and image artifacts is that properties are public and artifacts are private. This method is available if Imagick has been compiled against ImageMagick version 6.5.7 or newer.</source>
          <target state="translated">아티팩트를 이미지와 연관시킵니다. 이미지 속성과 이미지 아티팩트의 차이점은 속성이 공용이고 아티팩트가 개인용이라는 점입니다. 이 방법은 Imagick이 ImageMagick 버전 6.5.7 이상에서 컴파일 된 경우 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c9828549a33b72870b3c7b81b5502607e0f1dca" translate="yes" xml:space="preserve">
          <source>Associates data, or info, with the object currently pointed to by the iterator.</source>
          <target state="translated">데이터 또는 정보를 반복자가 현재 가리키는 오브젝트와 연관시킵니다.</target>
        </trans-unit>
        <trans-unit id="166b16292091fbc46d27cd1c99cbf6c9d27e47c3" translate="yes" xml:space="preserve">
          <source>Associates one or more options with the wand.</source>
          <target state="translated">하나 이상의 옵션을 지팡이와 연결합니다.</target>
        </trans-unit>
        <trans-unit id="45c5cfcba913a3dd1dff2e72bee92bc76fc85d35" translate="yes" xml:space="preserve">
          <source>Associates the &lt;code&gt;event_base&lt;/code&gt; with the &lt;code&gt;event&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;event_base&lt;/code&gt; 를 &lt;code&gt;event&lt;/code&gt; 와 연관시킵니다 .</target>
        </trans-unit>
        <trans-unit id="495b52a9efbff1015cd0c7a51d193f78a706cb1c" translate="yes" xml:space="preserve">
          <source>Associates the next image in the image list with an Gmagick object.</source>
          <target state="translated">이미지 목록의 다음 이미지를 Gmagick 객체와 연결합니다.</target>
        </trans-unit>
        <trans-unit id="cd78f087801c46f3ef7808c1f0a3ca56b6b6cab2" translate="yes" xml:space="preserve">
          <source>Associates the next image in the image list with an Imagick object.</source>
          <target state="translated">이미지 목록의 다음 이미지를 Imagick 객체와 연결합니다.</target>
        </trans-unit>
        <trans-unit id="887488be6bb33503047c83872f6ebef7678fc9ff" translate="yes" xml:space="preserve">
          <source>Associates the previous image in an image list with the Gmagick object.</source>
          <target state="translated">이미지 목록의 이전 이미지를 Gmagick 객체와 연결합니다.</target>
        </trans-unit>
        <trans-unit id="b7d696bef2889daa816d6df6678040a467b6cfa9" translate="yes" xml:space="preserve">
          <source>Associative</source>
          <target state="translated">Associative</target>
        </trans-unit>
        <trans-unit id="e3e16c3f4f1b987fe2bc37e17653560d1b7cbb2f" translate="yes" xml:space="preserve">
          <source>Associative (&lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;) keys will be maintained, but numeric keys will be re-indexed.</source>
          <target state="translated">연관 ( &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; ) 키는 유지되지만 숫자 키는 다시 색인화됩니다.</target>
        </trans-unit>
        <trans-unit id="20cdb4a455dea5441e25389d055f579e80c22873" translate="yes" xml:space="preserve">
          <source>Associative &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; containing the keyword-value pairs for this locale</source>
          <target state="translated">이 로케일의 키워드-값 쌍을 포함하는 연관 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e755f1688a5fe496e11b0913d50e3a697ffb2674" translate="yes" xml:space="preserve">
          <source>Associative array containing crypt, compression, and message authentication code (MAC) method preferences for messages sent from client to server.</source>
          <target state="translated">클라이언트에서 서버로 전송 된 메시지에 대한 암호화, 압축 및 메시지 인증 코드 (MAC) 방법 기본 설정이 포함 된 연관 배열.</target>
        </trans-unit>
        <trans-unit id="b265115ee2ba17f5807f52bbca9567f7118017c9" translate="yes" xml:space="preserve">
          <source>Associative array containing crypt, compression, and message authentication code (MAC) method preferences for messages sent from server to client.</source>
          <target state="translated">서버에서 클라이언트로 전송 된 메시지에 대한 암호화, 압축 및 메시지 인증 코드 (MAC) 방법 기본 설정이 포함 된 연관 배열.</target>
        </trans-unit>
        <trans-unit id="2ddce46b2b7d7aed75776330ed00fe1af7197903" translate="yes" xml:space="preserve">
          <source>Associative array containing document IDs as keys and array of attribute values as values.</source>
          <target state="translated">키로 문서 ID를 포함하고 값으로 속성 값의 배열을 포함하는 연관 배열.</target>
        </trans-unit>
        <trans-unit id="650a04b079dc614141cde117feb62b02307a8641" translate="yes" xml:space="preserve">
          <source>Associative array of SSL context options One of &lt;a href=&quot;class.eventsslcontext#eventsslcontext.constants&quot;&gt; &lt;em&gt;EventSslContext::OPT_*&lt;/em&gt; constants&lt;/a&gt; .</source>
          <target state="translated">SSL 컨텍스트 옵션의 연관 배열 &lt;a href=&quot;class.eventsslcontext#eventsslcontext.constants&quot;&gt;&lt;em&gt;EventSslContext :: OPT_ *&lt;/em&gt;&lt;/a&gt; constant 중 하나입니다 . &lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f3f253a48cf86eda7f4ab77f2ba7e62ec82c0a82" translate="yes" xml:space="preserve">
          <source>Associative array of additional highlighting options (see below).</source>
          <target state="translated">추가 강조 옵션의 연관 배열 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="8a2ffbb0c59b84e0d345c3705bc9e017d0e6c2cd" translate="yes" xml:space="preserve">
          <source>Associative array of attributes to assign to this public key. Refer to ietf-secsh-publickey-subsystem for a list of supported attributes. To mark an attribute as mandatory, precede its name with an asterisk. If the server is unable to support an attribute marked mandatory, it will abort the add process.</source>
          <target state="translated">이 공개 키에 할당 할 속성의 연관 배열입니다. 지원되는 속성 목록은 ietf-secsh-publickey-subsystem을 참조하십시오. 속성을 필수로 표시하려면 이름 앞에 별표를 붙입니다. 서버가 필수로 표시된 속성을 지원할 수없는 경우 추가 프로세스가 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="2e3ff038cf5ca18f5bf45f764c86d882bd1de42e" translate="yes" xml:space="preserve">
          <source>Associative array of field names and field weights.</source>
          <target state="translated">필드 이름 및 필드 가중치의 연관 배열.</target>
        </trans-unit>
        <trans-unit id="e0b06b05ea2c77e138a5cff31e48bbf6a2347485" translate="yes" xml:space="preserve">
          <source>Associative array of options or bitwise disjunction of flags. If filter accepts options, flags can be provided in &quot;flags&quot; field of array.</source>
          <target state="translated">옵션의 연관 배열 또는 플래그의 비트 단위 분리. 필터가 옵션을 허용하면 배열의 &quot;플래그&quot;필드에 플래그를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16e1732c8b48fc6127882d97d3439bf7f0caff1b" translate="yes" xml:space="preserve">
          <source>Associative array of options or bitwise disjunction of flags. If filter accepts options, flags can be provided in &quot;flags&quot; field of array. For the &quot;callback&quot; filter, &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt; type should be passed. The callback must accept one argument, the value to be filtered, and return the value after filtering/sanitizing it.</source>
          <target state="translated">옵션의 연관 배열 또는 플래그의 비트 단위 분리. 필터가 옵션을 허용하면 플래그는 배열의 &quot;플래그&quot;필드에 제공 될 수 있습니다. &quot;콜백&quot;필터의 경우 &lt;a href=&quot;language.types.callable&quot;&gt;호출 가능&lt;/a&gt; 유형이 전달되어야합니다. 콜백은 필터링 할 값인 하나의 인수를 허용하고이를 필터링 / 위생 한 후에 값을 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="d20b5a26a1cdf631954b50a5206246dff93d9c8a" translate="yes" xml:space="preserve">
          <source>Associativity</source>
          <target state="translated">Associativity</target>
        </trans-unit>
        <trans-unit id="b920a434538bc9c1f45fd5e9671af66304e4a95e" translate="yes" xml:space="preserve">
          <source>Assuming &quot;bjori&quot; executes this script</source>
          <target state="translated">&quot;bjori&quot;가이 스크립트를 실행한다고 가정</target>
        </trans-unit>
        <trans-unit id="c00588eae0cc6fb3d1d0b4cd8ff91f43b81ce043" translate="yes" xml:space="preserve">
          <source>Assuming that this phar is at &lt;em&gt;/path/to/myphar.phar&lt;/em&gt; and it contains &lt;em&gt;file.php&lt;/em&gt; and &lt;em&gt;file2.txt&lt;/em&gt;, if &lt;em&gt;file.php&lt;/em&gt; contains this code:</source>
          <target state="translated">이의 Phar가에 있다고 가정 &lt;em&gt;/path/to/myphar.phar&lt;/em&gt; 및 포함 된 &lt;em&gt;file.php&lt;/em&gt; 와 &lt;em&gt;file2.txt를&lt;/em&gt; 하는 경우, &lt;em&gt;file.php가&lt;/em&gt; 이 코드를 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="18888678f2309c4c00a32f371aaf24204fe393d2" translate="yes" xml:space="preserve">
          <source>Assuming the &quot;name&quot; cookie has been set earlier</source>
          <target state="translated">&quot;이름&quot;쿠키가 이전에 설정되었다고 가정</target>
        </trans-unit>
        <trans-unit id="6c8f1e97f337dba0abeee2b93c0488862d4f95b9" translate="yes" xml:space="preserve">
          <source>Assuming the following local name space registerd:</source>
          <target state="translated">다음의 로컬 네임 스페이스가 등록되었다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="34bb5f9941efaed9812f24864dd87283b044a047" translate="yes" xml:space="preserve">
          <source>Assuming the user POSTed name=Hannes</source>
          <target state="translated">사용자가 POST를했다고 가정하면 name = Hannes</target>
        </trans-unit>
        <trans-unit id="c40c7a8bf1954b166116c004c46267ad4140054c" translate="yes" xml:space="preserve">
          <source>Assuming the user entered http://example.com/?name=Hannes</source>
          <target state="translated">사용자가 http://example.com/?name=Hannes를 입력했다고 가정</target>
        </trans-unit>
        <trans-unit id="143edc5274f5627d36f1b6a13b28edd1b19bb717" translate="yes" xml:space="preserve">
          <source>Assuming there are no argument errors, returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; iif the calendars are equivalent except possibly for their set time.</source>
          <target state="translated">인수 오류가 없다고 가정하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 를&lt;/strong&gt; 반환 &lt;strong&gt;합니다.&lt;/strong&gt; 달력이 설정된 시간을 제외하고 동등한 경우 .</target>
        </trans-unit>
        <trans-unit id="fa6ae2bf9ed71d5ad8762d8a0cc336cd2cd0238d" translate="yes" xml:space="preserve">
          <source>Assuming there are no argument errors, returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; iif the field is set.</source>
          <target state="translated">인수 오류가 없다고 가정하면 필드가 설정된 경우 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 를&lt;/strong&gt; 리턴 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e6d2c550c3e756043f358b2da04f22716bbd32b9" translate="yes" xml:space="preserve">
          <source>Assuming you're familiar with the concept of functions (if you're not, take a look at the chapter about &lt;a href=&quot;https://secure.php.net/manual/en/language.functions.php&quot;&gt;functions&lt;/a&gt;), you'd assume that typing &lt;em&gt;$c = foo()&lt;/em&gt; is essentially just like writing &lt;em&gt;$c = 5&lt;/em&gt;, and you're right. Functions are expressions with the value of their return value. Since &lt;em&gt;foo()&lt;/em&gt; returns 5, the value of the expression '&lt;em&gt;foo()&lt;/em&gt;' is 5. Usually functions don't just return a static value but compute something.</source>
          <target state="translated">이 기능의 개념 (당신이하지 않으면, 대한 장에서 살펴 걸릴 익숙한 가정 &lt;a href=&quot;https://secure.php.net/manual/en/language.functions.php&quot;&gt;기능&lt;/a&gt; ), 당신은 입력한다고 가정 것 &lt;em&gt;$ C = foo는 ()가&lt;/em&gt; 본질적으로 쓰는처럼 &lt;em&gt;$ C = 5&lt;/em&gt; , 및 네가 옳아. 함수는 반환 값이있는 표현식입니다. 때문에 &lt;em&gt;foo는 ()&lt;/em&gt; 반환 (5), 식 '의 값 &lt;em&gt;foo는 ()는&lt;/em&gt; '5. 일반적으로 함수를 그냥 정적 값 만 계산 뭔가를 반환하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="eafacaa14b2ffe9b23cc2937d25f083e9b900145" translate="yes" xml:space="preserve">
          <source>Astronomical twilight: the point at which the sun ends being the source of any illumination.</source>
          <target state="translated">천문 황혼 : 태양이 조명의 근원이되는 시점.</target>
        </trans-unit>
        <trans-unit id="d70c0a8e973643d84fd0d9f54cf17f31c06ff136" translate="yes" xml:space="preserve">
          <source>Astronomical twilight: the point at which the sun starts being the source of any illumination.</source>
          <target state="translated">천문 황혼 : 태양이 조명의 원천이되기 시작하는 지점.</target>
        </trans-unit>
        <trans-unit id="2b77dd5a9f3c934defb277cc8f53da1e9c229158" translate="yes" xml:space="preserve">
          <source>At most 15 events allowed.</source>
          <target state="translated">최대 15 개의 이벤트가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="436f3de5697e06e31d116f566ae7c286e1137b7f" translate="yes" xml:space="preserve">
          <source>At some point in the future, the PHP team might want to add another constant or keyword, or a constant in other code may interfere. For example, it is already wrong to use the words &lt;em&gt;empty&lt;/em&gt; and &lt;em&gt;default&lt;/em&gt; this way, since they are &lt;a href=&quot;https://secure.php.net/manual/en/reserved.php&quot;&gt;reserved keywords&lt;/a&gt;.</source>
          <target state="translated">나중에 PHP 팀은 다른 상수 나 키워드를 추가하거나 다른 코드의 상수가 간섭 할 수 있습니다. 예를 들어, &lt;a href=&quot;https://secure.php.net/manual/en/reserved.php&quot;&gt;키워드&lt;/a&gt; 가 예약되어 있으므로이 방법으로 &lt;em&gt;empty&lt;/em&gt; 및 &lt;em&gt;default&lt;/em&gt; 를 사용하는 것은 이미 잘못되었습니다 .</target>
        </trans-unit>
        <trans-unit id="de0f6e04ec514294fb5b12d0191c48a49e66efd8" translate="yes" xml:space="preserve">
          <source>At startup, PHP tries to enable the VT100 feature of the &lt;strong&gt;&lt;code&gt;STDOUT&lt;/code&gt;&lt;/strong&gt;/&lt;strong&gt;&lt;code&gt;STDERR&lt;/code&gt;&lt;/strong&gt; streams. By the way, if those streams are redirected to a file, the VT100 features may not be enabled.</source>
          <target state="translated">PHP는 시작할 때 &lt;strong&gt; &lt;code&gt;STDOUT&lt;/code&gt; &lt;/strong&gt; / &lt;strong&gt; &lt;code&gt;STDERR&lt;/code&gt; &lt;/strong&gt; 스트림 의 VT100 기능을 활성화하려고합니다 . 그런데 해당 스트림이 파일로 리디렉션되면 VT100 기능이 활성화되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e107debea9e38ad0a9777b105f6b753e662e2604" translate="yes" xml:space="preserve">
          <source>At the end of each iteration, &lt;var&gt;&lt;var&gt;expr3&lt;/var&gt;&lt;/var&gt; is evaluated (executed).</source>
          <target state="translated">각 반복이 끝나면 &lt;var&gt;&lt;var&gt;expr3&lt;/var&gt;&lt;/var&gt; 이 평가 (실행)됩니다.</target>
        </trans-unit>
        <trans-unit id="fcf4ce4d9e00a712abc2d80ed1d23c53a1934f5d" translate="yes" xml:space="preserve">
          <source>At this point two variables have been defined and stored in the PHP symbol tree: &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; with contents &quot;hello&quot; and &lt;var&gt;&lt;var&gt;$hello&lt;/var&gt;&lt;/var&gt; with contents &quot;world&quot;. Therefore, this statement:</source>
          <target state="translated">이 시점에서 두 개의 변수가 정의되어 PHP 기호 트리에 저장되었습니다 : 내용이 &quot;hello&quot;및 &lt;var&gt;&lt;var&gt;$hello&lt;/var&gt;&lt;/var&gt; &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; 내용이 &quot;world&quot;인 입니다. 따라서이 진술은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9f288826e428603628ebffc048a34b71b5b766ea" translate="yes" xml:space="preserve">
          <source>At this point, you can go about using &lt;em&gt;$xml-&amp;gt;body&lt;/em&gt; and such.</source>
          <target state="translated">이 시점에서 &lt;em&gt;$ xml-&amp;gt; body&lt;/em&gt; 등을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72458d0c7cd7205f3f43497e70e935e1b28b1964" translate="yes" xml:space="preserve">
          <source>At this point, you can go about using &lt;em&gt;$xml-&amp;gt;title&lt;/em&gt; and any other elements.</source>
          <target state="translated">이 시점에서 &lt;em&gt;$ xml-&amp;gt; title&lt;/em&gt; 및 기타 요소를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70b23ebbacd174b20469189cfd436dab3063e959" translate="yes" xml:space="preserve">
          <source>Atlantic time zones.</source>
          <target state="translated">대서양 시간대.</target>
        </trans-unit>
        <trans-unit id="813d6410e499ccb0aa4a815f4f1783c27fa97cf5" translate="yes" xml:space="preserve">
          <source>Atom (example: 2005-08-15T15:52:01+00:00)</source>
          <target state="translated">원자 (예 : 2005-08-15T15 : 52 : 01 + 00 : 00)</target>
        </trans-unit>
        <trans-unit id="b490cfdfc99a22abc8d8266e7b1c52f163d48d75" translate="yes" xml:space="preserve">
          <source>Atomically attempts to find &lt;code&gt;key&lt;/code&gt; in the cache, if it cannot be found &lt;code&gt;generator&lt;/code&gt; is called, passing &lt;code&gt;key&lt;/code&gt; as the only argument. The return value of the call is then cached with the optionally specified &lt;code&gt;ttl&lt;/code&gt;, and returned.</source>
          <target state="translated">원자 찾으려고 시도합니다 &lt;code&gt;key&lt;/code&gt; 가 발견되지 않는 경우, 캐시에 &lt;code&gt;generator&lt;/code&gt; 전달 호출 &lt;code&gt;key&lt;/code&gt; 유일한 인수로. 그런 다음 호출의 리턴 값은 선택적으로 지정된 &lt;code&gt;ttl&lt;/code&gt; 로 캐시되어 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="0935213897cecd3d9fe9e54f3f000267c60c6aec" translate="yes" xml:space="preserve">
          <source>Attach another kernel to this kernel to allow them to both be applied in a single morphology or filter function. Returns the new combined kernel.</source>
          <target state="translated">이 커널에 다른 커널을 연결하여 단일 형태 또는 필터 기능으로 적용 할 수 있습니다. 결합 된 새로운 커널을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4fbfe2b6c124f064fd233e4e07a0de4eb050dbff" translate="yes" xml:space="preserve">
          <source>Attaches an &lt;a href=&quot;class.splobserver&quot;&gt;SplObserver&lt;/a&gt; so that it can be notified of updates.</source>
          <target state="translated">업데이트 알림을받을 수 있도록 &lt;a href=&quot;class.splobserver&quot;&gt;SplObserver를&lt;/a&gt; 연결 합니다.</target>
        </trans-unit>
        <trans-unit id="4ccfd832dc7bf5ee4b07d422f485b82b5de484b3" translate="yes" xml:space="preserve">
          <source>Attaches iterator information.</source>
          <target state="translated">반복자 정보를 첨부합니다.</target>
        </trans-unit>
        <trans-unit id="2e8e3c76bf0d46aba99b78dd650c0961aa92530d" translate="yes" xml:space="preserve">
          <source>Attempt &quot;none&quot; authentication which usually will (and should) fail. As part of the failure, this function will return an array of accepted authentication methods.</source>
          <target state="translated">일반적으로 실패하고 실패해야하는 &quot;없음&quot;인증을 시도하십시오. 실패의 일부로이 함수는 승인 된 인증 방법의 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="af67642cea8ae5b622274c593f3624d8e7ebcc53" translate="yes" xml:space="preserve">
          <source>Attempt to lock the Mutex for the caller without blocking if the Mutex is owned (locked) by another Thread.</source>
          <target state="translated">Mutex가 다른 스레드에 의해 소유 (잠금) 된 경우 차단하지 않고 호출자의 Mutex를 잠그려고 시도하십시오.</target>
        </trans-unit>
        <trans-unit id="84dc0d21b125883b387d6feb938ff6d32c2d4bbe" translate="yes" xml:space="preserve">
          <source>Attempt to lock the Mutex for the caller.</source>
          <target state="translated">호출자의 Mutex를 잠그려고합니다.</target>
        </trans-unit>
        <trans-unit id="d15c2b37a1ebb3d4bae95ccc4fcd3a0e642ae597" translate="yes" xml:space="preserve">
          <source>Attempt to resize destination to fit distorted source</source>
          <target state="translated">왜곡 된 소스에 맞게 대상 크기를 조정하십시오.</target>
        </trans-unit>
        <trans-unit id="edb304d70a6f6e80283372f12a4a77f66d8ba7c1" translate="yes" xml:space="preserve">
          <source>Attempting to access an array key which has not been defined is the same as accessing any other undefined variable: an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt;-level error message will be issued, and the result will be &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">정의되지 않은 배열 키에 액세스하는 것은 다른 정의되지 않은 변수에 액세스하는 것과 동일합니다. &lt;strong&gt; &lt;code&gt;E_NOTICE&lt;/code&gt; &lt;/strong&gt; 레벨 오류 메시지가 발행되고 결과는 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 입니다.&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5ebe2946da0893474c14cd019b774d198d5bddda" translate="yes" xml:space="preserve">
          <source>Attempting to throw an exception from a destructor (called in the time of script termination) causes a fatal error.</source>
          <target state="translated">소멸자 (스크립트 종료시 호출)에서 예외를 처리하려고하면 치명적인 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c6d980e12bfc515a10f012b05210198a13995f27" translate="yes" xml:space="preserve">
          <source>Attempting to use a combination of the string and width specifiers with character sets that require more than one byte per character may result in unexpected results</source>
          <target state="translated">문자 당 하나 이상의 바이트를 요구하는 문자 세트와 함께 문자열 및 너비 지정자를 조합하여 사용하려고하면 예기치 않은 결과가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52bb7be9f9dc86d586b31f436b3a20b38b5e0bf0" translate="yes" xml:space="preserve">
          <source>Attempting to use a position specifier greater than &lt;strong&gt;&lt;code&gt;PHP_INT_MAX&lt;/code&gt;&lt;/strong&gt; will result in &lt;strong&gt;sprintf()&lt;/strong&gt; generating warnings.</source>
          <target state="translated">보다 위치 지정자 더 사용하려고 &lt;strong&gt; &lt;code&gt;PHP_INT_MAX&lt;/code&gt; 가&lt;/strong&gt; 발생할 것이다 &lt;strong&gt;()의 sprintf&lt;/strong&gt; 발생 경고.</target>
        </trans-unit>
        <trans-unit id="ad60f0b93ad2394c3b513c383829e8586f796d11" translate="yes" xml:space="preserve">
          <source>Attempts to change the group of the file &lt;code&gt;filename&lt;/code&gt; to &lt;code&gt;group&lt;/code&gt;.</source>
          <target state="translated">시도는 파일의 그룹을 변경하려면 &lt;code&gt;filename&lt;/code&gt; 에 &lt;code&gt;group&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="152a9d5ff1225e2dba36d59e297dd1664693dbd4" translate="yes" xml:space="preserve">
          <source>Attempts to change the group of the symlink &lt;code&gt;filename&lt;/code&gt; to &lt;code&gt;group&lt;/code&gt;.</source>
          <target state="translated">시도는 심볼릭 링크의 그룹을 변경하려면 &lt;code&gt;filename&lt;/code&gt; 에 &lt;code&gt;group&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eb41c3804834b890b9b26d2c67b0a0c73fabb207" translate="yes" xml:space="preserve">
          <source>Attempts to change the mode of the specified file to that given in &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">지정된 파일의 모드를 mode에 지정된 모드로 변경하려고 시도 &lt;code&gt;mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e93accf04479ace620d6feeb3749fa71221d36b0" translate="yes" xml:space="preserve">
          <source>Attempts to change the owner of the file &lt;code&gt;filename&lt;/code&gt; to user &lt;code&gt;user&lt;/code&gt;. Only the superuser may change the owner of a file.</source>
          <target state="translated">파일 &lt;code&gt;filename&lt;/code&gt; 의 소유자 를 user &lt;code&gt;user&lt;/code&gt; 로 변경하려고합니다 . 수퍼 유저 만 파일 소유자를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24a1ab7fbdbd5fba4a02eb24d26892808dd9f64e" translate="yes" xml:space="preserve">
          <source>Attempts to change the owner of the symlink &lt;code&gt;filename&lt;/code&gt; to user &lt;code&gt;user&lt;/code&gt;.</source>
          <target state="translated">symlink &lt;code&gt;filename&lt;/code&gt; 의 소유자 를 user &lt;code&gt;user&lt;/code&gt; 로 변경하려고합니다 .</target>
        </trans-unit>
        <trans-unit id="f819255c5f838392963857bbacf32523411f6d6d" translate="yes" xml:space="preserve">
          <source>Attempts to create the directory specified by pathname.</source>
          <target state="translated">pathname으로 지정된 디렉토리를 작성하려고합니다.</target>
        </trans-unit>
        <trans-unit id="f39f01c25e72aa10e4728220d12a186e6acebff7" translate="yes" xml:space="preserve">
          <source>Attempts to determine the capabilities of the user's browser, by looking up the browser's information in the &lt;var&gt;browscap.ini&lt;/var&gt; file.</source>
          <target state="translated">&lt;var&gt;browscap.ini&lt;/var&gt; 에서 브라우저 정보를 찾아서 사용자 브라우저의 기능을 확인하려고합니다. 파일 합니다.</target>
        </trans-unit>
        <trans-unit id="6611434b90ad0e910db83dbe66f2a24d7ab1b0f9" translate="yes" xml:space="preserve">
          <source>Attempts to load an SQLite extension library.</source>
          <target state="translated">SQLite 확장 라이브러리를로드하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="3cf6cb2ca0c64aad243585b3bc95d1f57dc93a95" translate="yes" xml:space="preserve">
          <source>Attempts to remove the directory named by &lt;code&gt;dirname&lt;/code&gt;. The directory must be empty, and the relevant permissions must permit this. A &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; level error will be generated on failure.</source>
          <target state="translated">&lt;code&gt;dirname&lt;/code&gt; 으로 이름이 지정된 디렉토리를 제거하려고 시도합니다 . 디렉토리가 비어 있어야하며 관련 권한이이를 허용해야합니다. &lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt; 수준 오류 실패에 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="32b65ab8b687cf4f256c4f2313be53b7062442e6" translate="yes" xml:space="preserve">
          <source>Attempts to rename &lt;code&gt;oldname&lt;/code&gt; to &lt;code&gt;newname&lt;/code&gt;, moving it between directories if necessary. If renaming a file and &lt;code&gt;newname&lt;/code&gt; exists, it will be overwritten. If renaming a directory and &lt;code&gt;newname&lt;/code&gt; exists, this function will emit a warning.</source>
          <target state="translated">시도는 이름을 바꾸려면 &lt;code&gt;oldname&lt;/code&gt; 에 &lt;code&gt;newname&lt;/code&gt; 의 필요에 따라 디렉토리 사이를 이동. 파일 및 이름을 바꾸는 경우 &lt;code&gt;newname&lt;/code&gt; 의 것은 존재, 그것은 덮어 쓰게됩니다. 디렉토리 이름을 바꾸고 &lt;code&gt;newname&lt;/code&gt; 이 존재하면이 함수는 경고를냅니다.</target>
        </trans-unit>
        <trans-unit id="a370a9db8bfd27e7498aa38b20e2c61176befed6" translate="yes" xml:space="preserve">
          <source>Attempts to set the access and modification times of the file named in the &lt;code&gt;filename&lt;/code&gt; parameter to the value given in &lt;code&gt;time&lt;/code&gt;. Note that the access time is always modified, regardless of the number of parameters.</source>
          <target state="translated">&lt;code&gt;filename&lt;/code&gt; 매개 변수에 이름이 지정된 파일의 액세스 및 수정 시간을 &lt;code&gt;time&lt;/code&gt; 에 지정된 값 으로 설정하려고합니다 . 매개 변수 수에 상관없이 액세스 시간은 항상 수정됩니다.</target>
        </trans-unit>
        <trans-unit id="ab5d56cbc1918ca9cc127007073f195ba495aae3" translate="yes" xml:space="preserve">
          <source>Attempts to unlock the Mutex for the caller, optionally destroying the Mutex handle. The calling thread should own the Mutex at the time of the call.</source>
          <target state="translated">호출자의 Mutex 잠금을 해제하여 선택적으로 Mutex 핸들을 손상시킵니다. 호출시 호출 스레드는 Mutex를 소유해야합니다.</target>
        </trans-unit>
        <trans-unit id="cf3c5f7af63e40195cf9f1d07d9fcef3b59c3156" translate="yes" xml:space="preserve">
          <source>Attempts to use &lt;strong&gt;&lt;code&gt;IMG_CROP_TRANSPARENT&lt;/code&gt;&lt;/strong&gt; and if it fails it falls back to &lt;strong&gt;&lt;code&gt;IMG_CROP_SIDES&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;IMG_CROP_TRANSPARENT&lt;/code&gt; &lt;/strong&gt; 를 사용하려고 시도 하고 실패하면 &lt;strong&gt; &lt;code&gt;IMG_CROP_SIDES&lt;/code&gt; &lt;/strong&gt; 로 &lt;strong&gt;폴백&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="b57a0d8e805c7057a2b772a838f522edba13e4d2" translate="yes" xml:space="preserve">
          <source>Attribute node</source>
          <target state="translated">속성 노드</target>
        </trans-unit>
        <trans-unit id="9e6ee50064162c5da001c6a27a80e9b23826dd3e" translate="yes" xml:space="preserve">
          <source>Attribute specifier - one of the &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformatattribute&quot;&gt; numeric attribute&lt;/a&gt; constants.</source>
          <target state="translated">속성 지정자- &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformatattribute&quot;&gt;숫자 속성&lt;/a&gt; 상수 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="2abd977715e56fda330ce05c89f96bca23422008" translate="yes" xml:space="preserve">
          <source>Attribute specifier - one of the &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformattextattribute&quot;&gt; text attribute&lt;/a&gt; constants.</source>
          <target state="translated">속성 지정자- &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformattextattribute&quot;&gt;텍스트 속성&lt;/a&gt; 상수 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="d90294694005f04e4c81b25f5482566ead146965" translate="yes" xml:space="preserve">
          <source>Attribute specifier - one of the &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformattextattribute&quot;&gt;text attribute&lt;/a&gt; constants.</source>
          <target state="translated">속성 지정자- &lt;a href=&quot;class.numberformatter#intl.numberformatter-constants.unumberformattextattribute&quot;&gt;텍스트 속성&lt;/a&gt; 상수 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="2b9037d6c7ae81e4ddae316b5e746b6a6e5e1ef8" translate="yes" xml:space="preserve">
          <source>Attribute to get value for.</source>
          <target state="translated">가치를 얻는 속성.</target>
        </trans-unit>
        <trans-unit id="fd2ca195d49a4957fe0ce6f33a5dfb912fb16cba" translate="yes" xml:space="preserve">
          <source>Attribute value, or &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="translated">속성 값 또는 오류시 &lt;a href=&quot;language.types.boolean&quot;&gt;부울 &lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="45ab686a26a9c623c53a098d31d25c06b4808f79" translate="yes" xml:space="preserve">
          <source>Attribute value.</source>
          <target state="translated">속성 값</target>
        </trans-unit>
        <trans-unit id="1dfca9318870e4107f87a42b70e4f03066cf7d03" translate="yes" xml:space="preserve">
          <source>Attribute.</source>
          <target state="translated">Attribute.</target>
        </trans-unit>
        <trans-unit id="53408828b63036e05d2307f9c2a4b15d7a641d1c" translate="yes" xml:space="preserve">
          <source>Attributes assigned to this publickey. The most common attribute, and the only one supported by publickey version 1 servers, is &lt;em&gt;comment&lt;/em&gt;, which may be any freeform string.</source>
          <target state="translated">이 공개 키에 할당 된 속성. 가장 일반적인 속성이며 공개 키 버전 1 서버가 지원하는 유일한 속성은 &lt;em&gt;주석입니다&lt;/em&gt; 입니다.이 문자열은 자유 형식 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6496e2aaf3f769a2151a819d4be2eceb0f832796" translate="yes" xml:space="preserve">
          <source>Australia time zones.</source>
          <target state="translated">호주 시간대.</target>
        </trans-unit>
        <trans-unit id="4819dcf5400ce23c8f897e9ae80d954608b53e2e" translate="yes" xml:space="preserve">
          <source>Authenticate over SSH using a plain password. Since version 0.12 this function also supports keyboard_interactive method.</source>
          <target state="translated">일반 비밀번호를 사용하여 SSH를 통해 인증하십시오. 버전 0.12부터이 함수는 keyboard_interactive 메소드도 지원합니다.</target>
        </trans-unit>
        <trans-unit id="0f9da85b2d1f3eba9fdbb17f23bcb35509f2d685" translate="yes" xml:space="preserve">
          <source>Authenticate over SSH using the ssh agent</source>
          <target state="translated">ssh 에이전트를 사용하여 SSH를 통해 인증</target>
        </trans-unit>
        <trans-unit id="c5e6ee8978ac7f68446a6614351e61f073f3631d" translate="yes" xml:space="preserve">
          <source>Authenticate using a public hostkey read from a file.</source>
          <target state="translated">파일에서 읽은 공개 호스트 키를 사용하여 인증하십시오.</target>
        </trans-unit>
        <trans-unit id="58888fc66b5a7001c65d2845e13f71c17d1cce57" translate="yes" xml:space="preserve">
          <source>Authenticate using a public key read from a file.</source>
          <target state="translated">파일에서 읽은 공개 키를 사용하여 인증하십시오.</target>
        </trans-unit>
        <trans-unit id="126d5ccc325ecfbd8ea9a48b0aa87eaf06482c36" translate="yes" xml:space="preserve">
          <source>Authorization session handle, this parameter does not have any citation in the core OAuth 1.0 specification but may be implemented by large providers. &lt;a href=&quot;http://oauth.pbwiki.com/ScalableOAuth/&quot;&gt;&amp;raquo; See ScalableOAuth&lt;/a&gt; for more information.</source>
          <target state="translated">권한 부여 세션 핸들,이 매개 변수는 핵심 OAuth 1.0 사양에 인용이 없지만 대규모 공급자가 구현할 수 있습니다. &lt;a href=&quot;http://oauth.pbwiki.com/ScalableOAuth/&quot;&gt;&amp;raquo;자세한 내용은 ScalableOAuth&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3ac9ec42893f6088008e71f9db80456485d08762" translate="yes" xml:space="preserve">
          <source>Autoloading Classes</source>
          <target state="translated">자동 로딩 클래스</target>
        </trans-unit>
        <trans-unit id="f0b983767078f35119d8414efb46ac46e52d2dd8" translate="yes" xml:space="preserve">
          <source>Autoloading Classes &amp;rarr;</source>
          <target state="translated">자동 로딩 클래스 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="00e9a0dd7333291b5d6984d075fcc312de17f038" translate="yes" xml:space="preserve">
          <source>Autoloading is not available if using PHP in CLI &lt;a href=&quot;https://secure.php.net/manual/en/features.commandline.php&quot;&gt;interactive mode&lt;/a&gt;.</source>
          <target state="translated">CLI &lt;a href=&quot;https://secure.php.net/manual/en/features.commandline.php&quot;&gt;대화식 모드&lt;/a&gt; 에서 PHP를 사용하는 경우 자동로드를 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="b8c4d362dde3aacd21a07e3030b9507f68c20847" translate="yes" xml:space="preserve">
          <source>Automatically allocate locks for the bufferevent, so that it&amp;rsquo;s safe to use from multiple threads.</source>
          <target state="translated">버퍼 이벤트에 대한 잠금을 자동으로 할당하므로 여러 스레드에서 안전하게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e0aed2aaa54bde76bd1465afdd3f3836fc4eae9" translate="yes" xml:space="preserve">
          <source>Automatically crops an image according to the given &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="translated">주어진 &lt;code&gt;mode&lt;/code&gt; 에 따라 이미지를 자동으로 자릅니다 .</target>
        </trans-unit>
        <trans-unit id="eea250442b01a58d1ed57279d935f1e0745e2f85" translate="yes" xml:space="preserve">
          <source>Automatically frees allocated memory when its size drops low enough.</source>
          <target state="translated">크기가 충분히 낮아지면 할당 된 메모리를 자동으로 해제합니다.</target>
        </trans-unit>
        <trans-unit id="681b5b5ae10b994e61d9fc53cf8a95498ff0df39" translate="yes" xml:space="preserve">
          <source>Availability</source>
          <target state="translated">Availability</target>
        </trans-unit>
        <trans-unit id="55c5a78ba49f84f67dc7f17e9b623eb20d315c70" translate="yes" xml:space="preserve">
          <source>Available only with &lt;a href=&quot;https://secure.php.net/manual/en/book.mysqlnd.php&quot;&gt;mysqlnd&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://secure.php.net/manual/en/book.mysqlnd.php&quot;&gt;mysqlnd&lt;/a&gt; 에서만 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6ae51c3678ef18644df124a6fe333a95f37deb1" translate="yes" xml:space="preserve">
          <source>Available since</source>
          <target state="translated">이후 사용 가능</target>
        </trans-unit>
        <trans-unit id="3b42ed6c2fef212d2d6b2a775a1b777e155c4f3d" translate="yes" xml:space="preserve">
          <source>Available since &lt;em&gt;libevent 2.1.0-alpha&lt;/em&gt; .</source>
          <target state="translated">&lt;em&gt;libevent 2.1.0-alpha&lt;/em&gt; 부터 사용 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="07fd7abc482f90de334d7d03349b7f67dae289eb" translate="yes" xml:space="preserve">
          <source>Available since PHP 5.1.3. The &lt;strong&gt;&lt;code&gt;CURLINFO_&lt;/code&gt;&lt;/strong&gt; prefix is intentional.</source>
          <target state="translated">PHP 5.1.3부터 ​​사용 가능합니다. &lt;strong&gt; &lt;code&gt;CURLINFO_&lt;/code&gt; 의&lt;/strong&gt; 접두사는 의도적이다.</target>
        </trans-unit>
        <trans-unit id="0cf030a1cebb13fd4cc4af484a74a155ec6d32ae" translate="yes" xml:space="preserve">
          <source>Available since PHP 5.2.1 for versions compiled with libcurl 7.11.2 or greater.</source>
          <target state="translated">libcurl 7.11.2 이상으로 컴파일 된 버전의 경우 PHP 5.2.1부터 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d63a3694d32f240f8cd11874f949cfc782eb976f" translate="yes" xml:space="preserve">
          <source>Available with ImageMagick library version 6.2.9 and higher.</source>
          <target state="translated">ImageMagick 라이브러리 버전 6.2.9 이상에서 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="fbba7c2c42739d6c380fb1fcf68913813c87ac63" translate="yes" xml:space="preserve">
          <source>Average a set of images.</source>
          <target state="translated">이미지 세트의 평균을냅니다.</target>
        </trans-unit>
        <trans-unit id="cd0a1d206e4f93831dda20f5c96ef7e58caab5d5" translate="yes" xml:space="preserve">
          <source>Avoid relative paths</source>
          <target state="translated">상대 경로를 피하십시오</target>
        </trans-unit>
        <trans-unit id="60b23abf98e1576ad82a3cbc5fe67c83dbbac137" translate="yes" xml:space="preserve">
          <source>Avoid using this function in multithreaded webservers. It is better to change the file permissions with &lt;a href=&quot;function.chmod&quot;&gt;chmod()&lt;/a&gt; after creating the file. Using &lt;strong&gt;umask()&lt;/strong&gt; can lead to unexpected behavior of concurrently running scripts and the webserver itself because they all use the same umask.</source>
          <target state="translated">다중 스레드 웹 서버에서는이 기능을 사용하지 마십시오. 파일 을 만든 후 &lt;a href=&quot;function.chmod&quot;&gt;chmod ()를&lt;/a&gt; 사용하여 파일 권한을 변경하는 것이 좋습니다 . &lt;strong&gt;umask ()를&lt;/strong&gt; 사용하면 스크립트와 웹 서버 자체가 모두 동일한 umask를 사용하므로 동시에 실행되는 스크립트와 예기치 않은 동작이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="e1e106769129d490628d379adc9944dc1a97899f" translate="yes" xml:space="preserve">
          <source>BCC &quot;string&quot; - match messages with &quot;string&quot; in the Bcc: field</source>
          <target state="translated">BCC &quot;string&quot;-Bcc : 필드에서 &quot;string&quot;과 메시지를 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="296c881b22081ac7fc1bd5ac34a0f2b351238547" translate="yes" xml:space="preserve">
          <source>BCMath Arbitrary Precision Mathematics Functions</source>
          <target state="translated">BCMath 임의 정밀 수학 함수</target>
        </trans-unit>
        <trans-unit id="a2596acf467ed24508271b8a69c5449a174f62e8" translate="yes" xml:space="preserve">
          <source>BEFORE &quot;date&quot; - match messages with Date: before &quot;date&quot;</source>
          <target state="translated">&quot;날짜&quot;이전- &quot;날짜&quot;이전 날짜와 메시지 일치</target>
        </trans-unit>
        <trans-unit id="f2aaac94f4a3acf6f39c58f2090ab106f3d4930f" translate="yes" xml:space="preserve">
          <source>BIG5</source>
          <target state="translated">BIG5</target>
        </trans-unit>
        <trans-unit id="7c5be79e324f6dc6bfc3c27f72ec6b392480af62" translate="yes" xml:space="preserve">
          <source>BIG5-HKSCS</source>
          <target state="translated">BIG5-HKSCS</target>
        </trans-unit>
        <trans-unit id="8306a543f91f1fd548cb382031a57ef6cd3bdffb" translate="yes" xml:space="preserve">
          <source>BMP</source>
          <target state="translated">BMP</target>
        </trans-unit>
        <trans-unit id="4dd60f86ebc6b695624d88ab45938de2c53f3378" translate="yes" xml:space="preserve">
          <source>BODY &quot;string&quot; - match messages with &quot;string&quot; in the body of the message</source>
          <target state="translated">BODY &quot;string&quot;-메시지 본문에서 &quot;string&quot;과 메시지를 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="2ba208c7a57215fe25a2dc8edeb1eed6d80c323c" translate="yes" xml:space="preserve">
          <source>Back references</source>
          <target state="translated">역 참조</target>
        </trans-unit>
        <trans-unit id="bdaf8c85240d0c5e1f06e716f861619cd56fe644" translate="yes" xml:space="preserve">
          <source>Back references &amp;rarr;</source>
          <target state="translated">역 참조 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="551beddb795532e5a92ad3cdcefa22095436b45e" translate="yes" xml:space="preserve">
          <source>Back references to the named subpatterns can be achieved by &lt;em&gt;(?P=name)&lt;/em&gt; or, since PHP 5.2.2, also by &lt;em&gt;\k&amp;lt;name&amp;gt;&lt;/em&gt; or &lt;em&gt;\k'name'&lt;/em&gt;. Additionally PHP 5.2.4 added support for &lt;em&gt;\k{name}&lt;/em&gt; and &lt;em&gt;\g{name}&lt;/em&gt;, and PHP 5.2.7 for &lt;em&gt;\g&amp;lt;name&amp;gt;&lt;/em&gt; and &lt;em&gt;\g'name'&lt;/em&gt;.</source>
          <target state="translated">명명 된 하위 패턴에 대한 역 참조는 &lt;em&gt;(? P = name)&lt;/em&gt; 또는 PHP 5.2.2부터 &lt;em&gt;\ k &amp;lt;name&amp;gt;&lt;/em&gt; 또는 &lt;em&gt;\ k'name '에&lt;/em&gt; 의해 달성 될 수 있습니다 . 또한 PHP 5.2.4는 &lt;em&gt;\ k {name}&lt;/em&gt; 및 &lt;em&gt;\ g {name}&lt;/em&gt; 및 &lt;em&gt;\ g &amp;lt;name&amp;gt;&lt;/em&gt; 및 &lt;em&gt;\ g'name '에&lt;/em&gt; 대한 PHP 5.2.7에 대한 지원을 추가했습니다 .</target>
        </trans-unit>
        <trans-unit id="a9347d8d598c4cb2d8566155d72f7c4d2046ce40" translate="yes" xml:space="preserve">
          <source>Back up one byte</source>
          <target state="translated">1 바이트 백업</target>
        </trans-unit>
        <trans-unit id="875175e5d5500187d86d4f1da049a869af2b2fd2" translate="yes" xml:space="preserve">
          <source>Backend flags</source>
          <target state="translated">백엔드 플래그</target>
        </trans-unit>
        <trans-unit id="a2827dbf3ea8db45fd7cdaef9b5df9187fed640b" translate="yes" xml:space="preserve">
          <source>Backend flags:</source>
          <target state="translated">백엔드 플래그 :</target>
        </trans-unit>
        <trans-unit id="e74510e6bfcd1b9aa9d70798e995080c6b829007" translate="yes" xml:space="preserve">
          <source>BadFunctionCallException (class)</source>
          <target state="translated">BadFunctionCallException (클래스)</target>
        </trans-unit>
        <trans-unit id="e90c44bcb213a22384f05256f109c3d680db2f1d" translate="yes" xml:space="preserve">
          <source>BadMethodCallException &amp;rarr;</source>
          <target state="translated">BadMethodCallException &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="28eda76447b813f1cd57954f1da801c624b08267" translate="yes" xml:space="preserve">
          <source>BadMethodCallException (class)</source>
          <target state="translated">BadMethodCallException (클래스)</target>
        </trans-unit>
        <trans-unit id="273a15e99059abbcd1bcf640600a53e8689827b3" translate="yes" xml:space="preserve">
          <source>Base (class)</source>
          <target state="translated">베이스 (클래스)</target>
        </trans-unit>
        <trans-unit id="895c330ff6166a7f13701f8d9b78f313787269c8" translate="yes" xml:space="preserve">
          <source>Base64</source>
          <target state="translated">Base64</target>
        </trans-unit>
        <trans-unit id="5a0d8a28fa755a5d7beb92cd2e604e489367d043" translate="yes" xml:space="preserve">
          <source>Base64-encoded data takes about 33% more space than the original data.</source>
          <target state="translated">Base64로 인코딩 된 데이터는 원본 데이터보다 약 33 % 더 많은 공간을 차지합니다.</target>
        </trans-unit>
        <trans-unit id="6dff0ab3670b8ed7dc2fbe6895ebbf63d5a51884" translate="yes" xml:space="preserve">
          <source>Base::__construct</source>
          <target state="translated">Base::__construct</target>
        </trans-unit>
        <trans-unit id="f667add283072c6592f2fe16315e52024273d1fe" translate="yes" xml:space="preserve">
          <source>Base::dispatch</source>
          <target state="translated">Base::dispatch</target>
        </trans-unit>
        <trans-unit id="0a0a3ca2a31205fe51e1ef7b7e643f47ef70a348" translate="yes" xml:space="preserve">
          <source>Base::exit</source>
          <target state="translated">Base::exit</target>
        </trans-unit>
        <trans-unit id="cbd023cb71312498ad371d7e90825f85428a1de7" translate="yes" xml:space="preserve">
          <source>Base::free</source>
          <target state="translated">Base::free</target>
        </trans-unit>
        <trans-unit id="08134d401d298e86bc5d916bdc4ac9616f91eaa9" translate="yes" xml:space="preserve">
          <source>Base::getFeatures</source>
          <target state="translated">Base::getFeatures</target>
        </trans-unit>
        <trans-unit id="21319f80c4fb160851e587d7914fc820fc0d3cae" translate="yes" xml:space="preserve">
          <source>Base::getMethod</source>
          <target state="translated">Base::getMethod</target>
        </trans-unit>
        <trans-unit id="85750375ece2b77256aa0f550276f2c814127db7" translate="yes" xml:space="preserve">
          <source>Base::getTimeOfDayCached</source>
          <target state="translated">Base::getTimeOfDayCached</target>
        </trans-unit>
        <trans-unit id="7ac1e9e9cc6e8232367ef3f6862b52f16603b2a2" translate="yes" xml:space="preserve">
          <source>Base::gotExit</source>
          <target state="translated">Base::gotExit</target>
        </trans-unit>
        <trans-unit id="93b66af7cda409543432fb82db28433754607b05" translate="yes" xml:space="preserve">
          <source>Base::gotStop</source>
          <target state="translated">Base::gotStop</target>
        </trans-unit>
        <trans-unit id="05647dabf8966585ca9a82d1f1cba924e2a5e9cd" translate="yes" xml:space="preserve">
          <source>Base::loop</source>
          <target state="translated">Base::loop</target>
        </trans-unit>
        <trans-unit id="3cae474b96182ad2ab60986840ecd230fd694c98" translate="yes" xml:space="preserve">
          <source>Base::priorityInit</source>
          <target state="translated">Base::priorityInit</target>
        </trans-unit>
        <trans-unit id="0f8589b274d0435f596866753e68f956fc81ed4c" translate="yes" xml:space="preserve">
          <source>Base::reInit</source>
          <target state="translated">Base::reInit</target>
        </trans-unit>
        <trans-unit id="d10b9ea28f1f6ae4b91587cedc5fb075301821d6" translate="yes" xml:space="preserve">
          <source>Base::stop</source>
          <target state="translated">Base::stop</target>
        </trans-unit>
        <trans-unit id="bcf768d4c33d8fd693efe7af7489ca6e9887ccfc" translate="yes" xml:space="preserve">
          <source>Basic SimpleXML usage</source>
          <target state="translated">기본 SimpleXML 사용법</target>
        </trans-unit>
        <trans-unit id="d6fe4bdc5ad8be76b6a3ed3beb2156dddec7661c" translate="yes" xml:space="preserve">
          <source>Basic class definitions begin with the keyword &lt;em&gt;class&lt;/em&gt;, followed by a class name, followed by a pair of curly braces which enclose the definitions of the properties and methods belonging to the class.</source>
          <target state="translated">기본 클래스 정의는 &lt;em&gt;class&lt;/em&gt; 키워드 , 클래스 이름, 클래스에 속하는 속성 및 메서드의 정의를 묶는 중괄호 쌍으로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="0e026311ce3258038a04fbbcfba23d9314d86cc3" translate="yes" xml:space="preserve">
          <source>Basic usage example</source>
          <target state="translated">기본 사용법 예</target>
        </trans-unit>
        <trans-unit id="2b21b330c6c75359b011dfb4f587aaa281e8b660" translate="yes" xml:space="preserve">
          <source>Basic usage example.</source>
          <target state="translated">기본 사용법 예.</target>
        </trans-unit>
        <trans-unit id="5fcebeefad3cdbbf8733aa928160dec7dc90c1a1" translate="yes" xml:space="preserve">
          <source>Basics</source>
          <target state="translated">Basics</target>
        </trans-unit>
        <trans-unit id="3b1d0932e690050294720df747abd11ac3bab048" translate="yes" xml:space="preserve">
          <source>Basics &amp;rarr;</source>
          <target state="translated">기본 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e2fc66c4a563efb1afeaad5db6089bc8a639c940" translate="yes" xml:space="preserve">
          <source>Be aware that some socket implementations need to be handled very carefully. A few basic rules:</source>
          <target state="translated">일부 소켓 구현은 매우 신중하게 처리해야합니다. 몇 가지 기본 규칙 :</target>
        </trans-unit>
        <trans-unit id="0e653b4f1962c8efed3ff3a9eca5e7e481020823" translate="yes" xml:space="preserve">
          <source>Be careful about variables that may match HTML entities. Things like &amp;amp;amp, &amp;amp;copy and &amp;amp;pound are parsed by the browser and the actual entity is used instead of the desired variable name. This is an obvious hassle that the W3C has been telling people about for years. The reference is here: &lt;a href=&quot;http://www.w3.org/TR/html4/appendix/notes.html#h-B.2.2&quot;&gt;&amp;raquo; http://www.w3.org/TR/html4/appendix/notes.html#h-B.2.2&lt;/a&gt;.</source>
          <target state="translated">HTML 엔터티와 일치 할 수있는 변수에주의하십시오. &amp;amp; amp, &amp;amp; copy 및 &amp;amp; pound와 같은 것은 브라우저에 의해 구문 분석되며 원하는 변수 이름 대신 실제 엔티티가 사용됩니다. 이것은 W3C가 사람들에게 수년간 이야기 해 왔던 명백한 번거 로움입니다. 참조는 다음과 같습니다. &lt;a href=&quot;http://www.w3.org/TR/html4/appendix/notes.html#h-B.2.2&quot;&gt;&amp;raquo;http://www.w3.org/TR/html4/appendix/notes.html#hB.2.2&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ae7528b981e33be5c015d406b1a692b7da734594" translate="yes" xml:space="preserve">
          <source>Be careful if you choose to escape characters 0, a, b, f, n, r, t and v. They will be converted to \0, \a, \b, \f, \n, \r, \t and \v, all of which are predefined escape sequences in C. Many of these sequences are also defined in other C-derived languages, including PHP, meaning that you may not get the desired result if you use the output of &lt;strong&gt;addcslashes()&lt;/strong&gt; to generate code in those languages with these characters defined in &lt;code&gt;charlist&lt;/code&gt;.</source>
          <target state="translated">문자 0, a, b, f, n, r, t 및 v를 이스케이프하도록 선택하면주의해야합니다. 문자는 \ 0, \ a, \ b, \ f, \ n, \ r, \ t로 변환됩니다. \ V,이 시퀀스의 대부분은 또한 PHP를 포함한 다른 C에서 파생 된 언어로 정의 된 C에서 미리 정의 된 이스케이프 시퀀스 당신의 출력을 사용하면 원하는 결과를 얻을 수 있다는 의미입니다 모두 &lt;strong&gt;addcslashes ()를&lt;/strong&gt; 생성 해당 문자를 &lt;code&gt;charlist&lt;/code&gt; 에 정의하여 해당 언어로 코드화하십시오 .</target>
        </trans-unit>
        <trans-unit id="3053108a510ba1b77afd958defe49cd56024489f" translate="yes" xml:space="preserve">
          <source>Be careful when passing arguments with mixed types values because &lt;strong&gt;max()&lt;/strong&gt; can produce unpredictable results.</source>
          <target state="translated">&lt;strong&gt;max ()&lt;/strong&gt; 가 예측할 수없는 결과를 생성 할 수 있으므로 혼합 유형 값을 가진 인수를 전달할 때주의하십시오 .</target>
        </trans-unit>
        <trans-unit id="3976d394fd8fd11aa1cc2a0da243feed43adac69" translate="yes" xml:space="preserve">
          <source>Be careful when passing arguments with mixed types values because &lt;strong&gt;min()&lt;/strong&gt; can produce unpredictable results.</source>
          <target state="translated">&lt;strong&gt;min ()&lt;/strong&gt; 이 예측할 수없는 결과를 생성 할 수 있으므로 혼합 유형 값을 가진 인수를 전달할 때주의하십시오 .</target>
        </trans-unit>
        <trans-unit id="d8f215b8c73243b357ec431c2af438b63393fc49" translate="yes" xml:space="preserve">
          <source>Be careful when sorting arrays with mixed types values because &lt;strong&gt;sort()&lt;/strong&gt; can produce unpredictable results.</source>
          <target state="translated">&lt;strong&gt;sort ()&lt;/strong&gt; 가 예측할 수없는 결과를 생성 할 수 있으므로 혼합 유형 값으로 배열을 정렬 할 때는주의하십시오 .</target>
        </trans-unit>
        <trans-unit id="c50239c15e50e1fe1f80c40107413ed269d4e593" translate="yes" xml:space="preserve">
          <source>Be careful when using array syntax. Scalar keys will be coerced to integers by the engine. For example, &lt;code&gt;$map[&quot;1&quot;]&lt;/code&gt; will attempt to access &lt;code&gt;int(1)&lt;/code&gt;, while &lt;code&gt;$map-&amp;gt;get(&quot;1&quot;)&lt;/code&gt; will correctly look up the string key.</source>
          <target state="translated">배열 구문을 사용할 때주의하십시오. 스칼라 키는 엔진에 의해 정수로 강제 변환됩니다. 예를 들어 &lt;code&gt;$map[&quot;1&quot;]&lt;/code&gt; 은 &lt;code&gt;int(1)&lt;/code&gt; 에 액세스하려고 시도하는 반면 &lt;code&gt;$map-&amp;gt;get(&quot;1&quot;)&lt;/code&gt; 은 문자열 키를 올바르게 찾습니다.</target>
        </trans-unit>
        <trans-unit id="02f8db2a41ecfb2ce014807a46b6be164c87a1d7" translate="yes" xml:space="preserve">
          <source>Be sure to read the &lt;a href=&quot;language.namespaces.faq#language.namespaces.faq.quote&quot;&gt;note about escaping namespace names in strings&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;language.namespaces.faq#language.namespaces.faq.quote&quot;&gt;네임 스페이스 이름을 문자열로 이스케이프 처리하는 것에 대한 참고 사항&lt;/a&gt; 을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="4078f231d0fd900e9af9c2e6b297b6fe68fed58b" translate="yes" xml:space="preserve">
          <source>Be sure to use the &lt;em&gt;===&lt;/em&gt; operator when checking for an error. Since the &lt;strong&gt;socket_select()&lt;/strong&gt; may return 0 the comparison with &lt;em&gt;==&lt;/em&gt; would evaluate to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">오류를 확인할 때 &lt;em&gt;===&lt;/em&gt; 연산자 를 사용해야합니다 . &lt;strong&gt;socket_select ()&lt;/strong&gt; 가 0을 리턴 할 수 있기 때문에 &lt;em&gt;==&lt;/em&gt; 와의 비교는 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 로&lt;/strong&gt; 평가됩니다 .</target>
        </trans-unit>
        <trans-unit id="c6d6284dc32d581c16d5f36f187c53b33c102ccb" translate="yes" xml:space="preserve">
          <source>Be sure to use the &lt;em&gt;===&lt;/em&gt; operator when checking for an error. Since the &lt;strong&gt;stream_select()&lt;/strong&gt; may return 0 the comparison with &lt;em&gt;==&lt;/em&gt; would evaluate to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;:</source>
          <target state="translated">오류를 확인할 때 &lt;em&gt;===&lt;/em&gt; 연산자 를 사용해야합니다 . 이후 &lt;strong&gt;stream_select ()가&lt;/strong&gt; 0을 반환 할 수 있습니다과의 비교 &lt;em&gt;==가&lt;/em&gt; 로 평가 것 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="ce6cdaf0cfdb1d5593b2fa773636195b753ad3ae" translate="yes" xml:space="preserve">
          <source>Became available when using Apache 1, or the PHP Apache 2 &lt;em&gt;filter&lt;/em&gt; API. Before this time, it was only available when using the Apache 2 &lt;em&gt;handler&lt;/em&gt; API.</source>
          <target state="translated">Apache 1 또는 PHP Apache 2 &lt;em&gt;필터&lt;/em&gt; API를 사용할 때 사용 가능 합니다. 이전에는 Apache 2 &lt;em&gt;핸들러&lt;/em&gt; API를 사용할 때만 사용할 수있었습니다 .</target>
        </trans-unit>
        <trans-unit id="027cb4ebb31964647b892890a464e9f71c4d523f" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;function.pg-query&quot;&gt;pg_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-query-params&quot;&gt;pg_query_params()&lt;/a&gt; return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the query fails, you must use &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result()&lt;/a&gt; to get the result handle.</source>
          <target state="translated">때문에 &lt;a href=&quot;function.pg-query&quot;&gt;pg_query ()&lt;/a&gt; 및 &lt;a href=&quot;function.pg-query-params&quot;&gt;pg_query_params ()&lt;/a&gt; 반환 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 쿼리가 실패 할 경우, 당신은 사용해야합니다 &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query ()&lt;/a&gt; 와 &lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result를 ()&lt;/a&gt; 결과 핸들을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d8e9f9d5727aacc38922ff70b788e4d436605a3" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;function.pg-query&quot;&gt;pg_query()&lt;/a&gt; returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the query fails, you must use &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query()&lt;/a&gt; and &lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result()&lt;/a&gt; to get the result handle.</source>
          <target state="translated">때문에 &lt;a href=&quot;function.pg-query&quot;&gt;pg_query ()&lt;/a&gt; 반환 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 는&lt;/strong&gt; 쿼리가 실패 할 경우, 당신은 사용해야합니다 &lt;a href=&quot;function.pg-send-query&quot;&gt;pg_send_query ()&lt;/a&gt; 와 &lt;a href=&quot;function.pg-get-result&quot;&gt;pg_get_result를 ()&lt;/a&gt; 결과 핸들을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5120dccb79efabf5d3147b0b200e55fbd248b15" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;language.variables.variable&quot;&gt;variable variables&lt;/a&gt; may not be used with PHP's &lt;a href=&quot;language.variables.superglobals&quot;&gt;Superglobal arrays&lt;/a&gt; within functions, the Superglobal arrays may not be passed into &lt;strong&gt;compact()&lt;/strong&gt;.</source>
          <target state="translated">때문에 &lt;a href=&quot;language.variables.variable&quot;&gt;변수 변수는&lt;/a&gt; PHP의와 함께 사용할 수 없습니다 &lt;a href=&quot;language.variables.superglobals&quot;&gt;전역 배열&lt;/a&gt; 함수 내에서의 슈퍼 전역 배열로 전달되지 않을 수 있습니다 &lt;strong&gt;컴팩트 ()&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="43c0679fcf1d6bf845895686d83b7db80dc57e53" translate="yes" xml:space="preserve">
          <source>Because &lt;em&gt;include&lt;/em&gt; is a special language construct, parentheses are not needed around its argument. Take care when comparing return value.</source>
          <target state="translated">때문에 &lt;em&gt;포함이&lt;/em&gt; 특별한 언어 구조이며, 인자를 괄호로 쌀 필요가 없습니다. 반환 값을 비교할 때주의하십시오.</target>
        </trans-unit>
        <trans-unit id="6e9a18aac7f0175716b5c6f7f505c54e2978d687" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;&lt;code&gt;NAN&lt;/code&gt;&lt;/strong&gt; represents any number of different values, &lt;strong&gt;&lt;code&gt;NAN&lt;/code&gt;&lt;/strong&gt; should not be compared to other values, including itself, and instead should be checked for using &lt;a href=&quot;function.is-nan&quot;&gt;is_nan()&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;strong&gt; &lt;code&gt;NAN&lt;/code&gt; 은&lt;/strong&gt; 상이한 값의 수를 나타내고, &lt;strong&gt; &lt;code&gt;NAN&lt;/code&gt; 가&lt;/strong&gt; 자신을 포함하는 다른 값과 비교되어서는 안되며, 대신하여 검사해야 &lt;a href=&quot;function.is-nan&quot;&gt;is_nan을 ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="742f63224d1d9d85f5fabbd407cd1910cf9bf7d1" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;flock()&lt;/strong&gt; requires a file pointer, you may have to use a special lock file to protect access to a file that you intend to truncate by opening it in write mode (with a &quot;w&quot; or &quot;w+&quot; argument to &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt;).</source>
          <target state="translated">때문에 &lt;strong&gt;무리가 ()&lt;/strong&gt; 파일 포인터가 필요합니다, 당신은 또는 인수가 &quot;+ W&quot;하는 &quot;w&quot;로 (쓰기 모드로 열어 당신이 잘라 내기하고자하는 파일에 대한 보호에 액세스 할 수있는 특수 잠금 파일을 사용 할 수 있습니다 &lt;a href=&quot;function.fopen&quot;&gt;) (fopen의&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="ffe83cce56f87d2269de20db1e518c1cbde72dee" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;str_ireplace()&lt;/strong&gt; replaces left to right, it might replace a previously inserted value when doing multiple replacements. Example #2 in the &lt;a href=&quot;function.str-replace&quot;&gt;str_replace()&lt;/a&gt; documentation demonstrates how this may affect you in practice.</source>
          <target state="translated">&lt;strong&gt;str_ireplace ()&lt;/strong&gt; 는 왼쪽에서 오른쪽으로 대체 하기 때문에 여러 번 교체 할 때 이전에 삽입 된 값을 대체 할 수 있습니다. &lt;a href=&quot;function.str-replace&quot;&gt;str_replace ()&lt;/a&gt; 문서 의 예제 # 2는 이것이 실제로 사용자에게 미치는 영향을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="601d4991fce2daf08791e8b557ade7c881872cf9" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;str_replace()&lt;/strong&gt; replaces left to right, it might replace a previously inserted value when doing multiple replacements. See also the examples in this document.</source>
          <target state="translated">&lt;strong&gt;str_replace ()&lt;/strong&gt; 는 왼쪽에서 오른쪽으로 교체 하기 때문에 여러 번 교체 할 때 이전에 삽입 된 값을 교체 할 수 있습니다. 이 문서의 예제도 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a52be145bfc844459a274ff8346f997d63677d3b" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;strip_tags()&lt;/strong&gt; does not actually validate the HTML, partial or broken tags can result in the removal of more text/data than expected.</source>
          <target state="translated">&lt;strong&gt;strip_tags ()&lt;/strong&gt; 는 실제로 HTML의 유효성을 검사하지 않기 때문에 부분 또는 깨진 태그로 인해 예상보다 많은 텍스트 / 데이터가 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="89ea17c60834c6ec5f4416ee8e82c2a0cafe4caf" translate="yes" xml:space="preserve">
          <source>Because &lt;strong&gt;trim()&lt;/strong&gt; trims characters from the beginning and end of a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, it may be confusing when characters are (or are not) removed from the middle. &lt;em&gt;trim('abc', 'bad')&lt;/em&gt; removes both 'a' and 'b' because it trims 'a' thus moving 'b' to the beginning to also be trimmed. So, this is why it &quot;works&quot; whereas &lt;em&gt;trim('abc', 'b')&lt;/em&gt; seemingly does not.</source>
          <target state="translated">&lt;strong&gt;trim ()&lt;/strong&gt; 은 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 의 시작과 끝에서 문자를 &lt;strong&gt;자르기&lt;/strong&gt; 때문에 문자가 중간에서 제거 될 때 혼동 될 수 있습니다. &lt;em&gt;trim ( 'abc', 'bad')&lt;/em&gt; 은 'a'를 다듬기 때문에 'a'와 'b'를 모두 제거하므로 'b'를 처음으로 이동하면 다듬어 지기도합니다. 그래서 이것이 &quot;작동&quot;하는 반면 &lt;em&gt;trim ( 'abc', 'b')&lt;/em&gt; 는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3ff6c8dcd728af9b42a4513d2b2ed01403471f4d" translate="yes" xml:space="preserve">
          <source>Because PHP determines the types of variables and converts them (generally) as needed, it is not always obvious what type a given variable is at any one time. PHP includes several functions which find out what type a variable is, such as: &lt;a href=&quot;function.gettype&quot;&gt;gettype()&lt;/a&gt;, &lt;a href=&quot;function.is-array&quot;&gt;is_array()&lt;/a&gt;, &lt;a href=&quot;function.is-float&quot;&gt;is_float()&lt;/a&gt;, &lt;a href=&quot;function.is-int&quot;&gt;is_int()&lt;/a&gt;, &lt;a href=&quot;function.is-object&quot;&gt;is_object()&lt;/a&gt;, and &lt;a href=&quot;function.is-string&quot;&gt;is_string()&lt;/a&gt;. See also the chapter on &lt;a href=&quot;https://secure.php.net/manual/en/language.types.php&quot;&gt;Types&lt;/a&gt;.</source>
          <target state="translated">PHP는 변수의 유형을 결정하고 필요에 따라 변수를 (일반적으로) 변환하기 때문에 주어진 변수가 어떤 유형인지 항상 명확하지는 않습니다. PHP에는 변수가 어떤 유형인지 알아내는 여러 함수가 포함되어 있습니다 &lt;a href=&quot;function.gettype&quot;&gt;(&lt;/a&gt; 예 : gettype () , &lt;a href=&quot;function.is-array&quot;&gt;is_array ()&lt;/a&gt; , &lt;a href=&quot;function.is-float&quot;&gt;is_float ()&lt;/a&gt; , &lt;a href=&quot;function.is-int&quot;&gt;is_int ()&lt;/a&gt; , &lt;a href=&quot;function.is-object&quot;&gt;is_object ()&lt;/a&gt; , &lt;a href=&quot;function.is-string&quot;&gt;is_string ())&lt;/a&gt; . &lt;a href=&quot;https://secure.php.net/manual/en/language.types.php&quot;&gt;유형에&lt;/a&gt; 관한 장도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b92cda521a70c5a78c5cea8c208937866a5d133" translate="yes" xml:space="preserve">
          <source>Because PHP's &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; type is signed, and many IP addresses will result in negative integers on 32-bit architectures, you need to use the &quot;%u&quot; formatter of &lt;a href=&quot;function.sprintf&quot;&gt;sprintf()&lt;/a&gt; or &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt; to get the string representation of the unsigned IP address.</source>
          <target state="translated">PHP의 &lt;a href=&quot;language.types.integer&quot;&gt;정수&lt;/a&gt; 유형은 부호가 있고 많은 IP 주소는 32 비트 아키텍처에서 음의 정수 를 생성하므로 부호없는 IP 주소의 문자열 표현을 얻으려면 &lt;a href=&quot;function.sprintf&quot;&gt;sprintf ()&lt;/a&gt; 또는 &lt;a href=&quot;function.printf&quot;&gt;printf ()&lt;/a&gt; 의 &quot;% u&quot;포맷터를 사용해야합니다. .</target>
        </trans-unit>
        <trans-unit id="f9b14713cb8d30151df19327a73df314083c44f3" translate="yes" xml:space="preserve">
          <source>Because PHP's integer type is signed many crc32 checksums will result in negative integers on 32bit platforms. On 64bit installations all &lt;strong&gt;crc32()&lt;/strong&gt; results will be positive integers though.</source>
          <target state="translated">PHP의 정수 유형은 부호가 있기 때문에 많은 crc32 체크섬은 32 비트 플랫폼에서 음의 정수를 생성합니다. 64 비트 설치에서 모든 &lt;strong&gt;crc32 ()&lt;/strong&gt; 결과는 양의 정수입니다.</target>
        </trans-unit>
        <trans-unit id="b35f550177e1513f2591c2057c0eaa8c209ae060" translate="yes" xml:space="preserve">
          <source>Because assigning an array to another variable resets the original array's pointer, our example above would cause an endless loop had we assigned &lt;var&gt;&lt;var&gt;$fruit&lt;/var&gt;&lt;/var&gt; to another variable inside the loop.</source>
          <target state="translated">배열을 다른 변수에 할당하면 원래 배열의 포인터가 재설정되므로 위의 예제 에서는 루프 내의 다른 변수에 &lt;var&gt;&lt;var&gt;$fruit&lt;/var&gt;&lt;/var&gt; 를 할당하면 무한 루프가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="42fbfd636633285fa330d6691aa389758b00d9e3" translate="yes" xml:space="preserve">
          <source>Because every system is setup differently, &lt;strong&gt;phpinfo()&lt;/strong&gt; is commonly used to check &lt;a href=&quot;https://secure.php.net/manual/en/configuration.php&quot;&gt;configuration settings&lt;/a&gt; and for available &lt;a href=&quot;language.variables.predefined&quot;&gt;predefined variables&lt;/a&gt; on a given system.</source>
          <target state="translated">모든 시스템이 다르게 설정되기 때문에 &lt;strong&gt;phpinfo ()&lt;/strong&gt; 는 일반적으로 주어진 시스템에서 &lt;a href=&quot;https://secure.php.net/manual/en/configuration.php&quot;&gt;구성 설정&lt;/a&gt; 과 사용 가능한 &lt;a href=&quot;language.variables.predefined&quot;&gt;사전 정의 된 변수&lt;/a&gt; 를 확인하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="217f649fbba901b97556d64564224606c0cc7d37" translate="yes" xml:space="preserve">
          <source>Because of eccentricities in the performance of libresolv between platforms, &lt;strong&gt;&lt;code&gt;DNS_ANY&lt;/code&gt;&lt;/strong&gt; will not always return every record, the slower &lt;strong&gt;&lt;code&gt;DNS_ALL&lt;/code&gt;&lt;/strong&gt; will collect all records more reliably.</source>
          <target state="translated">플랫폼 간의 libresolv의 성능 기발의, 때문에 &lt;strong&gt; &lt;code&gt;DNS_ANY&lt;/code&gt; 가&lt;/strong&gt; 항상 모든 레코드를 반환하지 않습니다, 느린 &lt;strong&gt; &lt;code&gt;DNS_ALL&lt;/code&gt; 는&lt;/strong&gt; 더 안정적으로 모든 레코드를 수집합니다.</target>
        </trans-unit>
        <trans-unit id="911305148cc73c28fbb531f6591a7ddb6eed0b55" translate="yes" xml:space="preserve">
          <source>Because of the way &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;s are represented internally, you should not test two &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;s for equality.</source>
          <target state="translated">&lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; 가 내부적으로 표현 되는 방식 때문에 두 &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; 가 동일한 지 테스트하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="8e2140f28ef482edb6906f2ffa9ab21aba29bce8" translate="yes" xml:space="preserve">
          <source>Because setting a cookie with a value of &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; will try to delete the cookie, you should not use boolean values. Instead, use &lt;em&gt;0&lt;/em&gt; for &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; and &lt;em&gt;1&lt;/em&gt; for &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 값으로 쿠키를 설정하면 쿠키 를 삭제하려고하므로 부울 값을 사용해서는 안됩니다. 대신, &lt;em&gt;0&lt;/em&gt; 에 대한 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 및 &lt;em&gt;1을&lt;/em&gt; 위한 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2a8e48a3bfc93a9a70219fcffda2fc4f64c90a93" translate="yes" xml:space="preserve">
          <source>Because static methods are callable without an instance of the object created, the pseudo-variable &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; is not available inside the method declared as static.</source>
          <target state="translated">정적 메소드는 오브젝트의 인스턴스가 작성되지 않고 호출 가능하므로 의사 변수 &lt;var&gt;&lt;var&gt;$this&lt;/var&gt;&lt;/var&gt; 는 static으로 선언 된 메소드 내에서 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e82ceeddeebe2487481ffc2480c9013ef5873411" translate="yes" xml:space="preserve">
          <source>Because the &lt;strong&gt;SessionHandler&lt;/strong&gt; wraps the current internal save handler methods, the above example of encryption can be applied to any internal save handler without having to know the internals of the handlers.</source>
          <target state="translated">때문에 &lt;strong&gt;SessionHandler가&lt;/strong&gt; 핸들러 저장 방법 현재 내부 래핑 암호화의 상기 예는 처리기의 내부를 알 필요없이 저장 처리기 내부에 적용될 수있다.</target>
        </trans-unit>
        <trans-unit id="e213c6bd57cae2bea79f07fe13195bbebd479202" translate="yes" xml:space="preserve">
          <source>Because the effects may vary depending on the ODBC driver, use of this function in scripts to be made publicly available is strongly discouraged. Also, some ODBC options are not available to this function because they must be set before the connection is established or the query is prepared. However, if on a particular job it can make PHP work so your boss doesn't tell you to use a commercial product, that's all that really matters.</source>
          <target state="translated">ODBC 드라이버에 따라 효과가 다를 수 있으므로 스크립트에서이 기능을 사용하여 공개적으로 사용하지 않는 것이 좋습니다. 또한 일부 ODBC 옵션은 연결을 설정하거나 조회를 준비하기 전에 설정해야하므로이 기능에 사용할 수 없습니다. 그러나 특정 작업에서 PHP가 작동하도록 할 수 있으므로 상사가 상업적 제품을 사용하라고 지시하지 않으면 그게 전부 중요합니다.</target>
        </trans-unit>
        <trans-unit id="37904d2e4f8679067efe067a14482bc70d2b1533" translate="yes" xml:space="preserve">
          <source>Because the value of an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; can be anything, it can also be another &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;. This enables the creation of recursive and multi-dimensional &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 의 값은 무엇이든 될 수 있으므로 다른 &lt;a href=&quot;language.types.array&quot;&gt;배열 일&lt;/a&gt; 수도 있습니다 . 이를 통해 재귀 및 다차원 &lt;a href=&quot;language.types.array&quot;&gt;배열을&lt;/a&gt; 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7600e311083b907d09d32fc5aa79f89e788419fc" translate="yes" xml:space="preserve">
          <source>Because there are so many methods, here is a handy list of methods, somewhat reduced to their general purpose:</source>
          <target state="translated">메소드가 너무 많기 때문에 다음과 같은 편리한 메소드 목록이 있습니다.</target>
        </trans-unit>
        <trans-unit id="44f1dbda51e44db8cdd5ab6b41daf995d5fdd0ae" translate="yes" xml:space="preserve">
          <source>Because this function depends on the current scope to determine parameter details, it cannot be used as a function parameter in versions prior to 5.3.0. If this value must be passed, the results should be assigned to a variable, and that variable should be passed.</source>
          <target state="translated">이 기능은 매개 변수 세부 사항을 판별하기 위해 현재 범위에 의존하므로 5.3.0 이전 버전에서는 기능 매개 변수로 사용할 수 없습니다. 이 값을 전달해야하는 경우 결과를 변수에 지정하고 해당 변수를 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="61b1f70c4aee7fe9b93217818cc16d2125d2548a" translate="yes" xml:space="preserve">
          <source>Because this method uses the modulus operation, numbers which are not positive integers may give unexpected results.</source>
          <target state="translated">이 방법은 계수 연산을 사용하므로 양의 정수가 아닌 숫자는 예기치 않은 결과를 초래할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fc01d72c49409313e152894c7abb5f87c011025" translate="yes" xml:space="preserve">
          <source>Because variables in PHP can't have dots and spaces in their names, those are converted to underscores. Same applies to naming of respective key names in case of using this function with &lt;code&gt;result&lt;/code&gt; parameter.</source>
          <target state="translated">PHP의 변수는 이름에 점과 공백을 사용할 수 없으므로 밑줄로 변환됩니다. &lt;code&gt;result&lt;/code&gt; 매개 변수 와 함께이 기능을 사용하는 경우 각 키 이름의 이름에도 동일하게 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ca01b1c09bf5d855a028d6e0ee64dc156b0d9e7a" translate="yes" xml:space="preserve">
          <source>Before 5.3.6, the only values recognized are &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;, which are the same as setting or not setting the &lt;strong&gt;&lt;code&gt;DEBUG_BACKTRACE_PROVIDE_OBJECT&lt;/code&gt;&lt;/strong&gt; option respectively.</source>
          <target state="translated">5.3.6 이전 에는 &lt;strong&gt; &lt;code&gt;DEBUG_BACKTRACE_PROVIDE_OBJECT&lt;/code&gt; &lt;/strong&gt; 옵션 을 설정하거나 설정하지 않는 것과 동일하게 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 또는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 가 인식되는 유일한 값 입니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3e5d80f3812d2931324bb9f0c6f55b47963a5319" translate="yes" xml:space="preserve">
          <source>Before PHP 5.1.0, negative timestamps were not supported under any known version of Windows and some other systems as well. Therefore the range of valid years was limited to 1970 through 2038.</source>
          <target state="translated">PHP 5.1.0 이전에는 알려진 버전의 Windows 및 일부 다른 시스템에서도 음수 타임 스탬프가 지원되지 않았습니다. 따라서 유효 연도 범위는 1970 년에서 2038 년으로 제한되었습니다.</target>
        </trans-unit>
        <trans-unit id="f17ced3ef8abb6d18ca80a5e343e53522756984c" translate="yes" xml:space="preserve">
          <source>Before PHP 5.1.0, this function returned &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; when &lt;code&gt;text&lt;/code&gt; was an empty string.</source>
          <target state="translated">PHP 5.1.0 이전에는이 ​​함수는 &lt;code&gt;text&lt;/code&gt; 가 빈 문자열 일 때 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 를&lt;/strong&gt; 반환했습니다 .</target>
        </trans-unit>
        <trans-unit id="ffe6e051f6ef47bce95796f19518997c457552b4" translate="yes" xml:space="preserve">
          <source>Before PHP 5.3.4, on Windows, &lt;strong&gt;sleep()&lt;/strong&gt; always returns &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; when sleep has occurred, regardless of whether the sleep was interrupted or not.</source>
          <target state="translated">PHP 5.3.4 이전에는 Windows에서 &lt;strong&gt;sleep ()&lt;/strong&gt; 은 휴면이 중단되었는지 여부에 관계없이 휴면이 발생할 때 항상 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 을&lt;/strong&gt; 리턴 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="b1bfed4a6b9231dcc874a27d99a85c9060365b4c" translate="yes" xml:space="preserve">
          <source>Before PHP 5.4, referenced variables in &lt;code&gt;param_arr&lt;/code&gt; are passed to the function by reference, regardless of whether the function expects the respective parameter to be passed by reference. This form of call-time pass by reference does not emit a deprecation notice, but it is nonetheless deprecated, and has been removed in PHP 5.4. Furthermore, this does not apply to internal functions, for which the function signature is honored. Passing by value when the function expects a parameter by reference results in a warning and having &lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func()&lt;/a&gt; return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; (there is, however, an exception for passed values with reference count = 1, such as in literals, as these can be turned into references without ill effects &amp;mdash; but also without writes to that value having any effect &amp;mdash;; do not rely in this behavior, though, as the reference count is an implementation detail and the soundness of this behavior is questionable).</source>
          <target state="translated">PHP 5.4 이전 에는 함수가 각 매개 변수가 참조로 전달 될 것으로 예상하는지 여부에 관계없이 &lt;code&gt;param_arr&lt;/code&gt; 의 참조 된 변수 가 참조로 함수에 전달됩니다. 이 형식의 콜 타임 패스 참조는 사용 중단 통지를 내리지 않지만 더 이상 사용되지 않으며 PHP 5.4에서 제거되었습니다. 또한 이는 기능 서명이 적용되는 내부 기능에는 적용되지 않습니다. 함수가 참조로 매개 변수를 예상 할 때 값으로 전달하면 경고가 발생하고 &lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func ()가 &lt;/a&gt;&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 리턴하게 &lt;strong&gt;합니다.&lt;/strong&gt; (그러나 리터럴에서와 같이 참조 카운트가 1 인 전달 된 값에는 예외가 있습니다.이 값은 악영향없이 참조로 변환 될 수 있지만 해당 값에 대한 쓰기 없이도 참조로 변환 될 수 있기 때문입니다. 그러나 참조 카운트는 구현 세부 사항 이므로이 동작의 건전성은 의문의 여지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="510fd6e833a9aac4303574941451c687288f37c7" translate="yes" xml:space="preserve">
          <source>Before PHP 5.4.20/5.5.4 instead of &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; you will receive -99999 upon accessing the property.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 대신 PHP 5.4.20 / 5.5.4 이전 에 속성에 액세스하면 -99999를받습니다.</target>
        </trans-unit>
        <trans-unit id="be43398b62b0b32337b176ab32227c952f58c12f" translate="yes" xml:space="preserve">
          <source>Before PHP 5.4.42 and 5.5.27, repectively, &lt;code&gt;additional_headers&lt;/code&gt; did not have mail header injection protection. Therefore, users must make sure specified headers are safe and contains headers only. i.e. Never start mail body by putting multiple newlines.</source>
          <target state="translated">PHP 5.4.42 및 5.5.27 이전에는, &lt;code&gt;additional_headers&lt;/code&gt; 에 메일 헤더 삽입 보호 기능이 없었던 것 같습니다. 따라서 사용자는 지정된 헤더가 안전하고 헤더 만 포함해야합니다. 즉, 여러 줄 바꿈을 넣어서 메일 본문을 시작하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="e59c4ecdbb1feedbbc002bb207c9d11b29754678" translate="yes" xml:space="preserve">
          <source>Before PHP 5.5.0, referencing &lt;em&gt;$value&lt;/em&gt; is only possible if the iterated array can be referenced (i.e. if it is a variable). The following code works only as of PHP 5.5.0:</source>
          <target state="translated">PHP 5.5.0 이전에, &lt;em&gt;$ value&lt;/em&gt; 참조 는 반복 배열이 참조 될 수있는 경우에만 가능합니다 (즉, 변수 인 경우). 다음 코드는 PHP 5.5.0부터 작동합니다.</target>
        </trans-unit>
        <trans-unit id="92600367e7e9130bdb17942278729aa77c98aed0" translate="yes" xml:space="preserve">
          <source>Before PHP 5.5.0, this function is only available if PHP is compiled with the bundled version of the GD library.</source>
          <target state="translated">PHP 5.5.0 이전에는이 ​​기능은 PHP가 번들 버전의 GD 라이브러리로 컴파일 된 경우에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="815c0b744ffd33bbff0ec709407ba2c3b802fa94" translate="yes" xml:space="preserve">
          <source>Before PHP 5.6 neither functions nor constants can be imported via the &lt;em&gt;use&lt;/em&gt; statement.</source>
          <target state="translated">PHP 5.6 이전에는 &lt;em&gt;use&lt;/em&gt; 문을 통해 함수 나 상수를 가져올 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="66a06e73e512895f01253fc9f996f1a9949eb62c" translate="yes" xml:space="preserve">
          <source>Before PHP 5.6 the only elements that are affected by &lt;em&gt;use&lt;/em&gt; statements are namespaces and class names. In order to shorten a long constant or function, import its containing namespace.</source>
          <target state="translated">PHP 5.6 이전에는 &lt;em&gt;use&lt;/em&gt; 문에 영향을받는 유일한 요소 는 네임 스페이스와 클래스 이름입니다. 긴 상수 또는 함수를 줄이려면 포함 네임 스페이스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e6126181ebef6a388513462befc67a17421cb707" translate="yes" xml:space="preserve">
          <source>Before PHP 7, &lt;strong&gt;Exception&lt;/strong&gt; did not implement the &lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; interface.</source>
          <target state="translated">PHP 7 이전에는 &lt;strong&gt;예외&lt;/strong&gt; 가 &lt;a href=&quot;class.throwable&quot;&gt;Throwable&lt;/a&gt; 인터페이스를 구현하지 않았습니다 .</target>
        </trans-unit>
        <trans-unit id="4921bd6888421cc59367b27d1350f2e32009145e" translate="yes" xml:space="preserve">
          <source>Before PHP 7.1.0, &lt;strong&gt;list()&lt;/strong&gt; only worked on numerical arrays and assumes the numerical indices start at 0.</source>
          <target state="translated">PHP 7.1.0 이전에 &lt;strong&gt;list ()&lt;/strong&gt; 는 숫자 배열에서만 작동했으며 숫자 인덱스는 0에서 시작한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="6c386aa444d2af85b7f3ddf09660ebdb15e7ce89" translate="yes" xml:space="preserve">
          <source>Before PHP 7.1.0, rewrite vars set by &lt;a href=&quot;function.output-add-rewrite-var&quot;&gt;output_add_rewrite_var()&lt;/a&gt; use the same Session module trans sid output buffer. Since PHP 7.1.0, dedicated output buffer is used and &lt;strong&gt;output_reset_rewrite_vars()&lt;/strong&gt; only removes rewrite vars defined by &lt;a href=&quot;function.output-add-rewrite-var&quot;&gt;output_add_rewrite_var()&lt;/a&gt;.</source>
          <target state="translated">PHP 7.1.0 이전에는 &lt;a href=&quot;function.output-add-rewrite-var&quot;&gt;output_add_rewrite_var ()에&lt;/a&gt; 의해 설정된 변수를 다시 작성 하십시오. 동일한 세션 모듈 전송 출력 버퍼를 사용하십시오. PHP 7.1.0부터 전용 출력 버퍼가 사용되고 &lt;strong&gt;output_reset_rewrite_vars ()&lt;/strong&gt; 는 &lt;a href=&quot;function.output-add-rewrite-var&quot;&gt;output_add_rewrite_var ()에&lt;/a&gt; 의해 정의 된 다시 쓰기 변수 만 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="630bdb3ba2cc6dc0b0bd50ec241d00529ccb0fb8" translate="yes" xml:space="preserve">
          <source>Before PHP 7.1.0, rewrite vars set by &lt;strong&gt;output_add_rewrite_var()&lt;/strong&gt; use the same Session module trans sid output buffer. Since PHP 7.1.0, dedicated output buffer is used, &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt; url_rewriter.tags&lt;/a&gt; is used solely for output functions, &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt;url_rewriter.hosts&lt;/a&gt; is added.</source>
          <target state="translated">PHP 7.1.0 이전에는 &lt;strong&gt;output_add_rewrite_var ()에&lt;/strong&gt; 의해 설정된 변수를 다시 작성 하십시오. 동일한 세션 모듈 전송 출력 버퍼를 사용하십시오. PHP 7.1.0부터 전용 출력 버퍼가 사용되며 &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt;url_rewriter.tags&lt;/a&gt; 는 출력 기능에만 사용되며 &lt;a href=&quot;https://secure.php.net/manual/en/outcontrol.configuration.php#ini.url-rewriter.tags&quot;&gt;url_rewriter.hosts&lt;/a&gt; 가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="c01d465c5c2fbfadc4ae15aaf091cc68adaa4450" translate="yes" xml:space="preserve">
          <source>Before PHP 7.2.0 the only means to get a list of supported hash algorithms has been to call &lt;a href=&quot;function.hash-algos&quot;&gt;hash_algos()&lt;/a&gt; which also returns hash algorithms that are not suitable for &lt;a href=&quot;function.hash-hmac&quot;&gt;hash_hmac()&lt;/a&gt;.</source>
          <target state="translated">지원되는 해시 알고리즘의 목록을 얻을 수있는 PHP 7.2.0 전에 유일한 수단은 통화에왔다 &lt;a href=&quot;function.hash-algos&quot;&gt;hash_algos ()&lt;/a&gt; 또한 적합하지 않습니다 해시 알고리즘 반환 &lt;a href=&quot;function.hash-hmac&quot;&gt;() hash_hmac를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3d9caf436270651a87ebf4561be6925341a4bc2c" translate="yes" xml:space="preserve">
          <source>Before PHP 7.3, any strings that are not set will silently be skipped.</source>
          <target state="translated">PHP 7.3 이전에는 설정되지 않은 문자열은 자동으로 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="29eb1713f56cee95f0551e5b9c435a58142b4fd8" translate="yes" xml:space="preserve">
          <source>Before PHP 7.3.0 &lt;strong&gt;bcmul()&lt;/strong&gt; may return a result with fewer digits after the decimal point than the &lt;code&gt;scale&lt;/code&gt; parameter would indicate. This only occurs when the result doesn't require all of the precision allowed by the &lt;code&gt;scale&lt;/code&gt;. For example:</source>
          <target state="translated">PHP 7.3.0 이전에 &lt;strong&gt;bcmul ()&lt;/strong&gt; 은 &lt;code&gt;scale&lt;/code&gt; 매개 변수가 나타내는 것 보다 소수점 이하의 숫자로 결과를 리턴 할 수 있습니다 . 결과에 &lt;code&gt;scale&lt;/code&gt; 에서 허용하는 모든 정밀도가 필요하지 않은 경우에만 발생합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a2ab771fbab9ca5a9adda658971433f699554dab" translate="yes" xml:space="preserve">
          <source>Before PHP 7.3.0 &lt;strong&gt;bcpow()&lt;/strong&gt; may return a result with fewer digits after the decimal point than the &lt;code&gt;scale&lt;/code&gt; parameter would indicate. This only occurs when the result doesn't require all of the precision allowed by the &lt;code&gt;scale&lt;/code&gt;. For example:</source>
          <target state="translated">PHP 7.3.0 이전에 &lt;strong&gt;bcpow ()&lt;/strong&gt; 는 &lt;code&gt;scale&lt;/code&gt; 매개 변수가 나타내는 것 보다 소수점 이하의 숫자로 결과를 리턴 할 수 있습니다 . 결과에 &lt;code&gt;scale&lt;/code&gt; 에서 허용하는 모든 정밀도가 필요하지 않은 경우에만 발생합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c32ee470457a0e760bfbeaf8f3481d8b3464da7f" translate="yes" xml:space="preserve">
          <source>Before discussing the use of namespaces, it is important to understand how PHP knows which namespaced element your code is requesting. A simple analogy can be made between PHP namespaces and a filesystem. There are three ways to access a file in a file system:</source>
          <target state="translated">네임 스페이스 사용을 논의하기 전에 PHP가 코드에서 요청하는 네임 스페이스 요소를 어떻게 알 수 있는지 이해하는 것이 중요합니다. PHP 네임 스페이스와 파일 시스템간에 간단한 유추가 가능합니다. 파일 시스템에서 파일에 액세스하는 방법에는 세 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="000db2515e4fd764dd52a845e6cc8dba17f269cf" translate="yes" xml:space="preserve">
          <source>Before this version values of some magic constants were always lowercased. All of them are case-sensitive now (contain names as they were declared).</source>
          <target state="translated">이 버전 이전에는 일부 마법 상수의 값이 항상 소문자였습니다. 모두 대소 문자를 구분합니다 (선언 된 이름 포함).</target>
        </trans-unit>
        <trans-unit id="73641e4b29ba69dadae706aa698b22be9a3639e1" translate="yes" xml:space="preserve">
          <source>Before v3.0 a second argument &lt;code&gt;&amp;amp;cas_tokens&lt;/code&gt; was in use. It was filled with the CAS token values for the found items. The &lt;code&gt;&amp;amp;cas_tokens&lt;/code&gt; parameter was removed in v3.0 of the extension. It was replaced with a new flag &lt;strong&gt;&lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt;&lt;/strong&gt; that needs is to be used as the value for &lt;code&gt;flags&lt;/code&gt;.</source>
          <target state="translated">v3.0 이전에는 두 번째 인수 &lt;code&gt;&amp;amp;cas_tokens&lt;/code&gt; 가 사용되었습니다. 찾은 항목에 대한 CAS 토큰 값으로 채워졌습니다. &lt;code&gt;&amp;amp;cas_tokens&lt;/code&gt; 파라미터는 연장 3.0 제거 하였다. 새 플래그 &lt;strong&gt; &lt;code&gt;Memcached::GET_EXTENDED&lt;/code&gt; &lt;/strong&gt; 로 교체되어 &lt;code&gt;flags&lt;/code&gt; 의 값으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="f5758180c140fa745756a5d79fd33e34fc099239" translate="yes" xml:space="preserve">
          <source>Begin checking for events and calling callbacks &lt;em&gt;for the default loop&lt;/em&gt; . Returns when a callback calls &lt;a href=&quot;ev.stop&quot;&gt;Ev::stop()&lt;/a&gt; method, or the flags are nonzero(in which case the return value is true) or when there are no active watchers which reference the loop( &lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher::keepalive()&lt;/a&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;), in which case the return value will be &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. The return value can generally be interpreted as &lt;em&gt;if &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, there is more work left to do&lt;/em&gt; .</source>
          <target state="translated">&lt;em&gt;기본 루프에&lt;/em&gt; 대한 이벤트 확인 및 콜백 호출을 시작하십시오 . 콜백이 &lt;a href=&quot;ev.stop&quot;&gt;Ev :: stop ()&lt;/a&gt; 메서드를 호출 하거나 플래그가 0이 아닌 경우 (이 경우 반환 값이 true) 또는 루프를 참조하는 활성 감시자가없는 경우 ( &lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher :: keepalive ()&lt;/a&gt; 가 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; )를 반환 &lt;strong&gt;합니다&lt;/strong&gt; . 이 경우 반환 값은 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 입니다. 반환 값은 일반적으로 해석 될 수 &lt;em&gt;있는 경우 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; , 할 왼쪽으로 더 많은 일이있다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4d5355699cf9574c92e98c8827deb60f45030e5e" translate="yes" xml:space="preserve">
          <source>Begin checking for events and calling callbacks for the current event loop. Returns when a callback calls &lt;a href=&quot;ev.stop&quot;&gt;Ev::stop()&lt;/a&gt; method, or the flags are nonzero(in which case the return value is true) or when there are no active watchers which reference the loop( &lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher::keepalive()&lt;/a&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;), in which case the return value will be &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. The return value can generally be interpreted as &lt;em&gt;if &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, there is more work left to do&lt;/em&gt; .</source>
          <target state="translated">현재 이벤트 루프에 대한 이벤트 확인 및 콜백 호출을 시작하십시오. 콜백이 &lt;a href=&quot;ev.stop&quot;&gt;Ev :: stop ()&lt;/a&gt; 메서드를 호출 하거나 플래그가 0이 아닌 경우 (이 경우 반환 값이 true) 또는 루프를 참조하는 활성 감시자가없는 경우 ( &lt;a href=&quot;evwatcher.keepalive&quot;&gt;EvWatcher :: keepalive ()&lt;/a&gt; 가 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; )를 반환 &lt;strong&gt;합니다&lt;/strong&gt; . 이 경우 반환 값은 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 입니다. 반환 값은 일반적으로 해석 될 수 &lt;em&gt;있는 경우 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; , 할 왼쪽으로 더 많은 일이있다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="36506190c2135ae8c2b4ea546bfa2116942eadf4" translate="yes" xml:space="preserve">
          <source>Begin timestamp.</source>
          <target state="translated">타임 스탬프를 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="8cf0b865ce0821948992d3642584fcb7e901151e" translate="yes" xml:space="preserve">
          <source>Begins a transaction.</source>
          <target state="translated">거래를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="b49640a6a748f0c175fc20884ad162b23dcd53b7" translate="yes" xml:space="preserve">
          <source>Begins a transaction. Requires the InnoDB engine (it is enabled by default). For additional details about how MySQL transactions work, see &lt;a href=&quot;http://dev.mysql.com/doc/mysql/en/commit.html&quot;&gt;&amp;raquo; http://dev.mysql.com/doc/mysql/en/commit.html&lt;/a&gt;.</source>
          <target state="translated">거래를 시작합니다. InnoDB 엔진이 필요합니다 (기본적으로 활성화되어 있음). MySQL 트랜잭션 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;http://dev.mysql.com/doc/mysql/en/commit.html&quot;&gt;&amp;raquo;http://dev.mysql.com/doc/mysql/en/commit.html을&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="02a9520cb229a3e806630a863ce3214ff40756e3" translate="yes" xml:space="preserve">
          <source>Behaves as &lt;a href=&quot;eventbuffer.addbuffer&quot;&gt;EventBuffer::addBuffer()&lt;/a&gt; , except that it moves data to the front of the buffer.</source>
          <target state="translated">데이터를 버퍼의 앞쪽으로 이동한다는 점을 제외하고 &lt;a href=&quot;eventbuffer.addbuffer&quot;&gt;EventBuffer :: addBuffer ()&lt;/a&gt; 로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="c4f566c4d7e2c407ddb3e3f84d6b251c7a0b35ab" translate="yes" xml:space="preserve">
          <source>Behaves as &lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer::read()&lt;/a&gt; , except that it does not copy the data: it just removes it from the front of the buffer.</source>
          <target state="translated">데이터를 복사하지 않는다는 점을 제외하고 &lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer :: read ()&lt;/a&gt; 로 작동 합니다. 버퍼 앞면에서 데이터를 제거하기 만합니다 .</target>
        </trans-unit>
        <trans-unit id="7159080e86b86a14d2c3911c77707da6fa4fddb4" translate="yes" xml:space="preserve">
          <source>Behaves just like &lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer::read()&lt;/a&gt; , but does not drain any data from the buffer. I.e. it copies the first &lt;code&gt;max_bytes&lt;/code&gt; bytes from the front of the buffer into &lt;code&gt;data&lt;/code&gt; . If there are fewer than &lt;code&gt;max_bytes&lt;/code&gt; bytes available, the function copies all the bytes there are.</source>
          <target state="translated">단지처럼 동작 &lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer : (읽기)이&lt;/a&gt; 있지만, 버퍼에서 데이터를 배출하지 않습니다. 첫번째 예는 사본 &lt;code&gt;max_bytes&lt;/code&gt; 로 버퍼의 선두로부터 바이트 &lt;code&gt;data&lt;/code&gt; . 사용 가능한 &lt;code&gt;max_bytes&lt;/code&gt; 바이트 미만인 경우이 함수는 존재하는 모든 바이트를 복사합니다.</target>
        </trans-unit>
        <trans-unit id="26f2456afbfcb0cca11ac1bb8f13fb701750b72c" translate="yes" xml:space="preserve">
          <source>Behaves the same as &lt;a href=&quot;function.strftime&quot;&gt;strftime()&lt;/a&gt; except that the time returned is Greenwich Mean Time (GMT). For example, when run in Eastern Standard Time (GMT -0500), the first line below prints &quot;Dec 31 1998 20:00:00&quot;, while the second prints &quot;Jan 01 1999 01:00:00&quot;.</source>
          <target state="translated">반환 된 시간이 그리니치 표준시 (GMT)라는 점을 제외하고 &lt;a href=&quot;function.strftime&quot;&gt;strftime ()&lt;/a&gt; 과 동일하게 작동합니다 . 예를 들어 동부 표준시 (GMT -0500)로 실행하면 아래 첫 번째 줄은 &quot;Dec 31 1998 20:00:00&quot;을 인쇄하고 두 번째 줄은 &quot;Jan 01 1999 01:00:00&quot;을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="f7d7e94e88ff40615fc8af92c1f6c7dfe2cbed2a" translate="yes" xml:space="preserve">
          <source>Below is an example that illustrates the internal structure of the arrays being generated by the function. We use a simple &lt;em&gt;note&lt;/em&gt; tag embedded inside a &lt;em&gt;para&lt;/em&gt; tag, and then we parse this and print out the structures generated:</source>
          <target state="translated">아래는 함수에 의해 생성되는 배열의 내부 구조를 보여주는 예입니다. &lt;em&gt;para&lt;/em&gt; 태그 안에 포함 된 간단한 &lt;em&gt;메모&lt;/em&gt; 태그를 사용하고 이를 구문 분석하고 생성 된 구조를 인쇄합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e4627504e2611879fb6411719ba154382da2522b" translate="yes" xml:space="preserve">
          <source>Below normal priority</source>
          <target state="translated">보통 우선 순위 미만</target>
        </trans-unit>
        <trans-unit id="414dc71e6c63f0887b0ec9b16099170828799d75" translate="yes" xml:space="preserve">
          <source>Besides the methods listed here, this class also has an &lt;em&gt;__invoke&lt;/em&gt; method. This is for consistency with other classes that implement &lt;a href=&quot;language.oop5.magic#language.oop5.magic.invoke&quot;&gt;calling magic&lt;/a&gt;, as this method is not used for calling the function.</source>
          <target state="translated">여기에 나열된 메소드 &lt;em&gt;외에도이&lt;/em&gt; 클래스에는 &lt;em&gt;__invoke&lt;/em&gt; 메소드가 있습니다. 이 메소드는 함수 호출에 사용되지 않으므로 이는 &lt;a href=&quot;language.oop5.magic#language.oop5.magic.invoke&quot;&gt;magic 호출&lt;/a&gt; 을 구현 하는 다른 클래스와의 일관성을 위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="41821313c26ad3752532088e0a30b10127e31cba" translate="yes" xml:space="preserve">
          <source>Beware of patterns that contain nested indefinite repeats. These can take a long time to run when applied to a string that does not match. Consider the pattern fragment &lt;em&gt;(a+)*&lt;/em&gt;</source>
          <target state="translated">중첩 된 무한 반복이 포함 된 패턴에주의하십시오. 일치하지 않는 문자열에 적용하면 실행하는 데 시간이 오래 걸릴 수 있습니다. 패턴 조각 &lt;em&gt;(a +)을&lt;/em&gt; 고려하십시오 &lt;em&gt;*&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6a7d116573e9636192a34f0e5848882a5a8729a1" translate="yes" xml:space="preserve">
          <source>Beyond the above advice, note that you can also hook into the serialization and unserialization events on an object using the &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep()&lt;/a&gt; and &lt;a href=&quot;language.oop5.magic#object.wakeup&quot;&gt;__wakeup()&lt;/a&gt; methods. Using &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep()&lt;/a&gt; also allows you to only serialize a subset of the object's properties.</source>
          <target state="translated">위의 조언 외에도 &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep ()&lt;/a&gt; 및 &lt;a href=&quot;language.oop5.magic#object.wakeup&quot;&gt;__wakeup ()&lt;/a&gt; 메서드를 사용하여 객체의 직렬화 및 직렬화 해제 이벤트에 연결할 수도 있습니다 . 사용 &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep은 ()&lt;/a&gt; 도 만 개체의 속성의 부분 집합을 직렬화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2514d12d8068c8b402b7adac2bc9b12b1d380d7d" translate="yes" xml:space="preserve">
          <source>Big5 with Hong Kong extensions, Traditional Chinese.</source>
          <target state="translated">홍콩 확장 기능이있는 Big5, 중국어 번체</target>
        </trans-unit>
        <trans-unit id="66639f7d455dd71faa9147f5d69e5ce885d8bebd" translate="yes" xml:space="preserve">
          <source>Binary</source>
          <target state="translated">Binary</target>
        </trans-unit>
        <trans-unit id="7205f20354da7736920d9b84a6e30124b9e24a96" translate="yes" xml:space="preserve">
          <source>Binary &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; literals are available since PHP 5.4.0.</source>
          <target state="translated">이진 &lt;a href=&quot;language.types.integer&quot;&gt;정수&lt;/a&gt; 리터럴은 PHP 5.4.0부터 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1954bfbe4523cd5011686c373b6e17de91f0855" translate="yes" xml:space="preserve">
          <source>Binary safe case-insensitive string comparison.</source>
          <target state="translated">대소 문자를 구분하지 않는 이진 안전 문자열 비교</target>
        </trans-unit>
        <trans-unit id="29829bc8db48714274cb2e445a2c46ff09faeb1f" translate="yes" xml:space="preserve">
          <source>Binary string representation of &lt;code&gt;number&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;number&lt;/code&gt; 이진 문자열 표현</target>
        </trans-unit>
        <trans-unit id="9b175735ed3073daec491aedf910138426164a01" translate="yes" xml:space="preserve">
          <source>Bind variables for the parameter markers in the SQL statement that was passed to &lt;a href=&quot;mysqli.prepare&quot;&gt;mysqli_prepare()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mysqli.prepare&quot;&gt;mysqli_prepare ()&lt;/a&gt; 에 전달 된 SQL 문에서 매개 변수 표시 문자에 대한 변수를 바인드하십시오 .</target>
        </trans-unit>
        <trans-unit id="c7c97cd0d229f7ba63e5e98a2c456af2b6d4539e" translate="yes" xml:space="preserve">
          <source>Binding columns in the result set to PHP variables is an effective way to make the data contained in each row immediately available to your application. The following example demonstrates how PDO allows you to bind and retrieve columns with a variety of options and with intelligent defaults.</source>
          <target state="translated">결과 집합의 열을 PHP 변수에 바인딩하면 각 행에 포함 된 데이터를 응용 프로그램에서 즉시 사용할 수있는 효과적인 방법입니다. 다음 예제는 PDO를 사용하여 다양한 옵션과 지능적인 기본값으로 열을 바인딩하고 검색하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="45fc3f5d66badbb2ea7467997f8da6369c2d2e23" translate="yes" xml:space="preserve">
          <source>Binding more values than specified is not possible; if more keys exist in &lt;code&gt;input_parameters&lt;/code&gt; than in the SQL specified in the &lt;a href=&quot;pdo.prepare&quot;&gt;PDO::prepare()&lt;/a&gt;, then the statement will fail and an error is emitted.</source>
          <target state="translated">지정된 것보다 많은 값을 바인딩 할 수 없습니다. &lt;a href=&quot;pdo.prepare&quot;&gt;PDO :: prepare ()에&lt;/a&gt; 지정된 SQL보다 &lt;code&gt;input_parameters&lt;/code&gt; 에 더 많은 키가 있으면 명령문이 실패하고 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9a5ae95af964abb301b00f502dd17c440aff2801" translate="yes" xml:space="preserve">
          <source>Binds a PHP variable to a corresponding named or question mark placeholder in the SQL statement that was used to prepare the statement. Unlike &lt;a href=&quot;pdostatement.bindvalue&quot;&gt;PDOStatement::bindValue()&lt;/a&gt;, the variable is bound as a reference and will only be evaluated at the time that &lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement::execute()&lt;/a&gt; is called.</source>
          <target state="translated">명령문을 준비하는 데 사용 된 SQL 문의 해당 이름 지정된 또는 물음표 플레이스 홀더에 PHP 변수를 바인드합니다. &lt;a href=&quot;pdostatement.bindvalue&quot;&gt;PDOStatement :: bindValue ()&lt;/a&gt; 와 달리 변수는 참조로 바인딩되며 &lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement :: execute ()&lt;/a&gt; 가 호출 될 때만 평가됩니다 .</target>
        </trans-unit>
        <trans-unit id="0fd90a10de3a02c1d4a7651f87c90316aa4b42e3" translate="yes" xml:space="preserve">
          <source>Binds a parameter to a statement variable.</source>
          <target state="translated">매개 변수를 명령문 변수에 바인드합니다.</target>
        </trans-unit>
        <trans-unit id="b8b38586af1ee4b44e9fe60bfd74805629a2a4ee" translate="yes" xml:space="preserve">
          <source>Binds a value to a corresponding named or question mark placeholder in the SQL statement that was used to prepare the statement.</source>
          <target state="translated">명령문을 준비하는 데 사용 된 SQL 문의 해당 이름 지정된 또는 물음표 플레이스 홀더에 값을 바인드합니다.</target>
        </trans-unit>
        <trans-unit id="dd6741172297eaebe838098922865a7902259c0d" translate="yes" xml:space="preserve">
          <source>Binds an HTTP server on the specified address and port.</source>
          <target state="translated">지정된 주소와 포트에 HTTP 서버를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="342502ffa532fb522624f8b96afa245a3ac904fb" translate="yes" xml:space="preserve">
          <source>Binds columns in the result set to variables.</source>
          <target state="translated">결과 집합의 열을 변수에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="83a7a3ad889ad4da86f116b68b23fbdf206ef95f" translate="yes" xml:space="preserve">
          <source>Binds per-field weights by name.</source>
          <target state="translated">필드 별 가중치를 이름별로 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="b024d4c8d01cc81c2e9665796e520eb890bc6f55" translate="yes" xml:space="preserve">
          <source>Binds the name given in &lt;code&gt;address&lt;/code&gt; to the socket described by &lt;code&gt;socket&lt;/code&gt;. This has to be done before a connection is be established using &lt;a href=&quot;function.socket-connect&quot;&gt;socket_connect()&lt;/a&gt; or &lt;a href=&quot;function.socket-listen&quot;&gt;socket_listen()&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;address&lt;/code&gt; 에 지정된 이름 을 socket에 의해 설명 된 &lt;code&gt;socket&lt;/code&gt; 에 바인딩합니다 . &lt;a href=&quot;function.socket-connect&quot;&gt;socket_connect ()&lt;/a&gt; 또는 &lt;a href=&quot;function.socket-listen&quot;&gt;socket_listen ()을&lt;/a&gt; 사용하여 연결을 설정하기 전에 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5b7f20bf936b6e7d18605e3f30eb6d0e139a907c" translate="yes" xml:space="preserve">
          <source>Binds the value of a parameter to a statement variable.</source>
          <target state="translated">매개 변수 값을 명령문 변수에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="9780b9e1c12559abd6016ff564b7223f035300cd" translate="yes" xml:space="preserve">
          <source>Binds to the LDAP directory with specified RDN and password.</source>
          <target state="translated">지정된 RDN 및 비밀번호를 사용하여 LDAP 디렉토리에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="376f4955d4928d0c1c325d76a4122ffa20cc994d" translate="yes" xml:space="preserve">
          <source>Bit mask of &lt;em&gt;EventListener::OPT_*&lt;/em&gt; constants. See &lt;a href=&quot;class.eventlistener#eventlistener.constants&quot;&gt;EventListener constants&lt;/a&gt; .</source>
          <target state="translated">&lt;em&gt;EventListener :: OPT_ *&lt;/em&gt; 상수 의 비트 마스크 . &lt;a href=&quot;class.eventlistener#eventlistener.constants&quot;&gt;EventListener 상수를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a2b84e580259b4bb3421a5aa5860694ab700746f" translate="yes" xml:space="preserve">
          <source>Bit mask of the flags to set. See &lt;a href=&quot;class.splfileobject#splfileobject.constants&quot;&gt;SplFileObject constants&lt;/a&gt; for the available flags.</source>
          <target state="translated">설정할 플래그의 비트 마스크. 사용 가능한 플래그는 &lt;a href=&quot;class.splfileobject#splfileobject.constants&quot;&gt;SplFileObject 상수&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2bf86ff4d0c973ecae90926c21de45322c20ac6a" translate="yes" xml:space="preserve">
          <source>Bit mask of watcher &lt;a href=&quot;class.ev#ev.constants.watcher-revents&quot;&gt;received events&lt;/a&gt; .</source>
          <target state="translated">감시자의 비트 마스크가 &lt;a href=&quot;class.ev#ev.constants.watcher-revents&quot;&gt;이벤트를 수신했습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="465ce1a345e8a92de5920141ab5cfb869f2d1bbb" translate="yes" xml:space="preserve">
          <source>Bit masks of (received) events:</source>
          <target state="translated">(수신 된) 이벤트의 비트 마스크 :</target>
        </trans-unit>
        <trans-unit id="d04a675c5c6294079f55e51c9996bd70e53ada14" translate="yes" xml:space="preserve">
          <source>Bit shifting in PHP is arithmetic. Bits shifted off either end are discarded. Left shifts have zeros shifted in on the right while the sign bit is shifted out on the left, meaning the sign of an operand is not preserved. Right shifts have copies of the sign bit shifted in on the left, meaning the sign of an operand is preserved.</source>
          <target state="translated">PHP에서 비트 이동은 산술입니다. 양쪽 끝에서 벗어난 비트는 버려집니다. 왼쪽 시프트는 오른쪽에서 0이 시프트되고 부호 비트가 왼쪽에서 시프트되므로 피연산자의 부호가 유지되지 않습니다. 오른쪽 시프트에는 부호 비트의 사본이 왼쪽에 시프트되어 피연산자의 부호가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="53a5d7a0ecaf6e070861a98456610f923f5f72e1" translate="yes" xml:space="preserve">
          <source>Bitfield of the modifiers to get.</source>
          <target state="translated">가져올 수정 자의 비트 필드입니다.</target>
        </trans-unit>
        <trans-unit id="8d5bbd3678c09548204d1d8fa27df4d3a635aea0" translate="yes" xml:space="preserve">
          <source>Bitmask consisting of &lt;strong&gt;&lt;code&gt;JSON_HEX_QUOT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_TAG&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_AMP&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_HEX_APOS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_NUMERIC_CHECK&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PRETTY_PRINT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_FORCE_OBJECT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_UNESCAPED_UNICODE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;JSON_PARTIAL_OUTPUT_ON_ERROR&lt;/code&gt;&lt;/strong&gt;. The behaviour of these constants is described on the &lt;a href=&quot;https://secure.php.net/manual/en/json.constants.php&quot;&gt;JSON constants&lt;/a&gt; page.</source>
          <target state="translated">이루어진 비트 마스크 &lt;strong&gt; &lt;code&gt;JSON_HEX_QUOT&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;JSON_HEX_TAG&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;JSON_HEX_AMP&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;JSON_HEX_APOS&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;JSON_NUMERIC_CHECK&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;JSON_PRETTY_PRINT&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;JSON_UNESCAPED_SLASHES&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;JSON_FORCE_OBJECT&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;JSON_PRESERVE_ZERO_FRACTION&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;JSON_UNESCAPED_UNICODE&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;JSON_PARTIAL_OUTPUT_ON_ERROR&lt;/code&gt; &lt;/strong&gt; . 이러한 상수의 동작은 &lt;a href=&quot;https://secure.php.net/manual/en/json.constants.php&quot;&gt;JSON 상수&lt;/a&gt; 페이지 에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0f6fa82d9aa08f28480f20ed3a0b94768c86762" translate="yes" xml:space="preserve">
          <source>Bitmask field which may be set to any combination of connection flags. Currently the select of connection flags is limited to &lt;strong&gt;&lt;code&gt;STREAM_CLIENT_CONNECT&lt;/code&gt;&lt;/strong&gt; (default), &lt;strong&gt;&lt;code&gt;STREAM_CLIENT_ASYNC_CONNECT&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;STREAM_CLIENT_PERSISTENT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">연결 플래그의 조합으로 설정 될 수있는 비트 마스크 필드. 현재 연결 플래그 선택은 &lt;strong&gt; &lt;code&gt;STREAM_CLIENT_CONNECT&lt;/code&gt; &lt;/strong&gt; (기본값), &lt;strong&gt; &lt;code&gt;STREAM_CLIENT_ASYNC_CONNECT&lt;/code&gt; &lt;/strong&gt; 및 &lt;strong&gt; &lt;code&gt;STREAM_CLIENT_PERSISTENT&lt;/code&gt; &lt;/strong&gt; 로 제한됩니다 .</target>
        </trans-unit>
        <trans-unit id="6f5e68cb9e77eab0d45d44c1122fa9cc7541dee9" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;strong&gt;&lt;code&gt;CURLPROTO_*&lt;/code&gt;&lt;/strong&gt; values. If used, this bitmask limits what protocols libcurl may use in a transfer that it follows to in a redirect when &lt;strong&gt;&lt;code&gt;CURLOPT_FOLLOWLOCATION&lt;/code&gt;&lt;/strong&gt; is enabled. This allows you to limit specific transfers to only be allowed to use a subset of protocols in redirections. By default libcurl will allow all protocols except for FILE and SCP. This is a difference compared to pre-7.19.4 versions which unconditionally would follow to all protocols supported. See also &lt;strong&gt;&lt;code&gt;CURLOPT_PROTOCOLS&lt;/code&gt;&lt;/strong&gt; for protocol constant values.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;CURLPROTO_*&lt;/code&gt; &lt;/strong&gt; 값의 비트 마스크 . 사용되는 경우이 비트 마스크 는 &lt;strong&gt; &lt;code&gt;CURLOPT_FOLLOWLOCATION&lt;/code&gt; &lt;/strong&gt; 이 활성화 될 때 libcurl이 리디렉션에서 따르는 전송에서 libcurl이 사용할 수있는 프로토콜을 제한합니다 . 이를 통해 리디렉션에서 프로토콜의 하위 집합 만 사용하도록 특정 전송을 제한 할 수 있습니다. 기본적으로 libcurl은 FILE 및 SCP를 제외한 모든 프로토콜을 허용합니다. 이것은 지원되는 모든 프로토콜에 무조건 따를 7.7.19.4 이전 버전과의 차이점입니다. 프로토콜 상수 값 은 &lt;strong&gt; &lt;code&gt;CURLOPT_PROTOCOLS&lt;/code&gt; &lt;/strong&gt; 를 참조 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e3e85a97faf368f1ec6dd750d4dafdcd5161da54" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;strong&gt;&lt;code&gt;CURLPROTO_*&lt;/code&gt;&lt;/strong&gt; values. If used, this bitmask limits what protocols libcurl may use in the transfer. This allows you to have a libcurl built to support a wide range of protocols but still limit specific transfers to only be allowed to use a subset of them. By default libcurl will accept all protocols it supports. See also &lt;strong&gt;&lt;code&gt;CURLOPT_REDIR_PROTOCOLS&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;CURLPROTO_*&lt;/code&gt; &lt;/strong&gt; 값의 비트 마스크 . 사용되는 경우이 비트 마스크는 libcurl이 전송에 사용할 수있는 프로토콜을 제한합니다. 이를 통해 광범위한 프로토콜을 지원하도록 libcurl을 구축 할 수 있지만 특정 전송 만 하위 집합 만 사용하도록 제한 할 수 있습니다. 기본적으로 libcurl은 지원하는 모든 프로토콜을 허용합니다. &lt;strong&gt; &lt;code&gt;CURLOPT_REDIR_PROTOCOLS&lt;/code&gt; &lt;/strong&gt; 도 참조 &lt;strong&gt;하십시오&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="cb0f55235110490c705393491bc2143c003a3bf8" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;strong&gt;&lt;code&gt;Event::READ&lt;/code&gt;&lt;/strong&gt; , &lt;strong&gt;&lt;code&gt;Event::WRITE&lt;/code&gt;&lt;/strong&gt; , or both.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;Event::READ&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;Event::WRITE&lt;/code&gt; &lt;/strong&gt; 또는 둘 다의 비트 마스크입니다 .</target>
        </trans-unit>
        <trans-unit id="bfed8cddc7f30e823296e3aa0d5ba8b34778b2fa" translate="yes" xml:space="preserve">
          <source>Bitmask of &lt;strong&gt;&lt;code&gt;PHP_OUTPUT_HANDLER_*&lt;/code&gt;&lt;/strong&gt; constants.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;PHP_OUTPUT_HANDLER_*&lt;/code&gt; &lt;/strong&gt; 상수의 비트 마스크 .</target>
        </trans-unit>
        <trans-unit id="d41be63640dd140c5997c3f35ebafa787271f37f" translate="yes" xml:space="preserve">
          <source>Bitmask of JSON decode options. Currently there are two supported options. The first is &lt;strong&gt;&lt;code&gt;JSON_BIGINT_AS_STRING&lt;/code&gt;&lt;/strong&gt; that allows casting big integers to string instead of floats which is the default. The second option is &lt;strong&gt;&lt;code&gt;JSON_OBJECT_AS_ARRAY&lt;/code&gt;&lt;/strong&gt; that has the same effect as setting &lt;code&gt;assoc&lt;/code&gt; to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">JSON 디코딩 옵션의 비트 마스크. 현재 두 가지 지원 옵션이 있습니다. 첫 번째는 &lt;strong&gt; &lt;code&gt;JSON_BIGINT_AS_STRING&lt;/code&gt; 으로&lt;/strong&gt; 큰 정수를 부동 소수점 대신 문자열로 캐스팅 할 수 있습니다. 이는 기본값입니다. 두 번째 옵션은 &lt;strong&gt; &lt;code&gt;JSON_OBJECT_AS_ARRAY&lt;/code&gt; &lt;/strong&gt; 이며 &lt;code&gt;assoc&lt;/code&gt; 을 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 로 설정하는 것과 같은 효과가 있습니다.</target>
        </trans-unit>
        <trans-unit id="bcde88a827a312a8146d4870b13dba0f0fe03980" translate="yes" xml:space="preserve">
          <source>Bitmask of flags.</source>
          <target state="translated">플래그의 비트 마스크.</target>
        </trans-unit>
        <trans-unit id="e72a5ec76976e9ec665f70875a442b9317f423b4" translate="yes" xml:space="preserve">
          <source>Bitmask of required features. See &lt;a href=&quot;class.eventconfig#eventconfig.constants&quot;&gt; &lt;em&gt;EventConfig::FEATURE_*&lt;/em&gt; constants&lt;/a&gt;</source>
          <target state="translated">필요한 기능의 비트 마스크. 참조 &lt;a href=&quot;class.eventconfig#eventconfig.constants&quot;&gt;&lt;em&gt;EventConfig :: FEATURE_ *&lt;/em&gt;&lt;/a&gt; 상수 &lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8bfd9f1474b921bceb8ee4a42fc8b5850a4a2f43" translate="yes" xml:space="preserve">
          <source>Bitmask of the flags to set.</source>
          <target state="translated">설정할 플래그의 비트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="2d1d989a1902c2b90386c0ff0bffb941fc5df9c9" translate="yes" xml:space="preserve">
          <source>Bits that are set in &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; are not set, and vice versa.</source>
          <target state="translated">&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; 설정된 비트는 설정 되지 않으며 그 반대도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="2ca4636e90f871d56d49278846817d4b25798edf" translate="yes" xml:space="preserve">
          <source>Bits that are set in &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; or &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; but not both are set.</source>
          <target state="translated">&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; 또는 &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; 에 설정되었지만 둘 다 설정되지 않은 비트 가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e8d94b3afb117f66a82b2f4134e85ccd6584028b" translate="yes" xml:space="preserve">
          <source>Bits that are set in both &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; and &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; are set.</source>
          <target state="translated">&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; 및 &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; 모두에 설정된 비트 가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="2b0ea6e7bed56101b1bf22d52f268c2159eb010a" translate="yes" xml:space="preserve">
          <source>Bits that are set in either &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; or &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; are set.</source>
          <target state="translated">&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; 또는 &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; 에 설정된 비트 가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="9c2405ca81fd65c0322042b11819b72aaf432508" translate="yes" xml:space="preserve">
          <source>Bitwise OR of the &lt;a href=&quot;https://secure.php.net/manual/en/runkit.constants.php&quot;&gt;&lt;em&gt;RUNKIT_IMPORT_*&lt;/em&gt; family of constants&lt;/a&gt;.</source>
          <target state="translated">비트 단위 OR의 &lt;a href=&quot;https://secure.php.net/manual/en/runkit.constants.php&quot;&gt;&lt;em&gt;RUNKIT_IMPORT_ *&lt;/em&gt; 상수의 가족&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f06f824cef5caab026aebdaccc85d665d4b620db" translate="yes" xml:space="preserve">
          <source>Bitwise Operators</source>
          <target state="translated">비트 연산자</target>
        </trans-unit>
        <trans-unit id="2e1e72417f6d1d5bb871a3d9c377c1ced9cb59b2" translate="yes" xml:space="preserve">
          <source>Bitwise Operators &amp;rarr;</source>
          <target state="translated">비트 연산자 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e7a6974fecf3c787a78bec79ec9eb88cfe0205c2" translate="yes" xml:space="preserve">
          <source>Bitwise operators allow evaluation and manipulation of specific bits within an integer.</source>
          <target state="translated">비트 연산자는 정수 내에서 특정 비트의 평가 및 조작을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="f5e2ee6051b4bf4131d3f97441f880feec7b4508" translate="yes" xml:space="preserve">
          <source>Blends the fill color with each pixel in the image.</source>
          <target state="translated">채우기 색상을 이미지의 각 픽셀과 혼합합니다.</target>
        </trans-unit>
        <trans-unit id="46e1d39d7877c858ec188aa048154587a129261f" translate="yes" xml:space="preserve">
          <source>Block at most one(wait, but don't loop)</source>
          <target state="translated">최대 1 개 차단 (기다리지 만 반복하지는 않음)</target>
        </trans-unit>
        <trans-unit id="5500713d4da12f5a4da15115ea222c32cfb07c62" translate="yes" xml:space="preserve">
          <source>Block the process for the given number of seconds.</source>
          <target state="translated">주어진 시간 (초) 동안 프로세스를 차단합니다.</target>
        </trans-unit>
        <trans-unit id="4a637713db8ef9042d5487dc4abb649d9a9da695" translate="yes" xml:space="preserve">
          <source>Block until a new searcher is opened and registered as the main query searcher, making the changes visible.</source>
          <target state="translated">새 검색자가 열리고 기본 쿼리 검색 자로 등록 될 때까지 차단하여 변경 내용을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="03e4760f8e9a9baa4718c848933cf1784961831b" translate="yes" xml:space="preserve">
          <source>Block until at least &lt;code&gt;len&lt;/code&gt; are received. However, if a signal is caught or the remote host disconnects, the function may return less data.</source>
          <target state="translated">적어도 &lt;code&gt;len&lt;/code&gt; 이 수신 될 때까지 차단하십시오 . 그러나 신호가 잡히거나 원격 호스트의 연결이 끊어지면 기능이 적은 데이터를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2ecb643710e2492ef5bb16f408ad6e1bed65b5ac" translate="yes" xml:space="preserve">
          <source>Blocks packets arriving from a specific source to a specific multicast group, which must have been previously joined. (added in PHP 5.4)</source>
          <target state="translated">특정 소스에서 특정 멀티 캐스트 그룹으로 도착한 패킷을 차단합니다.이 멀티 캐스트 그룹은 이전에 가입되어 있어야합니다. (PHP 5.4에 추가)</target>
        </trans-unit>
        <trans-unit id="7f8382ec47eb8c09ed09a4bb72874a406c393c0f" translate="yes" xml:space="preserve">
          <source>Blocks until there is activity on any of the curl_multi connections.</source>
          <target state="translated">curl_multi 연결에 활동이있을 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="3aa08fdaf2db1541666fbf7ffbc49f8713d92894" translate="yes" xml:space="preserve">
          <source>Blur an image, then display to the browser.</source>
          <target state="translated">이미지를 흐리게 한 다음 브라우저에 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="79688542adfa2ae35ecdb7fac4e0b9776a6bf449" translate="yes" xml:space="preserve">
          <source>Blur radius</source>
          <target state="translated">블러 반경</target>
        </trans-unit>
        <trans-unit id="d7807285d454c5eef5d53a68b62068df2fce7f59" translate="yes" xml:space="preserve">
          <source>Blurs an image. We convolve the image with a Gaussian operator of the given radius and standard deviation (sigma). For reasonable results, the radius should be larger than sigma. Use a radius of 0 and selects a suitable radius for you.</source>
          <target state="translated">이미지를 흐리게합니다. 주어진 반경과 표준 편차 (시그마)의 가우시안 연산자로 이미지를 컨볼 루션합니다. 합리적인 결과를 얻으려면 반경이 시그마보다 커야합니다. 반경 0을 사용하고 적합한 반경을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="89a17bc86bdbf48525c60a44aba28803628ee7e4" translate="yes" xml:space="preserve">
          <source>Body transfer encoding</source>
          <target state="translated">바디 전송 인코딩</target>
        </trans-unit>
        <trans-unit id="5c6ec93fb49ff02d92cff3563fb57223953172fe" translate="yes" xml:space="preserve">
          <source>Bool flag</source>
          <target state="translated">부 깃발</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="eba5b1e2218c2218573b77c1bccefe60fabea2bc" translate="yes" xml:space="preserve">
          <source>Boolean is returned as &quot;t&quot; or &quot;f&quot;. All other types, including arrays are returned as strings formatted in the same default PostgreSQL manner that you would see in the &lt;strong&gt;psql&lt;/strong&gt; program. Database &lt;em&gt;NULL&lt;/em&gt; values are returned as &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">부울은 &quot;t&quot;또는 &quot;f&quot;로 반환됩니다. 배열을 포함한 다른 모든 유형은 &lt;strong&gt;psql&lt;/strong&gt; 프로그램 에서 볼 수있는 것과 동일한 기본 PostgreSQL 방식으로 포맷 된 문자열로 반환됩니다 . 데이터베이스 &lt;em&gt;NULL&lt;/em&gt; 값은 &lt;em&gt;NULL&lt;/em&gt; 로 반환 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="0786cdff946e6084c50bb7df6cacd8ed965599fa" translate="yes" xml:space="preserve">
          <source>Booleans</source>
          <target state="translated">Booleans</target>
        </trans-unit>
        <trans-unit id="5168c0e8edad4a7175363d16e1be9abd28a846cb" translate="yes" xml:space="preserve">
          <source>Booleans &amp;rarr;</source>
          <target state="translated">부울 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e4acaedf5d7eec7fd32e95d56c72311b17a769d5" translate="yes" xml:space="preserve">
          <source>Boost value. Boosts documents with matching terms.</source>
          <target state="translated">부스트 값. 용어가 일치하는 문서를 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="7893c77d507bcbbf77975ce0f6b30a2f2cf373c0" translate="yes" xml:space="preserve">
          <source>Bootstrap is a mechanism used to do some intial config before a Application run.</source>
          <target state="translated">부트 스트랩은 응용 프로그램을 실행하기 전에 초기 구성을 수행하는 데 사용되는 메커니즘입니다.</target>
        </trans-unit>
        <trans-unit id="f208ff04980c91ad5d5b79edf01f26e5a704e573" translate="yes" xml:space="preserve">
          <source>Border height</source>
          <target state="translated">테두리 높이</target>
        </trans-unit>
        <trans-unit id="eccc4059e13fc7e1fce985c7deaab3ca407191f9" translate="yes" xml:space="preserve">
          <source>Border width</source>
          <target state="translated">테두리 너비</target>
        </trans-unit>
        <trans-unit id="14f10d51bc18c29e2c307fe416bb95c845e0dd11" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;functions.arguments#functions.variable-arg-list&quot;&gt;variable number of arguments&lt;/a&gt; and &lt;a href=&quot;functions.arguments#functions.arguments.default&quot;&gt;default arguments&lt;/a&gt; are supported in functions. See also the function references for &lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args()&lt;/a&gt;, &lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg()&lt;/a&gt;, and &lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args()&lt;/a&gt; for more information.</source>
          <target state="translated">두 &lt;a href=&quot;functions.arguments#functions.variable-arg-list&quot;&gt;인수의 변수 수&lt;/a&gt; 및 &lt;a href=&quot;functions.arguments#functions.arguments.default&quot;&gt;기본 인자&lt;/a&gt; 기능에서 지원됩니다. 자세한 내용은 &lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args ()&lt;/a&gt; , &lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg ()&lt;/a&gt; 및 &lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args ()에&lt;/a&gt; 대한 함수 참조를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="52086faa34380c792cff47e63c67d87596c31b76" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;source&lt;/code&gt; and &lt;code&gt;dest&lt;/code&gt; may now be URLs if the &quot;fopen wrappers&quot; have been enabled. See &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; for more details.</source>
          <target state="translated">&quot;fopen wrappers&quot;가 활성화 된 경우 &lt;code&gt;source&lt;/code&gt; 및 &lt;code&gt;dest&lt;/code&gt; 모두 URL이 될 수 있습니다. 자세한 내용은 &lt;a href=&quot;function.fopen&quot;&gt;fopen ()&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="047dda88cece1a79c34d2017973e651282fc5a1d" translate="yes" xml:space="preserve">
          <source>Both &lt;strong&gt;&lt;code&gt;SORT_STRING&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;SORT_REGULAR&lt;/code&gt;&lt;/strong&gt; are case sensitive, strings starting with a capital letter will come before strings starting with a lowercase letter.</source>
          <target state="translated">두 &lt;strong&gt; &lt;code&gt;SORT_STRING&lt;/code&gt; &lt;/strong&gt; 와 &lt;strong&gt; &lt;code&gt;SORT_REGULAR&lt;/code&gt; 는&lt;/strong&gt; 소문자 편지로 시작하는 문자열 전에 올 것이다 대문자로 시작하는 경우를 구분 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="17b793a11772af76deea9e8818870f1ad6635eda" translate="yes" xml:space="preserve">
          <source>Both arguments must be of the same length to be compared successfully. When arguments of differing length are supplied, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; is returned immediately and the length of the known string may be leaked in case of a timing attack.</source>
          <target state="translated">성공적으로 비교하려면 두 인수의 길이가 같아야합니다. 길이가 다른 인수가 제공되면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 가 즉시 리턴되고 타이밍 공격의 경우 알려진 문자열의 길이가 누출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="465a2fb93ebf06813e906fb6b9f0a200e7691d08" translate="yes" xml:space="preserve">
          <source>Both operands and the result for the &lt;em&gt;&amp;lt;&amp;lt;&lt;/em&gt; and &lt;em&gt;&amp;gt;&amp;gt;&lt;/em&gt; operators are always treated as integers.</source>
          <target state="translated">피연산자와 &lt;em&gt;&amp;lt;&amp;lt;&lt;/em&gt; 및 &lt;em&gt;&amp;gt;&amp;gt;&lt;/em&gt; 연산자 의 결과 는 항상 정수로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="8d172067189f7539a928ee45cf7ac67f8bf26054" translate="yes" xml:space="preserve">
          <source>Both square brackets and curly braces can be used interchangeably for accessing array elements (e.g. &lt;em&gt;$array[42]&lt;/em&gt; and &lt;em&gt;$array{42}&lt;/em&gt; will both do the same thing in the example above).</source>
          <target state="translated">배열 요소에 액세스하기 위해 대괄호와 중괄호를 서로 바꿔 사용할 수 있습니다 (예 : &lt;em&gt;$ array [42]&lt;/em&gt; 및 &lt;em&gt;$ array {42}&lt;/em&gt; 는 위의 예에서 모두 동일한 작업을 수행함).</target>
        </trans-unit>
        <trans-unit id="1cde617e452bcf70453ceb228fbdfd8ae820962a" translate="yes" xml:space="preserve">
          <source>Bottom right x coordinate.</source>
          <target state="translated">오른쪽 아래 x 좌표</target>
        </trans-unit>
        <trans-unit id="f57d57586cefac38eb286dc1f19e78c5cc329053" translate="yes" xml:space="preserve">
          <source>Bottom right y coordinate.</source>
          <target state="translated">오른쪽 아래 y 좌표</target>
        </trans-unit>
        <trans-unit id="327cb3f57887d974b9e84e7ad6cd3f1cb560b545" translate="yes" xml:space="preserve">
          <source>Bracket style delimiters do not need to be escaped when they are used as meta characters within the pattern, but as with other delimiters they must be escaped when they are used as literal characters.</source>
          <target state="translated">대괄호 스타일 분리 문자는 패턴 내에서 메타 문자로 사용될 때 이스케이프 할 필요는 없지만 다른 분리 문자와 같이 리터럴 문자로 사용할 때는 이스케이프해야합니다.</target>
        </trans-unit>
        <trans-unit id="18b4dce48094c7dd485e28f03e6b95be5421ef4e" translate="yes" xml:space="preserve">
          <source>Breaks this node into two nodes at the specified &lt;code&gt;offset&lt;/code&gt;, keeping both in the tree as siblings.</source>
          <target state="translated">이 노드를 지정된 &lt;code&gt;offset&lt;/code&gt; 에서 두 개의 노드로 나누고 두 노드를 모두 형제로 유지합니다.</target>
        </trans-unit>
        <trans-unit id="e8b19c1c9e8e112a2863254cb6122a231d27444d" translate="yes" xml:space="preserve">
          <source>Broadcast to all Threads blocking on a call to &lt;a href=&quot;cond.wait&quot;&gt;Cond::wait()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;cond.wait&quot;&gt;Cond :: wait ()&lt;/a&gt; 에 대한 호출에서 모든 스레드 차단으로 브로드 캐스트합니다 .</target>
        </trans-unit>
        <trans-unit id="4fe2b2d795f3f2f777c42a2cf0b7926852276d30" translate="yes" xml:space="preserve">
          <source>Buffer (class)</source>
          <target state="translated">버퍼 (클래스)</target>
        </trans-unit>
        <trans-unit id="4e629f4bce0e11cebfc66d3ee51c9da3272876a9" translate="yes" xml:space="preserve">
          <source>Buffer::__construct</source>
          <target state="translated">Buffer::__construct</target>
        </trans-unit>
        <trans-unit id="b8a432d4b3074b504525ed57c1bbb7c3adf831ac" translate="yes" xml:space="preserve">
          <source>Buffer::add</source>
          <target state="translated">Buffer::add</target>
        </trans-unit>
        <trans-unit id="fb88467614c3b6c171e82d4529eadd21f9bfb672" translate="yes" xml:space="preserve">
          <source>Buffer::addBuffer</source>
          <target state="translated">Buffer::addBuffer</target>
        </trans-unit>
        <trans-unit id="b9874c412003c7050572e7c9374da6a7edf5e000" translate="yes" xml:space="preserve">
          <source>Buffer::appendFrom</source>
          <target state="translated">Buffer::appendFrom</target>
        </trans-unit>
        <trans-unit id="39f401378e1124847461455ed3e3ff2945ab235b" translate="yes" xml:space="preserve">
          <source>Buffer::copyout</source>
          <target state="translated">Buffer::copyout</target>
        </trans-unit>
        <trans-unit id="ce74dbc09caffe5e978f225c7eec69a3e278ebd0" translate="yes" xml:space="preserve">
          <source>Buffer::drain</source>
          <target state="translated">Buffer::drain</target>
        </trans-unit>
        <trans-unit id="84a1ae103ad93980bda63cc8beb01d6476d653d5" translate="yes" xml:space="preserve">
          <source>Buffer::enableLocking</source>
          <target state="translated">Buffer::enableLocking</target>
        </trans-unit>
        <trans-unit id="902d3649bd383026d3f4934940e00981dd0e2a1f" translate="yes" xml:space="preserve">
          <source>Buffer::expand</source>
          <target state="translated">Buffer::expand</target>
        </trans-unit>
        <trans-unit id="fef38a0fe25cda33f51bfc01aa9b27ed06078fc9" translate="yes" xml:space="preserve">
          <source>Buffer::freeze</source>
          <target state="translated">Buffer::freeze</target>
        </trans-unit>
        <trans-unit id="01d12ac127c1b9e5838d07d8af3d1cc1fc49a344" translate="yes" xml:space="preserve">
          <source>Buffer::lock</source>
          <target state="translated">Buffer::lock</target>
        </trans-unit>
        <trans-unit id="1201a7fc7af48631c51b8ef869a7386a1d20ad4f" translate="yes" xml:space="preserve">
          <source>Buffer::prepend</source>
          <target state="translated">Buffer::prepend</target>
        </trans-unit>
        <trans-unit id="f1b6411719b2406d8706c150f1dcceed1b54ac63" translate="yes" xml:space="preserve">
          <source>Buffer::prependBuffer</source>
          <target state="translated">Buffer::prependBuffer</target>
        </trans-unit>
        <trans-unit id="10f43cf704916736a171ed955fc1c78928aba766" translate="yes" xml:space="preserve">
          <source>Buffer::pullup</source>
          <target state="translated">Buffer::pullup</target>
        </trans-unit>
        <trans-unit id="d2aea6a1264bce311f27bf8d72948db3608b28e7" translate="yes" xml:space="preserve">
          <source>Buffer::read</source>
          <target state="translated">Buffer::read</target>
        </trans-unit>
        <trans-unit id="12d7997ec44348192f9e1838f175acb5c50db847" translate="yes" xml:space="preserve">
          <source>Buffer::readFrom</source>
          <target state="translated">Buffer::readFrom</target>
        </trans-unit>
        <trans-unit id="2b982aaa6731d373b7cdc7c5466218121d29cd26" translate="yes" xml:space="preserve">
          <source>Buffer::readLine</source>
          <target state="translated">Buffer::readLine</target>
        </trans-unit>
        <trans-unit id="60508826b1f7ab07646bf8452d2d6790ef1bc267" translate="yes" xml:space="preserve">
          <source>Buffer::search</source>
          <target state="translated">Buffer::search</target>
        </trans-unit>
        <trans-unit id="8885d0a558826a03adebf74e988faf7275e0bdf4" translate="yes" xml:space="preserve">
          <source>Buffer::searchEol</source>
          <target state="translated">Buffer::searchEol</target>
        </trans-unit>
        <trans-unit id="b49c61ae608de70ab0a5f80c0b79f1683600c83f" translate="yes" xml:space="preserve">
          <source>Buffer::substr</source>
          <target state="translated">Buffer::substr</target>
        </trans-unit>
        <trans-unit id="8a4f7fd079314a696c3312d2ba167ab5c14cb2dc" translate="yes" xml:space="preserve">
          <source>Buffer::unfreeze</source>
          <target state="translated">Buffer::unfreeze</target>
        </trans-unit>
        <trans-unit id="3dbfa27b637ca0150a1c8f0d3b1a504c3ac1d07e" translate="yes" xml:space="preserve">
          <source>Buffer::unlock</source>
          <target state="translated">Buffer::unlock</target>
        </trans-unit>
        <trans-unit id="7e03b1a932d08a910e8a90352c02e22f9b6010c2" translate="yes" xml:space="preserve">
          <source>Buffer::write</source>
          <target state="translated">Buffer::write</target>
        </trans-unit>
        <trans-unit id="dfaab1edd9241718ee8f86ec3b9f76096a2b7ebc" translate="yes" xml:space="preserve">
          <source>BufferEvent (class)</source>
          <target state="translated">BufferEvent (클래스)</target>
        </trans-unit>
        <trans-unit id="53e076b45488eb25900080acdb1757f38b1ff7cd" translate="yes" xml:space="preserve">
          <source>BufferEvent::__construct</source>
          <target state="translated">BufferEvent::__construct</target>
        </trans-unit>
        <trans-unit id="54af84cc4011fbf2d46babe64e21c93a437fbe2a" translate="yes" xml:space="preserve">
          <source>BufferEvent::close</source>
          <target state="translated">BufferEvent::close</target>
        </trans-unit>
        <trans-unit id="7d407a064f7a4665aae1684c15ba79c51867216b" translate="yes" xml:space="preserve">
          <source>BufferEvent::connect</source>
          <target state="translated">BufferEvent::connect</target>
        </trans-unit>
        <trans-unit id="5cb6a96aac6f89c6bf33348ff81588e68887f40f" translate="yes" xml:space="preserve">
          <source>BufferEvent::connectHost</source>
          <target state="translated">BufferEvent::connectHost</target>
        </trans-unit>
        <trans-unit id="16227608923cc8dfe380bf1ddf147512f6d811ec" translate="yes" xml:space="preserve">
          <source>BufferEvent::createPair</source>
          <target state="translated">BufferEvent::createPair</target>
        </trans-unit>
        <trans-unit id="5ca9d530aefbf817a4ae6563eb3fa8cef3e73323" translate="yes" xml:space="preserve">
          <source>BufferEvent::disable</source>
          <target state="translated">BufferEvent::disable</target>
        </trans-unit>
        <trans-unit id="f98e763f5d195315ef66aee008e7cd650adfced1" translate="yes" xml:space="preserve">
          <source>BufferEvent::enable</source>
          <target state="translated">BufferEvent::enable</target>
        </trans-unit>
        <trans-unit id="100df7856667d55b0c6abd565420ccb44f8c125b" translate="yes" xml:space="preserve">
          <source>BufferEvent::free</source>
          <target state="translated">BufferEvent::free</target>
        </trans-unit>
        <trans-unit id="33965ad0318c5983cf5c38e6552eb42b7244162e" translate="yes" xml:space="preserve">
          <source>BufferEvent::getDnsErrorString</source>
          <target state="translated">BufferEvent::getDnsErrorString</target>
        </trans-unit>
        <trans-unit id="6d5eeb33c2048b25979a8a9e478194e98614cbff" translate="yes" xml:space="preserve">
          <source>BufferEvent::getEnabled</source>
          <target state="translated">BufferEvent::getEnabled</target>
        </trans-unit>
        <trans-unit id="9292e7e6cc9b811fc12d327d8a796ed2b99d67bf" translate="yes" xml:space="preserve">
          <source>BufferEvent::getInput</source>
          <target state="translated">BufferEvent::getInput</target>
        </trans-unit>
        <trans-unit id="0da43abff752b597420e7359e635d8f29e48e15b" translate="yes" xml:space="preserve">
          <source>BufferEvent::getOutput</source>
          <target state="translated">BufferEvent::getOutput</target>
        </trans-unit>
        <trans-unit id="e58d005c61dc1219c4acbea1ea7ced0b68d29366" translate="yes" xml:space="preserve">
          <source>BufferEvent::read</source>
          <target state="translated">BufferEvent::read</target>
        </trans-unit>
        <trans-unit id="11e2f4a028be69e15e59e643aee343012d7e1e2f" translate="yes" xml:space="preserve">
          <source>BufferEvent::readBuffer</source>
          <target state="translated">BufferEvent::readBuffer</target>
        </trans-unit>
        <trans-unit id="e6fcd7e4c71c388d071f6f2dfab40263f4d97349" translate="yes" xml:space="preserve">
          <source>BufferEvent::setCallbacks</source>
          <target state="translated">BufferEvent::setCallbacks</target>
        </trans-unit>
        <trans-unit id="0484a0ca930acf73425206bac1cedbf4c6da95dc" translate="yes" xml:space="preserve">
          <source>BufferEvent::setPriority</source>
          <target state="translated">BufferEvent::setPriority</target>
        </trans-unit>
        <trans-unit id="15d0e69bf341960381fdeab4c9d3dfda6a8aa9da" translate="yes" xml:space="preserve">
          <source>BufferEvent::setTimeouts</source>
          <target state="translated">BufferEvent::setTimeouts</target>
        </trans-unit>
        <trans-unit id="ba99e4555eb960cc1bde3ca3c3caca96c375decd" translate="yes" xml:space="preserve">
          <source>BufferEvent::setWatermark</source>
          <target state="translated">BufferEvent::setWatermark</target>
        </trans-unit>
        <trans-unit id="8becd9ef0f5ab43ef96b71eedbb8d91112636002" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslError</source>
          <target state="translated">BufferEvent::sslError</target>
        </trans-unit>
        <trans-unit id="568597fdc5d51f1f98c4c26fd10a991fbfce4366" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslFilter</source>
          <target state="translated">BufferEvent::sslFilter</target>
        </trans-unit>
        <trans-unit id="6aac5a90db7214dbcdefa4cfeae50c4e2fbf3e5c" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslGetCipherInfo</source>
          <target state="translated">BufferEvent::sslGetCipherInfo</target>
        </trans-unit>
        <trans-unit id="12e8d84fe2113b2678169b95791eeb37bcc22242" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslGetCipherName</source>
          <target state="translated">BufferEvent::sslGetCipherName</target>
        </trans-unit>
        <trans-unit id="6538cbfa54bc5652c3e4557b1923a4238c54d073" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslGetCipherVersion</source>
          <target state="translated">BufferEvent::sslGetCipherVersion</target>
        </trans-unit>
        <trans-unit id="88df75a1bad0d915db02197ec4b85d6d45c79da5" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslGetProtocol</source>
          <target state="translated">BufferEvent::sslGetProtocol</target>
        </trans-unit>
        <trans-unit id="52b9926185b61608086bbccb4057d10122f62e05" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslRenegotiate</source>
          <target state="translated">BufferEvent::sslRenegotiate</target>
        </trans-unit>
        <trans-unit id="9331183dec857b364e8fa33fa923f049cb00f5e6" translate="yes" xml:space="preserve">
          <source>BufferEvent::sslSocket</source>
          <target state="translated">BufferEvent::sslSocket</target>
        </trans-unit>
        <trans-unit id="56703e0253a6626f3db31e049d09ca0e080e7457" translate="yes" xml:space="preserve">
          <source>BufferEvent::write</source>
          <target state="translated">BufferEvent::write</target>
        </trans-unit>
        <trans-unit id="ad838193ac6d141aebfb4886ff07fa04650ab632" translate="yes" xml:space="preserve">
          <source>BufferEvent::writeBuffer</source>
          <target state="translated">BufferEvent::writeBuffer</target>
        </trans-unit>
        <trans-unit id="d49f3175dcd17eeccbee03f32b7c9a134f811104" translate="yes" xml:space="preserve">
          <source>Built-in classes can define its own comparison, different classes are uncomparable, same class see &lt;a href=&quot;language.oop5.object-comparison&quot;&gt;Object Comparison&lt;/a&gt;</source>
          <target state="translated">내장 클래스는 자체 비교를 정의 할 수 있으며 다른 클래스는 비교할 수 없으며 동일한 클래스는 &lt;a href=&quot;language.oop5.object-comparison&quot;&gt;객체 비교를&lt;/a&gt; 참조하십시오</target>
        </trans-unit>
        <trans-unit id="4204fec258be60d235a79a85844bedd99808c0f1" translate="yes" xml:space="preserve">
          <source>But perhaps the most common use for of lambda-style (anonymous) functions is to create callback functions, for example when using &lt;a href=&quot;function.array-walk&quot;&gt;array_walk()&lt;/a&gt; or &lt;a href=&quot;function.usort&quot;&gt;usort()&lt;/a&gt;</source>
          <target state="translated">그러나 람다 스타일 (익명) 함수의 가장 일반적인 용도는 예를 들어 &lt;a href=&quot;function.array-walk&quot;&gt;array_walk ()&lt;/a&gt; 또는 &lt;a href=&quot;function.usort&quot;&gt;usort ()를&lt;/a&gt; 사용할 때 콜백 함수를 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="42d82d64135c7c7eed0f8b3f9d575221a5a1108b" translate="yes" xml:space="preserve">
          <source>But there do is some usage need such feature, like unit testing. thus Yaf can be built with --enable-yaf-debug, which will allow Yaf read the value user set via script.</source>
          <target state="translated">그러나 단위 테스트와 같은 일부 기능이 필요한 기능이 있습니다. 따라서 Yaf는 --enable-yaf-debug로 빌드 할 수 있으며,이를 통해 Yaf는 스크립트를 통해 사용자가 설정 한 값을 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c10a84ef665e2b028403dac66b7cda84d80803b" translate="yes" xml:space="preserve">
          <source>But this is not, and will result in a parse error in PHP 5:</source>
          <target state="translated">그러나 이것은 아니며 PHP 5에서 구문 분석 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c62f81e4da8b5c73825197e5c2450619314c8618" translate="yes" xml:space="preserve">
          <source>By contrast to &lt;a href=&quot;function.strtolower&quot;&gt;strtolower()&lt;/a&gt;, 'alphabetic' is determined by the Unicode character properties. Thus the behaviour of this function is not affected by locale settings and it can convert any characters that have 'alphabetic' property, such as A-umlaut (&amp;Auml;).</source>
          <target state="translated">&lt;a href=&quot;function.strtolower&quot;&gt;strtolower ()&lt;/a&gt; 와 달리 '알파벳'은 유니 코드 문자 속성에 의해 결정됩니다. 따라서이 기능의 동작은 로케일 설정의 영향을받지 않으며 A- 움라우트 (&amp;Auml;)와 같이 '알파벳'속성이있는 문자를 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d675aa298427a255b86c1c1b913eeb917f6d4be4" translate="yes" xml:space="preserve">
          <source>By contrast to &lt;a href=&quot;function.strtoupper&quot;&gt;strtoupper()&lt;/a&gt;, 'alphabetic' is determined by the Unicode character properties. Thus the behaviour of this function is not affected by locale settings and it can convert any characters that have 'alphabetic' property, such as a-umlaut (&amp;auml;).</source>
          <target state="translated">&lt;a href=&quot;function.strtoupper&quot;&gt;strtoupper ()&lt;/a&gt; 와 달리 '알파벳'은 유니 코드 문자 속성에 의해 결정됩니다. 따라서이 기능의 동작은 로케일 설정의 영향을받지 않으며 a- 움라우트 (&amp;auml;)와 같이 '알파벳'속성이있는 문자를 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d28fdae93cfe8c9acab3238f946a85b87a64740b" translate="yes" xml:space="preserve">
          <source>By contrast to the standard case folding functions such as &lt;a href=&quot;function.strtolower&quot;&gt;strtolower()&lt;/a&gt; and &lt;a href=&quot;function.strtoupper&quot;&gt;strtoupper()&lt;/a&gt;, case folding is performed on the basis of the Unicode character properties. Thus the behaviour of this function is not affected by locale settings and it can convert any characters that have 'alphabetic' property, such as A-umlaut (&amp;Auml;).</source>
          <target state="translated">&lt;a href=&quot;function.strtolower&quot;&gt;strtolower ()&lt;/a&gt; 및 &lt;a href=&quot;function.strtoupper&quot;&gt;strtoupper ()&lt;/a&gt; 와 같은 표준 케이스 폴딩 함수와 달리 , 케이스 폴딩은 유니 코드 문자 속성을 기반으로 수행됩니다. 따라서이 기능의 동작은 로케일 설정의 영향을받지 않으며 A- 움라우트 (&amp;Auml;)와 같이 '알파벳'속성이있는 문자를 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f04b5f931d27087eb2765c54b98dae10ca9ea3bd" translate="yes" xml:space="preserve">
          <source>By default Libevent turns underlying file descriptors, or sockets, to non-blocking mode. This flag tells Libevent to leave them in blocking mode.</source>
          <target state="translated">기본적으로 Libevent는 기본 파일 설명자 또는 소켓을 비 차단 모드로 설정합니다. 이 플래그는 Libevent에 차단 모드를 유지하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="b2e72178624c9ca39858e1c67daba59e002cec13" translate="yes" xml:space="preserve">
          <source>By default all events are scheduled with the same priority (&lt;code&gt;npriorities&lt;/code&gt;/2). Using &lt;strong&gt;event_base_priority_init()&lt;/strong&gt; you can change the number of event priority levels and then set a desired priority for each event.</source>
          <target state="translated">기본적으로 모든 이벤트는 동일한 우선 순위 ( &lt;code&gt;npriorities&lt;/code&gt; / 2) 로 스케줄됩니다 . &lt;strong&gt;event_base_priority_init ()&lt;/strong&gt; 를 사용하여 이벤트 우선 순위 레벨 수를 변경 한 다음 각 이벤트에 대해 원하는 우선 순위를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26de7b5324d20794622ce77df60d00ae0df480de" translate="yes" xml:space="preserve">
          <source>By default an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; is returned. If &lt;code&gt;return_float&lt;/code&gt; is set, then a &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt; is returned.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 이 반환됩니다. 경우 &lt;code&gt;return_float&lt;/code&gt; 가 설정되어, 다음 &lt;a href=&quot;language.types.float&quot;&gt;플로트가&lt;/a&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="1daefe7a11c77b758344272257b9986471de07d4" translate="yes" xml:space="preserve">
          <source>By default it checks all include paths to contain filenames built up by the lowercase class name appended by the filename extensions .inc and .php.</source>
          <target state="translated">기본적으로 파일 이름 확장자 .inc 및 .php가 추가 된 소문자 클래스 이름으로 작성된 파일 이름을 포함하도록 모든 포함 경로를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4cad97d4772a513a14119703844006573ad0fce8" translate="yes" xml:space="preserve">
          <source>By default on some platforms, once a listener socket is closed, no other socket can bind to the same port until a while has passed. Setting this option makes Libevent mark the socket as reusable, so that once it is closed, another socket can be opened to listen on the same port.</source>
          <target state="translated">일부 플랫폼에서는 기본적으로 리스너 소켓이 닫히면 일정 시간이 지날 때까지 다른 소켓이 동일한 포트에 바인딩 될 수 없습니다. 이 옵션을 설정하면 Libevent는 소켓을 재사용 가능으로 표시하므로 일단 소켓을 닫으면 동일한 포트에서 청취하기 위해 다른 소켓을 열 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="550dc8ff894807a5e0db5a9bf093b0144810af9f" translate="yes" xml:space="preserve">
          <source>By default target must match a particular pixel color exactly. However, in many cases two colors may differ by a small amount. The fuzz member of image defines how much tolerance is acceptable to consider two colors as the same. This parameter represents the variation on the quantum range.</source>
          <target state="translated">기본적으로 대상은 특정 픽셀 색상과 정확히 일치해야합니다. 그러나 많은 경우 두 가지 색상이 조금씩 다를 수 있습니다. 이미지의 퍼즈 멤버는 두 색상을 동일하게 고려할 수있는 허용 오차의 양을 정의합니다. 이 파라미터는 양자 범위의 변동을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9b19d1383ea2ae74b773ac098a07b778efa0af21" translate="yes" xml:space="preserve">
          <source>By default the Memcached instances are destroyed at the end of the request. To create an instance that persists between requests, use &lt;code&gt;persistent_id&lt;/code&gt; to specify a unique ID for the instance. All instances created with the same &lt;code&gt;persistent_id&lt;/code&gt; will share the same connection.</source>
          <target state="translated">기본적으로 Memcached 인스턴스는 요청 끝에서 삭제됩니다. 요청 사이의이 지속이 사용하는 인스턴스를 만들려면 &lt;code&gt;persistent_id&lt;/code&gt; 인스턴스에 대한 고유 ID를 지정합니다. 동일한 &lt;code&gt;persistent_id&lt;/code&gt; 작성된 모든 인스턴스 는 동일한 연결을 공유합니다.</target>
        </trans-unit>
        <trans-unit id="1222d4e4aafb65f5393a6ee1633532ea3bac5f86" translate="yes" xml:space="preserve">
          <source>By default the tables name that field belongs to is returned but if &lt;code&gt;oid_only&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, then the oid will instead be returned.</source>
          <target state="translated">기본적으로 field가 속한 테이블 이름이 반환되지만 &lt;code&gt;oid_only&lt;/code&gt; 가 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 로 설정 되면 대신에 OID가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0b2f59a620e268d62cce13da491cf0ddd8a126a2" translate="yes" xml:space="preserve">
          <source>By default this includes the following methods: &lt;em&gt;GET&lt;/em&gt; , &lt;em&gt;POST&lt;/em&gt; , &lt;em&gt;HEAD&lt;/em&gt; , &lt;em&gt;PUT&lt;/em&gt; , &lt;em&gt;DELETE&lt;/em&gt; . See &lt;em&gt;EventHttpRequest::CMD_*&lt;/em&gt; constants.</source>
          <target state="translated">기본적으로 여기에는 &lt;em&gt;GET&lt;/em&gt; , &lt;em&gt;POST&lt;/em&gt; , &lt;em&gt;HEAD&lt;/em&gt; , &lt;em&gt;PUT&lt;/em&gt; , &lt;em&gt;DELETE&lt;/em&gt; 메소드가 포함됩니다 . &lt;em&gt;EventHttpRequest :: CMD_ *&lt;/em&gt; 상수를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="169b6cce2bc13e3f8648d9d4b2f1c45882e22cc1" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;data_is_url&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. Use &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; to specify that &lt;code&gt;data&lt;/code&gt; is a path or URL to an XML document instead of &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; data.</source>
          <target state="translated">기본적으로 &lt;code&gt;data_is_url&lt;/code&gt; 은 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; 입니다. &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 를 사용하여 &lt;code&gt;data&lt;/code&gt; 가 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 데이터 대신 XML 문서의 경로 또는 URL 임을 지정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3d4ddcbaf6d2438f5a65fe421703c2af85ab111" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;&lt;code&gt;PHP_QUERY_RFC1738&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">기본적으로 &lt;strong&gt; &lt;code&gt;PHP_QUERY_RFC1738&lt;/code&gt; &lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="37c4ab97d3e4e3626921a7113fd72058b457da88" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;&lt;code&gt;STDOUT&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;STDERR&lt;/code&gt;&lt;/strong&gt; have the VT100 feature enabled.</source>
          <target state="translated">기본적으로 &lt;strong&gt; &lt;code&gt;STDOUT&lt;/code&gt; &lt;/strong&gt; 및 &lt;strong&gt; &lt;code&gt;STDERR&lt;/code&gt; &lt;/strong&gt; 에는 VT100 기능이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b95d6bc6291745ead5afe09978038d77f2800daf" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;Yaf_Loader&lt;/strong&gt; assume all library (class defined script) store in the &lt;a href=&quot;https://secure.php.net/manual/en/yaf.configuration.php#ini.yaf.library&quot;&gt;global library directory&lt;/a&gt;, which is defined in the php.ini(yaf.library).</source>
          <target state="translated">기본적으로 &lt;strong&gt;Yaf_Loader&lt;/strong&gt; 는 모든 라이브러리 (클래스 정의 스크립트)가 &lt;a href=&quot;https://secure.php.net/manual/en/yaf.configuration.php#ini.yaf.library&quot;&gt;전역 라이브러리 디렉토리&lt;/a&gt; (php.ini (yaf.library)에 정의 &lt;strong&gt;됨)에&lt;/strong&gt; 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="12c0cc42a4af9bc911ba463c4d6f7b135fd07906" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;dns_get_record()&lt;/strong&gt; will search for any resource records associated with &lt;code&gt;hostname&lt;/code&gt;. To limit the query, specify the optional &lt;code&gt;type&lt;/code&gt; parameter. May be any one of the following: &lt;strong&gt;&lt;code&gt;DNS_A&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_CNAME&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_HINFO&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_CAA&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_MX&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_NS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_PTR&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_SOA&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_TXT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_AAAA&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_SRV&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_NAPTR&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_A6&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;DNS_ALL&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;DNS_ANY&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">기본적으로 &lt;strong&gt;dns_get_record ()&lt;/strong&gt; 는 &lt;code&gt;hostname&lt;/code&gt; 과 연결된 모든 리소스 레코드를 검색합니다 . 조회를 제한하려면 선택적 &lt;code&gt;type&lt;/code&gt; 매개 변수를 지정하십시오 . : 어떤 다음 중 하나가 될 수 있습니다 &lt;strong&gt; &lt;code&gt;DNS_A&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;DNS_CNAME&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;DNS_HINFO&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;DNS_CAA&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;DNS_MX&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;DNS_NS&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;DNS_PTR&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;DNS_SOA&lt;/code&gt; &lt;/strong&gt; ,이 &lt;strong&gt; &lt;code&gt;DNS_TXT&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;DNS_AAAA&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;DNS_SRV&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;DNS_NAPTR&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;DNS_A6&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;DNS_ALL&lt;/code&gt; &lt;/strong&gt; 또는 &lt;strong&gt; &lt;code&gt;DNS_ANY&lt;/code&gt; &lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="d45026123fdb97b1d69e56ca3ec14c4406135a00" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;microtime()&lt;/strong&gt; returns a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; in the form &quot;msec sec&quot;, where &lt;em&gt;sec&lt;/em&gt; is the number of seconds since the Unix epoch (0:00:00 January 1,1970 GMT), and &lt;em&gt;msec&lt;/em&gt; measures microseconds that have elapsed since &lt;em&gt;sec&lt;/em&gt; and is also expressed in seconds.</source>
          <target state="translated">기본적으로 &lt;strong&gt;microtime ()&lt;/strong&gt; 은 &quot;msec sec&quot;형식 의 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 을 반환합니다 . 여기서 &lt;em&gt;sec&lt;/em&gt; 는 Unix epoch (1970 년 1 월 1 일 1970 : 01 GMT) 이후의 &lt;em&gt;초 수&lt;/em&gt; 이며 &lt;em&gt;msec&lt;/em&gt; 는 &lt;em&gt;sec&lt;/em&gt; 이후에 경과 한 마이크로 초를 측정합니다. 초 단위로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="1d62244b8ee003c572b59e276aac94da7d3d70d4" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;querySingle()&lt;/strong&gt; returns the value of the first column returned by the query. If &lt;code&gt;entire_row&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, then it returns an array of the entire first row.</source>
          <target state="translated">기본적으로 &lt;strong&gt;querySingle ()&lt;/strong&gt; 은 쿼리에서 반환 한 첫 번째 열의 값을 반환합니다. 경우 &lt;code&gt;entire_row&lt;/code&gt; 가 있다 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; , 다음은 전체 첫 번째 행의 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="39f012ccf27bcf6ac35d4b701eda654a6ee0d247" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;stream_filter_append()&lt;/strong&gt; will attach the filter to the &lt;em&gt;read filter chain&lt;/em&gt; if the file was opened for reading (i.e. File Mode: &lt;em&gt;r&lt;/em&gt;, and/or &lt;em&gt;+&lt;/em&gt;). The filter will also be attached to the &lt;em&gt;write filter chain&lt;/em&gt; if the file was opened for writing (i.e. File Mode: &lt;em&gt;w&lt;/em&gt;, &lt;em&gt;a&lt;/em&gt;, and/or &lt;em&gt;+&lt;/em&gt;). &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt;, and/or &lt;strong&gt;&lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt;&lt;/strong&gt; can also be passed to the &lt;code&gt;read_write&lt;/code&gt; parameter to override this behavior.</source>
          <target state="translated">기본적으로 &lt;strong&gt;stream_filter_append ()&lt;/strong&gt; 는 파일을 읽기 위해 열린 경우 (예 : 파일 모드 : &lt;em&gt;r&lt;/em&gt; 및 / 또는 &lt;em&gt;+&lt;/em&gt; ) 필터를 &lt;em&gt;읽기 필터 체인에 연결&lt;/em&gt; 합니다 . 파일이 쓰기 위해 열린 경우 &lt;em&gt;필터&lt;/em&gt; 는 &lt;em&gt;쓰기 필터 체인&lt;/em&gt; 에도 연결됩니다 (예 : 파일 모드 : &lt;em&gt;w&lt;/em&gt; , &lt;em&gt;a&lt;/em&gt; 및 / 또는 &lt;em&gt;+&lt;/em&gt; ). &lt;strong&gt; &lt;code&gt;STREAM_FILTER_READ&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt; &lt;/strong&gt; 및 / 또는 &lt;strong&gt; &lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt; &lt;/strong&gt; 을 &lt;code&gt;read_write&lt;/code&gt; 매개 변수로 전달 하여이 동작을 무시할 수도 있습니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c54c916e8dc9476ea8374319aae895028e037969" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;stream_filter_prepend()&lt;/strong&gt; will attach the filter to the &lt;em&gt;read filter chain&lt;/em&gt; if the file was opened for reading (i.e. File Mode: &lt;em&gt;r&lt;/em&gt;, and/or &lt;em&gt;+&lt;/em&gt;). The filter will also be attached to the &lt;em&gt;write filter chain&lt;/em&gt; if the file was opened for writing (i.e. File Mode: &lt;em&gt;w&lt;/em&gt;, &lt;em&gt;a&lt;/em&gt;, and/or &lt;em&gt;+&lt;/em&gt;). &lt;strong&gt;&lt;code&gt;STREAM_FILTER_READ&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt;&lt;/strong&gt;, and/or &lt;strong&gt;&lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt;&lt;/strong&gt; can also be passed to the &lt;code&gt;read_write&lt;/code&gt; parameter to override this behavior. See &lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append()&lt;/a&gt; for an example of using this parameter.</source>
          <target state="translated">기본적으로 &lt;strong&gt;stream_filter_prepend ()&lt;/strong&gt; 는 파일을 읽기 위해 열린 경우 (예 : 파일 모드 : &lt;em&gt;r&lt;/em&gt; 및 / 또는 &lt;em&gt;+&lt;/em&gt; ) 필터를 &lt;em&gt;읽기 필터 체인에 연결&lt;/em&gt; 합니다 . 파일이 쓰기 위해 열린 경우 &lt;em&gt;필터&lt;/em&gt; 는 &lt;em&gt;쓰기 필터 체인&lt;/em&gt; 에도 연결됩니다 (예 : 파일 모드 : &lt;em&gt;w&lt;/em&gt; , &lt;em&gt;a&lt;/em&gt; 및 / 또는 &lt;em&gt;+&lt;/em&gt; ). &lt;strong&gt; &lt;code&gt;STREAM_FILTER_READ&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;STREAM_FILTER_WRITE&lt;/code&gt; &lt;/strong&gt; 및 / 또는 &lt;strong&gt; &lt;code&gt;STREAM_FILTER_ALL&lt;/code&gt; &lt;/strong&gt; 을 &lt;code&gt;read_write&lt;/code&gt; 매개 변수로 전달 하여이 동작을 무시할 수도 있습니다 . 이 매개 변수 사용의 예는 &lt;a href=&quot;function.stream-filter-append&quot;&gt;stream_filter_append ()&lt;/a&gt; 를 참조하십시오 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67d2a45dc61ddf638922ba03b999977682dc2971" translate="yes" xml:space="preserve">
          <source>By default, &lt;strong&gt;version_compare()&lt;/strong&gt; returns &lt;em&gt;-1&lt;/em&gt; if the first version is lower than the second, &lt;em&gt;0&lt;/em&gt; if they are equal, and &lt;em&gt;1&lt;/em&gt; if the second is lower.</source>
          <target state="translated">기본적으로 &lt;strong&gt;version_compare ()&lt;/strong&gt; 는 첫 번째 버전이 두 번째 버전보다 낮 으면 &lt;em&gt;-1을&lt;/em&gt; 반환 하고 같으면 &lt;em&gt;0을&lt;/em&gt; , 두 번째 버전이 낮 으면 &lt;em&gt;1을&lt;/em&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="27460a8095a98ca40ced156b1791796b14c59245" translate="yes" xml:space="preserve">
          <source>By default, PCRE treats the subject string as consisting of a single &quot;line&quot; of characters (even if it actually contains several newlines). The &quot;start of line&quot; metacharacter (^) matches only at the start of the string, while the &quot;end of line&quot; metacharacter ($) matches only at the end of the string, or before a terminating newline (unless &lt;em&gt;D&lt;/em&gt; modifier is set). This is the same as Perl.  When this modifier is set, the &quot;start of line&quot; and &quot;end of line&quot; constructs match immediately following or immediately before any newline in the subject string, respectively, as well as at the very start and end. This is equivalent to Perl's /m modifier. If there are no &quot;\n&quot; characters in a subject string, or no occurrences of ^ or $ in a pattern, setting this modifier has no effect.</source>
          <target state="translated">기본적으로 PCRE는 제목 문자열을 단일 &quot;줄&quot;문자 (실제로 여러 줄 바꿈이 포함되어 있음)로 구성된 것으로 취급합니다. &quot;줄의 시작&quot;메타 문자 (^)는 문자열의 시작 부분에서만 일치하지만 &quot;줄의 끝&quot;메타 문자 ($)는 문자열의 끝에서만 또는 종료 줄 바꿈 전에 만 일치합니다 ( &lt;em&gt;D&lt;/em&gt; 수정자가 설정 되지 않은 경우). ). 이것은 Perl과 동일합니다. 이 수정자가 설정되면 &quot;줄 시작&quot;및 &quot;줄 끝&quot;구문은 제목 문자열의 개행 바로 앞 또는 바로 앞뿐만 아니라 맨 처음과 끝에서도 각각 일치합니다. 이것은 Perl의 / m 수정 자와 같습니다. 제목 문자열에 &quot;\ n&quot;문자가 없거나 패턴에 ^ 또는 $가없는 경우,이 수정자를 설정해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="3d0196c5a2bb6cf278769248a1a2d040c7e89ffe" translate="yes" xml:space="preserve">
          <source>By default, PHP will coerce values of the wrong type into the expected scalar type if possible. For example, a function that is given an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; for a parameter that expects a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; will get a variable of type &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;.</source>
          <target state="translated">기본적으로 PHP는 가능한 경우 잘못된 유형의 값을 예상 스칼라 유형으로 강제 변환합니다. 예를 들어 좀 주어진 함수의 &lt;a href=&quot;language.types.integer&quot;&gt;정수&lt;/a&gt; 예상하는 매개 변수 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 유형의 변수 얻을 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b17d452802e1da8437b76a937ab04a4b3cd415f6" translate="yes" xml:space="preserve">
          <source>By default, a whitespace character is any character that the C library function isspace() recognizes, though it is possible to compile PCRE with alternative character type tables. Normally isspace() matches space, formfeed, newline, carriage return, horizontal tab, and vertical tab. Perl 5 no longer includes vertical tab in its set of whitespace characters. The \v escape that was in the Perl documentation for a long time was never in fact recognized. However, the character itself was treated as whitespace at least up to 5.002. In 5.004 and 5.005 it does not match \s.</source>
          <target state="translated">공백 문자는 기본적으로 대체 문자 유형 테이블로 PCRE를 컴파일 할 수 있지만 C 라이브러리 함수 isspace ()가 인식하는 문자입니다. 일반적으로 isspace ()는 공백, 용지 공급, 줄 바꿈, 캐리지 리턴, 가로 탭 및 세로 탭과 일치합니다. Perl 5는 더 이상 공백 문자 세트에 수직 탭을 포함하지 않습니다. 오랫동안 Perl 문서에 있던 \ v 이스케이프는 실제로 인식되지 않았습니다. 그러나 문자 자체는 최소 5.002까지 공백으로 처리되었습니다. 5.004 및 5.005에서는 \ s와 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="60428d9473190a6b74698ee79dd88db0cbef4e7c" translate="yes" xml:space="preserve">
          <source>By default, all of the superglobals are available but there are directives that affect this availability. For further information, refer to the documentation for &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.variables-order&quot;&gt;variables_order&lt;/a&gt;.</source>
          <target state="translated">기본적으로 모든 슈퍼 글로벌이 사용 가능하지만이 가용성에 영향을주는 지시문이 있습니다. 자세한 정보는 &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.variables-order&quot;&gt;variables_order&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ebc9b50aa43ff8d8fd03f2219bf2b47983e6e3b1" translate="yes" xml:space="preserve">
          <source>By default, auto-commit is on for a connection. Disabling auto-commit is equivalent with starting a transaction.</source>
          <target state="translated">자동 커밋은 기본적으로 연결되어 있습니다. 자동 커밋을 비활성화하는 것은 트랜잭션을 시작하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5706e160755895eb76a2ad3360399b5df2f770c1" translate="yes" xml:space="preserve">
          <source>By default, function arguments are passed by value (so that if the value of the argument within the function is changed, it does not get changed outside of the function). To allow a function to modify its arguments, they must be passed by reference.</source>
          <target state="translated">기본적으로 함수 인수는 값으로 전달됩니다 (따라서 함수 내의 인수 값이 변경되면 함수 외부에서는 변경되지 않습니다). 함수가 인수를 수정할 수있게하려면 참조로 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="f95bbeb6560da109d08aafe4961c4f7959810269" translate="yes" xml:space="preserve">
          <source>By default, the &lt;strong&gt;sqlsrv_connect()&lt;/strong&gt; uses connection pooling to improve connection performance. To turn off connection pooling (i.e. force a new connection on each call), set the &quot;ConnectionPooling&quot; option in the $connectionOptions array to 0 (or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;). For more information, see &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc644930.aspx&quot;&gt;&amp;raquo; SQLSRV Connection Pooling&lt;/a&gt;.</source>
          <target state="translated">기본적으로 &lt;strong&gt;sqlsrv_connect ()&lt;/strong&gt; 는 연결 풀링을 사용하여 연결 성능을 향상시킵니다. 연결 풀링을 끄려면 (즉, 각 호출에서 새 연결을 강제 실행) $ connectionOptions 배열의 &quot;ConnectionPooling&quot;옵션을 0 (또는 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; &lt;/strong&gt; )으로 설정하십시오. 자세한 내용은 &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc644930.aspx&quot;&gt;&amp;raquo;SQLSRV 연결 풀링을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c436d820c4d07e4e4452f070f12bfae1a0cf0c8" translate="yes" xml:space="preserve">
          <source>By default, the extension is &lt;em&gt;.phar.gz&lt;/em&gt; or &lt;em&gt;.phar.bz2&lt;/em&gt; for compressing phar archives, and &lt;em&gt;.phar.tar.gz&lt;/em&gt; or &lt;em&gt;.phar.tar.bz2&lt;/em&gt; for compressing tar archives. For decompressing, the default file extensions are &lt;em&gt;.phar&lt;/em&gt; and &lt;em&gt;.phar.tar&lt;/em&gt;.</source>
          <target state="translated">기본적으로 확장자는 &lt;em&gt;.phar.gz&lt;/em&gt; 또는 &lt;em&gt;.phar.bz2&lt;/em&gt; 의 Phar 아카이브 및 압축 &lt;em&gt;.phar.tar.gz&lt;/em&gt; 또는 &lt;em&gt;.phar.tar.bz2을&lt;/em&gt; 타르 아카이브를 압축. 압축 해제시 기본 파일 확장자는 &lt;em&gt;.phar&lt;/em&gt; 및 &lt;em&gt;.phar.tar&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="881e27504748548a3b143275ba26c9d9daa94112" translate="yes" xml:space="preserve">
          <source>By default, the extension is &lt;em&gt;.tar.gz&lt;/em&gt; or &lt;em&gt;.tar.bz2&lt;/em&gt; for compressing a tar, and &lt;em&gt;.tar&lt;/em&gt; for decompressing.</source>
          <target state="translated">기본적으로 확장자는 &lt;em&gt;.tar.gz&lt;/em&gt; 또는 &lt;em&gt;.tar.bz2&lt;/em&gt; 이며 &lt;em&gt;tar&lt;/em&gt; 는 압축 하고 &lt;em&gt;.tar&lt;/em&gt; 는 압축 해제입니다.</target>
        </trans-unit>
        <trans-unit id="354acb239ec7de9885c76eadccf52a476dd4c0a7" translate="yes" xml:space="preserve">
          <source>By default, the information in your system &lt;em&gt;openssl.conf&lt;/em&gt; is used to initialize the request; you can specify a configuration file section by setting the &lt;em&gt;config_section_section&lt;/em&gt; key of &lt;code&gt;configargs&lt;/code&gt;. You can also specify an alternative openssl configuration file by setting the value of the &lt;em&gt;config&lt;/em&gt; key to the path of the file you want to use. The following keys, if present in &lt;code&gt;configargs&lt;/code&gt; behave as their equivalents in the &lt;em&gt;openssl.conf&lt;/em&gt;, as listed in the table below.</source>
          <target state="translated">기본적으로 시스템의 정보는 &lt;em&gt;openssl.conf&lt;/em&gt; 를 사용하여 요청을 초기화합니다. &lt;code&gt;configargs&lt;/code&gt; 의 &lt;em&gt;config_section_section&lt;/em&gt; 키를 설정하여 구성 파일 섹션을 지정할 수 있습니다 . &lt;em&gt;구성&lt;/em&gt; 키 의 값 을 사용하려는 파일 경로 로 설정하여 대체 openssl 구성 파일을 지정할 수도 있습니다. &lt;code&gt;configargs&lt;/code&gt; 에 있는 다음 키 는 아래 표에 나열된 것처럼 &lt;em&gt;openssl.conf&lt;/em&gt; 에서 해당 키로 작동 합니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3fed13d9e89961b09ef3a861c5c5a9dd4ef9847f" translate="yes" xml:space="preserve">
          <source>By default, the quantifiers are &quot;greedy&quot;, that is, they match as much as possible (up to the maximum number of permitted times), without causing the rest of the pattern to fail. The classic example of where this gives problems is in trying to match comments in C programs. These appear between the sequences /* and */ and within the sequence, individual * and / characters may appear. An attempt to match C comments by applying the pattern &lt;em&gt;/\*.*\*/&lt;/em&gt; to the string &lt;em&gt;/* first comment */ not comment /* second comment */&lt;/em&gt; fails, because it matches the entire string due to the greediness of the .* item.</source>
          <target state="translated">기본적으로 수량자는 &quot;욕심&quot;입니다. 즉, 나머지 패턴이 실패하지 않고 가능한 한 (최대 허용 시간 수) 일치합니다. 이것이 문제를 일으키는 전형적인 예는 C 프로그램에서 주석을 일치시키는 것입니다. 이들은 시퀀스 **와 * / 사이에 나타나며 시퀀스 내에서 개별 *와 / 문자가 나타날 수 있습니다. &lt;em&gt;/\*.*\*/&lt;/em&gt; 패턴 을 문자열 &lt;em&gt;/ * first comment * / not comment / * second comment * /&lt;/em&gt; 에 적용하여 C 주석을 일치시키려는 시도 는의 탐욕으로 인해 전체 문자열과 일치하므로 실패합니다. * 안건.</target>
        </trans-unit>
        <trans-unit id="7c1c89eb87f69044ed0749a01a118ed08d6e2ec8" translate="yes" xml:space="preserve">
          <source>By default, the serialization method used is internal to PHP, and is not the same as &lt;a href=&quot;function.serialize&quot;&gt;serialize()&lt;/a&gt;. The serialization method can be set using &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;.</source>
          <target state="translated">기본적으로 사용 된 직렬화 메소드는 PHP 내부에 있으며 &lt;a href=&quot;function.serialize&quot;&gt;serialize ()&lt;/a&gt; 와 동일하지 않습니다 . serialization 방법은 &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler를&lt;/a&gt; 사용하여 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7dfd35a1f6edd6c08fafb99b66a7d899094c50fd" translate="yes" xml:space="preserve">
          <source>By default, the sorted order is alphabetical in ascending order. If the optional &lt;code&gt;sorting_order&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;SCANDIR_SORT_DESCENDING&lt;/code&gt;&lt;/strong&gt;, then the sort order is alphabetical in descending order. If it is set to &lt;strong&gt;&lt;code&gt;SCANDIR_SORT_NONE&lt;/code&gt;&lt;/strong&gt; then the result is unsorted.</source>
          <target state="translated">기본적으로 정렬 순서는 알파벳순으로 오름차순입니다. 옵션의 경우 &lt;code&gt;sorting_order&lt;/code&gt; 이 설정되어 &lt;strong&gt; &lt;code&gt;SCANDIR_SORT_DESCENDING&lt;/code&gt; &lt;/strong&gt; , 다음 정렬 순서는 내림차순 알파벳입니다. &lt;strong&gt; &lt;code&gt;SCANDIR_SORT_NONE&lt;/code&gt; &lt;/strong&gt; 으로 설정 되면 결과가 정렬되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="123d816dfad7d78e08a342e2a0afd439f947f987" translate="yes" xml:space="preserve">
          <source>By default, the unserialization method used is internal to PHP, and is not the same as &lt;a href=&quot;function.unserialize&quot;&gt;unserialize()&lt;/a&gt;. The serialization method can be set using &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt;.</source>
          <target state="translated">기본적으로 사용되는 직렬화 해제 메소드는 PHP 내부에 있으며 &lt;a href=&quot;function.unserialize&quot;&gt;unserialize ()&lt;/a&gt; 와 동일하지 않습니다 . serialization 방법은 &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler를&lt;/a&gt; 사용하여 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fbeb0b0e5ff899dd882bb10c5dbd61f5cf78d14c" translate="yes" xml:space="preserve">
          <source>By default, this value is &lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt; . &quot;/library&quot;, you can change this either in the application.ini(application.library) or call to &lt;a href=&quot;yaf-loader.setlibrarypath&quot;&gt;Yaf_Loader::setLibraryPath()&lt;/a&gt;</source>
          <target state="translated">기본적으로이 값은 &lt;a href=&quot;https://secure.php.net/manual/en/yaf.appconfig.php#configuration.yaf.directory&quot;&gt;application.directory&lt;/a&gt; 입니다. &quot;/ library&quot;, application.ini (application.library)에서 또는 &lt;a href=&quot;yaf-loader.setlibrarypath&quot;&gt;Yaf_Loader :: setLibraryPath ()를&lt;/a&gt; 호출하여 이를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e9d09812a7b4d1a752b6afb6cd5db416898af22" translate="yes" xml:space="preserve">
          <source>By default, variables are always assigned by value. That is to say, when you assign an expression to a variable, the entire value of the original expression is copied into the destination variable. This means, for instance, that after assigning one variable's value to another, changing one of those variables will have no effect on the other. For more information on this kind of assignment, see the chapter on &lt;a href=&quot;language.expressions&quot;&gt;Expressions&lt;/a&gt;.</source>
          <target state="translated">기본적으로 변수는 항상 값으로 할당됩니다. 즉, 식을 변수에 할당하면 원래 식의 전체 값이 대상 변수에 복사됩니다. 예를 들어 한 변수의 값을 다른 변수에 할당 한 후에는 변수 중 하나를 변경해도 다른 변수에는 영향을 미치지 않습니다. 이러한 종류의 할당에 대한 자세한 내용은 &lt;a href=&quot;language.expressions&quot;&gt;식&lt;/a&gt; 장을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="97159a7367ef9a7bbe42f04079cc94f3f0b86322" translate="yes" xml:space="preserve">
          <source>By default, warnings generated on a call to any SQLSRV function are treated as errors. This means that if a warning occurs on a call to a SQLSRV function, the function returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. However, warnings that correspond to SQLSTATE values 01000, 01001, 01003, and 01S02 are never treated as errors. For information about changing this behavior, see &lt;a href=&quot;function.sqlsrv-configure&quot;&gt;sqlsrv_configure()&lt;/a&gt; and the WarningsReturnAsErrors setting.</source>
          <target state="translated">기본적으로 SQLSRV 함수 호출시 생성 된 경고는 오류로 처리됩니다. 이는 SQLSRV 함수 호출시 경고가 발생하면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 리턴 함을 의미 &lt;strong&gt;합니다&lt;/strong&gt; . 그러나 SQLSTATE 값 01000, 01001, 01003 및 01S02에 해당하는 경고는 오류로 처리되지 않습니다. 이 작동 변경에 대한 정보는 &lt;a href=&quot;function.sqlsrv-configure&quot;&gt;sqlsrv_configure ()&lt;/a&gt; 및 WarningsReturnAsErrors 설정을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cca2fe8efb6e186bd40a2b4885864223bcaa295a" translate="yes" xml:space="preserve">
          <source>By default, when the bufferevent is set up to be threadsafe, the buffer event&amp;rsquo;s locks are held whenever the any user-provided callback is invoked. Setting this option makes Libevent release the buffer event&amp;rsquo;s lock when it&amp;rsquo;s invoking the callbacks.</source>
          <target state="translated">기본적으로 bufferevent가 스레드 안전으로 설정되면 사용자가 제공 한 콜백이 호출 될 때마다 버퍼 이벤트의 잠금이 유지됩니다. 이 옵션을 설정하면 콜백을 호출 할 때 Libevent가 버퍼 이벤트의 잠금을 해제합니다.</target>
        </trans-unit>
        <trans-unit id="f2e0a8f8ce40d8f751ee7d7daa87096df9c88c36" translate="yes" xml:space="preserve">
          <source>By invoking the methods provided by the NumberFormatter class, you can format numbers, currencies, and percentages according to the specified or default locale. NumberFormatter is locale-sensitive so you need to create a new NumberFormatter for each locale. NumberFormatter methods format primitive-type numbers, such as double and output the number as a locale-specific string.</source>
          <target state="translated">NumberFormatter 클래스에서 제공하는 메소드를 호출하여 지정된 또는 기본 로케일에 따라 숫자, 통화 및 백분율을 형식화 할 수 있습니다. NumberFormatter는 로케일에 민감하므로 각 로케일마다 새 NumberFormatter를 작성해야합니다. NumberFormatter 메소드는 double과 같은 기본 유형 숫자를 형식화하고 숫자를 로케일 특정 문자열로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="cdd0c7a7cfcd59853bd9e5de00c7b05ca28ae352" translate="yes" xml:space="preserve">
          <source>By ksorting patterns and replacements, we should get what we wanted.</source>
          <target state="translated">ksorting 패턴과 교체를 통해 원하는 것을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3b1c2413fa3e0180121d5801a0397dc4f8b86c4" translate="yes" xml:space="preserve">
          <source>By passing a reference as third argument, &lt;strong&gt;similar_text()&lt;/strong&gt; will calculate the similarity in percent, by dividing the result of &lt;strong&gt;similar_text()&lt;/strong&gt; by the average of the lengths of the given strings times &lt;em&gt;100&lt;/em&gt;.</source>
          <target state="translated">세 번째 인수로서 전달하여 참조 &lt;strong&gt;)를 similar_text (&lt;/strong&gt; 결과 나눈, 퍼센트로 유사도를 계산할 &lt;strong&gt;similar_text ()&lt;/strong&gt; 주어진 문자열 배의 길이의 평균 &lt;em&gt;(100)&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f4c5bd9ef8fb63dc461a8baa1333de65e2c5d6a3" translate="yes" xml:space="preserve">
          <source>By setting the &lt;code&gt;process_sections&lt;/code&gt; parameter to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, you get a multidimensional array, with the section names and settings included. The default for &lt;code&gt;process_sections&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">설정에 따라 &lt;code&gt;process_sections&lt;/code&gt; 에 매개 변수를 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 를&lt;/strong&gt; , 당신은 포함 된 섹션 이름과 설정, 다차원 배열을 얻는다. &lt;code&gt;process_sections&lt;/code&gt; 의 기본값 은 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 입니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b4588ef4c228d3c47deef3a8abad7c36006ed05e" translate="yes" xml:space="preserve">
          <source>By the way, if a stream is redirected, the VT100 feature will not be enabled:</source>
          <target state="translated">그런데 스트림이 리디렉션되면 VT100 기능이 활성화되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c6dffbde0c88d676502311483d714de59be39193" translate="yes" xml:space="preserve">
          <source>By using the &lt;strong&gt;&lt;code&gt;MYSQLI_ASSOC&lt;/code&gt;&lt;/strong&gt; constant this function will behave identically to the &lt;a href=&quot;mysqli-result.fetch-assoc&quot;&gt;mysqli_fetch_assoc()&lt;/a&gt;, while &lt;strong&gt;&lt;code&gt;MYSQLI_NUM&lt;/code&gt;&lt;/strong&gt; will behave identically to the &lt;a href=&quot;mysqli-result.fetch-row&quot;&gt;mysqli_fetch_row()&lt;/a&gt; function. The final option &lt;strong&gt;&lt;code&gt;MYSQLI_BOTH&lt;/code&gt;&lt;/strong&gt; will create a single array with the attributes of both.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;MYSQLI_ASSOC&lt;/code&gt; &lt;/strong&gt; 상수 를 사용하면 이 함수는 &lt;a href=&quot;mysqli-result.fetch-assoc&quot;&gt;mysqli_fetch_assoc ()&lt;/a&gt; 와 동일하게 동작 하지만 &lt;strong&gt; &lt;code&gt;MYSQLI_NUM&lt;/code&gt; &lt;/strong&gt; 은 &lt;a href=&quot;mysqli-result.fetch-row&quot;&gt;mysqli_fetch_row ()&lt;/a&gt; 함수 와 동일하게 동작합니다 . 마지막 옵션 &lt;strong&gt; &lt;code&gt;MYSQLI_BOTH&lt;/code&gt; &lt;/strong&gt; 는 두 속성을 모두 갖는 단일 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7a55430aa0b32e8cc27151634b18595c30329ca1" translate="yes" xml:space="preserve">
          <source>Bypass routing, use direct interface.</source>
          <target state="translated">라우팅을 우회하려면 직접 인터페이스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bd54fbc5c8f77eb130d2eae8194a1dc534e440db" translate="yes" xml:space="preserve">
          <source>Byte 0 of $str has value 240</source>
          <target state="translated">$ str의 바이트 0의 값은 240입니다.</target>
        </trans-unit>
        <trans-unit id="da11d3d90bf91771d1b63049b2c58c7ca00b1733" translate="yes" xml:space="preserve">
          <source>Byte 1 of $str has value 159</source>
          <target state="translated">$ str의 바이트 1의 값은 159입니다.</target>
        </trans-unit>
        <trans-unit id="bda09c9d53f983fb7cd80a5a69a71b7aec623e22" translate="yes" xml:space="preserve">
          <source>Byte 2 of $str has value 144</source>
          <target state="translated">$ str의 바이트 2는 값이 144입니다.</target>
        </trans-unit>
        <trans-unit id="a3214bca431fab1d4994adf74b8714baf1b73957" translate="yes" xml:space="preserve">
          <source>Byte 3 of $str has value 152</source>
          <target state="translated">$ str의 바이트 3의 값은 152입니다.</target>
        </trans-unit>
        <trans-unit id="f7b73a0fcfac4f07b981313e9814cffe00d453af" translate="yes" xml:space="preserve">
          <source>Byte position of the data start can be determined by the &lt;strong&gt;&lt;code&gt;__COMPILER_HALT_OFFSET__&lt;/code&gt;&lt;/strong&gt; constant which is defined only if there is a &lt;strong&gt;__halt_compiler()&lt;/strong&gt; presented in the file.</source>
          <target state="translated">데이터 시작의 바이트 위치 는 파일에 &lt;strong&gt;__halt_compiler ()&lt;/strong&gt; 가있는 경우에만 정의되는 &lt;strong&gt; &lt;code&gt;__COMPILER_HALT_OFFSET__&lt;/code&gt; &lt;/strong&gt; 상수에 의해 결정될 수 있습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="32096c2e0eff33d844ee6d675407ace18289357d" translate="yes" xml:space="preserve">
          <source>C</source>
          <target state="translated">C</target>
        </trans-unit>
        <trans-unit id="e26bbff46c39164d1523db69d78abdd87d6a20d8" translate="yes" xml:space="preserve">
          <source>C data type</source>
          <target state="translated">C 데이터 타입</target>
        </trans-unit>
        <trans-unit id="15ae5b0651101bb95bb711349c1d9aa89053ef3d" translate="yes" xml:space="preserve">
          <source>C=U &quot;China&quot; &amp;lt; &quot;china&quot; &amp;lt; &quot;Denmark&quot; &amp;lt; &quot;denmark&quot;</source>
          <target state="translated">C = U &quot;중국&quot;&amp;lt; &quot;중국&quot;&amp;lt; &quot;덴마크&quot;&amp;lt; &quot;덴마크&quot;</target>
        </trans-unit>
        <trans-unit id="5ec0b0fa6c797bae61453a7c41a6ceea1ef8d192" translate="yes" xml:space="preserve">
          <source>C=X or C=L &quot;china&quot; &amp;lt; &quot;China&quot; &amp;lt; &quot;denmark&quot; &amp;lt; &quot;Denmark&quot;</source>
          <target state="translated">C = X 또는 C = L &quot;중국&quot;&amp;lt; &quot;중국&quot;&amp;lt; &quot;덴마크&quot;&amp;lt; &quot;덴마크&quot;</target>
        </trans-unit>
        <trans-unit id="09acbb7d1da8aa3daff4c1ec8076713606974c64" translate="yes" xml:space="preserve">
          <source>CA</source>
          <target state="translated">CA</target>
        </trans-unit>
        <trans-unit id="3deed788c8f1989da9a741179035e844c08a5380" translate="yes" xml:space="preserve">
          <source>CARDINALITY</source>
          <target state="translated">CARDINALITY</target>
        </trans-unit>
        <trans-unit id="4f018a87205caa741d195a0b69d3d55cd5c878a3" translate="yes" xml:space="preserve">
          <source>CASE_SENSITIVE</source>
          <target state="translated">CASE_SENSITIVE</target>
        </trans-unit>
        <trans-unit id="6f241490635bc4573269cad619298161d0dc3417" translate="yes" xml:space="preserve">
          <source>CC &quot;string&quot; - match messages with &quot;string&quot; in the Cc: field</source>
          <target state="translated">CC &quot;string&quot;-참조 : 필드에서 &quot;string&quot;과 메시지를 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="473de9c20200b441d8e9ff3291cbe3ac40cf848d" translate="yes" xml:space="preserve">
          <source>CDATA node</source>
          <target state="translated">CDATA 노드</target>
        </trans-unit>
        <trans-unit id="ef51a56a228c22c4d9eedb0635e47a3b4105a503" translate="yes" xml:space="preserve">
          <source>CDF</source>
          <target state="translated">CDF</target>
        </trans-unit>
        <trans-unit id="422f720e7d72716b7017e69268406be073cfc7c1" translate="yes" xml:space="preserve">
          <source>CGI</source>
          <target state="translated">CGI</target>
        </trans-unit>
        <trans-unit id="ae864c87730cd7628c03fc5248bfe290589af6c7" translate="yes" xml:space="preserve">
          <source>COLLATION</source>
          <target state="translated">COLLATION</target>
        </trans-unit>
        <trans-unit id="62f94c337a62422091eec8af220557bc9d2a0f7d" translate="yes" xml:space="preserve">
          <source>COLUMN_NAME</source>
          <target state="translated">COLUMN_NAME</target>
        </trans-unit>
        <trans-unit id="85bf293fa7977bf9a2fceb81d5ff23d16a3d8535" translate="yes" xml:space="preserve">
          <source>COLUMN_TYPE</source>
          <target state="translated">COLUMN_TYPE</target>
        </trans-unit>
        <trans-unit id="b1a13fadf51ef7eece7dea40c4b6e6e8042822d2" translate="yes" xml:space="preserve">
          <source>COMMENT</source>
          <target state="translated">COMMENT</target>
        </trans-unit>
        <trans-unit id="c52b56dab38211c04eda3b5b35db68636802626a" translate="yes" xml:space="preserve">
          <source>COMPUTED</source>
          <target state="translated">COMPUTED</target>
        </trans-unit>
        <trans-unit id="e2a19a8833b7f0a8aff34f17de8769715bcd1497" translate="yes" xml:space="preserve">
          <source>CONNECT method(command)</source>
          <target state="translated">연결 방법 (명령)</target>
        </trans-unit>
        <trans-unit id="59809cd2f8cfc6eb5b75df42ac5f352194035f76" translate="yes" xml:space="preserve">
          <source>CREATE_PARAMS</source>
          <target state="translated">CREATE_PARAMS</target>
        </trans-unit>
        <trans-unit id="e9930779c5261c7ed2145635a1a6903e209530cc" translate="yes" xml:space="preserve">
          <source>CREDITS_ALL</source>
          <target state="translated">CREDITS_ALL</target>
        </trans-unit>
        <trans-unit id="3a4e2a592e757a94e0cd16ee926be58e79597d40" translate="yes" xml:space="preserve">
          <source>CREDITS_DOCS</source>
          <target state="translated">CREDITS_DOCS</target>
        </trans-unit>
        <trans-unit id="1386334ecc1c3a3bc278c4f28789336cc6b5c918" translate="yes" xml:space="preserve">
          <source>CREDITS_FULLPAGE</source>
          <target state="translated">CREDITS_FULLPAGE</target>
        </trans-unit>
        <trans-unit id="81f4c06c5c7a9bd5e1c29570c4f90a58b2ecf8bb" translate="yes" xml:space="preserve">
          <source>CREDITS_GENERAL</source>
          <target state="translated">CREDITS_GENERAL</target>
        </trans-unit>
        <trans-unit id="621324d2a5d85f404e4783a442a8dcb5a84935cc" translate="yes" xml:space="preserve">
          <source>CREDITS_GROUP</source>
          <target state="translated">CREDITS_GROUP</target>
        </trans-unit>
        <trans-unit id="d9dccca18efe5e92dbe43a6adb9cfb9bac53ab0a" translate="yes" xml:space="preserve">
          <source>CREDITS_MODULES</source>
          <target state="translated">CREDITS_MODULES</target>
        </trans-unit>
        <trans-unit id="74fc6685733696fb8d40efa2246d72f22d6c23b5" translate="yes" xml:space="preserve">
          <source>CREDITS_SAPI</source>
          <target state="translated">CREDITS_SAPI</target>
        </trans-unit>
        <trans-unit id="735ffe35e5c4accf5861ee1426147bc32137a32a" translate="yes" xml:space="preserve">
          <source>CSPRNG</source>
          <target state="translated">CSPRNG</target>
        </trans-unit>
        <trans-unit id="3281188351b89c8e2db28d6da7af4992d415de90" translate="yes" xml:space="preserve">
          <source>CSV</source>
          <target state="translated">CSV</target>
        </trans-unit>
        <trans-unit id="f059787bf5f61c5d938038dd4915a554f79a962e" translate="yes" xml:space="preserve">
          <source>CURLFile &amp;rarr;</source>
          <target state="translated">CURL 파일 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ba333b17e24817f8dc282c25fd53e4c848498108" translate="yes" xml:space="preserve">
          <source>CURLFile (class)</source>
          <target state="translated">CURLFile (클래스)</target>
        </trans-unit>
        <trans-unit id="98a27a13bcde4e03d98cc9c221637f3b27c2ead1" translate="yes" xml:space="preserve">
          <source>CURLFile is not serializable.</source>
          <target state="translated">CURLFile은 직렬화 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="45f8b70b47294599f142975f164f5d77fee0e235" translate="yes" xml:space="preserve">
          <source>CURLFile::__construct</source>
          <target state="translated">CURLFile::__construct</target>
        </trans-unit>
        <trans-unit id="7648519a3583c3aaeb8d53e8c4600831cad30760" translate="yes" xml:space="preserve">
          <source>CURLFile::__construct &amp;rarr;</source>
          <target state="translated">CURLFile :: __ construct &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a2dfa7ccfde471c4b670e833f4ef676008cf24e1" translate="yes" xml:space="preserve">
          <source>CURLFile::__construct -- curl_file_create &amp;mdash; Create a CURLFile object</source>
          <target state="translated">CURLFile :: __ construct-curl_file_create &amp;mdash; CURLFile 객체 생성</target>
        </trans-unit>
        <trans-unit id="bc673b31f02d1c11e6ba8e60b0c24ff90f743084" translate="yes" xml:space="preserve">
          <source>CURLFile::__wakeup</source>
          <target state="translated">CURLFile::__wakeup</target>
        </trans-unit>
        <trans-unit id="24f5902f9be51285ca851d02216786d6af7e9c66" translate="yes" xml:space="preserve">
          <source>CURLFile::__wakeup &amp;mdash; Unserialization handler</source>
          <target state="translated">CURLFile :: __ wakeup &amp;mdash; 직렬화 해제 핸들러</target>
        </trans-unit>
        <trans-unit id="ca6363cbeb575d1b5d1a9601e5a4ab67de496ca2" translate="yes" xml:space="preserve">
          <source>CURLFile::__wakeup &amp;rarr;</source>
          <target state="translated">CURLFile :: __ wakeup &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5834c4975c8b77a6734fba0d91363173b616deeb" translate="yes" xml:space="preserve">
          <source>CURLFile::getFilename</source>
          <target state="translated">CURLFile::getFilename</target>
        </trans-unit>
        <trans-unit id="1c012bec63cb31257fe51fb1341c6be1ac888e5a" translate="yes" xml:space="preserve">
          <source>CURLFile::getFilename &amp;mdash; Get file name</source>
          <target state="translated">CURLFile :: getFilename &amp;mdash; 파일 이름을 얻는다</target>
        </trans-unit>
        <trans-unit id="1c4e385a2a0f9531c81c192c522aa8bf83d98e6e" translate="yes" xml:space="preserve">
          <source>CURLFile::getFilename &amp;rarr;</source>
          <target state="translated">CURLFile :: getFilename &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="2919558990f9c00c38c7f47a298ea632e3a649ff" translate="yes" xml:space="preserve">
          <source>CURLFile::getMimeType</source>
          <target state="translated">CURLFile::getMimeType</target>
        </trans-unit>
        <trans-unit id="28b88c2147a1e6369077102aac847d8753bc51b4" translate="yes" xml:space="preserve">
          <source>CURLFile::getMimeType &amp;mdash; Get MIME type</source>
          <target state="translated">CURLFile :: getMimeType &amp;mdash; MIME 타입을 얻는다</target>
        </trans-unit>
        <trans-unit id="d0dbaf5ceda39320684079b630dcbde4f9bf2ec9" translate="yes" xml:space="preserve">
          <source>CURLFile::getMimeType &amp;rarr;</source>
          <target state="translated">CURLFile :: getMimeType &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="350a81f16168aa37a7d855462e10b9995b5ec9bf" translate="yes" xml:space="preserve">
          <source>CURLFile::getPostFilename</source>
          <target state="translated">CURLFile::getPostFilename</target>
        </trans-unit>
        <trans-unit id="ba14cf21da1e09d01461decd08fb10a1ac885f33" translate="yes" xml:space="preserve">
          <source>CURLFile::getPostFilename &amp;mdash; Get file name for POST</source>
          <target state="translated">CURLFile :: getPostFilename &amp;mdash; POST의 파일 이름을 얻는다</target>
        </trans-unit>
        <trans-unit id="2d7570efb5ad07af510e08082adfd00cbe5d3d36" translate="yes" xml:space="preserve">
          <source>CURLFile::getPostFilename &amp;rarr;</source>
          <target state="translated">CURLFile :: getPostFilename &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5518317e24c89dca581026ede6d146c2acc26e0a" translate="yes" xml:space="preserve">
          <source>CURLFile::setMimeType</source>
          <target state="translated">CURLFile::setMimeType</target>
        </trans-unit>
        <trans-unit id="fdccd06d60447c7cad016475ed639f9984f667ff" translate="yes" xml:space="preserve">
          <source>CURLFile::setMimeType &amp;mdash; Set MIME type</source>
          <target state="translated">CURLFile :: setMimeType &amp;mdash; MIME 유형 설정</target>
        </trans-unit>
        <trans-unit id="a1db1938986d6d7d26bda0e618de75eee4787de4" translate="yes" xml:space="preserve">
          <source>CURLFile::setMimeType &amp;rarr;</source>
          <target state="translated">CURLFile :: setMimeType &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="be27b5ccf337148d32ff14ae81560e54868a7bc5" translate="yes" xml:space="preserve">
          <source>CURLFile::setPostFilename</source>
          <target state="translated">CURLFile::setPostFilename</target>
        </trans-unit>
        <trans-unit id="1ef9fa380ccb2db402986abba5705ea8dc78d460" translate="yes" xml:space="preserve">
          <source>CURLFile::setPostFilename &amp;mdash; Set file name for POST</source>
          <target state="translated">CURLFile :: setPostFilename &amp;mdash; POST의 파일 이름을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c9eb35b9da1fdde489c80e719d095dd753024487" translate="yes" xml:space="preserve">
          <source>CURLFile::setPostFilename &amp;rarr;</source>
          <target state="translated">CURLFile :: setPostFilename &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="024c3a9dd02f230fb337ab36b557c3ab0df9b816" translate="yes" xml:space="preserve">
          <source>Cable/DSL</source>
          <target state="translated">Cable/DSL</target>
        </trans-unit>
        <trans-unit id="094fade00937a6db88ef6a3d1262541c78a4a7a7" translate="yes" xml:space="preserve">
          <source>Cache a variable in the data store.</source>
          <target state="translated">데이터 저장소에 변수를 캐시하십시오.</target>
        </trans-unit>
        <trans-unit id="6e81ac9735274dc624a6be14ccdb734d19d5896f" translate="yes" xml:space="preserve">
          <source>Cache all read data.</source>
          <target state="translated">읽은 데이터를 모두 캐시하십시오.</target>
        </trans-unit>
        <trans-unit id="756a4331e0795831ea8db0b1acbb3501fed8f24b" translate="yes" xml:space="preserve">
          <source>Caches a variable in the data store, only if it's not already stored.</source>
          <target state="translated">변수가 아직 저장되지 않은 경우에만 데이터 저장소에 변수를 캐시합니다.</target>
        </trans-unit>
        <trans-unit id="ade4cff91053886046f1e38f076854af746d6d12" translate="yes" xml:space="preserve">
          <source>CachingIterator &amp;rarr;</source>
          <target state="translated">캐싱 반복기 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="0c450dcc84dc1899daebe92289b4b8ecea25e863" translate="yes" xml:space="preserve">
          <source>CachingIterator (class)</source>
          <target state="translated">CachingIterator (클래스)</target>
        </trans-unit>
        <trans-unit id="4c03a28afa389d23f894a55c96c1eac67951fda4" translate="yes" xml:space="preserve">
          <source>CachingIterator::__construct</source>
          <target state="translated">CachingIterator::__construct</target>
        </trans-unit>
        <trans-unit id="54b895c6da33cbd0eab4e6e581949877ae5ecfe5" translate="yes" xml:space="preserve">
          <source>CachingIterator::__construct &amp;mdash; Construct a new CachingIterator object for the iterator</source>
          <target state="translated">CachingIterator :: __ construct &amp;mdash; 이터레이터를위한 새로운 CachingIterator 객체를 생성</target>
        </trans-unit>
        <trans-unit id="46606028e14313549f1919dfa48806232a1e56a4" translate="yes" xml:space="preserve">
          <source>CachingIterator::__construct &amp;rarr;</source>
          <target state="translated">CachingIterator :: __ construct &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="7482c273358c3f0b74a24ed11af28fe264b8cbd2" translate="yes" xml:space="preserve">
          <source>CachingIterator::__toString</source>
          <target state="translated">CachingIterator::__toString</target>
        </trans-unit>
        <trans-unit id="0ed25c23c89913b8f228d6c34d2c8a3882dc7aa9" translate="yes" xml:space="preserve">
          <source>CachingIterator::__toString &amp;mdash; Return the string representation of the current element</source>
          <target state="translated">CachingIterator :: __ toString &amp;mdash; 현재 요소의 문자열 표현을 반환</target>
        </trans-unit>
        <trans-unit id="83b7c57c14a396f8237dc8f018872026778ef348" translate="yes" xml:space="preserve">
          <source>CachingIterator::__toString &amp;rarr;</source>
          <target state="translated">CachingIterator :: __ toString &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a72bcfa6550e2d5f3e60710c74500b2447f8d734" translate="yes" xml:space="preserve">
          <source>CachingIterator::count</source>
          <target state="translated">CachingIterator::count</target>
        </trans-unit>
        <trans-unit id="a25625120ca421cc5e64fbbb0e422b5298449771" translate="yes" xml:space="preserve">
          <source>CachingIterator::count &amp;mdash; The number of elements in the iterator</source>
          <target state="translated">CachingIterator :: count &amp;mdash; 이터레이터의 요소 수</target>
        </trans-unit>
        <trans-unit id="424cca5987f69a31b0753c203cbb35bc47bc6ce3" translate="yes" xml:space="preserve">
          <source>CachingIterator::count &amp;rarr;</source>
          <target state="translated">CachingIterator :: count &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c04f8b8b53de277cee638a8ed4f034c584a124b9" translate="yes" xml:space="preserve">
          <source>CachingIterator::current</source>
          <target state="translated">CachingIterator::current</target>
        </trans-unit>
        <trans-unit id="8593b286f7c43376f34a8869b3febd3beee5ed82" translate="yes" xml:space="preserve">
          <source>CachingIterator::current &amp;mdash; Return the current element</source>
          <target state="translated">CachingIterator :: current &amp;mdash; 현재 요소를 반환</target>
        </trans-unit>
        <trans-unit id="6d0af1c7e01de2eb9afe887ed3e36f6fb166ee54" translate="yes" xml:space="preserve">
          <source>CachingIterator::current &amp;rarr;</source>
          <target state="translated">CachingIterator :: 현재 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="9de255da15aa10118599464659996f2304ce899b" translate="yes" xml:space="preserve">
          <source>CachingIterator::getCache</source>
          <target state="translated">CachingIterator::getCache</target>
        </trans-unit>
        <trans-unit id="ca6b3b35a52fa1c88d4942a426a05f1dbf77479b" translate="yes" xml:space="preserve">
          <source>CachingIterator::getCache &amp;mdash; Retrieve the contents of the cache</source>
          <target state="translated">CachingIterator :: getCache &amp;mdash; 캐시의 내용을 검색</target>
        </trans-unit>
        <trans-unit id="a80e5c61897ca7885315591591591b8946cb0eb8" translate="yes" xml:space="preserve">
          <source>CachingIterator::getCache &amp;rarr;</source>
          <target state="translated">CachingIterator :: getCache &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="3f099c987a5ae944dc561b873e5afdcfd8da3235" translate="yes" xml:space="preserve">
          <source>CachingIterator::getFlags</source>
          <target state="translated">CachingIterator::getFlags</target>
        </trans-unit>
        <trans-unit id="cdc40414f58ed6cab7c9e24539fccb92f48a0b5c" translate="yes" xml:space="preserve">
          <source>CachingIterator::getFlags &amp;mdash; Get flags used</source>
          <target state="translated">CachingIterator :: getFlags &amp;mdash; 사용 된 플래그를 얻는다</target>
        </trans-unit>
        <trans-unit id="bc0fe41f8107a26a6e4713d6e42228bdc7714be0" translate="yes" xml:space="preserve">
          <source>CachingIterator::getFlags &amp;rarr;</source>
          <target state="translated">CachingIterator :: getFlags &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="0ca46144947eb32387d7b8ab9bd6839b5ce1a2ae" translate="yes" xml:space="preserve">
          <source>CachingIterator::getInnerIterator</source>
          <target state="translated">CachingIterator::getInnerIterator</target>
        </trans-unit>
        <trans-unit id="db7ee3f9e8cd244f8e7adbe4b4ae8957a05873ec" translate="yes" xml:space="preserve">
          <source>CachingIterator::getInnerIterator &amp;mdash; Returns the inner iterator</source>
          <target state="translated">CachingIterator :: getInnerIterator &amp;mdash; 내부 이터레이터를 반환</target>
        </trans-unit>
        <trans-unit id="b63a3c716527ad1f625d19921d79d4f981c30931" translate="yes" xml:space="preserve">
          <source>CachingIterator::getInnerIterator &amp;rarr;</source>
          <target state="translated">CachingIterator :: getInnerIterator &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e4b3c0711367162e599449cecc002c653d69d9ee" translate="yes" xml:space="preserve">
          <source>CachingIterator::hasNext</source>
          <target state="translated">CachingIterator::hasNext</target>
        </trans-unit>
        <trans-unit id="9146f4c72051e8e3834d9bd667317844888b6670" translate="yes" xml:space="preserve">
          <source>CachingIterator::hasNext &amp;mdash; Check whether the inner iterator has a valid next element</source>
          <target state="translated">CachingIterator :: hasNext &amp;mdash; 내부 반복자에 유효한 다음 요소가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="348097748ff3cb7df74b30bc4b8e0ed22e959493" translate="yes" xml:space="preserve">
          <source>CachingIterator::hasNext &amp;rarr;</source>
          <target state="translated">CachingIterator :: hasNext &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="beae405e63804d62ddc6a59cf41bbc71bdbf3ab8" translate="yes" xml:space="preserve">
          <source>CachingIterator::key</source>
          <target state="translated">CachingIterator::key</target>
        </trans-unit>
        <trans-unit id="18e04c9e028770a1bf156a1ad8fe2df7d55c079c" translate="yes" xml:space="preserve">
          <source>CachingIterator::key &amp;mdash; Return the key for the current element</source>
          <target state="translated">CachingIterator :: key &amp;mdash; 현재 요소의 키를 반환</target>
        </trans-unit>
        <trans-unit id="11a88afac7c27656013b0790e676cb3c5fd58b88" translate="yes" xml:space="preserve">
          <source>CachingIterator::key &amp;rarr;</source>
          <target state="translated">CachingIterator :: key &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="8aa20aeab4cf0c7c36fb6e2e1ee4c1288022fb03" translate="yes" xml:space="preserve">
          <source>CachingIterator::next</source>
          <target state="translated">CachingIterator::next</target>
        </trans-unit>
        <trans-unit id="3ec6c78b6877d5c6d6069f4fcff8dece1bfee4d6" translate="yes" xml:space="preserve">
          <source>CachingIterator::next &amp;mdash; Move the iterator forward</source>
          <target state="translated">CachingIterator :: next &amp;mdash; 반복자를 앞으로 이동</target>
        </trans-unit>
        <trans-unit id="dd4a7d2fa0688e7639e58dddb7094e7f693b1bd1" translate="yes" xml:space="preserve">
          <source>CachingIterator::next &amp;rarr;</source>
          <target state="translated">CachingIterator :: 다음 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="ac72926db1ab75eee508beea0574f51cc4049787" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetExists</source>
          <target state="translated">CachingIterator::offsetExists</target>
        </trans-unit>
        <trans-unit id="28ae4bc65bb94f03100c0eb19aaeaceaca6d534f" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetExists &amp;mdash; The offsetExists purpose</source>
          <target state="translated">CachingIterator :: offsetExists &amp;mdash; offsetExists 목적</target>
        </trans-unit>
        <trans-unit id="202673d2b18c6b3d160c85622b1d9b652d82f12c" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetExists &amp;rarr;</source>
          <target state="translated">CachingIterator :: offsetExists &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="8a9166ceadfc350ef1d9910bc204decd92ca59ba" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetGet</source>
          <target state="translated">CachingIterator::offsetGet</target>
        </trans-unit>
        <trans-unit id="bbbc1bac237df6ad02acf6d768bce7a59d0cd0b0" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetGet &amp;mdash; The offsetGet purpose</source>
          <target state="translated">CachingIterator :: offsetGet &amp;mdash; offsetGet 목적</target>
        </trans-unit>
        <trans-unit id="9aeb1ce3fdc5bf8c3beef468c4727b22cfbecfb9" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetGet &amp;rarr;</source>
          <target state="translated">CachingIterator :: offsetGet &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a1a8ff282adf4520ee604a4cef79cbeeb63cadea" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetSet</source>
          <target state="translated">CachingIterator::offsetSet</target>
        </trans-unit>
        <trans-unit id="cb418b4c230c251a2c41a393a7856c0311a792d1" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetSet &amp;mdash; The offsetSet purpose</source>
          <target state="translated">CachingIterator :: offsetSet &amp;mdash; offsetSet 목적</target>
        </trans-unit>
        <trans-unit id="1d7d37075e389ffbf810a339874e63165ee7dc21" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetSet &amp;rarr;</source>
          <target state="translated">CachingIterator :: offsetSet &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="6a18219fb5ab967834c2c936d17d24c0ea26e2c6" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetUnset</source>
          <target state="translated">CachingIterator::offsetUnset</target>
        </trans-unit>
        <trans-unit id="ecee3a60c9fddcdcd46b191e82a947cce8840f7d" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetUnset &amp;mdash; The offsetUnset purpose</source>
          <target state="translated">CachingIterator :: offsetUnset &amp;mdash; offsetUnset 목적</target>
        </trans-unit>
        <trans-unit id="4da9d939630f8cda503738ecc71c5cca8d5f0eba" translate="yes" xml:space="preserve">
          <source>CachingIterator::offsetUnset &amp;rarr;</source>
          <target state="translated">CachingIterator :: offsetUnset &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="c2bf6117007a07cf1f8196af8d5fc2ea6bd3b6d7" translate="yes" xml:space="preserve">
          <source>CachingIterator::rewind</source>
          <target state="translated">CachingIterator::rewind</target>
        </trans-unit>
        <trans-unit id="b13a1549c8371550d73dd43a53c47936d1faf576" translate="yes" xml:space="preserve">
          <source>CachingIterator::rewind &amp;mdash; Rewind the iterator</source>
          <target state="translated">CachingIterator :: rewind &amp;mdash; 반복자를 되감습니다.</target>
        </trans-unit>
        <trans-unit id="041603b7968c012dd6729b6521fcef164984efa8" translate="yes" xml:space="preserve">
          <source>CachingIterator::rewind &amp;rarr;</source>
          <target state="translated">CachingIterator :: 되감기 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="2741074e370ee687d88cc2f84543ff82198104d4" translate="yes" xml:space="preserve">
          <source>CachingIterator::setFlags</source>
          <target state="translated">CachingIterator::setFlags</target>
        </trans-unit>
        <trans-unit id="a5bd8823b43992ff719e677caad57c07382ca6ae" translate="yes" xml:space="preserve">
          <source>CachingIterator::setFlags &amp;mdash; The setFlags purpose</source>
          <target state="translated">CachingIterator :: setFlags &amp;mdash; setFlags 목적</target>
        </trans-unit>
        <trans-unit id="d96e6f59acf937afad2a364a98b6102eacf81a37" translate="yes" xml:space="preserve">
          <source>CachingIterator::setFlags &amp;rarr;</source>
          <target state="translated">CachingIterator :: setFlags &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="5eb3606d4f1d77a7228181bddab51ca07bb5dcbc" translate="yes" xml:space="preserve">
          <source>CachingIterator::valid</source>
          <target state="translated">CachingIterator::valid</target>
        </trans-unit>
        <trans-unit id="b49a1af3d785721d1ae98bd022812f9a1676e6a0" translate="yes" xml:space="preserve">
          <source>CachingIterator::valid &amp;mdash; Check whether the current element is valid</source>
          <target state="translated">CachingIterator :: valid &amp;mdash; 현재 요소가 유효한지 확인</target>
        </trans-unit>
        <trans-unit id="63b8be066133330e7b39d4f4b78be68cc722f1c0" translate="yes" xml:space="preserve">
          <source>CachingIterator::valid &amp;rarr;</source>
          <target state="translated">CachingIterator :: 유효한 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="2a96aae34ffee9c858e43e9820bbbdb9242a459b" translate="yes" xml:space="preserve">
          <source>Calculate (&lt;code&gt;base&lt;/code&gt; raised into power &lt;code&gt;exp&lt;/code&gt;) modulo &lt;code&gt;mod&lt;/code&gt;. If &lt;code&gt;exp&lt;/code&gt; is negative, result is undefined.</source>
          <target state="translated">계산 ( &lt;code&gt;base&lt;/code&gt; 전원으로 제기 &lt;code&gt;exp&lt;/code&gt; ) 모듈 &lt;code&gt;mod&lt;/code&gt; . 경우 &lt;code&gt;exp&lt;/code&gt; 음수, 결과는 정의되지 않는다.</target>
        </trans-unit>
        <trans-unit id="0121f09ee5aa3588fdce09c70caac46d18a71d52" translate="yes" xml:space="preserve">
          <source>Calculate greatest common divisor of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. The result is always positive even if either of, or both, input operands are negative.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 와 &lt;code&gt;b&lt;/code&gt; 의 최대 공약수를 계산합니다 . 입력 피연산자 중 하나 또는 둘 다 음수 인 경우에도 결과는 항상 양수입니다.</target>
        </trans-unit>
        <trans-unit id="d65eeff0d7d17d82607ded2ffb4137f5a209f766" translate="yes" xml:space="preserve">
          <source>Calculate the square root of a number, with remainder.</source>
          <target state="translated">나머지를 사용하여 숫자의 제곱근을 계산하십시오.</target>
        </trans-unit>
        <trans-unit id="f38c48d5b30cf18c75bd6fc53a9541b99b7ba6a1" translate="yes" xml:space="preserve">
          <source>Calculated length of the hypotenuse</source>
          <target state="translated">빗변의 계산 된 길이</target>
        </trans-unit>
        <trans-unit id="c2ee997a35893717f636eb096178d5408603704b" translate="yes" xml:space="preserve">
          <source>Calculates &lt;code&gt;n&lt;/code&gt; modulo &lt;code&gt;d&lt;/code&gt;. The result is always non-negative, the sign of &lt;code&gt;d&lt;/code&gt; is ignored.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 모듈로 &lt;code&gt;d&lt;/code&gt; 를 계산합니다 . 결과는 항상 음수 가 아니고 &lt;code&gt;d&lt;/code&gt; 의 부호 는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="8c88d1bdecaef4e258f2d327403282db2616adc0" translate="yes" xml:space="preserve">
          <source>Calculates bitwise AND of two GMP numbers.</source>
          <target state="translated">두 GMP 숫자의 비트 AND를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="90b63546ff87a6bc6e2dd01a4ca8a89658e7d1d3" translate="yes" xml:space="preserve">
          <source>Calculates bitwise exclusive OR (XOR) of two GMP numbers.</source>
          <target state="translated">두 GMP 숫자의 비트 배타적 OR (XOR)을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="19c679c69deef614118add607774bf8b333da5f4" translate="yes" xml:space="preserve">
          <source>Calculates bitwise inclusive OR of two GMP numbers.</source>
          <target state="translated">두 GMP 숫자의 비트 단위 OR을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="19c507230dd9728f567273a9bcdb7c28aa68120b" translate="yes" xml:space="preserve">
          <source>Calculates factorial (&lt;em&gt;a!&lt;/em&gt;) of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">의 계승 ( &lt;em&gt;a!&lt;/em&gt; )을 계산 &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="224bd35cbfa7883264c4dbd1f570d8d36b0a5205" translate="yes" xml:space="preserve">
          <source>Calculates g, s, and t, such that &lt;em&gt;a*s + b*t = g = gcd(a,b)&lt;/em&gt;, where gcd is the greatest common divisor. Returns an array with respective elements g, s and t.</source>
          <target state="translated">&lt;em&gt;a * s + b * t = g = gcd (a, b)&lt;/em&gt; 가되도록 g, s 및 t를 계산합니다. 여기서 gcd는 최대 공약수입니다. 각 요소 g, s 및 t를 가진 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="65aee4c203d130d849e3a92c9444e4cb21feb0bd" translate="yes" xml:space="preserve">
          <source>Calculates remainder of the integer division of &lt;code&gt;n&lt;/code&gt; by &lt;code&gt;d&lt;/code&gt;. The remainder has the sign of the &lt;code&gt;n&lt;/code&gt; argument, if not zero.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 을 &lt;code&gt;d&lt;/code&gt; 로 나눈 정수의 나머지를 계산 합니다. 나머지는 0이 아닌 경우 &lt;code&gt;n&lt;/code&gt; 인수 의 부호를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="2070431392608e59984c516f311538d1000f345f" translate="yes" xml:space="preserve">
          <source>Calculates square root of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">의 제곱근을 계산 &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="efb7fa366cb845fb81c79935f0bb754f606944bb" translate="yes" xml:space="preserve">
          <source>Calculates the MD5 hash of &lt;code&gt;str&lt;/code&gt; using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo; RSA Data Security, Inc. MD5 Message-Digest Algorithm&lt;/a&gt;, and returns that hash.</source>
          <target state="translated">&lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo;RSA Data Security, Inc. MD5 Message-Digest Algorithm을&lt;/a&gt; 사용하여 &lt;code&gt;str&lt;/code&gt; 의 MD5 해시를 계산하고 해당 해시를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bcaad6c8b6f422457f2f13f26e0bc3796bd81d9f" translate="yes" xml:space="preserve">
          <source>Calculates the MD5 hash of the file specified by the &lt;code&gt;filename&lt;/code&gt; parameter using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo; RSA Data Security, Inc. MD5 Message-Digest Algorithm&lt;/a&gt;, and returns that hash. The hash is a 32-character hexadecimal number.</source>
          <target state="translated">&lt;a href=&quot;http://www.faqs.org/rfcs/rfc1321&quot;&gt;&amp;raquo;RSA Data Security, Inc. MD5 Message-Digest Algorithm을&lt;/a&gt; 사용하여 &lt;code&gt;filename&lt;/code&gt; 매개 변수로 지정된 파일의 MD5 해시를 계산하고 해당 해시를 리턴합니다. 해시는 32 자리 16 진수입니다.</target>
        </trans-unit>
        <trans-unit id="3fad9e60170ec155ad8b1aad267bd014ed118742" translate="yes" xml:space="preserve">
          <source>Calculates the group access list for the user specified in name.</source>
          <target state="translated">name에 지정된 사용자의 그룹 액세스 목록을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="1b4e6e830f430c608eae7cb8ac2f1ccc0fd8df8a" translate="yes" xml:space="preserve">
          <source>Calculates the metaphone key of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 의 메타 폰 키를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="dbe4722499e48135a44a6bb73c5e213c129dae88" translate="yes" xml:space="preserve">
          <source>Calculates the sha1 hash of &lt;code&gt;str&lt;/code&gt; using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo; US Secure Hash Algorithm 1&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo;US Secure Hash Algorithm 1을&lt;/a&gt; 사용하여 &lt;code&gt;str&lt;/code&gt; 의 sha1 해시를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="59f511b31b012d361a57546110bb8d3df1c1bb67" translate="yes" xml:space="preserve">
          <source>Calculates the sha1 hash of the file specified by &lt;code&gt;filename&lt;/code&gt; using the &lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo; US Secure Hash Algorithm 1&lt;/a&gt;, and returns that hash. The hash is a 40-character hexadecimal number.</source>
          <target state="translated">&lt;a href=&quot;http://www.faqs.org/rfcs/rfc3174&quot;&gt;&amp;raquo;US Secure Hash Algorithm 1을&lt;/a&gt; 사용하여 &lt;code&gt;filename&lt;/code&gt; 으로 지정된 파일의 sha1 해시를 계산하고 해당 해시를 반환합니다. 해시는 40 자리 16 진수입니다.</target>
        </trans-unit>
        <trans-unit id="8f9aa200ef1d155967ff69bff6235ddcbe24268e" translate="yes" xml:space="preserve">
          <source>Calculates the size of the buffer that should be allocated for receiving the ancillary data.</source>
          <target state="translated">보조 데이터를 수신하기 위해 할당해야하는 버퍼 크기를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="10ca3884756801a74e779f35cfe95e75fa1bbc93" translate="yes" xml:space="preserve">
          <source>Calculates the soundex key of &lt;code&gt;str&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 의 soundex 키를 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="570eba77e2e18176ceeb006b2466cc9ed17fbb38" translate="yes" xml:space="preserve">
          <source>Calendar field encompassing the information in &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_HOUR_OF_DAY&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_MINUTE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_SECOND&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_MILLISECOND&lt;/code&gt;&lt;/strong&gt;. Range is from the &lt;em&gt;0&lt;/em&gt; to &lt;em&gt;24 * 3600 * 1000 - 1&lt;/em&gt;. It is not the amount of milliseconds ellapsed in the day since on DST transitions it will have discontinuities analog to those of the wall time.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_HOUR_OF_DAY&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_MINUTE&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_SECOND&lt;/code&gt; &lt;/strong&gt; 및 &lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_MILLISECOND&lt;/code&gt; &lt;/strong&gt; 의 정보를 포함하는 달력 필드 입니다. 범위는 &lt;em&gt;0&lt;/em&gt; ~ &lt;em&gt;24 * 3600 * 1000-1&lt;/em&gt; 입니다. DST 전환시 벽 시간과 유사한 불연속성을 갖기 때문에 하루에 밀리 초가 경과하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0d5ff4f9281120abd5ddb3a728f48d047e1f7453" translate="yes" xml:space="preserve">
          <source>Calendar field for a modified Julian day number. It is different from a conventional Julian day number in that its transitions occur at local zone midnight rather than at noon UTC. It uniquely identifies a date.</source>
          <target state="translated">수정 된 율리우스 일 번호의 달력 필드 UTC의 정오가 아닌 자정에 전환이 발생한다는 점에서 일반적인 Julian 일 수와 다릅니다. 날짜를 고유하게 식별합니다.</target>
        </trans-unit>
        <trans-unit id="06000850680e9205c5a4671bddf395a32950ed56" translate="yes" xml:space="preserve">
          <source>Calendar field for a year number representation that is continuous across eras. For the Gregorian calendar, the value of this field matches that of &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_YEAR&lt;/code&gt;&lt;/strong&gt; for AD years; a BC year &lt;em&gt;y&lt;/em&gt; is represented by &lt;em&gt;-y + 1&lt;/em&gt;.</source>
          <target state="translated">여러 해에 걸쳐 연속적인 연도 숫자 표시를위한 달력 필드. 그레고리력의 경우이 필드의 값은 AD 연도 의 &lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_YEAR&lt;/code&gt; &lt;/strong&gt; 의 값과 일치합니다 . BC 연도 &lt;em&gt;y&lt;/em&gt; 는 &lt;em&gt;-y + 1로&lt;/em&gt; 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="44732e1997214a3741d6b6d7fff47d4b0212cde4" translate="yes" xml:space="preserve">
          <source>Calendar field for the day of the month. The same as &lt;strong&gt;&lt;code&gt;IntlCalendar::FIELD_DAY_OF_MONTH&lt;/code&gt;&lt;/strong&gt;, which has a clearer name.</source>
          <target state="translated">해당 월의 일정 필드 이름이 더 명확한 &lt;strong&gt; &lt;code&gt;IntlCalendar::FIELD_DAY_OF_MONTH&lt;/code&gt; &lt;/strong&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="95d6b28417024538d8958cce7e3a875ade822a19" translate="yes" xml:space="preserve">
          <source>Calendar field for the day of the week. Its values start with &lt;em&gt;1&lt;/em&gt; (Sunday, see &lt;a href=&quot;class.intlcalendar#intlcalendar.constants.dow-sunday&quot;&gt;&lt;strong&gt;&lt;code&gt;IntlCalendar::DOW_SUNDAY&lt;/code&gt;&lt;/strong&gt;&lt;/a&gt; and subsequent constants) and the last valid value is 7 (Saturday).</source>
          <target state="translated">요일의 달력 필드 값은 &lt;em&gt;1&lt;/em&gt; (일요일, &lt;a href=&quot;class.intlcalendar#intlcalendar.constants.dow-sunday&quot;&gt;&lt;strong&gt; &lt;code&gt;IntlCalendar::DOW_SUNDAY&lt;/code&gt; &lt;/strong&gt;&lt;/a&gt; 및 후속 상수 참조)로 시작하며 마지막 유효 값은 7 (토요일)입니다.</target>
        </trans-unit>
        <trans-unit id="d7504097f3ae2ffad453e10b354a32fc3da790b5" translate="yes" xml:space="preserve">
          <source>Calendar field for the day of the year. For the Gregorian calendar, starts with &lt;strong&gt;&lt;code&gt;1&lt;/code&gt;&lt;/strong&gt; and ends with &lt;strong&gt;&lt;code&gt;365&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;366&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">일의 달력 필드. 그레고리력의 경우 &lt;strong&gt; &lt;code&gt;1&lt;/code&gt; 로&lt;/strong&gt; 시작 하고 &lt;strong&gt; &lt;code&gt;365&lt;/code&gt; &lt;/strong&gt; 또는 &lt;strong&gt; &lt;code&gt;366&lt;/code&gt; 으로&lt;/strong&gt; 끝납니다 .</target>
        </trans-unit>
        <trans-unit id="44295e750e18c99c2dc9a2dc198acdfb114d4a0f" translate="yes" xml:space="preserve">
          <source>Calendar field for the daylight saving time offset of the calendarʼs timezone, in milliseconds, if active for calendarʼs time.</source>
          <target state="translated">캘린더 시간 동안 활성화 된 경우 캘린더 시간대의 일광 절약 시간제 오프셋에 대한 캘린더 필드 (밀리 초)입니다.</target>
        </trans-unit>
        <trans-unit id="a184ce5d6e36c07bf278481f0b46b49d3089db5f" translate="yes" xml:space="preserve">
          <source>Calendar field for the full (24h) hour of the day. Valid values are &lt;em&gt;0&lt;/em&gt; to &lt;em&gt;23&lt;/em&gt;.</source>
          <target state="translated">하루 중 전체 (24 시간)의 일정 필드 유효한 값은 &lt;em&gt;0&lt;/em&gt; ~ &lt;em&gt;23&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3ee745e06b093410965bce3e79f049a223d2c49d" translate="yes" xml:space="preserve">
          <source>Calendar field for the hour, without specifying whether itʼs in the morning or in the afternoon. Valid values are &lt;em&gt;0&lt;/em&gt; to &lt;em&gt;11&lt;/em&gt;.</source>
          <target state="translated">오전 또는 오후 중 어느 시간을 지정하지 않고 시간에 대한 일정 필드입니다. 유효한 값은 &lt;em&gt;0&lt;/em&gt; ~ &lt;em&gt;11&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8f5bc689756f035161dd7fdd75a72978a00a68a2" translate="yes" xml:space="preserve">
          <source>Calendar field for the localized day of the week. This is a value betwen &lt;em&gt;1&lt;/em&gt; and &lt;em&gt;7&lt;/em&gt;, &lt;em&gt;1&lt;/em&gt; being used for the day of the week that matches the value returned by &lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;IntlCalendar::getFirstDayOfWeek()&lt;/a&gt;.</source>
          <target state="translated">현지화 된 요일의 달력 필드입니다. 이것은 타협의 값입니다 &lt;em&gt;(1)&lt;/em&gt; 과 &lt;em&gt;(7)&lt;/em&gt; , &lt;em&gt;(1)&lt;/em&gt; 에 의해 반환되는 값과 일치하는 요일에 사용되는 &lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;IntlCalendar을 :: getFirstDayOfWeek ()로 ()&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d87ed1cc3ca4d66bd317fdc9e8ae2a56c533de0" translate="yes" xml:space="preserve">
          <source>Calendar field for the minutes component of the time.</source>
          <target state="translated">시간의 분 구성 요소에 대한 일정 관리 필드입니다.</target>
        </trans-unit>
        <trans-unit id="7c3a43a7df1bb0ad9eca3c40657b4435e79d743e" translate="yes" xml:space="preserve">
          <source>Calendar field for the month. The month sequence is zero-based, so Janurary (here used to signify the first month of the calendar; this may be called another name, such as Muharram in the Islamic calendar) is represented by &lt;em&gt;0&lt;/em&gt;, February by &lt;em&gt;1&lt;/em&gt;, &amp;hellip;, December by &lt;em&gt;11&lt;/em&gt; and, for calendars that have it, the 13th or leap month by &lt;em&gt;12&lt;/em&gt;.</source>
          <target state="translated">해당 월의 일정 필드 월 순서는 0부터 시작하므로 Janurary (여기서는 달력의 첫 번째 달을 나타내는 데 사용됩니다. 이슬람 달력의 Muharram과 같은 다른 이름이라고도 함)는 &lt;em&gt;0&lt;/em&gt; , 2 월 &lt;em&gt;1&lt;/em&gt; ,&amp;hellip;, 12 월로 표시됩니다. &lt;em&gt;11 일&lt;/em&gt; , 달력이있는 달력의 경우 13 일 또는 &lt;em&gt;12&lt;/em&gt; 개월 입니다.</target>
        </trans-unit>
        <trans-unit id="9c85f2eedb5532c16006977d07db2ebb58dcaedf" translate="yes" xml:space="preserve">
          <source>Calendar field for the number of the week of the month. This depends on which day of the week is &lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;deemed to start the week&lt;/a&gt; and the &lt;a href=&quot;intlcalendar.getminimaldaysinfirstweek&quot;&gt;minimal number of days in a week&lt;/a&gt;.</source>
          <target state="translated">해당 월의 주에 대한 달력 필드입니다. 이것은 요일 &lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;을 시작하는 것으로 간주되는 요일&lt;/a&gt; 과 일주일 에 &lt;a href=&quot;intlcalendar.getminimaldaysinfirstweek&quot;&gt;최소 일 수에&lt;/a&gt; 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="a4b3a869d12956d59cff6d417db1d5f7d8ddeb0e" translate="yes" xml:space="preserve">
          <source>Calendar field for the number of the week of the year. This depends on which day of the week is &lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;deemed to start the week&lt;/a&gt; and the &lt;a href=&quot;intlcalendar.getminimaldaysinfirstweek&quot;&gt;minimal number of days in a week&lt;/a&gt;.</source>
          <target state="translated">연중 주 번호의 달력 필드 이것은 요일 &lt;a href=&quot;intlcalendar.getfirstdayofweek&quot;&gt;을 시작하는 것으로 간주되는 요일&lt;/a&gt; 과 일주일 에 &lt;a href=&quot;intlcalendar.getminimaldaysinfirstweek&quot;&gt;최소 일 수에&lt;/a&gt; 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="0008b38dd850bae0f4039cbf13614b9d3838624e" translate="yes" xml:space="preserve">
          <source>Calendar field for the seconds component of the time.</source>
          <target state="translated">시간의 초 구성 요소에 대한 일정 관리 필드입니다.</target>
        </trans-unit>
        <trans-unit id="93a4670e4ced3130c11585e9e3be7653cc918186" translate="yes" xml:space="preserve">
          <source>Calendar field for the year. This is not unique across eras. If the calendar type has more than one era, generally the minimum value for this field will be &lt;em&gt;1&lt;/em&gt;.</source>
          <target state="translated">연도의 달력 필드. 이것은 시대마다 독특하지 않습니다. 달력 유형에 둘 이상의 기간이있는 경우 일반적으로이 필드의 최소값은 &lt;em&gt;1&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="40eae8d3829eac2aa73d8c5ae136b3b4bd6857f7" translate="yes" xml:space="preserve">
          <source>Calendar field indicating the raw offset of the timezone, in milliseconds. The raw offset is the timezone offset, excluding any offset due to daylight saving time.</source>
          <target state="translated">시간대의 원시 오프셋을 밀리 초 단위로 나타내는 달력 필드입니다. 원시 오프셋은 일광 절약 시간 제로 인한 오프셋을 제외한 시간대 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="2d6ed0c7c4e48b9fd32fb5769aec92dd9a4ceb7e" translate="yes" xml:space="preserve">
          <source>Calendar field indicating whether a time is before noon (value &lt;em&gt;0&lt;/em&gt;, AM) or after (&lt;em&gt;1&lt;/em&gt;). Midnight is AM, noon is PM.</source>
          <target state="translated">시간이 정오 이전인지 (값 &lt;em&gt;0&lt;/em&gt; , AM) 또는 이후 ( &lt;em&gt;1&lt;/em&gt; )를 나타내는 일정 관리 필드 입니다. 자정은 오전이고 정오는 오후입니다.</target>
        </trans-unit>
        <trans-unit id="c979229348e55fb3d2c54ab4fb921f9a80cbbc70" translate="yes" xml:space="preserve">
          <source>Calendar field numerically representing an era, for instance &lt;em&gt;1&lt;/em&gt; for AD and &lt;em&gt;0&lt;/em&gt; for BC in the Gregorian/Julian calendars and &lt;em&gt;235&lt;/em&gt; for the Heisei (平成) era in the Japanese calendar. Not all calendars have more than one era.</source>
          <target state="translated">연대를 숫자로 나타내는 달력 필드 (예 : Gregorian / Julian 달력에서 AD의 경우 &lt;em&gt;1&lt;/em&gt; , BC의 경우 &lt;em&gt;0&lt;/em&gt; , &lt;em&gt;235)&lt;/em&gt; , 일본 달력에서는 Heisei (平 成) 시대 ) 모든 달력에 시대가 두 개 이상있는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="e5455ca8de2e38aae8df557e72e90f3d68727b6c" translate="yes" xml:space="preserve">
          <source>Calendar field representing the year for &lt;a href=&quot;class.intlcalendar#intlcalendar.constants.field-week-of-year&quot;&gt;week of year&lt;/a&gt; purposes.</source>
          <target state="translated">에 대한 올해 나타내는 달력 필드 &lt;a href=&quot;class.intlcalendar#intlcalendar.constants.field-week-of-year&quot;&gt;년의 주&lt;/a&gt; 목적.</target>
        </trans-unit>
        <trans-unit id="cf27dadeb22d8efee1fc0c42b4327599635f7770" translate="yes" xml:space="preserve">
          <source>Calendar field the milliseconds component of the time.</source>
          <target state="translated">캘린더 필드는 시간의 밀리 초 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="0c455bb32880debeed90b87c6a2f9792eaab6fdd" translate="yes" xml:space="preserve">
          <source>Calendar field whose value is &lt;em&gt;1&lt;/em&gt; for indicating a leap month and &lt;em&gt;0&lt;/em&gt; otherwise.</source>
          <target state="translated">윤달을 나타내는 값이 &lt;em&gt;1&lt;/em&gt; 인 달력 필드, 그렇지 않은 경우 &lt;em&gt;0&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6519d7ad99915185629eae1aa267f8a1d25f0a56" translate="yes" xml:space="preserve">
          <source>Calendar information is returned as an array containing the elements &lt;em&gt;calname&lt;/em&gt;, &lt;em&gt;calsymbol&lt;/em&gt;, &lt;em&gt;month&lt;/em&gt;, &lt;em&gt;abbrevmonth&lt;/em&gt; and &lt;em&gt;maxdaysinmonth&lt;/em&gt;. The names of the different calendars which can be used as &lt;code&gt;calendar&lt;/code&gt; are as follows:</source>
          <target state="translated">달력 정보는 &lt;em&gt;calname&lt;/em&gt; , &lt;em&gt;calsymbol&lt;/em&gt; , &lt;em&gt;month&lt;/em&gt; , &lt;em&gt;abbrevmonth&lt;/em&gt; 및 &lt;em&gt;maxdaysinmonth&lt;/em&gt; 요소를 포함하는 배열로 리턴됩니다 . 로 사용할 수있는 다른 달력의 이름 &lt;code&gt;calendar&lt;/code&gt; 다음과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="fc86c9ccbc724dc67d7c40490c95dab7ff68758f" translate="yes" xml:space="preserve">
          <source>Calendar to convert from, one of &lt;strong&gt;&lt;code&gt;CAL_GREGORIAN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CAL_JULIAN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CAL_JEWISH&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;CAL_FRENCH&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;CAL_GREGORIAN&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;CAL_JULIAN&lt;/code&gt; &lt;/strong&gt; , &lt;strong&gt; &lt;code&gt;CAL_JEWISH&lt;/code&gt; &lt;/strong&gt; 또는 &lt;strong&gt; &lt;code&gt;CAL_FRENCH&lt;/code&gt; &lt;/strong&gt; 중 하나에서 변환 할 캘린더 입니다.</target>
        </trans-unit>
        <trans-unit id="94fbfe8c5ddada193f1846967fbb469cf3ba77f8" translate="yes" xml:space="preserve">
          <source>Calendar to convert to</source>
          <target state="translated">변환 할 캘린더</target>
        </trans-unit>
        <trans-unit id="b15e1ed07dc2888cca159f2320334bb546383513" translate="yes" xml:space="preserve">
          <source>Calendar to return information for. If no calendar is specified information about all calendars is returned.</source>
          <target state="translated">정보를 반환 할 캘린더입니다. 달력을 지정하지 않으면 모든 달력에 대한 정보가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e7ac200fcd124fbfbc6b6efe4ac5596fc60fb6e2" translate="yes" xml:space="preserve">
          <source>Calendar to use for calculation</source>
          <target state="translated">계산에 사용할 캘린더</target>
        </trans-unit>
        <trans-unit id="9c32b5e8f76e88392937c2058ae77dfc2e81a119" translate="yes" xml:space="preserve">
          <source>Calendar to use for formatting or parsing. The default value is &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;, which corresponds to &lt;strong&gt;&lt;code&gt;IntlDateFormatter::GREGORIAN&lt;/code&gt;&lt;/strong&gt;. This can either be one of the &lt;a href=&quot;class.intldateformatter#intl.intldateformatter-constants.calendartypes&quot;&gt;IntlDateFormatter calendar constants&lt;/a&gt; or an &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt;. Any &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; object passed will be clone; it will not be changed by the &lt;a href=&quot;class.intldateformatter&quot;&gt;IntlDateFormatter&lt;/a&gt;. This will determine the calendar type used (gregorian, islamic, persian, etc.) and, if &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; is given for the &lt;code&gt;timezone&lt;/code&gt; parameter, also the timezone used.</source>
          <target state="translated">서식 지정 또는 구문 분석에 사용할 달력입니다. 기본값은 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; 이며 &lt;strong&gt; &lt;code&gt;IntlDateFormatter::GREGORIAN&lt;/code&gt; &lt;/strong&gt; 해당합니다 . 이 중의 하나가 될 수 있습니다 &lt;a href=&quot;class.intldateformatter#intl.intldateformatter-constants.calendartypes&quot;&gt;IntlDateFormatter 일정 상수&lt;/a&gt; 또는 &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; . 전달 된 모든 &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; 객체는 복제됩니다. &lt;a href=&quot;class.intldateformatter&quot;&gt;IntlDateFormatter에&lt;/a&gt; 의해 변경되지 않습니다 . 이것은 사용 된 달력 유형 (그레고리 안, 이슬람, 페르시아 등)을 결정하며, &lt;code&gt;timezone&lt;/code&gt; 매개 변수에 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; 이 제공 되면 사용 된 시간대도 결정합니다.</target>
        </trans-unit>
        <trans-unit id="e2301af79daf9f3781f11285d3174ad37e300db4" translate="yes" xml:space="preserve">
          <source>Call &lt;a href=&quot;intlcalendar.createinstance&quot;&gt;IntlCalendar::createInstance()&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;intlcalendar.createinstance&quot;&gt;IntlCalendar :: createInstance ()&lt;/a&gt; 를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b37dde5019d3cfbc7597a108ea7babc95e554bb0" translate="yes" xml:space="preserve">
          <source>Call the callback when a status change for process ID &lt;code&gt;pid&lt;/code&gt; (or any &lt;em&gt;PID&lt;/em&gt; if &lt;code&gt;pid&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;0&lt;/code&gt;&lt;/strong&gt; ) has been received(a status change happens when the process terminates or is killed, or, when &lt;code&gt;trace&lt;/code&gt; is &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, additionally when it is stopped or continued). In other words, when the process receives a &lt;strong&gt;&lt;code&gt;SIGCHLD&lt;/code&gt;&lt;/strong&gt; , &lt;em&gt;Ev&lt;/em&gt; will fetch the outstanding exit/wait status for all changed/zombie children and call the callback.</source>
          <target state="translated">프로세스 ID에 대한 상태 변화시 콜백 전화 &lt;code&gt;pid&lt;/code&gt; (또는 &lt;em&gt;PID&lt;/em&gt; 경우 &lt;code&gt;pid&lt;/code&gt; 있다 &lt;strong&gt; &lt;code&gt;0&lt;/code&gt; &lt;/strong&gt; )를 수신 한 (상태 변화 할 때, 언제 처리가 종료가 발생하거나 살해 또는 &lt;code&gt;trace&lt;/code&gt; 이다 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 추가적으로는 정지 또는 계속되면 ). 프로세스가 수신 할 때 즉, &lt;strong&gt; &lt;code&gt;SIGCHLD&lt;/code&gt; 를&lt;/strong&gt; , &lt;em&gt;복음 전도는&lt;/em&gt; 모든 변경 / 좀비 어린이를위한 뛰어난 종료 / 대기 상태를 가져오고 콜백을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="bb2315c9ee18707da1c14381c39436e1fa9c790b" translate="yes" xml:space="preserve">
          <source>Call to return a result set from a prepared statement query.</source>
          <target state="translated">준비된 명령문 쿼리에서 결과 세트를 리턴하려면 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="42fb639b7313463881ed7d9bae34cc709237f03b" translate="yes" xml:space="preserve">
          <source>Callback</source>
          <target state="translated">Callback</target>
        </trans-unit>
        <trans-unit id="5213073cc2b18043297c4d9333404b525da6bcf9" translate="yes" xml:space="preserve">
          <source>Callback function for &lt;a href=&quot;function.ob-start&quot;&gt;ob_start()&lt;/a&gt; to repair the buffer.</source>
          <target state="translated">버퍼를 복구하기 위한 &lt;a href=&quot;function.ob-start&quot;&gt;ob_start ()&lt;/a&gt; 에 대한 콜백 함수 .</target>
        </trans-unit>
        <trans-unit id="983334d400d4482f2d75d45f2d631665e88f9ba0" translate="yes" xml:space="preserve">
          <source>Callback function to be called when the matching event occurs.</source>
          <target state="translated">일치하는 이벤트가 발생할 때 호출되는 콜백 함수.</target>
        </trans-unit>
        <trans-unit id="f17e030ca3f3cdf0960c0aa313109b2d7926e63b" translate="yes" xml:space="preserve">
          <source>Callback function to run for each element in each array.</source>
          <target state="translated">각 배열의 각 요소에 대해 실행되는 콜백 함수</target>
        </trans-unit>
        <trans-unit id="e398d4b72208aaafdc3b8dcec40d1a2daac6467e" translate="yes" xml:space="preserve">
          <source>Callback to call on failed assertions</source>
          <target state="translated">실패한 어설 션을 호출하기위한 콜백</target>
        </trans-unit>
        <trans-unit id="0fb58e60206430b52eda835054d7481c5b3c1212" translate="yes" xml:space="preserve">
          <source>Callback to invoke where the descriptor is ready for writing, or &lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt; if no callback is desired.</source>
          <target state="translated">디스크립터가 쓰기 준비가 된 위치를 호출하기위한 콜백. 콜백이 필요하지 않은 경우 &lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a5265a2844fad70a205f6b3c18dabc2ae947c45e" translate="yes" xml:space="preserve">
          <source>Callback to invoke where there is an error on the descriptor, cannot be &lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt;.</source>
          <target state="translated">디스크립터에 오류가있는 경우 호출하는 콜백은 &lt;a href=&quot;language.types.null&quot;&gt;NULL이&lt;/a&gt; 될 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="8485a461f9109d6e52d6a5ffae59a72a75054945" translate="yes" xml:space="preserve">
          <source>Callback to invoke where there is data to read, or &lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt; if no callback is desired.</source>
          <target state="translated">읽을 데이터가있는 곳에서 호출하기위한 콜백. 콜백이 필요없는 경우 &lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b46c7345be1e8cbff4b0b8fb788d597af9bf9f8" translate="yes" xml:space="preserve">
          <source>Callback which is called when connection is closed. Should match the following prototype:</source>
          <target state="translated">연결이 닫힐 때 호출되는 콜백. 다음 프로토 타입과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="f76df01ea2ecca152b3684e0fb295fd59be8d4d3" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator &amp;rarr;</source>
          <target state="translated">CallbackFilterIterator &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="58ac6ec5eaa24c99a3bdcb46725a867792041e8b" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator (class)</source>
          <target state="translated">CallbackFilterIterator (클래스)</target>
        </trans-unit>
        <trans-unit id="e2249cecc3e54caca5103f70c55445aa4b285423" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator Examples</source>
          <target state="translated">CallbackFilterIterator 예제</target>
        </trans-unit>
        <trans-unit id="98aa958a877b81f7dc2867c005fb11d771d86713" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::__construct</source>
          <target state="translated">CallbackFilterIterator::__construct</target>
        </trans-unit>
        <trans-unit id="0deeb83c751d0fa0e888f212c23bce0702f51296" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::__construct &amp;mdash; Create a filtered iterator from another iterator</source>
          <target state="translated">CallbackFilterIterator :: __ construct &amp;mdash; 다른 이터레이터에서 필터링 된 이터레이터를 만듭니다</target>
        </trans-unit>
        <trans-unit id="959a759f1cbada714f1c4611f0a8e76e9053feab" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::__construct &amp;rarr;</source>
          <target state="translated">CallbackFilterIterator :: __ construct &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="e428fbf7fd2f38b9779f1162de4a382e41775553" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::accept</source>
          <target state="translated">CallbackFilterIterator::accept</target>
        </trans-unit>
        <trans-unit id="83cb194fd1202a762b0a54bc490a28389031adf4" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::accept &amp;mdash; Calls the callback with the current value, the current key and the inner iterator as arguments</source>
          <target state="translated">CallbackFilterIterator :: accept &amp;mdash; 현재 값, 현재 키 및 내부 반복자를 인수로 사용하여 콜백을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="5cdbc7f8e0fb48caca8039adc84f7776e87c22a6" translate="yes" xml:space="preserve">
          <source>CallbackFilterIterator::accept &amp;rarr;</source>
          <target state="translated">CallbackFilterIterator :: 수락 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="82b65bf38b7df906188061acd9e0db1c91639fdc" translate="yes" xml:space="preserve">
          <source>Callbacks / Callables</source>
          <target state="translated">콜백 / 콜 러블</target>
        </trans-unit>
        <trans-unit id="680afe89b82421dcb038b4c6844f93c9a9003485" translate="yes" xml:space="preserve">
          <source>Callbacks / Callables &amp;rarr;</source>
          <target state="translated">콜백 / 콜 러블 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="b707d5e60c2dc41b46cee4a8a06ef03bd2614f62" translate="yes" xml:space="preserve">
          <source>Callbacks can be denoted by &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt; type hint as of PHP 5.4. This documentation used &lt;a href=&quot;language.pseudo-types#language.types.callback&quot;&gt;callback&lt;/a&gt; type information for the same purpose.</source>
          <target state="translated">콜백 은 PHP 5.4부터 &lt;a href=&quot;language.types.callable&quot;&gt;호출 가능한&lt;/a&gt; 유형 힌트로 표시 될 수 있습니다 . 이 문서 는 같은 목적으로 &lt;a href=&quot;language.pseudo-types#language.types.callback&quot;&gt;콜백&lt;/a&gt; 유형 정보를 사용했습니다 .</target>
        </trans-unit>
        <trans-unit id="0fd18e5adcbd9c9dc01541f348f1083d0af92e59" translate="yes" xml:space="preserve">
          <source>Callbacks registered with functions such as &lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func()&lt;/a&gt; and &lt;a href=&quot;function.call-user-func-array&quot;&gt;call_user_func_array()&lt;/a&gt; will not be called if there is an uncaught exception thrown in a previous callback.</source>
          <target state="translated">같은 함수 콜백 등록 &lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func ()&lt;/a&gt; 및 &lt;a href=&quot;function.call-user-func-array&quot;&gt;call_user_func_array ()는&lt;/a&gt; 이전의 콜백 발생 잡히지 않은 예외가 있으면 호출되지 않을 것이다.</target>
        </trans-unit>
        <trans-unit id="2ea4a93e7c842d67eb954bf43f946f8587986f36" translate="yes" xml:space="preserve">
          <source>Callbacks registered with functions such as &lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func()&lt;/a&gt; and &lt;strong&gt;call_user_func_array()&lt;/strong&gt; will not be called if there is an uncaught exception thrown in a previous callback.</source>
          <target state="translated">같은 함수 콜백 등록 &lt;a href=&quot;function.call-user-func&quot;&gt;call_user_func ()&lt;/a&gt; 및 &lt;strong&gt;call_user_func_array ()는&lt;/strong&gt; 이전의 콜백 발생 잡히지 않은 예외가 있으면 호출되지 않을 것이다.</target>
        </trans-unit>
        <trans-unit id="11a577714969c98f931229e12d5e55a460a32241" translate="yes" xml:space="preserve">
          <source>Callbacks registered with functions such as &lt;strong&gt;call_user_func()&lt;/strong&gt; and &lt;a href=&quot;function.call-user-func-array&quot;&gt;call_user_func_array()&lt;/a&gt; will not be called if there is an uncaught exception thrown in a previous callback.</source>
          <target state="translated">같은 함수 콜백 등록 &lt;strong&gt;call_user_func ()&lt;/strong&gt; 및 &lt;a href=&quot;function.call-user-func-array&quot;&gt;call_user_func_array ()는&lt;/a&gt; 이전의 콜백 발생 잡히지 않은 예외가 있으면 호출되지 않을 것이다.</target>
        </trans-unit>
        <trans-unit id="77d68f3b9e65d06187237e949674ba2922f7f990" translate="yes" xml:space="preserve">
          <source>Called during unserialization of the object.</source>
          <target state="translated">객체의 직렬화 해제 중에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b9af6c24d317d3d46b43714eca68b60fcb4cd742" translate="yes" xml:space="preserve">
          <source>Called for each element to test whether it has children.</source>
          <target state="translated">자식이 있는지 테스트하기 위해 각 요소를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="d2eaef5337f89b7eac957fff80b0be7b57e6d1c2" translate="yes" xml:space="preserve">
          <source>Called when closing the stream wrapper, right before &lt;a href=&quot;streamwrapper.stream-flush&quot;&gt;streamWrapper::stream_flush()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-flush&quot;&gt;streamWrapper :: stream_flush ()&lt;/a&gt; 직전에 스트림 래퍼를 닫을 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="29ec03fdf689cb3bcfc0e10c1e9c2d6597d98bc5" translate="yes" xml:space="preserve">
          <source>Called when end recursing one level.</source>
          <target state="translated">끝이 한 레벨을 되풀이 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b04de700a6d6fd2718d3b12d4d15ac9fd1d0c6f7" translate="yes" xml:space="preserve">
          <source>Called when iteration begins (after the first &lt;a href=&quot;recursiveiteratoriterator.rewind&quot;&gt;RecursiveIteratorIterator::rewind()&lt;/a&gt; call.</source>
          <target state="translated">반복이 시작될 때 (첫 번째 &lt;a href=&quot;recursiveiteratoriterator.rewind&quot;&gt;RecursiveIteratorIterator :: rewind ()&lt;/a&gt; 호출 후 ) 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="32f4b03792fb7ea4e9f61866a8553133f38bbbe2" translate="yes" xml:space="preserve">
          <source>Called when iteration begins (after the first &lt;a href=&quot;recursivetreeiterator.rewind&quot;&gt;RecursiveTreeIterator::rewind()&lt;/a&gt; call).</source>
          <target state="translated">반복이 시작될 때 호출됩니다 (첫 번째 &lt;a href=&quot;recursivetreeiterator.rewind&quot;&gt;RecursiveTreeIterator :: rewind ()&lt;/a&gt; 호출 후).</target>
        </trans-unit>
        <trans-unit id="7996b5680cb4f5c096089f2543f8ef3121a4090d" translate="yes" xml:space="preserve">
          <source>Called when opening the stream wrapper, right before &lt;a href=&quot;streamwrapper.stream-open&quot;&gt;streamWrapper::stream_open()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;streamwrapper.stream-open&quot;&gt;streamWrapper :: stream_open ()&lt;/a&gt; 직전에 스트림 래퍼를 열 때 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="fd1227ab0f3eb8679257007ee3a36aa89711c678" translate="yes" xml:space="preserve">
          <source>Called when recursing one level down.</source>
          <target state="translated">한 레벨 아래로 되풀이 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f9cc207c29028fc8b540c3d8d13712534492de37" translate="yes" xml:space="preserve">
          <source>Called when the iteration ends (when &lt;a href=&quot;recursiveiteratoriterator.valid&quot;&gt;RecursiveIteratorIterator::valid()&lt;/a&gt; first returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">반복이 종료 될 때 호출됩니다 ( &lt;a href=&quot;recursiveiteratoriterator.valid&quot;&gt;RecursiveIteratorIterator :: valid ()가&lt;/a&gt; 처음 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 반환 할 때 ) .</target>
        </trans-unit>
        <trans-unit id="b01fab9ef1d983d75172ad73193f6eba815f986f" translate="yes" xml:space="preserve">
          <source>Called when the iteration ends (when &lt;a href=&quot;recursivetreeiterator.valid&quot;&gt;RecursiveTreeIterator::valid()&lt;/a&gt; first returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;)</source>
          <target state="translated">반복이 종료 될 때 호출됩니다 ( &lt;a href=&quot;recursivetreeiterator.valid&quot;&gt;RecursiveTreeIterator :: valid ()가&lt;/a&gt; 처음 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 반환 할 때 ).</target>
        </trans-unit>
        <trans-unit id="17c283e15036bb8c592ca35c9ca1f2aea28fccb8" translate="yes" xml:space="preserve">
          <source>Called when the next element is available.</source>
          <target state="translated">다음 요소를 사용할 수있을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ab32c42f1d66ea317baef11d5a4588b911834385" translate="yes" xml:space="preserve">
          <source>Calling &lt;a href=&quot;function.exit&quot;&gt;exit()&lt;/a&gt; after &lt;strong&gt;php_check_syntax()&lt;/strong&gt; resulted in a Segfault.</source>
          <target state="translated">&lt;strong&gt;php_check_syntax &lt;/strong&gt;&lt;a href=&quot;function.exit&quot;&gt;()&lt;/a&gt; 이후에 exit ()를 호출 하면 Segfault가 발생했습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="31b05b4568c93420c44c1aacd62c27db3572e04a" translate="yes" xml:space="preserve">
          <source>Calling &lt;em&gt;suspend&lt;/em&gt; / &lt;em&gt;resume&lt;/em&gt; has the side effect of updating the event loop time(see &lt;a href=&quot;ev.nowupdate&quot;&gt;Ev::nowUpdate()&lt;/a&gt; ).</source>
          <target state="translated">&lt;em&gt;suspend&lt;/em&gt; / &lt;em&gt;resume&lt;/em&gt; 을 호출 하면 이벤트 루프 시간을 업데이트하는 부작용이 있습니다 ( &lt;a href=&quot;ev.nowupdate&quot;&gt;Ev :: nowUpdate () 참조&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="40c44f00f904e589f7dab8e89329ab297388a393" translate="yes" xml:space="preserve">
          <source>Calling &lt;strong&gt;EventBuffer::pullup()&lt;/strong&gt; with a large size can be quite slow, since it potentially needs to copy the entire buffer's contents.</source>
          <target state="translated">큰 크기의 &lt;strong&gt;EventBuffer :: pullup ()&lt;/strong&gt; 을 호출 하면 전체 버퍼의 내용을 복사해야하기 때문에 상당히 느릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fb039765bcdb016a05bf20b25d7c29dd5d02e68" translate="yes" xml:space="preserve">
          <source>Calling &lt;strong&gt;Generator::next()&lt;/strong&gt; is equivalent to calling &lt;a href=&quot;generator.send&quot;&gt;Generator::send()&lt;/a&gt; with &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; as argument.</source>
          <target state="translated">호출 &lt;strong&gt;) (발전기 : 다음은&lt;/strong&gt; 호출하는 것과 같습니다 &lt;a href=&quot;generator.send&quot;&gt;생성기 :: 전송 ()&lt;/a&gt; 에 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; 인수로합니다.</target>
        </trans-unit>
        <trans-unit id="1c737409bf69b084bdb30b38c796cd718916236b" translate="yes" xml:space="preserve">
          <source>Calling &lt;strong&gt;PDO::prepare()&lt;/strong&gt; and &lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement::execute()&lt;/a&gt; for statements that will be issued multiple times with different parameter values optimizes the performance of your application by allowing the driver to negotiate client and/or server side caching of the query plan and meta information, and helps to prevent SQL injection attacks by eliminating the need to manually quote the parameters.</source>
          <target state="translated">다른 매개 변수 값으로 여러 번 발행되는 명령문에 대해 &lt;strong&gt;PDO :: prepare ()&lt;/strong&gt; 및 &lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement :: execute ()&lt;/a&gt; 를 호출 하면 드라이버가 쿼리 계획의 클라이언트 및 / 또는 서버 측 캐싱을 협상 할 수 있도록하여 응용 프로그램의 성능을 최적화합니다. 메타 정보를 제공하고 매개 변수를 수동으로 인용 할 필요가 없어 SQL 주입 공격을 방지합니다.</target>
        </trans-unit>
        <trans-unit id="05ff2ba13e67341c5e73b4be90d1d3288f3ac12e" translate="yes" xml:space="preserve">
          <source>Calling &lt;strong&gt;get_class_vars()&lt;/strong&gt; will expose all properties, as when converting an object to a class.</source>
          <target state="translated">&lt;strong&gt;get_class_vars ()를&lt;/strong&gt; 호출 하면 객체를 클래스로 변환 할 때와 같이 모든 속성이 노출됩니다.</target>
        </trans-unit>
        <trans-unit id="c8bcde338fd8d33491cd2ace2ae6d92f9d4c98c1" translate="yes" xml:space="preserve">
          <source>Calling &lt;strong&gt;get_class_vars()&lt;/strong&gt; will now expose all the properties as an array, unlike previous behaviour where protected and private properties were prefixed with nul bytes.</source>
          <target state="translated">&lt;strong&gt;get_class_vars ()를&lt;/strong&gt; 호출 &lt;strong&gt;하면&lt;/strong&gt; protected 및 private 속성 앞에 nul 바이트가 추가 된 이전 동작과 달리 모든 속성이 배열로 노출됩니다.</target>
        </trans-unit>
        <trans-unit id="ae035c4993916b6c9bbe2fb57dfb82692c0fb7b5" translate="yes" xml:space="preserve">
          <source>Calling PHP Functions</source>
          <target state="translated">PHP 함수 호출</target>
        </trans-unit>
        <trans-unit id="a21e72fb4a55243db8a068d2bde6886bbead7c7a" translate="yes" xml:space="preserve">
          <source>Calling the Parent's Functions</source>
          <target state="translated">부모의 기능 호출</target>
        </trans-unit>
        <trans-unit id="b280b0a529128109b5b765bed01672f26561afab" translate="yes" xml:space="preserve">
          <source>Calling the constructor with no parameters is the same as calling &lt;a href=&quot;mysqli.init&quot;&gt;mysqli_init()&lt;/a&gt;.</source>
          <target state="translated">매개 변수없이 생성자를 호출하는 것은 &lt;a href=&quot;mysqli.init&quot;&gt;mysqli_init ()&lt;/a&gt; 호출과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="b92591841f15703a8a777ea77f145540e2620c2f" translate="yes" xml:space="preserve">
          <source>Calling this function tells the SSL to renegotiate, and the buffer event to invoke appropriate callbacks. This is an advanced topic; this should be generally avoided unless one really knows what he/she does, especially since many SSL versions have had known security issues related to renegotiation.</source>
          <target state="translated">이 함수를 호출하면 SSL이 재협상하고 버퍼 이벤트가 적절한 콜백을 호출하도록 지시합니다. 이것은 고급 주제입니다. 많은 SSL 버전이 재협상과 관련된 알려진 보안 문제를 가지고 있기 때문에 자신이하는 일을 실제로 알지 않는 한 일반적으로 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="bebbad33abf1b2641b42c3bd8f3d9c659131c6c7" translate="yes" xml:space="preserve">
          <source>Calling this method directly is deprecated. Usually, SOAP functions can be called as methods of the &lt;a href=&quot;class.soapclient&quot;&gt;SoapClient&lt;/a&gt; object; in situations where this is not possible or additional options are needed, use &lt;a href=&quot;soapclient.soapcall&quot;&gt;SoapClient::__soapCall()&lt;/a&gt;.</source>
          <target state="translated">이 메소드를 직접 호출하는 것은 더 이상 사용되지 않습니다. 일반적으로 SOAP 함수는 &lt;a href=&quot;class.soapclient&quot;&gt;SoapClient&lt;/a&gt; 객체의 메서드로 호출 될 수 있습니다 . 이것이 불가능하거나 추가 옵션이 필요한 상황에서는 &lt;a href=&quot;soapclient.soapcall&quot;&gt;SoapClient :: __ soapCall ()을 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d56a9e386fca9fb201cbc1d455fc8598f8f0c35e" translate="yes" xml:space="preserve">
          <source>Calling this method from &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; triggers warning &quot;Illegal type returned&quot;.</source>
          <target state="translated">&lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; 에서이 메소드를 호출하면 &quot;잘못된 유형이 리턴되었습니다&quot;라는 경고가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="04d16434482ed8fc9295295ccde3613d81bc18d2" translate="yes" xml:space="preserve">
          <source>Calling this method is optional. The SoapClient uses the endpoint from the WSDL file by default.</source>
          <target state="translated">이 메소드를 호출하는 것은 선택 사항입니다. SoapClient는 기본적으로 WSDL 파일의 엔드 포인트를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4d50b3cbf854dda751a607c597294e7dd25f3d43" translate="yes" xml:space="preserve">
          <source>Calling this method will affect all following calls to &lt;a href=&quot;class.soapclient&quot;&gt;SoapClient&lt;/a&gt; methods.</source>
          <target state="translated">이 메소드를 호출하면 다음의 모든 &lt;a href=&quot;class.soapclient&quot;&gt;SoapClient&lt;/a&gt; 메소드 호출에 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="16ccca45bdcd25b1db8774063166a6b5dc2c1bea" translate="yes" xml:space="preserve">
          <source>Calling this method will replace any previous values.</source>
          <target state="translated">이 메소드를 호출하면 이전 값이 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="a3a94ad71db9ce53001b7a78174067dc8a443f1a" translate="yes" xml:space="preserve">
          <source>Calls a function for every element in an iterator.</source>
          <target state="translated">반복자의 모든 요소에 대한 함수를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="425dbcd2e2d7e881cfb87f50cb07c2ff2f197a63" translate="yes" xml:space="preserve">
          <source>Calls a user defined function or method given by the &lt;code&gt;function&lt;/code&gt; parameter, with the following arguments. This function must be called within a method context, it can't be used outside a class. It uses the &lt;a href=&quot;language.oop5.late-static-bindings&quot;&gt;late static binding&lt;/a&gt;.</source>
          <target state="translated">다음과 같은 인수를 사용하여 &lt;code&gt;function&lt;/code&gt; 매개 변수가 제공 한 사용자 정의 함수 또는 메소드를 호출합니다 . 이 함수는 메소드 컨텍스트 내에서 호출되어야하며 클래스 외부에서는 사용할 수 없습니다. &lt;a href=&quot;language.oop5.late-static-bindings&quot;&gt;최신 정적 바인딩을&lt;/a&gt; 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="040ad091a4310e3d3f2bbedc1cfb71f9e436a962" translate="yes" xml:space="preserve">
          <source>Calls a user defined function or method given by the &lt;code&gt;function&lt;/code&gt; parameter. This function must be called within a method context, it can't be used outside a class. It uses the &lt;a href=&quot;language.oop5.late-static-bindings&quot;&gt;late static binding&lt;/a&gt;. All arguments of the forwarded method are passed as values, and as an array, similarly to &lt;a href=&quot;function.call-user-func-array&quot;&gt;call_user_func_array()&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;function&lt;/code&gt; 매개 변수가 제공 한 사용자 정의 함수 또는 메소드를 호출합니다 . 이 함수는 메소드 컨텍스트 내에서 호출되어야하며 클래스 외부에서는 사용할 수 없습니다. &lt;a href=&quot;language.oop5.late-static-bindings&quot;&gt;최신 정적 바인딩을&lt;/a&gt; 사용합니다 . 전달 된 메소드의 모든 인수는 &lt;a href=&quot;function.call-user-func-array&quot;&gt;call_user_func_array ()&lt;/a&gt; 와 유사하게 값과 배열로 전달됩니다. .</target>
        </trans-unit>
        <trans-unit id="bf20d7c52260dd80951ed899d0df47b6ef3df919" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;callback&lt;/code&gt; given by the first parameter and passes the remaining parameters as arguments.</source>
          <target state="translated">첫 번째 매개 변수가 제공 한 &lt;code&gt;callback&lt;/code&gt; 호출하고 나머지 매개 변수를 인수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="9cc10d946b780c421c14f86877c63c1b2037b6f7" translate="yes" xml:space="preserve">
          <source>Calls the &lt;code&gt;callback&lt;/code&gt; given by the first parameter with the parameters in &lt;code&gt;param_arr&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;param_arr&lt;/code&gt; 의 매개 변수를 사용하여 첫 번째 매개 변수가 제공 한 &lt;code&gt;callback&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="fafc604856a80710a0e55b923427a45c5dbc21ac" translate="yes" xml:space="preserve">
          <source>Calls the registered consumer handler callback function, which is set with &lt;a href=&quot;oauthprovider.consumerhandler&quot;&gt;OAuthProvider::consumerHandler()&lt;/a&gt;.</source>
          <target state="translated">등록 된 소비자 처리기 콜백 함수를 호출합니다.이 함수는 &lt;a href=&quot;oauthprovider.consumerhandler&quot;&gt;OAuthProvider :: consumerHandler ()로&lt;/a&gt; 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="5efcf22b5ee5c2916cb8d15990eea1abe8da9a20" translate="yes" xml:space="preserve">
          <source>Calls the registered timestamp handler callback function, which is set with &lt;a href=&quot;oauthprovider.timestampnoncehandler&quot;&gt;OAuthProvider::timestampNonceHandler()&lt;/a&gt;.</source>
          <target state="translated">등록 된 타임 스탬프 핸들러 콜백 함수를 호출합니다.이 함수는 &lt;a href=&quot;oauthprovider.timestampnoncehandler&quot;&gt;OAuthProvider :: timestampNonceHandler ()로&lt;/a&gt; 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="e7d9f090317b0eea28be4babbc41952e8e8579af" translate="yes" xml:space="preserve">
          <source>Calls the registered token handler callback function, which is set with &lt;a href=&quot;oauthprovider.tokenhandler&quot;&gt;OAuthProvider::tokenHandler()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;oauthprovider.tokenhandler&quot;&gt;OAuthProvider :: tokenHandler ()로&lt;/a&gt; 설정된 등록 된 토큰 핸들러 콜백 함수를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="4b40169dd4031a5b25a82dce940d5232870976b8" translate="yes" xml:space="preserve">
          <source>Calls to &lt;strong&gt;stream_socket_recvfrom()&lt;/strong&gt; on socket-based streams, after calls to buffer-based stream functions (like &lt;a href=&quot;function.fread&quot;&gt;fread()&lt;/a&gt; or &lt;a href=&quot;function.stream-get-line&quot;&gt;stream_get_line()&lt;/a&gt;) read data directly from the socket and bypass the stream buffer.</source>
          <target state="translated">&lt;a href=&quot;function.fread&quot;&gt;fread ()&lt;/a&gt; 또는 &lt;a href=&quot;function.stream-get-line&quot;&gt;stream_get_line ()&lt;/a&gt; 과 같은 버퍼 기반 스트림 함수에 대한 호출 이 소켓에서 직접 데이터를 읽고 스트림 버퍼 를 &lt;strong&gt;무시한&lt;/strong&gt; 후 소켓 기반 스트림에서 &lt;strong&gt;stream_socket_recvfrom ()&lt;/strong&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="562eb432ea66dcf3a7c72a1bd055bb818a91cd9b" translate="yes" xml:space="preserve">
          <source>Can also be determined later using &lt;a href=&quot;function.stream-socket-get-name&quot;&gt;stream_socket_get_name()&lt;/a&gt;.</source>
          <target state="translated">나중에 &lt;a href=&quot;function.stream-socket-get-name&quot;&gt;stream_socket_get_name ()을&lt;/a&gt; 사용하여 확인할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f3fcc478e060afc3e6954f432505e0e652889627" translate="yes" xml:space="preserve">
          <source>Can be 1, 2, 3, 4, 5 for built-in fonts in latin2 encoding (where higher numbers corresponding to larger fonts) or any of your own font identifiers registered with &lt;a href=&quot;function.imageloadfont&quot;&gt;imageloadfont()&lt;/a&gt;.</source>
          <target state="translated">latin2 인코딩의 내장 글꼴 (더 큰 글꼴에 해당하는 높은 숫자) 또는 &lt;a href=&quot;function.imageloadfont&quot;&gt;imageloadfont ()로&lt;/a&gt; 등록 된 자체 글꼴 식별자의 경우 1, 2, 3, 4, 5 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="267c87207fa4e22b8a584ab54ab27dec8dae9db3" translate="yes" xml:space="preserve">
          <source>Can be &lt;strong&gt;&lt;code&gt;STREAM_CAST_FOR_SELECT&lt;/code&gt;&lt;/strong&gt; when &lt;a href=&quot;function.stream-select&quot;&gt;stream_select()&lt;/a&gt; is calling &lt;strong&gt;stream_cast()&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;STREAM_CAST_AS_STREAM&lt;/code&gt;&lt;/strong&gt; when &lt;strong&gt;stream_cast()&lt;/strong&gt; is called for other uses.</source>
          <target state="translated">할 수 &lt;strong&gt; &lt;code&gt;STREAM_CAST_FOR_SELECT&lt;/code&gt; &lt;/strong&gt; 때 &lt;a href=&quot;function.stream-select&quot;&gt;stream_select ()&lt;/a&gt; 호출 &lt;strong&gt;stream_cast ()&lt;/strong&gt; 또는 &lt;strong&gt; &lt;code&gt;STREAM_CAST_AS_STREAM&lt;/code&gt; 을&lt;/strong&gt; 때 &lt;strong&gt;stream_cast ()가&lt;/strong&gt; 다른 용도라고합니다.</target>
        </trans-unit>
        <trans-unit id="b7d44e05f73c2bbef8235a847f974206de10b279" translate="yes" xml:space="preserve">
          <source>Can be a combination of the following flags (note that it doesn't make sense to use &lt;strong&gt;&lt;code&gt;PREG_PATTERN_ORDER&lt;/code&gt;&lt;/strong&gt; together with &lt;strong&gt;&lt;code&gt;PREG_SET_ORDER&lt;/code&gt;&lt;/strong&gt;):</source>
          <target state="translated">다음 플래그를 조합 할 수 있습니다 ( &lt;strong&gt; &lt;code&gt;PREG_PATTERN_ORDER&lt;/code&gt; &lt;/strong&gt; 와 &lt;strong&gt; &lt;code&gt;PREG_SET_ORDER&lt;/code&gt; 를&lt;/strong&gt; 함께 사용하는 것은 의미가 없습니다 ).</target>
        </trans-unit>
        <trans-unit id="f79e3f8b058d4046be6d67a06089920d6753039f" translate="yes" xml:space="preserve">
          <source>Can be a file name or a valid stream resource.</source>
          <target state="translated">파일 이름 또는 유효한 스트림 리소스 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2573af0cff8687def8a9f9eb738439f19917aca" translate="yes" xml:space="preserve">
          <source>Can be a stream opened with &lt;a href=&quot;function.fopen&quot;&gt;fopen()&lt;/a&gt; or similar functions, numeric file descriptor, or socket.</source>
          <target state="translated">&lt;a href=&quot;function.fopen&quot;&gt;fopen ()&lt;/a&gt; 또는 유사한 함수, 숫자 파일 설명자 또는 소켓으로 열린 스트림 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="28a327dfb12bb384645e9864a354a57b9b51f9bb" translate="yes" xml:space="preserve">
          <source>Can be called in &lt;a href=&quot;pool.collect&quot;&gt;Pool::collect()&lt;/a&gt; to determine if this object is garbage.</source>
          <target state="translated">&lt;a href=&quot;pool.collect&quot;&gt;Pool :: collect ()&lt;/a&gt; 에서 호출 가능이 객체가 가비지인지 확인하기 위해 .</target>
        </trans-unit>
        <trans-unit id="dceabbdca45b59d782a65d6ed6e34882f4420120" translate="yes" xml:space="preserve">
          <source>Can be called multiple times to accept connections on different sockets.</source>
          <target state="translated">다른 소켓에서 연결을 수락하기 위해 여러 번 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2b4968b7f9ebe18b0973e23431340abf20d8d0a" translate="yes" xml:space="preserve">
          <source>Can be called multiple times to bind the same HTTP server to multiple different ports.</source>
          <target state="translated">동일한 HTTP 서버를 여러 개의 다른 포트에 바인딩하기 위해 여러 번 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba9f0cd0493b4544df4e0c63810aa7c53c51c1a1" translate="yes" xml:space="preserve">
          <source>Can be either &quot;r&quot; for read-only, &quot;w&quot; for write only or &quot;rw&quot; for read and write.</source>
          <target state="translated">읽기 전용 인 경우 &quot;r&quot;, 쓰기 전용 인 경우 &quot;w&quot;또는 읽기 및 쓰기 인 경우 &quot;rw&quot;일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b28c6147adaa4ab2df7678dd87c14d81ec6178ab" translate="yes" xml:space="preserve">
          <source>Can be either a host name or an IP address. Passing the &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; value or the string &quot;localhost&quot; to this parameter, the local host is assumed. When possible, pipes will be used instead of the TCP/IP protocol.</source>
          <target state="translated">호스트 이름 또는 IP 주소 일 수 있습니다. 통과 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 의&lt;/strong&gt; 값 또는이 파라미터에 문자열 &quot;로컬 호스트를&quot;로컬 호스트 가정한다. 가능하면 TCP / IP 프로토콜 대신 파이프가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2dfb4934ee5b9f7513225b30da8177473e318ac0" translate="yes" xml:space="preserve">
          <source>Can be set to &lt;strong&gt;&lt;code&gt;DatePeriod::EXCLUDE_START_DATE&lt;/code&gt;&lt;/strong&gt; to exclude the start date from the set of recurring dates within the period.</source>
          <target state="translated">기간 내의 반복 날짜 세트에서 시작 날짜를 제외 하도록 &lt;strong&gt; &lt;code&gt;DatePeriod::EXCLUDE_START_DATE&lt;/code&gt; &lt;/strong&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb42a418d8d56d646f45cea2f5c2187366adfeda" translate="yes" xml:space="preserve">
          <source>Can be used during SOAP header handling to report an error in the response header.</source>
          <target state="translated">SOAP 헤더 처리 중에 응답 헤더에 오류를보고하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31f58011d9a54dcdcd64bdd6a6c92cab42589a8b" translate="yes" xml:space="preserve">
          <source>Can be used to iterate through recursive iterators.</source>
          <target state="translated">재귀 반복자를 반복하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13fbd976866d8161d37057bb0028b282351d52c0" translate="yes" xml:space="preserve">
          <source>Can be used to mask the triggering of the &lt;code&gt;error_handler&lt;/code&gt; function just like the &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; ini setting controls which errors are shown. Without this mask set the &lt;code&gt;error_handler&lt;/code&gt; will be called for every error regardless to the setting of the &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; setting.</source>
          <target state="translated">&lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; ini 설정이 표시되는 오류를 제어하는 것처럼 &lt;code&gt;error_handler&lt;/code&gt; 함수 의 트리거를 마스킹하는 데 사용할 수 있습니다 . 이 마스크를 설정하지 않으면 &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; 설정 의 설정에 관계없이 모든 오류에 대해 &lt;code&gt;error_handler&lt;/code&gt; 가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="d066ec9a8ac9ec1af958a45769cad7d69c3f938e" translate="yes" xml:space="preserve">
          <source>Can be used to select the proper fault encoding from WSDL.</source>
          <target state="translated">WSDL에서 적절한 결함 인코딩을 선택하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c81e27b8f3a37996a0963275cbe5bead3abd533b" translate="yes" xml:space="preserve">
          <source>Can be used to set protocol specific login options, such as the preferred authentication mechanism via &quot;AUTH=NTLM&quot; or &quot;AUTH=*&quot;, and should be used in conjunction with the &lt;strong&gt;&lt;code&gt;CURLOPT_USERNAME&lt;/code&gt;&lt;/strong&gt; option.</source>
          <target state="translated">&quot;AUTH = NTLM&quot;또는 &quot;AUTH = *&quot;를 통한 기본 인증 메커니즘과 같은 프로토콜 특정 로그인 옵션을 설정하는 데 사용할 수 있으며 &lt;strong&gt; &lt;code&gt;CURLOPT_USERNAME&lt;/code&gt; &lt;/strong&gt; 옵션 과 함께 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d116d1e9047b1372c149f17fb04eb8353dd8867e" translate="yes" xml:space="preserve">
          <source>Can be used to split a string into smaller chunks which is useful for e.g. converting &lt;a href=&quot;function.base64-encode&quot;&gt;base64_encode()&lt;/a&gt; output to match RFC 2045 semantics. It inserts &lt;code&gt;end&lt;/code&gt; every &lt;code&gt;chunklen&lt;/code&gt; characters.</source>
          <target state="translated">RFC 2045 시맨틱과 일치하도록 &lt;a href=&quot;function.base64-encode&quot;&gt;base64_encode ()&lt;/a&gt; 출력을 변환하는 데 유용한 문자열을 더 작은 청크로 분할하는 데 사용할 수 있습니다 . 그것은 &lt;code&gt;chunklen&lt;/code&gt; 마다 &lt;code&gt;end&lt;/code&gt; 삽입합니다 문자.</target>
        </trans-unit>
        <trans-unit id="cdd6db61dcb3b1c28cd6114fada64f944ca1aae7" translate="yes" xml:space="preserve">
          <source>Can be used with other directory functions such as &lt;a href=&quot;function.readdir&quot;&gt;readdir()&lt;/a&gt;, &lt;a href=&quot;function.rewinddir&quot;&gt;rewinddir()&lt;/a&gt; and &lt;a href=&quot;function.closedir&quot;&gt;closedir()&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;function.readdir&quot;&gt;readdir ()&lt;/a&gt; , &lt;a href=&quot;function.rewinddir&quot;&gt;rewinddir ()&lt;/a&gt; 및 &lt;a href=&quot;function.closedir&quot;&gt;closedir ()&lt;/a&gt; 와 같은 다른 디렉토리 기능과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9302e145dfc8b8e02fddd582d27a74ca2bfe8f7" translate="yes" xml:space="preserve">
          <source>Can be useful, for instance, if you generate identifiers simultaneously on several hosts that might happen to generate the identifier at the same microsecond.</source>
          <target state="translated">예를 들어 동일한 마이크로 초에 식별자를 생성 할 수있는 여러 호스트에서 동시에 식별자를 생성하는 경우 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9d4673a93977192ae106b7ceb27c0ddf2e8b810" translate="yes" xml:space="preserve">
          <source>Can either be &lt;strong&gt;&lt;code&gt;INI_SCANNER_NORMAL&lt;/code&gt;&lt;/strong&gt; (default) or &lt;strong&gt;&lt;code&gt;INI_SCANNER_RAW&lt;/code&gt;&lt;/strong&gt;. If &lt;strong&gt;&lt;code&gt;INI_SCANNER_RAW&lt;/code&gt;&lt;/strong&gt; is supplied, then option values will not be parsed.</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;INI_SCANNER_NORMAL&lt;/code&gt; &lt;/strong&gt; (기본값) 또는 &lt;strong&gt; &lt;code&gt;INI_SCANNER_RAW&lt;/code&gt; &lt;/strong&gt; 중 하나 일 수 있습니다 . 경우 &lt;strong&gt; &lt;code&gt;INI_SCANNER_RAW&lt;/code&gt; 가&lt;/strong&gt; 공급되고, 다음 옵션 값을 구문 분석 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="80e8ffafcafae643f259a0895870f650bbf63405" translate="yes" xml:space="preserve">
          <source>Can read all embedded</source>
          <target state="translated">모든 임베디드를 읽을 수 있습니다</target>
        </trans-unit>
        <trans-unit id="b28d7d853ac2ed1f14e4908cc74d8a8f61386d0f" translate="yes" xml:space="preserve">
          <source>Can return all value types.</source>
          <target state="translated">모든 값 유형을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be3e9ec6d881c3e9ca5c4a5fd75ecb788bb907fe" translate="yes" xml:space="preserve">
          <source>Can return any type.</source>
          <target state="translated">모든 유형을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="510ef59c836a264c7d0b899f0ebdff1f2c9bd865" translate="yes" xml:space="preserve">
          <source>Can the cert be used for Any/All purposes?</source>
          <target state="translated">인증서를 모든 / 모든 목적으로 사용할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="f73afa89a66f53a9f27ddb367d34841cd18d86db" translate="yes" xml:space="preserve">
          <source>Can the cert be used for Netscape SSL server?</source>
          <target state="translated">인증서를 Netscape SSL 서버에 사용할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="26f9e3f7cd060c187ea66f87dc3b74e5ca735392" translate="yes" xml:space="preserve">
          <source>Can the cert be used to encrypt S/MIME email?</source>
          <target state="translated">인증서를 사용하여 S / MIME 이메일을 암호화 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="1df7f9add4f3fc765ab2f390dd5efa0d280c44b3" translate="yes" xml:space="preserve">
          <source>Can the cert be used to sign S/MIME email?</source>
          <target state="translated">인증서를 사용하여 S / MIME 이메일에 서명 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="67524322f6f932327dda463b88a4f4b152a714a1" translate="yes" xml:space="preserve">
          <source>Can the cert be used to sign a certificate revocation list (CRL)?</source>
          <target state="translated">인증서를 사용하여 CRL (인증서 해지 목록)에 서명 할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="0283b1efd4b0fee6d44fc95055d6ed63f0f3c355" translate="yes" xml:space="preserve">
          <source>Can the certificate be used for the client side of an SSL connection?</source>
          <target state="translated">SSL 연결의 클라이언트쪽에 인증서를 사용할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="5cf6b16db748929c591188efdb7a49a1476f66cf" translate="yes" xml:space="preserve">
          <source>Can the certificate be used for the server side of an SSL connection?</source>
          <target state="translated">SSL 연결의 서버 측에 인증서를 사용할 수 있습니까?</target>
        </trans-unit>
        <trans-unit id="e31c370be18f122fd275ee3bd84adf3d434f78b9" translate="yes" xml:space="preserve">
          <source>Can&amp;rsquo;t be converted to an array when objects are used as keys.</source>
          <target state="translated">객체를 키로 사용하는 경우 배열로 변환 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9e7bf275cd18a6e4879b261b0409cefd9a6d1ad8" translate="yes" xml:space="preserve">
          <source>Can't open file.</source>
          <target state="translated">파일을 열 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e0d541b8554b84dd31ba01ed086766cf37c64064" translate="yes" xml:space="preserve">
          <source>Cancel the break operation.</source>
          <target state="translated">브레이크 조작을 취소하십시오.</target>
        </trans-unit>
        <trans-unit id="c839c3928613fd87f64ac065cf002519a734eb57" translate="yes" xml:space="preserve">
          <source>Cancels a pending HTTP request.</source>
          <target state="translated">보류중인 HTTP 요청을 취소합니다.</target>
        </trans-unit>
        <trans-unit id="d364e109562a23a3e79a327556fc4e243f6d626c" translate="yes" xml:space="preserve">
          <source>Cancels a statement. Any results associated with the statement that have not been consumed are deleted. After &lt;strong&gt;sqlsrv_cancel()&lt;/strong&gt; has been called, the specified statement can be re-executed if it was created with &lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare()&lt;/a&gt;. Calling &lt;strong&gt;sqlsrv_cancel()&lt;/strong&gt; is not necessary if all the results associated with the statement have been consumed.</source>
          <target state="translated">진술을 취소합니다. 사용되지 않은 명령문과 연관된 모든 결과가 삭제됩니다. 후 &lt;strong&gt;() sqlsrv_cancel&lt;/strong&gt; 가 함께 만든 경우 호출 된, 지정된 문이 다시 실행 될 수 &lt;a href=&quot;function.sqlsrv-prepare&quot;&gt;sqlsrv_prepare ()&lt;/a&gt; . 명령문과 연관된 모든 결과가 사용 된 경우 &lt;strong&gt;sqlsrv_cancel ()을&lt;/strong&gt; 호출 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="03f98ffe944c09e91f7b2a802264d3107d2cb5b5" translate="yes" xml:space="preserve">
          <source>Cancels an ongoing HTTP request. The callback associated with this request is not executed and the request object is freed. If the request is currently being processed, e.g. it is ongoing, the corresponding &lt;a href=&quot;class.eventhttpconnection&quot;&gt;EventHttpConnection&lt;/a&gt; object is going to get reset.</source>
          <target state="translated">진행중인 HTTP 요청을 취소합니다. 이 요청과 관련된 콜백이 실행되지 않고 요청 객체가 해제됩니다. 요청이 현재 처리중인 경우 (예 : 진행중인 경우) 해당 &lt;a href=&quot;class.eventhttpconnection&quot;&gt;EventHttpConnection&lt;/a&gt; 객체가 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="3f2dc713d0c333916eb254ea8df1b42ae711ac60" translate="yes" xml:space="preserve">
          <source>Cancels the &lt;code&gt;event&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;event&lt;/code&gt; 취소합니다 .</target>
        </trans-unit>
        <trans-unit id="9144dffd82f786b9d4b01d11eda24d1668976691" translate="yes" xml:space="preserve">
          <source>Cannot override special constants NULL, TRUE, FALSE, ZEND_THREAD_SAFE or ZEND_DEBUG_BUILD</source>
          <target state="translated">특수 상수 NULL, TRUE, FALSE, ZEND_THREAD_SAFE 또는 ZEND_DEBUG_BUILD를 재정의 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="95a722110b1eb6ddc86e92c055f4fe4d79ba00ae" translate="yes" xml:space="preserve">
          <source>Canonicalize nodes to a file.</source>
          <target state="translated">노드를 파일로 정규화합니다.</target>
        </trans-unit>
        <trans-unit id="60ddfeaa66cf20ee8a4ef17d4f688e312ffbd0ac" translate="yes" xml:space="preserve">
          <source>Canonicalize nodes to a string</source>
          <target state="translated">노드를 문자열로 정규화</target>
        </trans-unit>
        <trans-unit id="91a22bedc34b6fa6c2cec408a318dfcd1e10b14a" translate="yes" xml:space="preserve">
          <source>Capacity does not have to be a power of 2.</source>
          <target state="translated">용량은 2의 거듭 제곱 일 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="7726a069855c2665e4ac52e5dbcca2a7d87444ef" translate="yes" xml:space="preserve">
          <source>Capacity must be a power of 2.</source>
          <target state="translated">용량은 2의 거듭 제곱이어야합니다.</target>
        </trans-unit>
        <trans-unit id="e87979c4be633e8fa851bca63d9d89e8b10ebc1e" translate="yes" xml:space="preserve">
          <source>Capacity will always be rounded up to the nearest power of 2.</source>
          <target state="translated">용량은 항상 가장 가까운 2의 거듭 제곱으로 반올림됩니다.</target>
        </trans-unit>
        <trans-unit id="02d35838400adc1cef187230960adc49e8a250f5" translate="yes" xml:space="preserve">
          <source>Capacity will stay the same if this value is less than or equal to the current capacity.</source>
          <target state="translated">이 값이 현재 용량보다 작거나 같으면 용량은 동일하게 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="4f8142a706979cd4f55735206a77981557df0f33" translate="yes" xml:space="preserve">
          <source>Capture a window (IE for example)</source>
          <target state="translated">창 캡처 (예 : IE)</target>
        </trans-unit>
        <trans-unit id="939862de092c24520fdc036d581b663f8cbe9d51" translate="yes" xml:space="preserve">
          <source>Capture a window (IE for example) but with its content</source>
          <target state="translated">컨텐츠를 사용하여 창 (예 : IE) 캡처</target>
        </trans-unit>
        <trans-unit id="89c3ad58648623a8830f22e3f6fa281cc24bfe2e" translate="yes" xml:space="preserve">
          <source>Capturing subpatterns that occur inside negative lookahead assertions are counted, but their entries in the offsets vector are never set. Perl sets its numerical variables from any such patterns that are matched before the assertion fails to match something (thereby succeeding), but only if the negative lookahead assertion contains just one branch.</source>
          <target state="translated">네거티브 lookahead 어설 션 내에서 발생하는 캡처 하위 패턴은 계산되지만 오프셋 벡터의 항목은 설정되지 않습니다. Perl은 어설 션이 무언가를 일치시키지 못하기 전에 일치하는 패턴에서 숫자 변수를 설정합니다 (따라서 성공). 그러나 부정적 예측 어설 션에 분기가 하나만 포함 된 경우에만 가능합니다.</target>
        </trans-unit>
        <trans-unit id="e15f60bca6175740b4eaf6baa0273c992b91cdb3" translate="yes" xml:space="preserve">
          <source>Care must be taken when using &lt;strong&gt;mysqli_stmt_bind_param()&lt;/strong&gt; in conjunction with &lt;a href=&quot;function.call-user-func-array&quot;&gt;call_user_func_array()&lt;/a&gt;. Note that &lt;strong&gt;mysqli_stmt_bind_param()&lt;/strong&gt; requires parameters to be passed by reference, whereas &lt;a href=&quot;function.call-user-func-array&quot;&gt;call_user_func_array()&lt;/a&gt; can accept as a parameter a list of variables that can represent references or values.</source>
          <target state="translated">&lt;a href=&quot;function.call-user-func-array&quot;&gt;call_user_func_array ()&lt;/a&gt; 와 함께 &lt;strong&gt;mysqli_stmt_bind_param ()&lt;/strong&gt; 을 사용할 때는주의해야합니다 . 주의 &lt;strong&gt;()를 mysqli_stmt_bind_param&lt;/strong&gt; 반면, 참조에 의해 전달 될 파라미터를 필요 &lt;a href=&quot;function.call-user-func-array&quot;&gt;call_user_func_array ()&lt;/a&gt; 파라미터로 참조 또는 값을 나타낼 수있는 변수의리스트를 받아 들일 수있다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c58cdb0deb66b8a5abeb2dfbc4a6cd09806c6926" translate="yes" xml:space="preserve">
          <source>Care should be taken when using the &lt;strong&gt;highlight_file()&lt;/strong&gt; function to make sure that you do not inadvertently reveal sensitive information such as passwords or any other type of information that might create a potential security risk.</source>
          <target state="translated">사용할 때주의해야 &lt;strong&gt;highlight_file ()&lt;/strong&gt; 당신이 실수로 암호 나 잠재적 인 보안 위험을 만들 수있는 정보의 다른 유형으로 민감한 정보를 공개하지 않는 것을 확인하는 기능.</target>
        </trans-unit>
        <trans-unit id="2a4d89fb9046d3ff9d137ef430febe85ad8b5810" translate="yes" xml:space="preserve">
          <source>Case insensitive regular expression.</source>
          <target state="translated">대소 문자를 구분하지 않는 정규식.</target>
        </trans-unit>
        <trans-unit id="ba69fec648f7334926afaf500b2d740d53f9ce89" translate="yes" xml:space="preserve">
          <source>Case sensitive regular expression.</source>
          <target state="translated">대소 문자 구분 정규 표현식.</target>
        </trans-unit>
        <trans-unit id="d2d2c8237d5f96d72a96ff8db8856b062003f1eb" translate="yes" xml:space="preserve">
          <source>Case-insensitive constants are stored as lower-case.</source>
          <target state="translated">대소 문자를 구분하지 않는 상수는 소문자로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="6ad05fa653db6e3f66049be41b0e871a77d75979" translate="yes" xml:space="preserve">
          <source>Caseless match. Part of the GNU extension.</source>
          <target state="translated">케이스리스 매치. GNU 확장의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="90ee05556830aae7146ab0dec3984995aaba6db9" translate="yes" xml:space="preserve">
          <source>Casting a variable to &lt;a href=&quot;language.types.null&quot;&gt;null&lt;/a&gt; using &lt;em&gt;(unset) $var&lt;/em&gt; will &lt;em&gt;not&lt;/em&gt; remove the variable or unset its value. It will only return a &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; value.</source>
          <target state="translated">에 변수를 캐스팅 &lt;a href=&quot;language.types.null&quot;&gt;널 (null)&lt;/a&gt; 사용 &lt;em&gt;(해제) $ VAR는&lt;/em&gt; 것입니다 &lt;em&gt;하지&lt;/em&gt; 변수를 제거하거나 값을 설정 해제. &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; 값만 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="59d4061f16374bd7728c787989a8853cd4147db5" translate="yes" xml:space="preserve">
          <source>Casting literal &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;s and variables to binary &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;s:</source>
          <target state="translated">리터럴 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 및 변수를 이진 &lt;a href=&quot;language.types.string&quot;&gt;문자열로&lt;/a&gt; 캐스팅 :</target>
        </trans-unit>
        <trans-unit id="ab1f4a6c85581bb34201b8ab3481f464ecde50c9" translate="yes" xml:space="preserve">
          <source>Casting to &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 로&lt;/strong&gt; 캐스트&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5255ee8acd2539834e63eab04e115ca7c72acf9f" translate="yes" xml:space="preserve">
          <source>Casting to an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; is not supported yet.</source>
          <target state="translated">&lt;a href=&quot;language.types.array&quot;&gt;어레이&lt;/a&gt; 로의 캐스트 는 아직 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="60ce91ce6622ce716c849e7f0b1095a9aa3a1e77" translate="yes" xml:space="preserve">
          <source>Causes a store to add the specified &lt;code&gt;flag&lt;/code&gt; to the flags set for the messages in the specified &lt;code&gt;sequence&lt;/code&gt;.</source>
          <target state="translated">상점이 지정된 &lt;code&gt;flag&lt;/code&gt; 를 지정된 &lt;code&gt;sequence&lt;/code&gt; 메시지에 대해 설정된 플래그 에 추가하도록합니다 .</target>
        </trans-unit>
        <trans-unit id="957ac68f008e3a9b4bad4605e7cbb640aae45629" translate="yes" xml:space="preserve">
          <source>Causes the calling context to wait for the referenced Thread to finish executing</source>
          <target state="translated">호출 컨텍스트가 참조 된 스레드가 실행을 완료 할 때까지 기다리도록합니다.</target>
        </trans-unit>
        <trans-unit id="3a8198931f1172ca53233ed0a8642a79b5c1c2db" translate="yes" xml:space="preserve">
          <source>Causes the worker to wait for activity from one of the Gearman job servers when operating in non-blocking I/O mode. On failure, issues a &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; with the last Gearman error encountered.</source>
          <target state="translated">비 차단 I / O 모드에서 작동 할 때 작업자가 Gearman 작업 서버 중 하나의 활동을 기다리도록합니다. 실패시, 마지막 Gearman 오류가 발생한 &lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt; 을 &lt;strong&gt;발행&lt;/strong&gt; 하십시오.</target>
        </trans-unit>
        <trans-unit id="8e9c05e9dc54af2d59b97790596002f1446bd045" translate="yes" xml:space="preserve">
          <source>Causing this function to return a multi-dimensional array with categories in the keys of the first dimension and constants and their values in the second dimension.</source>
          <target state="translated">이 함수를 사용하면 첫 번째 차원의 키에있는 범주와 두 번째 차원에있는 상수의 값을 가진 다차원 배열을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b4e2e1ffb3ed14234d78a0838a19f944b1af32e2" translate="yes" xml:space="preserve">
          <source>Cellular</source>
          <target state="translated">Cellular</target>
        </trans-unit>
        <trans-unit id="01ae9c45a25282a2726ede970881df179f8d29df" translate="yes" xml:space="preserve">
          <source>Certain characters have special significance in HTML, and should be represented by HTML entities if they are to preserve their meanings. This function returns a string with these conversions made. If you require all input substrings that have associated named entities to be translated, use &lt;a href=&quot;function.htmlentities&quot;&gt;htmlentities()&lt;/a&gt; instead.</source>
          <target state="translated">특정 문자는 HTML에서 특별한 의미가 있으며, 의미를 보존하려면 HTML 엔티티로 표시해야합니다. 이 함수는 이러한 변환이 수행 된 문자열을 반환합니다. 명명 된 엔터티와 연결된 모든 입력 하위 문자열을 변환해야하는 경우 대신 &lt;a href=&quot;function.htmlentities&quot;&gt;htmlentities ()를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="549b7edc4b70fed57fe116c401d42e18f9b914b8" translate="yes" xml:space="preserve">
          <source>Certain items that may appear in patterns are more efficient than others. It is more efficient to use a character class like [aeiou] than a set of alternatives such as (a|e|i|o|u). In general, the simplest construction that provides the required behaviour is usually the most efficient. Jeffrey Friedl's book contains a lot of discussion about optimizing regular expressions for efficient performance.</source>
          <target state="translated">패턴으로 나타날 수있는 특정 항목이 다른 항목보다 효율적입니다. (a | e | i | u)와 같은 대안 세트보다 [aeiou]와 같은 문자 클래스를 사용하는 것이 더 효율적입니다. 일반적으로 필요한 동작을 제공하는 가장 간단한 구성이 일반적으로 가장 효율적입니다. Jeffrey Friedl의 책에는 효율적인 성능을 위해 정규식을 최적화하는 방법에 대한 많은 토론이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="484b3a3e8b22e716b150e248e75dab06b5ab8034" translate="yes" xml:space="preserve">
          <source>Certain parameter values are reported by the server automatically at connection startup or whenever their values change. &lt;strong&gt;pg_parameter_status()&lt;/strong&gt; can be used to interrogate these settings. It returns the current value of a parameter if known, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the parameter is not known.</source>
          <target state="translated">특정 매개 변수 값은 연결 시작시 또는 값이 변경 될 때마다 서버에 의해 자동으로보고됩니다. &lt;strong&gt;pg_parameter_status ()&lt;/strong&gt; 를 사용하여 이러한 설정을 조사 할 수 있습니다. 알려진 경우 매개 변수의 현재 값을, 매개 변수를 모르는 경우 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 를&lt;/strong&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="dbdbc01444cf7fa4567a4aedf30e0a87e802d5de" translate="yes" xml:space="preserve">
          <source>Change the brightness and/or contrast of an image. It converts the brightness and contrast parameters into slope and intercept and calls a polynomical function to apply to the image.</source>
          <target state="translated">이미지의 밝기 및 / 또는 대비를 변경하십시오. 밝기 및 대비 매개 변수를 기울기와 가로 채기로 변환하고 다항식 함수를 호출하여 이미지에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="a771ad79f243df379e68719c0015c29858e28e77" translate="yes" xml:space="preserve">
          <source>Change the size of an array to the new size of &lt;code&gt;size&lt;/code&gt;. If &lt;code&gt;size&lt;/code&gt; is less than the current array size, any values after the new size will be discarded. If &lt;code&gt;size&lt;/code&gt; is greater than the current array size, the array will be padded with &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; values.</source>
          <target state="translated">배열의 크기를 새로운 크기의 &lt;code&gt;size&lt;/code&gt; 로 변경하십시오 . 경우 &lt;code&gt;size&lt;/code&gt; 현재 배열 크기보다 작은, 새로운 크기 후 모든 값은 폐기 될 것이다. 경우 &lt;code&gt;size&lt;/code&gt; 현재 배열 크기보다 크면, 상기 어레이는 패딩 될 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 의&lt;/strong&gt; 값.</target>
        </trans-unit>
        <trans-unit id="d1e4f273ec3f526196b17101de057b776173fbba" translate="yes" xml:space="preserve">
          <source>Change this target color to specified opacity value within the image.</source>
          <target state="translated">이 대상 색상을 이미지 내 지정된 불투명도 값으로 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="565774501a4f790b48089809f5997d052210cb77" translate="yes" xml:space="preserve">
          <source>Change this target color to the fill color within the image. An ImagickPixel object or a string representing the target color.</source>
          <target state="translated">이 대상 색상을 이미지 내의 채우기 색상으로 변경하십시오. ImagickPixel 객체 또는 대상 색상을 나타내는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="8a7125c3b36852cc06cde56105405183195731d2" translate="yes" xml:space="preserve">
          <source>Changed &lt;code&gt;initial&lt;/code&gt; to allow &lt;a href=&quot;language.pseudo-types#language.types.mixed&quot;&gt;mixed&lt;/a&gt;, previously &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;.</source>
          <target state="translated">이전에 &lt;a href=&quot;language.types.integer&quot;&gt;정수를 &lt;/a&gt;&lt;a href=&quot;language.pseudo-types#language.types.mixed&quot;&gt;혼합&lt;/a&gt; 하여 &lt;code&gt;initial&lt;/code&gt; 을 변경했습니다 .</target>
        </trans-unit>
        <trans-unit id="fe621b3b097a12b7da41530d4e62b06ba2696414" translate="yes" xml:space="preserve">
          <source>Changed the &lt;code&gt;context&lt;/code&gt; parameter to actually have an effect. Previously, any &lt;code&gt;context&lt;/code&gt; was ignored.</source>
          <target state="translated">&lt;code&gt;context&lt;/code&gt; 매개 변수를 실제로 적용하도록 변경했습니다 . 이전에는 모든 &lt;code&gt;context&lt;/code&gt; 가 무시되었습니다.</target>
        </trans-unit>
        <trans-unit id="b1216c33a6cf51e4fa8f04e9a062a01431bdfdc3" translate="yes" xml:space="preserve">
          <source>Changed the default value of &lt;code&gt;sort_flags&lt;/code&gt; back to &lt;strong&gt;&lt;code&gt;SORT_STRING&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;sort_flags&lt;/code&gt; 의 기본값 을 &lt;strong&gt; &lt;code&gt;SORT_STRING&lt;/code&gt; 으로&lt;/strong&gt; 다시 변경했습니다 .</target>
        </trans-unit>
        <trans-unit id="17a4b2c94a0a11547f1a4d570afbb30c33d4bfea" translate="yes" xml:space="preserve">
          <source>Changed the function to use the streams API. It means that you can use it with wrappers, like &lt;em&gt;md5_file('http://example.com/..')&lt;/em&gt;</source>
          <target state="translated">스트림 API를 사용하도록 기능을 변경했습니다. &lt;em&gt;md5_file ( 'http://example.com/ ..')&lt;/em&gt; 과 같은 래퍼와 함께 사용할 수 있습니다 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f71fe07a26f4087c69d78f4a5897985669bdc5d6" translate="yes" xml:space="preserve">
          <source>Changed the function to use the streams API. It means that you can use it with wrappers, like &lt;em&gt;sha1_file('http://example.com/..')&lt;/em&gt;</source>
          <target state="translated">스트림 API를 사용하도록 기능을 변경했습니다. &lt;em&gt;sha1_file ( 'http://example.com/ ..')&lt;/em&gt; 과 같은 래퍼와 함께 사용할 수 있습니다 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9be23e634fb4b627b0f6f8182a82c3be0c869ec6" translate="yes" xml:space="preserve">
          <source>Changed the return value on success from &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; to &lt;a href=&quot;class.datetime&quot;&gt;DateTime&lt;/a&gt;.</source>
          <target state="translated">성공시 반환 값을 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/strong&gt; 에서 &lt;a href=&quot;class.datetime&quot;&gt;DateTime으로&lt;/a&gt; 변경했습니다 .</target>
        </trans-unit>
        <trans-unit id="1b9b5fd99e49a9c42d961cfa9168e5d3547c8d91" translate="yes" xml:space="preserve">
          <source>Changed: An &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; level error is issued if the magic &lt;a href=&quot;language.oop5.overloading&quot;&gt;overloading&lt;/a&gt; methods are declared &lt;a href=&quot;language.oop5.static&quot;&gt;static&lt;/a&gt;. It also enforces the public visibility requirement.</source>
          <target state="translated">변경 : 매직 &lt;a href=&quot;language.oop5.overloading&quot;&gt;오버로딩&lt;/a&gt; 메소드가 &lt;a href=&quot;language.oop5.static&quot;&gt;static&lt;/a&gt; 으로 선언 되면 &lt;strong&gt; &lt;code&gt;E_WARNING&lt;/code&gt; &lt;/strong&gt; 레벨 오류가 발생 합니다 . 또한 공개 가시성 요구 사항을 시행합니다.</target>
        </trans-unit>
        <trans-unit id="0e6226cbbb4131d8a7e99613544e77577cb9c9b5" translate="yes" xml:space="preserve">
          <source>Changed: Classes that implement interfaces with methods that have default values in the prototype are no longer required to match the interface's default value.</source>
          <target state="translated">변경 : 프로토 타입에 기본값이있는 메소드로 인터페이스를 구현하는 클래스는 더 이상 인터페이스의 기본값과 일치하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="49b50e16779e19ac13d8ddd6daf76711ce39f42c" translate="yes" xml:space="preserve">
          <source>Changed: If an &lt;a href=&quot;language.oop5.abstract&quot;&gt;abstract&lt;/a&gt; class defines a signature for the constructor it will now be enforced.</source>
          <target state="translated">변경 : &lt;a href=&quot;language.oop5.abstract&quot;&gt;추상&lt;/a&gt; 클래스가 생성자에 대한 서명을 정의하면 이제 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="59700806c769e93e9868dffa44fe9bed8194e9a5" translate="yes" xml:space="preserve">
          <source>Changed: In previous versions of PHP 5, the use of &lt;em&gt;var&lt;/em&gt; was considered deprecated and would issue an &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; level error. It's no longer deprecated, therefore does not emit the error.</source>
          <target state="translated">변경 : 이전 버전의 PHP 5에서 &lt;em&gt;var&lt;/em&gt; 사용은 더 이상 사용되지 않으며 &lt;strong&gt; &lt;code&gt;E_STRICT&lt;/code&gt; &lt;/strong&gt; 수준 오류가 발생합니다. 더 이상 사용되지 않으므로 오류가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e651239a02eb72d2d194b6c7b763534bb91d5382" translate="yes" xml:space="preserve">
          <source>Changed: It's now possible to reference the class using a variable (e.g., &lt;em&gt;echo $classname::constant;&lt;/em&gt;). The variable's value can not be a keyword (e.g., &lt;em&gt;self&lt;/em&gt;, &lt;em&gt;parent&lt;/em&gt; or &lt;em&gt;static&lt;/em&gt;).</source>
          <target state="translated">변경 : 변수를 사용하여 클래스를 참조 할 수 있습니다 (예 : &lt;em&gt;echo $ classname :: constant;&lt;/em&gt; ). 변수의 값은 키워드 일 수 없습니다 (예 : &lt;em&gt;self&lt;/em&gt; , &lt;em&gt;parent&lt;/em&gt; 또는 &lt;em&gt;static&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="2d69fdee238b4a61d09b89cc2a858334288b289b" translate="yes" xml:space="preserve">
          <source>Changed: Methods with the same name as the last element of a &lt;a href=&quot;https://secure.php.net/manual/en/language.namespaces.php&quot;&gt;namespaced&lt;/a&gt; class name will no longer be treated as &lt;a href=&quot;language.oop5.decon&quot;&gt;constructor&lt;/a&gt;. This change doesn't affect non-namespaced classes.</source>
          <target state="translated">변경 : &lt;a href=&quot;https://secure.php.net/manual/en/language.namespaces.php&quot;&gt;네임 스페이스&lt;/a&gt; 클래스 이름 의 마지막 요소와 이름이 같은 메소드 는 더 이상 &lt;a href=&quot;language.oop5.decon&quot;&gt;constructor&lt;/a&gt; 로 취급되지 않습니다 . 이 변경 사항은 네임 스페이스가 아닌 클래스에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b187a33705c9cdea984fbe9e523b4978ffe53812" translate="yes" xml:space="preserve">
          <source>Changed: Prior to 5.3.0, exceptions thrown in the &lt;a href=&quot;function.autoload&quot;&gt;__autoload()&lt;/a&gt; function could not be caught in the &lt;a href=&quot;language.exceptions&quot;&gt;catch&lt;/a&gt; block, and would result in a fatal error. Exceptions now thrown in the __autoload function can be caught in the &lt;a href=&quot;language.exceptions&quot;&gt;catch&lt;/a&gt; block, with one provison. If throwing a custom exception, then the custom exception class must be available. The __autoload function may be used recursively to autoload the custom exception class.</source>
          <target state="translated">변경 : 5.3.0 이전에는 &lt;a href=&quot;function.autoload&quot;&gt;__autoload ()&lt;/a&gt; 함수 에서 발생한 예외를 &lt;a href=&quot;language.exceptions&quot;&gt;catch&lt;/a&gt; 블록 에서 포착 할 수 없어 치명적인 오류가 발생했습니다. __autoload 함수에서 발생한 예외는 &lt;a href=&quot;language.exceptions&quot;&gt;catch&lt;/a&gt; 블록에서 하나의 프로파일로 포착 될 수 있습니다 . 사용자 정의 예외가 발생하면 사용자 정의 예외 클래스를 사용할 수 있어야합니다. __autoload 함수는 재귀 적으로 사용되어 사용자 정의 예외 클래스를 자동로드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd4fbafec62d236fcf8d36358fa92d615dce4a27" translate="yes" xml:space="preserve">
          <source>Changed: The &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state()&lt;/a&gt; static method is now called for classes exported by &lt;a href=&quot;function.var-export&quot;&gt;var_export()&lt;/a&gt;.</source>
          <target state="translated">변경 : 이제 &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state ()&lt;/a&gt; 정적 메소드가 &lt;a href=&quot;function.var-export&quot;&gt;var_export ()에&lt;/a&gt; 의해 내 보낸 클래스에 대해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="5500f83937e11f05262b313ec2dc5d9216a3d89c" translate="yes" xml:space="preserve">
          <source>Changed: The &lt;a href=&quot;language.oop5.magic#object.tostring&quot;&gt;__toString()&lt;/a&gt; method was only called when it was directly combined with &lt;a href=&quot;function.echo&quot;&gt;echo&lt;/a&gt; or &lt;a href=&quot;function.print&quot;&gt;print&lt;/a&gt;. But now, it is called in any string context (e.g. in &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt; with &lt;em&gt;%s&lt;/em&gt; modifier) but not in other types contexts (e.g. with &lt;em&gt;%d&lt;/em&gt; modifier). Since PHP 5.2.0, converting objects without a &lt;em&gt;__toString&lt;/em&gt; method to string emits a &lt;strong&gt;&lt;code&gt;E_RECOVERABLE_ERROR&lt;/code&gt;&lt;/strong&gt; level error.</source>
          <target state="translated">변경 : &lt;a href=&quot;language.oop5.magic#object.tostring&quot;&gt;__toString ()&lt;/a&gt; 메소드는 &lt;a href=&quot;function.echo&quot;&gt;echo&lt;/a&gt; 또는 &lt;a href=&quot;function.print&quot;&gt;print&lt;/a&gt; 와 직접 결합 된 경우에만 호출되었습니다 . 하지만 지금, 그것은 (예를 들어 어떤 문자열 컨텍스트에서 호출 &lt;a href=&quot;function.printf&quot;&gt;의 printf ()&lt;/a&gt; 와 함께 &lt;em&gt;%의&lt;/em&gt; 다른 유형의 맥락에서 수정)하지만 (예 :와 &lt;em&gt;% D&lt;/em&gt; 수정). PHP 5.2.0부터 &lt;em&gt;__toString&lt;/em&gt; 메소드가 없는 객체 를 문자열 로 변환 하면 &lt;strong&gt; &lt;code&gt;E_RECOVERABLE_ERROR&lt;/code&gt; &lt;/strong&gt; 레벨 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="164b3d4809f98d0458414f1bf9cf3c9dcba16bb5" translate="yes" xml:space="preserve">
          <source>Changelog</source>
          <target state="translated">Changelog</target>
        </trans-unit>
        <trans-unit id="221b3aae0a8f71bac27555a4910a484a14e614ca" translate="yes" xml:space="preserve">
          <source>Changelog &amp;rarr;</source>
          <target state="translated">변경 내역 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="2245f7b79f45ed4bc3f63e4a999b6dbd4aba3e7d" translate="yes" xml:space="preserve">
          <source>Changes PHP's current directory to &lt;code&gt;directory&lt;/code&gt;.</source>
          <target state="translated">PHP의 현재 디렉토리를 &lt;code&gt;directory&lt;/code&gt; 로 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="aad7b18f58ecaf616397a22cb585ac533a34a03b" translate="yes" xml:space="preserve">
          <source>Changes any pixel that matches color with the color defined by fill.</source>
          <target state="translated">채우기로 정의 된 색상과 색상이 일치하는 모든 픽셀을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="33b0e877a5a68daa827b8ecbfcfc36dbd22f3391" translate="yes" xml:space="preserve">
          <source>Changes any pixel that matches color with the color defined by fill. This method is available if Imagick has been compiled against ImageMagick version 6.3.8 or newer.</source>
          <target state="translated">채우기로 정의 된 색상과 색상이 일치하는 모든 픽셀을 변경합니다. 이 방법은 Imagick이 ImageMagick 버전 6.3.8 이상에서 컴파일 된 경우 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3ad9ab828f0e604ae29cddd57eb07b21fe8bc64" translate="yes" xml:space="preserve">
          <source>Changes file, or directory permissions.</source>
          <target state="translated">파일 또는 디렉토리 권한을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="aaca8d3a13b18b8991f34a88a65438c0ac406cf0" translate="yes" xml:space="preserve">
          <source>Changes the color value of any pixel that matches target and is an immediate neighbor.</source>
          <target state="translated">대상과 일치하고 바로 인접한 픽셀의 색상 값을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="bf232318789517a6cf83f2eb1d3c0dd614ecb1fe" translate="yes" xml:space="preserve">
          <source>Changes the color value of any pixel that matches target and is an immediate neighbor. As of ImageMagick 6.3.8 this method has been deprecated and &lt;a href=&quot;imagick.floodfillpaintimage&quot;&gt;Imagick::floodfillPaintImage()&lt;/a&gt; should be used instead.</source>
          <target state="translated">대상과 일치하고 바로 인접한 픽셀의 색상 값을 변경합니다. ImageMagick 6.3.8부터이 메소드는 더 이상 사용되지 않으며 대신 &lt;a href=&quot;imagick.floodfillpaintimage&quot;&gt;Imagick :: floodfillPaintImage ()를&lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="b4094769f857f4007692ca323b9226912ea700fd" translate="yes" xml:space="preserve">
          <source>Changes the color value of any pixel that matches target and is an immediate neighbor. This method is a replacement for deprecated &lt;a href=&quot;imagick.paintfloodfillimage&quot;&gt;Imagick::paintFloodFillImage()&lt;/a&gt;. This method is available if Imagick has been compiled against ImageMagick version 6.3.8 or newer.</source>
          <target state="translated">대상과 일치하고 바로 인접한 픽셀의 색상 값을 변경합니다. 이 메소드는 더 이상 사용되지 않는 &lt;a href=&quot;imagick.paintfloodfillimage&quot;&gt;Imagick :: paintFloodFillImage ()를&lt;/a&gt; 대체합니다 . 이 방법은 Imagick이 ImageMagick 버전 6.3.8 이상에서 컴파일 된 경우 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eec1f99348c00a6241d4b7b2b045e9b34efdce55" translate="yes" xml:space="preserve">
          <source>Changes the current directory to the specified one.</source>
          <target state="translated">현재 디렉토리를 지정된 디렉토리로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="e213780a032815f48bfcbd519d9022a9db4a2aaa" translate="yes" xml:space="preserve">
          <source>Changes the default external entity loader.</source>
          <target state="translated">기본 외부 엔티티 로더를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="97ffcc419f4cc139b24bc7720a272c2a5fce9509" translate="yes" xml:space="preserve">
          <source>Changes the driver error handling and logging configurations.</source>
          <target state="translated">드라이버 오류 처리 및 로깅 구성을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="033e04666590a71720b9391e8cff57a6956fa997" translate="yes" xml:space="preserve">
          <source>Changes the file descriptor on which the buffered event operates.</source>
          <target state="translated">버퍼링 된 이벤트가 작동하는 파일 디스크립터를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="f835aaec1e6abbcd91c87831f5f5a921afab34b2" translate="yes" xml:space="preserve">
          <source>Changes the root directory of the current process to &lt;code&gt;directory&lt;/code&gt;, and changes the current working directory to &quot;/&quot;.</source>
          <target state="translated">현재 프로세스의 루트 디렉토리를 &lt;code&gt;directory&lt;/code&gt; 로 변경하고 현재 작업 디렉토리를 &quot;/&quot;로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="1ffc2bea1567db5399d04be318385ad0cb89019c" translate="yes" xml:space="preserve">
          <source>Changes the size of an image to the given dimensions and removes any associated profiles. The goal is to produce small low cost thumbnail images suited for display on the Web. If TRUE is given as a third parameter then columns and rows parameters are used as maximums for each side. Both sides will be scaled down until the match or are smaller than the parameter given for the side.</source>
          <target state="translated">이미지의 크기를 주어진 치수로 변경하고 연관된 프로파일을 제거합니다. 목표는 웹에 표시하기에 적합한 저렴한 소형 썸네일 이미지를 만드는 것입니다. TRUE가 세 번째 매개 변수로 제공되면 열 및 행 매개 변수가 각면의 최대 값으로 사용됩니다. 양쪽이 일치 할 때까지 축소되거나 측면에 지정된 매개 변수보다 작습니다.</target>
        </trans-unit>
        <trans-unit id="a45ee2ebc92943db53db032acaa5788bb4e22776" translate="yes" xml:space="preserve">
          <source>Changes the size of an image to the given dimensions and removes any associated profiles. The goal is to produce small, low cost thumbnail images suited for display on the Web. If &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; is given as a third parameter then columns and rows parameters are used as maximums for each side. Both sides will be scaled down until they match or are smaller than the parameter given for the side.</source>
          <target state="translated">이미지의 크기를 주어진 치수로 변경하고 연관된 프로파일을 제거합니다. 목표는 웹에 표시하기에 적합한 작고 저렴한 썸네일 이미지를 생성하는 것입니다. &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; &lt;/strong&gt; 가 세 번째 매개 변수로 제공 되면 열 및 행 매개 변수가 각면의 최대 값으로 사용됩니다. 양쪽에 대해 주어진 매개 변수보다 작거나 작을 때까지 양쪽이 축소됩니다.</target>
        </trans-unit>
        <trans-unit id="3f9c20bc33517c3c415c28cc8e32988a58f69d69" translate="yes" xml:space="preserve">
          <source>Changes the specified servlet type to a new value</source>
          <target state="translated">지정된 서블릿 유형을 새 값으로 변경</target>
        </trans-unit>
        <trans-unit id="6cca4123de876d4c2ef2ce4b31af9814eba6610e" translate="yes" xml:space="preserve">
          <source>Changes the timeout in seconds used for all network related functions. &lt;code&gt;value&lt;/code&gt; must be an integer that is greater than 0. The default timeout is 90 seconds.</source>
          <target state="translated">모든 네트워크 관련 기능에 사용되는 시간 초과를 초 단위로 변경합니다. &lt;code&gt;value&lt;/code&gt; 는 0보다 큰 정수 여야합니다. 기본 시간 초과는 90 초입니다.</target>
        </trans-unit>
        <trans-unit id="d2043433d5e57a83a9568a8b993a69f510c21286" translate="yes" xml:space="preserve">
          <source>Changes the transparency value of any pixel that matches target and is an immediate neighbor. If the method &lt;strong&gt;&lt;code&gt;FillToBorderMethod&lt;/code&gt;&lt;/strong&gt; is specified, the transparency value is changed for any neighbor pixel that does not match the bordercolor member of image.</source>
          <target state="translated">대상과 일치하고 바로 인접한 픽셀의 투명도 값을 변경합니다. &lt;strong&gt; &lt;code&gt;FillToBorderMethod&lt;/code&gt; &lt;/strong&gt; 메서드 가 지정되면 이미지의 bordercolor 멤버와 일치하지 않는 인접 픽셀에 대해 투명도 값이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="aa4ddf7cdc87e7a74091ae17c9e7a1288ff65d41" translate="yes" xml:space="preserve">
          <source>Changes the user of the specified database connection and sets the current database.</source>
          <target state="translated">지정된 데이터베이스 연결의 사용자를 변경하고 현재 데이터베이스를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="c6aec88534c67f71901c4cb63d16d8be9e025baa" translate="yes" xml:space="preserve">
          <source>Changes the value of individual pixels based on the intensity of each pixel compared to threshold. The result is a high-contrast, two color image.</source>
          <target state="translated">임계 값과 비교 한 각 픽셀의 강도에 따라 개별 픽셀의 값을 변경합니다. 결과는 고 대비 2 색 이미지입니다.</target>
        </trans-unit>
        <trans-unit id="e9e99e4f0aa07dd5df5c6f9d557338fd96503c28" translate="yes" xml:space="preserve">
          <source>Changes the value of individual pixels based on the intensity of each pixel compared to threshold. The result is a high-contrast, two color image. This method is available if Imagick has been compiled against ImageMagick version 6.2.9 or newer.</source>
          <target state="translated">임계 값과 비교 한 각 픽셀의 강도에 따라 개별 픽셀의 값을 변경합니다. 결과는 고 대비 2 색 이미지입니다. 이 방법은 Imagick이 ImageMagick 버전 6.2.9 이상에 대해 컴파일 된 경우 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a576a7a234b0502c567083e79bb3dcdc7c4d136" translate="yes" xml:space="preserve">
          <source>Changes the value of the internal configuration variable specified by &lt;code&gt;type&lt;/code&gt; to &lt;code&gt;charset&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 으로 지정된 내부 구성 변수의 값 을 &lt;code&gt;charset&lt;/code&gt; 로 변경 합니다.</target>
        </trans-unit>
        <trans-unit id="b8b64e63fc85413ba2792dbbb7da686c18e670c8" translate="yes" xml:space="preserve">
          <source>Changes to the PHP 5 OOP model are logged here. Descriptions and other notes regarding these features are documented within the OOP 5 documentation.</source>
          <target state="translated">PHP 5 OOP 모델에 대한 변경 사항이 여기에 기록됩니다. 이러한 기능에 대한 설명 및 기타 참고 사항은 OOP 5 설명서에 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="65a7f1ae65d7b422f9ee7c6694233280151dd562" translate="yes" xml:space="preserve">
          <source>Changes to the parent directory.</source>
          <target state="translated">부모 디렉토리로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="d9750570b86d4c79dc2c2cdd0f90ee3c321f1de9" translate="yes" xml:space="preserve">
          <source>Changes were made to bring this function into line with Perl:</source>
          <target state="translated">이 기능을 Perl에 맞게 변경했습니다.</target>
        </trans-unit>
        <trans-unit id="10bc8cdbf0657cf0f50514d32547661d5b18e7e5" translate="yes" xml:space="preserve">
          <source>Changing Method Visibility</source>
          <target state="translated">분석법 가시성 변경</target>
        </trans-unit>
        <trans-unit id="99218d648225e19bb44c8828dbf753bd2455c472" translate="yes" xml:space="preserve">
          <source>Changing Sandbox Settings</source>
          <target state="translated">샌드 박스 설정 변경</target>
        </trans-unit>
        <trans-unit id="f460dadea528354731454a9d93e4eb432aad59c3" translate="yes" xml:space="preserve">
          <source>Changing the data structure will require that PHP be running as the same user that created the queue, owns the queue (as determined by the existing msg_perm.xxx fields), or be running with root privileges. root privileges are required to raise the msg_qbytes values above the system defined limit.</source>
          <target state="translated">데이터 구조를 변경하려면 PHP가 대기열을 생성 한 동일한 사용자로 실행 중이거나 대기열을 소유하거나 (기존 msg_perm.xxx 필드에 의해 결정된대로) 루트 권한으로 실행되어야합니다. msg_qbytes 값을 시스템 정의 한계 이상으로 올리려면 루트 권한이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f766ed0a0309e86d7faf43e72950a81da7106bc2" translate="yes" xml:space="preserve">
          <source>Changing the interpolation method affects the following functions when rendering:</source>
          <target state="translated">보간 방법을 변경하면 렌더링시 다음 기능에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="15daad1a434f587bf23acd8e16f86e643cf178e1" translate="yes" xml:space="preserve">
          <source>Changing the reporting mode is now be per-request, rather than per-process.</source>
          <target state="translated">보고 모드 변경은 이제 프로세스가 아니라 요청마다 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="8ee9a618de8647ddcc6248ceb082c3098b6f8ba5" translate="yes" xml:space="preserve">
          <source>Changing the values of the &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; directly is possible by passing them by reference.</source>
          <target state="translated">참조로 전달 하여 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 의 값을 직접 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="685f8bf0f20519c1595d8675740d4f6e4ab98c6f" translate="yes" xml:space="preserve">
          <source>Chapter 9.3 of Applied Cryptography by Schneier (ISBN 0-471-11709-9)</source>
          <target state="translated">Schneier (ISBN 0-471-11709-9)의 Applied Cryptography의 9.3 장</target>
        </trans-unit>
        <trans-unit id="ee9946c82d4a077c5be79e3015a3d2479d9fcaf2" translate="yes" xml:space="preserve">
          <source>Character</source>
          <target state="translated">Character</target>
        </trans-unit>
        <trans-unit id="1b0fccd7912024f8e7faaf2de205ad571e0d54fa" translate="yes" xml:space="preserve">
          <source>Character (class)es</source>
          <target state="translated">캐릭터 (클래스)</target>
        </trans-unit>
        <trans-unit id="bf238be65bb5e7ebb05fdca2c63f71cc0a076a1a" translate="yes" xml:space="preserve">
          <source>Character classes</source>
          <target state="translated">캐릭터 클래스</target>
        </trans-unit>
        <trans-unit id="420d8ea0224b3183e545b1f3d610c0f0bae2c311" translate="yes" xml:space="preserve">
          <source>Character classes &amp;rarr;</source>
          <target state="translated">캐릭터 클래스 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a957a85791e15e334ec635968e8b96c22c9919cf" translate="yes" xml:space="preserve">
          <source>Character data handler is called for every piece of a text in the XML document. It can be called multiple times inside each fragment (e.g. for non-ASCII strings).</source>
          <target state="translated">XML 문서의 모든 텍스트 조각에 대해 문자 데이터 핸들러가 호출됩니다. 각 프래그먼트 안에서 여러 번 호출 할 수 있습니다 (예 : 비 ASCII 문자열의 경우).</target>
        </trans-unit>
        <trans-unit id="0a76df4973312c36227104658aa1870a645e4055" translate="yes" xml:space="preserve">
          <source>Character encoding name to use. If it is omitted, internal character encoding is used.</source>
          <target state="translated">사용할 문자 인코딩 이름입니다. 생략하면 내부 문자 인코딩이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="08db14fe8aada6d236f274a8e523ab6a0ad06d17" translate="yes" xml:space="preserve">
          <source>Character representing a digit in the pattern.</source>
          <target state="translated">패턴에서 숫자를 나타내는 문자입니다.</target>
        </trans-unit>
        <trans-unit id="53574c33d0df905a3dff3d09e8461d806c02a865" translate="yes" xml:space="preserve">
          <source>Character sequence values are limited to a length of one. If a length greater than one is entered, only the first character is used.</source>
          <target state="translated">문자 순서 값은 1의 길이로 제한됩니다. 1보다 큰 길이를 입력하면 첫 번째 문자 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="30e9d37f8810b593710f081d4f841fbff6bdfcb9" translate="yes" xml:space="preserve">
          <source>Character set name</source>
          <target state="translated">문자 세트 이름</target>
        </trans-unit>
        <trans-unit id="1762947ab70554a2fe49eb5036055836041db7bb" translate="yes" xml:space="preserve">
          <source>Character set status (?)</source>
          <target state="translated">문자 세트 상태 (?)</target>
        </trans-unit>
        <trans-unit id="a6cf14120888c6904e3c860cbb913b1af0d382e1" translate="yes" xml:space="preserve">
          <source>Character string specifying text encoding</source>
          <target state="translated">텍스트 인코딩을 지정하는 문자열</target>
        </trans-unit>
        <trans-unit id="0b9630fe3a2f91f46538d00c3f2a365f3bb880a0" translate="yes" xml:space="preserve">
          <source>Characters encoded are &lt;em&gt;NUL (ASCII 0), \n, \r, \, ', &quot;, and Control-Z&lt;/em&gt;.</source>
          <target state="translated">인코딩 된 문자는 &lt;em&gt;NUL (ASCII 0), \ n, \ r, \, ', &quot;및 Control-Z&lt;/em&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cd32fb6a40f700b334caf2cde53e39595abc9bc5" translate="yes" xml:space="preserve">
          <source>Characters followed by a colon (parameter requires value)</source>
          <target state="translated">콜론 뒤에 오는 문자 (매개 변수에는 값이 필요함)</target>
        </trans-unit>
        <trans-unit id="64cd64497e5b90a1510b23ba826b333f4afbf65d" translate="yes" xml:space="preserve">
          <source>Characters followed by two colons (optional value)</source>
          <target state="translated">문자 다음에 두 개의 콜론 (선택적 값)</target>
        </trans-unit>
        <trans-unit id="4535003f4197f450a0c449d17f48f1f048c5ccc5" translate="yes" xml:space="preserve">
          <source>Characters to ignore when escaping.</source>
          <target state="translated">탈출 할 때 무시할 문자</target>
        </trans-unit>
        <trans-unit id="ca739ebcfa4270b1dc840540a0bd2f2057f143bb" translate="yes" xml:space="preserve">
          <source>Characters within &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;s may be accessed and modified by specifying the zero-based offset of the desired character after the &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; using square &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; brackets, as in &lt;var&gt;&lt;var&gt;$str[42]&lt;/var&gt;&lt;/var&gt;. Think of a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; as an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; of characters for this purpose. The functions &lt;a href=&quot;function.substr&quot;&gt;substr()&lt;/a&gt; and &lt;a href=&quot;function.substr-replace&quot;&gt;substr_replace()&lt;/a&gt; can be used when you want to extract or replace more than 1 character.</source>
          <target state="translated">&lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; s 내의 문자 는 &lt;var&gt;&lt;var&gt;$str[42]&lt;/var&gt;&lt;/var&gt; 와 같이 사각형 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 괄호를 사용 하여 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 다음에 원하는 문자의 0부터 시작하는 오프셋을 지정하여 액세스하고 수정할 수 있습니다 . 이 목적을 위해 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; 을 문자 &lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 로 생각하십시오 . &lt;a href=&quot;function.substr&quot;&gt;substr ()&lt;/a&gt; 및 &lt;a href=&quot;function.substr-replace&quot;&gt;substr_replace ()&lt;/a&gt; 함수 는 둘 이상의 문자를 추출하거나 대체 할 때 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="805b8364dd741b70184f3241017dba0068056c09" translate="yes" xml:space="preserve">
          <source>Charset</source>
          <target state="translated">Charset</target>
        </trans-unit>
        <trans-unit id="5eb495dcaa3cab5e988c5785109614edc5af1f7f" translate="yes" xml:space="preserve">
          <source>Charset that was used by Mac OS.</source>
          <target state="translated">Mac OS에서 사용 된 문자셋</target>
        </trans-unit>
        <trans-unit id="5f2db9dff102c0e6c941cd0f3cb314ce6100892c" translate="yes" xml:space="preserve">
          <source>Check &lt;a href=&quot;http://tidy.sourceforge.net/docs/quickref.html&quot;&gt;&amp;raquo; http://tidy.sourceforge.net/docs/quickref.html&lt;/a&gt; for an explanation about each option.</source>
          <target state="translated">각 옵션에 대한 설명은 &lt;a href=&quot;http://tidy.sourceforge.net/docs/quickref.html&quot;&gt;&amp;raquo;http://tidy.sourceforge.net/docs/quickref.html&lt;/a&gt; 을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="5737f92df812ea9d51b9a20ee1bb663b9bee2e5a" translate="yes" xml:space="preserve">
          <source>Check http://tidy.sourceforge.net/docs/quickref.html for an explanation about each option.</source>
          <target state="translated">각 옵션에 대한 설명은 http://tidy.sourceforge.net/docs/quickref.html을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="eb98f71b068eb82421ede3a637555f8a4e007040" translate="yes" xml:space="preserve">
          <source>Check if a &lt;var&gt;php.ini&lt;/var&gt; file is loaded, and retrieve its path.</source>
          <target state="translated">&lt;var&gt;php.ini&lt;/var&gt; 파일이로드 되었는지 확인 하고 경로를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="2c6af997fb277ba0d59a2595d2023c95cfb84726" translate="yes" xml:space="preserve">
          <source>Check if a code point has the Alphabetic Unicode property.</source>
          <target state="translated">코드 포인트에 알파벳 유니 코드 속성이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ad47924164bf60bfcb04298c37dae3f4974f0173" translate="yes" xml:space="preserve">
          <source>Check if a code point has the Lowercase Unicode property.</source>
          <target state="translated">코드 포인트에 소문자 유니 코드 속성이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="1f860d9cd59ce25379eb7a201863e64d1d167459" translate="yes" xml:space="preserve">
          <source>Check if a code point has the Uppercase Unicode property.</source>
          <target state="translated">코드 포인트에 대문자 유니 코드 속성이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c478d9699ae97aa0b715c532d2d86ad9dac2d42f" translate="yes" xml:space="preserve">
          <source>Check if a code point has the White_Space Unicode property.</source>
          <target state="translated">코드 포인트에 White_Space Unicode 속성이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f5f93107f26f6edc0d23725bdcedfc55da0e8ab8" translate="yes" xml:space="preserve">
          <source>Check if a number is a perfect square.</source>
          <target state="translated">숫자가 완벽한 제곱인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="913b70d0c042c58061f00d2de8cf83d5613a540b" translate="yes" xml:space="preserve">
          <source>Check if the file is readable.</source>
          <target state="translated">파일을 읽을 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0f3694328f933a8d76d9d117b4528c22e05297b7" translate="yes" xml:space="preserve">
          <source>Check if the parser is strict or lenient in interpreting inputs that do not match the pattern exactly.</source>
          <target state="translated">패턴과 정확히 일치하지 않는 입력을 해석하는 데 구문 분석기가 엄격하거나 관대한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="4ed52f959552a8a4a4a9646af0ea7644b94be392" translate="yes" xml:space="preserve">
          <source>Check the request whether it is a Ajax Request.</source>
          <target state="translated">요청이 Ajax 요청인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5cf34147024131938bac0b3d54fcc093b89b043d" translate="yes" xml:space="preserve">
          <source>Check whether EOF has been reached.</source>
          <target state="translated">EOF에 도달했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="21fbb7538f92f13712022d935c61d5495e234060" translate="yes" xml:space="preserve">
          <source>Check whether an item exists</source>
          <target state="translated">품목이 존재하는지 확인</target>
        </trans-unit>
        <trans-unit id="0b4619d9234493ffa2f936099d20307020fe8bbc" translate="yes" xml:space="preserve">
          <source>Check whether current &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; position is a valid file.</source>
          <target state="translated">현재 &lt;a href=&quot;class.directoryiterator&quot;&gt;DirectoryIterator&lt;/a&gt; 위치가 유효한 파일 인지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a85c1e7c6051b1d8d7c7fa56f354b157c9ea9dd" translate="yes" xml:space="preserve">
          <source>Check whether the current element is valid.</source>
          <target state="translated">현재 요소가 유효한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c044dde611e8ceabad3836652992a60970cdab5b" translate="yes" xml:space="preserve">
          <source>Check whether the current position is valid.</source>
          <target state="translated">현재 위치가 유효한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7d0acd387e596dc9f56cdb7b444962842d034b6d" translate="yes" xml:space="preserve">
          <source>Check whether the inner iterator's current element has children.</source>
          <target state="translated">내부 반복자의 현재 요소에 자식이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ff41c53d806bb24f3addf28b47f72640fd536da6" translate="yes" xml:space="preserve">
          <source>Checking non-numeric offsets of strings now returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">문자열의 숫자가 아닌 오프셋을 확인하면 &lt;strong&gt; &lt;code&gt;FALSE&lt;/code&gt; 가&lt;/strong&gt; 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="135d79c0e175fe51b17b23ffd10eb6bc806d0941" translate="yes" xml:space="preserve">
          <source>Checking non-numeric offsets of strings returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">문자열의 숫자가 아닌 오프셋을 확인하면 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 가&lt;/strong&gt; 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="221fc88d6214747954efd404b3cac6995de3fa4e" translate="yes" xml:space="preserve">
          <source>Checks a binary Unicode property for a code point.</source>
          <target state="translated">코드 포인트의 이진 유니 코드 속성을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b54858c27c01c5790b0ccc79a833c3273528cace" translate="yes" xml:space="preserve">
          <source>Checks an OAuth request.</source>
          <target state="translated">OAuth 요청을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ae1d3285924a78b70684bbcd936a3b85185ba105" translate="yes" xml:space="preserve">
          <source>Checks each key to see whether it has a valid variable name. It also checks for collisions with existing variables in the symbol table.</source>
          <target state="translated">각 키에 유효한 변수 이름이 있는지 확인하십시오. 또한 기호 테이블에서 기존 변수와의 충돌을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c8f5e6ff76e414f3028249aec68d1a94d90335ed" translate="yes" xml:space="preserve">
          <source>Checks if a $langtag filter matches with $locale according to RFC 4647's basic filtering algorithm</source>
          <target state="translated">RFC 4647의 기본 필터링 알고리즘에 따라 $ langtag 필터가 $ locale과 일치하는지 확인</target>
        </trans-unit>
        <trans-unit id="06fe4313ecf10083e1f1d779531154a575b35c1d" translate="yes" xml:space="preserve">
          <source>Checks if a class is an anonymous class.</source>
          <target state="translated">클래스가 익명 클래스인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e45f30eee5a7dc412f3d4b0923f55e7887c43e6b" translate="yes" xml:space="preserve">
          <source>Checks if a class is final.</source>
          <target state="translated">수업이 마지막인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a4469626d8cd9bbc805792001a40ac098dff3552" translate="yes" xml:space="preserve">
          <source>Checks if a default value for the parameter is available.</source>
          <target state="translated">매개 변수의 기본값이 사용 가능한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="47323b7c9f3b14db0aae031a04f3b7c74a31b2ef" translate="yes" xml:space="preserve">
          <source>Checks if a field exists</source>
          <target state="translated">필드가 존재하는지 확인</target>
        </trans-unit>
        <trans-unit id="b86a3f5a6fe53ecd5e146b264d9795bbcf0916c9" translate="yes" xml:space="preserve">
          <source>Checks if a particular field exists. This is used when the object is treated as an array.</source>
          <target state="translated">특정 필드가 존재하는지 확인합니다. 객체가 배열로 취급 될 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="306063054c019193d6fc3b6309baa408b1087833" translate="yes" xml:space="preserve">
          <source>Checks if a stream, or a URL, is a local one or not.</source>
          <target state="translated">스트림 또는 URL이 로컬 스트림인지 여부를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5ffb02d290add09f50ac9cf0344523da30f78f2f" translate="yes" xml:space="preserve">
          <source>Checks if a transaction is currently active within the driver. This method only works for database drivers that support transactions.</source>
          <target state="translated">드라이버 내에서 트랜잭션이 현재 활성화되어 있는지 확인합니다. 이 방법은 트랜잭션을 지원하는 데이터베이스 드라이버에서만 작동합니다.</target>
        </trans-unit>
        <trans-unit id="70c32224509c3146e916019846902175a21d8be7" translate="yes" xml:space="preserve">
          <source>Checks if all of the characters in the provided &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;code&gt;text&lt;/code&gt;, are alphabetic. In the standard &lt;em&gt;C&lt;/em&gt; locale letters are just &lt;em&gt;[A-Za-z]&lt;/em&gt; and &lt;strong&gt;ctype_alpha()&lt;/strong&gt; is equivalent to &lt;em&gt;(ctype_upper($text) || ctype_lower($text))&lt;/em&gt; if $text is just a single character, but other languages have letters that are considered neither upper nor lower case.</source>
          <target state="translated">수표는 제공된에있는 모든 문자 경우 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; , &lt;code&gt;text&lt;/code&gt; , 알파벳입니다. 표준 &lt;em&gt;C&lt;/em&gt; 로케일 문자는 &lt;em&gt;[A-Za-z]&lt;/em&gt; 이고 $ text가 단일 문자이지만 다른 언어에 문자가있는 경우 &lt;strong&gt;ctype_alpha ()&lt;/strong&gt; 는 &lt;em&gt;(ctype_upper ($ text) || ctype_lower ($ text))와 같습니다.&lt;/em&gt; 대문자 또는 소문자로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3cd69b26e9c9effa6307b7609332c3a4844f6bc4" translate="yes" xml:space="preserve">
          <source>Checks if all of the characters in the provided &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;code&gt;text&lt;/code&gt;, are alphanumeric.</source>
          <target state="translated">수표는 제공된에있는 모든 문자 경우 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; , &lt;code&gt;text&lt;/code&gt; , 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="3ca2012f3f61018020d57a9225bda883c6138b3e" translate="yes" xml:space="preserve">
          <source>Checks if all of the characters in the provided &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;code&gt;text&lt;/code&gt;, are control characters. Control characters are e.g. line feed, tab, escape.</source>
          <target state="translated">수표는 제공된에있는 모든 문자 경우 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; , &lt;code&gt;text&lt;/code&gt; , 제어 문자입니다. 제어 문자는 예를 들어 줄 바꿈, 탭, 이스케이프입니다.</target>
        </trans-unit>
        <trans-unit id="f5a9a798aefacb9d1aea5d1f7e345c8e5e68c5da" translate="yes" xml:space="preserve">
          <source>Checks if all of the characters in the provided &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;code&gt;text&lt;/code&gt;, are hexadecimal 'digits'.</source>
          <target state="translated">수표는 제공된에있는 모든 문자 경우 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; , &lt;code&gt;text&lt;/code&gt; 16 진수 '자리'입니다.</target>
        </trans-unit>
        <trans-unit id="794395ee5fc0c23dcdfab9cc3501f6398289934b" translate="yes" xml:space="preserve">
          <source>Checks if all of the characters in the provided &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;code&gt;text&lt;/code&gt;, are lowercase letters.</source>
          <target state="translated">수표는 제공된에있는 모든 문자 경우 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; , &lt;code&gt;text&lt;/code&gt; , 소문자입니다.</target>
        </trans-unit>
        <trans-unit id="ce4d9a8bbe6af10bcc85b90c549856e3ef16e95c" translate="yes" xml:space="preserve">
          <source>Checks if all of the characters in the provided &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;code&gt;text&lt;/code&gt;, are numerical.</source>
          <target state="translated">수표는 제공된에있는 모든 문자 경우 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; , &lt;code&gt;text&lt;/code&gt; , 수치이다.</target>
        </trans-unit>
        <trans-unit id="9903500e701ad12c56c603842679bdabcca45672" translate="yes" xml:space="preserve">
          <source>Checks if all of the characters in the provided &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;code&gt;text&lt;/code&gt;, are printable.</source>
          <target state="translated">수표는 제공된에있는 모든 문자 경우 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; , &lt;code&gt;text&lt;/code&gt; , 인쇄 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30dc1e8df015b2418033ffb1144c5696f80acd23" translate="yes" xml:space="preserve">
          <source>Checks if all of the characters in the provided &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;code&gt;text&lt;/code&gt;, are punctuation character.</source>
          <target state="translated">수표는 제공된에있는 모든 문자 경우 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; , &lt;code&gt;text&lt;/code&gt; , 문장 부호 문자입니다.</target>
        </trans-unit>
        <trans-unit id="8b8004051b72f937d7865e990a3ee154af97a34f" translate="yes" xml:space="preserve">
          <source>Checks if all of the characters in the provided &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;code&gt;text&lt;/code&gt;, are uppercase characters.</source>
          <target state="translated">수표는 제공된에있는 모든 문자 경우 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; , &lt;code&gt;text&lt;/code&gt; , 대문자 문자입니다.</target>
        </trans-unit>
        <trans-unit id="a78f8f4aa86fe593f398e59cd5578a3a76c22e92" translate="yes" xml:space="preserve">
          <source>Checks if all of the characters in the provided &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;code&gt;text&lt;/code&gt;, creates visible output.</source>
          <target state="translated">제공된에있는 모든 문자 경우 확인 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; , &lt;code&gt;text&lt;/code&gt; , 눈에 보이는 출력을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ef34c14e1e4a2502bfbeab8392db52bfa84e37b5" translate="yes" xml:space="preserve">
          <source>Checks if all of the characters in the provided &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, &lt;code&gt;text&lt;/code&gt;, creates whitespace.</source>
          <target state="translated">수표는 제공된에있는 모든 문자 경우 &lt;a href=&quot;language.types.string&quot;&gt;문자열&lt;/a&gt; , &lt;code&gt;text&lt;/code&gt; , 공백을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7f8c6c85d815bcbf87a8f99bea1d85a02340f4e9" translate="yes" xml:space="preserve">
          <source>Checks if an iterator is attached or not.</source>
          <target state="translated">이터레이터가 연결되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2b8d2ef9684cafbdbe3102197e088d4dfbda9507" translate="yes" xml:space="preserve">
          <source>Checks if an object is an instance of a class.</source>
          <target state="translated">객체가 클래스의 인스턴스인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1bd4b9b0edd57c8e2ed082119f9c9394b8790881" translate="yes" xml:space="preserve">
          <source>Checks if given string contains any suspicious characters like letters which are almost identical visually, but are Unicode characters from different sets.</source>
          <target state="translated">주어진 문자열에 시각적으로 거의 동일하지만 다른 세트의 유니 코드 문자 인 문자와 같은 의심스러운 문자가 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="928cd999bc9d0473c95700efbf67c234d9fae0fe" translate="yes" xml:space="preserve">
          <source>Checks if one or more APC keys exist.</source>
          <target state="translated">하나 이상의 APC 키가 존재하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="536886be2f355ed54a85a7259ba8e52b5f5bdcf8" translate="yes" xml:space="preserve">
          <source>Checks if one or more APCu entries exist.</source>
          <target state="translated">하나 이상의 APCu 항목이 존재하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f460f0f4466016f4530380db09e72483b596b57b" translate="yes" xml:space="preserve">
          <source>Checks if or where headers have been sent.</source>
          <target state="translated">헤더가 전송되었는지 여부를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7d83c7f49d6315a62749d58e22532632c5b788ab" translate="yes" xml:space="preserve">
          <source>Checks if the &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; contains any more entries.</source>
          <target state="translated">&lt;a href=&quot;language.types.array&quot;&gt;배열&lt;/a&gt; 에 더 많은 항목이 포함되어 있는지 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="dfac49822235065d12cd51c0be2e9ea24617f48e" translate="yes" xml:space="preserve">
          <source>Checks if the Solr server is still alive. Sends a HEAD request to the Apache Solr server.</source>
          <target state="translated">Solr 서버가 아직 활성 상태인지 확인합니다. HEAD 요청을 Apache Solr 서버로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="f68e3a744217cb23e5344d930cc15ac54a14d783" translate="yes" xml:space="preserve">
          <source>Checks if the array contains any more elements.</source>
          <target state="translated">배열에 더 많은 요소가 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="cac7928a1081a91cb7091703313307be1765abc3" translate="yes" xml:space="preserve">
          <source>Checks if the asked &lt;code&gt;feature&lt;/code&gt; is supported for the specified &lt;code&gt;version&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;version&lt;/code&gt; 대해 요청 된 &lt;code&gt;feature&lt;/code&gt; 이 지원 되는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="5206b9e3d6bf2cd5f8f21656f0eaded18d8e0bff" translate="yes" xml:space="preserve">
          <source>Checks if the class constant is private.</source>
          <target state="translated">클래스 상수가 개인용인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7f469bc6dfabb8b4ef722e0c7b73a334118d6055" translate="yes" xml:space="preserve">
          <source>Checks if the class constant is protected.</source>
          <target state="translated">클래스 상수가 보호되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e679c659db8bfcc5b11c82a620e76bcdaa2c7849" translate="yes" xml:space="preserve">
          <source>Checks if the class constant is public.</source>
          <target state="translated">클래스 상수가 public인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8d628457cc75eb81dd74e4f17f9273eae330d0d8" translate="yes" xml:space="preserve">
          <source>Checks if the class is a subclass of a specified class or implements a specified interface.</source>
          <target state="translated">클래스가 지정된 클래스의 하위 클래스인지 확인하거나 지정된 인터페이스를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="364ce7ceda685643659e86f4d431d570333c3bef" translate="yes" xml:space="preserve">
          <source>Checks if the class is abstract.</source>
          <target state="translated">클래스가 추상인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d63f27ea7ab4a3c06c769b1ab3087cf23dd5af45" translate="yes" xml:space="preserve">
          <source>Checks if the class is defined internally by an extension, or the core, as opposed to user-defined.</source>
          <target state="translated">클래스가 사용자 정의와 달리 확장 또는 코어에 의해 내부적으로 정의되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4cf8e55ea886aa7493907e357e327c0258279f87" translate="yes" xml:space="preserve">
          <source>Checks if the class is instantiable.</source>
          <target state="translated">클래스가 인스턴스화 가능한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b5554de93af270b477b1de7d1da39732de431a28" translate="yes" xml:space="preserve">
          <source>Checks if the class method exists in the given &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;object&lt;/code&gt; 에 클래스 메서드가 있는지 확인 합니다 .</target>
        </trans-unit>
        <trans-unit id="6aa3ed32abc23502d73b2b8790b1983cd9cac442" translate="yes" xml:space="preserve">
          <source>Checks if the current entry is writable.</source>
          <target state="translated">현재 항목이 쓰기 가능한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5de13f471368bbd2f25d968ded925f86d9b762ce" translate="yes" xml:space="preserve">
          <source>Checks if the current item is valid.</source>
          <target state="translated">현재 항목이 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ed3490486486bd7918e18b6229f743723b65f4d7" translate="yes" xml:space="preserve">
          <source>Checks if the current iterator position is valid.</source>
          <target state="translated">현재 반복기 위치가 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b2aa0f937087dd75599b78f0b9185294b4e24753" translate="yes" xml:space="preserve">
          <source>Checks if the current position internally is still valid. It is used during foreach operations.</source>
          <target state="translated">현재 내부 위치가 여전히 유효한지 확인합니다. foreach 조작 중에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="68bb96dfbc2a07c19d3db572bab91410b13842af" translate="yes" xml:space="preserve">
          <source>Checks if the doubly linked list contains any more nodes.</source>
          <target state="translated">이중 연결 목록에 더 이상 노드가 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2eb61a60a30d7f2b12a966c15cce4437cb9dc3a9" translate="yes" xml:space="preserve">
          <source>Checks if the event loop was told to exit by &lt;a href=&quot;eventbase.exit&quot;&gt;EventBase::exit()&lt;/a&gt; .</source>
          <target state="translated">&lt;a href=&quot;eventbase.exit&quot;&gt;EventBase :: exit ()에&lt;/a&gt; 의해 이벤트 루프가 종료되었는지를 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="f44f847ad19ef67cf698a318a613848faeeb27a5" translate="yes" xml:space="preserve">
          <source>Checks if the event loop was told to exit by &lt;a href=&quot;eventbase.stop&quot;&gt;EventBase::stop()&lt;/a&gt; .</source>
          <target state="translated">&lt;a href=&quot;eventbase.stop&quot;&gt;EventBase :: stop ()에&lt;/a&gt; 의해 이벤트 루프가 종료되었는지를 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="7c68a722421a963acda3c269a1b88c94bff55baf" translate="yes" xml:space="preserve">
          <source>Checks if the file is executable.</source>
          <target state="translated">파일이 실행 가능한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="176f6019121fb4c189e214ce2bc586d751796af9" translate="yes" xml:space="preserve">
          <source>Checks if the file referenced by this SplFileInfo object exists and is a regular file.</source>
          <target state="translated">이 SplFileInfo 객체가 참조하는 파일이 존재하고 일반 파일인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e8d35a0568093619dd634c0c18acd12d6a660823" translate="yes" xml:space="preserve">
          <source>Checks if the function is &lt;a href=&quot;functions.arguments#functions.variable-arg-list.new&quot;&gt;variadic&lt;/a&gt;.</source>
          <target state="translated">함수가 &lt;a href=&quot;functions.arguments#functions.variable-arg-list.new&quot;&gt;가변적&lt;/a&gt; 인지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="31e227803bf792ac772c47163e13bf849782a926" translate="yes" xml:space="preserve">
          <source>Checks if the function is disabled, via the &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.disable-functions&quot;&gt;disable_functions&lt;/a&gt; directive.</source>
          <target state="translated">&lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.disable-functions&quot;&gt;disable_functions&lt;/a&gt; 지시문을 통해 함수가 비활성화되어 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="07fbdc04de3ec460e7cfab71515c6cfd4bd17f81" translate="yes" xml:space="preserve">
          <source>Checks if the given &lt;code&gt;object&lt;/code&gt; has the class &lt;code&gt;class_name&lt;/code&gt; as one of its parents or implements it.</source>
          <target state="translated">주어진 &lt;code&gt;object&lt;/code&gt; 가 &lt;code&gt;class_name&lt;/code&gt; 클래스를 부모 중 하나인지 또는 구현하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c6fbd19b49c25e019a5e2fb8d4f864aaa8574266" translate="yes" xml:space="preserve">
          <source>Checks if the given &lt;code&gt;object&lt;/code&gt; is of this class or has this class as one of its parents.</source>
          <target state="translated">주어진 &lt;code&gt;object&lt;/code&gt; 가이 클래스에 속하는지 또는이 클래스를 부모 중 하나로 가지고 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="533bf192b51cae1d9c5568205171baf628a90c3a" translate="yes" xml:space="preserve">
          <source>Checks if the given interface has been defined.</source>
          <target state="translated">주어진 인터페이스가 정의되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="29afa77839f3d1128f095b0135af4076585c98ab" translate="yes" xml:space="preserve">
          <source>Checks if the heap contains any more nodes.</source>
          <target state="translated">힙에 더 이상 노드가 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6a64abad15ed9f51552e1ff6b2012fe5e7c468ad" translate="yes" xml:space="preserve">
          <source>Checks if the iterator is valid.</source>
          <target state="translated">이터레이터가 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="bcbe2c27890bf6cf059624688e0543ae28f0483f" translate="yes" xml:space="preserve">
          <source>Checks if the method is a constructor.</source>
          <target state="translated">메소드가 생성자인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d578158d227d22163582931c2b6716fd44bb4d76" translate="yes" xml:space="preserve">
          <source>Checks if the method is a destructor.</source>
          <target state="translated">메소드가 소멸자인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="dfe4e8cded7bffef876907da4c7e570bae0dd19b" translate="yes" xml:space="preserve">
          <source>Checks if the method is abstract.</source>
          <target state="translated">메소드가 추상적인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4c1d288ed16644ec40fcd57a9c28fdac522e805c" translate="yes" xml:space="preserve">
          <source>Checks if the method is final.</source>
          <target state="translated">방법이 최종적인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="93d4962f19b744b4f2d6bad068ffe8942931a48a" translate="yes" xml:space="preserve">
          <source>Checks if the method is private.</source>
          <target state="translated">메소드가 개인용인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="255443988a281ef3db063df3f7a6cc237a12bc76" translate="yes" xml:space="preserve">
          <source>Checks if the method is protected.</source>
          <target state="translated">메소드가 보호되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7f214a0407a8c631f0f55d557dac2385ed4f2ec6" translate="yes" xml:space="preserve">
          <source>Checks if the method is public.</source>
          <target state="translated">메소드가 공개인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b0d7a11ebac81c9de08cfe1b88302b2a3dbc3306" translate="yes" xml:space="preserve">
          <source>Checks if the method is static.</source>
          <target state="translated">메소드가 정적인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1a0450e7a1f82bcd869a23a526adc36d51c6c53a" translate="yes" xml:space="preserve">
          <source>Checks if the offset exists.</source>
          <target state="translated">오프셋이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0fe44d8f930da5562cfbc8c3ee7944deaef7b144" translate="yes" xml:space="preserve">
          <source>Checks if the parameter expects an array.</source>
          <target state="translated">매개 변수가 배열을 기대하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="693577a340b76d3a590df9fa8b1274ee2f5c20eb" translate="yes" xml:space="preserve">
          <source>Checks if the parameter has a type associated with it.</source>
          <target state="translated">매개 변수에 연관된 유형이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="30a9e85b6f7ecb42e363ee96f132bf9669c4109f" translate="yes" xml:space="preserve">
          <source>Checks if the parameter is optional.</source>
          <target state="translated">매개 변수가 선택적인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ba693adb9a4e590339b2b6fd78aee67596b54051" translate="yes" xml:space="preserve">
          <source>Checks if the parameter is passed in by reference.</source>
          <target state="translated">매개 변수가 참조로 전달되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3c2861c48c2d1bfc24cb531632907421c4860a59" translate="yes" xml:space="preserve">
          <source>Checks if the parameter was declared as a &lt;a href=&quot;functions.arguments#functions.variable-arg-list.new&quot;&gt;variadic parameter&lt;/a&gt;.</source>
          <target state="translated">매개 변수가 &lt;a href=&quot;functions.arguments#functions.variable-arg-list.new&quot;&gt;variadic 매개&lt;/a&gt; 변수로 선언되었는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="933363ab094f9bd4938506f31800fe26a9845c7f" translate="yes" xml:space="preserve">
          <source>Checks if the property exists. This is used when the object is treated as an array.</source>
          <target state="translated">속성이 존재하는지 확인합니다. 객체가 배열로 취급 될 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2a265e7b6e0e283da136586bb50d6977be29c96e" translate="yes" xml:space="preserve">
          <source>Checks if the provided string is already in the specified normalization form.</source>
          <target state="translated">제공된 문자열이 지정된 정규화 양식에 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5a70da599289dd260433ebf0ff675c38eb29e97f" translate="yes" xml:space="preserve">
          <source>Checks if the queue contains any more nodes.</source>
          <target state="translated">큐에 더 이상 노드가 포함되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5b7e82d01ae4af228169fecf17a6ce9204a2e995" translate="yes" xml:space="preserve">
          <source>Checks if the requested field as a valid fieldname in the document.</source>
          <target state="translated">요청 된 필드가 문서에서 유효한 필드 이름인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="305ea4cade14deaee75f98965459881aaf0c6d61" translate="yes" xml:space="preserve">
          <source>Checks if the specified byte stream is valid for the specified encoding. It is useful to prevent so-called &quot;Invalid Encoding Attack&quot;.</source>
          <target state="translated">지정된 바이트 스트림이 지정된 인코딩에 유효한지 확인합니다. 소위 &quot;잘못된 인코딩 공격&quot;을 방지하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="7c7e29445c36e03153849b7a468ec57fdeac8459" translate="yes" xml:space="preserve">
          <source>Checks if the storage contains the &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; provided.</source>
          <target state="translated">스토리지에 제공된 &lt;a href=&quot;language.types.object&quot;&gt;오브젝트&lt;/a&gt; 가 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="4dae2c648ced5bc2322cd506b3d4be2822f85e6a" translate="yes" xml:space="preserve">
          <source>Checks if the type is a built-in type in PHP.</source>
          <target state="translated">PHP에서 타입이 내장 타입인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5657805fa987405e5cfd51d75fc608fe82f8bf5c" translate="yes" xml:space="preserve">
          <source>Checks if there are more query results from a multiple query.</source>
          <target state="translated">여러 쿼리에서 더 많은 쿼리 결과가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1324ab93ed5c8a33b8e9d889aca39e1347a7dc41" translate="yes" xml:space="preserve">
          <source>Checks if there are more result sets available as well as allowing access to the next result set via &lt;a href=&quot;function.odbc-fetch-array&quot;&gt;odbc_fetch_array()&lt;/a&gt;, &lt;a href=&quot;function.odbc-fetch-row&quot;&gt;odbc_fetch_row()&lt;/a&gt;, &lt;a href=&quot;function.odbc-result&quot;&gt;odbc_result()&lt;/a&gt;, etc.</source>
          <target state="translated">사용 가능한 결과 세트가 더 있는지 확인하고 &lt;a href=&quot;function.odbc-fetch-array&quot;&gt;odbc_fetch_array ()&lt;/a&gt; , &lt;a href=&quot;function.odbc-fetch-row&quot;&gt;odbc_fetch_row ()&lt;/a&gt; , &lt;a href=&quot;function.odbc-result&quot;&gt;odbc_result ()&lt;/a&gt; 등을 통해 다음 결과 세트에 대한 액세스를 허용하십시오 .</target>
        </trans-unit>
        <trans-unit id="717798bb4d91c8a3b03ce91d69415a2f6ba93e14" translate="yes" xml:space="preserve">
          <source>Checks if this class is defined in a namespace.</source>
          <target state="translated">이 클래스가 네임 스페이스에 정의되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b3444e3b4c227f1a11b7f194c7b0bbda4cd3df2e" translate="yes" xml:space="preserve">
          <source>Checks information about the current mailbox.</source>
          <target state="translated">현재 사서함에 대한 정보를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="90f17768940a5eaad40b13ec067169f6082cefcd" translate="yes" xml:space="preserve">
          <source>Checks the current mailbox status on the server. It is similar to &lt;a href=&quot;function.imap-status&quot;&gt;imap_status()&lt;/a&gt;, but will additionally sum up the size of all messages in the mailbox, which will take some additional time to execute.</source>
          <target state="translated">서버에서 현재 사서함 상태를 확인합니다. &lt;a href=&quot;function.imap-status&quot;&gt;imap_status ()&lt;/a&gt; 와 비슷 하지만 사서함에있는 모든 메시지의 크기를 합산하면 실행하는 데 약간의 시간이 더 걸립니다.</target>
        </trans-unit>
        <trans-unit id="32689f3a6f1e7ce871b0a7f3c14770a78911e52b" translate="yes" xml:space="preserve">
          <source>Checks the distance between the color described by this ImagickPixel object and that of the provided object, by plotting their RGB values on the color cube. If the distance between the two points is less than the fuzz value given, the colors are similar. Deprecated in favour of &lt;a href=&quot;imagickpixel.ispixelsimilar&quot;&gt;ImagickPixel::isPixelSimilar()&lt;/a&gt;.</source>
          <target state="translated">색상 큐브에 RGB 값을 플롯하여이 ImagickPixel 객체가 제공 한 색상과 제공된 객체의 색상 사이의 거리를 확인합니다. 두 점 사이의 거리가 지정된 퍼지 값보다 작 으면 색상이 비슷합니다. &lt;a href=&quot;imagickpixel.ispixelsimilar&quot;&gt;ImagickPixel :: isPixelSimilar ()&lt;/a&gt; 를 위해 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="fa87425e3d1f6eccfeb1e44f4c4c0bcdf1794c70" translate="yes" xml:space="preserve">
          <source>Checks the distance between the color described by this ImagickPixel object and that of the provided object, by plotting their RGB values on the color cube. If the distance between the two points is less than the fuzz value given, the colors are similar. This method replaces &lt;a href=&quot;imagickpixel.issimilar&quot;&gt;ImagickPixel::isSimilar()&lt;/a&gt; and correctly normalises the fuzz value to ImageMagick QuantumRange.</source>
          <target state="translated">색상 큐브에 RGB 값을 플롯하여이 ImagickPixel 객체가 제공 한 색상과 제공된 객체의 색상 사이의 거리를 확인합니다. 두 점 사이의 거리가 지정된 퍼지 값보다 작 으면 색상이 비슷합니다. 이 메소드는 &lt;a href=&quot;imagickpixel.issimilar&quot;&gt;ImagickPixel :: isSimilar ()를&lt;/a&gt; 대체 하고 퍼지 값을 ImageMagick QuantumRange로 올바르게 정규화합니다.</target>
        </trans-unit>
        <trans-unit id="d8cdd171e15f7bd81fb3404d55b88afec7ee21c1" translate="yes" xml:space="preserve">
          <source>Checks the list of defined functions, both built-in (internal) and user-defined, for &lt;code&gt;function_name&lt;/code&gt;.</source>
          <target state="translated">수표 정의 기능의 목록은 모두 내장 (내부) 및 위해 사용자 정의 &lt;code&gt;function_name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87c68aa9097bb70f767980afc04b7c38c4d11a3f" translate="yes" xml:space="preserve">
          <source>Checks the sign of a number.</source>
          <target state="translated">숫자의 부호를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="8138e2c3b25a73a1f7b4267a7abf2c35808746ba" translate="yes" xml:space="preserve">
          <source>Checks the threads status</source>
          <target state="translated">스레드 상태를 확인합니다</target>
        </trans-unit>
        <trans-unit id="cbd21fbbd8de8ef74c207f49858899aae0d1d501" translate="yes" xml:space="preserve">
          <source>Checks the validity of sub iterators.</source>
          <target state="translated">하위 반복기의 유효성을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="49747ee04c810d21b16913c9820d3bc9eee20692" translate="yes" xml:space="preserve">
          <source>Checks the validity of the date formed by the arguments. A date is considered valid if each parameter is properly defined.</source>
          <target state="translated">인수로 구성된 날짜의 유효성을 확인합니다. 각 매개 변수가 올바르게 정의 된 경우 날짜가 유효한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="77ede11589df9dced9996d22fe89b53cb5bda764" translate="yes" xml:space="preserve">
          <source>Checks validity of the current element.</source>
          <target state="translated">현재 요소의 유효성을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="7faf382c2433f66340dcdf69b99de9a4eaaa9f56" translate="yes" xml:space="preserve">
          <source>Checks whether &lt;code&gt;val&lt;/code&gt; is 'not a number', like the result of &lt;em&gt;acos(1.01)&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;acos (1.01)&lt;/em&gt; 의 결과와 같이 &lt;code&gt;val&lt;/code&gt; 이 '숫자가 아님' 인지 확인합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a16598d449c1e8bc4587bdf06ccbba7d66531e94" translate="yes" xml:space="preserve">
          <source>Checks whether &lt;code&gt;val&lt;/code&gt; is a legal finite on this platform.</source>
          <target state="translated">이 플랫폼에서 &lt;code&gt;val&lt;/code&gt; 이 유효한 유한 인지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="f9e01e36c47fbe87e6a9ab094d5e21016ee2568c" translate="yes" xml:space="preserve">
          <source>Checks whether a file or directory exists.</source>
          <target state="translated">파일 또는 디렉토리가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ebb62e89c1c152048cf7495c4a679f4d34f234b3" translate="yes" xml:space="preserve">
          <source>Checks whether a function is defined in a namespace.</source>
          <target state="translated">함수가 네임 스페이스에 정의되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="514a0c9f6ccc41045d1f69a50485de7473bf700b" translate="yes" xml:space="preserve">
          <source>Checks whether a specific key exists inside a shared memory segment.</source>
          <target state="translated">공유 메모리 세그먼트 내에 특정 키가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2812ab60f766540a794b45ccac83083363d1e40c" translate="yes" xml:space="preserve">
          <source>Checks whether a specific method is defined in a class.</source>
          <target state="translated">특정 메소드가 클래스에 정의되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c44532b51187f93d824a7ca4bb0540d31a8bce24" translate="yes" xml:space="preserve">
          <source>Checks whether a string is tainted</source>
          <target state="translated">끈이 오염되었는지 확인</target>
        </trans-unit>
        <trans-unit id="edac0d6fffde007aaf44c8abab570facb05d649b" translate="yes" xml:space="preserve">
          <source>Checks whether an &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; exists in the storage.</source>
          <target state="translated">저장소에 &lt;a href=&quot;language.types.object&quot;&gt;개체&lt;/a&gt; 가 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="ba628e797e4e634b7fd25dd1873216ad398ff8c1" translate="yes" xml:space="preserve">
          <source>Checks whether it implements an interface.</source>
          <target state="translated">인터페이스를 구현하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6686a4c79c45e1c3c011738d68377466ac1ff8a0" translate="yes" xml:space="preserve">
          <source>Checks whether the child process exited because of a signal which was not caught.</source>
          <target state="translated">포착되지 않은 신호로 인해 자식 프로세스가 종료되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="3487919430e88e3fe5155ddde5cd38816062e346" translate="yes" xml:space="preserve">
          <source>Checks whether the child process which caused the return is currently stopped; this is only possible if the call to &lt;a href=&quot;function.pcntl-waitpid&quot;&gt;pcntl_waitpid()&lt;/a&gt; was done using the option &lt;em&gt;WUNTRACED&lt;/em&gt;.</source>
          <target state="translated">반품을 유발 한 하위 프로세스가 현재 중지되었는지 확인합니다. &lt;a href=&quot;function.pcntl-waitpid&quot;&gt;pcntl_waitpid ()&lt;/a&gt; 호출이 &lt;em&gt;WUNTRACED&lt;/em&gt; 옵션을 사용하여 수행 된 경우에만 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="01a27a5eb9ee35373ef43b4d1386d9681dd31395" translate="yes" xml:space="preserve">
          <source>Checks whether the child status code represents a normal exit.</source>
          <target state="translated">하위 상태 코드가 정상 종료를 나타내는 지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0fa215effbea05f816306f31ae67bb7c71dfa654" translate="yes" xml:space="preserve">
          <source>Checks whether the class has a specific constant defined or not.</source>
          <target state="translated">클래스에 특정 상수가 정의되어 있는지 여부를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a42a585a9c8065b3ae0ff4c37a07edb4e71e55e7" translate="yes" xml:space="preserve">
          <source>Checks whether the class is an interface.</source>
          <target state="translated">클래스가 인터페이스인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c62cc8ea0b6bc871a2110d2ca4e27b10e314ca7c" translate="yes" xml:space="preserve">
          <source>Checks whether the class is iterateable.</source>
          <target state="translated">클래스가 반복 가능한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e9377b05061777fd4db1d831267f28c4b6dc52fe" translate="yes" xml:space="preserve">
          <source>Checks whether the class is user-defined, as opposed to internal.</source>
          <target state="translated">내부와 반대로 클래스가 사용자 정의되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0a7eae49487d9b8821c672a1221fefaa948c2ec6" translate="yes" xml:space="preserve">
          <source>Checks whether the client disconnected.</source>
          <target state="translated">클라이언트 연결이 끊어 졌는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ffd528a4d9091937ae06799ad7288fa7d35d7a58" translate="yes" xml:space="preserve">
          <source>Checks whether the connection to the server is working. If it has gone down and global option &lt;a href=&quot;https://secure.php.net/manual/en/mysqli.configuration.php#ini.mysqli.reconnect&quot;&gt;mysqli.reconnect&lt;/a&gt; is enabled, an automatic reconnection is attempted.</source>
          <target state="translated">서버 연결이 작동하는지 확인합니다. 다운되고 글로벌 옵션 &lt;a href=&quot;https://secure.php.net/manual/en/mysqli.configuration.php#ini.mysqli.reconnect&quot;&gt;mysqli.reconnect&lt;/a&gt; 가 사용 가능한 경우 자동 재 연결이 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="90b75c16b271000b486392327d1fbe3a707c9f86" translate="yes" xml:space="preserve">
          <source>Checks whether the current element is valid.</source>
          <target state="translated">현재 요소가 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1b7329315150b89f2e52dc5ce02b5f18a5211575" translate="yes" xml:space="preserve">
          <source>Checks whether the document has any child documents</source>
          <target state="translated">문서에 하위 문서가 있는지 확인</target>
        </trans-unit>
        <trans-unit id="ad010a007d9c807cada5d7f5a4377ea7b8d96ce5" translate="yes" xml:space="preserve">
          <source>Checks whether the function is deprecated.</source>
          <target state="translated">기능이 더 이상 사용되지 않는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="88d192caac49ae6093330219549d280b50485112" translate="yes" xml:space="preserve">
          <source>Checks whether the function is internal, as opposed to user-defined.</source>
          <target state="translated">사용자 정의와 반대로 함수가 내부에 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a110406adf814e9ec5b224627de60152fa07f4d3" translate="yes" xml:space="preserve">
          <source>Checks whether the function is user-defined, as opposed to internal.</source>
          <target state="translated">내부가 아니라 함수가 사용자 정의인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="07ed86a4d110fb3f1b810b98cfb8d4fe72ce314d" translate="yes" xml:space="preserve">
          <source>Checks whether the function returns a reference.</source>
          <target state="translated">함수가 참조를 반환하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="eb33fda100c67b7d07000cf502570352536dacf2" translate="yes" xml:space="preserve">
          <source>Checks whether the given &lt;code&gt;key&lt;/code&gt; is the private key that corresponds to &lt;code&gt;cert&lt;/code&gt;.</source>
          <target state="translated">제공된 &lt;code&gt;key&lt;/code&gt; 가 &lt;code&gt;cert&lt;/code&gt; 에 해당하는 개인 키 인지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="b6121b83412615dd527d16440f637b723db6f451" translate="yes" xml:space="preserve">
          <source>Checks whether the given constant exists and is defined.</source>
          <target state="translated">주어진 상수가 존재하고 정의되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="ce27a4b76779691bc45a0f7d1424b66be7e770a6" translate="yes" xml:space="preserve">
          <source>Checks whether the iterator is valid.</source>
          <target state="translated">이터레이터가 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="753570c4a090f0d98cf166782336c1fd6b31f057" translate="yes" xml:space="preserve">
          <source>Checks whether the message queue &lt;code&gt;key&lt;/code&gt; exists.</source>
          <target state="translated">메시지 큐 &lt;code&gt;key&lt;/code&gt; 가 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="7e4845d319e21f2944606058a07700ebcd6d9e27" translate="yes" xml:space="preserve">
          <source>Checks whether the object referenced still exists.</source>
          <target state="translated">참조 된 개체가 여전히 존재하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1fce0266b241c00d1726d02d7e469cb404b1ef50" translate="yes" xml:space="preserve">
          <source>Checks whether the parameter allows &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="translated">매개 변수가 &lt;strong&gt; &lt;code&gt;NULL&lt;/code&gt; 을&lt;/strong&gt; 허용하는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="b814f7cfb34221ac17fe6580f6a5b2f55f198cba" translate="yes" xml:space="preserve">
          <source>Checks whether the passed object is referenced in the map.</source>
          <target state="translated">전달 된 객체가 맵에서 참조되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="4c74d17782731cd5894efdeb907be737a58ff794" translate="yes" xml:space="preserve">
          <source>Checks whether the property is private.</source>
          <target state="translated">속성이 비공개인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="749a3314578b6266b5dce9c2b19abc1ed521209a" translate="yes" xml:space="preserve">
          <source>Checks whether the property is protected.</source>
          <target state="translated">속성이 보호되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9de966f9de05c9509db587102eae75832802b4f8" translate="yes" xml:space="preserve">
          <source>Checks whether the property is public.</source>
          <target state="translated">속성이 공개인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d04d4bd8767a95ee48ed3872d75491c282bfc8ae" translate="yes" xml:space="preserve">
          <source>Checks whether the property is static.</source>
          <target state="translated">속성이 정적인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b1a1f10bb771cde4a79fce521e475478148ad55b" translate="yes" xml:space="preserve">
          <source>Checks whether the property was declared at compile-time, or whether the property was dynamically declared at run-time.</source>
          <target state="translated">속성이 컴파일 타임에 선언되었는지 또는 속성이 런타임에 동적으로 선언되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="a07492acaa208bf18a50d6502e50fd8f74920193" translate="yes" xml:space="preserve">
          <source>Checks whether the reflected function has a return type specified.</source>
          <target state="translated">반영된 함수에 리턴 유형이 지정되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2ce45440ebd179e51e41c450787164c29abab7fc" translate="yes" xml:space="preserve">
          <source>Checks whether the reflected function is a &lt;a href=&quot;class.closure&quot;&gt;Closure&lt;/a&gt;.</source>
          <target state="translated">반영된 기능이 &lt;a href=&quot;class.closure&quot;&gt;Closure&lt;/a&gt; 인지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="90750777414032ce3b2eef2b67329bfa1747bdad" translate="yes" xml:space="preserve">
          <source>Checks whether the requested index &lt;code&gt;index&lt;/code&gt; exists.</source>
          <target state="translated">요청 된 인덱스 &lt;code&gt;index&lt;/code&gt; 가 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="03ac56f2b10516156b2a2a7cbc7fe5e10f655419" translate="yes" xml:space="preserve">
          <source>Checks whether the specified property is defined.</source>
          <target state="translated">지정된 속성이 정의되어 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="153028e43e2ad43dcdf2c4b1ba761226d8b6b987" translate="yes" xml:space="preserve">
          <source>Checks whether two given strings can easily be mistaken.</source>
          <target state="translated">주어진 두 문자열을 쉽게 착각 할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d6f0ba41c1489c55c918dd055130376ca06614a2" translate="yes" xml:space="preserve">
          <source>Children of this class are passed to &lt;a href=&quot;function.stream-filter-register&quot;&gt;stream_filter_register()&lt;/a&gt;.</source>
          <target state="translated">이 클래스의 자식은 &lt;a href=&quot;function.stream-filter-register&quot;&gt;stream_filter_register ()&lt;/a&gt; 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="ba53d8e9e704b92fb732e2cd2fa94286846ffe55" translate="yes" xml:space="preserve">
          <source>Choose a random pixel in a neighborhood of this extent.</source>
          <target state="translated">이 범위 부근에서 임의의 픽셀을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="b7bdc530f55395d2d7275cedcef430a6b82b9a51" translate="yes" xml:space="preserve">
          <source>Chunk of data to parse. A document may be parsed piece-wise by calling &lt;strong&gt;xml_parse()&lt;/strong&gt; several times with new data, as long as the &lt;code&gt;is_final&lt;/code&gt; parameter is set and &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; when the last data is parsed.</source>
          <target state="translated">구문 분석 할 데이터 청크 &lt;code&gt;is_final&lt;/code&gt; 매개 변수가 설정되고 마지막 데이터가 구문 분석 될 때 &lt;strong&gt; &lt;code&gt;TRUE&lt;/code&gt; 인&lt;/strong&gt; 경우 새 데이터로 &lt;strong&gt;xml_parse ()를&lt;/strong&gt; 여러 번 호출하여 문서를 &lt;strong&gt;부분적&lt;/strong&gt; 으로 구문 분석 할 수 있습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f3f62de0d5ebffcb7e2125a33adf0083a6543b5f" translate="yes" xml:space="preserve">
          <source>Chunk size as set by &lt;a href=&quot;function.ob-start&quot;&gt;ob_start()&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;function.ob-start&quot;&gt;ob_start ()에&lt;/a&gt; 의해 설정된 청크 크기</target>
        </trans-unit>
        <trans-unit id="a68966cbd67d9c4547c2a236016960163e866a2a" translate="yes" xml:space="preserve">
          <source>Chunk size.</source>
          <target state="translated">청크 크기.</target>
        </trans-unit>
        <trans-unit id="1a3a480cb4537175a5c56d98b50cfaa97991358a" translate="yes" xml:space="preserve">
          <source>Chunks an array into arrays with &lt;code&gt;size&lt;/code&gt; elements. The last chunk may contain less than &lt;code&gt;size&lt;/code&gt; elements.</source>
          <target state="translated">배열을 &lt;code&gt;size&lt;/code&gt; 요소가 있는 배열로 청크합니다 . 마지막 청크는 &lt;code&gt;size&lt;/code&gt; 보다 작은 요소를 포함 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a0736ea9349e0d646c3853559b0569a357d004ab" translate="yes" xml:space="preserve">
          <source>Circumflex (&lt;em&gt;^&lt;/em&gt;) need not be the first character of the pattern if a number of alternatives are involved, but it should be the first thing in each alternative in which it appears if the pattern is ever to match that branch. If all possible alternatives start with a circumflex (&lt;em&gt;^&lt;/em&gt;), that is, if the pattern is constrained to match only at the start of the subject, it is said to be an &quot;anchored&quot; pattern. (There are also other constructs that can cause a pattern to be anchored.)</source>
          <target state="translated">Circumflex ( &lt;em&gt;^&lt;/em&gt; )는 여러 대안이 포함 된 경우 패턴의 첫 번째 문자 일 필요는 없지만 패턴이 해당 분기와 일치하는 경우 나타나는 각 대안에서 첫 번째 문자 여야합니다. 가능한 모든 대안이 곡절 반경 ( &lt;em&gt;^&lt;/em&gt; )으로 시작하는 경우, 즉 패턴이 피사체의 시작 부분에서만 일치하도록 제한되면 &quot;고정&quot;패턴이라고합니다. 패턴을 고정시킬 수있는 다른 구성도 있습니다.</target>
        </trans-unit>
        <trans-unit id="991405d2755eeda73901c9c5be58a409297660c5" translate="yes" xml:space="preserve">
          <source>Civil twilight: conventionally used to signify the end of dusk.</source>
          <target state="translated">민간 황혼 : 일반적으로 황혼의 끝을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7a83856f34dd729a595690fb61a678d0ab82c8df" translate="yes" xml:space="preserve">
          <source>Civil twilight: conventionally used to signify the start of dawn.</source>
          <target state="translated">민간 황혼 : 일반적으로 새벽의 시작을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1034e5e8375f364b5f1672dec12dcabd772b3df5" translate="yes" xml:space="preserve">
          <source>Class (class)</source>
          <target state="translated">클래스 (클래스)</target>
        </trans-unit>
        <trans-unit id="6b4269d593e4470d6919eb9d28b30677146138d8" translate="yes" xml:space="preserve">
          <source>Class Abstraction</source>
          <target state="translated">클래스 추상화</target>
        </trans-unit>
        <trans-unit id="00da30c8d725653ccdf75f92c7a1bb2add85bb53" translate="yes" xml:space="preserve">
          <source>Class Abstraction &amp;rarr;</source>
          <target state="translated">클래스 추상화 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="a4145d866ec3cb1bb76fac5d2a4f1cb87607ec6c" translate="yes" xml:space="preserve">
          <source>Class Constants</source>
          <target state="translated">클래스 상수</target>
        </trans-unit>
        <trans-unit id="8040baf1e7bacd23bf9587cdb07290184f77ee83" translate="yes" xml:space="preserve">
          <source>Class Constants &amp;rarr;</source>
          <target state="translated">클래스 상수 &amp;rarr;</target>
        </trans-unit>
        <trans-unit id="3d9f77136533c6ff7b7e86c9e68a8e0e99ad867e" translate="yes" xml:space="preserve">
          <source>Class Methods</source>
          <target state="translated">수업 방법</target>
        </trans-unit>
        <trans-unit id="63095577d62a9b775a9b4b7c695614a3b9696f38" translate="yes" xml:space="preserve">
          <source>Class constructor initializes the object and sets the q parameter if passed</source>
          <target state="translated">클래스 생성자는 객체를 초기화하고 전달 된 경우 q 매개 변수를 설정합니다</target>
        </trans-unit>
        <trans-unit id="4238125f17a1bfcd1c0e0de73a9e900c4ce74102" translate="yes" xml:space="preserve">
          <source>Class member variables are called &quot;properties&quot;. You may also see them referred to using other terms such as &quot;attributes&quot; or &quot;fields&quot;, but for the purposes of this reference we will use &quot;properties&quot;. They are defined by using one of the keywords &lt;em&gt;public&lt;/em&gt;, &lt;em&gt;protected&lt;/em&gt;, or &lt;em&gt;private&lt;/em&gt;, followed by a normal variable declaration. This declaration may include an initialization, but this initialization must be a constant value--that is, it must be able to be evaluated at compile time and must not depend on run-time information in order to be evaluated.</source>
          <target state="translated">클래스 멤버 변수를 &quot;속성&quot;이라고합니다. &quot;속성&quot;또는 &quot;필드&quot;와 같은 다른 용어를 사용하는 용어를 참조 할 수도 있지만이 참조의 목적 상 &quot;속성&quot;을 사용합니다. 그것들은 &lt;em&gt;public&lt;/em&gt; , &lt;em&gt;protected&lt;/em&gt; 또는 &lt;em&gt;private&lt;/em&gt; 키워드 중 하나를 사용하여 정의되고 일반적인 변수 선언이 뒤 따릅니다. 이 선언에는 초기화가 포함될 수 있지만이 초기화는 상수 값이어야합니다. 즉, 컴파일 타임에 평가할 수 있어야하고 평가를 위해 런타임 정보에 의존해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="dbfec351f8af6a053f3786c35a62d1b7fced22de" translate="yes" xml:space="preserve">
          <source>Class methods may be defined as public, private, or protected. Methods declared without any explicit visibility keyword are defined as public.</source>
          <target state="translated">클래스 메소드는 공개, 개인 또는 보호로 정의 될 수 있습니다. 명백한 가시성 키워드없이 선언 된 메소드는 공용으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="59d7bbe00f3d0f8c6eec9c63d6f7af07ad8f2d1a" translate="yes" xml:space="preserve">
          <source>Class name</source>
          <target state="translated">수업 명</target>
        </trans-unit>
        <trans-unit id="4100b5883e82a7bfc19990f5c2efdfb2a9e8983b" translate="yes" xml:space="preserve">
          <source>Class name and method name delimited by &lt;em&gt;::&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;::로&lt;/em&gt; 구분 된 클래스 이름 및 메소드 이름 .</target>
        </trans-unit>
        <trans-unit id="e915865f6fe8ba4a051d2015aec6a43cbed7aeae" translate="yes" xml:space="preserve">
          <source>Class name.</source>
          <target state="translated">수업 명.</target>
        </trans-unit>
        <trans-unit id="ce5c8ac44f6c88b5be9914ddf9aa6372c8770328" translate="yes" xml:space="preserve">
          <source>Class names that do not contain a backslash like &lt;em&gt;name&lt;/em&gt; can be resolved in 2 different ways.</source>
          <target state="translated">같은 백 슬래시가 포함되지 않은 클래스 이름 &lt;em&gt;이름은&lt;/em&gt; 두 가지 방법으로 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9cde04f3e5530eff41ad13426ba963632c8dab13" translate="yes" xml:space="preserve">
          <source>Class properties and methods live in separate &quot;namespaces&quot;, so it is possible to have a property and a method with the same name. Referring to both a property and a method has the same notation, and whether a property will be accessed or a method will be called, solely depends on the context, i.e. whether the usage is a variable access or a function call.</source>
          <target state="translated">클래스 속성과 메서드는 별도의 &quot;네임 스페이스&quot;에 있으므로 속성과 이름이 같은 메서드를 가질 수 있습니다. 속성과 메서드를 모두 참조하는 경우 표기법이 동일하며 속성에 액세스할지 또는 메서드를 호출할지 여부는 컨텍스트, 즉 용도가 가변 액세스인지 함수 호출인지에 따라 달라집니다.</target>
        </trans-unit>
        <trans-unit id="839cfe67abd319e66ea04698eb882516eaa7ee05" translate="yes" xml:space="preserve">
          <source>Class properties may also be accessed using variable property names. The variable property name will be resolved within the scope from which the call is made. For instance, if you have an expression such as &lt;var&gt;&lt;var&gt;$foo-&amp;gt;$bar&lt;/var&gt;&lt;/var&gt;, then the local scope will be examined for &lt;var&gt;&lt;var&gt;$bar&lt;/var&gt;&lt;/var&gt; and its value will be used as the name of the property of &lt;var&gt;&lt;var&gt;$foo&lt;/var&gt;&lt;/var&gt;. This is also true if &lt;var&gt;&lt;var&gt;$bar&lt;/var&gt;&lt;/var&gt; is an array access.</source>
          <target state="translated">변수 속성 이름을 사용하여 클래스 속성에 액세스 할 수도 있습니다. 변수 속성 이름은 호출 범위 내에서 해결됩니다. 예를 들어, &lt;var&gt;&lt;var&gt;$foo-&amp;gt;$bar&lt;/var&gt;&lt;/var&gt; 와 같은 표현식이있는 경우 로컬 범위는 &lt;var&gt;&lt;var&gt;$bar&lt;/var&gt;&lt;/var&gt; 검사 하고 그 값은 &lt;var&gt;&lt;var&gt;$foo&lt;/var&gt;&lt;/var&gt; 의 특성 이름으로 사용됩니다 . &lt;var&gt;&lt;var&gt;$bar&lt;/var&gt;&lt;/var&gt; 가 배열 액세스 인 경우에도 마찬가지 입니다.</target>
        </trans-unit>
        <trans-unit id="ca3109b12e8c720433c1e6dd3b216ee51bc97380" translate="yes" xml:space="preserve">
          <source>Class properties must be defined as public, private, or protected. If declared using &lt;em&gt;var&lt;/em&gt;, the property will be defined as public.</source>
          <target state="translated">클래스 속성은 public, private 또는 protected로 정의해야합니다. &lt;em&gt;var를&lt;/em&gt; 사용하여 선언 하면 속성이 public으로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="ae1f10a98a9b551279b85344d5b7d7cb98638e9a" translate="yes" xml:space="preserve">
          <source>Class property data types are ignored when applying a field value to a property.</source>
          <target state="translated">필드 값을 속성에 적용하면 클래스 속성 데이터 형식이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="8974c8ae3cb79e14ba7f7a2102519ce98283c859" translate="yes" xml:space="preserve">
          <source>Class synopsis</source>
          <target state="translated">수업 개요</target>
        </trans-unit>
        <trans-unit id="3766056de04941cdba8832bd037aa24080da5ca5" translate="yes" xml:space="preserve">
          <source>Class used to represent &lt;a href=&quot;functions.anonymous&quot;&gt;anonymous functions&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;functions.anonymous&quot;&gt;익명 함수&lt;/a&gt; 를 나타내는 데 사용되는 클래스 .</target>
        </trans-unit>
        <trans-unit id="5aaf33ef6178c374cf8c5f7214fea5aabb2803b0" translate="yes" xml:space="preserve">
          <source>Class/interface name</source>
          <target state="translated">클래스 / 인터페이스 이름</target>
        </trans-unit>
        <trans-unit id="d8636938935c4e42997a1072c974ffbb7e004c5c" translate="yes" xml:space="preserve">
          <source>Class::__construct</source>
          <target state="translated">Class::__construct</target>
        </trans-unit>
        <trans-unit id="34446a3037689831aab617faffa9f8ec0417d651" translate="yes" xml:space="preserve">
          <source>Class::__toString</source>
          <target state="translated">Class::__toString</target>
        </trans-unit>
        <trans-unit id="1065f972ca10b9dcaa79f11ece54dc94b9c13788" translate="yes" xml:space="preserve">
          <source>Class::export</source>
          <target state="translated">Class::export</target>
        </trans-unit>
        <trans-unit id="4a688425b019265f47c0aa936785c7ee93bef26b" translate="yes" xml:space="preserve">
          <source>Class::getConstant</source>
          <target state="translated">Class::getConstant</target>
        </trans-unit>
        <trans-unit id="89dd4df87674b0c82f4473e89ea967411732eb58" translate="yes" xml:space="preserve">
          <source>Class::getConstants</source>
          <target state="translated">Class::getConstants</target>
        </trans-unit>
        <trans-unit id="f0a9e6deb6ecf7c07dc70da54b1d73f24b757c60" translate="yes" xml:space="preserve">
          <source>Class::getConstructor</source>
          <target state="translated">Class::getConstructor</target>
        </trans-unit>
        <trans-unit id="fef56b8ff54bd34ff6f5aaf2fa6e847271498e12" translate="yes" xml:space="preserve">
          <source>Class::getDefaultProperties</source>
          <target state="translated">Class::getDefaultProperties</target>
        </trans-unit>
        <trans-unit id="98c97b89fe85a2532ad9fc7be9a978c1d7dd151a" translate="yes" xml:space="preserve">
          <source>Class::getDocComment</source>
          <target state="translated">Class::getDocComment</target>
        </trans-unit>
        <trans-unit id="bd59e91551b7924271a9645c440a9bac72242c3b" translate="yes" xml:space="preserve">
          <source>Class::getEndLine</source>
          <target state="translated">Class::getEndLine</target>
        </trans-unit>
        <trans-unit id="4ed00e9ede127520f6a1c9cf54a56d1994e8d100" translate="yes" xml:space="preserve">
          <source>Class::getExtension</source>
          <target state="translated">Class::getExtension</target>
        </trans-unit>
        <trans-unit id="3c255483d5af490c58c4b158e1fbc98858ad8e29" translate="yes" xml:space="preserve">
          <source>Class::getExtensionName</source>
          <target state="translated">Class::getExtensionName</target>
        </trans-unit>
        <trans-unit id="5f9f5878be2d6c5fbd721e347a1b7547b9813281" translate="yes" xml:space="preserve">
          <source>Class::getFileName</source>
          <target state="translated">Class::getFileName</target>
        </trans-unit>
        <trans-unit id="02a0fbe823d29b6873e625a0f236e1d5373a500c" translate="yes" xml:space="preserve">
          <source>Class::getInterfaceNames</source>
          <target state="translated">Class::getInterfaceNames</target>
        </trans-unit>
        <trans-unit id="7848357f12bf0d3288495c15341223b211a61a07" translate="yes" xml:space="preserve">
          <source>Class::getInterfaces</source>
          <target state="translated">Class::getInterfaces</target>
        </trans-unit>
        <trans-unit id="8edfb3b6f775656a2a0ef7f6d51c91977aefad11" translate="yes" xml:space="preserve">
          <source>Class::getMethod</source>
          <target state="translated">Class::getMethod</target>
        </trans-unit>
        <trans-unit id="8401dbfeb5bef3a756ebb627f52dfd9c82a82923" translate="yes" xml:space="preserve">
          <source>Class::getMethods</source>
          <target state="translated">Class::getMethods</target>
        </trans-unit>
        <trans-unit id="baec0369c8d553d5bce008ccf612fa88766fc1a8" translate="yes" xml:space="preserve">
          <source>Class::getModifiers</source>
          <target state="translated">Class::getModifiers</target>
        </trans-unit>
        <trans-unit id="d49abdf797f46d2d604f5f603683182d174a9d85" translate="yes" xml:space="preserve">
          <source>Class::getName</source>
          <target state="translated">Class::getName</target>
        </trans-unit>
        <trans-unit id="6d939df1be338450970bce1fbfa2154e574b3fba" translate="yes" xml:space="preserve">
          <source>Class::getNamespaceName</source>
          <target state="translated">Class::getNamespaceName</target>
        </trans-unit>
        <trans-unit id="8ff9f428610f810a65ef45fa7453986c44240406" translate="yes" xml:space="preserve">
          <source>Class::getParentClass</source>
          <target state="translated">Class::getParentClass</target>
        </trans-unit>
        <trans-unit id="5a8acca997281ffc655a629dc1d0b4bb5cd164f9" translate="yes" xml:space="preserve">
          <source>Class::getProperties</source>
          <target state="translated">Class::getProperties</target>
        </trans-unit>
        <trans-unit id="101dfe30b735bfad61cc2f2f815124e9b7bd4d4d" translate="yes" xml:space="preserve">
          <source>Class::getProperty</source>
          <target state="translated">Class::getProperty</target>
        </trans-unit>
        <trans-unit id="a1fbf181e8a8006a59ba2aaaa76a4d92024c9160" translate="yes" xml:space="preserve">
          <source>Class::getReflectionConstant</source>
          <target state="translated">Class::getReflectionConstant</target>
        </trans-unit>
        <trans-unit id="a508a481a941ebd55202dccd2fd928cac0c1e4e6" translate="yes" xml:space="preserve">
          <source>Class::getReflectionConstants</source>
          <target state="translated">Class::getReflectionConstants</target>
        </trans-unit>
        <trans-unit id="7f860fecf27f3ef0fa7ada71c98765a6d7e35c1e" translate="yes" xml:space="preserve">
          <source>Class::getShortName</source>
          <target state="translated">Class::getShortName</target>
        </trans-unit>
        <trans-unit id="ac082d3e955b2dbb8509311613bc4f31bd0ed636" translate="yes" xml:space="preserve">
          <source>Class::getStartLine</source>
          <target state="translated">Class::getStartLine</target>
        </trans-unit>
        <trans-unit id="ee4b66c9f7e14341aceebd9a2b8f2745b5717af1" translate="yes" xml:space="preserve">
          <source>Class::getStaticProperties</source>
          <target state="translated">Class::getStaticProperties</target>
        </trans-unit>
        <trans-unit id="f2da269fc12cffaf3fdbf581964376e757b9d6a8" translate="yes" xml:space="preserve">
          <source>Class::getStaticPropertyValue</source>
          <target state="translated">Class::getStaticPropertyValue</target>
        </trans-unit>
        <trans-unit id="ac8072c2589408adc842f0c78349fbbca9b40e29" translate="yes" xml:space="preserve">
          <source>Class::getTraitAliases</source>
          <target state="translated">Class::getTraitAliases</target>
        </trans-unit>
        <trans-unit id="137d5a7e80ddc00fe19b77e2316d5094e4eac557" translate="yes" xml:space="preserve">
          <source>Class::getTraitNames</source>
          <target state="translated">Class::getTraitNames</target>
        </trans-unit>
        <trans-unit id="9cfb77c0c3d74f880717b7aeac3e5a9573b48dd5" translate="yes" xml:space="preserve">
          <source>Class::getTraits</source>
          <target state="translated">Class::getTraits</target>
        </trans-unit>
        <trans-unit id="090b194a6590c1afdeb35d60ca9cde9831c77e24" translate="yes" xml:space="preserve">
          <source>Class::hasConstant</source>
          <target state="translated">Class::hasConstant</target>
        </trans-unit>
        <trans-unit id="5e09e31019bd61e3188632658ac20410d751edce" translate="yes" xml:space="preserve">
          <source>Class::hasMethod</source>
          <target state="translated">Class::hasMethod</target>
        </trans-unit>
        <trans-unit id="0c3cc875de059db606f550b6a2dc83a381c7f87d" translate="yes" xml:space="preserve">
          <source>Class::hasProperty</source>
          <target state="translated">Class::hasProperty</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
