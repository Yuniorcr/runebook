<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="4589aad49e34c53d9414ff100652ef2f5a36575b" translate="yes" xml:space="preserve">
          <source>PDO::exec &amp;mdash;  Execute an SQL statement and return the number of affected rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff96c11f3e1f5645c416c34ef15f2ea3c5758e9" translate="yes" xml:space="preserve">
          <source>PDO::exec &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4262bd86363773d30a55b1e289785b30da61e97" translate="yes" xml:space="preserve">
          <source>PDO::getAttribute</source>
          <target state="translated">PDO::getAttribute</target>
        </trans-unit>
        <trans-unit id="ebef50dd510b82477135f3efe04cf90c1bebd6fa" translate="yes" xml:space="preserve">
          <source>PDO::getAttribute &amp;mdash;  Retrieve a database connection attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a933d671fdcc67490c5345f0d308108813fabd29" translate="yes" xml:space="preserve">
          <source>PDO::getAttribute &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4031f9a19b7ef3a6a9dac5113709d8658f11d7" translate="yes" xml:space="preserve">
          <source>PDO::getAvailableDrivers</source>
          <target state="translated">PDO::getAvailableDrivers</target>
        </trans-unit>
        <trans-unit id="930916e63efdd7e20ef8a9b350008da552d55c5e" translate="yes" xml:space="preserve">
          <source>PDO::getAvailableDrivers &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24cc3e8f45789827fffac75e6b5d3c9c233dacfb" translate="yes" xml:space="preserve">
          <source>PDO::getAvailableDrivers -- pdo_drivers &amp;mdash;  Return an array of available PDO drivers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c469cad344aaa240cf294cb9a7bc223bbf98dec" translate="yes" xml:space="preserve">
          <source>PDO::inTransaction</source>
          <target state="translated">PDO::inTransaction</target>
        </trans-unit>
        <trans-unit id="a9ca296bee72b2a71503095ad9d7718201cf5b08" translate="yes" xml:space="preserve">
          <source>PDO::inTransaction &amp;mdash;  Checks if inside a transaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e52c68182cd94d9ffe2b6f0cb5d7eebe2a9c9e80" translate="yes" xml:space="preserve">
          <source>PDO::inTransaction &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156b89416c236a00955277561be845a1d829602e" translate="yes" xml:space="preserve">
          <source>PDO::lastInsertId</source>
          <target state="translated">PDO::lastInsertId</target>
        </trans-unit>
        <trans-unit id="335a1a8ad4b3a6fdfaf6dc3983508bcd56c02094" translate="yes" xml:space="preserve">
          <source>PDO::lastInsertId &amp;mdash;  Returns the ID of the last inserted row or sequence value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b98543dbd66d7e3325adad3f69315e0d42f0a658" translate="yes" xml:space="preserve">
          <source>PDO::lastInsertId &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60eacdb4fe4770a25643b8fcaf1c7dd4a944f927" translate="yes" xml:space="preserve">
          <source>PDO::prepare</source>
          <target state="translated">PDO::prepare</target>
        </trans-unit>
        <trans-unit id="e77a3c29e8e69562831003aa62ff80fd2017c023" translate="yes" xml:space="preserve">
          <source>PDO::prepare &amp;mdash;  Prepares a statement for execution and returns a statement object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74674033a0b15c51f746bf144d79cf19c813b1a1" translate="yes" xml:space="preserve">
          <source>PDO::prepare &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3130dc991f8bd895a0c80a9027c1359140423390" translate="yes" xml:space="preserve">
          <source>PDO::query</source>
          <target state="translated">PDO::query</target>
        </trans-unit>
        <trans-unit id="61744715545ef5d0e2401c27dfe54520d60b66bf" translate="yes" xml:space="preserve">
          <source>PDO::query &amp;mdash;  Executes an SQL statement, returning a result set as a PDOStatement object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82f24db6c2b7ffcc763e0b9c8d98ebf80cfeda37" translate="yes" xml:space="preserve">
          <source>PDO::query &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b93ee02aea186d679636c898f70f144f8dec3a" translate="yes" xml:space="preserve">
          <source>PDO::quote</source>
          <target state="translated">PDO::quote</target>
        </trans-unit>
        <trans-unit id="f5f338e1d42a5e7f492960838feefcb1c9cc6bff" translate="yes" xml:space="preserve">
          <source>PDO::quote &amp;mdash;  Quotes a string for use in a query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f784783220b79caabc2b10057a9c8779d43f1afb" translate="yes" xml:space="preserve">
          <source>PDO::quote &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bbf3f25358e4585466158a6f18eab9644e5b763" translate="yes" xml:space="preserve">
          <source>PDO::rollBack</source>
          <target state="translated">PDO::rollBack</target>
        </trans-unit>
        <trans-unit id="3e4704db54f86b9606e8e784ad1c92da46eff3b3" translate="yes" xml:space="preserve">
          <source>PDO::rollBack &amp;mdash;  Rolls back a transaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8a8b838cceb0efe9959e27167d617d732d39301" translate="yes" xml:space="preserve">
          <source>PDO::rollBack &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a517946720d740de890cc89206f77a07b4fa5f3" translate="yes" xml:space="preserve">
          <source>PDO::setAttribute</source>
          <target state="translated">PDO::setAttribute</target>
        </trans-unit>
        <trans-unit id="16ef89ed70911bef5ac5ffc0e72bfd8f0842085f" translate="yes" xml:space="preserve">
          <source>PDO::setAttribute &amp;mdash;  Set an attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef5eb0795edde93578da64ae4cc191ae982c63f" translate="yes" xml:space="preserve">
          <source>PDO::setAttribute &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45bff1b4f49a597e9d5b5d73f4de519e96bc966d" translate="yes" xml:space="preserve">
          <source>PDOException &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160755af7b2004a80676fa703cd9a856bf4cf6c5" translate="yes" xml:space="preserve">
          <source>PDOException (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a8104659a16d9f606288d5977e768b5e09281d1" translate="yes" xml:space="preserve">
          <source>PDOStatement &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7ed07946c28dff77b2d047fc528499e2fddcd5" translate="yes" xml:space="preserve">
          <source>PDOStatement (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f44206b47245eea145d992ccf98eecf7add4813c" translate="yes" xml:space="preserve">
          <source>PDOStatement::bindColumn</source>
          <target state="translated">PDOStatement::bindColumn</target>
        </trans-unit>
        <trans-unit id="49529303794e403734e3a9932880864897da317a" translate="yes" xml:space="preserve">
          <source>PDOStatement::bindColumn &amp;mdash;  Bind a column to a PHP variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872344681b8314aed932bb55df13be86b242f197" translate="yes" xml:space="preserve">
          <source>PDOStatement::bindColumn &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7789134efd4ad7d4c52929642354f666c946c03b" translate="yes" xml:space="preserve">
          <source>PDOStatement::bindParam</source>
          <target state="translated">PDOStatement::bindParam</target>
        </trans-unit>
        <trans-unit id="9dfd995fb2f4771786b0079603745a7c35d42578" translate="yes" xml:space="preserve">
          <source>PDOStatement::bindParam &amp;mdash;  Binds a parameter to the specified variable name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0512f988f3bb1ec9d63ccf7fa99191f7a29823" translate="yes" xml:space="preserve">
          <source>PDOStatement::bindParam &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea48446e95d9a70efc570eb324684fcd619d0ae9" translate="yes" xml:space="preserve">
          <source>PDOStatement::bindValue</source>
          <target state="translated">PDOStatement::bindValue</target>
        </trans-unit>
        <trans-unit id="33b4bfc465de4a6046c800bb901e1d89f9b3c151" translate="yes" xml:space="preserve">
          <source>PDOStatement::bindValue &amp;mdash;  Binds a value to a parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62359e4bd63c28d4d07b424544ee73a8aea45405" translate="yes" xml:space="preserve">
          <source>PDOStatement::bindValue &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafdf4657ebf1091e7005e934ff50920b2f837c3" translate="yes" xml:space="preserve">
          <source>PDOStatement::closeCursor</source>
          <target state="translated">PDOStatement::closeCursor</target>
        </trans-unit>
        <trans-unit id="e4f598a77b42661ae837c28dd88baa461da959cf" translate="yes" xml:space="preserve">
          <source>PDOStatement::closeCursor &amp;mdash;  Closes the cursor, enabling the statement to be executed again</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41dfa51b09a718ad5e02b866c042454ce63356a9" translate="yes" xml:space="preserve">
          <source>PDOStatement::closeCursor &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d75f6234ddb08e185754bd89ca2c531152252f3" translate="yes" xml:space="preserve">
          <source>PDOStatement::columnCount</source>
          <target state="translated">PDOStatement::columnCount</target>
        </trans-unit>
        <trans-unit id="c74aa1746bc56a97e47ea25b257a157e20d31625" translate="yes" xml:space="preserve">
          <source>PDOStatement::columnCount &amp;mdash;  Returns the number of columns in the result set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0b31a45acbb9238725cfb73ab8ca67e377b518a" translate="yes" xml:space="preserve">
          <source>PDOStatement::columnCount &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031b9efa1f1735f00ca7f191cd2145eaa24146df" translate="yes" xml:space="preserve">
          <source>PDOStatement::debugDumpParams</source>
          <target state="translated">PDOStatement::debugDumpParams</target>
        </trans-unit>
        <trans-unit id="ee520f49ee9164c0ee6c367817afd70c34a53018" translate="yes" xml:space="preserve">
          <source>PDOStatement::debugDumpParams &amp;mdash;  Dump an SQL prepared command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b432bb9a203827f86242762de18d89d502be94d" translate="yes" xml:space="preserve">
          <source>PDOStatement::debugDumpParams &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f712f0c39899d9737b9b233aa5cf41bf8024b9b3" translate="yes" xml:space="preserve">
          <source>PDOStatement::errorCode</source>
          <target state="translated">PDOStatement::errorCode</target>
        </trans-unit>
        <trans-unit id="aa5d55b8497ecbf02817f6ead3f7b0d008299954" translate="yes" xml:space="preserve">
          <source>PDOStatement::errorCode &amp;mdash;  Fetch the SQLSTATE associated with the last operation on the statement handle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129e5b0c634d79b52311bebd0a584f35dc674cb5" translate="yes" xml:space="preserve">
          <source>PDOStatement::errorCode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e60a912ef258b3708034ea6553c42b542bb75f4" translate="yes" xml:space="preserve">
          <source>PDOStatement::errorInfo</source>
          <target state="translated">PDOStatement::errorInfo</target>
        </trans-unit>
        <trans-unit id="c2e75c5701accee91a074517a810db850cd4463d" translate="yes" xml:space="preserve">
          <source>PDOStatement::errorInfo &amp;mdash;  Fetch extended error information associated with the last operation on the statement handle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e82bab4f330af0d48c826238b2983ffe4863b6" translate="yes" xml:space="preserve">
          <source>PDOStatement::errorInfo &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0811ddd149508829fad3a42996295558e70aaeaf" translate="yes" xml:space="preserve">
          <source>PDOStatement::execute</source>
          <target state="translated">PDOStatement::execute</target>
        </trans-unit>
        <trans-unit id="74c491f7a611dac44e75d2947954e92706b6fd18" translate="yes" xml:space="preserve">
          <source>PDOStatement::execute &amp;mdash;  Executes a prepared statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130ef98edce9aa15dea4abb480b5ca2846efa23b" translate="yes" xml:space="preserve">
          <source>PDOStatement::execute &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7257d9c2ba7585fac7cdd258ff5da5400ec3ab56" translate="yes" xml:space="preserve">
          <source>PDOStatement::fetch</source>
          <target state="translated">PDOStatement::fetch</target>
        </trans-unit>
        <trans-unit id="6d4dbf17b5bfb6ce0450f8d8b9580cb3ba42a0e4" translate="yes" xml:space="preserve">
          <source>PDOStatement::fetch &amp;mdash;  Fetches the next row from a result set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c55d37eac5d951eeb3d066006613a367679dd3" translate="yes" xml:space="preserve">
          <source>PDOStatement::fetch &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3a6101f8a73034a4c5cabc43abd277f332f51f" translate="yes" xml:space="preserve">
          <source>PDOStatement::fetchAll</source>
          <target state="translated">PDOStatement::fetchAll</target>
        </trans-unit>
        <trans-unit id="a3863473c7f2a8cc613c971837512ab2ec24084b" translate="yes" xml:space="preserve">
          <source>PDOStatement::fetchAll &amp;mdash;  Returns an array containing all of the result set rows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3b9be6e6185cd557f8376b77b9fa140f7931112" translate="yes" xml:space="preserve">
          <source>PDOStatement::fetchAll &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad6a37bf3a225a191669ae8bc42db02690ddad7e" translate="yes" xml:space="preserve">
          <source>PDOStatement::fetchColumn</source>
          <target state="translated">PDOStatement::fetchColumn</target>
        </trans-unit>
        <trans-unit id="0c88fbd75f523ce0bbc582a5d83dff9f0db5d672" translate="yes" xml:space="preserve">
          <source>PDOStatement::fetchColumn &amp;mdash;  Returns a single column from the next row of a result set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa00d3d27c2a53453ec1cf9455301150ee3848a" translate="yes" xml:space="preserve">
          <source>PDOStatement::fetchColumn &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d13813a239316815d39f2e52d748324061d3f887" translate="yes" xml:space="preserve">
          <source>PDOStatement::fetchObject</source>
          <target state="translated">PDOStatement::fetchObject</target>
        </trans-unit>
        <trans-unit id="8b2fb2f32be12d0086bb172379e0ff4cdaadba23" translate="yes" xml:space="preserve">
          <source>PDOStatement::fetchObject &amp;mdash; Fetches the next row and returns it as an object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ccd20f768c5c986937292fee5d9b2515eaaeeb" translate="yes" xml:space="preserve">
          <source>PDOStatement::fetchObject &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f331549da6cb3b8813c97807130b11d237bd04d" translate="yes" xml:space="preserve">
          <source>PDOStatement::getAttribute</source>
          <target state="translated">PDOStatement::getAttribute</target>
        </trans-unit>
        <trans-unit id="6fba84ff7ea2fce0960840c9d59f17e49a96c6e5" translate="yes" xml:space="preserve">
          <source>PDOStatement::getAttribute &amp;mdash;  Retrieve a statement attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ab11b866db01e1bc2272cb186225a30d991575" translate="yes" xml:space="preserve">
          <source>PDOStatement::getAttribute &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d83f113556a52f14565cb622a28227010fc58d" translate="yes" xml:space="preserve">
          <source>PDOStatement::getColumnMeta</source>
          <target state="translated">PDOStatement::getColumnMeta</target>
        </trans-unit>
        <trans-unit id="012b44c98c144c73bb2116c3d44750658d67a77d" translate="yes" xml:space="preserve">
          <source>PDOStatement::getColumnMeta &amp;mdash;  Returns metadata for a column in a result set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3797e5cc39c5990d65fcb3756b76d1bb0e3ee109" translate="yes" xml:space="preserve">
          <source>PDOStatement::getColumnMeta &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3b03d31e0d62876a5497be3733f9ea2c8812f00" translate="yes" xml:space="preserve">
          <source>PDOStatement::nextRowset</source>
          <target state="translated">PDOStatement::nextRowset</target>
        </trans-unit>
        <trans-unit id="b5b9c37e725388581be5db35523136f61c781e19" translate="yes" xml:space="preserve">
          <source>PDOStatement::nextRowset &amp;mdash;  Advances to the next rowset in a multi-rowset statement handle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca0a71399cbc8ded3087e3c04022ff05660870a" translate="yes" xml:space="preserve">
          <source>PDOStatement::nextRowset &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4167e34ef6172cba1076d8d100851f01e37cbc" translate="yes" xml:space="preserve">
          <source>PDOStatement::rowCount</source>
          <target state="translated">PDOStatement::rowCount</target>
        </trans-unit>
        <trans-unit id="bc52fdbfea16466e86bf23c1551bc70a5718620a" translate="yes" xml:space="preserve">
          <source>PDOStatement::rowCount &amp;mdash;  Returns the number of rows affected by the last SQL statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fdd1f7a0809b5459d8c5d1bdb6daceac3e973b7" translate="yes" xml:space="preserve">
          <source>PDOStatement::rowCount &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9973fb02d688e9bb349ec53e9ba97e12eca461b2" translate="yes" xml:space="preserve">
          <source>PDOStatement::setAttribute</source>
          <target state="translated">PDOStatement::setAttribute</target>
        </trans-unit>
        <trans-unit id="a0a237c509f1f30e3670e1db2f825cd7e4aeb573" translate="yes" xml:space="preserve">
          <source>PDOStatement::setAttribute &amp;mdash;  Set a statement attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c06ec983dae6b6f871b0edf143d5d52c70d503" translate="yes" xml:space="preserve">
          <source>PDOStatement::setAttribute &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7bab0d22a1db0564fe463afe579a9fa6feae7b" translate="yes" xml:space="preserve">
          <source>PDOStatement::setFetchMode</source>
          <target state="translated">PDOStatement::setFetchMode</target>
        </trans-unit>
        <trans-unit id="4a4825a0373595fb91cfe8ee6323dfe91005d578" translate="yes" xml:space="preserve">
          <source>PDOStatement::setFetchMode &amp;mdash;  Set the default fetch mode for this statement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee21a9bf7714bbd83a0f45f12cbcd62597edda3" translate="yes" xml:space="preserve">
          <source>PDOStatement::setFetchMode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd57563a4428ac7ae62d014d79a3e75c07cc28c" translate="yes" xml:space="preserve">
          <source>PDO_DBLIB</source>
          <target state="translated">PDO_DBLIB</target>
        </trans-unit>
        <trans-unit id="40141c90fe075f2358968aaa008921330672b6c4" translate="yes" xml:space="preserve">
          <source>PDO_MYSQL</source>
          <target state="translated">PDO_MYSQL</target>
        </trans-unit>
        <trans-unit id="967127b79f6010d8ab6a52bd0da3476c68a68bb0" translate="yes" xml:space="preserve">
          <source>PDO_PGSQL</source>
          <target state="translated">PDO_PGSQL</target>
        </trans-unit>
        <trans-unit id="73236cde6205b8bfb1432dfc80b21ea065cdba07" translate="yes" xml:space="preserve">
          <source>PDO_SQLITE</source>
          <target state="translated">PDO_SQLITE</target>
        </trans-unit>
        <trans-unit id="f3ae853732fd0c6a5033e4fc48c0c31c645f4fdb" translate="yes" xml:space="preserve">
          <source>PECL Solr &amp;gt;= 2.0 only supports Solr Server &amp;gt;= 4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff3eeb5667c787c7790de6ee7413327ed9e891c" translate="yes" xml:space="preserve">
          <source>PECL Solr &amp;lt; 2.0 $allowDups was used instead of $overwrite, which does the same functionality with exact opposite bool flag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c1a65f5d2d2d7f26b15c66dabbe45f18d681c8d" translate="yes" xml:space="preserve">
          <source>PECL/sphinx Version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7daf403c7589f4927632ed3b6af762a992f09b78" translate="yes" xml:space="preserve">
          <source>PHP</source>
          <target state="translated">PHP</target>
        </trans-unit>
        <trans-unit id="ff7d615989411469fa58650687c277a8964edff4" translate="yes" xml:space="preserve">
          <source>PHP 5 Exceptions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0d177314ddddd24a6493796d85505be946d729" translate="yes" xml:space="preserve">
          <source>PHP 5 allows developers to declare constructor methods for classes. Classes which have a constructor method call this method on each newly-created object, so it is suitable for any initialization that the object may need before it is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b511092b60420dba48f7ec90481ef115b911974" translate="yes" xml:space="preserve">
          <source>PHP 5 and 7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57b622ba29cc5fd60c9848b3ef562244dad1dc00" translate="yes" xml:space="preserve">
          <source>PHP 5 has an exception model similar to that of other programming languages. An exception can be &lt;a href=&quot;language.exceptions&quot;&gt;&lt;em&gt;throw&lt;/em&gt;&lt;/a&gt;n, and caught (&quot;&lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;em&gt;catch&lt;/em&gt;&lt;/a&gt;ed&quot;) within PHP. Code may be surrounded in a &lt;a href=&quot;language.exceptions&quot;&gt;&lt;em&gt;try&lt;/em&gt;&lt;/a&gt; block, to facilitate the catching of potential exceptions. Each &lt;a href=&quot;language.exceptions&quot;&gt;&lt;em&gt;try&lt;/em&gt;&lt;/a&gt; must have at least one corresponding &lt;a href=&quot;language.exceptions#language.exceptions.catch&quot;&gt;&lt;em&gt;catch&lt;/em&gt;&lt;/a&gt; or &lt;a href=&quot;language.exceptions#language.exceptions.finally&quot;&gt;&lt;em&gt;finally&lt;/em&gt;&lt;/a&gt; block.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68b9e35c502009ce8ab31a599131a3cb92774a32" translate="yes" xml:space="preserve">
          <source>PHP 5 introduces a destructor concept similar to that of other object-oriented languages, such as C++. The destructor method will be called as soon as there are no other references to a particular object, or in any order during the shutdown sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5003e355cedd8b0869ff10e1bd858dcfda5d19" translate="yes" xml:space="preserve">
          <source>PHP 5 introduces abstract classes and methods. Classes defined as abstract may not be instantiated, and any class that contains at least one abstract method must also be abstract. Methods defined as abstract simply declare the method's signature - they cannot define the implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c91c43842cf64f31b10ab48d547ad98105cc33" translate="yes" xml:space="preserve">
          <source>PHP 5 introduces the final keyword, which prevents child classes from overriding a method by prefixing the definition with &lt;em&gt;final&lt;/em&gt;. If the class itself is being defined final then it cannot be extended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c2f5f5cd05e0390fc8ce4c4b3b1941e0e81d7f" translate="yes" xml:space="preserve">
          <source>PHP 5 provides a way for objects to be defined so it is possible to iterate through a list of items, with, for example a &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; statement. By default, all &lt;a href=&quot;language.oop5.visibility&quot;&gt;visible&lt;/a&gt; properties will be used for the iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478784ac608215e0ac6a74854db9fc827cd90519" translate="yes" xml:space="preserve">
          <source>PHP 5.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4281ae68c3a984873476db11f464239ebbb830" translate="yes" xml:space="preserve">
          <source>PHP 5.1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0a2dd369a06d38e2f712aa639afd74fb71f8109" translate="yes" xml:space="preserve">
          <source>PHP 5.3.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445c814cef5adc5cdb1cc5a9e71f3b809acf5d3a" translate="yes" xml:space="preserve">
          <source>PHP 5.3.0 introduced a couple of new ways to create instances of an object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f776f22b366ee55c1743bc4675070c770ebc860a" translate="yes" xml:space="preserve">
          <source>PHP 5.3.3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fae2b7d47d90f0bc375715b6c68beecfdd4aef" translate="yes" xml:space="preserve">
          <source>PHP 5.4 changes how &lt;strong&gt;empty()&lt;/strong&gt; behaves when passed string offsets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ddc1fc8b13e0d7af2a7bb919bcb7d36603a609" translate="yes" xml:space="preserve">
          <source>PHP 5.4 changes how &lt;strong&gt;isset()&lt;/strong&gt; behaves when passed string offsets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35368730bd6bd01fc9aa6c1c2fa035d0809ce803" translate="yes" xml:space="preserve">
          <source>PHP 5.4.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa440a460d9dc2197899d47c3ce118c314cd788" translate="yes" xml:space="preserve">
          <source>PHP 5.4.0 introduced the possibility to access a member of a newly created object in a single expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10ae77aa3e567ba1f67bba0f85113809c23045ff" translate="yes" xml:space="preserve">
          <source>PHP 5.5 added support for accessing characters within string literals using &lt;em&gt;[]&lt;/em&gt; or &lt;em&gt;{}&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="336570a85f26b7279dfa3d6fb9c4ca355d6511d7" translate="yes" xml:space="preserve">
          <source>PHP 5.5 added the ability to iterate over an array of arrays and unpack the nested array into loop variables by providing a &lt;a href=&quot;function.list&quot;&gt;list()&lt;/a&gt; as the value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="969921ec142debfa02972f326273163a64d25ef9" translate="yes" xml:space="preserve">
          <source>PHP 5.5.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084c3eec12a7ea0542a27183c70a323878c7d71b" translate="yes" xml:space="preserve">
          <source>PHP 7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148301c9762f73ea5f504e3277f326d6a4599f9c" translate="yes" xml:space="preserve">
          <source>PHP 7 adds support for return type declarations. Similarly to &lt;a href=&quot;functions.arguments#functions.arguments.type-declaration&quot;&gt;argument type declarations&lt;/a&gt;, return type declarations specify the type of the value that will be returned from a function. The same &lt;a href=&quot;functions.arguments#functions.arguments.type-declaration.types&quot;&gt;types&lt;/a&gt; are available for return type declarations as are available for argument type declarations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d082efd951d22a7a9a506b3cf1ab41666af8890b" translate="yes" xml:space="preserve">
          <source>PHP 7 changes how most errors are reported by PHP. Instead of reporting errors through the traditional error reporting mechanism used by PHP 5, most errors are now reported by throwing &lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; exceptions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52fe5a5b8b229d072156284984ffc094a5ba28bf" translate="yes" xml:space="preserve">
          <source>PHP 7 removes support for ASP tags and &lt;code&gt;&amp;lt;script language=&quot;php&quot;&amp;gt;&lt;/code&gt; tags. As such, we recommend only using &lt;code&gt;&amp;lt;?php ?&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;?= ?&amp;gt;&lt;/code&gt; when writing PHP code to maximise compatibility.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff9e3697a1408bebba6b9af4000e3800d6d8631" translate="yes" xml:space="preserve">
          <source>PHP 7.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec95a7d172cb2400225e9f8ade112d4c77a40c8b" translate="yes" xml:space="preserve">
          <source>PHP 7.0.0 introduced the possibility to access a member of a freshly cloned object in a single expression:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797946d6c836562370f227da124a0c1efb63bd96" translate="yes" xml:space="preserve">
          <source>PHP 7.0.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71b394156f9d73c1d417e3fe641a7f795beba1e" translate="yes" xml:space="preserve">
          <source>PHP 7.1+, One of &lt;a href=&quot;function.openssl-get-curve-names&quot;&gt;openssl_get_curve_names()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fb440556fea8f652f4b4da7db0053d530f7858f" translate="yes" xml:space="preserve">
          <source>PHP 7.1.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16678544826a5fe19095dcfb0c4dcb30443badc5" translate="yes" xml:space="preserve">
          <source>PHP 7.2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="648676323b9059fea4afa6536c95f8b1bead2bff" translate="yes" xml:space="preserve">
          <source>PHP Code to be lint checked</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81a4178be5d74d9009baddf2c09c4372ffa2220f" translate="yes" xml:space="preserve">
          <source>PHP Credits. See also &lt;a href=&quot;function.phpcredits&quot;&gt;phpcredits()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4c551d39411058148c51e275a1f5daa417083a" translate="yes" xml:space="preserve">
          <source>PHP License information. See also the &lt;a href=&quot;http://www.php.net/license/&quot;&gt;&amp;raquo; license FAQ&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0af6d76124c380fb5c6e42045d859b9ab6a8c0e7" translate="yes" xml:space="preserve">
          <source>PHP Namespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63aa6bb6c78c265ebb19beefba83f1c42d0c2e7d" translate="yes" xml:space="preserve">
          <source>PHP Namespaces provide a way in which to group related classes, interfaces, functions and constants. Here is an example of namespace syntax in PHP:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec12c58c5226e7e9e9a307e9744caf97bcc6f894" translate="yes" xml:space="preserve">
          <source>PHP Options/Info &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24357ce9fab9d46e80a038fa7991e8070d6ab34e" translate="yes" xml:space="preserve">
          <source>PHP additionally supports a convenience shortcut to place multiple use statements on the same line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852277c4b006eb8d460b65a813561e4094ad934a" translate="yes" xml:space="preserve">
          <source>PHP already provides a number of iterators for many day to day tasks. See &lt;a href=&quot;https://secure.php.net/manual/en/spl.iterators.php&quot;&gt;SPL iterators&lt;/a&gt; for a list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095fe1d587f1c0bbef032168ab159cfbc45ee511" translate="yes" xml:space="preserve">
          <source>PHP also allows for short open tag &lt;em&gt;&amp;lt;?&lt;/em&gt; (which is discouraged since it is only available if enabled using the &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.short-open-tag&quot;&gt;short_open_tag&lt;/a&gt;&lt;var&gt;php.ini&lt;/var&gt; configuration file directive, or if PHP was configured with the &lt;strong&gt;--enable-short-tags&lt;/strong&gt; option).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9ffce4a3dc7fd30e6e0c29552e17efe7c65422" translate="yes" xml:space="preserve">
          <source>PHP also allows the use of &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;s and the special type &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; as default values, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c02fad902ab8881ecb14f781f953f435e1d267c" translate="yes" xml:space="preserve">
          <source>PHP also offers another way to assign values to variables: &lt;a href=&quot;https://secure.php.net/manual/en/language.references.php&quot;&gt;assign by reference&lt;/a&gt;. This means that the new variable simply references (in other words, &quot;becomes an alias for&quot; or &quot;points to&quot;) the original variable. Changes to the new variable affect the original, and vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87be8b43705a4b03edfc50417b2b013c51b85e6c" translate="yes" xml:space="preserve">
          <source>PHP also supports associative arrays, and generators are no different. In addition to yielding simple values, as shown above, you can also yield a key at the same time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420a6f525f11c5008e60fe6ca026876764cc5ed1" translate="yes" xml:space="preserve">
          <source>PHP also supports the alternate &quot;colon syntax&quot; for &lt;em&gt;for&lt;/em&gt; loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ec7d58a5156cd4a7df519f76eea76aeb4560cc" translate="yes" xml:space="preserve">
          <source>PHP also understands arrays in the context of form variables (see the &lt;a href=&quot;https://secure.php.net/manual/en/faq.php.html&quot;&gt;related faq&lt;/a&gt;). You may, for example, group related variables together, or use this feature to retrieve values from a multiple select input. For example, let's post a form to itself and upon submission display the data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1ed58878f6df7c95a4b2dc6099a4bf2fb72eaa" translate="yes" xml:space="preserve">
          <source>PHP arrays can contain &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; and &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; keys at the same time as PHP does not distinguish between indexed and associative arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc370f58fad7f5472c9ea5976346f503c1a3fac8" translate="yes" xml:space="preserve">
          <source>PHP automatically sets this option to &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;, this should only be changed for debugging purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7293c64e5b93086e5485175c62606886fe509bf0" translate="yes" xml:space="preserve">
          <source>PHP classes cannot implement the &lt;strong&gt;Throwable&lt;/strong&gt; interface directly, and must instead extend &lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab61eab424f10892e682e87d3a2c8a5b836a127a" translate="yes" xml:space="preserve">
          <source>PHP comes standard with many functions and constructs. There are also functions that require specific PHP extensions compiled in, otherwise fatal &quot;undefined function&quot; errors will appear. For example, to use &lt;a href=&quot;https://secure.php.net/manual/en/ref.image.php&quot;&gt;image&lt;/a&gt; functions such as &lt;a href=&quot;function.imagecreatetruecolor&quot;&gt;imagecreatetruecolor()&lt;/a&gt;, PHP must be compiled with GD support. Or, to use &lt;a href=&quot;function.mysqli-connect&quot;&gt;mysqli_connect()&lt;/a&gt;, PHP must be compiled with &lt;a href=&quot;https://secure.php.net/manual/en/book.mysqli.php&quot;&gt;MySQLi&lt;/a&gt; support. There are many core functions that are included in every version of PHP, such as the &lt;a href=&quot;https://secure.php.net/manual/en/ref.strings.php&quot;&gt;string&lt;/a&gt; and &lt;a href=&quot;https://secure.php.net/manual/en/ref.var.php&quot;&gt;variable&lt;/a&gt; functions. A call to &lt;a href=&quot;function.phpinfo&quot;&gt;phpinfo()&lt;/a&gt; or &lt;a href=&quot;function.get-loaded-extensions&quot;&gt;get_loaded_extensions()&lt;/a&gt; will show which extensions are loaded into PHP. Also note that many extensions are enabled by default and that the PHP manual is split up by extension. See the &lt;a href=&quot;https://secure.php.net/manual/en/configuration.php&quot;&gt;configuration&lt;/a&gt;, &lt;a href=&quot;https://secure.php.net/manual/en/install.php&quot;&gt;installation&lt;/a&gt;, and individual extension chapters, for information on how to set up PHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5e771b8cb4397db8f5d85f40d7748fa1becf3d" translate="yes" xml:space="preserve">
          <source>PHP does not allow nesting namespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b26563b333f9644f2a0362771dc9d9f926a1b0" translate="yes" xml:space="preserve">
          <source>PHP does not require (or support) explicit type definition in variable declaration; a variable's type is determined by the context in which the variable is used. That is to say, if a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; value is assigned to variable &lt;var&gt;&lt;var&gt;$var&lt;/var&gt;&lt;/var&gt;, &lt;var&gt;&lt;var&gt;$var&lt;/var&gt;&lt;/var&gt; becomes a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;. If an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; value is then assigned to &lt;var&gt;&lt;var&gt;$var&lt;/var&gt;&lt;/var&gt;, it becomes an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d421a893c48c769704cf38dbd31002faeddb1c40" translate="yes" xml:space="preserve">
          <source>PHP does not support function overloading, nor is it possible to undefine or redefine previously-declared functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3db3692fa9676a7c425992494a540aa4a894eb6" translate="yes" xml:space="preserve">
          <source>PHP does not track memory that is not allocated by &lt;em&gt;emalloc()&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6eeda41c0f5646b2ded1f33d1c674cf6a1be19" translate="yes" xml:space="preserve">
          <source>PHP follows Perl's convention when dealing with arithmetic operations on character variables and not C's. For example, in PHP and Perl &lt;em&gt;$a = 'Z'; $a++;&lt;/em&gt; turns &lt;em&gt;$a&lt;/em&gt; into &lt;em&gt;'AA'&lt;/em&gt;, while in C &lt;em&gt;a = 'Z'; a++;&lt;/em&gt; turns &lt;em&gt;a&lt;/em&gt; into &lt;em&gt;'['&lt;/em&gt; (ASCII value of &lt;em&gt;'Z'&lt;/em&gt; is 90, ASCII value of &lt;em&gt;'['&lt;/em&gt; is 91). Note that character variables can be incremented but not decremented and even so only plain ASCII alphabets and digits (a-z, A-Z and 0-9) are supported. Incrementing/decrementing other character variables has no effect, the original string is unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1201cb386f5d68d39bdcda56406338fc3c35ff2" translate="yes" xml:space="preserve">
          <source>PHP has support for variable-length argument lists in user-defined functions. This is implemented using the &lt;em&gt;...&lt;/em&gt; token in PHP 5.6 and later, and using the &lt;a href=&quot;function.func-num-args&quot;&gt;func_num_args()&lt;/a&gt;, &lt;a href=&quot;function.func-get-arg&quot;&gt;func_get_arg()&lt;/a&gt;, and &lt;a href=&quot;function.func-get-args&quot;&gt;func_get_args()&lt;/a&gt; functions in PHP 5.5 and earlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25d1b7a0c935d1a790849596310132e7d18f022" translate="yes" xml:space="preserve">
          <source>PHP implements a superset of JSON as specified in the original &lt;a href=&quot;http://www.faqs.org/rfcs/rfc7159&quot;&gt;&amp;raquo; RFC 7159&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaac6509843115bc7ece370e370b2c43bce12572" translate="yes" xml:space="preserve">
          <source>PHP now contains its own implementation for the MD5 crypt, Standard DES, Extended DES and the Blowfish algorithms and will use that if the system lacks of support for one or more of the algorithms.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3845928bd930dfb5fc322805a3f172bc50fcdbc1" translate="yes" xml:space="preserve">
          <source>PHP provides a full and powerful implementation of expressions, and documenting it entirely goes beyond the scope of this manual. The above examples should give you a good idea about what expressions are and how you can construct useful expressions. Throughout the rest of this manual we'll write &lt;var&gt;&lt;var&gt;expr&lt;/var&gt;&lt;/var&gt; to indicate any valid PHP expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69c5841f000ef8c01d7af712e855afa61cdc27c8" translate="yes" xml:space="preserve">
          <source>PHP provides a large number of &lt;a href=&quot;https://secure.php.net/manual/en/reserved.constants.php&quot;&gt;predefined constants&lt;/a&gt; to any script which it runs. Many of these constants, however, are created by various extensions, and will only be present when those extensions are available, either via dynamic loading or because they have been compiled in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d0e76f939337090a13d6a07de045c6a122cafd" translate="yes" xml:space="preserve">
          <source>PHP provides a large number of predefined variables to any script which it runs. Many of these variables, however, cannot be fully documented as they are dependent upon which server is running, the version and setup of the server, and other factors. Some of these variables will not be available when PHP is run on the &lt;a href=&quot;https://secure.php.net/manual/en/features.commandline.php&quot;&gt;command line&lt;/a&gt;. For a listing of these variables, please see the section on &lt;a href=&quot;https://secure.php.net/manual/en/reserved.variables.php&quot;&gt;Reserved Predefined Variables&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d48770c13ece6c72c321071e6ce61b84c6cb2201" translate="yes" xml:space="preserve">
          <source>PHP reports errors in response to a number of internal error conditions. These may be used to signal a number of different conditions, and can be displayed and/or logged as required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b25d9174be77c332b89a5c031c1e9ce2f7c0cb92" translate="yes" xml:space="preserve">
          <source>PHP reserves all function names starting with __ as magical. It is recommended that you do not use function names with __ in PHP unless you want some documented magic functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e606642597008bd75d9663244db95b30b4cf9886" translate="yes" xml:space="preserve">
          <source>PHP script is terminated after sending headers (it means after producing any output without output buffering) if the request method was &lt;em&gt;HEAD&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e180224fb6630052ff19014d6b2fcdd21ee7f74" translate="yes" xml:space="preserve">
          <source>PHP scripts often generate dynamic content that must not be cached by the client browser or any proxy caches between the server and the client browser. Many proxies and clients can be forced to disable caching with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="743dd4f34a376a212d3175ba2dd172cde07371a2" translate="yes" xml:space="preserve">
          <source>PHP streams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="126da35697d5fd1a93b6bb977b069e5b14e015c9" translate="yes" xml:space="preserve">
          <source>PHP supports 'C', 'C++' and Unix shell-style (Perl style) comments. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523e940d4a778696f81a66481f45bc47bb0cb2d4" translate="yes" xml:space="preserve">
          <source>PHP supports C-style pre- and post-increment and decrement operators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe06171de650e0b36bab3e05bd32698b3ee0c12" translate="yes" xml:space="preserve">
          <source>PHP supports a portable way of locking complete files in an advisory way (which means all accessing programs have to use the same way of locking or it will not work). By default, this function will block until the requested lock is acquired; this may be controlled with the &lt;strong&gt;&lt;code&gt;LOCK_NB&lt;/code&gt;&lt;/strong&gt; option documented below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08210e4a1173acbeec8c85062c923ea72d23c86" translate="yes" xml:space="preserve">
          <source>PHP supports changing the argument separator to the W3C-suggested semi-colon through the arg_separator .ini directive. Unfortunately most user agents do not send form data in this semi-colon separated format. A more portable way around this is to use &amp;amp;amp; instead of &amp;amp; as the separator. You don't need to change PHP's arg_separator for this. Leave it as &amp;amp;, but simply encode your URLs using &lt;a href=&quot;function.htmlentities&quot;&gt;htmlentities()&lt;/a&gt; or &lt;a href=&quot;function.htmlspecialchars&quot;&gt;htmlspecialchars()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812a5e2c16b86aac8b6c25a7743ed14f162cf7be" translate="yes" xml:space="preserve">
          <source>PHP supports one error control operator: the at sign (@). When prepended to an expression in PHP, any error messages that might be generated by that expression will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a38c40ccf4cac12c1732161e1eeb7b1a8088ebe6" translate="yes" xml:space="preserve">
          <source>PHP supports one execution operator: backticks (``). Note that these are not single-quotes! PHP will attempt to execute the contents of the backticks as a shell command; the output will be returned (i.e., it won't simply be dumped to output; it can be assigned to a variable). Use of the backtick operator is identical to &lt;a href=&quot;function.shell-exec&quot;&gt;shell_exec()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081d26d8ea981e38c23b0fd1064898d76516d850" translate="yes" xml:space="preserve">
          <source>PHP supports passing arguments by value (the default), &lt;a href=&quot;functions.arguments#functions.arguments.by-reference&quot;&gt;passing by reference&lt;/a&gt;, and &lt;a href=&quot;functions.arguments#functions.arguments.default&quot;&gt;default argument values&lt;/a&gt;. &lt;a href=&quot;functions.arguments#functions.variable-arg-list&quot;&gt;Variable-length argument lists&lt;/a&gt; are also supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0c7205b32256f734a815611f8c14ab12c5a434" translate="yes" xml:space="preserve">
          <source>PHP supports targets in the Internet and Unix domains as described in &lt;a href=&quot;https://secure.php.net/manual/en/transports.php&quot;&gt;List of Supported Socket Transports&lt;/a&gt;. A list of supported transports can also be retrieved using &lt;a href=&quot;function.stream-get-transports&quot;&gt;stream_get_transports()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="705ac98bd1b25b5161deb69d2ecdf100f510395f" translate="yes" xml:space="preserve">
          <source>PHP supports ten primitive types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c700dd16319fb0a38319894cd3bd83c4f7ed5c6" translate="yes" xml:space="preserve">
          <source>PHP supports the concept of variable functions. This means that if a variable name has parentheses appended to it, PHP will look for a function with the same name as whatever the variable evaluates to, and will attempt to execute it. Among other things, this can be used to implement callbacks, function tables, and so forth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad804d7202dd7cccc869b66f4d27487f6244b917" translate="yes" xml:space="preserve">
          <source>PHP supports two ways of abstractly accessing elements within the current namespace, the &lt;strong&gt;&lt;code&gt;__NAMESPACE__&lt;/code&gt;&lt;/strong&gt; magic constant, and the &lt;em&gt;namespace&lt;/em&gt; keyword.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76523dd25ab8cbd577ea731d7e6c8e730524bc5f" translate="yes" xml:space="preserve">
          <source>PHP tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5bc3dee3e3acb8c5cb6bebe93f47ddc8cf57581" translate="yes" xml:space="preserve">
          <source>PHP takes expressions much further, in the same way many other languages do. PHP is an expression-oriented language, in the sense that almost everything is an expression. Consider the example we've already dealt with, '&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; = 5'. It's easy to see that there are two values involved here, the value of the integer constant '5', and the value of &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; which is being updated to 5 as well. But the truth is that there's one additional value involved here, and that's the value of the assignment itself. The assignment itself evaluates to the assigned value, in this case 5. In practice, it means that '&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; = 5', regardless of what it does, is an expression with the value 5. Thus, writing something like '&lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; = (&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; = 5)' is like writing '&lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; = 5; &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; = 5;' (a semicolon marks the end of a statement). Since assignments are parsed in a right to left order, you can also write '&lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt; = &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; = 5'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79a64966127aa2969a335e8bdc0bbd49a8e1b3c4" translate="yes" xml:space="preserve">
          <source>PHP transparently supports HTTP cookies as defined by &lt;a href=&quot;http://www.faqs.org/rfcs/rfc6265&quot;&gt;&amp;raquo; RFC 6265&lt;/a&gt;. Cookies are a mechanism for storing data in the remote browser and thus tracking or identifying return users. You can set cookies using the &lt;a href=&quot;function.setcookie&quot;&gt;setcookie()&lt;/a&gt; function. Cookies are part of the HTTP header, so the SetCookie function must be called before any output is sent to the browser. This is the same restriction as for the &lt;a href=&quot;function.header&quot;&gt;header()&lt;/a&gt; function. Cookie data is then available in the appropriate cookie data arrays, such as &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.cookies&quot;&gt;$_COOKIE&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; as well as in &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.request&quot;&gt;$_REQUEST&lt;/a&gt;&lt;/var&gt;&lt;/var&gt;. See the &lt;a href=&quot;function.setcookie&quot;&gt;setcookie()&lt;/a&gt; manual page for more details and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9148935a580b3dacbc72dfa29790252f452edc" translate="yes" xml:space="preserve">
          <source>PHP value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6422e839bd7947fec7cb0b702b1787ad87d638f4" translate="yes" xml:space="preserve">
          <source>PHP will call this method when the session is ready to be saved and closed. It encodes the session data from the &lt;var&gt;&lt;var&gt;&lt;a href=&quot;reserved.variables.session&quot;&gt;$_SESSION&lt;/a&gt;&lt;/var&gt;&lt;/var&gt; superglobal to a serialized string and passes this along with the session ID to this method for storage. The serialization method used is specified in the &lt;a href=&quot;https://secure.php.net/manual/en/session.configuration.php#ini.session.serialize-handler&quot;&gt;session.serialize_handler&lt;/a&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce274acfca6ee75de4170de951905e9abe36eb9c" translate="yes" xml:space="preserve">
          <source>PHP will not detect that the user has aborted the connection until an attempt is made to send information to the client. Simply using an echo statement does not guarantee that information is sent, see &lt;a href=&quot;function.flush&quot;&gt;flush()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb5e9285992ef02013e3928ec672f0682984e11" translate="yes" xml:space="preserve">
          <source>PHP's implementation of namespaces is influenced by its dynamic nature as a programming language. Thus, to convert code like the following example into namespaced code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df370e2b7001e5b9fd50f7dc73f7297de9c6aaab" translate="yes" xml:space="preserve">
          <source>PHP's interpretation of &quot;overloading&quot; is different than most object oriented languages. Overloading traditionally provides the ability to have multiple methods with the same name but different quantities and types of arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003ec04355f69c64314525e1c25544ac32132f6e" translate="yes" xml:space="preserve">
          <source>PHP: Hypertext Preprocessor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60022a53be828b2f29fc8d6de06dc311e62c1d0e" translate="yes" xml:space="preserve">
          <source>PHP_SAPI</source>
          <target state="translated">PHP_SAPI</target>
        </trans-unit>
        <trans-unit id="00b17e5330ddb100b34f2ae9e21dd19d2995b914" translate="yes" xml:space="preserve">
          <source>PHP_VERSION constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39d4c16a6118885b34d0405b1353bfe999eabcad" translate="yes" xml:space="preserve">
          <source>PKCOLUMN_NAME</source>
          <target state="translated">PKCOLUMN_NAME</target>
        </trans-unit>
        <trans-unit id="6d18301c65d834ec546dfba0ac32589214726991" translate="yes" xml:space="preserve">
          <source>PKTABLE_NAME</source>
          <target state="translated">PKTABLE_NAME</target>
        </trans-unit>
        <trans-unit id="1f6468c98e754fd1c79d776a0138fdfe0068abd2" translate="yes" xml:space="preserve">
          <source>PKTABLE_OWNER</source>
          <target state="translated">PKTABLE_OWNER</target>
        </trans-unit>
        <trans-unit id="8f58d2c9bc48c9b8d870ab4c75b0628220bda4fd" translate="yes" xml:space="preserve">
          <source>PKTABLE_QUALIFIER</source>
          <target state="translated">PKTABLE_QUALIFIER</target>
        </trans-unit>
        <trans-unit id="bc8824dd30e5289db0acd3a5213bbc2c1b506107" translate="yes" xml:space="preserve">
          <source>PK_NAME</source>
          <target state="translated">PK_NAME</target>
        </trans-unit>
        <trans-unit id="70fe60b7dfe0837f2c69677bfef128c134937b16" translate="yes" xml:space="preserve">
          <source>PNG</source>
          <target state="translated">PNG</target>
        </trans-unit>
        <trans-unit id="1d1ea48d9496cfaac7ccf77ed938bce4b41167e2" translate="yes" xml:space="preserve">
          <source>PNG Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97662c7da0968355c9e651f10847918c850ef0f0" translate="yes" xml:space="preserve">
          <source>POP3</source>
          <target state="translated">POP3</target>
        </trans-unit>
        <trans-unit id="23507e798d66fee0b05313c2a15e15ff93e82f20" translate="yes" xml:space="preserve">
          <source>POSIX</source>
          <target state="translated">POSIX</target>
        </trans-unit>
        <trans-unit id="db5b29c5ed321fa72363f534dbbac7764371efe3" translate="yes" xml:space="preserve">
          <source>POSIX &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5534922529525363bff38103efddb30b1f90a35e" translate="yes" xml:space="preserve">
          <source>POSIX Basic regex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2879308aee125c60fd5c5e50f609bf361832d48" translate="yes" xml:space="preserve">
          <source>POSIX Extended regex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3958f1151d81fd679c1d42c37e176e3f60790994" translate="yes" xml:space="preserve">
          <source>POSIX Regex &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d09ef1f08e007e075448707f8bd6020572e3e5" translate="yes" xml:space="preserve">
          <source>POSIX man page GETEUID(2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b0c27fcb7d50ecab0619862f2cc519f29ea5f4a" translate="yes" xml:space="preserve">
          <source>POSIX man page GETGID(2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d3bee17b9e8af9e5ef67ae85c6e8714bda5954" translate="yes" xml:space="preserve">
          <source>POSIX man page GETGRNAM(3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09c8fd20e10affadacd20da8e63d3158c5165c05" translate="yes" xml:space="preserve">
          <source>POSIX man page GETLOGIN(3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1cc5ed278adce325a16a703399808ad4924ada0" translate="yes" xml:space="preserve">
          <source>POSIX man page GETPID(2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c9d90b92d64acdd5ffff356ff3ae82cdd6d9055" translate="yes" xml:space="preserve">
          <source>POSIX man page GETPWNAM(3)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff0689ea1babdd24df5b6d1320e36e754bc5216" translate="yes" xml:space="preserve">
          <source>POSIX man page GETSID(2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b785d411a976c669ed13ef16afc34d38b5fd4b" translate="yes" xml:space="preserve">
          <source>POSIX man page GETUID(2)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec632fb0f80d340534d35b2bf9ac1d8cab224fd0" translate="yes" xml:space="preserve">
          <source>POSIX.1 and the getpgrp(2) manual page on the POSIX system for more information on process groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4d33e804419c78d4777f991ca19e2ad6c70158a" translate="yes" xml:space="preserve">
          <source>POST method(command)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a5e4d675d3d620017a5be4f7e440e026bc0304" translate="yes" xml:space="preserve">
          <source>PRECISION</source>
          <target state="translated">PRECISION</target>
        </trans-unit>
        <trans-unit id="a681230080205fa6bc6384a5c5e5f476d5697bd2" translate="yes" xml:space="preserve">
          <source>PRIVILEGE</source>
          <target state="translated">PRIVILEGE</target>
        </trans-unit>
        <trans-unit id="123d1ddbe83848f5e513359b3143a73886868271" translate="yes" xml:space="preserve">
          <source>PROCEDURE_NAME</source>
          <target state="translated">PROCEDURE_NAME</target>
        </trans-unit>
        <trans-unit id="4e4c0c19db19156a3db7f6d8e47e978c3e176396" translate="yes" xml:space="preserve">
          <source>PROCEDURE_OWNER</source>
          <target state="translated">PROCEDURE_OWNER</target>
        </trans-unit>
        <trans-unit id="13cba10d7e749e6999f2b4ff1a898dd44e56b4d8" translate="yes" xml:space="preserve">
          <source>PROCEDURE_QUALIFIER</source>
          <target state="translated">PROCEDURE_QUALIFIER</target>
        </trans-unit>
        <trans-unit id="e122f3a2adaa7d614dd76770a3c4829b4ed8a55f" translate="yes" xml:space="preserve">
          <source>PROCEDURE_TYPE</source>
          <target state="translated">PROCEDURE_TYPE</target>
        </trans-unit>
        <trans-unit id="eb8143c6759b503d3c68a048bb74a5d8b45242b5" translate="yes" xml:space="preserve">
          <source>PSD</source>
          <target state="translated">PSD</target>
        </trans-unit>
        <trans-unit id="e3c9288dcf35522988281ef3f18958d4debb6040" translate="yes" xml:space="preserve">
          <source>PSEUDO_COLUMN</source>
          <target state="translated">PSEUDO_COLUMN</target>
        </trans-unit>
        <trans-unit id="5ca3ca8fab6ffe6110053180c459441364356832" translate="yes" xml:space="preserve">
          <source>PUT method(command)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5f1ab0edae4f92031cf8e068bc88d12a9a6e70" translate="yes" xml:space="preserve">
          <source>Paamayim Nekudotayim would, at first, seem like a strange choice for naming a double-colon. However, while writing the Zend Engine 0.5 (which powers PHP 3), that's what the Zend team decided to call it. It actually does mean double-colon - in Hebrew!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f59d576a7bbf53a3f899411bd7ecf69e048fdb6" translate="yes" xml:space="preserve">
          <source>Pacific time zones.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36b9f9dac3b67596733534ce66e469d18dca577f" translate="yes" xml:space="preserve">
          <source>Pack given arguments into a binary string according to &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a1ea89f0cd20a5c7c27b4f1655e19c79e29d3c" translate="yes" xml:space="preserve">
          <source>Pad characters inserted after the prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f75f5f0848350c731e13ff674253347e68437c" translate="yes" xml:space="preserve">
          <source>Pad characters inserted after the suffix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caebc21e5ecbe17e184d032f233da8ab263d2895" translate="yes" xml:space="preserve">
          <source>Pad characters inserted before the prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480738d19751dcfd765a3fdd1bacbea4ecb5331c" translate="yes" xml:space="preserve">
          <source>Pad characters inserted before the suffix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523abb4d5009d777aea88e5cb434033640e72e59" translate="yes" xml:space="preserve">
          <source>Pad position values used by &lt;a href=&quot;numberformatter.getattribute&quot;&gt;numfmt_get_attribute()&lt;/a&gt; and &lt;a href=&quot;numberformatter.setattribute&quot;&gt;numfmt_set_attribute()&lt;/a&gt; with &lt;strong&gt;&lt;code&gt;NumberFormatter::PADDING_POSITION&lt;/code&gt;&lt;/strong&gt; attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8330ce615113e37788831f63918dd306f09def55" translate="yes" xml:space="preserve">
          <source>Pagination control is a LDAPv3 protocol feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a789fc22ece009be78fc2cc3d548cc784f0b8a" translate="yes" xml:space="preserve">
          <source>Paints on the image's opacity channel in order to set effected pixels to transparent, to influence the opacity of pixels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74bbfbab044fa6734db7a2d688170859c28ec8fe" translate="yes" xml:space="preserve">
          <source>Paints pixels matching the target color transparent. This method is available if Imagick has been compiled against ImageMagick version 6.3.8 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974da795293ae9f9dbb5bdc5be3db240c0134a8b" translate="yes" xml:space="preserve">
          <source>Pair &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dee7d94ce41978a15c9b9c8df0c605b9c98b129" translate="yes" xml:space="preserve">
          <source>Pair (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7ce59b47bb77417d38e9a8e488d1a2f5312881" translate="yes" xml:space="preserve">
          <source>Panasonic</source>
          <target state="translated">Panasonic</target>
        </trans-unit>
        <trans-unit id="eb7595283333290680efe8f59bad4f5efb16ee78" translate="yes" xml:space="preserve">
          <source>Paragraph separator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8f37084cc5b447310774a912867eea99580f4ea" translate="yes" xml:space="preserve">
          <source>Parallel searches support was added. See &lt;a href=&quot;function.ldap-search&quot;&gt;ldap_search()&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61c24145b44740d89c36c88d62979beffe348c3c" translate="yes" xml:space="preserve">
          <source>Parameter (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de323ae5656a2bdd5d249ece54201802fa1796f6" translate="yes" xml:space="preserve">
          <source>Parameter &lt;code&gt;longopts&lt;/code&gt; is available on all systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4e8fae038686fcf717b183577e8394b6112d93" translate="yes" xml:space="preserve">
          <source>Parameter identifier. For a prepared statement using named placeholders, this will be a parameter name of the form &lt;var&gt;&lt;var&gt;:name&lt;/var&gt;&lt;/var&gt;. For a prepared statement using question mark placeholders, this will be the 1-indexed position of the parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac05bb62ba21639ef8025bbe259436fc34bfc36c" translate="yes" xml:space="preserve">
          <source>Parameter markers can represent a complete data literal only. Neither part of literal, nor keyword, nor identifier, nor whatever arbitrary query part can be bound using parameters. For example, you cannot bind multiple values to a single parameter in the IN() clause of an SQL statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15d5f16b64f3c9f7fe50cc6dae51113c3efc245" translate="yes" xml:space="preserve">
          <source>Parameter offset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb130bdeb6ea1633e61d47e5d5a42259452cd0d1" translate="yes" xml:space="preserve">
          <source>Parameter to receive the currency name (3-letter ISO 4217 currency code).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9c5b5c57e481dfd5659ba1a3517179b454f5a7" translate="yes" xml:space="preserve">
          <source>Parameter::__clone</source>
          <target state="translated">Parameter::__clone</target>
        </trans-unit>
        <trans-unit id="c2869ddc3382989c50219ed6c69a9de6dc644f79" translate="yes" xml:space="preserve">
          <source>Parameter::__construct</source>
          <target state="translated">Parameter::__construct</target>
        </trans-unit>
        <trans-unit id="2dacae91bc4e1fa28556ef9e794df0bfe3cd1f18" translate="yes" xml:space="preserve">
          <source>Parameter::__toString</source>
          <target state="translated">Parameter::__toString</target>
        </trans-unit>
        <trans-unit id="77ce5c5ff6cea43940a5a95a99f24cbc4e1ebb98" translate="yes" xml:space="preserve">
          <source>Parameter::allowsNull</source>
          <target state="translated">Parameter::allowsNull</target>
        </trans-unit>
        <trans-unit id="668dfec63d7367bc3ed461d4f72354f555826b21" translate="yes" xml:space="preserve">
          <source>Parameter::canBePassedByValue</source>
          <target state="translated">Parameter::canBePassedByValue</target>
        </trans-unit>
        <trans-unit id="98a367e8969b46f225b2cba58b93d2d69467e079" translate="yes" xml:space="preserve">
          <source>Parameter::export</source>
          <target state="translated">Parameter::export</target>
        </trans-unit>
        <trans-unit id="1895bb41f296aeee15cc93714f97e434c7c75e89" translate="yes" xml:space="preserve">
          <source>Parameter::getClass</source>
          <target state="translated">Parameter::getClass</target>
        </trans-unit>
        <trans-unit id="1768e735e4e4e62de565625a73d9d597efa433b0" translate="yes" xml:space="preserve">
          <source>Parameter::getDeclaringClass</source>
          <target state="translated">Parameter::getDeclaringClass</target>
        </trans-unit>
        <trans-unit id="8cca053461cf0c1f8770cdb69df5c3858c171e3d" translate="yes" xml:space="preserve">
          <source>Parameter::getDeclaringFunction</source>
          <target state="translated">Parameter::getDeclaringFunction</target>
        </trans-unit>
        <trans-unit id="bef7b0d2f37e299ecf0e88ef6a042c6efee7a73b" translate="yes" xml:space="preserve">
          <source>Parameter::getDefaultValue</source>
          <target state="translated">Parameter::getDefaultValue</target>
        </trans-unit>
        <trans-unit id="0549227d2d2bfe1fc22b356cc9442223067168ed" translate="yes" xml:space="preserve">
          <source>Parameter::getDefaultValueConstantName</source>
          <target state="translated">Parameter::getDefaultValueConstantName</target>
        </trans-unit>
        <trans-unit id="2e63a0e6be07b8fbf0312544d7a74eab1a2a975c" translate="yes" xml:space="preserve">
          <source>Parameter::getName</source>
          <target state="translated">Parameter::getName</target>
        </trans-unit>
        <trans-unit id="ee940728469898959a4b24b28272ff359e6a381a" translate="yes" xml:space="preserve">
          <source>Parameter::getPosition</source>
          <target state="translated">Parameter::getPosition</target>
        </trans-unit>
        <trans-unit id="4c2141a918642b99325307811848a7d38a085275" translate="yes" xml:space="preserve">
          <source>Parameter::getType</source>
          <target state="translated">Parameter::getType</target>
        </trans-unit>
        <trans-unit id="900b5be4fb1d6c4eea543c29f628eb8913fa644b" translate="yes" xml:space="preserve">
          <source>Parameter::hasType</source>
          <target state="translated">Parameter::hasType</target>
        </trans-unit>
        <trans-unit id="3371381058a3c37f729f4e6d9e46b90e68dda299" translate="yes" xml:space="preserve">
          <source>Parameter::isArray</source>
          <target state="translated">Parameter::isArray</target>
        </trans-unit>
        <trans-unit id="8bbcbe2423d91891ada6846e1914083e60e4c6d5" translate="yes" xml:space="preserve">
          <source>Parameter::isCallable</source>
          <target state="translated">Parameter::isCallable</target>
        </trans-unit>
        <trans-unit id="c31c04b35cebfbebb31b920ad6d211605c3649f6" translate="yes" xml:space="preserve">
          <source>Parameter::isDefaultValueAvailable</source>
          <target state="translated">Parameter::isDefaultValueAvailable</target>
        </trans-unit>
        <trans-unit id="b1d80bfcd1ea0583ead575bdbc4f6a7d8759ec4b" translate="yes" xml:space="preserve">
          <source>Parameter::isDefaultValueConstant</source>
          <target state="translated">Parameter::isDefaultValueConstant</target>
        </trans-unit>
        <trans-unit id="714dea128f7d704646adb3b088de055bb829e511" translate="yes" xml:space="preserve">
          <source>Parameter::isOptional</source>
          <target state="translated">Parameter::isOptional</target>
        </trans-unit>
        <trans-unit id="932488d484d927f9cf81e963b494b3aa15b9313a" translate="yes" xml:space="preserve">
          <source>Parameter::isPassedByReference</source>
          <target state="translated">Parameter::isPassedByReference</target>
        </trans-unit>
        <trans-unit id="8730cab08382682eef73553e433b361cd91e8a74" translate="yes" xml:space="preserve">
          <source>Parameter::isVariadic</source>
          <target state="translated">Parameter::isVariadic</target>
        </trans-unit>
        <trans-unit id="a975eea30db9fa05003e3b5097688bd49ec7e01b" translate="yes" xml:space="preserve">
          <source>Parameters</source>
          <target state="translated">Parameters</target>
        </trans-unit>
        <trans-unit id="c2d133e23fb72728f224fb553dc62d1fc20ced0a" translate="yes" xml:space="preserve">
          <source>Parameters always represent a GMT date so &lt;code&gt;is_dst&lt;/code&gt; doesn't influence the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9fe73233d49517049287b1387489876e3f10e1a" translate="yes" xml:space="preserve">
          <source>Parameters declared as iterable may use &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; or an array as a default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b3cd7358c1ab7faa25de6fe816269c6a068cb7b" translate="yes" xml:space="preserve">
          <source>Parameters in &lt;code&gt;parameter_array&lt;/code&gt; will be substituted for placeholders in the prepared statement in order. Elements of this array will be converted to strings by calling this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7787e4bd44e1efd2cbbdcf7b8f1e1878553d7949" translate="yes" xml:space="preserve">
          <source>Parameters reported as of PostgreSQL 8.0 include &lt;em&gt;server_version&lt;/em&gt;, &lt;em&gt;server_encoding&lt;/em&gt;, &lt;em&gt;client_encoding&lt;/em&gt;, &lt;em&gt;is_superuser&lt;/em&gt;, &lt;em&gt;session_authorization&lt;/em&gt;, &lt;em&gt;DateStyle&lt;/em&gt;, &lt;em&gt;TimeZone&lt;/em&gt;, and &lt;em&gt;integer_datetimes&lt;/em&gt;. (&lt;em&gt;server_encoding&lt;/em&gt;, &lt;em&gt;TimeZone&lt;/em&gt;, and &lt;em&gt;integer_datetimes&lt;/em&gt; were not reported by releases before 8.0.) Note that &lt;em&gt;server_version&lt;/em&gt;, &lt;em&gt;server_encoding&lt;/em&gt; and &lt;em&gt;integer_datetimes&lt;/em&gt; cannot change after PostgreSQL startup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873b9f8b0d92ffa4d46a9b9074268697415ac940" translate="yes" xml:space="preserve">
          <source>Parameters.</source>
          <target state="translated">Parameters.</target>
        </trans-unit>
        <trans-unit id="1883b79dfc4235a6f468cd5cbc5a25f7ed43e588" translate="yes" xml:space="preserve">
          <source>Params (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284b186e277cd732e8417d0b20d4f2500b66fcb1" translate="yes" xml:space="preserve">
          <source>Params::add</source>
          <target state="translated">Params::add</target>
        </trans-unit>
        <trans-unit id="4a21b7509f928151fb0d725abc1ac47a374b3c43" translate="yes" xml:space="preserve">
          <source>Params::addParam</source>
          <target state="translated">Params::addParam</target>
        </trans-unit>
        <trans-unit id="ae760c78719edc32a0edc5a5d13a923f0f93bb90" translate="yes" xml:space="preserve">
          <source>Params::get</source>
          <target state="translated">Params::get</target>
        </trans-unit>
        <trans-unit id="7eeeb861254cf50c219c5aa26319ea2b69c99446" translate="yes" xml:space="preserve">
          <source>Params::getParam</source>
          <target state="translated">Params::getParam</target>
        </trans-unit>
        <trans-unit id="86988c1f4bbb8bb0da2d7ce2d4830b991cfa23f2" translate="yes" xml:space="preserve">
          <source>Params::getParams</source>
          <target state="translated">Params::getParams</target>
        </trans-unit>
        <trans-unit id="e987950b1c95f1c26ea93d528d04ef48c23b3346" translate="yes" xml:space="preserve">
          <source>Params::getPreparedParams</source>
          <target state="translated">Params::getPreparedParams</target>
        </trans-unit>
        <trans-unit id="d62ad1ccba047f2f2d680388cbda9ced5c24a51e" translate="yes" xml:space="preserve">
          <source>Params::serialize</source>
          <target state="translated">Params::serialize</target>
        </trans-unit>
        <trans-unit id="21a6190829e51cc3db6be74bab4fff425ea10972" translate="yes" xml:space="preserve">
          <source>Params::set</source>
          <target state="translated">Params::set</target>
        </trans-unit>
        <trans-unit id="9e7ff002d4b87c5ce249228556bfefa591ef3773" translate="yes" xml:space="preserve">
          <source>Params::setParam</source>
          <target state="translated">Params::setParam</target>
        </trans-unit>
        <trans-unit id="892fad5fc6a030004c735ca158a8fcd92b47dfbf" translate="yes" xml:space="preserve">
          <source>Params::toString</source>
          <target state="translated">Params::toString</target>
        </trans-unit>
        <trans-unit id="b0a4b694536b462386f77e41f84e05b7e2061e32" translate="yes" xml:space="preserve">
          <source>Params::unserialize</source>
          <target state="translated">Params::unserialize</target>
        </trans-unit>
        <trans-unit id="1931e75055f9b5a7dbe13a5b0a908732ab58f9da" translate="yes" xml:space="preserve">
          <source>Parent class for all SPL types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae265a4f6b19bd065417fcea82d0b9929f31c013" translate="yes" xml:space="preserve">
          <source>Parent class which child class is extending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b63b551d734e037163ac106ca989e4652f3d7a" translate="yes" xml:space="preserve">
          <source>ParentIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4dc393ec33e3a3df426a866f05ec439d85dcb2" translate="yes" xml:space="preserve">
          <source>ParentIterator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84f2ef29d2ca913ee947f13fd346a80fef4afc9" translate="yes" xml:space="preserve">
          <source>ParentIterator::__construct</source>
          <target state="translated">ParentIterator::__construct</target>
        </trans-unit>
        <trans-unit id="9647578692eef5cede6808e39272c4ab2fd2c6d9" translate="yes" xml:space="preserve">
          <source>ParentIterator::__construct &amp;mdash; Constructs a ParentIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdb0f70ae86bf55cd087acc2de95f8a15b17b52" translate="yes" xml:space="preserve">
          <source>ParentIterator::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26c68bfeb2df4b39c8a6c99a72fc3663ec7d6416" translate="yes" xml:space="preserve">
          <source>ParentIterator::accept</source>
          <target state="translated">ParentIterator::accept</target>
        </trans-unit>
        <trans-unit id="cf67d188a0e3164819a0a2e67ffe385f6ac5d578" translate="yes" xml:space="preserve">
          <source>ParentIterator::accept &amp;mdash; Determines acceptability</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63869bad26c920f26731bf959fb42701b25816f6" translate="yes" xml:space="preserve">
          <source>ParentIterator::accept &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e4a3eb8c55265d6b8d095f393fabf9ede21bbd" translate="yes" xml:space="preserve">
          <source>ParentIterator::getChildren</source>
          <target state="translated">ParentIterator::getChildren</target>
        </trans-unit>
        <trans-unit id="2a91fafb2e8e9ffa09b1003990e7e912d5a7772d" translate="yes" xml:space="preserve">
          <source>ParentIterator::getChildren &amp;mdash; Return the inner iterator's children contained in a ParentIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b90cd9d4f7c4b961a815e4504aeadceeae335d" translate="yes" xml:space="preserve">
          <source>ParentIterator::getChildren &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33314ae22f269a67cbcf96d7451ff3abf54d722b" translate="yes" xml:space="preserve">
          <source>ParentIterator::hasChildren</source>
          <target state="translated">ParentIterator::hasChildren</target>
        </trans-unit>
        <trans-unit id="111ccf1672586ff27e0b7deb2a888ab14914ae15" translate="yes" xml:space="preserve">
          <source>ParentIterator::hasChildren &amp;mdash; Check whether the inner iterator's current element has children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a072f3e75e5b335c968628f121911a2f1126dec7" translate="yes" xml:space="preserve">
          <source>ParentIterator::hasChildren &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afe2babf47311a0b1ee8ffc2d6921f63bc57d3c" translate="yes" xml:space="preserve">
          <source>ParentIterator::next</source>
          <target state="translated">ParentIterator::next</target>
        </trans-unit>
        <trans-unit id="ccc1bda87c96d168bef62eaadad5490ac6410fa0" translate="yes" xml:space="preserve">
          <source>ParentIterator::next &amp;mdash; Move the iterator forward</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db06fbf1f2471d1f1da7a2abe93b1ef72d76a0a4" translate="yes" xml:space="preserve">
          <source>ParentIterator::next &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6813862f98cf5a069ee88a6918b26369faccd8eb" translate="yes" xml:space="preserve">
          <source>ParentIterator::rewind</source>
          <target state="translated">ParentIterator::rewind</target>
        </trans-unit>
        <trans-unit id="d5e77bb2d371ad3cd5d68feb2298802468af39e0" translate="yes" xml:space="preserve">
          <source>ParentIterator::rewind &amp;mdash; Rewind the iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b76219a4806c613f6cd43395f6947378bf2a18c" translate="yes" xml:space="preserve">
          <source>ParentIterator::rewind &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b8d3f962bb340d01efdc1a989e51baec2d0d40" translate="yes" xml:space="preserve">
          <source>Parse LDAP extended operation data from result object &lt;code&gt;result&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf073ee584500efd1c58084ce1777e93593e4867" translate="yes" xml:space="preserve">
          <source>Parse a string into a double and a currency using the current formatter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5373846f200800d1712431ba5b3bacf5cd8dbf" translate="yes" xml:space="preserve">
          <source>Parse a string into a number using the current formatter rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e49a284d84d1bd3065924348a4381ef7d51eef" translate="yes" xml:space="preserve">
          <source>Parse integers only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df633b0d4b46131792d5ed485e94f872474b0ba2" translate="yes" xml:space="preserve">
          <source>ParseError</source>
          <target state="translated">ParseError</target>
        </trans-unit>
        <trans-unit id="f94cad0301c9f9c4092b6cc05c2515694d0cf9b6" translate="yes" xml:space="preserve">
          <source>ParseError &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732b3fc6972fe1925cc1e2f620fa606b4455c4c3" translate="yes" xml:space="preserve">
          <source>Parses &lt;code&gt;encoded_string&lt;/code&gt; as if it were the query string passed via a URL and sets variables in the current scope (or in the array if &lt;code&gt;result&lt;/code&gt; is provided).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8860de8abee19d038d625d0597fa1c40f2aa10b2" translate="yes" xml:space="preserve">
          <source>Parses GET/POST/COOKIE data and sets global variables. Since PHP does not provide raw POST/COOKIE data, it can only be used for GET data for now. It parses URL encoded data, detects encoding, converts coding to internal encoding and set values to the &lt;code&gt;result&lt;/code&gt;&lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or global variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c847c75f12720dc8336042fcf2a17f6ca1c644f6" translate="yes" xml:space="preserve">
          <source>Parses a &lt;a href=&quot;http://www.faqs.org/rfcs/rfc822&quot;&gt;&amp;raquo; RFC 822&lt;/a&gt; compliant recipient list, such as that found in the &lt;em&gt;To:&lt;/em&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec42bf562243aca06e8b7d2c1ae33689c0bf9b8e" translate="yes" xml:space="preserve">
          <source>Parses a document stored in a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0011e9dcc7db89d70f77fdaf37b7c749ab8ddbfa" translate="yes" xml:space="preserve">
          <source>Parses a file. This is the optimal way of parsing a mail file that you have on disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24566fd696dc88949bf0ead18760e14454b0a086" translate="yes" xml:space="preserve">
          <source>Parses a string input for fields in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0ac9cf24b9fd3dff5736e37eb97331b2fbe71a" translate="yes" xml:space="preserve">
          <source>Parses an &lt;a href=&quot;http://www.iptc.org/&quot;&gt;&amp;raquo; IPTC&lt;/a&gt; block into its single tags.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a838e0a427336038c63ed5e25c74b3ef97f0b3d" translate="yes" xml:space="preserve">
          <source>Parses an LDAP search result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ce59571bd1e4f4835c4bc5ef723166d406f201" translate="yes" xml:space="preserve">
          <source>Parses input &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; and return any extracted items as an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="828fce4c80c851a2a9d70e7792f21a93421b6b4d" translate="yes" xml:space="preserve">
          <source>Parses input string without explicitly creating the formatter object. Use this function when the format operation is done only once and does not need and parameters or state to be kept.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea6772626448dfe5976ce3f796fdd3a07274309" translate="yes" xml:space="preserve">
          <source>Parses options passed to the script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d04e8a5ea6efad47618dbb96146728376ecec5" translate="yes" xml:space="preserve">
          <source>Parses the address string as defined in &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2822&quot;&gt;&amp;raquo; RFC2822&lt;/a&gt; and for each address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b391b5f8c810040c020a488d1a19570962468cf1" translate="yes" xml:space="preserve">
          <source>Parses the given file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7679f3842b025282123be7b4324deb7f994785e" translate="yes" xml:space="preserve">
          <source>Part of a pattern that is in square brackets is called a &lt;a href=&quot;regexp.reference.character-classes&quot;&gt;character class&lt;/a&gt;. In a character class the only meta-characters are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3434b2dc75e4de5125f3a80e830cacd1c3b16a4e" translate="yes" xml:space="preserve">
          <source>Pass 1 to enable or 0 to disable. Enabling pipelining on a multi handle will make it attempt to perform HTTP Pipelining as far as possible for transfers using this handle. This means that if you add a second request that can use an already existing connection, the second request will be &quot;piped&quot; on the same connection. As of cURL 7.43.0 you can also pass 2 to try to multiplex the new transfer over an existing HTTP/2 connection if possible. Instead of integer literals, you can also use the CURLPIPE_* constants if available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1faa8db428431c2f13d4d31f3f7b88e572d67404" translate="yes" xml:space="preserve">
          <source>Pass By Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c12e69dbbf6da1ae25830379e73ef16fb0b58d7" translate="yes" xml:space="preserve">
          <source>Pass a &lt;a href=&quot;language.types.callable&quot;&gt;callable&lt;/a&gt; that will be registered to handle server pushes and should have the following signature:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac09e9fa0148b4129ce56aa1d1edc93e74087713" translate="yes" xml:space="preserve">
          <source>Pass a number that specifies the chunk length threshold for pipelining in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a53c275e33b874a3e0851bb32d6c39e743af282b" translate="yes" xml:space="preserve">
          <source>Pass a number that specifies the maximum number of connections to a single host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5c0eb99aa897239eade307178b1dc06d183b438" translate="yes" xml:space="preserve">
          <source>Pass a number that specifies the maximum number of requests in a pipeline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478bf5bfe4a9a0df7f843eae48b03a88ed2cf016" translate="yes" xml:space="preserve">
          <source>Pass a number that specifies the maximum number of simultaneously open connections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44f5c80824102a835a7490fd0eb27f28659d89e" translate="yes" xml:space="preserve">
          <source>Pass a number that specifies the size threshold for pipelining penalty in bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226e53ae4b67d32c473490c7b39372487fd2c402" translate="yes" xml:space="preserve">
          <source>Pass a number that will be used as the maximum amount of simultaneously open connections that libcurl may cache. By default the size will be enlarged to fit four times the number of handles added via &lt;a href=&quot;function.curl-multi-add-handle&quot;&gt;curl_multi_add_handle()&lt;/a&gt;. When the cache is full, curl closes the oldest one in the cache to prevent the number of open connections from increasing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434e917888292e70c49625b1a33d40608fc05bee" translate="yes" xml:space="preserve">
          <source>Pass in a problem as an &lt;a href=&quot;class.oauthexception&quot;&gt;OAuthException&lt;/a&gt;, with possible problems listed in the &lt;a href=&quot;https://secure.php.net/manual/en/oauth.constants.php&quot;&gt;OAuth constants&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ce35ed1ec1cb2d39527f5e64ea4c23efc7de01" translate="yes" xml:space="preserve">
          <source>Pass the OAuth parameters in the HTTP &lt;em&gt;Authorization&lt;/em&gt; header.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e1110b5c86acc33a1b15fe84fcea67e5f20f4e" translate="yes" xml:space="preserve">
          <source>Passed by reference and, if given, will be populated with Resource Records for the &lt;em&gt;Authoritative Name Servers&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffc6d80ea9cf967683c5bd932d15bf57f457864" translate="yes" xml:space="preserve">
          <source>Passed by reference and, if given, will be populated with any &lt;em&gt;Additional Records&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533b22a7ddb9c5277991141f91c2473e3a0cce91" translate="yes" xml:space="preserve">
          <source>Passed if a descriptive message code is available for the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f7427dd658d7370c65db115cad44aa8699d43d" translate="yes" xml:space="preserve">
          <source>Passed if a descriptive message is available for the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4603bbe9d05798f6607572b723fee8e9240d5c" translate="yes" xml:space="preserve">
          <source>Passing</source>
          <target state="translated">Passing</target>
        </trans-unit>
        <trans-unit id="042707288a1402a79660e35aa3e2754b72dd4601" translate="yes" xml:space="preserve">
          <source>Passing &lt;em&gt;NULL&lt;/em&gt; as &lt;code&gt;length&lt;/code&gt; extracts all bytes to the end of the string. Prior to this version &lt;em&gt;NULL&lt;/em&gt; was treated the same as &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e16d9d7320d2c786948ed5ee768d4bbc4b67b12" translate="yes" xml:space="preserve">
          <source>Passing &lt;em&gt;NULL&lt;/em&gt; as &lt;code&gt;length&lt;/code&gt; extracts all characters to the end of the string. Prior to this version &lt;em&gt;NULL&lt;/em&gt; was treated the same as &lt;em&gt;0&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16174dd89fb4ccbc50687965fef1e22237fdf5e2" translate="yes" xml:space="preserve">
          <source>Passing &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; or an empty string will be equivalent to the default value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60e406008164fcc31ea9868bbf167e23bc4f9db" translate="yes" xml:space="preserve">
          <source>Passing an array to &lt;strong&gt;&lt;code&gt;CURLOPT_POSTFIELDS&lt;/code&gt;&lt;/strong&gt; will encode the data as &lt;em&gt;multipart/form-data&lt;/em&gt;, while passing a URL-encoded string will encode the data as &lt;em&gt;application/x-www-form-urlencoded&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d26da1fc8af06397d1feaad3c3275c25db16246" translate="yes" xml:space="preserve">
          <source>Passing arguments by reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d18f61cfe5c970cea526ee76f4613f1187344c" translate="yes" xml:space="preserve">
          <source>Passing by Reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73bc31d2d64f81a8103d381d0d34e661dfc7299" translate="yes" xml:space="preserve">
          <source>Passing by Reference &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df71737c3e44b007ef4c1af9ec5de74db81de2b" translate="yes" xml:space="preserve">
          <source>Passing in the value &lt;em&gt;-1&lt;/em&gt; will show every possible error, even when new levels and constants are added in future PHP versions. The &lt;strong&gt;&lt;code&gt;E_ALL&lt;/code&gt;&lt;/strong&gt; constant also behaves this way as of PHP 5.4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c10ebe6487e3bb20956687be3a131d0c0d56a908" translate="yes" xml:space="preserve">
          <source>Password Hashing &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dacad9e72e85b823b427e224a43bc7d1cc560a8d" translate="yes" xml:space="preserve">
          <source>Password for &lt;code&gt;username&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e30e06a15e9c1e495dcce423c7b6c9f0b442307d" translate="yes" xml:space="preserve">
          <source>Password from which the derived key is generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abee31009e8784c4262fd91ea2178bc59384103" translate="yes" xml:space="preserve">
          <source>Path for the new directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49fe089d3a5c7df1c2ec53f4565005237c76be1" translate="yes" xml:space="preserve">
          <source>Path for the new node(file).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e46653100fe1d6c599fcd7d52e2b85d6f55380d" translate="yes" xml:space="preserve">
          <source>Path of ResourceBundle for which to get available locales, or empty string for default locales list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9007e1f811f9db764305b67d6c4b9f398b142e92" translate="yes" xml:space="preserve">
          <source>Path of the file to be opened.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e3b1553b1d5030e4f4144b2b68807b8c9bb1c3" translate="yes" xml:space="preserve">
          <source>Path of the new directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ab3e2e1c84b2ee6de6e2eab6898b9022b76a9e" translate="yes" xml:space="preserve">
          <source>Path of the symbolic link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71400c63b4497739a1380fd493af590fa49f3fb0" translate="yes" xml:space="preserve">
          <source>Path that the file will be stored in the archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308f34bfafb369d19ed5ea2f05f0aaf59435027d" translate="yes" xml:space="preserve">
          <source>Path to &lt;em&gt;resolv.conf&lt;/em&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728b395410eb45312a07f4e830a522f5f0e39ed8" translate="yes" xml:space="preserve">
          <source>Path to JPEG file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4b4cb5bf7a742267c629a1d8d8193ced17a6e6" translate="yes" xml:space="preserve">
          <source>Path to PNG file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0686e612e5d199e0ec8509f00b5612ef343ae977" translate="yes" xml:space="preserve">
          <source>Path to a file or a symbolic link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4cabd2dee7a9416cbe39fa00d4360052ac18300" translate="yes" xml:space="preserve">
          <source>Path to an accessible file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b670d40a6f2cd756bf10e52fe1704b5fff0d9a2" translate="yes" xml:space="preserve">
          <source>Path to an existing Phar archive or to-be-created archive. The file name's extension must contain .phar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3470fdd6dc7459705855e2ce4fc3156fe337873" translate="yes" xml:space="preserve">
          <source>Path to an existing tar/zip archive or to-be-created archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8e6b91d2799a39034a64fc20e63de2fa047d9d" translate="yes" xml:space="preserve">
          <source>Path to destination WBMP file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c8953c68ad34236af9fcccada890ecc7a0cd0d5" translate="yes" xml:space="preserve">
          <source>Path to extract the given &lt;code&gt;files&lt;/code&gt; to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c845bd02b7690374c6087f4934cf444f51942ae3" translate="yes" xml:space="preserve">
          <source>Path to extract the given &lt;em&gt;files&lt;/em&gt; to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee9a42a975678be8d750fa1e306adc2573e3c20e" translate="yes" xml:space="preserve">
          <source>Path to file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7dc5c6b7fb57c1bc780c104ba9418e4c96ae4b6" translate="yes" xml:space="preserve">
          <source>Path to file or directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7db4e60551ce48fa55b1142761bdc0a1a235fb" translate="yes" xml:space="preserve">
          <source>Path to local certificate file on filesystem. It must be a PEM-encoded file which contains certificate. It can optionally contain the certificate chain of issuers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87056ea94180d6672d35ab471c37dfe7d342c0f4" translate="yes" xml:space="preserve">
          <source>Path to local private key file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f5894cdabf1a902613903ce169d9471f725de5" translate="yes" xml:space="preserve">
          <source>Path to the &lt;em&gt;FIFO&lt;/em&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533f1830cbfecd20630357538cf6ffb2b6bb8a32" translate="yes" xml:space="preserve">
          <source>Path to the BMP image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cac325fb609047e38f66fe5749591c3880838fc" translate="yes" xml:space="preserve">
          <source>Path to the GD file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b64a953554e67b0009cd4f043a678f624638b6" translate="yes" xml:space="preserve">
          <source>Path to the GD2 image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b47b23617bd648ae44e35d4c0228a1eeb3d32e2" translate="yes" xml:space="preserve">
          <source>Path to the GIF image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9ab9d1c747308f0aa8b76bbea10f3a415a12de" translate="yes" xml:space="preserve">
          <source>Path to the JPEG image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e648505a9bd0d420a4c77556329b008358f7c914" translate="yes" xml:space="preserve">
          <source>Path to the PHP file to be highlighted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb4b764b16d18eeba57737e910fd820ac2a8b13" translate="yes" xml:space="preserve">
          <source>Path to the PHP file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb55f655b2b30f7a398af571e3e4b3e694e9c91" translate="yes" xml:space="preserve">
          <source>Path to the PNG image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c59611a7dcc0538b174c0253f954089d6f2e20c" translate="yes" xml:space="preserve">
          <source>Path to the Postscript font file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6595a8fda53f41d124bff7bb1b75a6069db0571e" translate="yes" xml:space="preserve">
          <source>Path to the SQLite database, or &lt;em&gt;:memory:&lt;/em&gt; to use in-memory database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f52af4d186bdf4e6cc12b1e86382545a2950a8" translate="yes" xml:space="preserve">
          <source>Path to the SQLite database, or &lt;em&gt;:memory:&lt;/em&gt; to use in-memory database. If &lt;code&gt;filename&lt;/code&gt; is an empty string, then a private, temporary on-disk database will be created. This private database will be automatically deleted as soon as the database connection is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70765b8774f1cf282ffc6b5d496938f67ed8123b" translate="yes" xml:space="preserve">
          <source>Path to the WBMP image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db20c45d1fa139ab0fd31cac9d4d63225ba27bac" translate="yes" xml:space="preserve">
          <source>Path to the WebP image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4980cce63324116f49f9dd0df647cd3b7ee1e08" translate="yes" xml:space="preserve">
          <source>Path to the XBM image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecc0242ff7e91a4fffb3a811d0753c97271328a" translate="yes" xml:space="preserve">
          <source>Path to the XML file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9ca072a046ee7c1452abec847bfca10bbf37b4" translate="yes" xml:space="preserve">
          <source>Path to the XPM image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d325e7ac22748c25b54d120f9ad6ee871e26426" translate="yes" xml:space="preserve">
          <source>Path to the config file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c67537a410f54777160ab6a53bd1fa2c31bc73f" translate="yes" xml:space="preserve">
          <source>Path to the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9f6e152483dcfdf874b0b3622365fcb42bbd99" translate="yes" xml:space="preserve">
          <source>Path to the file holding the message. The file is opened and streamed through the parser.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1be3ac4776102c4622966bba0469460bdf29e5f9" translate="yes" xml:space="preserve">
          <source>Path to the file or directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0aa74a925f2cc5dab254f2085f871f49fcaaaa" translate="yes" xml:space="preserve">
          <source>Path to the file to dump profiling information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8e9d7df8c0e5cc1301ad3d80cdd07f263dcaab" translate="yes" xml:space="preserve">
          <source>Path to the file where to write the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc5480cc3a09192ed9506bd45c39634cdac0d82" translate="yes" xml:space="preserve">
          <source>Path to the file which will be uploaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62943db75f1c16ca3df1e941c55a387d69b8b97f" translate="yes" xml:space="preserve">
          <source>Path to the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609bae4894f14242ae360a2a597c72519195d726" translate="yes" xml:space="preserve">
          <source>Path to the file. If &lt;code&gt;filename&lt;/code&gt; is a relative filename, it will be checked relative to the current working directory. If &lt;code&gt;filename&lt;/code&gt; is a symbolic or hard link then the link will be resolved and checked. If you have enabled &lt;a href=&quot;https://secure.php.net/manual/en/ini.sect.safe-mode.php#ini.safe-mode&quot;&gt;safe mode&lt;/a&gt;, or &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.open-basedir&quot;&gt;open_basedir&lt;/a&gt; further restrictions may apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aafb23bb785cd75616706987e2218212b6bf174d" translate="yes" xml:space="preserve">
          <source>Path to the hosts' file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a2e3eb4fb21c667b56e7856dff214758a75e30b" translate="yes" xml:space="preserve">
          <source>Path to the link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0a082c2e3fdf509788f1383f056c025bda6812" translate="yes" xml:space="preserve">
          <source>Path to the local file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250cbde1d9e2b93f29b40c53af58a147eaa17aa3" translate="yes" xml:space="preserve">
          <source>Path to the message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b103a0b29abc1e36c4e363671b1e6f4938a4e47" translate="yes" xml:space="preserve">
          <source>Path to the output file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0afba07311be05df3778cc45506b1072cd7890a7" translate="yes" xml:space="preserve">
          <source>Path to the remote file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f236145e191b3cf9f29311d9b79db4910b183882" translate="yes" xml:space="preserve">
          <source>Path to the remote symbolic link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77c62310971ce55b92c6445322375f958f7ca36" translate="yes" xml:space="preserve">
          <source>Path to the saved file. If not given, the raw image stream will be output directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb5c193d2bd67c6990db08d2a3e21cbed8dacb1" translate="yes" xml:space="preserve">
          <source>Path to the source file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3124113d9610f6cebeaf2705e3ba9d39f95d67bb" translate="yes" xml:space="preserve">
          <source>Path to the symlink.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b06e26123a6704a0916a86553ebf3d12809adb1" translate="yes" xml:space="preserve">
          <source>Path to the target file or directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e86e8eb54136590bbc6fda2ecfefc608ee748b4" translate="yes" xml:space="preserve">
          <source>Path to the temporary file name created</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ed9a995d4f0e1401b6dcfc1100221d637f5ac1" translate="yes" xml:space="preserve">
          <source>Path to the tested file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07912eae3c46ae83a2d73e2898df6104dd71121" translate="yes" xml:space="preserve">
          <source>Path to write the output to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4ebab790465de69fa58d1f4c063c6568311214" translate="yes" xml:space="preserve">
          <source>Path to your own alternative openssl.conf file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3f8ac1faff7f051b6002bf34effa8365f2d059" translate="yes" xml:space="preserve">
          <source>Path within an archive to the file to delete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81676ebfae256f24087aa87408f1b6367485ee07" translate="yes" xml:space="preserve">
          <source>Pathname no longer exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27419a57d188c3f0e1cd35e607b277a4528e6b4a" translate="yes" xml:space="preserve">
          <source>Pathname of any file within the mounted file system</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d0d84b7cd07c3e33877655c07ea85ff044bd3c" translate="yes" xml:space="preserve">
          <source>Pattern &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; that is used by the formatter, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if an error happens.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7447b1d6860f2476e721fe8e73630da822cb9785" translate="yes" xml:space="preserve">
          <source>Pattern Modifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f76974c9b0a86c6c6e25c5a59a2bc200c0fb36d" translate="yes" xml:space="preserve">
          <source>Pattern in syntax described in &lt;a href=&quot;http://www.icu-project.org/apiref/icu4c/classDecimalFormat.html#details&quot;&gt;&amp;raquo; ICU DecimalFormat documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58a7e2f74f6cf73acc09eb07b2925b06d36171f" translate="yes" xml:space="preserve">
          <source>Pattern string if the chosen style requires a pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05749e2f0b0de7f0501d42a7f96f7716b4380f82" translate="yes" xml:space="preserve">
          <source>Pentax</source>
          <target state="translated">Pentax</target>
        </trans-unit>
        <trans-unit id="8acd403e2ccd06edc5ec79050ce74f3fe70596a7" translate="yes" xml:space="preserve">
          <source>People used to the 'C' semantics of &lt;strong&gt;fgets()&lt;/strong&gt; should note the difference in how &lt;em&gt;EOF&lt;/em&gt; is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8298eebcd6d607db03f8facbd78c42a52b857feb" translate="yes" xml:space="preserve">
          <source>Per DNS standards, email addresses are given in &lt;em&gt;user.host&lt;/em&gt; format (for example: &lt;em&gt;hostmaster.example.com&lt;/em&gt; as opposed to &lt;em&gt;hostmaster@example.com&lt;/em&gt;), be sure to check this value and modify if necessary before using it with a functions such as &lt;a href=&quot;function.mail&quot;&gt;mail()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eff28551ac8eb569334d865139d4caa4560e4bb9" translate="yes" xml:space="preserve">
          <source>Per mill symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="874afc0754c70e753398ea4f0a9279c9f97db957" translate="yes" xml:space="preserve">
          <source>Percent format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca340a2259966bb358e1bad8fc07fe43ccf7bc9" translate="yes" xml:space="preserve">
          <source>Perform color reduction in this colorspace, typically RGBColorspace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63c904559993935c470f516c8b549ca7f3640dbb" translate="yes" xml:space="preserve">
          <source>Performance</source>
          <target state="translated">Performance</target>
        </trans-unit>
        <trans-unit id="6d83defb9e505ea25ec67acf2741a76463635232" translate="yes" xml:space="preserve">
          <source>Performance &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8b95fea062e603c7701ddb5663dce5b10cce38" translate="yes" xml:space="preserve">
          <source>Performance and memory efficiency is very similar to an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a106012dfae452408c584c3713b103f375f083e" translate="yes" xml:space="preserve">
          <source>Performing an INSERT or UPDATE statement using the LAST_INSERT_ID() function will also modify the value returned by the &lt;strong&gt;mysqli_insert_id()&lt;/strong&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f87188351b8f9916661eb1a4633902c241565b3" translate="yes" xml:space="preserve">
          <source>Performs &lt;a href=&quot;http://www.relaxng.org/&quot;&gt;&amp;raquo; relaxNG&lt;/a&gt; validation on the document based on the given RNG schema.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd2499007d8099cbb4220cc3f7cde7bfbfb9357d" translate="yes" xml:space="preserve">
          <source>Performs &lt;a href=&quot;http://www.relaxng.org/&quot;&gt;&amp;raquo; relaxNG&lt;/a&gt; validation on the document based on the given RNG source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c77b541d6419e58070944cafe5fe15e1b6e1e3" translate="yes" xml:space="preserve">
          <source>Performs SOAP request over HTTP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef32776407898e149fba5b8ab48c4b172b8a536" translate="yes" xml:space="preserve">
          <source>Performs a &quot;han-kaku&quot; - &quot;zen-kaku&quot; conversion for &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;&lt;code&gt;str&lt;/code&gt;. This function is only useful for Japanese.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3671240eb59365acf665ba1df31b69ce98b0af77" translate="yes" xml:space="preserve">
          <source>Performs a &lt;code&gt;query&lt;/code&gt; against the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277b950a05ab68efb26c2f7b261cd0954ef99a44" translate="yes" xml:space="preserve">
          <source>Performs a PASSWD extended operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60245199c1a7ce1533b5a4299ee0646ec2e5a7c8" translate="yes" xml:space="preserve">
          <source>Performs a Refresh extended operation and returns the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4c10729e664e4f758f8b09fcb84374e8c60189" translate="yes" xml:space="preserve">
          <source>Performs a WHOAMI extended operation and returns the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0d901e4200247f11ce527dacd59e107db6d23e" translate="yes" xml:space="preserve">
          <source>Performs a character set conversion on the string &lt;code&gt;str&lt;/code&gt; from &lt;code&gt;in_charset&lt;/code&gt; to &lt;code&gt;out_charset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9e9eaca99ba11820cf3d37dbb297ddea396802" translate="yes" xml:space="preserve">
          <source>Performs a flood fill starting at the given coordinate (top left is 0, 0) with the given &lt;code&gt;color&lt;/code&gt; in the &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f52923b173f7c3021fcb366629096e6ad3f8736" translate="yes" xml:space="preserve">
          <source>Performs a multi-byte safe &lt;a href=&quot;function.strpos&quot;&gt;strpos()&lt;/a&gt; operation based on number of characters. The first character's position is 0, the second character position is 1, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4ffa2d2e7249c0fba533aed269b6fa44f5dd7a" translate="yes" xml:space="preserve">
          <source>Performs a multi-byte safe &lt;a href=&quot;function.substr&quot;&gt;substr()&lt;/a&gt; operation based on number of characters. Position is counted from the beginning of &lt;code&gt;str&lt;/code&gt;. First character's position is 0. Second character position is 1, and so on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="217e39f4ba6666b799e5e03b585e96cfd5fa61b1" translate="yes" xml:space="preserve">
          <source>Performs a multibyte regular expression match for a predefined multibyte string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cae970469eb1ae6cd120c20738ecaa05aac14a1" translate="yes" xml:space="preserve">
          <source>Performs a multibyte safe &lt;a href=&quot;function.strrpos&quot;&gt;strrpos()&lt;/a&gt; operation based on the number of characters. &lt;code&gt;needle&lt;/code&gt; position is counted from the beginning of &lt;code&gt;haystack&lt;/code&gt;. First character's position is 0. Second character position is 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d6a4f38bcbb7bd0b704c9d5d0b86fd1eeae105" translate="yes" xml:space="preserve">
          <source>Performs a query on an InterBase database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa408886b0ee8bcff3e5f864581b8ad6db52208" translate="yes" xml:space="preserve">
          <source>Performs a syntax (lint) check on the specified &lt;code&gt;filename&lt;/code&gt; testing for scripting errors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b4ead1992e7de95de301d8e369d5d40984ac7bc" translate="yes" xml:space="preserve">
          <source>Performs an extended operation on the specified &lt;code&gt;link&lt;/code&gt; with &lt;code&gt;reqoid&lt;/code&gt; the OID of the operation and &lt;code&gt;reqdata&lt;/code&gt; the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb582d20ea06d779fa6c961f512c121fa71ae66" translate="yes" xml:space="preserve">
          <source>Performs an ordered dither based on a number of pre-defined dithering threshold maps, but over multiple intensity levels, which can be different for different channels, according to the input arguments. This method is available if Imagick has been compiled against ImageMagick version 6.3.1 or newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2080905306cbe73c3ec36e3e757a36bc6dc6baa" translate="yes" xml:space="preserve">
          <source>Performs case folding on a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, converted in the way specified by &lt;code&gt;mode&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="335db83a2ff97172e09731a058afeb26b8314f77" translate="yes" xml:space="preserve">
          <source>Performs debugging operations using the Fred Fish debugging library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bed23d6fb47e316a8ef898eed7aa11fd21fc77b" translate="yes" xml:space="preserve">
          <source>Performs internal consistency checks(for debugging &lt;em&gt;libev&lt;/em&gt; ) and abort the program if any data structures were found to be corrupted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c85cdda39407cfdf4532e7162184325d2cb7fa2" translate="yes" xml:space="preserve">
          <source>Performs the ROT13 encoding on the &lt;code&gt;str&lt;/code&gt; argument and returns the resulting string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c61fe85b480ed02fc7ebe485ebe547555c7ee3" translate="yes" xml:space="preserve">
          <source>Performs the search for a specified &lt;code&gt;filter&lt;/code&gt; on the directory with the scope &lt;strong&gt;&lt;code&gt;LDAP_SCOPE_BASE&lt;/code&gt;&lt;/strong&gt;. So it is equivalent to reading an entry from the directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc1c1f0b25adbc7f08bc89d0ab0b0044e668bf0" translate="yes" xml:space="preserve">
          <source>Performs the search for a specified &lt;code&gt;filter&lt;/code&gt; on the directory with the scope &lt;strong&gt;&lt;code&gt;LDAP_SCOPE_ONELEVEL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309bd6e5bfbd915ac5563c8e1c0dde85bd705c38" translate="yes" xml:space="preserve">
          <source>Performs the search for a specified filter on the directory with the scope of &lt;strong&gt;&lt;code&gt;LDAP_SCOPE_SUBTREE&lt;/code&gt;&lt;/strong&gt;. This is equivalent to searching the entire directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b565d39eea36b652695cb34c41c422be247eb500" translate="yes" xml:space="preserve">
          <source>Performs the virtual command on success, or returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f7662c073b07a50dd0528592741bfdc5a4322a" translate="yes" xml:space="preserve">
          <source>Period Designator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d92f08d7016a90db1e12126c04ccfbfb5cb7f30" translate="yes" xml:space="preserve">
          <source>Periodic watcher operation modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad57fa7af734bc5795501e08cdd78ed7b10090f2" translate="yes" xml:space="preserve">
          <source>Periodic watchers are also timers of a kind, but they are very versatile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f111d810e7ca920bda8f128569fc002610c45314" translate="yes" xml:space="preserve">
          <source>Perl</source>
          <target state="translated">Perl</target>
        </trans-unit>
        <trans-unit id="d3e4c4d75f901a089194399b99cb4aa524dccdaa" translate="yes" xml:space="preserve">
          <source>Perl Differences</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c6449af58689806d9826f3827f7df93d3e6ccd" translate="yes" xml:space="preserve">
          <source>Perl supports the POSIX notation for character classes. This uses names enclosed by &lt;em&gt;[:&lt;/em&gt; and &lt;em&gt;:]&lt;/em&gt; within the enclosing square brackets. PCRE also supports this notation. For example, &lt;em&gt;[01[:alpha:]%]&lt;/em&gt; matches &quot;0&quot;, &quot;1&quot;, any alphabetic character, or &quot;%&quot;. The supported class names are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53fe7d2ea0ea01557942658ffcb785b3367d7e6" translate="yes" xml:space="preserve">
          <source>Permissions on the file. See the &lt;a href=&quot;function.chmod&quot;&gt;chmod()&lt;/a&gt; for more details on this parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b9b273291228f5de71cd7d7a564d495375a109e" translate="yes" xml:space="preserve">
          <source>Permissions on the new directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb1657e9ff3f802edc500f9f4fb88f179183a3a" translate="yes" xml:space="preserve">
          <source>Persistent Database Connections</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b40192465c1715e33252e6c2c89420438bbdca1" translate="yes" xml:space="preserve">
          <source>Phar</source>
          <target state="translated">Phar</target>
        </trans-unit>
        <trans-unit id="63741ee545347eeb77dcffa819f99b55eed6ea99" translate="yes" xml:space="preserve">
          <source>Phar archives contain a bootstrap loader, or &lt;em&gt;stub&lt;/em&gt; written in PHP that is executed when the archive is executed in PHP either via include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5f3541a0c5ab15dcca82571b26666d41eb5816" translate="yes" xml:space="preserve">
          <source>Phar write buffering is per-archive, buffering active for the &lt;em&gt;foo.phar&lt;/em&gt; Phar archive does not affect changes to the &lt;em&gt;bar.phar&lt;/em&gt; Phar archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34b5b812f572e6632cc0afeeb40e775f8130df1" translate="yes" xml:space="preserve">
          <source>Phar::__construct</source>
          <target state="translated">Phar::__construct</target>
        </trans-unit>
        <trans-unit id="596bbcee35e17a2f3beffbb62b4bd769b986fca2" translate="yes" xml:space="preserve">
          <source>Phar::__construct &amp;mdash; Construct a Phar archive object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af46af0683930471080514c4d349c0f019823c9" translate="yes" xml:space="preserve">
          <source>Phar::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9624a5a64b709b690b0b4cddfca405f24acb86" translate="yes" xml:space="preserve">
          <source>Phar::addEmptyDir</source>
          <target state="translated">Phar::addEmptyDir</target>
        </trans-unit>
        <trans-unit id="9d6e577fc59e083e47055b6373114f597cab29d5" translate="yes" xml:space="preserve">
          <source>Phar::addEmptyDir &amp;mdash; Add an empty directory to the phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="859c65a10a17081298f235e7bff4aeee98642345" translate="yes" xml:space="preserve">
          <source>Phar::addEmptyDir &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e96f2502248bfdff7e4b1daf1ce422e42a782f9" translate="yes" xml:space="preserve">
          <source>Phar::addFile</source>
          <target state="translated">Phar::addFile</target>
        </trans-unit>
        <trans-unit id="57dbaf7171de34fc9cbd5d800a91212eba78da98" translate="yes" xml:space="preserve">
          <source>Phar::addFile &amp;mdash; Add a file from the filesystem to the phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc55a79103721627ca1bfa2a3e041f41185594ab" translate="yes" xml:space="preserve">
          <source>Phar::addFile &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2030bd47da6c021490bfed3ab5678d224a477f9" translate="yes" xml:space="preserve">
          <source>Phar::addFromString</source>
          <target state="translated">Phar::addFromString</target>
        </trans-unit>
        <trans-unit id="10030f377c716e1d91b64ea9c8006891ef7ed756" translate="yes" xml:space="preserve">
          <source>Phar::addFromString &amp;mdash; Add a file from a string to the phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290e200e053fac21a120c7178180a0a5d9cb5899" translate="yes" xml:space="preserve">
          <source>Phar::addFromString &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46d84b195ef68ac3942e11033441bafa6b100b9f" translate="yes" xml:space="preserve">
          <source>Phar::apiVersion</source>
          <target state="translated">Phar::apiVersion</target>
        </trans-unit>
        <trans-unit id="04f7aaf3a6d8fe06d6075e4b60af5101f1466812" translate="yes" xml:space="preserve">
          <source>Phar::apiVersion &amp;mdash; Returns the api version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce626a6c752470049e68f2e594b437f7a7393ea3" translate="yes" xml:space="preserve">
          <source>Phar::apiVersion &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2253e105bc7946cadd14d68abb1b77642105280" translate="yes" xml:space="preserve">
          <source>Phar::buildFromDirectory</source>
          <target state="translated">Phar::buildFromDirectory</target>
        </trans-unit>
        <trans-unit id="0b2b658a8a3e61f03d79becf3564b222164a7cc6" translate="yes" xml:space="preserve">
          <source>Phar::buildFromDirectory &amp;mdash; Construct a phar archive from the files within a directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ec2a9f36583ea43e6118c8178dd4f471fe4a76" translate="yes" xml:space="preserve">
          <source>Phar::buildFromDirectory &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1032a1bc49b0d616a8922f4cfa8eda856a99cf" translate="yes" xml:space="preserve">
          <source>Phar::buildFromIterator</source>
          <target state="translated">Phar::buildFromIterator</target>
        </trans-unit>
        <trans-unit id="08335e4e60341538c64c0cc18546fb3c96f2201f" translate="yes" xml:space="preserve">
          <source>Phar::buildFromIterator &amp;mdash; Construct a phar archive from an iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49fda81b90992fe8bd7385aba8b508797c29d380" translate="yes" xml:space="preserve">
          <source>Phar::buildFromIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e353ad96d0c1554494925251319c4ad9520b18a1" translate="yes" xml:space="preserve">
          <source>Phar::canCompress</source>
          <target state="translated">Phar::canCompress</target>
        </trans-unit>
        <trans-unit id="4ea01fe5755f9e82d26edf4888b279a2b4474080" translate="yes" xml:space="preserve">
          <source>Phar::canCompress &amp;mdash; Returns whether phar extension supports compression using either zlib or bzip2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524e5fc51663f9f96dcd57378a785b2cd53fe9f5" translate="yes" xml:space="preserve">
          <source>Phar::canCompress &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50cfeb3fd8c01d93c9de32f0f440e8d9e37cbfbc" translate="yes" xml:space="preserve">
          <source>Phar::canWrite</source>
          <target state="translated">Phar::canWrite</target>
        </trans-unit>
        <trans-unit id="6632f4632b18a7fccac6d3c96987d23cae46dc62" translate="yes" xml:space="preserve">
          <source>Phar::canWrite &amp;mdash; Returns whether phar extension supports writing and creating phars</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f33d6420056446deb9b35766a3fbf3d2af078a8" translate="yes" xml:space="preserve">
          <source>Phar::canWrite &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b960eed5b0162f9adbde493f617366c71e1f1b2" translate="yes" xml:space="preserve">
          <source>Phar::compress</source>
          <target state="translated">Phar::compress</target>
        </trans-unit>
        <trans-unit id="a99b2f72bb7c8d9649a1332d05c6517fb5e31c08" translate="yes" xml:space="preserve">
          <source>Phar::compress &amp;mdash; Compresses the entire Phar archive using Gzip or Bzip2 compression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04d35a0df32ed9967261bfd5cd54db6baa0437c" translate="yes" xml:space="preserve">
          <source>Phar::compress &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5597cf1080957b2b2df8ad1ec9af281ed17f5254" translate="yes" xml:space="preserve">
          <source>Phar::compressAllFilesBZIP2</source>
          <target state="translated">Phar::compressAllFilesBZIP2</target>
        </trans-unit>
        <trans-unit id="870e920c86d3b2f6f67e191d0e8f3e95310d1fc6" translate="yes" xml:space="preserve">
          <source>Phar::compressAllFilesBZIP2 &amp;mdash; Compresses all files in the current Phar archive using Bzip2 compression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b1ebcdaae90153f55efeebe8b25e1de66ca0cc0" translate="yes" xml:space="preserve">
          <source>Phar::compressAllFilesBZIP2 &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80aea20dc4889cdb92f1ca710cabecf4498f2f6c" translate="yes" xml:space="preserve">
          <source>Phar::compressAllFilesGZ</source>
          <target state="translated">Phar::compressAllFilesGZ</target>
        </trans-unit>
        <trans-unit id="7bada1e036e968b62c1bb1097a16fcf998a96bb3" translate="yes" xml:space="preserve">
          <source>Phar::compressAllFilesGZ &amp;mdash; Compresses all files in the current Phar archive using Gzip compression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e34565b084704b73dbba0683086eb95fa690b1" translate="yes" xml:space="preserve">
          <source>Phar::compressAllFilesGZ &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa44038d87e98a6147fe365479baacb727ab8b5c" translate="yes" xml:space="preserve">
          <source>Phar::compressFiles</source>
          <target state="translated">Phar::compressFiles</target>
        </trans-unit>
        <trans-unit id="675a704768a9c00341ab2619e39baf87cb3ff0b8" translate="yes" xml:space="preserve">
          <source>Phar::compressFiles &amp;mdash; Compresses all files in the current Phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbcbe5620cf6b31e1577e2bc3f507589173c204b" translate="yes" xml:space="preserve">
          <source>Phar::compressFiles &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc984f7dc47f486177d3bf71110890a20f3a9170" translate="yes" xml:space="preserve">
          <source>Phar::convertToData</source>
          <target state="translated">Phar::convertToData</target>
        </trans-unit>
        <trans-unit id="e6a979a83f93a1fd04263856c7f6cbc3354ca43d" translate="yes" xml:space="preserve">
          <source>Phar::convertToData &amp;mdash; Convert a phar archive to a non-executable tar or zip file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74087416659575d1b1da94b7a12a20fd407e2260" translate="yes" xml:space="preserve">
          <source>Phar::convertToData &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5862befc926a4503e052741a5c63a44ab1eb515" translate="yes" xml:space="preserve">
          <source>Phar::convertToExecutable</source>
          <target state="translated">Phar::convertToExecutable</target>
        </trans-unit>
        <trans-unit id="22a33bbd03d2f3a1ba483f75adf400489d8dfe27" translate="yes" xml:space="preserve">
          <source>Phar::convertToExecutable &amp;mdash; Convert a phar archive to another executable phar archive file format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6d8386527f1f7261601df75fd43b5ca12ca761" translate="yes" xml:space="preserve">
          <source>Phar::convertToExecutable &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35e13a454bd0e3b95add1fb57723b2bb28212ad" translate="yes" xml:space="preserve">
          <source>Phar::copy</source>
          <target state="translated">Phar::copy</target>
        </trans-unit>
        <trans-unit id="fbe1976e84f9b5ad00a771ff9c0a126015ad629f" translate="yes" xml:space="preserve">
          <source>Phar::copy &amp;mdash; Copy a file internal to the phar archive to another new file within the phar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41d990eece808c0c0cdff2a62576757e221f188" translate="yes" xml:space="preserve">
          <source>Phar::copy &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0428eed49301af6155cfc92871d3b98f596165d3" translate="yes" xml:space="preserve">
          <source>Phar::count</source>
          <target state="translated">Phar::count</target>
        </trans-unit>
        <trans-unit id="86b97472424986525269592eff486db616c5243c" translate="yes" xml:space="preserve">
          <source>Phar::count &amp;mdash; Returns the number of entries (files) in the Phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a4391de35b27299f25a40a44883883a596a423" translate="yes" xml:space="preserve">
          <source>Phar::count &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cae2356e6e364cc9a1fa39bf9024f670c6039b" translate="yes" xml:space="preserve">
          <source>Phar::createDefaultStub</source>
          <target state="translated">Phar::createDefaultStub</target>
        </trans-unit>
        <trans-unit id="242cd03972c14563a6b664f98441c2870270f99d" translate="yes" xml:space="preserve">
          <source>Phar::createDefaultStub &amp;mdash; Create a phar-file format specific stub</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64884c62ba4919ecbccc617a1cbbeff1d5c1bc10" translate="yes" xml:space="preserve">
          <source>Phar::createDefaultStub &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ba2292c2b840a1e6d474ff54e62b51da5c85a4" translate="yes" xml:space="preserve">
          <source>Phar::decompress</source>
          <target state="translated">Phar::decompress</target>
        </trans-unit>
        <trans-unit id="ae1cdb3df402613ea8a3b1252983e12d36af6869" translate="yes" xml:space="preserve">
          <source>Phar::decompress &amp;mdash; Decompresses the entire Phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30f0c36af3123331b83f9eb67b639ff432aa9c3" translate="yes" xml:space="preserve">
          <source>Phar::decompress &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f8fc13645614efb97966ccc3ee8598d7fd5db0" translate="yes" xml:space="preserve">
          <source>Phar::decompressFiles</source>
          <target state="translated">Phar::decompressFiles</target>
        </trans-unit>
        <trans-unit id="1afbf87e834fa5f5d0652bce17eef7bcc88559ad" translate="yes" xml:space="preserve">
          <source>Phar::decompressFiles &amp;mdash; Decompresses all files in the current Phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19aa401c3768d9308bb72e961f18326a47f30479" translate="yes" xml:space="preserve">
          <source>Phar::decompressFiles &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c0e52d091969cff604837ad16f559775bf6ab4" translate="yes" xml:space="preserve">
          <source>Phar::delMetadata</source>
          <target state="translated">Phar::delMetadata</target>
        </trans-unit>
        <trans-unit id="8033f085ae7ad375336251f818ebea3814e596e1" translate="yes" xml:space="preserve">
          <source>Phar::delMetadata &amp;mdash; Deletes the global metadata of the phar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="498137d5acf5bf762e530933622726c32127da45" translate="yes" xml:space="preserve">
          <source>Phar::delMetadata &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2b6d99c56aafa5455845f7b776e76a500859fe" translate="yes" xml:space="preserve">
          <source>Phar::delete</source>
          <target state="translated">Phar::delete</target>
        </trans-unit>
        <trans-unit id="3206572c1b3da43ef3df1f4e536722de7a9513f8" translate="yes" xml:space="preserve">
          <source>Phar::delete &amp;mdash; Delete a file within a phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04a22ddf83d544f53b6f7b87bea908d475406260" translate="yes" xml:space="preserve">
          <source>Phar::delete &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c63fe00504ac027de1ee2e37a4ac0cc414cae5d" translate="yes" xml:space="preserve">
          <source>Phar::extractTo</source>
          <target state="translated">Phar::extractTo</target>
        </trans-unit>
        <trans-unit id="81f6aa15b04673e7a548f4868638f3df32f07424" translate="yes" xml:space="preserve">
          <source>Phar::extractTo &amp;mdash; Extract the contents of a phar archive to a directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225b0253dd5463b46d4a0a988b4c291c2b089179" translate="yes" xml:space="preserve">
          <source>Phar::extractTo &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf937da1f36057365775525fcf119e434b8c686" translate="yes" xml:space="preserve">
          <source>Phar::getAlias</source>
          <target state="translated">Phar::getAlias</target>
        </trans-unit>
        <trans-unit id="83086e93f8822fcdb1f3f86f8335753402ab029a" translate="yes" xml:space="preserve">
          <source>Phar::getAlias &amp;mdash; Get the alias for Phar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eb297ed17bea3458520de329d5d461117578a49" translate="yes" xml:space="preserve">
          <source>Phar::getAlias &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9fa6adbfcbbdc90b0b72f0d95addd08d9906a9e" translate="yes" xml:space="preserve">
          <source>Phar::getMetadata</source>
          <target state="translated">Phar::getMetadata</target>
        </trans-unit>
        <trans-unit id="2fcdb7230d51047b18732fba18ea20a892f41614" translate="yes" xml:space="preserve">
          <source>Phar::getMetadata &amp;mdash; Returns phar archive meta-data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550120541167aebf38802ff5658e136b9c3811e1" translate="yes" xml:space="preserve">
          <source>Phar::getMetadata &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce85c5bc7276b77603f482f9fb06cecf1e65476f" translate="yes" xml:space="preserve">
          <source>Phar::getModified</source>
          <target state="translated">Phar::getModified</target>
        </trans-unit>
        <trans-unit id="cb977187f15bdb5c0f32f4e266e461a4af668d8f" translate="yes" xml:space="preserve">
          <source>Phar::getModified &amp;mdash; Return whether phar was modified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d8b01b6eb1de67355bd3574127794b97959987" translate="yes" xml:space="preserve">
          <source>Phar::getModified &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97b9bc73b592f478c321f0d605c786b40f13a69" translate="yes" xml:space="preserve">
          <source>Phar::getPath</source>
          <target state="translated">Phar::getPath</target>
        </trans-unit>
        <trans-unit id="f89b337fdec63f72f5c43f8727983165eb868f3b" translate="yes" xml:space="preserve">
          <source>Phar::getPath &amp;mdash; Get the real path to the Phar archive on disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93d2dc67f5d13ac728e04a7a62eeb8470530a95d" translate="yes" xml:space="preserve">
          <source>Phar::getPath &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d014adb542a3b455c62eff84bc5d87fca0f5a2" translate="yes" xml:space="preserve">
          <source>Phar::getSignature</source>
          <target state="translated">Phar::getSignature</target>
        </trans-unit>
        <trans-unit id="2dfc3979b4fd07cf1cc9e01dc6f18b24c7b8cdb7" translate="yes" xml:space="preserve">
          <source>Phar::getSignature &amp;mdash; Return MD5/SHA1/SHA256/SHA512/OpenSSL signature of a Phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbecc0ede77d0830a384aa2492ede85d9f60cc2e" translate="yes" xml:space="preserve">
          <source>Phar::getSignature &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774476eb7c1fe027f65b8d174738b0085099e512" translate="yes" xml:space="preserve">
          <source>Phar::getStub</source>
          <target state="translated">Phar::getStub</target>
        </trans-unit>
        <trans-unit id="0ca4753e6f062c8e1e0cd95ba26395f039abdd1f" translate="yes" xml:space="preserve">
          <source>Phar::getStub &amp;mdash; Return the PHP loader or bootstrap stub of a Phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d03a4f071e3a6e7c9f7bcb7827ad397171f8cdc" translate="yes" xml:space="preserve">
          <source>Phar::getStub &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4c7ca2caf2e8056070cbb81cf3e02ad9fea200f" translate="yes" xml:space="preserve">
          <source>Phar::getSupportedCompression</source>
          <target state="translated">Phar::getSupportedCompression</target>
        </trans-unit>
        <trans-unit id="edbcf3781e6397540b7dd97430b48526f08568b1" translate="yes" xml:space="preserve">
          <source>Phar::getSupportedCompression &amp;mdash; Return array of supported compression algorithms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fca5a55db5da83b21af710bd6814ac1f35991ebe" translate="yes" xml:space="preserve">
          <source>Phar::getSupportedCompression &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bbbe7be93d47b1157761d9550dbee237129070e" translate="yes" xml:space="preserve">
          <source>Phar::getSupportedSignatures</source>
          <target state="translated">Phar::getSupportedSignatures</target>
        </trans-unit>
        <trans-unit id="040e447182b39fa65bb34dbef6936153bf48d9c1" translate="yes" xml:space="preserve">
          <source>Phar::getSupportedSignatures &amp;mdash; Return array of supported signature types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1c4cea88c8c76ae86243d017b099ff7e3dba26" translate="yes" xml:space="preserve">
          <source>Phar::getSupportedSignatures &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca61216b716e9b456aa0d3dc0db99536ee96f651" translate="yes" xml:space="preserve">
          <source>Phar::getVersion</source>
          <target state="translated">Phar::getVersion</target>
        </trans-unit>
        <trans-unit id="c3684e4cb6a809242a52e1c04efd620c8cc716ec" translate="yes" xml:space="preserve">
          <source>Phar::getVersion &amp;mdash; Return version info of Phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc3ed3b1f802d48413b35c78151a99d042ec7ba3" translate="yes" xml:space="preserve">
          <source>Phar::getVersion &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f3ff5c88ff4d89dd785f1364c1e98d0c17eec8" translate="yes" xml:space="preserve">
          <source>Phar::hasMetadata</source>
          <target state="translated">Phar::hasMetadata</target>
        </trans-unit>
        <trans-unit id="fee8e29eea46592cd8d3736337f6266ace1cd59a" translate="yes" xml:space="preserve">
          <source>Phar::hasMetadata &amp;mdash; Returns whether phar has global meta-data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="146fbe7f3d374aa6ac8879bc753af0820a1bbb3c" translate="yes" xml:space="preserve">
          <source>Phar::hasMetadata &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f324cd817eaafc3f7143dfc324691c7842f8f714" translate="yes" xml:space="preserve">
          <source>Phar::interceptFileFuncs</source>
          <target state="translated">Phar::interceptFileFuncs</target>
        </trans-unit>
        <trans-unit id="77ed408d89780b25a9e0629bdc652aa88d978fa5" translate="yes" xml:space="preserve">
          <source>Phar::interceptFileFuncs &amp;mdash; Instructs phar to intercept fopen, file_get_contents, opendir, and all of the stat-related functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5478b1d5f4e6590d3fb11055297e6c32d433534" translate="yes" xml:space="preserve">
          <source>Phar::interceptFileFuncs &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eb5dde5cb84ebd8777d75d47560a759f1fc09e4" translate="yes" xml:space="preserve">
          <source>Phar::isBuffering</source>
          <target state="translated">Phar::isBuffering</target>
        </trans-unit>
        <trans-unit id="134148dae4cd3bad467ded435c773a5316d964b4" translate="yes" xml:space="preserve">
          <source>Phar::isBuffering &amp;mdash; Used to determine whether Phar write operations are being buffered, or are flushing directly to disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afe27689875e6edf72fa1e9d2ee355c0bbb1ad8" translate="yes" xml:space="preserve">
          <source>Phar::isBuffering &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d7244ecc63af07be23afc85edc16a5dadb47072" translate="yes" xml:space="preserve">
          <source>Phar::isCompressed</source>
          <target state="translated">Phar::isCompressed</target>
        </trans-unit>
        <trans-unit id="743f5db5f0e904a06f5bf3c0fe469d2416e0b4ec" translate="yes" xml:space="preserve">
          <source>Phar::isCompressed &amp;mdash; Returns Phar::GZ or PHAR::BZ2 if the entire phar archive is compressed (.tar.gz/tar.bz and so on)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0449034b615ea60fa7a1561071fa3e7680c4298" translate="yes" xml:space="preserve">
          <source>Phar::isCompressed &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbaa2ae5d6ab0f2479d7fe35d9bf0b6564310895" translate="yes" xml:space="preserve">
          <source>Phar::isFileFormat</source>
          <target state="translated">Phar::isFileFormat</target>
        </trans-unit>
        <trans-unit id="a6ae87e417fad3a4235fde4bd720b8d04bb9f51f" translate="yes" xml:space="preserve">
          <source>Phar::isFileFormat &amp;mdash; Returns true if the phar archive is based on the tar/phar/zip file format depending on the parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e561a8443d6b8e394346d53b25eb1bf70574e30" translate="yes" xml:space="preserve">
          <source>Phar::isFileFormat &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc0c1bd11ae72cb570a2e7c41d934a428a25cef" translate="yes" xml:space="preserve">
          <source>Phar::isValidPharFilename</source>
          <target state="translated">Phar::isValidPharFilename</target>
        </trans-unit>
        <trans-unit id="a9076910e0a9363fc00df93ebf22b89983fe1e4a" translate="yes" xml:space="preserve">
          <source>Phar::isValidPharFilename &amp;mdash; Returns whether the given filename is a valid phar filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d2bcbd0890d6049155124b9579a119fdd6b52c" translate="yes" xml:space="preserve">
          <source>Phar::isValidPharFilename &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc9f19ff46c3a885286729e7ee491de24a3c21c" translate="yes" xml:space="preserve">
          <source>Phar::isWritable</source>
          <target state="translated">Phar::isWritable</target>
        </trans-unit>
        <trans-unit id="8e08e8a22abc2717a3e7f05ef8c4fbfdc3e2adff" translate="yes" xml:space="preserve">
          <source>Phar::isWritable &amp;mdash; Returns true if the phar archive can be modified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f79327cad5d99d1a407d80c4dd6b7fe22e90ed2e" translate="yes" xml:space="preserve">
          <source>Phar::isWritable &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44696a445a78f102c0ac540b1feacfb833bc2f87" translate="yes" xml:space="preserve">
          <source>Phar::loadPhar</source>
          <target state="translated">Phar::loadPhar</target>
        </trans-unit>
        <trans-unit id="670390ea689daa21abb0b4773325cbb4457e6bf9" translate="yes" xml:space="preserve">
          <source>Phar::loadPhar &amp;mdash; Loads any phar archive with an alias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8e13d5847cbad605eed62631ff817777a511b5" translate="yes" xml:space="preserve">
          <source>Phar::loadPhar &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d667308b153dcd098b9274e0d4484a272e7173" translate="yes" xml:space="preserve">
          <source>Phar::loadPhar can be used anywhere to load an external Phar archive, whereas Phar::mapPhar should be used in a loader stub for a Phar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea34a448fbbf33a4e04041d57371b340644bae3" translate="yes" xml:space="preserve">
          <source>Phar::mapPhar</source>
          <target state="translated">Phar::mapPhar</target>
        </trans-unit>
        <trans-unit id="78335d1e0728229b44ceda5e081b780a2a099edd" translate="yes" xml:space="preserve">
          <source>Phar::mapPhar &amp;mdash; Reads the currently executed file (a phar) and registers its manifest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52058838158d417d440830f6904a13329dcb279f" translate="yes" xml:space="preserve">
          <source>Phar::mapPhar &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6db08611f2ee9d9669973bb07cd821be5f1ed8" translate="yes" xml:space="preserve">
          <source>Phar::mount</source>
          <target state="translated">Phar::mount</target>
        </trans-unit>
        <trans-unit id="88327859a2aab2b5a9feca57121148bf83a84e2b" translate="yes" xml:space="preserve">
          <source>Phar::mount &amp;mdash; Mount an external path or file to a virtual location within the phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3605d774ef7f28b1b072a66d4927ce0dee51d406" translate="yes" xml:space="preserve">
          <source>Phar::mount &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1208538c1f280fe3d802a4f08dbc5f81e30df69" translate="yes" xml:space="preserve">
          <source>Phar::mungServer</source>
          <target state="translated">Phar::mungServer</target>
        </trans-unit>
        <trans-unit id="4e71df6d371d1aecadb79d592635ab05af35c155" translate="yes" xml:space="preserve">
          <source>Phar::mungServer &amp;mdash; Defines a list of up to 4 $_SERVER variables that should be modified for execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22043a23b7d1bf0c831f429e5c1410a9a28900d6" translate="yes" xml:space="preserve">
          <source>Phar::mungServer &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e493790bc82feb222413b0b8a74fedbdd876ab1a" translate="yes" xml:space="preserve">
          <source>Phar::offsetExists</source>
          <target state="translated">Phar::offsetExists</target>
        </trans-unit>
        <trans-unit id="e83fbd8d52c5d854af1c72510f7b046712ba915f" translate="yes" xml:space="preserve">
          <source>Phar::offsetExists &amp;mdash; Determines whether a file exists in the phar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fb7302a1f4126bd0a48f174e4622dead421a0b" translate="yes" xml:space="preserve">
          <source>Phar::offsetExists &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26997a5354a1f721c5de161b0f34e3d860b31910" translate="yes" xml:space="preserve">
          <source>Phar::offsetGet</source>
          <target state="translated">Phar::offsetGet</target>
        </trans-unit>
        <trans-unit id="be62312025c577f44fbf94eb4b5537f125c8acd8" translate="yes" xml:space="preserve">
          <source>Phar::offsetGet &amp;mdash; Gets a &lt;a href=&quot;class.pharfileinfo&quot;&gt;PharFileInfo&lt;/a&gt; object for a specific file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b2ea1e11e763df0f7bdf19945ee581411d327d" translate="yes" xml:space="preserve">
          <source>Phar::offsetGet &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227e1b3dcc4ad4e6d42f0f3321ecefa5bdc4d2e2" translate="yes" xml:space="preserve">
          <source>Phar::offsetSet</source>
          <target state="translated">Phar::offsetSet</target>
        </trans-unit>
        <trans-unit id="b3327809eefe548770be0061cd777d2b6efd94e7" translate="yes" xml:space="preserve">
          <source>Phar::offsetSet &amp;mdash; Set the contents of an internal file to those of an external file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50ef31a27cc402f0f76324ac9a10acd8e2cf15a2" translate="yes" xml:space="preserve">
          <source>Phar::offsetSet &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f713ccb698ee5ea510af1c290f6ec753885a16cb" translate="yes" xml:space="preserve">
          <source>Phar::offsetUnset</source>
          <target state="translated">Phar::offsetUnset</target>
        </trans-unit>
        <trans-unit id="779d6524e8faf1911ec51ffc433c2955ffb1c9d4" translate="yes" xml:space="preserve">
          <source>Phar::offsetUnset &amp;mdash; Remove a file from a phar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c419a7d7cb293a41d8a20b18ba9edc3ab48a51" translate="yes" xml:space="preserve">
          <source>Phar::offsetUnset &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8baeb603eb423219e3e9dffb28d8b92443a4ae93" translate="yes" xml:space="preserve">
          <source>Phar::running</source>
          <target state="translated">Phar::running</target>
        </trans-unit>
        <trans-unit id="d6cb8e71111a28972ef52e525461f030000cd651" translate="yes" xml:space="preserve">
          <source>Phar::running &amp;mdash; Returns the full path on disk or full phar URL to the currently executing Phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4621f92e6a7d9c90072a15d943fff745eac49747" translate="yes" xml:space="preserve">
          <source>Phar::running &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5acb71562e22d1bcb23b8459a20c3147b72b7e0" translate="yes" xml:space="preserve">
          <source>Phar::setAlias</source>
          <target state="translated">Phar::setAlias</target>
        </trans-unit>
        <trans-unit id="789b55432001f876fd491277d4c83ada44ea7991" translate="yes" xml:space="preserve">
          <source>Phar::setAlias &amp;mdash; Set the alias for the Phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002c8379e8a05f5d9275e173b3414348f7c32995" translate="yes" xml:space="preserve">
          <source>Phar::setAlias &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0b665836028d196a3af99a2787e31f0626fac3" translate="yes" xml:space="preserve">
          <source>Phar::setDefaultStub</source>
          <target state="translated">Phar::setDefaultStub</target>
        </trans-unit>
        <trans-unit id="4587479abf63978c5eecc57002e7203166dcab46" translate="yes" xml:space="preserve">
          <source>Phar::setDefaultStub &amp;mdash; Used to set the PHP loader or bootstrap stub of a Phar archive to the default loader</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43f5e82096455aed386f51ff84aff5648a13716" translate="yes" xml:space="preserve">
          <source>Phar::setDefaultStub &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf7433a0bf213fa5afd58024bff18e100212243" translate="yes" xml:space="preserve">
          <source>Phar::setMetadata</source>
          <target state="translated">Phar::setMetadata</target>
        </trans-unit>
        <trans-unit id="741effdc9139be20c92e6bf66b5191a65a719164" translate="yes" xml:space="preserve">
          <source>Phar::setMetadata &amp;mdash; Sets phar archive meta-data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95a6722d76717873a64af3b3270935d3cb8dc288" translate="yes" xml:space="preserve">
          <source>Phar::setMetadata &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caad607e644536faa568c34694e41d1c0fe505e5" translate="yes" xml:space="preserve">
          <source>Phar::setSignatureAlgorithm</source>
          <target state="translated">Phar::setSignatureAlgorithm</target>
        </trans-unit>
        <trans-unit id="801f2b5750a7b5d0eccc5c403c62ad716e0914c0" translate="yes" xml:space="preserve">
          <source>Phar::setSignatureAlgorithm &amp;mdash; Set the signature algorithm for a phar and apply it</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b9f7df18ae4c3447b490f79c3004bb0e8e80dc" translate="yes" xml:space="preserve">
          <source>Phar::setSignatureAlgorithm &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de723595ae547a58b29e51f68028888a623cb8b2" translate="yes" xml:space="preserve">
          <source>Phar::setStub</source>
          <target state="translated">Phar::setStub</target>
        </trans-unit>
        <trans-unit id="055a7fc56bd591f24257ea98c545c70ccad3b93e" translate="yes" xml:space="preserve">
          <source>Phar::setStub &amp;mdash; Used to set the PHP loader or bootstrap stub of a Phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac79ed0690c6b7851282a8563d0722312ff96d9a" translate="yes" xml:space="preserve">
          <source>Phar::setStub &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528017e17ba93a5e1297f2f2d355a62c390d24bf" translate="yes" xml:space="preserve">
          <source>Phar::startBuffering</source>
          <target state="translated">Phar::startBuffering</target>
        </trans-unit>
        <trans-unit id="fb1609da3ea3845d5be50cf49660b638f0cc7225" translate="yes" xml:space="preserve">
          <source>Phar::startBuffering &amp;mdash; Start buffering Phar write operations, do not modify the Phar object on disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="356d11aa39d2102b50b875d391f417715fcc4d9f" translate="yes" xml:space="preserve">
          <source>Phar::startBuffering &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263e591eee8238a0a81b658aa9fed14a068c59db" translate="yes" xml:space="preserve">
          <source>Phar::stopBuffering</source>
          <target state="translated">Phar::stopBuffering</target>
        </trans-unit>
        <trans-unit id="edef80e45de1d145fbac188635377b77f7f207dd" translate="yes" xml:space="preserve">
          <source>Phar::stopBuffering &amp;mdash; Stop buffering write requests to the Phar archive, and save changes to disk</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13a04b7aee0d2f5dba9e751e5c6569d2e79ba1af" translate="yes" xml:space="preserve">
          <source>Phar::stopBuffering &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fc755b0d296fad6c6e31da9b3bfc81eb5c9e18" translate="yes" xml:space="preserve">
          <source>Phar::uncompressAllFiles</source>
          <target state="translated">Phar::uncompressAllFiles</target>
        </trans-unit>
        <trans-unit id="83c6ce6967649d22d388e7fca16326eb9f22a57f" translate="yes" xml:space="preserve">
          <source>Phar::uncompressAllFiles &amp;mdash; Uncompresses all files in the current Phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f453d0ee51b83078b97cc19f49be91e44c43d9d0" translate="yes" xml:space="preserve">
          <source>Phar::uncompressAllFiles &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8df710e9df4f41eef0be4782a1d1af3ea12cf9" translate="yes" xml:space="preserve">
          <source>Phar::unlinkArchive</source>
          <target state="translated">Phar::unlinkArchive</target>
        </trans-unit>
        <trans-unit id="b5d2893413ee6e5e4c6db47aef0706db4b8f0bdd" translate="yes" xml:space="preserve">
          <source>Phar::unlinkArchive &amp;mdash; Completely remove a phar archive from disk and from memory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d03084b6836bd2cf5176fc2fc029ca74e550e32" translate="yes" xml:space="preserve">
          <source>Phar::unlinkArchive &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9baccc4cc9a4bb80ea53c0563ef186a532f5b478" translate="yes" xml:space="preserve">
          <source>Phar::webPhar</source>
          <target state="translated">Phar::webPhar</target>
        </trans-unit>
        <trans-unit id="09c0a9781cd4ff2e04cdbf0b568b83257e5a4ba1" translate="yes" xml:space="preserve">
          <source>Phar::webPhar &amp;mdash; mapPhar for web-based phars. front controller for web applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="534fde96252704b55484114239b062acdc0297e7" translate="yes" xml:space="preserve">
          <source>Phar::webPhar &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d698324817e1b73d415c5297fc2bc38cbbc53819" translate="yes" xml:space="preserve">
          <source>PharData &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad68c4b04df3068776cdff80f6855fbc079d89de" translate="yes" xml:space="preserve">
          <source>PharData::__construct</source>
          <target state="translated">PharData::__construct</target>
        </trans-unit>
        <trans-unit id="bf63ee1f01aef00a80a62c6bdd058255ffd6444a" translate="yes" xml:space="preserve">
          <source>PharData::__construct &amp;mdash; Construct a non-executable tar or zip archive object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae04b3f0fae0500ab68481635a593ed6eda2a31" translate="yes" xml:space="preserve">
          <source>PharData::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f799950575b0e3d8da901643d5bc1c8429dfbdb8" translate="yes" xml:space="preserve">
          <source>PharData::addEmptyDir</source>
          <target state="translated">PharData::addEmptyDir</target>
        </trans-unit>
        <trans-unit id="dc940ee44325f023b2a17e1b0e31210eab1889f2" translate="yes" xml:space="preserve">
          <source>PharData::addEmptyDir &amp;mdash; Add an empty directory to the tar/zip archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387a43f35447022813157271c020c6ba4bb88faf" translate="yes" xml:space="preserve">
          <source>PharData::addEmptyDir &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4ff85eca0106e13dd17b1746b70c79178df2dd6" translate="yes" xml:space="preserve">
          <source>PharData::addFile</source>
          <target state="translated">PharData::addFile</target>
        </trans-unit>
        <trans-unit id="555a6e2e3330bdcd50fdf8c43f97bb81590b6302" translate="yes" xml:space="preserve">
          <source>PharData::addFile &amp;mdash; Add a file from the filesystem to the tar/zip archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3382dd7f6593a69e9923be3d07e89e481dc7b793" translate="yes" xml:space="preserve">
          <source>PharData::addFile &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96329352ed83b809196eb577ad9bf7aafa2a44b2" translate="yes" xml:space="preserve">
          <source>PharData::addFromString</source>
          <target state="translated">PharData::addFromString</target>
        </trans-unit>
        <trans-unit id="5110f764e3e134927c82695e6f944d66bc29209e" translate="yes" xml:space="preserve">
          <source>PharData::addFromString &amp;mdash; Add a file from the filesystem to the tar/zip archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b9abe7bd31205209ceea5d21ece5f75d521272b" translate="yes" xml:space="preserve">
          <source>PharData::addFromString &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f629e106ca68f147053bb62835f8023447067ebb" translate="yes" xml:space="preserve">
          <source>PharData::buildFromDirectory</source>
          <target state="translated">PharData::buildFromDirectory</target>
        </trans-unit>
        <trans-unit id="92ca993bc57ff7773d5d5136d8b3d1e6fcb052a1" translate="yes" xml:space="preserve">
          <source>PharData::buildFromDirectory &amp;mdash; Construct a tar/zip archive from the files within a directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f6ac25ebe4e0e2c4f2c223c0780e816363ce18" translate="yes" xml:space="preserve">
          <source>PharData::buildFromDirectory &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a41e5d47b94d0995f4a5734e2b2fa2d8763efb2" translate="yes" xml:space="preserve">
          <source>PharData::buildFromIterator</source>
          <target state="translated">PharData::buildFromIterator</target>
        </trans-unit>
        <trans-unit id="45bec0706c35b7293e6c2e2bb21376af27278832" translate="yes" xml:space="preserve">
          <source>PharData::buildFromIterator &amp;mdash; Construct a tar or zip archive from an iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c16a7ca67bf8cb4408d97d73f8ee2d2d19d03437" translate="yes" xml:space="preserve">
          <source>PharData::buildFromIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a25ea2c70faf608d16ddfe1a9eaa75df8701e360" translate="yes" xml:space="preserve">
          <source>PharData::compress</source>
          <target state="translated">PharData::compress</target>
        </trans-unit>
        <trans-unit id="9056846038ad99c5e3680e7522209c7c5cfc93a7" translate="yes" xml:space="preserve">
          <source>PharData::compress &amp;mdash; Compresses the entire tar/zip archive using Gzip or Bzip2 compression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1b332a0218753858357689ecac923858bfc5dc" translate="yes" xml:space="preserve">
          <source>PharData::compress &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb9575955fa5c7132c067872061ef758b8812e0" translate="yes" xml:space="preserve">
          <source>PharData::compressFiles</source>
          <target state="translated">PharData::compressFiles</target>
        </trans-unit>
        <trans-unit id="83834a02fdc797eef2c360d86221947d87e26463" translate="yes" xml:space="preserve">
          <source>PharData::compressFiles &amp;mdash; Compresses all files in the current tar/zip archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635887f90bb2a390fd0441a576ff86c155c7e31e" translate="yes" xml:space="preserve">
          <source>PharData::compressFiles &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342dd856dc8837fdc5dabccaf0a1d5e0b4c0f355" translate="yes" xml:space="preserve">
          <source>PharData::convertToData</source>
          <target state="translated">PharData::convertToData</target>
        </trans-unit>
        <trans-unit id="0b6635b5cefd9d629e556e8e81cae0d68cd22d49" translate="yes" xml:space="preserve">
          <source>PharData::convertToData &amp;mdash; Convert a phar archive to a non-executable tar or zip file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98a1ac59647512aec70486cdab26482979535364" translate="yes" xml:space="preserve">
          <source>PharData::convertToData &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10d461a92041b98dcb648c4eae6f27d01cd1f057" translate="yes" xml:space="preserve">
          <source>PharData::convertToExecutable</source>
          <target state="translated">PharData::convertToExecutable</target>
        </trans-unit>
        <trans-unit id="88bfe618a0c581de49394f862d24c810488f39bd" translate="yes" xml:space="preserve">
          <source>PharData::convertToExecutable &amp;mdash; Convert a non-executable tar/zip archive to an executable phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f684b14bb5c75e0e4fc05713c9f2f8aa301dd43d" translate="yes" xml:space="preserve">
          <source>PharData::convertToExecutable &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6af12c79fc913e0d6844646a1592f42f7b7088c7" translate="yes" xml:space="preserve">
          <source>PharData::copy</source>
          <target state="translated">PharData::copy</target>
        </trans-unit>
        <trans-unit id="dd6b0ba5ac0aeee107895a19a6d0588768680d8b" translate="yes" xml:space="preserve">
          <source>PharData::copy &amp;mdash; Copy a file internal to the phar archive to another new file within the phar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533896ed60e7d271d648280d4f37cb47ab3aaeef" translate="yes" xml:space="preserve">
          <source>PharData::copy &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d241207dd0323261fde9bc37654ee081c879f9a" translate="yes" xml:space="preserve">
          <source>PharData::decompress</source>
          <target state="translated">PharData::decompress</target>
        </trans-unit>
        <trans-unit id="3e6863468ac5928b0acea28230929e76ee9c779a" translate="yes" xml:space="preserve">
          <source>PharData::decompress &amp;mdash; Decompresses the entire Phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ced86641293e46e62cc8a9ef9f75c842a201f6" translate="yes" xml:space="preserve">
          <source>PharData::decompress &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b23e91137bc82ac8bf7676d703f287cbff7a6c" translate="yes" xml:space="preserve">
          <source>PharData::decompressFiles</source>
          <target state="translated">PharData::decompressFiles</target>
        </trans-unit>
        <trans-unit id="3d7fb4a0eb5c1ff0564a9875906e034595a2d10f" translate="yes" xml:space="preserve">
          <source>PharData::decompressFiles &amp;mdash; Decompresses all files in the current zip archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8362076a0aec5ba2c1a3ecb38599220128267d1e" translate="yes" xml:space="preserve">
          <source>PharData::decompressFiles &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e8f999ee00c6dd15bac6b4eee0640207087e0f" translate="yes" xml:space="preserve">
          <source>PharData::delMetadata</source>
          <target state="translated">PharData::delMetadata</target>
        </trans-unit>
        <trans-unit id="0d1bd0a8e0a2e6fef8cee95b6f608284aaa6c725" translate="yes" xml:space="preserve">
          <source>PharData::delMetadata &amp;mdash; Deletes the global metadata of a zip archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e6d6fa523c0e3be90d25683e529541badae8e4" translate="yes" xml:space="preserve">
          <source>PharData::delMetadata &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9474eb5e0a5b6146d7780a0d2ee17715ca0fc6" translate="yes" xml:space="preserve">
          <source>PharData::delete</source>
          <target state="translated">PharData::delete</target>
        </trans-unit>
        <trans-unit id="a7f858e62b65ef9210f49dd0e30f73ae9cb0bafa" translate="yes" xml:space="preserve">
          <source>PharData::delete &amp;mdash; Delete a file within a tar/zip archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d3d4fc7da31ec9674318023641bf09414a6aca" translate="yes" xml:space="preserve">
          <source>PharData::delete &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca409ae6367685c9a2b19d03f4fc306169b026f" translate="yes" xml:space="preserve">
          <source>PharData::extractTo</source>
          <target state="translated">PharData::extractTo</target>
        </trans-unit>
        <trans-unit id="c0c0612a71338f8d60b8aab0e85ee8f3731caaac" translate="yes" xml:space="preserve">
          <source>PharData::extractTo &amp;mdash; Extract the contents of a tar/zip archive to a directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d08ab82236d408210c8360086dbc574a3832de4" translate="yes" xml:space="preserve">
          <source>PharData::extractTo &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf03ef0a7d8fa0461cff0eb12b0d1b127af7f38" translate="yes" xml:space="preserve">
          <source>PharData::isWritable</source>
          <target state="translated">PharData::isWritable</target>
        </trans-unit>
        <trans-unit id="2e500fad7f5d64681f014275c30d4900f82819c2" translate="yes" xml:space="preserve">
          <source>PharData::isWritable &amp;mdash; Returns true if the tar/zip archive can be modified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5d00355a4d3d754cef1bb2d4038155023d1e3fb" translate="yes" xml:space="preserve">
          <source>PharData::isWritable &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a51129a28dfaf5a30bb7ae5a6bad1bc81266383" translate="yes" xml:space="preserve">
          <source>PharData::offsetSet</source>
          <target state="translated">PharData::offsetSet</target>
        </trans-unit>
        <trans-unit id="98938f1a67688befb00b9b89ecaa3678b8cae80b" translate="yes" xml:space="preserve">
          <source>PharData::offsetSet &amp;mdash; Set the contents of a file within the tar/zip to those of an external file or string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dfe3ba79a8ce5df56016ce262b1eadf0a2196eb" translate="yes" xml:space="preserve">
          <source>PharData::offsetSet &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063d5bef43d0052151b7bfd5521d4a63fd2c35f0" translate="yes" xml:space="preserve">
          <source>PharData::offsetUnset</source>
          <target state="translated">PharData::offsetUnset</target>
        </trans-unit>
        <trans-unit id="9f08fac25ab54fe9bcc7e56b9e47af954f5703e9" translate="yes" xml:space="preserve">
          <source>PharData::offsetUnset &amp;mdash; Remove a file from a tar/zip archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf1065339a8604af848213219db8314abc3cae63" translate="yes" xml:space="preserve">
          <source>PharData::offsetUnset &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48abeb46db2c3d45d4a7a7b766f773a631e5cc37" translate="yes" xml:space="preserve">
          <source>PharData::setAlias</source>
          <target state="translated">PharData::setAlias</target>
        </trans-unit>
        <trans-unit id="e48d4ac28caf403bbd5f61b44542e43a8ff373bb" translate="yes" xml:space="preserve">
          <source>PharData::setAlias &amp;mdash; Dummy function (Phar::setAlias is not valid for PharData)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e45c418f3f7b6ca668e075270128e21d93597f3" translate="yes" xml:space="preserve">
          <source>PharData::setAlias &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3922c7b4e8860939e3ffd840366cbf93eaa6f3" translate="yes" xml:space="preserve">
          <source>PharData::setDefaultStub</source>
          <target state="translated">PharData::setDefaultStub</target>
        </trans-unit>
        <trans-unit id="718c441056bafa95a75958c91d1f7799793826d6" translate="yes" xml:space="preserve">
          <source>PharData::setDefaultStub &amp;mdash; Dummy function (Phar::setDefaultStub is not valid for PharData)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c1f24277a24cb9a26d2c8b06772201fc6e3d5ff" translate="yes" xml:space="preserve">
          <source>PharData::setDefaultStub &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727ede69d5a0fe4ce669ac87d744980eb0b7f7f6" translate="yes" xml:space="preserve">
          <source>PharData::setStub</source>
          <target state="translated">PharData::setStub</target>
        </trans-unit>
        <trans-unit id="c6acf1a8ffd3573895fc3950275e570065824617" translate="yes" xml:space="preserve">
          <source>PharData::setStub &amp;mdash; Dummy function (Phar::setStub is not valid for PharData)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9abcadd0ad6ccb3addb3dfd2da549732e3485224" translate="yes" xml:space="preserve">
          <source>PharData::setStub &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1131a89a830de724b872cb6ff0f50551e887360" translate="yes" xml:space="preserve">
          <source>PharException</source>
          <target state="translated">PharException</target>
        </trans-unit>
        <trans-unit id="02ba226b851dc7b0d47fa0e7f7604fce2ed9785d" translate="yes" xml:space="preserve">
          <source>PharException &amp;mdash; The PharException class provides a phar-specific exception class for try/catch blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7490c42df442b52a77506c45709001f84a3aec" translate="yes" xml:space="preserve">
          <source>PharException &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1ca9048f97ea40f688d23206714f4d5183235e5" translate="yes" xml:space="preserve">
          <source>PharFileInfo &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c2b9b5d3a07cbcfcc9b103e637bd5de9728151" translate="yes" xml:space="preserve">
          <source>PharFileInfo::__construct</source>
          <target state="translated">PharFileInfo::__construct</target>
        </trans-unit>
        <trans-unit id="cab231c8d75bef2bf534cf44971341399596c72b" translate="yes" xml:space="preserve">
          <source>PharFileInfo::__construct &amp;mdash; Construct a Phar entry object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa571040702a0d7f2b15d6fdb02e2b1b80f36ed2" translate="yes" xml:space="preserve">
          <source>PharFileInfo::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d350a3bec120f825e778383d3a4e02941aa3a4c6" translate="yes" xml:space="preserve">
          <source>PharFileInfo::chmod</source>
          <target state="translated">PharFileInfo::chmod</target>
        </trans-unit>
        <trans-unit id="93949123c6b169456a696e7e85a53e6f8855e04d" translate="yes" xml:space="preserve">
          <source>PharFileInfo::chmod &amp;mdash; Sets file-specific permission bits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab2392fdfd8abebf59beb48c84a885b01a4cf6f" translate="yes" xml:space="preserve">
          <source>PharFileInfo::chmod &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e12f5f79939f5866cb9897d33b5b9b72e92599a" translate="yes" xml:space="preserve">
          <source>PharFileInfo::compress</source>
          <target state="translated">PharFileInfo::compress</target>
        </trans-unit>
        <trans-unit id="64612530be29d2fafd850e192dfaaf89733d376d" translate="yes" xml:space="preserve">
          <source>PharFileInfo::compress &amp;mdash; Compresses the current Phar entry with either zlib or bzip2 compression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757771e9bccc0ba2039c369d19af61376120dcd8" translate="yes" xml:space="preserve">
          <source>PharFileInfo::compress &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69228e655d483027bca65d42be1feafac91b119" translate="yes" xml:space="preserve">
          <source>PharFileInfo::decompress</source>
          <target state="translated">PharFileInfo::decompress</target>
        </trans-unit>
        <trans-unit id="9e30c48f1ae236b9b06f45abe56d71e623208df2" translate="yes" xml:space="preserve">
          <source>PharFileInfo::decompress &amp;mdash; Decompresses the current Phar entry within the phar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b01939e806c44cd08f3d48e6c10a464d39d997" translate="yes" xml:space="preserve">
          <source>PharFileInfo::decompress &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7df337421fb6bfc9c564d135bcde8a78b93787" translate="yes" xml:space="preserve">
          <source>PharFileInfo::delMetadata</source>
          <target state="translated">PharFileInfo::delMetadata</target>
        </trans-unit>
        <trans-unit id="67c521035851fa2e93e57927a64c34d21c56afe0" translate="yes" xml:space="preserve">
          <source>PharFileInfo::delMetadata &amp;mdash; Deletes the metadata of the entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="004bf09d5303dbfefc102d6d06ddd4db4ab80bfd" translate="yes" xml:space="preserve">
          <source>PharFileInfo::delMetadata &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86603eb8955af4f0debc60dcddd5801687766f38" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getCRC32</source>
          <target state="translated">PharFileInfo::getCRC32</target>
        </trans-unit>
        <trans-unit id="21b0e750518e9de660ebc93839682ab65c5030fa" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getCRC32 &amp;mdash; Returns CRC32 code or throws an exception if CRC has not been verified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de264b71319d6a2ebd1e144c506fab09409ebc1" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getCRC32 &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ecfde9dfeee96fd31d4a71718c23de0b242aa4" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getCompressedSize</source>
          <target state="translated">PharFileInfo::getCompressedSize</target>
        </trans-unit>
        <trans-unit id="d334cf5b0ab46eda814de7f010082705897b0431" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getCompressedSize &amp;mdash; Returns the actual size of the file (with compression) inside the Phar archive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d0de59c7310217ee4e2934c2f9ee5586016504b" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getCompressedSize &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b94ec5cbbec358772aa2669f4c570e2c4cde55" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getContent</source>
          <target state="translated">PharFileInfo::getContent</target>
        </trans-unit>
        <trans-unit id="41e9d87af210d666795ea52ee829e1150a473782" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getContent &amp;mdash; Get the complete file contents of the entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c5364dd177b71110f1040ce467028dda197f17" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getContent &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba886b4d23aaf40c307dbbf1b52c85f03efcf62" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getMetadata</source>
          <target state="translated">PharFileInfo::getMetadata</target>
        </trans-unit>
        <trans-unit id="c0b53ca8f4096eb0f10f5358750f6f71444d2d7a" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getMetadata &amp;mdash; Returns file-specific meta-data saved with a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c7f917d3f9e17800d42dd93209ed15e9b32a226" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getMetadata &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b883c10492216ad48a7eda383ccf2285a5e14d4e" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getPharFlags</source>
          <target state="translated">PharFileInfo::getPharFlags</target>
        </trans-unit>
        <trans-unit id="319fc458cbc408fa95143dca8cddd13829e241c1" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getPharFlags &amp;mdash; Returns the Phar file entry flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c896264dd71489b1683f00eeb4cfc81c76dff63" translate="yes" xml:space="preserve">
          <source>PharFileInfo::getPharFlags &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f995bf066442f5b61308457e0d831eab8e67536" translate="yes" xml:space="preserve">
          <source>PharFileInfo::hasMetadata</source>
          <target state="translated">PharFileInfo::hasMetadata</target>
        </trans-unit>
        <trans-unit id="7c5661a7be555660e6ebcbe2af44641b06bcc655" translate="yes" xml:space="preserve">
          <source>PharFileInfo::hasMetadata &amp;mdash; Returns the metadata of the entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71f45b26f834a9411e774c3681944e5ce25b42c" translate="yes" xml:space="preserve">
          <source>PharFileInfo::hasMetadata &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d679151bb9817ece9ee8425511378d8ddefe3279" translate="yes" xml:space="preserve">
          <source>PharFileInfo::isCRCChecked</source>
          <target state="translated">PharFileInfo::isCRCChecked</target>
        </trans-unit>
        <trans-unit id="d9bb12ed0bd40d78db3862957446ca0a0fafcd42" translate="yes" xml:space="preserve">
          <source>PharFileInfo::isCRCChecked &amp;mdash; Returns whether file entry has had its CRC verified</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5575dbb47a1cfcde7cebf379801b450f1afdc363" translate="yes" xml:space="preserve">
          <source>PharFileInfo::isCRCChecked &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86f99b258fee224efa6675a9ed3f77ac41bd248f" translate="yes" xml:space="preserve">
          <source>PharFileInfo::isCompressed</source>
          <target state="translated">PharFileInfo::isCompressed</target>
        </trans-unit>
        <trans-unit id="fc9f0ac6b196b86abecb15b63671be6c5a16e4a0" translate="yes" xml:space="preserve">
          <source>PharFileInfo::isCompressed &amp;mdash; Returns whether the entry is compressed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dde6ebba02a558b6a125601dbe8577179d2a946" translate="yes" xml:space="preserve">
          <source>PharFileInfo::isCompressed &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eecbbe6fb87d7a6570e141b0760a50f485aa0f22" translate="yes" xml:space="preserve">
          <source>PharFileInfo::isCompressedBZIP2</source>
          <target state="translated">PharFileInfo::isCompressedBZIP2</target>
        </trans-unit>
        <trans-unit id="d507cb63a3723289e446c9c9b2bd7961f401d022" translate="yes" xml:space="preserve">
          <source>PharFileInfo::isCompressedBZIP2 &amp;mdash; Returns whether the entry is compressed using bzip2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c51ff5175d6f6832d9f0df561b5a510ecb4485e" translate="yes" xml:space="preserve">
          <source>PharFileInfo::isCompressedBZIP2 &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46298016d4d0487ed6a2d3a0d7c5577fdaddf9b" translate="yes" xml:space="preserve">
          <source>PharFileInfo::isCompressedGZ</source>
          <target state="translated">PharFileInfo::isCompressedGZ</target>
        </trans-unit>
        <trans-unit id="c13f4397e51bb07fa5fd4449e57fde9a89b8f92d" translate="yes" xml:space="preserve">
          <source>PharFileInfo::isCompressedGZ &amp;mdash; Returns whether the entry is compressed using gz</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e003daf4c853a738c7f17026481cee373edbfff8" translate="yes" xml:space="preserve">
          <source>PharFileInfo::isCompressedGZ &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f6404ec422e34359ddf9e6d34f53d95371be64" translate="yes" xml:space="preserve">
          <source>PharFileInfo::setCompressedBZIP2</source>
          <target state="translated">PharFileInfo::setCompressedBZIP2</target>
        </trans-unit>
        <trans-unit id="5231af936ddd4a62eeb2160300fd20705cbae252" translate="yes" xml:space="preserve">
          <source>PharFileInfo::setCompressedBZIP2 &amp;mdash; Compresses the current Phar entry within the phar using Bzip2 compression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeaf5c5d5e4413d58ae866ff937e9123c544b03f" translate="yes" xml:space="preserve">
          <source>PharFileInfo::setCompressedBZIP2 &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92079afdfc07f6634a2302094598a8ae68c95a64" translate="yes" xml:space="preserve">
          <source>PharFileInfo::setCompressedGZ</source>
          <target state="translated">PharFileInfo::setCompressedGZ</target>
        </trans-unit>
        <trans-unit id="f193f3c74f65f867d726e82873c52cdce69c7f7d" translate="yes" xml:space="preserve">
          <source>PharFileInfo::setCompressedGZ &amp;mdash; Compresses the current Phar entry within the phar using gz compression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dad7a760862d2805735f25ce559347516b1dc0c" translate="yes" xml:space="preserve">
          <source>PharFileInfo::setCompressedGZ &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a62954c1dd18170db467e9fe970cfb37e39ea2" translate="yes" xml:space="preserve">
          <source>PharFileInfo::setMetadata</source>
          <target state="translated">PharFileInfo::setMetadata</target>
        </trans-unit>
        <trans-unit id="d12be400574dc3197b26e7ec9899aa656acdb980" translate="yes" xml:space="preserve">
          <source>PharFileInfo::setMetadata &amp;mdash; Sets file-specific meta-data saved with a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945201f332246c6b986858d799048a5e14e876cc" translate="yes" xml:space="preserve">
          <source>PharFileInfo::setMetadata &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b65da86d1335cc35dae6a76b37d28909cff817f9" translate="yes" xml:space="preserve">
          <source>PharFileInfo::setUncompressed</source>
          <target state="translated">PharFileInfo::setUncompressed</target>
        </trans-unit>
        <trans-unit id="1234297547929e36ed285bec0d6c4f808ff66f18" translate="yes" xml:space="preserve">
          <source>PharFileInfo::setUncompressed &amp;mdash; Uncompresses the current Phar entry within the phar, if it is compressed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322b79aa936b120268e7a534299bf573af53bf84" translate="yes" xml:space="preserve">
          <source>PharFileInfo::setUncompressed &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73825fe83cf94d783ea15560ad63fe2138a10719" translate="yes" xml:space="preserve">
          <source>Phrase slop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd999f90534e7193ea1e9c5c034a487d047b8ce1" translate="yes" xml:space="preserve">
          <source>Picks one or more random entries out of an array, and returns the key (or keys) of the random entries. It uses a pseudo random number generator that is not suitable for cryptographic purposes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6082b55cba5db0b3c18e223680572206b01609" translate="yes" xml:space="preserve">
          <source>PingResponse (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cf126318c7b9ad84bacb57e57bc17b30af6d48a" translate="yes" xml:space="preserve">
          <source>PingResponse::__construct</source>
          <target state="translated">PingResponse::__construct</target>
        </trans-unit>
        <trans-unit id="e950a424d481bf128ae17c0e167f4c0760dbc843" translate="yes" xml:space="preserve">
          <source>PingResponse::__destruct</source>
          <target state="translated">PingResponse::__destruct</target>
        </trans-unit>
        <trans-unit id="ee81fba3fee4079043856ada2929c99e4728db70" translate="yes" xml:space="preserve">
          <source>PingResponse::getResponse</source>
          <target state="translated">PingResponse::getResponse</target>
        </trans-unit>
        <trans-unit id="30e80bb9f84d8d659166b2473aad22c28acd9ca5" translate="yes" xml:space="preserve">
          <source>Pinging an image from a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62560176151a814751c954a39a73f491224817c4" translate="yes" xml:space="preserve">
          <source>Pixelation support (&lt;strong&gt;&lt;code&gt;IMG_FILTER_PIXELATE&lt;/code&gt;&lt;/strong&gt;) was added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0137680d2e9a4fe84e324dba2924acc6f2a98645" translate="yes" xml:space="preserve">
          <source>Plain array of integer values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1b3355c0f09b9e2d68d91cf771fa79d1fce159" translate="yes" xml:space="preserve">
          <source>Please keep yaf.use_spl_autoload Off unless there is some library have their own autoload mechanism and impossible to rewrite it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14c52686940d03b5049a22a3810e7851815bb70" translate="yes" xml:space="preserve">
          <source>Please note that &lt;strong&gt;ftp_pasv()&lt;/strong&gt; can only be called after a successful login or otherwise it will fail.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c291676cb4323e5e4b7b4a88562d1a5a7b0c68bd" translate="yes" xml:space="preserve">
          <source>Please note that some of these operations may not be available on your system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb522c7ee214f52fec09a0c5902ba2e6a9c1e807" translate="yes" xml:space="preserve">
          <source>Please note that the null coalescing operator allows for simple nesting:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ccb69609a077c71b64e499a3c13fcd22aea1db" translate="yes" xml:space="preserve">
          <source>Please note that variable variables cannot be used with PHP's &lt;a href=&quot;language.variables.superglobals&quot;&gt;Superglobal arrays&lt;/a&gt; within functions or class methods. The variable &lt;em&gt;$this&lt;/em&gt; is also a special variable that cannot be referenced dynamically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e2f072f0d712a1bd93f6b297a67170028f31cb" translate="yes" xml:space="preserve">
          <source>Please note the callback methods of this class are designed to be called internally by PHP and are not meant to be called from user-space code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738d7cde0b31159341b24c6007844e61bc3a80b1" translate="yes" xml:space="preserve">
          <source>Please note the callback methods of this class are designed to be called internally by PHP and are not meant to be called from user-space code. The return values are equally processed internally by PHP. For more information on the session workflow, please refer &lt;a href=&quot;function.session-set-save-handler&quot;&gt;session_set_save_handler()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e84f50c4871f286868041e276cbe2c68273a930" translate="yes" xml:space="preserve">
          <source>Please note the fashion in which &lt;a href=&quot;directory.read&quot;&gt;Directory::read()&lt;/a&gt;'s return value is checked in the example below. We are explicitly testing whether the return value is identical to (equal to and of the same type as - see &lt;a href=&quot;language.operators.comparison&quot;&gt; Comparison Operators&lt;/a&gt; for more information) &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; since otherwise, any directory entry whose name evaluates to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; will stop the loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d8f4dbc5859545515f448119e7f3d45fb8fa22" translate="yes" xml:space="preserve">
          <source>Please note the fashion in which &lt;strong&gt;readdir()&lt;/strong&gt;'s return value is checked in the examples below. We are explicitly testing whether the return value is identical to (equal to and of the same type as--see &lt;a href=&quot;language.operators.comparison&quot;&gt;Comparison Operators&lt;/a&gt; for more information) &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; since otherwise, any directory entry whose name evaluates to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; will stop the loop (e.g. a directory named &quot;0&quot;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="081ace0e8cd24264ec0e03c7ec71765d1b9e42ce" translate="yes" xml:space="preserve">
          <source>Please see &lt;a href=&quot;http://www.maxmind.com/en/iso3166&quot;&gt;&amp;raquo; http://www.maxmind.com/en/iso3166&lt;/a&gt; for a complete list of possible return values, including special codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9849f362260b3c7cd9f77dd02458b297d46a99" translate="yes" xml:space="preserve">
          <source>Please see the &lt;a href=&quot;language.types.array&quot;&gt;Array&lt;/a&gt; section of the manual for a detailed explanation of how arrays are implemented and used in PHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6bad2be61f9c4c5f030582624b114f4ac44d59" translate="yes" xml:space="preserve">
          <source>Plugins allow for easy extensibility and customization of the framework.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b3323faba87e3c9a81f716b56a8349a80b58d8" translate="yes" xml:space="preserve">
          <source>Plugins are classes. The actual class definition will vary based on the component -- you may need to implement this interface, but the fact remains that the plugin is itself a class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79691d34c584e25d60b451fc3c667d59bb558c83" translate="yes" xml:space="preserve">
          <source>Point size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2c779e74738098684a5e7b0640b90722f12827" translate="yes" xml:space="preserve">
          <source>Poll connections. Available only with &lt;a href=&quot;https://secure.php.net/manual/en/book.mysqlnd.php&quot;&gt;mysqlnd&lt;/a&gt;. The method can be used as &lt;a href=&quot;language.oop5.static&quot;&gt;static&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c7a82fac2de8f8a1d69d8419175c102a03ece9" translate="yes" xml:space="preserve">
          <source>Polling stops, if poll took longer than &lt;code&gt;nseconds&lt;/code&gt; seconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c187aff931a5da9514b9da7a21a36f57a3a984" translate="yes" xml:space="preserve">
          <source>Pool &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bf1162c5dc1bfffef89d2058ba67e4a3117c8b" translate="yes" xml:space="preserve">
          <source>Pool (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594bc5773f7623aeb1324b3b6d100ded922fcff5" translate="yes" xml:space="preserve">
          <source>Pool::__construct</source>
          <target state="translated">Pool::__construct</target>
        </trans-unit>
        <trans-unit id="e7ac634774de703604b105053bbca044163a0621" translate="yes" xml:space="preserve">
          <source>Pool::__construct &amp;mdash; Creates a new Pool of Workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491d8438cd9c6e89a5d7b270cd5b997d1243aadf" translate="yes" xml:space="preserve">
          <source>Pool::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46f79901883faedadea9f0621862d9d607cf9e6" translate="yes" xml:space="preserve">
          <source>Pool::collect</source>
          <target state="translated">Pool::collect</target>
        </trans-unit>
        <trans-unit id="b67b751514e5ae2d108051eada4d7accf8e14f34" translate="yes" xml:space="preserve">
          <source>Pool::collect &amp;mdash; Collect references to completed tasks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a98ef92d764439a8e619d93f0178bb2152f3ad" translate="yes" xml:space="preserve">
          <source>Pool::collect &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ecfe185de1298698bf803cd0d41a526ce1c299" translate="yes" xml:space="preserve">
          <source>Pool::resize</source>
          <target state="translated">Pool::resize</target>
        </trans-unit>
        <trans-unit id="2df11f81a509569bb92efab4035855f4f155cb20" translate="yes" xml:space="preserve">
          <source>Pool::resize &amp;mdash; Resize the Pool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd476ef192f1aa11026a5a5feba21d9053ef0b79" translate="yes" xml:space="preserve">
          <source>Pool::resize &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37f1f1974d3e31962587d2b315c72c85a83d54a" translate="yes" xml:space="preserve">
          <source>Pool::shutdown</source>
          <target state="translated">Pool::shutdown</target>
        </trans-unit>
        <trans-unit id="7ce832beaaaeb83b94c21768373b61c0153ad29c" translate="yes" xml:space="preserve">
          <source>Pool::shutdown &amp;mdash; Shutdown all workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9e849107881c6f9104aaeae7eecfeedd4b2323" translate="yes" xml:space="preserve">
          <source>Pool::shutdown &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba1575e60a3bf296a505d9fe7b1821d6d10b0b82" translate="yes" xml:space="preserve">
          <source>Pool::submit</source>
          <target state="translated">Pool::submit</target>
        </trans-unit>
        <trans-unit id="afbe27be73f6bf33491144c3795287ea8fba4a5e" translate="yes" xml:space="preserve">
          <source>Pool::submit &amp;mdash; Submits an object for execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9286e63913f1f0df8025f9c833845263db7c0b5" translate="yes" xml:space="preserve">
          <source>Pool::submit &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f423ccebbce06561387d5893927d4920fcebab5f" translate="yes" xml:space="preserve">
          <source>Pool::submitTo</source>
          <target state="translated">Pool::submitTo</target>
        </trans-unit>
        <trans-unit id="21f6d5ac84676fba45a29f0c047550a13e981278" translate="yes" xml:space="preserve">
          <source>Pool::submitTo &amp;mdash; Submits a task to a specific worker for execution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36de4b20cc5dd13450bf655181455fe38c40a71" translate="yes" xml:space="preserve">
          <source>Pool::submitTo &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abf28ab8d975ef244b25dea743627821c6a8cf89" translate="yes" xml:space="preserve">
          <source>Pooling provides a higher level abstraction of the Worker functionality, including the management of references in the way required by pthreads.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23178d998ea64aac2d907750e727d489dd91bf22" translate="yes" xml:space="preserve">
          <source>Pops an item from the objects property table</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c186b5b456b0586d26e2fbe86e5788d3cec502cd" translate="yes" xml:space="preserve">
          <source>Populate a phar archive from an iterator. Two styles of iterators are supported, iterators that map the filename within the phar to the name of a file on disk, and iterators like DirectoryIterator that return SplFileInfo objects. For iterators that return SplFileInfo objects, the second parameter is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5724e96e6e81247ca14f049949e0d6dab8e19d" translate="yes" xml:space="preserve">
          <source>Populate a phar archive from directory contents. The optional second parameter is a regular expression (pcre) that is used to exclude files. Any filename that matches the regular expression will be included, all others will be excluded. For more fine-grained control, use &lt;a href=&quot;phar.buildfromiterator&quot;&gt;Phar::buildFromIterator()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73fdb7d8d93d01e256440fd0cd2f0171aa009316" translate="yes" xml:space="preserve">
          <source>Populate a tar or zip archive from an iterator. Two styles of iterators are supported, iterators that map the filename within the tar/zip to the name of a file on disk, and iterators like DirectoryIterator that return SplFileInfo objects. For iterators that return SplFileInfo objects, the second parameter is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ed0f41994411b73bb58b5046c0c2e9b3ad16fb0" translate="yes" xml:space="preserve">
          <source>Populate a tar/zip archive from directory contents. The optional second parameter is a regular expression (pcre) that is used to exclude files. Any filename that matches the regular expression will be included, all others will be excluded. For more fine-grained control, use &lt;a href=&quot;phardata.buildfromiterator&quot;&gt;PharData::buildFromIterator()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38da348defed220a6b2eaad9f83bf7c1ec5f51b9" translate="yes" xml:space="preserve">
          <source>Port number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="108df1b32d79ecd5d3bf033b51a6f7fb442d9c45" translate="yes" xml:space="preserve">
          <source>Port number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c91a61ee4ce1c978caf681256c8445efa155ee6" translate="yes" xml:space="preserve">
          <source>Port of the peer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bff37cc6a7d00a588c4fec86a9c1540e81dc7d4" translate="yes" xml:space="preserve">
          <source>Position at which to start the parsing in $value (zero-based). If no error occurs before $value is consumed, $parse_pos will contain -1 otherwise it will contain the position at which parsing ended (and the error occurred). This variable will contain the end position if the parse fails. If $parse_pos &amp;gt; strlen($value), the parse fails immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5905391aa2207285420807a79c86cca8fb8823a5" translate="yes" xml:space="preserve">
          <source>Position at which to start the parsing in $value (zero-based). If no error occurs before $value is consumed, $parse_pos will contain -1 otherwise it will contain the position at which parsing ended . If $parse_pos &amp;gt; strlen($value), the parse fails immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481064307247c1e8f8e74a3ee598156c4e2e11d0" translate="yes" xml:space="preserve">
          <source>Positions cursor on attribute based on its position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b3873748309d7cbd40baeeb10dcfc6af7abda6" translate="yes" xml:space="preserve">
          <source>Positions cursor on the named attribute in specified namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a922f2a893519771482c7e6a50017c1bed98b288" translate="yes" xml:space="preserve">
          <source>Positions cursor on the named attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbaf2144ecbbd3e9c26ced40875d000f3c063ff" translate="yes" xml:space="preserve">
          <source>Positions cursor on the next node skipping all subtrees.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9a0cddd77da16cd0f6839c928099f11e7e0d69" translate="yes" xml:space="preserve">
          <source>Positive prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec3615c7c5f6a7a50c95f0e83d0a1822500db078" translate="yes" xml:space="preserve">
          <source>Positive suffix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5ad31090f62c5e7ff775aa246169f9d85edcbd" translate="yes" xml:space="preserve">
          <source>Posix requires that assumptions must not be made about the format of the values, e.g. the assumption that a release may contain three digits or anything else returned by this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3e8401cddf12c4574662cd5b5cfad2cad50e1e" translate="yes" xml:space="preserve">
          <source>Possibility to export classes and arrays containing classes using the &lt;a href=&quot;language.oop5.magic#object.set-state&quot;&gt;__set_state()&lt;/a&gt; magic method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63555f42a046f68867e6063c2aea4540724c768d" translate="yes" xml:space="preserve">
          <source>Possible &lt;code&gt;fieldcode&lt;/code&gt; values are: &lt;strong&gt;&lt;code&gt;PGSQL_DIAG_SEVERITY&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_DIAG_SQLSTATE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_DIAG_MESSAGE_PRIMARY&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_DIAG_MESSAGE_DETAIL&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_DIAG_MESSAGE_HINT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_DIAG_STATEMENT_POSITION&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_DIAG_INTERNAL_POSITION&lt;/code&gt;&lt;/strong&gt; (PostgreSQL 8.0+ only), &lt;strong&gt;&lt;code&gt;PGSQL_DIAG_INTERNAL_QUERY&lt;/code&gt;&lt;/strong&gt; (PostgreSQL 8.0+ only), &lt;strong&gt;&lt;code&gt;PGSQL_DIAG_CONTEXT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_DIAG_SOURCE_FILE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_DIAG_SOURCE_LINE&lt;/code&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;code&gt;PGSQL_DIAG_SOURCE_FUNCTION&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1347504047af8c459b13a047a75e14cdf46b4c6" translate="yes" xml:space="preserve">
          <source>Possible &lt;code&gt;param_name&lt;/code&gt; values include &lt;em&gt;server_version&lt;/em&gt;, &lt;em&gt;server_encoding&lt;/em&gt;, &lt;em&gt;client_encoding&lt;/em&gt;, &lt;em&gt;is_superuser&lt;/em&gt;, &lt;em&gt;session_authorization&lt;/em&gt;, &lt;em&gt;DateStyle&lt;/em&gt;, &lt;em&gt;TimeZone&lt;/em&gt;, and &lt;em&gt;integer_datetimes&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d1adcbf29279dcc02c954751b4304bd2f7b76de" translate="yes" xml:space="preserve">
          <source>Possible modifiers in regex patterns &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a141f8fd20ef304715f7daec8c964492db3584" translate="yes" xml:space="preserve">
          <source>Possible return values are &lt;em&gt;gzip&lt;/em&gt;, &lt;em&gt;deflate&lt;/em&gt;, or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef74d1b8d275cd9ce40eac12b35d813abebec0a6" translate="yes" xml:space="preserve">
          <source>Possible return values are &lt;strong&gt;&lt;code&gt;PGSQL_EMPTY_QUERY&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_COMMAND_OK&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_TUPLES_OK&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_COPY_OUT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_COPY_IN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_BAD_RESPONSE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;PGSQL_NONFATAL_ERROR&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;PGSQL_FATAL_ERROR&lt;/code&gt;&lt;/strong&gt; if &lt;strong&gt;&lt;code&gt;PGSQL_STATUS_LONG&lt;/code&gt;&lt;/strong&gt; is specified. Otherwise, a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; containing the PostgreSQL command tag is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b119d042ef967fab36da45e41907c7dd9db124" translate="yes" xml:space="preserve">
          <source>Possible values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7280aa9b126e519bb5acdcab7417841a30bb930a" translate="yes" xml:space="preserve">
          <source>Possible values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e602843f399416c629b1ab27e4b114670c11d2" translate="yes" xml:space="preserve">
          <source>Possible values for &lt;code&gt;mode&lt;/code&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c724f578ebd4b2b8da6fba0d7028223ed7ea76" translate="yes" xml:space="preserve">
          <source>Possible values for &lt;em&gt;modtype&lt;/em&gt; include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf594f1f5368d2ea549482f019afa68849719cbc" translate="yes" xml:space="preserve">
          <source>Possible values for the returned string are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ef221e3193ecc713338eb88d02a0cab9694e2a" translate="yes" xml:space="preserve">
          <source>Possible values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7b2f0bb0e2d992e6c30d10e146d43ca53eab98" translate="yes" xml:space="preserve">
          <source>Possibles values of &lt;code&gt;type&lt;/code&gt; are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68836180b2452df9c7752568a4071862bb2aa335" translate="yes" xml:space="preserve">
          <source>Post-decrement</source>
          <target state="translated">Post-decrement</target>
        </trans-unit>
        <trans-unit id="dba3afaa7e3ccf2691afef5136eb2331ecad912a" translate="yes" xml:space="preserve">
          <source>Post-increment</source>
          <target state="translated">Post-increment</target>
        </trans-unit>
        <trans-unit id="00f05cd020079ec70846934c29a2ec50879d07d6" translate="yes" xml:space="preserve">
          <source>PostgreSQL 7.3 or lower servers do not report parameter settings, &lt;strong&gt;pg_parameter_status()&lt;/strong&gt; includes logic to obtain values for &lt;em&gt;server_version&lt;/em&gt; and &lt;em&gt;client_encoding&lt;/em&gt; anyway. Applications are encouraged to use &lt;strong&gt;pg_parameter_status()&lt;/strong&gt; rather than ad hoc code to determine these values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a4c4bd3a1bc14afaf7d940a4760a8b53f03aff" translate="yes" xml:space="preserve">
          <source>PostgreSQL 8.1 has a function &lt;em&gt;LASTVAL&lt;/em&gt; that returns the value of the most recently used sequence in the session. This avoids the need for naming the sequence, table or column altogether.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="974f4bddf085dcf7675773444d2253df0a62b869" translate="yes" xml:space="preserve">
          <source>PostgreSQL connection resource on success, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb3595f2fb85fc2626e9d6037c6ccc4cf4172d9" translate="yes" xml:space="preserve">
          <source>PostgreSQL database connection resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e92015bf8c19109c205033a32a70e4c86241100" translate="yes" xml:space="preserve">
          <source>PostgreSQL database connection resource. When &lt;code&gt;connection&lt;/code&gt; is not present, the default connection is used. The default connection is the last connection made by &lt;a href=&quot;function.pg-connect&quot;&gt;pg_connect()&lt;/a&gt; or &lt;a href=&quot;function.pg-pconnect&quot;&gt;pg_pconnect()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b8595338918f8e53f897b3ba9fa0a94c5733ee" translate="yes" xml:space="preserve">
          <source>PostgreSQL database connection resource. When &lt;code&gt;connection&lt;/code&gt; is not present, the default connection is used. The default connection is the last connection made by &lt;a href=&quot;function.pg-connect&quot;&gt;pg_connect()&lt;/a&gt; or &lt;a href=&quot;function.pg-pconnect&quot;&gt;pg_pconnect()&lt;/a&gt;. When there is no default connection, it raises &lt;em&gt;E_WARNING&lt;/em&gt; and returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef0b998f767cb5dd98e2a148ca5df5967d4d353" translate="yes" xml:space="preserve">
          <source>PostgreSQL large object (LOB) resource, returned by &lt;a href=&quot;function.pg-lo-open&quot;&gt;pg_lo_open()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b48f0f06a7098c0e64401fe34396a961a210b7e5" translate="yes" xml:space="preserve">
          <source>PostgreSQL query result resource, returned by &lt;a href=&quot;function.pg-query&quot;&gt;pg_query()&lt;/a&gt;, &lt;a href=&quot;function.pg-query-params&quot;&gt;pg_query_params()&lt;/a&gt; or &lt;a href=&quot;function.pg-execute&quot;&gt;pg_execute()&lt;/a&gt; (among others).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8d16115df3ee592d9bcecaa19e6faebcb80f35" translate="yes" xml:space="preserve">
          <source>PostgreSQL supports automatic character set conversion between server and client for certain character sets. &lt;strong&gt;pg_client_encoding()&lt;/strong&gt; returns the client encoding as a string. The returned string will be one of the standard PostgreSQL encoding identifiers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd8d4244669e003bcffdcc1a0835b8031977858a" translate="yes" xml:space="preserve">
          <source>PostgreSQL will automatically convert data in the backend database encoding into the frontend encoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf19319b4df0d844370b1ca898cb3171fa00a736" translate="yes" xml:space="preserve">
          <source>Pre-decrement</source>
          <target state="translated">Pre-decrement</target>
        </trans-unit>
        <trans-unit id="2622d6b55c869bdb8a6059863ab2859b84b011cc" translate="yes" xml:space="preserve">
          <source>Pre-increment</source>
          <target state="translated">Pre-increment</target>
        </trans-unit>
        <trans-unit id="ab86fb82a986460447b29bbb55ca5b9bf867bad6" translate="yes" xml:space="preserve">
          <source>Precedence</source>
          <target state="translated">Precedence</target>
        </trans-unit>
        <trans-unit id="3dd4db5ce7ea626f59e720f0c27096a22aa1ecd0" translate="yes" xml:space="preserve">
          <source>Precision</source>
          <target state="translated">Precision</target>
        </trans-unit>
        <trans-unit id="3293d92e7b82b6610891b0a8b83e72966da7c750" translate="yes" xml:space="preserve">
          <source>Predefined Constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f56be3bf503f6f22a5d9b6233370e997e36040c7" translate="yes" xml:space="preserve">
          <source>Predefined DateTime Constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42cf841142ce23e0324e53be5005b05f1de31224" translate="yes" xml:space="preserve">
          <source>Predefined Exceptions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d2217b61211dee8e736b3705dca23033ce7e28" translate="yes" xml:space="preserve">
          <source>Predefined Interfaces and Classes &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757547da311b7d949042c568071073474fb68889" translate="yes" xml:space="preserve">
          <source>Predefined Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c34dc3307cb1f833464b7f60ef72febc9ca6c3e" translate="yes" xml:space="preserve">
          <source>Predefined Variables &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3ff63e65387d26fd2a2f72187bd8cf17df774a" translate="yes" xml:space="preserve">
          <source>Predefined iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342ef3a737f44fe837f49d470f1d27b01ee8739a" translate="yes" xml:space="preserve">
          <source>Preferred date and time stamp based on locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e10d52cd4f3b0a8d29800372e3286c2d0d28a67" translate="yes" xml:space="preserve">
          <source>Preferred date representation based on locale, without the time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63691a781b31502f96b4017dbf96a4f443b91f8a" translate="yes" xml:space="preserve">
          <source>Preferred image size and border size of each thumbnail (e.g. 120x120+4+3&amp;gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e06b5490a90a3dea38e9da28c2e26787a3240455" translate="yes" xml:space="preserve">
          <source>Preferred time representation based on locale, without the date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c56b21cc547e0f5303c7f31341aa674e788e7bd8" translate="yes" xml:space="preserve">
          <source>Prefix all variable names with &lt;code&gt;prefix&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da734aa9e931975a8bb18f8ff81a021d4cb2c494" translate="yes" xml:space="preserve">
          <source>Prefix to prepend when translating to the local path of the file within the archive. This is applied after any remove operations defined by the &lt;em&gt;&quot;remove_path&quot;&lt;/em&gt; or &lt;em&gt;&quot;remove_all_path&quot;&lt;/em&gt; options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef57e333f318e7c54832d4362614089b8349d5c5" translate="yes" xml:space="preserve">
          <source>Prefix to remove from matching file paths before adding to the archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe6a8ebe0edcc44edbe66dc876d95d11c9778f66" translate="yes" xml:space="preserve">
          <source>Prepare a query for later binding of parameter placeholders and execution (via &lt;a href=&quot;function.ibase-execute&quot;&gt;ibase_execute()&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b34c59b3faa598e9bf2c8e30bf9746ec8379546" translate="yes" xml:space="preserve">
          <source>Prepared statements for use with &lt;strong&gt;pg_prepare()&lt;/strong&gt; can also be created by executing SQL &lt;em&gt;PREPARE&lt;/em&gt; statements. (But &lt;strong&gt;pg_prepare()&lt;/strong&gt; is more flexible since it does not require parameter types to be pre-specified.) Also, although there is no PHP function for deleting a prepared statement, the SQL &lt;em&gt;DEALLOCATE&lt;/em&gt; statement can be used for that purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f48b15a47542ad57e51aef7dcab9a72f0103c9e4" translate="yes" xml:space="preserve">
          <source>Prepares a phrase from an unescaped lucene string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b2254895b21de6319dbcbd39b7bf759f17151e" translate="yes" xml:space="preserve">
          <source>Prepares a query for execution. This function is ideal for preparing a query that will be executed multiple times with different parameter values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a833c7916d7cb0135df8ab9c459c4ce4cda70ce0" translate="yes" xml:space="preserve">
          <source>Prepares a statement for execution. The result identifier can be used later to execute the statement with &lt;a href=&quot;function.odbc-execute&quot;&gt;odbc_execute()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c65e6f535363b76cc433489bd34175ab8932c7" translate="yes" xml:space="preserve">
          <source>Prepares an SQL statement for execution and returns an &lt;a href=&quot;class.sqlite3stmt&quot;&gt;SQLite3Stmt&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5819aa3320ef070d70091b87423034177dfb03b7" translate="yes" xml:space="preserve">
          <source>Prepares an SQL statement to be executed by the &lt;a href=&quot;pdostatement.execute&quot;&gt;PDOStatement::execute()&lt;/a&gt; method. The SQL statement can contain zero or more named (:name) or question mark (?) parameter markers for which real values will be substituted when the statement is executed. You cannot use both named and question mark parameter markers within the same SQL statement; pick one or the other parameter style. Use these parameters to bind any user-input, do not include the user-input directly in the query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbdeb630b1f513d33e7ac074654dcdee2c2d7d60" translate="yes" xml:space="preserve">
          <source>Prepares and executes a query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8d879b8a7199997be8ef414ca30b215a49fec3c" translate="yes" xml:space="preserve">
          <source>Prepares next result set from a previous call to &lt;a href=&quot;mysqli.multi-query&quot;&gt;mysqli_multi_query()&lt;/a&gt; which can be retrieved by &lt;a href=&quot;mysqli.store-result&quot;&gt;mysqli_store_result()&lt;/a&gt; or &lt;a href=&quot;mysqli.use-result&quot;&gt;mysqli_use_result()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6424f2b75e5234096d44e5203b6dfa46950b0aac" translate="yes" xml:space="preserve">
          <source>Prepares the SQL query pointed to by the null-terminated string query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24735f8e9fc09293cdc0f31aa98e6a7209025563" translate="yes" xml:space="preserve">
          <source>Prepares the SQL query, and returns a statement handle to be used for further operations on the statement. The query must consist of a single SQL statement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02cd0282f2e01e4f8124b6a53f04007eefdc177" translate="yes" xml:space="preserve">
          <source>Prepares the event to be used in &lt;a href=&quot;event.add&quot;&gt;event_add()&lt;/a&gt;. The event is prepared to call the function specified by the &lt;code&gt;callback&lt;/code&gt; on the events specified in parameter &lt;code&gt;events&lt;/code&gt;, which is a set of the following flags: &lt;strong&gt;&lt;code&gt;EV_TIMEOUT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;EV_SIGNAL&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;EV_READ&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;EV_WRITE&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;EV_PERSIST&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7024b012898662477c004e6ce7cbbaecd6d23b7" translate="yes" xml:space="preserve">
          <source>Prepares the timer event to be used in &lt;a href=&quot;event.add&quot;&gt;event_add()&lt;/a&gt;. The event is prepared to call the function specified by the &lt;code&gt;callback&lt;/code&gt; when the event timeout elapses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5dbc39cafc8144599987cc3330a70b878eaa31" translate="yes" xml:space="preserve">
          <source>Prepend data to the front of the buffer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4d28e605d7bd614eb1fa823aa27225734935d9" translate="yes" xml:space="preserve">
          <source>Prepending host by &lt;em&gt;p:&lt;/em&gt; opens a persistent connection. &lt;a href=&quot;mysqli.change-user&quot;&gt;mysqli_change_user()&lt;/a&gt; is automatically called on connections opened from the connection pool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c51c25775a7478a8c2b5e8c364075168cd3ab52" translate="yes" xml:space="preserve">
          <source>Prepends &lt;code&gt;value&lt;/code&gt; at the beginning of the doubly linked list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1499f1bdbd8f5cae434615729a718611b8b8e5" translate="yes" xml:space="preserve">
          <source>Preserve the keys of members, by default false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a88ae7d1b23852282fc437c0cec8a234c2b99b" translate="yes" xml:space="preserve">
          <source>Prevent calls that modify an event buffer from succeeding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de4d2dd339f43d6517d151d289a52ea801c9175" translate="yes" xml:space="preserve">
          <source>Prevents priority inversion by limiting how many low-priority event callbacks can be invoked before checking for more high-priority events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b025c7d6f98c322bb88cd1c7df7e6c98701ee2" translate="yes" xml:space="preserve">
          <source>Prevents the rewind operation on the inner iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454e3d2a33523c1682bb0468635cd3071fb96f2b" translate="yes" xml:space="preserve">
          <source>Preview type. See &lt;a href=&quot;https://secure.php.net/manual/en/imagick.constants.php#imagick.constants.preview&quot;&gt;Preview type constants&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711b00d89ea3a0faa8df055fee0b69a18b300f26" translate="yes" xml:space="preserve">
          <source>Previous to PHP 5.3.0, the &lt;em&gt;JPEG Support&lt;/em&gt; attribute was named &lt;em&gt;JPG Support&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2eb02ccadfe14f78857330efed4882de00611f2" translate="yes" xml:space="preserve">
          <source>Previous versions issued &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; and returned &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; for empty arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352064e70f2670dda004b6a8b1c6745b3f4fd1dd" translate="yes" xml:space="preserve">
          <source>Previous versions used to destroy the given process &lt;code&gt;resource&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24727c2f00d7f3cb5ff4781153e9a5fd84fc6c6" translate="yes" xml:space="preserve">
          <source>Previously returned &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; on failure, instead of &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="781258b432e5788b1689548c2205f640a11bc9a1" translate="yes" xml:space="preserve">
          <source>Previously, an end user message was created as a sentence and handled as a string. This procedure created problems for localizers because the sentence structure, word order, number format and so on are very different from language to language. The language-neutral way to create messages keeps each part of the message separate and provides keys to the data. Using these keys, the MessageFormatter class can concatenate the parts of the message, localize them, and display a well-formed string to the end user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3853cd2f75374f1699791e20d4f481102dc23f57" translate="yes" xml:space="preserve">
          <source>Previously, if &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt; was passed then this function returned &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;. It returns the previous handler since PHP 5.5.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2cbf5aaa4b642c7443c9cd8b72687a60586cc4e" translate="yes" xml:space="preserve">
          <source>Previously, the empty string was returned if the configuration option didn't exist. now, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; is returned instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf05b3884c4f39a7d1e42c751dddf8870e3eaab" translate="yes" xml:space="preserve">
          <source>Primary body type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907dcd1e932848802e7a77cf4ed8ca497c7f9cf5" translate="yes" xml:space="preserve">
          <source>Prime and generator values ares passed as p and g into &lt;a href=&quot;function.openssl-pkey-new&quot;&gt;openssl_pkey_new()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462edc18547c63ce91469aaabaa92198de91280e" translate="yes" xml:space="preserve">
          <source>Prints all rows from a result identifier produced by &lt;a href=&quot;function.odbc-exec&quot;&gt;odbc_exec()&lt;/a&gt;. The result is printed in HTML table format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d7834edc8dc525013918ee414e5e7941a713f4c" translate="yes" xml:space="preserve">
          <source>Prints out or returns a syntax highlighted version of the code contained in &lt;code&gt;filename&lt;/code&gt; using the colors defined in the built-in syntax highlighter for PHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d431fc2feb7e4a90e44f40c0cb7d3b6c775892" translate="yes" xml:space="preserve">
          <source>Prints out the &quot;&lt;a href=&quot;function.phpinfo&quot;&gt;phpinfo()&lt;/a&gt;&quot; snippet for the given extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1e31cb2faaad12d8d42af7918f73f0ff510100" translate="yes" xml:space="preserve">
          <source>Prior to 5.2.2, a previously registered &lt;code&gt;extendedclass&lt;/code&gt; had to be unregistered before being able to register a new class extending the same &lt;code&gt;baseclass&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a365a35a829716eacd4111076acf294fedfb4c1f" translate="yes" xml:space="preserve">
          <source>Prior to ImageMagick 6.5.7-8 (1623), $x was positive when shifting to the left and negative when shifting to the right, and $y was positive when shifting an image up and negative when shifting an image down. Somewhere betwen ImageMagick 6.3.7 (1591) and ImageMagick 6.5.7-8 (1623), the axes of $x and $y were flipped, so that $x was negative when shifting to the left and positive when shifting to the right, and $y was negative when shifting an image up and positive when shifting an image down. Somewhere between ImageMagick 6.5.7-8 (1623) and ImageMagick 6.6.9-7 (1641), the axes of $x and $y were flipped back to pre-ImageMagick 6.5.7-8 (1623) functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e987ee28de8dbbb6cdcdbf2b5b25da3d3717df" translate="yes" xml:space="preserve">
          <source>Prior to PECL Solr 2.0 this method used to accept these arguments &quot;int $maxSegments, bool $waitFlush, bool $waitSearcher&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d944c6a9782ee15dd5a13264eca526b4da6898" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.1.0, not all platforms support negative timestamps, therefore your date range may be limited to no earlier than the Unix epoch. This means that e.g. dates prior to Jan 1, 1970 will not work on Windows, some Linux distributions, and a few other operating systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1382b66cee40bf5902e6a8ccd631cab6b22321da" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.1.0, this function returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5a7ad73121cee5061bdb305ec350d363d214c5" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.1.3 this function can be simulated with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8449980e24bd73053ce4b149bf40e1dbaf4669f4" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.2.0, this function could return undefined behaviour. Notably, the &lt;em&gt;&quot;tm_sec&quot;&lt;/em&gt;, &lt;em&gt;&quot;tm_min&quot;&lt;/em&gt; and &lt;em&gt;&quot;tm_hour&quot;&lt;/em&gt; entries would return undefined values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbf61783e7242c6f11c352be10e3634de1ed264" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.3, Constants may only be defined using the &lt;a href=&quot;function.define&quot;&gt;define()&lt;/a&gt; function, not by simple assignment;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187241c0362d9b687f185e9837f34f3372f9a810" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.3, exceptions thrown in the &lt;a href=&quot;function.autoload&quot;&gt;__autoload()&lt;/a&gt; function could not be caught in the &lt;a href=&quot;language.exceptions&quot;&gt;catch&lt;/a&gt; block and would result in a fatal error. From PHP 5.3 and upwards, this is possible provided that if a custom exception is thrown, then the custom exception class is available. The &lt;a href=&quot;function.autoload&quot;&gt;__autoload()&lt;/a&gt; function may be used recursively to autoload the custom exception class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767b02f7eecba7de678a2df19f1a6977882c8400" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.3.0 it was not possible to change the modification time of a directory with this function under Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d0b5f00f0b6bcabaf46b435035f8a6f59418cc1" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.3.0, &lt;em&gt;24:00&lt;/em&gt; was not a valid format and &lt;strong&gt;strtotime()&lt;/strong&gt; returned &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0397a50b624a3a9d7fad3acd1b4a507bb43353a" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.3.0, rawurlencode encoded tildes (&lt;em&gt;~&lt;/em&gt;) as per &lt;a href=&quot;http://www.faqs.org/rfcs/rfc1738&quot;&gt;&amp;raquo; RFC 1738&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92384bbbdcbf4d17cfe0fc6d9f3d67cb98efa60" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.3.0, relative time formats supplied to the &lt;code&gt;time&lt;/code&gt; argument of &lt;strong&gt;strtotime()&lt;/strong&gt; such as &lt;em&gt;this week&lt;/em&gt;, &lt;em&gt;previous week&lt;/em&gt;, &lt;em&gt;last week&lt;/em&gt;, and &lt;em&gt;next week&lt;/em&gt; were interpreted to mean a 7 day period relative to the current date/time, rather than a week period of &lt;em&gt;Monday&lt;/em&gt; through &lt;em&gt;Sunday&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edc8a68789545b26bb59cb32d587f4552e91960" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.3.9, a class could not implement two interfaces that specified a method with the same name, since it would cause ambiguity. More recent versions of PHP allow this as long as the duplicate methods have the same signature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84ddf66a7f031d91632ae5f93ed2c8c5086ad07" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.4.0 &lt;em&gt;only&lt;/em&gt;: Querying the host operating system (if supported and allowed by the OS). This uses an algorithm that has to &lt;em&gt;guess&lt;/em&gt; the timezone. This is by no means going to work correctly for every situation. A warning is shown when this stage is reached. Do not rely on it to be guessed correctly, and set &lt;a href=&quot;https://secure.php.net/manual/en/datetime.configuration.php#ini.date.timezone&quot;&gt;date.timezone&lt;/a&gt; to the correct timezone instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e3aa3753d394489538c432aa19eb8b47d8be27" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.4.0 &lt;em&gt;only&lt;/em&gt;: Reading the &lt;var&gt;&lt;var&gt;TZ&lt;/var&gt;&lt;/var&gt; environment variable (if non empty)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fd6a5b86a94f2dd3f534d57fd089b09363d888" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.4.0, the PHP directive &lt;a href=&quot;https://secure.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc&quot;&gt;magic_quotes_gpc&lt;/a&gt; was &lt;em&gt;on&lt;/em&gt; by default and it essentially ran &lt;strong&gt;addslashes()&lt;/strong&gt; on all GET, POST and COOKIE data. &lt;strong&gt;addslashes()&lt;/strong&gt; must not be used on strings that have already been escaped with &lt;a href=&quot;https://secure.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc&quot;&gt;magic_quotes_gpc&lt;/a&gt;, as the strings will be double escaped. &lt;a href=&quot;function.get-magic-quotes-gpc&quot;&gt;get_magic_quotes_gpc()&lt;/a&gt; can be used to check if &lt;a href=&quot;https://secure.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc&quot;&gt;magic_quotes_gpc&lt;/a&gt; is &lt;em&gt;on&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9900125209a95e3723f89fe8c4667bcccf932799" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.4.0, the value &lt;em&gt;1&lt;/em&gt; was a special case value that set the chunk size to 4096 bytes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5802238045d111d6408d2d3d8b40b4e079a1d5b" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.4.0, using &lt;strong&gt;&lt;code&gt;FORCE_DEFLATE&lt;/code&gt;&lt;/strong&gt; results in a standard zlib deflated string (inclusive zlib headers) after a gzip file header but without the trailing crc32 checksum.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6e6fea7c4e341a33dd5f3c49e15877949d7e27" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.5, &lt;strong&gt;empty()&lt;/strong&gt; only supports variables; anything else will result in a parse error. In other words, the following will not work: &lt;strong&gt;empty(trim($name))&lt;/strong&gt;. Instead, use &lt;strong&gt;trim($name) == false&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4fda4adbc647fc849894f61edd87141e035947" translate="yes" xml:space="preserve">
          <source>Prior to PHP 5.6.0, if there are boolean fields in &lt;code&gt;table_name&lt;/code&gt; don't use the constant &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; in &lt;code&gt;assoc_array&lt;/code&gt;. It will be converted to the string 'TRUE' which is not a valid entry for boolean fields in PostgreSQL. Use one of &quot;t&quot;, &quot;true&quot;, 1, &quot;y&quot;, &quot;yes&quot; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fbdd1b6c59b12326a66e264d2668edb9c9a9fcd" translate="yes" xml:space="preserve">
          <source>Prior to PHP 7, if an invalid digit was given in an octal &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; (i.e. 8 or 9), the rest of the number was ignored. Since PHP 7, a parse error is emitted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7e637d9b83e4087302ba087284cfbf69622a52" translate="yes" xml:space="preserve">
          <source>Prior to PHP 7.0, defining a property in a class with the same name as in a trait would throw an &lt;strong&gt;&lt;code&gt;E_STRICT&lt;/code&gt;&lt;/strong&gt; if the class definition was compatible (same visibility and initial value).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ab30b202a75bf848a02f4cb3d0e66269fc2f6e" translate="yes" xml:space="preserve">
          <source>Prior to PHP 7.0, shifting integers by values greater than or equal to the system long integer width, or by negative numbers, results in undefined behavior. In other words, if you're using PHP 5.x, don't shift more than 31 bits on a 32-bit system, and don't shift more than 63 bits on 64-bit system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d15c5acdbedcb413f56db6f757391b34f106c32" translate="yes" xml:space="preserve">
          <source>Prior to this release, if only the last &lt;code&gt;path&lt;/code&gt; component did not exist, &lt;strong&gt;realpath()&lt;/strong&gt; would not fail on *BSD systems. &lt;strong&gt;realpath()&lt;/strong&gt; now fails in this case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4f813cfe3bf5b50bd7f8d79f36854fbd820620" translate="yes" xml:space="preserve">
          <source>Prior to this release, if the &lt;code&gt;authns&lt;/code&gt; parameter was given, the &lt;code&gt;addtl&lt;/code&gt; parameter was also required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4e16093f85d401159585e0176c1f5399fd5cfb" translate="yes" xml:space="preserve">
          <source>Prior to this version, &lt;strong&gt;ip2long()&lt;/strong&gt; would sometimes return a valid number even if passed a value which was not an (IPv4) Internet Protocol dotted address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acd6bb0448262fcb7f773532cc2e6b2020f592bc" translate="yes" xml:space="preserve">
          <source>Prior to this version, &lt;strong&gt;realpath()&lt;/strong&gt; returned &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if &lt;code&gt;path&lt;/code&gt; is an empty string or &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f88e9776f462abfec00a529d9cb83c1a7c4d4e78" translate="yes" xml:space="preserve">
          <source>Prior to this version, on Windows &lt;strong&gt;ip2long()&lt;/strong&gt; would sometimes return a valid number even if passed a value which was not an (IPv4) Internet Protocol dotted address.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ced683425dd6e5050655772df0a5107ee3d4575" translate="yes" xml:space="preserve">
          <source>Prior versions treated arrays as the string &lt;em&gt;Array&lt;/em&gt;, thus returning a string length of &lt;em&gt;5&lt;/em&gt; and emitting an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; level error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a8a2fc2b737be56c308a4872c8323cf30ae68e" translate="yes" xml:space="preserve">
          <source>Priority class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9742987c43d0323766d64ebc139751231e71a9ca" translate="yes" xml:space="preserve">
          <source>Priority level. Cannot be less than zero and cannot exceed maximum priority level of the event base (see &lt;a href=&quot;function.event-base-priority-init&quot;&gt;event_base_priority_init()&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6eec8e9c6f8c94013467077d7f9b8fcb7039b7b" translate="yes" xml:space="preserve">
          <source>Priority value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78273f7b496680d2b7844a84074775d0eb89f655" translate="yes" xml:space="preserve">
          <source>PriorityQueue &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0601501444829080df40dd421b2d9c794a894262" translate="yes" xml:space="preserve">
          <source>PriorityQueue (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="210c21a8721556bf5f0d47e92d23bb2134fadceb" translate="yes" xml:space="preserve">
          <source>Private key component of PKCS#12 file. See &lt;a href=&quot;https://secure.php.net/manual/en/openssl.certparams.php&quot;&gt;Public/Private Key parameters&lt;/a&gt; for a list of valid values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718f6a637b2f97591dc46d7219929697f3831dfb" translate="yes" xml:space="preserve">
          <source>Private subtag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74ad72304fcac0b5a69a08a6f5ec35c07a46f71f" translate="yes" xml:space="preserve">
          <source>Private use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd0f676a38ba51125be381d275a69647629af1f" translate="yes" xml:space="preserve">
          <source>Probability based GC works somewhat but it has few problems. 1) Low traffic sites' session data may not be deleted within the preferred duration. 2) High traffic sites' GC may be too frequent GC. 3) GC is performed on the user's request and the user will experience a GC delay.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25befd843417eb4346321f2fa060869ba1fb535c" translate="yes" xml:space="preserve">
          <source>Procedural style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99951b7ec1d22c82929165c0243acdd7b01a1c20" translate="yes" xml:space="preserve">
          <source>Procedural style only: A &lt;a href=&quot;class.datetime&quot;&gt;DateTime&lt;/a&gt; object returned by &lt;a href=&quot;function.date-create&quot;&gt;date_create()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3f44c037b44c7747d36ea2c872b25a159c7332" translate="yes" xml:space="preserve">
          <source>Procedural style only: A &lt;a href=&quot;class.datetime&quot;&gt;DateTime&lt;/a&gt; object returned by &lt;a href=&quot;function.date-create&quot;&gt;date_create()&lt;/a&gt;. The function modifies this object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c786f6ae4dbb691e00b995efa256418e9065389a" translate="yes" xml:space="preserve">
          <source>Procedural style only: A &lt;a href=&quot;class.datetimezone&quot;&gt;DateTimeZone&lt;/a&gt; object returned by &lt;a href=&quot;function.timezone-open&quot;&gt;timezone_open()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98cc434c32f7e6323c9117b6799d261944151d25" translate="yes" xml:space="preserve">
          <source>Procedural style only: A link identifier returned by &lt;a href=&quot;function.mysqli-connect&quot;&gt;mysqli_connect()&lt;/a&gt; or &lt;a href=&quot;mysqli.init&quot;&gt;mysqli_init()&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13655e96237959dbec281602067a98545193433d" translate="yes" xml:space="preserve">
          <source>Procedural style only: A result set identifier returned by &lt;a href=&quot;mysqli.query&quot;&gt;mysqli_query()&lt;/a&gt;, &lt;a href=&quot;mysqli.store-result&quot;&gt;mysqli_store_result()&lt;/a&gt; or &lt;a href=&quot;mysqli.use-result&quot;&gt;mysqli_use_result()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfe024ca3f933b68d85f245cff265b5b3525c10f" translate="yes" xml:space="preserve">
          <source>Procedural style only: A statement identifier returned by &lt;a href=&quot;mysqli.stmt-init&quot;&gt;mysqli_stmt_init()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0549c9d9671f236ca8caf6fb1fce4d840b8d4a5" translate="yes" xml:space="preserve">
          <source>Procedural style:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f0234aa5fe80e82f6cbcb26602aa5c3afe286f" translate="yes" xml:space="preserve">
          <source>Procedural style: Returns a new xmlwriter &lt;a href=&quot;language.types.resource&quot;&gt;resource&lt;/a&gt; for later use with the xmlwriter functions on success, &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029f20d435f97ea4ecd927d10931ed6efb13950c" translate="yes" xml:space="preserve">
          <source>Process Control</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0c005a514222b085dc23bbb3e94433380671c69" translate="yes" xml:space="preserve">
          <source>Process IDs are not unique, thus they are a weak entropy source. We recommend against relying on pids in security-dependent contexts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1312779c52e781da867bc7505921eff17a122fcf" translate="yes" xml:space="preserve">
          <source>Process OOB (&lt;em&gt;out-of-band&lt;/em&gt;) data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f489132e19646766bad7156ad1eed9a771fa6a0" translate="yes" xml:space="preserve">
          <source>Process OOB (out-of-band) data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6589e0a4081dfa742e387f77e7b81003302cee04" translate="yes" xml:space="preserve">
          <source>Process out-of-band data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7e842610fa5b945baf914e17f5293417f81bbf" translate="yes" xml:space="preserve">
          <source>Processes a SOAP request, calls necessary functions, and sends a response back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e4b26895f8c656ef531f78afa37d006315e4165" translate="yes" xml:space="preserve">
          <source>Processes each of the handles in the stack. This method can be called whether or not a handle needs to read or write data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfcf9f67c5fefdc823e496c86102ba12c6dcc3a3" translate="yes" xml:space="preserve">
          <source>Processing Instruction node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20ba8612a4cc492343a44dc3062761b4c7238a03" translate="yes" xml:space="preserve">
          <source>Processing untrusted user input with &lt;strong&gt;yaml_parse()&lt;/strong&gt; is dangerous if the use of &lt;a href=&quot;function.unserialize&quot;&gt;unserialize()&lt;/a&gt; is enabled for nodes using the &lt;em&gt;!php/object&lt;/em&gt; tag. This behavior can be disabled by using the &lt;em&gt;yaml.decode_php&lt;/em&gt; ini setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="340f7e1d94a11f35634f91daa8e6e7b3a0b9e9dd" translate="yes" xml:space="preserve">
          <source>Processing untrusted user input with &lt;strong&gt;yaml_parse_file()&lt;/strong&gt; is dangerous if the use of &lt;a href=&quot;function.unserialize&quot;&gt;unserialize()&lt;/a&gt; is enabled for nodes using the &lt;em&gt;!php/object&lt;/em&gt; tag. This behavior can be disabled by using the &lt;em&gt;yaml.decode_php&lt;/em&gt; ini setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9d97a338ace836821a97c9a44939d639e332a73" translate="yes" xml:space="preserve">
          <source>Processing untrusted user input with &lt;strong&gt;yaml_parse_url()&lt;/strong&gt; is dangerous if the use of &lt;a href=&quot;function.unserialize&quot;&gt;unserialize()&lt;/a&gt; is enabled for nodes using the &lt;em&gt;!php/object&lt;/em&gt; tag. This behavior can be disabled by using the &lt;em&gt;yaml.decode_php&lt;/em&gt; ini setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6332c49e2cad2d44a5db305d06814f7ffea621eb" translate="yes" xml:space="preserve">
          <source>Produces an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; error message when the specified index does not exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15afdb0fb7aeda4259342efadf074c40330a6605" translate="yes" xml:space="preserve">
          <source>Produces an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; error message for each error found in the XML data and additionally throws an &lt;a href=&quot;class.exception&quot;&gt;Exception&lt;/a&gt; if the XML data could not be parsed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a6e3491d730b870c88a47f94f41f46c8bdeee8" translate="yes" xml:space="preserve">
          <source>Produces an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; error message for each error found in the XML data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b030408ffb9cd2fa06a8d7ecd2e597ec5b7498" translate="yes" xml:space="preserve">
          <source>Produces output according to &lt;code&gt;format&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="779cbdad75a49514231e0f22bdffd1b862cc7578" translate="yes" xml:space="preserve">
          <source>Product of &lt;var&gt;&lt;var&gt;$a&lt;/var&gt;&lt;/var&gt; and &lt;var&gt;&lt;var&gt;$b&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d6c5d8bed04da6a1005b58667c2d2aa960e18f" translate="yes" xml:space="preserve">
          <source>Program execution &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b3926716b4b63c4f6cf3e467650c389d054209" translate="yes" xml:space="preserve">
          <source>Programs store and operate on numbers using a locale-independent binary representation. When displaying or printing a number it is converted to a locale-specific string. For example, the number 12345.67 is &quot;12,345.67&quot; in the US, &quot;12 345,67&quot; in France and &quot;12.345,67&quot; in Germany.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbaa1c939f69322aafc67a1e1d5093495fd419d" translate="yes" xml:space="preserve">
          <source>Project identifier. This must be a one character string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="translated">Properties</target>
        </trans-unit>
        <trans-unit id="ff8da46841d2ff856b7b704e2dbd06ce300964b2" translate="yes" xml:space="preserve">
          <source>Properties &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462ff9377b7839e5ebd7ee884fb9fe81732358da" translate="yes" xml:space="preserve">
          <source>Properties and methods</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86604c07f31c0622c2c07d234a95bb30abb4dcb5" translate="yes" xml:space="preserve">
          <source>Properties of the object have their normal functionality when accessed as list (var_dump, foreach, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae33a7d0ecb82cae8f04aafab20bf90425b7b8c" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="translated">Property</target>
        </trans-unit>
        <trans-unit id="17a1e4fb598fbb819df2637dc6d072e550c207c1" translate="yes" xml:space="preserve">
          <source>Property (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc943eaff06e4537360ec3389bdf64cd8ae1676" translate="yes" xml:space="preserve">
          <source>Property Visibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="937b8b488185544c138499ede32110e07acd1242" translate="yes" xml:space="preserve">
          <source>Property name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfbf5108e2ceb613cd257e1fb533606229bd42ca" translate="yes" xml:space="preserve">
          <source>Property overloading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3edaa7f43f934ebc95bfd0c2af39dafda54fe8fc" translate="yes" xml:space="preserve">
          <source>Property overloading only works in object context. These magic methods will not be triggered in static context. Therefore these methods should not be declared &lt;a href=&quot;language.oop5.static&quot;&gt;static&lt;/a&gt;. As of PHP 5.3.0, a warning is issued if one of the magic overloading methods is declared &lt;em&gt;static&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d11493a54e6fbc00e82547b435f431e65b7d56" translate="yes" xml:space="preserve">
          <source>Property::__clone</source>
          <target state="translated">Property::__clone</target>
        </trans-unit>
        <trans-unit id="c6dc70c09fafc58fba4fdf836f28936ba0e5a33e" translate="yes" xml:space="preserve">
          <source>Property::__construct</source>
          <target state="translated">Property::__construct</target>
        </trans-unit>
        <trans-unit id="3602d4875be7085bae6969b1892d1cdfae028abb" translate="yes" xml:space="preserve">
          <source>Property::__toString</source>
          <target state="translated">Property::__toString</target>
        </trans-unit>
        <trans-unit id="f461cc09722a623d7f7c748232ffb1c38e712d57" translate="yes" xml:space="preserve">
          <source>Property::export</source>
          <target state="translated">Property::export</target>
        </trans-unit>
        <trans-unit id="6da37ba0dcf2e415e7e8b267fc6192bb86218208" translate="yes" xml:space="preserve">
          <source>Property::getDeclaringClass</source>
          <target state="translated">Property::getDeclaringClass</target>
        </trans-unit>
        <trans-unit id="3bd95fc8bbeb00a72f4a2049edf0068eb06e18f4" translate="yes" xml:space="preserve">
          <source>Property::getDocComment</source>
          <target state="translated">Property::getDocComment</target>
        </trans-unit>
        <trans-unit id="1858632011ba356b49fdc2102a538e6ce22a7962" translate="yes" xml:space="preserve">
          <source>Property::getModifiers</source>
          <target state="translated">Property::getModifiers</target>
        </trans-unit>
        <trans-unit id="1e4f3fae0c41350007aecd9ad0f6c99ec960ac35" translate="yes" xml:space="preserve">
          <source>Property::getName</source>
          <target state="translated">Property::getName</target>
        </trans-unit>
        <trans-unit id="b313cd40011ffd6aece7b52dd50e6fa6aca379d8" translate="yes" xml:space="preserve">
          <source>Property::getValue</source>
          <target state="translated">Property::getValue</target>
        </trans-unit>
        <trans-unit id="76b70cc1a06eeaf70d29cbfb1062ebd57fce1f48" translate="yes" xml:space="preserve">
          <source>Property::isDefault</source>
          <target state="translated">Property::isDefault</target>
        </trans-unit>
        <trans-unit id="c4710c45b1f1433042b9e4fae4c95c45c821ec28" translate="yes" xml:space="preserve">
          <source>Property::isPrivate</source>
          <target state="translated">Property::isPrivate</target>
        </trans-unit>
        <trans-unit id="d502dbc9106b168e2b364c45175ff2166f8b64ca" translate="yes" xml:space="preserve">
          <source>Property::isProtected</source>
          <target state="translated">Property::isProtected</target>
        </trans-unit>
        <trans-unit id="ae7bc06c9adbef2f69f5c96ebf145d8049a587d4" translate="yes" xml:space="preserve">
          <source>Property::isPublic</source>
          <target state="translated">Property::isPublic</target>
        </trans-unit>
        <trans-unit id="490a22498268cdf6c67cf1d30b9de9b9c4066125" translate="yes" xml:space="preserve">
          <source>Property::isStatic</source>
          <target state="translated">Property::isStatic</target>
        </trans-unit>
        <trans-unit id="a60a67fb0a7a93dc31ebaef93e61ae260d76814b" translate="yes" xml:space="preserve">
          <source>Property::setAccessible</source>
          <target state="translated">Property::setAccessible</target>
        </trans-unit>
        <trans-unit id="bc8f8d2c70135abb040bcb6ad52fa0fab8094e84" translate="yes" xml:space="preserve">
          <source>Property::setValue</source>
          <target state="translated">Property::setValue</target>
        </trans-unit>
        <trans-unit id="5c0c8d78301081a9fe22695fffe4f726d4ea87b3" translate="yes" xml:space="preserve">
          <source>Prototype</source>
          <target state="translated">Prototype</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
