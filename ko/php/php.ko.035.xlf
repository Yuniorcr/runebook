<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="ec2977661b23903a7a206d090c06d26a4299a07c" translate="yes" xml:space="preserve">
          <source>InputDocument::sort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e83a977bc3c847c1ddda72caeb70b59d558216c" translate="yes" xml:space="preserve">
          <source>InputDocument::toArray</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e113892938fbaef59fede65aad6a5118e7c137f4" translate="yes" xml:space="preserve">
          <source>Insert &lt;code&gt;value&lt;/code&gt; in the heap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d05a3e913792d547ae34582c6d24e78f396ab6e" translate="yes" xml:space="preserve">
          <source>Insert &lt;code&gt;value&lt;/code&gt; with the priority &lt;code&gt;priority&lt;/code&gt; in the queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9871d4fee430585f6d1f9189b5fae15572fdf3e" translate="yes" xml:space="preserve">
          <source>Insert the value &lt;code&gt;newval&lt;/code&gt; at the specified &lt;code&gt;index&lt;/code&gt;, shuffling the previous value at that index (and all subsequent values) up through the list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae2116f2bfef8010f83353aa2aec0539162b3ef" translate="yes" xml:space="preserve">
          <source>Insertion order is preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a79b896dc0ae4d06523f2e930d89de3ae06b6d" translate="yes" xml:space="preserve">
          <source>Inserts string &lt;code&gt;data&lt;/code&gt; at position &lt;code&gt;offset&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223924ec45ea9d3b9558b53944e4ba9260e8c5e7" translate="yes" xml:space="preserve">
          <source>Inserts values into the deque at a given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb3056a4dc64ff6207a3ede82c00c58ce36b7a5" translate="yes" xml:space="preserve">
          <source>Inserts values into the sequence at a given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="893258cd46ead29568857f2396147d97eccd29d5" translate="yes" xml:space="preserve">
          <source>Inserts values into the vector at a given index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873af15bd68c477178748ca072cfddf8b2be43af" translate="yes" xml:space="preserve">
          <source>Inside a character class, or if the decimal number is greater than 9 and there have not been that many capturing subpatterns, PCRE re-reads up to three octal digits following the backslash, and generates a single byte from the least significant 8 bits of the value. Any subsequent digits stand for themselves. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef543406bcb11bdb5188e18356d23158e3c94e42" translate="yes" xml:space="preserve">
          <source>Inside a namespace, when PHP encounters an unqualified Name in a class name, function or constant context, it resolves these with different priorities. Class names always resolve to the current namespace name. Thus to access internal or non-namespaced user classes, one must refer to them with their fully qualified Name as in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4728a7c7e98e2d4b43c588f74adbe14902b7a39" translate="yes" xml:space="preserve">
          <source>Inside a single-quoted string, the backslash escape sequence is much safer to use, but it is still recommended practice to escape backslashes in all strings as a best practice.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0199cc6509fbf45f90ad13184e91cea2ec163dc2" translate="yes" xml:space="preserve">
          <source>Inside the stub of an archive, &lt;strong&gt;Phar::running()&lt;/strong&gt; returns &lt;em&gt;&quot;&quot;&lt;/em&gt;. Simply use &lt;strong&gt;&lt;code&gt;__FILE__&lt;/code&gt;&lt;/strong&gt; to access the current running phar inside a stub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5433cc9b2346a8859c8e011f1fa9264e5d22491c" translate="yes" xml:space="preserve">
          <source>Instance a &lt;a href=&quot;class.yaf-application&quot;&gt;Yaf_Application&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a534eec5001102a5722c5bcd511278ff47d60c" translate="yes" xml:space="preserve">
          <source>Instance of &lt;a href=&quot;class.evloop&quot;&gt;EvLoop&lt;/a&gt; . The loop to embed, this loop must be embeddable(see &lt;a href=&quot;ev.embeddablebackends&quot;&gt;Ev::embeddableBackends()&lt;/a&gt; ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4c133f66a0e267b64eeae5f7bba34ddb4c2d68" translate="yes" xml:space="preserve">
          <source>Instances of &lt;strong&gt;Directory&lt;/strong&gt; are created by calling the &lt;a href=&quot;function.dir&quot;&gt;dir()&lt;/a&gt; function, not by the &lt;a href=&quot;language.oop5.basic#language.oop5.basic.new&quot;&gt;new&lt;/a&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b3944c8d6ec2bae08b899614d3be0e02ff0cc8d" translate="yes" xml:space="preserve">
          <source>Instantiates an SQLite3 object and opens a connection to an SQLite 3 database. If the build includes encryption, then it will attempt to use the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0d068333b10b329c7671cb9d318acab100b263" translate="yes" xml:space="preserve">
          <source>Instantiating the &lt;strong&gt;Runkit_Sandbox&lt;/strong&gt; class creates a new thread with its own scope and program stack. Using a set of options passed to the constructor, this environment may be restricted to a subset of what the primary interpreter can do and provide a safer environment for executing user supplied code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca7c3bf55ccebc503eb5284e03f41671693ee1b1" translate="yes" xml:space="preserve">
          <source>Instantiating the &lt;strong&gt;Runkit_Sandbox_Parent&lt;/strong&gt; class from within a sandbox environment created from the &lt;strong&gt;Runkit_Sandbox&lt;/strong&gt; class provides some (controlled) means for a sandbox child to access its parent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a6b2d46ae1a8c851f91e16672cff139964d158" translate="yes" xml:space="preserve">
          <source>Instantly updates given attribute values in given documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0f84c4f2fd81fbe1fb275e00856dad292af103" translate="yes" xml:space="preserve">
          <source>Instead of casting a variable to a &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;, it is also possible to enclose the variable in double quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a32881815b9a9f4652c5a9a1ed01638c06d8d3" translate="yes" xml:space="preserve">
          <source>Instead of fetching the results explicitly, you can specify a &lt;a href=&quot;https://secure.php.net/manual/en/memcached.callbacks.php&quot;&gt;result callback&lt;/a&gt; via &lt;code&gt;value_cb&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d145f828155aeebfc32c568bdc4b09c675a127dd" translate="yes" xml:space="preserve">
          <source>Instead of using the large object interface (which has no access controls and is cumbersome to use), try PostgreSQL's &lt;var&gt;&lt;var&gt;bytea&lt;/var&gt;&lt;/var&gt; column type and &lt;a href=&quot;function.pg-escape-bytea&quot;&gt;pg_escape_bytea()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08b394c637c9807c2e2bd4827ac2442791ffcfb" translate="yes" xml:space="preserve">
          <source>Instead of using this function to set the default timezone in your script, you can also use the INI setting &lt;a href=&quot;https://secure.php.net/manual/en/datetime.configuration.php#ini.date.timezone&quot;&gt;date.timezone&lt;/a&gt; to set the default timezone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c89e67b0c1052b6d1de852d588a14fa1e27ec0" translate="yes" xml:space="preserve">
          <source>Instruction separation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe4d827aff26c973bcbe334c048e1e2da33c449" translate="yes" xml:space="preserve">
          <source>Instruction separation &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c986a6e407a960b179c13044f21755d4443c16ef" translate="yes" xml:space="preserve">
          <source>Instructs Solr what kinds of Request parameters should be included in the response for debugging purposes, legal values include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9355841e0d766e48213eedfdad9213424bc39f" translate="yes" xml:space="preserve">
          <source>Integer digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a26a4e37ae1b89c4b86a6d96e9ccef63b9ca764" translate="yes" xml:space="preserve">
          <source>Integer overflow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724b5422dc05c791b8cf0befd732972c0409722e" translate="yes" xml:space="preserve">
          <source>Integers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a01ff6dda0f002454574989f06b3200694170b2" translate="yes" xml:space="preserve">
          <source>Integers &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ae88e2651c2b40ad11f84d83632ef7c9512699" translate="yes" xml:space="preserve">
          <source>Interface for customized serializing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9dc84c5e84edf22774e36509a86e82a2c8084c" translate="yes" xml:space="preserve">
          <source>Interface for external iterators or objects that can be iterated themselves internally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3b2521691cdafa9276603c7721b10d40de3bb9" translate="yes" xml:space="preserve">
          <source>Interface synopsis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63801e4d9fcae423645a2251619bca3edf7b5e22" translate="yes" xml:space="preserve">
          <source>Interface to create an external Iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e9f22a6ecbb1f4a1452ad842556691fbf9db7cc" translate="yes" xml:space="preserve">
          <source>Interface to detect if a class is traversable using &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08607177807862aea4bcd2f0465be2422ab74e3f" translate="yes" xml:space="preserve">
          <source>Interface to provide accessing objects as arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbb3dd1ef9fa33d7e1af457a9a5ac5cce2c8cbd" translate="yes" xml:space="preserve">
          <source>Interfaces &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c593d8110849a5ca4dd4f2003062c9ef2b059b" translate="yes" xml:space="preserve">
          <source>Interfaces are defined in the same way as a class, but with the &lt;em&gt;interface&lt;/em&gt; keyword replacing the &lt;em&gt;class&lt;/em&gt; keyword and without any of the methods having their contents defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c079d54cc65f9025f371ee0a38ec18209b261e" translate="yes" xml:space="preserve">
          <source>Interfaces can be extended like classes using the &lt;a href=&quot;language.oop5.inheritance&quot;&gt;extends&lt;/a&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b449be3ab4599b172049e2cab6991c6edba600" translate="yes" xml:space="preserve">
          <source>Internal (built-in) classes that implement this interface can be used in a &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; construct and do not need to implement &lt;a href=&quot;class.iteratoraggregate&quot;&gt;IteratorAggregate&lt;/a&gt; or &lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df638ba72b8af2f13ee6de55bc152dcedccc2df" translate="yes" xml:space="preserve">
          <source>Internal (built-in) functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2947d5134cffaeea23bc0c9d4b4fa13984c265" translate="yes" xml:space="preserve">
          <source>Internal (built-in) functions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="744d05ab3b3f358865414f0b3313dea385953e79" translate="yes" xml:space="preserve">
          <source>Internal PHP functions mainly use &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;Error reporting&lt;/a&gt;, only modern &lt;a href=&quot;https://secure.php.net/manual/en/language.oop5.php&quot;&gt;Object oriented&lt;/a&gt; extensions use exceptions. However, errors can be simply translated to exceptions with &lt;a href=&quot;class.errorexception&quot;&gt;ErrorException&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b309ae8754fd3dff4cb79a9feacb320c213ad709" translate="yes" xml:space="preserve">
          <source>Internal character set number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2b24e714cde229360426bfcc9e59d91ab81bee" translate="yes" xml:space="preserve">
          <source>Internal option setting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b51398948341c5f4f7ebaac2c7ff8610a7c87d24" translate="yes" xml:space="preserve">
          <source>Internal option setting &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7e817dd01b4e3de3693e00cf951fcb3af77e2ad" translate="yes" xml:space="preserve">
          <source>Internally, PHP strings are byte arrays. As a result, accessing or modifying a string using array brackets is not multi-byte safe, and should only be done with strings that are in a single-byte encoding such as ISO-8859-1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7cfdd8d82d74161151859400d46b549373d7087" translate="yes" xml:space="preserve">
          <source>Internally, sequential integer keys will be paired with the yielded values, just as with a non-associative array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0bb5a5a2a931c945eca5f810de5b9000fcc3e8" translate="yes" xml:space="preserve">
          <source>Internally, this function calls the &lt;em&gt;strptime()&lt;/em&gt; function provided by the system's C library. This function can exhibit noticeably different behaviour across different operating systems. The use of &lt;a href=&quot;function.date-parse-from-format&quot;&gt;date_parse_from_format()&lt;/a&gt;, which does not suffer from these issues, is recommended on PHP 5.3.0 and later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7515f35461694a22193e1e3756ec8c5d2a3a84b4" translate="yes" xml:space="preserve">
          <source>International currency symbol (i.e. USD)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0acc2a482d5d44565ff4ebc0b9139b2dc39c506b" translate="yes" xml:space="preserve">
          <source>International currency symbol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91487ed960361b069323e56dc1e240f4c78e38ea" translate="yes" xml:space="preserve">
          <source>International fractional digits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133413ab95bd6d007c2534d3d13570f9a29fc186" translate="yes" xml:space="preserve">
          <source>International fractional digits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b755f7b857b999860755840e5f0964f6b120c4d" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c74a5e69da3bf9bbbe97e135672cee9c5e62301" translate="yes" xml:space="preserve">
          <source>Interprets the binary value of the first byte of &lt;code&gt;string&lt;/code&gt; as an unsigned integer between 0 and 255.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66048458298401858daf13f7edb707facce07e08" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5322dd1918a1094af185c9fa70ca012695ba228" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8884b8b0c05a004d1811b5f0d5dfde0b815c51de" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959f0c901d479cc8d12bb38682932b52cf631fbf" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::__construct &amp;mdash; Private constructor for disallowing instantiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca03bb6983f6ac5d22d58b55777c7a38b672801d" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1295b765950b8c0875f754b4140c3bcc8d4ecf54" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createCharacterInstance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6934a7acb0f82cb8b3e8637783f2ab4da1073c99" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createCharacterInstance &amp;mdash;  Create break iterator for boundaries of combining character sequences</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f638dce6de6f44ccee9a0f726a52be62f67d2bb" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createCharacterInstance &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ddb0741e42d8e9089780a35c66b1e7de9507d2" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createCodePointInstance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558e7e9fe5463456449505d31f5e3753eaf54021" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createCodePointInstance &amp;mdash; Create break iterator for boundaries of code points</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfde4935638a1fdcdc643dbcf5fbecf1f2d8080" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createCodePointInstance &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef6d9837a7750b098f8369349de49a929e805d6" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createLineInstance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808d4058d99245a4747c16837df9aca83f33355c" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createLineInstance &amp;mdash;  Create break iterator for logically possible line breaks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fcf6254e7ec5cbb71397701ebb4822aacdfa1c" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createLineInstance &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faa85604cd31876f3d34981fd9a3fc871c01f2b3" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createSentenceInstance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7fd1983c5d459bc28db3ce75c647a4e340dc263" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createSentenceInstance &amp;mdash; Create break iterator for sentence breaks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1370cdb3ee1d036214123ff38d524ec722b3d93d" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createSentenceInstance &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f928ed3eeced13c84c2363e07367a950ec0c3a" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createTitleInstance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae89b45813a4f31bbdaab094182632481adc8412" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createTitleInstance &amp;mdash; Create break iterator for title-casing breaks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79941e5d79b617d1da8cc3f73be56e8c7f90d7f" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createTitleInstance &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41b792ccf1b1b168971f82bad2e80ddb125a3bac" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createWordInstance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33914d449e20dd586690b4eb7f406b1faaa9e042" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createWordInstance &amp;mdash; Create break iterator for word breaks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82fd841e7ffcf96072d0446b8fd43e6f6ec3b033" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::createWordInstance &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc8b478d394ab4fe08919eef5fc56330bfd6593" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::current</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c579851514a761981c1f33b3ef5e5103ef0a4fe8" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::current &amp;mdash; Get index of current position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4590505f56a99990fdc3b8f35a6e462260edcf" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::current &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93908401fde4be20bca93f2bbecd2af22be28a0a" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860cd2255ec5f6039836ac961be8ecfb8ddc6a21" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::first &amp;mdash; Set position to the first character in the text</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a972f803b7bdcd55767e72ffa40d05429576d4c6" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::first &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa8ebfbd55a1f03914f176197952c7057c26fa5" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58858a90886c61cb31da6976431670f87818eceb" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::following &amp;mdash;  Advance the iterator to the first boundary following specified offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332c205842eb156413b8b1d92f6eb3a5563ad3a6" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::following &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7e9c19179baf334f6f4c90f4be8bba34e5b9ebe" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getErrorCode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c7b0c9a4e1c176dca31929672817b6ddbe6309" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getErrorCode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3c1f14bbad5c6464bcd0b20cfcd4f5e7a5b906" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getErrorCode -- intl_get_error_code &amp;mdash; Get last error code on the object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d0aab1ed6eedfdad06b11b7c804c2e6f5773ea" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getErrorMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d2cbc91904166ad6709b4d65cb0a28ca158e9eb" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getErrorMessage &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74bb581cbc567004b4bba8d026cea1dbfa12fe9" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getErrorMessage -- intl_get_error_message &amp;mdash; Get last error message on the object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d48828299273d9125a2d06949e2a58491596450" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getLocale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71bec83bb22494ab30e4fe8e12fd98f342359be9" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getLocale &amp;mdash; Get the locale associated with the object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d45798c8a1706ecf553e107366de18c65212258" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getLocale &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f306c7f8f5ac685f588de17293285dbcb36a33" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getPartsIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dae657ddc79ac6d511b52412bfc701e35b2b7fa" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getPartsIterator &amp;mdash; Create iterator for navigating fragments between boundaries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2302344c0a1b173ba258e481d9e32cf9a14b80ef" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getPartsIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40df7bc44f983f3d9a03572b037094a5e6185004" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getText</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddc619f8c774546b19a0cc520e1a2644ddabd37a" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getText &amp;mdash; Get the text being scanned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ff0ba9a32a04e036f737c69ffc9a0cc9fff151" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::getText &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a45dcf2e597ef464436cd6be2bdf2bff81653c4" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::isBoundary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b06785edac9c0229728da7f5a0ce454994c58b2a" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::isBoundary &amp;mdash; Tell whether an offset is a boundaryʼs offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8356fcd299b8ecfd1a1b41a72a74371198865f" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::isBoundary &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e97dfb9b84dda04f70d393c8ce32cdfb6811ca47" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d53f28be913a5f3ee4b0cc5c2dcb66d3fd58493f" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::last &amp;mdash; Set the iterator position to index beyond the last character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7659cf5180fcc919dc2fe0fdf8e5c9a1e163b5" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::last &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3e3e99096d305d1b9bd07f519abf13ac4ff042" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::next</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84db128eba7138b461ecae3f35e00f2add56c4ef" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::next &amp;mdash; Advance the iterator the next boundary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ae8cc008a755b0715756c9f387216f6cc4df37" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::next &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c76a13f5e0621bd829fcb4400218c916d27fce1a" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::preceding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="388ef902c2b3325a9e204e7614ce0651070847f3" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::preceding &amp;mdash; Set the iterator position to the first boundary before an offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="993f921a1f77d5ef3cb442315060bb1d153f440e" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::preceding &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d714fc095e7ff4af0e57b00ed02a99d465820e" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::previous</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c830f3d3427e577077e89486c3fd65cde568a5b" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::previous &amp;mdash; Set the iterator position to the boundary immediately before the current</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5feda173ff32020ba9885f6ffcf3eb093c14a3fa" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::previous &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd706663605f4171e1a03edfb80330e842ad480" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::setText</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bd3f0d14332f044d726d9d23eb799b5f0b188f9" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::setText &amp;mdash; Set the text being scanned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f36edab27a4e72cf304b04b26228265429f41e86" translate="yes" xml:space="preserve">
          <source>IntlBreakIterator::setText &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f17cb137a41890a6c898d1fc22a280311a4c58" translate="yes" xml:space="preserve">
          <source>IntlCalendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f476b737817881464a5f6e16a637233df936143" translate="yes" xml:space="preserve">
          <source>IntlCalendar &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4cbb5bfd286ba0a16ef8144b18e99e1578be16e" translate="yes" xml:space="preserve">
          <source>IntlCalendar (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44345e67382f542d166e5d6da2ce40a2ea8ee79b" translate="yes" xml:space="preserve">
          <source>IntlCalendar::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747fdea00844e4d8b4e1630c4a34f1dc5988de45" translate="yes" xml:space="preserve">
          <source>IntlCalendar::__construct &amp;mdash; Private constructor for disallowing instantiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee088408aca2ee6ce6d580cb239f37c88bc08e99" translate="yes" xml:space="preserve">
          <source>IntlCalendar::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec53d5e8aa1cc403f608f9249c41f449afe0f60" translate="yes" xml:space="preserve">
          <source>IntlCalendar::add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3a2e26de787d5e5ffd597e92240cadeffe49e3" translate="yes" xml:space="preserve">
          <source>IntlCalendar::add &amp;mdash; Add a (signed) amount of time to a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="365e857f85a1eb0a1aa7644553891bde27dd4720" translate="yes" xml:space="preserve">
          <source>IntlCalendar::add &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0369bb54f1393f50021a0da071c4fec3ebddef0" translate="yes" xml:space="preserve">
          <source>IntlCalendar::after</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b30dd6db0c20bbdaccef2b90aa434ed8e8142a" translate="yes" xml:space="preserve">
          <source>IntlCalendar::after &amp;mdash; Whether this objectʼs time is after that of the passed object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f5d83990cfda42e04f4868350e4224770463f31" translate="yes" xml:space="preserve">
          <source>IntlCalendar::after &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c259e2cd3686265b59a43a9abf9c2f3cba7550" translate="yes" xml:space="preserve">
          <source>IntlCalendar::before</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a951612acc991f4542a663b08593a8d55f5a49a3" translate="yes" xml:space="preserve">
          <source>IntlCalendar::before &amp;mdash; Whether this objectʼs time is before that of the passed object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f73d22d9afb67c871fe8604fea85dd21627bfb" translate="yes" xml:space="preserve">
          <source>IntlCalendar::before &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573a8cde917c2352008855b66a3c01827b8a7bf0" translate="yes" xml:space="preserve">
          <source>IntlCalendar::clear</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad6927bc655a18f396952ca53d5253adee309d9" translate="yes" xml:space="preserve">
          <source>IntlCalendar::clear &amp;mdash; Clear a field or all fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03bc3dfb16f05eefb04e5e953314f60348134b4c" translate="yes" xml:space="preserve">
          <source>IntlCalendar::clear &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2c6ac7efecbf06e1d6368a2c467f4c0de66535" translate="yes" xml:space="preserve">
          <source>IntlCalendar::createInstance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbd2b56d472944022c749122c510f85615f2314" translate="yes" xml:space="preserve">
          <source>IntlCalendar::createInstance &amp;mdash; Create a new IntlCalendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f92f62274cf4cc43d0aca4bb38da72f93c1a229" translate="yes" xml:space="preserve">
          <source>IntlCalendar::createInstance &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6296b16ffaeaba73a4c87c04e4a2d4d29b16e97e" translate="yes" xml:space="preserve">
          <source>IntlCalendar::equals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125ffd840af4b98db61262030a8ac11eceda05f1" translate="yes" xml:space="preserve">
          <source>IntlCalendar::equals &amp;mdash; Compare time of two IntlCalendar objects for equality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0647aaa11a1acbac05bc3d4bedf3270637720422" translate="yes" xml:space="preserve">
          <source>IntlCalendar::equals &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73edf529aa327c2da68a42ee1acba3ee9836c2e5" translate="yes" xml:space="preserve">
          <source>IntlCalendar::fieldDifference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa8ad774e9bbb9c30b9214d8fcb384e42f71321" translate="yes" xml:space="preserve">
          <source>IntlCalendar::fieldDifference &amp;mdash; Calculate difference between given time and this objectʼs time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4b417136142518fa2f63abf3a3a3b8bb7af8e6" translate="yes" xml:space="preserve">
          <source>IntlCalendar::fieldDifference &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07e820c8dadaa20f5113b4ba1836f6163cffde43" translate="yes" xml:space="preserve">
          <source>IntlCalendar::fromDateTime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e96dc6541923a298e269fc4ca27ead254c0b5ae6" translate="yes" xml:space="preserve">
          <source>IntlCalendar::fromDateTime &amp;mdash; Create an IntlCalendar from a DateTime object or string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f60a5da56a3322f081cfae2ec9290d39b620d21" translate="yes" xml:space="preserve">
          <source>IntlCalendar::fromDateTime &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fd46708bd5194f3d5ccd6ee5262c69b09c5f96" translate="yes" xml:space="preserve">
          <source>IntlCalendar::get</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc45d5027a0517793578dbdcbb4bb4f27a23aff" translate="yes" xml:space="preserve">
          <source>IntlCalendar::get &amp;mdash; Get the value for a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717b6f0f7390df9f3d88f929c1f6eed41da19855" translate="yes" xml:space="preserve">
          <source>IntlCalendar::get &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527b7fb9827aa4a89972f9ebf79a7e43256e7fd1" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getActualMaximum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43a8a7cede31d136bdd544d5cffe3a80922ec2ef" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getActualMaximum &amp;mdash; The maximum value for a field, considering the objectʼs current time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69b06b8e922ca3e3886023a7bbf24ad861a9914" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getActualMaximum &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f571d48249bb52571d7f5b548b7a765daa2a357f" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getActualMinimum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731138a507594ca8b27a7df2fd639161476036a9" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getActualMinimum &amp;mdash; The minimum value for a field, considering the objectʼs current time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b4ef35ee45335b7cf8889920142e52d7cb6969" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getActualMinimum &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72efce3232320df8275a729ae5f65e2dacab35d6" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getAvailableLocales</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ee965e801ea4357896181ebd0f08ac56819a8f" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getAvailableLocales &amp;mdash; Get array of locales for which there is data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0ebb3adcdd537fef45f40bf53dd404bca3488a2" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getAvailableLocales &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c16b8f43ee50e09e769b153e237ad974121c69" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getDayOfWeekType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d42d55e8447a00fb9cdda35b7ef205b25dd60f" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getDayOfWeekType &amp;mdash; Tell whether a day is a weekday, weekend or a day that has a transition between the two</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7e4a9ec025962aa31b4b2658260b10a7f219b0" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getDayOfWeekType &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd46ab5d8ece63510db9fe1b3bfeede78d0af1c" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getErrorCode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a70377e146197135ac37b7891506716e67d0f96" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getErrorCode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2efe2e1ae533d598667d695d4d65313e6934047" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getErrorCode -- intlcal_get_error_code &amp;mdash; Get last error code on the object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2baa5f6fa8d343ba4373ad1f76f22b63a921751" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getErrorMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76582109f0294285383d2818a1cbbc367ecc7d33" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getErrorMessage &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90332b96dbc52a649ca60e9849d3b6dcef36b75f" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getErrorMessage -- intlcal_get_error_message &amp;mdash; Get last error message on the object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe3fa86f08841fded062a17e83db38c030ede00" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getFirstDayOfWeek</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24e245af8f9abeb5ba68ca7ccfe82ea5d22af697" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getFirstDayOfWeek &amp;mdash; Get the first day of the week for the calendarʼs locale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26aef3a3326dc0953b0b851d5ca4265bebcb46c7" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getFirstDayOfWeek &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c4c90256879392da02ab62f25ebf126781d9331" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getGreatestMinimum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="454d24c096578402fa02f901f272f35f90984a70" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getGreatestMinimum &amp;mdash; Get the largest local minimum value for a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="424ec3af1fe33c89204322accaf80d04c7f1f08a" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getGreatestMinimum &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90101c635d488cd57270048e0277d07eca307147" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getKeywordValuesForLocale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7253b7ff79bab646cff4305f99f8be5e7dc737d7" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getKeywordValuesForLocale &amp;mdash; Get set of locale keyword values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7265fdf4b6bb09b8c7c0e101c388c5ad7309e850" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getKeywordValuesForLocale &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0500b5f8b24918be19df5a49af86a55cf2dc01" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getLeastMaximum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3376a8392b8b66d68f1a83e018f5e8cf285b8b93" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getLeastMaximum &amp;mdash; Get the smallest local maximum for a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bff90f33c1f9ac8aa0211ceded8d7adced4808a2" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getLeastMaximum &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efb0fef0a9f7abfcceba9da0beef33e59bc3ffe" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getLocale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa4535f8899980ca7f64bc51edb7ba50b966921" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getLocale &amp;mdash; Get the locale associated with the object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62984effe6bb0fe5b22e4dd4f4dc60ac48af2f9c" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getLocale &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0b1bff9d8812758c3ef995a30255c4a0d10975" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getMaximum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a6aed30001a337e9cfccdd5b16f116da82e35fe" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getMaximum &amp;mdash; Get the global maximum value for a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f97dc0ef2ef4f580ef9095d4e5910a090dbf48" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getMaximum &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715fbe7c2f40f6a5c22cf195ecc6e7231e028890" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getMinimalDaysInFirstWeek</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d12c6eb98b450eaebc64bdd5639e7ef8dba820" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getMinimalDaysInFirstWeek &amp;mdash; Get minimal number of days the first week in a year or month can have</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2dbb0a1649e8e6fae98c113668fc3d7aed6e702" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getMinimalDaysInFirstWeek &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a56ee088ff571bd3dceecdaefaaadaddb2fcf039" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getMinimum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48137dc2af71fffdbb5e2206491ded222f4031c" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getMinimum &amp;mdash; Get the global minimum value for a field</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d3a065c002785d432bfd4683688dd5d69da2df" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getMinimum &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3973876edbec67a3d8ad4b372ca671ca19cc3f" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getNow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7714923f0e4277a5b751269c1004a35eecfbfc0" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getNow &amp;mdash; Get number representing the current time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54eeee4b5a9d8dd77fe840d4a787a4ab05dc68bd" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getNow &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aaf0eb3604c3d2c686be0ff23e3ae55f94f4ab3" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getRepeatedWallTimeOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e411c16d91b1a8523d5c395af29c44770fe2de" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getRepeatedWallTimeOption &amp;mdash; Get behavior for handling repeating wall time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb4233a050b65226fbc90775b4ae3954ae460dd" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getRepeatedWallTimeOption &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf823b32d8a9b3e5ec2d55e47e9a505932000392" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getSkippedWallTimeOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf6889a51dc33e080bf7978dce4113353969001b" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getSkippedWallTimeOption &amp;mdash; Get behavior for handling skipped wall time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bd3518793208aae67979f52c56814c75ada218" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getSkippedWallTimeOption &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a6921862e9c33f0556119e4da58f1a57b1d8df6" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getTime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa883d9845e7463159d981d5c80754a7d9ad473b" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getTime &amp;mdash; Get time currently represented by the object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771f98cba0d0eb52a6de753e7e32b4d51da64993" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getTime &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dab004282d0b9aeba9f68412a4af4758f56023" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getTimeZone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884366b86480a57057927cbedf6c966ab35a0985" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getTimeZone &amp;mdash; Get the objectʼs timezone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cdeb5fd23993768ebc1a9dccef43e86c3ed49e1" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getTimeZone &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37482c2044f9284a0d0e0b47337fab35cdb921b2" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb18a41f8ad678fa8ed847b84cd2bdfd253dc5d8" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getType &amp;mdash; Get the calendar type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1294c8e4666f84a6c81195dbc94e6049c68ef4fa" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getType &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f7f428d603fa973bb15feaf4df58297e05ff2c" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getWeekendTransition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63678b9a220655647cf4139f8c1510725fd4eba7" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getWeekendTransition &amp;mdash; Get time of the day at which weekend begins or ends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946c8f918febb99c36d8887c78d3e1b72bb4041e" translate="yes" xml:space="preserve">
          <source>IntlCalendar::getWeekendTransition &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb971421d0733881477ce4fc24c8d7215334f0e" translate="yes" xml:space="preserve">
          <source>IntlCalendar::inDaylightTime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4961f7a6dd59ff0ff64f9804e99488cc0abce7fe" translate="yes" xml:space="preserve">
          <source>IntlCalendar::inDaylightTime &amp;mdash; Whether the objectʼs time is in Daylight Savings Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6de8fedb14a466f2de7ec07f0bd9c79969224d7" translate="yes" xml:space="preserve">
          <source>IntlCalendar::inDaylightTime &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9458776faf59466d7211fd41d1e79f35423ba1a" translate="yes" xml:space="preserve">
          <source>IntlCalendar::isEquivalentTo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6164a8a8ff563b956e6244fbb2e6f1a4b92ba703" translate="yes" xml:space="preserve">
          <source>IntlCalendar::isEquivalentTo &amp;mdash; Whether another calendar is equal but for a different time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4adca0ff5ea8cfd3d9821e1d4cbcbbbd4c46c0f7" translate="yes" xml:space="preserve">
          <source>IntlCalendar::isEquivalentTo &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4770bc8f6e572a43ae1c30f1c13862f3d2b50edd" translate="yes" xml:space="preserve">
          <source>IntlCalendar::isLenient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0440545e9a622c17251209a1c3e08e83a64eb494" translate="yes" xml:space="preserve">
          <source>IntlCalendar::isLenient &amp;mdash; Whether date/time interpretation is in lenient mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b06efe13e2ab620739ea433835216e56af2333e" translate="yes" xml:space="preserve">
          <source>IntlCalendar::isLenient &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdf7bec0bdcd551ffbcc485a9ce273eb78f9a1d" translate="yes" xml:space="preserve">
          <source>IntlCalendar::isSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fb71a32dd619a12f6db2e302970879554c46bc" translate="yes" xml:space="preserve">
          <source>IntlCalendar::isSet &amp;mdash; Whether a field is set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9bf0859da3645af8c1c64b8e303ad14355a28c" translate="yes" xml:space="preserve">
          <source>IntlCalendar::isSet &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60f37b891c4f8b3dee0f86a59dadb7bff8fa4c8" translate="yes" xml:space="preserve">
          <source>IntlCalendar::isWeekend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fdf75980a47842ba9aa627b8a9f0b2836bbe9f9" translate="yes" xml:space="preserve">
          <source>IntlCalendar::isWeekend &amp;mdash; Whether a certain date/time is in the weekend</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd4c1f144d825f360f170445b576bc0add11e08" translate="yes" xml:space="preserve">
          <source>IntlCalendar::isWeekend &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6046a7155cfa5995296c04d439eeb584591fce" translate="yes" xml:space="preserve">
          <source>IntlCalendar::roll</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c60e45727855b945282d4c299d48097f83a29dd" translate="yes" xml:space="preserve">
          <source>IntlCalendar::roll &amp;mdash; Add value to field without carrying into more significant fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e733bfc2ad7386065d49d056a313b6303e3121f4" translate="yes" xml:space="preserve">
          <source>IntlCalendar::roll &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1323396b3203c4d82920c8bd57b5287f8cff06" translate="yes" xml:space="preserve">
          <source>IntlCalendar::set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9eebda031bb3d704d80e4fab96b8a58f2321f53" translate="yes" xml:space="preserve">
          <source>IntlCalendar::set &amp;mdash; Set a time field or several common fields at once</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d6d5fb196c54670f48c92e2f32daf3459275f7" translate="yes" xml:space="preserve">
          <source>IntlCalendar::set &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692566868334af0caf8a1da31b4efb67e6c78775" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setFirstDayOfWeek</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="915bd1a28f72da47b37ea248acb7d2923ff00eaf" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setFirstDayOfWeek &amp;mdash; Set the day on which the week is deemed to start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74148ca71ffd14f809abe519523c0a243cc2ae69" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setFirstDayOfWeek &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5f05993ab18f94dd4ebc644d26d9c3804bc414" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setLenient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36954819f0ebb42bc1494e8ec893c0d14188f567" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setLenient &amp;mdash; Set whether date/time interpretation is to be lenient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb829efece895f627fecea56afd517aa524c963" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setLenient &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ed1f39ebd171da1860e53cbce6dae1b2fb5192" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setMinimalDaysInFirstWeek</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e5949798b2aa72995d26a8f420fc5b17b10581" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setMinimalDaysInFirstWeek &amp;mdash; Set minimal number of days the first week in a year or month can have</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb223546f40afe6053271e2898f9182d8f979ac" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setMinimalDaysInFirstWeek &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acb2c8495882a170e047c725881d58e61e79706" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setRepeatedWallTimeOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0bde8e26f58c60770ab27ad23a03c441d73d39" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setRepeatedWallTimeOption &amp;mdash; Set behavior for handling repeating wall times at negative timezone offset transitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8595ddaadff3301e94f439853ab718099a1a657a" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setRepeatedWallTimeOption &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57013ed3cdc26a09fb844fd2fe26f8528c62618" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setSkippedWallTimeOption</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123e0b8c62383cd14a7325c9b5d57d347efa3896" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setSkippedWallTimeOption &amp;mdash; Set behavior for handling skipped wall times at positive timezone offset transitions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7479b52103ac58dd83e2fa6d04a357e3b537ae5" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setSkippedWallTimeOption &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf60bfa856a6e4c4f01403ba4a70ebb6a1ca72eb" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setTime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466be53b9694fbcf0e81eaae7835da694056cf05" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setTime &amp;mdash; Set the calendar time in milliseconds since the epoch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9418c69cc952d5fa64efc9631670e3250f1153" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setTime &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e103aaa74112846ec2fc40f323d933214bea5054" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setTimeZone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2dc98e7c92e4744a27566b87001ebf5940691f" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setTimeZone &amp;mdash; Set the timezone used by this calendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48c8d9e675d1ef65f27ac17c574e56d6f2772064" translate="yes" xml:space="preserve">
          <source>IntlCalendar::setTimeZone &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80093c97165826c0f6a34bad59152f2378c4fdaf" translate="yes" xml:space="preserve">
          <source>IntlCalendar::toDateTime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c18b3776dea649fffd148d9a6c594dbbd17462ee" translate="yes" xml:space="preserve">
          <source>IntlCalendar::toDateTime &amp;mdash; Convert an IntlCalendar into a DateTime object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8cd876080ba2052d6287c6f21b783a5af8d5184" translate="yes" xml:space="preserve">
          <source>IntlCalendar::toDateTime &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f10f4224fc36d4f5fde116a6379fd78f504cb2" translate="yes" xml:space="preserve">
          <source>IntlChar &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ece9850de47d5b6f53add450cae56d64287251" translate="yes" xml:space="preserve">
          <source>IntlChar::charAge</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf2065dc7dbe501d0c71b90b5ceb4f1be9a8de5" translate="yes" xml:space="preserve">
          <source>IntlChar::charAge &amp;mdash; Get the &quot;age&quot; of the code point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c12fc42c38875480e57855dbd5d3e27940124382" translate="yes" xml:space="preserve">
          <source>IntlChar::charDigitValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db1f7be0fd1404c00ae56ff9268c723e080410a" translate="yes" xml:space="preserve">
          <source>IntlChar::charDigitValue &amp;mdash; Get the decimal digit value of a decimal digit character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a20dd66439e170d63e79a9c9b772e1ea3aa202" translate="yes" xml:space="preserve">
          <source>IntlChar::charDigitValue &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d41cf9699eb4fffb8f68b31805eb30d62884db6" translate="yes" xml:space="preserve">
          <source>IntlChar::charDirection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32db167bfb09f8c84b04f6b763a55115e1187cda" translate="yes" xml:space="preserve">
          <source>IntlChar::charDirection &amp;mdash; Get bidirectional category value for a code point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d34f19fe7b16d895c90dbdeb34c0410c4a7a528" translate="yes" xml:space="preserve">
          <source>IntlChar::charDirection &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487ec4abb9b19853be518f34208291e265f951e6" translate="yes" xml:space="preserve">
          <source>IntlChar::charFromName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37474033075dd95020e3e053382fb9a1eb85afd9" translate="yes" xml:space="preserve">
          <source>IntlChar::charFromName &amp;mdash; Find Unicode character by name and return its code point value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f06afee9a1fb6f647df3081e7f566e4039b588" translate="yes" xml:space="preserve">
          <source>IntlChar::charFromName &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad793a989e2a11df16f19f295aa9ec597581dd7c" translate="yes" xml:space="preserve">
          <source>IntlChar::charMirror</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32011fc0615ca44149fc5e133a3c336df9dc70cb" translate="yes" xml:space="preserve">
          <source>IntlChar::charMirror &amp;mdash; Get the &quot;mirror-image&quot; character for a code point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c9bc32130c0ac78fdd690fbadaca66574e81fc" translate="yes" xml:space="preserve">
          <source>IntlChar::charMirror &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ba2d743c5244ba9c81ff9cc5f979f546c28305" translate="yes" xml:space="preserve">
          <source>IntlChar::charName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0ddce0fc5edb1446a9ac476eb4f73cba0fe20c" translate="yes" xml:space="preserve">
          <source>IntlChar::charName &amp;mdash; Retrieve the name of a Unicode character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe376ce808f5fe83a7350face6bd0d1197571cc0" translate="yes" xml:space="preserve">
          <source>IntlChar::charName &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604c5821c24ff6f1a7178a17746f0f2dce5520e5" translate="yes" xml:space="preserve">
          <source>IntlChar::charType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e8373a89a9ca1bdb5b74cefe79ecd548c2aafd" translate="yes" xml:space="preserve">
          <source>IntlChar::charType &amp;mdash; Get the general category value for a code point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffc9309193f6a2bfd1dc5bc6914e4e7c2eab959" translate="yes" xml:space="preserve">
          <source>IntlChar::charType &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1d75661994759d88aac129fd36e32eae8fdb94" translate="yes" xml:space="preserve">
          <source>IntlChar::chr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7c7f070363e932b2b6b8b7956a8dc7dd0e10fc" translate="yes" xml:space="preserve">
          <source>IntlChar::chr &amp;mdash; Return Unicode character by code point value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6624f2834b43be421115d1d33065a23e8fe4c00" translate="yes" xml:space="preserve">
          <source>IntlChar::chr &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff0251cc47c7709fc78bef409d6890cd2fd800db" translate="yes" xml:space="preserve">
          <source>IntlChar::digit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73dc61c723f2c7479d37b0ff4103a387358bc582" translate="yes" xml:space="preserve">
          <source>IntlChar::digit &amp;mdash; Get the decimal digit value of a code point for a given radix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccaf2a81c3fdc8b77ef17be68b6858803c713911" translate="yes" xml:space="preserve">
          <source>IntlChar::digit &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a8eab848f74ca65f749dc41292d9d9c1afb3fb" translate="yes" xml:space="preserve">
          <source>IntlChar::enumCharNames</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="405127580291ff8c52dbe4d0a8394a99fb8319fb" translate="yes" xml:space="preserve">
          <source>IntlChar::enumCharNames &amp;mdash; Enumerate all assigned Unicode characters within a range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ad8176bb44f1d3d6abeacd1aeecedbca9664c95" translate="yes" xml:space="preserve">
          <source>IntlChar::enumCharNames &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcb9b081b7ba681ba4c14f111610de393ba0a51b" translate="yes" xml:space="preserve">
          <source>IntlChar::enumCharTypes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76b4389d57f0599b8d8418276c0f4c2d4b19707" translate="yes" xml:space="preserve">
          <source>IntlChar::enumCharTypes &amp;mdash; Enumerate all code points with their Unicode general categories</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad26ca9be4dabdc7b40080c9aeb2e481365e4da4" translate="yes" xml:space="preserve">
          <source>IntlChar::enumCharTypes &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df959ebe13e6e4f7f64d4372b1f2bc826c4021a" translate="yes" xml:space="preserve">
          <source>IntlChar::foldCase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45081637e6451e95b618e80de911d58eff3e289c" translate="yes" xml:space="preserve">
          <source>IntlChar::foldCase &amp;mdash; Perform case folding on a code point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ad6b4f2aa2ecbc0070bbe0cf1564d094eafd7e" translate="yes" xml:space="preserve">
          <source>IntlChar::foldCase &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1977f613485e7c0096272ed31a67444500b05271" translate="yes" xml:space="preserve">
          <source>IntlChar::forDigit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d552de4c6633bef9b7e69f934c2d3f54afee99a" translate="yes" xml:space="preserve">
          <source>IntlChar::forDigit &amp;mdash; Get character representation for a given digit and radix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f98e91a8267cfc22894b3c384fc1de45b67bd5" translate="yes" xml:space="preserve">
          <source>IntlChar::forDigit &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cae5ed921ba93ef752ad620f71ab8c080595575" translate="yes" xml:space="preserve">
          <source>IntlChar::getBidiPairedBracket</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecca4e6b75a31553c2a904a91be9c3aa1af0203b" translate="yes" xml:space="preserve">
          <source>IntlChar::getBidiPairedBracket &amp;mdash; Get the paired bracket character for a code point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407d295bb651433656105867a474cd5e5703990a" translate="yes" xml:space="preserve">
          <source>IntlChar::getBidiPairedBracket &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4387af6c4da6ba9b3a43a34e8d5be9b47d17ced" translate="yes" xml:space="preserve">
          <source>IntlChar::getBlockCode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1a7cb805bc45badf7b4508fcd1457a919d23abe" translate="yes" xml:space="preserve">
          <source>IntlChar::getBlockCode &amp;mdash; Get the Unicode allocation block containing a code point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9933e0ce48aafc64057e9e7c85a2768e3de999" translate="yes" xml:space="preserve">
          <source>IntlChar::getBlockCode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="136e3d6062249d047691df5ac11daffc4f3de841" translate="yes" xml:space="preserve">
          <source>IntlChar::getCombiningClass</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c450851b05694af127703295d1782c1ca5809b6b" translate="yes" xml:space="preserve">
          <source>IntlChar::getCombiningClass &amp;mdash; Get the combining class of a code point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e667941f62c519ae171071a6b0be416cf144c5e" translate="yes" xml:space="preserve">
          <source>IntlChar::getCombiningClass &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a925f7c298d3d7c13f28fe59598500371a382316" translate="yes" xml:space="preserve">
          <source>IntlChar::getFC_NFKC_Closure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03107171c8d9e6bd209edcdbc8817ddf3b648d1" translate="yes" xml:space="preserve">
          <source>IntlChar::getFC_NFKC_Closure &amp;mdash; Get the FC_NFKC_Closure property for a code point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0274ce89be8d99ef955965a2f174af89466736b" translate="yes" xml:space="preserve">
          <source>IntlChar::getFC_NFKC_Closure &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1175702d5829bf357c0b001aef4a9332a3b0bf2" translate="yes" xml:space="preserve">
          <source>IntlChar::getIntPropertyMaxValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf55b61c91cc7d86f1d1f1eb1f9c99728f24284" translate="yes" xml:space="preserve">
          <source>IntlChar::getIntPropertyMaxValue &amp;mdash; Get the max value for a Unicode property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad652ba3612f74f54f98caa1c635f093d5c6330" translate="yes" xml:space="preserve">
          <source>IntlChar::getIntPropertyMaxValue &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35fc6707ed59f7ace8efd75deb9ebc57a2cc58f8" translate="yes" xml:space="preserve">
          <source>IntlChar::getIntPropertyMinValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92eb6abe7ac584294fbb9f63eaa24f488f4d6eb7" translate="yes" xml:space="preserve">
          <source>IntlChar::getIntPropertyMinValue &amp;mdash; Get the min value for a Unicode property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b78c20eb643be29aa39319ea060a2efe509c8e3" translate="yes" xml:space="preserve">
          <source>IntlChar::getIntPropertyMinValue &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01fbd9bdb3d59b1b8b9642dde25f4b37d7b41e7f" translate="yes" xml:space="preserve">
          <source>IntlChar::getIntPropertyValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8865441e9fec6c9d5ee1b39b08aa344b817b9ab" translate="yes" xml:space="preserve">
          <source>IntlChar::getIntPropertyValue &amp;mdash; Get the value for a Unicode property for a code point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="470b4140915cfa007b930632fb65d813c69da73a" translate="yes" xml:space="preserve">
          <source>IntlChar::getIntPropertyValue &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688e2496d42dc02ce02c79106e92d4dbfe72401b" translate="yes" xml:space="preserve">
          <source>IntlChar::getNumericValue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95582b509dce2083b0795d717813f49efeed55b9" translate="yes" xml:space="preserve">
          <source>IntlChar::getNumericValue &amp;mdash; Get the numeric value for a Unicode code point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04c81bcc3f0b6c1486b3f436ef3ee327cc426dc5" translate="yes" xml:space="preserve">
          <source>IntlChar::getNumericValue &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2775489a0fffbf9f402d0e7d0df452b7038f49b5" translate="yes" xml:space="preserve">
          <source>IntlChar::getPropertyEnum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aacc65b4fd16fc4206ebe8fe9f959a5e20482673" translate="yes" xml:space="preserve">
          <source>IntlChar::getPropertyEnum &amp;mdash; Get the property constant value for a given property name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f525875d8dbca65273b871e18bcf60f0450f04a" translate="yes" xml:space="preserve">
          <source>IntlChar::getPropertyEnum &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0712aa543dbe46038fb3ac0c0c2216dbfa0f04" translate="yes" xml:space="preserve">
          <source>IntlChar::getPropertyName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33896f4adef34eb8995fabe99cb69e00d5a9d14a" translate="yes" xml:space="preserve">
          <source>IntlChar::getPropertyName &amp;mdash; Get the Unicode name for a property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e4385e8ee3ab70e543ebb90c9933754b233c20" translate="yes" xml:space="preserve">
          <source>IntlChar::getPropertyName &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37fed79b4c5ff81d7f595f231af5e43b9713eade" translate="yes" xml:space="preserve">
          <source>IntlChar::getPropertyValueEnum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ed2b17d0fd13106749168f7a58a2b8d54719a6" translate="yes" xml:space="preserve">
          <source>IntlChar::getPropertyValueEnum &amp;mdash; Get the property value for a given value name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb0499d8ca34e755af50f16a7afd018a267e53e" translate="yes" xml:space="preserve">
          <source>IntlChar::getPropertyValueEnum &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59dad2c5e491112000297d4ea40b00f348efe27b" translate="yes" xml:space="preserve">
          <source>IntlChar::getPropertyValueName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23cf04557bceddeabb789842f4ae24e6b92ab893" translate="yes" xml:space="preserve">
          <source>IntlChar::getPropertyValueName &amp;mdash; Get the Unicode name for a property value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190c9d9745e6a3eec32e89df13cffe2157d8e798" translate="yes" xml:space="preserve">
          <source>IntlChar::getPropertyValueName &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32e012778a6cd7777b21fdb573b4c8fcce440f01" translate="yes" xml:space="preserve">
          <source>IntlChar::getUnicodeVersion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc336439145db1c3b358e6bfbd5b134a28025b2" translate="yes" xml:space="preserve">
          <source>IntlChar::getUnicodeVersion &amp;mdash; Get the Unicode version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32391a5e6c188f4d44f08e1079e543b374e914f6" translate="yes" xml:space="preserve">
          <source>IntlChar::getUnicodeVersion &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2968edabb3eb4eedce252a622f3ebe89552d7361" translate="yes" xml:space="preserve">
          <source>IntlChar::hasBinaryProperty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62eaf2e4f616ae2adb4a499e77da98715e8b58d8" translate="yes" xml:space="preserve">
          <source>IntlChar::hasBinaryProperty &amp;mdash; Check a binary Unicode property for a code point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221d251aa335d0fadaec7eef64dfa7078dd9b99a" translate="yes" xml:space="preserve">
          <source>IntlChar::hasBinaryProperty &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d85261fb42524390342cca026cec1ea57f0b865" translate="yes" xml:space="preserve">
          <source>IntlChar::isIDIgnorable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14af614bbf8f0e594b27ec5cc2ce49d868475900" translate="yes" xml:space="preserve">
          <source>IntlChar::isIDIgnorable &amp;mdash; Check if code point is an ignorable character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b8fcd0405c23897e03a981526edb42159b5e9c" translate="yes" xml:space="preserve">
          <source>IntlChar::isIDIgnorable &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e3dd3d57ce0fd595524700912ab647a788329df" translate="yes" xml:space="preserve">
          <source>IntlChar::isIDPart</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b9bb27168d29fe88e57dcda0d61ee5222cfe3a" translate="yes" xml:space="preserve">
          <source>IntlChar::isIDPart &amp;mdash; Check if code point is permissible in an identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cdc84b6c32347d78e108b6397fad88debdd4ecb" translate="yes" xml:space="preserve">
          <source>IntlChar::isIDPart &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a113264733636d0af879c0f46f79bb5adfc0e71" translate="yes" xml:space="preserve">
          <source>IntlChar::isIDStart</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98c27b243366e3453ecbf1bcd61e7f1771efecc" translate="yes" xml:space="preserve">
          <source>IntlChar::isIDStart &amp;mdash; Check if code point is permissible as the first character in an identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91cf673ab59a234b7cd35b91b1bccaedb914d8f8" translate="yes" xml:space="preserve">
          <source>IntlChar::isIDStart &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501c279d1835e1d65920625cfbdadc421ccfa233" translate="yes" xml:space="preserve">
          <source>IntlChar::isISOControl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1ee1e9b14291a11def06b6f9a857c9c59ba250" translate="yes" xml:space="preserve">
          <source>IntlChar::isISOControl &amp;mdash; Check if code point is an ISO control code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8bfb2448d6033ea6ba4dbf06d177fd8405fedb" translate="yes" xml:space="preserve">
          <source>IntlChar::isISOControl &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0733999845ae9fb15ee7033c9633693c6d70f77c" translate="yes" xml:space="preserve">
          <source>IntlChar::isJavaIDPart</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2c9635526cfd87ee943712c0b24cd8c00f2ca34" translate="yes" xml:space="preserve">
          <source>IntlChar::isJavaIDPart &amp;mdash; Check if code point is permissible in a Java identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86091ac46bdf54674be4bbe7d2b3ef30bcf6bca6" translate="yes" xml:space="preserve">
          <source>IntlChar::isJavaIDPart &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e6f362303923f339e7a1599f5ba4d49954d44c" translate="yes" xml:space="preserve">
          <source>IntlChar::isJavaIDStart</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5bddfdff4d537b9ef6ead9dd27702b84f90458a" translate="yes" xml:space="preserve">
          <source>IntlChar::isJavaIDStart &amp;mdash; Check if code point is permissible as the first character in a Java identifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fa44a1e0316568071f7033f6f838c75a67c781" translate="yes" xml:space="preserve">
          <source>IntlChar::isJavaIDStart &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41e117e281365c03f62b93afcc09c2e2d4c078d" translate="yes" xml:space="preserve">
          <source>IntlChar::isJavaSpaceChar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a0624bc4dbaabcf72cbf2697cdd04df367e8e15" translate="yes" xml:space="preserve">
          <source>IntlChar::isJavaSpaceChar &amp;mdash; Check if code point is a space character according to Java</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3c0dc9b71fe81d4cdd458125b9b378f388675f" translate="yes" xml:space="preserve">
          <source>IntlChar::isJavaSpaceChar &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47913ded28aaeff980bea823d93f729f4b77d73c" translate="yes" xml:space="preserve">
          <source>IntlChar::isMirrored</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2f99f02a1844df20bf1e754de00c58134e855c" translate="yes" xml:space="preserve">
          <source>IntlChar::isMirrored &amp;mdash; Check if code point has the Bidi_Mirrored property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0c774a04b6fbc6dc6a787051569f18ecbc503a" translate="yes" xml:space="preserve">
          <source>IntlChar::isMirrored &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8669ef894236e8eba8f3c8a442ea156285780b29" translate="yes" xml:space="preserve">
          <source>IntlChar::isUAlphabetic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a2ea621195b510bc5fed39f23360c9c1571e60" translate="yes" xml:space="preserve">
          <source>IntlChar::isUAlphabetic &amp;mdash; Check if code point has the Alphabetic Unicode property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7403537df76b1ab077bb2bd171ba53c93bb8a41f" translate="yes" xml:space="preserve">
          <source>IntlChar::isUAlphabetic &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a877a60e61154312ceec3d82f7862558731365b" translate="yes" xml:space="preserve">
          <source>IntlChar::isULowercase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfb7feeb4746968496779e552a7016f1223a4d8" translate="yes" xml:space="preserve">
          <source>IntlChar::isULowercase &amp;mdash; Check if code point has the Lowercase Unicode property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0cef7ba6a23ac0e7aaea6fee4b62d91bdcf4ef" translate="yes" xml:space="preserve">
          <source>IntlChar::isULowercase &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95a367d0f9eb3971ba032ec06ec7fa47e4eb847" translate="yes" xml:space="preserve">
          <source>IntlChar::isUUppercase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1daf9901915db187cef1eee20f60387d9181ff5" translate="yes" xml:space="preserve">
          <source>IntlChar::isUUppercase &amp;mdash; Check if code point has the Uppercase Unicode property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64fe95dd138a742984637c35ff68b2297d01e96" translate="yes" xml:space="preserve">
          <source>IntlChar::isUUppercase &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6f7fc62c129c44a1b08aeff00f5dd3d028b6df" translate="yes" xml:space="preserve">
          <source>IntlChar::isUWhiteSpace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5ae44780f0744ee6e93aac43b4ba41f06923c42" translate="yes" xml:space="preserve">
          <source>IntlChar::isUWhiteSpace &amp;mdash; Check if code point has the White_Space Unicode property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f83fd3e57026c22275a2345eca63d3bdbdc2f0" translate="yes" xml:space="preserve">
          <source>IntlChar::isUWhiteSpace &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23559957dcfd6db4458bbcb26b71ba05e234409b" translate="yes" xml:space="preserve">
          <source>IntlChar::isWhitespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d705ab82d4b91177153b94ed5664b9ec0177f3" translate="yes" xml:space="preserve">
          <source>IntlChar::isWhitespace &amp;mdash; Check if code point is a whitespace character according to ICU</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fabc018008cfda5ba9b0ea6c8852009ca8cb8f5" translate="yes" xml:space="preserve">
          <source>IntlChar::isWhitespace &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c02205b1cfb27519bb416c1c1c67d05b223a4c" translate="yes" xml:space="preserve">
          <source>IntlChar::isalnum</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ffa046567354b401e92824ea2ef765a63bdb69" translate="yes" xml:space="preserve">
          <source>IntlChar::isalnum &amp;mdash; Check if code point is an alphanumeric character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7943012f51deb75504739c64e9000ae15b16ef" translate="yes" xml:space="preserve">
          <source>IntlChar::isalnum &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2571c1eeb5aa95ca8572e4a2146ba604c4c3a3" translate="yes" xml:space="preserve">
          <source>IntlChar::isalpha</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="103bb6d0d442e85c2f992291e1ee79a19c29523d" translate="yes" xml:space="preserve">
          <source>IntlChar::isalpha &amp;mdash; Check if code point is a letter character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95fc483a74fa2d01f2f13ef445403219d0794d2" translate="yes" xml:space="preserve">
          <source>IntlChar::isalpha &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff8c20e94d8b9a3f17f225b9e3dd8c031fd3b3ec" translate="yes" xml:space="preserve">
          <source>IntlChar::isbase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e097f0d9cc773bd0b7ceee25f4c49902ec7f4fdf" translate="yes" xml:space="preserve">
          <source>IntlChar::isbase &amp;mdash; Check if code point is a base character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45a8f3ca07385c72030f54f8f79de0cdc07e945" translate="yes" xml:space="preserve">
          <source>IntlChar::isbase &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff001ec2989ea15a1db84618118a7a90d6bbb230" translate="yes" xml:space="preserve">
          <source>IntlChar::isblank</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841c1e55ea559f4db57a7a1f1b3f85661dbd8ce3" translate="yes" xml:space="preserve">
          <source>IntlChar::isblank &amp;mdash; Check if code point is a &quot;blank&quot; or &quot;horizontal space&quot; character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="349650267df0432e64b4dfc5e6d4c8318e42d7e0" translate="yes" xml:space="preserve">
          <source>IntlChar::isblank &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="957aa395decf9c4479d862c65a461e93997cfc9a" translate="yes" xml:space="preserve">
          <source>IntlChar::iscntrl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c86b83605e604d2526b48e1ea2d4f776e6b6d00" translate="yes" xml:space="preserve">
          <source>IntlChar::iscntrl &amp;mdash; Check if code point is a control character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d1dd5d54eada682d7d5e21add1693b3411d4975" translate="yes" xml:space="preserve">
          <source>IntlChar::iscntrl &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a29a42a2c5a0da4adcde97c687235f751586310" translate="yes" xml:space="preserve">
          <source>IntlChar::isdefined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9d1a7a672e84c88051c69da7d8f9db4309d180" translate="yes" xml:space="preserve">
          <source>IntlChar::isdefined &amp;mdash; Check whether the code point is defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee4d5a9b9cef06eb4e43b820035aae3a76276f03" translate="yes" xml:space="preserve">
          <source>IntlChar::isdefined &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0648c9e43d77cd42aba24e491d7de95d53b1bcb9" translate="yes" xml:space="preserve">
          <source>IntlChar::isdigit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3d55d3e671b94cdb5ce66ae7285906ad02368a" translate="yes" xml:space="preserve">
          <source>IntlChar::isdigit &amp;mdash; Check if code point is a digit character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f078802b6a99965ec23da115bf9470c641d14f4b" translate="yes" xml:space="preserve">
          <source>IntlChar::isdigit &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b3e38663a4aafb6fa9a06db58a6b1ef09fed34" translate="yes" xml:space="preserve">
          <source>IntlChar::isgraph</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460f7d6f8d33f8e24e3ad74efcca5b473a0eeeba" translate="yes" xml:space="preserve">
          <source>IntlChar::isgraph &amp;mdash; Check if code point is a graphic character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d82a06a75e71da01ebc9c1266c59833db90d097" translate="yes" xml:space="preserve">
          <source>IntlChar::isgraph &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d15fc4e6e8ed4ee862c0d5ae303190ab98b5658" translate="yes" xml:space="preserve">
          <source>IntlChar::islower</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f7ebf127306438082cae35a2aea533468f00ef" translate="yes" xml:space="preserve">
          <source>IntlChar::islower &amp;mdash; Check if code point is a lowercase letter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a489297d2850663c5c6ea1a6b1916a0af4bd309b" translate="yes" xml:space="preserve">
          <source>IntlChar::islower &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04481ebad347daa2105c08c5265da6afeb2dbf8" translate="yes" xml:space="preserve">
          <source>IntlChar::isprint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d386d7ec472b00090f303f6d407201265813c672" translate="yes" xml:space="preserve">
          <source>IntlChar::isprint &amp;mdash; Check if code point is a printable character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77a0b67b7bcc9954fec793a5e3bd5bfdbb3211b" translate="yes" xml:space="preserve">
          <source>IntlChar::isprint &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df6d8fbf84e913d41b20ac8cddfae1fc9017b65" translate="yes" xml:space="preserve">
          <source>IntlChar::ispunct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21f1e08a8a285e89e23dba588e2beb7f27e2e516" translate="yes" xml:space="preserve">
          <source>IntlChar::ispunct &amp;mdash; Check if code point is punctuation character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b627ede962532bd51f28996d7ac3dcf3191a61ab" translate="yes" xml:space="preserve">
          <source>IntlChar::ispunct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7650c9c4c04e5ecba3111ad9f0f917c1bc9846" translate="yes" xml:space="preserve">
          <source>IntlChar::isspace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a8b419d004c018690a70fbd1ce903b71a378ab3" translate="yes" xml:space="preserve">
          <source>IntlChar::isspace &amp;mdash; Check if code point is a space character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4603da01d938613e30614e569db1b346ce968a5" translate="yes" xml:space="preserve">
          <source>IntlChar::isspace &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e0d1ca48801d91d8d3bb9ee9f3e187f9fda4db1" translate="yes" xml:space="preserve">
          <source>IntlChar::istitle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e64deba7cd9a7fe663e7314fef6ae0dd38a6ca7" translate="yes" xml:space="preserve">
          <source>IntlChar::istitle &amp;mdash; Check if code point is a titlecase letter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c51289bb8a6a12c8ea6c1f694957395bdc8401dc" translate="yes" xml:space="preserve">
          <source>IntlChar::istitle &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe468c8e619ad6a2c58a397490bcc76207dce38d" translate="yes" xml:space="preserve">
          <source>IntlChar::isupper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4661703c7ff0c80cad99ee790e7a218afe3140bb" translate="yes" xml:space="preserve">
          <source>IntlChar::isupper &amp;mdash; Check if code point has the general category &quot;Lu&quot; (uppercase letter)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaa3d0513ef5556807311ac42a93e94e880610d2" translate="yes" xml:space="preserve">
          <source>IntlChar::isupper &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f7609fe6be9bf9f126aba298b4ae4f3b4b14d9" translate="yes" xml:space="preserve">
          <source>IntlChar::isxdigit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4636dc8f49a38d8168e01b95c3e788554d8a165a" translate="yes" xml:space="preserve">
          <source>IntlChar::isxdigit &amp;mdash; Check if code point is a hexadecimal digit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755de0b78cb2224266126afe637bd2ab11558dfb" translate="yes" xml:space="preserve">
          <source>IntlChar::isxdigit &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df1902226b8c20e3e2a8533e792a64f5032a756" translate="yes" xml:space="preserve">
          <source>IntlChar::ord</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="489c26d4f28acb58eb0bedd21ce3326392fc2485" translate="yes" xml:space="preserve">
          <source>IntlChar::ord &amp;mdash; Return Unicode code point value of character</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="264110cd8c3bd3ba94cb57959f1f8685ec9960b9" translate="yes" xml:space="preserve">
          <source>IntlChar::ord &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57dd0b8fab89367ff543434681efb3043a53c7ea" translate="yes" xml:space="preserve">
          <source>IntlChar::tolower</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3036b4dd651b045bf2dbc54166f37d75379c6abf" translate="yes" xml:space="preserve">
          <source>IntlChar::tolower &amp;mdash; Make Unicode character lowercase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb956297971b7e34a5ead140a8e87bfc9e0448d" translate="yes" xml:space="preserve">
          <source>IntlChar::tolower &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41954282797e52f6e0846798917d84fb9435240c" translate="yes" xml:space="preserve">
          <source>IntlChar::totitle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fff63a319acfef3efd39fe9eaa675d563795f87" translate="yes" xml:space="preserve">
          <source>IntlChar::totitle &amp;mdash; Make Unicode character titlecase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d823522248d06073429fb44d986c9d7db517307" translate="yes" xml:space="preserve">
          <source>IntlChar::totitle &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4721ec803736470eb0df002a2f5df4a245b775f" translate="yes" xml:space="preserve">
          <source>IntlChar::toupper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac85d7e305baac9cca647d3cde65710a40ae75d5" translate="yes" xml:space="preserve">
          <source>IntlChar::toupper &amp;mdash; Make Unicode character uppercase</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fff99019ebeba6f7896ea323e4ee1f8bc45476" translate="yes" xml:space="preserve">
          <source>IntlChar::toupper &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42af2a52b2a9b66292f6b56c326958ef52311eb" translate="yes" xml:space="preserve">
          <source>IntlCodePointBreakIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1e18d28cb92fcec09e782946948d79ac07833b" translate="yes" xml:space="preserve">
          <source>IntlCodePointBreakIterator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ec4ad0daf4910b3a96ae429452996ae7dce5f6" translate="yes" xml:space="preserve">
          <source>IntlCodePointBreakIterator::getLastCodePoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3fb71e315acf9f38a97a743524520369a51f15" translate="yes" xml:space="preserve">
          <source>IntlCodePointBreakIterator::getLastCodePoint &amp;mdash; Get last code point passed over after advancing or receding the iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017c471a161ee9bb09b4e539aecb15b2f561aa5a" translate="yes" xml:space="preserve">
          <source>IntlCodePointBreakIterator::getLastCodePoint &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02bfee9a7490bd9c9833a3aac81ba83fa25b68b2" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539629e6e2f0b09d02247864c13e0f4143ba8343" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63de41578f73a1932ec0e4194e9e1151d542fce" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9910011e7b0b81480c0ab42aa6c9d3fc858dc7" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::create</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8435b3234409061258b3fb886f1c54200c0807c" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::create &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9aae1447d976072c77af6960658204818d1081" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::create -- datefmt_create -- IntlDateFormatter::__construct &amp;mdash; Create a date formatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28639a1678aa203595ec55ae14140ae142086dc" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50fa9f58b9b2ff34fe54af1bb8ed041ec0ff6447" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::format &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcebc28e79f0cbe3cab0ce645a931dcb71b4d67" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::format -- datefmt_format &amp;mdash; Format the date/time value as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca2c2516552c3d7f2bb26fb1fceb6be41c92726e" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::formatObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07dab892d2cde5c73c2fedb66554ad097140a053" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::formatObject &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78eb55109e97d545afc3cdec10075271c632985" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::formatObject -- datefmt_format_object &amp;mdash; Formats an object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3946d026b744dca6c3e57da0011ccec872bc96c7" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getCalendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec32eec5d1bb2936295e66da9f2e754937e2210" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getCalendar &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c433c95a37801a55926a40974efff49414c83d68" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getCalendar -- datefmt_get_calendar &amp;mdash; Get the calendar type used for the IntlDateFormatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec21dba439a4048f639b225c0a101da67298f7f" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getCalendarObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13f759bc97a66347a98ba618dd926b008e5253f3" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getCalendarObject &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1fec844d8dc602d20e74da7085617bb11158f44" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getCalendarObject -- datefmt_get_calendar_object &amp;mdash; Get copy of formatterʼs calendar object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7624393f72d31ef7732508deddc4ba1d9944df98" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getDateType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61caf90c9f271b25d31594705e095b8023d8fd31" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getDateType &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d1670333b602aa837a8f8562394129d6f6697db" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getDateType -- datefmt_get_datetype &amp;mdash; Get the datetype used for the IntlDateFormatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3dc983a5ba0fed6345a1e4c12dc5195baa4fb72" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getErrorCode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2cc050dd79d005daa24334118685c80dfe370bb" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getErrorCode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c460f1d96885b421307e9881bbdda1606ce5a092" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getErrorCode -- datefmt_get_error_code &amp;mdash; Get the error code from last operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="028e97149062ffd5378f377f983ab48f7dcc58bc" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getErrorMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b22ed6e69d2d60cdbeeaade8b7818354fc99a3" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getErrorMessage &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fa38541d3313948292189f0c69be44a4ec2b66c" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getErrorMessage -- datefmt_get_error_message &amp;mdash; Get the error text from the last operation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0cf3e4b9da3064424ca98e52a555477a02f9dd" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getLocale</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ea2af5e41278a64d10896249e9575b66c81f27" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getLocale &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c1919d1b1afd5feb6e5a952db7d27dd413c184" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getLocale -- datefmt_get_locale &amp;mdash; Get the locale used by formatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922e641176aa3ecada3654af1e87618d89cf7bb9" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getPattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987ddda0296d21d8f5750da38a84f8b153d7b97e" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getPattern &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5348531d7bbdf0aaba6d5245586ec94f07cc60" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getPattern -- datefmt_get_pattern &amp;mdash; Get the pattern used for the IntlDateFormatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52763c66b481dfdc8c6a7ae70c9deec5b35a25de" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getTimeType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9692aa40e54d3e0bed0bca70a5dbe0382723640" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getTimeType &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a67af49af1df78fd2bf288f17ffde0b7b7abf1" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getTimeType -- datefmt_get_timetype &amp;mdash; Get the timetype used for the IntlDateFormatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c9d3a3bab81ab17634d6530970657f0bf62ee06" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getTimeZone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99b3f7e9065e8623b3163a56a55f9167c5da9a6" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getTimeZone &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fea12df22a1d31bd89e12fd98e0436a814c0c3" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getTimeZone -- datefmt_get_timezone &amp;mdash; Get formatterʼs timezone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7b42f207da0c090558ec388472c26e898a0821" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getTimeZoneId</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32417431f875e99cc055c5fe9cf234f0caffb1cf" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getTimeZoneId &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="475b372137e3f3fd6ad3799c61cc3991ca0d95e6" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::getTimeZoneId -- datefmt_get_timezone_id &amp;mdash; Get the timezone-id used for the IntlDateFormatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ed73e9029c7207b7502480b4a138d16f8a1723" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::isLenient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fabd668cd860aeca2eae4083e883b39c35ae8b75" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::isLenient &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b74d769ecd92c233c1a193e67314f8a4745d37" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::isLenient -- datefmt_is_lenient &amp;mdash; Get the lenient used for the IntlDateFormatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a270598d5ef312a9922bf003cae022f312c5b69e" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::localtime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5832c1778a5d3547b2de156e4f7b67c599d989fb" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::localtime &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377fc56cdd93bbfd6ef9482b646f968f8105de23" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::localtime -- datefmt_localtime &amp;mdash; Parse string to a field-based time value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a5edbdd7011597ef87c3049262e2037555e6c5" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::parse</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a703436f6f49c81753f39a8a24473a881deb415f" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::parse &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15448e319d2b1138842932e8168e7fc9cc40175f" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::parse -- datefmt_parse &amp;mdash; Parse string to a timestamp value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0772b349372487daddcf539e2ea8984af427736" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setCalendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c99f0dea6952d938b12bb88e31619967a743076e" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setCalendar &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c82bfaa1134adeb5ea0f8a85b2cd1e10df12bebb" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setCalendar -- datefmt_set_calendar &amp;mdash; Sets the calendar type used by the formatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5474a99770235edf182685605a42279ff69d1738" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setLenient</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2392efd846720a36136866d89c8ee826a9c26a0" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setLenient &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9324ae6b18a036fcdde45bb2eeda74f3c110292a" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setLenient -- datefmt_set_lenient &amp;mdash; Set the leniency of the parser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b956ac8572888af70238a342712d7100c4577989" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setPattern</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a39f3f95e91cffe1231f07ab66626023d7aa6650" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setPattern &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af09723de99e5570d1c3745c6994cb790af345c" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setPattern -- datefmt_set_pattern &amp;mdash; Set the pattern used for the IntlDateFormatter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8627968146f404a2caefcf3a2ec0f40d6306f896" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setTimeZone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f672c696d4a8ef83213930e4e2e58a4a37a8edaf" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setTimeZone &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f33a2c959ace42c856588422c575684f1ac28a" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setTimeZone -- datefmt_set_timezone &amp;mdash; Sets formatterʼs timezone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa49ff8d3a670269f155e6f75e52cf6f3d4b71f2" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setTimeZone()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c010c46847be795ce3b2c598c12894f49e418a" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setTimeZoneId</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8532ac44589e55f1d272b7d402c9db46f5a3d248" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setTimeZoneId &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9775f596e6e25aa0827785d07d458d7374ee1e4c" translate="yes" xml:space="preserve">
          <source>IntlDateFormatter::setTimeZoneId -- datefmt_set_timezone_id &amp;mdash; Sets the time zone to use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6c82e55918c613ea16a0699f4b8ba2dd4810c42" translate="yes" xml:space="preserve">
          <source>IntlException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd54659997c1f5a18c424ba6fea51fe78659d8ed" translate="yes" xml:space="preserve">
          <source>IntlException &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2427f01f48d347a507953b40601260ae7ce049" translate="yes" xml:space="preserve">
          <source>IntlGregorianCalendar &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7e9e7ba9db923cc2592422e1f23b4e55a47eed" translate="yes" xml:space="preserve">
          <source>IntlGregorianCalendar (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d464e85c43b6548e040ba4e4bdce53a38c1c9fe" translate="yes" xml:space="preserve">
          <source>IntlGregorianCalendar::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b015564743e9b80c588ec892f57814575b4cee8" translate="yes" xml:space="preserve">
          <source>IntlGregorianCalendar::__construct &amp;mdash; Create the Gregorian Calendar class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed151300e90602a74e5f36e35afae7c659a9789" translate="yes" xml:space="preserve">
          <source>IntlGregorianCalendar::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="812b94f91e8dfc3fa0cb60e36baff03682adc654" translate="yes" xml:space="preserve">
          <source>IntlGregorianCalendar::getGregorianChange</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0dee7301057818bedef9c19d1b88e3a70a92e1" translate="yes" xml:space="preserve">
          <source>IntlGregorianCalendar::getGregorianChange &amp;mdash; Get the Gregorian Calendar change date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fa3c1309e4dfdcdf8729488e9609c994e2f0f4a" translate="yes" xml:space="preserve">
          <source>IntlGregorianCalendar::getGregorianChange &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d579bd136eebea967532d15d440e770162895c" translate="yes" xml:space="preserve">
          <source>IntlGregorianCalendar::isLeapYear</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd581596636bc79b3b49b341306a815f65add6a" translate="yes" xml:space="preserve">
          <source>IntlGregorianCalendar::isLeapYear &amp;mdash; Determine if the given year is a leap year</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af39b6a19a1aa13b65d521ff4a4f5e3f938e932" translate="yes" xml:space="preserve">
          <source>IntlGregorianCalendar::isLeapYear &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e19c88908418860ad7d3ae8301396b81f252b427" translate="yes" xml:space="preserve">
          <source>IntlGregorianCalendar::setGregorianChange</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8950c2c4c6c6fde0bd1d3f10d6b01b7363b128b" translate="yes" xml:space="preserve">
          <source>IntlGregorianCalendar::setGregorianChange &amp;mdash; Set the Gregorian Calendar the change date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ab1d95054d0045bea5d62797291a3445e00e45" translate="yes" xml:space="preserve">
          <source>IntlGregorianCalendar::setGregorianChange &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac5a1e910bcd7a49247da18dee54ab9a47828a4" translate="yes" xml:space="preserve">
          <source>IntlIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba97cb040fadde9cc21485c146868e46d2514a81" translate="yes" xml:space="preserve">
          <source>IntlIterator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c77e6519149decbff9cef9946d2db3e4a5a5e4" translate="yes" xml:space="preserve">
          <source>IntlIterator::current</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="359f028173b98063ae8dcc0aab1c28cb0c8fc268" translate="yes" xml:space="preserve">
          <source>IntlIterator::current &amp;mdash; Get the current element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9330aecf8ca2e4d32b2c4475b05d10539ad865b" translate="yes" xml:space="preserve">
          <source>IntlIterator::current &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8781307b3e22a8c3e88df6f65322ba9c67e6622f" translate="yes" xml:space="preserve">
          <source>IntlIterator::key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8417723c19e5b0a64f45cd62f6528d0132ff5c4a" translate="yes" xml:space="preserve">
          <source>IntlIterator::key &amp;mdash; Get the current key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ff41ead9a8d0fadf97477e464706413518e3e4" translate="yes" xml:space="preserve">
          <source>IntlIterator::key &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f0ced6a1702189fe6533606edd073b0eba4569f" translate="yes" xml:space="preserve">
          <source>IntlIterator::next</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fb0041b7b478038150f7227059201e55ad29b6" translate="yes" xml:space="preserve">
          <source>IntlIterator::next &amp;mdash; Move forward to the next element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9933b5ac38030d28c0d75b3800571793296598" translate="yes" xml:space="preserve">
          <source>IntlIterator::next &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8066e193f2fa3bc82642442eabebe575921bda8" translate="yes" xml:space="preserve">
          <source>IntlIterator::rewind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d94e8daf5a401bfbbd2bacffb5a205e8cf078c4" translate="yes" xml:space="preserve">
          <source>IntlIterator::rewind &amp;mdash; Rewind the iterator to the first element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="462e0647a084c82f2141a493625af685e785c38b" translate="yes" xml:space="preserve">
          <source>IntlIterator::rewind &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bcdc3803b6e2488d9c8e34908b4c114369140e" translate="yes" xml:space="preserve">
          <source>IntlIterator::valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1313d12b2d118a8c14b49536a11aa904921237b" translate="yes" xml:space="preserve">
          <source>IntlIterator::valid &amp;mdash; Check if current position is valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d4cfd1a771baf2d234e612f7d5390ccb9587b4" translate="yes" xml:space="preserve">
          <source>IntlIterator::valid &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f663f53690ef11b76d3bdcbacd2e703b8a496b" translate="yes" xml:space="preserve">
          <source>IntlPartsIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3368c55ef51f9d862074e668f5122e4bfbdd24" translate="yes" xml:space="preserve">
          <source>IntlPartsIterator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8633f186879600bfc31ab174fd00f355bfa11e5f" translate="yes" xml:space="preserve">
          <source>IntlPartsIterator::getBreakIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95cd3cd3b08a8017af3e34d02f94c7ebf7935b5" translate="yes" xml:space="preserve">
          <source>IntlPartsIterator::getBreakIterator &amp;mdash; Get IntlBreakIterator backing this parts iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4d5ab07af95340a935dd7d528678f97c399672" translate="yes" xml:space="preserve">
          <source>IntlPartsIterator::getBreakIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2200b35bf29ed2e267018e392ecf02f29945b478" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc4070878040073513d470a790c8183ce485155" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="966f1974426e979816f27c0fb671c5233db45dc3" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9f284364ca33819985abcc9d86a8237426d27d" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::__construct &amp;mdash; Create iterator from ruleset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437d5e7b2f5111ce8de4b2bb33aa71abc8b85c84" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04b75f0080911f06d042e5f2d06f81d5068ac90b" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::getBinaryRules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd63da1dee6bb32fe82514d6d5daab8822da00a" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::getBinaryRules &amp;mdash; Get the binary form of compiled rules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78b74b501c4de9cd8ac15feec4a9f8ac9ba0a3a" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::getBinaryRules &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49df67adb94935d03e71c8d61c6452677c36a71a" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::getRuleStatus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc31a30f5c81d5290f00ed22ddfafd353759bf8" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::getRuleStatus &amp;mdash; Get the largest status value from the break rules that determined the current break position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f15170662f58ca140859a1a08c59a8a6ef4a09" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::getRuleStatus &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63b93a7c67d5595676ba86203b16d2c4c72bb4d" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::getRuleStatusVec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c98e97903f45bca856acfa50349585e99ef6639c" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::getRuleStatusVec &amp;mdash; Get the status values from the break rules that determined the current break position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f8d29b9894be8fa6f65605fb26c757ee440c91" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::getRuleStatusVec &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b1fd09dbb287e7f70f629daf7dd029382c894f" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::getRules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d3ce75b207c848a7bf1a07e9719fd21f1215a7" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::getRules &amp;mdash; Get the rule set used to create this object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3011a680a082844414aa2da72046f513c1540626" translate="yes" xml:space="preserve">
          <source>IntlRuleBasedBreakIterator::getRules &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22739caceb2a5aff2951a72a253886d482ec8e59" translate="yes" xml:space="preserve">
          <source>IntlTimeZone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c72294f338080c578f78b40e7ed21d434e0043" translate="yes" xml:space="preserve">
          <source>IntlTimeZone &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d7026eef6cdf0448de896a0be62031d07d083cb" translate="yes" xml:space="preserve">
          <source>IntlTimeZone (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b6bc7b1e111d6e60fbee3a7d1e5e1932abcbbf7" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::countEquivalentIDs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acf840883a28b6217d45000ab0eda439ba3854f" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::countEquivalentIDs &amp;mdash; Get the number of IDs in the equivalency group that includes the given ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7e6dc3780a0bbd548dd99d0c0faf2d0e264c5d" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::countEquivalentIDs &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ff7918c351014d211703fcd09b44d23e004bfa1" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::createDefault</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d596250a94104d30bc99ef6dcede62da91ae18d" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::createDefault &amp;mdash; Create a new copy of the default timezone for this host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5338c43b2316b6feea6fb51e5ead8a76fcf10be9" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::createDefault &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fa6ceeaaa3978faac293d603f2ad6fd7ac5254" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::createEnumeration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83cd5ba0fb84963aee7e105b81c706a5af21e6cc" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::createEnumeration &amp;mdash; Get an enumeration over time zone IDs associated with the given country or offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611e28ac179bdaad2f4b9dc69b62fd8a6c664627" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::createEnumeration &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d872a6278e48d9583f09d21e23c7d07824b9f87" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::createTimeZone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a1e2592727dda26c72d13a4e1ca9773051fe55c" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::createTimeZone &amp;mdash; Create a timezone object for the given ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaaa8032caa5a6b63b4c18e7cb30116ed3f6475a" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::createTimeZone &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89082257bbb32790467528b99110670ae8ff0880" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::createTimeZoneIDEnumeration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec6cc19276f8edf7f28bc3306d8aaa120c00b5f" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::createTimeZoneIDEnumeration &amp;mdash; Get an enumeration over system time zone IDs with the given filter conditions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a49f6c2069c9f1ccecc123a9674ec4c1d956d7ac" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::createTimeZoneIDEnumeration &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7baa1c0ac4e88cfe7397624826e74da90bb3dd2d" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::fromDateTimeZone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f82aeda35acc389aca22c4c29e166dd63ef59182" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::fromDateTimeZone &amp;mdash; Create a timezone object from &lt;a href=&quot;class.datetimezone&quot;&gt;DateTimeZone&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ffb941c304c56b457287343bf73e8d9cc43441" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::fromDateTimeZone &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="363188d4336fe17be074d8a6e36e32008af50733" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getCanonicalID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4d17656d97e37ec4237c7fd541689d8749e17b" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getCanonicalID &amp;mdash; Get the canonical system timezone ID or the normalized custom time zone ID for the given time zone ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6c7867a8c66db7cf255333b918d6776423319f" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getCanonicalID &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087a4ea53b2e2496c5fbda894ceaef342cebdb56" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getDSTSavings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694ae84caa319c7c7410a720915cfa219d834546" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getDSTSavings &amp;mdash; Get the amount of time to be added to local standard time to get local wall clock time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0da13c48835b2e6a098911229058d2d9b23caa4" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getDSTSavings &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99f89e542be978056357c23e0d35c600cfa8dbb" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getDisplayName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7d147011f3b323581d497e1d9c3b19f4bc5de3" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getDisplayName &amp;mdash; Get a name of this time zone suitable for presentation to the user</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ac81ad5a1a8a3ce821dbe8058bbed2bec95231" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getDisplayName &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef6dda3fadcc4fcaca921473bdd8ce85f44916c" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getEquivalentID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73bb7175c58d87e39eff97722730092d9f8ad41d" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getEquivalentID &amp;mdash; Get an ID in the equivalency group that includes the given ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d436d0698b348b66c9a54e5a66299a1614ca0ba" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getEquivalentID &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63845fa40467da51271d3b325438b8ac947bf59" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getErrorCode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3209037f70f3496a39e4cae6e2bbc1a93bc333d" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getErrorCode &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4483948f81841875c7741c3baef2a336ca4cd79" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getErrorCode -- intltz_get_error_code &amp;mdash; Get last error code on the object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd387b460b3fc22271b32feb6a1bd46064dccb62" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getErrorMessage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="defc8ade7ce3df14a5d407f8df8cf8a35d30c534" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getErrorMessage &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72514e9d013d0eb41002e7a00bc9a3745417ffdf" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getErrorMessage -- intltz_get_error_message &amp;mdash; Get last error message on the object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3457bdcd4744996079390f0fa1004e51b4fab5e1" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getGMT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04471f67447a683accb2e0b7a42ce6a8f6d11fae" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getGMT &amp;mdash; Create GMT (UTC) timezone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a49154714eeaca0f270a95c56c7032d293c7b9" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getGMT &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5e93e18ab76c415df5046f77b444ceba192d0c" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de18573f9b43cc0f24240839b511f143fd3029b4" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getID &amp;mdash; Get timezone ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a4dc19a1c66fbc695bcfaedf55a123fcedf5c14" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getID &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb79bca0769762ac7a5ef7bb5ff23e0f778f15ba" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getIDForWindowsID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72eb4d07f24efc734a2a7cd41a17754893b1ead" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getIDForWindowsID &amp;mdash; Translate a Windows timezone into a system timezone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3674e1c72b913e1183d76a442baa0dd5756408" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getIDForWindowsID &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64be8a429f7aa02a1971e68baf89e652ae8b7f8a" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getOffset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a885ddd49007f31a99d82408202248a02a9921" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getOffset &amp;mdash; Get the time zone raw and GMT offset for the given moment in time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da1683959e73245539c3af730fdd2faae59196b2" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getOffset &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9cfce4dc5b0b506e131d1a0667a2c1c2966987" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getRawOffset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332dd5bdab22eaa33fa89893dcb75e36ccf73530" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getRawOffset &amp;mdash; Get the raw GMT offset (before taking daylight savings time into account</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac45a931c35035e037f87380571afaec226d4575" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getRawOffset &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a733206776194acd6a785cadf8452bd59c7401b" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getRegion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb83bc28a6e0a773712f258af0befde655bd781" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getRegion &amp;mdash; Get the region code associated with the given system time zone ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe5de364cee9ba2f4f618c530308bff58f1fc79" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getRegion &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46bd119777d25a5ab6fe627b1557b689121c78c" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getTZDataVersion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b7612181f58b7ebed1be514c277484214be2a2" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getTZDataVersion &amp;mdash; Get the timezone data version currently used by ICU</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5905ae0bb9176bb452996969fa1e72d0d59af7df" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getTZDataVersion &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bb5b5a3d168d4b4f7dbe704d23cc60c6668ac0" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getUnknown</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ce9af528a9f3b6e84820112a5256c6481da4a6" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getUnknown &amp;mdash; Get the &quot;unknown&quot; time zone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3934f334ee8da8f3a4e77631d8edc3f2da5e49a5" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getUnknown &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3223b81230ee8bd448edc71191dddbe064c67c88" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getWindowsID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ed0ae71fa3b006ba3c0363b4a5ccc5ea1fa7f6" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getWindowsID &amp;mdash; Translate a system timezone into a Windows timezone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77da080e44336d82dbe8da2c688e492709a0de66" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::getWindowsID &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9c97d1fc8fe0615b13c7996ea57baf3e867992" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::hasSameRules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e248d9395925365b77046e290d86feba06424d8d" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::hasSameRules &amp;mdash; Check if this zone has the same rules and offset as another zone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fe0981aaacc7a429e31e9bd0d9631899e530f57" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::hasSameRules &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362d8f389f861a2e1a17ab7dae1bee8ff48ac2bc" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::toDateTimeZone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226968772e609b633d2d0c439a31cd62b48351c0" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::toDateTimeZone &amp;mdash; Convert to &lt;a href=&quot;class.datetimezone&quot;&gt;DateTimeZone&lt;/a&gt; object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78cfa5b07c8ed895e0740f36f9e4ced296d21bc3" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::toDateTimeZone &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ecea140999beb1f0621e1c43335555293aa1fea" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::useDaylightTime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f66ca8090d4cd36cdacb28cce0088fc3b53f7f6" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::useDaylightTime &amp;mdash; Check if this time zone uses daylight savings time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aec0c8935e38accc07e505e400b005ef9936ad5" translate="yes" xml:space="preserve">
          <source>IntlTimeZone::useDaylightTime &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29379a55cb12d4132d1a44173520bb14d82e78d6" translate="yes" xml:space="preserve">
          <source>Introduce &lt;strong&gt;&lt;code&gt;STREAM_CRYPTO_METHOD_ANY_CLIENT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_CRYPTO_METHOD_TLSv1_0_CLIENT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_CRYPTO_METHOD_TLSv1_1_CLIENT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_CRYPTO_METHOD_TLSv1_2_CLIENT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_CRYPTO_METHOD_ANY_SERVER&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_CRYPTO_METHOD_TLSv1_0_SERVER&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_CRYPTO_METHOD_TLSv1_1_SERVER&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;STREAM_CRYPTO_METHOD_TLSv1_2_SERVER&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5694964e87b920760274819de80f3ea7ec8b81ef" translate="yes" xml:space="preserve">
          <source>Introduced &lt;a href=&quot;https://secure.php.net/manual/en/ini.core.php#ini.request-order&quot;&gt;request_order&lt;/a&gt;. This directive affects the contents of &lt;var&gt;&lt;var&gt;$_REQUEST&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a5c9b3fc35465729bc9aae8d4c4a7847a9662d" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURLINFO_CERTINFO&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0d54b196fe94f120a9ed3bcbfdb8f0fc50d2bd" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURLINFO_HEADER_OUT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e653b9c6a01993c078e86886469dea2831cf5043" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURLINFO_PRIMARY_IP&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_PRIMARY_PORT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_LOCAL_IP&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;CURLINFO_LOCAL_PORT&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17330ca7b00430ab6f38d13ccbed112de3110179" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURLINFO_PRIVATE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd8bd5b554118b32f9910bb4bd6657729c19573" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURLINFO_REDIRECT_URL&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf180e01cca3f2e9c868f4f5f7516feac93b605" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURLINFO_RESPONSE_CODE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_HTTP_CONNECTCODE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_HTTPAUTH_AVAIL&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_PROXYAUTH_AVAIL&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_OS_ERRNO&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_NUM_CONNECTS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_SSL_ENGINES&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_COOKIELIST&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_FTP_ENTRY_PATH&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_APPCONNECT_TIME&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_CONDITION_UNMET&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_RTSP_CLIENT_CSEQ&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_RTSP_CSEQ_RECV&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLINFO_RTSP_SERVER_CSEQ&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;CURLINFO_RTSP_SESSION_ID&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ba08ad90c3d07eeb0fa33cbdf7aa1110427a5b" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLMOPT_MAX_HOST_CONNECTIONS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLMOPT_MAX_PIPELINE_LENGTH&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;CURLMOPT_MAX_TOTAL_CONNECTIONS&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009151b350be6cc45acb4d626e52167ada243739" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURLMOPT_PUSHFUNCTION&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726ea536d23edb0a497838dec858184c8dbff236" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURLOPT_AUTOREFERER&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_BINARYTRANSFER&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_FTPSSLAUTH&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_PROXYAUTH&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;CURLOPT_TIMECONDITION&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5bbc7e58b93dad69268145271e5bb2f6b710f08" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURLOPT_FTP_USE_EPRT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_NOSIGNAL&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_UNRESTRICTED_AUTH&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_BUFFERSIZE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_HTTPAUTH&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_PROXYPORT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_PROXYTYPE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_SSLCERTTYPE&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;CURLOPT_HTTP200ALIASES&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc48497f199d4ce69e2af020b4eca35424526081" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURLOPT_PRIVATE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ec5fc22f177d59055a8dc79b4d24211be10f4b" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURLOPT_PROGRESSFUNCTION&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698cfa9d6b7bda25aae656785f09c91186ff07b7" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURLOPT_PROTOCOLS&lt;/code&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;code&gt;CURLOPT_REDIR_PROTOCOLS&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364dd0941d7b799551ef1b53eddd2a4650f81912" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURLOPT_SHARE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f55674154e77b091c580461f855339bd5dfe242" translate="yes" xml:space="preserve">
          <source>Introduced &lt;strong&gt;&lt;code&gt;CURL_HTTP_VERSION_2&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURL_HTTP_VERSION_2TLS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURL_REDIR_POST_301&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURL_REDIR_POST_302&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURL_REDIR_POST_303&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURL_REDIR_POST_ALL&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURL_VERSION_KERBEROS5&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURL_VERSION_PSL&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURL_VERSION_UNIX_SOCKETS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLAUTH_NEGOTIATE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLAUTH_NTLM_WB&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLFTP_CREATE_DIR&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLFTP_CREATE_DIR_NONE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLFTP_CREATE_DIR_RETRY&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLHEADER_SEPARATE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLHEADER_UNIFIED&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLMOPT_MAX_HOST_CONNECTIONS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLMOPT_MAX_PIPELINE_LENGTH&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLMOPT_MAX_TOTAL_CONNECTIONS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_CONNECT_TO&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_DEFAULT_PROTOCOL&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_DNS_INTERFACE&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_DNS_LOCAL_IP4&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_DNS_LOCAL_IP6&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_EXPECT_100_TIMEOUT_MS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_HEADEROPT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_LOGIN_OPTIONS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_PATH_AS_IS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_PINNEDPUBLICKEY&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_PIPEWAIT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_PROXY_SERVICE_NAME&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_PROXYHEADER&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_SASL_IR&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_SERVICE_NAME&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_SSL_ENABLE_ALPN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_SSL_ENABLE_NPN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_SSL_FALSESTART&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_SSL_VERIFYSTATUS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_STREAM_WEIGHT&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_TCP_FASTOPEN&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_TFTP_NO_OPTIONS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_UNIX_SOCKET_PATH&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLOPT_XOAUTH2_BEARER&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROTO_SMB&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROTO_SMBS&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLPROXY_HTTP_1_0&lt;/code&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;code&gt;CURLSSH_AUTH_AGENT&lt;/code&gt;&lt;/strong&gt; and &lt;strong&gt;&lt;code&gt;CURLSSLOPT_NO_REVOKE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644dd93171703d8bb72f31b4d04043f5ff8d4f51" translate="yes" xml:space="preserve">
          <source>Introduced &lt;var&gt;&lt;var&gt;$_COOKIE&lt;/var&gt;&lt;/var&gt; that deprecated &lt;var&gt;&lt;var&gt;$HTTP_COOKIE_VARS&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2465dee0bc2c03d19cfe630dee80eef7673027" translate="yes" xml:space="preserve">
          <source>Introduced &lt;var&gt;&lt;var&gt;$_ENV&lt;/var&gt;&lt;/var&gt; that deprecated &lt;var&gt;&lt;var&gt;$HTTP_ENV_VARS&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b69c48cf86d0dedb67be4c7f0e33573218b622" translate="yes" xml:space="preserve">
          <source>Introduced &lt;var&gt;&lt;var&gt;$_FILES&lt;/var&gt;&lt;/var&gt; that deprecated &lt;var&gt;&lt;var&gt;$HTTP_POST_FILES&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4d1226034a0fc12a68c023d497ca6b792223df" translate="yes" xml:space="preserve">
          <source>Introduced &lt;var&gt;&lt;var&gt;$_GET&lt;/var&gt;&lt;/var&gt; that deprecated &lt;var&gt;&lt;var&gt;$HTTP_GET_VARS&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186e5cd960c5c041148de7a0d0b2c780f351e117" translate="yes" xml:space="preserve">
          <source>Introduced &lt;var&gt;&lt;var&gt;$_POST&lt;/var&gt;&lt;/var&gt; that deprecated &lt;var&gt;&lt;var&gt;$HTTP_POST_VARS&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55f6162c96bb8b8cf9df0793694029c64f0fe43" translate="yes" xml:space="preserve">
          <source>Introduced &lt;var&gt;&lt;var&gt;$_REQUEST&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8b93aa977c5b890c560e102529911a3cc087d6" translate="yes" xml:space="preserve">
          <source>Introduced &lt;var&gt;&lt;var&gt;$_SERVER&lt;/var&gt;&lt;/var&gt; that deprecated &lt;var&gt;&lt;var&gt;$HTTP_SERVER_VARS&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f37023702888c49b0b8b561d9f89750280f328b" translate="yes" xml:space="preserve">
          <source>Introduced &lt;var&gt;&lt;var&gt;$_SESSION&lt;/var&gt;&lt;/var&gt; that deprecated &lt;var&gt;&lt;var&gt;$HTTP_SESSION_VARS&lt;/var&gt;&lt;/var&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b94e192adccfc774494da1891d23c65732c68cf" translate="yes" xml:space="preserve">
          <source>Introduces a bias for non-straight seams. This parameter is typically 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83c071cc3aa8b40402cc824f165214e1b41aac1d" translate="yes" xml:space="preserve">
          <source>Invalid &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;iv&lt;/code&gt; sizes are no longer accepted. &lt;strong&gt;mcrypt_decrypt()&lt;/strong&gt; will now throw a warning and return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the inputs are invalid. Previously keys and IVs were padded with '&lt;em&gt;\0&lt;/em&gt;' bytes to the next valid size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4207f7f339c7e9dbc325eb0e8018e2168e2eca" translate="yes" xml:space="preserve">
          <source>Invalid &lt;code&gt;key&lt;/code&gt; and &lt;code&gt;iv&lt;/code&gt; sizes are no longer accepted. &lt;strong&gt;mcrypt_encrypt()&lt;/strong&gt; will now throw a warning and return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if the inputs are invalid. Previously keys and IVs were padded with '&lt;em&gt;\0&lt;/em&gt;' bytes to the next valid size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b1102dce7794fea1cf79ee6d105db15516f4c6" translate="yes" xml:space="preserve">
          <source>Invalid argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="201b6420dae16e70c187eeb4440ddc486e29a73c" translate="yes" xml:space="preserve">
          <source>Invalid arguments detected on the PHP side (before invoking functions of the ICU library) are not recorded for the purposes of this function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99851ff1736486acfe714a9a284affb432566716" translate="yes" xml:space="preserve">
          <source>Invalid non-lowercased variants of the &lt;em&gt;true&lt;/em&gt;, &lt;em&gt;false&lt;/em&gt; and &lt;em&gt;null&lt;/em&gt; literals are no longer accepted as valid input, and will generate warnings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3502c34657441f1546c932297d241c3619c3b3" translate="yes" xml:space="preserve">
          <source>Invalid or failing queries will return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d7cc05da2bb4493bd5883650e6920b0504d38ac" translate="yes" xml:space="preserve">
          <source>Invalid or malformed JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fcfb84bbc0eaaa7342e29f43972db8d90ae878" translate="yes" xml:space="preserve">
          <source>Invalid timezone identifiers (including empty strings) are no longer allowed for &lt;code&gt;timezone&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d0d4182ff709ecbe222db5075ae168664f6b59" translate="yes" xml:space="preserve">
          <source>InvalidArgumentException &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7a3819c1d3f325509acaf6cf8a2bca05c9e8b7" translate="yes" xml:space="preserve">
          <source>InvalidArgumentException (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650a193fc433c57c378284250152148ce6c5de02" translate="yes" xml:space="preserve">
          <source>Inverse hyperbolic tangent of &lt;code&gt;arg&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e37c86a75cd7e661464bd34fd8134b232fbee5a" translate="yes" xml:space="preserve">
          <source>Invoke all pending watchers while resetting their pending state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97034f10de6a45b9c623ad01c31577f73be63529" translate="yes" xml:space="preserve">
          <source>Invokes a reflected function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1a1e697ca14bced59f89b04ea87328389f35ba2" translate="yes" xml:space="preserve">
          <source>Invokes a reflected method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5964a968a05fbe7a443b629d20564cab5d0f59ae" translate="yes" xml:space="preserve">
          <source>Invokes the function and pass its arguments as array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c7a48e6d86b6f2e8b5a92e78c65a8ec3199436" translate="yes" xml:space="preserve">
          <source>Invokes the reflected method and pass its arguments as array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d97c73661d5ec76cc6a85449f9dd017492a7c95" translate="yes" xml:space="preserve">
          <source>Invokes the watcher callback with the given received events bit mask.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24453318fd50642993a806c946f5d21e64e0511b" translate="yes" xml:space="preserve">
          <source>Is &lt;em&gt;1&lt;/em&gt; if the interval represents a negative time period and &lt;em&gt;0&lt;/em&gt; otherwise. See &lt;a href=&quot;dateinterval.format&quot;&gt;DateInterval::format()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d1b6e24071d5327b2806b233fb64a9af2f087b" translate="yes" xml:space="preserve">
          <source>Is a BCP 47 compliant language tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762c8dd21c0938680588d0dbf7206192447642da" translate="yes" xml:space="preserve">
          <source>Is a comma separated list of sections that need to be present in file to produce a result &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;. If none of the requested sections could be found the return value is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb840afe06b980f8a48f15747cb1f01e019ee4ce" translate="yes" xml:space="preserve">
          <source>Is a connection id or result id on which to change the settings. For SQLSetConnectOption(), this is a connection id. For SQLSetStmtOption(), this is a result id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bb56c9599b54c8664cf95157d3df900ed28da8" translate="yes" xml:space="preserve">
          <source>Is a convenience method that scales an image proportionally to one-half its original size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21ac114344d14845554a6874fcfc833abe1ae7af" translate="yes" xml:space="preserve">
          <source>Is a convenience method that scales an image proportionally to twice its original size.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490702d4a084c88b307e0700aabdbf0a3541ea14" translate="yes" xml:space="preserve">
          <source>Is called after calling &lt;strong&gt;RecursiveIteratorIterator::getChildren()&lt;/strong&gt;, and its associated &lt;a href=&quot;recursiveiteratoriterator.rewind&quot;&gt;RecursiveIteratorIterator::rewind()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97c68e83abd3ad3f9e53393f664119dfbcb1f14" translate="yes" xml:space="preserve">
          <source>Is like Imagick::ThresholdImage() but force all pixels above the threshold into white while leaving all pixels below the threshold unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecab92190dce42ceb3aa1fa9c36aec8349e30607" translate="yes" xml:space="preserve">
          <source>Is like Imagick::thresholdImage() but forces all pixels below the threshold into black while leaving all pixels above the threshold unchanged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7b5f9dafcadef1101a740834b1fdefc013311e" translate="yes" xml:space="preserve">
          <source>Is specified by character code names before conversion. It is either an &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;, or a comma separated enumerated list. If &lt;code&gt;from_encoding&lt;/code&gt; is not specified, the internal encoding will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e509b001b2bf2fdac344579ed138e43c1fa2957b" translate="yes" xml:space="preserve">
          <source>Is the ODBC function to use. The value should be 1 for SQLSetConnectOption() and 2 for SQLSetStmtOption().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b1b0331921e3ca13bc175ae87add0e742e5c910" translate="yes" xml:space="preserve">
          <source>Issue a call to remote RPC method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9595a77569c4b8c8d6c6f753928d1c739cb4aa" translate="yes" xml:space="preserve">
          <source>Issues &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a59141852dfd162f486766573f26f784d5c081" translate="yes" xml:space="preserve">
          <source>Issues &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; if libxml was built without schema support, the schema contains errors or if &lt;a href=&quot;xmlreader.read&quot;&gt;XMLReader::read()&lt;/a&gt; has already been called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d826ac2060c39f6a66a0d848ac108db967a8c517" translate="yes" xml:space="preserve">
          <source>Issues E_WARNING with type unsupported by XMLRPC.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12afb962ded385148cc154fdf396ce7c3e728891" translate="yes" xml:space="preserve">
          <source>Issues an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; and returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if &lt;code&gt;max&lt;/code&gt; &amp;lt; &lt;code&gt;min&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1469b9b2dcaf5b1ed502c4142f863d4b024bae4e" translate="yes" xml:space="preserve">
          <source>Issues an &lt;strong&gt;&lt;code&gt;E_WARNING&lt;/code&gt;&lt;/strong&gt; and returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; if &lt;code&gt;seed&lt;/code&gt; is not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7a86b6dac97f95ab9debd7c146347ef6e535a7" translate="yes" xml:space="preserve">
          <source>It also indicates if a cryptographically strong algorithm was used to produce the pseudo-random bytes, and does this via the optional &lt;code&gt;crypto_strong&lt;/code&gt; parameter. It's rare for this to be &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;, but some systems may be broken or old.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c6e594850ba76bc09253b83caedbeec9439057" translate="yes" xml:space="preserve">
          <source>It became possible to change the modification time of a directory under Windows.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d966ba09768eb48a4ad0aee44088c2e9b138377" translate="yes" xml:space="preserve">
          <source>It became possible to pass an &lt;a href=&quot;class.intlcalendar&quot;&gt;IntlCalendar&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364a9a4ba5f20b36cc3c24aa3dd96a2b8fef04c4" translate="yes" xml:space="preserve">
          <source>It can be used multiple times with different field names to indicate multiple facet fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0b0eeb3c589e3d73d2f59c8f0dd4205558fde1" translate="yes" xml:space="preserve">
          <source>It does not indicate if the file exists or not on disk, only where the library is looking for the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7407e14e32df36f2c06dfa3ba85192e706cc2307" translate="yes" xml:space="preserve">
          <source>It does not indicate if the file is a proper database, only if it is readable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffdf3b75b60709395798e36d2d57b12179db0a47" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;r&lt;/em&gt; for read access, &lt;em&gt;w&lt;/em&gt; for read/write access to an already existing database, &lt;em&gt;c&lt;/em&gt; for read/write access and database creation if it doesn't currently exist, and &lt;em&gt;n&lt;/em&gt; for create, truncate and read/write access.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58b3601a51744c6e8e5552f494bd8710ca9793ed" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;r&lt;/em&gt; for read access, &lt;em&gt;w&lt;/em&gt; for read/write access to an already existing database, &lt;em&gt;c&lt;/em&gt; for read/write access and database creation if it doesn't currently exist, and &lt;em&gt;n&lt;/em&gt; for create, truncate and read/write access. The database is created in BTree mode, other modes (like Hash or Queue) are not supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f443b30bd7d6b632d90d8f4c2ba425869e7cb184" translate="yes" xml:space="preserve">
          <source>It is U+0009 HORIZONTAL TABULATION.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce12e9ec6f9c43b46fd53829351f0ad61af9421b" translate="yes" xml:space="preserve">
          <source>It is U+000A LINE FEED.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994c6d72149285595715065b3e3dde26709fd430" translate="yes" xml:space="preserve">
          <source>It is U+000B VERTICAL TABULATION.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869909d84c54f92301d35581a00998a92a916f3a" translate="yes" xml:space="preserve">
          <source>It is U+000C FORM FEED.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f356f1e2c1d9b740a99a2f514ec79ce0496e40" translate="yes" xml:space="preserve">
          <source>It is U+000D CARRIAGE RETURN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="390e88a2a40d63ab7ba94b00a5a2193757b9c9fd" translate="yes" xml:space="preserve">
          <source>It is U+001C FILE SEPARATOR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cac3bc593e4bab690b9a974d09d672e7df2463e" translate="yes" xml:space="preserve">
          <source>It is U+001D GROUP SEPARATOR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a552ae105c2b8dfc9e479c8845677e0ee144ccbb" translate="yes" xml:space="preserve">
          <source>It is U+001E RECORD SEPARATOR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216a5cbbbe280651257c65dcb73612ce347742c1" translate="yes" xml:space="preserve">
          <source>It is U+001F UNIT SEPARATOR.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="610ed9afca53e70aec537eea557f329eaed19673" translate="yes" xml:space="preserve">
          <source>It is a Unicode Separator character (categories &quot;Z&quot; = &quot;Zs&quot; or &quot;Zl&quot; or &quot;Zp&quot;), but is not also a non-breaking space (U+00A0 NBSP or U+2007 Figure Space or U+202F Narrow NBSP).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd11a891b5ed33837cdac86b06520f2c05f91213" translate="yes" xml:space="preserve">
          <source>It is allowed to register &lt;strong&gt;EvChild&lt;/strong&gt; watchers in the &lt;em&gt;default loop&lt;/em&gt; only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3262ad843253e5d98f4b0d8d994b93790a8c49ed" translate="yes" xml:space="preserve">
          <source>It is also possible to access class properties using variables within strings using this syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cf08d78ded0128d55c7e2b1325ecc32716c507b" translate="yes" xml:space="preserve">
          <source>It is also possible to add &lt;strong&gt;&lt;code&gt;LOCK_NB&lt;/code&gt;&lt;/strong&gt; as a bitmask to one of the above operations if you don't want &lt;strong&gt;flock()&lt;/strong&gt; to block while locking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="366ab4634a70217e5ba4d8c36cd5843439c2ecc7" translate="yes" xml:space="preserve">
          <source>It is also possible to add a &lt;a href=&quot;language.oop5.typehinting&quot;&gt;type hint&lt;/a&gt; before the &lt;em&gt;...&lt;/em&gt; token. If this is present, then all arguments captured by &lt;em&gt;...&lt;/em&gt; must be objects of the hinted class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac3b80b491e37ff55d16e317876bf1dc073e719" translate="yes" xml:space="preserve">
          <source>It is also possible to send HTML email with &lt;strong&gt;mail()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379894215ef44bd0e29eabb7b047b3e9ee1b2525" translate="yes" xml:space="preserve">
          <source>It is also possible to use bracket style delimiters where the opening and closing brackets are the starting and ending delimiter, respectively. &lt;em&gt;()&lt;/em&gt;, &lt;em&gt;{}&lt;/em&gt;, &lt;em&gt;[]&lt;/em&gt; and &lt;em&gt;&amp;lt;&amp;gt;&lt;/em&gt; are all valid bracket style delimiter pairs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f42c27285dbfa8db5e7d902c0007fa08eff220" translate="yes" xml:space="preserve">
          <source>It is also possible to use the Heredoc syntax to pass data to function arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e56aea10a21a7e8639ffa1b431437efe33725a" translate="yes" xml:space="preserve">
          <source>It is currently impossible to register resource variables in a session. For example, you cannot create a connection to a database and store the connection id as a session variable and expect the connection to still be valid the next time the session is restored. PHP functions that return a resource are identified by having a return type of &lt;em&gt;resource&lt;/em&gt; in their function definition. A list of functions that return resources are available in the &lt;a href=&quot;https://secure.php.net/manual/en/resource.php&quot;&gt;resource types&lt;/a&gt; appendix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0f3f4363c409e1136e1a8c314358a6f4e1f48a" translate="yes" xml:space="preserve">
          <source>It is easy to mistake the return values for &quot;character found at position 0&quot; and &quot;character not found&quot;. Here's how to detect the difference:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a7b021be635a9cce960fa8f3eb901855d43d33f" translate="yes" xml:space="preserve">
          <source>It is important to note that just because the mail was accepted for delivery, it does NOT mean the mail will actually reach the intended destination.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a59e246cd820544f1fd8d32f0a7b7b9a735bf4f" translate="yes" xml:space="preserve">
          <source>It is important to provide the user-supplied string as the second parameter, rather than the first.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07edfce72fa6981a18d5f2c064a7cde3864880dd" translate="yes" xml:space="preserve">
          <source>It is important to remember that the standard PHP error handler is completely bypassed for the error types specified by &lt;code&gt;error_types&lt;/code&gt; unless the callback function returns &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;. &lt;a href=&quot;function.error-reporting&quot;&gt;error_reporting()&lt;/a&gt; settings will have no effect and your error handler will be called regardless - however you are still able to read the current value of &lt;a href=&quot;https://secure.php.net/manual/en/errorfunc.configuration.php#ini.error-reporting&quot;&gt;error_reporting&lt;/a&gt; and act appropriately. Of particular note is that this value will be 0 if the statement that caused the error was prepended by the &lt;a href=&quot;language.operators.errorcontrol&quot;&gt;@ error-control operator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b8a4a3a3ccb22828b919aee59b49fa74ce959b" translate="yes" xml:space="preserve">
          <source>It is important to understand how the &lt;em&gt;switch&lt;/em&gt; statement is executed in order to avoid mistakes. The &lt;em&gt;switch&lt;/em&gt; statement executes line by line (actually, statement by statement). In the beginning, no code is executed. Only when a &lt;em&gt;case&lt;/em&gt; statement is found whose expression evaluates to a value that matches the value of the &lt;em&gt;switch&lt;/em&gt; expression does PHP begin to execute the statements. PHP continues to execute the statements until the end of the &lt;em&gt;switch&lt;/em&gt; block, or the first time it sees a &lt;em&gt;break&lt;/em&gt; statement. If you don't write a &lt;em&gt;break&lt;/em&gt; statement at the end of a case's statement list, PHP will go on executing the statements of the following case. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8fa75832a4fe0919bf699b9b849d29c49d135d" translate="yes" xml:space="preserve">
          <source>It is important to use the same user ID of your web server for GC task script. Otherwise, you may have permission problems especially with files save handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2989d79e6ecaac27eca6471d4e40a5b3827ae355" translate="yes" xml:space="preserve">
          <source>It is more useful to use the &lt;a href=&quot;function.mcrypt-enc-get-block-size&quot;&gt;mcrypt_enc_get_block_size()&lt;/a&gt; function as this uses the resource returned by &lt;a href=&quot;function.mcrypt-module-open&quot;&gt;mcrypt_module_open()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d145bef0e522399d6297537cb3b9836cf85dbd8e" translate="yes" xml:space="preserve">
          <source>It is more useful to use the &lt;a href=&quot;function.mcrypt-enc-get-iv-size&quot;&gt;mcrypt_enc_get_iv_size()&lt;/a&gt; function as this uses the resource returned by &lt;a href=&quot;function.mcrypt-module-open&quot;&gt;mcrypt_module_open()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a0c28d3f34b708568ee0d589f3bda5be7b265f" translate="yes" xml:space="preserve">
          <source>It is more useful to use the &lt;a href=&quot;function.mcrypt-enc-get-key-size&quot;&gt;mcrypt_enc_get_key_size()&lt;/a&gt; function as this uses the resource returned by &lt;a href=&quot;function.mcrypt-module-open&quot;&gt;mcrypt_module_open()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="953a72157420f2e6497a328fc7ca6b611997323e" translate="yes" xml:space="preserve">
          <source>It is much better to specify a timeout value of a few seconds, although if you need to be checking and running other code concurrently, using a timeout value of at least &lt;em&gt;200000&lt;/em&gt; microseconds will help reduce the CPU usage of your script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ec6f8129f2f332e2031a442103372b00cccea9" translate="yes" xml:space="preserve">
          <source>It is no longer required to call &lt;a href=&quot;function.srand&quot;&gt;srand()&lt;/a&gt; first. This is now done automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09377b7d3a69b065db28aa5e9df4a7be1a8a4d2e" translate="yes" xml:space="preserve">
          <source>It is not allowed to call &lt;a href=&quot;evloop.run&quot;&gt;EvLoop::run()&lt;/a&gt; or similar methods or functions that enter the current event loop from either &lt;a href=&quot;class.evprepare&quot;&gt;EvPrepare&lt;/a&gt; or &lt;strong&gt;EvCheck&lt;/strong&gt; watchers. Other loops than the current one are fine, however. The rationale behind this is that one don't need to check for recursion in those watchers, i.e. the sequence will always be: &lt;a href=&quot;class.evprepare&quot;&gt;EvPrepare&lt;/a&gt; -&amp;gt; blocking -&amp;gt; &lt;strong&gt;EvCheck&lt;/strong&gt; , so having a watcher of each kind they will always be called in pairs bracketing the blocking call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34932847c002f1190cf18d2ed8bd2dd9e5bf387e" translate="yes" xml:space="preserve">
          <source>It is not allowed to call &lt;a href=&quot;evloop.run&quot;&gt;EvLoop::run()&lt;/a&gt; or similar methods or functions that enter the current event loop from either &lt;strong&gt;EvPrepare&lt;/strong&gt; or &lt;a href=&quot;class.evcheck&quot;&gt;EvCheck&lt;/a&gt; watchers. Other loops than the current one are fine, however. The rationale behind this is that one don't need to check for recursion in those watchers, i.e. the sequence will always be: &lt;strong&gt;EvPrepare&lt;/strong&gt; -&amp;gt; blocking -&amp;gt; &lt;a href=&quot;class.evcheck&quot;&gt;EvCheck&lt;/a&gt; , so having a watcher of each kind they will always be called in pairs bracketing the blocking call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc68201a17829d475dd42586044dba8a3104ae1" translate="yes" xml:space="preserve">
          <source>It is not necessary to call this function in order to use integers or strings in place of GMP numbers in GMP functions (such as with &lt;a href=&quot;function.gmp-add&quot;&gt;gmp_add()&lt;/a&gt;). Function arguments are automatically converted to GMP numbers, if such conversion is possible and needed, using the same rules as &lt;strong&gt;gmp_init()&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278de5f6c2105ebefacbe8b177798382079fcd59" translate="yes" xml:space="preserve">
          <source>It is not necessary to initialize variables in PHP however it is a very good practice. Uninitialized variables have a default value of their type depending on the context in which they are used - booleans default to &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;, integers and floats default to zero, strings (e.g. used in &lt;a href=&quot;function.echo&quot;&gt;echo&lt;/a&gt;) are set as an empty string and arrays become to an empty array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e793c40adb8e7cf133a4f940f6d41c760c2058" translate="yes" xml:space="preserve">
          <source>It is not possible for &lt;a href=&quot;language.oop5.magic#object.sleep&quot;&gt;__sleep()&lt;/a&gt; to return names of private properties in parent classes. Doing this will result in an &lt;strong&gt;&lt;code&gt;E_NOTICE&lt;/code&gt;&lt;/strong&gt; level error. Instead you may use the &lt;a href=&quot;class.serializable&quot;&gt;Serializable&lt;/a&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb7916e45839d2f38795b74b03fe5f0a4d4ac9c" translate="yes" xml:space="preserve">
          <source>It is not possible to have the literal character &quot;]&quot; as the end character of a range. A pattern such as [W-]46] is interpreted as a class of two characters (&quot;W&quot; and &quot;-&quot;) followed by a literal string &quot;46]&quot;, so it would match &quot;W46]&quot; or &quot;-46]&quot;. However, if the &quot;]&quot; is escaped with a backslash it is interpreted as the end of range, so [W-\]46] is interpreted as a single class containing a range followed by two separate characters. The octal or hexadecimal representation of &quot;]&quot; can also be used to end a range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8722e63dd137aaa05f30169f68fdb26a649e7abc" translate="yes" xml:space="preserve">
          <source>It is not possible to read from a BLOB that has been opened for writing by &lt;a href=&quot;function.ibase-blob-create&quot;&gt;ibase_blob_create()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="718d14224100c402df2d2078625a22001b3cfe53" translate="yes" xml:space="preserve">
          <source>It is not possible to unset &lt;em&gt;$this&lt;/em&gt; inside an object method since PHP 5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac65ce75090c20ac60157d1382a2a6cfe151c0b4" translate="yes" xml:space="preserve">
          <source>It is not recommended to use this function to secure passwords, due to the fast nature of this hashing algorithm. See the &lt;a href=&quot;https://secure.php.net/manual/en/faq.passwords.php#faq.passwords.fasthash&quot;&gt;Password Hashing FAQ&lt;/a&gt; for details and best practices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90e48314113ced18f454716577bc0a7b347157b" translate="yes" xml:space="preserve">
          <source>It is now possible to specify an hexadecimal entity in &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf5435b838b7cdc07cbd544a1c16192274fcea41" translate="yes" xml:space="preserve">
          <source>It is now possible to specify keys in &lt;strong&gt;list()&lt;/strong&gt;. This enables destructuring of arrays with non-integer or non-sequential keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfc7078f432afbb625271daee0363a3281f794d" translate="yes" xml:space="preserve">
          <source>It is perfectly valid for &lt;strong&gt;socket_write()&lt;/strong&gt; to return zero which means no bytes have been written. Be sure to use the &lt;em&gt;===&lt;/em&gt; operator to check for &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; in case of an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6567a0fe6d0a79dea75aa0da24647cfcc4fe006c" translate="yes" xml:space="preserve">
          <source>It is possible that &lt;strong&gt;exif_thumbnail()&lt;/strong&gt; cannot create an image but can determine its size. In this case, the return value is &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; but &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; are set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="465c4dfd5802c6df37ee9c2f200044e8f89c67c9" translate="yes" xml:space="preserve">
          <source>It is possible to &lt;a href=&quot;language.oop5.iterations&quot;&gt;customize object iteration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fb44b2cde40e45d92475054d1657f5f0e549229" translate="yes" xml:space="preserve">
          <source>It is possible to call &lt;a href=&quot;function.session-write-close&quot;&gt;session_write_close()&lt;/a&gt; from the destructor to solve this chicken and egg problem but the most reliable way is to register the shutdown function as described above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b3822173ce182d7fc5e16ba2ce7a4496003939" translate="yes" xml:space="preserve">
          <source>It is possible to call recursive functions in PHP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9651696a53424f2869955cd0afa5c5a1eb30e708" translate="yes" xml:space="preserve">
          <source>It is possible to cause the matching process to obey a subpattern conditionally or to choose between two alternative subpatterns, depending on the result of an assertion, or whether a previous capturing subpattern matched or not. The two possible forms of conditional subpattern are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0809515eaf989754b3140084fdc0e730e8bd2fa8" translate="yes" xml:space="preserve">
          <source>It is possible to compare arrays with the &lt;a href=&quot;function.array-diff&quot;&gt;array_diff()&lt;/a&gt; function and with &lt;a href=&quot;language.operators.array&quot;&gt;array operators&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaca379ef100651ab527657f08e015fdcf0d7af7" translate="yes" xml:space="preserve">
          <source>It is possible to construct infinite loops by following a subpattern that can match no characters with a quantifier that has no upper limit, for example: &lt;em&gt;(a?)*&lt;/em&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="580932d96b9dba0629158b1ab09e20f87eabef90" translate="yes" xml:space="preserve">
          <source>It is possible to define constant values on a per-class basis remaining the same and unchangeable. Constants differ from normal variables in that you don't use the &lt;var&gt;&lt;var&gt;$&lt;/var&gt;&lt;/var&gt; symbol to declare or use them. The default visibility of class constants is &lt;em&gt;public&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c63511b3e5b356595d38b80a0b3f7953aea4d0c0" translate="yes" xml:space="preserve">
          <source>It is possible to enable strict mode on a per-file basis. In strict mode, only a variable of exact type of the type declaration will be accepted, or a &lt;a href=&quot;class.typeerror&quot;&gt;TypeError&lt;/a&gt; will be thrown. The only exception to this rule is that an &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt; may be given to a function expecting a &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;. Function calls from within internal functions will not be affected by the &lt;em&gt;strict_types&lt;/em&gt; declaration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6423f3d0c96f966e94de075303b5d80059deb075" translate="yes" xml:space="preserve">
          <source>It is possible to name a subpattern using the syntax &lt;em&gt;(?P&amp;lt;name&amp;gt;pattern)&lt;/em&gt;. This subpattern will then be indexed in the matches array by its normal numeric position and also by name. PHP 5.2.2 introduced two alternative syntaxes &lt;em&gt;(?&amp;lt;name&amp;gt;pattern)&lt;/em&gt; and &lt;em&gt;(?'name'pattern)&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6667449d621ec46e1d8c6b6e50cfdaad51162d" translate="yes" xml:space="preserve">
          <source>It is possible to pass parameters to the shutdown function by passing additional parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4421e67aca9bf7d6c61880ba31d78fc18339b895" translate="yes" xml:space="preserve">
          <source>It is possible to provide a scalar expression involving numeric and string literals and/or constants in context of a class constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98f369b71adf77d447404178a16d23faec7a8bd4" translate="yes" xml:space="preserve">
          <source>It is possible to specify the key only for some elements and leave it out for others:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66595ea0443ae00dd1283725547ee400012bea7" translate="yes" xml:space="preserve">
          <source>It is possible to unset even object properties visible in current context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6c8310c9aa7cf13ac8cdd248e57dd662aff40f" translate="yes" xml:space="preserve">
          <source>It is possible to use &lt;strong&gt;date()&lt;/strong&gt; and &lt;a href=&quot;function.mktime&quot;&gt;mktime()&lt;/a&gt; together to find dates in the future or the past.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78299952f6fbf599081c8e8008c1da2868ae4c85" translate="yes" xml:space="preserve">
          <source>It is possible to use PHP exception mechanism to throw SOAP Fault.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da640b1183f127095cd9f09cff0cd7a12af365e2" translate="yes" xml:space="preserve">
          <source>It is recommended that you avoid &quot;stacking&quot; ternary expressions. PHP's behaviour when using more than one ternary operator within a single statement is non-obvious:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ea80b56058b6f18b0a37c1bff1a3cfb5d89bf4" translate="yes" xml:space="preserve">
          <source>It is recommended that you test this function on your servers, and adjust the cost parameter so that execution of the function takes less than 100 milliseconds on interactive systems. The script in the above example will help you choose a good cost value for your hardware.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3be7f4266210efba3b8fe8b30217d43ec0c0877" translate="yes" xml:space="preserve">
          <source>It is recommended to give &lt;a href=&quot;class.evcheck&quot;&gt;EvCheck&lt;/a&gt; watchers highest( &lt;strong&gt;&lt;code&gt;Ev::MAXPRI&lt;/code&gt;&lt;/strong&gt; ) priority, to ensure that they are being run before any other watchers after the poll (this doesn&amp;rsquo;t matter for &lt;strong&gt;EvPrepare&lt;/strong&gt; watchers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1108c6f9429dea0ad8116ce8c18fc118a033e890" translate="yes" xml:space="preserve">
          <source>It is recommended to give &lt;strong&gt;EvCheck&lt;/strong&gt; watchers highest( &lt;strong&gt;&lt;code&gt;Ev::MAXPRI&lt;/code&gt;&lt;/strong&gt; ) priority, to ensure that they are being run before any other watchers after the poll (this doesn&amp;rsquo;t matter for &lt;a href=&quot;class.evprepare&quot;&gt;EvPrepare&lt;/a&gt; watchers).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8524d4f9f3bc1918abc1cc71f58058fc6af6dbe" translate="yes" xml:space="preserve">
          <source>It is strongly discouraged as a coding practice to combine multiple namespaces into the same file. The primary use case is to combine multiple PHP scripts into the same file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29626561cc367de0266055f3bf1c3947a0d7c62d" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that if an application serializes objects, for use later in the application, that the application includes the class definition for that object throughout the application. Not doing so might result in an object being unserialized without a class definition, which will result in PHP giving the object a class of &lt;strong&gt;__PHP_Incomplete_Class_Name&lt;/strong&gt;, which has no methods and would render the object useless.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8370e882cfe094a0f2d971868ab0c26c4cb821" translate="yes" xml:space="preserve">
          <source>It is strongly recommended that you do not generate your own salt for this function. It will create a secure salt automatically for you if you do not specify one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174697412b2386bc85a696b0e3111daf47e36ca8" translate="yes" xml:space="preserve">
          <source>It is unnecessary to call &lt;strong&gt;mysqli_stmt_store_result()&lt;/strong&gt; for other queries, but if you do, it will not harm or cause any notable performance loss in all cases. You can detect whether the query produced a result set by checking if &lt;a href=&quot;mysqli-stmt.result-metadata&quot;&gt;mysqli_stmt_result_metadata()&lt;/a&gt; returns NULL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24692eff9638ff40c3bec124817d0efe353599c" translate="yes" xml:space="preserve">
          <source>It is usually not possible to match more than &lt;a href=&quot;https://secure.php.net/manual/en/pcre.configuration.php#ini.pcre.backtrack-limit&quot;&gt;pcre.backtrack_limit&lt;/a&gt; characters in ungreedy mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8f1abe5fbe833be87f0ae39758efe41848370e" translate="yes" xml:space="preserve">
          <source>It is valid to install a child watcher after an &lt;a href=&quot;class.evchild&quot;&gt;EvChild&lt;/a&gt; has exited but before the event loop has started its next iteration. For example, first one calls &lt;em&gt;fork&lt;/em&gt; , then the new child process might exit, and only then an &lt;a href=&quot;class.evchild&quot;&gt;EvChild&lt;/a&gt; watcher is installed in the parent for the new &lt;em&gt;PID&lt;/em&gt; .</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f99e39a9d8caf7c2d15105e4671636f85e47c7f" translate="yes" xml:space="preserve">
          <source>It is very important to note that the line with the closing identifier must contain no other characters, except a semicolon (&lt;em&gt;;&lt;/em&gt;). That means especially that the identifier &lt;em&gt;may not be indented&lt;/em&gt;, and there may not be any spaces or tabs before or after the semicolon. It's also important to realize that the first character before the closing identifier must be a newline as defined by the local operating system. This is &lt;em&gt;\n&lt;/em&gt; on UNIX systems, including macOS. The closing delimiter must also be followed by a newline.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ff7cab08ba627310eeb418121c9d60f1e431c8" translate="yes" xml:space="preserve">
          <source>It is very important to realize that because the backslash is used as an escape character within strings, it should always be doubled when used inside a string. Otherwise there is a risk of unintended consequences:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824f037c25be1329790308e0fcad568f51ca5e6c" translate="yes" xml:space="preserve">
          <source>It is worth noting that before PHP 5.2.0 the &lt;a href=&quot;language.oop5.magic#object.tostring&quot;&gt;__toString()&lt;/a&gt; method was only called when it was directly combined with &lt;a href=&quot;function.echo&quot;&gt;echo&lt;/a&gt; or &lt;a href=&quot;function.print&quot;&gt;print&lt;/a&gt;. Since PHP 5.2.0, it is called in any string context (e.g. in &lt;a href=&quot;function.printf&quot;&gt;printf()&lt;/a&gt; with &lt;em&gt;%s&lt;/em&gt; modifier) but not in other types contexts (e.g. with &lt;em&gt;%d&lt;/em&gt; modifier). Since PHP 5.2.0, converting objects without &lt;a href=&quot;language.oop5.magic#object.tostring&quot;&gt;__toString()&lt;/a&gt; method to string would cause &lt;strong&gt;&lt;code&gt;E_RECOVERABLE_ERROR&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55a9fc9485602a04f742c4fa74bd12d8fc93518" translate="yes" xml:space="preserve">
          <source>It is worth noting that the &lt;strong&gt;mail()&lt;/strong&gt; function is not suitable for larger volumes of email in a loop. This function opens and closes an SMTP socket for each email, which is not very efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3584e49a9a02c9cf7682f3e180afc490e6a8bee5" translate="yes" xml:space="preserve">
          <source>It localizes a set of alternatives. For example, the pattern &lt;em&gt;cat(aract|erpillar|)&lt;/em&gt; matches one of the words &quot;cat&quot;, &quot;cataract&quot;, or &quot;caterpillar&quot;. Without the parentheses, it would match &quot;cataract&quot;, &quot;erpillar&quot; or the empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3756834738e937e7315ea172b8a0c44a06ce24b4" translate="yes" xml:space="preserve">
          <source>It looks for a function from the current namespace: &lt;em&gt;A\B\foo()&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30af86b234719a5aaae5a443f8d0d784dacf23cd" translate="yes" xml:space="preserve">
          <source>It may be necessary to pass &lt;strong&gt;&lt;code&gt;&lt;a href=&quot;https://secure.php.net/manual/en/libxml.constants.php#constant.libxml-parsehuge&quot;&gt;LIBXML_PARSEHUGE&lt;/a&gt;&lt;/code&gt;&lt;/strong&gt; to be able to process deeply nested XML or very large text nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aeedecf0e3c33a313bc8892f422281bda46082d" translate="yes" xml:space="preserve">
          <source>It may not be obvious exactly what will happen when casting between certain types. For more information, see these sections:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d27712c3dd09bb2a4651b39666e42a533e51d3" translate="yes" xml:space="preserve">
          <source>It resets the statement on the server, data sent using &lt;a href=&quot;mysqli-stmt.send-long-data&quot;&gt;mysqli_stmt_send_long_data()&lt;/a&gt;, unbuffered result sets and current errors. It does not clear bindings or stored result sets. Stored result sets will be cleared when executing the prepared statement (or closing it).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e67d188a9c12d3e38793a31c7cbd24b0aa1ccdf" translate="yes" xml:space="preserve">
          <source>It returns a string on success and &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55a68258860b4209f3c31e0bf622cc3c2f66a34" translate="yes" xml:space="preserve">
          <source>It returns an associative &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; where the array indexes are the header names and the array values are the values associated with those headers. If no data can be returned, &lt;strong&gt;exif_read_data()&lt;/strong&gt; will return &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5b97459646d166bb6220660299810f7e12107a" translate="yes" xml:space="preserve">
          <source>It sets up the subpattern as a capturing subpattern (as defined above). When the whole pattern matches, that portion of the subject string that matched the subpattern is passed back to the caller via the &lt;em&gt;ovector&lt;/em&gt; argument of &lt;strong&gt;pcre_exec()&lt;/strong&gt;. Opening parentheses are counted from left to right (starting from 1) to obtain the numbers of the capturing subpatterns.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ec2ad0b43da125b9cb2272b9cb9b586e0522bb" translate="yes" xml:space="preserve">
          <source>It should be called multiple time, once for each field name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c2ac8c37eca0b0ab6a25e5412269b78b3f179f" translate="yes" xml:space="preserve">
          <source>It should be positive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023db9fcdfaee2d41cb20478ae681203b9781c2c" translate="yes" xml:space="preserve">
          <source>It tries to find and call the &lt;em&gt;global&lt;/em&gt; function &lt;em&gt;foo()&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07d10c13398579fd53bf81b19c3b3b06e994dcd0" translate="yes" xml:space="preserve">
          <source>It's a common thing to many users to iterate through arrays like in the example below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0d057ab7303a7614a4cb11b107218c15942a65" translate="yes" xml:space="preserve">
          <source>It's also possible for interfaces to have &lt;em&gt;constants&lt;/em&gt;. Look at the &lt;a href=&quot;language.oop5.interfaces&quot;&gt;interface documentation&lt;/a&gt; for examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838928a7a350b8a651a3b1aa16e826220282619e" translate="yes" xml:space="preserve">
          <source>It's common to most socket implementations that the only exception caught with the &lt;code&gt;except&lt;/code&gt; array is out-of-bound data received on a socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf2cfa7cb4327b7a1276720a65ee38f134f7d3c" translate="yes" xml:space="preserve">
          <source>It's guaranteed that &lt;code&gt;obj&lt;/code&gt; is an instance of the same class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3cbdcf190fbebece1b89d8bdbf2823bad2031d" translate="yes" xml:space="preserve">
          <source>It's important that objects which are equal also have the same hash value. See &lt;a href=&quot;ds-hashable.hash&quot;&gt;Ds\Hashable::hash()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f41a750f413a6093339e6aed492bbd0b4e250df" translate="yes" xml:space="preserve">
          <source>It's possible for a directive to have multiple access levels, which is why &lt;em&gt;access&lt;/em&gt; shows the appropriate bitmask values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96149656b56eb865332ebc04171b90e8fc3acd0c" translate="yes" xml:space="preserve">
          <source>It's possible for interfaces to have constants. Interface constants work exactly like &lt;a href=&quot;language.oop5.constants&quot;&gt;class constants&lt;/a&gt; except they cannot be overridden by a class/interface that inherits them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32112e42a2a88734973d4bd756331dd9a19200c5" translate="yes" xml:space="preserve">
          <source>It's possible to open database files over network connection. However in cases a socket connection will be used (as with http or ftp) the connection will be locked instead of the resource itself. This is important to know since in such cases locking is simply ignored on the resource and other solutions have to be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533e851ce21a3761f301758a2323d0566b497b4a" translate="yes" xml:space="preserve">
          <source>It's possible to set a callback-function which will be called, if an undefined class should be instantiated during unserializing. (to prevent getting an incomplete &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt; &quot;__PHP_Incomplete_Class&quot;.) Use your &lt;var&gt;php.ini&lt;/var&gt;, &lt;a href=&quot;function.ini-set&quot;&gt;ini_set()&lt;/a&gt; or &lt;var&gt;.htaccess&lt;/var&gt; to define &lt;a href=&quot;https://secure.php.net/manual/en/var.configuration.php#ini.unserialize-callback-func&quot;&gt;unserialize_callback_func&lt;/a&gt;. Everytime an undefined class should be instantiated, it'll be called. To disable this feature just empty this setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be2611d3f710efd0b58b6b11b3aad647823ebef" translate="yes" xml:space="preserve">
          <source>It's possible to use a semicolon instead of a colon after a case like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecdda59aea5ee67d7d854c969ccf7f4f4b4a4c54" translate="yes" xml:space="preserve">
          <source>Item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3eaf0a8add50afa056060906f41c1280d32453" translate="yes" xml:space="preserve">
          <source>Iterable Type Variance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="271bcc3ddde86554622320761948edea38919ed2" translate="yes" xml:space="preserve">
          <source>Iterable can also be used as a return type to indicate a function will return an iterable value. If the returned value is not an array or instance of &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;, a &lt;a href=&quot;class.typeerror&quot;&gt;TypeError&lt;/a&gt; will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd8fdb4721228f18059faf948edf84d63e1f7c86" translate="yes" xml:space="preserve">
          <source>Iterable can be used as a parameter type to indicate that a function requires a set of values, but does not care about the form of the value set since it will be used with &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt;. If a value is not an array or instance of &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;, a &lt;a href=&quot;class.typeerror&quot;&gt;TypeError&lt;/a&gt; will be thrown.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236103ed0c45be7fcb7bc25bc92f3d461372ab13" translate="yes" xml:space="preserve">
          <source>Iterable is a pseudo-type introduced in PHP 7.1. It accepts any &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt; or object implementing the &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt; interface. Both of these types are iterable using &lt;a href=&quot;control-structures.foreach&quot;&gt;foreach&lt;/a&gt; and can be used with &lt;strong&gt;yield from&lt;/strong&gt; within a &lt;a href=&quot;https://secure.php.net/manual/en/language.generators.php&quot;&gt;generator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dd80eea3f6c51bf5b9c13a8a47609bd55b30e0e" translate="yes" xml:space="preserve">
          <source>Iterables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bf7a035a9c5f80772f3ff7377f1d5e5603446a7" translate="yes" xml:space="preserve">
          <source>Iterables &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2efee69e7ed65941b4d79eb0c846fe3ce5583658" translate="yes" xml:space="preserve">
          <source>Iterate over the pixels in the top left of the image, changing them to be black.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b65f9f5ffe0dd99fd208c93d6b7a910b3da2d0" translate="yes" xml:space="preserve">
          <source>Iterates over each value in the &lt;code&gt;array&lt;/code&gt; passing them to the &lt;code&gt;callback&lt;/code&gt; function. If the &lt;code&gt;callback&lt;/code&gt; function returns true, the current value from &lt;code&gt;array&lt;/code&gt; is returned into the result array. Array keys are preserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff9c46c0c4d840a5ebb59ea36e92c7dab5e4295" translate="yes" xml:space="preserve">
          <source>Iterates through a file system in a similar fashion to &lt;a href=&quot;function.glob&quot;&gt;glob()&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c69e296990749c0a3484e533f39d4fa1b70d1c4" translate="yes" xml:space="preserve">
          <source>Iterating over a PriorityQueue is destructive, equivalent to successive pop operations until the queue is empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae8809b2429231a50c28ba87cecc038aac88855" translate="yes" xml:space="preserve">
          <source>Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12c1696a6714f8964690672abee540033fa05fd" translate="yes" xml:space="preserve">
          <source>Iterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de9289aaaf65b63fa929f3722c6b069df1e0202" translate="yes" xml:space="preserve">
          <source>Iterator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1244aac4de18e42fe1bb0b18b0361339cbc5c0d4" translate="yes" xml:space="preserve">
          <source>Iterator (interface)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fe9cff0f402926852851e19173ed943fa17fc2" translate="yes" xml:space="preserve">
          <source>Iterator to cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec47507e06ce1ad9000dbe814d8f0569e59f7b97" translate="yes" xml:space="preserve">
          <source>Iterator::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e360ea04adfd04b64849a3a085c4bb8139d1b152" translate="yes" xml:space="preserve">
          <source>Iterator::current</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cba08ea7c8e7f062ff982a2c8a5e4a610eeac18" translate="yes" xml:space="preserve">
          <source>Iterator::current &amp;mdash; Return the current element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd9974e7ffc7c3f5cea7eb6704bac65c3d083c7" translate="yes" xml:space="preserve">
          <source>Iterator::current &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805b9feebec3754cf0f343295b6667cf1c513efc" translate="yes" xml:space="preserve">
          <source>Iterator::getTotalCount</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a648777758539571afd772ef0ba63892acf23a75" translate="yes" xml:space="preserve">
          <source>Iterator::getTotalHits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537c051a41b9ecf2c4967ed7f0db4744fe893b38" translate="yes" xml:space="preserve">
          <source>Iterator::getTotalSize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf33198416f6e8721a66419944b5673cea4ec59" translate="yes" xml:space="preserve">
          <source>Iterator::key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e48122d0163b9a332f896c76c2110fe026e063e" translate="yes" xml:space="preserve">
          <source>Iterator::key &amp;mdash; Return the key of the current element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0982f635445f945ea9b07b22de8fcb4b95bb10e" translate="yes" xml:space="preserve">
          <source>Iterator::key &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d360ad0443fc86aaf713ff8a07e3d0e24910e14" translate="yes" xml:space="preserve">
          <source>Iterator::next</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf921c0b27973adac1f6fcb89ef54745f8bbfce" translate="yes" xml:space="preserve">
          <source>Iterator::next &amp;mdash; Move forward to next element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69d7b41cc37cb5f643795f51aba6942a6fc478cb" translate="yes" xml:space="preserve">
          <source>Iterator::next &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1dd669b018310568d23691d65628c9e7d66a52d" translate="yes" xml:space="preserve">
          <source>Iterator::rewind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06cd6e56b8ece3c913bd59be1087eb59b37c5ee4" translate="yes" xml:space="preserve">
          <source>Iterator::rewind &amp;mdash; Rewind the Iterator to the first element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf9edb3ed4cfae8c7f208ae7e75bc6e0f3642a8" translate="yes" xml:space="preserve">
          <source>Iterator::rewind &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d1b5bb58eed28d0eaa9e39bb7b946e3427dee2" translate="yes" xml:space="preserve">
          <source>Iterator::valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d008dd098e757ae06d96d3f476bee763c71aa08d" translate="yes" xml:space="preserve">
          <source>Iterator::valid &amp;mdash; Checks if current position is valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e4d61e65403f1292caf72dceffde3e29db9d29" translate="yes" xml:space="preserve">
          <source>Iterator::valid &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81a93fb657c33e73a3b234edb6d7c2a8bf2b93f" translate="yes" xml:space="preserve">
          <source>IteratorAggregate &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4ceeaf3233ec83d01f2c99cff681d6458b68f2e" translate="yes" xml:space="preserve">
          <source>IteratorAggregate (interface)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8649f9cfd44affacf954fbfcb5eef38d12e929" translate="yes" xml:space="preserve">
          <source>IteratorAggregate::getIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4743a95924982c697b602d237d01a20e2e981593" translate="yes" xml:space="preserve">
          <source>IteratorAggregate::getIterator &amp;mdash; Retrieve an external iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae125a60306fc76b24d14f36f3602c20a93b8ef0" translate="yes" xml:space="preserve">
          <source>IteratorAggregate::getIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e522a09c5116c2f8f399955b4a61be540446fd7" translate="yes" xml:space="preserve">
          <source>IteratorIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2dde4c92ff8ffee5531b90e7b28aa69524794c3" translate="yes" xml:space="preserve">
          <source>IteratorIterator (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1695c0466764d7f644b7957960d4da0ece44e49" translate="yes" xml:space="preserve">
          <source>IteratorIterator::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40d1636d8a552d05eb567d9b3d50020f5e49cab6" translate="yes" xml:space="preserve">
          <source>IteratorIterator::__construct &amp;mdash; Create an iterator from anything that is traversable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50404e73b5bf6bf39bd41446c886d464d75aaa7" translate="yes" xml:space="preserve">
          <source>IteratorIterator::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c504b5be62a4e6e91bc8e979822fd8cdeca92b8" translate="yes" xml:space="preserve">
          <source>IteratorIterator::current</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1642edc36a087af2b5690928fc9aa2db74051363" translate="yes" xml:space="preserve">
          <source>IteratorIterator::current &amp;mdash; Get the current value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ef4ddd3ec0dd6fd8d3d86663a789a1cd120283" translate="yes" xml:space="preserve">
          <source>IteratorIterator::current &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8041d57ad8ef70ec684a8380f38eb7b4b60caf06" translate="yes" xml:space="preserve">
          <source>IteratorIterator::getInnerIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f5f81377151e607ef44e4f1b13545e1a250fb9" translate="yes" xml:space="preserve">
          <source>IteratorIterator::getInnerIterator &amp;mdash; Get the inner iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ef73a6c9293777f197264f0cf9354893a96341" translate="yes" xml:space="preserve">
          <source>IteratorIterator::getInnerIterator &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd8e7c8092fd3b4e1ccf769cf8184fa144c90f5" translate="yes" xml:space="preserve">
          <source>IteratorIterator::key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73e507198c92524b0577f9871a3b0ee34811270" translate="yes" xml:space="preserve">
          <source>IteratorIterator::key &amp;mdash; Get the key of the current element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4003f26b698ee10193c5f37109040cc4ef141ebb" translate="yes" xml:space="preserve">
          <source>IteratorIterator::key &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f684ee8fb8565b2bfc6b8afdaada0526d63c96f" translate="yes" xml:space="preserve">
          <source>IteratorIterator::next</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b9100df200adf6e6e839ccbce4694307debc5e" translate="yes" xml:space="preserve">
          <source>IteratorIterator::next &amp;mdash; Forward to the next element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5adb0640ee6370da82606f493b7c237628d5855" translate="yes" xml:space="preserve">
          <source>IteratorIterator::next &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4ab7043d688e7f0a994b181180331e5eab61c1" translate="yes" xml:space="preserve">
          <source>IteratorIterator::rewind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d637546382fa5086b052077a482318e50fd121e" translate="yes" xml:space="preserve">
          <source>IteratorIterator::rewind &amp;mdash; Rewind to the first element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc9d11ae1a872ddda8600b3b25d82173bc31d959" translate="yes" xml:space="preserve">
          <source>IteratorIterator::rewind &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02c844524baa3369f96b31b89b10782dbdf83c5" translate="yes" xml:space="preserve">
          <source>IteratorIterator::valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764857df6277febcf10fba2414af7b985dce87d3" translate="yes" xml:space="preserve">
          <source>IteratorIterator::valid &amp;mdash; Checks if the iterator is valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0df302e48a35c2e05dd6483c8d71007333cfb4d" translate="yes" xml:space="preserve">
          <source>IteratorIterator::valid &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01a1141980abed4bddfa4cd7af8400540be00f53" translate="yes" xml:space="preserve">
          <source>Iterators &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8fb682e66a789d7e7799ec5f7ac6087aea1f0c" translate="yes" xml:space="preserve">
          <source>Its boost value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58668e7669fd564d99db5d581fcdb6a5618440b5" translate="yes" xml:space="preserve">
          <source>J</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf15583c4132f56724db77a79ccdbecea5c005de" translate="yes" xml:space="preserve">
          <source>JB2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67a351659d5a15494332dce0d8c40405a90c4838" translate="yes" xml:space="preserve">
          <source>JFIF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9c5b6f99f2c6aeff049d2730ad66bdb86dae26" translate="yes" xml:space="preserve">
          <source>JP2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcc985748129d8966e6d3a7d2876e2950f0fb4ca" translate="yes" xml:space="preserve">
          <source>JPC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45885aac538290762a4f7f3317abf411bb16059" translate="yes" xml:space="preserve">
          <source>JPEG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03a68b5d841f1dbb4d6a73ba78eec4a1c2fe6e3" translate="yes" xml:space="preserve">
          <source>JPEG 2000 support was added for the &lt;code&gt;imageinfo&lt;/code&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e920f995e411d62abf9fa3fd3c404c25ab9fb20" translate="yes" xml:space="preserve">
          <source>JPEG Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c9d11599074bb63e1dd7a5059ab11259e3a168" translate="yes" xml:space="preserve">
          <source>JPG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd202189bdd8ba4dad2ddc72e680ddef035cfebb" translate="yes" xml:space="preserve">
          <source>JPX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031a4e76f0b39d0df073d934da5fc48da8d737e5" translate="yes" xml:space="preserve">
          <source>JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8026a0dab9c5edae9bb239f31da8ebb5f663915c" translate="yes" xml:space="preserve">
          <source>JSON Functions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d5731c1c326501973b20c2e66e981c18a5fe3a" translate="yes" xml:space="preserve">
          <source>Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a6b64b0ab5d0668f131567cc87b2b264448da97" translate="yes" xml:space="preserve">
          <source>January, February, March, April, May, June, July, August, September, October, November, December</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9239c22d1d1c990ca8c206cb408b345a3ec8114c" translate="yes" xml:space="preserve">
          <source>Japanese</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc4d9d3104d96399ff7c5ae3521734f8043f171" translate="yes" xml:space="preserve">
          <source>Java (Sun java.util.regex)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6535d4e35f051b93974283286ee5d344da85f37d" translate="yes" xml:space="preserve">
          <source>Jewish</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66efa17e75ed5430d8a6add9cf6186108a63fa6a" translate="yes" xml:space="preserve">
          <source>Job (class)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640a60c96fcac68ff22c3729efa5c4746067d51e" translate="yes" xml:space="preserve">
          <source>Job::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef380d3422edffd7bc20b68651e19e89edafb83" translate="yes" xml:space="preserve">
          <source>Job::complete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa37b37723f1015836284b23b372d7c2d98d51f0" translate="yes" xml:space="preserve">
          <source>Job::data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24c82ba0aea70c24df0eb8e574ba6d696198904" translate="yes" xml:space="preserve">
          <source>Job::exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fedac3fff28c8d31fcaf1931ab62d9e42d7681ea" translate="yes" xml:space="preserve">
          <source>Job::fail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f14ee028a2546f565413b8701fedef22230f33d" translate="yes" xml:space="preserve">
          <source>Job::functionName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389793f3a93561a266148a38ecbf10ada462b998" translate="yes" xml:space="preserve">
          <source>Job::handle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d5edbbd763c853597444a7999a6e1a00dcf32fb" translate="yes" xml:space="preserve">
          <source>Job::returnCode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b376ab698ae4d5847ab48a90568e2ad5c00e530" translate="yes" xml:space="preserve">
          <source>Job::sendComplete</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb52dce3bfc8d7b70b99cf40c83742ccee57cf0" translate="yes" xml:space="preserve">
          <source>Job::sendData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da4d89ca73b7d46a50944ddbfdf3dbc89bec7c40" translate="yes" xml:space="preserve">
          <source>Job::sendException</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd82a3486e03103e2e9af3b8dfab89125e45833e" translate="yes" xml:space="preserve">
          <source>Job::sendFail</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47fa892973c9316873713fa3334af7859ee64cae" translate="yes" xml:space="preserve">
          <source>Job::sendStatus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1276419af37b6bfa00572369034b75edb3597a7" translate="yes" xml:space="preserve">
          <source>Job::sendWarning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7fd6bfd31ee9ad7e8f36361a87d61cd261b837" translate="yes" xml:space="preserve">
          <source>Job::setReturn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e11548c446c23604cd13d907848f364613e3773" translate="yes" xml:space="preserve">
          <source>Job::status</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af115a868a58c9cca3a55b7958bef0a1ae072fc" translate="yes" xml:space="preserve">
          <source>Job::unique</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d8d988dc8fc94c0a5509ac32e6bed4b61348eb5" translate="yes" xml:space="preserve">
          <source>Job::warning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3767b09adbcada7cb106272af4da6339ea528253" translate="yes" xml:space="preserve">
          <source>Job::workload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7f502756fb917d5793c3e3835d1b722b2715a75" translate="yes" xml:space="preserve">
          <source>Job::workloadSize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21374f80e6b6168cbc968780afab0f1574392ac" translate="yes" xml:space="preserve">
          <source>Join array elements with a &lt;code&gt;glue&lt;/code&gt; string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="512a39b8f713f5a6354b7948f7905fb5b05070b2" translate="yes" xml:space="preserve">
          <source>Joins a multicast group. (added in PHP 5.4)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c65d271634eb061d14f01d86dc80c30f36b10735" translate="yes" xml:space="preserve">
          <source>Joins all values together as a string using an optional separator between each value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f6816d993166487e112a5d041f17ab96f67a874" translate="yes" xml:space="preserve">
          <source>JsonSerializable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6cb8f33301efa10d4cdabafe267432ea301d8f3" translate="yes" xml:space="preserve">
          <source>JsonSerializable (interface)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94f739e3eaf682e72bc2b700d09f90ad3f3e0014" translate="yes" xml:space="preserve">
          <source>JsonSerializable::jsonSerialize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be868f2b325491d215683b70ea6cc3eaa798a8db" translate="yes" xml:space="preserve">
          <source>JsonSerializable::jsonSerialize &amp;mdash; Specify data which should be serialized to JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe685f70080794b977fb28a9cb85ecbdbf94b9a4" translate="yes" xml:space="preserve">
          <source>JsonSerializable::jsonSerialize &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dcad2f32dd59a2e0b6ca14e042f3bf0e978ef5" translate="yes" xml:space="preserve">
          <source>Judy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1c0d15a7697febc58580495dac9ede881138ae" translate="yes" xml:space="preserve">
          <source>Judy &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2cb5ec235218a8e6a4f5780e3d2531b5cb55dcf" translate="yes" xml:space="preserve">
          <source>Judy Functions &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447f05dfdd6019c4c66b250138c7cf75753e0f2f" translate="yes" xml:space="preserve">
          <source>Judy::BITSET</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9120e36bf4705ed2a8a210a55e708fb148d3237a" translate="yes" xml:space="preserve">
          <source>Judy::INT_TO_INT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf06bf1ef912c9b3a6e37dfec0dc676d203e02e" translate="yes" xml:space="preserve">
          <source>Judy::INT_TO_MIXED</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46f12c61ce9a5ab4850d19e7bcf81291cee7423" translate="yes" xml:space="preserve">
          <source>Judy::STRING_TO_INT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5ca2f6ea4ae739db82d7499fbe06cf87fd5c7b" translate="yes" xml:space="preserve">
          <source>Judy::STRING_TO_MIXED</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88afa257a14c5c54b8ec52ad11f20d0bfaba1ce0" translate="yes" xml:space="preserve">
          <source>Judy::__construct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70afb4ad00ab20dca0aa2b46ffa4308aa71566c" translate="yes" xml:space="preserve">
          <source>Judy::__construct &amp;mdash; Construct a new &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d822ab36b8308bede16809e52500764b17043a0" translate="yes" xml:space="preserve">
          <source>Judy::__construct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f51df519648391605533fa4d310f0a399e7da3a" translate="yes" xml:space="preserve">
          <source>Judy::__destruct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311dac7c677c96919b3e34d2ed4c2cf6d5f5e27d" translate="yes" xml:space="preserve">
          <source>Judy::__destruct &amp;mdash; Destruct a Judy object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9880be5117421a227b1ffad973eeb12b7b3e0dd" translate="yes" xml:space="preserve">
          <source>Judy::__destruct &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8747f59ac65e742ec217296f0033289ee7a7654d" translate="yes" xml:space="preserve">
          <source>Judy::byCount</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33a9a22cdd0c146ec07f2862595cbf7f9893cca8" translate="yes" xml:space="preserve">
          <source>Judy::byCount &amp;mdash; Locate the Nth index present in the &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dbd71584abf4d0ee3db1ee13ace88583cf3123f" translate="yes" xml:space="preserve">
          <source>Judy::byCount &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef718b2fbd4cbc29a251fd11bdb7d5b508bb8f9" translate="yes" xml:space="preserve">
          <source>Judy::count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85709f94d88afc38d3673bb26788a7bd7412c390" translate="yes" xml:space="preserve">
          <source>Judy::count &amp;mdash; Count the number of elements in the &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae130d795847bea66c5e5567c779738ddbd31c0" translate="yes" xml:space="preserve">
          <source>Judy::count &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b7985a69a1e8e534cc8804530afd586a72c660" translate="yes" xml:space="preserve">
          <source>Judy::first</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f167ddb8818aaabee5dc03b527dc71fb3966bb" translate="yes" xml:space="preserve">
          <source>Judy::first &amp;mdash; Search for the first index in the &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0440cf5469f68afe4834b9e2fff1b4ea9d0bfd" translate="yes" xml:space="preserve">
          <source>Judy::first &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb5fdd7d169d9f46019224af929a5295ba09df6" translate="yes" xml:space="preserve">
          <source>Judy::firstEmpty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb4ac39eb642f821c87721684e0292271a96207" translate="yes" xml:space="preserve">
          <source>Judy::firstEmpty &amp;mdash; Search for the first absent index in the &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76de9b6283bb1fa3227e7c0077ea48dc9a77f9d3" translate="yes" xml:space="preserve">
          <source>Judy::firstEmpty &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95becae8c45bd05d355b947303b935ed2c259154" translate="yes" xml:space="preserve">
          <source>Judy::free</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40c596b8c425e473ab44855b6a4197dca8a38080" translate="yes" xml:space="preserve">
          <source>Judy::free &amp;mdash; Free the entire &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5097f878b85021a3bc2cd146e7a8e7a04bc9f74b" translate="yes" xml:space="preserve">
          <source>Judy::free &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ecd933130ebfa79dcf1ab2e4365aa3ecab8be9" translate="yes" xml:space="preserve">
          <source>Judy::getType</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0b3a03f31dd8bfc22cf5da125d82b9fbe5a919" translate="yes" xml:space="preserve">
          <source>Judy::getType &amp;mdash; Return the type of the current &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5961e72790e1a47c0dfc936064af5273ed89c978" translate="yes" xml:space="preserve">
          <source>Judy::getType &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1802855888a18434c6ca084a96d8c5e9e2c1bc" translate="yes" xml:space="preserve">
          <source>Judy::last</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97da4fe8224f5b698dd5b5ee6aa4a02d035917f" translate="yes" xml:space="preserve">
          <source>Judy::last &amp;mdash; Search for the last index in the &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf409da448bf350c3aaa5262a7374377a22d35e0" translate="yes" xml:space="preserve">
          <source>Judy::last &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d817a3f56b3c908a687117558a283ca66762b686" translate="yes" xml:space="preserve">
          <source>Judy::lastEmpty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3292d4c807d5f02ec6ee8bb0af079270a2d70eba" translate="yes" xml:space="preserve">
          <source>Judy::lastEmpty &amp;mdash; Search for the last absent index in the &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b64880917c89f124946776163d12c4c49a61a39" translate="yes" xml:space="preserve">
          <source>Judy::lastEmpty &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7095a272201fcb3e7272ff69ad184df4a98b13f" translate="yes" xml:space="preserve">
          <source>Judy::memoryUsage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829dc85ede6f8fc74df59cb324129cedf42ff7ca" translate="yes" xml:space="preserve">
          <source>Judy::memoryUsage &amp;mdash; Return the memory used by the &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e2ba0fa64df8c58c4f4d5df09efaf08cdcd3da6" translate="yes" xml:space="preserve">
          <source>Judy::memoryUsage &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd7c2a2a76f13620bac899fd747e9b55599cccbe" translate="yes" xml:space="preserve">
          <source>Judy::next</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00744be79f1acc6fd4d870cdd9ce200125b1dd79" translate="yes" xml:space="preserve">
          <source>Judy::next &amp;mdash; Search for the next index in the &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660a05683e97dd0ab634e8d35bb53892e2220f88" translate="yes" xml:space="preserve">
          <source>Judy::next &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f69a6ebbc1a5eeb501fd3c78afdce84ba525303" translate="yes" xml:space="preserve">
          <source>Judy::nextEmpty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e632e3a5c92f8e82c7ce9e1d67f4dca61c077f94" translate="yes" xml:space="preserve">
          <source>Judy::nextEmpty &amp;mdash; Search for the next absent index in the &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87aabc4e2e3ad13d332b02ef65eecc0cb4ad903d" translate="yes" xml:space="preserve">
          <source>Judy::nextEmpty &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8968dfe39dbe243823720f96a06c298c778ee474" translate="yes" xml:space="preserve">
          <source>Judy::offsetExists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68a3819932320227c63cc7b4462202260914b7e" translate="yes" xml:space="preserve">
          <source>Judy::offsetExists &amp;mdash; Whether a offset exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010d475db7b31250dc7ae07717f9f629419dcaa5" translate="yes" xml:space="preserve">
          <source>Judy::offsetExists &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ac6a7af675e8314b9ab7241ba6f45681f5d06c" translate="yes" xml:space="preserve">
          <source>Judy::offsetGet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e74250b35539f2cc7b2c3be34baceddb746ec7a9" translate="yes" xml:space="preserve">
          <source>Judy::offsetGet &amp;mdash; Offset to retrieve</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b851e0f4f43355e7f433668c3a5799bf1484ab69" translate="yes" xml:space="preserve">
          <source>Judy::offsetGet &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f00038d2c492b10f313811dae96f8a3c3c3cfaf7" translate="yes" xml:space="preserve">
          <source>Judy::offsetSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932e258dc004fe6321225ab346728af854974bcb" translate="yes" xml:space="preserve">
          <source>Judy::offsetSet &amp;mdash; Offset to set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95635f59c09da45b3da5c0a90381f9567e70f978" translate="yes" xml:space="preserve">
          <source>Judy::offsetSet &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a18461ee7f41ef395890ee1b25df442fab57f2" translate="yes" xml:space="preserve">
          <source>Judy::offsetUnset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96282ecd1b24a22acff6a98bcc60eb07dc4efcb" translate="yes" xml:space="preserve">
          <source>Judy::offsetUnset &amp;mdash; Offset to unset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="115fe7351cf4a7ec83c4b70686dfba9dbdeb4d67" translate="yes" xml:space="preserve">
          <source>Judy::offsetUnset &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b275abec2457f118bd5d563f4e120cc6dc28d602" translate="yes" xml:space="preserve">
          <source>Judy::prev</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df5a80dd6c0a3dee0edb54bc73078226be063a5" translate="yes" xml:space="preserve">
          <source>Judy::prev &amp;mdash; Search for the previous index in the &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8c7f5b717b3fa2570f1d24f2f00e121657ab51" translate="yes" xml:space="preserve">
          <source>Judy::prev &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62fce4a73091edae2c94103c14cfc5dbeecd9264" translate="yes" xml:space="preserve">
          <source>Judy::prevEmpty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92870f03e111d66c6b77fa0fd3b9fc22268174ef" translate="yes" xml:space="preserve">
          <source>Judy::prevEmpty &amp;mdash; Search for the previous absent index in the &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa647c72d85fe27a774a2a2a66f03a32ba3ab90" translate="yes" xml:space="preserve">
          <source>Judy::prevEmpty &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14056db0cfd06c87a3983ffc7e1749f78430bb2f" translate="yes" xml:space="preserve">
          <source>Judy::size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74eaefb701668edfb63bb14f36b56a597cffeac1" translate="yes" xml:space="preserve">
          <source>Judy::size &amp;mdash; Return the size of the current &lt;a href=&quot;class.judy&quot;&gt;Judy&lt;/a&gt; array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b88614f9bfc68633c3be85061fd84ea789b0d627" translate="yes" xml:space="preserve">
          <source>Judy::size &amp;rarr;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01126e0ab758adb773d3c296ead692444669234" translate="yes" xml:space="preserve">
          <source>Julian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a2d05883bc8e57c57a4866c093cb6d5179af91" translate="yes" xml:space="preserve">
          <source>Julian - abbreviated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28cf30eed90819044b0c19e4dbe4349c5317534c" translate="yes" xml:space="preserve">
          <source>Julian day as integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1cfde51c4610d5d725a879a683b88e7fb4ce34" translate="yes" xml:space="preserve">
          <source>Just as classes can make use of traits, so can other traits. By using one or more traits in a trait definition, it can be composed partially or entirely of the members defined in those other traits.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca009221180f5184ca1368d0c9acf211cda7e53" translate="yes" xml:space="preserve">
          <source>Just as with sandbox access, a sandbox may access its parents functions providing that the proper settings have been enabled. Enabling &lt;em&gt;parent_call&lt;/em&gt; will allow the sandbox to call all functions available to the parent scope. Language constructs are each controlled by their own setting: &lt;a href=&quot;function.print&quot;&gt;print&lt;/a&gt; and &lt;a href=&quot;function.echo&quot;&gt;echo&lt;/a&gt; are enabled with &lt;em&gt;parent_echo&lt;/em&gt;. &lt;a href=&quot;function.die&quot;&gt;die()&lt;/a&gt; and &lt;a href=&quot;function.exit&quot;&gt;exit()&lt;/a&gt; are enabled with &lt;em&gt;parent_die&lt;/em&gt;. &lt;a href=&quot;function.eval&quot;&gt;eval()&lt;/a&gt; is enabled with &lt;em&gt;parent_eval&lt;/em&gt; while &lt;a href=&quot;function.include&quot;&gt;include&lt;/a&gt;, &lt;a href=&quot;function.include-once&quot;&gt;include_once&lt;/a&gt;, &lt;a href=&quot;function.require&quot;&gt;require&lt;/a&gt;, and &lt;a href=&quot;function.require-once&quot;&gt;require_once&lt;/a&gt; are enabled through &lt;em&gt;parent_include&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9887b50f2a7c1fdad350469b412276b21994411" translate="yes" xml:space="preserve">
          <source>Just as with sandbox variable access, a sandbox parent's variables may be read from and written to as properties of the &lt;strong&gt;Runkit_Sandbox_Parent&lt;/strong&gt; class. Read access to parental variables may be enabled with the &lt;em&gt;parent_read&lt;/em&gt; setting (in addition to the base &lt;em&gt;parent_access&lt;/em&gt; setting). Write access, in turn, is enabled through the &lt;em&gt;parent_write&lt;/em&gt; setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ca871e2c70e8765dee83c8c41fe78ab9d83b8f" translate="yes" xml:space="preserve">
          <source>Just like &lt;a href=&quot;evstat.attr&quot;&gt;EvStat::attr()&lt;/a&gt; , but returns the previous set of values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90bc764b42df4e10ff8276ea2b1a431da7cf065" translate="yes" xml:space="preserve">
          <source>KEYWORD &quot;string&quot; - match messages with &quot;string&quot; as a keyword</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca9240b97bb236a86adc0160245639bacb81d78" translate="yes" xml:space="preserve">
          <source>KEY_SEQ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b88dae842421fa69ad059376e38f360417c6965" translate="yes" xml:space="preserve">
          <source>KOI8-R</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557ac232f9d010d3e0d11734a2db81e114052582" translate="yes" xml:space="preserve">
          <source>Keep in mind that PHP may be accessing the file as the user id that the web server runs as (often 'nobody'). Safe mode limitations are not taken into account before PHP 5.1.5.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e364e4d79d88ddfb9c05deaeb78043ed459d8d50" translate="yes" xml:space="preserve">
          <source>Keep in mind that PHP may be accessing the file as the user id that the web server runs as (often 'nobody'). Safe mode limitations are not taken into account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbbbc014873fed7c95467dad4247054e4171f449" translate="yes" xml:space="preserve">
          <source>Keep in mind that attempting to set &lt;a href=&quot;https://secure.php.net/manual/en/info.configuration.php#ini.magic-quotes-gpc&quot;&gt; magic_quotes_gpc&lt;/a&gt; at runtime will not work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936cc4a9a05f9170b835d7e12c53d9cbf51209c5" translate="yes" xml:space="preserve">
          <source>Key comparison callback function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f654151ddd68152985d455ba8520f4a48822f6b7" translate="yes" xml:space="preserve">
          <source>Key for an item of the options' array used in &lt;a href=&quot;eventsslcontext.construct&quot;&gt;EventSslContext::__construct()&lt;/a&gt; . Represents maximum depth for the certificate chain verification that shall be allowed for the SSL context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a322ab6abace275b04e2a69d9b6006b2ee36ff7b" translate="yes" xml:space="preserve">
          <source>Key for an item of the options' array used in &lt;a href=&quot;eventsslcontext.construct&quot;&gt;EventSslContext::__construct()&lt;/a&gt; . Represents option that allows self-signed certificates.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
