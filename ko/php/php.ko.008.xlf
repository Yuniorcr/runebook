<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="php">
    <body>
      <group id="php">
        <trans-unit id="0c91de5aaf9fd437ab85b55d68886091ff341d8e" translate="yes" xml:space="preserve">
          <source>(binary) casting and b prefix forward support was added in PHP 5.2.1. Note that the (binary) cast is essential the same as (string), but it should not be relied upon.</source>
          <target state="translated">(binary) casting and b prefix forward support was added in PHP 5.2.1. Note that the (binary) cast is essential the same as (string), but it should not be relied upon.</target>
        </trans-unit>
        <trans-unit id="332f74e2830c8f9aa2a1d6b9cbfdbf92769c5550" translate="yes" xml:space="preserve">
          <source>(bool), (boolean) - cast to &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;</source>
          <target state="translated">(bool), (boolean) - cast to &lt;a href=&quot;language.types.boolean&quot;&gt;boolean&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4bdece1e9dc9d76a30e62baf68885afa25466405" translate="yes" xml:space="preserve">
          <source>(class)</source>
          <target state="translated">(class)</target>
        </trans-unit>
        <trans-unit id="dddbd88c24f208a9032554c8a7a11d6dcae2ac59" translate="yes" xml:space="preserve">
          <source>(default) delay opening the connection until the first message is logged</source>
          <target state="translated">(default) delay opening the connection until the first message is logged</target>
        </trans-unit>
        <trans-unit id="5c559ec4e14cb046168893eaf736e57b66d20610" translate="yes" xml:space="preserve">
          <source>(float), (double), (real) - cast to &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;</source>
          <target state="translated">(float), (double), (real) - cast to &lt;a href=&quot;language.types.float&quot;&gt;float&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9408282d4e61c28522ff07fa969d1115b30f87e2" translate="yes" xml:space="preserve">
          <source>(int), (integer) - cast to &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;</source>
          <target state="translated">(int), (integer) - cast to &lt;a href=&quot;language.types.integer&quot;&gt;integer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e97b77a32fa38d087b8db4b4af3a7c7d8a98651" translate="yes" xml:space="preserve">
          <source>(object) - cast to &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;</source>
          <target state="translated">(object) - cast to &lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="86dcbe2dd583ebde63442757fbac1331d321d14b" translate="yes" xml:space="preserve">
          <source>(pay attention to line endings - PHP uses a native function to parse the input, so a Mac file won't work on Unix).</source>
          <target state="translated">(pay attention to line endings - PHP uses a native function to parse the input, so a Mac file won't work on Unix).</target>
        </trans-unit>
        <trans-unit id="6891bed26da97134f76780399ac9476603236e7b" translate="yes" xml:space="preserve">
          <source>(space)</source>
          <target state="translated">(space)</target>
        </trans-unit>
        <trans-unit id="fb6eec51619d68bbf487c2b0fd0b58f6af3d0e4d" translate="yes" xml:space="preserve">
          <source>(string) - cast to &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;</source>
          <target state="translated">(string) - cast to &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c656ba55feeef17fb66a15bb4857c8fb82d08483" translate="yes" xml:space="preserve">
          <source>(unlike &lt;a href=&quot;function.gzeof&quot;&gt;gzeof()&lt;/a&gt;).</source>
          <target state="translated">(unlike &lt;a href=&quot;function.gzeof&quot;&gt;gzeof()&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="8e4803ca1b45b106796d537cd058e79d14eb6bda" translate="yes" xml:space="preserve">
          <source>(unset) - cast to &lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt;</source>
          <target state="translated">(unset) - cast to &lt;a href=&quot;language.types.null&quot;&gt;NULL&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0fe3199a1f7e16fde7be105ffefdcf96f9784054" translate="yes" xml:space="preserve">
          <source>(unset) casting</source>
          <target state="translated">(unset) casting</target>
        </trans-unit>
        <trans-unit id="dbff153bad1c943f2dd01b634c4f33072678230a" translate="yes" xml:space="preserve">
          <source>(whichever comes first).</source>
          <target state="translated">(whichever comes first).</target>
        </trans-unit>
        <trans-unit id="e7064f0b80f61dbc65915311032d27baa569ae2a" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="translated">)</target>
        </trans-unit>
        <trans-unit id="cd2afd05fd20f736710a6107fab7fc262359402d" translate="yes" xml:space="preserve">
          <source>), both for path and info.</source>
          <target state="translated">), both for path and info.</target>
        </trans-unit>
        <trans-unit id="edb93b92a70cfc828f741f7e6932edda26edc748" translate="yes" xml:space="preserve">
          <source>* - Supported Values are dependent on methods supported by underlying library. See &lt;a href=&quot;http://libssh2.org/&quot;&gt;&amp;raquo; libssh2&lt;/a&gt; documentation for additional information.</source>
          <target state="translated">* - Supported Values are dependent on methods supported by underlying library. See &lt;a href=&quot;http://libssh2.org/&quot;&gt;&amp;raquo; libssh2&lt;/a&gt; documentation for additional information.</target>
        </trans-unit>
        <trans-unit id="98ad8958cb67843b67180de4f2d6ac92e59eac9b" translate="yes" xml:space="preserve">
          <source>* On Windows this will always be 0.</source>
          <target state="translated">* On Windows this will always be 0.</target>
        </trans-unit>
        <trans-unit id="062ce13a93bbd5a151571602f9c4487d67b0db32" translate="yes" xml:space="preserve">
          <source>** Only valid on systems supporting the st_blksize type - other systems (e.g. Windows) return -1.</source>
          <target state="translated">** Only valid on systems supporting the st_blksize type - other systems (e.g. Windows) return -1.</target>
        </trans-unit>
        <trans-unit id="d7e7602defcabd9e17043e8c4b9b74c16418bf1c" translate="yes" xml:space="preserve">
          <source>+$a</source>
          <target state="translated">+$a</target>
        </trans-unit>
        <trans-unit id="12e83dc1f8dc7507a52b0e4717985c1716490c6e" translate="yes" xml:space="preserve">
          <source>++$a</source>
          <target state="translated">++$a</target>
        </trans-unit>
        <trans-unit id="5c10b5b2cd673a0616d529aa5234b12ee7153808" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="translated">,</target>
        </trans-unit>
        <trans-unit id="8278d2adba7612cf98a492d21a4ac4c78acb1202" translate="yes" xml:space="preserve">
          <source>, and</source>
          <target state="translated">, and</target>
        </trans-unit>
        <trans-unit id="19cf2343dc1d50773f0c522754488c68c848cab8" translate="yes" xml:space="preserve">
          <source>, or endpoint.</source>
          <target state="translated">, or endpoint.</target>
        </trans-unit>
        <trans-unit id="48d74208ee695bb60640e86c42281075387fa311" translate="yes" xml:space="preserve">
          <source>, whereby non alphanumeric characters of the current locale are substituted by underscores. If &lt;code&gt;filename&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;, &lt;em&gt;image&lt;/em&gt; is used to build the C identifiers.</source>
          <target state="translated">, whereby non alphanumeric characters of the current locale are substituted by underscores. If &lt;code&gt;filename&lt;/code&gt; is set to &lt;strong&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/strong&gt;, &lt;em&gt;image&lt;/em&gt; is used to build the C identifiers.</target>
        </trans-unit>
        <trans-unit id="7f494b4650b9ec279f5dc31d98dad34c635c4145" translate="yes" xml:space="preserve">
          <source>-$a</source>
          <target state="translated">-$a</target>
        </trans-unit>
        <trans-unit id="99a5d45a0859fa6ae461172180f607c8d98e032b" translate="yes" xml:space="preserve">
          <source>--$a</source>
          <target state="translated">--$a</target>
        </trans-unit>
        <trans-unit id="bd56696a1d255821cc0c643f3a31bc68ca68471c" translate="yes" xml:space="preserve">
          <source>-1 if &lt;code&gt;str1&lt;/code&gt; is &lt;em&gt;less&lt;/em&gt; than &lt;code&gt;str2&lt;/code&gt; .</source>
          <target state="translated">-1 if &lt;code&gt;str1&lt;/code&gt; is &lt;em&gt;less&lt;/em&gt; than &lt;code&gt;str2&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b1ec306f2a0aecf485e046a47cd08b71a8ae20f" translate="yes" xml:space="preserve">
          <source>-based algorithm or alternative algorithms that may be available on the system.</source>
          <target state="translated">-based algorithm or alternative algorithms that may be available on the system.</target>
        </trans-unit>
        <trans-unit id="3a52ce780950d4d969792a2559cd519d7ee8c727" translate="yes" xml:space="preserve">
          <source>.</source>
          <target state="translated">.</target>
        </trans-unit>
        <trans-unit id="2ecf093a85ecb32006d58ea9ad7271a54a00253b" translate="yes" xml:space="preserve">
          <source>. \ + * ? [ ^ ] ( $ )</source>
          <target state="translated">. \ + * ? [ ^ ] ( $ )</target>
        </trans-unit>
        <trans-unit id="6eae3a5b062c6d0d79f070c26e6d62486b40cb46" translate="yes" xml:space="preserve">
          <source>...</source>
          <target state="translated">...</target>
        </trans-unit>
        <trans-unit id="0a257a3b5c91876e4095969316c08cf97777a465" translate="yes" xml:space="preserve">
          <source>... normal progression ...</source>
          <target state="translated">... normal progression ...</target>
        </trans-unit>
        <trans-unit id="330b4d69f6ceb728d36fa04a9148e7cf72049cc1" translate="yes" xml:space="preserve">
          <source>...and the code externally to load this phar archive:</source>
          <target state="translated">...and the code externally to load this phar archive:</target>
        </trans-unit>
        <trans-unit id="9dacdca6782e0d690b213cc574b8288df233845a" translate="yes" xml:space="preserve">
          <source>/* Constants */</source>
          <target state="translated">/* Constants */</target>
        </trans-unit>
        <trans-unit id="b3f7b32d4af49f23810c875bd27536e4d6588203" translate="yes" xml:space="preserve">
          <source>/* Inherited methods */</source>
          <target state="translated">/* Inherited methods */</target>
        </trans-unit>
        <trans-unit id="8830c94e48d66f4147c0794f4bb7898cbaac69ef" translate="yes" xml:space="preserve">
          <source>/* Inherited properties */</source>
          <target state="translated">/* Inherited properties */</target>
        </trans-unit>
        <trans-unit id="485fb4c3d0c7f216a13454367d368189a9df79ea" translate="yes" xml:space="preserve">
          <source>/* Inherits */</source>
          <target state="translated">/* Inherits */</target>
        </trans-unit>
        <trans-unit id="37be9381f8c38d6fee3272e03d4e122ed74be140" translate="yes" xml:space="preserve">
          <source>/* Methods */</source>
          <target state="translated">/* Methods */</target>
        </trans-unit>
        <trans-unit id="69242f605aa9d10e54f37a21bd05396f2a5eced3" translate="yes" xml:space="preserve">
          <source>/* Properties */</source>
          <target state="translated">/* Properties */</target>
        </trans-unit>
        <trans-unit id="b2006971f7c6154e41aac1c19bea345d5f6c0e88" translate="yes" xml:space="preserve">
          <source>0 (Default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d626c0a7fa18659be21c0238624cda9bad1b33ac" translate="yes" xml:space="preserve">
          <source>0 - Parentheses surround the quantity and currency_symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0886aed37195fe7a4a159343d03d9e07b90861" translate="yes" xml:space="preserve">
          <source>0 - an array with the byte-value as key and the frequency of every byte as value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15dee25a6f3966edb2d53a7f33dc4852479e9214" translate="yes" xml:space="preserve">
          <source>0 - returns the number of words found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf71799aa9bace52be59dea95ae899194901d71" translate="yes" xml:space="preserve">
          <source>0 =&amp;gt; 'bar',</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780d189d508cdbc4060abeb36fc41c75bdbcde61" translate="yes" xml:space="preserve">
          <source>0 =&amp;gt; 'baz',</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3173f489c094e3aff011d031c5d04c5fa90b79" translate="yes" xml:space="preserve">
          <source>0 if &lt;code&gt;str1&lt;/code&gt; is &lt;em&gt;equal&lt;/em&gt; to &lt;code&gt;str2&lt;/code&gt;;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5945f4c34e051c8816c331a6f20be2f836bfe064" translate="yes" xml:space="preserve">
          <source>0 or &lt;strong&gt;&lt;code&gt;CAL_GREGORIAN&lt;/code&gt;&lt;/strong&gt; - Gregorian Calendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db6b0c8265855c9ff82b9992d8fc84e66baeb9a0" translate="yes" xml:space="preserve">
          <source>0 or more quantifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f21d1c6a69947ca29abf734e7b1aec89722be4" translate="yes" xml:space="preserve">
          <source>0-indexed number of the column you wish to retrieve from the row. If no value is supplied, &lt;strong&gt;PDOStatement::fetchColumn()&lt;/strong&gt; fetches the first column.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a1dda8e6b6ecd14af919db183c9388013d98e9a" translate="yes" xml:space="preserve">
          <source>1 (&lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;) or 0 (&lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a965bcf86ddf1cbbb6aa8e685c6d054a3a6dd38" translate="yes" xml:space="preserve">
          <source>1 - The sign string precedes the quantity and currency_symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf5b5213df9de45d5dbe93794d0359ffadc5042" translate="yes" xml:space="preserve">
          <source>1 - returns an array containing all the words found inside the &lt;code&gt;string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c86e326092068d3e4a96cbb9d204fc01a933a01" translate="yes" xml:space="preserve">
          <source>1 - same as 0 but only byte-values with a frequency greater than zero are listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fd05604baf70269050089564cc1e409c7ac30a" translate="yes" xml:space="preserve">
          <source>1 if &lt;code&gt;str1&lt;/code&gt; is &lt;em&gt;greater&lt;/em&gt; than &lt;code&gt;str2&lt;/code&gt; ;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2cd751afe5b35db2d41bf46ea4641293e3e9a90" translate="yes" xml:space="preserve">
          <source>1 or &lt;strong&gt;&lt;code&gt;CAL_JULIAN&lt;/code&gt;&lt;/strong&gt; - Julian Calendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a0587b6722be5c099489803fea1057d8b278971" translate="yes" xml:space="preserve">
          <source>1 or more quantifier</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcadc24b7e6f5c0f8c794c9d2980ed2e27d20099" translate="yes" xml:space="preserve">
          <source>1.1.0, 2.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5591df20b6e5525dc2f9089556369241a087f7" translate="yes" xml:space="preserve">
          <source>102&amp;deg;</source>
          <target state="translated">102&amp;deg;</target>
        </trans-unit>
        <trans-unit id="ef7a7a1e3878dda5f8033a01e65a1b368b753530" translate="yes" xml:space="preserve">
          <source>108&amp;deg;</source>
          <target state="translated">108&amp;deg;</target>
        </trans-unit>
        <trans-unit id="d9bc2ce7c5c6fd48b2f189050657036ca4793e65" translate="yes" xml:space="preserve">
          <source>1111111111111111111111111111111 (31 1's)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fe70376c4c2bb5bfdbd8ac6aea957f3f64feba" translate="yes" xml:space="preserve">
          <source>11111111111111111111111111111111 (32 1's)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81d73a98196f9b8a4c8f4c263d1cb2cca026155d" translate="yes" xml:space="preserve">
          <source>111111111111111111111111111111111111111111111111111111111111111 (63 1's)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61315aa01dc05b9ec54ae6b6d3d8b0e5c1a16757" translate="yes" xml:space="preserve">
          <source>1111111111111111111111111111111111111111111111111111111111111111 (64 1's)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624f0f164a0c7add31ed60424df7176c67e8020c" translate="yes" xml:space="preserve">
          <source>12-hour format of an hour with leading zeros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd659583388b58862ae43905be06d661fe38c52" translate="yes" xml:space="preserve">
          <source>12-hour format of an hour with or without leading zero</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="358553583d768fd0e3b1e1f952a1d68e1e74e708" translate="yes" xml:space="preserve">
          <source>12-hour format of an hour without leading zeros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4210320f934e7be1c96972a087e40580a174553" translate="yes" xml:space="preserve">
          <source>160-bit subprime, q | p-1 (public)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19ec2a3a5c90896e24599f1478f13d28c69bd654" translate="yes" xml:space="preserve">
          <source>2 - The sign string succeeds the quantity and currency_symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7434b6929848393cf42ca35b46523c149724b9" translate="yes" xml:space="preserve">
          <source>2 - returns an associative array, where the key is the numeric position of the word inside the &lt;code&gt;string&lt;/code&gt; and the value is the actual word itself</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e2a26885035841121b545bd6eadb8eabf8a4266" translate="yes" xml:space="preserve">
          <source>2 - same as 0 but only byte-values with a frequency equal to zero are listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab04c61ab15f44ca320e52e2476dfb0d75e9e03" translate="yes" xml:space="preserve">
          <source>2 if the entry was found and updated, 1 if the entry was newly added or 0 if there was an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e224b10e17856a4a284e8af12b083922b2cec3" translate="yes" xml:space="preserve">
          <source>2 or &lt;strong&gt;&lt;code&gt;CAL_JEWISH&lt;/code&gt;&lt;/strong&gt; - Jewish Calendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecafd1db50e459c8255c799d399d3fca682a98d" translate="yes" xml:space="preserve">
          <source>2.0.0b</source>
          <target state="translated">2.0.0b</target>
        </trans-unit>
        <trans-unit id="4df7cba9f107eef671a7984aeabc27c4fd3db11f" translate="yes" xml:space="preserve">
          <source>2004-02-12T15:19:21+00:00</source>
          <target state="translated">2004-02-12T15:19:21+00:00</target>
        </trans-unit>
        <trans-unit id="46f58a0259d7caf99a3f5a4f46cc9fb887f68b92" translate="yes" xml:space="preserve">
          <source>2147483647 (largest signed integer)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93548d5ea12a06eb5d6657ef01cb5127d8960ffb" translate="yes" xml:space="preserve">
          <source>24-hour format of an hour with leading zeros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692bfe4d896f6708f4691abf041bb6ecb5f6d179" translate="yes" xml:space="preserve">
          <source>24-hour format of an hour with or without leading zeros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf56ba89f7996150a485ad478de96db75121775" translate="yes" xml:space="preserve">
          <source>24-hour format of an hour without leading zeros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a2396fc0bb7e4dae9d959a2f789f8619006b7f3" translate="yes" xml:space="preserve">
          <source>3 - The sign string immediately precedes the currency_symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67159ef4947a2f5f93615339be7bfdfbfa018754" translate="yes" xml:space="preserve">
          <source>3 - a string containing all unique characters is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9005a2a219d108641284154257a1def09a7cc94" translate="yes" xml:space="preserve">
          <source>3 or &lt;strong&gt;&lt;code&gt;CAL_FRENCH&lt;/code&gt;&lt;/strong&gt; - French Revolutionary Calendar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58b660365421d5f672a5d03c86162c7ddfb7d23" translate="yes" xml:space="preserve">
          <source>4 - The sign string immediately succeeds the currency_symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cc39b07a4254af31c8785a96a38c043ff4bb619" translate="yes" xml:space="preserve">
          <source>4 - a string containing all not used characters is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600395b84189bda4abb58186b1ddb979d4ec9921" translate="yes" xml:space="preserve">
          <source>4294967295 (largest unsigned integer)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a10d8186a9e67d6c7b8e11ff7e2b734f73e349de" translate="yes" xml:space="preserve">
          <source>5.2.11, 5.3.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed87331a5116a816971603bc8a00d5eaf07a552" translate="yes" xml:space="preserve">
          <source>5.2.2 - 5.2.6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bb01ef4a46ac7f2235c8fc9f81042fda3314ea" translate="yes" xml:space="preserve">
          <source>5.3.27, 5.4.17</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cb35c207c226c9e3858f8f2a2fbef14a462907" translate="yes" xml:space="preserve">
          <source>5.4.0/PECL 2.0.0b1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2fa6be524993300de150b9ff68a9d742e64e1e" translate="yes" xml:space="preserve">
          <source>5.4.32, 5.5.16</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86649da4469a435802df6f7a1f602cc2a809672d" translate="yes" xml:space="preserve">
          <source>5.4.42, 5.5.27</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37ba56768564a12668e7eff48ecd3bd07bfe0583" translate="yes" xml:space="preserve">
          <source>5.4.43, 5.5.27, 5.6.11</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0b92097c21f6d3ec9ec27a7d0c8405fcc7ce7d6" translate="yes" xml:space="preserve">
          <source>5.5.0/PECL 3.0.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38ed65804945c3c13cae4972958bf89f880f5e1" translate="yes" xml:space="preserve">
          <source>5.5.21, 5.6.5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f5fea51eaae1eeecffcbc7d4765b1e3f6253fa7" translate="yes" xml:space="preserve">
          <source>5.5.22, 5.6.6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6952b8ac337dcb51b768de706ba3f213b76feb5" translate="yes" xml:space="preserve">
          <source>5.5.38, 5.6.24, 7.0.9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f002cd728f9a2f4b1fbef3ab88cd0982a177568f" translate="yes" xml:space="preserve">
          <source>5.6.25, 7.0.10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e447b5a400168ccc42767eb5631f84ba66cc637f" translate="yes" xml:space="preserve">
          <source>7.0.15, 7.1.1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9dedda5a0123b0522f09b890d104ce806bc9be0" translate="yes" xml:space="preserve">
          <source>7.0.16, 7.1.2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eecad480c4e24760bd5ea70adb79d298edad04a9" translate="yes" xml:space="preserve">
          <source>71%3F%3FE%01%09%01%8F%08%00</source>
          <target state="translated">71%3F%3FE%01%09%01%8F%08%00</target>
        </trans-unit>
        <trans-unit id="4faf03cfbc9c37b46e9513413aae678dad53c561" translate="yes" xml:space="preserve">
          <source>7bit</source>
          <target state="translated">7bit</target>
        </trans-unit>
        <trans-unit id="48114c4ac270bf82a22fbeba73c1c53da4424a0f" translate="yes" xml:space="preserve">
          <source>8bit</source>
          <target state="translated">8bit</target>
        </trans-unit>
        <trans-unit id="b953fedb140a718b9a2fa59a044be4e5afd40be1" translate="yes" xml:space="preserve">
          <source>9 988 776,65 &amp;euro; in France</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7948617a8f9cc69c7216240d7c15d3a961f511" translate="yes" xml:space="preserve">
          <source>9.988.776,65 &amp;euro; in Germany</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f2f5e87ea34fda844f3be4cf34ce19ca2aee22b" translate="yes" xml:space="preserve">
          <source>90&amp;deg;50'</source>
          <target state="translated">90&amp;deg;50'</target>
        </trans-unit>
        <trans-unit id="fbaecc90fc17888b8c5567bdca6eae56e97f890a" translate="yes" xml:space="preserve">
          <source>9223372036854775807 (largest signed integer)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb016165f20103a814cb474afca7dad366bc98cc" translate="yes" xml:space="preserve">
          <source>96&amp;deg;</source>
          <target state="translated">96&amp;deg;</target>
        </trans-unit>
        <trans-unit id="1a9908e33b4bb1e82eecb220d889fc626ddb262d" translate="yes" xml:space="preserve">
          <source>::class</source>
          <target state="translated">::class</target>
        </trans-unit>
        <trans-unit id="2d1678ac7aa256d2511610e3fd7e39c447a8d7c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.construct&quot;&gt;APCIterator::__construct&lt;/a&gt; &amp;mdash; Constructs an APCIterator iterator object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe84cc2eb3d39d39ae6dbfa47c52862e9dd3ce03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.current&quot;&gt;APCIterator::current()&lt;/a&gt; - Get current item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d4827de47892e8aabcf89aa4e8314e21c746ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.current&quot;&gt;APCIterator::current&lt;/a&gt; &amp;mdash; Get current item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08054ba5442aabcb878260af9c525b76d3080ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.gettotalcount&quot;&gt;APCIterator::getTotalCount()&lt;/a&gt; - Get total count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ed059fb031f83ee18d430e8af45340dc3d2a8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.gettotalcount&quot;&gt;APCIterator::getTotalCount&lt;/a&gt; &amp;mdash; Get total count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d4f3fd32836fccb9886cdf09757151870002347" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.gettotalhits&quot;&gt;APCIterator::getTotalHits()&lt;/a&gt; - Get total cache hits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96c00f24f0193fbe4dd5d0489d26674792af27f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.gettotalhits&quot;&gt;APCIterator::getTotalHits&lt;/a&gt; &amp;mdash; Get total cache hits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="027addc1626c1515d47cb1e5577ff1ef2bde49a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.gettotalsize&quot;&gt;APCIterator::getTotalSize()&lt;/a&gt; - Get total cache size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b5a3236d9f0a4f159aae8bbe768c070adcca97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.gettotalsize&quot;&gt;APCIterator::getTotalSize&lt;/a&gt; &amp;mdash; Get total cache size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2679e231bfee5f5ebe0016d84864816f8f0c83fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.key&quot;&gt;APCIterator::key&lt;/a&gt; &amp;mdash; Get iterator key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34f8e34f45ce428c0f83b09681f611405ed05b59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.next&quot;&gt;APCIterator::next()&lt;/a&gt; - Move pointer to next item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="118b41164a3ec4c052c9c7f5c9a18cab366b8e2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.next&quot;&gt;APCIterator::next&lt;/a&gt; &amp;mdash; Move pointer to next item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfef31d9e7daf67620549daddbde90bfe189b78" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.rewind&quot;&gt;APCIterator::rewind()&lt;/a&gt; - Rewinds iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285d6f7d8ae9d53262ef80c041ffae2338aab5e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.rewind&quot;&gt;APCIterator::rewind&lt;/a&gt; &amp;mdash; Rewinds iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24dc77b727a1cd4279ea7f4c27da708bef49ec37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apciterator.valid&quot;&gt;APCIterator::valid&lt;/a&gt; &amp;mdash; Checks if current position is valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9861d56c98e5075015fdf8fdd107056d802fd61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.construct&quot;&gt;APCUIterator::__construct&lt;/a&gt; &amp;mdash; Constructs an APCUIterator iterator object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550f0bff6ccb4ddc9b69a24063a5f13313292c5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.current&quot;&gt;APCUIterator::current()&lt;/a&gt; - Get current item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60dc805c92122fc339f7a1f67bd02227ca8f3abe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.current&quot;&gt;APCUIterator::current&lt;/a&gt; &amp;mdash; Get current item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999478f1f4f472661b83477cee942a37842e949a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.gettotalcount&quot;&gt;APCUIterator::getTotalCount()&lt;/a&gt; - Get total count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5816a82882895efd3526fb7071d1d11db3ea2f05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.gettotalcount&quot;&gt;APCUIterator::getTotalCount&lt;/a&gt; &amp;mdash; Get total count</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc1473ebd7aebd7e3fc81ec583ffd6bffae3120" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.gettotalhits&quot;&gt;APCUIterator::getTotalHits()&lt;/a&gt; - Get total cache hits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08573c4bb5dee8836c99e5b9de6d47bb8daedbde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.gettotalhits&quot;&gt;APCUIterator::getTotalHits&lt;/a&gt; &amp;mdash; Get total cache hits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f2597648974dc0febab9138bef94bcd4bbfcfb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.gettotalsize&quot;&gt;APCUIterator::getTotalSize()&lt;/a&gt; - Get total cache size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7694c2bb08fd050677ec1d84a38a5e9893aa25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.gettotalsize&quot;&gt;APCUIterator::getTotalSize&lt;/a&gt; &amp;mdash; Get total cache size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3923c22668a8ab62863fb9bece4b72c94a94136c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.key&quot;&gt;APCUIterator::key&lt;/a&gt; &amp;mdash; Get iterator key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b46a0c0555b4a7002a39611ccbd9dbf9dc3be7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.next&quot;&gt;APCUIterator::next()&lt;/a&gt; - Move pointer to next item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba626eac15cfa9bcb264258f2bdd955b6df3a0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.next&quot;&gt;APCUIterator::next&lt;/a&gt; &amp;mdash; Move pointer to next item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352be7166efd7d2ef7aa0af0c4cb91ff150332ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.rewind&quot;&gt;APCUIterator::rewind()&lt;/a&gt; - Rewinds iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35beb95a19d3c0a6817a4292bb3c551512ceb95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.rewind&quot;&gt;APCUIterator::rewind&lt;/a&gt; &amp;mdash; Rewinds iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05b90f33608927fc04fa5d77f452cd57bb8cb078" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;apcuiterator.valid&quot;&gt;APCUIterator::valid&lt;/a&gt; &amp;mdash; Checks if current position is valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5a2e47a6c34255327de707a082f10e5ddaf86d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.append&quot;&gt;AppendIterator::append()&lt;/a&gt; - Appends an iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a904681e1ab87bd2f263834465b0cb9277c264" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.append&quot;&gt;AppendIterator::append&lt;/a&gt; &amp;mdash; Appends an iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55328fe86240c63298910ba20d46196b52d89179" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.construct&quot;&gt;AppendIterator::__construct()&lt;/a&gt; - Constructs an AppendIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72710acfb61e2cfa451ffff6617dd95c882fdf2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.construct&quot;&gt;AppendIterator::__construct&lt;/a&gt; &amp;mdash; Constructs an AppendIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de1126fa70ed9ce137bba35d8c53b08fe7ce7ff5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.current&quot;&gt;AppendIterator::current()&lt;/a&gt; - Gets the current value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de69574c7e20308d026bf0c134ddb9c66711f79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.current&quot;&gt;AppendIterator::current&lt;/a&gt; &amp;mdash; Gets the current value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e029a57b010ec6fa883aa4a98f0d0cedd60571e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.getarrayiterator&quot;&gt;AppendIterator::getArrayIterator()&lt;/a&gt; - Gets the ArrayIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3ff97d251a24c0fe2cbc1abf46f12b6056ebfd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.getarrayiterator&quot;&gt;AppendIterator::getArrayIterator&lt;/a&gt; &amp;mdash; Gets the ArrayIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acc243d0eb813aef1cefb818c900de1f73a5f824" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.getinneriterator&quot;&gt;AppendIterator::getInnerIterator()&lt;/a&gt; - Gets the inner iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fab9495f9db03191e3200f80938caa4bddcbd18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.getinneriterator&quot;&gt;AppendIterator::getInnerIterator&lt;/a&gt; &amp;mdash; Gets the inner iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74255ada992ce61358e965fa2bb76e937c6b7c63" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.getiteratorindex&quot;&gt;AppendIterator::getIteratorIndex()&lt;/a&gt; - Gets an index of iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="460e46d81359c48b316494563466ea0c78ff427b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.getiteratorindex&quot;&gt;AppendIterator::getIteratorIndex&lt;/a&gt; &amp;mdash; Gets an index of iterators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5134ce3979da0a53c8f77dffadfdd72d9ef639d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.key&quot;&gt;AppendIterator::key()&lt;/a&gt; - Gets the current key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c68dde69dc8164666b9abed92f9a05ec5a3a507" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.key&quot;&gt;AppendIterator::key&lt;/a&gt; &amp;mdash; Gets the current key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5dc045b5bee1b33f6b9e611ace54d8672c69e4d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.next&quot;&gt;AppendIterator::next()&lt;/a&gt; - Moves to the next element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="220ec237a67591125fe1ebbda8c961937819e14b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.next&quot;&gt;AppendIterator::next&lt;/a&gt; &amp;mdash; Moves to the next element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d6dae9adbc967d0906a7d7d7da113936769c4ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.rewind&quot;&gt;AppendIterator::rewind()&lt;/a&gt; - Rewinds the Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c99220892375fa478a3513b1a23ca0e5205be9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.rewind&quot;&gt;AppendIterator::rewind&lt;/a&gt; &amp;mdash; Rewinds the Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="731aef0c23f661e171df559d9dbf0623b5c90c99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.valid&quot;&gt;AppendIterator::valid()&lt;/a&gt; - Checks validity of the current element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3568e1471651eca567ad78e9d3cde28558eb52" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;appenditerator.valid&quot;&gt;AppendIterator::valid&lt;/a&gt; &amp;mdash; Checks validity of the current element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64048626aa0e04cfb66344ee856abcdbfcfd34d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayaccess.offsetexists&quot;&gt;ArrayAccess::offsetExists()&lt;/a&gt; - Whether an offset exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa448d6e3fd95f408c606f60896b7a2b3c5bf6e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayaccess.offsetexists&quot;&gt;ArrayAccess::offsetExists&lt;/a&gt; &amp;mdash; Whether an offset exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ad221122eea0b3445b61e778f7d42da82c0644" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayaccess.offsetget&quot;&gt;ArrayAccess::offsetGet&lt;/a&gt; &amp;mdash; Offset to retrieve</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169503b8b9d5db111c1ea67c4ad9ee2aacbe8bd7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayaccess.offsetset&quot;&gt;ArrayAccess::offsetSet&lt;/a&gt; &amp;mdash; Assign a value to the specified offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e12ef567c64b2e9bfef46d4ebd3f4b104009d07" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayaccess.offsetunset&quot;&gt;ArrayAccess::offsetUnset&lt;/a&gt; &amp;mdash; Unset an offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6d8271674efb8bb899e82b51c1dbc633182a2ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.append&quot;&gt;ArrayIterator::append&lt;/a&gt; &amp;mdash; Append an element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="757382b4cc6af721762802be7d038f91b99d2012" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.asort&quot;&gt;ArrayIterator::asort()&lt;/a&gt; - Sort array by values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b8453ae0aafb82a31f26bb40eaf8136983f048" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.asort&quot;&gt;ArrayIterator::asort&lt;/a&gt; &amp;mdash; Sort array by values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da48bc13418f0a3ccf3841d430a752cccc872f47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.construct&quot;&gt;ArrayIterator::__construct&lt;/a&gt; &amp;mdash; Construct an ArrayIterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4610b811733dfafde2977c7312f927e1a47ecc92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.count&quot;&gt;ArrayIterator::count&lt;/a&gt; &amp;mdash; Count elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f72fc0b7d36751685f8dc079a0f01c1d8562e87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.current&quot;&gt;ArrayIterator::current&lt;/a&gt; &amp;mdash; Return current array entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf042289bd6bfa5159b813b28a720b1ad2dc5b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.getarraycopy&quot;&gt;ArrayIterator::getArrayCopy()&lt;/a&gt; - Get array copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694885965dca55660877fddd2016c1255b1d2ee1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.getarraycopy&quot;&gt;ArrayIterator::getArrayCopy&lt;/a&gt; &amp;mdash; Get array copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c33ef2412d294ab964f4275ed74477a60cac92" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.getflags&quot;&gt;ArrayIterator::getFlags()&lt;/a&gt; - Get behavior flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebe87b4a8c78c40e6823e08032139af1699571b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.getflags&quot;&gt;ArrayIterator::getFlags&lt;/a&gt; &amp;mdash; Get behavior flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c798b1edb05dcc99604ea8725804433703d96743" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.key&quot;&gt;ArrayIterator::key&lt;/a&gt; &amp;mdash; Return current array key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe73cb3437618d525c56fc81c69b15065c60726" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.ksort&quot;&gt;ArrayIterator::ksort()&lt;/a&gt; - Sort array by keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8cab075f2a0900ab78df842d68be256d2e316b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.ksort&quot;&gt;ArrayIterator::ksort&lt;/a&gt; &amp;mdash; Sort array by keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f7f04c77e55ac4d0d14e79f76fae5ab63bd1bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.natcasesort&quot;&gt;ArrayIterator::natcasesort()&lt;/a&gt; - Sort an array naturally, case insensitive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392dbb7f7f73edb2d04de2d56c76db4642c0277c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.natcasesort&quot;&gt;ArrayIterator::natcasesort&lt;/a&gt; &amp;mdash; Sort an array naturally, case insensitive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="312276f062cd82939a2d88e5c4747777e36d7122" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.natsort&quot;&gt;ArrayIterator::natsort()&lt;/a&gt; - Sort an array naturally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cdf53c569d63c9890fedfe7b58801bf20a6803d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.natsort&quot;&gt;ArrayIterator::natsort&lt;/a&gt; &amp;mdash; Sort an array naturally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="046ee71ca8c8d6cc892d54878af3e9571501c5fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.next&quot;&gt;ArrayIterator::next()&lt;/a&gt; - Move to next entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a3cde4fdf21ff9a64dcd08d9589ae95b6fd152" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.next&quot;&gt;ArrayIterator::next&lt;/a&gt; &amp;mdash; Move to next entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b54e03c89c052a414f010158c4e58c05d80a1b9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.offsetexists&quot;&gt;ArrayIterator::offsetExists&lt;/a&gt; &amp;mdash; Check if offset exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90b561eff86fd8ac4368c282a0c872f3ea498a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.offsetget&quot;&gt;ArrayIterator::offsetGet()&lt;/a&gt; - Get value for an offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae025b8826d4b7d14b1974547dc65d014eec7e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.offsetget&quot;&gt;ArrayIterator::offsetGet&lt;/a&gt; &amp;mdash; Get value for an offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="734d2cbb8f1752e6e11b7083f5f92ee9d0fe7a85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.offsetset&quot;&gt;ArrayIterator::offsetSet()&lt;/a&gt; - Set value for an offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd8ece6a3be1a48fc4e217fd5fb8e478607ecc2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.offsetset&quot;&gt;ArrayIterator::offsetSet&lt;/a&gt; &amp;mdash; Set value for an offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c51b1d974367f150a2bd7fe9bbc2c174c4bc8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.offsetunset&quot;&gt;ArrayIterator::offsetUnset()&lt;/a&gt; - Unset value for an offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0952f333cfcac4dd4fc3698fe9e4c7f81b6185db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.offsetunset&quot;&gt;ArrayIterator::offsetUnset&lt;/a&gt; &amp;mdash; Unset value for an offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84661e1cd0550e06f0dfe3faa4faf8548a19646d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.rewind&quot;&gt;ArrayIterator::rewind&lt;/a&gt; &amp;mdash; Rewind array back to the start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de02fe280489ab68e0116db2a00ee5d007293737" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.seek&quot;&gt;ArrayIterator::seek&lt;/a&gt; &amp;mdash; Seek to position</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d29f7ea72f18e997b9b4d86f3926fd099ee96eb2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.serialize&quot;&gt;ArrayIterator::serialize()&lt;/a&gt; - Serialize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d197d5a202bbdd52c376dc1898acd16546436206" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.serialize&quot;&gt;ArrayIterator::serialize&lt;/a&gt; &amp;mdash; Serialize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada0c714a9c7ff2b0841f25c5d4bb6caff9c8b56" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.setflags&quot;&gt;ArrayIterator::setFlags&lt;/a&gt; &amp;mdash; Set behaviour flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec20609b7e9f7a079bd064749dfbed27bcf17dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.uasort&quot;&gt;ArrayIterator::uasort()&lt;/a&gt; - Sort with a user-defined comparison function and maintain index association</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f50391258c66c8f79463b5f5e7979059aead334" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.uasort&quot;&gt;ArrayIterator::uasort&lt;/a&gt; &amp;mdash; Sort with a user-defined comparison function and maintain index association</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b0f86312a65f5a57a7bad191eddb46aedc6d48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.uksort&quot;&gt;ArrayIterator::uksort()&lt;/a&gt; - Sort by keys using a user-defined comparison function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76382d5202397f3a9aab1e0c1d495485dd05fce9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.uksort&quot;&gt;ArrayIterator::uksort&lt;/a&gt; &amp;mdash; Sort by keys using a user-defined comparison function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6a31867f5383991d855bfabfaef56e6e847d55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.unserialize&quot;&gt;ArrayIterator::unserialize()&lt;/a&gt; - Unserialize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f896dc41c0248f60228f1e9e9d92e92c77d5b77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.unserialize&quot;&gt;ArrayIterator::unserialize&lt;/a&gt; &amp;mdash; Unserialize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc880a2beb01855e349baca8c32c9aae17ca7b35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.valid&quot;&gt;ArrayIterator::valid()&lt;/a&gt; - Check whether array contains more entries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="746756dc9cfb5fbeb10bfa45e03d4380079387df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayiterator.valid&quot;&gt;ArrayIterator::valid&lt;/a&gt; &amp;mdash; Check whether array contains more entries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd70ff3b101262aacce4608c8ed19dd1caa1d0c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.append&quot;&gt;ArrayObject::append()&lt;/a&gt; - Appends the value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43ebdd83fa375f650a61aaf450687962a86d78e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.append&quot;&gt;ArrayObject::append&lt;/a&gt; &amp;mdash; Appends the value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa302121b485c96d9a29f0a64b2383fd8c979857" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.asort&quot;&gt;ArrayObject::asort()&lt;/a&gt; - Sort the entries by value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d9bbe4b6642f438e23cdd3dcdc09a35fba6432" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.asort&quot;&gt;ArrayObject::asort&lt;/a&gt; &amp;mdash; Sort the entries by value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4408e9673041b00944289f56fd04138e5ac154" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.construct&quot;&gt;ArrayObject::__construct&lt;/a&gt; &amp;mdash; Construct a new array object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b34ef20b2dcb27fd03f9b7c41e142fc73b77fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.count&quot;&gt;ArrayObject::count&lt;/a&gt; &amp;mdash; Get the number of public properties in the ArrayObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af8733e21d4581c1e04b54b1a48fc9d0c173c613" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.exchangearray&quot;&gt;ArrayObject::exchangeArray&lt;/a&gt; &amp;mdash; Exchange the array for another one</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f78afd87c134b5be6062c35793f126507ab40f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.getarraycopy&quot;&gt;ArrayObject::getArrayCopy&lt;/a&gt; &amp;mdash; Creates a copy of the ArrayObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0762d85a8ac8d70267acd15ad18bbcdcce378ba4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.getflags&quot;&gt;ArrayObject::getFlags&lt;/a&gt; &amp;mdash; Gets the behavior flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f9883116066949b7e63a805c2d51d77107f621" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.getiterator&quot;&gt;ArrayObject::getIterator&lt;/a&gt; &amp;mdash; Create a new iterator from an ArrayObject instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445624e9c5f5de2830ce583ab689084a1bc3e4a4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.getiteratorclass&quot;&gt;ArrayObject::getIteratorClass&lt;/a&gt; &amp;mdash; Gets the iterator classname for the ArrayObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d43172c90a799dce932a921429e6d93331aea99" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.ksort&quot;&gt;ArrayObject::ksort()&lt;/a&gt; - Sort the entries by key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f574b948e3394fdc9dbda05fb7c60290626ebe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.ksort&quot;&gt;ArrayObject::ksort&lt;/a&gt; &amp;mdash; Sort the entries by key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491ca5d406f5fe8dac6d76f50c1c0fc1d00670d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.natcasesort&quot;&gt;ArrayObject::natcasesort()&lt;/a&gt; - Sort an array using a case insensitive &quot;natural order&quot; algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5b4bc13a679b991d33a87c3b0248440298af47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.natcasesort&quot;&gt;ArrayObject::natcasesort&lt;/a&gt; &amp;mdash; Sort an array using a case insensitive &quot;natural order&quot; algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e43682a9e4f0da442be96f68142d8655d4829697" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.natsort&quot;&gt;ArrayObject::natsort()&lt;/a&gt; - Sort entries using a &quot;natural order&quot; algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47654def86608841199e050f1ee1a1741801e4ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.natsort&quot;&gt;ArrayObject::natsort&lt;/a&gt; &amp;mdash; Sort entries using a &quot;natural order&quot; algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13f1d48e6eca992973b1213c2f96637d34fc962" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.offsetexists&quot;&gt;ArrayObject::offsetExists&lt;/a&gt; &amp;mdash; Returns whether the requested index exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b516454b35844ef700405991c3bd4bd330b83246" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.offsetget&quot;&gt;ArrayObject::offsetGet&lt;/a&gt; &amp;mdash; Returns the value at the specified index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590a5d437f25ac45b0dc0f120b4f9add43a4e4dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.offsetset&quot;&gt;ArrayObject::offsetSet()&lt;/a&gt; - Sets the value at the specified index to newval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="989092db71d0e21d2c6c98d9080778946677179d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.offsetset&quot;&gt;ArrayObject::offsetSet&lt;/a&gt; &amp;mdash; Sets the value at the specified index to newval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5af9bd2403a6b01cd6e1c21e0271009d5f6121" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.offsetunset&quot;&gt;ArrayObject::offsetUnset&lt;/a&gt; &amp;mdash; Unsets the value at the specified index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05194634a8fa46284ecf2ccf05fb7d8867ab50b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.serialize&quot;&gt;ArrayObject::serialize&lt;/a&gt; &amp;mdash; Serialize an ArrayObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b7006d283c4c073c8a5e2313ba488e7dad1e60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.setflags&quot;&gt;ArrayObject::setFlags()&lt;/a&gt; - Sets the behavior flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aab0f1ef565cfb2be754ec00cf4da36e53a3089" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.setflags&quot;&gt;ArrayObject::setFlags&lt;/a&gt; &amp;mdash; Sets the behavior flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04b68ca05b6f017952587761dac183721c7c32e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.setflags&quot;&gt;ArrayObject::setflags()&lt;/a&gt; - Sets the behavior flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0f8972a0ac4de051f6ea22ac0ddab397759ea7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.setiteratorclass&quot;&gt;ArrayObject::setIteratorClass&lt;/a&gt; &amp;mdash; Sets the iterator classname for the ArrayObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b105d404263356d519df2d2f1b646b5d1678a97f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.uasort&quot;&gt;ArrayObject::uasort()&lt;/a&gt; - Sort the entries with a user-defined comparison function and maintain key association</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b24e708bfc2d61a8b6bc8ec628563e529e5729c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.uasort&quot;&gt;ArrayObject::uasort&lt;/a&gt; &amp;mdash; Sort the entries with a user-defined comparison function and maintain key association</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e043f6f692064047bc3f7f35d44002bd53a1b7e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.uksort&quot;&gt;ArrayObject::uksort()&lt;/a&gt; - Sort the entries by keys using a user-defined comparison function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3535f401baf9d1f2aebd97fe1478cc69fbf08ec4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.uksort&quot;&gt;ArrayObject::uksort&lt;/a&gt; &amp;mdash; Sort the entries by keys using a user-defined comparison function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec0697a328c8c21f2cb0bdccca29ec3e18322bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.unserialize&quot;&gt;ArrayObject::unserialize()&lt;/a&gt; - Unserialize an ArrayObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60571e03085dde8df0d131cc17d89afeb64bac9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;arrayobject.unserialize&quot;&gt;ArrayObject::unserialize&lt;/a&gt; &amp;mdash; Unserialize an ArrayObject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da9938597bbf9b00b072b287c8d9239fecf8f13" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.construct&quot;&gt;CachingIterator::__construct()&lt;/a&gt; - Construct a new CachingIterator object for the iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5b7b8c5bf6dcd743cbdde0db3c804973cf6a60c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.construct&quot;&gt;CachingIterator::__construct&lt;/a&gt; &amp;mdash; Construct a new CachingIterator object for the iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a12b01b0767ffa6dff680cfe17da73db95dd0c8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.count&quot;&gt;CachingIterator::count&lt;/a&gt; &amp;mdash; The number of elements in the iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7016643f063bd750f4f9e126bc5c82ee81b47a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.current&quot;&gt;CachingIterator::current&lt;/a&gt; &amp;mdash; Return the current element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cba1f01a53a00011a994374fe34a8f9a2a307ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.getcache&quot;&gt;CachingIterator::getCache&lt;/a&gt; &amp;mdash; Retrieve the contents of the cache</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8027f794f6f920eb120169092c10bef787f46a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.getflags&quot;&gt;CachingIterator::getFlags&lt;/a&gt; &amp;mdash; Get flags used</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e723b40c4ec165b353c0c2080f1f7077757af0a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.getinneriterator&quot;&gt;CachingIterator::getInnerIterator&lt;/a&gt; &amp;mdash; Returns the inner iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2074e0fbc6d60cffa62e880eca69d5d3d8b2045" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.hasnext&quot;&gt;CachingIterator::hasNext&lt;/a&gt; &amp;mdash; Check whether the inner iterator has a valid next element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8700e575166c1fdbf831b3aafe0c89d9225d1ade" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.key&quot;&gt;CachingIterator::key&lt;/a&gt; &amp;mdash; Return the key for the current element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5342e59856be97f0d26888eaf5160cf0b68e4c72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.next&quot;&gt;CachingIterator::next&lt;/a&gt; &amp;mdash; Move the iterator forward</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be4ce4cb2783ece919a1c9219af8dc2ecb2c3b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.offsetexists&quot;&gt;CachingIterator::offsetExists&lt;/a&gt; &amp;mdash; The offsetExists purpose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd714e12b56adbcabb61015269d28afe4079971e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.offsetget&quot;&gt;CachingIterator::offsetGet&lt;/a&gt; &amp;mdash; The offsetGet purpose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c7c455b160ef91db7c0d8856e34e35e3940544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.offsetset&quot;&gt;CachingIterator::offsetSet&lt;/a&gt; &amp;mdash; The offsetSet purpose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244e8002c48f0383f028c04b15adb18ea91eef77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.offsetunset&quot;&gt;CachingIterator::offsetUnset&lt;/a&gt; &amp;mdash; The offsetUnset purpose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd77ddf9dc5d18edad2db73a626715c271ea69fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.rewind&quot;&gt;CachingIterator::rewind&lt;/a&gt; &amp;mdash; Rewind the iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a218366c672c2d11ec4ca943c1de75d6b8cd1bd8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.setflags&quot;&gt;CachingIterator::setFlags&lt;/a&gt; &amp;mdash; The setFlags purpose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09cb2f71beacfe9127fd4ba4d778bed716b71763" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.tostring&quot;&gt;CachingIterator::__toString&lt;/a&gt; &amp;mdash; Return the string representation of the current element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e143e21473cc4cfdbe92cf35000b2b08db86b8ff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cachingiterator.valid&quot;&gt;CachingIterator::valid&lt;/a&gt; &amp;mdash; Check whether the current element is valid</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="022f996da9e4da65668d49209047ff340ebb9382" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbackfilteriterator.accept&quot;&gt;CallbackFilterIterator::accept()&lt;/a&gt; - Calls the callback with the current value, the current key and the inner iterator as arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b683c31066c405ecc593918a33a5bf68fdd5105c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbackfilteriterator.accept&quot;&gt;CallbackFilterIterator::accept&lt;/a&gt; &amp;mdash; Calls the callback with the current value, the current key and the inner iterator as arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="939c8f543c12be3eaeb5d6e3d7af3a318413d3b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbackfilteriterator.construct&quot;&gt;CallbackFilterIterator::__construct()&lt;/a&gt; - Create a filtered iterator from another iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="128223f2dd90222d1da2e8cf2310ec37d1f9badf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;callbackfilteriterator.construct&quot;&gt;CallbackFilterIterator::__construct&lt;/a&gt; &amp;mdash; Create a filtered iterator from another iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6134131d20a8d3f41b9dbe9dbb97e8a63bd8af62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.collator&quot;&gt;Collator&lt;/a&gt; constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9751c036c98bdb77444be435da2d62477bff215" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.collator&quot;&gt;Collator&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600bf9253624a6fb814016d88b64b6d7e0ae59e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.collator&quot;&gt;Collator&lt;/a&gt;&lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;class.collator&quot;&gt;Collator&lt;/a&gt;&lt;a href=&quot;language.types.object&quot;&gt;object&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="61762ee6c0c6154e84246089450f50193c736c8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.domexception&quot;&gt;DOMException&lt;/a&gt; is thrown if node cannot be imported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a54ff656a84a4daf7258bf9204e658ffe03dfea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.error&quot;&gt;Error&lt;/a&gt; hierarchy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26faa85f8582d378a067a60a1b29f7bffb24707b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.eventdnsbase&quot;&gt;EventDnsBase&lt;/a&gt; is available only if &lt;em&gt;Event&lt;/em&gt; configured &lt;strong&gt;--with-event-extra&lt;/strong&gt; ( &lt;em&gt;event_extra&lt;/em&gt; library, &lt;em&gt;libevent protocol-specific functionality support including HTTP, DNS, and RPC&lt;/em&gt; ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="954739d435c53d8e95c76df1b200e0c82f536fc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.eventhttprequest&quot;&gt;EventHttpRequest&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e94e81bee135f601f25f261877b45b8248f78f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.eventsslcontext&quot;&gt;EventSslContext&lt;/a&gt; class object. Enables OpenSSL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68348518e243aad413c39b18a0ae8473969f344f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.eventsslcontext&quot;&gt;EventSslContext&lt;/a&gt; class object. Turns plain HTTP server into HTTPS server. It means that if &lt;code&gt;ctx&lt;/code&gt; is configured correctly, then the underlying buffer events will be based on OpenSSL sockets. Thus, all traffic will pass through the SSL or TLS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a10c51fc9ca2cbd2e580266ea57bb4e427170c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.eventutil&quot;&gt;EventUtil&lt;/a&gt; is a singleton. Therefore the constructor is abstract, and it is impossible to create objects based on this class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4207bc8fa0f629ac8d4a3db878ef4c6f845b6394" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.evidle&quot;&gt;EvIdle&lt;/a&gt; watcher works when there is nothing to do with other watchers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2c1d44457a0c559a5b8779b80b6b835f1f6222" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.evperiodic&quot;&gt;EvPeriodic&lt;/a&gt; watcher has been timed out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc107c2099be3fb013bab4c402baeccb631bef44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.evprepare&quot;&gt;EvPrepare&lt;/a&gt; and &lt;strong&gt;EvCheck&lt;/strong&gt; watchers are usually used in pairs. &lt;a href=&quot;class.evprepare&quot;&gt;EvPrepare&lt;/a&gt; watchers get invoked before the process blocks, &lt;strong&gt;EvCheck&lt;/strong&gt; afterwards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a763c29b1537843fd3c5f08203291414028b279b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.evtimer&quot;&gt;EvTimer&lt;/a&gt; watcher has been timed out.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4a9a960e6052c4b770399c500d91740a12d94a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.generator&quot;&gt;Generator&lt;/a&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5568e46c05bdc23ec35aac1eae890ea1aa190bf7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.gmagickpixel&quot;&gt;GmagickPixel&lt;/a&gt; or &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; indicating color to use for filling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb91df853269a5aae1611f9b4bca57178fefd08a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.gmagickpixel&quot;&gt;GmagickPixel&lt;/a&gt; or &lt;a href=&quot;language.types.string&quot;&gt;string&lt;/a&gt; representing the color for the stroke.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544f6eaf06b5458a677a6da13dac3ac36138a8ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.iterator&quot;&gt;Iterator&lt;/a&gt; support was added, as &lt;strong&gt;mysqli_result&lt;/strong&gt; now implements &lt;a href=&quot;class.traversable&quot;&gt;Traversable&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="274d8150a2be95d7887df907375baac0c1f7810e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.numberformatter&quot;&gt;NumberFormatter&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa02fa7a0ede3a7d85ae03b1756a26a5e388ab1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.outofboundsexception&quot;&gt;OutOfBoundsException&lt;/a&gt; if the key could not be found and a default value was not provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50429fa9d341e7727dcaed91316da25a7a608547" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.outofrangeexception&quot;&gt;OutOfRangeException&lt;/a&gt; if the index is not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1015c1b703af79d425e5a9a98f338d33fd01cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.outofrangeexception&quot;&gt;OutOfRangeException&lt;/a&gt; if the position is not valid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a91805b97eb0a8c635dd225d5df84c948960624c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.pharexception&quot;&gt;PharException&lt;/a&gt; is thrown if an alias is passed in and the phar archive already has an explicit alias</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ba492afe7a026795733ba315f4b6e7992b04e19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.pharexception&quot;&gt;PharException&lt;/a&gt; is thrown if any problems are encountered flushing changes to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2120c26cd1a0497c93555a4961c223ce444398dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.pharexception&quot;&gt;PharException&lt;/a&gt; is thrown if not called directly within PHP execution, if no __HALT_COMPILER(); token is found in the current source file, or if the file cannot be opened for reading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565b750b94c6e9c6e831ad81dfbdd1636aee21dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.pharexception&quot;&gt;PharException&lt;/a&gt; is thrown if the parameter is an unknown file format specifier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21be022668d74276fc007d8e9d3178b5d83e8489" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.pharexception&quot;&gt;PharException&lt;/a&gt; is thrown if there are any open file pointers to the phar archive, or any existing &lt;a href=&quot;class.phar&quot;&gt;Phar&lt;/a&gt;, &lt;a href=&quot;class.phardata&quot;&gt;PharData&lt;/a&gt;, or &lt;a href=&quot;class.pharfileinfo&quot;&gt;PharFileInfo&lt;/a&gt; objects referring to the phar archive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d466ce0cc0d01f4b8d55e8bdaf03250cd05216f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.resourcebundle&quot;&gt;ResourceBundle&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b527d6591c67a4bf52bfeca72afa075716c21be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.traversable&quot;&gt;traversable&lt;/a&gt; object or &lt;a href=&quot;language.types.array&quot;&gt;array&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="236c2841b4533b0b9dcd1a7dcc33232329ddc00d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.underflowexception&quot;&gt;UnderflowException&lt;/a&gt; if empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27faf94cb25a72205e0066d2c9743aa74b07706e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.unexpectedvalueexception&quot;&gt;UnexpectedValueException&lt;/a&gt; is thrown if &lt;a href=&quot;https://secure.php.net/manual/en/phar.configuration.php#ini.phar.readonly&quot;&gt;phar.readonly&lt;/a&gt; is enabled in php.ini. &lt;a href=&quot;class.pharexception&quot;&gt;PharException&lt;/a&gt; is thrown if any problems are encountered flushing changes to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78febabe6bfb57ffda4a4d93b0836c2e417374f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.yaf-application&quot;&gt;Yaf_Application&lt;/a&gt; implements the singleton pattern, and &lt;a href=&quot;class.yaf-application&quot;&gt;Yaf_Application&lt;/a&gt; can not be serialized or unserialized which will cause problem when you try to use PHPUnit to write some test case for Yaf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35274b5857d3ef5e53c20602a2147e5285eab408" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.yaf-application&quot;&gt;Yaf_Application&lt;/a&gt; instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248b213a1d60b513f87492a4ed73b5cad67da582" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.yaf-application&quot;&gt;Yaf_Application&lt;/a&gt; provides a bootstrapping facility for applications which provides reusable resources, common- and module-based bootstrap classes and dependency checking.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ab562be0ef3132c144138c7277e909416b35e2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.yaf-config-ini&quot;&gt;Yaf_Config_Ini&lt;/a&gt; constructor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf940edbb48d9c13df1f4fe1a8b72c230bd20b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.yaf-controller-abstract&quot;&gt;Yaf_Controller_Abstract&lt;/a&gt; instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bb2667c259d4aef20ef601dfcb1776eb42efaa7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.yaf-dispatcher&quot;&gt;Yaf_Dispatcher&lt;/a&gt; will render automatically after dispatches a incoming request, you can prevent the rendering by calling this method with &lt;code&gt;flag&lt;/code&gt;&lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d69e75ab1189520198c8eb1ffb77e79dcc1d734" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.yaf-request-abstract&quot;&gt;Yaf_Request_Abstract&lt;/a&gt; instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8e7138137f29a1b3ea77d9d411fb3b1933bb57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.yaf-response-abstract&quot;&gt;Yaf_Response_Abstract&lt;/a&gt; instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91cbdae6a2df3b264c46e8beb5d0e033966e3f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.yaf-route-simple&quot;&gt;Yaf_Route_Simple&lt;/a&gt; will get route info from query string. and the parameters of this constructor will used as keys while searching for the route info in $_GET.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6420aa324d77fcdac33983168a08be89f8ad6c89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.yaf-route-supervar&quot;&gt;Yaf_Route_Supervar&lt;/a&gt; is similar with &lt;a href=&quot;class.yaf-route-static&quot;&gt;Yaf_Route_Static&lt;/a&gt;, the difference is &lt;a href=&quot;class.yaf-route-supervar&quot;&gt;Yaf_Route_Supervar&lt;/a&gt; will look for path info in query string, and the parameter &lt;var&gt;&lt;var&gt;supervar_name&lt;/var&gt;&lt;/var&gt; is the key.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ac1782f7eb9ac910495fec24a5219ea81c59d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;class.yar-client&quot;&gt;Yar_Client&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67623cb539fc23a3114b88f820e7649e37c1e84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;closure.bind&quot;&gt;Closure::bind()&lt;/a&gt; - Duplicates a closure with a specific bound object and class scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfb95cf2f7eebb73a5dd6f72c69d341aa7982ed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;closure.bind&quot;&gt;Closure::bind&lt;/a&gt; &amp;mdash; Duplicates a closure with a specific bound object and class scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="029d47997950ae33527152120bec490ef69937e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;closure.bindto&quot;&gt;Closure::bindTo()&lt;/a&gt; - Duplicates the closure with a new bound object and class scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb6d5b3125e1b46879c5324147b79e18331f83d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;closure.bindto&quot;&gt;Closure::bindTo&lt;/a&gt; &amp;mdash; Duplicates the closure with a new bound object and class scope</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d72fd27a758e1e42253460a25fc22f66d014b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;closure.call&quot;&gt;Closure::call&lt;/a&gt; &amp;mdash; Binds and calls the closure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="053a10657b94f137cb9a61e147581877c462366e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;closure.construct&quot;&gt;Closure::__construct&lt;/a&gt; &amp;mdash; Constructor that disallows instantiation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d402803350da924aed27c4b8adc3fefd952cd1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;closure.fromcallable&quot;&gt;Closure::fromCallable&lt;/a&gt; &amp;mdash; Converts a callable into a closure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afc5777d897032eb64ae9eebd7118828e6a3bd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.asort&quot;&gt;Collator::asort&lt;/a&gt; &amp;mdash; Sort array maintaining index association</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ce6930a40c5eebc68cfe70eb615b03e4f53427c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.asort&quot;&gt;collator_asort()&lt;/a&gt; - Sort array maintaining index association</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82405b6ddea538b2a92c05fa6c0bc22bf4dee8c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.compare&quot;&gt;Collator::compare&lt;/a&gt; &amp;mdash; Compare two Unicode strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394598bf804b851d900c8e1a0a7f9609efe7ed27" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.construct&quot;&gt;Collator::__construct()&lt;/a&gt; - Create a collator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f3b0d6f1877456ace1735e95d201f5abd41794" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.construct&quot;&gt;Collator::__construct&lt;/a&gt; &amp;mdash; Create a collator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bae3cbac13e29d863fd6e0dd64b0ddbc658b546a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.create&quot;&gt;Collator::create()&lt;/a&gt; - Create a collator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b0b6dc981bd66a0e8436eda51b151247ca68a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.create&quot;&gt;Collator::create&lt;/a&gt; &amp;mdash; Create a collator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb409f547f2dd877de6370b53ccc4427672b947" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.create&quot;&gt;collator_create()&lt;/a&gt; - Create a collator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe478f0c91a7867f8158bc700bc5b625c263e865" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.getattribute&quot;&gt;Collator::getAttribute&lt;/a&gt; &amp;mdash; Get collation attribute value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71da06c7701763c470ce8b041e9e0395b70dac21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.getattribute&quot;&gt;collator_get_attribute()&lt;/a&gt; - Get collation attribute value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e71c83777ed289d1ebb8a56b2f2a7fadaa11a17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.geterrorcode&quot;&gt;Collator-getErrorCode()&lt;/a&gt; - Get collator's last error code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0235d64b8e271c6ec447632d948a25d5c962f10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.geterrorcode&quot;&gt;Collator::getErrorCode&lt;/a&gt; &amp;mdash; Get collator's last error code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908b7a078f2ca938226899096f3d1957d1556b59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.geterrorcode&quot;&gt;collator_get_error_code()&lt;/a&gt; - Get collator's last error code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc547abb2f034ec9673dbbdc16b9aec6c5daed4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.geterrormessage&quot;&gt;Collator::getErrorMessage&lt;/a&gt; &amp;mdash; Get text for collator's last error code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000dfdaef4b667fea3150d6f02f6d6032ab23025" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.geterrormessage&quot;&gt;collator_get_error_message()&lt;/a&gt; - Get text for collator's last error code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5265caa61711ed60c2869f8ebe707adbb9c84c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.getlocale&quot;&gt;Collator::getLocale&lt;/a&gt; &amp;mdash; Get the locale name of the collator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7708088b0573fdd5cbabe8d689668e4f966c96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.getsortkey&quot;&gt;Collator::getSortKey&lt;/a&gt; &amp;mdash; Get sorting key for a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="740dc17b9c4f88d3a8091342869e7ef01be1f4bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.getstrength&quot;&gt;Collator::getStrength&lt;/a&gt; &amp;mdash; Get current collation strength</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef50bb77054133becdc35dfb7800c813bafa26d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.getstrength&quot;&gt;collator_get_strength()&lt;/a&gt; - Get current collation strength</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c8318dd3cf32ceea7b438f21568f51a12aab17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.setattribute&quot;&gt;Collator::setAttribute&lt;/a&gt; &amp;mdash; Set collation attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfff714d04e04795108b87d848e67a8ae5f49e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.setattribute&quot;&gt;collator_set_attribute()&lt;/a&gt; - Set collation attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c18564e92ae9aef210001c83b95d2dbc982eb16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.setstrength&quot;&gt;Collator::setStrength&lt;/a&gt; &amp;mdash; Set collation strength</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb4b789c2a55186ff401dd7f579f92feee4209f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.setstrength&quot;&gt;collator_set_strength()&lt;/a&gt; - Set collation strength</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44a93a6e67555147f6ecb0a74484f1bb3ed21d41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.sort&quot;&gt;Collator::sort&lt;/a&gt; &amp;mdash; Sort array using specified collator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e992bf453c9cb7f4213cc518e8f6984b17ed7a10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.sort&quot;&gt;collator_sort()&lt;/a&gt; - Sort array using specified collator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="699972419aab6bbbf86fa65100312c8779441e1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.sortwithsortkeys&quot;&gt;Collator::sortWithSortKeys&lt;/a&gt; &amp;mdash; Sort array using specified collator and sort keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466827ee5c89b0434f638c48cb7336d8b839d9bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collator.sortwithsortkeys&quot;&gt;collator_sort_with_sort_keys()&lt;/a&gt; - Sort array using specified collator and sort keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d93f184e8f02e0ae871a53e7dbb9fb0beb2c8e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collectable.isgarbage&quot;&gt;Collectable::isGarbage()&lt;/a&gt; - Determine whether an object has been marked as garbage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d4ce614a5e810facd3962532972803423d9f2f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collectable.isgarbage&quot;&gt;Collectable::isGarbage&lt;/a&gt; &amp;mdash; Determine whether an object has been marked as garbage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b672fcf1865c43da49f3596aefe70c0abe7ac3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;collectable.setgarbage&quot;&gt;Collectable::setGarbage&lt;/a&gt; &amp;mdash; Mark an object as garbage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2246ea61a6652810c2035c6c180bd002b333e11f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cond.broadcast&quot;&gt;Cond::broadcast&lt;/a&gt; &amp;mdash; Broadcast a Condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f99e16ec17b9e177fc0ba6cb04a6bc46d87710" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cond.create&quot;&gt;Cond::create&lt;/a&gt; &amp;mdash; Create a Condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="851c08897eae6fab185e39663bc0143fc930e094" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cond.destroy&quot;&gt;Cond::destroy&lt;/a&gt; &amp;mdash; Destroy a Condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc862db219a66803cecb353f0b49c6781452016" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cond.signal&quot;&gt;Cond::signal&lt;/a&gt; &amp;mdash; Signal a Condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23461490787efb1b1d5329b4a07a96c86e7e7a65" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;cond.wait&quot;&gt;Cond::wait&lt;/a&gt; &amp;mdash; Wait for Condition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31a1822c3d330445ea79a6fab013d11510dd2d32" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;countable.count&quot;&gt;Countable::count&lt;/a&gt; &amp;mdash; Count elements of an object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d813c43426dac9502ad89586242f2b96bae46b7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;curlfile.construct&quot;&gt;CURLFile::__construct&lt;/a&gt; &amp;mdash; Create a CURLFile object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9fb38eb5ceb283a26e621b70adb9bd1390dc37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;curlfile.getfilename&quot;&gt;CURLFile::getFilename&lt;/a&gt; &amp;mdash; Get file name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87c02a03f8846e984cdf605e225f64ec3253387" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;curlfile.getmimetype&quot;&gt;CURLFile::getMimeType&lt;/a&gt; &amp;mdash; Get MIME type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84d6d2e131c1cf418b5a3b823b58a6f4a70b6596" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;curlfile.getpostfilename&quot;&gt;CURLFile::getPostFilename&lt;/a&gt; &amp;mdash; Get file name for POST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c97d6f9d775b41b4d23cb4eb61e889e6fa554f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;curlfile.setmimetype&quot;&gt;CURLFile::setMimeType&lt;/a&gt; &amp;mdash; Set MIME type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7936abeae122d8affd0a360c333b7ca340fb08" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;curlfile.setpostfilename&quot;&gt;CURLFile::setPostFilename&lt;/a&gt; &amp;mdash; Set file name for POST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61b7521ed59ae58987f10fbd66012ffcaba25c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;curlfile.wakeup&quot;&gt;CURLFile::__wakeup&lt;/a&gt; &amp;mdash; Unserialization handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e933f1adefcaa82da20f1ce00e5b173c88fb2c4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dateinterval.construct&quot;&gt;DateInterval::__construct&lt;/a&gt; &amp;mdash; Creates a new DateInterval object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69aaa05580c4aa4bf362f4f12f907907bb35b678" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dateinterval.createfromdatestring&quot;&gt;DateInterval::createFromDateString&lt;/a&gt; &amp;mdash; Sets up a DateInterval from the relative parts of the string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24c0a46680145db02b36048da4dba495892edc05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dateinterval.format&quot;&gt;DateInterval::format()&lt;/a&gt; - Formats the interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80abf87aa22509c4be341910f12f76dc8a04eda" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dateinterval.format&quot;&gt;DateInterval::format&lt;/a&gt; &amp;mdash; Formats the interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1588cc527d4bb73c706780b00a0cd966af99d4c5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dateperiod.construct&quot;&gt;DatePeriod::__construct&lt;/a&gt; &amp;mdash; Creates a new DatePeriod object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c11d27f575f5f2db8b79e49c3b342654b3d987" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dateperiod.getdateinterval&quot;&gt;DatePeriod::getDateInterval()&lt;/a&gt; - Gets the interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099917db8a650ad6449cf5a8e34906fa060edabf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dateperiod.getdateinterval&quot;&gt;DatePeriod::getDateInterval&lt;/a&gt; &amp;mdash; Gets the interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d7413676af0f1b9e1730d9c57b38b7ae4ccfa5e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dateperiod.getenddate&quot;&gt;DatePeriod::getEndDate()&lt;/a&gt; - Gets the end date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604a5bd0aa8ccced2a14007a32f26ba471526d97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dateperiod.getenddate&quot;&gt;DatePeriod::getEndDate&lt;/a&gt; &amp;mdash; Gets the end date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1c5140e29d444e14b5cf047a558360215885b21" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dateperiod.getstartdate&quot;&gt;DatePeriod::getStartDate()&lt;/a&gt; - Gets the start date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85247e0a951dbdf5a96b62610e33ad869fdb4cef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;dateperiod.getstartdate&quot;&gt;DatePeriod::getStartDate&lt;/a&gt; &amp;mdash; Gets the start date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e31fea9c19f3ec301799ad7e80c45b9ddb3d71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.add&quot;&gt;DateTime::add()&lt;/a&gt; - Adds an amount of days, months, years, hours, minutes and seconds to a DateTime object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805199685f7359444fad68f9e0486cd2ad55acab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.add&quot;&gt;DateTime::add&lt;/a&gt; &amp;mdash; Adds an amount of days, months, years, hours, minutes and seconds to a DateTime object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e7df6b847c4f8ab628a51c266ebade4eb72888" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.construct&quot;&gt;DateTime::__construct()&lt;/a&gt; - Returns new DateTime object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bad1eca5517b1de88730e01f2bbcb7b141029c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.construct&quot;&gt;DateTime::__construct&lt;/a&gt; &amp;mdash; Returns new DateTime object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c149fffc4fad3db4dc921a936242a1a5af94f3b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.createfromformat&quot;&gt;DateTime::createFromFormat()&lt;/a&gt; - Parses a time string according to a specified format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2230663575b31e0dbde7baaeb70311d513b4adc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.createfromformat&quot;&gt;DateTime::createFromFormat&lt;/a&gt; &amp;mdash; Parses a time string according to a specified format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9b2500cb64dcd3cbdb3672eff1747848a63007" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.diff&quot;&gt;DateTime::diff()&lt;/a&gt; - Returns the difference between two DateTime objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be75488db25f16af7b90db1227beee3dce228e55" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.diff&quot;&gt;DateTime::diff&lt;/a&gt; &amp;mdash; Returns the difference between two DateTime objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905709edfe5f0aa4b26081f97f0fb41aad189581" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.format&quot;&gt;DateTime::format()&lt;/a&gt; - Returns date formatted according to given format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f25c2eef909c8bb7f1b40e628b6cc9a6dd8c7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.format&quot;&gt;DateTime::format&lt;/a&gt; &amp;mdash; Returns date formatted according to given format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6412c14b6aba6f780f8e6a03fc1763151b744986" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.getlasterrors&quot;&gt;DateTime::getLastErrors()&lt;/a&gt; - Returns the warnings and errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5019dc87307a4c52fe121c9381ebd385bf438401" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.getlasterrors&quot;&gt;DateTime::getLastErrors&lt;/a&gt; &amp;mdash; Returns the warnings and errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99be801935196a5f673c177c5f29b854f64a8fe8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.getoffset&quot;&gt;DateTime::getOffset&lt;/a&gt; &amp;mdash; Returns the timezone offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980c565820cb3f94d0e0da00c4b9c3bd6fa668da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.gettimestamp&quot;&gt;DateTime::getTimestamp()&lt;/a&gt; - Gets the Unix timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb430ae5e614eef44bfe778ab55618ad8d39208d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.gettimestamp&quot;&gt;DateTime::getTimestamp&lt;/a&gt; &amp;mdash; Gets the Unix timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a39947c7541ba795ccfd097a1ec53e9667df5f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.gettimezone&quot;&gt;DateTime::getTimezone()&lt;/a&gt; - Return time zone relative to given DateTime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cf06243b092fedc116496d981a5a02a26ba064c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.gettimezone&quot;&gt;DateTime::getTimezone&lt;/a&gt; &amp;mdash; Return time zone relative to given DateTime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb6c647004f19f40d95506dd141d877af3bcee3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.modify&quot;&gt;DateTime::modify()&lt;/a&gt; - Alters the timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2e1e38d8dec859c2cd601998ce8d26fe72e2ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.modify&quot;&gt;DateTime::modify()&lt;/a&gt; is an alternative when using PHP 5.2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e245bd63ca262f6af9a6dd89a737604f30fc7248" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.modify&quot;&gt;DateTime::modify&lt;/a&gt; &amp;mdash; Alters the timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c993f23d83d357bddb313a9713635418b6dce53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.set-state&quot;&gt;DateTime::__set_state&lt;/a&gt; &amp;mdash; The __set_state handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23865b5ef9f8fe592264311d48ba6043544f214" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.setdate&quot;&gt;DateTime::setDate()&lt;/a&gt; - Sets the date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003ce48761fc5f9bf39042a3eeeda7429cf9c8b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.setdate&quot;&gt;DateTime::setDate&lt;/a&gt; &amp;mdash; Sets the date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a9de7dbde1e76ee014572a7af2d016a03f83ed3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.setisodate&quot;&gt;DateTime::setISODate()&lt;/a&gt; - Sets the ISO date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="688877f0555aba529ceeb6c7bc8b48a6c2bc5171" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.setisodate&quot;&gt;DateTime::setISODate&lt;/a&gt; &amp;mdash; Sets the ISO date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278e62435faa4f38c53677e227ee82f2887a164d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.settime&quot;&gt;DateTime::setTime()&lt;/a&gt; - Sets the time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb971bd1f00514337cc7429ed5deac9d9899821" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.settime&quot;&gt;DateTime::setTime&lt;/a&gt; &amp;mdash; Sets the time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f6474663ac32e9ae0938e4d76786b782e61eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.settimestamp&quot;&gt;DateTime::setTimestamp()&lt;/a&gt; - Sets the date and time based on an Unix timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e185f478702cd06c810d114c486facfb5b7ab8fe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.settimestamp&quot;&gt;DateTime::setTimestamp&lt;/a&gt; &amp;mdash; Sets the date and time based on an Unix timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fffa7e32df9791a186a656a36949d4d202553d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.settimezone&quot;&gt;DateTime::setTimezone()&lt;/a&gt; - Sets the time zone for the DateTime object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3788cc7db98455f99972fa1864503fec20edb85" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.settimezone&quot;&gt;DateTime::setTimezone&lt;/a&gt; &amp;mdash; Sets the time zone for the DateTime object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d2d5bbc12e6790761ef94f2bc2056543f6568b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.sub&quot;&gt;DateTime::sub()&lt;/a&gt; - Subtracts an amount of days, months, years, hours, minutes and seconds from a DateTime object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d57c197a699ae4c607f48d549f71b19fb188038" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.sub&quot;&gt;DateTime::sub&lt;/a&gt; &amp;mdash; Subtracts an amount of days, months, years, hours, minutes and seconds from a DateTime object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a78b17716df4a93e7409af6740e1868b185d9748" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetime.wakeup&quot;&gt;DateTime::__wakeup&lt;/a&gt; &amp;mdash; The __wakeup handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dafdd566d28da9c61c7400aec74a6a8f4f11f1cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimeimmutable.add&quot;&gt;DateTimeImmutable::add&lt;/a&gt; &amp;mdash; Adds an amount of days, months, years, hours, minutes and seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e8dfe43582565ee6f2e247df62c061c3df85030" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimeimmutable.construct&quot;&gt;DateTimeImmutable::__construct&lt;/a&gt; &amp;mdash; Returns new DateTimeImmutable object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47002c8c57da31c7209a43de470a23934a475e3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimeimmutable.createfromformat&quot;&gt;DateTimeImmutable::createFromFormat&lt;/a&gt; &amp;mdash; Parses a time string according to a specified format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3832d7acf8fed5a491588d1dec18b7c6ca550042" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimeimmutable.createfrommutable&quot;&gt;DateTimeImmutable::createFromMutable&lt;/a&gt; &amp;mdash; Returns new DateTimeImmutable object encapsulating the given DateTime object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbe86e43f059916fff327bf3f1a82e87c3fa8c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimeimmutable.getlasterrors&quot;&gt;DateTimeImmutable::getLastErrors&lt;/a&gt; &amp;mdash; Returns the warnings and errors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d883217dd07db46dd47d84c214ca34f30ed3e6b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimeimmutable.modify&quot;&gt;DateTimeImmutable::modify&lt;/a&gt; &amp;mdash; Creates a new object with modified timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fec73e0f556d3db7fd24a228dc2c339ae63921" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimeimmutable.set-state&quot;&gt;DateTimeImmutable::__set_state&lt;/a&gt; &amp;mdash; The __set_state handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e95a7afdf6436f3825e3c3268f91e19f48456604" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimeimmutable.setdate&quot;&gt;DateTimeImmutable::setDate&lt;/a&gt; &amp;mdash; Sets the date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a4960887206e851406721d0bc3c3b1f03596d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimeimmutable.setisodate&quot;&gt;DateTimeImmutable::setISODate&lt;/a&gt; &amp;mdash; Sets the ISO date</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4950591408eb3dfdee20fb2878ed7fc683653dbd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimeimmutable.settime&quot;&gt;DateTimeImmutable::setTime&lt;/a&gt; &amp;mdash; Sets the time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d9a8103c04eb3bcbd940b3adf99e04fd70fe83d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimeimmutable.settimestamp&quot;&gt;DateTimeImmutable::setTimestamp&lt;/a&gt; &amp;mdash; Sets the date and time based on a Unix timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="212c164467cabc4e4477c48f2839a926bde3b444" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimeimmutable.settimezone&quot;&gt;DateTimeImmutable::setTimezone&lt;/a&gt; &amp;mdash; Sets the time zone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5099abf80787308d9e07f6fe214adfecbc53e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimeimmutable.sub&quot;&gt;DateTimeImmutable::sub&lt;/a&gt; &amp;mdash; Subtracts an amount of days, months, years, hours, minutes and seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba27853cccd2963997c0ee16f19e3d8d7afd961" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimezone.construct&quot;&gt;DateTimeZone::__construct()&lt;/a&gt; - Creates new DateTimeZone object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceed8af9be3611657374b14efabcd021d255d420" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimezone.construct&quot;&gt;DateTimeZone::__construct&lt;/a&gt; &amp;mdash; Creates new DateTimeZone object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f838e8c8b844ef9233d54b3d3a77afd50afc1a0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimezone.getlocation&quot;&gt;DateTimeZone::getLocation&lt;/a&gt; &amp;mdash; Returns location information for a timezone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d57f8513f2000cc3cff282552361488f91577f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimezone.getname&quot;&gt;DateTimeZone::getName&lt;/a&gt; &amp;mdash; Returns the name of the timezone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89c5a80831e3955e2a9633ea8f0032653a651589" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimezone.getoffset&quot;&gt;DateTimeZone::getOffset&lt;/a&gt; &amp;mdash; Returns the timezone offset from GMT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b7f943de96bd0b324c0b7555b98854b09f8d5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimezone.gettransitions&quot;&gt;DateTimeZone::getTransitions&lt;/a&gt; &amp;mdash; Returns all transitions for the timezone</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d62a279413bcae16054a1b392ebe8ab9c06f59a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimezone.listabbreviations&quot;&gt;DateTimeZone::listAbbreviations&lt;/a&gt; &amp;mdash; Returns associative array containing dst, offset and the timezone name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="677bff10b5f94d5c92c51aa1cfa947518f47b980" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;datetimezone.listidentifiers&quot;&gt;DateTimeZone::listIdentifiers&lt;/a&gt; &amp;mdash; Returns a numerically indexed array containing all defined timezone identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d50a35faecf7de507d0767bf4ac270dbc627d5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directory.close&quot;&gt;Directory::close&lt;/a&gt; &amp;mdash; Close directory handle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f97e6e1f8ed7b958888435da9288a57bf8c86b6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directory.read&quot;&gt;Directory::read&lt;/a&gt; &amp;mdash; Read entry from directory handle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e59d12903fef2da2f247afaff72aa608a30b750" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directory.rewind&quot;&gt;Directory::rewind&lt;/a&gt; &amp;mdash; Rewind directory handle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d27c4e0108dc27bed1c39c4a646b8f4acfb04b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.construct&quot;&gt;DirectoryIterator::__construct()&lt;/a&gt; - Constructs a new directory iterator from a path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bda7579dbe25b78a81d3e7ceb341a4f3b394d44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.construct&quot;&gt;DirectoryIterator::__construct&lt;/a&gt; &amp;mdash; Constructs a new directory iterator from a path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a4c5829981d1f37f390d463c76a05ea0b6c8c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.current&quot;&gt;DirectoryIterator::current()&lt;/a&gt; - Return the current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0053fdbb4ef512b2603a4e1d70ba1d033e2382" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.current&quot;&gt;DirectoryIterator::current&lt;/a&gt; &amp;mdash; Return the current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d045ce8771aa89ae073bdd1da66b833befc990bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getatime&quot;&gt;DirectoryIterator::getATime()&lt;/a&gt; - Get last access time of the current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c757e4d777e5fc753f6df8e7eb6662fa41d930" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getatime&quot;&gt;DirectoryIterator::getATime&lt;/a&gt; &amp;mdash; Get last access time of the current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2529bdaddbe8a738a156c998475afc7e0cbc5998" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getbasename&quot;&gt;DirectoryIterator::getBasename()&lt;/a&gt; - Get base name of current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d475417e4f3d830ce66f9bca63bb59d5978cd50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getbasename&quot;&gt;DirectoryIterator::getBasename&lt;/a&gt; &amp;mdash; Get base name of current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a04123bd2364dbee98aebd7a59a0d58a0e3418" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getctime&quot;&gt;DirectoryIterator::getCTime()&lt;/a&gt; - Get inode change time of the current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf852af1fede973a34b9bb7871791beecabb5be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getctime&quot;&gt;DirectoryIterator::getCTime&lt;/a&gt; &amp;mdash; Get inode change time of the current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2916a6b906ca71654fe4d02b740cd627ea0288d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getextension&quot;&gt;DirectoryIterator::getExtension&lt;/a&gt; &amp;mdash; Gets the file extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a9b3e498c703dbaa2820124d093cff6f0b3bff5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getfilename&quot;&gt;DirectoryIterator::getFileName()&lt;/a&gt; - Return file name of current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c5364f6b8fb69e60520db41a42200bc0b5c964" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getfilename&quot;&gt;DirectoryIterator::getFilename()&lt;/a&gt; - Return file name of current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd36dc2dff257b8ff415d21fe5526ec40edf7a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getfilename&quot;&gt;DirectoryIterator::getFilename&lt;/a&gt; &amp;mdash; Return file name of current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e0fc9c8a6549d392493efa0cc908151fc937ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getgroup&quot;&gt;DirectoryIterator::getGroup()&lt;/a&gt; - Get group for the current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d598a373ae75e344a7773f8f95f7ce73203bf6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getgroup&quot;&gt;DirectoryIterator::getGroup&lt;/a&gt; &amp;mdash; Get group for the current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219094b5e9e92def09580c20859da3885a89416b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getinode&quot;&gt;DirectoryIterator::getInode&lt;/a&gt; &amp;mdash; Get inode for the current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf9ef90aa3785e6d375dd430824e90ad050cc5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getinode&quot;&gt;DirectoryIterator::getiNode()&lt;/a&gt; - Get inode for the current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854aac3b24fb2227e368ba0dd030c06024abce50" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getmtime&quot;&gt;DirectoryIterator::getMTime()&lt;/a&gt; - Get last modification time of current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7fa252611dea0f1e6edca27b1f49712f03ed11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getmtime&quot;&gt;DirectoryIterator::getMTime&lt;/a&gt; &amp;mdash; Get last modification time of current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c431ddd4d94e515872f82c2e88304ac2c4a836" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getowner&quot;&gt;DirectoryIterator::getOwner()&lt;/a&gt; - Get owner of current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13189d8572c92ad7a3b7845c7a6ce8aea61359be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getowner&quot;&gt;DirectoryIterator::getOwner&lt;/a&gt; &amp;mdash; Get owner of current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393782bea54dcdf61c09ebfa8276355dcb68d5fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getpath&quot;&gt;DirectoryIterator::getPath()&lt;/a&gt; - Get path of current Iterator item without filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5b9046fb264cb24f04c7c5a45c4eca623967ee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getpath&quot;&gt;DirectoryIterator::getPath&lt;/a&gt; &amp;mdash; Get path of current Iterator item without filename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c82b69c361859fbab4c903d0094af9a18bb62b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getpathname&quot;&gt;DirectoryIterator::getPathname()&lt;/a&gt; - Return path and file name of current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27236b05158fe880d669ef522eb73f1597b4aace" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getpathname&quot;&gt;DirectoryIterator::getPathname&lt;/a&gt; &amp;mdash; Return path and file name of current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde88171ed2d6e2ce8d3641e6b8916d42e5b1a49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getperms&quot;&gt;DirectoryIterator::getPerms()&lt;/a&gt; - Get the permissions of current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cff4951f641316703acdfe339d7ac3b5ab8435c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getperms&quot;&gt;DirectoryIterator::getPerms&lt;/a&gt; &amp;mdash; Get the permissions of current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1484a6027fef99e9be41318c963b876d5a55d96" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.getsize&quot;&gt;DirectoryIterator::getSize&lt;/a&gt; &amp;mdash; Get size of current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331689aa56453a1841e05ceb33d2911d53057c31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.gettype&quot;&gt;DirectoryIterator::getType()&lt;/a&gt; - Determine the type of the current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eccb7d6ca085d8a07b34ff77b2db9fd2679ea9e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.gettype&quot;&gt;DirectoryIterator::getType&lt;/a&gt; &amp;mdash; Determine the type of the current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23500a2d9165f7d8fe27bd22294608acfad06e5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.isdir&quot;&gt;DirectoryIterator::isDir()&lt;/a&gt; - Determine if current DirectoryIterator item is a directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efbebac44b5272b5e6e1521d6780e0f7360d11a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.isdir&quot;&gt;DirectoryIterator::isDir&lt;/a&gt; &amp;mdash; Determine if current DirectoryIterator item is a directory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e71d0d64487af8a6e93078fe87320e633471a39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.isdot&quot;&gt;DirectoryIterator::isDot()&lt;/a&gt; - Determine if current DirectoryIterator item is '.' or '..'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8827c025631e8e66c5b9a59a6c26f0fea7302711" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.isdot&quot;&gt;DirectoryIterator::isDot&lt;/a&gt; &amp;mdash; Determine if current DirectoryIterator item is '.' or '..'</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a837c7a4efb7a4c34d73cc9e071bc80149f07e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.isexecutable&quot;&gt;DirectoryIterator::isExecutable()&lt;/a&gt; - Determine if current DirectoryIterator item is executable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abcfc66b61240ba5c9ed79aab7680c39d9222da4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.isexecutable&quot;&gt;DirectoryIterator::isExecutable&lt;/a&gt; &amp;mdash; Determine if current DirectoryIterator item is executable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e271aa04209cf6bddd4d9bbff99ab893169b8ba2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.isfile&quot;&gt;DirectoryIterator::isFile()&lt;/a&gt; - Determine if current DirectoryIterator item is a regular file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9af47a3741afa169378910672a7d18ae31056b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.isfile&quot;&gt;DirectoryIterator::isFile&lt;/a&gt; &amp;mdash; Determine if current DirectoryIterator item is a regular file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b4f18d199ede85d82eefd3dbff62e4fc48d38be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.islink&quot;&gt;DirectoryIterator::isLink()&lt;/a&gt; - Determine if current DirectoryIterator item is a symbolic link</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be1634ea559f0c207ef3159609602469f7586ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.islink&quot;&gt;DirectoryIterator::isLink&lt;/a&gt; &amp;mdash; Determine if current DirectoryIterator item is a symbolic link</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52304b7d805f5aaf4e19108ca90e04b3d1b475be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.isreadable&quot;&gt;DirectoryIterator::isReadable()&lt;/a&gt; - Determine if current DirectoryIterator item can be read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad70e784979688960b9f3b435b36b406325de79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.isreadable&quot;&gt;DirectoryIterator::isReadable&lt;/a&gt; &amp;mdash; Determine if current DirectoryIterator item can be read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c683e096f23e169e0a63899c206dbec86f9348" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.iswritable&quot;&gt;DirectoryIterator::isWritable()&lt;/a&gt; - Determine if current DirectoryIterator item can be written to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621150bd128b3756aecfb8a78f6bd5872b25a3af" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.iswritable&quot;&gt;DirectoryIterator::isWritable&lt;/a&gt; &amp;mdash; Determine if current DirectoryIterator item can be written to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51de1cf019fdf74ef720c3317ece6cb7ee81ed48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.key&quot;&gt;DirectoryIterator::key()&lt;/a&gt; - Return the key for the current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e39efe7ae72ee24ccf2946c7ca0d2af2bf8fdc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.key&quot;&gt;DirectoryIterator::key&lt;/a&gt; &amp;mdash; Return the key for the current DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="000077de34fdfa8ce29b4a976434def7c24021ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.next&quot;&gt;DirectoryIterator::next()&lt;/a&gt; - Move forward to next DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9251918f0a27fa9d09fac2ee1310bad088dacb1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.next&quot;&gt;DirectoryIterator::next&lt;/a&gt; &amp;mdash; Move forward to next DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982b68506e3ea509245e62279abeb1b5377bd998" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.rewind&quot;&gt;DirectoryIterator::rewind()&lt;/a&gt; - Rewind the DirectoryIterator back to the start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7861fd5a6420cd9b72e007307bfe88923406ca54" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.rewind&quot;&gt;DirectoryIterator::rewind&lt;/a&gt; &amp;mdash; Rewind the DirectoryIterator back to the start</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53c9ea3eb72670849c803db458e839ba8a690246" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.seek&quot;&gt;DirectoryIterator::seek&lt;/a&gt; &amp;mdash; Seek to a DirectoryIterator item</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff95a2aa71d9b08eda67e3c5c25a910f9163ad0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.tostring&quot;&gt;DirectoryIterator::__toString&lt;/a&gt; &amp;mdash; Get file name as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57596c3455ee0b198056868222cfd04719728858" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.valid&quot;&gt;DirectoryIterator::valid()&lt;/a&gt; - Check whether current DirectoryIterator position is a valid file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d101b3c3821fceb178406d19211fcb2b6dff5be" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;directoryiterator.valid&quot;&gt;DirectoryIterator::valid&lt;/a&gt; &amp;mdash; Check whether current DirectoryIterator position is a valid file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e3207f1e990ea8381d34480ed22b544a0534f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domattr.construct&quot;&gt;DOMAttr::__construct&lt;/a&gt; &amp;mdash; Creates a new DOMAttr object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf4bdc5f7e7702fdaf5aad199a0e3e8a1a6eac0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domattr.isid&quot;&gt;DOMAttr::isId&lt;/a&gt; &amp;mdash; Checks if attribute is a defined ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308c128de37fd351770d267c64c52e0444a10876" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domcdatasection.construct&quot;&gt;DOMCdataSection::__construct&lt;/a&gt; &amp;mdash; Constructs a new DOMCdataSection object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98af96745fd28ce60e372c235fb0915bbf5c3a2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domcharacterdata.appenddata&quot;&gt;DOMCharacterData::appendData()&lt;/a&gt; - Append the string to the end of the character data of the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d108b8db35cb23e2ed512a1578ab908c7c809cb0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domcharacterdata.appenddata&quot;&gt;DOMCharacterData::appendData&lt;/a&gt; &amp;mdash; Append the string to the end of the character data of the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a17479c969508bc4a2f87039f475b0e9b4f8508f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domcharacterdata.deletedata&quot;&gt;DOMCharacterData::deleteData()&lt;/a&gt; - Remove a range of characters from the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed48c2b9beae1a6d3b201fbe87a39eaf1901d64f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domcharacterdata.deletedata&quot;&gt;DOMCharacterData::deleteData&lt;/a&gt; &amp;mdash; Remove a range of characters from the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8426c10e1e84072374cdbfe0d771b28af74998" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domcharacterdata.insertdata&quot;&gt;DOMCharacterData::insertData()&lt;/a&gt; - Insert a string at the specified 16-bit unit offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a9b6677593523f3c9ef043450ecfa6a3e43a8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domcharacterdata.insertdata&quot;&gt;DOMCharacterData::insertData&lt;/a&gt; &amp;mdash; Insert a string at the specified 16-bit unit offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c162424fa01518b92f968df357d13bdaa9868f6d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domcharacterdata.replacedata&quot;&gt;DOMCharacterData::replaceData()&lt;/a&gt; - Replace a substring within the DOMCharacterData node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80100c3f10a6ee893d2af0fb9f5540fea547763e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domcharacterdata.replacedata&quot;&gt;DOMCharacterData::replaceData&lt;/a&gt; &amp;mdash; Replace a substring within the DOMCharacterData node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebdf629831d312a4f334e4b180d903b438958d2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domcharacterdata.substringdata&quot;&gt;DOMCharacterData::substringData()&lt;/a&gt; - Extracts a range of data from the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40f59affe45d79809d9e292a601c3bf4806a6f31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domcharacterdata.substringdata&quot;&gt;DOMCharacterData::substringData&lt;/a&gt; &amp;mdash; Extracts a range of data from the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab064863febe6578bed7b0aa49b7622b98dbd04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domcomment.construct&quot;&gt;DOMComment::__construct&lt;/a&gt; &amp;mdash; Creates a new DOMComment object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738c7be3f6887d39d3d4a95cd04565e266df663c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.construct&quot;&gt;DOMDocument::__construct()&lt;/a&gt; - Creates a new DOMDocument object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="140b3de0eaf20eb03a970b207c4b1ac43850eff7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.construct&quot;&gt;DOMDocument::__construct&lt;/a&gt; &amp;mdash; Creates a new DOMDocument object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2a9482be4395b63bef56056c99abcb68592dfe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createattribute&quot;&gt;DOMDocument::createAttribute()&lt;/a&gt; - Create new attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ae1f228c501768d5189dd0b64df1dcc172d4db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createattribute&quot;&gt;DOMDocument::createAttribute&lt;/a&gt; &amp;mdash; Create new attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2256cdae2c17d8a6766c5c3989281751ef2b5d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createattributens&quot;&gt;DOMDocument::createAttributeNS()&lt;/a&gt; - Create new attribute node with an associated namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190a8d84944a745280535329a0f48f8d03294303" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createattributens&quot;&gt;DOMDocument::createAttributeNS&lt;/a&gt; &amp;mdash; Create new attribute node with an associated namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66140f329f42cba655c5191e4c85c71c9f2700ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createcdatasection&quot;&gt;DOMDocument::createCDATASection()&lt;/a&gt; - Create new cdata node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852c54c5578467924a002b9df1410cb64154df17" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createcdatasection&quot;&gt;DOMDocument::createCDATASection&lt;/a&gt; &amp;mdash; Create new cdata node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8a2c75179c7b738286cc0bed6d645b033ea59a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createcomment&quot;&gt;DOMDocument::createComment()&lt;/a&gt; - Create new comment node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a7e18ba7eed3921a47b06ed36eccaac2045f5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createcomment&quot;&gt;DOMDocument::createComment&lt;/a&gt; &amp;mdash; Create new comment node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961f2b18f4880587f0e10efd91ce488dbd54ec61" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createdocumentfragment&quot;&gt;DOMDocument::createDocumentFragment()&lt;/a&gt; - Create new document fragment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46c5006639b4db8239dbf2c92f82c8060056f7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createdocumentfragment&quot;&gt;DOMDocument::createDocumentFragment&lt;/a&gt; &amp;mdash; Create new document fragment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e44f1103e5d4a4f1f00d9ffdd94388b2c3baf2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createelement&quot;&gt;DOMDocument::createElement()&lt;/a&gt; - Create new element node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92f64a61344a92ea7d75b8db3b519bd9b5673cdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createelement&quot;&gt;DOMDocument::createElement&lt;/a&gt; &amp;mdash; Create new element node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18855472a85b74c84e367c234201672e3ba19cc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createelementns&quot;&gt;DOMDocument::createElementNS()&lt;/a&gt; - Create new element node with an associated namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="233d88c7b5f80141b7c2bd62f75c31c1ed87e60b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createelementns&quot;&gt;DOMDocument::createElementNS&lt;/a&gt; &amp;mdash; Create new element node with an associated namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d6f1d87671a20d8fd2977762e5b67175f76b4f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createentityreference&quot;&gt;DOMDocument::createEntityReference()&lt;/a&gt; - Create new entity reference node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60f6cd7462cadfaac2979a46f7a2c91894881b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createentityreference&quot;&gt;DOMDocument::createEntityReference&lt;/a&gt; &amp;mdash; Create new entity reference node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7747129ab29fb07d446017b34637e1264c0f7ad7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createprocessinginstruction&quot;&gt;DOMDocument::createProcessingInstruction()&lt;/a&gt; - Creates new PI node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a100ca47d62ed225de433cff3f933e063ac8f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createprocessinginstruction&quot;&gt;DOMDocument::createProcessingInstruction&lt;/a&gt; &amp;mdash; Creates new PI node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065c866a1d046f643b7553d271ab0bb6558bc40f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createtextnode&quot;&gt;DOMDocument::createTextNode()&lt;/a&gt; - Create new text node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab55749a824f267b627b01c4fbbf7fa944f401a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.createtextnode&quot;&gt;DOMDocument::createTextNode&lt;/a&gt; &amp;mdash; Create new text node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b412d2da29701f4607938c9b144a13f6ae258e0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.getelementbyid&quot;&gt;DOMDocument::getElementById()&lt;/a&gt; - Searches for an element with a certain id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2cc487dd6162ef12068f3aab7c0204a9603826" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.getelementbyid&quot;&gt;DOMDocument::getElementById&lt;/a&gt; &amp;mdash; Searches for an element with a certain id</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbdc787d0c04a45833778b8e5e99299ecca0add5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.getelementsbytagname&quot;&gt;DOMDocument::getElementsByTagName()&lt;/a&gt; - Searches for all elements with given local tag name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3b4e12cfd06a802c2831a0271a3aeb1e968204" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.getelementsbytagname&quot;&gt;DOMDocument::getElementsByTagName&lt;/a&gt; &amp;mdash; Searches for all elements with given local tag name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb7b52ee618c88557e91ae2f312548dfa977977" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.getelementsbytagnamens&quot;&gt;DOMDocument::getElementsByTagNameNS()&lt;/a&gt; - Searches for all elements with given tag name in specified namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4241f5189903c00fd6e76ab17b29b24b303198f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.getelementsbytagnamens&quot;&gt;DOMDocument::getElementsByTagNameNS&lt;/a&gt; &amp;mdash; Searches for all elements with given tag name in specified namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9db323872c4a520dd64c2d62226e3be1254f4a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.importnode&quot;&gt;DOMDocument::importNode&lt;/a&gt; &amp;mdash; Import node into current document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad452762a04531770cf1dbfdc696a304bb6da438" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.load&quot;&gt;DOMDocument::load()&lt;/a&gt; - Load XML from a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f6e486b869be2bca195aea494b717d8b692bc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.load&quot;&gt;DOMDocument::load&lt;/a&gt; &amp;mdash; Load XML from a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c84d1bdecb87a7516a3f12c666461cba6ea0aac6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.loadhtml&quot;&gt;DOMDocument::loadHTML()&lt;/a&gt; - Load HTML from a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb340def0f5de10eef91e6a1ab13ac2930c7908" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.loadhtml&quot;&gt;DOMDocument::loadHTML&lt;/a&gt; &amp;mdash; Load HTML from a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d3214d0d7ebea688a19529236feb5414b028ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.loadhtmlfile&quot;&gt;DOMDocument::loadHTMLFile()&lt;/a&gt; - Load HTML from a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653bff63c59ac63b40dfab96c7d5415a5bbb9e4c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.loadhtmlfile&quot;&gt;DOMDocument::loadHTMLFile&lt;/a&gt; &amp;mdash; Load HTML from a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c1d97ce5fc3eaa3c0e15ad7f5be60222debeaf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.loadxml&quot;&gt;DOMDocument::loadXML()&lt;/a&gt; - Load XML from a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5292785b3ce4d28ebd940235ad138eeff5d1091f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.loadxml&quot;&gt;DOMDocument::loadXML&lt;/a&gt; &amp;mdash; Load XML from a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a80d74d84e1288ae00fff27fe2b7e1b2893eaa9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.normalizedocument&quot;&gt;DOMDocument::normalizeDocument()&lt;/a&gt; - Normalizes the document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5162b8bc8e4bbee1643513b8120bfc5649f1b6b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.normalizedocument&quot;&gt;DOMDocument::normalizeDocument&lt;/a&gt; &amp;mdash; Normalizes the document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf02cfab3270c76cecde07633577701e6d2a164" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.registernodeclass&quot;&gt;DOMDocument::registerNodeClass&lt;/a&gt; &amp;mdash; Register extended class used to create base node type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fb4a7c26ba8c8b65e8c0d844827e42f2760d83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.relaxngvalidate&quot;&gt;DOMDocument::relaxNGValidate()&lt;/a&gt; - Performs relaxNG validation on the document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d34c1f0dee1d69c521380d5c19728e96872b10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.relaxngvalidate&quot;&gt;DOMDocument::relaxNGValidate&lt;/a&gt; &amp;mdash; Performs relaxNG validation on the document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166348305ff456a00108d8c1b19c51fac7e7b399" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.relaxngvalidatesource&quot;&gt;DOMDocument::relaxNGValidateSource()&lt;/a&gt; - Performs relaxNG validation on the document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fa87b99258fcff379e51de19c71a3de2f9d3e6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.relaxngvalidatesource&quot;&gt;DOMDocument::relaxNGValidateSource&lt;/a&gt; &amp;mdash; Performs relaxNG validation on the document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45164cba3c10b0e62f5bfd68a193688d4012fe9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.save&quot;&gt;DOMDocument::save()&lt;/a&gt; - Dumps the internal XML tree back into a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058ea7d3c02b6d2e6d0dbec16e8f4f774a6953c6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.save&quot;&gt;DOMDocument::save&lt;/a&gt; &amp;mdash; Dumps the internal XML tree back into a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88ff169f2e8302c05bfc36be74bc579179925b3a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.savehtml&quot;&gt;DOMDocument::saveHTML()&lt;/a&gt; - Dumps the internal document into a string using HTML formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed80fe8e7fd7283285e143101c69f9e189dcc55d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.savehtml&quot;&gt;DOMDocument::saveHTML&lt;/a&gt; &amp;mdash; Dumps the internal document into a string using HTML formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807185fd6d1422869da5e43270f10c3333b162ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.savehtmlfile&quot;&gt;DOMDocument::saveHTMLFile()&lt;/a&gt; - Dumps the internal document into a file using HTML formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7997b8e2c985c11276fb8b695a5db8bb5156404f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.savehtmlfile&quot;&gt;DOMDocument::saveHTMLFile&lt;/a&gt; &amp;mdash; Dumps the internal document into a file using HTML formatting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77840f627c14bec06ea9bb610f149f52cd81161b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.savexml&quot;&gt;DOMDocument::saveXML()&lt;/a&gt; - Dumps the internal XML tree back into a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a107794b4718077248ec9dcd38a25c31090379" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.savexml&quot;&gt;DOMDocument::saveXML&lt;/a&gt; &amp;mdash; Dumps the internal XML tree back into a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5d1f39751ceb1ba076d28f305e7f7f9fee3f45" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.schemavalidate&quot;&gt;DOMDocument::schemaValidate()&lt;/a&gt; - Validates a document based on a schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122423f79617c77ed0ea49bb39ee38de4a09c298" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.schemavalidate&quot;&gt;DOMDocument::schemaValidate&lt;/a&gt; &amp;mdash; Validates a document based on a schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0b52a23516854666b0014db27a2442749e66ce" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.schemavalidatesource&quot;&gt;DOMDocument::schemaValidateSource()&lt;/a&gt; - Validates a document based on a schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cffa9d7878ad337472fb0bca372412afc62102f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.schemavalidatesource&quot;&gt;DOMDocument::schemaValidateSource&lt;/a&gt; &amp;mdash; Validates a document based on a schema</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b109a574774c3e4fb9cdff154038a516a84097e7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.validate&quot;&gt;DOMDocument::validate()&lt;/a&gt; - Validates the document based on its DTD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247a183bbcc6c172be05fea9dd936c9ab510f0cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.validate&quot;&gt;DOMDocument::validate&lt;/a&gt; &amp;mdash; Validates the document based on its DTD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344354447ff0c3d9b68e4794460b911e1f04abc3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocument.xinclude&quot;&gt;DOMDocument::xinclude&lt;/a&gt; &amp;mdash; Substitutes XIncludes in a DOMDocument Object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45560f39794e3f608969946f68779a11adb380f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domdocumentfragment.appendxml&quot;&gt;DOMDocumentFragment::appendXML&lt;/a&gt; &amp;mdash; Append raw XML data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1978f4e8639ea985bdad60bb0b59e22cc2c8431" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.construct&quot;&gt;DOMElement::__construct&lt;/a&gt; &amp;mdash; Creates a new DOMElement object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b9218d8f1ed0970a8769e0b646d24b2869bdd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.getattribute&quot;&gt;DOMElement::getAttribute()&lt;/a&gt; - Returns value of attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45f1192a32a16a93b1b9d5666a3a77b2edf3394f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.getattribute&quot;&gt;DOMElement::getAttribute&lt;/a&gt; &amp;mdash; Returns value of attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df0e93f948c0427c0717ba63286e50b110370f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.getattributenode&quot;&gt;DOMElement::getAttributeNode()&lt;/a&gt; - Returns attribute node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01580e52432f95f923b9bf04db477993396014e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.getattributenode&quot;&gt;DOMElement::getAttributeNode&lt;/a&gt; &amp;mdash; Returns attribute node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb530621dd77d9ad8e02dec2e7da951feb805b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.getattributenodens&quot;&gt;DOMElement::getAttributeNodeNS()&lt;/a&gt; - Returns attribute node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9beb5b7490dc2a4a7c4b7676e95fb9911352b90c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.getattributenodens&quot;&gt;DOMElement::getAttributeNodeNS&lt;/a&gt; &amp;mdash; Returns attribute node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1933c6fb00f4455697f0a29c00614b91fe725e3d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.getattributens&quot;&gt;DOMElement::getAttributeNS()&lt;/a&gt; - Returns value of attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6abd9d1dc52a1df7187ec869a58a420183829857" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.getattributens&quot;&gt;DOMElement::getAttributeNS&lt;/a&gt; &amp;mdash; Returns value of attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af010bf79c988184280b78d932d1ab072d84e28f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.getelementsbytagname&quot;&gt;DOMElement::getElementsByTagName()&lt;/a&gt; - Gets elements by tagname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc425bb0984d960f333744158906684ed6f3c187" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.getelementsbytagname&quot;&gt;DOMElement::getElementsByTagName&lt;/a&gt; &amp;mdash; Gets elements by tagname</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08bb994387b473c7106112cd5ba1db8a22d3c48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.getelementsbytagnamens&quot;&gt;DOMElement::getElementsByTagNameNS()&lt;/a&gt; - Get elements by namespaceURI and localName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a79b477f54ee39a2a3dc77cbb32ec564ef06cf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.getelementsbytagnamens&quot;&gt;DOMElement::getElementsByTagNameNS&lt;/a&gt; &amp;mdash; Get elements by namespaceURI and localName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b773dfbdc24c2687fbea84009cc6335b4fada1f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.hasattribute&quot;&gt;DOMElement::hasAttribute()&lt;/a&gt; - Checks to see if attribute exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f211aae5c10221b47f656a6f3c213e21500b9480" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.hasattribute&quot;&gt;DOMElement::hasAttribute&lt;/a&gt; &amp;mdash; Checks to see if attribute exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4875d9e364f9b2fa1963bd0f9b90c9f302087916" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.hasattributens&quot;&gt;DOMElement::hasAttributeNS()&lt;/a&gt; - Checks to see if attribute exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec926a0915210a58d16d417f78b70e257b285b28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.hasattributens&quot;&gt;DOMElement::hasAttributeNS&lt;/a&gt; &amp;mdash; Checks to see if attribute exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7542ea19bb01471fcc74eec32a7dd21d954784" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.removeattribute&quot;&gt;DOMElement::removeAttribute()&lt;/a&gt; - Removes attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6043e03ce2b208e5e20cb68ec5c3542d428dac3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.removeattribute&quot;&gt;DOMElement::removeAttribute&lt;/a&gt; &amp;mdash; Removes attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b2b52987f38dfec1e3723f543c124d788807a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.removeattributenode&quot;&gt;DOMElement::removeAttributeNode()&lt;/a&gt; - Removes attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8897b5b645d208d53e2327bc5368690bdbe37347" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.removeattributenode&quot;&gt;DOMElement::removeAttributeNode&lt;/a&gt; &amp;mdash; Removes attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a7d462d9789503146b8c9bed5a9712b79f00fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.removeattributens&quot;&gt;DOMElement::removeAttributeNS()&lt;/a&gt; - Removes attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89cb6fe57d48275a22849846f37c893079cf682d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.removeattributens&quot;&gt;DOMElement::removeAttributeNS&lt;/a&gt; &amp;mdash; Removes attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533fa8d713045f475a362a7802fef34cdc18d108" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.setattribute&quot;&gt;DOMElement::setAttribute()&lt;/a&gt; - Adds new attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854af95130770d9262ab4d6e287d66d6615d7316" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.setattribute&quot;&gt;DOMElement::setAttribute&lt;/a&gt; &amp;mdash; Adds new attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd85e33a44fee6a5440432ee915cb906ea92aa11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.setattributenode&quot;&gt;DOMElement::setAttributeNode()&lt;/a&gt; - Adds new attribute node to element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af22020d6c60ac5ded37d8b5797a543f97f66b2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.setattributenode&quot;&gt;DOMElement::setAttributeNode&lt;/a&gt; &amp;mdash; Adds new attribute node to element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c476d4a792adc17155d3e44d07f64d367e66bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.setattributenodens&quot;&gt;DOMElement::setAttributeNodeNS()&lt;/a&gt; - Adds new attribute node to element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f610b493768e665aa0536af7ccaf561dd64b9192" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.setattributenodens&quot;&gt;DOMElement::setAttributeNodeNS&lt;/a&gt; &amp;mdash; Adds new attribute node to element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b60359e2020a28560032f558b7f5cce54a1a5d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.setattributens&quot;&gt;DOMElement::setAttributeNS()&lt;/a&gt; - Adds new attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c561c8151376f42f6073b0bbb5446140aaeb525a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.setattributens&quot;&gt;DOMElement::setAttributeNS&lt;/a&gt; &amp;mdash; Adds new attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43fc9a613969f6a9fb01730b305d051eb5a6a05" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.setidattribute&quot;&gt;DOMElement::setIdAttribute()&lt;/a&gt; - Declares the attribute specified by name to be of type ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b315f0f41f04990792b4c502fac322d60ea13ebf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.setidattribute&quot;&gt;DOMElement::setIdAttribute&lt;/a&gt; &amp;mdash; Declares the attribute specified by name to be of type ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f07b14c5cfc19798aa32d0e37f814aa14775fb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.setidattributenode&quot;&gt;DOMElement::setIdAttributeNode()&lt;/a&gt; - Declares the attribute specified by node to be of type ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021c7e49e2bfa2d26415bdb9dc87d761b7315253" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.setidattributenode&quot;&gt;DOMElement::setIdAttributeNode&lt;/a&gt; &amp;mdash; Declares the attribute specified by node to be of type ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7b89b99cfcaf451cd3575007bd8922682d5080" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.setidattributens&quot;&gt;DOMElement::setIdAttributeNS()&lt;/a&gt; - Declares the attribute specified by local name and namespace URI to be of type ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff68365247d784fe315f73fb4fb855c4da25a7e4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domelement.setidattributens&quot;&gt;DOMElement::setIdAttributeNS&lt;/a&gt; &amp;mdash; Declares the attribute specified by local name and namespace URI to be of type ID</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf15b68dddc8263d4df963f6b93ad52a984ee40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domentityreference.construct&quot;&gt;DOMEntityReference::__construct&lt;/a&gt; &amp;mdash; Creates a new DOMEntityReference object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de7265103db1f0fe89cff54ca804ea7fed99977a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domimplementation.construct&quot;&gt;DOMImplementation::__construct&lt;/a&gt; &amp;mdash; Creates a new DOMImplementation object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49fc2e47485aa0beafc2aecdfb601d882bce7f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domimplementation.createdocument&quot;&gt;DOMImplementation::createDocument()&lt;/a&gt; - Creates a DOMDocument object of the specified type with its document element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c552b337df1e16d7587f69904676a7f38ee64d41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domimplementation.createdocument&quot;&gt;DOMImplementation::createDocument&lt;/a&gt; &amp;mdash; Creates a DOMDocument object of the specified type with its document element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d84cadbe9e6dab4afff475b0f8e7cffbc12d1522" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domimplementation.createdocumenttype&quot;&gt;DOMImplementation::createDocumentType()&lt;/a&gt; - Creates an empty DOMDocumentType object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd7f0c3d58d5a4b0f3676470c1be421d0fa5aba8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domimplementation.createdocumenttype&quot;&gt;DOMImplementation::createDocumentType&lt;/a&gt; &amp;mdash; Creates an empty DOMDocumentType object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de44a545be73682fee7fb93228d32a26b1479912" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domimplementation.hasfeature&quot;&gt;DOMImplementation::hasFeature()&lt;/a&gt; - Test if the DOM implementation implements a specific feature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad871e8dab8c298c06094de0c61d9015318923e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domimplementation.hasfeature&quot;&gt;DOMImplementation::hasFeature&lt;/a&gt; &amp;mdash; Test if the DOM implementation implements a specific feature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c832a50a055f2f388be2f5709307e555dda42f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnamednodemap.getnameditem&quot;&gt;DOMNamedNodeMap::getNamedItem()&lt;/a&gt; - Retrieves a node specified by name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6a8961246b19da7a47bd4ecabb8a4c3c6ba4ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnamednodemap.getnameditem&quot;&gt;DOMNamedNodeMap::getNamedItem&lt;/a&gt; &amp;mdash; Retrieves a node specified by name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a43a831b5ae92bad8b24dd008dbb1b245d50609" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnamednodemap.getnameditemns&quot;&gt;DOMNamedNodeMap::getNamedItemNS()&lt;/a&gt; - Retrieves a node specified by local name and namespace URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a4db708dd4d2fda1b30a68e8471745cbad2f035" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnamednodemap.getnameditemns&quot;&gt;DOMNamedNodeMap::getNamedItemNS&lt;/a&gt; &amp;mdash; Retrieves a node specified by local name and namespace URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f3ebdd8ee95eb19343e50516e6572e265099a2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnamednodemap.item&quot;&gt;DOMNamedNodeMap::item&lt;/a&gt; &amp;mdash; Retrieves a node specified by index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75ad892bfebd74cdf025f02f462818acc53bea46" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.appendchild&quot;&gt;DOMNode::appendChild()&lt;/a&gt; - Adds new child at the end of the children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9fa9c28db6b93150ee44454e5b91c4ddad3fde" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.appendchild&quot;&gt;DOMNode::appendChild&lt;/a&gt; &amp;mdash; Adds new child at the end of the children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59752ea0f042bf98139e4b8e1a5d237a6743ff47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.c14n&quot;&gt;DOMNode::C14N()&lt;/a&gt; - Canonicalize nodes to a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3609caf18d518315297c6d79d7e67614d9af4bcf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.c14n&quot;&gt;DOMNode::C14N&lt;/a&gt; &amp;mdash; Canonicalize nodes to a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a57531208fa935af8cdf9ed7ce3a7521b96797a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.c14nfile&quot;&gt;DOMNode::C14NFile()&lt;/a&gt; - Canonicalize nodes to a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c8b6af7c29cd814b5256b5e7716823b8ae8476e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.c14nfile&quot;&gt;DOMNode::C14NFile&lt;/a&gt; &amp;mdash; Canonicalize nodes to a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199cf64f48038217a010d7d583707da0365ad8bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.clonenode&quot;&gt;DOMNode::cloneNode&lt;/a&gt; &amp;mdash; Clones a node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba457ae5e1271e68f8f4efb9c7473797dcb8b03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.getlineno&quot;&gt;DOMNode::getLineNo&lt;/a&gt; &amp;mdash; Get line number for a node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1edfb5d9cf1b857f060d1df5bfda8064c9a1db67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.getnodepath&quot;&gt;DOMNode::getNodePath&lt;/a&gt; &amp;mdash; Get an XPath for a node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd21d34dd22f54e2a845d8bc9456ba06fb41996" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.hasattributes&quot;&gt;DOMNode::hasAttributes()&lt;/a&gt; - Checks if node has attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7cff36c71342d838fed98b65ddb5f4275087f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.hasattributes&quot;&gt;DOMNode::hasAttributes&lt;/a&gt; &amp;mdash; Checks if node has attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e701557992d42e4af051f3fde187285549c720" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.haschildnodes&quot;&gt;DOMNode::hasChildNodes()&lt;/a&gt; - Checks if node has children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a084fbcea9f3ea16f455f265267376f81842f658" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.haschildnodes&quot;&gt;DOMNode::hasChildNodes&lt;/a&gt; &amp;mdash; Checks if node has children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d57bb27c6fcddf3cdf8c5493f73473da2134d49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.insertbefore&quot;&gt;DOMNode::insertBefore()&lt;/a&gt; - Adds a new child before a reference node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="064100c5bd4234cc04bdb784318a9a8161604095" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.insertbefore&quot;&gt;DOMNode::insertBefore&lt;/a&gt; &amp;mdash; Adds a new child before a reference node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034ef89d9d2a433b320b6bfb5f3e722aa2eb5d25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.isdefaultnamespace&quot;&gt;DOMNode::isDefaultNamespace&lt;/a&gt; &amp;mdash; Checks if the specified namespaceURI is the default namespace or not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a64d9cede448b6c5e18bbdd9d89f570687f3653" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.issamenode&quot;&gt;DOMNode::isSameNode&lt;/a&gt; &amp;mdash; Indicates if two nodes are the same node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba4d9b735760505879511078f52da542c32d73d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.issupported&quot;&gt;DOMNode::isSupported()&lt;/a&gt; - Checks if feature is supported for specified version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ef9c4e5cdf93f3081fcf6ecf97ca45bec3cc79e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.issupported&quot;&gt;DOMNode::isSupported&lt;/a&gt; &amp;mdash; Checks if feature is supported for specified version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf94054509bd4088564d26fe4c311b46db355ece" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.lookupnamespaceuri&quot;&gt;DOMNode::lookupNamespaceUri()&lt;/a&gt; - Gets the namespace URI of the node based on the prefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc63782b67e2c529042900820ef6d85ca0ae1c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.lookupnamespaceuri&quot;&gt;DOMNode::lookupNamespaceUri&lt;/a&gt; &amp;mdash; Gets the namespace URI of the node based on the prefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5cef8672b4c66b289422bebe84ab3ae422e2591" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.lookupprefix&quot;&gt;DOMNode::lookupPrefix()&lt;/a&gt; - Gets the namespace prefix of the node based on the namespace URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="502d37039f7229e09bd3ca18998686af18a99314" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.lookupprefix&quot;&gt;DOMNode::lookupPrefix&lt;/a&gt; &amp;mdash; Gets the namespace prefix of the node based on the namespace URI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c674f9df73ca38f98605801595c7396950cdae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.normalize&quot;&gt;DOMNode::normalize()&lt;/a&gt; - Normalizes the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fa80f666cd6b2429410cab9a7de42ec17863471" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.normalize&quot;&gt;DOMNode::normalize&lt;/a&gt; &amp;mdash; Normalizes the node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5990df1a31369e7f32c390f66e616cfb7a447730" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.removechild&quot;&gt;DOMNode::removeChild()&lt;/a&gt; - Removes child from list of children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f64929e9808da84b89be478cc0f8c9ba17849f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.removechild&quot;&gt;DOMNode::removeChild&lt;/a&gt; &amp;mdash; Removes child from list of children</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9db93b905274e26d8ce8380f2340bf8af600e8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.replacechild&quot;&gt;DOMNode::replaceChild()&lt;/a&gt; - Replaces a child</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed076aa53ffceae26ecbd0099729764f5fb0873" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnode.replacechild&quot;&gt;DOMNode::replaceChild&lt;/a&gt; &amp;mdash; Replaces a child</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f84f9d9244820967720a9f10cfe5b4b496750c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnodelist.count&quot;&gt;DOMNodeList::count&lt;/a&gt; &amp;mdash; Get number of nodes in the list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0332ab9e1fae97acfe18cd593b3eb406bcf7c67" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domnodelist.item&quot;&gt;DOMNodeList::item&lt;/a&gt; &amp;mdash; Retrieves a node specified by index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b90b52d715eed07925cd5ac38400c37515e97f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domprocessinginstruction.construct&quot;&gt;DOMProcessingInstruction::__construct&lt;/a&gt; &amp;mdash; Creates a new DOMProcessingInstruction object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b055f9224c345889e83d74062ea6425a5a40b6ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domtext.construct&quot;&gt;DOMText::__construct()&lt;/a&gt; - Creates a new DOMText object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb9d01c1cd39752b1fabe7f392de16e16351111" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domtext.construct&quot;&gt;DOMText::__construct&lt;/a&gt; &amp;mdash; Creates a new DOMText object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41fc86c97fe0a45bd152cb3888150fd85596bb81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domtext.iselementcontentwhitespace&quot;&gt;DOMText::isElementContentWhitespace&lt;/a&gt; &amp;mdash; Returns whether this text node contains whitespace in element content</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25b19d51e5406cf37892b2886b6e1ded6a92d36" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domtext.iswhitespaceinelementcontent&quot;&gt;DOMText::isWhitespaceInElementContent&lt;/a&gt; &amp;mdash; Indicates whether this text node contains whitespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2b6af575fdfe6b52c79a54cabd987aaa2f3de6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domtext.splittext&quot;&gt;DOMText::splitText&lt;/a&gt; &amp;mdash; Breaks this node into two nodes at the specified offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28be541cc9b2a8fd62b463a0affe4eced938782d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domxpath.construct&quot;&gt;DOMXPath::__construct&lt;/a&gt; &amp;mdash; Creates a new DOMXPath object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e94e746f0092dfe7e868b54cf0456c2c7944e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domxpath.evaluate&quot;&gt;DOMXPath::evaluate()&lt;/a&gt; - Evaluates the given XPath expression and returns a typed result if possible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2839c603b9bbe81cefdeefdbea27992b76f0ecfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domxpath.evaluate&quot;&gt;DOMXPath::evaluate&lt;/a&gt; &amp;mdash; Evaluates the given XPath expression and returns a typed result if possible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707bee73684d4b0a839686fa3356e58680883c33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domxpath.query&quot;&gt;DOMXPath::query()&lt;/a&gt; - Evaluates the given XPath expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883c23567c78a1de9ef6be26d0955d1164177636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domxpath.query&quot;&gt;DOMXPath::query&lt;/a&gt; &amp;mdash; Evaluates the given XPath expression</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e3ebab09a8b1b851857aa65e68bb11bc568d3e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domxpath.registernamespace&quot;&gt;DOMXPath::registerNamespace()&lt;/a&gt; - Registers the namespace with the DOMXPath object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="092122e9daf03d1d97ce9d5a4d79fe6f06bdd5a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domxpath.registernamespace&quot;&gt;DOMXPath::registerNamespace&lt;/a&gt; &amp;mdash; Registers the namespace with the DOMXPath object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b68e8522734a0c5d442d9a6a093f25828cf9ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;domxpath.registerphpfunctions&quot;&gt;DOMXPath::registerPhpFunctions&lt;/a&gt; &amp;mdash; Register PHP functions as XPath functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b871503599d0f5c5962b93a8fa73e1af23846d5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-collection.clear&quot;&gt;Ds\Collection::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ff2d759dbfdd4f938679ebd694632b55919f87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-collection.copy&quot;&gt;Ds\Collection::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dd5b11151a326d9d43d1ca45e8cc1f54b31a90c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-collection.isempty&quot;&gt;Ds\Collection::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the collection is empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89007897a0fb15132e4929b763a3f56b3292dc80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-collection.toarray&quot;&gt;Ds\Collection::toArray&lt;/a&gt; &amp;mdash; Converts the collection to an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="278ecd8b70ededd1ce56e0325c77dea38b700adb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.allocate&quot;&gt;Ds\Deque::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1591ae9e99c1c458f8b852c639b3c0b60c481f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.apply&quot;&gt;Ds\Deque::apply&lt;/a&gt; &amp;mdash; Updates all values by applying a callback function to each value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5c74f203a3f64847bb7910852f9caa25c10452" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.capacity&quot;&gt;Ds\Deque::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515f927ddebc96a03999bb3f1cce8060e55b574f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.clear&quot;&gt;Ds\Deque::clear&lt;/a&gt; &amp;mdash; Removes all values from the deque</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e1e851b671b0f1fb921fa2d2370d6ab0212b0f8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.construct&quot;&gt;Ds\Deque::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f50fee85bd550f9223807ecab76fcf2f5224300" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.contains&quot;&gt;Ds\Deque::contains&lt;/a&gt; &amp;mdash; Determines if the deque contains given values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16652bb4af5ef00e74c1af752d1c8f129a24cdab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.copy&quot;&gt;Ds\Deque::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the deque</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ee7c32441efd709688eacadb500a6122ee2180" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.count&quot;&gt;Ds\Deque::count&lt;/a&gt; &amp;mdash; Returns the number of values in the collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="733c40b8bf5cb8db88add4c70b428c9caa77e961" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.filter&quot;&gt;Ds\Deque::filter&lt;/a&gt; &amp;mdash; Creates a new deque using a callable to determine which values to include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19d64d78f1e0c1d0ae1b910dd099c3019c51dc2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.find&quot;&gt;Ds\Deque::find&lt;/a&gt; &amp;mdash; Attempts to find a value's index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8cdf9a2f47648f0932efa147c5616993c5ae3f7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.first&quot;&gt;Ds\Deque::first&lt;/a&gt; &amp;mdash; Returns the first value in the deque</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef27b21f6589f9e87f20b59ab57466efb95042b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.get&quot;&gt;Ds\Deque::get&lt;/a&gt; &amp;mdash; Returns the value at a given index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d005d0bcd46921d523b19993183db68afa441c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.insert&quot;&gt;Ds\Deque::insert&lt;/a&gt; &amp;mdash; Inserts values at a given index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b519c8ee1a049aa05b89fa91324ad0d526ddda74" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.isempty&quot;&gt;Ds\Deque::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the deque is empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe9846dba77b2c69617953c2dc8eb8c49832184" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.join&quot;&gt;Ds\Deque::join&lt;/a&gt; &amp;mdash; Joins all values together as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48d00c8f96382ebc79c70f314164da89f134a3b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.jsonserialize&quot;&gt;Ds\Deque::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32aaf46745d3d47e85fd3810cea3fe3570bb8a6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.last&quot;&gt;Ds\Deque::last&lt;/a&gt; &amp;mdash; Returns the last value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e54bbf6ee5c9d072705e0b6c22a3878a543c37" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.map&quot;&gt;Ds\Deque::map&lt;/a&gt; &amp;mdash; Returns the result of applying a callback to each value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e6662143a870ad96d0c4c0436783070dc7392c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.merge&quot;&gt;Ds\Deque::merge&lt;/a&gt; &amp;mdash; Returns the result of adding all given values to the deque</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c40602d86a4ca6b79ba1b812a8ed08765bcdb30d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.pop&quot;&gt;Ds\Deque::pop&lt;/a&gt; &amp;mdash; Removes and returns the last value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfdcdd1541f5686a5d660315780b28a48ed084a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.push&quot;&gt;Ds\Deque::push&lt;/a&gt; &amp;mdash; Adds values to the end of the deque</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a65210e891746d6a5a3ed77104c04ca0abdbf2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.reduce&quot;&gt;Ds\Deque::reduce&lt;/a&gt; &amp;mdash; Reduces the deque to a single value using a callback function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d989056c28b4bff1dd62ea8aea788c435edacf80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.remove&quot;&gt;Ds\Deque::remove&lt;/a&gt; &amp;mdash; Removes and returns a value by index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af3d2b5d0dc0b6661f199fc8a8538b08b3956a0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.reverse&quot;&gt;Ds\Deque::reverse&lt;/a&gt; &amp;mdash; Reverses the deque in-place</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd6d08b009ff2b54714d452c90abbd940862ce8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.reversed&quot;&gt;Ds\Deque::reversed&lt;/a&gt; &amp;mdash; Returns a reversed copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7de0da1e98c46bad5afcce8f1a8b2ad77843662" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.rotate&quot;&gt;Ds\Deque::rotate&lt;/a&gt; &amp;mdash; Rotates the deque by a given number of rotations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8eb7ff170765daeac96c253f804d602490e13ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.set&quot;&gt;Ds\Deque::set&lt;/a&gt; &amp;mdash; Updates a value at a given index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea60ac1eadb118b6f96c3211bb17a2e91e16719e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.shift&quot;&gt;Ds\Deque::shift&lt;/a&gt; &amp;mdash; Removes and returns the first value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95bc086ab444b3619ebd437b643e5198158201e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.slice&quot;&gt;Ds\Deque::slice&lt;/a&gt; &amp;mdash; Returns a sub-deque of a given range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3671df939fc3796d363baf3213b44314c2ee7419" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.sort&quot;&gt;Ds\Deque::sort&lt;/a&gt; &amp;mdash; Sorts the deque in-place</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630a71321dadfea59106ef2896e69d5bff819476" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.sorted&quot;&gt;Ds\Deque::sorted&lt;/a&gt; &amp;mdash; Returns a sorted copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab205325224a550a37105a4d483820f4c1d20ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.sum&quot;&gt;Ds\Deque::sum&lt;/a&gt; &amp;mdash; Returns the sum of all values in the deque</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f9497b10e70a314abaf68312fa043fcf5b794f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.toarray&quot;&gt;Ds\Deque::toArray&lt;/a&gt; &amp;mdash; Converts the deque to an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4383fe457c27d92f258f7f71f3608a39ca1d8cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-deque.unshift&quot;&gt;Ds\Deque::unshift&lt;/a&gt; &amp;mdash; Adds values to the front of the deque</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1829d1f8f54888320115b57ad419ad8633563b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-hashable.equals&quot;&gt;Ds\Hashable::equals&lt;/a&gt; &amp;mdash; Determines whether an object is equal to the current instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46398217f867ae903bdbf6bae04b6afd27e44206" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-hashable.hash&quot;&gt;Ds\Hashable::hash&lt;/a&gt; &amp;mdash; Returns a scalar value to be used as a hash value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69adb8ca67bdb9f890a9a2a2c70c55dfa7277339" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.allocate&quot;&gt;Ds\Map::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b14cc25e2f69bf63e487677a705f380cdabceff" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.apply&quot;&gt;Ds\Map::apply&lt;/a&gt; &amp;mdash; Updates all values by applying a callback function to each value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f553d605902a879590c142afead55234c2a16175" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.capacity&quot;&gt;Ds\Map::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5152e4ff7b2e34fb317c8d92843d5e4899229eef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.clear&quot;&gt;Ds\Map::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65bf1347cabd6901c9243f385329182bc316163" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.construct&quot;&gt;Ds\Map::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac19a8ae9f5ac4371f26e8e830d44b57c858fdb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.copy&quot;&gt;Ds\Map::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e88562e6dada255f825356cc4352aa6e8b9c7cef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.count&quot;&gt;Ds\Map::count&lt;/a&gt; &amp;mdash; Returns the number of values in the map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1688acfec6a16ad1627bf1e751f906dbb4390b62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.diff&quot;&gt;Ds\Map::diff&lt;/a&gt; &amp;mdash; Creates a new map using keys that aren't in another map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0200a58faeef57a3175eb038a3f360ae7454611" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.filter&quot;&gt;Ds\Map::filter&lt;/a&gt; &amp;mdash; Creates a new map using a callable to determine which pairs to include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32e858763d3fc014a315d76902d444d0d04ebb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.first&quot;&gt;Ds\Map::first&lt;/a&gt; &amp;mdash; Returns the first pair in the map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71f5caf062578b4bc88befef4e5de386a30381b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.get&quot;&gt;Ds\Map::get&lt;/a&gt; &amp;mdash; Returns the value for a given key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adc31308974e2647699e37ba9d66b55458945fd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.haskey&quot;&gt;Ds\Map::hasKey&lt;/a&gt; &amp;mdash; Determines whether the map contains a given key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65493c4fcd9ee21d5cf32a7343b0c0c8ce6c17d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.hasvalue&quot;&gt;Ds\Map::hasValue&lt;/a&gt; &amp;mdash; Determines whether the map contains a given value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bf8bb19b40c6e7a4671cae1838bc900ab5321ab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.intersect&quot;&gt;Ds\Map::intersect&lt;/a&gt; &amp;mdash; Creates a new map by intersecting keys with another map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d879f33d60536aed553ee3ec0c6817282aa8b2d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.isempty&quot;&gt;Ds\Map::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the map is empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6233fe01579a99e24d29d97d75aa01bf83bcdf9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.jsonserialize&quot;&gt;Ds\Map::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75cd5851502375197873295e310ece368ae3b147" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.keys&quot;&gt;Ds\Map::keys&lt;/a&gt; &amp;mdash; Returns a set of the map's keys</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576478632d7378c4d03e14ffc5ff6c9998d34c33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.ksort&quot;&gt;Ds\Map::ksort&lt;/a&gt; &amp;mdash; Sorts the map in-place by key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b7ba77732b7f09e9e225109cabb59d6a4a3f10" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.ksorted&quot;&gt;Ds\Map::ksorted&lt;/a&gt; &amp;mdash; Returns a copy, sorted by key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ee46b506f486fd029d8e555cf9e92f94bd591e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.last&quot;&gt;Ds\Map::last&lt;/a&gt; &amp;mdash; Returns the last pair of the map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce43b0bdded61cd72bbbdc575a46a41addf3316" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.map&quot;&gt;Ds\Map::map&lt;/a&gt; &amp;mdash; Returns the result of applying a callback to each value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d21eddb60723a08c6a5df3af6e67b37d3779b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.merge&quot;&gt;Ds\Map::merge&lt;/a&gt; &amp;mdash; Returns the result of adding all given associations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6ff3b9cd4826c59589ccc2b77ce2610a1f30d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.pairs&quot;&gt;Ds\Map::pairs&lt;/a&gt; &amp;mdash; Returns a sequence containing all the pairs of the map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e0df55ad9072cb17877bfd729b83ada7d6ecbf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.put&quot;&gt;Ds\Map::put&lt;/a&gt; &amp;mdash; Associates a key with a value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f09b71000c2431f7266521c136d4db08fbd58a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.putall&quot;&gt;Ds\Map::putAll&lt;/a&gt; &amp;mdash; Associates all key-value pairs of a traversable object or array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40dcb8a198868a5460eb93b2333807b5e340601d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.reduce&quot;&gt;Ds\Map::reduce&lt;/a&gt; &amp;mdash; Reduces the map to a single value using a callback function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e1e3c0fe98047842e2e7cf81c86735d960039b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.remove&quot;&gt;Ds\Map::remove&lt;/a&gt; &amp;mdash; Removes and returns a value by key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb83e7505e631629aec8f504036e26901ce3e03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.reverse&quot;&gt;Ds\Map::reverse&lt;/a&gt; &amp;mdash; Reverses the map in-place</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2f7bf74020610492df160c333b30bed6ca89177" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.reversed&quot;&gt;Ds\Map::reversed&lt;/a&gt; &amp;mdash; Returns a reversed copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3497ac5c749acb45e97d349a96f23108707aa806" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.skip&quot;&gt;Ds\Map::skip&lt;/a&gt; &amp;mdash; Returns the pair at a given positional index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="578e93e46e4681129704e3808efcb29195778c49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.slice&quot;&gt;Ds\Map::slice&lt;/a&gt; &amp;mdash; Returns a subset of the map defined by a starting index and length</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d2f904687265bf3f0ff8658e24e2772a3a4347" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.sort&quot;&gt;Ds\Map::sort&lt;/a&gt; &amp;mdash; Sorts the map in-place by value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0cec0e3a6c85571b9d3e3f6e62224bfa929fa6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.sorted&quot;&gt;Ds\Map::sorted&lt;/a&gt; &amp;mdash; Returns a copy, sorted by value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0cd8cd166e70c011b7f0c99eb14c6283b5740db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.sum&quot;&gt;Ds\Map::sum&lt;/a&gt; &amp;mdash; Returns the sum of all values in the map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3bd3e978be5f8d1043b1df21ee19938c41406e3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.toarray&quot;&gt;Ds\Map::toArray&lt;/a&gt; &amp;mdash; Converts the map to an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7983a4515570cbdaaa95a79791150e0d002c72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.union&quot;&gt;Ds\Map::union&lt;/a&gt; &amp;mdash; Creates a new map using values from the current instance and another map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086e3dbf78ab46661151a5eca9cf3b46b20424ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.values&quot;&gt;Ds\Map::values&lt;/a&gt; &amp;mdash; Returns a sequence of the map's values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062bb7a909074f9e79408db604826e5b52169c8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-map.xor&quot;&gt;Ds\Map::xor&lt;/a&gt; &amp;mdash; Creates a new map using keys of either the current instance or of another map, but not of both</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="086ad6b6c557605d5da1eff1e11932edfdb1ca72" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-pair.clear&quot;&gt;Ds\Pair::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6948bd5f14c482bb260fb3e22160ea24c6bab0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-pair.construct&quot;&gt;Ds\Pair::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af13b4f350278df79c23f2141ee094ca8861497a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-pair.copy&quot;&gt;Ds\Pair::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the pair</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50feb3fefa76915d5d94fbaefc753ac6a6ebf118" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-pair.isempty&quot;&gt;Ds\Pair::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the pair is empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d9ff7175c815419371f12d220fb6264cfb8dcb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-pair.jsonserialize&quot;&gt;Ds\Pair::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f28b3f9f95768e27bec1a8b67da6f8dad68849" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-pair.toarray&quot;&gt;Ds\Pair::toArray&lt;/a&gt; &amp;mdash; Converts the pair to an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b396557b5c19ec9add0827a4535d873ba40d7414" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.allocate&quot;&gt;Ds\PriorityQueue::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7f20ced44ada02b15e6cf98e8417abab40f7c3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.capacity&quot;&gt;Ds\PriorityQueue::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9a2ddecf5490d272ddfe3e815f56d01f249f93d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.clear&quot;&gt;Ds\PriorityQueue::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d446b35727ca7844518d7cf64c33c8a42e9f970a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.construct&quot;&gt;Ds\PriorityQueue::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59deb09b2b6329c5edaf0b30468822e88c710a2c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.copy&quot;&gt;Ds\PriorityQueue::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33c4e2f1e44db634aaed258ad24cb5888ec0e01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.count&quot;&gt;Ds\PriorityQueue::count&lt;/a&gt; &amp;mdash; Returns the number of values in the queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54796bd5e64449d23e5b121691abd3308420e055" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.isempty&quot;&gt;Ds\PriorityQueue::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the queue is empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7121f437ee64b961945ced823d99c94754e7d04c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.jsonserialize&quot;&gt;Ds\PriorityQueue::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9be4be868268d16f7d939274b74eccfb817410b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.peek&quot;&gt;Ds\PriorityQueue::peek&lt;/a&gt; &amp;mdash; Returns the value at the front of the queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9876bbd02896b59b96ce610b5e2bde1e431ac89f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.pop&quot;&gt;Ds\PriorityQueue::pop&lt;/a&gt; &amp;mdash; Removes and returns the value with the highest priority</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc4617dfdf54ce67eb75354200e98851c6fba1f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.push&quot;&gt;Ds\PriorityQueue::push&lt;/a&gt; &amp;mdash; Pushes values into the queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e9654bcb559463e99fa749d3c93f4deb56ca2b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-priorityqueue.toarray&quot;&gt;Ds\PriorityQueue::toArray&lt;/a&gt; &amp;mdash; Converts the queue to an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc84d823fa852852dad5c7f2feec18f02ad0f7bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.allocate&quot;&gt;Ds\Queue::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="619e7b5afe80c42442d4c11304720cd8146f9978" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.capacity&quot;&gt;Ds\Queue::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87c778fd98c163324d802e0a9a1ae032ad11d07f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.clear&quot;&gt;Ds\Queue::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dca3e79d2710b92945cb6a86e5d541104910297b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.construct&quot;&gt;Ds\Queue::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b9209e1a680c379fbd3289181193429128e898" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.copy&quot;&gt;Ds\Queue::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7740f61200544bd0fd4e54b4c49691d20f6e0157" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.count&quot;&gt;Ds\Queue::count&lt;/a&gt; &amp;mdash; Returns the number of values in the queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a945d4cfbabd77d6f2f18f8b83d9b600118216f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.isempty&quot;&gt;Ds\Queue::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the queue is empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f1448d54841bc210b69189599be757e86c9212" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.jsonserialize&quot;&gt;Ds\Queue::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dadcac3aa42168d405c0639c237e490b684926fc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.peek&quot;&gt;Ds\Queue::peek&lt;/a&gt; &amp;mdash; Returns the value at the front of the queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a46ac8d95ea543021ba490fd576fd3313597fed" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.pop&quot;&gt;Ds\Queue::pop&lt;/a&gt; &amp;mdash; Removes and returns the value at the front of the queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07833992d24164d2fa06553dac68cc61f8f7aa3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.push&quot;&gt;Ds\Queue::push&lt;/a&gt; &amp;mdash; Pushes values into the queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152a5f894e8bad8c38dd406bd0655aa4a83e66f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-queue.toarray&quot;&gt;Ds\Queue::toArray&lt;/a&gt; &amp;mdash; Converts the queue to an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c0b13a4c179056e3d15c427c542f01b0c53b97" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.allocate&quot;&gt;Ds\Sequence::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4047f3254b07ef669d9f5e6e1ff4871f212684db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.apply&quot;&gt;Ds\Sequence::apply&lt;/a&gt; &amp;mdash; Updates all values by applying a callback function to each value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ba8099f10b0987a6348e4dd22c3768f3abc8f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.capacity&quot;&gt;Ds\Sequence::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca3e234a040148940774cf6d5b5ca587850deadb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.contains&quot;&gt;Ds\Sequence::contains&lt;/a&gt; &amp;mdash; Determines if the sequence contains given values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c987c6144f4b0a46d1bd659ccc423b8d4efa37eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.filter&quot;&gt;Ds\Sequence::filter&lt;/a&gt; &amp;mdash; Creates a new sequence using a callable to determine which values to include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0964286d5cf61d0dedb8dfa549ced9c1a29de03" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.find&quot;&gt;Ds\Sequence::find&lt;/a&gt; &amp;mdash; Attempts to find a value's index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e34fc77fca5cd91f266a14e8883cd9d32948a33" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.first&quot;&gt;Ds\Sequence::first&lt;/a&gt; &amp;mdash; Returns the first value in the sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05124cd37ad9b7bc2a6f064eb84012ffa7641185" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.get&quot;&gt;Ds\Sequence::get&lt;/a&gt; &amp;mdash; Returns the value at a given index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e12738f4f9ae6973828782dc939c846604b219" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.insert&quot;&gt;Ds\Sequence::insert&lt;/a&gt; &amp;mdash; Inserts values at a given index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd568bc9bfd66d175c02ceb94fdbbc913efd4fd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.join&quot;&gt;Ds\Sequence::join&lt;/a&gt; &amp;mdash; Joins all values together as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94a2c72f8732a83b5908720380b0ec5c92c0417" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.last&quot;&gt;Ds\Sequence::last&lt;/a&gt; &amp;mdash; Returns the last value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bc3c6d9b7fe84fdabb458a91bb44988401c759" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.map&quot;&gt;Ds\Sequence::map&lt;/a&gt; &amp;mdash; Returns the result of applying a callback to each value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed0d04f2a802c2fe1bce135f45c1827d217a0d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.merge&quot;&gt;Ds\Sequence::merge&lt;/a&gt; &amp;mdash; Returns the result of adding all given values to the sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d12a5ab1a3e97982f4bf1d361155382fed2d12b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.pop&quot;&gt;Ds\Sequence::pop&lt;/a&gt; &amp;mdash; Removes and returns the last value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3bda553776695d16633a2be927aeb735f7b73a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.push&quot;&gt;Ds\Sequence::push&lt;/a&gt; &amp;mdash; Adds values to the end of the sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2ae84318aa67b506549294922a490a0ea87a7d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.reduce&quot;&gt;Ds\Sequence::reduce&lt;/a&gt; &amp;mdash; Reduces the sequence to a single value using a callback function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="891c537fd9c273678101257fd7d6eb8cfefdafd6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.remove&quot;&gt;Ds\Sequence::remove&lt;/a&gt; &amp;mdash; Removes and returns a value by index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b4fa7ca6ada903d627fe1b3bca07cd03c5f6a0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.reverse&quot;&gt;Ds\Sequence::reverse&lt;/a&gt; &amp;mdash; Reverses the sequence in-place</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a6887b4b1e01b0738ff0baf2f10b27d9eb58421" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.reversed&quot;&gt;Ds\Sequence::reversed&lt;/a&gt; &amp;mdash; Returns a reversed copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4e31126dd4c9c09df21c351d41e907dfdcfbf80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.rotate&quot;&gt;Ds\Sequence::rotate&lt;/a&gt; &amp;mdash; Rotates the sequence by a given number of rotations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="751b7c2f77994e0cdcae9508b4a82f3ecb914df4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.set&quot;&gt;Ds\Sequence::set&lt;/a&gt; &amp;mdash; Updates a value at a given index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb48bf1867bbe36d7dfc329ff18d587a77afa298" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.shift&quot;&gt;Ds\Sequence::shift&lt;/a&gt; &amp;mdash; Removes and returns the first value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e268760428e517c32b4f6dc2a81de20689004f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.slice&quot;&gt;Ds\Sequence::slice&lt;/a&gt; &amp;mdash; Returns a sub-sequence of a given range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f649f353ba3784038c4f05b1fd63398fcb8ae362" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.sort&quot;&gt;Ds\Sequence::sort&lt;/a&gt; &amp;mdash; Sorts the sequence in-place</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c693999ac989c4b52fd60997ba1255dbba736a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.sorted&quot;&gt;Ds\Sequence::sorted&lt;/a&gt; &amp;mdash; Returns a sorted copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79c71fff36fa558caead319ed785148d2d6c9eb7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.sum&quot;&gt;Ds\Sequence::sum&lt;/a&gt; &amp;mdash; Returns the sum of all values in the sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d929f91943d04fbc4b2ecef655526f1a4e00bfc8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-sequence.unshift&quot;&gt;Ds\Sequence::unshift&lt;/a&gt; &amp;mdash; Adds values to the front of the sequence</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbcd1e7b4725d298d35630ef7badf1a0381b17b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.add&quot;&gt;Ds\Set::add&lt;/a&gt; &amp;mdash; Adds values to the set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293d0dd771d3295d35819305ba10266504ddd9a8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.allocate&quot;&gt;Ds\Set::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3989b44c44af72f1bc5621836fa87baccdf574e2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.capacity&quot;&gt;Ds\Set::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdb13a8f953c7ecf7dba8a4f8debaa61f4b465ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.clear&quot;&gt;Ds\Set::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8cb5bad78ae2695587bea435d09f4ff5beefaf0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.construct&quot;&gt;Ds\Set::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2d472f1f3fb80a60acdeaa47e65175ec5af509" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.contains&quot;&gt;Ds\Set::contains&lt;/a&gt; &amp;mdash; Determines if the set contains all values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a76bef2ed2be5350707fd39ff0b0752b1ae33cb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.copy&quot;&gt;Ds\Set::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5943750721ae2a84b3e61133d349e6ebb78c83b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.count&quot;&gt;Ds\Set::count&lt;/a&gt; &amp;mdash; Returns the number of values in the set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe952b15c29e4c2075d739f89929f13f5d9064f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.diff&quot;&gt;Ds\Set::diff&lt;/a&gt; &amp;mdash; Creates a new set using values that aren't in another set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2047e231b4c1b5b4ec7e27a96ca5b9054459a251" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.filter&quot;&gt;Ds\Set::filter&lt;/a&gt; &amp;mdash; Creates a new set using a callable to determine which values to include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf2a9f0a00d7caac0abdf0061c754703797d85a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.first&quot;&gt;Ds\Set::first&lt;/a&gt; &amp;mdash; Returns the first value in the set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214e5d65238a4ea1729f8f983edec18e7fbb4492" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.get&quot;&gt;Ds\Set::get&lt;/a&gt; &amp;mdash; Returns the value at a given index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727bc7b1d1220c2a4e459dfed122936f611965cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.intersect&quot;&gt;Ds\Set::intersect&lt;/a&gt; &amp;mdash; Creates a new set by intersecting values with another set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77429c5f039b6ee8a5a80e0bfb5203a6c3f9f0f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.isempty&quot;&gt;Ds\Set::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the set is empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98fd1447562c50a6eb066c0ea48f0346a2bf7dfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.join&quot;&gt;Ds\Set::join&lt;/a&gt; &amp;mdash; Joins all values together as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa8986ab505c5977efffe520aeca2431c0efdd09" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.jsonserialize&quot;&gt;Ds\Set::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089908f58db80b5c85249af3ff300a6353d7204f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.last&quot;&gt;Ds\Set::last&lt;/a&gt; &amp;mdash; Returns the last value in the set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572d745cf81bb89a5a7477f2cdb015e708194f94" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.merge&quot;&gt;Ds\Set::merge&lt;/a&gt; &amp;mdash; Returns the result of adding all given values to the set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13bab616c46a51e43b61368a69c575de347b5f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.reduce&quot;&gt;Ds\Set::reduce&lt;/a&gt; &amp;mdash; Reduces the set to a single value using a callback function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14337b571e9568bc39cc09eabb3057a0435673d1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.remove&quot;&gt;Ds\Set::remove&lt;/a&gt; &amp;mdash; Removes all given values from the set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0768698834b006a18e9f5ea3bc54010bb8b81595" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.reverse&quot;&gt;Ds\Set::reverse&lt;/a&gt; &amp;mdash; Reverses the set in-place</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9f9afa7db37e12580ba25b86b641a6e3c81a1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.reversed&quot;&gt;Ds\Set::reversed&lt;/a&gt; &amp;mdash; Returns a reversed copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee33976960f91a41f229d4cd689183592f53d4b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.slice&quot;&gt;Ds\Set::slice&lt;/a&gt; &amp;mdash; Returns a sub-set of a given range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbc2dbc9252a8f69ad5716f6aea6d11f2e676a35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.sort&quot;&gt;Ds\Set::sort&lt;/a&gt; &amp;mdash; Sorts the set in-place</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c255dc027553c821c5e260593bd0760f2d1b8f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.sorted&quot;&gt;Ds\Set::sorted&lt;/a&gt; &amp;mdash; Returns a sorted copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe467eba1f16836cbd11afa691150fa71767549" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.sum&quot;&gt;Ds\Set::sum&lt;/a&gt; &amp;mdash; Returns the sum of all values in the set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50d0e3a511f27965eaf66508ee0eadeb1db106ea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.toarray&quot;&gt;Ds\Set::toArray&lt;/a&gt; &amp;mdash; Converts the set to an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f73689a5b48ba52e06a9bcb7ff833dd6ef2622a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.union&quot;&gt;Ds\Set::union&lt;/a&gt; &amp;mdash; Creates a new set using values from the current instance and another set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acf087b9b252482a941e1f4550c27cfd409c840" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-set.xor&quot;&gt;Ds\Set::xor&lt;/a&gt; &amp;mdash; Creates a new set using values in either the current instance or in another set, but not in both</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ebfd1adef46a45cfd3d669d1f924330d97561cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.allocate&quot;&gt;Ds\Stack::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87122e7e908f01e88a9b38ad399774e8d8c89ba6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.capacity&quot;&gt;Ds\Stack::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f6c1d5c0ca8de3be2366827f93feb971903bd2a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.clear&quot;&gt;Ds\Stack::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3ddc9c6a8fd2d8698f4b0196af8257d6e55e6c1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.construct&quot;&gt;Ds\Stack::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed809e9d001290bb052e1e52b5c3b2d27d0fe39" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.copy&quot;&gt;Ds\Stack::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7adae5a40efac8896cfbec5da936274366df4a38" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.count&quot;&gt;Ds\Stack::count&lt;/a&gt; &amp;mdash; Returns the number of values in the stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3eedc7a8055eb5fb8a38024f099afd60bbecca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.isempty&quot;&gt;Ds\Stack::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the stack is empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e192169c552fca40f7e566e9424304064b590a66" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.jsonserialize&quot;&gt;Ds\Stack::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1c6b2b038b47e30f71301a987da10572a5e8f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.peek&quot;&gt;Ds\Stack::peek&lt;/a&gt; &amp;mdash; Returns the value at the top of the stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5fa1511aee1ea53d0b83ff218030a9a0d50d5d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.pop&quot;&gt;Ds\Stack::pop&lt;/a&gt; &amp;mdash; Removes and returns the value at the top of the stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f0d70a60c6697a4b09d6cfc797a7bd160584da" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.push&quot;&gt;Ds\Stack::push&lt;/a&gt; &amp;mdash; Pushes values onto the stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45af0e8dc48b0903214a73ee177761af62712eaa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-stack.toarray&quot;&gt;Ds\Stack::toArray&lt;/a&gt; &amp;mdash; Converts the stack to an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="684a6c2bf775328ab6f0cf833b52d8a75e227242" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.allocate&quot;&gt;Ds\Vector::allocate&lt;/a&gt; &amp;mdash; Allocates enough memory for a required capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95135a0a79a85ecd3495e930c7d3cb8655ac5042" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.apply&quot;&gt;Ds\Vector::apply&lt;/a&gt; &amp;mdash; Updates all values by applying a callback function to each value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9568acf0f4e713d05bef9df6c83bf6942b7045d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.capacity&quot;&gt;Ds\Vector::capacity&lt;/a&gt; &amp;mdash; Returns the current capacity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86df7a43e241f2c95919515a70ea358814648d1b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.clear&quot;&gt;Ds\Vector::clear&lt;/a&gt; &amp;mdash; Removes all values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19b1bf74a8048e20d83cb76dfd945f96857def35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.construct&quot;&gt;Ds\Vector::__construct&lt;/a&gt; &amp;mdash; Creates a new instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c80964abda25ca305e630c5090b6e561d16e740" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.contains&quot;&gt;Ds\Vector::contains&lt;/a&gt; &amp;mdash; Determines if the vector contains given values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1f8c9d56b5a1c4a510deaf27d69d8403b51426" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.copy&quot;&gt;Ds\Vector::copy&lt;/a&gt; &amp;mdash; Returns a shallow copy of the vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f08acf1612425ff83ae83ef86f911c252b9a42" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.count&quot;&gt;Ds\Vector::count&lt;/a&gt; &amp;mdash; Returns the number of values in the collection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ceba1dc6e788bed0560631bab5e961fb12f2d60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.filter&quot;&gt;Ds\Vector::filter&lt;/a&gt; &amp;mdash; Creates a new vector using a callable to determine which values to include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf0165efa543ba45f095afd8c0e3ff7da8bf2ec3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.find&quot;&gt;Ds\Vector::find&lt;/a&gt; &amp;mdash; Attempts to find a value's index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9986bf94cb7d58c1ea810901d87c28c525e7da91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.first&quot;&gt;Ds\Vector::first&lt;/a&gt; &amp;mdash; Returns the first value in the vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e6282c9b5402d1b148f9ce7c062c483d2ae5dd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.get&quot;&gt;Ds\Vector::get&lt;/a&gt; &amp;mdash; Returns the value at a given index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7a7188caa3ab5629af8857bae257e868b7384b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.insert&quot;&gt;Ds\Vector::insert&lt;/a&gt; &amp;mdash; Inserts values at a given index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d92d8f3d81fc27089b43d919ff42116864ece89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.isempty&quot;&gt;Ds\Vector::isEmpty&lt;/a&gt; &amp;mdash; Returns whether the vector is empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16effd1a86c1480e1ab2dd6e871a786eaf28727d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.join&quot;&gt;Ds\Vector::join&lt;/a&gt; &amp;mdash; Joins all values together as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1630ce82e8667f6005857a418bdc796ccb5335a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.jsonserialize&quot;&gt;Ds\Vector::jsonSerialize&lt;/a&gt; &amp;mdash; Returns a representation that can be converted to JSON</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1440fe4194d5ef8db3ca8fd05e66e848a5668ff6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.last&quot;&gt;Ds\Vector::last&lt;/a&gt; &amp;mdash; Returns the last value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9cee30c172871c02d013bf4e7d1096e477ad2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.map&quot;&gt;Ds\Vector::map&lt;/a&gt; &amp;mdash; Returns the result of applying a callback to each value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564f6c55bda545c98ea40c39db1485317b8417b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.merge&quot;&gt;Ds\Vector::merge&lt;/a&gt; &amp;mdash; Returns the result of adding all given values to the vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719fb4c653a057843e6535fb6d068b6527c9acc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.pop&quot;&gt;Ds\Vector::pop&lt;/a&gt; &amp;mdash; Removes and returns the last value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4bb15d39d5bfab43a6f01fadbe5f5f699fdfc5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.push&quot;&gt;Ds\Vector::push&lt;/a&gt; &amp;mdash; Adds values to the end of the vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7016f0fbf903fb1a78eb1778f32a051607060488" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.reduce&quot;&gt;Ds\Vector::reduce&lt;/a&gt; &amp;mdash; Reduces the vector to a single value using a callback function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd0a1263f28671a51be7b9be0269f7146b12f31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.remove&quot;&gt;Ds\Vector::remove&lt;/a&gt; &amp;mdash; Removes and returns a value by index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff19b9fe9e3ae95a03246be59bf0c05f609418f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.reverse&quot;&gt;Ds\Vector::reverse&lt;/a&gt; &amp;mdash; Reverses the vector in-place</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d09d00bd9d813dca224e86d858bf470c2cabc62f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.reversed&quot;&gt;Ds\Vector::reversed&lt;/a&gt; &amp;mdash; Returns a reversed copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6a639902fc9eff5aa2e5f582c939c06f4813b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.rotate&quot;&gt;Ds\Vector::rotate&lt;/a&gt; &amp;mdash; Rotates the vector by a given number of rotations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bf8fb51f3c9a068294405ad9ff6cf5403dbcb6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.set&quot;&gt;Ds\Vector::set&lt;/a&gt; &amp;mdash; Updates a value at a given index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a448995945a242366b25f6cd0c02aa90b28dcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.shift&quot;&gt;Ds\Vector::shift&lt;/a&gt; &amp;mdash; Removes and returns the first value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d312031e84504c87843b5e8d2f37af5ccc71a7b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.slice&quot;&gt;Ds\Vector::slice&lt;/a&gt; &amp;mdash; Returns a sub-vector of a given range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f895f622f0410cf37fcd3486c13464360d97be3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.sort&quot;&gt;Ds\Vector::sort&lt;/a&gt; &amp;mdash; Sorts the vector in-place</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247b68ca4b716e6686863c2ff92977bfaf4a0d28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.sorted&quot;&gt;Ds\Vector::sorted&lt;/a&gt; &amp;mdash; Returns a sorted copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e59d89e658f41b0b65cd93cd325455ccccec3e18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.sum&quot;&gt;Ds\Vector::sum&lt;/a&gt; &amp;mdash; Returns the sum of all values in the vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da81b6705236a359d39049f4eb85405dc1f22176" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.toarray&quot;&gt;Ds\Vector::toArray&lt;/a&gt; &amp;mdash; Converts the vector to an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c135f9508695bd93de3d4808f028a95d3d2db6b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ds-vector.unshift&quot;&gt;Ds\Vector::unshift&lt;/a&gt; &amp;mdash; Adds values to the front of the vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30cf99151852f1a3225b8c3a1c0efc8c35d53e58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;emptyiterator.current&quot;&gt;EmptyIterator::current&lt;/a&gt; &amp;mdash; The current() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5740ffef0f934f897105180fe7491b4c3d0c54d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;emptyiterator.key&quot;&gt;EmptyIterator::key&lt;/a&gt; &amp;mdash; The key() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df08ed4d6bc23c2ef391fc8dd24408586c06d11c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;emptyiterator.next&quot;&gt;EmptyIterator::next&lt;/a&gt; &amp;mdash; The next() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f11f5cdfce8cea67fa129fab29a58799e1dbbf3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;emptyiterator.rewind&quot;&gt;EmptyIterator::rewind&lt;/a&gt; &amp;mdash; The rewind() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3a3ea0c43681b28a3f69ad8a7dd02298a247e1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;emptyiterator.valid&quot;&gt;EmptyIterator::valid&lt;/a&gt; &amp;mdash; The valid() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a7abafc57d717a238c63af3a3d8d26cbad8544" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.clone&quot;&gt;Error::__clone&lt;/a&gt; &amp;mdash; Clone the error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b91725cd3af1d986b130dbac28dd92efa91f6771" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.construct&quot;&gt;Error::__construct&lt;/a&gt; &amp;mdash; Construct the error object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb0b2bab51f076b3f23665d05d47ca8f33d4e62" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.getcode&quot;&gt;Error::getCode&lt;/a&gt; &amp;mdash; Gets the error code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59142429cffd6e899b158a791075bedff060e8c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.getfile&quot;&gt;Error::getFile&lt;/a&gt; &amp;mdash; Gets the file in which the error occurred</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65844394a209089a776db60d000a9fd533154c53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.getline&quot;&gt;Error::getLine&lt;/a&gt; &amp;mdash; Gets the line in which the error occurred</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c22485d6065b761ab29261cf9fbde699f6234fa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.getmessage&quot;&gt;Error::getMessage&lt;/a&gt; &amp;mdash; Gets the error message</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353b3b87f0f7b8558ba5d848b2bbac8286026f6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.getprevious&quot;&gt;Error::getPrevious&lt;/a&gt; &amp;mdash; Returns previous Throwable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5d17bf0c6bdff371cbdd4a13af46d3679dc248c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.gettrace&quot;&gt;Error::getTrace&lt;/a&gt; &amp;mdash; Gets the stack trace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc7b437e09901d0418493a684b874307f7a1e3bd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.gettraceasstring&quot;&gt;Error::getTraceAsString&lt;/a&gt; &amp;mdash; Gets the stack trace as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9767763a7083c3e47a019f122fe4cdf28c0e830" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;error.tostring&quot;&gt;Error::__toString&lt;/a&gt; &amp;mdash; String representation of the error</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee98ab4405c88dfd603f96118fbeb5f9846d6e5a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;errorexception.construct&quot;&gt;ErrorException::__construct&lt;/a&gt; &amp;mdash; Constructs the exception</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef31954e679a2c6152aab9a7e8f3d228c0cf16cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;errorexception.getseverity&quot;&gt;ErrorException::getSeverity&lt;/a&gt; &amp;mdash; Gets the exception severity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc94bdca39691bb9d0c66d127f108a335d8d24aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.backend&quot;&gt;Ev::backend()&lt;/a&gt; - Returns an integer describing the backend used by libev</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="373a78ef679a5fe1353c41e61dc9fc4f98844714" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.backend&quot;&gt;Ev::backend&lt;/a&gt; &amp;mdash; Returns an integer describing the backend used by libev</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3420bced19899692339f5d223ce822bb64c9a06a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.depth&quot;&gt;Ev::depth()&lt;/a&gt; - Returns recursion depth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc87f3e2a8d87dc5160d6c06b9a8081067809ec6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.depth&quot;&gt;Ev::depth&lt;/a&gt; &amp;mdash; Returns recursion depth</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5350ec2047d75a21224c54318b7662580a6f4241" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.embeddablebackends&quot;&gt;Ev::embeddableBackends()&lt;/a&gt; - Returns the set of backends that are embeddable in other event loops</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae37d5b898358861e592c185d155b5403e0bfc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.embeddablebackends&quot;&gt;Ev::embeddableBackends&lt;/a&gt; &amp;mdash; Returns the set of backends that are embeddable in other event loops</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5c8016372475e80479b8752d72a6219c78a963" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.feedsignal&quot;&gt;Ev::feedSignal()&lt;/a&gt; - Feed a signal event info Ev</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f9abffae2e3b144179b132ae81aedbbd5bf350" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.feedsignal&quot;&gt;Ev::feedSignal&lt;/a&gt; &amp;mdash; Feed a signal event info Ev</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0324306b16d3e87cc997120cebf0f812d381104" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.feedsignalevent&quot;&gt;Ev::feedSignalEvent()&lt;/a&gt; - Feed signal event into the default loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a347befc7b6f3bf4e1680d0110a3ed143e83f9d3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.feedsignalevent&quot;&gt;Ev::feedSignalEvent&lt;/a&gt; &amp;mdash; Feed signal event into the default loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c47f2773f8d0427703a594ff7cd8162fd75d5d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.iteration&quot;&gt;Ev::iteration()&lt;/a&gt; - Return the number of times the default event loop has polled for new events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc3561806c14981d3a8683bd88591edaca60ef0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.iteration&quot;&gt;Ev::iteration&lt;/a&gt; &amp;mdash; Return the number of times the default event loop has polled for new events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26a340892962e994bccad315ea6bc2d9a61bbba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.now&quot;&gt;Ev::now()&lt;/a&gt; - Returns the time when the last iteration of the default event loop has started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8826409f61ac855a28dbf9da28c43eaddae3da0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.now&quot;&gt;Ev::now&lt;/a&gt; &amp;mdash; Returns the time when the last iteration of the default event loop has started</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69977622b3acc3354361283750878da2eaf7cbdf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.nowupdate&quot;&gt;Ev::nowUpdate()&lt;/a&gt; - Establishes the current time by querying the kernel, updating the time returned by Ev::now in the progress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="720e15fe8a885df9f01be3cd44985e76c1f923c2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.nowupdate&quot;&gt;Ev::nowUpdate&lt;/a&gt; &amp;mdash; Establishes the current time by querying the kernel, updating the time returned by Ev::now in the progress</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a03cca40dc80e4d55085702b43b17b202ff4b1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.recommendedbackends&quot;&gt;Ev::recommendedBackends()&lt;/a&gt; - Returns a bit mask of recommended backends for current platform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c239193752c0423f2e29563af083b2573a525b8d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.recommendedbackends&quot;&gt;Ev::recommendedBackends&lt;/a&gt; &amp;mdash; Returns a bit mask of recommended backends for current platform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa53c192ef7301d13a1f2eac1f3cdd40fbaba42d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.resume&quot;&gt;Ev::resume()&lt;/a&gt; - Resume previously suspended default event loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd82753e70a888fcb6f6ec410ccc6edc439ac9f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.resume&quot;&gt;Ev::resume&lt;/a&gt; &amp;mdash; Resume previously suspended default event loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f352499258b6aa9f32434280f8f451549920aa90" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.run&quot;&gt;Ev::run()&lt;/a&gt; - Begin checking for events and calling callbacks for the default loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559fc1613256c56dd60ed9398e24139dfa0d1b77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.run&quot;&gt;Ev::run&lt;/a&gt; &amp;mdash; Begin checking for events and calling callbacks for the default loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce6a376743107e04b6b6e1eb8fcf8f8a0b789760" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.sleep&quot;&gt;Ev::sleep&lt;/a&gt; &amp;mdash; Block the process for the given number of seconds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b75dbbbfa547a18f898656dde7b7c79c1012ef" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.stop&quot;&gt;Ev::stop()&lt;/a&gt; - Stops the default event loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2da754fb0874ea957bb9c92238ee46bc75e69dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.stop&quot;&gt;Ev::stop&lt;/a&gt; &amp;mdash; Stops the default event loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97c1b8ad2604d02b7b463b36ada2cc4a57b663f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.supportedbackends&quot;&gt;Ev::supportedBackends()&lt;/a&gt; - Returns the set of backends supported by current libev configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a45a93183b59b416ebfda37abdd862314172d6b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.supportedbackends&quot;&gt;Ev::supportedBackends&lt;/a&gt; &amp;mdash; Returns the set of backends supported by current libev configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8509c30035f19eaa01021bd12e3706d4792b166a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.suspend&quot;&gt;Ev::suspend()&lt;/a&gt; - Suspend the default event loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf53e2ef45e58e64fe46cf4ade33698f78dbb26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.suspend&quot;&gt;Ev::suspend()&lt;/a&gt; and &lt;strong&gt;Ev::resume()&lt;/strong&gt; methods suspend and resume a loop correspondingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3825a501433f56637ba407e8076b0d37b2453c1e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.suspend&quot;&gt;Ev::suspend&lt;/a&gt; &amp;mdash; Suspend the default event loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33fa93c7f97476b48af0c958587b76d28e59e5b6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.time&quot;&gt;Ev::time&lt;/a&gt; &amp;mdash; Returns the current time in fractional seconds since the epoch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e31e9aa10da432665a3ad040c4b26aded188991" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.verify&quot;&gt;Ev::verify()&lt;/a&gt; - Performs internal consistency checks(for debugging)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a003ce55364239d5329ebe7f6dbc71e9bfc5ab3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;ev.verify&quot;&gt;Ev::verify&lt;/a&gt; &amp;mdash; Performs internal consistency checks(for debugging)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ed561edde16ec777e27d06edd5615b75bbd5227" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evcheck.construct&quot;&gt;EvCheck::__construct()&lt;/a&gt; - Constructs the EvCheck watcher object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72518820ce1734ed5fc93549362d2c420a811701" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evcheck.construct&quot;&gt;EvCheck::__construct&lt;/a&gt; &amp;mdash; Constructs the EvCheck watcher object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef8b96a2ee54b72691c46ebc6e4f787ff34d087" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evcheck.createstopped&quot;&gt;EvCheck::createStopped&lt;/a&gt; &amp;mdash; Create instance of a stopped EvCheck watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc4597b4551d594249cec3209d6787945ea6fa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evchild.construct&quot;&gt;EvChild::__construct()&lt;/a&gt; - Constructs the EvChild watcher object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1479b745cca3c024fea04579b381a2c4e0a63596" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evchild.construct&quot;&gt;EvChild::__construct&lt;/a&gt; &amp;mdash; Constructs the EvChild watcher object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf41b3ebeaa1c8be141883c275d44ceba0f143c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evchild.createstopped&quot;&gt;EvChild::createStopped&lt;/a&gt; &amp;mdash; Create instance of a stopped EvCheck watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca25624d8650eb8b1c1f8b74f0ae4d302457d415" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evchild.set&quot;&gt;EvChild::set&lt;/a&gt; &amp;mdash; Configures the watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9918be6a292804fe5576fb7ab3b21536cce5ea6b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evembed.construct&quot;&gt;EvEmbed::__construct()&lt;/a&gt; - Constructs the EvEmbed object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ed936801bc610e1c045801588f37b3e3980d37f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evembed.construct&quot;&gt;EvEmbed::__construct&lt;/a&gt; &amp;mdash; Constructs the EvEmbed object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114f0ff6679a7d29ff526e3682a9456461f44b23" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evembed.createstopped&quot;&gt;EvEmbed::createStopped&lt;/a&gt; &amp;mdash; Create stopped EvEmbed watcher object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdec70c13bce36916e6d66943729e249801d4b98" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evembed.set&quot;&gt;EvEmbed::set&lt;/a&gt; &amp;mdash; Configures the watcher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5633e1a5c4a7ffc23a2f7352eca7d4c2bf035d51" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;evembed.sweep&quot;&gt;EvEmbed::sweep&lt;/a&gt; &amp;mdash; Make a single, non-blocking sweep over the embedded loop</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2395aedf486d23c3861aa9c22fcc9f368c6ad79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.add&quot;&gt;Event::add()&lt;/a&gt; - Makes event pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4755ab022f07f9583ba528e1fd9362242f9cd6c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.add&quot;&gt;Event::add&lt;/a&gt; &amp;mdash; Makes event pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbe6fadffb13f37d669778123576db35f1a0f161" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.add&quot;&gt;event_add()&lt;/a&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9fced1830ee4b8c7177980becb8515188c04a30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.add&quot;&gt;event_add()&lt;/a&gt; schedules the execution of the &lt;code&gt;event&lt;/code&gt; when the event specified in &lt;a href=&quot;event.set&quot;&gt;event_set()&lt;/a&gt; occurs or in at least the time specified by the &lt;code&gt;timeout&lt;/code&gt; argument. If &lt;code&gt;timeout&lt;/code&gt; was not specified, not timeout is set. The &lt;code&gt;event&lt;/code&gt; must be already initalized by &lt;a href=&quot;event.set&quot;&gt;event_set()&lt;/a&gt; and &lt;a href=&quot;function.event-base-set&quot;&gt;event_base_set()&lt;/a&gt; functions. If the &lt;code&gt;event&lt;/code&gt; already has a timeout set, it is replaced by the new one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5b42bfec3c1df10e075f89d1759284c14b0425" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.addsignal&quot;&gt;Event::addSignal()&lt;/a&gt; - Makes signal event pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3805795a5ea3cd4de7409e08bd86a8c6b4d7c1ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.addsignal&quot;&gt;Event::addSignal&lt;/a&gt; &amp;mdash; Makes signal event pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c530ebd4bf8819880dfeab77fa3932c9894b1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.addtimer&quot;&gt;Event::addTimer()&lt;/a&gt; - Makes timer event pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07d74cb68198b9fe1668ce6aef772b36538a427" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.addtimer&quot;&gt;Event::addTimer&lt;/a&gt; &amp;mdash; Makes timer event pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a96285f01f6b7e529509da91fc1682b08572957e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.construct&quot;&gt;Event::__construct()&lt;/a&gt; - Constructs Event object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a85cb743ece5fbb9186e37c7549b74719e32b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.construct&quot;&gt;Event::__construct&lt;/a&gt; &amp;mdash; Constructs Event object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90ce3a0c16b8ff5ae737ac504da513ef30dd45d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.del&quot;&gt;Event::del()&lt;/a&gt; - Makes event non-pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6257f19100e226de57fb95a7b272d85fe2861b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.del&quot;&gt;Event::del&lt;/a&gt; &amp;mdash; Makes event non-pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3724009945c6f827349922cc891713f409cee4ca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.del&quot;&gt;event_del()&lt;/a&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371da667ff7c44e11d321363e8a87a837268a9e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.delsignal&quot;&gt;Event::delSignal()&lt;/a&gt; - Makes signal event non-pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a79c1bb061e235bbcbd23e71348986687c4096" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.delsignal&quot;&gt;Event::delSignal&lt;/a&gt; &amp;mdash; Makes signal event non-pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27b16b5c588efbc8d1417fca82e12a6175bcde8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.deltimer&quot;&gt;Event::delTimer()&lt;/a&gt; - Makes timer event non-pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9f8f220b4233ad598829021729ce961b39cb0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.deltimer&quot;&gt;Event::delTimer&lt;/a&gt; &amp;mdash; Makes timer event non-pending</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23bf099d84880ae71bd29a5b9fa71a09cb773f0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.free&quot;&gt;Event::free&lt;/a&gt; &amp;mdash; Make event non-pending and free resources allocated for this event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddcfe205c3fd81181a9ecfff9122af8340666898" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.getsupportedmethods&quot;&gt;Event::getSupportedMethods&lt;/a&gt; &amp;mdash; Returns array with of the names of the methods supported in this version of Libevent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e69e67d8ee7e62c1ca8c9ae9fcb4d404a70ae49" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.pending&quot;&gt;Event::pending&lt;/a&gt; &amp;mdash; Detects whether event is pending or scheduled</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439a282dbc80ee97f6ca5ad324a1af26962cacb8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.set&quot;&gt;Event::set&lt;/a&gt; &amp;mdash; Re-configures event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6dfa802827508018bdf88c147e938977e81881" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.set&quot;&gt;event_set()&lt;/a&gt; returns &lt;strong&gt;&lt;code&gt;TRUE&lt;/code&gt;&lt;/strong&gt; on success or &lt;strong&gt;&lt;code&gt;FALSE&lt;/code&gt;&lt;/strong&gt; on error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba136661bb2c6b52213e217ef6dcc69f5e379ddb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.setpriority&quot;&gt;Event::setPriority()&lt;/a&gt; - Set event priority</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a935a98fed5bfc3b4f265bc9bc4e1ba411b74c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.setpriority&quot;&gt;Event::setPriority&lt;/a&gt; &amp;mdash; Set event priority</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5dbddc75a479e076763b017e56c86d891ae03c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.settimer&quot;&gt;Event::setTimer&lt;/a&gt; &amp;mdash; Re-configures timer event</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b460735c9c6133826cae554bcc8e149441c39d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.signal&quot;&gt;Event::signal()&lt;/a&gt; - Constructs signal event object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd5d51ce84cf3c76987aa53108d6f7e6cdcfc28" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.signal&quot;&gt;Event::signal&lt;/a&gt; &amp;mdash; Constructs signal event object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281bf2b905a8ccd337dde8493de24a4fcb5a0625" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.timer&quot;&gt;Event::timer()&lt;/a&gt; - Constructs timer event object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd11c0396f7ba6d306306f59d618aa46d5ab8509" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;event.timer&quot;&gt;Event::timer&lt;/a&gt; &amp;mdash; Constructs timer event object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3f87662caad5d0bdb5df129bc4e5c610205449" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.construct&quot;&gt;EventBase::__construct()&lt;/a&gt; - Constructs EventBase object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2faa103d305d5207b3f66ae83db67e3bd0d073a6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.construct&quot;&gt;EventBase::__construct&lt;/a&gt; &amp;mdash; Constructs EventBase object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1786165b8375b4fc3d897a7027426e3324430319" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.dispatch&quot;&gt;EventBase::dispatch()&lt;/a&gt; - Dispatch pending events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa021b7f6a4399cdd8c6972f2f7b15e5d24cd2ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.dispatch&quot;&gt;EventBase::dispatch&lt;/a&gt; &amp;mdash; Dispatch pending events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45eeaf091f3d48f2fa2c1584e217cac41619c306" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.exit&quot;&gt;EventBase::exit()&lt;/a&gt; - Stop dispatching events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bfd16297161ae0b94d03e1c7daea59ba165c02" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.exit&quot;&gt;EventBase::exit&lt;/a&gt; &amp;mdash; Stop dispatching events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8323199b75b1bd51501e2efa1efcf99a42ab6b9a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.free&quot;&gt;EventBase::free&lt;/a&gt; &amp;mdash; Free resources allocated for this event base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a04079779cee5aa80fca7f7ce51897d3db1ea9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.getfeatures&quot;&gt;EventBase::getFeatures()&lt;/a&gt; - Returns bitmask of features supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62ee6ecdcabddee96c3921fa8077c145a0fc8c73" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.getfeatures&quot;&gt;EventBase::getFeatures&lt;/a&gt; &amp;mdash; Returns bitmask of features supported</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f877dbd8cfb0df348ea059d4a00fcc729d40e8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.getmethod&quot;&gt;EventBase::getMethod()&lt;/a&gt; - Returns event method in use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670b40f5376d6cb0f6086b7101073e13884369b0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.getmethod&quot;&gt;EventBase::getMethod&lt;/a&gt; &amp;mdash; Returns event method in use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64e27ef2d7a7a5ff6f8dc75f1e769c7cb419e54f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.gettimeofdaycached&quot;&gt;EventBase::getTimeOfDayCached&lt;/a&gt; &amp;mdash; Returns the current event base time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd2303a977d56ceb2e77f0046a816b986479951" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.gotexit&quot;&gt;EventBase::gotExit()&lt;/a&gt; - Checks if the event loop was told to exit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c65d83c06a5fdd89e130abce201bc51ed342246" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.gotexit&quot;&gt;EventBase::gotExit&lt;/a&gt; &amp;mdash; Checks if the event loop was told to exit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a769f961f65b64cfff4b937abdc4ac1ef1395db" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.gotstop&quot;&gt;EventBase::gotStop()&lt;/a&gt; - Checks if the event loop was told to exit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="386f21f948b466e64a4a7eae9b87ebadb7abd5e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.gotstop&quot;&gt;EventBase::gotStop&lt;/a&gt; &amp;mdash; Checks if the event loop was told to exit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ec41db955d4dd8b0776705dee1e0eec624b96f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.loop&quot;&gt;EventBase::loop()&lt;/a&gt; - Dispatch pending events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff870152f90b87e819669ecc0d6bcbaf86b11a0e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.loop&quot;&gt;EventBase::loop&lt;/a&gt; &amp;mdash; Dispatch pending events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62e724a9a38ef49173b59340501eec2fc77de18" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.priorityinit&quot;&gt;EventBase::priorityInit&lt;/a&gt; &amp;mdash; Sets number of priorities per event base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ba55ebfbef7de404bce67de90702f3cebfe9f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.reinit&quot;&gt;EventBase::reInit&lt;/a&gt; &amp;mdash; Re-initialize event base(after a fork)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4a22ac050694ab258ec79128893606e0a10b1a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.stop&quot;&gt;EventBase::stop()&lt;/a&gt; - Tells event_base to stop dispatching events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32523527bde8181026bab9a1c6b22c32efdf91ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbase.stop&quot;&gt;EventBase::stop&lt;/a&gt; &amp;mdash; Tells event_base to stop dispatching events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc7bc325a66a9ca98da608f1cb7d7475bad1a53" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.add&quot;&gt;EventBuffer::add()&lt;/a&gt; - Append data to the end of an event buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c04d39ef99dd1d96fc59fa7dff51e9d89a9ecc0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.add&quot;&gt;EventBuffer::add&lt;/a&gt; &amp;mdash; Append data to the end of an event buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9d20fd50798f096ade4da929d1d03c5b414e59" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.addbuffer&quot;&gt;EventBuffer::addBuffer()&lt;/a&gt; - Move all data from a buffer provided to the current instance of EventBuffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6831a25d7f301420c8876454a5c14ab57d92a57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.addbuffer&quot;&gt;EventBuffer::addBuffer&lt;/a&gt; &amp;mdash; Move all data from a buffer provided to the current instance of EventBuffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="012010807be5ee5f138193345c5cf2338db10904" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.appendfrom&quot;&gt;EventBuffer::appendFrom()&lt;/a&gt; - Moves the specified number of bytes from a source buffer to the end of the current buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0d08ccea471348311ba3f62c880bcf51a00d81" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.appendfrom&quot;&gt;EventBuffer::appendFrom&lt;/a&gt; &amp;mdash; Moves the specified number of bytes from a source buffer to the end of the current buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961443ad548757bcd1458d7b02e1b004b0ebef84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.construct&quot;&gt;EventBuffer::__construct&lt;/a&gt; &amp;mdash; Constructs EventBuffer object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08c3b1ab63f3df82fc8d8b62f5ccbdfaed354ac" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.copyout&quot;&gt;EventBuffer::copyout()&lt;/a&gt; - Copies out specified number of bytes from the front of the buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62dfe4bc1abdcbcb3dd38526aa9016ccf2a48184" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.copyout&quot;&gt;EventBuffer::copyout&lt;/a&gt; &amp;mdash; Copies out specified number of bytes from the front of the buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a53be6e6255993ce1c0073f316358b1706e18a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.drain&quot;&gt;EventBuffer::drain()&lt;/a&gt; - Removes specified number of bytes from the front of the buffer without copying it anywhere</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0538c47b12ee6a77eb3a84d361d043fa021c1426" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.drain&quot;&gt;EventBuffer::drain&lt;/a&gt; &amp;mdash; Removes specified number of bytes from the front of the buffer without copying it anywhere</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a9b0756ec1a70105e7630fcec32e1f4b402867" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.enablelocking&quot;&gt;EventBuffer::enableLocking&lt;/a&gt; &amp;mdash; Description</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656a9efec6b6a61fed077b927f1c5a499efbcc95" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.expand&quot;&gt;EventBuffer::expand&lt;/a&gt; &amp;mdash; Reserves space in buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef322f0c282fe3a7d27bb595b5190284b612ae2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.freeze&quot;&gt;EventBuffer::freeze()&lt;/a&gt; - Prevent calls that modify an event buffer from succeeding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2727409011836722cb2f346638a64cd50c333a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.freeze&quot;&gt;EventBuffer::freeze&lt;/a&gt; &amp;mdash; Prevent calls that modify an event buffer from succeeding</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2fcba68cdd400a93e824ef530836eee32eeb749" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.lock&quot;&gt;EventBuffer::lock()&lt;/a&gt; - Acquires a lock on buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69740e1d98855fc11cf267f2f772e249f12087a9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.lock&quot;&gt;EventBuffer::lock&lt;/a&gt; &amp;mdash; Acquires a lock on buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127c3ee43afa8b733e69af4a03c2fd660391eab7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.prepend&quot;&gt;EventBuffer::prepend()&lt;/a&gt; - Prepend data to the front of the buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3d97486ef9f69608f35eec09e2aa3a137fdae0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.prepend&quot;&gt;EventBuffer::prepend&lt;/a&gt; &amp;mdash; Prepend data to the front of the buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b26a7c0755cd8c2e7b03545580b1bf6c5c9c477" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.prependbuffer&quot;&gt;EventBuffer::prependBuffer()&lt;/a&gt; - Moves all data from source buffer to the front of current buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d7b61459762af354fc905259be986f122487df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.prependbuffer&quot;&gt;EventBuffer::prependBuffer&lt;/a&gt; &amp;mdash; Moves all data from source buffer to the front of current buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be08e5ffe74d497744b8e6f2d77177941bcaf76b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.pullup&quot;&gt;EventBuffer::pullup()&lt;/a&gt; - Linearizes data within buffer and returns it's contents as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b64652d1a7e3e1f3dbf95e1ff9c863a063a72d79" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.pullup&quot;&gt;EventBuffer::pullup&lt;/a&gt; &amp;mdash; Linearizes data within buffer and returns it's contents as a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353da6bcc9fc3b25ba6bca0830d7defb92719cc1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer::read()&lt;/a&gt; - Read data from an evbuffer and drain the bytes read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bbf69a0a9f02717628d9fe89dc4ae39a6211252" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.read&quot;&gt;EventBuffer::read&lt;/a&gt; &amp;mdash; Read data from an evbuffer and drain the bytes read</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc8c56533eab7f823f270593a6c04fbae03a6ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.readfrom&quot;&gt;EventBuffer::readFrom&lt;/a&gt; &amp;mdash; Read data from a file onto the end of the buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4816d28f21b8e4f2d43b8b5174f113d1c010b71f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.readline&quot;&gt;EventBuffer::readLine()&lt;/a&gt; - Extracts a line from the front of the buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ca6842af5f74b6da86a69f7f865ebe8a5752dca" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.readline&quot;&gt;EventBuffer::readLine&lt;/a&gt; &amp;mdash; Extracts a line from the front of the buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b435b5a471d98f570ec11f59b8372e428942e04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.search&quot;&gt;EventBuffer::search()&lt;/a&gt; - Scans the buffer for an occurrence of a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d84cbb3d735dc98d13c4a50de5d81aad4d7ba48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.search&quot;&gt;EventBuffer::search&lt;/a&gt; &amp;mdash; Scans the buffer for an occurrence of a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921478f1696cc74e95bf915dcbc747264e60b665" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.searcheol&quot;&gt;EventBuffer::searchEol()&lt;/a&gt; - Scans the buffer for an occurrence of an end of line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb1240706ad4cea4a402eb86fda0af1df9a6395f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.searcheol&quot;&gt;EventBuffer::searchEol&lt;/a&gt; &amp;mdash; Scans the buffer for an occurrence of an end of line</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1b740444600923974fd190df61311728d94fb9c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.substr&quot;&gt;EventBuffer::substr&lt;/a&gt; &amp;mdash; Substracts a portion of the buffer data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d3e0c157a452f9d925cfe7d48028390b0bac35" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.unfreeze&quot;&gt;EventBuffer::unfreeze()&lt;/a&gt; - Re-enable calls that modify an event buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c17a7d6920359e63bb83a21726ac704e7349a9d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;eventbuffer.unfreeze&quot;&gt;EventBuffer::unfreeze&lt;/a&gt; &amp;mdash; Re-enable calls that modify an event buffer</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
