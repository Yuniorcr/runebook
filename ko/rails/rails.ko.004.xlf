<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="aef6c7726e0113640853db411934d5fe025f0ae5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionDispatch::RequestId&lt;/code&gt; makes a unique X-Request-Id header available to the response and enables the &lt;code&gt;ActionDispatch::Request#uuid&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;ActionDispatch::RequestId&lt;/code&gt; 는 응답에 고유 한 X-Request-Id 헤더를 제공하고 &lt;code&gt;ActionDispatch::Request#uuid&lt;/code&gt; 메소드를 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="6b5cd8da46a4fd34d7e013d0867b056fb489509f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionDispatch::Response#content_type&lt;/code&gt; now returned Content-Type header as it is.</source>
          <target state="translated">&lt;code&gt;ActionDispatch::Response#content_type&lt;/code&gt; 이제 Content-Type 헤더를 그대로 반환했습니다.</target>
        </trans-unit>
        <trans-unit id="999a60ead15c047961b4f123fec5448a1f390f59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionDispatch::SSL&lt;/code&gt; forces every request to be served using HTTPS. Enabled if &lt;code&gt;config.force_ssl&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;. Options passed to this can be configured by setting &lt;code&gt;config.ssl_options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActionDispatch::SSL&lt;/code&gt; 은 HTTPS를 사용하여 모든 요청을 처리하도록합니다. &lt;code&gt;config.force_ssl&lt;/code&gt; 이 &lt;code&gt;true&lt;/code&gt; 로 설정된 경우 활성화됩니다 . 이에 전달 된 옵션은 &lt;code&gt;config.ssl_options&lt;/code&gt; 를 설정하여 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="178c401439dcd164de2c8bf1dfd232d25917d640" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionDispatch::Session::ActiveRecordStore&lt;/code&gt; - Stores the data in a database using Active Record. (require &lt;code&gt;activerecord-session_store&lt;/code&gt; gem).</source>
          <target state="translated">&lt;code&gt;ActionDispatch::Session::ActiveRecordStore&lt;/code&gt; -Active Record를 사용하여 데이터베이스에 데이터를 저장합니다. ( &lt;code&gt;activerecord-session_store&lt;/code&gt; gem 필요 ).</target>
        </trans-unit>
        <trans-unit id="74a20f388595d7d448a195be6feebc3f263175c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionDispatch::Session::CacheStore&lt;/code&gt; - Stores the data in the Rails cache.</source>
          <target state="translated">&lt;code&gt;ActionDispatch::Session::CacheStore&lt;/code&gt; 레일스 캐시에 데이터를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="9270122f3f49cd1bf41911661ab7742c02a1dde0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionDispatch::Session::CookieStore&lt;/code&gt; - Stores everything on the client.</source>
          <target state="translated">&lt;code&gt;ActionDispatch::Session::CookieStore&lt;/code&gt; 모든 것을 클라이언트에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="1fffe27261981a7f1a783c7a6e44d3f93615fb30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionDispatch::Session::CookieStore&lt;/code&gt; is responsible for storing the session in cookies. An alternate middleware can be used for this by changing the &lt;code&gt;config.action_controller.session_store&lt;/code&gt; to an alternate value. Additionally, options passed to this can be configured by using &lt;code&gt;config.action_controller.session_options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActionDispatch::Session::CookieStore&lt;/code&gt; 는 쿠키에 세션을 저장합니다. &lt;code&gt;config.action_controller.session_store&lt;/code&gt; 를 대체 값 으로 변경하여 대체 미들웨어를 사용할 수 있습니다 . 또한 &lt;code&gt;config.action_controller.session_options&lt;/code&gt; 를 사용하여 전달 된 옵션을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dc087ce3341620c7680aea182dc57934b378d12c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionDispatch::Session::MemCacheStore&lt;/code&gt; - Stores the data in a memcached cluster (this is a legacy implementation; consider using CacheStore instead).</source>
          <target state="translated">&lt;code&gt;ActionDispatch::Session::MemCacheStore&lt;/code&gt; -memcached 클러스터에 데이터를 저장합니다 (이것은 레거시 구현입니다. 대신 CacheStore 사용을 고려하십시오).</target>
        </trans-unit>
        <trans-unit id="c5a65abefffb6dc7f6f93654aa39f8e10f380233" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionDispatch::ShowExceptions&lt;/code&gt; rescues any exception returned by the application and renders nice exception pages if the request is local or if &lt;code&gt;config.consider_all_requests_local&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;config.action_dispatch.show_exceptions&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;, exceptions will be raised regardless.</source>
          <target state="translated">&lt;code&gt;ActionDispatch::ShowExceptions&lt;/code&gt; 는 애플리케이션이 리턴 한 예외를 복구 하고 요청이 로컬이거나 &lt;code&gt;config.consider_all_requests_local&lt;/code&gt; 이 &lt;code&gt;true&lt;/code&gt; 로 설정된 경우 멋진 예외 페이지를 렌더링 합니다 . 경우 &lt;code&gt;config.action_dispatch.show_exceptions&lt;/code&gt; 가 설정되어 &lt;code&gt;false&lt;/code&gt; , 예외에 관계없이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cc29c142737bbc96be1972fabc73bfa0be85f413" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionDispatch::Static&lt;/code&gt; is used to serve static assets. Disabled if &lt;code&gt;config.public_file_server.enabled&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;. Set &lt;code&gt;config.public_file_server.index_name&lt;/code&gt; if you need to serve a static directory index file that is not named &lt;code&gt;index&lt;/code&gt;. For example, to serve &lt;code&gt;main.html&lt;/code&gt; instead of &lt;code&gt;index.html&lt;/code&gt; for directory requests, set &lt;code&gt;config.public_file_server.index_name&lt;/code&gt; to &lt;code&gt;&quot;main&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActionDispatch::Static&lt;/code&gt; 은 정적 자산을 제공하는 데 사용됩니다. &lt;code&gt;config.public_file_server.enabled&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 인 경우 비활성화됩니다 . 설정 &lt;code&gt;config.public_file_server.index_name&lt;/code&gt; 라는 이름되지 않는 정적 디렉토리 인덱스 파일 역할을해야하는 경우 &lt;code&gt;index&lt;/code&gt; . 예를 들어 디렉토리 요청 에 &lt;code&gt;index.html&lt;/code&gt; 대신 &lt;code&gt;main.html&lt;/code&gt; 을 제공 하려면 &lt;code&gt;config.public_file_server.index_name&lt;/code&gt; 을 &lt;code&gt;&quot;main&quot;&lt;/code&gt; 으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="34e32dc049323d44fcde7bd8a15e9b3622a067d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionView::Helpers::RecordTagHelper&lt;/code&gt; moved to external gem (record_tag_helper)</source>
          <target state="translated">&lt;code&gt;ActionView::Helpers::RecordTagHelper&lt;/code&gt; 가 외부 gem으로 이동 (record_tag_helper)</target>
        </trans-unit>
        <trans-unit id="ef67e16dc576853dd0d1b08cf76147e831efaf47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActionView::Layouts&lt;/code&gt;: Support for layouts when rendering.</source>
          <target state="translated">&lt;code&gt;ActionView::Layouts&lt;/code&gt; : 렌더링 할 때 레이아웃을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="3668732050963da11fc6980f8a7de27f0df1c897" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveModel::Callbacks&lt;/code&gt; gives Active Record style callbacks. This provides an ability to define callbacks which run at appropriate times. After defining callbacks, you can wrap them with before, after, and around custom methods.</source>
          <target state="translated">&lt;code&gt;ActiveModel::Callbacks&lt;/code&gt; 는 Active Record 스타일 콜백을 제공합니다. 이를 통해 적절한 시간에 실행되는 콜백을 정의 할 수 있습니다. 콜백을 정의한 후에는 사용자 정의 메소드의 전후에 콜백을 감쌀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4310d039ccd618944dde8cf1e1bfecf124fbf37d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveModel::Errors#full_messages&lt;/code&gt; prepends the attribute name to the error message using a separator that will be looked up from &lt;a href=&quot;https://github.com/rails/rails/blob/master/activemodel/lib/active_model/locale/en.yml#L4&quot;&gt;errors.format&lt;/a&gt; (and which defaults to &lt;code&gt;&quot;%{attribute} %{message}&quot;&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;ActiveModel::Errors#full_messages&lt;/code&gt; 는 &lt;a href=&quot;https://github.com/rails/rails/blob/master/activemodel/lib/active_model/locale/en.yml#L4&quot;&gt;errors.format&lt;/a&gt; 에서 조회 할 분리 자를 사용하여 속성 이름을 오류 메시지 앞에 추가합니다 (기본값은 &lt;code&gt;&quot;%{attribute} %{message}&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="658bce759b7d60dd76d812a14d9618c69f9b4b2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveModel::Errors#generate_message&lt;/code&gt; (which is used by Active Model validations but may also be used manually) uses &lt;code&gt;model_name.human&lt;/code&gt; and &lt;code&gt;human_attribute_name&lt;/code&gt; (see above). It also translates the error message and supports translations for inherited class names as explained above in &quot;Error message scopes&quot;.</source>
          <target state="translated">&lt;code&gt;ActiveModel::Errors#generate_message&lt;/code&gt; (Active Model 유효성 검증에 의해 사용되지만 수동으로 사용될 수도 있음)은 &lt;code&gt;model_name.human&lt;/code&gt; 및 &lt;code&gt;human_attribute_name&lt;/code&gt; 을 사용합니다 (위 참조). 또한 오류 메시지를 번역하고 위에서 &quot;오류 메시지 범위&quot;에 설명 된대로 상속 된 클래스 이름의 번역을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="e65cc15a6f6773e0a01b9a96ec76eeed439adcd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveModel::Lint::Tests&lt;/code&gt; allows you to test whether an object is compliant with the Active Model API.</source>
          <target state="translated">&lt;code&gt;ActiveModel::Lint::Tests&lt;/code&gt; 사용하면 개체가 Active Model API와 호환되는지 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb2a33c2eb94c48b34b939073e7e17440dd03dbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveModel::Model&lt;/code&gt; adds the ability for a class to work with Action Pack and Action View right out of the box.</source>
          <target state="translated">&lt;code&gt;ActiveModel::Model&lt;/code&gt; 은 클래스가 즉시 Action Pack 및 Action View를 사용할 수있는 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="8a1a04b7f74be7303f1d10853791065d3796ac40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveModel::Naming&lt;/code&gt; adds a number of class methods which make naming and routing easier to manage. The module defines the &lt;code&gt;model_name&lt;/code&gt; class method which will define a number of accessors using some &lt;code&gt;ActiveSupport::Inflector&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;ActiveModel::Naming&lt;/code&gt; 은 이름 지정 및 라우팅을보다 쉽게 ​​관리 할 수있는 여러 가지 클래스 메소드를 추가합니다. 이 모듈은 일부 &lt;code&gt;ActiveSupport::Inflector&lt;/code&gt; 메소드를 사용하여 다수의 접근 &lt;code&gt;model_name&lt;/code&gt; 정의 할 model_name 클래스 메소드를 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="e6890298b42c9a055bae9aaf25fa5f3f97cc717b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveModel::SecurePassword&lt;/code&gt; depends on &lt;a href=&quot;https://github.com/codahale/bcrypt-ruby&quot;&gt;&lt;code&gt;bcrypt&lt;/code&gt;&lt;/a&gt;, so include this gem in your &lt;code&gt;Gemfile&lt;/code&gt; to use &lt;code&gt;ActiveModel::SecurePassword&lt;/code&gt; correctly. In order to make this work, the model must have an accessor named &lt;code&gt;XXX_digest&lt;/code&gt;. Where &lt;code&gt;XXX&lt;/code&gt; is the attribute name of your desired password. The following validations are added automatically:</source>
          <target state="translated">&lt;code&gt;ActiveModel::SecurePassword&lt;/code&gt; 에 따라 달라집니다 &lt;a href=&quot;https://github.com/codahale/bcrypt-ruby&quot;&gt; &lt;code&gt;bcrypt&lt;/code&gt; &lt;/a&gt; 그래서 당신이 보석을 포함, &lt;code&gt;Gemfile&lt;/code&gt; 사용하는 &lt;code&gt;ActiveModel::SecurePassword&lt;/code&gt; 제대로합니다. 이 작업을 수행하려면 모델에 &lt;code&gt;XXX_digest&lt;/code&gt; 라는 접근자가 있어야합니다 . 여기서 &lt;code&gt;XXX&lt;/code&gt; 는 원하는 비밀번호의 속성 이름입니다. 다음 유효성 검사가 자동으로 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="e2a29fab6565ac18cfd4784c18626f2b5e9f14c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveModel::SecurePassword&lt;/code&gt; provides a way to securely store any password in an encrypted form. When you include this module, a &lt;code&gt;has_secure_password&lt;/code&gt; class method is provided which defines a &lt;code&gt;password&lt;/code&gt; accessor with certain validations on it by default.</source>
          <target state="translated">&lt;code&gt;ActiveModel::SecurePassword&lt;/code&gt; 는 모든 암호를 암호화 된 형식으로 안전하게 저장하는 방법을 제공합니다. 이 모듈을 포함하면 기본적으로 특정 유효성 검증을 가진 &lt;code&gt;password&lt;/code&gt; 접근 &lt;code&gt;has_secure_password&lt;/code&gt; 정의하는 has_secure_password 클래스 메소드가 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="3242f7514265b43c6f9ff6299adfd0e96ed2a2cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveModel::Serialization&lt;/code&gt; provides basic serialization for your object. You need to declare an attributes Hash which contains the attributes you want to serialize. Attributes must be strings, not symbols.</source>
          <target state="translated">&lt;code&gt;ActiveModel::Serialization&lt;/code&gt; 은 개체에 대한 기본 직렬화를 제공합니다. 직렬화하려는 특성이 포함 된 특성 Hash를 선언해야합니다. 속성은 기호가 아닌 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="375de8c1d5a53689f8bc25f4998be032b69daa85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveModel::Serializers::Xml&lt;/code&gt; has been extracted from Rails to the &lt;code&gt;activemodel-serializers-xml&lt;/code&gt; gem. To continue using XML serialization in your application, add &lt;code&gt;gem 'activemodel-serializers-xml'&lt;/code&gt; to your &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActiveModel::Serializers::Xml&lt;/code&gt; 이 Rails에서 &lt;code&gt;activemodel-serializers-xml&lt;/code&gt; gem 으로 추출되었습니다 . 추가, 응용 프로그램에서 XML 직렬화를 계속 사용하려면 &lt;code&gt;gem 'activemodel-serializers-xml'&lt;/code&gt; 당신에 &lt;code&gt;Gemfile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="45e9148a6dc10c4a8739679a245b03fa834b819f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveModel::Translation&lt;/code&gt; provides integration between your object and the Rails internationalization (i18n) framework.</source>
          <target state="translated">&lt;code&gt;ActiveModel::Translation&lt;/code&gt; 은 객체와 Rails 국제화 (i18n) 프레임 워크를 통합합니다.</target>
        </trans-unit>
        <trans-unit id="f2e95859e277665174a7a795d449ef89868bef7a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveRecord::ConnectionAdapters::Mysql2Adapter.emulate_booleans&lt;/code&gt; controls whether Active Record will consider all &lt;code&gt;tinyint(1)&lt;/code&gt; columns as booleans. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActiveRecord::ConnectionAdapters::Mysql2Adapter.emulate_booleans&lt;/code&gt; 는 Active Record가 모든 &lt;code&gt;tinyint(1)&lt;/code&gt; 열을 부울로 간주할지 여부를 제어합니다 . 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="25fbaeea33b8911777bebf26c07812e0cf9955c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveRecord::ConnectionAdapters::PostgreSQLAdapter.create_unlogged_tables&lt;/code&gt; controls whether database tables created should be &quot;unlogged,&quot; which can speed up performance but adds a risk of data loss if the database crashes. It is highly recommended that you do not enable this in a production environment. Defaults to &lt;code&gt;false&lt;/code&gt; in all environments.</source>
          <target state="translated">&lt;code&gt;ActiveRecord::ConnectionAdapters::PostgreSQLAdapter.create_unlogged_tables&lt;/code&gt; 는 생성 된 데이터베이스 테이블이 &quot;로그되지 않아야&quot;하는지 여부를 제어하여 성능을 향상시킬 수 있지만 데이터베이스 충돌시 데이터 손실 위험을 추가합니다. 프로덕션 환경에서는이 기능을 사용하지 않는 것이 좋습니다. 모든 환경에서 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ff725684cbe64f0a708b2206d2090c9af1dba962" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveRecord::Migration::CommandRecorder&lt;/code&gt; records commands done during a migration and knows how to reverse those commands. The &lt;a href=&quot;commandrecorder&quot;&gt;CommandRecorder&lt;/a&gt; knows how to invert the following commands:</source>
          <target state="translated">&lt;code&gt;ActiveRecord::Migration::CommandRecorder&lt;/code&gt; 는 마이그레이션 중에 수행 된 명령을 기록하고 해당 명령을 되 돌리는 방법을 알고 있습니다. &lt;a href=&quot;commandrecorder&quot;&gt;CommandRecorder는&lt;/a&gt; 다음 명령을 반전하는 방법을 알고있다 :</target>
        </trans-unit>
        <trans-unit id="47bfd5979253a6a4c644ed32cc5dbcced5a7cc68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveRecord::Observer&lt;/code&gt; and &lt;code&gt;ActionController::Caching::Sweeper&lt;/code&gt; have been extracted to the &lt;code&gt;rails-observers&lt;/code&gt; gem. You will need to add the &lt;code&gt;rails-observers&lt;/code&gt; gem if you require these features.</source>
          <target state="translated">&lt;code&gt;ActiveRecord::Observer&lt;/code&gt; 및 &lt;code&gt;ActionController::Caching::Sweeper&lt;/code&gt; 가 &lt;code&gt;rails-observers&lt;/code&gt; gem 으로 추출되었습니다 . 이러한 기능이 필요한 경우 &lt;code&gt;rails-observers&lt;/code&gt; gem 을 추가해야 합니다.</target>
        </trans-unit>
        <trans-unit id="26258762dd0afbaa330dd0c23f99ce12b18e2642" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveRecord::SchemaDumper.fk_ignore_pattern&lt;/code&gt; allows setting a different regular expression that will be used to decide whether a foreign key's name should be dumped to db/schema.rb or not. By default, foreign key names starting with &lt;code&gt;fk_rails_&lt;/code&gt; are not exported to the database schema dump. Defaults to &lt;code&gt;/^fk_rails_[0-9a-f]{10}$/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActiveRecord::SchemaDumper.fk_ignore_pattern&lt;/code&gt; 사용하면 외래 키 이름을 db / schema.rb에 덤프할지 여부를 결정하는 데 사용할 다른 정규식을 설정할 수 있습니다. 기본적으로 &lt;code&gt;fk_rails_&lt;/code&gt; 로 시작하는 외래 키 이름 은 데이터베이스 스키마 덤프로 내보내지지 않습니다. 기본값은 &lt;code&gt;/^fk_rails_[0-9a-f]{10}$/&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0394557845367b7b22ac10ec21eb75ff25ae3ca5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveRecord::SchemaDumper.ignore_tables&lt;/code&gt; accepts an array of tables that should &lt;em&gt;not&lt;/em&gt; be included in any generated schema file.</source>
          <target state="translated">&lt;code&gt;ActiveRecord::SchemaDumper.ignore_tables&lt;/code&gt; 는 생성 된 스키마 파일에 포함 &lt;em&gt;되지&lt;/em&gt; 않아야하는 테이블 배열을 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="6a5a4bf1c5d1287bf640934fd94cfd229b04d617" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveSupport.on_load&lt;/code&gt; is a mechanism that can be used to defer the loading of code until it is actually needed. The snippet above can be changed to:</source>
          <target state="translated">&lt;code&gt;ActiveSupport.on_load&lt;/code&gt; 는 실제로 필요할 때까지 코드로드를 연기하는 데 사용할 수있는 메커니즘입니다. 위의 스 니펫은 다음과 같이 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9c77e200a938800ab975d840b014f1ab94e8362" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveSupport.to_time_preserves_timezone&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ActiveSupport.to_time_preserves_timezone&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b1e68c2dd8f8318c86092bffafab36f2e6f0a9a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveSupport::Cache::Store.logger&lt;/code&gt; specifies the logger to use within cache store operations.</source>
          <target state="translated">&lt;code&gt;ActiveSupport::Cache::Store.logger&lt;/code&gt; 는 캐시 저장소 작업 내에서 사용할 로거를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c2ff75786d019e16b0ab6ed2e881752340ec6266" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveSupport::Cache::Strategy::LocalCache&lt;/code&gt; serves as a basic memory backed cache. This cache is not thread safe and is intended only for serving as a temporary memory cache for a single thread.</source>
          <target state="translated">&lt;code&gt;ActiveSupport::Cache::Strategy::LocalCache&lt;/code&gt; 는 기본 메모리 백업 캐시 역할을합니다. 이 캐시는 스레드로부터 안전하지 않으며 단일 스레드의 임시 메모리 캐시로만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3276b1a0ae7feb2beae9dfe1c7466bc62213aab5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveSupport::Deprecation.behavior&lt;/code&gt; alternative setter to &lt;code&gt;config.active_support.deprecation&lt;/code&gt; which configures the behavior of deprecation warnings for Rails.</source>
          <target state="translated">&lt;code&gt;ActiveSupport::Deprecation.behavior&lt;/code&gt; Rails에 대한 지원 중단 경고 동작을 구성하는 &lt;code&gt;config.active_support.deprecation&lt;/code&gt; 에 대한 ActiveSupport :: Deprecation.behavior 대체 설정 기 입니다.</target>
        </trans-unit>
        <trans-unit id="8cd0babfe1aad228617dbea93e438a62b5f4e794" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveSupport::Deprecation.silence&lt;/code&gt; takes a block in which all deprecation warnings are silenced.</source>
          <target state="translated">&lt;code&gt;ActiveSupport::Deprecation.silence&lt;/code&gt; 는 모든 지원 중단 경고가 표시되지 않는 블록을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b9253a7030847b5b13abcc5286a8ea4b5424bfc0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveSupport::Deprecation.silenced&lt;/code&gt; sets whether or not to display deprecation warnings. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActiveSupport::Deprecation.silenced&lt;/code&gt; 는 지원 중단 경고 표시 여부를 설정합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="11065f8976488534fe01c657831c24de781813d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveSupport::LogSubscriber&lt;/code&gt; is an object set to consume &lt;code&gt;ActiveSupport::Notifications&lt;/code&gt; with the sole purpose of logging them. The log subscriber dispatches notifications to a registered object based on its given namespace.</source>
          <target state="translated">&lt;code&gt;ActiveSupport::LogSubscriber&lt;/code&gt; 는 로깅 목적으로 만 &lt;code&gt;ActiveSupport::Notifications&lt;/code&gt; 를 사용하도록 설정된 객체입니다 . 로그 구독자는 지정된 네임 스페이스를 기반으로 등록 된 개체에 알림을 발송합니다.</target>
        </trans-unit>
        <trans-unit id="a8cca8b7fbb075cdc291ff82b3b0d9885de788d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveSupport::Logger.silencer&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt; to disable the ability to silence logging in a block. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActiveSupport::Logger.silencer&lt;/code&gt; 블록에서 로깅을 침묵시키는 기능을 비활성화하려면 ActiveSupport :: Logger.silencer 가 &lt;code&gt;false&lt;/code&gt; 로 설정됩니다 . 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="be7aebacb0eb623ab594701c4b37d6033c08a01e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveSupport::Notifications&lt;/code&gt; provides an instrumentation API for Ruby.</source>
          <target state="translated">&lt;code&gt;ActiveSupport::Notifications&lt;/code&gt; 는 Ruby 용 인스 트루먼 테이션 API를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9dd4c6d54b644e1801b4692f9b4775a7e0645e29" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveSupport::OrderedHash&lt;/code&gt; is namespaced to prevent conflicts with other implementations.</source>
          <target state="translated">&lt;code&gt;ActiveSupport::OrderedHash&lt;/code&gt; 는 다른 구현과의 충돌을 방지하기 위해 네임 스페이스입니다.</target>
        </trans-unit>
        <trans-unit id="a6305af4ccf4d9ccd49b75d0e4a1f6a850df237a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ActiveSupport::TestCase&lt;/code&gt; Default Test Order is Now Random</source>
          <target state="translated">&lt;code&gt;ActiveSupport::TestCase&lt;/code&gt; 기본 테스트 순서는 이제 임의입니다</target>
        </trans-unit>
        <trans-unit id="f27874f87858a6dfbc21e52fb74f0250fb407d73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ApplicationController&lt;/code&gt; inherits from &lt;code&gt;ActionController::Base&lt;/code&gt;, which defines a number of helpful methods. This guide will cover some of these, but if you're curious to see what's in there, you can see all of them in the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController.html&quot;&gt;API documentation&lt;/a&gt; or in the source itself.</source>
          <target state="translated">&lt;code&gt;ApplicationController&lt;/code&gt; 는 &lt;code&gt;ActionController::Base&lt;/code&gt; 상속 받으며 ,이 메소드는 여러 유용한 메소드를 정의합니다. 이 가이드는 이들 중 일부를 다루지 만 거기에 무엇이 있는지 궁금하다면 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionController.html&quot;&gt;API 설명서&lt;/a&gt; 나 소스 자체에서 모든 내용을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60f0eba674a2837c53b86821866f649dfc6081a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ApplicationRecord&lt;/code&gt; inherits from &lt;code&gt;ActiveRecord::Base&lt;/code&gt;, which defines a number of helpful methods. You can use the &lt;code&gt;ActiveRecord::Base.table_name=&lt;/code&gt; method to specify the table name that should be used:</source>
          <target state="translated">&lt;code&gt;ApplicationRecord&lt;/code&gt; 는 여러 유용한 메소드를 정의하는 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 에서 상속 합니다. 당신이 사용할 수있는 &lt;code&gt;ActiveRecord::Base.table_name=&lt;/code&gt; 사용되어야하는 테이블의 이름을 지정하는 방법 :</target>
        </trans-unit>
        <trans-unit id="2f4544857958715b460e88624bb3d48ec8ece742" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ApplicationRecord&lt;/code&gt; is a new superclass for all app models, analogous to app controllers subclassing &lt;code&gt;ApplicationController&lt;/code&gt; instead of &lt;code&gt;ActionController::Base&lt;/code&gt;. This gives apps a single spot to configure app-wide model behavior.</source>
          <target state="translated">&lt;code&gt;ApplicationRecord&lt;/code&gt; 는 &lt;code&gt;ActionController::Base&lt;/code&gt; 대신 &lt;code&gt;ApplicationController&lt;/code&gt; 를 서브 클래 싱하는 앱 컨트롤러와 유사한 모든 앱 모델의 새로운 수퍼 클래스입니다 . 이를 통해 앱은 전체 모델 동작을 구성 할 수있는 단일 지점을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="29819170a15acacee30ac25e7be429bcccd26f84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array#to_sentence&lt;/code&gt; uses format settings as given in the &lt;a href=&quot;https://github.com/rails/rails/blob/master/activesupport/lib/active_support/locale/en.yml#L33&quot;&gt;support.array&lt;/a&gt; scope.</source>
          <target state="translated">&lt;code&gt;Array#to_sentence&lt;/code&gt; 는 &lt;a href=&quot;https://github.com/rails/rails/blob/master/activesupport/lib/active_support/locale/en.yml#L33&quot;&gt;support.array&lt;/a&gt; 범위에 지정된 형식 설정을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="22a1b03f787894f671d7e3a4cf7e72f57e76fd99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Array&lt;/code&gt; - A normalized list of modules for the list of helpers provided.</source>
          <target state="translated">&lt;code&gt;Array&lt;/code&gt; -제공된 헬퍼 목록에 대한 정규화 된 모듈 목록입니다.</target>
        </trans-unit>
        <trans-unit id="7602388120e759d4696cea4e86335c610e2a59e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ArticlesController#index&lt;/code&gt; will use the &lt;code&gt;main&lt;/code&gt; layout</source>
          <target state="translated">&lt;code&gt;ArticlesController#index&lt;/code&gt; 는 &lt;code&gt;main&lt;/code&gt; 레이아웃 을 사용합니다</target>
        </trans-unit>
        <trans-unit id="e94e45eb3aff10092ddfa97a3b6c0e3cb39d74f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;AzureStorage&lt;/code&gt;, to manage attachments through Microsoft Azure Storage.</source>
          <target state="translated">&lt;code&gt;AzureStorage&lt;/code&gt; , Microsoft Azure Storage를 통해 첨부 파일을 관리합니다.</target>
        </trans-unit>
        <trans-unit id="32baa25b05d556ef9690fc430a10b4ea21f19b38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Billing::Invoice&lt;/code&gt; is composed of two constants: &lt;code&gt;Billing&lt;/code&gt; is relative and is resolved using the algorithm of the previous section.</source>
          <target state="translated">&lt;code&gt;Billing::Invoice&lt;/code&gt; 는 두 가지 상수로 구성됩니다. &lt;code&gt;Billing&lt;/code&gt; 는 상대적이며 이전 섹션의 알고리즘을 사용하여 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="f2a46b4d005a5aed77b876a34802bd7eb27dfa0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateTime&lt;/code&gt; is not aware of DST rules and so some of these methods have edge cases when a DST change is going on. For example &lt;code&gt;seconds_since_midnight&lt;/code&gt; might not return the real amount in such a day.</source>
          <target state="translated">&lt;code&gt;DateTime&lt;/code&gt; 은 DST 규칙을 인식하지 못하므로 이러한 방법 중 일부는 DST 변경이 진행될 때 중요한 경우가 있습니다. 예를 들어 &lt;code&gt;seconds_since_midnight&lt;/code&gt; 는 그런 날에 실제 금액을 반환하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e437c5ef4559b148b2511c8f30b90bf62e0730b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateTime&lt;/code&gt; objects have their time set to 0:00 unless &lt;code&gt;same_time&lt;/code&gt; is true.</source>
          <target state="translated">&lt;code&gt;DateTime&lt;/code&gt; &lt;code&gt;same_time&lt;/code&gt; 이 true가 아니면 DateTime 객체의 시간은 0:00으로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="439b371f0b9ba94163155a42d34fe2384ef04397" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateTime&lt;/code&gt; objects will have a time set to 0:00.</source>
          <target state="translated">&lt;code&gt;DateTime&lt;/code&gt; 객체의 시간은 0:00으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="99529974f9171a721771bc9a4b3e5c9c8c3620be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DateTime&lt;/code&gt; objects will have a time set to 23:59:59.</source>
          <target state="translated">&lt;code&gt;DateTime&lt;/code&gt; 객체의 시간은 23:59:59로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="c2ddfb2c0f6baee708ce599211769621294635f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Developer#projects.build&lt;/code&gt; (similar to &lt;code&gt;Project.new(developer_id: id)&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Developer#projects.build&lt;/code&gt; ( &lt;code&gt;Project.new(developer_id: id)&lt;/code&gt; 와 유사 )</target>
        </trans-unit>
        <trans-unit id="74e6c4181b6418f5d9f2d79d1963c09adb54eebd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Developer#projects.create&lt;/code&gt; (similar to &lt;code&gt;c =
Project.new(developer_id: id); c.save; c&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Developer#projects.create&lt;/code&gt; ( &lt;code&gt;c = Project.new(developer_id: id); c.save; c&lt;/code&gt; 와 유사 )</target>
        </trans-unit>
        <trans-unit id="eb078bdd8c1a266358cf4fa15e930b9d998f2995" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DisallowedType&lt;/code&gt; is raised if the XML contains attributes with &lt;code&gt;type=&quot;yaml&quot;&lt;/code&gt; or &lt;code&gt;type=&quot;symbol&quot;&lt;/code&gt;. Use &lt;code&gt;Hash.from_trusted_xml&lt;/code&gt; to parse this XML.</source>
          <target state="translated">&lt;code&gt;DisallowedType&lt;/code&gt; XML에 &lt;code&gt;type=&quot;yaml&quot;&lt;/code&gt; 또는 &lt;code&gt;type=&quot;symbol&quot;&lt;/code&gt; 인 속성이 포함 된 경우 DisallowedType 이 발생합니다 . 이 XML을 구문 분석 하려면 &lt;code&gt;Hash.from_trusted_xml&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9554c8db15c97d98af109f6706b5746949df1829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Disk&lt;/code&gt;, to manage attachments saved directly on the hard drive.</source>
          <target state="translated">&lt;code&gt;Disk&lt;/code&gt; , 하드 드라이브에 직접 저장된 첨부 파일을 관리합니다.</target>
        </trans-unit>
        <trans-unit id="8aab0e748dd580f558e6371c78ab0d56183bddda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENV[&quot;RAILS_CACHE_ID&quot;]&lt;/code&gt; and &lt;code&gt;ENV[&quot;RAILS_APP_VERSION&quot;]&lt;/code&gt; are used to generate expanded cache keys in Rails' caching code. This allows you to have multiple separate caches from the same application.</source>
          <target state="translated">&lt;code&gt;ENV[&quot;RAILS_CACHE_ID&quot;]&lt;/code&gt; 및 &lt;code&gt;ENV[&quot;RAILS_APP_VERSION&quot;]&lt;/code&gt; 는 Rails의 캐싱 코드에서 확장 된 캐시 키를 생성하는 데 사용됩니다. 이를 통해 동일한 애플리케이션에서 여러 개의 개별 캐시를 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2f105e825410671aecfa19a95655c3b497fa29f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENV[&quot;RAILS_ENV&quot;]&lt;/code&gt; defines the Rails environment (production, development, test, and so on) that Rails will run under.</source>
          <target state="translated">&lt;code&gt;ENV[&quot;RAILS_ENV&quot;]&lt;/code&gt; 는 Rails가 실행될 Rails 환경 (생산, 개발, 테스트 등)을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="1d752821ada992a8a88956569cf241f4dc2e8d3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ENV[&quot;RAILS_RELATIVE_URL_ROOT&quot;]&lt;/code&gt; is used by the routing code to recognize URLs when you &lt;a href=&quot;configuring#deploy-to-a-subdirectory-relative-url-root&quot;&gt;deploy your application to a subdirectory&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ENV[&quot;RAILS_RELATIVE_URL_ROOT&quot;]&lt;/code&gt; 는 라우팅 코드에서 &lt;a href=&quot;configuring#deploy-to-a-subdirectory-relative-url-root&quot;&gt;응용 프로그램을 하위 디렉토리에 배포 할&lt;/a&gt; 때 URL을 인식하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a8e184b3ae0a5a34a66bb4a5fda748df96af405a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Firm#clients.build&lt;/code&gt; (similar to &lt;code&gt;Client.new(firm_id:
id)&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Firm#clients.build&lt;/code&gt; ( &lt;code&gt;Client.new(firm_id: id)&lt;/code&gt; 와 유사 )</target>
        </trans-unit>
        <trans-unit id="49e3e7465441e41b835ce5d38202accdafbedfb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Firm#clients.create!&lt;/code&gt; (similar to &lt;code&gt;c = Client.new(firm_id:
id); c.save!&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Firm#clients.create!&lt;/code&gt; ( &lt;code&gt;c = Client.new(firm_id: id); c.save!&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="10808ca0cc093989b46752d9f9900f838d563e2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Firm#clients.create&lt;/code&gt; (similar to &lt;code&gt;c = Client.new(firm_id:
id); c.save; c&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Firm#clients.create&lt;/code&gt; ( &lt;code&gt;c = Client.new(firm_id: id); c.save; c&lt;/code&gt; 와 유사 )</target>
        </trans-unit>
        <trans-unit id="4538cb47fbae4e8904407074a4c1532e2f77434f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Firm#clients.empty?&lt;/code&gt; (similar to &lt;code&gt;firm.clients.size ==
0&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Firm#clients.empty?&lt;/code&gt; ( &lt;code&gt;firm.clients.size == 0&lt;/code&gt; 과 유사 )</target>
        </trans-unit>
        <trans-unit id="7e887b4718655ab56f160b7910ae48a070319a12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Firm#clients.exists?(name: 'ACME')&lt;/code&gt; (similar to &lt;code&gt;Client.exists?(name: 'ACME', firm_id: firm.id)&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Firm#clients.exists?(name: 'ACME')&lt;/code&gt; ( &lt;code&gt;Client.exists?(name: 'ACME', firm_id: firm.id)&lt;/code&gt; 와 유사 )</target>
        </trans-unit>
        <trans-unit id="14533aef25ff7b650a9de4a44ab5316052e38885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Firm#clients.find&lt;/code&gt; (similar to &lt;code&gt;Client.where(firm_id:
id).find(id)&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Firm#clients.find&lt;/code&gt; ( &lt;code&gt;Client.where(firm_id: id).find(id)&lt;/code&gt; 와 유사 )</target>
        </trans-unit>
        <trans-unit id="b097106827da485836e8977dbe9d9dc841320da5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Firm#clients.size&lt;/code&gt; (similar to &lt;code&gt;Client.count &quot;firm_id
= #{id}&quot;&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Firm#clients.size&lt;/code&gt; ( &lt;code&gt;Client.count &quot;firm_id = #{id}&quot;&lt;/code&gt; 와 유사 )</target>
        </trans-unit>
        <trans-unit id="5f103beb369b1e41f0d3b792634828cefc6a35bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Firm#clients&lt;/code&gt; (similar to &lt;code&gt;Client.where(firm_id:
id)&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Firm#clients&lt;/code&gt; ( &lt;code&gt;Client.where(firm_id: id)&lt;/code&gt; 와 유사 )</target>
        </trans-unit>
        <trans-unit id="914df3137b42934b3aceffb389f91fd4013b7c8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GCS&lt;/code&gt;, to manage attachments through Google Cloud Storage.</source>
          <target state="translated">&lt;code&gt;GCS&lt;/code&gt; Google Cloud Storage를 통해 첨부 파일을 관리하는 GCS</target>
        </trans-unit>
        <trans-unit id="6c28029f264e6e4b14e62e7f310aa2cfe12e19dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;GET&lt;/code&gt; in Rails won't check for CSRF token. You should never write to the database from &lt;code&gt;GET&lt;/code&gt; requests, for more information see the &lt;a href=&quot;security#csrf-countermeasures&quot;&gt;security guide&lt;/a&gt; on CSRF countermeasures.</source>
          <target state="translated">&lt;code&gt;GET&lt;/code&gt; Rails의 GET 은 CSRF 토큰을 확인하지 않습니다. &lt;code&gt;GET&lt;/code&gt; 요청 에서 데이터베이스에 쓰지 말아야 합니다. 자세한 정보 는 CSRF 대책에 대한 &lt;a href=&quot;security#csrf-countermeasures&quot;&gt;보안 안내서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d56a9d73fba9f04629dd2850dcc316ad049c66fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash&lt;/code&gt; (Keys should be of &lt;code&gt;String&lt;/code&gt; or &lt;code&gt;Symbol&lt;/code&gt; type)</source>
          <target state="translated">&lt;code&gt;Hash&lt;/code&gt; (키는 &lt;code&gt;String&lt;/code&gt; 또는 &lt;code&gt;Symbol&lt;/code&gt; 유형 이어야 함 )</target>
        </trans-unit>
        <trans-unit id="0faf1f0b20a5562d05a19b39e9c51f1d9aa42d2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Hash&lt;/code&gt; - The URL will be generated by calling url_for with the &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Hash&lt;/code&gt; &amp;mdash;URL은 &lt;code&gt;options&lt;/code&gt; 과 함께 url_for를 호출하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="3cc1e4cb2269312a0d061ffb691023718d7fd61d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;I18n.locale&lt;/code&gt; can leak into subsequent requests served by the same thread/process if it is not consistently set in every controller. For example executing &lt;code&gt;I18n.locale = :es&lt;/code&gt; in one POST requests will have effects for all later requests to controllers that don't set the locale, but only in that particular thread/process. For that reason, instead of &lt;code&gt;I18n.locale =&lt;/code&gt; you can use &lt;code&gt;I18n.with_locale&lt;/code&gt; which does not have this leak issue.</source>
          <target state="translated">&lt;code&gt;I18n.locale&lt;/code&gt; 은 모든 컨트롤러에서 일관되게 설정되지 않은 경우 동일한 스레드 / 프로세스가 제공하는 후속 요청으로 누출 될 수 있습니다. 예를 들어 하나의 POST 요청에서 &lt;code&gt;I18n.locale = :es&lt;/code&gt; 를 실행 하면 로케일을 설정하지 않고 해당 특정 스레드 / 프로세스에서만 컨트롤러에 대한 모든 이후 요청에 영향을 미칩니다. &lt;code&gt;I18n.locale =&lt;/code&gt; 대신 에이 누수 문제가없는 &lt;code&gt;I18n.with_locale&lt;/code&gt; 을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="51e541f64eada40bd210ee0050c53d3ed54d9d89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;InheritableOptions&lt;/code&gt; provides a constructor to build an &lt;code&gt;OrderedOptions&lt;/code&gt; hash inherited from another hash.</source>
          <target state="translated">&lt;code&gt;InheritableOptions&lt;/code&gt; 는 다른 해시에서 상속 된 &lt;code&gt;OrderedOptions&lt;/code&gt; 해시 를 작성하는 생성자를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="b0101362d5562359f108b7b7dafd19caf70d4b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Invoice&lt;/code&gt; on the other hand is qualified by &lt;code&gt;Billing&lt;/code&gt; and we are going to see its resolution next. Let's define &lt;em&gt;parent&lt;/em&gt; to be that qualifying class or module object, that is, &lt;code&gt;Billing&lt;/code&gt; in the example above. The algorithm for qualified constants goes like this:</source>
          <target state="translated">&lt;code&gt;Invoice&lt;/code&gt; 반면에 인보이스 는 &lt;code&gt;Billing&lt;/code&gt; 에서 인증을 받았으며 다음에 해결 방법을 확인할 것입니다. &lt;em&gt;부모&lt;/em&gt; 를 해당 클래스 또는 모듈 객체, 즉 위의 예에서 &lt;code&gt;Billing&lt;/code&gt; 으로 정의합시다 . 정규화 된 상수에 대한 알고리즘은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="930c92d06c3baa98e6a4b5c6e6f508480b0c73a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Kernel#load&lt;/code&gt; allows Rails to execute files more than once if &lt;a href=&quot;#constant-reloading&quot;&gt;constant reloading&lt;/a&gt; is enabled.</source>
          <target state="translated">&lt;code&gt;Kernel#load&lt;/code&gt; &lt;a href=&quot;#constant-reloading&quot;&gt;일정한 재로드&lt;/a&gt; 가 활성화 된 경우 Rails는 커널 #load를 사용하여 파일을 두 번 이상 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="114a914cd8a96fa61a162cafdaa8b37f26df89f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LookupContext&lt;/code&gt; is the object responsible for holding all information required for looking up templates, i.e. view paths and details. Check &lt;code&gt;ActionView::LookupContext&lt;/code&gt; for more information.</source>
          <target state="translated">&lt;code&gt;LookupContext&lt;/code&gt; 는 템플릿을 조회하는 데 필요한 모든 정보 (예 :보기 경로 및 세부 정보)를 보유하는 개체입니다. 확인 &lt;code&gt;ActionView::LookupContext&lt;/code&gt; 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="fcb890a8d04e5eb7878486c1b013b21e303b222b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageVerifier&lt;/code&gt; creates HMAC signatures using SHA1 hash algorithm by default. If you want to use a different hash algorithm, you can change it by providing &lt;code&gt;:digest&lt;/code&gt; key as an option while initializing the verifier:</source>
          <target state="translated">&lt;code&gt;MessageVerifier&lt;/code&gt; 는 기본적으로 SHA1 해시 알고리즘을 사용하여 HMAC 서명을 만듭니다. 다른 해시 알고리즘을 사용 하려면 검증자를 초기화하는 동안 &lt;code&gt;:digest&lt;/code&gt; 키를 옵션으로 제공하여 알고리즘을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2f04ba1db0d0a83132864b812920ce9ff9b77c2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageVerifier&lt;/code&gt; makes it easy to generate and verify messages which are signed to prevent tampering.</source>
          <target state="translated">&lt;code&gt;MessageVerifier&lt;/code&gt; 를 사용하면 변조 방지를 위해 서명 된 메시지를 쉽게 생성하고 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f39849c3c6ac968add22ae091562cea6c5e648b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Mirror&lt;/code&gt;, to be able to use several services to manage attachments.</source>
          <target state="translated">&lt;code&gt;Mirror&lt;/code&gt; 여러 서비스를 사용하여 첨부 파일을 관리 할 수있는 Mirror</target>
        </trans-unit>
        <trans-unit id="730f3abbfe4e8ad9c647a52bfd84bbf307dfd418" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MyEngine&lt;/code&gt; is mounted at &lt;code&gt;/blog&lt;/code&gt;, and &lt;code&gt;/blog/omg&lt;/code&gt; points to application's controller. In such a situation, requests to &lt;code&gt;/blog/omg&lt;/code&gt; will go through &lt;code&gt;MyEngine&lt;/code&gt;, and if there is no such route in &lt;code&gt;Engine&lt;/code&gt;'s routes, it will be dispatched to &lt;code&gt;main#omg&lt;/code&gt;. It's much better to swap that:</source>
          <target state="translated">&lt;code&gt;MyEngine&lt;/code&gt; 은 &lt;code&gt;/blog&lt;/code&gt; 에 마운트 되고 &lt;code&gt;/blog/omg&lt;/code&gt; 는 응용 프로그램의 컨트롤러를 가리 킵니다. 이러한 상황에서 &lt;code&gt;/blog/omg&lt;/code&gt; 에 대한 요청 은 &lt;code&gt;MyEngine&lt;/code&gt; 을 거쳐 &lt;code&gt;Engine&lt;/code&gt; 경로에 해당 경로가 없으면 &lt;code&gt;main#omg&lt;/code&gt; 로 전달됩니다 . 그것을 바꾸는 것이 훨씬 낫습니다.</target>
        </trans-unit>
        <trans-unit id="2014623e2ea4d6d6732733602ff4b6e40173af60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NOT&lt;/code&gt; SQL queries can be built by &lt;code&gt;where.not&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;NOT&lt;/code&gt; . SQL 쿼리는 &lt;code&gt;where.not&lt;/code&gt; 에 의해 빌드 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="063445381afe73c9f001a1ceed01c55fcb3044c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OR&lt;/code&gt; conditions between two relations can be built by calling &lt;code&gt;or&lt;/code&gt; on the first relation, and passing the second one as an argument.</source>
          <target state="translated">&lt;code&gt;OR&lt;/code&gt; 두 관계 간의 OR 조건 은 첫 번째 관계 를 호출 &lt;code&gt;or&lt;/code&gt; 호출 하고 두 번째 관계를 인수로 전달하여 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="511f6d0927bbdcf6e75d9a678cfd4fb5cfcbe26a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OldArticlesController#index&lt;/code&gt; will use the &lt;code&gt;old&lt;/code&gt; layout</source>
          <target state="translated">&lt;code&gt;OldArticlesController#index&lt;/code&gt; 는 &lt;code&gt;old&lt;/code&gt; 레이아웃 을 사용합니다</target>
        </trans-unit>
        <trans-unit id="29d6b00f2f5445690911ca0f0bc5cba648d5b4bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OldArticlesController#show&lt;/code&gt; will use no layout at all</source>
          <target state="translated">&lt;code&gt;OldArticlesController#show&lt;/code&gt; 는 레이아웃을 전혀 사용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="0cd4c0000d8df6d96f8896cc448bd39f85152a27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PUT&lt;/code&gt; requests to &lt;code&gt;/users/:id&lt;/code&gt; in Rails 4 get routed to &lt;code&gt;update&lt;/code&gt; as they are today. So, if you have an API that gets real PUT requests it is going to work. The router also routes &lt;code&gt;PATCH&lt;/code&gt; requests to &lt;code&gt;/users/:id&lt;/code&gt; to the &lt;code&gt;update&lt;/code&gt; action.</source>
          <target state="translated">&lt;code&gt;PUT&lt;/code&gt; Rails 4의 &lt;code&gt;/users/:id&lt;/code&gt; 에 대한 PUT 요청 은 현재와 같이 &lt;code&gt;update&lt;/code&gt; 되도록 라우팅됩니다 . 따라서 실제 PUT 요청을 얻는 API가 있으면 작동합니다. 라우터는 또한 &lt;code&gt;PATCH&lt;/code&gt; 요청을 &lt;code&gt;/users/:id&lt;/code&gt; 로 &lt;code&gt;update&lt;/code&gt; 작업으로 라우팅 합니다.</target>
        </trans-unit>
        <trans-unit id="668f47110adb92c9bfde01160bfbec1b54cdd8ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParameterFilter&lt;/code&gt; allows you to specify keys for sensitive data from hash-like object and replace corresponding value. Filtering only certain sub-keys from a hash is possible by using the dot notation: 'credit_card.number'. If a proc is given, each key and value of a hash and all sub-hashes are passed to it, where the value or the key can be replaced using String#replace or similar methods.</source>
          <target state="translated">&lt;code&gt;ParameterFilter&lt;/code&gt; 를 사용하면 해시와 유사한 객체의 민감한 데이터에 대한 키를 지정하고 해당 값을 바꿀 수 있습니다. 점 표기법 'credit_card.number'를 사용하여 해시에서 특정 하위 키만 필터링 할 수 있습니다. proc이 주어지면 해시와 모든 하위 해시의 각 키와 값이 전달되며 여기에서 String # replace 또는 유사한 메소드를 사용하여 값이나 키를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8aff2a64bd3c0fdc03f3dec620e9244204d4f83d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Post#author&lt;/code&gt; (similar to &lt;code&gt;Author.find(author_id)&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Post#author&lt;/code&gt; ( &lt;code&gt;Author.find(author_id)&lt;/code&gt; 와 유사 )</target>
        </trans-unit>
        <trans-unit id="74067a0f8860e3daa0128749c93400896400ad02" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Post#author=(author)&lt;/code&gt; (similar to &lt;code&gt;post.author_id =
author.id&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Post#author=(author)&lt;/code&gt; ( &lt;code&gt;post.author_id = author.id&lt;/code&gt; 와 유사 )</target>
        </trans-unit>
        <trans-unit id="9e0fae16c3070922b01865854d5f45c1945b1167" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Post#build_author&lt;/code&gt; (similar to &lt;code&gt;post.author =
Author.new&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Post#build_author&lt;/code&gt; ( &lt;code&gt;post.author = Author.new&lt;/code&gt; 와 유사 )</target>
        </trans-unit>
        <trans-unit id="9b384100d6e3f08695f7b7b89ed6386990cd4bc6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Post#create_author!&lt;/code&gt; (similar to &lt;code&gt;post.author =
Author.new; post.author.save!; post.author&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Post#create_author!&lt;/code&gt; ( &lt;code&gt;post.author = Author.new; post.author.save!; post.author&lt;/code&gt; 와 유사 )</target>
        </trans-unit>
        <trans-unit id="d8bc68b3e60f6a277d818280f12912113f8247b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Post#create_author&lt;/code&gt; (similar to &lt;code&gt;post.author = Author.new;
post.author.save; post.author&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;Post#create_author&lt;/code&gt; ( &lt;code&gt;post.author = Author.new; post.author.save; post.author&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="4d98bd383765b9f8ee60d3879fee25b07eca5d61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Post&lt;/code&gt; is not syntax for a class. Rather, &lt;code&gt;Post&lt;/code&gt; is a regular Ruby constant. If all is good, the constant is evaluated to an object that responds to &lt;code&gt;all&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Post&lt;/code&gt; 는 클래스의 구문이 아닙니다. 오히려 &lt;code&gt;Post&lt;/code&gt; 는 일반적인 루비 상수입니다. 모든 것이 좋으면 상수는 &lt;code&gt;all&lt;/code&gt; 에 응답하는 객체로 평가됩니다 .</target>
        </trans-unit>
        <trans-unit id="593629233d27925f8a867a856f03f927acfa76a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proc&lt;/code&gt; - A block that will be executed in the controller's context. Should return any option accepted by &lt;code&gt;redirect_to&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Proc&lt;/code&gt; - 컨트롤러 컨텍스트에서 실행될 블록입니다. &lt;code&gt;redirect_to&lt;/code&gt; 가 승인 한 옵션을 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e379ba7e61b5ce18c0d26d37f5762c33278bf978" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Project#categories.empty?&lt;/code&gt;, &lt;code&gt;Project#categories.size&lt;/code&gt;, &lt;code&gt;Project#categories&lt;/code&gt;, &lt;code&gt;Project#categories&amp;lt;&amp;lt;(category1)&lt;/code&gt;, &lt;code&gt;Project#categories.delete(category1)&lt;/code&gt;, &lt;code&gt;Project#categories.destroy(category1)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Project#categories.empty?&lt;/code&gt; , &lt;code&gt;Project#categories.size&lt;/code&gt; , &lt;code&gt;Project#categories&lt;/code&gt; , &lt;code&gt;Project#categories&amp;lt;&amp;lt;(category1)&lt;/code&gt; , &lt;code&gt;Project#categories.delete(category1)&lt;/code&gt; , &lt;code&gt;Project#categories.destroy(category1)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="19c2716d6f8dba8d643131f327e28f29ffeacf3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Project#milestones.empty?&lt;/code&gt;, &lt;code&gt;Project#milestones.size&lt;/code&gt;, &lt;code&gt;Project#milestones&lt;/code&gt;, &lt;code&gt;Project#milestones&amp;lt;&amp;lt;(milestone)&lt;/code&gt;, &lt;code&gt;Project#milestones.delete(milestone)&lt;/code&gt;, &lt;code&gt;Project#milestones.destroy(milestone)&lt;/code&gt;, &lt;code&gt;Project#milestones.find(milestone_id)&lt;/code&gt;, &lt;code&gt;Project#milestones.build&lt;/code&gt;, &lt;code&gt;Project#milestones.create&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Project#milestones.empty?&lt;/code&gt; , &lt;code&gt;Project#milestones.size&lt;/code&gt; , &lt;code&gt;Project#milestones&lt;/code&gt; , &lt;code&gt;Project#milestones&amp;lt;&amp;lt;(milestone)&lt;/code&gt; , &lt;code&gt;Project#milestones.delete(milestone)&lt;/code&gt; , &lt;code&gt;Project#milestones.destroy(milestone)&lt;/code&gt; , &lt;code&gt;Project#milestones.find(milestone_id)&lt;/code&gt; , &lt;code&gt;Project#milestones.build&lt;/code&gt; , &lt;code&gt;Project#milestones.create&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="91b6894576eecf870182630bd471fe7bb21a9042" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Project#portfolio&lt;/code&gt;, &lt;code&gt;Project#portfolio=(portfolio)&lt;/code&gt;, &lt;code&gt;Project#reload_portfolio&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Project#portfolio&lt;/code&gt; &lt;code&gt;Project#reload_portfolio&lt;/code&gt; , &lt;code&gt;Project#portfolio=(portfolio)&lt;/code&gt; , 프로젝트 #reload_portfolio</target>
        </trans-unit>
        <trans-unit id="eea9c95d2ca7a9028f5821afaf8fb6ba67d233a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Project#project_manager&lt;/code&gt;, &lt;code&gt;Project#project_manager=(project_manager)&lt;/code&gt;, &lt;code&gt;Project#reload_project_manager&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Project#project_manager&lt;/code&gt; , &lt;code&gt;Project#project_manager=(project_manager)&lt;/code&gt; , &lt;code&gt;Project#reload_project_manager&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c07087b3caa5e48518f368486f4f59731e470d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rack::Head&lt;/code&gt; converts HEAD requests to GET requests and serves them as so.</source>
          <target state="translated">&lt;code&gt;Rack::Head&lt;/code&gt; 는 HEAD 요청을 GET 요청으로 변환하여 그대로 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cdde0881037d9ad7b34c941aee33187f86aaefec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rack::MethodOverride&lt;/code&gt; allows the method to be overridden if &lt;code&gt;params[:_method]&lt;/code&gt; is set. This is the middleware which supports the PATCH, PUT, and DELETE HTTP method types.</source>
          <target state="translated">&lt;code&gt;Rack::MethodOverride&lt;/code&gt; &lt;code&gt;params[:_method]&lt;/code&gt; 가 설정된 경우 Rack :: MethodOverride를 사용하여 메소드를 대체 할 수 있습니다 . PATCH, PUT 및 DELETE HTTP 메소드 유형을 지원하는 미들웨어입니다.</target>
        </trans-unit>
        <trans-unit id="c96710460480c632d444eff2f22a01db62ad2a0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rack::Runtime&lt;/code&gt; sets an &lt;code&gt;X-Runtime&lt;/code&gt; header, containing the time (in seconds) taken to execute the request.</source>
          <target state="translated">&lt;code&gt;Rack::Runtime&lt;/code&gt; 은 요청을 실행하는 데 걸리는 시간 (초)을 포함 하는 &lt;code&gt;X-Runtime&lt;/code&gt; 헤더를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="93141ed06af873a7adf46039ab1d5cff67a827f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rack::Sendfile&lt;/code&gt; intercepts responses whose body is being served from a file and replaces it with a server specific X-Sendfile header. Configurable with &lt;code&gt;config.action_dispatch.x_sendfile_header&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Rack::Sendfile&lt;/code&gt; 은 파일에서 본문을 제공하는 응답을 가로 채 서버 전용 X-Sendfile 헤더로 바꿉니다. &lt;code&gt;config.action_dispatch.x_sendfile_header&lt;/code&gt; 로 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f12713f1fc60742e469bccaae0ea8fa0fba0fe7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rack::Server&lt;/code&gt; is responsible for providing a common server interface for all Rack-based applications, which Rails is now a part of.</source>
          <target state="translated">&lt;code&gt;Rack::Server&lt;/code&gt; 는 Rails의 일부인 모든 Rack 기반 응용 프로그램에 공통 서버 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f1c87e84594e2f11698ad217ea0d946763ba8a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rails.application.credentials.some_api_key&lt;/code&gt; returns &lt;code&gt;SOMEKEY&lt;/code&gt; in any environment.</source>
          <target state="translated">&lt;code&gt;Rails.application.credentials.some_api_key&lt;/code&gt; 의 반환 &lt;code&gt;SOMEKEY&lt;/code&gt; 어떤 환경에서.</target>
        </trans-unit>
        <trans-unit id="af20ebe5ca874656a13070723191505f8fb15a78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rails.application.secrets.namespace&lt;/code&gt; returns &lt;code&gt;my_app_production&lt;/code&gt; in the production environment.</source>
          <target state="translated">&lt;code&gt;Rails.application.secrets.namespace&lt;/code&gt; 의 반환 &lt;code&gt;my_app_production&lt;/code&gt; 생산 환경에서.</target>
        </trans-unit>
        <trans-unit id="643a29d4189b6a1ad5223c8e7038c9b212120dd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rails.application&lt;/code&gt; is the primary Rack application object of a Rails application. Any Rack compliant web server should be using &lt;code&gt;Rails.application&lt;/code&gt; object to serve a Rails application.</source>
          <target state="translated">&lt;code&gt;Rails.application&lt;/code&gt; 은 Rails 애플리케이션의 기본 랙 애플리케이션 객체입니다. 모든 랙 호환 웹 서버는 &lt;code&gt;Rails.application&lt;/code&gt; 객체를 사용하여 Rails 애플리케이션을 제공 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ec97c60b087fc5e40219a88564318fb2add0e493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rails::Engine&lt;/code&gt; allows you to wrap a specific Rails application or subset of functionality and share it with other applications or within a larger packaged application. Every &lt;code&gt;Rails::Application&lt;/code&gt; is just an engine, which allows for simple feature and application sharing.</source>
          <target state="translated">&lt;code&gt;Rails::Engine&lt;/code&gt; 사용하면 특정 Rails 애플리케이션 또는 기능의 하위 세트를 랩핑하여 다른 애플리케이션 또는 더 큰 패키지 애플리케이션 내에서 공유 할 수 있습니다. 모든 &lt;code&gt;Rails::Application&lt;/code&gt; 은 엔진 일 뿐이 므로 간단한 기능 및 응용 프로그램 공유가 가능합니다.</target>
        </trans-unit>
        <trans-unit id="c3c3aac1a30294d2c6e5b8c6cd8f4d17c7f8d278" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rails::Rack::Logger&lt;/code&gt; notifies the logs that the request has begun. After request is complete, flushes all the logs.</source>
          <target state="translated">&lt;code&gt;Rails::Rack::Logger&lt;/code&gt; 는 요청이 시작되었음을 로그에 알립니다. 요청이 완료되면 모든 로그를 비 웁니다.</target>
        </trans-unit>
        <trans-unit id="f003fddb487c4b0e92c1f4388dfa94a5820465e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rails::Railtie&lt;/code&gt; is the core of the Rails framework and provides several hooks to extend Rails and/or modify the initialization process.</source>
          <target state="translated">&lt;code&gt;Rails::Railtie&lt;/code&gt; 는 Rails 프레임 워크의 핵심이며 Rails를 확장하거나 초기화 프로세스를 수정하기위한 몇 가지 후크를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dcc659652f56c1b44e50da2ae6c2cfbeffeee34f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Record&lt;/code&gt; - The URL will be generated by calling url_for with the &lt;code&gt;options&lt;/code&gt;, which will reference a named URL for that record.</source>
          <target state="translated">&lt;code&gt;Record&lt;/code&gt; - 해당 레코드의 이름이 지정된 URL을 참조하는 &lt;code&gt;options&lt;/code&gt; 과 함께 url_for를 호출하여 URL이 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="783e56188ba5f22ec13e6d26e0c7156352a68608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rectangle.all&lt;/code&gt; only loads rectangles by adding a type constraint to the query:</source>
          <target state="translated">&lt;code&gt;Rectangle.all&lt;/code&gt; 은 쿼리에 형식 제약 조건을 추가하여 사각형 만로드합니다.</target>
        </trans-unit>
        <trans-unit id="ee7ec910323d925c8ed71896fec2f482aef95ed2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rectangle.all&lt;/code&gt; should now return rectangles &lt;strong&gt;and&lt;/strong&gt; squares:</source>
          <target state="translated">&lt;code&gt;Rectangle.all&lt;/code&gt; 은 이제 사각형 &lt;strong&gt;과&lt;/strong&gt; 사각형을 반환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6b9ed6bb67543af711bbfe1ee0509416991509f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Relation&lt;/code&gt; no longer has mutator methods like &lt;code&gt;#map!&lt;/code&gt; and &lt;code&gt;#delete_if&lt;/code&gt;. Convert to an &lt;code&gt;Array&lt;/code&gt; by calling &lt;code&gt;#to_a&lt;/code&gt; before using these methods.</source>
          <target state="translated">&lt;code&gt;Relation&lt;/code&gt; 더 이상 &lt;code&gt;#map!&lt;/code&gt; 과 같은 뮤 테이터 메소드가 없습니다 ! 및 &lt;code&gt;#delete_if&lt;/code&gt; . 이 메소드를 사용하기 전에 &lt;code&gt;#to_a&lt;/code&gt; 를 호출 하여 &lt;code&gt;Array&lt;/code&gt; 로 변환하십시오 .</target>
        </trans-unit>
        <trans-unit id="16aa35eb469d7d47de364cd17304aa77295d5c9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S3&lt;/code&gt;, to manage attachments through Amazon S3.</source>
          <target state="translated">&lt;code&gt;S3&lt;/code&gt; 는 아마존 S3를 통해 첨부 파일을 관리 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="604d3cf2d599711201155261107ab36d9e02a1ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecureRandom::base58&lt;/code&gt; is used to generate the 24-character unique token, so collisions are highly unlikely.</source>
          <target state="translated">&lt;code&gt;SecureRandom::base58&lt;/code&gt; 은 24 자 고유 토큰을 생성하는 데 사용되므로 충돌 가능성이 거의 없습니다.</target>
        </trans-unit>
        <trans-unit id="6d601b9d137cb5ef8e0c0af4e9f7fb64a1d2d34f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Set&lt;/code&gt; - A set of all methods that should be considered actions.</source>
          <target state="translated">&lt;code&gt;Set&lt;/code&gt; -조치로 간주되어야하는 모든 메소드 세트입니다.</target>
        </trans-unit>
        <trans-unit id="8cdd53e5b04cffd25b2e9c3a57334e13434f7cf4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SpecialArticlesController#index&lt;/code&gt; will use the &lt;code&gt;special&lt;/code&gt; layout</source>
          <target state="translated">&lt;code&gt;SpecialArticlesController#index&lt;/code&gt; 는 &lt;code&gt;special&lt;/code&gt; 레이아웃 을 사용합니다</target>
        </trans-unit>
        <trans-unit id="78ab34acf6694769cc99adb985d6087f1bdd770a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; is an ordinary constant, and everything related to them such as resolution algorithms applies to it.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 은 일반적인 상수이며 해상도 알고리즘과 관련하여 모든 것이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="3486ec1ddcdf3f611c3ca2d7c62e3f559d77ddd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; not containing a protocol - The current protocol and host is prepended to the string.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 프로토콜을 포함하지 않는 문자열 -현재 프로토콜과 호스트 앞에 문자열이 붙습니다.</target>
        </trans-unit>
        <trans-unit id="808aec53a38a62b356fd738856562434c777e3b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; starting with &lt;code&gt;protocol://&lt;/code&gt; (like &lt;code&gt;http://&lt;/code&gt;) or a protocol relative reference (like &lt;code&gt;//&lt;/code&gt;) - Is passed straight through as the target for redirection.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; &lt;code&gt;protocol://&lt;/code&gt; ( &lt;code&gt;http://&lt;/code&gt; 와 같은 ) 또는 프로토콜 상대 참조 ( &lt;code&gt;//&lt;/code&gt; 와 같은)로 시작하는 문자열 -리디렉션 대상으로 바로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="31690a8eeddb5f2bcda9c9e24d8782aa62ceacf5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Time&lt;/code&gt; understands DST, so you get correct DST calculations as in</source>
          <target state="translated">&lt;code&gt;Time&lt;/code&gt; 은 DST를 이해하므로 다음과 같이 올바른 DST 계산을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="17ce4b5cdf786f613a2d01509b3a18fa651e9feb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Triangle.create&lt;/code&gt; creates a row that represents a triangle, and &lt;code&gt;Rectangle.create&lt;/code&gt; creates a row that represents a rectangle. If &lt;code&gt;id&lt;/code&gt; is the ID of an existing record, &lt;code&gt;Polygon.find(id)&lt;/code&gt; returns an object of the correct type.</source>
          <target state="translated">&lt;code&gt;Triangle.create&lt;/code&gt; 는 삼각형 을 나타내는 행을 만들고 &lt;code&gt;Rectangle.create&lt;/code&gt; 는 사각형을 나타내는 행을 만듭니다. 경우 &lt;code&gt;id&lt;/code&gt; 기존 레코드의 ID이며, &lt;code&gt;Polygon.find(id)&lt;/code&gt; 올바른 형식의 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="41b9756248518629d68b26e56a8692db05c07c31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;View#render(option)&lt;/code&gt; &amp;mdash; Returns &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; with the rendered template.</source>
          <target state="translated">&lt;code&gt;View#render(option)&lt;/code&gt; &amp;mdash; 렌더링 된 템플릿이있는 &lt;a href=&quot;../string&quot;&gt;문자열&lt;/a&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="ee72652a1d5dd52a04a5b0fa8c9cdfe5555e3386" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;View.new(lookup_context, assigns, controller)&lt;/code&gt; &amp;mdash; Create a new &lt;a href=&quot;../actionview&quot;&gt;ActionView&lt;/a&gt; instance for a controller and we can also pass the arguments.</source>
          <target state="translated">&lt;code&gt;View.new(lookup_context, assigns, controller)&lt;/code&gt; &amp;mdash; 컨트롤러에 대한 새로운 &lt;a href=&quot;../actionview&quot;&gt;ActionView&lt;/a&gt; 인스턴스를 만들고 인수를 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a351b1c64ef938437e94a1ded6cd9a0924ed346a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XML&lt;/code&gt; does not belong to it.</source>
          <target state="translated">&lt;code&gt;XML&lt;/code&gt; 이 속하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="81e8bd8ddf1d7b98393d5a9c0dc87d2e0fe48705" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;acronym&lt;/code&gt; may be used to specify any word that contains an acronym or otherwise needs to maintain a non-standard capitalization. The only restriction is that the word must begin with a capital letter.</source>
          <target state="translated">&lt;code&gt;acronym&lt;/code&gt; 는 약어 를 포함하거나 비표준 대문자를 유지해야하는 단어를 지정하는 데 사용될 수 있습니다. 유일한 제한은 단어가 대문자로 시작해야한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0c781d692e82802b0482c952f528f56d4d333c71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action&lt;/code&gt;: The controller action to call.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; : 호출 할 컨트롤러 조치.</target>
        </trans-unit>
        <trans-unit id="553b214c70a0752b1bca32d811d36c75463dc3f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action_controller.assets_config&lt;/code&gt;: Initializes the &lt;code&gt;config.actions_controller.assets_dir&lt;/code&gt; to the app's public directory if not explicitly configured.</source>
          <target state="translated">&lt;code&gt;action_controller.assets_config&lt;/code&gt; : 명시 적으로 구성되지 않은 경우 &lt;code&gt;config.actions_controller.assets_dir&lt;/code&gt; 을 앱의 공용 디렉토리로 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="e69f46e3c6165cd7c816a8419415bbf02beb2625" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action_controller.compile_config_methods&lt;/code&gt;: Initializes methods for the config settings specified so that they are quicker to access.</source>
          <target state="translated">&lt;code&gt;action_controller.compile_config_methods&lt;/code&gt; : 더 빠르게 액세스 할 수 있도록 지정된 구성 설정에 대한 메소드를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="cdea99f1b140c070501f246f2728fb4517bc10c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action_controller.parameters_config&lt;/code&gt;: Configures strong parameters options for &lt;code&gt;ActionController::Parameters&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;action_controller.parameters_config&lt;/code&gt; : &lt;code&gt;ActionController::Parameters&lt;/code&gt; 대한 강력한 매개 변수 옵션을 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="71ccff5388e9b57e7cbcb012cf182e549a4e9dd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action_controller.set_configs&lt;/code&gt;: Sets up Action Controller by using the settings in &lt;code&gt;config.action_controller&lt;/code&gt; by &lt;code&gt;send&lt;/code&gt;'ing the method names as setters to &lt;code&gt;ActionController::Base&lt;/code&gt; and passing the values through.</source>
          <target state="translated">&lt;code&gt;action_controller.set_configs&lt;/code&gt; :의 설정을 사용하여 액션 컨트롤러 설정 &lt;code&gt;config.action_controller&lt;/code&gt; 에 의해 &lt;code&gt;send&lt;/code&gt; '에 세터와 같은 방법 이름 보내고 &lt;code&gt;ActionController::Base&lt;/code&gt; 하고를 통해 값을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="c9e511f914d9d08bf1f4a147d2baa1eaba9876a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action_controller.set_helpers_path&lt;/code&gt;: Sets Action Controller's &lt;code&gt;helpers_path&lt;/code&gt; to the application's &lt;code&gt;helpers_path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;action_controller.set_helpers_path&lt;/code&gt; : Action Controller의 &lt;code&gt;helpers_path&lt;/code&gt; 를 애플리케이션의 &lt;code&gt;helpers_path&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="7343eb429f543b99f28e6769a7ece887f435f503" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action_dispatch.configure&lt;/code&gt;: Configures the &lt;code&gt;ActionDispatch::Http::URL.tld_length&lt;/code&gt; to be set to the value of &lt;code&gt;config.action_dispatch.tld_length&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;action_dispatch.configure&lt;/code&gt; : &lt;code&gt;ActionDispatch::Http::URL.tld_length&lt;/code&gt; 가 &lt;code&gt;config.action_dispatch.tld_length&lt;/code&gt; 값으로 설정되도록 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="a3e55c22a9aa5f571f7f17f41149a3a7158252cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action_dispatch.use_authenticated_cookie_encryption&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;action_dispatch.use_authenticated_cookie_encryption&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f5e3ea16b576a772b66e841f90bdc004f96951bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action_mailer.compile_config_methods&lt;/code&gt;: Initializes methods for the config settings specified so that they are quicker to access.</source>
          <target state="translated">&lt;code&gt;action_mailer.compile_config_methods&lt;/code&gt; : 더 빨리 액세스 할 수 있도록 지정된 구성 설정에 대한 메소드를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="91902ab2153cb5b32f8a1fd84eb3bbd4b3482759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action_mailer.logger&lt;/code&gt;: Sets &lt;code&gt;ActionMailer::Base.logger&lt;/code&gt; - if it's not already set - to &lt;code&gt;Rails.logger&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;action_mailer.logger&lt;/code&gt; : &lt;code&gt;ActionMailer::Base.logger&lt;/code&gt; 아직 설정되지 않은 경우)를 &lt;code&gt;Rails.logger&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="dfde0bf6f7b68d82a35b70fb54d1a59cd1a662c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action_mailer.set_configs&lt;/code&gt;: Sets up Action Mailer by using the settings in &lt;code&gt;config.action_mailer&lt;/code&gt; by &lt;code&gt;send&lt;/code&gt;'ing the method names as setters to &lt;code&gt;ActionMailer::Base&lt;/code&gt; and passing the values through.</source>
          <target state="translated">&lt;code&gt;action_mailer.set_configs&lt;/code&gt; :의 설정을 사용하여 액션 메일러 설정 &lt;code&gt;config.action_mailer&lt;/code&gt; 에 의해 &lt;code&gt;send&lt;/code&gt; '에 세터와 같은 방법 이름 보내고 &lt;code&gt;ActionMailer::Base&lt;/code&gt; 와를 통해 값을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="53bb16312502ef6f06a46d14eab123f35388ca4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action_name&lt;/code&gt; - The name of an action to be tested</source>
          <target state="translated">&lt;code&gt;action_name&lt;/code&gt; - 테스트 할 조치의 이름</target>
        </trans-unit>
        <trans-unit id="068a3dc8ff2f64ba97ac8da64c3e30a8142bcc62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action_on_unpermitted_parameters&lt;/code&gt; - Allow to control the behavior when parameters that are not explicitly permitted are found. The values can be &lt;code&gt;false&lt;/code&gt; to just filter them out, &lt;code&gt;:log&lt;/code&gt; to additionally write a message on the logger, or &lt;code&gt;:raise&lt;/code&gt; to raise &lt;a href=&quot;unpermittedparameters&quot;&gt;ActionController::UnpermittedParameters&lt;/a&gt; exception. The default value is &lt;code&gt;:log&lt;/code&gt; in test and development environments, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;action_on_unpermitted_parameters&lt;/code&gt; - 명시 적으로 허용되지 않은 매개 변수가 발견 될 때 동작을 제어 할 수 있습니다. 값을 필터링하기 위해 값을 &lt;code&gt;false&lt;/code&gt; 로 설정 하거나, 로거에 메시지를 추가로 작성하려면 &lt;code&gt;:log&lt;/code&gt; 또는 &lt;a href=&quot;unpermittedparameters&quot;&gt;ActionController :: UnpermittedParameters&lt;/a&gt; 예외를 발생 시키려면 &lt;code&gt;:raise&lt;/code&gt; 를 사용하십시오 . 기본값은 테스트 및 개발 환경에서 &lt;code&gt;:log&lt;/code&gt; 이고 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4e29e1b05f0474fa561b0cd19cf96dcee0cf9246" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;action_view.set_configs&lt;/code&gt;: Sets up Action View by using the settings in &lt;code&gt;config.action_view&lt;/code&gt; by &lt;code&gt;send&lt;/code&gt;'ing the method names as setters to &lt;code&gt;ActionView::Base&lt;/code&gt; and passing the values through.</source>
          <target state="translated">&lt;code&gt;action_view.set_configs&lt;/code&gt; :의 설정을 사용하여 액션보기 설정 &lt;code&gt;config.action_view&lt;/code&gt; 에 의해 &lt;code&gt;send&lt;/code&gt; '에 세터와 같은 방법 이름 보내고 &lt;code&gt;ActionView::Base&lt;/code&gt; 와를 통해 값을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="fac18598fb11f2945ee23c6b3e877f4815cda7ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_job.logger&lt;/code&gt;: Sets &lt;code&gt;ActiveJob::Base.logger&lt;/code&gt; - if it's not already set - to &lt;code&gt;Rails.logger&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;active_job.logger&lt;/code&gt; : &lt;code&gt;ActiveJob::Base.logger&lt;/code&gt; 아직 설정되지 않은 경우)를 &lt;code&gt;Rails.logger&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="e6366fe4f9b532ff96606bcedaa9d815e1e570d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_job.set_configs&lt;/code&gt;: Sets up Active Job by using the settings in &lt;code&gt;config.active_job&lt;/code&gt; by &lt;code&gt;send&lt;/code&gt;'ing the method names as setters to &lt;code&gt;ActiveJob::Base&lt;/code&gt; and passing the values through.</source>
          <target state="translated">&lt;code&gt;active_job.set_configs&lt;/code&gt; : 활성 작업까지 세트의 설정을 사용하여 &lt;code&gt;config.active_job&lt;/code&gt; 에 의해 &lt;code&gt;send&lt;/code&gt; '에 세터와 같은 방법 이름 보내고 &lt;code&gt;ActiveJob::Base&lt;/code&gt; 와를 통해 값을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="604a273f7216c669fc747b6e1f0ef4bcb9577b2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_record.add_watchable_files&lt;/code&gt;: Adds &lt;code&gt;schema.rb&lt;/code&gt; and &lt;code&gt;structure.sql&lt;/code&gt; files to watchable files.</source>
          <target state="translated">&lt;code&gt;active_record.add_watchable_files&lt;/code&gt; : 감시 가능한 파일에 &lt;code&gt;schema.rb&lt;/code&gt; 및 &lt;code&gt;structure.sql&lt;/code&gt; 파일을 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="0721f799354e7d0437d4d5f194a1a91f49a17328" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_record.check_schema_cache_dump&lt;/code&gt;: Loads the schema cache dump if configured and available.</source>
          <target state="translated">&lt;code&gt;active_record.check_schema_cache_dump&lt;/code&gt; : 구성되어 사용 가능한 경우 스키마 캐시 덤프를로드합니다.</target>
        </trans-unit>
        <trans-unit id="cfe56b6583168a98a0e88ec600fa2f6b5e09b937" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_record.initialize_database&lt;/code&gt;: Loads the database configuration (by default) from &lt;code&gt;config/database.yml&lt;/code&gt; and establishes a connection for the current environment.</source>
          <target state="translated">&lt;code&gt;active_record.initialize_database&lt;/code&gt; : &lt;code&gt;config/database.yml&lt;/code&gt; 에서 데이터베이스 구성 (기본적으로)을로드 하고 현재 환경에 대한 연결을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e0b3a91200a527aa2c1fe31ab3c5ab0573445c9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_record.initialize_timezone&lt;/code&gt;: Sets &lt;code&gt;ActiveRecord::Base.time_zone_aware_attributes&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, as well as setting &lt;code&gt;ActiveRecord::Base.default_timezone&lt;/code&gt; to UTC. When attributes are read from the database, they will be converted into the time zone specified by &lt;code&gt;Time.zone&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;active_record.initialize_timezone&lt;/code&gt; : &lt;code&gt;ActiveRecord::Base.time_zone_aware_attributes&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정하고 &lt;code&gt;ActiveRecord::Base.default_timezone&lt;/code&gt; 을 UTC 로 설정합니다 . 데이터베이스에서 속성을 읽으면 &lt;code&gt;Time.zone&lt;/code&gt; 에 의해 지정된 시간대로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="2bb805750ee4d722c9f1cb71caea00d3d7172459" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_record.log_runtime&lt;/code&gt;: Includes &lt;code&gt;ActiveRecord::Railties::ControllerRuntime&lt;/code&gt; which is responsible for reporting the time taken by Active Record calls for the request back to the logger.</source>
          <target state="translated">&lt;code&gt;active_record.log_runtime&lt;/code&gt; : &lt;code&gt;ActiveRecord::Railties::ControllerRuntime&lt;/code&gt; 을 포함 하여 요청에 대한 Active Record 호출에 소요 된 시간을 로거에 다시보고합니다.</target>
        </trans-unit>
        <trans-unit id="deb36f523c5de3a3874db2990b2744ad178f2d33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_record.logger&lt;/code&gt;: Sets &lt;code&gt;ActiveRecord::Base.logger&lt;/code&gt; - if it's not already set - to &lt;code&gt;Rails.logger&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;active_record.logger&lt;/code&gt; : &lt;code&gt;ActiveRecord::Base.logger&lt;/code&gt; 아직 설정되지 않은 경우)를 &lt;code&gt;Rails.logger&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="71f56dd93ec8c48a18429bfe108ef8a11983fc5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_record.migration_error&lt;/code&gt;: Configures middleware to check for pending migrations.</source>
          <target state="translated">&lt;code&gt;active_record.migration_error&lt;/code&gt; : 미들웨어가 보류중인 마이그레이션을 확인하도록 구성합니다.</target>
        </trans-unit>
        <trans-unit id="039362bab897bb531305c60c59d4ab9cb4764a8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_record.set_configs&lt;/code&gt;: Sets up Active Record by using the settings in &lt;code&gt;config.active_record&lt;/code&gt; by &lt;code&gt;send&lt;/code&gt;'ing the method names as setters to &lt;code&gt;ActiveRecord::Base&lt;/code&gt; and passing the values through.</source>
          <target state="translated">&lt;code&gt;active_record.set_configs&lt;/code&gt; :의 설정을 사용하여 액티브 레코드 설정 &lt;code&gt;config.active_record&lt;/code&gt; 에 의해 &lt;code&gt;send&lt;/code&gt; '에 세터와 같은 방법 이름 보내고 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 와를 통해 값을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="d50821e7aabea5b17b7bacfcc0c6b724a26a8c06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_record.set_reloader_hooks&lt;/code&gt;: Resets all reloadable connections to the database if &lt;code&gt;config.cache_classes&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;active_record.set_reloader_hooks&lt;/code&gt; : &lt;code&gt;config.cache_classes&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 로 설정된 경우 데이터베이스에 대한 모든 다시로드 가능한 연결을 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="19809748aab9501771ac3d5f6bdb9c037cd78a23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_record.warn_on_records_fetched_greater_than&lt;/code&gt;: Enables warnings when queries return large numbers of records.</source>
          <target state="translated">&lt;code&gt;active_record.warn_on_records_fetched_greater_than&lt;/code&gt; : 쿼리가 많은 수의 레코드를 반환 할 때 경고를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="e88ca387100b480cda5507e09c5cfc05c93c807b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_storage_attachments&lt;/code&gt; is a polymorphic join table that stores your model's class name. If your model's class name changes, you will need to run a migration on this table to update the underlying &lt;code&gt;record_type&lt;/code&gt; to your model's new class name.</source>
          <target state="translated">&lt;code&gt;active_storage_attachments&lt;/code&gt; 는 모델의 클래스 이름을 저장하는 다형성 조인 테이블입니다. 모델의 클래스 이름이 변경되면이 테이블에서 마이그레이션을 실행하여 기본 &lt;code&gt;record_type&lt;/code&gt; 을 모델의 새 클래스 이름 으로 업데이트 해야합니다.</target>
        </trans-unit>
        <trans-unit id="9164e5d5603dc2719489cf4344f2921af4b84869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_support.deprecation_behavior&lt;/code&gt;: Sets up deprecation reporting for environments, defaulting to &lt;code&gt;:log&lt;/code&gt; for development, &lt;code&gt;:notify&lt;/code&gt; for production, and &lt;code&gt;:stderr&lt;/code&gt; for test. If a value isn't set for &lt;code&gt;config.active_support.deprecation&lt;/code&gt; then this initializer will prompt the user to configure this line in the current environment's &lt;code&gt;config/environments&lt;/code&gt; file. Can be set to an array of values.</source>
          <target state="translated">&lt;code&gt;active_support.deprecation_behavior&lt;/code&gt; : 환경에 대한 지원 중단보고를 설정합니다. 기본값 은 개발 용 &lt;code&gt;:log&lt;/code&gt; , 생산 용 &lt;code&gt;:notify&lt;/code&gt; 및 테스트 용 &lt;code&gt;:stderr&lt;/code&gt; 입니다. &lt;code&gt;config.active_support.deprecation&lt;/code&gt; 에 값을 설정하지 않으면 이 초기화 프로그램은 사용자에게 현재 환경의 &lt;code&gt;config/environments&lt;/code&gt; 파일 에서이 줄을 구성하라는 메시지를 표시 합니다. 값의 배열로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb791131ba8df8b7990656e477602b0ff8eec06f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_support.initialize_beginning_of_week&lt;/code&gt;: Sets the default beginning of week for the application based on &lt;code&gt;config.beginning_of_week&lt;/code&gt; setting, which defaults to &lt;code&gt;:monday&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;active_support.initialize_beginning_of_week&lt;/code&gt; : &lt;code&gt;config.beginning_of_week&lt;/code&gt; 설정을 기반으로 애플리케이션의 기본 시작 시간을 설정합니다 (기본값 &lt;code&gt;:monday&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b99547dda5af420c0dbe9f8e4900b4397dba789" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_support.initialize_time_zone&lt;/code&gt;: Sets the default time zone for the application based on the &lt;code&gt;config.time_zone&lt;/code&gt; setting, which defaults to &quot;UTC&quot;.</source>
          <target state="translated">&lt;code&gt;active_support.initialize_time_zone&lt;/code&gt; : &lt;code&gt;config.time_zone&lt;/code&gt; 설정 에 따라 응용 프로그램의 기본 시간대를 설정합니다. 기본값은 &quot;UTC&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="8f29e0ac878dd2552c17692c9240ff9aa3e2ea9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;active_support.set_configs&lt;/code&gt;: Sets up Active Support by using the settings in &lt;code&gt;config.active_support&lt;/code&gt; by &lt;code&gt;send&lt;/code&gt;'ing the method names as setters to &lt;code&gt;ActiveSupport&lt;/code&gt; and passing the values through.</source>
          <target state="translated">&lt;code&gt;active_support.set_configs&lt;/code&gt; :의 설정을 사용하여 활동 지원 설정 &lt;code&gt;config.active_support&lt;/code&gt; 에 의해 &lt;code&gt;send&lt;/code&gt; '에 세터와 같은 방법 이름 보내고 &lt;code&gt;ActiveSupport&lt;/code&gt; 를 하고를 통해 값을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="4e453c2e6df8390269d968ffbfd25152f72dbfb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_builtin_route&lt;/code&gt;: If the application is running under the development environment then this will append the route for &lt;code&gt;rails/info/properties&lt;/code&gt; to the application routes. This route provides the detailed information such as Rails and Ruby version for &lt;code&gt;public/index.html&lt;/code&gt; in a default Rails application.</source>
          <target state="translated">&lt;code&gt;add_builtin_route&lt;/code&gt; : 애플리케이션이 개발 환경에서 실행중인 경우 애플리케이션 경로에 &lt;code&gt;rails/info/properties&lt;/code&gt; 경로가 추가됩니다 . 이 경로는 기본 Rails 애플리케이션의 &lt;code&gt;public/index.html&lt;/code&gt; 에 대한 Rails 및 Ruby 버전과 같은 자세한 정보를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="7339bc29673004c9a6b1e3201b3cd15c61b736a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_column(table_name, column_name, type, options)&lt;/code&gt;: Adds a new column to the table called &lt;code&gt;table_name&lt;/code&gt; named &lt;code&gt;column_name&lt;/code&gt; specified to be one of the following types: &lt;code&gt;:string&lt;/code&gt;, &lt;code&gt;:text&lt;/code&gt;, &lt;code&gt;:integer&lt;/code&gt;, &lt;code&gt;:float&lt;/code&gt;, &lt;code&gt;:decimal&lt;/code&gt;, &lt;code&gt;:datetime&lt;/code&gt;, &lt;code&gt;:timestamp&lt;/code&gt;, &lt;code&gt;:time&lt;/code&gt;, &lt;code&gt;:date&lt;/code&gt;, &lt;code&gt;:binary&lt;/code&gt;, &lt;code&gt;:boolean&lt;/code&gt;. A default value can be specified by passing an &lt;code&gt;options&lt;/code&gt; hash like &lt;code&gt;{ default: 11
}&lt;/code&gt;. Other options include &lt;code&gt;:limit&lt;/code&gt; and &lt;code&gt;:null&lt;/code&gt; (e.g. &lt;code&gt;{ limit: 50, null: false }&lt;/code&gt;) &amp;ndash; see &lt;a href=&quot;connectionadapters/tabledefinition#method-i-column&quot;&gt;ActiveRecord::ConnectionAdapters::TableDefinition#column&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;add_column(table_name, column_name, type, options)&lt;/code&gt; : &lt;code&gt;:string&lt;/code&gt; , &lt;code&gt;:text&lt;/code&gt; , &lt;code&gt;:integer&lt;/code&gt; , &lt;code&gt;:float&lt;/code&gt; , &lt;code&gt;:decimal&lt;/code&gt; , &lt;code&gt;:datetime&lt;/code&gt; , &lt;code&gt;:timestamp&lt;/code&gt; 중 하나로 지정된 &lt;code&gt;table_name&lt;/code&gt; 이라는 &lt;code&gt;column_name&lt;/code&gt; 이라는 테이블에 새 열을 추가합니다 . 타임 스탬프 , &lt;code&gt;:time&lt;/code&gt; , &lt;code&gt;:date&lt;/code&gt; , &lt;code&gt;:binary&lt;/code&gt; , &lt;code&gt;:boolean&lt;/code&gt; . &lt;code&gt;{ default: 11 }&lt;/code&gt; 과 같은 &lt;code&gt;options&lt;/code&gt; 해시 를 전달하여 기본값을 지정할 수 있습니다 . 다른 옵션으로는 &lt;code&gt;:limit&lt;/code&gt; 및 &lt;code&gt;:null&lt;/code&gt; (예 : &lt;code&gt;{ limit: 50, null: false }&lt;/code&gt; ) &amp;ndash; 자세한 내용은 &lt;a href=&quot;connectionadapters/tabledefinition#method-i-column&quot;&gt;ActiveRecord :: ConnectionAdapters :: TableDefinition # column&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a14cd14b5d62c6234c257e67e4b689a558eb1841" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_foreign_key(from_table, to_table, options)&lt;/code&gt;: Adds a new foreign key. &lt;code&gt;from_table&lt;/code&gt; is the table with the key column, &lt;code&gt;to_table&lt;/code&gt; contains the referenced primary key.</source>
          <target state="translated">&lt;code&gt;add_foreign_key(from_table, to_table, options)&lt;/code&gt; : 새 외래 키를 추가합니다. &lt;code&gt;from_table&lt;/code&gt; 은 키 열이있는 테이블이고 &lt;code&gt;to_table&lt;/code&gt; 은 참조 된 기본 키를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="317f2f87f3f6b487e9ad9c46c6da166f24c916f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_generator_templates&lt;/code&gt;: Finds templates for generators at &lt;code&gt;lib/templates&lt;/code&gt; for the application, railties, and engines and adds these to the &lt;code&gt;config.generators.templates&lt;/code&gt; setting, which will make the templates available for all generators to reference.</source>
          <target state="translated">&lt;code&gt;add_generator_templates&lt;/code&gt; : &lt;code&gt;lib/templates&lt;/code&gt; 에서 응용 프로그램, 레일 및 엔진에 대한 생성 기용 템플릿 을 찾아 &lt;code&gt;config.generators.templates&lt;/code&gt; 설정에 추가 하여 모든 생성기에서 참조 할 수있는 템플릿을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="feac0d99a3678fecd1a54c3204bdc98f7c4de12a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_index(table_name, column_names, options)&lt;/code&gt;: Adds a new index with the name of the column. Other options include &lt;code&gt;:name&lt;/code&gt;, &lt;code&gt;:unique&lt;/code&gt; (e.g. &lt;code&gt;{ name: 'users_name_index',
unique: true }&lt;/code&gt;) and &lt;code&gt;:order&lt;/code&gt; (e.g. &lt;code&gt;{ order: { name:
:desc } }&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;add_index(table_name, column_names, options)&lt;/code&gt; : 열 이름으로 새 색인을 추가합니다. 다른 옵션으로는 &lt;code&gt;:name&lt;/code&gt; , &lt;code&gt;:unique&lt;/code&gt; (예 : &lt;code&gt;{ name: 'users_name_index', unique: true }&lt;/code&gt; ) 및 &lt;code&gt;:order&lt;/code&gt; (예 : &lt;code&gt;{ order: { name: :desc } }&lt;/code&gt; )가 있습니다.</target>
        </trans-unit>
        <trans-unit id="43a166bbe46bf1ce6775952f27cf260a2062e551" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_locales&lt;/code&gt;: Adds the files in &lt;code&gt;config/locales&lt;/code&gt; (from the application, railties, and engines) to &lt;code&gt;I18n.load_path&lt;/code&gt;, making available the translations in these files.</source>
          <target state="translated">&lt;code&gt;add_locales&lt;/code&gt; :를 추가는의 파일 &lt;code&gt;config/locales&lt;/code&gt; 로 (응용 프로그램, railties 및 엔진에서) &lt;code&gt;I18n.load_path&lt;/code&gt; , 이러한 파일의 번역을 사용할 수 있도록.</target>
        </trans-unit>
        <trans-unit id="997441ed09d09c78dca57e9ad103bf0026f43602" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_reference(:table_name, :reference_name)&lt;/code&gt;: Adds a new column &lt;code&gt;reference_name_id&lt;/code&gt; by default an integer. See &lt;a href=&quot;connectionadapters/schemastatements#method-i-add_reference&quot;&gt;ActiveRecord::ConnectionAdapters::SchemaStatements#add_reference&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;add_reference(:table_name, :reference_name)&lt;/code&gt; : 기본적으로 정수인 새 열 &lt;code&gt;reference_name_id&lt;/code&gt; 를 추가합니다 . 자세한 내용은 &lt;a href=&quot;connectionadapters/schemastatements#method-i-add_reference&quot;&gt;ActiveRecord :: ConnectionAdapters :: SchemaStatements # add_reference&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="47a5c0b1433799bee50aee92a74b22d63cab2476" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_routing_paths&lt;/code&gt;: Loads (by default) all &lt;code&gt;config/routes.rb&lt;/code&gt; files (in the application and railties, including engines) and sets up the routes for the application.</source>
          <target state="translated">&lt;code&gt;add_routing_paths&lt;/code&gt; : 기본적으로 모든 &lt;code&gt;config/routes.rb&lt;/code&gt; 파일을 로드하고 ( 엔진을 포함한 응용 프로그램 및 레일리에) 응용 프로그램의 경로를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="acb3c0d645af67df98e95a3a6b3c359e581b94f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_timestamps(table_name, options)&lt;/code&gt;: Adds timestamps (&lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt;) columns to &lt;code&gt;table_name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;add_timestamps(table_name, options)&lt;/code&gt; : 타임 스탬프 ( &lt;code&gt;created_at&lt;/code&gt; 및 &lt;code&gt;updated_at&lt;/code&gt; ) 열을 &lt;code&gt;table_name&lt;/code&gt; 에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="8731f381aaff48c61de60c054fde90fc67aceab2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_to_prepare_blocks&lt;/code&gt;: The block for every &lt;code&gt;config.to_prepare&lt;/code&gt; call in the application, a railtie, or engine is added to the &lt;code&gt;to_prepare&lt;/code&gt; callbacks for Action Dispatch which will be run per request in development, or before the first request in production.</source>
          <target state="translated">&lt;code&gt;add_to_prepare_blocks&lt;/code&gt; : 응용 프로그램, railtie 또는 엔진의 모든 &lt;code&gt;config.to_prepare&lt;/code&gt; 호출에 대한 블록 은 개발중인 요청 당 또는 프로덕션의 첫 요청 전에 실행되는 Action Dispatch 의 &lt;code&gt;to_prepare&lt;/code&gt; 콜백에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="59d5a9a5a42cba4896f5b2d4cf8e1c9ea8150166" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add_view_paths&lt;/code&gt;: Adds the directory &lt;code&gt;app/views&lt;/code&gt; from the application, railties, and engines to the lookup path for view files for the application.</source>
          <target state="translated">&lt;code&gt;add_view_paths&lt;/code&gt; : 응용 프로그램, 레일 리지 및 엔진 의 디렉토리 &lt;code&gt;app/views&lt;/code&gt; 를 응용 프로그램의 파일보기 조회 경로에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="548d0a268322fcf61d9d319a612a34e40b1d3b18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;after_bundle&lt;/code&gt; in Rails templates</source>
          <target state="translated">&lt;code&gt;after_bundle&lt;/code&gt; Rails 템플릿의 after_bundle</target>
        </trans-unit>
        <trans-unit id="78f3f59907a5411b8d43e473524ecedc313b2b00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;after_initialize&lt;/code&gt; and &lt;code&gt;after_find&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;after_initialize&lt;/code&gt; 및 &lt;code&gt;after_find&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b725123c46e6297b2bf62f992a4ddce41457eda1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;after_initialize&lt;/code&gt;: Run directly after the initialization of the application, after the application initializers in &lt;code&gt;config/initializers&lt;/code&gt; are run.</source>
          <target state="translated">&lt;code&gt;after_initialize&lt;/code&gt; : &lt;code&gt;config/initializers&lt;/code&gt; 프로그램의 응용 프로그램 초기화 프로그램 이 실행 된 후 응용 프로그램 초기화 직후 에 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="4feb9c38eb0cce9c42cb9d6e1a2ba432efe48fc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;after_save&lt;/code&gt; runs both on create and update, but always &lt;em&gt;after&lt;/em&gt; the more specific callbacks &lt;code&gt;after_create&lt;/code&gt; and &lt;code&gt;after_update&lt;/code&gt;, no matter the order in which the macro calls were executed.</source>
          <target state="translated">&lt;code&gt;after_save&lt;/code&gt; 는 create 및 update에서 실행되지만 매크로 호출이 실행 된 순서에 관계없이 &lt;code&gt;after_create&lt;/code&gt; 및 &lt;code&gt;after_update&lt;/code&gt; 보다 구체적인 콜백 &lt;em&gt;후에&lt;/em&gt; 항상 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="6c5f61d790dd59da35c54838a738e703752681e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;anonymous?&lt;/code&gt; method returns true if module does not have a name, false otherwise:</source>
          <target state="translated">&lt;code&gt;anonymous?&lt;/code&gt; 모듈에 이름이 없으면 메소드는 true를, 그렇지 않으면 false를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d688bef294d75415321f652ec5dea30c68287a0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;any&lt;/code&gt; can also be used with no arguments, in which case it will be used for any format requested by the user:</source>
          <target state="translated">&lt;code&gt;any&lt;/code&gt; 또한이 사용자가 요청한 모든 형식에 사용되는 경우에 인수, 사용할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ba99453171bde83fdced13b06b2d718ff4992180" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app/assets&lt;/code&gt; is for assets that are owned by the application, such as custom images, JavaScript files, or stylesheets.</source>
          <target state="translated">&lt;code&gt;app/assets&lt;/code&gt; 은 사용자 정의 이미지, JavaScript 파일 또는 스타일 시트와 같이 애플리케이션이 소유 한 자산을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="c106e201e552f43e38d394891941f2a1dd105d1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;app/mailers/user_mailer.rb&lt;/code&gt; contains an empty mailer:</source>
          <target state="translated">&lt;code&gt;app/mailers/user_mailer.rb&lt;/code&gt; 에 빈 메일러가 있습니다.</target>
        </trans-unit>
        <trans-unit id="20c31315cc73a48b1e163a12cd1027c6b4e2525c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;application.secrets&lt;/code&gt; now loaded with all keys as symbols</source>
          <target state="translated">&lt;code&gt;application.secrets&lt;/code&gt; 는 이제 모든 키를 기호로로드했습니다.</target>
        </trans-unit>
        <trans-unit id="78296a1b65f274877f440faf692d5983fb1710d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; - A list of helpers</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; - 헬퍼 목록</target>
        </trans-unit>
        <trans-unit id="ab5e0ebfa719f4a3bf83ed9784645e333a7accec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;args&lt;/code&gt; - An array of helpers</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; - 헬퍼 배열</target>
        </trans-unit>
        <trans-unit id="a319920e99b40d04a190703b277c77fc196e784e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; (PostgreSQL only) specifies that the type should be an array (see the examples below).</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; (PostgreSQL 만 해당)는 유형이 배열이어야 함을 지정합니다 (아래 예 참조).</target>
        </trans-unit>
        <trans-unit id="ed2b006842e69567cc151a81c47a8fd7589ba32f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;array&lt;/code&gt; - A normalized list of modules for the list of helpers provided.</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; - 제공된 헬퍼 목록은 표준화 된 모듈리스트.</target>
        </trans-unit>
        <trans-unit id="147d5fe6a8af938a13d88153b1c1a34fb76a98bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt;: Content type. Defaults to &lt;code&gt;nil&lt;/code&gt;. Must be a symbol that corresponds to a mime type.</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; : 컨텐츠 유형. 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다. MIME 유형에 해당하는 기호 여야합니다.</target>
        </trans-unit>
        <trans-unit id="2c91ea554ce7e6a0af9a0938891af9e8292d8295" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt;: Used for encoding the request with different content type. Supports `:json` by default and will set the appropriate request headers. The headers will be merged into the Rack env hash.</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; : 다른 컨텐츠 유형으로 요청을 인코딩하는 데 사용됩니다. 기본적으로`: json`을 지원하고 적절한 요청 헤더를 설정합니다. 헤더가 Rack env 해시에 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="46f4c5ead23ffc941ac70fbac6d6516351e58bf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;as&lt;/code&gt;: for encoding the request with different content type. Supports &lt;code&gt;:json&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;as&lt;/code&gt; : 다른 컨텐츠 유형으로 요청을 인코딩합니다. 기본적으로 &lt;code&gt;:json&lt;/code&gt; 을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="3b812225f18b3b1916da249563b1ef075d11e5c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ask()&lt;/code&gt; gives you a chance to get some feedback from the user and use it in your templates. Let's say you want your user to name the new shiny library you're adding:</source>
          <target state="translated">&lt;code&gt;ask()&lt;/code&gt; 는 사용자로부터 피드백을 받아 템플릿에서 사용할 수있는 기회를 제공합니다. 사용자가 추가하는 새 반짝이 라이브러리의 이름을 지정한다고 가정 해 봅시다.</target>
        </trans-unit>
        <trans-unit id="1d94a029f9365964c5b0f74637d02c10b617a1c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assert_generates&lt;/code&gt; asserts that a particular set of options generate a particular path and can be used with default routes or custom routes. For example:</source>
          <target state="translated">&lt;code&gt;assert_generates&lt;/code&gt; 는 특정 옵션 세트가 특정 경로를 생성하고 기본 경로 또는 사용자 정의 경로와 함께 사용될 수 있다고 주장합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="98846cc4e53deb44996434beb7013a0101b532e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assert_recognizes&lt;/code&gt; is the inverse of &lt;code&gt;assert_generates&lt;/code&gt;. It asserts that a given path is recognized and routes it to a particular spot in your application. For example:</source>
          <target state="translated">&lt;code&gt;assert_recognizes&lt;/code&gt; 는 &lt;code&gt;assert_generates&lt;/code&gt; 의 역입니다 . 주어진 경로를 인식하고 응용 프로그램의 특정 지점으로 경로를 지정합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8248e0eecc288883753fcd1a2a9a051f65c1a524" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assert_routing&lt;/code&gt; lets you test whether or not the route properly resolves into options.</source>
          <target state="translated">&lt;code&gt;assert_routing&lt;/code&gt; 을 사용하면 경로가 옵션으로 올바르게 해석되는지 여부를 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b0e8dc475cfbd1bec5df7770b0a2d4cda0e9588" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assert_select(element, selector, [equality], [message])&lt;/code&gt; ensures that the equality condition is met on all the selected elements through the selector starting from the &lt;em&gt;element&lt;/em&gt; (instance of &lt;code&gt;Nokogiri::XML::Node&lt;/code&gt; or &lt;code&gt;Nokogiri::XML::NodeSet&lt;/code&gt;) and its descendants.</source>
          <target state="translated">&lt;code&gt;assert_select(element, selector, [equality], [message])&lt;/code&gt; 는 &lt;em&gt;요소&lt;/em&gt; ( &lt;code&gt;Nokogiri::XML::Node&lt;/code&gt; 또는 &lt;code&gt;Nokogiri::XML::NodeSet&lt;/code&gt; 인스턴스) 에서 시작하여 선택기를 통해 선택된 모든 요소에서 동등 조건이 충족되도록합니다. NodeSet ) 및 해당 하위 항목.</target>
        </trans-unit>
        <trans-unit id="2ba27568c740405b721a30967cf5ab40e07343dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assert_select(selector, [equality], [message])&lt;/code&gt; ensures that the equality condition is met on the selected elements through the selector. The selector may be a CSS selector expression (String) or an expression with substitution values.</source>
          <target state="translated">&lt;code&gt;assert_select(selector, [equality], [message])&lt;/code&gt; 는 선택기를 통해 선택한 요소에서 동등 조건이 충족되도록합니다. 선택기는 CSS 선택기 표현식 (문자열)이거나 대체 값이있는 표현식 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fac57562c0e2fb5e4a3407047dbceb7c21d833b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asset-path(&quot;rails.png&quot;)&lt;/code&gt; returns &lt;code&gt;&quot;/assets/rails.png&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;asset-path(&quot;rails.png&quot;)&lt;/code&gt; 는 &lt;code&gt;&quot;/assets/rails.png&quot;&lt;/code&gt; 를 반환합니다</target>
        </trans-unit>
        <trans-unit id="f361f5bf777b6beaa5aa5fcbd7f1dd2822a8fd0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asset-url(&quot;rails.png&quot;)&lt;/code&gt; returns &lt;code&gt;url(/assets/rails.png)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;asset-url(&quot;rails.png&quot;)&lt;/code&gt; 는 &lt;code&gt;url(/assets/rails.png)&lt;/code&gt; 반환합니다</target>
        </trans-unit>
        <trans-unit id="da90656d9dd55fcc0b394ed8af75404744343eae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;asset-url&lt;/code&gt; with two arguments is deprecated. For example: &lt;code&gt;asset-url(&quot;rails.png&quot;, image)&lt;/code&gt; becomes &lt;code&gt;asset-url(&quot;rails.png&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;asset-url&lt;/code&gt; 두 개의 인수가있는 asset-url 은 더 이상 사용되지 않습니다. 예를 들어 &lt;code&gt;asset-url(&quot;rails.png&quot;, image)&lt;/code&gt; 은 &lt;code&gt;asset-url(&quot;rails.png&quot;)&lt;/code&gt; 이 됩니다.</target>
        </trans-unit>
        <trans-unit id="3cc8ec1a7b7f34af2f3930e42ac216e6a6604c3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assets:precompile:primary&lt;/code&gt; and &lt;code&gt;assets:precompile:all&lt;/code&gt; have been removed. Use &lt;code&gt;assets:precompile&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;assets:precompile:primary&lt;/code&gt; 및 &lt;code&gt;assets:precompile:all&lt;/code&gt; 이 모두 제거되었습니다. &lt;code&gt;assets:precompile&lt;/code&gt; 대신 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="cef414b85b4d7aff32642ff9ce8bc77cc30893f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assets&lt;/code&gt; allows to create assets on generating a scaffold. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;assets&lt;/code&gt; 은 스캐 폴드 생성시 자산을 생성 할 수 있습니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="335b0e7403fe66d43778e7ddaa24ab9d822fcc45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;assigns&lt;/code&gt; and &lt;code&gt;assert_template&lt;/code&gt; have been extracted to the &lt;code&gt;rails-controller-testing&lt;/code&gt; gem. To continue using these methods in your controller tests, add &lt;code&gt;gem 'rails-controller-testing'&lt;/code&gt; to your &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;assigns&lt;/code&gt; 및 &lt;code&gt;assert_template&lt;/code&gt; 이 &lt;code&gt;rails-controller-testing&lt;/code&gt; gem 으로 추출되었습니다 . 컨트롤러 테스트에서 이러한 방법을 계속 사용하려면 &lt;code&gt;gem 'rails-controller-testing'&lt;/code&gt; 을 &lt;code&gt;Gemfile&lt;/code&gt; 에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb3c78ecd9c971fb790145c3a1e0f7f5fe9cf822" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;association&lt;/code&gt; is a placeholder for the symbol passed as the &lt;code&gt;name&lt;/code&gt; argument, so &lt;code&gt;belongs_to :author&lt;/code&gt; would add among others &lt;code&gt;author.nil?&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;association&lt;/code&gt; 은 &lt;code&gt;name&lt;/code&gt; 인자 로 전달 된 심볼의 자리 표시 자이며, &lt;code&gt;belongs_to :author&lt;/code&gt; 는 다른 &lt;code&gt;author.nil?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa1dd9ae81decc38ce835df9de1ee921bc81ef59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;association&lt;/code&gt; is a placeholder for the symbol passed as the &lt;code&gt;name&lt;/code&gt; argument, so &lt;code&gt;has_one :manager&lt;/code&gt; would add among others &lt;code&gt;manager.nil?&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;association&lt;/code&gt; 은 &lt;code&gt;name&lt;/code&gt; 인수 로 전달 된 심볼의 자리 표시 자 이므로 &lt;code&gt;has_one :manager&lt;/code&gt; 는 다른 &lt;code&gt;manager.nil?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b87ca29ccd45f81e0e438eee00993dc4300b1c0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;atom_feed&lt;/code&gt; yields an &lt;code&gt;AtomFeedBuilder&lt;/code&gt; instance. Nested elements yield an &lt;code&gt;AtomBuilder&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;atom_feed&lt;/code&gt; 는 &lt;code&gt;AtomFeedBuilder&lt;/code&gt; 인스턴스를 생성 합니다. 중첩 된 요소는 &lt;code&gt;AtomBuilder&lt;/code&gt; 인스턴스를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="b661c8839744785b4972764f62310a57d1a18037" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attachments.inline[]=&lt;/code&gt; - Allows you to add an inline attachment to your email in the same manner as &lt;code&gt;attachments[]=&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attachments.inline[]=&lt;/code&gt; -첨부 파일과 동일한 방식으로 이메일에 인라인 첨부 파일을 추가 할 수 &lt;code&gt;attachments[]=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eea08169bfb8730c548e458a76ce6ff5d87391d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attachments&lt;/code&gt; - Allows you to add attachments to your email. For example, &lt;code&gt;attachments['file-name.jpg'] = File.read('file-name.jpg')&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;attachments&lt;/code&gt; -이메일에 첨부 파일을 추가 할 수 있습니다. 예를 들어, &lt;code&gt;attachments['file-name.jpg'] = File.read('file-name.jpg')&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5c669eda8bd0f776fca38becbf322ffed076da70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attachments[]=&lt;/code&gt; - Allows you to add attachments to your email in an intuitive manner; &lt;code&gt;attachments['filename.png'] =
File.read('path/to/filename.png')&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attachments[]=&lt;/code&gt; -직관적 인 방식으로 이메일에 첨부 파일을 추가 할 수 있습니다. &lt;code&gt;attachments['filename.png'] = File.read('path/to/filename.png')&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0362565c36cbeeb586af5dd5985aa8b463cdd1ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attr_name&lt;/code&gt; - The field name that should be serialized.</source>
          <target state="translated">&lt;code&gt;attr_name&lt;/code&gt; - 직렬화해야하는 필드 이름.</target>
        </trans-unit>
        <trans-unit id="7a0d7b54c81ac70c5d96d30feb699fb4c47e5680" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attr_name&lt;/code&gt; The name of the attribute to retrieve the type for. Must be a string or a symbol.</source>
          <target state="translated">&lt;code&gt;attr_name&lt;/code&gt; 유형을 검색 할 속성의 이름입니다. 문자열 또는 기호 여야합니다.</target>
        </trans-unit>
        <trans-unit id="41cdb37fae460ede45e6937feaa15452174d6d4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attribute&lt;/code&gt; should be set to &lt;code&gt;:base&lt;/code&gt; if the error is not directly associated with a single attribute.</source>
          <target state="translated">&lt;code&gt;attribute&lt;/code&gt; 오류가 단일 속성과 직접 연관되지 않은 경우 속성 은 &lt;code&gt;:base&lt;/code&gt; 로 설정되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="2e3b0e5136f74fb2e63a3649805a16d96606e919" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attribute_missing&lt;/code&gt; is like &lt;code&gt;method_missing&lt;/code&gt;, but for attributes. When &lt;code&gt;method_missing&lt;/code&gt; is called we check to see if there is a matching attribute method. If so, we tell &lt;code&gt;attribute_missing&lt;/code&gt; to dispatch the attribute. This method can be overloaded to customize the behavior.</source>
          <target state="translated">&lt;code&gt;attribute_missing&lt;/code&gt; 은 &lt;code&gt;method_missing&lt;/code&gt; 과 유사 하지만 속성입니다. &lt;code&gt;method_missing&lt;/code&gt; 이 호출 되면 일치하는 속성 메소드가 있는지 확인합니다. 그렇다면 &lt;code&gt;attribute_missing&lt;/code&gt; 에 속성 을 전달하도록 지시합니다. 이 방법을 오버로드하여 동작을 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72d59ce69d416086240532b3f4b2e9cba5a63afb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attributes&lt;/code&gt; - This should be a hash of attributes or an array of hashes.</source>
          <target state="translated">&lt;code&gt;attributes&lt;/code&gt; -속성 의 해시 또는 해시 배열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="219e7234208c84a45e956934af09b05a0a928e54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attrs&lt;/code&gt; - Names of attributes to be converted into helpers.</source>
          <target state="translated">&lt;code&gt;attrs&lt;/code&gt; - 헬퍼로 변환 될 속성의 이름.</target>
        </trans-unit>
        <trans-unit id="679c6ef52978857f2d797a29b7409c22b892264f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;author_attributes=(attributes)&lt;/code&gt; and &lt;code&gt;pages_attributes=(attributes)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;author_attributes=(attributes)&lt;/code&gt; 및 &lt;code&gt;pages_attributes=(attributes)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbc0e3751aa4e1ad752fc9edc1f97322e8c3aba8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autobuffer: true&lt;/code&gt;, the audio will pre load the file for the user on page load.</source>
          <target state="translated">&lt;code&gt;autobuffer: true&lt;/code&gt; , 오디오는 페이지로드시 사용자의 파일을 미리로드합니다.</target>
        </trans-unit>
        <trans-unit id="2efedfcb85d5ba9c485dbc2a64dd18b957e6a95a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autobuffer: true&lt;/code&gt;, the video will pre load the file for the user on page load.</source>
          <target state="translated">&lt;code&gt;autobuffer: true&lt;/code&gt; , 비디오는 페이지로드시 사용자의 파일을 미리로드합니다.</target>
        </trans-unit>
        <trans-unit id="c1d25975d9becd54926b90022d086f424dd27dc4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autoload_paths&lt;/code&gt; is computed and cached during the initialization process. The application needs to be restarted to reflect any changes in the directory structure.</source>
          <target state="translated">&lt;code&gt;autoload_paths&lt;/code&gt; 는 초기화 과정에서 계산되고 캐시됩니다. 디렉토리 구조의 변경 사항을 반영하려면 응용 프로그램을 다시 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="a1b858419c3e070246a4f8ea38a9316d72aee2a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autoplay: true&lt;/code&gt;, starts playing the audio on page load</source>
          <target state="translated">&lt;code&gt;autoplay: true&lt;/code&gt; , 페이지로드시 오디오 재생을 시작합니다</target>
        </trans-unit>
        <trans-unit id="e7d2b715aae925dfa21a89ca2ae498dff3e15d07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;autoplay: true&lt;/code&gt;, starts playing the video on page load.</source>
          <target state="translated">&lt;code&gt;autoplay: true&lt;/code&gt; , 페이지로드시 비디오 재생을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="35ebfd83c050c429f4d4fe01f693b1e56d9f832e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before_configuration&lt;/code&gt;: This is run as soon as the application constant inherits from &lt;code&gt;Rails::Application&lt;/code&gt;. The &lt;code&gt;config&lt;/code&gt; calls are evaluated before this happens.</source>
          <target state="translated">&lt;code&gt;before_configuration&lt;/code&gt; : 응용 프로그램 상수가 &lt;code&gt;Rails::Application&lt;/code&gt; 에서 상속되는 즉시 실행됩니다 . &lt;code&gt;config&lt;/code&gt; 이 일어나기 전에 통화가 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="627db264c6eab6ce1b3a98c0f637f79bdeb55605" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before_destroy&lt;/code&gt; callbacks should be placed before &lt;code&gt;dependent: :destroy&lt;/code&gt; associations (or use the &lt;code&gt;prepend: true&lt;/code&gt; option), to ensure they execute before the records are deleted by &lt;code&gt;dependent: :destroy&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;before_destroy&lt;/code&gt; 의 콜백 전에 배치해야 &lt;code&gt;dependent: :destroy&lt;/code&gt; 협회 (또는 사용 &lt;code&gt;prepend: true&lt;/code&gt; 옵션) 레코드가 삭제되기 전에 그들이 실행하기 위해, &lt;code&gt;dependent: :destroy&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d114b147b9fdc6865defa26582e4c08aeb8f945f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before_eager_load&lt;/code&gt;: This is run directly before eager loading occurs, which is the default behavior for the &lt;code&gt;production&lt;/code&gt; environment and not for the &lt;code&gt;development&lt;/code&gt; environment.</source>
          <target state="translated">&lt;code&gt;before_eager_load&lt;/code&gt; : 열성적인로드가 발생하기 직전에 실행됩니다. 이는 &lt;code&gt;development&lt;/code&gt; 환경이 아닌 &lt;code&gt;production&lt;/code&gt; 환경 의 기본 동작입니다 .</target>
        </trans-unit>
        <trans-unit id="72ad4f87d720c5b38e15fd2d85d6c5f542bec6fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before_initialize&lt;/code&gt;: This is run directly before the initialization process of the application occurs with the &lt;code&gt;:bootstrap_hook&lt;/code&gt; initializer near the beginning of the Rails initialization process.</source>
          <target state="translated">&lt;code&gt;before_initialize&lt;/code&gt; : Rails 초기화 프로세스의 시작 부분 근처에서 &lt;code&gt;:bootstrap_hook&lt;/code&gt; 초기화 프로그램을 사용하여 애플리케이션의 초기화 프로세스가 발생하기 직전에 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="6599dfa4e48ac869995ad1de1341db32681b69d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before_validation*&lt;/code&gt; returning statements</source>
          <target state="translated">&lt;code&gt;before_validation*&lt;/code&gt; 리턴 문</target>
        </trans-unit>
        <trans-unit id="b5d231230ba7e62f40ebce013aee64d02ef78deb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beginning_of_day&lt;/code&gt; is aliased to &lt;code&gt;at_beginning_of_day&lt;/code&gt;, &lt;code&gt;midnight&lt;/code&gt;, &lt;code&gt;at_midnight&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;beginning_of_day&lt;/code&gt; 이 하는 별명이 &lt;code&gt;at_beginning_of_day&lt;/code&gt; , &lt;code&gt;midnight&lt;/code&gt; , &lt;code&gt;at_midnight&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91f4c113465ae6ecdc491f74156386e26ec755a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beginning_of_hour&lt;/code&gt; is aliased to &lt;code&gt;at_beginning_of_hour&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;beginning_of_hour&lt;/code&gt; 는 별칭을 &lt;code&gt;at_beginning_of_hour&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="842acc0f766a5a242acaffafebe79a0740ab3c22" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beginning_of_hour&lt;/code&gt;, &lt;code&gt;end_of_hour&lt;/code&gt;, &lt;code&gt;beginning_of_minute&lt;/code&gt; and &lt;code&gt;end_of_minute&lt;/code&gt; are implemented for &lt;code&gt;Time&lt;/code&gt; and &lt;code&gt;DateTime&lt;/code&gt; but &lt;strong&gt;not&lt;/strong&gt;&lt;code&gt;Date&lt;/code&gt; as it does not make sense to request the beginning or end of an hour or minute on a &lt;code&gt;Date&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;beginning_of_hour&lt;/code&gt; , &lt;code&gt;end_of_hour&lt;/code&gt; , &lt;code&gt;beginning_of_minute&lt;/code&gt; 및 &lt;code&gt;end_of_minute&lt;/code&gt; 이 구현되는 &lt;code&gt;Time&lt;/code&gt; 및 &lt;code&gt;DateTime&lt;/code&gt; 만 &lt;strong&gt;하지 &lt;/strong&gt; &lt;code&gt;Date&lt;/code&gt; 그것은에 한 시간 (분)의 시작 또는 끝을 요청 이해가되지 않는 &lt;code&gt;Date&lt;/code&gt; 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="716d2c99b107681348a8e272f50b2f4ea1cd523c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beginning_of_minute&lt;/code&gt; is aliased to &lt;code&gt;at_beginning_of_minute&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;beginning_of_minute&lt;/code&gt; 는 별칭을 &lt;code&gt;at_beginning_of_minute&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a18c583c61dd907e34b13b6843d9784aba0b4cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beginning_of_month&lt;/code&gt; is aliased to &lt;code&gt;at_beginning_of_month&lt;/code&gt;, and &lt;code&gt;end_of_month&lt;/code&gt; is aliased to &lt;code&gt;at_end_of_month&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;beginning_of_month&lt;/code&gt; 는 별칭을 &lt;code&gt;at_beginning_of_month&lt;/code&gt; 및 &lt;code&gt;end_of_month&lt;/code&gt; 는 별칭을 &lt;code&gt;at_end_of_month&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6f646c07aadab7441e7bda8ca01b18eaacc7e769" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beginning_of_quarter&lt;/code&gt; is aliased to &lt;code&gt;at_beginning_of_quarter&lt;/code&gt;, and &lt;code&gt;end_of_quarter&lt;/code&gt; is aliased to &lt;code&gt;at_end_of_quarter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;beginning_of_quarter&lt;/code&gt; 는 별칭을 &lt;code&gt;at_beginning_of_quarter&lt;/code&gt; 및 &lt;code&gt;end_of_quarter&lt;/code&gt; 는 별칭을 &lt;code&gt;at_end_of_quarter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c71ed91ff84ec6658f543c73eb5a9c16213dc595" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beginning_of_week&lt;/code&gt; is aliased to &lt;code&gt;at_beginning_of_week&lt;/code&gt; and &lt;code&gt;end_of_week&lt;/code&gt; is aliased to &lt;code&gt;at_end_of_week&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;beginning_of_week&lt;/code&gt; 는 앨리어스하는 것입니다 &lt;code&gt;at_beginning_of_week&lt;/code&gt; 및 &lt;code&gt;end_of_week&lt;/code&gt; IS 앨리어싱에 &lt;code&gt;at_end_of_week&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d666c77134c633fd2c62cb5a7a50998f03521a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;beginning_of_year&lt;/code&gt; is aliased to &lt;code&gt;at_beginning_of_year&lt;/code&gt;, and &lt;code&gt;end_of_year&lt;/code&gt; is aliased to &lt;code&gt;at_end_of_year&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;beginning_of_year&lt;/code&gt; 는 별칭을 &lt;code&gt;at_beginning_of_year&lt;/code&gt; 및 &lt;code&gt;end_of_year&lt;/code&gt; 는 별칭을 &lt;code&gt;at_end_of_year&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="213ab8aa9655ac9fad6939feb2450e2a1a5a6505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;belongs_to&lt;/code&gt; Association Reference</source>
          <target state="translated">&lt;code&gt;belongs_to&lt;/code&gt; 협회 참조</target>
        </trans-unit>
        <trans-unit id="aa0fd30b480322d7f6875a3f45390788807806c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;belongs_to&lt;/code&gt; associations &lt;em&gt;must&lt;/em&gt; use the singular term. If you used the pluralized form in the above example for the &lt;code&gt;author&lt;/code&gt; association in the &lt;code&gt;Book&lt;/code&gt; model and tried to create the instance by &lt;code&gt;Book.create(authors: @author)&lt;/code&gt;, you would be told that there was an &quot;uninitialized constant Book::Authors&quot;. This is because Rails automatically infers the class name from the association name. If the association name is wrongly pluralized, then the inferred class will be wrongly pluralized too.</source>
          <target state="translated">&lt;code&gt;belongs_to&lt;/code&gt; 연결 &lt;em&gt;은&lt;/em&gt; 단수 &lt;em&gt;를&lt;/em&gt; 사용해야합니다. &lt;code&gt;Book&lt;/code&gt; 모델 의 &lt;code&gt;author&lt;/code&gt; 연관에 대해 위의 예에서 복수 양식을 사용하고 &lt;code&gt;Book.create(authors: @author)&lt;/code&gt; 인스턴스를 작성하려고 시도한 경우 &quot;초기화되지 않은 상수 Book :: Authors&quot;라는 메시지가 표시됩니다. &quot;. Rails가 자동으로 클래스 이름을 연관 이름에서 유추하기 때문입니다. 연관 이름이 잘못 복수형이면 유추 클래스도 잘못 복수화됩니다.</target>
        </trans-unit>
        <trans-unit id="c69911493cd2e698ae1dde825325df6d1e203535" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;belongs_to&lt;/code&gt; will now trigger a validation error by default if the association is not present.</source>
          <target state="translated">&lt;code&gt;belongs_to&lt;/code&gt; 는 연결이 없으면 기본적으로 유효성 검사 오류를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="2345679c25b517e5ddeae60fc1598083d66f93af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;blank?&lt;/code&gt; and &lt;code&gt;present?&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;blank?&lt;/code&gt; 그리고 &lt;code&gt;present?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="61aff8d3c4a51197283b3e6996e356763c72ab6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; - A block defining helper methods</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; - 블록 헬퍼 메소드를 정의</target>
        </trans-unit>
        <trans-unit id="20f5e13b14d31f5d788f5a05cffd9c0adcc3d7f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;block&lt;/code&gt; - A proc that should be added to the callbacks.</source>
          <target state="translated">&lt;code&gt;block&lt;/code&gt; - 콜백에 추가되어야 PROC.</target>
        </trans-unit>
        <trans-unit id="c74769df8bb986322fa0004c28b5f18a15b795f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body-mime&lt;/code&gt;: The full RFC 822 message</source>
          <target state="translated">&lt;code&gt;body-mime&lt;/code&gt; : 전체 RFC 822 메시지</target>
        </trans-unit>
        <trans-unit id="94eacbc8cf1d0e6e4a83bcb130b62ac992fe8283" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;body&lt;/code&gt;: The request body with a string that is appropriately encoded (&lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; or &lt;code&gt;multipart/form-data&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;body&lt;/code&gt; : 적절하게 인코딩 된 문자열이있는 요청 본문 ( &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 또는 &lt;code&gt;multipart/form-data&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c9c47808295575081b738f5dd4d468d0ab14eb07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bootstrap_hook&lt;/code&gt;: Runs all configured &lt;code&gt;before_initialize&lt;/code&gt; blocks.</source>
          <target state="translated">&lt;code&gt;bootstrap_hook&lt;/code&gt; : 구성된 모든 &lt;code&gt;before_initialize&lt;/code&gt; 블록을 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="85ff87fb71639e67fede1e758caf18fa9028de88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break class(.|\#)method [if expression]&lt;/code&gt;: set breakpoint in &lt;em&gt;method&lt;/em&gt; (. and # for class and instance method respectively) defined in &lt;em&gt;class&lt;/em&gt;. The &lt;em&gt;expression&lt;/em&gt; works the same way as with file:n.</source>
          <target state="translated">&lt;code&gt;break class(.|\#)method [if expression]&lt;/code&gt; : 브레이크 포인트의 세트 &lt;em&gt;방식&lt;/em&gt; (클래스 인스턴스 메소드 및 각각 #.)에 정의 된 &lt;em&gt;클래스&lt;/em&gt; . &lt;em&gt;표현은&lt;/em&gt; 파일과 같은 방식으로 작동합니다 : N.</target>
        </trans-unit>
        <trans-unit id="4da998bfd4b73d52f748f37df694729ea85d71f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break file:n [if expression]&lt;/code&gt;: set breakpoint in line number &lt;em&gt;n&lt;/em&gt; inside file named &lt;em&gt;file&lt;/em&gt;. If an &lt;em&gt;expression&lt;/em&gt; is given it must evaluated to &lt;em&gt;true&lt;/em&gt; to fire up the debugger.</source>
          <target state="translated">&lt;code&gt;break file:n [if expression]&lt;/code&gt; : file이라는 &lt;em&gt;파일&lt;/em&gt; 내 에서 줄 번호 &lt;em&gt;n에&lt;/em&gt; 중단 점을 설정 &lt;em&gt;합니다&lt;/em&gt; . 는 IF &lt;em&gt;식을&lt;/em&gt; 주어 그것은으로 평가해야한다 &lt;em&gt;진정한&lt;/em&gt; 디버거를 불 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="124ee3dbee367289f67e54dda19d4b27d86482da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;break n&lt;/code&gt;: set breakpoint in line number &lt;em&gt;n&lt;/em&gt; in the current source file.</source>
          <target state="translated">&lt;code&gt;break n&lt;/code&gt; : 현재 소스 파일 에서 줄 번호 &lt;em&gt;n&lt;/em&gt; 에 중단 점을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="f8affec86dd3eb9faeb833cd451a99f19f719721" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;build_middleware_stack&lt;/code&gt;: Builds the middleware stack for the application, returning an object which has a &lt;code&gt;call&lt;/code&gt; method which takes a Rack environment object for the request.</source>
          <target state="translated">&lt;code&gt;build_middleware_stack&lt;/code&gt; : 애플리케이션의 미들웨어 스택을 빌드 하고 요청에 대한 랙 환경 오브젝트를 가져 오는 &lt;code&gt;call&lt;/code&gt; 메소드 가있는 오브젝트를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="5482eb1fda9c1cccb5a3cedb4b84acfc937ad1f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;builder&lt;/code&gt; - Default form builder, an instance of &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;builder&lt;/code&gt; - 기본 폼 빌더의 인스턴스 &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="852998440c4c8187a0901aa751b6a37df6dc653f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;byebug&lt;/code&gt; has a few available options to tweak its behavior:</source>
          <target state="translated">&lt;code&gt;byebug&lt;/code&gt; 는 동작을 조정하는 몇 가지 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9b1aa418d5824392c47e18d23eac55cdf45d0bb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cache&lt;/code&gt; - The cache to use. If it is not specified, &lt;code&gt;Rails.cache&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;cache&lt;/code&gt; - 사용할 캐시. 지정하지 않으면 &lt;code&gt;Rails.cache&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="11126f028e07181c053089aa4729d7ba5802cbeb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;callbacks&lt;/code&gt; - An array of callbacks, with an optional options hash as the last parameter.</source>
          <target state="translated">&lt;code&gt;callbacks&lt;/code&gt; -옵션 매개 변수 해시를 마지막 매개 변수로 사용하는 콜백 배열입니다.</target>
        </trans-unit>
        <trans-unit id="5c8c73af172b803fe7f38787bd12ae930e709c5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;camelize&lt;/code&gt; accepts an optional argument, it can be &lt;code&gt;:upper&lt;/code&gt; (default), or &lt;code&gt;:lower&lt;/code&gt;. With the latter the first letter becomes lowercase:</source>
          <target state="translated">&lt;code&gt;camelize&lt;/code&gt; 는 선택적 인수를 허용하며 &lt;code&gt;:upper&lt;/code&gt; (기본값) 또는 &lt;code&gt;:lower&lt;/code&gt; 일 수 있습니다. 후자는 첫 글자가 소문자가됩니다.</target>
        </trans-unit>
        <trans-unit id="1bf518e2dcd7e3409a7acf8816d48ded3d6f73c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;camelize&lt;/code&gt; is aliased to &lt;code&gt;camelcase&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;camelize&lt;/code&gt; 는 &lt;code&gt;camelcase&lt;/code&gt; 의 별칭 입니다.</target>
        </trans-unit>
        <trans-unit id="2d306b7717e3d3ae748ad27e914eb2ba7e793555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;camelize&lt;/code&gt; will also convert '/' to '::' which is useful for converting paths to namespaces.</source>
          <target state="translated">&lt;code&gt;camelize&lt;/code&gt; 는 '/'를 '::'로 변환하여 경로를 네임 스페이스로 변환하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="a1a153a4e6d4d38f099bddcee30978512b2109ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cast_type&lt;/code&gt; A symbol such as &lt;code&gt;:string&lt;/code&gt; or &lt;code&gt;:integer&lt;/code&gt;, or a type object to be used for this attribute. See the examples below for more information about providing custom type objects.</source>
          <target state="translated">&lt;code&gt;cast_type&lt;/code&gt; &lt;code&gt;:string&lt;/code&gt; 또는 &lt;code&gt;:integer&lt;/code&gt; 와 같은 기호 또는 이 속성에 사용할 유형 객체입니다. 사용자 정의 유형 객체 제공에 대한 자세한 내용은 아래 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6a59523aa3a09415a44cea36b6659f225ea247c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cast_type&lt;/code&gt; The type object to use for this attribute.</source>
          <target state="translated">&lt;code&gt;cast_type&lt;/code&gt; 이 속성에 사용할 유형 객체입니다.</target>
        </trans-unit>
        <trans-unit id="406ec75b60b02492c8a7840a853bdd206032dd98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;change&lt;/code&gt; accepts an additional &lt;code&gt;:usec&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;change&lt;/code&gt; 는 추가 &lt;code&gt;:usec&lt;/code&gt; 옵션을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="596aad10f29758aea60f5803064da5928718b7fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;change_column(table_name, column_name, type, options)&lt;/code&gt;: Changes the column to a different type using the same parameters as add_column.</source>
          <target state="translated">&lt;code&gt;change_column(table_name, column_name, type, options)&lt;/code&gt; : add_column과 동일한 매개 변수를 사용하여 열을 다른 유형으로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="e329efa1f41fa598dce4549079d4537ee75fc60c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;change_column_default(table_name, column_name,
default_or_changes)&lt;/code&gt;: Sets a default value for &lt;code&gt;column_name&lt;/code&gt; defined by &lt;code&gt;default_or_changes&lt;/code&gt; on &lt;code&gt;table_name&lt;/code&gt;. Passing a hash containing &lt;code&gt;:from&lt;/code&gt; and &lt;code&gt;:to&lt;/code&gt; as &lt;code&gt;default_or_changes&lt;/code&gt; will make this change reversible in the migration.</source>
          <target state="translated">&lt;code&gt;change_column_default(table_name, column_name, default_or_changes)&lt;/code&gt; : &lt;code&gt;table_name&lt;/code&gt; 에서 &lt;code&gt;default_or_changes&lt;/code&gt; 에 의해 정의 된 &lt;code&gt;column_name&lt;/code&gt; 의 기본값을 설정합니다 . &lt;code&gt;:from&lt;/code&gt; 및 &lt;code&gt;:to&lt;/code&gt; 를 포함하는 해시를 &lt;code&gt;default_or_changes&lt;/code&gt; 로 전달 하면 마이그레이션에서이 변경 사항을 되돌릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="401d0d5662197e4bf471da0d476ba618a2da65c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;change_column_null(table_name, column_name, null, default =
nil)&lt;/code&gt;: Sets or removes a +NOT NULL+ constraint on &lt;code&gt;column_name&lt;/code&gt;. The &lt;code&gt;null&lt;/code&gt; flag indicates whether the value can be &lt;code&gt;NULL&lt;/code&gt;. See &lt;a href=&quot;connectionadapters/schemastatements#method-i-change_column_null&quot;&gt;ActiveRecord::ConnectionAdapters::SchemaStatements#change_column_null&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;change_column_null(table_name, column_name, null, default = nil)&lt;/code&gt; : &lt;code&gt;column_name&lt;/code&gt; 에 + NOT NULL + 제약 조건을 설정하거나 제거합니다 . &lt;code&gt;null&lt;/code&gt; 플래그 값이 될 수 있는지 여부를 나타내는 &lt;code&gt;NULL&lt;/code&gt; . 자세한 내용은 &lt;a href=&quot;connectionadapters/schemastatements#method-i-change_column_null&quot;&gt;ActiveRecord :: ConnectionAdapters :: SchemaStatements # change_column_null&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="59177a61ffbeffee452236dfb5d4d31759f71658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;change_table(name, options)&lt;/code&gt;: Allows to make column alterations to the table called &lt;code&gt;name&lt;/code&gt;. It makes the table object available to a block that can then add/remove columns, indexes or foreign keys to it.</source>
          <target state="translated">&lt;code&gt;change_table(name, options)&lt;/code&gt; : &lt;code&gt;name&lt;/code&gt; 이라는 테이블을 열로 변경할 수 있습니다. 테이블 오브젝트를 블록에 사용 가능하게하여 컬럼, 인덱스 또는 외부 키를 추가 / 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="041a86e133f259e0d23439f23843502daf69941b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;change_table&lt;/code&gt; is also reversible, as long as the block does not call &lt;code&gt;change&lt;/code&gt;, &lt;code&gt;change_default&lt;/code&gt; or &lt;code&gt;remove&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;change_table&lt;/code&gt; 블록이 &lt;code&gt;change&lt;/code&gt; , &lt;code&gt;change_default&lt;/code&gt; 또는 &lt;code&gt;remove&lt;/code&gt; 를 호출하지 않는 한 change_table 도 되돌릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="da862ac02c02a739f03875806495d8a5f72704da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;checkout_timeout&lt;/code&gt;: number of seconds to wait for a connection to become available before giving up and raising a timeout error (default 5 seconds).</source>
          <target state="translated">&lt;code&gt;checkout_timeout&lt;/code&gt; : 시간 초과 오류를 포기하고 발생시키기 전에 연결을 사용할 수있을 때까지 대기하는 시간 (초)입니다 (기본값 5 초).</target>
        </trans-unit>
        <trans-unit id="f9591165c1c30312e7a522b4ac4b2e703299f1d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;class_name_or_coder&lt;/code&gt; - Optional, a coder object, which responds to &lt;code&gt;.load&lt;/code&gt; and &lt;code&gt;.dump&lt;/code&gt; or a class name that the object type should be equal to.</source>
          <target state="translated">&lt;code&gt;class_name_or_coder&lt;/code&gt; - &lt;code&gt;.load&lt;/code&gt; 및 &lt;code&gt;.dump&lt;/code&gt; 에 응답하는 코더 객체 (선택 사항) 또는 객체 유형이 같아야하는 클래스 이름입니다.</target>
        </trans-unit>
        <trans-unit id="8f49280a75236d813a0a80b2cf694f42fccfac93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collection&lt;/code&gt; - An array of objects representing the &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">&lt;code&gt;collection&lt;/code&gt; - &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; 태그를 나타내는 객체의 배열 .</target>
        </trans-unit>
        <trans-unit id="f094791db04e36cec51e0bff5ed4f4a93e6a32a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collection&lt;/code&gt; is a placeholder for the symbol passed as the &lt;code&gt;name&lt;/code&gt; argument, so &lt;code&gt;has_and_belongs_to_many
:categories&lt;/code&gt; would add among others &lt;code&gt;categories.empty?&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;collection&lt;/code&gt; 은 &lt;code&gt;name&lt;/code&gt; 인수 로 전달 된 기호의 자리 표시 자 이므로 &lt;code&gt;has_and_belongs_to_many :categories&lt;/code&gt; 는 다른 &lt;code&gt;categories.empty?&lt;/code&gt; 중에서 추가합니다 . .</target>
        </trans-unit>
        <trans-unit id="451b5ee471a17aeb4a1c96d356d1c4bc81d11283" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collection&lt;/code&gt; is a placeholder for the symbol passed as the &lt;code&gt;name&lt;/code&gt; argument, so &lt;code&gt;has_many :clients&lt;/code&gt; would add among others &lt;code&gt;clients.empty?&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;collection&lt;/code&gt; 은 &lt;code&gt;name&lt;/code&gt; 인수 로 전달 된 기호의 자리 표시 자 이므로 &lt;code&gt;has_many :clients&lt;/code&gt; 가 다른 client 들 중에서 추가 할 것입니다 &lt;code&gt;clients.empty?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="211afedf16c4a3f8c66f8a441f2df546db654350" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;comment&lt;/code&gt; Adds a comment for the column.</source>
          <target state="translated">&lt;code&gt;comment&lt;/code&gt; 열에 주석을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="70f397e63cd07ca9bd9bada0370df8768bc041be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;composed_of :balance, class_name: 'Money'&lt;/code&gt; returns &lt;code&gt;:balance&lt;/code&gt;&lt;code&gt;has_many :clients&lt;/code&gt; returns &lt;code&gt;:clients&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;composed_of :balance, class_name: 'Money'&lt;/code&gt; 는 &lt;code&gt;:balance&lt;/code&gt; 리턴합니다 . : balance &lt;code&gt;has_many :clients&lt;/code&gt; 는 &lt;code&gt;:clients&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="fa1d2a696c8d8b487e1ffcbbd57ee8312974d8e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;composed_of :balance, class_name: 'Money'&lt;/code&gt; returns &lt;code&gt;{ class_name: &quot;Money&quot; }&lt;/code&gt;&lt;code&gt;has_many
:clients&lt;/code&gt; returns &lt;code&gt;{}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;composed_of :balance, class_name: 'Money'&lt;/code&gt; 는 &lt;code&gt;{ class_name: &quot;Money&quot; }&lt;/code&gt; 리턴합니다 &lt;code&gt;has_many :clients&lt;/code&gt; } has_many : clients 는 &lt;code&gt;{}&lt;/code&gt; 을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9f0dcfb6cbccd282a49be85013336aa694200ef6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;composed_of :balance, class_name: 'Money'&lt;/code&gt; returns the Money class &lt;code&gt;has_many :clients&lt;/code&gt; returns the Client class</source>
          <target state="translated">&lt;code&gt;composed_of :balance, class_name: 'Money'&lt;/code&gt; 는 Money 클래스를 리턴합니다 &lt;code&gt;has_many :clients&lt;/code&gt; 는 Client 클래스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="41ec8159ee8e349af96cac18a838fc0dd4266051" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_cable.mount_path&lt;/code&gt; accepts a string for where to mount Action Cable, as part of the main server process. Defaults to &lt;code&gt;/cable&lt;/code&gt;. You can set this as nil to not mount Action Cable as part of your normal Rails server.</source>
          <target state="translated">&lt;code&gt;config.action_cable.mount_path&lt;/code&gt; 는 기본 서버 프로세스의 일부로 Action Cable을 마운트 할 위치에 대한 문자열을 허용합니다. 기본값은 &lt;code&gt;/cable&lt;/code&gt; 입니다. Action Rails를 일반 Rails 서버의 일부로 마운트하지 않으려면 이것을 nil로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5dde0ca428647294e8a84c24065e373ddb6c791b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_cable.url&lt;/code&gt; accepts a string for the URL for where you are hosting your Action Cable server. You would use this option if you are running Action Cable servers that are separated from your main application.</source>
          <target state="translated">&lt;code&gt;config.action_cable.url&lt;/code&gt; 은 Action Cable 서버를 호스팅하는 URL의 문자열을 허용합니다. 기본 애플리케이션과 분리 된 Action Cable 서버를 실행중인 경우이 옵션을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="16a6b213d6d5b9eee1431db7d2cd9161417e7b40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.action_on_unpermitted_parameters&lt;/code&gt; enables logging or raising an exception if parameters that are not explicitly permitted are found. Set to &lt;code&gt;:log&lt;/code&gt; or &lt;code&gt;:raise&lt;/code&gt; to enable. The default value is &lt;code&gt;:log&lt;/code&gt; in development and test environments, and &lt;code&gt;false&lt;/code&gt; in all other environments.</source>
          <target state="translated">&lt;code&gt;config.action_controller.action_on_unpermitted_parameters&lt;/code&gt; 는 명시 적으로 허용되지 않은 매개 변수가있는 경우 로깅을 기록하거나 예외를 발생시킵니다. 활성화 하려면 &lt;code&gt;:log&lt;/code&gt; 또는 &lt;code&gt;:raise&lt;/code&gt; 로 설정하십시오. 기본값은 개발 및 테스트 환경에서 &lt;code&gt;:log&lt;/code&gt; 이고 다른 모든 환경에서는 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4c5a76e4bdad585d13b55c48c75c11d37c0dd331" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.allow_forgery_protection&lt;/code&gt; enables or disables CSRF protection. By default this is &lt;code&gt;false&lt;/code&gt; in test mode and &lt;code&gt;true&lt;/code&gt; in all other modes.</source>
          <target state="translated">&lt;code&gt;config.action_controller.allow_forgery_protection&lt;/code&gt; 은 CSRF 보호를 활성화 또는 비활성화합니다. 기본적 으로 테스트 모드에서는 &lt;code&gt;false&lt;/code&gt; 이고 다른 모든 모드에서는 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="31c0ea174a3d664bec37d758cd9f5afdf20c3c2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.always_permitted_parameters&lt;/code&gt; sets a list of permitted parameters that are permitted by default. The default values are &lt;code&gt;['controller', 'action']&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_controller.always_permitted_parameters&lt;/code&gt; 는 기본적으로 허용되는 허용 된 매개 변수 목록을 설정합니다. 기본값은 &lt;code&gt;['controller', 'action']&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a5e06de81747323de691e5f00d6b125d34533c8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.asset_host&lt;/code&gt; sets the host for the assets. Useful when CDNs are used for hosting assets rather than the application server itself.</source>
          <target state="translated">&lt;code&gt;config.action_controller.asset_host&lt;/code&gt; 는 자산의 호스트를 설정합니다. CDN이 응용 프로그램 서버가 아닌 자산을 호스팅하는 데 사용될 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5da9b993916082e54a361c6169defe45676c7400" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.default_protect_from_forgery&lt;/code&gt; determines whether forgery protection is added on &lt;code&gt;ActionController:Base&lt;/code&gt;. This is false by default.</source>
          <target state="translated">&lt;code&gt;config.action_controller.default_protect_from_forgery&lt;/code&gt; 는 위조 방지가 &lt;code&gt;ActionController:Base&lt;/code&gt; 에 추가되는지 여부를 결정합니다 . 기본적으로 false입니다.</target>
        </trans-unit>
        <trans-unit id="4615b1fe12391ad857100581dd8aba152e7600d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.default_protect_from_forgery&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.action_controller.default_protect_from_forgery&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="217ad479a2e2560f8d21ef5ec6453e8062215d35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.default_static_extension&lt;/code&gt; configures the extension used for cached pages. Defaults to &lt;code&gt;.html&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_controller.default_static_extension&lt;/code&gt; 은 캐시 된 페이지에 사용되는 확장을 구성합니다. 기본값은 &lt;code&gt;.html&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6bd917af04fce7b9d6d305c23d6d9efa58f0d5eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.enable_fragment_cache_logging&lt;/code&gt; determines whether to log fragment cache reads and writes in verbose format as follows:</source>
          <target state="translated">&lt;code&gt;config.action_controller.enable_fragment_cache_logging&lt;/code&gt; 은 다음과 같이 단편 캐시 읽기 및 쓰기를 자세한 형식으로 로그할지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="e1a3fc8b6eb624a0798d2c291a4ee275a43fb366" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.forgery_protection_origin_check&lt;/code&gt; configures whether the HTTP &lt;code&gt;Origin&lt;/code&gt; header should be checked against the site's origin as an additional CSRF defense.</source>
          <target state="translated">&lt;code&gt;config.action_controller.forgery_protection_origin_check&lt;/code&gt; 는 HTTP &lt;code&gt;Origin&lt;/code&gt; 헤더를 추가 CSRF 방어로 사이트의 출처와 비교하여 검사 해야하는지 여부를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="9edc72df4b6594684f285f345d7c8340cfbe349a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.forgery_protection_origin_check&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.action_controller.forgery_protection_origin_check&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65c87964d6b2594fb223a3ee68474e28265aaea1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.include_all_helpers&lt;/code&gt; configures whether all view helpers are available everywhere or are scoped to the corresponding controller. If set to &lt;code&gt;false&lt;/code&gt;, &lt;code&gt;UsersHelper&lt;/code&gt; methods are only available for views rendered as part of &lt;code&gt;UsersController&lt;/code&gt;. If &lt;code&gt;true&lt;/code&gt;, &lt;code&gt;UsersHelper&lt;/code&gt; methods are available everywhere. The default configuration behavior (when this option is not explicitly set to &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;) is that all view helpers are available to each controller.</source>
          <target state="translated">&lt;code&gt;config.action_controller.include_all_helpers&lt;/code&gt; 는 모든 뷰 헬퍼가 모든 곳에서 사용 가능한지 또는 해당 컨트롤러로 범위를 지정할지 여부를 구성합니다. 로 설정하면 &lt;code&gt;false&lt;/code&gt; , &lt;code&gt;UsersHelper&lt;/code&gt; 의 방법의 일부로서 렌더링보기에만 사용할 &lt;code&gt;UsersController&lt;/code&gt; . &lt;code&gt;true&lt;/code&gt; 인 경우 &lt;code&gt;UsersHelper&lt;/code&gt; 메소드를 모든 곳에서 사용할 수 있습니다. 기본 구성 동작 (이 옵션이 명시 적으로 &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; 로 설정되지 않은 경우 )은 모든보기 헬퍼가 각 컨트롤러에서 사용 가능하다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e706e2a7b50be2f6d0834a3e633bea6c81c35f8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.logger&lt;/code&gt; accepts a logger conforming to the interface of Log4r or the default Ruby Logger class, which is then used to log information from Action Controller. Set to &lt;code&gt;nil&lt;/code&gt; to disable logging.</source>
          <target state="translated">&lt;code&gt;config.action_controller.logger&lt;/code&gt; 는 Log4r의 인터페이스 또는 기본 Ruby Logger 클래스를 준수하는 로거를 승인 한 후 Action Controller에서 정보를 기록하는 데 사용됩니다. 로깅을 사용하지 않으 려면 &lt;code&gt;nil&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="ba3b5a5e2447ed9120d0f68a54dcfeb7ad5c70e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.per_form_csrf_tokens&lt;/code&gt; configures whether CSRF tokens are only valid for the method/action they were generated for.</source>
          <target state="translated">&lt;code&gt;config.action_controller.per_form_csrf_tokens&lt;/code&gt; 는 CSRF 토큰이 생성 된 메소드 / 액션에만 유효한지 여부를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="6137198e5a8dcf6885496b0e69a1eb449bee5302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.per_form_csrf_tokens&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.action_controller.per_form_csrf_tokens&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1bb69ae75697209d48c6f195c80435c75025c16c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.perform_caching&lt;/code&gt; configures whether the application should perform the caching features provided by the Action Controller component or not. Set to &lt;code&gt;false&lt;/code&gt; in development mode, &lt;code&gt;true&lt;/code&gt; in production. If it's not specified, the default will be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_controller.perform_caching&lt;/code&gt; 은 애플리케이션이 Action Controller 구성 요소가 제공하는 캐싱 기능을 수행해야하는지 여부를 구성합니다. 개발 모드에서는 &lt;code&gt;false&lt;/code&gt; 로 설정하고 프로덕션 에서는 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . 지정하지 않으면 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="470a95294d34c7afda36907b151996bf2dad79d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.permit_all_parameters&lt;/code&gt; sets all the parameters for mass assignment to be permitted by default. The default value is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_controller.permit_all_parameters&lt;/code&gt; 는 대량 할당에 대한 모든 매개 변수가 기본적으로 허용되도록 설정합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2d756e02cab2bcd6b5fee03a3cbd1184c2377079" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.relative_url_root&lt;/code&gt; can be used to tell Rails that you are &lt;a href=&quot;configuring#deploy-to-a-subdirectory-relative-url-root&quot;&gt;deploying to a subdirectory&lt;/a&gt;. The default is &lt;code&gt;ENV['RAILS_RELATIVE_URL_ROOT']&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_controller.relative_url_root&lt;/code&gt; 를 사용하여 &lt;a href=&quot;configuring#deploy-to-a-subdirectory-relative-url-root&quot;&gt;하위 디렉토리에 배포하고&lt;/a&gt; 있음을 Rails에 알릴 수 있습니다 . 기본값은 &lt;code&gt;ENV['RAILS_RELATIVE_URL_ROOT']&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="262274e6bee6945fd01aeb89898f3eb9c1c2cb72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller.request_forgery_protection_token&lt;/code&gt; sets the token parameter name for RequestForgery. Calling &lt;code&gt;protect_from_forgery&lt;/code&gt; sets it to &lt;code&gt;:authenticity_token&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;config.action_controller.request_forgery_protection_token&lt;/code&gt; 은 RequestForgery의 토큰 매개 변수 이름을 설정합니다. &lt;code&gt;protect_from_forgery&lt;/code&gt; 를 호출 하면 기본적 으로 &lt;code&gt;:authenticity_token&lt;/code&gt; 으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e1fb36b6d3806945567dd89e4632b72778d214e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_controller&lt;/code&gt; includes a number of configuration settings:</source>
          <target state="translated">&lt;code&gt;config.action_controller&lt;/code&gt; 에는 여러 구성 설정이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecb8d7dfe896e30a126331f37a9b982c5b28cbef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.authenticated_encrypted_cookie_salt&lt;/code&gt; sets the authenticated encrypted cookie salt. Defaults to &lt;code&gt;'authenticated encrypted
cookie'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.authenticated_encrypted_cookie_salt&lt;/code&gt; 는 인증 된 암호화 쿠키 솔트를 설정합니다. 기본값은 &lt;code&gt;'authenticated encrypted cookie'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="aa8bc94163ff7ddc5b5a76957183c3ea59659583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.cookies_rotations&lt;/code&gt; allows rotating secrets, ciphers, and digests for encrypted and signed cookies.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.cookies_rotations&lt;/code&gt; 를 사용하면 암호화 및 서명 된 쿠키의 비밀, 암호 및 요약을 순환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e9f8f2e5de807f9747c8c8d6970e2827f825780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.default_charset&lt;/code&gt; specifies the default character set for all renders. Defaults to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.default_charset&lt;/code&gt; 은 모든 렌더링에 대한 기본 문자 세트를 지정합니다. 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="78a0f42c4220b5e28c14153ba4073082e392bc25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.default_headers&lt;/code&gt; is a hash with HTTP headers that are set by default in each response. By default, this is defined as:</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.default_headers&lt;/code&gt; 는 각 응답에서 기본적으로 설정되는 HTTP 헤더가있는 해시입니다. 기본적으로 이것은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="70a8ac49b59e483e21695f84a743450fc6f9d7e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.encrypted_cookie_cipher&lt;/code&gt; sets the cipher to be used for encrypted cookies. This defaults to &lt;code&gt;&quot;aes-256-gcm&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.encrypted_cookie_cipher&lt;/code&gt; 는 암호화 된 쿠키에 사용될 암호를 설정합니다. 기본값은 &lt;code&gt;&quot;aes-256-gcm&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="36b2768535e93073d6a2e0fdbd6579323ff6e3ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.encrypted_cookie_salt&lt;/code&gt; sets the encrypted cookies salt value. Defaults to &lt;code&gt;'encrypted cookie'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.encrypted_cookie_salt&lt;/code&gt; 는 암호화 된 쿠키 솔트 값을 설정합니다. 기본값은 &lt;code&gt;'encrypted cookie'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b283e37e6d5399508188c6bc7e9ee8f7230eba09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.encrypted_signed_cookie_salt&lt;/code&gt; sets the signed encrypted cookies salt value. Defaults to &lt;code&gt;'signed encrypted cookie'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.encrypted_signed_cookie_salt&lt;/code&gt; 는 서명 된 암호화 쿠키 솔트 값을 설정합니다. 기본적으로 &lt;code&gt;'signed encrypted cookie'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="45cf65e07fdffe34cbc0064638133d65d25af08f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.http_auth_salt&lt;/code&gt; sets the HTTP Auth salt value. Defaults to &lt;code&gt;'http authentication'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.http_auth_salt&lt;/code&gt; 는 HTTP 인증 솔트 값을 설정합니다. 기본값은 &lt;code&gt;'http authentication'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7235be508d4ca8220086a495fa2b9ba83d821f4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.ignore_accept_header&lt;/code&gt; is used to determine whether to ignore accept headers from a request. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.ignore_accept_header&lt;/code&gt; 는 요청에서 수락 헤더를 무시할지 여부를 결정하는 데 사용됩니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="14160cc7a22372420629ecb1c0d2123344d6e618" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.perform_deep_munge&lt;/code&gt; configures whether &lt;code&gt;deep_munge&lt;/code&gt; method should be performed on the parameters. See &lt;a href=&quot;security#unsafe-query-generation&quot;&gt;Security Guide&lt;/a&gt; for more information. It defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.perform_deep_munge&lt;/code&gt; 는 매개 변수에 대해 &lt;code&gt;deep_munge&lt;/code&gt; 메소드를 수행 해야하는지 여부를 구성합니다 . 자세한 내용은 &lt;a href=&quot;security#unsafe-query-generation&quot;&gt;보안 안내서&lt;/a&gt; 를 참조하십시오. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f71e0f36235b749449dde2e95523c50c95430ef6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.rescue_responses&lt;/code&gt; configures what exceptions are assigned to an HTTP status. It accepts a hash and you can specify pairs of exception/status. By default, this is defined as:</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.rescue_responses&lt;/code&gt; 는 HTTP 상태에 할당되는 예외를 구성합니다. 해시를 허용하며 예외 / 상태 쌍을 지정할 수 있습니다. 기본적으로 이것은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="7274f36743997eb922c9ff62bfb187e426fe2f04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.return_only_media_type_on_content_type&lt;/code&gt; change the return value of &lt;code&gt;ActionDispatch::Response#content_type&lt;/code&gt; to the Content-Type header without modification. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.return_only_media_type_on_content_type&lt;/code&gt; &lt;code&gt;ActionDispatch::Response#content_type&lt;/code&gt; 의 반환 값을 수정하지 않고 Content-Type 헤더로 변경합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3d77d26b0fca8c9a108b95e34ccf590ea392b393" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.return_only_media_type_on_content_type&lt;/code&gt;: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.return_only_media_type_on_content_type&lt;/code&gt; : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8c129ca24a5a7413ea7de569e1df42d72578ca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.session_store&lt;/code&gt; sets the name of the store for session data. The default is &lt;code&gt;:cookie_store&lt;/code&gt;; other valid options include &lt;code&gt;:active_record_store&lt;/code&gt;, &lt;code&gt;:mem_cache_store&lt;/code&gt; or the name of your own custom class.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.session_store&lt;/code&gt; 는 세션 데이터의 저장소 이름을 설정합니다. 디폴트는 &lt;code&gt;:cookie_store&lt;/code&gt; 입니다 . 다른 유효한 옵션으로는 &lt;code&gt;:active_record_store&lt;/code&gt; , &lt;code&gt;:mem_cache_store&lt;/code&gt; 또는 사용자 정의 클래스 이름이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d29706ec7770b99674bf9f902ad1e31efcf4c82d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.signed_cookie_digest&lt;/code&gt; sets the digest to be used for signed cookies. This defaults to &lt;code&gt;&quot;SHA1&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.signed_cookie_digest&lt;/code&gt; 는 서명 된 쿠키에 사용될 다이제스트를 설정합니다. 기본값은 &lt;code&gt;&quot;SHA1&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b577e53466fc6598066c47e522fc029ac31b0446" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.signed_cookie_salt&lt;/code&gt; sets the signed cookies salt value. Defaults to &lt;code&gt;'signed cookie'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.signed_cookie_salt&lt;/code&gt; 는 서명 된 쿠키 솔트 값을 설정합니다. 기본값은 &lt;code&gt;'signed cookie'&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f91527032dac269af4f05fb02c52091a3d0f55f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.tld_length&lt;/code&gt; sets the TLD (top-level domain) length for the application. Defaults to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.tld_length&lt;/code&gt; 는 애플리케이션의 TLD (최상위 도메인) 길이를 설정합니다. 기본값은 &lt;code&gt;1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ce83ee8d5b8b2c7b607f14b8ea56a5e60b5c92ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.use_authenticated_cookie_encryption&lt;/code&gt; controls whether signed and encrypted cookies use the AES-256-GCM cipher or the older AES-256-CBC cipher. It defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.use_authenticated_cookie_encryption&lt;/code&gt; 은 서명 및 암호화 된 쿠키가 AES-256-GCM 암호를 사용하는지 또는 이전 AES-256-CBC 암호를 사용 하는지를 제어합니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a0550755d9a4b5ed8525305b4f36c54f1a86d742" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.use_cookies_with_metadata&lt;/code&gt; enables writing cookies with the purpose and expiry metadata embedded. It defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.use_cookies_with_metadata&lt;/code&gt; 를 사용하면 목적 및 만료 메타 데이터가 포함 된 쿠키를 작성할 수 있습니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a0c13b02b40ed86283f702960a8c24f3ea1316df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.use_cookies_with_metadata&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.use_cookies_with_metadata&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fea9c4e26e90a57e65f08b15b0e789245f52e4db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_dispatch.x_sendfile_header&lt;/code&gt; specifies server specific X-Sendfile header. This is useful for accelerated file sending from server. For example it can be set to 'X-Sendfile' for Apache.</source>
          <target state="translated">&lt;code&gt;config.action_dispatch.x_sendfile_header&lt;/code&gt; 는 서버 특정 X-Sendfile 헤더를 지정합니다. 서버에서 파일을 빠르게 전송하는 데 유용합니다. 예를 들어 Apache의 경우 'X-Sendfile'로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98b225a7ed985dca9db61896ac8af62176595bc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailbox.incinerate_after&lt;/code&gt; accepts an &lt;code&gt;ActiveSupport::Duration&lt;/code&gt; indicating how long after processing &lt;code&gt;ActionMailbox::InboundEmail&lt;/code&gt; records should be destroyed. It defaults to &lt;code&gt;30.days&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_mailbox.incinerate_after&lt;/code&gt; 는 &lt;code&gt;ActionMailbox::InboundEmail&lt;/code&gt; 레코드를 처리 한 후 &lt;code&gt;ActiveSupport::Duration&lt;/code&gt; 나타내는 ActiveSupport :: Duration을 승인합니다 . 기본값은 &lt;code&gt;30.days&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="23ddb29a2e90c91a896193dbe8824cee70dcb505" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailbox.logger&lt;/code&gt; contains the logger used by Action Mailbox. It accepts a logger conforming to the interface of Log4r or the default Ruby Logger class. The default is &lt;code&gt;Rails.logger&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_mailbox.logger&lt;/code&gt; 에는 Action Mailbox에서 사용하는 로거가 포함되어 있습니다. Log4r의 인터페이스 또는 기본 Ruby Logger 클래스를 준수하는 로거를 허용합니다. 기본값은 &lt;code&gt;Rails.logger&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d30d5af04e4ba1e2d42d69c034ccd3482ff074e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailbox.queues.incineration&lt;/code&gt; accepts a symbol indicating the Active Job queue to use for incineration jobs. It defaults to &lt;code&gt;:action_mailbox_incineration&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_mailbox.queues.incineration&lt;/code&gt; 은 소각 작업에 사용할 활성 작업 큐를 나타내는 기호를 허용합니다. 기본값은 &lt;code&gt;:action_mailbox_incineration&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="235c1ad7c6d542412b3d9a999f853616ef90eca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailbox.queues.routing&lt;/code&gt; accepts a symbol indicating the Active Job queue to use for routing jobs. It defaults to &lt;code&gt;:action_mailbox_routing&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_mailbox.queues.routing&lt;/code&gt; 은 라우팅 작업에 사용할 활성 작업 큐를 나타내는 기호를 승인합니다. 기본값은 &lt;code&gt;:action_mailbox_routing&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="15badb056e393bd030ad76df1e98453be9f23499" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailbox&lt;/code&gt; provides the following configuration options:</source>
          <target state="translated">&lt;code&gt;config.action_mailbox&lt;/code&gt; 는 다음 구성 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="105c3164f504fcaf107ad6fcac0c0668da6e5dd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.default_options&lt;/code&gt; configures Action Mailer defaults. Use to set options like &lt;code&gt;from&lt;/code&gt; or &lt;code&gt;reply_to&lt;/code&gt; for every mailer. These default to:</source>
          <target state="translated">&lt;code&gt;config.action_mailer.default_options&lt;/code&gt; 는 Action Mailer 기본값을 구성합니다. 모든 메일러 &lt;code&gt;from&lt;/code&gt; 또는 &lt;code&gt;reply_to&lt;/code&gt; 와 같은 옵션을 설정하는 데 사용하십시오 . 기본값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ca4aac66c21ddedcd268c86cbaf0f79457acb53e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.deliver_later_queue_name&lt;/code&gt; specifies the queue name for mailers. By default this is &lt;code&gt;mailers&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_mailer.deliver_later_queue_name&lt;/code&gt; 은 메일러의 큐 이름을 지정합니다. 기본적으로 이것은 &lt;code&gt;mailers&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b64441d6a478f26d96ed466b2ff41add98aee5c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.delivery_job&lt;/code&gt; specifies delivery job for mail. Defaults to &lt;code&gt;ActionMailer::DeliveryJob&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_mailer.delivery_job&lt;/code&gt; 은 메일 배달 작업을 지정합니다. 기본값은 &lt;code&gt;ActionMailer::DeliveryJob&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7547e4a67309bd029e0a9298a33acb646bd10e05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.delivery_job&lt;/code&gt;: &lt;code&gt;&quot;ActionMailer::MailDeliveryJob&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.action_mailer.delivery_job&lt;/code&gt; : &lt;code&gt;&quot;ActionMailer::MailDeliveryJob&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b291c61515c083228c703951265d377a88b45719" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.delivery_method&lt;/code&gt; defines the delivery method and defaults to &lt;code&gt;:smtp&lt;/code&gt;. See the &lt;a href=&quot;action_mailer_basics#action-mailer-configuration&quot;&gt;configuration section in the Action Mailer guide&lt;/a&gt; for more info.</source>
          <target state="translated">&lt;code&gt;config.action_mailer.delivery_method&lt;/code&gt; 는 전달 방법을 정의하며 기본값은 &lt;code&gt;:smtp&lt;/code&gt; 입니다. 자세한 내용은 &lt;a href=&quot;action_mailer_basics#action-mailer-configuration&quot;&gt;Action Mailer 안내서&lt;/a&gt; 의 구성 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a0c1cd7968dea6d134f232d50217758bd6945c69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.interceptors&lt;/code&gt; registers interceptors which will be called before mail is sent.</source>
          <target state="translated">&lt;code&gt;config.action_mailer.interceptors&lt;/code&gt; 는 메일을 보내기 전에 호출 될 인터셉터를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="30b70df84e445ee4d01f00dbcdb7e9fcbc841472" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.logger&lt;/code&gt; accepts a logger conforming to the interface of Log4r or the default Ruby Logger class, which is then used to log information from Action Mailer. Set to &lt;code&gt;nil&lt;/code&gt; to disable logging.</source>
          <target state="translated">&lt;code&gt;config.action_mailer.logger&lt;/code&gt; 는 Log4r의 인터페이스 또는 기본 Ruby Logger 클래스를 준수하는 로거를 승인 한 후 Action Mailer의 정보를 기록하는 데 사용됩니다. 로깅을 사용하지 않으 려면 &lt;code&gt;nil&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="bf4c7ee9df87c8a7ef6b6d7f0bbdb78225440456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.observers&lt;/code&gt; registers observers which will be notified when mail is delivered.</source>
          <target state="translated">&lt;code&gt;config.action_mailer.observers&lt;/code&gt; 는 메일이 전달 될 때 통지 될 옵저버를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="b4b0e7c26c10439ca11ad9826b78f413174ae226" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.perform_caching&lt;/code&gt; specifies whether the mailer templates should perform fragment caching or not. If it's not specified, the default will be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_mailer.perform_caching&lt;/code&gt; 는 메일러 템플리트가 단편 캐싱을 수행해야하는지 여부를 지정합니다. 지정하지 않으면 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5968e6218e597b0d4118db015d4c5b9264d3578c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.perform_deliveries&lt;/code&gt; specifies whether mail will actually be delivered and is true by default. It can be convenient to set it to &lt;code&gt;false&lt;/code&gt; for testing.</source>
          <target state="translated">&lt;code&gt;config.action_mailer.perform_deliveries&lt;/code&gt; 는 메일이 실제로 배달 될지 여부를 지정하며 기본적으로 true입니다. 테스트 를 위해 &lt;code&gt;false&lt;/code&gt; 로 설정하는 것이 편리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="3685e4df619bac93039869e848320e8cb138ee90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.preview_interceptors&lt;/code&gt; registers interceptors which will be called before mail is previewed.</source>
          <target state="translated">&lt;code&gt;config.action_mailer.preview_interceptors&lt;/code&gt; 는 메일을 미리보기 전에 호출 될 인터셉터를 등록합니다.</target>
        </trans-unit>
        <trans-unit id="32f5771e1c005c1f0c6e07e073ffcb99968dbce2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.preview_path&lt;/code&gt; specifies the location of mailer previews.</source>
          <target state="translated">&lt;code&gt;config.action_mailer.preview_path&lt;/code&gt; 는 메일러 미리보기의 위치를 ​​지정합니다.</target>
        </trans-unit>
        <trans-unit id="5e659324dc65a56c0681d0b7101a24f8e0360c36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.raise_delivery_errors&lt;/code&gt; specifies whether to raise an error if email delivery cannot be completed. It defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_mailer.raise_delivery_errors&lt;/code&gt; 는 이메일 전송을 완료 할 수없는 경우 오류 발생 여부를 지정합니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5ad98c8862f8420eac68d739c83253460a33da01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.sendmail_settings&lt;/code&gt; allows detailed configuration for the &lt;code&gt;sendmail&lt;/code&gt; delivery method. It accepts a hash of options, which can include any of these options:</source>
          <target state="translated">&lt;code&gt;config.action_mailer.sendmail_settings&lt;/code&gt; 는 &lt;code&gt;sendmail&lt;/code&gt; 전달 방법에 대한 자세한 구성을 허용합니다 . 다음 옵션 중 하나를 포함 할 수있는 옵션 해시를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="e2f49a7a9fe5ad3e3f9ccd28f6a8bb04e1ac12cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.show_previews&lt;/code&gt; enable or disable mailer previews. By default this is &lt;code&gt;true&lt;/code&gt; in development.</source>
          <target state="translated">&lt;code&gt;config.action_mailer.show_previews&lt;/code&gt; 메일러 미리보기를 활성화 또는 비활성화합니다. 기본적으로 이것은 개발에 &lt;code&gt;true&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="648ffe72f1f15759bf2a71bdd63a036048cf4302" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_mailer.smtp_settings&lt;/code&gt; allows detailed configuration for the &lt;code&gt;:smtp&lt;/code&gt; delivery method. It accepts a hash of options, which can include any of these options:</source>
          <target state="translated">&lt;code&gt;config.action_mailer.smtp_settings&lt;/code&gt; 는 &lt;code&gt;:smtp&lt;/code&gt; 전달 방법에 대한 세부 구성을 허용합니다 . 다음 옵션 중 하나를 포함 할 수있는 옵션 해시를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="e09d6e1a1d18f01f69af732f3622570821b0fce3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.automatically_disable_submit_tag&lt;/code&gt; determines whether &lt;code&gt;submit_tag&lt;/code&gt; should automatically disable on click, this defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_view.automatically_disable_submit_tag&lt;/code&gt; 는 &lt;code&gt;submit_tag&lt;/code&gt; 가 클릭시 자동으로 비활성화되어야 하는지 여부를 결정합니다 . 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="17059df70ed5a0843af6f5a63515be093d7b21d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.cache_template_loading&lt;/code&gt; controls whether or not templates should be reloaded on each request. Defaults to whatever is set for &lt;code&gt;config.cache_classes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_view.cache_template_loading&lt;/code&gt; 은 각 요청에서 템플릿을 다시로드해야하는지 여부를 제어합니다. &lt;code&gt;config.cache_classes&lt;/code&gt; 에 설정된 값으로 기본 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="1d19f7b0a4c12c6c60b7682521ef1f1b2439cf78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.debug_missing_translation&lt;/code&gt; determines whether to wrap the missing translations key in a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag or not. This defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_view.debug_missing_translation&lt;/code&gt; 은 누락 된 변환 키를 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; 태그 로 랩핑할지 여부를 결정합니다 . 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f0a665f11497ca5397f866803a5836044a86cfe0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.default_enforce_utf8&lt;/code&gt; determines whether forms are generated with a hidden tag that forces older versions of Internet Explorer to submit forms encoded in UTF-8. This defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_view.default_enforce_utf8&lt;/code&gt; 은 이전 버전의 Internet Explorer에서 UTF-8로 인코딩 된 양식을 제출하도록하는 숨겨진 태그로 양식을 생성할지 여부를 결정합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c6eb51b045a10d4c82803bc582fdf8d47808734d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.default_enforce_utf8&lt;/code&gt;: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.action_view.default_enforce_utf8&lt;/code&gt; : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="158092e9f9833de19440cfeaab194e8564926579" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.default_form_builder&lt;/code&gt; tells Rails which form builder to use by default. The default is &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt;. If you want your form builder class to be loaded after initialization (so it's reloaded on each request in development), you can pass it as a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_view.default_form_builder&lt;/code&gt; 는 Rails에게 어떤 폼 빌더가 기본적으로 사용되는지 알려줍니다. 기본값은 &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; 입니다. 초기화 후에 양식 작성기 클래스를로드하려면 (개발중인 각 요청에서 다시로드) &lt;code&gt;String&lt;/code&gt; 으로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c15f2f85e5a277a06c3a4978c22469de9d6808d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.embed_authenticity_token_in_remote_forms&lt;/code&gt; allows you to set the default behavior for &lt;code&gt;authenticity_token&lt;/code&gt; in forms with &lt;code&gt;remote:
true&lt;/code&gt;. By default it's set to &lt;code&gt;false&lt;/code&gt;, which means that remote forms will not include &lt;code&gt;authenticity_token&lt;/code&gt;, which is helpful when you're fragment-caching the form. Remote forms get the authenticity from the &lt;code&gt;meta&lt;/code&gt; tag, so embedding is unnecessary unless you support browsers without JavaScript. In such case you can either pass &lt;code&gt;authenticity_token: true&lt;/code&gt; as a form option or set this config setting to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_view.embed_authenticity_token_in_remote_forms&lt;/code&gt; 를 사용하면 &lt;code&gt;remote: true&lt;/code&gt; 형식의 &lt;code&gt;authenticity_token&lt;/code&gt; 에 대한 기본 동작을 설정할 수 있습니다 . 기본적으로 &lt;code&gt;false&lt;/code&gt; 로 설정되어 원격 양식에는 &lt;code&gt;authenticity_token&lt;/code&gt; 이 포함되지 않으므로 양식을 조각 캐싱 할 때 유용합니다. 원격 양식은 &lt;code&gt;meta&lt;/code&gt; 태그 에서 진위를 얻으 므로 JavaScript가없는 브라우저를 지원하지 않으면 포함 할 필요가 없습니다. 이 경우 양식 옵션으로 &lt;code&gt;authenticity_token: true&lt;/code&gt; 를 전달 하거나이 구성 설정을 &lt;code&gt;true&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc8047ef612415cf2d7af3bbe224081ebed7023b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.erb_trim_mode&lt;/code&gt; gives the trim mode to be used by ERB. It defaults to &lt;code&gt;'-'&lt;/code&gt;, which turns on trimming of tail spaces and newline when using &lt;code&gt;&amp;lt;%= -%&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;%= =%&amp;gt;&lt;/code&gt;. See the &lt;a href=&quot;http://www.kuwata-lab.com/erubis/users-guide.06.html#topics-trimspaces&quot;&gt;Erubis documentation&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;config.action_view.erb_trim_mode&lt;/code&gt; 는 ERB에서 사용할 트림 모드를 제공합니다. 기본값은 &lt;code&gt;'-'&lt;/code&gt; 이며, &lt;code&gt;&amp;lt;%= -%&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;%= =%&amp;gt;&lt;/code&gt; 사용할 때 테일 공간 및 줄 바꿈을 설정 합니다. 자세한 내용은 &lt;a href=&quot;http://www.kuwata-lab.com/erubis/users-guide.06.html#topics-trimspaces&quot;&gt;Erubis 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cb1bab299f63d5fdf898f837fdc681555881ebbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.field_error_proc&lt;/code&gt; provides an HTML generator for displaying errors that come from Active Model. The default is</source>
          <target state="translated">&lt;code&gt;config.action_view.field_error_proc&lt;/code&gt; 는 Active Model에서 발생하는 오류를 표시하기위한 HTML 생성기를 제공합니다. 디폴트는</target>
        </trans-unit>
        <trans-unit id="69764abbfa1ae727f3cb6b7ee09fa7cd56e08101" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.form_with_generates_ids&lt;/code&gt; determines whether &lt;code&gt;form_with&lt;/code&gt; generates ids on inputs. This defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_view.form_with_generates_ids&lt;/code&gt; 는 &lt;code&gt;form_with&lt;/code&gt; 가 입력에서 ID를 생성 하는지 여부를 결정합니다 . 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e7864bf593c60d095c5bd1f6015cbf05618326cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.form_with_generates_ids&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.action_view.form_with_generates_ids&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3862178cbcd704a53ec75e5b955ce9632be8de25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.form_with_generates_remote_forms&lt;/code&gt; determines whether &lt;code&gt;form_with&lt;/code&gt; generates remote forms or not. This defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_view.form_with_generates_remote_forms&lt;/code&gt; 는 &lt;code&gt;form_with&lt;/code&gt; 가 원격 양식을 생성 하는지 여부를 결정합니다 . 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c2a213973bd1fea5a9c7d14ad1f7240634b88faa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.form_with_generates_remote_forms&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.action_view.form_with_generates_remote_forms&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bd84955bb858e3601fdb0a3ba589018ac1abc389" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.logger&lt;/code&gt; accepts a logger conforming to the interface of Log4r or the default Ruby Logger class, which is then used to log information from Action View. Set to &lt;code&gt;nil&lt;/code&gt; to disable logging.</source>
          <target state="translated">&lt;code&gt;config.action_view.logger&lt;/code&gt; 는 Log4r의 인터페이스 또는 기본 Ruby Logger 클래스를 준수하는 로거를 승인 한 후 Action View에서 정보를 기록하는 데 사용됩니다. 로깅을 사용하지 않으 려면 &lt;code&gt;nil&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="694b948235d5a23937949e6760f4ff3f4acf313d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.prefix_partial_path_with_controller_namespace&lt;/code&gt; determines whether or not partials are looked up from a subdirectory in templates rendered from namespaced controllers. For example, consider a controller named &lt;code&gt;Admin::ArticlesController&lt;/code&gt; which renders this template:</source>
          <target state="translated">&lt;code&gt;config.action_view.prefix_partial_path_with_controller_namespace&lt;/code&gt; 는 네임 스페이스 컨트롤러에서 렌더링 된 템플릿의 하위 디렉토리에서 부분을 조회할지 여부를 결정합니다. 예를 들어, 이 템플릿을 렌더링하는 &lt;code&gt;Admin::ArticlesController&lt;/code&gt; 라는 컨트롤러를 생각해보십시오 .</target>
        </trans-unit>
        <trans-unit id="eae1b1879394d616880e2f54fc8967593530167c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view.raise_on_missing_translations&lt;/code&gt; determines whether an error should be raised for missing translations. This defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.action_view.raise_on_missing_translations&lt;/code&gt; 는 누락 된 번역에 대해 오류를 발생시켜야하는지 여부를 결정합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f9cecadb1c20746421cc8f52a41cc1b205209140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.action_view&lt;/code&gt; includes a small number of configuration settings:</source>
          <target state="translated">&lt;code&gt;config.action_view&lt;/code&gt; 에는 적은 수의 구성 설정이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d47b92ddd4d6e4f957e20465e0173d06147f8e6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_job.custom_serializers&lt;/code&gt; allows to set custom argument serializers. Defaults to &lt;code&gt;[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_job.custom_serializers&lt;/code&gt; 를 사용하면 사용자 정의 인수 직렬 변환기를 설정할 수 있습니다. 기본값은 &lt;code&gt;[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0b0631bff47145d11a136f3d88df2ed2a3a2c16c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_job.default_queue_name&lt;/code&gt; can be used to change the default queue name. By default this is &lt;code&gt;&quot;default&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_job.default_queue_name&lt;/code&gt; 을 사용하여 기본 큐 이름을 변경할 수 있습니다. 기본적으로 이것은 &lt;code&gt;&quot;default&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="db7fb8a202d742590e0354644bfd36645721a13d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_job.logger&lt;/code&gt; accepts a logger conforming to the interface of Log4r or the default Ruby Logger class, which is then used to log information from Active Job. You can retrieve this logger by calling &lt;code&gt;logger&lt;/code&gt; on either an Active Job class or an Active Job instance. Set to &lt;code&gt;nil&lt;/code&gt; to disable logging.</source>
          <target state="translated">&lt;code&gt;config.active_job.logger&lt;/code&gt; 는 Log4r의 인터페이스 또는 기본 Ruby Logger 클래스를 준수하는 로거를 승인 한 후 활성 작업의 정보를 기록하는 데 사용됩니다. 당신은 호출하여이 로거를 검색 할 수 있습니다 &lt;code&gt;logger&lt;/code&gt; 활성 작업 클래스 또는 활성 작업 인스턴스 중 하나에. 로깅을 사용하지 않으 려면 &lt;code&gt;nil&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="4a97a73ae37c524d1554c230d47c681a9f2113bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_job.queue_adapter&lt;/code&gt; sets the adapter for the queuing backend. The default adapter is &lt;code&gt;:async&lt;/code&gt;. For an up-to-date list of built-in adapters see the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveJob/QueueAdapters.html&quot;&gt;ActiveJob::QueueAdapters API documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_job.queue_adapter&lt;/code&gt; 는 큐 백엔드에 대한 어댑터를 설정합니다. 기본 어댑터는 &lt;code&gt;:async&lt;/code&gt; 입니다. 내장 어댑터의 최신 목록은 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveJob/QueueAdapters.html&quot;&gt;ActiveJob :: QueueAdapters API 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="693231509a648cad4bfa57adeac9ec99b614b040" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_job.queue_name_delimiter&lt;/code&gt; has a default value of &lt;code&gt;'_'&lt;/code&gt;. If &lt;code&gt;queue_name_prefix&lt;/code&gt; is set, then &lt;code&gt;queue_name_delimiter&lt;/code&gt; joins the prefix and the non-prefixed queue name.</source>
          <target state="translated">&lt;code&gt;config.active_job.queue_name_delimiter&lt;/code&gt; 의 기본값은 &lt;code&gt;'_'&lt;/code&gt; 입니다. 경우 &lt;code&gt;queue_name_prefix&lt;/code&gt; 가 설정되어, 다음 &lt;code&gt;queue_name_delimiter&lt;/code&gt; 접두사와 비 앞에 둔 큐 이름을 결합한다.</target>
        </trans-unit>
        <trans-unit id="a697bcd4a4bcbdcc9bc81ebeb33d66e3f823bd3c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_job.queue_name_prefix&lt;/code&gt; allows you to set an optional, non-blank, queue name prefix for all jobs. By default it is blank and not used.</source>
          <target state="translated">&lt;code&gt;config.active_job.queue_name_prefix&lt;/code&gt; 를 사용하면 모든 작업에 대해 공백이 아닌 선택적 대기열 이름 접 두부를 설정할 수 있습니다. 기본적으로 비어 있으며 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="139cb77661bc161f273b63130c59ea2849e5a35a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_job.return_false_on_aborted_enqueue&lt;/code&gt; change the return value of &lt;code&gt;#enqueue&lt;/code&gt; to false instead of the job instance when the enqueuing is aborted. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_job.return_false_on_aborted_enqueue&lt;/code&gt; 는 대기열이 중단 될 때 작업 인스턴스 대신 &lt;code&gt;#enqueue&lt;/code&gt; 의 반환 값 을 false 로 변경합니다 . 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1207d002d88236d67d2f16bd19846d8d4a5f06bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_job.return_false_on_aborted_enqueue&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.active_job.return_false_on_aborted_enqueue&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b3ef141816ba23b6a5e5572e977d68c496f04c7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_job&lt;/code&gt; provides the following configuration options:</source>
          <target state="translated">&lt;code&gt;config.active_job&lt;/code&gt; 은 다음 구성 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a53c688b4b91ca161b2b16ad6b80e3879d8013ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_model.i18n_customize_full_message&lt;/code&gt; is a boolean value which controls whether the &lt;code&gt;full_message&lt;/code&gt; error format can be overridden at the attribute or model level in the locale files. This is &lt;code&gt;false&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;config.active_model.i18n_customize_full_message&lt;/code&gt; 는 로케일 파일의 속성 또는 모델 레벨에서 &lt;code&gt;full_message&lt;/code&gt; 오류 형식을 대체 할 수 있는지 여부를 제어하는 ​​부울 값입니다 . 이다 &lt;code&gt;false&lt;/code&gt; 기본적으로.</target>
        </trans-unit>
        <trans-unit id="fc6c84611e75906b556feb2f92740bc7504cbdff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.belongs_to_required_by_default&lt;/code&gt; is a boolean value and controls whether a record fails validation if &lt;code&gt;belongs_to&lt;/code&gt; association is not present.</source>
          <target state="translated">&lt;code&gt;config.active_record.belongs_to_required_by_default&lt;/code&gt; 는 부울 값이며, &lt;code&gt;belongs_to&lt;/code&gt; 연관이 존재하지 않을 경우 레코드가 유효성 검사에 실패하는지 여부를 제어합니다 .</target>
        </trans-unit>
        <trans-unit id="b6c8671b453f2d88fbdd018e8c635f8045094f82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.belongs_to_required_by_default&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.active_record.belongs_to_required_by_default&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cc2aeb65bab45c371e80bde0c1b66fb2dce78401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.cache_timestamp_format&lt;/code&gt; controls the format of the timestamp value in the cache key. Default is &lt;code&gt;:usec&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_record.cache_timestamp_format&lt;/code&gt; 은 캐시 키에서 타임 스탬프 값의 형식을 제어합니다. 기본값은 &lt;code&gt;:usec&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5446bdfc0e1ed96ff4b03f9b13389571bb416c5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.cache_versioning&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.active_record.cache_versioning&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f5d6e0884d604d3843725d5a27da3272329660f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.collection_cache_versioning&lt;/code&gt; enables the same cache key to be reused when the object being cached of type &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; changes by moving the volatile information (max updated at and count) of the relation's cache key into the cache version to support recycling cache key. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_record.collection_cache_versioning&lt;/code&gt; 을 사용하면 &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; 유형의 캐시 된 객체가 캐시 재순환을 지원하기 위해 관계 캐시 키의 휘발성 정보 (최대 업데이트 시점 및 개수)를 캐시 버전으로 이동하여 변경 시 동일한 캐시 키를 재사용 할 수 있습니다. 키. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="37efc7f764621cd5b4f1be986fc499e6e8145bcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.collection_cache_versioning&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.active_record.collection_cache_versioning&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7dd6a395f8914416fa8b556f2921272271e40a96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.default_timezone&lt;/code&gt; determines whether to use &lt;code&gt;Time.local&lt;/code&gt; (if set to &lt;code&gt;:local&lt;/code&gt;) or &lt;code&gt;Time.utc&lt;/code&gt; (if set to &lt;code&gt;:utc&lt;/code&gt;) when pulling dates and times from the database. The default is &lt;code&gt;:utc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_record.default_timezone&lt;/code&gt; 는 사용 여부 &lt;code&gt;Time.local&lt;/code&gt; 을 (로 설정된 경우 &lt;code&gt;:local&lt;/code&gt; ) 또는 &lt;code&gt;Time.utc&lt;/code&gt; (만약 세트 &lt;code&gt;:utc&lt;/code&gt; ) 데이터베이스로부터 날짜와 시간을 당길 때. 기본값은 &lt;code&gt;:utc&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3825488dd0906fbf4a94294dc93106ad7a5a2d0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.dump_schema_after_migration&lt;/code&gt; is a flag which controls whether or not schema dump should happen (&lt;code&gt;db/schema.rb&lt;/code&gt; or &lt;code&gt;db/structure.sql&lt;/code&gt;) when you run migrations. This is set to &lt;code&gt;false&lt;/code&gt; in &lt;code&gt;config/environments/production.rb&lt;/code&gt; which is generated by Rails. The default value is &lt;code&gt;true&lt;/code&gt; if this configuration is not set.</source>
          <target state="translated">&lt;code&gt;config.active_record.dump_schema_after_migration&lt;/code&gt; 은 마이그레이션을 실행할 때 스키마 덤프 발생 여부 ( &lt;code&gt;db/schema.rb&lt;/code&gt; 또는 &lt;code&gt;db/structure.sql&lt;/code&gt; ) 를 제어하는 ​​플래그입니다 . 이것은로 설정 &lt;code&gt;false&lt;/code&gt; 으로 &lt;code&gt;config/environments/production.rb&lt;/code&gt; 레일에 의해 생성된다. 이 구성이 설정되지 않은 경우 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0c0fe3a2794faf555760aea26eb5ef7f7c437bdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.dump_schemas&lt;/code&gt; controls which database schemas will be dumped when calling &lt;code&gt;db:structure:dump&lt;/code&gt;. The options are &lt;code&gt;:schema_search_path&lt;/code&gt; (the default) which dumps any schemas listed in &lt;code&gt;schema_search_path&lt;/code&gt;, &lt;code&gt;:all&lt;/code&gt; which always dumps all schemas regardless of the &lt;code&gt;schema_search_path&lt;/code&gt;, or a string of comma separated schemas.</source>
          <target state="translated">&lt;code&gt;config.active_record.dump_schemas&lt;/code&gt; 는 &lt;code&gt;db:structure:dump&lt;/code&gt; 를 호출 할 때 덤프 할 데이터베이스 스키마를 제어합니다 . 옵션은 &lt;code&gt;:schema_search_path&lt;/code&gt; 어떤에 나열된 스키마 덤프 (기본값) &lt;code&gt;schema_search_path&lt;/code&gt; , &lt;code&gt;:all&lt;/code&gt; 항상 관계없이 모든 스키마를 덤프 &lt;code&gt;schema_search_path&lt;/code&gt; 을 , 또는 쉼표의 문자열 스키마를 분리.</target>
        </trans-unit>
        <trans-unit id="62aed07b52c840f19dcb905e74df05bd682f37ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.error_on_ignored_order&lt;/code&gt; specifies if an error should be raised if the order of a query is ignored during a batch query. The options are &lt;code&gt;true&lt;/code&gt; (raise error) or &lt;code&gt;false&lt;/code&gt; (warn). Default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_record.error_on_ignored_order&lt;/code&gt; 는 일괄 쿼리 중에 쿼리 순서가 무시되는 경우 오류가 발생해야하는지 여부를 지정합니다. 옵션은 &lt;code&gt;true&lt;/code&gt; (오류 발생) 또는 &lt;code&gt;false&lt;/code&gt; (경고)입니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1a0a6e6cc30d0463e6a116682fcc0e4cee58142e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.index_nested_attribute_errors&lt;/code&gt; allows errors for nested &lt;code&gt;has_many&lt;/code&gt; relationships to be displayed with an index as well as the error. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_record.index_nested_attribute_errors&lt;/code&gt; 를 사용하면 중첩 된 &lt;code&gt;has_many&lt;/code&gt; 관계에 대한 오류를 색인과 함께 오류와 함께 표시 할 수 있습니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="06552fdc411ad7d618bf556718c40b5c09a7543c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.internal_metadata_table_name&lt;/code&gt; lets you set a string to be used as the name of the internal metadata table.</source>
          <target state="translated">&lt;code&gt;config.active_record.internal_metadata_table_name&lt;/code&gt; 을 사용하면 내부 메타 데이터 테이블의 이름으로 사용할 문자열을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54262a3fbb10c1ccbb13e8653f6835b96d4c84c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.lock_optimistically&lt;/code&gt; controls whether Active Record will use optimistic locking and is &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;config.active_record.lock_optimistically&lt;/code&gt; 는 Active Record가 낙관적 잠금을 사용할지 여부를 제어 하며 기본적으로 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3a1ab39b63edd536d5f9a6c0180263a854b029b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.logger&lt;/code&gt; accepts a logger conforming to the interface of Log4r or the default Ruby Logger class, which is then passed on to any new database connections made. You can retrieve this logger by calling &lt;code&gt;logger&lt;/code&gt; on either an Active Record model class or an Active Record model instance. Set to &lt;code&gt;nil&lt;/code&gt; to disable logging.</source>
          <target state="translated">&lt;code&gt;config.active_record.logger&lt;/code&gt; 는 Log4r의 인터페이스 또는 기본 Ruby Logger 클래스를 준수하는 로거를 승인 한 후 작성된 새 데이터베이스 연결로 전달됩니다. 당신은 호출하여이 로거를 검색 할 수 있습니다 &lt;code&gt;logger&lt;/code&gt; 액티브 레코드 모델 클래스 나 액티브 레코드 모델 인스턴스 중 하나에. 로깅을 사용하지 않으 려면 &lt;code&gt;nil&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="bd66ffda0972ef1aeba4dd9f2f84ab2501b24824" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.maintain_test_schema&lt;/code&gt; is a boolean value which controls whether Active Record should try to keep your test database schema up-to-date with &lt;code&gt;db/schema.rb&lt;/code&gt; (or &lt;code&gt;db/structure.sql&lt;/code&gt;) when you run your tests. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_record.maintain_test_schema&lt;/code&gt; 는 테스트 를 실행할 때 Active Record가 &lt;code&gt;db/schema.rb&lt;/code&gt; (또는 &lt;code&gt;db/structure.sql&lt;/code&gt; )를 사용 하여 테스트 데이터베이스 스키마를 최신 상태로 유지해야하는지 여부를 제어하는 ​​부울 값입니다 . 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7149353d864540f111c971fb17f250efcc1d1b63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.partial_writes&lt;/code&gt; is a boolean value and controls whether or not partial writes are used (i.e. whether updates only set attributes that are dirty). Note that when using partial writes, you should also use optimistic locking &lt;code&gt;config.active_record.lock_optimistically&lt;/code&gt; since concurrent updates may write attributes based on a possibly stale read state. The default value is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_record.partial_writes&lt;/code&gt; 는 부울 값이며 부분 쓰기 사용 여부 (즉, 더티가 설정된 속성 만 업데이트하는지 여부)를 제어합니다. 부분 쓰기를 사용하는 경우 동시 업데이트가 오래된 읽기 상태에 따라 속성을 쓸 수 있으므로 낙관적 잠금 &lt;code&gt;config.active_record.lock_optimistically&lt;/code&gt; 도 사용해야 합니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b84629d0686c3d45882648a79a96ffbed90f1700" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.pluralize_table_names&lt;/code&gt; specifies whether Rails will look for singular or plural table names in the database. If set to &lt;code&gt;true&lt;/code&gt; (the default), then the Customer class will use the &lt;code&gt;customers&lt;/code&gt; table. If set to false, then the Customer class will use the &lt;code&gt;customer&lt;/code&gt; table.</source>
          <target state="translated">&lt;code&gt;config.active_record.pluralize_table_names&lt;/code&gt; 는 Rails가 데이터베이스에서 단일 또는 복수 테이블 이름을 찾을 지 여부를 지정합니다. 로 설정하면 &lt;code&gt;true&lt;/code&gt; (기본), 다음 고객 클래스는 사용 &lt;code&gt;customers&lt;/code&gt; 테이블을. false로 설정하면 Customer 클래스가 &lt;code&gt;customer&lt;/code&gt; 테이블 을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="36204bca936a2108842031fa0c0683f115396a56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.primary_key_prefix_type&lt;/code&gt; lets you adjust the naming for primary key columns. By default, Rails assumes that primary key columns are named &lt;code&gt;id&lt;/code&gt; (and this configuration option doesn't need to be set.) There are two other choices:</source>
          <target state="translated">&lt;code&gt;config.active_record.primary_key_prefix_type&lt;/code&gt; 을 사용하면 기본 키 열의 이름을 조정할 수 있습니다. 기본적으로 Rails는 기본 키 열의 이름이 &lt;code&gt;id&lt;/code&gt; 라고 가정합니다 (이 구성 옵션을 설정할 필요는 없습니다). 두 가지 다른 선택이 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b68ac23578c9eb541f41c68cff55920eec35423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.protected_environments&lt;/code&gt; lets you set an array of names of environments where destructive actions should be prohibited.</source>
          <target state="translated">&lt;code&gt;config.active_record.protected_environments&lt;/code&gt; 를 사용하면 파괴적인 작업을 금지해야하는 환경 이름 배열을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fd7ec34e563ca1625bc3390b05cbf56b9b9c883" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.record_timestamps&lt;/code&gt; is a boolean value which controls whether or not timestamping of &lt;code&gt;create&lt;/code&gt; and &lt;code&gt;update&lt;/code&gt; operations on a model occur. The default value is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_record.record_timestamps&lt;/code&gt; 는 모델에서 &lt;code&gt;create&lt;/code&gt; 및 &lt;code&gt;update&lt;/code&gt; 조작의 시간 소인이 발생하는지 여부를 제어하는 ​​부울 값입니다 . 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="eee567924f5b32ee451048a9d4b4d95d79f5b935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.schema_format&lt;/code&gt; controls the format for dumping the database schema to a file. The options are &lt;code&gt;:ruby&lt;/code&gt; (the default) for a database-independent version that depends on migrations, or &lt;code&gt;:sql&lt;/code&gt; for a set of (potentially database-dependent) SQL statements.</source>
          <target state="translated">&lt;code&gt;config.active_record.schema_format&lt;/code&gt; 은 데이터베이스 스키마를 파일로 덤프하기위한 형식을 제어합니다. 옵션은 이주에 의존하는 데이터베이스 독립 버전의 경우 &lt;code&gt;:ruby&lt;/code&gt; (기본값) 또는 (잠재적으로 데이터베이스 종속적 인) SQL 문 세트의 경우 &lt;code&gt;:sql&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d7af845d4a18b42bd7859160c234a61dab0bcdf0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.schema_migrations_table_name&lt;/code&gt; lets you set a string to be used as the name of the schema migrations table.</source>
          <target state="translated">&lt;code&gt;config.active_record.schema_migrations_table_name&lt;/code&gt; 을 사용하면 스키마 마이그레이션 테이블의 이름으로 사용할 문자열을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="219ed835a2d1c9077e3c380a268c86774221c661" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.table_name_prefix&lt;/code&gt; lets you set a global string to be prepended to table names. If you set this to &lt;code&gt;northwest_&lt;/code&gt;, then the Customer class will look for &lt;code&gt;northwest_customers&lt;/code&gt; as its table. The default is an empty string.</source>
          <target state="translated">&lt;code&gt;config.active_record.table_name_prefix&lt;/code&gt; 를 사용하면 테이블 이름 앞에 글로벌 문자열을 추가 할 수 있습니다. 이것을 &lt;code&gt;northwest_&lt;/code&gt; 로 설정 하면 Customer 클래스는 &lt;code&gt;northwest_customers&lt;/code&gt; 를 테이블로 찾습니다 . 기본값은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="1efbe4837e73a112d2e16ed6e962e28a2aaa31db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.table_name_suffix&lt;/code&gt; lets you set a global string to be appended to table names. If you set this to &lt;code&gt;_northwest&lt;/code&gt;, then the Customer class will look for &lt;code&gt;customers_northwest&lt;/code&gt; as its table. The default is an empty string.</source>
          <target state="translated">&lt;code&gt;config.active_record.table_name_suffix&lt;/code&gt; 를 사용하면 테이블 이름에 추가 될 글로벌 문자열을 설정할 수 있습니다. 이것을 &lt;code&gt;_northwest&lt;/code&gt; 로 설정 하면 Customer 클래스는 &lt;code&gt;customers_northwest&lt;/code&gt; 를 테이블로 찾습니다 . 기본값은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="6b68a6d1c64961502fe65ecc4c1496372646530c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.timestamped_migrations&lt;/code&gt; controls whether migrations are numbered with serial integers or with timestamps. The default is &lt;code&gt;true&lt;/code&gt;, to use timestamps, which are preferred if there are multiple developers working on the same application.</source>
          <target state="translated">&lt;code&gt;config.active_record.timestamped_migrations&lt;/code&gt; 는 마이그레이션에 일련 번호가 부여되는지 또는 타임 스탬프가 지정되는지를 제어합니다. 타임 스탬프를 사용하려면 기본값은 &lt;code&gt;true&lt;/code&gt; 이며, 동일한 애플리케이션에서 여러 개발자가 작업하는 경우 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="0390bf983b155ab465cdc6ced57ba018a41de5cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.use_schema_cache_dump&lt;/code&gt; enables users to get schema cache information from &lt;code&gt;db/schema_cache.yml&lt;/code&gt; (generated by &lt;code&gt;rails db:schema:cache:dump&lt;/code&gt;), instead of having to send a query to the database to get this information. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_record.use_schema_cache_dump&lt;/code&gt; 를 사용 하면이 정보를 얻기 위해 데이터베이스에 조회를 보내지 않고 &lt;code&gt;db/schema_cache.yml&lt;/code&gt; ( &lt;code&gt;rails db:schema:cache:dump&lt;/code&gt; 에 의해 생성됨) 에서 스키마 캐시 정보 를 얻을 수 있습니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5835bdeb42994198bb6b19de960ad0c0a8efb69b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record.warn_on_records_fetched_greater_than&lt;/code&gt; allows setting a warning threshold for query result size. If the number of records returned by a query exceeds the threshold, a warning is logged. This can be used to identify queries which might be causing a memory bloat.</source>
          <target state="translated">&lt;code&gt;config.active_record.warn_on_records_fetched_greater_than&lt;/code&gt; 은 쿼리 결과 크기에 대한 경고 임계 값을 설정합니다. 쿼리에서 반환 한 레코드 수가 임계 값을 초과하면 경고가 기록됩니다. 메모리 팽창을 일으킬 수있는 쿼리를 식별하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c187bd0c86cdf8f84d963fcf4946ff0d9169b877" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_record&lt;/code&gt; includes a variety of configuration options:</source>
          <target state="translated">&lt;code&gt;config.active_record&lt;/code&gt; 는 다양한 구성 옵션을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="6daa4693801cca467dcd62611e1446f9e33fb04e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.analyzers&lt;/code&gt; accepts an array of classes indicating the analyzers available for Active Storage blobs. The default is &lt;code&gt;[ActiveStorage::Analyzer::ImageAnalyzer, ActiveStorage::Analyzer::VideoAnalyzer]&lt;/code&gt;. The former can extract width and height of an image blob; the latter can extract width, height, duration, angle, and aspect ratio of a video blob.</source>
          <target state="translated">&lt;code&gt;config.active_storage.analyzers&lt;/code&gt; 는 Active Storage Blob에 사용 가능한 분석기를 나타내는 클래스 배열을 허용합니다. 기본값은 &lt;code&gt;[ActiveStorage::Analyzer::ImageAnalyzer, ActiveStorage::Analyzer::VideoAnalyzer]&lt;/code&gt; 입니다. 전자는 이미지 블롭의 너비와 높이를 추출 할 수 있습니다. 후자는 비디오 블롭의 폭, 높이, 지속 시간, 각도 및 종횡비를 추출 할 수있다.</target>
        </trans-unit>
        <trans-unit id="b3f468db8306497fe239c77b7c7d9494e3661fac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.content_types_to_serve_as_binary&lt;/code&gt; accepts an array of strings indicating the content types that Active Storage will always serve as an attachment, rather than inline. The default is &lt;code&gt;%w(text/html
text/javascript image/svg+xml application/postscript application/x-shockwave-flash text/xml application/xml application/xhtml+xml)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_storage.content_types_to_serve_as_binary&lt;/code&gt; 는 Active Storage가 항상 인라인이 아닌 첨부 파일로 제공 할 컨텐츠 유형을 나타내는 문자열 배열을 허용합니다. 기본값은 &lt;code&gt;%w(text/html text/javascript image/svg+xml application/postscript application/x-shockwave-flash text/xml application/xml application/xhtml+xml)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="eda3183771282d2dba577d70ca678aa742aeec9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.logger&lt;/code&gt; can be used to set the logger used by Active Storage. Accepts a logger conforming to the interface of Log4r or the default Ruby Logger class.</source>
          <target state="translated">&lt;code&gt;config.active_storage.logger&lt;/code&gt; 를 사용하여 Active Storage에서 사용하는 로거를 설정할 수 있습니다. Log4r의 인터페이스 또는 기본 Ruby Logger 클래스를 준수하는 로거를 승인합니다.</target>
        </trans-unit>
        <trans-unit id="9928e8fa317bd9376782eb2acbfbd88cf32cb5a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.paths&lt;/code&gt; accepts a hash of options indicating the locations of previewer/analyzer commands. The default is &lt;code&gt;{}&lt;/code&gt;, meaning the commands will be looked for in the default path. Can include any of these options:</source>
          <target state="translated">&lt;code&gt;config.active_storage.paths&lt;/code&gt; 는 미리보기 / 분석기 명령의 위치를 ​​나타내는 옵션 해시를 허용합니다. 기본값은 &lt;code&gt;{}&lt;/code&gt; 이며 기본 경로에서 명령을 찾습니다. 다음 옵션 중 하나를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50ad51f3ce3fce28ad6286edd2bd2a55e4baa6bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.previewers&lt;/code&gt; accepts an array of classes indicating the image previewers available in Active Storage blobs. The default is &lt;code&gt;[ActiveStorage::Previewer::PDFPreviewer, ActiveStorage::Previewer::VideoPreviewer]&lt;/code&gt;. The former can generate a thumbnail from the first page of a PDF blob; the latter from the relevant frame of a video blob.</source>
          <target state="translated">&lt;code&gt;config.active_storage.previewers&lt;/code&gt; 는 Active Storage Blob에서 사용 가능한 이미지 미리보기를 나타내는 클래스 배열을 허용합니다. 기본값은 &lt;code&gt;[ActiveStorage::Previewer::PDFPreviewer, ActiveStorage::Previewer::VideoPreviewer]&lt;/code&gt; 입니다. 전자는 PDF BLOB의 첫 페이지에서 축소판을 생성 할 수 있습니다. 후자는 비디오 블롭의 관련 프레임에서 나온다.</target>
        </trans-unit>
        <trans-unit id="9d241d538484b2069589c1c1bcfb513927195d5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.queues.analysis&lt;/code&gt; accepts a symbol indicating the Active Job queue to use for analysis jobs. When this option is &lt;code&gt;nil&lt;/code&gt;, analysis jobs are sent to the default Active Job queue (see &lt;code&gt;config.active_job.default_queue_name&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;config.active_storage.queues.analysis&lt;/code&gt; 는 분석 작업에 사용할 활성 작업 큐를 나타내는 기호를 승인합니다. 이 옵션이 &lt;code&gt;nil&lt;/code&gt; 인 경우 분석 작업이 기본 활성 작업 큐로 전송됩니다 ( &lt;code&gt;config.active_job.default_queue_name&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="80535ecfe9070de1fdc1c10e86400c217d222368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.queues.analysis&lt;/code&gt;: &lt;code&gt;:active_storage_analysis&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.active_storage.queues.analysis&lt;/code&gt; : &lt;code&gt;:active_storage_analysis&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48693fd5b1c53fbf0c7c455a8066e0512962ac82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.queues.purge&lt;/code&gt; accepts a symbol indicating the Active Job queue to use for purge jobs. When this option is &lt;code&gt;nil&lt;/code&gt;, purge jobs are sent to the default Active Job queue (see &lt;code&gt;config.active_job.default_queue_name&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;config.active_storage.queues.purge&lt;/code&gt; 는 제거 작업에 사용할 활성 작업 큐를 나타내는 기호를 승인합니다. 이 옵션이 &lt;code&gt;nil&lt;/code&gt; 인 경우 제거 작업이 기본 활성 작업 큐로 전송됩니다 ( &lt;code&gt;config.active_job.default_queue_name&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="c50ba20c31dca78b7bd8d372aa610f2c74bb5bef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.queues.purge&lt;/code&gt;: &lt;code&gt;:active_storage_purge&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.active_storage.queues.purge&lt;/code&gt; : &lt;code&gt;:active_storage_purge&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e14744e32b468c8dfdc2350f7c61e3a3cf90bd63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.replace_on_assign_to_many&lt;/code&gt; determines whether assigning to a collection of attachments declared with &lt;code&gt;has_many_attached&lt;/code&gt; replaces any existing attachments or appends to them. The default is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_storage.replace_on_assign_to_many&lt;/code&gt; 는 &lt;code&gt;has_many_attached&lt;/code&gt; 로 선언 된 첨부 파일 모음에 할당 할 때 기존 첨부 파일을 대체 할 것인지 또는 첨부 파일을 추가 할 것인지를 결정합니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ec6bc84a0005b87b03bb64d770ef59d7540dbc38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.replace_on_assign_to_many&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.active_storage.replace_on_assign_to_many&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b87900a6da5220799853275c2e7d67d4385c2bc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.routes_prefix&lt;/code&gt; can be used to set the route prefix for the routes served by Active Storage. Accepts a string that will be prepended to the generated routes.</source>
          <target state="translated">&lt;code&gt;config.active_storage.routes_prefix&lt;/code&gt; 를 사용하여 Active Storage에서 제공하는 경로의 경로 접두사를 설정할 수 있습니다. 생성 된 경로 앞에 추가 할 문자열을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="57a2d4482169a3162e849e8fc24675e761ed5ac7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.service_urls_expire_in&lt;/code&gt; determines the default expiry of URLs generated by:</source>
          <target state="translated">&lt;code&gt;config.active_storage.service_urls_expire_in&lt;/code&gt; 은 다음에 의해 생성 된 URL의 기본 만료를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="9d02f7bda7b92d22141393a449c906e1705fc3d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.variable_content_types&lt;/code&gt; accepts an array of strings indicating the content types that Active Storage can transform through ImageMagick. The default is &lt;code&gt;%w(image/png image/gif image/jpg image/jpeg image/pjpeg image/tiff image/vnd.adobe.photoshop image/vnd.microsoft.icon)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_storage.variable_content_types&lt;/code&gt; 는 Active Storage가 ImageMagick을 통해 변환 할 수있는 컨텐츠 유형을 나타내는 문자열 배열을 허용합니다. 기본값은 &lt;code&gt;%w(image/png image/gif image/jpg image/jpeg image/pjpeg image/tiff image/vnd.adobe.photoshop image/vnd.microsoft.icon)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1e7e6c860f527161da61dc853b3ce72c8886bf97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage.variant_processor&lt;/code&gt; accepts a symbol &lt;code&gt;:mini_magick&lt;/code&gt; or &lt;code&gt;:vips&lt;/code&gt;, specifying whether variant transformations will be performed with MiniMagick or ruby-vips. The default is &lt;code&gt;:mini_magick&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_storage.variant_processor&lt;/code&gt; 는 &lt;code&gt;:mini_magick&lt;/code&gt; 또는 &lt;code&gt;:vips&lt;/code&gt; 기호를 허용하며 변형 변환이 MiniMagick 또는 ruby-vips로 수행되는지 여부를 지정합니다. 기본값은 &lt;code&gt;:mini_magick&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="16fd09d33012fbeba66b21b43106d4c1c597633a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_storage&lt;/code&gt; provides the following configuration options:</source>
          <target state="translated">&lt;code&gt;config.active_storage&lt;/code&gt; 는 다음 구성 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="eef46f90eb648285184d8dd413629b60fad1c5b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_support.bare&lt;/code&gt; enables or disables the loading of &lt;code&gt;active_support/all&lt;/code&gt; when booting Rails. Defaults to &lt;code&gt;nil&lt;/code&gt;, which means &lt;code&gt;active_support/all&lt;/code&gt; is loaded.</source>
          <target state="translated">&lt;code&gt;config.active_support.bare&lt;/code&gt; 는 Rails를 부팅 할 때 &lt;code&gt;active_support/all&lt;/code&gt; 로딩을 활성화 또는 비활성화합니다 . 기본값은 &lt;code&gt;nil&lt;/code&gt; 이며 &lt;code&gt;active_support/all&lt;/code&gt; 이로드됨을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="f9a6313139cb38f5cf00eab1373169128de877c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_support.escape_html_entities_in_json&lt;/code&gt; enables or disables the escaping of HTML entities in JSON serialization. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_support.escape_html_entities_in_json&lt;/code&gt; 은 JSON 직렬화에서 HTML 엔티티의 이스케이프를 사용하거나 사용하지 않습니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7dfa442c30fa5a17e38cd25b24187f3327e56ea9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_support.test_order&lt;/code&gt; sets the order in which the test cases are executed. Possible values are &lt;code&gt;:random&lt;/code&gt; and &lt;code&gt;:sorted&lt;/code&gt;. Defaults to &lt;code&gt;:random&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_support.test_order&lt;/code&gt; 는 테스트 케이스가 실행되는 순서를 설정합니다. 가능한 값은 &lt;code&gt;:random&lt;/code&gt; 및 &lt;code&gt;:sorted&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;:random&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="816bd6225efcf7d84cedaa2ef417f33650815ddc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_support.time_precision&lt;/code&gt; sets the precision of JSON encoded time values. Defaults to &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_support.time_precision&lt;/code&gt; 은 JSON 인코딩 시간 값의 정밀도를 설정합니다. 기본값은 &lt;code&gt;3&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="93a0d5aff0326e0f1c56abeab155b1a5fc7cd998" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_support.use_authenticated_message_encryption&lt;/code&gt; specifies whether to use AES-256-GCM authenticated encryption as the default cipher for encrypting messages instead of AES-256-CBC. This is false by default.</source>
          <target state="translated">&lt;code&gt;config.active_support.use_authenticated_message_encryption&lt;/code&gt; 은 AES-256-CBC 대신 메시지 암호화를위한 기본 암호로 AES-256-GCM 인증 암호화를 사용할지 여부를 지정합니다. 기본적으로 false입니다.</target>
        </trans-unit>
        <trans-unit id="46e02d713f8b38aa19c4d0c23dc70f891db84ca8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_support.use_authenticated_message_encryption&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.active_support.use_authenticated_message_encryption&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4b1b9623593d8cf2c956a9aff70c9e5d35978cc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_support.use_sha1_digests&lt;/code&gt; specifies whether to use SHA-1 instead of MD5 to generate non-sensitive digests, such as the ETag header. Defaults to false.</source>
          <target state="translated">&lt;code&gt;config.active_support.use_sha1_digests&lt;/code&gt; 는 MD5 대신 SHA-1을 사용하여 ETag 헤더와 같이 민감하지 않은 다이제스트를 생성할지 여부를 지정합니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="1b8f4268ae4e1a2971807234189ec8a5be5ca6fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_support.use_sha1_digests&lt;/code&gt;: &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.active_support.use_sha1_digests&lt;/code&gt; : &lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6e7ceecb5d181e2d884fe5d03c687a7d3c164141" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.active_support.use_standard_json_time_format&lt;/code&gt; enables or disables serializing dates to ISO 8601 format. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.active_support.use_standard_json_time_format&lt;/code&gt; 은 날짜를 ISO 8601 형식으로 직렬화하는 기능을 활성화하거나 비활성화합니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="004764eca7df8b06ab00d8fde51a526f5afb94a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.add_autoload_paths_to_load_path&lt;/code&gt; says whether autoload paths have to be added to &lt;code&gt;$LOAD_PATH&lt;/code&gt;. This flag is &lt;code&gt;true&lt;/code&gt; by default, but it is recommended to be set to &lt;code&gt;false&lt;/code&gt; in &lt;code&gt;:zeitwerk&lt;/code&gt; mode early, in &lt;code&gt;config/application.rb&lt;/code&gt;. Zeitwerk uses absolute paths internally, and applications running in &lt;code&gt;:zeitwerk&lt;/code&gt; mode do not need &lt;code&gt;require_dependency&lt;/code&gt;, so models, controllers, jobs, etc. do not need to be in &lt;code&gt;$LOAD_PATH&lt;/code&gt;. Setting this to &lt;code&gt;false&lt;/code&gt; saves Ruby from checking these directories when resolving &lt;code&gt;require&lt;/code&gt; calls with relative paths, and saves Bootsnap work and RAM, since it does not need to build an index for them.</source>
          <target state="translated">&lt;code&gt;config.add_autoload_paths_to_load_path&lt;/code&gt; 는 자동로드 경로를 &lt;code&gt;$LOAD_PATH&lt;/code&gt; 추가해야하는지 여부를 나타냅니다 . 이 플래그는 기본적으로 &lt;code&gt;true&lt;/code&gt; 이지만 &lt;code&gt;config/application.rb&lt;/code&gt; 의 &lt;code&gt;:zeitwerk&lt;/code&gt; 모드 에서 &lt;code&gt;false&lt;/code&gt; 로 설정하는 것이 좋습니다 . Zeitwerk는 내부에서 절대 경로를 사용하며 &lt;code&gt;:zeitwerk&lt;/code&gt; 모드 에서 실행되는 응용 프로그램 에는 &lt;code&gt;require_dependency&lt;/code&gt; 가 필요하지 않으므로 모델, 컨트롤러, 작업 등이 &lt;code&gt;$LOAD_PATH&lt;/code&gt; 에있을 필요는 없습니다 . 이것을 &lt;code&gt;false&lt;/code&gt; 로 설정 하면 Ruby는 &lt;code&gt;require&lt;/code&gt; 를 해결할 때 이러한 디렉토리를 확인하지 않습니다. 상대 경로를 사용하여 호출하고 Bootsnap 작업 및 RAM을 저장합니다. 색인을 작성할 필요가 없기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="81a67c5a6234882eb8b6c0e158fc215d03f630f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.after_initialize&lt;/code&gt; takes a block which will be run &lt;em&gt;after&lt;/em&gt; Rails has finished initializing the application. That includes the initialization of the framework itself, engines, and all the application's initializers in &lt;code&gt;config/initializers&lt;/code&gt;. Note that this block &lt;em&gt;will&lt;/em&gt; be run for rake tasks. Useful for configuring values set up by other initializers:</source>
          <target state="translated">&lt;code&gt;config.after_initialize&lt;/code&gt; 는 Rails가 애플리케이션 초기화를 완료 &lt;em&gt;한 후에&lt;/em&gt; 실행될 블록을 사용 합니다. 여기에는 프레임 워크 자체, 엔진 및 &lt;code&gt;config/initializers&lt;/code&gt; 의 모든 응용 프로그램 이니셜 라이저 초기화가 포함 됩니다. 이 블록 &lt;em&gt;은&lt;/em&gt; 레이크 작업을 위해 실행됩니다. 다른 이니셜 라이저가 설정 한 값을 구성하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="32495aec59f25e626889bb52440c8fc33eb295a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.asset_host&lt;/code&gt; sets the host for the assets. Useful when CDNs are used for hosting assets, or when you want to work around the concurrency constraints built-in in browsers using different domain aliases. Shorter version of &lt;code&gt;config.action_controller.asset_host&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.asset_host&lt;/code&gt; 는 자산의 호스트를 설정합니다. CDN이 자산을 호스팅하는 데 사용되거나 다른 도메인 별명을 사용하여 브라우저에 내장 된 동시성 제한 조건을 해결하려는 경우에 유용합니다. &lt;code&gt;config.action_controller.asset_host&lt;/code&gt; 의 짧은 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="d398b0ee8fce775a518cceb27a28a554a61488b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.compile&lt;/code&gt; is a boolean that can be used to turn on live Sprockets compilation in production.</source>
          <target state="translated">&lt;code&gt;config.assets.compile&lt;/code&gt; 은 프로덕션에서 라이브 스프로킷 컴파일을 켜는 데 사용할 수있는 부울입니다.</target>
        </trans-unit>
        <trans-unit id="76c87403793a01954638ba984f39f4d004f4939b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.css_compressor&lt;/code&gt; defines the CSS compressor to use. It is set by default by &lt;code&gt;sass-rails&lt;/code&gt;. The unique alternative value at the moment is &lt;code&gt;:yui&lt;/code&gt;, which uses the &lt;code&gt;yui-compressor&lt;/code&gt; gem.</source>
          <target state="translated">&lt;code&gt;config.assets.css_compressor&lt;/code&gt; 는 사용할 CSS 압축기를 정의합니다. 기본적으로 &lt;code&gt;sass-rails&lt;/code&gt; 에 의해 설정됩니다 . 현재 고유 한 대체 값 은 &lt;code&gt;yui-compressor&lt;/code&gt; gem 을 사용하는 &lt;code&gt;:yui&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5ca44ef212ee0072f6bd654253aa1d804a38525f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.debug&lt;/code&gt; disables the concatenation and compression of assets. Set to &lt;code&gt;true&lt;/code&gt; by default in &lt;code&gt;development.rb&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.assets.debug&lt;/code&gt; 는 자산의 연결 및 압축을 비활성화합니다. &lt;code&gt;development.rb&lt;/code&gt; 에서 기본적 으로 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="99693698d38d679adbff2e386e4877ff4248f693" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.digest&lt;/code&gt; enables the use of SHA256 fingerprints in asset names. Set to &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;config.assets.digest&lt;/code&gt; 를 사용하면 자산 이름에 SHA256 지문을 사용할 수 있습니다. 기본적 으로 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="5c7d380541f05a9efe6641dcb2ed210b759566d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.enabled&lt;/code&gt; a flag that controls whether the asset pipeline is enabled. It is set to &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;config.assets.enabled&lt;/code&gt; 는 자산 파이프 라인의 활성화 여부를 제어하는 ​​플래그입니다. 기본적 으로 &lt;code&gt;true&lt;/code&gt; 로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="041faf270c66566447cb411c12788a36d0890dd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.gzip&lt;/code&gt; a flag that enables the creation of gzipped version of compiled assets, along with non-gzipped assets. Set to &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">&lt;code&gt;config.assets.gzip&lt;/code&gt; 압축되지 않은 자산과 함께 압축 된 자산의 압축 된 버전을 작성할 수있는 플래그입니다. 기본적 으로 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="42c448a54363a3985ce761578cb7cc81344fef06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.js_compressor&lt;/code&gt; defines the JavaScript compressor to use. Possible values are &lt;code&gt;:closure&lt;/code&gt;, &lt;code&gt;:uglifier&lt;/code&gt; and &lt;code&gt;:yui&lt;/code&gt; which require the use of the &lt;code&gt;closure-compiler&lt;/code&gt;, &lt;code&gt;uglifier&lt;/code&gt; or &lt;code&gt;yui-compressor&lt;/code&gt; gems respectively.</source>
          <target state="translated">&lt;code&gt;config.assets.js_compressor&lt;/code&gt; 는 사용할 JavaScript 압축기를 정의합니다. 가능한 값은 &lt;code&gt;:closure&lt;/code&gt; , &lt;code&gt;:uglifier&lt;/code&gt; 및 &lt;code&gt;:yui&lt;/code&gt; 이며, 각각 &lt;code&gt;closure-compiler&lt;/code&gt; , &lt;code&gt;uglifier&lt;/code&gt; 또는 &lt;code&gt;yui-compressor&lt;/code&gt; gem을 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="130735f1f2768b47afde5c8f9b0dfed3169fec8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.logger&lt;/code&gt; accepts a logger conforming to the interface of Log4r or the default Ruby &lt;code&gt;Logger&lt;/code&gt; class. Defaults to the same configured at &lt;code&gt;config.logger&lt;/code&gt;. Setting &lt;code&gt;config.assets.logger&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will turn off served assets logging.</source>
          <target state="translated">&lt;code&gt;config.assets.logger&lt;/code&gt; 는 Log4r의 인터페이스 또는 기본 Ruby &lt;code&gt;Logger&lt;/code&gt; 클래스를 준수하는 로거를 승인합니다 . 기본값은 &lt;code&gt;config.logger&lt;/code&gt; 에서 구성한 것과 동일합니다 . &lt;code&gt;config.assets.logger&lt;/code&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정하면 게재 된 자산 로깅이 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="e9acfc6a89faf75245c3fd48ff14c69f662df06a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.manifest&lt;/code&gt; defines the full path to be used for the asset precompiler's manifest file. Defaults to a file named &lt;code&gt;manifest-&amp;lt;random&amp;gt;.json&lt;/code&gt; in the &lt;code&gt;config.assets.prefix&lt;/code&gt; directory within the public folder.</source>
          <target state="translated">&lt;code&gt;config.assets.manifest&lt;/code&gt; 는 자산 사전 컴파일러의 매니페스트 파일에 사용될 전체 경로를 정의합니다. 기본적으로 공용 폴더 내의 &lt;code&gt;config.assets.prefix&lt;/code&gt; 디렉토리 에 &lt;code&gt;manifest-&amp;lt;random&amp;gt;.json&lt;/code&gt; 이라는 파일이 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd7d7c5372f1cbe76bd510b8f6fa040c439edc89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.paths&lt;/code&gt; contains the paths which are used to look for assets. Appending paths to this configuration option will cause those paths to be used in the search for assets.</source>
          <target state="translated">&lt;code&gt;config.assets.paths&lt;/code&gt; 는 자산을 찾는 데 사용되는 경로를 포함합니다. 이 구성 옵션에 경로를 추가하면 해당 경로가 자산 검색에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="28dda0f986939b15fc758e5461e49a0876575c7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.precompile&lt;/code&gt; allows you to specify additional assets (other than &lt;code&gt;application.css&lt;/code&gt; and &lt;code&gt;application.js&lt;/code&gt;) which are to be precompiled when &lt;code&gt;rake assets:precompile&lt;/code&gt; is run.</source>
          <target state="translated">&lt;code&gt;config.assets.precompile&lt;/code&gt; 을 사용하면 &lt;code&gt;rake assets:precompile&lt;/code&gt; 이 실행될 때 사전 컴파일 될 추가 자산 ( &lt;code&gt;application.css&lt;/code&gt; 및 &lt;code&gt;application.js&lt;/code&gt; 이외의)을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="01c0318b571cf3a0c7043203ef114dd9c23f7eab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.prefix&lt;/code&gt; defines the prefix where assets are served from. Defaults to &lt;code&gt;/assets&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.assets.prefix&lt;/code&gt; 는 자산이 제공되는 접 두부를 정의합니다. 기본값은 &lt;code&gt;/assets&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cc6a32231a15cab7123521fd6fd20ee15b2ff1fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.quiet&lt;/code&gt; disables logging of assets requests. Set to &lt;code&gt;true&lt;/code&gt; by default in &lt;code&gt;development.rb&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.assets.quiet&lt;/code&gt; 는 자산 요청 로깅을 비활성화합니다. &lt;code&gt;development.rb&lt;/code&gt; 에서 기본적 으로 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a7ff3c9b2e8a4049854da9265fcb324826d7b4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.unknown_asset_fallback&lt;/code&gt; allows you to modify the behavior of the asset pipeline when an asset is not in the pipeline, if you use sprockets-rails 3.2.0 or newer. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.assets.unknown_asset_fallback&lt;/code&gt; 스프로킷 레일 3.2.0 이상을 사용하는 경우 config.assets.unknown_asset_fallback을 통해 자산이 파이프 라인에없는 경우 자산 파이프 라인의 동작을 수정할 수 있습니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a42ce21a0c284223b158e574fecdcee17ec41886" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.unknown_asset_fallback&lt;/code&gt;: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.assets.unknown_asset_fallback&lt;/code&gt; : &lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f7a5e9aa1b17b42bca57a59d63f3ab1cf407334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.assets.version&lt;/code&gt; is an option string that is used in SHA256 hash generation. This can be changed to force all files to be recompiled.</source>
          <target state="translated">&lt;code&gt;config.assets.version&lt;/code&gt; 은 SHA256 해시 생성에 사용되는 옵션 문자열입니다. 모든 파일을 강제로 다시 컴파일하도록 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e59ec918cdb8d48d4d12a6e88d0611948d0e4b93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.autoload_once_paths&lt;/code&gt; accepts an array of paths from which Rails will autoload constants that won't be wiped per request. Relevant if &lt;code&gt;config.cache_classes&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, which is the case in development mode by default. Otherwise, all autoloading happens only once. All elements of this array must also be in &lt;code&gt;autoload_paths&lt;/code&gt;. Default is an empty array.</source>
          <target state="translated">&lt;code&gt;config.autoload_once_paths&lt;/code&gt; 는 Rails가 요청마다 지워지지 않는 상수를 자동로드하는 경로 배열을 허용합니다. &lt;code&gt;config.cache_classes&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 인 경우와 관련 이 있으며 이는 기본적으로 개발 모드에 해당됩니다. 그렇지 않으면 모든 자동 로딩이 한 번만 발생합니다. 이 배열의 모든 요소도 &lt;code&gt;autoload_paths&lt;/code&gt; 에 있어야합니다 . 기본값은 빈 배열입니다.</target>
        </trans-unit>
        <trans-unit id="b7a317a77a70a4af5e9906467cddb8abf9cc4016" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.autoload_paths&lt;/code&gt; accepts an array of paths from which Rails will autoload constants. Default is all directories under &lt;code&gt;app&lt;/code&gt;. It is no longer recommended to adjust this. See &lt;a href=&quot;autoloading_and_reloading_constants#autoload-paths-and-eager-load-paths&quot;&gt;Autoloading and Reloading Constants&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;config.autoload_paths&lt;/code&gt; 는 Rails가 상수를 자동로드하는 경로 배열을 허용합니다. 기본값은 &lt;code&gt;app&lt;/code&gt; 아래의 모든 디렉토리 입니다. 더 이상 조정하지 않는 것이 좋습니다. &lt;a href=&quot;autoloading_and_reloading_constants#autoload-paths-and-eager-load-paths&quot;&gt;상수 자동로드 및 다시로드를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6c33e04e9e545e16c7883fc45a806503b228111b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.autoload_paths&lt;/code&gt; is not changeable from environment-specific configuration files.</source>
          <target state="translated">&lt;code&gt;config.autoload_paths&lt;/code&gt; 는 환경 별 구성 파일에서 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7c03f6e45222e9866a72ce1d8edf9a3854c66cf8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.autoloader&lt;/code&gt; sets the autoloading mode. This option defaults to &lt;code&gt;:zeitwerk&lt;/code&gt; if &lt;code&gt;6.0&lt;/code&gt; is specified in &lt;code&gt;config.load_defaults&lt;/code&gt;. Applications can still use the classic autoloader by setting this value to &lt;code&gt;:classic&lt;/code&gt; after loading the framework defaults:</source>
          <target state="translated">&lt;code&gt;config.autoloader&lt;/code&gt; 는 자동 로딩 모드를 설정합니다. 이 옵션의 기본값 &lt;code&gt;:zeitwerk&lt;/code&gt; 이 경우 &lt;code&gt;6.0&lt;/code&gt; 로 지정됩니다 &lt;code&gt;config.load_defaults&lt;/code&gt; . 애플리케이션은 프레임 워크 기본값을로드 한 후이 값을 &lt;code&gt;:classic&lt;/code&gt; 으로 설정하여 클래식 오토로더를 계속 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="43201578ba3a7a4ededf1bf8b770bac9492a95f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.autoloader&lt;/code&gt;: &lt;code&gt;:zeitwerk&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.autoloader&lt;/code&gt; : &lt;code&gt;:zeitwerk&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bfd63e62fff61e46c1db9c17c50f5facf184e289" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.beginning_of_week&lt;/code&gt; sets the default beginning of week for the application. Accepts a valid week day symbol (e.g. &lt;code&gt;:monday&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;config.beginning_of_week&lt;/code&gt; 는 응용 프로그램의 기본 시작 시간을 설정합니다. 유효한 요일 기호를 허용합니다 (예 &lt;code&gt;:monday&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="32fd7b0122b9aaf0fa8aade7508d7de0a8feed8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.cache_classes&lt;/code&gt; controls whether or not application classes and modules should be reloaded on each request. Defaults to &lt;code&gt;false&lt;/code&gt; in development mode, and &lt;code&gt;true&lt;/code&gt; in test and production modes.</source>
          <target state="translated">&lt;code&gt;config.cache_classes&lt;/code&gt; 는 각 요청에서 애플리케이션 클래스 및 모듈을 다시로드해야하는지 여부를 제어합니다. 개발 모드에서는 기본값이 &lt;code&gt;false&lt;/code&gt; 이고 테스트 및 프로덕션 모드에서는 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f37a9ac5d9f2248bcd910126ab554e76de117c98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.cache_store&lt;/code&gt; configures which cache store to use for Rails caching. Options include one of the symbols &lt;code&gt;:memory_store&lt;/code&gt;, &lt;code&gt;:file_store&lt;/code&gt;, &lt;code&gt;:mem_cache_store&lt;/code&gt;, &lt;code&gt;:null_store&lt;/code&gt;, &lt;code&gt;:redis_cache_store&lt;/code&gt;, or an object that implements the cache API. Defaults to &lt;code&gt;:file_store&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.cache_store&lt;/code&gt; 는 Rails 캐싱에 사용할 캐시 저장소를 구성합니다. 옵션에는 &lt;code&gt;:memory_store&lt;/code&gt; , &lt;code&gt;:file_store&lt;/code&gt; , &lt;code&gt;:mem_cache_store&lt;/code&gt; , &lt;code&gt;:null_store&lt;/code&gt; , &lt;code&gt;:redis_cache_store&lt;/code&gt; 또는 캐시 API를 구현하는 객체 중 하나가 포함 됩니다. 기본값은 &lt;code&gt;:file_store&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9f6bed645080e4e3ffbbbd64eb367d8076247c8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.colorize_logging&lt;/code&gt; specifies whether or not to use ANSI color codes when logging information. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.colorize_logging&lt;/code&gt; 은 정보를 로깅 할 때 ANSI 색상 코드를 사용할지 여부를 지정합니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5656f98223944181b70c94a8a4e319b55d1f8d8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.consider_all_requests_local&lt;/code&gt; is a flag. If &lt;code&gt;true&lt;/code&gt; then any error will cause detailed debugging information to be dumped in the HTTP response, and the &lt;code&gt;Rails::Info&lt;/code&gt; controller will show the application runtime context in &lt;code&gt;/rails/info/properties&lt;/code&gt;. &lt;code&gt;true&lt;/code&gt; by default in development and test environments, and &lt;code&gt;false&lt;/code&gt; in production mode. For finer-grained control, set this to &lt;code&gt;false&lt;/code&gt; and implement &lt;code&gt;local_request?&lt;/code&gt; in controllers to specify which requests should provide debugging information on errors.</source>
          <target state="translated">&lt;code&gt;config.consider_all_requests_local&lt;/code&gt; 은 플래그입니다. &lt;code&gt;true&lt;/code&gt; 인 경우 오류가 발생하면 HTTP 응답에 자세한 디버깅 정보가 덤프되고 &lt;code&gt;Rails::Info&lt;/code&gt; 컨트롤러가 &lt;code&gt;/rails/info/properties&lt;/code&gt; 에 애플리케이션 런타임 컨텍스트를 표시합니다 . 개발 및 테스트 환경에서는 기본적으로 &lt;code&gt;true&lt;/code&gt; 이고 프로덕션 모드에서는 &lt;code&gt;false&lt;/code&gt; 입니다. 보다 세밀한 제어를 위해 이것을 &lt;code&gt;false&lt;/code&gt; 로 설정 하고 &lt;code&gt;local_request?&lt;/code&gt; 컨트롤러에서 오류에 대한 디버깅 정보를 제공해야하는 요청을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b41ce2d91cdabb28462b0a910062b965aa74af35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.console&lt;/code&gt; allows you to set class that will be used as console you run &lt;code&gt;rails console&lt;/code&gt;. It's best to run it in &lt;code&gt;console&lt;/code&gt; block:</source>
          <target state="translated">&lt;code&gt;config.console&lt;/code&gt; 을 사용하면 &lt;code&gt;rails console&lt;/code&gt; 을 실행하는 콘솔로 사용될 클래스를 설정할 수 있습니다 . &lt;code&gt;console&lt;/code&gt; 블록 에서 실행하는 것이 가장 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="b8c499a11955753769bbed55d581076390b9663f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.credentials.content_path&lt;/code&gt; configures lookup path for encrypted credentials.</source>
          <target state="translated">&lt;code&gt;config.credentials.content_path&lt;/code&gt; 는 암호화 된 자격 증명의 조회 경로를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="b709edd4285b1f0d545a545bf5504289e8e969a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.credentials.key_path&lt;/code&gt; configures lookup path for encryption key.</source>
          <target state="translated">&lt;code&gt;config.credentials.key_path&lt;/code&gt; 는 암호화 키의 조회 경로를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="30383e65961080f934ff704ae2a55ade0760fc61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.debug_exception_response_format&lt;/code&gt; sets the format used in responses when errors occur in development mode. Defaults to &lt;code&gt;:api&lt;/code&gt; for API only apps and &lt;code&gt;:default&lt;/code&gt; for normal apps.</source>
          <target state="translated">&lt;code&gt;config.debug_exception_response_format&lt;/code&gt; 은 개발 모드에서 오류가 발생할 때 응답에 사용되는 형식을 설정합니다. API 전용 앱의 경우 기본값은 &lt;code&gt;:api&lt;/code&gt; 이고 일반 앱의 경우 &lt;code&gt;:default&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4a065cd972971abf00e6b21759b008e1766fbd4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.disable_sandbox&lt;/code&gt; controls whether or not someone can start a console in sandbox mode. This is helpful to avoid a long running session of sandbox console, that could lead a database server to run out of memory. Defaults to false.</source>
          <target state="translated">&lt;code&gt;config.disable_sandbox&lt;/code&gt; 는 누군가 샌드 박스 모드에서 콘솔을 시작할 수 있는지 여부를 제어합니다. 이 기능은 데이터베이스 서버에 메모리가 부족할 수있는 장기간 실행되는 샌드 박스 콘솔 세션을 피하는 데 도움이됩니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="00989a41cf0c7d202553c286b6edfe866bf1484c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.eager_load&lt;/code&gt; when &lt;code&gt;true&lt;/code&gt;, eager loads all registered &lt;code&gt;config.eager_load_namespaces&lt;/code&gt;. This includes your application, engines, Rails frameworks, and any other registered namespace.</source>
          <target state="translated">&lt;code&gt;config.eager_load&lt;/code&gt; 때 &lt;code&gt;true&lt;/code&gt; 열망 부하가 등록 된 모든 &lt;code&gt;config.eager_load_namespaces&lt;/code&gt; 을 . 여기에는 애플리케이션, 엔진, Rails 프레임 워크 및 기타 등록 된 네임 스페이스가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="ac03d85cdcb2f1d27be3ca894b388120414435c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.eager_load_namespaces&lt;/code&gt; registers namespaces that are eager loaded when &lt;code&gt;config.eager_load&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. All namespaces in the list must respond to the &lt;code&gt;eager_load!&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;config.eager_load_namespaces&lt;/code&gt; 는 &lt;code&gt;config.eager_load&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 일 때 열성적으로로드되는 네임 스페이스를 등록 합니다 . 목록의 모든 네임 스페이스는 &lt;code&gt;eager_load!&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="6e724ed4d6b42dbe8201b5b65531477af9f822e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.eager_load_paths&lt;/code&gt; accepts an array of paths from which Rails will eager load on boot if cache classes is enabled. Defaults to every folder in the &lt;code&gt;app&lt;/code&gt; directory of the application.</source>
          <target state="translated">&lt;code&gt;config.eager_load_paths&lt;/code&gt; 는 캐시 클래스가 활성화 된 경우 Rails가 부팅시로드를 열망 할 경로 배열을 허용합니다. 응용 프로그램의 응용 &lt;code&gt;app&lt;/code&gt; 디렉토리에있는 모든 폴더가 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="f19ad7beff3c6e86acedc0e3861f1021f624c598" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.enable_dependency_loading&lt;/code&gt;: when true, enables autoloading, even if the application is eager loaded and &lt;code&gt;config.cache_classes&lt;/code&gt; is set as true. Defaults to false.</source>
          <target state="translated">&lt;code&gt;config.enable_dependency_loading&lt;/code&gt; : true 인 경우 응용 프로그램이 열성적으로로드되고 &lt;code&gt;config.cache_classes&lt;/code&gt; 가 true로 설정되어 있어도 자동로드를 활성화 합니다. 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="804957c120689b4993040ec934cacf18efbdab0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.encoding&lt;/code&gt; sets up the application-wide encoding. Defaults to UTF-8.</source>
          <target state="translated">&lt;code&gt;config.encoding&lt;/code&gt; 은 응용 프로그램 전체 인코딩을 설정합니다. 기본값은 UTF-8입니다.</target>
        </trans-unit>
        <trans-unit id="c9e07bbc85b695d3576dbcd34bb0781866f3e319" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.exceptions_app&lt;/code&gt; sets the exceptions application invoked by the ShowException middleware when an exception happens. Defaults to &lt;code&gt;ActionDispatch::PublicExceptions.new(Rails.public_path)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.exceptions_app&lt;/code&gt; 는 예외가 발생할 때 ShowException 미들웨어에 의해 호출 된 예외 애플리케이션을 설정합니다. 기본값은 &lt;code&gt;ActionDispatch::PublicExceptions.new(Rails.public_path)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cf7f751d1667681f526f85d22d0233b99ce52591" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.file_watcher&lt;/code&gt; is the class used to detect file updates in the file system when &lt;code&gt;config.reload_classes_only_on_change&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. Rails ships with &lt;code&gt;ActiveSupport::FileUpdateChecker&lt;/code&gt;, the default, and &lt;code&gt;ActiveSupport::EventedFileUpdateChecker&lt;/code&gt; (this one depends on the &lt;a href=&quot;https://github.com/guard/listen&quot;&gt;listen&lt;/a&gt; gem). Custom classes must conform to the &lt;code&gt;ActiveSupport::FileUpdateChecker&lt;/code&gt; API.</source>
          <target state="translated">&lt;code&gt;config.file_watcher&lt;/code&gt; 는 &lt;code&gt;config.reload_classes_only_on_change&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 일 때 파일 시스템에서 파일 업데이트를 감지하는 데 사용되는 클래스 입니다 . 함께 제공되는 레일 &lt;code&gt;ActiveSupport::FileUpdateChecker&lt;/code&gt; , 기본 및 &lt;code&gt;ActiveSupport::EventedFileUpdateChecker&lt;/code&gt; (이 하나가에 따라 달라 &lt;a href=&quot;https://github.com/guard/listen&quot;&gt;듣고&lt;/a&gt; 보석). 사용자 정의 클래스는 &lt;code&gt;ActiveSupport::FileUpdateChecker&lt;/code&gt; API를 준수해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f8d03ef1974ed9690c36e2b7095c5b8ad1b179f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.filter_parameters&lt;/code&gt; used for filtering out the parameters that you don't want shown in the logs, such as passwords or credit card numbers. It also filters out sensitive values of database columns when call &lt;code&gt;#inspect&lt;/code&gt; on an Active Record object. By default, Rails filters out passwords by adding &lt;code&gt;Rails.application.config.filter_parameters += [:password]&lt;/code&gt; in &lt;code&gt;config/initializers/filter_parameter_logging.rb&lt;/code&gt;. Parameters filter works by partial matching regular expression.</source>
          <target state="translated">&lt;code&gt;config.filter_parameters&lt;/code&gt; 비밀번호 또는 신용 카드 번호와 같이 로그에 표시하지 않을 매개 변수를 필터링하는 데 사용되는 config.filter_parameters 또한 활성 레코드 개체에서 &lt;code&gt;#inspect&lt;/code&gt; 를 호출 할 때 데이터베이스 열의 중요한 값을 필터링 합니다. 기본적으로 Rails 는 &lt;code&gt;config/initializers/filter_parameter_logging.rb&lt;/code&gt; 에 &lt;code&gt;Rails.application.config.filter_parameters += [:password]&lt;/code&gt; 를 추가하여 비밀번호를 필터링합니다 . 매개 변수 필터는 부분 일치 정규식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="7fcf9ec57f2eca6e28ca1a3492daf3efa1b1b574" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.force_ssl&lt;/code&gt; forces all requests to be served over HTTPS by using the &lt;code&gt;ActionDispatch::SSL&lt;/code&gt; middleware, and sets &lt;code&gt;config.action_mailer.default_url_options&lt;/code&gt; to be &lt;code&gt;{ protocol: 'https' }&lt;/code&gt;. This can be configured by setting &lt;code&gt;config.ssl_options&lt;/code&gt; - see the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/SSL.html&quot;&gt;ActionDispatch::SSL documentation&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;config.force_ssl&lt;/code&gt; 은 &lt;code&gt;ActionDispatch::SSL&lt;/code&gt; 미들웨어 를 사용하여 모든 요청을 HTTPS를 통해 강제로 제공하고 &lt;code&gt;config.action_mailer.default_url_options&lt;/code&gt; 를 &lt;code&gt;{ protocol: 'https' }&lt;/code&gt; 합니다. &lt;code&gt;config.ssl_options&lt;/code&gt; 를 설정하여 구성 할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/SSL.html&quot;&gt;ActionDispatch :: SSL 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2b76adc882da499db19b26a91475d54322e46491" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.i18n.available_locales&lt;/code&gt; defines the permitted available locales for the app. Defaults to all locale keys found in locale files, usually only &lt;code&gt;:en&lt;/code&gt; on a new application.</source>
          <target state="translated">&lt;code&gt;config.i18n.available_locales&lt;/code&gt; 는 앱에 허용되는 로캘을 정의합니다. 로케일 파일에있는 모든 로케일 키의 기본값은 일반적으로 새 응용 프로그램 에서만 &lt;code&gt;:en&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0fad805ee02982a051491a1894484619eae97589" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.i18n.default_locale&lt;/code&gt; sets the default locale of an application used for i18n. Defaults to &lt;code&gt;:en&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.i18n.default_locale&lt;/code&gt; 은 i18n에 사용되는 응용 프로그램의 기본 로캘을 설정합니다. 기본값은 &lt;code&gt;:en&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="35ae3df1f7b326fe5751d91f022084b5bf3cabda" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.i18n.enforce_available_locales&lt;/code&gt; ensures that all locales passed through i18n must be declared in the &lt;code&gt;available_locales&lt;/code&gt; list, raising an &lt;code&gt;I18n::InvalidLocale&lt;/code&gt; exception when setting an unavailable locale. Defaults to &lt;code&gt;true&lt;/code&gt;. It is recommended not to disable this option unless strongly required, since this works as a security measure against setting any invalid locale from user input.</source>
          <target state="translated">&lt;code&gt;config.i18n.enforce_available_locales&lt;/code&gt; 는 i18n을 통해 전달 된 모든 로케일이 &lt;code&gt;available_locales&lt;/code&gt; 목록에 선언되어 사용할 수없는 로케일을 설정할 때 &lt;code&gt;I18n::InvalidLocale&lt;/code&gt; 예외를 발생 시켜야 합니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다. 사용자 입력에서 유효하지 않은 로케일을 설정하는 것에 대한 보안 조치로 작동하므로 강력하게 요구되지 않는 한이 옵션을 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6ad7b0fd45d7e0c420b3cb1032ce71037d920456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.i18n.fallbacks&lt;/code&gt; sets fallback behavior for missing translations. Here are 3 usage examples for this option:</source>
          <target state="translated">&lt;code&gt;config.i18n.fallbacks&lt;/code&gt; 는 누락 된 번역에 대한 대체 동작을 설정합니다. 이 옵션에 대한 3 가지 사용 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d5d8858c2a6e12289cc8b369c505d0dd6290a224" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.i18n.load_path&lt;/code&gt; sets the path Rails uses to look for locale files. Defaults to &lt;code&gt;config/locales/*.{yml,rb}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.i18n.load_path&lt;/code&gt; 는 Rails가 로케일 파일을 찾기 위해 사용하는 경로를 설정합니다. 기본값은 &lt;code&gt;config/locales/*.{yml,rb}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c0703379b6c92d59f665b11fad1651687dee56c3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.log_formatter&lt;/code&gt; defines the formatter of the Rails logger. This option defaults to an instance of &lt;code&gt;ActiveSupport::Logger::SimpleFormatter&lt;/code&gt; for all modes. If you are setting a value for &lt;code&gt;config.logger&lt;/code&gt; you must manually pass the value of your formatter to your logger before it is wrapped in an &lt;code&gt;ActiveSupport::TaggedLogging&lt;/code&gt; instance, Rails will not do it for you.</source>
          <target state="translated">&lt;code&gt;config.log_formatter&lt;/code&gt; 는 Rails 로거의 포맷터를 정의합니다. 이 옵션의 기본값 은 모든 모드 에서 &lt;code&gt;ActiveSupport::Logger::SimpleFormatter&lt;/code&gt; 인스턴스입니다 . &lt;code&gt;config.logger&lt;/code&gt; 의 값을 설정하는 경우 포매터의 값을 &lt;code&gt;ActiveSupport::TaggedLogging&lt;/code&gt; 인스턴스에 랩핑하기 전에 수동으로 로거에 전달해야합니다 . Rails 가이 를 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="296c944a5e0a275f3fa97ebbf753756afbd019bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.log_level&lt;/code&gt; defines the verbosity of the Rails logger. This option defaults to &lt;code&gt;:debug&lt;/code&gt; for all environments. The available log levels are: &lt;code&gt;:debug&lt;/code&gt;, &lt;code&gt;:info&lt;/code&gt;, &lt;code&gt;:warn&lt;/code&gt;, &lt;code&gt;:error&lt;/code&gt;, &lt;code&gt;:fatal&lt;/code&gt;, and &lt;code&gt;:unknown&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config.log_level&lt;/code&gt; 은 Rails 로거의 상세도를 정의합니다. 이 옵션의 기본값 은 모든 환경 에서 &lt;code&gt;:debug&lt;/code&gt; 입니다. 사용 가능한 로그 레벨은 : &lt;code&gt;:debug&lt;/code&gt; , &lt;code&gt;:info&lt;/code&gt; , &lt;code&gt;:warn&lt;/code&gt; , &lt;code&gt;:error&lt;/code&gt; , &lt;code&gt;:fatal&lt;/code&gt; 및 &lt;code&gt;:unknown&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="296e50d9d905ab3a94328fcb173f43c827350d04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.log_tags&lt;/code&gt; accepts a list of: methods that the &lt;code&gt;request&lt;/code&gt; object responds to, a &lt;code&gt;Proc&lt;/code&gt; that accepts the &lt;code&gt;request&lt;/code&gt; object, or something that responds to &lt;code&gt;to_s&lt;/code&gt;. This makes it easy to tag log lines with debug information like subdomain and request id - both very helpful in debugging multi-user production applications.</source>
          <target state="translated">&lt;code&gt;config.log_tags&lt;/code&gt; 은 의 목록을 허용 : 방법 그 &lt;code&gt;request&lt;/code&gt; A,에 객체 응답 &lt;code&gt;Proc&lt;/code&gt; 수락 &lt;code&gt;request&lt;/code&gt; 객체 또는 뭔가를 응답하는 것을 &lt;code&gt;to_s&lt;/code&gt; . 따라서 하위 도메인 및 요청 ID와 같은 디버그 정보로 로그 라인에 태그를 쉽게 지정할 수 있습니다. 둘 다 다중 사용자 프로덕션 응용 프로그램을 디버깅하는 데 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e14de50da523e78d34bf612b95243403e5fd3f28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.logger&lt;/code&gt; is the logger that will be used for &lt;code&gt;Rails.logger&lt;/code&gt; and any related Rails logging such as &lt;code&gt;ActiveRecord::Base.logger&lt;/code&gt;. It defaults to an instance of &lt;code&gt;ActiveSupport::TaggedLogging&lt;/code&gt; that wraps an instance of &lt;code&gt;ActiveSupport::Logger&lt;/code&gt; which outputs a log to the &lt;code&gt;log/&lt;/code&gt; directory. You can supply a custom logger, to get full compatibility you must follow these guidelines:</source>
          <target state="translated">&lt;code&gt;config.logger&lt;/code&gt; 는 &lt;code&gt;Rails.logger&lt;/code&gt; 및 &lt;code&gt;ActiveRecord::Base.logger&lt;/code&gt; 와 같은 관련 Rails 로깅에 사용될 로거입니다 . 로그를 &lt;code&gt;log/&lt;/code&gt; 디렉토리에 출력하는 &lt;code&gt;ActiveSupport::Logger&lt;/code&gt; 인스턴스를 래핑하는 &lt;code&gt;ActiveSupport::TaggedLogging&lt;/code&gt; 인스턴스가 기본값 입니다. 사용자 정의 로거를 제공하여 완전한 호환성을 얻으려면 다음 지침을 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="599892998043bd378313bec0672e29d7145f784f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.middleware.insert_after(existing_middleware, new_middleware, args)&lt;/code&gt; - Adds the new middleware after the specified existing middleware in the middleware stack.</source>
          <target state="translated">&lt;code&gt;config.middleware.insert_after(existing_middleware, new_middleware, args)&lt;/code&gt; -미들웨어 스택에서 지정된 기존 미들웨어 뒤에 새 미들웨어를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ad4ada3991154731f5754b77d0f8ef75465d732b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.middleware.insert_before(existing_middleware, new_middleware, args)&lt;/code&gt; - Adds the new middleware before the specified existing middleware in the middleware stack.</source>
          <target state="translated">&lt;code&gt;config.middleware.insert_before(existing_middleware, new_middleware, args)&lt;/code&gt; -미들웨어 스택에서 지정된 기존 미들웨어 앞에 새 미들웨어를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9c819e3860f8fd3961a93dff3553f4a77165e279" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.middleware.use(new_middleware, args)&lt;/code&gt; - Adds the new middleware at the bottom of the middleware stack.</source>
          <target state="translated">&lt;code&gt;config.middleware.use(new_middleware, args)&lt;/code&gt; -미들웨어 스택의 맨 아래에 새 미들웨어를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6ad800312e2d94c807ce49861ca62254b266b142" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.middleware&lt;/code&gt; allows you to configure the application's middleware. This is covered in depth in the &lt;a href=&quot;#configuring-middleware&quot;&gt;Configuring Middleware&lt;/a&gt; section below.</source>
          <target state="translated">&lt;code&gt;config.middleware&lt;/code&gt; 를 사용하면 응용 프로그램의 미들웨어를 구성 할 수 있습니다. 이에 대한 자세한 내용은 아래 &lt;a href=&quot;#configuring-middleware&quot;&gt;미들웨어 구성&lt;/a&gt; 섹션에서 다룹니다.</target>
        </trans-unit>
        <trans-unit id="5e42ff4ed291c36468aa483cdc7ec7b604ee1ffe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.public_file_server.enabled&lt;/code&gt; configures Rails to serve static files from the public directory. This option defaults to &lt;code&gt;true&lt;/code&gt;, but in the production environment it is set to &lt;code&gt;false&lt;/code&gt; because the server software (e.g. NGINX or Apache) used to run the application should serve static files instead. If you are running or testing your app in production mode using WEBrick (it is not recommended to use WEBrick in production) set the option to &lt;code&gt;true&lt;/code&gt;. Otherwise, you won't be able to use page caching and request for files that exist under the public directory.</source>
          <target state="translated">&lt;code&gt;config.public_file_server.enabled&lt;/code&gt; 는 공용 디렉토리에서 정적 파일을 제공하도록 Rails를 구성합니다. 이 옵션의 기본값은 &lt;code&gt;true&lt;/code&gt; 이지만 프로덕션 환경 에서는 응용 프로그램을 실행하는 데 사용되는 서버 소프트웨어 (예 : NGINX 또는 Apache)가 정적 파일을 대신 제공해야하므로 &lt;code&gt;false&lt;/code&gt; 로 설정 됩니다. WEBrick을 사용하여 프로덕션 모드에서 앱을 실행하거나 테스트하는 경우 (프로덕션에서 WEBrick을 사용하지 않는 것이 좋습니다) 옵션을 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . 그렇지 않으면 페이지 캐싱을 사용하거나 공용 디렉토리에있는 파일을 요청할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="284a6acaa22ae2dcea9131018421fefc532a128b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.reload_classes_only_on_change&lt;/code&gt; enables or disables reloading of classes only when tracked files change. By default tracks everything on autoload paths and is set to &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;config.cache_classes&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, this option is ignored.</source>
          <target state="translated">&lt;code&gt;config.reload_classes_only_on_change&lt;/code&gt; 는 추적 된 파일이 변경 될 때만 클래스 다시로드를 활성화 또는 비활성화합니다. 기본적으로 자동로드 경로의 모든 내용을 추적하며 &lt;code&gt;true&lt;/code&gt; 로 설정됩니다 . 경우 &lt;code&gt;config.cache_classes&lt;/code&gt; 이 있다 &lt;code&gt;true&lt;/code&gt; ,이 옵션은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="6708532b94f1c4e7ddc6e11b30fa4e000e4319de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.session_store&lt;/code&gt; specifies what class to use to store the session. Possible values are &lt;code&gt;:cookie_store&lt;/code&gt; which is the default, &lt;code&gt;:mem_cache_store&lt;/code&gt;, and &lt;code&gt;:disabled&lt;/code&gt;. The last one tells Rails not to deal with sessions. Defaults to a cookie store with application name as the session key. Custom session stores can also be specified:</source>
          <target state="translated">&lt;code&gt;config.session_store&lt;/code&gt; 는 세션을 저장하는 데 사용할 클래스를 지정합니다. 가능한 값은 &lt;code&gt;:cookie_store&lt;/code&gt; ( 기본값), &lt;code&gt;:mem_cache_store&lt;/code&gt; 및 &lt;code&gt;:disabled&lt;/code&gt; 입니다. 마지막은 Rails에게 세션을 다루지 말라고 지시합니다. 응용 프로그램 이름을 세션 키로 사용하는 쿠키 저장소가 기본값입니다. 사용자 정의 세션 저장소도 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4228af8b5027bf996edb5a703a337d43f271c2cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.ssl_options&lt;/code&gt;: &lt;code&gt;{ hsts: { subdomains: true } }&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.ssl_options&lt;/code&gt; : &lt;code&gt;{ hsts: { subdomains: true } }&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="851a5c76d8e6c8aadbe7476bd0902a1b58940cb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.time_zone&lt;/code&gt; sets the default time zone for the application and enables time zone awareness for Active Record.</source>
          <target state="translated">&lt;code&gt;config.time_zone&lt;/code&gt; 은 응용 프로그램의 기본 시간대를 설정하고 활성 레코드의 시간대 인식을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="3def47c629c1f71a5040173837231b6e27b33098" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.web_console.whiny_requests&lt;/code&gt;: Log a message when a console rendering is prevented (defaults: &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;config.web_console.whiny_requests&lt;/code&gt; : 콘솔 렌더링이 금지 될 때 메시지를 기록합니다 (기본값 : &lt;code&gt;true&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="11bc19aaecf587224cac6bc283fb4d7681eca9b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config.web_console.whitelisted_ips&lt;/code&gt;: Authorized list of IPv4 or IPv6 addresses and networks (defaults: &lt;code&gt;127.0.0.1/8, ::1&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;config.web_console.whitelisted_ips&lt;/code&gt; : 승인 된 IPv4 또는 IPv6 주소 및 네트워크 목록 (기본값 : &lt;code&gt;127.0.0.1/8, ::1&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="0bf8bf1b619d5f16ea9d2dcdcd23350e41d0d33d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config/boot.rb&lt;/code&gt; contains:</source>
          <target state="translated">&lt;code&gt;config/boot.rb&lt;/code&gt; 는 다음을 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="254c3c9f60001a5ea3789bf019bc8f26e5b17434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;config/routes.rb&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;config/routes.rb&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="6326fce7cb1a971fb0a25c0fd36b6da72cc0e08d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confirm: 'question?'&lt;/code&gt; - If present the unobtrusive JavaScript drivers will provide a prompt with the question specified. If the user accepts, the form is processed normally, otherwise no action is taken.</source>
          <target state="translated">&lt;code&gt;confirm: 'question?'&lt;/code&gt; -눈에 잘 띄지 않는 JavaScript 드라이버가 있으면 지정된 질문과 함께 프롬프트가 표시됩니다. 사용자가 동의하면 양식이 정상적으로 처리되고 그렇지 않으면 아무 조치도 취해지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3c6a52d3a69c2f3d6fd4d604bda0de64305ce7c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confirm: 'question?'&lt;/code&gt; - If present, the unobtrusive JavaScript drivers will provide a prompt with the question specified. If the user accepts, the form is processed normally, otherwise no action is taken.</source>
          <target state="translated">&lt;code&gt;confirm: 'question?'&lt;/code&gt; -존재하는 경우 눈에 잘 띄지 않는 JavaScript 드라이버가 지정된 질문을 프롬프트합니다. 사용자가 동의하면 양식이 정상적으로 처리되고 그렇지 않으면 아무 조치도 취해지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2e00b647a791166ad35084ca20f1e7b6c6ce520d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confirm: 'question?'&lt;/code&gt; - This will add a JavaScript confirm prompt with the question specified. If the user accepts, the form is processed normally, otherwise no action is taken.</source>
          <target state="translated">&lt;code&gt;confirm: 'question?'&lt;/code&gt; -질문과 함께 JavaScript 확인 ​​메시지가 추가됩니다. 사용자가 동의하면 양식이 정상적으로 처리되고 그렇지 않으면 아무 조치도 취해지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1be8dba6ff2e6fc5e09bc8cd1b2b7fdeba9e8b27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;confirm: 'question?'&lt;/code&gt; - This will allow the unobtrusive JavaScript driver to prompt with the question specified (in this case, the resulting text would be &lt;code&gt;question?&lt;/code&gt;. If the user accepts, the link is processed normally, otherwise no action is taken.</source>
          <target state="translated">&lt;code&gt;confirm: 'question?'&lt;/code&gt; -이렇게하면 눈에 잘 띄지 않는 JavaScript 드라이버가 지정된 질문에 대해 프롬프트를 표시 할 수 있습니다 (이 경우 결과 텍스트에 &lt;code&gt;question?&lt;/code&gt; . 사용자가 승인하면 링크가 정상적으로 처리되고 그렇지 않으면 아무런 조치도 취해지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="848c8fa6061b58dd0d3216f3aa0e168f59e96738" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;conn&lt;/code&gt;: an &lt;a href=&quot;abstractadapter&quot;&gt;AbstractAdapter&lt;/a&gt; object, which was obtained by earlier by calling &lt;a href=&quot;connectionpool#method-i-checkout&quot;&gt;checkout&lt;/a&gt; on this pool.</source>
          <target state="translated">&lt;code&gt;conn&lt;/code&gt; : 이 풀에서 &lt;a href=&quot;connectionpool#method-i-checkout&quot;&gt;체크 아웃&lt;/a&gt; 을 호출하여 이전에 얻은 &lt;a href=&quot;abstractadapter&quot;&gt;AbstractAdapter&lt;/a&gt; 객체 .</target>
        </trans-unit>
        <trans-unit id="c48eb193e5a05f0b17b7246f49dce666ddb9a8be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;connect&lt;/code&gt; accepts additional information the HTTP request with the &lt;code&gt;params&lt;/code&gt;, &lt;code&gt;headers&lt;/code&gt;, &lt;code&gt;session&lt;/code&gt; and Rack &lt;code&gt;env&lt;/code&gt; options.</source>
          <target state="translated">&lt;code&gt;connect&lt;/code&gt; 는 &lt;code&gt;params&lt;/code&gt; , &lt;code&gt;headers&lt;/code&gt; , &lt;code&gt;session&lt;/code&gt; 및 Rack &lt;code&gt;env&lt;/code&gt; 옵션을 사용 하여 HTTP 요청에 대한 추가 정보를 승인 합니다.</target>
        </trans-unit>
        <trans-unit id="e1ba8515883bf246e6f5fa04ede01d2229880ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;constantize&lt;/code&gt; tries to find a declared constant with the name specified in the string. It raises a &lt;a href=&quot;nameerror&quot;&gt;NameError&lt;/a&gt; when the name is not in CamelCase or is not initialized. See &lt;a href=&quot;activesupport/inflector#method-i-constantize&quot;&gt;ActiveSupport::Inflector#constantize&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;constantize&lt;/code&gt; 는 문자열에 지정된 이름으로 선언 된 상수를 찾으려고합니다. 그것은 제기 &lt;a href=&quot;nameerror&quot;&gt;나가서 설명하자면 NameError&lt;/a&gt; 이름은 낙타 표기법 아니거나 초기화되지 않았습니다. 참조 &lt;a href=&quot;activesupport/inflector#method-i-constantize&quot;&gt;ActiveSupport :: 인플 번호의 constantize을&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1213ef70cf1f427e8adcf9132bae07057afe2346" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;content_for&lt;/code&gt;, however, can also be used in helper modules.</source>
          <target state="translated">&lt;code&gt;content_for&lt;/code&gt; 그러나 content_for 는 도우미 모듈에서도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebe53ae08622a28bf7fbe103477a0e44436ec6ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;content_for?&lt;/code&gt; checks whether any content has been captured yet using &lt;code&gt;content_for&lt;/code&gt;. Useful to render parts of your layout differently based on what is in your views.</source>
          <target state="translated">&lt;code&gt;content_for?&lt;/code&gt; &lt;code&gt;content_for&lt;/code&gt; 를 사용하여 아직 컨텐츠가 캡처되었는지 여부를 확인합니다 . 뷰의 내용에 따라 레이아웃의 일부를 다르게 렌더링하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="aa82438c0c4a7270ae89a08759ec05dbfb26fa1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;content_tag_for&lt;/code&gt; and &lt;code&gt;div_for&lt;/code&gt; have been removed in favor of just using &lt;code&gt;content_tag&lt;/code&gt;. To continue using the older methods, add the &lt;code&gt;record_tag_helper&lt;/code&gt; gem to your &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;content_tag_for&lt;/code&gt; 및 &lt;code&gt;div_for&lt;/code&gt; 는 &lt;code&gt;content_tag&lt;/code&gt; 사용을 위해 제거되었습니다 . 이전 방법을 계속 사용하려면 &lt;code&gt;Gemfile&lt;/code&gt; 에 &lt;code&gt;record_tag_helper&lt;/code&gt; gem을 추가하십시오 :</target>
        </trans-unit>
        <trans-unit id="346c2cd9b5c6da20f31e1e4268db257eef28ae19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;continue [n]&lt;/code&gt;: resumes program execution at the address where your script last stopped; any breakpoints set at that address are bypassed. The optional argument &lt;code&gt;n&lt;/code&gt; allows you to specify a line number to set a one-time breakpoint which is deleted when that breakpoint is reached.</source>
          <target state="translated">&lt;code&gt;continue [n]&lt;/code&gt; : 스크립트가 마지막으로 중지 된 주소에서 프로그램 실행을 재개합니다. 해당 주소에 설정된 중단 점이 무시됩니다. 선택적 인수 &lt;code&gt;n&lt;/code&gt; 을 사용하면 줄 번호를 지정하여 해당 중단 점에 도달 할 때 삭제되는 일회성 중단 점을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0067de5b3418573403e1e43d06bbeaafbfa23211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controls: true&lt;/code&gt;, provides browser supplied controls for the user to interact with the audio.</source>
          <target state="translated">&lt;code&gt;controls: true&lt;/code&gt; , 사용자가 오디오와 상호 작용할 수 있도록 브라우저 제공 컨트롤을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="75792e3c6c746722648ed073e7b5a52e65c1266e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;controls: true&lt;/code&gt;, provides browser supplied controls for the user to interact with the video.</source>
          <target state="translated">&lt;code&gt;controls: true&lt;/code&gt; , 사용자가 비디오와 상호 작용할 수 있도록 브라우저 제공 제어를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="24c541aaf5038ea17c8030b522e8ae29a5b11dd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;cookies&lt;/code&gt; - Any cookies that are set</source>
          <target state="translated">&lt;code&gt;cookies&lt;/code&gt; -설정된 쿠키</target>
        </trans-unit>
        <trans-unit id="b9117b9ace07ef4052743ef99c2e3ca139860f91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;count&lt;/code&gt;, where available, can be used for pluralization if present:</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; 가능한 경우 count 가 복수형에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b774fe1f3c5f725e61a8aa13146e7f6189fe5f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;counter_name&lt;/code&gt; - The name of the field that should be decremented.</source>
          <target state="translated">&lt;code&gt;counter_name&lt;/code&gt; - 감소시켜야 할 필드의 이름.</target>
        </trans-unit>
        <trans-unit id="b29f85466c8e8059815d7597d3134ecfa667d225" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;counter_name&lt;/code&gt; - The name of the field that should be incremented.</source>
          <target state="translated">&lt;code&gt;counter_name&lt;/code&gt; - 증분해야하는 필드의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="380c7def8e59017c2745026189052509ba589283" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;counters&lt;/code&gt; - A &lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt; containing the names of the fields to update as keys and the amount to update the field by as values.</source>
          <target state="translated">&lt;code&gt;counters&lt;/code&gt; - 키로 업데이트 할 필드 이름과 필드를 값으로 업데이트 할 금액을 포함 하는 &lt;a href=&quot;../../hash&quot;&gt;해시&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9b758458cab1bddf5247a00091a003339ccb2a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;counters&lt;/code&gt; - One or more association counters to reset. Association name or counter name can be given.</source>
          <target state="translated">&lt;code&gt;counters&lt;/code&gt; - 재설정 할 하나 이상의 연관 카운터입니다. 협회 이름 또는 카운터 이름을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a3913cb68efd8d21a91d6fb527537ca71e71d6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create_file&lt;/code&gt; is a method provided by &lt;code&gt;Thor::Actions&lt;/code&gt;. Documentation for &lt;code&gt;create_file&lt;/code&gt; and other Thor methods can be found in &lt;a href=&quot;http://rdoc.info/github/erikhuda/thor/master/Thor/Actions.html&quot;&gt;Thor's documentation&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;create_file&lt;/code&gt; 은 &lt;code&gt;Thor::Actions&lt;/code&gt; 제공하는 메소드 입니다. 에 대한 문서 &lt;code&gt;create_file&lt;/code&gt; 및 기타 토르 방법에서 찾을 수 있습니다 &lt;a href=&quot;http://rdoc.info/github/erikhuda/thor/master/Thor/Actions.html&quot;&gt;토르의 설명서&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="362649c7e8a0ab95472934fc044b45b943774d69" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create_join_table(table_1, table_2, options)&lt;/code&gt;: Creates a join table having its name as the lexical order of the first two arguments. See &lt;a href=&quot;connectionadapters/schemastatements#method-i-create_join_table&quot;&gt;ActiveRecord::ConnectionAdapters::SchemaStatements#create_join_table&lt;/a&gt; for details.</source>
          <target state="translated">&lt;code&gt;create_join_table(table_1, table_2, options)&lt;/code&gt; : 이름이 첫 번째 두 인수의 어휘 순서 인 조인 테이블을 만듭니다. 자세한 내용은 &lt;a href=&quot;connectionadapters/schemastatements#method-i-create_join_table&quot;&gt;ActiveRecord :: ConnectionAdapters :: SchemaStatements # create_join_table&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3c3c0ab201684cd3217a1454cd238251ba6f7041" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create_join_table&lt;/code&gt; also accepts a block, which you can use to add indices (which are not created by default) or additional columns:</source>
          <target state="translated">&lt;code&gt;create_join_table&lt;/code&gt; 은 인덱스 (기본적으로 생성되지 않은) 또는 추가 열을 추가하는 데 사용할 수있는 블록도 허용합니다.</target>
        </trans-unit>
        <trans-unit id="98859f4fe11ffe542a47f5271a87d5de5216ac1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;create_table(name, options)&lt;/code&gt;: Creates a table called &lt;code&gt;name&lt;/code&gt; and makes the table object available to a block that can then add columns to it, following the same format as &lt;code&gt;add_column&lt;/code&gt;. See example above. The options hash is for fragments like &amp;ldquo;DEFAULT CHARSET=UTF-8&amp;rdquo; that are appended to the create table definition.</source>
          <target state="translated">&lt;code&gt;create_table(name, options)&lt;/code&gt; : &lt;code&gt;name&lt;/code&gt; 이라는 테이블을 만들고 &lt;code&gt;add_column&lt;/code&gt; 과 같은 형식으로 테이블에 열을 추가 할 수있는 테이블 객체를 블록에 사용할 수있게합니다 . 위의 예를 참조하십시오. 해시 옵션은 테이블 생성 정의에 추가되는&amp;ldquo;DEFAULT CHARSET = UTF-8&amp;rdquo;과 같은 조각에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2bce64c07e0822eb4fec72f9b6cdceb25fc32e3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;created_at&lt;/code&gt; - Automatically gets set to the current date and time when the record is first created.</source>
          <target state="translated">&lt;code&gt;created_at&lt;/code&gt; - 레코드가 처음 작성된 현재 날짜 및 시간으로 자동 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="c8afbb29f523b62afbbfde98d03969736c98d8ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;css_select(selector)&lt;/code&gt; or &lt;code&gt;css_select(element, selector)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;css_select(selector)&lt;/code&gt; 또는 &lt;code&gt;css_select(element, selector)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8b233b297a1d0dd31820e012e6d4efb7aa8c3538" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;datetime_select&lt;/code&gt; and &lt;code&gt;select_month&lt;/code&gt; use translated month names for populating the resulting select tag. See &lt;a href=&quot;https://github.com/rails/rails/blob/master/activesupport/lib/active_support/locale/en.yml#L15&quot;&gt;date.month_names&lt;/a&gt; for translations. &lt;code&gt;datetime_select&lt;/code&gt; also looks up the order option from &lt;a href=&quot;https://github.com/rails/rails/blob/master/activesupport/lib/active_support/locale/en.yml#L18&quot;&gt;date.order&lt;/a&gt; (unless you pass the option explicitly). All date selection helpers translate the prompt using the translations in the &lt;a href=&quot;https://github.com/rails/rails/blob/master/actionview/lib/action_view/locale/en.yml#L39&quot;&gt;datetime.prompts&lt;/a&gt; scope if applicable.</source>
          <target state="translated">&lt;code&gt;datetime_select&lt;/code&gt; 및 &lt;code&gt;select_month&lt;/code&gt; 는 번역 된 월 이름을 사용하여 결과 선택 태그를 채 웁니다 . 번역 은 &lt;a href=&quot;https://github.com/rails/rails/blob/master/activesupport/lib/active_support/locale/en.yml#L15&quot;&gt;date.month_names&lt;/a&gt; 를 참조하십시오 . &lt;code&gt;datetime_select&lt;/code&gt; 는 &lt;a href=&quot;https://github.com/rails/rails/blob/master/activesupport/lib/active_support/locale/en.yml#L18&quot;&gt;date.order&lt;/a&gt; 에서 order 옵션을 찾습니다 (옵션을 명시 적으로 전달하지 않는 한). 모든 날짜 선택 도우미는 해당되는 경우 &lt;a href=&quot;https://github.com/rails/rails/blob/master/actionview/lib/action_view/locale/en.yml#L39&quot;&gt;datetime.prompts&lt;/a&gt; 범위 의 번역을 사용하여 프롬프트를 번역합니다 .</target>
        </trans-unit>
        <trans-unit id="b5fb81216ffbd9534f5073e19df31727aef18d80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db/schema.rb&lt;/code&gt; and &lt;code&gt;db/structure.sql&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;db/schema.rb&lt;/code&gt; 및 &lt;code&gt;db/structure.sql&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cbfd5f005d1dc124a3cf794aeb5f9377ad1defd8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;db/schema.rb&lt;/code&gt; cannot express everything your database may support such as triggers, sequences, stored procedures, check constraints, etc. While migrations may use &lt;code&gt;execute&lt;/code&gt; to create database constructs that are not supported by the Ruby migration DSL, these constructs may not be able to be reconstituted by the schema dumper. If you are using features like these, you should set the schema format to &lt;code&gt;:sql&lt;/code&gt; in order to get an accurate schema file that is useful to create new database instances.</source>
          <target state="translated">&lt;code&gt;db/schema.rb&lt;/code&gt; 는 트리거, 시퀀스, 저장 프로 시저, 점검 제한 조건 등과 같이 데이터베이스가 지원할 수있는 모든 것을 표현할 수 없습니다. 이주는 루비 이주 DSL에서 지원하지 않는 데이터베이스 구조를 작성 하기 &lt;code&gt;execute&lt;/code&gt; 을 사용할 수 있지만 이러한 구조는 그렇지 않을 수 있습니다. 스키마 덤퍼가 재구성 할 수 있습니다. 이와 같은 기능 을 사용하는 경우 새 데이터베이스 인스턴스를 작성하는 데 유용한 정확한 스키마 파일을 얻으려면 스키마 형식을 &lt;code&gt;:sql&lt;/code&gt; 로 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="bf195b6d737630bb5e9acef80c23d183d78e0b75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;debugger&lt;/code&gt; is not supported by Ruby 2.2 which is required by Rails 5. Use &lt;code&gt;byebug&lt;/code&gt; instead.</source>
          <target state="translated">&lt;code&gt;debugger&lt;/code&gt; Rails 5에 필요한 Ruby 2.2에서는 디버거 가 지원되지 않습니다 . 대신 &lt;code&gt;byebug&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="84d3df1ac289aacb34ac015e66b8bf68b0471cea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default Hash&lt;/code&gt; - This is a hash of default values for any email you send from this mailer. In this case we are setting the &lt;code&gt;:from&lt;/code&gt; header to a value for all messages in this class. This can be overridden on a per-email basis.</source>
          <target state="translated">&lt;code&gt;default Hash&lt;/code&gt; -이 메일러에서 보내는 모든 이메일의 기본값 해시입니다. 이 경우 &lt;code&gt;:from&lt;/code&gt; 헤더를이 클래스의 모든 메시지에 대한 값 으로 설정합니다 . 전자 메일별로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb7cc53ed0de02b5fe3ca97ee7583125e9d41cfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt; Allows to set a default value on the column. Note that if you are using a dynamic value (such as a date), the default will only be calculated the first time (i.e. on the date the migration is applied).</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 열에 기본값을 설정할 수 있습니다. 동적 값 (예 : 날짜)을 사용하는 경우 기본값은 처음 (즉, 마이그레이션이 적용된 날짜)에만 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="58b693383effe675418ab30875a88d90fa8d0361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt; The default value to use when no value is provided. If this option is not passed, the previous default value (if any) will be used. Otherwise, the default will be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 값이 제공되지 않을 때 사용할 기본값입니다. 이 옵션이 전달되지 않으면 이전 기본값 (있는 경우)이 사용됩니다. 그렇지 않으면 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fe221f42c955e17def6e5f6cdac59ba647aefd1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt; The default value to use when no value is provided. If this option is not passed, the previous default value (if any) will be used. Otherwise, the default will be &lt;code&gt;nil&lt;/code&gt;. A proc can also be passed, and will be called once each time a new value is needed.</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; 값이 제공되지 않을 때 사용할 기본값입니다. 이 옵션이 전달되지 않으면 이전 기본값 (있는 경우)이 사용됩니다. 그렇지 않으면 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다. proc도 전달할 수 있으며 새로운 값이 필요할 때마다 한 번씩 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="440eb5947f405f444a6f85ff803564a83fd8ad08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default_options&lt;/code&gt; - You can pass this in at a class level as well as within the class itself as per the above section.</source>
          <target state="translated">&lt;code&gt;default_options&lt;/code&gt; - 위의 섹션에 따라 클래스 자체뿐만 아니라 클래스 수준에서도이를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="462260cb7794ba7cdb256571347b032fc5861d16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delete_matched&lt;/code&gt; support for Redis KEYS globs.</source>
          <target state="translated">&lt;code&gt;delete_matched&lt;/code&gt; Redis KEYS globs에 대한 delete_matched 지원</target>
        </trans-unit>
        <trans-unit id="223161e0e94fe0066f7ed4f78e328ac27cadf4ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deliver_later_queue_name&lt;/code&gt; - The name of the queue used with &lt;code&gt;deliver_later&lt;/code&gt;. Defaults to &lt;code&gt;mailers&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;deliver_later_queue_name&lt;/code&gt; -에 사용되는 큐의 이름 &lt;code&gt;deliver_later&lt;/code&gt; . 기본 설정은 &lt;code&gt;mailers&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f5a5a062300ee6bc025aed9ef39077cb28519b49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;deliveries&lt;/code&gt; - Keeps an array of all the emails sent out through the Action Mailer with &lt;code&gt;delivery_method :test&lt;/code&gt;. Most useful for unit and functional testing.</source>
          <target state="translated">&lt;code&gt;deliveries&lt;/code&gt; -와 함께 작업 메일러를 통해 전송되는 모든 이메일의 배열 유지 &lt;code&gt;delivery_method :test&lt;/code&gt; . 단위 및 기능 테스트에 가장 유용합니다.</target>
        </trans-unit>
        <trans-unit id="346ed328f0ce7029a58dd553dd9e09ae88fdf1f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;delivery_method&lt;/code&gt; - Defines a delivery method. Possible values are &lt;code&gt;:smtp&lt;/code&gt; (default), &lt;code&gt;:sendmail&lt;/code&gt;, &lt;code&gt;:test&lt;/code&gt;, and &lt;code&gt;:file&lt;/code&gt;. Or you may provide a custom delivery method object e.g. &lt;code&gt;MyOwnDeliveryMethodClass&lt;/code&gt;. See the Mail gem documentation on the interface you need to implement for a custom delivery agent.</source>
          <target state="translated">&lt;code&gt;delivery_method&lt;/code&gt; - 전달 방법을 정의합니다. 가능한 값은 &lt;code&gt;:smtp&lt;/code&gt; (기본값), &lt;code&gt;:sendmail&lt;/code&gt; , &lt;code&gt;:test&lt;/code&gt; 및 &lt;code&gt;:file&lt;/code&gt; 입니다. 또는 &lt;code&gt;MyOwnDeliveryMethodClass&lt;/code&gt; 와 같은 사용자 지정 전달 방법 객체를 제공 할 수 있습니다 . 사용자 지정 배달 에이전트에 대해 구현해야하는 인터페이스에서 Mail gem 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b04473d192b921d77b41bad0d5b3fbd5fce81d74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dependencies&lt;/code&gt; - An array of dependent views</source>
          <target state="translated">&lt;code&gt;dependencies&lt;/code&gt; -의존적 뷰의 배열</target>
        </trans-unit>
        <trans-unit id="276876f68fc62e65934033c66fbfe35c8ede0fa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disable breakpoints [n [m [...]]]&lt;/code&gt;: make certain (or all) breakpoints have no effect on your program.</source>
          <target state="translated">&lt;code&gt;disable breakpoints [n [m [...]]]&lt;/code&gt; : 특정 (또는 모든) 중단 점이 프로그램에 영향을 미치지 않도록하십시오.</target>
        </trans-unit>
        <trans-unit id="d75256326c233251c7e61118b68fc6696755ac07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;disable_dependency_loading&lt;/code&gt;: Disables the automatic dependency loading if the &lt;code&gt;config.eager_load&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;disable_dependency_loading&lt;/code&gt; : &lt;code&gt;config.eager_load&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 로 설정된 경우 자동 종속성로드를 비활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="0bfaa447a3e52d2100f339815619b57e5ec4bac2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;distance_of_time_in_words&lt;/code&gt; translates and pluralizes its result and interpolates the number of seconds, minutes, hours, and so on. See &lt;a href=&quot;https://github.com/rails/rails/blob/master/actionview/lib/action_view/locale/en.yml#L4&quot;&gt;datetime.distance_in_words&lt;/a&gt; translations.</source>
          <target state="translated">&lt;code&gt;distance_of_time_in_words&lt;/code&gt; 는 결과를 번역하고 복수화하고 초, 분, 시간 등을 보간합니다. &lt;a href=&quot;https://github.com/rails/rails/blob/master/actionview/lib/action_view/locale/en.yml#L4&quot;&gt;datetime.distance_in_words&lt;/a&gt; 번역을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ab404e2d205647e2f09442f66718c2426470cec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;driven_by&lt;/code&gt; has a required argument for the driver name. The keyword arguments are &lt;code&gt;:using&lt;/code&gt; for the browser and &lt;code&gt;:screen_size&lt;/code&gt; to change the size of the browser screen. These two options are not applicable for headless drivers and will be silently ignored if passed.</source>
          <target state="translated">&lt;code&gt;driven_by&lt;/code&gt; 에는 드라이버 이름에 필요한 인수가 있습니다. 키워드 인수는 브라우저에서 &lt;code&gt;:using&lt;/code&gt; 이고 &lt;code&gt;:screen_size&lt;/code&gt; 는 브라우저 화면의 크기를 변경합니다. 이 두 옵션은 헤드리스 드라이버에는 적용되지 않으며 통과하면 자동으로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="caa45553bd9b4946f71c50fc9f94b3e3466f3c6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;drop_join_table(table_1, table_2, options)&lt;/code&gt;: Drops the join table specified by the given arguments.</source>
          <target state="translated">&lt;code&gt;drop_join_table(table_1, table_2, options)&lt;/code&gt; : 주어진 인수로 지정된 조인 테이블을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="4f689f0f6231a9c98960dc866ba6e04511a8812a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;drop_table(name)&lt;/code&gt;: Drops the table called &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;drop_table(name)&lt;/code&gt; : &lt;code&gt;name&lt;/code&gt; 이라는 테이블을 삭제합니다 .</target>
        </trans-unit>
        <trans-unit id="497fc707972f49329ea59937349f7e4eaa38619d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eager_load!&lt;/code&gt;: If &lt;code&gt;config.eager_load&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, runs the &lt;code&gt;config.before_eager_load&lt;/code&gt; hooks and then calls &lt;code&gt;eager_load!&lt;/code&gt; which will load all &lt;code&gt;config.eager_load_namespaces&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;eager_load!&lt;/code&gt; : &lt;code&gt;config.eager_load&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 이면 &lt;code&gt;config.before_eager_load&lt;/code&gt; 후크를 실행 한 다음 &lt;code&gt;eager_load!&lt;/code&gt; 를 호출 합니다! 모든 &lt;code&gt;config.eager_load_namespaces&lt;/code&gt; 를로드합니다 .</target>
        </trans-unit>
        <trans-unit id="59488d597a324b878f40174601681034e5cbc71c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;eager_load_paths&lt;/code&gt; is initially the &lt;code&gt;app&lt;/code&gt; paths above</source>
          <target state="translated">&lt;code&gt;eager_load_paths&lt;/code&gt; 는 처음에는 위 의 &lt;code&gt;app&lt;/code&gt; 경로입니다.</target>
        </trans-unit>
        <trans-unit id="3132f38cee86b3a6755a9ed7007b70804fc5fb1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edit [file:n]&lt;/code&gt;: edit file named &lt;em&gt;file&lt;/em&gt; using the editor specified by the EDITOR environment variable. A specific line &lt;em&gt;n&lt;/em&gt; can also be given.</source>
          <target state="translated">&lt;code&gt;edit [file:n]&lt;/code&gt; : EDITOR 환경 변수로 지정된 편집기를 사용하여 file이라는 &lt;em&gt;파일&lt;/em&gt; 을 편집합니다 . 특정 라인 &lt;em&gt;n&lt;/em&gt; 도 주어질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a627570953e1b99523127f614fc7ddffc8634841" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edit_geocoder_path&lt;/code&gt; returns &lt;code&gt;/geocoder/edit&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;edit_geocoder_path&lt;/code&gt; 는 &lt;code&gt;/geocoder/edit&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="20f860fa20985a95216c9e4fd6ec62a7e883c1d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edit_photo_path(:id)&lt;/code&gt; returns &lt;code&gt;/photos/:id/edit&lt;/code&gt; (for instance, &lt;code&gt;edit_photo_path(10)&lt;/code&gt; returns &lt;code&gt;/photos/10/edit&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;edit_photo_path(:id)&lt;/code&gt; 는 &lt;code&gt;/photos/:id/edit&lt;/code&gt; 를 반환합니다 &lt;code&gt;edit_photo_path(10)&lt;/code&gt; 예 : edit_photo_path (10) 은 &lt;code&gt;/photos/10/edit&lt;/code&gt; 를 반환 )</target>
        </trans-unit>
        <trans-unit id="2786fce9721aa40804238dce0953d87e182b0d3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;edit_polymorphic_url&lt;/code&gt;, &lt;code&gt;edit_polymorphic_path&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;edit_polymorphic_url&lt;/code&gt; , &lt;code&gt;edit_polymorphic_path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20bd31abb8d2d1067c5e3c92ce7886e823e28a8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;email.body.to_s&lt;/code&gt; is present when there's only one (HTML or text) part present. If the mailer provides both, you can test your fixture against specific parts with &lt;code&gt;email.text_part.body.to_s&lt;/code&gt; or &lt;code&gt;email.html_part.body.to_s&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;email.body.to_s&lt;/code&gt; 는 (HTML 또는 텍스트) 부분이 하나만있을 때 나타납니다. 메일러가 둘 다 제공하는 경우 &lt;code&gt;email.text_part.body.to_s&lt;/code&gt; 또는 &lt;code&gt;email.html_part.body.to_s&lt;/code&gt; 를 사용하여 특정 부품에 대해 조명기를 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="feb571f2be177fafaab780701bade197a1396e54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;enable breakpoints [n [m [...]]]&lt;/code&gt;: allows a specific breakpoint list or all breakpoints to stop your program. This is the default state when you create a breakpoint.</source>
          <target state="translated">&lt;code&gt;enable breakpoints [n [m [...]]]&lt;/code&gt; : 특정 중단 점 목록 또는 모든 중단 점이 프로그램을 중지 할 수 있도록합니다. 중단 점을 만들 때의 기본 상태입니다.</target>
        </trans-unit>
        <trans-unit id="91ac03e352b3c4e6bb97d1af59207e9e4b4a23f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;engines_blank_point&lt;/code&gt;: Provides a point-in-initialization to hook into if you wish to do anything before engines are loaded. After this point, all railtie and engine initializers are run.</source>
          <target state="translated">&lt;code&gt;engines_blank_point&lt;/code&gt; : 엔진을로드하기 전에 원하는 작업을 수행하려는 경우 초기화 할 시점을 제공합니다. 이 시점이 지나면 모든 railtie 및 engine 이니셜 라이저가 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="98702cb5fde21923255dad15c352aad6e2d16a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ensure_autoload_once_paths_as_subset&lt;/code&gt;: Ensures that the &lt;code&gt;config.autoload_once_paths&lt;/code&gt; only contains paths from &lt;code&gt;config.autoload_paths&lt;/code&gt;. If it contains extra paths, then an exception will be raised.</source>
          <target state="translated">&lt;code&gt;ensure_autoload_once_paths_as_subset&lt;/code&gt; : 보장하는 것을 &lt;code&gt;config.autoload_once_paths&lt;/code&gt; 이 단지에서 경로 포함 &lt;code&gt;config.autoload_paths&lt;/code&gt; 을 . 추가 경로가 포함되어 있으면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e2ab7f2faf6624b430c778f764730a9c1bc78d49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;env&lt;/code&gt;: Additional env to pass, as a &lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt;. The headers will be merged into the Rack env hash.</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; : &lt;a href=&quot;../../hash&quot;&gt;해시&lt;/a&gt; 로 전달할 추가 env . 헤더가 Rack env 해시에 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="9a05469f5e718d39c713686a0fa301491f5eb25f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;env&lt;/code&gt;: for customizing the request environment as needed.</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; : 필요에 따라 요청 환경을 사용자 정의합니다.</target>
        </trans-unit>
        <trans-unit id="dcf2748dcc9c8496ac4510be24159443c52a057c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;env_name:&lt;/code&gt; The environment name. Defaults to &lt;code&gt;nil&lt;/code&gt; which will collect configs for all environments.</source>
          <target state="translated">&lt;code&gt;env_name:&lt;/code&gt; 환경 이름. 모든 환경에 대한 구성을 수집하는 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="42cae0daaeaa3f84043abba571b84ac237a318ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errors[]&lt;/code&gt; is used when you want to check the error messages for a specific attribute. It returns an array of strings with all error messages for the given attribute, each string with one error message. If there are no errors related to the attribute, it returns an empty array.</source>
          <target state="translated">&lt;code&gt;errors[]&lt;/code&gt; 는 특정 속성에 대한 오류 메시지를 확인할 때 사용됩니다. 주어진 속성에 대한 모든 오류 메시지가 포함 된 문자열 배열을 반환합니다. 각 문자열에는 하나의 오류 메시지가 있습니다. 속성과 관련된 오류가 없으면 빈 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d03021f4bf8577a6038b044e3badd17ad79116e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;errors[attribute]&lt;/code&gt; is used to retrieve the errors of a model for a given attribute. If errors are present, the method should return an array of strings that are the errors for the attribute in question. If localization is used, the strings should be localized for the current locale. If no error is present, the method should return an empty array.</source>
          <target state="translated">&lt;code&gt;errors[attribute]&lt;/code&gt; 는 주어진 속성에 대한 모델의 오류를 검색하는 데 사용됩니다. 오류가있는 경우 메소드는 해당 속성의 오류 인 문자열 배열을 리턴해야합니다. 지역화를 사용하는 경우 현재 지역에 맞게 문자열을 지역화해야합니다. 오류가 없으면 메서드는 빈 배열을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6c2126fe1a87d8c7fcac85adf18eb935ea19433" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;except&lt;/code&gt; - The callback should be run for all actions except this action.</source>
          <target state="translated">&lt;code&gt;except&lt;/code&gt; - 이 액션을 제외한 모든 액션에 대해 콜백을 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="dd7e6d356f823c43260017f6299e3be28a027dbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;execute&lt;/code&gt; which executes the given block on initialization and updates the latest watched files and timestamp.</source>
          <target state="translated">&lt;code&gt;execute&lt;/code&gt; 초기에 주어진 블록을 실행하고 최신 감시 파일과 타임 스탬프를 업데이트한다.</target>
        </trans-unit>
        <trans-unit id="33d133af6e15ab18be8098f40c7f1d07c6e4dd37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;execute_if_updated&lt;/code&gt; which just executes the block if it was updated.</source>
          <target state="translated">&lt;code&gt;execute_if_updated&lt;/code&gt; 블록이 업데이트 된 경우에만 블록을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="8de2eb4bc0e2b2f2966990a504b8102f17515eff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expire_after&lt;/code&gt; - The length of time a session will be stored before automatically expiring.</source>
          <target state="translated">&lt;code&gt;expire_after&lt;/code&gt; - 세션이 자동 만료되기 전에 저장되는 시간입니다.</target>
        </trans-unit>
        <trans-unit id="50a1f165c55da0c5137a666a9dcc49880197bbce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expire_after&lt;/code&gt; - The length of time a session will be stored before automatically expiring. By default, the &lt;code&gt;:expires_in&lt;/code&gt; option of the cache is used.</source>
          <target state="translated">&lt;code&gt;expire_after&lt;/code&gt; - 세션이 자동 만료되기 전에 저장되는 시간입니다. 기본적으로 캐시 의 &lt;code&gt;:expires_in&lt;/code&gt; 옵션이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="07a7e0f7ac81e2b38368e6f9d99c350a59eb6330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;expires&lt;/code&gt;: How long, in seconds, these settings will stick. The minimum required to qualify for browser preload lists is 1 year. Defaults to 1 year (recommended).</source>
          <target state="translated">&lt;code&gt;expires&lt;/code&gt; :이 설정이 지속되는 시간 (초)입니다. 브라우저 사전로드 목록에 필요한 최소 요구 사항은 1 년입니다. 기본값은 1 년입니다 (권장).</target>
        </trans-unit>
        <trans-unit id="31d1b0695bf09fa6f8448c96d53801ebcd05664e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; - Returns always &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; - 항상 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="d514cb99ef158e955b000f855129b5121567e245" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;false&lt;/code&gt; is blank:</source>
          <target state="translated">&lt;code&gt;false&lt;/code&gt; 는 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="065683f648e21ec336c10b3b3ae4aa7b2f1e4180" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;file_settings&lt;/code&gt; - Allows you to override options for the &lt;code&gt;:file&lt;/code&gt; delivery method.</source>
          <target state="translated">&lt;code&gt;file_settings&lt;/code&gt; - &lt;code&gt;:file&lt;/code&gt; 전달 방법에 대한 옵션을 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c844ec9bae53efb30d8ce8e433390d2cb333299" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find_all_by_...&lt;/code&gt; becomes &lt;code&gt;where(...)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;find_all_by_...&lt;/code&gt; 는 &lt;code&gt;where(...)&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="0ff93fb62d802ea70a7879e9514bc6fea4ba6175" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find_by_sql&lt;/code&gt; has a close relative called &lt;code&gt;connection#select_all&lt;/code&gt;. &lt;code&gt;select_all&lt;/code&gt; will retrieve objects from the database using custom SQL just like &lt;code&gt;find_by_sql&lt;/code&gt; but will not instantiate them. This method will return an instance of &lt;code&gt;ActiveRecord::Result&lt;/code&gt; class and calling &lt;code&gt;to_a&lt;/code&gt; on this object would return you an array of hashes where each hash indicates a record.</source>
          <target state="translated">&lt;code&gt;find_by_sql&lt;/code&gt; 에는 &lt;code&gt;connection#select_all&lt;/code&gt; 이라는 친척이 있습니다. &lt;code&gt;select_all&lt;/code&gt; 은 &lt;code&gt;find_by_sql&lt;/code&gt; 과 같이 사용자 정의 SQL을 사용하여 데이터베이스에서 오브젝트를 검색 하지만 인스턴스화하지는 않습니다. 이 메소드는 &lt;code&gt;ActiveRecord::Result&lt;/code&gt; 클래스 의 인스턴스를 리턴 하고이 오브젝트에서 &lt;code&gt;to_a&lt;/code&gt; 를 호출 하면 각 해시가 레코드를 나타내는 해시 배열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2b46e2c86d27a2f751a74bc0e3abe2e28faba642" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find_by_sql&lt;/code&gt; provides you with a simple way of making custom calls to the database and retrieving instantiated objects.</source>
          <target state="translated">&lt;code&gt;find_by_sql&lt;/code&gt; 은 데이터베이스에 대한 사용자 정의 호출을 수행하고 인스턴스화 된 오브젝트를 검색하는 간단한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7d706fb81084ff62fcc4c9246e1aa1c80c253ed5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find_each&lt;/code&gt; works on model classes, as seen above, and also on relations:</source>
          <target state="translated">&lt;code&gt;find_each&lt;/code&gt; 는 위와 같이 모델 클래스와 관계에서도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="99e67ddc36ee04ea5392710c11ec0ec3512c251c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find_in_batches&lt;/code&gt; works on model classes, as seen above, and also on relations:</source>
          <target state="translated">&lt;code&gt;find_in_batches&lt;/code&gt; 는 위와 같이 모델 클래스와 관계에서도 작동합니다.</target>
        </trans-unit>
        <trans-unit id="35b5bf2e4c467a89ef6cf6d989862a1c72376f6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find_last_by_...&lt;/code&gt; becomes &lt;code&gt;where(...).last&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;find_last_by_...&lt;/code&gt; 는 &lt;code&gt;where(...).last&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="76cec2c22430d62d1d37dbe99c5152d68e14a1c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find_or_create_by&lt;/code&gt; returns either the record that already exists or the new record. In our case, we didn't already have a client named Andy so the record is created and returned.</source>
          <target state="translated">&lt;code&gt;find_or_create_by&lt;/code&gt; 는 이미 존재하는 레코드 또는 새 레코드를 리턴합니다. 우리의 경우에는 Andy라는 클라이언트가 없었으므로 레코드가 만들어지고 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="86132afdb86d66814a4a7fa5a0ab4da43fb0895a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find_or_create_by_...&lt;/code&gt; becomes &lt;code&gt;find_or_create_by(...)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;find_or_create_by_...&lt;/code&gt; 는 &lt;code&gt;find_or_create_by(...)&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="15db54be054ec39ed8089c64db8f47dc1e773a6a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;find_or_initialize_by_...&lt;/code&gt; becomes &lt;code&gt;find_or_initialize_by(...)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;find_or_initialize_by_...&lt;/code&gt; 는 &lt;code&gt;find_or_initialize_by(...)&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="0df4480f9d271ce2c7299c65dc5b07d69a5eeab7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;finder&lt;/code&gt; - An instance of &lt;code&gt;ActionView::LookupContext&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;finder&lt;/code&gt; &lt;code&gt;ActionView::LookupContext&lt;/code&gt; 의 인스턴스</target>
        </trans-unit>
        <trans-unit id="9836116ac2e4b6535f2a3f71c7ec96763de18c19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;finish [n]&lt;/code&gt;: execute until the selected stack frame returns. If no frame number is given, the application will run until the currently selected frame returns. The currently selected frame starts out the most-recent frame or 0 if no frame positioning (e.g up, down, or frame) has been performed. If a frame number is given it will run until the specified frame returns.</source>
          <target state="translated">&lt;code&gt;finish [n]&lt;/code&gt; : 선택된 스택 프레임이 돌아올 때까지 실행합니다. 프레임 번호를 지정하지 않으면 현재 선택된 프레임이 반환 될 때까지 응용 프로그램이 실행됩니다. 현재 선택된 프레임은 가장 최근의 프레임을 시작하거나 프레임 위치 지정 (예 : 위, 아래 또는 프레임)이 수행되지 않은 경우 0입니다. 프레임 번호가 지정되면 지정된 프레임이 반환 될 때까지 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="e0285801cc76cd55127f07f44895ba90fb5f6b44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;finisher_hook&lt;/code&gt;: Provides a hook for after the initialization of process of the application is complete, as well as running all the &lt;code&gt;config.after_initialize&lt;/code&gt; blocks for the application, railties, and engines.</source>
          <target state="translated">&lt;code&gt;finisher_hook&lt;/code&gt; : 응용 프로그램의 프로세스 초기화가 완료된 후 응용 프로그램, 레일 및 엔진에 대한 모든 &lt;code&gt;config.after_initialize&lt;/code&gt; 블록을 실행하는 데 필요한 후크를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="d78b6c06731cdbe21d379a6b079d7febf3a0ad0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flash&lt;/code&gt; - Any objects living in the flash</source>
          <target state="translated">&lt;code&gt;flash&lt;/code&gt; -플래시에있는 모든 객체</target>
        </trans-unit>
        <trans-unit id="a4ec4374d9e4fd6e9cbf34eff70e4729b9880fdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;flash&lt;/code&gt;: A hash of parameters to store in the flash. This may be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;flash&lt;/code&gt; : 플래시 에 저장할 매개 변수의 해시입니다. &lt;code&gt;nil&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="03ab4ada9750b27a53ac8488fd355dddb3984436" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;force_plural&lt;/code&gt; allows pluralized model names. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;force_plural&lt;/code&gt; 은 복수화 된 모델 이름을 허용합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4745e845b837c3baeeed6dfa7498700cd38709a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;form&lt;/code&gt; - The form you want to normalize in. Should be one of the following: &lt;code&gt;:c&lt;/code&gt;, &lt;code&gt;:kc&lt;/code&gt;, &lt;code&gt;:d&lt;/code&gt;, or &lt;code&gt;:kd&lt;/code&gt;. Default is &lt;a href=&quot;unicode#attribute-i-default_normalization_form&quot;&gt;#default_normalization_form&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;form&lt;/code&gt; . : - 당신이 정상화 할 양식은 다음 중 하나이어야한다 &lt;code&gt;:c&lt;/code&gt; , &lt;code&gt;:kc&lt;/code&gt; , &lt;code&gt;:d&lt;/code&gt; , 또는 &lt;code&gt;:kd&lt;/code&gt; . 기본값은 &lt;a href=&quot;unicode#attribute-i-default_normalization_form&quot;&gt;#default_normalization_form&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="99b76a03f4fac77a0ba80a3d2f1a88720a79f38e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;form&lt;/code&gt; - The form you want to normalize in. Should be one of the following: &lt;code&gt;:c&lt;/code&gt;, &lt;code&gt;:kc&lt;/code&gt;, &lt;code&gt;:d&lt;/code&gt;, or &lt;code&gt;:kd&lt;/code&gt;. Default is &lt;a href=&quot;unicode#attribute-i-default_normalization_form&quot;&gt;ActiveSupport::Multibyte::Unicode#default_normalization_form&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;form&lt;/code&gt; . : - 당신이 정상화 할 양식은 다음 중 하나이어야한다 &lt;code&gt;:c&lt;/code&gt; , &lt;code&gt;:kc&lt;/code&gt; , &lt;code&gt;:d&lt;/code&gt; , 또는 &lt;code&gt;:kd&lt;/code&gt; . 기본값은 &lt;a href=&quot;unicode#attribute-i-default_normalization_form&quot;&gt;ActiveSupport :: Multibyte :: Unicode # default_normalization_form입니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="843b8b0e2c1d0328df5d59b5143d61dbaa61be91" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;form_with&lt;/code&gt; options</source>
          <target state="translated">&lt;code&gt;form_with&lt;/code&gt; 옵션</target>
        </trans-unit>
        <trans-unit id="678061c4a7c54bea9e72364d1ed669abfa2803e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt; - &lt;a href=&quot;template&quot;&gt;Template&lt;/a&gt; format</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; - &lt;a href=&quot;template&quot;&gt;템플릿&lt;/a&gt; 형식</target>
        </trans-unit>
        <trans-unit id="d3a74153fc7c9b817bceb1368c0df8d8ee222b65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;format&lt;/code&gt;: Request format. Defaults to &lt;code&gt;nil&lt;/code&gt;. Can be string or symbol.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; : 요청 형식. 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다. 문자열 또는 기호 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="493a233448ba7b50db11d239afc04b4aa98d57a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;from&lt;/code&gt; When passed, this method will return false unless the original value is equal to the given option</source>
          <target state="translated">&lt;code&gt;from&lt;/code&gt; 전달 될 때이 메소드는 원래 값이 주어진 옵션과 같지 않으면 false를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a376ef81a558cc133f3fb31bd0ab5f19bc6e7bd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gen_random_uuid()&lt;/code&gt; (from &lt;code&gt;pgcrypto&lt;/code&gt;) is assumed if no &lt;code&gt;:default&lt;/code&gt; option was passed to &lt;code&gt;create_table&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;gen_random_uuid()&lt;/code&gt; &lt;code&gt;:default&lt;/code&gt; 옵션이 &lt;code&gt;create_table&lt;/code&gt; 로 전달 되지 않은 경우 gen_random_uuid () ( &lt;code&gt;pgcrypto&lt;/code&gt; )가 가정됩니다 .</target>
        </trans-unit>
        <trans-unit id="d33e82acb1569c7fbed6b9ae4bb87b2ad9a7c736" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;geocoder_path&lt;/code&gt; returns &lt;code&gt;/geocoder&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;geocoder_path&lt;/code&gt; 는 &lt;code&gt;/geocoder&lt;/code&gt; geocoder를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6c878475814a97e5975fab3c03b913f44fc04edb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;group_label_method&lt;/code&gt; - The name of a method which, when called on a member of &lt;code&gt;collection&lt;/code&gt;, returns a string to be used as the &lt;code&gt;label&lt;/code&gt; attribute for its &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;group_label_method&lt;/code&gt; - &lt;code&gt;collection&lt;/code&gt; 의 멤버에서 호출 될 때 &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; 태그 의 &lt;code&gt;label&lt;/code&gt; 속성 으로 사용될 문자열을 리턴 하는 메소드 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="b5e31c1d90b892984ce2034ce8dbac317023755c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;group_label_method&lt;/code&gt; - The name of a method which, when called on a member of &lt;code&gt;collection&lt;/code&gt;, returns a string to be used as the &lt;code&gt;label&lt;/code&gt; attribute for its &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; tag. It can also be any object that responds to &lt;code&gt;call&lt;/code&gt;, such as a &lt;code&gt;proc&lt;/code&gt;, that will be called for each member of the &lt;code&gt;collection&lt;/code&gt; to retrieve the label.</source>
          <target state="translated">&lt;code&gt;group_label_method&lt;/code&gt; - &lt;code&gt;collection&lt;/code&gt; 의 멤버에서 호출 될 때 &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; 태그 의 &lt;code&gt;label&lt;/code&gt; 속성 으로 사용될 문자열을 리턴 하는 메소드 이름입니다 . &lt;code&gt;collection&lt;/code&gt; 의 각 멤버가 레이블을 검색하기 위해 호출 할 &lt;code&gt;proc&lt;/code&gt; 와 같은 &lt;code&gt;call&lt;/code&gt; 에 응답하는 모든 객체 일 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="24d12ae21fbd535a4b20c3abd4d404e143f4c995" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;group_method&lt;/code&gt; - The name of a method which, when called on a member of &lt;code&gt;collection&lt;/code&gt;, returns an array of child objects representing the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; tags.</source>
          <target state="translated">&lt;code&gt;group_method&lt;/code&gt; - &lt;code&gt;collection&lt;/code&gt; 의 멤버에서 호출 될 때 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 태그를 나타내는 자식 객체의 배열을 반환하는 메서드 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="e3eb2fc1ecf4d7b15a7c344a54d7f938de33131d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;group_method&lt;/code&gt; - The name of a method which, when called on a member of &lt;code&gt;collection&lt;/code&gt;, returns an array of child objects representing the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; tags. It can also be any object that responds to &lt;code&gt;call&lt;/code&gt;, such as a &lt;code&gt;proc&lt;/code&gt;, that will be called for each member of the &lt;code&gt;collection&lt;/code&gt; to retrieve the value.</source>
          <target state="translated">&lt;code&gt;group_method&lt;/code&gt; - &lt;code&gt;collection&lt;/code&gt; 의 멤버에서 호출 될 때 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 태그를 나타내는 자식 객체의 배열을 반환하는 메서드 이름입니다 . &lt;code&gt;collection&lt;/code&gt; 의 각 멤버가 값을 검색하기 위해 호출 할 &lt;code&gt;proc&lt;/code&gt; 와 같은 &lt;code&gt;call&lt;/code&gt; 에 응답하는 모든 객체 일 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="850ccc8dfafbb6091a7cb425418d7dcefe9bca03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;grouped_options&lt;/code&gt; - Accepts a nested array or hash of strings. The first value serves as the &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; label while the second value must be an array of options. The second value can be a nested array of text-value pairs. See &lt;code&gt;options_for_select&lt;/code&gt; for more info.</source>
          <target state="translated">&lt;code&gt;grouped_options&lt;/code&gt; - 중첩 배열 또는 문자열 해시를 허용합니다. 첫 번째 값은 &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; 레이블 역할을하는 반면 두 번째 값은 옵션 배열이어야합니다. 두 번째 값은 중첩 된 텍스트 값 쌍의 배열 일 수 있습니다. 자세한 내용은 &lt;code&gt;options_for_select&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d728a8559e2f0be4a978495ab079084f7ab1ed72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;has_and_belongs_to_many&lt;/code&gt; Association Reference</source>
          <target state="translated">&lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 협회 참조</target>
        </trans-unit>
        <trans-unit id="d6e2afc5433dc959057cdf21a5a83902cc4d6d65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;has_many&lt;/code&gt; Association Reference</source>
          <target state="translated">&lt;code&gt;has_many&lt;/code&gt; 협회 참조</target>
        </trans-unit>
        <trans-unit id="d1fbe72074b92a2500a9fef5d866204d197e69bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;has_one&lt;/code&gt; Association Reference</source>
          <target state="translated">&lt;code&gt;has_one&lt;/code&gt; 협회 참조</target>
        </trans-unit>
        <trans-unit id="b299ec0548bd6d600c96f99087c636ce804dcf08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;headers(hash)&lt;/code&gt; - Allows you to specify multiple headers in your email such as &lt;code&gt;headers({'X-No-Spam' =&amp;gt; 'True',
'In-Reply-To' =&amp;gt; '1234@message.id'})&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;headers(hash)&lt;/code&gt; -이메일에 &lt;code&gt;headers({'X-No-Spam' =&amp;gt; 'True', 'In-Reply-To' =&amp;gt; '1234@message.id'})&lt;/code&gt; 와 같은 여러 헤더를 지정할 수 있습니다 ({ 'X-No-Spam'=&amp;gt; 'True', 'In-Reply-To'=&amp;gt; '1234@message.id'})</target>
        </trans-unit>
        <trans-unit id="da69cf8f390650b46979965c8e51775ba3b1931b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;headers&lt;/code&gt; - Specifies any header on the email you want. You can pass a hash of header field names and value pairs, or you can call &lt;code&gt;headers[:field_name] =
'value'&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; -이메일에서 원하는 헤더를 지정합니다. 헤더 필드 이름과 값 쌍의 해시를 전달하거나 &lt;code&gt;headers[:field_name] = 'value'&lt;/code&gt; 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60ec0e0d4589e90bca09472b59574deedc4f9474" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;headers&lt;/code&gt;: Additional headers to pass, as a &lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt;. The headers will be merged into the Rack env hash.</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; : &lt;a href=&quot;../../hash&quot;&gt;해시&lt;/a&gt; 로 전달할 추가 헤더 . 헤더가 Rack env 해시에 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="e4990a01582fb7d75351e8fb5f1fc7274da9fc04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;headers&lt;/code&gt;: for setting the headers that will be passed with the request.</source>
          <target state="translated">&lt;code&gt;headers&lt;/code&gt; : 요청과 함께 전달 될 헤더를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="cdb1be80bf845fdabbf85447971256ade944e66f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;headers[]=&lt;/code&gt; - Allows you to specify any header field in your email such as &lt;code&gt;headers['X-No-Spam'] = 'True'&lt;/code&gt;. Note that declaring a header multiple times will add many fields of the same name. Read &lt;a href=&quot;base#method-i-headers&quot;&gt;headers&lt;/a&gt; doc for more information.</source>
          <target state="translated">&lt;code&gt;headers[]=&lt;/code&gt; -이메일에 &lt;code&gt;headers['X-No-Spam'] = 'True'&lt;/code&gt; 와 같은 헤더 필드를 지정할 수 있습니다. 헤더를 여러 번 선언하면 동일한 이름의 많은 필드가 추가됩니다. 자세한 내용은 &lt;a href=&quot;base#method-i-headers&quot;&gt;헤더&lt;/a&gt; 문서를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="59961ced4cb69f31cf5a8985d1da9d0fd60d998a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;helper&lt;/code&gt; defines whether or not to generate helpers. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;helper&lt;/code&gt; 는 도우미 를 생성할지 여부를 정의합니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9b98493407038ad80392e456987ac3ad1a3e7654" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hook.complete&lt;/code&gt; will be passed the value returned from &lt;code&gt;hook.run&lt;/code&gt;, and will only be invoked if &lt;code&gt;run&lt;/code&gt; has previously been called. (Mostly, this means it won't be invoked if an exception occurs in a preceding &lt;code&gt;to_run&lt;/code&gt; block; all ordinary &lt;code&gt;to_complete&lt;/code&gt; blocks are invoked in that situation.)</source>
          <target state="translated">&lt;code&gt;hook.complete&lt;/code&gt; 는 &lt;code&gt;hook.run&lt;/code&gt; 에서 반환 된 값을 전달 받으며 &lt;code&gt;run&lt;/code&gt; 이 이전에 호출 된 경우에만 호출됩니다 . 대부분의 경우 이는 이전의 &lt;code&gt;to_run&lt;/code&gt; 블록 에서 예외가 발생하면 호출되지 않으며 모든 일반 &lt;code&gt;to_complete&lt;/code&gt; 블록은 해당 상황에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c795d898bc127b15fe6a866e8c0f64d95f15cec4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;html_options&lt;/code&gt; may be a hash of attributes for the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;html_options&lt;/code&gt; 는 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 태그 의 속성 해시 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cacb841aaabe6cd48a6796d059c2a163d3864d21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;i18n.callbacks&lt;/code&gt;: In the development environment, sets up a &lt;code&gt;to_prepare&lt;/code&gt; callback which will call &lt;code&gt;I18n.reload!&lt;/code&gt; if any of the locales have changed since the last request. In production mode this callback will only run on the first request.</source>
          <target state="translated">&lt;code&gt;i18n.callbacks&lt;/code&gt; : 개발 환경에서 &lt;code&gt;to_prepare&lt;/code&gt; 호출 할 to_prepare 콜백을 설정 &lt;code&gt;I18n.reload!&lt;/code&gt; 마지막 요청 이후 로케일이 변경된 경우 프로덕션 모드에서이 콜백은 첫 번째 요청에서만 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="cdc40751383bf5307a722554d186d0eb9eaa62fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; - The id of the object that should be decremented or an array of ids.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; - 감소시켜야하는 객체의 id 또는 id의 배열.</target>
        </trans-unit>
        <trans-unit id="0e10b412dd005c7585922ddaeddfbf243ecf8113" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; - The id of the object that should be incremented or an array of ids.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; - 증분해야하는 객체의 id 또는 id의 배열.</target>
        </trans-unit>
        <trans-unit id="6a125cfff65f570577ccaa5ddbdf06c869106cb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; - The id of the object you wish to reset a counter on.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; - 카운터를 재설정하려는 객체의 id입니다.</target>
        </trans-unit>
        <trans-unit id="40761a50606ed806b267007be2ef3ff5574e5052" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; - The id of the object you wish to update a counter on or an array of ids.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; - 카운터를 업데이트하려는 객체의 id 또는 id 배열.</target>
        </trans-unit>
        <trans-unit id="2442885613343cfe5ec911f197243a8b4aa8612b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; - This should be the id or an array of ids to be destroyed.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; - 파괴 할 id 또는 id 배열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="cceb70d89cf6ce8814bfc83b3fdff8b0dce3774f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id&lt;/code&gt; - This should be the id or an array of ids to be updated.</source>
          <target state="translated">&lt;code&gt;id&lt;/code&gt; - 업데이트 할 id 또는 id 배열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="9e3ee391c55b0ab21c705eaf629228841c35896c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;id_value&lt;/code&gt; will be returned unless the value is &lt;code&gt;nil&lt;/code&gt;, in which case the database will attempt to calculate the last inserted id and return that value.</source>
          <target state="translated">&lt;code&gt;id_value&lt;/code&gt; 값이 &lt;code&gt;nil&lt;/code&gt; 이 아니면 id_value 가 리턴됩니다. 이 경우 데이터베이스는 마지막으로 삽입 된 ID를 계산하여 해당 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="cf4470d0fa87669d7d9c5074e446d02138ab793d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;idle_timeout&lt;/code&gt;: number of seconds that a connection will be kept unused in the pool before it is automatically disconnected (default 300 seconds). Set this to zero to keep connections forever.</source>
          <target state="translated">&lt;code&gt;idle_timeout&lt;/code&gt; : 연결이 자동으로 끊어지기 전에 풀에서 연결이 사용되지 않은 시간 (초) (기본값 300 초) 연결을 영원히 유지하려면이 값을 0으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="a17529bebec18c963e04f8ef6263c48dc368948a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ids&lt;/code&gt; can be used to pluck all the IDs for the relation using the table's primary key.</source>
          <target state="translated">&lt;code&gt;ids&lt;/code&gt; 는 테이블의 기본 키를 사용하여 관계에 대한 모든 ID를 가져 오는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b397d47a5524b57a5922ea60e92018d56e1763f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;image-path(&quot;rails.png&quot;)&lt;/code&gt; returns &lt;code&gt;&quot;/assets/rails.png&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;image-path(&quot;rails.png&quot;)&lt;/code&gt; 는 &lt;code&gt;&quot;/assets/rails.png&quot;&lt;/code&gt; 를 반환합니다</target>
        </trans-unit>
        <trans-unit id="c5348c19e07f1c75c98bd018b788a4b9e5693fd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;image-url(&quot;rails.png&quot;)&lt;/code&gt; returns &lt;code&gt;url(/assets/rails.png)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;image-url(&quot;rails.png&quot;)&lt;/code&gt; 은 &lt;code&gt;url(/assets/rails.png)&lt;/code&gt; 반환합니다</target>
        </trans-unit>
        <trans-unit id="a103039d201ce57ef9be25ee25f2c298f4692a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include ActiveModel::AttributeMethods&lt;/code&gt; in your class.</source>
          <target state="translated">&lt;code&gt;include ActiveModel::AttributeMethods&lt;/code&gt; 클래스에 ActiveModel :: AttributeMethods 를 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="4fead263b7a56cf10bc68d5d6fb370c4e1d8bf01" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include ActiveModel::Dirty&lt;/code&gt; in your object.</source>
          <target state="translated">&lt;code&gt;include ActiveModel::Dirty&lt;/code&gt; 개체에 ActiveModel :: Dirty 를 포함시킵니다.</target>
        </trans-unit>
        <trans-unit id="951ff9b04ea1bb8a222d339ded56252b85206813" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;include_replicas:&lt;/code&gt; Determines whether to include replicas in the returned list. Most of the time we're only iterating over the write connection (i.e. migrations don't need to run for the write and read connection). Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;include_replicas:&lt;/code&gt; 리턴 된 목록에 복제본을 포함할지 여부를 결정합니다. 대부분의 경우 쓰기 연결 만 반복합니다 (즉, 쓰기 및 읽기 연결을 위해 마이그레이션을 실행할 필요가 없습니다). 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d7f5fb4c2d81da20c26072f129b16e1c448fec13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialize&lt;/code&gt; which expects two parameters and one block as described below.</source>
          <target state="translated">&lt;code&gt;initialize&lt;/code&gt; 아래 설명과 같이 두 개의 매개 변수와 하나의 블록을 예상하는 initialize .</target>
        </trans-unit>
        <trans-unit id="3a4bf37ebcebebb8be383a4ac1dd7d4f10769f24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialize_cache&lt;/code&gt;: If &lt;code&gt;Rails.cache&lt;/code&gt; isn't set yet, initializes the cache by referencing the value in &lt;code&gt;config.cache_store&lt;/code&gt; and stores the outcome as &lt;code&gt;Rails.cache&lt;/code&gt;. If this object responds to the &lt;code&gt;middleware&lt;/code&gt; method, its middleware is inserted before &lt;code&gt;Rack::Runtime&lt;/code&gt; in the middleware stack.</source>
          <target state="translated">&lt;code&gt;initialize_cache&lt;/code&gt; : &lt;code&gt;Rails.cache&lt;/code&gt; 가 아직 설정되지 않은 경우 &lt;code&gt;config.cache_store&lt;/code&gt; 의 값을 참조하여 캐시를 초기화 하고 결과를 &lt;code&gt;Rails.cache&lt;/code&gt; 로 저장합니다 . 이 객체가 &lt;code&gt;middleware&lt;/code&gt; 메소드에 응답 하면 미들웨어 스택의 미들웨어가 &lt;code&gt;Rack::Runtime&lt;/code&gt; 앞에 삽입 됩니다.</target>
        </trans-unit>
        <trans-unit id="0d190764ab5850936b274e80cfb7db97b1062ec2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialize_dependency_mechanism&lt;/code&gt;: If &lt;code&gt;config.cache_classes&lt;/code&gt; is true, configures &lt;code&gt;ActiveSupport::Dependencies.mechanism&lt;/code&gt; to &lt;code&gt;require&lt;/code&gt; dependencies rather than &lt;code&gt;load&lt;/code&gt; them.</source>
          <target state="translated">&lt;code&gt;initialize_dependency_mechanism&lt;/code&gt; : &lt;code&gt;config.cache_classes&lt;/code&gt; 가 true 인 경우 &lt;code&gt;ActiveSupport::Dependencies.mechanism&lt;/code&gt; 을 &lt;code&gt;load&lt;/code&gt; 하지 않고 &lt;code&gt;require&lt;/code&gt; 하도록 ActiveSupport :: Dependencies.mechanism 을 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="7eb0c7ad272af3c52e3f5bbf48f3712ed8114511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialize_logger&lt;/code&gt;: Initializes the logger (an &lt;code&gt;ActiveSupport::Logger&lt;/code&gt; object) for the application and makes it accessible at &lt;code&gt;Rails.logger&lt;/code&gt;, provided that no initializer inserted before this point has defined &lt;code&gt;Rails.logger&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;initialize_logger&lt;/code&gt; : 응용 프로그램에 대한 로거 ( &lt;code&gt;ActiveSupport::Logger&lt;/code&gt; 객체)를 초기화하고이 시점 이전에 삽입 된 초기화 프로그램이 &lt;code&gt;Rails.logger&lt;/code&gt; 를 정의하지 않은 경우 &lt;code&gt;Rails.logger&lt;/code&gt; 에서 액세스 가능하게합니다 .</target>
        </trans-unit>
        <trans-unit id="4c850adf3dbe95785bbb4ab21fbe2e738292adb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;integration_tool&lt;/code&gt; defines which integration tool to use to generate integration tests. Defaults to &lt;code&gt;:test_unit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;integration_tool&lt;/code&gt; 은 통합 테스트를 생성하는 데 사용할 통합 도구를 정의합니다. 기본값은 &lt;code&gt;:test_unit&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a87b05ca84bcaa07b3ecb25bff1a20a638cb52bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;invalid?&lt;/code&gt; is simply the inverse of &lt;code&gt;valid?&lt;/code&gt;. It triggers your validations, returning true if any errors were found in the object, and false otherwise.</source>
          <target state="translated">&lt;code&gt;invalid?&lt;/code&gt; 단순히 역의 반대 &lt;code&gt;valid?&lt;/code&gt; . 객체에서 오류가 발견되면 true를 반환하고 그렇지 않으면 false를 반환하여 유효성 검사를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="6e276dcacc2d8cc9b4da0a420374df3fdcd7feca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;key&lt;/code&gt; can take one of three forms:</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; 는 세 가지 형식 중 하나를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="030c92e660eb0260f3d80231ebb0c2b3181f0902" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;last_month&lt;/code&gt; is short-hand for &lt;code&gt;#months_ago(1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;last_month&lt;/code&gt; 는 &lt;code&gt;#months_ago(1)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="58bb9c2b061fda079da2d347e8d9b06f635cb57a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;last_year&lt;/code&gt; is short-hand for &lt;code&gt;#years_ago(1)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;last_year&lt;/code&gt; 는 &lt;code&gt;#years_ago(1)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="489036169730c8e89742b71d0624dac5b0732b6c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;layout&lt;/code&gt; - The layout to use.</source>
          <target state="translated">&lt;code&gt;layout&lt;/code&gt; - 사용할 레이아웃.</target>
        </trans-unit>
        <trans-unit id="c8770a516ffdee4893f40da50f6973f4c60213a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;legend&lt;/code&gt; will become the fieldset's title (optional as per W3C). &lt;code&gt;options&lt;/code&gt; accept the same values as tag.</source>
          <target state="translated">&lt;code&gt;legend&lt;/code&gt; 는 fieldset의 제목이됩니다 (W3C에 따라 선택 사항). &lt;code&gt;options&lt;/code&gt; 은 태그와 동일한 값을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="ec7c4696f9b49f42f2f85af380577c22eddfd3db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lib/assets&lt;/code&gt; is for your own libraries' code that doesn't really fit into the scope of the application or those libraries which are shared across applications.</source>
          <target state="translated">&lt;code&gt;lib/assets&lt;/code&gt; 는 응용 프로그램의 범위 또는 응용 프로그램간에 공유되는 라이브러리에 실제로 맞지 않는 자신의 라이브러리 코드 용입니다.</target>
        </trans-unit>
        <trans-unit id="f6179ae4377a1b1c2bb0212c0f9e25c6b785e362" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;limit&lt;/code&gt; Sets the maximum size of the &lt;code&gt;string/text/binary/integer&lt;/code&gt; fields.</source>
          <target state="translated">&lt;code&gt;limit&lt;/code&gt; &lt;code&gt;string/text/binary/integer&lt;/code&gt; 필드 의 최대 크기를 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="cd599e1202cbb2ffba3475677e26aafe2a87b18f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;link_to&lt;/code&gt; can also produce links with anchors or query strings:</source>
          <target state="translated">&lt;code&gt;link_to&lt;/code&gt; 는 앵커 또는 쿼리 문자열이있는 링크를 생성 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b8dc48aa9999ffcd76b7cf41b7473561bb05c31" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load_active_support&lt;/code&gt;: Requires &lt;code&gt;active_support/dependencies&lt;/code&gt; which sets up the basis for Active Support. Optionally requires &lt;code&gt;active_support/all&lt;/code&gt; if &lt;code&gt;config.active_support.bare&lt;/code&gt; is un-truthful, which is the default.</source>
          <target state="translated">&lt;code&gt;load_active_support&lt;/code&gt; : 활성 지원의 기초를 설정하는 &lt;code&gt;active_support/dependencies&lt;/code&gt; 가 필요합니다 . &lt;code&gt;config.active_support.bare&lt;/code&gt; 가 진실이 아닌 경우 선택적으로 &lt;code&gt;active_support/all&lt;/code&gt; 이 필요 합니다 (기본값).</target>
        </trans-unit>
        <trans-unit id="8f1f3b6cc2dcf9e1d9db18ed22935fac53ac5242" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load_config_initializers&lt;/code&gt;: Loads all Ruby files from &lt;code&gt;config/initializers&lt;/code&gt; in the application, railties, and engines. The files in this directory can be used to hold configuration settings that should be made after all of the frameworks are loaded.</source>
          <target state="translated">&lt;code&gt;load_config_initializers&lt;/code&gt; : 응용 프로그램, 레일 리지 및 엔진의 &lt;code&gt;config/initializers&lt;/code&gt; 에서 모든 Ruby 파일을로드합니다 . 이 디렉토리의 파일을 사용하여 모든 프레임 워크가로드 된 후에 구성 설정을 보유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e80428a1ff57980f07947517939964f3d97d9126" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load_environment_config&lt;/code&gt;: Loads the &lt;code&gt;config/environments&lt;/code&gt; file for the current environment.</source>
          <target state="translated">&lt;code&gt;load_environment_config&lt;/code&gt; : 현재 환경에 대한 &lt;code&gt;config/environments&lt;/code&gt; 파일을 로드 합니다.</target>
        </trans-unit>
        <trans-unit id="c9d7569cb8e12e8a6505c587fee4a595284c3ff5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;load_environment_hook&lt;/code&gt;: Serves as a placeholder so that &lt;code&gt;:load_environment_config&lt;/code&gt; can be defined to run before it.</source>
          <target state="translated">&lt;code&gt;load_environment_hook&lt;/code&gt; : 자리 표시 자로 사용되므로 &lt;code&gt;:load_environment_config&lt;/code&gt; 를 실행하기 전에 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a1b42da146932ad71339a839ecaae713ce02cb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lock_version&lt;/code&gt; - Adds &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Locking.html&quot;&gt;optimistic locking&lt;/a&gt; to a model.</source>
          <target state="translated">&lt;code&gt;lock_version&lt;/code&gt; - 모델에 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Locking.html&quot;&gt;낙관적 잠금&lt;/a&gt; 을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="45348be851fee871904f5fd376e955a81bdc6ffe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;logger&lt;/code&gt; - the logger is used for generating information on the mailing run if available. Can be set to &lt;code&gt;nil&lt;/code&gt; for no logging. Compatible with both Ruby's own &lt;code&gt;Logger&lt;/code&gt; and Log4r loggers.</source>
          <target state="translated">&lt;code&gt;logger&lt;/code&gt; -로거는 사용 가능한 경우 메일 실행에 대한 정보를 생성하는 데 사용됩니다. 로깅없이 &lt;code&gt;nil&lt;/code&gt; 로 설정할 수 있습니다 . Ruby의 자체 &lt;code&gt;Logger&lt;/code&gt; 및 Log4r 로거와 호환됩니다 .</target>
        </trans-unit>
        <trans-unit id="2bec25430bedec894f8700d588d3bd0d591aedb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;loop: true&lt;/code&gt;, loops the video once it gets to the end.</source>
          <target state="translated">&lt;code&gt;loop: true&lt;/code&gt; , 비디오가 끝날 때 비디오를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="6fa2264124e6e49e24b152372ac8dc031b8f5b0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mail&lt;/code&gt; - Allows you to specify email to be sent.</source>
          <target state="translated">&lt;code&gt;mail&lt;/code&gt; -보낼 이메일을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67f6176f7090410efd928e9f31aded6a7d83ff78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mail&lt;/code&gt; - Sends the actual email itself. You can pass in headers as a hash to the mail method as a parameter, mail will then create an email, either plain text, or multipart, depending on what email templates you have defined.</source>
          <target state="translated">&lt;code&gt;mail&lt;/code&gt; -실제 이메일을 보냅니다. 헤더를 매개 변수로 mail 메소드에 해시로 전달할 수 있습니다. 그러면 정의한 이메일 템플리트에 따라 mail이 일반 텍스트 또는 다중 부분으로 이메일을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="adfb98e7399184e95610a1d69d42da24ae1239a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mail&lt;/code&gt; - The actual email message, we are passing the &lt;code&gt;:to&lt;/code&gt; and &lt;code&gt;:subject&lt;/code&gt; headers in.</source>
          <target state="translated">&lt;code&gt;mail&lt;/code&gt; - 실제 이메일 메시지 &lt;code&gt;:to&lt;/code&gt; 및 &lt;code&gt;:subject&lt;/code&gt; 헤더 를 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="e41f37ba65172323213e2fca7bc05c78c8b2fe2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mail_to&lt;/code&gt; has several methods for customizing the email itself by passing special keys to &lt;code&gt;html_options&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;mail_to&lt;/code&gt; 은 특별한 키를 전달하여 이메일 자체를 사용자 지정하기위한 여러 가지 방법이있다 &lt;code&gt;html_options&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="b5cd1c164833ca591068f49b66162a7fad30c4da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;mb_chars&lt;/code&gt; is a multibyte safe proxy for string methods.</source>
          <target state="translated">&lt;code&gt;mb_chars&lt;/code&gt; 는 문자열 메소드를위한 멀티 바이트 안전 프록시입니다.</target>
        </trans-unit>
        <trans-unit id="0ce6ffac1ca0cc89ed2ea6284402bf382331dcee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method: symbol of HTTP verb&lt;/code&gt; - This modifier will dynamically create an HTML form and immediately submit the form for processing using the HTTP verb specified. Useful for having links perform a POST operation in dangerous actions like deleting a record (which search bots can follow while spidering your site). Supported verbs are &lt;code&gt;:post&lt;/code&gt;, &lt;code&gt;:delete&lt;/code&gt;, &lt;code&gt;:patch&lt;/code&gt;, and &lt;code&gt;:put&lt;/code&gt;. Note that if the user has JavaScript disabled, the request will fall back to using GET. If &lt;code&gt;href: '#'&lt;/code&gt; is used and the user has JavaScript disabled clicking the link will have no effect. If you are relying on the POST behavior, you should check for it in your controller's action by using the request object's methods for &lt;code&gt;post?&lt;/code&gt;, &lt;code&gt;delete?&lt;/code&gt;, &lt;code&gt;patch?&lt;/code&gt;, or &lt;code&gt;put?&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;method: symbol of HTTP verb&lt;/code&gt; -이 수정자는 HTML 양식을 동적으로 작성하고 지정된 HTTP 동사를 사용하여 처리 할 양식을 즉시 제출합니다. 링크가 레코드 삭제 (사이트를 스파이더 링하는 동안 검색 로봇이 따라갈 수있는)와 같은 위험한 작업에서 POST 작업을 수행하도록하는 데 유용합니다. 지원되는 동사는 &lt;code&gt;:post&lt;/code&gt; , &lt;code&gt;:delete&lt;/code&gt; , &lt;code&gt;:patch&lt;/code&gt; 및 &lt;code&gt;:put&lt;/code&gt; 입니다. 사용자가 자바 스크립트를 사용 중지 한 경우 요청은 GET 사용으로 돌아갑니다. 경우 &lt;code&gt;href: '#'&lt;/code&gt; 사용하고 사용자가 자바 스크립트 비활성화 클릭을 가지고 있습니다 링크는 아무런 영향을주지 않습니다. POST 동작에 의존하는 경우 &lt;code&gt;post?&lt;/code&gt; 요청 객체의 메소드를 사용하여 컨트롤러의 동작에서 POST 동작을 확인해야 합니까?, &lt;code&gt;delete?&lt;/code&gt; , &lt;code&gt;patch?&lt;/code&gt; 또는 &lt;code&gt;put?&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7cded8737071781c4de506ba0a666796c198ca58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method&lt;/code&gt; - The attribute of &lt;code&gt;object&lt;/code&gt; corresponding to the select tag</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; - select 태그에 해당하는 &lt;code&gt;object&lt;/code&gt; 의 속성</target>
        </trans-unit>
        <trans-unit id="adadcfc7fe499a1141ddabbdbdcdf17bbcf5331c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method&lt;/code&gt;: Request method used to send the HTTP request. Possible values are &lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, &lt;code&gt;PATCH&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;DELETE&lt;/code&gt;, &lt;code&gt;HEAD&lt;/code&gt;. Defaults to &lt;code&gt;GET&lt;/code&gt;. Can be a symbol.</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; : HTTP 요청을 보내는 데 사용되는 요청 방법입니다. 가능한 값은 &lt;code&gt;GET&lt;/code&gt; , &lt;code&gt;POST&lt;/code&gt; , &lt;code&gt;PATCH&lt;/code&gt; , &lt;code&gt;PUT&lt;/code&gt; , &lt;code&gt;DELETE&lt;/code&gt; , &lt;code&gt;HEAD&lt;/code&gt; 입니다. 기본값은 &lt;code&gt;GET&lt;/code&gt; 입니다. 기호가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="390a15fd8fc1ee3372706e93a92d364937519717" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method&lt;/code&gt;: The HTTP method (GET, POST, PATCH, PUT, DELETE, HEAD, OPTIONS) as a symbol.</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; : HTTP 메소드 (GET, POST, PATCH, PUT, DELETE, HEAD, OPTIONS)를 기호로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4b800a1429c30596a49c45a155f60ea618d8c835" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;method[, method]&lt;/code&gt; - A name or names of a method on the controller to be made available on the view.</source>
          <target state="translated">&lt;code&gt;method[, method]&lt;/code&gt; -보기에서 사용할 수있는 컨트롤러의 메소드 이름입니다.</target>
        </trans-unit>
        <trans-unit id="5f01790903f1ed024bd9153d7d47cdfe89725a14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;model_name.human&lt;/code&gt; and &lt;code&gt;human_attribute_name&lt;/code&gt; use translations for model names and attribute names if available in the &lt;a href=&quot;https://github.com/rails/rails/blob/master/activerecord/lib/active_record/locale/en.yml#L36&quot;&gt;activerecord.models&lt;/a&gt; scope. They also support translations for inherited class names (e.g. for use with STI) as explained above in &quot;Error message scopes&quot;.</source>
          <target state="translated">&lt;code&gt;model_name.human&lt;/code&gt; 및 &lt;code&gt;human_attribute_name&lt;/code&gt; 은 &lt;a href=&quot;https://github.com/rails/rails/blob/master/activerecord/lib/active_record/locale/en.yml#L36&quot;&gt;activerecord.models&lt;/a&gt; 범위 에서 사용 가능한 경우 모델 이름 및 속성 이름으로 변환을 사용 합니다. 또한 위에서 설명한 &quot;오류 메시지 범위&quot;에 설명 된대로 상속 된 클래스 이름 (예 : STI와 함께 사용)에 대한 번역을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="2503b312c13e1bb1506e871ceea7ace955df9990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - &lt;a href=&quot;template&quot;&gt;Template&lt;/a&gt; name</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - &lt;a href=&quot;template&quot;&gt;템플릿&lt;/a&gt; 이름</target>
        </trans-unit>
        <trans-unit id="323860b6f2f792fe2303ffc8aa090c11f27fc80f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; - The callback to be added.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; - 콜백을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0083a23606a75b8aebab1c38c01e601f87f10e83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; The name of the attribute being defined. Expected to be a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 정의중인 속성의 이름입니다. &lt;code&gt;String&lt;/code&gt; 일 것으로 예상됩니다 .</target>
        </trans-unit>
        <trans-unit id="835339d5ff862b4d4eddbf7bfad5fcdf05baf877" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;name&lt;/code&gt; The name of the methods to define attribute methods for, and the column which this will persist to.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 속성 메소드를 정의 할 메소드의 이름 및이를 유지할 열입니다.</target>
        </trans-unit>
        <trans-unit id="6ff2e1169403d9c483ad195264782d4d348062e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;names&lt;/code&gt; passed to &lt;code&gt;define_callbacks&lt;/code&gt; must not end with &lt;code&gt;!&lt;/code&gt;, &lt;code&gt;?&lt;/code&gt; or &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;names&lt;/code&gt; &lt;code&gt;define_callbacks&lt;/code&gt; 에 전달 된 이름 은 &lt;code&gt;!&lt;/code&gt; 로 끝나서 는 안됩니다 . , &lt;code&gt;?&lt;/code&gt; 또는 &lt;code&gt;=&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="76ea8ff0672847f49de1165eb0b495626ef6462f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_geocoder_path&lt;/code&gt; returns &lt;code&gt;/geocoder/new&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;new_geocoder_path&lt;/code&gt; 는 &lt;code&gt;/geocoder/new&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d2a1addd19e41a8fed95037e2f7367ed49ba5ebd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_photo_path&lt;/code&gt; returns &lt;code&gt;/photos/new&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;new_photo_path&lt;/code&gt; 는 &lt;code&gt;/photos/new&lt;/code&gt; 를 반환합니다</target>
        </trans-unit>
        <trans-unit id="ced734161f5b34665a6c82c5c70acce4cd439df7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_polymorphic_url&lt;/code&gt;, &lt;code&gt;new_polymorphic_path&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;new_polymorphic_url&lt;/code&gt; , &lt;code&gt;new_polymorphic_path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6b70a99a698983f63a1e1dc10ba61cfd9dfb1e03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;new_value&lt;/code&gt; The current value, after type casting.</source>
          <target state="translated">&lt;code&gt;new_value&lt;/code&gt; 타입 캐스팅 후의 현재 값.</target>
        </trans-unit>
        <trans-unit id="9e1bc820f5bbbd8f51bab0b9a545d8753bb211d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; and &lt;code&gt;false&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 와 &lt;code&gt;false&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="2d6a0e513e1ed63af3f3766f10089c1f1f670c61" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; is blank:</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 은 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a27c562fdf1b0f0dbf5cf1024bfe1154d33a767c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;nil&lt;/code&gt; is returned when the name is not in CamelCase or the constant (or part of it) is unknown.</source>
          <target state="translated">&lt;code&gt;nil&lt;/code&gt; 이름이 CamelCase에 없거나 상수 (또는 그 일부)를 알 수 없으면 nil 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="c68cc414fad8686a655101677fdee73dd10b3f85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; Allows or disallows &lt;code&gt;NULL&lt;/code&gt; values in the column.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 열에서 &lt;code&gt;NULL&lt;/code&gt; 값을 허용하거나 허용하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="cacb2441c41ccf95be0fafb61c9359e09f20e7ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;null&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt; cannot be specified via command line.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 명령 행을 통해 널 및 &lt;code&gt;default&lt;/code&gt; 지정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0bfaa9375c556342ae96b24edb764800955206b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;object&lt;/code&gt; - The instance of the class to be used for the select tag</source>
          <target state="translated">&lt;code&gt;object&lt;/code&gt; -select 태그에 사용되는 클래스의 인스턴스</target>
        </trans-unit>
        <trans-unit id="be8c187eaedddc60333216d996860b6a0c7592a2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;only&lt;/code&gt; - The callback should be run only for this action.</source>
          <target state="translated">&lt;code&gt;only&lt;/code&gt; - 콜백는이 조치를 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="1625e0cc7c0e7973c07628b2ad5ec792a9078002" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;option_key_method&lt;/code&gt; - The name of a method which, when called on a child object of a member of &lt;code&gt;collection&lt;/code&gt;, returns a value to be used as the &lt;code&gt;value&lt;/code&gt; attribute for its &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;option_key_method&lt;/code&gt; - &lt;code&gt;collection&lt;/code&gt; 멤버의 자식 객체에서 호출 될 때 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 태그 의 &lt;code&gt;value&lt;/code&gt; 속성 으로 사용할 값을 반환 하는 메서드 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="5634aee46ac57322c48fa74d6b104b6e3c6595a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;option_value_method&lt;/code&gt; - The name of a method which, when called on a child object of a member of &lt;code&gt;collection&lt;/code&gt;, returns a value to be used as the contents of its &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;option_value_method&lt;/code&gt; - &lt;code&gt;collection&lt;/code&gt; 멤버의 자식 객체에서 호출 될 때 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 태그 의 내용으로 사용할 값을 반환 하는 메서드 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="732ccf2eb9c884834b459d31abdb8bcc13d2cf4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; - A hash of options to be used when adding the callback.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; - 콜백을 추가 할 때 옵션의 해시를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="95d077dd63d5dfa5a7e227dc47f43b521b7ddd70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options&lt;/code&gt; is passed through to the cache store's &lt;code&gt;delete&lt;/code&gt; method (or &lt;code&gt;delete_matched&lt;/code&gt;, for Regexp keys).</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 은 캐시 저장소의 &lt;code&gt;delete&lt;/code&gt; 메소드 (또는 Regexp 키의 경우 &lt;code&gt;delete_matched&lt;/code&gt; )로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="4e0e1b22968c1ab5938d6d39d48e430fb55f56f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;options_for_select&lt;/code&gt; allows you to pre-select an option by passing its value.</source>
          <target state="translated">&lt;code&gt;options_for_select&lt;/code&gt; 를 사용하면 값을 전달하여 옵션을 미리 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b99c56d7f1033ec66c4b5b6eb788c352b048b119" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;orm&lt;/code&gt; defines which orm to use. Defaults to &lt;code&gt;false&lt;/code&gt; and will use Active Record by default.</source>
          <target state="translated">&lt;code&gt;orm&lt;/code&gt; 은 사용할 orm을 정의합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 이며 기본적으로 Active Record를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="499b59d4fb718fd63531b8df4fdb8774b5679702" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;: The HTTP parameters that you want to pass. This may be &lt;code&gt;nil&lt;/code&gt;, a &lt;a href=&quot;../../hash&quot;&gt;Hash&lt;/a&gt;, or a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; that is appropriately encoded (&lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; or &lt;code&gt;multipart/form-data&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; : 전달하려는 HTTP 매개 변수입니다. 이있을 수 &lt;code&gt;nil&lt;/code&gt; 하는 &lt;a href=&quot;../../hash&quot;&gt;해시&lt;/a&gt; 또는 &lt;a href=&quot;../../string&quot;&gt;문자열&lt;/a&gt; 적절히 인코딩 ( &lt;code&gt;application/x-www-form-urlencoded&lt;/code&gt; 또는 &lt;code&gt;multipart/form-data&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bb132e7eaaa0bc19ca75ad92912db4fb46b4efd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;: The hash with HTTP parameters that you want to pass. This may be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; : 전달하려는 HTTP 매개 변수가있는 해시. &lt;code&gt;nil&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="38ee5be75696f2b857b36eda3f2504e1ccd752b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;params&lt;/code&gt;: option with a hash of request parameters to pass into the action (e.g. query string parameters or article variables).</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; : 요청 매개 변수 해시가있는 옵션 (예 : 쿼리 문자열 매개 변수 또는 기사 변수)</target>
        </trans-unit>
        <trans-unit id="93349536c4602b66abcb56e21c8c1ac0496598e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;parts_order&lt;/code&gt; and &lt;code&gt;charset&lt;/code&gt; are not actually valid &lt;code&gt;Mail::Message&lt;/code&gt; header fields, but Action Mailer translates them appropriately and sets the correct values.</source>
          <target state="translated">&lt;code&gt;parts_order&lt;/code&gt; 및 &lt;code&gt;charset&lt;/code&gt; 은 실제로 유효한 &lt;code&gt;Mail::Message&lt;/code&gt; 헤더 필드는 아니지만 Action Mailer는이를 적절하게 변환하고 올바른 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="75f2104590dc37fee983e9e86d945e03eb9a7110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; - If a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; is provided, it gets converted into the default view path. You may also provide a custom view path (see ActionView::PathSet for more information)</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; - 경우 &lt;a href=&quot;../../string&quot;&gt;문자열이&lt;/a&gt; 제공되며, 이는 기본보기 경로로 변환됩니다. 사용자 정의보기 경로를 제공 할 수도 있습니다 (자세한 내용은 ActionView :: PathSet 참조)</target>
        </trans-unit>
        <trans-unit id="ed4bd06ed57c16856713b19a0789abcbc9084c08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt; - If a &lt;a href=&quot;../string&quot;&gt;String&lt;/a&gt; is provided, it gets converted into the default view path. You may also provide a custom view path (see ActionView::PathSet for more information)</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; - 경우 &lt;a href=&quot;../string&quot;&gt;문자열이&lt;/a&gt; 제공되며, 이는 기본보기 경로로 변환됩니다. 사용자 정의보기 경로를 제공 할 수도 있습니다 (자세한 내용은 ActionView :: PathSet 참조)</target>
        </trans-unit>
        <trans-unit id="da80a8462e5917921523ad792ef29e6413449554" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;path&lt;/code&gt;: The URI (as a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;) on which you want to perform the request.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; : 요청을 수행하려는 URI ( &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="4e7609b8ceb6c86adf1221efda1369b094e2581b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;paths&lt;/code&gt; - If a PathSet is provided, use that; otherwise, process the parameter into a PathSet.</source>
          <target state="translated">&lt;code&gt;paths&lt;/code&gt; -PathSet이 제공되면이를 사용하십시오. 그렇지 않으면 매개 변수를 PathSet으로 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="b59010805f2f79987f7b0ec39a604165403ec1a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;perform_deliveries&lt;/code&gt; - Determines whether emails are actually sent from Action Mailer when you call &lt;code&gt;.deliver&lt;/code&gt; on an email message or on an Action Mailer method. This is on by default but can be turned off to aid in functional testing.</source>
          <target state="translated">&lt;code&gt;perform_deliveries&lt;/code&gt; - 이메일 메시지 또는 Action Mailer 메소드에서 &lt;code&gt;.deliver&lt;/code&gt; 를 호출 할 때 Action Mailer에서 이메일을 실제로 보낼지 여부를 결정합니다 . 기본적으로 설정되어 있지만 기능 테스트를 돕기 위해 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8198dce97296a753c058a2f390d58a74465d1f54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;permit_all_parameters&lt;/code&gt; - If it's &lt;code&gt;true&lt;/code&gt;, all the parameters will be permitted by default. The default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;permit_all_parameters&lt;/code&gt; - &lt;code&gt;true&lt;/code&gt; 이면 모든 매개 변수가 기본적으로 허용됩니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d09612d2d3c7237427fb3efaa462594057d77fd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;persisted?&lt;/code&gt; is used when calculating the URL for an object. If the object is not persisted, a form for that object, for instance, will route to the create action. If it is persisted, a form for the object will route to the update action.</source>
          <target state="translated">&lt;code&gt;persisted?&lt;/code&gt; 객체의 URL을 계산할 때 사용됩니다. 개체가 유지되지 않으면 해당 개체의 양식이 예를 들어 작성 작업으로 라우팅됩니다. 지속되는 경우 개체의 양식이 업데이트 작업으로 라우팅됩니다.</target>
        </trans-unit>
        <trans-unit id="546627497e5e3a250693ec52f8e97861667257e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;person.valid?(:account_setup)&lt;/code&gt; executes both the validations without saving the model. &lt;code&gt;person.save(context: :account_setup)&lt;/code&gt; validates &lt;code&gt;person&lt;/code&gt; in the &lt;code&gt;account_setup&lt;/code&gt; context before saving.</source>
          <target state="translated">&lt;code&gt;person.valid?(:account_setup)&lt;/code&gt; 은 모델을 저장하지 않고 두 가지 유효성 검사를 모두 실행합니다. &lt;code&gt;person.save(context: :account_setup)&lt;/code&gt; 은 저장하기 전에 &lt;code&gt;account_setup&lt;/code&gt; 컨텍스트 에서 &lt;code&gt;person&lt;/code&gt; 을 확인 합니다.</target>
        </trans-unit>
        <trans-unit id="35fe30a978fb68eeef9c7bfae72990fb660183a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;photo_path(:id)&lt;/code&gt; returns &lt;code&gt;/photos/:id&lt;/code&gt; (for instance, &lt;code&gt;photo_path(10)&lt;/code&gt; returns &lt;code&gt;/photos/10&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;photo_path(:id)&lt;/code&gt; 를 반환 &lt;code&gt;/photos/:id&lt;/code&gt; (예를 들어, &lt;code&gt;photo_path(10)&lt;/code&gt; 반환 &lt;code&gt;/photos/10&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="24ffb4d70ae0a8b2a588b2bb5407087080797bab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;photos_path&lt;/code&gt; returns &lt;code&gt;/photos&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;photos_path&lt;/code&gt; 는 &lt;code&gt;/photos&lt;/code&gt; photos를 반환합니다</target>
        </trans-unit>
        <trans-unit id="2317359636051675e6f572123f26e85f4220fd54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pluck&lt;/code&gt; can be used to query single or multiple columns from the underlying table of a model. It accepts a list of column names as argument and returns an array of values of the specified columns with the corresponding data type.</source>
          <target state="translated">&lt;code&gt;pluck&lt;/code&gt; 은 모델의 기본 테이블에서 단일 또는 여러 열을 쿼리하는 데 사용할 수 있습니다. 열 이름 목록을 인수로 허용하고 해당 데이터 유형을 가진 지정된 열의 값 배열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="0404073402697ccb34666723602375cd7a9729ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pluck&lt;/code&gt; makes it possible to replace code like:</source>
          <target state="translated">&lt;code&gt;pluck&lt;/code&gt; 은 다음과 같은 코드를 대체 할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="60c59cbc089af28fac13ac6da36a1edd97d44c8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pluralize&lt;/code&gt; can also take an optional &lt;code&gt;count&lt;/code&gt; parameter. If &lt;code&gt;count == 1&lt;/code&gt; the singular form will be returned. For any other value of &lt;code&gt;count&lt;/code&gt; the plural form will be returned:</source>
          <target state="translated">&lt;code&gt;pluralize&lt;/code&gt; 은 또한 선택적 &lt;code&gt;count&lt;/code&gt; 매개 변수를 취할 수 있습니다 . 경우 &lt;code&gt;count == 1&lt;/code&gt; 단수형가 반환됩니다. 다른 &lt;code&gt;count&lt;/code&gt; 값에 대해서는 복수형이 반환됩니다 :</target>
        </trans-unit>
        <trans-unit id="1bb229be5af7e8d3ff57a5ebd0b781128cdd5939" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pluralize&lt;/code&gt; is a rails helper that takes a number and a string as its arguments. If the number is greater than one, the string will be automatically pluralized.</source>
          <target state="translated">&lt;code&gt;pluralize&lt;/code&gt; 은 숫자와 문자열을 인수로 사용하는 레일 도우미입니다. 숫자가 1보다 크면 문자열이 자동으로 복수화됩니다.</target>
        </trans-unit>
        <trans-unit id="36a90f417a45f5fb3ff14b466e20442de61ef56a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;polymorphic&lt;/code&gt; Adds a &lt;code&gt;type&lt;/code&gt; column for &lt;code&gt;belongs_to&lt;/code&gt; associations.</source>
          <target state="translated">&lt;code&gt;polymorphic&lt;/code&gt; &lt;code&gt;belongs_to&lt;/code&gt; 연관에 대한 &lt;code&gt;type&lt;/code&gt; 열을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="ad6f81957f0157ef027880c73f03b72609c518d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pool&lt;/code&gt;: maximum number of connections the pool may manage (default 5).</source>
          <target state="translated">&lt;code&gt;pool&lt;/code&gt; : 풀이 관리 할 수있는 최대 연결 수 (기본값 5).</target>
        </trans-unit>
        <trans-unit id="71d2859d0ddc5f6a11a0a45cc1ec916925ac9e11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;poster: &quot;image_name.png&quot;&lt;/code&gt;, provides an image to put in place of the video before it starts playing.</source>
          <target state="translated">&lt;code&gt;poster: &quot;image_name.png&quot;&lt;/code&gt; 는 비디오가 재생을 시작하기 전에 비디오 대신 넣을 이미지를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="34b169293e6ccc68ed4db6e34feb79bc279c4568" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;precision&lt;/code&gt; Defines the precision for the &lt;code&gt;decimal&lt;/code&gt; fields, representing the total number of digits in the number.</source>
          <target state="translated">&lt;code&gt;precision&lt;/code&gt; &lt;code&gt;decimal&lt;/code&gt; 필드 의 정밀도를 정의하여 숫자의 총 자릿수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9cc1637751a7fe60c24ed2cce3609be92c536c76" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;preload&lt;/code&gt;: Advertise that this site may be included in browsers' preloaded HSTS lists. HSTS protects your site on every visit &lt;em&gt;except the first visit&lt;/em&gt; since it hasn't seen your HSTS header yet. To close this gap, browser vendors include a baked-in list of HSTS-enabled sites. Go to &lt;a href=&quot;https://hstspreload.org&quot;&gt;hstspreload.org&lt;/a&gt; to submit your site for inclusion. Defaults to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;preload&lt;/code&gt; :이 사이트는 브라우저의 사전로드 된 HSTS 목록에 포함될 수 있음을 알리십시오. HSTS 는 아직 HSTS 헤더를 보지 못했기 때문에 &lt;em&gt;첫&lt;/em&gt; 방문을 &lt;em&gt;제외하고&lt;/em&gt; 모든 방문에서 사이트를 보호합니다 . 이러한 격차를 해소하기 위해 브라우저 공급 업체는 다양한 HSTS 가능 사이트 목록을 포함합니다. &lt;a href=&quot;https://hstspreload.org&quot;&gt;hstspreload.org&lt;/a&gt; 로 이동 하여 사이트를 제출하십시오. 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="08ead5cf0fb6718edd0e906549f19b1d1954f776" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prepend_helpers_path&lt;/code&gt;: Adds the directory &lt;code&gt;app/helpers&lt;/code&gt; from the application, railties, and engines to the lookup path for helpers for the application.</source>
          <target state="translated">&lt;code&gt;prepend_helpers_path&lt;/code&gt; : 응용 프로그램, 레일 리지 및 엔진 의 디렉토리 &lt;code&gt;app/helpers&lt;/code&gt; 를 응용 프로그램의 도우미를위한 조회 경로에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="25797d97b2f05997661694ed6e796a08dd18f16b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prev_day&lt;/code&gt; and &lt;code&gt;next_day&lt;/code&gt; return the time in the last or next day:</source>
          <target state="translated">&lt;code&gt;prev_day&lt;/code&gt; 및 &lt;code&gt;next_day&lt;/code&gt; 는 마지막 날 또는 다음 날의 시간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="67d9a3c74537ff2556c1acc9326c1d3a8b837f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prev_month&lt;/code&gt; and &lt;code&gt;next_month&lt;/code&gt; return the time with the same day in the last or next month:</source>
          <target state="translated">&lt;code&gt;prev_month&lt;/code&gt; 및 &lt;code&gt;next_month&lt;/code&gt; 는 지난 달 또는 다음 달에 같은 날의 시간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f8e572851ccbd000c66da68f423a74d1e222cdb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prev_quarter&lt;/code&gt; and &lt;code&gt;next_quarter&lt;/code&gt; return the date with the same day in the previous or next quarter:</source>
          <target state="translated">&lt;code&gt;prev_quarter&lt;/code&gt; 및 &lt;code&gt;next_quarter&lt;/code&gt; 는 이전 또는 다음 분기에 같은 날의 날짜를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c518ed15a4399406b51c0f8e0c9a105d40c0e5f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prev_quarter&lt;/code&gt; is aliased to &lt;code&gt;last_quarter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prev_quarter&lt;/code&gt; 는 별칭을 &lt;code&gt;last_quarter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="209f3c6461f6419268e19617fc911277d65a7c56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prev_week&lt;/code&gt; is aliased to &lt;code&gt;last_week&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prev_week&lt;/code&gt; 의 별명은 &lt;code&gt;last_week&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3fb11d0f4613485ea2ed88ec68d442b553ff9b81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;prev_year&lt;/code&gt; and &lt;code&gt;next_year&lt;/code&gt; return a time with the same day/month in the last or next year:</source>
          <target state="translated">&lt;code&gt;prev_year&lt;/code&gt; 및 &lt;code&gt;next_year&lt;/code&gt; 는 지난 또는 다음 해에 같은 요일 / 월로 시간을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="70857742aba2c05b4a12b8b6e3dd6f4cc4f7ea1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protect_from_forgery&lt;/code&gt; Now Defaults to &lt;code&gt;prepend: false&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;protect_from_forgery&lt;/code&gt; &lt;code&gt;prepend: false&lt;/code&gt; 이제 기본값이 앞에 붙습니다 . false</target>
        </trans-unit>
        <trans-unit id="ce8b806308d3339a5cbf30827001fad53a6a5e6d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;protect_from_forgery&lt;/code&gt; defaults to &lt;code&gt;prepend: false&lt;/code&gt; which means that it will be inserted into the callback chain at the point in which you call it in your application. If you want &lt;code&gt;protect_from_forgery&lt;/code&gt; to always run first, then you should change your application to use &lt;code&gt;protect_from_forgery prepend: true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;protect_from_forgery&lt;/code&gt; 의 기본값은 &lt;code&gt;prepend: false&lt;/code&gt; 입니다. 즉, 응용 프로그램에서 콜백 체인에 콜백 체인에 삽입됩니다. 당신이 원하는 경우 &lt;code&gt;protect_from_forgery&lt;/code&gt; 항상 먼저 실행에를, 당신은 사용하는 응용 프로그램 변경해야 &lt;code&gt;protect_from_forgery prepend: true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb1fb5f9766cf3630a1a2cb9bff66deca3403f80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;proxy_association.owner&lt;/code&gt; returns the object that the association is a part of.</source>
          <target state="translated">&lt;code&gt;proxy_association.owner&lt;/code&gt; 는 연결이 속한 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e8d21cb94a1f9c47f62702e7cc88852f25d01d6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;proxy_association.reflection&lt;/code&gt; returns the reflection object that describes the association.</source>
          <target state="translated">&lt;code&gt;proxy_association.reflection&lt;/code&gt; 은 연결을 설명하는 반사 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d1b50a7360aa4fd2ff0e09844127aa17380df6c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;proxy_association.target&lt;/code&gt; returns the associated object for &lt;code&gt;belongs_to&lt;/code&gt; or &lt;code&gt;has_one&lt;/code&gt;, or the collection of associated objects for &lt;code&gt;has_many&lt;/code&gt; or &lt;code&gt;has_and_belongs_to_many&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;proxy_association.target&lt;/code&gt; 은 &lt;code&gt;belongs_to&lt;/code&gt; 또는 &lt;code&gt;has_one&lt;/code&gt; 에 대한 관련 객체 또는 &lt;code&gt;has_many&lt;/code&gt; 또는 &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 에 대한 관련 객체 모음을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b7f73962c2c509aa417b69400073ca35fde25743" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;public&lt;/code&gt;: By default, HTTP responses are private, cached only on the user's web browser. To allow proxies to cache the response, set &lt;code&gt;true&lt;/code&gt; to indicate that they can serve the cached response to all users.</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; : 기본적으로 HTTP 응답은 개인용이며 사용자의 웹 브라우저에만 캐시됩니다. 프록시가 응답을 캐시 할 수있게하려면 캐시 된 응답을 모든 사용자에게 제공 할 수 있음을 나타내려면 &lt;code&gt;true&lt;/code&gt; 로 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="098b4d9e01dff09e13e293558a95b909bd15edc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;purpose&lt;/code&gt; and &lt;code&gt;compatible&lt;/code&gt; work together; while this thread is waiting for the exclusive lock, it will yield its share (if any) to any other attempt whose &lt;code&gt;purpose&lt;/code&gt; appears in this attempt's &lt;code&gt;compatible&lt;/code&gt; list. This allows a &amp;ldquo;loose&amp;rdquo; upgrade, which, being less strict, prevents some classes of deadlocks.</source>
          <target state="translated">&lt;code&gt;purpose&lt;/code&gt; 과 &lt;code&gt;compatible&lt;/code&gt; 협력; 이 스레드는 배타적 잠금을 기다리는 동안이 시도의 &lt;code&gt;compatible&lt;/code&gt; 목록 에 &lt;code&gt;purpose&lt;/code&gt; 이 있는 다른 시도에 대한 공유 (있는 경우)를 생성 합니다. 이렇게하면 &quot;느슨한&quot;업그레이드가 가능해 덜 엄격한 수준으로 일부 교착 상태를 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad17738dda7f6dc8ab06db92f95bf30626961130" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rails about&lt;/code&gt; gives information about version numbers for Ruby, RubyGems, Rails, the Rails subcomponents, your application's folder, the current Rails environment name, your app's database adapter, and schema version. It is useful when you need to ask for help, check if a security patch might affect you, or when you need some stats for an existing Rails installation.</source>
          <target state="translated">&lt;code&gt;rails about&lt;/code&gt; 는 Ruby, RubyGems, Rails, Rails 하위 구성 요소, 애플리케이션 폴더, 현재 Rails 환경 이름, 앱의 데이터베이스 어댑터 및 스키마 버전의 버전 번호에 대한 정보 를 제공합니다. 도움을 요청하거나 보안 패치가 영향을 줄 수 있는지 확인하거나 기존 Rails 설치에 대한 통계가 필요한 경우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="df11c7717f3215901420580d768c4ff513155fff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rails dbconsole&lt;/code&gt; figures out which database you're using and drops you into whichever command line interface you would use with it (and figures out the command line parameters to give to it, too!). It supports MySQL (including MariaDB), PostgreSQL, and SQLite3.</source>
          <target state="translated">&lt;code&gt;rails dbconsole&lt;/code&gt; 은 어떤 데이터베이스를 사용하고 있는지와 함께 사용할 명령 줄 인터페이스를 알려줍니다 (그리고 명령 줄 매개 변수도 알려줍니다!). MySQL (MariaDB 포함), PostgreSQL 및 SQLite3을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="e880842983c9e934a71d2496a22ec626eb0ee117" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rails notes&lt;/code&gt; searches through your code for comments beginning with a specific keyword. You can refer to &lt;code&gt;rails notes --help&lt;/code&gt; for information about usage.</source>
          <target state="translated">&lt;code&gt;rails notes&lt;/code&gt; 코드를 통해 특정 키워드로 시작하는 주석을 검색합니다. 사용법에 대한 정보는 &lt;code&gt;rails notes --help&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ed5c08f01dd88e7be96582587a1e953e37dc862" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rails routes&lt;/code&gt; will list all of your defined routes, which is useful for tracking down routing problems in your app, or giving you a good overview of the URLs in an app you're trying to get familiar with.</source>
          <target state="translated">&lt;code&gt;rails routes&lt;/code&gt; 는 정의 된 모든 경로 를 나열하며, 이는 앱의 라우팅 문제를 추적하거나 익숙해지는 앱의 URL에 대한 개요를 제공하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ae6681b4a6fadbcffc15fd2248720b0a029059e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rails secret&lt;/code&gt; will give you a pseudo-random key to use for your session secret.</source>
          <target state="translated">&lt;code&gt;rails secret&lt;/code&gt; 은 세션 비밀에 사용할 의사 난수 키를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="77d05c2f78a8980bd50375763a0be1016a3155d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rails server&lt;/code&gt; does the basic job of creating a &lt;code&gt;Rack::Server&lt;/code&gt; object and starting the web server.</source>
          <target state="translated">&lt;code&gt;rails server&lt;/code&gt; 는 &lt;code&gt;Rack::Server&lt;/code&gt; 객체 를 생성 하고 웹 서버를 시작하는 기본 작업을 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="e2a5b29ec9abb38e3adb0e0b10a571e55fd119e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rails stats&lt;/code&gt; is great for looking at statistics on your code, displaying things like KLOCs (thousands of lines of code) and your code to test ratio.</source>
          <target state="translated">&lt;code&gt;rails stats&lt;/code&gt; 는 코드에 대한 통계를보고 KLOC (수천 줄의 코드) 및 코드 대 테스트 비율과 같은 항목을 표시하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ff8a33da9a11f86990ec729e7f8992552c95348a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rails time:zones:all&lt;/code&gt; lists all the timezones Rails knows about.</source>
          <target state="translated">&lt;code&gt;rails time:zones:all&lt;/code&gt; 은 Rails가 알고있는 모든 시간대를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="fb27f1849900cb932517116f0c8a1aec3d595a0c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rails tmp:cache:clear&lt;/code&gt; clears &lt;code&gt;tmp/cache&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rails tmp:cache:clear&lt;/code&gt; 는 &lt;code&gt;tmp/cache&lt;/code&gt; 를 지 웁니다 .</target>
        </trans-unit>
        <trans-unit id="96d6622aae6b22734b6681d99a240e99066dedb0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rails tmp:clear&lt;/code&gt; clears all cache, sockets, and screenshot files.</source>
          <target state="translated">&lt;code&gt;rails tmp:clear&lt;/code&gt; 는 모든 캐시, 소켓 및 스크린 샷 파일을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="9abd7aa1c6ce4dc5014ffae4eec48ee60900a0a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rails tmp:create&lt;/code&gt; creates tmp directories for cache, sockets, and pids.</source>
          <target state="translated">&lt;code&gt;rails tmp:create&lt;/code&gt; 는 캐시, 소켓 및 pid에 대한 tmp 디렉토리를 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="dbcc6e39b05c932bd6c32cf4810bd14f73ee27c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rails tmp:screenshots:clear&lt;/code&gt; clears &lt;code&gt;tmp/screenshots&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rails tmp:screenshots:clear&lt;/code&gt; 는 &lt;code&gt;tmp/screenshots&lt;/code&gt; 를 지 웁니다 .</target>
        </trans-unit>
        <trans-unit id="3bf30edf9e05560238ea8d28c40a489fa011fde2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rails tmp:sockets:clear&lt;/code&gt; clears &lt;code&gt;tmp/sockets&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rails tmp:sockets:clear&lt;/code&gt; 는 &lt;code&gt;tmp/sockets&lt;/code&gt; 를 지 웁니다 .</target>
        </trans-unit>
        <trans-unit id="fdf9298ae62a6517bc1c1e08b3e667c9c00725f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;raise_delivery_errors&lt;/code&gt; - Whether or not errors should be raised if the email fails to be delivered.</source>
          <target state="translated">&lt;code&gt;raise_delivery_errors&lt;/code&gt; - 이메일이 전달되지 않는 경우 오류가 발생해야하는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="5af8a8ba25104f029493744ceab3a15fe8966e86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rake dev:cache&lt;/code&gt; is now &lt;code&gt;rails dev:cache&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rake dev:cache&lt;/code&gt; 는 이제 &lt;code&gt;rails dev:cache&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f277aa37b2fab6ca075d4adb2301ae3adbf2a5e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;range&lt;/code&gt; (PostgreSQL only) specifies that the type should be a range (see the examples below).</source>
          <target state="translated">&lt;code&gt;range&lt;/code&gt; (PostgreSQL 만 해당)는 유형이 범위가되도록 지정합니다 (아래 예 참조).</target>
        </trans-unit>
        <trans-unit id="1d23d5d2655717ac907cf70468455c11615b5064" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;raw_old_value&lt;/code&gt; The original value, before being passed to &lt;code&gt;deserialize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;raw_old_value&lt;/code&gt; &lt;code&gt;deserialize&lt;/code&gt; 에 전달되기 전의 원래 값 .</target>
        </trans-unit>
        <trans-unit id="5360e3dc1dca14d87d109dbd4681653c490f92be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;read_multi&lt;/code&gt; and &lt;code&gt;write_multi&lt;/code&gt; support for Redis mget/mset. Use Redis::Distributed 4.0.1+ for distributed mget support.</source>
          <target state="translated">&lt;code&gt;read_multi&lt;/code&gt; Redis mget / mset에 대한 read_multi 및 &lt;code&gt;write_multi&lt;/code&gt; 지원. 분산 mget 지원에는 Redis :: Distributed 4.0.1 이상을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="023d083493bdfc1df1435aa52bcb8bfa93e03fdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;record.association(:items).owner&lt;/code&gt; - Returns the object the association is part of.</source>
          <target state="translated">&lt;code&gt;record.association(:items).owner&lt;/code&gt; 연결이 속한 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8b9a1c670aec588901af8d1e7b307f16b351b8d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;record.association(:items).reflection&lt;/code&gt; - Returns the reflection object that describes the association.</source>
          <target state="translated">&lt;code&gt;record.association(:items).reflection&lt;/code&gt; 연결을 설명하는 반사 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a02d953c43636fe97af2f5f4f4c276e15daab3d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;record.association(:items).target&lt;/code&gt; - Returns the associated object for &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; and &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt;, or the collection of associated objects for &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; and &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;record.association(:items).target&lt;/code&gt; - &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; 와 &lt;a href=&quot;classmethods#method-i-has_one&quot;&gt;has_one&lt;/a&gt; 의 관련 객체 또는 &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; 와 &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; 의 관련 객체 모음을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="827725445bfaedaec45ac9b5bea026360fe7b7ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redirect_to&lt;/code&gt; (which, in fact, uses &lt;code&gt;url_for&lt;/code&gt;) so you can write &lt;code&gt;redirect_to(post)&lt;/code&gt; in your controllers;</source>
          <target state="translated">&lt;code&gt;redirect_to&lt;/code&gt; (실제로 &lt;code&gt;url_for&lt;/code&gt; 사용 ) 컨트롤러에서 &lt;code&gt;redirect_to(post)&lt;/code&gt; 를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c31f8564b9ee3e930423e334a6926255750877f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;redirect_to&lt;/code&gt; and &lt;code&gt;redirect_back&lt;/code&gt; do not halt and return immediately from method execution, but simply set HTTP responses. Statements occurring after them in a method will be executed. You can halt by an explicit &lt;code&gt;return&lt;/code&gt; or some other halting mechanism, if needed.</source>
          <target state="translated">&lt;code&gt;redirect_to&lt;/code&gt; 및 &lt;code&gt;redirect_back&lt;/code&gt; 은 메서드 실행에서 즉시 중단 및 반환되지 않고 단순히 HTTP 응답을 설정합니다. 메소드에서 명령문 이후에 발생하는 명령문이 실행됩니다. 필요한 경우 명시적인 &lt;code&gt;return&lt;/code&gt; 또는 다른 정지 메커니즘 으로 중지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cd5b17ac8c97631e22edb44a148aad3ea9877192" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reload&lt;/code&gt; the record and clears changed attributes.</source>
          <target state="translated">&lt;code&gt;reload&lt;/code&gt; 레코드를 다시로드 하고 변경된 속성을 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="6b82738901e03f100f75b7726b1f4c2053430f62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remote: true&lt;/code&gt; - This will allow the unobtrusive JavaScript driver to make an Ajax request to the URL in question instead of following the link. The drivers each provide mechanisms for listening for the completion of the Ajax request and performing JavaScript operations once they're complete</source>
          <target state="translated">&lt;code&gt;remote: true&lt;/code&gt; true-이를 통해 눈에 띄지 않는 JavaScript 드라이버가 링크를 따르지 않고 문제의 URL에 Ajax 요청을 할 수 있습니다. 드라이버는 각각 Ajax 요청의 완료를 청취하고 완료되면 JavaScript 조작을 수행하기위한 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="aaad59ba9f843ee53dac14c98e5cca1f7aee6d36" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_column(table_name, column_name, type, options)&lt;/code&gt;: Removes the column named &lt;code&gt;column_name&lt;/code&gt; from the table called &lt;code&gt;table_name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;remove_column(table_name, column_name, type, options)&lt;/code&gt; : &lt;code&gt;table_name&lt;/code&gt; 테이블에서 &lt;code&gt;column_name&lt;/code&gt; 이라는 열을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="b8c2bddae019c4dd259117c7dd951b112e65d9ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_column&lt;/code&gt; is reversible if you supply the column type as the third argument. Provide the original column options too, otherwise Rails can't recreate the column exactly when rolling back:</source>
          <target state="translated">&lt;code&gt;remove_column&lt;/code&gt; 열 유형을 세 번째 인수로 제공하면 remove_column 을 되돌릴 수 있습니다. 원본 열 옵션도 제공하십시오. 그렇지 않으면 Rails가 롤백 할 때 열을 정확하게 다시 만들 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="da1bcb584d67220cf00f9aebfe88be7a43b31561" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_columns(table_name, *column_names)&lt;/code&gt;: Removes the given columns from the table definition.</source>
          <target state="translated">&lt;code&gt;remove_columns(table_name, *column_names)&lt;/code&gt; : 테이블 정의에서 지정된 열을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="81197ede053cd0da37ecca65cbc8a131972e871a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_foreign_key(from_table, to_table = nil, **options)&lt;/code&gt;: Removes the given foreign key from the table called &lt;code&gt;table_name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;remove_foreign_key(from_table, to_table = nil, **options)&lt;/code&gt; : &lt;code&gt;table_name&lt;/code&gt; 이라는 테이블에서 지정된 외래 키를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="1af118e66397ef26c505cf339f0d8f266986b7a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_index(table_name, column: column_names)&lt;/code&gt;: Removes the index specified by &lt;code&gt;column_names&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;remove_index(table_name, column: column_names)&lt;/code&gt; : &lt;code&gt;column_names&lt;/code&gt; 로 지정된 인덱스를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="2f0dbef331e3269ce578e75c68b572c5a736df5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_index(table_name, name: index_name)&lt;/code&gt;: Removes the index specified by &lt;code&gt;index_name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;remove_index(table_name, name: index_name)&lt;/code&gt; : &lt;code&gt;index_name&lt;/code&gt; 에 의해 지정된 색인을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="df9df17ac0724abfda7ae268b838eed7e2eaeff1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_reference(table_name, ref_name, options)&lt;/code&gt;: Removes the reference(s) on &lt;code&gt;table_name&lt;/code&gt; specified by &lt;code&gt;ref_name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;remove_reference(table_name, ref_name, options)&lt;/code&gt; : &lt;code&gt;ref_name&lt;/code&gt; 으로 지정된 &lt;code&gt;table_name&lt;/code&gt; 에서 참조를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="9edeb41d5d8bc607890aa19e2a3850aa94c5c10e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove_timestamps(table_name, options)&lt;/code&gt;: Removes the timestamp columns (&lt;code&gt;created_at&lt;/code&gt; and &lt;code&gt;updated_at&lt;/code&gt;) from the table definition.</source>
          <target state="translated">&lt;code&gt;remove_timestamps(table_name, options)&lt;/code&gt; : 테이블 정의에서 타임 스탬프 열 ( &lt;code&gt;created_at&lt;/code&gt; 및 &lt;code&gt;updated_at&lt;/code&gt; )을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="0967c474a44c85a39d46870efc842aedd81bfe95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rename_column(table_name, column_name, new_column_name)&lt;/code&gt;: Renames a column but keeps the type and content.</source>
          <target state="translated">&lt;code&gt;rename_column(table_name, column_name, new_column_name)&lt;/code&gt; : 열의 이름을 바꾸지 만 유형과 내용은 유지합니다.</target>
        </trans-unit>
        <trans-unit id="12fb9e6f50233c21cc1a756c3e9d334f170b1842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rename_index(table_name, old_name, new_name)&lt;/code&gt;: Renames an index.</source>
          <target state="translated">&lt;code&gt;rename_index(table_name, old_name, new_name)&lt;/code&gt; : 인덱스 이름을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="d2f01f830b2af9f482ceb6a9a5c69de67095052a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rename_table(old_name, new_name)&lt;/code&gt;: Renames the table called &lt;code&gt;old_name&lt;/code&gt; to &lt;code&gt;new_name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;rename_table(old_name, new_name)&lt;/code&gt; : &lt;code&gt;old_name&lt;/code&gt; 이라는 테이블의 이름 을 &lt;code&gt;new_name&lt;/code&gt; 으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="14387a94564e74bb815b3d4e89dfcdd458e04c60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;render :body&lt;/code&gt; will &lt;em&gt;not&lt;/em&gt; set the content type header.</source>
          <target state="translated">&lt;code&gt;render :body&lt;/code&gt; 는 컨텐츠 유형 헤더를 설정 &lt;em&gt;하지 않습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="1a4381665ed5c017b453e5f3af44586af5cad2dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;render :html&lt;/code&gt; will set the content type to &lt;code&gt;text/html&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;render :html&lt;/code&gt; 은 컨텐츠 유형을 &lt;code&gt;text/html&lt;/code&gt; 로 설정합니다</target>
        </trans-unit>
        <trans-unit id="f8122e22fbf27266c94a6fd2a716c48c6837bb85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;render :plain&lt;/code&gt; will set the content type to &lt;code&gt;text/plain&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;render :plain&lt;/code&gt; 은 내용 유형을 &lt;code&gt;text/plain&lt;/code&gt; 으로 설정합니다</target>
        </trans-unit>
        <trans-unit id="6e277ba74315531e7813b62b5e80cf3014b7c025" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require_dependency&lt;/code&gt; and Initializers</source>
          <target state="translated">&lt;code&gt;require_dependency&lt;/code&gt; 및 이니셜 라이저</target>
        </trans-unit>
        <trans-unit id="c60dfad0fb4e1252bd0f7473f62ef225b632a37c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;require_dependency&lt;/code&gt; is rarely needed, but see a couple of use cases in &lt;a href=&quot;#autoloading-and-sti&quot;&gt;Autoloading and STI&lt;/a&gt; and &lt;a href=&quot;#when-constants-aren-t-missed&quot;&gt;When Constants aren't Triggered&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;require_dependency&lt;/code&gt; 는 거의 필요하지 않지만 &lt;a href=&quot;#autoloading-and-sti&quot;&gt;자동로드 및 STI&lt;/a&gt; 및 &lt;a href=&quot;#when-constants-aren-t-missed&quot;&gt;상수가 트리거되지 않을 때&lt;/a&gt; 몇 가지 사용 사례를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7c17ec325a26604e4f4c8de67780be61033e938d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;rescue_from&lt;/code&gt; receives a series of exception classes or class names, and a trailing &lt;code&gt;:with&lt;/code&gt; option with the name of a method or a Proc object to be called to handle them. Alternatively a block can be given.</source>
          <target state="translated">&lt;code&gt;rescue_from&lt;/code&gt; 은 일련의 예외 클래스 또는 클래스 이름과 메소드 이름 또는이를 처리하기 위해 호출 할 Proc 오브젝트와 함께 후행 &lt;code&gt;:with&lt;/code&gt; 옵션을 수신합니다. 대안 적으로 블록이 제공 될 수있다.</target>
        </trans-unit>
        <trans-unit id="186bc8fbf10a5b37da545c0ef68bf6b392393719" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resource_controller&lt;/code&gt; defines which generator to use for generating a controller when using &lt;code&gt;rails generate resource&lt;/code&gt;. Defaults to &lt;code&gt;:controller&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;resource_controller&lt;/code&gt; 는 &lt;code&gt;rails generate resource&lt;/code&gt; using resource 를 사용할 때 컨트롤러를 생성하는 데 사용할 생성기를 정의 합니다 . 기본값은 &lt;code&gt;:controller&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ca345a586b7a2e03b0ce977439c59d90592fdde1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;resource_route&lt;/code&gt; defines whether a resource route definition should be generated or not. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;resource_route&lt;/code&gt; 는 자원 경로 정의를 생성해야하는지 여부를 정의합니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cbb411912ca94330fc1e75aa81a4523a2478aa8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;respond_to&lt;/code&gt; also allows you to specify a common block for different formats by using &lt;code&gt;any&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;respond_to&lt;/code&gt; 는 또한 사용하여 다른 형식에 대한 일반적인 블록을 지정할 수 있습니다 &lt;code&gt;any&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="f2001b1cad7a841222c688ad01cdebb5aa30b986" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;respond_with&lt;/code&gt; and the class-level &lt;code&gt;respond_to&lt;/code&gt; methods have been extracted to the &lt;code&gt;responders&lt;/code&gt; gem. To use them, simply add &lt;code&gt;gem 'responders', '~&amp;gt; 2.0'&lt;/code&gt; to your &lt;code&gt;Gemfile&lt;/code&gt;. Calls to &lt;code&gt;respond_with&lt;/code&gt; and &lt;code&gt;respond_to&lt;/code&gt; (again, at the class level) will no longer work without having included the &lt;code&gt;responders&lt;/code&gt; gem in your dependencies:</source>
          <target state="translated">&lt;code&gt;respond_with&lt;/code&gt; 및 클래스 수준 &lt;code&gt;respond_to&lt;/code&gt; 메소드가 &lt;code&gt;responders&lt;/code&gt; gem에 추출되었습니다 . 그것들을 사용하려면 &lt;code&gt;Gemfile&lt;/code&gt; 에 &lt;code&gt;gem 'responders', '~&amp;gt; 2.0'&lt;/code&gt; 을 추가하십시오 . &lt;code&gt;respond_with&lt;/code&gt; 및 &lt;code&gt;respond_to&lt;/code&gt; (클래스 수준에서)에 대한 호출 은 &lt;code&gt;responders&lt;/code&gt; gem을 종속성에 포함시키지 않으면 더 이상 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a27111e44a824da5a5e051b8db9a34729d4ad909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;root 'welcome#index'&lt;/code&gt; tells Rails to map requests to the root of the application to the welcome controller's index action and &lt;code&gt;get 'welcome/index'&lt;/code&gt; tells Rails to map requests to http://localhost:3000/welcome/index to the welcome controller's index action. This was created earlier when you ran the controller generator (&lt;code&gt;rails generate controller Welcome index&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;root 'welcome#index'&lt;/code&gt; 는 Rails에게 응용 프로그램의 루트에 대한 요청을 환영 컨트롤러의 인덱스 작업 에 매핑하도록 지시 하고 &lt;code&gt;get 'welcome/index'&lt;/code&gt; 는 Rails에 요청을 http : // localhost : 3000 / welcome / index에 환영에 매핑하도록 지시합니다. 컨트롤러의 인덱스 동작. 이것은 이전에 컨트롤러 생성기를 실행할 때 작성되었습니다 ( &lt;code&gt;rails generate controller Welcome index&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="9d0a94a55aaf6d8ff72d5b2dedcfc3a2b3f54008" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;runner&lt;/code&gt; runs Ruby code in the context of Rails non-interactively. For instance:</source>
          <target state="translated">&lt;code&gt;runner&lt;/code&gt; 는 Rails 컨텍스트에서 Ruby 코드를 비 대화식으로 실행합니다. 예를 들어 :</target>
        </trans-unit>
        <trans-unit id="fa1bd5d51545ac4a5a1132155ceaeb60aff2ad75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;safe_constantize&lt;/code&gt; tries to find a declared constant with the name specified in the string. It returns &lt;code&gt;nil&lt;/code&gt; when the name is not in CamelCase or is not initialized. See &lt;a href=&quot;activesupport/inflector#method-i-safe_constantize&quot;&gt;ActiveSupport::Inflector#safe_constantize&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;safe_constantize&lt;/code&gt; 는 문자열에 지정된 이름으로 선언 된 상수를 찾으려고합니다. 이름이 CamelCase에 없거나 초기화되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 . 참조 &lt;a href=&quot;activesupport/inflector#method-i-safe_constantize&quot;&gt;ActiveSupport :: 인플 # safe_constantize&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9a83b048e0bfdf2550f6985665b334c082f61bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;save&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt; are automatically wrapped in a transaction</source>
          <target state="translated">&lt;code&gt;save&lt;/code&gt; 및 &lt;code&gt;destroy&lt;/code&gt; 는 트랜잭션에 자동으로 래핑됩니다.</target>
        </trans-unit>
        <trans-unit id="c085e8a868728a33cbcba10c2ec61bad377fa8a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scaffold_controller&lt;/code&gt; different from &lt;code&gt;resource_controller&lt;/code&gt;, defines which generator to use for generating a &lt;em&gt;scaffolded&lt;/em&gt; controller when using &lt;code&gt;rails generate scaffold&lt;/code&gt;. Defaults to &lt;code&gt;:scaffold_controller&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scaffold_controller&lt;/code&gt; &lt;code&gt;resource_controller&lt;/code&gt; 와 다른 scaffold_controller 는 &lt;code&gt;rails generate scaffold&lt;/code&gt; 사용하여 &lt;em&gt;발판&lt;/em&gt; 을 생성 할 때 &lt;em&gt;발판&lt;/em&gt; 컨트롤러 를 생성하는 데 사용할 생성기를 정의합니다 . 기본값은 &lt;code&gt;:scaffold_controller&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="611b712d78b2ee1e02f453bbe88432b6543280fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scaffold_stylesheet&lt;/code&gt; creates &lt;code&gt;scaffold.css&lt;/code&gt; when generating a scaffolded resource. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scaffold_stylesheet&lt;/code&gt; 가 생성 &lt;code&gt;scaffold.css&lt;/code&gt; 을 비계 리소스를 생성 할 때. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="513d64eef9a46e5ab267076d070536e2f14a7186" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scale&lt;/code&gt; Defines the scale for the &lt;code&gt;decimal&lt;/code&gt; fields, representing the number of digits after the decimal point.</source>
          <target state="translated">&lt;code&gt;scale&lt;/code&gt; &lt;code&gt;decimal&lt;/code&gt; 뒤의 자릿수를 나타내는 소수점 필드 의 배율을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="064f0cc41f0ff20a9bf11d61893dd3e56f47f598" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;scoped_by_...&lt;/code&gt; becomes &lt;code&gt;where(...)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;scoped_by_...&lt;/code&gt; 는 &lt;code&gt;where(...)&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="4f7d08b3bb293efc7722125d8a77d11d6244eb3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;secret_key_base&lt;/code&gt; is used for specifying a key which allows sessions for the application to be verified against a known secure key to prevent tampering. Applications get a random generated key in test and development environments, other environments should set one in &lt;code&gt;config/credentials.yml.enc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;secret_key_base&lt;/code&gt; 는 변조를 방지하기 위해 알려진 보안 키에 대해 응용 프로그램의 세션을 확인할 수있는 키를 지정하는 데 사용됩니다. 응용 프로그램은 테스트 및 개발 환경에서 임의로 생성 된 키를 얻습니다. 다른 환경에서는 &lt;code&gt;config/credentials.yml.enc&lt;/code&gt; 에서 설정 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="685b9cddf0ee443b622694c6ca51baee47bf66d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;select_date&lt;/code&gt; does not work well with forms that update or create Active Record objects as Active Record expects each element of the &lt;code&gt;params&lt;/code&gt; hash to correspond to one attribute. The model object helpers for dates and times submit parameters with special names; when Active Record sees parameters with such names it knows they must be combined with the other parameters and given to a constructor appropriate to the column type. For example:</source>
          <target state="translated">&lt;code&gt;select_date&lt;/code&gt; Active Record는 &lt;code&gt;params&lt;/code&gt; 해시 의 각 요소 가 하나의 속성에 해당 할 것으로 예상하므로 select_date 는 Active Record 객체를 업데이트하거나 생성하는 양식에는 적합하지 않습니다 . 날짜 및 시간에 대한 모델 오브젝트 헬퍼는 특수 이름으로 매개 변수를 제출합니다. Active Record는 이러한 이름을 가진 매개 변수를 볼 때 다른 매개 변수와 결합하여 열 유형에 적합한 생성자에게 제공해야한다는 것을 알고 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c66b62bb942e19a1a238bec7182f7cb075c53e52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selected&lt;/code&gt; can also be a hash, specifying both &lt;code&gt;:selected&lt;/code&gt; and/or &lt;code&gt;:disabled&lt;/code&gt; values as required.</source>
          <target state="translated">&lt;code&gt;selected&lt;/code&gt; 는 필요에 따라 &lt;code&gt;:selected&lt;/code&gt; 및 / 또는 &lt;code&gt;:disabled&lt;/code&gt; 값을 모두 지정하는 해시 일 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ae07d4b56dbd5f3fd84c350b086a83e279abd68b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selected_key&lt;/code&gt; - A value equal to the &lt;code&gt;value&lt;/code&gt; attribute for one of the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; tags, which will have the &lt;code&gt;selected&lt;/code&gt; attribute set. Corresponds to the return value of one of the calls to &lt;code&gt;option_key_method&lt;/code&gt;. If &lt;code&gt;nil&lt;/code&gt;, no selection is made. Can also be a hash if disabled values are to be specified.</source>
          <target state="translated">&lt;code&gt;selected_key&lt;/code&gt; - &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 태그 중 하나의 &lt;code&gt;value&lt;/code&gt; 속성 과 동일한 값으로 &lt;code&gt;selected&lt;/code&gt; 속성이 설정됩니다. &lt;code&gt;option_key_method&lt;/code&gt; 에 대한 호출 중 하나의 반환 값에 해당합니다 . &lt;code&gt;nil&lt;/code&gt; 인 경우 선택하지 않습니다. 비활성화 된 값을 지정하는 경우 해시 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2ff22a314bdf4d83a77a38f852f9e75fd2b6f5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;selected_key&lt;/code&gt; - A value equal to the &lt;code&gt;value&lt;/code&gt; attribute for one of the &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; tags, which will have the &lt;code&gt;selected&lt;/code&gt; attribute set. Note: It is possible for this value to match multiple options as you might have the same option in multiple groups. Each will then get &lt;code&gt;selected=&quot;selected&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;selected_key&lt;/code&gt; - &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 태그 중 하나의 &lt;code&gt;value&lt;/code&gt; 속성 과 동일한 값으로 &lt;code&gt;selected&lt;/code&gt; 속성이 설정됩니다. 참고 : 여러 그룹에 동일한 옵션이있을 수 있으므로이 값이 여러 옵션과 일치 할 수 있습니다. 그러면 각각 &lt;code&gt;selected=&quot;selected&quot;&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="1b0f7331e751c384be94ebf8de570b6479f263a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;send_file&lt;/code&gt; is often a faster and better option if a layout isn't required.</source>
          <target state="translated">&lt;code&gt;send_file&lt;/code&gt; 은 레이아웃이 필요하지 않은 경우 더 빠르고 더 나은 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="9c6b21d3c4c75f761c439453d0e813d13324f2c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sendmail_settings&lt;/code&gt; - Allows you to override options for the &lt;code&gt;:sendmail&lt;/code&gt; delivery method.</source>
          <target state="translated">&lt;code&gt;sendmail_settings&lt;/code&gt; - &lt;code&gt;:sendmail&lt;/code&gt; 전달 방법에 대한 옵션을 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c29c82e552832f0fef51024138fbf8e63f5d0925" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;session&lt;/code&gt; - Any object living in session variables</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; - 세션 변수에 존재하는 객체</target>
        </trans-unit>
        <trans-unit id="0234083e3a77da69ba9dcebe4c680bc3e97316ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;session&lt;/code&gt;: A hash of parameters to store in the session. This may be &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;session&lt;/code&gt; : 세션 에 저장할 파라미터의 해시. &lt;code&gt;nil&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4929dafaa42c7789176cd3493108d746a16ca35c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_autoload_paths&lt;/code&gt;: This initializer runs before &lt;code&gt;bootstrap_hook&lt;/code&gt;. Adds all sub-directories of &lt;code&gt;app&lt;/code&gt; and paths specified by &lt;code&gt;config.autoload_paths&lt;/code&gt;, &lt;code&gt;config.eager_load_paths&lt;/code&gt; and &lt;code&gt;config.autoload_once_paths&lt;/code&gt; to &lt;code&gt;ActiveSupport::Dependencies.autoload_paths&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_autoload_paths&lt;/code&gt; :이 초기화 프로그램은 &lt;code&gt;bootstrap_hook&lt;/code&gt; 전에 실행됩니다 . &lt;code&gt;config.autoload_paths&lt;/code&gt; , &lt;code&gt;config.eager_load_paths&lt;/code&gt; 및 &lt;code&gt;config.autoload_once_paths&lt;/code&gt; 로 지정된 &lt;code&gt;app&lt;/code&gt; 및 경로 의 모든 하위 디렉토리 를 &lt;code&gt;ActiveSupport::Dependencies.autoload_paths&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="ba0ccbce4b14bf65c48028873cf340c2d942d739" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_clear_dependencies_hook&lt;/code&gt;: This initializer - which runs only if &lt;code&gt;cache_classes&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt; - uses &lt;code&gt;ActionDispatch::Callbacks.after&lt;/code&gt; to remove the constants which have been referenced during the request from the object space so that they will be reloaded during the following request.</source>
          <target state="translated">&lt;code&gt;set_clear_dependencies_hook&lt;/code&gt; : &lt;code&gt;cache_classes&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 로 설정된 경우에만 실행되는이 초기화 프로그램 은 &lt;code&gt;ActionDispatch::Callbacks.after&lt;/code&gt; 를 사용 하여 오브젝트 공간에서 요청 중에 참조 된 상수를 제거하여 다음 요청 중에 다시로드되도록합니다.</target>
        </trans-unit>
        <trans-unit id="984fdaa14fb85b49789755c30b78d96e6ed46814" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_load_path&lt;/code&gt;: This initializer runs before &lt;code&gt;bootstrap_hook&lt;/code&gt;. Adds paths specified by &lt;code&gt;config.load_paths&lt;/code&gt; and all autoload paths to &lt;code&gt;$LOAD_PATH&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_load_path&lt;/code&gt; :이 초기화 프로그램은 &lt;code&gt;bootstrap_hook&lt;/code&gt; 전에 실행됩니다 . &lt;code&gt;config.load_paths&lt;/code&gt; 및 모든 자동로드 경로로 지정된 경로를 &lt;code&gt;$LOAD_PATH&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="13d6ca3a460c04181925b62c8b6b2969adbdffec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;set_routes_reloader_hook&lt;/code&gt;: Configures Action Dispatch to reload the routes file using &lt;code&gt;ActiveSupport::Callbacks.to_run&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_routes_reloader_hook&lt;/code&gt; : &lt;code&gt;ActiveSupport::Callbacks.to_run&lt;/code&gt; 사용하여 라우트 파일을 다시로드하도록 Action Dispatch를 구성 합니다.</target>
        </trans-unit>
        <trans-unit id="e48387e991077a0b8e578b09a907ca5bdd7f8937" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;signature&lt;/code&gt;: A hexadecimal HMAC-SHA256 of the timestamp concatenated with the token, generated using the Mailgun API key</source>
          <target state="translated">&lt;code&gt;signature&lt;/code&gt; : Mailgun API 키를 사용하여 생성 된 토큰과 연결된 시간 소인의 16 진 HMAC-SHA256</target>
        </trans-unit>
        <trans-unit id="d1cb47c2fc5fa3e4e8ecd7cf00819a9cb6d0afee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;simple&lt;/code&gt; (default)</source>
          <target state="translated">&lt;code&gt;simple&lt;/code&gt; (기본값)</target>
        </trans-unit>
        <trans-unit id="d507b3fc42282f3ad6bb57964fd9e19771bef9a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;smtp_settings&lt;/code&gt; - Allows detailed configuration for &lt;code&gt;:smtp&lt;/code&gt; delivery method:</source>
          <target state="translated">&lt;code&gt;smtp_settings&lt;/code&gt; - &lt;code&gt;:smtp&lt;/code&gt; 전달 방법에 대한 세부 구성을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="a360b3a5fa730285954b9fef457c134b5ec31173" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;source&lt;/code&gt; is passed to &lt;a href=&quot;asseturlhelper#method-i-path_to_image&quot;&gt;ActionView::Helpers::AssetUrlHelper#path_to_image&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;source&lt;/code&gt; 는 &lt;a href=&quot;asseturlhelper#method-i-path_to_image&quot;&gt;ActionView :: Helpers :: AssetUrlHelper # path_to_image&lt;/a&gt; 로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="baa21771ca1654df64ee589374dbe15f2929efbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;spec_name:&lt;/code&gt; The specification name (i.e. primary, animals, etc.). Defaults to &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;spec_name:&lt;/code&gt; 사양 이름 (예 : 기본, 동물 등). 기본값은 &lt;code&gt;nil&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7685fdb2b2a26f68df10e7260ad4cc3aa051f3ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sql&lt;/code&gt; - An SQL statement which should return a count query from the database, see the example above.</source>
          <target state="translated">&lt;code&gt;sql&lt;/code&gt; - 데이터베이스에서 개수 쿼리를 반환해야하는 SQL 문은 위의 예를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4d83b15a9c09023f9bb351599f4b210452585aac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;starts_with?&lt;/code&gt; and &lt;code&gt;ends_with?&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;starts_with?&lt;/code&gt; 그리고 &lt;code&gt;ends_with?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="89e9fd5e8f0b433ff1109ca0edc282da0c1d72ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;string&lt;/code&gt; - The string to perform normalization on.</source>
          <target state="translated">&lt;code&gt;string&lt;/code&gt; -에 정상화를 수행 할 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="2f416c02b9250dc0b5d35c68ef58bb816fbff6cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stylesheet_engine&lt;/code&gt; configures the stylesheet engine (for eg. sass) to be used when generating assets. Defaults to &lt;code&gt;:css&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stylesheet_engine&lt;/code&gt; 은 자산 생성시 스타일 시트 엔진 (예 : sass)을 사용하도록 구성합니다. 기본값은 &lt;code&gt;:css&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3845a499079b886862119588e0770fa073018d5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;stylesheets&lt;/code&gt; turns on the hook for stylesheets in generators. Used in Rails for when the &lt;code&gt;scaffold&lt;/code&gt; generator is run, but this hook can be used in other generates as well. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;stylesheets&lt;/code&gt; 시트는 생성기의 스타일 시트에 대한 후크를 설정합니다. &lt;code&gt;scaffold&lt;/code&gt; 생성기가 실행될 때 레일에서 사용 되지만이 후크는 다른 생성에서도 사용할 수 있습니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1002449eb2c10f3d5e3bcf254b65ff66d83ca3b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;subdomains&lt;/code&gt;: Set to &lt;code&gt;true&lt;/code&gt; to tell the browser to apply these settings to all subdomains. This protects your cookies from interception by a vulnerable site on a subdomain. Defaults to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;subdomains&lt;/code&gt; : 브라우저에 이러한 설정을 모든 하위 도메인에 적용하도록 지시하려면 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 . 이렇게하면 하위 도메인의 취약한 사이트가 쿠키를 가로 채지 못하게됩니다. 기본값은 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4d96075cec5353f050914b82630a1e7257ba9b13" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;system_tests&lt;/code&gt; defines which integration tool to use to generate system tests. Defaults to &lt;code&gt;:test_unit&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;system_tests&lt;/code&gt; 는 시스템 테스트를 생성하는 데 사용할 통합 도구를 정의합니다. 기본값은 &lt;code&gt;:test_unit&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ae6f6136e8c512c600252d0b1e512baa21f41c09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take_failed_screenshot&lt;/code&gt; is included in &lt;code&gt;application_system_test_case.rb&lt;/code&gt; that is generated with the application. To take screenshots when a test fails add &lt;code&gt;take_failed_screenshot&lt;/code&gt; to the teardown block before clearing sessions.</source>
          <target state="translated">&lt;code&gt;take_failed_screenshot&lt;/code&gt; 은 &lt;code&gt;application_system_test_case.rb&lt;/code&gt; 으로 생성 된 application_system_test_case.rb에 포함되어 있습니다 . 테스트가 실패했을 때 스크린 샷을 찍으려면 세션을 지우기 전에 &lt;code&gt;take_failed_screenshot&lt;/code&gt; 블록에 take_failed_screenshot 을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="0da74ff4dd7e6de92eee37da2d101bbfb165b39b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;take_screenshot&lt;/code&gt; can be used at any point in your system tests to take a screenshot of the current state. This can be useful for debugging or automating visual testing.</source>
          <target state="translated">&lt;code&gt;take_screenshot&lt;/code&gt; 은 시스템 테스트의 어느 시점에서나 사용하여 현재 상태의 스크린 샷을 찍을 수 있습니다. 시각적 테스트를 디버깅하거나 자동화하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da66a0cd4f8ee9dcdd4e844163cd896fe8f8ade3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;template_engine&lt;/code&gt; defines which template engine to use, such as ERB or Haml. Defaults to &lt;code&gt;:erb&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;template_engine&lt;/code&gt; 은 ERB 또는 Haml과 같이 사용할 템플릿 엔진을 정의합니다. 기본값은 &lt;code&gt;:erb&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="63f4ce223fcd8ca93d337e998b98acb4e508d429" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;test_framework&lt;/code&gt; defines which test framework to use. Defaults to &lt;code&gt;false&lt;/code&gt; and will use minitest by default.</source>
          <target state="translated">&lt;code&gt;test_framework&lt;/code&gt; 는 사용할 테스트 프레임 워크를 정의합니다. 기본값은 &lt;code&gt;false&lt;/code&gt; 이며 기본적으로 최소 테스트를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0803b7a32d9ebb20836ae3830ecae10f85cae2f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thread list&lt;/code&gt;: is used to list all threads and their statuses. The current thread is marked with a plus (+) sign.</source>
          <target state="translated">&lt;code&gt;thread list&lt;/code&gt; : 모든 스레드와 상태를 나열하는 데 사용됩니다. 현재 스레드에는 더하기 (+) 기호가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6d22128a3a60fa2f76c43e654b361de0ee290de6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thread resume n&lt;/code&gt;: resumes thread &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;thread resume n&lt;/code&gt; : 스레드 &lt;em&gt;n을&lt;/em&gt; 다시 시작합니다 .</target>
        </trans-unit>
        <trans-unit id="a01f7bd0c33697fc1c855686819086271f0337ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thread stop n&lt;/code&gt;: stops thread &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;thread stop n&lt;/code&gt; : 스레드 &lt;em&gt;n을&lt;/em&gt; 중지합니다 .</target>
        </trans-unit>
        <trans-unit id="80b50155884a1e06a363f9e2f71ec4def3631591" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thread switch n&lt;/code&gt;: switches the current thread context to &lt;em&gt;n&lt;/em&gt;.</source>
          <target state="translated">&lt;code&gt;thread switch n&lt;/code&gt; : 현재 스레드 컨텍스트를 &lt;em&gt;n으로&lt;/em&gt; 전환합니다 .</target>
        </trans-unit>
        <trans-unit id="178982760439e0dde8b20819f69ee12a17c08cdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;thread&lt;/code&gt;: shows the current thread.</source>
          <target state="translated">&lt;code&gt;thread&lt;/code&gt; : 현재 스레드를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3eb10d4fd0cef62278d8c26801dc5e04dfab79a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;timestamp&lt;/code&gt;: The current time according to Mailgun as the number of seconds passed since the UNIX epoch</source>
          <target state="translated">&lt;code&gt;timestamp&lt;/code&gt; : UNIX 시대 이후 경과 된 시간 (초)으로 Mailgun에 따른 현재 시간</target>
        </trans-unit>
        <trans-unit id="a66fcb59eb3871f4a75e75c8223ff89d57bfd5c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;titleize&lt;/code&gt; is aliased to &lt;code&gt;titlecase&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;titleize&lt;/code&gt; 는 &lt;code&gt;titlecase&lt;/code&gt; 에 별명 입니다.</target>
        </trans-unit>
        <trans-unit id="57f95a0f3101f55bd760e8517cd715ccffd4d293" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;titleize&lt;/code&gt; is also aliased as &lt;code&gt;titlecase&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;titleize&lt;/code&gt; 는 &lt;code&gt;titlecase&lt;/code&gt; 로 별칭이 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="63d51d190307d283a612645c3d24569e970c8724" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to&lt;/code&gt; When passed, this method will return false unless the value was changed to the given value</source>
          <target state="translated">&lt;code&gt;to&lt;/code&gt; 값이 지정된 값으로 변경하지 않는 한 전달하면,이 메소드는 false를 돌려줍니다</target>
        </trans-unit>
        <trans-unit id="4cfec6743b604feafc4519d00f780b8b78c9f73c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to&lt;/code&gt; When passed, this method will return false unless the value will be changed to the given value</source>
          <target state="translated">&lt;code&gt;to&lt;/code&gt; 값이 소정의 값으로 변경되지 않는 한 전달하면,이 방법은 오류가 반환</target>
        </trans-unit>
        <trans-unit id="9427a0033e65da116dbfa1b199f62178495c7322" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_key&lt;/code&gt; returns an &lt;a href=&quot;../../enumerable&quot;&gt;Enumerable&lt;/a&gt; of all (primary) key attributes of the model, and is used to a generate unique DOM id for the object.</source>
          <target state="translated">&lt;code&gt;to_key&lt;/code&gt; 는 모델의 모든 (기본) 키 속성의 &lt;a href=&quot;../../enumerable&quot;&gt;Enumerable&lt;/a&gt; 을 반환하며 객체의 고유 DOM ID를 생성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3a05e9d2d17e6cadd9da4721e331d248bbb7e3ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_param&lt;/code&gt; is used to represent the object's key in URLs. Implementers can decide to either raise an exception or provide a default in case the record uses a composite primary key. There are no tests for this behavior in lint because it doesn't make sense to force any of the possible implementation strategies on the implementer.</source>
          <target state="translated">&lt;code&gt;to_param&lt;/code&gt; 은 URL에서 객체의 키를 나타내는 데 사용됩니다. 구현자는 레코드가 복합 기본 키를 사용하는 경우 예외를 발생 시키거나 기본값을 제공하기로 결정할 수 있습니다. 린트에서이 동작에 대한 테스트는 없습니다. 구현 자에게 가능한 구현 전략을 강요하는 것은 이치에 맞지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="26137b7ee9b238e44d397c651c8fdbf2ba7f7951" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_partial_path&lt;/code&gt; is used for looking up partials. For example, a BlogPost model might return &amp;ldquo;blog_posts/blog_post&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;to_partial_path&lt;/code&gt; 는 부분을 찾는 데 사용됩니다. 예를 들어 BlogPost 모델은&amp;ldquo;blog_posts / blog_post&amp;rdquo;를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5852f6b919aa68b52db0ebef197d83b56845becd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_prepare&lt;/code&gt;: Run after the initializers are run for all Railties (including the application itself), but before eager loading and the middleware stack is built. More importantly, will run upon every request in &lt;code&gt;development&lt;/code&gt;, but only once (during boot-up) in &lt;code&gt;production&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_prepare&lt;/code&gt; : 이니셜 라이저가 모든 Railties에 대해 실행 된 후 (응용 프로그램 자체 포함)로드하기 전에 미들웨어 스택이 빌드되기 전에 실행됩니다. 더 중요한 것은, 모든 요청에 따라 실행됩니다 &lt;code&gt;development&lt;/code&gt; ,하지만 한 번에 (부팅시) &lt;code&gt;production&lt;/code&gt; 및 &lt;code&gt;test&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d8aee8a3ad4e070399ef545c7bb018dcc62389ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;to_time&lt;/code&gt; receives an optional argument &lt;code&gt;:utc&lt;/code&gt; or &lt;code&gt;:local&lt;/code&gt;, to indicate which time zone you want the time in:</source>
          <target state="translated">&lt;code&gt;to_time&lt;/code&gt; 은 시간을 원하는 시간대를 표시하기 위해 선택적 인수 &lt;code&gt;:utc&lt;/code&gt; 또는 &lt;code&gt;:local&lt;/code&gt; 을 받습니다 .</target>
        </trans-unit>
        <trans-unit id="ee5e34eeae6efd734a03f2187bfe1140dca57ea3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;token&lt;/code&gt;: A randomly-generated, 50-character string</source>
          <target state="translated">&lt;code&gt;token&lt;/code&gt; : 임의로 생성 된 50 자 문자열</target>
        </trans-unit>
        <trans-unit id="157f54b03d986e591190d892e9c7af92482d9932" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; is added when cached queries used</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 캐시 된 쿼리를 사용할 때 true 가 추가됨</target>
        </trans-unit>
        <trans-unit id="3f8e1dfe6461dcd453b9456f297c081e52c35808" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;true&lt;/code&gt; is not blank:</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 는 공백이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="2c2c807b732750f5a01790d8f3b9c5738359e2e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try&lt;/code&gt; calls can be chained:</source>
          <target state="translated">&lt;code&gt;try&lt;/code&gt; 통화를 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae6b87af035d9a272f2f0b5f121c24b76e268f28" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try&lt;/code&gt; can also be called without arguments but a block, which will only be executed if the object is not nil:</source>
          <target state="translated">&lt;code&gt;try&lt;/code&gt; 는 인수없이 호출 할 수 있으며 블록은 객체가 nil이 아닌 경우에만 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="d65c153e8ffc38c6fe21ae34bcf2910f5fed2624" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try&lt;/code&gt; returns &lt;code&gt;nil&lt;/code&gt; when called on &lt;code&gt;nil&lt;/code&gt; regardless of whether it responds to the method:</source>
          <target state="translated">&lt;code&gt;try&lt;/code&gt; 는 메소드에 응답하는지 여부에 관계없이 &lt;code&gt;nil&lt;/code&gt; 에서 호출되면 &lt;code&gt;nil&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="1acb659d310a32e0e483d9c2b598ea6e35d4a18a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;try&lt;/code&gt; will also return &lt;code&gt;nil&lt;/code&gt; if the receiver does not respond to the method:</source>
          <target state="translated">&lt;code&gt;try&lt;/code&gt; 수신자가 메소드에 응답하지 않으면 try 는 &lt;code&gt;nil&lt;/code&gt; 을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="dac3fc1b55690630173749fdccd6dceb0497bce6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;type&lt;/code&gt; - Specifies that the model uses &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Base.html#class-ActiveRecord::Base-label-Single+table+inheritance&quot;&gt;Single Table Inheritance&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; 모델을 사용하도록 지정합니다 -을 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveRecord/Base.html#class-ActiveRecord::Base-label-Single+table+inheritance&quot;&gt;단일 테이블 상속&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f02bdfc0fd6c6762620af5fa8fbf31f4ee6d33f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;underscore&lt;/code&gt; accepts no argument though.</source>
          <target state="translated">&lt;code&gt;underscore&lt;/code&gt; 은 인수를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0ec73716f6a196bb4109b3cc7d2ce5f93e556d1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;underscore&lt;/code&gt; will also change '::' to '/' to convert namespaces to paths.</source>
          <target state="translated">&lt;code&gt;underscore&lt;/code&gt; 도 네임 스페이스를 경로로 변환하기 위해 '::'를 '/'로 변경합니다.</target>
        </trans-unit>
        <trans-unit id="cab0aaf8aad8c396856da44e0407377b0e7894b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;unscoped&lt;/code&gt; can also accept a block.</source>
          <target state="translated">&lt;code&gt;unscoped&lt;/code&gt; 는 블록을 허용 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="af6c48e85376ffea1a81be9ee1f2cd9fdab4a169" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;updated?&lt;/code&gt; which returns a boolean if there were updates in the filesystem or not.</source>
          <target state="translated">&lt;code&gt;updated?&lt;/code&gt; 파일 시스템에 업데이트가 있는지 여부를 부울 값으로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a3e204242150c3fdb40d0b2030c812a3042faabb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;updated_at&lt;/code&gt; - Automatically gets set to the current date and time whenever the record is created or updated.</source>
          <target state="translated">&lt;code&gt;updated_at&lt;/code&gt; - 레코드를 만들거나 업데이트 할 때마다 현재 날짜와 시간으로 자동 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="31572f64d58549ef214ff7712fae523e9a13820b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;updated_at&lt;/code&gt;/&lt;code&gt;updated_on&lt;/code&gt; are not updated.</source>
          <target state="translated">&lt;code&gt;updated_at&lt;/code&gt; / &lt;code&gt;updated_on&lt;/code&gt; 은 업데이트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b1d6850966045bb2cefba497fd016a54828781cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;updates&lt;/code&gt; - A string, array, or hash representing the SET part of an SQL statement.</source>
          <target state="translated">&lt;code&gt;updates&lt;/code&gt; -SQL 문의 SET 부분을 나타내는 문자열, 배열 또는 해시.</target>
        </trans-unit>
        <trans-unit id="61490278859632c631acc91eb2107162aeba7a07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url_for&lt;/code&gt; generates a full URL by default in templates.</source>
          <target state="translated">&lt;code&gt;url_for&lt;/code&gt; 는 기본적으로 템플릿에서 전체 URL을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7f24c7524a7303c5fa2f5ae30c98860b72dbaef1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;url_for&lt;/code&gt;, so you can use it with a record as the argument, e.g. &lt;code&gt;url_for(@article)&lt;/code&gt;;</source>
          <target state="translated">&lt;code&gt;url_for&lt;/code&gt; 이므로 인수로 레코드와 함께 사용할 수 있습니다. 예 : &lt;code&gt;url_for(@article)&lt;/code&gt; ;</target>
        </trans-unit>
        <trans-unit id="239fc776140f0fea72f8c30ac570951bc169e53b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;user_provided_default&lt;/code&gt; Whether the default value should be cast using &lt;code&gt;cast&lt;/code&gt; or &lt;code&gt;deserialize&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;user_provided_default&lt;/code&gt; &lt;code&gt;cast&lt;/code&gt; 또는 &lt;code&gt;deserialize&lt;/code&gt; 를 사용하여 기본값을 캐스트 해야하는지 여부 .</target>
        </trans-unit>
        <trans-unit id="3e56d0bebcb44d372f5ed88dd0bd37869627a21e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;valid?&lt;/code&gt; and &lt;code&gt;invalid?&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;valid?&lt;/code&gt; 및 &lt;code&gt;invalid?&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f10eafc5ae059b1f33d1bdca73ee99dfc4fbc89e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; The raw input, as provided from the database.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 데이터베이스에서 제공 한 원시 입력.</target>
        </trans-unit>
        <trans-unit id="fd11868989a6834c89fd71462e8fd6eecea450cb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;value&lt;/code&gt; The raw input, as provided to the attribute setter.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 속성 설정기에 제공된 원시 입력.</target>
        </trans-unit>
        <trans-unit id="4455d11abff01dbcc2f4664adca0ff847986b2e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;vendor/assets&lt;/code&gt; is for assets that are owned by outside entities, such as code for JavaScript plugins and CSS frameworks. Keep in mind that third party code with references to other files also processed by the asset Pipeline (images, stylesheets, etc.), will need to be rewritten to use helpers like &lt;code&gt;asset_path&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;vendor/assets&lt;/code&gt; 은 JavaScript 플러그인 및 CSS 프레임 워크와 같은 외부 엔티티가 소유 한 자산을위한 것입니다. 자산 파이프 라인 (이미지, 스타일 시트 등)으로 처리 된 다른 파일을 참조하는 타사 코드는 &lt;code&gt;asset_path&lt;/code&gt; 와 같은 도우미를 사용하도록 다시 작성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c245c0f5e7419eb09d40a9eef3bea892842cd62a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;verifier_name&lt;/code&gt; - the name of the message verifier.</source>
          <target state="translated">&lt;code&gt;verifier_name&lt;/code&gt; - 메시지 검증 자의 이름.</target>
        </trans-unit>
        <trans-unit id="fc05096bdde96b208e42ebd6ae7c6e7b425ffe2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;with_options&lt;/code&gt; can also be nested since the call is forwarded to its receiver.</source>
          <target state="translated">&lt;code&gt;with_options&lt;/code&gt; 호출이 수신자에게 전달되므로 with_options 도 중첩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3b745c1ee8f07e9571702055690ad3fcbb683be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xhr&lt;/code&gt;: Set to `true` if you want to make and Ajax request. Adds request headers characteristic of XMLHttpRequest e.g. HTTP_X_REQUESTED_WITH. The headers will be merged into the Rack env hash.</source>
          <target state="translated">&lt;code&gt;xhr&lt;/code&gt; : Ajax 요청을하고 싶다면`true`로 설정하십시오. XMLHttpRequest의 특성 인 요청 헤더 (예 : HTTP_X_REQUESTED_WITH)를 추가합니다. 헤더가 Rack env 해시에 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="356b355e8355480c6cb3c474e02063190f3b6115" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;xhr&lt;/code&gt;: whether the request is Ajax request or not. Can be set to true for marking the request as Ajax.</source>
          <target state="translated">&lt;code&gt;xhr&lt;/code&gt; : 요청이 Ajax 요청인지 여부 요청을 Ajax로 표시하기 위해 true로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2290d77f071cce8f7e7d34620691cb198da5c53d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;years_since&lt;/code&gt; moves forward in time:</source>
          <target state="translated">&lt;code&gt;years_since&lt;/code&gt; 는 시간이 지남에 따라 이동합니다</target>
        </trans-unit>
        <trans-unit id="5bb21ffa2e505b7cce562716969cb428d52a4c1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;yield&lt;/code&gt; and &lt;code&gt;content_for&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;yield&lt;/code&gt; 및 &lt;code&gt;content_for&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ec29328d16a6e49c5191ac08aa97649f984c69f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;zeitwerk&lt;/code&gt; mode is not available in versions of Rails previous to 6.0.</source>
          <target state="translated">&lt;code&gt;zeitwerk&lt;/code&gt; 모드는 6.0 이전의 Rails 버전에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="19e4c3f49fedb32fc1fe9f43ba522951c7f63ac5" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A CAPTCHA is a challenge-response test to determine that the response is not generated by a computer. It is often used to protect registration forms from attackers and comment forms from automatic spam bots by asking the user to type the letters of a distorted image. This is the positive CAPTCHA, but there is also the negative CAPTCHA. The idea of a negative CAPTCHA is not for a user to prove that they are human, but reveal that a robot is a robot.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;보안 문자는 컴퓨터에서 응답을 생성하지 않았는지 확인하기위한 시도-응답 테스트입니다. 사용자에게 왜곡 된 이미지의 문자를 입력하도록 요청하여 공격자로부터 등록 양식을 보호하고 자동 스팸 봇으로부터 주석 양식을 주석 처리하는 데 종종 사용됩니다. 이것은 긍정적 인 보안 문자이지만 부정적인 보안 문자도 있습니다. 부정적인 보안 문자의 아이디어는 사용자가 자신이 사람임을 증명하는 것이 아니라 로봇이 로봇임을 나타냅니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c156dc995f8a2ce6c7640b4b8ddc346db6edfc2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;A common pitfall in Ruby's regular expressions is to match the string's beginning and end by ^ and $, instead of \A and \z.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;루비 정규 표현식의 일반적인 함정은 문자열의 시작과 끝을 \ A와 \ z 대신 ^와 $로 일치시키는 것입니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="26b3065389386cb936821b7d2a746535ec02ba64" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Almost every web application has to deal with authorization and authentication. Instead of rolling your own, it is advisable to use common plug-ins. But keep them up-to-date, too. A few additional precautions can make your application even more secure.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;거의 모든 웹 응용 프로그램은 인증 및 인증을 처리해야합니다. 직접 롤링하는 대신 공통 플러그인을 사용하는 것이 좋습니다. 그러나 최신 정보도 유지하십시오. 몇 가지 추가 예방 조치로 응용 프로그램을 더욱 안전하게 만들 수 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="637fee7b062543ccaebfff113414bbf4543f6e4d" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Another sort of attack you have to be aware of when using &lt;code&gt;CookieStore&lt;/code&gt; is the replay attack.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;CookieStore&lt;/code&gt; 를 사용할 때 알아야 할 또 다른 공격 은 재생 공격입니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="36497c903c2748eb28ad3f05582331a35d6f0280" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Apart from stealing a user's session ID, the attacker may fix a session ID known to them. This is called session fixation.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;공격자는 사용자의 세션 ID를 도용하는 것 외에도 알려진 세션 ID를 수정할 수 있습니다. 이것을 세션 고정이라고합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5dbd97266dc2d852e6ff81961dff7b5aa39c5520" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Brute-force attacks on accounts are trial and error attacks on the login credentials. Fend them off with more generic error messages and possibly require to enter a CAPTCHA.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;계정에 대한 무차별 공격은 로그인 자격 증명에 대한 시행 착오 공격입니다. 보다 일반적인 오류 메시지로 보호하고 보안 문자를 입력해야 할 수도 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="97b5684e37be5dcea1a3d0bcdb65b49cbe4664e8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;CSS Injection is actually JavaScript injection, because some browsers (IE, some versions of Safari, and others) allow JavaScript in CSS. Think twice about allowing custom CSS in your web application.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;일부 브라우저 (IE, 일부 Safari 버전 등)는 CSS에서 JavaScript를 허용하기 때문에 CSS 주입은 실제로 JavaScript 주입입니다. 웹 애플리케이션에서 사용자 정의 CSS를 허용하는 것에 대해 두 번 생각하십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="387d87984637ed2bd5df9a1511348dcac3d30b1c" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Changing a single parameter may give the user unauthorized access. Remember that every parameter may be changed, no matter how much you hide or obfuscate it.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;단일 매개 변수를 변경하면 사용자에게 무단 액세스가 제공 될 수 있습니다. 아무리 숨기거나 난독 화하든 모든 매개 변수가 변경 될 수 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7c47729720901a3ccfb5f951785c1b5a10abe59a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Connections&lt;/em&gt; form the foundation of the client-server relationship. For every WebSocket accepted by the server, a connection object is instantiated. This object becomes the parent of all the &lt;em&gt;channel subscriptions&lt;/em&gt; that are created from there on. The connection itself does not deal with any specific application logic beyond authentication and authorization. The client of a WebSocket connection is called the connection &lt;em&gt;consumer&lt;/em&gt;. An individual user will create one consumer-connection pair per browser tab, window, or device they have open.</source>
          <target state="translated">&lt;em&gt;연결&lt;/em&gt; 은 클라이언트-서버 관계의 기초를 형성합니다. 서버가 승인 한 모든 WebSocket에 대해 연결 객체가 인스턴스화됩니다. 이 객체는 거기에서 생성 된 모든 &lt;em&gt;채널 구독&lt;/em&gt; 의 부모 가됩니다. 연결 자체는 인증 및 권한 부여 이외의 특정 응용 프로그램 논리를 처리하지 않습니다. WebSocket 연결의 클라이언트를 연결 &lt;em&gt;소비자&lt;/em&gt; 라고합니다 . 개별 사용자는 브라우저 탭, 창 또는 열려있는 장치마다 하나의 소비자 연결 쌍을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="02c48b67fa07efde404646e639ed661c4c6472cd" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;First, as is required by the W3C, use GET and POST appropriately. Secondly, a security token in non-GET requests will protect your application from CSRF.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;먼저 W3C에 필요한대로 GET 및 POST를 적절하게 사용하십시오. 둘째, 비 GET 요청의 보안 토큰은 응용 프로그램을 CSRF로부터 보호합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4b2a4b49b2a333ecd86003b8d1df8757193980f1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Fixtures&lt;/em&gt; is a fancy word for sample data. Fixtures allow you to populate your testing database with predefined data before your tests run. Fixtures are database independent and written in YAML. There is one file per model.</source>
          <target state="translated">&lt;em&gt;Fixtures&lt;/em&gt; 는 샘플 데이터를위한 멋진 단어입니다. 고정 장치를 사용하면 테스트를 실행하기 전에 테스트 데이터베이스를 사전 정의 된 데이터로 채울 수 있습니다. 비품은 데이터베이스 독립적이며 YAML로 작성됩니다. 모델 당 하나의 파일이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1dbe7f4757d3f6ca4a88d6d85de250ada91a0c21" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;HTTP headers are dynamically generated and under certain circumstances user input may be injected. This can lead to false redirection, XSS, or HTTP response splitting.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;HTTP 헤더가 동적으로 생성되며 특정 상황에서 사용자 입력이 주입 될 수 있습니다. 이로 인해 잘못된 리디렉션, XSS 또는 HTTP 응답 분할이 발생할 수 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="123d4b1ff34e6c916c4a2a18e104778142ac7558" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If you need to use a different controller namespace inside a &lt;code&gt;namespace&lt;/code&gt; block you can specify an absolute controller path, e.g: &lt;code&gt;get '/foo', to: '/foo#index'&lt;/code&gt;.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt; &lt;code&gt;namespace&lt;/code&gt; 블록 내에서 다른 컨트롤러 네임 스페이스를 사용해야하는 경우 절대 컨트롤러 경로를 지정할 수 있습니다 (예 : &lt;code&gt;get '/foo', to: '/foo#index'&lt;/code&gt; .&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5f964c33d6bea2a6c50f64d52b36b90728ea91c8" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;If your Apache DocumentRoot points to Rails' /public directory, do not put file uploads in it&lt;/em&gt;, store files at least one level upwards.</source>
          <target state="translated">&lt;em&gt;Apache DocumentRoot가 Rails의 / public 디렉토리를 가리키는 경우, 파일 업로드를 넣지 말고&lt;/em&gt; 파일을 최소한 한 레벨 이상 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="4b7bcbfb3d64e8d5fe01e486984d4571e617acd2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;In order to understand today's attacks on web applications, it's best to take a look at some real-world attack vectors.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;웹 애플리케이션에 대한 오늘날의 공격을 이해하려면 실제 공격 벡터를 살펴 보는 것이 가장 좋습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="77d441b44978d2ae1d4d70f28ad74b73badc5917" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Injection is a class of attacks that introduce malicious code or parameters into a web application in order to run it within its security context. Prominent examples of injection are cross-site scripting (XSS) and SQL injection.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;주입은 보안 컨텍스트 내에서 악성 코드 나 매개 변수를 실행하여 웹 응용 프로그램에 실행시키는 공격 클래스입니다. 주입의 주요 예는 XSS (Cross-Site Scripting) 및 SQL 주입입니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a43f545d4ea29f89ac6914f3c6e842e6f22c29f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;It is very important to filter malicious input, but it is also important to escape the output of the web application&lt;/em&gt;.</source>
          <target state="translated">&lt;em&gt;악의적 인 입력을 필터링하는 것이 매우 중요하지만 웹 응용 프로그램의 출력을 피하는 것도 중요합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="cc99fed200aa42d2d1b6986f73617aad45fc1fd1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Make sure file uploads don't overwrite important files, and process media files asynchronously.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;파일 업로드가 중요한 파일을 덮어 쓰지 않도록하고 미디어 파일을 비동기 적으로 처리하십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e8bdcc0854aabf1d1ace7133679d7eb8aa043f3e" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Make sure users cannot download arbitrary files.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;사용자가 임의의 파일을 다운로드 할 수 없는지 확인하십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a5095d8b1c3ee54c14e21acabb8de0038065cab2" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;One line of code will protect you from session fixation.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;한 줄의 코드는 세션 수정으로부터 사용자를 보호합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cd00dd3901c0281ee5473c737aefe9d58af76834" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;POST requests can be sent automatically, too&lt;/em&gt;. In this example, the link &lt;a href=&quot;http://www.harmless.com&quot;&gt;www.harmless.com&lt;/a&gt; is shown as the destination in the browser's status bar. But it has actually dynamically created a new form that sends a POST request.</source>
          <target state="translated">&lt;em&gt;POST 요청도 자동으로 보낼 수 있습니다&lt;/em&gt; . 이 예에서 링크 &lt;a href=&quot;http://www.harmless.com&quot;&gt;www.harmless.com&lt;/a&gt; 은 브라우저의 상태 표시 줄에 대상으로 표시됩니다. 그러나 실제로 POST 요청을 보내는 새 양식을 동적으로 만들었습니다.</target>
        </trans-unit>
        <trans-unit id="cfa8898786804803003fc424ec561be219dcec31" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Put the admin interface to a special subdomain&lt;/em&gt; such as admin.application.com and make it a separate application with its own user management. This makes stealing an admin cookie from the usual domain, &lt;a href=&quot;http://www.application.com&quot;&gt;www.application.com&lt;/a&gt;, impossible. This is because of the same origin policy in your browser: An injected (XSS) script on &lt;a href=&quot;http://www.application.com&quot;&gt;www.application.com&lt;/a&gt; may not read the cookie for admin.application.com and vice-versa.</source>
          <target state="translated">&lt;em&gt;관리 인터페이스를&lt;/em&gt; admin.application.com과 같은 &lt;em&gt;특수 하위 도메인에&lt;/em&gt; 배치하고 자체 사용자 관리 기능이있는 별도의 응용 프로그램으로 만듭니다. 이로 인해 일반적인 도메인 ( &lt;a href=&quot;http://www.application.com&quot;&gt;www.application.com)&lt;/a&gt; 에서 관리자 쿠키를 도용 할 수 없습니다. 이는 브라우저의 출처 정책이 동일하기 때문입니다. &lt;a href=&quot;http://www.application.com&quot;&gt;www.application.com&lt;/a&gt; 에 삽입 된 (XSS) 스크립트 가 admin.application.com의 쿠키를 읽지 못할 수 있으며 그 반대도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="a682909f09d0552e2acae22bd6ec85698e937300" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Redirection in a web application is an underestimated cracker tool: Not only can the attacker forward the user to a trap web site, they may also create a self-contained attack.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;웹 응용 프로그램에서의 리디렉션은 과소 평가 된 크래커 도구입니다. 공격자는 사용자를 트랩 웹 사이트로 전달할 수있을뿐만 아니라 자체 포함 된 공격을 생성 할 수도 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="27b1fc470013707e1ac22b61c1ef3e74259cfc1a" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Resources should never be nested more than 1 level deep.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;자원은 1 레벨 이상 중첩되어서는 안됩니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="137ef8a908b4959239fc900c8a33a1e3af216691" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Sessions that never expire extend the time-frame for attacks such as cross-site request forgery (CSRF), session hijacking, and session fixation.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;만료되지 않는 세션은 CSRF (Cross-Site Request Forgery), 세션 하이재킹 및 세션 수정과 같은 공격의 기간을 연장합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c2e57cc071ed53b2c73829cd99a336f780bed792" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Source code in uploaded files may be executed when placed in specific directories. Do not place file uploads in Rails' /public directory if it is Apache's home directory.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;업로드 된 파일의 소스 코드는 특정 디렉토리에있을 때 실행될 수 있습니다. 파일이 Apache의 홈 디렉토리 인 경우 Rails의 / public 디렉토리에 파일 업로드를 배치하지 마십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="116b1d9d2a4ba65848298c529a9fee25b323cea1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Stealing a user's session ID lets an attacker use the web application in the victim's name.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;사용자의 세션 ID를 도용하면 공격자가 피해자의 이름으로 웹 응용 프로그램을 사용할 수 있습니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="eef481c564a8104d60c0dc206596119a2426508b" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Streams&lt;/em&gt; provide the mechanism by which channels route published content (broadcasts) to their subscribers.</source>
          <target state="translated">&lt;em&gt;스트림&lt;/em&gt; 은 채널이 게시 된 콘텐츠 (브로드 캐스트)를 구독자에게 라우팅하는 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6ec86d79172da1879a7ded7faf5056b123c14100" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Tell Rails not to put passwords in the log files.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Rails에 로그 파일에 비밀번호를 입력하지 않도록 지시하십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="badb214b896ea278378b0e8cabe1059432a40c77" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Thanks to clever methods, this is hardly a problem in most Rails applications. However, this is a very devastating and common attack in web applications, so it is important to understand the problem.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;영리한 방법으로 인해 대부분의 Rails 애플리케이션에서 문제가되지 않습니다. 그러나 이것은 웹 응용 프로그램에서 매우 치명적이고 일반적인 공격이므로 문제를 이해하는 것이 중요합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1b90dd0dc53e999316eb3fc57317411aa4118f22" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The most widespread, and one of the most devastating security vulnerabilities in web applications is XSS. This malicious attack injects client-side executable code. Rails provides helper methods to fend these attacks off.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;웹 애플리케이션에서 가장 널리 퍼져 있고 가장 치명적인 보안 취약점 중 하나는 XSS입니다. 이 악의적 인 공격은 클라이언트 측 실행 코드를 주입합니다. Rails는 이러한 공격을 막기위한 도우미 방법을 제공합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2df08010173c08ec27a265a30c2f9865d3994005" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;The same security precautions have to be taken for Ajax actions as for &quot;normal&quot; ones. There is at least one exception, however: The output has to be escaped in the controller already, if the action doesn't render a view.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;Ajax 조치에 대해 &quot;정상&quot;조치와 동일한 보안 예방 조치를 취해야합니다. 그러나 하나 이상의 예외가 있습니다. 조치가보기를 렌더링하지 않으면 제어기에서 출력을 이미 이스케이프해야합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c2cf87a0d6da1994caf4ee0fb5f13be1dd618e54" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Use user-supplied command line parameters with caution.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;사용자가 제공 한 명령 줄 매개 변수를주의해서 사용하십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4c9f3be54ad310b8ca46c7ac304d83e4144744bf" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;When sanitizing, protecting, or verifying something, prefer permitted lists over restricted lists.&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;위생 처리, 보호 또는 확인시에는 제한된 목록보다 허용 된 목록을 선호하십시오.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9609690ffa04cd2e8c7262756cdb6bb3acfe4046" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:batch_size&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:batch_size&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="7bef332abd099019f8a3b8ad43b41cce82cab9f8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:error_on_ignore&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:error_on_ignore&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c3d6bd38a901b645d75b2e1acbafc58f7e4650ba" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:finish&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:finish&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="281e46b622586ac2d6b722ce7d6b696cf2bc03dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;:start&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;:start&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6b19b0a779919de7dbd03f5023a83c81b7236e80" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ActionDispatch::Callbacks&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;ActionDispatch::Callbacks&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eff2cb610056888d306c4000e3859dcba7703547" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ActionDispatch::ContentSecurityPolicy::Middleware&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;ActionDispatch::ContentSecurityPolicy::Middleware&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1fa12baf940fb429959e8ce70b5b7ae4855d4e3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ActionDispatch::Cookies&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;ActionDispatch::Cookies&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8f984d3f19a2407b9d4543519b0877942bade61a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ActionDispatch::DebugExceptions&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;ActionDispatch::DebugExceptions&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="487022b1ae4ceda9601163b7da3221e2d896d024" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ActionDispatch::Executor&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;ActionDispatch::Executor&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d336ddd763107168c83db31a1b642dad62fe01ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ActionDispatch::Flash&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;ActionDispatch::Flash&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="453da08f1740b2fee8b2bef6d1bac760c9991f37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ActionDispatch::Reloader&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;ActionDispatch::Reloader&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d425b0e0544559a6bef09613c45a54bb3fb2ab2e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ActionDispatch::RemoteIp&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;ActionDispatch::RemoteIp&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14de5acf2971e714fb302b503f31b8617689d531" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ActionDispatch::RequestId&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;ActionDispatch::RequestId&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="62312f2af5348a61d5630f775fea46205521986d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ActionDispatch::Session::CookieStore&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;ActionDispatch::Session::CookieStore&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a1d80c1cf4d54d0a8e44675eb220d270643e5583" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ActionDispatch::ShowExceptions&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;ActionDispatch::ShowExceptions&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9edf6b0e663c26903bd310709385ad4bf0631587" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ActionDispatch::Static&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;ActionDispatch::Static&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4e2c77de9ae80d5d6c012d41bc6089dd102d9bce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ActiveRecord::Migration::CheckPending&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;ActiveRecord::Migration::CheckPending&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="63b03066e065aa1a4db1824241ed175e8a3f45fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;ActiveSupport::Cache::Strategy::LocalCache::Middleware&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;ActiveSupport::Cache::Strategy::LocalCache::Middleware&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="512f1eee0aa0b161c2de747f13151ffb8476a49f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;Rack::ConditionalGet&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;Rack::ConditionalGet&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c1d79b812d0ebd413441fa932ad207839401dded" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;Rack::ETag&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;Rack::ETag&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="743d6a35222ef13388a876609f931e97ba55d8ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;Rack::Head&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;Rack::Head&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="62303a6e9e2c748692067ae3dae8351657732f6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;Rack::Lock&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;Rack::Lock&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46f95d5388c7f89d29fbf84b2e9f1bd325731206" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;Rack::MethodOverride&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;Rack::MethodOverride&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7891ca3301657648de29a5452927fbfe3ee0f77" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;Rack::Runtime&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;Rack::Runtime&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="fb1fa203c6b502c1aee2ce8e65ef5e2997099381" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;Rack::Sendfile&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;Rack::Sendfile&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e114fed178d5fa0a34353f7456a65e8613469556" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;Rack::TempfileReaper&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;Rack::TempfileReaper&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="20d5c142a3159e60cd8f135def3857a6ed132a53" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;Rails::Rack::Logger&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;Rails::Rack::Logger&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c7a312ed10e7cae0a9f2069c8e79e51f8d6d3bc9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;&lt;code&gt;Sprockets::Rails::QuietAssets&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;&lt;code&gt;Sprockets::Rails::QuietAssets&lt;/code&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e297314dac21e21a36cd0e82bf6154e76ada04e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@controller&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@controller&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6ea469d5685ca2c7fd823f5fb18f54c9a2b4190d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@request&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@request&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="939eb9658eaf5cae942c08d98702309b56e7d143" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;@response&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;@response&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c68e307e947fedf08dbf357deb44f854f74170c5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Access-Control-Allow-Origin:&lt;/strong&gt; Used to control which sites are allowed to bypass same origin policies and send cross-origin requests.</source>
          <target state="translated">&lt;strong&gt;Access-Control-Allow-Origin :&lt;/strong&gt; 동일한 원본 정책을 무시하고 교차 출처 요청을 보낼 수있는 사이트를 제어하는 ​​데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="52881e9d7a035f21f950e7e9cee863af950e09c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Adding&lt;/strong&gt;&lt;code&gt;Article#time_since_created&lt;/code&gt; and &lt;strong&gt;Overriding&lt;/strong&gt;&lt;code&gt;Article#summary&lt;/code&gt;:</source>
          <target state="translated">&lt;strong&gt;&lt;/strong&gt; &lt;code&gt;Article#time_since_created&lt;/code&gt; &lt;strong&gt;추가&lt;/strong&gt; 및 &lt;code&gt;Article#summary&lt;/code&gt; &lt;strong&gt;재정의&lt;/strong&gt; :</target>
        </trans-unit>
        <trans-unit id="4e006b57d3e2475a2dfdb309f6a7e139f07b8e48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Adding&lt;/strong&gt;&lt;code&gt;Article#time_since_created&lt;/code&gt;:</source>
          <target state="translated">&lt;strong&gt;Adding&lt;/strong&gt;&lt;code&gt;Article#time_since_created&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="d5931c281e7a82dc084d758b3e803758e5cd7d18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CSRF&lt;/strong&gt; Cross-Site Request Forgery (CSRF), also known as Cross-Site Reference Forgery (XSRF), is a gigantic attack method, it allows the attacker to do everything the administrator or Intranet user may do. As you have already seen above how CSRF works, here are a few examples of what attackers can do in the Intranet or admin interface.</source>
          <target state="translated">&lt;strong&gt;CSRF CSRF (&lt;/strong&gt; Cross-Site Request Forgery) (XSRF (Cross-Site Reference Forgery)라고도 함)는 거대한 공격 방법으로 공격자가 관리자 나 인트라넷 사용자가 할 수있는 모든 것을 수행 할 수 있습니다. 위에서 CSRF의 작동 방식을 이미 살펴본 것처럼 인트라넷 또는 관리자 인터페이스에서 공격자가 수행 할 수있는 몇 가지 예가 있습니다.</target>
        </trans-unit>
        <trans-unit id="03ea3064e968354d7d6c9e8ee37081ba95641ae9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Client Error&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;클라이언트 오류&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="58f93a758411cef6b77ed9b541cdcb49fcdb806c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Client&lt;/strong&gt; connects to the &lt;strong&gt;Server&lt;/strong&gt; via &lt;code&gt;App.cable =
ActionCable.createConsumer(&quot;ws://cable.example.com&quot;)&lt;/code&gt;. (&lt;code&gt;cable.js&lt;/code&gt;). The &lt;strong&gt;Server&lt;/strong&gt; identifies this connection by &lt;code&gt;current_user&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;클라이언트&lt;/strong&gt; 는 &lt;code&gt;App.cable = ActionCable.createConsumer(&quot;ws://cable.example.com&quot;)&lt;/code&gt; 를 통해 &lt;strong&gt;서버에&lt;/strong&gt; 연결합니다 . ( &lt;code&gt;cable.js&lt;/code&gt; ). &lt;strong&gt;서버&lt;/strong&gt; 로이 연결 식별 &lt;code&gt;current_user&lt;/code&gt; .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b2fc597131374d23eb5c690bc55d745b432f6776" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Client&lt;/strong&gt; recognizes that a subscription has been established and calls &lt;code&gt;connected&lt;/code&gt; (&lt;code&gt;appearance_channel.js&lt;/code&gt;) which in turn calls &lt;code&gt;install&lt;/code&gt; and &lt;code&gt;appear&lt;/code&gt;. &lt;code&gt;appear&lt;/code&gt; calls &lt;code&gt;AppearanceChannel#appear(data)&lt;/code&gt; on the server, and supplies a data hash of &lt;code&gt;{ appearing_on: this.appearingOn }&lt;/code&gt;. This is possible because the server-side channel instance automatically exposes all public methods declared on the class (minus the callbacks), so that these can be reached as remote procedure calls via a subscription's &lt;code&gt;perform&lt;/code&gt; method.</source>
          <target state="translated">&lt;strong&gt;클라이언트&lt;/strong&gt; 는 구독이 설정되었음을 인식하고 &lt;code&gt;connected&lt;/code&gt; ( &lt;code&gt;appearance_channel.js&lt;/code&gt; )을 호출 &lt;code&gt;install&lt;/code&gt; 및 &lt;code&gt;appear&lt;/code&gt; 합니다. &lt;code&gt;appear&lt;/code&gt; 는 서버에서 &lt;code&gt;AppearanceChannel#appear(data)&lt;/code&gt; 를 호출 하고 &lt;code&gt;{ appearing_on: this.appearingOn }&lt;/code&gt; 의 데이터 해시를 제공합니다 . 이는 서버 측 채널 인스턴스가 클래스에 선언 된 모든 퍼블릭 메소드 (콜백 빼기)를 자동으로 노출하므로 구독의 &lt;code&gt;perform&lt;/code&gt; 메소드 를 통해 원격 프로 시저 호출로 도달 할 수 있기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="eef006db34248967e21ad8e3f49b7f47f124cff8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Client&lt;/strong&gt; subscribes to the appearance channel via &lt;code&gt;consumer.subscriptions.create({ channel: &quot;AppearanceChannel&quot; })&lt;/code&gt;. (&lt;code&gt;appearance_channel.js&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;클라이언트&lt;/strong&gt; 는 &lt;code&gt;consumer.subscriptions.create({ channel: &quot;AppearanceChannel&quot; })&lt;/code&gt; 통해 모양 채널에 가입합니다 . ( &lt;code&gt;appearance_channel.js&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="93c145bdf6d18d0acd06583db607c5bd434e0b52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Convention Over Configuration:&lt;/strong&gt; Rails has opinions about the best way to do many things in a web application, and defaults to this set of conventions, rather than require that you specify minutiae through endless configuration files.</source>
          <target state="translated">&lt;strong&gt;컨벤션 오버 컨벤션 :&lt;/strong&gt; Rails는 웹 애플리케이션에서 많은 작업을 수행하는 가장 좋은 방법에 대한 의견을 가지고 있으며 끝없는 컨피그레이션 파일을 통해 세부 사항을 지정하지 않고이 컨벤션 세트를 기본값으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6907e905546b2db651e3d1eff5a7ad8026138680" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Currently included series:&lt;/strong&gt;&lt;code&gt;5.2.Z&lt;/code&gt;, &lt;code&gt;5.1.Z&lt;/code&gt;, &lt;code&gt;5.0.Z&lt;/code&gt;, &lt;code&gt;4.2.Z&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;: 현재 시리즈 포함 &lt;/strong&gt; &lt;code&gt;5.2.Z&lt;/code&gt; , &lt;code&gt;5.1.Z&lt;/code&gt; , &lt;code&gt;5.0.Z&lt;/code&gt; , &lt;code&gt;4.2.Z&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="a313b461f60b5be7dda06481c2cef32cd38114be" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Currently included series:&lt;/strong&gt;&lt;code&gt;5.2.Z&lt;/code&gt;, &lt;code&gt;5.1.Z&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;: 현재 시리즈 포함 &lt;/strong&gt; &lt;code&gt;5.2.Z&lt;/code&gt; , &lt;code&gt;5.1.Z&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="bd9d60be24fcc43704bee00d5a069c6a0a67fe33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Currently included series:&lt;/strong&gt;&lt;code&gt;5.2.Z&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;현재 시리즈를 포함 : &lt;/strong&gt; &lt;code&gt;5.2.Z&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="633cb93a34ea939a652cc7e6b0d0e7ff46331ee5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Don't Repeat Yourself:&lt;/strong&gt; DRY is a principle of software development which states that &quot;Every piece of knowledge must have a single, unambiguous, authoritative representation within a system.&quot; By not writing the same information over and over again, our code is more maintainable, more extensible, and less buggy.</source>
          <target state="translated">&lt;strong&gt;스스로를 반복하지 마십시오 :&lt;/strong&gt; DRY는 &quot;모든 지식은 시스템 내에서 하나의 명백하고 권위있는 표현을 가져야합니다&quot;라는 소프트웨어 개발 원칙입니다. 동일한 정보를 반복해서 작성하지 않기 때문에 코드는 유지 관리가 쉽고 확장 가능하며 버그가 적습니다.</target>
        </trans-unit>
        <trans-unit id="8d11c44bef0e02da9818361c4e29e49bfe784b37" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;First:&lt;/strong&gt; Specify a subset of fields to be selected from the result set.</source>
          <target state="translated">&lt;strong&gt;첫째 :&lt;/strong&gt; 결과 집합에서 선택할 필드의 하위 집합을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="75482039a7d31a802ef15e20927106a4e8925561" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Foreign keys&lt;/strong&gt; - These fields should be named following the pattern &lt;code&gt;singularized_table_name_id&lt;/code&gt; (e.g., &lt;code&gt;item_id&lt;/code&gt;, &lt;code&gt;order_id&lt;/code&gt;). These are the fields that Active Record will look for when you create associations between your models.</source>
          <target state="translated">&lt;strong&gt;외래 키&lt;/strong&gt; -이 필드는 &lt;code&gt;singularized_table_name_id&lt;/code&gt; 패턴 (예 : &lt;code&gt;item_id&lt;/code&gt; , &lt;code&gt;order_id&lt;/code&gt; )에 따라 이름을 지정해야합니다 . 모델 간 연결을 만들 때 Active Record에서 찾는 필드입니다.</target>
        </trans-unit>
        <trans-unit id="be707f64356852e12f366fea6ea4d8173e91d6f7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;HTTP Strict Transport Security (HSTS)&lt;/strong&gt;: Tells the browser to remember this site as TLS-only and automatically redirect non-TLS requests. Enabled by default. Configure &lt;code&gt;config.ssl_options&lt;/code&gt; with &lt;code&gt;hsts: false&lt;/code&gt; to disable.</source>
          <target state="translated">&lt;strong&gt;HSTS (HTTP Strict Transport Security)&lt;/strong&gt; : 브라우저에이 사이트를 TLS 전용으로 기억하고 비 TLS 요청을 자동으로 리디렉션하도록 지시합니다. 기본적으로 활성화되어 있습니다. &lt;code&gt;hsts: false&lt;/code&gt; 로 &lt;code&gt;config.ssl_options&lt;/code&gt; 를 구성 하여 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="a432db84b29bcd0c987a367ccf826ad92138f0fa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;IMPORTANT:&lt;/strong&gt; In order for inheritance to work for the callback queues, you must specify the callbacks before specifying the associations. Otherwise, you might trigger the loading of a child before the parent has registered the callbacks and they won't be inherited.</source>
          <target state="translated">&lt;strong&gt;중요 :&lt;/strong&gt; 콜백 큐에 대한 상속이 작동하려면 연관을 지정하기 전에 콜백을 지정해야합니다. 그렇지 않으면 부모가 콜백을 등록하기 전에 자식로드를 트리거 할 수 있으며 상속되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3836023cf749a8547551ff44f11ebdf5d4a290e9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Informational&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Informational&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd7d2eab8ccd776019b4613240218d24f00a7dd0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Major &lt;code&gt;X&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;메이저 &lt;code&gt;X&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="db91606c908bf87e762f1c1d437f8b2099ece871" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Minor &lt;code&gt;Y&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;마이너 &lt;code&gt;Y&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4a3968ae1fe50bc59d7ea2ea342e7b1f43abe083" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;N + 1 queries problem&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;N + 1 쿼리 문제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9238208112fd628c8642642375055f84b9de4a52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; When configuring your Postmark inbound webhook, be sure to check the box labeled *&amp;ldquo;Include raw email content in JSON payload&amp;rdquo;*. Action Mailbox needs the raw email content to work.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; Postmark 인바운드 웹 후크를 구성 할 때 * &quot;JSON 페이로드에 원시 전자 메일 내용 포함&quot;* 확인란을 선택하십시오. 작업 사서함이 작동하려면 원시 전자 메일 내용이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1e3d290a75a0beb104076bda98ef3edad27bcd27" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE:&lt;/strong&gt; When configuring your SendGrid Inbound Parse webhook, be sure to check the box labeled *&amp;ldquo;Post the raw, full MIME message.&amp;rdquo;* Action Mailbox needs the raw MIME message to work.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; SendGrid 인바운드 구문 분석 웹 후크를 구성 할 때 * &quot;원시 전체 MIME 메시지 게시&quot;라고 표시된 상자를 선택하십시오. 작업 사서함을 사용하려면 원시 MIME 메시지가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="f16a009b4ff367d506cdc2fabc2765f7150de1d2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Not all caches will reliably cache content where the filename only differs by query parameters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;모든 캐시가 파일 이름이 쿼리 매개 변수에 의해서만 다른 콘텐츠를 안정적으로 캐시하지는 않습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c10f5767e87d7e46c98403ed34d9979b34568394" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Do not call &lt;code&gt;klass.new&lt;/code&gt; or &lt;code&gt;klass.create&lt;/code&gt; to instantiate a new association object. Use &lt;code&gt;build_association&lt;/code&gt; or &lt;code&gt;create_association&lt;/code&gt; instead. This allows plugins to hook into association object creation.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 새 연결 객체를 인스턴스화하기 위해 &lt;code&gt;klass.new&lt;/code&gt; 또는 &lt;code&gt;klass.create&lt;/code&gt; 를 호출하지 마십시오 . 대신 &lt;code&gt;build_association&lt;/code&gt; 또는 &lt;code&gt;create_association&lt;/code&gt; 을 사용하십시오 . 이를 통해 플러그인이 연관 객체 생성에 연결될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b46cdec2901a33dd8d502c26f8da6b4e5003bda1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Only the &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; tags are returned, so you still have to wrap the output in an appropriate &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 만 &lt;code&gt;&amp;lt;optgroup&amp;gt;&lt;/code&gt; 와 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 당신은 여전히 적절한 출력을 포장 할 수 있도록 태그, 반환되는 &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 태그를.</target>
        </trans-unit>
        <trans-unit id="32bdf6d60c9a67960be1e13ba02e55657b6ddf9d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; The client either sends only the hidden field (representing the deselected multiple select box), or both fields. This means that the resulting array always contains a blank string.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 클라이언트는 숨겨진 필드 (선택 취소 된 다중 선택 상자를 나타냄) 만 또는 두 필드를 보냅니다. 이는 결과 배열에 항상 빈 문자열이 포함됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="489004ac938349a5be40aa8591aa4ae456542c3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: The attributes listed are class-level attributes (accessible from both the class and instance level). So it's possible to assign a logger to the class through &lt;code&gt;Base.logger=&lt;/code&gt; which will then be used by all instances in the current object space.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; : 나열된 속성은 클래스 수준 속성입니다 (클래스 및 인스턴스 수준 모두에서 액세스 가능). 따라서 &lt;code&gt;Base.logger=&lt;/code&gt; 를 통해 클래스에 로거를 할당 할 수 있습니다. 그러면 현재 객체 공간의 모든 인스턴스에서 로거 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7766696451bca7f632b72583f540965f0006eb8d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Optimistic locking column&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;낙관적 잠금 컬럼&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ca804f15da6519c3390553529cbc1b079ab2dfd3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Overriding&lt;/strong&gt;&lt;code&gt;Article#summary&lt;/code&gt;:</source>
          <target state="translated">&lt;strong&gt;Overriding&lt;/strong&gt;&lt;code&gt;Article#summary&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="2e0b7ab19010d24f9ab6a5d0de2aace0c54daee1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Patch &lt;code&gt;Z&lt;/code&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;패치 &lt;code&gt;Z&lt;/code&gt; &lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2bcee9c158ee6b534dc07d1d39b9ef334566ce23" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Primary keys&lt;/strong&gt; - By default, Active Record will use an integer column named &lt;code&gt;id&lt;/code&gt; as the table's primary key (&lt;code&gt;bigint&lt;/code&gt; for PostgreSQL and MySQL, &lt;code&gt;integer&lt;/code&gt; for SQLite). When using &lt;a href=&quot;active_record_migrations&quot;&gt;Active Record Migrations&lt;/a&gt; to create your tables, this column will be automatically created.</source>
          <target state="translated">&lt;strong&gt;기본 키&lt;/strong&gt; -기본적으로 Active Record는 &lt;code&gt;id&lt;/code&gt; 라는 정수 열을 테이블의 기본 키로 사용합니다 ( PostgreSQL 및 MySQL의 경우 &lt;code&gt;bigint&lt;/code&gt; , SQLite의 경우 &lt;code&gt;integer&lt;/code&gt; ). 사용하는 경우 &lt;a href=&quot;active_record_migrations&quot;&gt;액티브 레코드 마이그레이션을&lt;/a&gt; 테이블을 만드는 데,이 열이 자동으로 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="50e1eb8871646ba1e0aafb36383dab22a03945dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Redirection&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Redirection&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0f391ca36c7ae2be7005b5e02acc41ede6042117" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Second:&lt;/strong&gt; You can pass a block so it can be used just like Array#select. This builds an array of objects from the database for the scope, converting them into an array and iterating through them using Array#select.</source>
          <target state="translated">&lt;strong&gt;둘째 :&lt;/strong&gt; Array # select처럼 사용할 수 있도록 블록을 전달할 수 있습니다. 이것은 범위에 대한 데이터베이스에서 객체의 배열을 작성하여 배열로 변환하고 Array # select를 사용하여 반복합니다.</target>
        </trans-unit>
        <trans-unit id="453a858bb7ca4489a6716d9f26dc4d8b3387fe9b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Secure cookies&lt;/strong&gt;: Sets the &lt;code&gt;secure&lt;/code&gt; flag on cookies to tell browsers they must not be sent along with &lt;code&gt;http://&lt;/code&gt; requests. Enabled by default. Set &lt;code&gt;config.ssl_options&lt;/code&gt; with &lt;code&gt;secure_cookies: false&lt;/code&gt; to disable this feature.</source>
          <target state="translated">&lt;strong&gt;보안 쿠키&lt;/strong&gt; : &lt;strong&gt;쿠키&lt;/strong&gt; 에 &lt;code&gt;secure&lt;/code&gt; 플래그를 설정하여 브라우저에게 &lt;code&gt;http://&lt;/code&gt; 요청 과 함께 전송해서는 안된다고 알려줍니다 . 기본적으로 활성화되어 있습니다. 설정 &lt;code&gt;config.ssl_options&lt;/code&gt; 와 &lt;code&gt;secure_cookies: false&lt;/code&gt; 이 기능을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="707fdb55d93dd7ce9d54e439128b4b0a9a127da2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Server Error&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;서버 오류&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="480fdb0134fda13b8abc9f623717a245805d4383" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Server&lt;/strong&gt; receives the request for the &lt;code&gt;appear&lt;/code&gt; action on the appearance channel for the connection identified by &lt;code&gt;current_user&lt;/code&gt; (&lt;code&gt;appearance_channel.rb&lt;/code&gt;). &lt;strong&gt;Server&lt;/strong&gt; retrieves the data with the &lt;code&gt;:appearing_on&lt;/code&gt; key from the data hash and sets it as the value for the &lt;code&gt;:on&lt;/code&gt; key being passed to &lt;code&gt;current_user.appear&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;서버&lt;/strong&gt; 요청 수신 &lt;code&gt;appear&lt;/code&gt; 에 의해 식별 된 연결에 대한 외관 채널 동작 &lt;code&gt;current_user&lt;/code&gt; ( &lt;code&gt;appearance_channel.rb&lt;/code&gt; 을 ). &lt;strong&gt;서버&lt;/strong&gt; 는 데이터 해시에서 &lt;code&gt;:appearing_on&lt;/code&gt; 키를 사용하여 데이터를 검색하여 &lt;code&gt;current_user.appear&lt;/code&gt; 로 전달되는 &lt;code&gt;:on&lt;/code&gt; 키 의 값으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="8a280738f8b0e10e58ea847e457b5018c9cc2bd1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Server&lt;/strong&gt; recognizes a new subscription has been initiated for the appearance channel and runs its &lt;code&gt;subscribed&lt;/code&gt; callback, calling the &lt;code&gt;appear&lt;/code&gt; method on &lt;code&gt;current_user&lt;/code&gt;. (&lt;code&gt;appearance_channel.rb&lt;/code&gt;)</source>
          <target state="translated">&lt;strong&gt;서버&lt;/strong&gt; 는 모양새 채널에 대해 새 구독이 시작되었음을 인식하고 &lt;code&gt;subscribed&lt;/code&gt; 콜백을 실행하여 &lt;code&gt;current_user&lt;/code&gt; 에서 &lt;code&gt;appear&lt;/code&gt; 메소드를 호출합니다 . ( &lt;code&gt;appearance_channel.rb&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="35d19a0c32a6cf9419e4d2a5028de496793f5bf2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Solution to N + 1 queries problem&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;N + 1 쿼리 문제 해결&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="bd5877f298b408daec119b1fbfd8114612d99958" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Strict-Transport-Security:&lt;/strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&quot;&gt;Used to control if the browser is allowed to only access a site over a secure connection&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;엄격한 전송 보안 : &lt;/strong&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&quot;&gt;브라우저가 보안 연결을 통해서만 사이트에 액세스 할 수 있는지 여부를 제어하는 ​​데 사용됩니다 &lt;/a&gt;&lt;strong&gt;.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="14f5dfce22edfddc90fa5f50c810de0e0cead829" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Success&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Success&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cfee712bb4592d322f81cef2833810043bbee2f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;TLS redirect&lt;/strong&gt;: Permanently redirects &lt;code&gt;http://&lt;/code&gt; requests to &lt;code&gt;https://&lt;/code&gt; with the same URL host, path, etc. Enabled by default. Set &lt;code&gt;config.ssl_options&lt;/code&gt; to modify the destination URL (e.g. &lt;code&gt;redirect: { host:
&quot;secure.widgets.com&quot;, port: 8080 }&lt;/code&gt;), or set &lt;code&gt;redirect: false&lt;/code&gt; to disable this feature.</source>
          <target state="translated">&lt;strong&gt;TLS 리디렉션&lt;/strong&gt; : 동일한 URL 호스트, 경로 등을 사용하여 &lt;code&gt;http://&lt;/code&gt; 요청을 &lt;code&gt;https://&lt;/code&gt; 로 영구적으로 리디렉션 합니다. 기본적으로 활성화되어 있습니다. 설정 &lt;code&gt;config.ssl_options&lt;/code&gt; 은 (예를 들어 대상 URL을 수정합니다 &lt;code&gt;redirect: { host: &quot;secure.widgets.com&quot;, port: 8080 }&lt;/code&gt; ), 또는 세트 &lt;code&gt;redirect: false&lt;/code&gt; 이 기능을 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebd7787bd5f5f2ab2dbe3cff02748a7fec8301ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The file name can change between nodes in multi-server environments.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;파일 이름은 다중 서버 환경에서 노드간에 변경 될 수 있습니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8eda9d256f8ff3776f8e616b065269cef1610144" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The short version is&lt;/strong&gt;: you may not have thought about which parts of Rails are still applicable even if you remove the view layer, but the answer turns out to be most of it.</source>
          <target state="translated">&lt;strong&gt;짧은 버전은&lt;/strong&gt; : 뷰 레이어를 제거하더라도 Rails의 어느 부분이 여전히 적용 가능한지에 대해 생각하지 못했을 수도 있지만 대답은 대부분 그 부분으로 밝혀졌습니다.</target>
        </trans-unit>
        <trans-unit id="e3190503e0206c9ee184804211f3f04eea8cec34" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Tip:&lt;/strong&gt; If you need to generate URLs from your models or some other place, then &lt;a href=&quot;../../actioncontroller/urlfor&quot;&gt;ActionController::UrlFor&lt;/a&gt; is what you're looking for. Read on for an introduction. In general, this module should not be included on its own, as it is usually included by url_helpers (as in &lt;a href=&quot;../../rails#method-c-application&quot;&gt;Rails.application&lt;/a&gt;.routes.url_helpers).</source>
          <target state="translated">&lt;strong&gt;팁 :&lt;/strong&gt; 모델이나 다른 장소에서 URL을 생성해야하는 경우 &lt;a href=&quot;../../actioncontroller/urlfor&quot;&gt;ActionController :: UrlFor&lt;/a&gt; 가 원하는 것입니다. 소개를 읽으십시오. 일반적으로이 모듈은 일반적으로 url_helpers에 의해 포함되므로 ( &lt;a href=&quot;../../rails#method-c-application&quot;&gt;Rails.application&lt;/a&gt; .routes.url_helpers 에서 와 같이) 자체적으로 포함되어서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="c0902c8a4b535686220719a0fe867bf86ce50fab" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Too much cache invalidation&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;캐시 무효화가 너무 많습니다&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8423568c2fe91b69f64eec4ce3e2a0b8b625dd93" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use GET if:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;다음과 같은 경우 GET을 사용하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="1b3a6f78842a52bd763659cc3119627c1fdc98fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Use POST if:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;다음과 같은 경우 POST를 사용하십시오.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4938fcb465ce806ecb8742965bffd30ba0f64bc3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Warning&lt;/strong&gt;: one should not catch &lt;a href=&quot;../statementinvalid&quot;&gt;ActiveRecord::StatementInvalid&lt;/a&gt; exceptions inside a transaction block. &lt;a href=&quot;../statementinvalid&quot;&gt;ActiveRecord::StatementInvalid&lt;/a&gt; exceptions indicate that an error occurred at the database level, for example when a unique constraint is violated. On some database systems, such as PostgreSQL, database errors inside a transaction cause the entire transaction to become unusable until it's restarted from the beginning. Here is an example which demonstrates the problem:</source>
          <target state="translated">&lt;strong&gt;경고&lt;/strong&gt; : 트랜잭션 블록 내에서 &lt;a href=&quot;../statementinvalid&quot;&gt;ActiveRecord :: StatementInvalid&lt;/a&gt; 예외를 포착해서는 안됩니다 . &lt;a href=&quot;../statementinvalid&quot;&gt;ActiveRecord :: StatementInvalid&lt;/a&gt; 예외는 데이터베이스 수준에서 (예 : 고유 제약 조건을 위반할 때) 오류가 발생했음을 나타냅니다. PostgreSQL과 같은 일부 데이터베이스 시스템에서 트랜잭션 내부의 데이터베이스 오류로 인해 처음부터 다시 시작할 때까지 전체 트랜잭션을 사용할 수 없게됩니다. 다음은 문제를 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="11f4ff0ff68cb67f43b0d87b97fd29e77634c272" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;X-Content-Security-Policy:&lt;/strong&gt;&lt;a href=&quot;http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html&quot;&gt;A powerful mechanism for controlling which sites certain content types can be loaded from&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;X- 콘텐츠 보안 정책 : &lt;/strong&gt;&lt;a href=&quot;http://w3c.github.io/webappsec/specs/content-security-policy/csp-specification.dev.html&quot;&gt;특정 콘텐츠 유형을로드 할 수있는 사이트를 제어하는 ​​강력한 메커니즘&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="42a7f1c51184d6edc50f232b07492b11c52e6d6d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;X-Content-Type-Options:&lt;/strong&gt;&lt;em&gt;'nosniff' in Rails by default&lt;/em&gt; - stops the browser from guessing the MIME type of a file.</source>
          <target state="translated">&lt;strong&gt;X-Content-Type-Options : &lt;/strong&gt;&lt;em&gt;Rails의 'nosniff'는 기본적으로&lt;/em&gt; 브라우저가 파일의 MIME 유형을 추측하지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="805ea1d2cd411d05d82a441ce8ec819a2261c47f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;X-Frame-Options:&lt;/strong&gt;&lt;em&gt;'SAMEORIGIN' in Rails by default&lt;/em&gt; - allow framing on same domain. Set it to 'DENY' to deny framing at all or 'ALLOWALL' if you want to allow framing for all website.</source>
          <target state="translated">&lt;strong&gt;X- 프레임 옵션 : &lt;/strong&gt;&lt;em&gt;기본적으로 Rails의 'SAMEORIGIN'-&lt;/em&gt; 동일한 도메인에서 프레임을 허용합니다. 모든 웹 사이트에 대해 프레이밍을 허용하려면 프레이밍을 전혀 거부하거나 'ALLOWALL'을 설정하려면 'DENY'로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="ff1402f70f1916bd975e9b9bfadb219c424f8acf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;X-XSS-Protection:&lt;/strong&gt;&lt;em&gt;'1; mode=block' in Rails by default&lt;/em&gt; - use XSS Auditor and block page if XSS attack is detected. Set it to '0;' if you want to switch XSS Auditor off(useful if response contents scripts from request parameters)</source>
          <target state="translated">&lt;strong&gt;X-XSS- 보호 : &lt;/strong&gt;&lt;em&gt;'1; Rails의 mode = block '&lt;/em&gt; - &lt;em&gt;기본적으로&lt;/em&gt; XSS Auditor를 사용하고 XSS 공격이 감지되면 페이지를 차단하십시오. '0;'으로 설정하십시오. XSS Auditor를 끄려면 (응답 내용 스크립트가 요청 매개 변수에서 유용한 경우)</target>
        </trans-unit>
        <trans-unit id="3aecc0197f28fd58f754dc2860d8cba7ad1c3589" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XSS&lt;/strong&gt; If your application re-displays malicious user input from the extranet, the application will be vulnerable to XSS. User names, comments, spam reports, order addresses are just a few uncommon examples, where there can be XSS.</source>
          <target state="translated">&lt;strong&gt;XSS&lt;/strong&gt; 응용 프로그램이 엑스트라 넷에서 악의적 인 사용자 입력을 다시 표시하면 해당 응용 프로그램은 XSS에 취약합니다. 사용자 이름, 설명, 스팸 보고서, 주문 주소는 XSS가있을 수있는 드문 예입니다.</target>
        </trans-unit>
        <trans-unit id="5ce7cc9998c5c7fc26a9843c2e17734f055e2ec0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;app/controllers/articles_controller.rb&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;app/controllers/articles_controller.rb&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2e822692e6377a3d12c8f703fdb57dff25960260" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;app/views/articles/index.atom.builder&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;app/views/articles/index.atom.builder&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="df38aa54576a5a0670a8dc0098103611cccc153a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;app/views/articles/special.html.erb&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;app/views/articles/special.html.erb&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4dde401677b72411d2e6a0009faceaeca30861e1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;app/views/layouts/application.html.erb&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;app/views/layouts/application.html.erb&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="888b5f6ea43f700e1237795fa33963f959162d82" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;articles/_box.html.erb&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;articles/_box.html.erb&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="233a28ad70807bd2ad16ef08eb119e1efa2b0c99" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;articles/show.html.erb&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;articles/show.html.erb&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d402ffd4c42dabf3a81f840358dfc9742562760c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;config/routes.rb&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;config/routes.rb&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b76c8d5d15459617c10cc830e6f455332c82b9bc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;connection&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;connection&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9ddef1955ffc757f44ab4b57d9fef14a1705bd67" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;fractionals&lt;/strong&gt;: &lt;code&gt;:deci&lt;/code&gt;, &lt;code&gt;:centi&lt;/code&gt;, &lt;code&gt;:mili&lt;/code&gt;, &lt;code&gt;:micro&lt;/code&gt;, &lt;code&gt;:nano&lt;/code&gt;, &lt;code&gt;:pico&lt;/code&gt;, &lt;code&gt;:femto&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;소수&lt;/strong&gt; : &lt;code&gt;:deci&lt;/code&gt; , &lt;code&gt;:centi&lt;/code&gt; , &lt;code&gt;:mili&lt;/code&gt; , &lt;code&gt;:micro&lt;/code&gt; , &lt;code&gt;:nano&lt;/code&gt; , &lt;code&gt;:pico&lt;/code&gt; , &lt;code&gt;:femto&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cef0672325a3a95f499cf6fa7d4715e0df718400" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;integers&lt;/strong&gt;: &lt;code&gt;:unit&lt;/code&gt;, &lt;code&gt;:ten&lt;/code&gt;, &lt;code&gt;:hundred&lt;/code&gt;, &lt;code&gt;:thousand&lt;/code&gt;, &lt;code&gt;:million&lt;/code&gt;, &lt;code&gt;:billion&lt;/code&gt;, &lt;code&gt;:trillion&lt;/code&gt;, &lt;code&gt;:quadrillion&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;정수&lt;/strong&gt; : &lt;code&gt;:unit&lt;/code&gt; , &lt;code&gt;:ten&lt;/code&gt; , &lt;code&gt;:hundred&lt;/code&gt; , &lt;code&gt;:thousand&lt;/code&gt; , &lt;code&gt;:million&lt;/code&gt; , &lt;code&gt;:billion&lt;/code&gt; , &lt;code&gt;:trillion&lt;/code&gt; , &lt;code&gt;:quadrillion&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f39d40332c24fd23bbc28ba86d81bcfb2b6994a9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;subscription&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;subscription&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="97828591f36d173ed1ec7360759f7cd9bf80e0a8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;transmissions&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;transmissions&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="531eb5f8a008ebcd347087ed8376fa06ffd6d785" translate="yes" xml:space="preserve">
          <source>==(comparison_object)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">== (comparison_object) &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2ecfa6cf0f0b51062f3fc6402619709de3530b1" translate="yes" xml:space="preserve">
          <source>==(mime_type)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">== (mime_type) &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c157e3d1be8bdb5cee578e91cd8b4cea96f215f6" translate="yes" xml:space="preserve">
          <source>==(other) &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">== (기타) &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="676e2bd339d3bac2e727ecc180b27f0608a93b65" translate="yes" xml:space="preserve">
          <source>==(other)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">== (기타) &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d8f690459b803528eca25b6cb82658a95d64a22" translate="yes" xml:space="preserve">
          <source>==(other_aggregation)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">== (other_aggregation) &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b88e66689f360b8d1f944d54eb3bdd93154dc5cc" translate="yes" xml:space="preserve">
          <source>==(resolver)</source>
          <target state="translated">==(resolver)</target>
        </trans-unit>
        <trans-unit id="efb239e67524719f6f42555a816e111682b33e7e" translate="yes" xml:space="preserve">
          <source>===(list)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">=== (목록) &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c58b3aaf1b42f24782364850636c828ea6c09081" translate="yes" xml:space="preserve">
          <source>===(other) &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">=== (기타) &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3e94150231e8f37085ff9f83b15d44af8edd4428" translate="yes" xml:space="preserve">
          <source>===(other)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">=== (기타) &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e57f65c5434d0ed376f478adbe9dbed021bd7216" translate="yes" xml:space="preserve">
          <source>===(value)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">=== (값) &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a4ccba68b6a2e8e69c6f376f17263ad24de6fe0" translate="yes" xml:space="preserve">
          <source>=~(mime_type)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">= ~ (mime_type) &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dfd8bf3d72603be3a6633a234dc1427a8dbce2f2" translate="yes" xml:space="preserve">
          <source>=~(re)&lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">= ~ (re) &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f189e2104b5800f73d2c8c87bd8ae082025fd22e" translate="yes" xml:space="preserve">
          <source>=~(regexp) &lt;a&gt;Show source&lt;/a&gt;</source>
          <target state="translated">= ~ (regexp) &lt;a&gt;소스 표시&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8eed869151846dd454fd289c965b122aff73615" translate="yes" xml:space="preserve">
          <source>@return [Object]</source>
          <target state="translated">@ 반환 [개체]</target>
        </trans-unit>
        <trans-unit id="eceb3cfffd6f54d0b9fbff08d91262bc24a2431b" translate="yes" xml:space="preserve">
          <source>@return [false]</source>
          <target state="translated">@return [거짓]</target>
        </trans-unit>
        <trans-unit id="3a3e5ef401b3dd911e7948e8e59f2bf3e831cc38" translate="yes" xml:space="preserve">
          <source>@return [true, false]</source>
          <target state="translated">@return [참, 거짓]</target>
        </trans-unit>
        <trans-unit id="f664159cbc3ae6b645dc9ebb023a1e4c4ee50620" translate="yes" xml:space="preserve">
          <source>@return [true]</source>
          <target state="translated">@return [참]</target>
        </trans-unit>
        <trans-unit id="3b315fe00b0833af435d32d9fe00aa2a69e4d9cb" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;hashconfig&quot;&gt;HashConfig&lt;/a&gt; object is created for each database configuration entry that is created from a hash.</source>
          <target state="translated">&lt;a href=&quot;hashconfig&quot;&gt;HashConfig의&lt;/a&gt; 객체는 해시에서 만든 각 데이터베이스의 구성 항목에 대해 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="85406768c1616e2467dc9d03c60beb0c041677e8" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;https://www.owasp.org&quot;&gt;good security blog&lt;/a&gt; including the &lt;a href=&quot;https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet&quot;&gt;Cross-Site scripting Cheat Sheet&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.owasp.org&quot;&gt;좋은 보안 블로그&lt;/a&gt; 을 포함하여 &lt;a href=&quot;https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet&quot;&gt;크로스 사이트 스크립팅 치트 시트&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="96907b570e1b29b7cee12c69557ce3ff14933744" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;transformer&quot;&gt;Transformer&lt;/a&gt; applies a set of transformations to an image.</source>
          <target state="translated">&lt;a href=&quot;transformer&quot;&gt;변압기는&lt;/a&gt; 이미지에 변환 세트를 적용한다.</target>
        </trans-unit>
        <trans-unit id="e385ab8fe83a79df9246152466532ed963a78240" translate="yes" xml:space="preserve">
          <source>A &lt;a href=&quot;urlconfig&quot;&gt;UrlConfig&lt;/a&gt; object is created for each database configuration entry that is created from a URL. This can either be a URL string or a hash with a URL in place of the config hash.</source>
          <target state="translated">&lt;a href=&quot;urlconfig&quot;&gt;UrlConfig의&lt;/a&gt; 객체는 URL에서 생성 된 각 데이터베이스의 구성 항목에 대해 작성됩니다. URL 문자열이거나 구성 해시 대신 URL이있는 해시 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="485ee8b6bce0526afeb82ca52b7162aa9f50504f" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Firm&lt;/code&gt; class declares &lt;code&gt;has_many :clients&lt;/code&gt;, which will add:</source>
          <target state="translated">&lt;code&gt;Firm&lt;/code&gt; 클래스는 선언 &lt;code&gt;has_many :clients&lt;/code&gt; 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="1280c56d4f6f1f0ed590f6f1e99cbdb10f4f0768" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;FormBuilder&lt;/code&gt; object is associated with a particular model object and allows you to generate fields associated with the model object. The &lt;code&gt;FormBuilder&lt;/code&gt; object is yielded when using &lt;code&gt;form_for&lt;/code&gt; or &lt;code&gt;fields_for&lt;/code&gt;. For example:</source>
          <target state="translated">&lt;code&gt;FormBuilder&lt;/code&gt; 의 객체는 특정 모델 객체와 연관된하고 모델 객체와 관련된 필드를 생성 할 수있다. &lt;code&gt;FormBuilder&lt;/code&gt; 를 사용하는 경우 개체가 산출됩니다 &lt;code&gt;form_for&lt;/code&gt; 또는 &lt;code&gt;fields_for&lt;/code&gt; . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="61745ea1d21c2533261df200477525ea3c32d925" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Person&lt;/code&gt; instance with a &lt;code&gt;name&lt;/code&gt; attribute can ask &lt;code&gt;person.respond_to?(:name)&lt;/code&gt;, &lt;code&gt;person.respond_to?(:name=)&lt;/code&gt;, and &lt;code&gt;person.respond_to?(:name?)&lt;/code&gt; which will all return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Person&lt;/code&gt; A의 인스턴스의 &lt;code&gt;name&lt;/code&gt; 속성을 요청할 수 있습니다 &lt;code&gt;person.respond_to?(:name)&lt;/code&gt; , &lt;code&gt;person.respond_to?(:name=)&lt;/code&gt; , 그리고 &lt;code&gt;person.respond_to?(:name?)&lt;/code&gt; 이는 모두 반환됩니다 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c3f1e8b4d704d5fd475a4f4e0b486ec9dea45db7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Proc&lt;/code&gt;&lt;code&gt;:message&lt;/code&gt; value is given two arguments: the object being validated, and a hash with &lt;code&gt;:model&lt;/code&gt;, &lt;code&gt;:attribute&lt;/code&gt;, and &lt;code&gt;:value&lt;/code&gt; key-value pairs.</source>
          <target state="translated">&lt;code&gt;Proc&lt;/code&gt; &lt;code&gt;:message&lt;/code&gt; 객체가 검증되고 그리고 함께 해시 : 값은 두 인수 주어진다 &lt;code&gt;:model&lt;/code&gt; , &lt;code&gt;:attribute&lt;/code&gt; 및 &lt;code&gt;:value&lt;/code&gt; 키 - 값 쌍.</target>
        </trans-unit>
        <trans-unit id="6be2389e3b13094b184e92001796908bfcd83af6" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;String&lt;/code&gt;&lt;code&gt;:message&lt;/code&gt; value can optionally contain any/all of &lt;code&gt;%{value}&lt;/code&gt;, &lt;code&gt;%{attribute}&lt;/code&gt;, and &lt;code&gt;%{model}&lt;/code&gt; which will be dynamically replaced when validation fails. This replacement is done using the I18n gem, and the placeholders must match exactly, no spaces are allowed.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; &lt;code&gt;:message&lt;/code&gt; 값은 선택적으로 모든 / 모두 포함 할 수 있습니다 &lt;code&gt;%{value}&lt;/code&gt; , &lt;code&gt;%{attribute}&lt;/code&gt; , 그리고 &lt;code&gt;%{model}&lt;/code&gt; 검증이 실패했을 경우 동적으로 대체됩니다. 이 교체는 I18n gem을 사용하여 수행되며 자리 표시자는 정확히 일치해야하며 공백은 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a7efed6493fa682b0b24e7de57b24ccc381a2ce7" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Tempfile&lt;/code&gt; object with the actual uploaded file. Note that some of its interface is available directly.</source>
          <target state="translated">실제 업로드 된 파일이 있는 &lt;code&gt;Tempfile&lt;/code&gt; 객체입니다. 일부 인터페이스는 직접 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d896d2604eeb5c68bae9aa4804065676d8566297" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;belongs_to&lt;/code&gt; association sets up a one-to-one connection with another model, such that each instance of the declaring model &quot;belongs to&quot; one instance of the other model. For example, if your application includes authors and books, and each book can be assigned to exactly one author, you'd declare the book model this way:</source>
          <target state="translated">&lt;code&gt;belongs_to&lt;/code&gt; 의 다른 모델과 일대일 연결 업 연관 세트는 선언 모델의 각 인스턴스는 다른 모델의 인스턴스와 같은 &quot;에 속하는&quot;있다. 예를 들어, 응용 프로그램에 저자와 책이 포함되어 있고 각 책을 정확히 한 명의 저자에게 할당 할 수있는 경우 다음과 같이 책 모델을 선언합니다.</target>
        </trans-unit>
        <trans-unit id="d5c6e32efb92fd959ecfe1fc60daddced4b49cf5" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;config/routes.rb&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;config/routes.rb&lt;/code&gt; 파일 :</target>
        </trans-unit>
        <trans-unit id="c8f3e5fc02800e967d96ea73b95664c1daaaaf79" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association creates a direct many-to-many connection with another model, with no intervening model. For example, if your application includes assemblies and parts, with each assembly having many parts and each part appearing in many assemblies, you could declare the models this way:</source>
          <target state="translated">&lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 의 연관은 중재하는 모델과 다른 모델과 직접 대다 연결을 만듭니다. 예를 들어, 응용 프로그램에 어셈블리 및 부품이 포함되어 있고 각 어셈블리에 많은 부품이 있고 각 부품이 많은 어셈블리에 나타나는 경우 다음과 같이 모델을 선언 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d67a2930e07d2c25162cd5be83a2bad228f400d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;has_many :through&lt;/code&gt; association is often used to set up a many-to-many connection with another model. This association indicates that the declaring model can be matched with zero or more instances of another model by proceeding &lt;em&gt;through&lt;/em&gt; a third model. For example, consider a medical practice where patients make appointments to see physicians. The relevant association declarations could look like this:</source>
          <target state="translated">&lt;code&gt;has_many :through&lt;/code&gt; 협회는 종종 다른 모델과 다 대다 연결을 설정하는 데 사용됩니다. 이 관계는 선언 모델 진행하여 다른 모델의 0 개 이상의 인스턴스와 일치 할 수 있다는 것을 나타낸다 &lt;em&gt;통해&lt;/em&gt; 제 모델. 예를 들어, 환자가 의사를 만나기 위해 진료 예약을하는 의료 행위를 고려하십시오. 관련 협회 선언은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2b51a8a2bc890bd770f5f3e6bf9d29bb0671ed20" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;has_many&lt;/code&gt; association indicates a one-to-many connection with another model. You'll often find this association on the &quot;other side&quot; of a &lt;code&gt;belongs_to&lt;/code&gt; association. This association indicates that each instance of the model has zero or more instances of another model. For example, in an application containing authors and books, the author model could be declared like this:</source>
          <target state="translated">&lt;code&gt;has_many&lt;/code&gt; 의 관계는 다른 모델과 일대 다 연결을 나타냅니다. 당신은 종종이 연관을 &lt;code&gt;belongs_to&lt;/code&gt; 연관 의 &quot;다른 쪽&quot;에서 찾을 수 있습니다. 이 연관은 모델의 각 인스턴스에 다른 모델의 인스턴스가 0 개 이상 있음을 나타냅니다. 예를 들어, 저자와 책을 포함하는 응용 프로그램에서 저자 모델은 다음과 같이 선언 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bfd16b4142c26d69c40e8b9638cc9986d5a90c8" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;has_one :through&lt;/code&gt; association sets up a one-to-one connection with another model. This association indicates that the declaring model can be matched with one instance of another model by proceeding &lt;em&gt;through&lt;/em&gt; a third model. For example, if each supplier has one account, and each account is associated with one account history, then the supplier model could look like this:</source>
          <target state="translated">&lt;code&gt;has_one :through&lt;/code&gt; 연관 세트 다른 모델과 일대일 연결입니다. 이 연관은 선언 모델 이 세 번째 모델을 &lt;em&gt;통해&lt;/em&gt; 다른 모델의 한 인스턴스와 일치 될 수 있음을 나타냅니다 . 예를 들어 각 공급 업체에 하나의 계정이 있고 각 계정이 하나의 계정 기록과 연결된 경우 공급 업체 모델은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4f0a05e2876dda4f17b1800290a2c864c40a315b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;has_one&lt;/code&gt; association also sets up a one-to-one connection with another model, but with somewhat different semantics (and consequences). This association indicates that each instance of a model contains or possesses one instance of another model. For example, if each supplier in your application has only one account, you'd declare the supplier model like this:</source>
          <target state="translated">&lt;code&gt;has_one&lt;/code&gt; 의 관계도 있지만, 약간 다른 의미 (및 결과)와 다른 모델의 일대일 접속을 설정한다. 이 연관은 모델의 각 인스턴스가 다른 모델의 한 인스턴스를 포함하거나 소유 함을 나타냅니다. 예를 들어, 응용 프로그램의 각 공급 업체에 하나의 계정 만있는 경우 다음과 같이 공급 업체 모델을 선언합니다.</target>
        </trans-unit>
        <trans-unit id="48051a7b9355453225f8de4df7fd9f6b37be8d06" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;jobs&lt;/code&gt; directory will also be created when an associated test is first generated.</source>
          <target state="translated">&lt;code&gt;jobs&lt;/code&gt; 연관된 테스트가 처음 생성 될 때 디렉토리도 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="cf57c59763b70ddd390acf69a8de513b4d163cba" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;broadcasting&lt;/em&gt; is a pub/sub link where anything transmitted by a publisher is routed directly to the channel subscribers who are streaming that named broadcasting. Each channel can be streaming zero or more broadcastings.</source>
          <target state="translated">&lt;em&gt;방송은&lt;/em&gt; 게시자에 의해 전송 아무것도 명명 된 방송을 스트리밍 채널 가입자에게 직접 전달됩니다 술집 / 서브 링크입니다. 각 채널은 0 개 이상의 방송을 스트리밍 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c6d8b2cbf8d2439df76e45a660c3d63e542fb83" translate="yes" xml:space="preserve">
          <source>A &lt;em&gt;channel&lt;/em&gt; encapsulates a logical unit of work, similar to what a controller does in a regular MVC setup. By default, Rails creates a parent &lt;code&gt;ApplicationCable::Channel&lt;/code&gt; class for encapsulating shared logic between your channels.</source>
          <target state="translated">&lt;em&gt;채널&lt;/em&gt; 컨트롤러가 일반 MVC 설정에서하는 것과 유사한 작업의 논리 단위를 캡슐화합니다. 기본적으로 Rails는 &lt;code&gt;ApplicationCable::Channel&lt;/code&gt; 간 공유 논리를 캡슐화하기 위해 부모 ApplicationCable :: Channel 클래스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="6bad6c006c3b490552aeb86d5d7c3672d09f00bd" translate="yes" xml:space="preserve">
          <source>A Basic Test Case</source>
          <target state="translated">기본 테스트 사례</target>
        </trans-unit>
        <trans-unit id="6f83e0c06a270cae23b235acace6aa822ff269c4" translate="yes" xml:space="preserve">
          <source>A Brief Note About Test Cases</source>
          <target state="translated">테스트 사례에 대한 간단한 참고 사항</target>
        </trans-unit>
        <trans-unit id="f617245cd4b4d74613e9b4c9fc442b1a07216833" translate="yes" xml:space="preserve">
          <source>A CDN works by caching content. If the CDN has stale or bad content, then it is hurting rather than helping your application. The purpose of this section is to describe general caching behavior of most CDNs, your specific provider may behave slightly differently.</source>
          <target state="translated">CDN은 내용을 캐싱하여 작동합니다. CDN에 오래되었거나 내용이 나쁜 경우 응용 프로그램을 돕는 것이 아니라 아프게됩니다. 이 섹션의 목적은 대부분의 CDN의 일반적인 캐싱 동작을 설명하기위한 것으로 특정 공급자가 약간 다르게 동작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07c09ca8b75d3d19820087d8020a26fcc5d85bb6" translate="yes" xml:space="preserve">
          <source>A Developer class declares &lt;code&gt;has_and_belongs_to_many :projects&lt;/code&gt;, which will add:</source>
          <target state="translated">개발자 클래스는 &lt;code&gt;has_and_belongs_to_many :projects&lt;/code&gt; 선언 합니다.</target>
        </trans-unit>
        <trans-unit id="83bf71252e6a760c659579697f512ea565024c45" translate="yes" xml:space="preserve">
          <source>A Generic Search Form</source>
          <target state="translated">일반 검색 양식</target>
        </trans-unit>
        <trans-unit id="4c537457f7d4a4c6daf6c6624d791e7e5e26572c" translate="yes" xml:space="preserve">
          <source>A JavaScript file within a Rails application or Rails engine goes in one of three locations: &lt;code&gt;app/assets&lt;/code&gt;, &lt;code&gt;lib/assets&lt;/code&gt; or &lt;code&gt;vendor/assets&lt;/code&gt;. These locations are explained in detail in the &lt;a href=&quot;asset_pipeline#asset-organization&quot;&gt;Asset Organization section in the Asset Pipeline Guide&lt;/a&gt;.</source>
          <target state="translated">Rails 애플리케이션 또는 Rails 엔진의 JavaScript 파일은 &lt;code&gt;app/assets&lt;/code&gt; , &lt;code&gt;lib/assets&lt;/code&gt; 또는 &lt;code&gt;vendor/assets&lt;/code&gt; 의 세 위치 중 하나에 있습니다 . 이러한 위치는 &lt;a href=&quot;asset_pipeline#asset-organization&quot;&gt;자산 파이프 라인 안내서&lt;/a&gt; 의 자산 조직 섹션에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a9ba5c26ae5e2476eab4a9ce77ef376a19c21fc" translate="yes" xml:space="preserve">
          <source>A Jbuilder object named &lt;code&gt;json&lt;/code&gt; is automatically made available to templates with a &lt;code&gt;.jbuilder&lt;/code&gt; extension.</source>
          <target state="translated">&lt;code&gt;json&lt;/code&gt; 이라는 Jbuilder 객체 는 확장자 가 &lt;code&gt;.jbuilder&lt;/code&gt; 인 템플릿에 자동으로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="612ea99a57bbd51e1d296b5cea65cad1ec3b3563" translate="yes" xml:space="preserve">
          <source>A Person object with a name attribute can ask &lt;code&gt;person.respond_to?(:name)&lt;/code&gt;, &lt;code&gt;person.respond_to?(:name=)&lt;/code&gt;, and &lt;code&gt;person.respond_to?(:name?)&lt;/code&gt; which will all return &lt;code&gt;true&lt;/code&gt;. It also defines the attribute methods if they have not been generated.</source>
          <target state="translated">이름 속성을 가진 Person 객체는 &lt;code&gt;person.respond_to?(:name)&lt;/code&gt; , &lt;code&gt;person.respond_to?(:name=)&lt;/code&gt; 및 &lt;code&gt;person.respond_to?(:name?)&lt;/code&gt; 을 요청할 수 있으며, 모두 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 또한 생성되지 않은 경우 속성 메소드를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="0005dff8f32ed2da2952232bcbb5ab2b5780159d" translate="yes" xml:space="preserve">
          <source>A Post class declares &lt;code&gt;belongs_to :author&lt;/code&gt;, which will add:</source>
          <target state="translated">Post 클래스는 &lt;code&gt;belongs_to :author&lt;/code&gt; 선언 하고 다음을 추가합니다 :</target>
        </trans-unit>
        <trans-unit id="e6e612cce43bb4f543cce42fed9247f43496c04b" translate="yes" xml:space="preserve">
          <source>A Rails TimeZone object.</source>
          <target state="translated">Rails TimeZone 객체.</target>
        </trans-unit>
        <trans-unit id="fd861bce44475a1c00fcedb644a0e4670fed8349" translate="yes" xml:space="preserve">
          <source>A Rails plugin is either an extension or a modification of the core framework. Plugins provide:</source>
          <target state="translated">Rails 플러그인은 확장 또는 핵심 프레임 워크의 수정입니다. 플러그인은 다음을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4fd679f09f8523007b8a6250d4657832c0d94bd5" translate="yes" xml:space="preserve">
          <source>A Ruby application (on Rails or not), can leak memory &amp;mdash; either in the Ruby code or at the C code level.</source>
          <target state="translated">Ruby 애플리케이션 (Rails에 관계없이)은 Ruby 코드 또는 C 코드 레벨에서 메모리를 누출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac50ead57b2dc3d68c3cccc5760e267144afd5c7" translate="yes" xml:space="preserve">
          <source>A Ruby on Rails application loads all Active Support unless &lt;code&gt;config.active_support.bare&lt;/code&gt; is true. In that case, the application will only load what the framework itself cherry-picks for its own needs, and can still cherry-pick itself at any granularity level, as explained in the previous section.</source>
          <target state="translated">&lt;code&gt;config.active_support.bare&lt;/code&gt; 가 true가 아니면 Ruby on Rails 애플리케이션이 모든 활성 지원을로드 합니다. 이 경우 응용 프로그램은 프레임 워크 자체가 자신의 필요에 따라 체리 픽을 선택하는 것만로드하고 이전 섹션에서 설명한대로 여전히 세분화 수준에서 체리 픽을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b784d90f34344b5edea6491974c1d71fae78e667" translate="yes" xml:space="preserve">
          <source>A Set containing renderer names that correspond to available renderer procs. Default values are &lt;code&gt;:json&lt;/code&gt;, &lt;code&gt;:js&lt;/code&gt;, &lt;code&gt;:xml&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 렌더러 프로세스에 해당하는 렌더러 이름이 포함 된 세트입니다. 기본값은 &lt;code&gt;:json&lt;/code&gt; , &lt;code&gt;:js&lt;/code&gt; , &lt;code&gt;:xml&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b671ac0d028246c423146116e7e15964cde16b69" translate="yes" xml:space="preserve">
          <source>A Simple Example</source>
          <target state="translated">간단한 예</target>
        </trans-unit>
        <trans-unit id="9873f47f9c1a1f5489ee1b5ef1b13facb1cda0f4" translate="yes" xml:space="preserve">
          <source>A Symbol can be used to specify the type of the generated primary key column.</source>
          <target state="translated">생성 된 기본 키 열의 유형을 지정하기 위해 기호를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="254aa2b5561395d45512f1255863402a3a57dcfb" translate="yes" xml:space="preserve">
          <source>A TZInfo::Timezone object.</source>
          <target state="translated">TZInfo :: Timezone 객체.</target>
        </trans-unit>
        <trans-unit id="ef5bc35033c77ef77b708ff659d16b4fe5d2a3c2" translate="yes" xml:space="preserve">
          <source>A Time-like class that can represent a time in any time zone. Necessary because standard Ruby &lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt; instances are limited to UTC and the system's &lt;code&gt;ENV['TZ']&lt;/code&gt; zone.</source>
          <target state="translated">모든 시간대의 시간을 나타낼 수있는 시간과 유사한 클래스입니다. 표준 Ruby &lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt; 인스턴스는 UTC 및 시스템의 &lt;code&gt;ENV['TZ']&lt;/code&gt; 영역 으로 제한 되므로 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="3780a2572ac098ce19d97759124693ccae878062" translate="yes" xml:space="preserve">
          <source>A URL config:</source>
          <target state="translated">URL 설정 :</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
