<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="rails">
    <body>
      <group id="rails">
        <trans-unit id="e22aa3638a5310368d40775abc4daacdfcb74993" translate="yes" xml:space="preserve">
          <source>Gateway to &lt;a href=&quot;../remoteconnections&quot;&gt;RemoteConnections&lt;/a&gt;. See that class for details.</source>
          <target state="translated">게이트웨이에서 &lt;a href=&quot;../remoteconnections&quot;&gt;원격으로 연결&lt;/a&gt; . 자세한 내용은 해당 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7604cd4cbe70f37daa2d95ec55c5c25c6fd3ecb0" translate="yes" xml:space="preserve">
          <source>Gem dependencies inside an engine should be specified inside the &lt;code&gt;.gemspec&lt;/code&gt; file at the root of the engine. The reason is that the engine may be installed as a gem. If dependencies were to be specified inside the &lt;code&gt;Gemfile&lt;/code&gt;, these would not be recognized by a traditional gem install and so they would not be installed, causing the engine to malfunction.</source>
          <target state="translated">엔진 내부의 보석 종속성은 엔진 루트의 &lt;code&gt;.gemspec&lt;/code&gt; 파일 내에 지정해야합니다 . 엔진이 gem으로 설치 될 수 있기 때문입니다. &lt;code&gt;Gemfile&lt;/code&gt; 내부에 종속성을 지정 하면 기존 gem 설치로 인식되지 않으므로 설치되지 않아 엔진이 오작동 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3821474b9ae8241d3aa80e0e6c2a32731b410e66" translate="yes" xml:space="preserve">
          <source>Gem plugins currently in development can easily be shared from any Git repository. To share the Yaffle gem with others, simply commit the code to a Git repository (like GitHub) and add a line to the &lt;code&gt;Gemfile&lt;/code&gt; of the application in question:</source>
          <target state="translated">현재 개발중인 보석 플러그인은 모든 Git 저장소에서 쉽게 공유 할 수 있습니다. Yaffle gem을 다른 사람들과 공유하려면 코드를 Git 저장소 (예 : GitHub)에 커밋하고 해당 애플리케이션 의 &lt;code&gt;Gemfile&lt;/code&gt; 에 행을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="de3150c01c3a946a6168173c4116741379fe3579" translate="yes" xml:space="preserve">
          <source>Gemfile</source>
          <target state="translated">Gemfile</target>
        </trans-unit>
        <trans-unit id="21fb5836b499a2be648386aac055d2e069160d6c" translate="yes" xml:space="preserve">
          <source>Gemfile.lock</source>
          <target state="translated">Gemfile.lock</target>
        </trans-unit>
        <trans-unit id="fba4bdc304745193ca9f3d084cafed803881961b" translate="yes" xml:space="preserve">
          <source>Gemspec Reference</source>
          <target state="translated">보석 사양</target>
        </trans-unit>
        <trans-unit id="75fabb5a96311113ca298de2d0ecaaa2aae1996e" translate="yes" xml:space="preserve">
          <source>General Advice</source>
          <target state="translated">일반적인 조언</target>
        </trans-unit>
        <trans-unit id="d08759c29ceb7376299e9e482a84c806359add55" translate="yes" xml:space="preserve">
          <source>Generally a deadlock will be caused by the interlock conflicting with some other external lock or blocking I/O call. Once you find it, you can wrap it with &lt;code&gt;permit_concurrent_loads&lt;/code&gt;.</source>
          <target state="translated">일반적으로 교착 상태는 인터록이 다른 외부 잠금과 충돌하거나 I / O 호출을 차단하여 발생합니다. 찾으면 &lt;code&gt;permit_concurrent_loads&lt;/code&gt; 로 랩핑 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b960129dbcd1de440cb2c51d5e5c47e631742859" translate="yes" xml:space="preserve">
          <source>Generally a deadlock will be caused by the interlock conflicting with some other external lock or blocking I/O call. These cannot be automatically identified, but should be visible in the displayed backtraces.</source>
          <target state="translated">일반적으로 교착 상태는 인터록이 다른 외부 잠금과 충돌하거나 I / O 호출을 차단하여 발생합니다. 이들은 자동으로 식별 할 수 없지만 표시된 역 추적에 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="ec74792f75fd8e0ccb725434fee0e165f9e9289a" translate="yes" xml:space="preserve">
          <source>Generally we recommend using YAML as a format for storing translations. There are cases, though, where you want to store Ruby lambdas as part of your locale data, e.g. for special date formats.</source>
          <target state="translated">일반적으로 번역 저장 형식으로 YAML을 사용하는 것이 좋습니다. 그러나 루비 람다를 로케일 데이터의 일부로 저장하려는 경우가 있습니다 (예 : 특수 날짜 형식).</target>
        </trans-unit>
        <trans-unit id="839f30f786d0442fe07bf54f1fc77f991d7c3d19" translate="yes" xml:space="preserve">
          <source>Generate a URL based on the options provided, default_url_options and the routes defined in routes.rb. The following options are supported:</source>
          <target state="translated">제공된 옵션, default_url_options 및 route.rb에 정의 된 경로를 기반으로 URL을 생성하십시오. 다음과 같은 옵션이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e46f9ed284fb384e80320c8562a667f30c23a168" translate="yes" xml:space="preserve">
          <source>Generate a gemified plugin.</source>
          <target state="translated">보석 화 된 플러그인을 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="26cf20c8d613c642dbc7fbd21b33a35d005395ec" translate="yes" xml:space="preserve">
          <source>Generate a permanent URL for the blob that points to the application. Upon access, a redirect to the actual service endpoint is returned. This indirection decouples the public URL from the actual one, and allows, for example, mirroring attachments in different services for high-availability. The redirection has an HTTP expiration of 5 min.</source>
          <target state="translated">애플리케이션을 가리키는 Blob의 영구 URL을 생성하십시오. 액세스하면 실제 서비스 엔드 포인트로의 경로 재 지정이 리턴됩니다. 이 간접 지정은 공개 URL을 실제 URL과 분리하고, 예를 들어 고 가용성을 위해 다른 서비스에서 첨부 파일을 미러링하는 것을 허용합니다. 리디렉션의 HTTP 만료는 5 분입니다.</target>
        </trans-unit>
        <trans-unit id="695059ace2b43786511ad7163cc7c72c11dedab0" translate="yes" xml:space="preserve">
          <source>Generate a strong password that Action Mailbox can use to authenticate requests to the Postmark ingress.</source>
          <target state="translated">작업 사서함에서 소인 수신에 대한 요청을 인증하는 데 사용할 수있는 강력한 암호를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="c27a250ef7bd024c9d8d497d37c0b7dfe7adb180" translate="yes" xml:space="preserve">
          <source>Generate a strong password that Action Mailbox can use to authenticate requests to the SendGrid ingress.</source>
          <target state="translated">Action Mailbox가 SendGrid 수신에 대한 요청을 인증하는 데 사용할 수있는 강력한 비밀번호를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="348eeb91ded83b062aa9da51fa42b62c8570d77e" translate="yes" xml:space="preserve">
          <source>Generate a strong password that Action Mailbox can use to authenticate requests to the ingress.</source>
          <target state="translated">Action Mailbox가 수신 요청을 인증하는 데 사용할 수있는 강력한 비밀번호를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="35a28be05941e180d1202a80f8656c739b3d866d" translate="yes" xml:space="preserve">
          <source>Generate a strong password that Action Mailbox can use to authenticate requests to the relay ingress.</source>
          <target state="translated">Action Mailbox가 릴레이 수신에 대한 요청을 인증하는 데 사용할 수있는 강력한 비밀번호를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="299250825b86930d880cbe1300f8edc7a9740777" translate="yes" xml:space="preserve">
          <source>Generate all routes except for the given actions.</source>
          <target state="translated">주어진 조치를 제외한 모든 경로를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="eb0cba5cdeb376143e9aceea92cc9d1b0e165b5d" translate="yes" xml:space="preserve">
          <source>Generate something using a generator from Rails or a plugin. The second parameter is the argument string that is passed to the generator or an &lt;a href=&quot;../../array&quot;&gt;Array&lt;/a&gt; that is joined.</source>
          <target state="translated">Rails 또는 플러그인의 생성기를 사용하여 무언가를 생성하십시오. 두 번째 매개 변수는 생성기 또는 전달 된 &lt;a href=&quot;../../array&quot;&gt;배열로&lt;/a&gt; 전달되는 인수 문자열입니다 .</target>
        </trans-unit>
        <trans-unit id="344e9677b33e0c916670991d1e522c35ba27b196" translate="yes" xml:space="preserve">
          <source>Generated URL</source>
          <target state="translated">생성 된 URL</target>
        </trans-unit>
        <trans-unit id="5ee2c26e4cf20f2e8bc0593709499eedd6443c91" translate="yes" xml:space="preserve">
          <source>Generates a form containing a single button that submits to the URL created by the set of &lt;code&gt;options&lt;/code&gt;. This is the safest method to ensure links that cause changes to your data are not triggered by search bots or accelerators. If the HTML button does not work with your layout, you can also consider using the &lt;code&gt;link_to&lt;/code&gt; method with the &lt;code&gt;:method&lt;/code&gt; modifier as described in the &lt;code&gt;link_to&lt;/code&gt; documentation.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 세트로 작성된 URL에 제출하는 단일 단추를 포함하는 양식을 생성합니다 . 데이터를 변경하는 링크가 검색 로봇 또는 가속기에 의해 트리거되지 않도록하는 가장 안전한 방법입니다. HTML 단추가 레이아웃에서 작동하지 않으면 &lt;code&gt;link_to&lt;/code&gt; 설명서에 설명 된대로 &lt;code&gt;:method&lt;/code&gt; 수정 자 와 함께 &lt;code&gt;link_to&lt;/code&gt; 메서드 를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e7e53e9639ca86746004046f8a8f925c5ac3f67" translate="yes" xml:space="preserve">
          <source>Generates a signed message for the provided value.</source>
          <target state="translated">제공된 값에 대한 서명 된 메시지를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="75f412c48613923b2db41663cec892e4357043ac" translate="yes" xml:space="preserve">
          <source>Generates a v5 non-random &lt;a href=&quot;uuid&quot;&gt;UUID&lt;/a&gt; (Universally Unique IDentifier).</source>
          <target state="translated">v5 비 랜덤 &lt;a href=&quot;uuid&quot;&gt;UUID&lt;/a&gt; (Universally Unique IDentifier)를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="d6dab65da458de737bfd0aad37e5640ccdbd8f01" translate="yes" xml:space="preserve">
          <source>Generates information on the mailing run if available. Can be set to &lt;code&gt;nil&lt;/code&gt; for no logging. Compatible with both Ruby's own &lt;code&gt;Logger&lt;/code&gt; and &lt;code&gt;Log4r&lt;/code&gt; loggers.</source>
          <target state="translated">사용 가능한 경우 메일 실행에 대한 정보를 생성합니다. 로깅없이 &lt;code&gt;nil&lt;/code&gt; 로 설정할 수 있습니다 . Ruby의 자체 &lt;code&gt;Logger&lt;/code&gt; 및 &lt;code&gt;Log4r&lt;/code&gt; 로거 와 호환됩니다 .</target>
        </trans-unit>
        <trans-unit id="b08aeb9ca25c889b8737cae0eea7ca63a2df9ae7" translate="yes" xml:space="preserve">
          <source>Generates shallow routes for nested resource(s). When placed on a parent resource, generates shallow routes for all nested resources.</source>
          <target state="translated">중첩 된 리소스에 대한 얕은 경로를 생성합니다. 부모 리소스에 배치하면 모든 중첩 리소스에 대해 얕은 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="14e149a59d2f6dbae2a2a38afd408c97a4b556b8" translate="yes" xml:space="preserve">
          <source>Generating Paths and URLs from Code</source>
          <target state="translated">코드에서 경로 및 URL 생성</target>
        </trans-unit>
        <trans-unit id="4ea0c5d22674996a1158c35529b76d000bb0e336" translate="yes" xml:space="preserve">
          <source>Generating URLs</source>
          <target state="translated">URL 생성</target>
        </trans-unit>
        <trans-unit id="aa4196a02fe20957107625eb4a338cae326613dc" translate="yes" xml:space="preserve">
          <source>Generating URLs in Action Mailer Views</source>
          <target state="translated">Action Mailer보기에서 URL 생성</target>
        </trans-unit>
        <trans-unit id="eed33b7478e2efc453671dca69c5627c85bac6e7" translate="yes" xml:space="preserve">
          <source>Generating a Comments Resource</source>
          <target state="translated">주석 자원 생성</target>
        </trans-unit>
        <trans-unit id="a9522296dfe947b04ecc2b6017c7d82f7e04ea27" translate="yes" xml:space="preserve">
          <source>Generating a Controller</source>
          <target state="translated">컨트롤러 생성</target>
        </trans-unit>
        <trans-unit id="455a0debed117bf249b61aa22986e88693d5b5ca" translate="yes" xml:space="preserve">
          <source>Generating a Model</source>
          <target state="translated">모델 생성</target>
        </trans-unit>
        <trans-unit id="8ebed51466c57ef61b1cf9a02de1b01e10abb3bf" translate="yes" xml:space="preserve">
          <source>Generating an Article Resource</source>
          <target state="translated">기사 리소스 생성</target>
        </trans-unit>
        <trans-unit id="ec455254037451adb2916ab33012ec32ad44e8e2" translate="yes" xml:space="preserve">
          <source>Generating an engine</source>
          <target state="translated">엔진 생성</target>
        </trans-unit>
        <trans-unit id="1a012ed71a95646a207a28b93d4322635e1a8cd6" translate="yes" xml:space="preserve">
          <source>Generating options tags with &lt;code&gt;options_for_select&lt;/code&gt; requires that you create an array containing the text and value for each option. But what if you had a &lt;code&gt;City&lt;/code&gt; model (perhaps an Active Record one) and you wanted to generate option tags from a collection of those objects? One solution would be to make a nested array by iterating over them:</source>
          <target state="translated">&lt;code&gt;options_for_select&lt;/code&gt; 를 사용하여 옵션 태그를 생성 하려면 각 옵션의 텍스트와 값을 포함하는 배열을 작성해야합니다. 그러나 &lt;code&gt;City&lt;/code&gt; 모델 (아마도 Active Record 모델)이 있고 해당 객체 컬렉션에서 옵션 태그를 생성하려면 어떻게해야합니까? 한 가지 해결책은 중첩 배열을 반복하여 중첩 배열을 만드는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e794b11cba8f11ca654cb29060aa1e3ce3e6b0fd" translate="yes" xml:space="preserve">
          <source>Generator methods</source>
          <target state="translated">발전기 방법</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="ebc9bbd7c5a8784fd28058c31276419d99846dc8" translate="yes" xml:space="preserve">
          <source>Generators Lookup</source>
          <target state="translated">발전기 조회</target>
        </trans-unit>
        <trans-unit id="e07b20fd441cbf0d83b37ac549141ac22cad17e9" translate="yes" xml:space="preserve">
          <source>Generators can be included in your gem simply by creating them in a &lt;code&gt;lib/generators&lt;/code&gt; directory of your plugin. More information about the creation of generators can be found in the &lt;a href=&quot;generators&quot;&gt;Generators Guide&lt;/a&gt;.</source>
          <target state="translated">플러그인 은 &lt;code&gt;lib/generators&lt;/code&gt; 디렉토리 에 생성하여 gem에 간단히 포함시킬 수 있습니다 . 생성기 생성에 대한 자세한 내용은 &lt;a href=&quot;generators&quot;&gt;생성기 안내서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cc00dbcd828e3d4e6f6045f56385b34f42958458" translate="yes" xml:space="preserve">
          <source>Generators themselves have a generator:</source>
          <target state="translated">발전기 자체에는 발전기가 있습니다.</target>
        </trans-unit>
        <trans-unit id="35bd18ce575e4d14f28fbbbc2db6d6c620225a4d" translate="yes" xml:space="preserve">
          <source>Generators: It is often handy to generate a resource and get your model, controller, test stubs, and routes created for you in a single command for further tweaking. Same for migrations and others.</source>
          <target state="translated">생성기 : 리소스를 생성하고 추가 조정을 위해 단일 명령으로 모델, 컨트롤러, 테스트 스텁 및 경로를 생성하는 것이 종종 편리합니다. 마이그레이션 및 기타의 경우 동일합니다.</target>
        </trans-unit>
        <trans-unit id="5f877487c25b3a93f31a90c54e33057075912cac" translate="yes" xml:space="preserve">
          <source>Generic Active Record exception class.</source>
          <target state="translated">일반 활성 레코드 예외 클래스.</target>
        </trans-unit>
        <trans-unit id="c7cf342e70e063d6362ac6ee69c6f86474de7bbd" translate="yes" xml:space="preserve">
          <source>Generic Procedure</source>
          <target state="translated">일반 절차</target>
        </trans-unit>
        <trans-unit id="cb0e0aa849efd0358a8930f86c062a26623b32ad" translate="yes" xml:space="preserve">
          <source>Generic base class for all Active Storage exceptions.</source>
          <target state="translated">모든 Active Storage 예외에 대한 일반 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="0eb0bda0b417725599186cb04f861eea63e1d153" translate="yes" xml:space="preserve">
          <source>Generic data download:</source>
          <target state="translated">일반 데이터 다운로드 :</target>
        </trans-unit>
        <trans-unit id="59a79a1ee234d61d42db147aa7f797d2e6ec2302" translate="yes" xml:space="preserve">
          <source>Geometric Types</source>
          <target state="translated">기하학적 유형</target>
        </trans-unit>
        <trans-unit id="df0de8fdd90e29b22a27eb9a982a2c6955cebd22" translate="yes" xml:space="preserve">
          <source>Get a session from the cache.</source>
          <target state="translated">캐시에서 세션을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="b5d5f1519031ebd723f04df3e921a9b2d9fa90a9" translate="yes" xml:space="preserve">
          <source>Get headers for this response.</source>
          <target state="translated">이 응답의 헤더를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="12c33f631ec0435712aa572121a37056a0cdfbae" translate="yes" xml:space="preserve">
          <source>Get the columns for a table</source>
          <target state="translated">테이블의 열을 가져옵니다</target>
        </trans-unit>
        <trans-unit id="3a92cb99f6144db7ddd4c7ff83c74575d5f11bb7" translate="yes" xml:space="preserve">
          <source>Get the columns for a table as a hash, key is the column name value is the column object.</source>
          <target state="translated">테이블의 열을 해시로 가져 오십시오. 키는 열 이름 값이 열 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="12ef96a6312bb1e78ed4c4a8315d3fbe414e65fb" translate="yes" xml:space="preserve">
          <source>Get the statistics from the memcached servers.</source>
          <target state="translated">memcached 서버에서 통계를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="dc23de4c2a1996be3e5a1d57362527f75f78e9f2" translate="yes" xml:space="preserve">
          <source>Gets a new instance of a controller object.</source>
          <target state="translated">컨트롤러 개체의 새 인스턴스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5ec196e76fdfda187c4d36d83ba955faa4aade30" translate="yes" xml:space="preserve">
          <source>Gets the helper methods available to the controller.</source>
          <target state="translated">컨트롤러에서 사용 가능한 헬퍼 메소드를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="3b9c4ae8c59f67bd28dcd62d1bd16e026ea3592e" translate="yes" xml:space="preserve">
          <source>Getting Started with Engines</source>
          <target state="translated">엔진 시작하기</target>
        </trans-unit>
        <trans-unit id="6cc9e0a0d14300c7b9c27b20dde833485ad3cf0b" translate="yes" xml:space="preserve">
          <source>Getting Started with Rails</source>
          <target state="translated">Rails 시작하기</target>
        </trans-unit>
        <trans-unit id="d24eeeb77a7dd40f1940a7ee58720cf94e4fbe01" translate="yes" xml:space="preserve">
          <source>Getting Up and Running</source>
          <target state="translated">시작 및 실행</target>
        </trans-unit>
        <trans-unit id="a867cc4bc05ccdf7122d86bfea913a20e4883ecf" translate="yes" xml:space="preserve">
          <source>Getting closer... Now we will implement the code of the &lt;code&gt;acts_as_yaffle&lt;/code&gt; method to make the tests pass.</source>
          <target state="translated">더 가까이 다 가서 ... 이제 테스트를 통과시키기 위해 &lt;code&gt;acts_as_yaffle&lt;/code&gt; 메소드 의 코드를 구현할 것 입니다.</target>
        </trans-unit>
        <trans-unit id="35b9856ef8949a47a3d9ea9218e7bbc3ffd292cf" translate="yes" xml:space="preserve">
          <source>Getting the locale from &lt;code&gt;params&lt;/code&gt; and setting it accordingly is not hard; including it in every URL and thus &lt;strong&gt;passing it through the requests&lt;/strong&gt; is. To include an explicit option in every URL, e.g. &lt;code&gt;link_to(books_url(locale: I18n.locale))&lt;/code&gt;, would be tedious and probably impossible, of course.</source>
          <target state="translated">&lt;code&gt;params&lt;/code&gt; 에서 로케일을 가져 와서 적절하게 설정하는 것은 어렵지 않습니다. 모든 URL에 포함 &lt;strong&gt;시켜 요청을 통해 전달하는 것&lt;/strong&gt; 입니다. &lt;code&gt;link_to(books_url(locale: I18n.locale))&lt;/code&gt; 과 같이 모든 URL에 명시적인 옵션을 포함시키는 것은 지루하고 아마도 불가능할 것입니다.</target>
        </trans-unit>
        <trans-unit id="4c59b427eb75f0e3fe2350a549a5cb3c5ce6a689" translate="yes" xml:space="preserve">
          <source>Give Action Mailbox your &lt;a href=&quot;https://help.mailgun.com/hc/en-us/articles/203380100-Where-can-I-find-my-API-key-and-SMTP-credentials&quot;&gt;Mailgun API key&lt;/a&gt; so it can authenticate requests to the Mailgun ingress.</source>
          <target state="translated">Mailgun 수신에 대한 요청을 인증 할 수 있도록 Action Mailbox에 &lt;a href=&quot;https://help.mailgun.com/hc/en-us/articles/203380100-Where-can-I-find-my-API-key-and-SMTP-credentials&quot;&gt;Mailgun API 키를&lt;/a&gt; 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="c3ce7e0656ddc48bd4ba83308aee2386b422063e" translate="yes" xml:space="preserve">
          <source>Give Action Mailbox your &lt;a href=&quot;https://help.mailgun.com/hc/en-us/articles/203380100-Where-can-I-find-my-API-key-and-SMTP-credentials-&quot;&gt;Mailgun API key&lt;/a&gt; so it can authenticate requests to the Mailgun ingress.</source>
          <target state="translated">Mailgun 수신에 대한 요청을 인증 할 수 있도록 Action Mailbox에 &lt;a href=&quot;https://help.mailgun.com/hc/en-us/articles/203380100-Where-can-I-find-my-API-key-and-SMTP-credentials-&quot;&gt;Mailgun API 키를&lt;/a&gt; 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="ad92faebb185019c3f91eadd82dddddea6f792b8" translate="yes" xml:space="preserve">
          <source>Give Action Mailbox your Mandrill API key so it can authenticate requests to the Mandrill ingress.</source>
          <target state="translated">작업 사서함에 Mandrill API 키를 제공하면 Mandrill 수신에 대한 요청을 인증 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19ac445b117d6b0040b65f20692a02e3723d3b69" translate="yes" xml:space="preserve">
          <source>Give you information about where to put generators in your plugin.</source>
          <target state="translated">플러그인에서 생성기를 배치 할 위치에 대한 정보를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="6839d82e03f5268d9a7cc97802db76c48c8cce6e" translate="yes" xml:space="preserve">
          <source>Given</source>
          <target state="translated">Given</target>
        </trans-unit>
        <trans-unit id="57ddc73e4346f634a1d4285a29e0696c1232c307" translate="yes" xml:space="preserve">
          <source>Given a block, instrument it by measuring the time taken to execute and publish it. Without a block, simply send a message via the notifier. Notice that events get sent even if an error occurs in the passed-in block.</source>
          <target state="translated">블록이 주어지면 블록을 실행하고 게시하는 데 걸린 시간을 측정하여 계측합니다. 블록이 없으면 알리미를 통해 메시지를 보내기 만하면됩니다. 전달 된 블록에서 오류가 발생하더라도 이벤트가 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="39299b13eeb3cd20b3663ca959a1a9134a8bb236" translate="yes" xml:space="preserve">
          <source>Given a cipher, returns the key length of the cipher to help generate the key of desired size</source>
          <target state="translated">암호가 주어지면 암호의 키 길이를 반환하여 원하는 크기의 키를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0aa3a454a51172b7beade4cacac8dfd0c451f3d9" translate="yes" xml:space="preserve">
          <source>Given a default options hash, &lt;code&gt;with_options&lt;/code&gt; yields a proxy object to a block. Within the block, methods called on the proxy are forwarded to the receiver with their options merged. For example, you get rid of the duplication in:</source>
          <target state="translated">기본 옵션 해시가 주어지면 &lt;code&gt;with_options&lt;/code&gt; 는 블록에 프록시 객체를 생성합니다. 블록 내에서 프록시에서 호출 된 메소드는 옵션이 병합 된 상태로 수신자에게 전달됩니다. 예를 들어, 다음에서 중복을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="12c3a3bddea76956647a30fc482427b4580dfc42" translate="yes" xml:space="preserve">
          <source>Given a key (as described in &lt;code&gt;expire_fragment&lt;/code&gt;), returns a key array suitable for use in reading, writing, or expiring a cached fragment. All keys begin with &lt;code&gt;:views&lt;/code&gt;, followed by &lt;code&gt;ENV[&quot;RAILS_CACHE_ID&quot;]&lt;/code&gt; or &lt;code&gt;ENV[&quot;RAILS_APP_VERSION&quot;]&lt;/code&gt; if set, followed by any controller-wide key prefix values, ending with the specified &lt;code&gt;key&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;expire_fragment&lt;/code&gt; 에 설명 된 키가 있으면 캐시 된 조각을 읽거나 쓰거나 만료하는 데 적합한 키 배열을 반환합니다. 모든 키는 &lt;code&gt;:views&lt;/code&gt; 로 시작하고 , &lt;code&gt;ENV[&quot;RAILS_CACHE_ID&quot;]&lt;/code&gt; 또는 &lt;code&gt;ENV[&quot;RAILS_APP_VERSION&quot;]&lt;/code&gt; 이 설정되어 있으면 컨트롤러 전체 키 접두사 값과 그 뒤에 지정된 &lt;code&gt;key&lt;/code&gt; 값으로 끝납니다 .</target>
        </trans-unit>
        <trans-unit id="c238aa790e32b2de8789a3f124d86784a73a741f" translate="yes" xml:space="preserve">
          <source>Given a path name &lt;code&gt;is_missing?&lt;/code&gt; tests whether the exception was raised due to that particular file (except perhaps for the &quot;.rb&quot; extension).</source>
          <target state="translated">경로명이 &lt;code&gt;is_missing?&lt;/code&gt; 특정 파일로 인해 예외가 발생했는지 테스트합니다 ( &quot;.rb&quot;확장자 제외).</target>
        </trans-unit>
        <trans-unit id="074fe5460a44d3b24d47205157ddf0f11d9c1aaa" translate="yes" xml:space="preserve">
          <source>Given a string with a constant path we define its &lt;em&gt;parent namespace&lt;/em&gt; to be the string that results from removing its rightmost segment.</source>
          <target state="translated">일정한 경로를 가진 문자열이 주어지면 우리는 &lt;em&gt;부모 네임 스페이스&lt;/em&gt; 를 가장 오른쪽 세그먼트를 제거 한 결과 문자열로 정의 합니다.</target>
        </trans-unit>
        <trans-unit id="d058267ed210926444ce58805c0017b24f51be59" translate="yes" xml:space="preserve">
          <source>Given a string with a qualified constant name, &lt;code&gt;demodulize&lt;/code&gt; returns the very constant name, that is, the rightmost part of it:</source>
          <target state="translated">한정된 상수 이름을 가진 문자열이 주어지면 &lt;code&gt;demodulize&lt;/code&gt; 는 매우 일정한 이름, 즉 가장 오른쪽 부분을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6e464aeb37bd6c8134234db113bf6034e3042cea" translate="yes" xml:space="preserve">
          <source>Given a string with a qualified constant reference expression, &lt;code&gt;deconstantize&lt;/code&gt; removes the rightmost segment, generally leaving the name of the constant's container:</source>
          <target state="translated">정규화 된 상수 참조 표현식이있는 문자열이 제공되면 &lt;code&gt;deconstantize&lt;/code&gt; 는 가장 오른쪽 세그먼트를 제거하고 일반적으로 상수 컨테이너의 이름을 남깁니다.</target>
        </trans-unit>
        <trans-unit id="15a3a7dfbc81f2b793996f3455628adf8dc2d38a" translate="yes" xml:space="preserve">
          <source>Given an attributes hash, &lt;code&gt;instantiate&lt;/code&gt; returns a new instance of the appropriate class. Accepts only keys as strings.</source>
          <target state="translated">속성 해시가 주어지면 &lt;code&gt;instantiate&lt;/code&gt; 는 해당 클래스의 새 인스턴스를 반환합니다. 키만 문자열로 허용합니다.</target>
        </trans-unit>
        <trans-unit id="32aec8726d9c367982be756144168fc87f492e95" translate="yes" xml:space="preserve">
          <source>Given that, let's add the &lt;code&gt;show&lt;/code&gt; action, as follows:</source>
          <target state="translated">이를 감안 하여 다음과 같이 &lt;code&gt;show&lt;/code&gt; 조치를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="b7ac8764e49e76cfcb0fc291652f2bc5bdf4a0eb" translate="yes" xml:space="preserve">
          <source>Given the following example:</source>
          <target state="translated">다음과 같은 예가 주어진다 :</target>
        </trans-unit>
        <trans-unit id="389552619a6781692c29099a203a6e468e20a51d" translate="yes" xml:space="preserve">
          <source>Given the following spec-style test:</source>
          <target state="translated">다음과 같은 스펙 스타일 테스트가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="88c397a72181cdf1b9001d06d761c2afb99bf224" translate="yes" xml:space="preserve">
          <source>Given this sub template rendering:</source>
          <target state="translated">이 하위 템플릿 렌더링이 주어진 경우 :</target>
        </trans-unit>
        <trans-unit id="abd13f2424b5dbd98afaf9ad7d1dc9cc1d4343e8" translate="yes" xml:space="preserve">
          <source>Given two users whose names are Alice and Bob, these snippets return:</source>
          <target state="translated">이름이 Alice와 Bob 인 두 명의 사용자가 주어지면이 스 니펫은 다음을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="4d3b54dbb1f86a7d7f15edbfcc2e7fc5c1ca123e" translate="yes" xml:space="preserve">
          <source>Given we have the following helper:</source>
          <target state="translated">다음과 같은 도우미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e4771a70f8073ea8dcf61c54708cf344ffd2ef5" translate="yes" xml:space="preserve">
          <source>Gives a record (or N records if a parameter is supplied) from the collection using the same rules as &lt;code&gt;ActiveRecord::Base.take&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActiveRecord::Base.take&lt;/code&gt; 와 동일한 규칙을 사용하여 콜렉션에서 레코드 (또는 매개 변수가 제공된 경우 N 레코드)를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="8ef2a670e16cab7529d5da079ce55c08cdbc8998" translate="yes" xml:space="preserve">
          <source>Gives a record (or N records if a parameter is supplied) without any implied order. The order will depend on the database implementation. If an order is supplied it will be respected.</source>
          <target state="translated">암시 적 순서없이 레코드 (또는 매개 변수가 제공된 경우 N 레코드)를 제공합니다. 순서는 데이터베이스 구현에 따라 다릅니다. 주문이 제공되면 존중됩니다.</target>
        </trans-unit>
        <trans-unit id="8fa26bab292e1a993d74ac3692566bba34040927" translate="yes" xml:space="preserve">
          <source>Giving:</source>
          <target state="translated">Giving:</target>
        </trans-unit>
        <trans-unit id="5620a923e866b40d2001fb3240dba8aff924e878" translate="yes" xml:space="preserve">
          <source>Global: The adapter has a global number of retries.</source>
          <target state="translated">글로벌 : 어댑터에 글로벌 재 시도가 있습니다.</target>
        </trans-unit>
        <trans-unit id="90dac42073c89880f87367ad522ce7647332062b" translate="yes" xml:space="preserve">
          <source>Global: The adapter is configured that all jobs have a maximum run time.</source>
          <target state="translated">글로 z : 모든 작업이 최대 런타임을 갖도록 어댑터가 구성되었습니다.</target>
        </trans-unit>
        <trans-unit id="050a77a4626ca8e62779f307f3c63c92c683ac27" translate="yes" xml:space="preserve">
          <source>GlobalID</source>
          <target state="translated">GlobalID</target>
        </trans-unit>
        <trans-unit id="32a0998460412d67f70be49117fc35cdc6386780" translate="yes" xml:space="preserve">
          <source>GlobalID allows serializing full Active Record objects passed to &lt;code&gt;#perform&lt;/code&gt;.</source>
          <target state="translated">GlobalID 전체 액티브 레코드가 전달 된 객체 직렬화 허용 &lt;code&gt;#perform&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a89ab28392fde147c222736c883c3f5fc29c7c6a" translate="yes" xml:space="preserve">
          <source>Go ahead and try to create a new article. You will see that it works exactly in the same way as before, except this time the engine is using the configuration setting in &lt;code&gt;config/initializers/blorgh.rb&lt;/code&gt; to learn what the class is.</source>
          <target state="translated">계속해서 새 기사를 작성하십시오. 엔진이 클래스가 무엇인지 배우기 위해 &lt;code&gt;config/initializers/blorgh.rb&lt;/code&gt; 의 구성 설정을 사용한다는 점을 제외하고는 이전과 동일한 방식으로 작동 한다는 것을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88f7c7d1c5f5d1b08e319450a3b3337e37374d26" translate="yes" xml:space="preserve">
          <source>Go ahead now and create a new file at &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; and write this content in it:</source>
          <target state="translated">이제 &lt;code&gt;app/views/articles/new.html.erb&lt;/code&gt; 에서 새 파일을 작성하고이 컨텐츠를 파일에 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="e388f8b17c1341f3309c6eac0061af6f1d47fe74" translate="yes" xml:space="preserve">
          <source>Go to your browser and open http://localhost:3000/high_scores, now we can create new high scores (55,160 on Space Invaders!)</source>
          <target state="translated">브라우저로 이동하여 http : // localhost : 3000 / high_scores를 엽니 다. 이제 새로운 최고 점수를 만들 수 있습니다 (Space Invaders에서 55,160!).</target>
        </trans-unit>
        <trans-unit id="53f49db1665a5321f40af3d739ac7227e46d3052" translate="yes" xml:space="preserve">
          <source>Good practice is to let the first declared status be the default.</source>
          <target state="translated">먼저 선언 된 상태를 기본값으로 설정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a8372a7747881325255f94033f532ed9743e473a" translate="yes" xml:space="preserve">
          <source>Google Cloud Storage Service</source>
          <target state="translated">구글 클라우드 스토리지 서비스</target>
        </trans-unit>
        <trans-unit id="d74e7c2308df27e696f521d8f773aeb727dc262e" translate="yes" xml:space="preserve">
          <source>Gotcha</source>
          <target state="translated">Gotcha</target>
        </trans-unit>
        <trans-unit id="8a9ffcc7f61bc62fd21688937de9fb20f512c95d" translate="yes" xml:space="preserve">
          <source>Great - now you are ready to start development.</source>
          <target state="translated">좋아-이제 개발을 시작할 준비가되었습니다.</target>
        </trans-unit>
        <trans-unit id="171a0606f7c74580fd3982cf57c49d604104120a" translate="yes" xml:space="preserve">
          <source>Group</source>
          <target state="translated">Group</target>
        </trans-unit>
        <trans-unit id="178f976ae6e8131ff978de4fef0a7bd137174a1a" translate="yes" xml:space="preserve">
          <source>Grouped values: This returns an ordered hash of the values and groups them. It takes either a column name, or the name of a belongs_to association.</source>
          <target state="translated">그룹화 된 값 : 값의 순서화 된 해시를 반환하고 그룹화합니다. 열 이름 또는 belongs_to 연관 이름을 취합니다.</target>
        </trans-unit>
        <trans-unit id="2ae6967b07a45b63c8543a6c5e34052414ba32af" translate="yes" xml:space="preserve">
          <source>Grouping</source>
          <target state="translated">Grouping</target>
        </trans-unit>
        <trans-unit id="c0a01ca1d73c8e13f344f00fc479e53ecffc3670" translate="yes" xml:space="preserve">
          <source>Grouping Conditional validations</source>
          <target state="translated">조건부 유효성 검사 그룹화</target>
        </trans-unit>
        <trans-unit id="0b012e8fe0312f55aa9ce7a03fd8e93b76427f27" translate="yes" xml:space="preserve">
          <source>Guesses the table name (in forced lower-case) based on the name of the class in the inheritance hierarchy descending directly from &lt;a href=&quot;../base&quot;&gt;ActiveRecord::Base&lt;/a&gt;. So if the hierarchy looks like: Reply &amp;lt; Message &amp;lt; &lt;a href=&quot;../base&quot;&gt;ActiveRecord::Base&lt;/a&gt;, then Message is used to guess the table name even when called on Reply. The rules used to do the guess are handled by the Inflector class in Active Support, which knows almost all common English inflections. You can add new inflections in config/initializers/inflections.rb.</source>
          <target state="translated">&lt;a href=&quot;../base&quot;&gt;ActiveRecord :: Base&lt;/a&gt; 에서 직접 내려 오는 상속 계층 구조의 클래스 이름을 기반으로 테이블 이름 (강제 소문자)을 표시합니다 . 따라서 계층 구조가 Reply &amp;lt;Message &amp;lt; &lt;a href=&quot;../base&quot;&gt;ActiveRecord :: Base&lt;/a&gt; 인 경우 Reply에서 호출 될 때도 Message를 사용하여 테이블 이름을 추측합니다. 추측에 사용되는 규칙은 Active Support의 Inflector 클래스에서 처리하며 거의 모든 일반적인 영어 변곡을 알고 있습니다. config / initializers / inflections.rb에 새로운 변곡점을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8cdb4dc902561946abe60d70595a5f96b8a4d5ac" translate="yes" xml:space="preserve">
          <source>Guide Assumptions</source>
          <target state="translated">가이드 가정</target>
        </trans-unit>
        <trans-unit id="1f0bb8f5c7ab9c9d3769fc8a175739533090209d" translate="yes" xml:space="preserve">
          <source>Guide to using built-in Form helpers.</source>
          <target state="translated">내장 된 폼 헬퍼 사용 안내서.</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="a0352c52826a4d14df0e9e687a82cfab78be7042" translate="yes" xml:space="preserve">
          <source>Guides Guidelines</source>
          <target state="translated">가이드 라인 가이드 라인</target>
        </trans-unit>
        <trans-unit id="8373e1b0289be10ca8ff8b88270919a713491ef0" translate="yes" xml:space="preserve">
          <source>Guides marked with this icon are currently being worked on and will not be available in the Guides Index menu. While still useful, they may contain incomplete information and even errors. You can help by reviewing them and posting your comments and corrections.</source>
          <target state="translated">이 아이콘으로 표시된 안내선은 현재 작업 중이며 안내선 색인 메뉴에서 사용할 수 없습니다. 여전히 유용하지만 불완전한 정보와 오류까지 포함 할 수 있습니다. 검토하고 의견과 수정 사항을 게시하면 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="955d157a7f2cd5316cdedbb365e1e22f300bf5dd" translate="yes" xml:space="preserve">
          <source>Gzip::compress</source>
          <target state="translated">Gzip::compress</target>
        </trans-unit>
        <trans-unit id="5d5a9feb84c1e7fa4e847d577835b38ebc389a05" translate="yes" xml:space="preserve">
          <source>Gzip::decompress</source>
          <target state="translated">Gzip::decompress</target>
        </trans-unit>
        <trans-unit id="82d5e015f4cfc7b7064351032f1c4371f19617b4" translate="yes" xml:space="preserve">
          <source>HABTM associations as inline lists</source>
          <target state="translated">인라인 목록으로 HABTM 연관</target>
        </trans-unit>
        <trans-unit id="ce39116c719aafa3203ac9d5c9f428ef873585c9" translate="yes" xml:space="preserve">
          <source>HEAD requests: Rails will transparently convert &lt;code&gt;HEAD&lt;/code&gt; requests into &lt;code&gt;GET&lt;/code&gt; ones, and return just the headers on the way out. This makes &lt;code&gt;HEAD&lt;/code&gt; work reliably in all Rails APIs.</source>
          <target state="translated">HEAD 요청 : Rails는 &lt;code&gt;HEAD&lt;/code&gt; 요청을 &lt;code&gt;GET&lt;/code&gt; 요청으로 투명하게 변환 하고 나갈 때 헤더 만 반환합니다. 따라서 &lt;code&gt;HEAD&lt;/code&gt; 가 모든 Rails API에서 안정적으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="15912dd8f47c22d99af0e6e9880e2be107cb13a2" translate="yes" xml:space="preserve">
          <source>HELP_MAPPINGS</source>
          <target state="translated">HELP_MAPPINGS</target>
        </trans-unit>
        <trans-unit id="87db6cd4da75a7a501827119f82964a6525c0ad9" translate="yes" xml:space="preserve">
          <source>HOST_REGEXP</source>
          <target state="translated">HOST_REGEXP</target>
        </trans-unit>
        <trans-unit id="14b15fe878db44741964a44cc701702acfe6018d" translate="yes" xml:space="preserve">
          <source>HTML5 &lt;code&gt;data-*&lt;/code&gt; attributes can be set with a single &lt;code&gt;data&lt;/code&gt; key pointing to a hash of sub-attributes.</source>
          <target state="translated">하위 속성의 해시를 가리키는 단일 &lt;code&gt;data&lt;/code&gt; 키로 HTML5 &lt;code&gt;data-*&lt;/code&gt; 속성을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad9ac846dd3d856a9250cc997bfc08184c2b6c7f" translate="yes" xml:space="preserve">
          <source>HTML_ESCAPE</source>
          <target state="translated">HTML_ESCAPE</target>
        </trans-unit>
        <trans-unit id="36a3616ea2c0c9a4588c3ff6486b261f393b451d" translate="yes" xml:space="preserve">
          <source>HTML_ESCAPE_ONCE_REGEXP</source>
          <target state="translated">HTML_ESCAPE_ONCE_REGEXP</target>
        </trans-unit>
        <trans-unit id="f8adf36ed0a0245994ceb732d9e6ba7ff121ad7f" translate="yes" xml:space="preserve">
          <source>HTTP Authentications</source>
          <target state="translated">HTTP 인증</target>
        </trans-unit>
        <trans-unit id="c9767763630d56f1c44e05a46f8c3471e80931df" translate="yes" xml:space="preserve">
          <source>HTTP Basic Authentication</source>
          <target state="translated">HTTP 기본 인증</target>
        </trans-unit>
        <trans-unit id="ede10debab277f68952d03434da199050db79940" translate="yes" xml:space="preserve">
          <source>HTTP Cache-Control Extensions for Stale Content. See &lt;a href=&quot;https://tools.ietf.org/html/rfc5861&quot;&gt;tools.ietf.org/html/rfc5861&lt;/a&gt; It helps to cache an asset and serve it while is being revalidated and/or returning with an error.</source>
          <target state="translated">오래된 컨텐츠를위한 HTTP 캐시 제어 확장. &lt;a href=&quot;https://tools.ietf.org/html/rfc5861&quot;&gt;tools.ietf.org/html/rfc5861을&lt;/a&gt; 참조하십시오 . 자산을 캐시하고 재확인하거나 오류와 함께 반환하는 동안 자산을 ​​제공하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="eb83352ed4084c1cd106c8e133556fa371d5994e" translate="yes" xml:space="preserve">
          <source>HTTP Content-Disposition field</source>
          <target state="translated">HTTP 컨텐츠 처리 필드</target>
        </trans-unit>
        <trans-unit id="011efe93f0ebe0676b5950a39a21ff0e2e9465df" translate="yes" xml:space="preserve">
          <source>HTTP Content-Type field</source>
          <target state="translated">HTTP 컨텐츠 유형 필드</target>
        </trans-unit>
        <trans-unit id="d8fd69cb5e8f5aea463b93958db64a99a9c2775b" translate="yes" xml:space="preserve">
          <source>HTTP Digest Authentication</source>
          <target state="translated">HTTP 다이제스트 인증</target>
        </trans-unit>
        <trans-unit id="c69a7a324f36557f45339d99a65fb6ffd4d42545" translate="yes" xml:space="preserve">
          <source>HTTP PATCH</source>
          <target state="translated">HTTP 패치</target>
        </trans-unit>
        <trans-unit id="f31b86dfebd506e755fd0821e0114d6cf7b14383" translate="yes" xml:space="preserve">
          <source>HTTP Status Code</source>
          <target state="translated">HTTP 상태 코드</target>
        </trans-unit>
        <trans-unit id="9e7e8330c132a4390643d48e5b3602a028852f31" translate="yes" xml:space="preserve">
          <source>HTTP Verb</source>
          <target state="translated">HTTP 동사</target>
        </trans-unit>
        <trans-unit id="b9e4fbd7324dc264b88888204cf4cc1f86f14171" translate="yes" xml:space="preserve">
          <source>HTTP Verb Constraints</source>
          <target state="translated">HTTP 동사 제약</target>
        </trans-unit>
        <trans-unit id="93accbd5be212aff8e88dab13a7b896238df4f83" translate="yes" xml:space="preserve">
          <source>HTTP basic authentication is an authentication scheme that is supported by the majority of browsers and other HTTP clients. As an example, consider an administration section which will only be available by entering a username and a password into the browser's HTTP basic dialog window. Using the built-in authentication is quite easy and only requires you to use one method, &lt;code&gt;http_basic_authenticate_with&lt;/code&gt;.</source>
          <target state="translated">HTTP 기본 인증은 대부분의 브라우저 및 기타 HTTP 클라이언트에서 지원되는 인증 체계입니다. 예를 들어, 브라우저의 HTTP 기본 대화 창에 사용자 이름과 비밀번호를 입력해야만 사용할 수있는 관리 섹션을 고려하십시오. 내장 인증을 사용하는 것은 매우 쉽고 &lt;code&gt;http_basic_authenticate_with&lt;/code&gt; 메소드 만 사용하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="ab623ae55f29374a07b76a3428f0c3225f2f799a" translate="yes" xml:space="preserve">
          <source>HTTP digest authentication is superior to the basic authentication as it does not require the client to send an unencrypted password over the network (though HTTP basic authentication is safe over HTTPS). Using digest authentication with Rails is quite easy and only requires using one method, &lt;code&gt;authenticate_or_request_with_http_digest&lt;/code&gt;.</source>
          <target state="translated">HTTP 다이제스트 인증은 클라이언트가 네트워크를 통해 암호화되지 않은 암호를 보내지 않아도되므로 기본 인증보다 우수합니다 (HTTP 기본 인증은 HTTPS를 통해 안전하지만). 레일 다이제스트 인증을 사용하는 것은 매우 쉽습니다 만, 하나의 방법을 사용하여 필요 &lt;code&gt;authenticate_or_request_with_http_digest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91b3ccb3b9996cf9b462a1c7c4e6635d2a002dd7" translate="yes" xml:space="preserve">
          <source>HTTP request headers have a Referer, User-Agent (client software), and Cookie field, among others. Response headers for example have a status code, Cookie, and Location (redirection target URL) field. All of them are user-supplied and may be manipulated with more or less effort. &lt;em&gt;Remember to escape these header fields, too.&lt;/em&gt; For example when you display the user agent in an administration area.</source>
          <target state="translated">HTTP 요청 헤더에는 Referer, User-Agent (클라이언트 소프트웨어) 및 Cookie 필드가 있습니다. 예를 들어 응답 헤더에는 상태 코드, 쿠키 및 위치 (리디렉션 대상 URL) 필드가 있습니다. 그들 모두는 사용자가 제공하며 다소의 노력으로 조작 될 수 있습니다. &lt;em&gt;이 헤더 필드도 피하십시오. &lt;/em&gt;예를 들어 관리 영역에 사용자 에이전트를 표시 할 때.</target>
        </trans-unit>
        <trans-unit id="19cc9c72e4b88a0525ade58484574776a186aded" translate="yes" xml:space="preserve">
          <source>HTTP request verb</source>
          <target state="translated">HTTP 요청 동사</target>
        </trans-unit>
        <trans-unit id="cb08d01adf56fc4d8767569448c7a8d5ca881958" translate="yes" xml:space="preserve">
          <source>HTTP response code</source>
          <target state="translated">HTTP 응답 코드</target>
        </trans-unit>
        <trans-unit id="2f229ba9fad0819dad34757f276e176e1f9815df" translate="yes" xml:space="preserve">
          <source>HTTP status code</source>
          <target state="translated">HTTP 상태 코드</target>
        </trans-unit>
        <trans-unit id="a33a7041e144db3e9f136557018a94dafcd6e8b3" translate="yes" xml:space="preserve">
          <source>HTTP_HEADER</source>
          <target state="translated">HTTP_HEADER</target>
        </trans-unit>
        <trans-unit id="aaaaa9967509f992c9e76aaf3aa8641ebaca5a47" translate="yes" xml:space="preserve">
          <source>HTTP_IF_MODIFIED_SINCE</source>
          <target state="translated">HTTP_IF_MODIFIED_SINCE</target>
        </trans-unit>
        <trans-unit id="f5620d14a557b7e4e4951cf5f230f911421963f5" translate="yes" xml:space="preserve">
          <source>HTTP_IF_NONE_MATCH</source>
          <target state="translated">HTTP_IF_NONE_MATCH</target>
        </trans-unit>
        <trans-unit id="ddc6434c5363405a75a3b120922320cfa9174ca4" translate="yes" xml:space="preserve">
          <source>HTTP_METHODS</source>
          <target state="translated">HTTP_METHODS</target>
        </trans-unit>
        <trans-unit id="7ba7991c7e9b0c06056d248a990d17cf65c4e3f5" translate="yes" xml:space="preserve">
          <source>HTTP_METHOD_LOOKUP</source>
          <target state="translated">HTTP_METHOD_LOOKUP</target>
        </trans-unit>
        <trans-unit id="6a67696abadf4494234e52ba41755233e32c6e5c" translate="yes" xml:space="preserve">
          <source>Halting Callback Chains via &lt;code&gt;throw(:abort)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;throw(:abort)&lt;/code&gt; 를 통해 콜백 체인 중단</target>
        </trans-unit>
        <trans-unit id="45bdea3f6d6efdf596509d7649094d5edcc5bd35" translate="yes" xml:space="preserve">
          <source>Halting Execution</source>
          <target state="translated">실행 중단</target>
        </trans-unit>
        <trans-unit id="f974e592e89067f6833c88b45402afd1f27eb9ab" translate="yes" xml:space="preserve">
          <source>Handled at the Action Pack layer:</source>
          <target state="translated">Action Pack 레이어에서 처리 :</target>
        </trans-unit>
        <trans-unit id="c1f7ef16ff5f063412d9ad07b765e34ee745272c" translate="yes" xml:space="preserve">
          <source>Handled at the middleware layer:</source>
          <target state="translated">미들웨어 계층에서 처리 :</target>
        </trans-unit>
        <trans-unit id="faa6e979983b7500b84dc1462eda1bdf1ef92aa2" translate="yes" xml:space="preserve">
          <source>Handlers are inherited. They are searched from right to left, from bottom to top, and up the hierarchy. The handler of the first class for which &lt;code&gt;exception.is_a?(klass)&lt;/code&gt; holds true is the one invoked, if any.</source>
          <target state="translated">핸들러는 상속됩니다. 오른쪽에서 왼쪽으로, 위에서 아래로, 계층 구조에서 검색됩니다. &lt;code&gt;exception.is_a?(klass)&lt;/code&gt; 가 참인 첫 번째 클래스의 핸들러는 호출 된 핸들러입니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="c6e4ab25a06595bbb69571a34dd1bf1bd4f4487c" translate="yes" xml:space="preserve">
          <source>Handlers that take one argument will be called with the exception, so that the exception can be inspected when dealing with it.</source>
          <target state="translated">하나의 인수를 취하는 핸들러는 예외와 함께 호출되므로 예외를 처리 할 때 예외를 검사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="981ada5c9cddef2256898f941de63ecc1ea8b17a" translate="yes" xml:space="preserve">
          <source>Handles default conversions: &lt;a href=&quot;conversion#method-i-to_model&quot;&gt;#to_model&lt;/a&gt;, &lt;a href=&quot;conversion#method-i-to_key&quot;&gt;#to_key&lt;/a&gt;, &lt;a href=&quot;conversion#method-i-to_param&quot;&gt;#to_param&lt;/a&gt;, and to_partial_path.</source>
          <target state="translated">기본 변환을 처리합니다 : &lt;a href=&quot;conversion#method-i-to_model&quot;&gt;#to_model&lt;/a&gt; , &lt;a href=&quot;conversion#method-i-to_key&quot;&gt;#to_key&lt;/a&gt; , &lt;a href=&quot;conversion#method-i-to_param&quot;&gt;#to_param&lt;/a&gt; 및 to_partial_path</target>
        </trans-unit>
        <trans-unit id="6c088c01de8e92d3e6a5a1ff4c8bd34e4f4c5c61" translate="yes" xml:space="preserve">
          <source>Handles four options: :redis block, :redis instance, single :url string, and multiple :url strings.</source>
          <target state="translated">: redis 블록, : redis 인스턴스, 단일 : url 문자열 및 여러 : url 문자열의 네 가지 옵션을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="15e493a667af0a12a2088ff73d7f1abc345ac59d" translate="yes" xml:space="preserve">
          <source>Handles implicit rendering for a controller action that does not explicitly respond with &lt;code&gt;render&lt;/code&gt;, &lt;code&gt;respond_to&lt;/code&gt;, &lt;code&gt;redirect&lt;/code&gt;, or &lt;code&gt;head&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; , &lt;code&gt;respond_to&lt;/code&gt; , &lt;code&gt;redirect&lt;/code&gt; 또는 &lt;code&gt;head&lt;/code&gt; 로 명시 적으로 응답하지 않는 컨트롤러 작업에 대한 암시 적 렌더링을 처리 합니다.</target>
        </trans-unit>
        <trans-unit id="4d00068958b049897af8863507aef8fffa11b039" translate="yes" xml:space="preserve">
          <source>Has Many associations can be configured with the &lt;code&gt;:through&lt;/code&gt; option to use an explicit join model to retrieve the data. This operates similarly to a &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; association. The advantage is that you're able to add validations, callbacks, and extra attributes on the join model. Consider the following schema:</source>
          <target state="translated">&lt;code&gt;:through&lt;/code&gt; 옵션으로 많은 연관을 구성 하여 명시 적 결합 모델을 사용하여 데이터를 검색 할 수 있습니다. 이것은 &lt;a href=&quot;classmethods#method-i-has_and_belongs_to_many&quot;&gt;has_and_belongs_to_many&lt;/a&gt; 연관과 유사하게 작동합니다 . 장점은 조인 모델에 유효성 검사, 콜백 및 추가 특성을 추가 할 수 있다는 것입니다. 다음 스키마를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="9b7d0ceea196c3867d88ad7e17445d26d315c6b7" translate="yes" xml:space="preserve">
          <source>Has and Belongs to Many join tables use the same idea, but add a &lt;code&gt;_join&lt;/code&gt; suffix:</source>
          <target state="translated">많은 조인 테이블은 동일한 아이디어를 사용하지만 &lt;code&gt;_join&lt;/code&gt; 접미사를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="873507a022b58de26a88deae87268cbd8d6af5b1" translate="yes" xml:space="preserve">
          <source>Hash</source>
          <target state="translated">Hash</target>
        </trans-unit>
        <trans-unit id="de500c888845b9525f70ae76cb2e474f7dd72bb7" translate="yes" xml:space="preserve">
          <source>Hash Conditions</source>
          <target state="translated">해시 조건</target>
        </trans-unit>
        <trans-unit id="16fbe0617aca377fd0974c933b350b36c6eb99cf" translate="yes" xml:space="preserve">
          <source>Hash and Array Parameters</source>
          <target state="translated">해시 및 배열 매개 변수</target>
        </trans-unit>
        <trans-unit id="90b6d0759e161f6432798e090607dfe7507586f6" translate="yes" xml:space="preserve">
          <source>Hash of request parameters without any filtered parameter</source>
          <target state="translated">필터링 된 매개 변수가없는 요청 매개 변수의 해시</target>
        </trans-unit>
        <trans-unit id="d72d75c1f21b1b1dab02be408b37ba2c173c7cf0" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess</source>
          <target state="translated">HashWithIndifferentAccess</target>
        </trans-unit>
        <trans-unit id="b2ce5bad9017e895965620a2409ed2bf71028b30" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#[]</source>
          <target state="translated">HashWithIndifferentAccess#[]</target>
        </trans-unit>
        <trans-unit id="eff6e5ee1587fa895efa7fb9d7e8bb3ee4c31fd9" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#[]=</source>
          <target state="translated">HashWithIndifferentAccess#[]=</target>
        </trans-unit>
        <trans-unit id="5eef16857de235c1d1ffe0f2766fa915cb4a64fe" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#assoc</source>
          <target state="translated">HashWithIndifferentAccess#assoc</target>
        </trans-unit>
        <trans-unit id="20e961d97a4793a2b43d5c131f013d7622aa0dc4" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#compact</source>
          <target state="translated">HashWithIndifferentAccess#compact</target>
        </trans-unit>
        <trans-unit id="5c24f1c516a8996973f18136e68644b4112343ee" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#convert_key</source>
          <target state="translated">HashWithIndifferentAccess#convert_key</target>
        </trans-unit>
        <trans-unit id="9a637647d7db5dfa08f32292bda301fe3b7f3401" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#convert_value</source>
          <target state="translated">HashWithIndifferentAccess#convert_value</target>
        </trans-unit>
        <trans-unit id="c63619bfe779ed7a22118fa134ac5623b45b6182" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#deep_stringify_keys</source>
          <target state="translated">HashWithIndifferentAccess#deep_stringify_keys</target>
        </trans-unit>
        <trans-unit id="0e25f52b400cd7358606af0226b79eb928ec0912" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#deep_stringify_keys!</source>
          <target state="translated">HashWithIndifferentAccess#deep_stringify_keys!</target>
        </trans-unit>
        <trans-unit id="daa889d711136cc9b2d69e5c6f956b1637ae0a15" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#deep_symbolize_keys</source>
          <target state="translated">HashWithIndifferentAccess#deep_symbolize_keys</target>
        </trans-unit>
        <trans-unit id="64e1be4c35bfc97a8a7e6e04930bc8bd4bbf8f61" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#default</source>
          <target state="translated">HashWithIndifferentAccess#default</target>
        </trans-unit>
        <trans-unit id="cecaff522051a75441f23fe40d57d3a6b389ffd9" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#delete</source>
          <target state="translated">HashWithIndifferentAccess#delete</target>
        </trans-unit>
        <trans-unit id="1b1f2aa3027e0c8c52c471aa6b8cd4d83459145b" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#dig</source>
          <target state="translated">HashWithIndifferentAccess#dig</target>
        </trans-unit>
        <trans-unit id="7e8d6aeaa4c62956a788736b56c0b15778ddbc46" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#dup</source>
          <target state="translated">HashWithIndifferentAccess#dup</target>
        </trans-unit>
        <trans-unit id="7bf62e408343f9176656b16c63f284aaaf2bec14" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#except</source>
          <target state="translated">HashWithIndifferentAccess#except</target>
        </trans-unit>
        <trans-unit id="2c6f5cf4baa3d797475b26890f0b6d7861208058" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#extractable_options?</source>
          <target state="translated">HashWithIndifferentAccess#extractable_options?</target>
        </trans-unit>
        <trans-unit id="f5df0b5482f96580d944326d7b2f83adc9c8f58c" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#fetch</source>
          <target state="translated">HashWithIndifferentAccess#fetch</target>
        </trans-unit>
        <trans-unit id="d8f71819faf10fef27c9d3eca66cf6675ef4f97d" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#fetch_values</source>
          <target state="translated">HashWithIndifferentAccess#fetch_values</target>
        </trans-unit>
        <trans-unit id="c18c5be04e19d60c7098955238c489acd5ea6b0d" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#has_key?</source>
          <target state="translated">HashWithIndifferentAccess#has_key?</target>
        </trans-unit>
        <trans-unit id="304df731dc3bc38aca517827407775bef179738b" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#include?</source>
          <target state="translated">HashWithIndifferentAccess#include?</target>
        </trans-unit>
        <trans-unit id="72f14b566d9688173d13d73b984a05e10caa964e" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#key?</source>
          <target state="translated">HashWithIndifferentAccess#key?</target>
        </trans-unit>
        <trans-unit id="b5b5b6c876b0c754fcbad9cf62aa13d9758952d3" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#member?</source>
          <target state="translated">HashWithIndifferentAccess#member?</target>
        </trans-unit>
        <trans-unit id="1422f40ea93594e69c323ad03fa3ff9b5315464f" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#merge</source>
          <target state="translated">HashWithIndifferentAccess#merge</target>
        </trans-unit>
        <trans-unit id="e1479727c5734dd686bca4b5b24c3a72fc70df88" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#merge!</source>
          <target state="translated">HashWithIndifferentAccess#merge!</target>
        </trans-unit>
        <trans-unit id="b1d1083b9dce51fe92ee5b7fa79ba35385d48076" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#nested_under_indifferent_access</source>
          <target state="translated">HashWithIndifferentAccess#nested_under_indifferent_access</target>
        </trans-unit>
        <trans-unit id="bc35bad7dbabdc878fbbe1792352254d39f37d66" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#regular_update</source>
          <target state="translated">HashWithIndifferentAccess#regular_update</target>
        </trans-unit>
        <trans-unit id="634a42514fbdb3622bdc3c90aa62c6dab80651c2" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#regular_writer</source>
          <target state="translated">HashWithIndifferentAccess#regular_writer</target>
        </trans-unit>
        <trans-unit id="37c7ad2acac666cf642bb1d3a30b2f8f9b89ae8c" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#reject</source>
          <target state="translated">HashWithIndifferentAccess#reject</target>
        </trans-unit>
        <trans-unit id="d75689c40f5de22aab9646b03256ec77f45b2953" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#replace</source>
          <target state="translated">HashWithIndifferentAccess#replace</target>
        </trans-unit>
        <trans-unit id="6ebbb730d371b7212865535d462d14ba81ea0a41" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#reverse_merge</source>
          <target state="translated">HashWithIndifferentAccess#reverse_merge</target>
        </trans-unit>
        <trans-unit id="dc3a79455e9e5c2ef204cfc943ed4eac332e09df" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#reverse_merge!</source>
          <target state="translated">HashWithIndifferentAccess#reverse_merge!</target>
        </trans-unit>
        <trans-unit id="d46f18dd3ee2ab829ac9950c4cbcfb70e14f77b2" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#select</source>
          <target state="translated">HashWithIndifferentAccess#select</target>
        </trans-unit>
        <trans-unit id="773d7a1f890a6474d0d3e9f26ac9bbfd411de5ce" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#set_defaults</source>
          <target state="translated">HashWithIndifferentAccess#set_defaults</target>
        </trans-unit>
        <trans-unit id="65e57d26a20f0dd1b7e22e601fb4635311095aff" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#slice</source>
          <target state="translated">HashWithIndifferentAccess#slice</target>
        </trans-unit>
        <trans-unit id="4b72f88cfe45f0be70cf1416f242769930f3c3f2" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#slice!</source>
          <target state="translated">HashWithIndifferentAccess#slice!</target>
        </trans-unit>
        <trans-unit id="8d414c273edb6505b3d89a347dc055fe67a16247" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#store</source>
          <target state="translated">HashWithIndifferentAccess#store</target>
        </trans-unit>
        <trans-unit id="76547d151b2cef05b8ee5411f0e46898b5a71608" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#stringify_keys</source>
          <target state="translated">HashWithIndifferentAccess#stringify_keys</target>
        </trans-unit>
        <trans-unit id="da1b2b24f9bbf06ae3732e481fd9d43a047d93a3" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#stringify_keys!</source>
          <target state="translated">HashWithIndifferentAccess#stringify_keys!</target>
        </trans-unit>
        <trans-unit id="0ca81eb400a9a5daf6057cca325c34e3560c0dce" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#symbolize_keys</source>
          <target state="translated">HashWithIndifferentAccess#symbolize_keys</target>
        </trans-unit>
        <trans-unit id="0cf53c77cf0a224aa373c87f5c6652457e6d281d" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#to_hash</source>
          <target state="translated">HashWithIndifferentAccess#to_hash</target>
        </trans-unit>
        <trans-unit id="a77399bcd3002e7bd4afc40978f8c952f86611f4" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#to_options</source>
          <target state="translated">HashWithIndifferentAccess#to_options</target>
        </trans-unit>
        <trans-unit id="59251d46df0f21d43bf9a9ed82bd90b71000ea19" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#to_options!</source>
          <target state="translated">HashWithIndifferentAccess#to_options!</target>
        </trans-unit>
        <trans-unit id="b5c625a61a4dd3d220aabf3940768a9dc20862fa" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#transform_keys</source>
          <target state="translated">HashWithIndifferentAccess#transform_keys</target>
        </trans-unit>
        <trans-unit id="2f30f88fedbf8ad8e0d2ca7f571e7b59a5be0eed" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#transform_keys!</source>
          <target state="translated">HashWithIndifferentAccess#transform_keys!</target>
        </trans-unit>
        <trans-unit id="2885146f9ddba99ae75b35dc9420cca9f7d904e5" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#transform_values</source>
          <target state="translated">HashWithIndifferentAccess#transform_values</target>
        </trans-unit>
        <trans-unit id="58ee5ebccd6222367815f75d70c21333a46200d4" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#update</source>
          <target state="translated">HashWithIndifferentAccess#update</target>
        </trans-unit>
        <trans-unit id="a10afb047361609ac3ebe3f17ff2ebffe8fe877f" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#values_at</source>
          <target state="translated">HashWithIndifferentAccess#values_at</target>
        </trans-unit>
        <trans-unit id="71916e4f49448be040a519ef2010578c9c92b202" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#with_defaults</source>
          <target state="translated">HashWithIndifferentAccess#with_defaults</target>
        </trans-unit>
        <trans-unit id="846f5481433672f625144b8fbd61fff8bfa58dae" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#with_defaults!</source>
          <target state="translated">HashWithIndifferentAccess#with_defaults!</target>
        </trans-unit>
        <trans-unit id="f5852ab03e9b5bdc1833b7178166ebbb8bdab523" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#with_indifferent_access</source>
          <target state="translated">HashWithIndifferentAccess#with_indifferent_access</target>
        </trans-unit>
        <trans-unit id="141dadfad2679bf9fff5525224773643980e7ee0" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess#without</source>
          <target state="translated">HashWithIndifferentAccess#without</target>
        </trans-unit>
        <trans-unit id="23048037e00544a6b7468ad170290ee5af2e9a62" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess::[]</source>
          <target state="translated">HashWithIndifferentAccess::[]</target>
        </trans-unit>
        <trans-unit id="d9ee48ddb9fc7bb0ec6e7411c0b25188018c89f3" translate="yes" xml:space="preserve">
          <source>HashWithIndifferentAccess::new</source>
          <target state="translated">HashWithIndifferentAccess::new</target>
        </trans-unit>
        <trans-unit id="3164781605535298ed2be2a29f3cd66c7040b296" translate="yes" xml:space="preserve">
          <source>Hashes also respond to &lt;code&gt;to_query&lt;/code&gt; but with a different signature. If no argument is passed a call generates a sorted series of key/value assignments calling &lt;code&gt;to_query(key)&lt;/code&gt; on its values. Then it joins the result with &quot;&amp;amp;&quot;:</source>
          <target state="translated">해시는 또한 다른 서명 으로 &lt;code&gt;to_query&lt;/code&gt; 에 응답합니다 . 인수가 전달되지 않으면 호출은 값에 대해 &lt;code&gt;to_query(key)&lt;/code&gt; 를 호출하는 정렬 된 일련의 키 / 값 지정을 생성 합니다. 그런 다음 결과를 &quot;&amp;amp;&quot;와 결합합니다.</target>
        </trans-unit>
        <trans-unit id="51f2135cd5661b7f8f797ba140c1d8f696fafd04" translate="yes" xml:space="preserve">
          <source>Hashes can be nested as many levels as required, for example:</source>
          <target state="translated">해시는 필요한만큼 많은 레벨로 중첩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="265eb70fb4d686c6a45cfd4ca00df9ce9e63c133" translate="yes" xml:space="preserve">
          <source>Hashes with integer keys are treated differently, and you can declare the attributes as if they were direct children. You get these kinds of parameters when you use &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; in combination with a &lt;code&gt;has_many&lt;/code&gt; association:</source>
          <target state="translated">정수 키가있는 해시는 다르게 취급되며 속성을 마치 직계 자식 인 것처럼 선언 할 수 있습니다. &lt;code&gt;has_many&lt;/code&gt; 연관 과 함께 &lt;code&gt;accepts_nested_attributes_for&lt;/code&gt; 를 사용하면 다음과 같은 종류의 매개 변수를 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="381e704542d9d74c4b012c421315c1cd85eb9d98" translate="yes" xml:space="preserve">
          <source>Have a &lt;code&gt;translation-missing&lt;/code&gt; class applied</source>
          <target state="translated">이 &lt;code&gt;translation-missing&lt;/code&gt; 클래스에 적용</target>
        </trans-unit>
        <trans-unit id="f70f562d1ffb3860fbdc0282427656277df60389" translate="yes" xml:space="preserve">
          <source>Have a look at the generators help output for further details.</source>
          <target state="translated">자세한 내용은 생성기 출력을 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="f578c55b6f03f0a711cc5295d86a1c3ebda9d9a4" translate="yes" xml:space="preserve">
          <source>Have a look at various gems which simplify working with routes: &lt;a href=&quot;https://github.com/svenfuchs/routing-filter/tree/master&quot;&gt;routing_filter&lt;/a&gt;, &lt;a href=&quot;https://github.com/francesc/rails-translate-routes&quot;&gt;rails-translate-routes&lt;/a&gt;, &lt;a href=&quot;https://github.com/enriclluelles/route_translator&quot;&gt;route_translator&lt;/a&gt;.</source>
          <target state="translated">: 루트 작업을 간소화 다양한 보석을 살펴 가지고 &lt;a href=&quot;https://github.com/svenfuchs/routing-filter/tree/master&quot;&gt;routing_filter&lt;/a&gt; , &lt;a href=&quot;https://github.com/francesc/rails-translate-routes&quot;&gt;레일 - 변환 - 루트&lt;/a&gt; , &lt;a href=&quot;https://github.com/enriclluelles/route_translator&quot;&gt;route_translator을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="efee3f622d7f432ec6b884a1beab008da63e1629" translate="yes" xml:space="preserve">
          <source>Have a titleized version of the last key segment as text</source>
          <target state="translated">텍스트로 마지막 키 세그먼트의 제목이 지정된 버전을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="9a3aa20fbb9238e4176e03594d12d5c6b257d499" translate="yes" xml:space="preserve">
          <source>Having</source>
          <target state="translated">Having</target>
        </trans-unit>
        <trans-unit id="907db8b36bf28fccdc7e59f42a0a9cc5f14e2788" translate="yes" xml:space="preserve">
          <source>Having one single place in the admin interface or Intranet, where the input has not been sanitized, makes the entire application vulnerable. Possible exploits include stealing the privileged administrator's cookie, injecting an iframe to steal the administrator's password or installing malicious software through browser security holes to take over the administrator's computer.</source>
          <target state="translated">입력이 삭제되지 않은 관리 인터페이스 또는 인트라넷에 단일 위치가 있으면 전체 응용 프로그램이 취약 해집니다. 가능한 악용으로는 권한있는 관리자 쿠키를 도용하거나, iframe을 삽입하여 관리자의 비밀번호를 도용하거나 브라우저 보안 허점을 통해 악성 소프트웨어를 설치하여 관리자의 컴퓨터를 인계 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8fe010f51069ff2fa24a1ce1349e7621e928fc07" translate="yes" xml:space="preserve">
          <source>Head#head</source>
          <target state="translated">Head#head</target>
        </trans-unit>
        <trans-unit id="58792c9cd9ad18f62c1d9f9c5ed6d5383229402f" translate="yes" xml:space="preserve">
          <source>Header Injection</source>
          <target state="translated">헤더 주입</target>
        </trans-unit>
        <trans-unit id="2741031dcc963de361fe2b4a580cf216eabae8c0" translate="yes" xml:space="preserve">
          <source>Header and Redirection Responses: &lt;code&gt;head :no_content&lt;/code&gt; and &lt;code&gt;redirect_to user_url(current_user)&lt;/code&gt; come in handy. Sure, you could manually add the response headers, but why?</source>
          <target state="translated">헤더 및 리디렉션 응답 : &lt;code&gt;head :no_content&lt;/code&gt; 및 &lt;code&gt;redirect_to user_url(current_user)&lt;/code&gt; 이 유용합니다. 물론, 수동으로 응답 헤더를 추가 할 수 있지만 그 이유는 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="d6cc36014478aa161802167e872d45a5e90ea507" translate="yes" xml:space="preserve">
          <source>Headers used for the response.</source>
          <target state="translated">응답에 사용되는 헤더.</target>
        </trans-unit>
        <trans-unit id="1545de843c9a0e8ab0a4fdfbce6b9e5ebb93f99c" translate="yes" xml:space="preserve">
          <source>Headers, cookies, session and flash</source>
          <target state="translated">헤더, 쿠키, 세션 및 플래시</target>
        </trans-unit>
        <trans-unit id="ad5ded5f87be4c57f718448abe2a23e9e044035a" translate="yes" xml:space="preserve">
          <source>Headless browsers such as headless Chrome and headless Firefox are also supported. You can use these browsers by setting the &lt;code&gt;:using&lt;/code&gt; argument to &lt;code&gt;:headless_chrome&lt;/code&gt; or &lt;code&gt;:headless_firefox&lt;/code&gt;.</source>
          <target state="translated">헤드리스 Chrome 및 헤드리스 Firefox와 같은 헤드리스 브라우저도 지원됩니다. &lt;code&gt;:using&lt;/code&gt; 인수를 &lt;code&gt;:headless_chrome&lt;/code&gt; 또는 &lt;code&gt;:headless_firefox&lt;/code&gt; 로 설정하여 이러한 브라우저를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f81c3e5ae1c64bf416fdcbeec05e32433c3ba356" translate="yes" xml:space="preserve">
          <source>Height (pixels)</source>
          <target state="translated">높이 (픽셀)</target>
        </trans-unit>
        <trans-unit id="3c9bf814630d8f16602f8937c25f9740dc4fb12a" translate="yes" xml:space="preserve">
          <source>Hello, Rails!</source>
          <target state="translated">안녕 레일즈!</target>
        </trans-unit>
        <trans-unit id="584bc47f311fd255840fde0c603be582895837c0" translate="yes" xml:space="preserve">
          <source>Helper methods defined in a fixture will not be available in other fixtures, to prevent against unwanted inter-test dependencies. Methods used by multiple fixtures should be defined in a module that is included in &lt;a href=&quot;fixtureset#method-c-context_class&quot;&gt;::context_class&lt;/a&gt;.</source>
          <target state="translated">픽스처에 정의 된 헬퍼 메소드는 다른 픽스처에서 사용할 수 없으므로 원하지 않는 테스트 간 종속성을 방지 할 수 있습니다. 여러 조명기에서 사용하는 메소드는 &lt;a href=&quot;fixtureset#method-c-context_class&quot;&gt;:: context_class에&lt;/a&gt; 포함 된 모듈에서 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d856b215c5b98c2e768952e8308189eb7983790e" translate="yes" xml:space="preserve">
          <source>Helper methods that are used in multiple fixtures should be defined on modules included in the newly introduced &lt;code&gt;ActiveRecord::FixtureSet.context_class&lt;/code&gt;, in &lt;code&gt;test_helper.rb&lt;/code&gt;.</source>
          <target state="translated">다중 조명기에 사용되는 헬퍼 메소드 는 &lt;code&gt;test_helper.rb&lt;/code&gt; 에 새로 도입 된 &lt;code&gt;ActiveRecord::FixtureSet.context_class&lt;/code&gt; 포함 된 모듈에 정의되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="1694c6bd2c7e62fb66cc5082c18a33a04ccaf4aa" translate="yes" xml:space="preserve">
          <source>Helper to define a test method using a &lt;a href=&quot;../../string&quot;&gt;String&lt;/a&gt;. Under the hood, it replaces spaces with underscores and defines the test method.</source>
          <target state="translated">도우미는 사용하여 테스트 방법을 정의하는 &lt;a href=&quot;../../string&quot;&gt;문자열&lt;/a&gt; . 후드 아래에서 공백을 밑줄로 바꾸고 테스트 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="3c9b3433e6f225e4ae00ef2041d44d91bfbf7113" translate="yes" xml:space="preserve">
          <source>Helpers</source>
          <target state="translated">Helpers</target>
        </trans-unit>
        <trans-unit id="68bd3ed8c8c90fe0599039a2240a4f80e1103359" translate="yes" xml:space="preserve">
          <source>Helpers Available for Integration Tests</source>
          <target state="translated">통합 테스트에 사용 가능한 헬퍼</target>
        </trans-unit>
        <trans-unit id="f91ba5b56d1cd987054ac0144f79857a91d9f134" translate="yes" xml:space="preserve">
          <source>Helpers Loading Order</source>
          <target state="translated">도우미 로딩 순서</target>
        </trans-unit>
        <trans-unit id="f63132c1b12a21e5430733a20d6a1ea0981d3987" translate="yes" xml:space="preserve">
          <source>Helpers for Generating Form Elements</source>
          <target state="translated">폼 요소 생성을위한 헬퍼</target>
        </trans-unit>
        <trans-unit id="ebf767f6f26b147b1953cc19995728bce91f2bb2" translate="yes" xml:space="preserve">
          <source>Helpers for creating and wrapping delivery behavior, used by &lt;a href=&quot;../deliverymethods&quot;&gt;DeliveryMethods&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../deliverymethods&quot;&gt;DeliveryMethods가&lt;/a&gt; 사용하는 전달 동작 작성 및 랩핑을위한 헬퍼 .</target>
        </trans-unit>
        <trans-unit id="3f00b1daf2776db2287e400580db83e08fcd1249" translate="yes" xml:space="preserve">
          <source>Helpers take that into account:</source>
          <target state="translated">도우미는이를 고려합니다.</target>
        </trans-unit>
        <trans-unit id="a9dee7e2937366b368124619d842a4d982d51c1c" translate="yes" xml:space="preserve">
          <source>Helpers#helpers</source>
          <target state="translated">Helpers#helpers</target>
        </trans-unit>
        <trans-unit id="e85eb95a10d59ab23a3eee9eff7fb360830896c4" translate="yes" xml:space="preserve">
          <source>Helpers::ActionCableHelper</source>
          <target state="translated">Helpers::ActionCableHelper</target>
        </trans-unit>
        <trans-unit id="d6e512b0f5036fcc01a8f3b100b7f135c68f72d7" translate="yes" xml:space="preserve">
          <source>Helpers::ActionCableHelper#action_cable_meta_tag</source>
          <target state="translated">Helpers::ActionCableHelper#action_cable_meta_tag</target>
        </trans-unit>
        <trans-unit id="8899ee8677568f42c9568e455fc9d15a5a623cb8" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods</source>
          <target state="translated">Helpers::ClassMethods</target>
        </trans-unit>
        <trans-unit id="8bcd4a1c3ba2cbb0f21b7830eb74e08e6fe8e274" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#all_helpers_from_path</source>
          <target state="translated">Helpers::ClassMethods#all_helpers_from_path</target>
        </trans-unit>
        <trans-unit id="f48d03c8b6f757221ee385ef0a0e05af3e65fe29" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#clear_helpers</source>
          <target state="translated">Helpers::ClassMethods#clear_helpers</target>
        </trans-unit>
        <trans-unit id="a2100b8e8e46892bc01a8398949859790f914b67" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#helper</source>
          <target state="translated">Helpers::ClassMethods#helper</target>
        </trans-unit>
        <trans-unit id="c326de252cc32514e7232dcf94c6fd3ee10a4a4a" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#helper_attr</source>
          <target state="translated">Helpers::ClassMethods#helper_attr</target>
        </trans-unit>
        <trans-unit id="19d90c7af1e162e42e543fec068621f397457ccc" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#helper_method</source>
          <target state="translated">Helpers::ClassMethods#helper_method</target>
        </trans-unit>
        <trans-unit id="3e1c793a557410da00e8d2a96fa99b3343aa143c" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#helpers</source>
          <target state="translated">Helpers::ClassMethods#helpers</target>
        </trans-unit>
        <trans-unit id="0e0d92bc0785226fc77c402d2306d326fdb326e8" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#inherited</source>
          <target state="translated">Helpers::ClassMethods#inherited</target>
        </trans-unit>
        <trans-unit id="c7a5efcc3137e8bd21a56fd16f8fd834b5682b5f" translate="yes" xml:space="preserve">
          <source>Helpers::ClassMethods#modules_for_helpers</source>
          <target state="translated">Helpers::ClassMethods#modules_for_helpers</target>
        </trans-unit>
        <trans-unit id="6132537b957a1b9c2be9793ed7d23dc54a8786cb" translate="yes" xml:space="preserve">
          <source>Helpers::FormOptions can be used to create common select boxes such as countries, time zones, or associated records. &lt;code&gt;option_tags&lt;/code&gt; is a string containing the option tags for the select box.</source>
          <target state="translated">도우미 :: FormOptions를 사용하여 국가, 표준 시간대 또는 관련 레코드와 같은 일반적인 선택 상자를 만들 수 있습니다. &lt;code&gt;option_tags&lt;/code&gt; 는 선택 상자의 옵션 태그가 포함 된 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="bbb7bd69aece47e03619a31a95172b691b2ac552" translate="yes" xml:space="preserve">
          <source>Helpers::helpers_path</source>
          <target state="translated">Helpers::helpers_path</target>
        </trans-unit>
        <trans-unit id="7504cfeb596c4a08f7a28e342e61f35a70821fc6" translate="yes" xml:space="preserve">
          <source>Hence the inherited default for &lt;code&gt;if&lt;/code&gt; key is ignored.</source>
          <target state="translated">따라서 키가 무시 되는 &lt;code&gt;if&lt;/code&gt; 상속 된 기본값입니다 .</target>
        </trans-unit>
        <trans-unit id="4ea11b1c8330a9a3742ae05f6273b6dc889e3772" translate="yes" xml:space="preserve">
          <source>Hence, the cookie serves as temporary authentication for the web application. Anyone who seizes a cookie from someone else, may use the web application as this user - with possibly severe consequences. Here are some ways to hijack a session, and their countermeasures:</source>
          <target state="translated">따라서 쿠키는 웹 응용 프로그램의 임시 인증 역할을합니다. 다른 사람으로부터 쿠키를 점유 한 사람은 웹 애플리케이션을이 사용자로 사용할 수 있으며 이는 심각한 결과를 초래할 수 있습니다. 세션을 가로채는 방법과 대책은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="07aa6da987d280ae7b82018fa39c5f1855b30642" translate="yes" xml:space="preserve">
          <source>Here &lt;code&gt;identified_by&lt;/code&gt; is a connection identifier that can be used to find the specific connection later. Note that anything marked as an identifier will automatically create a delegate by the same name on any channel instances created off the connection.</source>
          <target state="translated">여기 &lt;code&gt;identified_by&lt;/code&gt; 는 나중에 특정 연결을 찾는 데 사용할 수있는 연결 식별자입니다. 식별자로 표시된 항목은 연결에서 생성 된 모든 채널 인스턴스에서 동일한 이름으로 대리인을 자동으로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="74e0c48806a48728057b61d6f2796338900252d7" translate="yes" xml:space="preserve">
          <source>Here are a few things you should know to make efficient use of Active Record associations in your Rails applications:</source>
          <target state="translated">Rails 애플리케이션에서 Active Record 연관을 효율적으로 사용하기 위해 알아야 할 몇 가지 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c12152a97b9a617a0af5aea0f358b292c093cd0f" translate="yes" xml:space="preserve">
          <source>Here are some basic examples:</source>
          <target state="translated">기본적인 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fc85570b4d4afba73d85a2f439ce8b52170cfb2d" translate="yes" xml:space="preserve">
          <source>Here are some helpful links to help you learn even more:</source>
          <target state="translated">다음은 더 많은 것을 배우는 데 도움이되는 유용한 링크입니다.</target>
        </trans-unit>
        <trans-unit id="cd76e26ace39a530f41554d038ef93343d8a5238" translate="yes" xml:space="preserve">
          <source>Here are some ideas how to hide honeypot fields by JavaScript and/or CSS:</source>
          <target state="translated">다음은 JavaScript 및 / 또는 CSS로 허니팟 필드를 숨기는 방법에 대한 아이디어입니다.</target>
        </trans-unit>
        <trans-unit id="e67521c415bb2432dbb38db65f67dba3f7aae0d6" translate="yes" xml:space="preserve">
          <source>Here are some values for this header for some popular servers, once these servers are configured to support accelerated file sending:</source>
          <target state="translated">다음은 서버가 가속 파일 전송을 지원하도록 구성된 경우 일부 인기있는 서버에서이 헤더에 대한 일부 값입니다.</target>
        </trans-unit>
        <trans-unit id="b91cb933bf987d931241a38fe9eb88af50ab973d" translate="yes" xml:space="preserve">
          <source>Here is a &quot;real&quot; example from the Active Support &lt;code&gt;en.yml&lt;/code&gt; translations YAML file:</source>
          <target state="translated">다음은 Active Support &lt;code&gt;en.yml&lt;/code&gt; 번역 YAML 파일 의 &quot;실제&quot;예입니다 .</target>
        </trans-unit>
        <trans-unit id="87b503ee6f76be5b3f344961161f897b4c2e8a33" translate="yes" xml:space="preserve">
          <source>Here is a basic example:</source>
          <target state="translated">기본 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="da69e51df37a243bb1979e2bf5a469da335b1108" translate="yes" xml:space="preserve">
          <source>Here is a full-length RSS example actually used on Basecamp:</source>
          <target state="translated">Basecamp에서 실제로 사용되는 전체 길이 RSS 예제는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="31dd4d8d027f2c0094d297ba485faaf587bf3057" translate="yes" xml:space="preserve">
          <source>Here is a list of common headers:</source>
          <target state="translated">다음은 일반적인 헤더 목록입니다.</target>
        </trans-unit>
        <trans-unit id="2b83699e6510ef2f4568f7cfb45c217f820f6299" translate="yes" xml:space="preserve">
          <source>Here is a list with all the available Active Record callbacks, listed in the same order in which they will get called during the respective operations:</source>
          <target state="translated">다음은 사용 가능한 모든 활성 레코드 콜백이있는 목록이며 각 작업 중에 호출되는 순서와 동일한 순서로 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="5c15547085174da8afdc8d786816c9538a67b526" translate="yes" xml:space="preserve">
          <source>Here is a more advanced &lt;a href=&quot;token&quot;&gt;Token&lt;/a&gt; example where only Atom feeds and the XML &lt;a href=&quot;../api&quot;&gt;API&lt;/a&gt; is protected by HTTP token authentication, the regular HTML interface is protected by a session approach:</source>
          <target state="translated">다음은 Atom 피드와 XML &lt;a href=&quot;../api&quot;&gt;API&lt;/a&gt; 만이 HTTP 토큰 인증으로 보호되고 일반 HTML 인터페이스는 세션 접근 방식으로 보호되는 고급 &lt;a href=&quot;token&quot;&gt;토큰&lt;/a&gt; 예제입니다 .</target>
        </trans-unit>
        <trans-unit id="903471955887d160f30351bfbf3cf3c4c4dd1257" translate="yes" xml:space="preserve">
          <source>Here is a more advanced Basic example where only Atom feeds and the XML &lt;a href=&quot;../api&quot;&gt;API&lt;/a&gt; is protected by HTTP authentication, the regular HTML interface is protected by a session approach:</source>
          <target state="translated">다음은 Atom 피드와 XML &lt;a href=&quot;../api&quot;&gt;API&lt;/a&gt; 만 HTTP 인증으로 보호하고 일반 HTML 인터페이스는 세션 접근 방식으로 보호하는 고급 기본 예입니다 .</target>
        </trans-unit>
        <trans-unit id="13b999087d05c2402f0c388acf9572983c2576d6" translate="yes" xml:space="preserve">
          <source>Here is a noncomprehensive list of documentation:</source>
          <target state="translated">포괄적이지 않은 문서 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2f261b042a52248ca392e7c379ba3b80ffaaf23d" translate="yes" xml:space="preserve">
          <source>Here is a quick explanation of the items presented in the preceding method. For a full list of all available options, please have a look further down at the Complete List of Action Mailer user-settable attributes section.</source>
          <target state="translated">다음은 이전 방법에서 제시된 항목에 대한 간단한 설명입니다. 사용 가능한 모든 옵션의 전체 목록을 보려면 Action Mailer의 전체 목록 사용자 설정 가능 속성 섹션을 자세히 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="ac5c5cf7d1e76b6a93c6fbfb7642d5bd20bc2a9c" translate="yes" xml:space="preserve">
          <source>Here is an example system test:</source>
          <target state="translated">다음은 시스템 테스트 예입니다.</target>
        </trans-unit>
        <trans-unit id="24dcdf1d65e0147f04d1c9d9333a8ee506ec9675" translate="yes" xml:space="preserve">
          <source>Here is an example using the &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/Testing/TimeHelpers.html#method-i-travel_to&quot;&gt;&lt;code&gt;travel_to&lt;/code&gt;&lt;/a&gt; helper:</source>
          <target state="translated">다음은 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActiveSupport/Testing/TimeHelpers.html#method-i-travel_to&quot;&gt; &lt;code&gt;travel_to&lt;/code&gt; &lt;/a&gt; 도우미 를 사용하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="966592488a254fd20fa980a07d627491c0e9dcbe" translate="yes" xml:space="preserve">
          <source>Here is an example where &lt;code&gt;on_load&lt;/code&gt; method is called to register a hook.</source>
          <target state="translated">다음은 후크를 등록하기 위해 &lt;code&gt;on_load&lt;/code&gt; 메소드가 호출 되는 예 입니다.</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2dee0b41075bc78f3c21e8de947824297cbc36c1" translate="yes" xml:space="preserve">
          <source>Here is some sample code to do this:</source>
          <target state="translated">이를 수행하기위한 샘플 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9a23e1dbae88c3b9dd5a42fd4b2f3a281e9f09a4" translate="yes" xml:space="preserve">
          <source>Here is the most straightforward test to check for XSS:</source>
          <target state="translated">XSS를 확인하는 가장 간단한 테스트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fa48026d5b94207f193b14ed8f3c20cddd97fa85" translate="yes" xml:space="preserve">
          <source>Here is what the markup might look like:</source>
          <target state="translated">마크 업은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e7c50ae25835d81ae0d3880f9bff4f411b4d5d46" translate="yes" xml:space="preserve">
          <source>Here the adapter, host, and database match the information in &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt;.</source>
          <target state="translated">여기서 어댑터, 호스트 및 데이터베이스는 &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; 의 정보와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="bfaddf874ee4fad170ce4659351021af0f1653c4" translate="yes" xml:space="preserve">
          <source>Here the connection information in &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; is ignored, note the different adapter and database name.</source>
          <target state="translated">여기서 &lt;code&gt;ENV['DATABASE_URL']&lt;/code&gt; 의 연결 정보 는 무시됩니다. 다른 어댑터 및 데이터베이스 이름에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="dfd0a9ee8970e4e5e7858560a08581a6c82893f1" translate="yes" xml:space="preserve">
          <source>Here the test is inheriting from &lt;code&gt;ActionDispatch::IntegrationTest&lt;/code&gt;. This makes some additional helpers available for us to use in our integration tests.</source>
          <target state="translated">여기서 테스트는 &lt;code&gt;ActionDispatch::IntegrationTest&lt;/code&gt; 에서 상속됩니다 . 이를 통해 통합 테스트에 사용할 수있는 추가 도우미를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="949f555d8f1cb3b5e819d8b5c11ae38856fbd9e2" translate="yes" xml:space="preserve">
          <source>Here we're using &lt;code&gt;link_to&lt;/code&gt; in a different way. We pass the named route as the second argument, and then the options as another argument. The &lt;code&gt;method: :delete&lt;/code&gt; and &lt;code&gt;data: { confirm: 'Are you sure?' }&lt;/code&gt; options are used as HTML5 attributes so that when the link is clicked, Rails will first show a confirm dialog to the user, and then submit the link with method &lt;code&gt;delete&lt;/code&gt;. This is done via the JavaScript file &lt;code&gt;rails-ujs&lt;/code&gt; which is automatically included in your application's layout (&lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt;) when you generated the application. Without this file, the confirmation dialog box won't appear.</source>
          <target state="translated">여기서 우리는 다른 방식으로 &lt;code&gt;link_to&lt;/code&gt; 를 사용하고 있습니다. 명명 된 경로를 두 번째 인수로 전달한 다음 옵션을 다른 인수로 전달합니다. &lt;code&gt;method: :delete&lt;/code&gt; 및 &lt;code&gt;data: { confirm: 'Are you sure?' }&lt;/code&gt; 옵션은 HTML5 속성으로 사용되므로 링크를 클릭하면 Rails는 먼저 사용자에게 확인 대화 상자를 표시 한 다음 &lt;code&gt;delete&lt;/code&gt; 메소드를 사용 하여 링크를 제출합니다 . 이는 &lt;code&gt;app/views/layouts/application.html.erb&lt;/code&gt; 을 생성 할 때 애플리케이션의 레이아웃 ( app / views / layouts / application.html.erb )에 자동으로 포함 된 JavaScript 파일 &lt;code&gt;rails-ujs&lt;/code&gt; 를 통해 수행됩니다 . 이 파일이 없으면 확인 대화 상자가 나타나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3cb25b8466e97b38c6bfbb5e1fa95c7cc4e9fda4" translate="yes" xml:space="preserve">
          <source>Here you have a list of cities whose names are presented to the user. Internally the application only wants to handle their IDs so they are used as the options' value attribute. Let's see how Rails can help out here.</source>
          <target state="translated">다음은 이름이 사용자에게 제공되는 도시 목록입니다. 내부적으로 응용 프로그램은 자신의 ID 만 처리하기를 원하므로 옵션의 value 속성으로 사용됩니다. Rails가 어떻게 도울 수 있는지 봅시다.</target>
        </trans-unit>
        <trans-unit id="35a32d431cd9fbed3a6db6d835cebef4a6417c6d" translate="yes" xml:space="preserve">
          <source>Here's a basic example:</source>
          <target state="translated">기본 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2a1adba1fc65e4a8781a83524bbb6fc9ef110527" translate="yes" xml:space="preserve">
          <source>Here's a sample YAML fixture file:</source>
          <target state="translated">샘플 YAML 픽스처 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="84598c805069996a6e4c31a50f74278008a9c710" translate="yes" xml:space="preserve">
          <source>Here's a simple example of a channel that tracks whether a user is online or not and what page they're on. (This is useful for creating presence features like showing a green dot next to a user name if they're online).</source>
          <target state="translated">다음은 사용자가 온라인인지 아닌지를 추적하는 채널의 간단한 예입니다. 온라인 상태 인 경우 사용자 이름 옆에 녹색 점을 표시하는 것과 같은 현재 상태 기능을 만드는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="146e97b7c60a86f5ed87a1a757fb629ef56852e8" translate="yes" xml:space="preserve">
          <source>Here's a unit test to test a mailer named &lt;code&gt;UserMailer&lt;/code&gt; whose action &lt;code&gt;invite&lt;/code&gt; is used to send an invitation to a friend. It is an adapted version of the base test created by the generator for an &lt;code&gt;invite&lt;/code&gt; action.</source>
          <target state="translated">다음 은 조치 &lt;code&gt;invite&lt;/code&gt; 가 친구에게 초대장을 보내는 데 사용되는 &lt;code&gt;UserMailer&lt;/code&gt; 라는 메일러를 테스트하는 단위 테스트 입니다. &lt;code&gt;invite&lt;/code&gt; 조치를 위해 생성기가 작성한 기본 테스트의 수정 된 버전입니다 .</target>
        </trans-unit>
        <trans-unit id="7fac616ee6202f9a2c229aa7ca87477e0a2c8486" translate="yes" xml:space="preserve">
          <source>Here's an example in jQuery:</source>
          <target state="translated">다음은 jQuery의 예입니다.</target>
        </trans-unit>
        <trans-unit id="5e0b9d396588ed91f62d6fc31a2795234f758ab6" translate="yes" xml:space="preserve">
          <source>Here's an example of a method instrumented with extra logging:</source>
          <target state="translated">추가 로깅으로 계측 된 메소드의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d99bce7647735e321fd17e646a992b467feeceb0" translate="yes" xml:space="preserve">
          <source>Here's an example of a migration:</source>
          <target state="translated">마이그레이션의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="86fd89d5341d5e9d3707f643586e0880f1d78388" translate="yes" xml:space="preserve">
          <source>Here's an example of a very simple validation:</source>
          <target state="translated">다음은 매우 간단한 유효성 검사의 예입니다.</target>
        </trans-unit>
        <trans-unit id="4f5373afe5c8fe82c5c6d6bd15842739fd845fec" translate="yes" xml:space="preserve">
          <source>Here's an example of how you might set &lt;code&gt;Time.zone&lt;/code&gt; on a per request basis and reset it when the request is done. &lt;code&gt;current_user.time_zone&lt;/code&gt; just needs to return a string identifying the user's preferred time zone:</source>
          <target state="translated">다음 은 요청별로 &lt;code&gt;Time.zone&lt;/code&gt; 을 설정 하고 요청이 완료 될 때 재설정 하는 방법에 대한 예입니다 . &lt;code&gt;current_user.time_zone&lt;/code&gt; 은 사용자가 선호하는 시간대를 식별하는 문자열을 반환하면됩니다.</target>
        </trans-unit>
        <trans-unit id="bf57f0edd716fcaf0b54193b754d828a1b134604" translate="yes" xml:space="preserve">
          <source>Here's an example of multiple sessions and custom DSL in an integration test</source>
          <target state="translated">통합 테스트에서 다중 세션 및 사용자 정의 DSL의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b74f74db0adb40322b5c36e01d45efc8728d7bcc" translate="yes" xml:space="preserve">
          <source>Here's an example of the log generated when this controller action is executed:</source>
          <target state="translated">이 컨트롤러 작업이 실행될 때 생성되는 로그의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d0ddd682783dcdf3bc13ff77041f430c1ebd9344" translate="yes" xml:space="preserve">
          <source>Here's an example of using &lt;code&gt;assert_select_email&lt;/code&gt;:</source>
          <target state="translated">다음은 &lt;code&gt;assert_select_email&lt;/code&gt; 을 사용하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="e5d702f2d9e4774ca34fe38cb54c564100d7982a" translate="yes" xml:space="preserve">
          <source>Here's an example where we create a class with an &lt;code&gt;after_destroy&lt;/code&gt; callback for a &lt;code&gt;PictureFile&lt;/code&gt; model:</source>
          <target state="translated">다음 은 &lt;code&gt;PictureFile&lt;/code&gt; 모델에 대한 &lt;code&gt;after_destroy&lt;/code&gt; 콜백을 사용하여 클래스를 만드는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="51e85e4e8113fb3e1f07e1727e78d73f5f0043e6" translate="yes" xml:space="preserve">
          <source>Here's an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6fba1def85d00f52b32d0a0e33296c850b25d69e" translate="yes" xml:space="preserve">
          <source>Here's an extract of the assertions you can use with &lt;a href=&quot;https://github.com/seattlerb/minitest&quot;&gt;&lt;code&gt;Minitest&lt;/code&gt;&lt;/a&gt;, the default testing library used by Rails. The &lt;code&gt;[msg]&lt;/code&gt; parameter is an optional string message you can specify to make your test failure messages clearer.</source>
          <target state="translated">다음 은 Rails에서 사용하는 기본 테스트 라이브러리 인 &lt;a href=&quot;https://github.com/seattlerb/minitest&quot;&gt; &lt;code&gt;Minitest&lt;/code&gt; &lt;/a&gt; 와 함께 사용할 수있는 어설 션을 추출한 것입니다 . &lt;code&gt;[msg]&lt;/code&gt; 매개 변수는 테스트 실패 메시지가 명확하게 지정할 수있는 선택적 문자열 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="4ee6eadcc849a2cd918861473277a9f08be785dd" translate="yes" xml:space="preserve">
          <source>Here's how &lt;code&gt;rails server&lt;/code&gt; creates an instance of &lt;code&gt;Rack::Server&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;rails server&lt;/code&gt; 가 &lt;code&gt;Rack::Server&lt;/code&gt; 인스턴스를 생성하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b5334ea0519430e6cbe9bb37bdff4fe394a82457" translate="yes" xml:space="preserve">
          <source>Here's how you can use &lt;code&gt;rescue_from&lt;/code&gt; to intercept all &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; errors and do something with them.</source>
          <target state="translated">다음은 &lt;code&gt;rescue_from&lt;/code&gt; 을 사용 하여 모든 &lt;code&gt;ActiveRecord::RecordNotFound&lt;/code&gt; 오류 를 가로 채고 관련 작업을 수행하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="5e2cbdc1bce52b716ef3a937ab133dce74e80f78" translate="yes" xml:space="preserve">
          <source>Here's the content of the &lt;code&gt;invite&lt;/code&gt; fixture:</source>
          <target state="translated">&lt;code&gt;invite&lt;/code&gt; 조명기 의 내용은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="bfddaba8308923367149096a9a8be2deb245712a" translate="yes" xml:space="preserve">
          <source>Here's the same action, with web-service support baked in:</source>
          <target state="translated">다음은 웹 서비스 지원이 적용된 동일한 작업입니다.</target>
        </trans-unit>
        <trans-unit id="6de0bcb500e6a3e99f678ee088d7357c5ae98315" translate="yes" xml:space="preserve">
          <source>Here's the section of the default configuration file (&lt;code&gt;config/database.yml&lt;/code&gt;) with connection information for the development environment:</source>
          <target state="translated">다음 은 개발 환경에 대한 연결 정보 가있는 기본 구성 파일 ( &lt;code&gt;config/database.yml&lt;/code&gt; ) 섹션입니다 .</target>
        </trans-unit>
        <trans-unit id="0248e2aa90815581b1381b564eb037109cbc0cc0" translate="yes" xml:space="preserve">
          <source>Here's the simplest way to write JavaScript. You may see it referred to as 'inline JavaScript':</source>
          <target state="translated">JavaScript를 작성하는 가장 간단한 방법은 다음과 같습니다. '인라인 JavaScript'라고 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a45c93398ce118b8a35f73d0541d63c53fa4726b" translate="yes" xml:space="preserve">
          <source>Here's what a freshly generated integration test looks like:</source>
          <target state="translated">새로 생성 된 통합 테스트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="72bc98f7b2194652a43a85864e9d3401c7fd55bf" translate="yes" xml:space="preserve">
          <source>Here's what a freshly generated system test looks like:</source>
          <target state="translated">새로 생성 된 시스템 테스트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d9ab6a126fa0b0191bd11e1e28c9eb02c416a2aa" translate="yes" xml:space="preserve">
          <source>Here's what a job looks like:</source>
          <target state="translated">직업은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4c3554f310b80837aa7de13a9fc83a67db841189" translate="yes" xml:space="preserve">
          <source>Here's what's going on: every Rails model can be initialized with its respective attributes, which are automatically mapped to the respective database columns. In the first line we do just that (remember that &lt;code&gt;params[:article]&lt;/code&gt; contains the attributes we're interested in). Then, &lt;code&gt;@article.save&lt;/code&gt; is responsible for saving the model in the database. Finally, we redirect the user to the &lt;code&gt;show&lt;/code&gt; action, which we'll define later.</source>
          <target state="translated">진행 상황은 다음과 같습니다. 모든 Rails 모델은 각각의 데이터베이스 열에 자동으로 매핑되는 각각의 속성으로 초기화 될 수 있습니다. 첫 번째 줄에서 우리는 그 일을합니다 ( &lt;code&gt;params[:article]&lt;/code&gt; 에는 우리가 관심있는 속성이 포함되어 있음을 기억 하십시오 ). 그런 다음 &lt;code&gt;@article.save&lt;/code&gt; 는 데이터베이스에 모델을 저장합니다. 마지막으로, 사용자를 &lt;code&gt;show&lt;/code&gt; 액션으로 리디렉션하고 , 나중에 정의 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="69dfb61df70be82cc0e91fdffe3a874d942c0c82" translate="yes" xml:space="preserve">
          <source>Here, have a monkey fixture:</source>
          <target state="translated">여기 원숭이 비품이 있습니다.</target>
        </trans-unit>
        <trans-unit id="9deb07e3ce989762e87163aedf6d7622acc5b0e8" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;_ad_banner.html.erb&lt;/code&gt; and &lt;code&gt;_footer.html.erb&lt;/code&gt; partials could contain content that is shared among many pages in your application. You don't need to see the details of these sections when you're concentrating on a particular page.</source>
          <target state="translated">여기에서 &lt;code&gt;_ad_banner.html.erb&lt;/code&gt; 및 &lt;code&gt;_footer.html.erb&lt;/code&gt; 부분에는 응용 프로그램의 여러 페이지에서 공유되는 내용이 포함될 수 있습니다. 특정 페이지에 집중할 때이 섹션의 세부 사항을 볼 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="c6be36ec0dd4255fb91d10832166e75884b75733" translate="yes" xml:space="preserve">
          <source>Here, the &lt;code&gt;_ad_banner.html.erb&lt;/code&gt; and &lt;code&gt;_footer.html.erb&lt;/code&gt; partials could contain content that is shared by many pages in your application. You don't need to see the details of these sections when you're concentrating on a particular page.</source>
          <target state="translated">여기에서 &lt;code&gt;_ad_banner.html.erb&lt;/code&gt; 및 &lt;code&gt;_footer.html.erb&lt;/code&gt; 부분에는 응용 프로그램의 여러 페이지가 공유하는 내용이 포함될 수 있습니다. 특정 페이지에 집중할 때이 섹션의 세부 사항을 볼 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="1eedd803e2fb3348371a12340d971dabadc54dc8" translate="yes" xml:space="preserve">
          <source>Hidden inputs are not shown to the user but instead hold data like any textual input. Values inside them can be changed with JavaScript.</source>
          <target state="translated">숨겨진 입력은 사용자에게 표시되지 않지만 대신 텍스트 입력과 같은 데이터를 보유합니다. 내부의 값은 JavaScript로 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5a2d8e6ce46024a3ffa0d643fb582b4898a45d3" translate="yes" xml:space="preserve">
          <source>Highlights one or more &lt;code&gt;phrases&lt;/code&gt; everywhere in &lt;code&gt;text&lt;/code&gt; by inserting it into a &lt;code&gt;:highlighter&lt;/code&gt; string. The highlighter can be specialized by passing &lt;code&gt;:highlighter&lt;/code&gt; as a single-quoted string with &lt;code&gt;\1&lt;/code&gt; where the phrase is to be inserted (defaults to '&amp;lt;mark&amp;gt;1&amp;lt;/mark&amp;gt;') or passing a block that receives each matched term. By default &lt;code&gt;text&lt;/code&gt; is sanitized to prevent possible XSS attacks. If the input is trustworthy, passing false for &lt;code&gt;:sanitize&lt;/code&gt; will turn sanitizing off.</source>
          <target state="translated">&lt;code&gt;:highlighter&lt;/code&gt; 문자열 에 삽입 하여 &lt;code&gt;text&lt;/code&gt; 모든 위치에서 하나 이상의 &lt;code&gt;phrases&lt;/code&gt; 강조 표시 합니다. 하이 &lt;code&gt;:highlighter&lt;/code&gt; 는 : highlighter 를 &lt;code&gt;\1&lt;/code&gt; 을 사용하여 작은 따옴표로 묶은 문자열로 전달 하거나 문구가 삽입 될 때 (기본값은 '&amp;lt;mark&amp;gt; 1 &amp;lt;/ mark&amp;gt;') 또는 일치하는 각 용어를받는 블록을 전달하여 특수화 할 수 있습니다 . 기본적으로 XSS 공격을 방지하기 위해 &lt;code&gt;text&lt;/code&gt; 를 삭제합니다. 입력이 신뢰할 수있는 경우 &lt;code&gt;:sanitize&lt;/code&gt; 에 대해 false를 전달 하면 살균이 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="d8318c79da881e56e277529bb9f90b6139fbf9b3" translate="yes" xml:space="preserve">
          <source>Hint: to show all the values of the all enums you have, you should call this query in &lt;code&gt;rails db&lt;/code&gt; or &lt;code&gt;psql&lt;/code&gt; console:</source>
          <target state="translated">힌트 : 가지고있는 모든 열거 형의 모든 값을 표시하려면 &lt;code&gt;rails db&lt;/code&gt; 또는 &lt;code&gt;psql&lt;/code&gt; 콘솔 에서이 쿼리를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2a6d69595e2159f2a0c44a9d74d2a911a845987f" translate="yes" xml:space="preserve">
          <source>Historically, Rails had some compatibility issues with the JSON gem. Using &lt;code&gt;JSON.generate&lt;/code&gt; and &lt;code&gt;JSON.dump&lt;/code&gt; inside a Rails application could produce unexpected errors.</source>
          <target state="translated">역사적으로 Rails는 JSON gem과 호환성 문제가있었습니다. Rails 애플리케이션에서 &lt;code&gt;JSON.generate&lt;/code&gt; 및 &lt;code&gt;JSON.dump&lt;/code&gt; 를 사용하면 예기치 않은 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa596d3e5f9add9375cea58b134c2309aec84ef8" translate="yes" xml:space="preserve">
          <source>Hold configured generators fallbacks. If a plugin developer wants a generator group to fallback to another group in case of missing generators, they can add a fallback.</source>
          <target state="translated">구성된 발전기 폴백을 유지합니다. 플러그인 개발자가 생성기가 누락 된 경우 생성기 그룹이 다른 그룹으로 대체되도록하려면 대체를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f316939e79094259cdf41e53671dffcabcf40c04" translate="yes" xml:space="preserve">
          <source>Holds common methods for migrations. It assumes that migrations have the [0-9]*_name format and can be used by other frameworks (like Sequel) just by implementing the next migration version method.</source>
          <target state="translated">마이그레이션에 대한 일반적인 방법을 보유합니다. 마이그레이션은 [0-9] * _ name 형식을 가지며 다음 마이그레이션 버전 방법을 구현하기 만하면 Sequel과 같은 다른 프레임 워크에서 사용할 수 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="310d1bafcc30c57e3d20e051cb69f9c63f2f3b6f" translate="yes" xml:space="preserve">
          <source>Holds generators configuration:</source>
          <target state="translated">발전기 구성을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="b3e0a103daa9ae3f375b2654f0a482c7c0d36297" translate="yes" xml:space="preserve">
          <source>Hook</source>
          <target state="translated">Hook</target>
        </trans-unit>
        <trans-unit id="972519e8d46ee40e8febf9b9d5a4473d125e44ce" translate="yes" xml:space="preserve">
          <source>Hook overridden in controller to add request information with &lt;code&gt;default_url_options&lt;/code&gt;. Application logic should not go into url_options.</source>
          <target state="translated">컨트롤러에서 후크를 재정 의하여 &lt;code&gt;default_url_options&lt;/code&gt; 로 요청 정보를 추가 합니다. 응용 프로그램 논리는 url_options로 들어가면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="8a6cc2117c9a296d133e57ce52ce82b4dbb17e71" translate="yes" xml:space="preserve">
          <source>Hooking Into an Application</source>
          <target state="translated">응용 프로그램에 연결</target>
        </trans-unit>
        <trans-unit id="4fca81640a993fd510bed679641fe76c4539af35" translate="yes" xml:space="preserve">
          <source>HostAuthorization</source>
          <target state="translated">HostAuthorization</target>
        </trans-unit>
        <trans-unit id="76dd7c4917f60f38f66a43fd9eccd658bcb40619" translate="yes" xml:space="preserve">
          <source>HostAuthorization#call</source>
          <target state="translated">HostAuthorization#call</target>
        </trans-unit>
        <trans-unit id="261f5d629dbf1e520610d65147fc83a80e1aad2e" translate="yes" xml:space="preserve">
          <source>HostAuthorization::new</source>
          <target state="translated">HostAuthorization::new</target>
        </trans-unit>
        <trans-unit id="549775771b76908b3842f4e87c278f35633b056c" translate="yes" xml:space="preserve">
          <source>How Active Model integrates with the Rails internationalization (i18n) framework.</source>
          <target state="translated">Active Model이 Rails 국제화 (i18n) 프레임 워크와 통합되는 방법.</target>
        </trans-unit>
        <trans-unit id="ff1f9e537379217104d857ac00a3494161487a87" translate="yes" xml:space="preserve">
          <source>How Active Record fits into the Model-View-Controller paradigm.</source>
          <target state="translated">Active Record가 Model-View-Controller 패러다임에 어떻게 적용되는지</target>
        </trans-unit>
        <trans-unit id="31f3d15e477843037815c858f82dcdb164691caa" translate="yes" xml:space="preserve">
          <source>How Callbacks and validations work.</source>
          <target state="translated">콜백 및 유효성 검사 작동 방식</target>
        </trans-unit>
        <trans-unit id="885603fee78b2cca60458011dcf7016046ffd47e" translate="yes" xml:space="preserve">
          <source>How I18n in Ruby on Rails Works</source>
          <target state="translated">Ruby on Rails의 I18n 작동 방식</target>
        </trans-unit>
        <trans-unit id="6fff3bda5e0a296fb98faf84650d4a2c7a366a04" translate="yes" xml:space="preserve">
          <source>How I18n works in Ruby on Rails</source>
          <target state="translated">Ruby on Rails에서 I18n 작동 방식</target>
        </trans-unit>
        <trans-unit id="fcb2abc501343cbce8db98097a33394d1bd434e4" translate="yes" xml:space="preserve">
          <source>How Rails internally generates Rails code from the templates.</source>
          <target state="translated">Rails가 템플릿에서 Rails 코드를 내부적으로 생성하는 방법.</target>
        </trans-unit>
        <trans-unit id="391b241dcc39d3fc1a49420d7d72b29f34ad9f38" translate="yes" xml:space="preserve">
          <source>How Rails searches for generators before invoking them.</source>
          <target state="translated">Rails가 발전기를 호출하기 전에 발전기를 찾는 방법.</target>
        </trans-unit>
        <trans-unit id="b710866f276184795c15f6b7c8b9d2022456bfb6" translate="yes" xml:space="preserve">
          <source>How Rails' built-in helpers assist you.</source>
          <target state="translated">Rails의 내장 헬퍼가 어떻게 도움을 주는가?</target>
        </trans-unit>
        <trans-unit id="7a64026c8624f830dd78e1c86e11704707a5fe41" translate="yes" xml:space="preserve">
          <source>How Turbolinks Works</source>
          <target state="translated">터보 링크 작동 방식</target>
        </trans-unit>
        <trans-unit id="00fb43de6862bf9104a10b224bbccf8ed76b6b58" translate="yes" xml:space="preserve">
          <source>How about deleting an existing Article?</source>
          <target state="translated">기존 기사를 삭제하는 것은 어떻습니까?</target>
        </trans-unit>
        <trans-unit id="b2c006c93992d4a29d24ef2eae6a45993fe1e590" translate="yes" xml:space="preserve">
          <source>How about testing our ability to create a new article in our blog and see the resulting article.</source>
          <target state="translated">블로그에서 새 기사를 작성하고 결과 기사를 보는 능력을 테스트하는 것은 어떻습니까.</target>
        </trans-unit>
        <trans-unit id="bea631078be09ef0df73214753c271bcf3b9347b" translate="yes" xml:space="preserve">
          <source>How an Active Record model behaves.</source>
          <target state="translated">활성 레코드 모델의 작동 방식</target>
        </trans-unit>
        <trans-unit id="cf0a4cb2a0695e4cdce7ae95a55b86de4d6d9aa9" translate="yes" xml:space="preserve">
          <source>How and why to store data in the session or cookies.</source>
          <target state="translated">세션 또는 쿠키에 데이터를 저장하는 방법과 이유.</target>
        </trans-unit>
        <trans-unit id="91b555445547d9bd6de1115f17e5ca3e262abf43" translate="yes" xml:space="preserve">
          <source>How automatic connection switching works.</source>
          <target state="translated">자동 연결 전환 작동 방식</target>
        </trans-unit>
        <trans-unit id="247a86a7c6b9f5e6753578a95dbfa118b2c13cba" translate="yes" xml:space="preserve">
          <source>How best to use templates, partials, and layouts.</source>
          <target state="translated">템플릿, 부분 및 레이아웃을 사용하는 가장 좋은 방법.</target>
        </trans-unit>
        <trans-unit id="7219bd1bb0c7257bbfa117480687e2498d534c64" translate="yes" xml:space="preserve">
          <source>How constant autoloading works</source>
          <target state="translated">지속적인 자동 로딩 작동 방식</target>
        </trans-unit>
        <trans-unit id="87a4423902806e5933d301e39eac70902bf52f44" translate="yes" xml:space="preserve">
          <source>How constant reloading works</source>
          <target state="translated">지속적인 리로딩 작동 방식</target>
        </trans-unit>
        <trans-unit id="004fa051da3f346370164577b2fb2a004b9324fe" translate="yes" xml:space="preserve">
          <source>How do forms with PATCH, PUT, or DELETE methods work?</source>
          <target state="translated">PATCH, PUT 또는 DELETE 메소드가있는 양식은 어떻게 작동합니까?</target>
        </trans-unit>
        <trans-unit id="e21860bf37328b97ebb0ddd904694c78e4a7b382" translate="yes" xml:space="preserve">
          <source>How does it work?</source>
          <target state="translated">어떻게 작동합니까?</target>
        </trans-unit>
        <trans-unit id="20a6ec786394f08b24fbf888b64df3c6ad08cd5c" translate="yes" xml:space="preserve">
          <source>How files are autoloaded depends on &lt;code&gt;eager_load&lt;/code&gt; and &lt;code&gt;cache_classes&lt;/code&gt; config settings which typically vary in development, production, and test modes:</source>
          <target state="translated">파일 자동로드 방법은 일반적으로 개발, 프로덕션 및 테스트 모드가 다른 &lt;code&gt;eager_load&lt;/code&gt; 및 &lt;code&gt;cache_classes&lt;/code&gt; 구성 설정에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="3f5e6d21433666be0c247dbf4c7ec5e458debfa5" translate="yes" xml:space="preserve">
          <source>How just visiting a site can be a security problem (with CSRF).</source>
          <target state="translated">방금 사이트를 방문하는 것이 보안 문제 일 수 있습니다 (CSRF 사용).</target>
        </trans-unit>
        <trans-unit id="76e2fa72f76f6a753e6d3e71b7cdd41e00bacbfa" translate="yes" xml:space="preserve">
          <source>How migrations relate to &lt;code&gt;schema.rb&lt;/code&gt;.</source>
          <target state="translated">어떻게 마이그레이션 관련 &lt;code&gt;schema.rb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7fbe404ec40911d9907be25316a2741a02568e3" translate="yes" xml:space="preserve">
          <source>How serializers work.</source>
          <target state="translated">시리얼 라이저 작동 방식</target>
        </trans-unit>
        <trans-unit id="e42434adac1251c8e37e2501009bba7675687b0e" translate="yes" xml:space="preserve">
          <source>How the Rails::Server interface is defined and used.</source>
          <target state="translated">Rails :: Server 인터페이스 정의 및 사용 방법</target>
        </trans-unit>
        <trans-unit id="8822e5413ddf0023503ebc0ab7f98d09c8b4ae04" translate="yes" xml:space="preserve">
          <source>How to Load Core Extensions</source>
          <target state="translated">코어 확장을로드하는 방법</target>
        </trans-unit>
        <trans-unit id="0e0734f509b40256ea594b365ee20839d4299b3a" translate="yes" xml:space="preserve">
          <source>How to Store your Custom Translations</source>
          <target state="translated">사용자 정의 번역을 저장하는 방법</target>
        </trans-unit>
        <trans-unit id="deace7cc065f5c91c8c84a53fd49106720b34f3f" translate="yes" xml:space="preserve">
          <source>How to Use the Asset Pipeline</source>
          <target state="translated">자산 파이프 라인을 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="c8d9e702a50346cb6ea5e80ea37b213683532215" translate="yes" xml:space="preserve">
          <source>How to add a pre-processor to the pipeline.</source>
          <target state="translated">파이프 라인에 프리 프로세서를 추가하는 방법</target>
        </trans-unit>
        <trans-unit id="af9befcb42671b299de5f4237e7f06b522f10076" translate="yes" xml:space="preserve">
          <source>How to add additional code to be run at application start time.</source>
          <target state="translated">응용 프로그램 시작 시간에 실행할 추가 코드를 추가하는 방법</target>
        </trans-unit>
        <trans-unit id="965083e44bd75bc7b32e1fe12ef503cf9232c7a2" translate="yes" xml:space="preserve">
          <source>How to add the functionality to the app (several examples of common use cases)</source>
          <target state="translated">앱에 기능을 추가하는 방법 (일반적인 사용 사례의 몇 가지 예)</target>
        </trans-unit>
        <trans-unit id="359c5d07be3e8bc1dbf9da8ee652b0f571ab324a" translate="yes" xml:space="preserve">
          <source>How to adjust the behavior of your Rails applications.</source>
          <target state="translated">Rails 애플리케이션의 동작을 조정하는 방법</target>
        </trans-unit>
        <trans-unit id="12a5bfd594aa7d5035e9a0a092d70a6cb0b38f0c" translate="yes" xml:space="preserve">
          <source>How to affect application reloading</source>
          <target state="translated">응용 프로그램 재로드에 영향을 미치는 방법</target>
        </trans-unit>
        <trans-unit id="0368b111633c559b33763163b18c10a7d811caa2" translate="yes" xml:space="preserve">
          <source>How to analyze the stack trace.</source>
          <target state="translated">스택 추적을 분석하는 방법</target>
        </trans-unit>
        <trans-unit id="d6c3719c18f89de7ac3af1d8f6c947d7a0c872cf" translate="yes" xml:space="preserve">
          <source>How to attach one or many files to a record.</source>
          <target state="translated">하나 이상의 파일을 레코드에 첨부하는 방법</target>
        </trans-unit>
        <trans-unit id="e92320d18dd80f761ffbac22dc30bad0ba3d1157" translate="yes" xml:space="preserve">
          <source>How to automatically create paths and URLs using route helpers.</source>
          <target state="translated">경로 도우미를 사용하여 경로와 URL을 자동으로 만드는 방법</target>
        </trans-unit>
        <trans-unit id="da0b89933ade437c4c36af6f66019a57a0e83bae" translate="yes" xml:space="preserve">
          <source>How to back your Active Record models with database views.</source>
          <target state="translated">데이터베이스보기로 Active Record 모델을 백업하는 방법</target>
        </trans-unit>
        <trans-unit id="d978c047c3899de47326026f20f352f81967cec6" translate="yes" xml:space="preserve">
          <source>How to build complex forms.</source>
          <target state="translated">복잡한 양식을 작성하는 방법</target>
        </trans-unit>
        <trans-unit id="2a48960b759d6326fffcc48931ed0a42daf4eb70" translate="yes" xml:space="preserve">
          <source>How to build features for the engine.</source>
          <target state="translated">엔진 기능을 구축하는 방법.</target>
        </trans-unit>
        <trans-unit id="5497a64242b7e691348b85381458b33c8b987883" translate="yes" xml:space="preserve">
          <source>How to check for the existence of particular records.</source>
          <target state="translated">특정 레코드가 있는지 확인하는 방법</target>
        </trans-unit>
        <trans-unit id="d232be5f63cc7f6f946c6234958fcc74997f2ae7" translate="yes" xml:space="preserve">
          <source>How to cherry-pick just the extensions you want.</source>
          <target state="translated">원하는 확장 기능을 선택하는 방법.</target>
        </trans-unit>
        <trans-unit id="8710435e4d22d116a1cfe611a657ee0b0aaa3d17" translate="yes" xml:space="preserve">
          <source>How to clean up files stored during testing.</source>
          <target state="translated">테스트 중에 저장된 파일을 정리하는 방법</target>
        </trans-unit>
        <trans-unit id="dad5310c440e94fc9456a755b251348efc460bca" translate="yes" xml:space="preserve">
          <source>How to configure Action Mailbox.</source>
          <target state="translated">작업 사서함을 구성하는 방법</target>
        </trans-unit>
        <trans-unit id="1fff34be66b64a0286dc4904bd0bf9213da7d048" translate="yes" xml:space="preserve">
          <source>How to configure Action Mailer for your environment.</source>
          <target state="translated">환경에 맞게 Action Mailer를 구성하는 방법</target>
        </trans-unit>
        <trans-unit id="e305929e0d7f86fe23cacdbde3073482d28695fd" translate="yes" xml:space="preserve">
          <source>How to configure Action Text.</source>
          <target state="translated">동작 텍스트를 구성하는 방법.</target>
        </trans-unit>
        <trans-unit id="35bc4856645c93c09809929059137dec0c26e126" translate="yes" xml:space="preserve">
          <source>How to configure Rails to start without any browser features</source>
          <target state="translated">브라우저 기능없이 시작하도록 Rails를 구성하는 방법</target>
        </trans-unit>
        <trans-unit id="dd11eb90c49bf1f644eec12f0e589de8bef95d13" translate="yes" xml:space="preserve">
          <source>How to construct your own routes, using either the preferred resourceful style or the &lt;code&gt;match&lt;/code&gt; method.</source>
          <target state="translated">선호하는 풍부한 스타일 또는 &lt;code&gt;match&lt;/code&gt; 메소드를 사용하여 자신 만의 경로를 구성하는 방법.</target>
        </trans-unit>
        <trans-unit id="abc5b6cc9ddd13b2956b4435ab4df1ba5a9c5d44" translate="yes" xml:space="preserve">
          <source>How to correctly use I18n into a RESTful application in various ways</source>
          <target state="translated">다양한 방법으로 I18n을 RESTful 애플리케이션에 올바르게 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="662cae5d60f7e6f39e90c9dc524d7817b7f9173c" translate="yes" xml:space="preserve">
          <source>How to create a Rails application.</source>
          <target state="translated">Rails 애플리케이션을 생성하는 방법</target>
        </trans-unit>
        <trans-unit id="5e93033597f1128e8906e52d82b4efc1d4ae1f3f" translate="yes" xml:space="preserve">
          <source>How to create a generator using templates.</source>
          <target state="translated">템플릿을 사용하여 생성기를 만드는 방법.</target>
        </trans-unit>
        <trans-unit id="3126eafbde42eb5a64ecdc02d8014a680f78732a" translate="yes" xml:space="preserve">
          <source>How to create a plugin from scratch.</source>
          <target state="translated">처음부터 플러그인을 만드는 방법</target>
        </trans-unit>
        <trans-unit id="3129a97ec5daf8c6da030d8406b7a8a9e6634ab1" translate="yes" xml:space="preserve">
          <source>How to create an application template.</source>
          <target state="translated">응용 프로그램 템플릿을 만드는 방법</target>
        </trans-unit>
        <trans-unit id="040037763e5a4910b0d14bdbe86ce8a755c464f6" translate="yes" xml:space="preserve">
          <source>How to create callback methods that respond to events in the object life cycle.</source>
          <target state="translated">객체 수명주기의 이벤트에 응답하는 콜백 메서드를 만드는 방법</target>
        </trans-unit>
        <trans-unit id="b0d8ca9b6546471adea625590ffe17d284f8ee9a" translate="yes" xml:space="preserve">
          <source>How to create jobs.</source>
          <target state="translated">작업을 만드는 방법.</target>
        </trans-unit>
        <trans-unit id="91ec2f3a82401b5ec2f40f295f935eeee181da64" translate="yes" xml:space="preserve">
          <source>How to create layouts with multiple content sections.</source>
          <target state="translated">여러 콘텐츠 섹션으로 레이아웃을 만드는 방법</target>
        </trans-unit>
        <trans-unit id="8f78dc5134e91e1b60053a56f04fb06ecd4222de" translate="yes" xml:space="preserve">
          <source>How to create search forms and similar kind of generic forms not representing any specific model in your application.</source>
          <target state="translated">애플리케이션에서 특정 모델을 나타내지 않는 검색 양식 및 유사한 종류의 일반 양식을 작성하는 방법</target>
        </trans-unit>
        <trans-unit id="ec4cb261cc6fd6da90bdf0ffcb65e791a4f5c218" translate="yes" xml:space="preserve">
          <source>How to create special classes that encapsulate common behavior for your callbacks.</source>
          <target state="translated">콜백의 일반적인 동작을 캡슐화하는 특수 클래스를 만드는 방법</target>
        </trans-unit>
        <trans-unit id="4e1f2b2b56922a147e3f019790b6aa45de44be96" translate="yes" xml:space="preserve">
          <source>How to create your own custom validation methods.</source>
          <target state="translated">고유 한 사용자 지정 유효성 검사 방법을 만드는 방법</target>
        </trans-unit>
        <trans-unit id="699e775edb89d304524acbf68f76fc398e0e86fe" translate="yes" xml:space="preserve">
          <source>How to customize your scaffold by changing generator templates.</source>
          <target state="translated">생성기 템플릿을 변경하여 스캐 폴드를 사용자 정의하는 방법.</target>
        </trans-unit>
        <trans-unit id="7c65bcd9892c76e9c4e302cfe3ce1ae3f80fe964" translate="yes" xml:space="preserve">
          <source>How to customize your scaffold by creating new generators.</source>
          <target state="translated">새 발전기를 만들어 비계를 사용자 정의하는 방법.</target>
        </trans-unit>
        <trans-unit id="27c788ecde02c2ec7bc781a793bee848b09bf2ad" translate="yes" xml:space="preserve">
          <source>How to deal with exceptions that may be raised during request processing.</source>
          <target state="translated">요청 처리 중에 발생할 수있는 예외를 처리하는 방법</target>
        </trans-unit>
        <trans-unit id="8793d36d7991eb65e4edf830e605759ea193a83c" translate="yes" xml:space="preserve">
          <source>How to decide which middleware you will want to include</source>
          <target state="translated">포함 할 미들웨어를 결정하는 방법</target>
        </trans-unit>
        <trans-unit id="1b46246700b1e26bbe09938762b4e2382db1c4bf" translate="yes" xml:space="preserve">
          <source>How to decide which modules to use in your controller</source>
          <target state="translated">컨트롤러에서 사용할 모듈을 결정하는 방법</target>
        </trans-unit>
        <trans-unit id="fd185b9b5a30c19b073f0cfe6f15d1dec92510b5" translate="yes" xml:space="preserve">
          <source>How to declare associations between Active Record models.</source>
          <target state="translated">활성 레코드 모델 간의 연관을 선언하는 방법</target>
        </trans-unit>
        <trans-unit id="b796fcf0368180c3946631827aa634758fd6a608" translate="yes" xml:space="preserve">
          <source>How to declare route parameters, which are passed onto controller actions.</source>
          <target state="translated">컨트롤러 작업에 전달되는 경로 매개 변수를 선언하는 방법.</target>
        </trans-unit>
        <trans-unit id="179c5266819757506744e2714dfaefe18b8ae8ba" translate="yes" xml:space="preserve">
          <source>How to define a custom Middleware stack.</source>
          <target state="translated">사용자 정의 미들웨어 스택을 정의하는 방법.</target>
        </trans-unit>
        <trans-unit id="3770fc22ba2a74b5f88d69c72da953025007277d" translate="yes" xml:space="preserve">
          <source>How to delete an attached file.</source>
          <target state="translated">첨부 파일을 삭제하는 방법.</target>
        </trans-unit>
        <trans-unit id="6f4f5a4173f837f3daab6b9f8bf20b95ef917f4e" translate="yes" xml:space="preserve">
          <source>How to enqueue jobs.</source>
          <target state="translated">작업을 대기열에 넣는 방법.</target>
        </trans-unit>
        <trans-unit id="e7f06f9b0ffea69aa26d511001ec532d9d5bbf5f" translate="yes" xml:space="preserve">
          <source>How to experiment with objects through an interactive shell.</source>
          <target state="translated">대화식 쉘을 통해 객체를 실험하는 방법.</target>
        </trans-unit>
        <trans-unit id="d2754814a5d9b112e246547925f5d2d1ccf52d2d" translate="yes" xml:space="preserve">
          <source>How to filter sensitive parameters so they do not appear in the application's log.</source>
          <target state="translated">응용 프로그램 로그에 나타나지 않도록 민감한 매개 변수를 필터링하는 방법</target>
        </trans-unit>
        <trans-unit id="9b34a5708c805919170f6eeb36ad632e9aa3b37b" translate="yes" xml:space="preserve">
          <source>How to find records using a variety of methods and conditions.</source>
          <target state="translated">다양한 방법과 조건을 사용하여 레코드를 찾는 방법</target>
        </trans-unit>
        <trans-unit id="4007fac20ee4ecc421ec901b7536a98bee9b35b3" translate="yes" xml:space="preserve">
          <source>How to follow the flow of a request through a controller.</source>
          <target state="translated">컨트롤러를 통한 요청 흐름을 따르는 방법.</target>
        </trans-unit>
        <trans-unit id="a71745ee4fb12b25a6094424101bef071193d086" translate="yes" xml:space="preserve">
          <source>How to generate an engine.</source>
          <target state="translated">엔진을 생성하는 방법.</target>
        </trans-unit>
        <trans-unit id="48ceb044ae32fa9d391b02fae616d1851d7fea2d" translate="yes" xml:space="preserve">
          <source>How to generate an image representation of a non-image file, such as a PDF or a video.</source>
          <target state="translated">PDF 또는 비디오와 같은 이미지가 아닌 파일의 이미지 표현을 생성하는 방법</target>
        </trans-unit>
        <trans-unit id="deccfb77084396e1921b8638b995c6100b06c6eb" translate="yes" xml:space="preserve">
          <source>How to generate and edit an Action Mailer class and mailer view.</source>
          <target state="translated">Action Mailer 클래스 및 메일러보기를 생성하고 편집하는 방법</target>
        </trans-unit>
        <trans-unit id="2d7728515a738e771ee5d2831276c1faf8dcbf39" translate="yes" xml:space="preserve">
          <source>How to generate and route emails to a mailbox.</source>
          <target state="translated">전자 메일을 생성하여 사서함으로 라우팅하는 방법</target>
        </trans-unit>
        <trans-unit id="38015bf111b30212b883455400d1d241bf42e017" translate="yes" xml:space="preserve">
          <source>How to generate models, controllers, database migrations, and unit tests.</source>
          <target state="translated">모델, 컨트롤러, 데이터베이스 마이그레이션 및 단위 테스트 생성 방법</target>
        </trans-unit>
        <trans-unit id="436256918e39aa08742c3eff6a2e6c8df196a6c0" translate="yes" xml:space="preserve">
          <source>How to generate select boxes from multiple types of data.</source>
          <target state="translated">여러 유형의 데이터에서 선택 상자를 생성하는 방법</target>
        </trans-unit>
        <trans-unit id="abbd97375a9c44b1e0b36663bc5ac5483228e1f6" translate="yes" xml:space="preserve">
          <source>How to handle Ajax on the server side.</source>
          <target state="translated">서버 측에서 Ajax를 처리하는 방법.</target>
        </trans-unit>
        <trans-unit id="b6075479424d7cca20a16abe19eb9e85a9af9cde" translate="yes" xml:space="preserve">
          <source>How to handle rich text content.</source>
          <target state="translated">서식있는 텍스트 내용을 처리하는 방법</target>
        </trans-unit>
        <trans-unit id="663814ee588973fb4ea608ae717283a2e65f9e09" translate="yes" xml:space="preserve">
          <source>How to hook the engine into an application.</source>
          <target state="translated">엔진을 응용 프로그램에 연결하는 방법</target>
        </trans-unit>
        <trans-unit id="7fd3558129bf645ab1102137776964e9df29ce58" translate="yes" xml:space="preserve">
          <source>How to implement full text search with PostgreSQL.</source>
          <target state="translated">PostgreSQL로 전체 텍스트 검색을 구현하는 방법.</target>
        </trans-unit>
        <trans-unit id="47c5430d1e27734d9131dcd5e952518d691f1e23" translate="yes" xml:space="preserve">
          <source>How to implement support for additional storage services.</source>
          <target state="translated">추가 스토리지 서비스에 대한 지원을 구현하는 방법</target>
        </trans-unit>
        <trans-unit id="b192c8c2f074d0c37ec1dd5269631ceaede7a209" translate="yes" xml:space="preserve">
          <source>How to include your Cross-Site Request Forgery token in request headers</source>
          <target state="translated">요청 헤더에 사이트 간 요청 위조 토큰을 포함시키는 방법</target>
        </trans-unit>
        <trans-unit id="940eef8972465d47a5e71b4a36224fc7b5ac1ed1" translate="yes" xml:space="preserve">
          <source>How to install</source>
          <target state="translated">설치하는 방법</target>
        </trans-unit>
        <trans-unit id="b873a909efe36b0a95991b73d701f2d6f3e81a2f" translate="yes" xml:space="preserve">
          <source>How to install Rails, create a new Rails application, and connect your application to a database.</source>
          <target state="translated">Rails를 설치하고, 새로운 Rails 애플리케이션을 만들고, 애플리케이션을 데이터베이스에 연결하는 방법.</target>
        </trans-unit>
        <trans-unit id="4bc4c166058b1583bd9f7a2715f1f16427875c30" translate="yes" xml:space="preserve">
          <source>How to integrate manual concurrency with Rails internals</source>
          <target state="translated">수동 동시성을 Rails 내부와 통합하는 방법</target>
        </trans-unit>
        <trans-unit id="a37443f6fe1aff82733ac289cadbc313fb4cc1c5" translate="yes" xml:space="preserve">
          <source>How to interpret the code in &lt;code&gt;config/routes.rb&lt;/code&gt;.</source>
          <target state="translated">방법의 코드를 해석하는 &lt;code&gt;config/routes.rb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="482163bc4783f20334ee9fb53c9bc6af42facb7b" translate="yes" xml:space="preserve">
          <source>How to link to an attached file.</source>
          <target state="translated">첨부 파일에 링크하는 방법</target>
        </trans-unit>
        <trans-unit id="ab75c7b1538764b5d778ae047a7987197e4f1967" translate="yes" xml:space="preserve">
          <source>How to load all extensions.</source>
          <target state="translated">모든 확장을로드하는 방법</target>
        </trans-unit>
        <trans-unit id="050c458e2dbf3b58a6cdb083378477e79e83da20" translate="yes" xml:space="preserve">
          <source>How to make model-centric forms for creating and editing specific database records.</source>
          <target state="translated">특정 데이터베이스 레코드를 작성 및 편집하기 위해 모델 중심 양식을 작성하는 방법</target>
        </trans-unit>
        <trans-unit id="51526d01ef0fb68b681df244932518daeb79420e" translate="yes" xml:space="preserve">
          <source>How to manage the caching dependencies.</source>
          <target state="translated">캐싱 종속성을 관리하는 방법</target>
        </trans-unit>
        <trans-unit id="23588189e3c2f5218d5c4d42d226b329c7f05681" translate="yes" xml:space="preserve">
          <source>How to manage users: Logging in and out and attack methods on all layers.</source>
          <target state="translated">사용자 관리 방법 : 모든 계층에서 로그인 및 로그 아웃 및 공격 방법.</target>
        </trans-unit>
        <trans-unit id="4b03eb756c495ead2f7c20ca92187c0259162ef2" translate="yes" xml:space="preserve">
          <source>How to override engine functionality in the application.</source>
          <target state="translated">응용 프로그램에서 엔진 기능을 대체하는 방법</target>
        </trans-unit>
        <trans-unit id="c5947c00a87d3fa7806bf61681a31dbd676d0b64" translate="yes" xml:space="preserve">
          <source>How to package assets with a gem.</source>
          <target state="translated">보석으로 자산을 포장하는 방법.</target>
        </trans-unit>
        <trans-unit id="83452885409be36ccdc213978138fc9cc24db36d" translate="yes" xml:space="preserve">
          <source>How to perform various calculations on Active Record models.</source>
          <target state="translated">활성 레코드 모델에서 다양한 계산을 수행하는 방법.</target>
        </trans-unit>
        <trans-unit id="d51bdf5ef32054258469c53e9fc6157dd1188c77" translate="yes" xml:space="preserve">
          <source>How to post forms to external resources and specify setting an &lt;code&gt;authenticity_token&lt;/code&gt;.</source>
          <target state="translated">어떻게 외부 자원에 양식을 게시하고 설정을 지정합니다 &lt;code&gt;authenticity_token&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="15a77948d603e01b52bad86d2a90baa40ca03e54" translate="yes" xml:space="preserve">
          <source>How to properly organize your application assets.</source>
          <target state="translated">응용 프로그램 자산을 올바르게 구성하는 방법</target>
        </trans-unit>
        <trans-unit id="4fb32d1c45262169314b6d4fd9493b8965905cf0" translate="yes" xml:space="preserve">
          <source>How to quickly generate the starting pieces of a Rails application.</source>
          <target state="translated">Rails 애플리케이션의 시작 부분을 빠르게 생성하는 방법</target>
        </trans-unit>
        <trans-unit id="882d2f16b855bd2f5d79a7646afb34e5e6b6ddb9" translate="yes" xml:space="preserve">
          <source>How to receive email within a Rails application.</source>
          <target state="translated">Rails 애플리케이션 내에서 이메일을받는 방법</target>
        </trans-unit>
        <trans-unit id="d3806e92785fa88c2fab3c2705c9fc7ef0adcf32" translate="yes" xml:space="preserve">
          <source>How to restrict parameters passed to your controller.</source>
          <target state="translated">컨트롤러에 전달되는 매개 변수를 제한하는 방법</target>
        </trans-unit>
        <trans-unit id="b15208ee7758a109207e3b473af862e5585dec35" translate="yes" xml:space="preserve">
          <source>How to run EXPLAIN on relations.</source>
          <target state="translated">관계에서 EXPLAIN을 실행하는 방법</target>
        </trans-unit>
        <trans-unit id="6d925f1a925f37821fc81f1b6af49cc9761a5aa0" translate="yes" xml:space="preserve">
          <source>How to run jobs in the background.</source>
          <target state="translated">백그라운드에서 작업을 실행하는 방법</target>
        </trans-unit>
        <trans-unit id="8e15c886fc295eeb5eb9f1af649c77d85f740d6b" translate="yes" xml:space="preserve">
          <source>How to see which generators are available in your application.</source>
          <target state="translated">애플리케이션에서 사용 가능한 생성기를 확인하는 방법</target>
        </trans-unit>
        <trans-unit id="4c7954067c3c91d7ad21c9367e7d56593279fe29" translate="yes" xml:space="preserve">
          <source>How to send email within a Rails application.</source>
          <target state="translated">Rails 애플리케이션 내에서 이메일을 보내는 방법</target>
        </trans-unit>
        <trans-unit id="3deb2103f2688d1f811b373fecd183e3304bfb7e" translate="yes" xml:space="preserve">
          <source>How to send emails from your application asynchronously.</source>
          <target state="translated">응용 프로그램에서 전자 메일을 비동기 적으로 보내는 방법</target>
        </trans-unit>
        <trans-unit id="c5aa6c8cdb5372b0e9384713de138731ab1255d6" translate="yes" xml:space="preserve">
          <source>How to send file uploads directly from browsers to a storage service, bypassing your application servers.</source>
          <target state="translated">애플리케이션 서버를 우회하여 브라우저에서 스토리지 서비스로 파일 업로드를 직접 보내는 방법</target>
        </trans-unit>
        <trans-unit id="aea4636573b073da43ce6bcd06c82a388fed95bb" translate="yes" xml:space="preserve">
          <source>How to setup Action Cable</source>
          <target state="translated">동작 케이블을 설정하는 방법</target>
        </trans-unit>
        <trans-unit id="144357af34e4718568277df93f6a81fc067f4332" translate="yes" xml:space="preserve">
          <source>How to setup channels</source>
          <target state="translated">채널 설정 방법</target>
        </trans-unit>
        <trans-unit id="a39a3a144b1b48ce94f140df36b3b3eb471a8683" translate="yes" xml:space="preserve">
          <source>How to setup your application for multiple databases.</source>
          <target state="translated">여러 데이터베이스에 응용 프로그램을 설정하는 방법</target>
        </trans-unit>
        <trans-unit id="b23cac56cbf2895e136c9ab4b75f8146c465b621" translate="yes" xml:space="preserve">
          <source>How to specify the order, retrieved attributes, grouping, and other properties of the found records.</source>
          <target state="translated">찾은 레코드의 순서, 검색된 속성, 그룹화 및 기타 특성을 지정하는 방법</target>
        </trans-unit>
        <trans-unit id="5ef0f34b304c60aacd6d86bf43e0b5512537347b" translate="yes" xml:space="preserve">
          <source>How to start a development server.</source>
          <target state="translated">개발 서버를 시작하는 방법</target>
        </trans-unit>
        <trans-unit id="31a74d9e16af3a864583ae23deab06a4f889c781" translate="yes" xml:space="preserve">
          <source>How to stream data directly to the user's browser.</source>
          <target state="translated">사용자의 브라우저로 직접 데이터를 스트리밍하는 방법</target>
        </trans-unit>
        <trans-unit id="ce060a6f3100aebdd62fdc9b96ae830cde78c75a" translate="yes" xml:space="preserve">
          <source>How to style rich text content.</source>
          <target state="translated">서식있는 텍스트 컨텐츠의 스타일을 지정하는 방법</target>
        </trans-unit>
        <trans-unit id="fafadad9b1e93808a52d19e5d418579a21fbebc8" translate="yes" xml:space="preserve">
          <source>How to test incoming emails.</source>
          <target state="translated">수신 이메일을 테스트하는 방법</target>
        </trans-unit>
        <trans-unit id="7a90199c0afe8c94cff7a40faae685dbd20f975d" translate="yes" xml:space="preserve">
          <source>How to test your Action Mailer classes.</source>
          <target state="translated">Action Mailer 클래스를 테스트하는 방법</target>
        </trans-unit>
        <trans-unit id="1b4a1bcf146cdf6be4cd39b08a0d8c45d4429602" translate="yes" xml:space="preserve">
          <source>How to track down problems and issues in your application that your tests aren't identifying.</source>
          <target state="translated">테스트에서 식별 할 수없는 응용 프로그램의 문제를 추적하는 방법</target>
        </trans-unit>
        <trans-unit id="2759f3a60ed06e2071611d91ef86ba6a13ee582f" translate="yes" xml:space="preserve">
          <source>How to understand the various types of Active Record associations.</source>
          <target state="translated">다양한 유형의 활성 레코드 연결을 이해하는 방법</target>
        </trans-unit>
        <trans-unit id="468657a74c7e82a9914821a06295c27c90193a0a" translate="yes" xml:space="preserve">
          <source>How to use &lt;code&gt;rails server&lt;/code&gt;.</source>
          <target state="translated">사용 방법 &lt;code&gt;rails server&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a75b0bf8bd1e8fa357cce9e1918890c3ab21cac3" translate="yes" xml:space="preserve">
          <source>How to use Action Controller's built-in HTTP authentication.</source>
          <target state="translated">Action Controller의 내장 HTTP 인증 사용 방법</target>
        </trans-unit>
        <trans-unit id="1f32c6232f5fd212eac4d70f35e9894189417038" translate="yes" xml:space="preserve">
          <source>How to use Active Record models to manipulate data stored in a relational database.</source>
          <target state="translated">Active Record 모델을 사용하여 관계형 데이터베이스에 저장된 데이터를 조작하는 방법</target>
        </trans-unit>
        <trans-unit id="16b9eca6cd506995237331225ea3f83aa2e76fa4" translate="yes" xml:space="preserve">
          <source>How to use I18n to translate Active Record errors or Action Mailer E-mail subjects</source>
          <target state="translated">I18n을 사용하여 Active Record 오류 또는 Action Mailer 전자 메일 제목을 번역하는 방법</target>
        </trans-unit>
        <trans-unit id="c8fff63ae288500b07e2bcf91e6fd3628ec42bc9" translate="yes" xml:space="preserve">
          <source>How to use PostgreSQL's datatypes.</source>
          <target state="translated">PostgreSQL의 데이터 유형을 사용하는 방법.</target>
        </trans-unit>
        <trans-unit id="aeca37d17e7290893b177c12655d45291a01f4a7" translate="yes" xml:space="preserve">
          <source>How to use Rack Middlewares in your Rails applications.</source>
          <target state="translated">Rails 애플리케이션에서 랙 미들웨어를 사용하는 방법.</target>
        </trans-unit>
        <trans-unit id="afb073e7190785278f16b15a1d0f3267487aedb5" translate="yes" xml:space="preserve">
          <source>How to use UUID primary keys.</source>
          <target state="translated">UUID 기본 키를 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="434bcb88556b5ea93ef177f7358e70f63b9be82b" translate="yes" xml:space="preserve">
          <source>How to use dynamic finder methods.</source>
          <target state="translated">동적 파인더 메소드를 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="d0d1588df457a8198b4ad3ef0513e1e8ddc35d9b" translate="yes" xml:space="preserve">
          <source>How to use eager loading to reduce the number of database queries needed for data retrieval.</source>
          <target state="translated">열성적인 로딩을 사용하여 데이터 검색에 필요한 데이터베이스 쿼리 수를 줄이는 방법</target>
        </trans-unit>
        <trans-unit id="ecfe33d91406b06e9902a746aa499cb80d7bda4c" translate="yes" xml:space="preserve">
          <source>How to use fallbacks to avoid overwriting a huge set of generators.</source>
          <target state="translated">대체 생성기를 사용하여 거대한 발전기 세트를 덮어 쓰지 않도록하는 방법.</target>
        </trans-unit>
        <trans-unit id="768884e86ba2494e196f259abba4cae45d6e497f" translate="yes" xml:space="preserve">
          <source>How to use localized views.</source>
          <target state="translated">현지화 된보기를 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="d3b1a0e67f0b8cbe0e0edfaee2014a688138de3b" translate="yes" xml:space="preserve">
          <source>How to use method chaining to use multiple Active Record methods together.</source>
          <target state="translated">방법 체인을 사용하여 여러 Active Record 방법을 함께 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="3c5e9d8305eeb1d17f067a6bea92a156c3b7b469" translate="yes" xml:space="preserve">
          <source>How to use nested layouts (sub-templates).</source>
          <target state="translated">중첩 레이아웃 (하위 템플릿)을 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="3acc2ce3064e615aa662f91da208e0a2c4b49888" translate="yes" xml:space="preserve">
          <source>How to use partials to DRY up your views.</source>
          <target state="translated">부분 뷰를 사용하여 뷰를 건조하는 방법.</target>
        </trans-unit>
        <trans-unit id="e5579a506ad30e5a4685e5046235723ba9d39ad7" translate="yes" xml:space="preserve">
          <source>How to use templates to generate/customize Rails applications.</source>
          <target state="translated">템플릿을 사용하여 Rails 애플리케이션을 생성 / 사용자 정의하는 방법</target>
        </trans-unit>
        <trans-unit id="ed5f6c71ff2b0457b7dada9ca27d6159bb795abc" translate="yes" xml:space="preserve">
          <source>How to use the built-in Active Record validation helpers.</source>
          <target state="translated">기본 제공 Active Record 유효성 검사 도우미를 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="2397f6ac0561f98d2afab319cb2e2b2eeb71750d" translate="yes" xml:space="preserve">
          <source>How to use the methods added to your models by creating associations.</source>
          <target state="translated">연관을 작성하여 모델에 추가 된 방법을 사용하는 방법.</target>
        </trans-unit>
        <trans-unit id="6338dbc882d466a39c113edb0d9ea748160b046f" translate="yes" xml:space="preserve">
          <source>How to use the various rendering methods built into Rails.</source>
          <target state="translated">Rails에 내장 된 다양한 렌더링 방법을 사용하는 방법.</target>
        </trans-unit>
        <trans-unit id="2055634437cca5ae985c43d618ea27ec78da048c" translate="yes" xml:space="preserve">
          <source>How to use variants to transform images.</source>
          <target state="translated">변형을 사용하여 이미지를 변환하는 방법</target>
        </trans-unit>
        <trans-unit id="c5c525f36a105fcf7dfa611ff38b5567536535f6" translate="yes" xml:space="preserve">
          <source>How to work with filters to execute code during request processing.</source>
          <target state="translated">요청 처리 중에 필터를 사용하여 코드를 실행하는 방법</target>
        </trans-unit>
        <trans-unit id="8ce86640d129fd64b2ea0322c4f6556280d733ff" translate="yes" xml:space="preserve">
          <source>How to work with the error messages generated by the validation process.</source>
          <target state="translated">유효성 검사 프로세스에서 생성 된 오류 메시지를 처리하는 방법</target>
        </trans-unit>
        <trans-unit id="eeaa8a6cd1ba0666ad62edeb83772a7e0c95da45" translate="yes" xml:space="preserve">
          <source>How to wrap all application code</source>
          <target state="translated">모든 응용 프로그램 코드를 래핑하는 방법</target>
        </trans-unit>
        <trans-unit id="63220aad86b2cc91fb91c6d8ebf517d1a0d86bb2" translate="yes" xml:space="preserve">
          <source>How to write and run tests for the plugin.</source>
          <target state="translated">플러그인 테스트 작성 및 실행 방법</target>
        </trans-unit>
        <trans-unit id="22344ac929f1de16ccdbaf10df6fd8c35c84b334" translate="yes" xml:space="preserve">
          <source>How to write unit, functional, integration, and system tests for your application.</source>
          <target state="translated">응용 프로그램에 대한 단위, 기능, 통합 및 시스템 테스트를 작성하는 방법</target>
        </trans-unit>
        <trans-unit id="a02bc8abf5cd8c002a59dfe5b1b3da5a472c1756" translate="yes" xml:space="preserve">
          <source>How to write your own reusable application templates using the Rails template API.</source>
          <target state="translated">Rails 템플릿 API를 사용하여 자신 만의 재사용 가능한 애플리케이션 템플릿을 작성하는 방법.</target>
        </trans-unit>
        <trans-unit id="65374d1862860e7a39add3e1ae80ae0a2c1f41a2" translate="yes" xml:space="preserve">
          <source>However a coming soon screen is only minimally useful, so you will soon create your &lt;code&gt;Book&lt;/code&gt; model and add the index action to &lt;code&gt;BooksController&lt;/code&gt;:</source>
          <target state="translated">그러나 곧 출시 될 화면은 최소한으로 유용하므로 곧 &lt;code&gt;Book&lt;/code&gt; 모델을 만들고 &lt;code&gt;BooksController&lt;/code&gt; 에 색인 작업을 추가 할 것입니다 .</target>
        </trans-unit>
        <trans-unit id="bfd0c066180110992fde4b8a9c21ef4c8513936a" translate="yes" xml:space="preserve">
          <source>However if you must do this, you may use &lt;code&gt;where&lt;/code&gt; as you would normally.</source>
          <target state="translated">그러나이 작업을 수행해야하는 경우 평소와 같이 &lt;code&gt;where&lt;/code&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ccc5b9da854f3207f88566cb133d7c2a2140cfc5" translate="yes" xml:space="preserve">
          <source>However you can still overwrite individual conventions, such as:</source>
          <target state="translated">그러나 다음과 같은 개별 규칙을 여전히 덮어 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="365e46db593bde2dd2859725f67ea645b52e77ae" translate="yes" xml:space="preserve">
          <source>However, &lt;code&gt;classic&lt;/code&gt; mode infers file names from missing constant names (&lt;code&gt;underscore&lt;/code&gt;), whereas &lt;code&gt;zeitwerk&lt;/code&gt; mode infers constant names from file names (&lt;code&gt;camelize&lt;/code&gt;). These helpers are not always inverse of each other, in particular if acronyms are involved. For instance, &lt;code&gt;&quot;FOO&quot;.underscore&lt;/code&gt; is &lt;code&gt;&quot;foo&quot;&lt;/code&gt;, but &lt;code&gt;&quot;foo&quot;.camelize&lt;/code&gt; is &lt;code&gt;&quot;Foo&quot;&lt;/code&gt;, not &lt;code&gt;&quot;FOO&quot;&lt;/code&gt;.</source>
          <target state="translated">그러나 &lt;code&gt;classic&lt;/code&gt; 모드는 상수 이름 누락 ( &lt;code&gt;underscore&lt;/code&gt; ) 에서 파일 이름을 유추 하는 반면, &lt;code&gt;zeitwerk&lt;/code&gt; 모드는 파일 이름 ( &lt;code&gt;camelize&lt;/code&gt; ) 에서 상수 이름을 유추 합니다. 이 헬퍼들은 항상 두문자어가 서로 반대되는 것은 아닙니다. 예를 들어 &lt;code&gt;&quot;FOO&quot;.underscore&lt;/code&gt; 는 &lt;code&gt;&quot;foo&quot;&lt;/code&gt; 이지만 &lt;code&gt;&quot;foo&quot;.camelize&lt;/code&gt; 는 &lt;code&gt;&quot;FOO&quot;&lt;/code&gt; 가 아니라 &quot; &lt;code&gt;&quot;Foo&quot;&lt;/code&gt; &quot; 입니다.</target>
        </trans-unit>
        <trans-unit id="43268ee6d3fbe8c1d13c9efed4934f9f7dd68211" translate="yes" xml:space="preserve">
          <source>However, attributes are serialized with the same rules as &lt;a href=&quot;relation#method-i-update_all&quot;&gt;ActiveRecord::Relation#update_all&lt;/a&gt;</source>
          <target state="translated">그러나 특성은 &lt;a href=&quot;relation#method-i-update_all&quot;&gt;ActiveRecord :: Relation # update_all&lt;/a&gt; 과 동일한 규칙으로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="00a9753b1e0243d4bd7efbfdfa7ab60cbe541cac" translate="yes" xml:space="preserve">
          <source>However, autoloading happens on demand. If by chance the top-level &lt;code&gt;User&lt;/code&gt; was not yet loaded, then Rails assumes a relative reference by contract.</source>
          <target state="translated">그러나 자동로드는 필요할 때 발생합니다. 우연히 최상위 &lt;code&gt;User&lt;/code&gt; 가 아직로드되지 않은 경우 Rails는 계약에 의한 상대 참조를 가정합니다.</target>
        </trans-unit>
        <trans-unit id="99bb47bb13587231651fad045780f00d9781b15e" translate="yes" xml:space="preserve">
          <source>However, because Turbolinks overrides the normal page loading process, the event that this relies upon will not be fired. If you have code that looks like this, you must change your code to do this instead:</source>
          <target state="translated">그러나 Turbolink는 일반 페이지로드 프로세스를 대체하므로이 페이지에 의존하는 이벤트는 발생하지 않습니다. 다음과 같은 코드가있는 경우 대신 코드를 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="69917e8bfaa1b145bda20567351d1b03a1f296bf" translate="yes" xml:space="preserve">
          <source>However, because you are developing the &lt;code&gt;blorgh&lt;/code&gt; engine on your local machine, you will need to specify the &lt;code&gt;:path&lt;/code&gt; option in your &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">당신이 개발하고 있기 때문에, &lt;code&gt;blorgh&lt;/code&gt; 로컬 컴퓨터에 엔진을, 당신은 지정해야합니다 &lt;code&gt;:path&lt;/code&gt; 귀하의 옵션 &lt;code&gt;Gemfile&lt;/code&gt; 을 :</target>
        </trans-unit>
        <trans-unit id="fe0d1ed1fd3c1db12422c5580a14479b11be0642" translate="yes" xml:space="preserve">
          <source>However, if &lt;code&gt;:requires_new&lt;/code&gt; is set, the block will be wrapped in a database savepoint acting as a sub-transaction.</source>
          <target state="translated">그러나 &lt;code&gt;:requires_new&lt;/code&gt; 가 설정되면 블록은 서브 트랜잭션 역할을하는 데이터베이스 저장 점에 랩핑됩니다.</target>
        </trans-unit>
        <trans-unit id="a1c6db80f2a3146d7a36800f432541acdd7e4df2" translate="yes" xml:space="preserve">
          <source>However, if &lt;code&gt;content_for&lt;/code&gt; is called several times, the final result would have all calls concatenated. For instance, if we have the following template:</source>
          <target state="translated">그러나 &lt;code&gt;content_for&lt;/code&gt; 를 여러 번 호출하면 최종 결과에 모든 호출이 연결됩니다. 예를 들어 다음과 같은 템플릿이있는 경우</target>
        </trans-unit>
        <trans-unit id="6243c56fabbf7f098e04c5d0e8ba918767e8a8e3" translate="yes" xml:space="preserve">
          <source>However, if the date component is not provided, but any other upper components are supplied, then the day of the month defaults to 1:</source>
          <target state="translated">그러나 날짜 구성 요소가 제공되지 않고 다른 상위 구성 요소가 제공되는 경우, 해당 날짜는 기본적으로 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="39daf45119fcf864d7004fc8b5eaa1ee26936ee4" translate="yes" xml:space="preserve">
          <source>However, if you are using &lt;code&gt;I18n::Backend::Pluralization&lt;/code&gt; this handler will also raise &lt;code&gt;I18n::MissingTranslationData: translation missing: en.i18n.plural.rule&lt;/code&gt; exception that should normally be ignored to fall back to the default pluralization rule for English locale. To avoid this you may use additional check for translation key:</source>
          <target state="translated">그러나 &lt;code&gt;I18n::Backend::Pluralization&lt;/code&gt; 경우이 핸들러는 &lt;code&gt;I18n::MissingTranslationData: translation missing: en.i18n.plural.rule&lt;/code&gt; 예외를 발생 시킵니다. 일반적으로 영어 로케일의 기본 복수 규칙으로 돌아가려면 무시해야합니다. . 이를 피하기 위해 추가 번역 키 확인을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6351e27a9678f0b2ed66b1758d2cb1ccd86d861b" translate="yes" xml:space="preserve">
          <source>However, inside the actual extension code, you will not have access to the &lt;code&gt;record&lt;/code&gt; as above. In this case, you can access &lt;code&gt;proxy_association&lt;/code&gt;. For example, &lt;code&gt;record.association(:items)&lt;/code&gt; and &lt;code&gt;record.items.proxy_association&lt;/code&gt; will return the same object, allowing you to make calls like &lt;code&gt;proxy_association.owner&lt;/code&gt; inside association extensions.</source>
          <target state="translated">그러나 실제 확장 코드 내에서는 위와 같이 &lt;code&gt;record&lt;/code&gt; 액세스 할 수 없습니다 . 이 경우 &lt;code&gt;proxy_association&lt;/code&gt; 에 액세스 할 수 있습니다 . 예를 들어 &lt;code&gt;record.association(:items)&lt;/code&gt; 및 &lt;code&gt;record.items.proxy_association&lt;/code&gt; 은 동일한 개체를 반환하므로 연결 확장 내에서 &lt;code&gt;proxy_association.owner&lt;/code&gt; 와 같은 호출을 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5ca969604625aa390eeeba69f9356ebcd5d01290" translate="yes" xml:space="preserve">
          <source>However, it's important to note that query caches are created at the start of an action and destroyed at the end of that action and thus persist only for the duration of the action. If you'd like to store query results in a more persistent fashion, you can with low level caching.</source>
          <target state="translated">그러나 쿼리 캐시는 작업 시작시 만들어지고 해당 작업이 끝날 때 삭제되므로 작업 기간 동안 만 지속됩니다. 보다 지속적인 방식으로 쿼리 결과를 저장하려면 저수준 캐싱을 사용하면됩니다.</target>
        </trans-unit>
        <trans-unit id="a49cb88839dddbb07e1fae153f296c7f30ac6b64" translate="yes" xml:space="preserve">
          <source>However, note that you don't need to use anchors because all routes are anchored at the start.</source>
          <target state="translated">그러나 모든 경로는 처음에 고정되어 있으므로 앵커를 사용할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="ff48fd12ffc1edefc792f9be266c395eb2b59da2" translate="yes" xml:space="preserve">
          <source>However, sometimes you want to isolate your engine from the application, especially if your engine has its own router. To do that, you simply need to call &lt;code&gt;isolate_namespace&lt;/code&gt;. This method requires you to pass a module where all your controllers, helpers and models should be nested to:</source>
          <target state="translated">그러나 때로는 엔진에 자체 라우터가있는 경우 엔진을 응용 프로그램에서 격리하려고합니다. 그렇게하려면, &lt;code&gt;isolate_namespace&lt;/code&gt; 를 호출 하면 됩니다. 이 방법을 사용하려면 모든 컨트롤러, 도우미 및 모델이 다음에 중첩되어야하는 모듈을 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="0c5318dc56bc50cdf63dfe0f19e0934e1645045d" translate="yes" xml:space="preserve">
          <source>However, the above applies if the parent model is being updated as well. For example, If you wanted to create a &lt;code&gt;member&lt;/code&gt; named &lt;em&gt;joe&lt;/em&gt; and wanted to update the &lt;code&gt;posts&lt;/code&gt; at the same time, that would give an &lt;a href=&quot;../recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt; error.</source>
          <target state="translated">그러나 상위 모델도 업데이트되는 경우 위의 내용이 적용됩니다. 예를 들어 &lt;em&gt;joe&lt;/em&gt; 라는 &lt;code&gt;member&lt;/code&gt; 를 만들고 동시에 &lt;code&gt;posts&lt;/code&gt; 을 업데이트하려는 경우 &lt;a href=&quot;../recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound&lt;/a&gt; 오류가 발생합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="de3ad4fb1b68576665e4e865eb76a12a63974488" translate="yes" xml:space="preserve">
          <source>However, the attacker may also take over the account by changing the e-mail address. After they change it, they will go to the forgotten-password page and the (possibly new) password will be mailed to the attacker's e-mail address. As a countermeasure &lt;em&gt;require the user to enter the password when changing the e-mail address, too&lt;/em&gt;.</source>
          <target state="translated">그러나 공격자는 전자 메일 주소를 변경하여 계정을 대신 할 수도 있습니다. 암호를 변경 한 후에는 잊어 버린 암호 페이지로 이동하여 (아마도 새로운) 암호가 공격자의 전자 메일 주소로 발송됩니다. 이에 &lt;em&gt;대비하여 사용자는 이메일 주소를 변경할 때 비밀번호를 입력해야합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="f83d01fd4381565af0fa582e69907039d00845c8" translate="yes" xml:space="preserve">
          <source>However, there are examples where this strategy doesn't make sense. For example, suppose a person has many projects, and each project has many tasks. If we deleted one of a person's tasks, we would probably not want the project to be deleted. In this scenario, the delete method won't actually work: it can only be used if the association on the join model is a &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;. In other situations you are expected to perform operations directly on either the associated records or the &lt;code&gt;:through&lt;/code&gt; association.</source>
          <target state="translated">그러나이 전략이 의미가없는 예가 있습니다. 예를 들어, 사람에게 많은 프로젝트가 있고 각 프로젝트에 많은 작업이 있다고 가정하십시오. 개인 작업 중 하나를 삭제 한 경우 프로젝트를 삭제하지 않을 수 있습니다. 이 시나리오에서 delete 메소드는 실제로 작동하지 않습니다. 결합 모델의 연관이 &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to 인&lt;/a&gt; 경우에만 사용할 수 있습니다 . 다른 상황에서는 연관된 레코드 또는 &lt;code&gt;:through&lt;/code&gt; 연관 에서 직접 조작을 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4841685bf54e6f0aaf81098b32ab4e05b6c89f53" translate="yes" xml:space="preserve">
          <source>However, there is one important caveat: A scope will always return an &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; object, even if the conditional evaluates to &lt;code&gt;false&lt;/code&gt;, whereas a class method, will return &lt;code&gt;nil&lt;/code&gt;. This can cause &lt;code&gt;NoMethodError&lt;/code&gt; when chaining class methods with conditionals, if any of the conditionals return &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">그러나 한 가지 중요한주의 사항이 있습니다. 조건부가 &lt;code&gt;false&lt;/code&gt; 로 평가 되더라도 스코프는 항상 &lt;code&gt;ActiveRecord::Relation&lt;/code&gt; 객체 를 반환하지만 클래스 메서드는 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다. 조건부 중 하나라도 &lt;code&gt;false&lt;/code&gt; 를 반환하는 경우 조건부와 클래스 메서드를 연결할 때 &lt;code&gt;NoMethodError&lt;/code&gt; 가 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7d547afe4c91eab8e58bf0d52357360314987116" translate="yes" xml:space="preserve">
          <source>However, this does not filter all HTML, a few tags will be left (by design), for example &amp;lt;a&amp;gt;:</source>
          <target state="translated">그러나 이것은 모든 HTML을 필터링하지는 않으며, 디자인에 따라 몇 개의 태그가 남습니다 (예 : &amp;lt;a&amp;gt;).</target>
        </trans-unit>
        <trans-unit id="7e3314658f0aab6ede84a858771ef9171fa23fd7" translate="yes" xml:space="preserve">
          <source>However, this is just duplicating the functionality that would be provided to you by a class method.</source>
          <target state="translated">그러나 이것은 클래스 메소드에 의해 제공되는 기능을 복제하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="cff10d872b25e4f8383a232cecf1e7a44317dc14" translate="yes" xml:space="preserve">
          <source>However, those can be customized:</source>
          <target state="translated">그러나 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e585ba3ecfe6843b61d99819fec1db09a896d181" translate="yes" xml:space="preserve">
          <source>However, what most web application designers neglect, are the forgot-password pages. These pages often admit that the entered user name or e-mail address has (not) been found. This allows an attacker to compile a list of user names and brute-force the accounts.</source>
          <target state="translated">그러나 대부분의 웹 응용 프로그램 디자이너가 무시하는 것은 잊어 버린 암호 페이지입니다. 이 페이지들은 종종 입력 된 사용자 이름 또는 이메일 주소가 발견되지 않았 음을 인정합니다. 이를 통해 공격자는 사용자 이름 목록을 컴파일하고 계정을 무차별하게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0256094b7cb2c4d8af05a62265d7ae3f095d02b" translate="yes" xml:space="preserve">
          <source>However, when a layout is explicitly set, the explicitly set layout wins:</source>
          <target state="translated">그러나 레이아웃이 명시 적으로 설정되면 명시 적으로 설정된 레이아웃이 우선합니다.</target>
        </trans-unit>
        <trans-unit id="2b2376fe47d910a09b5a679285e797b8a3b4645f" translate="yes" xml:space="preserve">
          <source>However, when using &lt;code&gt;abstract_class&lt;/code&gt;, &lt;code&gt;Shape&lt;/code&gt; is omitted from the hierarchy:</source>
          <target state="translated">사용시 그러나 &lt;code&gt;abstract_class&lt;/code&gt; 을 , &lt;code&gt;Shape&lt;/code&gt; 계층에서 생략된다 :</target>
        </trans-unit>
        <trans-unit id="25a1feb8ff2f675b6e91c7f7ffbfbf92c041051c" translate="yes" xml:space="preserve">
          <source>However, you can also have multiple session instances open per test, and even extend those instances with assertions and methods to create a very powerful testing DSL that is specific for your application. You can even reference any named routes you happen to have defined.</source>
          <target state="translated">그러나 테스트마다 여러 개의 세션 인스턴스를 열 수 있으며 어설 션 및 메서드로 해당 인스턴스를 확장하여 응용 프로그램에 맞는 매우 강력한 테스트 DSL을 만들 수도 있습니다. 정의한 명명 된 경로를 참조 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe517e9e76323725cad43ef7035c56932e6a6261" translate="yes" xml:space="preserve">
          <source>However, you can force a reload in the console executing &lt;code&gt;reload!&lt;/code&gt;:</source>
          <target state="translated">그러나 콘솔에서 다시로드를 실행하면 다시로드를 강제 실행할 수 있습니다 &lt;code&gt;reload!&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a0ec28a1772bb1973851eb871bdb66bcdab8c385" translate="yes" xml:space="preserve">
          <source>However, you will need to make a change if you are using &lt;code&gt;form_for&lt;/code&gt; to update a resource in conjunction with a custom route using the &lt;code&gt;PUT&lt;/code&gt; HTTP method:</source>
          <target state="translated">그러나 &lt;code&gt;form_for&lt;/code&gt; 를 사용하여 &lt;code&gt;PUT&lt;/code&gt; HTTP 메소드를 사용하여 사용자 정의 경로와 함께 자원을 업데이트하는 경우 변경해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a33847d27426f663ced8353aef2ad3486ba72872" translate="yes" xml:space="preserve">
          <source>However; this method bypasses the ConnectionPool's thread-safe connection access pattern. A returned connection may be owned by another thread, unowned, or by happen-stance owned by the calling thread.</source>
          <target state="translated">하나; 이 방법은 ConnectionPool의 스레드 안전 연결 액세스 패턴을 무시합니다. 리턴 된 연결은 다른 스레드가 소유하거나 소유하지 않거나 호출 스레드가 소유 한 상황에 의해 소유 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4be0f096d3f7a7994dc455fa3d2d2e65b7a3b5db" translate="yes" xml:space="preserve">
          <source>Hstore</source>
          <target state="translated">Hstore</target>
        </trans-unit>
        <trans-unit id="a7c5a0fbaff59ecbccbd640dc062595406f34c6a" translate="yes" xml:space="preserve">
          <source>Http::Cache::Request</source>
          <target state="translated">Http::Cache::Request</target>
        </trans-unit>
        <trans-unit id="e32caa6b7f8230340d2b383fe5e648e219d9dbcd" translate="yes" xml:space="preserve">
          <source>Http::Cache::Request#etag_matches?</source>
          <target state="translated">Http::Cache::Request#etag_matches?</target>
        </trans-unit>
        <trans-unit id="bc649a781f3d55d49d971535e736b4728e8c63d0" translate="yes" xml:space="preserve">
          <source>Http::Cache::Request#fresh?</source>
          <target state="translated">Http::Cache::Request#fresh?</target>
        </trans-unit>
        <trans-unit id="0ebfca9938b683f810c1513a22690fd15b598988" translate="yes" xml:space="preserve">
          <source>Http::Cache::Request#if_modified_since</source>
          <target state="translated">Http::Cache::Request#if_modified_since</target>
        </trans-unit>
        <trans-unit id="7eb19b29822d083c9afb07708bc200f491ee50c0" translate="yes" xml:space="preserve">
          <source>Http::Cache::Request#if_none_match</source>
          <target state="translated">Http::Cache::Request#if_none_match</target>
        </trans-unit>
        <trans-unit id="3950e71c60ce7de69c8c4a15b91866ba4a721a31" translate="yes" xml:space="preserve">
          <source>Http::Cache::Request#if_none_match_etags</source>
          <target state="translated">Http::Cache::Request#if_none_match_etags</target>
        </trans-unit>
        <trans-unit id="24e0aea68f89f397560918084b5e4b54dfa2a3c2" translate="yes" xml:space="preserve">
          <source>Http::Cache::Request#not_modified?</source>
          <target state="translated">Http::Cache::Request#not_modified?</target>
        </trans-unit>
        <trans-unit id="0e75d6a392709b34dabd3097cc752073a13ddbb9" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response</source>
          <target state="translated">Http::Cache::Response</target>
        </trans-unit>
        <trans-unit id="beabb6afda50c3fe78f338489d4b094869a6ef1b" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#cache_control</source>
          <target state="translated">Http::Cache::Response#cache_control</target>
        </trans-unit>
        <trans-unit id="016e359152fdab141a73db50aef3feceb2c5e237" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#date</source>
          <target state="translated">Http::Cache::Response#date</target>
        </trans-unit>
        <trans-unit id="867a4af6e51be9b5c02b27a3597853dcbfafef8a" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#date=</source>
          <target state="translated">Http::Cache::Response#date=</target>
        </trans-unit>
        <trans-unit id="108caec47f2e9b58a40f97ad3c892062bf0dc063" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#date?</source>
          <target state="translated">Http::Cache::Response#date?</target>
        </trans-unit>
        <trans-unit id="c1ab51ce7baf562291dce1d4ee024c04975f94c9" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#etag=</source>
          <target state="translated">Http::Cache::Response#etag=</target>
        </trans-unit>
        <trans-unit id="cf0b4e869762bf765a808a52f9439029206fb072" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#etag?</source>
          <target state="translated">Http::Cache::Response#etag?</target>
        </trans-unit>
        <trans-unit id="5e240bd8799d2018c6e1231d56d781aa896c71c9" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#last_modified</source>
          <target state="translated">Http::Cache::Response#last_modified</target>
        </trans-unit>
        <trans-unit id="427343abecf76cfc9d343d68a91d2ee24f5072b7" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#last_modified=</source>
          <target state="translated">Http::Cache::Response#last_modified=</target>
        </trans-unit>
        <trans-unit id="d80139a4215b89d650c0344c358e518b9d24074f" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#last_modified?</source>
          <target state="translated">Http::Cache::Response#last_modified?</target>
        </trans-unit>
        <trans-unit id="ce2ca0470c4f4ca0ac4304e678b82072d7a304d0" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#strong_etag=</source>
          <target state="translated">Http::Cache::Response#strong_etag=</target>
        </trans-unit>
        <trans-unit id="bb1727b8d1f0092230c88cf989f9b595a7fde7fc" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#strong_etag?</source>
          <target state="translated">Http::Cache::Response#strong_etag?</target>
        </trans-unit>
        <trans-unit id="033d97f518a47a08fa8e71d5114ca7c4af768ec5" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#weak_etag=</source>
          <target state="translated">Http::Cache::Response#weak_etag=</target>
        </trans-unit>
        <trans-unit id="bd84b6d36ff75bbec7a49594e9f395838093c563" translate="yes" xml:space="preserve">
          <source>Http::Cache::Response#weak_etag?</source>
          <target state="translated">Http::Cache::Response#weak_etag?</target>
        </trans-unit>
        <trans-unit id="1e3398cad7a48c35f0179c7ab9cb325b6f1e90b4" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters</source>
          <target state="translated">Http::FilterParameters</target>
        </trans-unit>
        <trans-unit id="69271225aeeb8e29812fd6076c31b696f6d9f61e" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters#env_filter</source>
          <target state="translated">Http::FilterParameters#env_filter</target>
        </trans-unit>
        <trans-unit id="ff0675a4548479445427665b3653f69637a48455" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters#filtered_env</source>
          <target state="translated">Http::FilterParameters#filtered_env</target>
        </trans-unit>
        <trans-unit id="a105629409171b1f02dfbf16ffa9e92df877ae07" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters#filtered_parameters</source>
          <target state="translated">Http::FilterParameters#filtered_parameters</target>
        </trans-unit>
        <trans-unit id="5a7c134c6c5128b8653503f801a966a954da9a61" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters#filtered_path</source>
          <target state="translated">Http::FilterParameters#filtered_path</target>
        </trans-unit>
        <trans-unit id="f88d207a9e055490db48ef2133bb0f3016e74a8c" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters#filtered_query_string</source>
          <target state="translated">Http::FilterParameters#filtered_query_string</target>
        </trans-unit>
        <trans-unit id="09471b55ce10de26e8a756c710b47375a8d3e696" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters#parameter_filter</source>
          <target state="translated">Http::FilterParameters#parameter_filter</target>
        </trans-unit>
        <trans-unit id="595e3ea371cb1014cb4a9ad1fbe4bc378a963119" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters#parameter_filter_for</source>
          <target state="translated">Http::FilterParameters#parameter_filter_for</target>
        </trans-unit>
        <trans-unit id="4305443dde10b961f48300cc42e0cee3b5be59bb" translate="yes" xml:space="preserve">
          <source>Http::FilterParameters::new</source>
          <target state="translated">Http::FilterParameters::new</target>
        </trans-unit>
        <trans-unit id="2711820f1d5148d3a4262838c54ea260dc09ded2" translate="yes" xml:space="preserve">
          <source>Http::Headers</source>
          <target state="translated">Http::Headers</target>
        </trans-unit>
        <trans-unit id="38ed85a32c770ec064cb0bc29f5040eed329bd60" translate="yes" xml:space="preserve">
          <source>Http::Headers#[]</source>
          <target state="translated">Http::Headers#[]</target>
        </trans-unit>
        <trans-unit id="88ea108368b9cf88410130035ba76ae4857baa5f" translate="yes" xml:space="preserve">
          <source>Http::Headers#[]=</source>
          <target state="translated">Http::Headers#[]=</target>
        </trans-unit>
        <trans-unit id="603cb0fc6f2e1239663f6e042cb478d5b72f277d" translate="yes" xml:space="preserve">
          <source>Http::Headers#add</source>
          <target state="translated">Http::Headers#add</target>
        </trans-unit>
        <trans-unit id="46510ef50610432a2c331833c66d006eae78c78c" translate="yes" xml:space="preserve">
          <source>Http::Headers#each</source>
          <target state="translated">Http::Headers#each</target>
        </trans-unit>
        <trans-unit id="1422c59f997f08faf80f7a113284b3b9a38cef40" translate="yes" xml:space="preserve">
          <source>Http::Headers#env</source>
          <target state="translated">Http::Headers#env</target>
        </trans-unit>
        <trans-unit id="b1417046c7d9fc3b59e2f0e32e0002d777ea2e33" translate="yes" xml:space="preserve">
          <source>Http::Headers#fetch</source>
          <target state="translated">Http::Headers#fetch</target>
        </trans-unit>
        <trans-unit id="2b6abd6116859a9d136f093ec1889e0c84478f06" translate="yes" xml:space="preserve">
          <source>Http::Headers#include?</source>
          <target state="translated">Http::Headers#include?</target>
        </trans-unit>
        <trans-unit id="bd3c01ed5c1520bb43c63eb2115e65b1f9a73718" translate="yes" xml:space="preserve">
          <source>Http::Headers#key?</source>
          <target state="translated">Http::Headers#key?</target>
        </trans-unit>
        <trans-unit id="ff7c090fb277049357eef7399a12ada38357a897" translate="yes" xml:space="preserve">
          <source>Http::Headers#merge</source>
          <target state="translated">Http::Headers#merge</target>
        </trans-unit>
        <trans-unit id="6c1c23ddb38862255def29d224b71d0620d0a9cf" translate="yes" xml:space="preserve">
          <source>Http::Headers#merge!</source>
          <target state="translated">Http::Headers#merge!</target>
        </trans-unit>
        <trans-unit id="7b984bab14d989ac1e0b678ecab656a937202fff" translate="yes" xml:space="preserve">
          <source>Http::Headers::from_hash</source>
          <target state="translated">Http::Headers::from_hash</target>
        </trans-unit>
        <trans-unit id="2257c1b102c0ccbf013b6631b48ab59158a9ecc9" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation</source>
          <target state="translated">Http::MimeNegotiation</target>
        </trans-unit>
        <trans-unit id="28e4979084a199d15e7a61d229d47a358ffa8058" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#accepts</source>
          <target state="translated">Http::MimeNegotiation#accepts</target>
        </trans-unit>
        <trans-unit id="0f26436f3efa51cd4ac5f6be9f904c70ef0a8d1d" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#content_mime_type</source>
          <target state="translated">Http::MimeNegotiation#content_mime_type</target>
        </trans-unit>
        <trans-unit id="824f4ea243818e11caa3b7e0ba35ccf177bcc040" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#content_type</source>
          <target state="translated">Http::MimeNegotiation#content_type</target>
        </trans-unit>
        <trans-unit id="b0932b5e12265f1e65831401d3eb35040175a5b1" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#format</source>
          <target state="translated">Http::MimeNegotiation#format</target>
        </trans-unit>
        <trans-unit id="c46e89f36b99ad2801b071dd6c3956e349e529fc" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#format=</source>
          <target state="translated">Http::MimeNegotiation#format=</target>
        </trans-unit>
        <trans-unit id="9e269cb2ba0e561611ecce279ad79dca7d0e856f" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#format_from_path_extension</source>
          <target state="translated">Http::MimeNegotiation#format_from_path_extension</target>
        </trans-unit>
        <trans-unit id="a5d7158782f41e529cb86fc93e86d11da2fa3f6e" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#formats</source>
          <target state="translated">Http::MimeNegotiation#formats</target>
        </trans-unit>
        <trans-unit id="67230598da3a04ff73365d0d7ea94e666382cc85" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#formats=</source>
          <target state="translated">Http::MimeNegotiation#formats=</target>
        </trans-unit>
        <trans-unit id="3e5a6acd289019afbac550249dc0078a8af49df0" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#negotiate_mime</source>
          <target state="translated">Http::MimeNegotiation#negotiate_mime</target>
        </trans-unit>
        <trans-unit id="81d9dd14a05075bda9987f0fe5a7770ddaea16e1" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#use_accept_header</source>
          <target state="translated">Http::MimeNegotiation#use_accept_header</target>
        </trans-unit>
        <trans-unit id="3d51f56fbbe8f7d2a37c760ae47e3b39ad7f7cf7" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#valid_accept_header</source>
          <target state="translated">Http::MimeNegotiation#valid_accept_header</target>
        </trans-unit>
        <trans-unit id="d2d19ccd510264d8d777f09e6e6046486123dc57" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#variant</source>
          <target state="translated">Http::MimeNegotiation#variant</target>
        </trans-unit>
        <trans-unit id="854c16ebac08e7d4c0b4880f33da98e9da80a025" translate="yes" xml:space="preserve">
          <source>Http::MimeNegotiation#variant=</source>
          <target state="translated">Http::MimeNegotiation#variant=</target>
        </trans-unit>
        <trans-unit id="0c2df5da6168debedc49608713c4620269111efe" translate="yes" xml:space="preserve">
          <source>Http::Parameters</source>
          <target state="translated">Http::Parameters</target>
        </trans-unit>
        <trans-unit id="597235dadc3f35152bd0b0bda516cf446942249f" translate="yes" xml:space="preserve">
          <source>Http::Parameters#parameters</source>
          <target state="translated">Http::Parameters#parameters</target>
        </trans-unit>
        <trans-unit id="01382f4a936e56de549865818f6cd1085205e148" translate="yes" xml:space="preserve">
          <source>Http::Parameters#params</source>
          <target state="translated">Http::Parameters#params</target>
        </trans-unit>
        <trans-unit id="51d9b4b5bb262e216028ae52b7ace3d7d52e6929" translate="yes" xml:space="preserve">
          <source>Http::Parameters#path_parameters</source>
          <target state="translated">Http::Parameters#path_parameters</target>
        </trans-unit>
        <trans-unit id="2ba1c44af8b7d02e322ba0cb52c75b33d42f51ef" translate="yes" xml:space="preserve">
          <source>Http::Parameters::ClassMethods</source>
          <target state="translated">Http::Parameters::ClassMethods</target>
        </trans-unit>
        <trans-unit id="d2335ec179c3145fcc748e602acffe7ead5ade7c" translate="yes" xml:space="preserve">
          <source>Http::Parameters::ClassMethods#parameter_parsers=</source>
          <target state="translated">Http::Parameters::ClassMethods#parameter_parsers=</target>
        </trans-unit>
        <trans-unit id="95b32371490b2b43f1c7c36389e09db78949950d" translate="yes" xml:space="preserve">
          <source>Http::Parameters::parameter_parsers</source>
          <target state="translated">Http::Parameters::parameter_parsers</target>
        </trans-unit>
        <trans-unit id="e57621e323395a4ec7cad6ea2f972adaea75b969" translate="yes" xml:space="preserve">
          <source>Http::URL</source>
          <target state="translated">Http::URL</target>
        </trans-unit>
        <trans-unit id="54acaa134c5b72f1c479f9fcdb35f3f586831d77" translate="yes" xml:space="preserve">
          <source>Http::URL#domain</source>
          <target state="translated">Http::URL#domain</target>
        </trans-unit>
        <trans-unit id="a32497053b411b94e6f9df5c5cdb5d6f57d10b2b" translate="yes" xml:space="preserve">
          <source>Http::URL#host</source>
          <target state="translated">Http::URL#host</target>
        </trans-unit>
        <trans-unit id="454a81f24c14abb44b549d4d1fceeb10f0915cde" translate="yes" xml:space="preserve">
          <source>Http::URL#host_with_port</source>
          <target state="translated">Http::URL#host_with_port</target>
        </trans-unit>
        <trans-unit id="2d6debaea75e2b5c64315bceaa61ecfeb3c1dd2c" translate="yes" xml:space="preserve">
          <source>Http::URL#optional_port</source>
          <target state="translated">Http::URL#optional_port</target>
        </trans-unit>
        <trans-unit id="178bd0322bb57accc5d9029dc65e8a70eaae6656" translate="yes" xml:space="preserve">
          <source>Http::URL#port</source>
          <target state="translated">Http::URL#port</target>
        </trans-unit>
        <trans-unit id="c29c70280184067ba2cf8d15ef9b08bffb414b09" translate="yes" xml:space="preserve">
          <source>Http::URL#port_string</source>
          <target state="translated">Http::URL#port_string</target>
        </trans-unit>
        <trans-unit id="29b1287032c0f3ca95ffb0070c2650461103fb56" translate="yes" xml:space="preserve">
          <source>Http::URL#protocol</source>
          <target state="translated">Http::URL#protocol</target>
        </trans-unit>
        <trans-unit id="8c7e815c5ad15aff53d6412553519e2b980150dd" translate="yes" xml:space="preserve">
          <source>Http::URL#raw_host_with_port</source>
          <target state="translated">Http::URL#raw_host_with_port</target>
        </trans-unit>
        <trans-unit id="2366214a11b1f4da505f7e9540899825a70b3917" translate="yes" xml:space="preserve">
          <source>Http::URL#server_port</source>
          <target state="translated">Http::URL#server_port</target>
        </trans-unit>
        <trans-unit id="28e476623dcb030fef6f48e4996b746fa5032c27" translate="yes" xml:space="preserve">
          <source>Http::URL#standard_port</source>
          <target state="translated">Http::URL#standard_port</target>
        </trans-unit>
        <trans-unit id="b9b594cb9f60bebdf8daf47b934416bda5e8ee63" translate="yes" xml:space="preserve">
          <source>Http::URL#standard_port?</source>
          <target state="translated">Http::URL#standard_port?</target>
        </trans-unit>
        <trans-unit id="a04de7e8b38c764a421e210b0564c2b9e83529c3" translate="yes" xml:space="preserve">
          <source>Http::URL#subdomain</source>
          <target state="translated">Http::URL#subdomain</target>
        </trans-unit>
        <trans-unit id="fbcbda8bb2a0af38d1ef85fbc221c041b6a15b80" translate="yes" xml:space="preserve">
          <source>Http::URL#subdomains</source>
          <target state="translated">Http::URL#subdomains</target>
        </trans-unit>
        <trans-unit id="a65b17d0e86376be642f307059b9b2542d69f13b" translate="yes" xml:space="preserve">
          <source>Http::URL#url</source>
          <target state="translated">Http::URL#url</target>
        </trans-unit>
        <trans-unit id="922932752dc94f49e2b5ae6cfbda98d15a01ed3a" translate="yes" xml:space="preserve">
          <source>Http::URL::extract_domain</source>
          <target state="translated">Http::URL::extract_domain</target>
        </trans-unit>
        <trans-unit id="c58bc194d097821bc4ffb7119785c69d2bb20168" translate="yes" xml:space="preserve">
          <source>Http::URL::extract_subdomain</source>
          <target state="translated">Http::URL::extract_subdomain</target>
        </trans-unit>
        <trans-unit id="b0ec6bc594c98417fd83ca3e027a9389f347f27b" translate="yes" xml:space="preserve">
          <source>Http::URL::extract_subdomains</source>
          <target state="translated">Http::URL::extract_subdomains</target>
        </trans-unit>
        <trans-unit id="cbf7ff12d15abb741d6c39e914df4f3181039ca0" translate="yes" xml:space="preserve">
          <source>Http::URL::full_url_for</source>
          <target state="translated">Http::URL::full_url_for</target>
        </trans-unit>
        <trans-unit id="f818473e777871dde59e74866b89b4137d6f5a65" translate="yes" xml:space="preserve">
          <source>Http::URL::new</source>
          <target state="translated">Http::URL::new</target>
        </trans-unit>
        <trans-unit id="2cafa40e18b57a2f257ffa197fe766e9e2c4c2c3" translate="yes" xml:space="preserve">
          <source>Http::URL::path_for</source>
          <target state="translated">Http::URL::path_for</target>
        </trans-unit>
        <trans-unit id="8e1e9784663dbca58bbb46e4eb57d887f24632a8" translate="yes" xml:space="preserve">
          <source>Http::URL::url_for</source>
          <target state="translated">Http::URL::url_for</target>
        </trans-unit>
        <trans-unit id="b7f78d2071031c609e7f6eccaba8f48d5ff0a3b1" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile</source>
          <target state="translated">Http::UploadedFile</target>
        </trans-unit>
        <trans-unit id="a85f780827bb344446d82c32c339af2616fde1c1" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#close</source>
          <target state="translated">Http::UploadedFile#close</target>
        </trans-unit>
        <trans-unit id="8924591219ef1695aaa1600918fcf4974ad76355" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#content_type</source>
          <target state="translated">Http::UploadedFile#content_type</target>
        </trans-unit>
        <trans-unit id="19c8b2abb93a26b84a7661bae11a79d45c4027ab" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#eof?</source>
          <target state="translated">Http::UploadedFile#eof?</target>
        </trans-unit>
        <trans-unit id="e3c522e1a29ce281ba369fd5db260ea0971fb3ae" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#headers</source>
          <target state="translated">Http::UploadedFile#headers</target>
        </trans-unit>
        <trans-unit id="fcdb988e3bd875daa1b8d42f0ff2de66e147eba4" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#open</source>
          <target state="translated">Http::UploadedFile#open</target>
        </trans-unit>
        <trans-unit id="389df126bc2f8fa522a455ec3c82127a922ad73e" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#original_filename</source>
          <target state="translated">Http::UploadedFile#original_filename</target>
        </trans-unit>
        <trans-unit id="710b34c14a2b8441f8b03a84f384394679069757" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#path</source>
          <target state="translated">Http::UploadedFile#path</target>
        </trans-unit>
        <trans-unit id="1330f65cb3bd050816219c42401bcbc16ccd5b5f" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#read</source>
          <target state="translated">Http::UploadedFile#read</target>
        </trans-unit>
        <trans-unit id="3c379ef2b416006bcfe3fe17ef7ab538692401e9" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#rewind</source>
          <target state="translated">Http::UploadedFile#rewind</target>
        </trans-unit>
        <trans-unit id="30ccf509f5eefd38417a66d9fd381e401281d340" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#size</source>
          <target state="translated">Http::UploadedFile#size</target>
        </trans-unit>
        <trans-unit id="142a1f97dbd0e84838a647fec8b79c9d9b614b2d" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#tempfile</source>
          <target state="translated">Http::UploadedFile#tempfile</target>
        </trans-unit>
        <trans-unit id="aa9ac735553e7ddbeebaa8fe6bb46b4b993410e7" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#to_io</source>
          <target state="translated">Http::UploadedFile#to_io</target>
        </trans-unit>
        <trans-unit id="258d80d96864c89180cfe583f1282e19b26fcab8" translate="yes" xml:space="preserve">
          <source>Http::UploadedFile#to_path</source>
          <target state="translated">Http::UploadedFile#to_path</target>
        </trans-unit>
        <trans-unit id="0f998ffabcb24b6bc6b6c05a2878f4a6c386f099" translate="yes" xml:space="preserve">
          <source>HttpAuthentication</source>
          <target state="translated">HttpAuthentication</target>
        </trans-unit>
        <trans-unit id="a594e70bef47393f5fcce2ac4c1bef06d7538244" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic</source>
          <target state="translated">HttpAuthentication::Basic</target>
        </trans-unit>
        <trans-unit id="87afc9686da0d655da2c5c923407304812a5c2e0" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#auth_param</source>
          <target state="translated">HttpAuthentication::Basic#auth_param</target>
        </trans-unit>
        <trans-unit id="d6ce8f7c7685338104b8727389cd46ab3905e3cf" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#auth_scheme</source>
          <target state="translated">HttpAuthentication::Basic#auth_scheme</target>
        </trans-unit>
        <trans-unit id="77cb29c029cb8e75809c0b4622e4b69d048493dd" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#authenticate</source>
          <target state="translated">HttpAuthentication::Basic#authenticate</target>
        </trans-unit>
        <trans-unit id="9327b0c416df23142b6fba4e1cbc59868e377560" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#authentication_request</source>
          <target state="translated">HttpAuthentication::Basic#authentication_request</target>
        </trans-unit>
        <trans-unit id="077ba8970757b827885ba2193d42ee4172f73aca" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#decode_credentials</source>
          <target state="translated">HttpAuthentication::Basic#decode_credentials</target>
        </trans-unit>
        <trans-unit id="43445d035b05edfc4ba6996927eb9942b753ac31" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#encode_credentials</source>
          <target state="translated">HttpAuthentication::Basic#encode_credentials</target>
        </trans-unit>
        <trans-unit id="8a95864814a4e08306d55c38d1549fe63a91a203" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#has_basic_credentials?</source>
          <target state="translated">HttpAuthentication::Basic#has_basic_credentials?</target>
        </trans-unit>
        <trans-unit id="e71b3392593f3496044ef2b6896217e723a4a3fd" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Basic#user_name_and_password</source>
          <target state="translated">HttpAuthentication::Basic#user_name_and_password</target>
        </trans-unit>
        <trans-unit id="69af1ce56b15bc5b6d198ce79231026df5133793" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest</source>
          <target state="translated">HttpAuthentication::Digest</target>
        </trans-unit>
        <trans-unit id="0dca354043fea28d695ee2c14da7796357ba0d77" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#authenticate</source>
          <target state="translated">HttpAuthentication::Digest#authenticate</target>
        </trans-unit>
        <trans-unit id="3d1a924bebf26937d3af6522466f0864e151b108" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#authentication_header</source>
          <target state="translated">HttpAuthentication::Digest#authentication_header</target>
        </trans-unit>
        <trans-unit id="05870da4796484e47836020fd72ba098321495b8" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#authentication_request</source>
          <target state="translated">HttpAuthentication::Digest#authentication_request</target>
        </trans-unit>
        <trans-unit id="1a905396f52521ccf3a04a17dcbe467aad1d6c70" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#decode_credentials</source>
          <target state="translated">HttpAuthentication::Digest#decode_credentials</target>
        </trans-unit>
        <trans-unit id="ce93cf6ca13057687584cc92d418e28c4b4c9848" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#decode_credentials_header</source>
          <target state="translated">HttpAuthentication::Digest#decode_credentials_header</target>
        </trans-unit>
        <trans-unit id="93e6803b24421a129db1f606ae1112316290a480" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#encode_credentials</source>
          <target state="translated">HttpAuthentication::Digest#encode_credentials</target>
        </trans-unit>
        <trans-unit id="bb4a18bd2f03d911f6fb8755cfc1e61553dde30c" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#expected_response</source>
          <target state="translated">HttpAuthentication::Digest#expected_response</target>
        </trans-unit>
        <trans-unit id="5a53b29c1d78e99fdec59df6b34814a87ef3e03d" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#ha1</source>
          <target state="translated">HttpAuthentication::Digest#ha1</target>
        </trans-unit>
        <trans-unit id="48297ccd62d1c207029764ac45c05f411fc06fe3" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#nonce</source>
          <target state="translated">HttpAuthentication::Digest#nonce</target>
        </trans-unit>
        <trans-unit id="770eaa0218de07230a27a8b2124ee308e00b17b2" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#opaque</source>
          <target state="translated">HttpAuthentication::Digest#opaque</target>
        </trans-unit>
        <trans-unit id="ee9356ffb6eed22dcf6ce2e1f42ab3823f93ccff" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#secret_token</source>
          <target state="translated">HttpAuthentication::Digest#secret_token</target>
        </trans-unit>
        <trans-unit id="8427c2f11f6071a814b4a6c415f14bd1dcb720a2" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#validate_digest_response</source>
          <target state="translated">HttpAuthentication::Digest#validate_digest_response</target>
        </trans-unit>
        <trans-unit id="a6e5619bb23819866a97a68d762d6f7e8626b41e" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest#validate_nonce</source>
          <target state="translated">HttpAuthentication::Digest#validate_nonce</target>
        </trans-unit>
        <trans-unit id="165be4fdb2e13c352a955be9ca09197487333dfc" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest::ControllerMethods</source>
          <target state="translated">HttpAuthentication::Digest::ControllerMethods</target>
        </trans-unit>
        <trans-unit id="25016576509b935c6cad62cb2968efb60d299eb7" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest::ControllerMethods#authenticate_or_request_with_http_digest</source>
          <target state="translated">HttpAuthentication::Digest::ControllerMethods#authenticate_or_request_with_http_digest</target>
        </trans-unit>
        <trans-unit id="6aa29a37e0ce58e5d7287cffbac4c2675803dff1" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest::ControllerMethods#authenticate_with_http_digest</source>
          <target state="translated">HttpAuthentication::Digest::ControllerMethods#authenticate_with_http_digest</target>
        </trans-unit>
        <trans-unit id="8bd17ffd591c69beff10cbaf09eeec3dfddef5c8" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Digest::ControllerMethods#request_http_digest_authentication</source>
          <target state="translated">HttpAuthentication::Digest::ControllerMethods#request_http_digest_authentication</target>
        </trans-unit>
        <trans-unit id="5c181e070a33207a3bd7e39d00e35c6613716287" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token</source>
          <target state="translated">HttpAuthentication::Token</target>
        </trans-unit>
        <trans-unit id="8968e1f558c0632bcb464098aed284d68d44bc28" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#authenticate</source>
          <target state="translated">HttpAuthentication::Token#authenticate</target>
        </trans-unit>
        <trans-unit id="c6954e3d5f371838a45c0ef968002f2c92067160" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#authentication_request</source>
          <target state="translated">HttpAuthentication::Token#authentication_request</target>
        </trans-unit>
        <trans-unit id="6f8eb15d003bfda797515ca5a37b436a600c151c" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#encode_credentials</source>
          <target state="translated">HttpAuthentication::Token#encode_credentials</target>
        </trans-unit>
        <trans-unit id="e3ec1c4321202efd8693d21cca280da91ea3af99" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#params_array_from</source>
          <target state="translated">HttpAuthentication::Token#params_array_from</target>
        </trans-unit>
        <trans-unit id="ccd15415abaf05f2cd98f1e71c5e8949670d5448" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#raw_params</source>
          <target state="translated">HttpAuthentication::Token#raw_params</target>
        </trans-unit>
        <trans-unit id="ca67b6bdc2166bebe12ebcc5c10d569259363c9b" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#rewrite_param_values</source>
          <target state="translated">HttpAuthentication::Token#rewrite_param_values</target>
        </trans-unit>
        <trans-unit id="0ae3699c6084ca253e0bec18ba312121300c7684" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#token_and_options</source>
          <target state="translated">HttpAuthentication::Token#token_and_options</target>
        </trans-unit>
        <trans-unit id="64bf0418867d4b2e657cd8899dd48314e1ca09e5" translate="yes" xml:space="preserve">
          <source>HttpAuthentication::Token#token_params_from</source>
          <target state="translated">HttpAuthentication::Token#token_params_from</target>
        </trans-unit>
        <trans-unit id="f2ee71ab535df45f88b3294b11d6a558e546d092" translate="yes" xml:space="preserve">
          <source>I18n enforcing available locales</source>
          <target state="translated">사용 가능한 로케일을 시행하는 I18n</target>
        </trans-unit>
        <trans-unit id="84ade51a9fd9d1edd2ae86a5d27ebe72c37abd15" translate="yes" xml:space="preserve">
          <source>I18n key</source>
          <target state="translated">I18n 키</target>
        </trans-unit>
        <trans-unit id="c99ee2f8498538310347edcd60795b6c51710795" translate="yes" xml:space="preserve">
          <source>I18n support in Ruby on Rails was introduced in the release 2.2 and is still evolving. The project follows the good Ruby on Rails development tradition of evolving solutions in gems and real applications first, and only then cherry-picking the best-of-breed of most widely useful features for inclusion in the core.</source>
          <target state="translated">Ruby on Rails의 I18n 지원은 릴리스 2.2에서 도입되었으며 여전히 발전하고 있습니다. 이 프로젝트는 보석과 실제 응용 프로그램에서 진화하는 솔루션의 우수한 Ruby on Rails 개발 전통을 따르고 핵심에 포함하기 위해 가장 널리 사용되는 가장 유용한 기능을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="1626b0d1e3b1edb77373075a9a73ec85340a6586" translate="yes" xml:space="preserve">
          <source>I18n.locale to be used during the job.</source>
          <target state="translated">작업 중에 사용될 I18n.locale</target>
        </trans-unit>
        <trans-unit id="6c6b979af9cfa80f076d4ba7e659b6581cc83565" translate="yes" xml:space="preserve">
          <source>ID of the message, generated by the Mail gem</source>
          <target state="translated">Mail gem에 의해 생성 된 메시지의 ID</target>
        </trans-unit>
        <trans-unit id="3eb3f1b8d397b8ad7b2ee8f4b87c5c3bffa96885" translate="yes" xml:space="preserve">
          <source>ID optionally provided by adapter</source>
          <target state="translated">어댑터가 선택적으로 제공 한 ID</target>
        </trans-unit>
        <trans-unit id="47ff230ebb520f4e049718dc7eafe51decc77f2f" translate="yes" xml:space="preserve">
          <source>IDENTIFIER_ERROR_MESSAGE</source>
          <target state="translated">IDENTIFIER_ERROR_MESSAGE</target>
        </trans-unit>
        <trans-unit id="5003bde348f8a9c2eacfb6372c566b83b691d24c" translate="yes" xml:space="preserve">
          <source>IDENTITY</source>
          <target state="translated">IDENTITY</target>
        </trans-unit>
        <trans-unit id="fb482c25bbf70e31ed0474016b3a98d8af4e5f02" translate="yes" xml:space="preserve">
          <source>ID_ATTRIBUTE_METHODS</source>
          <target state="translated">ID_ATTRIBUTE_METHODS</target>
        </trans-unit>
        <trans-unit id="493a48b9d5190bb3eb5dec01a3b5d0bd614609c1" translate="yes" xml:space="preserve">
          <source>IF YOU DON'T USE A PROXY, THIS MAKES YOU VULNERABLE TO IP SPOOFING. This middleware assumes that there is at least one proxy sitting around and setting headers with the client's remote IP address. If you don't use a proxy, because you are hosted on e.g. Heroku without &lt;a href=&quot;ssl&quot;&gt;SSL&lt;/a&gt;, any client can claim to have any IP address by setting the X-Forwarded-For header. If you care about that, then you need to explicitly drop or ignore those headers sometime before this middleware runs.</source>
          <target state="translated">프록시를 사용하지 않으면 IP 스푸핑에 취약합니다. 이 미들웨어는 클라이언트의 원격 IP 주소로 헤더를 설정하고 설정하는 프록시가 하나 이상 있다고 가정합니다. 프록시를 사용하지 않으면 &lt;a href=&quot;ssl&quot;&gt;SSL&lt;/a&gt; 없이 Heroku에서 호스팅되기 때문에 모든 클라이언트는 X-Forwarded-For 헤더를 설정하여 모든 IP 주소를 주장 할 수 있습니다. 신경이 쓰이는 경우이 미들웨어가 실행되기 전에 언젠가 해당 헤더를 명시 적으로 삭제하거나 무시해야합니다.</target>
        </trans-unit>
        <trans-unit id="a14339a4ece5dcf693ab4fe80eee7eefb68c26bd" translate="yes" xml:space="preserve">
          <source>INVALID_METHODS_FOR_DELETE_ALL</source>
          <target state="translated">INVALID_METHODS_FOR_DELETE_ALL</target>
        </trans-unit>
        <trans-unit id="d473dbfadb69452b40146834d6d9ef4b0212077f" translate="yes" xml:space="preserve">
          <source>IP_HOST_REGEXP</source>
          <target state="translated">IP_HOST_REGEXP</target>
        </trans-unit>
        <trans-unit id="7cde613c4448fe95e5d7736745a2accf9e2b278b" translate="yes" xml:space="preserve">
          <source>Identical to Ruby's clone method. This is a &amp;ldquo;shallow&amp;rdquo; copy. Be warned that your attributes are not copied. That means that modifying attributes of the clone will modify the original, since they will both point to the same attributes hash. If you need a copy of your attributes hash, please use the &lt;a href=&quot;core#method-i-dup&quot;&gt;dup&lt;/a&gt; method.</source>
          <target state="translated">Ruby의 복제 방법과 동일합니다. 이것은 &quot;얕은&quot;사본입니다. 귀하의 속성은 복사되지 않습니다. 즉 클론의 속성을 수정하면 원본이 수정됩니다. 둘 다 동일한 속성 해시를 가리 키기 때문입니다. 속성 해시 사본이 필요한 경우 &lt;a href=&quot;core#method-i-dup&quot;&gt;dup&lt;/a&gt; 방법을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3455d7efc11d2c340639ea75543b069cfd68c2c6" translate="yes" xml:space="preserve">
          <source>Identifies whether the class name of a record or class is uncountable.</source>
          <target state="translated">레코드 또는 클래스의 클래스 이름을 계산할 수 없는지 식별합니다.</target>
        </trans-unit>
        <trans-unit id="76eeba57bddb27b82fc170e9515c6fd520b56ddf" translate="yes" xml:space="preserve">
          <source>Idiomatic Rails applications only issue &lt;code&gt;require&lt;/code&gt; calls to load stuff from their &lt;code&gt;lib&lt;/code&gt; directory, the Ruby standard library, Ruby gems, etc. That is, anything that does not belong to their autoload paths, explained below.</source>
          <target state="translated">Idiomatic Rails 응용 프로그램 은 &lt;code&gt;lib&lt;/code&gt; 디렉토리, Ruby 표준 라이브러리, Ruby gem 등에서 물건을로드하기위한 호출 만 &lt;code&gt;require&lt;/code&gt; 합니다 . 즉, 자동로드 경로에 속하지 않는 것은 아래 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4646451298bcadf6000d3d745fe21ab29fb12c0f" translate="yes" xml:space="preserve">
          <source>If &quot;SSL&quot; was defined to be an acronym:</source>
          <target state="translated">&quot;SSL&quot;이 약어로 정의 된 경우 :</target>
        </trans-unit>
        <trans-unit id="1f06d656433e3ed30e3d56d44e76f410e44d6475" translate="yes" xml:space="preserve">
          <source>If &quot;asset fallback&quot; is enabled then when an asset cannot be found the path will be output instead and no error raised. The asset fallback behavior is enabled by default.</source>
          <target state="translated">&quot;자산 폴백&quot;이 활성화 된 경우 자산을 찾을 수 없으면 경로가 대신 출력되고 오류가 발생하지 않습니다. 자산 대체 동작은 기본적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a0cbe1e1199852356b06dce1868473af64a463b5" translate="yes" xml:space="preserve">
          <source>If &amp;ldquo;SSL&amp;rdquo; was defined to be an acronym:</source>
          <target state="translated">&amp;ldquo;SSL&amp;rdquo;이 약어로 정의 된 경우 :</target>
        </trans-unit>
        <trans-unit id="249b3e35df228a8fdec1a9be084d211eb125be1f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt; is used with &lt;a href=&quot;querymethods#method-i-group&quot;&gt;Relation#group&lt;/a&gt; for multiple columns, it returns a &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt; whose keys are an array containing the individual values of each column and the value of each key would be the &lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt;.</source>
          <target state="translated">경우에 &lt;a href=&quot;calculations#method-i-count&quot;&gt;카운트&lt;/a&gt; 와 함께 사용 &lt;a href=&quot;querymethods#method-i-group&quot;&gt;관계 # 그룹&lt;/a&gt; 복수 열의, 그것을 반환 &lt;a href=&quot;../hash&quot;&gt;해시&lt;/a&gt; 그 키 될 각 컬럼의 각 값들 및 각 키의 값을 포함하는 어레이이다 &lt;a href=&quot;calculations#method-i-count&quot;&gt;횟수&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a07baa0e2bd6aa60b679019b1c8364c568de818b" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt; is used with &lt;a href=&quot;querymethods#method-i-group&quot;&gt;Relation#group&lt;/a&gt;, it returns a &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt; whose keys represent the aggregated column, and the values are the respective amounts:</source>
          <target state="translated">&lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt; 가 &lt;a href=&quot;querymethods#method-i-group&quot;&gt;Relation # group&lt;/a&gt; 과 함께 사용 되면 키가 집계 열을 나타내는 &lt;a href=&quot;../hash&quot;&gt;해시&lt;/a&gt; 를 반환하며 값은 각각의 양입니다.</target>
        </trans-unit>
        <trans-unit id="ef60e172a14266d56f1d7dd9c45d1fe062a253f8" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;calculations#method-i-count&quot;&gt;count&lt;/a&gt; is used with &lt;a href=&quot;querymethods#method-i-select&quot;&gt;Relation#select&lt;/a&gt;, it will count the selected columns:</source>
          <target state="translated">경우 &lt;a href=&quot;calculations#method-i-count&quot;&gt;계산&lt;/a&gt; 에 사용되는 &lt;a href=&quot;querymethods#method-i-select&quot;&gt;관계 번호를 선택&lt;/a&gt; , 선택된 열을 계산합니다 :</target>
        </trans-unit>
        <trans-unit id="dd023fbcb560e02ef92270bf1806e204f3796b9f" translate="yes" xml:space="preserve">
          <source>If &lt;a href=&quot;querymethods#method-i-where&quot;&gt;where&lt;/a&gt; is called with multiple arguments, these are treated as if they were passed as the elements of a single array.</source>
          <target state="translated">경우 &lt;a href=&quot;querymethods#method-i-where&quot;&gt;어디에&lt;/a&gt; 여러 인수로 호출들이 하나의 배열의 요소로 전달 된 것처럼, 이러한 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="daa2040624870ca0b9137f4341255832a593e222" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;:only&lt;/code&gt; or &lt;code&gt;:except&lt;/code&gt; are used, convert the options into the &lt;code&gt;:if&lt;/code&gt; and &lt;code&gt;:unless&lt;/code&gt; options of &lt;a href=&quot;../../activesupport/callbacks&quot;&gt;ActiveSupport::Callbacks&lt;/a&gt;.</source>
          <target state="translated">만약 &lt;code&gt;:only&lt;/code&gt; 나 &lt;code&gt;:except&lt;/code&gt; 사용의에 옵션을 변환 &lt;code&gt;:if&lt;/code&gt; 와 &lt;code&gt;:unless&lt;/code&gt; 의 옵션 &lt;a href=&quot;../../activesupport/callbacks&quot;&gt;ActiveSupport :: 콜백&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c4e66f72e11ef612efcf887d5000111a11e20d6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;:ruby&lt;/code&gt; is selected, then the schema is stored in &lt;code&gt;db/schema.rb&lt;/code&gt;. If you look at this file you'll find that it looks an awful lot like one very big migration:</source>
          <target state="translated">경우 &lt;code&gt;:ruby&lt;/code&gt; 선택되어, 다음 스키마에 저장되어있는 &lt;code&gt;db/schema.rb&lt;/code&gt; . 이 파일을 보면 매우 큰 마이그레이션과 끔찍한 모습을 보입니다.</target>
        </trans-unit>
        <trans-unit id="fbd72998a89b40471a5578b48ab829ac8cb35184" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;:type&lt;/code&gt; is not specified, it will be guessed from the file extension specified in &lt;code&gt;:filename&lt;/code&gt;. If the content type is not registered for the extension, &lt;code&gt;application/octet-stream&lt;/code&gt; will be used.</source>
          <target state="translated">경우 &lt;code&gt;:type&lt;/code&gt; 지정되지 않은, 그것은에 지정된 파일 확장자에서 추측됩니다 &lt;code&gt;:filename&lt;/code&gt; . 컨텐츠 유형이 확장에 등록되지 않은 경우 &lt;code&gt;application/octet-stream&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="29a7b4d8f2dca3b77ab187b69d0c87404270490b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;@article.author_id&lt;/code&gt; is 1, this would return:</source>
          <target state="translated">경우 &lt;code&gt;@article.author_id&lt;/code&gt; 1이 반환 것입니다 :</target>
        </trans-unit>
        <trans-unit id="298cbc77daf58cd20527cf966283ed3e453ff6b0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;@article.author_ids&lt;/code&gt; is [1], this would return:</source>
          <target state="translated">경우 &lt;code&gt;@article.author_ids&lt;/code&gt; [1]이며,이 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="12b843b3ebff53a2588abcdc74a47c3d4fbb0e84" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;@article.person_id&lt;/code&gt; is 1, this would become:</source>
          <target state="translated">경우 &lt;code&gt;@article.person_id&lt;/code&gt; 1이며,이 될 것입니다 :</target>
        </trans-unit>
        <trans-unit id="0f7b33054c90e711de2c21c8a6cc101b5af83c53" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;@book.special?&lt;/code&gt; evaluates to &lt;code&gt;true&lt;/code&gt;, Rails will start the rendering process to dump the &lt;code&gt;@book&lt;/code&gt; variable into the &lt;code&gt;special_show&lt;/code&gt; view. But this will &lt;em&gt;not&lt;/em&gt; stop the rest of the code in the &lt;code&gt;show&lt;/code&gt; action from running, and when Rails hits the end of the action, it will start to render the &lt;code&gt;regular_show&lt;/code&gt; view - and throw an error. The solution is simple: make sure that you have only one call to &lt;code&gt;render&lt;/code&gt; or &lt;code&gt;redirect&lt;/code&gt; in a single code path. One thing that can help is &lt;code&gt;and return&lt;/code&gt;. Here's a patched version of the method:</source>
          <target state="translated">만약 &lt;code&gt;@book.special?&lt;/code&gt; &lt;code&gt;true&lt;/code&gt; 로 평가 되면 Rails는 &lt;code&gt;@book&lt;/code&gt; 변수를 &lt;code&gt;special_show&lt;/code&gt; 뷰로 덤프하기 위해 렌더링 프로세스를 시작합니다 . 그러나 이것은 &lt;code&gt;show&lt;/code&gt; 액션 의 나머지 코드가 실행되는 &lt;em&gt;것을&lt;/em&gt; 막지 &lt;em&gt;않으며&lt;/em&gt; Rails가 액션의 끝에 &lt;code&gt;regular_show&lt;/code&gt; 하면 regular_show 뷰 를 렌더링하기 시작 하고 오류가 발생합니다. 해결 방법은 간단 합니다. 단일 코드 경로에서 &lt;code&gt;render&lt;/code&gt; 하거나 &lt;code&gt;redirect&lt;/code&gt; 하기위한 호출이 하나만 있는지 확인하십시오 . 도움이 될 수있는 한 가지는 &lt;code&gt;and return&lt;/code&gt; 입니다. 이 방법의 패치 버전은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9cad4e7c6710f7890209b7d44ad4a778b2455d8b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;@post.author_id&lt;/code&gt; is already &lt;code&gt;1&lt;/code&gt;, this would return:</source>
          <target state="translated">경우 &lt;code&gt;@post.author_id&lt;/code&gt; 이미 &lt;code&gt;1&lt;/code&gt; 이 반환 것입니다 :</target>
        </trans-unit>
        <trans-unit id="e0342309d859c1eea96599c87971ca23ed403bad" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;@post.author_ids&lt;/code&gt; is already &lt;code&gt;[1]&lt;/code&gt;, this would return:</source>
          <target state="translated">경우 &lt;code&gt;@post.author_ids&lt;/code&gt; 이미 &lt;code&gt;[1]&lt;/code&gt; ,이 반환합니다 :</target>
        </trans-unit>
        <trans-unit id="226e37b2e315ad8c6dab5b3249f89d50fc13061d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;A&lt;/code&gt; exists, the class or module that was originally in &lt;code&gt;A&lt;/code&gt; may not be there anymore. For example, if after a constant removal there was another constant assignment there would generally be a different object in there.</source>
          <target state="translated">&lt;code&gt;A&lt;/code&gt; 가 존재 하면 원래 &lt;code&gt;A&lt;/code&gt; 에 있던 클래스 나 모듈 이 더 이상 없을 수 있습니다. 예를 들어, 일정한 제거 후에 또 다른 상수 할당이 있으면 일반적으로 다른 개체가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a0f0efdd9b6a7a2586a665cf5913b9fbbe6dc49" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;ENV[&quot;PARALLEL_WORKERS&quot;]&lt;/code&gt; is set the workers argument will be ignored and the environment variable will be used instead. This is useful for CI environments, or other environments where you may need more workers than you do for local testing.</source>
          <target state="translated">경우 &lt;code&gt;ENV[&quot;PARALLEL_WORKERS&quot;]&lt;/code&gt; 설정 노동자 인수는 무시되고 환경 변수가 대신 사용됩니다. 이는 CI 환경 또는 로컬 테스트에 필요한 것보다 더 많은 작업자가 필요할 수있는 기타 환경에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c0ceafa6266777d864b65001f61a9fcc0d668064" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Hotel::Services&lt;/code&gt; is known by the time &lt;code&gt;app/models/hotel/geo_location.rb&lt;/code&gt; is being loaded, &lt;code&gt;Services&lt;/code&gt; is resolved by Ruby because &lt;code&gt;Hotel&lt;/code&gt; belongs to the nesting when the singleton class of &lt;code&gt;Hotel::GeoLocation&lt;/code&gt; is opened.</source>
          <target state="translated">경우 &lt;code&gt;Hotel::Services&lt;/code&gt; 시간에 의해 알려진 &lt;code&gt;app/models/hotel/geo_location.rb&lt;/code&gt; 로드되고, &lt;code&gt;Services&lt;/code&gt; 때문에 루비에 의해 해결 &lt;code&gt;Hotel&lt;/code&gt; 의 싱글 톤 클래스 때 중첩에 속하는 &lt;code&gt;Hotel::GeoLocation&lt;/code&gt; 열립니다.</target>
        </trans-unit>
        <trans-unit id="84a65d97a16f8d123d0a69fb4861498654755fe9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;MyEngine&lt;/code&gt; is isolated, The routes above will point to &lt;code&gt;MyEngine::ArticlesController&lt;/code&gt;. You also don't need to use longer URL helpers like &lt;code&gt;my_engine_articles_path&lt;/code&gt;. Instead, you should simply use &lt;code&gt;articles_path&lt;/code&gt;, like you would do with your main application.</source>
          <target state="translated">&lt;code&gt;MyEngine&lt;/code&gt; 이 분리 된 경우 위의 경로는 &lt;code&gt;MyEngine::ArticlesController&lt;/code&gt; 가리 킵니다 . 또한 &lt;code&gt;my_engine_articles_path&lt;/code&gt; 와 같은 더 긴 URL 도우미를 사용할 필요가 없습니다 . 대신 기본 애플리케이션에서와 같이 &lt;code&gt;articles_path&lt;/code&gt; 를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="34e78b765dbd66dcd90e261a56ade1a30012af92" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;User&lt;/code&gt; is autoloaded before reaching the &lt;code&gt;require&lt;/code&gt;, &lt;code&gt;app/models/user.rb&lt;/code&gt; runs again because &lt;code&gt;load&lt;/code&gt; does not update &lt;code&gt;$LOADED_FEATURES&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; 에 도달하기 전에 &lt;code&gt;User&lt;/code&gt; 가 자동로드 되면 , &lt;code&gt;load&lt;/code&gt; 는 &lt;code&gt;$LOADED_FEATURES&lt;/code&gt; 업데이트하지 않기 때문에 &lt;code&gt;app/models/user.rb&lt;/code&gt; 가 다시 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="19805bdc45e0bee704460c9d5695cb4756287f7d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;User&lt;/code&gt; is missing, in either case all Rails knows is that a constant called &quot;User&quot; was missing in a module called &quot;Admin&quot;.</source>
          <target state="translated">경우 &lt;code&gt;User&lt;/code&gt; 없는 모든 레일 알고 두 경우 모두에서 &quot;사용자&quot;라는 상수는 &quot;관리자&quot;라는 모듈에서 누락 된 것입니다.</target>
        </trans-unit>
        <trans-unit id="da8d34efd182b85212188c18e79e20e426968145" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;args&lt;/code&gt; is provided as a &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt;, a parameterized email is matched.</source>
          <target state="translated">&lt;code&gt;args&lt;/code&gt; 가 &lt;a href=&quot;../hash&quot;&gt;Hash&lt;/a&gt; 로 제공 되면 매개 변수화 된 이메일이 일치합니다.</target>
        </trans-unit>
        <trans-unit id="78623f9074205614d01697597d2a9d855501abcf" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;autoload_paths&lt;/code&gt; has a file called &lt;code&gt;admin.rb&lt;/code&gt; Rails is going to load that one, but if there's no such file and a directory called &lt;code&gt;admin&lt;/code&gt; is found, Rails creates an empty module and assigns it to the &lt;code&gt;Admin&lt;/code&gt; constant on the fly.</source>
          <target state="translated">경우 &lt;code&gt;autoload_paths&lt;/code&gt; 는 라는 파일이 &lt;code&gt;admin.rb&lt;/code&gt; 레일 한 것을 부하에 가고,하지만 거기에 그런 파일 없습니다와라는 디렉토리 경우 &lt;code&gt;admin&lt;/code&gt; 발견, 레일은에 빈 모듈 및 양수인을 만들어 &lt;code&gt;Admin&lt;/code&gt; 즉시 상수.</target>
        </trans-unit>
        <trans-unit id="93463d0272669ef08d1482e73eeb7aa19e8b9070" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;candidates&lt;/code&gt; collection is not given, method returns true.</source>
          <target state="translated">경우 &lt;code&gt;candidates&lt;/code&gt; 모음이 제공되지 않으며, 메소드는 true를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="9195a4ca8b0f1d0cd62245fb7d4e19d195d79a51" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;config.action_dispatch.encrypted_cookie_salt&lt;/code&gt; and &lt;code&gt;config.action_dispatch.encrypted_signed_cookie_salt&lt;/code&gt; are both set, legacy cookies encrypted with HMAC AES-256-CBC will be transparently upgraded.</source>
          <target state="translated">경우 &lt;code&gt;config.action_dispatch.encrypted_cookie_salt&lt;/code&gt; 및 &lt;code&gt;config.action_dispatch.encrypted_signed_cookie_salt&lt;/code&gt; 이 설정되어 있습니다, HMAC AES-256-CBC 암호화 기존 쿠키는 투명하게 업그레이드됩니다.</target>
        </trans-unit>
        <trans-unit id="fb12073af8db3b5db6213ae469dda96b85fec31f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;config.relative_url_root&lt;/code&gt; is specified, all assets will have that root prepended.</source>
          <target state="translated">경우 &lt;code&gt;config.relative_url_root&lt;/code&gt; 가 지정되어, 모든 자산 루트가 앞에 추가한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ab1b246d6726f990ba7be0f6c40116fe4c86d7c5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;element&lt;/code&gt; is in the queue, remove and return it, or &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;element&lt;/code&gt; 큐에, 제거하고, 또는 반환 &lt;code&gt;nil&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c0c14dd688c0389818e9279278fa958e43400c50" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;f&lt;/code&gt; is an instance of &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; then this will render the &lt;code&gt;form&lt;/code&gt; partial, setting the partial's object to the form builder. If the form builder is of class &lt;code&gt;LabellingFormBuilder&lt;/code&gt; then the &lt;code&gt;labelling_form&lt;/code&gt; partial would be rendered instead.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 가 &lt;code&gt;ActionView::Helpers::FormBuilder&lt;/code&gt; 의 인스턴스 인 경우 , 부분의 오브젝트를 양식 빌더로 설정하여 &lt;code&gt;form&lt;/code&gt; 부분적으로 렌더링합니다 . 폼 빌더 클래스의 경우 &lt;code&gt;LabellingFormBuilder&lt;/code&gt; 다음 &lt;code&gt;labelling_form&lt;/code&gt; 부분 대신 렌더링 될 것이다.</target>
        </trans-unit>
        <trans-unit id="32fcf53617ef55e41583d021702b9df7f5d3796c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;file&lt;/code&gt; is the filename of a file that contains annotations this method returns a hash with a single entry that maps &lt;code&gt;file&lt;/code&gt; to an array of its annotations. Otherwise it returns an empty hash.</source>
          <target state="translated">경우 &lt;code&gt;file&lt;/code&gt; 이 방법을 매핑하는 단일 항목으로 해시를 반환 주석을 포함하는 파일의 파일 이름입니다 &lt;code&gt;file&lt;/code&gt; 그 주석의 배열. 그렇지 않으면 빈 해시를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b0ce96199c7393f49ec301879d808aff4198c3d6" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;message&lt;/code&gt; is a proc, it will be called, allowing for things like &lt;code&gt;Time.now&lt;/code&gt; to be used within an error.</source>
          <target state="translated">경우 &lt;code&gt;message&lt;/code&gt; 발동이며, 그것은 같은 것들을 허용, 호출됩니다 &lt;code&gt;Time.now&lt;/code&gt; 오류 내에서 사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e49bc04ea652ea875a91f484ace594336b546b2" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;message&lt;/code&gt; is a symbol, it will be translated using the appropriate scope (see &lt;code&gt;generate_message&lt;/code&gt;).</source>
          <target state="translated">경우 &lt;code&gt;message&lt;/code&gt; 기호이며,이 적절한 범위로 환산된다 (참조 &lt;code&gt;generate_message&lt;/code&gt; 을 ).</target>
        </trans-unit>
        <trans-unit id="d7d9fab19d663dd8f5a12a1d81f59fda598af8c3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; has a &lt;code&gt;:tag&lt;/code&gt; flag, it will be passed to each annotation's &lt;code&gt;to_s&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;options&lt;/code&gt; 있다 &lt;code&gt;:tag&lt;/code&gt; 플래그, 그것은 각 주석의 전달됩니다 &lt;code&gt;to_s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dce7f84067bd9c82f5d5af04a0ed9896342e8b25" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options&lt;/code&gt; has a flag &lt;code&gt;:tag&lt;/code&gt; the tag is shown as in the example above. Otherwise the string contains just line and text.</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 에 플래그 &lt;code&gt;:tag&lt;/code&gt; 가 있으면 위의 예와 같이 태그가 표시됩니다. 그렇지 않으면 문자열에 줄과 텍스트 만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b0c6ddb25f8fe256bbc4c8d872ef3bd5579e4541" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;options[:env]&lt;/code&gt; is specified, the line is appended to the corresponding file in &lt;code&gt;config/environments&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;options[:env]&lt;/code&gt; 지정되면, 라인에 대응하는 파일에 첨부되는 &lt;code&gt;config/environments&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="51e3baaba3564a3e2b19d2adc323cf078673864e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;selected&lt;/code&gt; is specified as a Proc, those members of the collection that return true for the anonymous function are the selected values.</source>
          <target state="translated">경우 &lt;code&gt;selected&lt;/code&gt; proc 디렉토리로 지정, 익명 함수에 대해 true를 반환하는 컬렉션의 그 멤버는 선택된 값입니다.</target>
        </trans-unit>
        <trans-unit id="429212d2ae87c33281f9218d75cf57cb18e5162f" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;selected&lt;/code&gt; is specified as a value or array of values, the element(s) returning a match on &lt;code&gt;value_method&lt;/code&gt; will be selected option tag(s).</source>
          <target state="translated">&lt;code&gt;selected&lt;/code&gt; 가 값 또는 값의 배열로 지정 되면 &lt;code&gt;value_method&lt;/code&gt; 에서 일치 항목을 반환하는 요소 가 옵션 태그로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="8798a282fe9c0be0c12148f06a23dcd00bc21344" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;since&lt;/code&gt; or &lt;code&gt;ago&lt;/code&gt; jump to a time that can't be expressed with &lt;code&gt;Time&lt;/code&gt; a &lt;code&gt;DateTime&lt;/code&gt; object is returned instead.</source>
          <target state="translated">만약 &lt;code&gt;since&lt;/code&gt; 또는 &lt;code&gt;ago&lt;/code&gt; 으로 표현 될 수없는 시간에 점프 &lt;code&gt;Time&lt;/code&gt; &lt;code&gt;DateTime&lt;/code&gt; 이 아닌 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f85e2c4711d78c3dfd30312c2a9d63292ee10ac3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;tag&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt;, annotations with either default or registered tags are printed.</source>
          <target state="translated">경우 &lt;code&gt;tag&lt;/code&gt; 입니다 &lt;code&gt;nil&lt;/code&gt; , 중 기본 또는 등록 된 태그 주석이 인쇄되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ed5affe2417a0ddd8f8237c055390abbbc5db0c" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout&lt;/code&gt; is given, block if there is no element available, waiting up to &lt;code&gt;timeout&lt;/code&gt; seconds for an element to become available.</source>
          <target state="translated">&lt;code&gt;timeout&lt;/code&gt; 이 초과 되면 사용 가능한 요소가없는 경우 차단 하고 요소가 사용 가능해질 때까지 최대 &lt;code&gt;timeout&lt;/code&gt; 초 동안 대기하십시오 .</target>
        </trans-unit>
        <trans-unit id="de9ecfcf49f3eb63f2f05dc7553e1b77e8630dfb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;timeout&lt;/code&gt; is not given, remove and return the head the queue if the number of available elements is strictly greater than the number of threads currently waiting (that is, don't jump ahead in line). Otherwise, return &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;timeout&lt;/code&gt; 주어지지 제거 가능한 요소의 수는 현재 (즉, 줄을 앞으로 이동하지 않음) 대기 스레드의 수보다 엄격하게 큰 경우 머리에게 큐를 돌려줍니다. 그렇지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="c09c858a0b7df7d86f44afde536bc0f0e160e002" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;try&lt;/code&gt; is called without arguments it yields the receiver to a given block unless it is &lt;code&gt;nil&lt;/code&gt;:</source>
          <target state="translated">경우 &lt;code&gt;try&lt;/code&gt; 인수없이 호출이 아닌 경우는 해당 블록에 수신기를 산출 &lt;code&gt;nil&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="eac9abbe8b17d53bb02997c95e3a1b891fa1cf30" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is a callable object it must expect one or two arguments. Depending on the arity, the callable is invoked with the &lt;code&gt;options&lt;/code&gt; hash as first argument with &lt;code&gt;key&lt;/code&gt; as &lt;code&gt;:root&lt;/code&gt;, and &lt;code&gt;key&lt;/code&gt; singularized as second argument. Its return value becomes a new node.</source>
          <target state="translated">경우 &lt;code&gt;value&lt;/code&gt; 호출 가능한 객체입니다 그것은 하나 개 또는 두 개의 인수를 기대해야합니다. arity에 따라 callable은 &lt;code&gt;key&lt;/code&gt; 가 &lt;code&gt;:root&lt;/code&gt; 인 첫 번째 인수로 hash &lt;code&gt;options&lt;/code&gt; 하고 두 번째 인수로 &lt;code&gt;key&lt;/code&gt; 를 단일화하여 호출합니다. 리턴 값은 새로운 노드가됩니다.</target>
        </trans-unit>
        <trans-unit id="fcb825486e5083747c0bf112641a9faec0802bb3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is a callable object it must expect one or two arguments. Depending on the arity, the callable is invoked with the &lt;code&gt;options&lt;/code&gt; hash as first argument with &lt;code&gt;key&lt;/code&gt; as &lt;code&gt;:root&lt;/code&gt;, and &lt;code&gt;key&lt;/code&gt; singularized as second argument. The callable can add nodes by using &lt;code&gt;options[:builder]&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;value&lt;/code&gt; 호출 가능한 객체입니다 그것은 하나 개 또는 두 개의 인수를 기대해야합니다. arity에 따라 callable은 &lt;code&gt;key&lt;/code&gt; 가 &lt;code&gt;:root&lt;/code&gt; 인 첫 번째 인수로 hash &lt;code&gt;options&lt;/code&gt; 하고 두 번째 인수로 &lt;code&gt;key&lt;/code&gt; 를 단일화하여 호출합니다. 콜 러블은 &lt;code&gt;options[:builder]&lt;/code&gt; 사용하여 노드를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f94997d12b6cb4d1abcbf281c0e3f6ad1d78afdc" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is a hash there's a recursive call with &lt;code&gt;key&lt;/code&gt; as &lt;code&gt;:root&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 가 해시 이면 &lt;code&gt;key&lt;/code&gt; 가 &lt;code&gt;:root&lt;/code&gt; 인 재귀 호출이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1af9fcc5c2caef4948fa4ea03bbd7b9af0de9090" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; is an array there's a recursive call with &lt;code&gt;key&lt;/code&gt; as &lt;code&gt;:root&lt;/code&gt;, and &lt;code&gt;key&lt;/code&gt; singularized as &lt;code&gt;:children&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 가 배열 이면 &lt;code&gt;key&lt;/code&gt; 가 &lt;code&gt;:root&lt;/code&gt; 이고 &lt;code&gt;key&lt;/code&gt; 가 &lt;code&gt;:children&lt;/code&gt; 로 반복되는 재귀 호출이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1668bd038bb5f42b2c326294204e8d7be48a1d0e" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;value&lt;/code&gt; responds to &lt;code&gt;to_xml&lt;/code&gt; the method is invoked with &lt;code&gt;key&lt;/code&gt; as &lt;code&gt;:root&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;value&lt;/code&gt; 에 응답 &lt;code&gt;to_xml&lt;/code&gt; 방법은 호출되어 &lt;code&gt;key&lt;/code&gt; 와 같은 &lt;code&gt;:root&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="466fa4c8854026719a6c3ab5c825097424d354f3" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;verify_authenticity_token&lt;/code&gt; was run (indicating that we have forgery protection enabled for this request) then also verify that we aren't serving an unauthorized cross-origin response.</source>
          <target state="translated">&lt;code&gt;verify_authenticity_token&lt;/code&gt; 이 실행 된 경우 (이 요청에 위조 방지 기능이 활성화되어 있음을 나타냄) 승인되지 않은 교차 ​​출처 응답을 제공하지 않는지도 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5ca49cf41c138f35252ab184c122a9a70c4b194b" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;workers&lt;/code&gt; is set to &lt;code&gt;:number_of_processors&lt;/code&gt;, the number of workers will be set to the actual core count on the machine you are on.</source>
          <target state="translated">&lt;code&gt;workers&lt;/code&gt; 가 &lt;code&gt;:number_of_processors&lt;/code&gt; 로 설정 되면 워커 수는 사용중인 머신의 실제 코어 수로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="648401d5f62a3bbd6b3fe0b63f880025ab1d48c1" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;n&lt;/em&gt; is not specified or is &lt;code&gt;nil&lt;/code&gt;, 16 is assumed. It may be larger in the future.</source>
          <target state="translated">경우 &lt;em&gt;N이&lt;/em&gt; 지정되지 않았거나 &lt;code&gt;nil&lt;/code&gt; , (16)은 가정한다. 앞으로 더 커질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6725c4d388be7942f97e67b02a3bbc9fdd74b934" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;n&lt;/em&gt; is not specified or is &lt;code&gt;nil&lt;/code&gt;, 16 is assumed. It may be larger in the future. This method can be used over &lt;code&gt;base58&lt;/code&gt; if a deterministic case key is necessary.</source>
          <target state="translated">경우 &lt;em&gt;N이&lt;/em&gt; 지정되지 않았거나 &lt;code&gt;nil&lt;/code&gt; , (16)은 가정한다. 앞으로 더 커질 수 있습니다. 결정적 케이스 키가 필요한 &lt;code&gt;base58&lt;/code&gt; 방법을 base58 보다 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="41fb52ab7bd605d408a6643c012c5952b89b2734" translate="yes" xml:space="preserve">
          <source>If A extends &lt;a href=&quot;../base&quot;&gt;ActiveRecord::Base&lt;/a&gt;, A.base_class will return A. If B descends from A through some arbitrarily deep hierarchy, B.base_class will return A.</source>
          <target state="translated">A가 &lt;a href=&quot;../base&quot;&gt;ActiveRecord :: Base를&lt;/a&gt; 확장하면 A.base_class는 A를 반환합니다. B가 A에서 임의의 딥 계층 구조를 통해 내려 가면 B.base_class는 A를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e9ff819ba19a3b7429f74a0356060c799e1d19c3" translate="yes" xml:space="preserve">
          <source>If ActiveRecord::Base.cache_versioning is turned off, as it was in Rails 5.1 and earlier, the cache key will also include a version.</source>
          <target state="translated">Rails 5.1 이전 버전에서와 같이 ActiveRecord :: Base.cache_versioning이 해제되어 있으면 캐시 키에도 버전이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e97f874c091376770afec22edded7a7092993dac" translate="yes" xml:space="preserve">
          <source>If ActiveRecord::Base.collection_cache_versioning is turned off, as it was in Rails 6.0 and earlier, the cache key will also include a version.</source>
          <target state="translated">Rails 6.0 및 그 이전 버전에서와 같이 ActiveRecord :: Base.collection_cache_versioning을 끄면 캐시 키에도 버전이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="01da03c1b29dd8a6a933e9e17ba219956be10d9e" translate="yes" xml:space="preserve">
          <source>If B &amp;lt; A and C &amp;lt; B and if A is an &lt;a href=&quot;classmethods#attribute-i-abstract_class&quot;&gt;#abstract_class&lt;/a&gt; then both B.base_class and C.base_class would return B as the answer since A is an abstract_class.</source>
          <target state="translated">B &amp;lt;A 및 C &amp;lt;B이고 A가 &lt;a href=&quot;classmethods#attribute-i-abstract_class&quot;&gt;#abstract_class 인&lt;/a&gt; 경우 A는 abstract_class 이므로 B.base_class와 C.base_class는 모두 B를 응답으로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="910ee9ce5e0a03da2ac18fc9989b45d545292504" translate="yes" xml:space="preserve">
          <source>If Header Injection was possible, Response Splitting might be, too. In HTTP, the header block is followed by two CRLFs and the actual data (usually HTML). The idea of Response Splitting is to inject two CRLFs into a header field, followed by another response with malicious HTML. The response will be:</source>
          <target state="translated">헤더 삽입이 가능하면 응답 분할도 가능합니다. HTTP에서 헤더 블록 다음에는 두 개의 CRLF와 실제 데이터 (일반적으로 HTML)가옵니다. Response Splitting의 개념은 두 개의 CRLF를 헤더 필드에 삽입 한 다음 악의적 인 HTML로 다른 응답을 보내는 것입니다. 응답은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a2df3ea66c368f6c6e1ca834c45729e2d2bf753a" translate="yes" xml:space="preserve">
          <source>If Rails doesn't recognize the command, it hands the reins over to Rake to run a task of the same name.</source>
          <target state="translated">Rails가 명령을 인식하지 못하면, 같은 이름의 작업을 실행하기 위해 고삐를 Rake에게 넘깁니다.</target>
        </trans-unit>
        <trans-unit id="5dbff13a3f2506529967aad30cd2c84642ced467" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;before_*&lt;/code&gt; callback cancels the action a ROLLBACK is issued. You can also trigger a ROLLBACK raising an exception in any of the callbacks, including &lt;code&gt;after_*&lt;/code&gt; hooks. Note, however, that in that case the client needs to be aware of it because an ordinary &lt;a href=&quot;persistence#method-i-save&quot;&gt;#save&lt;/a&gt; will raise such exception instead of quietly returning &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;before_*&lt;/code&gt; 콜백 작업을 취소 ROLLBACK을 발행한다. &lt;code&gt;after_*&lt;/code&gt; 후크를 포함하여 모든 콜백에서 예외를 발생시키는 ROLLBACK을 트리거 할 수도 있습니다 . 그러나이 경우 일반 &lt;a href=&quot;persistence#method-i-save&quot;&gt;#save&lt;/a&gt; 는 조용히 &lt;code&gt;false&lt;/code&gt; 를 반환하는 대신 이러한 예외를 발생 시키므로 클라이언트에 대해 알아야합니다 .</target>
        </trans-unit>
        <trans-unit id="b72170a2465df8886030f3ed6a3555bfded0f14f" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;before_*&lt;/code&gt; callback throws &lt;code&gt;:abort&lt;/code&gt;, all the later callbacks and the associated action are cancelled. &lt;a href=&quot;callbacks&quot;&gt;Callbacks&lt;/a&gt; are generally run in the order they are defined, with the exception of callbacks defined as methods on the model, which are called last.</source>
          <target state="translated">경우 &lt;code&gt;before_*&lt;/code&gt; 콜백이 발생합니다 &lt;code&gt;:abort&lt;/code&gt; , 모든 나중에 콜백 및 관련 작업이 취소됩니다. &lt;a href=&quot;callbacks&quot;&gt;콜백&lt;/a&gt; 은 일반적으로 모델에서 메소드로 정의 된 콜백을 제외하고 정의 된 순서대로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="c36cd39c58e24be22c531a46289da938c959f1ba" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;before_add&lt;/code&gt; callback throws an exception, the object does not get added to the collection. Similarly, if a &lt;code&gt;before_remove&lt;/code&gt; callback throws an exception, the object does not get removed from the collection.</source>
          <target state="translated">경우 &lt;code&gt;before_add&lt;/code&gt; 콜백 예외를 throw, 개체가 컬렉션에 추가되지 않습니다. 마찬가지로 &lt;code&gt;before_remove&lt;/code&gt; 콜백에서 예외가 발생하면 객체가 컬렉션에서 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e8ded195bb7b18408b4063d43676b296ddd327e5" translate="yes" xml:space="preserve">
          <source>If a Regexp is given, the matching portion of the string is returned. If a &lt;a href=&quot;string&quot;&gt;String&lt;/a&gt; is given, that given string is returned if it occurs in the string. In both cases, &lt;code&gt;nil&lt;/code&gt; is returned if there is no match.</source>
          <target state="translated">Regexp가 제공되면 문자열의 일치하는 부분이 반환됩니다. 경우 &lt;a href=&quot;string&quot;&gt;문자열이&lt;/a&gt; 주어진다는 문자열에서 발생하는 경우, 그 주어진 문자열이 반환됩니다. 두 경우 모두 일치하는 항목이 없으면 &lt;code&gt;nil&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="c41af17b53ebf34ff9ae24ecf1b4f2716745d195" translate="yes" xml:space="preserve">
          <source>If a block is given, &lt;code&gt;sum&lt;/code&gt; becomes an iterator that yields the elements of the collection and sums the returned values:</source>
          <target state="translated">블록이 주어지면 &lt;code&gt;sum&lt;/code&gt; 은 컬렉션의 요소를 산출하고 반환 된 값을 합산하는 반복자가됩니다.</target>
        </trans-unit>
        <trans-unit id="513ce7b88f94c212d334d77b6e3c4d3dee211f1e" translate="yes" xml:space="preserve">
          <source>If a block is passed the separators are those elements of the array for which the block returns true:</source>
          <target state="translated">블록이 전달되면 구분 기호는 블록이 true를 반환하는 배열의 요소입니다.</target>
        </trans-unit>
        <trans-unit id="6a52c7735670fff2f9255494888c261b298cffb5" translate="yes" xml:space="preserve">
          <source>If a block is passed, asserts that the block will cause the job to be enqueued with the given arguments.</source>
          <target state="translated">블록이 전달되면 해당 블록으로 인해 주어진 인수로 작업이 큐에 대기되도록합니다.</target>
        </trans-unit>
        <trans-unit id="92e5240b8dd8056e9df0197059366c02c3635e8f" translate="yes" xml:space="preserve">
          <source>If a block is passed, asserts that the block will cause the specified number of jobs to be enqueued.</source>
          <target state="translated">블록이 전달되면 해당 블록으로 인해 지정된 수의 작업이 큐에 대기되도록합니다.</target>
        </trans-unit>
        <trans-unit id="08e4193b1bb25259b506327b2a3258959264449e" translate="yes" xml:space="preserve">
          <source>If a block is passed, asserts that the block will cause the specified number of jobs to be performed.</source>
          <target state="translated">블록이 전달되면 블록이 지정된 수의 작업을 수행하게합니다.</target>
        </trans-unit>
        <trans-unit id="d7ad821784deb765ff67f30a7d7b671a0fcb5c67" translate="yes" xml:space="preserve">
          <source>If a block is passed, asserts that the block will not cause any job to be enqueued.</source>
          <target state="translated">블록이 전달되면 블록이 작업을 대기열에 넣지 않도록 주장합니다.</target>
        </trans-unit>
        <trans-unit id="cbb8f07462037e0e15ac59bfcdd78b88800ec582" translate="yes" xml:space="preserve">
          <source>If a block is passed, asserts that the block will not cause any job to be performed.</source>
          <target state="translated">블록이 전달되면 블록이 작업을 수행하지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="aaedcc24df40b6166f7e9237fe26a3993ef1cdd2" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block performs all of the jobs that were enqueued throughout the duration of the block and asserts that the job has been performed with the given arguments in the block.</source>
          <target state="translated">블록이 전달되면 해당 블록은 블록 기간 동안 큐에 대기 된 모든 작업을 수행하고 블록의 주어진 인수로 작업이 수행되었음을 주장합니다.</target>
        </trans-unit>
        <trans-unit id="b8fec891263d9daae7929276a0676a2e89e94060" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block should cause a message with the specified data to be sent.</source>
          <target state="translated">블록이 전달되면 해당 블록으로 인해 지정된 데이터가있는 메시지가 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="b337599bab8490a4258c80c012069a7855334889" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block should cause the specified email to be enqueued.</source>
          <target state="translated">블록이 전달되면 해당 블록으로 인해 지정된 이메일이 대기열에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="7b7b1f0aac0d94028895fdd4e19a04f9b30f94d0" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block should cause the specified number of emails to be enqueued.</source>
          <target state="translated">블록이 전달되면 해당 블록으로 인해 지정된 수의 전자 메일이 대기열에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="0577888880e63313e0905107c0ea3b08b2a18f97" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block should cause the specified number of emails to be sent.</source>
          <target state="translated">블록이 전달되면 해당 블록으로 인해 지정된 수의 전자 메일이 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="537da8463233ac3337fc49bed5232e6cfcd1286f" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block should cause the specified number of messages to be broadcasted.</source>
          <target state="translated">블록이 전달되면 해당 블록은 지정된 수의 메시지를 브로드 캐스트해야합니다.</target>
        </trans-unit>
        <trans-unit id="db392e9872a85a84d3fa4a1ae1644742a0842ccd" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block should not cause any emails to be sent.</source>
          <target state="translated">블록이 전달되면 해당 블록으로 인해 이메일이 전송되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="98b8678167700b42512cdd7acb9c1db4c07e3bfe" translate="yes" xml:space="preserve">
          <source>If a block is passed, that block should not cause any message to be sent.</source>
          <target state="translated">블록이 전달되면 해당 블록으로 인해 메시지가 전송되지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="a9cddb082ed08cd83e8660be8348a11df7100494" translate="yes" xml:space="preserve">
          <source>If a block is provided, it should not cause any emails to be enqueued.</source>
          <target state="translated">차단이 제공되면 이메일이 대기열에 들어 가지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="067cc69b3b04fbc1d4e67f830d884ffb7f6a2735" translate="yes" xml:space="preserve">
          <source>If a character set has been defined for this response (see charset=) then the character set information will also be included in the content type information.</source>
          <target state="translated">이 응답에 문자 세트가 정의 된 경우 (charset = 참조) 문자 세트 정보도 컨텐츠 유형 정보에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="023729606b8ce7b2cba38b5a075d34921624f61c" translate="yes" xml:space="preserve">
          <source>If a class defines &lt;code&gt;persisted?&lt;/code&gt; and &lt;code&gt;id&lt;/code&gt; methods, then you can include the &lt;code&gt;ActiveModel::Conversion&lt;/code&gt; module in that class, and call the Rails conversion methods on objects of that class.</source>
          <target state="translated">클래스가 &lt;code&gt;persisted?&lt;/code&gt; 정의하면 ? 및 &lt;code&gt;id&lt;/code&gt; 방법은, 당신은 포함 할 수 &lt;code&gt;ActiveModel::Conversion&lt;/code&gt; 클래스에 모듈을, 그리고 레일에게 그 클래스의 객체에 대한 변환 메소드를 호출.</target>
        </trans-unit>
        <trans-unit id="4e73b5f46513067df51fc52c6d174d950e565807" translate="yes" xml:space="preserve">
          <source>If a collection is given, the layout will be rendered once for each item in the collection. For example, these two snippets have the same output:</source>
          <target state="translated">컬렉션이 제공되면 컬렉션의 각 항목에 대해 레이아웃이 한 번 렌더링됩니다. 예를 들어이 두 스 니펫의 출력은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="a3643c1d804be9b193c89b7e31b7f3394bd92c53" translate="yes" xml:space="preserve">
          <source>If a command cannot be reversed, an &lt;code&gt;ActiveRecord::IrreversibleMigration&lt;/code&gt; exception will be raised when the migration is moving down.</source>
          <target state="translated">명령을 되돌릴 수없는 경우 마이그레이션을 진행할 때 &lt;code&gt;ActiveRecord::IrreversibleMigration&lt;/code&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b944453b70315a8c505fb99d751123c507c9388e" translate="yes" xml:space="preserve">
          <source>If a component extends the semantics of &lt;code&gt;response_body&lt;/code&gt; (as &lt;a href=&quot;../actioncontroller&quot;&gt;ActionController&lt;/a&gt; extends it to be anything that responds to the method each), this method needs to be overridden in order to still return a string.</source>
          <target state="translated">컴포넌트가 &lt;code&gt;response_body&lt;/code&gt; 의 시맨틱을 확장하는 경우 ( &lt;a href=&quot;../actioncontroller&quot;&gt;ActionController가&lt;/a&gt; 각 메소드에 응답하는 것으로 확장 됨)이 문자열을 계속 리턴하려면이 메소드를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="a7f1cf835e5459f9051847f483bcc6efaff6b28e" translate="yes" xml:space="preserve">
          <source>If a connection obtained through &lt;a href=&quot;connectionpool#method-i-connection&quot;&gt;connection&lt;/a&gt; or &lt;a href=&quot;connectionpool#method-i-with_connection&quot;&gt;with_connection&lt;/a&gt; methods already exists yield it to the block. If no such connection exists checkout a connection, yield it to the block, and checkin the connection when finished.</source>
          <target state="translated">&lt;a href=&quot;connectionpool#method-i-connection&quot;&gt;connection&lt;/a&gt; 또는 &lt;a href=&quot;connectionpool#method-i-with_connection&quot;&gt;with_connection&lt;/a&gt; 메소드를 통해 얻은 연결이 이미 존재하면 블록에 연결하십시오. 그러한 연결이 존재하지 않으면 연결을 체크 아웃하고 블록으로 연결을 마치고 연결을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="81cffde09e1f82366e441be3c5bc37c8b20bee84" translate="yes" xml:space="preserve">
          <source>If a method expects a variable number of arguments and uses &lt;code&gt;*&lt;/code&gt; in its declaration, however, such an options hash ends up being an item of the array of arguments, where it loses its role.</source>
          <target state="translated">그러나 메소드가 가변 개수의 인수를 예상 하고 선언에 &lt;code&gt;*&lt;/code&gt; 를 사용 하는 경우 이러한 옵션 해시는 인수 배열의 항목이되어 역할을 잃습니다.</target>
        </trans-unit>
        <trans-unit id="e3671294d7b85d64dd219b2b1a918acc4d6af40c" translate="yes" xml:space="preserve">
          <source>If a namespace is defined in a file, as &lt;code&gt;Hotel&lt;/code&gt; is here:</source>
          <target state="translated">네임 스페이스가 파일에 정의되어있는 경우 &lt;code&gt;Hotel&lt;/code&gt; 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d68462e62987e812a18f4377cd6d9f0b2c7169cd" translate="yes" xml:space="preserve">
          <source>If a page has no link like the one generated by this helper, browsers ask for &lt;code&gt;/favicon.ico&lt;/code&gt; automatically, and cache the file if the request succeeds. If the favicon changes it is hard to get it updated.</source>
          <target state="translated">이 헬퍼가 생성 한 것과 같은 링크가 페이지에 없으면 브라우저는 자동으로 &lt;code&gt;/favicon.ico&lt;/code&gt; 를 요청하고 요청이 성공하면 파일을 캐시합니다. 파비콘이 변경되면 업데이트하기가 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="3a8211c2ca31c599bf3cfa16c9c875308f10b887" translate="yes" xml:space="preserve">
          <source>If a passed record is deleted after the job is enqueued but before the &lt;code&gt;#perform&lt;/code&gt; method is called Active Job will raise an &lt;code&gt;ActiveJob::DeserializationError&lt;/code&gt; exception.</source>
          <target state="translated">작업을 대기열에 &lt;code&gt;#perform&lt;/code&gt; 후 #perform 메서드를 호출 하기 전에 전달 된 레코드가 삭제되면 Active Job이 &lt;code&gt;ActiveJob::DeserializationError&lt;/code&gt; 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="85fe36146529d258e4844ec7529684fce93b6866" translate="yes" xml:space="preserve">
          <source>If a precondition fails to be met, you can halt the processing using the &lt;code&gt;#bounced!&lt;/code&gt; method, which will silently prevent any further processing, but not actually send out any bounce notice. You can also pair this behavior with the invocation of an Action Mailer class responsible for sending out an actual bounce email. This is done using the &lt;code&gt;#bounce_with&lt;/code&gt; method, which takes the mail object returned by an Action Mailer method, like so:</source>
          <target state="translated">전제 조건이 충족되지 않으면 &lt;code&gt;#bounced!&lt;/code&gt; 메소드를 사용하면 추가 처리를 자동으로 방지하지만 실제로 반송 알림을 보내지는 않습니다. 실제 반송 이메일을 발송하는 Action Mailer 클래스의 호출과이 동작을 페어링 할 수도 있습니다. 이것은 &lt;code&gt;#bounce_with&lt;/code&gt; 메소드를 사용하여 수행 되며, Action Mailer 메소드가 리턴 한 메일 오브젝트를 다음과 같이 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="1b3f816c815ad65826777a8ff6f403171f824998" translate="yes" xml:space="preserve">
          <source>If a proc is given, its body is evaluated in the context of the current object. It can also optionally accept the current object as an argument.</source>
          <target state="translated">proc이 주어지면 본문은 현재 객체의 맥락에서 평가됩니다. 선택적으로 현재 오브젝트를 인수로 승인 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="149aacb06e7e3f6605d92f39725e302820877402" translate="yes" xml:space="preserve">
          <source>If a proc, lambda, or block is given, its body is evaluated in the context of the current object. It can also optionally accept the current object as an argument.</source>
          <target state="translated">proc, lambda 또는 block이 주어지면 본문은 현재 객체의 컨텍스트에서 평가됩니다. 선택적으로 현재 오브젝트를 인수로 승인 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="654956beac4b01771357ce14afd46acd98c5d148" translate="yes" xml:space="preserve">
          <source>If a role is passed, Active Record will look up the connection based on the requested role:</source>
          <target state="translated">역할이 전달되면 Active Record는 요청 된 역할을 기반으로 연결을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="13d2747a000fac043b24014a4f0ac35ad8710172" translate="yes" xml:space="preserve">
          <source>If a sequence name is not explicitly set when using Oracle, it will default to the commonly used pattern of: #{table_name}_seq</source>
          <target state="translated">Oracle을 사용할 때 시퀀스 이름이 명시 적으로 설정되지 않은 경우 기본적으로 # {table_name} _seq 패턴이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f254fa76dcfc9e00b93093a59438edbf311f2ca3" translate="yes" xml:space="preserve">
          <source>If a sequence name is not explicitly set when using PostgreSQL, it will discover the sequence corresponding to your primary key for you.</source>
          <target state="translated">PostgreSQL을 사용할 때 시퀀스 이름을 명시 적으로 설정하지 않으면 기본 키에 해당하는 시퀀스를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="9cfe0a8dc0a380f18b2d22242e4d74f5f33e2b65" translate="yes" xml:space="preserve">
          <source>If a spec name is provided a single DatabaseConfig object will be returned, otherwise an array of DatabaseConfig objects will be returned that corresponds with the environment and type requested.</source>
          <target state="translated">스펙 이름이 제공되면 단일 DatabaseConfig 오브젝트가 리턴되고 그렇지 않으면 요청 된 환경 및 유형에 해당하는 DatabaseConfig 오브젝트 배열이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="07aec17663231127557f8759c6e0694cdde16ea6" translate="yes" xml:space="preserve">
          <source>If a subclass changes the value then that would also change the value for parent class. Similarly if parent class changes the value then that would change the value of subclasses too.</source>
          <target state="translated">서브 클래스가 값을 변경하면 부모 클래스의 값도 변경됩니다. 마찬가지로 부모 클래스가 값을 변경하면 하위 클래스의 값도 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="a86e080dd22af17fd0f14408201a5aedbf2452e3" translate="yes" xml:space="preserve">
          <source>If a subclass changes the value, the parent class' value is not changed. Similarly, if the parent class changes the value, the value of subclasses is not changed.</source>
          <target state="translated">서브 클래스가 값을 변경해도 부모 클래스의 값은 변경되지 않습니다. 마찬가지로 부모 클래스가 값을 변경해도 하위 클래스의 값은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0354678a0f3bfe7f95fe7b61e347beaa72a03efb" translate="yes" xml:space="preserve">
          <source>If a template rendered from within an engine attempts to use one of the application's routing helper methods, it may result in an undefined method call. If you encounter such an issue, ensure that you're not attempting to call the application's routing methods without the &lt;code&gt;main_app&lt;/code&gt; prefix from within the engine.</source>
          <target state="translated">엔진 내에서 렌더링 된 템플릿이 응용 프로그램의 라우팅 도우미 메서드 중 하나를 사용하려고하면 정의되지 않은 메서드 호출이 발생할 수 있습니다. 이러한 문제가 발생 하면 엔진 내에서 &lt;code&gt;main_app&lt;/code&gt; 접두어 없이 애플리케이션의 라우팅 메소드를 호출하지 않아야 합니다.</target>
        </trans-unit>
        <trans-unit id="ed422da304b9cc23a44d57af40a4741a9b601e37" translate="yes" xml:space="preserve">
          <source>If a template with the specified format does not exist an &lt;code&gt;ActionView::MissingTemplate&lt;/code&gt; error is raised.</source>
          <target state="translated">지정된 형식의 템플릿이 없으면 &lt;code&gt;ActionView::MissingTemplate&lt;/code&gt; 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="be5f17d61490f6e530253b6d59639ac5dd0820c0" translate="yes" xml:space="preserve">
          <source>If advancing by a value of variable length (i.e., years, weeks, months, days), move forward from &lt;a href=&quot;timewithzone#method-i-time&quot;&gt;time&lt;/a&gt;, otherwise move forward from &lt;a href=&quot;timewithzone#method-i-utc&quot;&gt;utc&lt;/a&gt;, for accuracy when moving across DST boundaries.</source>
          <target state="translated">가변 길이 (예 : 년, 주, 월, 일) 값만큼 전진하는 경우 DST 경계를 가로 질러 이동할 때 정확성을 위해 &lt;a href=&quot;timewithzone#method-i-time&quot;&gt;시간&lt;/a&gt; 에서 앞으로 이동하거나 그렇지 않으면 &lt;a href=&quot;timewithzone#method-i-utc&quot;&gt;utc&lt;/a&gt; 에서 앞으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="1ee0c36c0b76b635629016de075e6de3ab3a9117" translate="yes" xml:space="preserve">
          <source>If all connections are leased and the pool is at capacity (meaning the number of currently leased connections is greater than or equal to the size limit set), an &lt;a href=&quot;../connectiontimeouterror&quot;&gt;ActiveRecord::ConnectionTimeoutError&lt;/a&gt; exception will be raised.</source>
          <target state="translated">모든 연결이 임대되고 풀의 용량이 충분한 경우 (현재 임대 된 연결 수가 설정된 크기 제한보다 크거나 같음을 의미 함) &lt;a href=&quot;../connectiontimeouterror&quot;&gt;ActiveRecord :: ConnectionTimeoutError&lt;/a&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="af5cd7a8d89b9dd7db0db9fb398324f86891743f" translate="yes" xml:space="preserve">
          <source>If all those attempts fail, then Rails starts the lookup again in the parent namespace. In this case only the top-level remains:</source>
          <target state="translated">이러한 모든 시도가 실패하면 Rails는 부모 네임 스페이스에서 다시 조회를 시작합니다. 이 경우 최상위 레벨 만 남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="268bf8cd68a64a02b847c477486c43bf8c1aa07d" translate="yes" xml:space="preserve">
          <source>If an alias was specified, it will be accessible from the resulting objects:</source>
          <target state="translated">별명이 지정된 경우 결과 객체에서 별명에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5300a97b7550b28a046b416848374588f8f50106" translate="yes" xml:space="preserve">
          <source>If an argument isn't given to the proc, it's evaluated in the context of the current controller anyway.</source>
          <target state="translated">proc에 인수가 주어지지 않으면 어쨌든 현재 컨트롤러의 컨텍스트에서 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="2fb5ca231b71faaae958fa94cf85c72da7160d74" translate="yes" xml:space="preserve">
          <source>If an array is passed, a composite primary key will be created.</source>
          <target state="translated">배열이 전달되면 복합 기본 키가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="20ad99ab88925c65951d4cca093428238f1bcff8" translate="yes" xml:space="preserve">
          <source>If an array is passed, then the first element of the array is treated as a template, and the remaining elements are inserted into the template to generate the condition. Active Record takes care of building the query to avoid injection attacks, and will convert from the ruby type to the database type where needed. Elements are inserted into the string in the order in which they appear.</source>
          <target state="translated">배열이 전달되면 배열의 첫 번째 요소가 템플릿으로 처리되고 나머지 요소가 템플릿에 삽입되어 조건이 생성됩니다. Active Record는 주입 공격을 피하기 위해 쿼리 작성을 관리하며 필요한 경우 루비 유형에서 데이터베이스 유형으로 변환됩니다. 요소는 표시된 순서대로 문자열에 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="001356d657ca11ea956fa321e73370e38d6aad02" translate="yes" xml:space="preserve">
          <source>If an association is eager loaded as part of a join, any fields from a custom select clause will not be present on the loaded models. This is because it is ambiguous whether they should appear on the parent record, or the child.</source>
          <target state="translated">연결이 조인의 일부로 열성적으로로드되면 사용자 지정 select 절의 필드가로드 된 모델에 표시되지 않습니다. 부모 레코드에 표시되어야하는지 또는 자식에 표시되어야하는지 모호하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="43250929ebbf1db1b21b73176b53c6034c133ec4" translate="yes" xml:space="preserve">
          <source>If an attacker enters ' OR '1'='1 as the name, and ' OR '2'&amp;gt;'1 as the password, the resulting SQL query will be:</source>
          <target state="translated">공격자가 이름으로 'OR'1 '='1을 입력하고 비밀번호로 'OR'2 '&amp;gt;'1을 입력하면 결과 SQL 쿼리는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="661ce617bd2d9193e907313a3a549b7773599a76" translate="yes" xml:space="preserve">
          <source>If an attribute is modified in-place then make use of &lt;code&gt;[attribute_name]_will_change!&lt;/code&gt; to mark that the attribute is changing. Otherwise Active Model can't track changes to in-place attributes. Note that Active Record can detect in-place modifications automatically. You do not need to call &lt;code&gt;[attribute_name]_will_change!&lt;/code&gt; on Active Record models.</source>
          <target state="translated">속성이 내부에서 수정되면 &lt;code&gt;[attribute_name]_will_change!&lt;/code&gt; 를 사용하십시오!속성이 변경되고 있음을 표시합니다. 그렇지 않으면 활성 모델은 전체 속성의 변경 사항을 추적 할 수 없습니다. Active Record는 내부 수정 사항을 자동으로 감지 할 수 있습니다. &lt;code&gt;[attribute_name]_will_change!&lt;/code&gt; 에 전화 할 필요가 없습니다 ! 액티브 레코드 모델.</target>
        </trans-unit>
        <trans-unit id="45bc0e91492a43233c5b1fe646dce446198504bf" translate="yes" xml:space="preserve">
          <source>If an exception happens during that particular instrumentation the payload will have a key &lt;code&gt;:exception&lt;/code&gt; with an array of two elements as value: a string with the name of the exception class, and the exception message. The &lt;code&gt;:exception_object&lt;/code&gt; key of the payload will have the exception itself as the value:</source>
          <target state="translated">특정 계측 중에 예외가 발생하면 페이로드는 두 가지 요소의 배열을 값으로 갖는 키 &lt;code&gt;:exception&lt;/code&gt; 예외 클래스의 이름을 가진 문자열 및 예외 메시지)를 갖습니다. 페이로드 의 &lt;code&gt;:exception_object&lt;/code&gt; 키는 예외 자체를 값으로 갖습니다.</target>
        </trans-unit>
        <trans-unit id="d3571ad06223071644a2e21e942e9e18bebae11c" translate="yes" xml:space="preserve">
          <source>If an inbound email does not, against the rfc822 mandate, specify a Message-ID, one will be generated using the approach from &lt;code&gt;Mail::MessageIdField&lt;/code&gt;.</source>
          <target state="translated">인바운드 이메일이 rfc822 명령에 대해 Message-ID를 지정하지 않으면 &lt;code&gt;Mail::MessageIdField&lt;/code&gt; 의 접근 방식을 사용하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="112ab9ce8e8818edb8f5052b2fe4b75371cc64b1" translate="yes" xml:space="preserve">
          <source>If an incoming request of &lt;code&gt;/photos/1&lt;/code&gt; is processed by this route (because it hasn't matched any previous route in the file), then the result will be to invoke the &lt;code&gt;display&lt;/code&gt; action of the &lt;code&gt;PhotosController&lt;/code&gt;, and to make the final parameter &lt;code&gt;&quot;1&quot;&lt;/code&gt; available as &lt;code&gt;params[:id]&lt;/code&gt;. This route will also route the incoming request of &lt;code&gt;/photos&lt;/code&gt; to &lt;code&gt;PhotosController#display&lt;/code&gt;, since &lt;code&gt;:id&lt;/code&gt; is an optional parameter, denoted by parentheses.</source>
          <target state="translated">&lt;code&gt;/photos/1&lt;/code&gt; 의 수신 요청 이이 라우트에 의해 처리되면 (파일의 이전 라우트와 일치하지 않기 때문에) 결과는 &lt;code&gt;PhotosController&lt;/code&gt; 의 &lt;code&gt;display&lt;/code&gt; 조치 를 호출 하고 최종 매개 변수를 &lt;code&gt;&quot;1&quot;&lt;/code&gt; 로 사용할 &lt;code&gt;params[:id]&lt;/code&gt; . 이 경로 것 또한 경로의 들어오는 요청 &lt;code&gt;/photos&lt;/code&gt; 에 &lt;code&gt;PhotosController#display&lt;/code&gt; , 이후 &lt;code&gt;:id&lt;/code&gt; 괄호로 표시하는 선택적 매개 변수가있다.</target>
        </trans-unit>
        <trans-unit id="085c150af9e66c0ed9d401adb658dd4d299e5931" translate="yes" xml:space="preserve">
          <source>If an invalid method is supplied, &lt;a href=&quot;relation#method-i-delete_all&quot;&gt;delete_all&lt;/a&gt; raises an ActiveRecordError:</source>
          <target state="translated">유효하지 않은 메소드가 제공되면 &lt;a href=&quot;relation#method-i-delete_all&quot;&gt;delete_all&lt;/a&gt; 은 ActiveRecordError를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="bb911f98fdd5aa0c1cee040218de28b1fc63d3f4" translate="yes" xml:space="preserve">
          <source>If an optional block is given, &lt;code&gt;many?&lt;/code&gt; only takes into account those elements that return true:</source>
          <target state="translated">선택적 블록이 주어지면 &lt;code&gt;many?&lt;/code&gt; true를 반환하는 요소 만 고려합니다.</target>
        </trans-unit>
        <trans-unit id="f7837bd72289c37ae25bc250312ae520139551e2" translate="yes" xml:space="preserve">
          <source>If an order is present in the receiver the behaviour depends on the flag &lt;code&gt;config.active_record.error_on_ignored_order&lt;/code&gt;. If true, &lt;code&gt;ArgumentError&lt;/code&gt; is raised, otherwise the order is ignored and a warning issued, which is the default. This can be overridden with the option &lt;code&gt;:error_on_ignore&lt;/code&gt;, explained below.</source>
          <target state="translated">수신자에 주문이있는 경우 동작은 &lt;code&gt;config.active_record.error_on_ignored_order&lt;/code&gt; 플래그에 따라 다릅니다 . true이면 &lt;code&gt;ArgumentError&lt;/code&gt; 가 발생하고, 그렇지 않으면 순서가 무시되고 경고가 발행됩니다 (기본값). 아래 설명 된 &lt;code&gt;:error_on_ignore&lt;/code&gt; 옵션으로이를 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="241fef9bf4229bc18072ac9ab239ac656184a0d3" translate="yes" xml:space="preserve">
          <source>If any attribute of game is changed, the &lt;code&gt;updated_at&lt;/code&gt; value will be set to the current time, thereby expiring the cache. However, because &lt;code&gt;updated_at&lt;/code&gt; will not be changed for the product object, that cache will not be expired and your app will serve stale data. To fix this, we tie the models together with the &lt;code&gt;touch&lt;/code&gt; method:</source>
          <target state="translated">게임의 속성이 변경되면 &lt;code&gt;updated_at&lt;/code&gt; 값이 현재 시간으로 설정되어 캐시가 만료됩니다. 그러나 제품 객체에 대해 &lt;code&gt;updated_at&lt;/code&gt; 가 변경되지 않기 때문에 해당 캐시가 만료되지 않고 앱이 오래된 데이터를 제공합니다. 이를 해결하기 위해 &lt;code&gt;touch&lt;/code&gt; 방식으로 모델을 묶습니다 .</target>
        </trans-unit>
        <trans-unit id="1b4981ac516bd75b9215f74cec5cdce8035e6f95" translate="yes" xml:space="preserve">
          <source>If any of the &lt;code&gt;before_add&lt;/code&gt; callbacks throw an exception, the object will not be added to the collection.</source>
          <target state="translated">의 어떤 경우 &lt;code&gt;before_add&lt;/code&gt; 콜백 예외를 throw, 개체가 컬렉션에 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e3ba968ef6aff9e459beaaf63ce0a8232f41b693" translate="yes" xml:space="preserve">
          <source>If any of the files in the manifest have changed between requests, the server responds with a new compiled file.</source>
          <target state="translated">매니페스트의 파일 중 하나가 요청간에 변경되면 서버는 새로 컴파일 된 파일로 응답합니다.</target>
        </trans-unit>
        <trans-unit id="9fed09d52a4dc1637c25fcba9c675b9c6d62db94" translate="yes" xml:space="preserve">
          <source>If any of the migrations throw an &lt;code&gt;ActiveRecord::IrreversibleMigration&lt;/code&gt; exception, that step will fail and you'll have some manual work to do.</source>
          <target state="translated">마이그레이션 중 &lt;code&gt;ActiveRecord::IrreversibleMigration&lt;/code&gt; 예외가 발생하면 해당 단계가 실패하고 수동으로 작업해야합니다.</target>
        </trans-unit>
        <trans-unit id="2e39c5c440e524b4103465cb331efe839ab7fcf7" translate="yes" xml:space="preserve">
          <source>If any of these saves fails due to validation errors, then the assignment statement returns &lt;code&gt;false&lt;/code&gt; and the assignment itself is cancelled.</source>
          <target state="translated">유효성 검사 오류로 인해 이러한 저장 중 하나라도 실패하면 할당 문이 &lt;code&gt;false&lt;/code&gt; 를 반환 하고 할당 자체가 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="e2a5521b79aeb5c7873fa96d6e1ea675c3430361" translate="yes" xml:space="preserve">
          <source>If anything in there changes, there is a middleware that detects it and reloads the code.</source>
          <target state="translated">변경 사항이 있으면이를 감지하고 코드를 다시로드하는 미들웨어가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e11cbb3536a5d8b1b7f8796f48e7e75d57fee85a" translate="yes" xml:space="preserve">
          <source>If anything is passed in the &lt;code&gt;html_options&lt;/code&gt; hash it will be applied to every select tag in the set.</source>
          <target state="translated">&lt;code&gt;html_options&lt;/code&gt; 해시에 전달 된 것이 있으면 세트의 모든 선택 태그에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="69199814ed8dd1b62c7f031f99744428072f0e2e" translate="yes" xml:space="preserve">
          <source>If anything is passed in the html_options hash it will be applied to every select tag in the set.</source>
          <target state="translated">html_options 해시에 전달 된 것이 있으면 세트의 모든 선택 태그에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="003be065dea12eeb5a12387810f467d39f938bab" translate="yes" xml:space="preserve">
          <source>If block is given, gem entries in block are wrapped into the source group.</source>
          <target state="translated">블록이 제공되면 블록의 gem 항목이 소스 그룹으로 줄 바꿈됩니다.</target>
        </trans-unit>
        <trans-unit id="f401f66f477b132ab53cc0ab340d1861a2b597ac" translate="yes" xml:space="preserve">
          <source>If both the &lt;a href=&quot;timewithzone&quot;&gt;TimeWithZone&lt;/a&gt; object and the other value act like &lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt;, a Float will be returned.</source>
          <target state="translated">&lt;a href=&quot;timewithzone&quot;&gt;TimeWithZone&lt;/a&gt; 객체와 다른 값 이 모두 &lt;a href=&quot;../time&quot;&gt;Time&lt;/a&gt; 과 같은 경우 Float이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="18748de841b9d52af2366e462d6d80cdbde6f5eb" translate="yes" xml:space="preserve">
          <source>If confirmation validation is not needed, simply leave out the value for &lt;code&gt;XXX_confirmation&lt;/code&gt; (i.e. don't provide a form field for it). When this attribute has a &lt;code&gt;nil&lt;/code&gt; value, the validation will not be triggered.</source>
          <target state="translated">확인 유효성 검사가 필요하지 않은 경우 &lt;code&gt;XXX_confirmation&lt;/code&gt; 의 값을 생략하십시오 (예 : 양식 필드를 제공하지 않음). 이 속성에 &lt;code&gt;nil&lt;/code&gt; 값 이 있으면 유효성 검증이 트리거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a368e0ad1dc44a21e815115c67397cc658f8664b" translate="yes" xml:space="preserve">
          <source>If constant &lt;code&gt;Foo&lt;/code&gt; is being autoloaded, and you'd like to know where is that autoload coming from, just throw</source>
          <target state="translated">상수 &lt;code&gt;Foo&lt;/code&gt; 가 자동로드되고 있고 자동로드가 어디서 오는지 알고 싶다면 던져</target>
        </trans-unit>
        <trans-unit id="0fd5592c09640a222490235f79cabbd0fea08416" translate="yes" xml:space="preserve">
          <source>If date is the 29th of February of a leap year, you obtain the 28th:</source>
          <target state="translated">날짜가 윤년의 2 월 29 일인 경우 28 일을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="396bd586ed2374c7f41ef4d2d945812417763ef2" translate="yes" xml:space="preserve">
          <source>If either of these saves fail (due to one of the objects being invalid), an &lt;a href=&quot;../recordnotsaved&quot;&gt;ActiveRecord::RecordNotSaved&lt;/a&gt; exception is raised and the assignment is cancelled.</source>
          <target state="translated">이러한 저장 중 하나가 유효하지 않은 경우 (개체 중 하나가 유효하지 않기 때문에) &lt;a href=&quot;../recordnotsaved&quot;&gt;ActiveRecord :: RecordNotSaved&lt;/a&gt; 예외가 발생하고 할당이 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="4562532a4b6596229c7e722c102bb37f2f7e70b7" translate="yes" xml:space="preserve">
          <source>If either of these saves fails due to validation errors, then the assignment statement returns &lt;code&gt;false&lt;/code&gt; and the assignment itself is cancelled.</source>
          <target state="translated">유효성 검증 오류로 인해 이러한 저장 중 하나가 실패하면 지정 문이 &lt;code&gt;false&lt;/code&gt; 를 리턴 하고 지정 자체가 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="ffefe0b001caed9f4808387bcf0cfeab852fad78" translate="yes" xml:space="preserve">
          <source>If either the &lt;code&gt;:attributes&lt;/code&gt; or &lt;code&gt;:tags&lt;/code&gt; options are passed, only the mentioned attributes and tags are allowed and nothing else.</source>
          <target state="translated">중 하나 경우 &lt;code&gt;:attributes&lt;/code&gt; 나 &lt;code&gt;:tags&lt;/code&gt; 옵션은, 전달만을 언급 한 속성과 태그가 허용되지 않고 아무것도.</target>
        </trans-unit>
        <trans-unit id="e45592762d5e6328b0806175cdcf06d5010b9fad" translate="yes" xml:space="preserve">
          <source>If enabled, Active Record will create up to &lt;code&gt;1000&lt;/code&gt; prepared statements per database connection by default. To modify this behavior you can set &lt;code&gt;statement_limit&lt;/code&gt; to a different value:</source>
          <target state="translated">활성화하면 Active Record는 기본적으로 데이터베이스 연결 당 최대 &lt;code&gt;1000&lt;/code&gt; 개의 준비된 명령문 을 작성합니다 . 이 동작을 수정하려면 &lt;code&gt;statement_limit&lt;/code&gt; 를 다른 값으로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="eb682e5cfba83f23ccf58ddfd601468967a8969a" translate="yes" xml:space="preserve">
          <source>If for whatever reason you spot something to fix but cannot patch it yourself, please &lt;a href=&quot;https://github.com/rails/rails/issues&quot;&gt;open an issue&lt;/a&gt;.</source>
          <target state="translated">어떤 이유로 든 고칠 수는 있지만 직접 패치 할 수없는 &lt;a href=&quot;https://github.com/rails/rails/issues&quot;&gt;경우 문제를여십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="68ad5c7407493c127005661a8d02f1dcebb13fee" translate="yes" xml:space="preserve">
          <source>If hours are zeroed, then minutes and seconds are too (unless they have given values):</source>
          <target state="translated">시간이 0이면 분과 초도 값을 지정하지 않는 한 :</target>
        </trans-unit>
        <trans-unit id="4e6a783b28400ee5436e4bc8f7fe34e5eaed4c28" translate="yes" xml:space="preserve">
          <source>If in the &amp;ldquo;about&amp;rdquo; action, it will render&amp;hellip;</source>
          <target state="translated">&amp;ldquo;about&amp;rdquo;액션에 있으면&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="1d02f163b9617a48902526d824edebf161935485" translate="yes" xml:space="preserve">
          <source>If in your I18n locale you have:</source>
          <target state="translated">I18n 로켈에있는 경우 :</target>
        </trans-unit>
        <trans-unit id="242ec41add193e2187a1f2ae99f318c612d11cb4" translate="yes" xml:space="preserve">
          <source>If it is at the end of the URL it will hardly be noticed and redirects the user to the attacker.com host. A simple countermeasure would be to &lt;em&gt;include only the expected parameters in a legacy action&lt;/em&gt; (again a permitted list approach, as opposed to removing unexpected parameters). &lt;em&gt;And if you redirect to a URL, check it with a permitted list or a regular expression&lt;/em&gt;.</source>
          <target state="translated">URL의 끝에 있으면 거의 눈에 띄지 않으며 사용자를 attack.com 호스트로 리디렉션합니다. 간단한 대책은 &lt;em&gt;레거시 작업에 예상되는 매개 변수 만 포함하는 것입니다&lt;/em&gt; (예기치 않은 매개 변수를 제거하는 것이 아니라 허용 된 목록 접근 방식). &lt;em&gt;URL로 리디렉션하는 경우 허용 된 목록 또는 정규식으로 URL을 확인하십시오&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="b11434e78ebeae2290f08b9a6b5ad9e910293f43" translate="yes" xml:space="preserve">
          <source>If it is set to &lt;code&gt;:delete_all&lt;/code&gt;, all the &lt;code&gt;records&lt;/code&gt; are deleted &lt;strong&gt;without&lt;/strong&gt; calling their &lt;code&gt;destroy&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;:delete_all&lt;/code&gt; 로 설정하면 &lt;code&gt;destroy&lt;/code&gt; 메소드 &lt;strong&gt;를&lt;/strong&gt; 호출 &lt;strong&gt;하지 않고&lt;/strong&gt; 모든 &lt;code&gt;records&lt;/code&gt; 가 삭제됩니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="10305fad089b413f246b831f675cd6e0eea3de82" translate="yes" xml:space="preserve">
          <source>If it is set to &lt;code&gt;:delete_all&lt;/code&gt;, all the objects are deleted &lt;strong&gt;without&lt;/strong&gt; calling their &lt;code&gt;destroy&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;:delete_all&lt;/code&gt; 로 설정하면 &lt;code&gt;destroy&lt;/code&gt; 메소드 &lt;strong&gt;를&lt;/strong&gt; 호출 &lt;strong&gt;하지 않고&lt;/strong&gt; 모든 오브젝트가 삭제됩니다 .</target>
        </trans-unit>
        <trans-unit id="1447858cac7c09d3a95afc73ab524e488ab189c7" translate="yes" xml:space="preserve">
          <source>If it is set to &lt;code&gt;:destroy&lt;/code&gt; all the &lt;code&gt;records&lt;/code&gt; are removed by calling their &lt;code&gt;destroy&lt;/code&gt; method. See &lt;code&gt;destroy&lt;/code&gt; for more information.</source>
          <target state="translated">&lt;code&gt;:destroy&lt;/code&gt; 로 설정된 경우 &lt;code&gt;destroy&lt;/code&gt; 메소드 를 호출하여 모든 &lt;code&gt;records&lt;/code&gt; 를 제거합니다 . 자세한 내용은 &lt;code&gt;destroy&lt;/code&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="086becbc15cad92bda5e598be2a12d82e9d24bb8" translate="yes" xml:space="preserve">
          <source>If it says something like &quot;Rails 6.0.0&quot;, you are ready to continue.</source>
          <target state="translated">&quot;Rails 6.0.0&quot;과 같은 메시지가 표시되면 계속 진행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72e1d1d6e7015dae83d375dfd2e890f55125f809" translate="yes" xml:space="preserve">
          <source>If it's impractical to wrap the application code in a block (for example, the Rack API makes this problematic), you can also use the &lt;code&gt;run!&lt;/code&gt; / &lt;code&gt;complete!&lt;/code&gt; pair:</source>
          <target state="translated">응용 프로그램 코드를 블록으로 묶는 것이 실용적이지 않은 경우 (예 : Rack API로 인해 문제가 발생 함) &lt;code&gt;run!&lt;/code&gt; 을 사용할 수도 있습니다 ! / &lt;code&gt;complete!&lt;/code&gt; 쌍:</target>
        </trans-unit>
        <trans-unit id="137da6094c7ad736f17927571c9a89ffde2154d9" translate="yes" xml:space="preserve">
          <source>If most of your actions use the same layout, it makes perfect sense to define a controller-wide layout as described above. Sometimes you'll have exceptions where one action wants to use a different layout than the rest of the controller. You can do this by passing a &lt;code&gt;:layout&lt;/code&gt; option to the &lt;code&gt;render&lt;/code&gt; call. For example:</source>
          <target state="translated">대부분의 작업이 동일한 레이아웃을 사용하는 경우 위에서 설명한대로 컨트롤러 차원의 레이아웃을 정의하는 것이 좋습니다. 하나의 동작이 나머지 컨트롤러와 다른 레이아웃을 사용하려는 경우 예외가 발생할 수 있습니다. &lt;code&gt;render&lt;/code&gt; 호출에 &lt;code&gt;:layout&lt;/code&gt; 옵션을 전달하면 됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fc1cf445e38c3c16aa6499318cabdab62f7b2afe" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;category_ids&lt;/code&gt; are selected then we can safely assume this field will not be updated.</source>
          <target state="translated">어떤 경우 &lt;code&gt;category_ids&lt;/code&gt; 을 선택하지 우리는 안전이 필드가 업데이트되지 않습니다 가정 할 수있다.</target>
        </trans-unit>
        <trans-unit id="743edba63ef833a85c95922413ba1b7b56011277" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;options&lt;/code&gt; hash is passed or if &lt;code&gt;:update&lt;/code&gt; is specified, the default is to render a partial and use the second parameter as the locals hash.</source>
          <target state="translated">어떤 경우 &lt;code&gt;options&lt;/code&gt; 해시가 전달되지 않거나 경우 &lt;code&gt;:update&lt;/code&gt; 지정, 기본은 부분을 렌더링하고 지역 주민의 해시로 두 번째 매개 변수를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8f132d527ab37b50338d93f03276978253d5be87" translate="yes" xml:space="preserve">
          <source>If no addresses are specified, then &lt;a href=&quot;memcachestore&quot;&gt;MemCacheStore&lt;/a&gt; will connect to localhost port 11211 (the default memcached port).</source>
          <target state="translated">주소를 지정하지 않으면 &lt;a href=&quot;memcachestore&quot;&gt;MemCacheStore&lt;/a&gt; 는 로컬 호스트 포트 11211 (기본 memcached 포트)에 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="95f1a45e00b166ba721bbf9a352ee29cd0c7fecb" translate="yes" xml:space="preserve">
          <source>If no argument is passed, &lt;a href=&quot;querymethods#method-i-where&quot;&gt;where&lt;/a&gt; returns a new instance of &lt;a href=&quot;querymethods/wherechain&quot;&gt;WhereChain&lt;/a&gt;, that can be chained with not to return a new relation that negates the where clause.</source>
          <target state="translated">인수가 전달되지 않은 경우 &lt;a href=&quot;querymethods#method-i-where&quot;&gt;where where &lt;/a&gt;&lt;a href=&quot;querymethods/wherechain&quot;&gt;WhereChain&lt;/a&gt; 의 새 인스턴스 를 반환하면 where 절을 무효화하는 새로운 관계를 반환하지 않도록 연결될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="342a5d95b2c10232f1c095232bfce2cfd05a279a" translate="yes" xml:space="preserve">
          <source>If no arguments are passed to this method, then a new &lt;a href=&quot;cache/memorystore&quot;&gt;ActiveSupport::Cache::MemoryStore&lt;/a&gt; object will be returned.</source>
          <target state="translated">이 메소드에 인수가 전달되지 않으면 새로운 &lt;a href=&quot;cache/memorystore&quot;&gt;ActiveSupport :: Cache :: MemoryStore&lt;/a&gt; 오브젝트가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="2156867991e6c9b182577e82a87e084974db064d" translate="yes" xml:space="preserve">
          <source>If no handler matches the exception, check for a handler matching the (optional) exception.cause. If no handler matches the exception or its cause, this returns &lt;code&gt;nil&lt;/code&gt;, so you can deal with unhandled exceptions. Be sure to re-raise unhandled exceptions if this is what you expect.</source>
          <target state="translated">예외와 일치하는 처리기가 없으면 (선택적) exception.cause와 일치하는 처리기를 확인하십시오. 핸들러가 예외 또는 해당 원인과 일치하지 않으면 &lt;code&gt;nil&lt;/code&gt; 을 리턴 하므로 처리되지 않은 예외를 처리 할 수 ​​있습니다. 이것이 예상되는 경우 처리되지 않은 예외를 다시 발생 시키십시오.</target>
        </trans-unit>
        <trans-unit id="daa8057284e5b5fd6fbd7376bd59baf52f42a23d" translate="yes" xml:space="preserve">
          <source>If no locale is passed, &lt;code&gt;I18n.locale&lt;/code&gt; is used:</source>
          <target state="translated">로캘이 전달되지 않으면 &lt;code&gt;I18n.locale&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4e98c7de0d11d5aa929b7a57e00ac9635e38c013" translate="yes" xml:space="preserve">
          <source>If no options hash is passed or :update specified, the default is to render a partial and use the second parameter as the locals hash.</source>
          <target state="translated">옵션 해시가 전달되지 않거나 : update가 지정되지 않은 경우 기본값은 부분을 렌더링하고 두 번째 매개 변수를 locals 해시로 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5a1b753afc2b4c1896d4386c59e052f66106c61b" translate="yes" xml:space="preserve">
          <source>If no ordering clause is specified in the query, the &lt;code&gt;reverse_order&lt;/code&gt; orders by the primary key in reverse order.</source>
          <target state="translated">쿼리에 ordering 절이 지정되지 않은 경우 기본 키에 의해 &lt;code&gt;reverse_order&lt;/code&gt; 가 역순으로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="14d2067446324fa04bb7e8358cba1361bcd9419c" translate="yes" xml:space="preserve">
          <source>If no record is found, returns &lt;code&gt;0&lt;/code&gt; as zero rows were affected.</source>
          <target state="translated">레코드가 없으면 0 행이 영향을 받아 &lt;code&gt;0&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="44733aa8e0e37c4eb9ce66f797ca56e063ca518a" translate="yes" xml:space="preserve">
          <source>If no record is found, returns &lt;code&gt;nil&lt;/code&gt;.</source>
          <target state="translated">레코드가 없으면 &lt;code&gt;nil&lt;/code&gt; 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="07143c8930e116c3a687a94aa2719b68f2cbab19" translate="yes" xml:space="preserve">
          <source>If no record is found, returns empty array.</source>
          <target state="translated">레코드가 없으면 빈 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4a33078bb02707d0121aad7b49c574e2ba2e5c81" translate="yes" xml:space="preserve">
          <source>If no renderer is found, &lt;code&gt;super&lt;/code&gt; returns control to &lt;code&gt;ActionView::Rendering.render_to_body&lt;/code&gt;, if present.</source>
          <target state="translated">렌더러가없는 경우 &lt;code&gt;super&lt;/code&gt; 는 컨트롤을 &lt;code&gt;ActionView::Rendering.render_to_body&lt;/code&gt; 보냅니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="a5d59a8a37522ac83cb23862b6bdc105f06c4554" translate="yes" xml:space="preserve">
          <source>If non-duplicate information is provided you will get all unique values, environment variable still takes precedence in cases of any conflicts.</source>
          <target state="translated">중복되지 않은 정보가 제공되는 경우 모든 고유 값을 얻을 수 있으며 충돌이 발생하는 경우 환경 변수가 여전히 우선합니다.</target>
        </trans-unit>
        <trans-unit id="94bc7694e928bdadfff614e2581177e82063f977" translate="yes" xml:space="preserve">
          <source>If none is found you get an error message.</source>
          <target state="translated">아무것도 발견되지 않으면 오류 메시지가 나타납니다.</target>
        </trans-unit>
        <trans-unit id="3697bd379b9ba6936db1b54f382943d3979f37e6" translate="yes" xml:space="preserve">
          <source>If none of the parent namespaces of the class or module has the missing constant then Rails assumes the reference is relative. Otherwise qualified.</source>
          <target state="translated">클래스 또는 모듈의 부모 네임 스페이스에 누락 된 상수가없는 경우 Rails는 참조가 상대적이라고 가정합니다. 그렇지 않으면 자격이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3f8c2d8905d1427e1515f404fff058fcd612d16" translate="yes" xml:space="preserve">
          <source>If not found and the cref is a module, the constant is looked up in &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">찾을 수없고 cref가 모듈 인 경우 상수는 &lt;code&gt;Object&lt;/code&gt; 에서 조회됩니다 .</target>
        </trans-unit>
        <trans-unit id="ca0b1786bffd10e97baeaf01664775c3e6906b93" translate="yes" xml:space="preserve">
          <source>If not found, &lt;code&gt;const_missing&lt;/code&gt; is invoked on the cref. The default implementation of &lt;code&gt;const_missing&lt;/code&gt; raises &lt;code&gt;NameError&lt;/code&gt;, but it can be overridden.</source>
          <target state="translated">찾을 수 없으면 &lt;code&gt;const_missing&lt;/code&gt; 에서 const_missing 이 호출됩니다. &lt;code&gt;const_missing&lt;/code&gt; 의 기본 구현 은 &lt;code&gt;NameError&lt;/code&gt; 를 발생 시키지만 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34dac85f072bd78bb07fdfc3f3b72199740d8255" translate="yes" xml:space="preserve">
          <source>If not found, then the algorithm walks up the ancestor chain of the cref.</source>
          <target state="translated">발견되지 않으면 알고리즘은 cref의 조상 체인을 따라 올라갑니다.</target>
        </trans-unit>
        <trans-unit id="b61240a1aa00469a115a8c4a9347bda690b01ee0" translate="yes" xml:space="preserve">
          <source>If one runs &lt;code&gt;Person.clear_validators!&lt;/code&gt; and then checks to see what validators this class has, you would obtain:</source>
          <target state="translated">&lt;code&gt;Person.clear_validators!&lt;/code&gt; 실행하면 ! 그런 다음이 클래스에 어떤 유효성 검사기가 있는지 확인하면 다음을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04ea8590225723ee26121244d6750a6c1729cde0" translate="yes" xml:space="preserve">
          <source>If options &lt;code&gt;:env&lt;/code&gt; is specified, the line is appended to the corresponding file in &lt;code&gt;config/environments&lt;/code&gt;.</source>
          <target state="translated">options &lt;code&gt;:env&lt;/code&gt; 를 지정하면 행이 &lt;code&gt;config/environments&lt;/code&gt; 의 해당 파일에 추가됩니다 .</target>
        </trans-unit>
        <trans-unit id="f2d83aff51387314b827f32b254d31deaec722a7" translate="yes" xml:space="preserve">
          <source>If passed an optional &lt;code&gt;locale&lt;/code&gt; parameter, the word will be pluralized using rules defined for that language. By default, this parameter is set to &lt;code&gt;:en&lt;/code&gt;.</source>
          <target state="translated">선택적 &lt;code&gt;locale&lt;/code&gt; 매개 변수를 전달하면 해당 언어에 대해 정의 된 규칙을 사용하여 단어가 복수화됩니다. 기본적으로이 매개 변수는 &lt;code&gt;:en&lt;/code&gt; 으로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0226e618a661f6763cffd1910e68a4c1d0d7826" translate="yes" xml:space="preserve">
          <source>If passed an optional &lt;code&gt;locale&lt;/code&gt; parameter, the word will be singularized using rules defined for that language. By default, this parameter is set to &lt;code&gt;:en&lt;/code&gt;.</source>
          <target state="translated">선택적 &lt;code&gt;locale&lt;/code&gt; 매개 변수를 전달하면 해당 언어에 대해 정의 된 규칙을 사용하여 단어가 개별화됩니다. 기본적으로이 매개 변수는 &lt;code&gt;:en&lt;/code&gt; 으로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb1d33f9c8b1afca2322a03687d0f1d7baa3e4fe" translate="yes" xml:space="preserve">
          <source>If saving any of the objects being added to a collection (via &lt;code&gt;push&lt;/code&gt; or similar) fails, then &lt;code&gt;push&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">컬렉션에 추가되는 객체를 &lt;code&gt;push&lt;/code&gt; 하거나 이와 비슷한 방식으로 저장하지 못하면 &lt;code&gt;push&lt;/code&gt; 는 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d6fb5a299f3b8869f0f8d292366c0a44a220f0ca" translate="yes" xml:space="preserve">
          <source>If saving fails while replacing the collection (via &lt;code&gt;association=&lt;/code&gt;), an &lt;a href=&quot;../recordnotsaved&quot;&gt;ActiveRecord::RecordNotSaved&lt;/a&gt; exception is raised and the assignment is cancelled.</source>
          <target state="translated">(통해 수집을 교체하는 동안 저장이 실패 할 경우 &lt;code&gt;association=&lt;/code&gt; ) &lt;a href=&quot;../recordnotsaved&quot;&gt;액티브 :: RecordNotSaved의&lt;/a&gt; 예외가 발생하고, 할당이 해제된다.</target>
        </trans-unit>
        <trans-unit id="4b39062b80cdb5265cb02724120c40e669e32534" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;:destroy&lt;/code&gt;, the associated object is destroyed when this object is. If set to &lt;code&gt;:delete&lt;/code&gt;, the associated object is deleted &lt;strong&gt;without&lt;/strong&gt; calling its destroy method. This option should not be specified when &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; is used in conjunction with a &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; relationship on another class because of the potential to leave orphaned records behind.</source>
          <target state="translated">&lt;code&gt;:destroy&lt;/code&gt; 로 설정 하면이 오브젝트가있을 때 연관된 오브젝트가 삭제됩니다. &lt;code&gt;:delete&lt;/code&gt; 로 설정하면 destroy 메소드 &lt;strong&gt;를&lt;/strong&gt; 호출 &lt;strong&gt;하지 않고&lt;/strong&gt; 연관된 오브젝트가 삭제됩니다 . 고아 레코드를 남겨 둘 가능성이 있기 때문에 &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; 가 다른 클래스 의 &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt; 관계 와 함께 사용될 때이 옵션을 지정해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="2aca5cdbf21bc5d78c1c3f84f674a42dfafb5949" translate="yes" xml:space="preserve">
          <source>If specified, the block can also receive the application object, in case you need to access some application-specific configuration, like middleware:</source>
          <target state="translated">지정된 경우 블록은 미들웨어와 같은 일부 애플리케이션 특정 구성에 액세스해야하는 경우 애플리케이션 오브젝트를 수신 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="317bee91b538884c4bbcbbad3315054c7aa10cea" translate="yes" xml:space="preserve">
          <source>If subtracting a &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; of variable length (i.e., years, months, days), move backward from &lt;a href=&quot;timewithzone#method-i-time&quot;&gt;time&lt;/a&gt;, otherwise move backward from &lt;a href=&quot;timewithzone#method-i-utc&quot;&gt;utc&lt;/a&gt;, for accuracy when moving across DST boundaries.</source>
          <target state="translated">가변 길이 의 &lt;a href=&quot;duration&quot;&gt;기간&lt;/a&gt; (예 : 년, 월, 일)을 빼면 DST 경계를 이동할 때 정확도를 위해 &lt;a href=&quot;timewithzone#method-i-time&quot;&gt;시간&lt;/a&gt; 에서 뒤로 이동하거나 그렇지 않으면 &lt;a href=&quot;timewithzone#method-i-utc&quot;&gt;utc&lt;/a&gt; 에서 뒤로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="5cdb3ceb73d9a68c4eca2ab7b1d9bd7a55279c0f" translate="yes" xml:space="preserve">
          <source>If such a day does not exist, the last day of the corresponding month is returned:</source>
          <target state="translated">그러한 날이 존재하지 않으면 해당 월의 마지막 날이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="b8b95d597fc730d854618c1a1453f4d0c365d421" translate="yes" xml:space="preserve">
          <source>If the &lt;a href=&quot;https://github.com/guard/listen&quot;&gt;listen gem&lt;/a&gt; is loaded Rails uses an evented file system monitor to detect changes when &lt;code&gt;config.cache_classes&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="translated">(가) 경우 &lt;a href=&quot;https://github.com/guard/listen&quot;&gt;보석들을&lt;/a&gt; 로드가 레일 때 변화를 감지 할 수있는 evented 파일 시스템 모니터 사용 &lt;code&gt;config.cache_classes&lt;/code&gt; 이 있다 &lt;code&gt;false&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="c085c2a7603ade372b37ef04a71a5f8dbf004984" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:default&lt;/code&gt; value is a Symbol, it will be used as a key and translated. One can provide multiple values as default. The first one that results in a value will be returned.</source>
          <target state="translated">는 IF &lt;code&gt;:default&lt;/code&gt; 값이 기호이며, 그것은 키로서 사용하고 변환됩니다. 기본값으로 여러 값을 제공 할 수 있습니다. 첫 번째 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e2a3d210e20b42656def0ed6a6689ccc9d2610f8" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:dependent&lt;/code&gt; option isn't set, all the attachments will be purged (i.e. destroyed) whenever the record is destroyed.</source>
          <target state="translated">는 IF &lt;code&gt;:dependent&lt;/code&gt; 옵션이 설정되지 않은 레코드가 파괴 될 때마다, 모든 첨부 파일 (예 : 파괴) 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="96d96a06ff86038801fa2b1b6874b17833a2579a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:dependent&lt;/code&gt; option isn't set, the attachment will be purged (i.e. destroyed) whenever the record is destroyed.</source>
          <target state="translated">는 IF &lt;code&gt;:dependent&lt;/code&gt; 옵션이 설정되지 않은 레코드가 파괴 될 때마다, 첨부 파일 (예 : 파괴) 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="25cfba871b9b3e597717f7a8ee825d05c900b111" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:prefix&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt; this is less generic, see below.</source>
          <target state="translated">는 IF &lt;code&gt;:prefix&lt;/code&gt; 옵션이 &lt;code&gt;true&lt;/code&gt; 이 덜 일반적인, 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="35a297a8c471622ac2265dd30e94c5f6d76e25a3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:queue&lt;/code&gt; option is specified, then only the job(s) enqueued to a specific queue will be performed.</source>
          <target state="translated">는 IF &lt;code&gt;:queue&lt;/code&gt; 옵션을 지정, 특정 큐의 대기열에 만 작업 (들)이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="82459f6d1ba97e425c2fc16126026c967fd33866" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:queue&lt;/code&gt; option is specified, then only the job(s) enqueued to a specific queue will not be performed.</source>
          <target state="translated">는 IF &lt;code&gt;:queue&lt;/code&gt; 옵션을 지정, 특정 큐의 대기열에 만 작업 (들)을 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="592a9a2f52840592d7749882c3d1d74bf1811602" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:strict&lt;/code&gt; option is set to &lt;code&gt;true&lt;/code&gt;, it will raise &lt;a href=&quot;strictvalidationfailed&quot;&gt;ActiveModel::StrictValidationFailed&lt;/a&gt; instead of adding the error. &lt;code&gt;:strict&lt;/code&gt; option can also be set to any other exception.</source>
          <target state="translated">는 IF &lt;code&gt;:strict&lt;/code&gt; 옵션이 설정되어 &lt;code&gt;true&lt;/code&gt; , 그것은 올릴 것이다 &lt;a href=&quot;strictvalidationfailed&quot;&gt;ActiveModel을 :: StrictValidationFailed&lt;/a&gt; 대신 오류를 추가. &lt;code&gt;:strict&lt;/code&gt; 옵션은 다른 예외로 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e4b04a410a2faf621ddbede342ca91463d6005b" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:through&lt;/code&gt; option is used, then the join records are deleted (rather than nullified) by default, but you can specify &lt;code&gt;dependent: :destroy&lt;/code&gt; or &lt;code&gt;dependent: :nullify&lt;/code&gt; to override this.</source>
          <target state="translated">는 IF &lt;code&gt;:through&lt;/code&gt; 옵션을 사용, 그 기록은 기본적으로 (오히려 무효보다) 삭제에 가입,하지만 당신은 지정할 수 있습니다 &lt;code&gt;dependent: :destroy&lt;/code&gt; 또는 &lt;code&gt;dependent: :nullify&lt;/code&gt; 이 메소드를 오버라이드 (override) 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e4260a2cd60e4a2ccaf16f6060174b6ca2fcd37" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;:through&lt;/code&gt; option is used, then the join records are destroyed instead, not the objects themselves.</source>
          <target state="translated">는 IF &lt;code&gt;:through&lt;/code&gt; 옵션을 사용, 그 기록이 아니라 자신을 객체 대신 파괴 가입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2794a2670c58ca7959d466149416ad75cd76526e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;MyEngine&lt;/code&gt; engine is marked as isolated, &lt;code&gt;FooController&lt;/code&gt; only has access to helpers from &lt;code&gt;MyEngine&lt;/code&gt;, and &lt;code&gt;url_helpers&lt;/code&gt; from &lt;code&gt;MyEngine::Engine.routes&lt;/code&gt;.</source>
          <target state="translated">는 IF &lt;code&gt;MyEngine&lt;/code&gt; 의 고립으로 엔진이 표시되어, &lt;code&gt;FooController&lt;/code&gt; 는 단지에서 도우미에 액세스 할 수 있습니다 &lt;code&gt;MyEngine&lt;/code&gt; 및 &lt;code&gt;url_helpers&lt;/code&gt; 에서 &lt;code&gt;MyEngine::Engine.routes&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6459cd346b8f8e7742466139ab15a8af52f1422c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;before_validation&lt;/code&gt; callback throws &lt;code&gt;:abort&lt;/code&gt;, the process will be aborted and &lt;a href=&quot;persistence#method-i-save&quot;&gt;ActiveRecord::Base#save&lt;/a&gt; will return &lt;code&gt;false&lt;/code&gt;. If &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;ActiveRecord::Base#save!&lt;/a&gt; is called it will raise an &lt;a href=&quot;recordinvalid&quot;&gt;ActiveRecord::RecordInvalid&lt;/a&gt; exception. Nothing will be appended to the errors object.</source>
          <target state="translated">는 IF &lt;code&gt;before_validation&lt;/code&gt; 의 콜백이 발생합니다 &lt;code&gt;:abort&lt;/code&gt; , 프로세스가 중단됩니다 및 &lt;a href=&quot;persistence#method-i-save&quot;&gt;저장 액티브 :: 자료 번호는&lt;/a&gt; 반환됩니다 &lt;code&gt;false&lt;/code&gt; . 경우 &lt;a href=&quot;persistence#method-i-save-21&quot;&gt;액티브 :: 자료 # 저장! &lt;/a&gt;호출되면 &lt;a href=&quot;recordinvalid&quot;&gt;ActiveRecord :: RecordInvalid&lt;/a&gt; 예외가 발생합니다. errors 객체에 아무것도 추가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="476ce818f060ca23dda67ed78313e1271283f69e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;key&lt;/code&gt; argument provided is an array, or responds to &lt;code&gt;to_a&lt;/code&gt;, then each of elements in the array will be turned into parameters/keys and concatenated into a single key. For example:</source>
          <target state="translated">상기 중간 &lt;code&gt;key&lt;/code&gt; 제공된 인수가 배열 또는 응답이다 &lt;code&gt;to_a&lt;/code&gt; 후, 어레이의 각 요소는 파라미터 / 온 키에 한 번의 키로 결합한다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7715f972a5fd224d6e324dc4eec8a773e5ee423c" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;require&lt;/code&gt; runs first Rails does not mark &lt;code&gt;User&lt;/code&gt; as an autoloaded constant and changes to &lt;code&gt;app/models/user.rb&lt;/code&gt; aren't reloaded.</source>
          <target state="translated">&lt;code&gt;require&lt;/code&gt; 경우 먼저 Rails가 &lt;code&gt;User&lt;/code&gt; 를 자동로드 된 상수로 표시하지 않고 &lt;code&gt;app/models/user.rb&lt;/code&gt; 에 대한 변경 사항 이 다시로드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ba36b0c87cc52bcc3e0dad2e5e272c7672dd2a73" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;verify_authenticity_token&lt;/code&gt; before_action ran, verify that JavaScript responses are only served to same-origin GET requests.</source>
          <target state="translated">&lt;code&gt;verify_authenticity_token&lt;/code&gt; before_action이 실행 된 경우 JavaScript 응답이 동일한 원래 GET 요청에만 제공되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="980f68aa6933b9cf5a4e83389c02284683526205" translate="yes" xml:space="preserve">
          <source>If the CDN has a copy of &lt;code&gt;smile.png&lt;/code&gt; it will serve it to the browser and your server doesn't even know it was requested. If the CDN does not have a copy it will try to find it at the &quot;origin&quot; &lt;code&gt;example.com/assets/smile.png&lt;/code&gt; and then store it for future use.</source>
          <target state="translated">CDN에 &lt;code&gt;smile.png&lt;/code&gt; 사본이 있으면 이를 브라우저에 제공하며 서버는 요청한 사실조차 모릅니다. CDN에 사본이없는 경우 &quot;origin&quot; &lt;code&gt;example.com/assets/smile.png&lt;/code&gt; 에서 찾은 다음 나중에 사용할 수 있도록 보관하십시오.</target>
        </trans-unit>
        <trans-unit id="d5ec5ecfccf27758c95e8159a6dc7fcfa0be3e51" translate="yes" xml:space="preserve">
          <source>If the action is being used in a public API and you can't change to HTTP method being used, you can update your form to use the &lt;code&gt;PUT&lt;/code&gt; method instead:</source>
          <target state="translated">조치가 공용 API에서 사용 중이고 사용중인 HTTP 메소드로 변경할 수없는 경우 대신 &lt;code&gt;PUT&lt;/code&gt; 메소드 를 사용하도록 양식을 업데이트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a9358a87a3846748380b3a11a1f529eb7861d305" translate="yes" xml:space="preserve">
          <source>If the action is not being used in a public API and you are free to change the HTTP method, you can update your route to use &lt;code&gt;patch&lt;/code&gt; instead of &lt;code&gt;put&lt;/code&gt;:</source>
          <target state="translated">공개 API에서 조치를 사용하지 않고 HTTP 메소드를 자유롭게 변경할 수 있는 경우 &lt;code&gt;put&lt;/code&gt; 대신 &lt;code&gt;patch&lt;/code&gt; 를 사용하도록 경로를 업데이트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c37a3109c6c9350fe06965267aed616e347b8af" translate="yes" xml:space="preserve">
          <source>If the application being upgraded autoloads correctly, the project structure should be already mostly compatible.</source>
          <target state="translated">업그레이드중인 응용 프로그램이 올바르게 자동로드되는 경우 프로젝트 구조는 이미 대부분 호환 가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="d4aa95a3ac525010d9d553d3d539f76c08530f29" translate="yes" xml:space="preserve">
          <source>If the application has multiple databases &lt;code&gt;default_hash&lt;/code&gt; will return the first config hash for the environment.</source>
          <target state="translated">응용 프로그램에 여러 데이터베이스가있는 경우 &lt;code&gt;default_hash&lt;/code&gt; 는 환경에 대한 첫 번째 구성 해시를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fb1aab9339cac818d842e223a95e7f4e26a1a6fc" translate="yes" xml:space="preserve">
          <source>If the application has multiple databases &lt;code&gt;find_db_config&lt;/code&gt; will return the first DatabaseConfig for the environment.</source>
          <target state="translated">응용 프로그램에 여러 데이터베이스가있는 경우 &lt;code&gt;find_db_config&lt;/code&gt; 는 환경에 대한 첫 번째 DatabaseConfig를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f680842e1a02b973e8a00e3a8dd67a7c3319c24b" translate="yes" xml:space="preserve">
          <source>If the application is receiving a POST, PUT, DELETE, or PATCH request the application will automatically write to the primary. For the specified time after the write the application will read from the primary. For a GET or HEAD request the application will read from the replica unless there was a recent write.</source>
          <target state="translated">애플리케이션이 POST, PUT, DELETE 또는 PATCH 요청을 수신하는 경우 애플리케이션은 자동으로 기본에 작성합니다. 쓰기 후 지정된 시간 동안 응용 프로그램은 기본에서 읽습니다. GET 또는 HEAD 요청의 경우 최근 쓰기가 없으면 애플리케이션이 복제본에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="326b22dd6ad7847de589279464886345310126e4" translate="yes" xml:space="preserve">
          <source>If the application reloads &lt;code&gt;Foo&lt;/code&gt;, it will reload &lt;code&gt;Foo::InnerClass&lt;/code&gt; too.</source>
          <target state="translated">응용 프로그램이 &lt;code&gt;Foo&lt;/code&gt; 를 다시로드하면 &lt;code&gt;Foo::InnerClass&lt;/code&gt; 도 다시로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="db2293cef2136baca8a7b93f90673cf39b14d10d" translate="yes" xml:space="preserve">
          <source>If the argument is &lt;code&gt;false&lt;/code&gt; (default is &lt;code&gt;nil&lt;/code&gt;), the context is set to &lt;code&gt;:create&lt;/code&gt; if &lt;a href=&quot;persistence#method-i-new_record-3F&quot;&gt;new_record?&lt;/a&gt; is &lt;code&gt;true&lt;/code&gt;, and to &lt;code&gt;:update&lt;/code&gt; if it is not.</source>
          <target state="translated">인수가 &lt;code&gt;false&lt;/code&gt; 인 경우 (기본값은 &lt;code&gt;nil&lt;/code&gt; ) 컨텍스트는 &lt;code&gt;:create&lt;/code&gt; if &lt;a href=&quot;persistence#method-i-new_record-3F&quot;&gt;new_record?&lt;/a&gt; 이다 &lt;code&gt;true&lt;/code&gt; 과에 &lt;code&gt;:update&lt;/code&gt; 그렇지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="ac479f598d7a18aa8574ef0192142fbdf57ba66e" translate="yes" xml:space="preserve">
          <source>If the argument is &lt;code&gt;nil&lt;/code&gt; an empty array is returned.</source>
          <target state="translated">인수가 &lt;code&gt;nil&lt;/code&gt; 이면 빈 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e2046e4902050e114601a1f73a8a4cd63259a9aa" translate="yes" xml:space="preserve">
          <source>If the argument is a regular hash with keys &lt;code&gt;:key&lt;/code&gt; and +&amp;ldquo;key&amp;rdquo;+ only one of the values end up in the receiver, but which one is unspecified.</source>
          <target state="translated">인수가 keys &lt;code&gt;:key&lt;/code&gt; 및 +&amp;ldquo;key&amp;rdquo;+ 가있는 일반 해시 인 경우 값 중 하나만 수신자에서 끝나지만 지정되지 않은 값입니다.</target>
        </trans-unit>
        <trans-unit id="325a0f07bed101c05c27938ff0c0d61231ed5daa" translate="yes" xml:space="preserve">
          <source>If the argument is an &lt;code&gt;IO&lt;/code&gt; it needs to respond to &lt;code&gt;rewind&lt;/code&gt; to be able to retry. Regular files respond to &lt;code&gt;rewind&lt;/code&gt;.</source>
          <target state="translated">인수가 &lt;code&gt;IO&lt;/code&gt; 인 경우 다시 시도 하려면 &lt;code&gt;rewind&lt;/code&gt; 에 응답해야합니다 . 일반 파일은 &lt;code&gt;rewind&lt;/code&gt; 응답합니다 .</target>
        </trans-unit>
        <trans-unit id="c86fa94e4c85e9b7de6cada7ae5acbfdc209ad77" translate="yes" xml:space="preserve">
          <source>If the argument responds to &lt;code&gt;to_ary&lt;/code&gt; the method is invoked. &lt;code&gt;Kernel#Array&lt;/code&gt; moves on to try &lt;code&gt;to_a&lt;/code&gt; if the returned value is &lt;code&gt;nil&lt;/code&gt;, but &lt;code&gt;Array.wrap&lt;/code&gt; returns an array with the argument as its single element right away.</source>
          <target state="translated">인수가 &lt;code&gt;to_ary&lt;/code&gt; 에 응답 하면 메소드가 호출됩니다. 반환 된 값이 &lt;code&gt;nil&lt;/code&gt; 이면 &lt;code&gt;Kernel#Array&lt;/code&gt; 는 &lt;code&gt;to_a&lt;/code&gt; 를 시도 하지만 &lt;code&gt;Array.wrap&lt;/code&gt; 은 인수를 단일 요소로 즉시 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="41cd3a71604d9e843f2f91cca28d83b7278bc07d" translate="yes" xml:space="preserve">
          <source>If the array contains items that respond to &lt;code&gt;id&lt;/code&gt;, however, the symbol &lt;code&gt;:db&lt;/code&gt; may be passed as argument. That's typically used with collections of Active Record objects. Returned strings are:</source>
          <target state="translated">그러나 배열에 &lt;code&gt;id&lt;/code&gt; 에 응답하는 항목이 포함 된 경우 &lt;code&gt;:db&lt;/code&gt; 기호 가 인수로 전달 될 수 있습니다. 일반적으로 Active Record 개체의 컬렉션에 사용됩니다. 반환 된 문자열은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d1a8481496ba475a6221bc0678c9e41eadfe7f28" translate="yes" xml:space="preserve">
          <source>If the associated object has already been retrieved from the database for this object, the cached version will be returned. To override this behavior (and force a database read), call &lt;code&gt;#reload_association&lt;/code&gt; on the parent object.</source>
          <target state="translated">연관된 오브젝트가이 오브젝트의 데이터베이스에서 이미 검색된 경우 캐시 된 버전이 리턴됩니다. 이 동작을 무시하고 데이터베이스를 강제로 읽으 려면 부모 개체에서 &lt;code&gt;#reload_association&lt;/code&gt; 을 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd7406b4360425aaa9836f7b1c871148c2cf19e8" translate="yes" xml:space="preserve">
          <source>If the associated object is already saved, &lt;code&gt;fields_for&lt;/code&gt; autogenerates a hidden input with the &lt;code&gt;id&lt;/code&gt; of the saved record. You can disable this by passing &lt;code&gt;include_id: false&lt;/code&gt; to &lt;code&gt;fields_for&lt;/code&gt;.</source>
          <target state="translated">연관된 오브젝트가 이미 저장된 경우 &lt;code&gt;fields_for&lt;/code&gt; 는 저장된 레코드 의 &lt;code&gt;id&lt;/code&gt; 로 숨겨진 입력을 자동 생성합니다 . &lt;code&gt;include_id: false&lt;/code&gt; 를 &lt;code&gt;fields_for&lt;/code&gt; 에 전달하여이를 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e7e3e35c9e6408f86f98236f54c35fb677605bb6" translate="yes" xml:space="preserve">
          <source>If the association on the join model is a &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;, the collection can be modified and the records on the &lt;code&gt;:through&lt;/code&gt; model will be automatically created and removed as appropriate. Otherwise, the collection is read-only, so you should manipulate the &lt;code&gt;:through&lt;/code&gt; association directly.</source>
          <target state="translated">결합 모델의 연관이 &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; 이면, 콜렉션을 수정할 수 있으며 &lt;code&gt;:through&lt;/code&gt; 모델 의 레코드 가 자동으로 작성되고 제거됩니다. 그렇지 않으면 콜렉션이 읽기 전용이므로 &lt;code&gt;:through&lt;/code&gt; 연관을 직접 조작해야합니다 .</target>
        </trans-unit>
        <trans-unit id="98b11abf71641fea4a9eb3516297f9ce3d317a60" translate="yes" xml:space="preserve">
          <source>If the attribute will change, the result will be an array containing the original value and the new value about to be saved.</source>
          <target state="translated">속성이 변경되면 결과는 원래 값과 저장하려는 새 값을 포함하는 배열이됩니다.</target>
        </trans-unit>
        <trans-unit id="abc08bce3c6bd92decb8682fb71c627eef62c39e" translate="yes" xml:space="preserve">
          <source>If the block passed to the method only takes one parameter, it will yield an event object to the block:</source>
          <target state="translated">메소드에 전달 된 블록이 하나의 매개 변수 만 사용하면 블록에 이벤트 오브젝트가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="1e04aa7986db4a6025797859ae6d071fe498f89b" translate="yes" xml:space="preserve">
          <source>If the cached data refers to a constant that is unknown at that point, the autoloading mechanism is triggered and if it succeeds the deserialization is retried transparently.</source>
          <target state="translated">캐시 된 데이터가 해당 시점에서 알려지지 않은 상수를 참조하면 자동 로딩 메커니즘이 트리거되고 성공하면 역 직렬화가 투명하게 재 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="3fad63c232bd8516eeb4fdd2908396ef6298bc7a" translate="yes" xml:space="preserve">
          <source>If the call to &lt;code&gt;update&lt;/code&gt; fails, calling the &lt;code&gt;update&lt;/code&gt; action in this controller will render the &lt;code&gt;edit.html.erb&lt;/code&gt; template belonging to the same controller.</source>
          <target state="translated">&lt;code&gt;update&lt;/code&gt; 호출이 실패하면 이 컨트롤러에서 &lt;code&gt;update&lt;/code&gt; 작업을 호출 하면 동일한 컨트롤러에 속하는 &lt;code&gt;edit.html.erb&lt;/code&gt; 템플릿 이 렌더링 됩니다.</target>
        </trans-unit>
        <trans-unit id="16cd334d2e15cae6ee63be60a754872d86228099" translate="yes" xml:space="preserve">
          <source>If the callback chain was halted, returns &lt;code&gt;false&lt;/code&gt;. Otherwise returns the result of the block, &lt;code&gt;nil&lt;/code&gt; if no callbacks have been set, or &lt;code&gt;true&lt;/code&gt; if callbacks have been set but no block is given.</source>
          <target state="translated">콜백 체인이 중지 된 경우 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 그렇지 않으면 블록의 결과를 반환하고, 콜백이 설정되지 않은 경우 &lt;code&gt;nil&lt;/code&gt; , 콜백이 설정되었지만 블록이 제공되지 않으면 &lt;code&gt;true&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="41c725c6024bced2df392feb33d1c57a94be32f1" translate="yes" xml:space="preserve">
          <source>If the callback method is declared this way, it won't be necessary to instantiate a &lt;code&gt;PictureFileCallbacks&lt;/code&gt; object.</source>
          <target state="translated">콜백 메소드가 이런 식으로 선언되면 &lt;code&gt;PictureFileCallbacks&lt;/code&gt; 객체 를 인스턴스화 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="1c4eaca745cedef97a53c140559bbe1f6d49b699" translate="yes" xml:space="preserve">
          <source>If the callback renders or redirects, the action will not run. If there are additional callbacks scheduled to run after that callback, they are also cancelled.</source>
          <target state="translated">콜백이 렌더링되거나 리디렉션되면 작업이 실행되지 않습니다. 해당 콜백 이후에 추가 콜백이 실행되도록 예약 된 경우 취소됩니다.</target>
        </trans-unit>
        <trans-unit id="2784a39d87d3eb7ac3e4e522ea28602c361bb4bb" translate="yes" xml:space="preserve">
          <source>If the categories &amp;ldquo;2008 stuff&amp;rdquo; and &amp;ldquo;Christmas&amp;rdquo; return true when the method &lt;code&gt;archived?&lt;/code&gt; is called, this would return:</source>
          <target state="translated">메소드가 &lt;code&gt;archived?&lt;/code&gt; 될 때 &quot;2008 stuff&quot;및 &quot;Christmas&quot;범주가 true를 반환하는 경우 호출되면 다음을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8166306f0157b1a8dd560d1d779cbab37120bc5d" translate="yes" xml:space="preserve">
          <source>If the class has an initializer, it must accept no arguments.</source>
          <target state="translated">클래스에 이니셜 라이저가 있으면 인수를 허용하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="60e9c66606c8b362e2f076c77691827cc9c68751" translate="yes" xml:space="preserve">
          <source>If the client wants HTML, we just redirect them back to the person list. If they want JavaScript, then it is an Ajax request and we render the JavaScript template associated with this action. Lastly, if the client wants XML, we render the created person as XML, but with a twist: we also include the person's company in the rendered XML, so you get something like this:</source>
          <target state="translated">고객이 HTML을 원한다면, 사용자 목록으로 다시 리디렉션하면됩니다. 자바 스크립트를 원하는 경우 Ajax 요청이며이 조치와 연관된 JavaScript 템플리트를 렌더링합니다. 마지막으로, 클라이언트가 XML을 원한다면 생성 된 사람을 XML로 렌더링하지만, 왜곡 된 방식으로 사람의 회사도 렌더링 된 XML에 포함 시키므로 다음과 같은 결과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e8ac405dee5bd727438c7f644b7f729f1f6da4d" translate="yes" xml:space="preserve">
          <source>If the code block is provided, then it will be run and its result returned.</source>
          <target state="translated">코드 블록이 제공되면 코드 블록이 실행되고 결과가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="cc3cada6acaa9bd09b8ed52dcd9735c77ae53d60" translate="yes" xml:space="preserve">
          <source>If the collection has been already loaded &lt;code&gt;size&lt;/code&gt; and &lt;code&gt;length&lt;/code&gt; are equivalent. If not and you are going to need the records anyway &lt;code&gt;length&lt;/code&gt; will take one less query. Otherwise &lt;code&gt;size&lt;/code&gt; is more efficient.</source>
          <target state="translated">컬렉션이 이미로드 된 경우 &lt;code&gt;size&lt;/code&gt; 와 &lt;code&gt;length&lt;/code&gt; 는 같습니다. 그렇지 않은 경우 어쨌든 &lt;code&gt;length&lt;/code&gt; 가 필요한 레코드 는 하나 더 적은 쿼리가 필요합니다 . 그렇지 않으면 &lt;code&gt;size&lt;/code&gt; 가 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="34e946ebf3ea03c136bdeda35b3d897d8593404f" translate="yes" xml:space="preserve">
          <source>If the collection is empty the root element is &amp;ldquo;nil-classes&amp;rdquo; by default:</source>
          <target state="translated">컬렉션이 비어 있으면 루트 요소는 기본적으로 &quot;nil-classes&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="b7f67bf3a1604fd5392ad21dc4b5f43143280301" translate="yes" xml:space="preserve">
          <source>If the collection is empty the root element is by default &quot;nil-classes&quot;. That's a gotcha, for example the root element of the list of contributors above would not be &quot;contributors&quot; if the collection was empty, but &quot;nil-classes&quot;. You may use the &lt;code&gt;:root&lt;/code&gt; option to ensure a consistent root element.</source>
          <target state="translated">컬렉션이 비어 있으면 루트 요소는 기본적으로 &quot;nil-classes&quot;입니다. 예를 들어, 위의 기고자 목록의 루트 요소는 컬렉션이 비어 있으면 &quot;기여자&quot;가 아니라 &quot;nil-classes&quot;가됩니다. &lt;code&gt;:root&lt;/code&gt; 옵션을 사용하여 일관된 루트 요소를 보장 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b613ce8577af2e7ce6ea0ef6a11c0b870b860090" translate="yes" xml:space="preserve">
          <source>If the collection is loaded, the method will iterate through the records to generate the timestamp, otherwise it will trigger one SQL query like:</source>
          <target state="translated">컬렉션이로드되면 메서드는 레코드를 반복하여 타임 스탬프를 생성합니다. 그렇지 않으면 다음과 같은 하나의 SQL 쿼리가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="d3893c514cabd2a7f4a09663581d1a86272afca1" translate="yes" xml:space="preserve">
          <source>If the condition is any blank-ish object, then &lt;a href=&quot;querymethods#method-i-where&quot;&gt;where&lt;/a&gt; is a no-op and returns the current relation.</source>
          <target state="translated">조건이 공백 개체 인 경우 &lt;a href=&quot;querymethods#method-i-where&quot;&gt;where&lt;/a&gt; 는 no-op이며 현재 관계를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="341579d3965226e575f4d073b0660419a1fb1f16" translate="yes" xml:space="preserve">
          <source>If the constant is not defined at that point it is not considered to be a missing constant, autoloading is &lt;strong&gt;not&lt;/strong&gt; triggered.</source>
          <target state="translated">이 시점에서 상수가 정의되지 않은 경우 누락 된 상수로 간주 &lt;strong&gt;되지 않으며&lt;/strong&gt; 자동로드가 트리거 &lt;strong&gt;되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="2d335c8eabf090ac0fa810d002d6a3cd1ab96a1e" translate="yes" xml:space="preserve">
          <source>If the database adapter supports DDL transactions, all migrations will automatically be wrapped in a transaction. There are queries that you can't execute inside a transaction though, and for these situations you can turn the automatic transactions off.</source>
          <target state="translated">데이터베이스 어댑터가 DDL 트랜잭션을 지원하면 모든 마이그레이션이 자동으로 트랜잭션으로 랩핑됩니다. 트랜잭션 내에서 실행할 수없는 쿼리가 있으며 이러한 상황에서는 자동 트랜잭션을 해제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="040f2cbc6393a8808d27fc9022304d799fa6716f" translate="yes" xml:space="preserve">
          <source>If the database column does not exist, the &lt;code&gt;terms_of_service&lt;/code&gt; attribute is entirely virtual. This check is performed only if &lt;code&gt;terms_of_service&lt;/code&gt; is not &lt;code&gt;nil&lt;/code&gt; and by default on save.</source>
          <target state="translated">데이터베이스 열이 존재하지 않는 경우 &lt;code&gt;terms_of_service&lt;/code&gt; 속성은 완전히 가상입니다. 이 검사는 &lt;code&gt;terms_of_service&lt;/code&gt; 가 &lt;code&gt;nil&lt;/code&gt; 이 아닌 경우 기본적으로 저장시 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="8d9b21364e4a939c4ef36197aedd2645bd258c39" translate="yes" xml:space="preserve">
          <source>If the default name of the join table, based on lexical ordering, is not what you want, you can use the &lt;code&gt;:join_table&lt;/code&gt; option to override the default.</source>
          <target state="translated">어휘 순서를 기반으로하는 조인 테이블의 기본 이름이 원하는 이름이 아닌 경우 &lt;code&gt;:join_table&lt;/code&gt; 옵션을 사용 하여 기본값을 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="77fd0e64933c74ff47b477c5c92febf3b85a1998" translate="yes" xml:space="preserve">
          <source>If the env contains &lt;code&gt;rack.early_hints&lt;/code&gt; then the server accepts HTTP2 push for Link headers.</source>
          <target state="translated">env에 &lt;code&gt;rack.early_hints&lt;/code&gt; 가 포함 된 경우 서버는 링크 헤더에 대한 HTTP2 푸시를 승인합니다.</target>
        </trans-unit>
        <trans-unit id="8990289b6081515b6a58646c9a9c238b5e673b53" translate="yes" xml:space="preserve">
          <source>If the error message requires options, then it returns &lt;code&gt;true&lt;/code&gt; with the correct options, or &lt;code&gt;false&lt;/code&gt; with incorrect or missing options.</source>
          <target state="translated">오류 메시지에 옵션이 필요한 경우 올바른 옵션으로 &lt;code&gt;true&lt;/code&gt; 를, 올바르지 않거나 누락 된 옵션으로 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="016563f6fc2abaa3eed6fe7a75c9f43f809258c7" translate="yes" xml:space="preserve">
          <source>If the file defines the constant &lt;code&gt;ApplicationController&lt;/code&gt; all is fine, otherwise &lt;code&gt;LoadError&lt;/code&gt; is raised:</source>
          <target state="translated">파일이 상수 &lt;code&gt;ApplicationController&lt;/code&gt; 를 정의하면 모두 &lt;code&gt;LoadError&lt;/code&gt; 이고 그렇지 않으면 LoadError 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1eb927638f5d9484fdd901f79219252d10a69c98" translate="yes" xml:space="preserve">
          <source>If the first argument is not a Symbol, then it will simply be returned:</source>
          <target state="translated">첫 번째 인수가 Symbol이 아닌 경우 간단히 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="deb3c71748def15aeb30c6411683535860b363d8" translate="yes" xml:space="preserve">
          <source>If the flush parameter is &lt;code&gt;true&lt;/code&gt;&lt;code&gt;content_for&lt;/code&gt; replaces the blocks it is given. For example:</source>
          <target state="translated">flush 매개 변수가 &lt;code&gt;true&lt;/code&gt; 이면 &lt;code&gt;content_for&lt;/code&gt; 는 주어진 블록을 대체합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="227fed38b2812ba4a10ec8b83efda30f6d3b5739" translate="yes" xml:space="preserve">
          <source>If the generator is invoked with class name Admin, it will check for the presence of &amp;ldquo;AdminDecorator&amp;rdquo;.</source>
          <target state="translated">생성자가 클래스 이름 Admin으로 호출되면 &quot;AdminDecorator&quot;가 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="e0ab4232b45c5ee76bafe2e9038c8fee8b56a7f1" translate="yes" xml:space="preserve">
          <source>If the given &lt;code&gt;:collection&lt;/code&gt; is &lt;code&gt;nil&lt;/code&gt; or empty, &lt;code&gt;render&lt;/code&gt; will return &lt;code&gt;nil&lt;/code&gt;. This will allow you to specify a text which will be displayed instead by using this form:</source>
          <target state="translated">주어진 &lt;code&gt;:collection&lt;/code&gt; 이 &lt;code&gt;nil&lt;/code&gt; 이거나 비어 있으면 &lt;code&gt;render&lt;/code&gt; 는 &lt;code&gt;nil&lt;/code&gt; 을 반환 합니다. 이를 통해 다음 양식을 사용하여 표시 할 텍스트를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="163cef209c505e7bc006f989045e074f140564db" translate="yes" xml:space="preserve">
          <source>If the hash contains an &lt;code&gt;id&lt;/code&gt; key that matches an already associated record, the matching record will be modified:</source>
          <target state="translated">해시 에 이미 연결된 레코드와 일치 하는 &lt;code&gt;id&lt;/code&gt; 키가 포함되어 있으면 일치하는 레코드가 수정됩니다.</target>
        </trans-unit>
        <trans-unit id="944c4f1b89829d70ab3d6a4ceec13a795ba5b5de" translate="yes" xml:space="preserve">
          <source>If the hash of attributes for an object contains the key &lt;code&gt;_destroy&lt;/code&gt; with a value that evaluates to &lt;code&gt;true&lt;/code&gt; (eg. 1, '1', true, or 'true') then the object will be destroyed. This form allows users to remove addresses:</source>
          <target state="translated">객체의 속성 해시에 &lt;code&gt;true&lt;/code&gt; 로 평가되는 값 (예 : 1, '1', true 또는 'true') 의 키 &lt;code&gt;_destroy&lt;/code&gt; 가 포함되어 있으면 객체가 파괴됩니다. 이 양식을 사용하면 사용자가 주소를 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bccde5eea872243c7a05d13133b714dc8203a208" translate="yes" xml:space="preserve">
          <source>If the helpers provided by Active Record aren't enough you can use the &lt;code&gt;execute&lt;/code&gt; method to execute arbitrary SQL:</source>
          <target state="translated">Active Record에서 제공하는 헬퍼가 충분하지 않으면 &lt;code&gt;execute&lt;/code&gt; 메소드를 사용하여 임의의 SQL을 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0a2541e9774c0fa5c8fd9ed6ba8472389b4bce3f" translate="yes" xml:space="preserve">
          <source>If the image contains EXIF data indicating its angle is 90 or 270 degrees, its width and height are swapped for convenience.</source>
          <target state="translated">이미지에 각도가 90도 또는 270 도임을 나타내는 EXIF ​​데이터가 포함되어 있으면 편의를 위해 너비와 높이가 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="8d042e2a8097a1cd9f090ed461b2d2edd91f9489" translate="yes" xml:space="preserve">
          <source>If the join table for a &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association has additional columns beyond the two foreign keys, these columns will be added as attributes to records retrieved via that association. Records returned with additional attributes will always be read-only, because Rails cannot save changes to those attributes.</source>
          <target state="translated">&lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 연관에 대한 결합 테이블에 두 개의 외부 키 이외의 추가 열이 있는 경우 해당 열은 해당 연관을 통해 검색된 레코드에 속성으로 추가됩니다. Rails가 해당 속성에 대한 변경 사항을 저장할 수 없으므로 추가 속성으로 반환 된 레코드는 항상 읽기 전용입니다.</target>
        </trans-unit>
        <trans-unit id="86f8b6dcd1415f6f59d2e78135b1a3a0a2a30ef9" translate="yes" xml:space="preserve">
          <source>If the key is not found and an optional code block is not provided, raises a &lt;code&gt;KeyError&lt;/code&gt; exception.</source>
          <target state="translated">키를 찾을 수없고 선택적 코드 블록이 제공되지 않으면 &lt;code&gt;KeyError&lt;/code&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ad902096c915fab4245d5fbd18ec7dea5cbf5a18" translate="yes" xml:space="preserve">
          <source>If the locale is set via the URL to the pirate locale (&lt;code&gt;http://localhost:3000?locale=pirate&lt;/code&gt;), the response renders the pirate strings:</source>
          <target state="translated">로케일이 URL을 통해 해적 로케일 ( &lt;code&gt;http://localhost:3000?locale=pirate&lt;/code&gt; )로 설정되면 응답이 해적 문자열을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="870f530498bda0234d9ea1e6f8bd4f47e257d204" translate="yes" xml:space="preserve">
          <source>If the lookup fails, &lt;code&gt;const_missing&lt;/code&gt; is invoked in the parent. The default implementation of &lt;code&gt;const_missing&lt;/code&gt; raises &lt;code&gt;NameError&lt;/code&gt;, but it can be overridden.</source>
          <target state="translated">조회가 실패하면 부모에서 &lt;code&gt;const_missing&lt;/code&gt; 이 호출됩니다. &lt;code&gt;const_missing&lt;/code&gt; 의 기본 구현 은 &lt;code&gt;NameError&lt;/code&gt; 를 발생 시키지만 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e8149dfbd2231a5c362a4ce424d84c029c05f68" translate="yes" xml:space="preserve">
          <source>If the lookup for the key does not return a Hash suitable for pluralization, an &lt;code&gt;I18n::InvalidPluralizationData&lt;/code&gt; exception is raised.</source>
          <target state="translated">키 검색이 복수형에 적합한 해시를 반환하지 않으면 &lt;code&gt;I18n::InvalidPluralizationData&lt;/code&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6f947e905ecb75caaa354b270ae26b2cb288aad3" translate="yes" xml:space="preserve">
          <source>If the migration name is of the form &quot;AddColumnToTable&quot; or &quot;RemoveColumnFromTable&quot; and is followed by a list of column names and types then a migration containing the appropriate &lt;code&gt;add_column&lt;/code&gt; and &lt;code&gt;remove_column&lt;/code&gt; statements will be created.</source>
          <target state="translated">마이그레이션 이름이 &quot;AddColumnToTable&quot;또는 &quot;RemoveColumnFromTable&quot;형식이고 열 이름 및 유형 목록이 오는 경우 적절한 &lt;code&gt;add_column&lt;/code&gt; 및 &lt;code&gt;remove_column&lt;/code&gt; 문을 포함하는 마이그레이션 이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="ece6215196e6f407645658c4394d70b2ec694aab" translate="yes" xml:space="preserve">
          <source>If the migration name is of the form &quot;CreateXXX&quot; and is followed by a list of column names and types then a migration creating the table XXX with the columns listed will be generated. For example:</source>
          <target state="translated">마이그레이션 이름이 &quot;CreateXXX&quot;형식이고 열 이름 및 유형 목록이 오는 경우 열이 나열된 테이블 XXX를 작성하는 마이그레이션이 생성됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="70a84627fbfe630a489c29847212ed61d1c93a43" translate="yes" xml:space="preserve">
          <source>If the model is new, a record gets created in the database, otherwise the existing record gets updated.</source>
          <target state="translated">모델이 새 모델이면 데이터베이스에 레코드가 작성되고, 그렇지 않으면 기존 레코드가 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="1b0b6f923ae257bf38d6ce3333a84aca4b26fd4c" translate="yes" xml:space="preserve">
          <source>If the module is anonymous or belongs to the top-level, &lt;code&gt;module_parent&lt;/code&gt; returns &lt;code&gt;Object&lt;/code&gt;.</source>
          <target state="translated">모듈이 익명이거나 최상위 수준에 속하는 경우 &lt;code&gt;module_parent&lt;/code&gt; 는 &lt;code&gt;Object&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4da9e3a8d78c55de45793184aae4338468d1479c" translate="yes" xml:space="preserve">
          <source>If the name of the other model cannot be derived from the association name, you can use the &lt;code&gt;:class_name&lt;/code&gt; option to supply the model name. For example, if a book belongs to an author, but the actual name of the model containing authors is &lt;code&gt;Patron&lt;/code&gt;, you'd set things up this way:</source>
          <target state="translated">다른 모델의 이름을 연관 이름에서 파생 할 수없는 경우 &lt;code&gt;:class_name&lt;/code&gt; 옵션을 사용 하여 모델 이름을 제공 할 수 있습니다 . 예를 들어, 책이 저자에 속하지만 저자가 포함 된 모델의 실제 이름이 &lt;code&gt;Patron&lt;/code&gt; 인 경우 다음과 같이 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8377507763a4ec6736375f2270c6163f80978c37" translate="yes" xml:space="preserve">
          <source>If the name of the other model cannot be derived from the association name, you can use the &lt;code&gt;:class_name&lt;/code&gt; option to supply the model name. For example, if a part has many assemblies, but the actual name of the model containing assemblies is &lt;code&gt;Gadget&lt;/code&gt;, you'd set things up this way:</source>
          <target state="translated">다른 모델의 이름을 연관 이름에서 파생 할 수없는 경우 &lt;code&gt;:class_name&lt;/code&gt; 옵션을 사용 하여 모델 이름을 제공 할 수 있습니다 . 예를 들어, 부품에 많은 어셈블리가 있지만 어셈블리를 포함하는 모델의 실제 이름이 &lt;code&gt;Gadget&lt;/code&gt; 인 경우 다음과 같이 설정합니다.</target>
        </trans-unit>
        <trans-unit id="97ff49a05f14a74ff483211e15c937e2a750f137" translate="yes" xml:space="preserve">
          <source>If the name of the other model cannot be derived from the association name, you can use the &lt;code&gt;:class_name&lt;/code&gt; option to supply the model name. For example, if a supplier has an account, but the actual name of the model containing accounts is &lt;code&gt;Billing&lt;/code&gt;, you'd set things up this way:</source>
          <target state="translated">다른 모델의 이름을 연관 이름에서 파생 할 수없는 경우 &lt;code&gt;:class_name&lt;/code&gt; 옵션을 사용 하여 모델 이름을 제공 할 수 있습니다 . 예를 들어 공급 업체에 계정이 있지만 계정을 포함하는 모델의 실제 이름이 &lt;code&gt;Billing&lt;/code&gt; 인 경우 다음과 같이 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f94aae77695ec53c01d4b6e6eddcfdcfb24ac73e" translate="yes" xml:space="preserve">
          <source>If the name of the other model cannot be derived from the association name, you can use the &lt;code&gt;:class_name&lt;/code&gt; option to supply the model name. For example, if an author has many books, but the actual name of the model containing books is &lt;code&gt;Transaction&lt;/code&gt;, you'd set things up this way:</source>
          <target state="translated">다른 모델의 이름을 연관 이름에서 파생 할 수없는 경우 &lt;code&gt;:class_name&lt;/code&gt; 옵션을 사용 하여 모델 이름을 제공 할 수 있습니다 . 예를 들어, 저자가 많은 책을 가지고 있지만 books를 포함하는 모델의 실제 이름이 &lt;code&gt;Transaction&lt;/code&gt; 인 경우 다음과 같이 설정합니다.</target>
        </trans-unit>
        <trans-unit id="11b4fb83f4789ed1e001dee831cc8b6b77352264" translate="yes" xml:space="preserve">
          <source>If the nesting is not empty the constant is looked up in its elements and in order. The ancestors of those elements are ignored.</source>
          <target state="translated">중첩이 비어 있지 않으면 상수가 해당 요소에서 순서대로 조회됩니다. 해당 요소의 조상은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="67b2499edc21dcefa2ca3ad43e6fd9a4c40ce34e" translate="yes" xml:space="preserve">
          <source>If the next id was calculated in advance (as in Oracle), it should be passed in as &lt;code&gt;id_value&lt;/code&gt;.</source>
          <target state="translated">다음 ID가 Oracle에서와 같이 미리 계산 된 경우 &lt;code&gt;id_value&lt;/code&gt; 로 전달되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="dfd0a84ba7da4333cdce8acd27d507e439024639" translate="yes" xml:space="preserve">
          <source>If the number of workers is set to &lt;code&gt;1&lt;/code&gt; or fewer, the tests will not be parallelized.</source>
          <target state="translated">작업자 수를 &lt;code&gt;1&lt;/code&gt; 이하로 설정 하면 테스트가 병렬화되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6cc6d814e2ff76852e8129d0558c26d66faa2717" translate="yes" xml:space="preserve">
          <source>If the number of workers passed is 1 or fewer the processes will not be forked and the tests will not be parallelized and the tests will use the original &lt;code&gt;test-database&lt;/code&gt; database.</source>
          <target state="translated">통과 한 작업자 수가 1 이하인 경우 프로세스가 분기되지 않고 테스트가 병렬화되지 않으며 테스트는 원래 &lt;code&gt;test-database&lt;/code&gt; 데이터베이스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="8f9d9939f0cd78a05e79047e0433dd766d96823e" translate="yes" xml:space="preserve">
          <source>If the object is not duplicable, &lt;code&gt;deep_dup&lt;/code&gt; will just return it:</source>
          <target state="translated">객체를 &lt;code&gt;deep_dup&lt;/code&gt; 할 수 없는 경우 deep_dup 은 다음 객체 만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="102e580e78b77b9638059d5b3745ebabdaabe3b6" translate="yes" xml:space="preserve">
          <source>If the optional parameter &lt;code&gt;count&lt;/code&gt; is specified, the singular form will be returned if &lt;code&gt;count == 1&lt;/code&gt;. For any other value of &lt;code&gt;count&lt;/code&gt; the plural will be returned.</source>
          <target state="translated">선택적 매개 변수 &lt;code&gt;count&lt;/code&gt; 를 지정하면 &lt;code&gt;count == 1&lt;/code&gt; 경우 특이 형이 반환됩니다 . 다른 &lt;code&gt;count&lt;/code&gt; 값에 대해서는 복수가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e4887aa76eab30a794195abceff5280255f3b1e0" translate="yes" xml:space="preserve">
          <source>If the optional parameter &lt;code&gt;locale&lt;/code&gt; is specified, the word will be parameterized as a word of that language. By default, this parameter is set to &lt;code&gt;nil&lt;/code&gt; and it will use the configured &amp;lt;tt&amp;gt;I18n.locale&amp;lt;tt&amp;gt;.</source>
          <target state="translated">선택적 매개 변수 &lt;code&gt;locale&lt;/code&gt; 이 지정되면 단어는 해당 언어의 단어로 매개 변수화됩니다. 기본적으로이 매개 변수는 &lt;code&gt;nil&lt;/code&gt; 로 설정되며 구성된 &amp;lt;tt&amp;gt; I18n.locale &amp;lt;tt&amp;gt;을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a61ba1e9ee0afd2d8ffc548e3e9947cfdebb27a7" translate="yes" xml:space="preserve">
          <source>If the optional parameter &lt;code&gt;locale&lt;/code&gt; is specified, the word will be parameterized as a word of that language. By default, this parameter is set to &lt;code&gt;nil&lt;/code&gt; and it will use the configured &lt;code&gt;I18n.locale&lt;/code&gt;.</source>
          <target state="translated">선택적 매개 변수 &lt;code&gt;locale&lt;/code&gt; 이 지정되면 단어는 해당 언어의 단어로 매개 변수화됩니다. 기본적으로이 매개 변수는 &lt;code&gt;nil&lt;/code&gt; 로 설정되며 구성된 &lt;code&gt;I18n.locale&lt;/code&gt; 을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="a6f204c33fed17f1b258693b08de01fb73e75215" translate="yes" xml:space="preserve">
          <source>If the optional parameter &lt;code&gt;locale&lt;/code&gt; is specified, the word will be pluralized as a word of that language. By default, this parameter is set to &lt;code&gt;:en&lt;/code&gt;. You must define your own inflection rules for languages other than English.</source>
          <target state="translated">선택적 매개 변수 &lt;code&gt;locale&lt;/code&gt; 이 지정된 경우 단어는 해당 언어의 단어로 복수화됩니다. 기본적으로이 매개 변수는 &lt;code&gt;:en&lt;/code&gt; 으로 설정되어 있습니다. 영어 이외의 언어에 대한 고유 한 활용 규칙을 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="c370ad903b0e1ccf00804193dd9cec24222e49ff" translate="yes" xml:space="preserve">
          <source>If the optional parameter &lt;code&gt;locale&lt;/code&gt; is specified, the word will be singularized as a word of that language. By default, this parameter is set to &lt;code&gt;:en&lt;/code&gt;. You must define your own inflection rules for languages other than English.</source>
          <target state="translated">선택적 매개 변수 &lt;code&gt;locale&lt;/code&gt; 이 지정된 경우 단어는 해당 언어의 단어로 단 수화됩니다. 기본적으로이 매개 변수는 &lt;code&gt;:en&lt;/code&gt; 으로 설정되어 있습니다. 영어 이외의 언어에 대한 고유 한 활용 규칙을 정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="f0a15cf567f8137845d803f95821d69a0503b3ad" translate="yes" xml:space="preserve">
          <source>If the parameter was nil, the resulting SQL query will be</source>
          <target state="translated">매개 변수가 nil이면 결과 SQL 조회는</target>
        </trans-unit>
        <trans-unit id="c46d978accc2f2a4b15b950d71a4912e0174f02d" translate="yes" xml:space="preserve">
          <source>If the parent object (the one declaring the &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association) is unsaved (that is, &lt;code&gt;new_record?&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;) then the child objects are not saved when they are added. All unsaved members of the association will automatically be saved when the parent is saved.</source>
          <target state="translated">상위 오브젝트 ( &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 연관을 선언하는 오브젝트 )가 저장되지 않은 경우 (즉, &lt;code&gt;new_record?&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 리턴 함 ) 하위 오브젝트가 추가 될 때 저장되지 않습니다. 부모가 저장되면 저장되지 않은 모든 연결 구성원이 자동으로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="9253035efaa95771d21dbdb78c6343a98a0ea95e" translate="yes" xml:space="preserve">
          <source>If the parent object (the one declaring the &lt;code&gt;has_many&lt;/code&gt; association) is unsaved (that is, &lt;code&gt;new_record?&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;) then the child objects are not saved when they are added. All unsaved members of the association will automatically be saved when the parent is saved.</source>
          <target state="translated">상위 오브젝트 ( &lt;code&gt;has_many&lt;/code&gt; 연관을 선언하는 오브젝트 )가 저장되지 않은 경우 (즉, &lt;code&gt;new_record?&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 리턴 함 ) 하위 오브젝트가 추가 될 때 저장되지 않습니다. 부모가 저장되면 저장되지 않은 모든 연결 구성원이 자동으로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="9d95d4c5d57c6c10f4dec813318f4435152d55f4" translate="yes" xml:space="preserve">
          <source>If the parent object (the one declaring the &lt;code&gt;has_one&lt;/code&gt; association) is unsaved (that is, &lt;code&gt;new_record?&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;) then the child objects are not saved. They will automatically when the parent object is saved.</source>
          <target state="translated">부모 객체 ( &lt;code&gt;has_one&lt;/code&gt; 연관을 선언하는 객체 )가 저장되지 않은 경우 (즉, &lt;code&gt;new_record?&lt;/code&gt; 는 &lt;code&gt;true&lt;/code&gt; 를 반환 ), 하위 객체는 저장되지 않습니다. 부모 개체가 저장되면 자동으로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="a78ddbc73dbba9e718359b9098c1b6dec6aa075a" translate="yes" xml:space="preserve">
          <source>If the passed hash responds to &lt;code&gt;permitted?&lt;/code&gt; method and the return value of this method is &lt;code&gt;false&lt;/code&gt; an &lt;code&gt;ActiveModel::ForbiddenAttributesError&lt;/code&gt; exception is raised.</source>
          <target state="translated">전달 된 해시가 &lt;code&gt;permitted?&lt;/code&gt; 응답하면 ? 방법 및이 방법의 반환 값은 &lt;code&gt;false&lt;/code&gt; &lt;code&gt;ActiveModel::ForbiddenAttributesError&lt;/code&gt; 예외가 발생된다.</target>
        </trans-unit>
        <trans-unit id="264da520997c04c07bca1c0606737bdb1990b80a" translate="yes" xml:space="preserve">
          <source>If the process regenerating the entry errors out, the entry will be regenerated after the specified number of seconds. Also note that the life of stale cache is extended only if it expired recently. Otherwise a new value is generated and &lt;code&gt;:race_condition_ttl&lt;/code&gt; does not play any role.</source>
          <target state="translated">항목 재생성 프로세스에서 오류가 발생하면 지정된 시간 (초) 후에 항목이 재생성됩니다. 또한 오래된 캐시의 수명은 최근 만료 된 경우에만 연장됩니다. 그렇지 않으면 새 값이 생성되고 &lt;code&gt;:race_condition_ttl&lt;/code&gt; 이 역할을하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="faaee8fd909b57600e904a5e3792dd07465b53cb" translate="yes" xml:space="preserve">
          <source>If the product's price is 10 then the proper translation for Spanish is &quot;10 &amp;euro;&quot; instead of &quot;&amp;euro;10&quot; but the abstraction cannot give it.</source>
          <target state="translated">제품 가격이 10 인 경우 스페인어에 대한 올바른 번역은 &quot;&amp;euro; 10&quot;대신 &quot;10 &amp;euro;&quot;이지만 추상화는이를 제공 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8548a7c614beefae1ecc04594d5155f43e4f4d46" translate="yes" xml:space="preserve">
          <source>If the receiver is an array of hashes the root element is by default also &quot;objects&quot;:</source>
          <target state="translated">수신자가 해시 배열 인 경우 루트 요소는 기본적으로 &quot;개체&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="628881d48f531a760362d402b30de60357eeb1e4" translate="yes" xml:space="preserve">
          <source>If the receiver responds to &lt;code&gt;convert_key&lt;/code&gt;, the method is called on each of the arguments. This allows &lt;code&gt;except&lt;/code&gt; to play nice with hashes with indifferent access for instance:</source>
          <target state="translated">수신자가 &lt;code&gt;convert_key&lt;/code&gt; 에 응답 하면 메소드는 각 인수에서 호출됩니다. 이 수 &lt;code&gt;except&lt;/code&gt; 예를 들어 무관심 액세스 할 수있는 해시와 플레이 니스 :</target>
        </trans-unit>
        <trans-unit id="c9f17fd73e9e6bbe78975e21e3e00f947aea8330" translate="yes" xml:space="preserve">
          <source>If the record is persisted and unchanged, the attachment is saved to the database immediately. Otherwise, it'll be saved to the DB when the record is next saved.</source>
          <target state="translated">레코드가 유지되고 변경되지 않은 경우 첨부 파일이 데이터베이스에 즉시 저장됩니다. 그렇지 않으면 레코드가 다음에 저장 될 때 DB에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="b9e0aff9de9a4047c05fd0c6a346054672a1196d" translate="yes" xml:space="preserve">
          <source>If the record is persisted and unchanged, the attachments are saved to the database immediately. Otherwise, they'll be saved to the DB when the record is next saved.</source>
          <target state="translated">레코드가 유지되고 변경되지 않은 경우 첨부 파일이 데이터베이스에 즉시 저장됩니다. 그렇지 않으면 레코드가 다음에 저장 될 때 DB에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="8f3b9c80470cdbf8357a8c8495c35aef71ed85fa" translate="yes" xml:space="preserve">
          <source>If the record no longer exists in the database &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord::RecordNotFound&lt;/a&gt; is raised. Otherwise, in addition to the in-place modification the method returns &lt;code&gt;self&lt;/code&gt; for convenience.</source>
          <target state="translated">데이터베이스에 레코드가 더 이상 존재하지 않으면 &lt;a href=&quot;recordnotfound&quot;&gt;ActiveRecord :: RecordNotFound&lt;/a&gt; 가 발생합니다. 그렇지 않으면 전체 수정 외에이 메소드는 편의를 위해 &lt;code&gt;self&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="718d34739419504d18b253b8814ff3cfc64d4fc2" translate="yes" xml:space="preserve">
          <source>If the relation is the result of a join, you may create a condition which uses any of the tables in the join. For string and array conditions, use the table name in the condition.</source>
          <target state="translated">관계가 조인의 결과 인 경우 조인의 테이블을 사용하는 조건을 만들 수 있습니다. 문자열 및 배열 조건의 경우 조건에서 테이블 이름을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="52e8962b99d5f57b067c75b11a43f9ae0c68925b" translate="yes" xml:space="preserve">
          <source>If the returned value from &lt;code&gt;to_ary&lt;/code&gt; is neither &lt;code&gt;nil&lt;/code&gt; nor an &lt;code&gt;Array&lt;/code&gt; object, &lt;code&gt;Kernel#Array&lt;/code&gt; raises an exception, while &lt;code&gt;Array.wrap&lt;/code&gt; does not, it just returns the value.</source>
          <target state="translated">&lt;code&gt;to_ary&lt;/code&gt; 에서 반환 된 값 이 &lt;code&gt;nil&lt;/code&gt; 또는 &lt;code&gt;Array&lt;/code&gt; 객체 가 아닌 경우 &lt;code&gt;Kernel#Array&lt;/code&gt; 는 예외를 발생 &lt;code&gt;Array.wrap&lt;/code&gt; 반면 Array.wrap 은 예외를 발생 시키지 않으며 값만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="68b8b5af912f9f3f893f90e43b61afa533cba712" translate="yes" xml:space="preserve">
          <source>If the server supports Early Hints header links for these assets will be automatically pushed.</source>
          <target state="translated">서버가 Early Hints를 지원하면 이러한 자산에 대한 헤더 링크가 자동으로 푸시됩니다.</target>
        </trans-unit>
        <trans-unit id="955d955468d094edb518dd51c17ebc95c034c57e" translate="yes" xml:space="preserve">
          <source>If the specified layout is a:</source>
          <target state="translated">지정된 레이아웃이 다음과 같은 경우 :</target>
        </trans-unit>
        <trans-unit id="1ab1f05121c5fae2e6556690c69689301c62259a" translate="yes" xml:space="preserve">
          <source>If the string evaluates to no known constant, or its content is not even a valid constant name, &lt;code&gt;constantize&lt;/code&gt; raises &lt;code&gt;NameError&lt;/code&gt;.</source>
          <target state="translated">알려진 바 없음 일정, 또는 그 내용에 문자열 평가하여도 유효한 상수 이름이 아닌 경우, &lt;code&gt;constantize&lt;/code&gt; 이 제기 &lt;code&gt;NameError&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1c84a61d243aa1bdf5a41cb546fb76610ea8a96b" translate="yes" xml:space="preserve">
          <source>If the string is invalid then an &lt;code&gt;ArgumentError&lt;/code&gt; could be raised.</source>
          <target state="translated">문자열이 유효하지 않으면 &lt;code&gt;ArgumentError&lt;/code&gt; 가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c670a4101a475c6e4985579d6c1ced5675cafc0c" translate="yes" xml:space="preserve">
          <source>If the string is invalid then an &lt;code&gt;ArgumentError&lt;/code&gt; will be raised unlike &lt;code&gt;parse&lt;/code&gt; which usually returns &lt;code&gt;nil&lt;/code&gt; when given an invalid date string.</source>
          <target state="translated">문자열이 유효하지 않으면 유효하지 않은 날짜 문자열이 주어지면 일반적으로 &lt;code&gt;nil&lt;/code&gt; 을 반환하는 &lt;code&gt;parse&lt;/code&gt; 과 달리 &lt;code&gt;ArgumentError&lt;/code&gt; 가 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="56c6e4523426e6213b5e6d72ef5cb49bcaa117ce" translate="yes" xml:space="preserve">
          <source>If the supplied array has an incorrect association type, it raises an &lt;code&gt;ActiveRecord::AssociationTypeMismatch&lt;/code&gt; error:</source>
          <target state="translated">제공된 배열에 잘못된 연결 유형이 있으면 &lt;code&gt;ActiveRecord::AssociationTypeMismatch&lt;/code&gt; 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dddc51c0472f6ff36a1a18de4ed7f8d5317170b4" translate="yes" xml:space="preserve">
          <source>If the target is &lt;code&gt;nil&lt;/code&gt; and does not respond to the delegated method a &lt;code&gt;Module::DelegationError&lt;/code&gt; is raised. If you wish to instead return &lt;code&gt;nil&lt;/code&gt;, use the &lt;code&gt;:allow_nil&lt;/code&gt; option.</source>
          <target state="translated">대상이 &lt;code&gt;nil&lt;/code&gt; 이고 위임 된 메소드에 응답하지 않으면 &lt;code&gt;Module::DelegationError&lt;/code&gt; 가 발생합니다. 대신 &lt;code&gt;nil&lt;/code&gt; 을 반환 하려면 &lt;code&gt;:allow_nil&lt;/code&gt; 옵션을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1341cea58990aa6ec6fe67eadd6bc5f627288f69" translate="yes" xml:space="preserve">
          <source>If the time components are missing then they will be set to zero.</source>
          <target state="translated">시간 구성 요소가 누락되면 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="cd650c33fd74b171a98018ba8a2845c23f327847" translate="yes" xml:space="preserve">
          <source>If the time or offset components are missing then an &lt;code&gt;ArgumentError&lt;/code&gt; will be raised.</source>
          <target state="translated">시간 또는 오프셋 구성 요소가 누락되면 &lt;code&gt;ArgumentError&lt;/code&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8fd81be45100cfe1b1041972b9df71468b7ff784" translate="yes" xml:space="preserve">
          <source>If the time or zone components are missing then an &lt;code&gt;ArgumentError&lt;/code&gt; will be raised. This is much stricter than either &lt;code&gt;parse&lt;/code&gt; or &lt;code&gt;iso8601&lt;/code&gt; which allow for missing components.</source>
          <target state="translated">시간 또는 영역 구성 요소가 누락되면 &lt;code&gt;ArgumentError&lt;/code&gt; 가 발생합니다. 이는 누락 된 구성 요소를 허용하는 &lt;code&gt;parse&lt;/code&gt; 또는 &lt;code&gt;iso8601&lt;/code&gt; 보다 훨씬 엄격 합니다.</target>
        </trans-unit>
        <trans-unit id="d327ab02228ea948f85e55b530b73d9d50df2b37" translate="yes" xml:space="preserve">
          <source>If the time to be constructed lies beyond the range supported by &lt;code&gt;Time&lt;/code&gt; in the runtime platform, usecs are discarded and a &lt;code&gt;DateTime&lt;/code&gt; object is returned instead.</source>
          <target state="translated">생성되는 &lt;code&gt;Time&lt;/code&gt; 이 런타임 플랫폼에서 Time 이 지원하는 범위를 벗어나면 usecs가 삭제되고 대신 &lt;code&gt;DateTime&lt;/code&gt; 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2f31e0ada6b579e9707d60c7d514881b3e20cbd4" translate="yes" xml:space="preserve">
          <source>If there are missing precompiled files in production you will get a &lt;code&gt;Sprockets::Helpers::RailsHelper::AssetPaths::AssetNotPrecompiledError&lt;/code&gt; exception indicating the name of the missing file(s).</source>
          <target state="translated">프로덕션에 사전 컴파일 된 파일이 누락 된 경우 누락 된 파일 이름을 나타내는 &lt;code&gt;Sprockets::Helpers::RailsHelper::AssetPaths::AssetNotPrecompiledError&lt;/code&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b12462da526f839a100bfa54c206f077be659392" translate="yes" xml:space="preserve">
          <source>If there is a top-level &lt;code&gt;User&lt;/code&gt; Ruby would resolve it in the former example, but wouldn't in the latter. In general, Rails does not emulate the Ruby constant resolution algorithms, but in this case it tries using the following heuristic:</source>
          <target state="translated">최상위 &lt;code&gt;User&lt;/code&gt; 가 있다면 Ruby는 이전 예제에서이를 해결하지만 후자는 그렇지 않습니다. 일반적으로 Rails는 Ruby 상수 해상도 알고리즘을 에뮬레이트하지 않지만이 경우 다음 휴리스틱을 사용하려고합니다.</target>
        </trans-unit>
        <trans-unit id="f08d0133321eed6a31d75040192b335ce2b93dcd" translate="yes" xml:space="preserve">
          <source>If there is no content type passed in via headers, and there are no attachments, or the message is multipart, then the default content type is used.</source>
          <target state="translated">헤더를 통해 전달 된 컨텐츠 유형이없고 첨부 파일이 없거나 메시지가 다중 파트 인 경우 기본 컨텐츠 유형이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="29c5fad7ca7645efa00c26cd4f224eb59d505e03" translate="yes" xml:space="preserve">
          <source>If there is no such data in the cache (a cache miss), then &lt;code&gt;nil&lt;/code&gt; will be returned. However, if a block has been passed, that block will be passed the key and executed in the event of a cache miss. The return value of the block will be written to the cache under the given cache key, and that return value will be returned.</source>
          <target state="translated">캐시에 그러한 데이터가 없으면 (캐시 ​​누락) &lt;code&gt;nil&lt;/code&gt; 이 리턴됩니다. 그러나 블록이 전달 된 경우 해당 블록은 키를 전달하여 캐시 누락시 실행됩니다. 주어진 캐시 키에 따라 블록의 반환 값이 캐시에 기록되고 그 반환 값이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="ec1aee0234ef6abeb63b383c63a6260f8166542f" translate="yes" xml:space="preserve">
          <source>If there was no &lt;code&gt;where&lt;/code&gt; condition, this would generate the normal set of two queries.</source>
          <target state="translated">&lt;code&gt;where&lt;/code&gt; 조건 이 없으면 정상적인 두 쿼리 집합이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="3e0b6b290b0565fd2d6d8cb415a39ace1f33ecd5" translate="yes" xml:space="preserve">
          <source>If there were modifications to existing migrations, the test database needs to be rebuilt. This can be done by executing &lt;code&gt;rails db:test:prepare&lt;/code&gt;.</source>
          <target state="translated">기존 마이그레이션을 수정 한 경우 테스트 데이터베이스를 다시 작성해야합니다. &lt;code&gt;rails db:test:prepare&lt;/code&gt; 를 실행하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="2befb6cbe498a4296bfc9e9392f33ebabff2d078" translate="yes" xml:space="preserve">
          <source>If there's any element that does not belong to the type of the first one the root node becomes &quot;objects&quot;:</source>
          <target state="translated">첫 번째 유형에 속하지 않는 요소가 있으면 루트 노드는 &quot;개체&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="ae8cbe2937a9e64cabe9dae6a72cc5c87fa1ad51" translate="yes" xml:space="preserve">
          <source>If this might be a problem for your application, please see &lt;a href=&quot;relation#method-i-create_or_find_by&quot;&gt;create_or_find_by&lt;/a&gt;.</source>
          <target state="translated">이것이 애플리케이션에 문제가 될 수있는 경우 &lt;a href=&quot;relation#method-i-create_or_find_by&quot;&gt;create_or_find_by&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="92eef42fc65802f45aa971181fa401349bde4477" translate="yes" xml:space="preserve">
          <source>If this read is a hit</source>
          <target state="translated">이 읽기가 히트 인 경우</target>
        </trans-unit>
        <trans-unit id="779d7e63875d0a734d38d9ed82aea5450125e800" translate="yes" xml:space="preserve">
          <source>If this were to occur in a &quot;child&quot; thread, with a waiting parent inside the Executor, it would cause an unavoidable deadlock: the reload must occur before the child thread is executed, but it cannot be safely performed while the parent thread is mid-execution. Child threads should use the Executor instead.</source>
          <target state="translated">이것이 Executor 내부에 대기중인 부모와 함께 &quot;자식&quot;스레드에서 발생하면 피할 수없는 교착 상태가 발생할 수 있습니다. 자식 스레드가 실행되기 전에 재로드가 발생해야하지만 부모 스레드가 중간에있는 동안에는 안전하게 수행 할 수 없습니다 -실행. 자식 스레드는 대신 Executor를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f5bdabf6826b8eb76b90cbab11b87d1cf2a8f726" translate="yes" xml:space="preserve">
          <source>If token Authorization header is present, call the login procedure with the present token and options.</source>
          <target state="translated">토큰 인증 헤더가 있으면 현재 토큰 및 옵션으로 로그인 절차를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="d9ffa91ea0f6817210ca1423c5c49b428fa3f646" translate="yes" xml:space="preserve">
          <source>If true, always save the associated object or destroy it if marked for destruction, when saving the parent object. If false, never save or destroy the associated object. By default, only save the associated object if it's a new record.</source>
          <target state="translated">true 인 경우, 항상 상위 오브젝트를 저장할 때 연관된 오브젝트를 저장하거나 파기 대상으로 표시되면 파기하십시오. False이면 관련 개체를 저장하거나 파괴하지 마십시오. 기본적으로 연결된 개체가 새 레코드 인 경우에만 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="89c9a382b4c07db9e2c72b0b7f7af3cb51c14197" translate="yes" xml:space="preserve">
          <source>If true, always save the associated objects or destroy them if marked for destruction, when saving the parent object. If false, never save or destroy the associated objects. By default, only save associated objects that are new records.</source>
          <target state="translated">true 인 경우 상위 오브젝트를 저장할 때 항상 연관된 오브젝트를 저장하거나 파기 표시가되어 있으면이를 파괴하십시오. False이면 관련 개체를 저장하거나 파괴하지 마십시오. 기본적으로 새 레코드 인 관련 개체 만 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="4999bac24e8ef05c6c11d8204002d682426744c4" translate="yes" xml:space="preserve">
          <source>If true, always save the associated objects or destroy them if marked for destruction, when saving the parent object. If false, never save or destroy the associated objects. By default, only save associated objects that are new records. This option is implemented as a &lt;code&gt;before_save&lt;/code&gt; callback. Because callbacks are run in the order they are defined, associated objects may need to be explicitly saved in any user-defined &lt;code&gt;before_save&lt;/code&gt; callbacks.</source>
          <target state="translated">true 인 경우 상위 오브젝트를 저장할 때 항상 연관된 오브젝트를 저장하거나 파기 표시가되어 있으면이를 파괴하십시오. 거짓 인 경우 관련 개체를 저장하거나 파괴하지 마십시오. 기본적으로 새 레코드 인 관련 개체 만 저장하십시오. 이 옵션은 &lt;code&gt;before_save&lt;/code&gt; 콜백으로 구현됩니다 . 콜백은 정의 된 순서대로 실행되므로 연결된 객체는 사용자 정의 된 &lt;code&gt;before_save&lt;/code&gt; 콜백 에 명시 적으로 저장해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f462c8b8fe311da55f00ffe0c6e4c38f2f987439" translate="yes" xml:space="preserve">
          <source>If true, destroys any members from the attributes hash with a &lt;code&gt;_destroy&lt;/code&gt; key and a value that evaluates to &lt;code&gt;true&lt;/code&gt; (eg. 1, '1', true, or 'true'). This option is off by default.</source>
          <target state="translated">true 인 경우 &lt;code&gt;_destroy&lt;/code&gt; 키와 &lt;code&gt;true&lt;/code&gt; 로 평가되는 값 (예 : 1, '1', true 또는 'true') 을 사용하여 속성 해시에서 멤버를 삭제합니다 . 이 옵션은 기본적으로 해제되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="88ac43e08613db350e4421c58174fcc52642a983" translate="yes" xml:space="preserve">
          <source>If true, the associated object will be touched (the updated_at/on attributes set to current time) when this record is either saved or destroyed. If you specify a symbol, that attribute will be updated with the current time in addition to the updated_at/on attribute. Please note that with touching no validation is performed and only the &lt;code&gt;after_touch&lt;/code&gt;, &lt;code&gt;after_commit&lt;/code&gt; and &lt;code&gt;after_rollback&lt;/code&gt; callbacks are executed.</source>
          <target state="translated">true 인 경우이 레코드가 저장되거나 소멸 될 때 연관된 오브젝트가 터치됩니다 (update_at / on 속성이 현재 시간으로 설정 됨). 기호를 지정하면 해당 속성이 updated_at / on 속성 외에 현재 시간으로 업데이트됩니다. 터치하면 유효성 검사가 수행되지 않으며 &lt;code&gt;after_touch&lt;/code&gt; , &lt;code&gt;after_commit&lt;/code&gt; 및 &lt;code&gt;after_rollback&lt;/code&gt; 콜백 만 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="4154a9d0c80dfae87f050873f17b62e301718251" translate="yes" xml:space="preserve">
          <source>If upper components are missing from the string, they are supplied from &lt;a href=&quot;timezone#method-i-now&quot;&gt;#now&lt;/a&gt;:</source>
          <target state="translated">문자열에서 상위 구성 요소가 누락 된 경우 &lt;a href=&quot;timezone#method-i-now&quot;&gt;#now&lt;/a&gt; 에서 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="aedb852884f618c299acff355e29ed67cf3d17e7" translate="yes" xml:space="preserve">
          <source>If used along with &lt;a href=&quot;associations/classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; then &lt;code&gt;touch&lt;/code&gt; will invoke &lt;code&gt;touch&lt;/code&gt; method on associated object.</source>
          <target state="translated">와 함께 사용하면 &lt;a href=&quot;associations/classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; 다음 &lt;code&gt;touch&lt;/code&gt; 호출합니다 &lt;code&gt;touch&lt;/code&gt; 관련 개체에 대한 방법을.</target>
        </trans-unit>
        <trans-unit id="3bbc81c8d45b82313578ca7a5d017889c879ca0e" translate="yes" xml:space="preserve">
          <source>If using &lt;code&gt;dependent: :destroy&lt;/code&gt; on a scoped association, only the scoped objects are destroyed. For example, if a Post model defines &lt;code&gt;has_many :comments, -&amp;gt; { where published: true }, dependent:
:destroy&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt; is called on a post, only published comments are destroyed. This means that any unpublished comments in the database would still contain a foreign key pointing to the now deleted post.</source>
          <target state="translated">사용하는 경우 &lt;code&gt;dependent: :destroy&lt;/code&gt; 범위가 지정된 연결에 만 범위가 지정된 개체가 파괴된다. 예를 들어, Post 모델이 &lt;code&gt;has_many :comments, -&amp;gt; { where published: true }, dependent: :destroy&lt;/code&gt; 정의 하면-&amp;gt; {여기서 게시 : true}, 종속 : : destroy 및 &lt;code&gt;destroy&lt;/code&gt; 가 게시물에서 호출되면 게시 된 주석 만 삭제됩니다. 즉, 데이터베이스에서 게시되지 않은 주석에는 여전히 삭제 된 게시물을 가리키는 외래 키가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="2be716d9453b3a79ec747fc74867e1b0c279c0d3" translate="yes" xml:space="preserve">
          <source>If using the turbolinks gem, which is included by default in Rails, then include the 'data-turbolinks-track' option which causes turbolinks to check if an asset has been updated and if so loads it into the page:</source>
          <target state="translated">Rails에 기본적으로 포함 된 turbolinks gem을 사용하는 경우 'data-turbolinks-track'옵션을 포함 시켜서 터보 링크가 자산이 업데이트되었는지 확인하고 페이지에로드되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="fb0a73e90b844472bfc939a9b22d66e18947d21f" translate="yes" xml:space="preserve">
          <source>If using with the &lt;code&gt;:through&lt;/code&gt; option, the association on the join model must be a &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;, and the records which get deleted are the join records, rather than the associated records.</source>
          <target state="translated">&lt;code&gt;:through&lt;/code&gt; 옵션 과 함께 사용하는 경우 결합 모델의 연관은 &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; 이어야하며, 삭제 된 레코드는 연관된 레코드가 아닌 결합 레코드입니다.</target>
        </trans-unit>
        <trans-unit id="3dd0cac50b2d9cd0e3e44abe4b065c72b4944d6e" translate="yes" xml:space="preserve">
          <source>If validations for any of the associations fail, their error messages will be applied to the parent.</source>
          <target state="translated">연관에 대한 유효성 검증에 실패하면 해당 오류 메시지가 상위에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="543108e30c8b440e0cb583fcb7471bb46446f4b2" translate="yes" xml:space="preserve">
          <source>If version 20080906120000 is greater than the current version (i.e., it is migrating upwards), this will run the &lt;code&gt;change&lt;/code&gt; (or &lt;code&gt;up&lt;/code&gt;) method on all migrations up to and including 20080906120000, and will not execute any later migrations. If migrating downwards, this will run the &lt;code&gt;down&lt;/code&gt; method on all the migrations down to, but not including, 20080906120000.</source>
          <target state="translated">20080906120000 버전이 현재 버전보다 큰 경우 (즉, 위로 마이그레이션하는 경우) 20080906120000 이하의 모든 마이그레이션 에서 &lt;code&gt;change&lt;/code&gt; (또는 &lt;code&gt;up&lt;/code&gt; ) 메소드를 실행하고 이후 마이그레이션을 실행하지 않습니다. 아래쪽으로 마이그레이션하는 경우 20080906120000 (포함하지 않음)까지의 모든 마이그레이션에서 작동 &lt;code&gt;down&lt;/code&gt; 방법 이 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="a2e0ee4200fcf18cc6d37156067231d5594e1f5e" translate="yes" xml:space="preserve">
          <source>If we do want the last &lt;code&gt;where&lt;/code&gt; clause to win then &lt;code&gt;Relation#merge&lt;/code&gt; can be used.</source>
          <target state="translated">마지막 &lt;code&gt;where&lt;/code&gt; 절을 원하면 &lt;code&gt;Relation#merge&lt;/code&gt; 를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f43e231b6bc907e26cf6b5598eacd414077c315" translate="yes" xml:space="preserve">
          <source>If we first move the date bits (that have also a relative order of processing, as documented before), and then the time bits we get for example the following computation:</source>
          <target state="translated">먼저 날짜 비트 (이전에 설명한대로 처리 순서도 상대적 임)를 이동하면 시간 비트는 예를 들어 다음 계산을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="02af99c414871a00c8ae1205585a5747e610da1a" translate="yes" xml:space="preserve">
          <source>If we generate another resource with the scaffold generator, we can see that stylesheet, JavaScript, and fixture files are not created anymore. If you want to customize it further, for example to use DataMapper and RSpec instead of Active Record and TestUnit, it's just a matter of adding their gems to your application and configuring your generators.</source>
          <target state="translated">스캐 폴드 생성기로 다른 리소스를 생성하면 더 이상 스타일 시트, JavaScript 및 픽스처 파일이 생성되지 않습니다. 예를 들어 Active Record 및 TestUnit 대신 DataMapper 및 RSpec을 사용하도록 추가로 사용자 정의하려면 보석을 애플리케이션에 추가하고 생성기를 구성하면됩니다.</target>
        </trans-unit>
        <trans-unit id="4faf16a98d4b3560efdab12b3eabe68bfb3186b2" translate="yes" xml:space="preserve">
          <source>If we had used &lt;code&gt;s&lt;/code&gt; rather than &lt;code&gt;server&lt;/code&gt;, Rails would have used the &lt;code&gt;aliases&lt;/code&gt; defined here to find the matching command.</source>
          <target state="translated">우리가 사용했다면 &lt;code&gt;s&lt;/code&gt; 보다는 &lt;code&gt;server&lt;/code&gt; , 레일이 사용했을 &lt;code&gt;aliases&lt;/code&gt; 일치하는 명령을 보려면 여기를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="a530f74e1ed369f642d017a02b1b67eb922f375f" translate="yes" xml:space="preserve">
          <source>If we need to modify the session, or state of our integration test, take a look at &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Integration/Session.html&quot;&gt;&lt;code&gt;ActionDispatch::Integration::Session&lt;/code&gt;&lt;/a&gt; to help.</source>
          <target state="translated">세션 또는 통합 테스트 상태를 수정해야하는 경우 &lt;a href=&quot;https://edgeapi.rubyonrails.org/classes/ActionDispatch/Integration/Session.html&quot;&gt; &lt;code&gt;ActionDispatch::Integration::Session&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="104a55412bd4226897d8dddfe06317d78aaf62b2" translate="yes" xml:space="preserve">
          <source>If we run our test now, we should see a failure:</source>
          <target state="translated">지금 테스트를 실행하면 실패가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="939ee926da74ef6d519dfb921a6839b94c2911a6" translate="yes" xml:space="preserve">
          <source>If we use &lt;code&gt;next&lt;/code&gt;, we won't go deep inside method calls. Instead, &lt;code&gt;byebug&lt;/code&gt; will go to the next line within the same context. In this case, it is the last line of the current method, so &lt;code&gt;byebug&lt;/code&gt; will return to the next line of the caller method.</source>
          <target state="translated">&lt;code&gt;next&lt;/code&gt; 를 사용하면 메소드 호출에 깊이 들어 가지 않습니다. 대신, &lt;code&gt;byebug&lt;/code&gt; 는 동일한 컨텍스트 내에서 다음 줄로 이동합니다. 이 경우 현재 메소드의 마지막 행이므로 &lt;code&gt;byebug&lt;/code&gt; 는 호출자 메소드의 다음 행으로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="95f435da6da7f183d3289367776b54193bfb86b0" translate="yes" xml:space="preserve">
          <source>If we use &lt;code&gt;step&lt;/code&gt; in the same situation, &lt;code&gt;byebug&lt;/code&gt; will literally go to the next Ruby instruction to be executed -- in this case, Active Support's &lt;code&gt;week&lt;/code&gt; method.</source>
          <target state="translated">동일한 상황에서 &lt;code&gt;step&lt;/code&gt; 를 사용하면 &lt;code&gt;byebug&lt;/code&gt; 는 문자 그대로 다음 Ruby 명령 (이 경우 Active Support의 &lt;code&gt;week&lt;/code&gt; 방법)으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="0746074725c0e86bb7fbcdf389341bef1fd8cae9" translate="yes" xml:space="preserve">
          <source>If we want this test to pass we can modify it to use &lt;code&gt;assert_raises&lt;/code&gt; like so:</source>
          <target state="translated">이 테스트를 통과하려면 &lt;code&gt;assert_raises&lt;/code&gt; 를 사용 하도록 다음과 같이 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="92798615c4394ee7d59ffecd1d92d98fe8a44600" translate="yes" xml:space="preserve">
          <source>If we want to avoid generating the default &lt;code&gt;app/assets/stylesheets/scaffolds.scss&lt;/code&gt; file when scaffolding a new resource we can disable &lt;code&gt;scaffold_stylesheet&lt;/code&gt;:</source>
          <target state="translated">우리는 기본 발생하지 않도록하려면 &lt;code&gt;app/assets/stylesheets/scaffolds.scss&lt;/code&gt; 우리가 비활성화 할 수있는 새로운 자원 비계 때 파일을 &lt;code&gt;scaffold_stylesheet&lt;/code&gt; 을 :</target>
        </trans-unit>
        <trans-unit id="af8a9da597aa42d9338787c4b4baad8e0a4f18bd" translate="yes" xml:space="preserve">
          <source>If we want to display the properties of all the books in our view, we can do so with an ERB template like this:</source>
          <target state="translated">모든 책의 속성을보기에 표시하려면 다음과 같이 ERB 템플릿을 사용하면됩니다.</target>
        </trans-unit>
        <trans-unit id="5a2be59b4f2e5686e405865f59e6263a2f5b76a8" translate="yes" xml:space="preserve">
          <source>If we wanted to return the lyrics in Karaoke fashion (only sending the line when the singer has finished the previous line), then we could use &lt;code&gt;ActionController::Live&lt;/code&gt; as follows:</source>
          <target state="translated">가라오케 방식으로 가사를 반환하려면 (가수가 이전 라인을 완료했을 때만 라인을 전송) &lt;code&gt;ActionController::Live&lt;/code&gt; 를 다음과 같이 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f0a5ccbc2508e5d171397886b1cf68993fe3933" translate="yes" xml:space="preserve">
          <source>If we wish for a scope to be applied across all queries to the model we can use the &lt;code&gt;default_scope&lt;/code&gt; method within the model itself.</source>
          <target state="translated">범위를 모든 쿼리에서 모델에 적용 하려면 모델 자체 에서 &lt;code&gt;default_scope&lt;/code&gt; 메서드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5420eebfa0a74bb6f2156a405c4fd62f87bcdde2" translate="yes" xml:space="preserve">
          <source>If we wish to remove scoping for any reason we can use the &lt;code&gt;unscoped&lt;/code&gt; method. This is especially useful if a &lt;code&gt;default_scope&lt;/code&gt; is specified in the model and should not be applied for this particular query.</source>
          <target state="translated">어떤 이유로 든 범위 지정을 제거하려면 &lt;code&gt;unscoped&lt;/code&gt; 방법을 사용할 수 있습니다 . 모델에 &lt;code&gt;default_scope&lt;/code&gt; 가 지정되어 있고이 특정 쿼리에 적용해서는 안되는 경우에 특히 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="ef55b2a0c1de051b5062301dc4cd03a33a96b0c5" translate="yes" xml:space="preserve">
          <source>If we're adding a &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; of variable length (i.e., years, months, days), move forward from &lt;a href=&quot;timewithzone#method-i-time&quot;&gt;time&lt;/a&gt;, otherwise move forward from &lt;a href=&quot;timewithzone#method-i-utc&quot;&gt;utc&lt;/a&gt;, for accuracy when moving across DST boundaries.</source>
          <target state="translated">가변 길이 &lt;a href=&quot;duration&quot;&gt;기간&lt;/a&gt; (예 : 년, 월, 일)을 추가하는 경우 DST 경계를 가로 질러 이동할 때 정확성을 위해 &lt;a href=&quot;timewithzone#method-i-time&quot;&gt;시간&lt;/a&gt; 에서 앞으로 이동하거나 그렇지 않으면 &lt;a href=&quot;timewithzone#method-i-utc&quot;&gt;utc&lt;/a&gt; 에서 앞으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="09802582f697f26db471e95f53a1dfb8b3de7103" translate="yes" xml:space="preserve">
          <source>If we're subtracting a &lt;a href=&quot;duration&quot;&gt;Duration&lt;/a&gt; of variable length (i.e., years, months, days), move backward from &lt;a href=&quot;timewithzone#method-i-time&quot;&gt;time&lt;/a&gt;, otherwise move backward from &lt;a href=&quot;timewithzone#method-i-utc&quot;&gt;utc&lt;/a&gt;, for accuracy when moving across DST boundaries.</source>
          <target state="translated">가변 길이 &lt;a href=&quot;duration&quot;&gt;기간&lt;/a&gt; (예 : 년, 월, 일)을 빼면 DST 경계를 이동할 때 정확도를 위해 &lt;a href=&quot;timewithzone#method-i-time&quot;&gt;시간&lt;/a&gt; 에서 뒤로 이동하거나 그렇지 않으면 &lt;a href=&quot;timewithzone#method-i-utc&quot;&gt;utc&lt;/a&gt; 에서 뒤로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="55b8adaf479fc1ab31cf1abb330ec40c82c3ed06" translate="yes" xml:space="preserve">
          <source>If you absolutely must write from within a function use &lt;code&gt;concat&lt;/code&gt;.</source>
          <target state="translated">함수 내에서 쓰지 않으면 &lt;code&gt;concat&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="65fe0c0873bdf82b9973d613977aa3666e17465f" translate="yes" xml:space="preserve">
          <source>If you add an &lt;code&gt;erb&lt;/code&gt; extension to a JavaScript asset, making it something such as &lt;code&gt;application.js.erb&lt;/code&gt;, you can then use the &lt;code&gt;asset_path&lt;/code&gt; helper in your JavaScript code:</source>
          <target state="translated">JavaScript 자산에 &lt;code&gt;erb&lt;/code&gt; 확장자를 추가하여 &lt;code&gt;application.js.erb&lt;/code&gt; 와 같은 것으로 &lt;code&gt;asset_path&lt;/code&gt; JavaScript 코드에서 asset_path 헬퍼 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0a35fa35a429e820134c379131de760313f6bad8" translate="yes" xml:space="preserve">
          <source>If you already have a controller and just want to generate the test scaffold code for each of the seven default actions, you can use the following command:</source>
          <target state="translated">이미 컨트롤러가 있고 7 개의 기본 조치 각각에 대해 테스트 스캐 폴드 코드를 생성하려는 경우 다음 명령을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d303bd6d004a0ab40503609b954a1d2486a0cbaf" translate="yes" xml:space="preserve">
          <source>If you already have an instance of your model, you can start a transaction and acquire the lock in one go using the following code:</source>
          <target state="translated">이미 모델 인스턴스가있는 경우 다음 코드를 사용하여 트랜잭션을 시작하고 한 번에 잠금을 획득 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3b8344ca3c4728a16db43a1e613c8c3ea6a3722" translate="yes" xml:space="preserve">
          <source>If you append onto a safe string, either in-place with &lt;code&gt;concat&lt;/code&gt;/&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;, or with &lt;code&gt;+&lt;/code&gt;, the result is a safe string. Unsafe arguments are escaped:</source>
          <target state="translated">&lt;code&gt;concat&lt;/code&gt; / &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; 대신 또는 &lt;code&gt;+&lt;/code&gt; 를 사용하여 안전한 문자열을 추가 하면 결과는 안전한 문자열입니다. 안전하지 않은 인수는 이스케이프됩니다.</target>
        </trans-unit>
        <trans-unit id="3445f24e94507a148405085662e19af18e903896" translate="yes" xml:space="preserve">
          <source>If you are deploying a production application to a system without any pre-existing JavaScript runtimes, you may want to add one to your &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">기존 JavaScript 런타임이없는 시스템에 프로덕션 응용 프로그램을 배포하는 경우 &lt;code&gt;Gemfile&lt;/code&gt; 에 응용 프로그램을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cf48043c78446b99049e03f489aaa37030307995" translate="yes" xml:space="preserve">
          <source>If you are going to modify the association (rather than just read from it), then it is a good idea to set the &lt;code&gt;:inverse_of&lt;/code&gt; option on the source association on the join model. This allows associated records to be built which will automatically create the appropriate join model records when they are saved. (See the 'Association Join Models' section above.)</source>
          <target state="translated">연결을 읽지 않고 연결을 수정하려는 경우 조인 모델의 소스 연결에서 &lt;code&gt;:inverse_of&lt;/code&gt; 옵션 을 설정하는 것이 좋습니다 . 이를 통해 연관된 레코드를 빌드 할 수 있으며,이를 통해 적절한 결합 모델 레코드가 저장 될 때 자동으로 작성됩니다. (위의 'Association Join Models'섹션을 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="719155ba2374a2ea4bfe28fa2148b6c9495794ac" translate="yes" xml:space="preserve">
          <source>If you are going to modify the association (rather than just read from it), then it is a good idea to set the &lt;code&gt;:inverse_of&lt;/code&gt; option.</source>
          <target state="translated">연결을 읽지 않고 연결을 수정하려는 경우 &lt;code&gt;:inverse_of&lt;/code&gt; 옵션 을 설정하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="5906118d2ea5faab8fb5405dd3c648625dee0d06" translate="yes" xml:space="preserve">
          <source>If you are looking for the ones for the stable version, please check &lt;a href=&quot;https://guides.rubyonrails.org&quot;&gt;https://guides.rubyonrails.org&lt;/a&gt; instead.</source>
          <target state="translated">안정된 버전을 찾고 있다면 &lt;a href=&quot;https://guides.rubyonrails.org&quot;&gt;https://guides.rubyonrails.org&lt;/a&gt; 를 확인 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac3687d94c3e8d25f05465acfb7a81cc1a03c981" translate="yes" xml:space="preserve">
          <source>If you are not using Protected Attributes, you can remove any options related to this gem such as &lt;code&gt;whitelist_attributes&lt;/code&gt; or &lt;code&gt;mass_assignment_sanitizer&lt;/code&gt; options.</source>
          <target state="translated">보호 된 속성을 사용하지 않는 경우 &lt;code&gt;whitelist_attributes&lt;/code&gt; 또는 &lt;code&gt;mass_assignment_sanitizer&lt;/code&gt; 옵션 과 같이이 gem과 관련된 옵션을 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ae505b17f8cc0dcec8e6f7865a4661d2baca773" translate="yes" xml:space="preserve">
          <source>If you are organising your models within modules you can add a prefix to the models within a namespace by defining a singleton method in the parent module called &lt;a href=&quot;modelschema#method-c-table_name_prefix&quot;&gt;::table_name_prefix&lt;/a&gt; which returns your chosen prefix.</source>
          <target state="translated">모듈 내에서 모델을 구성하는 경우 선택한 접두사를 반환하는 &lt;a href=&quot;modelschema#method-c-table_name_prefix&quot;&gt;:: table_name_prefix&lt;/a&gt; 라는 상위 모듈에서 단일 메서드를 정의하여 네임 스페이스 내의 모델에 접두사를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="24bc7a57543f4858b11cbddc28afcc28102c22b4" translate="yes" xml:space="preserve">
          <source>If you are organising your models within modules, you can add a suffix to the models within a namespace by defining a singleton method in the parent module called &lt;a href=&quot;modelschema#method-c-table_name_suffix&quot;&gt;::table_name_suffix&lt;/a&gt; which returns your chosen suffix.</source>
          <target state="translated">모듈 내에서 모델을 구성하는 경우 선택한 접미사를 반환하는 &lt;a href=&quot;modelschema#method-c-table_name_suffix&quot;&gt;:: table_name_suffix&lt;/a&gt; 라는 상위 모듈에서 단일 메서드를 정의하여 네임 스페이스 내의 모델에 접미사를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c444436a99f12549c65632f918ac52902d000bd1" translate="yes" xml:space="preserve">
          <source>If you are relying on the ability for external applications or JavaScript to be able to read your Rails app's signed session cookies (or signed cookies in general) you should not set &lt;code&gt;secret_key_base&lt;/code&gt; until you have decoupled these concerns.</source>
          <target state="translated">외부 애플리케이션 또는 JavaScript가 Rails 앱의 서명 된 세션 쿠키 (또는 일반적으로 서명 된 쿠키)를 읽을 수있는 기능에 의존하는 경우 이러한 문제를 분리 할 때까지 &lt;code&gt;secret_key_base&lt;/code&gt; 를 설정하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="445ba00a4943e638d1665dea98dccf8577df2d3c" translate="yes" xml:space="preserve">
          <source>If you are running in a multi-threaded environment, there could be a chance that several threads may be accessing multiple connections simultaneously. So depending on your current request load, you could very well have multiple threads contending for a limited number of connections.</source>
          <target state="translated">다중 스레드 환경에서 실행중인 경우 여러 스레드가 동시에 여러 연결에 액세스 할 수 있습니다. 따라서 현재 요청로드에 따라 제한된 수의 연결에 대해 여러 개의 스레드가 경합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ee2384fc6362c046b42ceef3940761a2bd5217d" translate="yes" xml:space="preserve">
          <source>If you are upgrading an existing application and intend to use this option, take care to paste this configuration option only into &lt;code&gt;production.rb&lt;/code&gt; and any other environments you define with production behavior (not &lt;code&gt;application.rb&lt;/code&gt;).</source>
          <target state="translated">기존 애플리케이션을 업그레이드하고이 옵션을 사용하려는 경우이 구성 옵션을 &lt;code&gt;production.rb&lt;/code&gt; 및 프로덕션 동작으로 정의한 다른 환경 ( &lt;code&gt;application.rb&lt;/code&gt; 아님) 에만 붙여 넣으십시오 .</target>
        </trans-unit>
        <trans-unit id="a63db430ab272473aa36c824b5192bdac03ea9f2" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;ActionDispatch::Http::UploadedFile&lt;/code&gt; in your tests to upload files, you will need to change to use the similar &lt;code&gt;Rack::Test::UploadedFile&lt;/code&gt; class instead.</source>
          <target state="translated">당신이 사용하는 경우 &lt;code&gt;ActionDispatch::Http::UploadedFile&lt;/code&gt; 파일을 업로드하여 테스트에서, 당신은 유사한 사용하도록 변경해야합니다 &lt;code&gt;Rack::Test::UploadedFile&lt;/code&gt; 대신 클래스를.</target>
        </trans-unit>
        <trans-unit id="72dc49f2cbfcdc5155eea779cf985e4abf789994" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;javascript_include_tag&lt;/code&gt; or &lt;code&gt;stylesheet_link_tag&lt;/code&gt; the Early Hints headers are included by default if supported.</source>
          <target state="translated">당신이 사용하는 경우 &lt;code&gt;javascript_include_tag&lt;/code&gt; 을 하거나 &lt;code&gt;stylesheet_link_tag&lt;/code&gt; 초기 힌트를 지원하는 경우 헤더가 기본적으로 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="53c8d92a86735b1e60759959c24826b66455fe3d" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;select&lt;/code&gt; or similar helpers to set a &lt;code&gt;belongs_to&lt;/code&gt; association you must pass the name of the foreign key (in the example above &lt;code&gt;city_id&lt;/code&gt;), not the name of association itself.</source>
          <target state="translated">당신이 사용하는 경우 &lt;code&gt;select&lt;/code&gt; 세트에 또는 유사한 도우미를 &lt;code&gt;belongs_to&lt;/code&gt; 의 연결을 당신은 (위의 예에서는 외부 키의 이름을 통과해야 &lt;code&gt;city_id&lt;/code&gt; ) 협회 자체의 이름이 아닌.</target>
        </trans-unit>
        <trans-unit id="fa85f958859a6abeb3d6ad69de134af0df11a850" translate="yes" xml:space="preserve">
          <source>If you are using Active Storage outside of a Ruby on Rails application, you can configure the service to use like this:</source>
          <target state="translated">Ruby on Rails 애플리케이션 외부에서 Active Storage를 사용하는 경우 다음과 같이 사용하도록 서비스를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d855c89c5bc04f50b3349c55cba09c1b1c6f89f" translate="yes" xml:space="preserve">
          <source>If you are using Rails with the &quot;Asset Pipeline&quot; enabled, this helper will generate a link to &lt;code&gt;/assets/stylesheets/&lt;/code&gt;. This link is then processed by the Sprockets gem. A stylesheet file can be stored in one of three locations: &lt;code&gt;app/assets&lt;/code&gt;, &lt;code&gt;lib/assets&lt;/code&gt; or &lt;code&gt;vendor/assets&lt;/code&gt;.</source>
          <target state="translated">&quot;자산 파이프 라인&quot;이 활성화 된 상태에서 Rails를 사용하는 경우이 도우미는 &lt;code&gt;/assets/stylesheets/&lt;/code&gt; 대한 링크를 생성합니다 . 이 링크는 Sprockets gem에 의해 처리됩니다. 스타일 시트 파일은 &lt;code&gt;app/assets&lt;/code&gt; , &lt;code&gt;lib/assets&lt;/code&gt; 또는 &lt;code&gt;vendor/assets&lt;/code&gt; 의 세 위치 중 하나에 저장 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fa8f14096b9fcc66f71efbcc533449b98681ddd6" translate="yes" xml:space="preserve">
          <source>If you are using Rails with the &lt;a href=&quot;asset_pipeline&quot;&gt;Asset Pipeline&lt;/a&gt; enabled, this helper will generate a link to &lt;code&gt;/assets/javascripts/&lt;/code&gt; rather than &lt;code&gt;public/javascripts&lt;/code&gt; which was used in earlier versions of Rails. This link is then served by the asset pipeline.</source>
          <target state="translated">&lt;a href=&quot;asset_pipeline&quot;&gt;Asset Pipeline이&lt;/a&gt; 활성화 된 상태에서 Rails를 사용하는 경우이 도우미는 이전 버전의 Rails에서 사용 된 &lt;code&gt;public/javascripts&lt;/code&gt; 대신 &lt;code&gt;/assets/javascripts/&lt;/code&gt; 대한 링크를 생성합니다 . 그런 다음이 링크는 자산 파이프 라인에서 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="ec9690ee2ac915bcbc7cb63da012b1ea915393f8" translate="yes" xml:space="preserve">
          <source>If you are using Rspec for testing, please see the extra configuration required in the gem's documentation.</source>
          <target state="translated">테스트에 Rspec을 사용하는 경우 gem 설명서에 필요한 추가 구성을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7c5b6f9a0a7edbc51fd4880fd9907fe4056841e2" translate="yes" xml:space="preserve">
          <source>If you are using Unicorn with NGINX, you may need to tweak NGINX. &lt;a href=&quot;streaming&quot;&gt;Streaming&lt;/a&gt; should work out of the box on Rainbows.</source>
          <target state="translated">NGINX와 함께 Unicorn을 사용하는 경우 NGINX를 조정해야 할 수도 있습니다. 레인보우에서는 &lt;a href=&quot;streaming&quot;&gt;스트리밍&lt;/a&gt; 이 즉시 작동합니다.</target>
        </trans-unit>
        <trans-unit id="318773fc02cca8479417121d2b442593a6935389" translate="yes" xml:space="preserve">
          <source>If you are using Windows, you have to pass the scripts under the &lt;code&gt;bin&lt;/code&gt; folder directly to the Ruby interpreter e.g. &lt;code&gt;ruby bin\rails server&lt;/code&gt;.</source>
          <target state="translated">Windows를 사용하는 경우 &lt;code&gt;bin&lt;/code&gt; 폴더 아래의 스크립트를 Ruby 인터프리터 (예 : &lt;code&gt;ruby bin\rails server&lt;/code&gt; 직접 전달해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="848b3c95570a4ceb64002b67a8e2c2f5cf74294b" translate="yes" xml:space="preserve">
          <source>If you are using XHR requests other than GET or POST and redirecting after the request then some browsers will follow the redirect using the original request method. This may lead to undesirable behavior such as a double DELETE. To work around this you can return a &lt;code&gt;303 See Other&lt;/code&gt; status code which will be followed using a GET request.</source>
          <target state="translated">GET 또는 POST 이외의 XHR 요청을 사용하고 요청 후 리디렉션하는 경우 일부 브라우저는 원래 요청 방법을 사용하여 리디렉션을 따릅니다. 이로 인해 double DELETE와 같은 바람직하지 않은 동작이 발생할 수 있습니다. 이 문제를 해결하려면 GET 요청을 사용하여 &lt;code&gt;303 See Other&lt;/code&gt; 상태 코드를 반환하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="2bb1c8f0adc6687ed1d5b0341d7c7679de805e12" translate="yes" xml:space="preserve">
          <source>If you are using a &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; on the join model, it is a good idea to set the &lt;code&gt;:inverse_of&lt;/code&gt; option on the &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt;, which will mean that the following example works correctly (where &lt;code&gt;tags&lt;/code&gt; is a &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many&lt;/a&gt;&lt;code&gt;:through&lt;/code&gt; association):</source>
          <target state="translated">당신이 사용하는 경우 &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; 조인 모델을, 그것을 설정하는 좋은 아이디어입니다 &lt;code&gt;:inverse_of&lt;/code&gt; 온 옵션 &lt;a href=&quot;classmethods#method-i-belongs_to&quot;&gt;belongs_to&lt;/a&gt; , 다음의 예 (여기서 제대로 작동한다는 것을 의미 할 &lt;code&gt;tags&lt;/code&gt; A는 &lt;a href=&quot;classmethods#method-i-has_many&quot;&gt;has_many가 &lt;/a&gt; &lt;code&gt;:through&lt;/code&gt; 협회) :</target>
        </trans-unit>
        <trans-unit id="7cc78d6b1a494dd210f46e6aefce51db6b893bba" translate="yes" xml:space="preserve">
          <source>If you are using a class which includes &lt;code&gt;ActiveModel&lt;/code&gt; and does not inherit from &lt;code&gt;ActiveRecord::Base&lt;/code&gt;, replace &lt;code&gt;activerecord&lt;/code&gt; with &lt;code&gt;activemodel&lt;/code&gt; in the above key paths.</source>
          <target state="translated">&lt;code&gt;ActiveModel&lt;/code&gt; 을 포함 하고 &lt;code&gt;ActiveRecord::Base&lt;/code&gt; 에서 상속되지 않는 클래스를 사용하는 경우 위의 키 경로에서 &lt;code&gt;activerecord&lt;/code&gt; 를 &lt;code&gt;activemodel&lt;/code&gt; 로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="bf37ebbd77567b8ae2ca710572d0e6dd5585255b" translate="yes" xml:space="preserve">
          <source>If you are using a mounted engine and you need to use a &lt;a href=&quot;polymorphicroutes#method-i-polymorphic_url&quot;&gt;#polymorphic_url&lt;/a&gt; pointing at the engine's routes, pass in the engine's route proxy as the first argument to the method. For example:</source>
          <target state="translated">탑재 된 엔진을 사용하고 있고 엔진 경로를 가리키는 &lt;a href=&quot;polymorphicroutes#method-i-polymorphic_url&quot;&gt;#polymorphic_url&lt;/a&gt; 을 사용해야하는 경우 엔진의 경로 프록시를 메서드의 첫 번째 인수로 전달하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="824be7066fd07ff4b7513d8b9c7ffbf4d1fc52e7" translate="yes" xml:space="preserve">
          <source>If you are using sprockets-rails &amp;gt;= 3.2.0 you can configure what happens when an asset lookup is performed and nothing is found. If you turn off &quot;asset fallback&quot; then an error will be raised when an asset cannot be found.</source>
          <target state="translated">스프로킷 레일&amp;gt; = 3.2.0을 사용하는 경우 자산 조회가 수행되고 아무것도 발견되지 않을 때 발생하는 동작을 구성 할 수 있습니다. &quot;자산 대체&quot;를 끄면 자산을 찾을 수 없을 때 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fe8682ff6be8c529dfca78f20920f20f2603b75b" translate="yes" xml:space="preserve">
          <source>If you are using the Active Record &lt;code&gt;error_messages_for&lt;/code&gt; helper, you will want to add translations for it.</source>
          <target state="translated">헬퍼에 대해 Active Record &lt;code&gt;error_messages_for&lt;/code&gt; 도우미를 사용하는 경우 번역을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94c7bd4b114c94e8cba42f0dd2b70a28a0d45b63" translate="yes" xml:space="preserve">
          <source>If you are working on Windows, you should also install the &lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby Installer Development Kit&lt;/a&gt;.</source>
          <target state="translated">Windows에서 작업중인 경우 &lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby Installer Development Kit&lt;/a&gt; 도 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="82d6c14b367a755a8abca658062236b8112b0eae" translate="yes" xml:space="preserve">
          <source>If you are working with associations, you can define a reference node between two different fixtures. Here's an example with a &lt;code&gt;belongs_to&lt;/code&gt;/&lt;code&gt;has_many&lt;/code&gt; association:</source>
          <target state="translated">연관 작업을하는 경우 두 개의 다른 조명기 사이에 참조 노드를 정의 할 수 있습니다. 다음은 &lt;code&gt;belongs_to&lt;/code&gt; / &lt;code&gt;has_many&lt;/code&gt; 연관 예제입니다 :</target>
        </trans-unit>
        <trans-unit id="1b5c7b979633e33c18dc9c3674c9fbfbd431d6fd" translate="yes" xml:space="preserve">
          <source>If you attempt to assign an object to an association that doesn't match the inferred or specified &lt;code&gt;:class_name&lt;/code&gt;, you'll get an &lt;a href=&quot;../associationtypemismatch&quot;&gt;ActiveRecord::AssociationTypeMismatch&lt;/a&gt;.</source>
          <target state="translated">유추되거나 지정된 &lt;code&gt;:class_name&lt;/code&gt; 과 일치하지 않는 연결에 개체를 할당하려고 하면 &lt;a href=&quot;../associationtypemismatch&quot;&gt;ActiveRecord :: AssociationTypeMismatch가 나타납니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1716ebfdb98a2dc3522589b8a6d128bcf1f6652d" translate="yes" xml:space="preserve">
          <source>If you call a complicated SQL query which spans multiple tables, the columns specified by the SELECT will be attributes of the model, whether or not they are columns of the corresponding table.</source>
          <target state="translated">여러 테이블에 걸쳐있는 복잡한 SQL 쿼리를 호출하면 SELECT에 의해 지정된 열은 해당 테이블의 열인지 여부에 관계없이 모델의 특성이됩니다.</target>
        </trans-unit>
        <trans-unit id="84afb5a36589a24ecac431de995b3b981d173190" translate="yes" xml:space="preserve">
          <source>If you change something in &lt;code&gt;app/views/user_mailer/welcome_email.html.erb&lt;/code&gt; or the mailer itself, it'll automatically reload and render it so you can visually see the new style instantly. A list of previews are also available in http://localhost:3000/rails/mailers.</source>
          <target state="translated">&lt;code&gt;app/views/user_mailer/welcome_email.html.erb&lt;/code&gt; 또는 메일러 자체 에서 무언가를 변경하면 자동으로 다시로드되어 렌더링되어 새로운 스타일을 즉시 볼 수 있습니다. 미리보기 목록은 http : // localhost : 3000 / rails / mailers에서도 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8f53ef810742e70f9f22bf8f58bbd53ba912c1a" translate="yes" xml:space="preserve">
          <source>If you choose to use MySQL or MariaDB and are using JRuby, your &lt;code&gt;config/database.yml&lt;/code&gt; will look a little different. Here's the development section:</source>
          <target state="translated">MySQL 또는 MariaDB를 사용하기로 선택하고 JRuby를 사용하는 경우 &lt;code&gt;config/database.yml&lt;/code&gt; 은 약간 다르게 보입니다. 개발 섹션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6ac4965c5c2bcdbace1d350b6434395c8bcdc4b0" translate="yes" xml:space="preserve">
          <source>If you choose to use MySQL or MariaDB instead of the shipped SQLite3 database, your &lt;code&gt;config/database.yml&lt;/code&gt; will look a little different. Here's the development section:</source>
          <target state="translated">제공된 SQLite3 데이터베이스 대신 MySQL 또는 MariaDB를 사용하도록 선택하면 &lt;code&gt;config/database.yml&lt;/code&gt; 이 약간 다르게 보입니다. 개발 섹션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6f7d8c8274aa60697c0af1f26c580b450283e98d" translate="yes" xml:space="preserve">
          <source>If you choose to use PostgreSQL and are using JRuby, your &lt;code&gt;config/database.yml&lt;/code&gt; will look a little different. Here's the development section:</source>
          <target state="translated">PostgreSQL을 사용하도록 선택하고 JRuby를 사용하는 경우 &lt;code&gt;config/database.yml&lt;/code&gt; 은 약간 다르게 보입니다. 개발 섹션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="43b20a94adbe08681d270229c651279ddce8957a" translate="yes" xml:space="preserve">
          <source>If you choose to use PostgreSQL, your &lt;code&gt;config/database.yml&lt;/code&gt; will be customized to use PostgreSQL databases:</source>
          <target state="translated">PostgreSQL을 사용하기로 선택한 경우 &lt;code&gt;config/database.yml&lt;/code&gt; 은 PostgreSQL 데이터베이스를 사용하도록 사용자 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="15efb588240d99fb36e3d462566f38deaf9dcbc9" translate="yes" xml:space="preserve">
          <source>If you choose to use SQLite3 and are using JRuby, your &lt;code&gt;config/database.yml&lt;/code&gt; will look a little different. Here's the development section:</source>
          <target state="translated">SQLite3를 사용하도록 선택하고 JRuby를 사용하는 경우 &lt;code&gt;config/database.yml&lt;/code&gt; 은 약간 다르게 보입니다. 개발 섹션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="81e9e77485464c5e6dcbf90878b86491cfa4792c" translate="yes" xml:space="preserve">
          <source>If you create a &lt;code&gt;has_and_belongs_to_many&lt;/code&gt; association, you need to explicitly create the joining table. Unless the name of the join table is explicitly specified by using the &lt;code&gt;:join_table&lt;/code&gt; option, Active Record creates the name by using the lexical order of the class names. So a join between author and book models will give the default join table name of &quot;authors_books&quot; because &quot;a&quot; outranks &quot;b&quot; in lexical ordering.</source>
          <target state="translated">&lt;code&gt;has_and_belongs_to_many&lt;/code&gt; 연관 을 작성하는 경우 결합 테이블을 명시 적으로 작성해야합니다. &lt;code&gt;:join_table&lt;/code&gt; 옵션 을 사용하여 조인 테이블의 이름을 명시 적으로 지정하지 않으면 Active Record는 클래스 이름의 어휘 순서를 사용하여 이름을 만듭니다. 따라서 저자와 책 모델 간의 조인은 &quot;a&quot;가 어휘 순서에서 &quot;b&quot;보다 높기 때문에 기본 조인 테이블 이름에 &quot;authors_books&quot;를 부여합니다.</target>
        </trans-unit>
        <trans-unit id="35c6e0aa89528533d3e7d45ddbe92225145db48e" translate="yes" xml:space="preserve">
          <source>If you decide to define Rake tasks, runners, or initializers in an application other than &lt;code&gt;Rails.application&lt;/code&gt;, then you must run them manually.</source>
          <target state="translated">&lt;code&gt;Rails.application&lt;/code&gt; 이외의 응용 프로그램에서 Rake 작업, 러너 또는 이니셜 라이저를 정의하기로 결정한 경우 수동으로 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="c6f602abca0abc20529f3eda97c5a3d8a025afa3" translate="yes" xml:space="preserve">
          <source>If you decide to define multiple applications, then the first application that is initialized will be set to &lt;code&gt;Rails.application&lt;/code&gt;, unless you override it with a different application.</source>
          <target state="translated">여러 응용 프로그램을 정의하기로 결정한 경우 다른 응용 프로그램으로 재정의하지 않는 한 초기화 된 첫 번째 응용 프로그램은 &lt;code&gt;Rails.application&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="7f85edb739df8530dbc19d0bc1b27a21a110b9e3" translate="yes" xml:space="preserve">
          <source>If you define &lt;code&gt;default_url_options&lt;/code&gt; in &lt;code&gt;ApplicationController&lt;/code&gt;, as in the example above, these defaults will be used for all URL generation. The method can also be defined in a specific controller, in which case it only affects URLs generated there.</source>
          <target state="translated">당신이 정의하는 경우 &lt;code&gt;default_url_options&lt;/code&gt; 을 에 &lt;code&gt;ApplicationController&lt;/code&gt; , 위의 예에서와 같이, 이러한 기본값은 모든 URL 생성을 위해 사용됩니다. 이 방법은 특정 컨트롤러에서 정의 할 수도 있으며이 경우 생성 된 URL에만 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="143fcc6d2800c7f58a705e8a776502a30dd1da56" translate="yes" xml:space="preserve">
          <source>If you delete an article, its associated comments will also need to be deleted, otherwise they would simply occupy space in the database. Rails allows you to use the &lt;code&gt;dependent&lt;/code&gt; option of an association to achieve this. Modify the Article model, &lt;code&gt;app/models/article.rb&lt;/code&gt;, as follows:</source>
          <target state="translated">기사를 삭제하면 관련 주석도 삭제해야합니다. 그렇지 않으면 데이터베이스의 공간을 차지합니다. Rails를 사용하면 연결 의 &lt;code&gt;dependent&lt;/code&gt; 옵션 을 사용하여 이를 달성 할 수 있습니다. 다음과 같이 기사 모델 &lt;code&gt;app/models/article.rb&lt;/code&gt; 를 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4247697d98fceb91717be969dff0907136a92fb" translate="yes" xml:space="preserve">
          <source>If you did not configure the &lt;code&gt;:host&lt;/code&gt; option globally make sure to pass it to &lt;code&gt;url_for&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;:host&lt;/code&gt; 옵션을 전체적으로 구성하지 않은 경우 &lt;code&gt;url_for&lt;/code&gt; 로 전달하십시오 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
