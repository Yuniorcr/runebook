<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="influxdata">
    <body>
      <group id="influxdata">
        <trans-unit id="3feda0153eee1380b496298450dc5a74324eb8c1" translate="yes" xml:space="preserve">
          <source>NA</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc2e60850b5763ce5d1c173ae0815f72e928340" translate="yes" xml:space="preserve">
          <source>NGINX</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea7facdd8e9ee07820822e6ee23450aeb66f2c09" translate="yes" xml:space="preserve">
          <source>NON_NEGATIVE_DERIVATIVE()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd0eb04825e4702ab12e6603f73c91f2257ca03d" translate="yes" xml:space="preserve">
          <source>NON_NEGATIVE_DIFFERENCE()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e40ce5ddb36c9c465cd492640137b7c252e2840" translate="yes" xml:space="preserve">
          <source>NOTE: &lt;code&gt;field*&lt;/code&gt; cannot be used in conjunction with &lt;code&gt;measurement*&lt;/code&gt;!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30704603db71f8aa72969a1b6806a801bdda7bcf" translate="yes" xml:space="preserve">
          <source>NOTE: A recording itself is typed as either a stream or batch recording and can only be replayed to a task of a corresponding type. Therefore when you record the result of a raw query you must specify the type recording you wish to create.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51ee275a408441d22b66f398eae09150019d9c74" translate="yes" xml:space="preserve">
          <source>NOTE: Alerta cannot be configured globally because of its required properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b532c79103c1a59e2f8bd1695842a05655dd091" translate="yes" xml:space="preserve">
          <source>NOTE: All API endpoints related to alerts are in a technical preview. Meaning that they are subject to change in the future until the technical preview is completed. As such the URL for the endpoints uses the base path &lt;code&gt;/kapacitor/v1preview&lt;/code&gt;. Once the technical preview is deemed complete the endpoint paths will be promoted to use the v1 &lt;code&gt;/kapacitor/v1&lt;/code&gt; base path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15473edd13b93a071d3b6de1ad3648c12c269c2" translate="yes" xml:space="preserve">
          <source>NOTE: Anonymous handlers (created automatically from TICKscripts) will not be listed under their associated anonymous topic as they are not configured via the API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74a8c39f1d3b3ddb209fc41c81a4f1d6a8c695b0" translate="yes" xml:space="preserve">
          <source>NOTE: Becareful to always use &lt;code&gt;|from&lt;/code&gt; if you want multiple different streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="563ae4e464191e7d7d9f30c11c05ac234b490f2c" translate="yes" xml:space="preserve">
          <source>NOTE: Because no &lt;code&gt;align&lt;/code&gt; property is defined, the &lt;code&gt;window&lt;/code&gt; edge is defined relative to the first data point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="151a0e6553f56b6664b4a83a4aeda6ebfea8a57a" translate="yes" xml:space="preserve">
          <source>NOTE: Deleting a non-existent recording is not an error and will return a 204 success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5cf791a64e1a84aab8f175bbd7723c5243d182" translate="yes" xml:space="preserve">
          <source>NOTE: Deleting a non-existent replay is not an error and will return a 204 success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168b1928b53a976d27f25c13ab224ae14d1a1e1b" translate="yes" xml:space="preserve">
          <source>NOTE: Deleting a non-existent task is not an error and will return a 204 success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a6f74c2957f08b333601a60e5687100313ddd3" translate="yes" xml:space="preserve">
          <source>NOTE: Deleting a non-existent template is not an error and will return a 204 success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa83839116ba9779d9db328fd31df5749f2f9c2" translate="yes" xml:space="preserve">
          <source>NOTE: For a replay created in this manner the &lt;code&gt;recording&lt;/code&gt; ID will be empty since no recording was used or created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c07c4603f80ba7b618ecf834e92561f0020609c" translate="yes" xml:space="preserve">
          <source>NOTE: If a task is already enabled &lt;code&gt;define&lt;/code&gt;ing the task again will automatically &lt;code&gt;reload&lt;/code&gt; it. To define a task without reloading it use &lt;code&gt;-no-reload&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ab43b6d47daceed6b06137fe9921e5106d5bfb" translate="yes" xml:space="preserve">
          <source>NOTE: If the pattern does not match any tasks an empty list will be returned, with a 200 success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c74d4ae29e3fb3fc148ae25cae2c6d2f60a257" translate="yes" xml:space="preserve">
          <source>NOTE: If the pattern does not match any templates an empty list will be returned, with a 200 success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0508ee6657b5c4513ad3104556b70a503f64c798" translate="yes" xml:space="preserve">
          <source>NOTE: It is possible to create infinite loops using this node. Take care to ensure you do not chain tasks together creating a loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2919f70fe23d25eca9a9190dddb7ec922b6b1e7" translate="yes" xml:space="preserve">
          <source>NOTE: It is probably easiest and safest to set this option as an environment variable &lt;code&gt;KAPACITOR_SKIP_CONFIG_OVERRIDES=true&lt;/code&gt;, since it is meant to be temporary. That way you do not have to modify your on disk configuration file or accidentally leave it in place causing issues later on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f77a1a18f13ed5a1e7401391f2459c3ed63a2b9" translate="yes" xml:space="preserve">
          <source>NOTE: Kapacitor scopes all points by their database and retention policy. This means you MUST specify the &lt;code&gt;rp&lt;/code&gt; for writes or Kapacitor will not know which retention policy to use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="418902034bf82eba3b6033103c23db3b0241895b" translate="yes" xml:space="preserve">
          <source>NOTE: Not all of these endpoints return JSON content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbdb88dc59bc2b0f35e26b042f1d73f10d7f704" translate="yes" xml:space="preserve">
          <source>NOTE: Only the overrides can be removed, this means that InfluxDB clusters that exist in the configuration cannot be removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ce0a34d68c5a2add37c15aa788be77aef168199" translate="yes" xml:space="preserve">
          <source>NOTE: Order matters, the &lt;code&gt;[inputs.cpu.tags]&lt;/code&gt; table must be at the &lt;em&gt;end&lt;/em&gt; of the plugin definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853490bedf8f4faf16bb7035590914494d182f9c" translate="yes" xml:space="preserve">
          <source>NOTE: Sections that are not lists can be treated as having an empty string for their element name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="776991f96f310d3b9c6024be660071318adb5bee" translate="yes" xml:space="preserve">
          <source>NOTE: Setting any DBRP will overwrite all stored DBRPs. Setting any Vars will overwrite all stored Vars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca027ada431217a44822d18319fd16b17f7816bb" translate="yes" xml:space="preserve">
          <source>NOTE: Since &lt;a href=&quot;index#offset&quot;&gt;QueryNode.Offset&lt;/a&gt; is inherently a negative property the second &quot;offset&quot; argument to the &quot;time&quot; function is negative to match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4378c1cb493b77ea21dc348a5924818438008ea2" translate="yes" xml:space="preserve">
          <source>NOTE: Since topics are dynamically created, a topic may return after having deleted it, if a new event is created for the topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="298bddce3f92cb82b04e19c0f0e03ba33dff149a" translate="yes" xml:space="preserve">
          <source>NOTE: The /kapacitor/v1/write endpoint is the one exception to this rule since Kapacitor is compatible with the InfluxDB /write endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8966d2b95f6b2453f8945dd8978a6639fc55aca2" translate="yes" xml:space="preserve">
          <source>NOTE: The &lt;code&gt;connect_errors&lt;/code&gt; stat from the query node was removed since the client changed, all errors are now counted in the &lt;code&gt;query_errors&lt;/code&gt; stat.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7bf3da04d6d2c9c77cf66af1b47873d40a4fffc" translate="yes" xml:space="preserve">
          <source>NOTE: The Kapacitor server version is returned in the &lt;code&gt;X-Kapacitor-Version&lt;/code&gt; HTTP header on all requests. Ping is a useful request if you simply need the verify the version of server you are talking to.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba4d3d67484d8019c5c56357139637a3f63c4a6f" translate="yes" xml:space="preserve">
          <source>NOTE: The UDF process runs as the same user as the Kapacitor daemon. As a result make the user is properly secured as well as the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d9521e0d185050f32e8d163185054347867acf" translate="yes" xml:space="preserve">
          <source>NOTE: The new alerting features are being released under technical preview. This means breaking changes may be made in later releases until the feature is considered complete. See the &lt;a href=&quot;https://docs.influxdata.com/kapacitor/v1.2/api/api/#technical-preview&quot;&gt;API docs on technical preview&lt;/a&gt; for specifics of how this effects the API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4974ff44b0e28bf0022b37b204d29286ba30c3dd" translate="yes" xml:space="preserve">
          <source>NOTE: The password value is not returned, but the &lt;code&gt;true&lt;/code&gt; value indicates that a non empty password has been set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93302fc847d19628a0acab22b02d27c1ebe37b9a" translate="yes" xml:space="preserve">
          <source>NOTE: Topics are created only when needed, as such if the task has not triggered an alert yet, the topic will not exist. If you get an error about the topic not existing, cause an alert to be triggered. Either change the thresholds on the task or create some cpu load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5408e35154a0f435b0adbcbf0ceaa14b38d94aea" translate="yes" xml:space="preserve">
          <source>NOTE: Updates to the template will update all associated tasks and reload them if necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0707e8376ff5fa6d851243a7a4ca2e43e1635bc" translate="yes" xml:space="preserve">
          <source>NOTE: Using a technical preview means that you may have to update your client for breaking changes to the previewed endpoints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abb09453d1233bcb4b1a7784ba04eb29717cbc5" translate="yes" xml:space="preserve">
          <source>NOTE: Window can only be applied to stream edges.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e011f7ff39efab892f2ecaae3855155ce2078e34" translate="yes" xml:space="preserve">
          <source>NOTE:Deleting a template renders all associated tasks as orphans. The current state of the orphaned tasks will be left unmodified, but orphaned tasks will not be able to be enabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960ee1b3d29a363a0adf7de5ad8060ea4958af6a" translate="yes" xml:space="preserve">
          <source>NSQ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a61edc526d45fb768660995e2f6179b5b3cb7b" translate="yes" xml:space="preserve">
          <source>NTP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abe3ae2fd8c99f6ef449aed11e2659fba88ca5a7" translate="yes" xml:space="preserve">
          <source>Nagios Configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2504cb31a5d34e17f665b0d28a19d23a0bf5619e" translate="yes" xml:space="preserve">
          <source>Nagios:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303a7979dcc5adf6cef25d96ff403f407160a657" translate="yes" xml:space="preserve">
          <source>Name &amp;ndash; Measurement name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa80205e0a26d810b44fbd827f6cd2effecdd03" translate="yes" xml:space="preserve">
          <source>Name of a configured InfluxDB cluster. If empty uses the default cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b630340934d9f2db6e71325a7405f54006d9c28" translate="yes" xml:space="preserve">
          <source>Name of a configured httppost endpoint, cannot be specified in conjunciton with URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c3290c47832009f9f3de8d9f3f6c33a9dede80" translate="yes" xml:space="preserve">
          <source>Name of the endpoint to be used, as is defined in the configuration file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe4800a5e2f3aabf076becdb860604f25f98edf" translate="yes" xml:space="preserve">
          <source>Name of the endpoint to be used, as is defined in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cccddf30b8d7164dfc09ad77bd06d8f3bc6d901e" translate="yes" xml:space="preserve">
          <source>Name the alert rule by clicking on &lt;code&gt;Untitled Rule&lt;/code&gt; in the top left corner. You can call your rule anything you want and you can always change it later. Here, we call it &lt;code&gt;Idle CPU Usage&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0449e1003dd0cdd92ab163e844540614258e8b38" translate="yes" xml:space="preserve">
          <source>Namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="307427c6ce722072ebfb03a56f8317743d9fbc5a" translate="yes" xml:space="preserve">
          <source>Namespace is the namespace of the resource, if empty the default namespace will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63b2bc44cae991e4ce5fb64ed697783902261096" translate="yes" xml:space="preserve">
          <source>NamespaceTag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a9a9c1b4078b614d60bcb981894e063db0f13af" translate="yes" xml:space="preserve">
          <source>NamespaceTag is the name of a tag to use when tagging emitted points with the namespace. If empty the point will not be tagged with the resource. Default: namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb854b795e2a877ad6f02128736d114f0bc6e727" translate="yes" xml:space="preserve">
          <source>Nested Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb81c2eccbed59ee8cbe296f1278f0ca1f364cc" translate="yes" xml:space="preserve">
          <source>Net</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08eb8d7c4214fdea99e6b5bac154c8349bf17c13" translate="yes" xml:space="preserve">
          <source>Netstat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53ebc572b4a44802ba114729f07bdaaf5409a9d7" translate="yes" xml:space="preserve">
          <source>Network</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9aac03a985cf3512b8883e69b3dcec23fb50848" translate="yes" xml:space="preserve">
          <source>Network statistics not collected when system has alias interfaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e91748557010f07119a40ac844fcae91cc2e7a3" translate="yes" xml:space="preserve">
          <source>Networking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c3052d33ccdee15ffaaa110c5c39072495fe63" translate="yes" xml:space="preserve">
          <source>Never</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10985b6d840819ac710c7d1b270d997ee0e91787" translate="yes" xml:space="preserve">
          <source>Never double or single quote the timestamp. It&amp;rsquo;s not valid Line Protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2747a9c1a5a2cf936874a88dc29720834592e859" translate="yes" xml:space="preserve">
          <source>Never single quote field values (even if they&amp;rsquo;re strings!). It&amp;rsquo;s also not valid Line Protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e37accde9603b4145dca8c4fd0b45d0bba05fa" translate="yes" xml:space="preserve">
          <source>Never*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ca1e2971bb66e019aad235a75fcc9b7d844b97" translate="yes" xml:space="preserve">
          <source>New &lt;code&gt;cumulative_sum&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f12c78f630a7c29c48e9f969fdeb260de41f629" translate="yes" xml:space="preserve">
          <source>New &lt;code&gt;linear&lt;/code&gt; fill option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e1a363a155cadebd9baccaf2d01fdefb2ae2b5" translate="yes" xml:space="preserve">
          <source>New API endpoints have been added to be able to configure InfluxDB clusters and alert handlers dynamically without needing to restart the Kapacitor daemon. Along with the ability to dynamically configure a service, API endpoints have been added to test the configurable services. See the &lt;a href=&quot;https://docs.influxdata.com/kapacitor/latest/api/api/&quot;&gt;API docs&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52912a6a28538704a1dfb672e357a95ab665e231" translate="yes" xml:space="preserve">
          <source>New K8sAutoscale node that allows you to auotmatically scale Kubernetes deployments driven by any metrics Kapacitor consumes. For example, to scale a deployment &lt;code&gt;myapp&lt;/code&gt; based off requests per second:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ab8b1acd3c874df24a4fae324d1b6fafa4a364" translate="yes" xml:space="preserve">
          <source>New Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149bd85eaa109d6a94c8e6674ff1b24956f424d6" translate="yes" xml:space="preserve">
          <source>New Socket Listener and Socket Writer plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ec7e5e1e954128f233118c1ca0e1d76e2e0691" translate="yes" xml:space="preserve">
          <source>New function: &lt;code&gt;INTEGRAL()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb455975cf5cb835c4c868c80277aeba7b138164" translate="yes" xml:space="preserve">
          <source>New function: &lt;code&gt;NON_NEGATIVE_DIFFERENCE()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe65b030d0f22d796fb068a08708e5e26b63ce00" translate="yes" xml:space="preserve">
          <source>New point: &lt;code&gt;cpu_load,hostname=server02,az=us_west val_1=5.24 1234567890000000&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e913eea531f13e744818af833483ae5cd0fc9af" translate="yes" xml:space="preserve">
          <source>New point: &lt;code&gt;cpu_load,hostname=server02,az=us_west val_1=5.24 1234567890000001&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46a8d9a43cb8994d466995eb43d973a8f19541e7" translate="yes" xml:space="preserve">
          <source>New point: &lt;code&gt;cpu_load,hostname=server02,az=us_west,uniq=2 val_1=5.24 1234567890000000&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f170caead65df254d786032a409a6f6d204bca6" translate="yes" xml:space="preserve">
          <source>Next Steps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe69c3a99937a5fea0e953893b0ae4b1e729809" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s implement the &lt;code&gt;init&lt;/code&gt; method, which is called once the task starts executing. The &lt;code&gt;init&lt;/code&gt; method receives a list of chosen options, which are then used to configure the handler appropriately. In response, we indicate whether the &lt;code&gt;init&lt;/code&gt; request was successful, and, if not, any error messages if the options were invalid.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fcd0cd9e825363c14326b968055772cdf2a58d" translate="yes" xml:space="preserve">
          <source>Next we need a consistent way to create a new instance of our node. But to do so we need to think about how this node connects to other nodes. Since we are an output node as far as Kapacitor is concerned this is the end of the pipeline. We will not provide any outbound edges, the graph ends on this node. Our imaginary HouseDB is flexible and can store data in batches or as single data points. As a result we do not care what type of data the HouseDBOutNode node receives. With these facts in mind we can define a function to create a new HouseDBOutNode. Add this function to the end of the &lt;code&gt;housedb_out.go&lt;/code&gt; file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98db1d5b202e8282285b9d3642673dc3217ac36" translate="yes" xml:space="preserve">
          <source>Next we want to create another RP that keeps data for 52 weeks and is not the &lt;code&gt;DEFAULT&lt;/code&gt; RP for the database. Ultimately, the 30-minute rollup data will be stored in this RP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3943a046c53010551e7785362cd236a2aa834f7" translate="yes" xml:space="preserve">
          <source>Next, InfluxDB calculates the 12-minute rate of change between those averages. The first result (&lt;code&gt;-0.0129999999999999&lt;/code&gt;) is the 12-minute rate of change between the first two averages. InfluxDB calculates the difference between the field values and normalizes that value to the 12-minute rate of change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3f6775053632e7876ce32e0ceee4d0cf2969a0e" translate="yes" xml:space="preserve">
          <source>Next, InfluxDB calculates the difference between those maximum values. The first point in the final results (&lt;code&gt;0.009999999999999787&lt;/code&gt;) is the difference between &lt;code&gt;2.126&lt;/code&gt; and &lt;code&gt;2.116&lt;/code&gt;, and the second point in the final results (&lt;code&gt;-0.07499999999999973&lt;/code&gt;) is the difference between &lt;code&gt;2.051&lt;/code&gt; and &lt;code&gt;2.126&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c70504adbcf38b50d14f238d9eb66fdba04431" translate="yes" xml:space="preserve">
          <source>Next, InfluxDB calculates the rolling average across a two-value window using those maximum values. The first final result (&lt;code&gt;2.121&lt;/code&gt;) is the average of the first two maximum values (&lt;code&gt;(2.116 + 2.126) / 2&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641ffe0f1575f94a4196653ca006720346828a4c" translate="yes" xml:space="preserve">
          <source>Next, InfluxDB calculates the running total of those averages. The second point in the final results (&lt;code&gt;4.167&lt;/code&gt;) is the sum of &lt;code&gt;2.09&lt;/code&gt; and &lt;code&gt;2.077&lt;/code&gt; and the third point (&lt;code&gt;6.213&lt;/code&gt;) is the sum of &lt;code&gt;2.09&lt;/code&gt;, &lt;code&gt;2.077&lt;/code&gt;, and &lt;code&gt;2.0460000000000003&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67eaf4fd3c8bd7a965bfcf57029e82813cf43b7" translate="yes" xml:space="preserve">
          <source>Next, InfluxDB calculates the six-minute rate of change between those averages. The first result (&lt;code&gt;-0.00649999999999995&lt;/code&gt;) is the six-minute rate of change between the first two averages. InfluxDB calculates the difference between the field values and normalizes that value to the six-minute rate of change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0eb27bb8250d5553bbe2dbc8a249ccf937e9ad0" translate="yes" xml:space="preserve">
          <source>Next, InfluxDB performs the main query and calculates the average of those differences. Notice that the main query specifies &lt;code&gt;difference&lt;/code&gt; as the field key in the &lt;code&gt;MEAN()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a512fc2bd4539d2f1996ed95bdb75071efc2128" translate="yes" xml:space="preserve">
          <source>Next, InfluxDB performs the main query and calculates the sum of the &lt;code&gt;water_level_derivative&lt;/code&gt; values for each tag value of &lt;code&gt;location&lt;/code&gt;. Notice that the main query specifies &lt;code&gt;water_level_derivative&lt;/code&gt;, not &lt;code&gt;water_level&lt;/code&gt; or &lt;code&gt;derivative&lt;/code&gt;, as the field key in the &lt;code&gt;SUM()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a5c708429f344e680757b5dc534ed4bf904d121" translate="yes" xml:space="preserve">
          <source>Next, InfluxDB performs the main query and calculates the sum of those maximum values: &lt;code&gt;9.964&lt;/code&gt; + &lt;code&gt;7.205&lt;/code&gt; = &lt;code&gt;17.169&lt;/code&gt;. Notice that the main query specifies &lt;code&gt;max&lt;/code&gt;, not &lt;code&gt;water_level&lt;/code&gt;, as the field key in the &lt;code&gt;SUM()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="531539a426603824ce8dc0bbe668e32df3700b2b" translate="yes" xml:space="preserve">
          <source>Next, InfluxDB performs the main query and returns only those mean values that are greater than five. Notice that the main query specifies &lt;code&gt;all_the_means&lt;/code&gt; as the field key in the &lt;code&gt;SELECT&lt;/code&gt; clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a2a99e048bf3be61f58267821a3554a10403f1" translate="yes" xml:space="preserve">
          <source>Next, Kapacitor implements the scraping process to pull metrics data from the existing targets. It runs the scraping process at regular intervals. Here, Kapacitor requests metrics from targets &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, and &lt;code&gt;C&lt;/code&gt;. The application running on &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, and &lt;code&gt;C&lt;/code&gt; exposes a &lt;code&gt;/metrics&lt;/code&gt; endpoint on its HTTP API which returns application-specific statistics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7025285e47bb87965d30e5a91bdc02cf5b7a5ca" translate="yes" xml:space="preserve">
          <source>Next, choose the data that you want the alert rule to work with. Navigate through the &lt;code&gt;Databases&lt;/code&gt;, &lt;code&gt;Measurements&lt;/code&gt;, &lt;code&gt;Fields&lt;/code&gt;, and &lt;code&gt;Tags&lt;/code&gt; tabs to select the relevant data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24dfe69d94a69b53ba5033e1d50dd9ca1fdfc5e9" translate="yes" xml:space="preserve">
          <source>Next, complete your dashboard by creating, editing, and repositioning more cells!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d43a3c9be270a6f36bbf49de795c75c3dbf2f7" translate="yes" xml:space="preserve">
          <source>Next, define the threshold condition:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6185106945bb086b75b9e1cd85bfa89386c59a66" translate="yes" xml:space="preserve">
          <source>Next, get acquainted with this subsample of the data in the &lt;code&gt;h2o_feet&lt;/code&gt; measurement:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abab7b90faab6cbbd19bb0848df3a54e6d49d49" translate="yes" xml:space="preserve">
          <source>Next, move on to the section below to experience your alert rule in action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4eccdd7dcb4ab110d421951c73e4ae35027d4d" translate="yes" xml:space="preserve">
          <source>Next, restart Telegraf and you&amp;rsquo;re all set!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0d730c54520cdd8197e395653b411f07a67b97" translate="yes" xml:space="preserve">
          <source>Next, restart the InfluxDB process for your configuration changes to take effect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070d81881ca211e1a36bce382d185144ba979ac1" translate="yes" xml:space="preserve">
          <source>Next, set the environment variable &lt;code&gt;TLS_CERTIFICATE&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d588c5c6a6953a0e2dc1990f46c292099317da48" translate="yes" xml:space="preserve">
          <source>Next, the &lt;code&gt;INPUT PLUGINS&lt;/code&gt; section should have the following settings for the system stats input:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bdcd15da429a36641941940452d052254cc5795" translate="yes" xml:space="preserve">
          <source>Next, visit the Slack channel that you specified in the previous section. In this example, it&amp;rsquo;s the &lt;code&gt;#chronocats&lt;/code&gt; channel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0f8f7eb26ee66b12ea114afad445e53fe8a92f" translate="yes" xml:space="preserve">
          <source>Next, you will need to set Chronograf&amp;rsquo;s &lt;a href=&quot;../configuration/index#auth0-client-secret&quot;&gt;&lt;code&gt;AUTH0_ORGS&lt;/code&gt;&lt;/a&gt; environment variable to a comma-separated list of the allowed organizations. For example, if you have one group of users with an &amp;ldquo;organization&amp;rdquo; key set to &amp;ldquo;biffs-gang&amp;rdquo; and another group with an &amp;ldquo;organization&amp;rdquo; key set to &amp;ldquo;time-travelers&amp;rdquo; you can permit access to both with the environment variable: &lt;code&gt;AUTH0_ORGS=biffs-gang,time-travelers&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="187b00f2a25704f77dfb36fae035c8980d0564fe" translate="yes" xml:space="preserve">
          <source>No breaking HTTP API changes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4fa5fe282d4ed3486ea3592d2bd623b626b7922" translate="yes" xml:space="preserve">
          <source>No changes to Kapacitor, only upgrading to GoLang 1.7.4 for security patches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d70a61c00d826f8d5849e1c8e0f2ae84bd61d9d" translate="yes" xml:space="preserve">
          <source>No one point is too important.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd23dd0b00e16cabb5f73e5f6507ba4e4a9bf7c" translate="yes" xml:space="preserve">
          <source>No such recording exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feec8ef7aaae48de18daa6f84974fcfdaf6fd10f" translate="yes" xml:space="preserve">
          <source>No such replay exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0570498acdbe0357a14d3a18c8235afce0ffae5" translate="yes" xml:space="preserve">
          <source>No value is required, a star type var represents the literal &lt;code&gt;*&lt;/code&gt; in TICKscript (i.e. &lt;code&gt;.groupBy(*)&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614466f4ae89d4df68cc36b0f25610cb70f76135" translate="yes" xml:space="preserve">
          <source>No. Our tests indicate that there is a only a negligible difference between the times it takes InfluxDB to complete the following queries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1007ca6584965eeb90f276ead1ceb873222a28c7" translate="yes" xml:space="preserve">
          <source>No: &lt;code&gt;SELECT &quot;water_level&quot; FROM &quot;h2o_feet&quot; WHERE time &amp;gt; &quot;2015-08-18T23:00:01.232000000Z&quot; AND time &amp;lt; &quot;2015-09-19&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694f751ab10de34aa744acb481b8169062133d0b" translate="yes" xml:space="preserve">
          <source>No: &lt;code&gt;SELECT 'bikes_available' FROM 'bikes' WHERE 'station_id'=&quot;9&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cef88e44084ec9b401a9b7c47db9b392117c9be" translate="yes" xml:space="preserve">
          <source>No: &lt;code&gt;SELECT * from cr@zy where p^e='2'&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08d9e656e6a33c749e02e7318185e44c42a832fc" translate="yes" xml:space="preserve">
          <source>NoOp Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4723e7733c57d8d9cf02ba79e26168275a762233" translate="yes" xml:space="preserve">
          <source>NoOpNode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dda50e158ef5bb648a652673fc6ec2dc308e84b8" translate="yes" xml:space="preserve">
          <source>NoPermissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f670f5c91ddaa6c1142c6fdc56f98a5fbedd450b" translate="yes" xml:space="preserve">
          <source>NoRecoveries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e4faec388eed3cdd661c4ea0bb2ac840020d47" translate="yes" xml:space="preserve">
          <source>Non-&lt;code&gt;TSM&lt;/code&gt; shards are files of the form: &lt;code&gt;data/&amp;lt;database&amp;gt;/&amp;lt;retention_policy&amp;gt;/&amp;lt;shard_id&amp;gt;&lt;/code&gt;`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b2507417cfe675014ac0fe9a8405674a136d73c" translate="yes" xml:space="preserve">
          <source>Non-admin user management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5df8e9637dc516033a15239a6bae8b322642b0" translate="yes" xml:space="preserve">
          <source>Non-admin users</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babd36548b9af41b9ff2e3b53a966fc9e7a8912e" translate="yes" xml:space="preserve">
          <source>Non-admin users can have one of the following three privileges per database: ◦ &lt;code&gt;READ&lt;/code&gt; ◦ &lt;code&gt;WRITE&lt;/code&gt; ◦ &lt;code&gt;ALL&lt;/code&gt; (both &lt;code&gt;READ&lt;/code&gt; and &lt;code&gt;WRITE&lt;/code&gt; access)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127b13f3da68e65565bcee025373859c340f29d0" translate="yes" xml:space="preserve">
          <source>Non-admin users have no permissions by default. Assign permissions and roles to both admin and non-admin users.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="286378292ac44a8e74daaea301d72ed6b20cfb94" translate="yes" xml:space="preserve">
          <source>Non-default HTTP timeouts for RabbitMQ plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25556d5b455cb93b87bb2ea7fd130f3372651bf6" translate="yes" xml:space="preserve">
          <source>Non-string values require approximately three bytes. String values require variable space as determined by string compression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90b3191e084dcd5f27e58b7e1c85dc1dac955710" translate="yes" xml:space="preserve">
          <source>NonNegative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e18b2d71bada6493d836556d785150505ce941f" translate="yes" xml:space="preserve">
          <source>Normalize the terminology in Chronograf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3163ffda0d3418a1866865fdb1ef76cb2dbf4b" translate="yes" xml:space="preserve">
          <source>Notation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da943386a8e98b800a32b0e41e7b69ec1eca80ff" translate="yes" xml:space="preserve">
          <source>Notation operators in order of increasing precedence:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72c480438695639f410941aecb98d34180ad19e" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;SHOW FIELD KEYS&lt;/code&gt; handles field type discrepancies differently from &lt;code&gt;SELECT&lt;/code&gt; statements. See the &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#how-does-influxdb-handle-field-type-discrepancies-across-shards&quot;&gt;FAQ&lt;/a&gt; page for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ee82f77728550b9cb3774296ebc80c25a9d3a72" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;offset_interval&lt;/code&gt; forces the first time boundary to be outside the query&amp;rsquo;s time range so the query returns no results for that first interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7044933b0eba72a0c1bf8927a24a2afa021a30b7" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;offset_interval&lt;/code&gt; forces the fourth time boundary to be outside the query&amp;rsquo;s time range so the query returns no results for that last interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b650e7791a748f032ee1b81fcf55499d83919187" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;offset_interval&lt;/code&gt; forces the second time boundary to be outside the query&amp;rsquo;s time range so the query returns no results for that second interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f89ef29d311ee8c71e183129f4ebd48cdff5e3" translate="yes" xml:space="preserve">
          <source>Note that Windows uses carriage return and line feed (&lt;code&gt;\r\n&lt;/code&gt;) as the newline character.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2a48a32a746115936260077a469acb6f7f47dc" translate="yes" xml:space="preserve">
          <source>Note that as the first point in the given state has no previous point, its state duration will be 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abbb582eacd829fc331a44d754a9dd27aa8e1599" translate="yes" xml:space="preserve">
          <source>Note that currently, Chronograf does not support assigning database &lt;code&gt;READ&lt;/code&gt;or &lt;code&gt;WRITE&lt;/code&gt; access to non-admin users. This is a known issue. As a workaround, grant &lt;code&gt;READ&lt;/code&gt;, &lt;code&gt;WRITE&lt;/code&gt;, or &lt;code&gt;ALL&lt;/code&gt; (&lt;code&gt;READ&lt;/code&gt; and &lt;code&gt;WRITE&lt;/code&gt;) permissions to non-admin users with the following curl commands, replacing anything inside &lt;code&gt;&amp;lt; &amp;gt;&lt;/code&gt; with your own values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180910dac69defa20c6a158fbcbb6982d9f9b3dc" translate="yes" xml:space="preserve">
          <source>Note that the &lt;a href=&quot;../../query_language/schema_exploration/index#show-databases&quot;&gt;&lt;code&gt;SHOW DATABASES&lt;/code&gt; query&lt;/a&gt; returns only those databases on which the non-admin user has &lt;code&gt;READ&lt;/code&gt; and/or &lt;code&gt;WRITE&lt;/code&gt; permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddff97b1250969212e2f6c19ffb83d63623aa53" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;LIMIT&lt;/code&gt; clause must appear in the order outlined in the syntax above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6643044c7061f297914237cce6e75346a17d7486" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;WHERE&lt;/code&gt; clause must provide an alternative &lt;strong&gt;upper&lt;/strong&gt; bound to override the default &lt;code&gt;now()&lt;/code&gt; upper bound. The following query merely resets the lower bound to &lt;code&gt;now()&lt;/code&gt; such that the query&amp;rsquo;s time range is between &lt;code&gt;now()&lt;/code&gt; and &lt;code&gt;now()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1be0c488c93d8d2f329e358e51cc571b8ba7f79" translate="yes" xml:space="preserve">
          <source>Note that the basic syntax does not support using &lt;a href=&quot;../data_exploration/index#group-by-time-intervals-and-fill&quot;&gt;&lt;code&gt;fill()&lt;/code&gt;&lt;/a&gt; to change the value reported for intervals with no data. Basic syntax CQs ignore &lt;code&gt;fill()&lt;/code&gt; if it&amp;rsquo;s included in the CQ query. A possible workaround is to use the &lt;a href=&quot;#example-4-configure-the-cq-s-time-range-and-fill-empty-results&quot;&gt;advanced CQ syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f363ae0b85c2655f82d8fabe18cf12f166e43ba6" translate="yes" xml:space="preserve">
          <source>Note that the configuration options in the &lt;code&gt;Configure Alert Endpoints&lt;/code&gt; section are not all-inclusive. Some event handlers allow users to customize event handler configurations per &lt;a href=&quot;../create-a-kapacitor-alert/index&quot;&gt;alert rule&lt;/a&gt;. For example, Chronograf&amp;rsquo;s Slack integration allows users to specify a default channel in the &lt;code&gt;Configure Alert Endpoints&lt;/code&gt; section and a different channel for individual alert rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ed4521cedb04e9f30c182eea9c23ba2c0e1d1e" translate="yes" xml:space="preserve">
          <source>Note that the example above assumes that you do not have authentication enabled. If you have authentication enabled, the form requires username and password information. For more details about monitoring an InfluxEnterprise cluster, see the &lt;a href=&quot;https://docs.influxdata.com/chronograf/v1.3/guides/monitor-an-influxenterprise-cluster/&quot;&gt;Monitor an InfluxEnterprise Cluster&lt;/a&gt; guide.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2f4ecf3a66b1ef6deecb2e3141fa837af9c6dd" translate="yes" xml:space="preserve">
          <source>Note that the first timestamp in the result is &lt;code&gt;2016-08-29T18:15:00Z&lt;/code&gt; instead of &lt;code&gt;2016-08-29T18:00:00Z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06dcd5da7cc0877481ea27f77278a6e237eaedb7" translate="yes" xml:space="preserve">
          <source>Note that the measurements &lt;code&gt;average_temperature&lt;/code&gt;, &lt;code&gt;h2o_pH&lt;/code&gt;, &lt;code&gt;h2o_quality&lt;/code&gt;, and &lt;code&gt;h2o_temperature&lt;/code&gt; contain fictional data. Those measurements serve to illuminate query functionality in &lt;a href=&quot;../schema_exploration/index&quot;&gt;Schema Exploration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45852a1e7078f0aac672762082be2b9153145dc6" translate="yes" xml:space="preserve">
          <source>Note that the query results are identical to the results of the query in &lt;a href=&quot;#example-2-group-query-results-by-more-than-one-tag&quot;&gt;Example 2&lt;/a&gt; where we explicitly specified the &lt;code&gt;location&lt;/code&gt; and &lt;code&gt;randtag&lt;/code&gt; tag keys. This is because the &lt;code&gt;h2o_quality&lt;/code&gt; measurement only has two tag keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5a6dff3099fe6247b88fcbc13617e36a93f80c" translate="yes" xml:space="preserve">
          <source>Note that the single quotes around the RFC3339 date-time strings are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0986b588765183e6fba8a3679d4998b95d5c522a" translate="yes" xml:space="preserve">
          <source>Note that the single quotes around the RFC3339-like date-time strings are required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f454eaeb85c4bea66eb27d12b6ed028d1afe212f" translate="yes" xml:space="preserve">
          <source>Note that this behavior does not apply to queries that use the &lt;a href=&quot;../../query_language/functions/index#top&quot;&gt;&lt;code&gt;TOP()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../query_language/functions/index#bottom&quot;&gt;&lt;code&gt;BOTTOM()&lt;/code&gt;&lt;/a&gt; functions. See the &lt;a href=&quot;../../query_language/functions/index#issue-3-top-tags-and-the-into-clause&quot;&gt;&lt;code&gt;TOP()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../query_language/functions/index#issue-3-bottom-tags-and-the-into-clause&quot;&gt;&lt;code&gt;BOTTOM()&lt;/code&gt;&lt;/a&gt; documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8c7a063ca94672e76e9a3c02f17cc7b5e78730" translate="yes" xml:space="preserve">
          <source>Note that this will not change the field&amp;rsquo;s data type on prior shards. For how this will affect your queries, please see &lt;a href=&quot;index#how-does-influxdb-handle-field-type-discrepancies-across-shards&quot;&gt;How does InfluxDB handle field type discrepancies across shards&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d0e3a6a0e155a658f9f0b9083c72768dd92685" translate="yes" xml:space="preserve">
          <source>Note that when the request includes &lt;code&gt;-H &quot;Accept: application/csv&quot;&lt;/code&gt;, the system returns timestamps in epoch format, not RFC3339 format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747c69c4e2cecb6e665aa6ff1208ce4137262570" translate="yes" xml:space="preserve">
          <source>Note that while the first timestamp in the results is &lt;code&gt;2016-08-29T18:00:00Z&lt;/code&gt;, the query results in that bucket do &lt;strong&gt;not&lt;/strong&gt; include data with timestamps that occur before the start of the &lt;code&gt;WHERE&lt;/code&gt; time clause (&lt;code&gt;2016-08-29T18:15:00Z&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b508a008a06777d4558749f6b3777dd1063bb18b" translate="yes" xml:space="preserve">
          <source>Note that without &lt;code&gt;LIMIT 2 SLIMIT 1&lt;/code&gt;, the query would return four points for each of the two series associated with the &lt;code&gt;h2o_feet&lt;/code&gt; measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a44614b70035e0bab833999b77c5107ce2f912" translate="yes" xml:space="preserve">
          <source>Note that without &lt;code&gt;LIMIT 2&lt;/code&gt;, the query would return four points per &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt;; one for each twelve-minute interval in the query&amp;rsquo;s time range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c77c4badcd7da668308a46567493c82b033e7b9" translate="yes" xml:space="preserve">
          <source>Note that without &lt;code&gt;SLIMIT 1&lt;/code&gt;, the query would return results for the two series associated with the &lt;code&gt;h2o_feet&lt;/code&gt; measurement: &lt;code&gt;location=coyote_creek&lt;/code&gt; and &lt;code&gt;location=santa_monica&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c2917519d731c3c51d9114bb44082040d69fbb" translate="yes" xml:space="preserve">
          <source>Note that you should not include the single quotes when authenticating requests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="626224af73f5a26e337b298ac2be9bbf701dde79" translate="yes" xml:space="preserve">
          <source>Note that you will also need to wrap identifiers in double quotes in queries if they contain characters other than &lt;code&gt;[A-z,_]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd0a00121667c6eebb47b3227ac24c086eb56fb" translate="yes" xml:space="preserve">
          <source>Note that you will need to fully qualify the measurement to query data in the non-&lt;code&gt;DEFAULT&lt;/code&gt; retention policy. Fully qualify the measurement with the syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec557fd9626267700b1e6ef58b1fd916b331753" translate="yes" xml:space="preserve">
          <source>Note that, in some cases, simply performing that multiplication may overestimate series cardinality because of the presence of dependent tags. Dependent tags are tags that are scoped by another tag and do not increase series cardinality. If we add the tag &lt;code&gt;firstname&lt;/code&gt; to the example above, the series cardinality would not be 18 (3 * 2 * 3 = 18). It would remain unchanged at 6, as &lt;code&gt;firstname&lt;/code&gt; is already scoped by the &lt;code&gt;email&lt;/code&gt; tag:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29b83b5d8d6fe5da0a13c455634cac987b24799f" translate="yes" xml:space="preserve">
          <source>Note that, like the web admin interface, Chronograf&amp;rsquo;s &lt;a href=&quot;#chronograf&quot;&gt;&lt;code&gt;Query Templates&lt;/code&gt; dropdown&lt;/a&gt; includes the database- and RP-related queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023b350ae5da25fcfdf608ca1e83eb02aac08076" translate="yes" xml:space="preserve">
          <source>Note that, like the web admin interface, Chronograf&amp;rsquo;s &lt;a href=&quot;#chronograf&quot;&gt;&lt;code&gt;Query Templates&lt;/code&gt; dropdown&lt;/a&gt; includes the user-related queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5660d48d8de50476247db7b0c95aad57a6b4490b" translate="yes" xml:space="preserve">
          <source>Note the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e11210cfbcb758784dc9df7dbe7b855a0448b7" translate="yes" xml:space="preserve">
          <source>Note: Before continuing, please make sure you have read the &lt;a href=&quot;../tick/index&quot;&gt;TICKscript Language Specification&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0dd381249aa2cd98d32ba45ddbe3419dba0261f" translate="yes" xml:space="preserve">
          <source>Note: Derivative has its own implementation as a &lt;a href=&quot;../derivative_node/index&quot;&gt;DerivativeNode&lt;/a&gt; instead of as part of the InfluxQL functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b479097dd529efba8ee01b69c7190f19f4e29fd9" translate="yes" xml:space="preserve">
          <source>Note: Nagios Input Data Formats is only supported in &lt;code&gt;exec&lt;/code&gt; input plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2c7e92ab5061d8b076c43d7a388ec893a612f6" translate="yes" xml:space="preserve">
          <source>Note: These tips only apply to the line, stacked, step-plot, and line+stat &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#what-visualization-types-does-chronograf-support&quot;&gt;visualization types&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f99d2be6e47886c34b2675c3c30ffdb65ee6c7" translate="yes" xml:space="preserve">
          <source>Notice how everything about the task is a &lt;code&gt;var&lt;/code&gt; except for the structure of the task pipeline itself. This allows you to customize the usage of the template completely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc3915b3961517dbc0c9a046069a6738e2fb4dc" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;cq_advanced_every&lt;/code&gt; calculates the result for the 8:00 time interval twice. First, it runs at 8:30 and calculates the average for every available data point between 8:00 and 9:00 (&lt;code&gt;8&lt;/code&gt;,&lt;code&gt;15&lt;/code&gt;, and &lt;code&gt;15&lt;/code&gt;). Second, it runs at 9:00 and calculates the average for every available data point between 8:00 and 9:00 (&lt;code&gt;8&lt;/code&gt;, &lt;code&gt;15&lt;/code&gt;, &lt;code&gt;15&lt;/code&gt;, and &lt;code&gt;17&lt;/code&gt;). Because of the way InfluxDB &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#how-does-influxdb-handle-duplicate-points&quot;&gt;handles duplicate points&lt;/a&gt; , the second result simply overwrites the first result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e500c6639a5418396d0650c94c88a55825694e" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;cq_advanced_every_for&lt;/code&gt; will calculate the result for every time interval twice. The CQ calculates the average for the 7:30 interval at 8:00 and 9:00.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01b8b76f66afe2fd23af8bafc2bb0060b4076b6" translate="yes" xml:space="preserve">
          <source>Notice that &lt;code&gt;cq_advanced_for&lt;/code&gt; will calculate the result for every time interval twice. The CQ calculates the average for the 7:30 time interval at 8:00 and at 8:30, and it calculates the average for the 8:00 time interval at 8:30 and 9:00.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="661eb0372c87a677b633d0cce6d209a4a83af1d5" translate="yes" xml:space="preserve">
          <source>Notice that our Python script imported the &lt;code&gt;Agent&lt;/code&gt; object, and we set the &lt;code&gt;PYTHONPATH&lt;/code&gt; in the configuration. Clone the Kapacitor source into the tmp dir so we can point the &lt;code&gt;PYTHONPATH&lt;/code&gt; at the necessary python code. This is typically overkill since it&amp;rsquo;s just two Python files, but it makes it easy to follow:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b38bfc37c9f1c2da3ddc08fd3675c2c4977f54" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt; does not override the points&amp;rsquo; original timestamps. See &lt;a href=&quot;#issue-1-sample-with-a-group-by-time-clause&quot;&gt;Issue 1&lt;/a&gt; in the section below for a more detailed explanation of that behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60286d1d7986e5413b1e21a00927c5f4f46302d6" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt; overrides the points&amp;rsquo; original timestamps. The timestamps in the results indicate the the start of each 12-minute time interval; the first point in the results covers the time interval between &lt;code&gt;2015-08-17T23:48:00Z&lt;/code&gt; and just before &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; and the last point in the results covers the time interval between &lt;code&gt;2015-08-18T00:24:00Z&lt;/code&gt; and just before &lt;code&gt;2015-08-18T00:36:00Z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f043b547cbbca40c1e3f296aa167aaa5f7e7d5a" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;&lt;code&gt;GROUP BY time()&lt;/code&gt; clause&lt;/a&gt; overrides the points&amp;rsquo; original timestamps. The timestamps in the results indicate the the start of each 24-minute time interval; the first point in the results covers the time interval between &lt;code&gt;2015-08-17T23:36:00Z&lt;/code&gt; and just before &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; and the last point in the results covers the time interval between &lt;code&gt;2015-08-18T00:00:00Z&lt;/code&gt; and just before &lt;code&gt;2015-08-18T00:24:00Z&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c0300a2b9f893fb2a5ceb67e0de5a32d4935fcd" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;GROUP BY time() clause&lt;/a&gt; does not override the points&amp;rsquo; original timestamps. See &lt;a href=&quot;#issue-1-bottom-with-a-group-by-time-clause&quot;&gt;Issue 1&lt;/a&gt; in the section below for a more detailed explanation of that behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74975756fe0204cf63e9cad6c1a5a95313aafdea" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;GROUP BY time() clause&lt;/a&gt; does not override the points&amp;rsquo; original timestamps. See &lt;a href=&quot;#issue-1-top-with-a-group-by-time-clause&quot;&gt;Issue 1&lt;/a&gt; in the section below for a more detailed explanation of that behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e241549369e5c625e62c66ea43e39384762f9a" translate="yes" xml:space="preserve">
          <source>Notice that the &lt;code&gt;agent&lt;/code&gt; has a channel for responses, this is because your UDF can send data to Kapacitor at any time, so it does not need to be in a response to receive a point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4f011c32f89edb88b369b87a1c50daa7d047ff" translate="yes" xml:space="preserve">
          <source>Notice that the first timestamps in &lt;code&gt;downsampled_orders&lt;/code&gt; are older than the first timestamps in &lt;code&gt;orders&lt;/code&gt;. This is because InfluxDB has already deleted data from &lt;code&gt;orders&lt;/code&gt; with timestamps that are older than our local server&amp;rsquo;s timestamp minus two hours (assume we executed the &lt;code&gt;SELECT&lt;/code&gt; queries at &lt;code&gt;2016-05-13T00:59:59Z&lt;/code&gt;). InfluxDB will only start dropping data from &lt;code&gt;downsampled_orders&lt;/code&gt; after 52 weeks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b332b1d5598503412cc532366074e9c4417a9a95" translate="yes" xml:space="preserve">
          <source>Notice that the query returns &lt;code&gt;1970-01-01T00:00:00Z&lt;/code&gt;, InfluxDB&amp;rsquo;s null-timestamp equivalent, as the timestamp. &lt;code&gt;MIN()&lt;/code&gt; and &lt;code&gt;MAX()&lt;/code&gt; are &lt;a href=&quot;#selectors&quot;&gt;selector&lt;/a&gt; functions; when a selector function is the only function in the &lt;code&gt;SELECT&lt;/code&gt; clause, it returns a specific timestamp. Because &lt;code&gt;MIN()&lt;/code&gt; and &lt;code&gt;MAX()&lt;/code&gt; return two different timestamps (see below), the system overrides those timestamps with the null timestamp equivalent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5653fae64a860dfb3f943f7a1fcbc45d061b234d" translate="yes" xml:space="preserve">
          <source>Notice that the result is negative; the &lt;a href=&quot;../data_exploration/index#order-by-time-desc&quot;&gt;&lt;code&gt;ORDER BY time DESC&lt;/code&gt; clause&lt;/a&gt; sorts timestamps in descending order so &lt;code&gt;ELAPSED()&lt;/code&gt; calculates the difference between timestamps in reverse order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3761ccf9cc8c41dc37582342f86e9462c08e0117" translate="yes" xml:space="preserve">
          <source>Notice that the timestamps are for 7:15 and 8:15 instead of 7:00 and 8:00.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="034dcbc33baff73f764dc20b286961c87f0d8a63" translate="yes" xml:space="preserve">
          <source>Notice that the timestamps occur at rounded ten second intervals (that is, &lt;code&gt;:00&lt;/code&gt;, &lt;code&gt;:10&lt;/code&gt;, &lt;code&gt;:20&lt;/code&gt;, and so on) - this is a configurable setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f55176cb3739f849acd3d0b256b6a98f6f46e4" translate="yes" xml:space="preserve">
          <source>Notice that we fully qualify (that is, we use the syntax &lt;code&gt;&quot;&amp;lt;retention_policy&amp;gt;&quot;.&quot;&amp;lt;measurement&amp;gt;&quot;&lt;/code&gt;) &lt;code&gt;downsampled_orders&lt;/code&gt; in the second &lt;code&gt;SELECT&lt;/code&gt; statement. We must specify the RP in that query to &lt;code&gt;SELECT&lt;/code&gt; data that reside in an RP other than the &lt;code&gt;DEFAULT&lt;/code&gt; RP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04473432fa69a77399902457bd8c8a359f6c0804" translate="yes" xml:space="preserve">
          <source>Notice that we have called &lt;code&gt;tTest&lt;/code&gt; three times. This means that Kapacitor will spawn three different Python processes and pass the respective init option to each one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f91a4db1d1193cb5c91a52946d8b53022ba31d8" translate="yes" xml:space="preserve">
          <source>Notify users when local settings are cleared</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c32ccd35b2924ab24c603d7d070262c83232aa" translate="yes" xml:space="preserve">
          <source>Now InfluxDB will check user credentials on every request and will only process requests that have valid credentials for an existing user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00412f969ab745a02abfa04ad1b85257c3c143d0" translate="yes" xml:space="preserve">
          <source>Now all &lt;code&gt;system&lt;/code&gt; related alerts get sent to the &lt;code&gt;ops_team&lt;/code&gt; topic which in turn get handled in Victor Ops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1f9e59785a6bde7a130bdf74de4463a0d67c39d" translate="yes" xml:space="preserve">
          <source>Now define the task using the vars for the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559c5a432075f3c0d8ea92dc6e46b6adb0a2c2e2" translate="yes" xml:space="preserve">
          <source>Now for a fun little trick. Using Kapacitor&amp;rsquo;s record/replay actions we can actually run this TICKscript on historical data. First save the above script as &lt;code&gt;error_percent.tick&lt;/code&gt; and define it. Then create a recording for the past time frame we want.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b66a05bfc8994fd7c74b9b1ecb770580493e54f8" translate="yes" xml:space="preserve">
          <source>Now future commands will only be run against the &lt;code&gt;mydb&lt;/code&gt; database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27f3f88b10acc75331a21aa16a06dabfa8e927aa" translate="yes" xml:space="preserve">
          <source>Now grab that ID that was returned and let&amp;rsquo;s put it in a bash variable for easy use later (your ID will be different):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1011994f52af76db64fda48f24b66c086034d4fa" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s add in each of the methods needed to initialize the UDF. These next methods implement the behavior described in Step 3 of the UDF Lifecycle above, where Kapacitor connects to the socket in order to query basic information about the UDF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f26a78136d53e292c2451eb65253bd9d1bc20584" translate="yes" xml:space="preserve">
          <source>Now let&amp;rsquo;s change the UDF to add a field to the data. We can use the &lt;code&gt;Info/Init&lt;/code&gt; methods to define and consume an option on the UDF, so let&amp;rsquo;s specify the name of the field to add.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec0fc23fd01ad69eef3de64fbe386e993ba9e68" translate="yes" xml:space="preserve">
          <source>Now our &lt;code&gt;topPlayerScores&lt;/code&gt; variable contains each player&amp;rsquo;s most recent score. Next to calculate the top scores per game we just need to group by game and run another map reduce job. Let&amp;rsquo;s keep the top 15 scores per game. Add these lines to the &lt;code&gt;top_scores.tick&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4db8ce665e62eb21e5a376916ab1cf0d66157ed9" translate="yes" xml:space="preserve">
          <source>Now startup Kapacitor and it will discover the localhost:9100 node_exporter target and begin scrapping it for metrics. For more details on the scraping and discovery systems see the full documentation &lt;a href=&quot;../../scraping/index&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e56b6f3630429a60ca4a484c45258d86e50004" translate="yes" xml:space="preserve">
          <source>Now tail the alert log:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f8a2dd98b07b96fd5af5a29e02895ab11fc049c" translate="yes" xml:space="preserve">
          <source>Now that &lt;code&gt;butterflies&lt;/code&gt; and &lt;code&gt;honeybees&lt;/code&gt; are tags, InfluxDB won&amp;rsquo;t have to scan every one of their values when it performs the queries above - this means that your queries are even faster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ef39497eca3a66c029a6a9719455bde07faddf" translate="yes" xml:space="preserve">
          <source>Now that Kapacitor knows which edge types and options our UDF uses, we need to implement the methods for handling data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6df404e5c20c58c60f7f0a7c566e1dcb4c3234" translate="yes" xml:space="preserve">
          <source>Now that a TICKscript can define our new output node we need to actually provide an implementation so that Kapacitor knows what to do with the node. Each node in the &lt;code&gt;pipeline&lt;/code&gt; package has a node of the same name in the &lt;code&gt;kapacitor&lt;/code&gt; package. Create a file called &lt;code&gt;housedb_out.go&lt;/code&gt; and put it in the root of the repo. Put the contents below in the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47bbf862f252db09c9d07dfdcf5be27558f4286b" translate="yes" xml:space="preserve">
          <source>Now that our UDF is ready, we need to tell Kapacitor where our UDF socket is, and give it a name so that we can use it. Add this to your Kapacitor configuration file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fddcc2ffdd81c1a1e634552ec9c6e7b592db2d25" translate="yes" xml:space="preserve">
          <source>Now that the &lt;code&gt;mydb&lt;/code&gt; database is created, we&amp;rsquo;ll use the &lt;code&gt;SHOW DATABASES&lt;/code&gt; statement to display all existing databases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be7af292f0b62571472b73bdd704e95cbd55269" translate="yes" xml:space="preserve">
          <source>Now that the data is joined we can calculate the percentage. Using the new names for the fields we can write this expression to calculate our desired percentage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ff15fc635e2cc7c182282bbb1fc8f1278c8134e" translate="yes" xml:space="preserve">
          <source>Now that we have a database, InfluxDB is ready to accept queries and writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b9e652e0b63936b667278d6860dd91ef2912ef" translate="yes" xml:space="preserve">
          <source>Now that we have a struct let&amp;rsquo;s define a function for creating an instance of our new struct. The &lt;code&gt;new*Node&lt;/code&gt; methods in the &lt;code&gt;kapacitor&lt;/code&gt; package follow a convention of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d6aa771c424b2b53921a195ffbbd493e2b7095" translate="yes" xml:space="preserve">
          <source>Now that we have an idea of what we want to do, let&amp;rsquo;s understand how Kapacitor wants to communicate with our process. From the &lt;a href=&quot;https://github.com/influxdata/kapacitor/tree/master/udf/agent&quot;&gt;UDF README&lt;/a&gt; we learn that Kapacitor will spawn a process called an &lt;code&gt;agent&lt;/code&gt;. The &lt;code&gt;agent&lt;/code&gt; is responsible for describing what options it has, and then initializing itself with a set of options. As data is received by the UDF, the &lt;code&gt;agent&lt;/code&gt; performs its computation and then returns the resulting data to Kapacitor. All of this communication occurs over STDIN and STDOUT using protocol buffers. As of this writing, Kapacitor has agents implemented in Go and Python that take care of the communication details and expose an interface for doing the actual work. For this guide, we will be using the Python agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b12d0080ae95dd15b67005096e4ad9d69e506d06" translate="yes" xml:space="preserve">
          <source>Now that we have associated our two types let&amp;rsquo;s get back to implementing the output code. Notice the line &lt;code&gt;h.node.runF = h.runOut&lt;/code&gt; in the &lt;code&gt;newHouseDBOutNode&lt;/code&gt; function. This line sets the method of the &lt;code&gt;kapacitor.HouseDBOutNode&lt;/code&gt; that will be called when the node starts execution. Now we need to define the &lt;code&gt;runOut&lt;/code&gt; method. In the file &lt;code&gt;housedb_out.go&lt;/code&gt; add this method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aa2d6c16c433f482b2b979754aa7c26714f1652" translate="yes" xml:space="preserve">
          <source>Now that we have two batch sources for each measurement we need to join them like so.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d00fbc7cf83eea16d70a0766f8043eaec5999474" translate="yes" xml:space="preserve">
          <source>Now that we know it&amp;rsquo;s working, let&amp;rsquo;s change it back to a more reasonable threshold. Are you happy with the threshold? If so, let&amp;rsquo;s &lt;code&gt;enable&lt;/code&gt; the task so it can start processing the live data stream with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef854e6116962ffa290bc6c8ebf6b2415221810" translate="yes" xml:space="preserve">
          <source>Now that we know what we want to do, let&amp;rsquo;s write it in a way the Kapacitor understands. Put the script below into a file called &lt;code&gt;cpu_alert.tick&lt;/code&gt; in your working directory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39502eb70b12f228e5f7a2e68b17fb2d8ed9082a" translate="yes" xml:space="preserve">
          <source>Now that we understand the basics, here is a more real world example. Once you get metrics from all your hosts streaming to Kapacitor, you can do something like: Aggregate and group the cpu usage for each service running in each datacenter, and then trigger an alert based off the 95th percentile. In addition to just writing the alert to a log, Kapacitor can integrate with third-party utilities: currently Slack, PagerDuty and VictorOps are supported, as well as posting the alert to a custom endpoint or executing a custom script. You can also define a custom message format so that alerts have the right context and meaning. The TICKscript for this would look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb68f0c01b1b4250ca0d80a44b297894b76f45d4" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;re collecting data with Telegraf and storing data with InfluxDB, it&amp;rsquo;s time to install Chronograf to begin viewing and monitoring the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ee9ce1b9caab02ed7fec005b2d5c5c7950580b" translate="yes" xml:space="preserve">
          <source>Now that we&amp;rsquo;ve set up our RPs, we want to create a CQ that will automatically and periodically downsample the ten-second resolution data to the 30-minute resolution, and store those results in a different measurement with a different retention policy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="342fe027e71fb8a3fe5130af2f54b350aff389cb" translate="yes" xml:space="preserve">
          <source>Now that you have the general idea, check out our &lt;a href=&quot;../../introduction/getting_started/index&quot;&gt;Getting Started Guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c01a9f10ea48958922eca7b387e702e85776e5" translate="yes" xml:space="preserve">
          <source>Now that you know all about Line Protocol, how do you actually get the Line Protocol to InfluxDB? Here, we&amp;rsquo;ll give two quick examples and then point you to the &lt;a href=&quot;../../tools/index&quot;&gt;Tools&lt;/a&gt; sections for further information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7ea82baedad8d0f2a6b663dacfcf63c924ca10" translate="yes" xml:space="preserve">
          <source>Now that you know how to query data, check out the &lt;a href=&quot;../../query_language/data_exploration/index&quot;&gt;Data Exploration page&lt;/a&gt; to get acquainted with InfluxQL. For more information about querying data with the HTTP API, please see the &lt;a href=&quot;../../tools/api/index#query&quot;&gt;API reference documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7160e20869b01473889ae3943e255b054edae77" translate="yes" xml:space="preserve">
          <source>Now that you know how to write data with the built-in HTTP API discover how to query them with the &lt;a href=&quot;../querying_data/index&quot;&gt;Querying Data&lt;/a&gt; guide! For more information about writing data with the HTTP API, please see the &lt;a href=&quot;../../tools/api/index#write&quot;&gt;API reference documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dfe131cbebcf042986ba6da1427235650c00fc5" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;re familiar with measurements, tag sets, and retention policies it&amp;rsquo;s time to discuss series. In InfluxDB, a &lt;em&gt;series&lt;/em&gt; is the collection of data that share a retention policy, measurement, and tag set. The data above consist of four series:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323ac30aaacccb6fec2a12c67546fd88e56da902" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve seen some sample data in InfluxDB this section covers what it all means.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35ea325dde6f4366c05466e49de37caa0bccebe" translate="yes" xml:space="preserve">
          <source>Now update the handler and only alerts that changed state will be sent to Slack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40f7a80e15ed467ed8b2ff285f8d4308f176c12" translate="yes" xml:space="preserve">
          <source>Now we are spamming Kapacitor with our fake score data. We can just leave that running since Kapacitor will drop the incoming data until it has a task that wants it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a76942996b8ed5f3b3e12d49b2389ecf8240e3" translate="yes" xml:space="preserve">
          <source>Now we can set the field with its name and value on the points. Update the &lt;code&gt;Point&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d2442e07692c93d349cb643ee39afadc9ff7d8" translate="yes" xml:space="preserve">
          <source>Now we will query for the data we just wrote:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0bfe8d09588ce36d5aa4aacb0609285cb3a2eb" translate="yes" xml:space="preserve">
          <source>Now when the Window node every value is zero, the window will be emitted immediately for each new point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2981e0ad84c53a1efa82f07e802794e827402e1" translate="yes" xml:space="preserve">
          <source>Now with all the pieces in place, we can update our &lt;code&gt;main&lt;/code&gt; function to start up the &lt;code&gt;server&lt;/code&gt;. Replace the previously provided &lt;code&gt;main&lt;/code&gt; function with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51bd7f2c5b51affb3147bb7b28cdef2aad748fa2" translate="yes" xml:space="preserve">
          <source>Now you are ready to start listening on the destination port (&lt;code&gt;8089&lt;/code&gt; in this example) using a simple tool like &lt;code&gt;netcat&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fef1b7a7129001c45ae4c77046e160b6cb3017e" translate="yes" xml:space="preserve">
          <source>Now you can define a task that uses the template to alert on cpu usage. Create a file &lt;code&gt;cpu_vars.json&lt;/code&gt; with these contents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="847e58f67c051f634c73fc7340ab66bd886d1a38" translate="yes" xml:space="preserve">
          <source>Now you can see alerts in the log in real time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14e26d044113fb3496f71357183a155d27b89b30" translate="yes" xml:space="preserve">
          <source>Now, let&amp;rsquo;s check InfluxDB to see our historical data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aab1a0e832f034ecaf91c3a35f6641cd04ca710" translate="yes" xml:space="preserve">
          <source>Number between 0 and 1 indicating the approximate progress of the recording.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e12cf61cd960b38747a36b067b9d48695abb1b8" translate="yes" xml:space="preserve">
          <source>Number between 0 and 1 indicating the approximate progress of the replay.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8a108e74164be3a193a27b0cd5c7e7d1eae34a" translate="yes" xml:space="preserve">
          <source>Number of points to buffer when writing to InfluxDB. Default: 1000</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09bfc0b64291341af9b50f3c994873771d3ca322" translate="yes" xml:space="preserve">
          <source>Number of previous states to remember when computing flapping levels and checking for state changes. Minimum value is 2 in order to keep track of current and previous states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e53821f70ae16079c4a6a64c52a91fae645bc5f" translate="yes" xml:space="preserve">
          <source>Numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff8d198924efa232d47761515c1de6249701df8" translate="yes" xml:space="preserve">
          <source>Numbers are typed and are either a &lt;code&gt;float64&lt;/code&gt; or an &lt;code&gt;int64&lt;/code&gt;. If the number contains a decimal it is considered to be a &lt;code&gt;float64&lt;/code&gt; otherwise it is an &lt;code&gt;int64&lt;/code&gt;. All &lt;code&gt;float64&lt;/code&gt; numbers are considered to be in base 10. If an integer is prefixed with a &lt;code&gt;0&lt;/code&gt; then it is considered a base 8 (octal) number, otherwise it is considered base 10.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35737552a9d18fc935de2236a3330d431ffb22ec" translate="yes" xml:space="preserve">
          <source>OID of the trap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ce3bd4224c8c1780db56b4125ecf3f24bf748b7" translate="yes" xml:space="preserve">
          <source>OK</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9ef2ebd1200193bea21641d20c0ba65a186a94e" translate="yes" xml:space="preserve">
          <source>OK, at this point we should have a running InfluxDB + Telegraf setup. There should be some cpu metrics in a database called &lt;code&gt;kapacitor_example&lt;/code&gt;. Confirm this with this query:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a597f5c56cbf4a96761f2d3d476911dece6ce47d" translate="yes" xml:space="preserve">
          <source>OK, we have a snapshot of data recorded from the stream, so we can now replay that data to our task. The &lt;code&gt;replay&lt;/code&gt; action replays data only to a specific task. This way we can test the task in complete isolation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5471695a44eba76d9c9ede227a758e07ae3035" translate="yes" xml:space="preserve">
          <source>ORDER BY time DESC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a2bd9a70ce982237758081ad82771df83f89b1" translate="yes" xml:space="preserve">
          <source>OS X (via Homebrew)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="721d08e735584b019cf5b5ba846193b3d1e703b7" translate="yes" xml:space="preserve">
          <source>OS X &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aea64fc51142744971525f97ab5884dee294e677" translate="yes" xml:space="preserve">
          <source>OS X &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;: &lt;code&gt;/usr/local/etc/telegraf.conf&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47026beb36c6be85b15fcc59a915ec80121ea309" translate="yes" xml:space="preserve">
          <source>OSS InfluxDB User Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011a351552bf808b0e91b4860c7539428b892e42" translate="yes" xml:space="preserve">
          <source>Obtain a client ID and an application secret by following the steps under &amp;ldquo;Basic Steps&amp;rdquo; &lt;a href=&quot;https://developers.google.com/identity/protocols/OAuth2&quot;&gt;here&lt;/a&gt;. Chronograf will also need to be publicly accessible via a fully qualified domain name so that Google properly redirects users back to the application. This information should be set in the following environment variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73d713c7674ee6dfb043f6b406ae96ab49b3945" translate="yes" xml:space="preserve">
          <source>Obtain the telegraf windows distribution</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d57b6c3029631026246a5744dc753255d016b8" translate="yes" xml:space="preserve">
          <source>Of course, there are some major disparities between SQL databases and InfluxDB. SQL &lt;code&gt;JOIN&lt;/code&gt;s aren&amp;rsquo;t available for InfluxDB measurements; your schema design should reflect that difference. And, as we mentioned above, a measurement is like an SQL table where the primary index is always pre-set to time. InfluxDB timestamps must be in UNIX epoch (GMT) or formatted as a date-time string valid under RFC3339.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deec40969d5fa293c45b6e397ae7b6d4b1457c20" translate="yes" xml:space="preserve">
          <source>Official Windows service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce667716547fa82bc8795ad7ef205e9410193ed0" translate="yes" xml:space="preserve">
          <source>Offset</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382f2b62e18df5a993c059b8d7647c46ba70b149" translate="yes" xml:space="preserve">
          <source>Offset Time Boundary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bbd3981d6313ea1df0acfd3b946f07c5afc7f1" translate="yes" xml:space="preserve">
          <source>Offset count for paginating through tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6b0a4912689787d8b7411172aaad30d5114f28" translate="yes" xml:space="preserve">
          <source>Offset count for paginating through templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3990553db98dc9a4c12b5dc338b049e198c7a06" translate="yes" xml:space="preserve">
          <source>Offset interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d5e8653730bc91b7298f1fd0d3ea4ed54f6898" translate="yes" xml:space="preserve">
          <source>Often times we have set of series where each series is counting a particular event. Using Kapacitor we can join those series and calculate a combined value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2551a6175a76f678ceb6eeca18c4df181fe74687" translate="yes" xml:space="preserve">
          <source>Old point: &lt;code&gt;cpu_load,hostname=server02,az=us_west val_1=24.5,val_2=7 1234567890000000&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c319d3f196fbc65e30c76cc5fed7d531d77649d" translate="yes" xml:space="preserve">
          <source>Old point: &lt;code&gt;cpu_load,hostname=server02,az=us_west,uniq=1 val_1=24.5,val_2=7 1234567890000000&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0049a66519cae71159800bb77a35007bc2d76d3" translate="yes" xml:space="preserve">
          <source>On</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4026457a7347aacd5bd0561bd113efc0a62ba7e6" translate="yes" xml:space="preserve">
          <source>On System V operating systems logs are stored under &lt;code&gt;/var/log/influxdb/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18efb0aec13e67957afd8922627e0c763d0dfb8" translate="yes" xml:space="preserve">
          <source>On most systems, the default locations are &lt;code&gt;/etc/telegraf/telegraf.conf&lt;/code&gt; for the main configuration file and &lt;code&gt;/etc/telegraf/telegraf.d&lt;/code&gt; for the directory of configuration files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51379438baaabb606422c5767e8e677df389b62" translate="yes" xml:space="preserve">
          <source>On occasion when a new feature is added to Kapacitor it may be added in a technical preview for a few minor releases and then later promoted to fully fledged v1 feature. Preview means that the newly added features may be changed in backwards incompatible ways until they are promoted to v1 features. Using technical preview allows for new features to fully mature while maintaining regularly scheduled releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef017bec22591bd0634928424e73989313fb15c" translate="yes" xml:space="preserve">
          <source>On systemd Telegraf will no longer redirect it&amp;rsquo;s stdout to /var/log/telegraf/telegraf.log. On most systems, the logs will be directed to the systemd journal and can be accessed by &lt;code&gt;journalctl -u telegraf.service&lt;/code&gt;. Consult the systemd journal documentation for configuring journald. There is also a &lt;a href=&quot;https://github.com/influxdata/telegraf/blob/master/etc/telegraf.conf#L70&quot;&gt;&lt;code&gt;logfile&lt;/code&gt; config option&lt;/a&gt; available in 1.1, which will allow users to easily configure telegraf to continue sending logs to /var/log/telegraf/telegraf.log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b754531e83fb2d4c9658ff251eb2fb93d5e80093" translate="yes" xml:space="preserve">
          <source>On systemd operating systems you can access the logs using &lt;code&gt;journalctl&lt;/code&gt;. Use &lt;code&gt;journalctl -u influxdb&lt;/code&gt; to view the logs in the journal or &lt;code&gt;journalctl -u influxdb &amp;gt; influxd.log&lt;/code&gt; to print the logs to a text file. With systemd, log retention depends on your system&amp;rsquo;s journald settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253eda828faf463ae2e722b272ecaf529d4c1010" translate="yes" xml:space="preserve">
          <source>On the &lt;code&gt;Admin&lt;/code&gt; page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5e1d5aded47006913b78a69c1a088dd9277f1e" translate="yes" xml:space="preserve">
          <source>Once Telegraf is up and running it will start collecting data and writing them to the desired output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c71dd43b9ebf4a856b0b322d97885d1e955885b7" translate="yes" xml:space="preserve">
          <source>Once repository is added to the &lt;code&gt;yum&lt;/code&gt; configuration, install and start the InfluxDB service by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a519bf90e77ab5b93215d66b4be3e6ad06c70709" translate="yes" xml:space="preserve">
          <source>Once repository is added to the &lt;code&gt;yum&lt;/code&gt; configuration, install and start the Telegraf service by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65c4b71655666020bea78553aa2e7d94ca80bbc" translate="yes" xml:space="preserve">
          <source>Once the data and metastore are recovered, it&amp;rsquo;s time to start the database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="351a4e53c6244d8497833d568100bde0339a6cdd" translate="yes" xml:space="preserve">
          <source>Once the metastore has been restored, we can now recover the backed up data. In the real-world example above, we backed up the &lt;code&gt;telegraf&lt;/code&gt; database to &lt;code&gt;/tmp/backup&lt;/code&gt;, so let&amp;rsquo;s restore that same dataset. To restore the &lt;code&gt;telegraf&lt;/code&gt; database:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09247e58ae1cefff60de2f5a399e1b028519b09c" translate="yes" xml:space="preserve">
          <source>Once the recording is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3592f384d35a6de518ae3812f4e3b7d0ae4ff5" translate="yes" xml:space="preserve">
          <source>Once the replay is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f84230d8b49f2054dad3c7660e31f08b20504609" translate="yes" xml:space="preserve">
          <source>Once the service is created, you'll be taken to the service page. On this page, you'll see the &quot;Service key&quot;, which is needed to access the API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41b175fbed451f82db48c48a45467f644eda5c9" translate="yes" xml:space="preserve">
          <source>Once the service is created, you'll see the &quot;Generate Webhook url&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a2e77eb131f16f9e332fcbe21089751a0232e7" translate="yes" xml:space="preserve">
          <source>Once we have implemented the &lt;code&gt;write&lt;/code&gt; method we are done. As the data arrives at the &lt;code&gt;HouseDBOutNode&lt;/code&gt;, it will be written to the specified HouseDB instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2142dc14cb7e31c5db1157462117e3357229eff" translate="yes" xml:space="preserve">
          <source>Once we have the data files selected, we next need to find the position in the file of the series key index entries. We run a binary search against each TSM index to find the location of its index blocks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b518d22ce532ed50f23f933cbb50622c5878cd2a" translate="yes" xml:space="preserve">
          <source>Once you have Telegraf&amp;rsquo;s output arriving to your &lt;code&gt;nc&lt;/code&gt; socket, you can enable the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/inputs/socket_listener&quot;&gt;inputs.socket_listener&lt;/a&gt; plugins to submit some sample metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efda805aef064398897324d00b55312546cd2b00" translate="yes" xml:space="preserve">
          <source>Once you understand the language itself, it&amp;rsquo;s important to know how these language constructs are implemented in the query engine. This gives you an intuitive sense for how results will be processed and how to create efficient queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86991a0d08388dc9b8c4d9fd1f537e673d3911f2" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;enabled&lt;/code&gt; or &lt;code&gt;disabled&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccb4f00126b8bcc3c528ddfc7209987bca8a86bd" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;fast&lt;/code&gt; or &lt;code&gt;real&lt;/code&gt;. If &lt;code&gt;real&lt;/code&gt; wait for real time to pass corresponding with the time in the recordings. If &lt;code&gt;fast&lt;/code&gt; replay data without delay. For example, if clock is &lt;code&gt;real&lt;/code&gt; then a stream recording of duration 5m will take 5m to replay.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4bad57561acfa79bf5dae4997d870d63686206" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;formatted&lt;/code&gt; or &lt;code&gt;raw&lt;/code&gt;. Raw will return the script identical to how it was defined. Formatted will first format the script.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4fde00f4333268b38c60189e30f02591fbc92b3" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;labels&lt;/code&gt; or &lt;code&gt;attributes&lt;/code&gt;. Labels is less readable but will correctly render with all the information contained in labels.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="038aa4edab4f79467589ab49adb1581571f7f220" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;failed&lt;/code&gt; or &lt;code&gt;finished&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54aff4b8de3667a2667fe3c45abbdc75da25b786" translate="yes" xml:space="preserve">
          <source>One of the biggest problems we found with time series data is that it&amp;rsquo;s very common to delete all data after it gets past a certain age. The common pattern here is that users have high precision data that is kept for a short period of time like a few days or months. Users then downsample and aggregate that data into lower precision rollups that are kept around much longer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5853da082836b264813d3881bae18dc759c200e8" translate="yes" xml:space="preserve">
          <source>One of the more important aspects of the 1.0 release is that this marks the stabilization of our API and storage format. Over the course of the last three years we&amp;rsquo;ve iterated aggressively, often breaking the API in the process. With the release of 1.0 and for the entire 1.x line of releases we&amp;rsquo;re committing to the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ff2c3cf38c078462ac8fc0d0c67b0fc55d49bf" translate="yes" xml:space="preserve">
          <source>One point will be emitted every count or duration specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b08e5b19812e51a7fd40dcee2cfa04929fa167d" translate="yes" xml:space="preserve">
          <source>One thing this data has in common is that it is more useful in the aggregate. One reading saying that your computer&amp;rsquo;s CPU is at 12% utilization at 12:38:35 UTC on a Tuesday is hard to draw conclusions from. It becomes more useful when combined with the rest of the series and visualized. This is where trends over time begin to show, and actionable insight can be drawn from the data. In addition, time series data is generally written once and rarely updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db8a936042954cac93f79a9075bd3a60c9fee0e" translate="yes" xml:space="preserve">
          <source>Ongoing support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f55caf636d2e53fd274fac3c248d29eae778f0a" translate="yes" xml:space="preserve">
          <source>Only admin users are allowed to work with CQs. For more on user privileges, see &lt;a href=&quot;../authentication_and_authorization/index#user-types-and-their-privileges&quot;&gt;Authentication and Authorization&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f073aef01e1763f7580432ebd87d4828683434fb" translate="yes" xml:space="preserve">
          <source>Only applies to selector functions like first, last, top, bottom, etc. Aggregation functions always use the batch time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8d65de7f7673856d823ac9b5d99aca88c8567b" translate="yes" xml:space="preserve">
          <source>Only decimal digits are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7aecd4779777a3e51b49d3991c61482e3c3b9dd0" translate="yes" xml:space="preserve">
          <source>Only display index and block data that match this key substring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21832eddc328c3cbd90542b6c9c00554bd3d93d" translate="yes" xml:space="preserve">
          <source>Only one decrease event can be triggered per resource every DecreaseCooldown interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5419847dd911afee2aa5b335e69708bf7d203f5" translate="yes" xml:space="preserve">
          <source>Only one increase event can be triggered per resource every IncreaseCooldown interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b2e1e59825e81c2c87328c50e3a2d1095c6b86e" translate="yes" xml:space="preserve">
          <source>Only return events that are greater or equal to the min-level. Valid values include OK, INFO, WARNING, CRITICAL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb2998c5cf23f33b56efa71e373c4fda6b5b9b20" translate="yes" xml:space="preserve">
          <source>Only return topics that are greater or equal to the min-level. Valid values include OK, INFO, WARNING, CRITICAL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48db230c01710d60b5e7b10c2fb1dfcd2e730b01" translate="yes" xml:space="preserve">
          <source>Only sends events where the state changed. Each different alert level OK, INFO, WARNING, and CRITICAL are considered different states.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4139adbd30d7b42342cf3721f1451648fd481b65" translate="yes" xml:space="preserve">
          <source>Open-source InfluxDB does not support clustering. For high availability or horizontal scaling of InfluxDB, please investigate our commercial clustered offering, &lt;a href=&quot;https://docs.influxdata.com/enterprise/v1.3/&quot;&gt;InfluxEnterprise&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745af3631d3a2c32070fba74e6dc23e9f5ad0c69" translate="yes" xml:space="preserve">
          <source>Open-source InfluxDB does not support clustering. For high availability or horizontal scaling of InfluxDB, please investigate our commercial clustered offering, &lt;a href=&quot;https://portal.influxdata.com/&quot;&gt;InfluxEnterprise&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0324700e62c38a1c9b7288e66fbe9c56105b5deb" translate="yes" xml:space="preserve">
          <source>OpenTSDB basic auth support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600ce78aad5fcbc7e55ccc584b60a3cf0e5a1eda" translate="yes" xml:space="preserve">
          <source>OpenTSDB: add tcp:// prefix if no scheme provided.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e90414358dbfff0a68e4eb5d68a16978cf197d5a" translate="yes" xml:space="preserve">
          <source>Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3ae4df3ee0b8eb78ef89ac4f0760950e88537d" translate="yes" xml:space="preserve">
          <source>OpsGenie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b46f6e68ff6abc1fd084301bec83d9d44fca1402" translate="yes" xml:space="preserve">
          <source>OpsGenie &amp;ndash; Send alert to OpsGenie.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade9bd137243e846ee26b53f51a3a3e4dc0d4e05" translate="yes" xml:space="preserve">
          <source>OpsGenie Recipients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b179407a1fe91dd6b686af0ff109ec564edeaa5" translate="yes" xml:space="preserve">
          <source>OpsGenie Teams</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3592a385017787b7a5ae72a93189942ac36ef812" translate="yes" xml:space="preserve">
          <source>Opsgenie</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb8ea1d5f3facddd25f8a65103054e933d578fe" translate="yes" xml:space="preserve">
          <source>Optimize first/last when no group by interval is present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0201a6300436314c274f72a2515130e44822468" translate="yes" xml:space="preserve">
          <source>Optimize queries that compare a tag value to an empty string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b57f7130d3a3b6ae19690fc9a8858cf6a3816d" translate="yes" xml:space="preserve">
          <source>Optimize shard loading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aea29de0802ebf4346fee8597661018d605f69a" translate="yes" xml:space="preserve">
          <source>Optimize timestamp run-length decoding.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ce516321856cf9abfd56c70291d040b131bc40" translate="yes" xml:space="preserve">
          <source>Optimize top() and bottom() using an incremental aggregator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4c05ecc66e482c4a65e3c10940d3feae775a98" translate="yes" xml:space="preserve">
          <source>Option to use device name rather than path for reporting disk stats.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6c4102d4dfec3b1aa41117e0e344046c58a151" translate="yes" xml:space="preserve">
          <source>Optional</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9e0d563930418a118792fc941ee3196fae8681" translate="yes" xml:space="preserve">
          <source>Optional Auth0 Organizations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a464bd5bb918be8a8efc987cc67d4bdd6c735c" translate="yes" xml:space="preserve">
          <source>Optional Email domains</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa791f557ff41f12be741706f93d046e8131780" translate="yes" xml:space="preserve">
          <source>Optional Github Organizations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ceb7a4914d009acaa76f1b581a0a81756816bd" translate="yes" xml:space="preserve">
          <source>Optional Google Domains</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a99c7437d88def870f5cff75f64c332559fd6d7" translate="yes" xml:space="preserve">
          <source>Optional Heroku Organizations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="579d9675f3d1eaf2ca1fe76fa1d2e5cc7e692bee" translate="yes" xml:space="preserve">
          <source>Optional ID of a running replay. The returned task information will be in the context of the task for the running replay.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078168e4ac42ac5f6b98f2e3647d83d2d874e732" translate="yes" xml:space="preserve">
          <source>Optional Scopes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253b79da94162c760d27426101ebb491aa2e07d6" translate="yes" xml:space="preserve">
          <source>Optional duration for rounding timestamps. Helpful to ensure data points land on specific boundaries Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea27a624f380f1eae37f568f8efc915cd0c2be6" translate="yes" xml:space="preserve">
          <source>Optional duration for truncating timestamps. Helpful to ensure data points land on specific boundaries Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e9f240d3d18b3bbe60640b58ebde147becd0028" translate="yes" xml:space="preserve">
          <source>Optional field key to add the alert duration to the data. The duration is always in units of nanoseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08739866e74ee61169ecbc5c8e44763fa1fb2e8c" translate="yes" xml:space="preserve">
          <source>Optional field key to add to the data, containing the alert ID as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62c49aedec5f843afe3c0b709693ca5d634e8c2" translate="yes" xml:space="preserve">
          <source>Optional field key to add to the data, containing the alert level as a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80bbe7433bbab21270324b3d75426233aa5916db" translate="yes" xml:space="preserve">
          <source>Optional field key to add to the data, containing the alert message.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4336bcce8f5d774ce1abe48ab97c337ad484906" translate="yes" xml:space="preserve">
          <source>Optional if you haven&amp;rsquo;t &lt;a href=&quot;../../query_language/authentication_and_authorization/index#set-up-authentication&quot;&gt;enabled authentication&lt;/a&gt;. Required if you&amp;rsquo;ve enabled authentication.*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1554796426ff9a7a5ea9a0ea1a0471d7fc4163cf" translate="yes" xml:space="preserve">
          <source>Optional if you haven&amp;rsquo;t &lt;a href=&quot;../../query_language/authentication_and_authorization/index#set-up-authentication&quot;&gt;enabled authentication&lt;/a&gt;. Required if you&amp;rsquo;ve enabled authentication.**</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6646c8cbd3cf022014e383fab006a4860c37b54b" translate="yes" xml:space="preserve">
          <source>Optional prefix to add to all log messages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9324b416bf37f93341f667e093efcb62062360e" translate="yes" xml:space="preserve">
          <source>Optional tag key to use when tagging the data with the alert ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1497132835e1b893e9261159266b8968d504a5d" translate="yes" xml:space="preserve">
          <source>Optional tag key to use when tagging the data with the alert level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2ed0630134939f869db10bb77b7f8f7338d4631" translate="yes" xml:space="preserve">
          <source>Optional, available with &lt;a href=&quot;https://docs.influxdata.com/enterprise/v1.3/&quot;&gt;InfluxEnterprise clusters&lt;/a&gt; only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b66bd0490eb916642387aa89b4cd3727a52def" translate="yes" xml:space="preserve">
          <source>Optional. InfluxDB uses the server&amp;rsquo;s local nanosecond timestamp in UTC if the timestamp is not included with the point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40243999df1d08065bff5e408b7d2b6447739c24" translate="yes" xml:space="preserve">
          <source>Optional/Required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae333bfb59505afa02a922a84f24b00e0a6672fe" translate="yes" xml:space="preserve">
          <source>Optional: Configure an Authentication Duration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a6413ab2548dd56ec7fa55ed5733dfa71365cf" translate="yes" xml:space="preserve">
          <source>Optionally specify a glob &lt;code&gt;pattern&lt;/code&gt; to list only matching tasks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72eaf925c0112dfb83fd5765a71a09ed3bb2c2c" translate="yes" xml:space="preserve">
          <source>Optionally specify a glob &lt;code&gt;pattern&lt;/code&gt; to list only matching templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657632c59eb53d1d1334ae68435fe69f46a58348" translate="yes" xml:space="preserve">
          <source>Optionally, intermediate values can be discarded by passing a list of field names to be kept. Only fields in the list will be retained, the rest will be discarded. If no list is given then all fields are retained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce8c3a64f04984b4f358fbfd4f3fa545ea19bdf" translate="yes" xml:space="preserve">
          <source>Options - A map of values, differs by kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdd0b506837a990803d8edf137f2934329835748" translate="yes" xml:space="preserve">
          <source>Options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940affb8a162559371a4906814acfb5e4bd512ab" translate="yes" xml:space="preserve">
          <source>Or if the recording fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a635665941f237bf297c81f97888e158c8dc98" translate="yes" xml:space="preserve">
          <source>Or if the replay fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097f37db6ddd1008a29fbfbf0b93308f20f0a392" translate="yes" xml:space="preserve">
          <source>Or if your operating system is using systemd (CentOS 7+, RHEL 7+):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ff117ff06d86fa02297120f9aece63a72af44a6" translate="yes" xml:space="preserve">
          <source>Or if your operating system is using systemd (Ubuntu 15.04+, Debian 8+):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffae53ae7bf406bf6e7472db757213a142ca267d" translate="yes" xml:space="preserve">
          <source>Or, for systemd systems logging to journald:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa7c526f1b7f7db408f640b45e7e40b69a5c489" translate="yes" xml:space="preserve">
          <source>Or, if you don&amp;rsquo;t want/need &lt;code&gt;lanchctl&lt;/code&gt;, you can just run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3cdb883dfd79505c9bd8499ab164cbc6794ec9e" translate="yes" xml:space="preserve">
          <source>Or, if you don&amp;rsquo;t want/need launchctl, in a separate terminal window you can just run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a12651be90b6d82198f4028acefe17b8ab39af" translate="yes" xml:space="preserve">
          <source>Or, if you don&amp;rsquo;t want/need launchctl, you can just run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3abfa797a4afe468ec6cce771dc7701bdcdee57" translate="yes" xml:space="preserve">
          <source>Organizing data into shards meant that it could be moved within a cluster without having to examine billions of keys. At the time of this writing, it was not possible to move a column family in one RocksDB to another. Old shards are typically cold for writes so moving them around would be cheap and easy. We would have the added benefit of having a spot in the keyspace that is cold for writes so it would be easier to do consistency checks later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cb6f2fb01dfa81e12bc1e11f0e7b676e54669fd" translate="yes" xml:space="preserve">
          <source>Other Options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a8a532c781422423bfb1f4707c4e213a77c10e" translate="yes" xml:space="preserve">
          <source>Other options when querying data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7bfa5684a66979424673bab3e930968b9d522c" translate="yes" xml:space="preserve">
          <source>Other supported features: &lt;a href=&quot;#regular-expressions&quot;&gt;Regular Expressions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d46dc350608e1a4129161900721a6ed79afa9ef" translate="yes" xml:space="preserve">
          <source>Other supported features: &lt;a href=&quot;../math_operators/index&quot;&gt;Arithmetic Operations&lt;/a&gt;, &lt;a href=&quot;#regular-expressions&quot;&gt;Regular Expressions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6068fda4b00238f58c1ffbb68bddcd8147fded3" translate="yes" xml:space="preserve">
          <source>Other supported features: &lt;a href=&quot;../math_operators/index&quot;&gt;Arithmetic Operations&lt;/a&gt;, &lt;a href=&quot;../functions/index&quot;&gt;Functions&lt;/a&gt;, &lt;a href=&quot;#data-types-and-cast-operations&quot;&gt;Basic Cast Operations&lt;/a&gt;, &lt;a href=&quot;#regular-expressions&quot;&gt;Regular Expressions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5c53ecc7c365fd70983f3ffe79c10ab1c8d84e" translate="yes" xml:space="preserve">
          <source>Other supported operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4f08e21f3b6b9182dd7327555f8d18415e6924" translate="yes" xml:space="preserve">
          <source>Our example is going to implement a &lt;code&gt;mirror&lt;/code&gt; UDF which simply reflects all data it receives back to the Kapacitor server. This example is actually part of the test suite and a Python and Go implementation can be found &lt;a href=&quot;https://github.com/influxdata/kapacitor/tree/master/udf/agent/examples/mirror&quot;&gt;here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae6f1d4a9c430606bdbba81c93717bfdf600cd22" translate="yes" xml:space="preserve">
          <source>Our first order of business is to configure Kapacitor to receive the stream of scores. In this case the scores update too often to store all of them in InfluxDB so we will send them directly to Kapacitor. Like InfluxDB you can configure a UDP listener. Add this configuration section to the end of your Kapacitor configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26f9f967776daac0b5030af8f35576948f96d7d" translate="yes" xml:space="preserve">
          <source>Our task wants a &lt;code&gt;batch&lt;/code&gt; edge, meaning it expects to get data in batches or windows. To send a batch of data to the UDF process, Kapacitor first calls the &lt;code&gt;begin_batch&lt;/code&gt; method, which indicates that all subsequent points belong to a batch. Once the batch is complete, the &lt;code&gt;end_batch&lt;/code&gt; method is called with some metadata about the batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0a14423b57754f80c0887ac869548420ad953c7" translate="yes" xml:space="preserve">
          <source>Our users needed a way to automatically manage data retention. That meant we needed deletes on a very large scale. In LSM Trees, a delete is as expensive, if not more so, than a write. A delete writes a new record known as a tombstone. After that queries merge the result set with any tombstones to purge the deleted data from the query return. Later, a compaction runs that removes the tombstone record and the underlying deleted record in the SSTable file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cfca5382fccd74b632a3eee5771481db2784e17" translate="yes" xml:space="preserve">
          <source>Out of memory when using HTTP API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f8968bfc04a90af9721e1673d446218d17ddc5" translate="yes" xml:space="preserve">
          <source>Output Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241ca31954f81e878070399b49817a6db562277e" translate="yes" xml:space="preserve">
          <source>Output Configuration Examples:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61fbbfcf4ffbeb2dfc1a88d9788153be56061112" translate="yes" xml:space="preserve">
          <source>Output Data Formats</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17eb4645a03b2a32a7d826ac536a4fc8e03bc27c" translate="yes" xml:space="preserve">
          <source>Output plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f915c2b020124d4d036989e7f8c9e870961c53c5" translate="yes" xml:space="preserve">
          <source>Output plugins deliver metrics to their configured destination. In order to activate an output plugin, it needs to be enabled and configured in Telegraf&amp;rsquo;s configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99d44878af2f597639563f40206b4358937aeb9" translate="yes" xml:space="preserve">
          <source>Overriding the configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef54d43680a04a471acc3c3497259451c71fe7c3" translate="yes" xml:space="preserve">
          <source>Overwriting points on large series can cause memory spikes during compactions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e5394fbf43f9ac187607d64eaa344ec3417273" translate="yes" xml:space="preserve">
          <source>PATCH will apply JSON patch object to the existing handler, see &lt;a href=&quot;https://tools.ietf.org/html/rfc6902&quot;&gt;rfc6902&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a286fcda45f03e92351984253c69a62d5845b8" translate="yes" xml:space="preserve">
          <source>PERCENTILE()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7daf403c7589f4927632ed3b6af762a992f09b78" translate="yes" xml:space="preserve">
          <source>PHP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0cfabdafacd4e028adc6ab85ee5dce577aa6d1c" translate="yes" xml:space="preserve">
          <source>PHPfpm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ff81c30aa3c76e78afea62b2e3bd1dfa49e854" translate="yes" xml:space="preserve">
          <source>POST</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac31a9cd7ca089b1d90245784e1b87eddcc26e15" translate="yes" xml:space="preserve">
          <source>PagerDuty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d1ea0b3a1f33edef543be5f94b941f263568ee" translate="yes" xml:space="preserve">
          <source>PagerDuty &amp;ndash; Send alert to PagerDuty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73156b4026ff2ceb5ae89707b479c365bb278322" translate="yes" xml:space="preserve">
          <source>PagerDuty ServiceKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cbee731f704f42198c2e02538091fe94c1d700" translate="yes" xml:space="preserve">
          <source>Pagerduty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268d01b4c90b90569e8150137900b972ba03c587" translate="yes" xml:space="preserve">
          <source>Panic fix for multiple graphite outputs under very high load.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9f60161e892d7d3ae708d7c973ef49cef23f60a" translate="yes" xml:space="preserve">
          <source>Panic with unread show series iterators during drop database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819656cf4660d2d96880e2229cc977cb2b64bea4" translate="yes" xml:space="preserve">
          <source>Parallelize iterators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f699f295e5ae4ac633cfa18437fed38d028b3fdb" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a122c9e2ffcaf0fcec3b0b2778d23f591eb48c99" translate="yes" xml:space="preserve">
          <source>Parse node, defaults to Mardown If empty uses the parse-mode from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc909695aeec8e76fbad2dd72758e5c26b60a0c4" translate="yes" xml:space="preserve">
          <source>Parse node, defaults to Mardown. If empty uses the parse-mode from the configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e254d2e6c879b5832fafefa6809d3735b7d2bf1" translate="yes" xml:space="preserve">
          <source>Partial fix: logparser CLF pattern with IPv6 addresses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2432a8d89a28238303bf0abd00c0bdaaf778d60" translate="yes" xml:space="preserve">
          <source>Passing addresses to the &lt;code&gt;email&lt;/code&gt; property directly or using the &lt;code&gt;email.to&lt;/code&gt; property is the same.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ee5521c235d537e433723fd183f63abb291af46" translate="yes" xml:space="preserve">
          <source>Password protect your InfluxDB instance to keep any unauthorized individuals from accessing your data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4084779dd43482ee99abbe2e945b145aeedba3ff" translate="yes" xml:space="preserve">
          <source>Path to program to execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02b36a4243283b889caf6fcdd3d63a7db18b535" translate="yes" xml:space="preserve">
          <source>Path to the log file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="361ec88484558be2552667f478c527c99245b60c" translate="yes" xml:space="preserve">
          <source>Percentile</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116e95f6dba446577130194c649bbe333d6ab934" translate="yes" xml:space="preserve">
          <source>Perform a mathematical operation on a regular expression within a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0716cf305c301e18f89f42c89aef86c6e3f66cc9" translate="yes" xml:space="preserve">
          <source>Perform a mathematical operation on a regular expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2daee6daa5e5a2a4d244f1353ad73360567572" translate="yes" xml:space="preserve">
          <source>Perform a mathematical operation on a wildcard within a function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20b7ee4d64aa30202dd3b951e465f0e4d8e8f3ba" translate="yes" xml:space="preserve">
          <source>Perform a mathematical operation on a wildcard.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eefdaa3b76f0101b7a1dfd4f603738af06d609fe" translate="yes" xml:space="preserve">
          <source>Perform a replay using the &lt;code&gt;batch&lt;/code&gt; method specifying a start time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0f3c3901206c0d9e8b360b315ffc24151b8450f" translate="yes" xml:space="preserve">
          <source>Perform addition on two fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455773a735486f6f5f094a21d39739228e585e12" translate="yes" xml:space="preserve">
          <source>Perform addition with a constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c98948d556344369017f4cb826759f0ba818b5a" translate="yes" xml:space="preserve">
          <source>Perform division with a constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42a617bda3a38c1b4a7ffece19131038782a5ad2" translate="yes" xml:space="preserve">
          <source>Perform division with two fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a842903f54b9b61ac4ff12bd9651b414c0f24d" translate="yes" xml:space="preserve">
          <source>Perform flap detection on the alerts. The method used is similar method to Nagios: &lt;a href=&quot;https://assets.nagios.com/downloads/nagioscore/docs/nagioscore/3/en/flapping.html&quot;&gt;https://assets.nagios.com/downloads/nagioscore/docs/nagioscore/3/en/flapping.html&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d4d462cae4efb86650401fa8cad40c04bb692c" translate="yes" xml:space="preserve">
          <source>Perform modulo arithmetic on two fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a15070d059115b6e3cfdba6a5b336d60c9edf61" translate="yes" xml:space="preserve">
          <source>Perform modulo arithmetic with a constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e42ed1e36a7dc18bdf0cd35531631d9f428d1ac0" translate="yes" xml:space="preserve">
          <source>Perform multiplication with a constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b1bb53c9b9e76091ce82341d8403852bcda870" translate="yes" xml:space="preserve">
          <source>Perform multiplication with two fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c700ea15e4e84d4bfe0e77f1a5595a05a253b14c" translate="yes" xml:space="preserve">
          <source>Perform subtraction with a constant.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7bc4571b965437e47c9a181e341c0cde5545a7b" translate="yes" xml:space="preserve">
          <source>Perform subtraction with two fields.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9218d1112e899ba28293a948d0922f634246789d" translate="yes" xml:space="preserve">
          <source>Perform the union of this node and all other given nodes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4578bc145b263531ed4b62ca3b43431082e3c98" translate="yes" xml:space="preserve">
          <source>Performance and Setup Tips:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81eff070988491c2c5828c2f1cf4b945558baa5" translate="yes" xml:space="preserve">
          <source>Performance at this scale is a significant challenge and may not be achievable. Please contact us at &lt;a href=&quot;mailto:sales@influxdb.com&quot;&gt;sales@influxdb.com&lt;/a&gt; for assistance with tuning your systems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfbfbcf194389f25c765474df5fbec0404d15e94" translate="yes" xml:space="preserve">
          <source>Performing downsampling for retention policies. This is what CQs are designed for and do well. No need to add another moving piece (i.e. Kapacitor) to your infrastructure if you do not need it. Keep it simple.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="170a28a9db6d27d7212fc6dc249434a57517e7bc" translate="yes" xml:space="preserve">
          <source>Period</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3d7f2bb0842fecab1ebabfba3b17f187b79fea" translate="yes" xml:space="preserve">
          <source>PeriodCount</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ce3618af79b06ffd17add76082504db04667d7" translate="yes" xml:space="preserve">
          <source>PeriodCount is the number of points per window.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f111d810e7ca920bda8f128569fc002610c45314" translate="yes" xml:space="preserve">
          <source>Perl</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ce3e64890f7a4a55ca50d7d8b77b32b106daa42" translate="yes" xml:space="preserve">
          <source>Permission to access the API for InfluxEnterprise Kapacitor. This does not include configuration-related API calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e299e8e4659e928365f5b7a978b484e9940e0f" translate="yes" xml:space="preserve">
          <source>Permission to access the configuration-related API calls for InfluxEnterprise Kapacitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="527a7c2c650d704038de57a2de265078f081f851" translate="yes" xml:space="preserve">
          <source>Permission to add or remove nodes from a cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc610f09cf06748f4f96f4268a8d8db7ab0a826a" translate="yes" xml:space="preserve">
          <source>Permission to copy shards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d5c602dc7ac4d1ebf30ae5fb1371f7af6a4bdf0" translate="yes" xml:space="preserve">
          <source>Permission to copy, delete, and view &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#shard&quot;&gt;shards&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="640e11261d6032cb587192f4cd0a864398d74dd6" translate="yes" xml:space="preserve">
          <source>Permission to create databases, create &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#retention-policy-rp&quot;&gt;retention policies&lt;/a&gt;, alter retention policies, and view retention policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d6aa3222585802cd9449c899a7131541ab90df" translate="yes" xml:space="preserve">
          <source>Permission to create, drop, and view &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#continuous-query-cq&quot;&gt;continuous queries&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15317e5be12c852ebc7c319701a09e8874034bb9" translate="yes" xml:space="preserve">
          <source>Permission to create, drop, and view &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#subscription&quot;&gt;subscriptions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499bff256f796884014023ddb182fcc61bf5a957" translate="yes" xml:space="preserve">
          <source>Permission to drop data, in particular &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; and &lt;a href=&quot;../../../../influxdb/v1.3/concepts/glossary/index#measurement&quot;&gt;measurements&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba58a477bd618aeea5c43e017ac81418b72dad23" translate="yes" xml:space="preserve">
          <source>Permission to drop databases and retention policies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7f5e0338c4e74495e917cee7b1ada389603199" translate="yes" xml:space="preserve">
          <source>Permission to manage users and roles; create users, drop users, grant admin status to users, grant permissions to users, revoke admin status from users, revoke permissions from users, change user&amp;rsquo;s passwords, view user permissions, and view users and their admin status.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093b5e31ca81118857058315bc0173662b5d89f0" translate="yes" xml:space="preserve">
          <source>Permission to read data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76a5e27de86c9accacf0136528dd127e6c2c257" translate="yes" xml:space="preserve">
          <source>Permission to run to view cluster statistics and diagnostics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a9ddbbdf3a433d1059d1688396a4c538cba332" translate="yes" xml:space="preserve">
          <source>Permission to view and kill queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="870e70c4df75f1079b3b16d8da889628af4b01fc" translate="yes" xml:space="preserve">
          <source>Permission to write data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d06d55570938d12f87db3bf2b48caa9de22d9c67" translate="yes" xml:space="preserve">
          <source>Permissions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b68e97973994116d837d4de74f29d77f895c097" translate="yes" xml:space="preserve">
          <source>Ping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7ea5815003206577385db1034f8fc9e2837dc7" translate="yes" xml:space="preserve">
          <source>Ping input odd timeout behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcdb7be6bf05845cce1b5e54ebbf2f55e075d7bf" translate="yes" xml:space="preserve">
          <source>Ping input: add standard deviation field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5df1e14fdba13b1a3f9690f736bcb2aac132e72" translate="yes" xml:space="preserve">
          <source>Pipelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1df3f8494e1283a280f7d3715de66de6f026ba9e" translate="yes" xml:space="preserve">
          <source>Place one of these comments on a line all by itself and &lt;code&gt;tickdoc&lt;/code&gt; will find it and behave accordingly. Otherwise document your code normaly and &lt;code&gt;tickdoc&lt;/code&gt; will do the rest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90f1fdabf55785bcb03a33e1aa30c0c7b5f9f4cf" translate="yes" xml:space="preserve">
          <source>Place the 'Generate Webhook url' into the 'Talk' section of the Kapacitor configuration as the option 'url'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e49f388988232af88ed68f62e828cfe36dda99bc" translate="yes" xml:space="preserve">
          <source>Place the 'service key' into the 'pagerduty' section of the Kapacitor configuration as the option 'service-key'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc2c330113744e9f53dad375dde42456ba3156c" translate="yes" xml:space="preserve">
          <source>Place the above code in a scratch directory called &lt;code&gt;main.go&lt;/code&gt;. This above code can be run via &lt;code&gt;go run main.go&lt;/code&gt;, but at this point it will exit immediately after listening on the socket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b564aa964b9ed451bc7fa4eb207250d401353447" translate="yes" xml:space="preserve">
          <source>Place the above script into a file &lt;code&gt;scores.sh&lt;/code&gt; and run it:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc175c2eeed0a71038c0161b529052a0e5ffcc6" translate="yes" xml:space="preserve">
          <source>Place the private key file (&lt;code&gt;.key&lt;/code&gt;) and the signed certificate file (&lt;code&gt;.crt&lt;/code&gt;) or the single bundled file (&lt;code&gt;.pem&lt;/code&gt;) in the &lt;code&gt;/etc/ssl&lt;/code&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18049cb2a908db699abd8361569878df439b32f6" translate="yes" xml:space="preserve">
          <source>Place the telegraf.exe and the telegraf.conf config file into &lt;code&gt;C:\Program Files\Telegraf&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de0f049006166b52ae94354cd61ab4b39b28441c" translate="yes" xml:space="preserve">
          <source>Place this script in a file called &lt;code&gt;top_scores.tick&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae93802c82ff1bb9960a406340a43ff1e669039" translate="yes" xml:space="preserve">
          <source>Please consult the systemd journald documentation for configuring journald.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c0c8a6fdb23c82955e0f89790e518a610172c0" translate="yes" xml:space="preserve">
          <source>Please note that cluster data nodes have very high IOPS requirements when the cluster is recovering from downtime. It is recommended that the storage system have at least 2000 IOPS to allow for rapid recovery. Below 1000 IOPS, the cluster may not be able to recover from even a brief outage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c5816bf6f7ac0d491ad8ef185ee872320fb6f2" translate="yes" xml:space="preserve">
          <source>Plugins such as &lt;code&gt;exec&lt;/code&gt; and &lt;code&gt;kafka_consumer&lt;/code&gt; parse textual data. Up until now, these plugins were statically configured to parse just a single data format. &lt;code&gt;exec&lt;/code&gt; mostly only supported parsing JSON, and &lt;code&gt;kafka_consumer&lt;/code&gt; only supported data in InfluxDB line-protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e7733f143b4f095db9c9f690c70da99a979fe5" translate="yes" xml:space="preserve">
          <source>Point the process to the correct configuration file by using the &lt;code&gt;-config&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b4c8dd8a6c7c1510a96139666278a3a806f14e" translate="yes" xml:space="preserve">
          <source>Point.UnmarshalBinary() bounds check.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f821f58dbf10b4a2c66203c1f1967b284bc17e" translate="yes" xml:space="preserve">
          <source>Points Included</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c75e656b92bc8416032ce3ece083a4b6a17e9a49" translate="yes" xml:space="preserve">
          <source>Points are written to InfluxDB using the Line Protocol, which follows the following format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f8bb2633380cd18103394728f04f9c0b8fd1b6" translate="yes" xml:space="preserve">
          <source>Points beyond retention policy scope are dropped silently</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41f0b6feb4efc224b872c25766476baf4ce4d262" translate="yes" xml:space="preserve">
          <source>Points in the WAL can be queried, and they persist through a system reboot. On process start, all points in the WAL must be flushed before the system accepts new writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b329f4b05ce04fc36c13ba6c8a69fbaa689565b8" translate="yes" xml:space="preserve">
          <source>Points missing after compaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c2eb4dbbcdafb15c712951d6aee1bf0a101658" translate="yes" xml:space="preserve">
          <source>Ports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7858ac3ff63354f37161bd349efe11edd13b89cb" translate="yes" xml:space="preserve">
          <source>Post</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9608255a7dc40d27fa687d9535cb850027a224" translate="yes" xml:space="preserve">
          <source>Post Endpoint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baabbb178f3b29fb4ebeee4e23e9fed612d99c40" translate="yes" xml:space="preserve">
          <source>Post Header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78dea72270c8bfdb5e208eb8921bcf359545d06a" translate="yes" xml:space="preserve">
          <source>Post JSON encoded alert data to an HTTP endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5d9a4c90f023f211f17b1d2bf90a5c932c1414a" translate="yes" xml:space="preserve">
          <source>Post multiple points to multiple series at the same time by separating each point with a new line. Batching points in this manner results in much higher performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fd6c2d1150de6a47543209150ff4c2a2d3104f" translate="yes" xml:space="preserve">
          <source>PostgreSQL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74757c92be7a57b83a9bebcfa6a9088f574ad772" translate="yes" xml:space="preserve">
          <source>PostgresSQL plugins now handle oid and name typed columns seamlessly, previously they were ignored/skipped.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f475da806450b4216a6a39ef8f751e26584a0aa3" translate="yes" xml:space="preserve">
          <source>Pow returns x**y, the base-x exponential of y.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="700200aa10cee07a94c47c111357c913507d58e7" translate="yes" xml:space="preserve">
          <source>Pow10 returns 10**e, the base-10 exponential of e.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5f97d0db07a39bc7484bf07ae027f55fcea773e" translate="yes" xml:space="preserve">
          <source>Pre-calculating Expensive Queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dd4db5ce7ea626f59e720f0c27096a22aa1ecd0" translate="yes" xml:space="preserve">
          <source>Precision</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250c0b22ccec6c41c8e6cae45bcf957b57f50fd2" translate="yes" xml:space="preserve">
          <source>Predict when data values will cross a given threshold</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9454a04431ccea8b41758ed7b66c5c4b61429a47" translate="yes" xml:space="preserve">
          <source>Predictors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90eceb016c51a762f15c7287008c113f6f37296c" translate="yes" xml:space="preserve">
          <source>Prefix</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47c559593beca9f0e4e8efeab3c45c1c13a5e9a" translate="yes" xml:space="preserve">
          <source>Prefix names for all fields from the respective nodes. Each field from the parent nodes will be prefixed with the provided name and a '.'. See the example above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80fe286b12888596c64bbfd836c1fa3951ec0f6" translate="yes" xml:space="preserve">
          <source>Prefix partial write errors with &lt;code&gt;partial write:&lt;/code&gt; to generalize identification in other subsystems.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de649b242ebc2b3f77272cb656b55b59341e84d6" translate="yes" xml:space="preserve">
          <source>Preserve alert state across restarts and disable/enable actions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af2c67369a77a781f16d168069e6fcffe7ef451f" translate="yes" xml:space="preserve">
          <source>Preset Time Boundary</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1f5b2e78672ed44a480ed72258b51a9aa238167" translate="yes" xml:space="preserve">
          <source>Preset time buckets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faad56b080afa2c42f5b3a8b397028d635c854df" translate="yes" xml:space="preserve">
          <source>Prevent Kapacitor configurations from having the same name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4e480638640f0adbdb3d2988829a5bed94748d0" translate="yes" xml:space="preserve">
          <source>Prevent a panic when aggregates are used in an inner query with a raw query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa2b3b74740bc243a45630327f70dccb066c17e" translate="yes" xml:space="preserve">
          <source>Prevent legend from flowing over window bottom bound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbd0b909b099f41667c3e6498c18825ab0fbcb8" translate="yes" xml:space="preserve">
          <source>Prevent overflowing or underflowing during window computation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66ef1935eeccb28d614f1a3b276bacc89943db4" translate="yes" xml:space="preserve">
          <source>Prevent panic if there are no values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25499f65f278789b5a4bab39563a0e9c186f363" translate="yes" xml:space="preserve">
          <source>Prevent panic in concurrent auth cache write.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b26a8b6ab761f1c391050d1c9291ece5e9d4ad" translate="yes" xml:space="preserve">
          <source>Prevent queries with &lt;code&gt;:dashboardTime:&lt;/code&gt; from breaking the query builder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43440c20a0c9c387c198b07683f3935c1a0e5bb7" translate="yes" xml:space="preserve">
          <source>Prevent the creation of blank template variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598347f75eb6a0f45e576a143d26577f5f3a23e7" translate="yes" xml:space="preserve">
          <source>Prevent users from manually using system queries since incorrect use would result in a panic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3f96313116f1ad21461be23d48e52a8994ae23" translate="yes" xml:space="preserve">
          <source>Print the query executor&amp;rsquo;s stack trace on a panic to the log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403134d1781f772f32b3805e2f55241f286bf5c1" translate="yes" xml:space="preserve">
          <source>Probably infeasible load</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab95a0f313bfbf67e48985c26b2f6def951e41ad" translate="yes" xml:space="preserve">
          <source>Procedures to backup data created by InfluxDB and to restore from a backup.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bc5e9d17efb725e6296e043b566979a9066393" translate="yes" xml:space="preserve">
          <source>Process input fails with &lt;code&gt;no such process&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7308bb59f2876220e45299939d241199595df2" translate="yes" xml:space="preserve">
          <source>Processes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ffc8bfdfffb37babe98010c1ee256a3c312cc9" translate="yes" xml:space="preserve">
          <source>Processes plugin: fix potential error with /proc/net/stat directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ac2d7df9d573e2926dc726d12b67717d9ed5bb" translate="yes" xml:space="preserve">
          <source>Processor &amp;amp; Aggregator plugin support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3a6b9256dc8631d8e301179d79e041d4613e39" translate="yes" xml:space="preserve">
          <source>Processor Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71e4a939d02342d9a44e1adbccf9199121f04ce" translate="yes" xml:space="preserve">
          <source>Processor plugins transform, decorate, and/or filter metrics collected by input plugins, passing the transformed metrics to the output plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb241a77e860e0148d31eec1f8b853fc5f51542" translate="yes" xml:space="preserve">
          <source>Procstat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b41aba60d3c16e671f55540c2000ad401036c7e" translate="yes" xml:space="preserve">
          <source>Produce batch of only the distinct points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f142ec7e51260e58f04d22a1dddad6dcf83b64f" translate="yes" xml:space="preserve">
          <source>Prometheus client output panic on service reload.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08be623cbb02202e870e52a8e9456ec8426b734f" translate="yes" xml:space="preserve">
          <source>Prometheus input plugin now supports x509 certs authentication.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca99a1f02960761b61c5eae21efb47c7e472df1" translate="yes" xml:space="preserve">
          <source>Prometheus output, metric refresh and caching fixes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5aca26fa95b11ba21f8406985a15fd1ac23b293" translate="yes" xml:space="preserve">
          <source>Prometheus output: Fix bug with multi-batch writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77785efc4e0660288556941e48a06525003ca79" translate="yes" xml:space="preserve">
          <source>Prometheus parser, protobuf format header fix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52c4ae9f591fc657b2625ac2700fe5f21060d6a9" translate="yes" xml:space="preserve">
          <source>Properly collect nested jolokia struct data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d46aefa7b83736a643427f79d41550d3bc9c1e" translate="yes" xml:space="preserve">
          <source>Properly select a tag within a subquery.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6c88db2f0703a9e2461a4a8060ccf1cb881998" translate="yes" xml:space="preserve">
          <source>Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29175a8174e4a46c56c58442d02c98c3c9e03b8f" translate="yes" xml:space="preserve">
          <source>Properties of Time Series Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae33a7d0ecb82cae8f04aafab20bf90425b7b8c" translate="yes" xml:space="preserve">
          <source>Property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525bc5c2a0dd10a009d7966fcb894570cd047643" translate="yes" xml:space="preserve">
          <source>Property methods &amp;ndash; Modifies the node they are called on and returns a reference to the same node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e177d6cd3c785acfab185b4159c4ab8d72c84eb" translate="yes" xml:space="preserve">
          <source>Property methods modify state on the calling node. They do not add another node to the pipeline, and always return a reference to the calling node. Property methods are marked using the &lt;code&gt;.&lt;/code&gt; operator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b55168a3b87830390ad10eaef984120807ddb40" translate="yes" xml:space="preserve">
          <source>Property methods modify the node they are called on and return a reference to the same node. The two most important property methods are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ea46fafd353a01365469c18fb7e718b804afe0" translate="yes" xml:space="preserve">
          <source>Provides instructions for installing InfluxDB on Ubuntu, Debian, RedHat, CentOS, and OS X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4890f4b571a7f0ca189d1eea0c0a4f39a56d4ef1" translate="yes" xml:space="preserve">
          <source>Provides the location to download the latest stable and nightly builds of InfluxDB.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c305d068b15dd5b59ab11a0427e87ee283391192" translate="yes" xml:space="preserve">
          <source>Proxy from environment for HTTP request to slack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17df737793d85b027659190311cd02fb9750d3a4" translate="yes" xml:space="preserve">
          <source>Prune data in meta store for deleted shards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5656400564f25dcbe129f43deea78952060bee36" translate="yes" xml:space="preserve">
          <source>Publish</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f387fee611597c2f3de5e5e85f33ed80a68ba44a" translate="yes" xml:space="preserve">
          <source>Publish events to another topic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08e822f51668ce23f7798bc8b72168843e3f063" translate="yes" xml:space="preserve">
          <source>Pull Metrics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d22cf6b6c55d2ab4b2b87daf51ed66de81c77ec" translate="yes" xml:space="preserve">
          <source>Pull data from a dynamic list of remote targets with Kapacitor&amp;rsquo;s discovery and scraping features. Use those features with Kapacitor&amp;rsquo;s &lt;a href=&quot;../../tick/index&quot;&gt;TICKscripts&lt;/a&gt; to monitor targets, process the data, and write data to &lt;a href=&quot;../../../../influxdb/v1.3/index&quot;&gt;InfluxDB&lt;/a&gt;. Currently, Kapacitor supports only Prometheus style targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8bd3322341b6ae9add12640ef45e27a48866a19" translate="yes" xml:space="preserve">
          <source>Pulling github.com/lxn/win&amp;rsquo;s pdh wrapper into Telegraf.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0fb821bdaf93ed9a1f1e920acfb2840eff5b153" translate="yes" xml:space="preserve">
          <source>Purpose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2882578a65819381be885917024331f7868f6ea" translate="yes" xml:space="preserve">
          <source>Pushing vs. Pulling Metrics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2abcb12d294cafcfdfaa90823c5bb5d46fb182e" translate="yes" xml:space="preserve">
          <source>Pushover</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf5dec60c529160418b0126057447e50cd56d58" translate="yes" xml:space="preserve">
          <source>Pushover &amp;ndash; Send alert to Pushover.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e28dfa407fc8186b8d3edc51769f1362a682c77" translate="yes" xml:space="preserve">
          <source>Pushover Device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb23a47941e89623e0d4bfa401f203d3149a165" translate="yes" xml:space="preserve">
          <source>Pushover Sound</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9648089bd6944c92cc14fdb736ba01184871e8f8" translate="yes" xml:space="preserve">
          <source>Pushover Title</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1212a68d7f01202c1a538d2595edfd16fbebe91" translate="yes" xml:space="preserve">
          <source>Pushover URL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a88fb7a1a5a90b27518f278963d1997db2d8a2b7" translate="yes" xml:space="preserve">
          <source>Pushover URLTitle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27589b33bb16c9ddf462dc583c69a8f47984721" translate="yes" xml:space="preserve">
          <source>Pushover UserKey</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010f04ba4de1bfc898fdf849b9db0824b06fc742" translate="yes" xml:space="preserve">
          <source>Put the above configuration in a file called &lt;code&gt;telegraf.conf&lt;/code&gt; and start telegraf:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3604888c4b4ec08e2837913d012fe2834ffa83" translate="yes" xml:space="preserve">
          <source>Python</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2644b7d942f174a4bbf0bc8675c1badf9352393e" translate="yes" xml:space="preserve">
          <source>Queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1caf8429164aed3ce2f5695a243db809cc23a2e4" translate="yes" xml:space="preserve">
          <source>Queries against files that have just been compacted need to point to new files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71fd36668a51814d29d09a4763db3e9ed2582f7b" translate="yes" xml:space="preserve">
          <source>Queries against partially deleted series are handled at query time until a compaction removes the data fully from the TSM files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c559b9608a26ee542d1175c8f41d581f6ca882" translate="yes" xml:space="preserve">
          <source>Queries slow down hundreds times after overwriting points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796e09bcb35e7123cf967c3d1ca6bd92e3789dc8" translate="yes" xml:space="preserve">
          <source>Queries to the storage engine will merge data from the Cache with data from the TSM files. Queries execute on a copy of the data that is made from the cache at query processing time. This way writes that come in while a query is running won&amp;rsquo;t affect the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0015eb053e3be7ef292f6f6c515aa53c5636d8c4" translate="yes" xml:space="preserve">
          <source>Queries with &lt;code&gt;BOTTOM()&lt;/code&gt; and a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause return the specified number of points per &lt;code&gt;GROUP BY time()&lt;/code&gt; interval. For &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;most &lt;code&gt;GROUP BY time()&lt;/code&gt; queries&lt;/a&gt;, the returned timestamps mark the start of the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval. &lt;code&gt;GROUP BY time()&lt;/code&gt; queries with the &lt;code&gt;BOTTOM()&lt;/code&gt; function behave differently; they maintain the timestamp of the original data point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf600b0798069c5398475c560060aa4a3dd71815" translate="yes" xml:space="preserve">
          <source>Queries with &lt;code&gt;SAMPLE()&lt;/code&gt; and a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause return the specified number of points (&lt;code&gt;N&lt;/code&gt;) per &lt;code&gt;GROUP BY time()&lt;/code&gt; interval. For &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;most &lt;code&gt;GROUP BY time()&lt;/code&gt; queries&lt;/a&gt;, the returned timestamps mark the start of the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval. &lt;code&gt;GROUP BY time()&lt;/code&gt; queries with the &lt;code&gt;SAMPLE()&lt;/code&gt; function behave differently; they maintain the timestamp of the original data point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f19cf1a3345e3fd3de47d598daac47d117c94ba" translate="yes" xml:space="preserve">
          <source>Queries with &lt;code&gt;TOP()&lt;/code&gt; and a &lt;code&gt;GROUP BY time()&lt;/code&gt; clause return the specified number of points per &lt;code&gt;GROUP BY time()&lt;/code&gt; interval. For &lt;a href=&quot;../data_exploration/index#group-by-time-intervals&quot;&gt;most &lt;code&gt;GROUP BY time()&lt;/code&gt; queries&lt;/a&gt;, the returned timestamps mark the start of the &lt;code&gt;GROUP BY time()&lt;/code&gt; interval. &lt;code&gt;GROUP BY time()&lt;/code&gt; queries with the &lt;code&gt;TOP()&lt;/code&gt; function behave differently; they maintain the timestamp of the original data point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee1969327a1dd4cc577334d9bf29f55da5ce4cb" translate="yes" xml:space="preserve">
          <source>Queries with the syntax &lt;code&gt;SELECT BOTTOM(&amp;lt;field_key&amp;gt;,&amp;lt;tag_key&amp;gt;,&amp;lt;N&amp;gt;)&lt;/code&gt; can return fewer points than expected. If the tag key has &lt;code&gt;X&lt;/code&gt; tag values, the query specifies &lt;code&gt;N&lt;/code&gt; values, and &lt;code&gt;X&lt;/code&gt; is smaller than &lt;code&gt;N&lt;/code&gt;, then the query returns &lt;code&gt;X&lt;/code&gt; points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c39990a1156c2cacb2f52693b9e338190b43b0" translate="yes" xml:space="preserve">
          <source>Queries with the syntax &lt;code&gt;SELECT TOP(&amp;lt;field_key&amp;gt;,&amp;lt;tag_key&amp;gt;,&amp;lt;N&amp;gt;)&lt;/code&gt; can return fewer points than expected. If the tag key has &lt;code&gt;X&lt;/code&gt; tag values, the query specifies &lt;code&gt;N&lt;/code&gt; values, and &lt;code&gt;X&lt;/code&gt; is smaller than &lt;code&gt;N&lt;/code&gt;, then the query returns &lt;code&gt;X&lt;/code&gt; points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a618b4be8d3ac72545f3085fe616d342b7139fba" translate="yes" xml:space="preserve">
          <source>Query</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e154c34adf8d1bb044b62683cc144938a583a18" translate="yes" xml:space="preserve">
          <source>Query 1 includes an aggregate function and a standalone field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8069847c5c83ab7e1a9d8afa6769c1713490268a" translate="yes" xml:space="preserve">
          <source>Query 1 is missing a continuous query name between &lt;code&gt;CREATE CONTINUOUS QUERY&lt;/code&gt; and &lt;code&gt;ON&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd485f2739c3ddec408369f7624d0000f6a487bc" translate="yes" xml:space="preserve">
          <source>Query 2 includes an aggregate function and a standalone tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f6a5cb681930bce40a04d89a9d86e56b2d7aef" translate="yes" xml:space="preserve">
          <source>Query 2 is missing a measurement name between &lt;code&gt;FROM&lt;/code&gt; and &lt;code&gt;WHERE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02346e6818029adb3e8f68a4bd4e7448a7ceacbe" translate="yes" xml:space="preserve">
          <source>Query Engine Internals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6de129f4419ebf2061cf3c2240df230cfe2aebf" translate="yes" xml:space="preserve">
          <source>Query Language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3572419b3750bd92db4f217997d464f6c1bdf5b6" translate="yes" xml:space="preserve">
          <source>Query Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6df715bd0e1b8a1a837478b5d2ed20be9da5731" translate="yes" xml:space="preserve">
          <source>Query Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ef95e89dc11dfca6e1e434626b37813df31b86" translate="yes" xml:space="preserve">
          <source>Query Parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d38be2651b18604880dbbcdfa6c58e7e0edff4" translate="yes" xml:space="preserve">
          <source>Query Parameters vs JSON body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1767586632a9cbc47f391eabf1d2cf0893424d43" translate="yes" xml:space="preserve">
          <source>Query String Parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f845c7a104614e6b346fabff192535596e38cb5a" translate="yes" xml:space="preserve">
          <source>Query String Parameters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82638b05debc63e5a15052429ac23a15ccd0c062" translate="yes" xml:space="preserve">
          <source>Query Templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="227bbce5250ba83ba189232d99e22e3f3f3e1434" translate="yes" xml:space="preserve">
          <source>Query Time Range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987669db3822fe751e5b199e4613b948fd6cc867" translate="yes" xml:space="preserve">
          <source>Query Type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfea210847836fa126013d90737ed38dd553eb1a" translate="yes" xml:space="preserve">
          <source>Query and Results:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54c04ef5735efa689769f9592f16ae4bee00ea7d" translate="yes" xml:space="preserve">
          <source>Query management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3cbbe85df26c919f4a01c02f93ceed818cc756" translate="yes" xml:space="preserve">
          <source>Query parameters are used only for GET requests and all other requests expect parameters to be specified in the JSON body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0289b13252c6cbe6534e2f37178d8431e5dc8d94" translate="yes" xml:space="preserve">
          <source>Query representation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c19b7b2b7011b008148c104065885f56d7e468" translate="yes" xml:space="preserve">
          <source>Query syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ce129b23c4529be5767a5bd00684ab6f7ae9cc" translate="yes" xml:space="preserve">
          <source>Query the data in the measurement &lt;code&gt;aggregate_bees&lt;/code&gt; and request values of the &lt;code&gt;mean_bees&lt;/code&gt; field that are greater than &lt;code&gt;20&lt;/code&gt; in the &lt;code&gt;WHERE&lt;/code&gt; clause:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28fa6f7edbd30d0c61c24b66741d9ecf2ac9e711" translate="yes" xml:space="preserve">
          <source>Query the data in the measurement &lt;code&gt;aggregate_bees&lt;/code&gt; to calculate the average of the &lt;code&gt;count_bees&lt;/code&gt; field:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e36766bab5171ef691cbe86cd34ad7177174ccb" translate="yes" xml:space="preserve">
          <source>Query to execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f504274b1faaafcdd9933f22080aae7d00aa49e" translate="yes" xml:space="preserve">
          <source>Query-log-enabled in config not ignored anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f17862d3a1e1e7a89fb4b49a4fb4702addb7a8" translate="yes" xml:space="preserve">
          <source>QueryNode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a7d886a3f53dcd36a11c88f2886a94da6ef9f1" translate="yes" xml:space="preserve">
          <source>Querying Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55aff23031ef558b2c6e5359992e06e9051850f3" translate="yes" xml:space="preserve">
          <source>Querying Data with the HTTP API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50bd00b91dbb933a2ce4bbbafa8212f13b48e188" translate="yes" xml:space="preserve">
          <source>Querying data using the HTTP API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5d2f1793659d59122ad428ab1f2e8e55e1f53b" translate="yes" xml:space="preserve">
          <source>Querying data with the HTTP API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a1fc1731f624d1f9dbca42b781ff8a60a6594e1" translate="yes" xml:space="preserve">
          <source>Questions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe73d79fdc84acfb3ac94fff0afe2eb232b1e40e" translate="yes" xml:space="preserve">
          <source>Quiet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c341309c11ad2f84617e23b371efcbd03c90fb9" translate="yes" xml:space="preserve">
          <source>Quote the empty string as an ident.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fefb29eda0237f92306cb85899330ca8b230ee" translate="yes" xml:space="preserve">
          <source>Quoting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef7e648a611cd23967221e3e527525ba448dbae" translate="yes" xml:space="preserve">
          <source>Quoting, Special Characters, and Additional Naming Guidelines</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb13f6d12aec01432407f0e0c9440f55a09816ca" translate="yes" xml:space="preserve">
          <source>RAM: 1-2 GB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e85828806b00616b1704a47da70c4583e3b8c26" translate="yes" xml:space="preserve">
          <source>RAM: 2-4 GB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d2428eb94c02d1547fe365e949ce9c4b2c93f0" translate="yes" xml:space="preserve">
          <source>RAM: 32+ GB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5440279977b00baf50d3d506c1d18cdda4dfec" translate="yes" xml:space="preserve">
          <source>RAM: 512 MB - 1 GB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e351b6f0bdf9926df489f089bd912d68461daca" translate="yes" xml:space="preserve">
          <source>RAM: 8-32 GB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="814dda660c1d918b07d2b2254e9ce81020c17935" translate="yes" xml:space="preserve">
          <source>RAM: 8-32GB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f45070102d74b5df4d81c62e657b64af187164" translate="yes" xml:space="preserve">
          <source>REST, however, is a convention. InfluxDB makes do with three API endpoints. This simple, easy to understand system uses HTTP as a transfer method for &lt;a href=&quot;../../query_language/spec/index&quot;&gt;InfluxQL&lt;/a&gt;. The InfluxDB API makes no attempt to be RESTful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d173eb30e8b9fe61478a02d722cdc111a632ca90" translate="yes" xml:space="preserve">
          <source>REVOKE</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0863cdefca4b2ca5fd427b48618b22a572f6a271" translate="yes" xml:space="preserve">
          <source>RP Duration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bccd357f7ac191a9b5eb52d0648853ffdf552ab1" translate="yes" xml:space="preserve">
          <source>RP duration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa974d65fd59c2b59d18cacb80da6ba8cc75b411" translate="yes" xml:space="preserve">
          <source>RabbitMQ</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ad57ee2cf9bc98fc6665279189b65e62e2e1d9" translate="yes" xml:space="preserve">
          <source>RabbitMQ Connection metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0fbd4fd203cdf97a42ca1e2cc86911f2072a3bb" translate="yes" xml:space="preserve">
          <source>RabbitMQ input: made url parameter optional by using DefaultURL (&lt;a href=&quot;http://localhost:15672&quot;&gt;http://localhost:15672&lt;/a&gt;) if not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24b82c62194117a0abe29ba6b69a6702e3a6b2ea" translate="yes" xml:space="preserve">
          <source>RabbitMQ/Apache/InfluxDB inputs: made url(s) parameter optional by using reasonable input defaults if not specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afd114f7d9d5ad6993cc77989f35e991213d8f9" translate="yes" xml:space="preserve">
          <source>Raw Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67cb0a1d5ea9265851a810bb33ca2bf94c89cb88" translate="yes" xml:space="preserve">
          <source>Raw data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a215c901223d8124241e1b1bf56be0557fd3df3" translate="yes" xml:space="preserve">
          <source>Raw data: Results:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dec8e729f1537770f368b833c72c37b6dce6587" translate="yes" xml:space="preserve">
          <source>Re-implement level colors on the alerts page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fe35fc5e7cc8d53aedc58f21cc270ea2c698fe9" translate="yes" xml:space="preserve">
          <source>Re&lt;code&gt;SET&lt;/code&gt; a user&amp;rsquo;s password:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16382080700059e5fe5bdd9025d7bee7dfde6583" translate="yes" xml:space="preserve">
          <source>Read an invalid JSON response as an error in the Influx client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0133d40e55342d784990455fcdde77b74c121f2" translate="yes" xml:space="preserve">
          <source>ReadData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb20259261fa07fbfda06c4ea19a2a806cf64161" translate="yes" xml:space="preserve">
          <source>Realm is the JWT realm used by the http endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d431bd6f2acfe54d1f166d3b01968e7c4e3a30" translate="yes" xml:space="preserve">
          <source>Rebalance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850c3f5ceae1693c5d60b37aec2ea042f25a7fd9" translate="yes" xml:space="preserve">
          <source>Rebuild all indexes in a store, this operation can be very expensive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629aec3be2b7c7e73a7b536d2fc31c8a2bbd8bd7" translate="yes" xml:space="preserve">
          <source>Record stream data until stop date.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888ac504c02e520e9c8d332fdb3111f6ee6d9a80" translate="yes" xml:space="preserve">
          <source>Record the incoming stream of data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ae883b6cca230892a56fca5924bf7e62f43e92" translate="yes" xml:space="preserve">
          <source>Record the result of an explicit query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d964acb9e53ae2b0cdeac72a85c0db8a29486529" translate="yes" xml:space="preserve">
          <source>Record the results of the queries in a batch task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38adb0a14125adb510c8b19c1d0b569422e3f564" translate="yes" xml:space="preserve">
          <source>Recordings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bbf62c6d73e7b0e6b2f684baf821b647fad3e6" translate="yes" xml:space="preserve">
          <source>Recovering from bad configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036b3fb950d7bfd372893ad21fd747f2c4440bdd" translate="yes" xml:space="preserve">
          <source>RedHat and CentOS users can install the latest stable version of InfluxDB using the &lt;code&gt;yum&lt;/code&gt; package manager:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d59e07591fe66e20d623da93d2c501fe854b7c12" translate="yes" xml:space="preserve">
          <source>RedHat and CentOS users can install the latest stable version of Telegraf using the &lt;code&gt;yum&lt;/code&gt; package manager:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b94265223580cb34d7ee903f5e1257f0c9353a" translate="yes" xml:space="preserve">
          <source>Redact passwords before saving them to the history file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbaee63f3eaa41d88bf8702a087863ee10cbdd4" translate="yes" xml:space="preserve">
          <source>Redesign &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#line-stat&quot;&gt;Line + Single Stat&lt;/a&gt; cells to appear more like a sparkline, and improve legibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccc934d50278c40b46bf1297a8bacce186ed0b57" translate="yes" xml:space="preserve">
          <source>Redesign source management table to be more intuitive</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24071b57a13027c01339027dcccb98218f052a8f" translate="yes" xml:space="preserve">
          <source>Redis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4677c213fe3391151eba01c802248c8c83ab5db5" translate="yes" xml:space="preserve">
          <source>Reduce Iterator - This iterator calls a reduction function for each point in a window. When the window is complete then all points for that window are output. This is used for simple aggregate functions such as &lt;code&gt;COUNT()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f3ba95fd85ccb5021963e39221b1fd530052d36" translate="yes" xml:space="preserve">
          <source>Reduce Slice Iterator - This iterator collects all points for a window first and then passes them all to a reduction function at once. The results are returned from the iterator. This is used for aggregate functions such as &lt;code&gt;DERIVATIVE()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b39b11916a3cccfa0f0f114bfff436a60481f043" translate="yes" xml:space="preserve">
          <source>Reduce allocations during query parsing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d81c91a1b4ddb5fc937ba8da79e8991143e078" translate="yes" xml:space="preserve">
          <source>Reduce map allocations when computing the TagSet of a measurement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fdbf69a30766e3bf00bdde8bde54dc654fe0aa" translate="yes" xml:space="preserve">
          <source>Reduce memory allocations by reusing gzip.Writers across requests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="463c734859eee2b523b0c447de90703c8d4181a5" translate="yes" xml:space="preserve">
          <source>Reduce query planning allocations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9421cc5d49ddbb36e1c8437a098813014e33219f" translate="yes" xml:space="preserve">
          <source>Reduce the expression in a subquery to avoid a panic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ae02de99dd5a4f1c637d9c06069014574ea079" translate="yes" xml:space="preserve">
          <source>Refactor monitor service to avoid expvar and write monitor statistics on a truncated time interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14a2a15429520a5a8b2fe466ee7a03643a6cd41" translate="yes" xml:space="preserve">
          <source>Refactor of flush_jitter argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3a0804b29f8565250b4828f8608547c9405564" translate="yes" xml:space="preserve">
          <source>Refactor scrollbars to support non-webkit browsers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd9d2d7975c50601a6db236416a8c5237fe92a6" translate="yes" xml:space="preserve">
          <source>Refactor the subquery code and fix outer condition queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc4a46605c5fe6b90e8788a816a6261e27ec665" translate="yes" xml:space="preserve">
          <source>Reference TICKscripts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97a81a7c2167217ea9bd516f0df3398e7062299" translate="yes" xml:space="preserve">
          <source>Reference documentation for InfluxDB&amp;rsquo;s HTTP API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b12f048b036ae9e085de4be26db694d111b5fc" translate="yes" xml:space="preserve">
          <source>Reference documentation for the Line Protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604373c952e337e4ea037a131782b244d7e10767" translate="yes" xml:space="preserve">
          <source>Referencing the example above, in general:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de069c4c4cf3cd18b2825599a913f0414e7eed0b" translate="yes" xml:space="preserve">
          <source>Regardless of your certificate&amp;rsquo;s type, InfluxDB supports certificates composed of a private key file (&lt;code&gt;.key&lt;/code&gt;) and a signed certificate file (&lt;code&gt;.crt&lt;/code&gt;) file pair, as well as certificates that combine the private key file and the signed certificate file into a single bundled file (&lt;code&gt;.pem&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afa85f052393600142382f72f3d4b4228638d6e4" translate="yes" xml:space="preserve">
          <source>RegexReplace replaces matches of the regular expression in the input string with the output string. For example regexReplace(/a(b*)c/, &amp;lsquo;abbbc&amp;rsquo;, &amp;lsquo;group is $1&amp;rsquo;) -&amp;gt; &amp;lsquo;group is bbb&amp;rsquo;. The original string is returned if no matches are found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab140354a34bd045ff52d42f722acc1c4ffada22" translate="yes" xml:space="preserve">
          <source>Regular Expressions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af0843e774a1fe0d373a6740f182f1831592139" translate="yes" xml:space="preserve">
          <source>Regular expressions are surrounded by &lt;code&gt;/&lt;/code&gt; characters and use &lt;a href=&quot;http://golang.org/pkg/regexp/syntax/&quot;&gt;Golang&amp;rsquo;s regular expression syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5a8bcd256cc31972733ace3311b795ae33dde6" translate="yes" xml:space="preserve">
          <source>Reject invalid subscription URLs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="005e028d8a1af98abcdcf27543727ac454cbeb37" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#aggregation&quot;&gt;aggregation&lt;/a&gt;, &lt;a href=&quot;index#function&quot;&gt;function&lt;/a&gt;, &lt;a href=&quot;index#selector&quot;&gt;selector&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4baa67e359b06e37e63d73632dfb40c4bb874a08" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#aggregation&quot;&gt;aggregation&lt;/a&gt;, &lt;a href=&quot;index#function&quot;&gt;function&lt;/a&gt;, &lt;a href=&quot;index#transformation&quot;&gt;transformation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a960513c0d811efd17a2de5586d51182b85f66f" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#aggregation&quot;&gt;aggregation&lt;/a&gt;, &lt;a href=&quot;index#selector&quot;&gt;selector&lt;/a&gt;, &lt;a href=&quot;index#transformation&quot;&gt;transformation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9890c4906f0c5348e64aa55ace4fe9ad2a994b99" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#aggregator-plugin&quot;&gt;aggregator plugin&lt;/a&gt;, &lt;a href=&quot;index#collection-interval&quot;&gt;collection interval&lt;/a&gt;, &lt;a href=&quot;index#output-plugin&quot;&gt;output plugin&lt;/a&gt;, &lt;a href=&quot;index#processor-plugin&quot;&gt;processor plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a36a8e87a15ffe03ed2f298c799416de67a3904" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#aggregator-plugin&quot;&gt;aggregator plugin&lt;/a&gt;, &lt;a href=&quot;index#flush-interval&quot;&gt;flush interval&lt;/a&gt;, &lt;a href=&quot;index#input-plugin&quot;&gt;input plugin&lt;/a&gt;, &lt;a href=&quot;index#processor-plugin&quot;&gt;processor plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bbeb407e91231da5337949d48cfdbc1763727c" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#aggregator-plugin&quot;&gt;aggregator plugin&lt;/a&gt;, &lt;a href=&quot;index#input-plugin&quot;&gt;input plugin&lt;/a&gt;, &lt;a href=&quot;index#output-plugin&quot;&gt;output plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e162a3c84daffd88df7619b4c143da89762449b" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#aggregator-plugin&quot;&gt;aggregator plugin&lt;/a&gt;, &lt;a href=&quot;index#input-plugin&quot;&gt;input plugin&lt;/a&gt;, &lt;a href=&quot;index#output-plugin&quot;&gt;output plugin&lt;/a&gt;, &lt;a href=&quot;index#processor-plugin&quot;&gt;processor plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0beae3579e65b436e29d1a3e50157bfa04035d41" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#aggregator-plugin&quot;&gt;aggregator plugin&lt;/a&gt;, &lt;a href=&quot;index#input-plugin&quot;&gt;input plugin&lt;/a&gt;, &lt;a href=&quot;index#output-plugin&quot;&gt;output plugin&lt;/a&gt;, &lt;a href=&quot;index#processor-plugin&quot;&gt;processor plugin&lt;/a&gt;, &lt;a href=&quot;index#service-input-plugin&quot;&gt;service input plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be617d4227d5760dd69d5d8b7a8b4204114f909" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#batch&quot;&gt;batch&lt;/a&gt;, &lt;a href=&quot;index#field&quot;&gt;field&lt;/a&gt;, &lt;a href=&quot;index#point&quot;&gt;point&lt;/a&gt;, &lt;a href=&quot;index#points-per-second&quot;&gt;points per second&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d4839b76ca75c3225d713c6d0c056dd6676b6a" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#collection-interval&quot;&gt;collection interval&lt;/a&gt;, &lt;a href=&quot;index#flush-jitter&quot;&gt;flush jitter&lt;/a&gt;, &lt;a href=&quot;index#output-plugin&quot;&gt;output plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad86af905117815ecaedfd1c3430cda536e24a6" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#collection-interval&quot;&gt;collection interval&lt;/a&gt;, &lt;a href=&quot;index#input-plugin&quot;&gt;input plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8312d5dfa60b1b603fdb6dfdf74012acde27105" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#continuous-query-cq&quot;&gt;continuous query&lt;/a&gt;, &lt;a href=&quot;index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;, &lt;a href=&quot;index#user&quot;&gt;user&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b10cbf6fa47cd7d343ed53fe1a022b3c28776d3" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#database&quot;&gt;database&lt;/a&gt;, &lt;a href=&quot;index#field-key&quot;&gt;field key&lt;/a&gt;, &lt;a href=&quot;index#measurement&quot;&gt;measurement&lt;/a&gt;, &lt;a href=&quot;index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;, &lt;a href=&quot;index#series&quot;&gt;series&lt;/a&gt;, &lt;a href=&quot;index#tag-key&quot;&gt;tag key&lt;/a&gt;, &lt;a href=&quot;index#tag-value&quot;&gt;tag value&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05971d49da55314fca99cdf26c7eb8616600c13f" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#database&quot;&gt;database&lt;/a&gt;, &lt;a href=&quot;index#field-key&quot;&gt;field key&lt;/a&gt;, &lt;a href=&quot;index#measurement&quot;&gt;measurement&lt;/a&gt;, &lt;a href=&quot;index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;, &lt;a href=&quot;index#tag-key&quot;&gt;tag key&lt;/a&gt;, &lt;a href=&quot;index#user&quot;&gt;user&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad141f96207ce27141731d7fdac372aaa1cf459a" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#database&quot;&gt;database&lt;/a&gt;, &lt;a href=&quot;index#retention-policy&quot;&gt;retention policy&lt;/a&gt;, &lt;a href=&quot;index#series&quot;&gt;series&lt;/a&gt;, &lt;a href=&quot;index#shard&quot;&gt;shard&lt;/a&gt;, &lt;a href=&quot;index#shard-duration&quot;&gt;shard duration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df38910529de799d89e518af878eafe373f3c508" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#database&quot;&gt;database&lt;/a&gt;, &lt;a href=&quot;index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;, &lt;a href=&quot;index#series&quot;&gt;series&lt;/a&gt;, &lt;a href=&quot;index#shard&quot;&gt;shard&lt;/a&gt;, &lt;a href=&quot;index#shard-group&quot;&gt;shard group&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a9b94897e2f4eb58b491d0267b821e0164bddf" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#database&quot;&gt;database&lt;/a&gt;, &lt;a href=&quot;index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;, &lt;a href=&quot;index#user&quot;&gt;user&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa525ee31bfe04646801de7941a8accda9777080" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#duration&quot;&gt;duration&lt;/a&gt;, &lt;a href=&quot;index#measurement&quot;&gt;measurement&lt;/a&gt;, &lt;a href=&quot;index#replication-factor&quot;&gt;replication factor&lt;/a&gt;, &lt;a href=&quot;index#series&quot;&gt;series&lt;/a&gt;, &lt;a href=&quot;index#shard-duration&quot;&gt;shard duration&lt;/a&gt;, &lt;a href=&quot;index#tag-set&quot;&gt;tag set&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860e2d776ead65e6d3316d6deaa7e95e7ce8beee" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#duration&quot;&gt;duration&lt;/a&gt;, &lt;a href=&quot;index#node&quot;&gt;node&lt;/a&gt;, &lt;a href=&quot;index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8caafd8a1d665118cccfec6b7d8952d87460ade9" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#field&quot;&gt;field&lt;/a&gt;, &lt;a href=&quot;index#field-key&quot;&gt;field key&lt;/a&gt;, &lt;a href=&quot;index#field-set&quot;&gt;field set&lt;/a&gt;, &lt;a href=&quot;index#tag-value&quot;&gt;tag value&lt;/a&gt;, &lt;a href=&quot;index#timestamp&quot;&gt;timestamp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529e5849bbcaa4927269da9141f8851e27552a89" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#field&quot;&gt;field&lt;/a&gt;, &lt;a href=&quot;index#field-key&quot;&gt;field key&lt;/a&gt;, &lt;a href=&quot;index#field-value&quot;&gt;field value&lt;/a&gt;, &lt;a href=&quot;index#point&quot;&gt;point&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73068659199e4b77a2ba1233f54fa1d68c2844d3" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#field&quot;&gt;field&lt;/a&gt;, &lt;a href=&quot;index#field-set&quot;&gt;field set&lt;/a&gt;, &lt;a href=&quot;index#field-value&quot;&gt;field value&lt;/a&gt;, &lt;a href=&quot;index#tag-key&quot;&gt;tag key&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6037bbefcda87b7dc1223269f04812951f380724" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#field&quot;&gt;field&lt;/a&gt;, &lt;a href=&quot;index#series&quot;&gt;series&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c78fe2ca92ada928edc76b511291492dc4f61f5" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#field&quot;&gt;field&lt;/a&gt;, &lt;a href=&quot;index#tag-key&quot;&gt;tag key&lt;/a&gt;, &lt;a href=&quot;index#tag-set&quot;&gt;tag set&lt;/a&gt;, &lt;a href=&quot;index#tag-value&quot;&gt;tag value&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315a7631e47a124b9178d82ff772be6f0066ad65" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#field-key&quot;&gt;field key&lt;/a&gt;, &lt;a href=&quot;index#field-set&quot;&gt;field set&lt;/a&gt;, &lt;a href=&quot;index#field-value&quot;&gt;field value&lt;/a&gt;, &lt;a href=&quot;index#tag&quot;&gt;tag&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92223062fce24753156a7c08b1a9ca38889e335" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#field-key&quot;&gt;field key&lt;/a&gt;, &lt;a href=&quot;index#tag&quot;&gt;tag&lt;/a&gt;, &lt;a href=&quot;index#tag-set&quot;&gt;tag set&lt;/a&gt;, &lt;a href=&quot;index#tag-value&quot;&gt;tag value&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0879839945c2a99311c0a504599ba5d31bedd9a" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#field-set&quot;&gt;field set&lt;/a&gt;, &lt;a href=&quot;index#measurement&quot;&gt;measurement&lt;/a&gt;, &lt;a href=&quot;index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;, &lt;a href=&quot;index#tag-set&quot;&gt;tag set&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813e9f1060638973096570d31827b5ebfbda707d" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#field-set&quot;&gt;field set&lt;/a&gt;, &lt;a href=&quot;index#series&quot;&gt;series&lt;/a&gt;, &lt;a href=&quot;index#timestamp&quot;&gt;timestamp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab47adb7f432aa6d3438fead927141b28a613ad" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#flush-interval&quot;&gt;flush interval&lt;/a&gt;, &lt;a href=&quot;index#output-plugin&quot;&gt;output plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6da0e8677af7f01236c23cf39de30f448256d95" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#function&quot;&gt;function&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ecc6c529dba68ef095f267e2833f4aef08ff2a7" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#function&quot;&gt;function&lt;/a&gt;, &lt;a href=&quot;index#selector&quot;&gt;selector&lt;/a&gt;, &lt;a href=&quot;index#transformation&quot;&gt;transformation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057802b20969fadcfe99b4de0620d6d8175745d7" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#input-plugin&quot;&gt;input plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72b16f4711b64210954f822eff77872c245555b" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#input-plugin&quot;&gt;input plugin&lt;/a&gt;, &lt;a href=&quot;index#output-plugin&quot;&gt;output plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24508d1458c983d82ea3e58c19660aa90778f76" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#input-plugin&quot;&gt;input plugin&lt;/a&gt;, &lt;a href=&quot;index#output-plugin&quot;&gt;output plugin&lt;/a&gt;, &lt;a href=&quot;index#processor-plugin&quot;&gt;processor plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b08b464e034cc28927573fb2c8b1c6253a8e190" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#line-protocol&quot;&gt;line protocol&lt;/a&gt;, &lt;a href=&quot;index#point&quot;&gt;point&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b31ce4748d95584baecbd94edb3d401ee65313" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#node&quot;&gt;node&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a528de4dbf016b9f9c6d1fef53c8c045498e14bd" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#output-plugin&quot;&gt;output plugin&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fa8d16e6a8aee1f1fdc51a09e650cf992ad8fa4" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#point&quot;&gt;point&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3f84c0d2f96827391823b5771586e0ad0044af" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#point&quot;&gt;point&lt;/a&gt;, &lt;a href=&quot;index#schema&quot;&gt;schema&lt;/a&gt;, &lt;a href=&quot;index#values-per-second&quot;&gt;values per second&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ca341187a3f2ac17faef728e85ef1cb4ffe5942" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#point&quot;&gt;point&lt;/a&gt;, &lt;a href=&quot;index#series&quot;&gt;series&lt;/a&gt;, &lt;a href=&quot;index#tag&quot;&gt;tag&lt;/a&gt;, &lt;a href=&quot;index#tag-key&quot;&gt;tag key&lt;/a&gt;, &lt;a href=&quot;index#tag-value&quot;&gt;tag value&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49c25603720836d0706dbe629c182b283cdc6ca5" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#retention-policy-rp&quot;&gt;retention policy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861d6b96f82b33d9dc2db538f4861205192443e3" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#series&quot;&gt;series&lt;/a&gt;, &lt;a href=&quot;index#shard-duration&quot;&gt;shard duration&lt;/a&gt;, &lt;a href=&quot;index#shard-group&quot;&gt;shard group&lt;/a&gt;, &lt;a href=&quot;index#tsm-time-structured-merge-tree&quot;&gt;tsm&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81bead044c7424bf757a513dd5ba6ba4fc88123" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#server&quot;&gt;server&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="440d12e45d9a329dac75bfee5537b74b7b6df24c" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#tag&quot;&gt;tag&lt;/a&gt;, &lt;a href=&quot;index#tag-key&quot;&gt;tag key&lt;/a&gt;, &lt;a href=&quot;index#tag-set&quot;&gt;tag set&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23d65a55f94dcec72f5014234140fa4a25777b5a" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#tag-set&quot;&gt;tag set&lt;/a&gt;, &lt;a href=&quot;index#measurement&quot;&gt;measurement&lt;/a&gt;, &lt;a href=&quot;index#tag-key&quot;&gt;tag key&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d80d868afb8c43e4f330208dd6973fc32a747e14" translate="yes" xml:space="preserve">
          <source>Related entries: &lt;a href=&quot;index#tsm-time-structured-merge-tree&quot;&gt;tsm&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29dd8cc6e7ed1db06a2dfb146be6db03e2d50678" translate="yes" xml:space="preserve">
          <source>Relative - alert if the data change relative to the data in a different time range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d496586fd1b1663bb9a2ee4d06b5af5da9fe12d5" translate="yes" xml:space="preserve">
          <source>Relative Time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24d9fc1d663f0bf5bbe4fb19507cc40cf0003434" translate="yes" xml:space="preserve">
          <source>Relative time</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea4af908fe06688dd3fc02035189b08293c5074" translate="yes" xml:space="preserve">
          <source>Release Notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499d7c4ff708b1af5ed360d3afb47829536c509e" translate="yes" xml:space="preserve">
          <source>Release Notes/Changelog</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd5af7344f50420161f8f096f94794e6fe1580c6" translate="yes" xml:space="preserve">
          <source>Release notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ecb6c708065d4db6c533c7b58a40c7d714fbc6f" translate="yes" xml:space="preserve">
          <source>Remote Backups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92365bcf6ae1fdc45cfe37c6738aa53ce4e20873" translate="yes" xml:space="preserve">
          <source>Removals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f573b769cc7aa58eb7360c56e9042396f00d1ae" translate="yes" xml:space="preserve">
          <source>Remove /data/process_continuous_queries endpoint.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b192b1eb3fb213d4c3c218336e17ac1084b20763" translate="yes" xml:space="preserve">
          <source>Remove &lt;code&gt;READ&lt;/code&gt;, &lt;code&gt;WRITE&lt;/code&gt;, or &lt;code&gt;ALL&lt;/code&gt; permissions from non-admin users by replacing &lt;code&gt;GRANT&lt;/code&gt; with &lt;code&gt;REVOKE&lt;/code&gt; in the curl commands above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b4809f1af2048d82b50dffcf8d2e5d2eac7e29" translate="yes" xml:space="preserve">
          <source>Remove FieldCodec from TSDB package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84e7d102d57311bdd487151c0e8fb56610f9ae9" translate="yes" xml:space="preserve">
          <source>Remove IF EXISTS/IF NOT EXISTS from influxql language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a09e86d0a3a6e4b36f065e77baf06bd6b04d0de8" translate="yes" xml:space="preserve">
          <source>Remove IF NOT EXISTS from influxdb output database creation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0bc6fc0271e192c481861a36019b3b47d20f93" translate="yes" xml:space="preserve">
          <source>Remove PID from procstat plugin to fix cardinality issues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d98c4f26653663358a793323570682da1600717" translate="yes" xml:space="preserve">
          <source>Remove Tags.shouldCopy, replace with forceCopy on series creation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="090c3c797c169ce912dba9591d7f09408c8ca240" translate="yes" xml:space="preserve">
          <source>Remove a Handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2e749deb2bd1fbf0bcf50d06fdd019027bd4fe" translate="yes" xml:space="preserve">
          <source>Remove a double lock in the tsm1 index writer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931aa2f1d2193ad648ddfe0bff5f1548287911c5" translate="yes" xml:space="preserve">
          <source>Remove a previously added element from a list configuration section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ea01bb84d6144b9e9dbcfc2f3bce9b24e6415c" translate="yes" xml:space="preserve">
          <source>Remove accidentally added string support for the stddev call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ab77d5a55f0b9e449afc6e8786b1361ca17bde" translate="yes" xml:space="preserve">
          <source>Remove an existing InfluxDB cluster override:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="761ff1376ba520fd8fe0f516170596247436ae19" translate="yes" xml:space="preserve">
          <source>Remove carraige returns from exec plugin output on Windows</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc1c301dbc701ff3755c23261958c4a0fc45f3a" translate="yes" xml:space="preserve">
          <source>Remove default upper time bound on DELETE queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecc472a107cc96379a77e6c4b1dcfe300ac4021" translate="yes" xml:space="preserve">
          <source>Remove limiter from walkShards.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8391bd2d9074cb6f338c0d27220386cf66a5223" translate="yes" xml:space="preserve">
          <source>Remove old cluster code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="006ca32094dc3e01d5d025a00dfff03153615df3" translate="yes" xml:space="preserve">
          <source>Remove systemd output redirection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a043df76429d74bb3f5fad7c05e326b2b049158e" translate="yes" xml:space="preserve">
          <source>Remove the admin UI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6eae268c3ec7d1608dad26fd867c4baafed4826" translate="yes" xml:space="preserve">
          <source>Remove the notification to login on the login page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eac287331166c40563e9e8dcb264ba131b65c74" translate="yes" xml:space="preserve">
          <source>Remove the override of GOMAXPROCS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d44c4726e51d0b4f0427a1a653549ef9ad9dfd" translate="yes" xml:space="preserve">
          <source>Remove the query templates dropdown from dashboard cell editor mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f064ad5410e42f86c9162fffcae4780fe657a29c" translate="yes" xml:space="preserve">
          <source>Remove the telegraf service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb3788756f27933d10b0278a884a27663d4cf56" translate="yes" xml:space="preserve">
          <source>Remove warning if parse empty content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a506be3c24a4450b6769ef8a71701456d753b2" translate="yes" xml:space="preserve">
          <source>Removed leaked &amp;ldquo;database&amp;rdquo; tag on redis metrics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f4cb898fbe0c7a7ac4f721438c4c26ad1a2513" translate="yes" xml:space="preserve">
          <source>Rename</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e28ab9eeb719a4cc42e718a97ab0e412fff8a40" translate="yes" xml:space="preserve">
          <source>Rename dumptsmdev to dumptsm in influx_inspect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824b069cf83de4f77f7115aff219401935d253f7" translate="yes" xml:space="preserve">
          <source>Rename the Output Field Key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a049a8a20606ac9e4c572332c3e84ec98a1513" translate="yes" xml:space="preserve">
          <source>Rentention Policy should not allow &lt;code&gt;INF&lt;/code&gt; or &lt;code&gt;0&lt;/code&gt; as a shard duration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14bdb96c27dd829870f082d5415c0c50b9051f0" translate="yes" xml:space="preserve">
          <source>Repeating the exact &lt;code&gt;CREATE USER&lt;/code&gt; statement is idempotent. If any values change the database will return a duplicate user error. See GitHub Issue &lt;a href=&quot;https://github.com/influxdata/influxdb/pull/6890&quot;&gt;#6890&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c66166e8f7beea9919ab5d73f34c20a8ab656f" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;&amp;lt;API-access-token&amp;gt;&lt;/code&gt; with the API access token that you identified or created in the previous section:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e5368e25fbf57ac021411785ae207042954860" translate="yes" xml:space="preserve">
          <source>Replace an entire handler using the PUT method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a98b5f763506a1db4b1572601a981189a8f4c4d" translate="yes" xml:space="preserve">
          <source>Replace the user icon with a solid style</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8613803fb86a7d611c81ddb78101c1948283829" translate="yes" xml:space="preserve">
          <source>Replay a recording in real-time mode and preserve recording times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a08f10d0ff18c04c9e9f8d52701c11241e2b88" translate="yes" xml:space="preserve">
          <source>Replay a recording using a custom ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d98c333bcee95b80b8e0a7289c7b4b84ac0b96ef" translate="yes" xml:space="preserve">
          <source>Replay a recording using default parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9142f1d96beb8a056d8c870dc164d3a9c0dd76b" translate="yes" xml:space="preserve">
          <source>Replay data without Recording</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eebd93a9264c59c46ad6f9d8a2c021f476f0670" translate="yes" xml:space="preserve">
          <source>Replay the results of an explicit query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013c51b6106c8b8c1bc9d02dc9b15f11e2a26ac0" translate="yes" xml:space="preserve">
          <source>Replay the results of the queries in a batch task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242e26843718d5306360b851866a7a2d305111a9" translate="yes" xml:space="preserve">
          <source>Replay the results of the query against the task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12cbb68a361bc7dce9e354d3c9b3b126fc6427f1" translate="yes" xml:space="preserve">
          <source>Replaying a recording</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a18ea806522e03912203da47b54dc7d132d077f" translate="yes" xml:space="preserve">
          <source>Replays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="473ff8e9e62ab1409c3a6f31ee5bddeac92ad20b" translate="yes" xml:space="preserve">
          <source>Replicas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e7abec0c363e76c8268b3db29f637a19e272e0" translate="yes" xml:space="preserve">
          <source>Replicas is a lambda expression that should evaluate to the desired number of replicas for the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfcf82caff9ac80669473b91e43c2f6adbe73005" translate="yes" xml:space="preserve">
          <source>Replication factors do not serve a purpose with single node instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9a3f6bcb8bbb841956f4bce393783c2b32ff46" translate="yes" xml:space="preserve">
          <source>Report cmdline and memstats in /debug/vars.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f8efc89e6f6a9e87f36cc737256c29fa6190621" translate="yes" xml:space="preserve">
          <source>Request Body</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c967c8a19caaaf79a5d4e92055e3ecf581f76d7c" translate="yes" xml:space="preserve">
          <source>Request Multiple Queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8026203621e39057049c8820ba55e6a65b5e00b" translate="yes" xml:space="preserve">
          <source>Request Query Results in CSV format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf4ff68a0fae59e1f60c4674418ba79d8bf7081" translate="yes" xml:space="preserve">
          <source>Requests by unauthorized users yield the &lt;code&gt;HTTP 403 Forbidden&lt;/code&gt; response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca6e506347f58ecc7e8cb385e4318117f793483" translate="yes" xml:space="preserve">
          <source>Requests with no authentication credentials or incorrect credentials yield the &lt;code&gt;HTTP 401 Unauthorized&lt;/code&gt; response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed6bfb41051ed5b74447340f3c2e29d11e99a7c" translate="yes" xml:space="preserve">
          <source>Required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b390f2e0be761d31a992ff3f8dbb24b1586f11" translate="yes" xml:space="preserve">
          <source>Required for database-dependent queries (most &lt;a href=&quot;../../query_language/spec/index#select&quot;&gt;&lt;code&gt;SELECT&lt;/code&gt;&lt;/a&gt; queries and &lt;a href=&quot;../../query_language/spec/index#show-continuous-queries&quot;&gt;&lt;code&gt;SHOW&lt;/code&gt;&lt;/a&gt; queries require this parameter).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a5654767c009229a1e7f5878423b38aa1848b9c" translate="yes" xml:space="preserve">
          <source>Required. Points must have at least one field.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab6f35bd4cc423e7c311b144fe6259cbd0d01ff" translate="yes" xml:space="preserve">
          <source>Reset graph zoom when the user selects a new time range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8593c6f4299865cb8100784fdc8d3079fa32c4ed" translate="yes" xml:space="preserve">
          <source>ResourceName</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="629dde43c2d46e7cd5454aea1203bb3c675758c4" translate="yes" xml:space="preserve">
          <source>ResourceName is the name of the resource to autoscale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb76894c2c7602dff26e935d582d8327eff2babe" translate="yes" xml:space="preserve">
          <source>ResourceNameTag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f765be4fda8283c75eab31ff1a197a13b1ba70c" translate="yes" xml:space="preserve">
          <source>ResourceNameTag is the name of a tag that names the resource to autoscale.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7c84044b17f8e791419526ad1503a6f65a255e" translate="yes" xml:space="preserve">
          <source>ResourceTag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cebefcf8fbace902f9bdb5b38b26d6ce39957f0" translate="yes" xml:space="preserve">
          <source>ResourceTag is the name of a tag to use when tagging emitted points the resource. If empty the point will not be tagged with the resource. Default: resource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="237789000620a1eb45d0e349633a9e6cf717155d" translate="yes" xml:space="preserve">
          <source>Resources: &lt;a href=&quot;../../query_language/authentication_and_authorization/index#set-up-authentication&quot;&gt;Set up Authentication&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d9b43db363debae677f35fb1ebbd003c715dff" translate="yes" xml:space="preserve">
          <source>Resources: &lt;a href=&quot;../../query_language/authentication_and_authorization/index#user-types-and-privileges&quot;&gt;User Types and Privileges&lt;/a&gt;, &lt;a href=&quot;../../query_language/authentication_and_authorization/index#user-management-commands&quot;&gt;User Management Commands&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199b14fc76a3df0f1700ebe51a8f661c3bbfeb53" translate="yes" xml:space="preserve">
          <source>Resources: &lt;a href=&quot;../https_setup/index&quot;&gt;HTTPS Setup&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e617e4fc9da3de9693eac5990613543b86c63f9" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d6b845732445ba93b54ea2eb6b870add110395" translate="yes" xml:space="preserve">
          <source>Response Codes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86423508fece6456b8e50a8e8b913e84f25c9cc" translate="yes" xml:space="preserve">
          <source>Response with task id and link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb15a2a50b89e5eb197d80847c391279ec11e707" translate="yes" xml:space="preserve">
          <source>Response with template id and link.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46387340ac6452c411b9c91dd31416b772e1c91" translate="yes" xml:space="preserve">
          <source>Responses are returned in JSON. Include the query string parameter &lt;code&gt;pretty=true&lt;/code&gt; to enable pretty-print JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9bd5d7801304e91e7bdc2fe2914f9f50eb25f7" translate="yes" xml:space="preserve">
          <source>Restart the InfluxDB process for the configuration changes to take effect:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0107ea2337f68290207272f8c5ddc26d20e95c23" translate="yes" xml:space="preserve">
          <source>Restart the Kapacitor daemon to make sure everything is configured correctly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e8cddbde9ec26f566ced027ac6281486c9041a" translate="yes" xml:space="preserve">
          <source>Restart the UDF process and try it out again. Specify which field name and value to use with the &lt;code&gt;.field(name, value)&lt;/code&gt; method. You can add a &lt;code&gt;|log()&lt;/code&gt; after the &lt;code&gt;mirror&lt;/code&gt; UDF to see that the new field has indeed been created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4e805cac124f9958ce4d784461d383fa408d1c" translate="yes" xml:space="preserve">
          <source>Restart the process</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cbe6d6b9a8d1596bb5bca12e14d81c9e108a1a3" translate="yes" xml:space="preserve">
          <source>Restore</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76bead27c567ad676f851bab83ad886d26429afc" translate="yes" xml:space="preserve">
          <source>Restore &lt;code&gt;/tmp/backup&lt;/code&gt; to the meta directory in &lt;code&gt;/var/lib/influxdb/meta&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="500c1ce5a39e20f7d6c28aaf89676697fe6fc32f" translate="yes" xml:space="preserve">
          <source>Restrict access by creating individual users and assigning them relevant read and/or write permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2fe8bc570d591100ab9c358bb79af3280333979" translate="yes" xml:space="preserve">
          <source>Restrict fill(none) and fill(linear) to be usable only with aggregate queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fe85fa47f9dc9d34fc2da7dffb78ca31747af99" translate="yes" xml:space="preserve">
          <source>Restrict top() and bottom() selectors to be used with no other functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ed0f83376d1c4df0a4bc4779afec816187dae8" translate="yes" xml:space="preserve">
          <source>Result of this search will always be empty, because we used double quotes around server1. This means that we are searching for series where field &amp;ldquo;host&amp;rdquo; is equal to field &amp;ldquo;server1&amp;rdquo;. This is probably not what we were planning to do. We were probably searching for series where tag &amp;ldquo;host&amp;rdquo; has value &amp;ldquo;server1&amp;rdquo;, so we should use single quotes for that and our tick script should look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="612e12d29278b5519294bc25cdaddffec6d0f1c6" translate="yes" xml:space="preserve">
          <source>Results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd19e6d6cb4b26b0ef86cb95d8b5872a311f4828" translate="yes" xml:space="preserve">
          <source>Results:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67398ca189188db7d7cc2d26381ece5677f6a90d" translate="yes" xml:space="preserve">
          <source>Retention Policies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db5f63bac2330259253cb140978684800662820" translate="yes" xml:space="preserve">
          <source>Retention Policy Management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60886f637905397ea596d8e8724b41909c59cd9" translate="yes" xml:space="preserve">
          <source>Retention Policy&amp;rsquo;s DURATION</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="962fb4180c6906ae80942829514d53430bd19ca6" translate="yes" xml:space="preserve">
          <source>Retention policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472269528a0d3f5802e1071a31659ed752efbb11" translate="yes" xml:space="preserve">
          <source>Retention policy auto-creation automatically creates the &lt;a href=&quot;../../concepts/glossary/index#retention-policy-rp&quot;&gt;&lt;code&gt;DEFAULT&lt;/code&gt; retention policy&lt;/a&gt;&lt;code&gt;autogen&lt;/code&gt; when a database is created. The retention policy &lt;code&gt;autogen&lt;/code&gt; has an infinite duration and is also set as the database&amp;rsquo;s &lt;code&gt;DEFAULT&lt;/code&gt; retention policy, which is used when a write or query does not specify a retention policy. Disable this setting to prevent the creation of this retention policy when creating databases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca0fbbb58fb242b1b513822d576e05a236ea862" translate="yes" xml:space="preserve">
          <source>Retention policy name for the writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf3b376589b7213b3ded380d90cbcd29aceb8993" translate="yes" xml:space="preserve">
          <source>RetentionPolicy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b825b5af241366de8b84832f5445fef4af331546" translate="yes" xml:space="preserve">
          <source>Retrieve all the configuration sections which can be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cc4432bc15a5b3e856ce57ddf3a958f75c96dbd" translate="yes" xml:space="preserve">
          <source>Retrieve only the &lt;code&gt;remote&lt;/code&gt; element of the InfluxDB section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cbdeda2f4dc12daf3fcd7b74f9560f99117885f" translate="yes" xml:space="preserve">
          <source>Retrieve only the InfluxDB section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b5bf38d5a2f0a3c2bd886a898c0f9f5c51bbc6" translate="yes" xml:space="preserve">
          <source>Retrieve only the SMTP section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ece464d45e18f27677cf3a465063ecd4387820" translate="yes" xml:space="preserve">
          <source>Retrieve the single element from the SMTP section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e216f7c38b5d6f9f40776ab10d7992581c769a06" translate="yes" xml:space="preserve">
          <source>Retrieving the current configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da77110efbbd4a50cd0b732027a7f2f4e5167b27" translate="yes" xml:space="preserve">
          <source>Return 403 Forbidden when authentication succeeds but authorization fails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee26e434e1ece6774aaf02fc66a309af2fa2356" translate="yes" xml:space="preserve">
          <source>Return Error instead of panic when decoding point values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30e968b0ded174b3f9b4b872ed1365355d51f6af" translate="yes" xml:space="preserve">
          <source>Return an error when an invalid duration literal is parsed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41e09a93eb01fb92ab1c4e09af643e27f02450be" translate="yes" xml:space="preserve">
          <source>Return error on unsupported serializer data format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bb97951d6cd05aa80b12e6ddfe9e326358c71d2" translate="yes" xml:space="preserve">
          <source>Return the time from a percentile call on an integer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72361ff53583ae296e70cde67c481aea3ef6c502" translate="yes" xml:space="preserve">
          <source>Returned Timestamp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654eab7ac172f7297a3bc2b11da8210e13a1309f" translate="yes" xml:space="preserve">
          <source>Returning to our sample configuration, we show what the &lt;code&gt;cpu&lt;/code&gt; and &lt;code&gt;mem&lt;/code&gt; data look like in InfluxDB below. Note that we used the default input and output configuration settings to get these data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d476dad4b802aea3ee83aeeddeb04b3b1c3bf2e" translate="yes" xml:space="preserve">
          <source>Returns N number of predicted &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt; using the &lt;a href=&quot;https://www.otexts.org/fpp/7/5&quot;&gt;Holt-Winters&lt;/a&gt; seasonal method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a416847ed0c6987408f23ea0a6eab1b7aafe1113" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;a href=&quot;../../concepts/glossary/index#measurement&quot;&gt;measurements&lt;/a&gt; for the specified &lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;database&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b883d857d39f10c01253d20073cd47e22842990" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;a href=&quot;../../concepts/glossary/index#retention-policy-rp&quot;&gt;retention policies&lt;/a&gt; for the specified &lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;database&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679b7ede006b12cc0e4b238206f25399160e4d90" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;a href=&quot;../../concepts/glossary/index#series&quot;&gt;series&lt;/a&gt; for the specified &lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;database&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d82af13383b5d28fe2ab620c4e611b332ae76c03" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag keys&lt;/a&gt; associated with the specified &lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;database&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7b05a045f910490c5b53ab91f1361f6b4f5c951" translate="yes" xml:space="preserve">
          <source>Returns a list of all &lt;a href=&quot;../../concepts/glossary/index#database&quot;&gt;databases&lt;/a&gt; on your instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5530be7dc03567036461b99a122bd1d9bb86cd9a" translate="yes" xml:space="preserve">
          <source>Returns a random sample of &lt;code&gt;N&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;. &lt;code&gt;SAMPLE()&lt;/code&gt; uses &lt;a href=&quot;https://en.wikipedia.org/wiki/Reservoir_sampling&quot;&gt;reservoir sampling&lt;/a&gt; to generate the random points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83992d4fb65efeefc003ec8ffa9bea0fd1f83335" translate="yes" xml:space="preserve">
          <source>Returns epoch timestamps with the specified precision. By default, InfluxDB returns timestamps in RFC3339 format with nanosecond precision. Both &lt;code&gt;u&lt;/code&gt; and &lt;code&gt;&amp;micro;&lt;/code&gt; indicate microseconds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b7e25cb67e224059849fefb521d36e4ff423bf" translate="yes" xml:space="preserve">
          <source>Returns points in streamed batches instead of in a single response. If set to &lt;code&gt;true&lt;/code&gt;, InfluxDB chunks responses by series or by every 10,000 points, whichever occurs first. If set to a specific value, InfluxDB chunks responses by series or by that number of points.*</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79e6f691baef52c3978080550e393ad59a08f48" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;../../concepts/glossary/index#field-key&quot;&gt;field keys&lt;/a&gt; and the &lt;a href=&quot;../../write_protocols/line_protocol_reference/index#data-types&quot;&gt;data type&lt;/a&gt; of their &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1718e183100e4ea25f2786becbb25d18d626a6c" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field value &lt;/a&gt; with the oldest timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0edaecc485a4326f9f5ed3fa75e6767609047f4" translate="yes" xml:space="preserve">
          <source>Returns the &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field value&lt;/a&gt; with the most recent timestamp.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fceae9de2ffc6ed4042207e4eaac15e5487459d" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;N&lt;/code&gt;th percentile &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field value&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18c09619d8c00efb6f4f61b8ad1673f2c14b6358" translate="yes" xml:space="preserve">
          <source>Returns the area under the curve for subsequent &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6fa7415e46750f6a2016364524c274b7ffb0ce" translate="yes" xml:space="preserve">
          <source>Returns the arithmetic mean (average) of &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8db1f1ea325f919a608310f9020a35a95d10f8c" translate="yes" xml:space="preserve">
          <source>Returns the difference between subsequent &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field value&amp;rsquo;s&lt;/a&gt; timestamps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc048cbc9fdaf72278fa9d771658b2e0125f805" translate="yes" xml:space="preserve">
          <source>Returns the difference between the minimum and maximum &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d8d6a9ef8bc3b34439062f4b01c6a94946612e2" translate="yes" xml:space="preserve">
          <source>Returns the duration of the event in a non OK state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b8821b1d4d2033240656fae6232f30aa2a93ef" translate="yes" xml:space="preserve">
          <source>Returns the greatest &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field value&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56c60497be4295b6bcee13f5de20ea9a0eb8126" translate="yes" xml:space="preserve">
          <source>Returns the greatest &lt;code&gt;N&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9704840fb9150f2966cb13890c17f8a0eb0acbb6" translate="yes" xml:space="preserve">
          <source>Returns the list of &lt;a href=&quot;../../concepts/glossary/index#tag-value&quot;&gt;tag values&lt;/a&gt; for the specified &lt;a href=&quot;../../concepts/glossary/index#tag-key&quot;&gt;tag key(s)&lt;/a&gt; in the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03a7be11582f2af37487d4897ab02fe04b2c8d9b" translate="yes" xml:space="preserve">
          <source>Returns the list of unique &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df0f93a57d81bba4bf383b3696b58b7695e0006" translate="yes" xml:space="preserve">
          <source>Returns the lowest &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field value&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcaf0abeb8669c0eb5dfacc68854851918bdb532" translate="yes" xml:space="preserve">
          <source>Returns the measurement name of the triggering data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d681847ec67f55fd3d690931013053388e9574" translate="yes" xml:space="preserve">
          <source>Returns the middle value from a sorted list of &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26a7ff4d679bc1061f37a26306cd5e3f6e997e85" translate="yes" xml:space="preserve">
          <source>Returns the most frequent value in a list of &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae9f8f99c372d940dd908c8e2f8117662aaa8e4" translate="yes" xml:space="preserve">
          <source>Returns the non-negative rate of change between subsequent &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;. Non-negative rates of change include positive rates of change and rates of change that equal zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e03d9ee4227b900c7a6b9737b80b2d8b87b9c21" translate="yes" xml:space="preserve">
          <source>Returns the non-negative result of subtraction between subsequent &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;. Non-negative results of subtraction include positive differences and differences that equal zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ca07b7fe64445eab1a0f545fb2b81d746dac07" translate="yes" xml:space="preserve">
          <source>Returns the number of non-null &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="639dd5ecb2e4714d81b4b6722aafdb840559efc1" translate="yes" xml:space="preserve">
          <source>Returns the rate of change between subsequent &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73449b85237b18087d845d1b2ed4fb9256005c1a" translate="yes" xml:space="preserve">
          <source>Returns the result of its operands depending on the value of the first argument. The second and third arguments must return the same type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c5e417a0a152d2e7fc526135bbc28e6666302d" translate="yes" xml:space="preserve">
          <source>Returns the result of subtraction between subsequent &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92a37383da84c002dd89305d42f620c36a6c37d" translate="yes" xml:space="preserve">
          <source>Returns the rolling average across a window of subsequent &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186f24c8dacf2de7d01e090d417b627fa0dd8c8d" translate="yes" xml:space="preserve">
          <source>Returns the running total of subsequent &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bc44575b4e10e2c63abe09a6636480409362e89" translate="yes" xml:space="preserve">
          <source>Returns the smallest &lt;code&gt;N&lt;/code&gt;&lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a99593cef71126894391645169077e6ee2bf9c29" translate="yes" xml:space="preserve">
          <source>Returns the standard deviation of &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffee580811b5c9e5dbfdd7837ba5ebcc1c9b9bdb" translate="yes" xml:space="preserve">
          <source>Returns the sum of &lt;a href=&quot;../../concepts/glossary/index#field-value&quot;&gt;field values&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e928746af97c784c90787b3e832fe37c4faca4bb" translate="yes" xml:space="preserve">
          <source>Returns the task name that generated the alert event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1034531130553d5d39080ae0baec39468754eef7" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../alert_node/index&quot;&gt;AlertNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa86ad3da3576485fcbbe70e87d63665df76b502" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../combine_node/index&quot;&gt;CombineNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b153fb6093d4cb9565f9ed3e4f144b4d6b83c29d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../default_node/index&quot;&gt;DefaultNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fefeb699fedd18606c7445b5c06e1a3e38d8ae" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../delete_node/index&quot;&gt;DeleteNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d37e83f472a3a6b825a2b956f104b0f940cd962d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../derivative_node/index&quot;&gt;DerivativeNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e5aeedf8f15426bd5dda35f2c3e3b1b84be2fb" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../eval_node/index&quot;&gt;EvalNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cdc95b41fae64d60bc6233e539e8b1e83d0aaef" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../flatten_node/index&quot;&gt;FlattenNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7067eca2829957e0be61a42b09bdc6af7a3f5923" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../from_node/index&quot;&gt;FromNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b80f50a283991e0f4c03b5833947c05053df520" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../group_by_node/index&quot;&gt;GroupByNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd4361a57ca39989b514cff57ab42e98b9dd09c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../http_out_node/index&quot;&gt;HTTPOutNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee2355a88451b205305a160fde62b276fb3acc29" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../http_post_node/index&quot;&gt;HTTPPostNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a4b9a6deeeebab7cf506c9b78defbed9b8495a" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../influx_d_b_out_node/index&quot;&gt;InfluxDBOutNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="742eb563d1fde0123b638ec93e5e4a46baaf8d4d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../influx_q_l_node/index&quot;&gt;InfluxQLNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f33462bfade52e18196d76640a791c19e6cdbe" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../join_node/index&quot;&gt;JoinNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dffebc9faf949a0671ceac09b53e6c18e93875ea" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../k8s_autoscale_node/index&quot;&gt;K8sAutoscaleNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74c2a76f3e267214fe83e353f125577ce81dd7d" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../kapacitor_loopback_node/index&quot;&gt;KapacitorLoopbackNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5eda8074d1276463efedfec811fac9166576b87" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../log_node/index&quot;&gt;LogNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f3794cbfdd8799696006cab75ae2608284c3eb" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../query_node/index&quot;&gt;QueryNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bc53a0aa495d75f338eb0a1c8d58d728adea847" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../sample_node/index&quot;&gt;SampleNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2d6f0ae80a5426079ce39b131e5bef5e588dfa" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../shift_node/index&quot;&gt;ShiftNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a41965772a2584dc8c86eaaefc81cf21c730b8bb" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../state_count_node/index&quot;&gt;StateCountNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14037613543d916507029da63324a251db8b67ed" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../state_duration_node/index&quot;&gt;StateDurationNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8d8b5b8a8cbb69abb7c22bf995770840e6b2c1" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../stats_node/index&quot;&gt;StatsNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f203cfb66dc3116690d0997c73313f5a2ae6ae86" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../union_node/index&quot;&gt;UnionNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3b5256b1eb47cd951f09b3f26ff22a615b01b6" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../where_node/index&quot;&gt;WhereNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f0c33c213709d50089afcc5c40f17c9092ffc8" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;../window_node/index&quot;&gt;WindowNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5c85133b4730b5c34108c89be588c163e77755" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;AlertNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be135effccdbb5e9e9d01945d9d5b5990deb7fe" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;CombineNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfff832a16deb251caa984a90a11718d512bf7ed" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;DefaultNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c68e96180f563ee17133d45618d2f51eb8f4734a" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;DeleteNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc65f5327fc0c9bab919c33e42993c780ac6c4b8" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;DerivativeNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63d316aa59e43b0f3cad41997f6cb362ab6ab55" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;EvalNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824016382ea9f35c4cd61e6bed7193c942f5f5b9" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;FlattenNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa528764bbaaa51eb3b6e59e403f81896accde37" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;FromNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607a9098e1e00a95f3d2399e6d5f7e5f93e18af2" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;GroupByNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50033c19ab748c8a3822113597c163546bf902e8" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;HTTPOutNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ce4a13eb768f21fc5bd89bd4e0fac763853353" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;HTTPPostNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089e45f9f2ad053f6dd23e4c1a7df6ce9fb09c47" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;InfluxQLNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f451a2c30338ccca86868539456c79a43c3f3de" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;JoinNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5e8e5bbafef4fb6485099b9683f4286bc40f8a0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;K8sAutoscaleNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15085796eb9c786d340682ac964a93e4fba30b32" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;LogNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="686e6b932b55eb9602a6e7f6e6aab51489855a1c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;SampleNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef2a1b37a65b08718a332687ac1ff09eff10e667" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;ShiftNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f72fa3938c0261d30f3c41fb1d06c4f3a31acc0" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;StateCountNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76ee1e909ea94b21f63bf59c2a48002c1342f5f8" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;StateDurationNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf1524bd2f7a4817f4eb49880b65fbe26855ff3c" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;StatsNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94cde44c0d26ec05455fc8c4723c4bdee5ef26b4" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;UnionNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df24a40ed9570dfd826608d79bd0593af827e960" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;WhereNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d19b9a8d39c7e9399ae857ddab8818f0a97823" translate="yes" xml:space="preserve">
          <source>Returns: &lt;a href=&quot;index&quot;&gt;WindowNode&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29394314e0ff720dde343cf13bcd709aecf47a06" translate="yes" xml:space="preserve">
          <source>Reuse transports in input plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de1e7cb4e23379fe28fd9a1370bb3b51ba2ff6e" translate="yes" xml:space="preserve">
          <source>Review the functions page for a complete discussion of the &lt;a href=&quot;../../query_language/functions/index#top&quot;&gt;&lt;code&gt;TOP()&lt;/code&gt; function&lt;/a&gt; and the &lt;a href=&quot;../../query_language/functions/index#bottom&quot;&gt;&lt;code&gt;BOTTOM()&lt;/code&gt; function&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e119bd7c32806b40e181583f488d1394cb29a17e" translate="yes" xml:space="preserve">
          <source>Rewrite regular expressions of the form host = /^server-a$/ to host = &amp;lsquo;server-a&amp;rsquo;, to take advantage of the tsdb index.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d55d4b2e45ab07d05b8e7b1eb8189817385c95a" translate="yes" xml:space="preserve">
          <source>Rewrite the &lt;a href=&quot;https://github.com/influxdata/telegraf/tree/master/plugins/outputs/riemann&quot;&gt;Riemann output plugin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24613686d63545d48d0ffdce44507a8c94878194" translate="yes" xml:space="preserve">
          <source>Rewritten Riemann plugin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40fc67ff4894292986cf0f4cea15b8689d12db0c" translate="yes" xml:space="preserve">
          <source>Riak</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47dcc27d6e87ece8baebe7e3877a261a5467093d" translate="yes" xml:space="preserve">
          <source>Roles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ca5e719bf9270689d144b8497d10555df0079a" translate="yes" xml:space="preserve">
          <source>Roles are groups of permissions. Assign roles to one user or to more than one user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb8d1448e8445a84fad0fdc1992793fa40db2c1" translate="yes" xml:space="preserve">
          <source>Rollbar webhook plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90e2fca9e9906b8390346daa20885b3a71a7a70e" translate="yes" xml:space="preserve">
          <source>Room</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7b59833520bb2b53fd4d44b3d581720b55c442" translate="yes" xml:space="preserve">
          <source>Round</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445f69cd0bb4ea0347d7e34c89fe6a57a0129495" translate="yes" xml:space="preserve">
          <source>Round times to the &lt;a href=&quot;index#interval&quot;&gt;StatsNode.Interval&lt;/a&gt; value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03730e58401ef5d9e79d1f674df0a5f9cf756e33" translate="yes" xml:space="preserve">
          <source>Routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b217e98c3bf70f3cf4633a5447d6587eea974ba1" translate="yes" xml:space="preserve">
          <source>Ruby</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c8b55c79a50384c081d683c40b49a3a1005f0ca" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;go run main.go&lt;/code&gt; to start the UDF. If you get an error about the socket being in use, just delete the socket file and try running the UDF again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07ffd9bba19f72fe0e2cc0e05fea971386f572c5" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;influxd version&lt;/code&gt; in your terminal:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6997d145b072fa90022b18823047964a90c329fb" translate="yes" xml:space="preserve">
          <source>Run Chronograf:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d793ac21b678b3ea6417bca77dc258f51598bff" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;GROUP BY time()&lt;/code&gt; query that covers data with timestamps between &lt;code&gt;2015-09-18T21:30:00Z&lt;/code&gt; and 180 weeks from &lt;code&gt;now()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1b57b78e3ba24a1de34a1ef1bc658923ff0745" translate="yes" xml:space="preserve">
          <source>Run a &lt;code&gt;GROUP BY time()&lt;/code&gt; query that covers data with timestamps between &lt;code&gt;2015-09-18T21:30:00Z&lt;/code&gt; and &lt;code&gt;now()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7d9f1baf979c7d48b7bfd509fd67780278db141" translate="yes" xml:space="preserve">
          <source>Run continuous query for multiple buckets rather than one per bucket.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9784447b735629df20f4dc44040c06c097ef9c" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;SHOW DATABASES&lt;/code&gt; command using &lt;code&gt;curl&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c47677daa80054d695509d55305f4a34f00595a7" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;chronograf&lt;/code&gt; server in develop mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85875e037ea6555df2ffcd47587623da92f89e33" translate="yes" xml:space="preserve">
          <source>Running &lt;code&gt;show&lt;/code&gt; will display the &lt;code&gt;vars&lt;/code&gt; associated with this task which are unique to our &lt;code&gt;mem_alert&lt;/code&gt; task.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0285b3043a14f7f8e410b030ddce1c31d4dbd79d" translate="yes" xml:space="preserve">
          <source>Running Chronograf with TLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda13c361ca4f2ab66489652fb9ff24d168154a3" translate="yes" xml:space="preserve">
          <source>Running InfluxDB directly</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b8dad8d104cb7c924111f60b2d674d68f21c936" translate="yes" xml:space="preserve">
          <source>Running Kapacitor with the UDF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef70e476570407920e621e37bd00ca4a9ea2a6cd" translate="yes" xml:space="preserve">
          <source>Running Telegraf as a Windows Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c9e7f7d30bdefd91ad0fcce35be19f4f535fad" translate="yes" xml:space="preserve">
          <source>Running as a Windows Service</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1172f8652937583f9aa2e83e4caadd0aa4d01a1" translate="yes" xml:space="preserve">
          <source>Runtime: goroutine stack exceeds 1000000000-byte limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ae20d9ae7fcacb605c03c198e0a1c51d446f50" translate="yes" xml:space="preserve">
          <source>Rust</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20474bc517cac7fe2bbfe97e50c28702892feb32" translate="yes" xml:space="preserve">
          <source>SAMPLE()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4942c26d0735947d8a22a2fbe2735a12e381808" translate="yes" xml:space="preserve">
          <source>SELECT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882f793e150a1acfd7d2ca1fe89fc99c352c4b79" translate="yes" xml:space="preserve">
          <source>SHOW CONTINUOUS QUERIES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c8ca556e3c3ab9823157c9749b24ed50b37f20" translate="yes" xml:space="preserve">
          <source>SHOW DATABASES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7d0e4ff22d1f1f37884ba977b74cf680cddbbb" translate="yes" xml:space="preserve">
          <source>SHOW DIAGNOSTICS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02c737dfcee4bc5c526c8447dccada9a749e0796" translate="yes" xml:space="preserve">
          <source>SHOW FIELD KEYS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4161ef32a167677f91970d4a805a5a2215ea2a" translate="yes" xml:space="preserve">
          <source>SHOW GRANTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362f1f65a7fe7c3ae9dd13675f10e871275b4081" translate="yes" xml:space="preserve">
          <source>SHOW MEASUREMENTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87db11dc2df6146855cefcc168a0b736c9fcf3e6" translate="yes" xml:space="preserve">
          <source>SHOW QUERIES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5086c5626dbefb07bfe3a7b5b53052e3b080ca8e" translate="yes" xml:space="preserve">
          <source>SHOW RETENTION POLICIES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c57a4293d75217df515969e9a90c6b8ed0b8594d" translate="yes" xml:space="preserve">
          <source>SHOW SERIES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458110e7b3d2dbf846665df8cd809f539c7dac0a" translate="yes" xml:space="preserve">
          <source>SHOW SHARD GROUPS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="273ac16c45739e075b0994edb69dec81276f13cc" translate="yes" xml:space="preserve">
          <source>SHOW SHARDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b95d63d7779c3aa909aea04603fd2b428249fb" translate="yes" xml:space="preserve">
          <source>SHOW STATS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c2407b066875c588b1cb3e974827de3575bef62" translate="yes" xml:space="preserve">
          <source>SHOW SUBSCRIPTIONS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f591f04e915954fce6ee5552523b5b7c978cb55" translate="yes" xml:space="preserve">
          <source>SHOW TAG KEYS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e71ebdeeea75ee73d68ee0d52e88f1afd0ba4e" translate="yes" xml:space="preserve">
          <source>SHOW TAG VALUES</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3335ada9822099dfd908276b951d46004789a23" translate="yes" xml:space="preserve">
          <source>SHOW TAG VALUES accepts != and !~ in WHERE clause.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64519f863a40caf79678f85f68bfb30fbafa0e5f" translate="yes" xml:space="preserve">
          <source>SHOW USERS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efff9ccaa6b15ff9425eb5792bbcb44d1319adc9" translate="yes" xml:space="preserve">
          <source>SMTP</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bedd8cc957965cb3e7f5cd904cf9ee4b0ccb98f5" translate="yes" xml:space="preserve">
          <source>SMTP/Email</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1a777a672195a3f9f5c05b31a9f2197c703436" translate="yes" xml:space="preserve">
          <source>SNMP agent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27142f07ed535f1f9cad4c4d9be23a24c5833272" translate="yes" xml:space="preserve">
          <source>SNMP: ensure proper context is present on error messages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8023b6f72c9dbbd5c1cc0b8465ce62930e25c471" translate="yes" xml:space="preserve">
          <source>SNMPTraps &amp;ndash; Trigger SNMP traps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7eda26b10217206d3135eeb8eed714e3a11374" translate="yes" xml:space="preserve">
          <source>SPREAD()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="070521f0f33ed8ac49ccbcdd61f11d032507457c" translate="yes" xml:space="preserve">
          <source>SQL Server waitstats truncation bug.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb4b80bb0c823376051bc92e7d77c1c8aae4902d" translate="yes" xml:space="preserve">
          <source>SQLServer, fix issue when case sensitive collation is activated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1b48d8d5f99e945a457f1896213c64627ee2cd" translate="yes" xml:space="preserve">
          <source>STDDEV()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f797479bbcab17e78265585d8f3d8c23ab28783d" translate="yes" xml:space="preserve">
          <source>SUM()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58fabfa70811950fc1a8c6e0d56faec87e4e08cb" translate="yes" xml:space="preserve">
          <source>Sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884c97b5433d5c231d9eadc64984c7f33d28e425" translate="yes" xml:space="preserve">
          <source>Sample Commands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bccfe2e6e425e48f3e860d4d7b7bcec3995615f" translate="yes" xml:space="preserve">
          <source>Sample Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93cc16cad7601675158b9331513b5740a09166e4" translate="yes" xml:space="preserve">
          <source>Sample Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2673e4767e7f2c5bc0dd637a396ff6bd22d3c6b" translate="yes" xml:space="preserve">
          <source>Sample Node</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057f604cfd130a0a114581ef746411f9aefbbf31" translate="yes" xml:space="preserve">
          <source>Sample data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5f28546a36aa1ca02116c9ecd7d308a81aec26" translate="yes" xml:space="preserve">
          <source>Sample data:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0f2f718e5738d7b0d3a78d77d22106d03387dc7" translate="yes" xml:space="preserve">
          <source>Sample points or batches. One point will be emitted every count or duration specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca06b1d267adeb7398249bb0992d00f72144de4" translate="yes" xml:space="preserve">
          <source>Sample:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6337e89699b56a13f430507baf81f75a55e0bd4" translate="yes" xml:space="preserve">
          <source>SampleNode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62a32c2a24e7ac42d2ab49440f93a73780d2c6b3" translate="yes" xml:space="preserve">
          <source>Sanitize graphite output field names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d8c3a7d2c05426bdab18bd6125a0e18cdf7d0f" translate="yes" xml:space="preserve">
          <source>Save the above UDF python script into &lt;code&gt;/tmp/kapacitor_udf/ttest.py&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431ee7407f630bbdb3f5a23263544d8b95cec378" translate="yes" xml:space="preserve">
          <source>Save the above script as &lt;code&gt;/tmp/kapacitor_udf/printer_data.py&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f61ab1c3d291996c6d40100f71438a2f1b3bb626" translate="yes" xml:space="preserve">
          <source>Save the above script as &lt;code&gt;cpu_alert.tick&lt;/code&gt;. Create and start the task by running the following commands:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2dfc634e242a99a1f86e673e6ef153ceb832e5c" translate="yes" xml:space="preserve">
          <source>Save the above text as &lt;code&gt;slack.yaml&lt;/code&gt;. Now we can define our new handler via the &lt;code&gt;kapacitor&lt;/code&gt; cli. To do this we use the &lt;code&gt;define-topic-handler&lt;/code&gt; command which takes three arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152a93757c1112fbdaf7ed0a7f15b5583086c8e3" translate="yes" xml:space="preserve">
          <source>Save this script as &lt;code&gt;/tmp/kapacitor_udf/print_temps.tick&lt;/code&gt; and define the Kapacitor task:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43adf6f64eaeb8094734b6cad60ba954f9d32b13" translate="yes" xml:space="preserve">
          <source>Save user-provided relative time ranges in cells</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eedaed51fab706d54f96e7e7555bccc848d2f77" translate="yes" xml:space="preserve">
          <source>Say you notice that most of your queries focus on the values of the field keys &lt;code&gt;honeybees&lt;/code&gt; and &lt;code&gt;butterflies&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7e70bcf209a5323526033a9cbf768a3ae70c2c" translate="yes" xml:space="preserve">
          <source>Scala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3120e6cd2891c1cd4df32c44e5da32dcf34f8f06" translate="yes" xml:space="preserve">
          <source>Scale is critical. The database must be able to handle a &lt;em&gt;high&lt;/em&gt; volume of reads and writes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8527155af12a098c4e82deadc0b7359f40286015" translate="yes" xml:space="preserve">
          <source>Schedule and Coverage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5111964a56e3cd336e9a27dfcfc5a44700f4293b" translate="yes" xml:space="preserve">
          <source>Schema Design</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3690e1a2abf3ed1a5397ebca253f7d0e4e27b7f8" translate="yes" xml:space="preserve">
          <source>Schema Exploration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c83bc94468f10712b0c24867d707091810adf9" translate="yes" xml:space="preserve">
          <source>Schema and Data Layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f78205c5f0d7b968d2410452b11383ce7f46ab2f" translate="yes" xml:space="preserve">
          <source>Schemaless Design</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d071afd5b85cf41033e64aa2c785892cd125438" translate="yes" xml:space="preserve">
          <source>Scraping and Discovery</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6c3067967dcc618a13c05ca2c084ee60d310f0e" translate="yes" xml:space="preserve">
          <source>Second, altering both the &lt;code&gt;DURATION&lt;/code&gt; and &lt;code&gt;SHARD DURATION&lt;/code&gt; of an RP can result in unexpected data retention. InfluxDB stores data in shard groups which cover a specific RP and time interval. When InfluxDB enforces an RP it drops entire shard groups, not individual data points. InfluxDB cannot divide shard groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063497b4d248cc68e925747b820c6d5d022a6c13" translate="yes" xml:space="preserve">
          <source>Second, specifying the location of the underlying datastore is important because as you take advantage of future release of Chronograf (maintenance releases or feature bearing), you will want to refer to this underlying datastore to preserve your dashboards and datasource configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a469be81b2e0804b9136cc25472442282c025785" translate="yes" xml:space="preserve">
          <source>Second, temporarily lowering the &lt;a href=&quot;../../administration/config/index#cache-snapshot-write-cold-duration-10m&quot;&gt;&lt;code&gt;cache-snapshot-write-cold-duration&lt;/code&gt; configuration setting&lt;/a&gt;. If you&amp;rsquo;re writing a lot of historical data, the default setting (&lt;code&gt;10m&lt;/code&gt;) can cause the system to hold all of your data in cache for every shard. Temporarily lowering the &lt;code&gt;cache-snapshot-write-cold-duration&lt;/code&gt; setting to &lt;code&gt;10s&lt;/code&gt; while you write the historical data makes the process more efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faaa95ddc61ad9003c771e4e4720d2d571905533" translate="yes" xml:space="preserve">
          <source>Sections:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2726a9ffbfcef5379cadf610b2068c7b03f3c9" translate="yes" xml:space="preserve">
          <source>Secure your Host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25ce1b8a399bd8621a57427a20039b4b13935db" translate="yes" xml:space="preserve">
          <source>Security</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e34218ca35aa6b1299e4054ac1eb850e1eacff" translate="yes" xml:space="preserve">
          <source>Security Best Practices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b239f377e277667c98c6bfc3a76daa2491b767" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#rename-the-output-field-key&quot;&gt;Rename the Output Field Key&lt;/a&gt; for how to configure the output column headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b60a862d8322eeb3527a98c2d852bcc8bdd4a0bc" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#user-management-commands&quot;&gt;below&lt;/a&gt; for a complete discussion of the user management commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="975812dfa658a6a3a06d9f199e4722c01d89c858" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../concepts/schema_and_data_layout/index#shard-group-duration-management&quot;&gt;Shard Group Duration Management&lt;/a&gt; for recommended configurations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883113ce0bdc4dc8b2a533826699da0d632f2043" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../guides/hardware_sizing/index#general-hardware-guidelines-for-a-single-node&quot;&gt;Hardware Sizing Guidelines&lt;/a&gt; for &lt;a href=&quot;../glossary/index#series-cardinality&quot;&gt;series cardinality&lt;/a&gt; recommendations based on your hardware. If the system has memory constraints, consider storing high-cardinality data as a field rather than a tag.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0ffc85b1bd28b91649e17a92611fe427040b8c" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../query_language/data_exploration/index#time-syntax&quot;&gt;Data Exploration&lt;/a&gt; for more on time syntax in queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4371a303674ef7dc815dcdc8bf2d9e842d1f013" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#how-can-i-query-for-series-cardinality&quot;&gt;Frequently Asked Questions&lt;/a&gt; for how to query InfluxDB for series cardinality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693338a2659c86601bd31f6100919b08bce6e62e" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#how-does-influxdb-handle-duplicate-points&quot;&gt;Frequently Asked Questions&lt;/a&gt; for a complete example of this behavior and how to avoid it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602c7585fc0b0f0da2a7c78e006bcd7dae1f7500" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#how-does-influxdb-handle-field-type-discrepancies-across-shards&quot;&gt;Frequently Asked Questions&lt;/a&gt; for how field value type discrepancies can affect &lt;code&gt;SELECT *&lt;/code&gt; queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f99df55225c9d5ef2d5bfe83ae2b4afb7e09e924" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;index#description-of-basic-syntax&quot;&gt; Description of Basic Syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5e76db1b1ae26eb5cbd441b43ecf29e3134f15" translate="yes" xml:space="preserve">
          <source>See Chronograf&amp;rsquo;s &lt;a href=&quot;https://github.com/influxdata/chronograf/blob/master/CHANGELOG.md&quot;&gt;CHANGELOG&lt;/a&gt; on GitHub for information about the 1.2.0-beta releases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d903ce8023b3f7115357e8fab790b53b02f9bcc7" translate="yes" xml:space="preserve">
          <source>See GitHub Issue &lt;a href=&quot;https://github.com/influxdata/influxdb/issues/5930&quot;&gt;#5930&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba96534b0048816a1bba8b1018719389689c9a30" translate="yes" xml:space="preserve">
          <source>See GitHub Issue &lt;a href=&quot;https://github.com/influxdb/influxdb/issues/5930&quot;&gt;#5930&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1118fd286ba195b0695a0888e33c6841b7748034" translate="yes" xml:space="preserve">
          <source>See all five measurements:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6fa68bc290ca338baffb78d8e25dc66a83c5e1d" translate="yes" xml:space="preserve">
          <source>See available/default options for the slack service:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536e0a5292f8b10d7c98a3720f26e8dc23b7a252" translate="yes" xml:space="preserve">
          <source>See below for more details on configuring each handler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cec1cd0d2ec89a65d0b1b2fde3a4fbbd7c150937" translate="yes" xml:space="preserve">
          <source>See how to use Kapacitor as a continuous query engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4520909a1c2c121cc75a7060a66b4c5f1386fb2a" translate="yes" xml:space="preserve">
          <source>See how you can use Kapacitor to create a live updating leaderboard for a game.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561ceec0e8b0257beca8c7fa287407b076b75947" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#authorization&quot;&gt;authorization section&lt;/a&gt; for how to create an admin user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d06399866759a7b6dd63f850f77042a15960e10" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;#basic-group-by-time-syntax&quot;&gt;Basic GROUP BY time() Syntax&lt;/a&gt; for details on the &lt;code&gt;time_interval&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c135d36e1d5a2e83cfdb3737b4e39d106575de1" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../administration/config/index&quot;&gt;Configuration&lt;/a&gt; documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d402cdb05fb86a41dc43b634a42205d914b3d0" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../administration/configuration/index&quot;&gt;Configuration&lt;/a&gt; document for a description of the available configuration options. See &lt;a href=&quot;../../administration/security-best-practices/index&quot;&gt;Security Best Practices&lt;/a&gt; for TLS and OAUTH 2.0 setup instructions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa2a2c08238c7962cc18c630ed5b8f2ed7af20f" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../guides/downsampling_and_retention/index&quot;&gt;Downsampling and Data Retention&lt;/a&gt; guide for a detailed walkthrough of this common use case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e716906404ab564b5853869bb1ed33790e627fd" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../query_language/data_exploration/index#subqueries&quot;&gt;Data Exploration&lt;/a&gt; page for how to use a subquery as a substitute for nested functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d420cad4da30bce0a7a698b17aa2b18e3db1b7d8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../query_language/data_exploration/index#subqueries&quot;&gt;Data Exploration&lt;/a&gt; page for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae879a5fed59022e7f10282e3e7aac107e7cdc3" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../query_language/data_exploration/index#the-time-zone-clause&quot;&gt;data exploration page&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10392a75157cd647a65e82f5f103765fbc737f94" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../query_language/data_exploration/index#time-syntax&quot;&gt;Data Exploration&lt;/a&gt; document for more on time syntax in queries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ce0381200711dc4e60be538309b67207fea4b3" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../query_language/functions/index#integral&quot;&gt;functions page&lt;/a&gt; for detailed documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c0c74d251b77c0065e78aeabec189733fae44f" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../query_language/functions/index#non-negative-difference&quot;&gt;functions page&lt;/a&gt; for detailed documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="303b6281b132aa7557fc30ec65604ddf7386ed39" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../tools/index&quot;&gt;Tools&lt;/a&gt; section for how to write Line Protocol to the database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ba5354c0562963e4ad366b36c2ec8c0a3579e5" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../troubleshooting/frequently-asked-questions/index#why-is-my-query-with-a-where-or-time-clause-returning-empty-results&quot;&gt;Frequently Asked Questions&lt;/a&gt; document for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e6b4f5ed7965c4cfd4c324f88acacac5c1c540" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../../write_protocols/index&quot;&gt;Line Protocol&lt;/a&gt; documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73be48de74af8e4945348e2ce953657330ecd3ed" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../database_management/index&quot;&gt;database management&lt;/a&gt; and &lt;a href=&quot;../continuous_queries/index&quot;&gt;continuous queries&lt;/a&gt; pages for a complete discussion of the commands listed above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2cd433426511dd628a9bc5b98da1b73165478c" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;../guides/using_alert_topics/index&quot;&gt;Using Alert Topics&lt;/a&gt; example for a walk through defining and using alert topics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf41d7452e7ce72ee64bf743b3252a4495efc682" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/influxdata/influxdb/blob/master/services/collectd/README.md&quot;&gt;README&lt;/a&gt; on GitHub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0c98fc7332ed8e5be36602314ea88e8f659af8" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/influxdata/influxdb/blob/master/services/graphite/README.md&quot;&gt;README&lt;/a&gt; on GitHub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95225961f7cefd485b6a41b6b12d6f49f30764f2" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/influxdata/influxdb/blob/master/services/opentsdb/README.md&quot;&gt;README&lt;/a&gt; on GitHub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16ad196ebd4198af0b1a5b069c122fe8482277c0" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/influxdata/influxdb/blob/master/services/udp/README.md&quot;&gt;README&lt;/a&gt; on GitHub.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dbc9a5c46cb09ddbc78ae9a16ca13b701f4ade3" translate="yes" xml:space="preserve">
          <source>See the &lt;a href=&quot;https://github.com/influxdata/kapacitor/tree/master/udf/agent/&quot;&gt;README.md&lt;/a&gt; for details on how to write your own UDF.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62878f3e7a4708119ff972b709fd572122c8117" translate="yes" xml:space="preserve">
          <source>See the Data Exploration page for documentation on the &lt;a href=&quot;../data_exploration/index#the-basic-select-statement&quot;&gt;&lt;code&gt;FROM&lt;/code&gt; clause&lt;/a&gt;, &lt;a href=&quot;../data_exploration/index#the-limit-clause&quot;&gt;&lt;code&gt;LIMIT&lt;/code&gt; clause&lt;/a&gt;, &lt;a href=&quot;../data_exploration/index#the-offset-clause&quot;&gt;&lt;code&gt;OFFSET&lt;/code&gt; clause&lt;/a&gt;, and on &lt;a href=&quot;../data_exploration/index#regular-expressions&quot;&gt;Regular Expressions in Queries&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d0f9f078e045ad0443dee19a920f606781f3b06" translate="yes" xml:space="preserve">
          <source>See the Data Exploration page for documentation on the &lt;a href=&quot;../data_exploration/index#the-limit-clause&quot;&gt;&lt;code&gt;LIMIT&lt;/code&gt; clause&lt;/a&gt;, &lt;a href=&quot;../data_exploration/index#the-offset-clause&quot;&gt;&lt;code&gt;OFFSET&lt;/code&gt; clause&lt;/a&gt;, and on &lt;a href=&quot;../data_exploration/index#regular-expressions&quot;&gt;Regular Expressions in Queries&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c981c7e58acab07600608410d001e94a59ad08" translate="yes" xml:space="preserve">
          <source>See the example &lt;a href=&quot;https://github.com/influxdata/kapacitor/blob/master/etc/kapacitor/kapacitor.conf&quot;&gt;configuration file&lt;/a&gt; for details on configuring each discoverer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0376099b02dc48350f45a9db4e5ea9e97ac95f" translate="yes" xml:space="preserve">
          <source>See the examples in the &lt;a href=&quot;#examples-of-advanced-syntax-1&quot;&gt;&lt;code&gt;DERIVATIVE()&lt;/code&gt; documentation&lt;/a&gt;. &lt;code&gt;NON_NEGATIVE_DERIVATIVE()&lt;/code&gt; behaves the same as the &lt;code&gt;DERIVATIVE()&lt;/code&gt; function but &lt;code&gt;NON_NEGATIVE_DERIVATIVE()&lt;/code&gt; returns only positive rates of change or rates of change that equal zero.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
