<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="terraform">
    <body>
      <group id="terraform">
        <trans-unit id="548490f9411da22a2eb7d6a41c3a36e27f01c2ac" translate="yes" xml:space="preserve">
          <source>The EFS file systems can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="translated">EFS 파일 시스템은 사용하여 가져올 수있는 &lt;code&gt;id&lt;/code&gt; , 예를 들어,</target>
        </trans-unit>
        <trans-unit id="550ac1ae20aa4b68330e8b40417c77f6dbe3ac96" translate="yes" xml:space="preserve">
          <source>The EFS mount targets can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="translated">EFS는 사용 대상이 가져올 수있는 마운트 &lt;code&gt;id&lt;/code&gt; 예를 들면,</target>
        </trans-unit>
        <trans-unit id="7c6623e5113f529fc311d9a99f9efd70bd81e2e4" translate="yes" xml:space="preserve">
          <source>The EKS service does not currently provide managed resources for running worker nodes. Here we will create a few operator managed resources so that Kubernetes can properly manage other AWS services, networking access, and finally a configuration that allows automatic scaling of worker nodes.</source>
          <target state="translated">EKS 서비스는 현재 작업자 노드를 실행하기위한 관리 리소스를 제공하지 않습니다. 여기에서는 Kubernetes가 다른 AWS 서비스, 네트워킹 액세스 및 작업자 노드의 자동 확장을 허용하는 구성을 올바르게 관리 할 수 ​​있도록 몇 가지 운영자 관리 리소스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="da31742ff499c4bb50b0718179b5a063ea92f8ff" translate="yes" xml:space="preserve">
          <source>The EKS service does not provide a cluster-level API parameter or resource to automatically configure the underlying Kubernetes cluster to allow worker nodes to join the cluster via AWS IAM role authentication.</source>
          <target state="translated">EKS 서비스는 작업자 노드가 AWS IAM 역할 인증을 통해 클러스터에 참여할 수 있도록 기본 Kubernetes 클러스터를 자동으로 구성하기위한 클러스터 수준 API 파라미터 또는 리소스를 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6813d65f3ae33777af2fc94c113c96c4c0ee0ddf" translate="yes" xml:space="preserve">
          <source>The Extending Terraform section contains content for users who wish to extend Terraform. The intended audience is anyone wanting to add or edit source code (&amp;ldquo;developers&amp;rdquo;) for either Terraform itself or a Terraform Plugin. The content assumes you have basic operating knowledge or experience using Terraform.</source>
          <target state="translated">Terrain 확장 섹션에는 Terraform을 확장하려는 사용자를위한 컨텐츠가 포함되어 있습니다. 대상 독자는 Terraform 자체 또는 Terraform 플러그인에 대한 소스 코드 ( &quot;개발자&quot;)를 추가하거나 편집하려는 사람입니다. 내용은 사용자가 Terraform을 사용하는 기본 운영 지식이나 경험이 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="2c9730d5e4aa27be93632ecf0f4b63ce8b74d409" translate="yes" xml:space="preserve">
          <source>The Fastly provider is used to interact with the content delivery network (CDN) provided by Fastly.</source>
          <target state="translated">Fastly 공급자는 Fastly에서 제공 한 CDN (콘텐츠 전송 네트워크)과 상호 작용하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fe63b0f2c52e3bc7b1aa58393666aeb017b0e5db" translate="yes" xml:space="preserve">
          <source>The Fastly provider offers an API key based method of providing credentials for authentication. The following methods are supported, in this order, and explained below:</source>
          <target state="translated">Fastly 공급자는 인증을위한 자격 증명을 제공하는 API 키 기반 방법을 제공합니다. 다음과 같은 방법이 순서대로 지원되며 아래에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d8b96d04e713c3bdc3ced4dcb253c352df13dd1" translate="yes" xml:space="preserve">
          <source>The FlexibleEngine provider is used to interact with the many resources supported by FlexibleEngine. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">FlexibleEngine 공급자는 FlexibleEngine에서 지원하는 많은 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="5fc2b08774da986993cafd7a02d41d85fabe5ebc" translate="yes" xml:space="preserve">
          <source>The GitHub provider is used to interact with GitHub organization resources.</source>
          <target state="translated">GitHub 제공자는 GitHub 조직 리소스와 상호 작용하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="90fd3e54ad1212ce72d5245df8823f6170797b14" translate="yes" xml:space="preserve">
          <source>The GitLab provider is used to interact with GitLab group or user resources.</source>
          <target state="translated">GitLab 공급자는 GitLab 그룹 또는 사용자 리소스와 상호 작용하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="36ba64fd776d71791fc1ac67337eb9cea1daa282" translate="yes" xml:space="preserve">
          <source>The GoDoc for &lt;code&gt;helper/schema&lt;/code&gt; can be &lt;a href=&quot;https://godoc.org/github.com/hashicorp/terraform/helper/schema&quot;&gt;found here&lt;/a&gt;. This is API-level documentation but will be extremely important for you going forward.</source>
          <target state="translated">대한 GoDoc &lt;code&gt;helper/schema&lt;/code&gt; 될 수있다 &lt;a href=&quot;https://godoc.org/github.com/hashicorp/terraform/helper/schema&quot;&gt;여기&lt;/a&gt; . 이 문서는 API 수준의 문서이지만 앞으로는 매우 중요합니다.</target>
        </trans-unit>
        <trans-unit id="8dfa6cd9b23935280bde9dd2eb62ca9fd828a16f" translate="yes" xml:space="preserve">
          <source>The Google Cloud provider is used to interact with &lt;a href=&quot;https://cloud.google.com/&quot;&gt;Google Cloud services&lt;/a&gt;. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Google Cloud 공급자는 &lt;a href=&quot;https://cloud.google.com/&quot;&gt;Google Cloud 서비스&lt;/a&gt; 와 상호 작용하는 데 사용됩니다 . 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="34d5fc5738313f5514834cc0cca7078c236aff08" translate="yes" xml:space="preserve">
          <source>The Google Cloud storage signed URL data source generates a signed URL for a given storage object. Signed URLs provide a way to give time-limited read or write access to anyone in possession of the URL, regardless of whether they have a Google account.</source>
          <target state="translated">Google Cloud 스토리지 서명 된 URL 데이터 소스는 지정된 스토리지 객체에 대한 서명 된 URL을 생성합니다. 서명 된 URL을 사용하면 Google 계정이 있는지 여부에 관계없이 URL을 소유 한 모든 사람에게 시간 제한 읽기 또는 쓰기 액세스 권한을 부여 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c6f655939f3ee14732b821b852b89fb463990ee" translate="yes" xml:space="preserve">
          <source>The Google Compute Engine Instance Group Manager API creates and manages pools of homogeneous Compute Engine virtual machine instances from a common instance template. For more information, see &lt;a href=&quot;https://cloud.google.com/compute/docs/instance-groups/manager&quot;&gt;the official documentation&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/compute/docs/reference/latest/instanceGroupManagers&quot;&gt;API&lt;/a&gt;</source>
          <target state="translated">Google Compute Engine 인스턴스 그룹 관리자 API는 공통 인스턴스 템플릿에서 동종 Compute Engine 가상 머신 인스턴스 풀을 생성하고 관리합니다. 자세한 정보 &lt;a href=&quot;https://cloud.google.com/compute/docs/instance-groups/manager&quot;&gt;는 공식 문서&lt;/a&gt; 및 &lt;a href=&quot;https://cloud.google.com/compute/docs/reference/latest/instanceGroupManagers&quot;&gt;API를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dc53a3387abbdece3fc22ac3be9064816c9d6d86" translate="yes" xml:space="preserve">
          <source>The Google Compute Engine Regional Instance Group Manager API creates and manages pools of homogeneous Compute Engine virtual machine instances from a common instance template. For more information, see &lt;a href=&quot;https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups&quot;&gt;the official documentation&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/compute/docs/reference/latest/regionInstanceGroupManagers&quot;&gt;API&lt;/a&gt;</source>
          <target state="translated">Google Compute Engine 리전 인스턴스 그룹 관리자 API는 공통 인스턴스 템플릿에서 동종 Compute Engine 가상 머신 인스턴스 풀을 생성하고 관리합니다. 자세한 정보 &lt;a href=&quot;https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups&quot;&gt;는 공식 문서&lt;/a&gt; 및 &lt;a href=&quot;https://cloud.google.com/compute/docs/reference/latest/regionInstanceGroupManagers&quot;&gt;API를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="799e599e4398a94a1ffea70db9350e61e2343fc9" translate="yes" xml:space="preserve">
          <source>The Grafana provider configures data sources and dashboards in &lt;a href=&quot;http://grafana.org/&quot;&gt;Grafana&lt;/a&gt;, which is a web application for creating, viewing and sharing metrics dashboards.</source>
          <target state="translated">Grafana 제공자는 &lt;a href=&quot;http://grafana.org/&quot;&gt;Grafana&lt;/a&gt; 에서 데이터 소스 및 대시 보드를 구성합니다. Grafana 는 메트릭 대시 보드를 작성하고보고 공유하기위한 웹 애플리케이션입니다.</target>
        </trans-unit>
        <trans-unit id="97c713f72b76aec14ef6340ee00f43a30bc15df8" translate="yes" xml:space="preserve">
          <source>The HTTP provider is a utility provider for interacting with generic HTTP servers as part of a Terraform configuration.</source>
          <target state="translated">HTTP 제공자는 Terraform 구성의 일부로 일반 HTTP 서버와 상호 작용하기위한 유틸리티 제공자입니다.</target>
        </trans-unit>
        <trans-unit id="1fb15b56cefc7e307bc40a750b00ab70a58827b2" translate="yes" xml:space="preserve">
          <source>The Heroku provider is used to interact with the resources supported by Heroku. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Heroku 공급자는 Heroku가 지원하는 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="c9cee39554351aef57e9a942ce03a5332b5be4f8" translate="yes" xml:space="preserve">
          <source>The Hetzner Cloud (hcloud) provider is used to interact with the resources supported by Hetzner Cloud. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Hetzner Cloud (hcloud) 공급자는 Hetzner Cloud에서 지원하는 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="e9107c99516ee5f8254d3f2d000bfa5ff81968c7" translate="yes" xml:space="preserve">
          <source>The IAM Account Alias data source allows access to the account alias for the effective account in which Terraform is working.</source>
          <target state="translated">IAM 계정 별칭 데이터 소스를 사용하면 Terraform이 작동중인 유효 계정의 계정 별칭에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ccef313315de657fc4834520b7a65e7f7ee8414" translate="yes" xml:space="preserve">
          <source>The IAM policy document format allows context variables to be interpolated into various strings within a statement. The native IAM policy document format uses &lt;code&gt;${...}&lt;/code&gt;-style syntax that is in conflict with Terraform's interpolation syntax, so this data source instead uses &lt;code&gt;&amp;amp;{...}&lt;/code&gt; syntax for interpolations that should be processed by AWS rather than by Terraform.</source>
          <target state="translated">IAM 정책 문서 형식을 사용하면 컨텍스트 변수를 명령문 내의 다양한 문자열로 보간 할 수 있습니다. 기본 IAM 정책 문서 형식은 Terraform의 보간 구문과 충돌 하는 &lt;code&gt;${...}&lt;/code&gt; 스타일 구문을 사용하므로이 데이터 소스는 대신 Terraform이 아닌 AWS에서 처리해야하는 보간에 &lt;code&gt;&amp;amp;{...}&lt;/code&gt; 구문을 사용합니다. .</target>
        </trans-unit>
        <trans-unit id="6eb727daac9b29c53407c3fff88b442d64b487da" translate="yes" xml:space="preserve">
          <source>The Icinga2 provider is used to configure hosts to be monitored by &lt;a href=&quot;https://www.icinga.com/products/icinga-2/&quot;&gt;Icinga2&lt;/a&gt; servers. The provider needs to be configured with the API URL of the Icinga2 server and credentials for an API user with the appropriate permissions.</source>
          <target state="translated">Icinga2 제공자는 &lt;a href=&quot;https://www.icinga.com/products/icinga-2/&quot;&gt;Icinga2&lt;/a&gt; 서버가 호스트를 모니터하도록 구성하는 데 사용됩니다 . 공급자는 Icinga2 서버의 API URL 및 적절한 권한이있는 API 사용자의 신임 정보로 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="c97c562a1b297ff71ec210c1fcf0ad5cb39cb541" translate="yes" xml:space="preserve">
          <source>The Ignition provider is used to generate &lt;a href=&quot;https://coreos.com/ignition/docs/latest/&quot;&gt;Ignition&lt;/a&gt; configuration files. &lt;em&gt;Ignition&lt;/em&gt; is the provisioning utility used by &lt;a href=&quot;https://coreos.com/&quot;&gt;CoreOS&lt;/a&gt; Linux.</source>
          <target state="translated">점화 제공자는 &lt;a href=&quot;https://coreos.com/ignition/docs/latest/&quot;&gt;점화&lt;/a&gt; 구성 파일 을 생성하는 데 사용됩니다 . &lt;em&gt;점화&lt;/em&gt; 는 &lt;a href=&quot;https://coreos.com/&quot;&gt;CoreOS&lt;/a&gt; Linux에서 사용하는 프로비저닝 유틸리티 입니다.</target>
        </trans-unit>
        <trans-unit id="f09bc43b4203885fd8c5690db44bed0d27f601b5" translate="yes" xml:space="preserve">
          <source>The Images data source list image resource list contains private images of the user and images of system resources provided by Alicloud, as well as other public images and those available on the image market.</source>
          <target state="translated">이미지 데이터 소스 목록 이미지 리소스 목록에는 Alicloud가 제공 한 사용자의 개인 이미지 및 시스템 리소스 이미지와 기타 공개 이미지 및 이미지 시장에서 사용 가능한 이미지가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d951970140f5d40153ebfe984b0cc27d6fec6ea4" translate="yes" xml:space="preserve">
          <source>The InfluxDB provider allows Terraform to create Databases in &lt;a href=&quot;https://influxdb.com/&quot;&gt;InfluxDB&lt;/a&gt;. InfluxDB is a database server optimized for time-series data.</source>
          <target state="translated">InfluxDB 공급자 Terraform가에 데이터베이스를 만들 수 있습니다 &lt;a href=&quot;https://influxdb.com/&quot;&gt;InfluxDB&lt;/a&gt; . InfluxDB는 시계열 데이터에 최적화 된 데이터베이스 서버입니다.</target>
        </trans-unit>
        <trans-unit id="c28224aa1b978e4652552ecd4f7108c8d72b4f3d" translate="yes" xml:space="preserve">
          <source>The Instance Types data source list the ecs_instance_types of Alicloud.</source>
          <target state="translated">인스턴스 유형 데이터 소스는 Alicloud의 ecs_instance_types를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="5d17c3d625a2ce93ef2b6ca00f9120ecafc501b2" translate="yes" xml:space="preserve">
          <source>The Instances data source list ECS instance resource accoring to its ID, name regex, image id, status and other fields.</source>
          <target state="translated">인스턴스 데이터 소스 목록에는 ID, 이름 정규식, 이미지 ID, 상태 및 기타 필드에 따라 ECS 인스턴스 리소스가 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="936ea6a42b2966f6bbd7092b7699f43543d6220c" translate="yes" xml:space="preserve">
          <source>The KMS ciphertext data source allows you to encrypt plaintext into ciphertext by using an AWS KMS customer master key.</source>
          <target state="translated">KMS 암호문 데이터 소스를 사용하면 AWS KMS 고객 마스터 키를 사용하여 평문을 암호문으로 암호화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1a8e2e57e7c2da0b31d152c2d3391e042d78d6a" translate="yes" xml:space="preserve">
          <source>The KMS keys data source provides a list of Alicloud KMS keys in an Alicloud account according to the specified filters.</source>
          <target state="translated">KMS 키 데이터 소스는 지정된 필터에 따라 Alicloud 계정의 Alicloud KMS 키 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b298dcfe25dcf8f89775d6c0dafccf43273ee9f2" translate="yes" xml:space="preserve">
          <source>The KMS secret data source allows you to use data encrypted with the AWS KMS service within your resource definitions.</source>
          <target state="translated">KMS 비밀 데이터 소스를 사용하면 리소스 정의 내에서 AWS KMS 서비스로 암호화 된 데이터를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a057de6e9eb2ea93a3189a41165b7000ad5838f6" translate="yes" xml:space="preserve">
          <source>The Key Pairs data source provides a list of Alicloud Key Pairs in an Alicloud account according to the specified filters.</source>
          <target state="translated">키 페어 데이터 소스는 지정된 필터에 따라 Alicloud 계정의 Alicloud 키 페어 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="82aeeec87c7bb716eccf55e74596629ce5a28f23" translate="yes" xml:space="preserve">
          <source>The Kubernetes (K8S) provider is used to interact with the resources supported by Kubernetes. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Kubernetes (K8S) 공급자는 Kubernetes에서 지원하는 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="293a73dc4eed2dc596b048da0323ad84d1b5ccef" translate="yes" xml:space="preserve">
          <source>The Librato provider is used to interact with the resources supported by Librato. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Librato 공급자는 Librato가 지원하는 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="b1aeb979475a662d687113b1f32372f29c8ba912" translate="yes" xml:space="preserve">
          <source>The Local provider is used to manage local resources, such as files.</source>
          <target state="translated">로컬 제공자는 파일과 같은 로컬 자원을 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="687d96f27061f3450a275ba3115b406f46357b43" translate="yes" xml:space="preserve">
          <source>The Logentries provider is used to manage Logentries logs and log sets. Logentries provides live log management and analytics. The provider needs to be configured with a Logentries account key before it can be used.</source>
          <target state="translated">Logentries 제공자는 Logentries 로그 및 로그 세트를 관리하는 데 사용됩니다. Logentries는 실시간 로그 관리 및 분석을 제공합니다. 공급자는 Logentries 계정 키로 구성해야 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="882a6941cd8b0a6a8dd1e6ab97bf02f541218b96" translate="yes" xml:space="preserve">
          <source>The LogicMonitor provider is used to interact with the resources supported by LogicMonitor. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">LogicMonitor 공급자는 LogicMonitor에서 지원하는 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="4230117ce5e3f6cc175b84e6a132f0da7e3e3890" translate="yes" xml:space="preserve">
          <source>The Mailgun provider is used to interact with the resources supported by Mailgun. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Mailgun 공급자는 Mailgun에서 지원하는 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="3e1b6b34796be1b0e443a4bc88140c516dac63c0" translate="yes" xml:space="preserve">
          <source>The Managed Object Browser (MOB) allows one to browse the entire vSphere inventory as it's presented to the API. It's normally accessed via &lt;code&gt;https://VSPHERE_SERVER/mob&lt;/code&gt;. For more information, see here.</source>
          <target state="translated">MOB (Managed Object Browser)를 사용하면 API에 제공되는 전체 vSphere 인벤토리를 탐색 할 수 있습니다. 일반적으로 &lt;code&gt;https://VSPHERE_SERVER/mob&lt;/code&gt; 를 통해 액세스 합니다. 자세한 내용은 여기를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4d9d90a72bcc60c46e6142bc4d8553df15e4e3f6" translate="yes" xml:space="preserve">
          <source>The NS1 provider exposes resources to interact with the NS1 REST API. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">NS1 제공자는 NS1 REST API와 상호 작용하기 위해 자원을 노출합니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="62afb1c9c87859df9a249c6c0c7efa44929e90c9" translate="yes" xml:space="preserve">
          <source>The NSX Terraform Provider</source>
          <target state="translated">NSX Terraform 제공자</target>
        </trans-unit>
        <trans-unit id="838a2413bfa1f56ce20592cb7be075b9c4ca34d9" translate="yes" xml:space="preserve">
          <source>The NSX Terraform provider can be used to manage logical networking and security constructs in NSX. This includes logical switching, routing and firewall.</source>
          <target state="translated">NSX Terraform 제공자는 NSX에서 논리적 네트워킹 및 보안 구성을 관리하는 데 사용될 수 있습니다. 여기에는 논리적 전환, 라우팅 및 방화벽이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="a85f57e5846e98f446f591b8500f0a3dbde53393" translate="yes" xml:space="preserve">
          <source>The NSX Terraform provider gives the NSX administrator a way to automate NSX to provide virtualized networking and security services using both ESXi and KVM based hypervisor hosts as well as container networking and security.</source>
          <target state="translated">NSX Terraform 제공자는 NSX 관리자에게 컨테이너 네트워킹 및 보안뿐만 아니라 ESXi 및 KVM 기반 하이퍼 바이저 호스트를 사용하여 가상화 된 네트워킹 및 보안 서비스를 제공하도록 NSX를 자동화 할 수있는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0ad33ad0711a54a37e3ed7da399e1db9ee0723e7" translate="yes" xml:space="preserve">
          <source>The NSX provider offers several ways to authenticate to the NSX manager. Credentials can be provided statically or provided as environment variables. In addition, client certificates can be used for authentication. For authentication with certificates Terraform will require a certificate file and private key file in PEM format. To use client certificates the client certificate needs to be registered with NSX-T manager prior to invoking Terraform.</source>
          <target state="translated">NSX 공급자는 NSX Manager에 인증하는 여러 가지 방법을 제공합니다. 신임 정보는 정적으로 제공되거나 환경 변수로 제공 될 수 있습니다. 또한 클라이언트 인증서를 인증에 사용할 수 있습니다. 인증서 인증을 위해 Terraform에는 PEM 형식의 인증서 파일 및 개인 키 파일이 필요합니다. 클라이언트 인증서를 사용하려면 Terraform을 호출하기 전에 NSX-T 관리자에 클라이언트 인증서를 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="f4bc5cd231f79ef022b5ba8efa6960b9012ef437" translate="yes" xml:space="preserve">
          <source>The OVH provider is used to interact with the many resources supported by OVH. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">OVH 제공자는 OVH가 지원하는 많은 자원과 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="0db1d714142fed350d9fdd494dd443296cae52f1" translate="yes" xml:space="preserve">
          <source>The OpenStack provider is used to interact with the many resources supported by OpenStack. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">OpenStack 공급자는 OpenStack에서 지원하는 많은 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="d408a4eb79e4b42271af770b36b32f041e9becb5" translate="yes" xml:space="preserve">
          <source>The OpenTelekomCloud provider is used to interact with the many resources supported by OpenTelekomCloud. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">OpenTelekomCloud 제공자는 OpenTelekomCloud가 지원하는 많은 자원과 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="9b6ebe1c1135d60390c1fa4ad6cdab27da05e506" translate="yes" xml:space="preserve">
          <source>The OpsGenie provider is used to interact with the many resources supported by OpsGenie. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">OpsGenie 공급자는 OpsGenie가 지원하는 많은 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="a5b5ea15e2fcf058101526cc1bd4ec16e0952c34" translate="yes" xml:space="preserve">
          <source>The Oracle Cloud Infrastructure Classic provider (formerly know as the Oracle Public Cloud provider) is used to interact with the many resources supported by the &lt;a href=&quot;http://cloud.oracle.com/classic&quot;&gt;Oracle Cloud Infrastructure Classic&lt;/a&gt; and &lt;a href=&quot;https://cloud.oracle.com/cloud-at-customer&quot;&gt;Oracle Cloud at Customer&lt;/a&gt; infrastructure services. The provider needs to be configured with credentials for the Oracle Cloud Account.</source>
          <target state="translated">Oracle Cloud Infrastructure Classic 제공자 (이전 Oracle Public Cloud 제공자라고 함)는 &lt;a href=&quot;http://cloud.oracle.com/classic&quot;&gt;Oracle Cloud Infrastructure Classic&lt;/a&gt; 및 &lt;a href=&quot;https://cloud.oracle.com/cloud-at-customer&quot;&gt;Oracle Cloud at Customer&lt;/a&gt; 인프라 서비스 에서 지원하는 많은 리소스와 상호 작용하는 데 사용됩니다 . 공급자는 Oracle Cloud 계정의 자격 증명으로 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="d875fa1a12f3f7828b0794047532ca2466dc43d2" translate="yes" xml:space="preserve">
          <source>The Oracle Cloud Platform (Oracle PaaS) provider is used to interact with resources supported by the &lt;a href=&quot;http://cloud.oracle.com/paas&quot;&gt;Oracle Cloud Platform&lt;/a&gt; services. The provider needs to be configured with credentials for the Oracle Cloud Account.</source>
          <target state="translated">Oracle PaaS (Oracle Cloud Platform) 공급자는 &lt;a href=&quot;http://cloud.oracle.com/paas&quot;&gt;Oracle Cloud Platform&lt;/a&gt; 서비스 에서 지원하는 리소스와 상호 작용하는 데 사용됩니다 . 공급자는 Oracle Cloud 계정의 자격 증명으로 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="6448b4b3ab131c7589cdbbcdeae4ea7e7c45ea0f" translate="yes" xml:space="preserve">
          <source>The Packet provider is used to interact with the resources supported by Packet. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">패킷 공급자는 패킷이 지원하는 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="be9734312b7624b14c08092a0bdc5a34d5c03023" translate="yes" xml:space="preserve">
          <source>The PostgreSQL provider gives the ability to deploy and configure resources in a PostgreSQL server.</source>
          <target state="translated">PostgreSQL 공급자는 PostgreSQL 서버에서 리소스를 배포하고 구성 할 수있는 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c4a82ad65f65bb12e302745a8dc89d3c352b8c82" translate="yes" xml:space="preserve">
          <source>The PowerDNS provider is used manipulate DNS records supported by PowerDNS server. The provider needs to be configured with the proper credentials before it can be used. It supports both the &lt;a href=&quot;https://doc.powerdns.com/3/httpapi/api_spec/&quot;&gt;legacy API&lt;/a&gt; and the new &lt;a href=&quot;https://doc.powerdns.com/md/httpapi/api_spec/&quot;&gt;version 1 API&lt;/a&gt;, however resources may need to be configured differently.</source>
          <target state="translated">PowerDNS 제공자는 PowerDNS 서버가 지원하는 DNS 레코드를 조작하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다. &lt;a href=&quot;https://doc.powerdns.com/3/httpapi/api_spec/&quot;&gt;레거시 API&lt;/a&gt; 와 새 &lt;a href=&quot;https://doc.powerdns.com/md/httpapi/api_spec/&quot;&gt;버전 1 API를&lt;/a&gt; 모두 지원 하지만 리소스를 다르게 구성해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c46fabe0e0aada5eb22c4954ff9c8ae0a593352" translate="yes" xml:space="preserve">
          <source>The Profile Setting is implicitly chosen based on what params are configured for the security rule. If you want a Profile Setting of &lt;code&gt;Group&lt;/code&gt;, then the &lt;code&gt;group&lt;/code&gt; param should be set to the desired Group Profile. If you want a Profile Setting of &lt;code&gt;Profiles&lt;/code&gt;, then you will need to specify one or more of the following params:</source>
          <target state="translated">프로파일 설정은 보안 규칙에 대해 구성된 매개 변수에 따라 내재적으로 선택됩니다. 당신의 프로필 설정하려면 &lt;code&gt;Group&lt;/code&gt; , 다음 &lt;code&gt;group&lt;/code&gt; PARAM 원하는 그룹 프로필로 설정해야합니다. 당신의 프로필 설정하려면 &lt;code&gt;Profiles&lt;/code&gt; , 당신은 다음 PARAMS 중 하나 이상을 지정해야합니다 :</target>
        </trans-unit>
        <trans-unit id="6a4a6adb126336276a7697a8bc9905100d6b1320" translate="yes" xml:space="preserve">
          <source>The ProfitBricks provider gives the ability to deploy and configure resources using the ProfitBricks Cloud API.</source>
          <target state="translated">ProfitBricks 제공자는 ProfitBricks Cloud API를 사용하여 자원을 배치하고 구성 할 수있는 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="39df0912f1599d0deee0d5cc7fb34abe74954f64" translate="yes" xml:space="preserve">
          <source>The Provider Schema</source>
          <target state="translated">공급자 스키마</target>
        </trans-unit>
        <trans-unit id="c87a7f34342ab1f96aad1181ff61dd4bbd1aafbd" translate="yes" xml:space="preserve">
          <source>The RabbitMQ management plugin must be enabled to use this provider. You can enable the plugin by doing something similar to:</source>
          <target state="translated">이 제공자를 사용하려면 RabbitMQ 관리 플러그인이 사용 가능해야합니다. 다음과 비슷한 작업을 수행하여 플러그인을 활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0699cc4a3dad6edade38be65e567a9db2f37e59" translate="yes" xml:space="preserve">
          <source>The Ram Account Alias data source provides an alias for the Alicloud account.</source>
          <target state="translated">Ram 계정 별칭 데이터 소스는 Alicloud 계정에 대한 별칭을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6601bbf28810bcbb87a1e3f4e5f0dc3fe183df7e" translate="yes" xml:space="preserve">
          <source>The Ram Groups data source provides a list of Alicloud Ram Groups in an Alicloud account according to the specified filters.</source>
          <target state="translated">Ram Groups 데이터 소스는 지정된 필터에 따라 Alicloud 계정의 Alicloud Ram Group 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fa30ed94ac59c551104ef9f69ea5bee8272c506d" translate="yes" xml:space="preserve">
          <source>The Ram Policies data source provides a list of Alicloud Ram Policies in an Alicloud account according to the specified filters.</source>
          <target state="translated">Ram Policies 데이터 소스는 지정된 필터에 따라 Alicloud 계정의 Alicloud Ram 정책 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ac98fd99a9df39dd6286ff45cd16d9970e9bbba3" translate="yes" xml:space="preserve">
          <source>The Ram Roles data source provides a list of Alicloud Ram Roles in an Alicloud account according to the specified filters.</source>
          <target state="translated">Ram Roles 데이터 소스는 지정된 필터에 따라 Alicloud 계정의 Alicloud Ram 역할 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9b90cb28b1d4c2d98291cdf727a83d13e48c16e3" translate="yes" xml:space="preserve">
          <source>The Ram Users data source provides a list of Alicloud Ram Users in an Alicloud account according to the specified filters.</source>
          <target state="translated">Ram Users 데이터 소스는 지정된 필터에 따라 Alicloud 계정의 Alicloud Ram Users 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="90193f95dc71c5836d04960e3574fc7bc7cc69ea" translate="yes" xml:space="preserve">
          <source>The Rancher provider is used to interact with the resources supported by Rancher. The provider needs to be configured with the URL of the Rancher server at minimum and API credentials if access control is enabled on the server.</source>
          <target state="translated">Rancher 제공자는 Rancher가 지원하는 자원과 상호 작용하는 데 사용됩니다. 서버에서 액세스 제어가 사용 가능한 경우 제공자는 Rancher 서버의 URL과 API 신임 정보로 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="88a4cc846cf60f47458e521a1767bd07e9984898" translate="yes" xml:space="preserve">
          <source>The Regions data source allows access to the list of Alicloud Regions.</source>
          <target state="translated">리전 데이터 소스를 사용하면 Alicloud 리전 목록에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="edbdfc887cebbc25b4b2f000a7ff234bb5988a0a" translate="yes" xml:space="preserve">
          <source>The Replication Controller allows you to replicate pods. This is useful for maintaining overall availability and scalability of your application exposed to the user.</source>
          <target state="translated">복제 컨트롤러를 사용하면 포드를 복제 할 수 있습니다. 이는 사용자에게 노출 된 응용 프로그램의 전체 가용성과 확장 성을 유지하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="8db1f7ad6b8f8cb669f731b5fb9ed3d9e22662d4" translate="yes" xml:space="preserve">
          <source>The Rundeck provider allows Terraform to create and configure Projects, Jobs and Keys in &lt;a href=&quot;http://rundeck.org/&quot;&gt;Rundeck&lt;/a&gt;. Rundeck is a tool for runbook automation and execution of arbitrary management tasks, allowing operators to avoid logging in to individual machines directly via SSH.</source>
          <target state="translated">Rundeck 제공자를 통해 Terraform은 &lt;a href=&quot;http://rundeck.org/&quot;&gt;Rundeck&lt;/a&gt; 에서 프로젝트, 작업 및 키를 생성하고 구성 할 수 있습니다 . Rundeck은 Runbook 자동화 및 임의 관리 작업 실행을위한 도구이므로 운영자는 SSH를 통해 개별 시스템에 직접 로그인하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="6f9c6c84477d5bb2b62d5b6fca698946328e3e3a" translate="yes" xml:space="preserve">
          <source>The Runscope provider is used to interact with the resources supported by Runscope. The provider needs to be configured with an access token before it can be used.</source>
          <target state="translated">Runscope 공급자는 Runscope에서 지원하는 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 먼저 액세스 토큰으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="7feaafaa7ab62d67c23ca9fd670ca57771869199" translate="yes" xml:space="preserve">
          <source>The S3 backend can be used in a number of different ways that make different tradeoffs between convenience, security, and isolation in such an organization. This section describes one such approach that aims to find a good compromise between these tradeoffs, allowing use of &lt;a href=&quot;../../state/workspaces&quot;&gt;Terraform's workspaces feature&lt;/a&gt; to switch conveniently between multiple isolated deployments of the same configuration.</source>
          <target state="translated">S3 백엔드는 이러한 조직에서 편의성, 보안 및 격리간에 서로 다른 절충점을 만드는 다양한 방법으로 사용될 수 있습니다. 이 섹션에서는 이러한 절충점 사이에서 좋은 절충안을 찾는 것을 목표로하는 그러한 접근 방법 중 하나에 대해 설명합니다. &lt;a href=&quot;../../state/workspaces&quot;&gt;Terraform의 작업 공간 기능&lt;/a&gt; 을 사용 하여 동일한 구성의 여러 격리 된 배포간에 편리하게 전환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e40a62c6bdcc4b47fd5db6b5eb41e1cdb2ecba7c" translate="yes" xml:space="preserve">
          <source>The S3 object data source allows access to the metadata and &lt;em&gt;optionally&lt;/em&gt; (see below) content of an object stored inside S3 bucket.</source>
          <target state="translated">S3 객체 데이터 소스를 통해 S3 버킷에 저장된 객체 의 메타 데이터 및 &lt;em&gt;선택적으로&lt;/em&gt; (아래 참조) 내용에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="52c5d790b60686f0ecaf36b18cc39d152df5aa53" translate="yes" xml:space="preserve">
          <source>The Scaleway provider is used to manage Scaleway resources.</source>
          <target state="translated">Scaleway 공급자는 Scaleway 리소스를 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ce0416222fce2af9315d297b220fffc610e2e036" translate="yes" xml:space="preserve">
          <source>The Schema attribute &lt;code&gt;Type&lt;/code&gt; defines what kind of values users can provide in their configuration for this element. Here we define the available schema types supported. See &lt;a href=&quot;schema-behaviors&quot;&gt;Schema Behaviors&lt;/a&gt; for more information on configuring element behaviors.</source>
          <target state="translated">스키마 속성 &lt;code&gt;Type&lt;/code&gt; 은이 요소의 구성에서 사용자가 제공 할 수있는 값의 종류를 정의합니다. 여기서 지원되는 사용 가능한 스키마 유형을 정의합니다. 요소 비헤이비어 구성에 대한 자세한 내용 은 &lt;a href=&quot;schema-behaviors&quot;&gt;스키마 비헤이비어&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c11e616f9f476638a0022190850013a9b0520f97" translate="yes" xml:space="preserve">
          <source>The Schema package is a high-level framework for easily writing Plugins for Terraform. Providers (with Resources and/or Data Sources), and Provisioners are all defined in terms of the Schema package, which includes builtin types and methods for developers to use when writing plugins.</source>
          <target state="translated">스키마 패키지는 Terraform 용 플러그인을 쉽게 작성할 수있는 고급 프레임 워크입니다. 제공자 (자원 및 / 또는 데이터 소스 포함) 및 제공자는 모두 플러그인 작성시 개발자가 사용할 수있는 내장 유형 및 메소드를 포함하는 스키마 패키지로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="6c96ad3569c7501e912b871e1c6508fafeb830f7" translate="yes" xml:space="preserve">
          <source>The Security Groups data source provides a list of Security Groups in an Alicloud account according to the specified filters.</source>
          <target state="translated">보안 그룹 데이터 소스는 지정된 필터에 따라 Alicloud 계정의 보안 그룹 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5888ce5a2d63e696f9c5281fc1cae416f23da820" translate="yes" xml:space="preserve">
          <source>The Server Load Balancer instance attached with VPC-type ECS instances cannot be attached to the scaling group.</source>
          <target state="translated">VPC 유형 ECS 인스턴스와 연결된 Server Load Balancer 인스턴스는 조정 그룹에 연결할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3d637050ead759620656d6a14bc49e815c80ff92" translate="yes" xml:space="preserve">
          <source>The Server Load Balancer instance must be enabled.</source>
          <target state="translated">Server Load Balancer 인스턴스가 활성화되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a54768532921592011d99372be846705fdfa8c0c" translate="yes" xml:space="preserve">
          <source>The Service resource requires a domain name that is correctly set up to direct traffic to the Fastly service. See Fastly's guide on &lt;a href=&quot;https://docs.fastly.com/guides/basic-setup/adding-cname-records&quot;&gt;Adding CNAME Records&lt;/a&gt; on their documentation site for guidance.</source>
          <target state="translated">서비스 리소스에는 트래픽을 Fastly 서비스로 보내도록 올바르게 설정된 도메인 이름이 필요합니다. 지침은 설명서 사이트에서 &lt;a href=&quot;https://docs.fastly.com/guides/basic-setup/adding-cname-records&quot;&gt;CNAME 레코드 추가&lt;/a&gt; 에 대한 빠른 안내서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b49515accb4581013f1a4aef63227e2bb6972689" translate="yes" xml:space="preserve">
          <source>The SoftLayer provider is used to manage SoftLayer resources.</source>
          <target state="translated">SoftLayer 제공자는 SoftLayer 자원을 관리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7afcaa337135a449b1300e93174642fee5f4a833" translate="yes" xml:space="preserve">
          <source>The Spotinst provider is used to interact with the resources supported by Spotinst. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Spotinst 제공자는 Spotinst가 지원하는 자원과 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="54efd0f7474c1c4a320dee6025f833f3d0fe4aa4" translate="yes" xml:space="preserve">
          <source>The StatusCake provider allows Terraform to create and configure tests in &lt;a href=&quot;https://www.statuscake.com/&quot;&gt;StatusCake&lt;/a&gt;. StatusCake is a tool that helps to monitor the uptime of your service via a network of monitoring centers throughout the world</source>
          <target state="translated">StatusCake 제공자는 Terraform 만들고있는 구성 테스트 할 수 있습니다 &lt;a href=&quot;https://www.statuscake.com/&quot;&gt;StatusCake&lt;/a&gt; . StatusCake는 전 세계 모니터링 센터 네트워크를 통해 서비스 가동 시간을 모니터링 할 수있는 도구입니다.</target>
        </trans-unit>
        <trans-unit id="fd204bf7116c4a49372ec4bd809aea39342ec92d" translate="yes" xml:space="preserve">
          <source>The TLS provider provides utilities for working with &lt;em&gt;Transport Layer Security&lt;/em&gt; keys and certificates. It provides resources that allow private keys, certificates and certficate requests to be created as part of a Terraform deployment.</source>
          <target state="translated">TLS 공급자는 &lt;em&gt;전송 계층 보안&lt;/em&gt; 키 및 인증서 작업을위한 유틸리티를 제공합니다 . 개인 키, 인증서 및 인증 요청을 Terraform 배포의 일부로 생성 할 수있는 리소스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9633f2b263924cfca97d724b569651c62c40d639" translate="yes" xml:space="preserve">
          <source>The TelefonicaOpenCloud provider is used to interact with the many resources supported by TelefonicaOpenCloud. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">TelefonicaOpenCloud 제공자는 TelefonicaOpenCloud에서 지원하는 많은 자원과 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="139da4ba89c94ffd70ffbd887864b537a00731b4" translate="yes" xml:space="preserve">
          <source>The Terraform CLI commands interact with the HashiCorp service &lt;a href=&quot;https://checkpoint.hashicorp.com/&quot;&gt;Checkpoint&lt;/a&gt; to check for the availability of new versions and for critical security bulletins about the current version.</source>
          <target state="translated">Terraform CLI 명령은 HashiCorp 서비스 &lt;a href=&quot;https://checkpoint.hashicorp.com/&quot;&gt;검사 점&lt;/a&gt; 과 상호 작용하여 새 버전의 가용성과 현재 버전에 대한 중요한 보안 게시판을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c1e828d7431912bc6798576f02cbd81150d61edd" translate="yes" xml:space="preserve">
          <source>The Terraform Registry is integrated directly into Terraform to make consuming modules easy. See &lt;a href=&quot;modules/use#using-modules&quot;&gt;the usage information&lt;/a&gt;.</source>
          <target state="translated">Terraform Registry는 Terraform에 직접 통합되어 소비 모듈을 쉽게 사용할 수 있습니다. &lt;a href=&quot;modules/use#using-modules&quot;&gt;사용법 정보를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6a999297ee3130fe7107f7cd7258a31edea35e6e" translate="yes" xml:space="preserve">
          <source>The Terraform Registry is integrated directly into Terraform. This makes it easy to reference any module in the registry. The syntax for referencing a registry module is &lt;code&gt;&amp;lt;NAMESPACE&amp;gt;/&amp;lt;NAME&amp;gt;/&amp;lt;PROVIDER&amp;gt;&lt;/code&gt;. For example: &lt;code&gt;hashicorp/consul/aws&lt;/code&gt;.</source>
          <target state="translated">Terraform Registry는 Terraform에 직접 통합되어 있습니다. 이를 통해 레지스트리의 모든 모듈을 쉽게 참조 할 수 있습니다. 레지스트리 모듈을 참조하는 구문은 &lt;code&gt;&amp;lt;NAMESPACE&amp;gt;/&amp;lt;NAME&amp;gt;/&amp;lt;PROVIDER&amp;gt;&lt;/code&gt; 입니다. 예를 들면 : &lt;code&gt;hashicorp/consul/aws&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="792600fa7e35f1a5ef35bb8b2844099da47f0306" translate="yes" xml:space="preserve">
          <source>The Terraform Registry uses tags to detect releases.</source>
          <target state="translated">Terraform Registry는 태그를 사용하여 릴리스를 감지합니다.</target>
        </trans-unit>
        <trans-unit id="8c21193bef05aa8a88c8c8881b5540f03b36e347" translate="yes" xml:space="preserve">
          <source>The Terraform configuration required for the test is applied. This is responsible for configuring the resource under test, and any dependencies it may have. For example, to test the &lt;code&gt;azurerm_public_ip&lt;/code&gt; resource, an &lt;code&gt;azurerm_resource_group&lt;/code&gt; is required. This results in configuration which looks like this:</source>
          <target state="translated">테스트에 필요한 Terraform 구성이 적용됩니다. 이는 테스트중인 리소스 및 해당 리소스의 구성을 담당합니다. 예를 들어 &lt;code&gt;azurerm_public_ip&lt;/code&gt; 자원 을 테스트하려면 &lt;code&gt;azurerm_resource_group&lt;/code&gt; 이 필요합니다. 구성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f1568d7da94cc85200fbed5feb847220ffcd8571" translate="yes" xml:space="preserve">
          <source>The Terraform state subcommands all work with remote state just as if it was local state. Reads and writes may take longer than normal as each read and each write do a full network roundtrip. Otherwise, backups are still written to disk and the CLI usage is the same as if it were local state.</source>
          <target state="translated">Terraform state 부속 명령은 모두 마치 로컬 상태 인 것처럼 원격 상태에서 작동합니다. 각 읽기 및 쓰기가 전체 네트워크 왕복을 수행하므로 읽기 및 쓰기가 평소보다 오래 걸릴 수 있습니다. 그렇지 않으면 백업은 여전히 ​​디스크에 기록되며 CLI 사용법은 로컬 상태 인 것과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="eb8845cf709d813b08ff223369516af0c93c1cd3" translate="yes" xml:space="preserve">
          <source>The Traffic Manager is created with the location &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">Traffic Manager는 &lt;code&gt;global&lt;/code&gt; 위치로 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="dc6e6571aff9e21a77882dc2c3d1494d21dfeeae" translate="yes" xml:space="preserve">
          <source>The Triton provider is used to interact with resources in Joyent's Triton cloud. It is compatible with both public- and on-premise installations of Triton. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Triton 공급자는 Joyent의 Triton 클라우드에서 리소스와 상호 작용하는 데 사용됩니다. Triton의 공개 및 사내 설치와 호환됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="12a08b14ff049eca1eadf196f27babac4a76f53e" translate="yes" xml:space="preserve">
          <source>The URLs are computed entirely offline - as long as the project exists, they will be valid, but this data source does not contact Google Container Registry (GCR) at any point.</source>
          <target state="translated">프로젝트가 존재하는 한 URL은 완전히 오프라인으로 계산되지만 유효하지만이 데이터 소스는 언제든지 GCR (Google Container Registry)에 접속하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="070c738d544238cd5689ae34e0da7d7c0dd7ca08" translate="yes" xml:space="preserve">
          <source>The URLs for Git repositories support the following query parameters:</source>
          <target state="translated">Git 리포지토리의 URL은 다음 쿼리 매개 변수를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="5fa38e8689deb0bad4cb058ab24d24116e95a566" translate="yes" xml:space="preserve">
          <source>The UltraDNS provider is used to interact with the resources supported by UltraDNS. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">UltraDNS 제공자는 UltraDNS가 지원하는 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="e918b1172c44ad2bb52b5cd54bc0d54e91760e73" translate="yes" xml:space="preserve">
          <source>The VMware vCloud Director provider is used to interact with the resources supported by VMware vCloud Director. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">VMware vCloud Director 공급자는 VMware vCloud Director에서 지원하는 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="137b811a0728bc404ab4c28eed1af7207fc5b9a2" translate="yes" xml:space="preserve">
          <source>The VMware vSphere provider gives Terraform the ability to work with VMware vSphere Products, notably &lt;a href=&quot;https://www.vmware.com/products/vcenter-server.html&quot;&gt;vCenter Server&lt;/a&gt; and &lt;a href=&quot;https://www.vmware.com/products/esxi-and-esx.html&quot;&gt;ESXi&lt;/a&gt;. This provider can be used to manage many aspects of a VMware vSphere environment, including virtual machines, standard and distributed networks, datastores, and more.</source>
          <target state="translated">VMware vSphere 제공자는 Terraform에게 VMware vSphere 제품, 특히 &lt;a href=&quot;https://www.vmware.com/products/vcenter-server.html&quot;&gt;vCenter Server&lt;/a&gt; 및 &lt;a href=&quot;https://www.vmware.com/products/esxi-and-esx.html&quot;&gt;ESXi&lt;/a&gt; 와 함께 작업 할 수있는 기능을 제공합니다 . 이 공급자는 가상 시스템, 표준 및 분산 네트워크, 데이터 스토어 등 VMware vSphere 환경의 여러 측면을 관리하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ae5a36483476863b9a6696226edf9b89bccd58f" translate="yes" xml:space="preserve">
          <source>The VPC Endpoint Service data source details about a specific service that can be specified when creating a VPC endpoint within the region configured in the provider.</source>
          <target state="translated">VPC 엔드 포인트 서비스 데이터 소스는 제공자에 구성된 리전 내에서 VPC 엔드 포인트를 생성 할 때 지정할 수있는 특정 서비스에 대한 세부 정보입니다.</target>
        </trans-unit>
        <trans-unit id="ec64745257c0d9c2d9ebd0d83682d6441bf0dbe2" translate="yes" xml:space="preserve">
          <source>The VPC Endpoint data source provides details about a specific VPC endpoint.</source>
          <target state="translated">VPC 엔드 포인트 데이터 소스는 특정 VPC 엔드 포인트에 대한 세부 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8a28b2592aaf559479c81afb67a65a81420b69e3" translate="yes" xml:space="preserve">
          <source>The VPC Peering Connection data source provides details about a specific VPC peering connection.</source>
          <target state="translated">VPC 피어링 연결 데이터 소스는 특정 VPC 피어링 연결에 대한 세부 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a2631adf4f23fe5438e7db773a0b5ccbf3d23b90" translate="yes" xml:space="preserve">
          <source>The VPCs data source lists a number of VPCs resource information owned by an Alicloud account.</source>
          <target state="translated">VPC 데이터 소스에는 Alicloud 계정이 소유 한 여러 VPC 리소스 정보가 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="d307e45eca92c7753bd1ff2950a47757cbc8ab31" translate="yes" xml:space="preserve">
          <source>The VPN Gateway data source provides details about a specific VPN gateway.</source>
          <target state="translated">VPN Gateway 데이터 소스는 특정 VPN 게이트웨이에 대한 세부 사항을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d1e75df6d6176ccf9c326bfe8bf6c188a3011e41" translate="yes" xml:space="preserve">
          <source>The Vault provider allows Terraform to read from, write to, and configure &lt;a href=&quot;https://vaultproject.io/&quot;&gt;Hashicorp Vault&lt;/a&gt;.</source>
          <target state="translated">Vault 제공 업체를 통해 Terraform은 &lt;a href=&quot;https://vaultproject.io/&quot;&gt;Hashicorp Vault&lt;/a&gt; 를 읽고 쓰고 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3723d4408e95216ff67f8d282d6629ae1d23eef" translate="yes" xml:space="preserve">
          <source>The Virtual sunbet data source lists a list of vswitches resource information owned by an Alicloud account, and each vswitch including its basic attribution, VPC ID and containing ECS instance IDs.</source>
          <target state="translated">Virtual sunbet 데이터 소스에는 Alicloud 계정이 소유 한 vswitches 리소스 정보와 기본 속성, VPC ID 및 ECS 인스턴스 ID를 포함하는 각 vswitch의 목록이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="8b14497cc154c79c0c85df64765f5c5886b043c3" translate="yes" xml:space="preserve">
          <source>The Zones data source allows access to the list of Alicloud Zones which can be accessed by an Alicloud account within the region configured in the provider.</source>
          <target state="translated">영역 데이터 소스를 사용하면 공급자에 구성된 리전 내 Alicloud 계정으로 액세스 할 수있는 Alicloud 영역 목록에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="daad845d21c26b8c195d3b9d25ec9323ac20cd96" translate="yes" xml:space="preserve">
          <source>The above command imports the DHCP relay profile named &lt;code&gt;dr_profile&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위의 명령 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 와 함께 &lt;code&gt;dr_profile&lt;/code&gt; 이라는 DHCP 릴레이 프로파일을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="cbceb1e7d3d9ffa8a6df269cf4d516233df0a001" translate="yes" xml:space="preserve">
          <source>The above command imports the DHCP relay service named &lt;code&gt;dr_service&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위의 명령 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 와 함께 &lt;code&gt;dr_service&lt;/code&gt; 라는 DHCP 릴레이 서비스를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="9c51beb32341f5628c86530e61f310f21b494f6d" translate="yes" xml:space="preserve">
          <source>The above command imports the IGMP based networking and security service named &lt;code&gt;ns_service_igmp&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위 명령 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 와 함께 &lt;code&gt;ns_service_igmp&lt;/code&gt; 라는 IGMP 기반 네트워킹 및 보안 서비스를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="98e306bb9166fa0253a5199f25e7a91749986693" translate="yes" xml:space="preserve">
          <source>The above command imports the IP protocol based networking and security service named &lt;code&gt;ns_service_ip&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위 명령 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 와 함께 &lt;code&gt;ns_service_ip&lt;/code&gt; 라는 IP 프로토콜 기반 네트워킹 및 보안 서비스를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="9c8126a2d9cc521c165cc61e2dec4648af1c8dc0" translate="yes" xml:space="preserve">
          <source>The above command imports the IP set named &lt;code&gt;ip_set1&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위 명령 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 와 함께 &lt;code&gt;ip_set1&lt;/code&gt; 이라는 IP 세트를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="d713240fe2d8527598b3e3e6ee37dcf19be10fdb" translate="yes" xml:space="preserve">
          <source>The above command imports the NAT rule named &lt;code&gt;rule1&lt;/code&gt; with the number id &lt;code&gt;nat-rule-num&lt;/code&gt; that belongs to the tier 1 logical router with the NSX id &lt;code&gt;logical-router-uuid&lt;/code&gt;.</source>
          <target state="translated">위의 명령 은 NSX id &lt;code&gt;logical-router-uuid&lt;/code&gt; 를 사용하여 1 티어 논리 라우터에 속하는 ID가 &lt;code&gt;nat-rule-num&lt;/code&gt; 이라는 번호가 &lt;code&gt;rule1&lt;/code&gt; 인 NAT 규칙을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f8a899540911cec19a22ffb04576c0c44ba848d8" translate="yes" xml:space="preserve">
          <source>The above command imports the algorithm based networking and security service named &lt;code&gt;ns_service_alg&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위 명령 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 와 함께 &lt;code&gt;ns_service_alg&lt;/code&gt; 라는 알고리즘 기반 네트워킹 및 보안 서비스를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="3334daea80454da2ea3c88e9574a23f711b81f55" translate="yes" xml:space="preserve">
          <source>The above command imports the ethernet type networking and security service named &lt;code&gt;etns&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위 명령 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 와 함께 &lt;code&gt;etns&lt;/code&gt; 라는 이더넷 유형 네트워킹 및 보안 서비스를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="19535fe0065fb40390b251dd3d7358130fc11828" translate="yes" xml:space="preserve">
          <source>The above command imports the firewall section named &lt;code&gt;firewall_sect&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위 명령 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 와 함께 &lt;code&gt;firewall_sect&lt;/code&gt; 라는 방화벽 섹션을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="75519316e98d3ae58f2b5cdc7ff822c2378036f7" translate="yes" xml:space="preserve">
          <source>The above command imports the layer 4 port based networking and security service named &lt;code&gt;ns_service_l4&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위의 명령 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 와 함께 &lt;code&gt;ns_service_l4&lt;/code&gt; 라는 레이어 4 포트 기반 네트워킹 및 보안 서비스를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="b270c834b69d9d6ca2654534f6455ebb11e781ca" translate="yes" xml:space="preserve">
          <source>The above command imports the logical port named &lt;code&gt;logical_port&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위의 명령 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 와 함께 &lt;code&gt;logical_port&lt;/code&gt; 라는 논리 포트를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="12a33227c347f430a3c2c7c2e998569d19f7233f" translate="yes" xml:space="preserve">
          <source>The above command imports the logical router downlink port named &lt;code&gt;downlink_port&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위의 명령 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 와 함께 &lt;code&gt;downlink_port&lt;/code&gt; 라는 논리적 라우터 다운 링크 포트를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="b93288d39176b62a790994ff2501cbe0be8fd50c" translate="yes" xml:space="preserve">
          <source>The above command imports the logical router link port on the tier 0 logical router named &lt;code&gt;link_port_tier0&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위의 명령 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 를 사용하여 &lt;code&gt;link_port_tier0&lt;/code&gt; 이라는 티어 0 논리 라우터의 논리 라우터 링크 포트를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="baa8b28c1d2b3ecd0a194e7c9a7275fe2e7bb321" translate="yes" xml:space="preserve">
          <source>The above command imports the logical router link port on the tier 1 router named &lt;code&gt;link_port_tier1&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위의 명령 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 를 사용하여 &lt;code&gt;link_port_tier1&lt;/code&gt; 이라는 계층 1 라우터의 논리적 라우터 링크 포트를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="f2bcc920e450a4500b3b3dbc2d21711fad2dcbcf" translate="yes" xml:space="preserve">
          <source>The above command imports the logical switch named &lt;code&gt;switch1&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위 명령은 이름이 지정된 논리적 스위치를 가져옵니다. &lt;code&gt;switch1&lt;/code&gt; 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 와 함께 switch1 .</target>
        </trans-unit>
        <trans-unit id="712c63b0cfc600d5d9c31b50306ff3744b991c14" translate="yes" xml:space="preserve">
          <source>The above command imports the logical tier 1 router named &lt;code&gt;tier1_router&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위의 명령은 &lt;code&gt;tier1_router&lt;/code&gt; 라는 논리적 티어 1 라우터를 가져옵니다. 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 와 함께 .</target>
        </trans-unit>
        <trans-unit id="ad1c9b5a1182922719c004214838c5090a6c4aef" translate="yes" xml:space="preserve">
          <source>The above command imports the networking and security group named &lt;code&gt;group2&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">위 명령은 &lt;code&gt;group2&lt;/code&gt; 라는 네트워킹 및 보안 그룹을 가져옵니다. 은 NSX id &lt;code&gt;UUID&lt;/code&gt; 와 함께 .</target>
        </trans-unit>
        <trans-unit id="6fd2192657b010e67e3d7b23cd4229ffb370f1d9" translate="yes" xml:space="preserve">
          <source>The above command imports the static route named &lt;code&gt;static_route&lt;/code&gt; with the number &lt;code&gt;static-route-num&lt;/code&gt; that belongs to the tier 1 logical router with the NSX id &lt;code&gt;logical-router-uuid&lt;/code&gt;.</source>
          <target state="translated">위의 명령 은 NSX id &lt;code&gt;logical-router-uuid&lt;/code&gt; 를 사용하여 1 티어 논리 라우터에 속하는 &lt;code&gt;static-route-num&lt;/code&gt; 번호로 &lt;code&gt;static_route&lt;/code&gt; 라는 정적 경로를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="a2b1a710155eb6f80041306431b1b061ac3ab8b2" translate="yes" xml:space="preserve">
          <source>The above command would import the folder from our examples above, the VM folder named &lt;code&gt;terraform-test-folder&lt;/code&gt; located in the datacenter named &lt;code&gt;default-dc&lt;/code&gt;.</source>
          <target state="translated">위의 명령은 위의 예제 에서 &lt;code&gt;default-dc&lt;/code&gt; 라는 데이터 센터에있는 &lt;code&gt;terraform-test-folder&lt;/code&gt; 라는 VM 폴더를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="2455119df77609282e1646d33e4ab588bd4d1970" translate="yes" xml:space="preserve">
          <source>The above example would use the &lt;a href=&quot;https://registry.terraform.io/modules/hashicorp/consul/aws&quot;&gt;Consul module for AWS&lt;/a&gt; from the public registry.</source>
          <target state="translated">위의 예제는 퍼블릭 레지스트리에서 &lt;a href=&quot;https://registry.terraform.io/modules/hashicorp/consul/aws&quot;&gt;AWS 용 Consul 모듈을&lt;/a&gt; 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="f3e678c12cba70392e2cdd731c007b3a8ce68ab4" translate="yes" xml:space="preserve">
          <source>The above import is considered a &quot;simple import&quot;: one resource is imported into the state file. An import may also result in a &quot;complex import&quot; where multiple resources are imported. For example, an AWS security group imports an &lt;code&gt;aws_security_group&lt;/code&gt; but also one &lt;code&gt;aws_security_group_rule&lt;/code&gt; for each rule.</source>
          <target state="translated">위의 가져 오기는 &quot;단순 가져 오기&quot;로 간주됩니다. 하나의 리소스를 상태 파일로 가져옵니다. 가져 오기로 인해 여러 자원을 가져 오는 &quot;복잡한 가져 오기&quot;가 발생할 수도 있습니다. 예를 들어, AWS 보안 그룹 수입 &lt;code&gt;aws_security_group&lt;/code&gt; 뿐만 아니라 하나 &lt;code&gt;aws_security_group_rule&lt;/code&gt; 각 규칙.</target>
        </trans-unit>
        <trans-unit id="ad8dacfff22f44bcfd5f8d3f95be0eff3e8607c7" translate="yes" xml:space="preserve">
          <source>The above is the simplest possible Lambda function for use with API Gateway, returning a hard-coded &quot;Hello world!&quot; response in the object structure that API Gateway expects.</source>
          <target state="translated">위는 API Gateway와 함께 사용할 수있는 가장 간단한 Lambda 함수이며 하드 코딩 된 &quot;Hello world!&quot;를 반환합니다. API Gateway가 기대하는 객체 구조의 응답.</target>
        </trans-unit>
        <trans-unit id="644940e5de7540b418d1d9f565cbd46c794b3ecf" translate="yes" xml:space="preserve">
          <source>The above service imports the ICMP type network and security service named &lt;code&gt;x&lt;/code&gt; with the NSX id &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">위의 서비스 는 NSX id &lt;code&gt;id&lt;/code&gt; 와 함께 &lt;code&gt;x&lt;/code&gt; 라는 ICMP 유형 네트워크 및 보안 서비스를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="0d3e681af6cb170fca5237d8306e2e54ae850c70" translate="yes" xml:space="preserve">
          <source>The above would import NSX virtual machine tags as a resource named &lt;code&gt;vm1_tags&lt;/code&gt; with the NSX id &lt;code&gt;id&lt;/code&gt;, where id is external ID (not the BIOS id) of the virtual machine.</source>
          <target state="translated">위의 내용은 NSX 가상 머신 태그를 NSX id &lt;code&gt;id&lt;/code&gt; 가있는 &lt;code&gt;vm1_tags&lt;/code&gt; 라는 리소스로 가져옵니다 . 여기서 id는 가상 머신의 외부 ID (BIOS ID 아님)입니다.</target>
        </trans-unit>
        <trans-unit id="b557b65e37cf850143ef43a3e26120595aa73b3a" translate="yes" xml:space="preserve">
          <source>The above would import the DVS named &lt;code&gt;dvs&lt;/code&gt; that is located in the &lt;code&gt;dc1&lt;/code&gt; datacenter.</source>
          <target state="translated">위의 내용은 &lt;code&gt;dc1&lt;/code&gt; 데이터 센터 에있는 &lt;code&gt;dvs&lt;/code&gt; 라는 DVS를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="3c7800e5fcd652088179d91fa4f173088eb83007" translate="yes" xml:space="preserve">
          <source>The above would import the cluster named &lt;code&gt;compute-cluster&lt;/code&gt; that is located in the &lt;code&gt;dc1&lt;/code&gt; datacenter.</source>
          <target state="translated">위의 내용은 &lt;code&gt;dc1&lt;/code&gt; 데이터 센터 에있는 &lt;code&gt;compute-cluster&lt;/code&gt; cluster라는 클러스터를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="8b1df0d66ae4a86d5cf4c965e2fab7f69df3d34c" translate="yes" xml:space="preserve">
          <source>The above would import the datastore cluster named &lt;code&gt;ds-cluster&lt;/code&gt; that is located in the &lt;code&gt;dc1&lt;/code&gt; datacenter.</source>
          <target state="translated">위의 데이터 저장소는 &lt;code&gt;ds-cluster&lt;/code&gt; 라는 데이터 스토어 클러스터를 가져옵니다 . &lt;code&gt;dc1&lt;/code&gt; 데이터 센터 .</target>
        </trans-unit>
        <trans-unit id="b5422358d6657a69de22a35c64c46df9eb0f9d72" translate="yes" xml:space="preserve">
          <source>The above would import the port group named &lt;code&gt;pg&lt;/code&gt; that is located in the &lt;code&gt;dc1&lt;/code&gt; datacenter.</source>
          <target state="translated">위의 내용은 &lt;code&gt;dc1&lt;/code&gt; 에있는 &lt;code&gt;pg&lt;/code&gt; 라는 포트 그룹을 가져옵니다. 데이터 센터 .</target>
        </trans-unit>
        <trans-unit id="adcf1d274416d7f9b80bbd044acc2cd947476e4e" translate="yes" xml:space="preserve">
          <source>The above would import the resource pool named &lt;code&gt;resource-pool1&lt;/code&gt; that is located in the compute cluster &lt;code&gt;compute-cluster1&lt;/code&gt; in the &lt;code&gt;dc1&lt;/code&gt; datacenter.</source>
          <target state="translated">위의 내용은 &lt;code&gt;dc1&lt;/code&gt; 의 계산 클러스터 &lt;code&gt;compute-cluster1&lt;/code&gt; 에있는 &lt;code&gt;resource-pool1&lt;/code&gt; 이라는 리소스 풀을 가져옵니다. 데이터 센터 .</target>
        </trans-unit>
        <trans-unit id="020734da81e7b8b083a868337103e7f20f7b6893" translate="yes" xml:space="preserve">
          <source>The above would import the virtual machine named &lt;code&gt;srv1&lt;/code&gt; that is located in the &lt;code&gt;dc1&lt;/code&gt; datacenter.</source>
          <target state="translated">위의 내용은 &lt;code&gt;dc1&lt;/code&gt; 에있는 &lt;code&gt;srv1&lt;/code&gt; 이라는 가상 머신을 가져옵니다. 데이터 센터 .</target>
        </trans-unit>
        <trans-unit id="7cb82d5948b8ecc0595872ab3bc6d73635a281b9" translate="yes" xml:space="preserve">
          <source>The account must have the &lt;code&gt;teams&lt;/code&gt; ability to use the following resource.</source>
          <target state="translated">계정에는 &lt;code&gt;teams&lt;/code&gt; 있어야합니다 이 다음 리소스를 사용할 수 .</target>
        </trans-unit>
        <trans-unit id="c4e12f784b6d375aab5794216652ba327a655580" translate="yes" xml:space="preserve">
          <source>The alert notification resource allows an alert notification channel to be created on a Grafana server.</source>
          <target state="translated">경고 알림 리소스를 사용하면 Grafana 서버에서 경고 알림 채널을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f204943fa1f9e11faaf1d702023504f2ecec8cd1" translate="yes" xml:space="preserve">
          <source>The amount of memory to allocate in megabytes.</source>
          <target state="translated">메가 바이트 단위로 할당 할 메모리의 양입니다.</target>
        </trans-unit>
        <trans-unit id="351512cc0f45fe5e8b08923438fbe5f4793a6e70" translate="yes" xml:space="preserve">
          <source>The amount of parallelism is limited using a semaphore to prevent too many concurrent operations from overwhelming the resources of the machine running Terraform. By default, up to 10 nodes in the graph will be processed concurrently. This number can be set using the &lt;code&gt;-parallelism&lt;/code&gt; flag on the &lt;a href=&quot;../commands/plan&quot;&gt;plan&lt;/a&gt;, &lt;a href=&quot;../commands/apply&quot;&gt;apply&lt;/a&gt;, and &lt;a href=&quot;../commands/destroy&quot;&gt;destroy&lt;/a&gt; commands.</source>
          <target state="translated">병렬 처리의 양은 세마포어를 사용하여 제한되어 너무 많은 동시 작업이 Terraform을 실행하는 시스템의 리소스를 압도하지 못하게합니다. 기본적으로 그래프에서 최대 10 개의 노드가 동시에 처리됩니다. 이 번호는 &lt;a href=&quot;../commands/plan&quot;&gt;plan&lt;/a&gt; , &lt;a href=&quot;../commands/apply&quot;&gt;apply&lt;/a&gt; 및 &lt;a href=&quot;../commands/destroy&quot;&gt;destroy&lt;/a&gt; 명령 에서 &lt;code&gt;-parallelism&lt;/code&gt; 플래그를 사용하여 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="931ac2761412b1f043ec2545c1ef27c8f451d4d1" translate="yes" xml:space="preserve">
          <source>The archive provider exposes resources to manage archive files.</source>
          <target state="translated">아카이브 공급자는 아카이브 파일을 관리하기위한 리소스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1670ed9d8476bad26919b32858bf1c0fdaf753df" translate="yes" xml:space="preserve">
          <source>The arguments &lt;code&gt;alias&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt;, if present, are special arguments handled by Terraform Core for their respective features described above. All other arguments are defined by the provider itself.</source>
          <target state="translated">인수 &lt;code&gt;alias&lt;/code&gt; 및 &lt;code&gt;version&lt;/code&gt; 존재하는 경우, 각각의 기능은 위에서 설명한 위해 Terraform 코어에 의해 처리 특별 인수입니다. 다른 모든 인수는 공급자 자체에 의해 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="2af3168cef48577109a54708ce041ca79e6765fc" translate="yes" xml:space="preserve">
          <source>The arguments for &lt;code&gt;default_cache_behavior&lt;/code&gt; are the same as for &lt;a href=&quot;#cache-behavior-arguments&quot;&gt;&lt;code&gt;ordered_cache_behavior&lt;/code&gt;&lt;/a&gt;, except for the &lt;code&gt;path_pattern&lt;/code&gt; argument is not required.</source>
          <target state="translated">&lt;code&gt;path_pattern&lt;/code&gt; 인수가 필요하지 않다는 점을 제외하고 &lt;code&gt;default_cache_behavior&lt;/code&gt; 의 인수는 &lt;a href=&quot;#cache-behavior-arguments&quot;&gt; &lt;code&gt;ordered_cache_behavior&lt;/code&gt; &lt;/a&gt; 의 인수 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="e7ea6d2f31652d70354a9d868206833f8c797f61" translate="yes" xml:space="preserve">
          <source>The arguments listed above are all exported as attributes.</source>
          <target state="translated">위에 나열된 인수는 모두 속성으로 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="08a3987ed00843a5828e511e4217d3db9f6ac890" translate="yes" xml:space="preserve">
          <source>The arguments of &lt;code&gt;geo_restriction&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;geo_restriction&lt;/code&gt; 의 인수 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3df2a4b5daae4230a3860143863d6bc2ffd8ca1e" translate="yes" xml:space="preserve">
          <source>The arguments of an &lt;code&gt;aws_default_security_group&lt;/code&gt; differ slightly from &lt;code&gt;aws_security_group&lt;/code&gt; resources. Namely, the &lt;code&gt;name&lt;/code&gt; argument is computed, and the &lt;code&gt;name_prefix&lt;/code&gt; attribute removed. The following arguments are still supported:</source>
          <target state="translated">&lt;code&gt;aws_default_security_group&lt;/code&gt; 의 인수는 &lt;code&gt;aws_security_group&lt;/code&gt; 자원 과 약간 다릅니다 . 즉, &lt;code&gt;name&lt;/code&gt; 인수가 계산되고 &lt;code&gt;name_prefix&lt;/code&gt; 속성이 제거됩니다. 다음과 같은 인수가 여전히 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="68c4eb7617fc262a75eae853b474968c9a980966" translate="yes" xml:space="preserve">
          <source>The arguments of an &lt;code&gt;aws_default_subnet&lt;/code&gt; differ from &lt;code&gt;aws_subnet&lt;/code&gt; resources. Namely, the &lt;code&gt;availability_zone&lt;/code&gt; argument is required and the &lt;code&gt;vpc_id&lt;/code&gt;, &lt;code&gt;cidr_block&lt;/code&gt;, &lt;code&gt;ipv6_cidr_block&lt;/code&gt;, and &lt;code&gt;assign_ipv6_address_on_creation&lt;/code&gt; arguments are computed. The following arguments are still supported:</source>
          <target state="translated">&lt;code&gt;aws_default_subnet&lt;/code&gt; 의 인수는 &lt;code&gt;aws_subnet&lt;/code&gt; 자원 과 다릅니다 . 즉, &lt;code&gt;availability_zone&lt;/code&gt; 인수가 필요하고 &lt;code&gt;vpc_id&lt;/code&gt; , &lt;code&gt;cidr_block&lt;/code&gt; , &lt;code&gt;ipv6_cidr_block&lt;/code&gt; 및 &lt;code&gt;assign_ipv6_address_on_creation&lt;/code&gt; 인수가 계산됩니다. 다음과 같은 인수가 여전히 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="ce354a3422650084b0db37e2eede0b6d0a2962d2" translate="yes" xml:space="preserve">
          <source>The arguments of an &lt;code&gt;aws_default_vpc&lt;/code&gt; differ slightly from &lt;code&gt;aws_vpc&lt;/code&gt; resources. Namely, the &lt;code&gt;cidr_block&lt;/code&gt;, &lt;code&gt;instance_tenancy&lt;/code&gt; and &lt;code&gt;assign_generated_ipv6_cidr_block&lt;/code&gt; arguments are computed. The following arguments are still supported:</source>
          <target state="translated">&lt;code&gt;aws_default_vpc&lt;/code&gt; 의 인수는 &lt;code&gt;aws_vpc&lt;/code&gt; 자원 과 약간 다릅니다 . 즉, &lt;code&gt;cidr_block&lt;/code&gt; , &lt;code&gt;instance_tenancy&lt;/code&gt; 및 &lt;code&gt;assign_generated_ipv6_cidr_block&lt;/code&gt; 인수가 계산됩니다. 다음과 같은 인수가 여전히 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="0d76ec05ca1758f34834b060e9d76f2ed1d5d556" translate="yes" xml:space="preserve">
          <source>The arguments of an &lt;code&gt;aws_default_vpc_dhcp_options&lt;/code&gt; differ slightly from &lt;code&gt;aws_vpc_dhcp_options&lt;/code&gt; resources. Namely, the &lt;code&gt;domain_name&lt;/code&gt;, &lt;code&gt;domain_name_servers&lt;/code&gt; and &lt;code&gt;ntp_servers&lt;/code&gt; arguments are computed. The following arguments are still supported:</source>
          <target state="translated">&lt;code&gt;aws_default_vpc_dhcp_options&lt;/code&gt; 의 인수는 &lt;code&gt;aws_vpc_dhcp_options&lt;/code&gt; 자원 과 약간 다릅니다 . 즉, &lt;code&gt;domain_name&lt;/code&gt; , &lt;code&gt;domain_name_servers&lt;/code&gt; 및 &lt;code&gt;ntp_servers&lt;/code&gt; 인수가 계산됩니다. 다음과 같은 인수가 여전히 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="f071a0ac69deae5ab418fcbe4843f80c5c9cc062" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available Elastic IPs in the current region. The given filters must match exactly one Elastic IP whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 현재 리전에서 사용 가능한 탄력적 IP를 쿼리하기위한 필터 역할을합니다. 지정된 필터는 데이터를 속성으로 내보내는 하나의 Elastic IP와 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="31f38692aa0ab6c214fdae21c047f43c836402c0" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available Hosted Zone. You have to use &lt;code&gt;zone_id&lt;/code&gt; or &lt;code&gt;name&lt;/code&gt;, not both of them. The given filter must match exactly one Hosted Zone. If you use &lt;code&gt;name&lt;/code&gt; field for private Hosted Zone, you need to add &lt;code&gt;private_zone&lt;/code&gt; field to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">이 데이터 소스의 인수는 사용 가능한 호스팅 영역을 쿼리하기위한 필터 역할을합니다. &lt;code&gt;zone_id&lt;/code&gt; 또는 &lt;code&gt;name&lt;/code&gt; 은 둘 다 사용 하지 않아야합니다. 지정된 필터는 정확히 하나의 호스팅 영역과 일치해야합니다. 프라이빗 호스팅 영역에 &lt;code&gt;name&lt;/code&gt; 필드를 사용하는 경우 &lt;code&gt;private_zone&lt;/code&gt; 필드를 &lt;code&gt;true&lt;/code&gt; 로 추가해야 합니다.</target>
        </trans-unit>
        <trans-unit id="0c4137725680d612c9c824fb381dbd838022cde4" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available Internet Gateway in the current region. The given filters must match exactly one Internet Gateway whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 현재 지역에서 사용 가능한 인터넷 게이트웨이를 쿼리하기위한 필터 역할을합니다. 주어진 필터는 데이터를 속성으로 내보낼 인터넷 게이트웨이와 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="b989270a392c69d3282b4ec05dc8e15b4a4ab5ca" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available Nat Gateways in the current region. The given filters must match exactly one Nat Gateway whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 현재 지역에서 사용 가능한 Nat 게이트웨이를 조회하기위한 필터 역할을합니다. 지정된 필터는 데이터를 속성으로 내보내는 하나의 Nat 게이트웨이와 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="d6a569da7469fc4d11a78ba820748b571453511a" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available Organizations. The given filters must match exactly one Organizations whose data will be exported as attributes. The following arguments are supported:</source>
          <target state="translated">이 데이터 소스의 인수는 사용 가능한 조직을 조회하기위한 필터 역할을합니다. 주어진 필터는 데이터를 속성으로 내보낼 조직 하나와 정확히 일치해야합니다. 다음과 같은 인수가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e3396c565221f3b953897fde1981093d2fa89adc" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available Route Table in the current region. The given filters must match exactly one Route Table whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 현재 지역에서 사용 가능한 라우팅 테이블을 쿼리하기위한 필터 역할을합니다. 주어진 필터는 데이터가 속성으로 내 보내질 라우팅 테이블과 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="f376534a95c393ef623b6ca76694395e8172726b" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available Route in the current region. The given filters must match exactly one Route whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 현재 지역에서 사용 가능한 경로를 쿼리하기위한 필터 역할을합니다. 지정된 필터는 데이터를 속성으로 내보낼 경로 하나와 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="3cd2061b08f5276de70ed690d2936ee641022992" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available VPC endpoint services. The given filters must match exactly one VPC endpoint service whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 사용 가능한 VPC 엔드 포인트 서비스를 쿼리하기위한 필터 역할을합니다. 지정된 필터는 데이터를 속성으로 내보내는 하나의 VPC 엔드 포인트 서비스와 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="4089dd4205c1b2a9efa0994e96f5345dcea3ffe5" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available VPC endpoints. The given filters must match exactly one VPC endpoint whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 사용 가능한 VPC 엔드 포인트를 쿼리하기위한 필터 역할을합니다. 지정된 필터는 데이터가 속성으로 내 보내질 VPC 엔드 포인트와 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="b14ae79bf21fc3ff0e90c45aedfc51982a7e07b4" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available VPC peering connection. The given filters must match exactly one VPC peering connection whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 사용 가능한 VPC 피어링 연결을 쿼리하기위한 필터 역할을합니다. 지정된 필터는 데이터가 속성으로 내 보내질 VPC 피어링 연결과 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f32cf630f51b2c6b747b6735c6d72e1695c6dbd" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available VPCs in the current region. The given filters must match exactly one VPC whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 현재 지역에서 사용 가능한 VPC를 쿼리하기위한 필터 역할을합니다. 지정된 필터는 데이터를 속성으로 내보내는 하나의 VPC와 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="5ab58293fd1e63b8973bf08fe2b12b1e84ce5d0c" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available VPN gateways. The given filters must match exactly one VPN gateway whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 사용 가능한 VPN 게이트웨이를 쿼리하기위한 필터 역할을합니다. 지정된 필터는 데이터를 속성으로 내보내는 하나의 VPN 게이트웨이와 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="cd2c68659ce0bb1477a6b2c885b9f9d096e08e08" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available availability zones. The given filters must match exactly one availability zone whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 사용 가능한 가용 영역을 쿼리하기위한 필터 역할을합니다. 지정된 필터는 데이터를 속성으로 내보내는 하나의 가용 영역과 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="aa9b8453c4f220d5cfb6a5b83311a68bc19d92af" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available billing accounts. The given filters must match exactly one billing account whose data will be exported as attributes. The following arguments are supported:</source>
          <target state="translated">이 데이터 소스의 인수는 사용 가능한 결제 계정을 쿼리하기위한 필터 역할을합니다. 지정된 필터는 데이터를 속성으로 내보내는 하나의 결제 계정과 정확히 일치해야합니다. 다음과 같은 인수가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="d8c1be4aa3badf57b1bd8d041c7542ed001f9c17" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available prefix lists. The given filters must match exactly one prefix list whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 사용 가능한 접두사 목록을 쿼리하기위한 필터 역할을합니다. 주어진 필터는 데이터가 속성으로 내 보내질 접두사 목록과 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="9447310e6d29a330beb2ffbfc854a9a42316f849" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available regions. The given filters must match exactly one region whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 사용 가능한 영역을 쿼리하기위한 필터 역할을합니다. 지정된 필터는 데이터를 속성으로 내보낼 영역 하나와 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="aa96f39bc323540fb280b53fd2d7889c74451603" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available security group in the current region. The given filters must match exactly one security group whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 현재 리전에서 사용 가능한 보안 그룹을 쿼리하기위한 필터 역할을합니다. 지정된 필터는 데이터를 속성으로 내보내는 하나의 보안 그룹과 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="5ef1dd786501fc4751b38465f1add7651374995d" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available subnets in the current region. The given filters must match exactly one subnet whose data will be exported as attributes.</source>
          <target state="translated">이 데이터 소스의 인수는 현재 리전에서 사용 가능한 서브넷을 쿼리하기위한 필터 역할을합니다. 지정된 필터는 데이터를 속성으로 내보내는 서브넷 하나와 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="44a5c4144f995dbd744f8e868089af01dd47106d" translate="yes" xml:space="preserve">
          <source>The arguments used in a &lt;code&gt;module&lt;/code&gt; block, such as the &lt;code&gt;servers&lt;/code&gt; parameter above, correspond to &lt;a href=&quot;../configuration/variables&quot;&gt;variables&lt;/a&gt; within the module itself. You can therefore discover all the available variables for a module by inspecting the source of it.</source>
          <target state="translated">위 의 &lt;code&gt;servers&lt;/code&gt; 매개 변수 와 같은 &lt;code&gt;module&lt;/code&gt; 블록에 사용 된 인수 는 변수에 해당 &lt;a href=&quot;../configuration/variables&quot;&gt;합니다.&lt;/a&gt; 는 모듈 자체 내의 합니다. 따라서 모듈의 소스를 검사하여 모듈에 사용 가능한 모든 변수를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b17a360785d2ab65a172feb52287fec82e5ea5bf" translate="yes" xml:space="preserve">
          <source>The assigned &lt;code&gt;principal_id&lt;/code&gt; and &lt;code&gt;tenant_id&lt;/code&gt; can be retrieved after the App Service has been created. More details are available below.</source>
          <target state="translated">할당 된 &lt;code&gt;principal_id&lt;/code&gt; 및 &lt;code&gt;tenant_id&lt;/code&gt; 는 App Service가 작성된 후 검색 될 수 있습니다. 자세한 내용은 아래에서 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f1f237e350767429bd893bd00a9a3be621bb732" translate="yes" xml:space="preserve">
          <source>The assigned &lt;code&gt;principal_id&lt;/code&gt; and &lt;code&gt;tenant_id&lt;/code&gt; can be retrieved after the identity &lt;code&gt;type&lt;/code&gt; has been set to &lt;code&gt;SystemAssigned&lt;/code&gt; and Storage Account has been created. More details are available below.</source>
          <target state="translated">ID &lt;code&gt;type&lt;/code&gt; 이 &lt;code&gt;SystemAssigned&lt;/code&gt; 로 설정 되고 스토리지 계정이 작성된 후 지정된 &lt;code&gt;principal_id&lt;/code&gt; 및 &lt;code&gt;tenant_id&lt;/code&gt; 를 검색 할 수 있습니다 . 자세한 내용은 아래에서 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a123857707d09c2940428b0452ab64bac4417cca" translate="yes" xml:space="preserve">
          <source>The attached ECS instances and the instance with active scaling configurations must have the same instance type.</source>
          <target state="translated">연결된 ECS 인스턴스와 활성 스케일링 구성이있는 인스턴스는 동일한 인스턴스 유형을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="476319ec043ffafeb149460b5200f138ed242d63" translate="yes" xml:space="preserve">
          <source>The attached ECS instances and the scaling group must have the same region and network type(&lt;code&gt;Classic&lt;/code&gt; or &lt;code&gt;VPC&lt;/code&gt;).</source>
          <target state="translated">연결된 ECS 인스턴스와 스케일링 그룹은 동일한 지역 및 네트워크 유형 ( &lt;code&gt;Classic&lt;/code&gt; 또는 &lt;code&gt;VPC&lt;/code&gt; )을 가져야합니다 .</target>
        </trans-unit>
        <trans-unit id="dcb3088fc23d2e0d06472b8fd67aabc3fbfda7aa" translate="yes" xml:space="preserve">
          <source>The attached ECS instances has not been attached to other scaling groups.</source>
          <target state="translated">연결된 ECS 인스턴스가 다른 확장 그룹에 연결되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="76e894148d05a703a1deff630201d9bd041b8627" translate="yes" xml:space="preserve">
          <source>The attached ECS instances must in the running state.</source>
          <target state="translated">연결된 ECS 인스턴스는 실행 중 상태 여야합니다.</target>
        </trans-unit>
        <trans-unit id="d91db1504395ce511b3fdaef669a35266e485433" translate="yes" xml:space="preserve">
          <source>The attached ECS instances supports Subscription and Pay-As-You-Go payment methods.</source>
          <target state="translated">첨부 된 ECS 인스턴스는 Subscription 및 Pay-As-You-Go 지불 방법을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="30b8c77add901423d5ed8f18c7fffb333a78bb5b" translate="yes" xml:space="preserve">
          <source>The attributes are listed in alphabetical order (with the except of &quot;id&quot; which is always at the top). They are outputted in a way that is easy to parse on the command-line.</source>
          <target state="translated">속성은 알파벳순으로 나열됩니다 (항상 맨 위에있는 &quot;id&quot;제외). 명령 행에서 구문 분석하기 쉬운 방식으로 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="34098599941585267c73eb7b2e97b6896680b475" translate="yes" xml:space="preserve">
          <source>The automatic plugin installation behavior can be overridden by extracting the desired providers into a local directory and using the additional option &lt;code&gt;-plugin-dir=PATH&lt;/code&gt;. When this option is specified, &lt;em&gt;only&lt;/em&gt; the given directory is consulted, which prevents Terraform from making requests to the plugin repository or looking for plugins in other local directories. Passing an empty string to &lt;code&gt;-plugin-dir&lt;/code&gt; removes any previously recorded paths.</source>
          <target state="translated">원하는 제공자를 로컬 디렉토리로 추출하고 추가 옵션 &lt;code&gt;-plugin-dir=PATH&lt;/code&gt; 를 사용하여 자동 플러그인 설치 동작을 대체 할 수 있습니다 . 이 옵션을 지정 하면 지정된 디렉토리 &lt;em&gt;만&lt;/em&gt; 참조되므로 Terraform이 플러그인 저장소에 요청하거나 다른 로컬 디렉토리에서 플러그인을 찾을 수 없습니다. 빈 문자열을 &lt;code&gt;-plugin-dir&lt;/code&gt; 에 전달하면 이전에 기록 된 경로가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="4afca0565fb2bd7d1ab52d9955f04f8621b2e6d7" translate="yes" xml:space="preserve">
          <source>The automation level can be further tuned for each specific SDRS subsystem. Specifying an override will set the automation level for that part of Storage DRS to the respective level. Not specifying an override infers that you want to use the cluster default automation level.</source>
          <target state="translated">각 특정 SDRS 하위 시스템에 대해 자동화 수준을 추가로 조정할 수 있습니다. 재정의를 지정하면 Storage DRS의 해당 부분에 대한 자동화 수준이 해당 수준으로 설정됩니다. 재정의를 지정하지 않으면 클러스터 기본 자동화 수준을 사용하려고합니다.</target>
        </trans-unit>
        <trans-unit id="bfcbea9754fb8a51b7561f9b0299c835e5c4969d" translate="yes" xml:space="preserve">
          <source>The backends are separated in the left by standard and enhanced.</source>
          <target state="translated">백엔드는 왼쪽에서 표준으로 분리되어 향상됩니다.</target>
        </trans-unit>
        <trans-unit id="ff0fb8c4a00ed11a2ce7b8f96674c4a8b60caf8b" translate="yes" xml:space="preserve">
          <source>The basic example below creates a virtual machine folder named &lt;code&gt;terraform-test-folder&lt;/code&gt; in the default datacenter's VM hierarchy.</source>
          <target state="translated">아래의 기본 예는 &lt;code&gt;terraform-test-folder&lt;/code&gt; 라는 가상 머신 폴더를 만듭니다. 는 기본 데이터 센터의 VM 계층에 .</target>
        </trans-unit>
        <trans-unit id="28c76f49b61cbc9346ec2f92a22badee216e9673" translate="yes" xml:space="preserve">
          <source>The behavior of any &lt;code&gt;terraform destroy&lt;/code&gt; command can be previewed at any time with an equivalent &lt;code&gt;terraform plan -destroy&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;terraform destroy&lt;/code&gt; 명령 의 동작은 동등한 &lt;code&gt;terraform plan -destroy&lt;/code&gt; 명령으로 언제든지 미리 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3cb9f222b3a9858fd6202e280f9144a5df894971" translate="yes" xml:space="preserve">
          <source>The behavior of conversion in &lt;em&gt;this&lt;/em&gt; direction (string to boolean) will &lt;em&gt;not&lt;/em&gt; change in future Terraform versions. Therefore, using these string values rather than literal booleans is recommended when using input variables.</source>
          <target state="translated">&lt;em&gt;이&lt;/em&gt; 방향으로 의 변환 동작 (문자열에서 부울로)은 향후 Terraform 버전에서 변경 &lt;em&gt;되지 않습니다&lt;/em&gt; . 따라서 입력 변수를 사용할 때는 리터럴 부울 대신 이러한 문자열 값을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="996f580e333c98fd8aa3dc30a5224793786b5935" translate="yes" xml:space="preserve">
          <source>The below example builds off of the above by first creating a folder named &lt;code&gt;terraform-test-parent&lt;/code&gt;, and then locating &lt;code&gt;terraform-test-folder&lt;/code&gt; in that folder. To ensure the parent is created first, we create an interpolation dependency off the parent's &lt;code&gt;path&lt;/code&gt; attribute.</source>
          <target state="translated">아래 예제는 먼저 &lt;code&gt;terraform-test-parent&lt;/code&gt; 라는 폴더를 만든 다음 해당 폴더에서 &lt;code&gt;terraform-test-folder&lt;/code&gt; 를 찾아서 위의 내용을 기반으로합니다. 부모를 먼저 생성하기 위해 부모 &lt;code&gt;path&lt;/code&gt; 에서 보간 의존성을 만듭니다. 속성 합니다.</target>
        </trans-unit>
        <trans-unit id="40fd8a2b8e4b5bdda99262e1aa5d7b41ed8420b9" translate="yes" xml:space="preserve">
          <source>The below is an example IAM role and policy to allow the EKS service to manage or retrieve data from other AWS services. It is also possible to create these policies with the &lt;a href=&quot;../d/iam_policy_document&quot;&gt;&lt;code&gt;aws_iam_policy_document&lt;/code&gt; data source&lt;/a&gt;</source>
          <target state="translated">아래는 EKS 서비스가 다른 AWS 서비스에서 데이터를 관리하거나 검색 할 수 있도록하는 IAM 역할 및 정책의 예입니다. &lt;a href=&quot;../d/iam_policy_document&quot;&gt; &lt;code&gt;aws_iam_policy_document&lt;/code&gt; &lt;/a&gt; 데이터 소스 를 사용하여 이러한 정책을 작성할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd9dc6215bcb9ab2b0893868e60d2852713ecdf7" translate="yes" xml:space="preserve">
          <source>The below is an example IAM role and policy to allow the worker nodes to manage or retrieve data from other AWS services. It is used by Kubernetes to allow worker nodes to join the cluster. It is also possible to create these policies with the &lt;a href=&quot;../d/iam_policy_document&quot;&gt;&lt;code&gt;aws_iam_policy_document&lt;/code&gt; data source&lt;/a&gt;</source>
          <target state="translated">아래는 작업자 노드가 다른 AWS 서비스에서 데이터를 관리하거나 검색 할 수 있도록하는 IAM 역할 및 정책의 예입니다. Kubernetes는 작업자 노드가 클러스터에 참여할 수 있도록 사용합니다. &lt;a href=&quot;../d/iam_policy_document&quot;&gt; &lt;code&gt;aws_iam_policy_document&lt;/code&gt; &lt;/a&gt; 데이터 소스 를 사용하여 이러한 정책을 작성할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e174493928c25a3c2a73abf48b27af1e7f438846" translate="yes" xml:space="preserve">
          <source>The below sample Terraform configurations reference a variable called &lt;code&gt;cluster-name&lt;/code&gt; (&lt;code&gt;var.cluster-name&lt;/code&gt;) which is used for consistency. Feel free to substitute your own cluster name or create the variable configuration:</source>
          <target state="translated">아래 샘플 Terraform 구성 은 일관성에 사용되는 &lt;code&gt;cluster-name&lt;/code&gt; ( &lt;code&gt;var.cluster-name&lt;/code&gt; ) 이라는 변수를 참조합니다 . 자유롭게 자신의 클러스터 이름을 대체하거나 변수 구성을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="7cac88897f9abb4ccad4f687dc2e7930da6cb43e" translate="yes" xml:space="preserve">
          <source>The below will create a 10.0.0.0/16 VPC, two 10.0.X.0/24 subnets, an internet gateway, and setup the subnet routing to route external traffic through the internet gateway:</source>
          <target state="translated">아래는 10.0.0.0/16 VPC, 2 개의 10.0.X.0 / 24 서브넷, 인터넷 게이트웨이를 생성하고 인터넷 트래픽을 통해 외부 트래픽을 라우팅하도록 서브넷 라우팅을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="fc2fb84fc0abdda278fe0e89ccee2da0b7a7326a" translate="yes" xml:space="preserve">
          <source>The blue verification badge appears next to modules that are verified.</source>
          <target state="translated">파란색 확인 배지는 확인 된 모듈 옆에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="b477c555bfe688ffb4de12dd7620f6bbdaea4ebb" translate="yes" xml:space="preserve">
          <source>The child module can then use any resource from this provider with no further provider configuration required:</source>
          <target state="translated">그러면 하위 모듈은 추가 공급자 구성없이이 공급자의 모든 리소스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="756f15e478be1a3c820ca4bb7c81b3687fcfaac3" translate="yes" xml:space="preserve">
          <source>The clc provider is used to interact with the many resources supported by CenturyLinkCloud. The provider needs to be configured with account credentials before it can be used.</source>
          <target state="translated">clc 공급자는 CenturyLinkCloud에서 지원하는 많은 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하기 전에 계정 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="19bd4d44d457692350ec71ec7515707741086a74" translate="yes" xml:space="preserve">
          <source>The cloudscale.ch provider is used to interact with the resources supported by cloudscale.ch. The provider needs to be configured with proper credentials before it can be used.</source>
          <target state="translated">cloudscale.ch 공급자는 cloudscale.ch에서 지원하는 리소스와 상호 작용하는 데 사용됩니다. 공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="4d9969a2bd141b1f1ea491bfd768bf7a57ea38f1" translate="yes" xml:space="preserve">
          <source>The code within the binaries must adhere to certain interfaces. The network communication and RPC is handled automatically by higher-level Terraform libraries. The exact interface to implement is documented in its respective documentation section.</source>
          <target state="translated">바이너리 내의 코드는 특정 인터페이스를 준수해야합니다. 네트워크 통신 및 RPC는 상위 레벨 Terraform 라이브러리에 의해 자동으로 처리됩니다. 구현할 정확한 인터페이스는 해당 설명서 섹션에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d720e77eee404616601a3639c4d5ccace51385a0" translate="yes" xml:space="preserve">
          <source>The command currently can only import one resource at a time. This means you can't yet point Terraform import to an entire collection of resources such as an AWS VPC and import all of it. This workflow will be improved in a future version of Terraform.</source>
          <target state="translated">이 명령은 현재 한 번에 하나의 리소스 만 가져올 수 있습니다. 즉, Terraform 가져 오기를 AWS VPC와 같은 전체 리소스 모음으로 가져 와서 가져올 수는 없습니다. 이 워크 플로우는 향후 버전의 Terraform에서 개선 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="cd9e5ab11390d695c15657c54dfcbf5bc7ed8057" translate="yes" xml:space="preserve">
          <source>The command will list all existing workspaces. The current workspace is indicated using an asterisk (&lt;code&gt;*&lt;/code&gt;) marker.</source>
          <target state="translated">이 명령은 기존의 모든 작업 공간을 나열합니다. 현재 작업 공간은 별표 ( &lt;code&gt;*&lt;/code&gt; ) 표시를 사용하여 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="dd692a49ccf9bf3e406ec7ff39a0fa9c803ef8e4" translate="yes" xml:space="preserve">
          <source>The command will list all resources in the state file matching the given addresses (if any). If no addresses are given, all resources are listed.</source>
          <target state="translated">이 명령은 주어진 주소 (있는 경우)와 일치하는 상태 파일의 모든 리소스를 나열합니다. 주소가 제공되지 않으면 모든 리소스가 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="37db1239115e84bc0c107668bb16409b39eba24e" translate="yes" xml:space="preserve">
          <source>The command will show the attributes of a single resource in the state file that matches the given address.</source>
          <target state="translated">명령은 주어진 주소와 일치하는 상태 파일의 단일 자원 속성을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="e3a7be3cd5790f62a75135c9c9aa52f03ce29893" translate="yes" xml:space="preserve">
          <source>The command-line flags are all optional (with the exception of &lt;code&gt;-index&lt;/code&gt; in certain cases, see above note). The list of available flags are:</source>
          <target state="translated">명령 행 플래그는 모두 선택 사항입니다 ( 특정 경우 &lt;code&gt;-index&lt;/code&gt; 를 제외하고는 위 참고 사항 참조). 사용 가능한 플래그 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fa47bb1ab0de40fdcb68489eb51bc8be2b0a0666" translate="yes" xml:space="preserve">
          <source>The command-line flags are all optional. The available flags are:</source>
          <target state="translated">명령 줄 플래그는 모두 선택 사항입니다. 사용 가능한 플래그는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="56284de25b2b9f81a9c96b6b4e02098b824fe0a4" translate="yes" xml:space="preserve">
          <source>The command-line flags are all optional. The list of available flags are:</source>
          <target state="translated">명령 줄 플래그는 모두 선택 사항입니다. 사용 가능한 플래그 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3ece3bc5216d27414895ecc0ad4c1fa65e056264" translate="yes" xml:space="preserve">
          <source>The command-line flags are all optional. The only supported flag is:</source>
          <target state="translated">명령 줄 플래그는 모두 선택 사항입니다. 지원되는 유일한 플래그는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7cd0464e467cd5fee0775919d570cb8349ed76ea" translate="yes" xml:space="preserve">
          <source>The condition can be any valid interpolation syntax, such as variable access, a function call, or even another conditional. The true and false value can also be any valid interpolation syntax. The returned types by the true and false side must be the same.</source>
          <target state="translated">조건은 변수 액세스, 함수 호출 또는 다른 조건부와 같은 유효한 보간 구문 일 수 있습니다. true 및 false 값은 유효한 보간 구문 일 수도 있습니다. true 및 false 측에서 리턴 된 유형은 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="2f1087cde670a1ef63c3d799ae6c7704134fa1d6" translate="yes" xml:space="preserve">
          <source>The conditional syntax is the well-known ternary operation:</source>
          <target state="translated">조건부 구문은 잘 알려진 삼항 연산입니다.</target>
        </trans-unit>
        <trans-unit id="d626a041820fb138f938047ab691291229234797" translate="yes" xml:space="preserve">
          <source>The config supports the following:</source>
          <target state="translated">구성은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="4d5179d533a35fa624530ac9323ec9d6d3436328" translate="yes" xml:space="preserve">
          <source>The configuration below builds on the example given in the &lt;a href=&quot;distributed_virtual_switch&quot;&gt;&lt;code&gt;vsphere_distributed_virtual_switch&lt;/code&gt;&lt;/a&gt; resource by adding the &lt;code&gt;vsphere_distributed_port_group&lt;/code&gt; resource, attaching itself to the DVS created here and assigning VLAN ID 1000.</source>
          <target state="translated">구성은 아래에 주어진 예 토대로 &lt;a href=&quot;distributed_virtual_switch&quot;&gt; &lt;code&gt;vsphere_distributed_virtual_switch&lt;/code&gt; 에&lt;/a&gt; 가산하여 자원 &lt;code&gt;vsphere_distributed_port_group&lt;/code&gt; 의 DVS 여기 만들어 VLAN ID (1000)에 할당 자체 부착 리소스.</target>
        </trans-unit>
        <trans-unit id="6f456c8cd6b5d0f738dabb70901801979e478fde" translate="yes" xml:space="preserve">
          <source>The configuration file uses the same &lt;em&gt;HCL&lt;/em&gt; syntax as &lt;code&gt;.tf&lt;/code&gt; files, but with different attributes and blocks. The following example illustrates the general syntax; see the following section for information on the meaning of each of these settings:</source>
          <target state="translated">구성 파일은 &lt;code&gt;.tf&lt;/code&gt; 파일 과 동일한 &lt;em&gt;HCL&lt;/em&gt; 구문을 사용 하지만 속성과 블록은 다릅니다. 다음 예는 일반적인 구문을 보여줍니다. 이러한 각 설정의 의미에 대한 정보는 다음 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1a11c3d0ce48c14601a3fcc12bc6554770db3054" translate="yes" xml:space="preserve">
          <source>The configuration is placed in a single file whose location depends on the host operating system:</source>
          <target state="translated">구성은 호스트 운영 체제에 따라 다른 위치에있는 단일 파일에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="6c5c7d085623a51e91feb6feac3417261d796b5c" translate="yes" xml:space="preserve">
          <source>The configuration looks similar to the one below:</source>
          <target state="translated">구성은 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="5a2c6a4d24f7ad289ffb922e840bdc187c8b6ee4" translate="yes" xml:space="preserve">
          <source>The configuration within the loaded files are appended to each other. This is in contrast to being merged. This means that two resources with the same name are not merged, and will instead cause a validation error. This is in contrast to &lt;a href=&quot;override&quot;&gt;overrides&lt;/a&gt;, which do merge.</source>
          <target state="translated">로드 된 파일 내의 구성이 서로 추가됩니다. 이것은 병합되는 것과 대조적입니다. 이는 동일한 이름을 가진 두 개의 리소스가 병합되지 않고 유효성 검사 오류가 발생 함을 의미합니다. 이는 &lt;a href=&quot;override&quot;&gt;오버라이드 (override&lt;/a&gt; )와 대조적 입니다.</target>
        </trans-unit>
        <trans-unit id="68644027b4251781ded7726ec5a3a38b189114fe" translate="yes" xml:space="preserve">
          <source>The content of the file must be valid UTF-8 due to Terraform's assumptions about string encoding. Files that do not contain UTF-8 text will have invalid UTF-8 sequences replaced with the Unicode replacement character.</source>
          <target state="translated">문자열 인코딩에 대한 Terraform의 가정으로 인해 파일의 내용은 유효한 UTF-8이어야합니다. UTF-8 텍스트를 포함하지 않는 파일은 유효하지 않은 UTF-8 시퀀스를 유니 코드 대체 문자로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="2455469722891c531c20c27fdaef65ea9d54e9cc" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;data&lt;/code&gt; will vary from each Block Storage service. You must have a good understanding of how the service is configured and how to make the appropriate final connection. However, if used correctly, this has the flexibility to be able to attach OpenStack Block Storage volumes to non-OpenStack resources.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; 내용은 각 블록 스토리지 서비스마다 다릅니다. 서비스 구성 방법과 적절한 최종 연결 방법에 대해 잘 알고 있어야합니다. 그러나 올바르게 사용하면 OpenStack Block Storage 볼륨을 OpenStack 이외의 자원에 연결할 수있는 유연성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="910db6209a4dce6d94de73505080365d7b4374bd" translate="yes" xml:space="preserve">
          <source>The continuous_query resource allows a continuous query to be created on an InfluxDB server.</source>
          <target state="translated">continue_query 리소스를 사용하면 InfluxDB 서버에서 연속 쿼리를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bed2bf8628cbc8168bc9b21ec0d957ebe4d6170" translate="yes" xml:space="preserve">
          <source>The conversion should be pretty straightforward and self-documented.</source>
          <target state="translated">변환은 매우 간단하고 자체 문서화되어야합니다.</target>
        </trans-unit>
        <trans-unit id="5e52fd7cbff2767b8d5eca68bf3e50fe05f17574" translate="yes" xml:space="preserve">
          <source>The core_rule mapping supports the following:</source>
          <target state="translated">core_rule 매핑은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ea2954289f13496fbe286084eae0037cdc10d813" translate="yes" xml:space="preserve">
          <source>The created AMI will refer to implicitly-created snapshots of the instance's EBS volumes and mimick its assigned block device configuration at the time the resource is created.</source>
          <target state="translated">생성 된 AMI는 인스턴스의 EBS 볼륨에 대해 암시 적으로 생성 된 스냅 샷을 참조하여 리소스 생성시 할당 된 블록 디바이스 구성을 모방합니다.</target>
        </trans-unit>
        <trans-unit id="07c26022849ad7c84ed8ec5720a02d9a13a5d721" translate="yes" xml:space="preserve">
          <source>The creation of a new certificate may of course cause dependent resources to be updated or replaced, depending on the lifecycle rules applying to those resources.</source>
          <target state="translated">새 인증서를 만들면 해당 리소스에 적용되는 수명주기 규칙에 따라 종속 리소스가 업데이트되거나 교체 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67db8314f4a7c317af9ca5cf86d6fcd5e019c016" translate="yes" xml:space="preserve">
          <source>The credentials may also be provided to endpoints declared in the discovery document, depending on the requirements of the service in question.</source>
          <target state="translated">자격 증명은 해당 서비스의 요구 사항에 따라 검색 문서에 선언 된 엔드 포인트에도 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2839e819da91c75b7bf5f959a78ef680100c9129" translate="yes" xml:space="preserve">
          <source>The credentials provided in &lt;code&gt;.tf&lt;/code&gt; file will override credentials in the environment variables.</source>
          <target state="translated">&lt;code&gt;.tf&lt;/code&gt; 파일에 제공된 자격 증명은 환경 변수의 자격 증명보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="a95c3c68e501075f05d73324f7064676dc8cc59a" translate="yes" xml:space="preserve">
          <source>The current Account Alias can be imported using the &lt;code&gt;account_alias&lt;/code&gt;, e.g.</source>
          <target state="translated">현재 계정 별칭이 사용하여 가져올 수 있습니다 &lt;code&gt;account_alias&lt;/code&gt; 를 , 예를 들어,</target>
        </trans-unit>
        <trans-unit id="2972fffa55953fe2b7b4ad5dccd02e53ede850e9" translate="yes" xml:space="preserve">
          <source>The current Ignition version supported by this provider is the &lt;code&gt;2.1.0&lt;/code&gt;. For older versions you should use previous &lt;a href=&quot;https://github.com/terraform-providers/terraform-provider-ignition/releases&quot;&gt;releases&lt;/a&gt; of this provider:</source>
          <target state="translated">이 제공자가 지원하는 현재 점화 버전은 &lt;code&gt;2.1.0&lt;/code&gt; 입니다. 이전 &lt;a href=&quot;https://github.com/terraform-providers/terraform-provider-ignition/releases&quot;&gt;버전&lt;/a&gt; 의 경우이 제공자의 이전 릴리스 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8c44a8c898b95348a8b543971b094e8c55e57d8e" translate="yes" xml:space="preserve">
          <source>The current implementation of Terraform import can only import resources into the &lt;a href=&quot;../state&quot;&gt;state&lt;/a&gt;. It does not generate configuration. A future version of Terraform will also generate configuration.</source>
          <target state="translated">Terraform 가져 오기의 현재 구현은 &lt;a href=&quot;../state&quot;&gt;상태&lt;/a&gt; 로 리소스를 가져올 수만 있습니다 . 구성을 생성하지 않습니다. 향후 버전의 Terraform도 구성을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3793e9e4b5e3d55ffa1e9f58325900db9e104851" translate="yes" xml:space="preserve">
          <source>The current list of HashiCorp Providers is as follows:</source>
          <target state="translated">현재 HashiCorp 제공 업체 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a145e7473d47dcf7fcd76b0c16ec0b74803d4fbe" translate="yes" xml:space="preserve">
          <source>The currently only allowed configurations within this block are &lt;code&gt;required_version&lt;/code&gt; and &lt;code&gt;backend&lt;/code&gt;.</source>
          <target state="translated">이 블록 내에서 현재 허용되는 구성은 &lt;code&gt;required_version&lt;/code&gt; 및 &lt;code&gt;backend&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0664f3b8d865508f1a40774dfa902d5b3b480557" translate="yes" xml:space="preserve">
          <source>The dashboard resource allows a dashboard to be created on a Grafana server.</source>
          <target state="translated">대시 보드 리소스를 사용하면 Grafana 서버에서 대시 보드를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea72b57bfc061f26dc0f15deb7f0c85977fcf699" translate="yes" xml:space="preserve">
          <source>The data centers data source can be used to search for and return an existing Virtual Data Center. You can provide a string for the name and location parameters which will be compared with provisioned Virtual Data Centers. If a single match is found, it will be returned. If your search results in multiple matches, an error will be generated. When this happens, please refine your search string so that it is specific enough to return only one result.</source>
          <target state="translated">데이터 센터 데이터 소스를 사용하여 기존 가상 데이터 센터를 검색하고 반환 할 수 있습니다. 프로비저닝 된 가상 데이터 센터와 비교할 이름 및 위치 매개 변수에 대한 문자열을 제공 할 수 있습니다. 하나의 일치하는 것이 있으면 반환됩니다. 검색 결과가 여러 번 일치하면 오류가 발생합니다. 이 경우 하나의 결과 만 반환 할 수 있도록 검색 문자열을 세분화하십시오.</target>
        </trans-unit>
        <trans-unit id="9f9b2e3d7053fbff547aed9731b71f1347a9e1d3" translate="yes" xml:space="preserve">
          <source>The data directory is used to retain data that must persist from one command to the next, so it's important to have this variable set consistently throughout all of the Terraform workflow commands (starting with &lt;code&gt;terraform init&lt;/code&gt;) or else Terraform may be unable to find providers, modules, and other artifacts.</source>
          <target state="translated">데이터 디렉토리는 한 명령에서 다음 명령으로 유지되어야하는 데이터를 유지하는 데 사용되므로 모든 Terraform 워크 플로우 명령 ( &lt;code&gt;terraform init&lt;/code&gt; 로 시작) 전체에서이 변수를 일관되게 설정해야합니다. 그렇지 않으면 Terraform이 제공자를 찾을 수 없습니다. 모듈 및 기타 아티팩트</target>
        </trans-unit>
        <trans-unit id="8824d284da8e8f9bd8fc864d8ebe1048f9599dad" translate="yes" xml:space="preserve">
          <source>The data source resource allows a data source to be created on a Grafana server.</source>
          <target state="translated">데이터 소스 자원을 사용하면 Grafana 서버에서 데이터 소스를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="615020e664ea23b7df642c01bff3e0baa63be922" translate="yes" xml:space="preserve">
          <source>The database resource allows a database to be created on an InfluxDB server.</source>
          <target state="translated">데이터베이스 리소스를 사용하면 InfluxDB 서버에서 데이터베이스를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f6d5499c6143b21dc1f8962364fac408f7266c86" translate="yes" xml:space="preserve">
          <source>The datadisk mapping supports the following:</source>
          <target state="translated">데이터 디스크 매핑은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="40b76bcc30974fd74b174928f88f9c736273edc3" translate="yes" xml:space="preserve">
          <source>The datasource in the above example should be referred in &lt;code&gt;network_id&lt;/code&gt; inside &lt;code&gt;network_interface&lt;/code&gt; section for &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; resource.</source>
          <target state="translated">위의 예는 데이터 소스로 지칭한다 &lt;code&gt;network_id&lt;/code&gt; 인사이드 &lt;code&gt;network_interface&lt;/code&gt; 섹션 &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; 리소스.</target>
        </trans-unit>
        <trans-unit id="ac71784117509f99b6e5e6d359489113970f2b7c" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;timeouts&lt;/code&gt; values are:</source>
          <target state="translated">기본 &lt;code&gt;timeouts&lt;/code&gt; 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5325bffde202825427dff1436d66c81b4d6d16e0" translate="yes" xml:space="preserve">
          <source>The default deadline for the EC2 metadata API endpoint is 100 milliseconds, which can be overidden by setting the &lt;code&gt;AWS_METADATA_TIMEOUT&lt;/code&gt; environment variable. The variable expects a positive golang Time.Duration string, which is a sequence of decimal numbers and a unit suffix; valid suffixes are &lt;code&gt;ns&lt;/code&gt; (nanoseconds), &lt;code&gt;us&lt;/code&gt; (microseconds), &lt;code&gt;ms&lt;/code&gt; (milliseconds), &lt;code&gt;s&lt;/code&gt; (seconds), &lt;code&gt;m&lt;/code&gt; (minutes), and &lt;code&gt;h&lt;/code&gt; (hours). Examples of valid inputs: &lt;code&gt;100ms&lt;/code&gt;, &lt;code&gt;250ms&lt;/code&gt;, &lt;code&gt;1s&lt;/code&gt;, &lt;code&gt;2.5s&lt;/code&gt;, &lt;code&gt;2.5m&lt;/code&gt;, &lt;code&gt;1m30s&lt;/code&gt;.</source>
          <target state="translated">EC2 메타 데이터 API 엔드 포인트의 기본 최종 기한은 100 밀리 초이며 &lt;code&gt;AWS_METADATA_TIMEOUT&lt;/code&gt; 환경 변수를 설정하여 재정의 할 수 있습니다 . 변수는 양의 golang Time.Duration 문자열을 필요로합니다. 이는 10 진수와 단위 접미사 시퀀스입니다. 유효한 접미사는 &lt;code&gt;ns&lt;/code&gt; (나노초), &lt;code&gt;us&lt;/code&gt; (마이크로 초), &lt;code&gt;ms&lt;/code&gt; (밀리 초), &lt;code&gt;s&lt;/code&gt; (초), &lt;code&gt;m&lt;/code&gt; (분) 및 &lt;code&gt;h&lt;/code&gt; (시간)입니다. : 유효 입력로서는 &lt;code&gt;100ms&lt;/code&gt; 로 , &lt;code&gt;250ms&lt;/code&gt; , &lt;code&gt;1s&lt;/code&gt; , &lt;code&gt;2.5s&lt;/code&gt; , &lt;code&gt;2.5m&lt;/code&gt; , &lt;code&gt;1m30s&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83b32299bfb57de4027b8f41e1b67b3b43f26b62" translate="yes" xml:space="preserve">
          <source>The default value is multi-regional location &lt;code&gt;US&lt;/code&gt;. Changing this forces a new resource to be created.</source>
          <target state="translated">기본값은 다중 지역 위치 &lt;code&gt;US&lt;/code&gt; 입니다. 이를 변경하면 새 자원이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="7fff38ac4d1e3037e6e7673cba78f177d675a354" translate="yes" xml:space="preserve">
          <source>The default value of an input variable must be a &lt;em&gt;literal&lt;/em&gt; value, containing no interpolation expressions. To assign a name to an expression so that it may be re-used within a module, use &lt;a href=&quot;locals&quot;&gt;Local Values&lt;/a&gt; instead.</source>
          <target state="translated">입력 변수의 기본값은 보간 표현식을 포함하지 않는 &lt;em&gt;리터럴&lt;/em&gt; 값 이어야합니다 . 모듈 내에서 재사용 할 수 있도록 표현식에 이름을 지정하려면 대신 &lt;a href=&quot;locals&quot;&gt;로컬 값을&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="533dabca612a3cd83068ba9954cc3a23f7c5b6be" translate="yes" xml:space="preserve">
          <source>The default weight of an ECS instance attached to the Server Load Balancer instance is 50.</source>
          <target state="translated">Server Load Balancer 인스턴스에 연결된 ECS 인스턴스의 기본 가중치는 50입니다.</target>
        </trans-unit>
        <trans-unit id="b9d4ec4a058361785bf4bbb60cc0e278ab9cf127" translate="yes" xml:space="preserve">
          <source>The destroy function should always handle the case where the resource might already be destroyed (manually, for example). If the resource is already destroyed, this should not return an error. This allows Terraform users to manually delete resources without breaking Terraform. Recompile and reinitialize the Provider:</source>
          <target state="translated">destroy 함수는 항상 리소스가 이미 파괴 된 경우를 처리해야합니다 (예 : 수동). 리소스가 이미 삭제 된 경우 오류가 반환되지 않아야합니다. 이를 통해 Terraform 사용자는 Terraform을 중단하지 않고 리소스를 수동으로 삭제할 수 있습니다. 제공자를 다시 컴파일하고 다시 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="eeca85e5e53205b82ace89d3790307041ee0e4d0" translate="yes" xml:space="preserve">
          <source>The discovery protocol's purpose is to map from a user-provided hostname to the base URL of a particular service. Each host can provide different combinations of services -- or no services at all! -- and so the discovery protocol has a secondary purpose of allowing Terraform to identify &lt;em&gt;which&lt;/em&gt; services are valid for a given hostname.</source>
          <target state="translated">감지 프로토콜의 목적은 사용자 제공 호스트 이름에서 특정 서비스의 기본 URL로 맵핑하는 것입니다. 각 호스트는 서로 다른 서비스 조합을 제공하거나 전혀 서비스를 제공하지 않을 수 있습니다! 따라서 검색 프로토콜은 Terraform 이 지정된 호스트 이름에 유효한 서비스 를 식별 할 수 있도록하는 보조 목적을 &lt;em&gt;가지고&lt;/em&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c55e065944035c5e8aa68eb5c35b23dc7606c06" translate="yes" xml:space="preserve">
          <source>The documentation of each feature of this provider, accessible via the navigation, gives examples of situations where these constructs may prove useful.</source>
          <target state="translated">탐색을 통해 액세스 할 수있는이 제공자의 각 기능에 대한 문서는 이러한 구성이 유용 할 수있는 상황의 예를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9730a958e19b79e3fa757eb4e94d5638a4d5ade4" translate="yes" xml:space="preserve">
          <source>The downsides of JSON are less human readability and the lack of comments. Otherwise, the two are completely interoperable.</source>
          <target state="translated">JSON의 단점은 사람이 읽을 수없고 주석이 부족하다는 것입니다. 그렇지 않으면 두 개가 완전히 상호 운용됩니다.</target>
        </trans-unit>
        <trans-unit id="97870eb58a3956e6ddd3aeda1ca1992604747aa2" translate="yes" xml:space="preserve">
          <source>The easiest source is the local file path. For maximum portability, this should be a relative file path into a subdirectory. This allows you to organize your Terraform configuration into modules within one repository, for example:</source>
          <target state="translated">가장 쉬운 소스는 로컬 파일 경로입니다. 이식성을 극대화하려면 하위 디렉토리로의 상대 파일 경로 여야합니다. 이를 통해 Terraform 구성을 하나의 저장소 내에서 모듈로 구성 할 수 있습니다 (예 :</target>
        </trans-unit>
        <trans-unit id="a32754e8b673740c7bbae7b1737747c3c4b36eed" translate="yes" xml:space="preserve">
          <source>The easiest way to configure the provider is by creating/generating a config in a default location (&lt;code&gt;~/.kube/config&lt;/code&gt;). That allows you to leave the provider block completely empty.</source>
          <target state="translated">공급자를 구성하는 가장 쉬운 방법은 기본 위치 ( &lt;code&gt;~/.kube/config&lt;/code&gt; ) 에서 구성을 생성 / 생성하는 것 입니다. 따라서 제공자 블록을 완전히 비워 둘 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="997a4a80e75349715744497d8f91ccf0f4740eb3" translate="yes" xml:space="preserve">
          <source>The elastic ip address data source lists a list of eips resource information owned by an Alicloud account, and each EIP including its basic attribution and association instance.</source>
          <target state="translated">탄력적 ip 주소 데이터 소스에는 Alicloud 계정이 소유 한 eips 리소스 정보 목록과 기본 속성 및 연결 인스턴스를 포함한 각 EIP가 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="5c408477f80a27372e8215326463f05a5c0cb9d6" translate="yes" xml:space="preserve">
          <source>The elements of a set can be any of the other types allowed by Terraform, including another &lt;code&gt;schema&lt;/code&gt;. Set items cannot be repeated.</source>
          <target state="translated">세트의 요소는 다른 &lt;code&gt;schema&lt;/code&gt; 포함하여 Terraform에서 허용하는 다른 유형일 수 있습니다. 설정 항목을 반복 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="eceb149db5a7aeb706ff72b21398e3d303e976df" translate="yes" xml:space="preserve">
          <source>The example below builds on the &lt;a href=&quot;virtual_machine#using-storage-drs&quot;&gt;Storage DRS example&lt;/a&gt; in the &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; resource. However, rather than use the output of the &lt;a href=&quot;../d/datastore_cluster&quot;&gt;&lt;code&gt;vsphere_datastore_cluster&lt;/code&gt; data source&lt;/a&gt; for the location of the virtual machine, we instead get what is assumed to be a member datastore using the &lt;a href=&quot;../d/datastore&quot;&gt;&lt;code&gt;vsphere_datastore&lt;/code&gt; data source&lt;/a&gt; and put the virtual machine there instead. We then use the &lt;code&gt;vsphere_storage_drs_vm_override&lt;/code&gt; resource to ensure that Storage DRS does not apply to this virtual machine, and hence the VM will never be migrated off of the datastore.</source>
          <target state="translated">아래 &lt;a href=&quot;virtual_machine#using-storage-drs&quot;&gt;예&lt;/a&gt; 는 &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; 리소스 의 Storage DRS 예 를 기반으로 합니다. 그러나, 오히려 사용하는 것보다 출력 &lt;a href=&quot;../d/datastore_cluster&quot;&gt; &lt;code&gt;vsphere_datastore_cluster&lt;/code&gt; 의 데이터 소스&lt;/a&gt; 가상 머신의 위치에 대한, 우리는 대신 사용하여 멤버 데이터 저장소로 간주됩니다 것을 얻을 &lt;a href=&quot;../d/datastore&quot;&gt; &lt;code&gt;vsphere_datastore&lt;/code&gt; 의 데이터 소스를&lt;/a&gt; 대신 거기에 가상 머신을 넣어. 그런 다음 &lt;code&gt;vsphere_storage_drs_vm_override&lt;/code&gt; 리소스를 사용하여 Storage DRS가이 가상 머신에 적용되지 않도록하므로 VM이 데이터 스토어에서 마이그레이션되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dffe5c1be2c6fd5bc3513039a56c11a66ac00a37" translate="yes" xml:space="preserve">
          <source>The example below creates a virtual machine in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource in a cluster looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source. It then creates a group with this virtual machine. It also creates a host group off of the host looked up via the &lt;a href=&quot;../d/host&quot;&gt;&lt;code&gt;vsphere_host&lt;/code&gt;&lt;/a&gt; data source. Finally, this virtual machine is configured to run specifically on that host via a &lt;code&gt;vsphere_compute_cluster_vm_host_rule&lt;/code&gt; resource.</source>
          <target state="translated">아래 예 는 &lt;a href=&quot;../d/compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt; 데이터 소스 가 조회 한 클러스터 의 &lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt; 리소스를 사용하여 클러스터에 가상 머신을 생성합니다 . 그런 다음이 가상 머신으로 그룹을 작성합니다. 또한 &lt;a href=&quot;../d/host&quot;&gt; &lt;code&gt;vsphere_host&lt;/code&gt; &lt;/a&gt; 데이터 소스 를 통해 조회 된 호스트에서 호스트 그룹을 생성합니다 . 마지막으로이 가상 머신은 &lt;code&gt;vsphere_compute_cluster_vm_host_rule&lt;/code&gt; 리소스 를 통해 해당 호스트에서 구체적으로 실행되도록 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="1a4e6620974febe117c3fd39f5d551b8eb81f376" translate="yes" xml:space="preserve">
          <source>The example below creates a virtual machine in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource, creating the virtual machine in the cluster looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source, but also pinning the VM to a host defined by the &lt;a href=&quot;../d/host&quot;&gt;&lt;code&gt;vsphere_host&lt;/code&gt;&lt;/a&gt; data source, which is assumed to be a host within the cluster. To ensure that the VM stays on this host and does not need to be migrated back at any point in time, an override is entered using the &lt;code&gt;vsphere_drs_vm_override&lt;/code&gt; resource that disables DRS for this virtual machine, ensuring that it does not move.</source>
          <target state="translated">아래의 예를 사용하여 클러스터의 가상 머신을 생성 &lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; 에&lt;/a&gt; 의해 조회 클러스터의 가상 머신 생성 자원 &lt;a href=&quot;../d/compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; 의&lt;/a&gt; 데이터 소스뿐만 아니라 의해 정의 된 호스트에 VM 피닝 &lt;a href=&quot;../d/host&quot;&gt; &lt;code&gt;vsphere_host&lt;/code&gt; 된&lt;/a&gt; 것으로 가정 된 데이터 소스, 클러스터 내의 호스트 VM이이 호스트에 머무르고 특정 시점으로 다시 마이그레이션 할 필요 가 없도록하기 위해이 가상 머신의 DRS를 비활성화 하는 &lt;code&gt;vsphere_drs_vm_override&lt;/code&gt; 리소스를 사용 하여 재정의를 입력하여 VM 이 이동하지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="ad8bb39b534e4f64ae8e33fd43fde3b8f1e68efb" translate="yes" xml:space="preserve">
          <source>The example below creates a virtual machine in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource, creating the virtual machine in the cluster looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source.</source>
          <target state="translated">아래 예는 &lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt; 리소스를 사용하여 클러스터 에 가상 머신을 생성하고 &lt;a href=&quot;../d/compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt; 데이터 소스 가 조회 한 클러스터에 가상 머신을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="9ed3f7b041501e72d90c86b23a1cd10122fbad17" translate="yes" xml:space="preserve">
          <source>The example below creates two virtual machine in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource in a cluster looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source. It then creates a group with this virtual machine. Two groups are created, each with one of the created VMs. Finally, a rule is created to ensure that &lt;code&gt;vm1&lt;/code&gt; starts before &lt;code&gt;vm2&lt;/code&gt;.</source>
          <target state="translated">아래 예 는 &lt;a href=&quot;../d/compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt; 데이터 소스 가 조회 한 클러스터 의 &lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt; 리소스를 사용하여 클러스터에 두 개의 가상 머신을 생성 합니다. 그런 다음이 가상 머신으로 그룹을 작성합니다. 각각 생성 된 VM 중 하나를 사용하여 두 개의 그룹이 생성됩니다. 마지막으로 &lt;code&gt;vm1&lt;/code&gt; 이 &lt;code&gt;vm2&lt;/code&gt; 보다 먼저 시작 되도록하는 규칙이 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="147050cf02783e218205061e03d866bfcfbdb16b" translate="yes" xml:space="preserve">
          <source>The example below creates two virtual machines in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource, creating the virtual machine in the cluster looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source. It then creates a group from these two virtual machines.</source>
          <target state="translated">아래 예는 &lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt; 리소스를 사용하여 클러스터에 두 개의 가상 머신을 생성하여 &lt;a href=&quot;../d/compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt; 데이터 소스 가 조회 한 클러스터에 가상 머신을 생성합니다 . 그런 다음이 두 가상 머신에서 그룹을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="2a3a536015f2030342fbe26a459c7924d720685e" translate="yes" xml:space="preserve">
          <source>The example below creates two virtual machines in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource, creating the virtual machines in the cluster looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source. It then creates an affinity rule for these two virtual machines, ensuring they will run on the same host whenever possible.</source>
          <target state="translated">아래 예는 &lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt; 리소스를 사용하여 클러스터에 두 개의 가상 머신을 생성하여 &lt;a href=&quot;../d/compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt; 데이터 소스 가 조회 한 클러스터의 가상 머신을 생성합니다 . 그런 다음이 두 가상 머신에 대한 선호도 규칙을 작성하여 가능할 때마다 동일한 호스트에서 실행되도록합니다.</target>
        </trans-unit>
        <trans-unit id="cce3a966d3b4900f909c2503b12f5d70dac1685f" translate="yes" xml:space="preserve">
          <source>The example below creates two virtual machines in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource, creating the virtual machines in the cluster looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source. It then creates an anti-affinity rule for these two virtual machines, ensuring they will run on different hosts whenever possible.</source>
          <target state="translated">아래 예는 &lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt; 리소스를 사용하여 클러스터에 두 개의 가상 머신을 생성하여 &lt;a href=&quot;../d/compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt; 데이터 소스 가 조회 한 클러스터의 가상 머신을 생성합니다 . 그런 다음이 두 가상 머신에 반 선호도 규칙을 작성하여 가능할 때마다 다른 호스트에서 실행되도록합니다.</target>
        </trans-unit>
        <trans-unit id="0c1c951523023d7b11f022736176077bdcecb94e" translate="yes" xml:space="preserve">
          <source>The example below creates two virtual machines in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource, creating the virtual machines in the datastore cluster looked up by the &lt;a href=&quot;../d/datastore_cluster&quot;&gt;&lt;code&gt;vsphere_datastore_cluster&lt;/code&gt;&lt;/a&gt; data source. It then creates an anti-affinity rule for these two virtual machines, ensuring they will run on different datastores whenever possible.</source>
          <target state="translated">아래 예는 &lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt; 리소스를 사용하여 클러스터에 두 개의 가상 머신을 생성하여 &lt;a href=&quot;../d/datastore_cluster&quot;&gt; &lt;code&gt;vsphere_datastore_cluster&lt;/code&gt; &lt;/a&gt; 데이터 소스 가 조회 한 데이터 스토어 클러스터에 가상 머신을 생성합니다 . 그런 다음이 두 가상 머신에 반 선호도 규칙을 작성하여 가능할 때마다 다른 데이터 스토어에서 실행되도록합니다.</target>
        </trans-unit>
        <trans-unit id="54a773ce08df5ce003869d7334ef3b470aee770f" translate="yes" xml:space="preserve">
          <source>The example below is fully functional.</source>
          <target state="translated">아래 예제는 완전히 작동합니다.</target>
        </trans-unit>
        <trans-unit id="60f2d9eb0f9020bc73e6e3a3d517d41586c0eb4a" translate="yes" xml:space="preserve">
          <source>The example below is the exact same configuration as the &lt;a href=&quot;compute_cluster#example-usage&quot;&gt;example&lt;/a&gt; in the &lt;a href=&quot;compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; resource, but in addition, it creates a host group with the same hosts that get put into the cluster.</source>
          <target state="translated">아래 &lt;a href=&quot;compute_cluster#example-usage&quot;&gt;예&lt;/a&gt; 는 &lt;a href=&quot;compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt; 리소스 의 예 와 정확히 동일한 구성 이지만 클러스터에 배치되는 호스트가 동일한 호스트 그룹을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="6c45ae37001afc4884f9bf37fecb7303b21b6852" translate="yes" xml:space="preserve">
          <source>The example below moves a module into another module.</source>
          <target state="translated">아래 예제는 모듈을 다른 모듈로 옮깁니다.</target>
        </trans-unit>
        <trans-unit id="1d1aa7213325f7b0f9af05378cbd2d393e7406c7" translate="yes" xml:space="preserve">
          <source>The example below moves a module into another state file. This removes the module from the original state file and adds it to the destination. The source and destination are the same meaning we're keeping the same name.</source>
          <target state="translated">아래 예제는 모듈을 다른 상태 파일로 이동합니다. 원래 상태 파일에서 모듈을 제거하고 대상에 추가합니다. 소스와 대상은 동일한 이름을 유지한다는 의미입니다.</target>
        </trans-unit>
        <trans-unit id="7cd7e8436fe9fd347ece8048f2dd4cb6ea880af4" translate="yes" xml:space="preserve">
          <source>The example below moves a resource into a module. The module will be created if it doesn't exist.</source>
          <target state="translated">아래 예제는 리소스를 모듈로 옮깁니다. 존재하지 않는 경우 모듈이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="de2fdb82049cb1f24aa9f5017f656c5e06bdba49" translate="yes" xml:space="preserve">
          <source>The example below removes a single resource in a module:</source>
          <target state="translated">아래 예제는 모듈에서 단일 리소스를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="f1415b3ef157272f8c47406e42caee65b15e7821" translate="yes" xml:space="preserve">
          <source>The example below removes an entire module:</source>
          <target state="translated">아래 예제는 전체 모듈을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="e3cbd21fc2632a81c78f5c5720c705a4e5924956" translate="yes" xml:space="preserve">
          <source>The example below renames a single resource:</source>
          <target state="translated">아래 예제는 단일 리소스의 이름을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="e836793e746cb914247c4924dcd0f0e892755c35" translate="yes" xml:space="preserve">
          <source>The example below shows a resource:</source>
          <target state="translated">아래 예제는 리소스를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="fe79fda407fe82ff0242458f637af0ebf10a9736" translate="yes" xml:space="preserve">
          <source>The example below will import an AWS instance into a module:</source>
          <target state="translated">아래 예제는 AWS 인스턴스를 모듈로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="26af669ad9c6083a1ba8301ecb54163c30744552" translate="yes" xml:space="preserve">
          <source>The example in &lt;code&gt;examples/endpoints_on_compute_engine&lt;/code&gt; shows the API from the quickstart running on a Compute Engine VM and reachable through Cloud Endpoints, which may also be useful.</source>
          <target state="translated">의 예 &lt;code&gt;examples/endpoints_on_compute_engine&lt;/code&gt; 쇼도 유용 할 수있는 클라우드 엔드 포인트를 통해 계산 엔진 VM과 연결할 수, 실행 빠른 시작에서 API.</target>
        </trans-unit>
        <trans-unit id="2c494066a64b92c30fdc9752944b53f99ad7cdda" translate="yes" xml:space="preserve">
          <source>The example request URLs shown in this document are for the public &lt;a href=&quot;https://registry.terraform.io&quot;&gt;Terraform Registry&lt;/a&gt;, and use its API &lt;code&gt;&amp;lt;base_url&amp;gt;&lt;/code&gt; of &lt;code&gt;https://registry.terraform.io/v1/modules/&lt;/code&gt;. Note that although the base URL in the &lt;a href=&quot;#service-discovery&quot;&gt;discovery document&lt;/a&gt;&lt;em&gt;may include&lt;/em&gt; a trailing slash, we include a slash after the placeholder in the &lt;code&gt;Path&lt;/code&gt;s below for clarity.</source>
          <target state="translated">이 문서에 표시된 요청 URL 예제는 공용 &lt;a href=&quot;https://registry.terraform.io&quot;&gt;Terraform Registry 용&lt;/a&gt; 이며 &lt;code&gt;https://registry.terraform.io/v1/modules/&lt;/code&gt; 의 API &lt;code&gt;&amp;lt;base_url&amp;gt;&lt;/code&gt; 을 사용합니다 . 참고의 기본 URL 있지만 것을 &lt;a href=&quot;#service-discovery&quot;&gt;발견 문서를 &lt;/a&gt;&lt;em&gt;포함 할 수&lt;/em&gt; 끝에 슬래시를에서 자리 표시 한 후, 우리는 슬래시를 포함 &lt;code&gt;Path&lt;/code&gt; 명확성을 위해 아래이야.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cf0f3e3c939b087947ed0aaea2a0cab4b9fd72f0" translate="yes" xml:space="preserve">
          <source>The exported JSON will include references to Grafana data sources, but the data source configuration is not exported in this way. In order to fully manage a dashboard with Terraform, necessary data sources can be created using the &lt;code&gt;grafana_data_source&lt;/code&gt; resource. In order to ensure that a data source is created before a dashboard that refers to it, use the &lt;code&gt;depends_on&lt;/code&gt; meta-parameter:</source>
          <target state="translated">내 보낸 JSON에는 Grafana 데이터 소스에 대한 참조가 포함되지만 데이터 소스 구성은이 방식으로 내보내지지 않습니다. Terraform으로 대시 보드를 완전히 관리하기 위해 &lt;code&gt;grafana_data_source&lt;/code&gt; 리소스를 사용하여 필요한 데이터 소스를 만들 수 있습니다 . 데이터 소스가이를 참조하는 대시 보드보다 먼저 데이터 소스를 작성하려면 &lt;code&gt;depends_on&lt;/code&gt; 메타 매개 변수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3969fa8b7bb52fdcfe470a572b2ff097f1ebf689" translate="yes" xml:space="preserve">
          <source>The expression of a local value can refer to other locals, but as usual reference cycles are not allowed. That is, a local cannot refer to itself or to a variable that refers (directly or indirectly) back to it.</source>
          <target state="translated">로컬 값의 표현은 다른 로컬을 참조 할 수 있지만 일반적인 참조주기는 허용되지 않습니다. 즉, 로컬은 자신을 참조하거나 직접 또는 간접적으로 참조하는 변수를 참조 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b9286bd5cb6cd8cdb7ba050796100c194673b85e" translate="yes" xml:space="preserve">
          <source>The external program described by the &lt;code&gt;program&lt;/code&gt; attribute must implement a specific protocol for interacting with Terraform, as follows.</source>
          <target state="translated">&lt;code&gt;program&lt;/code&gt; 속성으로 설명 된 외부 프로그램은 다음과 같이 Terraform과 상호 작용하기위한 특정 프로토콜을 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="ee0e387600998e1d2f1d380e9d30bd5c15424a94" translate="yes" xml:space="preserve">
          <source>The false is converted to a string &lt;code&gt;&quot;0&quot;&lt;/code&gt; when running Terraform.</source>
          <target state="translated">Terraform을 실행할 때 false는 문자열 &lt;code&gt;&quot;0&quot;&lt;/code&gt; 으로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="f26b4df50521022e284250655ed3074cae8c38fc" translate="yes" xml:space="preserve">
          <source>The file provisioner is also able to upload a complete directory to the remote machine. When uploading a directory, there are a few important things you should know.</source>
          <target state="translated">파일 제공자는 완전한 디렉토리를 원격 시스템에 업로드 할 수도 있습니다. 디렉토리를 업로드 할 때 알아야 할 몇 가지 중요한 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="bba0658ae3fe320e911eee99a3c1a73a14ad62de" translate="yes" xml:space="preserve">
          <source>The files loaded must end in either &lt;code&gt;.tf&lt;/code&gt; or &lt;code&gt;.tf.json&lt;/code&gt; to specify the format that is in use. Otherwise, the files are ignored. Multiple file formats can be present in the same directory; it is okay to have one Terraform configuration file be Terraform syntax and another be JSON.</source>
          <target state="translated">사용중인 형식을 지정하려면 로드 된 파일이 &lt;code&gt;.tf&lt;/code&gt; 또는 &lt;code&gt;.tf.json&lt;/code&gt; 으로 끝나야 합니다. 그렇지 않으면 파일이 무시됩니다. 동일한 디렉토리에 여러 파일 형식이 존재할 수 있습니다. 하나의 Terraform 구성 파일은 Terraform 구문이고 다른 하나는 JSON입니다.</target>
        </trans-unit>
        <trans-unit id="3b312401a7a35bb32f3e3dafa030500a867178b0" translate="yes" xml:space="preserve">
          <source>The files that are uploaded and packaged with a &lt;code&gt;push&lt;/code&gt; are all the files in the &lt;code&gt;path&lt;/code&gt; given as the parameter to the command, recursively. By default (unless &lt;code&gt;-vcs=false&lt;/code&gt; is specified), Terraform will automatically detect when a VCS such as Git is being used, and in that case will only upload the files that are committed. Because of this built-in intelligence, you don't have to worry about excluding folders such as &quot;.git&quot; or &quot;.hg&quot; usually.</source>
          <target state="translated">&lt;code&gt;push&lt;/code&gt; 로 업로드 및 패키지 된 파일은 &lt;code&gt;path&lt;/code&gt; 에있는 모든 파일 이 명령에 대한 매개 변수로 재귀 적으로 제공됩니다. 기본적으로 ( &lt;code&gt;-vcs=false&lt;/code&gt; 가 지정 되지 않은 경우) Terraform은 Git과 같은 VCS가 사용되는시기를 자동으로 감지 하며이 경우 커밋 된 파일 만 업로드합니다. 이러한 기본 제공 인텔리전스로 인해 일반적으로 &quot;.git&quot;또는 &quot;.hg&quot;와 같은 폴더를 제외하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="27cefe48d3f1dc85838d56fa5eea9a6fb1ca41db" translate="yes" xml:space="preserve">
          <source>The final, merged configuration is stored on disk in the &lt;code&gt;.terraform&lt;/code&gt; directory, which should be ignored from version control. This means that sensitive information can be omitted from version control, but it will be present in plain text on local disk when running Terraform.</source>
          <target state="translated">마지막으로 병합 된 구성은 디스크의 &lt;code&gt;.terraform&lt;/code&gt; 디렉토리 에 저장 되며 버전 제어에서는 무시해야합니다. 즉, 버전 제어에서 민감한 정보를 생략 할 수 있지만 Terraform을 실행할 때 로컬 디스크에 일반 텍스트로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="eaf8d7087819b249572e9c3151ca97dc9a388b3f" translate="yes" xml:space="preserve">
          <source>The first interface with the &lt;code&gt;public&lt;/code&gt; network assigned to it would show up in order before the interface assigned to &lt;code&gt;private&lt;/code&gt;. On some Linux systems, this might mean that the first interface would show up as &lt;code&gt;eth0&lt;/code&gt; and the second would show up as &lt;code&gt;eth1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; 네트워크가 할당 된 첫 번째 인터페이스는 &lt;code&gt;private&lt;/code&gt; 인터페이스가 할당되기 전에 순서대로 표시됩니다 . 일부 Linux 시스템에서 이는 첫 번째 인터페이스가 &lt;code&gt;eth0&lt;/code&gt; 으로 표시되고 두 번째 인터페이스는 &lt;code&gt;eth1&lt;/code&gt; 로 표시됨을 의미 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ec29b26741834e90fae9a556dc5fd69d96673d06" translate="yes" xml:space="preserve">
          <source>The first is default behavior. Terraform waits after ASG creation for &lt;code&gt;min_size&lt;/code&gt; (or &lt;code&gt;desired_capacity&lt;/code&gt;, if specified) healthy instances to show up in the ASG before continuing.</source>
          <target state="translated">첫 번째는 기본 동작입니다. Terraform은 ASG 생성 후 &lt;code&gt;min_size&lt;/code&gt; (또는 지정된 경우 &lt;code&gt;desired_capacity&lt;/code&gt; 이면) 정상 인스턴스가 ASG에 표시 될 때까지 기다렸다가 계속합니다.</target>
        </trans-unit>
        <trans-unit id="aa57463dc5ab2f806da4e90715ccee8e085a5e1d" translate="yes" xml:space="preserve">
          <source>The first line tells us that the method that failed is &lt;code&gt;resourceAwsSomeResourceCreate&lt;/code&gt;, which we can deduce that involves the creation of a (fictional) &lt;code&gt;aws_some_resource&lt;/code&gt;.</source>
          <target state="translated">첫 번째 줄은 실패한 메소드가 &lt;code&gt;resourceAwsSomeResourceCreate&lt;/code&gt; 임을 알려주며 , 이는 (가상) &lt;code&gt;aws_some_resource&lt;/code&gt; 작성과 관련된 것으로 추론 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5f548f71763cc78d678b1cff330b9e78b28cb743" translate="yes" xml:space="preserve">
          <source>The first set of &lt;code&gt;network_interface&lt;/code&gt; data would be assigned to the &lt;code&gt;public&lt;/code&gt; interface, and the second to the &lt;code&gt;private&lt;/code&gt; interface.</source>
          <target state="translated">첫 번째 &lt;code&gt;network_interface&lt;/code&gt; 데이터 세트 는 &lt;code&gt;public&lt;/code&gt; 인터페이스에 지정되고 두 번째 세트 는 &lt;code&gt;private&lt;/code&gt; 인터페이스에 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="6827c02fa3abf172535a90ec96419c14db97bf20" translate="yes" xml:space="preserve">
          <source>The first thing to do in your plugin is to create the &lt;a href=&quot;https://godoc.org/github.com/hashicorp/terraform/helper/schema#Provider&quot;&gt;schema.Provider&lt;/a&gt; structure. This structure implements the &lt;code&gt;ResourceProvider&lt;/code&gt; interface. We recommend creating this structure in a function to make testing easier later. Example:</source>
          <target state="translated">플러그인에서 가장 먼저해야 할 일은 &lt;a href=&quot;https://godoc.org/github.com/hashicorp/terraform/helper/schema#Provider&quot;&gt;schema.Provider&lt;/a&gt; 구조 를 만드는 것 입니다. 이 구조는 &lt;code&gt;ResourceProvider&lt;/code&gt; 인터페이스를 구현합니다 . 나중에 테스트하기 쉽도록 함수에서이 구조를 작성하는 것이 좋습니다. 예:</target>
        </trans-unit>
        <trans-unit id="889a00e3596ed35d759df0f717d3e30b5fdc4460" translate="yes" xml:space="preserve">
          <source>The flag &lt;code&gt;TF_CLI_ARGS&lt;/code&gt; affects all Terraform commands. If you specify a named command in the form of &lt;code&gt;TF_CLI_ARGS_name&lt;/code&gt; then it will only affect that command. As an example, to specify that only plans never refresh, you can set &lt;code&gt;TF_CLI_ARGS_plan=&quot;-refresh=false&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TF_CLI_ARGS&lt;/code&gt; 플래그 는 모든 Terraform 명령에 영향을줍니다. &lt;code&gt;TF_CLI_ARGS_name&lt;/code&gt; 형식으로 이름 지정된 명령을 지정하면 해당 명령에만 영향을줍니다. 예를 들어 계획 만 새로 고치지 않도록 지정하려면 &lt;code&gt;TF_CLI_ARGS_plan=&quot;-refresh=false&quot;&lt;/code&gt; 를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a18d1238e6caa14a50a1d22d52a01ae6136e2948" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;../../../configuration/resources#timeouts&quot;&gt;Timeout&lt;/a&gt; configuration options are available:</source>
          <target state="translated">다음과 같은 &lt;a href=&quot;../../../configuration/resources#timeouts&quot;&gt;시간 초과&lt;/a&gt; 구성 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9654dd2eab0309d414dee714ebe81a94663dd453" translate="yes" xml:space="preserve">
          <source>The following Environment Variables must be set to run the acceptance tests:</source>
          <target state="translated">승인 테스트를 실행하려면 다음 환경 변수를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="4305a879f28a61a193d572a415f93cb2f2b33a9b" translate="yes" xml:space="preserve">
          <source>The following Terraform resource types are used in this tutorial:</source>
          <target state="translated">이 학습에서는 다음 Terraform 자원 유형이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="50f5a14ba3f76e24874bc35459e9d7a6a7db4ad7" translate="yes" xml:space="preserve">
          <source>The following abridged example below demonstrates how you can manage the number of uplinks, and the name of the uplinks via the &lt;code&gt;uplinks&lt;/code&gt; parameter.</source>
          <target state="translated">아래의 요약 된 예는 &lt;code&gt;uplinks&lt;/code&gt; 매개 변수 를 통해 업 링크 수와 업 링크 이름을 관리하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="44d412c99cc6dbcee4b85c9b7537e3dfe9cc2722" translate="yes" xml:space="preserve">
          <source>The following abridged example demonstrates a current basic usage of the provider to launch a virtual machine using the &lt;a href=&quot;r/virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt; resource&lt;/a&gt;. The datacenter, datastore, resource pool, and network are discovered via the &lt;a href=&quot;d/datacenter&quot;&gt;&lt;code&gt;vsphere_datacenter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;d/datastore&quot;&gt;&lt;code&gt;vsphere_datastore&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;d/resource_pool&quot;&gt;&lt;code&gt;vsphere_resource_pool&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;d/network&quot;&gt;&lt;code&gt;vsphere_network&lt;/code&gt;&lt;/a&gt; data sources respectively. Most of these resources can be directly managed by Terraform as well - check the sidebar for specific resources.</source>
          <target state="translated">다음 요약 된 예제는 &lt;a href=&quot;r/virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; 리소스를&lt;/a&gt; 사용하여 가상 머신을 시작하기 위해 현재 기본 제공자 사용을 보여줍니다 . 데이터 센터, 데이터 저장소, 리소스 풀 및 네트워크는 각각 &lt;a href=&quot;d/datacenter&quot;&gt; &lt;code&gt;vsphere_datacenter&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;d/datastore&quot;&gt; &lt;code&gt;vsphere_datastore&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;d/resource_pool&quot;&gt; &lt;code&gt;vsphere_resource_pool&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;d/network&quot;&gt; &lt;code&gt;vsphere_network&lt;/code&gt; &lt;/a&gt; 데이터 소스 를 통해 감지됩니다 . 이러한 리소스는 대부분 Terraform에서 직접 관리 할 수 ​​있습니다. 특정 리소스에 대해서는 사이드 바를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="74e34c5eb30a15507c8da20d80c27e8c13daacf8" translate="yes" xml:space="preserve">
          <source>The following additional attributes are exported:</source>
          <target state="translated">다음과 같은 추가 속성이 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="b7f9781896aafd253b4200ed83061246c99b01e8" translate="yes" xml:space="preserve">
          <source>The following additional atttributes are provided:</source>
          <target state="translated">다음과 같은 추가 속성이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="809533a750ad0d23a4ae7f21d8cac72e024e777d" translate="yes" xml:space="preserve">
          <source>The following adds a route for a particular cidr block to every (private kops) route table in a specified vpc to use a particular vpc peering connection.</source>
          <target state="translated">다음은 특정 vpc 피어링 연결을 사용하기 위해 지정된 cipc의 모든 (private kops) 라우팅 테이블에 특정 cidr 블록에 대한 경로를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ab778ec28d2f03134e1143c8b94005c5a152a8c2" translate="yes" xml:space="preserve">
          <source>The following are some general options that also affect ports that this policy applies to:</source>
          <target state="translated">다음은이 정책이 적용되는 포트에도 영향을주는 몇 가지 일반적인 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="3d6a64d8e8de50d522a75e26816f64551e44c6bf" translate="yes" xml:space="preserve">
          <source>The following argument are exported:</source>
          <target state="translated">다음 인수가 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="e13eea1a0552634ec49861dfedef83923f03fb36" translate="yes" xml:space="preserve">
          <source>The following argument is required:</source>
          <target state="translated">다음과 같은 인수가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a73aa5bd8a7212585d9cbab0617a14e85a1050af" translate="yes" xml:space="preserve">
          <source>The following argument is supported:</source>
          <target state="translated">다음과 같은 인수가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="f6595641a9bf6905ddfbb37743177af2b3ef1ba2" translate="yes" xml:space="preserve">
          <source>The following arguments are computed. You can access both &lt;code&gt;clone_ssh&lt;/code&gt; and &lt;code&gt;clone_https&lt;/code&gt; for getting a clone URL.</source>
          <target state="translated">다음과 같은 인수가 계산됩니다. 클론 URL을 얻기 위해 &lt;code&gt;clone_ssh&lt;/code&gt; 및 &lt;code&gt;clone_https&lt;/code&gt; 에 모두 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="72473c2a3f67d1172a725e8e6068f0449d345c89" translate="yes" xml:space="preserve">
          <source>The following arguments are expected:</source>
          <target state="translated">다음과 같은 주장이 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="97ecdbe15a5f9d784ef1ab75907d14e53f859080" translate="yes" xml:space="preserve">
          <source>The following arguments are exported:</source>
          <target state="translated">다음과 같은 인수가 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="44c6d5b53e5af88414bba2acdab39e70e72efc9b" translate="yes" xml:space="preserve">
          <source>The following arguments are maintained for backwards compatibility and may be removed in a future version:</source>
          <target state="translated">다음 인수는 이전 버전과의 호환성을 위해 유지되며 이후 버전에서 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3239547ab93ba3a59d4e4c534792289b19c9e3db" translate="yes" xml:space="preserve">
          <source>The following arguments are only available to &quot;SimpleScaling&quot; type policies:</source>
          <target state="translated">다음 인수는 &quot;SimpleScaling&quot;유형 정책에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2f35214a6af828c2de45967fe7e0c8f468ab928" translate="yes" xml:space="preserve">
          <source>The following arguments are only available to &quot;StepScaling&quot; type policies:</source>
          <target state="translated">다음 인수는 &quot;StepScaling&quot;유형 정책에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dfc765444d7e50639b46cc1be2dd3a5158c0e3e9" translate="yes" xml:space="preserve">
          <source>The following arguments are only available to &quot;TargetTrackingScaling&quot; type policies:</source>
          <target state="translated">다음 인수는 &quot;TargetTrackingScaling&quot;유형 정책에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7a5bb150e273cd6d0d71df62e39be92d4272aa7" translate="yes" xml:space="preserve">
          <source>The following arguments are optional:</source>
          <target state="translated">다음 인수는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="fba2497aaa54c75539d8d16ab80f2c1ae7908ec1" translate="yes" xml:space="preserve">
          <source>The following arguments are related to how the virtual switch binds to physical NICs:</source>
          <target state="translated">다음 인수는 가상 스위치가 물리적 NIC에 바인딩되는 방법과 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7633613f9b29f8c3d322415c812efa268698c39a" translate="yes" xml:space="preserve">
          <source>The following arguments are required:</source>
          <target state="translated">다음과 같은 인수가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9f9b708a6d31410a2e5d2afe6f9ed10442c7ebea" translate="yes" xml:space="preserve">
          <source>The following arguments are shared with the &lt;a href=&quot;distributed_port_group&quot;&gt;&lt;code&gt;vsphere_distributed_port_group&lt;/code&gt;&lt;/a&gt; resource. Setting them here defines a default policy here that will be inherited by other port groups on this switch that do not have these values otherwise overridden. Not defining these options in a DVS will infer defaults that can be seen in the Terraform state after the initial apply.</source>
          <target state="translated">다음 인수는 &lt;a href=&quot;distributed_port_group&quot;&gt; &lt;code&gt;vsphere_distributed_port_group&lt;/code&gt; &lt;/a&gt; 리소스 와 공유됩니다 . 여기에 설정하면이 값을 다른 값으로 재정의하지 않은이 스위치의 다른 포트 그룹에 의해 상속되는 기본 정책이 여기에 정의됩니다. DVS에서 이러한 옵션을 정의하지 않으면 초기 적용 후 Terraform 상태에서 볼 수있는 기본값이 유추됩니다.</target>
        </trans-unit>
        <trans-unit id="7edfe1f37723f31d74a67b12b65b5388fabf5a85" translate="yes" xml:space="preserve">
          <source>The following arguments are supported for backwards compatibility but should not be used:</source>
          <target state="translated">다음 인수는 이전 버전과의 호환성을 위해 지원되지만 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="6c916da748ca0ed23518e80fca1b36ab3fb30a79" translate="yes" xml:space="preserve">
          <source>The following arguments are supported in the &lt;code&gt;provider&lt;/code&gt; block:</source>
          <target state="translated">&lt;code&gt;provider&lt;/code&gt; 블록 에서 다음 인수가 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="22a616915213fad0699cf16b4de7539083425ed3" translate="yes" xml:space="preserve">
          <source>The following arguments are supported when adding Floating IPs:</source>
          <target state="translated">유동 IP를 추가 할 때 다음 인수가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c689bf4738bd27a681e9810a24fc685baabc69d3" translate="yes" xml:space="preserve">
          <source>The following arguments are supported when creating new servers:</source>
          <target state="translated">새 서버를 작성할 때 다음 인수가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e1a400a31e394995791054227bb17cb160990959" translate="yes" xml:space="preserve">
          <source>The following arguments are supported when updating Floating IPs:</source>
          <target state="translated">유동 IP 업데이트시 다음 인수가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e544002fa8ad0c42c34f6a2ab2e7d5acf6851ede" translate="yes" xml:space="preserve">
          <source>The following arguments are supported when updating servers:</source>
          <target state="translated">서버를 업데이트 할 때 다음 인수가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="9ff4cafcac1d6d5660bdf178e950483957bb54d0" translate="yes" xml:space="preserve">
          <source>The following arguments are supported, at least one is required:</source>
          <target state="translated">다음 인수가 지원되며 하나 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="34442105b0370a7034709427f26e874c276a9a99" translate="yes" xml:space="preserve">
          <source>The following arguments are supported. Please check the &lt;a href=&quot;https://github.com/librato/librato-services/tree/master/services&quot;&gt;relevant documentation&lt;/a&gt; for each type of alert.</source>
          <target state="translated">다음과 같은 인수가 지원됩니다. 각 경고 유형에 대한 &lt;a href=&quot;https://github.com/librato/librato-services/tree/master/services&quot;&gt;관련 문서&lt;/a&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ee6f0cf251bab53dcc2b1661d10b0659078a49b" translate="yes" xml:space="preserve">
          <source>The following arguments are supported:</source>
          <target state="translated">다음과 같은 인수가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="5cca797d62deba4ea9b808a274d71e11091e6b76" translate="yes" xml:space="preserve">
          <source>The following arguments are supported: (Note that one of either source_disk or raw_disk is required)</source>
          <target state="translated">다음 인수가 지원됩니다 (source_disk 또는 raw_disk 중 하나가 필요함)</target>
        </trans-unit>
        <trans-unit id="812cfdd663d76a236c68d35d34cb97649d359f64" translate="yes" xml:space="preserve">
          <source>The following arguments are supported: * &lt;code&gt;name&lt;/code&gt; - (Required) The name of the security group rule.</source>
          <target state="translated">다음 인수가 지원됩니다 * &lt;code&gt;name&lt;/code&gt; - (필수) 보안 그룹 규칙의 이름.</target>
        </trans-unit>
        <trans-unit id="957fc64e9147f0ec435a313dd11f88f0fd50306a" translate="yes" xml:space="preserve">
          <source>The following arguments are supported: * &lt;code&gt;service_name&lt;/code&gt;: (Required) The name of the service. Usually of the form &lt;code&gt;$apiname.endpoints.$projectid.cloud.goog&lt;/code&gt;. * &lt;code&gt;openapi_config&lt;/code&gt;: (Optional) The full text of the OpenAPI YAML configuration as described &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md&quot;&gt;here&lt;/a&gt;. Either this, or &lt;em&gt;both&lt;/em&gt; of &lt;code&gt;grpc_config&lt;/code&gt; and &lt;code&gt;protoc_output&lt;/code&gt; must be specified. * &lt;code&gt;grpc_config&lt;/code&gt;: (Optional) The full text of the Service Config YAML file (Example located &lt;a href=&quot;https://github.com/GoogleCloudPlatform/python-docs-samples/blob/master/endpoints/bookstore-grpc/api_config.yaml&quot;&gt;here&lt;/a&gt;). If provided, must also provide &lt;code&gt;protoc_output&lt;/code&gt;. &lt;code&gt;open_api&lt;/code&gt; config must &lt;em&gt;not&lt;/em&gt; be provided. * &lt;code&gt;protoc_output_base64&lt;/code&gt;: (Optional) The full contents of the Service Descriptor File generated by protoc. This should be a compiled .pb file, base64-encoded. * &lt;code&gt;protoc_output&lt;/code&gt;: (Deprecated) The full contents of the Service Descriptor File generated by protoc. This should be a compiled .pb file. Use &lt;code&gt;protoc_output_base64&lt;/code&gt; instead to prevent a permanent diff from the statefile's munging of non-UTF8 bytes. * &lt;code&gt;project&lt;/code&gt;: (Optional) The project ID that the service belongs to. If not provided, provider project is used.</source>
          <target state="translated">다음 인수가 지원됩니다. * &lt;code&gt;service_name&lt;/code&gt; : (필수) 서비스 이름. 일반적으로 &lt;code&gt;$apiname.endpoints.$projectid.cloud.goog&lt;/code&gt; 입니다. * &lt;code&gt;openapi_config&lt;/code&gt; : (선택 사항) &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md&quot;&gt;여기에&lt;/a&gt; 설명 된 OpenAPI YAML 구성의 전문 입니다. 어느 쪽이, 또는 &lt;em&gt;모두&lt;/em&gt; 의 &lt;code&gt;grpc_config&lt;/code&gt; 및 &lt;code&gt;protoc_output&lt;/code&gt; 을 지정해야합니다. * &lt;code&gt;grpc_config&lt;/code&gt; : (선택 사항) 서비스 구성 YAML 파일의 전체 텍스트 (위치 예 &lt;a href=&quot;https://github.com/GoogleCloudPlatform/python-docs-samples/blob/master/endpoints/bookstore-grpc/api_config.yaml&quot;&gt;여기&lt;/a&gt; ). 제공되는 경우 &lt;code&gt;protoc_output&lt;/code&gt; 도 제공해야합니다 . &lt;code&gt;open_api&lt;/code&gt; 구성을 제공 &lt;em&gt;하지 않아야&lt;/em&gt; 합니다. * &lt;code&gt;protoc_output_base64&lt;/code&gt; : (선택 사항) protoc에 의해 생성 된 서비스 디스크립터 파일의 전체 내용. base64로 인코딩 된 컴파일 된 .pb 파일이어야합니다. * &lt;code&gt;protoc_output&lt;/code&gt; : (더 이상 사용되지 않음) protoc에 의해 생성 된 서비스 디스크립터 파일의 전체 내용. 컴파일 된 .pb 파일이어야합니다. 비 UTF8 바이트의 상태 &lt;code&gt;protoc_output_base64&lt;/code&gt; 않도록 영구 diff를 방지 하려면 대신 protoc_output_base64 를 사용하십시오 . * &lt;code&gt;project&lt;/code&gt; : (선택 사항) 서비스가 속한 프로젝트 ID. 제공되지 않으면 제공자 프로젝트가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6517be44bbb8c570fce10967d5e450ec39c01355" translate="yes" xml:space="preserve">
          <source>The following arguments are used to configure the VMware NSX-T Provider:</source>
          <target state="translated">다음 인수는 VMware NSX-T 제공자를 구성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1a3fe97aac782ad7b8756199a314d498fabca963" translate="yes" xml:space="preserve">
          <source>The following arguments are used to configure the VMware vCloud Director Provider:</source>
          <target state="translated">다음 인수는 VMware vCloud Director 제공자를 구성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4e0009a40373052d42c32adb3bde87cec9f83007" translate="yes" xml:space="preserve">
          <source>The following arguments are used to configure the VMware vSphere Provider:</source>
          <target state="translated">다음 인수는 VMware vSphere Provider를 구성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b5b16e38807697223b58f0e4b2e8dbacfd214699" translate="yes" xml:space="preserve">
          <source>The following arguments are valid for each &lt;code&gt;device&lt;/code&gt; section:</source>
          <target state="translated">다음은 각 &lt;code&gt;device&lt;/code&gt; 섹션에 유효한 인수입니다 .</target>
        </trans-unit>
        <trans-unit id="07c998840ad4717c2fa2b1c360b1ce6c8dbd571a" translate="yes" xml:space="preserve">
          <source>The following arguments are valid for each &lt;code&gt;rule&lt;/code&gt; section:</source>
          <target state="translated">다음 &lt;code&gt;rule&lt;/code&gt; 은 각 규칙 섹션에 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="9240aa282a5373ac402dd273c10089ae493cfc99" translate="yes" xml:space="preserve">
          <source>The following arguments are valid for each &lt;code&gt;target&lt;/code&gt; section:</source>
          <target state="translated">다음 인수는 각 &lt;code&gt;target&lt;/code&gt; 섹션에 유효합니다 .</target>
        </trans-unit>
        <trans-unit id="551ef86a06e8888c80f0238da284fc022d9c409e" translate="yes" xml:space="preserve">
          <source>The following arguments manage network I/O control. Network I/O control (also known as network resource control) can be used to set up advanced traffic shaping for the DVS, allowing control of various classes of traffic in a fashion similar to how resource pools work for virtual machines. Configuration of network I/O control is also a requirement for the use of network resource pools, if their use is so desired.</source>
          <target state="translated">다음 인수는 네트워크 I / O 제어를 관리합니다. 네트워크 I / O 제어 (네트워크 자원 제어라고도 함)를 사용하여 DVS에 대한 고급 트래픽 쉐이핑을 설정하여 가상 시스템에서 자원 풀이 작동하는 방식과 유사한 방식으로 다양한 클래스의 트래픽을 제어 할 수 있습니다. 네트워크 I / O 제어 구성도 네트워크 자원 풀을 사용하려면 필요합니다.</target>
        </trans-unit>
        <trans-unit id="66ec84aa8e7be202b9ea5f4bea704a24ae751783" translate="yes" xml:space="preserve">
          <source>The following attribute is additionally exported:</source>
          <target state="translated">다음 속성이 추가로 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="fa7fc2ed962598fdd9d82dff7b546f269e8ac2f3" translate="yes" xml:space="preserve">
          <source>The following attribute is exported in addition to the arguments listed above:</source>
          <target state="translated">위에 나열된 인수 외에도 다음 속성이 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="fbcf709646803d035f0a83d787c91539a71ddcb5" translate="yes" xml:space="preserve">
          <source>The following attribute is exported:</source>
          <target state="translated">다음 속성이 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="1450f34665e6fef385d78fa0ee35bf03b8b0dfed" translate="yes" xml:space="preserve">
          <source>The following attributes are available within a &lt;code&gt;metric&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;metric&lt;/code&gt; 내에서 다음 속성을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="04d829c3cd10806ad8133c57139f2250addf6328" translate="yes" xml:space="preserve">
          <source>The following attributes are exported</source>
          <target state="translated">다음 속성이 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="c2c6035618fd673940a9624232cba92677ad6ee2" translate="yes" xml:space="preserve">
          <source>The following attributes are exported along with all argument references:</source>
          <target state="translated">다음 속성은 모든 인수 참조와 함께 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="1de4f3abd7300bc1b4146df13a977a377c69d67b" translate="yes" xml:space="preserve">
          <source>The following attributes are exported in addition to the above configuration:</source>
          <target state="translated">위의 구성 외에 다음 속성이 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="91655bf1251531132024d13c3843ef87f66df968" translate="yes" xml:space="preserve">
          <source>The following attributes are exported in addition to the arguments listed above:</source>
          <target state="translated">위에 나열된 인수 외에도 다음 속성이 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="d90910192d7b1764e869ae01e5f8324b3950c107" translate="yes" xml:space="preserve">
          <source>The following attributes are exported on the base level of this resource:</source>
          <target state="translated">이 자원의 기본 레벨에서 다음 속성이 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="a81b1a7a909b3e40f5bc5d237aca160d226d188c" translate="yes" xml:space="preserve">
          <source>The following attributes are exported only if there is an authorization rule named &lt;code&gt;RootManageSharedAccessKey&lt;/code&gt; which is created automatically by Azure.</source>
          <target state="translated">다음 특성은 Azure에서 자동으로 생성되는 &lt;code&gt;RootManageSharedAccessKey&lt;/code&gt; 라는 권한 부여 규칙이있는 경우에만 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="bf01bef1566443dc910d1d250f5b2a5a8571c889" translate="yes" xml:space="preserve">
          <source>The following attributes are exported:</source>
          <target state="translated">다음 속성이 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="a5e3ebf868111bdf3c50677fc8fd42277b48be8a" translate="yes" xml:space="preserve">
          <source>The following attributes are exported: * &lt;code&gt;id&lt;/code&gt; - The ID of the app release</source>
          <target state="translated">다음 속성이 내보내집니다. * &lt;code&gt;id&lt;/code&gt; - 앱 릴리스의 ID</target>
        </trans-unit>
        <trans-unit id="2299c95d461d39a42dae66eb3cbdcc3d19e3e787" translate="yes" xml:space="preserve">
          <source>The following attributes are exported: * &lt;code&gt;id&lt;/code&gt; - The ID of the formation</source>
          <target state="translated">다음 속성이 내보내집니다. * &lt;code&gt;id&lt;/code&gt; - 대형의 ID</target>
        </trans-unit>
        <trans-unit id="9d6db25a1812de7f61f3327b65390e3db6966e2f" translate="yes" xml:space="preserve">
          <source>The following attributes are present:</source>
          <target state="translated">다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f6aa8f820f0284bd28697b0207de3b2578af79f" translate="yes" xml:space="preserve">
          <source>The following attributes are supported:</source>
          <target state="translated">다음과 같은 속성이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="2da4a562896f8f848a34a9d3bb497133c3d4cc44" translate="yes" xml:space="preserve">
          <source>The following attributes are used as &lt;code&gt;locality&lt;/code&gt; hints:</source>
          <target state="translated">다음과 같은 속성이 사용됩니다 &lt;code&gt;locality&lt;/code&gt; 힌트 .</target>
        </trans-unit>
        <trans-unit id="396079a6dcf55a4aa0a28634e899f8a4feaf315d" translate="yes" xml:space="preserve">
          <source>The following attributes are used by &lt;code&gt;cns&lt;/code&gt;:</source>
          <target state="translated">다음 속성이 사용됩니다. &lt;code&gt;cns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce16541869e1c5a42df2035371baeb13cb4c2391" translate="yes" xml:space="preserve">
          <source>The following attributes can be updated:</source>
          <target state="translated">다음과 같은 속성을 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="442d105d402351e21e2db8fc83145aad88cb3df8" translate="yes" xml:space="preserve">
          <source>The following block contains all that is necessary to create a new virtual machine, with a single disk and network interface.</source>
          <target state="translated">다음 블록에는 단일 디스크 및 네트워크 인터페이스를 사용하여 새 가상 머신을 생성하는 데 필요한 모든 것이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a4d8d6613d81ed294be47b0fe96942d9cdd527f3" translate="yes" xml:space="preserve">
          <source>The following can be reported:</source>
          <target state="translated">다음을보고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e361f8332327c050bb83f6b46a42d69900363b6" translate="yes" xml:space="preserve">
          <source>The following command is the equivalent:</source>
          <target state="translated">다음 명령은 동일합니다.</target>
        </trans-unit>
        <trans-unit id="59ba48598fac60b10cc57b0924874c506212400a" translate="yes" xml:space="preserve">
          <source>The following config gives the Default Network ACL the same rules that AWS includes, but pulls the resource under management by Terraform. This means that any ACL rules added or changed will be detected as drift.</source>
          <target state="translated">다음 구성은 기본 네트워크 ACL에 AWS에 포함 된 것과 동일한 규칙을 제공하지만 Terraform에서 관리중인 리소스를 가져옵니다. 이는 추가 또는 변경된 ACL 규칙이 드리프트로 감지됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="e294efe6fbc6115094375fa5cb67c808e314b3b9" translate="yes" xml:space="preserve">
          <source>The following config gives the Default Security Group the same rules that AWS provides by default, but pulls the resource under management by Terraform. This means that any ingress or egress rules added or changed will be detected as drift.</source>
          <target state="translated">다음 구성은 기본 보안 그룹에 AWS가 기본적으로 제공하는 것과 동일한 규칙을 제공하지만 Terraform에서 관리중인 리소스를 가져옵니다. 이는 추가 또는 변경된 모든 수신 또는 송신 규칙이 드리프트로 감지됨을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="8d7e41b2d7479849fc98101bae20e97a6d303ab0" translate="yes" xml:space="preserve">
          <source>The following configuration options / environment variables are supported:</source>
          <target state="translated">다음 구성 옵션 / 환경 변수가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="592eda3072fd3796c035516492de1d693092104a" translate="yes" xml:space="preserve">
          <source>The following configuration options are supported:</source>
          <target state="translated">다음 구성 옵션이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="50804084649150c3580a7081b914a5027f266ed5" translate="yes" xml:space="preserve">
          <source>The following configuration options must be supplied if &lt;code&gt;access_key&lt;/code&gt; is not.</source>
          <target state="translated">&lt;code&gt;access_key&lt;/code&gt; 가 아닌 경우 다음 구성 옵션을 제공해야합니다 .</target>
        </trans-unit>
        <trans-unit id="84bf0d1f54cbf86f1a4d4efd4ee61b7085aba5c3" translate="yes" xml:space="preserve">
          <source>The following configuration options or environment variables are supported:</source>
          <target state="translated">다음 구성 옵션 또는 환경 변수가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="3638abf600c85a53af23b7c8ed045a52f69fa4fb" translate="yes" xml:space="preserve">
          <source>The following configuration shows the full capabilities of a Docker Service. Currently, the &lt;a href=&quot;https://docs.docker.com/engine/api/v1.32&quot;&gt;Docker API 1.32&lt;/a&gt; is implemented.</source>
          <target state="translated">다음 구성은 Docker 서비스의 모든 기능을 보여줍니다. 현재 &lt;a href=&quot;https://docs.docker.com/engine/api/v1.32&quot;&gt;Docker API 1.32&lt;/a&gt; 가 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="e47e56b53b64c2fc1c789e605154825489a88c25" translate="yes" xml:space="preserve">
          <source>The following configuration starts a Docker Service with - the given image, - 1 replica - exposes the port &lt;code&gt;8080&lt;/code&gt; in &lt;code&gt;vip&lt;/code&gt; mode to the host machine - moreover, uses the &lt;code&gt;container&lt;/code&gt; runtime</source>
          <target state="translated">주어진 이미지 - - 1 개 복제 - 다음과 같은 구성을 갖는 도커 서비스를 시작 포트 공개 &lt;code&gt;8080&lt;/code&gt; 년 &lt;code&gt;vip&lt;/code&gt; 호스트 시스템에 모드 - 또한, 사용하는 &lt;code&gt;container&lt;/code&gt; 런타임을</target>
        </trans-unit>
        <trans-unit id="5fa54721a391dd649dfff69ea706b31aef40c700" translate="yes" xml:space="preserve">
          <source>The following denies all Egress traffic by omitting any &lt;code&gt;egress&lt;/code&gt; rules, while including the default &lt;code&gt;ingress&lt;/code&gt; rule to allow all traffic.</source>
          <target state="translated">다음 은 모든 트래픽을 허용 하는 기본 &lt;code&gt;ingress&lt;/code&gt; 규칙을 포함하여 모든 &lt;code&gt;egress&lt;/code&gt; 규칙 을 생략하여 모든 송신 트래픽을 거부합니다 .</target>
        </trans-unit>
        <trans-unit id="7556f6c520485cfb9ff31bd48fe32b431abb9cfd" translate="yes" xml:space="preserve">
          <source>The following dynamodb table description models the table and GSI shown in the &lt;a href=&quot;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html&quot;&gt;AWS SDK example documentation&lt;/a&gt;</source>
          <target state="translated">다음 dynamodb 테이블 설명은 &lt;a href=&quot;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html&quot;&gt;AWS SDK 예제 설명서에&lt;/a&gt; 표시된 테이블 및 GSI를 모델링합니다.</target>
        </trans-unit>
        <trans-unit id="2903b9a8f826c38b28cc106e4c317243932ce9a9" translate="yes" xml:space="preserve">
          <source>The following environment variables must be set for the running of the acceptance test suite:</source>
          <target state="translated">승인 테스트 스위트를 실행하려면 다음 환경 변수를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="325235b15f0e377aa196883e5d2b49ae041a3e33" translate="yes" xml:space="preserve">
          <source>The following example below creates a CloudFront distribution with an S3 origin.</source>
          <target state="translated">다음 예제는 S3 오리진을 사용하여 CloudFront 배포를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3ac458cd5c5243c1ea1c02bdf4e4deb979dede46" translate="yes" xml:space="preserve">
          <source>The following example below creates a CloudFront origin access identity.</source>
          <target state="translated">다음 예제는 CloudFront 오리진 액세스 자격 증명을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="1b55b5c83e74be19fe8f01b9e1f1b9295afed4e3" translate="yes" xml:space="preserve">
          <source>The following example below demonstrates a &quot;standard&quot; example of configuring a vSphere DVS in a 3-node vSphere datacenter named &lt;code&gt;dc1&lt;/code&gt;, across 4 NICs with two being used as active, and two being used as passive. Note that the NIC failover order propagates to any port groups configured on this DVS and can be overridden there.</source>
          <target state="translated">아래의 다음 예는 &lt;code&gt;dc1&lt;/code&gt; 이라는 3 노드 vSphere 데이터 센터에서 vSphere DVS를 구성하는 &quot;표준&quot;예를 보여줍니다. 두 개는 활성으로 사용되고 두 개는 수동으로 사용됩니다. NIC 장애 조치 순서는이 DVS에 구성된 모든 포트 그룹으로 전파되며 여기에서 재정의 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f521a59fb179e3402a6792cbcc044bec8d7d401e" translate="yes" xml:space="preserve">
          <source>The following example builds on the above example by creating a &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; and applying the created tag to it:</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt; 을 생성 하고 생성 된 태그를 적용하여 위 예제를 기반으로 합니다.</target>
        </trans-unit>
        <trans-unit id="c486d347bd85318383e0d242ee765516148b4840" translate="yes" xml:space="preserve">
          <source>The following example builds on the above example by creating a &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; and assigning a value to created custom attribute on it.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt; 을 생성하고 생성 된 사용자 정의 속성에 값을 할당 하여 위 예제를 기반 으로합니다.</target>
        </trans-unit>
        <trans-unit id="1f5b4e1a001fb8c24a908fedcbe942098e5b6033" translate="yes" xml:space="preserve">
          <source>The following example creates a compute cluster comprised of three hosts, making use of the &lt;a href=&quot;compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; resource. DPM will be disabled in the cluster as it is the default setting, but we override the setting of the first host referenced by the &lt;a href=&quot;../d/host&quot;&gt;&lt;code&gt;vsphere_host&lt;/code&gt;&lt;/a&gt; data source (&lt;code&gt;esxi1&lt;/code&gt;) by using the &lt;code&gt;vsphere_dpm_host_override&lt;/code&gt; resource so it will be powered off when the cluster does not need it to service virtual machines.</source>
          <target state="translated">다음 예는 &lt;a href=&quot;compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt; 리소스를 사용하여 3 개의 호스트로 구성된 컴퓨팅 클러스터를 만듭니다 . DPM은 기본 설정이므로 클러스터에서 비활성화되지만 &lt;code&gt;vsphere_dpm_host_override&lt;/code&gt; 리소스 를 사용하여 &lt;a href=&quot;../d/host&quot;&gt; &lt;code&gt;vsphere_host&lt;/code&gt; &lt;/a&gt; 데이터 소스 ( &lt;code&gt;esxi1&lt;/code&gt; ) 에서 참조하는 첫 번째 호스트의 설정을 무시 하므로 클러스터에 필요하지 않을 때 전원이 꺼집니다 가상 머신을 서비스합니다.</target>
        </trans-unit>
        <trans-unit id="745a1cfac498c15bfb6f56927cf4c3d00a3c58e4" translate="yes" xml:space="preserve">
          <source>The following example demonstrates using the NSX Terraform provider to create a logical switch and tier1 logical router. It then connects the logical switch to the tier1 logical router and uplinks the T1 router to a pre-created T0 router.</source>
          <target state="translated">다음 예는 NSX Terraform 제공자를 사용하여 논리적 스위치 및 tier1 논리적 라우터를 생성하는 방법을 보여줍니다. 그런 다음 논리적 스위치를 tier1 논리적 라우터에 연결하고 T1 라우터를 사전 작성된 T0 라우터로 업 링크합니다.</target>
        </trans-unit>
        <trans-unit id="31c9ea066a81c4891a0f8fa9c3605aee218ddb30" translate="yes" xml:space="preserve">
          <source>The following example locates a DVS that is named &lt;code&gt;terraform-test-dvs&lt;/code&gt;, in the datacenter &lt;code&gt;dc1&lt;/code&gt;. It then uses this DVS to set up a &lt;code&gt;vsphere_distributed_port_group&lt;/code&gt; resource that uses the first uplink as a primary uplink and the second uplink as a secondary.</source>
          <target state="translated">다음 예는 데이터 센터 &lt;code&gt;dc1&lt;/code&gt; 에서 &lt;code&gt;terraform-test-dvs&lt;/code&gt; 라는 DVS를 찾습니다 . 그런 다음이 DVS를 사용하여 첫 번째 업 링크를 기본 업 링크로 사용하고 두 번째 업 링크를 보조로 사용 하는 &lt;code&gt;vsphere_distributed_port_group&lt;/code&gt; 리소스 를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="92ab118d58d9a405f70d0668b12624fe3e556359" translate="yes" xml:space="preserve">
          <source>The following example makes use of the &lt;a href=&quot;../d/vmfs_disks&quot;&gt;&lt;code&gt;vsphere_vmfs_disks&lt;/code&gt;&lt;/a&gt; data source to auto-detect exported iSCSI LUNS matching a certain NAA vendor ID (in this case, LUNs exported from a &lt;a href=&quot;https://kb.netapp.com/support/s/article/ka31A0000000rLRQAY/how-to-match-a-lun-s-naa-number-to-its-serial-number?language=en_US&quot;&gt;NetApp&lt;/a&gt;). These discovered disks are then loaded into &lt;code&gt;vsphere_vmfs_datastore&lt;/code&gt;. The datastore is also placed in the &lt;code&gt;datastore-folder&lt;/code&gt; folder afterwards.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;../d/vmfs_disks&quot;&gt; &lt;code&gt;vsphere_vmfs_disks&lt;/code&gt; &lt;/a&gt; 데이터 소스를 사용 하여 특정 NAA 공급 업체 ID (이 경우 &lt;a href=&quot;https://kb.netapp.com/support/s/article/ka31A0000000rLRQAY/how-to-match-a-lun-s-naa-number-to-its-serial-number?language=en_US&quot;&gt;NetApp&lt;/a&gt; 에서 내 보낸 LUN)와 일치하는 내 보낸 iSCSI LUN을 자동 감지합니다 . 그런 다음 검색된 디스크가 &lt;code&gt;vsphere_vmfs_datastore&lt;/code&gt; 에 로드됩니다 . 데이터 스토어는 나중에 &lt;code&gt;datastore-folder&lt;/code&gt; 폴더에 배치됩니다 .</target>
        </trans-unit>
        <trans-unit id="0400ac0744a461124d7391eafa3c7ec1db5e1395" translate="yes" xml:space="preserve">
          <source>The following example retrieves a list of VPC Ids with a custom tag of &lt;code&gt;service&lt;/code&gt; set to a value of &quot;production&quot;.</source>
          <target state="translated">다음 예제는 사용자 정의 &lt;code&gt;service&lt;/code&gt; 태그 가 &quot;production&quot;값으로 설정된 VPC ID 목록을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="d09b3b93f9f39c3323a7174b74ca40f90e0a3a30" translate="yes" xml:space="preserve">
          <source>The following example retrieves a list of all network ACL ids in a VPC with a custom tag of &lt;code&gt;Tier&lt;/code&gt; set to a value of &quot;Private&quot;.</source>
          <target state="translated">다음 예는 &lt;code&gt;Tier&lt;/code&gt; 의 사용자 정의 태그 가 &quot;Private&quot;값으로 설정된 VPC의 모든 네트워크 ACL ID 목록을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="88c82b96f535873507c4a18724d93432f8ff1389" translate="yes" xml:space="preserve">
          <source>The following example retrieves a list of all subnets in a VPC with a custom tag of &lt;code&gt;Tier&lt;/code&gt; set to a value of &quot;Private&quot; so that the &lt;code&gt;aws_instance&lt;/code&gt; resource can loop through the subnets, putting instances across availability zones.</source>
          <target state="translated">다음 예 는 &lt;code&gt;aws_instance&lt;/code&gt; 리소스가 서브넷을 통해 루프하여 인스턴스를 가용 영역에 배치 할 수 있도록 &lt;code&gt;Tier&lt;/code&gt; 의 사용자 지정 태그 가 &quot;Private&quot;값으로 설정된 VPC의 모든 서브넷 목록을 검색 합니다.</target>
        </trans-unit>
        <trans-unit id="bebae7b326123b48b9967994d90fc286d5c0bce9" translate="yes" xml:space="preserve">
          <source>The following example retrieves a network ACL id in a VPC which associated with specific subnet.</source>
          <target state="translated">다음 예제는 특정 서브넷과 연결된 VPC에서 네트워크 ACL ID를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="7db0bf65eff49211b450a33e6ea47a87b6aef25b" translate="yes" xml:space="preserve">
          <source>The following example retrieves a text object (which must have a &lt;code&gt;Content-Type&lt;/code&gt; value starting with &lt;code&gt;text/&lt;/code&gt;) and uses it as the &lt;code&gt;user_data&lt;/code&gt; for an EC2 instance:</source>
          <target state="translated">다음 예제는 &lt;code&gt;text/&lt;/code&gt; 시작 하는 &lt;code&gt;Content-Type&lt;/code&gt; 값 이 있어야하는 텍스트 객체를 검색 하여 EC2 인스턴스 의 &lt;code&gt;user_data&lt;/code&gt; 로 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="d8d56cf2aa48057045468fcc73ddb9fe2ce6177f" translate="yes" xml:space="preserve">
          <source>The following example sets up a cluster and enables DRS and vSphere HA with the default settings. The hosts have to exist already in vSphere and should not already be members of clusters - it's best to add these as standalone hosts before adding them to a cluster.</source>
          <target state="translated">다음 예는 클러스터를 설정하고 기본 설정으로 DRS 및 vSphere HA를 활성화합니다. 호스트는 이미 vSphere에 존재해야하며 이미 클러스터의 구성원이 아니어야합니다. 클러스터에 추가하기 전에 독립형 호스트로 추가하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="00a8f0c1eceb76bf33353f4d5d7fdf9b5518067c" translate="yes" xml:space="preserve">
          <source>The following example sets up a datastore cluster and enables Storage DRS with the default settings. It then creates two NAS datastores using the &lt;a href=&quot;nas_datastore&quot;&gt;&lt;code&gt;vsphere_nas_datastore&lt;/code&gt; resource&lt;/a&gt; and assigns them to the datastore cluster.</source>
          <target state="translated">다음 예는 데이터 스토어 클러스터를 설정하고 기본 설정으로 Storage DRS를 활성화합니다. 그런 다음 &lt;a href=&quot;nas_datastore&quot;&gt; &lt;code&gt;vsphere_nas_datastore&lt;/code&gt; 리소스를&lt;/a&gt; 사용하여 두 개의 NAS 데이터 스토어를 생성 하고이를 데이터 스토어 클러스터에 할당합니다.</target>
        </trans-unit>
        <trans-unit id="83c05c0c746747fcea68d7708759640063b17693" translate="yes" xml:space="preserve">
          <source>The following example sets up a resource pool in a compute cluster which uses the default settings for CPU and memory reservations, shares, and limits. The compute cluster needs to already exist in vSphere.</source>
          <target state="translated">다음 예는 CPU 및 메모리 예약, 공유 및 제한에 대한 기본 설정을 사용하는 컴퓨팅 클러스터에서 리소스 풀을 설정합니다. 컴퓨팅 클러스터는 vSphere에 이미 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="dcab23a80c499895bc0ddc68fd97ec5d5b136179" translate="yes" xml:space="preserve">
          <source>The following example shows a connection between an Azure virtual network and an on-premises VPN device and network.</source>
          <target state="translated">다음 예제는 Azure 가상 네트워크와 온-프레미스 VPN 장치 및 네트워크 간의 연결을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="96a0dc415085307e0e2198a4bde677e565305be9" translate="yes" xml:space="preserve">
          <source>The following example shows a connection between two Azure virtual network in different locations/regions.</source>
          <target state="translated">다음 예제는 서로 다른 위치 / 지역에있는 두 Azure 가상 네트워크 간의 연결을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="829e58bb052569333abb98b36fa3b4184e22acc2" translate="yes" xml:space="preserve">
          <source>The following example shows how one might accept a Route Table id as a variable and use this data source to obtain the data necessary to create a route.</source>
          <target state="translated">다음 예는 경로 테이블 ID를 변수로 허용하고이 데이터 소스를 사용하여 경로를 작성하는 데 필요한 데이터를 얻는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d3c2d47e955581443c514c52f2b6be3c4f442c2d" translate="yes" xml:space="preserve">
          <source>The following example shows how one might accept a Security Group id as a variable and use this data source to obtain the data necessary to create a subnet.</source>
          <target state="translated">다음 예는 보안 그룹 ID를 변수로 허용하고이 데이터 소스를 사용하여 서브넷을 작성하는 데 필요한 데이터를 얻는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="709dbf9c30003f700b6b06781cc2bfa42fb95a8b" translate="yes" xml:space="preserve">
          <source>The following example shows how one might accept a VPC id as a variable and use this data source to obtain the data necessary to create a subnet within it.</source>
          <target state="translated">다음 예는 VPC id를 변수로 받아들이고이 데이터 소스를 사용하여 그 안에 서브넷을 만드는 데 필요한 데이터를 얻는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="353ae1799001a1830a3ee6a66713aa4924bec326" translate="yes" xml:space="preserve">
          <source>The following example shows how one might accept a public IP as a variable and use this data source to obtain the allocation ID.</source>
          <target state="translated">다음 예는 공개 IP를 변수로 허용하고이 데이터 소스를 사용하여 할당 ID를 얻는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3c080e2d2e6c4d9fe37cbe25f56ca6a0aec394b8" translate="yes" xml:space="preserve">
          <source>The following example shows how one might accept a subnet id as a variable and use this data source to obtain the data necessary to create a security group that allows connections from hosts in that subnet.</source>
          <target state="translated">다음 예는 서브넷 ID를 변수로 허용하고이 데이터 소스를 사용하여 해당 서브넷의 호스트에서 연결을 허용하는 보안 그룹을 작성하는 데 필요한 데이터를 얻는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="0e24ee60517e88f29e69fc2ddb26d541c633f3ee" translate="yes" xml:space="preserve">
          <source>The following example shows how one might use a CIDR value to find a network interface id and use this to create a data source of that network interface.</source>
          <target state="translated">다음 예는 CIDR 값을 사용하여 네트워크 인터페이스 ID를 찾고이를 사용하여 해당 네트워크 인터페이스의 데이터 소스를 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2e5dcfb529a112fcc10a822f64f63d3e391d8f2f" translate="yes" xml:space="preserve">
          <source>The following example shows how one might use this resource to produce a directory of configuration files to upload to a compute instance, using Amazon EC2 as a placeholder.</source>
          <target state="translated">다음 예는 Amazon EC2를 자리 표시 자로 사용하여이 리소스를 사용하여 컴퓨팅 인스턴스에 업로드 할 구성 파일 디렉토리를 생성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9d2b0f1fbe70deb518e37b6143e647cf94b8c1be" translate="yes" xml:space="preserve">
          <source>The following example shows how the resource might be used to obtain the metrics usage and limit of a given Circonus Account.</source>
          <target state="translated">다음 예는 리소스를 사용하여 지정된 서커스 계정의 메트릭스 사용량 및 제한을 얻는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3900a5d29c1eef7e58c467565b0079619b9497be" translate="yes" xml:space="preserve">
          <source>The following example shows how the resource might be used to obtain the name of the AWS region configured on the provider.</source>
          <target state="translated">다음 예제는 리소스를 사용하여 공급자에 구성된 AWS 리전의 이름을 얻는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c7d9416983d62caa86ecc9760de2ce13671044d0" translate="yes" xml:space="preserve">
          <source>The following example shows how the resource might be used to obtain the name of the Circonus Collector configured on the provider.</source>
          <target state="translated">다음 예는 리소스를 사용하여 공급자에 구성된 Circonus 수집기의 이름을 얻는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c8a02273b78e886b80e46cd7eb39579058213e6c" translate="yes" xml:space="preserve">
          <source>The following example shows how this data source might be used to derive VPC and subnet CIDR prefixes systematically for an availability zone.</source>
          <target state="translated">다음 예는이 데이터 소스를 사용하여 가용 영역에 대해 VPC 및 서브넷 CIDR 접두사를 체계적으로 도출하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8f5331af3608d69b79a7e4edb82840bfcbeeea3d" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an instance with multiple ephemeral disks:</source>
          <target state="translated">다음 예는 여러 개의 임시 디스크로 인스턴스를 생성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e2328a930004ce3407a36f1690cca16a315a826f" translate="yes" xml:space="preserve">
          <source>The following example shows how to generate a random priority between 1 and 99999 for a &lt;code&gt;aws_alb_listener_rule&lt;/code&gt; resource:</source>
          <target state="translated">다음 예제는 &lt;code&gt;aws_alb_listener_rule&lt;/code&gt; 자원에 대해 1에서 99999 사이의 임의 우선 순위를 생성하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="76c3b70a2dc8b16de9a53e0ed2afcfeee1a092a7" translate="yes" xml:space="preserve">
          <source>The following example shows how to generate a unique name for an AWS EC2 instance that changes each time a new AMI id is selected.</source>
          <target state="translated">다음 예제는 새 AMI ID를 선택할 때마다 변경되는 AWS EC2 인스턴스의 고유 이름을 생성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8d3642ff70777c65faed4e5ada18adf9bbdd55f4" translate="yes" xml:space="preserve">
          <source>The following example shows how to generate a unique pet name for an AWS EC2 instance that changes each time a new AMI id is selected.</source>
          <target state="translated">다음 예제는 새 AMI ID를 선택할 때마다 변경되는 AWS EC2 인스턴스에 대해 고유 한 애완 동물 이름을 생성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="91e7f1b3ff98d4e72e73a1ed723e3d47c2ab6fda" translate="yes" xml:space="preserve">
          <source>The following example shows how to get a Hosted Zone from its name and from this data how to create a Record Set.</source>
          <target state="translated">다음 예는 이름에서 호스팅 영역을 가져 오는 방법과이 데이터에서 레코드 세트를 만드는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="4e61c885432d54e1727453f0424b1a58b597639b" translate="yes" xml:space="preserve">
          <source>The following example shows how to obtain details of the security group rule and passing the data to the instance at launch.</source>
          <target state="translated">다음 예는 보안 그룹 규칙의 세부 정보를 얻고 시작시 인스턴스에 데이터를 전달하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="488991d8178d8a53c560aad32f61a0df231440a8" translate="yes" xml:space="preserve">
          <source>The following example shows some input/output boilerplate code for a data source implemented in bash:</source>
          <target state="translated">다음 예제는 bash로 구현 된 데이터 소스에 대한 일부 입력 / 출력 상용구 코드를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3ba01e1a153640113ef3a286648d10dfb6f9e882" translate="yes" xml:space="preserve">
          <source>The following example uses the default datacenter and default host to add a datastore with local disks to a single ESXi server.</source>
          <target state="translated">다음 예는 기본 데이터 센터 및 기본 호스트를 사용하여 로컬 디스크가있는 데이터 스토어를 단일 ESXi 서버에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="1bc8bf22e6bed6e0fa7e32c1fa72e38c0b230830" translate="yes" xml:space="preserve">
          <source>The following example would set up a NFS v3 share on 3 hosts connected through vCenter in the same datacenter - &lt;code&gt;esxi1&lt;/code&gt;, &lt;code&gt;esxi2&lt;/code&gt;, and &lt;code&gt;esxi3&lt;/code&gt;. The remote host is named &lt;code&gt;nfs&lt;/code&gt; and has &lt;code&gt;/export/terraform-test&lt;/code&gt; exported.</source>
          <target state="translated">다음 예는 동일한 데이터 센터 ( &lt;code&gt;esxi1&lt;/code&gt; , &lt;code&gt;esxi2&lt;/code&gt; 및 &lt;code&gt;esxi3&lt;/code&gt; ) 에서 vCenter를 통해 연결된 3 개의 호스트에 NFS v3 공유를 설정합니다 . 원격 호스트의 이름은 &lt;code&gt;nfs&lt;/code&gt; 이며 &lt;code&gt;/export/terraform-test&lt;/code&gt; 를 내보냈습니다.</target>
        </trans-unit>
        <trans-unit id="8a569d0b8a1b684db5dba0002c8239c25e34bb79" translate="yes" xml:space="preserve">
          <source>The following examples show the basic and advanced usage of the Docker Service resource assuming the host machine is already part of a Swarm.</source>
          <target state="translated">다음 예제는 호스트 시스템이 이미 Swarm에 속해 있다고 가정 한 Docker 서비스 리소스의 기본 및 고급 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7c39fa14ad7b86ef6f734e3497b65d5ba2434ded" translate="yes" xml:space="preserve">
          <source>The following extra optional arguments, all lists of Chef recipe names, allow custom Chef recipes to be applied to layer instances at the five different lifecycle events, if custom cookbooks are enabled on the layer's stack:</source>
          <target state="translated">다음 추가 선택적 인수 인 모든 Chef 레시피 이름 목록을 사용하면 사용자 정의 요리 책이 레이어 스택에서 활성화 된 경우 다섯 가지 라이프 사이클 이벤트에서 사용자 정의 Chef 레시피를 레이어 인스턴스에 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ffa094c26ea52f7fda156fbbcb8d7f883a9fde5" translate="yes" xml:space="preserve">
          <source>The following fields are also exported:</source>
          <target state="translated">다음 필드도 내보내집니다.</target>
        </trans-unit>
        <trans-unit id="0460261a958480f8f65a08202c431d257adfe278" translate="yes" xml:space="preserve">
          <source>The following fields are available in step adjustments:</source>
          <target state="translated">단계 조정에서 다음 필드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d96767d63448e883ce623fbce5a16ed36604d70a" translate="yes" xml:space="preserve">
          <source>The following fields are available in target tracking configuration:</source>
          <target state="translated">대상 추적 구성에서 다음 필드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9dbaa7304c7dbf56be47e877a43819e86507ebd1" translate="yes" xml:space="preserve">
          <source>The following is a list of the per-node &lt;code&gt;service&lt;/code&gt; attributes:</source>
          <target state="translated">다음은 노드 별 &lt;code&gt;service&lt;/code&gt; 속성 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="fd3714dfe1f85fd7f1363b92a092031a993c92f2" translate="yes" xml:space="preserve">
          <source>The following is a list of the per-node attributes contained within the &lt;code&gt;nodes&lt;/code&gt; map:</source>
          <target state="translated">다음은 &lt;code&gt;nodes&lt;/code&gt; 맵에 포함 된 노드 별 속성 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="598970bfa4dfae272bebc265b304b6076e4ea658" translate="yes" xml:space="preserve">
          <source>The following is a minimal example:</source>
          <target state="translated">다음은 최소한의 예입니다.</target>
        </trans-unit>
        <trans-unit id="add0b05f71e412adc140dd1c22bbcd49d6ec91be" translate="yes" xml:space="preserve">
          <source>The following is an example discovery document declaring support for version 1 of the module registry protocol:</source>
          <target state="translated">다음은 모듈 레지스트리 프로토콜 버전 1에 대한 지원을 선언하는 발견 문서의 예입니다.</target>
        </trans-unit>
        <trans-unit id="f7d54003cf8078e8c60b659921877da3c86a50a9" translate="yes" xml:space="preserve">
          <source>The following is an example of how to provision a service instance with the Oracle Traffic Director:</source>
          <target state="translated">다음은 Oracle Traffic Director로 서비스 인스턴스를 프로비저닝하는 방법의 예입니다.</target>
        </trans-unit>
        <trans-unit id="310d729e7392b136c72a87a2766f6f8e655cbf02" translate="yes" xml:space="preserve">
          <source>The following keys can be used to configure the provider.</source>
          <target state="translated">다음 키를 사용하여 공급자를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="501607c6486a4f8eef75f7388138d54edea1f9e3" translate="yes" xml:space="preserve">
          <source>The following options allow control over CPU and memory allocation on the virtual machine. Note that the resource pool that this VM is in may affect these options.</source>
          <target state="translated">다음 옵션을 사용하면 가상 머신의 CPU 및 메모리 할당을 제어 할 수 있습니다. 이 VM이있는 리소스 풀이이 옵션에 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4542bfdb6d3ac2430971f47a1e0a71c51b2c533" translate="yes" xml:space="preserve">
          <source>The following options allow the use of LACP for NIC teaming for ports that this policy applies to.</source>
          <target state="translated">다음 옵션을 사용하면이 정책이 적용되는 포트의 NIC 팀 구성에 LACP를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ddd20dc42e5d4eb7f8d0790fe95ed8b9cce9a41" translate="yes" xml:space="preserve">
          <source>The following options apply to all of (or several of) the initialization steps:</source>
          <target state="translated">다음 옵션은 모든 (또는 여러) 초기화 단계에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c68570f3fdd6d36b8d66f16d463d2b62aae2516f" translate="yes" xml:space="preserve">
          <source>The following options are general virtual machine and Terraform workflow options:</source>
          <target state="translated">다음 옵션은 일반 가상 머신 및 Terraform 워크 플로우 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="46b0bd78e14161c24bf772a4b37c2532ecde92d6" translate="yes" xml:space="preserve">
          <source>The following options are required:</source>
          <target state="translated">다음과 같은 옵션이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="45cc9553ba7860ef6517f8ab7fcf8071a0402618" translate="yes" xml:space="preserve">
          <source>The following options below control whether or not the policies set in the port group can be overridden on the individual port:</source>
          <target state="translated">아래의 다음 옵션은 포트 그룹에 설정된 정책을 개별 포트에서 재정의 할 수 있는지 여부를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="eea0449047d5750c19e239523e8b74d8f2b07075" translate="yes" xml:space="preserve">
          <source>The following options control CPU and memory settings on the virtual machine:</source>
          <target state="translated">다음 옵션은 가상 머신의 CPU 및 메모리 설정을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="e9b82e47d2fe4bcb4aed167bbd27c5724f35f203" translate="yes" xml:space="preserve">
          <source>The following options control HA policy for ports that this policy applies to:</source>
          <target state="translated">다음 옵션은이 정책이 적용되는 포트에 대한 HA 정책을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="295b9dc1dfb14a4421140b5fff4bacb989d26912" translate="yes" xml:space="preserve">
          <source>The following options control I/O load balancing for Storage DRS on the datastore cluster.</source>
          <target state="translated">다음 옵션은 데이터 스토어 클러스터에서 Storage DRS에 대한 I / O로드 밸런싱을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="dd2f500428b34eda555ed8f0721f38cca4734ed6" translate="yes" xml:space="preserve">
          <source>The following options control VMware tools options on the virtual machine:</source>
          <target state="translated">다음 옵션은 가상 머신에서 VMware 도구 옵션을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="9efea7064a40b4630d975ed23761b6b06cd27233" translate="yes" xml:space="preserve">
          <source>The following options control advanced operation of the virtual machine, or control various parts of Terraform workflow, and should not need to be modified during basic operation of the resource. Only change these options if they are explicitly required, or if you are having trouble with Terraform's default behavior.</source>
          <target state="translated">다음 옵션은 가상 머신의 고급 조작을 제어하거나 Terraform 워크 플로우의 다양한 부분을 제어하며 자원의 기본 조작 중에 수정하지 않아도됩니다. 이러한 옵션이 명시 적으로 필요하거나 Terraform의 기본 동작에 문제가있는 경우에만이 옵션을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="38978609d4819df8de653705edc83a71b3dbce91" translate="yes" xml:space="preserve">
          <source>The following options control advanced parts of Storage DRS that may not require changing during basic operation:</source>
          <target state="translated">다음 옵션은 기본 작업 중에 변경하지 않아도 될 수있는 Storage DRS의 고급 부분을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="0241e3b4d680d208d65caccfb703445b734b0a40" translate="yes" xml:space="preserve">
          <source>The following options control boot settings on the virtual machine:</source>
          <target state="translated">다음 옵션은 가상 머신의 부팅 설정을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="d5fa4ef8a2ab526cbc2eb3b9fec20b5ed3973e0c" translate="yes" xml:space="preserve">
          <source>The following options control disk space load balancing for Storage DRS on the datastore cluster.</source>
          <target state="translated">다음 옵션은 데이터 스토어 클러스터에서 Storage DRS에 대한 디스크 공간로드 밸런싱을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="a7aacb368181aef939420b4e53de02cfa53e6c40" translate="yes" xml:space="preserve">
          <source>The following options control security settings for the ports that this policy applies to:</source>
          <target state="translated">다음 옵션은이 정책이 적용되는 포트의 보안 설정을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="65811e700af2067fd83c90ada855602a76e72308" translate="yes" xml:space="preserve">
          <source>The following options control settings that you can use to configure Netflow on the DVS:</source>
          <target state="translated">다음 옵션은 DVS에서 Netflow를 구성하는 데 사용할 수있는 설정을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="cf30e4447e13d8f9fde2cff21160af7fe3d1c749" translate="yes" xml:space="preserve">
          <source>The following options control the VLAN behaviour of the port groups the port policy applies to. One one of these 3 options may be set:</source>
          <target state="translated">다음 옵션은 포트 정책이 적용되는 포트 그룹의 VLAN 동작을 제어합니다. 이 3 가지 옵션 중 하나를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b45914e1251b147669759d29e6ba7f0e1df8ddc3" translate="yes" xml:space="preserve">
          <source>The following options control the automation levels for Storage DRS on the datastore cluster.</source>
          <target state="translated">다음 옵션은 데이터 스토어 클러스터에서 Storage DRS의 자동화 수준을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="61820c9f80d8520401927042939994466e66480b" translate="yes" xml:space="preserve">
          <source>The following options control the settings for DRS on the cluster.</source>
          <target state="translated">다음 옵션은 클러스터에서 DRS 설정을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="49de4b4cd17de567fae7bfcebfa83ad860292196" translate="yes" xml:space="preserve">
          <source>The following options control traffic shaping settings for the ports that this policy applies to:</source>
          <target state="translated">다음 옵션은이 정책이 적용되는 포트의 트래픽 조절 설정을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="7787926de39975dfd8d7e14fc98784e71b160371" translate="yes" xml:space="preserve">
          <source>The following options relate to how network traffic is handled on this virtual switch. It also controls the NIC failover order. This subset of options is shared with the &lt;a href=&quot;host_port_group&quot;&gt;&lt;code&gt;vsphere_host_port_group&lt;/code&gt;&lt;/a&gt; resource, in which options can be omitted to ensure options are inherited from the switch configuration here.</source>
          <target state="translated">다음 옵션은이 가상 스위치에서 네트워크 트래픽이 처리되는 방식과 관련이 있습니다. 또한 NIC 장애 조치 순서를 제어합니다. 이 옵션 하위 집합은 &lt;a href=&quot;host_port_group&quot;&gt; &lt;code&gt;vsphere_host_port_group&lt;/code&gt; &lt;/a&gt; 리소스 와 공유되며 여기서 스위치 구성에서 옵션이 상속되도록 옵션을 생략 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7d3a57d660d4371599f4be0a94f236bae431c04" translate="yes" xml:space="preserve">
          <source>The following provides a very basic example of setting up an instance (provided by &lt;code&gt;instance&lt;/code&gt;) in the default security group, creating a security group (provided by &lt;code&gt;sg&lt;/code&gt;) and then attaching the security group to the instance's primary network interface via the &lt;code&gt;aws_network_interface_sg_attachment&lt;/code&gt; resource, named &lt;code&gt;sg_attachment&lt;/code&gt;:</source>
          <target state="translated">다음은 (가 제공하는 인스턴스를 설정하는 매우 기본적인 예를 제공하는 &lt;code&gt;instance&lt;/code&gt; , 기본 보안 그룹을 ()에서 제공하는 보안 그룹 만들기 &lt;code&gt;sg&lt;/code&gt; ) 다음을 통해 인스턴스의 기본 네트워크 인터페이스에 보안 그룹을 부착 &lt;code&gt;aws_network_interface_sg_attachment&lt;/code&gt; 라는 이름의 자원을 &lt;code&gt;sg_attachment&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="4ff3678e07550f15f4e466ddb75ba5a563c79672" translate="yes" xml:space="preserve">
          <source>The following settings are available for all Admission Control modes, but will infer different meanings in each mode.</source>
          <target state="translated">다음 설정은 모든 Admission Control 모드에서 사용할 수 있지만 각 모드에서 다른 의미를 유추합니다.</target>
        </trans-unit>
        <trans-unit id="cb5489a3ba45d7bff2589c78266c7ffa27e468d3" translate="yes" xml:space="preserve">
          <source>The following settings are supported for backward compatibility but are no longer recommended for use:</source>
          <target state="translated">다음 설정은 이전 버전과의 호환성을 위해 지원되지만 더 이상 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="33e0a112c8ef4eeb98802067b5a487be9ea21509" translate="yes" xml:space="preserve">
          <source>The following settings can be set in the CLI configuration file:</source>
          <target state="translated">CLI 구성 파일에서 다음 설정을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab2765312f5908c4da59093b11e8a9beac8da6c2" translate="yes" xml:space="preserve">
          <source>The following settings configure DNS globally, generally for Linux systems. For Windows systems, this is done per-interface, see &lt;a href=&quot;#network-interface-settings&quot;&gt;network interface settings&lt;/a&gt;.</source>
          <target state="translated">다음 설정은 일반적으로 Linux 시스템에 대해 DNS를 전체적으로 구성합니다. Windows 시스템의 경우 인터페이스별로 수행됩니다 ( &lt;a href=&quot;#network-interface-settings&quot;&gt;네트워크 인터페이스 설정&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="13208ce3ac11ed198e86afdaa2ed753ebea1f4ba" translate="yes" xml:space="preserve">
          <source>The following settings control Virtual Machine Component Protection (VMCP) in vSphere HA. VMCP gives vSphere HA the ability to monitor a host for datastore accessibility failures, and automate recovery for affected virtual machines.</source>
          <target state="translated">다음 설정은 vSphere HA에서 VMCP (Virtual Machine Component Protection)를 제어합니다. VMCP는 vSphere HA가 데이터 스토어 접근성 오류에 대해 호스트를 모니터링하고 영향을받는 가상 시스템의 복구를 자동화 할 수있는 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9f2aa9b63a0fab276d39ddefe1a5774a56bcfe15" translate="yes" xml:space="preserve">
          <source>The following settings control Virtual Machine Component Protection (VMCP) overrides.</source>
          <target state="translated">다음 설정은 VMCP (Virtual Machine Component Protection) 재정의를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="1bebd88b81986f4b1fcfd5ef31ef83f963a40145" translate="yes" xml:space="preserve">
          <source>The following settings control cluster membership or tune how hosts are managed within the cluster itself by Terraform.</source>
          <target state="translated">다음 설정은 클러스터 멤버쉽을 제어하거나 Terraform이 클러스터 자체에서 호스트를 관리하는 방법을 조정합니다.</target>
        </trans-unit>
        <trans-unit id="07ceece75e9c5b915007b13c820b5ecde053e412" translate="yes" xml:space="preserve">
          <source>The following settings control specific settings for Admission Control when &lt;code&gt;failoverHosts&lt;/code&gt; is selected in &lt;a href=&quot;#ha_admission_control_policy&quot;&gt;&lt;code&gt;ha_admission_control_policy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 설정 은 &lt;a href=&quot;#ha_admission_control_policy&quot;&gt; &lt;code&gt;ha_admission_control_policy&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;failoverHosts&lt;/code&gt; 가 선택된 경우 승인 제어에 대한 특정 설정을 제어 합니다.</target>
        </trans-unit>
        <trans-unit id="231d1659ef673ba96187af60709b0a78cf12ed5c" translate="yes" xml:space="preserve">
          <source>The following settings control specific settings for Admission Control when &lt;code&gt;resourcePercentage&lt;/code&gt; is selected in &lt;a href=&quot;#ha_admission_control_policy&quot;&gt;&lt;code&gt;ha_admission_control_policy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 설정 은 &lt;a href=&quot;#ha_admission_control_policy&quot;&gt; &lt;code&gt;ha_admission_control_policy&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;resourcePercentage&lt;/code&gt; 가 선택된 경우 승인 제어에 대한 특정 설정을 제어 합니다.</target>
        </trans-unit>
        <trans-unit id="1d0fbc05c3d95b7b66312c970b2583fdf2b4e557" translate="yes" xml:space="preserve">
          <source>The following settings control specific settings for Admission Control when &lt;code&gt;slotPolicy&lt;/code&gt; is selected in &lt;a href=&quot;#ha_admission_control_policy&quot;&gt;&lt;code&gt;ha_admission_control_policy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때 다음 설정은 허용 제어에 대한 특정 설정을 제어 &lt;code&gt;slotPolicy&lt;/code&gt; 이 선택되어 &lt;a href=&quot;#ha_admission_control_policy&quot;&gt; &lt;code&gt;ha_admission_control_policy&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8b48691e1368b39a78d58349193d5d0db95ac80f" translate="yes" xml:space="preserve">
          <source>The following settings control the &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.avail.doc/GUID-5432CA24-14F1-44E3-87FB-61D937831CF6.html&quot;&gt;vSphere HA&lt;/a&gt; settings for the cluster.</source>
          <target state="translated">다음 설정 은 클러스터 의 &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.avail.doc/GUID-5432CA24-14F1-44E3-87FB-61D937831CF6.html&quot;&gt;vSphere HA&lt;/a&gt; 설정을 제어 합니다.</target>
        </trans-unit>
        <trans-unit id="120170a1501f79df9022bb8f9a55148704a54f49" translate="yes" xml:space="preserve">
          <source>The following settings control the &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.resmgmt.doc/GUID-5E5E349A-4644-4C9C-B434-1C0243EBDC80.html#GUID-5E5E349A-4644-4C9C-B434-1C0243EBDC80&quot;&gt;Distributed Power Management&lt;/a&gt; (DPM) settings for the cluster. DPM allows the cluster to manage host capacity on-demand depending on the needs of the cluster, powering on hosts when capacity is needed, and placing hosts in standby when there is excess capacity in the cluster.</source>
          <target state="translated">다음 설정 은 클러스터의 DPM ( &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.resmgmt.doc/GUID-5E5E349A-4644-4C9C-B434-1C0243EBDC80.html#GUID-5E5E349A-4644-4C9C-B434-1C0243EBDC80&quot;&gt;Distributed Power Management&lt;/a&gt; ) 설정을 제어 합니다. DPM을 사용하면 클러스터 요구에 따라 클러스터가 필요에 따라 호스트 용량을 관리하고, 용량이 필요할 때 호스트 전원을 켜고, 클러스터에 용량이 초과하면 호스트를 대기 상태로 둘 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c145fa4302984a752a4b25af6030eb0b8f5e7ea3" translate="yes" xml:space="preserve">
          <source>The following settings control vSphere HA Admission Control, which controls whether or not specific VM operations are permitted in the cluster in order to protect the reliability of the cluster. Based on the constraints defined in these settings, operations such as power on or migration operations may be blocked to ensure that enough capacity remains to react to host failures.</source>
          <target state="translated">다음 설정은 클러스터의 안정성을 보호하기 위해 클러스터에서 특정 VM 작업을 허용할지 여부를 제어하는 ​​vSphere HA Admission Control을 제어합니다. 이러한 설정에 정의 된 제약 조건에 따라 전원 켜기 또는 마이그레이션 작업과 같은 작업이 차단되어 호스트 장애에 대응하기에 충분한 용량이 남아있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a08373b7cda3d01ef0abb9e11a4d2ef33c285d4d" translate="yes" xml:space="preserve">
          <source>The following settings control virtual machine and application monitoring overrides.</source>
          <target state="translated">다음 설정은 가상 머신 및 애플리케이션 모니터링 재정의를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="171a6984fd9b1bc50cb3290b98356e6aec5a84b3" translate="yes" xml:space="preserve">
          <source>The following settings illustrate the options that can be set to work with virtual machine and application monitoring on vSphere HA.</source>
          <target state="translated">다음 설정은 vSphere HA에서 가상 시스템 및 애플리케이션 모니터링과 함께 작동하도록 설정할 수있는 옵션을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="859e2ab66bcdf43f27bd9ad90ed9e45a97783ae5" translate="yes" xml:space="preserve">
          <source>The following settings pertain to &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.avail.doc/GUID-3E3B18CC-8574-46FA-9170-CF549B8E55B8.html&quot;&gt;Proactive HA&lt;/a&gt;, an advanced feature of vSphere HA that allows the cluster to get data from external providers and make decisions based on the data reported.</source>
          <target state="translated">다음 설정은 클러스터가 외부 공급자로부터 데이터를 가져오고보고 된 데이터를 기반으로 의사 결정을 할 수 있도록하는 vSphere HA의 고급 기능인 &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.avail.doc/GUID-3E3B18CC-8574-46FA-9170-CF549B8E55B8.html&quot;&gt;Proactive HA&lt;/a&gt; 와 관련 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d870f66d447667b9332d57741681a119aa651b42" translate="yes" xml:space="preserve">
          <source>The following settings should be in a &lt;code&gt;network_interface&lt;/code&gt; block in the &lt;code&gt;customize&lt;/code&gt; sub-resource. These settings configure network interfaces on a per-interface basis and are matched up to &lt;code&gt;network_interface&lt;/code&gt; sub-resources in the main block in the order they are declared.</source>
          <target state="translated">다음 설정은 &lt;code&gt;customize&lt;/code&gt; 하위 자원 의 &lt;code&gt;network_interface&lt;/code&gt; 블록에 있어야 합니다. 이 설정은 인터페이스별로 네트워크 인터페이스를 구성 하며 선언 된 순서대로 기본 블록의 &lt;code&gt;network_interface&lt;/code&gt; 하위 리소스 와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="a0add236be1f16b6a2501427d3de63c0049a4a79" translate="yes" xml:space="preserve">
          <source>The following settings work nearly in the same fashion as their counterparts in the &lt;a href=&quot;compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; resource, with the exception that some options also allow settings that denote the use of cluster defaults. See the individual settings below for more details.</source>
          <target state="translated">다음 설정은 &lt;a href=&quot;compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt; 리소스의 해당 항목과 거의 같은 방식으로 작동 하지만 일부 옵션에서는 클러스터 기본값 사용을 나타내는 설정도 허용됩니다. 자세한 내용은 아래의 개별 설정을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9f1887d90f8cfaf275093f3f912b2c8dbed382bc" translate="yes" xml:space="preserve">
          <source>The following shows outputing all VPC Ids.</source>
          <target state="translated">다음은 모든 VPC ID 출력을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="34748ed0e8604a3f15e7d7257154f8be7db75b28" translate="yes" xml:space="preserve">
          <source>The following shows outputing all cidr blocks for every subnet id in a vpc.</source>
          <target state="translated">다음은 vpc의 모든 서브넷 ID에 대한 모든 cidr 블록 출력을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="76fa97859806570b78354aec1cf45d488f474884" translate="yes" xml:space="preserve">
          <source>The following shows outputing all network ACL ids in a vpc.</source>
          <target state="translated">다음은 vpc의 모든 네트워크 ACL ID 출력을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="076148724e534a3ee61afa96643d43851f8ae6ae" translate="yes" xml:space="preserve">
          <source>The following table will help you determine what value you need to enter for the managed object type you want the attribute to apply to.</source>
          <target state="translated">다음 표는 속성을 적용하려는 관리 객체 유형에 입력해야하는 값을 결정하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="72cd9838fe837abd92a4ed95eb0b5eec2ae87269" translate="yes" xml:space="preserve">
          <source>The following table will help you determine what values you need to enter for the associable type you want to associate with a tag category.</source>
          <target state="translated">다음 표는 태그 카테고리와 연관시킬 연관 가능 유형에 입력해야하는 값을 판별하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="653d6a96e01e52736ac6ac4896e32deef5c5fe92" translate="yes" xml:space="preserve">
          <source>The following, more-complex example retrieves only the metadata for a zip file stored in S3, which is then used to pass the most recent &lt;code&gt;version_id&lt;/code&gt; to AWS Lambda for use as a function implementation. More information about Lambda functions is available in the documentation for &lt;a href=&quot;../r/lambda_function&quot;&gt;&lt;code&gt;aws_lambda_function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음의보다 복잡한 예제는 S3에 저장된 zip 파일의 메타 데이터 만 검색 한 다음 함수 구현으로 사용하기 위해 최신 버전 &lt;code&gt;version_id&lt;/code&gt; 를 AWS Lambda 로 전달하는 데 사용됩니다. Lambda 함수에 대한 자세한 내용은 &lt;a href=&quot;../r/lambda_function&quot;&gt; &lt;code&gt;aws_lambda_function&lt;/code&gt; &lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="303c4546fca74dbb51250e6b1d995d00f1a47e75" translate="yes" xml:space="preserve">
          <source>The format of the configuration files are able to be in two formats: Terraform format and JSON. The Terraform format is more human-readable, supports comments, and is the generally recommended format for most Terraform files. The JSON format is meant for machines to create, modify, and update, but can also be done by Terraform operators if you prefer. Terraform format ends in &lt;code&gt;.tf&lt;/code&gt; and JSON format ends in &lt;code&gt;.tf.json&lt;/code&gt;.</source>
          <target state="translated">구성 파일의 형식은 Terraform 형식과 JSON의 두 가지 형식 일 수 있습니다. Terraform 형식은 사람이 읽을 수 있고 주석을 지원하며 대부분의 Terraform 파일에 일반적으로 권장되는 형식입니다. JSON 형식은 컴퓨터에서 생성, 수정 및 업데이트를위한 것이지만 원하는 경우 Terraform 운영자가 수행 할 수도 있습니다. Terraform 형식은 &lt;code&gt;.tf&lt;/code&gt; 로 끝나고 JSON 형식은 &lt;code&gt;.tf.json&lt;/code&gt; 으로 끝납니다 .</target>
        </trans-unit>
        <trans-unit id="434eff6d1efe64f915acb86ecf57cd65d5810815" translate="yes" xml:space="preserve">
          <source>The full list of settings that can be specified are listed on the &lt;a href=&quot;../provisioners/connection&quot;&gt;provisioner connection page&lt;/a&gt;.</source>
          <target state="translated">지정할 수있는 전체 설정 목록은 &lt;a href=&quot;../provisioners/connection&quot;&gt;provisioner connection 페이지&lt;/a&gt; 에 나열되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="530f43d060374c069c2e229a896d209bd69f057a" translate="yes" xml:space="preserve">
          <source>The full syntax is:</source>
          <target state="translated">전체 구문은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c13beb9d6bfe9e71465e1275bbd12c9fa6841eed" translate="yes" xml:space="preserve">
          <source>The given URL may be either an &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;https&lt;/code&gt; URL. At present this resource can only retrieve data from URLs that respond with &lt;code&gt;text/*&lt;/code&gt; or &lt;code&gt;application/json&lt;/code&gt; content types, and expects the result to be UTF-8 encoded regardless of the returned content type header.</source>
          <target state="translated">제공된 URL은 &lt;code&gt;http&lt;/code&gt; 또는 &lt;code&gt;https&lt;/code&gt; URL 일 수 있습니다 . 현재이 자원은 &lt;code&gt;text/*&lt;/code&gt; 또는 &lt;code&gt;application/json&lt;/code&gt; 컨텐츠 유형으로 응답하는 URL에서만 데이터를 검색 할 수 있으며 리턴 된 컨텐츠 유형 헤더에 관계없이 결과가 UTF-8로 인코딩 될 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="654fc45f0fee3249785e7513017238b34a6ebf47" translate="yes" xml:space="preserve">
          <source>The graph is outputted in DOT format. The typical program that can read this format is GraphViz, but many web services are also available to read this format.</source>
          <target state="translated">그래프는 DOT 형식으로 출력됩니다. 이 형식을 읽을 수있는 일반적인 프로그램은 GraphViz이지만이 형식을 읽을 수있는 많은 웹 서비스도 있습니다.</target>
        </trans-unit>
        <trans-unit id="35ce7fe0cfdd8a09787b6bca996be15896e6f24d" translate="yes" xml:space="preserve">
          <source>The guide also expects you to run the cluster on a cloud provider where Kubernetes can automatically provision a load balancer.</source>
          <target state="translated">이 가이드는 또한 Kubernetes가 자동으로로드 밸런서를 프로비저닝 할 수있는 클라우드 공급자에서 클러스터를 실행할 것을 기대합니다.</target>
        </trans-unit>
        <trans-unit id="f74fef07b1c46810962ec81b7de07761487446c8" translate="yes" xml:space="preserve">
          <source>The hostname portion of a module source string is first passed to &lt;a href=&quot;../internals/remote-service-discovery&quot;&gt;the service discovery protocol&lt;/a&gt; to determine if the given host has a module registry and, if so, the base URL for its module registry endpoints.</source>
          <target state="translated">모듈 소스 문자열의 호스트 이름 부분은 먼저 지정된 호스트에 모듈 레지스트리가 있는지 여부와 모듈 레지스트리 엔드 포인트의 기본 URL이 있는지 판별 하기 &lt;a href=&quot;../internals/remote-service-discovery&quot;&gt;위해 서비스 발견 프로토콜&lt;/a&gt; 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="8e86a11053317275a21a2144cd25ed7bd9fb8174" translate="yes" xml:space="preserve">
          <source>The ignition provider is what we call a &lt;em&gt;logical provider&lt;/em&gt; and doesn't manage any &lt;em&gt;physical&lt;/em&gt; resources. It generates configurations files to be used by other resources.</source>
          <target state="translated">점화 제공자는 우리가 &lt;em&gt;논리 제공자&lt;/em&gt; 라고하며 &lt;em&gt;물리적&lt;/em&gt; 자원을 관리하지 않습니다 . 다른 자원이 사용할 구성 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ddd2a3f257f06a28ff04be723f54a88aab54caf4" translate="yes" xml:space="preserve">
          <source>The images data source can be used to search for and return an existing image which can then be used to provision a server.</source>
          <target state="translated">이미지 데이터 소스를 사용하여 기존 이미지를 검색하고 반환 한 다음 서버를 프로비저닝하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="249903da71fd048e126f3d952731c7863e81b41d" translate="yes" xml:space="preserve">
          <source>The important thing about workspace internals is that workspaces are meant to be a shared resource. They aren't a private, local-only notion (unless you're using purely local state and not committing it).</source>
          <target state="translated">작업 공간 내부에서 중요한 것은 작업 공간이 공유 리소스라는 것입니다. 그것들은 개인적인 로컬 전용 개념이 아닙니다 (순전히 로컬 상태를 사용하고 커밋하지 않는 한).</target>
        </trans-unit>
        <trans-unit id="9dd21c2b4565da645e14fee70e3a12586042f54b" translate="yes" xml:space="preserve">
          <source>The instance can be imported as such:</source>
          <target state="translated">다음과 같이 인스턴스를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a6e1a62963235307c6be5b2cda78b57ef84df40" translate="yes" xml:space="preserve">
          <source>The integration with the Lambda function is not functional yet because API Gateway does not have the necessary access to invoke the function. The next step will address this, making the application fully-functional.</source>
          <target state="translated">API Gateway에 함수를 호출하는 데 필요한 액세스 권한이 없기 때문에 Lambda 함수와의 통합은 아직 작동하지 않습니다. 다음 단계에서는이 문제를 해결하여 응용 프로그램을 완벽하게 작동시킵니다.</target>
        </trans-unit>
        <trans-unit id="2857b86c54298ed0d7c5f6c43937af65d2281cb8" translate="yes" xml:space="preserve">
          <source>The interface you must implement for providers is &lt;a href=&quot;https://github.com/hashicorp/terraform/blob/master/terraform/resource_provider.go&quot;&gt;ResourceProvider&lt;/a&gt;.</source>
          <target state="translated">제공자에 대해 구현해야하는 인터페이스는 &lt;a href=&quot;https://github.com/hashicorp/terraform/blob/master/terraform/resource_provider.go&quot;&gt;ResourceProvider&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e062709bf2f7ff90508038b1cd0418cd1c2e2e62" translate="yes" xml:space="preserve">
          <source>The interpolation syntax is powerful and allows you to reference variables, attributes of resources, call functions, etc.</source>
          <target state="translated">보간 구문은 강력하며 변수, 자원 속성, 호출 함수 등을 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="43ef2e8f06e2bc2686a7c9bb10886e1158340b86" translate="yes" xml:space="preserve">
          <source>The issue is addressed in a pull request or commit. The issue will be referenced in the commit message so that the code that fixes it is clearly linked.</source>
          <target state="translated">이 문제는 풀 요청 또는 커밋에서 해결됩니다. 문제를 해결하는 코드가 명확하게 연결되도록 커밋 메시지에서 문제가 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="49c30deae622330a741396530fe7d3a02ba6e2c6" translate="yes" xml:space="preserve">
          <source>The issue is closed. Sometimes, valid issues will be closed to keep the issue tracker clean. The issue is still indexed and available for future viewers, or can be re-opened if necessary.</source>
          <target state="translated">문제가 종결되었습니다. 경우에 따라 문제 추적기를 깨끗하게 유지하기 위해 유효한 문제가 종료 될 수 있습니다. 이 문제는 여전히 인덱싱되어 향후 시청자에게 제공되며 필요한 경우 다시 열 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="738e7a7b3c7b6e67d65c014bd5397bfeac5e9ac6" translate="yes" xml:space="preserve">
          <source>The issue is reported.</source>
          <target state="translated">문제가보고되었습니다.</target>
        </trans-unit>
        <trans-unit id="3214f0eb498294eaff27ad7068ca7001219f7d4f" translate="yes" xml:space="preserve">
          <source>The issue is verified and categorized by a Terraform collaborator. Categorization is done via GitHub labels. We generally use a two-label system of (1) issue/PR type, and (2) section of the codebase. Type is usually &quot;bug&quot;, &quot;enhancement&quot;, &quot;documentation&quot;, or &quot;question&quot;, and section can be any of the providers or provisioners or &quot;core&quot;.</source>
          <target state="translated">이 문제는 Terraform 공동 작업자가 확인하고 분류합니다. 분류는 GitHub 레이블을 통해 수행됩니다. 우리는 일반적으로 (1) 이슈 / PR 유형과 (2) 코드베이스 섹션의 두 가지 레이블 시스템을 사용합니다. 유형은 일반적으로 &quot;bug&quot;, &quot;enhancement&quot;, &quot;documentation&quot;또는 &quot;question&quot;이며 섹션은 제공자 또는 제공 업체 또는 &quot;핵심&quot;이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a233c42ed98cf216e5673a77c10fc4b0f8927077" translate="yes" xml:space="preserve">
          <source>The job resource allows Rundeck jobs to be managed by Terraform. In Rundeck a job is a particular named set of steps that can be executed against one or more of the nodes configured for its associated project.</source>
          <target state="translated">작업 리소스를 통해 Rundeck 작업을 Terraform에서 관리 할 수 ​​있습니다. Rundeck에서 작업은 연관된 프로젝트에 대해 구성된 하나 이상의 노드에 대해 실행될 수있는 특정 명명 된 단계 세트입니다.</target>
        </trans-unit>
        <trans-unit id="c42f74afe9ce6581b7c27227ea43d5f46d97caae" translate="yes" xml:space="preserve">
          <source>The key material is hashed before it is stored in the state file, so sharing the resulting state will not disclose the private key contents.</source>
          <target state="translated">키 자료는 상태 파일에 저장되기 전에 해시되므로 결과 상태를 공유하면 개인 키 내용이 공개되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="50a776c074781f7b637d6d51d48c2bdddd1d2ecc" translate="yes" xml:space="preserve">
          <source>The key material is included inline as a string, which is consistent with the way a public key is provided to the &lt;code&gt;aws_key_pair&lt;/code&gt;, &lt;code&gt;cloudstack_ssh_keypair&lt;/code&gt;, &lt;code&gt;digitalocean_ssh_key&lt;/code&gt; and &lt;code&gt;openstack_compute_keypair_v2&lt;/code&gt; resources. This means the &lt;code&gt;key_material&lt;/code&gt; argument can be populated from the interpolation of the &lt;code&gt;public_key&lt;/code&gt; attribute of such a keypair resource, or vice-versa.</source>
          <target state="translated">주요 재료는 공개 키가 제공되는 방식과 일치하는 문자열, 인라인 포함되어 &lt;code&gt;aws_key_pair&lt;/code&gt; , &lt;code&gt;cloudstack_ssh_keypair&lt;/code&gt; , &lt;code&gt;digitalocean_ssh_key&lt;/code&gt; 및 &lt;code&gt;openstack_compute_keypair_v2&lt;/code&gt; 자원을. 이는 키 쌍 리소스 의 &lt;code&gt;public_key&lt;/code&gt; 속성 보간에서 &lt;code&gt;key_material&lt;/code&gt; 인수를 채울 수 있으며 그 반대도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="0251621ae3a738396f6951e6412ebbece005e3b6" translate="yes" xml:space="preserve">
          <source>The key part of this message is the first two lines that involve &lt;code&gt;hashicorp/terraform&lt;/code&gt;. In this example:</source>
          <target state="translated">이 메시지의 핵심 부분은 &lt;code&gt;hashicorp/terraform&lt;/code&gt; 과 관련된 처음 두 줄입니다 . 이 예에서 :</target>
        </trans-unit>
        <trans-unit id="8975679ccedb2c52f1ea4fd1eea80454ab51e06a" translate="yes" xml:space="preserve">
          <source>The layout now looks like this:</source>
          <target state="translated">레이아웃은 이제 다음과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="3ecc51adf7310b745e2c403498ea5da851f18073" translate="yes" xml:space="preserve">
          <source>The lifecycle_rule expiration object supports the following:</source>
          <target state="translated">lifecycle_rule 만기 오브젝트는 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="529d7fae35f00954ada89a255888b2cd1aad1f93" translate="yes" xml:space="preserve">
          <source>The lifecycle_rule object supports the following:</source>
          <target state="translated">lifecycle_rule 객체는 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="02aaf89638cf6541d6514128cb6ed7f2db5710a6" translate="yes" xml:space="preserve">
          <source>The list below contains all the requirements for publishing a module. Meeting the requirements for publishing a module is extremely easy. The list may appear long only to ensure we're detailed, but adhering to the requirements should happen naturally.</source>
          <target state="translated">아래 목록에는 모듈 게시에 필요한 모든 요구 사항이 포함되어 있습니다. 모듈 게시 요구 사항을 충족하는 것은 매우 쉽습니다. 목록은 우리가 자세히 설명하기 위해 오래 보일 수 있지만 요구 사항을 준수하는 것은 자연스럽게 이루어져야합니다.</target>
        </trans-unit>
        <trans-unit id="5fd50c9898aa530791c401d5419be0343ea7c036" translate="yes" xml:space="preserve">
          <source>The list of strings supported for &lt;code&gt;logging&lt;/code&gt; are as follows:</source>
          <target state="translated">&lt;code&gt;logging&lt;/code&gt; 에 지원되는 문자열 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dec2ced318aadb7436da9eea643801dd6ed1b49e" translate="yes" xml:space="preserve">
          <source>The listener mapping supports the following:</source>
          <target state="translated">리스너 매핑은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="1923dca1a9b8d52edf080f0543dd9d807dd6dbcb" translate="yes" xml:space="preserve">
          <source>The local backend stores state on the local filesystem, locks that state using system APIs, and performs operations locally.</source>
          <target state="translated">로컬 백엔드는 로컬 파일 시스템에 상태를 저장하고 시스템 API를 사용하여 해당 상태를 잠그고 로컬로 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="e0144994733e338a4121a54021ec355e0f53aeeb" translate="yes" xml:space="preserve">
          <source>The locations data source can be used to search for and return an existing location which can then be used elsewhere in the configuration.</source>
          <target state="translated">위치 데이터 소스를 사용하여 기존 위치를 검색하고 반환하여 구성의 다른 곳에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f78703858fb8c51a1216fb83d0b02ed063bcaa0" translate="yes" xml:space="preserve">
          <source>The log store is a unit in Log Service to collect, store, and query the log data. Each log store belongs to a project, and each project can create multiple Logstores. &lt;a href=&quot;https://www.alibabacloud.com/help/doc-detail/48874.htm&quot;&gt;Refer to details&lt;/a&gt;</source>
          <target state="translated">로그 저장소는 로그 데이터를 수집, 저장 및 쿼리하기위한 로그 서비스의 단위입니다. 각 로그 저장소는 프로젝트에 속하며 각 프로젝트는 여러 로그 저장소를 작성할 수 있습니다. &lt;a href=&quot;https://www.alibabacloud.com/help/doc-detail/48874.htm&quot;&gt;세부 사항 참조&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="129bc1bbb8a41edc7745c57d8f96be2546bbc279" translate="yes" xml:space="preserve">
          <source>The logging object supports the following:</source>
          <target state="translated">로깅 오브젝트는 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="2ed398cc031022323ce58df7fdbb2b3c7c103dd7" translate="yes" xml:space="preserve">
          <source>The main object in any Kubernetes application is &lt;a href=&quot;https://kubernetes.io/docs/concepts/workloads/pods/pod/#what-is-a-pod&quot;&gt;a Pod&lt;/a&gt;. Pod consists of one or more containers that are placed on cluster nodes based on CPU or memory availability.</source>
          <target state="translated">Kubernetes 응용 프로그램의 주요 개체 &lt;a href=&quot;https://kubernetes.io/docs/concepts/workloads/pods/pod/#what-is-a-pod&quot;&gt;는 포드&lt;/a&gt; 입니다. 포드는 CPU 또는 메모리 가용성에 따라 클러스터 노드에 배치 된 하나 이상의 컨테이너로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="3446535f7b6b081885a7b6c2a76fe579e177ba4a" translate="yes" xml:space="preserve">
          <source>The majority of acceptance tests will only invoke &lt;code&gt;resource.Test()&lt;/code&gt; and exit. If at any point this method encounters an error, either in executing the provided Terraform configurations or subsequent developer defined checks, &lt;code&gt;Test()&lt;/code&gt; will invoke the &lt;code&gt;t.Error&lt;/code&gt; method of Go&amp;rsquo;s standard testing framework and the test will fail. A failed test will not halt or otherwise interrupt any other tests currently running.</source>
          <target state="translated">수락 테스트의 대부분은 &lt;code&gt;resource.Test()&lt;/code&gt; 만 호출 하고 종료됩니다. 제공된 Terraform 구성 또는 후속 개발자 정의 검사를 실행할 때이 메소드에 오류가 발생하면 &lt;code&gt;Test()&lt;/code&gt; 는 Go의 표준 테스트 프레임 워크의 &lt;code&gt;t.Error&lt;/code&gt; 메소드를 호출 하고 테스트는 실패합니다. 실패한 테스트는 현재 실행중인 다른 테스트를 중단하거나 중단하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1b2e0c22eab85ee257fb35f5de1e9c98185f7a18" translate="yes" xml:space="preserve">
          <source>The market (purchasing) option for the instances.</source>
          <target state="translated">인스턴스에 대한 시장 (구매) 옵션.</target>
        </trans-unit>
        <trans-unit id="7579373102a294cf7bbf46fb86c90598638832e8" translate="yes" xml:space="preserve">
          <source>The modules are downloaded into a local &lt;code&gt;.terraform&lt;/code&gt; folder. This folder should not be committed to version control. The &lt;code&gt;.terraform&lt;/code&gt; folder is created relative to your current working directory regardless of the &lt;code&gt;dir&lt;/code&gt; argument given to this command.</source>
          <target state="translated">모듈은 로컬 &lt;code&gt;.terraform&lt;/code&gt; 폴더 로 다운로드됩니다 . 이 폴더는 버전 관리를 위해 커밋되어서는 안됩니다. &lt;code&gt;.terraform&lt;/code&gt; 의 폴더에 관계없이 당신의 현재 작업 디렉토리를 기준으로 작성됩니다 &lt;code&gt;dir&lt;/code&gt; 이 명령에 지정된 인수.</target>
        </trans-unit>
        <trans-unit id="94c15d469c680f19a5562e9f2179f5df808f12a7" translate="yes" xml:space="preserve">
          <source>The modules in The Terraform Registry are provided and maintained by trusted HashiCorp partners and the Terraform Community. If you run into issues using a module or have additional contributions to make, you can find a link to the Module's GitHub issues on the module page.</source>
          <target state="translated">Terraform Registry의 모듈은 신뢰할 수있는 HashiCorp 파트너 및 Terraform 커뮤니티에서 제공하고 유지 관리합니다. 모듈을 사용하여 문제가 발생하거나 추가로 기여할 경우 모듈 페이지에서 모듈의 GitHub 문제에 대한 링크를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17b09953747e143d19e75493eb8c46bfe264b707" translate="yes" xml:space="preserve">
          <source>The most common use of this datasource will be to fetch information about the instances inside regional managed instance groups, for instance:</source>
          <target state="translated">이 데이터 소스의 가장 일반적인 용도는 다음과 같이 지역 관리 형 인스턴스 그룹 내의 인스턴스에 대한 정보를 가져 오는 것입니다.</target>
        </trans-unit>
        <trans-unit id="28f448289fb00b97fc7a26fc8e30f206926bd7f9" translate="yes" xml:space="preserve">
          <source>The most important thing you'll configure with Terraform are resources. Resources are a component of your infrastructure. It might be some low level component such as a physical server, virtual machine, or container. Or it can be a higher level component such as an email provider, DNS record, or database provider.</source>
          <target state="translated">Terraform으로 구성 할 가장 중요한 것은 리소스입니다. 리소스는 인프라의 구성 요소입니다. 실제 서버, 가상 머신 또는 컨테이너와 같은 일부 하위 레벨 구성 요소 일 수 있습니다. 또는 전자 메일 공급자, DNS 레코드 또는 데이터베이스 공급자와 같은 상위 수준 구성 요소 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de4e48002ee0066f3714936d49635283b6a0744d" translate="yes" xml:space="preserve">
          <source>The most interesting part of a crash log is the panic message itself and the backtrace immediately following. So the first thing to do is to search the file for &lt;code&gt;panic:&lt;/code&gt;, which should jump you right to this message. It will look something like this:</source>
          <target state="translated">충돌 로그의 가장 흥미로운 부분은 패닉 메시지 자체와 역 추적 바로 뒤에 있습니다. 따라서 가장 먼저 할 일은 파일에서 &lt;code&gt;panic:&lt;/code&gt; 을 검색하는 것 입니다.이 메시지로 바로 이동해야합니다. 다음과 같이 보일 것입니다 :</target>
        </trans-unit>
        <trans-unit id="928f6722738c31385fa1133a6ea2bf2a1b12ea2e" translate="yes" xml:space="preserve">
          <source>The name &quot;example&quot; here is local to the module where it is declared and is chosen by the configuration author. This is distinct from any ID issued by the remote system, which may change over time while the resource name remains constant.</source>
          <target state="translated">여기서 &quot;example&quot;이라는 이름은 선언 된 모듈의 로컬이며 구성 작성자가 선택합니다. 이것은 자원 이름이 일정하게 유지되는 동안 시간이 지남에 따라 변경 될 수있는 원격 시스템이 발행 한 모든 ID와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="79a7ad80bc825f25a0a23e7bce6b8bb10767b0c7" translate="yes" xml:space="preserve">
          <source>The name &lt;code&gt;MyPlugin&lt;/code&gt; is a placeholder for the struct type that represents your plugin's implementation. This must implement either &lt;code&gt;terraform.ResourceProvider&lt;/code&gt; or &lt;code&gt;terraform.ResourceProvisioner&lt;/code&gt;, depending on the plugin type.</source>
          <target state="translated">&lt;code&gt;MyPlugin&lt;/code&gt; 이라는 이름 은 플러그인 구현을 나타내는 구조체 유형의 자리 표시 자입니다. 플러그인 유형에 따라 &lt;code&gt;terraform.ResourceProvider&lt;/code&gt; 또는 &lt;code&gt;terraform.ResourceProvisioner&lt;/code&gt; 를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="56545e63a44dd8500c3c7fe4107e9227329b2388" translate="yes" xml:space="preserve">
          <source>The name given in the block header is used to assign a value to the variable via the CLI and to reference the variable elsewhere in the configuration.</source>
          <target state="translated">블록 헤더에 지정된 이름은 CLI를 통해 변수에 값을 할당하고 구성의 다른 곳에서 변수를 참조하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="31be2ede75dd592cf6f38d5c80b7d476b8490279" translate="yes" xml:space="preserve">
          <source>The name given in the block header is used to reference the particular module instance from expressions within the calling module, and to refer to the module on the command line. It has no meaning outside of a particular Terraform configuration.</source>
          <target state="translated">블록 헤더에 지정된 이름은 호출 모듈 내의 표현식에서 특정 모듈 인스턴스를 참조하고 명령 행에서 모듈을 참조하는 데 사용됩니다. 특정 Terraform 구성 이외의 의미는 없습니다.</target>
        </trans-unit>
        <trans-unit id="4eb98c118afdb31f49799cb5f5db9a88199e7246" translate="yes" xml:space="preserve">
          <source>The name of a variable can be any valid identifier. However, due to the interpretation of &lt;a href=&quot;modules&quot;&gt;module configuration blocks&lt;/a&gt;, the names &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt; and &lt;code&gt;providers&lt;/code&gt; are reserved for Terraform's own use and are thus not recommended for any module intended to be used as a child module.</source>
          <target state="translated">변수 이름은 유효한 식별자 일 수 있습니다. 그러나 &lt;a href=&quot;modules&quot;&gt;모듈 구성 블록&lt;/a&gt; 의 해석으로 인해 이름 &lt;code&gt;source&lt;/code&gt; , &lt;code&gt;version&lt;/code&gt; 및 &lt;code&gt;providers&lt;/code&gt; 는 Terraform이 사용하도록 예약되어 있으므로 하위 모듈로 사용하려는 모듈에는 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6de4212a0fef8d79702e034a65daab108e75fe7b" translate="yes" xml:space="preserve">
          <source>The names given for the items in the &lt;code&gt;locals&lt;/code&gt; block must be unique throughout a module. The given value can be any expression that is valid within the current module.</source>
          <target state="translated">&lt;code&gt;locals&lt;/code&gt; 블록 의 항목 이름 은 모듈 전체에서 고유해야합니다. 주어진 값은 현재 모듈 내에서 유효한 표현식 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf67c3f0c3f6047846f02a235eb51781aa12b9ea" translate="yes" xml:space="preserve">
          <source>The naming scheme for plugins is &lt;code&gt;terraform-&amp;lt;type&amp;gt;-NAME_vX.Y.Z&lt;/code&gt;, where &lt;code&gt;type&lt;/code&gt; is either &lt;code&gt;provider&lt;/code&gt; or &lt;code&gt;provisioner&lt;/code&gt;. Terraform uses the &lt;code&gt;NAME&lt;/code&gt; to understand the name and version of a particular provider binary. Third-party plugins will often be distributed with an appropriate filename already set in the distribution archive so that it can be extracted directly into the plugin directory described above.</source>
          <target state="translated">플러그인의 이름 지정 체계는 &lt;code&gt;terraform-&amp;lt;type&amp;gt;-NAME_vX.Y.Z&lt;/code&gt; . 여기서 &lt;code&gt;type&lt;/code&gt; 은 &lt;code&gt;provider&lt;/code&gt; 또는 &lt;code&gt;provisioner&lt;/code&gt; 입니다. Terraform은 &lt;code&gt;NAME&lt;/code&gt; 을 사용하여 특정 제공자 바이너리의 이름과 버전을 이해합니다. 타사 플러그인은 종종 배포 아카이브에 이미 설정된 적절한 파일 이름으로 배포되어 위에서 설명한 플러그인 디렉토리로 직접 추출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ef0fd21456695ef859be530a5b9af0f5e0c01c7" translate="yes" xml:space="preserve">
          <source>The naming scheme for provider plugins is &lt;code&gt;terraform-provider-NAME_vX.Y.Z&lt;/code&gt;, and Terraform uses the name to understand the name and version of a particular provider binary. Third-party plugins will often be distributed with an appropriate filename already set in the distribution archive so that it can be extracted directly into the plugin directory described above.</source>
          <target state="translated">제공자 플러그인의 이름 지정 체계는 &lt;code&gt;terraform-provider-NAME_vX.Y.Z&lt;/code&gt; 이며 Terraform은 이름을 사용하여 특정 제공자 바이너리의 이름과 버전을 이해합니다. 타사 플러그인은 종종 배포 아카이브에 이미 설정된 적절한 파일 이름으로 배포되어 위에서 설명한 플러그인 디렉토리로 직접 추출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff5e90cec09883bccdd581e277d0830a3a61dd42" translate="yes" xml:space="preserve">
          <source>The nested &lt;code&gt;assume_role&lt;/code&gt; block supports the following:</source>
          <target state="translated">중첩 된 &lt;code&gt;assume_role&lt;/code&gt; 블록은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="6e09943a91fd9264dd19b19b1b9931bd1cbd8591" translate="yes" xml:space="preserve">
          <source>The nested &lt;code&gt;conditional_format&lt;/code&gt; blocks has the following structure:</source>
          <target state="translated">중첩 된 &lt;code&gt;conditional_format&lt;/code&gt; 블록의 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="062270a238bb0aa649147f385f8ed22c871ed52f" translate="yes" xml:space="preserve">
          <source>The nested &lt;code&gt;style&lt;/code&gt; block is used specifically for styling &lt;code&gt;hostmap&lt;/code&gt; graphs, and has the following structure:</source>
          <target state="translated">중첩 &lt;code&gt;style&lt;/code&gt; 블록은 &lt;code&gt;hostmap&lt;/code&gt; 그래프의 스타일을 지정하기 위해 특별히 사용 되며 다음과 같은 구조를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="42db5b1031c86fe9c2a26b1c9d53a1cbf437904e" translate="yes" xml:space="preserve">
          <source>The nested &lt;code&gt;style&lt;/code&gt; blocks has the following structure:</source>
          <target state="translated">중첩 &lt;code&gt;style&lt;/code&gt; 블록의 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d4df467f89d417d197fd73609d85ff89009a0d7c" translate="yes" xml:space="preserve">
          <source>The nested &lt;code&gt;subject&lt;/code&gt; block accepts the following arguments, all optional, with their meaning corresponding to the similarly-named attributes defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5280#section-4.1.2.4&quot;&gt;RFC5290&lt;/a&gt;:</source>
          <target state="translated">중첩 된 &lt;code&gt;subject&lt;/code&gt; 블록은 &lt;a href=&quot;https://tools.ietf.org/html/rfc5280#section-4.1.2.4&quot;&gt;RFC5290에&lt;/a&gt; 정의 된 유사한 이름의 속성에 해당하는 의미를 갖는 다음의 인수를 모두 선택 사항으로 승인합니다. .</target>
        </trans-unit>
        <trans-unit id="8b3099b7975a9ecbb2b998ceeb522c2834e66102" translate="yes" xml:space="preserve">
          <source>The number of CPU cores to allocate.</source>
          <target state="translated">할당 할 CPU 코어 수입니다.</target>
        </trans-unit>
        <trans-unit id="4eca29f8862904f547687dc029f850569a25941c" translate="yes" xml:space="preserve">
          <source>The numeric ID can be found in the URL when editing a record on the dnsimple web dashboard.</source>
          <target state="translated">dnsimple 웹 대시 보드에서 레코드를 편집 할 때 URL에서 숫자 ID를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e27793ac17882963b113812625074e8e3dfb3196" translate="yes" xml:space="preserve">
          <source>The official Terraform Provisioners are included in the Terraform Core codebase and are compiled into the &lt;code&gt;terraform&lt;/code&gt; binary. While they are built in, Provisioners are still executed in a separate process over RPC, and benefit from the same discovery process as Terraform Providers, making custom Provisioners just as easy to create and use.</source>
          <target state="translated">공식 Terraform Provisioners는 Terraform Core 코드베이스에 포함되어 있으며 &lt;code&gt;terraform&lt;/code&gt; 바이너리 로 컴파일됩니다 . 프로 비 저는 기본 제공되는 동안 RPC를 통해 별도의 프로세스로 실행되며 Terraform Providers와 동일한 검색 프로세스의 이점을 활용하여 사용자 지정 프로 비저 너를 쉽게 만들고 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1556d56d58468a73f7487b88c61c833dc200f2f6" translate="yes" xml:space="preserve">
          <source>The only attribute exported is &lt;code&gt;id&lt;/code&gt;, which is the name of the datacenter.</source>
          <target state="translated">내 보낸 유일한 속성은 &lt;code&gt;id&lt;/code&gt; 입니다 . 이는 데이터 센터의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="d3d5b0d5143c0401de1738c2724c8a9784240c68" translate="yes" xml:space="preserve">
          <source>The only attribute that is exported for this resource is the &lt;code&gt;id&lt;/code&gt;, which is the uniform resource name (URN) of this tag category.</source>
          <target state="translated">이 자원에 대해 내 보낸 유일한 속성은 &lt;code&gt;id&lt;/code&gt; 이며이 태그 카테고리의 URI (Uniform Resource Name)입니다.</target>
        </trans-unit>
        <trans-unit id="312daa28c2fb1c62596294241f648ae65e68571e" translate="yes" xml:space="preserve">
          <source>The only attribute that is exported for this resource is the &lt;code&gt;id&lt;/code&gt;, which is the uniform resource name (URN) of this tag.</source>
          <target state="translated">이 자원에 대해 내 보낸 유일한 속성 은이 태그의 URI (Uniform Resource Name) 인 &lt;code&gt;id&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="fee3170950e911955baa43e28e276d2bfc1a0b76" translate="yes" xml:space="preserve">
          <source>The only attribute that this resource exports is the &lt;code&gt;id&lt;/code&gt;, which is set to the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object ID&lt;/a&gt; of the folder.</source>
          <target state="translated">이 자원이 내보내는 유일한 속성은 &lt;code&gt;id&lt;/code&gt; 이며 폴더 의 &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;관리 대상 객체 ID&lt;/a&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="fa4d4da1f9af0bc0fba1c377183b655edb8f31e0" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the &lt;code&gt;id&lt;/code&gt; of the resource, which is a combination of the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the cluster, and the UUID of the virtual machine. This is used to look up the override on subsequent plan and apply operations after the override has been created.</source>
          <target state="translated">이 자원이 내보내는 유일한 속성은 자원의 &lt;code&gt;id&lt;/code&gt; 이며, 이는 &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;관리 대상 객체 참조 ID&lt;/a&gt; 의 조합입니다. 클러스터 와 가상 시스템의 UUID의 조합입니다. 이는 후속 계획에서 재정의를 조회하고 재정의가 작성된 후 작업을 적용하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5e469db8b0df29cc3c879a37851c0411c885897b" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the &lt;code&gt;id&lt;/code&gt; of the resource, which is a combination of the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the cluster, and the managed object reference ID of the host. This is used to look up the override on subsequent plan and apply operations after the override has been created.</source>
          <target state="translated">이 자원이 내보내는 유일한 속성은 자원의 &lt;code&gt;id&lt;/code&gt; 이며, 이는 &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;관리 대상 객체 참조 ID&lt;/a&gt; 의 조합입니다. 클러스터의 호스트의 관리 오브젝트 레퍼런스 ID. 이는 후속 계획에서 재정의를 조회하고 재정의가 작성된 후 작업을 적용하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c9ed88833fe80f6dbf0c35038353becbf7fd3ad1" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the &lt;code&gt;id&lt;/code&gt; of the resource, which is a combination of the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the cluster, and the name of the host group.</source>
          <target state="translated">이 자원이 내보내는 유일한 속성은 자원의 &lt;code&gt;id&lt;/code&gt; 이며, 이는 클러스터 의 &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;관리 대상 객체 참조 ID&lt;/a&gt; 와 호스트 그룹 이름의 조합입니다 .</target>
        </trans-unit>
        <trans-unit id="21f51e9df9117a2887dca663b1ab3de7adc28ad2" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the &lt;code&gt;id&lt;/code&gt; of the resource, which is a combination of the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the cluster, and the name of the virtual machine group.</source>
          <target state="translated">이 자원이 내보내는 유일한 속성은 자원의 &lt;code&gt;id&lt;/code&gt; 이며, 이는 클러스터 의 &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;관리 대상 객체 참조 ID&lt;/a&gt; 와 가상 머신 그룹의 이름의 조합입니다 .</target>
        </trans-unit>
        <trans-unit id="2954a1f4eb75911d3d8775972b56c11b1ee7f7ac" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the &lt;code&gt;id&lt;/code&gt; of the resource, which is a combination of the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the cluster, and the rule's key within the cluster configuration.</source>
          <target state="translated">이 자원이 내보내는 유일한 속성은 자원의 &lt;code&gt;id&lt;/code&gt; 이며, 이는 클러스터 의 &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;관리 대상 객체 참조 ID&lt;/a&gt; 와 클러스터 구성 내 규칙 키 의 조합입니다 .</target>
        </trans-unit>
        <trans-unit id="84473d82c6684e8649990bc6a62ff145709c2cca" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the &lt;code&gt;id&lt;/code&gt; of the resource, which is a combination of the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the datastore cluster, and the UUID of the virtual machine. This is used to look up the override on subsequent plan and apply operations after the override has been created.</source>
          <target state="translated">이 리소스가 내보내는 유일한 속성은 리소스의 &lt;code&gt;id&lt;/code&gt; 이며, 이는 데이터 스토어 클러스터 의 &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;관리 대상 객체 참조 ID&lt;/a&gt; 와 가상 시스템의 UUID의 조합입니다. 이는 후속 계획에서 재정의를 조회하고 재정의가 작성된 후 작업을 적용하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4834f8ec660c0a5a7a34eba4d25ce3e4dd5456a1" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the &lt;code&gt;id&lt;/code&gt; of the resource, which is the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object ID&lt;/a&gt; of the resource pool.</source>
          <target state="translated">는이 자원 수출이 인 속성 &lt;code&gt;id&lt;/code&gt; 는 IS 자원의 &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;관리 객체의 ID&lt;/a&gt; 자원 풀의.</target>
        </trans-unit>
        <trans-unit id="d27bdeb2be7feac5b5f84e4edf1c112dd1f05651" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the resource &lt;code&gt;id&lt;/code&gt;, which is set to the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the snapshot.</source>
          <target state="translated">이 자원이 내보내는 유일한 속성은 자원 &lt;code&gt;id&lt;/code&gt; 이며 스냅 샷 의 &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;관리 대상 객체 참조 ID&lt;/a&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="2325afc18258ec605218745a304816f5664e154e" translate="yes" xml:space="preserve">
          <source>The only computed attribute that is exported by this resource is the resource &lt;code&gt;id&lt;/code&gt;, which is the the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the datastore cluster.</source>
          <target state="translated">이 리소스에서 내 보낸 유일한 계산 된 속성 은 데이터 저장소 클러스터 의 &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;관리 객체 참조 ID&lt;/a&gt; 인 리소스 &lt;code&gt;id&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7f3180e39e4ec734ddc9a47e044ade8cc2edb3cb" translate="yes" xml:space="preserve">
          <source>The only exported attribute is &lt;code&gt;id&lt;/code&gt;, which is the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object ID&lt;/a&gt; of this datacenter.</source>
          <target state="translated">내 보낸 유일한 속성은 &lt;code&gt;id&lt;/code&gt; 이며이 데이터 센터 의 &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;관리 대상 객체 ID&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="83e1fef11dbab56640fa24b0f523d3950deb7389" translate="yes" xml:space="preserve">
          <source>The only exported attribute, other than the attributes above, is the &lt;code&gt;id&lt;/code&gt; of the resource. This is set to an ID value unique to Terraform - the convention is a prefix, the host system ID, and the virtual switch name. An example would be &lt;code&gt;tf-HostVirtualSwitch:host-10:vSwitchTerraformTest&lt;/code&gt;.</source>
          <target state="translated">위의 속성 이외의 익스포트 된 속성 은 자원 의 &lt;code&gt;id&lt;/code&gt; 입니다. 이것은 Terraform에 고유 한 ID 값으로 설정됩니다. 규칙은 접두사, 호스트 시스템 ID 및 가상 스위치 이름입니다. 예를 들면 &lt;code&gt;tf-HostVirtualSwitch:host-10:vSwitchTerraformTest&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="acfad46b33256bc2bdcb354a67f96d02c34c1664" translate="yes" xml:space="preserve">
          <source>The only limitation Terraform has when reading the configuration files is that the import provider configurations must not depend on non-variable inputs. For example, a provider configuration cannot depend on a data source.</source>
          <target state="translated">Terraform이 구성 파일을 읽을 때 가지고있는 유일한 제한은 가져 오기 제공자 구성이 가변 입력에 의존해서는 안된다는 것입니다. 예를 들어 공급자 구성은 데이터 소스에 의존 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6c9abccc6021a61297ebff0d736d77395e2d6aa7" translate="yes" xml:space="preserve">
          <source>The only required configuration key for a module is the &lt;code&gt;source&lt;/code&gt; parameter. The value of this tells Terraform where to download the module's source code. Terraform comes with support for a variety of module sources.</source>
          <target state="translated">모듈에 필요한 유일한 구성 키는 &lt;code&gt;source&lt;/code&gt; 매개 변수입니다. 이 값은 Terraform에게 모듈의 소스 코드를 다운로드 할 위치를 알려줍니다. Terraform은 다양한 모듈 소스를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="6ec22cd6b0426a766240ee89f3806a361db2adf5" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;-out&lt;/code&gt; argument can be used to save the generated plan to a file for later execution with &lt;code&gt;terraform apply&lt;/code&gt;, which can be useful when &lt;a href=&quot;https://www.terraform.io/guides/running-terraform-in-automation.html&quot;&gt;running Terraform in automation&lt;/a&gt;.</source>
          <target state="translated">선택적 &lt;code&gt;-out&lt;/code&gt; 인수는 &lt;code&gt;terraform apply&lt;/code&gt; 를 사용 하여 나중에 실행할 수 있도록 생성 된 계획을 파일에 저장하는 데 사용할 수 있으며 , &lt;a href=&quot;https://www.terraform.io/guides/running-terraform-in-automation.html&quot;&gt;자동화에서 Terraform을 실행할&lt;/a&gt; 때 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="58bc6a76b489df1f104c82a9ab5159dd813ec1e3" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;push_config&lt;/code&gt; block supports:</source>
          <target state="translated">선택적 &lt;code&gt;push_config&lt;/code&gt; 블록은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="e8b5879fe61a4fb8c10d24a1d29c742e26acce9f" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;replica_configuration&lt;/code&gt; block must have &lt;code&gt;master_instance_name&lt;/code&gt; set to work, cannot be updated, and supports:</source>
          <target state="translated">선택적 &lt;code&gt;replica_configuration&lt;/code&gt; 블록에는 &lt;code&gt;master_instance_name&lt;/code&gt; 이 작동하도록 설정되어 업데이트 할 수 없으며 다음을 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="249a427528b66214de097a8aae90566ade798dfe" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;settings.backup_configuration&lt;/code&gt; subblock supports:</source>
          <target state="translated">선택적 &lt;code&gt;settings.backup_configuration&lt;/code&gt; 서브 블록은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="5059a9d8f668d5aa8c7e47416ccc4673b82bc868" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;settings.database_flags&lt;/code&gt; sublist supports:</source>
          <target state="translated">선택적 &lt;code&gt;settings.database_flags&lt;/code&gt; 하위 목록은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="31a08aa49b68cbb66446edd433da05821b69a621" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;settings.ip_configuration.authorized_networks[]&lt;/code&gt; sublist supports:</source>
          <target state="translated">선택적 &lt;code&gt;settings.ip_configuration.authorized_networks[]&lt;/code&gt; 하위 목록은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="4fb103b6a114b9e3145874539b552ddf95444ba2" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;settings.ip_configuration&lt;/code&gt; subblock supports:</source>
          <target state="translated">선택적 &lt;code&gt;settings.ip_configuration&lt;/code&gt; 서브 블록은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="85de0977018849899f94fc33537a76c125978490" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;settings.location_preference&lt;/code&gt; subblock supports:</source>
          <target state="translated">선택적 &lt;code&gt;settings.location_preference&lt;/code&gt; 서브 블록은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="fc4b8f4e9892ff649625023b246097949cd696d6" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;settings.maintenance_window&lt;/code&gt; subblock for Second Generation instances declares a one-hour &lt;a href=&quot;https://cloud.google.com/sql/docs/instance-settings?hl=en#maintenance-window-2ndgen&quot;&gt;maintenance window&lt;/a&gt; when an Instance can automatically restart to apply updates. The maintenance window is specified in UTC time. It supports:</source>
          <target state="translated">2 세대 인스턴스 의 선택적 &lt;code&gt;settings.maintenance_window&lt;/code&gt; 하위 블록 은 인스턴스가 자동으로 다시 시작하여 업데이트를 적용 할 수있는 경우 1 시간 &lt;a href=&quot;https://cloud.google.com/sql/docs/instance-settings?hl=en#maintenance-window-2ndgen&quot;&gt;유지 관리 기간을&lt;/a&gt; 선언 합니다. 유지 관리 기간은 UTC 시간으로 지정됩니다. 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="dbc030680dac1e5576f7a0a32beac02271b1de9f" translate="yes" xml:space="preserve">
          <source>The options are:</source>
          <target state="translated">옵션은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="51ff3189a9a5d187ac3ef56b283fe0c56d2b7d96" translate="yes" xml:space="preserve">
          <source>The options available in the &lt;code&gt;clone&lt;/code&gt; sub-resource are:</source>
          <target state="translated">&lt;code&gt;clone&lt;/code&gt; 하위 자원 에서 사용 가능한 옵션 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a748e7c83da404be3c268d6d7b16ab81db5e9fe5" translate="yes" xml:space="preserve">
          <source>The order of variables, resources, etc. defined within the configuration doesn't matter. Terraform configurations are &lt;a href=&quot;https://en.wikipedia.org/wiki/Declarative_programming&quot;&gt;declarative&lt;/a&gt;, so references to other resources and variables do not depend on the order they're defined.</source>
          <target state="translated">구성 내에 정의 된 변수, 리소스 등의 순서는 중요하지 않습니다. 지형 구성은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Declarative_programming&quot;&gt;선언적&lt;/a&gt; 이므로 다른 리소스 및 변수에 대한 참조는 정의 된 순서에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cfa4b62d40fa14e9f09ba94bf85c205be674ca72" translate="yes" xml:space="preserve">
          <source>The other way is &lt;strong&gt;statically&lt;/strong&gt; define all the credentials:</source>
          <target state="translated">다른 방법은 모든 자격 증명을 &lt;strong&gt;정적으로&lt;/strong&gt; 정의하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ed451b44b2aa66edc4131c3c48aaae03e4530a4c" translate="yes" xml:space="preserve">
          <source>The output (similar to below) will display one or more Subscriptions - with the &lt;code&gt;id&lt;/code&gt; field being the &lt;code&gt;subscription_id&lt;/code&gt; field referenced above.</source>
          <target state="translated">출력 (아래와 유사)은 하나 이상의 구독을 표시합니다. &lt;code&gt;id&lt;/code&gt; 필드는 위에서 참조한 &lt;code&gt;subscription_id&lt;/code&gt; 필드입니다.</target>
        </trans-unit>
        <trans-unit id="d588725043553b0804c9af3ed178795281530e29" translate="yes" xml:space="preserve">
          <source>The output (similar to below) will display one or more Subscriptions - with the &lt;code&gt;id&lt;/code&gt; field being the Subscription ID.</source>
          <target state="translated">출력 (아래와 유사)에는 하나 이상의 구독이 표시되며 &lt;code&gt;id&lt;/code&gt; 필드는 구독 ID입니다.</target>
        </trans-unit>
        <trans-unit id="9d2e29e672de46f8b28a8ec8ec8fc3e72b0336a8" translate="yes" xml:space="preserve">
          <source>The output and command-line structure of the state subcommands is designed to be easy to use with Unix command-line tools such as grep, awk, etc. Consequently, the output is also friendly to the equivalent PowerShell commands within Windows.</source>
          <target state="translated">state 부속 명령의 출력 및 명령 행 구조는 grep, awk 등과 같은 Unix 명령 행 도구와 함께 사용하기 쉽게 설계되었습니다. 따라서 출력은 Windows 내의 동등한 PowerShell 명령에도 적합합니다.</target>
        </trans-unit>
        <trans-unit id="e6014d9c6544c0a9a8758fc75e0f61845439ab13" translate="yes" xml:space="preserve">
          <source>The output name (&lt;code&gt;-o&lt;/code&gt;) is &lt;strong&gt;very important&lt;/strong&gt;. Terraform searches for plugins in the format of:</source>
          <target state="translated">출력 이름 ( &lt;code&gt;-o&lt;/code&gt; )은 &lt;strong&gt;매우 중요&lt;/strong&gt; 합니다. Terraform은 다음 형식으로 플러그인을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="0fc89cbf1629a892facf41da7e603146a4c98757" translate="yes" xml:space="preserve">
          <source>The output of &lt;code&gt;terraform graph&lt;/code&gt; is in the DOT format, which can easily be converted to an image by making use of &lt;code&gt;dot&lt;/code&gt; provided by GraphViz:</source>
          <target state="translated">&lt;code&gt;terraform graph&lt;/code&gt; 의 출력은 DOT 형식이며, GraphViz에서 제공하는 &lt;code&gt;dot&lt;/code&gt; 를 사용하여 이미지로 쉽게 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e0c46a01a045c66c50c17c208268e6b54051e5a6" translate="yes" xml:space="preserve">
          <source>The panos provider has support for PAN-OS 6.1 - 8.1.</source>
          <target state="translated">panos 제공자는 PAN-OS 6.1-8.1을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="1d1cc1a935ae2526a39eed980a3f38ddb375069b" translate="yes" xml:space="preserve">
          <source>The parameter to provider configuration as well as all the CRUD operations on a resource is a &lt;a href=&quot;https://godoc.org/github.com/hashicorp/terraform/helper/schema#ResourceData&quot;&gt;schema.ResourceData&lt;/a&gt;. This structure is used to query configurations as well as to set information about the resource such as its ID, connection information, and computed attributes.</source>
          <target state="translated">자원에 대한 모든 CRUD 조작뿐만 아니라 제공자 구성에 대한 매개 변수는 &lt;a href=&quot;https://godoc.org/github.com/hashicorp/terraform/helper/schema#ResourceData&quot;&gt;schema.ResourceData&lt;/a&gt; 입니다. 이 구조는 구성을 조회하고 ID, 연결 정보 및 계산 된 속성과 같은 자원에 대한 정보를 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1afe64cf4d990d49b72928f43c8aac7384c71023" translate="yes" xml:space="preserve">
          <source>The path for migrating to the current version of this resource is very similar to the &lt;a href=&quot;#importing&quot;&gt;import&lt;/a&gt; path, with the exception that the &lt;code&gt;terraform
import&lt;/code&gt; command does not need to be run. See that section for details on what is required before you run &lt;code&gt;terraform plan&lt;/code&gt; on a state that requires migration.</source>
          <target state="translated">&lt;code&gt;terraform import&lt;/code&gt; 명령을 실행할 필요가 없다는 점을 제외 하고이 자원의 현재 버전으로 마이그레이션하기위한 경로는 &lt;a href=&quot;#importing&quot;&gt;가져 오기&lt;/a&gt; 경로 와 매우 유사 합니다. 마이그레이션이 필요한 상태에서 &lt;code&gt;terraform plan&lt;/code&gt; 을 실행하기 전에 필요한 사항에 대한 자세한 내용은 해당 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4575314a96edfd12da07f085152902ad6de2f378" translate="yes" xml:space="preserve">
          <source>The path to the &lt;code&gt;kernel&lt;/code&gt; and &lt;code&gt;initrd&lt;/code&gt; files must exist before creating a Distro. Usually this involves running &lt;code&gt;cobbler import ...&lt;/code&gt; prior to creating the Distro.</source>
          <target state="translated">Distro를 만들기 전에 &lt;code&gt;kernel&lt;/code&gt; 및 &lt;code&gt;initrd&lt;/code&gt; 파일 의 경로 가 존재해야합니다. 일반적으로 Distro를 만들기 전에 &lt;code&gt;cobbler import ...&lt;/code&gt; 를 실행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d520b0749b08897f9c2d672a4be4e51c392aa075" translate="yes" xml:space="preserve">
          <source>The permissions attribute specifies how you want to share the document. If you share a document privately, you must specify the AWS user account IDs for those people who can use the document. If you share a document publicly, you must specify All as the account ID.</source>
          <target state="translated">permissions 속성은 문서 공유 방법을 지정합니다. 문서를 비공개로 공유하는 경우 문서를 사용할 수있는 사람들의 AWS 사용자 계정 ID를 지정해야합니다. 문서를 공개적으로 공유하는 경우 계정 ID로 모두를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="ec8e4c09f12d61a1d1015f2884bde227f757a585" translate="yes" xml:space="preserve">
          <source>The permissions mapping supports the following:</source>
          <target state="translated">권한 매핑은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="e7f4b89d61a89407379cf97e740dcc03cab35e96" translate="yes" xml:space="preserve">
          <source>The persistent data stored in the backend belongs to a &lt;em&gt;workspace&lt;/em&gt;. Initially the backend has only one workspace, called &quot;default&quot;, and thus there is only one Terraform state associated with that configuration.</source>
          <target state="translated">백엔드에 저장된 지속적 데이터는 &lt;em&gt;작업 공간에&lt;/em&gt; 속합니다 . 처음에는 백엔드에 &quot;default&quot;라는 작업 공간이 하나뿐이므로 해당 구성과 관련된 Terraform 상태는 하나뿐입니다.</target>
        </trans-unit>
        <trans-unit id="e6cb03036adc2e64069dcc494b9e217cd8df414d" translate="yes" xml:space="preserve">
          <source>The plan will provide you an overview of planned changes, in this case we should see 2 resources (Pod + Service) being added. This commands gets more useful as your infrastructure grows and becomes more complex with more components depending on each other and it's especially helpful during updates.</source>
          <target state="translated">계획은 계획된 변경 사항에 대한 개요를 제공하며이 경우 2 개의 리소스 (팟 + 서비스)가 추가됩니다. 이 명령은 인프라가 커질수록 서로 더 많은 구성 요소로 복잡해지면서 더욱 유용하며 업데이트 중에 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="68816edf930ccb57f26274aba975948fef4bb223" translate="yes" xml:space="preserve">
          <source>The plugin cache directory must &lt;em&gt;not&lt;/em&gt; be the third-party plugin directory or any other directory Terraform searches for pre-installed plugins, since the cache management logic conflicts with the normal plugin discovery logic when operating on the same directory.</source>
          <target state="translated">캐시 관리 로직이 동일한 디렉토리에서 작동 할 때 캐시 관리 로직이 일반 플러그인 발견 로직과 충돌하므로 플러그인 캐시 디렉토리는 타사 플러그인 디렉토리이거나 다른 디렉토리가 테라 폼이 사전 설치된 플러그인을 검색 &lt;em&gt;하지&lt;/em&gt; 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="b63c3ea31fcc4cd16fce7a52cebc4575c3214e2d" translate="yes" xml:space="preserve">
          <source>The pre-0.7 interface for reading keys is still supported for backward compatibility, but will be removed in a future version of Terraform.</source>
          <target state="translated">키를 읽기위한 0.7 이전 인터페이스는 여전히 이전 버전과의 호환성을 위해 지원되지만 향후 버전의 Terraform에서 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="b59fb6580dc0df9768191cd440b9ad48a5e24a68" translate="yes" xml:space="preserve">
          <source>The prefix &lt;code&gt;sat&lt;/code&gt; stands for &quot;Source Address Translation&quot; while the prefix &quot;dat&quot; stands for &quot;Destination Address Translation&quot;. The order of the params in this resource and their naming matches how the params are presented in the GUI. Thus, having a GUI window open while creating your resource definition will simplify the process.</source>
          <target state="translated">접두사 &lt;code&gt;sat&lt;/code&gt; 는 &quot;소스 주소 변환&quot;을 나타내고 접두사 &quot;dat&quot;는 &quot;대상 주소 변환&quot;을 나타냅니다. 이 자원의 매개 변수 순서와 이름은 GUI에 매개 변수가 표시되는 방식과 일치합니다. 따라서 자원 정의를 작성하는 동안 GUI 창이 열려 있으면 프로세스가 단순 해집니다.</target>
        </trans-unit>
        <trans-unit id="42c4706910f3f55bfb33832e0a7fedb2a48bed61" translate="yes" xml:space="preserve">
          <source>The pricing group for the Redis Family - either &quot;C&quot; or &quot;P&quot; at present.</source>
          <target state="translated">Redis 제품군의 가격 그룹은 현재 &quot;C&quot;또는 &quot;P&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="bfb5b6473a0c6f43168a0a97b72eb9356008d21e" translate="yes" xml:space="preserve">
          <source>The primary reasons to care about provider plugins are:</source>
          <target state="translated">공급자 플러그인을 관리해야하는 주요 이유는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="667dbf02ef55685260d28cd72906a793d10b506f" translate="yes" xml:space="preserve">
          <source>The primary responsibilities of Provider Plugins are:</source>
          <target state="translated">공급자 플러그인의 주요 책임은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="097e3a9c39c048cb0f0e6727025342cf769633c3" translate="yes" xml:space="preserve">
          <source>The primary responsibilities of Provisioner Plugins are:</source>
          <target state="translated">Provisioner Plugins의 주요 책임은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9e2d6937d4846a3131f3bf89b36642ef7f40815a" translate="yes" xml:space="preserve">
          <source>The primary responsibilities of Terraform Core are:</source>
          <target state="translated">Terraform Core의 주요 책임은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1a534c955a7e1003bb232fd7b185a808729ee439" translate="yes" xml:space="preserve">
          <source>The primary use case for this is to target a specific configuration of a provider that is configured multiple times to support multiple regions, etc.</source>
          <target state="translated">이를위한 주요 사용 사례는 여러 지역 등을 지원하도록 여러 번 구성된 공급자의 특정 구성을 대상으로하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0a4b5ac19afc0a13601cd4a12bf0e08034fe7e63" translate="yes" xml:space="preserve">
          <source>The primary use case of explicit &lt;code&gt;depends_on&lt;/code&gt; is to depend on a &lt;em&gt;side effect&lt;/em&gt; of another operation. For example: if a provisioner creates a file, and your resource reads that file, then there is no interpolation reference for Terraform to automatically connect the two resources. However, there is a causal ordering that needs to be represented. This is an ideal case for &lt;code&gt;depends_on&lt;/code&gt;. In most cases, however, &lt;code&gt;depends_on&lt;/code&gt; should be avoided and Terraform should be allowed to determine dependencies automatically.</source>
          <target state="translated">명시 적 &lt;code&gt;depends_on&lt;/code&gt; 의 주요 사용 사례 는 다른 작업 의 &lt;em&gt;부작용&lt;/em&gt; 에 의존하는 것 입니다. 예를 들어, 프로비저닝자가 파일을 생성하고 리소스가 해당 파일을 읽는 경우 Terraform이 두 리소스를 자동으로 연결하는 보간 참조가 없습니다. 그러나 표현해야 할 인과 적 순서가 있습니다. &lt;code&gt;depends_on&lt;/code&gt; 의 이상적인 경우입니다 . 그러나 대부분의 경우 &lt;code&gt;depends_on&lt;/code&gt; 을 피하고 Terraform은 자동으로 종속성을 결정할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="226e6e503866796657a5a53ab6cf8fd37391c0ae" translate="yes" xml:space="preserve">
          <source>The primary use-case for the null data source is to gather together collections of intermediate values to re-use elsewhere in configuration:</source>
          <target state="translated">널 데이터 소스의 기본 사용 사례는 구성의 다른 곳에서 재사용하기 위해 중간 값 콜렉션을 함께 수집하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9959b72b58ceafc11da23c2feca2f860526d0400" translate="yes" xml:space="preserve">
          <source>The primary use-case for the null resource is as a do-nothing container for arbitrary actions taken by a provisioner, as follows:</source>
          <target state="translated">널 (null) 자원의 주요 사용 사례는 다음과 같이 프로 비져가 수행 한 임의의 조치에 대한 무 처리 컨테이너입니다.</target>
        </trans-unit>
        <trans-unit id="694678941495e993c84ef66a6345f14c3ea03d12" translate="yes" xml:space="preserve">
          <source>The private key resource allows SSH private keys to be stored into Rundeck's key store. The key store is where Rundeck keeps credentials that are needed to access the nodes on which it runs commands.</source>
          <target state="translated">개인 키 리소스를 사용하면 SSH 개인 키를 Rundeck의 키 저장소에 저장할 수 있습니다. 키 저장소는 Rundeck이 명령을 실행하는 노드에 액세스하는 데 필요한 자격 증명을 유지하는 위치입니다.</target>
        </trans-unit>
        <trans-unit id="6038058131a34e5104ef309958c511c1764b183e" translate="yes" xml:space="preserve">
          <source>The procedure for writing unit tests for Terraform follows the same setup and conventions of writing any Go unit tests. We recommend naming tests to follow the same convention as our acceptance tests, &lt;code&gt;Test&amp;lt;Provider&amp;gt;_&amp;lt;Test Name&amp;gt;&lt;/code&gt;. For more information on Go tests, see the &lt;a href=&quot;https://golang.org/pkg/testing/&quot;&gt;official Golang docs on testing&lt;/a&gt;.</source>
          <target state="translated">Terraform에 대한 단위 테스트 작성 절차는 Go 단위 테스트 작성과 동일한 설정 및 규칙을 따릅니다. 승인 테스트 인 &lt;code&gt;Test&amp;lt;Provider&amp;gt;_&amp;lt;Test Name&amp;gt;&lt;/code&gt; 과 동일한 규칙을 따르는 명명 테스트를 권장 합니다. Go 테스트에 대한 자세한 내용은 테스트 관련 &lt;a href=&quot;https://golang.org/pkg/testing/&quot;&gt;공식 Golang 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a11fb23142d1b60f52abe84d76cab5e64ac0fdd1" translate="yes" xml:space="preserve">
          <source>The program must read all of the data passed to it on &lt;code&gt;stdin&lt;/code&gt;, and parse it as a JSON object. The JSON object contains the contents of the &lt;code&gt;query&lt;/code&gt; argument and its values will always be strings.</source>
          <target state="translated">프로그램은 &lt;code&gt;stdin&lt;/code&gt; 에 전달 된 모든 데이터를 읽고 JSON 오브젝트로 구문 분석해야합니다. JSON 객체에는 &lt;code&gt;query&lt;/code&gt; 인수 의 내용이 포함 되며 해당 값은 항상 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="4fe10fc158085d9f06b8c7e57fba52e2eca03c5a" translate="yes" xml:space="preserve">
          <source>The program must then produce a valid JSON object on &lt;code&gt;stdout&lt;/code&gt;, which will be used to populate the &lt;code&gt;result&lt;/code&gt; attribute exported to the rest of the Terraform configuration. This JSON object must again have all of its values as strings. On successful completion it must exit with status zero.</source>
          <target state="translated">그런 다음 프로그램은 &lt;code&gt;stdout&lt;/code&gt; 에 유효한 JSON 객체를 생성해야 하며 이는 나머지 Terraform 구성으로 내 보낸 &lt;code&gt;result&lt;/code&gt; 속성 을 채우는 데 사용됩니다 . 이 JSON 객체는 다시 모든 값을 문자열로 가져야합니다. 성공적으로 완료되면 상태 0으로 종료해야합니다.</target>
        </trans-unit>
        <trans-unit id="79f88033ff99ce3c46d53e00af0cf741c02c3a2b" translate="yes" xml:space="preserve">
          <source>The project is the resource management unit in Log Service and is used to isolate and control resources. You can manage all the logs and the related log sources of an application by using projects. &lt;a href=&quot;https://www.alibabacloud.com/help/doc-detail/48873.htm&quot;&gt;Refer to details&lt;/a&gt;.</source>
          <target state="translated">이 프로젝트는 로그 서비스의 자원 관리 단위이며 자원을 분리하고 제어하는 ​​데 사용됩니다. 프로젝트를 사용하여 애플리케이션의 모든 로그 및 관련 로그 소스를 관리 할 수 ​​있습니다. &lt;a href=&quot;https://www.alibabacloud.com/help/doc-detail/48873.htm&quot;&gt;자세한 내용을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ac44782d2aaac0d542371743750d7cb3fde255bc" translate="yes" xml:space="preserve">
          <source>The project resource allows Rundeck projects to be managed by Terraform. In Rundeck a project is the container object for a set of jobs and the configuration for which servers those jobs can be run on.</source>
          <target state="translated">프로젝트 리소스를 통해 Rundeck 프로젝트를 Terraform에서 관리 할 수 ​​있습니다. Rundeck에서 프로젝트는 일련의 작업에 대한 컨테이너 객체 및 해당 작업을 실행할 수있는 서버의 구성입니다.</target>
        </trans-unit>
        <trans-unit id="e936168fb6c61ab3e2ed49ffc053a0fea95b9ee7" translate="yes" xml:space="preserve">
          <source>The provider allows you to manage your GitHub organization's members and teams easily. It needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">이 공급자를 사용하면 GitHub 조직의 구성원과 팀을 쉽게 관리 할 수 ​​있습니다. 사용하기 전에 적절한 자격 증명으로 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="eb0afdc8397584ed61f21c7162d6af6f720784f1" translate="yes" xml:space="preserve">
          <source>The provider also can accept both signed and self-signed server certificates. It is recommended that in production environments you only use certificates signed by a certificate authority. NSX ships by default with a self-signed server certificates as the hostname of the NSX manager is not known until the NSX administrator determines what name or IP to use.</source>
          <target state="translated">공급자는 또한 서명 된 서버 인증서와 자체 서명 된 서버 인증서를 모두 수락 할 수 있습니다. 프로덕션 환경에서는 인증 기관에서 서명 한 인증서 만 사용하는 것이 좋습니다. NSX 관리자가 사용할 이름이나 IP를 결정할 때까지 NSX 관리자의 호스트 이름을 알 수 없으므로 NSX는 기본적으로 자체 서명 된 서버 인증서와 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="8a4462204fd5e7f593e57b6b7f6d4134a1092cf7" translate="yes" xml:space="preserve">
          <source>The provider also provides session persistence options that can be configured below. These can help when using Terraform in a way where session limits could be normally reached by creating a new session for every run, such as a large amount of concurrent or consecutive Terraform runs in a short period of time.</source>
          <target state="translated">공급자는 아래에서 구성 할 수있는 세션 지속성 옵션도 제공합니다. 단시간에 대량의 동시 또는 연속 Terraform 실행과 같이 모든 실행에 대해 새 세션을 생성하여 일반적으로 세션 제한에 도달 할 수있는 방식으로 Terraform을 사용할 때 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d723071a6a878c856c9ea6102ca48dd56a052eb1" translate="yes" xml:space="preserve">
          <source>The provider always first tries to load &lt;strong&gt;a config file&lt;/strong&gt; from a given (or default) location. Depending on whether you have current context set this &lt;em&gt;may&lt;/em&gt; require &lt;code&gt;config_context_auth_info&lt;/code&gt; and/or &lt;code&gt;config_context_cluster&lt;/code&gt; and/or &lt;code&gt;config_context&lt;/code&gt;.</source>
          <target state="translated">공급자는 항상 주어진 (또는 기본) 위치에서 &lt;strong&gt;구성 파일&lt;/strong&gt; 을로드하려고합니다 . 현재 컨텍스트 세트가 있는지 여부에 따라 &lt;code&gt;config_context_auth_info&lt;/code&gt; 및 / 또는 &lt;code&gt;config_context_cluster&lt;/code&gt; 및 / 또는 &lt;code&gt;config_context&lt;/code&gt; &lt;em&gt;가&lt;/em&gt; 필요할 &lt;em&gt;수 있습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8f520b502cdef356a4cd0baa0706d2b9feccdc42" translate="yes" xml:space="preserve">
          <source>The provider configuration block accepts the following arguments. In most cases it is recommended to set them via the indicated environment variables in order to keep credential information out of the configuration.</source>
          <target state="translated">제공자 구성 블록은 다음 인수를 승인합니다. 대부분의 경우 자격 증명 정보를 구성에서 제외하려면 표시된 환경 변수를 통해 설정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f13a32ac5ab352856dffd8c23208a35c617a4624" translate="yes" xml:space="preserve">
          <source>The provider configuration block accepts the following arguments:</source>
          <target state="translated">제공자 구성 블록은 다음 인수를 승인합니다.</target>
        </trans-unit>
        <trans-unit id="e9d628d0a66c8987f02a6ca1ec6296ce5dd7aad3" translate="yes" xml:space="preserve">
          <source>The provider needs to be configured with proper credentials before it can be used.</source>
          <target state="translated">공급자를 사용하려면 적절한 자격 증명으로 공급자를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="aef6dca3afdbb69306c0e9c0a5ba14967ee31273" translate="yes" xml:space="preserve">
          <source>The providers listed below have been built by the community of Terraform users and vendors. These providers are not tested nor officially maintained by HashiCorp, and are listed here in order to help users find them easily.</source>
          <target state="translated">아래에 나열된 공급자는 Terraform 사용자 및 공급 업체 커뮤니티에서 구축했습니다. 이러한 공급자는 HashiCorp에서 테스트하거나 공식적으로 관리하지 않으며 사용자가 쉽게 찾을 수 있도록 여기에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5694d656ec378bffed4566c74a330e5bc6920805" translate="yes" xml:space="preserve">
          <source>The public key resource allows SSH public keys to be stored into Rundeck's key store. The key store is where Rundeck keeps credentials that are needed to access the nodes on which it runs commands.</source>
          <target state="translated">공개 키 리소스를 사용하면 SSH 공개 키를 Rundeck의 키 저장소에 저장할 수 있습니다. 키 저장소는 Rundeck이 명령을 실행하는 노드에 액세스하는 데 필요한 자격 증명을 유지하는 위치입니다.</target>
        </trans-unit>
        <trans-unit id="1b33c40c93c482ddd224c5d2073c0e198cf95988" translate="yes" xml:space="preserve">
          <source>The reason Terraform uploads all of these files is because Terraform cannot know what is and isn't being used for provisioning, so it uploads all the files to be safe. To exclude certain files, specify the &lt;code&gt;-exclude&lt;/code&gt; flag when pushing, or specify the &lt;code&gt;exclude&lt;/code&gt; parameter in the &lt;a href=&quot;https://www.terraform.io/docs/configuration/terraform-enterprise.html&quot;&gt;Terraform Enterprise configuration section&lt;/a&gt;.</source>
          <target state="translated">Terraform이이 모든 파일을 업로드하는 이유는 Terraform이 프로비저닝에 무엇이 사용되고 있는지 알 수 없기 때문에 모든 파일을 안전하게 업로드하기 때문입니다. 특정 파일을 제외하려면 푸시 할 때 &lt;code&gt;-exclude&lt;/code&gt; 플래그를 지정하거나 &lt;a href=&quot;https://www.terraform.io/docs/configuration/terraform-enterprise.html&quot;&gt;Terraform Enterprise 구성 섹션&lt;/a&gt; 에서 &lt;code&gt;exclude&lt;/code&gt; 매개 변수를 지정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="35dcbfb998b5a8818f159b523c9d32f7a1f7d5f2" translate="yes" xml:space="preserve">
          <source>The reference of available configuration options is listed below. The only required argument is the path to your local salt state tree.</source>
          <target state="translated">사용 가능한 구성 옵션에 대한 참조는 다음과 같습니다. 필요한 유일한 인수는 로컬 소금 상태 트리의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="3560925a2909e73b2c25d851fc659a435a368495" translate="yes" xml:space="preserve">
          <source>The reference page for each resource type provides full details on all of its supported arguments and exported attributes.</source>
          <target state="translated">각 자원 유형에 대한 참조 페이지는 지원되는 모든 인수 및 내 보낸 속성에 대한 자세한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fd467dad3f4a11ec58a5868c81a96280950b60e3" translate="yes" xml:space="preserve">
          <source>The referenced &lt;code&gt;task-definitions/service.json&lt;/code&gt; file contains a valid JSON document, which is shown below, and its content is going to be passed directly into the &lt;code&gt;container_definitions&lt;/code&gt; attribute as a string. Please note that this example contains only a small subset of the available parameters.</source>
          <target state="translated">참조 된 &lt;code&gt;task-definitions/service.json&lt;/code&gt; 파일에는 아래에 표시된 유효한 JSON 문서가 포함되어 있으며 해당 컨텐츠는 &lt;code&gt;container_definitions&lt;/code&gt; 속성에 문자열로 직접 전달됩니다 . 이 예제에는 사용 가능한 매개 변수 중 일부만 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5205128994ff951e3c3ea3680891b20530702266" translate="yes" xml:space="preserve">
          <source>The referer configuration supports the following:</source>
          <target state="translated">리퍼러 구성은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="b121667aa5e7129f6a22ecad532b62dfc5b9bac8" translate="yes" xml:space="preserve">
          <source>The registry at &lt;a href=&quot;https://registry.terraform.io&quot;&gt;registry.terraform.io&lt;/a&gt; only hosts public modules, but most organizations have some modules that can't, shouldn't, or don't need to be public.</source>
          <target state="translated">registry.terraform.io의 &lt;a href=&quot;https://registry.terraform.io&quot;&gt;레지스트리&lt;/a&gt; 는 공개 모듈 만 호스팅하지만 대부분의 조직에는 공개 할 수 없거나 공개 할 필요가없는 일부 모듈이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c93e24b06bf5eecbf550934e28e589ac1667866" translate="yes" xml:space="preserve">
          <source>The registry extracts information about the module from the module's source. The module name, provider, documentation, inputs/outputs, and dependencies are all parsed and available via the UI or API, as well as the same information for any submodules or examples in the module's source repository.</source>
          <target state="translated">레지스트리는 모듈의 소스에서 모듈에 대한 정보를 추출합니다. 모듈 이름, 제공자, 문서, 입력 / 출력 및 종속성은 모두 UI 또는 API를 통해 구문 분석되고 사용 가능하며 모듈 소스 저장소의 하위 모듈 또는 예제에 대한 동일한 정보입니다.</target>
        </trans-unit>
        <trans-unit id="77e9b0d58328b6841e51dbd2fb9687047a5e500b" translate="yes" xml:space="preserve">
          <source>The registry is integrated directly into Terraform. You can reference any registry module with a source string of &lt;code&gt;&amp;lt;NAMESPACE&amp;gt;/&amp;lt;NAME&amp;gt;/&amp;lt;PROVIDER&amp;gt;&lt;/code&gt;. Each module's information page on the registry includes its source string.</source>
          <target state="translated">레지스트리는 Terraform에 직접 통합됩니다. 소스 문자열이 &lt;code&gt;&amp;lt;NAMESPACE&amp;gt;/&amp;lt;NAME&amp;gt;/&amp;lt;PROVIDER&amp;gt;&lt;/code&gt; 인 모든 레지스트리 모듈을 참조 할 수 있습니다 . 레지스트리의 각 모듈 정보 페이지에는 소스 문자열이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b65ea9a67ceb8e232d6ae1a9c8712ff195d6ed61" translate="yes" xml:space="preserve">
          <source>The repository and the team must both belong to the same organization on Github. This resource does not actually &lt;em&gt;create&lt;/em&gt; any repositories; to do that, see &lt;a href=&quot;repository&quot;&gt;&lt;code&gt;github_repository&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">리포지토리와 팀은 모두 Github의 동일한 조직에 속해야합니다. 이 자원은 실제로 저장소를 &lt;em&gt;작성&lt;/em&gt; 하지 않습니다 . 그렇게하려면 &lt;a href=&quot;repository&quot;&gt; &lt;code&gt;github_repository&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="af1d0c9b44a8a683db5148894ff04d0d0bb4629f" translate="yes" xml:space="preserve">
          <source>The requested token TTL can be controlled by the &lt;code&gt;max_lease_ttl_seconds&lt;/code&gt; provider argument described below. It is important to consider that Terraform reads from data sources during the &lt;code&gt;plan&lt;/code&gt; phase and writes the result into the plan. Thus a subsequent &lt;code&gt;apply&lt;/code&gt; will likely fail if it is run after the intermediate token has expired, due to the revocation of the secrets that are stored in the plan.</source>
          <target state="translated">요청 된 토큰 TTL은 아래 설명 된 &lt;code&gt;max_lease_ttl_seconds&lt;/code&gt; 공급자 인수 로 제어 할 수 있습니다 . Terraform은 &lt;code&gt;plan&lt;/code&gt; 단계 에서 데이터 소스에서 읽고 결과를 계획에 씁니다. 따라서 계획에 저장된 비밀의 해지로 인해 중간 토큰이 만료 된 후에 실행되면 후속 &lt;code&gt;apply&lt;/code&gt; 이 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92f8fef81db2e52580d79343a6dfb7e9094d54fd" translate="yes" xml:space="preserve">
          <source>The required &lt;code&gt;settings&lt;/code&gt; block supports:</source>
          <target state="translated">필수 &lt;code&gt;settings&lt;/code&gt; 블록은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="182902ef4e99fd12f4f0991bfd856b087f29c481" translate="yes" xml:space="preserve">
          <source>The required arguments for this resource vary depending on the type of data source selected (via the &lt;code&gt;type&lt;/code&gt; argument). The following example is for InfluxDB. See &lt;a href=&quot;http://docs.grafana.org/#data-sources-guides&quot;&gt;Grafana's &lt;em&gt;Data Sources Guides&lt;/em&gt;&lt;/a&gt; for more details on the supported data source types and the arguments they use.</source>
          <target state="translated">이 자원에 필요한 인수는 ( &lt;code&gt;type&lt;/code&gt; 인수 를 통해) 선택한 데이터 소스의 유형에 따라 다릅니다 . 다음 예제는 InfluxDB에 대한 것입니다. 지원되는 데이터 소스 유형 및 이들이 사용하는 인수에 대한 자세한 내용 은 &lt;a href=&quot;http://docs.grafana.org/#data-sources-guides&quot;&gt;Grafana의 &lt;em&gt;데이터 소스 안내서&lt;/em&gt;&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="83b176312f93d7ae49a92ef2348a49aee543b674" translate="yes" xml:space="preserve">
          <source>The resource &lt;code&gt;random_id&lt;/code&gt; generates random numbers that are intended to be used as unique identifiers for other resources.</source>
          <target state="translated">&lt;code&gt;random_id&lt;/code&gt; 자원 은 다른 자원의 고유 식별자로 사용되는 난수를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f8fc05571867a20bcadd1f705c6d651d8942a91e" translate="yes" xml:space="preserve">
          <source>The resource &lt;code&gt;random_integer&lt;/code&gt; generates random values from a given range, described by the &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; attributes of a given resource.</source>
          <target state="translated">&lt;code&gt;random_integer&lt;/code&gt; 자원 은 주어진 자원 의 &lt;code&gt;min&lt;/code&gt; 및 &lt;code&gt;max&lt;/code&gt; 속성으로 설명되는 주어진 범위에서 임의의 값을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="2bac9eb6573c22694c870a5b3160c45c61d8ea58" translate="yes" xml:space="preserve">
          <source>The resource &lt;code&gt;random_pet&lt;/code&gt; generates random pet names that are intended to be used as unique identifiers for other resources.</source>
          <target state="translated">&lt;code&gt;random_pet&lt;/code&gt; 리소스 는 다른 리소스의 고유 식별자로 사용되는 임의의 애완 동물 이름을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c308501b869dea4cb73bd69f291d591b50ece9c8" translate="yes" xml:space="preserve">
          <source>The resource &lt;code&gt;random_shuffle&lt;/code&gt; generates a random permutation of a list of strings given as an argument.</source>
          <target state="translated">&lt;code&gt;random_shuffle&lt;/code&gt; 자원 은 인수로 제공된 문자열 목록의 무작위 순열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="a41f9a72893dae03f955e72cc21c70032685328a" translate="yes" xml:space="preserve">
          <source>The resource &lt;code&gt;random_string&lt;/code&gt; generates a random permutation of alphanumeric characters and optionally special characters.</source>
          <target state="translated">&lt;code&gt;random_string&lt;/code&gt; 자원 은 영숫자 및 선택적으로 특수 문자의 무작위 순열을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="cea9c0e3691edd4b5a9eb12fad635e530cd60aa4" translate="yes" xml:space="preserve">
          <source>The resource data source can be used to search for and return any existing ProfitBricks resource and optionally their group associations. You can provide a string for the resource type (datacenter,image,snapshot,ipblock) and/or resource id parameters which will be queries against available resources. If a single match is found, it will be returned. If your search results in multiple matches, an error will be generated. When this happens, please refine your search string so that it is specific enough to return only one result.</source>
          <target state="translated">자원 데이터 소스를 사용하여 기존 ProfitBricks 자원 및 선택적으로 해당 그룹 연관을 검색하고 리턴 할 수 있습니다. 사용 가능한 리소스에 대한 쿼리가 될 리소스 유형 (데이터 센터, 이미지, 스냅 샷, ipblock) 및 / 또는 리소스 ID 매개 변수에 대한 문자열을 제공 할 수 있습니다. 하나의 일치하는 것이 있으면 반환됩니다. 검색 결과가 여러 번 일치하면 오류가 발생합니다. 이 경우 하나의 결과 만 반환 할 수 있도록 검색 문자열을 세분화하십시오.</target>
        </trans-unit>
        <trans-unit id="1c165b06c52be4015c45a4c620c66d1b5e352c96" translate="yes" xml:space="preserve">
          <source>The resource exports the following attributes:</source>
          <target state="translated">자원은 다음 속성을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="b972b4448fbc97410056f122025d768f3a2c367f" translate="yes" xml:space="preserve">
          <source>The resource makes use of the following data sources to do its job: &lt;a href=&quot;../d/datacenter&quot;&gt;&lt;code&gt;vsphere_datacenter&lt;/code&gt;&lt;/a&gt; to locate the datacenter, &lt;a href=&quot;../d/datastore&quot;&gt;&lt;code&gt;vsphere_datastore&lt;/code&gt;&lt;/a&gt; to locate the default datastore to put the virtual machine in, &lt;a href=&quot;../d/resource_pool&quot;&gt;&lt;code&gt;vsphere_resource_pool&lt;/code&gt;&lt;/a&gt; to locate a resource pool located in a cluster or standalone host, and &lt;a href=&quot;../d/network&quot;&gt;&lt;code&gt;vsphere_network&lt;/code&gt;&lt;/a&gt; to locate a network.</source>
          <target state="translated">자원은 다음 데이터 소스를 사용하여 작업을 수행합니다. &lt;a href=&quot;../d/datacenter&quot;&gt; &lt;code&gt;vsphere_datacenter&lt;/code&gt; &lt;/a&gt; 는 데이터 센터를 찾고, &lt;a href=&quot;../d/datastore&quot;&gt; &lt;code&gt;vsphere_datastore&lt;/code&gt; &lt;/a&gt; 는 가상 머신을 배치 할 기본 데이터 저장소 를 찾고 , &lt;a href=&quot;../d/resource_pool&quot;&gt; &lt;code&gt;vsphere_resource_pool&lt;/code&gt; &lt;/a&gt; 은 클러스터 또는 독립형 호스트에 위치한 자원 풀을 찾고, &lt;a href=&quot;../d/network&quot;&gt; &lt;code&gt;vsphere_network&lt;/code&gt; &lt;/a&gt; 는 네트워크를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="7163d4ee81058e1dd81255b0a5b50bd283cb03c4" translate="yes" xml:space="preserve">
          <source>The resource provides a piece of networked storage in the cluster provisioned by an administrator. It is a resource in the cluster just like a node is a cluster resource. Persistent Volumes have a lifecycle independent of any individual pod that uses the PV.</source>
          <target state="translated">리소스는 관리자가 프로비저닝 한 클러스터의 네트워크 스토리지를 제공합니다. 노드가 클러스터 리소스 인 것처럼 클러스터의 리소스입니다. 영구 볼륨에는 PV를 사용하는 개별 포드와 무관 한 수명주기가 있습니다.</target>
        </trans-unit>
        <trans-unit id="27af452a7f10798a6a80ebee10c551b9851d8e80" translate="yes" xml:space="preserve">
          <source>The resource provides mechanisms to inject containers with configuration data while keeping containers agnostic of Kubernetes. Config Map can be used to store fine-grained information like individual properties or coarse-grained information like entire config files or JSON blobs.</source>
          <target state="translated">이 리소스는 컨테이너를 Kubernetes와 무관하게 유지하면서 컨테이너에 구성 데이터를 주입하는 메커니즘을 제공합니다. 구성 맵은 개별 특성과 같은 세분화 된 정보 또는 전체 구성 파일 또는 JSON Blob과 같은 세분화 된 정보를 저장하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c74c27a7c9151e29a6532558f70b3d7258463bf" translate="yes" xml:space="preserve">
          <source>The resource provides mechanisms to inject containers with sensitive information, such as passwords, while keeping containers agnostic of Kubernetes. Secrets can be used to store sensitive information either as individual properties or coarse-grained entries like entire files or JSON blobs. The resource will by default create a secret which is available to any pod in the specified (or default) namespace.</source>
          <target state="translated">리소스는 컨테이너를 Kubernetes와 무관하게 유지하면서 암호와 같은 민감한 정보를 컨테이너에 주입하는 메커니즘을 제공합니다. 비밀은 개별 속성 또는 전체 파일 또는 JSON Blob과 같은 굵은 항목으로 민감한 정보를 저장하는 데 사용될 수 있습니다. 리소스는 기본적으로 지정된 (또는 기본) 네임 스페이스의 모든 포드에서 사용할 수있는 비밀을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="51cc646810be7cb640caa644f6293921f22de038" translate="yes" xml:space="preserve">
          <source>The resources all provide a map argument called &lt;code&gt;keepers&lt;/code&gt; that can be populated with arbitrary key/value pairs that should be selected such that they remain the same until new random values are desired.</source>
          <target state="translated">모든 자원 은 새로운 임의의 값이 필요할 때까지 동일하게 유지되도록 선택해야하는 임의의 키 / 값 쌍으로 채워질 수있는 &lt;code&gt;keepers&lt;/code&gt; 라는 맵 인수를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="44cfe5ed1705a0b7bf74e5c43eceef85ed1b3136" translate="yes" xml:space="preserve">
          <source>The resources created by the test are destroyed. This step happens automatically, and is the equivalent of calling &lt;code&gt;terraform destroy&lt;/code&gt;.</source>
          <target state="translated">테스트에 의해 생성 된 리소스는 파괴됩니다. 이 단계는 자동으로 수행되며 &lt;code&gt;terraform destroy&lt;/code&gt; 호출과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="b2042de2b14ad16e98f382bc9ffe5186872d2dc3" translate="yes" xml:space="preserve">
          <source>The resources listed are sorted according to module depth order followed by alphabetical. This means that resources that are in your immediate configuration are listed first, and resources that are more deeply nested within modules are listed last.</source>
          <target state="translated">나열된 리소스는 모듈 깊이 순서에 따라 알파벳순으로 정렬됩니다. 즉, 즉시 구성중인 리소스가 먼저 나열되고 모듈 내에보다 깊이 중첩 된 리소스가 마지막에 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="7c7a6a7bc8efb03dde7b5cfcfb8da9545a5105fe" translate="yes" xml:space="preserve">
          <source>The response for a paginated result set will look like:</source>
          <target state="translated">페이지 매김 결과 집합에 대한 응답은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5d9ae57aa8a84571805a2d5721dad1d960c4d33f" translate="yes" xml:space="preserve">
          <source>The result of the above will set a random priority.</source>
          <target state="translated">위의 결과는 임의의 우선 순위를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="51165fc318e782417b739031c38a5865fe127e54" translate="yes" xml:space="preserve">
          <source>The result of the above will set the Name of the AWS Instance to &lt;code&gt;web-server-simple-snake&lt;/code&gt;.</source>
          <target state="translated">위의 결과는 AWS 인스턴스의 이름을 &lt;code&gt;web-server-simple-snake&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="3e34907ffbda6837074898777b5ba10e2973eb4d" translate="yes" xml:space="preserve">
          <source>The result will be that &lt;code&gt;baz&lt;/code&gt; will contain the value &lt;code&gt;bar&lt;/code&gt; because &lt;code&gt;bar.tfvars&lt;/code&gt; has the last definition loaded.</source>
          <target state="translated">결과는 것이 될 것입니다 &lt;code&gt;baz&lt;/code&gt; 값이 포함됩니다 &lt;code&gt;bar&lt;/code&gt; 때문에 &lt;code&gt;bar.tfvars&lt;/code&gt; 는 마지막으로로드 정의를 가지고있다.</target>
        </trans-unit>
        <trans-unit id="48ee202aab9d0b08d5a619118db3e38168ceb722" translate="yes" xml:space="preserve">
          <source>The resulting value of &lt;code&gt;foo&lt;/code&gt; will be:</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; 의 결과 값 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9c5d69cabbea02e65fe1d24f6df23a7f8c07df93" translate="yes" xml:space="preserve">
          <source>The same rules apply for migration as they do for VM creation - any host specified needs to be a part of the resource pool supplied. Also keep in mind the implications of moving the virtual machine to a resource pool in another cluster or standalone host, namely ensuring that all hosts in the cluster (or the single standalone host) have access to the datastore that the virtual machine is in.</source>
          <target state="translated">VM 생성과 동일한 규칙이 마이그레이션에 적용됩니다. 지정된 호스트는 제공된 리소스 풀의 일부 여야합니다. 또한 가상 시스템을 다른 클러스터 또는 독립형 호스트의 리소스 풀로 이동하면 클러스터의 모든 호스트 (또는 단일 독립형 호스트)가 가상 시스템이있는 데이터 스토어에 액세스 할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="153e7a418e86b1fe6d6ece43c8aa51de2316e65b" translate="yes" xml:space="preserve">
          <source>The same settings can alternatively be specified on the command line as follows:</source>
          <target state="translated">명령 줄에서 다음과 같이 동일한 설정을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="466669c5a374d82c17b9aa3ef9a19b4a77c2e7d5" translate="yes" xml:space="preserve">
          <source>The sample architecture introduced here includes the following resources:</source>
          <target state="translated">여기에 소개 된 샘플 아키텍처에는 다음 리소스가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="3adabc2aad25214b60844dd3b49cdee94ff8eac0" translate="yes" xml:space="preserve">
          <source>The schema above defines one element, &lt;code&gt;&quot;address&quot;&lt;/code&gt;, which is a required string. Terraform's schema automatically enforces validation and type casting.</source>
          <target state="translated">위의 스키마 는 필수 문자열 인 &lt;code&gt;&quot;address&quot;&lt;/code&gt; 요소를 정의 합니다. Terraform의 스키마는 자동으로 유효성 검사 및 유형 캐스팅을 시행합니다.</target>
        </trans-unit>
        <trans-unit id="601cbf1bafa91d8124132e58f4f97cdf7f3eb849" translate="yes" xml:space="preserve">
          <source>The schema attribute &lt;code&gt;Type&lt;/code&gt; determines what data is valid in configuring the element, as well as the type of data returned when used in &lt;a href=&quot;../../configuration/interpolation&quot;&gt;interpolation&lt;/a&gt;. Schemas attributes must be one of the types defined below, and can be loosely categorized as either &lt;strong&gt;Primitive&lt;/strong&gt; or &lt;strong&gt;Aggregate&lt;/strong&gt; types:</source>
          <target state="translated">스키마 속성 &lt;code&gt;Type&lt;/code&gt; 은 요소를 구성 할 때 유효한 데이터와 &lt;a href=&quot;../../configuration/interpolation&quot;&gt;보간에&lt;/a&gt; 사용될 때 반환되는 데이터 유형을 결정합니다 . 스키마 속성은 아래에 정의 된 유형 중 하나 여야하며 &lt;strong&gt;기본&lt;/strong&gt; 또는 &lt;strong&gt;집계&lt;/strong&gt; 유형 으로 느슨하게 분류 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c1ad955da0ffcb489fae71664ab250d439e6df67" translate="yes" xml:space="preserve">
          <source>The second line points to the exact line of code that caused the panic, which--combined with the panic message itself--is normally enough for a developer to quickly figure out the cause of the issue.</source>
          <target state="translated">두 번째 줄은 패닉 메시지 자체와 결합 된 패닉을 야기한 정확한 코드 라인을 나타내며, 일반적으로 개발자가 문제의 원인을 신속하게 파악하기에 충분합니다.</target>
        </trans-unit>
        <trans-unit id="2bc3896fafc6313b4552746a1d4ff4990f5c743a" translate="yes" xml:space="preserve">
          <source>The second mechanism is optional, and affects ASGs with attached ELBs specified via the &lt;code&gt;load_balancers&lt;/code&gt; attribute or with ALBs specified with &lt;code&gt;target_group_arns&lt;/code&gt;.</source>
          <target state="translated">두번째 메커니즘은 선택적이며, 특정 부착 ELB를 통해 함께 ASGs 영향 &lt;code&gt;load_balancers&lt;/code&gt; 의 특성 또는 지정된 ALBs으로 &lt;code&gt;target_group_arns&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="1850f81b701a522fea4c28bc687d0e7ac7687e77" translate="yes" xml:space="preserve">
          <source>The servers mapping supports the following:</source>
          <target state="translated">서버 매핑은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a114effba2cccb84a92b0778bcd67f851c31b3c3" translate="yes" xml:space="preserve">
          <source>The service account used to run Terraform when creating a &lt;code&gt;google_folder&lt;/code&gt; resource must have &lt;code&gt;roles/resourcemanager.folderCreator&lt;/code&gt;. See the &lt;a href=&quot;https://cloud.google.com/resource-manager/docs/access-control-folders&quot;&gt;Access Control for Folders Using IAM&lt;/a&gt; doc for more information.</source>
          <target state="translated">&lt;code&gt;google_folder&lt;/code&gt; 리소스를 생성 할 때 Terraform을 실행하는 데 사용되는 서비스 계정 에는 &lt;code&gt;roles/resourcemanager.folderCreator&lt;/code&gt; 가 있어야합니다 . 자세한 내용은 &lt;a href=&quot;https://cloud.google.com/resource-manager/docs/access-control-folders&quot;&gt;IAM을 사용하는 폴더&lt;/a&gt; 의 액세스 제어 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d96eff483cb0901f4d786ad879aa0f2b07e36e82" translate="yes" xml:space="preserve">
          <source>The service account used to run Terraform when creating a &lt;code&gt;google_project&lt;/code&gt; resource must have &lt;code&gt;roles/resourcemanager.projectCreator&lt;/code&gt;. See the &lt;a href=&quot;https://cloud.google.com/resource-manager/docs/access-control-org&quot;&gt;Access Control for Organizations Using IAM&lt;/a&gt; doc for more information.</source>
          <target state="translated">&lt;code&gt;google_project&lt;/code&gt; 리소스를 만들 때 Terraform을 실행하는 데 사용되는 서비스 계정 에는 &lt;code&gt;roles/resourcemanager.projectCreator&lt;/code&gt; 가 있어야합니다 . 자세한 내용은 &lt;a href=&quot;https://cloud.google.com/resource-manager/docs/access-control-org&quot;&gt;IAM을 사용하는 조직&lt;/a&gt; 의 액세스 제어 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="619dc505c607eb9f4a484fe02490c6a36ab66453" translate="yes" xml:space="preserve">
          <source>The service identifier for this protocol is &lt;code&gt;modules.v1&lt;/code&gt;, and the declared URL should always end with a slash such that the paths shown in the following sections can be appended to it.</source>
          <target state="translated">이 프로토콜의 서비스 식별자는 &lt;code&gt;modules.v1&lt;/code&gt; 이며 선언 된 URL은 항상 슬래시로 끝나서 다음 섹션에 표시된 경로를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f3e0eb77bee6d6041cc61a88268f24ec7a4444d" translate="yes" xml:space="preserve">
          <source>The settings for &lt;code&gt;customize&lt;/code&gt; are as follows:</source>
          <target state="translated">&lt;code&gt;customize&lt;/code&gt; 설정 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a0021fb02368001dcef0f495297fb985a68c16fd" translate="yes" xml:space="preserve">
          <source>The settings here must match the IP/mask of at least one &lt;code&gt;network_interface&lt;/code&gt; supplied to customization.</source>
          <target state="translated">여기에서의 설정 은 사용자 정의에 제공된 하나 이상의 &lt;code&gt;network_interface&lt;/code&gt; 의 IP / 마스크와 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="aae2177ed56a652e799980b6d3d6e18281c4fecf" translate="yes" xml:space="preserve">
          <source>The settings in the &lt;code&gt;linux_options&lt;/code&gt; sub-resource pertain to Linux guest OS customization. If you are customizing a Linux operating system, this section must be included.</source>
          <target state="translated">&lt;code&gt;linux_options&lt;/code&gt; 하위 자원 의 설정은 Linux 게스트 OS 사용자 정의와 관련이 있습니다. Linux 운영 체제를 사용자 정의하는 경우이 섹션이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="f0d5ab5bd43f78a74d68ba87a412bd81b8bb1a27" translate="yes" xml:space="preserve">
          <source>The settings in the &lt;code&gt;windows_options&lt;/code&gt; sub-resource pertain to Windows guest OS customization. If you are customizing a Windows operating system, this section must be included.</source>
          <target state="translated">&lt;code&gt;windows_options&lt;/code&gt; 하위 리소스 의 설정은 Windows 게스트 OS 사용자 지정과 관련이 있습니다. Windows 운영 체제를 사용자 정의하는 경우이 섹션이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="cf95e52c57391005990daf2cd7ea48eb6afb78ae" translate="yes" xml:space="preserve">
          <source>The simplest way to expose your application to users is via &lt;a href=&quot;https://kubernetes.io/docs/concepts/services-networking/service/&quot;&gt;Service&lt;/a&gt;. Service is capable of provisioning a load-balancer in some cloud providers and managing the relationship between pods and that load balancer as new pods are launched and others die for any reason.</source>
          <target state="translated">응용 프로그램을 사용자에게 노출시키는 가장 간단한 방법은 &lt;a href=&quot;https://kubernetes.io/docs/concepts/services-networking/service/&quot;&gt;서비스&lt;/a&gt; 를 이용하는 것입니다 . 서비스는 일부 클라우드 공급자에서로드 밸런서를 프로비저닝 할 수 있으며 새 포드가 시작되고 어떤 이유로 든 다른 포드가 죽으면 포드와 해당로드 밸런서 간의 관계를 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="65c4a1a6bb0ed33bd4a152f19756616a5613b028" translate="yes" xml:space="preserve">
          <source>The snapshots data source can be used to search for and return an existing snapshot which can then be used to provision a server.</source>
          <target state="translated">스냅 샷 데이터 소스를 사용하여 기존 스냅 샷을 검색하고 반환 한 다음 서버를 프로비저닝하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0a9c990f2f1bdbee8ac24cd01790d7ff21a27d7" translate="yes" xml:space="preserve">
          <source>The source tells Terraform what to create. In this example, we instantiate the &lt;a href=&quot;https://registry.terraform.io/modules/hashicorp/consul/aws&quot;&gt;Consul module for AWS&lt;/a&gt; from the &lt;a href=&quot;https://registry.terraform.io&quot;&gt;Terraform Registry&lt;/a&gt;. Other source types are supported, as described in the following section.</source>
          <target state="translated">소스는 Terraform에게 무엇을 만들지 알려줍니다. 이 예에서는 &lt;a href=&quot;https://registry.terraform.io&quot;&gt;Terraform Registry&lt;/a&gt; 에서 &lt;a href=&quot;https://registry.terraform.io/modules/hashicorp/consul/aws&quot;&gt;AWS 용 Consul 모듈을&lt;/a&gt; 인스턴스화합니다 . 다음 섹션에 설명 된대로 다른 소스 유형이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="b56f6497db4fd8781cf4e4f83ece937ca5c9be19" translate="yes" xml:space="preserve">
          <source>The special &lt;code&gt;path_part&lt;/code&gt; value &lt;code&gt;&quot;{proxy+}&quot;&lt;/code&gt; activates proxy behavior, which means that this resource will match &lt;em&gt;any&lt;/em&gt; request path. Similarly, the &lt;code&gt;aws_api_gateway_method&lt;/code&gt; block uses a &lt;code&gt;http_method&lt;/code&gt; of &lt;code&gt;&quot;ANY&quot;&lt;/code&gt;, which allows any request method to be used. Taken together, this means that all incoming requests will match this resource.</source>
          <target state="translated">특수한 &lt;code&gt;path_part&lt;/code&gt; 값 &lt;code&gt;&quot;{proxy+}&quot;&lt;/code&gt; 는 프록시 동작을 활성화합니다. 즉,이 리소스는 &lt;em&gt;모든&lt;/em&gt; 요청 경로 와 일치 &lt;em&gt;합니다&lt;/em&gt; . 마찬가지로 &lt;code&gt;aws_api_gateway_method&lt;/code&gt; 블록은 사용 &lt;code&gt;http_method&lt;/code&gt; 의 &lt;code&gt;&quot;ANY&quot;&lt;/code&gt; 어떤 요청 방식이 사용될 수 있도록한다. 종합하면 이는 들어오는 모든 요청이이 리소스와 일치한다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="04fc82b65980f304c3efa6640fb362966b7ee574" translate="yes" xml:space="preserve">
          <source>The special arguments &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt; and &lt;code&gt;providers&lt;/code&gt; are exceptions. These are used for special purposes by Terraform and should therefore not be used as variable names within a module.</source>
          <target state="translated">특수 인수 &lt;code&gt;source&lt;/code&gt; , &lt;code&gt;version&lt;/code&gt; 및 &lt;code&gt;providers&lt;/code&gt; 는 예외입니다. 이들은 Terraform의 특수 목적으로 사용되므로 모듈 내에서 변수 이름으로 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="052821dd7871d575d3ad0fa8c897b4233b1be0a6" translate="yes" xml:space="preserve">
          <source>The specified RDS instance must be in running status.</source>
          <target state="translated">지정된 RDS 인스턴스가 실행 중 상태 여야합니다.</target>
        </trans-unit>
        <trans-unit id="f7fa13f3bba284a1d9004a578a1c7263fc594cbe" translate="yes" xml:space="preserve">
          <source>The specified RDS instance&amp;rsquo;s whitelist must have room for more IP addresses.</source>
          <target state="translated">지정된 RDS 인스턴스의 화이트리스트에는 추가 IP 주소를위한 공간이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="832ed1abb9e7b964ae08a2342d4d82ca914b1ce1" translate="yes" xml:space="preserve">
          <source>The standard module expects the structure documented below. The list may appear long, but everything is optional except for the root module. All items are documented in detail. Most modules don't need to do any work to follow the standard structure.</source>
          <target state="translated">표준 모듈은 아래에 문서화 된 구조를 예상합니다. 목록은 길게 나타날 수 있지만 루트 모듈을 제외한 모든 옵션은 선택 사항입니다. 모든 항목이 자세히 설명되어 있습니다. 대부분의 모듈은 표준 구조를 따르기 위해 어떤 작업도 수행 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="6760f760417b674f8dea534cd24668e7a487997f" translate="yes" xml:space="preserve">
          <source>The standard module structure is a file and folder layout we recommend for reusable modules. Terraform tooling is built to understand the standard module structure and use that structure to generate documentation, index modules for the registry, and more.</source>
          <target state="translated">표준 모듈 구조는 재사용 가능한 모듈에 권장되는 파일 및 폴더 레이아웃입니다. Terraform 툴링은 표준 모듈 구조를 이해하고 해당 구조를 사용하여 문서, 레지스트리의 색인 모듈 등을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="ab40e8a351726d73fb8a1789d1aa1f6f4c18b087" translate="yes" xml:space="preserve">
          <source>The state is in JSON format and Terraform will promise backwards compatibility with the state file. The JSON format makes it easy to write tools around the state if you want or to modify it by hand in the case of a Terraform bug. The &quot;version&quot; field on the state contents allows us to transparently move the format forward if we make modifications.</source>
          <target state="translated">상태는 JSON 형식이며 Terraform은 상태 파일과의 호환성을 약속합니다. Terraform 버그의 경우 JSON 형식을 사용하면 원하는 상태로 도구를 쉽게 작성하거나 직접 수정할 수 있습니다. 상태 내용의 &quot;version&quot;필드를 사용하면 수정하면 형식을 투명하게 앞으로 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf55b729de7b9fce9caf06ef0fff29fedd3d42da" translate="yes" xml:space="preserve">
          <source>The state will only be saved on successful removal of all addresses. If any specific address errors for any reason (such as a syntax error), the state will not be modified at all.</source>
          <target state="translated">모든 주소를 성공적으로 제거하면 상태가 저장됩니다. 어떤 이유로 든 특정 주소 오류 (예 : 구문 오류)가 발생하면 상태가 전혀 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a8a2fbbfd3a35d130af96e4b0b6627bf5d14f0fe" translate="yes" xml:space="preserve">
          <source>The supported built-in functions are:</source>
          <target state="translated">지원되는 내장 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="74e9f30451858b9b619fab8eb6c32041b9ccf4ec" translate="yes" xml:space="preserve">
          <source>The supported operations are:</source>
          <target state="translated">지원되는 작업은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="44a026234629b4302a19be2bf06b986557d1b0d0" translate="yes" xml:space="preserve">
          <source>The supported operators are:</source>
          <target state="translated">지원되는 연산자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="937a3de92014164f4980612992f147227599a668" translate="yes" xml:space="preserve">
          <source>The switching profile data source provides information about switching profiles configured in NSX. A switching profile is a template that defines the settings of one or more logical switches. There can be both factory default and user defined switching profiles. One example of a switching profile is a quality of service (QoS) profile which defines the QoS settings of all switches that use the defined switch profile.</source>
          <target state="translated">스위칭 프로파일 데이터 소스는 NSX에 구성된 스위칭 프로파일에 대한 정보를 제공합니다. 스위칭 프로파일은 하나 이상의 논리적 스위치 설정을 정의하는 템플릿입니다. 공장 기본값과 사용자 정의 스위칭 프로파일이 모두있을 수 있습니다. 스위칭 프로파일의 한 예는 정의 된 스위치 프로파일을 사용하는 모든 스위치의 QoS 설정을 정의하는 QoS (Quality of Service) 프로파일입니다.</target>
        </trans-unit>
        <trans-unit id="f11945754ed21846e5e3f4c90eb397faca389411" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;&quot;${var.LIST}&quot;&lt;/code&gt;. For example, &lt;code&gt;&quot;${var.subnets}&quot;&lt;/code&gt; would get the value of the &lt;code&gt;subnets&lt;/code&gt; list, as a list. You can also return list elements by index: &lt;code&gt;${var.subnets[idx]}&lt;/code&gt;.</source>
          <target state="translated">구문은 &lt;code&gt;&quot;${var.LIST}&quot;&lt;/code&gt; 입니다. 예를 들어 &lt;code&gt;&quot;${var.subnets}&quot;&lt;/code&gt; 는 &lt;code&gt;subnets&lt;/code&gt; 목록 의 값을 목록으로 가져옵니다 . &lt;code&gt;${var.subnets[idx]}&lt;/code&gt; 색인으로 목록 요소를 리턴 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="006391b81deacd338647bc9c578e7a6f21f3ff0f" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;MODULE.NAME.OUTPUT&lt;/code&gt;. For example &lt;code&gt;${module.foo.bar}&lt;/code&gt; will interpolate the &lt;code&gt;bar&lt;/code&gt; output from the &lt;code&gt;foo&lt;/code&gt;&lt;a href=&quot;../modules/index&quot;&gt;module&lt;/a&gt;.</source>
          <target state="translated">구문은 &lt;code&gt;MODULE.NAME.OUTPUT&lt;/code&gt; 입니다. 예를 들어 &lt;code&gt;${module.foo.bar}&lt;/code&gt; 는 &lt;code&gt;foo&lt;/code&gt; &lt;a href=&quot;../modules/index&quot;&gt;모듈&lt;/a&gt; 의 &lt;code&gt;bar&lt;/code&gt; 출력을 보간합니다 .</target>
        </trans-unit>
        <trans-unit id="68f33922ffef5804ae5e31cba0eb340ba8ac4180" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;TYPE.NAME.ATTRIBUTE&lt;/code&gt;. For example, &lt;code&gt;${aws_instance.web.id}&lt;/code&gt; will interpolate the ID attribute from the &lt;code&gt;aws_instance&lt;/code&gt; resource named &lt;code&gt;web&lt;/code&gt;. If the resource has a &lt;code&gt;count&lt;/code&gt; attribute set, you can access individual attributes with a zero-based index, such as &lt;code&gt;${aws_instance.web.0.id}&lt;/code&gt;. You can also use the splat syntax to get a list of all the attributes: &lt;code&gt;${aws_instance.web.*.id}&lt;/code&gt;.</source>
          <target state="translated">구문은 &lt;code&gt;TYPE.NAME.ATTRIBUTE&lt;/code&gt; 입니다. 예를 들어 &lt;code&gt;${aws_instance.web.id}&lt;/code&gt; 는 &lt;code&gt;web&lt;/code&gt; 이라는 &lt;code&gt;aws_instance&lt;/code&gt; 리소스 에서 ID 속성을 보간합니다 . 자원에 &lt;code&gt;count&lt;/code&gt; 속성이 설정되어 있으면 &lt;code&gt;${aws_instance.web.0.id}&lt;/code&gt; 와 같이 0부터 시작하는 색인으로 개별 속성에 액세스 할 수 있습니다 . splat 구문을 사용하여 &lt;code&gt;${aws_instance.web.*.id}&lt;/code&gt; 의 모든 속성 목록을 가져올 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f8236a78b666d964f0ddb0714d1866da4b51e61e" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;count.FIELD&lt;/code&gt;. For example, &lt;code&gt;${count.index}&lt;/code&gt; will interpolate the current index in a multi-count resource. For more information on &lt;code&gt;count&lt;/code&gt;, see the &lt;a href=&quot;resources&quot;&gt;resource configuration page&lt;/a&gt;.</source>
          <target state="translated">구문은 &lt;code&gt;count.FIELD&lt;/code&gt; 입니다. 예를 들어 &lt;code&gt;${count.index}&lt;/code&gt; 는 다중 계수 자원에서 현재 색인을 보간합니다. &lt;code&gt;count&lt;/code&gt; 에 대한 자세한 내용 은 &lt;a href=&quot;resources&quot;&gt;리소스 구성 페이지를 참조하십시오.&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8cbd925b3b2dba2a85b4684fa57403760db955b1" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;data.TYPE.NAME.ATTRIBUTE&lt;/code&gt;. For example. &lt;code&gt;${data.aws_ami.ubuntu.id}&lt;/code&gt; will interpolate the &lt;code&gt;id&lt;/code&gt; attribute from the &lt;code&gt;aws_ami&lt;/code&gt;&lt;a href=&quot;data-sources&quot;&gt;data source&lt;/a&gt; named &lt;code&gt;ubuntu&lt;/code&gt;. If the data source has a &lt;code&gt;count&lt;/code&gt; attribute set, you can access individual attributes with a zero-based index, such as &lt;code&gt;${data.aws_subnet.example.0.cidr_block}&lt;/code&gt;. You can also use the splat syntax to get a list of all the attributes: &lt;code&gt;${data.aws_subnet.example.*.cidr_block}&lt;/code&gt;.</source>
          <target state="translated">구문은 &lt;code&gt;data.TYPE.NAME.ATTRIBUTE&lt;/code&gt; 입니다. 예를 들어. &lt;code&gt;${data.aws_ami.ubuntu.id}&lt;/code&gt; 는 &lt;code&gt;ubuntu&lt;/code&gt; 라는 &lt;code&gt;aws_ami&lt;/code&gt; &lt;a href=&quot;data-sources&quot;&gt;데이터 소스&lt;/a&gt; 의 &lt;code&gt;id&lt;/code&gt; 속성을 보간합니다 . 데이터 소스에 &lt;code&gt;count&lt;/code&gt; 속성이 설정되어 있으면 &lt;code&gt;${data.aws_subnet.example.0.cidr_block}&lt;/code&gt; 과 같이 0부터 시작하는 인덱스를 사용하여 개별 속성에 액세스 할 수 있습니다 . splat 구문을 사용하여 &lt;code&gt;${data.aws_subnet.example.*.cidr_block}&lt;/code&gt; 의 모든 속성 목록을 가져올 수도 있습니다 . .</target>
        </trans-unit>
        <trans-unit id="ee768297da108e7275cd69fc04af81c32638e439" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;path.TYPE&lt;/code&gt;. TYPE can be &lt;code&gt;cwd&lt;/code&gt;, &lt;code&gt;module&lt;/code&gt;, or &lt;code&gt;root&lt;/code&gt;. &lt;code&gt;cwd&lt;/code&gt; will interpolate the current working directory. &lt;code&gt;module&lt;/code&gt; will interpolate the path to the current module. &lt;code&gt;root&lt;/code&gt; will interpolate the path of the root module. In general, you probably want the &lt;code&gt;path.module&lt;/code&gt; variable.</source>
          <target state="translated">구문은 &lt;code&gt;path.TYPE&lt;/code&gt; 입니다. TYPE은 &lt;code&gt;cwd&lt;/code&gt; , &lt;code&gt;module&lt;/code&gt; 또는 &lt;code&gt;root&lt;/code&gt; 일 수 있습니다 . &lt;code&gt;cwd&lt;/code&gt; 는 현재 작업 디렉토리를 보간합니다. &lt;code&gt;module&lt;/code&gt; 은 현재 모듈의 경로를 보간합니다. &lt;code&gt;root&lt;/code&gt; 는 루트 모듈의 경로를 보간합니다. 일반적으로 &lt;code&gt;path.module&lt;/code&gt; 변수를 원할 것입니다 .</target>
        </trans-unit>
        <trans-unit id="da0324280111911c82f03a111ec89e10fc75efb9" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;self.ATTRIBUTE&lt;/code&gt;. For example &lt;code&gt;${self.private_ip}&lt;/code&gt; will interpolate that resource's private IP address.</source>
          <target state="translated">구문은 &lt;code&gt;self.ATTRIBUTE&lt;/code&gt; 입니다. 예를 들어 &lt;code&gt;${self.private_ip}&lt;/code&gt; 는 해당 리소스의 개인 IP 주소를 보간합니다.</target>
        </trans-unit>
        <trans-unit id="59c7e199a9e888f6ec8a6433f63104a82d4b544e" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;terraform.FIELD&lt;/code&gt;. This variable type contains metadata about the currently executing Terraform run. FIELD can currently only be &lt;code&gt;env&lt;/code&gt; to reference the currently active &lt;a href=&quot;../state/environments&quot;&gt;state environment&lt;/a&gt;.</source>
          <target state="translated">구문은 &lt;code&gt;terraform.FIELD&lt;/code&gt; 입니다. 이 변수 유형에는 현재 실행중인 Terraform 실행에 대한 메타 데이터가 포함됩니다. FIELD는 현재 활성 &lt;a href=&quot;../state/environments&quot;&gt;상태 환경&lt;/a&gt; 을 참조하기 위해 현재 &lt;code&gt;env&lt;/code&gt; 만 가능 .</target>
        </trans-unit>
        <trans-unit id="f244672cea7a6db64c8ad8f38382355eee35f38f" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;var.MAP[&quot;KEY&quot;]&lt;/code&gt;. For example, &lt;code&gt;${var.amis[&quot;us-east-1&quot;]}&lt;/code&gt; would get the value of the &lt;code&gt;us-east-1&lt;/code&gt; key within the &lt;code&gt;amis&lt;/code&gt; map variable.</source>
          <target state="translated">구문은 &lt;code&gt;var.MAP[&quot;KEY&quot;]&lt;/code&gt; 입니다. 예를 들어 &lt;code&gt;${var.amis[&quot;us-east-1&quot;]}&lt;/code&gt; 은 &lt;code&gt;amis&lt;/code&gt; 맵 변수 내에서 &lt;code&gt;us-east-1&lt;/code&gt; 키 의 값을 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="dea3e32850ac9de1701010b6bb8822de9f77036a" translate="yes" xml:space="preserve">
          <source>The syntax of &lt;code&gt;depends_on&lt;/code&gt; is a list of resources and modules:</source>
          <target state="translated">&lt;code&gt;depends_on&lt;/code&gt; 의 구문은 리소스 및 모듈 목록입니다.</target>
        </trans-unit>
        <trans-unit id="61d75bd0c429745ba5cceea4ff07d3efe048c6f3" translate="yes" xml:space="preserve">
          <source>The syntax of Terraform configurations is called &lt;a href=&quot;https://github.com/hashicorp/hcl&quot;&gt;HashiCorp Configuration Language (HCL)&lt;/a&gt;. It is meant to strike a balance between human readable and editable as well as being machine-friendly. For machine-friendliness, Terraform can also read JSON configurations. For general Terraform configurations, however, we recommend using the HCL Terraform syntax.</source>
          <target state="translated">Terraform 구성의 구문을 &lt;a href=&quot;https://github.com/hashicorp/hcl&quot;&gt;HCL (HashiCorp Configuration Language)이라고&lt;/a&gt; 합니다. 인간이 읽을 수 있고 편집 할 수있을뿐만 아니라 기계 친화적 인 균형을 유지하기위한 것입니다. 기계 친 화성을 위해 Terraform은 JSON 구성을 읽을 수도 있습니다. 그러나 일반적인 Terraform 구성의 경우 HCL Terraform 구문을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f5e4c7a681666c62e53a4d046215461320257d51" translate="yes" xml:space="preserve">
          <source>The syntax of the given ID is dependent on the resource type being imported. For example, AWS instances use an opaque ID issued by the EC2 API, but AWS Route53 Zones use the domain name itself. Consult the documentation for each importable resource for details on what form of ID is required.</source>
          <target state="translated">지정된 ID의 구문은 가져 오는 리소스 유형에 따라 다릅니다. 예를 들어 AWS 인스턴스는 EC2 API에서 발급 한 불투명 한 ID를 사용하지만 AWS Route53 Zones는 도메인 이름 자체를 사용합니다. 어떤 형태의 ID가 필요한지에 대한 자세한 내용은 각 가져 오기 가능한 리소스의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f1187030f546d43cdac02699f2c1a077e0dfdb1b" translate="yes" xml:space="preserve">
          <source>The syntax of the template files is the same as &lt;a href=&quot;../../../configuration/interpolation&quot;&gt;standard interpolation syntax&lt;/a&gt;, but you only have access to the variables defined in the &lt;code&gt;vars&lt;/code&gt; section.</source>
          <target state="translated">템플릿 파일의 구문은 &lt;a href=&quot;../../../configuration/interpolation&quot;&gt;표준 보간 구문&lt;/a&gt; 과 동일 하지만 &lt;code&gt;vars&lt;/code&gt; 섹션에 정의 된 변수에만 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="87bdbb815f03f4a9ebaa8ea37916963c8f89d992" translate="yes" xml:space="preserve">
          <source>The tags to apply to the resources during launch. You can tag instances and volumes. More information can be found in the &lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_LaunchTemplateTagSpecificationRequest.html&quot;&gt;EC2 API documentation&lt;/a&gt;.</source>
          <target state="translated">시작하는 동안 리소스에 적용 할 태그입니다. 인스턴스 및 볼륨에 태그를 지정할 수 있습니다. 자세한 내용은 &lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_LaunchTemplateTagSpecificationRequest.html&quot;&gt;EC2 API 설명서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="60c436fb3f6cc440944125997440fb2b9633e853" translate="yes" xml:space="preserve">
          <source>The template provider exposes data sources to use templates to generate strings for other Terraform resources or outputs.</source>
          <target state="translated">템플릿 공급자는 템플릿을 사용하여 다른 Terraform 리소스 또는 출력에 대한 문자열을 생성하도록 데이터 소스를 노출합니다.</target>
        </trans-unit>
        <trans-unit id="5edffd09856fe375489b10df23ca082e8383ea15" translate="yes" xml:space="preserve">
          <source>The term &lt;em&gt;state environment&lt;/em&gt;, or just &lt;em&gt;environment&lt;/em&gt;, was used within the Terraform 0.9 releases to refer to the idea of having multiple distinct, named states associated with a single configuration directory.</source>
          <target state="translated">용어 &lt;em&gt;상태 환경&lt;/em&gt; , 또는 단지 &lt;em&gt;환경&lt;/em&gt; , 단일 구성 디렉토리와 관련된 여러 별개라는 상태가있는의 생각을 참조 할 Terraform 0.9 버전에서 사용되었다.</target>
        </trans-unit>
        <trans-unit id="c92e3621230fe99e55ab05198f016366d754695c" translate="yes" xml:space="preserve">
          <source>The terraform CLI is a well-behaved command line application. In erroneous cases, a non-zero exit status will be returned. It also responds to -h and --help as you'd most likely expect.</source>
          <target state="translated">terraform CLI는 올바르게 작동하는 명령 줄 응용 프로그램입니다. 잘못된 경우 0이 아닌 종료 상태가 리턴됩니다. 또한 예상대로 -h 및 --help에 응답합니다.</target>
        </trans-unit>
        <trans-unit id="457e629cb8720237fc397eff48a546b61232bb3b" translate="yes" xml:space="preserve">
          <source>The terraform import function will read in certificate body, certificate chain (if it exists), id, name, path, and arn. It will not retrieve the private key which is not available through the AWS API.</source>
          <target state="translated">terraform 가져 오기 기능은 인증서 본문, 인증서 체인 (있는 경우), id, 이름, 경로 및 arn에서 읽습니다. AWS API를 통해 사용할 수없는 프라이빗 키는 검색하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="be220da4dfa5f31d73facfcd9b2233f48bbc693b" translate="yes" xml:space="preserve">
          <source>The terraform provider provides access to outputs from the Terraform state of shared infrastructure.</source>
          <target state="translated">terraform 제공자는 공유 인프라의 Terraform 상태의 출력에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="49c6084af6ca4471e1a7cf30ad80b0c0573d15a2" translate="yes" xml:space="preserve">
          <source>The test resource allows StatusCake tests to be managed by Terraform.</source>
          <target state="translated">테스트 리소스를 통해 StatusCake 테스트를 Terraform에서 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="48615eb02bcab75b87f1688f92c3680ec0dc21fe" translate="yes" xml:space="preserve">
          <source>The type of record being created affects the interpretation of the &lt;code&gt;value&lt;/code&gt; argument; also, some additional arguments are required for some record types. &lt;a href=&quot;http://help.dnsmadeeasy.com/tutorials/managed-dns/&quot;&gt;http://help.dnsmadeeasy.com/tutorials/managed-dns/&lt;/a&gt; has more information.</source>
          <target state="translated">작성되는 레코드 유형은 &lt;code&gt;value&lt;/code&gt; 인수 의 해석에 영향을줍니다 . 또한 일부 레코드 유형에는 몇 가지 추가 인수가 필요합니다. &lt;a href=&quot;http://help.dnsmadeeasy.com/tutorials/managed-dns/&quot;&gt;http://help.dnsmadeeasy.com/tutorials/managed-dns/&lt;/a&gt; 에 자세한 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4b4eaacc7f5d4443bc1f7ba8f94e76bd6f706e2" translate="yes" xml:space="preserve">
          <source>The upload page will list your available repositories, filtered to those that match the &lt;a href=&quot;#Requirements&quot;&gt;naming convention described above&lt;/a&gt;. This is shown in the screenshot below. Select the repository of the module you want to add and click &quot;Publish Module.&quot;</source>
          <target state="translated">업로드 페이지에는 사용 가능한 리포지토리가 나열되며 &lt;a href=&quot;#Requirements&quot;&gt;위에서 설명한 명명 규칙&lt;/a&gt; 과 일치하는 리포지토리로 필터링됩니다 . 아래 스크린 샷에 나와 있습니다. 추가하려는 모듈의 저장소를 선택하고 &quot;Publish Module&quot;을 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="4e774a845663eb55e2c4c0428dcd36ff4a0dc99b" translate="yes" xml:space="preserve">
          <source>The user resource allows a user to be created on an InfluxDB server.</source>
          <target state="translated">사용자 리소스를 사용하면 InfluxDB 서버에서 사용자를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a0ba7b26883ba90c7c03a5927d280c773306b38" translate="yes" xml:space="preserve">
          <source>The username and password are expected to be in the following environment variables:</source>
          <target state="translated">사용자 이름과 비밀번호는 다음 환경 변수에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="4f8636fb355f50f70476b59428dd43cc6652e0c9" translate="yes" xml:space="preserve">
          <source>The users or groups within the administrative account must also have a policy that creates the converse relationship, allowing these users or groups to assume that role.</source>
          <target state="translated">관리 계정 내의 사용자 또는 그룹에는 대화 관계를 생성하는 정책이 있어야하며 이러한 사용자 또는 그룹이 해당 역할을 맡을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb2a574ea299a7464754ab0f1da47749feb6a774" translate="yes" xml:space="preserve">
          <source>The value can be set like this:</source>
          <target state="translated">다음과 같이 값을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36a4027d613ceada24f94ac810eb59edf1a312c6" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;TF_CLI_ARGS&lt;/code&gt; will specify additional arguments to the command-line. This allows easier automation in CI environments as well as modifying default behavior of Terraform on your own system.</source>
          <target state="translated">&lt;code&gt;TF_CLI_ARGS&lt;/code&gt; 의 값은 명령 행에 추가 인수를 지정합니다. 이를 통해 CI 환경에서보다 쉽게 ​​자동화하고 자신의 시스템에서 Terraform의 기본 동작을 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f899d0e20fba3fc8c0c120f18ee15e181086ead" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;X-Terraform-Get&lt;/code&gt; may instead be a relative URL, indicated by beginning with &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;./&lt;/code&gt; or &lt;code&gt;../&lt;/code&gt;, in which case it is resolved relative to the full URL of the download endpoint.</source>
          <target state="translated">&lt;code&gt;X-Terraform-Get&lt;/code&gt; 의 값은 &lt;code&gt;/&lt;/code&gt; , &lt;code&gt;./&lt;/code&gt; 또는 &lt;code&gt;../&lt;/code&gt; 로 시작하여 표시되는 상대 URL 일 수 있으며 ,이 경우 다운로드 엔드 포인트의 전체 URL을 기준으로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="66fd6d3cc05313d7909004064097871adc6ee858" translate="yes" xml:space="preserve">
          <source>The value of each object element is the base URL for the service in question. This URL may be either absolute or relative, and if relative it is resolved against the final discovery URL (&lt;em&gt;after&lt;/em&gt; following redirects).</source>
          <target state="translated">각 객체 요소의 값은 해당 서비스의 기본 URL입니다. 이 URL은 절대적이거나 상대적 일 수 있으며 상대적인 경우 최종 발견 URL ( 리디렉션 &lt;em&gt;후)&lt;/em&gt; 에 대해 분석 됩니다.</target>
        </trans-unit>
        <trans-unit id="9559f031b437aa8e0b0771454cb3295e81ea0d95" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;provider&lt;/code&gt; argument is always the provider name and an alias separated by a period, such as &lt;code&gt;&quot;aws.west&quot;&lt;/code&gt; above.</source>
          <target state="translated">&lt;code&gt;provider&lt;/code&gt; 인수 의 값 은 항상 &lt;code&gt;&quot;aws.west&quot;&lt;/code&gt; 와 같이 마침표로 구분 된 제공자 이름 및 별명 입니다.</target>
        </trans-unit>
        <trans-unit id="344c6682649355635bc2d4a5a84079a700c00716" translate="yes" xml:space="preserve">
          <source>The value of the field should be &lt;code&gt;TYPE&lt;/code&gt; or &lt;code&gt;TYPE.ALIAS&lt;/code&gt;. The &lt;code&gt;ALIAS&lt;/code&gt; value comes from the &lt;code&gt;alias&lt;/code&gt; field value when configuring the &lt;a href=&quot;providers&quot;&gt;provider&lt;/a&gt;.</source>
          <target state="translated">필드 값은 &lt;code&gt;TYPE&lt;/code&gt; 또는 &lt;code&gt;TYPE.ALIAS&lt;/code&gt; 이어야 합니다. &lt;code&gt;ALIAS&lt;/code&gt; 의 값은에서 온다 &lt;code&gt;alias&lt;/code&gt; 구성 할 때 필드 값 &lt;a href=&quot;providers&quot;&gt;제공자를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="59423a2c82e9368ed9e3a497158b0d88f902b3a3" translate="yes" xml:space="preserve">
          <source>The value of the flag is parsed as if you typed it directly to the shell. Double and single quotes are allowed to capture strings and arguments will be separated by spaces otherwise.</source>
          <target state="translated">쉘에 직접 입력 한 것처럼 플래그 값이 구문 분석됩니다. 큰 따옴표와 작은 따옴표는 문자열을 캡처 할 수 있으며 인수는 공백으로 구분됩니다.</target>
        </trans-unit>
        <trans-unit id="6ddc4c901a26438d08a6fa495abf504ac57f87f4" translate="yes" xml:space="preserve">
          <source>The value of this configuration is a comma-separated list of constraints. A constraint is an operator followed by a version, such as &lt;code&gt;&amp;gt; 0.7.0&lt;/code&gt;. Constraints support the following operations:</source>
          <target state="translated">이 구성의 값은 쉼표로 구분 된 제한 조건 목록입니다. 제약 조건은 &lt;code&gt;&amp;gt; 0.7.0&lt;/code&gt; 과 같은 버전이 따르는 연산자 입니다. 제약 조건은 다음 작업을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="3911f0c7b4fd96d0f40ad01732e1810575039abc" translate="yes" xml:space="preserve">
          <source>The values of sensitive outputs are still stored in the Terraform state, and available using the &lt;code&gt;terraform output&lt;/code&gt; command, so cannot be relied on as a sole means of protecting values.</source>
          <target state="translated">민감한 출력 값은 여전히 ​​Terraform 상태로 저장되며 &lt;code&gt;terraform output&lt;/code&gt; 명령을 사용하여 사용할 수 있으므로 값을 보호하는 유일한 수단으로 신뢰할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fdf62b2882ca079e8a56482f5c11c13be220c046" translate="yes" xml:space="preserve">
          <source>The variable can be set via an environment variable:</source>
          <target state="translated">변수는 환경 변수를 통해 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="461ae406c83e9bd68d06878e852a72b28856c523" translate="yes" xml:space="preserve">
          <source>The variable could be set like so:</source>
          <target state="translated">변수는 다음과 같이 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ece8e0fd2f8ab295919b6d83e10bc87b9594cbc" translate="yes" xml:space="preserve">
          <source>The variable values can be updated using the &lt;code&gt;-overwrite&lt;/code&gt; flag or via the &lt;a href=&quot;https://www.hashicorp.com/products/terraform/&quot;&gt;Terraform Enterprise website&lt;/a&gt;. An example of updating just a single variable &lt;code&gt;foo&lt;/code&gt; is shown below:</source>
          <target state="translated">변수 값은 &lt;code&gt;-overwrite&lt;/code&gt; 플래그를 사용하거나 &lt;a href=&quot;https://www.hashicorp.com/products/terraform/&quot;&gt;Terraform Enterprise 웹 사이트&lt;/a&gt; 를 통해 업데이트 할 수 있습니다 . 단일 변수 &lt;code&gt;foo&lt;/code&gt; 만 업데이트하는 예 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9aebdf512f0750d1e31c18534ec4c91a62f69f35" translate="yes" xml:space="preserve">
          <source>The vrack attachment isn't a proper resource with an ID. As such, the resource id will be forged from the vrack and project ids and there's no correct way to import the resource in terraform. When the resource is created by terraform, it first checks if the attachment already exists within OVH infrastructure; if it exists it set the resource id without modifying anything. Otherwise, it will try to attach the vrack with the public cloud project.</source>
          <target state="translated">vrack 첨부 파일은 ID가있는 적절한 리소스가 아닙니다. 따라서 리소스 ID는 vrack 및 프로젝트 ID에서 위조되며 리소스를 테라 폼으로 가져 오는 올바른 방법은 없습니다. 테라 폼에서 리소스를 생성하면 먼저 OVH 인프라 내에 첨부 파일이 이미 있는지 확인합니다. 존재하는 경우 아무것도 수정하지 않고 리소스 ID를 설정합니다. 그렇지 않으면 퍼블릭 클라우드 프로젝트에 vrack을 연결하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="0ec5895051ae47eaa5542bdc5cbe25c653375df5" translate="yes" xml:space="preserve">
          <source>The website mapping supports the following:</source>
          <target state="translated">웹 사이트 매핑은 다음을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c876f5761a4167101054f8a5e894a3837a9fda7e" translate="yes" xml:space="preserve">
          <source>Then execute it like this:</source>
          <target state="translated">그런 다음 다음과 같이 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="673902b8b81fea25ea5e0d4136497c08a1e7764f" translate="yes" xml:space="preserve">
          <source>Then locate the &lt;code&gt;aws_lambda_function&lt;/code&gt; resource defined earlier and change its &lt;code&gt;s3_key&lt;/code&gt; argument to include the version variable:</source>
          <target state="translated">그런 다음 앞에서 정의한 &lt;code&gt;aws_lambda_function&lt;/code&gt; 자원을 찾아 버전 변수를 포함하도록 &lt;code&gt;s3_key&lt;/code&gt; 인수를 변경 하십시오.</target>
        </trans-unit>
        <trans-unit id="647cb0dd9317b03dab4c32e029b918f0d5a5002b" translate="yes" xml:space="preserve">
          <source>Then specifing an &lt;code&gt;entry&lt;/code&gt; of &lt;code&gt;3&lt;/code&gt;, the returned &lt;code&gt;machine_images&lt;/code&gt; array will have a sigle element: &lt;code&gt;&quot;image3&quot;&lt;/code&gt;. If &lt;code&gt;entry&lt;/code&gt; was omitted, or set to &lt;code&gt;0&lt;/code&gt;, the returned &lt;code&gt;machine_images&lt;/code&gt; array will contain all of the images for that image list version.</source>
          <target state="translated">그런 다음 명시 할 &lt;code&gt;entry&lt;/code&gt; 의 &lt;code&gt;3&lt;/code&gt; 을 , 반환 &lt;code&gt;machine_images&lt;/code&gt; 의 : 배열은 sigle 요소 것 &lt;code&gt;&quot;image3&quot;&lt;/code&gt; . 경우 &lt;code&gt;entry&lt;/code&gt; 을 생략하거나, 설정된 &lt;code&gt;0&lt;/code&gt; , 반환 &lt;code&gt;machine_images&lt;/code&gt; 의 어레이는 이미지 목록 버전의 모든 이미지를 포함 할 것이다.</target>
        </trans-unit>
        <trans-unit id="9062f99fdf863ae93a701f60479705235ce4ecef" translate="yes" xml:space="preserve">
          <source>Then the AMI for the one resource will be replaced with &quot;foo&quot;. Note that the override syntax can be Terraform syntax or JSON. You can mix and match syntaxes without issue.</source>
          <target state="translated">그런 다음 한 리소스의 AMI가 &quot;foo&quot;로 바뀝니다. 재정의 구문은 Terraform 구문 또는 JSON 일 수 있습니다. 문제없이 구문을 혼합하고 일치시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4017e0717cded31804b8284591a1eda86d600038" translate="yes" xml:space="preserve">
          <source>Then the rendered value would be &lt;code&gt;goodnight moon!&lt;/code&gt;.</source>
          <target state="translated">그러면 렌더링 된 값은 &lt;code&gt;goodnight moon!&lt;/code&gt; 이 될 것입니다 ! .</target>
        </trans-unit>
        <trans-unit id="383574b7ea37c103687b50309270cd40f5759847" translate="yes" xml:space="preserve">
          <source>Then the value of &lt;code&gt;foo&lt;/code&gt; will be &lt;code&gt;baz&lt;/code&gt;, since it was the last definition seen.</source>
          <target state="translated">그런 다음 &lt;code&gt;foo&lt;/code&gt; 의 값은 마지막 정의이므로 &lt;code&gt;baz&lt;/code&gt; 가됩니다 .</target>
        </trans-unit>
        <trans-unit id="8fd13fbd35b9a37623508a61469e32e7a4852d84" translate="yes" xml:space="preserve">
          <source>Then, depending on where you specify overrides, the behavior can differ:</source>
          <target state="translated">그런 다음 재정의를 지정하는 위치에 따라 동작이 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3e2b11e3f868b80cbb58fd93b6dec0a8aeb84ed" translate="yes" xml:space="preserve">
          <source>There are 2 configuration levels, &lt;code&gt;supervisor&lt;/code&gt; and &lt;code&gt;service&lt;/code&gt;. Configuration placed directly within the &lt;code&gt;provisioner&lt;/code&gt; block are supervisor configurations, and a provisioner can define zero or more services to run, and each service will have a &lt;code&gt;service&lt;/code&gt; block within the &lt;code&gt;provisioner&lt;/code&gt;. A &lt;code&gt;service&lt;/code&gt; block can also contain zero or more &lt;code&gt;bind&lt;/code&gt; blocks to create service group bindings.</source>
          <target state="translated">두 가지 구성 수준, &lt;code&gt;supervisor&lt;/code&gt; 및 &lt;code&gt;service&lt;/code&gt; 있습니다. &lt;code&gt;provisioner&lt;/code&gt; 블록 내에 직접 배치 된 구성 은 감독자 구성이며 프로 비 저는 실행할 서비스를 0 개 이상 정의 할 수 있으며 각 서비스는 &lt;code&gt;provisioner&lt;/code&gt; 내에 &lt;code&gt;service&lt;/code&gt; 블록 을 갖습니다 . &lt;code&gt;service&lt;/code&gt; 블록은 0 개 이상 포함 할 수 있습니다 &lt;code&gt;bind&lt;/code&gt; 서비스 그룹 바인딩을 만들 수있는 블록.</target>
        </trans-unit>
        <trans-unit id="ad73ec39e8464bda5a19c24998f4b978247cc8e6" translate="yes" xml:space="preserve">
          <source>There are 4 traffic resource options for each class, prefixed with the name of the traffic classes seen above.</source>
          <target state="translated">각 클래스에는 4 개의 트래픽 리소스 옵션이 있으며 위에서 볼 수있는 트래픽 클래스의 이름이 접두사입니다.</target>
        </trans-unit>
        <trans-unit id="b899ceee0e362e289a0574eca3584497e5067f68" translate="yes" xml:space="preserve">
          <source>There are &lt;a href=&quot;https://aws.amazon.com/marketplace/seller-profile?id=0ed48363-5064-4d47-b41b-a53f7c937314&quot;&gt;a few types&lt;/a&gt; of PAN-OS VMs available to bring up in AWS. Both these VMs as well as the ones that can be deployed in Google Cloud Platform are different in that the &lt;code&gt;admin&lt;/code&gt; password is unset, but it has an SSH key associated with it. As the panos Terraform provider package authenticates via username/password, an initialization step of configuring a password using the given SSH key is required. Right now, this initialization step requires manual intervention; the user must download this SSH key, at which point the following may be used to automate this initialization:</source>
          <target state="translated">있다 &lt;a href=&quot;https://aws.amazon.com/marketplace/seller-profile?id=0ed48363-5064-4d47-b41b-a53f7c937314&quot;&gt;몇 가지 유형&lt;/a&gt; AWS에 가져가 사용할 PAN-OS의 VM은. 이 VM과 Google Cloud Platform에 배포 할 수있는 VM은 &lt;code&gt;admin&lt;/code&gt; 암호가 설정되어 있지 않지만 SSH 키가 연결 되어 있다는 점에서 다릅니다 . panos Terraform 제공자 패키지는 사용자 이름 / 비밀번호를 통해 인증되므로 지정된 SSH 키를 사용하여 비밀번호를 구성하는 초기화 단계가 필요합니다. 현재이 초기화 단계에는 수동 개입이 필요합니다. 사용자는이 SSH 키를 다운로드해야하며이 시점에서이 초기화를 자동화하는 데 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e42ab05a65e13b4efb708ab0dda577ef6bec0b7" translate="yes" xml:space="preserve">
          <source>There are &lt;strong&gt;meta-parameters&lt;/strong&gt; available to all resources:</source>
          <target state="translated">있다 &lt;strong&gt;메타 매개 변수&lt;/strong&gt; 모든 자원을 사용할 수는 :</target>
        </trans-unit>
        <trans-unit id="f8698675a6c4b36e34b55a074c70ae2054b66235" translate="yes" xml:space="preserve">
          <source>There are a couple of exceptions to keep in mind when setting up a restricted provisioning user:</source>
          <target state="translated">제한된 프로비저닝 사용자를 설정할 때 명심해야 할 몇 가지 예외가 있습니다.</target>
        </trans-unit>
        <trans-unit id="47bb6cfd2f6a1aba48085a8cf15103d2d3a2c598" translate="yes" xml:space="preserve">
          <source>There are a few possible reasons for authoring a custom Terraform provider, such as:</source>
          <target state="translated">다음과 같이 사용자 정의 Terraform 제공자를 작성해야하는 몇 가지 이유가 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8f8dec5d95d72185e584f0252f4c783247d488e" translate="yes" xml:space="preserve">
          <source>There are a variety of S3 bucket addressing schemes, most are &lt;a href=&quot;http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro&quot;&gt;documented in the S3 configuration&lt;/a&gt;. Here are a couple of examples.</source>
          <target state="translated">다양한 S3 버킷 주소 지정 체계가 있으며 대부분 &lt;a href=&quot;http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro&quot;&gt;S3 구성에 문서화되어 있습니다&lt;/a&gt; . 다음은 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="e0a6e6e3977f13eb9a7a35eaeeba271b23d66108" translate="yes" xml:space="preserve">
          <source>There are a variety of available variable references you can use.</source>
          <target state="translated">사용할 수있는 다양한 변수 참조가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9c82eb7a4c50858d63f881e843c503d0fd18bcc" translate="yes" xml:space="preserve">
          <source>There are also a number of other parameters that can be set to tune how the provider connects to the NSX REST API. It is recommended you leave these to the defaults unless you experience issues in which case they can be tuned to optimize the system in your environment.</source>
          <target state="translated">제공자가 NSX REST API에 연결하는 방법을 조정하기 위해 설정할 수있는 다른 여러 매개 변수도 있습니다. 환경에서 시스템을 최적화하기 위해 조정할 수있는 문제가 발생하지 않는 한 이러한 설정을 기본값으로 두는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="691c57485bccffc8170066d9ce25b137bb3607be" translate="yes" xml:space="preserve">
          <source>There are at least 2 steps involved in scheduling your first container on a Kubernetes cluster. You need the Kubernetes cluster with all its components running &lt;em&gt;somewhere&lt;/em&gt; and then schedule the Kubernetes resources, like Pods, Replication Controllers, Services etc.</source>
          <target state="translated">Kubernetes 클러스터에서 첫 번째 컨테이너를 예약하는 데는 2 단계 이상이 있습니다. &lt;em&gt;어딘가에서&lt;/em&gt; 실행중인 모든 구성 요소가있는 Kubernetes 클러스터가 필요하며 포드, 복제 컨트롤러, 서비스 등과 같은 Kubernetes 리소스를 예약하십시오.</target>
        </trans-unit>
        <trans-unit id="8336324053c291a253fcfb7d94c1a3ef81155814" translate="yes" xml:space="preserve">
          <source>There are certain points in time that you may need to locate the managed object ID of a specific vSphere resource yourself. A couple of methods are documented below.</source>
          <target state="translated">특정 vSphere 리소스의 관리 대상 개체 ID를 직접 찾아야하는 특정 시점이 있습니다. 몇 가지 방법이 아래에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffadd1ead725d03e7d3e7a977b591d0e863c2c63" translate="yes" xml:space="preserve">
          <source>There are certainly duplicates</source>
          <target state="translated">확실히 중복이 있습니다</target>
        </trans-unit>
        <trans-unit id="a25429a07326ab0d662ab5684d14eb5512dd0dbd" translate="yes" xml:space="preserve">
          <source>There are currently 9 traffic classes that can be used for network I/O control - they are below.</source>
          <target state="translated">현재 네트워크 I / O 제어에 사용할 수있는 9 개의 트래픽 클래스가 있습니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="a3c46cb0203c1105d2c6bb2eb192d588358ebb34" translate="yes" xml:space="preserve">
          <source>There are generally two ways to configure the Kubernetes provider.</source>
          <target state="translated">Kubernetes 공급자를 구성하는 방법에는 일반적으로 두 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1dd9f085d1c27f3d6e647defa4530a209a74de4a" translate="yes" xml:space="preserve">
          <source>There are many types of Dataflow jobs. Some Dataflow jobs run constantly, getting new data from (e.g.) a GCS bucket, and outputting data continuously. Some jobs process a set amount of data then terminate. All jobs can fail while running due to programming errors or other issues. In this way, Dataflow jobs are different from most other Terraform / Google resources.</source>
          <target state="translated">많은 유형의 데이터 흐름 작업이 있습니다. 일부 Dataflow 작업은 지속적으로 실행되어 GCS 버킷에서 새 데이터를 가져오고 지속적으로 데이터를 출력합니다. 일부 작업은 정해진 양의 데이터를 처리 한 다음 종료됩니다. 프로그래밍 오류 또는 기타 문제로 인해 실행 중에 모든 작업이 실패 할 수 있습니다. 이러한 방식으로 데이터 흐름 작업은 대부분의 다른 Terraform / Google 리소스와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="1a19cf1d89ecd92b63696b4e9529533753731bbd" translate="yes" xml:space="preserve">
          <source>There are no arguments available for this data source.</source>
          <target state="translated">이 데이터 소스에 사용 가능한 인수가 없습니다.</target>
        </trans-unit>
        <trans-unit id="13b89bd4c20417da67aecfdb4a1124ce51192efa" translate="yes" xml:space="preserve">
          <source>There are no outputs for this resource.</source>
          <target state="translated">이 자원에 대한 출력이 없습니다.</target>
        </trans-unit>
        <trans-unit id="ea908d3f049a093b2384d28330ef7f0573794e8f" translate="yes" xml:space="preserve">
          <source>There are only a handful of node types that can exist within the graph. We'll cover these first before explaining how they're determined and built:</source>
          <target state="translated">그래프 내에 존재할 수있는 소수의 노드 유형 만 있습니다. 그것들이 어떻게 결정되고 구축되는지 설명하기 전에 먼저 이것들을 다룰 것입니다.</target>
        </trans-unit>
        <trans-unit id="6cf72dcc456597359751288e1182d96eb8e06de1" translate="yes" xml:space="preserve">
          <source>There are several data sources (such as &lt;a href=&quot;d/datacenter&quot;&gt;&lt;code&gt;vsphere_datacenter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;d/host&quot;&gt;&lt;code&gt;vsphere_host&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;d/resource_pool&quot;&gt;&lt;code&gt;vsphere_resource_pool&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;d/datastore&quot;&gt;&lt;code&gt;vsphere_datastore&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;d/network&quot;&gt;&lt;code&gt;vsphere_network&lt;/code&gt;&lt;/a&gt;) that assist with searching for a specific resource in Terraform. For usage details on a specific data source, look for the appropriate link in the sidebar. In addition, most vSphere resources in Terraform supply the managed object ID (or UUID, when it makes more sense) as the &lt;code&gt;id&lt;/code&gt; attribute, which can be supplied to downstream resources that should depend on the parent.</source>
          <target state="translated">Terraform에서 특정 리소스를 검색하는 데 도움 이되는 몇 가지 데이터 소스 (예 : &lt;a href=&quot;d/datacenter&quot;&gt; &lt;code&gt;vsphere_datacenter&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;d/host&quot;&gt; &lt;code&gt;vsphere_host&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;d/resource_pool&quot;&gt; &lt;code&gt;vsphere_resource_pool&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;d/datastore&quot;&gt; &lt;code&gt;vsphere_datastore&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;d/network&quot;&gt; &lt;code&gt;vsphere_network&lt;/code&gt; &lt;/a&gt; )가 있습니다. 특정 데이터 소스에 대한 자세한 사용법은 사이드 바에서 해당 링크를 찾으십시오. 또한 Terraform의 대부분의 vSphere 리소스는 관리 대상 개체 ID (또는 더 의미가있는 경우 UUID)를 &lt;code&gt;id&lt;/code&gt; 속성으로 제공합니다.이 속성은 부모에 의존해야하는 다운 스트림 리소스에 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc0334ac4f11ffb53e538c6cb3df01062306ce69" translate="yes" xml:space="preserve">
          <source>There are several different kinds of contribution, each of which has its own standards for a speedy review. The following sections describe guidelines for each type of contribution.</source>
          <target state="translated">몇 가지 다른 종류의 기여가 있으며, 각각은 빠른 검토를위한 자체 표준이 있습니다. 다음 섹션에서는 각 유형의 기여에 대한 지침을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="c38817f848031d8fabbd88db5cd8e233b17c1211" translate="yes" xml:space="preserve">
          <source>There are some notes to consider when connecting Instances to networks using Ports. Please see the &lt;code&gt;flexibleengine_compute_instance_v2&lt;/code&gt; documentation for further documentation.</source>
          <target state="translated">포트를 사용하여 인스턴스를 네트워크에 연결할 때 고려해야 할 사항이 있습니다. 추가 설명서 는 &lt;code&gt;flexibleengine_compute_instance_v2&lt;/code&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8bdc9b26a7d290de9cd4f1d996a1ac5ad63730cd" translate="yes" xml:space="preserve">
          <source>There are some notes to consider when connecting Instances to networks using Ports. Please see the &lt;code&gt;openstack_compute_instance_v2&lt;/code&gt; documentation for further documentation.</source>
          <target state="translated">포트를 사용하여 인스턴스를 네트워크에 연결할 때 고려해야 할 사항이 있습니다. 추가 문서 는 &lt;code&gt;openstack_compute_instance_v2&lt;/code&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1599f59aaf2cd8ffd1f571ebff9662387724bf31" translate="yes" xml:space="preserve">
          <source>There are some notes to consider when connecting Instances to networks using Ports. Please see the &lt;code&gt;opentelekomcloud_compute_instance_v2&lt;/code&gt; documentation for further documentation.</source>
          <target state="translated">포트를 사용하여 인스턴스를 네트워크에 연결할 때 고려해야 할 사항이 있습니다. 추가 문서 는 &lt;code&gt;opentelekomcloud_compute_instance_v2&lt;/code&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6754a1af2ea33a7b985d7bc073dc7e582b885e7d" translate="yes" xml:space="preserve">
          <source>There are some notes to consider when connecting Instances to networks using Ports. Please see the &lt;code&gt;telefonicaopencloud_compute_instance_v2&lt;/code&gt; documentation for further documentation.</source>
          <target state="translated">포트를 사용하여 인스턴스를 네트워크에 연결할 때 고려해야 할 사항이 있습니다. 추가 문서 는 &lt;code&gt;telefonicaopencloud_compute_instance_v2&lt;/code&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="17c206680b0ea3fa53d538125d45ec58518d8228" translate="yes" xml:space="preserve">
          <source>There are some special concerns when running &lt;code&gt;init&lt;/code&gt; in such an environment, including optionally making plugins available locally to avoid repeated re-installation. For more information, see &lt;a href=&quot;https://www.terraform.io/guides/running-terraform-in-automation.html&quot;&gt;&lt;code&gt;Running Terraform in Automation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 환경에서 &lt;code&gt;init&lt;/code&gt; 를 실행할 때 특별한 재설치가 반복적으로 다시 설치되지 않도록 로컬에서 플러그인을 선택적으로 사용 가능하게하는 것을 포함합니다. 자세한 내용 &lt;a href=&quot;https://www.terraform.io/guides/running-terraform-in-automation.html&quot;&gt; &lt;code&gt;Running Terraform in Automation&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a0d8a45833cfb6c39851832fc87562a9f208d7d" translate="yes" xml:space="preserve">
          <source>There are two different ways to identify the snapshot in which to restore the storage volume:</source>
          <target state="translated">스토리지 볼륨을 복원 할 스냅 샷을 식별하는 방법에는 두 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="178760e633947d769f440e878e1f32d8f72c5345" translate="yes" xml:space="preserve">
          <source>There are two tasks needed to create a Service Principal via &lt;a href=&quot;https://portal.azure.com&quot;&gt;the Azure Portal&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://portal.azure.com&quot;&gt;Azure Portal을&lt;/a&gt; 통해 서비스 주체를 만드는 데 필요한 두 가지 작업이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b19a7175cee7f80a68b891e8b774d7451faa93e4" translate="yes" xml:space="preserve">
          <source>There are two types of locations, regional or multi-regional. A regional location is a specific geographic place, such as Tokyo, and a multi-regional location is a large geographic area, such as the United States, that contains at least two geographic places</source>
          <target state="translated">지역 또는 다중 지역의 두 가지 유형의 위치가 있습니다. 지역 위치는 도쿄와 같은 특정 지리적 위치이고 다중 지역 위치는 2 개 이상의 지리적 위치를 포함하는 미국과 같은 넓은 지리적 위치입니다.</target>
        </trans-unit>
        <trans-unit id="e5c4685e435090c8f01e9cd8a78552ce27a89ebb" translate="yes" xml:space="preserve">
          <source>There are two types of plugins supported by Terraform:</source>
          <target state="translated">Terraform에서 지원하는 플러그인에는 두 가지 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff9963cae60e9496f58ff7e27436fd26061f2db1" translate="yes" xml:space="preserve">
          <source>There are various use cases for removing items from a Terraform state file. The most common is refactoring a configuration to no longer manage that resource (perhaps moving it to another Terraform configuration/state).</source>
          <target state="translated">Terraform 상태 파일에서 항목을 제거하는 다양한 사용 사례가 있습니다. 가장 일반적인 것은 더 이상 해당 리소스를 관리하지 않도록 구성을 리팩토링하는 것입니다 (아마도 다른 Terraform 구성 / 상태로 이동).</target>
        </trans-unit>
        <trans-unit id="1cdabf6d2cf12df96064b9e69ceb2b66787d1e1d" translate="yes" xml:space="preserve">
          <source>There is a significant downside to this approach. Statically compiled binaries are much larger than dynamically-linked binaries because they include everything they need to run. And because Terraform shares a lot of code with its plugins, there is a lot of binary data duplicated between each of these programs.</source>
          <target state="translated">이 접근법에는 상당한 단점이 있습니다. 정적으로 컴파일 된 바이너리는 실행하는 데 필요한 모든 것이 포함되어 있기 때문에 동적으로 연결된 바이너리보다 훨씬 큽니다. Terraform은 플러그인과 많은 코드를 공유하기 때문에 이러한 각 프로그램간에 많은 바이너리 데이터가 복제됩니다.</target>
        </trans-unit>
        <trans-unit id="822e48efc994e0734015513a7bc0de00132c0003" translate="yes" xml:space="preserve">
          <source>There is no way currently to unset map values in Terraform. Whenever a map is modified either via variable input or being passed into a module, the values are always merged.</source>
          <target state="translated">현재 Terraform에서 맵 값을 설정 해제 할 방법이 없습니다. 변수 입력을 통해 또는 모듈로 전달되는 맵이 수정 될 때마다 값이 항상 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="b0bb6d4f3f8b6da8fcc9e88070cae381d23cd468" translate="yes" xml:space="preserve">
          <source>There were several major deprecation notices introduced in 2.0.0. This reviews the details of each and provides migration instructions to the appropriate resources.</source>
          <target state="translated">2.0.0에 도입 된 몇 가지 주요 지원 중단 통지가있었습니다. 각 세부 사항을 검토하고 해당 자원에 대한 마이그레이션 지시 사항을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b1da3dd6a8b96b36d686bba7195883b7fe548518" translate="yes" xml:space="preserve">
          <source>Therefore in a development environment with frequent deployments it may be convenient to set a relatively-short expiration time and use early renewal to automatically provision a new certificate when the current one is about to expire.</source>
          <target state="translated">따라서 자주 배포하는 개발 환경에서는 비교적 짧은 만료 시간을 설정하고 조기 갱신을 사용하여 현재 인증서가 곧 만료 될 때 새 인증서를 자동으로 프로비저닝하는 것이 편리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="3a216d4590191bc63c6dbd10cdb91d75318e7158" translate="yes" xml:space="preserve">
          <source>Therefore, for mapping configuration to resources in the real world, Terraform uses its own state structure.</source>
          <target state="translated">따라서 실제 환경의 리소스에 구성을 매핑하기 위해 Terraform은 자체 상태 구조를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5ed50e90b20c90ab39c7743340508140ecdb48af" translate="yes" xml:space="preserve">
          <source>Therefore, you can enter the source of any module, satisfy any required variables, run &lt;code&gt;terraform apply&lt;/code&gt;, and expect it to work.</source>
          <target state="translated">따라서 모든 모듈의 소스를 입력하고 필요한 변수를 만족 시키며 &lt;code&gt;terraform apply&lt;/code&gt; 를 실행 하고 작동 할 것으로 예상 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd76a6a3480a1c69bd6fb5abd188ec27cfd0fdf1" translate="yes" xml:space="preserve">
          <source>These are unsupported because the endpoint needs to be authorized and does not generate an ARN until the target email address has been validated. This breaks the Terraform model and as a result are not currently supported.</source>
          <target state="translated">엔드 포인트에 권한이 부여되고 대상 이메일 주소의 유효성이 검증 될 때까지 ARN을 생성하지 않기 때문에 지원되지 않습니다. 이로 인해 Terraform 모델이 손상되어 현재 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2663b027015ccfb0c5f982d1afd68d109d300796" translate="yes" xml:space="preserve">
          <source>These arguments are inserted directly &lt;em&gt;after&lt;/em&gt; the subcommand (such as &lt;code&gt;plan&lt;/code&gt;) and &lt;em&gt;before&lt;/em&gt; any flags specified directly on the command-line. This behavior ensures that flags on the command-line take precedence over environment variables.</source>
          <target state="translated">이 인수는 부속 명령 바로 &lt;em&gt;뒤에&lt;/em&gt; (예 : &lt;code&gt;plan&lt;/code&gt; ) 명령 행에 직접 지정된 플래그 &lt;em&gt;앞에&lt;/em&gt; 삽입됩니다 . 이 동작은 명령 행의 플래그가 환경 변수보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="f3d1040f51aa0b1e97589e17bd6adaa5f60a64da" translate="yes" xml:space="preserve">
          <source>These arguments are supported for backwards compatibility, and may be removed in a future version:</source>
          <target state="translated">이러한 인수는 이전 버전과의 호환성을 위해 지원되며 이후 버전에서 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a55b2640432d3a9d530f6a5edbbe2a57e59f79c0" translate="yes" xml:space="preserve">
          <source>These attributes are exported, but they are expected to change over time and so should only be used for informational purposes, not for resource dependencies:</source>
          <target state="translated">이러한 속성은 내보내 지지만 시간이 지남에 따라 변경 될 수 있으므로 리소스 종속성이 아닌 정보 용으로 만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="5571e09d964f3a064f99c0dfa2e2cea55b88f53f" translate="yes" xml:space="preserve">
          <source>These can be specified as &quot;on&quot; or &quot;off&quot; string. Similar to boolean values, but here the empty string also means to use the existing value. Attributes available:</source>
          <target state="translated">&quot;on&quot;또는 &quot;off&quot;문자열로 지정할 수 있습니다. 부울 값과 유사하지만 여기서 빈 문자열은 기존 값을 사용한다는 의미입니다. 사용 가능한 속성 :</target>
        </trans-unit>
        <trans-unit id="78e0a5172a4925f77a8c9aa4b69c01cef9d14149" translate="yes" xml:space="preserve">
          <source>These changes only update Terraform state when applied, hence it is safe to run when the virtual machine is running. If more settings are being modified, you may need to plan maintenance accordingly for any necessary re-configuration of the virtual machine.</source>
          <target state="translated">이러한 변경 사항은 적용시 Terraform 상태 만 업데이트하므로 가상 머신이 실행 중일 때 안전하게 실행됩니다. 더 많은 설정을 수정하는 경우 필요한 가상 머신 재구성에 따라 유지 보수를 계획해야합니다.</target>
        </trans-unit>
        <trans-unit id="8d3d25b50765fb2c2d115ae734d89997db2039e6" translate="yes" xml:space="preserve">
          <source>These endpoints list modules according to some criteria.</source>
          <target state="translated">이 엔드 포인트는 몇 가지 기준에 따라 모듈을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="75b0a17f4cf2a8e8c30121baa8b660bf91f58f74" translate="yes" xml:space="preserve">
          <source>These examples assume the following Terraform output snippet.</source>
          <target state="translated">이 예제에서는 다음 Terraform 출력 스 니펫을 가정합니다.</target>
        </trans-unit>
        <trans-unit id="cefdda29cf2d7484d6aefb6523fa5d814b5f2a5e" translate="yes" xml:space="preserve">
          <source>These functions usually test only for the resource directly under test: we skip the check that the &lt;code&gt;azurerm_resource_group&lt;/code&gt; has been destroyed when testing &lt;code&gt;azurerm_resource_group&lt;/code&gt;, under the assumption that &lt;code&gt;azurerm_resource_group&lt;/code&gt; is tested independently in its own acceptance tests.</source>
          <target state="translated">이러한 함수는 일반적으로 테스트중인 리소스에 대해서만 테스트합니다. &lt;code&gt;azurerm_resource_group&lt;/code&gt; 이 자체 승인 테스트에서 독립적으로 테스트 된다는 가정하에 &lt;code&gt;azurerm_resource_group&lt;/code&gt; 테스트시 &lt;code&gt;azurerm_resource_group&lt;/code&gt; 이 제거되었는지 확인하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2285f481f62918582bbbc1443d15e5750d37dc1e" translate="yes" xml:space="preserve">
          <source>These inherit their settings from the replication group.</source>
          <target state="translated">이들은 복제 그룹에서 설정을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="0d915e809dc5c64378a136b1bee09c70cc8921d1" translate="yes" xml:space="preserve">
          <source>These parameters can be used to ensure that service is being provided before Terraform moves on. If new instances don't pass the ELB's health checks for any reason, the Terraform apply will time out, and the ASG will be marked as tainted (i.e. marked to be destroyed in a follow up run).</source>
          <target state="translated">이 파라미터는 Terraform이 진행되기 전에 서비스가 제공되도록하는 데 사용될 수 있습니다. 새 인스턴스가 어떤 이유로 든 ELB의 상태 확인을 통과하지 못하면 Terraform apply가 시간 초과되고 ASG가 오염 된 것으로 표시됩니다 (즉, 후속 작업에서 파괴 된 것으로 표시됨).</target>
        </trans-unit>
        <trans-unit id="cab0d9df8b4fc8198c160e919d43c82150011063" translate="yes" xml:space="preserve">
          <source>These resources have been updated (or created) to use the correct catalog APIs as with &lt;code&gt;consul_catalog_entry&lt;/code&gt;, but provide a first-class resource name.</source>
          <target state="translated">이러한 자원은 &lt;code&gt;consul_catalog_entry&lt;/code&gt; 와 같이 올바른 카탈로그 API를 사용하도록 업데이트 (또는 작성) 되었지만 일류 자원 이름을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="2db8fe2b3e776a673419c1313556eaeee3e38604" translate="yes" xml:space="preserve">
          <source>These settings require vSphere 6.0 or higher:</source>
          <target state="translated">이러한 설정에는 vSphere 6.0 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a1821743bc371198f86952acf57bcaee91e5f095" translate="yes" xml:space="preserve">
          <source>These settings require vSphere 6.5 or higher:</source>
          <target state="translated">이러한 설정에는 vSphere 6.5 이상이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ae9e627652d2a5b71823e3de37448c4ec474ae70" translate="yes" xml:space="preserve">
          <source>These two packages are both &quot;main&quot; packages that can be built into separate executables with &lt;code&gt;go install&lt;/code&gt;:</source>
          <target state="translated">이 두 패키지는 모두 &lt;code&gt;go install&lt;/code&gt; 을 사용 하여 별도의 실행 파일로 빌드 할 수있는 &quot;기본&quot;패키지입니다 .</target>
        </trans-unit>
        <trans-unit id="beff9a447c74d1b20428e01d0de05ec7c3df5578" translate="yes" xml:space="preserve">
          <source>These values map to the Terraform variables like so:</source>
          <target state="translated">이 값은 다음과 같이 Terraform 변수에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="3e5a20915859676b0aa56c4b062553482ca39dcd" translate="yes" xml:space="preserve">
          <source>These will fetch the modules using HTTPS. If you want to use SSH instead:</source>
          <target state="translated">HTTPS를 사용하여 모듈을 가져옵니다. SSH를 대신 사용하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="96d8eb61a039a0b6d31643340cb064b50b3c6983" translate="yes" xml:space="preserve">
          <source>They accept positive integer query variables &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;limit&lt;/code&gt; which have the usual SQL-like semantics. Each endpoint will have a sane default limit and a default offset of &lt;code&gt;0&lt;/code&gt;. Each endpoint will also apply a sane maximum limit, requesting more results will just result in the maximum limit being used.</source>
          <target state="translated">양의 정수 쿼리 변수 &lt;code&gt;offset&lt;/code&gt; 및 &lt;code&gt;limit&lt;/code&gt; 은 일반적인 SQL과 같은 의미를 갖습니다. 각 엔드 포인트는 정상적인 기본 한계와 &lt;code&gt;0&lt;/code&gt; 의 기본 오프셋을 갖습니다 . 각 엔드 포인트는 또한 최대 한계를 적용하여 더 많은 결과를 요청하면 최대 한계가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="db8fa0de0548c3007dfcd5d3e0b5a48a9fd1783b" translate="yes" xml:space="preserve">
          <source>Third-Party Integrations</source>
          <target state="translated">타사 통합</target>
        </trans-unit>
        <trans-unit id="ae3f7cc351d36204b32513e32bd1744353b84a52" translate="yes" xml:space="preserve">
          <source>Third-party Plugins</source>
          <target state="translated">타사 플러그인</target>
        </trans-unit>
        <trans-unit id="2dd4a9991b699f91620bfe417e3b984437b8cfa3" translate="yes" xml:space="preserve">
          <source>Third-party providers can be manually installed by placing their plugin executables in one of the following locations depending on the host operating system:</source>
          <target state="translated">호스트 운영 체제에 따라 플러그인 실행 파일을 다음 위치 중 하나에 배치하여 타사 공급자를 수동으로 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34c5f1d33d724a529f3fa7bb2608d45bfa05f851" translate="yes" xml:space="preserve">
          <source>This allows fine-grained control over when provisioners run in the dependency graph.</source>
          <target state="translated">이를 통해 프로 비전이 종속성 그래프에서 실행될 때를 세밀하게 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55a0f4b8946eb5a261955ea3f6931d25b695d55c" translate="yes" xml:space="preserve">
          <source>This allows the user to have full control over the attributes supplied to an instance during instance creation. There are, as well, some attributes that get populated during instance creation, and the full attributes map can be seen via the exported &lt;code&gt;attributes&lt;/code&gt; attribute.</source>
          <target state="translated">이를 통해 사용자는 인스턴스 작성 중 인스턴스에 제공되는 속성을 완전히 제어 할 수 있습니다. 또한 인스턴스 작성 중에 채워지는 일부 속성이 있으며 내 보낸 &lt;code&gt;attributes&lt;/code&gt; 속성을 통해 전체 속성 맵을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0224b1684f4abf701afb866453f1689ff3469ff9" translate="yes" xml:space="preserve">
          <source>This allows volumes to be attached to servers.</source>
          <target state="translated">이를 통해 볼륨을 서버에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b44ccb744333e2511e2a181ff6b07d973ccd5b1e" translate="yes" xml:space="preserve">
          <source>This allows you to manage your webhooks on a repository.</source>
          <target state="translated">이를 통해 저장소에서 웹 후크를 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="0ac5cb2ea3ebd0827f9c80cfcb416baa7a824509" translate="yes" xml:space="preserve">
          <source>This alternate example details how to clone a VM from a template that came from an OVF/OVA file. This leverages the resource's &lt;a href=&quot;#using-vapp-properties-to-supply-ovf-ova-configuration&quot;&gt;vApp properties&lt;/a&gt; capabilities to set appropriate keys that control various configuration settings on the virtual machine or virtual appliance. In this scenario, using &lt;code&gt;customize&lt;/code&gt; is not recommended as the functionality has tendency to overlap.</source>
          <target state="translated">이 대체 예는 OVF / OVA 파일에서 가져온 템플릿에서 VM을 복제하는 방법을 자세히 설명합니다. 리소스의 &lt;a href=&quot;#using-vapp-properties-to-supply-ovf-ova-configuration&quot;&gt;vApp 속성&lt;/a&gt; 기능을 활용하여 가상 시스템 또는 가상 장치의 다양한 구성 설정을 제어하는 ​​적절한 키를 설정합니다. 이 시나리오에서는 기능이 겹치는 경향이 있으므로 &lt;code&gt;customize&lt;/code&gt; 를 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="4703f71a64bc7c3ca145e6fdd0d5f74a717f89b9" translate="yes" xml:space="preserve">
          <source>This approach is recommended in the common case where only a single configuration is needed for each provider across the entire configuration.</source>
          <target state="translated">이 방법은 전체 구성에서 각 공급자에 대해 단일 구성 만 필요한 일반적인 경우에 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="07d38cf69c26ac2618d86ebb68019520bcc1b3eb" translate="yes" xml:space="preserve">
          <source>This assumes we have a bucket created called &lt;code&gt;mybucket&lt;/code&gt;. The Terraform state is written to the key &lt;code&gt;path/to/my/key&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;mybucket&lt;/code&gt; 이라는 버킷이 생성 되었다고 가정합니다 . Terraform 상태는 key &lt;code&gt;path/to/my/key&lt;/code&gt; 에 기록 됩니다.</target>
        </trans-unit>
        <trans-unit id="4b68ed37ca8d6f6bad879416ca155999e6a3908f" translate="yes" xml:space="preserve">
          <source>This attribute has been deprecated. Use the &lt;a href=&quot;google_service_account_iam&quot;&gt;google_service_account_iam_* resources&lt;/a&gt; instead.</source>
          <target state="translated">이 속성은 더 이상 사용되지 않습니다. 사용 &lt;a href=&quot;google_service_account_iam&quot;&gt;google_service_account_iam_의 * 자원을&lt;/a&gt; 대신.</target>
        </trans-unit>
        <trans-unit id="74ae7e4ce13e7b3e4a2509efc8953fb81d8ef42b" translate="yes" xml:space="preserve">
          <source>This backend supports &lt;a href=&quot;../../state/locking&quot;&gt;state locking&lt;/a&gt;.</source>
          <target state="translated">이 백엔드는 &lt;a href=&quot;../../state/locking&quot;&gt;상태 잠금을&lt;/a&gt; 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="ee1393fe46bd093b28df26ceaa7dd1eed0e89724" translate="yes" xml:space="preserve">
          <source>This behavior was adopted from the standard behavior of &lt;a href=&quot;https://linux.die.net/man/1/rsync&quot;&gt;rsync&lt;/a&gt;.</source>
          <target state="translated">이 동작은 &lt;a href=&quot;https://linux.die.net/man/1/rsync&quot;&gt;rsync&lt;/a&gt; 의 표준 동작에서 채택되었습니다 .</target>
        </trans-unit>
        <trans-unit id="6e0a0dfe31a43e8eff3b1a1078b4d3a7233631f6" translate="yes" xml:space="preserve">
          <source>This can be set prior to running the unit tests to opt-out of any tests requiring remote network connectivity. The unit tests make an attempt to automatically detect when connectivity is unavailable and skip the relevant tests, but by setting this variable you can force these tests to be skipped.</source>
          <target state="translated">이것은 원격 네트워크 연결이 필요한 테스트를 옵트 아웃하기 위해 장치 테스트를 실행하기 전에 설정할 수 있습니다. 단위 테스트는 연결을 사용할 수없는시기를 자동으로 감지하여 관련 테스트를 건너 뛰려고하지만이 변수를 설정하면 이러한 테스트를 강제로 건너 뛸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbcc96466ef477cdb434fb97faa5f1900516b5cf" translate="yes" xml:space="preserve">
          <source>This can be used both to validate a prefix list given in a variable and to obtain the CIDR blocks (IP address ranges) for the associated AWS service. The latter may be useful e.g. for adding network ACL rules.</source>
          <target state="translated">변수에 지정된 접두사 목록을 확인하고 관련 AWS 서비스에 대한 CIDR 블록 (IP 주소 범위)을 얻는 데 모두 사용할 수 있습니다. 후자는 네트워크 ACL 규칙을 추가하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a898ab1d247ff5e6f831c4e4b33739d90306cb90" translate="yes" xml:space="preserve">
          <source>This can be used both to validate an availability zone given in a variable and to split the AZ name into its component parts of an AWS region and an AZ identifier letter. The latter may be useful e.g. for implementing a consistent subnet numbering scheme across several regions by mapping both the region and the subnet letter to network numbers.</source>
          <target state="translated">변수에 제공된 가용 영역의 유효성을 검사하고 AZ 이름을 AWS 리전의 구성 요소 부분과 AZ 식별자 문자로 분할하는 데 사용할 수 있습니다. 후자는 예를 들어, 지역 및 서브넷 문자를 네트워크 번호에 매핑함으로써 여러 지역에 걸쳐 일관된 서브넷 넘버링 체계를 구현하는데 유용 할 수있다.</target>
        </trans-unit>
        <trans-unit id="010842ac0094e1277c0212efff6b370d0a027d95" translate="yes" xml:space="preserve">
          <source>This can be used for simple resource renaming, moving items to and from a module, moving entire modules, and more. And because this command can also move data to a completely new state, it can also be used for refactoring one configuration into multiple separately managed Terraform configurations.</source>
          <target state="translated">이는 간단한 자원 이름 변경, 항목을 모듈로 이동하거나 모듈 전체로 이동하는 데 사용할 수 있습니다. 또한이 명령은 데이터를 완전히 새로운 상태로 이동할 수 있으므로 하나의 구성을 여러 개의 개별 관리 형 Terraform 구성으로 리팩토링하는 데에도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddeb1e05e2adba2353e1e2acc6ffaee605524c7e" translate="yes" xml:space="preserve">
          <source>This can be used to initialize your cluster with system jobs, common services, and more. In day to day Nomad use it is common for developers to submit jobs to Nomad directly, such as for general app deployment. In addition to these apps, a Nomad cluster often runs core system services that are ideally setup during infrastructure creation. This resource is ideal for the latter type of job, but can be used to manage any job within Nomad.</source>
          <target state="translated">시스템 작업, 공통 서비스 등으로 클러스터를 초기화하는 데 사용할 수 있습니다. 일상적인 Nomad 사용 일반적인 개발자 배포와 같이 개발자가 Nomad에 직접 작업을 제출하는 것이 일반적입니다. 이러한 응용 프로그램 외에도 Nomad 클러스터는 종종 인프라 생성 중에 이상적으로 설정된 핵심 시스템 서비스를 실행합니다. 이 자원은 후자의 작업에 이상적이지만 Nomad 내의 모든 작업을 관리하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b2e1e7ba9542f550f98db517bcc45ff704da9b1" translate="yes" xml:space="preserve">
          <source>This command &lt;em&gt;will not&lt;/em&gt; modify infrastructure, but does modify the state file in order to mark a resource as tainted. Once a resource is marked as tainted, the next &lt;a href=&quot;plan&quot;&gt;plan&lt;/a&gt; will show that the resource will be destroyed and recreated and the next &lt;a href=&quot;apply&quot;&gt;apply&lt;/a&gt; will implement this change.</source>
          <target state="translated">이 명령 &lt;em&gt;은&lt;/em&gt; 인프라를 수정하지 않지만 자원을 오염 된 것으로 표시하기 위해 상태 파일을 수정합니다. 자원이 오염 된 것으로 표시되면 다음 &lt;a href=&quot;plan&quot;&gt;계획&lt;/a&gt; 은 자원이 파괴 및 재생성 될 것이며 다음 &lt;a href=&quot;apply&quot;&gt;적용&lt;/a&gt; 은이 변경을 구현할 것임을 보여줄 것입니다.</target>
        </trans-unit>
        <trans-unit id="f4b126b382d1025a5b9c729ccd1e252c2f841fe0" translate="yes" xml:space="preserve">
          <source>This command &lt;em&gt;will not&lt;/em&gt; modify infrastructure, but does modify the state file in order to unmark a resource as tainted.</source>
          <target state="translated">이 명령 &lt;em&gt;은&lt;/em&gt; 인프라를 수정하지 않지만 자원을 오염 된 것으로 표시하지 &lt;em&gt;않도록&lt;/em&gt; 상태 파일을 수정합니다.</target>
        </trans-unit>
        <trans-unit id="880018b100e51397c1fafd6db6c86c016c1ddfa0" translate="yes" xml:space="preserve">
          <source>This command &lt;strong&gt;does not&lt;/strong&gt; check formatting (e.g. tabs vs spaces, newlines, comments etc.).</source>
          <target state="translated">이 명령 &lt;strong&gt;은&lt;/strong&gt; 서식을 검사 &lt;strong&gt;하지 않습니다&lt;/strong&gt; (예 : 탭 대 공백, 줄 바꿈, 주석 등).</target>
        </trans-unit>
        <trans-unit id="2d4530165ff5b154e81c03f759114f4e4b03916d" translate="yes" xml:space="preserve">
          <source>This command accepts all the arguments and flags that the &lt;a href=&quot;apply&quot;&gt;apply command&lt;/a&gt; accepts, with the exception of a plan file argument.</source>
          <target state="translated">이 명령은 계획 파일 인수를 제외 하고 &lt;a href=&quot;apply&quot;&gt;apply 명령&lt;/a&gt; 이 수락하는 모든 인수 및 플래그를 승인합니다.</target>
        </trans-unit>
        <trans-unit id="70408063ba0290e8c34f6c206bc7670488050f0e" translate="yes" xml:space="preserve">
          <source>This command flags that this object must be re-created in the next Terraform plan, so a subsequent &lt;code&gt;terraform apply&lt;/code&gt; will then replace the deployment and thus activate the latest configuration changes.</source>
          <target state="translated">이 명령은이 객체가 다음 Terraform 계획에서 다시 작성되어야한다고 플래그 지정하므로 이후의 &lt;code&gt;terraform apply&lt;/code&gt; 는 배치를 대체하여 최신 구성 변경을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="a019cae9b457689e95efd7ca76dae8ac1ec46e4a" translate="yes" xml:space="preserve">
          <source>This command gives an overview of all of the current dependencies, as an aid to understanding why a particular provider is needed.</source>
          <target state="translated">이 명령은 특정 제공자가 필요한 이유를 이해하는 데 도움이되는 모든 현재 종속성에 대한 개요를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8378fb1040000bb7458341e5deff77afab056b77" translate="yes" xml:space="preserve">
          <source>This command is a container for further subcommands. These subcommands are listed in the navigation bar.</source>
          <target state="translated">이 명령은 추가 하위 명령의 컨테이너입니다. 이 하위 명령은 탐색 모음에 나열됩니다.</target>
        </trans-unit>
        <trans-unit id="466d7987824390e769aadd1c6769612659d5e739" translate="yes" xml:space="preserve">
          <source>This command is a convenient way to check whether the execution plan for a set of changes matches your expectations without making any changes to real resources or to the state. For example, &lt;code&gt;terraform plan&lt;/code&gt; might be run before committing a change to version control, to create confidence that it will behave as expected.</source>
          <target state="translated">이 명령은 실제 ​​자원이나 상태를 변경하지 않고 일련의 변경에 대한 실행 계획이 예상과 일치하는지 확인하는 편리한 방법입니다. 예를 들어, 버전 제어에 대한 변경 사항을 커미트하기 전에 &lt;code&gt;terraform plan&lt;/code&gt; 실행하여 예상대로 작동한다는 확신을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f59d0b1feb96300f69785af8ce2be80e5d3aad7e" translate="yes" xml:space="preserve">
          <source>This command is a nested subcommand, meaning that it has further subcommands. These subcommands are listed to the left.</source>
          <target state="translated">이 명령은 중첩 된 하위 명령이며 추가 하위 명령이 있음을 의미합니다. 이 부속 명령은 왼쪽에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bd49e52791989154042f93cad808a7ed899a71b" translate="yes" xml:space="preserve">
          <source>This command is always safe to run multiple times, to bring the working directory up to date with changes in the configuration. Though subsequent runs may give errors, this command will never delete your existing configuration or state.</source>
          <target state="translated">이 명령은 구성을 변경하여 작업 디렉토리를 최신 상태로 유지하기 위해 항상 여러 번 실행하는 것이 안전합니다. 후속 실행에서 오류가 발생할 수 있지만이 명령은 기존 구성이나 상태를 삭제하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0f50f7e35efa2920f7f49b12719a943f9519a077" translate="yes" xml:space="preserve">
          <source>This command locates the AWS instance with ID &lt;code&gt;i-abcd1234&lt;/code&gt; and attaches its existing settings, as described by the EC2 API, to the name &lt;code&gt;aws_instance.example&lt;/code&gt; in the Terraform state.</source>
          <target state="translated">이 명령은 ID가 &lt;code&gt;i-abcd1234&lt;/code&gt; 인 AWS 인스턴스를 찾고 EC2 API에 설명 된대로 기존 설정을 Terraform 상태 의 이름 &lt;code&gt;aws_instance.example&lt;/code&gt; 에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="caba3a43260ce387e34a7fa777a997f705726326" translate="yes" xml:space="preserve">
          <source>This command performs several different initialization steps in order to prepare a working directory for use. More details on these are in the sections below, but in most cases it is not necessary to worry about these individual steps.</source>
          <target state="translated">이 명령은 작업 디렉토리 사용을 준비하기 위해 여러 가지 다른 초기화 단계를 수행합니다. 이에 대한 자세한 내용은 아래 섹션에 있지만 대부분의 경우 이러한 개별 단계에 대해 걱정할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="a4b58ea2481d3345220f2f605b32bfad91794843" translate="yes" xml:space="preserve">
          <source>This command requires a address that points to a single resource in the state. Addresses are in &lt;a href=&quot;addressing&quot;&gt;resource addressing format&lt;/a&gt;.</source>
          <target state="translated">이 명령에는 해당 상태의 단일 리소스를 가리키는 주소가 필요합니다. 주소는 &lt;a href=&quot;addressing&quot;&gt;자원 주소 형식&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="aa82cee053280bfed72f956a385da0df952b4398" translate="yes" xml:space="preserve">
          <source>This command requires a source and destination address of the item to move. Addresses are in &lt;a href=&quot;addressing&quot;&gt;resource addressing format&lt;/a&gt;.</source>
          <target state="translated">이 명령을 사용하려면 항목의 소스 및 대상 주소를 이동해야합니다. 주소는 &lt;a href=&quot;addressing&quot;&gt;자원 주소 형식&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="27ef4580d9d3b3498f06ffb476825a024002190a" translate="yes" xml:space="preserve">
          <source>This command requires one or more addresses that point to a resources in the state. Addresses are in &lt;a href=&quot;addressing&quot;&gt;resource addressing format&lt;/a&gt;.</source>
          <target state="translated">이 명령에는 상태의 자원을 가리키는 하나 이상의 주소가 필요합니다. 주소는 &lt;a href=&quot;addressing&quot;&gt;자원 주소 형식&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="478092c4bba5c45a0f7b98aab046ce15ac3b3b95" translate="yes" xml:space="preserve">
          <source>This command should rarely be used. It is meant only as a utility in case manual intervention is necessary with the remote state.</source>
          <target state="translated">이 명령은 거의 사용하지 않아야합니다. 원격 상태에서 수동 개입이 필요한 경우에만 유틸리티로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fc3ff4d8dde168524c2d8209b5db781ef0881f43" translate="yes" xml:space="preserve">
          <source>This command will create a new workspace with the given name. A workspace with this name must not already exist.</source>
          <target state="translated">이 명령은 주어진 이름으로 새 작업 공간을 만듭니다. 이 이름의 작업 공간이 존재하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="41f977673529627ba6874c322f476a912e58f777" translate="yes" xml:space="preserve">
          <source>This command will delete the specified workspace.</source>
          <target state="translated">이 명령은 지정된 작업 공간을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="8c0f7ef8243119c39e9f3c1ab1849c8cb50be34d" translate="yes" xml:space="preserve">
          <source>This command will download any modules that haven't been updated already, as well as performing other Terraform working directory initialization such as installing providers.</source>
          <target state="translated">이 명령은 아직 업데이트되지 않은 모듈을 다운로드하고 공급자 설치와 같은 다른 Terraform 작업 디렉토리 초기화를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="2529874bcc496823935a7e206e80e5412339e81c" translate="yes" xml:space="preserve">
          <source>This command will download the state from its current location and output the raw format to stdout.</source>
          <target state="translated">이 명령은 현재 위치에서 상태를 다운로드하고 원시 형식을 stdout으로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="0ecda9a87730046f636b241ba75f47a961f28466" translate="yes" xml:space="preserve">
          <source>This command will move an item matched by the address given to the destination address. This command can also move to a destination address in a completely different state file.</source>
          <target state="translated">이 명령은 대상 주소에 지정된 주소와 일치하는 항목을 이동합니다. 이 명령은 완전히 다른 상태 파일의 대상 주소로 이동할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d41ee65976faf9a72901f3925b100a157f10e640" translate="yes" xml:space="preserve">
          <source>This command will output 5 values:</source>
          <target state="translated">이 명령은 5 개의 값을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="3af0b5143217b3358e90dfec637671806db6c0eb" translate="yes" xml:space="preserve">
          <source>This command will output a backup copy of the state prior to saving any changes. The backup cannot be disabled. Due to the destructive nature of this command, backups are required.</source>
          <target state="translated">이 명령은 변경 사항을 저장하기 전에 상태의 백업 사본을 출력합니다. 백업을 비활성화 할 수 없습니다. 이 명령의 파괴적인 특성으로 인해 백업이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="fa930d1dcb14abdfcbc1eb463ba44929f8f20533" translate="yes" xml:space="preserve">
          <source>This command will push the state specified by PATH to the currently configured &lt;a href=&quot;../../backends&quot;&gt;backend&lt;/a&gt;.</source>
          <target state="translated">이 명령은 PATH로 지정된 상태를 현재 구성된 &lt;a href=&quot;../../backends&quot;&gt;백엔드로&lt;/a&gt; 푸시합니다 .</target>
        </trans-unit>
        <trans-unit id="fa258287f8bf36e8bf8b5c2f07fcf65a83e74857" translate="yes" xml:space="preserve">
          <source>This command will select another workspace. The named workspace must already exist.</source>
          <target state="translated">이 명령은 다른 작업 공간을 선택합니다. 명명 된 작업 공간이 이미 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="36f2d0819f366588008ce9987dd79b75e52e77d3" translate="yes" xml:space="preserve">
          <source>This config denies all traffic in the Default ACL. This can be useful if you want a locked down default to force all resources in the VPC to assign a non-default ACL.</source>
          <target state="translated">이 구성은 기본 ACL의 모든 트래픽을 거부합니다. VPC의 모든 리소스가 기본이 아닌 ACL을 할당하도록 잠긴 기본값을 원하는 경우에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46127da7589ba1d6cdff6f7b6f5185641a534447" translate="yes" xml:space="preserve">
          <source>This config will write a single service unit (shown below) with the contents of an example service. This unit will be enabled as a dependency of multi-user.target and therefore start on boot</source>
          <target state="translated">이 구성은 예제 서비스의 내용으로 단일 서비스 단위 (아래 표시)를 작성합니다. 이 장치는 multi-user.target의 종속성으로 활성화되므로 부팅시 시작됩니다</target>
        </trans-unit>
        <trans-unit id="510058f8cded2853c8ccaa45dad4809fe030a15c" translate="yes" xml:space="preserve">
          <source>This data source allows to find a Hosted Zone ID given Hosted Zone name and certain search criteria.</source>
          <target state="translated">이 데이터 소스를 사용하면 호스팅 영역 이름과 특정 검색 기준이 지정된 호스팅 영역 ID를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="030ed910aec2f4a515cc5162ff154bc94dea1f75" translate="yes" xml:space="preserve">
          <source>This data source allows you to use data encrypted with Google Cloud KMS within your resource definitions.</source>
          <target state="translated">이 데이터 소스를 사용하면 리소스 정의 내에서 Google Cloud KMS로 암호화 된 데이터를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ede5ac1e4b34a4a0d6d2d4f77095dbc500728bb" translate="yes" xml:space="preserve">
          <source>This data source can be used to fetch information about a specific IAM group. By using this data source, you can reference IAM group properties without having to hard code ARNs as input.</source>
          <target state="translated">이 데이터 소스를 사용하여 특정 IAM 그룹에 대한 정보를 가져올 수 있습니다. 이 데이터 소스를 사용하면 ARN을 입력으로 하드 코딩하지 않고도 IAM 그룹 속성을 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20b5e00d0c3bbeaedb0a5bd4e6ba2a8be9dcfcc3" translate="yes" xml:space="preserve">
          <source>This data source can be used to fetch information about a specific IAM instance profile. By using this data source, you can reference IAM instance profile properties without having to hard code ARNs as input.</source>
          <target state="translated">이 데이터 소스를 사용하여 특정 IAM 인스턴스 프로파일에 대한 정보를 가져올 수 있습니다. 이 데이터 소스를 사용하면 ARN을 입력으로 하드 코딩하지 않고도 IAM 인스턴스 프로파일 속성을 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6c143ca17e73f13ec4b149f4775de4b54ca6038" translate="yes" xml:space="preserve">
          <source>This data source can be used to fetch information about a specific IAM policy.</source>
          <target state="translated">이 데이터 소스를 사용하여 특정 IAM 정책에 대한 정보를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd58c29b3592a4b5a701bb407ea30571c28fdc16" translate="yes" xml:space="preserve">
          <source>This data source can be used to fetch information about a specific IAM role. By using this data source, you can reference IAM role properties without having to hard code ARNs as input.</source>
          <target state="translated">이 데이터 소스를 사용하여 특정 IAM 역할에 대한 정보를 가져올 수 있습니다. 이 데이터 소스를 사용하면 ARN을 입력으로 하드 코딩하지 않고도 IAM 역할 속성을 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="326a2b7b7fce612b1c5568d7757aa9d2783d090c" translate="yes" xml:space="preserve">
          <source>This data source can be used to fetch information about a specific IAM user. By using this data source, you can reference IAM user properties without having to hard code ARNs or unique IDs as input.</source>
          <target state="translated">이 데이터 소스는 특정 IAM 사용자에 대한 정보를 가져 오는 데 사용할 수 있습니다. 이 데이터 소스를 사용하면 ARN 또는 고유 ID를 입력으로 하드 코딩하지 않고도 IAM 사용자 속성을 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="001c3886e4220915cf6b03ea0ae69ac25e0585cc" translate="yes" xml:space="preserve">
          <source>This data source can prove useful when a module accepts an LB Listener as an input variable and needs to know the LB it is attached to, or other information specific to the listener in question.</source>
          <target state="translated">이 데이터 소스는 모듈이 LB 리스너를 입력 변수로 허용하고 LB 리스너에 연결된 LB 또는 해당 리스너에 특정한 기타 정보를 알아야 할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74da52f87f9b9281bea4590ad4bed24ab38ccfd9" translate="yes" xml:space="preserve">
          <source>This data source can prove useful when a module accepts an LB Target Group as an input variable and needs to know its attributes. It can also be used to get the ARN of an LB Target Group for use in other resources, given LB Target Group name.</source>
          <target state="translated">이 데이터 소스는 모듈이 LB 대상 그룹을 입력 변수로 허용하고 해당 속성을 알아야 할 때 유용 할 수 있습니다. 또한 LB 대상 그룹 이름이 지정된 다른 자원에서 사용하기 위해 LB 대상 그룹의 ARN을 가져 오는 데 사용될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8713370b52a95eeeaf252a06248f08977c31cd43" translate="yes" xml:space="preserve">
          <source>This data source can prove useful when a module accepts an LB as an input variable and needs to, for example, determine the security groups associated with it, etc.</source>
          <target state="translated">이 데이터 소스는 모듈이 LB를 입력 변수로 허용하고 예를 들어 이와 관련된 보안 그룹을 결정해야하는 경우에 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="793d6ce40a561d7ebc53f61b5c2e498f49621ca5" translate="yes" xml:space="preserve">
          <source>This data source fetches the project name, and provides the appropriate URLs to use for container registry for this project.</source>
          <target state="translated">이 데이터 소스는 프로젝트 이름을 가져오고이 프로젝트의 컨테이너 레지스트리에 사용할 적절한 URL을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1f2495446cfb8b28e0eb692ac21fb8eb059cac18" translate="yes" xml:space="preserve">
          <source>This data source is different from the &lt;code&gt;consul_service&lt;/code&gt; (singular) data source, which provides a detailed response about a specific Consul service.</source>
          <target state="translated">이 데이터 소스는 특정 Consul 서비스에 대한 자세한 응답을 제공하는 &lt;code&gt;consul_service&lt;/code&gt; (단일) 데이터 소스와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="75788ef2062611bf04c5832afd2131847d23c77a" translate="yes" xml:space="preserve">
          <source>This data source is different from the &lt;code&gt;consul_services&lt;/code&gt; (plural) data source, which provides a summary of the current Consul services.</source>
          <target state="translated">이 데이터 소스는 현재 Consul 서비스의 요약을 제공하는 &lt;code&gt;consul_services&lt;/code&gt; (복수) 데이터 소스와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="7ae5c2539ad97b455148df0585713f475a814f25" translate="yes" xml:space="preserve">
          <source>This data source is used to define IAM policies to apply to other resources. Currently, defining a policy through a datasource and referencing that policy from another resource is the only way to apply an IAM policy to a resource.</source>
          <target state="translated">이 데이터 소스는 다른 리소스에 적용 할 IAM 정책을 정의하는 데 사용됩니다. 현재 데이터 소스를 통해 정책을 정의하고 다른 리소스에서 해당 정책을 참조하는 것이 리소스에 IAM 정책을 적용하는 유일한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="2b3be4693faa82144de420a8b6b96524bb4e16b5" translate="yes" xml:space="preserve">
          <source>This data source provides information about Edge clusters configured in NSX. An Edge cluster is a collection of Edge nodes which can be deployed as either VM form-factor or bare-metal form-factor machines for connectivity between overlay logical switches and non-NSX underlay networking for north/south layer 2 or layer 3 connectivity. Each T0 router will be placed on one ore more Edge nodes in an Edge cluster therefore this data source is needed for the creation of T0 logical routers.</source>
          <target state="translated">이 데이터 소스는 NSX에 구성된 Edge 클러스터에 대한 정보를 제공합니다. Edge 클러스터는 Edge / 노드 레이어 2 또는 레이어 3 연결을위한 오버레이 논리 스위치와 비 NSX 언더 레이 네트워킹 간의 연결을 위해 VM 폼 팩터 또는 베어 메탈 폼 팩터 머신으로 배포 할 수있는 Edge 노드 모음입니다. 각 T0 라우터는 Edge 클러스터에서 하나 이상의 Edge 노드에 배치되므로이 데이터 소스는 T0 논리 라우터를 작성하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="64f641de9b3f8e25fbc1b8bbaad8dbe217fafa75" translate="yes" xml:space="preserve">
          <source>This data source provides information about Transport Zones (TZ) configured in NSX. A Transport Zone defines the scope to which a network can extend in NSX. For example an overlay based Transport Zone is associated with both hypervisors and logical switches and defines which hypervisors will be able to serve the defined logical switch. Virtual machines on the hypervisor associated with a Transport Zone can be attached to logical switches in that same Transport Zone.</source>
          <target state="translated">이 데이터 소스는 NSX에 구성된 TZ (Transport Zones)에 대한 정보를 제공합니다. 전송 영역은 네트워크가 NSX에서 확장 될 수있는 범위를 정의합니다. 예를 들어 오버레이 기반 전송 영역은 하이퍼 바이저 및 논리적 스위치와 연결되며 정의 된 논리적 스위치를 제공 할 수있는 하이퍼 바이저를 정의합니다. 전송 영역과 연결된 하이퍼 바이저의 가상 시스템은 동일한 전송 영역의 논리적 스위치에 연결될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="506e414957f9e1173f66686a55c7a1889a8e6208" translate="yes" xml:space="preserve">
          <source>This data source provides information about a network and security (NS) service configured in NSX. NS services are either factory defined in NSX or can be defined by the NSX administrator. They provide a convenience name for a port/protocol pair that is often used in fire walling or load balancing.</source>
          <target state="translated">이 데이터 소스는 NSX에 구성된 네트워크 및 보안 (NS) 서비스에 대한 정보를 제공합니다. NS 서비스는 기본적으로 NSX에 정의되어 있거나 NSX 관리자가 정의 할 수 있습니다. 방화벽이나로드 밸런싱에 자주 사용되는 포트 / 프로토콜 쌍의 편의 이름을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1c3b1709b00380c9e583ffa96637b4692a598482" translate="yes" xml:space="preserve">
          <source>This data source provides information about logical Tier 0 routers configured in NSX. A Tier 0 router is used to connect NSX networking with traditional physical networking. Tier 0 routers are placed on an Edge cluster and will exist on one or more Edge node depending on deployment settings (i.e. active/active or active/passive). A Tier 0 router forwards layer 3 IP packets and typically peers with a traditional physical router using BGP or can use static routing.</source>
          <target state="translated">이 데이터 소스는 NSX에 구성된 논리적 Tier 0 라우터에 대한 정보를 제공합니다. Tier 0 라우터는 NSX 네트워킹과 기존 물리적 네트워킹을 연결하는 데 사용됩니다. Tier 0 라우터는 Edge 클러스터에 배치되며 배포 설정 (예 : 활성 / 활성 또는 활성 / 수동)에 따라 하나 이상의 Edge 노드에 존재합니다. Tier 0 라우터는 레이어 3 IP 패킷을 전달하며 일반적으로 BGP를 사용하는 기존 물리적 라우터와 피어링하거나 정적 라우팅을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2aff7b013285885f444814e2ca1d95a33827b51c" translate="yes" xml:space="preserve">
          <source>This directory must already exist before Terraform will cache plugins; Terraform will not create the directory itself.</source>
          <target state="translated">Terraform이 플러그인을 캐시하기 전에이 디렉토리가 이미 존재해야합니다. Terraform은 디렉토리 자체를 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="19f9b04d8caff89b0d22e1aff079a8ab4a28e34c" translate="yes" xml:space="preserve">
          <source>This does not actually attach a volume to an instance. Please use the &lt;code&gt;openstack_compute_volume_attach_v2&lt;/code&gt; resource for that.</source>
          <target state="translated">실제로 볼륨을 인스턴스에 연결하지는 않습니다. 이를 위해 &lt;code&gt;openstack_compute_volume_attach_v2&lt;/code&gt; 리소스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca402e7f7814e0dcaeb6cf656d7d6cdf0003471c" translate="yes" xml:space="preserve">
          <source>This does not actually attach a volume to an instance. Please use the &lt;code&gt;openstack_compute_volume_attach_v3&lt;/code&gt; resource for that.</source>
          <target state="translated">실제로 볼륨을 인스턴스에 연결하지는 않습니다. 이를 위해 &lt;code&gt;openstack_compute_volume_attach_v3&lt;/code&gt; 리소스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="381721fd1597318dcb7099b9e0a8302dd3ee8912" translate="yes" xml:space="preserve">
          <source>This does not modify infrastructure, but does modify the state file. If the state is changed, this may cause changes to occur during the next plan or apply.</source>
          <target state="translated">인프라는 수정되지 않지만 상태 파일은 수정됩니다. 상태가 변경되면 다음 계획 또는 적용 중에 변경이 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="503ab6404c97b3a1aa898e03215a5ddd3668a2f5" translate="yes" xml:space="preserve">
          <source>This endpoint allows searching modules.</source>
          <target state="translated">이 엔드 포인트는 모듈 검색을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="961c3598b331b4caf28ac782d98dfefc60dac61a" translate="yes" xml:space="preserve">
          <source>This endpoint downloads the latest version of a module for a single provider.</source>
          <target state="translated">이 엔드 포인트는 단일 제공자에 대한 최신 버전의 모듈을 다운로드합니다.</target>
        </trans-unit>
        <trans-unit id="b0a7984fe89a07c97fda3a51cb6133b52daeb967" translate="yes" xml:space="preserve">
          <source>This endpoint downloads the specified version of a module for a single provider.</source>
          <target state="translated">이 엔드 포인트는 단일 제공자에 대해 지정된 버전의 모듈을 다운로드합니다.</target>
        </trans-unit>
        <trans-unit id="f90689653a2233df7425dbb14c7132c359140c6e" translate="yes" xml:space="preserve">
          <source>This endpoint returns the latest version of a module for a single provider.</source>
          <target state="translated">이 엔드 포인트는 단일 제공자에 대한 최신 버전의 모듈을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a81b0917af405351d840b3eb7bae9021918148f9" translate="yes" xml:space="preserve">
          <source>This endpoint returns the latest version of each provider for a module.</source>
          <target state="translated">이 엔드 포인트는 모듈에 대한 각 제공자의 최신 버전을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="99ad59a5b97306719a3787b149a9ecac43676b3b" translate="yes" xml:space="preserve">
          <source>This endpoint returns the specified version of a module for a single provider.</source>
          <target state="translated">이 엔드 포인트는 단일 제공자에 대해 지정된 버전의 모듈을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c4a02208c73601f4c29131f467d87b40680a155f" translate="yes" xml:space="preserve">
          <source>This establishes the main function to produce a valid, executable Go binary. The contents of the main function consume Terraform's &lt;code&gt;plugin&lt;/code&gt; library. This library deals with all the communication between Terraform core and the plugin.</source>
          <target state="translated">이것은 유효하고 실행 가능한 Go 바이너리를 생성하는 주요 기능을 설정합니다. 주요 기능의 내용은 Terraform의 &lt;code&gt;plugin&lt;/code&gt; 라이브러리를 사용합니다. 이 라이브러리는 Terraform 코어와 플러그인 간의 모든 통신을 다룹니다.</target>
        </trans-unit>
        <trans-unit id="cee1ebf637ff335d2fe77592cc05997940548640" translate="yes" xml:space="preserve">
          <source>This example &lt;code&gt;addons_config&lt;/code&gt; disables two addons:</source>
          <target state="translated">이 예제 &lt;code&gt;addons_config&lt;/code&gt; 는 두 개의 애드온을 비활성화합니다.</target>
        </trans-unit>
        <trans-unit id="4d31375aa763d35ad692b5fc0cd7dc4336b5b408" translate="yes" xml:space="preserve">
          <source>This example creates a custom attribute named &lt;code&gt;terraform-test-attribute&lt;/code&gt;. The resulting custom attribute can be assigned to VMs only.</source>
          <target state="translated">이 예제는 &lt;code&gt;terraform-test-attribute&lt;/code&gt; 라는 사용자 정의 속성을 작성 합니다 . 결과 사용자 정의 속성은 VM에만 할당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddbe40d64427096a005209cb6b53af0b721d7ce2" translate="yes" xml:space="preserve">
          <source>This example creates a tag category named &lt;code&gt;terraform-test-category&lt;/code&gt;, with single cardinality (meaning that only one tag in this category can be assigned to an object at any given time). Tags in this category can only be assigned to VMs and datastores.</source>
          <target state="translated">이 예에서는 단일 카디널리티를 사용하여 &lt;code&gt;terraform-test-category&lt;/code&gt; category라는 태그 범주를 만듭니다 (즉,이 범주에서 하나의 태그 만 주어진 시간에 객체에 할당 할 수 있음). 이 카테고리의 태그는 VM 및 데이터 스토어에만 할당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a0897a4b29727cfda6c5fa13ce8e506507adbdc" translate="yes" xml:space="preserve">
          <source>This example creates a tag named &lt;code&gt;terraform-test-tag&lt;/code&gt;. This tag is assigned the &lt;code&gt;terraform-test-category&lt;/code&gt; category, which was created by the &lt;a href=&quot;tag_category&quot;&gt;&lt;code&gt;vsphere_tag_category&lt;/code&gt; resource&lt;/a&gt;. The resulting tag can be assigned to VMs and datastores only, and can be the only value in the category that can be assigned, as per the restrictions defined by the category.</source>
          <target state="translated">이 예에서는 &lt;code&gt;terraform-test-tag&lt;/code&gt; 라는 태그를 만듭니다 . 이 태그에는 &lt;code&gt;terraform-test-category&lt;/code&gt; 범주 가 할당 되며 &lt;a href=&quot;tag_category&quot;&gt; &lt;code&gt;vsphere_tag_category&lt;/code&gt; resource에&lt;/a&gt; 의해 생성되었습니다 . 결과 태그는 VM 및 데이터 스토어에만 할당 할 수 있으며 카테고리에서 정의한 제한에 따라 할당 할 수있는 카테고리의 유일한 값일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b969d1d711b9587f79787b503c4596e0eaf2c283" translate="yes" xml:space="preserve">
          <source>This example defines a local child module in the &lt;code&gt;./publish_bucket&lt;/code&gt; subdirectory. That module has configuration to create an S3 bucket. The module wraps the bucket and all the other implementation details required to configure a bucket.</source>
          <target state="translated">이 예제는 &lt;code&gt;./publish_bucket&lt;/code&gt; 서브 디렉토리 에 로컬 하위 모듈을 정의합니다 . 해당 모듈에는 S3 버킷을 생성하도록 구성되어 있습니다. 모듈은 버킷과 버킷을 구성하는 데 필요한 다른 모든 구현 세부 사항을 랩핑합니다.</target>
        </trans-unit>
        <trans-unit id="bd298b72ae52628de77f66ce5fd481b2ec1f5729" translate="yes" xml:space="preserve">
          <source>This example is the common case of creating a repository within Google Cloud Source Repositories:</source>
          <target state="translated">이 예는 Google Cloud Source Repositories에서 저장소를 작성하는 일반적인 경우입니다.</target>
        </trans-unit>
        <trans-unit id="b65b463438becb1ee94d4781017bac2a04b36b34" translate="yes" xml:space="preserve">
          <source>This example sets the trunk mode VLAN (&lt;code&gt;4095&lt;/code&gt;, which passes through all tags) and sets &lt;a href=&quot;host_virtual_switch#allow_promiscuous&quot;&gt;&lt;code&gt;allow_promiscuous&lt;/code&gt;&lt;/a&gt; to ensure that all traffic is seen on the port. The latter setting overrides the implicit default of &lt;code&gt;false&lt;/code&gt; set on the virtual switch.</source>
          <target state="translated">이 예에서는 트렁크 모드 VLAN ( &lt;code&gt;4095&lt;/code&gt; , 모든 태그를 통과 함)을 설정 하고 모든 트래픽이 포트에 표시되도록 &lt;a href=&quot;host_virtual_switch#allow_promiscuous&quot;&gt; &lt;code&gt;allow_promiscuous&lt;/code&gt; &lt;/a&gt; 를 설정합니다 . 후자의 설정 은 가상 스위치 의 암시 적 기본값 인 &lt;code&gt;false&lt;/code&gt; 설정을 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="e66e500899a5c6d51971a017cfbf85eacf5701b7" translate="yes" xml:space="preserve">
          <source>This example shows how to customize the TLS settings of an HTTPS listener.</source>
          <target state="translated">이 예는 HTTPS 리스너의 TLS 설정을 사용자 정의하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6bc0caa5ca2a8418856d4c7721b39677bd33b87b" translate="yes" xml:space="preserve">
          <source>This example shows how to enable backend authentication for an ELB as well as customize the TLS settings.</source>
          <target state="translated">이 예는 ELB에 대한 백엔드 인증을 활성화하고 TLS 설정을 사용자 정의하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2162e9b51d9e6acfb20db851802212c206478a0e" translate="yes" xml:space="preserve">
          <source>This example will import an AWS instance:</source>
          <target state="translated">이 예제는 AWS 인스턴스를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="86fa4cd7aeab57084d29a2e88ac4419f26f2042c" translate="yes" xml:space="preserve">
          <source>This example will list all resources, including modules:</source>
          <target state="translated">이 예제는 모듈을 포함한 모든 리소스를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="8aa4ad2afe87474dd8d5bfd7b85f8849c794faef" translate="yes" xml:space="preserve">
          <source>This example will only list resources for the given name:</source>
          <target state="translated">이 예제는 주어진 이름에 대한 리소스 만 나열합니다.</target>
        </trans-unit>
        <trans-unit id="0d124174505cfcf6d38596834d9ce461c2dbadd9" translate="yes" xml:space="preserve">
          <source>This example will only list resources in the given module:</source>
          <target state="translated">이 예는 주어진 모듈의 리소스 만 나열합니다.</target>
        </trans-unit>
        <trans-unit id="4b2991fd76dccdd2bd7beeec3818241995546313" translate="yes" xml:space="preserve">
          <source>This example will only list the resource whose ID is specified on the command line. This is useful to find where in your configuration a specific resource is located.</source>
          <target state="translated">이 예에서는 명령 줄에 ID가 지정된 리소스 만 나열합니다. 이는 구성에서 특정 리소스가있는 위치를 찾는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="801a2faa6053ec3283d5dde81d9842cc32db9041" translate="yes" xml:space="preserve">
          <source>This example will only taint a resource within a module:</source>
          <target state="translated">이 예제는 모듈 내의 리소스 만 오염시킵니다.</target>
        </trans-unit>
        <trans-unit id="ac94b391f1c694e200ed37c429b0bd3e6fd9841f" translate="yes" xml:space="preserve">
          <source>This example will taint a single resource:</source>
          <target state="translated">이 예제는 단일 리소스를 오염시킵니다.</target>
        </trans-unit>
        <trans-unit id="6be084e4bc258be1df28e81455723dafd765f48d" translate="yes" xml:space="preserve">
          <source>This file allows you to define some variables that can be reused in multiple .tf files.</source>
          <target state="translated">이 파일을 사용하면 여러 .tf 파일에서 재사용 할 수있는 일부 변수를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="688cc06ef18598eeab9482f3def5129d251adb72" translate="yes" xml:space="preserve">
          <source>This file allows you to set some variables that can be reused in multiple .tf files.</source>
          <target state="translated">이 파일을 사용하면 여러 .tf 파일에서 재사용 할 수있는 일부 변수를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f199590efdc1b3be1433d681dd1a540ba83fc5c2" translate="yes" xml:space="preserve">
          <source>This file will define the logical networking topology that Terraform will create in NSX.</source>
          <target state="translated">이 파일은 Terraform이 NSX에서 생성 할 논리적 네트워킹 토폴로지를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="03d3614234a7335b64e1b0e06c99ba7952b2597e" translate="yes" xml:space="preserve">
          <source>This group includes cloud providers offering a range of services including IaaS, SaaS, and PaaS offerings. This group of cloud providers includes some smaller scale clouds or ones with more specialized offerings. The Terraform provider and associated resources for these clouds are primarily supported by the cloud vendor in close collaboration with HashiCorp, and are tested by HashiCorp.</source>
          <target state="translated">이 그룹에는 IaaS, SaaS 및 PaaS 오퍼링을 포함한 다양한 서비스를 제공하는 클라우드 제공자가 포함됩니다. 이 클라우드 제공 업체 그룹에는 소규모 클라우드 또는보다 전문적인 오퍼링이 포함 된 클라우드 제공 업체가 포함됩니다. 이러한 클라우드에 대한 Terraform 제공자 및 관련 리소스는 주로 HashiCorp와 긴밀히 협력하여 클라우드 공급 업체에서 지원하며 HashiCorp에서 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="183386cf5fdd34c38acf9e95cfa49813832d4d5c" translate="yes" xml:space="preserve">
          <source>This group includes hyper-scale cloud providers that offer a range of services including IaaS, SaaS, and PaaS. A large percentage of Terraform users provision their infrastructure on these major cloud providers. HashiCorp closely partners with these cloud providers to offer best-in-class integration to provision and manage the majority of the services offered. These providers are primarily supported by the cloud vendor in close collaboration with HashiCorp, and are tested by HashiCorp.</source>
          <target state="translated">이 그룹에는 IaaS, SaaS 및 PaaS를 포함한 다양한 서비스를 제공하는 하이퍼 스케일 클라우드 제공자가 포함됩니다. Terraform 사용자의 대다수는 이러한 주요 클라우드 제공 업체에 인프라를 프로비저닝합니다. HashiCorp는 이러한 클라우드 제공 업체와 긴밀히 협력하여 제공되는 대부분의 서비스를 프로비저닝하고 관리 할 수있는 동급 최고의 통합 기능을 제공합니다. 이러한 공급 업체는 주로 클라우드 공급 업체에서 HashiCorp와의 긴밀한 협력을 통해 지원되며 HashiCorp에서 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="a0f70cdeb90d21ee4507ac2519020511bfa10ee9" translate="yes" xml:space="preserve">
          <source>This guide assumes that you have &lt;a href=&quot;https://github.com/Azure/azure-cli&quot;&gt;the Azure CLI 2.0 (Python)&lt;/a&gt; installed.</source>
          <target state="translated">이 가이드에서는 &lt;a href=&quot;https://github.com/Azure/azure-cli&quot;&gt;Azure CLI 2.0 (Python)이&lt;/a&gt; 설치되어 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="4ef3ad297f55c41fd3e0ef844310898acc67523a" translate="yes" xml:space="preserve">
          <source>This guide covers the schema and structure for implementing a Terraform provider using the provider framework. As next steps, reference the internal providers for examples. Terraform also includes a full framework for testing providers.</source>
          <target state="translated">이 안내서는 제공자 프레임 워크를 사용하여 Terraform 제공자를 구현하기위한 스키마 및 구조에 대해 설명합니다. 다음 단계로, 예를 들어 내부 제공자를 참조하십시오. Terraform에는 테스트 제공 업체를위한 완전한 프레임 워크도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2acf3d77bcb3e739b9962ad3c494d0125cf41d1" translate="yes" xml:space="preserve">
          <source>This guide creates a very simple API Gateway Configuration with a single resource that passes through all requests to a single destination. The upgrade steps then modify only the AWS Lambda function, leaving the API Gateway configuration unchanged.</source>
          <target state="translated">이 안내서는 모든 요청을 단일 대상으로 전달하는 단일 자원으로 매우 간단한 API 게이트웨이 구성을 작성합니다. 그런 다음 업그레이드 단계는 AWS Lambda 기능 만 수정하고 API 게이트웨이 구성은 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="84465be9de92a26fc8acb356066eb0886ab3060c" translate="yes" xml:space="preserve">
          <source>This guide focuses mainly on the latter part and expects you to have a properly configured &amp;amp; running Kubernetes cluster.</source>
          <target state="translated">이 가이드는 주로 후자에 중점을두고 Kubernetes 클러스터를 올바르게 구성하고 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="8c2e642a1a973c9a1faca902151eff4dd5bc63bc" translate="yes" xml:space="preserve">
          <source>This guide will show how to deploy a sample architecture using Terraform. The guide assumes some basic familiarity with Kubernetes but does not assume any pre-existing deployment. It also assumes that you are familiar with the usual Terraform plan/apply workflow; if you're new to Terraform itself, refer first to &lt;a href=&quot;https://www.terraform.io/intro/getting-started/install.html&quot;&gt;the Getting Started guide&lt;/a&gt;.</source>
          <target state="translated">이 안내서는 Terraform을 사용하여 샘플 아키텍처를 배포하는 방법을 보여줍니다. 이 가이드는 Kubernetes에 대해 어느 정도 친숙하다고 가정하지만 기존 배포는 가정하지 않습니다. 또한 일반적인 Terraform 계획 / 적용 워크 플로우에 익숙하다고 가정합니다. Terraform 자체를 처음 사용하는 &lt;a href=&quot;https://www.terraform.io/intro/getting-started/install.html&quot;&gt;경우&lt;/a&gt; 먼저 시작 안내서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="270b58b5e25e819fa878a52dc375c3771ffdc8a8" translate="yes" xml:space="preserve">
          <source>This guide will show how to deploy such an architecture using Terraform. The guide assumes some basic familiarity with Lambda and API Gateway but does not assume any pre-existing deployment. It also assumes that you are familiar with the usual Terraform plan/apply workflow; if you're new to Terraform itself, refer first to &lt;a href=&quot;https://www.terraform.io/intro/getting-started/install.html&quot;&gt;the Getting Started guide&lt;/a&gt;.</source>
          <target state="translated">이 안내서는 Terraform을 사용하여 이러한 아키텍처를 배포하는 방법을 보여줍니다. 이 가이드는 Lambda 및 API Gateway에 대한 기본 지식이 있다고 가정하지만 기존 배포는 가정하지 않습니다. 또한 일반적인 Terraform 계획 / 적용 워크 플로우에 익숙하다고 가정합니다. Terraform 자체를 처음 사용하는 &lt;a href=&quot;https://www.terraform.io/intro/getting-started/install.html&quot;&gt;경우&lt;/a&gt; 먼저 시작 안내서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f242707a7e0abdff76b8c8805b269f7f470d77e7" translate="yes" xml:space="preserve">
          <source>This information can then be fed into a provisioner or a template shell script, where the final result would look something like:</source>
          <target state="translated">그런 다음이 정보를 프로 비 저나 템플릿 셸 스크립트에 제공하면 최종 결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e79188694c70c4edb6d17ee6a2001c15e60a9b20" translate="yes" xml:space="preserve">
          <source>This integration uses the new DNSimple API v2 &lt;a href=&quot;https://blog.dnsimple.com/2016/12/api-v2-stable/&quot;&gt;released on December 2016&lt;/a&gt;. The API v2 provides support for multi-accounts and requires a new authentication mechanism.</source>
          <target state="translated">이 통합은 &lt;a href=&quot;https://blog.dnsimple.com/2016/12/api-v2-stable/&quot;&gt;2016 년 12 월에 릴리스 된&lt;/a&gt; 새로운 DNSimple API v2를 사용합니다 . API v2는 다중 계정을 지원하며 새로운 인증 메커니즘이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9b82f3cedc93433a08ee27b986aedee54ef0980d" translate="yes" xml:space="preserve">
          <source>This interface is extremely low level, however, and we don't recommend you implement it directly. Implementing the interface directly is error prone, complicated, and difficult.</source>
          <target state="translated">그러나이 인터페이스는 수준이 매우 낮으므로 직접 구현하지 않는 것이 좋습니다. 인터페이스를 직접 구현하는 것은 오류가 발생하기 쉽고 복잡하며 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="4413b8e76cbec8956f84ade2fc4c7d16a528797f" translate="yes" xml:space="preserve">
          <source>This is a &lt;em&gt;logical resource&lt;/em&gt;, so it contributes only to the current Terraform state and does not create any external managed resources.</source>
          <target state="translated">이 &lt;em&gt;리소스&lt;/em&gt; 는 &lt;em&gt;논리 리소스&lt;/em&gt; 이므로 현재 Terraform 상태에만 기여하며 외부 관리 리소스를 만들지 않습니다.</target>
        </trans-unit>
        <trans-unit id="07bfa42ff2128d2ffc9361d59edaa9cf13db5e0b" translate="yes" xml:space="preserve">
          <source>This is a data source which can be used to construct a JSON representation of an IAM policy document, for use with resources which expect policy documents, such as the &lt;code&gt;aws_iam_policy&lt;/code&gt; resource.</source>
          <target state="translated">이는 &lt;code&gt;aws_iam_policy&lt;/code&gt; 리소스 와 같은 정책 문서가 필요한 리소스와 함께 사용하기 위해 IAM 정책 문서의 JSON 표현을 구성하는 데 사용할 수있는 데이터 소스입니다 .</target>
        </trans-unit>
        <trans-unit id="0d7caf81dc3149f9bd6ca6ba3a7a5275be094712" translate="yes" xml:space="preserve">
          <source>This is a good milestone! The first version of the application is deployed and accessible. Next we will see how to deploy a new version of the application.</source>
          <target state="translated">이것은 좋은 이정표입니다! 응용 프로그램의 첫 번째 버전이 배포되고 액세스 가능합니다. 다음으로 새로운 버전의 응용 프로그램을 배포하는 방법을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="07d029cb3cb25dfca0ee3ec3e8039644f7f2840a" translate="yes" xml:space="preserve">
          <source>This is a great way to slowly transition infrastructure to Terraform, or to be able to be confident that you can use Terraform in the future if it potentially doesn't support every feature you need today.</source>
          <target state="translated">이는 인프라를 Terraform으로 천천히 전환하거나 현재 필요한 모든 기능을 지원하지 않을 경우 향후 Terraform을 사용할 수 있다고 확신 할 수있는 좋은 방법입니다.</target>
        </trans-unit>
        <trans-unit id="608fede3468a1fe145254314d5f370958f127eed" translate="yes" xml:space="preserve">
          <source>This is a group of Version Control System (VCS) providers that offer capabilities of using Terraform to manage your VCS projects, teams and repositories. Terraform integrates with these services to create and manage resources provided by the VCS. These providers are primarily supported by the vendor in close collaboration with HashiCorp, and are tested by HashiCorp.</source>
          <target state="translated">VCS 프로젝트, 팀 및 리포지토리를 관리하기 위해 Terraform을 사용하는 기능을 제공하는 VCS (Version Control System) 공급자 그룹입니다. Terraform은 이러한 서비스와 통합되어 VCS에서 제공하는 리소스를 생성 및 관리합니다. 이러한 공급자는 주로 공급 업체가 HashiCorp와 긴밀히 협력하여 지원하며 HashiCorp에서 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="f3e149d4c603ee8a317154b12592636d80eb0469" translate="yes" xml:space="preserve">
          <source>This is a group of database providers offer specific capabilities to provision and configure your database resources. Terraform integrates with with these database services using the specific provider to provision and manages database resources. These providers are primarily supported by the vendor in close collaboration with HashiCorp, and are tested by HashiCorp.</source>
          <target state="translated">데이터베이스 공급자 그룹은 데이터베이스 리소스를 프로비저닝하고 구성 할 수있는 특정 기능을 제공합니다. Terraform은 특정 공급자를 사용하여 이러한 데이터베이스 서비스와 통합하여 데이터베이스 리소스를 프로비저닝하고 관리합니다. 이러한 공급자는 주로 공급 업체가 HashiCorp와 긴밀히 협력하여 지원하며 HashiCorp에서 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="04b5c7c33b8adb44aa9d4178abaaec2d88d17b2b" translate="yes" xml:space="preserve">
          <source>This is a group of miscellaneous providers offer specific capabilities that can be useful when working with Terraform. These providers are primarily supported by the vendors and the Terraform community, and are tested by HashiCorp.</source>
          <target state="translated">이것은 기타 공급 업체 그룹으로 Terraform 작업시 유용 할 수있는 특정 기능을 제공합니다. 이 공급자는 주로 공급 업체와 Terraform 커뮤니티에서 지원하며 HashiCorp에서 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="9c78c022df9db3226ace0861f7281884bd22f00b" translate="yes" xml:space="preserve">
          <source>This is a group of monitoring &amp;amp; system management providers that offer the capability to configure and manage services such as loggers, metric tools, and monitoring services. Terraform integrates with these services using the specific provider to enable these specialized monitoring capabilities. These providers are primarily supported by the vendor in close collaboration with HashiCorp, and are tested by HashiCorp.</source>
          <target state="translated">로거, 메트릭 도구 및 모니터링 서비스와 같은 서비스를 구성하고 관리하는 기능을 제공하는 모니터링 및 시스템 관리 공급자 그룹입니다. Terraform은 특정 공급자를 사용하여 이러한 서비스와 통합하여 이러한 특수한 모니터링 기능을 활성화합니다. 이러한 공급자는 주로 공급 업체가 HashiCorp와 긴밀히 협력하여 지원하며 HashiCorp에서 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="e80a22c6fd16702f6b454f521c897a43ac564a14" translate="yes" xml:space="preserve">
          <source>This is a group of network providers that offer specific network capabilities such and DNS, routing, and firewall configuration. The providers generally offer a cloud-based service and Terraform integrates with these services using the specific providers. These providers are primarily supported by the vendor in close collaboration with HashiCorp, and are tested by HashiCorp.</source>
          <target state="translated">DNS, 라우팅 및 방화벽 구성과 같은 특정 네트워크 기능을 제공하는 네트워크 공급자 그룹입니다. 공급자는 일반적으로 클라우드 기반 서비스를 제공하며 Terraform은 특정 공급자를 사용하여 이러한 서비스와 통합됩니다. 이러한 공급자는 주로 공급 업체가 HashiCorp와 긴밀히 협력하여 지원하며 HashiCorp에서 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="0dcd949ae16e3db7453e2df20c09099f7ef62cc1" translate="yes" xml:space="preserve">
          <source>This is a group of software providers offering specialized infrastructure management capabilities such as configuration management. Terraform integrates with these tools using the specific providers to enable these specialized tools to execute tasks during the provisioning of infrastructure. These providers are primarily supported by the vendor in close collaboration with HashiCorp, and are tested by HashiCorp.</source>
          <target state="translated">구성 관리와 같은 특수한 인프라 관리 기능을 제공하는 소프트웨어 공급자 그룹입니다. Terraform은 특정 공급자를 사용하여 이러한 도구와 통합되어 인프라를 프로비저닝하는 동안 이러한 특수 도구로 작업을 실행할 수 있습니다. 이러한 공급자는 주로 공급 업체가 HashiCorp와 긴밀히 협력하여 지원하며 HashiCorp에서 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="c983d9692de16640a5145a1d82201d6749fd5b5c" translate="yes" xml:space="preserve">
          <source>This is a preferred approach over any other when running in EC2 as you can avoid hard coding credentials. Instead these are leased on-the-fly by Terraform which reduces the chance of leakage.</source>
          <target state="translated">하드 코딩 자격 증명을 피할 수 있으므로 EC2에서 실행할 때 다른 방법보다 선호되는 방법입니다. 대신 이들은 Terraform에 의해 즉각 임대되어 누출 가능성을 줄입니다.</target>
        </trans-unit>
        <trans-unit id="a8382b9a2dcd2c3e104ccc81107ec805acfe4570" translate="yes" xml:space="preserve">
          <source>This is a slightly-opinionated guide, which chooses to ignore the built-in versioning and staged deployment mechanisms in AWS Lambda and API Gateway. In many cases these features are not necessary when using Terraform because changes can be tracked and deployed by keeping the Terraform configuration in a version-control repository. It also uses API Gateway in a very simple way, proxying all requests to a single AWS Lambda function that is expected to contain its own request routing logic.</source>
          <target state="translated">AWS Lambda 및 API Gateway의 기본 제공 버전 관리 및 단계적 배포 메커니즘을 무시하도록 선택하는 가이드입니다. Terraform 구성을 버전 제어 저장소에 유지하여 변경 사항을 추적하고 배포 할 수 있으므로 Terraform을 사용할 때 이러한 기능이 필요하지 않은 경우가 많습니다. 또한 API Gateway를 매우 간단한 방식으로 사용하여 모든 요청을 자체 요청 라우팅 로직을 포함 할 것으로 예상되는 단일 AWS Lambda 함수로 프록시 처리합니다.</target>
        </trans-unit>
        <trans-unit id="75b56ed5d77d80fd00ea07887d004c6f56ef2400" translate="yes" xml:space="preserve">
          <source>This is an advanced section! If you are looking for information on using Terraform with any of the existing Plugins, please refer to the &lt;a href=&quot;../index&quot;&gt;Docs&lt;/a&gt; section of this website.</source>
          <target state="translated">이것은 고급 섹션입니다! 기존 플러그인과 함께 Terraform을 사용하는 방법에 대한 정보 는이 웹 사이트 의 &lt;a href=&quot;../index&quot;&gt;문서&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="229b99b373df78bb60803b5b9ce21e8ec335bc5f" translate="yes" xml:space="preserve">
          <source>This is deliberately very similar to accessing resource attributes. Instead of referencing a resource attribute, however, the expression in this case references an output of the module.</source>
          <target state="translated">이것은 의도적으로 리소스 속성에 액세스하는 것과 매우 유사합니다. 그러나 자원 속성을 참조하는 대신이 경우 표현식은 모듈의 출력을 참조합니다.</target>
        </trans-unit>
        <trans-unit id="4feb33cfec1805d36e0a7befa9fa384affafc295" translate="yes" xml:space="preserve">
          <source>This is different from the &lt;code&gt;aws_availability_zone&lt;/code&gt; (singular) data source, which provides some details about a specific availability zone.</source>
          <target state="translated">이는 특정 가용 영역에 대한 세부 정보를 제공 하는 &lt;code&gt;aws_availability_zone&lt;/code&gt; (단일) 데이터 소스와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="2a4514e6e3a19a5f71933bde174109c4306eee03" translate="yes" xml:space="preserve">
          <source>This is different from the &lt;code&gt;aws_availability_zones&lt;/code&gt; (plural) data source, which provides a list of the available zones.</source>
          <target state="translated">이는 사용 가능한 영역 목록을 제공하는 &lt;code&gt;aws_availability_zones&lt;/code&gt; (복수) 데이터 소스와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="22de64269ac7692d68dfb70351c15ef95b961b7a" translate="yes" xml:space="preserve">
          <source>This is equivalent to using the &lt;code&gt;--add-host&lt;/code&gt; option when using the &lt;code&gt;run&lt;/code&gt; command of the Docker CLI.</source>
          <target state="translated">이는 Docker CLI 의 &lt;code&gt;run&lt;/code&gt; 명령을 사용할 때 &lt;code&gt;--add-host&lt;/code&gt; 옵션 을 사용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="be7a17c46a203993822bc59c42a4026f2b181471" translate="yes" xml:space="preserve">
          <source>This is seen in the following AWS IAM Statement:</source>
          <target state="translated">이것은 다음 AWS IAM 정책에서 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="538338fb9a90db738d253038074d50ade4a1b65e" translate="yes" xml:space="preserve">
          <source>This is the appropriate resource to use if &lt;code&gt;terraform destroy&lt;/code&gt; should delete the device group.</source>
          <target state="translated">&lt;code&gt;terraform destroy&lt;/code&gt; 가 장치 그룹을 삭제해야하는 경우 사용할 적절한 자원 입니다.</target>
        </trans-unit>
        <trans-unit id="2a23e652cdc653bb31e19e29a73b6b73a1244195" translate="yes" xml:space="preserve">
          <source>This is the appropriate resource to use if you have a pre-existing device group in Panorama and don't want Terraform to delete it on &lt;code&gt;terraform destroy&lt;/code&gt;.</source>
          <target state="translated">Panorama에 기존 장치 그룹이 있고 Terraform이 &lt;code&gt;terraform destroy&lt;/code&gt; 에서 삭제하지 않으려는 경우이 리소스가 적합합니다 .</target>
        </trans-unit>
        <trans-unit id="7135239207e8f79aec4bea9123d1dce6557dc260" translate="yes" xml:space="preserve">
          <source>This is the basic project structure and scaffolding for a Terraform plugin. To recap, the file structure is:</source>
          <target state="translated">이것은 Terraform 플러그인의 기본 프로젝트 구조 및 스캐 폴딩입니다. 요약하면 파일 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2439a1d45b3a9a58e88148f9b1a63c4d752b3fcb" translate="yes" xml:space="preserve">
          <source>This is the primary endpoint for resolving module sources, returning the available versions for a given fully-qualified module.</source>
          <target state="translated">이것은 모듈 소스를 해결하기위한 기본 엔드 포인트이며 주어진 정규화 된 모듈에 대해 사용 가능한 버전을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="43739d5f758207fa93d3284d3a1fa04d8302d42c" translate="yes" xml:space="preserve">
          <source>This is useful for reading values out of state (potentially pairing this command with something like &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt;). It is also useful if you need to make manual modifications to state.</source>
          <target state="translated">이것은 상태를 벗어난 값을 읽는 데 유용합니다 (잠재적으로이 명령을 &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt; 와 연결 ). 상태를 수동으로 수정해야하는 경우에도 유용합니다.</target>
        </trans-unit>
        <trans-unit id="a8ae2dfda563a46793936efd4deb33aa61d0263e" translate="yes" xml:space="preserve">
          <source>This is useful for taking a single AMI provisioned in one region and making it available in another for a multi-region deployment.</source>
          <target state="translated">이는 한 지역에서 프로비저닝 된 단일 AMI를 가져 와서 여러 지역 배포를 위해 다른 지역에서 사용할 수 있도록하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="402f63edceab9b725d8854ebf7c2820c4970344c" translate="yes" xml:space="preserve">
          <source>This is where the EKS service comes into play. It requires a few operator managed resources beforehand so that Kubernetes can properly manage other AWS services as well as allow inbound networking communication from your local workstation (if desired) and worker nodes.</source>
          <target state="translated">EKS 서비스가 시작됩니다. Kubernetes가 다른 AWS 서비스를 올바르게 관리하고 로컬 워크 스테이션 (원하는 경우) 및 작업자 노드에서 인바운드 네트워킹 통신을 허용 할 수 있도록 사전에 운영자 관리 리소스가 약간 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9b31b4141b3db96f5dc8f28ca9f9ecfc7afead22" translate="yes" xml:space="preserve">
          <source>This limitation may be addressed in future versions of Terraform. For now, destroy-time provisioners must be used sparingly and with care.</source>
          <target state="translated">이 제한은 향후 버전의 Terraform에서 해결 될 수 있습니다. 현재로서는 파괴 시간 제공 업체를 신중하고 신중하게 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="83aee622c5a43495ec1cc9d724385e24f9831e37" translate="yes" xml:space="preserve">
          <source>This makes it significantly easier to use Terraform as a team: team members modify the Terraform configurations locally and continue to use normal version control. When the Terraform configurations are ready to be run, they are pushed to Terraform Enterprise, and any member of your team can run Terraform with the push of a button.</source>
          <target state="translated">이를 통해 팀으로 Terraform을 훨씬 쉽게 사용할 수 있습니다. 팀 구성원은 Terraform 구성을 로컬로 수정하고 계속해서 일반 버전 제어를 사용합니다. Terraform 구성을 실행할 준비가되면 Terraform Enterprise로 푸시되며 팀 구성원은 버튼을 눌러 Terraform을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bbcbca95b5ba6ff70736dffa6fefc14e4cd9d18" translate="yes" xml:space="preserve">
          <source>This map is most commonly constructed once in a common &lt;code&gt;init()&lt;/code&gt; method of the Provider&amp;rsquo;s main test file, and includes an object of the current Provider type.</source>
          <target state="translated">이 맵은 가장 일반적으로 제공자 기본 테스트 파일의 공통 &lt;code&gt;init()&lt;/code&gt; 메소드 에서 한 번 구성 되며 현재 제공자 유형의 오브젝트를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="764a6f60114b53a40d5118cb40dc3404548db92b" translate="yes" xml:space="preserve">
          <source>This opens an interactive console for experimenting with interpolations. This is useful for testing interpolations before using them in configurations as well as interacting with an existing &lt;a href=&quot;../state/index&quot;&gt;state&lt;/a&gt;.</source>
          <target state="translated">보간 실험을위한 대화식 콘솔이 열립니다. 구성에서 보간을 사용하기 전에 보간을 테스트하고 기존 &lt;a href=&quot;../state/index&quot;&gt;상태&lt;/a&gt; 와 상호 작용할 때 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="8caa5b9e5ac509835e9c5282a46c3cdd2728d408" translate="yes" xml:space="preserve">
          <source>This option takes a value of true or false. If this option is not set for a metric it will default to false.</source>
          <target state="translated">이 옵션은 true 또는 false 값을 갖습니다. 이 옵션이 메트릭에 설정되어 있지 않으면 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="25609816d4f9a82d194a003cf2423587671671ea" translate="yes" xml:space="preserve">
          <source>This page assumes you are familiar with the &lt;a href=&quot;syntax&quot;&gt;configuration syntax&lt;/a&gt; already.</source>
          <target state="translated">이 페이지는 사용자가 이미 &lt;a href=&quot;syntax&quot;&gt;구성 구문에&lt;/a&gt; 익숙하다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="6e8af0ee0a94dc9fecdd7c84af542ec1cc4f11f1" translate="yes" xml:space="preserve">
          <source>This page assumes you're already familiar with &lt;a href=&quot;syntax&quot;&gt;the configuration syntax&lt;/a&gt;.</source>
          <target state="translated">이 페이지에서는 이미 &lt;a href=&quot;syntax&quot;&gt;구성 구문에&lt;/a&gt; 익숙하다고 가정 합니다 .</target>
        </trans-unit>
        <trans-unit id="ac0a5c215f9cc19974bd78ee64b9bcf0fdaed476" translate="yes" xml:space="preserve">
          <source>This page assumes you're familiar with the &lt;a href=&quot;syntax&quot;&gt;configuration syntax&lt;/a&gt; already.</source>
          <target state="translated">이 페이지는 이미 &lt;a href=&quot;syntax&quot;&gt;구성 구문에&lt;/a&gt; 익숙하다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="04fb884ea5b80d93caf2c929ed60666a6ff7a9ab" translate="yes" xml:space="preserve">
          <source>This page documents the basics of how the plugin system in Terraform works, and how to setup a basic development environment for plugin development if you're writing a Terraform plugin.</source>
          <target state="translated">이 페이지는 Terraform의 플러그인 시스템 작동 방식의 기본 사항과 Terraform 플러그인을 작성하는 경우 플러그인 개발을위한 기본 개발 환경을 설정하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="25847e25d3bc69f04967647a1c8b399a6927dc17" translate="yes" xml:space="preserve">
          <source>This page includes details on our compatibility promise and guidelines to follow when upgrading between versions of the provider. Whenever possible, we recommend verifying upgrades in isolated test environments.</source>
          <target state="translated">이 페이지에는 공급 업체 버전 간 업그레이드시 따라야 할 호환성 약속 및 지침에 대한 세부 정보가 포함되어 있습니다. 가능하면 격리 된 테스트 환경에서 업그레이드를 확인하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ba9b9002203c7f5b52386553bbcfd2695d06a1cd" translate="yes" xml:space="preserve">
          <source>This post assumes familiarity with Golang and basic programming concepts.</source>
          <target state="translated">이 글은 Golang과 기본 프로그래밍 개념에 익숙하다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="dcfa00c1898cb4867d709a0ca671ed4e4eb4cdb2" translate="yes" xml:space="preserve">
          <source>This provider can be used in conjunction with other resources that create MySQL servers. For example, &lt;code&gt;aws_db_instance&lt;/code&gt; is able to create MySQL servers in Amazon's RDS service.</source>
          <target state="translated">이 공급자는 MySQL 서버를 생성하는 다른 리소스와 함께 사용할 수 있습니다. 예를 들어, &lt;code&gt;aws_db_instance&lt;/code&gt; 는 Amazon RDS 서비스에서 MySQL 서버를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b20f0bdab4b124d8973dbabf672e82f519d5da3" translate="yes" xml:space="preserve">
          <source>This provider has the ability to log all HTTP requests and responses between Terraform and the FlexibleEngine cloud which is useful for troubleshooting and debugging.</source>
          <target state="translated">이 공급자는 Terraform과 FlexibleEngine 클라우드 간의 모든 HTTP 요청 및 응답을 기록 할 수 있으며 문제 해결 및 디버깅에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7e765341d594a79ac4b1c04c7c6db24a1014100c" translate="yes" xml:space="preserve">
          <source>This provider has the ability to log all HTTP requests and responses between Terraform and the OpenStack cloud which is useful for troubleshooting and debugging.</source>
          <target state="translated">이 공급자는 Terraform과 OpenStack 클라우드 간의 모든 HTTP 요청 및 응답을 기록 할 수 있으며 문제 해결 및 디버깅에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="47021253394af039b514a6325ed8ac0e87e9c163" translate="yes" xml:space="preserve">
          <source>This provider has the ability to log all HTTP requests and responses between Terraform and the OpenTelekomCloud cloud which is useful for troubleshooting and debugging.</source>
          <target state="translated">이 공급자는 Terraform과 OpenTelekomCloud 클라우드 간의 모든 HTTP 요청 및 응답을 기록 할 수 있으며 문제 해결 및 디버깅에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="54402f71a061de217889f5518d11ed1ab82339e4" translate="yes" xml:space="preserve">
          <source>This provider has the ability to log all HTTP requests and responses between Terraform and the TelefonicaOpenCloud cloud which is useful for troubleshooting and debugging.</source>
          <target state="translated">이 공급자는 Terraform과 TelefonicaOpenCloud 클라우드 사이의 모든 HTTP 요청 및 응답을 기록하여 문제 해결 및 디버깅에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="083ccb397eb3ce5bc3f90b00a86f4bcb2f84eb65" translate="yes" xml:space="preserve">
          <source>This provider is intended to be used for simple situations where you wish to integrate Terraform with a system for which a first-class provider doesn't exist. It is not as powerful as a first-class Terraform provider, so users of this interface should carefully consider the implications described on each of the child documentation pages (available from the navigation bar) for each type of object this provider supports.</source>
          <target state="translated">이 공급자는 Terraform을 일류 공급자가없는 시스템과 통합하려는 간단한 상황에 사용하기위한 것입니다. 이 클래스는 최고급 Terraform 제공 업체만큼 강력하지 않으므로이 인터페이스의 사용자는이 제공 업체가 지원하는 각 유형의 객체에 대해 각 하위 설명서 페이지 (탐색 모음에서 사용 가능)에 설명 된 의미를 신중하게 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="252618338ff2d374e01be1d4bf73af9e711e7fb8" translate="yes" xml:space="preserve">
          <source>This provider is not particularly useful on its own, but it can be used to create certificates and credentials that can then be used with other providers when creating resources that expose TLS services or that themselves provision TLS certificates.</source>
          <target state="translated">이 공급자는 그 자체로는 특히 유용하지는 않지만 TLS 서비스를 제공하거나 자체적으로 TLS 인증서를 제공하는 리소스를 만들 때 다른 공급자와 함께 사용할 수있는 인증서 및 자격 증명을 만드는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d3c7a79d3e583c27528d92de4377a0ce7cdbb73" translate="yes" xml:space="preserve">
          <source>This provider requires no configuration. For information on the resources it provides, see the navigation bar.</source>
          <target state="translated">이 공급자는 구성이 필요하지 않습니다. 제공되는 리소스에 대한 내용은 탐색 모음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f01ea4b96be99153c643624e0ada668a7420bbaa" translate="yes" xml:space="preserve">
          <source>This provider serves two pretty-distinct use-cases, which each have their own security trade-offs and caveats that are covered in the sections that follow. Consider these carefully before using this provider within your Terraform configuration.</source>
          <target state="translated">이 공급자는 두 가지 확실한 유스 케이스를 제공하며, 각각의 섹션에는 다음 섹션에서 다루는 보안상의 단점과 경고가 있습니다. Terraform 구성 내에서이 공급자를 사용하기 전에이 사항을주의해서 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="75ed30c3c0e8a666ebe2ea83d31a7b1d6b2cc174" translate="yes" xml:space="preserve">
          <source>This resource allows the user to request for and claim to a persistent volume.</source>
          <target state="translated">이 자원을 통해 사용자는 지속적 볼륨을 요청하고 청구 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4be9884de20db94c7ce1eb0ebbc39199b089153" translate="yes" xml:space="preserve">
          <source>This resource allows you manage your repositories such as scm type, if it is private, how to fork the repository and other options.</source>
          <target state="translated">이 자원을 사용하면 scm 유형 (개인용 인 경우 저장소 및 기타 옵션을 포크하는 방법)과 같은 저장소를 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="f51d9187b24c3a8cbfe30281aabc85c88ec12ad2" translate="yes" xml:space="preserve">
          <source>This resource allows you to add and remove dynamic address group tags.</source>
          <target state="translated">이 리소스를 사용하면 동적 주소 그룹 태그를 추가하고 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f03718f02f8f25942792e2e6b6617d379d0bb17a" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/remove collaborators from repositories in your organization. Collaborators can have explicit (and differing levels of) read, write, or administrator access to specific repositories in your organization, without giving the user full organization membership.</source>
          <target state="translated">이 리소스를 통해 조직의 리포지토리에서 공동 작업자를 추가 / 제거 할 수 있습니다. 공동 작업자는 사용자에게 전체 조직 구성원 자격을 부여하지 않고도 조직의 특정 리포지토리에 대한 명시 적 (및 다른 수준의) 읽기, 쓰기 또는 관리자 액세스 권한을 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7246cf7307b3966195d631b40e826899124b8b14" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/remove repository deploy keys.</source>
          <target state="translated">이 자원을 사용하면 저장소 배치 키를 추가 / 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64868804fed0e9c5c3a0682859c7ab0c3784a1fe" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/remove teams from your organization. When applied, a new team will be created. When destroyed, that team will be removed.</source>
          <target state="translated">이 리소스를 통해 조직에서 팀을 추가 / 제거 할 수 있습니다. 적용되면 새로운 팀이 생성됩니다. 파괴되면 해당 팀이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="a1d755801d1197ca81be4204a9c03428e9128bc4" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/remove users from teams in your organization. When applied, the user will be added to the team. If the user hasn't accepted their invitation to the organization, they won't be part of the team until they do. When destroyed, the user will be removed from the team.</source>
          <target state="translated">이 자원을 사용하면 조직의 팀에서 사용자를 추가 / 제거 할 수 있습니다. 적용되면 사용자가 팀에 추가됩니다. 사용자가 조직에 대한 초대를 수락하지 않은 경우 사용자가 조직에 초대 될 때까지 팀의 일원이되지 않습니다. 파괴되면 사용자는 팀에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="251ebbc642751c57b3278fdf61e41d714a46d808" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/remove users from your organization. When applied, an invitation will be sent to the user to become part of the organization. When destroyed, either the invitation will be cancelled or the user will be removed.</source>
          <target state="translated">이 리소스를 통해 조직에서 사용자를 추가 / 제거 할 수 있습니다. 적용되면 초대가 조직에 참여하도록 사용자에게 전송됩니다. 삭제되면 초대가 취소되거나 사용자가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="a0941a5d87dd3e14c92fb1196401e8493980b729" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete NAT rules.</source>
          <target state="translated">이 리소스를 사용하면 NAT 규칙을 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e122f735ba7fd129b406616a47aa137513c7d55" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete Panorama NAT rules.</source>
          <target state="translated">이 리소스를 사용하면 Panorama NAT 규칙을 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63d99df2cb69d917e015c4fa3884de329cfec066" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete Panorama address groups.</source>
          <target state="translated">이 리소스를 사용하면 파노라마 주소 그룹을 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="679ce128dd7d74fdc92b35c9cf99ad41d7d5d6c9" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete Panorama administrative tags.</source>
          <target state="translated">이 리소스를 사용하면 Panorama 관리 태그를 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="697e78ada132e6c5f59be13c0f13d78d9508e0c5" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete Panorama device groups.</source>
          <target state="translated">이 리소스를 사용하면 파노라마 장치 그룹을 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a11eff4f289fb31eaf3010b5ff4574e5cd99a28d" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete Panorama security rule groups.</source>
          <target state="translated">이 리소스를 사용하면 Panorama 보안 규칙 그룹을 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="734e6b3c405e9c99a21351968cca08f77e6e2adf" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete Panorama service groups.</source>
          <target state="translated">이 리소스를 사용하면 파노라마 서비스 그룹을 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce5b9faf1fcaee0af58e505be16aeb329f95a3fc" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete Panorama service objects.</source>
          <target state="translated">이 리소스를 사용하면 Panorama 서비스 객체를 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04031afe8beec4ad20befadfd1aad62a06600ff0" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete a specific device in a Panorama device group.</source>
          <target state="translated">이 리소스를 사용하면 Panorama 장치 그룹에서 특정 장치를 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df46267a0fb6419abd669b0c82477756730e2d74" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete address groups.</source>
          <target state="translated">이 리소스를 사용하면 주소 그룹을 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db9bc679d2f0e2df050cdb0efd4f7a29ae7de437" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete address objects on Panorama.</source>
          <target state="translated">이 리소스를 사용하면 Panorama에서 주소 개체를 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e47a701baf99f066ac987a4a415d1479c837b83" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete address objects.</source>
          <target state="translated">이 리소스를 사용하면 주소 개체를 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="925be032cee80e80e00099832d8dfa0da7c39cb0" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete administrative tags.</source>
          <target state="translated">이 리소스를 사용하면 관리 태그를 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61e8c0e98f915519954ce4efb359011aa10e0a65" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete ethernet interfaces.</source>
          <target state="translated">이 리소스를 사용하면 이더넷 인터페이스를 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34ab8fbb003fc9f42a2d7b2d1dd67f03e2f0938b" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete interface management profiles.</source>
          <target state="translated">이 자원을 사용하면 인터페이스 관리 프로파일을 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="502228886ddf9caba41e1fa7867f4515d27280a2" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete security rule groups.</source>
          <target state="translated">이 자원을 사용하면 보안 규칙 그룹을 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03fb1609442e44d4a82d616c530c4dd7c5ac98db" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete service groups.</source>
          <target state="translated">이 리소스를 사용하면 서비스 그룹을 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad23861d39283cbddc2c6427219193700d05f865" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete service objects.</source>
          <target state="translated">이 자원을 사용하면 서비스 오브젝트를 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3468b034a50fe6cfe6360dcd7285bfc053587aa4" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete telemetry sharing.</source>
          <target state="translated">이 리소스를 사용하면 원격 분석 공유를 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef99d004a08b15dbe34f9774617e3ebec5d358a8" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete virtual routers.</source>
          <target state="translated">이 리소스를 사용하면 가상 라우터를 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="448cf693d8e14bd757f8e101dc3c14af9c223ce5" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete zones.</source>
          <target state="translated">이 리소스를 사용하면 영역을 추가 / 업데이트 / 삭제할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4d3dd501e96903cc6d06112b70d008250652afd" translate="yes" xml:space="preserve">
          <source>This resource allows you to configure branch protection for repositories in your organization. When applied, the branch will be protected from forced pushes and deletion. Additional constraints, such as required status checks or restrictions on users and teams, can also be configured.</source>
          <target state="translated">이 리소스를 사용하면 조직의 리포지토리에 대한 분기 보호를 구성 할 수 있습니다. 적용되면 분기는 강제 푸시 및 삭제로부터 보호됩니다. 필요한 상태 확인 또는 사용자 및 팀의 제한과 같은 추가 제약 조건도 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8eb0678fffb14c73ffcbecfc101bbec6654a0ca" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage GitLab groups. Note your provider will need to be configured with admin-level access for this resource to work.</source>
          <target state="translated">이 리소스를 통해 GitLab 그룹을 만들고 관리 할 수 ​​있습니다. 이 리소스가 작동하려면 공급자가 관리자 수준 액세스로 구성되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="2bec008cc073839c38cd4f9e588d3f6dbd559642" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage GitLab users. Note your provider will need to be configured with admin-level access for this resource to work.</source>
          <target state="translated">이 리소스를 통해 GitLab 사용자를 생성하고 관리 할 수 ​​있습니다. 이 리소스가 작동하려면 공급자가 관리자 수준 액세스로 구성되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="b512e907bc009a67226d092a18495fd58bf95719" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage deploy keys for your GitLab projects.</source>
          <target state="translated">이 리소스를 통해 GitLab 프로젝트의 배포 키를 생성하고 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="7dba1880bf3ad248dcd664feda00f9086472dbfa" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage hooks for your GitLab projects. For further information on hooks, consult the &lt;a href=&quot;https://docs.gitlab.com/ce/user/project/integrations/webhooks.html&quot;&gt;gitlab documentation&lt;/a&gt;.</source>
          <target state="translated">이 리소스를 통해 GitLab 프로젝트를위한 후크를 생성하고 관리 할 수 ​​있습니다. 후크에 대한 자세한 내용은 &lt;a href=&quot;https://docs.gitlab.com/ce/user/project/integrations/webhooks.html&quot;&gt;gitlab 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="60423e0d302ffbfe5d39d10623c133d2ba67b243" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage issue labels within your Github organization.</source>
          <target state="translated">이 리소스를 통해 Github 조직 내에서 이슈 레이블을 만들고 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="28bf06d4252d70bb427aa350c336cc7942eb0542" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage labels for your GitLab projects. For further information on labels, consult the &lt;a href=&quot;https://docs.gitlab.com/ee/user/project/labels.htm&quot;&gt;gitlab documentation&lt;/a&gt;.</source>
          <target state="translated">이 리소스를 사용하면 GitLab 프로젝트의 레이블을 만들고 관리 할 수 ​​있습니다. 레이블에 대한 자세한 내용은 &lt;a href=&quot;https://docs.gitlab.com/ee/user/project/labels.htm&quot;&gt;gitlab 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b4953b8212174587b401932c1e7327a27b6292f" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage projects within your GitLab group or within your user.</source>
          <target state="translated">이 리소스를 사용하면 GitLab 그룹 또는 사용자 내에서 프로젝트를 만들고 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="7c089a315c545687ff310d6d0c5072c04cbe10ee" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage repositories within your Github organization.</source>
          <target state="translated">이 리소스를 통해 Github 조직 내에서 리포지토리를 생성하고 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="f123c798ab25ce6261c8380c0e6f8a24ef8ea126" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage webhooks for Github organization.</source>
          <target state="translated">이 리소스를 통해 Github 조직을위한 웹 후크를 생성하고 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="01915a36008bf1a2439f361dc446bbeaf7117fd0" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage webhooks for repositories within your Github organization.</source>
          <target state="translated">이 리소스를 사용하면 Github 조직 내의 리포지토리에 대한 웹 후크를 만들고 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="12896e92450a0de5bc16778423959a5541d28dd9" translate="yes" xml:space="preserve">
          <source>This resource allows you to manage the full security posture.</source>
          <target state="translated">이 리소스를 통해 전체 보안 상태를 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="561ea50a8101b3670f0c90a30d0af8ed933495cf" translate="yes" xml:space="preserve">
          <source>This resource allows you to update the general device settings, such as DNS or the hostname.</source>
          <target state="translated">이 리소스를 사용하면 DNS 또는 호스트 이름과 같은 일반 장치 설정을 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4679558859a40b1939daa9ebdf9361b9d8f0f9cb" translate="yes" xml:space="preserve">
          <source>This resource also allows the retrieval of an existing public key from the store, so that it may be used in the configuration of other resources such as &lt;code&gt;aws_key_pair&lt;/code&gt;.</source>
          <target state="translated">이 자원은 또한 상점에서 기존 공개 키를 검색 할 수 있도록하여 &lt;code&gt;aws_key_pair&lt;/code&gt; 와 같은 다른 자원의 구성에 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7e83a4d518688d20bd98642d554541ef48cf3b05" translate="yes" xml:space="preserve">
          <source>This resource also exports a full set of attributes corresponding to the arguments of the &lt;a href=&quot;ami&quot;&gt;&lt;code&gt;aws_ami&lt;/code&gt;&lt;/a&gt; resource, allowing the properties of the created AMI to be used elsewhere in the configuration.</source>
          <target state="translated">이 리소스는 또한 &lt;a href=&quot;ami&quot;&gt; &lt;code&gt;aws_ami&lt;/code&gt; &lt;/a&gt; 리소스 의 인수에 해당하는 전체 속성 집합을 내 보내서 생성 된 AMI의 속성을 구성의 다른 곳에서 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="6a68fad875e043d265e47e1dd54f024022e25246" translate="yes" xml:space="preserve">
          <source>This resource also exports a full set of attributes corresponding to the arguments of the &lt;code&gt;aws_ami&lt;/code&gt; resource, allowing the properties of the created AMI to be used elsewhere in the configuration.</source>
          <target state="translated">이 리소스는 또한 &lt;code&gt;aws_ami&lt;/code&gt; 리소스 의 인수에 해당하는 전체 속성 집합을 내 보내서 생성 된 AMI의 속성을 구성의 다른 곳에서 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="8ca416a8e8ce2480f4d198de86a00a5aecf85d02" translate="yes" xml:space="preserve">
          <source>This resource also exposes the full set of arguments from the &lt;a href=&quot;ami&quot;&gt;&lt;code&gt;aws_ami&lt;/code&gt;&lt;/a&gt; resource.</source>
          <target state="translated">이 자원은 또한 &lt;a href=&quot;ami&quot;&gt; &lt;code&gt;aws_ami&lt;/code&gt; &lt;/a&gt; 자원 의 전체 인수 세트를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="dc5f920cfbb5b7465dc5f05f275a494a69ca50da" translate="yes" xml:space="preserve">
          <source>This resource attaches a security group to an Elastic Network Interface (ENI). It can be used to attach a security group to any existing ENI, be it a secondary ENI or one attached as the primary interface on an instance.</source>
          <target state="translated">이 리소스는 보안 그룹을 ENI (Elastic Network Interface)에 연결합니다. 보안 그룹을 기존 ENI에 연결하는 데 사용할 수 있습니다 (보조 ENI 또는 인스턴스의 기본 인터페이스로 연결된 것).</target>
        </trans-unit>
        <trans-unit id="86f76c4f9ac5eb4c8fecb4af58c827b1d0ac4064" translate="yes" xml:space="preserve">
          <source>This resource can be imported by specifying all three arguments, separated by a forward slash:</source>
          <target state="translated">이 자원은 슬래시로 구분 된 세 개의 인수를 모두 지정하여 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="33ab87c5fe80ef1d85a633ba39b034c9e25b7d5a" translate="yes" xml:space="preserve">
          <source>This resource can be imported by specifying the zone ID and recordset ID, separated by a forward slash.</source>
          <target state="translated">영역 ID와 레코드 세트 ID를 슬래시로 구분하여 지정하여이 리소스를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ea3dd92642f8831df85ca191333832b7fccb2d1" translate="yes" xml:space="preserve">
          <source>This resource can be imported by specifying the zone ID:</source>
          <target state="translated">영역 ID를 지정하여이 자원을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="901db8b030449abdaab828178be2e6409e4fb483" translate="yes" xml:space="preserve">
          <source>This resource can be used in conjunction with resources that have the &lt;code&gt;create_before_destroy&lt;/code&gt; lifecycle flag set, to avoid conflicts with unique names during the brief period where both the old and new resources exist concurrently.</source>
          <target state="translated">이 자원은 기존 자원과 새 자원이 동시에 존재하는 짧은 기간 동안 고유 이름과의 충돌을 피하기 위해 &lt;code&gt;create_before_destroy&lt;/code&gt; 라이프 사이클 플래그가 설정된 자원과 함께 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="42c13902a99dd515330db07140a7573e16367ad8" translate="yes" xml:space="preserve">
          <source>This resource can be used in conjunction with resources that have, the &lt;code&gt;create_before_destroy&lt;/code&gt; lifecycle flag set, to avoid conflicts with unique names during the brief period where both the old and new resources exist concurrently.</source>
          <target state="translated">이 자원은 이전 자원과 새 자원이 동시에 존재하는 짧은 기간 동안 고유 이름과의 충돌을 피하기 위해 &lt;code&gt;create_before_destroy&lt;/code&gt; 라이프 사이클 플래그가 설정된 자원과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2a939b954057b47aa4f017c0af7003155873e436" translate="yes" xml:space="preserve">
          <source>This resource can be used to configure a NSX DHCP relay profile on the NSX manager. A DHCP relay profile is a type of template that can be used to define a remote DHCP server where DHCP packets can be relayed for DHCP requests of machines attached to NSX logical topologies. The DHCP relay profile can be used in a DHCP relay service and later consumed by a router link port.</source>
          <target state="translated">이 리소스는 NSX Manager에서 NSX DHCP 릴레이 프로필을 구성하는 데 사용할 수 있습니다. DHCP 릴레이 프로파일은 NSX 논리적 토폴로지에 연결된 시스템의 DHCP 요청에 대해 DHCP 패킷을 릴레이 할 수있는 원격 DHCP 서버를 정의하는 데 사용할 수있는 템플릿 유형입니다. DHCP 릴레이 프로파일은 DHCP 릴레이 서비스에서 사용되며 나중에 라우터 링크 포트에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="805d5a71162bb578d0cb2e961def28c034609337" translate="yes" xml:space="preserve">
          <source>This resource can be useful for getting back a list of VPC Ids for a region.</source>
          <target state="translated">이 리소스는 리전의 VPC ID 목록을 가져 오는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="994aff1f0a8d786022c7583ad9323cdfa1b767ce" translate="yes" xml:space="preserve">
          <source>This resource can be useful for getting back a list of route table ids to be referenced elsewhere.</source>
          <target state="translated">이 리소스는 다른 곳에서 참조 할 라우팅 테이블 ID 목록을 가져 오는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9dad745ac3c8b839364c270abcc18fd63c409887" translate="yes" xml:space="preserve">
          <source>This resource can be useful for getting back a list of subnet ids for a vpc.</source>
          <target state="translated">이 리소스는 vpc의 서브넷 ID 목록을 가져 오는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b671e1116fc7364dd7462bda785b37b8e2e795ae" translate="yes" xml:space="preserve">
          <source>This resource can create both &lt;em&gt;affinity rules&lt;/em&gt;, where virtual machines run on specified hosts, or &lt;em&gt;anti-affinity&lt;/em&gt; rules, where virtual machines run on hosts outside of the ones specified in the rule. Virtual machines and hosts are supplied via groups, which can be managed via the &lt;a href=&quot;compute_cluster_vm_group&quot;&gt;&lt;code&gt;vsphere_compute_cluster_vm_group&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;compute_cluster_host_group&quot;&gt;&lt;code&gt;vsphere_compute_cluster_host_group&lt;/code&gt;&lt;/a&gt; resources.</source>
          <target state="translated">이 자원은 가상 머신이 지정된 호스트에서 실행되는 &lt;em&gt;선호도&lt;/em&gt; 규칙 또는 가상 머신이 규칙에 지정된 호스트 이외의 호스트에서 실행되는 &lt;em&gt;선호도 규칙을&lt;/em&gt; 모두 작성할 수 있습니다 . 가상 머신 및 호스트는 그룹을 통해 제공되며 &lt;a href=&quot;compute_cluster_vm_group&quot;&gt; &lt;code&gt;vsphere_compute_cluster_vm_group&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;compute_cluster_host_group&quot;&gt; &lt;code&gt;vsphere_compute_cluster_host_group&lt;/code&gt; &lt;/a&gt; 리소스 를 통해 관리 할 수 ​​있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2d8234b9c8f46508ebaa742ed80eed5367a3b4f2" translate="yes" xml:space="preserve">
          <source>This resource can prove useful when a module accepts a Security Group id as an input variable and needs to, for example, determine the id of the VPC that the security group belongs to.</source>
          <target state="translated">이 리소스는 모듈이 보안 그룹 ID를 입력 변수로 허용하고 예를 들어 보안 그룹이 속한 VPC의 ID를 결정해야 할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="948d4b2c3239b399eb428144ce299ae8c700dacf" translate="yes" xml:space="preserve">
          <source>This resource can prove useful when a module accepts a Subnet id as an input variable and needs to, for example, add a route in the Route Table.</source>
          <target state="translated">이 리소스는 모듈이 서브넷 ID를 입력 변수로 허용하고 예를 들어 경로 테이블에 경로를 추가해야 할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86d691820cd5332ca23ee8f9878c7e25e9dc3b5b" translate="yes" xml:space="preserve">
          <source>This resource can prove useful when a module accepts a subnet id as an input variable and needs to, for example, determine the id of the VPC that the subnet belongs to.</source>
          <target state="translated">이 리소스는 모듈이 서브넷 ID를 입력 변수로 허용하고 예를 들어 서브넷이 속한 VPC의 ID를 결정해야 할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d33d91e88aeb0e36235fe002f25f947a0693037" translate="yes" xml:space="preserve">
          <source>This resource can prove useful when a module accepts a vpc id as an input variable and needs to, for example, determine the CIDR block of that VPC.</source>
          <target state="translated">이 리소스는 모듈이 vpc id를 입력 변수로 받아들이고 예를 들어 해당 VPC의 CIDR 블록을 결정해야 할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08e80dda6724cda0d7decf7cd96d1c8b0f4a34f7" translate="yes" xml:space="preserve">
          <source>This resource can prove useful when a module accepts an allocation ID or public IP as an input variable and needs to determine the other.</source>
          <target state="translated">이 자원은 모듈이 할당 ID 또는 공용 IP를 입력 변수로 승인하고 다른 변수를 결정해야 할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="46e981e0db4861c64b90667e3c98809744b0ac4c" translate="yes" xml:space="preserve">
          <source>This resource can prove useful when finding the resource associated with a CIDR. For example, finding the peering connection associated with a CIDR value.</source>
          <target state="translated">이 리소스는 CIDR과 관련된 리소스를 찾을 때 유용 할 수 있습니다. 예를 들어 CIDR 값과 관련된 피어링 연결을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="149f523dc45db40b7762355633d26b72a090f814" translate="yes" xml:space="preserve">
          <source>This resource cannot currently be used to manage &lt;em&gt;personal&lt;/em&gt; repositories, outside of organizations.</source>
          <target state="translated">이 리소스는 현재 조직 외부의 &lt;em&gt;개인&lt;/em&gt; 리포지토리 를 관리하는 데 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="d3bb86bcd70e8f8106356d6c0e5d54ecbe12236f" translate="yes" xml:space="preserve">
          <source>This resource cannot currently be used to manage webhooks for &lt;em&gt;personal&lt;/em&gt; repositories, outside of organizations.</source>
          <target state="translated">이 리소스는 현재 조직 외부의 &lt;em&gt;개인&lt;/em&gt; 리포지토리에 대한 웹 후크를 관리하는 데 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="be5da671b0ec67edf6219b12ee8340c8ab2c7008" translate="yes" xml:space="preserve">
          <source>This resource considers its instances to have been deleted after either their validity periods ends or the early renewal period is reached. At this time, applying the Terraform configuration will cause a new certificate to be generated for the instance.</source>
          <target state="translated">이 자원은 유효 기간이 종료되거나 조기 갱신 기간에 도달 한 후 인스턴스가 삭제 된 것으로 간주합니다. 현재 Terraform 구성을 적용하면 인스턴스에 대해 새 인증서가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="e5629035207b9ee1c042340ca74112ea0f8d1e0d" translate="yes" xml:space="preserve">
          <source>This resource creates a Beanstalk Application Version that can be deployed to a Beanstalk Environment.</source>
          <target state="translated">이 자원은 Beanstalk 환경에 배치 할 수있는 Beanstalk 애플리케이션 버전을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="a4b6475867a05e54cc3fb3edd291e982c9d375f5" translate="yes" xml:space="preserve">
          <source>This resource creates an application that has one configuration template named &lt;code&gt;default&lt;/code&gt;, and no application versions</source>
          <target state="translated">이 자원은 &lt;code&gt;default&lt;/code&gt; 라는 하나의 구성 템플리트가 있고 응용 프로그램 버전이없는 응용 프로그램을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="92055c414eba4dedf5fffda30cdf8863380b4eb8" translate="yes" xml:space="preserve">
          <source>This resource creates and rolls out a Cloud Endpoints service using OpenAPI or gRPC. View the relevant docs for &lt;a href=&quot;https://cloud.google.com/endpoints/docs/openapi/&quot;&gt;OpenAPI&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/endpoints/docs/grpc/&quot;&gt;gRPC&lt;/a&gt;.</source>
          <target state="translated">이 리소스는 OpenAPI 또는 gRPC를 사용하여 Cloud Endpoints 서비스를 생성 및 롤아웃합니다. &lt;a href=&quot;https://cloud.google.com/endpoints/docs/openapi/&quot;&gt;OpenAPI&lt;/a&gt; 및 &lt;a href=&quot;https://cloud.google.com/endpoints/docs/grpc/&quot;&gt;gRPC&lt;/a&gt; 관련 문서를 봅니다 .</target>
        </trans-unit>
        <trans-unit id="12906d5e4d5f0153ab3942c3e45788710da601ce" translate="yes" xml:space="preserve">
          <source>This resource creates objects within an existing data bag. To create the data bag itself, use the &lt;code&gt;chef_data_bag&lt;/code&gt; resource.</source>
          <target state="translated">이 리소스는 기존 데이터 백 내에 개체를 만듭니다. 데이터 백 자체를 만들려면 &lt;code&gt;chef_data_bag&lt;/code&gt; 리소스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c1316b59dece5fe0653386a5373c348556b62ada" translate="yes" xml:space="preserve">
          <source>This resource creates the data bag itself. Inside each data bag is a collection of items which can be created using the &lt;code&gt;chef_data_bag_item&lt;/code&gt; resource.</source>
          <target state="translated">이 리소스는 데이터 백 자체를 만듭니다. 각 데이터 백 안에는 &lt;code&gt;chef_data_bag_item&lt;/code&gt; 리소스를 사용하여 만들 수있는 항목 모음이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="38ac3537f0487de1707303929caffddcf2f0e618" translate="yes" xml:space="preserve">
          <source>This resource does not &lt;em&gt;read&lt;/em&gt; the secret data back from Terraform on refresh by default. This avoids the need for &lt;code&gt;read&lt;/code&gt; access on the given path, but it means that Terraform is not able to detect and repair &quot;drift&quot; on this resource should the data be updated or deleted outside of Terraform. This limitation can be negated by setting &lt;code&gt;allow_read&lt;/code&gt; to true</source>
          <target state="translated">이 리소스는 기본적으로 새로 고침시 Terraform에서 비밀 데이터를 다시 &lt;em&gt;읽지&lt;/em&gt; 않습니다 . 이렇게하면 지정된 경로에서 &lt;code&gt;read&lt;/code&gt; 액세스 가 필요하지 않지만 Terraform은 Terraform 외부에서 데이터를 업데이트하거나 삭제해야하는 경우이 리소스에서 &quot;드리프트&quot;를 감지하고 복구 할 수 없습니다. &lt;code&gt;allow_read&lt;/code&gt; 를 true 로 설정하면이 제한을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1402a31038415270f34d7169ba08efa36b1cdd2" translate="yes" xml:space="preserve">
          <source>This resource does not export any additional attributes.</source>
          <target state="translated">이 자원은 추가 속성을 내 보내지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4eaf5232aa1ae7751aea69ff7bd389dc04c40205" translate="yes" xml:space="preserve">
          <source>This resource does not support importing.</source>
          <target state="translated">이 리소스는 가져 오기를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a20bd583126fbc9e3da12910abe4c478c9667837" translate="yes" xml:space="preserve">
          <source>This resource exports no further attributes.</source>
          <target state="translated">이 자원은 더 이상 속성을 내 보내지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5d403c7165dc28b89d97dc5b647f842c9ecc20da" translate="yes" xml:space="preserve">
          <source>This resource exports the following attributes:</source>
          <target state="translated">이 자원은 다음 속성을 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="a977ec83477918fa29d40445043ef3dbf3031432" translate="yes" xml:space="preserve">
          <source>This resource has been updated to use the correct catalog APIs in place of service registration APIs. The &lt;code&gt;consul_agent_service&lt;/code&gt; resource previously also used the service registration API designed for registration against an agent running on a local node. Because Terraform is intended to be run externally to the cluster, and for other internal reasons, this API was the incorrect one to use.</source>
          <target state="translated">이 자원은 서비스 등록 API 대신 올바른 카탈로그 API를 사용하도록 업데이트되었습니다. &lt;code&gt;consul_agent_service&lt;/code&gt; 의 자원 이전도 로컬 노드에서 에이전트 실행에 대해 등록을 위해 설계된 서비스 등록 API를 사용했다. Terraform은 클러스터 외부에서 실행되도록 설계되었으므로 다른 내부 이유로이 API를 사용하는 것이 올바르지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0e2cf8dd3685f6cb398a44f38b25c75232ca96f6" translate="yes" xml:space="preserve">
          <source>This resource has some overlap with the &lt;code&gt;panos_panorama_device_group&lt;/code&gt; resource. If you want to use this resource with the other one, then make sure that your &lt;code&gt;panos_panorama_device_group&lt;/code&gt; spec does not define any &lt;code&gt;device&lt;/code&gt; blocks, and just stays as &quot;computed&quot;.</source>
          <target state="translated">이 자원은 &lt;code&gt;panos_panorama_device_group&lt;/code&gt; 자원 과 일부 겹칩니다 . 이 자원을 다른 자원과 함께 사용하려면 &lt;code&gt;panos_panorama_device_group&lt;/code&gt; 스펙이 &lt;code&gt;device&lt;/code&gt; 블록을 정의하지 않고 &quot;계산 된&quot;상태로 유지 되는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="f37f1d40247d1b6f7b8082e225757fbe09d609c3" translate="yes" xml:space="preserve">
          <source>This resource has some overlap with the &lt;code&gt;panos_panorama_device_group_entry&lt;/code&gt; resource. If you want to use this resource with the other one, then make sure that your &lt;code&gt;panos_panorama_device_group&lt;/code&gt; spec does not define any &lt;code&gt;device&lt;/code&gt; blocks, and just stays as &quot;computed&quot;.</source>
          <target state="translated">이 자원은 &lt;code&gt;panos_panorama_device_group_entry&lt;/code&gt; 자원 과 일부 겹칩니다 . 이 자원을 다른 자원과 함께 사용하려면 &lt;code&gt;panos_panorama_device_group&lt;/code&gt; 스펙이 &lt;code&gt;device&lt;/code&gt; 블록을 정의하지 않고 &quot;계산 된&quot;상태로 유지 되는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="c0e8aa7822dbd2b00c91be59aa84c871858dc6d0" translate="yes" xml:space="preserve">
          <source>This resource is best applied to an instance that is stopped when this instance is created, so that the contents of the created image are predictable. When applied to an instance that is running, &lt;em&gt;the instance will be stopped before taking the snapshots and then started back up again&lt;/em&gt;, resulting in a period of downtime.</source>
          <target state="translated">이 리소스는이 인스턴스를 만들 때 중지 된 인스턴스에 가장 잘 적용되므로 생성 된 이미지의 내용을 예측할 수 있습니다. 실행중인 인스턴스에 적용되면 &lt;em&gt;스냅 샷을 작성하기 전에 인스턴스가 중지 된 후 다시 시작&lt;/em&gt; 되어 다운 타임이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2afdbff6df4fc2cf8d2bcc6e7b2a774fda1eb3d9" translate="yes" xml:space="preserve">
          <source>This resource is experimental and may be removed in the future! Feedback is requested if you find this resource useful or if you find any problems with it.</source>
          <target state="translated">이 리소스는 실험용이며 향후 제거 될 수 있습니다! 이 리소스가 유용하거나 문제가 있으면 피드백을 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="319b05499e596dd6c388e4e74e7fc19db6ef0ed8" translate="yes" xml:space="preserve">
          <source>This resource is for additional certificates and does not replace the default certificate on the listener.</source>
          <target state="translated">이 자원은 추가 인증서 용이며 리스너의 기본 인증서를 대체하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3a188b40123fd9e12af2ce4a9cb4a3bcf60454fb" translate="yes" xml:space="preserve">
          <source>This resource is intended to be used in conjunction with a Terraform provider for a particular certificate authority in order to provision a new certificate. This is a &lt;em&gt;logical resource&lt;/em&gt;, so it contributes only to the current Terraform state and does not create any external managed resources.</source>
          <target state="translated">이 리소스는 새 인증서를 프로비저닝하기 위해 특정 인증 기관에 대해 Terraform 제공자와 함께 사용하기위한 것입니다. 이 &lt;em&gt;리소스&lt;/em&gt; 는 &lt;em&gt;논리 리소스&lt;/em&gt; 이므로 현재 Terraform 상태에만 기여하며 외부 관리 리소스를 만들지 않습니다.</target>
        </trans-unit>
        <trans-unit id="51487a29440be820e8060c52b84fcdb942ad73a9" translate="yes" xml:space="preserve">
          <source>This resource is intended to be used in conjunction with a Terraform provider that has a resource that requires a TLS certificate, such as:</source>
          <target state="translated">이 리소스는 다음과 같이 TLS 인증서가 필요한 리소스가있는 Terraform 공급자와 함께 사용하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="dbcb1f226d1ce2d688bea3e5e0e6075fad6de138" translate="yes" xml:space="preserve">
          <source>This resource is primarily intended to be used with &lt;a href=&quot;https://www.vaultproject.io/docs/secrets/generic/index.html&quot;&gt;Vault's &quot;generic&quot; secret backend&lt;/a&gt;, but it is also compatible with any other Vault endpoint that supports the &lt;code&gt;vault read&lt;/code&gt; command.</source>
          <target state="translated">이 리소스는 기본적으로 &lt;a href=&quot;https://www.vaultproject.io/docs/secrets/generic/index.html&quot;&gt;Vault의 &quot;일반&quot;비밀 백엔드&lt;/a&gt; 와 함께 사용 되지만 &lt;code&gt;vault read&lt;/code&gt; 명령 을 지원하는 다른 Vault 엔드 포인트와도 호환됩니다 .</target>
        </trans-unit>
        <trans-unit id="6faf27654b1b1bbc0a051597a58302b7fe91b720" translate="yes" xml:space="preserve">
          <source>This resource is primarily intended to be used with &lt;a href=&quot;https://www.vaultproject.io/docs/secrets/generic/index.html&quot;&gt;Vault's &quot;generic&quot; secret backend&lt;/a&gt;, but it is also compatible with any other Vault endpoint that supports the &lt;code&gt;vault write&lt;/code&gt; command to create and the &lt;code&gt;vault delete&lt;/code&gt; command to delete.</source>
          <target state="translated">이 리소스는 기본적으로 &lt;a href=&quot;https://www.vaultproject.io/docs/secrets/generic/index.html&quot;&gt;Vault의 &quot;일반&quot;비밀 백엔드&lt;/a&gt; 와 함께 사용 되지만, &lt;code&gt;vault write&lt;/code&gt; 명령을 생성하고 &lt;code&gt;vault delete&lt;/code&gt; 명령을 삭제 하도록 지원하는 다른 Vault 엔드 포인트와도 호환됩니다 .</target>
        </trans-unit>
        <trans-unit id="fbac90846acaebecd281a578be6b7048fc275adb" translate="yes" xml:space="preserve">
          <source>This resource is the actual Kubernetes master cluster. It can take a few minutes to provision in AWS.</source>
          <target state="translated">이 리소스는 실제 Kubernetes 마스터 클러스터입니다. AWS에서 프로비저닝하는 데 몇 분이 걸릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5242acfaa96085cf599b356d364f69e74f8e85de" translate="yes" xml:space="preserve">
          <source>This resource is thus useful in the case where Terraform is exclusively managing a set of related keys.</source>
          <target state="translated">따라서이 리소스는 Terraform이 관련 키 집합을 독점적으로 관리하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2d9e40c6d5c2abae5a90bb2945f71599fba159ee" translate="yes" xml:space="preserve">
          <source>This resource just establishes ownership of and the TLS settings for a particular domain name. An API can be attached to a particular path under the registered domain name using &lt;a href=&quot;api_gateway_base_path_mapping&quot;&gt;the &lt;code&gt;aws_api_gateway_base_path_mapping&lt;/code&gt; resource&lt;/a&gt;.</source>
          <target state="translated">이 리소스는 특정 도메인 이름에 대한 소유권과 TLS 설정 만 설정합니다. 이 API를 이용하여 등록 된 도메인 이름하에 특정 경로에 부착 될 수 &lt;a href=&quot;api_gateway_base_path_mapping&quot;&gt; &lt;code&gt;aws_api_gateway_base_path_mapping&lt;/code&gt; &lt;/a&gt; 리소스 .</target>
        </trans-unit>
        <trans-unit id="32f3d80804ac89de2c7564f3128fc4c5660dd7e0" translate="yes" xml:space="preserve">
          <source>This resource mainly serves as an input to the &lt;a href=&quot;compute_cluster_vm_dependency_rule&quot;&gt;&lt;code&gt;vsphere_compute_cluster_vm_dependency_rule&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;compute_cluster_vm_host_rule&quot;&gt;&lt;code&gt;vsphere_compute_cluster_vm_host_rule&lt;/code&gt;&lt;/a&gt; resources. See the individual resource documentation pages for more information.</source>
          <target state="translated">이 리소스는 주로 &lt;a href=&quot;compute_cluster_vm_dependency_rule&quot;&gt; &lt;code&gt;vsphere_compute_cluster_vm_dependency_rule&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;compute_cluster_vm_host_rule&quot;&gt; &lt;code&gt;vsphere_compute_cluster_vm_host_rule&lt;/code&gt; &lt;/a&gt; 리소스에 대한 입력으로 사용 됩니다. 자세한 내용은 개별 리소스 설명서 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="257f815a619ee3fb02a605461d1777f0496a7883" translate="yes" xml:space="preserve">
          <source>This resource mainly serves as an input to the &lt;a href=&quot;compute_cluster_vm_host_rule&quot;&gt;&lt;code&gt;vsphere_compute_cluster_vm_host_rule&lt;/code&gt;&lt;/a&gt; resource - see the documentation for that resource for further details on how to use host groups.</source>
          <target state="translated">이 리소스는 주로 &lt;a href=&quot;compute_cluster_vm_host_rule&quot;&gt; &lt;code&gt;vsphere_compute_cluster_vm_host_rule&lt;/code&gt; &lt;/a&gt; 리소스에 대한 입력 으로 사용됩니다. 호스트 그룹 사용 방법에 대한 자세한 내용은 해당 리소스의 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="483af3e03dab3a49a7e354963e729d01a6e0bd5e" translate="yes" xml:space="preserve">
          <source>This resource manages clusters of security rules in a single device group, enforcing both the contents of individual rules as well as their ordering. Rules are defined in a &lt;code&gt;rule&lt;/code&gt; config block.</source>
          <target state="translated">이 리소스는 단일 장치 그룹에서 보안 규칙 클러스터를 관리하여 개별 규칙의 내용과 순서를 모두 적용합니다. 규칙은 &lt;code&gt;rule&lt;/code&gt; 구성 블록에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8db825792d0388e8dbd91ff00939448430b30f30" translate="yes" xml:space="preserve">
          <source>This resource manages clusters of security rules in a single vsys, enforcing both the contents of individual rules as well as their ordering. Rules are defined in a &lt;code&gt;rule&lt;/code&gt; config block.</source>
          <target state="translated">이 리소스는 단일 vsys에서 보안 규칙 클러스터를 관리하여 개별 규칙의 내용과 순서를 모두 적용합니다. 규칙은 &lt;code&gt;rule&lt;/code&gt; 구성 블록에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc4d248e86b8b28b965a0c94a15b5b43057cd8df" translate="yes" xml:space="preserve">
          <source>This resource manages individual keys, and thus it can create, update and delete the keys explicitly given. However, it is not able to detect and remove additional keys that have been added by non-Terraform means. To manage &lt;em&gt;all&lt;/em&gt; keys sharing a common prefix, and thus have Terraform remove errant keys not present in the configuration, consider using the &lt;code&gt;consul_key_prefix&lt;/code&gt; resource instead.</source>
          <target state="translated">이 리소스는 개별 키를 관리하므로 명시 적으로 제공된 키를 생성, 업데이트 및 삭제할 수 있습니다. 그러나 Terra 이외의 방법으로 추가 된 추가 키를 감지하고 제거 할 수 없습니다. 공통 접두사를 공유하는 &lt;em&gt;모든&lt;/em&gt; 키 를 관리 하여 Terraform이 구성에없는 잘못된 키를 제거하도록하려면 대신 &lt;code&gt;consul_key_prefix&lt;/code&gt; 리소스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="702062b235285329c9e48876bbbf87221bf7ee81" translate="yes" xml:space="preserve">
          <source>This resource manages relationships between teams and repositories in your Github organization.</source>
          <target state="translated">이 리소스는 Github 조직의 팀과 리포지토리 간의 관계를 관리합니다.</target>
        </trans-unit>
        <trans-unit id="9d0e0b3003651d5995c758adf746491d3024a39f" translate="yes" xml:space="preserve">
          <source>This resource manages the full set of security rules in a vsys, enforcing both the contents of individual rules as well as their ordering. Rules are defined in a &lt;code&gt;rule&lt;/code&gt; config block.</source>
          <target state="translated">이 리소스는 vsys의 전체 보안 규칙 집합을 관리하여 개별 규칙의 내용과 순서를 모두 적용합니다. 규칙은 &lt;code&gt;rule&lt;/code&gt; 구성 블록에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="45ce8e89237583e20d028595e67ddcbc3236a33d" translate="yes" xml:space="preserve">
          <source>This resource manages the full set of security rules, enforcing both the contents of individual rules as well as their ordering. Rules are defined in a &lt;code&gt;rule&lt;/code&gt; config block. As this manages the full set of security rules for a given rulebase, any extraneous rules are removed on &lt;code&gt;terraform apply&lt;/code&gt;.</source>
          <target state="translated">이 리소스는 개별 규칙의 내용과 순서를 모두 적용하여 전체 보안 규칙 집합을 관리합니다. 규칙은 &lt;code&gt;rule&lt;/code&gt; 구성 블록에 정의되어 있습니다. 이는 지정된 룰베이스에 대한 전체 보안 규칙 세트를 관리하므로 &lt;code&gt;terraform apply&lt;/code&gt; 에서 불필요한 규칙이 제거 됩니다 .</target>
        </trans-unit>
        <trans-unit id="701ac3031fabb3d39942ebbc9c4991b54950a090" translate="yes" xml:space="preserve">
          <source>This resource manages the lifecycle of a Docker service. By default, the creation, update and delete of services are detached.</source>
          <target state="translated">이 리소스는 Docker 서비스의 수명주기를 관리합니다. 기본적으로 서비스 생성, 업데이트 및 삭제는 분리되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="86e82dd4aba66f709091d5cd12a28a0fd8855977" translate="yes" xml:space="preserve">
          <source>This resource may prove useful when setting up a Route53 record, or an origin for a CloudFront Distribution.</source>
          <target state="translated">이 리소스는 Route53 레코드 또는 CloudFront 배포 용 오리진을 설정할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="def6f9e2885bf327484606c9853ce02bc9405ff5" translate="yes" xml:space="preserve">
          <source>This resource only exports the &lt;code&gt;id&lt;/code&gt; attribute for the vSphere custom attribute.</source>
          <target state="translated">이 리소스 는 vSphere 사용자 지정 특성 의 &lt;code&gt;id&lt;/code&gt; 특성 만 내 보냅니다 .</target>
        </trans-unit>
        <trans-unit id="7438d886d0b9a9846a2144d7cb3385da89226dd1" translate="yes" xml:space="preserve">
          <source>This resource provides a alarm rule resource and it can be used to monitor several cloud services according different metrics. Details for &lt;a href=&quot;https://www.alibabacloud.com/help/doc-detail/28608.htm&quot;&gt;alarm rule&lt;/a&gt;.</source>
          <target state="translated">이 리소스는 경보 규칙 리소스를 제공하며 다양한 메트릭에 따라 여러 클라우드 서비스를 모니터링하는 데 사용할 수 있습니다. &lt;a href=&quot;https://www.alibabacloud.com/help/doc-detail/28608.htm&quot;&gt;경보 규칙에&lt;/a&gt; 대한 세부 사항 .</target>
        </trans-unit>
        <trans-unit id="f02ca4cc44a148db0534bfeb827e27b5f06ee567" translate="yes" xml:space="preserve">
          <source>This resource provides a means to configure a NAT rule in NSX. NAT provides network address translation between one IP address space and another IP address space. NAT rules can be destination NAT or source NAT rules.</source>
          <target state="translated">이 리소스는 NSX에서 NAT 규칙을 구성하는 수단을 제공합니다. NAT는 한 IP 주소 공간과 다른 IP 주소 공간 사이의 네트워크 주소 변환을 제공합니다. NAT 규칙은 대상 NAT 또는 소스 NAT 규칙 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fcbcaf12ab9bd7b50e07f83e87c21862462ecbb" translate="yes" xml:space="preserve">
          <source>This resource provides a means to configure static routes in NSX to determine where IP traffic is routed.</source>
          <target state="translated">이 리소스는 NSX에서 고정 경로를 구성하여 IP 트래픽이 라우팅되는 위치를 결정하는 수단을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="19324574a3a48075d048b0707fd9685ad2072f0b" translate="yes" xml:space="preserve">
          <source>This resource provides a means to configure tags that are applied to objects such as virtual machines. A virtual machine is not directly managed by NSX however, NSX allows attachment of tags to a virtual machine. This tagging enables tag based grouping of objects. Deletion of &lt;code&gt;nsxt_vm_tags&lt;/code&gt; resource will remove all tags from the virtual machine and is equivalent to update operation with empty tag set.</source>
          <target state="translated">이 자원은 가상 머신과 같은 오브젝트에 적용되는 태그를 구성하는 수단을 제공합니다. 가상 시스템은 NSX에서 직접 관리하지 않지만 NSX는 가상 시스템에 태그를 첨부 할 수 있습니다. 이 태그를 사용하면 태그 기반 객체 그룹화가 가능합니다. 의 삭제 &lt;code&gt;nsxt_vm_tags&lt;/code&gt; 의 자원은 가상 머신에서 모든 태그를 제거하고 빈 태그 세트 업데이트 작업에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="b8f4edcf221e02a462f36bbe6f91dcf24a6e157d" translate="yes" xml:space="preserve">
          <source>This resource provides a means to define a downlink port on a logical router to connect a logical router to a logical switch. The result of this is to provide a default gateway to virtual machines running on the logical switch.</source>
          <target state="translated">이 자원은 논리적 라우터를 논리적 스위치에 연결하기 위해 논리적 라우터에서 다운 링크 포트를 정의하는 수단을 제공합니다. 그 결과 논리적 스위치에서 실행되는 가상 시스템에 기본 게이트웨이를 제공하게됩니다.</target>
        </trans-unit>
        <trans-unit id="4d3593a99371f3f042174614587c7fe1fdf173c5" translate="yes" xml:space="preserve">
          <source>This resource provides a method for the management of a tier 1 logical router. A tier 1 logical router is often used for tenants, users and applications. There can be many tier 1 logical routers connected to a common tier 0 provider router.</source>
          <target state="translated">이 자원은 티어 1 논리 라우터 관리 방법을 제공합니다. 계층 1 논리 라우터는 종종 테넌트, 사용자 및 응용 프로그램에 사용됩니다. 공통 티어 0 제공자 라우터에 연결된 많은 티어 1 논리 라우터가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b5d7db60f72da865d3d86933bb5f83e16dce44c" translate="yes" xml:space="preserve">
          <source>This resource provides a method to create a logical switch in NSX. Virtual machines can then be connected to the appropriate logical switch for the desired topology and network connectivity.</source>
          <target state="translated">이 리소스는 NSX에서 논리적 스위치를 생성하는 방법을 제공합니다. 그런 다음 원하는 토폴로지 및 네트워크 연결을 위해 가상 머신을 적절한 논리적 스위치에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86488d0d94379d84631a5ca7cb6e3bb609006cfc" translate="yes" xml:space="preserve">
          <source>This resource provides a method to create and manage a network and security (NS) group in NSX. A NS group is used to group other objects into collections for application of other settings.</source>
          <target state="translated">이 리소스는 NSX에서 네트워크 및 보안 (NS) 그룹을 생성하고 관리하는 방법을 제공합니다. NS 그룹은 다른 설정을 적용하기 위해 다른 개체를 컬렉션으로 그룹화하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c4a94e4939deb73d722b7e7bdba6fee45129eedc" translate="yes" xml:space="preserve">
          <source>This resource provides a resource to configure a logical port on a logical switch in the NSX system. Like physical switches a logical switch can have one or more ports which can be connected to virtual machines or logical routers.</source>
          <target state="translated">이 리소스는 NSX 시스템의 논리적 스위치에서 논리적 포트를 구성하기위한 리소스를 제공합니다. 물리적 스위치와 마찬가지로 논리적 스위치에는 가상 시스템 또는 논리적 라우터에 연결할 수있는 하나 이상의 포트가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7861967a7134b470abf65af1f5ce6d32f005645" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure a firewall section on the NSX manager. A firewall section is a collection of firewall rules that are grouped together.</source>
          <target state="translated">이 리소스는 NSX Manager에서 방화벽 섹션을 구성하는 방법을 제공합니다. 방화벽 섹션은 함께 그룹화 된 방화벽 규칙 모음입니다.</target>
        </trans-unit>
        <trans-unit id="a2dd625237d417a7f59020bc7fd5a4072fbda155" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure a networking and security service which can be used with the NSX firewall. A networking and security service is an object that contains the TCP/UDP algorithm, source ports and destination ports in a single entity.</source>
          <target state="translated">이 리소스는 NSX 방화벽과 함께 사용할 수있는 네트워킹 및 보안 서비스를 구성하는 방법을 제공합니다. 네트워킹 및 보안 서비스는 단일 엔터티에 TCP / UDP 알고리즘, 소스 포트 및 대상 포트를 포함하는 개체입니다.</target>
        </trans-unit>
        <trans-unit id="e968250aa81a218218e8424d2c5847734fddbf42" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure a networking and security service which can be used within NSX. This specific service is for configuration of layer 4 ports.</source>
          <target state="translated">이 리소스는 NSX 내에서 사용할 수있는 네트워킹 및 보안 서비스를 구성하는 방법을 제공합니다. 이 특정 서비스는 계층 4 포트 구성을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="39e6cab1fc405700b9dd5d1d0cf40647aa77f297" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure a networking and security service which can be used within NSX. This specific service is for the ICMP protocol.</source>
          <target state="translated">이 리소스는 NSX 내에서 사용할 수있는 네트워킹 및 보안 서비스를 구성하는 방법을 제공합니다. 이 특정 서비스는 ICMP 프로토콜을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="cebd12ed460c6c6c5eb0652051487bb9e371f742" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure a networking and security service which can be used within NSX. This specific service is for the IGMP protocol.</source>
          <target state="translated">이 리소스는 NSX 내에서 사용할 수있는 네트워킹 및 보안 서비스를 구성하는 방법을 제공합니다. 이 특정 서비스는 IGMP 프로토콜을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="c9f06e9db350b88b81e6c49202952e763b4c0006" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure a networking and security service which can be used within NSX. This specific service is for the IP protocol.</source>
          <target state="translated">이 리소스는 NSX 내에서 사용할 수있는 네트워킹 및 보안 서비스를 구성하는 방법을 제공합니다. 이 특정 서비스는 IP 프로토콜을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="cc85ace8faf8f30ec8d63cb47985c2eee32a7f8e" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure a networking and security service which can be used within NSX. This specific service is for the layer 2 Ethernet protocol.</source>
          <target state="translated">이 리소스는 NSX 내에서 사용할 수있는 네트워킹 및 보안 서비스를 구성하는 방법을 제공합니다. 이 특정 서비스는 계층 2 이더넷 프로토콜을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="40620f3070037d8e3c0bc8fae1baba133f3c7733" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure the DHCP relay service on the NSX manager. The DHCP relay service uses a DHCP relay profile and later consumed by a router link port to provide DHCP addresses to virtual machines connected to a logical switch.</source>
          <target state="translated">이 리소스는 NSX Manager에서 DHCP 릴레이 서비스를 구성하는 방법을 제공합니다. DHCP 릴레이 서비스는 DHCP 릴레이 프로필을 사용하고 나중에 라우터 링크 포트에서 소비하여 논리적 스위치에 연결된 가상 시스템에 DHCP 주소를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c461b6f3a6d7208a2ec4ce9d75ad48e080e2358f" translate="yes" xml:space="preserve">
          <source>This resource provides the ability to configure a logical router link port on a tier 0 logical router. This port can then be used to connect the tier 0 logical router to another logical router.</source>
          <target state="translated">이 자원은 티어 0 논리 라우터에서 논리 라우터 링크 포트를 구성하는 기능을 제공합니다. 그런 다음이 포트를 사용하여 티어 0 논리 라우터를 다른 논리 라우터에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20775f0f04b35e2918e13b14af6ee24ee8af1573" translate="yes" xml:space="preserve">
          <source>This resource provides the ability to configure a logical router link port on a tier 1 logical router. This port can then be used to connect the tier 1 logical router to another logical router.</source>
          <target state="translated">이 자원은 티어 1 논리 라우터에서 논리 라우터 링크 포트를 구성하는 기능을 제공합니다. 그런 다음이 포트를 사용하여 티어 1 논리 라우터를 다른 논리 라우터에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="711163b6d570b3ee481bbc8ce6b0d89148561d3d" translate="yes" xml:space="preserve">
          <source>This resource provides the following &lt;a href=&quot;../../../configuration/resources#timeouts&quot;&gt;Timeouts&lt;/a&gt; configuration options:</source>
          <target state="translated">이 자원은 다음 &lt;a href=&quot;../../../configuration/resources#timeouts&quot;&gt;시간 종료&lt;/a&gt; 구성 옵션을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="078628f0278745423a4700bde7ef040597e165a5" translate="yes" xml:space="preserve">
          <source>This resource represents a successful validation of an ACM certificate in concert with other resources.</source>
          <target state="translated">이 자원은 다른 자원과 함께 ACM 인증서의 성공적인 유효성 검증을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="637574e5ae7bc9b818a000a7af46f1d3d31cd4f9" translate="yes" xml:space="preserve">
          <source>This resource sets the AWS public key and the type of document that can be verified against the key that Vault can then use to verify the instance identity documents making auth requests.</source>
          <target state="translated">이 리소스는 AWS 퍼블릭 키와 Vault가 인증 요청을하는 인스턴스 자격 증명 문서를 확인하는 데 사용할 수있는 키와 비교하여 확인할 수있는 문서 유형을 설정합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
