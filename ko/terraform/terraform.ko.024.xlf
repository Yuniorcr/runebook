<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="terraform">
    <body>
      <group id="terraform">
        <trans-unit id="34eb8ed63f577a0573178e643feb8a7f69cfcf7a" translate="yes" xml:space="preserve">
          <source>Setting default config context</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89305dd83a1db19821a2ac586a7d9459fc47dd76" translate="yes" xml:space="preserve">
          <source>Setting the &lt;code&gt;allow_unverified_ssl&lt;/code&gt; parameter to &lt;code&gt;true&lt;/code&gt; will direct the Terraform client to skip server certificate verification. This is not recommended in production deployments as it is recommended that you use trusted connection using certificates signed by a certificate authority.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03dcb1faf75952ebaf5e85c1016239873baeb155" translate="yes" xml:space="preserve">
          <source>Setting this in the configuration file is the recommended approach for a persistent setting. Alternatively, the &lt;code&gt;TF_PLUGIN_CACHE_DIR&lt;/code&gt; environment variable can be used to enable caching or to override an existing cache directory within a particular shell session:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb6f030016dac511cb156f06f25fa71f9a52921" translate="yes" xml:space="preserve">
          <source>Settings that require vSphere version 6.0 or higher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f16de7c75a309fe8ee8d2a939739f00383f358" translate="yes" xml:space="preserve">
          <source>Settings that require vSphere version 6.5 or higher</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6b3420b74b5d04494956583fd5c214266975256" translate="yes" xml:space="preserve">
          <source>Shared Credentials file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7b7b88bf3de5f862c996cac05ff79cb6d1f0bed" translate="yes" xml:space="preserve">
          <source>Shared access signatures allow fine-grained, ephemeral access control to various aspects of an Azure Storage Account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b652a0b602f6ec2ab9125f4872982c0b1091c83" translate="yes" xml:space="preserve">
          <source>Shared credentials file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c17179950f3272c1d227ffb894f7e5e9af201ac" translate="yes" xml:space="preserve">
          <source>Shell Tab-completion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7303509e849f23ff6bdb83235e4e9d81e71a8ee5" translate="yes" xml:space="preserve">
          <source>Should you have more than one Subscription, you can specify the Subscription to use via the following command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4937d45b52fa8e43ac9fcaa7d9d2fae5229d1fd" translate="yes" xml:space="preserve">
          <source>Showing how you can use &lt;code&gt;source_json&lt;/code&gt; and &lt;code&gt;override_json&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc7aee968ef758b4207f069e4045f55126cbdb6" translate="yes" xml:space="preserve">
          <source>Showing how you can use this as an assume role policy as well as showing how you can specify multiple principal blocks with different types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac10b4835602dd1f62ca10ed9bbfbe5df1f73e26" translate="yes" xml:space="preserve">
          <source>SignalFx</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2346a18ea3002ff04eca3a130c7f40e65c56f0c9" translate="yes" xml:space="preserve">
          <source>Signals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81f3a7b7b93d0d8bfce2d6a951f5098e67c2a3ff" translate="yes" xml:space="preserve">
          <source>Similar approaches can be taken with equivalent features in other AWS compute services, such as ECS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b1ce02c53913bb1bc102fda4d976983e8f371d4" translate="yes" xml:space="preserve">
          <source>Similarly to &lt;a href=&quot;resources&quot;&gt;resources&lt;/a&gt;, the &lt;code&gt;provider&lt;/code&gt; meta-parameter can be used where a configuration has multiple aliased instances of the same provider:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc6ee3fa5513f999da535f515bf6cfea71a7b1d4" translate="yes" xml:space="preserve">
          <source>Similarly, for a map declared like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372918ed0ba397e04dee0ce61ca9bbe023077bbd" translate="yes" xml:space="preserve">
          <source>Simple String Value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78fdcd8b76cc0c2bfa0cb1fc22b189d11b02feef" translate="yes" xml:space="preserve">
          <source>Simple datasource declaration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fde066e9271a0e6d8125eb4c8e7d207e8583b90" translate="yes" xml:space="preserve">
          <source>Simple math can be performed in interpolations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be48dc046f43f59fa41c52f7949fe39a7c1bd0e" translate="yes" xml:space="preserve">
          <source>Simple routing policy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00bc19bdbb95a6a2c745e07e13158ba40bb3374" translate="yes" xml:space="preserve">
          <source>SimpleAD</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ef6b11881f040d471b2e5467191548469d8816" translate="yes" xml:space="preserve">
          <source>SimpleDB Domains can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac43d3145b6478f723804803522be0f41c9e3d83" translate="yes" xml:space="preserve">
          <source>Since a private key is a logical resource that lives only in the Terraform state, it will persist until it is explicitly destroyed by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af4b5c6510e1baee4cd3ecd6744b63d9ece53b14" translate="yes" xml:space="preserve">
          <source>Since the &lt;code&gt;Create&lt;/code&gt; operation used &lt;code&gt;SetId&lt;/code&gt;, Terraform believes the resource created successfully. Verify this by running &lt;code&gt;terraform plan&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042ecd0722f522581774c076182122374a6aa27c" translate="yes" xml:space="preserve">
          <source>Since the artifact zip files and the S3 bucket itself were created outside of Terraform, they must also be cleaned up outside of Terraform. This can be done via &lt;a href=&quot;https://s3.console.aws.amazon.com/s3/home&quot;&gt;the S3 console&lt;/a&gt;. Note that all of the objects in the bucket must be deleted before the bucket itself can be deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c274e8d887b10b492d2279c49381b1f90cf78e" translate="yes" xml:space="preserve">
          <source>Since the external data source protocol uses JSON, it is recommended to use the utility &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;&lt;code&gt;jq&lt;/code&gt;&lt;/a&gt; to translate to and from JSON in a robust way when implementing a data source in a shell scripting language.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc2206b73de641ae60b0cd962b4dca37455dd167" translate="yes" xml:space="preserve">
          <source>Since the purpose of the administrative account is only to host tools for managing other accounts, it is useful to give the administrative accounts restricted access only to the specific operations needed to assume the environment account role and access the Terraform state. By blocking all other access, you remove the risk that user error will lead to staging or production resources being created in the administrative account by mistake.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3796f0ed477a3b4f6d6e02688db360af9dea1b" translate="yes" xml:space="preserve">
          <source>Since we did not implement the &lt;code&gt;Update&lt;/code&gt; function, you would expect the &lt;code&gt;terraform plan&lt;/code&gt; operation to report changes, but it does not! How were our changes persisted without the &lt;code&gt;Update&lt;/code&gt; implementation?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8389e986ff3820c6391fd44e2c24521c417172df" translate="yes" xml:space="preserve">
          <source>Single EIP associated with an instance:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c67da6875dd988b56361c89cc4e7dceb907aaf1" translate="yes" xml:space="preserve">
          <source>Single line comments start with &lt;code&gt;#&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0362c92d4c9204499f67dfa053b1c79f1d255f74" translate="yes" xml:space="preserve">
          <source>Site Connections can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="256de0dc5b9e3a8048638aa2149bff7eec9d28c6" translate="yes" xml:space="preserve">
          <source>Site-to-Site connection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55420c59a1c2e9a70f07a6fa02f0d228ffb87b76" translate="yes" xml:space="preserve">
          <source>Snapshots</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4b440696cb8649818430efaed6ad28c4ddb144e" translate="yes" xml:space="preserve">
          <source>Snapshots can be imported using the &lt;code&gt;resource id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801ba0b6605bb0779a5a2dc292f84a2fa85a6ee6" translate="yes" xml:space="preserve">
          <source>So to conclude, with the RPC interface &lt;em&gt;and&lt;/em&gt; internal plugins, we get the best of all of these features: Binaries that &lt;em&gt;Just Work&lt;/em&gt;, savings from shared code, and extensibility through plugins. We hope you enjoy using these features in Terraform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2e79a5739df26ff763b7313a27213d20548235d" translate="yes" xml:space="preserve">
          <source>SoftLayer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85329447727254d58a6ff248a71e275a8b786ba8" translate="yes" xml:space="preserve">
          <source>SoftLayer Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97b8a8190eb25747bf95272613937504bdcdd1ec" translate="yes" xml:space="preserve">
          <source>Some Google Provider resources contain Beta features; Beta GCP Features have no deprecation policy, and no SLA, but are otherwise considered to be feature-complete with only minor outstanding issues after their Alpha period. Beta is when a GCP feature is publicly announced, and is when they generally become publicly available. For more information see &lt;a href=&quot;https://cloud.google.com/terms/launch-stages&quot;&gt;the official documentation&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5588f79bc520bc4a00b8ccc172919109c4c711" translate="yes" xml:space="preserve">
          <source>Some arguments for this resource are required in the TimeSpan format which is used to represent a lengh of time. The supported format is documented &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/se73z7b9(v=vs.110).aspx#Anchor_2&quot;&gt;here&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe5da782091de9632af2ef0aac1223bd76d37df" translate="yes" xml:space="preserve">
          <source>Some arguments for this resource are required in the TimeSpan format which is used to represent a length of time. The supported format is documented &lt;a href=&quot;https://msdn.microsoft.com/en-us/library/se73z7b9(v=vs.110).aspx#Anchor_2&quot;&gt;here&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa817d8988f467e372472b40b041cb6e1e74b1ab" translate="yes" xml:space="preserve">
          <source>Some backends support the ability to run operations (&lt;code&gt;refresh&lt;/code&gt;, &lt;code&gt;plan&lt;/code&gt;, &lt;code&gt;apply&lt;/code&gt;, etc.) remotely. Terraform will continue to look and behave as if they're running locally while they in fact run on a remote machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3caca39c53cfc4f32d954f6952a948a7bc1a24a4" translate="yes" xml:space="preserve">
          <source>Some operating systems (such as Windows) do not respond well to a change in disk controller type, so when using such OSes, take care to ensure that &lt;code&gt;scsi_type&lt;/code&gt; is set to an exact match of the template's controller set. For maximum compatibility, make sure the SCSI controllers on the source template are all the same type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1135a34af1505cf9077aca97ea27acf15df232be" translate="yes" xml:space="preserve">
          <source>Some options can be stack-specific, check &lt;a href=&quot;https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/command-options-general.html&quot;&gt;AWS Docs&lt;/a&gt; for supported options and examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f538138b48fefc18ff3a93a1a0f724a5fc932c11" translate="yes" xml:space="preserve">
          <source>Some properties of an IAM Server Certificates cannot be updated while they are in use. In order for Terraform to effectively manage a Certificate in this situation, it is recommended you utilize the &lt;code&gt;name_prefix&lt;/code&gt; attribute and enable the &lt;code&gt;create_before_destroy&lt;/code&gt;&lt;a href=&quot;../../../configuration/resources&quot;&gt;lifecycle block&lt;/a&gt;. This will allow Terraform to create a new, updated &lt;code&gt;aws_iam_server_certificate&lt;/code&gt; resource and replace it in dependant resources before attempting to destroy the old version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245a9bac5b02d6fd6d2f5580067bc186bf7c807f" translate="yes" xml:space="preserve">
          <source>Some resources (such as RDS databases) have options for PGP encrypting the values within the state. This is implemented on a per-resource basis and you should assume the value is plaintext unless otherwise documented.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03a687c29c297f2c680301703bdc6dcca96f576" translate="yes" xml:space="preserve">
          <source>Some resources may contain variables that are only applicable for newer versions of PAN-OS. If this is the case, then make sure to use &lt;a href=&quot;../../configuration/interpolation&quot;&gt;conditionals&lt;/a&gt; along with the &lt;code&gt;panos_system_info&lt;/code&gt; data source to only set these variables when the version of PAN-OS is appropriate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e172b5fffd0888852546f2183e9da66a15d39556" translate="yes" xml:space="preserve">
          <source>Sometimes new code doesn't work as expected and the simplest path is to return to the previous version. Because all of the historical versions of the artifact are preserved on S3, the original version can be restored with a single command:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da13addb000b67d42a6d66391713819e634149f" translate="yes" xml:space="preserve">
          <source>Source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3227a5c9a1c6d7853c50121409a3923f95cb8d8d" translate="yes" xml:space="preserve">
          <source>Source strings for private registry modules are similar to public modules, but also include a hostname. They should follow the format &lt;code&gt;&amp;lt;HOSTNAME&amp;gt;/&amp;lt;NAMESPACE&amp;gt;/&amp;lt;NAME&amp;gt;/&amp;lt;PROVIDER&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5c591ab9161bc03b144922d96c01134841b474" translate="yes" xml:space="preserve">
          <source>SourceRestrictions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88d51f57e2d8f3d8b785c9bf400ddb34cd51329a" translate="yes" xml:space="preserve">
          <source>Spaces can be imported using the space &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da10123fd2cc950c75b70ce8fdc353e30675a1f" translate="yes" xml:space="preserve">
          <source>Specifies the billing type for the instance. When &lt;code&gt;true&lt;/code&gt;, the computing instance will be billed on hourly usage, otherwise it will be billed on a monthly basis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab84fc7fb2830f25c25e4f4bd2ee8f0206d3ee2e" translate="yes" xml:space="preserve">
          <source>Specifies the connection speed for the instance's network components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b172c3f2a7c9e81e86e24907d9eec3e0ab280ac8" translate="yes" xml:space="preserve">
          <source>Specifies the disk type for the instance. When &lt;code&gt;true&lt;/code&gt;, the disks for the computing instance will be provisioned on the host which it runs, otherwise SAN disks will be provisioned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afcd7586510d1ca63401fd40f37a21d003f5395" translate="yes" xml:space="preserve">
          <source>Specifies the network VLAN which is to be used for the back end interface of the computing instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e136cababe7865566f2869fe67fc35dabb8b7f" translate="yes" xml:space="preserve">
          <source>Specifies the network VLAN which is to be used for the front end interface of the computing instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="739c83f2872abd8aa46379f6a48fd5a8428e23ba" translate="yes" xml:space="preserve">
          <source>Specifies whether or not the instance must only run on hosts with instances from the same account</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2828e8d355a9be3080f300eca7e4611a90082ab6" translate="yes" xml:space="preserve">
          <source>Specifies whether or not the instance only has access to the private network. When true this flag specifies that a compute instance is to only have access to the private network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae2a2cbec187dd0b7f14e3f8f6dc5de13fbbe0f" translate="yes" xml:space="preserve">
          <source>Specifies which datacenter the instance is to be provisioned in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131ee561a4cb81be9ecee312405a6d1faea67759" translate="yes" xml:space="preserve">
          <source>Specify Lambda permissions for API Gateway REST API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5529eb74498b543d71ef9b74c39be475a77211a5" translate="yes" xml:space="preserve">
          <source>Specifying Elastic IPs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b394aa7f98acb7876a0924f1f2ce76d7b2046d42" translate="yes" xml:space="preserve">
          <source>Specifying a Required Terraform Version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a89c6111190480af0e1323607ba4a08a35482de" translate="yes" xml:space="preserve">
          <source>Specifying endpoints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac32d5b9f1345a58953e0c8368b4166d5f3bf158" translate="yes" xml:space="preserve">
          <source>Specifying the Deployment Package</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0897046804ba18c770bd72896e4b04299dd0ead1" translate="yes" xml:space="preserve">
          <source>Specifying the root resource pool for a standalone host</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20280193475b0c7eeaa650a180f6019f9001f022" translate="yes" xml:space="preserve">
          <source>Splunk Destination</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f48c9982b1ed1a76d74757eeec1d85a249450c0" translate="yes" xml:space="preserve">
          <source>Spot Instance Requests support all the same arguments as &lt;a href=&quot;instance&quot;&gt;&lt;code&gt;aws_instance&lt;/code&gt;&lt;/a&gt;, with the addition of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be78675a5131007a38beacf89cef9379af25c693" translate="yes" xml:space="preserve">
          <source>Spot Instances requests with a &lt;code&gt;one-time&lt;/code&gt; type will close the spot request when the instance is terminated either by the request being below the current spot price availability or by a user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d20ac34431f6df8012620575f9c4d137713aa1" translate="yes" xml:space="preserve">
          <source>SpotAsPriceGo: A price that is based on the highest Pay-As-You-Go instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf263c5158355ff6e75f6d1b59efb3500b069f9" translate="yes" xml:space="preserve">
          <source>SpotWithPriceLimit: A price threshold for a spot instance</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075930ec27909c59a9639c00e3aeadbe4141edfe" translate="yes" xml:space="preserve">
          <source>Spotinst</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a026db3cfbdacab7624b03a2303da267c89b6e3" translate="yes" xml:space="preserve">
          <source>Spotinst Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4563ffe979468cbfdd0b7d78d02a2db43d937535" translate="yes" xml:space="preserve">
          <source>SslPolicy can be imported using any of these accepted formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98b42327a0a0395619d4786cfa2e958963fff701" translate="yes" xml:space="preserve">
          <source>Stacks can be imported using the Environment and Stack ID in the form &lt;code&gt;&amp;lt;environment_id&amp;gt;/&amp;lt;stack_id&amp;gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dfa66079d9b7229409430972fd5f1567d78a3b6" translate="yes" xml:space="preserve">
          <source>Standard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589af54db5bc5502ee9b838564d6df92138ad07e" translate="yes" xml:space="preserve">
          <source>Standard Module Structure</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497d386c97e53ab278140152e1820c39a7943c42" translate="yes" xml:space="preserve">
          <source>Standard domain name: &lt;a href=&quot;http://www.test.com&quot;&gt;www.test.com&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f5c669a805cfa9e11ce0940c8d4ff5cdb4d20ad" translate="yes" xml:space="preserve">
          <source>Standard usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497fa56f36dc9c04e3a0141444dd69a8d4b977b0" translate="yes" xml:space="preserve">
          <source>Standby supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72502067518684f9deeec70cf119fd26326cd33" translate="yes" xml:space="preserve">
          <source>State</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f44566662a4670e99d1f9816260a172a7b9012" translate="yes" xml:space="preserve">
          <source>State Command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9719bd1148c89a1e336b60821e0ba7ed765336" translate="yes" xml:space="preserve">
          <source>State Environments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ead00781601a55db721d573cc468d0687938e9" translate="yes" xml:space="preserve">
          <source>State Locking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c290050f19c84bcdf77a86940a8a8ea2654513c9" translate="yes" xml:space="preserve">
          <source>State Machines can be imported using the &lt;code&gt;arn&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a840e2bf8b45e62144e05974e2dbb3c8bb1d653" translate="yes" xml:space="preserve">
          <source>State Storage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc541085c829ed6139bb3f8735dedbb6e1d11738" translate="yes" xml:space="preserve">
          <source>State Storage and Locking</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a948dc3f3c5c2526221a6cf74eddaa1865d606a" translate="yes" xml:space="preserve">
          <source>State is a necessary requirement for Terraform to function. It is often asked if it is possible for Terraform to work without state, or for Terraform to not use state and just inspect cloud resources on every run. This page will help explain why Terraform state is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed81ad965c1cea4260c9d1924d59eb31c364c1f9" translate="yes" xml:space="preserve">
          <source>State locking happens automatically on all operations that could write state. You won't see any message that it is happening. If state locking fails, Terraform will not continue. You can disable state locking for most commands with the &lt;code&gt;-lock&lt;/code&gt; flag but it is not recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a24bbb1ec54489f79bb5c0098cf404f46af96d5" translate="yes" xml:space="preserve">
          <source>State will be fetched via GET, updated via POST, and purged with DELETE. The method used for updating is configurable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71935ea4bf5ee8ec266ebc80897169c7237a27d7" translate="yes" xml:space="preserve">
          <source>Stateful</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c426d31cfa540a70a7a7e0a6361108625cd84c3b" translate="yes" xml:space="preserve">
          <source>Stateful Deallocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024e4a334dba40f3c768bbf2a91e0d0c65850185" translate="yes" xml:space="preserve">
          <source>Static API Key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6d78802dc49d01e7b6b3e1ba1abc20a078c75a" translate="yes" xml:space="preserve">
          <source>Static API key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51aa7a86afa68be454ef906f986f826862801a9c" translate="yes" xml:space="preserve">
          <source>Static Website</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def8cfe920ab24ac8ec6d2f403a5c8497217d095" translate="yes" xml:space="preserve">
          <source>Static Website Hosting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b64cafc9b4084223cf776d07ffd928aa45f763" translate="yes" xml:space="preserve">
          <source>Static credentials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ffc199bff3dd4dac92dfa20a7bf6abb93c7ecf" translate="yes" xml:space="preserve">
          <source>Static credentials can be provided by adding a &lt;code&gt;api_key&lt;/code&gt; in-line in the Fastly provider block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3d3059ba645b5e5d70a9152aa2911c6558f8c6" translate="yes" xml:space="preserve">
          <source>Static credentials can be provided by adding an &lt;code&gt;access_key&lt;/code&gt; and &lt;code&gt;secret_key&lt;/code&gt; in-line in the AWS provider block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0827843ac80e21a62d8e2c436ee7c79cbca91ee" translate="yes" xml:space="preserve">
          <source>Static credentials can be provided by adding an &lt;code&gt;access_key&lt;/code&gt;&lt;code&gt;secret_key&lt;/code&gt; and &lt;code&gt;region&lt;/code&gt; in-line in the alicloud provider block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815ea67ef671f5800d7f42347045a5afd80865f4" translate="yes" xml:space="preserve">
          <source>Static credentials can be provided by adding an &lt;code&gt;api_user&lt;/code&gt; and &lt;code&gt;api_password&lt;/code&gt; in-line in the icinga2 provider block:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7c42094687d90286ed3d728a3eb4e0df04e29df" translate="yes" xml:space="preserve">
          <source>Statically defined credentials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6988211930f3f1add9f1ece408297903bafce6d" translate="yes" xml:space="preserve">
          <source>Status Code == 200</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="261003ce865f70d162ed97821cd70c9e6487dc8c" translate="yes" xml:space="preserve">
          <source>StatusCake</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78444506ad8db2f540031a9bdae065583c0b2bab" translate="yes" xml:space="preserve">
          <source>StatusCake Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdde4f20ba31a24db2cc7ae71135c8353631907b" translate="yes" xml:space="preserve">
          <source>Steps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d7f071f25c24d4af01bc3e703f87d38cdf96f4c" translate="yes" xml:space="preserve">
          <source>Stickers for everyone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd8133f55ff0bcb307aef1f9f0d40454b8644df" translate="yes" xml:space="preserve">
          <source>Stickiness Blocks (&lt;code&gt;stickiness&lt;/code&gt;) support the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6e47951ba53cfbe0fee56b80437e10a65239da" translate="yes" xml:space="preserve">
          <source>Stop actions support the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b1098396816842717b295484c15125f545151a" translate="yes" xml:space="preserve">
          <source>Storage Accounts can be imported using the &lt;code&gt;resource id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f65032dbf3429717872c03482450af0b9da0b79" translate="yes" xml:space="preserve">
          <source>Storage Attachments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d59bc6f15f6f5ed925998adebc0448aac5f766" translate="yes" xml:space="preserve">
          <source>Storage DRS I/O load balancing settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb7c87fef7a3456ca1c07991b6c90e45c3b6dd24" translate="yes" xml:space="preserve">
          <source>Storage DRS advanced settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e14b47b7e3eede0b6fa5f2073b3bfd7fcc5826e2" translate="yes" xml:space="preserve">
          <source>Storage DRS automation options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a357aefe1f78cf5e2abdb373354f7503cd9c507" translate="yes" xml:space="preserve">
          <source>Storage DRS disk space load balancing settings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31d931149977e7e46a73ffedf135130467549b7d" translate="yes" xml:space="preserve">
          <source>Storage Volume Snapshot's can be imported using the &lt;code&gt;resource name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a39fdddea592aa4ba28bb9bf69aa227201ab03" translate="yes" xml:space="preserve">
          <source>Storage Volume's can be imported using the &lt;code&gt;resource name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d6926ade89edcb38de6dba0de3f6a8b3c86a5b" translate="yes" xml:space="preserve">
          <source>Storage buckets can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc3c2277d7d607037f4dfdb0db4894565758819" translate="yes" xml:space="preserve">
          <source>Storage class is the foundation of dynamic provisioning, allowing cluster administrators to define abstractions for the underlying storage platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872e7f382fdcebdfa4f6bb49b834f3cfbc12d84b" translate="yes" xml:space="preserve">
          <source>Storage migration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9ae298f4c4bd2c64f85d36a5d8141f8d33306d" translate="yes" xml:space="preserve">
          <source>Storage migration can be done on two levels:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d83e84e0e16270d67b9ba884279950ec49c647" translate="yes" xml:space="preserve">
          <source>Storage migration restrictions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8073f3fb8d9d21fa773b28c7518d2098dcec75e" translate="yes" xml:space="preserve">
          <source>Storage notifications can be imported using the notification &lt;code&gt;id&lt;/code&gt; in the format &lt;code&gt;&amp;lt;bucket_name&amp;gt;/notificationConfigs/&amp;lt;id&amp;gt;&lt;/code&gt; e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3de14dc04fd4731c20213be73f36c6c0932e980" translate="yes" xml:space="preserve">
          <source>Stores the state as a given key in a given blob container on &lt;a href=&quot;https://azure.microsoft.com/en-us/documentation/articles/storage-introduction/&quot;&gt;Microsoft Azure Storage&lt;/a&gt;. This backend also supports state locking and consistency checking via native capabilities of Microsoft Azure Storage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ee6a2ca6e464bbc3a1f717ae381dd181aa7723" translate="yes" xml:space="preserve">
          <source>Stores the state as a given key in a given bucket on &lt;a href=&quot;https://aws.amazon.com/s3/&quot;&gt;Amazon S3&lt;/a&gt;. This backend also supports state locking and consistency checking via &lt;a href=&quot;https://aws.amazon.com/dynamodb/&quot;&gt;Dynamo DB&lt;/a&gt;, which can be enabled by setting the &lt;code&gt;dynamodb_table&lt;/code&gt; field to an existing DynamoDB table name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57f9cef532b48bf2350d8437893677eabe3e4876" translate="yes" xml:space="preserve">
          <source>Stores the state as an artifact in &lt;a href=&quot;http://docs.openstack.org/developer/swift/&quot;&gt;Swift&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e69ee9beadc594b5df4ac3e5d73b7cc197ffdca3" translate="yes" xml:space="preserve">
          <source>Stores the state as an artifact in &lt;a href=&quot;https://www.joyent.com/manta&quot;&gt;Manta&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1c4f2b5189f935c653f42f29ecd02d5b8bd38d" translate="yes" xml:space="preserve">
          <source>Stores the state as an artifact in a given repository in &lt;a href=&quot;https://www.jfrog.com/artifactory/&quot;&gt;Artifactory&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e0422c4fd257a9084bac405da6ed9f9f79e0ee" translate="yes" xml:space="preserve">
          <source>Stores the state as an object in a configurable prefix and bucket on &lt;a href=&quot;https://cloud.google.com/storage/&quot;&gt;Google Cloud Storage&lt;/a&gt; (GCS).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e7321faa2cdebdbbb1b4fd8ca3c645cd34cf6d" translate="yes" xml:space="preserve">
          <source>Stores the state in &lt;a href=&quot;https://coreos.com/etcd/docs/latest/v2/README.html&quot;&gt;etcd 2.x&lt;/a&gt; at a given path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c65cc54b1f64f363039a25d7351b0cb3df4ee6" translate="yes" xml:space="preserve">
          <source>Stores the state in the &lt;a href=&quot;https://coreos.com/etcd/&quot;&gt;etcd&lt;/a&gt; KV store with a given prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89d65d84b34185f6fe662fd79ba70ea4903f6963" translate="yes" xml:space="preserve">
          <source>Stores the state in the &lt;a href=&quot;https://www.consul.io/&quot;&gt;Consul&lt;/a&gt; KV store at a given path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40ecca8e2076d9d695b5b236bbe32f9f47d56c90" translate="yes" xml:space="preserve">
          <source>Stores the state using a simple &lt;a href=&quot;https://en.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;REST&lt;/a&gt; client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="439126dcd280ad6d2b7fe29dd23581c5b4dca623" translate="yes" xml:space="preserve">
          <source>Storing state remotely may provide you encryption at rest depending on the backend you choose. As of Terraform 0.9, Terraform will only hold the state value in memory when remote state is in use. It is never explicitly persisted to disk.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087105a399dc039d831fa5cb61fdcec4d886a2e8" translate="yes" xml:space="preserve">
          <source>String Attribute Constraints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dac57c8f6ad2b730128a6de461e0cfe46a0dc2" translate="yes" xml:space="preserve">
          <source>String Values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7e04f109aec3e50771580085e3a6e007a81aa3" translate="yes" xml:space="preserve">
          <source>String values are simple and represent a basic key to value mapping where the key is the variable name. An example is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3816c4beac471c733eed1d91c213f8c2b6a29262" translate="yes" xml:space="preserve">
          <source>Strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c7a1dc1ac4454ed3a0820ec58a48d10bcc4d52d" translate="yes" xml:space="preserve">
          <source>Strings are in double-quotes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a8900461062c78b001caa56e239e114cd8f275" translate="yes" xml:space="preserve">
          <source>Strings can interpolate other values using syntax wrapped in &lt;code&gt;${}&lt;/code&gt;, such as &lt;code&gt;${var.foo}&lt;/code&gt;. The full syntax for interpolation is &lt;a href=&quot;interpolation&quot;&gt;documented here&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7cb8a39532bc3900e0c2dfe6b6e70431800ddc0" translate="yes" xml:space="preserve">
          <source>Subcommands that are read-only (such as &lt;a href=&quot;list&quot;&gt;list&lt;/a&gt;) do not write any backup files since they aren't modifying the state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1087b6c1290edf079b4cfda48f502fe44755f35d" translate="yes" xml:space="preserve">
          <source>Subdirectories within the repository can also be referenced:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f2659fc4f377e54680a156914e2b19890218e6" translate="yes" xml:space="preserve">
          <source>Submitting a pyspark job to the cluster. Below is an example configuration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d2fe75431c00d24342648884954e83dcafbcf1" translate="yes" xml:space="preserve">
          <source>Subnet Mapping (&lt;code&gt;subnet_mapping&lt;/code&gt;) blocks support the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a408330c759d39ed342a46f06c347c6be170bb" translate="yes" xml:space="preserve">
          <source>Subnetpools can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e21f21b5b794a8f0b0bb6792c5caae1a113dc5" translate="yes" xml:space="preserve">
          <source>Subnets In Secondary VPC CIDR Blocks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c813d16f03b0cd7036292843539d47fe3d13d669" translate="yes" xml:space="preserve">
          <source>Subnets can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22410d8d500fa515f6c553b8de6ba4f4810a3966" translate="yes" xml:space="preserve">
          <source>Subnets can be imported using the &lt;code&gt;resource id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43899b5395f1da2843742489b0df367247b4259" translate="yes" xml:space="preserve">
          <source>Subnets can be imported using the &lt;code&gt;subnet id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b065cb0c441ecec1e65d161e7df40bef32190e4" translate="yes" xml:space="preserve">
          <source>Subnetwork can be imported using any of these accepted formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f14287ad53a87cf67e33e68376ad677095d8ad3e" translate="yes" xml:space="preserve">
          <source>Summarizing Modules in the UI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961a2545be348fbfc7805a56bc2e9dfb5884f809" translate="yes" xml:space="preserve">
          <source>Super: High privilege.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c545d6a0ffefac0b3f78317c2d3b533a54fbc5a1" translate="yes" xml:space="preserve">
          <source>Supervisor Arguments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaba9922ea24960f7e788ff07e5acaf36797c6b0" translate="yes" xml:space="preserve">
          <source>Supplying your own SysPrep file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f32d5a3b17e614297417cc279a7ec1cd02274d65" translate="yes" xml:space="preserve">
          <source>Support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3255a40d9a21156f6ae64bdf763a71d0ef15c6b" translate="yes" xml:space="preserve">
          <source>Supported &lt;code&gt;metric&lt;/code&gt; Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5652ba3c2181a2cbbdf221c8b8990a1df00ba385" translate="yes" xml:space="preserve">
          <source>Supported Check Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec246c8de032fdd8c40bdc6065318bff463a0c32" translate="yes" xml:space="preserve">
          <source>Supported Contact Group &lt;code&gt;alert_option&lt;/code&gt; Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6d00fdba3037fb89a3b6e36a3716425639ab78" translate="yes" xml:space="preserve">
          <source>Supported Contact Group &lt;code&gt;email&lt;/code&gt; Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c4ad916fb2ed518992746ac455decb8a3eb609d" translate="yes" xml:space="preserve">
          <source>Supported Contact Group &lt;code&gt;http&lt;/code&gt; Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7a23a54a5ad7404b7e5746499f4e8c1f751de4" translate="yes" xml:space="preserve">
          <source>Supported Contact Group &lt;code&gt;irc&lt;/code&gt; Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0f636dda440e631d73b3bd1c5a05e0107b892e" translate="yes" xml:space="preserve">
          <source>Supported Contact Group &lt;code&gt;pager_duty&lt;/code&gt; Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159b86ce6cd607054854ac39456fb410f53513be" translate="yes" xml:space="preserve">
          <source>Supported Contact Group &lt;code&gt;slack&lt;/code&gt; Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e28254af08542a07d92c91b704a0f2f5b853fb7e" translate="yes" xml:space="preserve">
          <source>Supported Contact Group &lt;code&gt;sms&lt;/code&gt; Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d25da59b710ab8c7d686921ea6be83da64a3535" translate="yes" xml:space="preserve">
          <source>Supported Contact Group &lt;code&gt;victorops&lt;/code&gt; Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a9d42dbede64834f8e821e4723def1588c66ee5" translate="yes" xml:space="preserve">
          <source>Supported Contact Group &lt;code&gt;xmpp&lt;/code&gt; Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddf8d0094a2d4f066c6559ecb7f530e3282dcd2" translate="yes" xml:space="preserve">
          <source>Supported Metric Cluster &lt;code&gt;query&lt;/code&gt; Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9493cec96259574b8f57aa7dfe3df070bfe3342f" translate="yes" xml:space="preserve">
          <source>Supported SNS protocols include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4236b8f72460cf329106c7e84003d9678a81df20" translate="yes" xml:space="preserve">
          <source>Supported Services</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05bcc4738c92f2d0e430e45bd1d7079f6977a59" translate="yes" xml:space="preserve">
          <source>Supported built-in functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae653cdae3c62b047c1810e8c994995d0288e97" translate="yes" xml:space="preserve">
          <source>Supporting our Community</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="127a818dc95907cff76df0053c9a30e2b0e51620" translate="yes" xml:space="preserve">
          <source>Swarm application can be imported using the id, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b722589d96c818809dcdaaeebcd69c911c1665cd" translate="yes" xml:space="preserve">
          <source>Swarm cluster can be imported using the id, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d6cd185429e385fd0d0c4686fb649d4c85c903" translate="yes" xml:space="preserve">
          <source>Sweatshirts for the top 5 people who close the most issues via bug closure or finding duplicates and closing issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ae6fa22bc9918cf39eb8d8cef197a88e78982e8" translate="yes" xml:space="preserve">
          <source>Syncing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17c7ba7676ad1ad6dd1c4e6b997adcae910262c9" translate="yes" xml:space="preserve">
          <source>Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd51d2d20880e41b4ac059c0717ae5d90687e6ab" translate="yes" xml:space="preserve">
          <source>System reserved private network address: 172.16/17/18/31.0.0/16. Maximum number of hosts allowed in the cluster: 256.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931e27c682318f157f35fc24bfb2a21f849edff9" translate="yes" xml:space="preserve">
          <source>T-shirts for the next top 10 people who close the most issues via bug closure or finding duplicates and closing issues</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6719917bc936b3a9d01f07c34cabe9d985f35864" translate="yes" xml:space="preserve">
          <source>TF_CLI_ARGS and TF_CLI_ARGS_name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10938807c2f06ab2e036d8bbf60770577ebcf2a" translate="yes" xml:space="preserve">
          <source>TF_DATA_DIR</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55b6fb5a44474ed4560c779b55e7e2c1618b6a8" translate="yes" xml:space="preserve">
          <source>TF_INPUT</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93ae6a4d7e533ea1d031656cb8efd50feba215d" translate="yes" xml:space="preserve">
          <source>TF_LOG</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe571ae7dc3bbb231727330e639c50fe0b2e91e0" translate="yes" xml:space="preserve">
          <source>TF_LOG_PATH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e20dfe6a6d3dbcf3d638d5a7020722cf4fdb254" translate="yes" xml:space="preserve">
          <source>TF_MODULE_DEPTH</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c611c82a132059b67e23b3f37c22e9100570bd2" translate="yes" xml:space="preserve">
          <source>TF_SKIP_REMOTE_TESTS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3be7f323de59a691917a5ca2cebbcbada2bcc84" translate="yes" xml:space="preserve">
          <source>TF_VAR_name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91e1888f2dc09f11a876e25966a6fbd32b9cd87" translate="yes" xml:space="preserve">
          <source>TLS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b1b0b67c7f7d7163d89f181fafd8530e5af29f" translate="yes" xml:space="preserve">
          <source>TLS Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075071ba01a79e09f139e64867b7cd5b04283b3a" translate="yes" xml:space="preserve">
          <source>TTL for all alias records is &lt;a href=&quot;https://aws.amazon.com/route53/faqs/#dns_failover_do_i_need_to_adjust&quot;&gt;60 seconds&lt;/a&gt;, you cannot change this, therefore &lt;code&gt;ttl&lt;/code&gt; has to be omitted in alias records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2a115f2a3b411d6f2bdf9c9cfeca8d6765739c" translate="yes" xml:space="preserve">
          <source>TXT Record</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2addfdb321f0b38ffb5081777a948bda9a08ae" translate="yes" xml:space="preserve">
          <source>TXT records can be imported using the &lt;code&gt;resource id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472163a10b57582bda64cd842c6499bf1ef58edb" translate="yes" xml:space="preserve">
          <source>Table hash key or range key</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fcc161a94be1e47f30ac8360f8225de46f02a0" translate="yes" xml:space="preserve">
          <source>Tag Filters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1bfda9c9b275b63a9bd2a52747a44499246f1ff" translate="yes" xml:space="preserve">
          <source>Tag Groups</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b37a5b2ef8757f78d132e5f07c8318ec35f8763" translate="yes" xml:space="preserve">
          <source>Tag names must be a valid &lt;a href=&quot;http://semver.org&quot;&gt;semantic version&lt;/a&gt;, optionally prefixed with a &lt;code&gt;v&lt;/code&gt;. Example of valid tags are: &lt;code&gt;v1.0.1&lt;/code&gt; and &lt;code&gt;0.9.4&lt;/code&gt;. To publish a new module, you must already have at least one tag created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2755845a9bf905e71925fe903fb517ec011d1fc2" translate="yes" xml:space="preserve">
          <source>Tags can be applied to vSphere resources in Terraform via the &lt;code&gt;tags&lt;/code&gt; argument in any supported resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19bee1e05ebe0f5f8c40ead194baf7e5cdddd2be" translate="yes" xml:space="preserve">
          <source>Tags can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1208deb5c7ba10893c0e1a7ad89b1e726c9ee426" translate="yes" xml:space="preserve">
          <source>Tags support the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8de28854e129aca4155a052c302a8c2c4e2dae" translate="yes" xml:space="preserve">
          <source>Tainting resources within a module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a191e3b876726ffe008f5dca0c48085124ec41c" translate="yes" xml:space="preserve">
          <source>Take note of the &lt;a href=&quot;#ha_vm_monitoring_use_cluster_defaults&quot;&gt;&lt;code&gt;ha_vm_monitoring_use_cluster_defaults&lt;/code&gt;&lt;/a&gt; setting - this is defaulted to &lt;code&gt;true&lt;/code&gt; and means that override settings are &lt;em&gt;not&lt;/em&gt; used. Set this to &lt;code&gt;false&lt;/code&gt; to ensure your overrides function. Note that unlike the rest of the options in this resource, there are no granular per-setting cluster default values - &lt;code&gt;ha_vm_monitoring_use_cluster_defaults&lt;/code&gt; is the only toggle available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ab201183b27fbf748eb7c6d787f66a28bb159a3" translate="yes" xml:space="preserve">
          <source>Target Group Attachments cannot be imported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b42c28dd60e09a1de5066de28b469efde58679d" translate="yes" xml:space="preserve">
          <source>Target Groups can be imported using their ARN, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dba7bdebadb1ffe47a8450c99c5d0f5c39e8049b" translate="yes" xml:space="preserve">
          <source>Target HTTP proxy: 80, 8080</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f45d21eef4aebbf59fe813d2f9c8bbc03819398" translate="yes" xml:space="preserve">
          <source>Target HTTPS proxy: 443</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281c017e184816d89e8dfc556bc21a5dd27aaf03" translate="yes" xml:space="preserve">
          <source>Target SSL proxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81a931a4c81b5ed1867c635fdd7425cea02be42" translate="yes" xml:space="preserve">
          <source>Target TCP proxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995, 1883, 5222</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992f479de348f533726f371175d3cc408531f1ff" translate="yes" xml:space="preserve">
          <source>Target VPN gateway: 500, 4500</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac7cd8bc33b479245d40c991dfd765490f79a67" translate="yes" xml:space="preserve">
          <source>Target pools can be imported using the &lt;code&gt;name&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fd103b5094e3f69e6f9c5405609e63fc225221" translate="yes" xml:space="preserve">
          <source>TargetHttpProxy can be imported using any of these accepted formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede6c4a34b311b3ca85a3bdb549464a23005ba03" translate="yes" xml:space="preserve">
          <source>TargetHttpsProxy can be imported using any of these accepted formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1573662762e010150b436c0d1f7a89629d8a82" translate="yes" xml:space="preserve">
          <source>TargetSslProxy can be imported using any of these accepted formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5042f619957224d4a35f19712b926fbaf2e4fc38" translate="yes" xml:space="preserve">
          <source>TargetTcpProxy can be imported using any of these accepted formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1774bd711d3e8954ea18f9d73c396e770f4d52b0" translate="yes" xml:space="preserve">
          <source>Targets (&lt;code&gt;target&lt;/code&gt;) supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8998dffdd2721ad978fc96fece6232e9de62eff" translate="yes" xml:space="preserve">
          <source>Targets specify what instance IDs or tags to apply the document to and has these keys:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04453c0b7bfaf887dead3ed915a3ed5a11a8463" translate="yes" xml:space="preserve">
          <source>TaskSpec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5df936be285e2a0a124f6897478d245c03e91f2" translate="yes" xml:space="preserve">
          <source>Team Collaborators can be imported using the combination of the team application name, a colon, and the collaborator's email address</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72c91ac203cb38f0bf32281e7b6285fb916d55f9" translate="yes" xml:space="preserve">
          <source>Team memberships can be imported using the &lt;code&gt;user_id&lt;/code&gt; and &lt;code&gt;team_id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82aec9aa9fe2f8e3cb6d8ed3860fbb9b0a0892e" translate="yes" xml:space="preserve">
          <source>Teams can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd898ff1180a7daead29a3058d30c031c9fceef" translate="yes" xml:space="preserve">
          <source>Teams that make extensive use of Terraform for infrastructure management often &lt;a href=&quot;https://www.terraform.io/guides/running-terraform-in-automation.html&quot;&gt;run Terraform in automation&lt;/a&gt; to ensure a consistent operating environment and to limit access to the various secrets and other sensitive information that Terraform configurations tend to require.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff0d98807d1a87debecf37124747f1499af617a" translate="yes" xml:space="preserve">
          <source>TelefonicaOpenCloud</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9e0af992e43686ee1a1cb9222c1c2de465b6e1e" translate="yes" xml:space="preserve">
          <source>TelefonicaOpenCloud Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af72e965069f3d478214ad1833aeaa5413d5a6ea" translate="yes" xml:space="preserve">
          <source>Telefonicaopencloud</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43dce467b7138fc7ee5893a73304f5e0e071328" translate="yes" xml:space="preserve">
          <source>Telemetry Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ec1ae061c27325c7ecb543adf91235e22cbc9ed" translate="yes" xml:space="preserve">
          <source>Template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d2460029b7c14f4a14a64fe0a42fc0db2e54ba0" translate="yes" xml:space="preserve">
          <source>Template Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efb3147068725b40c3436e7283942bba6c112bbf" translate="yes" xml:space="preserve">
          <source>Template Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da524e72e017935b54c1f5f4663021035a44dce9" translate="yes" xml:space="preserve">
          <source>Temporary modifications can be made to Terraform configurations without having to modify the configuration itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55a275aa676930d9258569485d5b38eb1196630" translate="yes" xml:space="preserve">
          <source>Terms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dfdb659451680f6e618f2c6b1109a58ac2f28af" translate="yes" xml:space="preserve">
          <source>Terraform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1caf50fb43399d40f5e30c39fb5a50b5afa045fb" translate="yes" xml:space="preserve">
          <source>Terraform &lt;code&gt;&amp;lt;= 0.9.6&lt;/code&gt; (prior to provider split) - Kubernetes &lt;code&gt;1.5.4&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf43d3881aa65ed87788865da8e836eb7a13acc" translate="yes" xml:space="preserve">
          <source>Terraform &lt;code&gt;0.9.7&lt;/code&gt; (prior to provider split) &lt;code&gt;&amp;lt; 1.1&lt;/code&gt; (provider version) - Kubernetes &lt;code&gt;1.6.1&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ede78d272f6b7e2767ba2df1b109a460dd26cbe0" translate="yes" xml:space="preserve">
          <source>Terraform Commands (CLI)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4921b6a11d6703a8fa91238aaad64c6894648adb" translate="yes" xml:space="preserve">
          <source>Terraform Community</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2be1a3d1626491eb6575b31c8823cbc0c0a157e" translate="yes" xml:space="preserve">
          <source>Terraform Configuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67774a702aac0db92e7094f6f04a89b6f36fa67f" translate="yes" xml:space="preserve">
          <source>Terraform Core</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7812a41bbe64738accbdd9707f5b84f3ccaf9347" translate="yes" xml:space="preserve">
          <source>Terraform Core is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Static_build#Static_building&quot;&gt;statically-compiled binary&lt;/a&gt; written in the &lt;a href=&quot;https://golang.org/&quot;&gt;Go programming language&lt;/a&gt;. The compiled binary is the command line tool (CLI) &lt;code&gt;terraform&lt;/code&gt;, the entrypoint for anyone using Terraform. The code is open source and hosted at github.com/hashicorp/terraform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c2ef3642f4fcafbf16e134bc346b2f8a1ef2f20" translate="yes" xml:space="preserve">
          <source>Terraform Developers Code of Conduct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae912dc3be6561d3633a31c9db2741be66183234" translate="yes" xml:space="preserve">
          <source>Terraform Documentation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6707fac7571fdd2539ba6cb37576f1a9801db6f5" translate="yes" xml:space="preserve">
          <source>Terraform Enterprise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950aefdbbc06dba064dd9a1cd8ac37cd79834f08" translate="yes" xml:space="preserve">
          <source>Terraform Enterprise can also be used to set ACLs on who can run Terraform, and a future update of Terraform Enterprise will allow parallel Terraform runs and automatically perform infrastructure locking so only one run is modifying the same infrastructure at a time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="228027ad62506b5c3b2f8ecf23227f5a8c6e41fb" translate="yes" xml:space="preserve">
          <source>Terraform Enterprise's Private Registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="849c5acbbeac314b0382da67cdd4a8c7136586a6" translate="yes" xml:space="preserve">
          <source>Terraform Enterprise's private module registry is documented here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8afa63cb7e7ba2f8787b9cb35636f5cb7f99b959" translate="yes" xml:space="preserve">
          <source>Terraform Internals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0120c0b43600d7b8624a6bd5b6eb0780973c9a9e" translate="yes" xml:space="preserve">
          <source>Terraform Plugin Best Practices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01bfea81f0d2792caafc950183cb6f30ebe39d85" translate="yes" xml:space="preserve">
          <source>Terraform Plugin Types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5408cbdd970a4b21e1d4fc8dde85fff00a2a85d2" translate="yes" xml:space="preserve">
          <source>Terraform Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f189725429e38c694798400e04646b3678d061" translate="yes" xml:space="preserve">
          <source>Terraform Plugins are expressed using schemas to define attributes and their behaviors, using a high level package exposed by Terraform Core named &lt;a href=&quot;https://github.com/hashicorp/terraform/tree/master/helper/schema&quot;&gt;&lt;code&gt;schema&lt;/code&gt;&lt;/a&gt;. Providers, Resources, and Provisioners all contains schemas, and Terraform Core uses them to produce plan and apply executions based on the behaviors described.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db395cfbce1c3dcbd4b4a8c389c002a4ee8290e3" translate="yes" xml:space="preserve">
          <source>Terraform Plugins are responsible for the domain specific implementation of their type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaa2b7202148f98e12b2f092e2c888bebcf00a48" translate="yes" xml:space="preserve">
          <source>Terraform Plugins are written in Go and are executable binaries invoked by Terraform Core over RPC. Each plugin exposes an implementation for a specific service, such as AWS, or provisioner, such as bash. All Providers and Provisioners used in Terraform configurations are plugins. They are executed as a separate process and communicate with the main Terraform binary over an RPC interface. Terraform has several Provisioners built-in, while Providers are discovered dynamically as needed (See &lt;strong&gt;Discovery&lt;/strong&gt; below). Terraform Core provides a high-level framework that abstracts away the details of plugin discovery and RPC communication so developers do not need to manage either.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18584eca620450a1575b9a7e6f311a0462add946" translate="yes" xml:space="preserve">
          <source>Terraform Provider</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6562b8e1fcef66298b72fd9c245da59ab74d870" translate="yes" xml:space="preserve">
          <source>Terraform Providers contain all the code needed to authenticate and connect to a service on behalf of the user. Each Resource implements &lt;code&gt;CREATE&lt;/code&gt;, &lt;code&gt;READ&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, and &lt;code&gt;DELETE&lt;/code&gt; (CRUD) methods to manage itself, while Terraform Core manages a &lt;a href=&quot;../internals/graph&quot;&gt;Resource Graph&lt;/a&gt; of all the resources declared in the configuration as well as their current state. Resources remain ignorant of the current state, only responding to method calls from Terraform Core and performing the matching CRUD action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4456ca8f9e50085a9704d315b116576725137ed7" translate="yes" xml:space="preserve">
          <source>Terraform Providers distributed by HashiCorp are part of the &lt;a href=&quot;https://github.com/terraform-providers&quot;&gt;&lt;code&gt;terraform-providers&lt;/code&gt;&lt;/a&gt; GitHub Organization. Each Provider is a separate GitHub project with their own issue trackers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01bcff4cd6c8b3339602d7ebea79e8a5788dcbef" translate="yes" xml:space="preserve">
          <source>Terraform Registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae4026d828eb1a16fc7d6702aef50f918e73dea8" translate="yes" xml:space="preserve">
          <source>Terraform Schemas</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a65bd7b66737a1b751bbbacaa06d66f829a7f0b8" translate="yes" xml:space="preserve">
          <source>Terraform Syntax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f62888201ed332140d02998a9f81e0e0f299941" translate="yes" xml:space="preserve">
          <source>Terraform Variables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5392bd9fca628ef2c1d4db294e8da7c18a7be4e3" translate="yes" xml:space="preserve">
          <source>Terraform acceptance tests are declared with the naming pattern &lt;code&gt;TestAccXxx&lt;/code&gt; with the standard Go test function signature of &lt;code&gt;func TestAccXxx(*testing.T)&lt;/code&gt;. Using the above test as an example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbdcb8bd64689585d08cfe23be33c5b9a28bb50c" translate="yes" xml:space="preserve">
          <source>Terraform acceptance tests use real Terraform configurations to exercise the code in real plan, apply, refresh, and destroy life cycles. When run from the root of a Terraform Provider codebase, Terraform&amp;rsquo;s testing framework compiles the current provider in-memory and executes the provided configuration in developer defined steps, creating infrastructure along the way. At the conclusion of all the steps, Terraform automatically destroys the infrastructure. It&amp;rsquo;s important to note that during development, it&amp;rsquo;s possible for Terraform to leave orphaned or &amp;ldquo;dangling&amp;rdquo; resources behind, depending on the correctness of the code in development. The testing framework provides means to validate all resources are destroyed, alerting developers if any fail to destroy. It is the developer's responsibility to clean up any dangling resources left over fromduring testing and development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c32ada417baca12e0f9ca68020fe6473b5c4f5b4" translate="yes" xml:space="preserve">
          <source>Terraform also includes in the package all of the modules that were installed during the most recent &lt;code&gt;terraform init&lt;/code&gt; or &lt;code&gt;terraform get&lt;/code&gt; command. Since the details of how modules are cached in the filesystem vary between Terraform versions, it is important to use the same version of Terraform both locally (when running &lt;code&gt;terraform init&lt;/code&gt; and then &lt;code&gt;terraform push&lt;/code&gt;) and in your remote Terraform Enterprise workspace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb43e13cc2b908c3a334f17b96dd08119519e6f" translate="yes" xml:space="preserve">
          <source>Terraform also stores other metadata for similar reasons, such as a pointer to the provider configuration that was most recently used with the resource in situations where multiple aliased providers are present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bab14e90832ea14f4ee7197d0717a89088265726" translate="yes" xml:space="preserve">
          <source>Terraform also supports modules in local directories, identified by a relative path starting with either &lt;code&gt;./&lt;/code&gt; or &lt;code&gt;../&lt;/code&gt;. Such local modules are useful to organize code in more complex repositories, and are described in more detail in &lt;a href=&quot;create&quot;&gt;&lt;em&gt;Creating Modules&lt;/em&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553a26f35991ad53fd2412e9fb4a40e669fc96f1" translate="yes" xml:space="preserve">
          <source>Terraform also supports reading JSON formatted configuration files. The above example converted to JSON:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f76b50692209e240d0a2a2dfe52fb003602df5e" translate="yes" xml:space="preserve">
          <source>Terraform and its diverse collection of plugins are a collaborative work between HashiCorp employees, independent cloud vendors, and a large open source community. HashiCorp and the Terraform team truly value every issue, pull request, and feature request received on any of its many GitHub repositories. The only prerequisite to contributing to Terraform is an interest to improve the project!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45c79b14caf62e8dfe44db5bdca98e451cacf3b2" translate="yes" xml:space="preserve">
          <source>Terraform automatically discovers the Providers when it parses configuration files. This only occurs when the &lt;code&gt;init&lt;/code&gt; command is executed. Terraform will search for matching Providers via a &lt;a href=&quot;how-terraform-works#discovery&quot;&gt;&lt;strong&gt;Discovery&lt;/strong&gt;&lt;/a&gt; process, including the current local directory. Run &lt;code&gt;terraform init&lt;/code&gt; to discover our newly compiled Provider:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42b02c7fd920a2cd1eb57dd528ce5c4004f803a" translate="yes" xml:space="preserve">
          <source>Terraform builds a &lt;a href=&quot;https://en.wikipedia.org/wiki/Dependency_graph&quot;&gt;dependency graph&lt;/a&gt; from the Terraform configurations, and walks this graph to generate plans, refresh state, and more. This page documents the details of what are contained in this graph, what types of nodes there are, and how the edges of the graph are determined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="587a6135d8a56a56727a1f3f1f4b398242462054" translate="yes" xml:space="preserve">
          <source>Terraform can also store modules in an S3 bucket. To access the bucket you must have appropriate AWS credentials in your configuration or available via shared credentials or environment variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c945dd7d2fa9b54569911311983829841a459b" translate="yes" xml:space="preserve">
          <source>Terraform can be extended to allow users to manage more infrastructure providers with &lt;a href=&quot;../providers/index&quot;&gt;Providers&lt;/a&gt; (containing &lt;a href=&quot;../configuration/resources&quot;&gt;Resources&lt;/a&gt; and/or &lt;a href=&quot;../configuration/data-sources&quot;&gt;Data Sources&lt;/a&gt;), more options to store Terraform state with &lt;a href=&quot;../backends&quot;&gt;Backends&lt;/a&gt; and more options to provision instance with &lt;a href=&quot;../provisioners/index&quot;&gt;Provisioners&lt;/a&gt;. &lt;strong&gt;Providers&lt;/strong&gt; and &lt;strong&gt;Provisioners&lt;/strong&gt; are collectively categorized as &quot;Plugins&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b78f3891aef068262afeae27112921cf989f428" translate="yes" xml:space="preserve">
          <source>Terraform can be used by the Vault adminstrators to configure Vault and populate it with secrets. In this case, the state and any plans associated with the configuration must be stored and communicated with care, since they will contain in cleartext any values that were written into Vault.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce11d189ce9d6ed55731d54df016f4a72d74d5c9" translate="yes" xml:space="preserve">
          <source>Terraform can use versioned modules from any service that implements &lt;a href=&quot;api&quot;&gt;the registry API&lt;/a&gt;. The Terraform open source project does not provide a server implementation, but we welcome community members to create their own private registries by following the published protocol.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb3691953ce69ec84354befade4246f1153d692f" translate="yes" xml:space="preserve">
          <source>Terraform configuration looks like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42fd179262db302ee6596b0ffebcc8ff89581ff6" translate="yes" xml:space="preserve">
          <source>Terraform considers an instance &quot;healthy&quot; when the ASG reports &lt;code&gt;HealthStatus:
&quot;Healthy&quot;&lt;/code&gt; and &lt;code&gt;LifecycleState: &quot;InService&quot;&lt;/code&gt;. See the &lt;a href=&quot;https://docs.aws.amazon.com/AutoScaling/latest/DeveloperGuide/AutoScalingGroupLifecycle.html&quot;&gt;AWS AutoScaling Docs&lt;/a&gt; for more information on an ASG's lifecycle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e3ee2398723e6adbc37a253291777df180ef8e4" translate="yes" xml:space="preserve">
          <source>Terraform detects the change and displays a diff with a &lt;code&gt;~&lt;/code&gt; prefix, noting the resource will be modified in place, rather than created new.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6baa9a4917e0471e25f39c13252a9a9be169570" translate="yes" xml:space="preserve">
          <source>Terraform determines the Providers needed by reading and interpolating configuration files. Terraform will dynamically discover and fetch the needed providers from &lt;a href=&quot;https://releases.hashicorp.com&quot;&gt;releases.hashicorp.com&lt;/a&gt;, or from specific &lt;a href=&quot;how-terraform-works#discovery&quot;&gt;locations on disk&lt;/a&gt;. At time of writing, the source code for all Providers distributed by HashiCorp for automatic discovery are hosted on in the &lt;a href=&quot;https://github.com/terraform-providers&quot;&gt;&lt;code&gt;terraform-providers&lt;/code&gt; GitHub Organization&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f169bd0aee4195aa16ffd08920ee0e91f588b06" translate="yes" xml:space="preserve">
          <source>Terraform does not know about the individual resources created by Azure using a deployment template and therefore cannot delete these resources during a destroy. Destroying a template deployment removes the associated deployment operations, but will not delete the Azure resources created by the deployment. In order to delete these resources, the containing resource group must also be destroyed. &lt;a href=&quot;https://docs.microsoft.com/en-us/rest/api/resources/deployments#Deployments_Delete&quot;&gt;More information&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911877971e51d0dc225da032b200ed26206facf2" translate="yes" xml:space="preserve">
          <source>Terraform ensures that dependencies are successfully created before a resource is created. During a destroy operation, Terraform ensures that this resource is destroyed before its dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7e670425fcf20f3115e42f21cb2b681e1cb16b" translate="yes" xml:space="preserve">
          <source>Terraform expects a data source to have &lt;em&gt;no observable side-effects&lt;/em&gt;, and will re-run the program each time the state is refreshed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="494fe7d23ff7163e143720521a4e9ae9bad30679" translate="yes" xml:space="preserve">
          <source>Terraform follows many of the Go programming language conventions with regards to testing, with both acceptance tests and unit tests being placed in a file that matches the file under test, with an added &lt;code&gt;_test.go&lt;/code&gt; suffix. Here&amp;rsquo;s an example file structure:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea886ff08cb59681b35aa00e3b6aa91d46361f45" translate="yes" xml:space="preserve">
          <source>Terraform has a &lt;a href=&quot;../commands/force-unlock&quot;&gt;force-unlock command&lt;/a&gt; to manually unlock the state if unlocking failed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c90cba560d5c0e5532dd317c33ea24bf1f30367" translate="yes" xml:space="preserve">
          <source>Terraform has a framework for writing acceptance tests which minimizes the amount of boilerplate code necessary to use common testing patterns. The entry point to the framework is the &lt;code&gt;resource.Test()&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd100e5b966dc59eb71c86de236d5114026f64b7" translate="yes" xml:space="preserve">
          <source>Terraform has detailed logs which can be enabled by setting the &lt;code&gt;TF_LOG&lt;/code&gt; environment variable to any value. This will cause detailed logs to appear on stderr.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a970636e7889e9b8f5d01eb98c4498a521c93d50" translate="yes" xml:space="preserve">
          <source>Terraform has several TestCheckFunc functions built in for developers to use for common checks, such as verifying the status and value of a specific attribute in the resulting state. Developers are encouraged to use as many as reasonable to verify the behavior of the plugin/resource, and should combine them with the above mentioned &lt;code&gt;ComposeTestCheckFunc&lt;/code&gt; or &lt;code&gt;ComposeAggregateTestCheckFunc&lt;/code&gt; functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f7d2925d5ad239ff0b6b3869de13a1d462ed08" translate="yes" xml:space="preserve">
          <source>Terraform implements much of its functionality in terms of remote services. While in many cases these are generic third-party services that are useful to many applications, some of these services are tailored specifically to Terraform's needs. We call these &lt;em&gt;Terraform-native services&lt;/em&gt;, and Terraform interacts with them via the remote service discovery protocol described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7da0543e71f219d21601460a9c3bae9f5ed7ce" translate="yes" xml:space="preserve">
          <source>Terraform includes an acceptance test harness that does most of the repetitive work involved in testing a resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00fec81527ea0d8d48da89e238954907878975c" translate="yes" xml:space="preserve">
          <source>Terraform is a declarative tool designed to be the source of truth for infrastructure. In order to safely and predictably change and iterate infrastructure, Terraform needs to be able to detect changes made outside of it's configuration and provide means of reconciliation. In &lt;a href=&quot;detecting-drift&quot;&gt;Detecting Drift&lt;/a&gt;, we cover some best practices to ensure Terraform's statefile is an accurate reflection of reality, in order to provide accurate plan and apply functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a296e3195c263301d9d35f2e3350e07283d12a57" translate="yes" xml:space="preserve">
          <source>Terraform is a mature project with a growing community. There are active, dedicated people willing to help you through various mediums.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de712bad3fb89dc1035709a3c1b5c27b88bc80aa" translate="yes" xml:space="preserve">
          <source>Terraform is a tool for building, changing, and versioning infrastructure safely and efficiently. Terraform is built on a plugin-based architecture, enabling developers to extend Terraform by writing new plugins or compiling modified versions of existing plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c72c990982cfad0b9ce0c77c27b695a7b97c5e1" translate="yes" xml:space="preserve">
          <source>Terraform is able to import existing infrastructure. This allows you take resources you've created by some other means and bring it under Terraform management.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f0cea741ff57d31a96a15baf6cf5d6c7e567610" translate="yes" xml:space="preserve">
          <source>Terraform is an administrative tool that manages your infrastructure, and so ideally the infrastructure that is used by Terraform should exist outside of the infrastructure that Terraform manages. This can be achieved by creating a separate &lt;em&gt;administrative&lt;/em&gt; AWS account which contains the user accounts used by human operators and any infrastructure and tools used to manage the the other accounts. Isolating shared administrative tools from your main environments has a number of advantages, such as avoiding accidentally damaging the administrative infrastructure while changing the target infrastructure, and reducing the risk that an attacker might abuse production infrastructure to gain access to the (usually more privileged) administrative infrastructure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be273481a81d57877974eacd4be1bd8f4088ecd" translate="yes" xml:space="preserve">
          <source>Terraform is an open source project with a large community, and while we maintain a wide range of plugins as part of the core distribution, we also want to make it easy for people anywhere to write and use their own plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b8f5dae9ce557ac3511e7d616627ec9605f249" translate="yes" xml:space="preserve">
          <source>Terraform is built on a plugin-based architecture. All providers and provisioners that are used in Terraform configurations are plugins, even the core types such as AWS and Heroku. Users of Terraform are able to write new plugins in order to support new functionality in Terraform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de0b194e841d5e4afc0dbf538abfdb49e3d6ee2" translate="yes" xml:space="preserve">
          <source>Terraform is controlled via a very easy to use command-line interface (CLI). Terraform is only a single command-line application: terraform. This application then takes a subcommand such as &quot;apply&quot; or &quot;plan&quot;. The complete list of subcommands is in the navigation to the left.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45de754754a6209be34d17f5fd31020fd186f058" translate="yes" xml:space="preserve">
          <source>Terraform is logically split into two main parts: &lt;strong&gt;Terraform Core&lt;/strong&gt; and &lt;strong&gt;Terraform Plugins&lt;/strong&gt;. Terraform Core uses remote procedure calls (RPC) to communicate with Terraform Plugins, and offers multiple ways to discover and load plugins to use. Terraform Plugins expose an implementation for a specific service, such as AWS, or provisioner, such as bash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6b9049eaccfd9c295894d5e6315bed6b19b7bd7" translate="yes" xml:space="preserve">
          <source>Terraform is logically split into two main parts: Terraform Core and Terraform Plugins. Each plugin exposes an implementation for a specific service, such as the AWS provider or bash provisioner. Terraform Plugins are written in Go and are executable binaries executed as a separate process and communicate with the main Terraform binary over an RPC interface. The network communication and RPC is handled automatically by higher-level Terraform libraries, so developers need only worry about the implementation of their specific Plugin behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1051e250b0737d027a9647365840a906677f392" translate="yes" xml:space="preserve">
          <source>Terraform is not a build tool, so the zip file must be prepared using a separate build process prior to deploying it with Terraform. For a real application we recommend automating your build via a CI system, whose job is to run any necessary build actions (library installation, compilation, etc), produce the deployment zip file as a build artifact, and then upload that artifact into an Amazon S3 bucket from which it will be read for deployment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="696d84731411080c01fa22e53e7b792050d85e94" translate="yes" xml:space="preserve">
          <source>Terraform is used to create, manage, and update infrastructure resources such as physical machines, VMs, network switches, containers, and more. Almost any infrastructure type can be represented as a resource in Terraform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95032d5f52f1ddb26de846b2074a77ebeaa5de0a" translate="yes" xml:space="preserve">
          <source>Terraform is written in the Go programming language. One of Go's interesting properties is that it produces statically-compiled binaries. This means that it does not need to find libraries on your computer to run, and in general only needs to be compatible with your operating system (to make system calls) and with your CPU architecture (so the assembly instructions match the CPU you're running on).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88da18eca924f9f7e3a4370c53c62713b0d17b53" translate="yes" xml:space="preserve">
          <source>Terraform itself does not encrypt the plan file. It is highly recommended to encrypt the plan file if you intend to transfer it or keep it at rest for an extended period of time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e6cedbdd3cee3c67abfc5c0cbbda57dab396e6" translate="yes" xml:space="preserve">
          <source>Terraform knows a lot about the infrastructure it manages. Most resources have attributes associated with them, and outputs are a way to easily extract and query that information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628f5f63d7fa7b59f359d6c100b708b209dde913" translate="yes" xml:space="preserve">
          <source>Terraform loads all configuration files within a directory and appends them together. Terraform also has a concept of &lt;em&gt;overrides&lt;/em&gt;, a way to create files that are loaded last and &lt;em&gt;merged&lt;/em&gt; into your configuration, rather than appended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="999b9ab5dff74e21e52cd4177ed856fd8ce7a371" translate="yes" xml:space="preserve">
          <source>Terraform meta information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7433b6211f41b3cf741728d9f7f347656936747f" translate="yes" xml:space="preserve">
          <source>Terraform must initialize any configured backend before use. This can be done by simply running &lt;code&gt;terraform init&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fc20f5b43a061ac1a8d1e4f07dcf9f209264b8d" translate="yes" xml:space="preserve">
          <source>Terraform must store state about your managed infrastructure and configuration. This state is used by Terraform to map real world resources to your configuration, keep track of metadata, and to improve performance for large infrastructures.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a83d9c19d3416acfbf27080f89125c52f12be8b" translate="yes" xml:space="preserve">
          <source>Terraform offers you an effective way to manage both compute for your Kubernetes cluster and Kubernetes resources. Check out the extensive documentation of the Kubernetes provider linked from the menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050dd329c7a6a895acaf69c47dbe8db06185b2aa" translate="yes" xml:space="preserve">
          <source>Terraform performs automatic conversion from string values to numeric and boolean values based on context, so in practice string variables may be used to set arguments of any primitive type. For boolean values in particular there are some caveats, described under &lt;a href=&quot;#booleans&quot;&gt;&lt;em&gt;Booleans&lt;/em&gt;&lt;/a&gt; below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3cf717042e2a79c6054fed3219988b835e69af" translate="yes" xml:space="preserve">
          <source>Terraform plugins should be executed by Terraform directly. To test this, create a &lt;code&gt;main.tf&lt;/code&gt; in the working directory (the same place where the plugin exists).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21cf0d0a89389effd655247f1e1af4fbfd79434" translate="yes" xml:space="preserve">
          <source>Terraform providers and provisioners are provided via plugins. Each plugin exposes an implementation for a specific service, such as AWS, or provisioner, such as bash. Plugins are executed as a separate process and communicate with the main Terraform binary over an RPC interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa1d877455095ff7d3d3f2102bdddbc760b38317" translate="yes" xml:space="preserve">
          <source>Terraform providers and provisioners are provided via plugins. Each plugin provides an implementation for a specific service, such as AWS, or provisioner, such as bash. Plugins are executed as a separate process and communicate with the main Terraform binary over an RPC interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c7aeffc31f65a6a546b862e09584ddba21f36a" translate="yes" xml:space="preserve">
          <source>Terraform providers manage resources. A provider is an abstraction of an upstream API, and a resource is a component of that provider. As an example, the AWS provider supports &lt;code&gt;aws_instance&lt;/code&gt; and &lt;code&gt;aws_elastic_ip&lt;/code&gt;. DNSimple supports &lt;code&gt;dnsimple_record&lt;/code&gt;. Fastly supports &lt;code&gt;fastly_service&lt;/code&gt;. Let's add a resource to our fictitious provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6397be25ea06901d045ecbee8a60793dcf2a7ca8" translate="yes" xml:space="preserve">
          <source>Terraform provides two mechanisms to help consistently manage ASG scale up time across dependent resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da23150e7d5ff6869cc00635875785799df3db3" translate="yes" xml:space="preserve">
          <source>Terraform relies heavily on acceptance tests to ensure we keep our promise of helping users safely and predictably create, change, and improve infrastructure. In our next section we detail how to create &amp;ldquo;Test Cases&amp;rdquo;, individual acceptance tests using Terraform&amp;rsquo;s testing framework, in order to build and verify real infrastructure. &lt;a href=&quot;testcase&quot;&gt;Proceed to Test Cases&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412cefb6e6b6ecc5aa537f71fb1eda20a7cccdd2" translate="yes" xml:space="preserve">
          <source>Terraform requires an environment variable &lt;code&gt;TF_ACC&lt;/code&gt; be set in order to run acceptance tests. This is by design, and intended to prevent developers from incurring unintended charges when running tests. The easiest way to run acceptance tests is to use the built in &lt;code&gt;make&lt;/code&gt; step &lt;code&gt;testacc&lt;/code&gt;, which explicitly sets the &lt;code&gt;TF_ACC&lt;/code&gt; value for you. Example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26072c5a037efc72e079bb6728328ad4db713e02" translate="yes" xml:space="preserve">
          <source>Terraform requires some sort of database to map Terraform config to the real world. When you have a resource &lt;code&gt;resource &quot;aws_instance&quot; &quot;foo&quot;&lt;/code&gt; in your configuration, Terraform uses this map to know that instance &lt;code&gt;i-abcd1234&lt;/code&gt; is represented by that resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e863dc439a9ef552bc94c295a873b414a51d10" translate="yes" xml:space="preserve">
          <source>Terraform resources that support beta features will always use the Beta APIs to provision the resource. Importing a resource that supports beta features will always import those features, even if the resource was created in a matter that was not explicitly beta.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eab81da094f705139b473473df376cf86e361955" translate="yes" xml:space="preserve">
          <source>Terraform schema is defined using &lt;a href=&quot;../schemas/schema-types#primitive-types&quot;&gt;primitive types&lt;/a&gt; and &lt;a href=&quot;../schemas/schema-types#aggregate-types&quot;&gt;aggregate types&lt;/a&gt;. The preceding examples featured primitive types which don't require error checking. Aggregate types on the other hand, &lt;code&gt;schema.TypeList&lt;/code&gt;, &lt;code&gt;schema.TypeSet&lt;/code&gt;, and &lt;code&gt;schema.TypeMap&lt;/code&gt;, are converted to key/value pairs when set into state. As a result the &lt;code&gt;Set&lt;/code&gt; method must be error checked, otherwise Terraform will think it's operation was successful despite having broken state. The same can be said for error checking API responses.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3feadd2d6b9c465ff2d34d46c3036b747b2e9d5c" translate="yes" xml:space="preserve">
          <source>Terraform ships with built-in functions. Functions are called with the syntax &lt;code&gt;name(arg, arg2, ...)&lt;/code&gt;. For example, to read a file: &lt;code&gt;${file(&quot;path.txt&quot;)}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfbdaa4f2ed724ab582906aeeef666d65b411b33" translate="yes" xml:space="preserve">
          <source>Terraform since version 0.11 will resolve any provided &lt;a href=&quot;../../modules/usage#module-versions&quot;&gt;module version constraints&lt;/a&gt; and using them is highly recommended to avoid pulling in breaking changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2181963a9553db2b56a828decc5f7ac21c3c9767" translate="yes" xml:space="preserve">
          <source>Terraform starts with a single workspace named &quot;default&quot;. This workspace is special both because it is the default and also because it cannot ever be deleted. If you've never explicitly used workspaces, then you've only ever worked on the &quot;default&quot; workspace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f49e9e8de1ed15790bda40cb1bc9fb93b9177cd3" translate="yes" xml:space="preserve">
          <source>Terraform state can contain sensitive data depending on the resources in-use and your definition of &quot;sensitive.&quot; The state contains resource IDs and all resource attributes. For resources such as databases, this may contain initial passwords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52df3725bedb3b3dff4f2b3787188e1acad7fa2c" translate="yes" xml:space="preserve">
          <source>Terraform supports a plugin model, and all providers are actually plugins. Plugins are distributed as Go binaries. Although technically possible to write a plugin in another language, almost all Terraform plugins are written in &lt;a href=&quot;https://golang.org&quot;&gt;Go&lt;/a&gt;. For more information on installing and configuring Go, please visit the &lt;a href=&quot;https://golang.org/doc/install&quot;&gt;Golang installation guide&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ae7368c2635f45fcbe698a21a1bd575aa85131" translate="yes" xml:space="preserve">
          <source>Terraform supports authenticating to Azure Stack through a Service Principal - &lt;a href=&quot;authenticating_via_service_principal&quot;&gt;this page explains how to Create a Service Principal&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baf8a9250e07b282c00be37b2bc873b7ca16601f" translate="yes" xml:space="preserve">
          <source>Terraform supports authenticating to Azure Stack through a Service Principal. At this time this is the only supported authentication method for Azure Stack.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3d7604224f554b25f1dfaa8299b097a4d27dab" translate="yes" xml:space="preserve">
          <source>Terraform supports authenticating to Azure through Managed Service Identity, Service Principal or the Azure CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284b35b36991a2ca504f9f933611ecf5c356752f" translate="yes" xml:space="preserve">
          <source>Terraform supports authenticating to Azure through a Service Principal or the Azure CLI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660e3311f44d415939db7bc43763fbf0a12fce12" translate="yes" xml:space="preserve">
          <source>Terraform supports the following sources:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f4729804f536d0aa34da1aca1f8fc05c276c43" translate="yes" xml:space="preserve">
          <source>Terraform then looks for the resulting module URL in the following order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62fcc62821f59ae1bdaca5011856cd5a5b9d30c2" translate="yes" xml:space="preserve">
          <source>Terraform then sends a &lt;code&gt;GET&lt;/code&gt; request to this discovery URL and expects a JSON response. If the response does not have status 200, does not have a media type of &lt;code&gt;application/json&lt;/code&gt; or, if the body cannot be parsed as a JSON object, then discovery fails and Terraform considers the host to not support &lt;em&gt;any&lt;/em&gt; Terraform-native services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7743e09987458e480a069c9ec71ee3a974e322" translate="yes" xml:space="preserve">
          <source>Terraform typically uses the configuration to determine dependency order. However, when you delete a resource from a Terraform configuration, Terraform must know how to delete that resource. Terraform can see that a mapping exists for a resource not in your configuration and plan to destroy. However, since the configuration no longer exists, the order cannot be determined from the configuration alone.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da7057fea44334ac9636b3a7064cd7d8cfff8ee" translate="yes" xml:space="preserve">
          <source>Terraform uses a number of defaults when connecting to a resource, but these can be overridden using a &lt;code&gt;connection&lt;/code&gt; block in either a &lt;code&gt;resource&lt;/code&gt; or &lt;code&gt;provisioner&lt;/code&gt;. Any &lt;code&gt;connection&lt;/code&gt; information provided in a &lt;code&gt;resource&lt;/code&gt; will apply to all the provisioners, but it can be scoped to a single provisioner as well. One use case is to have an initial provisioner connect as the &lt;code&gt;root&lt;/code&gt; user to setup user accounts, and have subsequent provisioners connect as a user with more limited permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808ab025feceddc530d7cc1900b3a06d05bcc3e5" translate="yes" xml:space="preserve">
          <source>Terraform uses declarative configuration files to define the infrastructure resources to provision. This configuration serves as the target source of truth for what exists on the backend API. Changes to Infrastructure outside of Terraform will be detected as deviation by Terraform and shown as a diff in future runs of &lt;code&gt;terraform plan&lt;/code&gt;. This type of change is referred to as &quot;drift&quot;, and its detection is an important responsibility of Terraform in order to inform users of changes in their infrastructure. Here are a few techniques for developers to ensure drift is detected</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36297b0ad4f95d074f4e13e23b93fac763c84e58" translate="yes" xml:space="preserve">
          <source>Terraform uses text files to describe infrastructure and to set variables. These text files are called Terraform &lt;em&gt;configurations&lt;/em&gt; and end in &lt;code&gt;.tf&lt;/code&gt;. This section talks about the format of these files as well as how they're loaded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fedb2208ca198a73661806707013eeb7a8387721" translate="yes" xml:space="preserve">
          <source>Terraform uses this local state to create plans and make changes to your infrastructure. Prior to any operation, Terraform does a &lt;a href=&quot;../commands/refresh&quot;&gt;refresh&lt;/a&gt; to update the state with the real infrastructure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6385d8783ef999bad447660e1eff49943e70c75d" translate="yes" xml:space="preserve">
          <source>Terraform uses this local state to create plans and make changes to your infrastructure. Prior to any operation, Terraform does a &lt;a href=&quot;commands/refresh&quot;&gt;refresh&lt;/a&gt; to update the state with the real infrastructure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed583f53351de92ec4471bbcd4a06f0a601d9c8" translate="yes" xml:space="preserve">
          <source>Terraform versions after 0.10.6 but before 0.11 have partial support for the registry protocol, but always download the latest version instead of honoring version constraints.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf070b976616c6363714a8a1ad4e6e55b2705205" translate="yes" xml:space="preserve">
          <source>Terraform waits during various parts of a virtual machine deployment to ensure that it is in a correct expected state before proceeding. These happen when a VM is created, or also when it's updated, depending on the waiter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e79762971dc7897b1334a8b8e1c9d7ac63b967c" translate="yes" xml:space="preserve">
          <source>Terraform will ask for confirmation when you run &lt;code&gt;terraform apply&lt;/code&gt;. Enter &lt;code&gt;yes&lt;/code&gt; to create your example server and commit it to state:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f3febfdeb6428285dd462f27480ef540a7b5859" translate="yes" xml:space="preserve">
          <source>Terraform will attempt to load configuration files that configure the provider being used for import. If no configuration files are present or no configuration for that specific provider is present, Terraform will prompt you for access credentials. You may also specify environmental variables to configure the provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53db5b297e07e80850aa568843a047adbebe20a8" translate="yes" xml:space="preserve">
          <source>Terraform will automatically detect any changes in your configuration and request a &lt;a href=&quot;init&quot;&gt;reinitialization&lt;/a&gt;. As part of the reinitialization process, Terraform will ask if you'd like to migrate your existing state to the new configuration. This allows you to easily switch from one backend to another.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a37c431c99bce9d3e7da1fefc89083793337fe93" translate="yes" xml:space="preserve">
          <source>Terraform will automatically recognize GitHub URLs and turn them into a link to the specific Git repository. The syntax is simple:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70f17a651666d83e7a6f70909f04af3d60e024c" translate="yes" xml:space="preserve">
          <source>Terraform will automatically recognize public Bitbucket URLs and turn them into a link to the specific Git or Mercurial repository, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90640ca6021e50e612e33d6753cf2747456f6167" translate="yes" xml:space="preserve">
          <source>Terraform will automatically unarchive files based on the extension of the file being requested (over any protocol). It supports the following archive formats:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71210c7f6175489a93514281a104c328ec8b1698" translate="yes" xml:space="preserve">
          <source>Terraform will cache the module locally by default &lt;code&gt;terraform get&lt;/code&gt; is run, so successive updates to master or a specified branch will not be factored into future plans. Run &lt;code&gt;terraform get -update=true&lt;/code&gt; to get the latest version of the branch. This is handy in development, but potentially bothersome in production if you don't have control of the repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d55deaf4158b9d1d7be36a83ce3c6bea6e32ba" translate="yes" xml:space="preserve">
          <source>Terraform will look for a &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; tag with the name of &lt;code&gt;terraform-get&lt;/code&gt;, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62298e30d80068073f41e196162d80858ea57a65" translate="yes" xml:space="preserve">
          <source>Terraform will look to see if the header &lt;code&gt;X-Terraform-Get&lt;/code&gt; is present. The header should contain the source URL of the actual module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14b996dea614350bdba31354787c5d08faea699a" translate="yes" xml:space="preserve">
          <source>Terraform will need the following AWS IAM permissions on the target backend bucket:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e76d313337874a1927f523fff9815cce68b95a" translate="yes" xml:space="preserve">
          <source>Terraform will perform a number of safety checks to prevent you from making changes that appear to be unsafe:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80d9a739341b9e02936f4010f09f9e946a9f9ef5" translate="yes" xml:space="preserve">
          <source>Terraform will wait for healthy instances for up to &lt;code&gt;wait_for_capacity_timeout&lt;/code&gt;. If ASG creation is taking more than a few minutes, it's worth investigating for scaling activity errors, which can be caused by problems with the selected Launch Configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7653bc6868a5c14821df94cc65a8d2eeee611a15" translate="yes" xml:space="preserve">
          <source>Terraform&amp;rsquo;s test framework facilitates two distinct modes of acceptance tests, &lt;em&gt;Lifecycle&lt;/em&gt; and &lt;em&gt;Import&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607adbba4ac7656337486551b5f3416c3eb1ccd5" translate="yes" xml:space="preserve">
          <source>Terraform-native services are provided, from a user's perspective, at a user-facing &quot;friendly hostname&quot; which serves as the key for configuration and for any authentication credentials required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d142f2ca7d9d44c2652e2cda1d8be92ed41c51a0" translate="yes" xml:space="preserve">
          <source>Test Modes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0aea331ff22ddf611bb144442b32469de7af26a" translate="yes" xml:space="preserve">
          <source>Test files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e6983846cbc904eea6fcca1954f4e6e12d99b5" translate="yes" xml:space="preserve">
          <source>TestCase Reference API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64a287369431d50061556fc33b3bc138c15c2d3f" translate="yes" xml:space="preserve">
          <source>TestCheckModuleNoResourceAttr(mp []string, name string, key string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55099a8d029304495601ca78208e78b138538bb" translate="yes" xml:space="preserve">
          <source>TestCheckModuleResourceAttr(mp []string, name string, key string, value string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="949c9dd98d0163c8252fef30933c05639ffb7554" translate="yes" xml:space="preserve">
          <source>TestCheckModuleResourceAttrPair(mpFirst []string, nameFirst string, keyFirst string, mpSecond []string, nameSecond string, keySecond string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f0294f7e17f016653ee771974e2e3c4de688fb" translate="yes" xml:space="preserve">
          <source>TestCheckModuleResourceAttrPtr(mp []string, name string, key string, value *string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf88ea00c955f9bb0baa9f155b873a43b1a0e9d" translate="yes" xml:space="preserve">
          <source>TestCheckModuleResourceAttrSet(mp []string, name string, key string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecf829b7640f3ec629fdaebad065c83d892e957" translate="yes" xml:space="preserve">
          <source>TestCheckNoResourceAttr(name, key string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45898ec606c481a092ac78062bd77002db996ce1" translate="yes" xml:space="preserve">
          <source>TestCheckOutput(name, value string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995729281aca33652ecb7ac2fce232c927fad21a" translate="yes" xml:space="preserve">
          <source>TestCheckResourceAttr(name, key, value string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29a0a3ae4e4d00c5b29f48b9bfa35291dd8cf4fe" translate="yes" xml:space="preserve">
          <source>TestCheckResourceAttrPair(nameFirst, keyFirst, nameSecond, keySecond string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="371c3603d610810df7cfc20303952749dde9099c" translate="yes" xml:space="preserve">
          <source>TestCheckResourceAttrPtr(name string, key string, value *string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8933f815d5e074e345225f94d2820094101c4c24" translate="yes" xml:space="preserve">
          <source>TestCheckResourceAttrSet(name, key string)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0820b32b206b7352858e8903a838ed14319acdfd" translate="yes" xml:space="preserve">
          <source>Testing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3492f9ef61deac26df2ef91ca92c420cd7655033" translate="yes" xml:space="preserve">
          <source>Testing Terraform Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b12a128a95b98168d633b33f88e85fa298f943f" translate="yes" xml:space="preserve">
          <source>Testing and Development</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d6f6bfff7f9adfe0c4b2dace5e7faa0e12de6c" translate="yes" xml:space="preserve">
          <source>Testing plugin code in small, isolated units is distinct from Acceptance Tests, and does not require network connections. Unit tests are commonly used for testing helper methods that expand or flatten API response data into data structures for storage into state by Terraform. This section covers the specifics of writing Unit Tests for Terraform Plugin code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a307b6fafca93c8c45045f2397cb2085a61b5ef3" translate="yes" xml:space="preserve">
          <source>Testing plugin code in small, isolated units is distinct from Acceptance Tests, and does not require network connections. Unit tests are commonly used for testing helper methods that expand or flatten API responses into data structures for storage into state by Terraform. This section covers the specifics of writing Unit Tests for Terraform Plugin code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38d4e1b388c4c9a2760e19d334c82a73510265e8" translate="yes" xml:space="preserve">
          <source>Testing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df5db1d1df2c35b2ab73fb9d4500822af7916fb" translate="yes" xml:space="preserve">
          <source>Tests are divided into &lt;code&gt;TestStep&lt;/code&gt;s. Each &lt;code&gt;TestStep&lt;/code&gt; proceeds by applying some Terraform configuration using the provider under test, and then verifying that results are as expected by making assertions using the provider API. It is common for a single test function to exercise both the creation of and updates to a single resource. Most tests follow a similar structure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2002c0b4836de4bcf09622f202b384f2ab909a85" translate="yes" xml:space="preserve">
          <source>Tests can then be run by specifying the target provider and a regular expression defining the tests to run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32c5c3b68e1326add8eb345bffbb89bbddfe1850" translate="yes" xml:space="preserve">
          <source>Thank you for contributing! Here you'll find information on what to include in your Pull Request to ensure it is accepted quickly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf88109d273bccd435243b788e5b2019d81a8ca" translate="yes" xml:space="preserve">
          <source>The &quot;AMI copy&quot; resource allows duplication of an Amazon Machine Image (AMI), including cross-region copies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1dde29ede113c8fb0b919dbcc96d17208bc348" translate="yes" xml:space="preserve">
          <source>The &quot;AMI from instance&quot; resource allows the creation of an Amazon Machine Image (AMI) modelled after an existing EBS-backed EC2 instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab686260e08f7a16208e2c335617109c16571b0" translate="yes" xml:space="preserve">
          <source>The &quot;REST API&quot; is the container for all of the other API Gateway objects we will create.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c6f9d5f59eb594245981570f06b2203e4dcb9dc" translate="yes" xml:space="preserve">
          <source>The &quot;current workspace&quot; name is stored only locally in the ignored &lt;code&gt;.terraform&lt;/code&gt; directory. This allows multiple team members to work on different workspaces concurrently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0618f2d6f5ba31cb3c813c8772f358356bc09c2d" translate="yes" xml:space="preserve">
          <source>The &quot;random&quot; provider allows the use of randomness within Terraform configurations. This is a &lt;em&gt;logical provider&lt;/em&gt;, which means that it works entirely within Terraform's logic, and doesn't interact with any other services.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4dc5f4e23805693843966d57f7216804eaa9e8" translate="yes" xml:space="preserve">
          <source>The -type flag can be used to control the type of graph shown. Terraform creates different graphs for different operations. See the options below for the list of types supported. The default type is &quot;plan&quot; if a configuration is given, and &quot;apply&quot; if a plan file is passed as an argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd784eb67faf5b9f4f2a3c413de7724f5b20abb" translate="yes" xml:space="preserve">
          <source>The 1&amp;amp;1 provider gives the ability to deploy and configure resources using the 1&amp;amp;1 Cloud Server API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="320ee3982c82c86007b142b88b606490ba0529db" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#ha_admission_control_policy&quot;&gt;&lt;code&gt;ha_admission_control_policy&lt;/code&gt;&lt;/a&gt; parameter controls the specific mode that Admission Control uses. What settings are available depends on the admission control mode:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5bef5d7206ef9fe312f77b9140c5dcae305e2df" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#imported&quot;&gt;&lt;code&gt;imported&lt;/code&gt;&lt;/a&gt; flag will transition from &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2103b3fe347e501cb66ffed5eb231534cfee546" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#scsi_controller_count&quot;&gt;&lt;code&gt;scsi_controller_count&lt;/code&gt;&lt;/a&gt; for the resource is set to the number of contiguous SCSI controllers found, starting with the SCSI controller at bus number 0. If no SCSI controllers are found, the VM is not eligible for import. To ensure maximum compatibility, make sure your virtual machine has the exact number of SCSI controllers it needs, and set &lt;a href=&quot;#scsi_controller_count&quot;&gt;&lt;code&gt;scsi_controller_count&lt;/code&gt;&lt;/a&gt; accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae5a6075f766c28154ab83786628c59c3372cc4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;#scsi_controller_count&quot;&gt;&lt;code&gt;scsi_controller_count&lt;/code&gt;&lt;/a&gt; setting should be configured as necessary to cover all of the disks on the template. For best results, only configure this setting for the amount of controllers you will need to cover your disk quantity and bandwidth needs, and configure your template accordingly. For most workloads, this setting should be kept at its default of &lt;code&gt;1&lt;/code&gt;, and all disks in the template should reside on the single, primary controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be79fc8718681614e9f99385fbb0943ea1c65889" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../commands/get&quot;&gt;get command&lt;/a&gt; will automatically get all nested modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4770765beb224b15400c3e5ccbbab24b704ac4e9" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;../commands/taint&quot;&gt;taint command&lt;/a&gt; can be used to &lt;em&gt;taint&lt;/em&gt; specific resources within a module:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="244e900b093040b15e98f47cb659bb06528fc720" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://cloud.google.com/docs/authentication/production&quot;&gt;&lt;code&gt;GOOGLE_APPLICATION_CREDENTIALS&lt;/code&gt;&lt;/a&gt; environment variable can also contain the path of a file to obtain credentials from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab2494f019006a39e4a78f2b09b746d356f31fa1" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/placement-groups.html&quot;&gt;Placement Group&lt;/a&gt; of the instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a5a97c0130fab1081fce01eb08c096102587a72" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use_switch-role-ec2_instance-profiles.html&quot;&gt;IAM Instance Profile&lt;/a&gt; to attach.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ec1c2736157e7bf2ec544721e2eae1d422ccae" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://godoc.org/github.com/hashicorp/terraform/helper/schema&quot;&gt;&lt;code&gt;helper/schema&lt;/code&gt;&lt;/a&gt; library is part of &lt;a href=&quot;how-terraform-works#terraform-core&quot;&gt;Terraform Core&lt;/a&gt;. It abstracts many of the complexities and ensures consistency between providers. The example above defines an empty provider (there are no &lt;em&gt;resources&lt;/em&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8fb9076fd39f930039bf2c7121d025b55213d44" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/&quot;&gt;Kubernetes UI&lt;/a&gt; provides another way to check both the pod and the service there once they're scheduled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e72bf2ebea3f98734cfa9f144783695dcd6558c" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://registry.terraform.io&quot;&gt;Terraform Registry&lt;/a&gt; is a repository of modules written by the Terraform community. The registry can help you get started with Terraform more quickly, see examples of how Terraform is written, and find pre-made modules for infrastructure components you require.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b829e8a7b97a3f333cf379d70fa02eed822623" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://registry.terraform.io&quot;&gt;Terraform Registry&lt;/a&gt; is an index of modules written by the Terraform community. The Terraform Registry is the easiest way to get started with Terraform and to find modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f7781bd90d68914af85bf2d30bb6e6776f53b8" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://registry.terraform.io&quot;&gt;Terraform Registry&lt;/a&gt; makes it simple to find and use modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ebcc583a48b2c006b67ecb1a2667a65ac454bf" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.datadoghq.com&quot;&gt;Datadog&lt;/a&gt; provider is used to interact with the resources supported by Datadog. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e62e49fbccaa7ac1eacced23706d4822c34e3d48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;&amp;lt;endpoint&amp;gt;_success_feedback_role_arn&lt;/code&gt; and &lt;code&gt;&amp;lt;endpoint&amp;gt;_failure_feedback_role_arn&lt;/code&gt; arguments are used to give Amazon SNS write access to use CloudWatch Logs on your behalf. The &lt;code&gt;&amp;lt;endpoint&amp;gt;_success_feedback_sample_rate&lt;/code&gt; argument is for specifying the sample rate percentage (0-100) of successfully delivered messages. After you configure the &lt;code&gt;&amp;lt;endpoint&amp;gt;_failure_feedback_role_arn&lt;/code&gt; argument, then all failed message deliveries generate CloudWatch Logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1530b6cdea2f1994939ad6077e52d4d4599f3ca1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;*schema.Provider&lt;/code&gt; type describes the provider's properties including:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c02f7c82e6533462c09fdb7ed08d81a1c0870a78" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-backend-config=...&lt;/code&gt; option can be used for &lt;a href=&quot;../backends/config#partial-configuration&quot;&gt;partial backend configuration&lt;/a&gt;, in situations where the backend settings are dynamic or sensitive and so cannot be statically specified in the configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8d0eb524dc3152c6e50d095fe6cfad040a79957" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-target&lt;/code&gt; flag, instead of affecting &quot;dependencies&quot; will instead also destroy any resources that &lt;em&gt;depend on&lt;/em&gt; the target(s) specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d880dc79679810c742c6628ee455f6298b3ac8d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-target&lt;/code&gt; option can be used to focus Terraform's attention on only a subset of resources. &lt;a href=&quot;../internals/resource-addressing&quot;&gt;Resource Address&lt;/a&gt; syntax is used to specify the constraint. The resource address is interpreted as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2259857687e85b451e47e1f64e599538d757971a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;-var-file&lt;/code&gt; flag can be used multiple times per command invocation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5efde325af4e6828ebb5562c568ecfe760a737b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;AWS_PROXY&lt;/code&gt; integration type causes API gateway to call into the API of another AWS service. In this case, it will call the AWS Lambda API to create an &quot;invocation&quot; of the Lambda function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6ca0dd9c0859495c97c7de2c7122c937e76011" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CORS&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091973f61c94066ba84c0e5672fb7310137d4c85" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Check&lt;/code&gt; field of &lt;code&gt;TestStep&lt;/code&gt; accepts any function of type &lt;a href=&quot;https://godoc.org/github.com/hashicorp/terraform/helper/resource#TestCheckFunc&quot;&gt;TestCheckFunc&lt;/a&gt;. Developers are free to write their own &lt;code&gt;check&lt;/code&gt; functions to create customized validation functions for their plugin. Any function that matches the &lt;code&gt;TestCheckFunc&lt;/code&gt; function signature of &lt;code&gt;func(*terraform.State) error&lt;/code&gt; can be used individually, or with other &lt;code&gt;TestCheckFunc&lt;/code&gt; functions with one of the above Aggregate functions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="211384ca2d4d7038f4b84adea088ebcb0a46681e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Destroy&lt;/code&gt; callback is exactly what it sounds like - it is called to destroy the resource. This operation should never update any state on the resource. It is not necessary to call &lt;code&gt;d.SetId(&quot;&quot;)&lt;/code&gt;, since any non-error return value assumes the resource was deleted successfully.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="416b8f6e8df1f4174f6431aba6da3a16583e077a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Header&lt;/code&gt; block supports adding, removing, or modifying Request and Response headers. See Fastly's documentation on &lt;a href=&quot;https://docs.fastly.com/guides/basic-configuration/adding-or-modifying-headers-on-http-requests-and-responses#field-description-table&quot;&gt;Adding or modifying headers on HTTP requests and responses&lt;/a&gt; for more detailed information on any of the properties below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f6e02c3b8931efff4e3e8a44578348a91aca98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;NAME&lt;/code&gt; should either begin with &lt;code&gt;provider-&lt;/code&gt; or &lt;code&gt;provisioner-&lt;/code&gt;, depending on what kind of plugin it will be. The repository name will, by default, be the name of the binary produced by &lt;code&gt;go install&lt;/code&gt; for your plugin package.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7541e11f0fe5da9563cb6eb4a1181c7eeaee9ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Read&lt;/code&gt; callback is used to sync the local state with the actual state (upstream). This is called at various points by Terraform and should be a read-only operation. This callback should never modify the real resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d45e6651e64f2581fb21083393a03b77138882f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;access_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803e859de430892d3d6bfc9e5c90a5159eeb4a9c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;action&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4820a0a0fa27c7b7f14d9e6b59dcc730587964d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addons_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482f3f02c80e60e2812e0d5f5888e7d0139a226f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;alias_ip_range&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7425ba76851638205f5f36a1a0e8d55e1f075ba1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;alicloud_db_instances&lt;/code&gt; data source provides a collection of RDS instances available in Alicloud account. Filters support regular expression for the instance name, searches by tags, and other filters which are listed below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe1b1f94f516e8cda15632d1871fbea907a2bcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;alicloud_security_group_rules&lt;/code&gt; data source provides a collection of security permissions of a specific security group. Each collection item represents a single &lt;code&gt;ingress&lt;/code&gt; or &lt;code&gt;egress&lt;/code&gt; permission rule. The id of the security group can be provided via variable or filtered by another data source &lt;code&gt;alicloud_security_groups&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae94f05176635474952b51f819f276e9eb22a1a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;allocation_pools&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d33df762fad6594de9ab01de8f4978940c74d91" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;allow&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1abd7c12a47dde3fb77916a4602e1cd6777db48" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;allow&lt;/code&gt; or &lt;code&gt;deny&lt;/code&gt; blocks support:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="190e5d1b7cc3cd386cd1d8f2aab4a5633e525dd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;allowed_address_pairs&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb077cb95987bc9970f612071031ddeb7648c9ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;allowed_uses&lt;/code&gt; list accepts the following keywords, combining the set of flags defined by both &lt;a href=&quot;https://tools.ietf.org/html/rfc5280#section-4.2.1.3&quot;&gt;Key Usage&lt;/a&gt; and &lt;a href=&quot;https://tools.ietf.org/html/rfc5280#section-4.2.1.12&quot;&gt;Extended Key Usage&lt;/a&gt; in &lt;a href=&quot;https://tools.ietf.org/html/rfc5280&quot;&gt;RFC5280&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7157e9f1ad4fccb6cffb239162d2d226b3b2714" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;app_engine&lt;/code&gt; block has the following configuration options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb9e686c000b658d5f36ffbf2e459abb424520c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;append&lt;/code&gt; and &lt;code&gt;replace&lt;/code&gt; blocks supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0674cd32e56ca764f0b6f5eaa9585176acd977" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;apply_server_side_encryption_by_default&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c232ca3da036ce23ef81b6d85a3a9ac5338875a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;approval_rule&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49032c5c251e5d032a302048d84f7b6610587f79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attached_disk&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca31fd0a5f903f0d9e36446c60a47e8a51034ca4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;attachment&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d92e777af5dad4a54c6459148b6d5201fa64469a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;audio&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7eabc84e1ab305b8fcfe447c0d9980cab9812f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;audio_codec_options&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abc7dbea1719d30146264fae96292b4f555eecc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;auth_plugin&lt;/code&gt; value supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7feefae5e5e3d47173c2b4bb0df0ee79e78e02b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;authentication_certificate&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a861dd1be34f6a79c000eaa12fbfc17edc484b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoscaling&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84f07c8578f62e312c67dea8313e39658772811" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;autoscaling_policy&lt;/code&gt; block contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13746c57113fc39c164c262af5c78c64f828ed50" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aws_default_network_acl&lt;/code&gt; behaves differently from normal resources, in that Terraform does not &lt;em&gt;create&lt;/em&gt; this resource, but instead attempts to &quot;adopt&quot; it into management. We can do this because each VPC created has a Default Network ACL that cannot be destroyed, and is created with a known set of default rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62cf0a4e58477b719940e34459860f3f5807150" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aws_default_route_table&lt;/code&gt; behaves differently from normal resources, in that Terraform does not &lt;em&gt;create&lt;/em&gt; this resource, but instead attempts to &quot;adopt&quot; it into management. We can do this because each VPC created has a Default Route Table that cannot be destroyed, and is created with a single route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6538e45752bc77fc923c50f63132c41b7321cd19" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aws_default_security_group&lt;/code&gt; behaves differently from normal resources, in that Terraform does not &lt;em&gt;create&lt;/em&gt; this resource, but instead &quot;adopts&quot; it into management. We can do this because these default security groups cannot be destroyed, and are created with a known set of default ingress/egress rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bd65d773c05a2a0b206729317a74e6097be71f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aws_default_subnet&lt;/code&gt; behaves differently from normal resources, in that Terraform does not &lt;em&gt;create&lt;/em&gt; this resource, but instead &quot;adopts&quot; it into management.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32847e567cb3a20d249c8580978625a01f48da7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aws_default_subnet&lt;/code&gt; resource allows you to manage a region's default VPC subnet, but Terraform cannot destroy it. Removing this resource from your configuration will remove it from your statefile and management, but will not destroy the subnet. You can resume managing the subnet via the AWS Console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="195aef8aedb4eb575d4ee27213127a8ba9b85095" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aws_default_vpc&lt;/code&gt; behaves differently from normal resources, in that Terraform does not &lt;em&gt;create&lt;/em&gt; this resource, but instead &quot;adopts&quot; it into management.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37409b94f71b6f35a0ba866d59bd3a1d247677d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aws_default_vpc&lt;/code&gt; resource allows you to manage a region's default VPC, but Terraform cannot destroy it. Removing this resource from your configuration will remove it from your statefile and management, but will not destroy the VPC. You can resume managing the VPC via the AWS Console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa7efe24a8f7f9339de798c1716fa53041eee4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aws_default_vpc_dhcp_options&lt;/code&gt; behaves differently from normal resources, in that Terraform does not &lt;em&gt;create&lt;/em&gt; this resource, but instead &quot;adopts&quot; it into management.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafd7527699773b3aef761e6e0c68b08f4a7d41a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aws_default_vpc_dhcp_options&lt;/code&gt; resource allows you to manage a region's default DHCP Options Set, but Terraform cannot destroy it. Removing this resource from your configuration will remove it from your statefile and management, but will not destroy the DHCP Options Set. You can resume managing the DHCP Options Set via the AWS Console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0472520c60ac7cbe357c24b35f59dd559eb7e1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;aws_emr_cluster&lt;/code&gt; resource typically requires two IAM roles, one for the EMR Cluster to use as a service, and another to place on your Cluster Instances to interact with AWS from those instances. The suggested role policy template for the EMR service is &lt;code&gt;AmazonElasticMapReduceRole&lt;/code&gt;, and &lt;code&gt;AmazonElasticMapReduceforEC2Role&lt;/code&gt; for the EC2 profile. See the &lt;a href=&quot;https://docs.aws.amazon.com/ElasticMapReduce/latest/ManagementGuide/emr-gs-launch-sample-cluster.html&quot;&gt;Getting Started&lt;/a&gt; guide for more information on these IAM roles. There is also a fully-bootable example Terraform configuration at the bottom of this page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9433f98828d4ad7215f4ff89c64962e4f7345329" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backend&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f548cb48213f77469c0acd151bddd7e2edbc9972" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backend_address_pool&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36bec7df7bf7d35eafc2661de15e127c0090486e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backend_http_settings&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6316e268215d00f73d42d95fca07658f7e8a0381" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;backupstrategy&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251384b96088723d81491819cb56a2475ff6b719" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bandwidth&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80ba72c3dc3c8d3e6b54bcadca3b4f73b12e4c41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bgp&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4077c70be0160b1aca078f505bf98447da21093" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bgp_settings&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e136c54107f97b99b7c2f12fd4c69f8c1c1f2fe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;block_device&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2707d954d0e58009d2d3cb5070ae45bdebdcefdf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;boolean_policy&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0617ed661329ac307c1cee6057fdb3031dc50738" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;boot_disk&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee1598e02f57ce5d28e0565c22e5e4e96e10264" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;bucket&lt;/code&gt; configuration supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a00ba396ec9dedd6f8bb04dfc116f0ed0d2fae45" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;build&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd14bf94c059af380143fb0e129d5363081e39c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cache_key_policy&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a06b4a9c45e36ffe77d0a811ee81b1a0cb8a17f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cache_setting&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62375d21628ee0827df309e145037c149ce3eef3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cdn_policy&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9ac3d30c06726b407c30cf539fcc971cd1cdec5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;chef&lt;/code&gt; provisioner has some prerequisites for specific connection types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb35ef9b9590bb7a316c142e34ad98db2bcf421" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;chef&lt;/code&gt; provisioner installs, configures and runs the Chef Client on a remote resource. The &lt;code&gt;chef&lt;/code&gt; provisioner supports both &lt;code&gt;ssh&lt;/code&gt; and &lt;code&gt;winrm&lt;/code&gt; type &lt;a href=&quot;connection&quot;&gt;connections&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d725c9bcdaea22b40fdf3326a08e1b72da82688c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;circonus_account&lt;/code&gt; data source can be used for pulling various attributes about a specific Circonus Account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8abd76236dbbcd979270ad2c64be917670b007c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;circonus_check&lt;/code&gt; resource creates and manages a &lt;a href=&quot;https://login.circonus.com/resources/api/calls/check_bundle&quot;&gt;Circonus Check&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07624acd81bd94ce47e2a59a8a45d3dbc4ffe4bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;circonus_contact_group&lt;/code&gt; resource creates and manages a &lt;a href=&quot;https://login.circonus.com/user/docs/Alerting/ContactGroups&quot;&gt;Circonus Contact Group&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f639287baacef912bd6971c610177c65db1b4f43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;circonus_graph&lt;/code&gt; resource creates and manages a &lt;a href=&quot;https://login.circonus.com/user/docs/Visualization/Graph/Create&quot;&gt;Circonus Graph&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93b3609b626aed1a73995ad78f2598b55c44b7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;circonus_metric&lt;/code&gt; resource creates and manages a single &lt;a href=&quot;https://login.circonus.com/resources/api/calls/metric&quot;&gt;metric resource&lt;/a&gt; that will be instantiated only once a referencing &lt;code&gt;circonus_check&lt;/code&gt; has been created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b54440b5244a2fbd35bb4bda8aad9a0cbe6e055" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;circonus_metric_cluster&lt;/code&gt; resource creates and manages a &lt;a href=&quot;https://login.circonus.com/user/docs/Data/View/MetricClusters&quot;&gt;Circonus Metric Cluster&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd82c0e464ab2c22f0901b589400113af636b24c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;circonus_rule_set&lt;/code&gt; resource creates and manages a &lt;a href=&quot;https://login.circonus.com/resources/api/calls/rule_set&quot;&gt;Circonus Rule Set&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ed1e215a8a709a9eccf13b2166b3f7eaa06579" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;client_auth&lt;/code&gt; configuration block accepts the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63ea6a07550c5d34b8610fbe48fa8d1448d664ee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;clone&lt;/code&gt; sub-resource can be used to create a new virtual machine from an existing virtual machine or template. The resource supports both making a complete copy of a virtual machine, or cloning from a snapshot (otherwise known as a linked clone).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa57ada402e984da95e401d252bdb8388215de5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cloudwatch_alarm&lt;/code&gt; object takes the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b624e1390060cc8b0b392733dd67caa403db3989" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cloudwatch_logging_options&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37bca43beff7854bc0d2bf963cf6cc09e41095c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cloudwatch_metric&lt;/code&gt; object takes the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550de75761773c71031bcebbf0264c03586ad22d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;condition&lt;/code&gt; block supports allows you to add logic to any basic configuration object in a service. See Fastly's documentation &lt;a href=&quot;https://docs.fastly.com/guides/conditions/about-conditions&quot;&gt;&quot;About Conditions&quot;&lt;/a&gt; for more detailed information on using Conditions. The Condition &lt;code&gt;name&lt;/code&gt; can be used in the &lt;code&gt;request_condition&lt;/code&gt;, &lt;code&gt;response_condition&lt;/code&gt;, or &lt;code&gt;cache_condition&lt;/code&gt; attributes of other block settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c12beeb3dc00eb5873cae0e30c9e0077b29ffb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;condition&lt;/code&gt; block supports the following elements, and requires at least one to be defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6a2c79da71764233292b55fae4ad1c22816fcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;condition&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f288bad8ca41d663196d755fc4e2a5085376cbcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069aa655ee238f00a837db8aa75a4163987f7b42" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;configuration&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3acdf87dab8c0f15f06ffa4006f14774c40ef6c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;constraints&lt;/code&gt; block supports the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51dbb03d57e9772e8002a45b66f5da4a522930e8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;consul_agent_config&lt;/code&gt; data source returns &lt;a href=&quot;https://www.consul.io/api/agent.html#read-configuration&quot;&gt;configuration data&lt;/a&gt; from the agent specified in the &lt;code&gt;provider&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="888cb2fceb879a219bf0f813ce943041342803be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;consul_agent_config&lt;/code&gt; resource returns far less attributes, so as a result it may not provide all necessary functionality. Consul does still provide this data via API but &lt;a href=&quot;https://www.consul.io/docs/upgrade-specific.html#config-section-of-agent-self-endpoint-has-changed&quot;&gt;promises no compatibility across versions&lt;/a&gt;, therefore it is being removed from this provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd96513f3dc62a920b0889f72e625682ed1971f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;consul_agent_self&lt;/code&gt; data source returns &lt;a href=&quot;https://www.consul.io/docs/agent/http/agent.html#agent_self&quot;&gt;configuration and status data&lt;/a&gt; from the agent specified in the &lt;code&gt;provider&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03efb03c7d96023d48d260b26f43ebe3707061e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;consul_agent_self&lt;/code&gt; data source will be removed in the next major version of the provider. As a result, we recommend moving to the new &lt;a href=&quot;d/agent_config&quot;&gt;&lt;code&gt;consul_agent_config&lt;/code&gt;&lt;/a&gt; data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caceb1a71304107b2fe0302a11757f5c9093a7d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;consul_agent_service&lt;/code&gt; resource has been deprecated in version 2.0.0 of the provider and will be removed in a future release. Please read the &lt;a href=&quot;../upgrading#deprecation-of-consul_agent_service&quot;&gt;upgrade guide&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fca59ab328d90e77b10ca5dc70a339fdc157868" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;consul_agent_service&lt;/code&gt; resource will be removed in the next major version of the provider. As a result, we recommend moving to the &lt;a href=&quot;r/service&quot;&gt;&lt;code&gt;consul_service&lt;/code&gt;&lt;/a&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ae727bc810d1f5e3186ee7a189ca93fecbebb8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;consul_catalog_entry&lt;/code&gt; resource has been deprecated in version 2.0.0 of the provider and will be removed in a future release. Please read the &lt;a href=&quot;../upgrading#deprecation-of-consul_catalog_entry&quot;&gt;upgrade guide&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e552975ac0c3591d532dc82080e3a46aee3d6d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;consul_catalog_entry&lt;/code&gt; resource will be removed in the next major version of the provider. As a result, we recommend moving to the &lt;a href=&quot;r/service&quot;&gt;&lt;code&gt;consul_service&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;r/node&quot;&gt;&lt;code&gt;consul_node&lt;/code&gt;&lt;/a&gt; resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02436958054031e1d6d63f8abd9888ec9b56257b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;consul_keys&lt;/code&gt; resource reads values from the Consul key/value store. This is a powerful way dynamically set values in templates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ce4e30bedf33a451522017336bc5a866f55737" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;consul_keys&lt;/code&gt; resource writes sets of individual values into Consul. This is a powerful way to expose infrastructure details to clients.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6454bc9ad237af786c820e3de739e2d10c5c55b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;consul_nodes&lt;/code&gt; data source returns a list of Consul nodes that have been registered with the Consul cluster in a given datacenter. By specifying a different datacenter in the &lt;code&gt;query_options&lt;/code&gt; it is possible to retrieve a list of nodes from a different WAN-attached Consul datacenter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cf2ab8e741ae4bede34ca8ce4fbdc64b81073b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;consul_service&lt;/code&gt; resource has been modified to use catalog APIs in place of service registration APIs for creating services in the Consul catalog. This should be a functionally compatible change, and create or read services as prior. It now replaces &lt;code&gt;consul_catalog_entry&lt;/code&gt; (the &lt;code&gt;service {}&lt;/code&gt; block) and &lt;code&gt;consul_agent_service&lt;/code&gt;. The &lt;code&gt;node&lt;/code&gt; attribute is now required and the node must exist.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff68c63df9563b848e3aa438a3d5cc852d499da4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;consul_services&lt;/code&gt; data source returns a list of Consul services that have been registered with the Consul cluster in a given datacenter. By specifying a different datacenter in the &lt;code&gt;query_options&lt;/code&gt; it is possible to retrieve a list of services from a different WAN-attached Consul datacenter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82229d32354a23179002817465e3527bf5ee9be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;container&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98cd0bd843cf197ed322dd7bb0f056aac93631e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;content&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2753219c24d613368e6c4183469333df1bf826c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;content_config&lt;/code&gt; object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save transcoded files and playlists: which bucket to use, and the storage class that you want to assign to the files. If you specify values for &lt;code&gt;content_config&lt;/code&gt;, you must also specify values for &lt;code&gt;thumbnail_config&lt;/code&gt;. If you specify values for &lt;code&gt;content_config&lt;/code&gt; and &lt;code&gt;thumbnail_config&lt;/code&gt;, omit the &lt;code&gt;output_bucket&lt;/code&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4020949fb2bf39ca4462a7e63312319bbabcc18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;content_config&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddec2317d5a725e0f59ddf08de87fd5a91b6864" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;content_config_permissions&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8cf6f8c1f656294101d2f8a901dab6049c27b94" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;converge_config&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05ee5b01d44fa5324f3a276ae925ff03f4bc7b00" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cors&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="017cad0b50f5a0fdf4885f0868bcdc135ec5ccd5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cpu_utilization&lt;/code&gt; block contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e54c19d751e4539be79780a95c9d897aceaf392" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;credentials&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="041b76324383b7fcba0be664d134bd8280c9e6e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;credit_specification&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73c48c1f0d8f8a20013367e8fc231007c806779e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;critical&lt;/code&gt; and &lt;code&gt;warning&lt;/code&gt; threshold mapping supports the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcbec44242cceb58d93b161cfcb1e8efbd63c239" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;custom_cookbooks_source&lt;/code&gt; block supports the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2636c195bdeeb3c6b98ba1a6cea215818d553d5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;data&lt;/code&gt; block creates a data instance of the given &lt;code&gt;TYPE&lt;/code&gt; (first parameter) and &lt;code&gt;NAME&lt;/code&gt; (second parameter). The combination of the type and name must be unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507e4f9ef2b3cb0dcf4c36a0c19f31fe22b2b85f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;database&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3817dacfe4a53a40c192ff93bffedb3733d4f4b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;datastore&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f83ce8d468bf8e684649b83dd1a9e3fe7900873" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;deny&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5ef715aab91773018eb40339de911dd8cfa2bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destination&lt;/code&gt; configuration supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8920d7bfd41077cf27a297175db6556df289408d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;destination&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8a9b05e680da3d888498d2b77e9574dfe7422c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dimensions&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33c19cf76d6eb7447cd3113b1b17133adf22c4af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dir&lt;/code&gt; argument can be used to open a console for a specific Terraform configuration directory. This will load any state from that directory as well as the configuration. This defaults to the current working directory. The &lt;code&gt;console&lt;/code&gt; command does not require Terraform state or configuration to function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a0f295b752bb164f8b41c10e6f99c2eb024fc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;disk&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86769a7fe6ba8e68769969caa58aae8d8f57edf8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;disk_encryption_key&lt;/code&gt; block supports: * &lt;code&gt;raw_key&lt;/code&gt; - (Optional) Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource. * &lt;code&gt;sha256&lt;/code&gt; - The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f8484a51d8e1553712080130292e40ac318dd6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dns_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8999ed0776f23ad2695885413afb49670599afb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;domain&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4a8f6e6790e6ba5bf858f26ed5895911f2c0f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dropin&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acbabfa8dd1d87cbb66b7765f71aa640abf4a1ab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dynamodb&lt;/code&gt; object takes the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f68c1c9e4d1f63198f1cdb5721689aded7242325" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eagerly_scrub&lt;/code&gt; and &lt;code&gt;thin_provisioned&lt;/code&gt; options control the space allocation type of a virtual disk. These show up in the vSphere console as a unified enumeration of options, the equivalents of which are explained below. The defaults in the sub-resource are the equivalent of thin provisioning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ac47903ce5eddb4d71d705e217b9d8fa40715fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ebs&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ac2470903409e24d452bbeff62f786414fd0025" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;egress&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5de68c34044050aa3ab09bda14220557c9d702d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;eip&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dead7cabd84ad58bb33ab8992c63f266766de47" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;elastic_gpu_specifications&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee2dd542711ec03065b99bf38be45e8949086a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;elasticsearch&lt;/code&gt; object takes the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75429d1e158193d9b333e4eb8faad5d2b9e4eda0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;elasticsearch_configuration&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504c2dc8d1ee63327db519508397e3b738ffc518" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;encryption&lt;/code&gt; configuration supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4282c3f405f979d1e369bc30bf49fee172e869c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;endpoint&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eef5a015b584dfc53a7e4c97ef92b59abe7d00c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;entry&lt;/code&gt; argument is fully optional when configuring the Data Source. If specified, however, the returned array of machine images will have a length of 1, and only contain the desired image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46bf5661d2e4929d8a9b59747bcc88c8b14a110" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;errors&lt;/code&gt; key is a list containing one or more strings where each string describes an error that has occurred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c253f920a1da65f73b6503c5d6ac3f85ca3f6da3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;event_notification_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7917230fe75e34e30e3f76e35b3d48c01cdc3bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;expiration&lt;/code&gt; object supports the following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e9a96fc366c55ca1c555f831f0726f46f4e094" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;extended_s3_configuration&lt;/code&gt; object supports the same fields from &lt;code&gt;s3_configuration&lt;/code&gt; as well as the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c658b64b8ce8ecdffc84d0670306dc83d4c73d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;external&lt;/code&gt; data source allows an external program implementing a specific protocol (defined below) to act as a data source, exposing arbitrary data for use elsewhere in the Terraform configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="268ea04b9bde8a43526f08d6afad4a190d5ccdc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;external_fixed_ip&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f49184ba7b27a2cbbcd972ed9f33c782414e00e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;file&lt;/code&gt; provisioner is used to copy files or directories from the machine executing Terraform to the newly created resource. The &lt;code&gt;file&lt;/code&gt; provisioner supports both &lt;code&gt;ssh&lt;/code&gt; and &lt;code&gt;winrm&lt;/code&gt; type &lt;a href=&quot;connection&quot;&gt;connections&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d68efa4702b8a45c587310533ce7d7f28b53ce23" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; configuration supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30aa94be25a8068ba23be406727c6ec5b0ad52cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; metric configuration supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88deb7b6a25c6770cd7e2c2b063fb9578f1f18aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;firehose&lt;/code&gt; object takes the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d41fbe46630347728eb45f4fb9abbb1b1f8ebf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;fixed_ip&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4050cb7611232863e98d2dfa250a7a202d607a8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;forward&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb4169bf33510d76fdcbe663749a7237034c3a54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;frontend_ip_configuration&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1a214b50d5e08be8baa29cea170fe2ba3cf04ec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;frontend_port&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20bf663422b40a0639d84e5d21460e2ee7fbd5ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;gateway_ip_configuration&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8e6e5308e147af4d02625d9d269a0a24f2f646" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;gcslogging&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="850cd14091ec7dc28d23bd8c3753d7c7f558500f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;geo_filter&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cb22737914d7b76d846b402b2e13cdaa7e47376" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;guest_accelerator&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e834daeb30c79f13baf0640f4aaec0de52353447" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;gzip&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c85d6808ce73bb34039d29bbe5e748d9e33f3b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ha&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59cd63bac91c8707ae96dd1eb310b120924c18f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;habitat&lt;/code&gt; provisioner has some prerequisites for specific connection types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f97163f883b3610d915af020438b9a0785e721" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;habitat&lt;/code&gt; provisioner installs the &lt;a href=&quot;https://habitat.sh&quot;&gt;Habitat&lt;/a&gt; supervisor and loads configured services. This provisioner only supports Linux targets using the &lt;code&gt;ssh&lt;/code&gt; connection type at this time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebdad949936e6334def2af7362dee3574190b44" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hadoop_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987d826a4598e315d374446713484c3918f75b12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;headers&lt;/code&gt; list supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80396ed13240f88b2232f2184216efde66d471a7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;healthcheck&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa377eabd6064ee82b8a75307c19c10b1e1c5e8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;helper/schema&lt;/code&gt; library is a framework we've built to make creating providers extremely easy. This is the same library we use to build most of the core providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdf03ee9a1a1f31d3f2438fd251b7312ce5d2c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;hive_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19dbacb0975ca80b8565d4eddbc73ce74bf3e24f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;host_routes&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1b1f2433beecef727253a969118644d57ef3a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;host_rule&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b7f7d9ef27b49da9999476dd1cbdfc872b84b2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;http&lt;/code&gt; data source makes an HTTP GET request to the given URL and exports information about the response.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16dd402e8e0a8feecc2abece26863e4151707c18" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;http_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e7c2c95ccd6b4c8f1c3ef9efe8a36ae41b526c8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;http_health_check&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92c1c8266e97b11797e2bc509c284c6641e22f99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;http_listener&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="186ec4afa32b4357768b612c96bbaf69593ba99c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;https_health_check&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb29fe7a3c8d6abe2131cd3f0662b905f60ce177" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;iam_instance_profile&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e497355b98156c57efcaa1c97abc704b8868382" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;iap&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001714d3f66c2b1129f13c319588e825262f4e3a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;icmp_ping&lt;/code&gt; check requires the &lt;code&gt;target&lt;/code&gt; top-level attribute to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="523eed49f054bd6681b972d044504ddb6e98343b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;if&lt;/code&gt; configuration block is an &lt;a href=&quot;https://login.circonus.com/user/docs/Alerting/Rules/Configure&quot;&gt;ordered list of rules&lt;/a&gt; that are evaluated in order, first to last. The first &lt;code&gt;if&lt;/code&gt; condition to evaluate true shortcircuits all other &lt;code&gt;if&lt;/code&gt; blocks in this rule set. An &lt;code&gt;if&lt;/code&gt; block is also referred to as a &quot;rule.&quot; It is advised that all high-severity rules are ordered before low-severity rules otherwise low-severity rules will mask notifications that should be delivered with a high-severity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bf6c965093c5efab66a59542610a5771f4211de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ingress&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8e04571be5595ff908803b677d48567a1bf0d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;init&lt;/code&gt; command must be called:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eadac165d3a6659c28ea567cae378ed364e5828" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;init&lt;/code&gt; command will do more than just initialize the backend. Please see the &lt;a href=&quot;../commands/init&quot;&gt;init documentation&lt;/a&gt; for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0445b60e065a32a446b9ab49a8f120ef670f5533" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;initialize_params&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192193fcd91716e280378c775b52e188cd559745" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;instance_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22fd9ddce2356ed7a9711e1f3d7fd8309a6d304f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;instance_market_options&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6971b348b9429fa3de969de83143742cef15f4ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;interface&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d75b4b8d223434f12e0782a204b0e9b5d36c6669" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ip&lt;/code&gt; field should be unique in the &lt;code&gt;panos_dag_tags&lt;/code&gt; block, and there should only be one &lt;code&gt;panos_dag_tags&lt;/code&gt; block defined in a given plan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e9210a8e5a2c8d4ce9374147951d59be4f6c5ed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ip_allocation_policy&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4e75e94b7f94cd40f98250f68fe0d2c016a1add" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ip_configuration&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35c466e44337156e482fc2ff291d7839fbe062eb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipam_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd860cc765546504867e2288ca904bce4334812" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ipsec_policy&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456489b3726fc6462787d09dcbf4330b07e1d624" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;items&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3529d13efcda67114297f04950786acf50a11aac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;items&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb70d93f1c3ce3023721d90dd4a827ff8f23202" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;key&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf926887bdfe5a988425fb74b9c1cc0039a3fc6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kinesis&lt;/code&gt; object takes the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b77cb3ab35d22ac5d9c5ead80e88cc349e4840" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;kinesis_source_configuration&lt;/code&gt; object supports the following: * &lt;code&gt;kinesis_stream_arn&lt;/code&gt; (Required) The kinesis stream used as the source of the firehose delivery stream. * &lt;code&gt;role_arn&lt;/code&gt; (Required) The ARN of the role that provides access to the source Kinesis stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d409691d4ee8bb6385eb0c4f027f28ac04018195" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lambda&lt;/code&gt; object takes the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9365c3ed6431993e33f4a04b79ccd9aa6132c46f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lambda_function&lt;/code&gt; notification configuration supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6146e9fdf40c7c59f21d7f7806b1d006e87c5ebf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;launch_template&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f657ddd499e9ca0b232960bdd6298eee029af88e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lifecycle&lt;/code&gt; block allows the following keys to be set:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7003c85eda3fd4d88e2dddb281864b05703451cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lifecycle_rule&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fe8a930790faf0b37ad6bc3ae64138ba85b166" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;lifecycle_rule&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8acb44d4e589ac30e92bc38bc8976d2adeb391" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;limits&lt;/code&gt; block describes the quota limits to be enforced. It supports the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a97be5addf7aea7ff3bf3ee7aa7327f9041bd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;list_policy&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43688dc24f15544c7eb7338d5832cf70e3e9f438" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;load_balancing_utilization&lt;/code&gt; block contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bebbed7912fe911aeb0c26342ac8fb3b638c1d27" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;local-exec&lt;/code&gt; provisioner invokes a local executable after a resource is created. This invokes a process on the machine running Terraform, not on the resource. See the &lt;code&gt;remote-exec&lt;/code&gt;&lt;a href=&quot;remote-exec&quot;&gt;provisioner&lt;/a&gt; to run commands on the resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f810ea5d9239c280b88ecb2d043e7ee5cc723b8b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;locals&lt;/code&gt; block defines one or more local variables within a module. Each &lt;code&gt;locals&lt;/code&gt; block can have as many locals as needed, and there can be any number of &lt;code&gt;locals&lt;/code&gt; blocks within a module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c087c8cbf8fec83a35a4799f165d4d88c1385a6a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;logentries&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82d5e9bdb90971d4f21a61743a48b4376a5227c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;logging&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b48b3b5ff5f7c25f67c3981e0a33d1251cec1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;logging&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7386fa2a1035ca90112443cc3afa698545c9a6ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;maintenance_policy&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57897f71fb6d90d00b6e03267ae867fcec7029f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;management&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e93ac91101fb2d6f7aab626c4411cbfae32e57d8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;master_auth&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1505c7386c76ca5ee8a38b3441a5ea1a3dbe8849" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;master_authorized_networks_config.cidr_blocks&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81131c18d5fb9c043fde242fb68a8e596bf9fae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;master_authorized_networks_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1bc52a2a5ca388e5bddf53ad14172b4a90f2907" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;match&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bee537d80ba3fde522a7622c45140012b60f99c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;member&lt;/code&gt; block is deprecated in favor of the &lt;code&gt;openstack_lb_member_v1&lt;/code&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48426fe2595a18a46e580b468e1c186b795b8ad9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;member&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e99810322e3b5496b01ab8ecc989b71b9ef7f80" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;metadata&lt;/code&gt; config defines a map of additional meta data header name value pairs. The additional meta data items are set HTTP Headers on the object in the form &lt;code&gt;X-Object-Meta-{name}: {value}&lt;/code&gt;, where &lt;code&gt;{name}&lt;/code&gt; is the name of the metadata item &lt;code&gt;{value}&lt;/code&gt; is the header content. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89668921010ffa0b76d1fdd10b42196d73d3bde8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;metadata&lt;/code&gt; config defines a map of additional meta data header name value pairs. The additional meta data items are set as HTTP Headers on the container in the form &lt;code&gt;X-Container-Meta-{name}: {value}&lt;/code&gt;, where &lt;code&gt;{name}&lt;/code&gt; is the name of the metadata item &lt;code&gt;{value}&lt;/code&gt; is the header content. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d13179088078cf92a5b10fc75441cc4e1a93f1c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;metric&lt;/code&gt; block contains (more documentation &lt;a href=&quot;https://cloud.google.com/monitoring/api/metrics&quot;&gt;here&lt;/a&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b73e9e1cfee2dd29a22635171b05609d084a9dcd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;metric&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed7b1556e308de958368475f87d582451ae6d04a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;metric_transformation&lt;/code&gt; block supports the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd78f20a4904604e0ff87a2890f91528e7b964f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;min_elb_capacity&lt;/code&gt; parameter causes Terraform to wait for at least the requested number of instances to show up &lt;code&gt;&quot;InService&quot;&lt;/code&gt; in all attached ELBs during ASG creation. It has no effect on ASG updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1b6358138f2313e75372c71cffa1a6beeac352" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;modules&lt;/code&gt; array in the response always includes the requested module as the first element. Other elements of this list, if present, are dependencies of the requested module that are provided to potentially avoid additional requests to resolve these modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb761e8f4678d728f1d5f9dcf9fb02b79ac167d2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;monitor_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142bd3bf4b1696c31a5d179ed521a63ce9272eb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;monitoring&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a97d1230e00604b36ce56716ea1298aa3f3f3471" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mount&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7a72dc415519fadc8a6fd175f3361b68525b9c6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mqtt_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb8965b3e89fad1e83d8be3174f4a5d27a4258bc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;multi_factor_auth_rule&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="159a365c01261e690b7e57eaf79ce125ae0611ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mysql&lt;/code&gt; check requires the &lt;code&gt;target&lt;/code&gt; top-level attribute to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccbca8a85820318b4797e4da7256ea1b6a10af4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mysql_database&lt;/code&gt; resource creates and manages a database on a MySQL server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ca38265a24a073c26688e27055b1e7b5cc0fc1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mysql_grant&lt;/code&gt; resource creates and manages privileges given to a user on a MySQL server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f0c0fece8d076669eab64ab83c681705818592f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mysql_user&lt;/code&gt; resource creates and manages a user on a MySQL server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf0bba4d715006b42110480fd0248316b85ffe75" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;notes&lt;/code&gt; fields are editable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3298c9b4d8f450f61add883e6c21a2b28df2da" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; argument is the name of the resource to mark as tainted. The format of this argument is &lt;code&gt;TYPE.NAME&lt;/code&gt;, such as &lt;code&gt;aws_instance.foo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d2fde0e47698e06363c6cea42bccea29ed2a8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;name&lt;/code&gt; argument is the name of the resource to mark as untainted. The format of this argument is &lt;code&gt;TYPE.NAME&lt;/code&gt;, such as &lt;code&gt;aws_instance.foo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97bb7bb037723856bac66ec0f16778a5d68f23ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;named_port&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c718b8c8dbe9ad399852bb337adc5dfe5a1246" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;network&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac53ce18f998812b954bd574894e5192480f7f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;network_interface&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940541290d5391ef70dbba0e0d505095142b776a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;network_interface&lt;/code&gt; configuration block &lt;em&gt;does&lt;/em&gt;, however, allow users to supply their own network interface to be used as the default network interface on an EC2 Instance, attached at &lt;code&gt;eth0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2d8bf6771fca4a67b6ffc15dc6fc0cc58a3e06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;network_policy&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6a8c3462e6dd5254d09a9c42d9d0b953fcec86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;networks&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0be4a910eda41222ef953a848809332599493f8f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next_hop&lt;/code&gt; IP address must be directly reachable from the router at the &lt;code&gt;flexibleengine_networking_router_route_v2&lt;/code&gt; resource creation time. You can ensure that by explicitly specifying a dependency on the &lt;code&gt;flexibleengine_networking_router_interface_v2&lt;/code&gt; resource that connects the next hop to the router, as in the example above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b041c0423f36749ad3eff4a50f0415b6269b7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next_hop&lt;/code&gt; IP address must be directly reachable from the router at the &lt;code&gt;openstack_networking_router_route_v2&lt;/code&gt; resource creation time. You can ensure that by explicitly specifying a dependency on the &lt;code&gt;openstack_networking_router_interface_v2&lt;/code&gt; resource that connects the next hop to the router, as in the example above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d507bf528162c845b4160dca049603f785e7e4e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next_hop&lt;/code&gt; IP address must be directly reachable from the router at the &lt;code&gt;opentelekomcloud_networking_router_route_v2&lt;/code&gt; resource creation time. You can ensure that by explicitly specifying a dependency on the &lt;code&gt;opentelekomcloud_networking_router_interface_v2&lt;/code&gt; resource that connects the next hop to the router, as in the example above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9eaad4453184305bdfdfb9fc83178b07f4abb66" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;next_hop&lt;/code&gt; IP address must be directly reachable from the router at the &lt;code&gt;telefonicaopencloud_networking_router_route_v2&lt;/code&gt; resource creation time. You can ensure that by explicitly specifying a dependency on the &lt;code&gt;telefonicaopencloud_networking_router_interface_v2&lt;/code&gt; resource that connects the next hop to the router, as in the example above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91da8ad35bb0fd816c5da31b704e570c3b2f522d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nics&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6535e6c6d1bedf4ef2711582463de6579a8f82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;node_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="575cec0857734a0a3eea1bb9f798afa8c89e4bab" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;noncurrent_version_expiration&lt;/code&gt; object supports the following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e492ade05ce79e4814d378cf011a920b383a12c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;noncurrent_version_transition&lt;/code&gt; object supports the following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90dac4d2b59f9ec509b4887ca79dbde54a0fd87" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;notifications&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2048a90b90ce1b1aa7dc4b0e5d5c07ce1aabe2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;nrql&lt;/code&gt; attribute supports the following arguments: * &lt;code&gt;query&lt;/code&gt; - (Required) The NRQL query to execute for the condition * &lt;code&gt;since_value&lt;/code&gt; - (Required) The value to be used in the &lt;code&gt;SINCE &amp;lt;X&amp;gt; MINUTES AGO&lt;/code&gt; clause for the NRQL query. Must be: &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt;, &lt;code&gt;4&lt;/code&gt;, or &lt;code&gt;5&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93d17a984ff82ba7b90971ff39cccbb86304f77" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;null&lt;/code&gt; provider is a rather-unusual provider that has constructs that intentionally do nothing. This may sound strange, and indeed these constructs do not need to be used in most cases, but they can be useful in various situations to help orchestrate tricky behavior or work around limitations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702440bd6060009bf0b77e0100e21f31d61588bf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;null_data_source&lt;/code&gt; data source implements the standard data source lifecycle but does not interact with any external APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52a1da0703dffa32519422e35fe49b12abc6b6d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;null_resource&lt;/code&gt; is a resource that allows you to configure provisioners that are not directly associated with a single existing resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b19f223d57d8c54584456ef9a761e363f77b6883" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;null_resource&lt;/code&gt; resource implements the standard resource lifecycle but takes no further action.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05438d231998dbb8682ebb48269c5bd16534982" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_acl&lt;/code&gt; resource creates and manages an ACL in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3724e1ae4b7019650b147204d803a88286a17980" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_image_list&lt;/code&gt; resource creates and manages an Image List in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b0e4a148a251b6edf1c40f581e5b503893c6f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_image_list_entry&lt;/code&gt; resource creates and manages an Image List Entry in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c0d02c9fbf024aba3d29922bbee217cfedd596" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_instance&lt;/code&gt; resource creates and manages an instance in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0caa535b7331c1fa40132d273f288509224c7691" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_ip_address_association&lt;/code&gt; resource creates and manages an IP address association between an IP address reservation and a virtual NIC in an Oracle Cloud Infrastructure Compute Classic identity domain, for an IP Network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7329131952d581a8aecf211acfff7e891aab0ddf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_ip_address_prefix_set&lt;/code&gt; resource creates and manages an IP address prefix set in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eccfac7c2498cff554766c7d2528a612cea19ef8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_ip_address_reservation&lt;/code&gt; resource creates and manages an IP address reservation in an Oracle Cloud Infrastructure Compute Classic identity domain, for an IP Network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbd2c420d9b0d5f5ed933b7898f095ed9d7a2890" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_ip_association&lt;/code&gt; resource creates and manages an association between an IP address and an instance in an Oracle Cloud Infrastructure Compute Classic identity domain, for the Shared Network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9916dceafd494dcb314f6ee98895a72435af00aa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_ip_network&lt;/code&gt; resource creates and manages an IP Network in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ba65a83c687652f96357954de47bb8f818df2a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_ip_network_exchange&lt;/code&gt; resource creates and manages an IP network exchange in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a770bea66e4c24b8a08f368ceea738d0a8e5a013" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_ip_reservation&lt;/code&gt; resource creates and manages an IP reservation in an Oracle Cloud Infrastructure Compute Classic identity domain for the Shared Network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59b543cdaf33d3c28b34676cb661370bb214b2fc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_machine_image&lt;/code&gt; resource creates and manages a machine image template of a virtual hard disk of a specific size with an installed operating system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d3a19330add695d1c67b2e968aed7faad478a2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_orchestrated_instance&lt;/code&gt; resource creates and manages an orchestration containing a number of instances in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73b12ec423580c4d0b147f06839a07971dca9415" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_route&lt;/code&gt; resource creates and manages a route for an IP Network in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50def1d4cd268f61653cbd74766911439b08b201" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_sec_rule&lt;/code&gt; resource creates and manages a sec rule in an Oracle Cloud Infrastructure Compute Classic identity domain, which joins together a source security list (or security IP list), a destination security list (or security IP list), and a security application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8223178c144d78aec6e97402bbe72a3a235c95" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_security_application&lt;/code&gt; resource creates and manages a security application in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fedc9ac494fa7f7a4e8dce2af345224763e88f6e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_security_association&lt;/code&gt; resource creates and manages an association between an instance and a security list in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b42c6cdee58c17c807b531d403b92e6375efc5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_security_ip_list&lt;/code&gt; resource creates and manages a security IP list in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315168119f4d69462ecea7e3e1ebb550dbf4b7ae" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_security_list&lt;/code&gt; resource creates and manages a security list in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2530c33a37b1b02f5a3b14d0058948247deff508" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_security_protocol&lt;/code&gt; resource creates and manages a security protocol in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbbb6de8fe2967a8f7f16b0f654aea8ede509276" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_security_rule&lt;/code&gt; resource creates and manages a security rule in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea31fce27c1b34256b9f8113103939098557b642" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_ssh_key&lt;/code&gt; resource creates and manages an SSH key in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d94a99f6dd1c871724526246184c0bc70712ce9b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_storage_volume&lt;/code&gt; resource creates and manages a storage volume in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362e290ed367373a310613f903b86f5468c64af9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_storage_volume_attachment&lt;/code&gt; resource creates and manages a storage volume attachment in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf40a2b16403514fb5bf91ceaaa68cd9cb85633" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_storage_volume_snapshot&lt;/code&gt; resource creates and manages a storage volume snapshot in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b1cd0824fa5a87646ddeb4f48077919d83ec803" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;opc_compute_vnic_set&lt;/code&gt; resource creates and manages a virtual NIC set in an Oracle Cloud Infrastructure Compute Classic identity domain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1d8ab6729abfe2fa3a734fcb97da68f672b035" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;oraclepaas_database_access_rule&lt;/code&gt; resource creates and manages a Database Access Rule for an Oracle Database Cloud service instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b8f19fcb7ff69de7fd1bfab7a23e4c6905cf662" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;oraclepaas_database_service_instance&lt;/code&gt; resource creates and manages a an Oracle Database Cloud Service instance on the Oracle Cloud Platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d2618d0d12fabe6c1d63c9b68f2e7e120993efa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;oraclepaas_java_access_rule&lt;/code&gt; resource creates and manages an Access Rule for an Java Cloud service instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6aa4509dcf1c980a10dcc2c8b5957c3699c2d22" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;oraclepaas_java_service_instance&lt;/code&gt; resource creates and manages an Oracle Java Cloud Service instance on the Oracle Cloud Platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab6d14145405ebebfe45718d6562415cd5aa2663" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;oraclepaas_mysql_service_instance&lt;/code&gt; resource creates and manages an Oracle MySQL Cloud Service instance on the Oracle Cloud Platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f87c79540cba83bc6bb3a27f340a57fd04a0864" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;organization&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="908a3d0a9ec416497ff6e89f3a30844baa025b17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;origin&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2bc19395e05c595b85314b6146043d96970cfd2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;output&lt;/code&gt; block configures a single output variable. Multiple output variables can be configured with multiple output blocks. The &lt;code&gt;NAME&lt;/code&gt; given to the output block is the name used to reference the output variable. It must conform to Terraform variable naming conventions if it is to be used as an input to other modules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8858f318bdc7293777ce36e47f0462046b6e77f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;papertrail&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="768e194af11c2c7b72ecbae87442b7d76494d271" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;parameters&lt;/code&gt; array objects support the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b45702a4addb56982ceb218f976b21299ec92864" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;part&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6a6ce05067ae72796cdc320ccb9587e23500db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;partition&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b178945e9e54441e68e16bd33ab19416eaf112d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path&lt;/code&gt; argument is the same as for the &lt;a href=&quot;apply&quot;&gt;apply&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2279bf0abb697180393115be306543768e948cc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path_matcher&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aec7fb8107a48c3be38114da6ee803eb0931321f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;path_rule&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="559053836becf20e003189841182f9e1af4b7ee6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;permissions&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ff88259c2041fda3fe3d999f5f474ffb4ea505" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;persistence&lt;/code&gt; argument supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3211ba3355f42c3bf3506514661f7542daac307" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;persistence&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1e6acb24a4382951192b9cd127709511dc19fa2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;personality&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a83993d9fdb34a13db2972c3280dfb734b78f1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pig_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3397634b70ab17cbcdd7fa968bc63fdd489937e3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;placement&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c6de2bca044bf837909a74a82c812b6598fadf1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pod_security_policy_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5e9444f54c5dd809830a16cab038ea06707fbe2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;policy&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="408e8654cff105988427697a655eab1d48002d7c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;postgresql&lt;/code&gt; check requires the &lt;code&gt;target&lt;/code&gt; top-level attribute to be set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3933e80f3444b5a2a0f0eed2d7b086391009127" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;postgresql_database&lt;/code&gt; resource creates and manages &lt;a href=&quot;https://www.postgresql.org/docs/current/static/managing-databases.html&quot;&gt;database objects&lt;/a&gt; within a PostgreSQL server instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc35e1fec7da5e1e8a79d923d89ecc4dfc3a6b25" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;postgresql_extension&lt;/code&gt; resource creates and manages an extension on a PostgreSQL server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="923a873410089fe427b39456f6ae0d098a276c06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;postgresql_role&lt;/code&gt; resource creates and manages a role on a PostgreSQL server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cb10bf00df98514d89bc9ce6e7a50eeec179899" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;postgresql_schema&lt;/code&gt; resource creates and manages &lt;a href=&quot;https://www.postgresql.org/docs/current/static/ddl-schemas.html&quot;&gt;schema objects&lt;/a&gt; within a PostgreSQL database.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfde9373587d09a9bd926265f01d7dc68591998a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;probe&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88742277b4de3227af96eeb0eb9b61d83d09e222" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;processing_configuration&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b7f9979b71b4855d91f81b6cb06e36d817a7cbc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;processors&lt;/code&gt; array objects support the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd89b7c7209375deff1e5d2af2278b9320a5ee1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;provider&lt;/code&gt; argument within any &lt;code&gt;resource&lt;/code&gt; or &lt;code&gt;data&lt;/code&gt; block overrides this default behavior and allows an additional provider configuration to be selected using its alias:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef4e443ef455115d4a366f1b9c22f6dd4821cb9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;providers&lt;/code&gt; argument within a &lt;code&gt;module&lt;/code&gt; block is similar to the &lt;code&gt;provider&lt;/code&gt; argument within a resource as described for &lt;a href=&quot;../configuration/providers#multiple-provider-instances&quot;&gt;multiple provider instances&lt;/a&gt;, but is a map rather than a single string because a module may contain resources from many different providers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a05fc0f5f09c89b9e61f356a99bf6c2c5ac64fa1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;public_ip&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55aa8cdd76f12208cef2c6f7596c84d039620ba5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;public_key_certificate&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040e42cbe2a11d8c18b3dec106bc4cade271fe5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;publicip&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6741b4f9fbbcf38a953143750ad5c4ff778fe88" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;pyspark_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c17ab95cc5c60c9fee76a59e73cbc08dbe0a681f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;query_options&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7914a90e5e0dbf7969de4d3b07b2bf81e2c7bd5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;queue&lt;/code&gt; notification configuration supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2f2e39be8e7e8126887a130370c5b8ea0a2212" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;quota&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f6534dc50bbdfbcf83a7cbd4eb93c2f8f4e416" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rabbitmq_binding&lt;/code&gt; resource creates and manages a binding relationship between a queue an exchange.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a82ef358002e90f0d95b2931ce4f74cf0cbc07d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rabbitmq_exchange&lt;/code&gt; resource creates and manages an exchange.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d3bc693d8c534ee7d4bbc27e4f57fc1caa5d2cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rabbitmq_permissions&lt;/code&gt; resource creates and manages a user's set of permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4f8d04676c45d56d4f3372a39f5f61abd3f484" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rabbitmq_policy&lt;/code&gt; resource creates and manages policies for exchanges and queues.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3394dd9a2f76610184076d2703c20f682341dfee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rabbitmq_queue&lt;/code&gt; resource creates and manages a queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c9082057fcb1b9d008b08be6d84f90ce4ce29e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rabbitmq_user&lt;/code&gt; resource creates and manages a user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeb91263de6de172175e21fc77aae87847340082" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rabbitmq_vhost&lt;/code&gt; resource creates and manages a vhost.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93edf4046c6e159c07a8fd1e49969dc68d7c9342" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;raw_disk&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bfb97ffa8c9890fd84502edefdf2fb7e61e74e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;read_acl&lt;/code&gt; consists of a list of &lt;strong&gt;roles&lt;/strong&gt; or &lt;strong&gt;referrer designations&lt;/strong&gt;. The &lt;code&gt;write_acls&lt;/code&gt; consists of a list of &lt;strong&gt;roles&lt;/strong&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be71ed2a0fe9e7a630a6be6ba4e36281acecce52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;record&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ca04705dfa73dfa8667c06353e729955968a46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;redshift_configuration&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ade87185cd24aff428876b597a9b7d2362814046" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;region_limit&lt;/code&gt; block describes the quota limits to be enforced on a region. It supports the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08331306a56f5c856c3217a9ecb8a602b217bd86" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;remote-exec&lt;/code&gt; provisioner invokes a script on a remote resource after it is created. This can be used to run a configuration management tool, bootstrap into a cluster, etc. To invoke a local process, see the &lt;code&gt;local-exec&lt;/code&gt;&lt;a href=&quot;local-exec&quot;&gt;provisioner&lt;/a&gt; instead. The &lt;code&gt;remote-exec&lt;/code&gt; provisioner supports both &lt;code&gt;ssh&lt;/code&gt; and &lt;code&gt;winrm&lt;/code&gt; type &lt;a href=&quot;connection&quot;&gt;connections&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4776537bd7e1662eab691ebf490e325efd20d118" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;replication_configuration&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a066b097dd2109245fbe03537889a47844510581" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;republish&lt;/code&gt; object takes the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d241244a3c9e792e3a599de717234e45f86784" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;request_routing_rule&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e24814e07f2321f70126f84c50811116982b5b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;request_setting&lt;/code&gt; block allow you to customize Fastly's request handling, by defining behavior that should change based on a predefined &lt;code&gt;condition&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65c5750c16b147b4e0df32ad55d091f30c117e9f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;required_version&lt;/code&gt; setting can be used to require a specific version of Terraform. If the running version of Terraform doesn't match the constraints specified, Terraform will show an error and exit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83e286bd1525c3039457c72f9143d960e0c90e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;resource&lt;/code&gt; block creates a resource of the given &lt;code&gt;TYPE&lt;/code&gt; (first parameter) and &lt;code&gt;NAME&lt;/code&gt; (second parameter). The combination of the type and name must be unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e478bff71191d300e16e8296ae27c922d3f9745d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;response_object&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725abf4d380001d9422275634a05ad5574c2b61e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;restore_policy&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5739898490cb312d4d0931de25fb833e603ac8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;restrictions&lt;/code&gt; sub-resource takes another single sub-resource named &lt;code&gt;geo_restriction&lt;/code&gt; (see the example for usage).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a9dc07ccf3e261bd8b296019a00ed87f64be7a0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;return nil&lt;/code&gt; tells Terraform that the update operation succeeded without error. Terraform assumes this means any changes requested applied without error. Because of this, our state updated and Terraform believes there are no further changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625ccfcc16c0f001bb252ae2e956e4d3dbdd9534" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;roles&lt;/code&gt; block contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f05ab7e9a71fd6d3a2e4012a7232ac6e59b450" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;root_block_device&lt;/code&gt; mapping supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6f538e1593a3196cbac8be1f35967ad05108276" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;root_certificate&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858a2728145178011302ef043a551d13d2926eee" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;root_revoked_certificate&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a9dbf087d580cf83c4bc220a26b24eb5b4d8d4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;route&lt;/code&gt; block exports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef1c4993dfb670ad90160b0499fc6a9c46a70fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;route&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2020b4431e855b06decaab15be7315d84742a2a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rule&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af689889894fcffab537c9466b321fde79c10285" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rule&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97ff74254755d56a503941d27cb87033bbb1456f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;rules&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79781ae3af069775f5ef3cfa75d6f905441581e0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;s3&lt;/code&gt; object takes the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace85395b5e942c266f4f22e620d05d3ee3d49b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;s3_configuration&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f2c34fc39ebd86648f41a13676d244a1e9f1fda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;s3logging&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d95a8f1d8d12d439e79c35c90bd25692d1cd5853" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;salt-masterless&lt;/code&gt; Terraform provisioner provisions machines built by Terraform using &lt;a href=&quot;http://saltstack.com/&quot;&gt;Salt&lt;/a&gt; states, without connecting to a Salt master. The &lt;code&gt;salt-masterless&lt;/code&gt; provisioner supports &lt;code&gt;ssh&lt;/code&gt;&lt;a href=&quot;connection&quot;&gt;connections&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304265fd6aaba15cf3517162aba98c8c8984ce98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;salt-masterless&lt;/code&gt; provisioner has some prerequisites. &lt;code&gt;cURL&lt;/code&gt; must be available on the remote host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a5d29ecdf526385e7a80bfa0e0fc8c4d4b7d81a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scaling_policy_action&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="857cef69c200a4ac0d5229178bc7d6154a4dc762" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;schedule&lt;/code&gt; configuration supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b7bab72fe39f4aae34939c15d09e83dfacb5ca" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scheduled_policy&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="642c25054c76a0761f214046553fff87f2fe078b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scheduler_hints&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b5328bc5487b5a79366445795b0e4db6f86aeff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scheduling&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c25d0086b9d4d0d34e585feb68d4f3370541e6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;scratch_disk&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="104935935cb1c4f35c88252d8e933683a668bcec" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;secondary_ip_range&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2de45f55da8c8298cb8da95fc38af7042eb40a2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;secondary_ip_range&lt;/code&gt; block supports: * &lt;code&gt;range_name&lt;/code&gt; - (Required) The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork. * &lt;code&gt;ip_cidr_range&lt;/code&gt; - (Required) The range of IP addresses belonging to this subnetwork secondary range. Provide this property when you create the subnetwork. Ranges must be unique and non-overlapping with all primary and secondary IP ranges within a network. Only IPv4 is supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0f33a8ebd2f2cc32b689890e581a88cdc5eb3e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;security_groups&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c8a4e14af59e05658f26bdf7015ac3b502ccf5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;security_rule&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8447b5fac6b94c79e57432493e893366da765a4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;securitygroup&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c4121fd884329fa092e8d3c1c65f2109fcb89dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;segments&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aef066d07a5590684dde1eb1361d1603e3d4146" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;server_side_encryption_configuration&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e478bc0af496370be57ee4460487e0125fa0f9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;service&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4886a3d4231080a6ae895f11f0bf3f240d8bfe1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;service_account&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cd19bc5c5929345fdd1e9189d18df7b51ec9238" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setting&lt;/code&gt; and &lt;code&gt;all_settings&lt;/code&gt; mappings support the following format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9517b3ebf4c6beee74afdf2e00ecb45787f49b15" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setting&lt;/code&gt; field supports the following format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4148ee67215288076ab0fa0ca5cb3727ce5ecca6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;settings&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfc851b1e418ef0efd7bd731a54c27d762cd7762" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;size&lt;/code&gt; of a virtual disk must be at least the same size as its counterpart disk in the template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e912e1b22d318bab8e63041a3c36119d99ec35" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sku&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40a35ea830569fdebe0304c1ecc303afcbf5ec54" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sns&lt;/code&gt; object takes the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80140cd6d9a1588f82329d82842599df5ccd2bdc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46aae0109dcb0cbb372c197b31f81fe986a1f032" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2c5e274024bc82af94c0c104825a340297cf22c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source&lt;/code&gt; parameter tells Terraform where the module can be found. Terraform manages modules for you: it downloads them, organizes them on disk, checks for updates, etc. Terraform uses this &lt;code&gt;source&lt;/code&gt; parameter to determine where it should retrieve and update modules from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc84460a0c15cf794f09cf31dec6409e0780735a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source_image_encryption_key&lt;/code&gt; block supports: * &lt;code&gt;raw_key&lt;/code&gt; - (Optional) Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource. * &lt;code&gt;sha256&lt;/code&gt; - The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad9cce1f4063b1d2a042ac5bf4edb74b3a5d25c3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source_selection_criteria&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e9398a40460e70953dd94da809bd4bfa89d9eed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;source_snapshot_encryption_key&lt;/code&gt; block supports: * &lt;code&gt;raw_key&lt;/code&gt; - (Optional) Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource. * &lt;code&gt;sha256&lt;/code&gt; - The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8743a5ff4cd597ba9190cf2800c2ad695ef7b7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;spark_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267bd42714b489a9a43483b06ab91f47de11b599" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sparksql_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="829f3792376d1f4e9e30d7aeee57fffea78f3e8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;splunk_configuration&lt;/code&gt; objects supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eeb8d7f790afba4238aa0d02e8d9ab91e71ea0e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;spot_options&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4f9fceafbbd2573ff8bd450dd01a955fde6982a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sqs&lt;/code&gt; object takes the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71fd49321ae3a35d76fabab400cfd1759b53e5dc" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sse_kms&lt;/code&gt; configuration supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78a95e82caca3aedfbb8a67cf958c323db19bd38" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sse_kms_encrypted_objects&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73477fd09a3f058d77199c62f9a018524dfdd941" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ssh&lt;/code&gt; connection also supports the following fields to facilitate connnections via a &lt;a href=&quot;https://en.wikipedia.org/wiki/Bastion_host&quot;&gt;bastion host&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef6545152b9827c7140bc80b809fe00734204d1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ssl_certificate&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0fd66d04020ad7df7e6ab0539d709de258dc9f8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;ssl_health_check&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906d9bd4f81317bfc8eedd2177d1c5b44ea55c79" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;state_notification_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27067cc71b0b6652db1c2c60a12c0ab4ae41cb1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;step&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7018a0cbc24b9c02967136055593c168974594e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;stream&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0f0f4242a9e4f5f47ff5489014161290a1f9b5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subkey&lt;/code&gt; block supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f083acdf481901760b473b0b1ca30446e44e40" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subnet&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8f16ca044fd922d22685ec654f3ed0dde4333f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;subscription&lt;/code&gt; block contains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="922167b60697edb1bf3b2d50c69ab35664d6659c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sumologic&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a357c5fa5e0cec78938b5a08a5a3fa708f4e09b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;syslog&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3213974d445cc6d1cc70bb99d7d0a1cde8669dfd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tag&lt;/code&gt; attribute accepts exactly one tag declaration with the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae9afb67bb6ff28623ed8bc70c820807089f75a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;taint&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03d4bce40f8cbd86801bdda9cbedcdf1cca2e29" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;tcp_health_check&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="570636f16ff2482add9633122b681877cb168c04" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;term&lt;/code&gt; mapping supports the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afe53c8f3cba0b70f55dee1fa81785b71e7d5de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform apply&lt;/code&gt; command is used to apply the changes required to reach the desired state of the configuration, or the pre-determined set of actions generated by a &lt;code&gt;terraform plan&lt;/code&gt; execution plan.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b01fa299bd2e463dcd3a4f325ace2243ab94dbe" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform apply&lt;/code&gt; command now requires a version number to be provided:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2bc10e08f54fff8786a4c52fd3d0344fac86fb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform console&lt;/code&gt; command can be used in non-interactive scripts by piping newline-separated commands to it. Only the output from the final command is outputted unless an error occurs earlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a41a9dd5bae43bccc5de3ff4c7d41997a7316a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform console&lt;/code&gt; command creates an interactive console for using &lt;a href=&quot;../configuration/interpolation&quot;&gt;interpolations&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e345ed15cb7f02cf5e67ce185f3376e638720be" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform console&lt;/code&gt; command will read configured state even if it is &lt;a href=&quot;../state/remote&quot;&gt;remote&lt;/a&gt;. This is great for scripting state reading in CI environments or other remote scenarios.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af193401dc6e8d6b81ff61c35826745427fee9dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform destroy&lt;/code&gt; command is used to destroy the Terraform-managed infrastructure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e2e2404ae9017788fb4f20a15f9d3b5bfa2587" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform env&lt;/code&gt; command is deprecated. &lt;a href=&quot;workspace/index&quot;&gt;The &lt;code&gt;terraform workspace&lt;/code&gt; command&lt;/a&gt; should be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdc94cc7d162e849ead0381a190bf5ab8ee5c1b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform fmt&lt;/code&gt; command is used to rewrite Terraform configuration files to a canonical format and style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f73e92d155d6a22c02b4d7ed4a5798d1c75d4ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform get&lt;/code&gt; command is used to download and update &lt;a href=&quot;../modules/index&quot;&gt;modules&lt;/a&gt; mentioned in the root module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e5c6b11d6edd35dd58cb5311812d7343acd72ba" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform graph&lt;/code&gt; command is used to generate a visual representation of either a configuration or execution plan. The output is in the DOT format, which can be used by &lt;a href=&quot;http://www.graphviz.org&quot;&gt;GraphViz&lt;/a&gt; to generate charts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d289c3e10d99aaaac7624ae98c122377de982c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform import&lt;/code&gt; command is used to &lt;a href=&quot;../import/index&quot;&gt;import existing resources&lt;/a&gt; into Terraform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70ad914d4a49286b64e7af90fd73488a4ea664b0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform import&lt;/code&gt; command is used to import existing infrastructure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d063a7a13d2084c539771e925a6e6750da6305" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform init&lt;/code&gt; command is used to initialize a working directory containing Terraform configuration files. This is the first command that should be run after writing a new Terraform configuration or cloning an existing one from version control. It is safe to run this command multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a7bf97a0511259d353c6318e445845a27ef0e7a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform init&lt;/code&gt; command should be run by any member of your team on any Terraform configuration as a first step. It is safe to execute multiple times and performs all the setup actions required for a Terraform environment, including initializing the backend.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929c4d14db356921163b10a766ed85d81bc99a31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform init&lt;/code&gt; command will download and cache any modules referenced by a configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265ed4d5063614906804b78da9695cc0bfe556dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform output&lt;/code&gt; command is used to extract the value of an output variable from the state file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3522c2a66fcef15b769240e0ea22a150fee90c43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform plan&lt;/code&gt; command is used to create an execution plan. Terraform performs a refresh, unless explicitly disabled, and then determines what actions are necessary to achieve the desired state specified in the configuration files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b522809c433bbaaef7d3fb4a3429c6d3a953e49" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform providers&lt;/code&gt; command prints information about the providers used in the current configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d53d9bee78d0afcc54da611f9517a20da29343" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform push&lt;/code&gt; command uploads your Terraform configuration to be managed by HashiCorp's &lt;a href=&quot;https://www.hashicorp.com/products/terraform/&quot;&gt;Terraform Enterprise&lt;/a&gt;. Terraform Enterprise can automatically run Terraform for you, save all state transitions, save plans, and keep a history of all Terraform runs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b175252f1a9126ed2212af4358c0f58248740ea8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform refresh&lt;/code&gt; command is used to reconcile the state Terraform knows about (via its state file) with the real-world infrastructure. This can be used to detect any drift from the last-known state, and to update the state file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b65c2cded014df1859adf66245f12c613fbd804" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform show&lt;/code&gt; command is used to provide human-readable output from a state or plan file. This can be used to inspect a plan to ensure that the planned operations are expected, or to inspect the current state as Terraform sees it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a912ae119a99cabdb67f347a0e0b3d88dac28e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform state list&lt;/code&gt; command is used to list resources within a &lt;a href=&quot;../../state/index&quot;&gt;Terraform state&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="883542a725b0ec2784d2cd5603948322fd5a3b31" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform state mv&lt;/code&gt; command is used to move items in a &lt;a href=&quot;../../state/index&quot;&gt;Terraform state&lt;/a&gt;. This command can move single resources, single instances of a resource, entire modules, and more. This command can also move items to a completely different state file, enabling efficient refactoring.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f01e8b15eb340534cbfbb21a811f06745b01a99" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform state pull&lt;/code&gt; command is used to manually download and output the state from &lt;a href=&quot;../../state/remote&quot;&gt;remote state&lt;/a&gt;. This command also works with local state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a8c14e60a10089b6d30ae2acaae779d23eb5067" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform state push&lt;/code&gt; command is used to manually upload a local state file to &lt;a href=&quot;../../state/remote&quot;&gt;remote state&lt;/a&gt;. This command also works with local state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d2958bea76ac701f4fb470dac38aaef82c1c3b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform state rm&lt;/code&gt; command is used to remove items from the &lt;a href=&quot;../../state/index&quot;&gt;Terraform state&lt;/a&gt;. This command can remove single resources, single instances of a resource, entire modules, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aad7271b4d5cca3b8e77cd9cff2a17a1c034b74b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform state show&lt;/code&gt; command is used to show the attributes of a single resource in the &lt;a href=&quot;../../state/index&quot;&gt;Terraform state&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cdbe542a5ea489a74db95f8afba2c4605b6d9a5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform state&lt;/code&gt; command is used for advanced state management. As your Terraform usage becomes more advanced, there are some cases where you may need to modify the &lt;a href=&quot;../../state/index&quot;&gt;Terraform state&lt;/a&gt;. Rather than modify the state directly, the &lt;code&gt;terraform state&lt;/code&gt; commands can be used in many cases instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d794307a0b84b9e5a4ae913244e43fbdcc2586fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform state&lt;/code&gt; subcommands make heavy use of resource addressing for targeting and filtering specific resources and modules within the state.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ef91da80f9f10793d351a3efb31b9d6b3f07ca8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform taint&lt;/code&gt; command manually marks a Terraform-managed resource as tainted, forcing it to be destroyed and recreated on the next apply.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="007afc800347fd3babfaee0bf232a290cce4bbac" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform untaint&lt;/code&gt; command manually unmarks a Terraform-managed resource as tainted, restoring it as the primary instance in the state. This reverses either a manual &lt;code&gt;terraform taint&lt;/code&gt; or the result of provisioners failing on a resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1288a13d218520ec766ee0694a571c20f049d3f7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform validate&lt;/code&gt; command is used to validate the syntax of the terraform files. Terraform performs a syntax check on all the terraform files in the directory, and will display an error if any of the files doesn't validate.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a2b4a93234bbecd614d642be4575a8c066b99af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform workspace delete&lt;/code&gt; command is used to delete an existing workspace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14f951f57fe41409434b8f91526ce612346d38c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform workspace list&lt;/code&gt; command is used to list all existing workspaces.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c4c7a4f1a8262ea3973cd0865a7e82c9858dcb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform workspace new&lt;/code&gt; command is used to create a new workspace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbc8bde3fed369308a37a765b9bab9f196c416cb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform workspace select&lt;/code&gt; command is used to choose a different workspace to use for further operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb08e0a90941a92328cec8fd1b48c8a484563b8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform workspace&lt;/code&gt; command is used to manage &lt;a href=&quot;../../state/workspaces&quot;&gt;workspaces&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f3be851f4f294201c7496e31ef222a9d4bd668" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform&lt;/code&gt; CLI tool includes several provisioner plugins for immediate use. It does not include any Providers, due to the large number of them and the various supported versions. Terraform reads configuration files and installs the needed Providers automatically from releases.hashicorp.com. At time of writing Terraform can only automatically install Providers distributed by HashiCorp, which are found on &lt;a href=&quot;https://releases.hashicorp.com&quot;&gt;releases.hashicorp.com&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e188aec77350d63f57f665962408c596bec083e9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform&lt;/code&gt; block configures the behavior of Terraform itself.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12268c98ceb0329cb4208622770f6cd941828109" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform&lt;/code&gt; configuration section is used to configure Terraform itself, such as requiring a minimum Terraform version to execute a configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="372ea8a381be6683f0bfc724da4d7f814acf194c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;terraform_remote_state&lt;/code&gt; data source will return all of the root outputs defined in the referenced remote state, an example output might look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23d8d6bca62c1f5a8ca387f66383b2703740563" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;test&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="635ada738daf65a4048fd89008b5bb4680fa088e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;thumbnail_config&lt;/code&gt; object specifies information about the Amazon S3 bucket in which you want Elastic Transcoder to save thumbnail files: which bucket to use, which users you want to have access to the files, the type of access you want users to have, and the storage class that you want to assign to the files. If you specify values for &lt;code&gt;content_config&lt;/code&gt;, you must also specify values for &lt;code&gt;thumbnail_config&lt;/code&gt; even if you don't want to create thumbnails. (You control whether to create thumbnails when you create a job. For more information, see ThumbnailPattern in the topic Create Job.) If you specify values for &lt;code&gt;content_config&lt;/code&gt; and &lt;code&gt;thumbnail_config&lt;/code&gt;, omit the OutputBucket object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b43b8ecb4d17df94515c456d240b53e3b2d2af1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;thumbnail_config&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175a54e8fc94daaace920197d249f185a8b51e98" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;thumbnail_config_permissions&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d58e21eb1d77422e2761310a87bdf3364713d3fa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;thumbnails&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8e0a9ad7d37a8ca8bd14ca9865310106c512c9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;time_partitioning&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940aead3f605875f26a5a642c8de11652801d0a1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;timeouts&lt;/code&gt; block allows you to specify &lt;a href=&quot;../../../configuration/resources#timeouts&quot;&gt;timeouts&lt;/a&gt; for certain actions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61178ae976ab17802f5e0ff0873513e1d3ccaee3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;topic&lt;/code&gt; notification configuration supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae0d2994d823966db220c88fa9ce1e1289d9c04a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;transition&lt;/code&gt; object supports the following</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28f0d5a6c25b9897d76f099d25ec1825d011b14e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;trigger_template&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9725c9be78701ca6a398e648ad530e7c8841464e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triggers&lt;/code&gt; argument allows specifying an arbitrary set of values that, when changed, will cause the resource to be replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1ee7232716e18ff3953fb949af5f4a01b3e74c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triton_account&lt;/code&gt; data source queries Triton for Account information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4956829032ca1f74e61ccb205408afa99de81037" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triton_datacenter&lt;/code&gt; data source queries Triton for Data Center information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a6b7f670e6ef41d06b6521fb416257f335b90b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triton_fabric&lt;/code&gt; resource represents an fabric for a Triton account. The fabric is a logical set of interconnected switches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44691c18118c01b78acf893b257d0b3eda8ecd2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triton_fabric_network&lt;/code&gt; data source queries Triton for &lt;a href=&quot;https://docs.joyent.com/public-cloud/network/sdn&quot;&gt;Fabric Network&lt;/a&gt; information (e.g., subnet CIDR, gateway, state routes, etc.) based on the name of the Fabric Network and ID of the VLAN on which the network has been created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef769f677424b6abeafef02f46e90708dd8c2705" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triton_fabric_vlan&lt;/code&gt; data source queries Triton for &lt;a href=&quot;https://docs.joyent.com/public-cloud/network/sdn#vlans&quot;&gt;Fabric VLAN&lt;/a&gt; information (e.g., VLAN ID, etc.) based either on the name, VLAN ID or description of the Fabric VLAN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598f1695bde359c446974b95e5f284b5fc8c5bbd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triton_firewall_rule&lt;/code&gt; resource represents a rule for the Triton cloud firewall.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92dc7ff342959c8a3ce25de36d4af87ca87257bd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triton_image&lt;/code&gt; data source queries the Triton Image API for an image ID based on a variety of different parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb67c3962ed22e2eb53df075565db79341a07929" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triton_instance_template&lt;/code&gt; resource represents a Triton Service Group instance template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23504d5cf4c5146c3961c50cf36e1dbe8e87d428" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triton_key&lt;/code&gt; resource represents an SSH key for a Triton account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e4d611546f3adb9a3022738bda01dc0ac4d062" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triton_machine&lt;/code&gt; resource represents a virtual machine or infrastructure container running in Triton.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be46e28111d8d654a87fce3cc6c9834d59ce9d0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triton_network&lt;/code&gt; data source queries Triton for Network information (e.g., Network ID, etc.) based on the name of the Network.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1b73b74a86ad6db45f84ff0443f79437ef7392" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triton_service_group&lt;/code&gt; resource represents a Triton Service Group.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f87548d7188bed4679370f71488e5e41dbfd9dc6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triton_snapshot&lt;/code&gt; resource represents a snapshot of a Triton machine. Snapshots are not usable with other instances; they are a point-in-time snapshot of the current instance. Snapshots can also only be taken of instances that are not of brand &lt;code&gt;kvm&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f454a11cf26c2dc08b0e3cdea627342e404f322" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;triton_vlan&lt;/code&gt; resource represents an Triton VLAN. A VLAN provides a low level way to segregate and subdivide the network. Traffic on one VLAN cannot, &lt;em&gt;on its own&lt;/em&gt;, reach another VLAN.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff41bd77813c74ab9d56e017e807d6519749a5a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;update&lt;/code&gt; block supports the following attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7250cdd73e8062c65118c873ba7998a250c552" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;url_path_map&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c0ab44b8841773054e86fc62f9d7f3243c8e01" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;user&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30d9d6f02a9dde189926862ac475c40c18b9d17b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;variable&lt;/code&gt; block configures a single input variable for a Terraform module. Each block declares a single variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7b619fd3982aaf940e6d37112a038af64e6ad55" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vcl&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6644bbfa1696d0ddea683ef6421af95727fb1bd8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vendor_options&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0763c059b70e926bd886d81907b0e586a741e223" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;version&lt;/code&gt; attribute value may either be a single explicit version or a version constraint expression. Constraint expressions use the following syntax to specify a &lt;em&gt;range&lt;/em&gt; of versions that are acceptable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90dfd7438e418b7673a48d65bc7e3c277594692" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;versioning&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72b1ed2985f3a083451ec6e5006f5785912722f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;versioning&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee466f70d3043cc5dad5c63de74a0ce99e0fdb17" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;video&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ce063eb615c2fe7cfff5ea88844d8afab2f0ab7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;video_codec_options&lt;/code&gt; map supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb974061a46e4cdc8ad8bd32de537895ff050ad" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;video_watermarks&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651360e2b4e033203c97be523bb7b3555cb78471" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;view&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0870e5694da279aae074ccf9f0032f0b5f26ea8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;volume&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cedeaa3f1091ad9ec483058653e3d710d4ff9e5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;volume&lt;/code&gt; mapping supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f218ed1d6d8cea283fd3430b150ace456b5bb781" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vpn_client_configuration&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="434b9ac8c3cd70345f32545cbdda5009ce945739" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; data source can be used to discover the ID of a cluster in vSphere. This is useful to fetch the ID of a cluster that you want to use for virtual machine placement via the &lt;a href=&quot;../r/virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource, allowing you to specify the cluster's root resource pool directly versus using the alias available through the &lt;a href=&quot;resource_pool&quot;&gt;&lt;code&gt;vsphere_resource_pool&lt;/code&gt;&lt;/a&gt; data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da10e723c3197c2220a67aa87985a816a161b997" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; resource can be used to create and manage clusters of hosts allowing for resource control of compute resources, load balancing through DRS, and high availability through vSphere HA.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32995c04290ac27ed33b660f39038d1dc5cc96d3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_compute_cluster_host_group&lt;/code&gt; resource can be used to manage groups of hosts in a cluster, either created by the &lt;a href=&quot;compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; resource or looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2477d5daa118a38650d382d27ed3b720c85882" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_compute_cluster_vm_affinity_rule&lt;/code&gt; resource can be used to manage VM affinity rules in a cluster, either created by the &lt;a href=&quot;compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; resource or looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f84d7e962dafe9064f2c69555173877013eb1f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_compute_cluster_vm_anti_affinity_rule&lt;/code&gt; resource can be used to manage VM anti-affinity rules in a cluster, either created by the &lt;a href=&quot;compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; resource or looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c3b5460686140dd24dc3789b16494d2aacff997" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_compute_cluster_vm_dependency_rule&lt;/code&gt; resource can be used to manage VM dependency rules in a cluster, either created by the &lt;a href=&quot;compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; resource or looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece9d3a1d2cc592db8ca04e1fa5a9a359170ab70" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_compute_cluster_vm_group&lt;/code&gt; resource can be used to manage groups of virtual machines in a cluster, either created by the &lt;a href=&quot;compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; resource or looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab00d7f638aaa0b5a9bb4a3a4d79536c5dbea6f2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_compute_cluster_vm_host_rule&lt;/code&gt; resource can be used to manage VM-to-host rules in a cluster, either created by the &lt;a href=&quot;compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; resource or looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e834409075b946d21e5caaf6ba8c66a535ea8762" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_custom_attribute&lt;/code&gt; data source can be used to reference custom attributes that are not managed by Terraform. Its attributes are exactly the same as the &lt;a href=&quot;../r/custom_attribute&quot;&gt;&lt;code&gt;vsphere_custom_attribute&lt;/code&gt; resource&lt;/a&gt;, and, like importing, the data source takes a name to search on. The &lt;code&gt;id&lt;/code&gt; and other attributes are then populated with the data found by the search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02575270f076ad1aa1b790a7a7bcb8e0e86218e7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_custom_attribute&lt;/code&gt; resource can be used to create and manage custom attributes, which allow users to associate user-specific meta-information with vSphere managed objects. Custom attribute values must be strings and are stored on the vCenter Server and not the managed object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25a9376134824676d280f100e7e051d372a8ac2e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_datacenter&lt;/code&gt; data source can be used to discover the ID of a vSphere datacenter. This can then be used with resources or data sources that require a datacenter, such as the &lt;a href=&quot;host&quot;&gt;&lt;code&gt;vsphere_host&lt;/code&gt;&lt;/a&gt; data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc994e0f547952d96c3addbb9b2457feec33787a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_datastore&lt;/code&gt; data source can be used to discover the ID of a datastore in vSphere. This is useful to fetch the ID of a datastore that you want to use to create virtual machines in using the &lt;a href=&quot;../r/virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40e9d8aa5fd21bd5dbec8b415a4e5fbe528a99f5" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_datastore_cluster&lt;/code&gt; data source can be used to discover the ID of a datastore cluster in vSphere. This is useful to fetch the ID of a datastore cluster that you want to use to assign datastores to using the &lt;a href=&quot;../r/nas_datastore&quot;&gt;&lt;code&gt;vsphere_nas_datastore&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../r/vmfs_datastore&quot;&gt;&lt;code&gt;vsphere_vmfs_datastore&lt;/code&gt;&lt;/a&gt; resources, or create virtual machines in using the &lt;a href=&quot;../r/virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f75f9dcad3f839d28d6f9c2cfe930ec68b1e31dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_datastore_cluster&lt;/code&gt; resource can be used to create and manage datastore clusters. This can be used to create groups of datastores with a shared management interface, allowing for resource control and load balancing through Storage DRS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85aed778def9b09855561edcd60f9f7a628e28af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_datastore_cluster_vm_anti_affinity_rule&lt;/code&gt; resource can be used to manage VM anti-affinity rules in a datastore cluster, either created by the &lt;a href=&quot;datastore_cluster&quot;&gt;&lt;code&gt;vsphere_datastore_cluster&lt;/code&gt;&lt;/a&gt; resource or looked up by the &lt;a href=&quot;../d/datastore_cluster&quot;&gt;&lt;code&gt;vsphere_datastore_cluster&lt;/code&gt;&lt;/a&gt; data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581e8167ab9903e34860957e0686264798c18358" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_distributed_port_group&lt;/code&gt; resource can be used to manage vSphere distributed virtual port groups. These port groups are connected to distributed virtual switches, which can be managed by the &lt;a href=&quot;distributed_virtual_switch&quot;&gt;&lt;code&gt;vsphere_distributed_virtual_switch&lt;/code&gt;&lt;/a&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ec0ec668e508793081d24a5fd50a188d0b0a8a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_distributed_virtual_switch&lt;/code&gt; data source can be used to discover the ID and uplink data of a of a vSphere distributed virtual switch (DVS). This can then be used with resources or data sources that require a DVS, such as the &lt;a href=&quot;../r/distributed_port_group&quot;&gt;&lt;code&gt;vsphere_distributed_port_group&lt;/code&gt;&lt;/a&gt; resource, for which an example is shown below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cf8069d62e303dd3a895f5dd1f5c03365bc2258" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_distributed_virtual_switch&lt;/code&gt; resource can be used to manage VMware Distributed Virtual Switches.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="598da126fb879aa3d1133f72c7c0bafc7d672982" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_dpm_host_override&lt;/code&gt; resource can be used to add a DPM override to a cluster for a particular host. This allows you to control the power management settings for individual hosts in the cluster while leaving any unspecified ones at the default power management settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d463d7048c906bb1c8b8ad936b7f7851e75b526e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_drs_vm_override&lt;/code&gt; resource can be used to add a DRS override to a cluster for a specific virtual machine. With this resource, one can enable or disable DRS and control the automation level for a single virtual machine without affecting the rest of the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a911c899d11cd19783edad99cf99e09918669d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_file&lt;/code&gt; resource can be used to upload files (such as virtual disk files) from the host machine that Terraform is running on to a target datastore. The resource can also be used to copy files between datastores, or from one location to another on the same datastore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ef6d1d99d1639b008a6067d90f171848a8fb06" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_folder&lt;/code&gt; resource can be used to manage vSphere inventory folders. The resource supports creating folders of the 5 major types - datacenter folders, host and cluster folders, virtual machine folders, datastore folders, and network folders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c4e60dece093347583637bce7e302912a1bcf46" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_ha_vm_override&lt;/code&gt; resource can be used to add an override for vSphere HA settings on a cluster for a specific virtual machine. With this resource, one can control specific HA settings so that they are different than the cluster default, accommodating the needs of that specific virtual machine, while not affecting the rest of the cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea65e3a28ce21e93308f726af7207f6b30f0e2d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_host&lt;/code&gt; data source can be used to discover the ID of a vSphere host. This can then be used with resources or data sources that require a host managed object reference ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e7531a992171bea176f267b56ede5cc927f89f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_host_port_group&lt;/code&gt; resource can be used to manage vSphere standard port groups on an ESXi host. These port groups are connected to standard virtual switches, which can be managed by the &lt;a href=&quot;host_virtual_switch&quot;&gt;&lt;code&gt;vsphere_host_virtual_switch&lt;/code&gt;&lt;/a&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d47c4cb1c7cd95e56384470f25ca1b434232f0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_host_virtual_switch&lt;/code&gt; resource can be used to manage vSphere standard switches on an ESXi host. These switches can be used as a backing for standard port groups, which can be managed by the &lt;a href=&quot;host_port_group&quot;&gt;&lt;code&gt;vsphere_host_port_group&lt;/code&gt;&lt;/a&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e39665a804242f09425a934d0a58d9b9629d8de" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_nas_datastore&lt;/code&gt; resource can be used to create and manage NAS datastores on an ESXi host or a set of hosts. The resource supports mounting NFS v3 and v4.1 shares to be used as datastores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36cdcc80de38cdb9daaa70fe953d65c19e538f9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_network&lt;/code&gt; data source can be used to discover the ID of a network in vSphere. This can be any network that can be used as the backing for a network interface for &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; or any other vSphere resource that requires a network. This includes standard (host-based) port groups, DVS port groups, or opaque networks such as those managed by NSX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71ab318a3a03ae84d97d4f6bd7394f1e4cd99041" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_resource_pool&lt;/code&gt; data source can be used to discover the ID of a resource pool in vSphere. This is useful to fetch the ID of a resource pool that you want to use to create virtual machines in using the &lt;a href=&quot;../r/virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e050fa55affa79aff184883212fd29611ca58c12" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_resource_pool&lt;/code&gt; resource can be used to create and manage resource pools in standalone hosts or on compute clusters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9a8398387c2be68f04a52926c4d672f9848452" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_storage_drs_vm_override&lt;/code&gt; resource can be used to add a Storage DRS override to a datastore cluster for a specific virtual machine. With this resource, one can enable or disable Storage DRS, and control the automation level and disk affinity for a single virtual machine without affecting the rest of the datastore cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc2ab931f48f67818d35d2c0f34152a8c69bfa4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_tag&lt;/code&gt; data source can be used to reference tags that are not managed by Terraform. Its attributes are exactly the same as the &lt;a href=&quot;../r/tag&quot;&gt;&lt;code&gt;vsphere_tag&lt;/code&gt; resource&lt;/a&gt;, and, like importing, the data source takes a name and category to search on. The &lt;code&gt;id&lt;/code&gt; and other attributes are then populated with the data found by the search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="682d35cf6034a13c87b7b6d3405cd3ce9e004427" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_tag&lt;/code&gt; resource can be used to create and manage tags, which allow you to attach metadata to objects in the vSphere inventory to make these objects more sortable and searchable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba70a8ad47dc05f372b15c6aae27aa790c0a6be4" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_tag_category&lt;/code&gt; data source can be used to reference tag categories that are not managed by Terraform. Its attributes are exactly the same as the &lt;a href=&quot;../r/tag_category&quot;&gt;&lt;code&gt;vsphere_tag_category&lt;/code&gt; resource&lt;/a&gt;, and, like importing, the data source takes a name to search on. The &lt;code&gt;id&lt;/code&gt; and other attributes are then populated with the data found by the search.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95b2b37f4208eda1c028b4ed74a8ffae5ada49a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_tag_category&lt;/code&gt; resource can be used to create and manage tag categories, which determine how tags are grouped together and applied to specific objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac639121b706b34918537201d9e773b88f8a3ab9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_virtual_disk&lt;/code&gt; resource can be used to create virtual disks outside of any given &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource. These disks can be attached to a virtual machine by creating a disk sub-resource with the &lt;a href=&quot;virtual_machine#attach&quot;&gt;&lt;code&gt;attach&lt;/code&gt;&lt;/a&gt; parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c299df5dcd0b71e031895f20d7f58ba1ca4c6a9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; data source can be used to find the UUID of an existing virtual machine or template. Its most relevant purpose is for finding the UUID of a template to be used as the source for cloning into a new &lt;a href=&quot;../r/virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource. It also reads the guest ID so that can be supplied as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55501e17ccc2743cd6407b2d39e7163ce96d8eed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; resource also supports Storage DRS, allowing the assignment of virtual machines to datastore clusters. When assigned to a datastore cluster, changes to a virtual machine's underlying datastores are ignored unless disks drift outside of the datastore cluster. The example below makes use of the &lt;a href=&quot;../d/datastore_cluster&quot;&gt;&lt;code&gt;vsphere_datastore_cluster&lt;/code&gt; data source&lt;/a&gt;, and the &lt;a href=&quot;#datastore_cluster_id&quot;&gt;&lt;code&gt;datastore_cluster_id&lt;/code&gt;&lt;/a&gt; configuration setting. Note that the &lt;a href=&quot;datastore_cluster&quot;&gt;&lt;code&gt;vsphere_datastore_cluster&lt;/code&gt; resource&lt;/a&gt; also exists to allow for management of datastore clusters directly in Terraform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4abed2e01977dafa7f98bd9aa4b486e9d8af1533" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; resource can be used to manage the complex lifecycle of a virtual machine. It supports management of disk, network interface, and CDROM devices, creation from scratch or cloning from template, and migration through both host and storage vMotion.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5bb8baaa7695565639aa96e79c304b11bed59e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; resource currently only supports standard VMDK-backed virtual disks - it does not support other special kinds of disk devices like RDM disks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1bf0bdbcf749d6b7114a38488ef013088ee441" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; resource supports live migration (otherwise known as vMotion) both on the host and storage level. One can migrate the entire VM to another host, cluster, resource pool, or datastore, and migrate or pin a single disk to a specific datastore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f02779224c01f0e0f09955902dacfdf37f3182" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_virtual_machine_snapshot&lt;/code&gt; resource can be used to manage snapshots for a virtual machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad90a0622e51824d64c5ec036c17e88b9069bbe9" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_vmfs_datastore&lt;/code&gt; resource can be used to create and manage VMFS datastores on an ESXi host or a set of hosts. The resource supports using any SCSI device that can generally be used in a datastore, such as local disks, or disks presented to a host or multiple hosts over Fibre Channel or iSCSI. Devices can be specified manually, or discovered using the &lt;a href=&quot;../d/vmfs_disks&quot;&gt;&lt;code&gt;vsphere_vmfs_disks&lt;/code&gt;&lt;/a&gt; data source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4044465cc045426352f28ba46d99a7a050717aaa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;vsphere_vmfs_disks&lt;/code&gt; data source can be used to discover the storage devices available on an ESXi host. This data source can be combined with the &lt;a href=&quot;../r/vmfs_datastore&quot;&gt;&lt;code&gt;vsphere_vmfs_datastore&lt;/code&gt;&lt;/a&gt; resource to create VMFS datastores based off a set of discovered disks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32301cdd334a34793184c9bd39c0d97530cfdf1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;waf_configuration&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a587ae68304e244d8979f892f01cecb4ba9e798b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;website&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0211df3ddeea346e4e4bb4f081bca585d32ad6a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;website&lt;/code&gt; object supports the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3692952c5a5d522d15583deb4868ee6d22de2ff" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;widget&lt;/code&gt; mapping supports the following arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168a7c961d324e45fbec0ba74734f9024d0f728d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;workload_metadata_config&lt;/code&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364825bcf6ba400e9d98422050e042a728ba74bc" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;action.response&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d64f20c647616bf40a4f5fa0ec8c3a8bb80763b" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;action&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf74df3135ccf5c374706381edc331c5878c98e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;auto_healing_policies&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d5557fe917baa482ff01500658931e395ebcfbc" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cluster_config.gce_cluster_config&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e80d1b368e801939f6cc988343486a6edb1bf9" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cluster_config.master_config&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9db7eca8e330687f9795c32765aa2f73a73e866" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cluster_config.preemptible_worker_config&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25d1282ced4df436e4191b63d85b65ae53614de3" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cluster_config.software_config&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43c720a51796d2cb1c0d2957f0dc18b1db7db4c6" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cluster_config.worker_config&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d38ec10023a07be96a3cdca4b3c6ab25419d59" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;cluster_config&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6edb4d11c5ed3fee322247e262a5d736fdad3da5" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;initialization_action&lt;/strong&gt; block (Optional) can be specified multiple times and supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2be95d56f0e5d6bc3149e9449a2a99b9e554183" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;match.request&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edec5b30281349b52cff6d04604452cf4b61b591" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;match.response&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a26ab5dfdc4201e02b0c3a83e77762d729bd03e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;match&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1cde70cce9708e53c27ee8b2ae46bb030e8f0b8" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;minify&lt;/strong&gt; attribute supports the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7107b5a569acf1d8a5b9173a7673f86e42fc0f7" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;mobile_redirect&lt;/strong&gt; attribute supports the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7440b84b07ebbd52dcb8deb700cf6000f8aaf49c" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;named_port&lt;/strong&gt; block supports: (Include a &lt;code&gt;named_port&lt;/code&gt; block for each named-port required).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b6cdf23f6b2fb29bc0e8fe79a1c375291cae0e" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;rolling_update_policy&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9506ef9819abc03ff6100337195606db5db5cea5" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;security_header&lt;/strong&gt; attribute supports the following fields:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25fd5545c16fa6362df5b7ffc997875d229182dd" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;settings&lt;/strong&gt; block supports settings that may be applied to the zone. These may be on/off values, unitary fields, string values, integers or nested objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dabdeb1e2163262a57bdcb341aff6342f92c628" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;target_size&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c51a435b12f8a79c2d6b4e849357fb228bd29b9" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;version&lt;/strong&gt; block supports:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1453a3d09e7dfe00f6cb41116d00f8e1a9fb66d" translate="yes" xml:space="preserve">
          <source>The ACM certificate resource allows requesting and management of certificates from the Amazon Certificate Manager.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9b8fdbcff97c82bb540b398e15fbb1f168f2cba" translate="yes" xml:space="preserve">
          <source>The AMI resource allows the creation and management of a completely-custom &lt;em&gt;Amazon Machine Image&lt;/em&gt; (AMI).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37f537ed8df423f9d5bcb221cac5329f2f2a46d" translate="yes" xml:space="preserve">
          <source>The API Gateway Usage Plan argument layout is a structure composed of several sub-resources - these resources are laid out below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31a114eda4baf6e7791b9f35c8d936a73279737" translate="yes" xml:space="preserve">
          <source>The API documentation covers ResourceData well, as well as the core providers in Terraform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f05e224e3318a21667c3a75c92d39b8f166b7f" translate="yes" xml:space="preserve">
          <source>The API follows regular HTTP status semantics. To make implementing a complete client easier, some details on our policy and potential future status codes are listed below. A robust client should consider how to handle all of the following.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10b8b40c554ffef3c05dee1234aef8bc6e3ed7f" translate="yes" xml:space="preserve">
          <source>The API key is expected to be given as the first param, while the hostname is retrieved from the following environment variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfff118fd350bf71c05e12aef1d74c05d17d8b6d" translate="yes" xml:space="preserve">
          <source>The API key is output to stdout, but you can redirect this to a file using normal shell redirection if desired:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbf84fb18ff2dc91fc78c647ef772492ddf086f" translate="yes" xml:space="preserve">
          <source>The AWS Inspector Rules Packages data source allows access to the list of AWS Inspector Rules Packages which can be used by AWS Inspector within the region configured in the provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c48b63dcaa67fd05fee285784f8d6dc1da502868" translate="yes" xml:space="preserve">
          <source>The AWS member account can be imported by using the &lt;code&gt;account_id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87344cafcae3ad00234542ed6cd4f1896866baaa" translate="yes" xml:space="preserve">
          <source>The AWS organization can be imported by using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dfcba05c6076a16d1360521a5c6d4de9e1f61de" translate="yes" xml:space="preserve">
          <source>The AWS provider offers a flexible means of providing credentials for authentication. The following methods are supported, in this order, and explained below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560204f3ab3ce7bf8d8f983daef728a77b6af106" translate="yes" xml:space="preserve">
          <source>The Alicloud provider is used to interact with the many resources supported by &lt;a href=&quot;https://www.aliyun.com&quot;&gt;Alicloud&lt;/a&gt;. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6d7959b048d3406124e5dc1a34860ba88e9799" translate="yes" xml:space="preserve">
          <source>The Alicloud provider offers a flexible means of providing credentials for authentication. The following methods are supported, in this order, and explained below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd6a212d1979214c0aca73ad16a537a302bd43d" translate="yes" xml:space="preserve">
          <source>The Amazon Web Services (AWS) provider is used to interact with the many resources supported by AWS. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="188f35137f7a05acdd29ec4eeee3caf27540953d" translate="yes" xml:space="preserve">
          <source>The Amazon Web Services EKS service allows for simplified management of &lt;a href=&quot;https://kubernetes.io/&quot;&gt;Kubernetes&lt;/a&gt; servers. While the service itself is quite simple from an operator perspective, understanding how it interconnects with other pieces of the AWS service universe and how to configure local Kubernetes clients to managed clusters can be helpful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e4784af8513664d7e93cd8bb23a543482a7af99" translate="yes" xml:space="preserve">
          <source>The Arukas provider is used to manage &lt;a href=&quot;https://arukas.io/en/&quot;&gt;Arukas&lt;/a&gt; resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57381ee85c08d0723088702b99d672dedaf2574a" translate="yes" xml:space="preserve">
          <source>The Autoscaling Groups data source allows access to the list of AWS ASGs within a specific region. This will allow you to pass a list of AutoScaling Groups to other resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50f818ccfb89e0b754b05f528d0c2429e9d3b49" translate="yes" xml:space="preserve">
          <source>The Availability Zones data source allows access to the list of AWS Availability Zones which can be accessed by an AWS account within the region configured in the provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70b6cb3437f8f59dc12fc9d3b04bdcc6f798778" translate="yes" xml:space="preserve">
          <source>The Azure Provider is used to interact with the many resources supported by Azure Resource Manager (AzureRM) through its APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d561151c66afd7be67f028b3277ba966ea026860" translate="yes" xml:space="preserve">
          <source>The Azure Service Management provider is used to interact with the many resources supported by Azure. The provider needs to be configured with a &lt;a href=&quot;https://manage.windowsazure.com/publishsettings&quot;&gt;publish settings file&lt;/a&gt; and optionally a subscription ID before it can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f5388eaae787def48e42a375b54e0f062aa537" translate="yes" xml:space="preserve">
          <source>The Azure Stack Provider is used to manage resources in Azure Stack via the Azure Resource Manager API's.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a8957c71508fbe90a7b56a6773c166d9b87f1a4" translate="yes" xml:space="preserve">
          <source>The Batch Compute Environment data source allows access to details of a specific compute environment within AWS Batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d52c3012ec595097262d991cdb82990a7c91c7c2" translate="yes" xml:space="preserve">
          <source>The Batch Job Queue data source allows access to details of a specific job queue within AWS Batch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ae3300df9e46b5ed6737044c9b453ff1b08b4bb" translate="yes" xml:space="preserve">
          <source>The Best Practices section is a work in progress, with more sections to come.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2386b49e1797a9c309104d4a32ef901b7a9f15d" translate="yes" xml:space="preserve">
          <source>The Bitbucket provider allows you to manage resources including repositories, webhooks, and default reviewers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4513931e4e5e103ad0be3709cd69f6e2c5c1a3b" translate="yes" xml:space="preserve">
          <source>The CLI configuration file configures per-user settings for CLI behaviors, which apply across all Terraform working directories. This is separate from &lt;a href=&quot;../configuration/index&quot;&gt;your infrastructure configuration&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74afc6f9d9ba382cfab92518aca14bbf27774c97" translate="yes" xml:space="preserve">
          <source>The CLI usage and output of the state commands is structured to be friendly for Unix tools such as grep, awk, etc. Additionally, the CLI insulates users from any format changes within the state itself. The Terraform project will keep the CLI working while the state format underneath it may shift.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="106015418385573569290af55ca79d1d85346926" translate="yes" xml:space="preserve">
          <source>The CRUD operations in more detail, along with their contracts:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd5656f2ca06b7cc3418e7aca9c7c74d63ffd2ef" translate="yes" xml:space="preserve">
          <source>The Canonical User ID data source allows access to the &lt;a href=&quot;http://docs.aws.amazon.com/general/latest/gr/acct-identifiers.html&quot;&gt;canonical user ID&lt;/a&gt; for the effective account in which Terraform is working.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692ba6712485a4f221248149cac3c6d139ded354" translate="yes" xml:space="preserve">
          <source>The Circonus provider gives the ability to manage a Circonus account.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="354fb19ffcb784c9fe497ceb77ca73491442997a" translate="yes" xml:space="preserve">
          <source>The CloudFormation Export data source allows access to stack exports specified in the &lt;a href=&quot;http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/outputs-section-structure.html&quot;&gt;Output&lt;/a&gt; section of the Cloudformation Template using the optional Export Property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2259f5b3f74b4551e57981f19415f88434987569" translate="yes" xml:space="preserve">
          <source>The CloudFormation Stack data source allows access to stack outputs and other useful data including the template body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd7ab73714fc11f8aed3b47e68db1a702da363d8" translate="yes" xml:space="preserve">
          <source>The CloudFront distribution argument layout is a complex structure composed of several sub-resources - these resources are laid out below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc9b508f1d142312ddee68b67f899de2add1a2d" translate="yes" xml:space="preserve">
          <source>The CloudStack provider is used to interact with the many resources supported by CloudStack. The provider needs to be configured with a URL pointing to a running CloudStack API and the proper credentials before it can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9efad5df147add92cdb9d8aea5cee7118857f8fa" translate="yes" xml:space="preserve">
          <source>The Cloudflare provider is used to interact with the DNS resources supported by Cloudflare. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dd23fff8156112024e08de685c3dde97ce4ea25" translate="yes" xml:space="preserve">
          <source>The Cobbler provider is used to interact with a locally installed &lt;a href=&quot;http://cobbler.github.io&quot;&gt;Cobbler&lt;/a&gt; service. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="148f32f4f121f7e08328414404dda05e74f37711" translate="yes" xml:space="preserve">
          <source>The CodeCommit Repository data source allows the ARN, Repository ID, Repository URL for HTTP and Repository URL for SSH to be retrieved for an CodeCommit repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a3e7e879de322a9c0747373b3c183aba50977b" translate="yes" xml:space="preserve">
          <source>The Cognito Identity Pool Roles Attachment argument layout is a structure composed of several sub-resources - these resources are laid out below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c162a4f470986021226d0fda003acc988ded17ad" translate="yes" xml:space="preserve">
          <source>The Cognito Identity Pool argument layout is a structure composed of several sub-resources - these resources are laid out below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="234db832818ffa4ad5ce7b1a1f038454390daf70" translate="yes" xml:space="preserve">
          <source>The DNS provider supports DNS updates (RFC 2136). Additionally, the provider can be configured with secret key based transaction authentication (RFC 2845).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2019bdad7894f813af5ab19b950ea9261e43a93c" translate="yes" xml:space="preserve">
          <source>The DNSMadeEasy provider is used to interact with the resources supported by DNSMadeEasy. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbff771142975f85447cfdaac68300cdfb93c0e3" translate="yes" xml:space="preserve">
          <source>The DNSimple provider is used to interact with the resources supported by DNSimple. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb1c384fe9359336febdbbc1a17c21c69f427ca" translate="yes" xml:space="preserve">
          <source>The Dataflow resource is considered 'existing' while it is in a nonterminal state. If it reaches a terminal state (e.g. 'FAILED', 'COMPLETE', 'CANCELLED'), it will be recreated on the next 'apply'. This is as expected for jobs which run continously, but may surprise users who use this resource for other kinds of Dataflow jobs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad0212ad76083a2c066ab55422560edca17fa0b" translate="yes" xml:space="preserve">
          <source>The DigitalOcean (DO) provider is used to interact with the resources supported by DigitalOcean. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3840bb71f751b67e0ef964bad1552d601fd8998b" translate="yes" xml:space="preserve">
          <source>The Dns Domain Groups data source provides a list of Alicloud Dns Domain Groups in an Alicloud account according to the specified filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b6123a65143f0d2a7971297fecb7ff43e36784" translate="yes" xml:space="preserve">
          <source>The Dns Domain Records data source provides a list of Alicloud Dns Domain Records in an Alicloud account according to the specified filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35fd9eff87057805d575a40082fe6ada40866c41" translate="yes" xml:space="preserve">
          <source>The Dns Domains data source provides a list of Alicloud Dns Domains in an Alicloud account according to the specified filters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600a8349fe4c49be526058f61353578f4cb7e9b8" translate="yes" xml:space="preserve">
          <source>The Docker provider is used to interact with Docker containers and images. It uses the Docker API to manage the lifecycle of Docker containers. Because the Docker provider uses the Docker API, it is immediately compatible not only with single server Docker but Swarm and any additional Docker-compatible API hosts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e1b1d9219289a73502c0be239f3fa6c7d5864d8" translate="yes" xml:space="preserve">
          <source>The Dyn provider is used to interact with the resources supported by Dyn. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606534e7b3b710a1e2bb80026c35becc651f8c7b" translate="yes" xml:space="preserve">
          <source>The DynamoDB API expects attribute structure (name and type) to be passed along when creating or updating GSI/LSIs or creating the initial table. In these cases it expects the Hash / Range keys to be provided; because these get re-used in numerous places (i.e the table's range key could be a part of one or more GSIs), they are stored on the table object to prevent duplication and increase consistency. If you add attributes here that are not used in these scenarios it can cause an infinite loop in planning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27412317e7cd0e21b2b00ad666e48b43842c8f34" translate="yes" xml:space="preserve">
          <source>The ECR Repository data source allows the ARN, Repository URI and Registry ID to be retrieved for an ECR repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcfc1ec2c0c4ba254a49d09a050a7826d7e07ce1" translate="yes" xml:space="preserve">
          <source>The ECS Cluster data source allows access to details of a specific cluster within an AWS ECS service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff504bda030b868d9d2582ddc7a51e005fbda872" translate="yes" xml:space="preserve">
          <source>The ECS Service data source allows access to details of a specific Service within a AWS ECS Cluster.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6672159106047f75330fa3bf171606d4db285876" translate="yes" xml:space="preserve">
          <source>The ECS container definition data source allows access to details of a specific container within an AWS ECS service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac0129a1c3f668d978706a000acc3879eaf2d6cf" translate="yes" xml:space="preserve">
          <source>The ECS task definition data source allows access to details of a specific AWS ECS task definition.</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
