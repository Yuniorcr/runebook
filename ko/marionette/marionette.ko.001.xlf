<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="marionette">
    <body>
      <group id="marionette">
        <trans-unit id="47631645b3392cb307ba9a6b2b2ae73b5b84b721" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2017 Muted Solutions, LLC</source>
          <target state="translated">&amp;copy; 2017 Muted Solutions, LLC</target>
        </trans-unit>
        <trans-unit id="09cf610433c65baa8915ec9f0cbfcf96a94b7a66" translate="yes" xml:space="preserve">
          <source>// myview.js import Mn from './mymarionette'; const MyView = Mn.View.extend({});</source>
          <target state="translated">// myview.js import Mn from './mymarionette'; const MyView = Mn.View.extend({});</target>
        </trans-unit>
        <trans-unit id="8c233cee50223f74202a02f9f3db464c01268635" translate="yes" xml:space="preserve">
          <source>// new behavior const {View} = require('backbone.marionette'); const MyView = View.extend({});</source>
          <target state="translated">// new behavior const {View} = require('backbone.marionette'); const MyView = View.extend({});</target>
        </trans-unit>
        <trans-unit id="ab459c520c91d7b910ff9fd62c8d2a671fba23af" translate="yes" xml:space="preserve">
          <source>// new behaviors // import only needed class/function import {View} from 'backbone.marionette'; const MyView = View.extend({});</source>
          <target state="translated">// new behaviors // import only needed class/function import {View} from 'backbone.marionette'; const MyView = View.extend({});</target>
        </trans-unit>
        <trans-unit id="db2ef1485c5294bcfb27a072c99636ed1e462419" translate="yes" xml:space="preserve">
          <source>// old behavior const Mn = require('backbone.marionette'); const MyView = Mn.View.extend({});</source>
          <target state="translated">// old behavior const Mn = require('backbone.marionette'); const MyView = Mn.View.extend({});</target>
        </trans-unit>
        <trans-unit id="2058ef8589b2fa905d240d1a90883146b700707f" translate="yes" xml:space="preserve">
          <source>// or create a module that default exports all functions/classes // mymarionette.js -&amp;gt; can be configured as an alias for marionette or any other module name with webpack import * as Mn from 'backbone.marionette'; export default Mn;</source>
          <target state="translated">// or create a module that default exports all functions/classes // mymarionette.js -&amp;gt; can be configured as an alias for marionette or any other module name with webpack import * as Mn from 'backbone.marionette'; export default Mn;</target>
        </trans-unit>
        <trans-unit id="0a674185b1e39d97fdc7742c058e6e74e09b6ba9" translate="yes" xml:space="preserve">
          <source>// or import all (kills any chance of tree shaking) import * as Mn from 'backbone.marionette'; const MyView = Mn.View.extend({});</source>
          <target state="translated">// or import all (kills any chance of tree shaking) import * as Mn from 'backbone.marionette'; const MyView = Mn.View.extend({});</target>
        </trans-unit>
        <trans-unit id="f0955df057514858a2678aebdcb948e70dcd6b92" translate="yes" xml:space="preserve">
          <source>// using CommonJS syntax</source>
          <target state="translated">// using CommonJS syntax</target>
        </trans-unit>
        <trans-unit id="3bb9198e2815b99d14cf2bebffd9705c3fbdf619" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;#the-default-api&quot;&gt;The default API&lt;/a&gt; depends on Backbone's jQuery &lt;code&gt;$&lt;/code&gt; object however it does not rely on jQuery-specific behavior. This should make it easier to develop your own API. You will, however, &lt;a href=&quot;#backbone-jquery-integration&quot;&gt;need to also handle Backbone's jQuery integration&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#the-default-api&quot;&gt;기본 API&lt;/a&gt; 는 Backbone의 jQuery &lt;code&gt;$&lt;/code&gt; 객체에 의존하지만 jQuery 관련 동작에 의존하지 않습니다. 이를 통해 자체 API를 쉽게 개발할 수 있습니다. 그러나 &lt;a href=&quot;#backbone-jquery-integration&quot;&gt;Backbone의 jQuery 통합도 처리해야합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="67b990e1c18465e99e6d7cfde733716016b53cf0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;backbone.radio#marionette-integration&quot;&gt;Radio API&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;backbone.radio#marionette-integration&quot;&gt;라디오 API&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d64fce41a83d64724f87088353c9602d63c33bc7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;basics&quot;&gt;Continue Reading...&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;basics&quot;&gt;계속 읽기 ...&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09bbc84e9ce210e8bdf85badfc0a2bed0e1ef7e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;classes&quot;&gt;Continue Reading...&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;classes&quot;&gt;계속 읽기 ...&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0d15143d13b848e228878fd8fa0b69ce24f0000b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;classes&quot;&gt;View classes&lt;/a&gt; can be initialized with pre-rendered DOM.</source>
          <target state="translated">&lt;a href=&quot;classes&quot;&gt;&lt;/a&gt;미리 렌더링 된 DOM으로 뷰 클래스 를 초기화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="814b6e7c951de54f132198019a3584e5b2b824c9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;common&quot;&gt;Continue Reading...&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;common&quot;&gt;계속 읽기 ...&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9d0ebcf154a093e377be7c06a9b74771b3d2e3bb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt; is a build tool that makes it easy to bundle NPM modules into your application, so you can &lt;code&gt;require&lt;/code&gt; them as you would import dependencies in any other language.</source>
          <target state="translated">&lt;a href=&quot;http://browserify.org/&quot;&gt;Browserify&lt;/a&gt; 는 NPM 모듈을 응용 프로그램에 쉽게 번들링 할 수있는 빌드 도구이므로 다른 언어로 종속성을 가져올 때 &lt;code&gt;require&lt;/code&gt; 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2125c72857906edf7387d521903ca0bf542d3fcd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://brunch.io/&quot;&gt;Brunch&lt;/a&gt; is fast front-end web app build tool with simple declarative config, seamless incremental compilation for rapid development, an opinionated pipeline and workflow, and core support for source maps.</source>
          <target state="translated">&lt;a href=&quot;http://brunch.io/&quot;&gt;Brunch&lt;/a&gt; 는 간단한 선언적 구성, 신속한 개발을위한 완벽한 증분 컴파일, 의견이 많은 파이프 라인 및 워크 플로우, 소스 맵에 대한 핵심 지원 기능을 갖춘 빠른 ​​프런트 엔드 웹 앱 빌드 도구입니다.</target>
        </trans-unit>
        <trans-unit id="02c39f4bb9aafafb62565d32ff12fc312bbc3832" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; is task runner. &lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/browserify-grunt&quot;&gt;Here&lt;/a&gt; is simple Browserify + Grunt skeleton.</source>
          <target state="translated">&lt;a href=&quot;http://gruntjs.com/&quot;&gt;그런트&lt;/a&gt; 는 작업 러너입니다. &lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/browserify-grunt&quot;&gt;다음&lt;/a&gt; 은 간단한 Browserify + Grunt 스켈레톤입니다.</target>
        </trans-unit>
        <trans-unit id="abfdaabb123d3a0edd48b9c223d4e0f8efc2ce44" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt; is streaming build system. &lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/browserify-gulp&quot;&gt;Here&lt;/a&gt; is simple Browserify + Gulp skeleton.</source>
          <target state="translated">&lt;a href=&quot;http://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt; 는 스트리밍 빌드 시스템입니다. &lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/browserify-gulp&quot;&gt;다음&lt;/a&gt; 은 간단한 Browserify + Gulp 스켈레톤입니다.</target>
        </trans-unit>
        <trans-unit id="5428da7147229638aea904096866d17c9f3b7e0d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/QubitProducts/cherrytree&quot;&gt;Cherrytree&lt;/a&gt; Nested routes, like Ember, but without the transition lifecycle.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/QubitProducts/cherrytree&quot;&gt;&lt;/a&gt;Ember와 같지만 전환 수명 주기가없는 Cherrytree 중첩 경로.</target>
        </trans-unit>
        <trans-unit id="36db0f9c9448d4a4e847192d9a6872f536c822f2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/leeluolee/stateman&quot;&gt;Stateman&lt;/a&gt; Angular-UI style routing, without the Angular</source>
          <target state="translated">&lt;a href=&quot;https://github.com/leeluolee/stateman&quot;&gt;&lt;/a&gt;Angular가없는 Stateman Angular-UI 스타일 라우팅</target>
        </trans-unit>
        <trans-unit id="88fdddb6ee133c67db00a243b9f465a3d1ed9774" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/browserify&quot;&gt;Here&lt;/a&gt; we prepared simple marionettejs skeleton with Browserify.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/browserify&quot;&gt;여기&lt;/a&gt; 에서는 Browserify를 사용하여 간단한 marionettejs 스켈레톤을 준비했습니다.</target>
        </trans-unit>
        <trans-unit id="60f4675271cfa6f7280c9a54d54995df4a5cfd68" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/brunch&quot;&gt;Here&lt;/a&gt; we prepared simple marionettejs skeleton with Brunch.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/brunch&quot;&gt;여기&lt;/a&gt; 에서 Brunch를 사용하여 간단한 marionettejs 스켈레톤을 준비했습니다.</target>
        </trans-unit>
        <trans-unit id="cad883225f0c920b171d1321991db850df41ebee" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/webpack&quot;&gt;Here&lt;/a&gt; we prepared simple marionettejs skeleton with Webpack.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/marionettejs/marionette-integrations/tree/master/webpack&quot;&gt;여기서&lt;/a&gt; Webpack으로 간단한 marionettejs 스켈레톤을 준비했습니다.</target>
        </trans-unit>
        <trans-unit id="202f1978987e02cb38aa5357289f2efdf60f3b84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tildeio/router.js&quot;&gt;router.js&lt;/a&gt; This is what Ember's router is built on top of. It has all of the features needed for good routing</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tildeio/router.js&quot;&gt;router.js&lt;/a&gt; 이것은 Ember의 라우터 위에 구축 된 것입니다. 그것은 좋은 라우팅에 필요한 모든 기능을 가지고 있습니다</target>
        </trans-unit>
        <trans-unit id="9702dc3cc1966ca0ca8ce9463fd2db3b42e96b31" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://webpack.github.io/&quot;&gt;Webpack&lt;/a&gt; is a build tool that makes it easy to pull your dependencies together into a single bundle to be delivered to your browser's &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; tag. It works particularly well with Marionette and jQuery.</source>
          <target state="translated">&lt;a href=&quot;https://webpack.github.io/&quot;&gt;Webpack&lt;/a&gt; 은 브라우저의 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 태그 로 전달하기 위해 종속성을 단일 번들로 쉽게 가져올 수있는 빌드 도구입니다 . Marionette 및 jQuery와 특히 잘 작동합니다.</target>
        </trans-unit>
        <trans-unit id="5fb7fd1c2d5baf6b8ac397a5c6e0a72f9c393979" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;NPM&lt;/a&gt; is the package manager for JavaScript.</source>
          <target state="translated">&lt;a href=&quot;https://www.npmjs.com/&quot;&gt;NPM&lt;/a&gt; 은 JavaScript의 패키지 관리자입니다.</target>
        </trans-unit>
        <trans-unit id="ac102d7daea090ff65a880ce6f7a67a95768035a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;routing&quot;&gt;Continue Reading&lt;/a&gt; about routing in Marionette.</source>
          <target state="translated">&lt;a href=&quot;routing&quot;&gt;&lt;/a&gt;마리오네트에서의 노선에 대해 계속 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="7173d82c2000cf823cbce4bda37c83223e938dd9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Application&lt;/code&gt; includes:</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; 내용 :</target>
        </trans-unit>
        <trans-unit id="cf91026e1f74fb84beeda42c38ada26e257e8b8d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Application&lt;/code&gt;, &lt;code&gt;Behavior&lt;/code&gt;, and &lt;code&gt;Region&lt;/code&gt; no longer extend &lt;code&gt;MnObject&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; , &lt;code&gt;Behavior&lt;/code&gt; 및 &lt;code&gt;Region&lt;/code&gt; 더 이상 &lt;code&gt;MnObject&lt;/code&gt; 를 확장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="20982c7e5d90eff624ea54176b566296fa202541" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Backbone.View&lt;/code&gt; allows the user to change the view's &lt;code&gt;el&lt;/code&gt; after instantiaton using &lt;a href=&quot;http://backbonejs.org/#View-setElement&quot;&gt;&lt;code&gt;setElement&lt;/code&gt;&lt;/a&gt;. This method can be used in Marionette as well, but should be done with caution. &lt;code&gt;setElement&lt;/code&gt; will redelegate view events, but it will essentially ignore children of the view, whether through &lt;code&gt;regions&lt;/code&gt; or through &lt;code&gt;children&lt;/code&gt; and the view's &lt;code&gt;behaviors&lt;/code&gt; will also be unaware of the change. It is likely better to reconstuct a new view with the new &lt;code&gt;el&lt;/code&gt; than to try to change the &lt;code&gt;el&lt;/code&gt; of an existing view.</source>
          <target state="translated">&lt;code&gt;Backbone.View&lt;/code&gt; 는 사용자가 &lt;a href=&quot;http://backbonejs.org/#View-setElement&quot;&gt; &lt;code&gt;setElement&lt;/code&gt; 를&lt;/a&gt; 사용하여 인스턴스화 한 후 뷰의 &lt;code&gt;el&lt;/code&gt; 을 변경할 수 있도록합니다 . 이 방법은 마리오네트에서도 사용할 수 있지만주의해서 수행해야합니다. &lt;code&gt;setElement&lt;/code&gt; 는 뷰 이벤트를 다시 전달하지만 &lt;code&gt;regions&lt;/code&gt; 통해 또는 &lt;code&gt;children&lt;/code&gt; 통해 뷰의 하위를 무시 하고 뷰의 &lt;code&gt;behaviors&lt;/code&gt; 도 변경을 인식하지 못합니다. 그것은 가능성이 더 나은 새와 새보기 reconstuct하는 것입니다 &lt;code&gt;el&lt;/code&gt; 변경하려고하는 것보다 &lt;code&gt;el&lt;/code&gt; 기존의 견해를.</target>
        </trans-unit>
        <trans-unit id="7895bb5efced3a633afb536e08df12b18e5d47d6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Behavior&lt;/code&gt; includes:</source>
          <target state="translated">&lt;code&gt;Behavior&lt;/code&gt; 은 다음을 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="f05aee5cca8aada039157326b214fe6997926674" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Behavior&lt;/code&gt;s are particularly good at factoring out the common user, model and collection interactions to be utilized across your application. Unlike the other Marionette classes, &lt;code&gt;Behavior&lt;/code&gt;s are not meant to be instantiated directly. Instead a &lt;code&gt;Behavior&lt;/code&gt; should be instantiated by the view it is related to by &lt;a href=&quot;#using-behaviors&quot;&gt;attaching the a behavior class definition to the view&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Behavior&lt;/code&gt; 은 특히 ​​응용 프로그램 전체에서 활용할 공통 사용자, 모델 및 컬렉션 상호 작용을 고려할 때 유용합니다. 다른 마리오네트 클래스와 달리 &lt;code&gt;Behavior&lt;/code&gt; 은 직접 인스턴스화되지 않습니다. 대신 &lt;a href=&quot;#using-behaviors&quot;&gt;동작 클래스 정의를보기&lt;/a&gt; 에 첨부하여 동작 과 관련된보기 에서 &lt;code&gt;Behavior&lt;/code&gt; 을 인스턴스화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="123d1c956ce175f74ae5d5f9edcc2978fd09bcce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Channel&lt;/code&gt; - a namespace mechanism.</source>
          <target state="translated">&lt;code&gt;Channel&lt;/code&gt; -네임 스페이스 메커니즘.</target>
        </trans-unit>
        <trans-unit id="b60c15ff3aff86cec11efc6dea6e9b83b32bdb1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt; Children</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 어린이</target>
        </trans-unit>
        <trans-unit id="fb0ee7062c6df7a1d1136bee5e8ba7b2d9ebb645" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt; Rendering</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 렌더링</target>
        </trans-unit>
        <trans-unit id="af81bdf07cfed98f3abf4a5f07cf522172a38c92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt; allows for a custom &lt;code&gt;viewComparator&lt;/code&gt; option if you want your &lt;code&gt;CollectionView&lt;/code&gt;'s children to be rendered with a different sort order than the underlying Backbone collection uses.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 는 사용자 정의 가능 &lt;code&gt;viewComparator&lt;/code&gt; 의 당신이 원하는 경우에 옵션 &lt;code&gt;CollectionView&lt;/code&gt; 의 아이들이 기본 백본 수집 용도가 아닌 다른 정렬 순서로 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1cb83406150968ca6e1dd5be1c66ec5878e2cb7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt; allows for a custom &lt;code&gt;viewFilter&lt;/code&gt; option if you want to prevent some of the underlying &lt;code&gt;children&lt;/code&gt; from being attached to the DOM. A &lt;code&gt;viewFilter&lt;/code&gt; can be a function, predicate object. or string.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 기본 &lt;code&gt;children&lt;/code&gt; 중 일부가 DOM에 첨부 되지 않도록하려면 CollectionView를 사용하여 사용자 정의 &lt;code&gt;viewFilter&lt;/code&gt; 옵션을 사용할 수 있습니다 . &lt;code&gt;viewFilter&lt;/code&gt; 는 함수, 술어 객체가 될 수 있습니다. 또는 문자열.</target>
        </trans-unit>
        <trans-unit id="cc1269f23b6c9be0fd6f9d0201db858b9bced6df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt; implements a &lt;code&gt;destroy&lt;/code&gt; method which automatically destroys its children and cleans up listeners.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 는 자동으로 자식을 삭제하고 리스너를 정리 하는 &lt;code&gt;destroy&lt;/code&gt; 메소드를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="3040c5ed744accb627f05175b5743f051c205444" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt; includes:</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 는 다음을 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="1e37f3d9cb9aae1d0a97389ba6be7f37aa91f8c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt;, &lt;code&gt;Region&lt;/code&gt;, and &lt;code&gt;View&lt;/code&gt; all have &lt;code&gt;setDomApi&lt;/code&gt;. Each extended class may have their own DOM API.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; , &lt;code&gt;Region&lt;/code&gt; 및 &lt;code&gt;View&lt;/code&gt; 모두에 &lt;code&gt;setDomApi&lt;/code&gt; 가 있습니다. 각 확장 클래스에는 자체 DOM API가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34ad899f58e43325846a1bcded86833796324d00" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;CollectionView&lt;/code&gt;&lt;code&gt;destroy:children&lt;/code&gt; and &lt;code&gt;before:destroy:children&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; &lt;code&gt;destroy:children&lt;/code&gt; 및 &lt;code&gt;before:destroy:children&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="7abda9a6a8e93857b5b53cfc526e7ef77e0e524f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;DEV_MODE&lt;/code&gt; which shows deprecation warnings was made a feature flag.</source>
          <target state="translated">&lt;code&gt;DEV_MODE&lt;/code&gt; 지원 중단 경고를 표시하는 DEV_MODE 가 기능 플래그가되었습니다.</target>
        </trans-unit>
        <trans-unit id="5a2c1b9e9afa901b4fe398fda65c132fec99f98a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Error&lt;/code&gt; utility was made private</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; 유틸리티가 비공개로 설정되었습니다</target>
        </trans-unit>
        <trans-unit id="c50cbc10619cc175f54210ac60ec8577efb565b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Event&lt;/code&gt; - alert other parts of your application that something happened.</source>
          <target state="translated">&lt;code&gt;Event&lt;/code&gt; -응용 프로그램의 다른 부분에 문제가 있음을 경고합니다.</target>
        </trans-unit>
        <trans-unit id="d0c8876fb7d7aec8c468e98be1a7d14f934f4e58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Marionette.Events&lt;/code&gt; and &lt;code&gt;triggerMethod&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Marionette.Events&lt;/code&gt; &lt;code&gt;triggerMethod&lt;/code&gt; 및 트리거 방법</target>
        </trans-unit>
        <trans-unit id="a84ef33e7a051f23e7e6569927dcc685148cbe09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MnObject&lt;/code&gt; includes:</source>
          <target state="translated">&lt;code&gt;MnObject&lt;/code&gt; 에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="df548fd9eecd8c84c957139fec2e890160cf467b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MnObject&lt;/code&gt; incorporates backbone conventions &lt;code&gt;initialize&lt;/code&gt;, &lt;code&gt;cid&lt;/code&gt; and &lt;code&gt;extend&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MnObject&lt;/code&gt; 는 &lt;code&gt;initialize&lt;/code&gt; , &lt;code&gt;cid&lt;/code&gt; 및 &lt;code&gt;extend&lt;/code&gt; 등의 백본 규칙을 통합 합니다.</target>
        </trans-unit>
        <trans-unit id="a87ea26d5fde341c78c0687077e4a55d0cb0a49b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MnObject&lt;/code&gt; incorporates backbone conventions &lt;code&gt;initialize&lt;/code&gt;, &lt;code&gt;cid&lt;/code&gt; and &lt;code&gt;extend&lt;/code&gt;. &lt;code&gt;MnObject&lt;/code&gt; includes:</source>
          <target state="translated">&lt;code&gt;MnObject&lt;/code&gt; 는 &lt;code&gt;initialize&lt;/code&gt; , &lt;code&gt;cid&lt;/code&gt; 및 &lt;code&gt;extend&lt;/code&gt; 등의 백본 규칙을 통합 합니다. &lt;code&gt;MnObject&lt;/code&gt; 에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="fef14cbc2948c7ccf551fc57bc97ef219259a8dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Region&lt;/code&gt; includes:</source>
          <target state="translated">&lt;code&gt;Region&lt;/code&gt; 은 다음을 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="c16cb2a2ce47f6f8a5f2e1274a08db7206b0bf9f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Request&lt;/code&gt; - execute single functions in a different part of your application.</source>
          <target state="translated">&lt;code&gt;Request&lt;/code&gt; -응용 프로그램의 다른 부분에서 단일 기능을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="ae4c744d4e5e108e59fcc71cfb3a9b2ab89d6ea7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TemplateCache&lt;/code&gt; render removed</source>
          <target state="translated">&lt;code&gt;TemplateCache&lt;/code&gt; 렌더 제거</target>
        </trans-unit>
        <trans-unit id="fc10064b7b1eaa98d4af4ef4d49592e32c47e0a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;View&lt;/code&gt; Children</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 어린이 보기</target>
        </trans-unit>
        <trans-unit id="88a7ba2730e89c1f73726c4e93b011c862453e60" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;View&lt;/code&gt; Rendering</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 렌더링</target>
        </trans-unit>
        <trans-unit id="d92dcec912cd4b63fb15a77bc37e4459cf6d83eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;View&lt;/code&gt; includes:</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 내용 :</target>
        </trans-unit>
        <trans-unit id="fc113172b52a764eb6bb16f45d1f817cefeeaaf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;View&lt;/code&gt; provides a simple interface for managing child-views with &lt;a href=&quot;#showing-a-child-view&quot;&gt;&lt;code&gt;showChildView&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#accessing-a-child-view&quot;&gt;&lt;code&gt;getChildView&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#detaching-a-child-view&quot;&gt;&lt;code&gt;detachChildView&lt;/code&gt;&lt;/a&gt;. These methods all access &lt;code&gt;regions&lt;/code&gt; within the view. We will cover this here but for more advanced information, see the &lt;a href=&quot;marionette.region&quot;&gt;documentation for regions&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 는 &lt;a href=&quot;#showing-a-child-view&quot;&gt; &lt;code&gt;showChildView&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#accessing-a-child-view&quot;&gt; &lt;code&gt;getChildView&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#detaching-a-child-view&quot;&gt; &lt;code&gt;detachChildView&lt;/code&gt; 로&lt;/a&gt; 자식 뷰를 관리하기위한 간단한 인터페이스를 제공합니다 . 이러한 메소드는 모두 보기 내의 &lt;code&gt;regions&lt;/code&gt; 액세스 합니다 . 여기에서는이 내용을 다루지 만보다 자세한 내용 &lt;a href=&quot;marionette.region&quot;&gt;은 지역&lt;/a&gt; 의 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cddc18abb65e6248e314cc80c91a2cf6e2003387" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add:child&lt;/code&gt; and &lt;code&gt;before:add:child&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;add:child&lt;/code&gt; 및 &lt;code&gt;before:add:child&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="98494a1cd951bc35fc3e7a1782181e4055562de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add:child&lt;/code&gt; and &lt;code&gt;remove:child&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;add:child&lt;/code&gt; 및 &lt;code&gt;remove:child&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="af8d53ebac23668ae6cf59db9f196d55c8894140" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add:region&lt;/code&gt; and &lt;code&gt;before:add:region&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;add:region&lt;/code&gt; 및 &lt;code&gt;before:add:region&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="b4e87d207035240bee1504a21f6be48ea6d863e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;add:region&lt;/code&gt; and &lt;code&gt;remove:region&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;add:region&lt;/code&gt; 및 &lt;code&gt;remove:region&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c0e48d34e57f4286a0bdecdb2f2cee88577e2a03" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attach&lt;/code&gt; and &lt;code&gt;before:attach&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;attach&lt;/code&gt; 및 사전 &lt;code&gt;before:attach&lt;/code&gt; 이벤트 첨부</target>
        </trans-unit>
        <trans-unit id="3bfee81482468750d8b9d90daf6e3eb4b85e482d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attach&lt;/code&gt; is the ideal event to setup any external DOM listeners such as &lt;code&gt;jQuery&lt;/code&gt; plugins that use the view's &lt;code&gt;el&lt;/code&gt;, but &lt;em&gt;not&lt;/em&gt; its contents.</source>
          <target state="translated">&lt;code&gt;attach&lt;/code&gt; 는 뷰의 &lt;code&gt;el&lt;/code&gt; 를 사용하지만 컨텐츠는 사용 &lt;em&gt;하지 않는 &lt;/em&gt; &lt;code&gt;jQuery&lt;/code&gt; 플러그인 과 같은 외부 DOM 리스너를 설정하는 이상적인 이벤트 입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7cf7a90c1e27710c9bd40a94a8189ba3f4fee93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;attachElContent&lt;/code&gt; not called unless the View renderer returns a value</source>
          <target state="translated">&lt;code&gt;attachElContent&lt;/code&gt; View 렌더러가 값을 반환하지 않으면 attachElContent 가 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="052036e9705a5efc8c99360f6336837c1a4a9838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before:detach&lt;/code&gt; is the ideal event to clean up any external DOM listeners such as &lt;code&gt;jQuery&lt;/code&gt; plugins that use the view's &lt;code&gt;el&lt;/code&gt;, but &lt;em&gt;not&lt;/em&gt; its contents.</source>
          <target state="translated">&lt;code&gt;before:detach&lt;/code&gt; 는 뷰의 &lt;code&gt;el&lt;/code&gt; 를 사용하지만 컨텐츠는 사용 &lt;em&gt;하지 않는 &lt;/em&gt; &lt;code&gt;jQuery&lt;/code&gt; 플러그인 과 같은 외부 DOM 리스너를 정리하는 이상적인 이벤트 입니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6584bd76da2589bdcdba4dbad27cf11c5576ed96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before:render&lt;/code&gt; will occur prior to removing any current child views. &lt;code&gt;render&lt;/code&gt; is an ideal event for attaching child views to the view's template as the first render &lt;em&gt;generally&lt;/em&gt; occurs prior to the view attaching to the DOM.</source>
          <target state="translated">&lt;code&gt;before:render&lt;/code&gt; 는 현재 자식 뷰를 제거하기 전에 발생합니다. &lt;code&gt;render&lt;/code&gt; 는 &lt;em&gt;일반적으로&lt;/em&gt; 뷰가 DOM에 연결되기 전에 첫 번째 렌더링이 발생 하므로 자식 뷰를 뷰의 템플릿에 연결하는 이상적인 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="ce95395d1a60b9d7ed2be8beeecf5dd85aea1de5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;before:start&lt;/code&gt; event</source>
          <target state="translated">&lt;code&gt;before:start&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="1b0a73da04a626d905fb9fd140ac3fd1a4744f4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channel.off('event')&lt;/code&gt; - stop listening to event</source>
          <target state="translated">&lt;code&gt;channel.off('event')&lt;/code&gt; -이벤트 청취 중지</target>
        </trans-unit>
        <trans-unit id="0590697c04a434c0ff1728c22cfb802f50ce5acf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channel.on('event', callback, [context])&lt;/code&gt; - when &lt;code&gt;event&lt;/code&gt; fires, call &lt;code&gt;callback&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;channel.on('event', callback, [context])&lt;/code&gt; - &lt;code&gt;event&lt;/code&gt; 발생시 &lt;code&gt;callback&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b45b277270e198c907525aee9e89f2efd751e39b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channel.once('event', callback, [context])&lt;/code&gt; - same as &lt;code&gt;on&lt;/code&gt;, but triggered only once</source>
          <target state="translated">&lt;code&gt;channel.once('event', callback, [context])&lt;/code&gt; - &lt;code&gt;on&lt;/code&gt; 과 동일 하지만 한 번만 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="57d3934921ad1ef79eef63f984f32fdcb2c1d55a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channel.trigger('event', ..args)&lt;/code&gt; - fires &lt;code&gt;event&lt;/code&gt; and passes args into the resulting &lt;code&gt;callback&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;channel.trigger('event', ..args)&lt;/code&gt; - &lt;code&gt;event&lt;/code&gt; 발생 시키고 결과 &lt;code&gt;callback&lt;/code&gt; 인수를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="a46c488a2eb166654d154c71bab2153ac46f75ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;channelName&lt;/code&gt; - defines the Radio channel that will be used for the requests and/or events</source>
          <target state="translated">&lt;code&gt;channelName&lt;/code&gt; - 요청 및 / 또는 이벤트에 사용될 라디오 채널을 정의합니다</target>
        </trans-unit>
        <trans-unit id="f0887aeac6b510667c9f9ffa16e490bcc6b82751" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;childViewEventPrefix&lt;/code&gt; flag is set to false by default</source>
          <target state="translated">&lt;code&gt;childViewEventPrefix&lt;/code&gt; 플래그는 기본적으로 false로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="6c8eabe9cb9ee31971a539370ce5f5a717e6c471" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;childViewTriggers&lt;/code&gt; is sugar on top of &lt;a href=&quot;#explicit-event-listeners&quot;&gt;&lt;code&gt;childViewEvents&lt;/code&gt;&lt;/a&gt; much in the same way that &lt;a href=&quot;dom.interaction#view-triggers&quot;&gt;view &lt;code&gt;triggers&lt;/code&gt;&lt;/a&gt; are sugar for &lt;a href=&quot;dom.interactions#view-events&quot;&gt;view &lt;code&gt;events&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;childViewTriggers&lt;/code&gt; 는 &lt;a href=&quot;dom.interaction#view-triggers&quot;&gt;view &lt;/a&gt; &lt;code&gt;triggers&lt;/code&gt; 가 &lt;a href=&quot;dom.interactions#view-events&quot;&gt;view &lt;/a&gt; &lt;code&gt;events&lt;/code&gt; 대한 sugar 와 같은 방식으로 &lt;a href=&quot;#explicit-event-listeners&quot;&gt; &lt;code&gt;childViewEvents&lt;/code&gt; &lt;/a&gt; 위에 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b817625c31310892111b337ebc498471141e16f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;defaults&lt;/code&gt; was removed from Behavior</source>
          <target state="translated">&lt;code&gt;defaults&lt;/code&gt; 동작에서 기본값 이 제거되었습니다</target>
        </trans-unit>
        <trans-unit id="bd5a553603649fcc11cdc11fda05a3a7b0058e8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destroy:children&lt;/code&gt; and &lt;code&gt;before:destroy:children&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;destroy:children&lt;/code&gt; 와 &lt;code&gt;before:destroy:children&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="2d5309569ef9aa5abc786d90078ab662dd26bde4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destroy&lt;/code&gt; A Region</source>
          <target state="translated">&lt;code&gt;destroy&lt;/code&gt; 지역을 파괴하다</target>
        </trans-unit>
        <trans-unit id="0eb6361a3d3868e59cb08810a063e8b6d4a453d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destroy&lt;/code&gt; and &lt;code&gt;before:destroy&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;destroy&lt;/code&gt; 와 &lt;code&gt;before:destroy&lt;/code&gt; 사건</target>
        </trans-unit>
        <trans-unit id="488405cc5d16feddbacdf4701412fe5b8505a05e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destroy&lt;/code&gt; functions only proxy a single argument</source>
          <target state="translated">&lt;code&gt;destroy&lt;/code&gt; 기능에만 프록시 단일 인수</target>
        </trans-unit>
        <trans-unit id="509f9b484d243c10dbefd185aacd471addf42aa4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;destroyView&lt;/code&gt; method destroys the view taking into consideration if is a Marionette.View descendant or vanilla Backbone view. It can be replaced by a &lt;code&gt;view.destroy()&lt;/code&gt; call if is ensured that view descends from Marionette.View</source>
          <target state="translated">&lt;code&gt;destroyView&lt;/code&gt; 메소드는 Marionette.View 하위 또는 바닐라 백본보기 인 경우 고려하여보기를 삭제합니다. 뷰가 Marionette에서 내려 오는 것이 보장되면 &lt;code&gt;view.destroy()&lt;/code&gt; 호출 로 대체 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83f7ced7a5e4d19e5712ae2bc6b4ed2f478dd089" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;detach&lt;/code&gt; and &lt;code&gt;before:detach&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;detach&lt;/code&gt; 및 사전 &lt;code&gt;before:detach&lt;/code&gt; 이벤트 분리</target>
        </trans-unit>
        <trans-unit id="6413f17a35dfbfbc6155b2ac46da79fc7802fc1c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dom:refresh&lt;/code&gt; event</source>
          <target state="translated">&lt;code&gt;dom:refresh&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="322169b94303c1a564b816a71b7821f2c8c37132" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;dom:remove&lt;/code&gt; event</source>
          <target state="translated">&lt;code&gt;dom:remove&lt;/code&gt; 이벤트 제거</target>
        </trans-unit>
        <trans-unit id="6fd27836009c4ba3942572a37417af29f2ff871d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;empty&lt;/code&gt; and &lt;code&gt;before:empty&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;empty&lt;/code&gt; 및 &lt;code&gt;before:empty&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="9b79b25975a40e4d69165a873b1c0143bb7b51ff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;emptyRegions()&lt;/code&gt; - Empty all of the regions on a view.</source>
          <target state="translated">&lt;code&gt;emptyRegions()&lt;/code&gt; -뷰에서 모든 영역을 비 웁니다 .</target>
        </trans-unit>
        <trans-unit id="1dce26841d06a454fbf5e8b9455ca3613e4209d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;before:filter&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;before:filter&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="f2a74716e6c23e3e913e5522272e23d742602946" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getChannel()&lt;/code&gt; - returns a Radio.Channel instance using &lt;code&gt;channelName&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;getChannel()&lt;/code&gt; -를 사용하여 Radio.Channel 인스턴스 반환 &lt;code&gt;channelName&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="37eee5d2432d275ff3cbcdb126ea19af3ad98c19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getRegion(name)&lt;/code&gt; - Request a region from a view by name.</source>
          <target state="translated">&lt;code&gt;getRegion(name)&lt;/code&gt; - 이름 으로보기에서 영역을 요청합니다.</target>
        </trans-unit>
        <trans-unit id="b1b4933ae3a59c04499de47dbcf453340420e3cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;getRegions()&lt;/code&gt; - Returns an object literal of all regions on the view organized by name.</source>
          <target state="translated">&lt;code&gt;getRegions()&lt;/code&gt; -뷰에서 이름으로 구성된 모든 영역의 객체 리터럴을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dd6c82e388e138e10087c1bfd50d669f05c3ef6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;hasRegion(name)&lt;/code&gt; - Check if a view has a region.</source>
          <target state="translated">&lt;code&gt;hasRegion(name)&lt;/code&gt; -뷰에 영역이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="89fc80a1ea69a8d15bfffda7e6cb1db4f4949343" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;initialize&lt;/code&gt; event</source>
          <target state="translated">&lt;code&gt;initialize&lt;/code&gt; 이벤트 초기화</target>
        </trans-unit>
        <trans-unit id="c9abec16b890f38da2ac0cb1187716318d754834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;myBehavior.destroy()&lt;/code&gt; will call &lt;code&gt;stopListening&lt;/code&gt; on the behavior instance, and it will remove the behavior from the view.</source>
          <target state="translated">&lt;code&gt;myBehavior.destroy()&lt;/code&gt; 는 비헤이비어 인스턴스에서 &lt;code&gt;stopListening&lt;/code&gt; 을 호출 하고 뷰에서 비헤이비어를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="b90eb0982fc0e621ccb23324cb83bd4605fa6fcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;noConflict&lt;/code&gt; was removed</source>
          <target state="translated">&lt;code&gt;noConflict&lt;/code&gt; 가 제거되었습니다</target>
        </trans-unit>
        <trans-unit id="adf6bf1f9a8b8695c84dbfe81c785275fc287d47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;onEvent&lt;/code&gt; Binding</source>
          <target state="translated">&lt;code&gt;onEvent&lt;/code&gt; 바인딩</target>
        </trans-unit>
        <trans-unit id="18e5a6a6c57aefaa0243fb9a0a3912fb3bfd9754" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;radioEvents&lt;/code&gt; - defines an events hash with the events to be listened and its respective handlers</source>
          <target state="translated">&lt;code&gt;radioEvents&lt;/code&gt; -수신 할 이벤트 및 해당 핸들러로 이벤트 해시를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ce0a70865cc4bec621b8271a50c47fe9bbe0a368" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;radioRequests&lt;/code&gt; - defines an events hash with the requests to be replied and its respective handlers</source>
          <target state="translated">&lt;code&gt;radioRequests&lt;/code&gt; - 응답 요청과 해당 핸들러로 이벤트 해시를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ae0173b266dfe4dd1ab9fe3c2e85dea195f2dbfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;region&lt;/code&gt; can also be passed as an option during instantiation.</source>
          <target state="translated">&lt;code&gt;region&lt;/code&gt; 인스턴스화하는 동안 region 을 옵션으로 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="543875f82966c1cf04f25e971435b45a175f65a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;regionClass&lt;/code&gt; can also be passed as an option during instantiation.</source>
          <target state="translated">&lt;code&gt;regionClass&lt;/code&gt; 는 인스턴스화 중에 옵션으로 전달 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c89c9efe9281c4ef2d4eea04879e8aa7c299791e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove:child&lt;/code&gt; and &lt;code&gt;before:remove:child&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;remove:child&lt;/code&gt; and &lt;code&gt;before:remove:child&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="54ac5bdf891443d8bc3fc6e96a701fe83dc41d42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;remove:region&lt;/code&gt; and &lt;code&gt;before:remove:region&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;remove:region&lt;/code&gt; 및 &lt;code&gt;before:remove:region&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="a6ff3fbe92a5c7c1363fa1f2af65c175dc2f5548" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;render:children&lt;/code&gt; and &lt;code&gt;before:render:children&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;render:children&lt;/code&gt; 및 &lt;code&gt;before:render:children&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="70aed940c6cd8ed64ea5c37d47374f2fd7ea0960" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;render&lt;/code&gt; and &lt;code&gt;before:render&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; 및 &lt;code&gt;before:render&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="12e89209f77de988aa39e01a9a59f874c8076556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;render&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; 및 &lt;code&gt;destroy&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="756fdc05ec72fdb0ec71a7c2c72daf94e54857d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;reset&lt;/code&gt; A Region</source>
          <target state="translated">&lt;code&gt;reset&lt;/code&gt; 지역 재설정</target>
        </trans-unit>
        <trans-unit id="ac2fc59a4f16db4288d226b48f67035120e46291" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;show&lt;/code&gt; and &lt;code&gt;before:show&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;show&lt;/code&gt; and &lt;code&gt;before:show&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6c1320e2ebd431f64be10ee051b86cb28f623f2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;show&lt;/code&gt; and &lt;code&gt;before:show&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;show&lt;/code&gt; and &lt;code&gt;before:show&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="cf97ee1b257812342ce0d5faa6a01403ae15291a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;sort&lt;/code&gt; and &lt;code&gt;before:sort&lt;/code&gt; events</source>
          <target state="translated">&lt;code&gt;sort&lt;/code&gt; 및 &lt;code&gt;before:sort&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="c11c0f47bfbc5200e11dff8924e494f26c699af6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;start&lt;/code&gt; event</source>
          <target state="translated">&lt;code&gt;start&lt;/code&gt; 이벤트 시작</target>
        </trans-unit>
        <trans-unit id="3e610a42ceb59bb4f61d45c94112cc9e50b235e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;triggerMethod('before:foo')&lt;/code&gt; fires the &quot;onBeforeFoo&quot; function</source>
          <target state="translated">&lt;code&gt;triggerMethod('before:foo')&lt;/code&gt; 는 &quot;onBeforeFoo&quot;함수를 발생시킵니다</target>
        </trans-unit>
        <trans-unit id="6aa3280d11edef62e97b529739afa06d1a5687ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;triggerMethod('foo')&lt;/code&gt; fires the &quot;onFoo&quot; function</source>
          <target state="translated">&lt;code&gt;triggerMethod('foo')&lt;/code&gt; 는 &quot;onFoo&quot;함수를 발생시킵니다</target>
        </trans-unit>
        <trans-unit id="18db47238dfef003888b3766217cb7ccb834682f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;triggerMethod('foo', bar)&lt;/code&gt; will call &lt;code&gt;onFoo(bar){...})&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;triggerMethod('foo', bar)&lt;/code&gt; 는 &lt;code&gt;onFoo(bar){...})&lt;/code&gt; 호출합니다.</target>
        </trans-unit>
        <trans-unit id="19f7e135c10b4fea2b31800c5f1f1ffafe48f9ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;triggerMethodOn&lt;/code&gt; was removed</source>
          <target state="translated">&lt;code&gt;triggerMethodOn&lt;/code&gt; 이 제거되었습니다</target>
        </trans-unit>
        <trans-unit id="75213a910c3f96ebcafb8bd334a95a4e91807502" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;viewFilter&lt;/code&gt; as a function</source>
          <target state="translated">&lt;code&gt;viewFilter&lt;/code&gt; 함수로서의 viewFilter</target>
        </trans-unit>
        <trans-unit id="1570c2c16daf984a3cb9e5e18ca921d3ed27be38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;viewFilter&lt;/code&gt; as a predicate object</source>
          <target state="translated">&lt;code&gt;viewFilter&lt;/code&gt; 술어 객체로서의 viewFilter</target>
        </trans-unit>
        <trans-unit id="b1a44105974637b00043f1c20457f4ebdb4e3a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;viewFilter&lt;/code&gt; as a string</source>
          <target state="translated">&lt;code&gt;viewFilter&lt;/code&gt; 문자열로 viewFilter</target>
        </trans-unit>
        <trans-unit id="cc6a900df4d18ab0ab7f0a99c2140feabe45eb80" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;false&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14cb0ac207eedf35fafeea76bec9a0c1c2539aa1" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">&lt;em&gt;Default:&lt;/em&gt;&lt;code&gt;true&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5de6eba732601cc75f3b05bd61b82fba2880fadc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will be thrown for an incorrect region configuration.</source>
          <target state="translated">&lt;strong&gt;오류&lt;/strong&gt; 잘못된 리젼 구성으로 인해 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="eee89c107b48d304aae1cf77c4ef5869bc958753" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will be thrown if the &lt;code&gt;Behavior&lt;/code&gt; class is not passed.</source>
          <target state="translated">&lt;strong&gt;오류 &lt;/strong&gt; &lt;code&gt;Behavior&lt;/code&gt; 클래스가 전달되지 않으면 오류가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="7e3b18b5af71ee5a7507c8673cf3b92a592f9877" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will be thrown if the &lt;code&gt;ViewFilter&lt;/code&gt; is not one of these options.</source>
          <target state="translated">&lt;strong&gt;오류 &lt;/strong&gt; &lt;code&gt;ViewFilter&lt;/code&gt; 가 이러한 옵션 중 하나가 아닌 경우 오류가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="c2b6e1121bfb55bc2a596ee746235120d3d8ec79" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will be thrown if the second parameter is not an object.</source>
          <target state="translated">&lt;strong&gt;오류&lt;/strong&gt; 두 번째 매개 변수가 객체가 아닌 경우 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="25d57403756f57c258f680b6d87cfdba4248b54e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will be thrown if the view is falsy or destroyed.</source>
          <target state="translated">&lt;strong&gt;오류&lt;/strong&gt; 보기가 잘못되었거나 손상된 경우 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="160340170841cff94abb13f2a39e7cffe45e6afa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will be thrown if using the radio integration unless &lt;code&gt;backbone.radio&lt;/code&gt; is setup as a dependency.</source>
          <target state="translated">&lt;strong&gt;오류 &lt;/strong&gt; &lt;code&gt;backbone.radio&lt;/code&gt; 가 종속 항목으로 설정되어 있지 않으면 무선 통합을 사용하는 경우 오류가 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="bb5c6ef6b53eb9ae57e4ff6844e1b309b9fa65bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will be thrown in the regions &lt;code&gt;el&lt;/code&gt; is not specified, or if the &lt;code&gt;el&lt;/code&gt; does not exist in the html.</source>
          <target state="translated">&lt;strong&gt;오류 &lt;/strong&gt; &lt;code&gt;el&lt;/code&gt; 이 지정되지 않은 영역 에서 또는 &lt;code&gt;el&lt;/code&gt; 이 html에없는 경우 오류가 발생 합니다 .</target>
        </trans-unit>
        <trans-unit id="e3729ec5e44b9ee75c13cb9bb17f25597d9e88a7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; An error will throw if the childViewContainer can not be found.</source>
          <target state="translated">&lt;strong&gt;오류&lt;/strong&gt; childViewContainer를 찾을 수 없으면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2d757e0d16312ceddfc2d5ab62af5c960fd277d1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; If &lt;code&gt;childView&lt;/code&gt; is a function that does not return a view class an error will be thrown.</source>
          <target state="translated">&lt;strong&gt;오류&lt;/strong&gt; 경우 &lt;code&gt;childView&lt;/code&gt; 는 오류가 발생합니다 뷰 클래스를 반환하지 않는 기능입니다.</target>
        </trans-unit>
        <trans-unit id="03aa18cf654ac08555815b8b4fb69e36b7a37d52" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; If either of the two views aren't part of the &lt;code&gt;CollectionView&lt;/code&gt; an error will be thrown.</source>
          <target state="translated">&lt;strong&gt;오류&lt;/strong&gt; 두보기 중 하나가 &lt;code&gt;CollectionView&lt;/code&gt; 의 일부가 아닌 경우 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0db705b0577468531efd736e1ec98ab0abdf517a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Errors&lt;/strong&gt; If you do not specify a &lt;code&gt;childView&lt;/code&gt;, an exception will be thrown stating that you must specify a &lt;code&gt;childView&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;오류&lt;/strong&gt; 당신은 지정하지 않으면 &lt;code&gt;childView&lt;/code&gt; 는 , 예외는 사용자가 지정해야한다는 슬로우됩니다 &lt;code&gt;childView&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="17d3a13a15576a3d19c843ea9825d60aaf4e3f04" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE: To avoid memory leaks, &lt;code&gt;unbindRequests&lt;/code&gt; should be called in or before &lt;code&gt;onBeforeDestroy&lt;/code&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고 : 메모리 누수를 방지하려면 &lt;code&gt;unbindRequests&lt;/code&gt; 또는 그 이전에 &lt;code&gt;onBeforeDestroy&lt;/code&gt; 호출해야합니다 .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91415aaf5ec161d522bb0dba11e926d114afe315" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt; A childview may or may not be destroyed by this point.</source>
          <target state="translated">&lt;strong&gt;주&lt;/strong&gt; 의 childview 수도 있고이 점에 의해 파괴되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbaeb099a8baa8f063e53d26991ef7ebea14de31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt; Automatic event bubbling can be disabled by setting &lt;a href=&quot;#a-child-views-event-prefix&quot;&gt;&lt;code&gt;childViewEventPrefix&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 &lt;/strong&gt;&lt;a href=&quot;#a-child-views-event-prefix&quot;&gt; &lt;code&gt;childViewEventPrefix&lt;/code&gt; &lt;/a&gt; 를 &lt;code&gt;false&lt;/code&gt; 로 설정 하면 자동 이벤트 버블 링을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="22016791c3acee2da1a2d94ba97df983768571a3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt; If the region does &lt;em&gt;not&lt;/em&gt; currently contain a View it will detach any HTML inside the region when emptying. If the region &lt;em&gt;does&lt;/em&gt; contain a View &lt;a href=&quot;upgrade#changes-to-regionshow&quot;&gt;any HTML that doesn't belong to the View will remain&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 영역에 현재보기가 포함되어 있지 &lt;em&gt;않으면&lt;/em&gt; 비울 때 영역 내의 HTML이 분리됩니다. 영역 에 View &lt;em&gt;가&lt;/em&gt; 포함되어 있으면 View &lt;a href=&quot;upgrade#changes-to-regionshow&quot;&gt;에 속하지 않은 HTML은 그대로 유지&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="d30ad15d4700f2a3361cda06d99978a9c11a1664" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt; It is &lt;em&gt;strongly recommended&lt;/em&gt; that View's handle their own DOM event objects. It should be considered a best practice to not utilize the DOM event in external listeners.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 이됩니다 &lt;em&gt;좋습니다&lt;/em&gt; 보기의 핸들이 자신의 DOM 이벤트 객체 것이다. 외부 리스너에서 DOM 이벤트를 사용하지 않는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d12658a5833824f6975b5f7a9383934ca3cfe4b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt; This event will not fire if the view has no template to render unless it contains prerendered html.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 미리 렌더링 된 HTML이 포함되어 있지 않으면 뷰에 렌더링 할 템플릿이없는 경우이 이벤트가 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9b45ac186eae7ebd00fd726a4133528cb49a5552" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt; When a &lt;code&gt;CollectionView&lt;/code&gt; is destroyed it will not individually remove its &lt;code&gt;children&lt;/code&gt;. Each childview will be destroyed, but any needed clean up during the &lt;code&gt;CollectionView&lt;/code&gt;'s destruction should happen in &lt;a href=&quot;#destroychildren-and-beforedestroychildren-events&quot;&gt;&lt;code&gt;before:destroy:children&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고 &lt;/strong&gt; &lt;code&gt;CollectionView&lt;/code&gt; 가 삭제 될 때 &lt;code&gt;children&lt;/code&gt; 개별적으로 제거하지는 않습니다 . 각 childview는 삭제되지만 &lt;code&gt;CollectionView&lt;/code&gt; 가 삭제 되는 동안 필요한 정리 작업 은 &lt;a href=&quot;#destroychildren-and-beforedestroychildren-events&quot;&gt; &lt;code&gt;before:destroy:children&lt;/code&gt; &lt;/a&gt; 에서 이루어져야합니다 .</target>
        </trans-unit>
        <trans-unit id="07c53263eb2d0b724a429355dbf9b9a4ef4f5a87" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;NOTE&lt;/strong&gt;&lt;code&gt;triggers&lt;/code&gt; will automatically pass the child view as an argument to the parent view, however &lt;code&gt;triggerMethod&lt;/code&gt; will not, and so notice that in the above example, the &lt;code&gt;triggerMethod&lt;/code&gt; explicitly passes the child view.</source>
          <target state="translated">&lt;strong&gt;참고 &lt;/strong&gt; &lt;code&gt;triggers&lt;/code&gt; 는 자동으로 하위 뷰를 상위 뷰에 대한 인수로 전달하지만 &lt;code&gt;triggerMethod&lt;/code&gt; 는 그렇지 않으므로 위의 예에서 &lt;code&gt;triggerMethod&lt;/code&gt; 는 명시 적으로 하위 뷰를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="63599dd93e15952f6ade5373dbc1338157def873" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Behavior definitions must be defined on the view.</source>
          <target state="translated">&lt;strong&gt;새로운 동작 :&lt;/strong&gt; 동작 정의는 뷰에서 정의되어야합니다.</target>
        </trans-unit>
        <trans-unit id="96c10e12ba933421492444ff44a4dfa09b90ac33" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Marionette is not attached to &lt;code&gt;Backbone&lt;/code&gt; global instance</source>
          <target state="translated">&lt;strong&gt;새로운 동작 :&lt;/strong&gt; Marionette가 &lt;code&gt;Backbone&lt;/code&gt; 글로벌 인스턴스에 연결되지 않았습니다</target>
        </trans-unit>
        <trans-unit id="94562afd3f1940958412efab872c979bef6c564a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Marionette no longer handles conflicts internally.</source>
          <target state="translated">&lt;strong&gt;새로운 행동 :&lt;/strong&gt; 마리오네트는 더 이상 내부적으로 갈등을 처리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4a73b97bad22460a80f7757f6bf81ac09c89d63e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Marionette no longer includes a router</source>
          <target state="translated">&lt;strong&gt;새로운 행동 :&lt;/strong&gt; 마리오네트는 더 이상 라우터를 포함하지 않습니다</target>
        </trans-unit>
        <trans-unit id="831cd16061cf8dc93d27835eabcbbfe69a5bdb76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; No render events will occur</source>
          <target state="translated">&lt;strong&gt;새로운 동작 :&lt;/strong&gt; 렌더링 이벤트가 발생하지 않습니다</target>
        </trans-unit>
        <trans-unit id="142de4b6bcfcd27a0fed342dca069c68bcfd4cf9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Objects that need this functionality should mixin &lt;code&gt;Marionette.Events&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;새로운 동작 :&lt;/strong&gt; 이 기능이 필요한 객체는 &lt;code&gt;Marionette.Events&lt;/code&gt; 되어야합니다.</target>
        </trans-unit>
        <trans-unit id="574be40b03a6996c1984fe8da36bcd2c2ace33bf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Only &lt;code&gt;CollectionView&lt;/code&gt;, based on &lt;code&gt;NextCollectionView&lt;/code&gt; is provided. The old &lt;code&gt;CollectionView&lt;/code&gt; implementation was removed</source>
          <target state="translated">&lt;strong&gt;새로운 동작 : &lt;/strong&gt; &lt;code&gt;NextCollectionView&lt;/code&gt; 기반의 &lt;code&gt;CollectionView&lt;/code&gt; 만 제공됩니다. 이전 &lt;code&gt;CollectionView&lt;/code&gt; 구현이 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="0ccc3f3ed7fee9c1dd2d98d3912f2bfd29ddcb2d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Only &lt;code&gt;options&lt;/code&gt; define the Behavior's default options</source>
          <target state="translated">&lt;strong&gt;새로운 동작 : &lt;/strong&gt; &lt;code&gt;options&lt;/code&gt; 만 동작의 기본 옵션을 정의</target>
        </trans-unit>
        <trans-unit id="c0a76597bd3b7af1a5f9d549cc011cb4279a1b84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Only &lt;code&gt;options&lt;/code&gt; passed in at construction will be passed to the Backbone.View constructor.</source>
          <target state="translated">&lt;strong&gt;새로운 동작 :&lt;/strong&gt; 생성시 전달 된 &lt;code&gt;options&lt;/code&gt; 만 Backbone.View 생성자로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="c340a351bc741e88d7d405071f66d77e87a266b7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Only one argument is passed</source>
          <target state="translated">&lt;strong&gt;새로운 행동 :&lt;/strong&gt; 하나의 인수 만 전달</target>
        </trans-unit>
        <trans-unit id="216f57b5c8cc85403df1a4fc8114e7ab9db2555b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Option is no longer available</source>
          <target state="translated">&lt;strong&gt;새로운 동작 :&lt;/strong&gt; 옵션을 더 이상 사용할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="1836953b3b70746f955dbd1032cdee3d62ac76cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Package is exported as a ECMAScript module using named exports. The default export with all classes still</source>
          <target state="translated">&lt;strong&gt;새로운 동작 :&lt;/strong&gt; 패키지는 명명 된 내보내기를 사용하여 ECMAScript 모듈로 내보내집니다. 모든 클래스가있는 기본 내보내기</target>
        </trans-unit>
        <trans-unit id="22cccce4971e0442d6c29560de48070da97c781c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Renders templates directly &lt;code&gt;template(data);&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;새로운 동작 :&lt;/strong&gt; 템플릿을 템플릿으로 직접 렌더링합니다 &lt;code&gt;template(data);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b09a14f808e7d9b4a542c77c6ff075c20f948f2f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; The &lt;code&gt;el&lt;/code&gt; property can be used to set the &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;새 동작 : &lt;/strong&gt; &lt;code&gt;el&lt;/code&gt; 속성이 설정할 수 있습니다 &lt;code&gt;el&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4295750f84b624ae946ee6c98b7f8d11e351b671" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; There is no accessible Error class.</source>
          <target state="translated">&lt;strong&gt;새로운 동작 :&lt;/strong&gt; 액세스 가능한 Error 클래스가 없습니다.</target>
        </trans-unit>
        <trans-unit id="2cdf254bca61aebce84c884c66a5e3ac214b9c71" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; These classes no longer extend anything.</source>
          <target state="translated">&lt;strong&gt;새로운 행동 :&lt;/strong&gt; 이 클래스들은 더 이상 아무것도 확장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ce8ef50bf1b4efb9c902b4f580a1ac463b04e867" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; These methods now return the shown view</source>
          <target state="translated">&lt;strong&gt;새로운 동작 :&lt;/strong&gt; 이 메소드는 이제 표시된보기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="310d1c7885491c8ea91b2895479edab8042f3383" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; To support &lt;code&gt;Backbone.View&lt;/code&gt; is necessary to apply &lt;code&gt;Marionette.Events&lt;/code&gt; mixin</source>
          <target state="translated">&lt;strong&gt;새로운 행동 :&lt;/strong&gt; 지원에 &lt;code&gt;Backbone.View&lt;/code&gt; 는 적용 할 필요가있다 &lt;code&gt;Marionette.Events&lt;/code&gt; 의 믹스 인을</target>
        </trans-unit>
        <trans-unit id="4e0c10e625e1a4796276f6cb3f9fc1970b6004e0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; Use &lt;code&gt;setEnabled&lt;/code&gt; to set the &lt;code&gt;DEV_MODE&lt;/code&gt; feature flag.</source>
          <target state="translated">&lt;strong&gt;새 동작 :&lt;/strong&gt; 사용이 &lt;code&gt;setEnabled&lt;/code&gt; 세트에 &lt;code&gt;DEV_MODE&lt;/code&gt; 의 기능 플래그를.</target>
        </trans-unit>
        <trans-unit id="f8016a5d6a93a504d5b7a1fcd3986d4a9934bd90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; model attributes are no longer cloned</source>
          <target state="translated">&lt;strong&gt;새로운 동작 :&lt;/strong&gt; 모델 속성이 더 이상 복제되지 않습니다</target>
        </trans-unit>
        <trans-unit id="6e1c8ffcb05110b244771de0300bad03cc39de19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt; view.render is no longer bound to the view</source>
          <target state="translated">&lt;strong&gt;새로운 동작 :&lt;/strong&gt; view.render가 더 이상 뷰에 바인딩되지 않습니다</target>
        </trans-unit>
        <trans-unit id="29b9d2bbadf48f784b126dfdc1bfad4559fde083" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt;&lt;code&gt;CompositeView&lt;/code&gt; does not exists</source>
          <target state="translated">&lt;strong&gt;새로운 동작 : &lt;/strong&gt; &lt;code&gt;CompositeView&lt;/code&gt; 가 존재하지 않습니다</target>
        </trans-unit>
        <trans-unit id="f68b48e4dd03071eca081006b30916b2fd0bb668" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt;&lt;code&gt;Function.prototype.bind&lt;/code&gt; is used</source>
          <target state="translated">&lt;strong&gt;새로운 동작 : &lt;/strong&gt; &lt;code&gt;Function.prototype.bind&lt;/code&gt; 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c4cd6f2b5e5f4ec7b3dd2ea4cb048e9c232ac7ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt;&lt;code&gt;Renderer&lt;/code&gt; does not exists</source>
          <target state="translated">&lt;strong&gt;새로운 동작 : &lt;/strong&gt; &lt;code&gt;Renderer&lt;/code&gt; 가 존재하지 않습니다</target>
        </trans-unit>
        <trans-unit id="0301912d1e1ad815deb52650eaaf3975ccf32aea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt;&lt;code&gt;attachElContent&lt;/code&gt; not called if the render doesn't return a value.</source>
          <target state="translated">&lt;strong&gt;새로운 동작 :&lt;/strong&gt; 렌더링이 값을 반환하지 않으면 &lt;code&gt;attachElContent&lt;/code&gt; 가 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f54be278e3db0d06e4f93013cace33eb27c81f5b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt;&lt;code&gt;childViewEventPrefix&lt;/code&gt; flag was set to false</source>
          <target state="translated">&lt;strong&gt;새로운 동작 : &lt;/strong&gt; &lt;code&gt;childViewEventPrefix&lt;/code&gt; 플래그가 false로 설정되었습니다.</target>
        </trans-unit>
        <trans-unit id="2ec7912bb83d9424b76dee4733b6a4aa8842379a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;New behavior:&lt;/strong&gt;&lt;code&gt;isNodeAttached&lt;/code&gt; does not exists</source>
          <target state="translated">&lt;strong&gt;새로운 동작 : &lt;/strong&gt; &lt;code&gt;isNodeAttached&lt;/code&gt; 가 존재하지 않습니다</target>
        </trans-unit>
        <trans-unit id="5fafc76dc287202dcd40d500cb70506ff4f28b35" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; Backbone &lt;code&gt;events&lt;/code&gt; are delegated to the view's &lt;code&gt;el&lt;/code&gt;. This means that events with a dom node selector will be handled for the view and any decendants. So if you attach a child with the same selector as the parent event handler, the parent will handle the event for both views.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 백본 &lt;code&gt;events&lt;/code&gt; 는 뷰의 &lt;code&gt;el&lt;/code&gt; 에 위임됩니다 . 이는 dom 노드 선택기가있는 이벤트가보기 및 모든 종속 항목에 대해 처리됨을 의미합니다. 따라서 부모 이벤트 핸들러와 동일한 선택자를 가진 자식을 연결하면 부모는 두보기 모두에 대한 이벤트를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="11ae686fa97f4621d8695c6040ba4e5d7792c212" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; Children are removed after the DOM detach of the parent to prevent multiple reflows or repaints.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 여러 리플 로우 또는 다시 그리기를 방지하기 위해 부모를 DOM 분리 한 후 하위를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="3f665bab016439e91d0a965299101d3f2293d8c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; Currently these events are only triggered using the &lt;code&gt;view.removeRegion&lt;/code&gt; API and not when the region is destroyed directly. &lt;a href=&quot;https://github.com/marionettejs/backbone.marionette/issues/3602&quot;&gt;https://github.com/marionettejs/backbone.marionette/issues/3602&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 현재 이러한 이벤트는 &lt;code&gt;view.removeRegion&lt;/code&gt; API를 사용해서 만 트리거 되며 영역이 직접 소멸 될 때는 아닙니다. &lt;a href=&quot;https://github.com/marionettejs/backbone.marionette/issues/3602&quot;&gt;https://github.com/marionettejs/backbone.marionette/issues/3602&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2442a1ff7d89ddc9597faebd20369c298f293bf1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; For views this is not the ideal location for clean up of anything touching the DOM. See &lt;a href=&quot;#domremove-event&quot;&gt;&lt;code&gt;dom:remove&lt;/code&gt;&lt;/a&gt; or [&lt;code&gt;before:detach&lt;/code&gt;] for DOM related clean up.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 보기의 경우 DOM에 닿는 모든 것을 정리하기에 이상적인 위치는 아닙니다. DOM 관련 정리에 대해서는 &lt;a href=&quot;#domremove-event&quot;&gt; &lt;code&gt;dom:remove&lt;/code&gt; &lt;/a&gt; 또는 [ &lt;code&gt;before:detach&lt;/code&gt; ]를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="99c1d45774b707dc50d289864530cd8edf6540dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; If a view's &lt;code&gt;template&lt;/code&gt; is set to &lt;code&gt;false&lt;/code&gt; this event will not trigger.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 보기의 &lt;code&gt;template&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 로 설정되면 이 이벤트가 트리거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dd75511b0aee0d235cf27aafecf504711cbfe3ec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; In order to prevent conflict &lt;code&gt;Behavior&lt;/code&gt; does not trigger &lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;destroy events&lt;/a&gt; with its own destruction. A &lt;code&gt;destroy&lt;/code&gt; event occurring on the &lt;code&gt;Behavior&lt;/code&gt; will have originated from the related view.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 충돌을 방지하기 위해 &lt;code&gt;Behavior&lt;/code&gt; 은 자체 소멸로 &lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;소멸 이벤트&lt;/a&gt; 를 트리거하지 않습니다 . &lt;code&gt;Behavior&lt;/code&gt; 에서 발생 하는 &lt;code&gt;destroy&lt;/code&gt; 이벤트 는 관련 뷰에서 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="91d007ec1b98cd7d1bcbbf8ca9f7da3985e29d19" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; Once a view is considered &quot;rendered&quot; it cannot be unrendered until it is &lt;a href=&quot;#destroying-a-view&quot;&gt;destroyed&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 뷰가 &quot;렌더링 된&quot;것으로 간주되면 뷰가 &lt;a href=&quot;#destroying-a-view&quot;&gt;파괴&lt;/a&gt; 될 때까지 렌더링을 취소 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="16718b90b7903e825c9349cb70dbed0faeb72446" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; That children represents the views rendered that are or will be attached within the view's &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 어린이 그건 또는 뷰의 내 첨부됩니다 렌더링 된 뷰 나타냅니다 &lt;code&gt;el&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a22cf20030350028fe1fd63e2c4f323d9f2b5839" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; The &lt;code&gt;CollectionView&lt;/code&gt; expects to be the only entity managing the region. Showing things in this region directly is not advised.</source>
          <target state="translated">&lt;strong&gt;참고 &lt;/strong&gt; &lt;code&gt;CollectionView&lt;/code&gt; 이 지역을 관리하는 유일한 기업이 될 것으로 기대하고있다. 이 지역의 물건을 직접 보여주는 것은 권장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d75d61f990ef16ba51d4ffc00ec2806d5ca7e3d6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; The event handlers will pass the &lt;code&gt;options&lt;/code&gt; argument &lt;code&gt;destroy&lt;/code&gt; was invoked with.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 이벤트 핸들러는 &lt;code&gt;destroy&lt;/code&gt; 가 호출 된 &lt;code&gt;options&lt;/code&gt; 인수 를 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="47939fb1908868b21a188fb2033e865bd08d9078" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; The events API should not be confused with &lt;a href=&quot;https://marionettejs.com/.dom.interactions.html#view-events&quot;&gt;view &lt;code&gt;events&lt;/code&gt;&lt;/a&gt; which capture DOM events.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 이벤트 API를 DOM 이벤트를 캡처하는 &lt;a href=&quot;https://marionettejs.com/.dom.interactions.html#view-events&quot;&gt;보기 &lt;code&gt;events&lt;/code&gt; &lt;/a&gt; 와 혼동해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="fa83b05ee0d60405a19bb1987b8e4b3dc575ed00" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; These examples while functional may not be ideal. If possible it is recommend to precompile your templates which can be done for a number of templating using various plugins for bundling tools such as &lt;a href=&quot;installation&quot;&gt;Browserify or Webpack&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 이러한 예제는 기능적이지만 이상적이지 않을 수 있습니다. 가능한 경우 &lt;a href=&quot;installation&quot;&gt;Browserify 또는 Webpack&lt;/a&gt; 과 같은 도구 번들링을 위해 다양한 플러그인을 사용하여 여러 템플릿에 대해 수행 할 수있는 템플릿을 사전 컴파일하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="a6fe319880bb54833d38ee43dfb5c0399c1a9368" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; This event is only triggered when rendering a template into a view. A view that is pre-rendered will not have this event triggered unless re-rendered. &lt;a href=&quot;dom.prerendered&quot;&gt;Pre-rendered views&lt;/a&gt; should use &lt;code&gt;initialize&lt;/code&gt; for attaching child views and the &lt;code&gt;render&lt;/code&gt; event if the view is re-rendered.</source>
          <target state="translated">&lt;strong&gt;참고이&lt;/strong&gt; 이벤트는 템플릿을보기로 렌더링 할 때만 트리거됩니다. 사전 렌더링 된 뷰는 다시 렌더링하지 않으면이 이벤트가 트리거되지 않습니다. &lt;a href=&quot;dom.prerendered&quot;&gt;사전 렌더링 된 뷰&lt;/a&gt; 는 뷰를 다시 렌더링하는 경우 하위 뷰를 첨부하고 &lt;code&gt;render&lt;/code&gt; 이벤트 를 첨부 하기 위해 &lt;code&gt;initialize&lt;/code&gt; 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="00cb96bb98e4ae2c9e8d85815db539f5e833923b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; This event is unique in that the triggering class instance (the view) is not the same instance as the handler (the behavior). In most cases internally triggered events are triggered and handled by the same instance, but this is an exception.</source>
          <target state="translated">&lt;strong&gt;참고이&lt;/strong&gt; 이벤트는 트리거링 클래스 인스턴스 (보기)가 핸들러 (동작)와 동일하지 않다는 점에서 고유합니다. 대부분의 경우 내부적으로 트리거 된 이벤트는 동일한 인스턴스에 의해 트리거되고 처리되지만 예외입니다.</target>
        </trans-unit>
        <trans-unit id="c8609d470d37cd2395d79ad09ddac2e795b33a0a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; This is a presentation functionality used to easily filter in and out constructed children. All children of a &lt;code&gt;collection&lt;/code&gt; will be instantiated once regardless of their filtered status. If you would prefer to manage child view instantiation, you should filter the &lt;code&gt;collection&lt;/code&gt; itself.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 이것은 구성된 자식을 쉽게 필터링하고 필터링하는 데 사용되는 프레젠테이션 기능입니다. &lt;code&gt;collection&lt;/code&gt; 의 모든 자식은 필터링 된 상태에 관계없이 한 번 인스턴스화됩니다. 자식 뷰 인스턴스화를 관리하려면 &lt;code&gt;collection&lt;/code&gt; 자체를 필터링해야 합니다.</target>
        </trans-unit>
        <trans-unit id="88ad73a3f133951f9e3338e8c5fa13776dd92576" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; Unless an index is specified, this added view will be subject to filtering and sorting and may be difficult to manage in complex situations. Use with care.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 인덱스를 지정하지 않으면이 추가 된보기는 필터링 및 정렬이 적용되며 복잡한 상황에서 관리하기가 어려울 수 있습니다. 주의해서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="044cb8384120e337b25d346b5f25d534892e4099" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; When detaching a view you must pass it to a new region so Marionette can handle its life cycle automatically or &lt;code&gt;destroy&lt;/code&gt; it manually to prevent memory leaks.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 뷰를 분리 할 때 Marionette가 수명주기를 자동으로 처리하거나 메모리 누수를 방지하기 위해 수동으로 &lt;code&gt;destroy&lt;/code&gt; 할 수 있도록 뷰를 새 지역으로 전달해야합니다 .</target>
        </trans-unit>
        <trans-unit id="820ff090b592142ac494bf34cd79c1b38d6b59ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; You should not use this method to add arbitrary extra data to your template. Instead use &lt;code&gt;templateContext&lt;/code&gt; to &lt;a href=&quot;#adding-context-data&quot;&gt;add context data to your template&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;참고이&lt;/strong&gt; 방법을 사용하여 템플릿에 임의의 추가 데이터를 추가해서는 안됩니다. 대신 &lt;code&gt;templateContext&lt;/code&gt; 를 사용 하여 &lt;a href=&quot;#adding-context-data&quot;&gt;컨텍스트 데이터를 &lt;/a&gt;템플릿 에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee8e1a7236799974bf7bbe89bcea5a72a5e89e4b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; if you consistently need all of the views within this event use &lt;a href=&quot;marionette.collectionview#collectionviews-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 당신은 지속적으로이 이벤트를 사용 내의 모든 뷰가 필요한 경우 &lt;a href=&quot;marionette.collectionview#collectionviews-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d462bf5acb8171985e1b98e409c5b1c33d95001" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; in rare cases when a view's &lt;code&gt;el&lt;/code&gt; is modified via &lt;code&gt;setElement&lt;/code&gt; if utilizing these proxies they will need to be manually updated by calling &lt;code&gt;myBehavior.proxyViewProperties();&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 드문 경우는 뷰의 경우 &lt;code&gt;el&lt;/code&gt; 통해 수정 &lt;code&gt;setElement&lt;/code&gt; 이러한 프록시를 사용하는 경우가 수동으로 호출하여 업데이트해야합니다 &lt;code&gt;myBehavior.proxyViewProperties();&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="208440e59f765e7f5060460e532ba7b5b4ae0aaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt; the data object passed to the template is not deeply cloned and in some cases is not cloned at all. Take caution when modifying the data passed to the template, that you are not also modifying your model's data indirectly.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; 템플릿에 전달 된 데이터 객체 깊이 복제되지 않고 어떤 경우에는 전혀 복제되지 않습니다. 템플릿에 전달 된 데이터를 수정할 때 모델 데이터를 간접적으로 수정하지 않도록주의하십시오.</target>
        </trans-unit>
        <trans-unit id="998273945fb8d2bcecf922929f0c1874cd561eda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;: Disabling the view monitor will break the monitor generated events for this view &lt;em&gt;and all child views&lt;/em&gt; of this view. Disabling should be done carefully.</source>
          <target state="translated">&lt;strong&gt;참고&lt;/strong&gt; :보기 모니터를 사용하지 않으면이보기 &lt;em&gt;및&lt;/em&gt; 이보기의 &lt;em&gt;모든 하위보기&lt;/em&gt; 에 대해 모니터 생성 이벤트가 중단됩니다 . 비활성화는주의해서 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="37a934347f117660aed2c87a347109a243abd077" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note&lt;/strong&gt;&lt;code&gt;render&lt;/code&gt; and &lt;code&gt;attach&lt;/code&gt; events will not fire for the initial state as the state is set already at instantiation and is not changing.</source>
          <target state="translated">&lt;strong&gt;참고 &lt;/strong&gt; &lt;code&gt;render&lt;/code&gt; 및 &lt;code&gt;attach&lt;/code&gt; 상태가 인스턴스 생성시에 이미 설정되어 변경되지 않는 이벤트가 초기 상태에 대한 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4ff7c71894acc34ca1fd00ec834dba236b082a63" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Any number of arguments passed to a &lt;code&gt;destroy&lt;/code&gt; functions were passed along to events.</source>
          <target state="translated">&lt;strong&gt;이전 동작 : &lt;/strong&gt; &lt;code&gt;destroy&lt;/code&gt; 함수에 전달 &lt;strong&gt;된&lt;/strong&gt; 여러 인수 가 이벤트에 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="f25afbdb9149c62ebfa891bb94a8424c5807ba31" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Both &lt;code&gt;NextCollectionView&lt;/code&gt; and &lt;code&gt;CollectionView&lt;/code&gt; were provided</source>
          <target state="translated">&lt;strong&gt;: 이전 동작&lt;/strong&gt; 모두 &lt;code&gt;NextCollectionView&lt;/code&gt; 및 &lt;code&gt;CollectionView&lt;/code&gt; 가 제공되었다</target>
        </trans-unit>
        <trans-unit id="50d1317464ad1f371fedda83031b74cf59feea02" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Both &lt;code&gt;options&lt;/code&gt; and &lt;code&gt;defaults&lt;/code&gt; defined on Behavior are default options.</source>
          <target state="translated">&lt;strong&gt;이전 동작 :&lt;/strong&gt; 두 &lt;code&gt;options&lt;/code&gt; 및 &lt;code&gt;defaults&lt;/code&gt; 행동에 정의 된 기본 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="6de6407f2451aad97fe38d0f94249b838ba07ffe" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Marionette could be acessed using &lt;code&gt;Backbone.Marionette&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;이전 동작 : &lt;/strong&gt; &lt;code&gt;Backbone.Marionette&lt;/code&gt; 사용하여 마리오네트에 접근 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd9c55673205afc162a6ea23ef9401f33217be38" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Marionette included a router</source>
          <target state="translated">&lt;strong&gt;이전 동작 :&lt;/strong&gt; 마리오네트는 라우터를 포함</target>
        </trans-unit>
        <trans-unit id="919d5ae65466412a755114e2a04804ecc9e79d18" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Option could be used to prevent destroying a leaving view</source>
          <target state="translated">&lt;strong&gt;이전 동작 :&lt;/strong&gt; 떠나는보기가 손상되지 않도록 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0397b5214057349475283696fd9e8185c88202cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Rendered templates using the &lt;code&gt;TemplateCache&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;이전 동작 : &lt;/strong&gt; &lt;code&gt;TemplateCache&lt;/code&gt; 를 사용하여 렌더링 &lt;strong&gt;된 &lt;/strong&gt;템플릿</target>
        </trans-unit>
        <trans-unit id="98d961f3e49b8a23073c5171f4da3c7a98bdf70a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Template was not rendered, but render events were triggered</source>
          <target state="translated">&lt;strong&gt;이전 동작 :&lt;/strong&gt; 템플릿이 렌더링되지 않았지만 렌더링 이벤트가 트리거되었습니다.</target>
        </trans-unit>
        <trans-unit id="e5713d349525a0862f395dcfd7d33e0d427a33f2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; The &lt;code&gt;selector&lt;/code&gt; or &lt;code&gt;el&lt;/code&gt; property could be used to set the region &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;이전 동작 : &lt;/strong&gt; &lt;code&gt;selector&lt;/code&gt; 또는 &lt;code&gt;el&lt;/code&gt; 속성은 지역 설정하는 데 사용할 수 &lt;code&gt;el&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1147c808ade0323e892c82a613a204c5adf2c623" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; The Marionette.Error class was publicly available.</source>
          <target state="translated">&lt;strong&gt;이전 동작 :&lt;/strong&gt; Marionette.Error 클래스가 공개되었습니다.</target>
        </trans-unit>
        <trans-unit id="32eca625a0aa2a12f68b4db3009f2e23c050b5ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; The default renderer could be changed by setting &lt;code&gt;Renderer.render&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;이전 동작 : &lt;/strong&gt; &lt;code&gt;Renderer.render&lt;/code&gt; 를 설정하여 기본 렌더러를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d61690c5c5f6cf93215e8b9ebdd48f039f6b8bca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; The package was exported as an UMD module with all classes / functions as a property of the default export</source>
          <target state="translated">&lt;strong&gt;이전 동작 :&lt;/strong&gt; 패키지가 모든 클래스 / 함수를 기본 내보내기 속성으로 UMD 모듈로 내보냈습니다.</target>
        </trans-unit>
        <trans-unit id="3df204596c736b7b4f9f0bd1251659d4e03af159" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; These classes extended &lt;code&gt;Mn.Object&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;이전 동작 :&lt;/strong&gt; 이 클래스는 &lt;code&gt;Mn.Object&lt;/code&gt; 를 확장 했습니다 .</target>
        </trans-unit>
        <trans-unit id="68e196b21f44e47ec1c30908499d37f399dbf0aa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; These methods returned the region</source>
          <target state="translated">&lt;strong&gt;이전 동작 :&lt;/strong&gt; 이 메서드는 지역을 반환</target>
        </trans-unit>
        <trans-unit id="57c1a3a97316463aced8c572a7a00aa18e7ddbd7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; This method was use to &lt;code&gt;triggerMethod&lt;/code&gt; on an object that did not have the method</source>
          <target state="translated">&lt;strong&gt;이전 동작 :&lt;/strong&gt; 이 메소드는 메소드가 없는 오브젝트에서 메소드를 &lt;code&gt;triggerMethod&lt;/code&gt; 하는 데 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="0d374312b48bc7ad8d59af844cfd102a5a0057ad" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; Utility function &lt;code&gt;isNodeAttached&lt;/code&gt; was provided</source>
          <target state="translated">&lt;strong&gt;이전 동작 :&lt;/strong&gt; 유틸리티 기능 &lt;code&gt;isNodeAttached&lt;/code&gt; 가 제공되었습니다.</target>
        </trans-unit>
        <trans-unit id="0bd3cc0b1cd15e3277fcd129a60911b04f6a1e73" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; View behaviors could optionally be looked up via the global lookup naming scheme.</source>
          <target state="translated">&lt;strong&gt;이전 동작 :&lt;/strong&gt; 전역 동작 명명 체계를 통해 선택적으로 동작보기를 조회 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7f0a846927e4874bb149245ada96b98fbebb83b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; model attributes were always cloned prior to template rendering</source>
          <target state="translated">&lt;strong&gt;이전 동작 :&lt;/strong&gt; 템플릿 렌더링 전에 모델 속성이 항상 복제되었습니다.</target>
        </trans-unit>
        <trans-unit id="ac7d091b556bb17767b8882dba0e9ecdd9de6a90" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt; view.render was bound to the view</source>
          <target state="translated">&lt;strong&gt;이전 동작 :&lt;/strong&gt; view.render가 뷰에 바인딩되었습니다</target>
        </trans-unit>
        <trans-unit id="18414f3d7d24eca26473a11739b52a6caf9841fc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;Backbone.View&lt;/code&gt; instances were supported as is</source>
          <target state="translated">&lt;strong&gt;이전 동작 : &lt;/strong&gt; &lt;code&gt;Backbone.View&lt;/code&gt; 인스턴스는 그대로 지원되었습니다.</target>
        </trans-unit>
        <trans-unit id="80edbf8a0d13bc3e69d23746d987824aff4d19ee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;CompositeView&lt;/code&gt; class was provided</source>
          <target state="translated">&lt;strong&gt;이전 동작 : &lt;/strong&gt; &lt;code&gt;CompositeView&lt;/code&gt; 클래스가 제공되었습니다</target>
        </trans-unit>
        <trans-unit id="4d35c353e845e2c1b59437cde75ae18038b7a15d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;DEV_MODE&lt;/code&gt; was set on the global &lt;code&gt;Marionette&lt;/code&gt; object.</source>
          <target state="translated">&lt;strong&gt;이전 동작 :&lt;/strong&gt; 글로벌 &lt;code&gt;Marionette&lt;/code&gt; 객체 에 &lt;code&gt;DEV_MODE&lt;/code&gt; 가 설정되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a13650a3398f7c5e334fabd346204d61d8173ecc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;_.bind&lt;/code&gt; was used</source>
          <target state="translated">&lt;strong&gt;이전 동작 : &lt;/strong&gt; &lt;code&gt;_.bind&lt;/code&gt; 가 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="0638b4ca2c11fcc4ccf571e51a7b5de3381082fd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;attachElContent&lt;/code&gt; was always called</source>
          <target state="translated">&lt;strong&gt;이전 동작 : &lt;/strong&gt; &lt;code&gt;attachElContent&lt;/code&gt; 가 항상 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="acbcebbcc6e2f075ea83017bbe2e5cfb5bc61e3d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;childViewEventPrefix&lt;/code&gt; flag was set to true</source>
          <target state="translated">&lt;strong&gt;이전 동작 : &lt;/strong&gt; &lt;code&gt;childViewEventPrefix&lt;/code&gt; 플래그가 true로 설정되었습니다</target>
        </trans-unit>
        <trans-unit id="dc6e7650cc6d3a8f353365fad31cbc41cc86eb7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;noConflict&lt;/code&gt; allowed for multiple installs of Marionette to be installed</source>
          <target state="translated">&lt;strong&gt;이전 동작 : &lt;/strong&gt; &lt;code&gt;noConflict&lt;/code&gt; 를 통해 Marionette를 여러 번 설치할 수 있음</target>
        </trans-unit>
        <trans-unit id="eff03edc5fab767712a24a44f63f34f99a791900" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Old behavior:&lt;/strong&gt;&lt;code&gt;options&lt;/code&gt; defined on the view definition were merged into &lt;code&gt;options&lt;/code&gt; and passed to the Backbone.View constructor</source>
          <target state="translated">&lt;strong&gt;이전 동작 : &lt;/strong&gt; &lt;code&gt;options&lt;/code&gt; 뷰 정의에 정의 된 병합 된 &lt;code&gt;options&lt;/code&gt; 과 Backbone.View 생성자에 전달</target>
        </trans-unit>
        <trans-unit id="7b30efb94ab440c2ec0e98636f172268ab105e09" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; API simplification</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; API 단순화</target>
        </trans-unit>
        <trans-unit id="ea6c4c18d09c3022f6869bb8ab293e0005b530c7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Align with current JS standard practice, allow tree shaking</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; 현재 JS 표준 사례에 맞게 트리 흔들림 허용</target>
        </trans-unit>
        <trans-unit id="c47d40b1a667e376c812f879996227fdb50d9561" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; AppRouter was used by a minority of cases</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; AppRouter는 소수의 사례에서 사용되었습니다.</target>
        </trans-unit>
        <trans-unit id="3dea2dfdbbfd10532679c75b9afb22eb28ebe286" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Improve performance</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; 성능 향상</target>
        </trans-unit>
        <trans-unit id="6bf256e6716dbdf94a063da673c7a72a100d77b2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Isn't useful with ES6</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; ES6에서는 유용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="dfc6fc64d3972e06ba547773ca059c225623811b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; More useful return</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; 더 유용한 반품</target>
        </trans-unit>
        <trans-unit id="5bc19a4f05ef9eb56b8a58021ca8c6fade5e451c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Performance Improvement</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; 성능 향상</target>
        </trans-unit>
        <trans-unit id="4d7ed988c373bb6410cd184ab6c6a55aebddf41d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Preparing for lodash 5</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; lodash 5 준비</target>
        </trans-unit>
        <trans-unit id="c4bc9978a0764102e376d0e62d8f9b2d6be9c22b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Prevents incorrect usage of &lt;code&gt;render&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;이유 : &lt;/strong&gt; &lt;code&gt;render&lt;/code&gt; 잘못된 사용을 방지합니다</target>
        </trans-unit>
        <trans-unit id="6edd153884a5bad6282adb63f7ced6edfe131e84" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Shallow inheritance</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; 얕은 상속</target>
        </trans-unit>
        <trans-unit id="23eb5b4ab45cd20375792333dd668ead538c1943" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Simplify API</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; API 단순화</target>
        </trans-unit>
        <trans-unit id="e24e20e357b0d03eb88f6f406a42367254cc448d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Simplify API and maintenance</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; API 및 유지 관리 간소화</target>
        </trans-unit>
        <trans-unit id="b1ab8efcf0d3375c450b7658d843b207567dc4e7" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Simplify API and no global Marionette instance</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; API를 단순화하고 글로벌 마리오네트 인스턴스가 없음</target>
        </trans-unit>
        <trans-unit id="6d9c558b5faf819d452fb5ae6b0e979badd437f3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Support named exports</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; 명명 된 내보내기 지원</target>
        </trans-unit>
        <trans-unit id="2d70db2a05a3b2969b625556d952e3c822a3595b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; TemplateCache is only used by a minority of users.</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; TemplateCache는 소수의 사용자 만 사용합니다.</target>
        </trans-unit>
        <trans-unit id="40381e9de02f142a2736d483976f3e78e3b6aa7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; There is no longer a global &lt;code&gt;Marionette&lt;/code&gt; object.</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; 더 이상 전역 &lt;code&gt;Marionette&lt;/code&gt; 개체 가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="4e9a578754089016dda809064ae87d51c6f2e0c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Reason:&lt;/strong&gt; Useful for renderers that modify the content directly.</source>
          <target state="translated">&lt;strong&gt;이유 :&lt;/strong&gt; 내용을 직접 수정하는 렌더러에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e9abc16c3dbfd8af15f2ea4f404fcdffba33c9dc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Attach behaviors to view definitions. In v3</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 동작을 첨부하여 정의를보십시오. v3에서</target>
        </trans-unit>
        <trans-unit id="cf1520f9da62210a1360227df7adbad61cd808cc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Define any default Backbone.View options on the view instance directly instead of in a nested &lt;code&gt;options&lt;/code&gt; on the definition.</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 정의의 중첩 &lt;code&gt;options&lt;/code&gt; 대신 직접보기 인스턴스에서 기본 Backbone.View 옵션을 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="d89eff49bcf1eede1a96df030ed5bf0c50d8bda9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; If modifying the &lt;code&gt;Object&lt;/code&gt; prototype you may need to modify the others too.</source>
          <target state="translated">&lt;strong&gt;해결 :&lt;/strong&gt; 개질 경우 &lt;code&gt;Object&lt;/code&gt; 프로토 타입을 당신도 다른 사람을 수정해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8947679abff864e17b2fc97ff8f5cada44ec75ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; If needed use &lt;a href=&quot;https://github.com/marionettejs/marionette.templatecache&quot;&gt;https://github.com/marionettejs/marionette.templatecache&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;해결책 :&lt;/strong&gt; 필요한 경우 &lt;a href=&quot;https://github.com/marionettejs/marionette.templatecache&quot;&gt;https://github.com/marionettejs/marionette.templatecache를&lt;/a&gt; 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="874c272d68dccfaa6c971bb0749f2835038df836" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; If vanilla &lt;code&gt;Backbone.View&lt;/code&gt; is not used there's no required change, otherwise, apply the &lt;code&gt;Marionette.Events&lt;/code&gt; mixin&lt;code&gt;to the
prototype of the view class intended to be used with&lt;/code&gt;Marionette`. Example:</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; vanilla &lt;code&gt;Backbone.View&lt;/code&gt; 를 사용하지 않아도 변경이 필요하지 않으면 &lt;code&gt;Marionette.Events&lt;/code&gt; 믹스 인 &lt;code&gt;to the prototype of the view class intended to be used with&lt;/code&gt; Marionette 과 함께 사용할 뷰 클래스의 프로토 타입에 적용하십시오 . 예:</target>
        </trans-unit>
        <trans-unit id="cd79f9c4b0d977cc6a6b8f05e9b11f116d493c91" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; If you need to pass multiple pieces of data through &lt;code&gt;destroy&lt;/code&gt; use an object.</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 여러 개의 데이터를 통과해야하는 경우 &lt;code&gt;destroy&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3977d6853196a31f1fcede5a4806367276d292bd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Import Marionette classes directly or use global Marionette instance (when using as a standalone script)</source>
          <target state="translated">&lt;strong&gt;해결책 :&lt;/strong&gt; Marionette 클래스를 직접 가져 오거나 전역 Marionette 인스턴스를 사용하십시오 (독립형 스크립트로 사용하는 경우).</target>
        </trans-unit>
        <trans-unit id="a187d4c513fda46eb81f6db16edfc6e724c13f12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Import each Marionette classses / functions separatedly or with * keyword Examples: ```javascript // using ES module syntax // old behavior import Mn from 'backbone.marionette'; const MyView = Mn.View.extend({});</source>
          <target state="translated">&lt;strong&gt;해결책 :&lt;/strong&gt; 개별적으로 또는 * 키워드를 사용하여 각 Marionette 클래스 / 함수를 가져옵니다. 예 :```javascript // ES 모듈 구문을 사용합니다. const MyView = Mn.View.extend ({});</target>
        </trans-unit>
        <trans-unit id="f4fe244be3a7aa7c321949cd2915f3965085eae0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; In most all cases this won't matter but if you need to call the render function out of the context, use &lt;code&gt;call&lt;/code&gt; or &lt;code&gt;apply&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 대부분의 경우 이것은 중요하지 않지만 컨텍스트에서 렌더링 함수를 호출해야하는 경우 &lt;code&gt;call&lt;/code&gt; 또는 &lt;code&gt;apply&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="50d4b38c3c9702ceeeb906124128533dbd1d2f10" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; It is recommended that child view events are proxied only when necessary. Rather than turning it on globally, set the &lt;code&gt;childViewEventPrefix&lt;/code&gt; per view that needs it. Even better explictly define the proxies via &lt;code&gt;childViewEvents&lt;/code&gt; and &lt;code&gt;childViewTriggers&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 하위보기 이벤트는 필요할 때만 프록시하도록 권장합니다. 전역으로 설정하지 않고 필요한 뷰마다 &lt;code&gt;childViewEventPrefix&lt;/code&gt; 를 설정하십시오 . &lt;code&gt;childViewEvents&lt;/code&gt; 및 &lt;code&gt;childViewTriggers&lt;/code&gt; 를 통해 프록시를보다 명확하게 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="00b0bde654aca1c1945994ca1332c4861b10bbaf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Rename any &lt;code&gt;selector&lt;/code&gt; used with Region to &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; Region에 사용 된 &lt;code&gt;selector&lt;/code&gt; 이름 을 &lt;code&gt;el&lt;/code&gt; 로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="02f978ba58231340d518022168b997e212d04e08" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Rename any use of &lt;code&gt;defaults&lt;/code&gt; to &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;해결 방법 : &lt;/strong&gt; &lt;code&gt;defaults&lt;/code&gt; 을 &lt;code&gt;options&lt;/code&gt; 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="98372acd013b569f8dc6b58c57ac42f72535640e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Return at least an empty string if you need to have &lt;code&gt;attachElContent&lt;/code&gt; called</source>
          <target state="translated">&lt;strong&gt;해결 방법 : &lt;/strong&gt; &lt;code&gt;attachElContent&lt;/code&gt; 를 호출 해야하는 경우 최소한 빈 문자열을 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="6fc8b765e0b7d95b1c18bf71634d893c7f17ffd4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Same as supporting a vanilla Backbone.View mentioned above</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 바닐라 백본을지지하는 것과 같습니다 &lt;strong&gt;.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cd938e49ee2e3f455c3a7b0db24fa96f33883640" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; This may affect anyone hoping to squeeze &amp;lt; IE9 support out of Marionette.</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 이것은 마리오네트에서 &amp;lt;IE9 지원을 짜기를 원하는 사람에게 영향을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="474d3a3caf0caf3230e14b90873752d3492bb0cd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Unlikely to be an issue but if no &lt;code&gt;templateContext&lt;/code&gt; is defined templates can modify the actual model data if not careful. Clone if necessary.</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 문제가되지 는 않지만 &lt;code&gt;templateContext&lt;/code&gt; 가 정의 되지 않은 경우 템플릿 은주의하지 않으면 실제 모델 데이터를 수정할 수 있습니다. 필요한 경우 복제하십시오.</target>
        </trans-unit>
        <trans-unit id="826175d42914643013c82d62fbaea0f1de3e27c0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use &lt;code&gt;CollectionView&lt;/code&gt; instead. Most features of &lt;code&gt;CompositeView&lt;/code&gt; were added to &lt;code&gt;CollectionView&lt;/code&gt; and in common cases a class rename is enough. The old &lt;code&gt;CompositeView&lt;/code&gt; was abstracted to a &lt;a href=&quot;https://github.com/marionettejs/marionette.oldcollectionview&quot;&gt;separate library&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 대신 &lt;code&gt;CollectionView&lt;/code&gt; 를 사용하십시오 . &lt;code&gt;CompositeView&lt;/code&gt; 의 대부분의 기능은 &lt;code&gt;CollectionView&lt;/code&gt; 에 추가 되었으며 일반적인 경우 클래스 이름 변경으로 충분합니다. 이전 &lt;code&gt;CompositeView&lt;/code&gt; 는 &lt;a href=&quot;https://github.com/marionettejs/marionette.oldcollectionview&quot;&gt;별도의 라이브러리&lt;/a&gt; 로 추상화되었습니다 .</target>
        </trans-unit>
        <trans-unit id="3dc2a7def0cda2cfeac48270e580f49aa3bb0086" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use &lt;code&gt;CollectionView&lt;/code&gt; instead. The old &lt;code&gt;CollectionView&lt;/code&gt; was abstracted to a &lt;a href=&quot;https://github.com/marionettejs/marionette.oldcollectionview&quot;&gt;separate library&lt;/a&gt;.</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 대신 &lt;code&gt;CollectionView&lt;/code&gt; 를 사용하십시오 . 이전 &lt;code&gt;CollectionView&lt;/code&gt; 는 &lt;a href=&quot;https://github.com/marionettejs/marionette.oldcollectionview&quot;&gt;별도의 라이브러리&lt;/a&gt; 로 추상화되었습니다 .</target>
        </trans-unit>
        <trans-unit id="3dacbc7864fa44ce1f5ad9b7fee21502f2a48e3a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use &lt;code&gt;Marionette.setRenderer&lt;/code&gt; which accepts a function with same signature as expected by &lt;code&gt;Renderer.render&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;해결책 : &lt;/strong&gt; &lt;code&gt;Renderer.render&lt;/code&gt; 에서 예상 한 것과 동일한 서명을 가진 함수를 받아들이는 &lt;code&gt;Marionette.setRenderer&lt;/code&gt; 를 사용하십시오 &lt;strong&gt;.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b0cb7aaf1d93095cf35e8349d8b3b16b43e4aa83" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use &lt;code&gt;detachView&lt;/code&gt; first if you need to remove a shown view without destroying.</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 표시된보기를 삭제하지 않고 제거해야하는 경우 &lt;code&gt;detachView&lt;/code&gt; 를 먼저 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d012789c1612dda733b113be79d8363cd6947ed3" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use &lt;code&gt;getRegion&lt;/code&gt; if the region is needed after this method</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 이 방법 후에 영역이 필요한 경우 &lt;code&gt;getRegion&lt;/code&gt; 을 사용하십시오 &lt;strong&gt;.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="abdb12b981f6ee75f049cdf682ed42a76b446fc4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use any router including the extract AppRouter &lt;a href=&quot;https://github.com/marionettejs/marionette.approuter&quot;&gt;https://github.com/marionettejs/marionette.approuter&lt;/a&gt;</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 추출 AppRouter &lt;a href=&quot;https://github.com/marionettejs/marionette.approuter&quot;&gt;https://github.com/marionettejs/marionette.approuter를&lt;/a&gt; 포함한 모든 라우터를 사용 하십시오</target>
        </trans-unit>
        <trans-unit id="f204873032c12abefca713b1e94986b91716ebc5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use native code: &lt;code&gt;document.documentElement.contains(el)&lt;/code&gt;</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 고유 코드를 사용하십시오 : &lt;code&gt;document.documentElement.contains(el)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed07e92fc6045c2d64f5083517936c4a9ee5d9f5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt; Use package managers if multiple versions are needed.</source>
          <target state="translated">&lt;strong&gt;해결 방법 :&lt;/strong&gt; 여러 버전이 필요한 경우 패키지 관리자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c1361eaf8cb232bfd8aa332cea798366b5ea9a62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Remedy:&lt;/strong&gt;&lt;code&gt;template: false&lt;/code&gt; was often used to generate render events when no render was performed. Use other hooks or methods when no template will be rendered.</source>
          <target state="translated">&lt;strong&gt;해결 방법 : &lt;/strong&gt; &lt;code&gt;template: false&lt;/code&gt; 렌더링이 수행되지 않을 때 렌더링 이벤트를 생성하는 데 종종 false 가 사용되었습니다. 템플릿이 렌더링되지 않을 때는 다른 후크 나 메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bf52472e0ebe26a6670fa530b29b4ab2477acd70" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;The &lt;code&gt;triggerMethod&lt;/code&gt; method is available to &lt;a href=&quot;common#triggermethod&quot;&gt;all Marionette classes&lt;/a&gt;.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt; &lt;code&gt;triggerMethod&lt;/code&gt; 의 방법은 사용할 수 &lt;a href=&quot;common#triggermethod&quot;&gt;있는 모든 마리오네트 클래스&lt;/a&gt; .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="874112eb15640a3b13b1481f5cb54db87797a600" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;This Section only covers the basics. For more information on regions, see the &lt;a href=&quot;marionette.region&quot;&gt;Regions Documentation.&lt;/a&gt;&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;이 섹션은 기본 사항 만 다룹니다. 지역에 대한 자세한 내용은 &lt;a href=&quot;marionette.region&quot;&gt;지역 설명서를&lt;/a&gt; 참조하십시오 .&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee4a969213734f614b438598142efe9bf254f7ce" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;When passing a method reference, the method must exist on the View.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;메소드 참조를 전달할 때 메소드가 View에 존재해야합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="28be653f79cc2b29ece39be3b1575c39d580fe8d" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Behavior&lt;/code&gt; provides a clean separation of concerns to your view logic, allowing you to share common user-facing operations between your views.</source>
          <target state="translated">&lt;code&gt;Behavior&lt;/code&gt; 당신이 당신의보기 사이를 일반 사용자 대면 작업을 공유 할 수 있도록,보기 로직에 대한 우려의 깨끗한 분리를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="aae0307a74d248c876010871ba76d982ff672205" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;Behavior&lt;/code&gt;'s view events &lt;a href=&quot;marionette.behavior#proxy-handlers&quot;&gt;are proxied directly on the behavior&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Behavior&lt;/code&gt; 의보기 이벤트는 &lt;a href=&quot;marionette.behavior#proxy-handlers&quot;&gt;행동에 직접 프락시된다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8087050758bb2a9b464b0476ff80bbf5d6dc6c99" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CollectionView&lt;/code&gt; can have &lt;a href=&quot;#marionettebehavior&quot;&gt;&lt;code&gt;Behavior&lt;/code&gt;s&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 가 있을 수 있습니다 &lt;a href=&quot;#marionettebehavior&quot;&gt; &lt;code&gt;Behavior&lt;/code&gt; 들&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="39a6eb5afc74778a6a240a37e2c3eeb7d9d04e46" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CollectionView&lt;/code&gt; can have &lt;a href=&quot;marionette.behavior&quot;&gt;&lt;code&gt;Behavior&lt;/code&gt;s&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 가 있을 수 있습니다 &lt;a href=&quot;marionette.behavior&quot;&gt; &lt;code&gt;Behavior&lt;/code&gt; 들&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c5cfbf5ccfe840f599e44a885c59328b16ebebe" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;CollectionView&lt;/code&gt; like &lt;code&gt;View&lt;/code&gt; manages a portion of the DOM via a single parent DOM element or &lt;code&gt;el&lt;/code&gt;. This view manages an ordered set of child views that are shown within the view's &lt;code&gt;el&lt;/code&gt;. These children are most often created to match the models of a &lt;code&gt;Backbone.Collection&lt;/code&gt; though a &lt;code&gt;CollectionView&lt;/code&gt; does not require a &lt;code&gt;collection&lt;/code&gt; and can manage any set of views.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 같은 &lt;code&gt;View&lt;/code&gt; 하나의 부모 DOM 요소 또는 통해 DOM의 일부 관리 &lt;code&gt;el&lt;/code&gt; . 이보기는보기의 &lt;code&gt;el&lt;/code&gt; 내에 표시되는 정렬 된 하위보기 세트를 관리합니다 . 이 아이들은 가장 자주의 모델에 맞게 만들어 &lt;code&gt;Backbone.Collection&lt;/code&gt; 을 하지만 &lt;code&gt;CollectionView&lt;/code&gt; 가 필요하지 않습니다 &lt;code&gt;collection&lt;/code&gt; 및 뷰의 설정을 관리 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a56817e6287485c1d2784362b71c50fd08a7c150" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;View&lt;/code&gt; can have &lt;a href=&quot;#marionetteregion&quot;&gt;&lt;code&gt;Region&lt;/code&gt;s&lt;/a&gt; and &lt;a href=&quot;#marionettebehavior&quot;&gt;&lt;code&gt;Behavior&lt;/code&gt;s&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 가질 수 &lt;a href=&quot;#marionetteregion&quot;&gt; &lt;code&gt;Region&lt;/code&gt; 의&lt;/a&gt; 과 &lt;a href=&quot;#marionettebehavior&quot;&gt; &lt;code&gt;Behavior&lt;/code&gt; 들&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f31d44b80c644eb9887ecaca8dbdf4a191c3f106" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;View&lt;/code&gt; can have &lt;a href=&quot;marionette.region&quot;&gt;&lt;code&gt;Region&lt;/code&gt;s&lt;/a&gt; and &lt;a href=&quot;marionette.behavior&quot;&gt;&lt;code&gt;Behavior&lt;/code&gt;s&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 가질 수 &lt;a href=&quot;marionette.region&quot;&gt; &lt;code&gt;Region&lt;/code&gt; 의&lt;/a&gt; 과 &lt;a href=&quot;marionette.behavior&quot;&gt; &lt;code&gt;Behavior&lt;/code&gt; 들&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2fdf38d0b016d2bef29a60bf95f4e20cc24f08b" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;View&lt;/code&gt; is used for managing portions of the DOM via a single parent DOM element or &lt;code&gt;el&lt;/code&gt;. It provides a consistent interface for managing the content of the &lt;code&gt;el&lt;/code&gt; which is typically administered by serializing a &lt;code&gt;Backbone.Model&lt;/code&gt; or &lt;code&gt;Backbone.Collection&lt;/code&gt; and rendering a template with the serialized data into the &lt;code&gt;View&lt;/code&gt;s &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 하나의 부모 DOM 요소 또는 통해 DOM의 일부를 관리하는 데 사용됩니다 &lt;code&gt;el&lt;/code&gt; . 그것은의 내용을 관리하기위한 일관된 인터페이스를 제공합니다 &lt;code&gt;el&lt;/code&gt; 일반적으로 직렬화에 의해 관리되는 &lt;code&gt;Backbone.Model&lt;/code&gt; 또는 &lt;code&gt;Backbone.Collection&lt;/code&gt; 를 하고로 직렬화 된 데이터와 템플릿 렌더링 &lt;code&gt;View&lt;/code&gt; 의 &lt;code&gt;el&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc80c3be3924b222841d4825634797e5c966d800" translate="yes" xml:space="preserve">
          <source>A &lt;code&gt;childViewTriggers&lt;/code&gt; hash or method permits proxying of child view events without manually setting bindings. The values of the hash should be a string of the event to trigger on the parent.</source>
          <target state="translated">&lt;code&gt;childViewTriggers&lt;/code&gt; 설정을 수동으로 바인딩하지 않고 아이 뷰 이벤트의 프록시 해시 또는 방법을 허용합니다. 해시 값은 상위에서 트리거 할 이벤트 문자열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="540d92d675012b49da4c92a42d8a5f34e7fdac9c" translate="yes" xml:space="preserve">
          <source>A Child View's Event Prefix</source>
          <target state="translated">Child View의 이벤트 접두사</target>
        </trans-unit>
        <trans-unit id="adf88a3d5540a64b55f7b8a833a2396dbc845f7a" translate="yes" xml:space="preserve">
          <source>A Request is, as you might guess, a request for information or for something to happen. You will probably want to use requests when:</source>
          <target state="translated">귀하가 짐작할 수 있듯이 요청은 정보 또는 발생하는 요청입니다. 다음과 같은 경우 요청을 사용하고 싶을 것입니다.</target>
        </trans-unit>
        <trans-unit id="1941f11bd477686bd21d3891fad29c1141edae92" translate="yes" xml:space="preserve">
          <source>A handy function to pluck certain &lt;code&gt;options&lt;/code&gt; and attach them directly to an instance.</source>
          <target state="translated">특정 &lt;code&gt;options&lt;/code&gt; 을 뽑아 인스턴스에 직접 연결 하는 편리한 기능 입니다.</target>
        </trans-unit>
        <trans-unit id="355c2b104e4220a90d9274c88beb8c519f7f81cf" translate="yes" xml:space="preserve">
          <source>A highly opinionated, simplistic Backbone.Router coupled with a Backbone.Radio.Channel. When an event is triggered on the channel, it will set the route URL, or when a URL matches a route it will throw an event on the channel.</source>
          <target state="translated">의견이 많고 단순한 백본 라우터가 백본 라디오 채널과 결합되었습니다. 채널에서 이벤트가 트리거되면 경로 URL을 설정하거나 URL이 경로와 일치하면 채널에서 이벤트를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="a522aa53a26c499f824cbcae822d21434c984a18" translate="yes" xml:space="preserve">
          <source>A number of lifecycle events were changed or removed from Marionette 3. Information on which ones were removed, changed, or added will be found here with recommendations on how to update your code.</source>
          <target state="translated">여러 라이프 사이클 이벤트가 Marionette 3에서 변경 또는 제거되었습니다. 제거, 변경 또는 추가 된 정보는 코드 업데이트 방법에 대한 권장 사항과 함께 여기에 있습니다.</target>
        </trans-unit>
        <trans-unit id="67e14ee8298e730857b354f0bfb4b192d9140a45" translate="yes" xml:space="preserve">
          <source>A region can be &lt;code&gt;reset&lt;/code&gt; at any time. This destroys any existing view being displayed, and deletes the cached &lt;code&gt;el&lt;/code&gt;. The next time the region shows a view, the region's &lt;code&gt;el&lt;/code&gt; is queried from the DOM.</source>
          <target state="translated">지역은 언제든지 &lt;code&gt;reset&lt;/code&gt; 할 수 있습니다 . 이렇게하면 기존보기가 표시되지 않고 캐시 된 &lt;code&gt;el&lt;/code&gt; 이 삭제됩니다 . 다음에 영역에보기가 표시되면 해당 영역의 &lt;code&gt;el&lt;/code&gt; 이 DOM에서 쿼리됩니다.</target>
        </trans-unit>
        <trans-unit id="0842da35a82be72edb5bb3b953fb55ad9f49c6bb" translate="yes" xml:space="preserve">
          <source>A region can be destroyed which will &lt;code&gt;reset&lt;/code&gt; the region, remove it from any parent view, and stop any internal region listeners. A destroyed region should not be reused.</source>
          <target state="translated">리전을 &lt;code&gt;reset&lt;/code&gt; 하여 리전 을 재설정 하고 상위 뷰에서 리전을 제거하고 내부 리전 리스너를 중지하는 리전이 손상 될 수 있습니다. 파괴 된 지역은 재사용하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="5f5f7b449c23b2bd6c716819879432ebf44db542" translate="yes" xml:space="preserve">
          <source>A template is a function that given data returns either an HTML string or DOM. &lt;a href=&quot;#rendering-the-template&quot;&gt;The default renderer&lt;/a&gt; in Marionette expects the template to return an HTML string. Marionette's dependency Underscore comes with an HTML string &lt;a href=&quot;http://underscorejs.org/#template&quot;&gt;template compiler&lt;/a&gt;.</source>
          <target state="translated">템플릿은 주어진 데이터가 HTML 문자열 또는 DOM을 반환하는 함수입니다. Marionette &lt;a href=&quot;#rendering-the-template&quot;&gt;의 기본 렌더러&lt;/a&gt; 는 템플릿이 HTML 문자열을 반환 할 것으로 예상합니다. Marionette의 종속성 Underscore는 HTML 문자열 &lt;a href=&quot;http://underscorejs.org/#template&quot;&gt;템플릿 컴파일러&lt;/a&gt; 와 함께 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="249dfaafc05e6196e8499796c449b33b22d3563f" translate="yes" xml:space="preserve">
          <source>A view is detached when its &lt;code&gt;el&lt;/code&gt; is removed from the DOM. The best time to clean up any listeners added to the &lt;code&gt;el&lt;/code&gt; is in the &lt;a href=&quot;events.class#detach-and-beforedetach-events&quot;&gt;&lt;code&gt;before:detach&lt;/code&gt; event&lt;/a&gt;.</source>
          <target state="translated">뷰 &lt;code&gt;el&lt;/code&gt; 이 DOM에서 제거 되면 뷰가 분리됩니다 . &lt;code&gt;el&lt;/code&gt; 에 추가 된 리스너를 정리하기에 가장 좋은 시간 은 &lt;a href=&quot;events.class#detach-and-beforedetach-events&quot;&gt; &lt;code&gt;before:detach&lt;/code&gt; 이벤트&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d93d10ff0fbef1b4aa0ddc24e10e907746d3c85a" translate="yes" xml:space="preserve">
          <source>API</source>
          <target state="translated">API</target>
        </trans-unit>
        <trans-unit id="df325db8b77f500b6cdf947d62422aad373e0aea" translate="yes" xml:space="preserve">
          <source>API Methods</source>
          <target state="translated">API 메소드</target>
        </trans-unit>
        <trans-unit id="e83eb7919f82fd4225a6b85b5359a3da7fb02040" translate="yes" xml:space="preserve">
          <source>Accessing UI Elements</source>
          <target state="translated">UI 요소에 액세스</target>
        </trans-unit>
        <trans-unit id="c9114a556478c3eb657182e388ded5b77ff53cb1" translate="yes" xml:space="preserve">
          <source>Accessing a Child View</source>
          <target state="translated">자식보기에 액세스</target>
        </trans-unit>
        <trans-unit id="c9cbe8af311e0da8194d21f16ab584e715ec270a" translate="yes" xml:space="preserve">
          <source>Add a leading &lt;code&gt;on&lt;/code&gt; - &lt;code&gt;on&lt;/code&gt;, &lt;code&gt;Before&lt;/code&gt;, &lt;code&gt;Dom&lt;/code&gt;, &lt;code&gt;Refresh&lt;/code&gt;</source>
          <target state="translated">선도적 인 추가 &lt;code&gt;on&lt;/code&gt; - &lt;code&gt;on&lt;/code&gt; , &lt;code&gt;Before&lt;/code&gt; , &lt;code&gt;Dom&lt;/code&gt; , &lt;code&gt;Refresh&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0546f3e4257b98f649cbdbee40ee4a5c0454628e" translate="yes" xml:space="preserve">
          <source>Add them!</source>
          <target state="translated">그들을 추가하십시오!</target>
        </trans-unit>
        <trans-unit id="62b8bcc9452e9460fe9081fa0e66a17ea520de44" translate="yes" xml:space="preserve">
          <source>Adding Context Data</source>
          <target state="translated">컨텍스트 데이터 추가</target>
        </trans-unit>
        <trans-unit id="2c518c8c5a37e18eb39d86997b856676cd8731a8" translate="yes" xml:space="preserve">
          <source>Adding Regions</source>
          <target state="translated">지역 추가</target>
        </trans-unit>
        <trans-unit id="b836e2072c4c4e0a77fcbe9e2cf6a46d5ba638da" translate="yes" xml:space="preserve">
          <source>Adding a Child View</source>
          <target state="translated">자식 뷰 추가</target>
        </trans-unit>
        <trans-unit id="d9eb5283f513cbb08a94332d67b3a1a8a7fac04a" translate="yes" xml:space="preserve">
          <source>Adding managed children</source>
          <target state="translated">관리되는 자식 추가</target>
        </trans-unit>
        <trans-unit id="02fc3411ecfe0851297299b5a216cead703c2407" translate="yes" xml:space="preserve">
          <source>Adding unmanaged children</source>
          <target state="translated">관리되지 않는 자식 추가</target>
        </trans-unit>
        <trans-unit id="c313de6babf318503fdf433e2471023cd78a727c" translate="yes" xml:space="preserve">
          <source>Additional Options</source>
          <target state="translated">추가 옵션</target>
        </trans-unit>
        <trans-unit id="6fbc5280497a8d45a9ce909c09bc9f1774134f4a" translate="yes" xml:space="preserve">
          <source>Additionally a DOM API can be partially set:</source>
          <target state="translated">또한 DOM API를 부분적으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5084b8b81f1e8666432f0bb38e74d316a1e9aee6" translate="yes" xml:space="preserve">
          <source>Additionally check out &lt;a href=&quot;features&quot;&gt;features&lt;/a&gt; for some configurable options.</source>
          <target state="translated">또한 구성 가능한 옵션에 대한 &lt;a href=&quot;features&quot;&gt;기능&lt;/a&gt; 을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="caa22eeae1665a20e16a42a29261fc0bd7a2e6c4" translate="yes" xml:space="preserve">
          <source>Additionally context data overwrites the serialized data</source>
          <target state="translated">또한 컨텍스트 데이터는 직렬화 된 데이터를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="7bc0dd890e4147013116075d22d3d9830ed42c79" translate="yes" xml:space="preserve">
          <source>Advanced Event Settings</source>
          <target state="translated">고급 이벤트 설정</target>
        </trans-unit>
        <trans-unit id="5b9ce6d24a5c894601887f66eed0498f98ab1fea" translate="yes" xml:space="preserve">
          <source>After installing Marionette you might want to check out the basics.</source>
          <target state="translated">Marionette를 설치 한 후 기본 사항을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d9fc6250c291c95ee41050e36fccd02e26be1e7c" translate="yes" xml:space="preserve">
          <source>After the initial &lt;code&gt;render&lt;/code&gt; the &lt;code&gt;CollectionView&lt;/code&gt; binds to the &lt;code&gt;update&lt;/code&gt; and &lt;code&gt;reset&lt;/code&gt; events of the &lt;code&gt;collection&lt;/code&gt;.</source>
          <target state="translated">초기 후 &lt;code&gt;render&lt;/code&gt; &lt;code&gt;CollectionView&lt;/code&gt; 를 받는 바인딩 &lt;code&gt;update&lt;/code&gt; 및 &lt;code&gt;reset&lt;/code&gt; 의 이벤트 &lt;code&gt;collection&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a73f0f7cb53efe77cf6568b5d386a5f5b71f8c59" translate="yes" xml:space="preserve">
          <source>After the view and behavior are &lt;a href=&quot;marionette.behavior#events--initialize-order&quot;&gt;constructed and initialized&lt;/a&gt;, the last event to occur is an &lt;code&gt;initialize&lt;/code&gt; event on the behavior which is passed the view instance and any options passed to the view at instantiation.</source>
          <target state="translated">뷰와 비헤이비어가 &lt;a href=&quot;marionette.behavior#events--initialize-order&quot;&gt;구성되고 초기화 된&lt;/a&gt; 후 마지막으로 발생하는 이벤트는 뷰 인스턴스에 전달 된 비헤이비어 의 &lt;code&gt;initialize&lt;/code&gt; 이벤트와 인스턴스화시 뷰에 전달 된 모든 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="7db86cce5c5c20938b97504cb68a73d8d2841dd4" translate="yes" xml:space="preserve">
          <source>All arguments that are passed to the &lt;code&gt;triggerMethod&lt;/code&gt; call are passed along to both the event and the method, with the exception of the event name not being passed to the corresponding method.</source>
          <target state="translated">&lt;code&gt;triggerMethod&lt;/code&gt; 호출에 전달 된 모든 인수 는 해당 메소드에 전달되지 않은 이벤트 이름을 제외하고 이벤트와 메소드 모두에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="eae0751978b4306b71a7769a38a8e34d3a4035c9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;https://github.com/marionettejs/marionette-v3-compat&quot;&gt;upgrade tool&lt;/a&gt; is available and covers the breaking changes in detail.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/marionettejs/marionette-v3-compat&quot;&gt;업그레이드 도구를&lt;/a&gt; 사용할 수 있으며 세부의 주요 변경 내용을 다룹니다.</target>
        </trans-unit>
        <trans-unit id="7c890b75dbd0d7a30c5821f1bc0b51f1050b59f5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Application&lt;/code&gt; can have a single &lt;a href=&quot;marionette.application#application-region&quot;&gt;region&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; 하나의 수 &lt;a href=&quot;marionette.application#application-region&quot;&gt;지역&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a42a2169fd9a5b3f6a53b44e204a7c3c1dbdf843" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Application&lt;/code&gt; provides a single &lt;a href=&quot;marionette.region&quot;&gt;region&lt;/a&gt; for attaching a view tree. The &lt;code&gt;region&lt;/code&gt; property can be &lt;a href=&quot;marionette.region#defining-regions&quot;&gt;defined in multiple ways&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; 하나의 제공 &lt;a href=&quot;marionette.region&quot;&gt;영역을&lt;/a&gt; 뷰 트리를 부착. &lt;code&gt;region&lt;/code&gt; 속성이 될 수 &lt;a href=&quot;marionette.region#defining-regions&quot;&gt;여러 가지 방법으로 정의&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9bcf51505b2e2b41118650dd18ee3cd74352b42" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Application&lt;/code&gt; provides hooks for organizing and initiating other elements and a view tree.</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; 조직 및 기타 요소와 뷰 트리를 시작하기위한 후크를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1499c1c48a57f9c571e4887bb6d1bf28d5a56612" translate="yes" xml:space="preserve">
          <source>An advanced router for MarionetteJS applications. Includes nested routes, states, rendering, async operations, lazy loading routes, Radio channel eventing, and inherits most of CherryTree features while maintaining a similar to Marionette API.</source>
          <target state="translated">MarionetteJS 애플리케이션을위한 고급 라우터. 중첩 된 경로, 상태, 렌더링, 비동기 작업, 지연 로딩 경로, 라디오 채널 이벤트를 포함하고 Marionette API와 유사하게 유지하면서 대부분의 CherryTree 기능을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="0afa0cb2ba20b1e1ae4017601628b19953640385" translate="yes" xml:space="preserve">
          <source>An instantiated &lt;code&gt;CollectionView&lt;/code&gt; is aware of its lifecycle state and will throw events related to when that state changes. The view states indicate whether the view is rendered, attached to the DOM, or destroyed.</source>
          <target state="translated">인스턴스화 된 &lt;code&gt;CollectionView&lt;/code&gt; 는 수명주기 상태를 인식하고 해당 상태 변경시기와 관련된 이벤트를 발생시킵니다. 뷰 상태는 뷰가 렌더링되는지, DOM에 첨부되었는지 또는 파괴되는지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8e11909e9e3fe54643c2002546949269397d32b0" translate="yes" xml:space="preserve">
          <source>An instantiated &lt;code&gt;View&lt;/code&gt; is aware of its lifecycle state and will throw events related to when that state changes.</source>
          <target state="translated">인스턴스화 된 &lt;code&gt;View&lt;/code&gt; 는 수명주기 상태를 인식하고 해당 상태 변경시기와 관련된 이벤트를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="f747583e378b44256edb25b3b42cd9096c190875" translate="yes" xml:space="preserve">
          <source>Any defined regions within a &lt;code&gt;View&lt;/code&gt; will be available to the &lt;code&gt;View&lt;/code&gt; or any calling code immediately after rendering the &lt;code&gt;View&lt;/code&gt;. Using &lt;code&gt;getRegion&lt;/code&gt; or any of the child view methods above will first render the view so that the region is available.</source>
          <target state="translated">내에서 정의 된 지역 &lt;code&gt;View&lt;/code&gt; 받는 사용할 수 있습니다 &lt;code&gt;View&lt;/code&gt; 즉시 렌더링 후 또는 호출 코드 &lt;code&gt;View&lt;/code&gt; . 사용 &lt;code&gt;getRegion&lt;/code&gt; 영역이 사용할 수 있도록 이상 아이 뷰의 방법 중 처음보기를 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="b00ee8cc4366a76ba1c395bf89f8449fa066018a" translate="yes" xml:space="preserve">
          <source>AppRouter was removed</source>
          <target state="translated">AppRouter가 제거되었습니다</target>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="3867c226b4789bef9369cb3dd374029b9502dab5" translate="yes" xml:space="preserve">
          <source>Application &lt;code&gt;destroy&lt;/code&gt; events</source>
          <target state="translated">애플리케이션 &lt;code&gt;destroy&lt;/code&gt; 이벤트</target>
        </trans-unit>
        <trans-unit id="43d9ac0286bd4cf919461e1e4f7426fee4f1df01" translate="yes" xml:space="preserve">
          <source>Application Events</source>
          <target state="translated">응용 프로그램 이벤트</target>
        </trans-unit>
        <trans-unit id="9e231798bfdd9f5bb0ee0930339fa900626ec076" translate="yes" xml:space="preserve">
          <source>Application Region</source>
          <target state="translated">응용 지역</target>
        </trans-unit>
        <trans-unit id="87afdeb5fd2e5c227b941cae2941bd1db1923d49" translate="yes" xml:space="preserve">
          <source>Application Region Methods</source>
          <target state="translated">응용 프로그램 영역 방법</target>
        </trans-unit>
        <trans-unit id="6b9c5a1fc6433fa8c072f661bf8b7b0f66d00344" translate="yes" xml:space="preserve">
          <source>Arguments for Lifecycle Events</source>
          <target state="translated">수명주기 이벤트에 대한 인수</target>
        </trans-unit>
        <trans-unit id="b0305a50f55dd15b629e361c1a4f861fe3cd0732" translate="yes" xml:space="preserve">
          <source>As &lt;code&gt;$saveButton&lt;/code&gt; here is a jQuery selector, you can call any jQuery methods on it, according to the jQuery documentation.</source>
          <target state="translated">으로 &lt;code&gt;$saveButton&lt;/code&gt; 여기에 jQuery를 선택이며, 당신은 jQuery를 문서에 따르면,에 어떤 jQuery를 메서드를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c602b4510f34d45b901d49a5e8228f30a1dc598" translate="yes" xml:space="preserve">
          <source>As a general rule, &lt;code&gt;onBeforeDestroy&lt;/code&gt; is the best handler for cleanup as the instance and any internally created children are already destroyed by the time &lt;code&gt;onDestroy&lt;/code&gt; is called.</source>
          <target state="translated">일반적으로 &lt;code&gt;onBeforeDestroy&lt;/code&gt; 는 인스턴스와 내부 생성 된 자식이 &lt;code&gt;onDestroy&lt;/code&gt; 가 호출 될 때 이미 파괴되었으므로 정리를위한 최상의 처리기입니다 .</target>
        </trans-unit>
        <trans-unit id="9edc35396c13aadd127ff8449b04e34f3df85c00" translate="yes" xml:space="preserve">
          <source>As before, all arguments passed into &lt;code&gt;triggerMethod&lt;/code&gt; after the event name will make their way into the event handler. Using this method ensures there will be no unexpected memory leaks.</source>
          <target state="translated">이전과 마찬가지로 이벤트 이름 이후 에 &lt;code&gt;triggerMethod&lt;/code&gt; 에 전달 된 모든 인수 는 이벤트 핸들러로 전달됩니다. 이 방법을 사용하면 예기치 않은 메모리 누수가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7d952a354d1d0380f980458cc1b7e776fa954393" translate="yes" xml:space="preserve">
          <source>As in &lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;Backbone&lt;/a&gt;, &lt;code&gt;listenTo&lt;/code&gt; will pass the object it is called on in as the context variable. These behave exactly as in Backbone, so using &lt;code&gt;object.on&lt;/code&gt; will require you to unhook any event handlers yourself to prevent memory leaks. Marionette, however, does provide extra helpers as part of the view lifecycle that bind and unbind event handlers for you. this is the core of &lt;code&gt;onEvent&lt;/code&gt; Binding.</source>
          <target state="translated">&lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;Backbone&lt;/a&gt; 에서처럼 , &lt;code&gt;listenTo&lt;/code&gt; 는 컨텍스트 변수로 호출 된 객체를 전달합니다. 이것들은 Backbone에서와 똑같이 동작하므로 &lt;code&gt;object.on&lt;/code&gt; 을 사용 하면 메모리 누수를 방지하기 위해 이벤트 핸들러를 직접 연결 해제해야합니다. 그러나 Marionette는 이벤트 처리기를 바인드 및 바인딩 해제하는 뷰 라이프 사이클의 일부로 추가 헬퍼를 제공합니다. 이것이 &lt;code&gt;onEvent&lt;/code&gt; 바인딩 의 핵심입니다 .</target>
        </trans-unit>
        <trans-unit id="de315c921e70ff38b639ded99317243dd8ca3f54" translate="yes" xml:space="preserve">
          <source>As in Backbone, the event handler is called with &lt;code&gt;this&lt;/code&gt; bound to the &lt;code&gt;Star&lt;/code&gt; instance. See the &lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;Backbone documentation&lt;/a&gt; for the full list of Event handling methods.</source>
          <target state="translated">백본에서와 같이, 이벤트 핸들러가 호출되고 &lt;code&gt;this&lt;/code&gt; 받는 바인딩 &lt;code&gt;Star&lt;/code&gt; 인스턴스입니다. 이벤트 처리 방법의 전체 목록은 &lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;백본 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5af7c2945226ddcea5f1c218e3fa81e8c6e75011" translate="yes" xml:space="preserve">
          <source>As in views, &lt;code&gt;events&lt;/code&gt; and &lt;code&gt;triggers&lt;/code&gt; can use the &lt;code&gt;ui&lt;/code&gt; references in their listeners. For more details, see the &lt;a href=&quot;dom.interactions#organizing-your-view&quot;&gt;&lt;code&gt;ui&lt;/code&gt; documentation&lt;/a&gt;. These can be defined on either the Behavior or the View:</source>
          <target state="translated">뷰에서 와 같이 &lt;code&gt;events&lt;/code&gt; 및 &lt;code&gt;triggers&lt;/code&gt; 는 리스너에서 &lt;code&gt;ui&lt;/code&gt; 참조를 사용할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;dom.interactions#organizing-your-view&quot;&gt; &lt;code&gt;ui&lt;/code&gt; 설명서를&lt;/a&gt; 참조하십시오 . 이것들은 Behavior 또는 View에서 정의 될 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e41a24483b5ad642aa043596a4d2f82f882cee15" translate="yes" xml:space="preserve">
          <source>As mentioned in &lt;a href=&quot;#advanced-event-settings&quot;&gt;Advanced Event Settings&lt;/a&gt; some DOM events are triggers from the view event monitor that will handle DOM attachment related events down the view tree. Backbone View's won't have the functionality unless the monitor is added. This will include all &lt;a href=&quot;#dom-change-events&quot;&gt;DOM Change Events&lt;/a&gt; other than render.</source>
          <target state="translated">&lt;a href=&quot;#advanced-event-settings&quot;&gt;고급 이벤트 설정에&lt;/a&gt; 언급 된대로 일부 DOM 이벤트는보기 이벤트 모니터의 트리거로,보기 트리에서 DOM 첨부 관련 이벤트를 처리합니다. 모니터를 추가하지 않으면 Backbone View에는 기능이 없습니다. 여기에는 렌더링 이외의 모든 &lt;a href=&quot;#dom-change-events&quot;&gt;DOM 변경 이벤트&lt;/a&gt; 가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="af97ec9b3b9d2008e6ae87cbeb5ca98788894743" translate="yes" xml:space="preserve">
          <source>As shown the &lt;code&gt;options&lt;/code&gt; object is passed into the &lt;code&gt;Application&lt;/code&gt; as the second argument to &lt;code&gt;start&lt;/code&gt;.</source>
          <target state="translated">표시된 것처럼 &lt;code&gt;options&lt;/code&gt; 객체는 &lt;code&gt;start&lt;/code&gt; 하는 두 번째 인수로 &lt;code&gt;Application&lt;/code&gt; 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="38f9a770b3f3d7848b70ca962fd3d4691b742cb7" translate="yes" xml:space="preserve">
          <source>As the Radio can be imported anywhere, we can use it as a global event aggregator as such:</source>
          <target state="translated">라디오는 어디에서나 가져올 수 있으므로 다음과 같이 전역 이벤트 수집기로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24413f561e5bc21be599abd30bf88d5feb36fcd2" translate="yes" xml:space="preserve">
          <source>As we can see, almost all of the attributes here can be worked out dynamically. In most cases, Marionette will call the function once at instantiation, or first render, and preserve the value throughout the lifetime of the View. There are some exceptions to this rule - these will be referred to with their respective documentation.</source>
          <target state="translated">보시다시피, 여기에있는 거의 모든 속성은 동적으로 해결 될 수 있습니다. 대부분의 경우 Marionette는 인스턴스화시 한 번 함수를 호출하거나 먼저 렌더링하여 View 수명 동안 값을 유지합니다. 이 규칙에는 몇 가지 예외가 있습니다. 이러한 규칙은 해당 문서와 함께 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="77b7dedf5677df726796afa104ac7ab0c5acdd37" translate="yes" xml:space="preserve">
          <source>As when passing a string reference to a view method, the &lt;code&gt;events&lt;/code&gt; attribute passes in the &lt;code&gt;event&lt;/code&gt; as the argument to the function called.</source>
          <target state="translated">문자열 참조를 뷰 메소드에 전달할 때와 같이 &lt;code&gt;events&lt;/code&gt; 속성은 &lt;code&gt;event&lt;/code&gt; 에서 호출 된 함수에 대한 인수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="62050147f8a7ba4b1053af70e20a9eafde6073ab" translate="yes" xml:space="preserve">
          <source>As with a normal request/reply, we can return values from these bound handlers:</source>
          <target state="translated">일반적인 요청 / 응답과 마찬가지로 다음과 같은 바운드 핸들러에서 값을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c94cb99b8b7637a6db2c0dbd5152a9830cef9b9" translate="yes" xml:space="preserve">
          <source>As with all JavaScript libraries, there are a number of ways to get started with a Marionette application. In this section we'll cover the most common ways. While some integrations are listed here, more resources are available in the integrations repo: &lt;a href=&quot;https://github.com/marionettejs/marionette-integrations&quot;&gt;marionette-integrations&lt;/a&gt;</source>
          <target state="translated">모든 JavaScript 라이브러리와 마찬가지로 Marionette 응용 프로그램을 시작하는 방법에는 여러 가지가 있습니다. 이 섹션에서는 가장 일반적인 방법을 다룰 것입니다. 일부 통합이 여기에 나열되어 있지만 통합 저장소에서 더 많은 리소스를 사용할 수 있습니다. &lt;a href=&quot;https://github.com/marionettejs/marionette-integrations&quot;&gt;marionette-integrations&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c1dcbd2f80c1c62fa936fa47119384c29685f571" translate="yes" xml:space="preserve">
          <source>As with request, any arguments passed in &lt;code&gt;channel.request&lt;/code&gt; will be passed into the callback.</source>
          <target state="translated">요청과 마찬가지로 &lt;code&gt;channel.request&lt;/code&gt; 에 전달 된 모든 인수 는 콜백으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="a8a2f123c68d3f4b05d832f75a1f19a433bc4be9" translate="yes" xml:space="preserve">
          <source>As you can see above, you can listen to &lt;a href=&quot;view.lifecycle&quot;&gt;Lifecycle Events&lt;/a&gt; on &lt;code&gt;Backbone.View&lt;/code&gt; and Marionette will fire the events for you.</source>
          <target state="translated">위에서 볼 수 있듯이 &lt;code&gt;Backbone.View&lt;/code&gt; 에서 &lt;a href=&quot;view.lifecycle&quot;&gt;Lifecycle Events&lt;/a&gt; 를 들을 수 있습니다 . View 및 Marionette가 이벤트를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="9c7f3311f46577029c5db26592fc35d0afd804e8" translate="yes" xml:space="preserve">
          <source>Attaching &lt;code&gt;children&lt;/code&gt; within the &lt;code&gt;el&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;el&lt;/code&gt; 내에서 &lt;code&gt;children&lt;/code&gt; 첨부</target>
        </trans-unit>
        <trans-unit id="edeb9255dac04669b6cafec2b71c579bae2200d1" translate="yes" xml:space="preserve">
          <source>Attaching Functions</source>
          <target state="translated">기능 첨부</target>
        </trans-unit>
        <trans-unit id="bead612c607e52b355b9411a0f484d1d8b08c9d3" translate="yes" xml:space="preserve">
          <source>Attaching a Child View</source>
          <target state="translated">자식 뷰 첨부</target>
        </trans-unit>
        <trans-unit id="74cdb6873c99de3087e7afb18e3eef3663c2f82b" translate="yes" xml:space="preserve">
          <source>Attaching a View</source>
          <target state="translated">뷰 첨부</target>
        </trans-unit>
        <trans-unit id="5ed55edd6a000d04069c3fd8cad03957c26ac679" translate="yes" xml:space="preserve">
          <source>BabySitter provides a simple way to manage child views in Backbone/Marionette or any object that manages lists of views. The external Babysitter library was used in Marionette to manage the &lt;code&gt;CollectionView&lt;/code&gt; children.</source>
          <target state="translated">BabySitter는 Backbone / Marionette 또는 뷰 목록을 관리하는 객체에서 자식 뷰를 관리하는 간단한 방법을 제공합니다. 외부 베이비 시터 라이브러리는 Marionette에서 &lt;code&gt;CollectionView&lt;/code&gt; 하위 를 관리하는 데 사용되었습니다 .</target>
        </trans-unit>
        <trans-unit id="a9eb608e6d9438704e04c8b75588848db39ae296" translate="yes" xml:space="preserve">
          <source>Backbone Radio</source>
          <target state="translated">백본 라디오</target>
        </trans-unit>
        <trans-unit id="c1fbb6deb4be09c0c0db41a7226361a4b9986ae6" translate="yes" xml:space="preserve">
          <source>Backbone jQuery Integration</source>
          <target state="translated">백본 jQuery 통합</target>
        </trans-unit>
        <trans-unit id="ff50f658581ba559ad4fe566b182cccc8c5a8310" translate="yes" xml:space="preserve">
          <source>Backbone's &lt;code&gt;extend&lt;/code&gt; function is a useful utility to have, and is used in various places in Marionette. To make the use of this method more consistent, Backbone's &lt;code&gt;extend&lt;/code&gt; has been exported &lt;code&gt;extend&lt;/code&gt;. This allows you to get the extend functionality for your object without having to decide if you want to use Backbone.View or Backbone.Model or another Backbone object to grab the method from.</source>
          <target state="translated">백본의 &lt;code&gt;extend&lt;/code&gt; 기능은 유용한 유틸리티이며 마리오네트의 여러 곳에서 사용됩니다. 이 방법의 사용은 일관성을하기 위해,이 백본 &lt;code&gt;extend&lt;/code&gt; 내 보낸 &lt;code&gt;extend&lt;/code&gt; . 이를 통해 Backbone.View 또는 Backbone.Model 또는 다른 Backbone 객체를 사용하여 메소드를 가져올 지 여부를 결정할 필요없이 객체의 확장 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56438a62e17a5e88da733910e14cccdb2d9df259" translate="yes" xml:space="preserve">
          <source>Backbone.Babysitter</source>
          <target state="translated">Backbone.Babysitter</target>
        </trans-unit>
        <trans-unit id="b5c41fa54ff5bff7637fc93c1399a4d8514292e3" translate="yes" xml:space="preserve">
          <source>Backbone.Eventrouter</source>
          <target state="translated">Backbone.Eventrouter</target>
        </trans-unit>
        <trans-unit id="48920b35ad96a44fb0b8e38134709d050feab94e" translate="yes" xml:space="preserve">
          <source>Backbone.Marionette</source>
          <target state="translated">Backbone.Marionette</target>
        </trans-unit>
        <trans-unit id="2d447e5d372f74b9cacd843a7f4546129126c4aa" translate="yes" xml:space="preserve">
          <source>Backbone.js is tied to jQuery's API for managing DOM manipulation. If you want to completely remove jQuery from your Marionette app, you'll also have to provide your own versions of the following methods:</source>
          <target state="translated">Backbone.js는 DOM 조작 관리를위한 jQuery의 API와 연결되어 있습니다. Marionette 앱에서 jQuery를 완전히 제거하려면 다음 방법의 고유 한 버전도 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="57702bfb28ed9547528aa68a728d20b92c526740" translate="yes" xml:space="preserve">
          <source>Backwards Compatibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8932006bc9fb215b4928a3cadf6c2845e613b82" translate="yes" xml:space="preserve">
          <source>Basic Use</source>
          <target state="translated">기본 사용</target>
        </trans-unit>
        <trans-unit id="8b2eb88bdcc1320e097251348c850cd5c3072fbd" translate="yes" xml:space="preserve">
          <source>Be default all events triggered on the behavior come from the view or the view's entities. Events triggered in the behavior instance are not executed in the view. To notify the view, the behavior must trigger an event in its view property, e.g, &lt;code&gt;this.view.trigger('my:event')&lt;/code&gt;</source>
          <target state="translated">비헤이비어에서 트리거 된 모든 이벤트는 기본적으로보기 또는보기의 엔티티에서 제공됩니다. 비헤이비어 인스턴스에서 트리거 된 이벤트는보기에서 실행되지 않습니다. 보기에 알리려면 동작이보기 속성에서 이벤트를 트리거해야합니다 &lt;code&gt;this.view.trigger('my:event')&lt;/code&gt; 예 : this.view.trigger ( 'my : event')).</target>
        </trans-unit>
        <trans-unit id="70cb647a88bd7c9c17d225eecdaf0f898261eb60" translate="yes" xml:space="preserve">
          <source>Behavior</source>
          <target state="translated">Behavior</target>
        </trans-unit>
        <trans-unit id="d32655caf4f4e5425abc6d1ab229077e08d43af3" translate="yes" xml:space="preserve">
          <source>Behavior Events</source>
          <target state="translated">행동 이벤트</target>
        </trans-unit>
        <trans-unit id="2be609e232bbcd65be414c812508075b0fedf8c9" translate="yes" xml:space="preserve">
          <source>Behavior Lookup was removed</source>
          <target state="translated">행동 조회가 제거되었습니다</target>
        </trans-unit>
        <trans-unit id="4a4e50b60195db74c115949afac475b5e5d58de8" translate="yes" xml:space="preserve">
          <source>Behavior Options</source>
          <target state="translated">행동 옵션</target>
        </trans-unit>
        <trans-unit id="a52c7281871f2b828bbec27f87138e517c2c27e9" translate="yes" xml:space="preserve">
          <source>Behavior is constructed</source>
          <target state="translated">행동 구성</target>
        </trans-unit>
        <trans-unit id="8a93319b330f59145b229f89c6f22ffe90b8fa34" translate="yes" xml:space="preserve">
          <source>Behavior is initialized with view property set</source>
          <target state="translated">뷰 속성 세트로 동작이 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="3b615d319efe934d18d838650aea75dd222232f9" translate="yes" xml:space="preserve">
          <source>Behaviors</source>
          <target state="translated">Behaviors</target>
        </trans-unit>
        <trans-unit id="544bd3855a268c9f9af4d952821689a7ac191b2b" translate="yes" xml:space="preserve">
          <source>Behaviors are powered by an event proxy. This means that any events that are triggered on a &lt;code&gt;View&lt;/code&gt; are passed to all attached &lt;code&gt;behaviors&lt;/code&gt;. This includes:</source>
          <target state="translated">동작은 이벤트 프록시에 의해 구동됩니다. 이는 &lt;code&gt;View&lt;/code&gt; 트리거 된 모든 이벤트가 연결된 모든 &lt;code&gt;behaviors&lt;/code&gt; 전달됨을 의미합니다 . 여기에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="7eb23851aee40ffa1c60d1c21baad39b516217bd" translate="yes" xml:space="preserve">
          <source>Behaviors provide proxies to a number of the view event handling attributes including:</source>
          <target state="translated">동작은 다음을 포함하여 여러 가지보기 이벤트 처리 속성에 프록시를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d4b3a3832d166c4baa09690121d8ac7756dbb9b5" translate="yes" xml:space="preserve">
          <source>Besides the router &lt;a href=&quot;http://backbonejs.org/#Router&quot;&gt;bundled with Backbone&lt;/a&gt; there are many viable routing solutions available. Some specifically designed for Backbone or Marionette and some that are generic solutions for any framework. Here are a few of those options.</source>
          <target state="translated">&lt;a href=&quot;http://backbonejs.org/#Router&quot;&gt;Backbone과 함께 번들로 제공되는&lt;/a&gt; 라우터 외에도 사용 가능한 많은 라우팅 솔루션이 있습니다. 일부는 Backbone 또는 Marionette 용으로 특별히 설계되었으며 일부는 모든 프레임 워크에 대한 일반적인 솔루션입니다. 다음은 이러한 옵션 중 일부입니다.</target>
        </trans-unit>
        <trans-unit id="59824b29e215a2b4ccc3982742a5f452e31a828d" translate="yes" xml:space="preserve">
          <source>Binding Attributes on Instantiation</source>
          <target state="translated">인스턴스화시 속성 바인딩</target>
        </trans-unit>
        <trans-unit id="d93340eb082e194893a481938be42e4db3c36ec5" translate="yes" xml:space="preserve">
          <source>Binding To User Input</source>
          <target state="translated">사용자 입력에 바인딩</target>
        </trans-unit>
        <trans-unit id="d77caa19195952cb4d687beeb4b59909a9c44099" translate="yes" xml:space="preserve">
          <source>Borrowed from backbone, &lt;code&gt;extend&lt;/code&gt; is available on all class definitions for &lt;a href=&quot;basics#class-based-inheritance&quot;&gt;class based inheritance&lt;/a&gt;</source>
          <target state="translated">백본에서 빌려 &lt;code&gt;extend&lt;/code&gt; , &lt;a href=&quot;basics#class-based-inheritance&quot;&gt;클래스 기반 상속에&lt;/a&gt; 대한 모든 클래스 정의에서 사용 가능</target>
        </trans-unit>
        <trans-unit id="c1b982f4f97c0492d8e94173c9bc75a6d64a773b" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;classes&quot;&gt;&lt;code&gt;View&lt;/code&gt; and &lt;code&gt;CollectionView&lt;/code&gt;&lt;/a&gt; are aware of their lifecycle state which indicates if the view is rendered, attached to the DOM or destroyed.</source>
          <target state="translated">&lt;a href=&quot;classes&quot;&gt; &lt;code&gt;View&lt;/code&gt; 와 &lt;code&gt;CollectionView&lt;/code&gt; &lt;/a&gt; 는 모두 라이프 사이클 상태를 인식하여 뷰가 렌더링되는지, DOM에 첨부되었는지 또는 손상되었는지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7fe3c7388b4cbb630ef80c9435fc62b00b762cd3" translate="yes" xml:space="preserve">
          <source>Both &lt;code&gt;View&lt;/code&gt; and &lt;code&gt;CollectionView&lt;/code&gt; share methods for checking lifecycle state.</source>
          <target state="translated">모두 &lt;code&gt;View&lt;/code&gt; 및 &lt;code&gt;CollectionView&lt;/code&gt; 라이프 사이클 상태를 확인하기위한 공유 방법.</target>
        </trans-unit>
        <trans-unit id="ea7530d6c7a886906496078b102ac6c4ed92a25a" translate="yes" xml:space="preserve">
          <source>Both forms take an &lt;code&gt;options&lt;/code&gt; object that will be passed to the &lt;a href=&quot;events.class#show-and-beforeshow-events&quot;&gt;events fired during &lt;code&gt;show&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">두 형식 모두 &lt;a href=&quot;events.class#show-and-beforeshow-events&quot;&gt; &lt;code&gt;show&lt;/code&gt; &lt;/a&gt; 동안 실행 된 이벤트 로 전달 되는 &lt;code&gt;options&lt;/code&gt; 개체를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="984e0c021a2a657b2507abec38c2c3b5e6d854d6" translate="yes" xml:space="preserve">
          <source>Browserify and Grunt</source>
          <target state="translated">Browserify 및 Grunt</target>
        </trans-unit>
        <trans-unit id="989f8d98e4618532931508d10b39d5fbf8d12d22" translate="yes" xml:space="preserve">
          <source>Browserify and Gulp</source>
          <target state="translated">Browserify 및 Gulp</target>
        </trans-unit>
        <trans-unit id="76b422b88da4a9bbba47f8ca2c758779a1a54278" translate="yes" xml:space="preserve">
          <source>Bubbled child events no longer pass the &lt;code&gt;childView&lt;/code&gt; implicitly and only pass the arguments passed as part of &lt;code&gt;triggerMethod&lt;/code&gt;. This means that the arguments passed to &lt;code&gt;onEvent&lt;/code&gt; and &lt;code&gt;onChildviewEvent&lt;/code&gt; are now identical. See the &lt;a href=&quot;view.lifecycle&quot;&gt;documentation on event lifecycles&lt;/a&gt; for more information.</source>
          <target state="translated">버블 링 된 자식 이벤트는 더 이상 &lt;code&gt;childView&lt;/code&gt; 를 암시 적으로 전달하지 않으며 &lt;code&gt;triggerMethod&lt;/code&gt; 의 일부로 전달 된 인수 만 전달합니다 . 이는 &lt;code&gt;onEvent&lt;/code&gt; 및 &lt;code&gt;onChildviewEvent&lt;/code&gt; 에 전달 된 인수 가 이제 동일하다는 것을 의미 합니다. 자세한 내용은 &lt;a href=&quot;view.lifecycle&quot;&gt;이벤트 수명주기에&lt;/a&gt; 대한 설명서 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e1092ef56f6ab0a0bb36539a816d43a038db6127" translate="yes" xml:space="preserve">
          <source>Building the &lt;code&gt;children&lt;/code&gt;</source>
          <target state="translated">건물 &lt;code&gt;children&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bf99289b6ad12b328ac656c23ff76d5d846bb95c" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;CollectionView&lt;/code&gt; has no defined &lt;code&gt;template&lt;/code&gt; and will only attempt to render the &lt;code&gt;template&lt;/code&gt; if one is defined. For &lt;code&gt;View&lt;/code&gt; there may be some situations where you do not intend to use a &lt;code&gt;template&lt;/code&gt;. Perhaps you only need the view's &lt;code&gt;el&lt;/code&gt; or you are using &lt;a href=&quot;dom.prerendered&quot;&gt;prerendered content&lt;/a&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;CollectionView&lt;/code&gt; 에는 &lt;code&gt;template&lt;/code&gt; 이 정의되어 있지 않으며 템플릿 이 정의 된 경우 에만 &lt;code&gt;template&lt;/code&gt; 렌더링을 시도합니다 . 들어 &lt;code&gt;View&lt;/code&gt; 당신이 사용하지 않는 상황이있을 수 있습니다 &lt;code&gt;template&lt;/code&gt; . 아마도 뷰의 &lt;code&gt;el&lt;/code&gt; 필요 하거나 &lt;a href=&quot;dom.prerendered&quot;&gt;사전 렌더링 된 컨텐츠를&lt;/a&gt; 사용 하고있을 것 입니다.</target>
        </trans-unit>
        <trans-unit id="8b94049c7127f2810e9defd496d10ef38306a961" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;ui&lt;/code&gt; is only bound to the elements within the &lt;a href=&quot;#rendering-a-template&quot;&gt;template&lt;/a&gt;. However as &lt;code&gt;events&lt;/code&gt; and &lt;code&gt;triggers&lt;/code&gt; are delegated to the view's &lt;code&gt;el&lt;/code&gt; they will apply to any children. There may be instances where binding &lt;code&gt;ui&lt;/code&gt; is helpful when you want to access elements inside &lt;code&gt;CollectionView&lt;/code&gt;s children with &lt;a href=&quot;dom.interactions#accessing-ui-elements&quot;&gt;&lt;code&gt;getUI()&lt;/code&gt;&lt;/a&gt;. For these cases you will need to bind &lt;code&gt;ui&lt;/code&gt; yourself. To do so run &lt;code&gt;bindUIElements&lt;/code&gt; on the &lt;code&gt;CollectionView&lt;/code&gt;:</source>
          <target state="translated">기본적으로 &lt;code&gt;ui&lt;/code&gt; 는 &lt;a href=&quot;#rendering-a-template&quot;&gt;템플릿&lt;/a&gt; 내의 요소에만 바인딩됩니다 . 그러나 &lt;code&gt;events&lt;/code&gt; 와 &lt;code&gt;triggers&lt;/code&gt; 가 뷰 &lt;code&gt;el&lt;/code&gt; 위임 되면 모든 어린이에게 적용됩니다. &lt;a href=&quot;dom.interactions#accessing-ui-elements&quot;&gt; &lt;code&gt;getUI()&lt;/code&gt; &lt;/a&gt; 하여 &lt;code&gt;CollectionView&lt;/code&gt; 의 하위 요소에 액세스하려는 경우 &lt;code&gt;ui&lt;/code&gt; 바인딩 이 도움이되는 경우가 있을 수 있습니다 . 이 경우 &lt;code&gt;ui&lt;/code&gt; 를 직접 바인딩해야합니다 . 그렇게하려면 &lt;code&gt;CollectionView&lt;/code&gt; 에서 &lt;code&gt;bindUIElements&lt;/code&gt; 를 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5611f4b928e3a39f9262db0fe09145a9f94478b" translate="yes" xml:space="preserve">
          <source>By default all trigger events are stopped with &lt;a href=&quot;features#triggerspreventdefault&quot;&gt;&lt;code&gt;preventDefault&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;features#triggersstoppropagating&quot;&gt;&lt;code&gt;stopPropagation&lt;/code&gt;&lt;/a&gt; methods. This by nature artificially scopes event handling to the view's template preventing event handling of the same selectors in child views. However you can manually configurethe triggers using a hash instead of an event name. The example below triggers an event and prevents default browser behaviour using &lt;code&gt;preventDefault&lt;/code&gt;.</source>
          <target state="translated">기본적으로 모든 트리거 이벤트는 &lt;a href=&quot;features#triggerspreventdefault&quot;&gt; &lt;code&gt;preventDefault&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;features#triggersstoppropagating&quot;&gt; &lt;code&gt;stopPropagation&lt;/code&gt; &lt;/a&gt; 메소드 로 중지됩니다 . 이것은 본질적으로 인위적으로 이벤트 처리 범위를 뷰의 템플릿에 적용하여 자식 뷰에서 동일한 선택기의 이벤트 처리를 방지합니다. 그러나 이벤트 이름 대신 해시를 사용하여 트리거를 수동으로 구성 할 수 있습니다. 아래 예제는 이벤트를 트리거하고 &lt;code&gt;preventDefault&lt;/code&gt; 를 사용하여 기본 브라우저 동작을 방지합니다 .</target>
        </trans-unit>
        <trans-unit id="4b1e5a4ab83410fa3157f993140ee0f675f64c36" translate="yes" xml:space="preserve">
          <source>By default the &lt;a href=&quot;marionette.region&quot;&gt;&lt;code&gt;Region&lt;/code&gt;&lt;/a&gt; is used to instantiate the &lt;code&gt;Application&lt;/code&gt;'s region. An extended Region can be provided to the &lt;code&gt;Application&lt;/code&gt; definition to override the default.</source>
          <target state="translated">기본적으로 &lt;a href=&quot;marionette.region&quot;&gt; &lt;code&gt;Region&lt;/code&gt; &lt;/a&gt; 은 &lt;code&gt;Application&lt;/code&gt; 영역 을 인스턴스화하는 데 사용됩니다 . 확장 영역을 &lt;code&gt;Application&lt;/code&gt; 정의에 제공 하여 기본값을 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="96c42539cf4c61e5ae289f2f0abcd355180d2e43" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;CollectionView&lt;/code&gt; will add the HTML of each ChildView into an element buffer array, and then call the DOM API's &lt;a href=&quot;dom.api#appendcontentsel-contents&quot;&gt;appendContents&lt;/a&gt; once at the end to move all of the HTML within the collection view's &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;CollectionView&lt;/code&gt; 는 각 ChildView의 HTML을 요소 버퍼 배열에 추가 한 다음 끝에 DOM API의 &lt;a href=&quot;dom.api#appendcontentsel-contents&quot;&gt;appendContents를&lt;/a&gt; 한 번 호출 하여 컬렉션 뷰의 &lt;code&gt;el&lt;/code&gt; 내에서 모든 HTML을 이동합니다 .</target>
        </trans-unit>
        <trans-unit id="1891feed7be1618dbbf39981228b45578edc1976" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;CollectionView&lt;/code&gt; will maintain a sorted collection's order in the DOM. This behavior can be disabled by specifying &lt;code&gt;{sortWithCollection: false}&lt;/code&gt; on initialize or on the view definiton.</source>
          <target state="translated">기본적으로 &lt;code&gt;CollectionView&lt;/code&gt; 는 DOM에서 정렬 된 컬렉션의 순서를 유지합니다. 초기화 또는보기 정의에서 &lt;code&gt;{sortWithCollection: false}&lt;/code&gt; 를 지정 하여이 작동을 사용 불가능하게 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b6f0997fa0e805cf4a6a0d668bf5321787e994b" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;CollectionView&lt;/code&gt; will maintain a sorted collection's order in the DOM. This behavior can be disabled by specifying &lt;code&gt;{sortWithCollection: false}&lt;/code&gt; on initialize.</source>
          <target state="translated">기본적으로 &lt;code&gt;CollectionView&lt;/code&gt; 는 DOM에서 정렬 된 컬렉션의 순서를 유지합니다. 초기화시 &lt;code&gt;{sortWithCollection: false}&lt;/code&gt; 를 지정 하여이 동작을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="df1d17e7f34504e3f321c6e804500c93a7a0040c" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;CollectionView&lt;/code&gt; will render the children into the &lt;code&gt;el&lt;/code&gt; of the &lt;code&gt;CollectionView&lt;/code&gt;. If you are rendering a template you will want to set the &lt;code&gt;childViewContainer&lt;/code&gt; to be a selector for an element within the template for child view attachment.</source>
          <target state="translated">기본적으로 &lt;code&gt;CollectionView&lt;/code&gt; 는 자식을 &lt;code&gt;CollectionView&lt;/code&gt; 의 &lt;code&gt;el&lt;/code&gt; 에 렌더링합니다 . 템플릿을 렌더링하는 경우 &lt;code&gt;childViewContainer&lt;/code&gt; 를 자식 뷰 첨부 파일의 템플릿 내 요소에 대한 선택기 로 설정하려고합니다 .</target>
        </trans-unit>
        <trans-unit id="705e0a0e1a714b6be7bcd386d591d957f8e22f1a" translate="yes" xml:space="preserve">
          <source>By default the CollectionView will refilter when views change or when the CollectionView is sorted.</source>
          <target state="translated">기본적으로 CollectionView는 뷰가 변경되거나 CollectionView가 정렬 될 때 다시 필터링됩니다.</target>
        </trans-unit>
        <trans-unit id="c26361ba1b79c846529e06fa3feb90115340a641" translate="yes" xml:space="preserve">
          <source>By prefixing with &lt;code&gt;@ui&lt;/code&gt;, we can change the underlying template without having to hunt through our view for every place where that selector is referenced - just update the &lt;code&gt;ui&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;@ui&lt;/code&gt; 접두사를 사용 하면 해당 선택기가 참조되는 모든 위치에 대한보기를 탐색하지 않고도 기본 템플릿을 변경할 수 있습니다 . &lt;code&gt;ui&lt;/code&gt; 객체 만 업데이트하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="e29368ba23391f121d21f2aa124566395d95a41e" translate="yes" xml:space="preserve">
          <source>By setting &lt;a href=&quot;view.rendering#using-a-view-without-a-template&quot;&gt;&lt;code&gt;template&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;&lt;/a&gt; you can entirely disable the view rendering and events. This may be useful for cases where you only need the &lt;code&gt;el&lt;/code&gt; or have &lt;a href=&quot;dom.prerendered&quot;&gt;&lt;code&gt;prerendered content&lt;/code&gt;&lt;/a&gt; that you do not intend to re-render.</source>
          <target state="translated">설정하여 &lt;a href=&quot;view.rendering#using-a-view-without-a-template&quot;&gt; &lt;code&gt;template&lt;/code&gt; 에 &lt;code&gt;false&lt;/code&gt; &lt;/a&gt; 당신은 완전히 뷰 렌더링 및 이벤트를 비활성화 할 수 있습니다. 이 경우에만 필요한 경우에 유용 할 수 있습니다 &lt;code&gt;el&lt;/code&gt; 또는이 &lt;a href=&quot;dom.prerendered&quot;&gt; &lt;code&gt;prerendered content&lt;/code&gt; &lt;/a&gt; 은 다시 렌더링 의도하지 않는 것이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c55ab81fd55ae22e674e55d6b3b87b5b097ef12" translate="yes" xml:space="preserve">
          <source>Cache the jQuery selector</source>
          <target state="translated">jQuery 선택기 캐시</target>
        </trans-unit>
        <trans-unit id="6c3125cdb5e137bb8dcf4f4c138ffe4b4e6e74ff" translate="yes" xml:space="preserve">
          <source>Calling this method without a events hash will unbind all events from the channel.</source>
          <target state="translated">이벤트 해시없이이 메소드를 호출하면 모든 이벤트가 채널에서 바인드 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="4f0c1eb94b3b558fea0f01c6baa1b503c89e12bd" translate="yes" xml:space="preserve">
          <source>Calling this method without a radio requests hash will unbind all requests from the channel.</source>
          <target state="translated">라디오 요청 해시없이이 메소드를 호출하면 채널의 모든 요청이 바인드 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="25b80288cf035193ed46cc24f131dc014ad697e3" translate="yes" xml:space="preserve">
          <source>Capitalize the first letter of each word - &lt;code&gt;Before&lt;/code&gt;, &lt;code&gt;Dom&lt;/code&gt;, &lt;code&gt;Refresh&lt;/code&gt;</source>
          <target state="translated">각 단어의 첫 글자를 대문자로 - &lt;code&gt;Before&lt;/code&gt; , &lt;code&gt;Dom&lt;/code&gt; , &lt;code&gt;Refresh&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9aaeca830c240c7ac49f3a4ea952ad7058346af5" translate="yes" xml:space="preserve">
          <source>Change all instances of &lt;code&gt;LayoutView&lt;/code&gt; and &lt;code&gt;ItemView&lt;/code&gt; to &lt;code&gt;View&lt;/code&gt;. Any views that previously extended &lt;code&gt;View&lt;/code&gt; with a custom &lt;code&gt;render&lt;/code&gt; should work relatively unchanged.</source>
          <target state="translated">&lt;code&gt;LayoutView&lt;/code&gt; 및 &lt;code&gt;ItemView&lt;/code&gt; 의 모든 인스턴스 를 &lt;code&gt;View&lt;/code&gt; 로 변경하십시오 . 이전 에 사용자 정의 &lt;code&gt;render&lt;/code&gt; &lt;code&gt;View&lt;/code&gt; 를 확장 한 모든 뷰는 상대적으로 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9cce0c90ef22046cf4f721bdcd2a6086f9349ffb" translate="yes" xml:space="preserve">
          <source>Change all references to &lt;code&gt;view.region&lt;/code&gt; to &lt;code&gt;view.getRegion('region')&lt;/code&gt;. For example, in Mn 2.x and below:</source>
          <target state="translated">&lt;code&gt;view.region&lt;/code&gt; 에 대한 모든 참조를 view.getRegion &lt;code&gt;view.getRegion('region')&lt;/code&gt; 변경하십시오 . 예를 들어 Mn 2.x 이하에서 :</target>
        </trans-unit>
        <trans-unit id="263ecb36d6f5e51faa407484e1fdf7e598753259" translate="yes" xml:space="preserve">
          <source>Changes to &lt;code&gt;region.show()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;region.show()&lt;/code&gt; 변경</target>
        </trans-unit>
        <trans-unit id="879f0b1bef59eeebf78cfd3a22f6f8077810cecf" translate="yes" xml:space="preserve">
          <source>Channel</source>
          <target state="translated">Channel</target>
        </trans-unit>
        <trans-unit id="3e33386c5a11adb27b76d5db0c4a7d77c6da334f" translate="yes" xml:space="preserve">
          <source>Check If View Is Being Swapped By Another</source>
          <target state="translated">뷰가 다른 뷰에 의해 스왑되고 있는지 확인</target>
        </trans-unit>
        <trans-unit id="3b4528af27f1abdb183ac587e052ccc3bc4be2d8" translate="yes" xml:space="preserve">
          <source>Checking a Feature Flag State</source>
          <target state="translated">기능 플래그 상태 확인</target>
        </trans-unit>
        <trans-unit id="a22acf5e368d4921595ae21dd5228ddadd6ed7a0" translate="yes" xml:space="preserve">
          <source>Checking a Feature Flag state</source>
          <target state="translated">기능 플래그 상태 확인</target>
        </trans-unit>
        <trans-unit id="3d7f998c549c58f4fcd8c7280bcf504737341b64" translate="yes" xml:space="preserve">
          <source>Checking whether a region is showing a view</source>
          <target state="translated">영역에 뷰가 표시되는지 확인</target>
        </trans-unit>
        <trans-unit id="a6e520d27e2439883dfed4b121ef72d0d3b8950f" translate="yes" xml:space="preserve">
          <source>Child Event Bubbling</source>
          <target state="translated">어린이 이벤트 버블 링</target>
        </trans-unit>
        <trans-unit id="b3db9006c8bfbf050fa23099db12d7ad7868915d" translate="yes" xml:space="preserve">
          <source>Child View Events</source>
          <target state="translated">어린이보기 이벤트</target>
        </trans-unit>
        <trans-unit id="51d50ae30411d4b449fe3d1dbae5d1101f538c06" translate="yes" xml:space="preserve">
          <source>Child event bubbling above one level is now removed in most instances and deprecated pending removal everywhere else. This can no longer be relied upon. To pass events further up the chain, you must explicitly using &lt;code&gt;childViewTriggers&lt;/code&gt; to convert the event from the child into an event on the parent. These can be chained all the way up to the level you require them to be.</source>
          <target state="translated">한 수준 이상의 하위 이벤트 버블 링은 이제 대부분의 경우 제거되며 다른 곳에서는 제거 보류 중입니다. 더 이상 신뢰할 수 없습니다. 체인으로 이벤트를 추가로 전달하려면 &lt;code&gt;childViewTriggers&lt;/code&gt; 를 명시 적으로 사용 하여 이벤트를 하위에서 상위의 이벤트로 변환 해야합니다 . 이것들은 당신이 원하는 수준까지 연결될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="308ad68b1358dbf6ecdc38c6fa80527a628a864f" translate="yes" xml:space="preserve">
          <source>Child event handlers</source>
          <target state="translated">자식 이벤트 핸들러</target>
        </trans-unit>
        <trans-unit id="4ebc9a747d2746fd28a544d143ee0f3e841fa631" translate="yes" xml:space="preserve">
          <source>Children added to a &lt;code&gt;View&lt;/code&gt;'s region or through a &lt;code&gt;CollectionView&lt;/code&gt; will be automatically destroyed if the view is re-rendered, if the view is destroyed, or for &lt;code&gt;CollectionView&lt;/code&gt; if the &lt;code&gt;collection&lt;/code&gt; is reset.</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 의 영역에 또는 &lt;code&gt;CollectionView&lt;/code&gt; 를 통해 추가 된 자식 은 뷰가 다시 렌더링되거나 뷰가 파괴 된 경우 또는 &lt;code&gt;collection&lt;/code&gt; 이 재설정 된 경우 &lt;code&gt;CollectionView&lt;/code&gt; 의 경우 자동으로 삭제됩니다 .</target>
        </trans-unit>
        <trans-unit id="b6aee236ebc26fad5c792009976e4b652d1b1a0f" translate="yes" xml:space="preserve">
          <source>Children are automatically managed once the &lt;code&gt;CollectionView&lt;/code&gt; is &lt;a href=&quot;#rendering-a-collectionview&quot;&gt;rendered&lt;/a&gt;. For each model within the &lt;code&gt;collection&lt;/code&gt; the &lt;code&gt;CollectionView&lt;/code&gt; will build and store a &lt;code&gt;childView&lt;/code&gt; within its &lt;code&gt;children&lt;/code&gt; object. This allows you to easily access the views within the collection view, iterate them, find them by a given indexer such as the view's model or id and more.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 가 &lt;a href=&quot;#rendering-a-collectionview&quot;&gt;렌더링&lt;/a&gt; 되면 자식이 자동으로 관리 됩니다 . 내의 각 모델의 &lt;code&gt;collection&lt;/code&gt; &lt;code&gt;CollectionView&lt;/code&gt; 를 구축하고 저장합니다 &lt;code&gt;childView&lt;/code&gt; 의 내 &lt;code&gt;children&lt;/code&gt; 객체를. 이를 통해 컬렉션 뷰 내의 뷰에 쉽게 액세스하고, 반복하고, 뷰의 모델 또는 ID 등과 같은 지정된 인덱서로 뷰를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41ff354b2b330bd1f8a0587675e43cb32a731f33" translate="yes" xml:space="preserve">
          <source>Class</source>
          <target state="translated">Class</target>
        </trans-unit>
        <trans-unit id="c68b3b2ae02b8f56d2d2672979293f138f672a5f" translate="yes" xml:space="preserve">
          <source>Class Events</source>
          <target state="translated">수업 이벤트</target>
        </trans-unit>
        <trans-unit id="ee9d78f59eef9d4c9911acf6671c6511089d1d04" translate="yes" xml:space="preserve">
          <source>Class-based Inheritance</source>
          <target state="translated">클래스 기반 상속</target>
        </trans-unit>
        <trans-unit id="eaab9a41d7d4011724565ae6331c5fe5a6d29990" translate="yes" xml:space="preserve">
          <source>Class: Application</source>
          <target state="translated">클래스 : 응용</target>
        </trans-unit>
        <trans-unit id="adea018cc5c14d7d103a48cbd36bd6052d24349b" translate="yes" xml:space="preserve">
          <source>Class: Behavior</source>
          <target state="translated">직업 : 행동</target>
        </trans-unit>
        <trans-unit id="dc00c1b097699d2848f4973b09b210edaa4ebc7c" translate="yes" xml:space="preserve">
          <source>Class: CollectionView</source>
          <target state="translated">클래스 : CollectionView</target>
        </trans-unit>
        <trans-unit id="3b0317a8771fe72c5668ac680f4cb423878f6946" translate="yes" xml:space="preserve">
          <source>Class: MnObject</source>
          <target state="translated">클래스 : MnObject</target>
        </trans-unit>
        <trans-unit id="0af548acbf7fdfd5f8b6c01e4f72c62deca25fac" translate="yes" xml:space="preserve">
          <source>Class: Region</source>
          <target state="translated">클래스 : 지역</target>
        </trans-unit>
        <trans-unit id="afc97f49ce69c24e8b9517b5b23b5c4cf4df5d9e" translate="yes" xml:space="preserve">
          <source>Class: View</source>
          <target state="translated">클래스 :보기</target>
        </trans-unit>
        <trans-unit id="ed1846afee3be21521286932b99e2aeae9e6414a" translate="yes" xml:space="preserve">
          <source>Classes</source>
          <target state="translated">Classes</target>
        </trans-unit>
        <trans-unit id="5313519c70aee4e720815443114819ca236a31e6" translate="yes" xml:space="preserve">
          <source>Collection Events</source>
          <target state="translated">컬렉션 이벤트</target>
        </trans-unit>
        <trans-unit id="b694f50c7834bc4c7f77835e2ab555d6bd98885f" translate="yes" xml:space="preserve">
          <source>Collection events work exactly the same way as &lt;a href=&quot;#model-events&quot;&gt;&lt;code&gt;modelEvents&lt;/code&gt;&lt;/a&gt; with their own &lt;code&gt;collectionEvents&lt;/code&gt; key:</source>
          <target state="translated">컬렉션 이벤트 는 자체 &lt;code&gt;collectionEvents&lt;/code&gt; 키를 사용하여 &lt;a href=&quot;#model-events&quot;&gt; &lt;code&gt;modelEvents&lt;/code&gt; &lt;/a&gt; 와 동일한 방식으로 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="bb2f5e92f531ececafbd7bf535da8e34ca447ac6" translate="yes" xml:space="preserve">
          <source>CollectionView</source>
          <target state="translated">CollectionView</target>
        </trans-unit>
        <trans-unit id="f9970cb6942d1f68c2298e13b409f717574d31ae" translate="yes" xml:space="preserve">
          <source>CollectionView &lt;code&gt;children&lt;/code&gt; Iterators And Collection Functions</source>
          <target state="translated">CollectionView &lt;code&gt;children&lt;/code&gt; 반복자 및 수집 함수</target>
        </trans-unit>
        <trans-unit id="166ca3eebc66b1b465c025434cb2993430c14bf1" translate="yes" xml:space="preserve">
          <source>CollectionView &lt;code&gt;children&lt;/code&gt;'s: &lt;code&gt;findByCid&lt;/code&gt;</source>
          <target state="translated">CollectionView &lt;code&gt;children&lt;/code&gt; : &lt;code&gt;findByCid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="38404055688c1d183c262d1f1c809942784e30b2" translate="yes" xml:space="preserve">
          <source>CollectionView &lt;code&gt;children&lt;/code&gt;'s: &lt;code&gt;findByIndex&lt;/code&gt;</source>
          <target state="translated">CollectionView &lt;code&gt;children&lt;/code&gt; : &lt;code&gt;findByIndex&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="036de607925addb9d97c807ce83fd6d2ba93634c" translate="yes" xml:space="preserve">
          <source>CollectionView &lt;code&gt;children&lt;/code&gt;'s: &lt;code&gt;findByModel&lt;/code&gt;</source>
          <target state="translated">CollectionView &lt;code&gt;children&lt;/code&gt; : &lt;code&gt;findByModel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b0ad2286ad084d3fa1ecd0e26aff3c97a08e8225" translate="yes" xml:space="preserve">
          <source>CollectionView &lt;code&gt;children&lt;/code&gt;'s: &lt;code&gt;findByModelCid&lt;/code&gt;</source>
          <target state="translated">CollectionView &lt;code&gt;children&lt;/code&gt; : &lt;code&gt;findByModelCid&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8505941d8501487ee44ab81490de1154cfbd21c" translate="yes" xml:space="preserve">
          <source>CollectionView &lt;code&gt;children&lt;/code&gt;'s: &lt;code&gt;findIndexByView&lt;/code&gt;</source>
          <target state="translated">CollectionView &lt;code&gt;children&lt;/code&gt; : &lt;code&gt;findIndexByView&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="528c5bcf55a5b7eb4d0f1e9f6aec292949d568ae" translate="yes" xml:space="preserve">
          <source>CollectionView EmptyView Region Events</source>
          <target state="translated">CollectionView EmptyView 지역 이벤트</target>
        </trans-unit>
        <trans-unit id="e101d9865d365370b1981927c6e09d002b7acb0f" translate="yes" xml:space="preserve">
          <source>CollectionView Events</source>
          <target state="translated">CollectionView 이벤트</target>
        </trans-unit>
        <trans-unit id="02e26e2b95183c4327f29b48b1d2c3e4a1b12ebc" translate="yes" xml:space="preserve">
          <source>CollectionView's &lt;code&gt;childView&lt;/code&gt;</source>
          <target state="translated">CollectionView의 &lt;code&gt;childView&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="782cbe9e8d559011e0fe711dc06f9f67e0ef22f5" translate="yes" xml:space="preserve">
          <source>CollectionView's &lt;code&gt;emptyView&lt;/code&gt;</source>
          <target state="translated">CollectionView의 &lt;code&gt;emptyView&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="be7923f90c58c3ff4cebac17bf1f3f5432a0397f" translate="yes" xml:space="preserve">
          <source>CollectionView's &lt;code&gt;getEmptyRegion&lt;/code&gt;</source>
          <target state="translated">CollectionView의 &lt;code&gt;getEmptyRegion&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="99d19c8a88f85e9461319a33d5ef00933b87d6fd" translate="yes" xml:space="preserve">
          <source>Common Concepts</source>
          <target state="translated">공통 개념</target>
        </trans-unit>
        <trans-unit id="87835ced7cce734e9a2aa7797cd0ea443e855beb" translate="yes" xml:space="preserve">
          <source>Common Functionality</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd400a8fdcefe3b4d0051f1d505bd8d7fbb7eefd" translate="yes" xml:space="preserve">
          <source>Common Functionality bindEvents</source>
          <target state="translated">공통 기능 bindEvents</target>
        </trans-unit>
        <trans-unit id="b67c12d2501bf8a84ed6e8ccfcf394ff18576328" translate="yes" xml:space="preserve">
          <source>Common Functionality bindRequests</source>
          <target state="translated">공통 기능 bindRequests</target>
        </trans-unit>
        <trans-unit id="aa06117987213fc2b678500f7779c9e1f4d41d24" translate="yes" xml:space="preserve">
          <source>Common Functionality extend</source>
          <target state="translated">공통 기능 확장</target>
        </trans-unit>
        <trans-unit id="273764efb1443ad87a00c6dcaadc6f3e04c5537d" translate="yes" xml:space="preserve">
          <source>Common Functionality getOption</source>
          <target state="translated">공통 기능 getOption</target>
        </trans-unit>
        <trans-unit id="c2656353abaddc4e368b6128dc6af102002d2287" translate="yes" xml:space="preserve">
          <source>Common Functionality initialize</source>
          <target state="translated">공통 기능 초기화</target>
        </trans-unit>
        <trans-unit id="273e15ac883eb42f07e329582c355db6cca819cf" translate="yes" xml:space="preserve">
          <source>Common Functionality mergeOptions</source>
          <target state="translated">공통 기능 mergeOptions</target>
        </trans-unit>
        <trans-unit id="26798649f04238c71a20e997561e32dea1d0ea8c" translate="yes" xml:space="preserve">
          <source>Common Functionality normalizeMethods</source>
          <target state="translated">공통 기능 normalizeMethods</target>
        </trans-unit>
        <trans-unit id="0c910698ea3d19885cd756bc1fbfa1b8c47d78df" translate="yes" xml:space="preserve">
          <source>Common Functionality triggerMethod</source>
          <target state="translated">공통 기능 트리거 방법</target>
        </trans-unit>
        <trans-unit id="9f9b4610c6fe8fdba71aa2017ed49b701503b7e3" translate="yes" xml:space="preserve">
          <source>Common Functionality unbindEvents</source>
          <target state="translated">공통 기능 unbindEvents</target>
        </trans-unit>
        <trans-unit id="d4f634ef07fc57d7434a727ae394fc9821060b66" translate="yes" xml:space="preserve">
          <source>Common Functionality unbindRequests</source>
          <target state="translated">공통 기능 언 바인드</target>
        </trans-unit>
        <trans-unit id="7bf2fb737de26131a521beb084cfbd3aba531615" translate="yes" xml:space="preserve">
          <source>Common Marionette Concepts</source>
          <target state="translated">일반적인 마리오네트 개념</target>
        </trans-unit>
        <trans-unit id="80c8afce9a58e1633ac5366c28b6ce9b298c6bab" translate="yes" xml:space="preserve">
          <source>Common Marionette Functionality</source>
          <target state="translated">일반적인 마리오네트 기능</target>
        </trans-unit>
        <trans-unit id="83b2f148b3d336d194c42cdbf3cabd534a81e55e" translate="yes" xml:space="preserve">
          <source>Common Method Utilities</source>
          <target state="translated">일반적인 방법 유틸리티</target>
        </trans-unit>
        <trans-unit id="32e8b8968899c946cd51220b6c3a8f8bae06ae39" translate="yes" xml:space="preserve">
          <source>CompositeView was removed</source>
          <target state="translated">CompositeView가 제거되었습니다</target>
        </trans-unit>
        <trans-unit id="56ad7ab3e5dadd981812da372171e32dd8b66b27" translate="yes" xml:space="preserve">
          <source>Configure How To Remove View</source>
          <target state="translated">보기를 제거하는 방법 구성</target>
        </trans-unit>
        <trans-unit id="d090da4c442fe9bc413f7ee9c6a056292c8a88ce" translate="yes" xml:space="preserve">
          <source>Current Features</source>
          <target state="translated">현재 기능</target>
        </trans-unit>
        <trans-unit id="677e9557249f0fa33ba2fdd83bc7c1c732325b8a" translate="yes" xml:space="preserve">
          <source>Customizing &lt;code&gt;attachElContents&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;attachElContents&lt;/code&gt; 사용자 정의</target>
        </trans-unit>
        <trans-unit id="de8b9fe60048b2b57c3d7c4dcd41dccbd1df4329" translate="yes" xml:space="preserve">
          <source>DEV_MODE</source>
          <target state="translated">DEV_MODE</target>
        </trans-unit>
        <trans-unit id="62fc1554df432827d8aeed7a32c96cf2c79540d4" translate="yes" xml:space="preserve">
          <source>DOM Change Events</source>
          <target state="translated">DOM 변경 이벤트</target>
        </trans-unit>
        <trans-unit id="3113a8cb95cc0bbbe13fed497ac9adbbfa901dcd" translate="yes" xml:space="preserve">
          <source>DOM Change Lifecycle Events</source>
          <target state="translated">DOM 변경 라이프 사이클 이벤트</target>
        </trans-unit>
        <trans-unit id="b1d8ddf54f811bedaa6c9d3aaf41d277e4e99308" translate="yes" xml:space="preserve">
          <source>DOM Interactions</source>
          <target state="translated">DOM 상호 작용</target>
        </trans-unit>
        <trans-unit id="cff0d8f896662b18cea548ba76f079afc0edba4e" translate="yes" xml:space="preserve">
          <source>DOM Interactions in a Backbone.View</source>
          <target state="translated">백본에서의 DOM 상호 작용</target>
        </trans-unit>
        <trans-unit id="94d8201fb1ca0e4bb48b31600ec49be58d472426" translate="yes" xml:space="preserve">
          <source>Defining &lt;code&gt;ui&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ui&lt;/code&gt; 정의</target>
        </trans-unit>
        <trans-unit id="21260110a75cc1ae05fcee579101082b8d6793e5" translate="yes" xml:space="preserve">
          <source>Defining Regions</source>
          <target state="translated">지역 정의</target>
        </trans-unit>
        <trans-unit id="c029cc1d5811234cbd54bed0e9b261c57c1ebda8" translate="yes" xml:space="preserve">
          <source>Defining When an &lt;code&gt;emptyView&lt;/code&gt; shows</source>
          <target state="translated">&lt;code&gt;emptyView&lt;/code&gt; 가 표시 될 때 정의</target>
        </trans-unit>
        <trans-unit id="edae3e39479277996a18961d19daaf833a5454db" translate="yes" xml:space="preserve">
          <source>Defining and Attaching Behaviors</source>
          <target state="translated">동작 정의 및 첨부</target>
        </trans-unit>
        <trans-unit id="eda91eee5a8003ff221b07b993f329a80641ffda" translate="yes" xml:space="preserve">
          <source>Defining the &lt;code&gt;childViewContainer&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;childViewContainer&lt;/code&gt; 정의</target>
        </trans-unit>
        <trans-unit id="9a94534fb562e117aee9f1a60c5d9362281ec118" translate="yes" xml:space="preserve">
          <source>Defining the &lt;code&gt;viewComparator&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;viewComparator&lt;/code&gt; 정의하기</target>
        </trans-unit>
        <trans-unit id="2ed7858f9bd834e404cb9eca58a5177b8ed32e02" translate="yes" xml:space="preserve">
          <source>Defining the &lt;code&gt;viewFilter&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;viewFilter&lt;/code&gt; 정의</target>
        </trans-unit>
        <trans-unit id="7baefbfb1497229b67dd324a4df4d1e4aefab651" translate="yes" xml:space="preserve">
          <source>Defining the Application Region</source>
          <target state="translated">응용 프로그램 영역 정의</target>
        </trans-unit>
        <trans-unit id="37c575c93d5fe52874efa7f7a31e9c415aa60f51" translate="yes" xml:space="preserve">
          <source>Destroy Events</source>
          <target state="translated">이벤트 파괴</target>
        </trans-unit>
        <trans-unit id="18a3c0571170b0bdbb5b8c1717f167ab60055503" translate="yes" xml:space="preserve">
          <source>Destroying All &lt;code&gt;children&lt;/code&gt;</source>
          <target state="translated">모든 &lt;code&gt;children&lt;/code&gt; 파괴</target>
        </trans-unit>
        <trans-unit id="3bcbe4bc1c6e00b264c7e867c1a640f72258900f" translate="yes" xml:space="preserve">
          <source>Destroying Children</source>
          <target state="translated">아이들을 파괴</target>
        </trans-unit>
        <trans-unit id="91c404aee566fa94cd8caa5a9fc38029e49d2ee9" translate="yes" xml:space="preserve">
          <source>Destroying a Behavior</source>
          <target state="translated">행동 파괴</target>
        </trans-unit>
        <trans-unit id="8684cd9d1dbc466862a456a7cf671260ca4dd91f" translate="yes" xml:space="preserve">
          <source>Destroying a Child View</source>
          <target state="translated">자식보기 파괴</target>
        </trans-unit>
        <trans-unit id="a30b305afbc52da723a72ca3d237c2e2373948de" translate="yes" xml:space="preserve">
          <source>Destroying a MnObject</source>
          <target state="translated">MnObject 파괴</target>
        </trans-unit>
        <trans-unit id="682b6b6c41afd5fa84bc5ab9985333a0bae2752d" translate="yes" xml:space="preserve">
          <source>Destroying a View</source>
          <target state="translated">보기 파괴</target>
        </trans-unit>
        <trans-unit id="e8ddea6272c3d6adf8b236ac0aef6904c34d168c" translate="yes" xml:space="preserve">
          <source>Destroying a view (ie: &lt;code&gt;myView.destroy()&lt;/code&gt;) cleans up anything constucted within Marionette so that if a view's instance is no longer referenced the view can be cleaned up by the browser's garbage collector.</source>
          <target state="translated">뷰를 삭제하면 (예 : &lt;code&gt;myView.destroy()&lt;/code&gt; ) Marionette 내에 구성되어있는 모든 것을 정리하여 뷰의 인스턴스가 더 이상 참조되지 않으면 브라우저의 가비지 수집기에 의해 뷰를 정리할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90133eb7658cb18b79cf385336b7f62632db8558" translate="yes" xml:space="preserve">
          <source>Detach &lt;code&gt;el&lt;/code&gt; from the DOM without removing listeners.</source>
          <target state="translated">리스너를 제거하지 않고 DOM에서 &lt;code&gt;el&lt;/code&gt; 을 분리 하십시오.</target>
        </trans-unit>
        <trans-unit id="bfba2e0d7ddc84d411fcdbe07b6a38d924baf472" translate="yes" xml:space="preserve">
          <source>Detaching Existing Views</source>
          <target state="translated">기존 뷰 분리</target>
        </trans-unit>
        <trans-unit id="69edb5d14c401313e01634ca7d67df7174dedc3e" translate="yes" xml:space="preserve">
          <source>Detaching a Child View</source>
          <target state="translated">자식 뷰 분리</target>
        </trans-unit>
        <trans-unit id="26fea1961bff9499612a7157bdde66189853bfdb" translate="yes" xml:space="preserve">
          <source>Detaching a View</source>
          <target state="translated">뷰 분리</target>
        </trans-unit>
        <trans-unit id="e259c5519b3f7d531ac43a6cc9ae9d4773f463a5" translate="yes" xml:space="preserve">
          <source>Determining what method an event will call is easy, we will outline this with an example using &lt;code&gt;before:dom:refresh&lt;/code&gt; though this also works with any custom events you want to fire:</source>
          <target state="translated">이벤트가 호출 할 메소드를 결정하는 것은 쉽지만, &lt;code&gt;before:dom:refresh&lt;/code&gt; 를 사용하는 예제를 통해이를 간략하게 설명 할 것입니다 .</target>
        </trans-unit>
        <trans-unit id="33a02cfdcffd698fa282655798a0005a69a2da4a" translate="yes" xml:space="preserve">
          <source>Display a &lt;code&gt;View&lt;/code&gt; instance in the region attached to the Application. This runs the &lt;a href=&quot;view.lifecycle&quot;&gt;&lt;code&gt;View lifecycle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">애플리케이션에 연결된 리전에서 &lt;code&gt;View&lt;/code&gt; 인스턴스를 표시합니다 . &lt;a href=&quot;view.lifecycle&quot;&gt; &lt;code&gt;View lifecycle&lt;/code&gt; &lt;/a&gt; 가 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="828296e9e5b807e7f4b566b23bcc31faa7913be5" translate="yes" xml:space="preserve">
          <source>Documentation Index</source>
          <target state="translated">문서 색인</target>
        </trans-unit>
        <trans-unit id="d7e9cbade0fed390975235c30bff1eeb1aacb477" translate="yes" xml:space="preserve">
          <source>Each behavior will now be able to respond to user interactions as though the event handlers were attached to the view directly. In addition to using array notation, Behaviors can be attached using an object:</source>
          <target state="translated">이제 이벤트 핸들러가 뷰에 직접 연결된 것처럼 각 비헤이비어가 사용자 상호 작용에 응답 할 수 있습니다. 배열 표기법을 사용하는 것 외에도 객체를 사용하여 동작을 첨부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc603d8002ded69c2f5e71e562444099e09a5de6" translate="yes" xml:space="preserve">
          <source>Each view class has a renderer which by default passes the &lt;a href=&quot;#serializing-data&quot;&gt;view data&lt;/a&gt; to the template function and returns the html string it generates.</source>
          <target state="translated">각 뷰 클래스에는 기본적으로 &lt;a href=&quot;#serializing-data&quot;&gt;뷰 데이터&lt;/a&gt; 를 템플릿 함수에 전달하고 생성 된 html 문자열을 반환 하는 렌더러가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8f9abffaef3fa9bf0ec3d10557dda244cb2a7a0" translate="yes" xml:space="preserve">
          <source>Efficient Nested View Structures</source>
          <target state="translated">효율적인 중첩 뷰 구조</target>
        </trans-unit>
        <trans-unit id="831c1c2ead0b8f2d031a01a5c08c7029c785188d" translate="yes" xml:space="preserve">
          <source>Emptying a Region</source>
          <target state="translated">영역 비우기</target>
        </trans-unit>
        <trans-unit id="d78253113336b52f48b9dd93c5732b55153b1f41" translate="yes" xml:space="preserve">
          <source>Entity Events</source>
          <target state="translated">엔터티 이벤트</target>
        </trans-unit>
        <trans-unit id="1309085e1b16c3e618ad6d0016721b237ca0813a" translate="yes" xml:space="preserve">
          <source>Entity events</source>
          <target state="translated">엔터티 이벤트</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="d44b41d5da5151986c1bd05d1f16a9161b149d32" translate="yes" xml:space="preserve">
          <source>Event Bubbling</source>
          <target state="translated">이벤트 버블 링</target>
        </trans-unit>
        <trans-unit id="292989d57e57ee7a50a6e9e280885db397eacdd1" translate="yes" xml:space="preserve">
          <source>Event and Trigger Mapping</source>
          <target state="translated">이벤트 및 트리거 매핑</target>
        </trans-unit>
        <trans-unit id="4cce85b43344e12762992905eb29078ccc1936b7" translate="yes" xml:space="preserve">
          <source>Event handlers are called with the same arguments as if listening to the entity directly and called with the context of the view instance.</source>
          <target state="translated">이벤트 핸들러는 엔티티를 직접 청취하는 것과 동일한 인수로 호출되며 뷰 인스턴스의 컨텍스트로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f55ebfd6234aa80a39ed9bfc57a51137ebf7a518" translate="yes" xml:space="preserve">
          <source>Event handlers will receive the triggering view as the first argument and the DOM Event object as the second followed by any extra parameters triggered by the event.</source>
          <target state="translated">이벤트 핸들러는 첫 번째 인수로 트리거 뷰를, 두 번째 이벤트로 DOM 이벤트 객체를 수신 한 후 이벤트에 의해 트리거 된 추가 매개 변수를받습니다.</target>
        </trans-unit>
        <trans-unit id="aa17a86378aa781e477b77511b8712b283c5a328" translate="yes" xml:space="preserve">
          <source>Event listeners are constructed by:</source>
          <target state="translated">이벤트 리스너는 다음과 같이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="c5497bca58468ae64aed6c0fd921109217988db3" translate="yes" xml:space="preserve">
          <source>Events</source>
          <target state="translated">Events</target>
        </trans-unit>
        <trans-unit id="0854be86d062a456db2bbb358379b76bbbe90ff2" translate="yes" xml:space="preserve">
          <source>Events - trigger events on a global object</source>
          <target state="translated">이벤트-글로벌 객체에서 이벤트를 트리거합니다</target>
        </trans-unit>
        <trans-unit id="15960d7c6dda794df1ace67037b1cf575ffbb533" translate="yes" xml:space="preserve">
          <source>Events / Initialize Order</source>
          <target state="translated">이벤트 / 주문 초기화</target>
        </trans-unit>
        <trans-unit id="fe344110e73a74f72736069ed919c062c627ec74" translate="yes" xml:space="preserve">
          <source>Events API</source>
          <target state="translated">이벤트 API</target>
        </trans-unit>
        <trans-unit id="541c20b4288dd7d0c4b2355deaa66ae794d7df02" translate="yes" xml:space="preserve">
          <source>Events and Requests</source>
          <target state="translated">이벤트 및 요청</target>
        </trans-unit>
        <trans-unit id="ee737ab270bba86e84f8976148d4e44c1fa84a78" translate="yes" xml:space="preserve">
          <source>Events and requests</source>
          <target state="translated">이벤트 및 요청</target>
        </trans-unit>
        <trans-unit id="a77c70f89dddba4e2f67fc526e439c0dfc9de00a" translate="yes" xml:space="preserve">
          <source>Events are typically used to alert other parts of the system that something happened. For example, a user login expired or the user performed a specific action.</source>
          <target state="translated">이벤트는 일반적으로 시스템의 다른 부분에 문제가 있음을 알리는 데 사용됩니다. 예를 들어, 사용자 로그인이 만료되었거나 사용자가 특정 작업을 수행했습니다.</target>
        </trans-unit>
        <trans-unit id="ba35e69e7bcdee77e9a284677870fa09174158f9" translate="yes" xml:space="preserve">
          <source>Events fired by &lt;code&gt;childViewTriggers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;childViewTriggers&lt;/code&gt; 가 시작한 이벤트</target>
        </trans-unit>
        <trans-unit id="c30fa18e64faf90dbc229cc3047971193f875ed4" translate="yes" xml:space="preserve">
          <source>Events fired by &lt;code&gt;triggerMethod&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;triggerMethod&lt;/code&gt; 에 의해 발생 된 이벤트</target>
        </trans-unit>
        <trans-unit id="2a9355c4da3cf6552b7769a548531396c1817813" translate="yes" xml:space="preserve">
          <source>Events fired from &lt;code&gt;childView&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;childView&lt;/code&gt; 에서 발생한 이벤트</target>
        </trans-unit>
        <trans-unit id="fe999fb3bea0c0f00d9264ba666b03b2eeb4c2fa" translate="yes" xml:space="preserve">
          <source>Events fired from &lt;code&gt;triggers&lt;/code&gt;</source>
          <target state="translated">이벤트에서 해고 &lt;code&gt;triggers&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6dd33dfdb6f3039239dd4860c3a17df0b873aa39" translate="yes" xml:space="preserve">
          <source>Events fired on a view bubble up to their direct parent views, calling any event methods using the &lt;code&gt;childview:&lt;/code&gt; prefix (more on that shortly) and any methods bound to the &lt;code&gt;childViewEvents&lt;/code&gt; attribute. This works for built-in events, custom events fired with &lt;code&gt;triggerMethod&lt;/code&gt; and bound events using &lt;code&gt;triggers&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;childview:&lt;/code&gt; 접두사를 사용하여 이벤트 메소드를 호출 하고 &lt;code&gt;childViewEvents&lt;/code&gt; 속성에 바인드 된 메소드를 호출하여 뷰에서 직접 상위 뷰까지 이벤트가 발생했습니다 . 내장 이벤트, &lt;code&gt;triggerMethod&lt;/code&gt; 로 시작된 사용자 정의 이벤트 및 &lt;code&gt;triggers&lt;/code&gt; 사용하여 바인딩 된 이벤트에 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="4228fe37d9e4cc917bbde5a8899f5cf07f88ed65" translate="yes" xml:space="preserve">
          <source>Every class has a &lt;code&gt;destroy&lt;/code&gt; method which can be used to clean up the instance. With the exception of &lt;code&gt;Behavior&lt;/code&gt;'s each of these methods triggers a &lt;code&gt;before:destroy&lt;/code&gt; and a &lt;code&gt;destroy&lt;/code&gt; event.</source>
          <target state="translated">모든 클래스에는 인스턴스를 정리하는 데 사용할 수 있는 &lt;code&gt;destroy&lt;/code&gt; 메소드가 있습니다. &lt;code&gt;Behavior&lt;/code&gt; 를 제외하고 이러한 각 메소드는 &lt;code&gt;before:destroy&lt;/code&gt; 및 &lt;code&gt;destroy&lt;/code&gt; 이벤트를 트리거합니다 .</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="535292a374c162780254b235d53e365eb6fb0cfd" translate="yes" xml:space="preserve">
          <source>Explicit Event Listeners</source>
          <target state="translated">명시 적 이벤트 리스너</target>
        </trans-unit>
        <trans-unit id="dced92d38a494d927a10999d989e5b46ee7d2ec6" translate="yes" xml:space="preserve">
          <source>Falsey values</source>
          <target state="translated">팔시 값</target>
        </trans-unit>
        <trans-unit id="fc338f87a058158eb824b53705961801516a9460" translate="yes" xml:space="preserve">
          <source>Features</source>
          <target state="translated">Features</target>
        </trans-unit>
        <trans-unit id="b1aa1305f893ecfc0ed1ab30024764521d7becb5" translate="yes" xml:space="preserve">
          <source>Filtering the &lt;code&gt;children&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;children&lt;/code&gt; 필터링</target>
        </trans-unit>
        <trans-unit id="867106c5f73aec13eda0fc5e67a86f717c618148" translate="yes" xml:space="preserve">
          <source>Find a view by it's cid.</source>
          <target state="translated">시드별로 뷰를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="e94ceaf660ec9ba8ba40a4ccbd91e62e92e8e5a8" translate="yes" xml:space="preserve">
          <source>Find a view by model cid.</source>
          <target state="translated">모델 cid로보기를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="8ca71b6eef9813719712665baad82d563ee6672d" translate="yes" xml:space="preserve">
          <source>Find a view by model.</source>
          <target state="translated">모델별로보기를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="62cb69afde7bc88564246a8a10ce2c5a7831f970" translate="yes" xml:space="preserve">
          <source>Find by numeric index (unstable)</source>
          <target state="translated">숫자 인덱스로 찾기 (불안정)</target>
        </trans-unit>
        <trans-unit id="5d87513c2dc27f374691aa796b42845eae7de73d" translate="yes" xml:space="preserve">
          <source>Find the index of the view inside the children</source>
          <target state="translated">자녀 내부의 견해 색인 찾기</target>
        </trans-unit>
        <trans-unit id="7144b75286a91c7b732c50a94b6186fd5ea9f5b6" translate="yes" xml:space="preserve">
          <source>Fired as part of the application startup. This is where you should be showing your views and starting &lt;code&gt;Backbone.history&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램 시작의 일부로 시작되었습니다. 여기에서 뷰를 표시하고 &lt;code&gt;Backbone.history&lt;/code&gt; 를 시작해야합니다 .</target>
        </trans-unit>
        <trans-unit id="210e8ac0d7a279a8e04507f3459c2c7c9542f02c" translate="yes" xml:space="preserve">
          <source>Fired just before the application is started. Use this to prepare the application with anything it will need to start, for example instantiating routers, models, and collections.</source>
          <target state="translated">응용 프로그램이 시작되기 직전에 시작되었습니다. 이를 사용하여 라우터, 모델 및 컬렉션 인스턴스화와 같이 시작하는 데 필요한 항목으로 응용 프로그램을 준비하십시오.</target>
        </trans-unit>
        <trans-unit id="8c28bdd5be018d144d76e562192a9b7ec6bdf384" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;marionette.collectionview&quot;&gt;&lt;code&gt;CollectionView&lt;/code&gt;&lt;/a&gt;, rendering signifies that the view's &lt;a href=&quot;marionette.collectionview#collectionviews-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt; were created and attached to the view's &lt;code&gt;el&lt;/code&gt;. So unlike &lt;code&gt;View&lt;/code&gt; a &lt;code&gt;CollectionView&lt;/code&gt; can be instantiated with content in its &lt;code&gt;el&lt;/code&gt;, but until the &lt;code&gt;children&lt;/code&gt; are &quot;rendered&quot; the entire view is not considered rendered.</source>
          <target state="translated">들어 &lt;a href=&quot;marionette.collectionview&quot;&gt; &lt;code&gt;CollectionView&lt;/code&gt; &lt;/a&gt; , 뷰의 것을 의미 렌더링 &lt;a href=&quot;marionette.collectionview#collectionviews-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt; 만든 뷰의에 부착 된 &lt;code&gt;el&lt;/code&gt; . 그래서 달리 &lt;code&gt;View&lt;/code&gt; &lt;code&gt;CollectionView&lt;/code&gt; 는 자사의 콘텐츠로 인스턴스화 할 수 &lt;code&gt;el&lt;/code&gt; ,하지만 때까지 &lt;code&gt;children&lt;/code&gt; &quot;렌더링&quot;되어 전체보기를 렌더링 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1d97f994858459c490f3d11144c9039026de65a4" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;marionette.view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt;, rendering entails serializing the view's data, passing it to a template, and taking the results of that template and replacing the contents of the view's &lt;code&gt;el&lt;/code&gt;. So when a &lt;code&gt;View&lt;/code&gt; is instantiated it is considered rendered if the &lt;code&gt;el&lt;/code&gt; node contains any content. However after instantiation a template may render empty in which case the &lt;code&gt;View&lt;/code&gt; will still be considered &quot;rendered&quot; even though it contains no content.</source>
          <target state="translated">들어 &lt;a href=&quot;marionette.view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; , 템플릿에 전달하고, 그 템플릿의 결과를 복용하고 뷰의 내용 대체 뷰의 데이터를 직렬화 수반 렌더링 &lt;code&gt;el&lt;/code&gt; . 따라서 &lt;code&gt;View&lt;/code&gt; 가 인스턴스화되면 &lt;code&gt;el&lt;/code&gt; 노드에 내용이 포함되어 있으면 렌더링 된 것으로 간주됩니다 . 그러나 인스턴스화 후 템플릿은 비워 둘 수 있습니다. 이 경우 &lt;code&gt;View&lt;/code&gt; 에는 컨텐츠가 포함되어 있지 않아도 &quot;렌더링 된&quot;것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="2704469027269eb4b1e45887b9e246079ac5fe74" translate="yes" xml:space="preserve">
          <source>For example, to listen to a model's events:</source>
          <target state="translated">예를 들어, 모델의 이벤트를 들으려면</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="512162dd99f6990c0b7ee2713f73d747c2a3598b" translate="yes" xml:space="preserve">
          <source>For instance, perhaps for one particular view you need to bypass the &lt;a href=&quot;dom.api&quot;&gt;DOM API&lt;/a&gt; and set the html directly:</source>
          <target state="translated">예를 들어 특정 뷰의 경우 &lt;a href=&quot;dom.api&quot;&gt;DOM API&lt;/a&gt; 를 무시 하고 html을 직접 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="abc897209b2f98b7966665fa36a5eddbbc44f66d" translate="yes" xml:space="preserve">
          <source>For instance:</source>
          <target state="translated">예를 들어 :</target>
        </trans-unit>
        <trans-unit id="a687325cc0ffb4c59f3ec48209a9cbdd65aec4e7" translate="yes" xml:space="preserve">
          <source>For more detail on how to render templates, see &lt;a href=&quot;view.rendering&quot;&gt;View Template Rendering&lt;/a&gt;.</source>
          <target state="translated">템플릿을 렌더링하는 방법에 대한 자세한 내용은 &lt;a href=&quot;view.rendering&quot;&gt;템플릿 렌더링보기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f915cfec40c52c98c841d237124fe89fdeb359c" translate="yes" xml:space="preserve">
          <source>For more information on &lt;code&gt;showChildView&lt;/code&gt; and &lt;code&gt;getChildView&lt;/code&gt;, see the &lt;a href=&quot;marionette.view#managing-children&quot;&gt;Documentation for Views&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;showChildView&lt;/code&gt; 및 &lt;code&gt;getChildView&lt;/code&gt; 에 대한 자세한 내용 &lt;a href=&quot;marionette.view#managing-children&quot;&gt;은 뷰 설명서를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="692f0879bb64cd882c497ad460c60e1e8016f976" translate="yes" xml:space="preserve">
          <source>For more information on instanting a view with pre-rendered DOM see: &lt;a href=&quot;dom.prerendered&quot;&gt;Prerendered Content&lt;/a&gt;.</source>
          <target state="translated">사전 렌더링 된 DOM으로 뷰를 인스턴스화하는 방법에 대한 자세한 정보는 사전 &lt;a href=&quot;dom.prerendered&quot;&gt;렌더링 된 컨텐츠를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee6f6f3a4fbfac878118068d27b6b47808785740" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;dom.interactions#binding-to-user-input&quot;&gt;DOM interactions documentation&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;dom.interactions#binding-to-user-input&quot;&gt;DOM 상호 작용 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bfa1717f4b730bc3f2a238f66d53a22d7db017d1" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;events.entity&quot;&gt;Entity events documentation&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;events.entity&quot;&gt;엔티티 이벤트 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2f3a6ff953c168a198daa013d1b3ecff1c42ff2d" translate="yes" xml:space="preserve">
          <source>For more information, see the &lt;a href=&quot;marionette.application#application-region&quot;&gt;Application docs&lt;/a&gt;.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;marionette.application#application-region&quot;&gt;애플리케이션 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="932b7133f8ecd4335c535e0b589f2659c4cb27d2" translate="yes" xml:space="preserve">
          <source>For most cases you will want to use the &lt;a href=&quot;dom.api&quot;&gt;DOM API&lt;/a&gt; to determine how a region html is attached, but in some cases you may want to override a single Region class for situations like animation where you want to control both attaching and &lt;a href=&quot;#configure-how-to-remove-view&quot;&gt;view removal&lt;/a&gt;.</source>
          <target state="translated">대부분의 경우 &lt;a href=&quot;dom.api&quot;&gt;DOM API&lt;/a&gt; 를 사용하여 영역 HTML이 첨부되는 방법을 결정하려고하지만 경우에 따라 첨부 및 &lt;a href=&quot;#configure-how-to-remove-view&quot;&gt;보기 제거를&lt;/a&gt; 모두 제어하려는 애니메이션과 같은 상황에서 단일 Region 클래스를 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d9b3e590ece88db23fbd52ac71a4ba833af47d6" translate="yes" xml:space="preserve">
          <source>For updating in Marionette 2.x, it is recommended you change all instances of &lt;code&gt;ItemView&lt;/code&gt; to &lt;code&gt;LayoutView&lt;/code&gt;.</source>
          <target state="translated">Marionette 2.x에서 업데이트 하려면 &lt;code&gt;LayoutView&lt;/code&gt; 의 모든 인스턴스를 &lt;code&gt;ItemView&lt;/code&gt; 로 변경하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="9b5f762c1f65a9886dfe4004da0d3e529827c360" translate="yes" xml:space="preserve">
          <source>Function Callback</source>
          <target state="translated">함수 콜백</target>
        </trans-unit>
        <trans-unit id="6b50e92fc7aea5426c00478727616aa2732e335b" translate="yes" xml:space="preserve">
          <source>Function Context</source>
          <target state="translated">기능 컨텍스트</target>
        </trans-unit>
        <trans-unit id="3b79428d14c80602f07db4f6cf096cfd6321d057" translate="yes" xml:space="preserve">
          <source>Function isNodeAttached was removed</source>
          <target state="translated">isNodeAttached 함수가 제거되었습니다</target>
        </trans-unit>
        <trans-unit id="f5ffd3c45a2198742a64b1182a44898be5507951" translate="yes" xml:space="preserve">
          <source>Functions Returning Values</source>
          <target state="translated">값을 반환하는 함수</target>
        </trans-unit>
        <trans-unit id="5ee3a98fc183d3791af8b61b8615560392adc950" translate="yes" xml:space="preserve">
          <source>Generic Routers</source>
          <target state="translated">일반 라우터</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="48d8c627be3c12fac8a0a9ddb9ceaa5e126cf358" translate="yes" xml:space="preserve">
          <source>Goals</source>
          <target state="translated">Goals</target>
        </trans-unit>
        <trans-unit id="1f5aebde5b7c2251de63baad091a0807c654f4cc" translate="yes" xml:space="preserve">
          <source>Goals:</source>
          <target state="translated">Goals:</target>
        </trans-unit>
        <trans-unit id="bfb69d23d552cd9db39b7c6c673b2d2cc67c8217" translate="yes" xml:space="preserve">
          <source>Here's an example that allows for the &lt;code&gt;template&lt;/code&gt; of a view to be an underscore template string.</source>
          <target state="translated">다음 은 뷰 의 &lt;code&gt;template&lt;/code&gt; 이 밑줄 템플릿 문자열이되도록 하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="d4ef1b52ea05264cfaba3be3dd149a971620a753" translate="yes" xml:space="preserve">
          <source>How the &lt;code&gt;collection&lt;/code&gt; is serialized can also be customized per view.</source>
          <target state="translated">어떻게 &lt;code&gt;collection&lt;/code&gt; 직렬화도보기에 따라 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5f5336533830a1895fbd52dce7b5d261a2c17cb" translate="yes" xml:space="preserve">
          <source>How the &lt;code&gt;model&lt;/code&gt; is serialized can also be customized per view.</source>
          <target state="translated">&lt;code&gt;model&lt;/code&gt; 을 직렬화 하는 방법은 보기마다 사용자 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d0bce3b5ac87ae46b341f3b8affd0b81d0d84cc" translate="yes" xml:space="preserve">
          <source>However to support backwards compatibility Marionette exports all of its classes and functions on a default object. This default export may be removed in a future version of Marionette and it is recommend to migrate to a named imports.</source>
          <target state="translated">그러나 이전 버전과의 호환성을 지원하기 위해 Marionette는 모든 클래스와 함수를 기본 객체로 내 보냅니다. 이 기본 내보내기는 이후 버전의 Marionette에서 제거 될 수 있으며 명명 된 가져 오기로 마이그레이션하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="94f434c02979940f6b32f433af43df40917c1269" translate="yes" xml:space="preserve">
          <source>However with pre-rendered DOM you may need to show child views in &lt;code&gt;initialize&lt;/code&gt; as the view will already be rendered.</source>
          <target state="translated">그러나 사전 렌더링 된 DOM을 사용 하면 뷰가 이미 렌더링되므로 자식 뷰를 &lt;code&gt;initialize&lt;/code&gt; 로 표시해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ebced65d690ba4325f022c189ca1720d68437959" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;emptyViewOptions&lt;/code&gt; aren't provided the &lt;code&gt;CollectionView&lt;/code&gt; will default to passing the &lt;code&gt;childViewOptions&lt;/code&gt; to the &lt;code&gt;emptyView&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;emptyViewOptions&lt;/code&gt; 가 제공되지 않는 &lt;code&gt;CollectionView&lt;/code&gt; 는 통과로 기본 설정됩니다 &lt;code&gt;childViewOptions&lt;/code&gt; 을 받는 &lt;code&gt;emptyView&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7378bf2afc10cccdb2c8461e7b9064c10bfb0a5" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;true&lt;/code&gt;, deprecation console warnings are issued at runtime.</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 인 경우 사용 중지 콘솔 경고가 런타임에 발행됩니다.</target>
        </trans-unit>
        <trans-unit id="e9e5de4d4d1e117e2a17f49e092caec6db464f5e" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;viewFilter&lt;/code&gt; exists the &lt;a href=&quot;events.class#filter-and-beforefilter-events&quot;&gt;&lt;code&gt;filter&lt;/code&gt; and &lt;code&gt;before:filter&lt;/code&gt; events&lt;/a&gt; will trigger.</source>
          <target state="translated">&lt;code&gt;viewFilter&lt;/code&gt; 가 있으면 &lt;a href=&quot;events.class#filter-and-beforefilter-events&quot;&gt; &lt;code&gt;filter&lt;/code&gt; 와 &lt;code&gt;before:filter&lt;/code&gt; 이벤트&lt;/a&gt; 가 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="61f1d6b66b8f1652dcb8f627dc96360ae66ae24b" translate="yes" xml:space="preserve">
          <source>If both view and behavior are listening for the same event, this will be executed first in the view then in the behavior as below.</source>
          <target state="translated">뷰와 비헤이비어가 동일한 이벤트를 수신하는 경우 뷰에서 먼저 실행 된 다음 아래와 같이 비헤이비어에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="4169130880cb79b042d2b7c25e639edfe50cdb25" translate="yes" xml:space="preserve">
          <source>If it's fine for many objects to perform an action, use an &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">많은 객체가 동작을 수행하는 것이 &lt;code&gt;Event&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="414ed13ac166d24313defb384044db62d446d670" translate="yes" xml:space="preserve">
          <source>If no view is available, &lt;code&gt;getChildView&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 뷰가 없으면 &lt;code&gt;getChildView&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2572bd0e1854d3111c1313d5380e3be8b03852a3" translate="yes" xml:space="preserve">
          <source>If one child is in the &lt;code&gt;el&lt;/code&gt; but the other is not, &lt;a href=&quot;#filtering-the-children&quot;&gt;filter&lt;/a&gt; will be called.</source>
          <target state="translated">한 아이가 &lt;code&gt;el&lt;/code&gt; 있지만 다른 아이는 그렇지 않으면 &lt;a href=&quot;#filtering-the-children&quot;&gt;필터&lt;/a&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="dba097323f34cdefad7f7faa35664eee29b02dc9" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;CollectionView&lt;/code&gt; can determine that added views will only be appended to the end, only the appended views will be passed to the event. Otherwise all of the &lt;code&gt;children&lt;/code&gt; views will be passed.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 가 추가 된보기가 끝에 만 추가됨을 판별 할 수있는 경우 추가 된보기 만 이벤트에 전달됩니다. 그렇지 않으면 모든 &lt;code&gt;children&lt;/code&gt; 뷰가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="2ac6b6dc49490b0054b9652640a9bf1d2bd55c6a" translate="yes" xml:space="preserve">
          <source>If the view does not have a &lt;code&gt;model&lt;/code&gt; but has a &lt;code&gt;collection&lt;/code&gt; the collection's models will be serialized to an array provided as an &lt;code&gt;items&lt;/code&gt; attribute to the template.</source>
          <target state="translated">뷰에 &lt;code&gt;model&lt;/code&gt; 없지만 &lt;code&gt;collection&lt;/code&gt; 이있는 경우 컬렉션의 모델은 템플릿에 &lt;code&gt;items&lt;/code&gt; 속성으로 제공된 배열에 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="39633f5888d8571f64160a32230bd0df38af2dfb" translate="yes" xml:space="preserve">
          <source>If the view has a &lt;code&gt;model&lt;/code&gt; it will pass that model's attributes to the template.</source>
          <target state="translated">뷰에 &lt;code&gt;model&lt;/code&gt; 이있는 경우 해당 모델의 속성을 템플릿으로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="6c493f8246ce4042778452e9fbaab2a1802c8a73" translate="yes" xml:space="preserve">
          <source>If you add a view to a &lt;code&gt;CollectionView&lt;/code&gt;s children by default it will treat it as any other view added from the &lt;code&gt;collection&lt;/code&gt;. This means it is subject to the &lt;a href=&quot;marionette.collectionview#defining-the-viewcomparator&quot;&gt;&lt;code&gt;viewComparator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;marionette.collectionview#defining-the-viewfilter&quot;&gt;&lt;code&gt;viewFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">디폴트 로 &lt;code&gt;CollectionView&lt;/code&gt; 의 아이에게 뷰를 추가하면 (자), &lt;code&gt;collection&lt;/code&gt; 으로부터 추가 된 다른 뷰로서 취급합니다 . 이는 &lt;a href=&quot;marionette.collectionview#defining-the-viewcomparator&quot;&gt; &lt;code&gt;viewComparator&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;marionette.collectionview#defining-the-viewfilter&quot;&gt; &lt;code&gt;viewFilter&lt;/code&gt; 에&lt;/a&gt; 종속됨을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="e735b59a230dbdc7e1adc3a1b55b7c6c275d5daf" translate="yes" xml:space="preserve">
          <source>If you don't know what could act on the event, or don't care, use an &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">이벤트에서 무엇을 할 수 있는지 모르거나 신경 쓰지 않으면 &lt;code&gt;Event&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f505669868df7e48cd16e96c84d2a72070269c0d" translate="yes" xml:space="preserve">
          <source>If you don't mind that no objects react, use an &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">반응하는 객체가 없다고 생각하지 않으면 &lt;code&gt;Event&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="24d1d751807556b4d8b2d396b879c9f18df44fd1" translate="yes" xml:space="preserve">
          <source>If you find yourself calling it an action that occurred, use an &lt;code&gt;Event&lt;/code&gt;</source>
          <target state="translated">자신이 발생한 행동이라고 부르는 경우 &lt;code&gt;Event&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="945523977553ce7f419e6f9b76980c72f3363e54" translate="yes" xml:space="preserve">
          <source>If you need to re-render the entire collection or the template, you can call the &lt;code&gt;collectionView.render&lt;/code&gt; method. This method will destroying all of the child views that may have previously been added.</source>
          <target state="translated">전체 콜렉션 또는 템플리트를 다시 렌더링해야하는 경우 &lt;code&gt;collectionView.render&lt;/code&gt; 메소드를 호출 할 수 있습니다 . 이 방법은 이전에 추가되었을 수있는 모든 자식 뷰를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="2d4e9d5ddafd1d47e8a70c706ceb2dda13ced149" translate="yes" xml:space="preserve">
          <source>If you replace the current view with a new view by calling &lt;code&gt;show&lt;/code&gt;, it will automatically destroy the previous view. You can prevent this behavior by &lt;a href=&quot;#detaching-existing-views&quot;&gt;detaching the view&lt;/a&gt; before showing another one.</source>
          <target state="translated">&lt;code&gt;show&lt;/code&gt; 를 호출하여 현재보기를 새보기로 바꾸면 이전보기가 자동으로 삭제됩니다. 다른 &lt;a href=&quot;#detaching-existing-views&quot;&gt;보기&lt;/a&gt; 를 표시하기 전에 보기 를 분리 하여이 동작을 방지 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="27a4263bd11424fee466a4b090b8dc9b9abc7dcf" translate="yes" xml:space="preserve">
          <source>If you show a view in a region with an existing view, Marionette will &lt;a href=&quot;#emptying-a-region&quot;&gt;remove the existing View&lt;/a&gt; before showing the new one.</source>
          <target state="translated">기존보기가있는 영역에서보기를 표시하면 Marionette는 새 &lt;a href=&quot;#emptying-a-region&quot;&gt;보기&lt;/a&gt; 를 표시하기 전에 기존보기 를 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="8b9f1488121572c69fc424281327f9df376df4c3" translate="yes" xml:space="preserve">
          <source>If you want to control when the empty view is rendered, you can override &lt;code&gt;isEmpty&lt;/code&gt;:</source>
          <target state="translated">빈 뷰가 렌더링되는 시점을 제어하려면 &lt;code&gt;isEmpty&lt;/code&gt; 를 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b7fa16fce8ece6ef03606774be21f51ac31360dd" translate="yes" xml:space="preserve">
          <source>If you want to detach an existing view from a region, use &lt;code&gt;detachView&lt;/code&gt;.</source>
          <target state="translated">영역에서 기존보기를 분리하려면 &lt;code&gt;detachView&lt;/code&gt; 를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a4f26f1ce23689948b48b45656485d98497b056" translate="yes" xml:space="preserve">
          <source>If you wish to check whether a region has a view, you can use the &lt;code&gt;hasView&lt;/code&gt; function. This will return a boolean value depending whether or not the region is showing a view.</source>
          <target state="translated">영역에 뷰가 있는지 확인하려면 &lt;code&gt;hasView&lt;/code&gt; 함수를 사용할 수 있습니다 . 영역에 뷰가 표시되는지 여부에 따라 부울 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="adc7091a16fd09296b99e430d6e6573c8bba34f7" translate="yes" xml:space="preserve">
          <source>If you've created a custom region class, you can use it to define your region.</source>
          <target state="translated">사용자 정의 리전 클래스를 생성 한 경우이를 사용하여 리전을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="258044d00799398af0fed5afa55eca9f1ec076dd" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;ui&lt;/code&gt; keys clash with keys on the attached view, the view's &lt;code&gt;ui&lt;/code&gt; declarations will take precidence over the behavior's &lt;code&gt;ui&lt;/code&gt;. This allows for behaviors to be more easily reused without dictating necessary structures within the view itself.</source>
          <target state="translated">귀하의 경우 &lt;code&gt;ui&lt;/code&gt; 키가 부착 된 뷰의 키와 충돌, 뷰의 &lt;code&gt;ui&lt;/code&gt; 선언 동작의 이상 precidence 소요됩니다 &lt;code&gt;ui&lt;/code&gt; . 이를 통해 뷰 자체 내에서 필요한 구조를 지정하지 않고도 동작을보다 쉽게 ​​재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2b012b818aa9b71fa333bc69d27b45eab317e89" translate="yes" xml:space="preserve">
          <source>If your use case isn't covered here, consider whether you want to &lt;a href=&quot;#when-to-use-requests&quot;&gt;use a request&lt;/a&gt; instead.</source>
          <target state="translated">사용 사례가 여기에서 다루지 않으면 &lt;a href=&quot;#when-to-use-requests&quot;&gt;요청을&lt;/a&gt; 대신 사용할 것인지 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="24b130fd19b706ea640cdf8aca125964e9c99a63" translate="yes" xml:space="preserve">
          <source>If your view has a &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;collection&lt;/code&gt; attached, it will listen for events on both:</source>
          <target state="translated">뷰에 &lt;code&gt;model&lt;/code&gt; 과 &lt;code&gt;collection&lt;/code&gt; 첨부되어 있으면 두 가지 모두에서 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="dcaf0ff8ba5b5c4e81390aba8100079e7cd2932e" translate="yes" xml:space="preserve">
          <source>In Marionette 2, &lt;code&gt;childEvents&lt;/code&gt; were bound on every event. In Marionette 3, &lt;code&gt;childViewEvents&lt;/code&gt; are bound once and cached. This means that you cannot add new events after the view has been created.</source>
          <target state="translated">Marionette 2에서는 &lt;code&gt;childEvents&lt;/code&gt; 가 모든 이벤트에 바인딩되었습니다. Marionette 3에서 &lt;code&gt;childViewEvents&lt;/code&gt; 는 한 번 바인딩되고 캐시됩니다. 즉,보기가 작성된 후에는 새 이벤트를 추가 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="dbe500ea8df85cf5c15733d6b8d582a89478df30" translate="yes" xml:space="preserve">
          <source>In Marionette 2, the HTML output will be:</source>
          <target state="translated">Marionette 2에서 HTML 출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0e2ba341c3809b14c1e87cbc5d409116524f9cec" translate="yes" xml:space="preserve">
          <source>In Marionette 3, the HTML will be:</source>
          <target state="translated">Marionette 3에서 HTML은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="374cd1d2d6e5b85fed4ac19f2e1de3ee184d7208" translate="yes" xml:space="preserve">
          <source>In Marionette 3, this was changed to unhook &lt;code&gt;region.currentView&lt;/code&gt; from the DOM, remove all event handlers, then delete it. Any HTML added to the region that isn't contained in the DOM of the View won't be removed.</source>
          <target state="translated">Marionette 3에서 이것은 DOM에서 &lt;code&gt;region.currentView&lt;/code&gt; 를 언훅 으로 변경 하고 모든 이벤트 핸들러를 제거한 다음 삭제합니다. 보기의 DOM에 포함되지 않은 영역에 추가 된 HTML은 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5bc8ad3f0efb51be0e4d5761517a8ad8af1135a9" translate="yes" xml:space="preserve">
          <source>In Marionette &lt;a href=&quot;view.rendering&quot;&gt;rendering a view&lt;/a&gt; is changing a view's &lt;code&gt;el&lt;/code&gt;'s contents.</source>
          <target state="translated">Marionette &lt;a href=&quot;view.rendering&quot;&gt;렌더링에서 뷰&lt;/a&gt; 는 뷰의 &lt;code&gt;el&lt;/code&gt; 내용을 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="5a8cd1ecbd12b85645d753b864feca2f28129988" translate="yes" xml:space="preserve">
          <source>In Marionette a view is attached if the view's &lt;code&gt;el&lt;/code&gt; can be found in the DOM. The best time to add listeners to the view's &lt;code&gt;el&lt;/code&gt; is likely in the &lt;a href=&quot;events.class#attach-and-beforeattach-events&quot;&gt;&lt;code&gt;attach&lt;/code&gt; event&lt;/a&gt;.</source>
          <target state="translated">마리오네트에서는 뷰 &lt;code&gt;el&lt;/code&gt; 이 DOM에서 발견 될 수 있으면 뷰가 첨부됩니다 . 뷰의 &lt;code&gt;el&lt;/code&gt; 에 리스너를 추가하기에 가장 좋은시기 는 &lt;a href=&quot;events.class#attach-and-beforeattach-events&quot;&gt; &lt;code&gt;attach&lt;/code&gt; 이벤트&lt;/a&gt; 일 가능성이 높습니다 .</target>
        </trans-unit>
        <trans-unit id="a05a5d833987594d472345f2698c0f67b6901633" translate="yes" xml:space="preserve">
          <source>In Marionette you can define a region with a string selector or an object literal on your &lt;code&gt;Application&lt;/code&gt; or &lt;code&gt;View&lt;/code&gt;. This section will document the two types as applied to &lt;code&gt;View&lt;/code&gt;, although they will work for &lt;code&gt;Application&lt;/code&gt; as well - just replace &lt;code&gt;regions&lt;/code&gt; with &lt;code&gt;region&lt;/code&gt; in your definition.</source>
          <target state="translated">Marionette에서는 &lt;code&gt;Application&lt;/code&gt; 또는 &lt;code&gt;View&lt;/code&gt; 에서 문자열 선택기 또는 객체 리터럴을 사용하여 영역을 정의 할 수 있습니다 . 이 섹션에서는 &lt;code&gt;View&lt;/code&gt; 에 적용되는 두 가지 유형에 대해 설명하지만 &lt;code&gt;Application&lt;/code&gt; 에서도 작동하지만 정의에서 &lt;code&gt;regions&lt;/code&gt; 을 &lt;code&gt;region&lt;/code&gt; 으로 대체 하기 만합니다.</target>
        </trans-unit>
        <trans-unit id="b31912047aff750f69394987ec520e3da057dc21" translate="yes" xml:space="preserve">
          <source>In Marionette, most attributes can be bound on class instantiation in addition to being set when the &lt;a href=&quot;#class-based-inheritance&quot;&gt;class is defined&lt;/a&gt;. You can use this to bind events, triggers, models, and collections at runtime:</source>
          <target state="translated">Marionette에서는 &lt;a href=&quot;#class-based-inheritance&quot;&gt;클래스가 정의&lt;/a&gt; 될 때 설정되는 것 외에도 클래스 인스턴스화에 대부분의 속성을 바인딩 할 수 있습니다 . 이를 사용하여 런타임에 이벤트, 트리거, 모델 및 콜렉션을 바인드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dfb304042833b4e20cf55dc60656d4fb789f4c6" translate="yes" xml:space="preserve">
          <source>In addition to &lt;code&gt;MnObject&lt;/code&gt;'s API, Application provides two significant additions. A simple lifecycle hook with &lt;a href=&quot;#starting-an-application&quot;&gt;&lt;code&gt;start&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;#application-region&quot;&gt;single region&lt;/a&gt; for attaching a view tree.</source>
          <target state="translated">뿐만 아니라 &lt;code&gt;MnObject&lt;/code&gt; 의 API, 응용 프로그램은 두 가지 중요한 추가 사항을 제공합니다. 뷰 트리를 연결하기위한 &lt;a href=&quot;#starting-an-application&quot;&gt; &lt;code&gt;start&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#application-region&quot;&gt;단일 영역이&lt;/a&gt; 있는 간단한 수명주기 후크</target>
        </trans-unit>
        <trans-unit id="8c04bf53d06155643483527e32835b3cf534dce2" translate="yes" xml:space="preserve">
          <source>In addition to adding and removing regions there are a few methods to help utilize regions. All of these methods will first render an unrendered view so that regions are properly initialized.</source>
          <target state="translated">영역을 추가하고 제거하는 것 외에도 영역을 활용하는 데 도움이되는 몇 가지 방법이 있습니다. 이러한 모든 방법은 먼저 렌더링되지 않은 뷰를 렌더링하여 영역이 올바르게 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="4cbb24a430e5b9737e3dfd5b5b510f8e63862d69" translate="yes" xml:space="preserve">
          <source>In addition to children added by Marionette matching the model of a &lt;code&gt;collection&lt;/code&gt;, the &lt;code&gt;children&lt;/code&gt; of the &lt;code&gt;CollectionView&lt;/code&gt; can be manually managed.</source>
          <target state="translated">&lt;code&gt;collection&lt;/code&gt; 모델과 일치하는 Marionette에 의해 추가 된 자식 외에도 &lt;code&gt;CollectionView&lt;/code&gt; 의 &lt;code&gt;children&lt;/code&gt; 을 수동으로 관리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="40228d97dcb3e26c9fde06dfc2f82735f9bfded0" translate="yes" xml:space="preserve">
          <source>In addition to extending a &lt;code&gt;View&lt;/code&gt; with &lt;code&gt;Behavior&lt;/code&gt;, a &lt;code&gt;Behavior&lt;/code&gt; can itself use other Behaviors. The syntax is identical to that used for a &lt;code&gt;View&lt;/code&gt;:</source>
          <target state="translated">확장뿐만 아니라 &lt;code&gt;View&lt;/code&gt; 와 함께 &lt;code&gt;Behavior&lt;/code&gt; 하는 &lt;code&gt;Behavior&lt;/code&gt; 자체가 다른 동작을 사용할 수 있습니다. 구문은 &lt;code&gt;View&lt;/code&gt; 에 사용 된 구문과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="7706fc2586990c022dceb662d7eaed11b3006b74" translate="yes" xml:space="preserve">
          <source>In addition to rendering children, the &lt;code&gt;CollectionView&lt;/code&gt; may have a &lt;code&gt;template&lt;/code&gt;. The child views can be rendered within a DOM element of this template. The &lt;code&gt;CollectionView&lt;/code&gt; will serialize either the &lt;code&gt;model&lt;/code&gt; or &lt;code&gt;collection&lt;/code&gt; along with context for the &lt;code&gt;template&lt;/code&gt; to render.</source>
          <target state="translated">자식을 렌더링하는 것 외에도 &lt;code&gt;CollectionView&lt;/code&gt; 에는 &lt;code&gt;template&lt;/code&gt; 이있을 수 있습니다 . 자식 뷰는이 템플릿의 DOM 요소 내에서 렌더링 될 수 있습니다. &lt;code&gt;CollectionView&lt;/code&gt; 는 중 하나를 직렬화합니다 &lt;code&gt;model&lt;/code&gt; 또는 &lt;code&gt;collection&lt;/code&gt; 에 대한 상황과 함께 &lt;code&gt;template&lt;/code&gt; 렌더링하는.</target>
        </trans-unit>
        <trans-unit id="b52125bb135086c75727502d9181f61e693d52bd" translate="yes" xml:space="preserve">
          <source>In addition to this documentation, the Radio documentation can be found on &lt;a href=&quot;https://github.com/marionettejs/backbone.radio&quot;&gt;Github&lt;/a&gt;.</source>
          <target state="translated">이 설명서 외에도 라디오 설명서는 &lt;a href=&quot;https://github.com/marionettejs/backbone.radio&quot;&gt;Github&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5757092eff6dde73f2a6b4851bec028704a80319" translate="yes" xml:space="preserve">
          <source>In addition to what Backbone provides the views, Marionette has additional API for DOM interactions available to all Marionette &lt;a href=&quot;classes&quot;&gt;view classes&lt;/a&gt;.</source>
          <target state="translated">Backbone이 뷰를 제공하는 것 외에도 Marionette에는 모든 Marionette &lt;a href=&quot;classes&quot;&gt;뷰 클래스에서&lt;/a&gt; 사용할 수있는 DOM 상호 작용을위한 추가 API가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a017c4ddd0d70c499dc542744b370ccc3e0790fa" translate="yes" xml:space="preserve">
          <source>In addition to what Backbone provides the views, Marionette has additional API for DOM interactions: &lt;code&gt;events&lt;/code&gt;, &lt;code&gt;triggers&lt;/code&gt;, and &lt;code&gt;ui&lt;/code&gt;.</source>
          <target state="translated">Backbone이 뷰를 제공하는 것 외에도 Marionette에는 DOM 상호 작용을위한 추가 API ( &lt;code&gt;events&lt;/code&gt; , &lt;code&gt;triggers&lt;/code&gt; 및 &lt;code&gt;ui&lt;/code&gt; )가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4414df5d4eaf209b663557d3065ac396163dcf80" translate="yes" xml:space="preserve">
          <source>In addition, each behavior is able to reference the view they are attached to through the &lt;code&gt;view&lt;/code&gt; attribute:</source>
          <target state="translated">또한 각 동작은 &lt;code&gt;view&lt;/code&gt; 속성 을 통해 연결된 뷰를 참조 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="418fdec9c8a965d096119edd97137d97dd73fbd3" translate="yes" xml:space="preserve">
          <source>In almost every instance where we can set a value, we can also assign a function to figure out the value at runtime. In this case, Marionette will run the function on instantiation and use the returned value:</source>
          <target state="translated">값을 설정할 수있는 거의 모든 경우에 런타임시 값을 알아내는 함수를 할당 할 수도 있습니다. 이 경우 Marionette는 인스턴스화시 함수를 실행하고 반환 된 값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0e8d7a75230b96395b32bd75a3deabf5dc740fd1" translate="yes" xml:space="preserve">
          <source>In an unrelated module:</source>
          <target state="translated">관련없는 모듈에서 :</target>
        </trans-unit>
        <trans-unit id="6b85764ee8637eb07079009de57031d6a9a884a9" translate="yes" xml:space="preserve">
          <source>In both of the cases at instantiation the view will determine &lt;a href=&quot;view.lifecycle&quot;&gt;its state&lt;/a&gt; as to whether the el is rendered or attached.</source>
          <target state="translated">인스턴스화시 두 경우 모두보기는 엘이 렌더링되는지 또는 첨부되는지에 &lt;a href=&quot;view.lifecycle&quot;&gt;대한 상태&lt;/a&gt; 를 결정 합니다 .</target>
        </trans-unit>
        <trans-unit id="152f3f8ee2c3b3d44da924f11b9b107bcbb7eafe" translate="yes" xml:space="preserve">
          <source>In general the best method for adding a child view to a &lt;code&gt;View&lt;/code&gt; is to use &lt;a href=&quot;marionette.view#showing-a-view&quot;&gt;&lt;code&gt;showChildView&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt;&lt;code&gt;render&lt;/code&gt; event&lt;/a&gt;.</source>
          <target state="translated">일반적으로,에 아이 뷰 추가하기위한 가장 좋은 방법 &lt;code&gt;View&lt;/code&gt; 사용하는 것입니다 &lt;a href=&quot;marionette.view#showing-a-view&quot;&gt; &lt;code&gt;showChildView&lt;/code&gt; 을&lt;/a&gt; 에 &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt; &lt;code&gt;render&lt;/code&gt; 이벤트&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e0b9561c388e0618bf194a616c2c185409c5ed74" translate="yes" xml:space="preserve">
          <source>In most cases by using the default &lt;code&gt;getTemplate&lt;/code&gt; you can simply set the &lt;code&gt;template&lt;/code&gt; on the view to define the view's template, but in some circumstances you may want to set the template conditionally.</source>
          <target state="translated">기본 사용하여 대부분의 경우 &lt;code&gt;getTemplate&lt;/code&gt; 당신은 간단하게 설정할 수 있습니다 &lt;code&gt;template&lt;/code&gt; 뷰의 템플릿을 정의 할 뷰를하지만, 어떤 상황에서 조건부 서식을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="307e993500d2b4305963a60b9655a4a27e4e7a6b" translate="yes" xml:space="preserve">
          <source>In some cases it may be a useful performance improvement to disable this functionality. Doing so is as easy as setting &lt;code&gt;monitorViewEvents: false&lt;/code&gt; on the view class.</source>
          <target state="translated">경우에 따라이 기능을 비활성화하는 것이 유용한 성능 향상 일 수 있습니다. 뷰 클래스에서 &lt;code&gt;monitorViewEvents: false&lt;/code&gt; 를 설정하는 것만 큼 쉽습니다 .</target>
        </trans-unit>
        <trans-unit id="c2e6029a13252e24b8832234c1901c583b8978f4" translate="yes" xml:space="preserve">
          <source>In the above example the contents of the &lt;code&gt;template&lt;/code&gt; attribute will be rendered inside a &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; tag available at &lt;code&gt;myView.el&lt;/code&gt;.</source>
          <target state="translated">위의 예제에서 &lt;code&gt;template&lt;/code&gt; 속성 의 내용은 &lt;code&gt;myView.el&lt;/code&gt; 에서 사용 가능한 &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; 태그 안에 렌더링됩니다 .</target>
        </trans-unit>
        <trans-unit id="441adfb0f459dac69710337e0e26848bbe42c2b4" translate="yes" xml:space="preserve">
          <source>In the example below, we create a new pseudo-class called &lt;code&gt;MyView&lt;/code&gt;:</source>
          <target state="translated">아래 예제에서 &lt;code&gt;MyView&lt;/code&gt; 라는 새로운 의사 클래스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="d800d02e7f0ce6ed4e7a2694d329438f9d50e58b" translate="yes" xml:space="preserve">
          <source>In the following example the &lt;code&gt;template&lt;/code&gt; method passed to the renderer will return a DOM element, and then if the view is already rendered utilize &lt;a href=&quot;https://github.com/patrick-steele-idem/morphdom&quot;&gt;morphdom&lt;/a&gt; to patch the DOM or otherwise it will set the view's &lt;code&gt;el&lt;/code&gt; to the result of the template. (Note in this case the view's &lt;code&gt;el&lt;/code&gt; created at instantiation would be overridden).</source>
          <target state="translated">다음 예제에서 렌더러에 전달 된 &lt;code&gt;template&lt;/code&gt; 메소드는 DOM 요소를 반환 한 다음 뷰가 이미 렌더링 된 경우 &lt;a href=&quot;https://github.com/patrick-steele-idem/morphdom&quot;&gt;morphdom&lt;/a&gt; 을 사용 하여 DOM을 패치하거나 그렇지 않으면 뷰의 &lt;code&gt;el&lt;/code&gt; 을 템플릿의 결과로 설정합니다. (이 경우 인스턴스화시 작성된 뷰의 &lt;code&gt;el&lt;/code&gt; 은 무시됩니다).</target>
        </trans-unit>
        <trans-unit id="f35f982bb5c5b1766d09e116e4549ce2b84edbe8" translate="yes" xml:space="preserve">
          <source>In this case because the renderer is modifying the &lt;code&gt;el&lt;/code&gt; directly, there is no need to return the result of the template rendering for the view to handle in &lt;a href=&quot;#customizing-attachelcontents&quot;&gt;&lt;code&gt;attachElContents&lt;/code&gt;&lt;/a&gt;. It is certainly an option to return the compiled DOM and modify &lt;a href=&quot;#customizing-attachelcontents&quot;&gt;&lt;code&gt;attachElContents&lt;/code&gt;&lt;/a&gt; to handle a DOM object instead of a string literal, but in many cases it may be overcomplicated to do so.</source>
          <target state="translated">이 경우 렌더러가 &lt;code&gt;el&lt;/code&gt; 을 직접 수정하기 때문에 &lt;a href=&quot;#customizing-attachelcontents&quot;&gt; &lt;code&gt;attachElContents&lt;/code&gt; &lt;/a&gt; 에서 뷰를 처리하기 위해 템플리트 렌더링 결과를 리턴 할 필요가 없습니다 . 컴파일 된 DOM을 반환하고 문자열 리터럴 대신 DOM 객체를 처리 하도록 &lt;a href=&quot;#customizing-attachelcontents&quot;&gt; &lt;code&gt;attachElContents&lt;/code&gt; &lt;/a&gt; 를 수정하는 옵션 일 수 있지만, 많은 경우 너무 복잡 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29d20ef49462d6784ef889cb7cec2dbb6af58c9e" translate="yes" xml:space="preserve">
          <source>In this case setting &lt;code&gt;template&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt; will prevent the template render. In the case of &lt;code&gt;View&lt;/code&gt; it will also prevent the &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt;&lt;code&gt;render&lt;/code&gt; events&lt;/a&gt;.</source>
          <target state="translated">이 경우 &lt;code&gt;template&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정 하면 템플릿 렌더링이 방지됩니다. &lt;code&gt;View&lt;/code&gt; 의 경우 &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt; &lt;code&gt;render&lt;/code&gt; 이벤트&lt;/a&gt; 도 방지 합니다 .</target>
        </trans-unit>
        <trans-unit id="14827d95bfe31f928f624eb9bea689cd382bd935" translate="yes" xml:space="preserve">
          <source>In this case, Marionette will bind event handlers to both.</source>
          <target state="translated">이 경우 Marionette는 이벤트 핸들러를 둘 다에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="4a1699d680c4f3ec67120d13608314117c95f893" translate="yes" xml:space="preserve">
          <source>In this example, &quot;bar&quot; is returned both times because the second example has an undefined value for &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">이 예제에서는 두 번째 예제에 정의되지 않은 &lt;code&gt;f&lt;/code&gt; 값이 있으므로 &quot;bar&quot;가 두 번 리턴 됩니다.</target>
        </trans-unit>
        <trans-unit id="7721a8fa1959a888e9ee734039a60010527e7eff" translate="yes" xml:space="preserve">
          <source>In this example, &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;something&lt;/code&gt; are directly available on the &lt;code&gt;MyObject&lt;/code&gt; instance, while &lt;code&gt;another&lt;/code&gt; must be accessed via &lt;code&gt;getOption&lt;/code&gt;. This is handy when you want to add extra keys that will be used heavily throughout the defined class.</source>
          <target state="translated">이 예제에서, &lt;code&gt;model&lt;/code&gt; 과 &lt;code&gt;something&lt;/code&gt; 는 &lt;code&gt;MyObject&lt;/code&gt; 인스턴스에서 직접 사용할 수있는 반면 &lt;code&gt;another&lt;/code&gt; 것은 &lt;code&gt;getOption&lt;/code&gt; 을 통해 액세스해야합니다 . 이것은 정의 된 클래스에서 많이 사용될 여분의 키를 추가 할 때 편리합니다.</target>
        </trans-unit>
        <trans-unit id="8ff0ac8dbc34ffb26efff18b45cc2ec7965afcfe" translate="yes" xml:space="preserve">
          <source>In this example, the doubly-nested view structure will be rendered in a single paint.</source>
          <target state="translated">이 예제에서 이중 중첩 뷰 구조는 단일 페인트로 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="3cbc86d1aef7f6de0af9afade468c0b88d451392" translate="yes" xml:space="preserve">
          <source>In this example, the trigger for &lt;code&gt;save:form&lt;/code&gt; will no longer be fired, as the trigger for &lt;code&gt;show:link&lt;/code&gt; completely overrides it.</source>
          <target state="translated">이 예제에서는 &lt;code&gt;show:link&lt;/code&gt; 에 대한 트리거가 완전히 무시하므로 &lt;code&gt;save:form&lt;/code&gt; 에 대한 트리거 가 더 이상 실행되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="eca10d97fa344d9e8dc416801de0ea6a42eac642" translate="yes" xml:space="preserve">
          <source>In this example, when the user clicks on &lt;code&gt;#save-button&lt;/code&gt;, &lt;code&gt;onSave&lt;/code&gt; will be called. If the user clicks on &lt;code&gt;.close-button&lt;/code&gt;, then the event &lt;code&gt;close:view&lt;/code&gt; will be fired on &lt;code&gt;MyView&lt;/code&gt;.</source>
          <target state="translated">이 예에서 사용자가 &lt;code&gt;#save-button&lt;/code&gt; 을 클릭 하면 &lt;code&gt;onSave&lt;/code&gt; 가 호출됩니다. 사용자가 &lt;code&gt;.close-button&lt;/code&gt; 을 클릭 하면 이벤트 &lt;code&gt;close:view&lt;/code&gt; 가 &lt;code&gt;MyView&lt;/code&gt; 에서 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="7abbd1b4078d513f86a97a5a2da74d74092489e6" translate="yes" xml:space="preserve">
          <source>In v4</source>
          <target state="translated">v4에서</target>
        </trans-unit>
        <trans-unit id="138b9759c9ba103b68aec9833c4208706cc483f4" translate="yes" xml:space="preserve">
          <source>In versions previous to v4, &lt;code&gt;MnObject&lt;/code&gt; was simply named &lt;code&gt;Object&lt;/code&gt;. This naming is still supported via the default export of the library, but should be considered &lt;strong&gt;deprecated&lt;/strong&gt; and is scheduled for removal in an upcoming version.</source>
          <target state="translated">v4 이전 버전에서는 &lt;code&gt;MnObject&lt;/code&gt; 의 이름이 단순히 &lt;code&gt;Object&lt;/code&gt; 였습니다. 이 이름 지정은 여전히 ​​라이브러리의 기본 내보내기를 통해 지원되지만 &lt;strong&gt;더 이상 사용되지 않으며&lt;/strong&gt; 향후 버전에서 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="7d806c2e3202418b73175db1623c1523093b7450" translate="yes" xml:space="preserve">
          <source>Inside your view, the &lt;code&gt;save&lt;/code&gt; and &lt;code&gt;close&lt;/code&gt; references will point to the jQuery selectors &lt;code&gt;#save-button&lt;/code&gt; and &lt;code&gt;.close-button&lt;/code&gt;respectively found only in the rendered &lt;code&gt;MyTemplate&lt;/code&gt;.</source>
          <target state="translated">뷰 내에서 &lt;code&gt;save&lt;/code&gt; 및 &lt;code&gt;close&lt;/code&gt; 참조는 렌더링 된 &lt;code&gt;MyTemplate&lt;/code&gt; 에서만 발견 된 jQuery 선택기 &lt;code&gt;#save-button&lt;/code&gt; 및 &lt;code&gt;.close-button&lt;/code&gt; 을 가리 킵니다 .</target>
        </trans-unit>
        <trans-unit id="214913c693b54070e48777a15763b36b565dc676" translate="yes" xml:space="preserve">
          <source>Installing Marionette</source>
          <target state="translated">마리오네트 설치</target>
        </trans-unit>
        <trans-unit id="2e48a65ed1b5393942dc548a8b1c243dbc0f1277" translate="yes" xml:space="preserve">
          <source>Installing with NPM through command-line interface</source>
          <target state="translated">명령 행 인터페이스를 통해 NPM으로 설치</target>
        </trans-unit>
        <trans-unit id="567fe27a4727b3d126ac82236f053bbd3f056c13" translate="yes" xml:space="preserve">
          <source>Instantiating An Application</source>
          <target state="translated">응용 프로그램 인스턴스화</target>
        </trans-unit>
        <trans-unit id="ac8e8b3a3df86f25193f81ffdb5de713f367bb9b" translate="yes" xml:space="preserve">
          <source>Instantiating a Behavior</source>
          <target state="translated">행동 인스턴스화</target>
        </trans-unit>
        <trans-unit id="6e5b521914004f5bf74f117864b124961f477b8d" translate="yes" xml:space="preserve">
          <source>Instantiating a CollectionView</source>
          <target state="translated">CollectionView 인스턴스화</target>
        </trans-unit>
        <trans-unit id="a1a955a94a3f43f4f73bcb115e2a8c80db8f50db" translate="yes" xml:space="preserve">
          <source>Instantiating a MnObject</source>
          <target state="translated">MnObject 인스턴스화</target>
        </trans-unit>
        <trans-unit id="255d21d26e2ce73b365bde4a25423b1f55094420" translate="yes" xml:space="preserve">
          <source>Instantiating a Region</source>
          <target state="translated">지역 인스턴스화</target>
        </trans-unit>
        <trans-unit id="77820beafb1c3306e98ef5f128a2dbbef1e58391" translate="yes" xml:space="preserve">
          <source>Instantiating a View</source>
          <target state="translated">뷰 인스턴스화</target>
        </trans-unit>
        <trans-unit id="f1eb47468e699137fde32233dcdac6c46af35a11" translate="yes" xml:space="preserve">
          <source>Instantiating an Application</source>
          <target state="translated">응용 프로그램 인스턴스화</target>
        </trans-unit>
        <trans-unit id="fbefd2b5961ad362fe8277e107d8100369f5f24f" translate="yes" xml:space="preserve">
          <source>Interaction points, such as tooltips and warning messages, are generic concepts. There is no need to recode them within your Views so they are prime candidates to be extracted into &lt;code&gt;Behavior&lt;/code&gt; classes.</source>
          <target state="translated">툴팁 및 경고 메시지와 같은 상호 작용 지점은 일반적인 개념입니다. 뷰 내에서 코드를 다시 코딩 할 필요가 없으므로 &lt;code&gt;Behavior&lt;/code&gt; 클래스 로 추출 할 주요 후보 입니다.</target>
        </trans-unit>
        <trans-unit id="a3418eb964442487e2a5907fe25965a119f9cb75" translate="yes" xml:space="preserve">
          <source>Internally &lt;code&gt;_.bind&lt;/code&gt; was replaced with &lt;code&gt;Function.prototype.bind&lt;/code&gt;</source>
          <target state="translated">내부적으로 &lt;code&gt;_.bind&lt;/code&gt; 는 &lt;code&gt;Function.prototype.bind&lt;/code&gt; 로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="bffe41e25858026124599d640efa844a4aea2639" translate="yes" xml:space="preserve">
          <source>Internally Marionette uses &lt;a href=&quot;common#triggermethod&quot;&gt;&lt;code&gt;triggerMethod&lt;/code&gt;&lt;/a&gt; for event triggering. This API is not available to &lt;code&gt;Backbone.View&lt;/code&gt;s so in order to support &lt;code&gt;Backbone.View&lt;/code&gt;s in Marionette v4+, &lt;code&gt;Marionette.Events&lt;/code&gt; must be mixed into the non-Marionette view.</source>
          <target state="translated">내부적으로 마리오네트는 이벤트 트리거링에 &lt;a href=&quot;common#triggermethod&quot;&gt; &lt;code&gt;triggerMethod&lt;/code&gt; &lt;/a&gt; 를 사용합니다 . 이 API는 &lt;code&gt;Backbone.View&lt;/code&gt; 에서 사용할 수 없으므로 Marionette v4 +의 Marionette.Events에서 &lt;code&gt;Backbone.View&lt;/code&gt; 를 지원 하려면 &lt;code&gt;Marionette.Events&lt;/code&gt; 가 아닌보기로 혼합해야합니다.</target>
        </trans-unit>
        <trans-unit id="98941c5e17f60962216743346284fd2d125f7bac" translate="yes" xml:space="preserve">
          <source>Invoking the &lt;code&gt;destroy&lt;/code&gt; method will trigger &lt;code&gt;before:destroy&lt;/code&gt; and &lt;code&gt;destroy&lt;/code&gt; events and their &lt;a href=&quot;marionette.functions#marionettetriggermethod&quot;&gt;corresponding methods&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;destroy&lt;/code&gt; 메소드를 호출하면 &lt;code&gt;before:destroy&lt;/code&gt; 및 &lt;code&gt;destroy&lt;/code&gt; 이벤트 및 &lt;a href=&quot;marionette.functions#marionettetriggermethod&quot;&gt;해당 메소드&lt;/a&gt; 가 트리거됩니다 .</target>
        </trans-unit>
        <trans-unit id="f618c4cbbe21fb56cb1bfb8f75d37b246c80a35e" translate="yes" xml:space="preserve">
          <source>It indicates the whether or not &lt;a href=&quot;dom.interactions#view-triggers-event-object&quot;&gt;&lt;code&gt;View.triggers&lt;/code&gt; will call &lt;code&gt;event.preventDefault()&lt;/code&gt;&lt;/a&gt; if not explicitly defined by the trigger. The default has been true, but for a future version &lt;a href=&quot;https://github.com/marionettejs/backbone.marionette/issues/2926&quot;&gt;&lt;code&gt;false&lt;/code&gt; is being considered&lt;/a&gt;.</source>
          <target state="translated">트리거에 의해 명시 적으로 정의되지 않은 경우 &lt;a href=&quot;dom.interactions#view-triggers-event-object&quot;&gt; &lt;code&gt;View.triggers&lt;/code&gt; 가 &lt;code&gt;event.preventDefault()&lt;/code&gt; &lt;/a&gt; 를 호출 할지 여부를 나타냅니다 . 기본값은 true이지만 이후 버전에서는 &lt;a href=&quot;https://github.com/marionettejs/backbone.marionette/issues/2926&quot;&gt; &lt;code&gt;false&lt;/code&gt; 로 간주됩니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b03698a4c89d76efd222feebd906c19eec51bbf" translate="yes" xml:space="preserve">
          <source>It indicates the whether or not &lt;a href=&quot;dom.interactions#view-triggers-event-object&quot;&gt;&lt;code&gt;View.triggers&lt;/code&gt; will call &lt;code&gt;event.stopPropagating()&lt;/code&gt;&lt;/a&gt; if not explicitly defined by the trigger. The default has been true, but for a future version &lt;a href=&quot;https://github.com/marionettejs/backbone.marionette/issues/2926&quot;&gt;&lt;code&gt;false&lt;/code&gt; is being considered&lt;/a&gt;.</source>
          <target state="translated">트리거에 의해 명시 적으로 정의되지 않은 경우 &lt;a href=&quot;dom.interactions#view-triggers-event-object&quot;&gt; &lt;code&gt;View.triggers&lt;/code&gt; 가 &lt;code&gt;event.stopPropagating()&lt;/code&gt; &lt;/a&gt; 을 호출 할지 여부를 나타냅니다 . 기본값은 true이지만 이후 버전에서는 &lt;a href=&quot;https://github.com/marionettejs/backbone.marionette/issues/2926&quot;&gt; &lt;code&gt;false&lt;/code&gt; 로 간주됩니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e1f68d08f58c44e5136d0aebf3ee63196d507bcb" translate="yes" xml:space="preserve">
          <source>It may be the case that you need child views of already existing DOM as well. To set this up you'll need to query for &lt;code&gt;el&lt;/code&gt;s down the tree:</source>
          <target state="translated">이미 존재하는 DOM에 대한 자식 뷰가 필요할 수도 있습니다. 당신이 쿼리에해야이 설정하려면 &lt;code&gt;el&lt;/code&gt; 의 나무 아래 :</target>
        </trans-unit>
        <trans-unit id="05fd08ff38ba85dff7d7e1954f0bdc68edcfc8b0" translate="yes" xml:space="preserve">
          <source>Just as in &lt;code&gt;modelEvents&lt;/code&gt;, you can bind function callbacks directly inside the &lt;code&gt;collectionEvents&lt;/code&gt; object:</source>
          <target state="translated">그냥 같이 &lt;code&gt;modelEvents&lt;/code&gt; , 당신은 내부의 직접 함수 콜백 바인딩 할 수 있습니다 &lt;code&gt;collectionEvents&lt;/code&gt; 객체를 :</target>
        </trans-unit>
        <trans-unit id="fb3f5d6c966727db9186faecfbe70878660d3e80" translate="yes" xml:space="preserve">
          <source>Just like &lt;code&gt;Backbone&lt;/code&gt;'s &lt;a href=&quot;http://backbonejs.org/#Events-trigger&quot;&gt;&lt;code&gt;trigger&lt;/code&gt;&lt;/a&gt; the &lt;code&gt;triggerMethod&lt;/code&gt; method fires the named event on the instance - any listeners will then be triggered on the event. If there are no listeners, this call will still succeed. All arguments after the first event name string will be passed to all event handlers.</source>
          <target state="translated">마찬가지로 &lt;code&gt;Backbone&lt;/code&gt; 의 &lt;a href=&quot;http://backbonejs.org/#Events-trigger&quot;&gt; &lt;code&gt;trigger&lt;/code&gt; &lt;/a&gt; &lt;code&gt;triggerMethod&lt;/code&gt; 의 방법 화재 인스턴스에 명명 된 이벤트 - 리스너는 이벤트에서 트리거됩니다. 리스너가 없으면이 호출은 계속 성공합니다. 첫 번째 이벤트 이름 문자열 뒤의 모든 인수는 모든 이벤트 핸들러로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="d2833ccf0e28302ed2a52d6db845e3200c972958" translate="yes" xml:space="preserve">
          <source>Just like Backbone Events, the Radio respects the &lt;code&gt;listenTo&lt;/code&gt; handler as well:</source>
          <target state="translated">Backbone Events와 마찬가지로 Radio는 &lt;code&gt;listenTo&lt;/code&gt; 핸들러도 존중합니다 .</target>
        </trans-unit>
        <trans-unit id="f3d1259778049e278a6f897113e6151b7297c018" translate="yes" xml:space="preserve">
          <source>Know of other routers that should be listed here?</source>
          <target state="translated">여기에 나와있는 다른 라우터에 대해 알고 있습니까?</target>
        </trans-unit>
        <trans-unit id="266f353b8107014c6838b2d45bfd4917b5582d80" translate="yes" xml:space="preserve">
          <source>Laying Out Views - Regions</source>
          <target state="translated">뷰 레이아웃-지역</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">MIT 라이센스에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="2f8b1d7a394ffe253551cd750d202d23b2572557" translate="yes" xml:space="preserve">
          <source>Lifecycle Events</source>
          <target state="translated">라이프 사이클 이벤트</target>
        </trans-unit>
        <trans-unit id="b7224898374009ef54f60e402babfcd54d138b16" translate="yes" xml:space="preserve">
          <source>Lifecycle State Methods</source>
          <target state="translated">수명주기 상태 방법</target>
        </trans-unit>
        <trans-unit id="9392f7fdaaf4c8d2b30e1403f800769cf69c1ecc" translate="yes" xml:space="preserve">
          <source>Lifecycle and Events</source>
          <target state="translated">라이프 사이클 및 이벤트</target>
        </trans-unit>
        <trans-unit id="794849d5bfc51aef86463073067180f0530f6e3d" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;http://backbonejs.org/#Model-extend&quot;&gt;Backbone&lt;/a&gt;, Marionette utilizes the &lt;a href=&quot;http://underscorejs.org/#extend&quot;&gt;&lt;code&gt;_.extend&lt;/code&gt;&lt;/a&gt; function to simulate class-based inheritance. &lt;a href=&quot;classes&quot;&gt;All built-in classes&lt;/a&gt;, such as &lt;code&gt;Marionette.View&lt;/code&gt;, &lt;code&gt;Marionette.MnObject&lt;/code&gt; and everything that extend these provide an &lt;code&gt;extend&lt;/code&gt; method for just this purpose.</source>
          <target state="translated">&lt;a href=&quot;http://backbonejs.org/#Model-extend&quot;&gt;Backbone&lt;/a&gt; 과 마찬가지로 Marionette는 &lt;a href=&quot;http://underscorejs.org/#extend&quot;&gt; &lt;code&gt;_.extend&lt;/code&gt; &lt;/a&gt; 함수를 사용하여 클래스 기반 상속을 시뮬레이션합니다. &lt;code&gt;Marionette.View&lt;/code&gt; , &lt;code&gt;Marionette.MnObject&lt;/code&gt; 와 같은 &lt;a href=&quot;classes&quot;&gt;모든 내장 클래스&lt;/a&gt; 와이를 확장하는 모든 것은 이 목적을위한 &lt;code&gt;extend&lt;/code&gt; 메소드를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="0d7b79e269562a3547158db1866c52bec33cab6e" translate="yes" xml:space="preserve">
          <source>Like the backbone classes, &lt;code&gt;initialize&lt;/code&gt; is a method you can define on any Marionette class that will be called when the class is instantiated and will be passed any arguments passed at instantiation. The first argument may contain &lt;a href=&quot;#getoption&quot;&gt;options&lt;/a&gt; the class attaches to the instance.</source>
          <target state="translated">백본 클래스와 마찬가지로 &lt;code&gt;initialize&lt;/code&gt; 는 클래스가 인스턴스화 될 때 호출되고 인스턴스화시 전달 된 인수가 전달되는 모든 마리오네트 클래스에서 정의 할 수있는 메소드입니다. 첫 번째 인수는 클래스가 인스턴스에 연결하는 &lt;a href=&quot;#getoption&quot;&gt;옵션을&lt;/a&gt; 포함 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d548f986afd3875d104623c3248f57a085ac69e6" translate="yes" xml:space="preserve">
          <source>Listening to Both</source>
          <target state="translated">둘 다 듣기</target>
        </trans-unit>
        <trans-unit id="4068e29f0d00dd78b6cb63522d95b7fd8466fe66" translate="yes" xml:space="preserve">
          <source>Listening to Events</source>
          <target state="translated">이벤트 듣기</target>
        </trans-unit>
        <trans-unit id="4bb67ac00d2ab257cab62a98d7126dff213dc005" translate="yes" xml:space="preserve">
          <source>Listening to Events on Children</source>
          <target state="translated">어린이 행사 듣기</target>
        </trans-unit>
        <trans-unit id="b05e9df67400d9824cb42995162d43a4664a4ab1" translate="yes" xml:space="preserve">
          <source>Listening to Events on the &lt;code&gt;children&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;children&lt;/code&gt; 이벤트 듣기</target>
        </trans-unit>
        <trans-unit id="959a1f844c50daefb3f812e108e07ab058bfd4c3" translate="yes" xml:space="preserve">
          <source>Listening to View Events</source>
          <target state="translated">이벤트보기</target>
        </trans-unit>
        <trans-unit id="dd0acbd87b6e975a834e11876a01c2dc936199a9" translate="yes" xml:space="preserve">
          <source>Listening to events</source>
          <target state="translated">이벤트 듣기</target>
        </trans-unit>
        <trans-unit id="f19646932df2821a76d070d391a81a56f5b95215" translate="yes" xml:space="preserve">
          <source>Live example</source>
          <target state="translated">라이브 예</target>
        </trans-unit>
        <trans-unit id="d66c6803c67f60624e428beacade6cb10972157a" translate="yes" xml:space="preserve">
          <source>Live examples</source>
          <target state="translated">라이브 예</target>
        </trans-unit>
        <trans-unit id="4951b5dfe960413b1f4f4cccbea773e1fb3504db" translate="yes" xml:space="preserve">
          <source>Lookup the &lt;code&gt;selector&lt;/code&gt; string within the DOM node &lt;code&gt;el&lt;/code&gt;. It should return an array-like object of nodes.</source>
          <target state="translated">DOM 노드 &lt;code&gt;el&lt;/code&gt; 내 에서 &lt;code&gt;selector&lt;/code&gt; 문자열을 찾아보십시오 . 배열과 같은 노드 객체를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="1651497a7fc40b0484d62ece458a0393750512c7" translate="yes" xml:space="preserve">
          <source>Lookup the &lt;code&gt;selector&lt;/code&gt; string withing the DOM. The &lt;code&gt;selector&lt;/code&gt; may also be a DOM element. It should return an array-like object of the node.</source>
          <target state="translated">DOM을 사용 하여 &lt;code&gt;selector&lt;/code&gt; 문자열을 조회하십시오 . &lt;code&gt;selector&lt;/code&gt; 또한 DOM 요소 일 수있다. 노드의 배열과 같은 객체를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="86dfef80e23b0ea17c71f227fdf972caa7e16d75" translate="yes" xml:space="preserve">
          <source>Main Differences</source>
          <target state="translated">주요 차이점</target>
        </trans-unit>
        <trans-unit id="cd3da3c7d18842ca765ff8214586804aa8ed32a9" translate="yes" xml:space="preserve">
          <source>Maintaining the &lt;code&gt;collection&lt;/code&gt;'s sort</source>
          <target state="translated">&lt;code&gt;collection&lt;/code&gt; 정렬 유지</target>
        </trans-unit>
        <trans-unit id="0254f8f86aa27583cad891d9fff14f870321c377" translate="yes" xml:space="preserve">
          <source>Maintains a reference to the version of a Marionette instance. &lt;code&gt;VERSION&lt;/code&gt; is used to direct users to the correctly versioned documentation when errors are thrown.</source>
          <target state="translated">Marionette 인스턴스 버전에 대한 참조를 유지합니다. &lt;code&gt;VERSION&lt;/code&gt; 은 오류가 발생할 때 사용자에게 올바른 버전의 설명서를 제공하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="313565c2df6b814a53a5923407e8de1cc7cd8b4b" translate="yes" xml:space="preserve">
          <source>Managing &lt;code&gt;View&lt;/code&gt; children</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 어린이 관리</target>
        </trans-unit>
        <trans-unit id="604c20eb5f07ae96d11a9b30a752d137fe4e822f" translate="yes" xml:space="preserve">
          <source>Managing Children</source>
          <target state="translated">어린이 관리</target>
        </trans-unit>
        <trans-unit id="1441b9e0164f2b511e6567a9f8d1008e00fad420" translate="yes" xml:space="preserve">
          <source>Managing a Pre-existing View Tree.</source>
          <target state="translated">기존 뷰 트리 관리</target>
        </trans-unit>
        <trans-unit id="387799c67771be6c8025e753344ffcfd26242450" translate="yes" xml:space="preserve">
          <source>Marionette 3 introduces a number of breaking changes. This upgrade guide will go through the major changes and describe how to change your application to accommodate them.</source>
          <target state="translated">마리오네트 3에는 여러 가지 주요 변경 사항이 있습니다. 이 업그레이드 안내서는 주요 변경 사항을 살펴보고이를 수용하기 위해 응용 프로그램을 변경하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="e20955d4e5bc57af427d23d8f027a752ccb6fd57" translate="yes" xml:space="preserve">
          <source>Marionette 4 introduces a number of breaking changes. This upgrade guide will go through the major changes and describe how to change your application to accommodate them.</source>
          <target state="translated">마리오네트 4는 몇 가지 주요 변경 사항을 소개합니다. 이 업그레이드 안내서는 주요 변경 사항을 살펴보고이를 수용하기 위해 응용 프로그램을 변경하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="906946d727f5cf4b0cb2993ff0e4567ef919ede0" translate="yes" xml:space="preserve">
          <source>Marionette Classes</source>
          <target state="translated">마리오네트 클래스</target>
        </trans-unit>
        <trans-unit id="e29c3a94809b27efd557e1c5ca0c2a916dcca46d" translate="yes" xml:space="preserve">
          <source>Marionette Community Routers</source>
          <target state="translated">마리오네트 커뮤니티 라우터</target>
        </trans-unit>
        <trans-unit id="4551d54a266ec052aee8aea9f607245f5344f0a5" translate="yes" xml:space="preserve">
          <source>Marionette Events</source>
          <target state="translated">마리오네트 이벤트</target>
        </trans-unit>
        <trans-unit id="ed0e04de6cada3a6ed9f2cbb9ff3d78223e85b53" translate="yes" xml:space="preserve">
          <source>Marionette Features are opt-in functionality that you can enable by utilizing &lt;a href=&quot;#setting-a-feature-flag&quot;&gt;&lt;code&gt;setEnabled&lt;/code&gt;&lt;/a&gt; in your app. It is a good practice to set these flags only once prior to instantiating any Marionette class.</source>
          <target state="translated">Marionette 기능은 앱에서 &lt;a href=&quot;#setting-a-feature-flag&quot;&gt; &lt;code&gt;setEnabled&lt;/code&gt; &lt;/a&gt; 를 사용하여 활성화 할 수있는 옵트 인 기능입니다 . Marionette 클래스를 인스턴스화하기 전에이 플래그를 한 번만 설정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="098da92f101f435929e3fc614b2aff87925addb5" translate="yes" xml:space="preserve">
          <source>Marionette Integration</source>
          <target state="translated">마리오네트 통합</target>
        </trans-unit>
        <trans-unit id="29d2391518beb5c1ea3aa59957b68a1d8a72c0d7" translate="yes" xml:space="preserve">
          <source>Marionette Modules have been completely removed in favor of using the more standard JavaScript module loaders e.g. &lt;a href=&quot;installation#quick-start-using-npm-and-webpack&quot;&gt;Webpack&lt;/a&gt; or &lt;a href=&quot;installation#quick-start-using-npm-and-browserify&quot;&gt;Browserify&lt;/a&gt;. See the &lt;a href=&quot;installation&quot;&gt;installation&lt;/a&gt; documentation for a list of potential options.</source>
          <target state="translated">마리오네트 모듈은 &lt;a href=&quot;installation#quick-start-using-npm-and-webpack&quot;&gt;Webpack&lt;/a&gt; 또는 &lt;a href=&quot;installation#quick-start-using-npm-and-browserify&quot;&gt;Browserify와&lt;/a&gt; 같은보다 표준적인 JavaScript 모듈 로더를 사용하기 위해 완전히 제거되었습니다 . 가능한 옵션 목록은 &lt;a href=&quot;installation&quot;&gt;설치&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4864103c0e87be95fdcb28a3b2a8321d3a47537" translate="yes" xml:space="preserve">
          <source>Marionette Regions aren't just for showing Marionette Views - they can also display instances of a &lt;a href=&quot;http://backbonejs.org/#View&quot;&gt;&lt;code&gt;Backbone.View&lt;/code&gt;&lt;/a&gt;. To do this, ensure your view defines a &lt;code&gt;render()&lt;/code&gt; method and just treat it like a regular Marionette View:</source>
          <target state="translated">마리오네트 리전은 마리오네트 뷰를 보여주기위한 것이 아니라 &lt;a href=&quot;http://backbonejs.org/#View&quot;&gt; &lt;code&gt;Backbone.View&lt;/code&gt; &lt;/a&gt; 인스턴스를 표시 할 수도 있습니다 . 이렇게하려면 뷰가 &lt;code&gt;render()&lt;/code&gt; 메서드를 정의 하고 일반 마리오네트 뷰처럼 취급해야합니다.</target>
        </trans-unit>
        <trans-unit id="b23394affa9700d4387c4740b02fbca2b24611e7" translate="yes" xml:space="preserve">
          <source>Marionette Utility Functions</source>
          <target state="translated">마리오네트 유틸리티 기능</target>
        </trans-unit>
        <trans-unit id="ca489fd06bb0b57bbcf1874e7bb87e27e0ac96c3" translate="yes" xml:space="preserve">
          <source>Marionette Views are Backbone Views and so when they are instantiated the view has an &lt;code&gt;el&lt;/code&gt;. That &lt;code&gt;el&lt;/code&gt; will be the root node for the view and other than its contents it will not change for the life of the view unless directly manipulated (ie: &lt;code&gt;view.$el.addClass&lt;/code&gt;)</source>
          <target state="translated">마리오네트보기는 백본보기이므로 인스턴스화 될 때보기에는 &lt;code&gt;el&lt;/code&gt; 이 있습니다. 그 &lt;code&gt;el&lt;/code&gt; 은 뷰의 루트 노드가 될 것이며 그 내용 외에는 직접 조작하지 않는 한 뷰의 수명 동안 변경되지 않습니다 (예 : &lt;code&gt;view.$el.addClass&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="8b1de285a1555538fa6a76b6f2583d1be80c0ce5" translate="yes" xml:space="preserve">
          <source>Marionette Views fire events during their creation and destruction lifecycle. For more information see the documentation covering the &lt;a href=&quot;view.lifecycle&quot;&gt;&lt;code&gt;View&lt;/code&gt; Lifecycle&lt;/a&gt;.</source>
          <target state="translated">Marionette는 생성 및 소멸 수명주기 동안 화재 이벤트를 봅니다. 자세한 내용은 &lt;a href=&quot;view.lifecycle&quot;&gt; &lt;code&gt;View&lt;/code&gt; 수명주기에&lt;/a&gt; 대한 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e2d7527505222582f50dc5338f654e58ab4bb585" translate="yes" xml:space="preserve">
          <source>Marionette also supports templates that render to DOM instead of html strings by using a custom render.</source>
          <target state="translated">Marionette는 또한 사용자 정의 렌더링을 사용하여 html 문자열 대신 DOM으로 렌더링하는 템플릿을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="1b912d0a60e1ce2bd9bb90071a5b1512f3efb25e" translate="yes" xml:space="preserve">
          <source>Marionette can set options when you instantiate a class. This lets you override many class-based attributes when you need to. You can also pass new information specific to the object in question that it can access through special helper methods.</source>
          <target state="translated">마리오네트는 클래스를 인스턴스화 할 때 옵션을 설정할 수 있습니다. 이를 통해 필요할 때 많은 클래스 기반 속성을 무시할 수 있습니다. 또한 특정 도우미 메서드를 통해 액세스 할 수있는 문제의 객체에 특정한 새로운 정보를 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a420baa63c2d25e3aaa7d68c4a45b08dac352427" translate="yes" xml:space="preserve">
          <source>Marionette follows Backbone's &lt;a href=&quot;basics#class-based-inheritance&quot;&gt;pseudo-class architecture&lt;/a&gt;. This documentation is meant to provide a comprehensive listing of those classes so that the reader can have a high-level view and understand functional similarities between the classes. All of these classes share a &lt;a href=&quot;common&quot;&gt;common set of functionality&lt;/a&gt;.</source>
          <target state="translated">마리오네트는 Backbone의 &lt;a href=&quot;basics#class-based-inheritance&quot;&gt;유사 클래스 아키텍처를&lt;/a&gt; 따릅니다 . 이 문서는 해당 클래스의 포괄적 인 목록을 제공하여 독자가 높은 수준의 시각을 갖고 클래스 간의 기능적 유사성을 이해할 수 있도록하기위한 것입니다. 이러한 모든 클래스는 &lt;a href=&quot;common&quot;&gt;공통 기능 세트를&lt;/a&gt; 공유 합니다 .</target>
        </trans-unit>
        <trans-unit id="e7e1e05a5ec629b9e4dcfe0fcbd2a6b94e3617bb" translate="yes" xml:space="preserve">
          <source>Marionette global instance is not attached to Backbone global instance</source>
          <target state="translated">Marionette 글로벌 인스턴스가 Backbone 글로벌 인스턴스에 연결되지 않았습니다</target>
        </trans-unit>
        <trans-unit id="eba84ac1cfc7a140f219cbb5c74abdc9eb86c5ac" translate="yes" xml:space="preserve">
          <source>Marionette has a few methods and core functionality that are common to &lt;a href=&quot;classes&quot;&gt;all classes&lt;/a&gt;.</source>
          <target state="translated">마리오네트에는 &lt;a href=&quot;classes&quot;&gt;모든 클래스에&lt;/a&gt; 공통적 인 몇 가지 방법과 핵심 기능이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c3c93a731744127a8a19bb7fb8b137e6d6925d9e" translate="yes" xml:space="preserve">
          <source>Marionette has a few methods that are common to &lt;a href=&quot;classes&quot;&gt;all classes&lt;/a&gt;.</source>
          <target state="translated">마리오네트에는 &lt;a href=&quot;classes&quot;&gt;모든 클래스에&lt;/a&gt; 공통적 인 몇 가지 방법이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b93b6a6a967c40db4f6061856cedf5900e0984f" translate="yes" xml:space="preserve">
          <source>Marionette is able to trigger &lt;code&gt;attach&lt;/code&gt;/&lt;code&gt;detach&lt;/code&gt; events down the view tree along with triggering the &lt;code&gt;dom:refresh&lt;/code&gt;/&lt;code&gt;dom:remove&lt;/code&gt; events because of the view event monitor. This monitor starts when a view is created or shown in a region (to handle non-Marionette views).</source>
          <target state="translated">Marionette는 뷰 이벤트 모니터로 인해 &lt;code&gt;dom:refresh&lt;/code&gt; / &lt;code&gt;dom:remove&lt;/code&gt; 이벤트 를 트리거하는 동시에 뷰 트리에서 이벤트 &lt;code&gt;attach&lt;/code&gt; / &lt;code&gt;detach&lt;/code&gt; 를 트리거 할 수 있습니다. 이 모니터는 마리오네트가 아닌보기를 처리하기 위해보기가 작성되거나 영역에 표시 될 때 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="16e5c4b7b1df4ceada27ce430b45eb8268d304fc" translate="yes" xml:space="preserve">
          <source>Marionette provides a few classes for building your view tree and application structure.</source>
          <target state="translated">Marionette는 뷰 트리 및 애플리케이션 구조를 구축하기위한 몇 가지 클래스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ec98ac7d32426eab49ee9246fac7630358d8ff93" translate="yes" xml:space="preserve">
          <source>Marionette provides a set of utility / helper functions that are used to facilitate common behaviors throughout the framework. These functions may be useful to those that are building on top of Marionette, as they provide a way to get the same behaviors and conventions from your own code.</source>
          <target state="translated">Marionette는 프레임 워크 전체에서 공통적 인 동작을 수행하는 데 사용되는 유틸리티 / 헬퍼 기능 세트를 제공합니다. 이 함수들은 여러분의 코드에서 동일한 행동과 규칙을 얻는 방법을 제공하기 때문에 마리오네트 위에 구축 된 사람들에게 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="22931899a90a6763313bddd82c94eba8be2c665b" translate="yes" xml:space="preserve">
          <source>Marionette provides a simple mechanism to infinitely nest views in a single paint: just render all of the children in the &lt;code&gt;onRender&lt;/code&gt; callback for the &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt;&lt;code&gt;render&lt;/code&gt; event&lt;/a&gt;.</source>
          <target state="translated">Marionette는 단일 페인트에서 뷰를 무한히 중첩하는 간단한 메커니즘을 제공합니다 . &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt; &lt;code&gt;render&lt;/code&gt; &lt;/a&gt; 이벤트 에 대한 &lt;code&gt;onRender&lt;/code&gt; 콜백 에서 모든 자식을 렌더링하기 만하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="9577190713265c44a09ba3de1a5c36f823032b5c" translate="yes" xml:space="preserve">
          <source>Marionette still supports using the library via an inline script.</source>
          <target state="translated">Marionette는 여전히 인라인 스크립트를 통한 라이브러리 사용을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="9a3a7c3a4a04dd9ea86cf9b4b54909d64a2db0c5" translate="yes" xml:space="preserve">
          <source>Marionette uses &lt;a href=&quot;events#triggermethod&quot;&gt;&lt;code&gt;triggerMethod&lt;/code&gt;&lt;/a&gt; internally to trigger various events used within the &lt;a href=&quot;classes&quot;&gt;classes&lt;/a&gt;. This provides &lt;a href=&quot;events#onevent-binding&quot;&gt;'onEvent' binding&lt;/a&gt; providing convenient hooks for handling class events. Notably all internally triggered events will pass the triggering class instance as the first argument of the event.</source>
          <target state="translated">Marionette는 내부에서 &lt;a href=&quot;events#triggermethod&quot;&gt; &lt;code&gt;triggerMethod&lt;/code&gt; &lt;/a&gt; 를 사용하여 &lt;a href=&quot;classes&quot;&gt;클래스&lt;/a&gt; 내에서 사용되는 다양한 이벤트를 트리거합니다 . 이것은 클래스 이벤트를 처리하기위한 편리한 후크를 제공하는 &lt;a href=&quot;events#onevent-binding&quot;&gt;'onEvent'바인딩을&lt;/a&gt; 제공합니다. 특히 내부적으로 트리거 된 모든 이벤트는 트리거링 클래스 인스턴스를 이벤트의 첫 번째 인수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="cb222797e3edabfba01e61f1d1b71ce5b86c414f" translate="yes" xml:space="preserve">
          <source>Marionette views provide a &lt;code&gt;templateContext&lt;/code&gt; attribute that is used to add extra information to your templates. This can be either an object, or a function returning an object. The keys on the returned object will be mixed into the model or collection keys and made available to the template.</source>
          <target state="translated">마리오네트보기는 &lt;code&gt;templateContext&lt;/code&gt; 에 추가 정보를 추가하는 데 사용되는 templateContext 속성을 제공합니다 . 이것은 객체이거나 객체를 반환하는 함수일 수 있습니다. 반환 된 객체의 키는 모델 또는 컬렉션 키에 혼합되어 템플릿에 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="8be7f6b4fe520d809c9376a5627d9229fe08b781" translate="yes" xml:space="preserve">
          <source>Marionette views use the &lt;code&gt;getTemplate&lt;/code&gt; method to determine which template to use for rendering into its &lt;code&gt;el&lt;/code&gt;. By default &lt;code&gt;getTemplate&lt;/code&gt; is predefined on the view as simply:</source>
          <target state="translated">마리오네트보기는 &lt;code&gt;getTemplate&lt;/code&gt; 메소드를 사용하여 &lt;code&gt;el&lt;/code&gt; 에 렌더링하는 데 사용할 템플리트를 결정 합니다. 기본적으로 &lt;code&gt;getTemplate&lt;/code&gt; 은 다음과 같이 뷰에서 사전 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="11d422e5ec10a99146c9fb56ae8f878db1006770" translate="yes" xml:space="preserve">
          <source>Marionette will automatically serialize the data from its &lt;code&gt;model&lt;/code&gt; or &lt;code&gt;collection&lt;/code&gt; for the template to use at &lt;a href=&quot;#rendering-the-template&quot;&gt;rendering&lt;/a&gt;. You can override this logic and provide serialization of other data with the &lt;code&gt;serializeData&lt;/code&gt; method. The method is called with no arguments, but has the context of the view and should return a javascript object for the template to consume. If &lt;code&gt;serializeData&lt;/code&gt; does not return data the template may still receive &lt;a href=&quot;#adding-context-data&quot;&gt;added context&lt;/a&gt; or an empty object for rendering.</source>
          <target state="translated">Marionette는 &lt;a href=&quot;#rendering-the-template&quot;&gt;렌더링시&lt;/a&gt; 템플릿이 사용할 &lt;code&gt;model&lt;/code&gt; 또는 &lt;code&gt;collection&lt;/code&gt; 의 데이터를 자동으로 직렬화합니다 . 이 로직을 무시하고 &lt;code&gt;serializeData&lt;/code&gt; 메소드를 사용하여 다른 데이터의 직렬화를 제공 할 수 있습니다 . 이 메소드는 인수없이 호출되지만 뷰의 컨텍스트를 가지며 템플리트가 사용할 Javascript 오브젝트를 리턴해야합니다. 경우 &lt;code&gt;serializeData&lt;/code&gt; 은 데이터를 반환하지 않는 템플릿은 여전히 나타날 수 있습니다 &lt;a href=&quot;#adding-context-data&quot;&gt;추가 컨텍스트&lt;/a&gt; 또는 렌더링을위한 빈 개체를.</target>
        </trans-unit>
        <trans-unit id="0d579d3caa519a51830b3917163454ebfbf8d4b9" translate="yes" xml:space="preserve">
          <source>Marionette will determine the initial state of the view as to whether the view is considered already &lt;a href=&quot;#rendering-a-view&quot;&gt;rendered&lt;/a&gt; or &lt;a href=&quot;#attaching-a-view&quot;&gt;attached&lt;/a&gt;. If a view is already rendered or attached its &lt;a href=&quot;#lifecycle-state-methods&quot;&gt;state&lt;/a&gt; will reflect that status, but the &lt;a href=&quot;events.class#dom-change-events&quot;&gt;related events&lt;/a&gt; will not have fired.</source>
          <target state="translated">Marionette는 뷰가 이미 &lt;a href=&quot;#rendering-a-view&quot;&gt;렌더링&lt;/a&gt; 또는 &lt;a href=&quot;#attaching-a-view&quot;&gt;첨부 &lt;/a&gt;된 것으로 간주되는지에 대한 뷰의 초기 상태를 결정합니다 . 뷰가 이미 렌더링되거나 연결된 경우 해당 &lt;a href=&quot;#lifecycle-state-methods&quot;&gt;상태&lt;/a&gt; 는 해당 상태 를 반영하지만 &lt;a href=&quot;events.class#dom-change-events&quot;&gt;관련 이벤트&lt;/a&gt; 는 시작되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fa3a05c286aa372b97210792630e20e72dd1e549" translate="yes" xml:space="preserve">
          <source>Marionette's Views extend &lt;a href=&quot;http://backbonejs.org/#View&quot;&gt;&lt;code&gt;Backbone.View&lt;/code&gt;&lt;/a&gt; and so have references to the view's &lt;code&gt;el&lt;/code&gt;, &lt;code&gt;$el&lt;/code&gt;, and &lt;code&gt;this.$()&lt;/code&gt; as well as defining an &lt;code&gt;events&lt;/code&gt; hash.</source>
          <target state="translated">Marionette의 뷰는 &lt;a href=&quot;http://backbonejs.org/#View&quot;&gt; &lt;code&gt;Backbone.View&lt;/code&gt; 를&lt;/a&gt; 확장 하므로 뷰의 &lt;code&gt;el&lt;/code&gt; , &lt;code&gt;$el&lt;/code&gt; 및 &lt;code&gt;this.$()&lt;/code&gt; 대한 참조와 &lt;code&gt;events&lt;/code&gt; 해시 를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="0042c01262061aa5ba317a73a2fcf48fb6f05b00" translate="yes" xml:space="preserve">
          <source>Marionette's event triggers work just like regular Backbone events - you can use &lt;code&gt;myView.on&lt;/code&gt; and &lt;code&gt;myObject.listenTo&lt;/code&gt; to act on events:</source>
          <target state="translated">Marionette의 이벤트 트리거는 일반 백본 이벤트 와 동일 하게 작동 &lt;code&gt;myObject.listenTo&lt;/code&gt; &lt;code&gt;myView.on&lt;/code&gt; 및 myObject.listenTo 를 사용 하여 이벤트를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ade739e03b2fb023f22875356bdaadcb09caa290" translate="yes" xml:space="preserve">
          <source>Marionette.AppRouter</source>
          <target state="translated">Marionette.AppRouter</target>
        </trans-unit>
        <trans-unit id="ba5df34e1f004ddbaf5e9ea87cf3e2895ecf1665" translate="yes" xml:space="preserve">
          <source>Marionette.Application</source>
          <target state="translated">Marionette.Application</target>
        </trans-unit>
        <trans-unit id="be78894afd036429089f6616081e565583ba9fac" translate="yes" xml:space="preserve">
          <source>Marionette.Behavior</source>
          <target state="translated">Marionette.Behavior</target>
        </trans-unit>
        <trans-unit id="5bee535ebf20e03cc69809d0e4e3292a13db17ac" translate="yes" xml:space="preserve">
          <source>Marionette.CollectionView</source>
          <target state="translated">Marionette.CollectionView</target>
        </trans-unit>
        <trans-unit id="5153557d0e46285367ef31eabf1e4b1956588c12" translate="yes" xml:space="preserve">
          <source>Marionette.Events and triggerMethod</source>
          <target state="translated">마리오네트 이벤트 및 트리거 방법</target>
        </trans-unit>
        <trans-unit id="fbdb9532868b246d2a629c4a9125ca8a3e5986ce" translate="yes" xml:space="preserve">
          <source>Marionette.MnObject</source>
          <target state="translated">Marionette.MnObject</target>
        </trans-unit>
        <trans-unit id="4604f0620e5ccaba9bb8554f1558cf632edbf83f" translate="yes" xml:space="preserve">
          <source>Marionette.Region</source>
          <target state="translated">Marionette.Region</target>
        </trans-unit>
        <trans-unit id="ce5d3174258dda7edfb586f7b5b183d9375fa602" translate="yes" xml:space="preserve">
          <source>Marionette.Routing</source>
          <target state="translated">Marionette.Routing</target>
        </trans-unit>
        <trans-unit id="b37f901597bce1b55a5c3d11bd146a54b5279ebd" translate="yes" xml:space="preserve">
          <source>Marionette.View</source>
          <target state="translated">Marionette.View</target>
        </trans-unit>
        <trans-unit id="d52643b5cec046a11ca35c2e534d4ea4c4518a4f" translate="yes" xml:space="preserve">
          <source>Marionette.js</source>
          <target state="translated">Marionette.js</target>
        </trans-unit>
        <trans-unit id="10687c57012eeb98ea3c6ebfb58243a99136e34c" translate="yes" xml:space="preserve">
          <source>Mash it into a single call - &lt;code&gt;onBeforeDomRefresh&lt;/code&gt;</source>
          <target state="translated">단일 호출로 연결 &lt;code&gt;onBeforeDomRefresh&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="ef6f218cabaaf1a03f674a30f448eac7b8c0f2dd" translate="yes" xml:space="preserve">
          <source>MnObject</source>
          <target state="translated">MnObject</target>
        </trans-unit>
        <trans-unit id="9d47c4883da6ab76bf228375a9f96da5a5e9b38c" translate="yes" xml:space="preserve">
          <source>MnObject Events</source>
          <target state="translated">MnObject 이벤트</target>
        </trans-unit>
        <trans-unit id="14da9690e79c57784ceb6e68f955b20fac1624c9" translate="yes" xml:space="preserve">
          <source>MnObject's API</source>
          <target state="translated">MnObject의 API</target>
        </trans-unit>
        <trans-unit id="36eaf427f6b2141afc9f588d0de12122eba52be9" translate="yes" xml:space="preserve">
          <source>MnObjects have a &lt;code&gt;destroy&lt;/code&gt; method that unbind the events that are directly attached to the instance. &lt;code&gt;destroy&lt;/code&gt; returns the MnObject.</source>
          <target state="translated">MnObject에는 인스턴스에 직접 연결된 이벤트를 바인딩 해제 하는 &lt;code&gt;destroy&lt;/code&gt; 메소드가 있습니다. &lt;code&gt;destroy&lt;/code&gt; 는 MnObject를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e3d1ca66c41254171e26939298c91e4676ab6741" translate="yes" xml:space="preserve">
          <source>Model Events</source>
          <target state="translated">모델 이벤트</target>
        </trans-unit>
        <trans-unit id="04e9462c0ff02bb9032b92abd45881a3c7e15fb7" translate="yes" xml:space="preserve">
          <source>Modules</source>
          <target state="translated">Modules</target>
        </trans-unit>
        <trans-unit id="8fb241d183303ff35154aab94f8af7878f9cfcd9" translate="yes" xml:space="preserve">
          <source>More information on &lt;code&gt;triggerMethod&lt;/code&gt; can be found in the &lt;a href=&quot;events#triggermethod&quot;&gt;Marionette events documentation&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;triggerMethod&lt;/code&gt; 에 대한 자세한 내용 은 &lt;a href=&quot;events#triggermethod&quot;&gt;Marionette events documentation&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2a2f77b5f8e3e12703dd5202d9fd948317fbe72f" translate="yes" xml:space="preserve">
          <source>NPM and Browserify</source>
          <target state="translated">NPM 및 Browserify</target>
        </trans-unit>
        <trans-unit id="18f36ee5638fcda58c9e6fb48670e2061566cf0f" translate="yes" xml:space="preserve">
          <source>NPM and Brunch</source>
          <target state="translated">NPM과 브런치</target>
        </trans-unit>
        <trans-unit id="d9f71a6cda438aa50be669d38b87431c33b3d655" translate="yes" xml:space="preserve">
          <source>NPM and Webpack</source>
          <target state="translated">NPM 및 웹팩</target>
        </trans-unit>
        <trans-unit id="af90e40f999b64c4df76b231d15d185f37d4d207" translate="yes" xml:space="preserve">
          <source>Nested Behaviors act as if they were direct Behaviors of the parent &lt;code&gt;Behavior&lt;/code&gt;'s view instance.</source>
          <target state="translated">중첩 된 동작은 마치 부모 &lt;code&gt;Behavior&lt;/code&gt; 보기 인스턴스의 직접적인 동작 인 것처럼 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="6aa68b0949c839cadfee84202ed21ef0b2881c90" translate="yes" xml:space="preserve">
          <source>Nesting Behaviors</source>
          <target state="translated">중첩 동작</target>
        </trans-unit>
        <trans-unit id="af794ce3e0697f539baabc976758bc246a0e2511" translate="yes" xml:space="preserve">
          <source>NextCollectionView was renamed to CollectionView</source>
          <target state="translated">NextCollectionView의 이름이 CollectionView로 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="ca17d41584abe3e6adf54bd48ff0bbb6cd4ad6c7" translate="yes" xml:space="preserve">
          <source>Non-Marionette Views</source>
          <target state="translated">비 Marionette보기</target>
        </trans-unit>
        <trans-unit id="5a26a8d60c81292687f447a9caf8784b701d1418" translate="yes" xml:space="preserve">
          <source>Notably if there are no &lt;code&gt;children&lt;/code&gt; when rendering, the view will still be considered rendered. This is true whether or not an &lt;a href=&quot;marionette.collectionview#collectionviews-emptyview&quot;&gt;&lt;code&gt;emptyView&lt;/code&gt;&lt;/a&gt; is rendered. So it is possible for a &lt;code&gt;CollectionView&lt;/code&gt; to be &quot;rendered&quot; but the &lt;code&gt;el&lt;/code&gt; to only be an empty tag. Also note that just like &lt;code&gt;View&lt;/code&gt; a &lt;code&gt;CollectionView&lt;/code&gt; may have a &lt;code&gt;template&lt;/code&gt; which is rendered and attached to the &lt;code&gt;el&lt;/code&gt; during the &lt;code&gt;render&lt;/code&gt;, but the template rendering itself has no bearing on the status of the &lt;code&gt;CollectionView&lt;/code&gt;.</source>
          <target state="translated">특히 렌더링 할 때 &lt;code&gt;children&lt;/code&gt; 이없는 경우에도 뷰는 렌더링 된 것으로 간주됩니다. &lt;a href=&quot;marionette.collectionview#collectionviews-emptyview&quot;&gt; &lt;code&gt;emptyView&lt;/code&gt; 의&lt;/a&gt; 렌더링 여부에 관계없이 적용 됩니다. 따라서 &lt;code&gt;CollectionView&lt;/code&gt; 가 &quot;렌더링&quot;될 수 있지만 &lt;code&gt;el&lt;/code&gt; 은 빈 태그 일 수 있습니다. 또한 그와 마찬가지로 유의 &lt;code&gt;View&lt;/code&gt; &lt;code&gt;CollectionView&lt;/code&gt; 가 있을 수 있습니다 &lt;code&gt;template&lt;/code&gt; 받는 렌더링 및 부착 &lt;code&gt;el&lt;/code&gt; 동안 &lt;code&gt;render&lt;/code&gt; 하지만, 그 자체를 렌더링 템플릿이의 상태는 아무런 관계가 없습니다 &lt;code&gt;CollectionView&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="041cccaf494ef02bbcc5c22671a5e86761c27723" translate="yes" xml:space="preserve">
          <source>Note that the event handler can be defined as a method like used for &lt;code&gt;'left:building'&lt;/code&gt; event or inline like used in &lt;code&gt;'enter:building'&lt;/code&gt;.</source>
          <target state="translated">이벤트 핸들러는 &lt;code&gt;'left:building'&lt;/code&gt; 이벤트에 사용 된 것과 같은 방법으로 정의 되거나 &lt;code&gt;'enter:building'&lt;/code&gt; 에 사용 된 것과 같은 인라인 으로 정의 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fcff587ace918c0786c9c6a65cf0ad598c26a9bd" translate="yes" xml:space="preserve">
          <source>Note: If &lt;code&gt;view.showChildView(region, subView)&lt;/code&gt; is invoked before the &lt;code&gt;view&lt;/code&gt; has been rendered, it will automatically render the &lt;code&gt;view&lt;/code&gt; so the region's &lt;code&gt;el&lt;/code&gt; exists in the DOM.</source>
          <target state="translated">참고 : &lt;code&gt;view&lt;/code&gt; 가 렌더링 되기 전에 &lt;code&gt;view.showChildView(region, subView)&lt;/code&gt; 가 호출 되면 해당 영역의 &lt;code&gt;el&lt;/code&gt; 이 DOM에 존재 하도록 &lt;code&gt;view&lt;/code&gt; 를 자동으로 렌더링합니다 .</target>
        </trans-unit>
        <trans-unit id="914d36f99c86b0015175e028da11aef545691b94" translate="yes" xml:space="preserve">
          <source>Now we can access &lt;code&gt;thirdRegion&lt;/code&gt; as we would the others.</source>
          <target state="translated">이제 다른 사람들과 마찬가지로 &lt;code&gt;thirdRegion&lt;/code&gt; 에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c5a6ac8afdb54c05a610aa1c4c5c300ed568510a" translate="yes" xml:space="preserve">
          <source>Now, whenever the model attached to this View is unable to sync with the server, we can display an error message to the user.</source>
          <target state="translated">이제이 뷰에 연결된 모델이 서버와 동기화 될 수 없을 때마다 사용자에게 오류 메시지를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="902d739f813852ca3b93785aadf1bf2a1c2501c9" translate="yes" xml:space="preserve">
          <source>On a &lt;code&gt;View&lt;/code&gt; the &lt;code&gt;regions&lt;/code&gt; attribute can also be a &lt;a href=&quot;basics#functions-returning-values&quot;&gt;function returning an object&lt;/a&gt;:</source>
          <target state="translated">A의 &lt;code&gt;View&lt;/code&gt; &lt;code&gt;regions&lt;/code&gt; 특성도 할 수 있습니다 &lt;a href=&quot;basics#functions-returning-values&quot;&gt;개체를 반환 기능&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="f4fdbaa4bd753addb3e80aed523b45c164fb56ad" translate="yes" xml:space="preserve">
          <source>Once a region is defined, you can call its &lt;code&gt;show&lt;/code&gt; method to display the view:</source>
          <target state="translated">영역이 정의되면 &lt;code&gt;show&lt;/code&gt; 메소드를 호출 하여보기를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="547c0e91a5ee156f8bd8f06d6856ff34541de537" translate="yes" xml:space="preserve">
          <source>Once you have determined the best strategy for removing your unmanaged child views, adding them is best handled in the &lt;a href=&quot;events.class#renderchildren-and-beforerenderchildren-events&quot;&gt;&lt;code&gt;render:children&lt;/code&gt; event&lt;/a&gt;. Additionally adding a child with &lt;code&gt;addChildView&lt;/code&gt; will itself cause these events to occur, so to prevent stack overflows, it is best to use a flag to guard the adds and to insert a new view at a specified index.</source>
          <target state="translated">관리되지 않는 자식보기를 제거하기위한 최선의 전략을 결정한 후에는 추가하는 것이 &lt;a href=&quot;events.class#renderchildren-and-beforerenderchildren-events&quot;&gt; &lt;code&gt;render:children&lt;/code&gt; 이벤트&lt;/a&gt; 에서 가장 잘 처리됩니다 . 또한 &lt;code&gt;addChildView&lt;/code&gt; 를 사용 하여 자식을 추가 하면 이러한 이벤트가 발생하므로 스택 오버플로를 방지하려면 플래그를 사용하여 추가를 보호하고 지정된 인덱스에 새 뷰를 삽입하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="51ea71c885b02ec9ca12a1c3a07ff9d5701d5c20" translate="yes" xml:space="preserve">
          <source>Once you have your application configured, you can kick everything off by calling: &lt;code&gt;myApp.start(options)&lt;/code&gt;.</source>
          <target state="translated">애플리케이션이 구성되면 &lt;code&gt;myApp.start(options)&lt;/code&gt; 호출하여 모든 것을 시작할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="af91c9a650e5f91a122075ce340dd818414cae16" translate="yes" xml:space="preserve">
          <source>One additional difference is the &lt;code&gt;Application&lt;/code&gt;&lt;a href=&quot;marionette.mnobject#unique-client-id&quot;&gt;&lt;code&gt;cidPrefix&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;mna&lt;/code&gt;.</source>
          <target state="translated">한 가지 다른 차이점은 &lt;code&gt;Application&lt;/code&gt; &lt;a href=&quot;marionette.mnobject#unique-client-id&quot;&gt; &lt;code&gt;cidPrefix&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;mna&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="72ddd113b0e1b1cea9f4587211c1cea52b909047" translate="yes" xml:space="preserve">
          <source>One of the required changes is to explicitly define the &lt;code&gt;childView&lt;/code&gt; when implementing a recursive (tree) view</source>
          <target state="translated">필요한 변경 중 하나는 재귀 (트리)보기를 구현할 때 &lt;code&gt;childView&lt;/code&gt; 를 명시 적으로 정의하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="eccab90556cd700ba64085d02f10be9f95b54cce" translate="yes" xml:space="preserve">
          <source>Options set here will override options set on class definition. So, for example:</source>
          <target state="translated">여기에 설정된 옵션은 클래스 정의에 설정된 옵션보다 우선합니다. 예를 들어,</target>
        </trans-unit>
        <trans-unit id="e7084c2de8a0feaafdfe6e7fa02921a005e13d34" translate="yes" xml:space="preserve">
          <source>Or it can be DOM created in memory:</source>
          <target state="translated">또는 메모리에서 생성 된 DOM 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f0b889eb1cc52342cb2287dfb59111e94055884" translate="yes" xml:space="preserve">
          <source>Organizing Your View</source>
          <target state="translated">보기 구성</target>
        </trans-unit>
        <trans-unit id="c2388fd25e83c524fa847cd6e068ab74d00f0708" translate="yes" xml:space="preserve">
          <source>Override the region's &lt;code&gt;attachHtml&lt;/code&gt; method to change how the view is attached to the DOM (when not using &lt;code&gt;replaceElement: true&lt;/code&gt;. This method receives one parameter - the view to show.</source>
          <target state="translated">영역의 &lt;code&gt;attachHtml&lt;/code&gt; 메소드를 대체하여 뷰가 DOM에 첨부되는 방법을 변경하십시오 ( &lt;code&gt;replaceElement: true&lt;/code&gt; 사용하지 않는 경우) .이 메소드는 하나의 매개 변수 (표시 할 뷰)를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="7fa7a6e064d69811cca9c417033b83743f4cb6a0" translate="yes" xml:space="preserve">
          <source>Override the region's &lt;code&gt;removeView&lt;/code&gt; method to change how and when the view is destroyed / removed from the DOM. This method receives one parameter - the view to remove.</source>
          <target state="translated">영역의 &lt;code&gt;removeView&lt;/code&gt; 메소드를 대체하여 보기가 DOM에서 삭제 / 제거되는 방법과시기를 변경하십시오. 이 메소드는 제거 할 하나의 매개 변수를받습니다.</target>
        </trans-unit>
        <trans-unit id="0f93b2dd9b6a9d175c48e417d06d3c453ce47461" translate="yes" xml:space="preserve">
          <source>Override this function to programatically decide which &lt;code&gt;viewFilter&lt;/code&gt; to use when &lt;code&gt;filter&lt;/code&gt; is called.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 를 호출 할 때 사용할 &lt;code&gt;viewFilter&lt;/code&gt; 를 프로그래밍 방식으로 결정하려면이 함수를 재정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="1e58ec13ff55889b0a9b54ceff375300fc465ed7" translate="yes" xml:space="preserve">
          <source>Override this method to determine which &lt;code&gt;viewComparator&lt;/code&gt; to use.</source>
          <target state="translated">사용할 &lt;code&gt;viewComparator&lt;/code&gt; 를 판별하려면이 메소드를 대체하십시오 .</target>
        </trans-unit>
        <trans-unit id="d8472747905c544405ee3032e2415393bf302406" translate="yes" xml:space="preserve">
          <source>Override this method when you need a more complicated build, but use &lt;a href=&quot;#collectionviews-childview&quot;&gt;&lt;code&gt;childView&lt;/code&gt;&lt;/a&gt; if you need to determine &lt;em&gt;which&lt;/em&gt; View class to instantiate.</source>
          <target state="translated">보다 복잡한 빌드가 필요할 때는이 메소드를 재정의하지만 인스턴스화 &lt;em&gt;할&lt;/em&gt; View 클래스를 결정해야하는 경우 &lt;a href=&quot;#collectionviews-childview&quot;&gt; &lt;code&gt;childView&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2ad992d48898cbb9bdc643d8a7ef16a1098c8edc" translate="yes" xml:space="preserve">
          <source>Partially-rendered Views</source>
          <target state="translated">부분적으로 렌더링 된 뷰</target>
        </trans-unit>
        <trans-unit id="7058ab59d41954e06b1904ff2d24503d8fffcf96" translate="yes" xml:space="preserve">
          <source>Passing Data to the &lt;code&gt;childView&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;childView&lt;/code&gt; 에 데이터 전달</target>
        </trans-unit>
        <trans-unit id="c2491bcac7e652c24901ce06848fef4baaf6f2ff" translate="yes" xml:space="preserve">
          <source>Passing Data to the &lt;code&gt;emptyView&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;emptyView&lt;/code&gt; 에 데이터 전달</target>
        </trans-unit>
        <trans-unit id="153d652599e5c4725c4e6b68943584ac2e11d4a6" translate="yes" xml:space="preserve">
          <source>Prerendered Content</source>
          <target state="translated">미리 렌더링 된 컨텐츠</target>
        </trans-unit>
        <trans-unit id="dbc97c4c64ee3db99ef5c8467660d32a27ee3c20" translate="yes" xml:space="preserve">
          <source>Preserving Existing Views</source>
          <target state="translated">기존 뷰 유지</target>
        </trans-unit>
        <trans-unit id="29bdc65e77b04c27a078cba6e9319016a91b014a" translate="yes" xml:space="preserve">
          <source>Previous to Marionette v4 the default renderer was the &lt;code&gt;TemplateCache&lt;/code&gt;. This renderer has been extracted to a separate library: &lt;a href=&quot;https://github.com/marionettejs/marionette.templatecache&quot;&gt;https://github.com/marionettejs/marionette.templatecache&lt;/a&gt; and can be used with v4.</source>
          <target state="translated">Marionette v4 이전에는 기본 렌더러가 &lt;code&gt;TemplateCache&lt;/code&gt; 였습니다. 이 렌더러는 별도의 라이브러리 ( &lt;a href=&quot;https://github.com/marionettejs/marionette.templatecache&quot;&gt;https://github.com/marionettejs/marionette.templatecache)&lt;/a&gt; 로 추출 되었으며 v4와 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1486638238d8e23c9e9c4cb54fe67252e70e0f50" translate="yes" xml:space="preserve">
          <source>Previously bundled router. Extends &lt;a href=&quot;http://backbonejs.org/#Router&quot;&gt;backbone.router&lt;/a&gt; and is helpful for breaking a large amount of routes on a single backbone.router instance into smaller more managable approuters.</source>
          <target state="translated">이전에 번들 된 라우터. &lt;a href=&quot;http://backbonejs.org/#Router&quot;&gt;backbone.router를&lt;/a&gt; 확장 하고 단일 backbone.router 인스턴스에서 많은 양의 라우트를보다 관리하기 쉬운 작은 approuter로 나누는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="ab8aa4212a65f8fdf651df156bb09a284da68c98" translate="yes" xml:space="preserve">
          <source>Provide a single defined reference to commonly used UI elements</source>
          <target state="translated">일반적으로 사용되는 UI 요소에 대한 단일 정의 참조 제공</target>
        </trans-unit>
        <trans-unit id="11def34e7b077cee8d7872adc8a0388232257077" translate="yes" xml:space="preserve">
          <source>Providing Your Own DOM API</source>
          <target state="translated">자신 만의 DOM API 제공</target>
        </trans-unit>
        <trans-unit id="36c91b920284804b13c77cb2545fc8a05bd67d77" translate="yes" xml:space="preserve">
          <source>Proxied Events</source>
          <target state="translated">프록시 이벤트</target>
        </trans-unit>
        <trans-unit id="72dc3c004a7828f7c0b62855a89bcf466ac3a7b4" translate="yes" xml:space="preserve">
          <source>Proxy Handlers</source>
          <target state="translated">프록시 처리기</target>
        </trans-unit>
        <trans-unit id="d0f228dd4fe749401ce6f459662fb26fa05adea0" translate="yes" xml:space="preserve">
          <source>Query from only the view's template and not the children</source>
          <target state="translated">자식이 아닌 뷰의 템플릿에서만 쿼리</target>
        </trans-unit>
        <trans-unit id="b7e4ee8eb5469ec5f94043e4688d5d020547bff7" translate="yes" xml:space="preserve">
          <source>Quick start using NPM and Browserify</source>
          <target state="translated">NPM 및 Browserify를 사용한 빠른 시작</target>
        </trans-unit>
        <trans-unit id="568efa913442536347bc9eb041f2d556b037cbfc" translate="yes" xml:space="preserve">
          <source>Quick start using NPM and Brunch</source>
          <target state="translated">NPM 및 Brunch를 사용한 빠른 시작</target>
        </trans-unit>
        <trans-unit id="341b5639a6603b1857ced5dac9290e0dd6aaf4ef" translate="yes" xml:space="preserve">
          <source>Quick start using NPM and Webpack</source>
          <target state="translated">NPM 및 Webpack을 사용한 빠른 시작</target>
        </trans-unit>
        <trans-unit id="d01beedd449f8903c5e8f7a89ff6b7b73e72c27d" translate="yes" xml:space="preserve">
          <source>Radio API</source>
          <target state="translated">라디오 API</target>
        </trans-unit>
        <trans-unit id="97b50b278d0187199292622b3684face9ee6561d" translate="yes" xml:space="preserve">
          <source>Radio Concepts</source>
          <target state="translated">라디오 개념</target>
        </trans-unit>
        <trans-unit id="08ab5d98a72ecd5db950d7db70cd412468381015" translate="yes" xml:space="preserve">
          <source>Radio takes these two constructs and adds the channel implementation - providing namespaces for events and requests. In short, Radio is a global, namespaced, message bus system designed to allow two otherwise unrelated objects to communicate and share information.</source>
          <target state="translated">라디오는이 두 가지 구성을 취하고 채널 구현을 추가하여 이벤트 및 요청에 대한 네임 스페이스를 제공합니다. 요컨대 Radio는 네임 스페이스가없는 글로벌 메시지 버스 시스템으로, 관련이없는 두 개의 객체가 정보를 통신하고 공유 할 수 있도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="41540d3b705cb2e72d5e8e80c82d37c05d90820e" translate="yes" xml:space="preserve">
          <source>Re-rendering children of a view with preexisting DOM.</source>
          <target state="translated">기존 DOM으로 뷰의 자식을 다시 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="60200c3036ab87254d482e33aabd13ed8c4e078e" translate="yes" xml:space="preserve">
          <source>Re-rendering the CollectionView</source>
          <target state="translated">CollectionView 다시 렌더링</target>
        </trans-unit>
        <trans-unit id="542dbe673e06832aeae118830437270c07e8c4f6" translate="yes" xml:space="preserve">
          <source>Read More:</source>
          <target state="translated">더 읽기 :</target>
        </trans-unit>
        <trans-unit id="7671c49dca15d028f81ca620471eea08dc8eefb9" translate="yes" xml:space="preserve">
          <source>Receives a hash of event names and functions and/or function names, and returns the same hash with the function names replaced with the function references themselves.</source>
          <target state="translated">이벤트 이름 및 함수 및 / 또는 함수 이름의 해시를 수신하고 함수 이름이 함수 참조 자체로 대체 된 동일한 해시를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e21f9a9460b5c4b0ed3f9091d60dee3d14e6dee4" translate="yes" xml:space="preserve">
          <source>Recommended changes (deprecations)</source>
          <target state="translated">권장 변경 사항 (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="22425910e396398a61b05dd096ff35c1447c6cc4" translate="yes" xml:space="preserve">
          <source>Referencing UI in &lt;code&gt;events&lt;/code&gt; and &lt;code&gt;triggers&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;events&lt;/code&gt; 및 &lt;code&gt;triggers&lt;/code&gt; 에서 UI 참조</target>
        </trans-unit>
        <trans-unit id="e14cc2b0a017a24fe252aa1cd6ad0c0d4a7d1ded" translate="yes" xml:space="preserve">
          <source>Referencing UI in &lt;code&gt;regions&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;regions&lt;/code&gt; 에서 UI 참조</target>
        </trans-unit>
        <trans-unit id="e6651f1a3135c21db0401cc7f1e54674d7ad527c" translate="yes" xml:space="preserve">
          <source>Reflects when a view's template is being rendered into its &lt;code&gt;el&lt;/code&gt;.</source>
          <target state="translated">뷰의 템플릿이 &lt;code&gt;el&lt;/code&gt; 로 렌더링 될 때 반영합니다 .</target>
        </trans-unit>
        <trans-unit id="0f217179940c6d89f5cb2c7002a58d91ab7286c1" translate="yes" xml:space="preserve">
          <source>Region</source>
          <target state="translated">Region</target>
        </trans-unit>
        <trans-unit id="98f483f39baa9df28acd7a062f3cc6877e49b0b5" translate="yes" xml:space="preserve">
          <source>Region &lt;code&gt;preventDestroy&lt;/code&gt; option was removed from &lt;code&gt;show&lt;/code&gt; and &lt;code&gt;empty&lt;/code&gt;</source>
          <target state="translated">영역 &lt;code&gt;preventDestroy&lt;/code&gt; 옵션이 &lt;code&gt;show&lt;/code&gt; 에서 제거 되고 &lt;code&gt;empty&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="48ef897893b808d44e0af8cb4709060519997022" translate="yes" xml:space="preserve">
          <source>Region Availability</source>
          <target state="translated">지역 가용성</target>
        </trans-unit>
        <trans-unit id="01e885ef8659a870f97731adbdb475e9b89345d9" translate="yes" xml:space="preserve">
          <source>Region Events</source>
          <target state="translated">지역 이벤트</target>
        </trans-unit>
        <trans-unit id="1d153e198dc2e27350fe6c7446b8ed5981e190d4" translate="yes" xml:space="preserve">
          <source>Region Methods</source>
          <target state="translated">지역 방법</target>
        </trans-unit>
        <trans-unit id="a86b0c82a8afc02bd19323a54ba42b34004090af" translate="yes" xml:space="preserve">
          <source>Region no longer supports the &lt;code&gt;selector&lt;/code&gt; property</source>
          <target state="translated">지역이 더 이상 &lt;code&gt;selector&lt;/code&gt; 속성을 지원하지 않습니다</target>
        </trans-unit>
        <trans-unit id="039711232507cd9753ddba093da2350b27e67dca" translate="yes" xml:space="preserve">
          <source>Regions</source>
          <target state="translated">Regions</target>
        </trans-unit>
        <trans-unit id="94dd3ae2df6c6faf42784c7be8f7c3339ca5efa8" translate="yes" xml:space="preserve">
          <source>Regions are ideal for rendering application layouts by isolating concerns inside another view. This is especially useful for independently re-rendering chunks of your application without having to completely re-draw the entire screen every time some data is updated.</source>
          <target state="translated">영역은 다른보기 내에서 관심사를 격리하여 응용 프로그램 레이아웃을 렌더링하는 데 이상적입니다. 이는 일부 데이터가 업데이트 될 때마다 전체 화면을 완전히 다시 그릴 필요없이 응용 프로그램 청크를 독립적으로 다시 렌더링하는 데 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7d2d4f6d3d81f2efcfdedb139523c42a13fbd71a" translate="yes" xml:space="preserve">
          <source>Regions can be added to a View at class definition, with &lt;a href=&quot;marionette.region#defining-regions&quot;&gt;&lt;code&gt;regions&lt;/code&gt;&lt;/a&gt;, or at runtime using &lt;a href=&quot;marionette.region#adding-regions&quot;&gt;&lt;code&gt;addRegion&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">클래스 정의, &lt;a href=&quot;marionette.region#defining-regions&quot;&gt; &lt;code&gt;regions&lt;/code&gt; &lt;/a&gt; 또는 런타임에 &lt;a href=&quot;marionette.region#adding-regions&quot;&gt; &lt;code&gt;addRegion&lt;/code&gt; 을&lt;/a&gt; 사용하여 View에 영역을 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="961c22589fb15c0a097616f494222947ce2f3875" translate="yes" xml:space="preserve">
          <source>Regions maintain the &lt;a href=&quot;view.lifecycle&quot;&gt;View's lifecycle&lt;/a&gt; while showing or emptying a view.</source>
          <target state="translated">영역은 &lt;a href=&quot;view.lifecycle&quot;&gt;보기&lt;/a&gt; 를 표시하거나 비우는 동안 보기의 수명주기 를 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="2d616df31ac9bb3b0a52efa48e7932f7e5f5d4ef" translate="yes" xml:space="preserve">
          <source>Regions provide consistent methods to manage, show and destroy views in your applications and views.</source>
          <target state="translated">리전은 응용 프로그램 및 뷰에서 뷰를 관리, 표시 및 삭제하는 일관된 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="77e5f5f190a980a15656a0fdea0ca948a3700242" translate="yes" xml:space="preserve">
          <source>Relects when the &lt;code&gt;el&lt;/code&gt; of a view is attached to the DOM. These events will not trigger when a view is re-rendered as the &lt;code&gt;el&lt;/code&gt; itself does not change.</source>
          <target state="translated">뷰 의 &lt;code&gt;el&lt;/code&gt; 이 DOM에 첨부 될 때 반영합니다. &lt;code&gt;el&lt;/code&gt; 자체가 변경되지 않으므로 뷰가 다시 렌더링 될 때 이러한 이벤트가 트리거 되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5802969de32b799d0fe378c1538026cfc4d6bb30" translate="yes" xml:space="preserve">
          <source>Relects when the &lt;code&gt;el&lt;/code&gt; of a view is detached from the DOM. These events will not trigger when a view is re-rendered as the &lt;code&gt;el&lt;/code&gt; itself does not change.</source>
          <target state="translated">뷰 &lt;code&gt;el&lt;/code&gt; 이 DOM에서 분리 될 때 반영됩니다 . &lt;code&gt;el&lt;/code&gt; 자체가 변경되지 않으므로 뷰가 다시 렌더링 될 때 이러한 이벤트가 트리거 되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0602958ee5c871dea8815d4d533440858551eb29" translate="yes" xml:space="preserve">
          <source>Relects when the &lt;em&gt;contents&lt;/em&gt; of a view's &lt;code&gt;el&lt;/code&gt; are about to change in the DOM. This event will fire when the view is about to be &lt;a href=&quot;#detach-and-beforedetach-events&quot;&gt;&lt;code&gt;detach&lt;/code&gt;ed&lt;/a&gt;. It will also fire before an attached view is re-rendered.</source>
          <target state="translated">뷰 &lt;code&gt;el&lt;/code&gt; 의 &lt;em&gt;내용&lt;/em&gt; 이 DOM에서 변경 될 때를 반영합니다. 이 이벤트는 뷰가 &lt;a href=&quot;#detach-and-beforedetach-events&quot;&gt; &lt;code&gt;detach&lt;/code&gt; &lt;/a&gt; 되려고 할 때 발생합니다 . 연결된 뷰를 다시 렌더링하기 전에 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="a4b1ce2d9de8ee01cf523e5fe92c3983aac35e29" translate="yes" xml:space="preserve">
          <source>Relects when the &lt;em&gt;contents&lt;/em&gt; of a view's &lt;code&gt;el&lt;/code&gt; change in the DOM. This event will fire when the view is first &lt;a href=&quot;#attach-and-beforeattach-events&quot;&gt;&lt;code&gt;attach&lt;/code&gt;ed&lt;/a&gt;. It will also fire if an attached view is re-rendered.</source>
          <target state="translated">뷰 &lt;code&gt;el&lt;/code&gt; 의 &lt;em&gt;내용&lt;/em&gt; 이 DOM에서 변경 될 때 반영합니다. 뷰가 처음 인 경우이 이벤트가 발생합니다 &lt;a href=&quot;#attach-and-beforeattach-events&quot;&gt; &lt;code&gt;attach&lt;/code&gt; &lt;/a&gt; 에드 . 연결된 뷰를 다시 렌더링하면 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="68799da45daba25eea2f9e839225128b1262f7b7" translate="yes" xml:space="preserve">
          <source>Remove &lt;code&gt;oldEl&lt;/code&gt; from the DOM and put &lt;code&gt;newEl&lt;/code&gt; in its place.</source>
          <target state="translated">DOM에서 &lt;code&gt;oldEl&lt;/code&gt; 를 제거 하고 대신 &lt;code&gt;newEl&lt;/code&gt; 를 넣 습니다.</target>
        </trans-unit>
        <trans-unit id="6af27904d6f146f64164cf7c81128eec08ea024c" translate="yes" xml:space="preserve">
          <source>Remove the inner contents of &lt;code&gt;el&lt;/code&gt; from the DOM while leaving &lt;code&gt;el&lt;/code&gt; itself in the DOM.</source>
          <target state="translated">&lt;code&gt;el&lt;/code&gt; 자체를 DOM에 그대로두고 DOM에서 &lt;code&gt;el&lt;/code&gt; 의 내부 내용을 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f26e440c525295d867a707928259bcc1ba5cc53" translate="yes" xml:space="preserve">
          <source>Removing &lt;code&gt;CollectionView.getChildView()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CollectionView.getChildView()&lt;/code&gt; 제거</target>
        </trans-unit>
        <trans-unit id="8544093dcd3014bc444dfa3451be05d357ab2638" translate="yes" xml:space="preserve">
          <source>Removing &lt;code&gt;CollectionView.getEmptyView()&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CollectionView.getEmptyView()&lt;/code&gt; 제거</target>
        </trans-unit>
        <trans-unit id="79f53dbe39fed8778c03b37c11a9e57cc11c7326" translate="yes" xml:space="preserve">
          <source>Removing &lt;code&gt;CompositeView&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CompositeView&lt;/code&gt; 제거</target>
        </trans-unit>
        <trans-unit id="65376fa84fea20b9905aec062ce28d304e32fec7" translate="yes" xml:space="preserve">
          <source>Removing &lt;code&gt;LayoutView&lt;/code&gt; and &lt;code&gt;ItemView&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;LayoutView&lt;/code&gt; 및 &lt;code&gt;ItemView&lt;/code&gt; 제거</target>
        </trans-unit>
        <trans-unit id="350e5001db0e190eb456118372cbc8c60135e8ab" translate="yes" xml:space="preserve">
          <source>Removing &lt;code&gt;view.region&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;view.region&lt;/code&gt; 제거</target>
        </trans-unit>
        <trans-unit id="43e4838ef950c708915c2c83fc45c50f2538185e" translate="yes" xml:space="preserve">
          <source>Removing Regions</source>
          <target state="translated">영역 제거</target>
        </trans-unit>
        <trans-unit id="78f8527c2151951b8522aa69cea8e08380920bde" translate="yes" xml:space="preserve">
          <source>Removing a Child View</source>
          <target state="translated">자식보기 제거</target>
        </trans-unit>
        <trans-unit id="263707b520e85260ad9bb0dfced3a9ce24dff127" translate="yes" xml:space="preserve">
          <source>Renderer class was removed</source>
          <target state="translated">렌더러 클래스가 제거되었습니다</target>
        </trans-unit>
        <trans-unit id="d9d716c21818cd23d6078b6f842a4ad102d10185" translate="yes" xml:space="preserve">
          <source>Rendering Children</source>
          <target state="translated">어린이 렌더링</target>
        </trans-unit>
        <trans-unit id="f1df91daa4fceae2d529bb558418be0990cad784" translate="yes" xml:space="preserve">
          <source>Rendering a CollectionView</source>
          <target state="translated">CollectionView 렌더링</target>
        </trans-unit>
        <trans-unit id="0985a0ecfabc2231124bd8de762617aaeafd5bd5" translate="yes" xml:space="preserve">
          <source>Rendering a Template</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44590de4fcd5adee6b488724832adb905dd4b600" translate="yes" xml:space="preserve">
          <source>Rendering a View</source>
          <target state="translated">뷰 렌더링</target>
        </trans-unit>
        <trans-unit id="8e71a58c2f9cd2225c6a3044504029f1faa321ac" translate="yes" xml:space="preserve">
          <source>Rendering child views is often best accomplish after the view render as typically the first render happens prior to the view entering the DOM. This helps to prevent unnecessary repaints and reflows by making the DOM insert at the highest possible view in the view tree.</source>
          <target state="translated">하위 뷰 렌더링은 일반적으로 뷰 렌더링이 DOM에 들어가기 전에 첫 번째 렌더링이 발생하는 것처럼 뷰 렌더링 후에 가장 잘 수행됩니다. 이를 통해 뷰 트리에서 가능한 한 가장 높은 뷰에 DOM 삽입을 만들어 불필요한 다시 그리기 및 리플 로우를 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f06fe9eec33bda870e83833c704b4ef0438e9b2e" translate="yes" xml:space="preserve">
          <source>Rendering the Template</source>
          <target state="translated">템플릿 렌더링</target>
        </trans-unit>
        <trans-unit id="70b0c2c210d483efed769ca3bccb7a8fad48fe3c" translate="yes" xml:space="preserve">
          <source>Rendering to DOM</source>
          <target state="translated">DOM으로 렌더링</target>
        </trans-unit>
        <trans-unit id="b4a738c5a740716c2c5d4fd66e282927c73c83df" translate="yes" xml:space="preserve">
          <source>Rendering to HTML</source>
          <target state="translated">HTML로 렌더링</target>
        </trans-unit>
        <trans-unit id="14f094bf825821ecf2fc377f5943848ecc17f1cb" translate="yes" xml:space="preserve">
          <source>Replace all instances of &lt;code&gt;onShow&lt;/code&gt;, &lt;code&gt;on('show')&lt;/code&gt;, &lt;code&gt;onBeforeShow&lt;/code&gt; and &lt;code&gt;on('before:show')&lt;/code&gt; to use the &lt;code&gt;render&lt;/code&gt; and &lt;code&gt;before:render&lt;/code&gt; events. This is the recommendation for Marionette 3 and ensures the DOM tree is built in-memory before modifying the DOM.</source>
          <target state="translated">&lt;code&gt;render&lt;/code&gt; 및 &lt;code&gt;before:render&lt;/code&gt; 이벤트 를 사용하려면 &lt;code&gt;onShow&lt;/code&gt; , &lt;code&gt;on('show')&lt;/code&gt; , &lt;code&gt;onBeforeShow&lt;/code&gt; 및 &lt;code&gt;on('before:show')&lt;/code&gt; 인스턴스를 모두 바꿉니다 . 이것은 Marionette 3에 대한 권장 사항이며 DOM을 수정하기 전에 DOM 트리가 메모리에 내장되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="89ffb05302040f0afc9a558ee07e79d0b7fed084" translate="yes" xml:space="preserve">
          <source>Replace all instances of &lt;code&gt;show&lt;/code&gt; and &lt;code&gt;before:show&lt;/code&gt; with &lt;code&gt;render&lt;/code&gt; and &lt;code&gt;before:render&lt;/code&gt;. If you want the view to be visible in the DOM, then listen to the &lt;code&gt;dom:refresh&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;show&lt;/code&gt; 및 &lt;code&gt;before:show&lt;/code&gt; 의 모든 인스턴스 를 &lt;code&gt;render&lt;/code&gt; 및 &lt;code&gt;before:render&lt;/code&gt; 로 바꾸십시오 . 뷰를 DOM에 표시하려면 &lt;code&gt;dom:refresh&lt;/code&gt; 이벤트 를 수신하십시오 .</target>
        </trans-unit>
        <trans-unit id="11d389436d7de056a782442ee4d4cf3a7d1b8d26" translate="yes" xml:space="preserve">
          <source>Replace the contents of &lt;code&gt;el&lt;/code&gt; with the HTML string of &lt;code&gt;html&lt;/code&gt;. Unlike other DOM functions, this only takes a literal string for its second argument.</source>
          <target state="translated">&lt;code&gt;el&lt;/code&gt; 의 내용 을 &lt;code&gt;html&lt;/code&gt; 의 HTML 문자열로 바꿉니다 . 다른 DOM 함수와 달리 두 번째 인수에는 리터럴 문자열 만 사용합니다.</target>
        </trans-unit>
        <trans-unit id="42f513159c1dfd824eee90d0d911ecdf2e2c2eb3" translate="yes" xml:space="preserve">
          <source>Replying to Requests</source>
          <target state="translated">요청에 응답</target>
        </trans-unit>
        <trans-unit id="3199869e2e13f494a856afb59ca293c33fff6a2c" translate="yes" xml:space="preserve">
          <source>Replying to requests</source>
          <target state="translated">요청에 응답</target>
        </trans-unit>
        <trans-unit id="4aed03cac49d5e43da4e855a967286931a4d621a" translate="yes" xml:space="preserve">
          <source>Request</source>
          <target state="translated">Request</target>
        </trans-unit>
        <trans-unit id="32fdc12d389bc62731e172e1e869ea6c29f32edc" translate="yes" xml:space="preserve">
          <source>Requests - a global request/reply implementation</source>
          <target state="translated">요청-글로벌 요청 / 응답 구현</target>
        </trans-unit>
        <trans-unit id="7f190ea2c3185822da988996e7daf8a639a52e4e" translate="yes" xml:space="preserve">
          <source>Required changes</source>
          <target state="translated">필요한 변경</target>
        </trans-unit>
        <trans-unit id="64ed21ce10d6906172af8bff035c3bf0ecd63364" translate="yes" xml:space="preserve">
          <source>Retrieve an object's attribute either directly from the object, or from the object's &lt;code&gt;this.options&lt;/code&gt;.</source>
          <target state="translated">객체에서 직접 또는 객체의 &lt;code&gt;this.options&lt;/code&gt; 에서 객체의 속성을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="42fdb81e0a61eb41dd6a459e4aa9358698c396d7" translate="yes" xml:space="preserve">
          <source>Return the attached &lt;a href=&quot;marionette.region&quot;&gt;region object&lt;/a&gt; for the Application.</source>
          <target state="translated">응용 프로그램 의 첨부 된 &lt;a href=&quot;marionette.region&quot;&gt;region 오브젝트&lt;/a&gt; 를 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="f280bb70ac9dcb690bd0839d63e4633e7224ea69" translate="yes" xml:space="preserve">
          <source>Return the view currently being displayed in the Application's attached &lt;code&gt;region&lt;/code&gt;. If the Application is not currently displaying a view, this method returns &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램의 첨부 된 &lt;code&gt;region&lt;/code&gt; 에 현재 표시된보기를 리턴하십시오 . 어플리케이션이 현재 뷰를 표시하고 있지 않은 경우,이 메소드는 &lt;code&gt;undefined&lt;/code&gt; 를 돌려줍니다 .</target>
        </trans-unit>
        <trans-unit id="859dfe1748b1ddba0ca91e7ca5c9394c36ae7d67" translate="yes" xml:space="preserve">
          <source>Returning Values from Reply</source>
          <target state="translated">회신에서 값 반환</target>
        </trans-unit>
        <trans-unit id="eb26459129a843901ac279990c769753c11f44c0" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating if the &lt;code&gt;el&lt;/code&gt; has child nodes.</source>
          <target state="translated">&lt;code&gt;el&lt;/code&gt; 에 자식 노드가 있는지 여부를 나타내는 부울을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="7ebee0da1338f7c57dca183adbaf5a48293550cd" translate="yes" xml:space="preserve">
          <source>Returns a boolean value reflecting if the view has been destroyed.</source>
          <target state="translated">뷰가 파괴 된 경우를 반영하는 부울 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="01bda26a3d9711f341a6ff8a818f5978b4a6c41e" translate="yes" xml:space="preserve">
          <source>Returns a boolean value reflecting if the view is considered attached to the DOM.</source>
          <target state="translated">뷰가 DOM에 첨부 된 것으로 간주되면 부울 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f271503227e21a7dc369cbf90a36684e0b6a971d" translate="yes" xml:space="preserve">
          <source>Returns a boolean value reflecting if the view is considered rendered.</source>
          <target state="translated">뷰가 렌더링 된 것으로 간주되면 부울 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="530ff7378c6edd313b01d12e809b5b9835cf5cdb" translate="yes" xml:space="preserve">
          <source>Returns a new HTML DOM node instance. The resulting node can be passed into the other DOM functions.</source>
          <target state="translated">새로운 HTML DOM 노드 인스턴스를 반환합니다. 결과 노드는 다른 DOM 함수로 전달 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7a617f4149a66c40ef719a3c7133f2925eca0b7" translate="yes" xml:space="preserve">
          <source>Returns true if the el contains the node childEl</source>
          <target state="translated">el에 노드 childEl가 포함되어 있으면 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d68856f7c1cdde7c7e2db0bb65069bf3f9d96b11" translate="yes" xml:space="preserve">
          <source>Routing in Marionette</source>
          <target state="translated">마리오네트에서의 여정</target>
        </trans-unit>
        <trans-unit id="da944e92be2f8e6bf8d336d1aca983f5ce7600c5" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;marionette.collectionview#rendering-collectionviews&quot;&gt;&lt;code&gt;CollectionView&lt;/code&gt;&lt;/a&gt; for detail on upgrading to Marionette 3. This technique works in both Marionette 2.x and Marionette 3.</source>
          <target state="translated">Marionette 3으로 업그레이드하는 방법에 대한 자세한 내용은 &lt;a href=&quot;marionette.collectionview#rendering-collectionviews&quot;&gt; &lt;code&gt;CollectionView&lt;/code&gt; &lt;/a&gt; 를 참조하십시오. 이 기술은 Marionette 2.x 및 Marionette 3에서 모두 작동합니다.</target>
        </trans-unit>
        <trans-unit id="67373bb92cd7ecbf243edb9d60ad6f00f86a6052" translate="yes" xml:space="preserve">
          <source>See Also</source>
          <target state="translated">또한보십시오</target>
        </trans-unit>
        <trans-unit id="1f41984f5d81e6c05beab74f1a3ff1a584bf5e11" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;marionette.view#laying-out-views---regions&quot;&gt;laying out views&lt;/a&gt; for an introduction in managing regions throughout your application.</source>
          <target state="translated">응용 프로그램 전체의 리전 관리에 대한 소개를 보려면 &lt;a href=&quot;marionette.view#laying-out-views---regions&quot;&gt;뷰&lt;/a&gt; 를 배치 하는 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b66668550abaa19b66e5ed208ae25d836ce74110" translate="yes" xml:space="preserve">
          <source>See the documentation for &lt;a href=&quot;marionette.view#laying-out-views---regions&quot;&gt;views&lt;/a&gt; to learn more about how to manage regions in Marionette 3.</source>
          <target state="translated">Marionette 3에서 리전을 관리하는 방법에 대한 자세한 내용은 &lt;a href=&quot;marionette.view#laying-out-views---regions&quot;&gt;뷰&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a61b3afb6583f868531ae0e51f7d372b17e6a87a" translate="yes" xml:space="preserve">
          <source>Selections is a simple MnObject that manages a selection of things. Because Selections extends from MnObject, it gets &lt;code&gt;initialize&lt;/code&gt; and &lt;code&gt;Events&lt;/code&gt; for free.</source>
          <target state="translated">선택은 선택 항목을 관리하는 간단한 MnObject입니다. 선택은 MnObject에서 확장하기 때문에, 그것을 가져 &lt;code&gt;initialize&lt;/code&gt; 및 &lt;code&gt;Events&lt;/code&gt; 무료.</target>
        </trans-unit>
        <trans-unit id="73b6cb18178231276391f4d0402077f5baf4ad36" translate="yes" xml:space="preserve">
          <source>Self Managed &lt;code&gt;children&lt;/code&gt;</source>
          <target state="translated">자기 관리 &lt;code&gt;children&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dac42163cba3dcc0c492844fc9e9673189f7ac47" translate="yes" xml:space="preserve">
          <source>Serializing Data</source>
          <target state="translated">데이터 직렬화</target>
        </trans-unit>
        <trans-unit id="cbd7df8af6f55977852795acdcfd1e3b0ea1382f" translate="yes" xml:space="preserve">
          <source>Serializing a Collection</source>
          <target state="translated">컬렉션 직렬화</target>
        </trans-unit>
        <trans-unit id="40c06c005f0fe89bf08b3178168d2d05d23ff207" translate="yes" xml:space="preserve">
          <source>Serializing a Model</source>
          <target state="translated">모델 직렬화</target>
        </trans-unit>
        <trans-unit id="677fafc7f5aa9b21ae7bd76f5e5005ad012c9a35" translate="yes" xml:space="preserve">
          <source>Serializing with a &lt;code&gt;CollectionView&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 로 직렬화</target>
        </trans-unit>
        <trans-unit id="b5184dbd7948ab07df543eaf4abab79792549c33" translate="yes" xml:space="preserve">
          <source>Set How View's &lt;code&gt;el&lt;/code&gt; Is Attached</source>
          <target state="translated">뷰 &lt;code&gt;el&lt;/code&gt; 이 부착되는 방식 설정</target>
        </trans-unit>
        <trans-unit id="e801984e23022daa6c9cddb3f1eabf1b6c07c09c" translate="yes" xml:space="preserve">
          <source>Set How View's &lt;code&gt;el&lt;/code&gt; Is Attached and Detached</source>
          <target state="translated">View의 &lt;code&gt;el&lt;/code&gt; 가 연결 및 분리되는 방법 설정</target>
        </trans-unit>
        <trans-unit id="3d66080c1492aab7fc0971fbb8ab25b75e9480cf" translate="yes" xml:space="preserve">
          <source>Setting Options</source>
          <target state="translated">설정 옵션</target>
        </trans-unit>
        <trans-unit id="28175b9f9fd89ccb44bf46f8e39bd7d3847e9e30" translate="yes" xml:space="preserve">
          <source>Setting a Feature Flag</source>
          <target state="translated">기능 플래그 설정</target>
        </trans-unit>
        <trans-unit id="f15709bf7cde63fa19ad9601a600a2870236e558" translate="yes" xml:space="preserve">
          <source>Setting a View Template</source>
          <target state="translated">뷰 템플릿 설정</target>
        </trans-unit>
        <trans-unit id="d992e0bd965da877b43c47efa78aafbeaabd9114" translate="yes" xml:space="preserve">
          <source>Showing a Child View</source>
          <target state="translated">자식보기 표시</target>
        </trans-unit>
        <trans-unit id="2728979253bf0df9ac300852015cb119f2a2c26f" translate="yes" xml:space="preserve">
          <source>Showing a Template</source>
          <target state="translated">템플릿 표시</target>
        </trans-unit>
        <trans-unit id="d7fb1e688eef0a11fa2cd062dc7bb22b6b339d66" translate="yes" xml:space="preserve">
          <source>Showing a View</source>
          <target state="translated">보기 표시</target>
        </trans-unit>
        <trans-unit id="0aaab63e390c97f3ee82593868403fdf9d866562" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#collectionviews-childview&quot;&gt;&lt;code&gt;childView&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#padding-data-to-the-childview&quot;&gt;&lt;code&gt;childViewOptions&lt;/code&gt;&lt;/a&gt;, there is an &lt;code&gt;emptyViewOptions&lt;/code&gt; property that will be passed to the &lt;code&gt;emptyView&lt;/code&gt; constructor. It can be provided as an object literal or as a function.</source>
          <target state="translated">유사 &lt;a href=&quot;#collectionviews-childview&quot;&gt; &lt;code&gt;childView&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#padding-data-to-the-childview&quot;&gt; &lt;code&gt;childViewOptions&lt;/code&gt; &lt;/a&gt; ,가 &lt;code&gt;emptyViewOptions&lt;/code&gt; 를 받는 전달됩니다 재산 &lt;code&gt;emptyView&lt;/code&gt; 의 생성자입니다. 객체 리터럴 또는 함수로 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51e4dc0c30bfd6945f549f39f03df975cfd7e248" translate="yes" xml:space="preserve">
          <source>Similar to &lt;a href=&quot;#show-and-beforeshow-events&quot;&gt;&lt;code&gt;Region&lt;/code&gt; &lt;code&gt;show&lt;/code&gt; and &lt;code&gt;before:show&lt;/code&gt; events&lt;/a&gt; these events fire before (&lt;code&gt;before:render:children&lt;/code&gt;) and after (&lt;code&gt;render:children&lt;/code&gt;) the &lt;code&gt;children&lt;/code&gt; of the &lt;code&gt;CollectionView&lt;/code&gt; are attached to the &lt;code&gt;CollectionView&lt;/code&gt;'s &lt;code&gt;el&lt;/code&gt; or &lt;code&gt;childViewContainer&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;#show-and-beforeshow-events&quot;&gt; &lt;code&gt;Region&lt;/code&gt; &lt;code&gt;show&lt;/code&gt; 및 &lt;code&gt;before:show&lt;/code&gt; 이벤트 와&lt;/a&gt; 유사하게 이러한 이벤트 는 &lt;code&gt;CollectionView&lt;/code&gt; 의 &lt;code&gt;children&lt;/code&gt; 이 &lt;code&gt;CollectionView&lt;/code&gt; 의 &lt;code&gt;el&lt;/code&gt; 또는 &lt;code&gt;childViewContainer&lt;/code&gt; 에 연결 되기 전 ( &lt;code&gt;before:render:children&lt;/code&gt; ) 및 이후 ( &lt;code&gt;render:children&lt;/code&gt; )에 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="a6dfcc22441c1e1cc9ee547f1ea93818e59cea0d" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;attachHtml&lt;/code&gt;, override &lt;code&gt;detachHtml&lt;/code&gt; to determine how the region detaches the contents from its &lt;code&gt;el&lt;/code&gt;. This method receives no parameters.</source>
          <target state="translated">&lt;code&gt;attachHtml&lt;/code&gt; 과 비슷하게 detachHtml 을 재정 &lt;code&gt;detachHtml&lt;/code&gt; 영역이 내용을 &lt;code&gt;el&lt;/code&gt; 에서 분리하는 방법을 결정합니다 . 이 메소드는 매개 변수를받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="74148b582f25a77c0eaa58a6866c4c172b961ccc" translate="yes" xml:space="preserve">
          <source>Similar to &lt;code&gt;destroy&lt;/code&gt;, &lt;code&gt;CollectionView&lt;/code&gt; has events for when all of its children are destroyed. See &lt;a href=&quot;#destroychildren-and-beforedestroychildren-events&quot;&gt;the CollectionView's events&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;destroy&lt;/code&gt; 와 마찬가지로 &lt;code&gt;CollectionView&lt;/code&gt; 에는 모든 자식이 파괴 될 때에 대한 이벤트가 있습니다. 자세한 내용 &lt;a href=&quot;#destroychildren-and-beforedestroychildren-events&quot;&gt;은 CollectionView의 이벤트&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d39c155ac99ee3c8ca9c91c68b421abcc95b3e0a" translate="yes" xml:space="preserve">
          <source>Simply replace all instances of &lt;code&gt;getChildView&lt;/code&gt; with &lt;code&gt;childView&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getChildView&lt;/code&gt; 의 모든 인스턴스 를 &lt;code&gt;childView&lt;/code&gt; 로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="5fe15501641b84feb9d3e0677eedd6a22b173dc7" translate="yes" xml:space="preserve">
          <source>Simply replace all instances of &lt;code&gt;getEmptyView&lt;/code&gt; with &lt;code&gt;emptyView&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getEmptyView&lt;/code&gt; 의 모든 인스턴스 를 &lt;code&gt;emptyView&lt;/code&gt; 로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="a8e8371ebb820266fbab82e1eb2d1a7d0943eb35" translate="yes" xml:space="preserve">
          <source>Simply replace all instances of &lt;code&gt;templateHelpers&lt;/code&gt; with &lt;code&gt;templateContext&lt;/code&gt;</source>
          <target state="translated">간단히의 모든 인스턴스를 대체 &lt;code&gt;templateHelpers&lt;/code&gt; 와 &lt;code&gt;templateContext&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="dda40c9d97027937e3d793750b960d75d7ba3b0f" translate="yes" xml:space="preserve">
          <source>So if you are accounting for added views in your &lt;code&gt;viewFilter&lt;/code&gt; and &lt;code&gt;viewComparator&lt;/code&gt; the best place to add these children is likely in the &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt;&lt;code&gt;render&lt;/code&gt; event&lt;/a&gt; as the views will only be added once (or re-added if the children are rebuilt in a subsequent &lt;code&gt;render&lt;/code&gt;) and managed in the sort or filter as the &lt;code&gt;collection&lt;/code&gt; is updated.</source>
          <target state="translated">당신이 당신의 추가 뷰를 차지하고 있습니다 그렇다면 &lt;code&gt;viewFilter&lt;/code&gt; 및 &lt;code&gt;viewComparator&lt;/code&gt; 에 가능성이 자녀를 추가 할 수있는 최고의 장소입니다 &lt;a href=&quot;events.class#render-and-beforerender-events&quot;&gt; &lt;code&gt;render&lt;/code&gt; 이벤트&lt;/a&gt; 보기 만하면 추가됩니다로 (또는 자녀가 이후에 재건 된 경우 재 부가 &lt;code&gt;render&lt;/code&gt; )과 &lt;code&gt;collection&lt;/code&gt; 이 업데이트 될 때 정렬 또는 필터에서 관리 됩니다.</target>
        </trans-unit>
        <trans-unit id="e697b2bc6950100b9440fc254c2a82be8481a50f" translate="yes" xml:space="preserve">
          <source>So your view will need to be prepared to handle both scenarios.</source>
          <target state="translated">따라서 두 시나리오를 모두 처리 할 수 ​​있도록 뷰를 준비해야합니다.</target>
        </trans-unit>
        <trans-unit id="e7408766ede53173c9bdb95674b42ceb77075540" translate="yes" xml:space="preserve">
          <source>So, for example, when a model sync fails:</source>
          <target state="translated">예를 들어 모델 동기화가 실패한 경우 :</target>
        </trans-unit>
        <trans-unit id="822f225a90e6a21d93c7900c90ce831c9eb0968d" translate="yes" xml:space="preserve">
          <source>Some Routing Solutions</source>
          <target state="translated">일부 라우팅 솔루션</target>
        </trans-unit>
        <trans-unit id="b2373ec16b20af173470c5db0f6ca59c17f13071" translate="yes" xml:space="preserve">
          <source>Some of these properties come from Marionette, but many are inherited from &lt;a href=&quot;http://backbonejs.org/#View-constructor&quot;&gt;&lt;code&gt;Backbone.View&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 속성 중 일부는 Marionette에서 가져 오지만 대부분은 &lt;a href=&quot;http://backbonejs.org/#View-constructor&quot;&gt; &lt;code&gt;Backbone.View&lt;/code&gt; &lt;/a&gt; 에서 상속됩니다 .</target>
        </trans-unit>
        <trans-unit id="8b2de78178178e8b23c431fb66f88d7027a8a745" translate="yes" xml:space="preserve">
          <source>Sorting the &lt;code&gt;children&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;children&lt;/code&gt; 정렬</target>
        </trans-unit>
        <trans-unit id="40ad5d7e594322b3a2e607f5acd273a0fb14819a" translate="yes" xml:space="preserve">
          <source>Specifying &lt;code&gt;regions&lt;/code&gt; as a Function</source>
          <target state="translated">&lt;code&gt;regions&lt;/code&gt; 을 함수로 지정</target>
        </trans-unit>
        <trans-unit id="8af2e21d917585b954cf4677ba1687c69cb303be" translate="yes" xml:space="preserve">
          <source>Split the words around the &lt;code&gt;:&lt;/code&gt; characters - so &lt;code&gt;before&lt;/code&gt;, &lt;code&gt;dom&lt;/code&gt;, &lt;code&gt;refresh&lt;/code&gt;</source>
          <target state="translated">주위에 단어 분할 &lt;code&gt;:&lt;/code&gt; 문자 - 그래서 &lt;code&gt;before&lt;/code&gt; , &lt;code&gt;dom&lt;/code&gt; , &lt;code&gt;refresh&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b2e49b6fde65818e9a40a72c1bb38c42a59ddc6b" translate="yes" xml:space="preserve">
          <source>Starting An Application</source>
          <target state="translated">응용 프로그램 시작</target>
        </trans-unit>
        <trans-unit id="833e58e1f9818ab0b5286af67e1692ab336e9fee" translate="yes" xml:space="preserve">
          <source>String Selector</source>
          <target state="translated">문자열 선택기</target>
        </trans-unit>
        <trans-unit id="40ece8d28853641ce94274f7b02e751dae113445" translate="yes" xml:space="preserve">
          <source>Support for vanilla Backbone.View has changed</source>
          <target state="translated">바닐라 백본 지원.보기가 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="7bd9bcd80597e18c49965b57f6fd423d8f348551" translate="yes" xml:space="preserve">
          <source>Supporting Backbone Views</source>
          <target state="translated">지원 백본보기</target>
        </trans-unit>
        <trans-unit id="0ab62b85d17f30cc58654100b3bc450098be5bc0" translate="yes" xml:space="preserve">
          <source>Swap the location of two views in the &lt;code&gt;CollectionView&lt;/code&gt;&lt;code&gt;children&lt;/code&gt; and in the &lt;code&gt;el&lt;/code&gt;. This can be useful when sorting is arbitrary or is not performant.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; &lt;code&gt;children&lt;/code&gt; 및 &lt;code&gt;el&lt;/code&gt; 에서 두보기의 위치를 바꿉니다 . 정렬이 임의적이거나 성능이 좋지 않을 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2270f52cb2b65eaf1dfb0729fbdd4faedc89e14a" translate="yes" xml:space="preserve">
          <source>Swapping Child Views</source>
          <target state="translated">자식 뷰 교환</target>
        </trans-unit>
        <trans-unit id="9ef632a39da51bd5d8265f657842535184f5101b" translate="yes" xml:space="preserve">
          <source>Swaps the location of &lt;code&gt;el1&lt;/code&gt; and &lt;code&gt;el2&lt;/code&gt; in the DOM. Both els must have a parentNode to be able to swap.</source>
          <target state="translated">DOM에서 &lt;code&gt;el1&lt;/code&gt; 과 &lt;code&gt;el2&lt;/code&gt; 의 위치를 ​​바꿉니다 . 두 el 모두 교환 할 수 있으려면 parentNode가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9730d4326a7b8a0d13c2be3b7fe29b80ad152bf6" translate="yes" xml:space="preserve">
          <source>Table of Contents</source>
          <target state="translated">목차</target>
        </trans-unit>
        <trans-unit id="13513088a58e3d2056677521b64f797fd547f4a6" translate="yes" xml:space="preserve">
          <source>Takes the DOM node &lt;code&gt;el&lt;/code&gt; and appends the DOM node &lt;code&gt;contents&lt;/code&gt; to the end of the element's contents.</source>
          <target state="translated">DOM 노드 &lt;code&gt;el&lt;/code&gt; 을 가져 와서 DOM 노드 &lt;code&gt;contents&lt;/code&gt; 을 요소 내용의 끝에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="cd988826e8ae1dfc15033beeafea811beb2a7885" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;classes&quot;&gt;&lt;code&gt;View&lt;/code&gt;, &lt;code&gt;CollectionView&lt;/code&gt; and &lt;code&gt;Behavior&lt;/code&gt;&lt;/a&gt; can bind to events that occur on attached models and collections - this includes both &lt;a href=&quot;http://backbonejs.org/#Events-catalog&quot;&gt;standard backbone-events&lt;/a&gt; and custom events.</source>
          <target state="translated">&lt;a href=&quot;classes&quot;&gt; &lt;code&gt;View&lt;/code&gt; , &lt;code&gt;CollectionView&lt;/code&gt; 과 &lt;code&gt;Behavior&lt;/code&gt; &lt;/a&gt; 부착 된 모델과 컬렉션에 발생하는 이벤트에 바인딩 할 수 있습니다 -이 모두 포함 &lt;a href=&quot;http://backbonejs.org/#Events-catalog&quot;&gt;표준 백본 이벤트&lt;/a&gt; 및 사용자 정의 이벤트를.</target>
        </trans-unit>
        <trans-unit id="86e5d62c6526a46b5c67b1b805ad8e6bfabefff2" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;events.class#destroy-and-beforedestroy-events&quot;&gt;&lt;code&gt;before:destroy&lt;/code&gt; event&lt;/a&gt; is the best place to clean up any added listeners not related to the view's DOM.</source>
          <target state="translated">&lt;a href=&quot;events.class#destroy-and-beforedestroy-events&quot;&gt; &lt;code&gt;before:destroy&lt;/code&gt; 이벤트는&lt;/a&gt; 뷰의 DOM 관련이없는 추가 된 리스너를 청소하는 가장 좋은 장소입니다.</target>
        </trans-unit>
        <trans-unit id="df4434d9748725b17217591f734c2933477a26af" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;Backbone.Events API&lt;/a&gt; is available to all classes. Each Marionette class can both &lt;code&gt;listenTo&lt;/code&gt; any object with this API and have events triggered on the instance.</source>
          <target state="translated">&lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;Backbone.Events API는&lt;/a&gt; 모든 클래스에 사용할 수 있습니다. 각 Marionette 클래스는 이 API를 사용하여 객체를 &lt;code&gt;listenTo&lt;/code&gt; 하고 인스턴스에서 이벤트를 트리거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8050d112bea51aa8ee7585fe7dea8603ead7213f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;marionette.application&quot;&gt;&lt;code&gt;Application&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;marionette.mnobject&quot;&gt;&lt;code&gt;MnObject&lt;/code&gt;&lt;/a&gt; classes provide bindings to provide automatic event listeners and / or request handlers on your object instances. This works with a bound &lt;code&gt;channelName&lt;/code&gt; to let us provide listeners using the &lt;code&gt;radioEvents&lt;/code&gt; and &lt;code&gt;radioRequests&lt;/code&gt; properties.</source>
          <target state="translated">&lt;a href=&quot;marionette.application&quot;&gt; &lt;code&gt;Application&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;marionette.mnobject&quot;&gt; &lt;code&gt;MnObject&lt;/code&gt; &lt;/a&gt; 클래스는 개체 인스턴스에 자동 이벤트 리스너 및 / 또는 요청 처리기를 제공하는 바인딩을 제공합니다. 이것은 바인딩 된 &lt;code&gt;channelName&lt;/code&gt; 과 함께 작동 하여 &lt;code&gt;radioEvents&lt;/code&gt; 및 &lt;code&gt;radioRequests&lt;/code&gt; 속성을 사용하여 리스너를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bd090d3b01b64effaa3f0fd7c81e20ba30c4f0d" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;marionette.view&quot;&gt;&lt;code&gt;View&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;marionette.collectionview&quot;&gt;&lt;code&gt;CollectionView&lt;/code&gt;&lt;/a&gt; are able to monitor and act on events on any of their direct children. Any events fired on a view are automatically propagated to their direct parents as well. Let's see a quick example:</source>
          <target state="translated">&lt;a href=&quot;marionette.view&quot;&gt; &lt;code&gt;View&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;marionette.collectionview&quot;&gt; &lt;code&gt;CollectionView&lt;/code&gt; 는&lt;/a&gt; 모니터링하고 직접 자녀의의 이벤트에 따라 행동 할 수 있습니다. 뷰에서 발생한 모든 이벤트는 자동으로 직계 부모에게 자동으로 전파됩니다. 간단한 예를 보자.</target>
        </trans-unit>
        <trans-unit id="f325595bcab0b7a39a041b061a168778c6cd4760" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Application&lt;/code&gt; class also triggers &lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;Destroy Events&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; 클래스는 트리거 &lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;이벤트를 파괴&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa27e2d9993647ca2eb15954622ef16cf3e20fc2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Application&lt;/code&gt; object will fire two events:</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; 객체는 두 개의 이벤트를 발생합니다 :</target>
        </trans-unit>
        <trans-unit id="b8761a40f599091a900db4fa4d556f3278c51d5e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Application&lt;/code&gt; provides hooks for organizing and initiating other elements and a view tree.</source>
          <target state="translated">&lt;code&gt;Application&lt;/code&gt; 조직 및 기타 요소와 뷰 트리를 시작하기위한 후크를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a67dc442631e8deede2dccd33b5474839375415b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Behavior&lt;/code&gt; class provides proxies for a selection of &lt;code&gt;View&lt;/code&gt; functionality. This includes &lt;a href=&quot;marionette.behavior&quot;&gt;listening to events on the view&lt;/a&gt;, being able to &lt;a href=&quot;marionette.behavior&quot;&gt;handle events on models and collections&lt;/a&gt;, and being able to directly &lt;a href=&quot;marionette.behavior&quot;&gt;interact with the attached template&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Behavior&lt;/code&gt; 클래스의 선택에 대한 프록시를 제공 &lt;code&gt;View&lt;/code&gt; 기능을 제공합니다. 여기에는 &lt;a href=&quot;marionette.behavior&quot;&gt;뷰&lt;/a&gt; 에서 이벤트를 듣고 &lt;a href=&quot;marionette.behavior&quot;&gt;모델 및 컬렉션&lt;/a&gt; 에서 이벤트 를 처리 할 수 &lt;a href=&quot;marionette.behavior&quot;&gt;있으며 첨부 된 템플릿과&lt;/a&gt; 직접 상호 작용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="180af7bb8335f620acc99b1f619bac3315cbc31b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Behavior&lt;/code&gt; has a number of proxies attributes that directly refer to the related attribute on a view:</source>
          <target state="translated">이 &lt;code&gt;Behavior&lt;/code&gt; 에는보기에서 관련 속성을 직접 참조하는 여러 프록시 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0955c2e44e72386fcc425294ffa73b8621da8eda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollectionView&lt;/code&gt; can bind to events that occur on the attached &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;collection&lt;/code&gt; - this includes both &lt;a href=&quot;http://backbonejs.org/#Events-catalog&quot;&gt;standard backbone-events&lt;/a&gt; and custom events.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 는 첨부에 발생하는 이벤트에 바인딩 할 수 있습니다 &lt;code&gt;model&lt;/code&gt; 과 &lt;code&gt;collection&lt;/code&gt; 이 모두 포함 - &lt;a href=&quot;http://backbonejs.org/#Events-catalog&quot;&gt;표준 백본 이벤트&lt;/a&gt; 및 사용자 정의 이벤트를.</target>
        </trans-unit>
        <trans-unit id="5e1a149766b02257af359dc55281ef91bcb4b317" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollectionView&lt;/code&gt; can take action depending on what events are triggered in its &lt;code&gt;children&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 는 이벤트가 트리거되는 내용에 따라 조치를 취할 수 있습니다 &lt;code&gt;children&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f010d5190c8b9212fdc9baa0787e11143139a069" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollectionView&lt;/code&gt; triggers unique events specifically related to child management.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 는 특히 아동 관리와 관련된 독특한 이벤트를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="804250a8bca27a97ddd115d408dc3f0475463f1f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CollectionView&lt;/code&gt; uses a region internally that can be used to know when the empty view is show or destroyed. See &lt;a href=&quot;#region-events&quot;&gt;Region Events&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 는 빈 뷰가 표시되거나 파괴 될 때 알고 사용할 수 있다는 내부 영역을 사용합니다. &lt;a href=&quot;#region-events&quot;&gt;지역 이벤트를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ae897694b13fc4d9b32f9b2ca5e891ba59475c2" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;CompositeView&lt;/code&gt; was deprecated in favor of using &lt;code&gt;View&lt;/code&gt; and &lt;code&gt;CollectionView&lt;/code&gt;. The &lt;code&gt;CompositeView&lt;/code&gt; will be completely removed in Marionette 4.</source>
          <target state="translated">&lt;code&gt;CompositeView&lt;/code&gt; 사용에 찬성 사용되지 않습니다 &lt;code&gt;View&lt;/code&gt; 및 &lt;code&gt;CollectionView&lt;/code&gt; 을 . &lt;code&gt;CompositeView&lt;/code&gt; 완전히 마리오네트 4에서 제거 될 예정입니다.</target>
        </trans-unit>
        <trans-unit id="cb88200d6b191166aa533da2fb36b4336150c52e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Marionette.View&lt;/code&gt; class lets us manage a hierarchy of views using &lt;code&gt;regions&lt;/code&gt;. Regions are a hook point that lets us show views inside views, manage the show/hide lifecycles, and act on events inside the children.</source>
          <target state="translated">&lt;code&gt;Marionette.View&lt;/code&gt; 의 클래스는 우리가 사용하는 뷰의 계층 구조 관리 할 수있는 &lt;code&gt;regions&lt;/code&gt; . 리전은 뷰 내부에 뷰를 표시하고, 표시 / 숨기기 라이프 사이클을 관리하고, 어린이 내부의 이벤트에 작용할 수있는 연결점입니다.</target>
        </trans-unit>
        <trans-unit id="486ddcc47dadba314368addafcb6e5c47ade8e58" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;MnObject&lt;/code&gt; class triggers &lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;Destroy Events&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MnObject&lt;/code&gt; 의 클래스 트리거 &lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;이벤트를 파괴&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="70611f779f3df947e6e8fa0479a8d654d03caf52" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Radio Event&lt;/code&gt; works exactly the same way as regular &lt;code&gt;Backbone Events&lt;/code&gt; like model/collection events. In fact, it uses the &lt;code&gt;Backbone.Events&lt;/code&gt; mixin internally, exposing its API:</source>
          <target state="translated">&lt;code&gt;Radio Event&lt;/code&gt; 정확히 일반과 동일한 방식으로 작동 &lt;code&gt;Backbone Events&lt;/code&gt; 모델 / 수집 이벤트 등을. 실제로 &lt;code&gt;Backbone.Events&lt;/code&gt; mixin을 내부적으로 사용하여 API를 노출시킵니다.</target>
        </trans-unit>
        <trans-unit id="d136be2414cde4ba69dffa0658ad39da3203bd4e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Radio&lt;/code&gt; message bus exposes some core concepts:</source>
          <target state="translated">&lt;code&gt;Radio&lt;/code&gt; 메시지 버스는 몇 가지 핵심 개념을 노출 :</target>
        </trans-unit>
        <trans-unit id="14884155715dc6ea98d0cd416c97a413a53264c1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Region&lt;/code&gt; class also triggers &lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;Destroy Events&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Region&lt;/code&gt; 클래스는 트리거 &lt;a href=&quot;#destroy-and-beforedestroy-events&quot;&gt;이벤트를 파괴&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b4b1ea8e6e411797b1ee2260d0936309142eaa2c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;View&lt;/code&gt; can bind to events that occur on the attached &lt;code&gt;model&lt;/code&gt; and &lt;code&gt;collection&lt;/code&gt; - this includes both &lt;a href=&quot;http://backbonejs.org/#Events-catalog&quot;&gt;standard backbone-events&lt;/a&gt; and custom events.</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 첨부에 발생하는 이벤트에 바인딩 할 수 있습니다 &lt;code&gt;model&lt;/code&gt; 과 &lt;code&gt;collection&lt;/code&gt; 이 모두 포함 - &lt;a href=&quot;http://backbonejs.org/#Events-catalog&quot;&gt;표준 백본 이벤트&lt;/a&gt; 및 사용자 정의 이벤트를.</target>
        </trans-unit>
        <trans-unit id="c1bb63de17cca81958342d5d697fb5f3bc53588e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;View&lt;/code&gt; provides a mechanism to name parts of your template to be used throughout the view with the &lt;code&gt;ui&lt;/code&gt; attribute. This provides a number of benefits:</source>
          <target state="translated">&lt;code&gt;View&lt;/code&gt; 템플릿의 이름 부분에 대한 메커니즘이 함께보기에 걸쳐 사용할 수 있도록 제공하는 &lt;code&gt;ui&lt;/code&gt; 속성. 이것은 많은 이점을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e5d0a663e6848305741d7e9e8af857a5003b2aed" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;View&lt;/code&gt; provides event delegation for capturing and handling DOM interactions as well as the ability to separate concerns into smaller, managed child views.</source>
          <target state="translated">이 &lt;code&gt;View&lt;/code&gt; 는 DOM 상호 작용을 캡처하고 처리하기위한 이벤트 위임을 제공 할뿐만 아니라 우려 사항을 더 작은 관리되는 하위 뷰로 분리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="daeb7fd25f8b24022a94fea91c7c130285403973" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;addChildView&lt;/code&gt; method can be used to add a view that is independent of your &lt;code&gt;Backbone.Collection&lt;/code&gt;. This method takes two parameters, the child view instance and optionally the index for where it should be placed within the &lt;a href=&quot;#managing-children&quot;&gt;CollectionView's &lt;code&gt;children&lt;/code&gt;&lt;/a&gt;. It returns the added view.</source>
          <target state="translated">&lt;code&gt;addChildView&lt;/code&gt; 의 방법은 당신의 독립적 인보기를 추가 할 수 있습니다 &lt;code&gt;Backbone.Collection&lt;/code&gt; 을 . 이 메서드는 자식 뷰 인스턴스와 선택적으로 &lt;a href=&quot;#managing-children&quot;&gt;CollectionView의 &lt;code&gt;children&lt;/code&gt; &lt;/a&gt; 내에 배치해야하는 인덱스의 두 매개 변수를 사용합니다 . 추가 된 뷰를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="55fbd48dbe04463d2070588fa20b7b46a0b0c2af" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;buildChildView&lt;/code&gt; method is responsible for taking the ChildView class and instantiating it with the appropriate data. This method takes three parameters and returns a view instance to be used as the child view.</source>
          <target state="translated">&lt;code&gt;buildChildView&lt;/code&gt; 의 방법은 ChildView 클래스를 복용하고 적절한 데이터로 인스턴스화 할 책임이있다. 이 메소드는 세 개의 매개 변수를 사용하여 하위보기로 사용할보기 인스턴스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="93a320c9bab407652ebad400332eb2b759112c0d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;channel&lt;/code&gt; is the biggest reason to use &lt;code&gt;Radio&lt;/code&gt; as our event aggregator - it provides a clean point for dividing global events. To retrieve a channel, use &lt;code&gt;Radio.channel(channelName)&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;channel&lt;/code&gt; 사용하는 가장 큰 이유는 &lt;code&gt;Radio&lt;/code&gt; 우리의 이벤트 애그리 게이터 (aggregator)로 -는 글로벌 이벤트를 분할하는 깨끗한 지점을 제공합니다. 채널을 검색하려면 &lt;code&gt;Radio.channel(channelName)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2f59bc41df8048f016c566e924716ec4e4fa852d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;childEvents&lt;/code&gt; attribute was renamed to &lt;code&gt;childViewEvents&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;childEvents&lt;/code&gt; 의 속성은 이름이 바뀌 었습니다 &lt;code&gt;childViewEvents&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6bedafc38915d695f17e3f8a79923fabda47df82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;childViewEventPrefix&lt;/code&gt; can be provided in the view definition or in the constructor function call, to get a view instance.</source>
          <target state="translated">&lt;code&gt;childViewEventPrefix&lt;/code&gt; 는 뷰 인스턴스를 얻기 위해, 뷰 정의 또는 생성자 함수 호출에 제공 할 수있다.</target>
        </trans-unit>
        <trans-unit id="a169bb66cec5e16755239467ee58e6980a16de14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;childViewEvents&lt;/code&gt; attribute can also attach functions directly to be event handlers:</source>
          <target state="translated">&lt;code&gt;childViewEvents&lt;/code&gt; 의 속성은 이벤트 핸들러로 직접 기능을 첨부 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ba64d5bacb8537d844604e3aaeddb965cd500841" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;cid&lt;/code&gt; or client id is a unique identifier automatically assigned to MnObjects when they're first created and by default is prefixed with &lt;code&gt;mno&lt;/code&gt;. You can modify the prefix for &lt;code&gt;MnObject&lt;/code&gt;s you &lt;code&gt;extend&lt;/code&gt; by setting the &lt;code&gt;cidPrefix&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;cid&lt;/code&gt; 또는 클라이언트 ID는 그들이 처음 생성 할 때 자동으로 MnObjects에 할당 된 고유 식별자이며 기본적으로로 시작되는 &lt;code&gt;mno&lt;/code&gt; . 당신은 접두사를 수정할 수 있습니다 &lt;code&gt;MnObject&lt;/code&gt; 은 당신이야 &lt;code&gt;extend&lt;/code&gt; 설정에 따라 &lt;code&gt;cidPrefix&lt;/code&gt; 을 .</target>
        </trans-unit>
        <trans-unit id="6d4c8fc194256b19b28dc0be2b75ac65888091d7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;collectionEvents&lt;/code&gt; attribute can also take a &lt;a href=&quot;basics#functions-returning-values&quot;&gt;function returning an object&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;collectionEvents&lt;/code&gt; 속성도 취할 수 &lt;a href=&quot;basics#functions-returning-values&quot;&gt;개체를 반환 기능&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ab5b9d991774a4279bb72380c93d8d2cc7a45b7e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dom event&lt;/code&gt; can be a jQuery DOM event - such as &lt;code&gt;click&lt;/code&gt; - or another custom event, such as Bootstrap's &lt;code&gt;show.bs.modal&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;dom event&lt;/code&gt; JQuery와 DOM 이벤트를 할 수 있습니다 - 같은 &lt;code&gt;click&lt;/code&gt; 등의 부트 스트랩의 같은 또는 다른 사용자 정의 이벤트 - &lt;code&gt;show.bs.modal&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ffdee8e689f2b23d5095b565b3a53ff7a2d44623" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;dom node&lt;/code&gt; represents a jQuery selector or a &lt;code&gt;ui&lt;/code&gt; key prefixed by &lt;code&gt;@.&lt;/code&gt;. The &lt;code&gt;dom node&lt;/code&gt; is optional, and if omitted, the view's &lt;code&gt;$el&lt;/code&gt; will be used as the selector. For more information about the &lt;code&gt;ui&lt;/code&gt; object, and how it works, see &lt;a href=&quot;#organizing-your-view&quot;&gt;the documentation on ui&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;dom node&lt;/code&gt; JQuery와 선택 또는 대표하는 &lt;code&gt;ui&lt;/code&gt; 접두사 키를 &lt;code&gt;@.&lt;/code&gt; . &lt;code&gt;dom node&lt;/code&gt; 선택 사항이며, 생략하는 경우, 뷰의 &lt;code&gt;$el&lt;/code&gt; 선택기로 사용됩니다. &lt;code&gt;ui&lt;/code&gt; 객체 및 작동 방식 에 대한 자세한 내용은 ui &lt;a href=&quot;#organizing-your-view&quot;&gt;설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ff6ee700fce8278226c9b8a3428df2b54d2abda" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;events&lt;/code&gt; and &lt;code&gt;triggers&lt;/code&gt; attributes bind DOM events to actions to perform on the view. They each take a DOM event key and a mapping to the handler.</source>
          <target state="translated">&lt;code&gt;events&lt;/code&gt; 및 &lt;code&gt;triggers&lt;/code&gt; 행동 특성을 결합 DOM 이벤트는 뷰를 수행합니다. 이들은 각각 DOM 이벤트 키와 핸들러에 대한 맵핑을 취합니다.</target>
        </trans-unit>
        <trans-unit id="73b8a7667f4fbbaf37723297d073f8faae32ae9a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;events&lt;/code&gt; attribute can also directly bind functions:</source>
          <target state="translated">&lt;code&gt;events&lt;/code&gt; 속성은 직접 기능을 결합 할 수있다 :</target>
        </trans-unit>
        <trans-unit id="e479bfce73dfeac49cd77aa0f5abecddc588b111" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;filter&lt;/code&gt; method will loop through the &lt;code&gt;CollectionView&lt;/code&gt;'s sorted &lt;code&gt;children&lt;/code&gt; and test them against the &lt;a href=&quot;#defining-the-viewfilter&quot;&gt;&lt;code&gt;viewFilter&lt;/code&gt;&lt;/a&gt;. The views that pass the &lt;code&gt;viewFilter&lt;/code&gt;are rendered if necessary and attached to the CollectionView and the views that are filtered out will be detached. After filtering the &lt;code&gt;children&lt;/code&gt; will only contain the views to be attached.</source>
          <target state="translated">&lt;code&gt;filter&lt;/code&gt; 의 관통 방법 반복됩니다 &lt;code&gt;CollectionView&lt;/code&gt; 의 정렬 된 &lt;code&gt;children&lt;/code&gt; 과에 대한 테스트를 &lt;a href=&quot;#defining-the-viewfilter&quot;&gt; &lt;code&gt;viewFilter&lt;/code&gt; &lt;/a&gt; . 필요한 경우 &lt;code&gt;viewFilter&lt;/code&gt; 를 전달하는 뷰 가 렌더링되고 CollectionView에 첨부되고 필터링 된 뷰가 분리됩니다. 필터링 후 &lt;code&gt;children&lt;/code&gt; 에는 첨부 할보기 만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="87d76bf9909996c260b2ee73768bcb79946af631" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getChildView&lt;/code&gt; method has been removed in favor of the &lt;code&gt;childView&lt;/code&gt; property, &lt;a href=&quot;basics#functions-returning-values&quot;&gt;which now accepts a function&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getChildView&lt;/code&gt; 의 방법은 대신 제거한 &lt;code&gt;childView&lt;/code&gt; 의 속성, &lt;a href=&quot;basics#functions-returning-values&quot;&gt;현재 함수를 받아&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37bd484f7a49b782a99eb2d279353fdd9f525ad8" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getEmptyView&lt;/code&gt; method has been removed in favor of the &lt;code&gt;emptyView&lt;/code&gt; property, &lt;a href=&quot;basics#functions-returning-values&quot;&gt;which now accepts a function&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getEmptyView&lt;/code&gt; 의 방법은 대신 제거한 &lt;code&gt;emptyView&lt;/code&gt; 의 속성, &lt;a href=&quot;basics#functions-returning-values&quot;&gt;현재 함수를 받아&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c8ce5ad10cfec2bb05d776d2e03627cac10a48c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;getOption&lt;/code&gt; function will return any falsey value from the &lt;code&gt;options&lt;/code&gt;, other than &lt;code&gt;undefined&lt;/code&gt;. If an object's options has an undefined value, it will attempt to read the value from the object directly.</source>
          <target state="translated">&lt;code&gt;getOption&lt;/code&gt; 기능은에서 모든 falsey 값을 반환합니다 &lt;code&gt;options&lt;/code&gt; 이 아닌, &lt;code&gt;undefined&lt;/code&gt; . 객체의 옵션에 정의되지 않은 값이 있으면 객체에서 직접 값을 읽으려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="13ca9dd1af27e53cfafcfed02f8113c038ceaa93" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;isSwappingView&lt;/code&gt; method returns if a view is being swapped by another one. It's useful inside region lifecycle events / methods.</source>
          <target state="translated">&lt;code&gt;isSwappingView&lt;/code&gt; 의 메소드가 리턴은보기가 다른 하나에 의해 교체되는 경우. 지역 수명주기 이벤트 / 메소드 내부에서 유용합니다.</target>
        </trans-unit>
        <trans-unit id="9fa14664c2febf800101d6fa21c0506c1d224d41" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;mergeOptions&lt;/code&gt; method takes two arguments: an &lt;code&gt;options&lt;/code&gt; object and &lt;code&gt;keys&lt;/code&gt; to pull from the options object. Any matching &lt;code&gt;keys&lt;/code&gt; will be merged onto the class instance. For example:</source>
          <target state="translated">&lt;code&gt;mergeOptions&lt;/code&gt; 의 : 방법은 두 개의 인수를 취 &lt;code&gt;options&lt;/code&gt; 객체와 &lt;code&gt;keys&lt;/code&gt; 옵션 개체에서 끌어. 일치하는 모든 &lt;code&gt;keys&lt;/code&gt; 가 클래스 인스턴스에 병합됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f666d9889f820aa33e26a20e38076ea5826fca71" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;modelEvents&lt;/code&gt; attribute can also take a &lt;a href=&quot;basics#functions-returning-values&quot;&gt;function returning an object&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;modelEvents&lt;/code&gt; 의 속성도 취할 수 &lt;a href=&quot;basics#functions-returning-values&quot;&gt;개체를 반환 기능&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="425ea2e45c737c7581ebfdb6970ba4c8fce3e7c0" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;modelEvents&lt;/code&gt; attribute passes through all the arguments that are passed to &lt;code&gt;model.trigger('event', arguments)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;modelEvents&lt;/code&gt; 의 속성에 전달되는 모든 인수를 통과 &lt;code&gt;model.trigger('event', arguments)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c4e85bd62c0dff38022c0ddb6d7a77342ac224ef" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; Property</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 속성</target>
        </trans-unit>
        <trans-unit id="2e1fc5857bae5a0e49afe9f08af7aac7501c9f5f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;options&lt;/code&gt; argument passed in &lt;code&gt;initialize&lt;/code&gt; method is equal to the passed at class instantiation. To get the option inside initialize considering the &lt;code&gt;options&lt;/code&gt; property is necessary to use &lt;code&gt;getOption&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;options&lt;/code&gt; 에 전달 된 인수 &lt;code&gt;initialize&lt;/code&gt; 방법은 클래스 인스턴스 생성시에 전달 된 동일합니다. 고려 초기화 옵션 내부를 얻으려면 &lt;code&gt;options&lt;/code&gt; 특성은 사용할 필요가 &lt;code&gt;getOption&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f1738632e19d449f5b3afe9f0d4211ea3dcf0afa" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;region.show()&lt;/code&gt; method (that also backs &lt;code&gt;showChildView()&lt;/code&gt;) was changed to not remove HTML outside the &lt;code&gt;$el&lt;/code&gt; of the displayed view. In Marionette 2, the &lt;code&gt;region.show()&lt;/code&gt; method would call &lt;code&gt;region.$el.empty()&lt;/code&gt; before showing the new HTML.</source>
          <target state="translated">&lt;code&gt;region.show()&lt;/code&gt; 메소드는 (은 또한 백업 &lt;code&gt;showChildView()&lt;/code&gt; 외부 HTML을 제거하지 않도록 변경되었습니다) &lt;code&gt;$el&lt;/code&gt; 표시된보기. Marionette 2에서 &lt;code&gt;region.show()&lt;/code&gt; 메소드는 새 HTML을 표시하기 전에 &lt;code&gt;region.$el.empty()&lt;/code&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="e6c56430ea9038c10afe3aa7924e622c8b9fb2b3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;removeChildView&lt;/code&gt; method is useful if you need to remove and destroy a view from the &lt;code&gt;CollectionView&lt;/code&gt; without affecting the view's collection. In most cases it is better to use the data to determine what the &lt;code&gt;CollectionView&lt;/code&gt; should display.</source>
          <target state="translated">&lt;code&gt;removeChildView&lt;/code&gt; 의 제거와에서보기 파괴해야하는 경우 방법은 유용 &lt;code&gt;CollectionView&lt;/code&gt; 를 뷰의 수집에 영향을주지 않고. 대부분의 경우 데이터를 사용하여 &lt;code&gt;CollectionView&lt;/code&gt; 가 표시 할 내용을 결정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="aabfa3debe1c68bb0e7eb4b1c77f2ba9443962a6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render&lt;/code&gt; method of the &lt;code&gt;CollectionView&lt;/code&gt; is primarily responsible for rendering the entire collection. It loops through each of the children in the collection and renders them individually as a &lt;code&gt;childView&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 의 &lt;code&gt;render&lt;/code&gt; 메소드 는 주로 전체 콜렉션을 렌더링합니다. 컬렉션의 각 자식을 반복하고 개별적으로 &lt;code&gt;childView&lt;/code&gt; 로 렌더링합니다 .</target>
        </trans-unit>
        <trans-unit id="fbaa70b037136fb3b745a3f39b5baf7e0e6c76b6" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setComparator&lt;/code&gt; method modifies the &lt;code&gt;CollectionView&lt;/code&gt;'s &lt;code&gt;viewComparator&lt;/code&gt; attribute and re-sorts. Passing &lt;code&gt;{ preventRender: true }&lt;/code&gt; in the options argument will prevent the view being rendered.</source>
          <target state="translated">&lt;code&gt;setComparator&lt;/code&gt; 로의 방법 수정합니다 &lt;code&gt;CollectionView&lt;/code&gt; 의 &lt;code&gt;viewComparator&lt;/code&gt; 의 속성과 재 정렬합니다. options 인수에 &lt;code&gt;{ preventRender: true }&lt;/code&gt; 를 전달 하면 뷰가 렌더링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f76e11a7404950035bb2d7553cf0464d546e273a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;setFilter&lt;/code&gt; method modifies the &lt;code&gt;CollectionView&lt;/code&gt;'s &lt;code&gt;viewFilter&lt;/code&gt; attribute and filters. Passing &lt;code&gt;{ preventRender: true }&lt;/code&gt; in the options argument will prevent the view being rendered.</source>
          <target state="translated">&lt;code&gt;setFilter&lt;/code&gt; 방법을 수정합니다 &lt;code&gt;CollectionView&lt;/code&gt; 의 &lt;code&gt;viewFilter&lt;/code&gt; 의 속성과 필터를. options 인수에 &lt;code&gt;{ preventRender: true }&lt;/code&gt; 를 전달 하면 뷰가 렌더링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d49d1b452cd00162dd12703ed3fb881f9ffc674a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;show&lt;/code&gt; events were removed completely as they were redundant and were being used incorrectly to show child regions. The &lt;code&gt;show&lt;/code&gt; event was fired after the view had been attached, meaning the DOM was being constantly updated, leading to deteriorated performance.</source>
          <target state="translated">&lt;code&gt;show&lt;/code&gt; 가 중복했고 자식 영역을 표시 잘못 사용 된 같은 이벤트가 완전히 제거되었다. &lt;code&gt;show&lt;/code&gt; 보기가 부착 된 후 이벤트가 악화 성능을지도하는 DOM이 지속적으로 업데이트되고 있었다 의미 해고되었다.</target>
        </trans-unit>
        <trans-unit id="daae16d92129f32dda4d65521fe604e0785407f3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;show&lt;/code&gt; events will receive the region instance, the view being shown, and any options passed to &lt;code&gt;region.show&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;show&lt;/code&gt; 이벤트는 뷰가 표시되고, 어떤 옵션에 전달, 지역 인스턴스를 받게됩니다 &lt;code&gt;region.show&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="158962c20d22159e76336ebe2322207b4f98ef2f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sort&lt;/code&gt; method will loop through the &lt;code&gt;CollectionView&lt;/code&gt;&lt;code&gt;children&lt;/code&gt; prior to filtering and sort them with the &lt;a href=&quot;#defining-the-viewcomparator&quot;&gt;&lt;code&gt;viewComparator&lt;/code&gt;&lt;/a&gt;. By default, if a &lt;code&gt;viewComparator&lt;/code&gt; is not set, the &lt;code&gt;CollectionView&lt;/code&gt; will sort the views by the order of the models in the &lt;code&gt;collection&lt;/code&gt;. If set to &lt;code&gt;false&lt;/code&gt; view sorting will be disabled.</source>
          <target state="translated">&lt;code&gt;sort&lt;/code&gt; 스루 방법 반복됩니다 &lt;code&gt;CollectionView&lt;/code&gt; 의 &lt;code&gt;children&lt;/code&gt; 필터링 이전과 종류 그들에게로 &lt;a href=&quot;#defining-the-viewcomparator&quot;&gt; &lt;code&gt;viewComparator&lt;/code&gt; &lt;/a&gt; . 경우 기본적으로 &lt;code&gt;viewComparator&lt;/code&gt; 가 설정되지는 &lt;code&gt;CollectionView&lt;/code&gt; 는 에서 모델의 순서로보기 정렬합니다 &lt;code&gt;collection&lt;/code&gt; . &lt;code&gt;false&lt;/code&gt; 로 설정하면 정렬이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="176d91097c5149490c4cc93ac002c907d81a89a3" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;view.&amp;lt;region_name&amp;gt;&lt;/code&gt; syntax has been removed in favor of &lt;code&gt;view.getRegion()&lt;/code&gt;, &lt;code&gt;view.getChildView()&lt;/code&gt; and &lt;code&gt;view.showChildView()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;view.&amp;lt;region_name&amp;gt;&lt;/code&gt; 구문 대신 제거한 &lt;code&gt;view.getRegion()&lt;/code&gt; , &lt;code&gt;view.getChildView()&lt;/code&gt; 및 &lt;code&gt;view.showChildView()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f88be8356ad5c07c20e4ae42745b70d28ccaff0c" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;view&lt;/code&gt; is a reference to the &lt;code&gt;View&lt;/code&gt; instance that the &lt;code&gt;Behavior&lt;/code&gt; is attached to.</source>
          <target state="translated">&lt;code&gt;view&lt;/code&gt; 에 대한 참조 &lt;code&gt;View&lt;/code&gt; 해당 인스턴스 &lt;code&gt;Behavior&lt;/code&gt; 부착되어있다.</target>
        </trans-unit>
        <trans-unit id="8445dbd5d29a7c7360442b5e2f5a5a046c8675cf" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;viewComparator&lt;/code&gt; can take any of the acceptable &lt;code&gt;Backbone.Collection&lt;/code&gt;&lt;a href=&quot;http://backbonejs.org/#Collection-comparator&quot;&gt;comparator formats&lt;/a&gt; -- a sortBy (pass a function that takes a single argument), as a sort (pass a comparator function that expects two arguments), or as a string indicating the attribute to sort by.</source>
          <target state="translated">&lt;code&gt;viewComparator&lt;/code&gt; 는 허용 임의 취할 수 &lt;code&gt;Backbone.Collection&lt;/code&gt; 의&lt;a href=&quot;http://backbonejs.org/#Collection-comparator&quot;&gt;비교기 형식&lt;/a&gt; - sortBy은 일종으로, (하나의 인수를 취하는 함수를 전달) (비교기 기능을 전달할 것으로 예상 개의 인수) 또는 행의 속성을 나타내는 문자열로 정렬 기준.</target>
        </trans-unit>
        <trans-unit id="2ead55daf6faf3cf674d6f1980e300d606bc2a14" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;viewFilter&lt;/code&gt; function takes a view from the &lt;code&gt;children&lt;/code&gt; and returns a truthy value if the child should be attached, and a falsey value if it should not.</source>
          <target state="translated">&lt;code&gt;viewFilter&lt;/code&gt; 의 기능은에서보기 걸리는 &lt;code&gt;children&lt;/code&gt; 과 아이가 연결해야하는 경우 truthy 값을 반환하고, falsey 값 경우는 안된다.</target>
        </trans-unit>
        <trans-unit id="0af41dce662be6150b64aa99caacf5b02a3a2a1e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;viewFilter&lt;/code&gt; predicate object will filter against the view's model attributes.</source>
          <target state="translated">&lt;code&gt;viewFilter&lt;/code&gt; 의 술어 객체는 뷰의 모델 속성에 대해 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="5fc7d6360b31500e50378cc808c89f96eea2505b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;viewFilter&lt;/code&gt; string represents the view's model attribute and will filter truthy values.</source>
          <target state="translated">&lt;code&gt;viewFilter&lt;/code&gt; 의 문자열은보기의 모델 속성을 나타내고 truthy 값을 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="14e90f38d4e5f7c8e5d03155c2baaceac874c611" translate="yes" xml:space="preserve">
          <source>The API used by Marionette by default is attached as &lt;code&gt;Marionette.DomApi&lt;/code&gt;. This is useful if you &lt;a href=&quot;#providing-your-own-dom-api&quot;&gt;change the API&lt;/a&gt; globally, but want to reuse the default in certain cases.</source>
          <target state="translated">기본적으로 마리오네트에서 사용하는 API는 다음과 같이 연결되어 &lt;code&gt;Marionette.DomApi&lt;/code&gt; . 이는 &lt;a href=&quot;#providing-your-own-dom-api&quot;&gt;API를&lt;/a&gt; 전체적으로 변경 하지만 특정 경우 기본값을 재사용하려는 경우에 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="221f246f44cab6a92b8de13dc698860eeb097a23" translate="yes" xml:space="preserve">
          <source>The Application defines a single region &lt;code&gt;el&lt;/code&gt; using the &lt;code&gt;region&lt;/code&gt; attribute. This can be accessed through &lt;code&gt;getRegion()&lt;/code&gt; or have a view displayed directly with &lt;code&gt;showView()&lt;/code&gt;. Below is a short example:</source>
          <target state="translated">응용 프로그램은 하나의 영역을 정의 &lt;code&gt;el&lt;/code&gt; 사용하여 &lt;code&gt;region&lt;/code&gt; 특성을. &lt;code&gt;getRegion()&lt;/code&gt; 통해 액세스 하거나 &lt;code&gt;showView()&lt;/code&gt; 직접 표시 할 수 있습니다 . 아래는 간단한 예입니다.</target>
        </trans-unit>
        <trans-unit id="6a5adef84cd283fa766ff6bfd075eb78308d05f4" translate="yes" xml:space="preserve">
          <source>The Backbone Radio provides easy support for a number of messaging patterns for Backbone and Marionette. This is provided through two basic constructs:</source>
          <target state="translated">백본 라디오는 백본 및 마리오네트에 대한 다양한 메시징 패턴을 쉽게 지원합니다. 이것은 두 가지 기본 구성을 통해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="6a57d509c5db621404ddea2415e2b27ba1979b1d" translate="yes" xml:space="preserve">
          <source>The Behavior's &lt;code&gt;view&lt;/code&gt;</source>
          <target state="translated">행동의 &lt;code&gt;view&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ad8bd819284dcf6d4c82da4d34ed9445c0ce2d6" translate="yes" xml:space="preserve">
          <source>The DOM API</source>
          <target state="translated">DOM API</target>
        </trans-unit>
        <trans-unit id="911f28efdddd71205b9a478b30f12e2c756803e2" translate="yes" xml:space="preserve">
          <source>The DOM API manages the DOM on behalf of &lt;a href=&quot;classes&quot;&gt;each view class and &lt;code&gt;Region&lt;/code&gt;&lt;/a&gt;. It defines the methods that actually attach and remove views and children.</source>
          <target state="translated">DOM API는 &lt;a href=&quot;classes&quot;&gt;각 뷰 클래스 및 &lt;code&gt;Region&lt;/code&gt; &lt;/a&gt; 대신 DOM을 관리합니다 . 실제로 뷰와 자식을 연결하고 제거하는 방법을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="84a61d1e0fe45316667ddb7aa856a4892ceeca60" translate="yes" xml:space="preserve">
          <source>The DOM API takes care of the other DOM manipulation methods for you. The &lt;a href=&quot;https://github.com/jashkenas/backbone/wiki/using-backbone-without-jquery&quot;&gt;Backbone Wiki&lt;/a&gt; has a good reference for removing jQuery from the app, including Browserify and Webpack configuration hooks.</source>
          <target state="translated">DOM API는 다른 DOM 조작 방법을 처리합니다. &lt;a href=&quot;https://github.com/jashkenas/backbone/wiki/using-backbone-without-jquery&quot;&gt;백본 위키&lt;/a&gt; Browserify 웹팩 구성 및 후크를 포함하는 응용에서 jQuery를 제거하기위한 양호한 기준을 갖는다.</target>
        </trans-unit>
        <trans-unit id="d8f5bca6f4e34553a29833584c5654f6cff487aa" translate="yes" xml:space="preserve">
          <source>The DOM event gets passed in as the first argument, allowing you to see any information passed as part of the event.</source>
          <target state="translated">DOM 이벤트는 첫 번째 인수로 전달되어 이벤트의 일부로 전달 된 정보를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="70461566b02f30927589bd34531fb6bdfc4b9606" translate="yes" xml:space="preserve">
          <source>The Event is a simple notification that &lt;em&gt;something happened&lt;/em&gt; and you may or may not want other objects in your application to react to that. A few key principles to bear in mind are:</source>
          <target state="translated">이벤트는 &lt;em&gt;어떤 일이 발생&lt;/em&gt; 했음을 알리는 간단한 알림이며 응용 프로그램의 다른 객체가 그에 반응하기를 원하거나 원하지 않을 수 있습니다. 명심해야 할 몇 가지 주요 원칙은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="105ed1064867b55760694841491a7f0efc1496c7" translate="yes" xml:space="preserve">
          <source>The Marionette Application provides helper methods for managing its attached region.</source>
          <target state="translated">Marionette Application은 연결된 지역을 관리하기위한 헬퍼 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fa7c3d9a2fd6fc9f68c81603ee666ad5073e2433" translate="yes" xml:space="preserve">
          <source>The Marionette Event system provides a system for objects to communicate with each other in a uniform way. In Marionette, this involves one object triggering an event that another listens to. This is an extended from of the &lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;event handling system in Backbone&lt;/a&gt;, and is different than &lt;a href=&quot;dom.interactions#binding-to-user-input&quot;&gt;DOM related events&lt;/a&gt;. It is mixed in to every &lt;a href=&quot;classes&quot;&gt;Marionette class&lt;/a&gt;.</source>
          <target state="translated">마리오네트 이벤트 시스템은 물체가 균일 한 방식으로 서로 통신 할 수있는 시스템을 제공합니다. 마리오네트에서 이것은 하나의 객체가 다른 객체가 듣는 이벤트를 트리거하는 것을 포함합니다. 이것은 &lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;Backbone&lt;/a&gt; 의 이벤트 처리 시스템에서 확장 된 것으로 &lt;a href=&quot;dom.interactions#binding-to-user-input&quot;&gt;DOM 관련 이벤트와&lt;/a&gt; 다릅니다 . 모든 &lt;a href=&quot;classes&quot;&gt;마리오네트 클래스에&lt;/a&gt; 혼합되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="09af59294feb8900f6e939bb877a3cb180568047" translate="yes" xml:space="preserve">
          <source>The Marionette View implements a powerful render method which, given a &lt;a href=&quot;view.rendering#setting-a-view-template&quot;&gt;&lt;code&gt;template&lt;/code&gt;&lt;/a&gt;, will build your HTML from that template, mixing in &lt;code&gt;model&lt;/code&gt; or &lt;code&gt;collection&lt;/code&gt; data and any extra &lt;a href=&quot;view.rendering#adding-context-data&quot;&gt;template context&lt;/a&gt;.</source>
          <target state="translated">Marionette View는 &lt;a href=&quot;view.rendering#setting-a-view-template&quot;&gt; &lt;code&gt;template&lt;/code&gt; &lt;/a&gt; 지정하면 &lt;code&gt;model&lt;/code&gt; 또는 &lt;code&gt;collection&lt;/code&gt; 데이터와 추가 &lt;a href=&quot;view.rendering#adding-context-data&quot;&gt;템플릿 컨텍스트를&lt;/a&gt; 혼합하여 해당 템플릿에서 HTML을 빌드 하는 강력한 렌더링 방법을 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="0137ef16418ae4c49f9f1f317e91260e81437ab0" translate="yes" xml:space="preserve">
          <source>The Marionette classes accept an &lt;code&gt;options&lt;/code&gt; property in the class definition which is merged with the &lt;code&gt;options&lt;/code&gt; argument passed at instantiation. The values from the passed in &lt;code&gt;options&lt;/code&gt; overrides the property values.</source>
          <target state="translated">Marionette 클래스 는 클래스 정의에서 &lt;code&gt;options&lt;/code&gt; 특성을 허용하며, 이는 인스턴스화시 전달 된 &lt;code&gt;options&lt;/code&gt; 인수 와 병합됩니다 . 전달 된 &lt;code&gt;options&lt;/code&gt; 의 값이 특성 값 을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="a55837c7720fbf867db167658c5fcb179733965f" translate="yes" xml:space="preserve">
          <source>The Request API is also able to return values, making it extremely useful for accessing objects that would be otherwise difficult to access. As an example, let's assume we attach the currently logged-in user to the &lt;code&gt;Application&lt;/code&gt; object and we want to know if they're still logged-in.</source>
          <target state="translated">요청 API는 또한 값을 리턴 할 수 있으므로 액세스가 어려운 오브젝트에 액세스하는 데 매우 유용합니다. 예를 들어, 현재 로그인 한 사용자를 &lt;code&gt;Application&lt;/code&gt; 개체에 연결하고 여전히 로그인되어 있는지 알고 싶다고 가정하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="5986d508782ad23f2e10218073b114c2b6015d8c" translate="yes" xml:space="preserve">
          <source>The Request API provides a uniform way for unrelated parts of the system to communicate with each other. For example, displaying notifications in response to system activity. To attach a listener to a request channel, use &lt;code&gt;reply&lt;/code&gt; or &lt;code&gt;replyOnce&lt;/code&gt; to attach a listener that immediately detaches after one call.</source>
          <target state="translated">요청 API는 시스템의 관련되지 않은 부분이 서로 통신 할 수있는 균일 한 방법을 제공합니다. 예를 들어, 시스템 활동에 대한 알림을 표시합니다. 리스너를 요청 채널에 연결하려면 &lt;code&gt;reply&lt;/code&gt; 또는 &lt;code&gt;replyOnce&lt;/code&gt; 를 사용하여 한 번의 호출 후 즉시 분리되는 리스너를 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="e3d6276f80be588f8add54d5d33c4b4b8c97a1f9" translate="yes" xml:space="preserve">
          <source>The UI attribute can be useful when setting region selectors - simply use the &lt;code&gt;@ui.&lt;/code&gt; prefix:</source>
          <target state="translated">영역 선택기를 설정할 때 UI 속성이 유용 할 수 있습니다 &lt;code&gt;@ui.&lt;/code&gt; 간단히 @ui 를 사용하십시오 . 접두사:</target>
        </trans-unit>
        <trans-unit id="739193568c22c106f043535e1b12bfc0861dea98" translate="yes" xml:space="preserve">
          <source>The UI attribute is especially useful when setting handlers in the &lt;a href=&quot;#view-events&quot;&gt;&lt;code&gt;events&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#view-triggers&quot;&gt;&lt;code&gt;triggers&lt;/code&gt;&lt;/a&gt; objects - simply use the &lt;code&gt;@ui.&lt;/code&gt; prefix:</source>
          <target state="translated">UI 속성은 &lt;a href=&quot;#view-events&quot;&gt; &lt;code&gt;events&lt;/code&gt; &lt;/a&gt; 에서 핸들러를 설정 하고 객체를 &lt;a href=&quot;#view-triggers&quot;&gt; &lt;code&gt;triggers&lt;/code&gt; &lt;/a&gt; 할 때 특히 유용합니다 &lt;code&gt;@ui.&lt;/code&gt; 간단히 @ui 를 사용하십시오 . 접두사:</target>
        </trans-unit>
        <trans-unit id="bbae14c43606489114b8810c4a90189209dfccd4" translate="yes" xml:space="preserve">
          <source>The View + Behavior initialize process is as follows:</source>
          <target state="translated">View + Behavior 초기화 프로세스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8ac609435b8aac094d8eb641475db910f924658a" translate="yes" xml:space="preserve">
          <source>The arguments for a number of lifecycle events were changed. For consistency, all events will now receive the view that is emitting the event as the first argument. See the &lt;a href=&quot;view.lifecycle&quot;&gt;documentation for view lifecycles&lt;/a&gt; for more complete information.</source>
          <target state="translated">여러 수명주기 이벤트에 대한 인수가 변경되었습니다. 일관성을 유지하기 위해 모든 이벤트는 이제 첫 번째 인수로 이벤트를 내보내는보기를 수신합니다. 자세한 내용은 &lt;a href=&quot;view.lifecycle&quot;&gt;라이프 사이클보기 설명서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="099979b41d8c9df97e94607dd7952442ad2b1112" translate="yes" xml:space="preserve">
          <source>The attached state is maintained when attaching a view with a &lt;code&gt;Region&lt;/code&gt; or as a child of a &lt;code&gt;CollectionView&lt;/code&gt; or during &lt;a href=&quot;#instantiating-a-view&quot;&gt;view instantiation&lt;/a&gt;. If a view is attached by other means like &lt;code&gt;$.append&lt;/code&gt; [&lt;code&gt;isAttached&lt;/code&gt;] may not reflect the actual state of attachment.</source>
          <target state="translated">연결된 상태는 &lt;code&gt;Region&lt;/code&gt; 을 사용 하여 뷰를 연결 하거나 &lt;code&gt;CollectionView&lt;/code&gt; 의 자식으로 또는 &lt;a href=&quot;#instantiating-a-view&quot;&gt;뷰 인스턴스화&lt;/a&gt; 중에 유지됩니다 . &lt;code&gt;$.append&lt;/code&gt; [ &lt;code&gt;isAttached&lt;/code&gt; ] 와 같은 다른 방법으로 뷰를 첨부 하면 실제 첨부 파일 상태를 반영하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdc733af5f883ffa3ebbfbb9d10d3be961c473d0" translate="yes" xml:space="preserve">
          <source>The biggest change to templates is renaming &lt;code&gt;templateHelpers&lt;/code&gt; to &lt;code&gt;templateContext&lt;/code&gt; - the aim is to be more in-line with terminology from other frameworks.</source>
          <target state="translated">템플릿에 가장 큰 변화가 이름을 변경한다 &lt;code&gt;templateHelpers&lt;/code&gt; 을 에 &lt;code&gt;templateContext&lt;/code&gt; - 목적이되고 더 인라인 다른 프레임 워크에서 용어.</target>
        </trans-unit>
        <trans-unit id="79a45de3719f21d6d57f18fa1986c14956afc310" translate="yes" xml:space="preserve">
          <source>The channel is accessible everywhere in your application. Simply import Radio and call &lt;code&gt;channel()&lt;/code&gt; to add listeners, fire callbacks, or send requests.</source>
          <target state="translated">채널은 애플리케이션의 모든 곳에서 액세스 할 수 있습니다. 라디오와 호출 &lt;code&gt;channel()&lt;/code&gt; 을 가져와 청취자를 추가하거나 콜백을 보내거나 요청을 보내기 만하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="52f7e305fff12429da8f792d201716d42b9485da" translate="yes" xml:space="preserve">
          <source>The container object borrows several functions from &lt;a href=&quot;http://underscorejs.org/&quot;&gt;Underscore.js&lt;/a&gt;, to provide iterators and other collection functions, including:</source>
          <target state="translated">컨테이너 객체는 &lt;a href=&quot;http://underscorejs.org/&quot;&gt;Underscore.js&lt;/a&gt; 에서 여러 함수를 빌려 다음 과 같은 반복자 및 기타 수집 함수를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="422fcccded4d3a1acac0752e24bacd4f5c898fef" translate="yes" xml:space="preserve">
          <source>The current default renderer is essentially the following:</source>
          <target state="translated">현재 기본 렌더러는 기본적으로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8d39866a0a2d8ddac50198fee4ca4f50dd6d867c" translate="yes" xml:space="preserve">
          <source>The default API</source>
          <target state="translated">기본 API</target>
        </trans-unit>
        <trans-unit id="3ec69d3b3d3cb853697ffcfd384244694d4383c1" translate="yes" xml:space="preserve">
          <source>The default Marionette renders return the HTML as a string. This string is passed to the view's &lt;code&gt;attachElContents&lt;/code&gt; method which in turn uses the DOM API's &lt;a href=&quot;dom.api#setcontentsel-html&quot;&gt;&lt;code&gt;setContents&lt;/code&gt;&lt;/a&gt;. to set the contents of the view's &lt;code&gt;el&lt;/code&gt; with DOM from the string.</source>
          <target state="translated">기본 Marionette 렌더링은 HTML을 문자열로 반환합니다. 이 문자열은 뷰의 &lt;code&gt;attachElContents&lt;/code&gt; 메소드 로 전달되며,이 메소드는 DOM API의 &lt;a href=&quot;dom.api#setcontentsel-html&quot;&gt; &lt;code&gt;setContents&lt;/code&gt; 를&lt;/a&gt; 사용합니다 . 문자열에서 DOM으로 뷰 &lt;code&gt;el&lt;/code&gt; 의 내용을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="04d354e636a55e75e951a0d4fc1067f5a0c913ea" translate="yes" xml:space="preserve">
          <source>The default behavior for calling &lt;code&gt;preventDefault&lt;/code&gt; can be changed with the feature flag &lt;a href=&quot;features#triggerspreventdefault&quot;&gt;&lt;code&gt;triggersPreventDefault&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;stopPropagation&lt;/code&gt; can be changed with the feature flag &lt;a href=&quot;features#triggersstoppropagating&quot;&gt;&lt;code&gt;triggersStopPropagation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">전화의 기본 동작 &lt;code&gt;preventDefault&lt;/code&gt; 기능 플래그로 변경 될 수 있습니다 &lt;a href=&quot;features#triggerspreventdefault&quot;&gt; &lt;code&gt;triggersPreventDefault&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;stopPropagation&lt;/code&gt; 기능 플래그로 변경 될 수 있습니다 &lt;a href=&quot;features#triggersstoppropagating&quot;&gt; &lt;code&gt;triggersStopPropagation&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6518725722a1c9f38e1aad4eade21272ed3e2687" translate="yes" xml:space="preserve">
          <source>The default export has been deprecated</source>
          <target state="translated">기본 내보내기는 더 이상 사용되지 않습니다</target>
        </trans-unit>
        <trans-unit id="3c242812c91f3598f4d058afda4667d330c44a50" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;code&gt;attachHtml&lt;/code&gt; is essentially:</source>
          <target state="translated">&lt;code&gt;attachHtml&lt;/code&gt; 의 기본 구현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5e513565df16103d6ecb0d0b774ca388181650b4" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;code&gt;isEmpty&lt;/code&gt; returns &lt;code&gt;!this.children.length&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;isEmpty&lt;/code&gt; 의 기본 구현은 &lt;code&gt;!this.children.length&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="805ed0b4cf0cee3a6a86975cc3cdbd2837877e43" translate="yes" xml:space="preserve">
          <source>The default implementation of &lt;code&gt;removeView&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;removeView&lt;/code&gt; 의 기본 구현은 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="65d53047202c89985406a9173de553c4b793a165" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;childViewEventPrefix&lt;/code&gt; is &lt;code&gt;childview&lt;/code&gt;. Setting this property to &lt;code&gt;false&lt;/code&gt; will disable &lt;a href=&quot;#event-bubbling&quot;&gt;automatic event bubbling&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;childViewEventPrefix&lt;/code&gt; 의 기본값 은 &lt;code&gt;childview&lt;/code&gt; 입니다. 이 속성을 &lt;code&gt;false&lt;/code&gt; 로 설정하면 &lt;a href=&quot;#event-bubbling&quot;&gt;자동 이벤트 버블 링&lt;/a&gt; 이 비활성화 됩니다 .</target>
        </trans-unit>
        <trans-unit id="5d7ab98e1bf53b22397ec3d8b8c3305c1a60b061" translate="yes" xml:space="preserve">
          <source>The dependency on &lt;code&gt;Backbone.Babysitter&lt;/code&gt; has been removed in favour of an in-built implementation that is maintained within the main Marionette codebase.</source>
          <target state="translated">&lt;code&gt;Backbone.Babysitter&lt;/code&gt; 에 대한 종속성 은 기본 마리오네트 코드베이스 내에서 유지되는 내장 구현을 위해 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="959df2ce88bca1c688824e34f2c2651d65628841" translate="yes" xml:space="preserve">
          <source>The easiest way to see how to use the &lt;code&gt;Behavior&lt;/code&gt; class is to take an example view and factor out common behavior to be shared across other views.</source>
          <target state="translated">&lt;code&gt;Behavior&lt;/code&gt; 클래스 를 사용하는 방법을 확인하는 가장 쉬운 방법 은 예제보기 를 사용하여 다른보기와 공유 할 공통 동작을 제외시키는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f1980f8ab0dd02661e150ffbd89280f90863535c" translate="yes" xml:space="preserve">
          <source>The empty events will receive the region instance, the view leaving the region.</source>
          <target state="translated">빈 이벤트는 리전 인스턴스를 수신하며 뷰는 리전을 떠납니다.</target>
        </trans-unit>
        <trans-unit id="c4816266e56c07ce9c4592d98f0a3def608fbcff" translate="yes" xml:space="preserve">
          <source>The example will show an message when the region is empty:</source>
          <target state="translated">이 예에서는 영역이 비어있을 때 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="98fd9d3ebfba3c8909662ee8117f9e1c611676ed" translate="yes" xml:space="preserve">
          <source>The exception is views with &lt;a href=&quot;dom.prerendered&quot;&gt;prerendered content&lt;/a&gt;. In the case that the view is instantiated rendered, child views are best managed in the view's &lt;a href=&quot;common#initialize&quot;&gt;&lt;code&gt;initialize&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;dom.prerendered&quot;&gt;사전 렌더링 된 컨텐츠&lt;/a&gt; 가있는보기는 예외입니다 . 뷰가 인스턴스화되어 렌더링되는 경우 하위 뷰는 뷰의 &lt;a href=&quot;common#initialize&quot;&gt; &lt;code&gt;initialize&lt;/code&gt; &lt;/a&gt; 에서 가장 잘 관리됩니다 .</target>
        </trans-unit>
        <trans-unit id="41fa9e1df58bcd4b1d6fc7a05ad00b0fd5ce2e47" translate="yes" xml:space="preserve">
          <source>The first parameter is the &lt;code&gt;entity&lt;/code&gt; (Backbone.Model, Backbone.Collection or any object that has Backbone.Events mixed in) to bind the events from.</source>
          <target state="translated">첫 번째 매개 변수는 이벤트를 바인딩 할 &lt;code&gt;entity&lt;/code&gt; (Backbone.Model, Backbone.Collection 또는 Backbone.Events가 혼합 된 모든 개체)입니다.</target>
        </trans-unit>
        <trans-unit id="529b29725de4a1eaf854a2b0b1490d5f2a547c50" translate="yes" xml:space="preserve">
          <source>The first parameter is the HTML buffer, and the second parameter is the expected container for the children which by default equates to the view's &lt;code&gt;el&lt;/code&gt; unless a &lt;a href=&quot;#defining-the-childViewContainer&quot;&gt;&lt;code&gt;childViewContainer&lt;/code&gt;&lt;/a&gt; is set.</source>
          <target state="translated">첫 번째 매개 변수는 HTML 버퍼이고 두 번째 매개 변수는 &lt;a href=&quot;#defining-the-childViewContainer&quot;&gt; &lt;code&gt;childViewContainer&lt;/code&gt; &lt;/a&gt; 가 설정되어 있지 않으면 기본적으로보기의 &lt;code&gt;el&lt;/code&gt; 과 같은 자식에 필요한 컨테이너입니다 .</target>
        </trans-unit>
        <trans-unit id="b6ab9c078f4d5ea1375f5dd8cded496293bb948a" translate="yes" xml:space="preserve">
          <source>The first parameter, &lt;code&gt;channel&lt;/code&gt;, is an instance from &lt;code&gt;Radio&lt;/code&gt;.</source>
          <target state="translated">첫 번째 매개 변수 인 &lt;code&gt;channel&lt;/code&gt; 은 &lt;code&gt;Radio&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="4a6da69bea142801bb642323e2f1e692d9c2d6a8" translate="yes" xml:space="preserve">
          <source>The following events, with their accompanying &lt;code&gt;before:&lt;/code&gt; event were changed and may need to be updated:</source>
          <target state="translated">다음과 같은 이벤트와 함께 &lt;code&gt;before:&lt;/code&gt; 이벤트가 변경되어 업데이트해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ceb941c8e8bce24025e8a26766f0cd85362d43c1" translate="yes" xml:space="preserve">
          <source>The following simplistic example will add an unmanaged view at the 5th index and remove it prior to any changes to the &lt;code&gt;children&lt;/code&gt;. In a real world scenario it will likely be more complicated to keep track of which view to remove in the &lt;code&gt;onBeforeSort&lt;/code&gt;.</source>
          <target state="translated">다음의 간단한 예는 5 번째 인덱스에서 관리되지 않는보기를 추가하고 &lt;code&gt;children&lt;/code&gt; 변경하기 전에 제거합니다 . 실제 시나리오에서는 &lt;code&gt;onBeforeSort&lt;/code&gt; 에서 제거 할 뷰를 추적하는 것이 더 복잡 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1b1ebe6488199c6e5f7598a91b01b1086f2898d8" translate="yes" xml:space="preserve">
          <source>The goal will be to add the unmanaged views after other views are added and to remove any unmanaged views prior to any managed &lt;code&gt;children&lt;/code&gt; changes. To do so you must understand which &lt;a href=&quot;events.class#collectionview-events&quot;&gt;&lt;code&gt;CollectionView&lt;/code&gt; event&lt;/a&gt; will occur prior to changes to the &lt;code&gt;children&lt;/code&gt; for your particular use case. By default a &lt;code&gt;CollectionView&lt;/code&gt; sorts according to the &lt;code&gt;collection&lt;/code&gt; sort, so unless &lt;code&gt;viewComparator&lt;/code&gt; is disabled, the best event for removing unmanaged views is the &lt;a href=&quot;events.class#sort-and-beforesort-events&quot;&gt;&lt;code&gt;before:sort&lt;/code&gt; event&lt;/a&gt;, but if &lt;code&gt;viewComparator&lt;/code&gt; is false the next event to consider is the &lt;a href=&quot;events.class#filter-and-beforefilter-events&quot;&gt;&lt;code&gt;before:filter&lt;/code&gt; event&lt;/a&gt; if your &lt;code&gt;CollectionView&lt;/code&gt; has a &lt;code&gt;viewFilter&lt;/code&gt;, otherwise the &lt;a href=&quot;events.class#renderchildren-and-beforerenderchildren-events&quot;&gt;&lt;code&gt;before:render:children&lt;/code&gt; event&lt;/a&gt; is ideal.</source>
          <target state="translated">다른보기를 추가 한 후 관리되지 않는보기를 추가하고 관리되는 &lt;code&gt;children&lt;/code&gt; 변경 하기 전에 관리되지 않는보기를 제거하는 것이 목표입니다 . 그렇게하려면 특정 유스 케이스 의 &lt;code&gt;children&lt;/code&gt; 을 변경하기 전에 어떤 &lt;a href=&quot;events.class#collectionview-events&quot;&gt; &lt;code&gt;CollectionView&lt;/code&gt; 이벤트&lt;/a&gt; 가 발생 하는지 이해해야합니다 . 기본적으로 &lt;code&gt;CollectionView&lt;/code&gt; 는 받는 사람에 따라 정렬 &lt;code&gt;collection&lt;/code&gt; 종류, 그렇게하지 않는 &lt;code&gt;viewComparator&lt;/code&gt; 이 비활성화되어 관리되지 않는 뷰를 제거하기위한 최고의 이벤트입니다 &lt;a href=&quot;events.class#sort-and-beforesort-events&quot;&gt; &lt;code&gt;before:sort&lt;/code&gt; &lt;/a&gt; 이벤트가 있지만, 경우 &lt;code&gt;viewComparator&lt;/code&gt; 이 거짓 고려해야 할 다음 이벤트는 것입니다 &lt;a href=&quot;events.class#filter-and-beforefilter-events&quot;&gt; &lt;code&gt;before:filter&lt;/code&gt; &lt;/a&gt; 이벤트 귀하의 경우 &lt;code&gt;CollectionView&lt;/code&gt; &lt;code&gt;viewFilter&lt;/code&gt; 가 있으면 그렇지 않으면 &lt;a href=&quot;events.class#renderchildren-and-beforerenderchildren-events&quot;&gt; &lt;code&gt;before:render:children&lt;/code&gt; 이벤트&lt;/a&gt; 가 이상적입니다.</target>
        </trans-unit>
        <trans-unit id="ad4daed731fea2d11df7cd269862cae7394e3cb7" translate="yes" xml:space="preserve">
          <source>The main difference between Babysitter and the Marionette implementation is the removal of &lt;code&gt;.call&lt;/code&gt; and &lt;code&gt;.apply&lt;/code&gt; on &lt;code&gt;CollectionView.children&lt;/code&gt;. Instead you should use &lt;code&gt;.invoke&lt;/code&gt; or &lt;a href=&quot;marionette.collectionview#collectionview-childview-iterators-and-collection-functions&quot;&gt;any of the methods provided&lt;/a&gt;.</source>
          <target state="translated">베이비 및 네트 구현의 주요 차이점은 제거이다 &lt;code&gt;.call&lt;/code&gt; 및 &lt;code&gt;.apply&lt;/code&gt; 에 &lt;code&gt;CollectionView.children&lt;/code&gt; . 대신 &lt;code&gt;.invoke&lt;/code&gt; 또는 &lt;a href=&quot;marionette.collectionview#collectionview-childview-iterators-and-collection-functions&quot;&gt;제공된 메소드&lt;/a&gt; 를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f6a9c8db74fab50dc7aeea4f3bfac61aa377a9c7" translate="yes" xml:space="preserve">
          <source>The major benefit of the &lt;code&gt;triggers&lt;/code&gt; attribute over &lt;code&gt;events&lt;/code&gt; is that triggered events can bubble up to any parent views. For a full explanation of bubbling events and listening to child events, see the &lt;a href=&quot;events#event-bubbling&quot;&gt;event bubbling documentation&lt;/a&gt;..</source>
          <target state="translated">&lt;code&gt;events&lt;/code&gt; 에 대한 &lt;code&gt;triggers&lt;/code&gt; 속성 의 주요 이점은 트리거 된 이벤트가 모든 상위보기로 버블 링 될 수 있다는 것입니다. 버블 링 이벤트 및 하위 이벤트 청취에 대한 전체 설명은 &lt;a href=&quot;events#event-bubbling&quot;&gt;이벤트 버블 링 문서를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d489d7f69cbde7ace2de4429ca41334e4d578d6" translate="yes" xml:space="preserve">
          <source>The major difference between &lt;code&gt;Backbone.trigger&lt;/code&gt; and &lt;code&gt;triggerMethod&lt;/code&gt; is that &lt;code&gt;triggerMethod&lt;/code&gt; can fire specially named events on the instance. For example, a view that has been rendered will iternally fire &lt;code&gt;view.triggerMethod('render')&lt;/code&gt; and call &lt;code&gt;onRender&lt;/code&gt; - providing a handy way to add behavior to your views.</source>
          <target state="translated">가장 큰 차이점 &lt;code&gt;Backbone.trigger&lt;/code&gt; 및 &lt;code&gt;triggerMethod&lt;/code&gt; 는 점이다 &lt;code&gt;triggerMethod&lt;/code&gt; 이 인스턴스에서 특수라는 이름의 이벤트를 발생 할 수 있습니다. 예를 들어 렌더링 된 뷰는 it.ally &lt;code&gt;view.triggerMethod('render')&lt;/code&gt; 를 실행 하고 &lt;code&gt;onRender&lt;/code&gt; 를 호출 하여 뷰에 동작을 추가하는 편리한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="133c37afb503147fb3e50c32b14a30e97488de54" translate="yes" xml:space="preserve">
          <source>The most noticeable change to Marionette 3 is the consolidation of &lt;code&gt;ItemView&lt;/code&gt; and &lt;code&gt;LayoutView&lt;/code&gt; into &lt;code&gt;View&lt;/code&gt;. In addition, &lt;code&gt;CompositeView&lt;/code&gt; has been removed and its functionality merged into &lt;code&gt;CollectionView&lt;/code&gt; and &lt;code&gt;View&lt;/code&gt;.</source>
          <target state="translated">Marionette 3에서 가장 눈에 띄는 변경 사항은 &lt;code&gt;ItemView&lt;/code&gt; 및 &lt;code&gt;LayoutView&lt;/code&gt; 를 &lt;code&gt;View&lt;/code&gt; 로 통합 한 것입니다 . 또한 &lt;code&gt;CompositeView&lt;/code&gt; 가 제거되었으며 해당 기능이 &lt;code&gt;CollectionView&lt;/code&gt; 및 &lt;code&gt;View&lt;/code&gt; 로 병합되었습니다 .</target>
        </trans-unit>
        <trans-unit id="73d4be0d8b4f26599336e9810d8fd61401b0cb44" translate="yes" xml:space="preserve">
          <source>The primary use case for a &lt;code&gt;CollectionView&lt;/code&gt; is maintaining child views to match the state of a Backbone Collection. By default children will be added or removed to match the models within the collection. However a &lt;code&gt;CollectionView&lt;/code&gt; can have children in addition to, or instead of, views matching the &lt;code&gt;collection&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CollectionView&lt;/code&gt; 의 기본 유스 케이스 는 백본 콜렉션의 상태와 일치하도록 하위보기를 유지 보수하는 것입니다. 기본적으로 하위는 컬렉션 내의 모델과 일치하도록 추가되거나 제거됩니다. 그러나 &lt;code&gt;CollectionView&lt;/code&gt; 는 &lt;code&gt;collection&lt;/code&gt; 과 일치하는 뷰 외에 또는 대신에 자식을 가질 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="287128e38e7570ee1629b758ae1ae59e47ca003e" translate="yes" xml:space="preserve">
          <source>The recommended solution is to choose a solution like a &lt;a href=&quot;installation&quot;&gt;package manager&lt;/a&gt; to allow for ES6 module importing of the library. The best way to import is using name imports.</source>
          <target state="translated">ES6 모듈을 라이브러리로 가져올 수 있도록 &lt;a href=&quot;installation&quot;&gt;패키지 관리자&lt;/a&gt; 와 같은 솔루션을 선택하는 것이 좋습니다 . 가져 오는 가장 좋은 방법은 이름 가져 오기를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="9ad3e77d086f48627bee55b2b19d7f3b97db9faf" translate="yes" xml:space="preserve">
          <source>The renderer can also be customized separately on any extended View.</source>
          <target state="translated">렌더러는 확장 된보기에서 개별적으로 사용자 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2ec9f1c68c62f096a36166c80b1b827e664948a" translate="yes" xml:space="preserve">
          <source>The same can be done with &lt;a href=&quot;marionette.collectionview&quot;&gt;&lt;code&gt;CollectionView&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;marionette.collectionview&quot;&gt; &lt;code&gt;CollectionView&lt;/code&gt; 를 사용&lt;/a&gt; 하여 동일한 작업을 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8751c2f368891548e540cb0c78c7fdc0186400d5" translate="yes" xml:space="preserve">
          <source>The second parameter is a hash of &lt;code&gt;{ 'event:name': 'eventHandler' }&lt;/code&gt; configuration. A function can be supplied instead of a string handler name.</source>
          <target state="translated">두 번째 매개 변수는 &lt;code&gt;{ 'event:name': 'eventHandler' }&lt;/code&gt; 구성 의 해시입니다 . 문자열 핸들러 이름 대신 함수를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbb084998ee3a1c69b538065a59b518345c19bf9" translate="yes" xml:space="preserve">
          <source>The second parameter is a hash of &lt;code&gt;{ 'event:name': 'eventHandler' }&lt;/code&gt; configuration. A function can be supplied instead of a string handler name. If the second paramater is not supplied, all listeners are removed.</source>
          <target state="translated">두 번째 매개 변수는 &lt;code&gt;{ 'event:name': 'eventHandler' }&lt;/code&gt; 구성 의 해시입니다 . 문자열 핸들러 이름 대신 함수를 제공 할 수 있습니다. 두 번째 매개 변수가 제공되지 않으면 모든 리스너가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="51deac99bee4ab95a0a993feaea619e4412adcb5" translate="yes" xml:space="preserve">
          <source>The second parameter is a hash of &lt;code&gt;{ 'request:name': 'replyHandler' }&lt;/code&gt; configuration. A function can be supplied instead of a string handler name.</source>
          <target state="translated">두 번째 매개 변수는 &lt;code&gt;{ 'request:name': 'replyHandler' }&lt;/code&gt; 구성 의 해시입니다 . 문자열 핸들러 이름 대신 함수를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8bb9dc2f973292de5c263cf4913934a44ee2e09" translate="yes" xml:space="preserve">
          <source>The second parameter is a hash of &lt;code&gt;{ 'request:name': 'replyHandler' }&lt;/code&gt; configuration. A function can be supplied instead of a string handler name. If the second paramater is not supplied, all handlers are removed.</source>
          <target state="translated">두 번째 매개 변수는 &lt;code&gt;{ 'request:name': 'replyHandler' }&lt;/code&gt; 구성 의 해시입니다 . 문자열 핸들러 이름 대신 함수를 제공 할 수 있습니다. 두 번째 매개 변수가 제공되지 않으면 모든 핸들러가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="311e944b79bb74773ae1c0cb878be21c776082f0" translate="yes" xml:space="preserve">
          <source>The state of the view after the destroy is not attached and not rendered although the &lt;code&gt;el&lt;/code&gt; is not emptied.</source>
          <target state="translated">&lt;code&gt;el&lt;/code&gt; 비우지 않아도 파괴 후 뷰의 상태는 첨부되지 않고 렌더링 되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="790aa6b87dc63031b6dec0bd05d01080477f22f8" translate="yes" xml:space="preserve">
          <source>The traditional &lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;event handling system in Backbone&lt;/a&gt; is fully supported in Marionette. Marionette, however, provides an additional event API using the &lt;code&gt;triggerMethod&lt;/code&gt; method - the key difference between the two is that &lt;code&gt;triggerMethod&lt;/code&gt; automatically calls specially named event handlers.</source>
          <target state="translated">&lt;a href=&quot;http://backbonejs.org/#Events&quot;&gt;Backbone&lt;/a&gt; 의 전통적인 이벤트 처리 시스템 은 Marionette에서 완벽하게 지원됩니다. 그러나 Marionette는 &lt;code&gt;triggerMethod&lt;/code&gt; 메소드를 사용하여 추가 이벤트 API를 제공합니다 . 둘 사이의 주요 차이점은 &lt;code&gt;triggerMethod&lt;/code&gt; 가 특별히 명명 된 이벤트 핸들러를 자동으로 호출 한다는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="3c14cb5f54b35fc9f37f589021f11e88e975f1c3" translate="yes" xml:space="preserve">
          <source>The view &lt;code&gt;events&lt;/code&gt; attribute binds DOM events to functions or methods on the view. The simplest form is to reference a method on the view:</source>
          <target state="translated">view &lt;code&gt;events&lt;/code&gt; 속성은 DOM 이벤트를 뷰의 함수 또는 메소드에 바인딩합니다. 가장 간단한 형태는 뷰에서 메소드를 참조하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="58340235642a5346fa68bada6e26498073f152ee" translate="yes" xml:space="preserve">
          <source>The view &lt;code&gt;triggers&lt;/code&gt; attribute binds DOM events to Marionette events that can be responded to at the view or parent level. For more information on events, see the &lt;a href=&quot;events&quot;&gt;events documentation&lt;/a&gt;. This section will just cover how to bind these events to views.</source>
          <target state="translated">view &lt;code&gt;triggers&lt;/code&gt; 속성은 DOM 이벤트를보기 또는 상위 레벨에서 응답 할 수있는 마리오네트 이벤트에 바인딩합니다. 이벤트에 대한 자세한 정보는 &lt;a href=&quot;events&quot;&gt;이벤트 문서를&lt;/a&gt; 참조하십시오 . 이 섹션에서는 이러한 이벤트를 뷰에 바인딩하는 방법 만 설명합니다.</target>
        </trans-unit>
        <trans-unit id="70d9c67a2cfba0d8c0f77a0e0f08ed77953f1b7e" translate="yes" xml:space="preserve">
          <source>The view &lt;code&gt;triggers&lt;/code&gt; attribute no longer passes an &lt;code&gt;options&lt;/code&gt; attribute to event handlers, instead passing the view instance that triggered the event.</source>
          <target state="translated">뷰 &lt;code&gt;triggers&lt;/code&gt; 속성은 더 이상 &lt;code&gt;options&lt;/code&gt; 속성을 이벤트 핸들러로 전달하지 않고 이벤트를 트리거 한 뷰 인스턴스를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="c3e096a25b70ca14be5a529d4e5c60471ffd1880" translate="yes" xml:space="preserve">
          <source>The view can be passed an existing &lt;code&gt;el&lt;/code&gt; either in the DOM (ie: &lt;code&gt;el: $('.foo-selector')&lt;/code&gt;) or in memory (ie: &lt;code&gt;el: $('&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;')&lt;/code&gt;) or most commonly, the view constructs its own &lt;code&gt;el&lt;/code&gt; at instantiation as &lt;a href=&quot;http://backbonejs.org/#View-el&quot;&gt;documented on backbonejs.org&lt;/a&gt;.</source>
          <target state="translated">뷰는 DOM (예 : &lt;code&gt;el: $('.foo-selector')&lt;/code&gt; ) 또는 메모리 (예 : &lt;code&gt;el: $('&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;')&lt;/code&gt; ) 또는 대부분 의 기존 &lt;code&gt;el&lt;/code&gt; 에 전달 될 수 있습니다 . 일반적으로 뷰 &lt;a href=&quot;http://backbonejs.org/#View-el&quot;&gt;는 backbonejs.org에 설명 된&lt;/a&gt; 대로 인스턴스화시 자체 &lt;code&gt;el&lt;/code&gt; 을 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="940981f1334c3f6dd3c58f3805deb6da3ba26025" translate="yes" xml:space="preserve">
          <source>The view states indicate whether the view is rendered, attached to the DOM, or destroyed.</source>
          <target state="translated">뷰 상태는 뷰가 렌더링되는지, DOM에 첨부되었는지 또는 파괴되는지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="720b3bed0b86c432fff973332c07deb747041d61" translate="yes" xml:space="preserve">
          <source>Then, from another view, instead of trying to find the User model. we simply &lt;code&gt;request&lt;/code&gt; it:</source>
          <target state="translated">그런 다음 다른보기에서 사용자 모델을 찾으려고 시도하지 마십시오. 우리는 간단히 &lt;code&gt;request&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="ad072c3b456ea1f81f656224c81566eedbb357b8" translate="yes" xml:space="preserve">
          <source>There are a number of changes to how regions behave - the biggest change being the removal of the ability to access regions as attributes</source>
          <target state="translated">영역의 동작 방식에 많은 변화가 있습니다. 가장 큰 변화는 영역으로 속성에 액세스 할 수있는 기능을 제거하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="19d5932d689f5b04a8ab78e4b148faa65d2b2002" translate="yes" xml:space="preserve">
          <source>There are a variety of possibilities for rendering with Marionette. If you are looking into alternatives from the default this may be a useful resource: &lt;a href=&quot;https://github.com/blikblum/marionette.renderers#renderers&quot;&gt;https://github.com/blikblum/marionette.renderers#renderers&lt;/a&gt;</source>
          <target state="translated">Marionette으로 렌더링 할 수있는 다양한 가능성이 있습니다. 기본값에서 대안을 찾고 있다면 이것이 유용한 리소스 일 수 있습니다 : &lt;a href=&quot;https://github.com/blikblum/marionette.renderers#renderers&quot;&gt;https://github.com/blikblum/marionette.renderers#renderers&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fec19987a53e73b766fb140314d03f07d5798f79" translate="yes" xml:space="preserve">
          <source>There are several properties, if passed, that will be attached directly to the instance: &lt;code&gt;collectionEvents&lt;/code&gt;, &lt;code&gt;events&lt;/code&gt;, &lt;code&gt;modelEvents&lt;/code&gt;, &lt;code&gt;triggers&lt;/code&gt;, &lt;code&gt;ui&lt;/code&gt;</source>
          <target state="translated">전달 된 경우 인스턴스에 직접 첨부되는 여러 특성이 있습니다. &lt;code&gt;collectionEvents&lt;/code&gt; , &lt;code&gt;events&lt;/code&gt; , &lt;code&gt;modelEvents&lt;/code&gt; , &lt;code&gt;triggers&lt;/code&gt; , &lt;code&gt;ui&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9827a71689525097f0a218ab781ab747744e7f8d" translate="yes" xml:space="preserve">
          <source>There are two ways to easily destroy a child view.</source>
          <target state="translated">자식보기를 쉽게 파괴하는 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6b0808f4bf68ae8963603a1e119e95d571f34ce8" translate="yes" xml:space="preserve">
          <source>There may be scenarios where you need to pass data from your parent collection view in to each of the childView instances. To do this, provide a &lt;code&gt;childViewOptions&lt;/code&gt; definition on your collection view as an object literal. This will be passed to the constructor of your childView as part of the &lt;code&gt;options&lt;/code&gt;.</source>
          <target state="translated">부모 컬렉션 뷰에서 각 childView 인스턴스로 데이터를 전달해야하는 시나리오가있을 수 있습니다. 이렇게하려면 컬렉션 뷰에 &lt;code&gt;childViewOptions&lt;/code&gt; 정의를 객체 리터럴로 제공하십시오. 이것은 &lt;code&gt;options&lt;/code&gt; 일부로 childView의 생성자에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="89338e7d4111bd9b88f090784717f359172dbcd4" translate="yes" xml:space="preserve">
          <source>These &lt;a href=&quot;common&quot;&gt;common utilities&lt;/a&gt; are available to all Marionette classes and exported so that the functionality can be used elsewhere. Each method has the same arguments as documented in &lt;a href=&quot;common&quot;&gt;common utilities&lt;/a&gt; except that the target of the method is added as the first argument.</source>
          <target state="translated">이 &lt;a href=&quot;common&quot;&gt;공통 유틸리티&lt;/a&gt; 는 모든 마리오네트 클래스에서 사용할 수 있으며 다른 곳에서 기능을 사용할 수 있도록 내보내집니다. 각 메소드에는 메소드 의 대상이 첫 번째 인수로 추가된다는 점을 제외하고 &lt;a href=&quot;common&quot;&gt;공통 유틸리티에&lt;/a&gt; 문서화 된 것과 동일한 인수가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b2ce6126937cf3a019b7d022f69097dd1dbab76d" translate="yes" xml:space="preserve">
          <source>These are breaking changes that need to be handled when migrating from Marionette v3 to v4</source>
          <target state="translated">Marionette v3에서 v4로 마이그레이션 할 때 처리해야하는 주요 변경 사항</target>
        </trans-unit>
        <trans-unit id="cd39c877b47ce8e22b1da00f17474d7c46944069" translate="yes" xml:space="preserve">
          <source>These changes are optional, although recommended to make future upgrades easy</source>
          <target state="translated">향후 업그레이드를 쉽게하기 위해 권장되지만 이러한 변경 사항은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="e5467d89df5456aa150beaf15cb9200c86e1d489" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:add:child&lt;/code&gt;) and after (&lt;code&gt;add:child&lt;/code&gt;) each child view is instantiated and added to the &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt;. These will fire once for each item in the attached collection or for any view added using &lt;a href=&quot;collectionview#adding-a-child-view&quot;&gt;&lt;code&gt;addChildView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 이벤트 화재 전에 ( &lt;code&gt;before:add:child&lt;/code&gt; )과 후 ( &lt;code&gt;add:child&lt;/code&gt; ) 각 아이 뷰가 인스턴스화에 추가됩니다 &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt; . 연결된 컬렉션의 각 항목 또는 &lt;a href=&quot;collectionview#adding-a-child-view&quot;&gt; &lt;code&gt;addChildView&lt;/code&gt; 를&lt;/a&gt; 사용하여 추가 된 모든보기에 대해 한 번씩 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="a0f9d7d82d3d49e6a155da4d014b82a18473541d" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:add:region&lt;/code&gt;) and after (&lt;code&gt;add:region&lt;/code&gt;) a region is added to a view. This event handler will receive the view instance, the region name string, and the region instance as event arguments. The region is fully instantated for both events.</source>
          <target state="translated">이러한 이벤트 는 영역이 뷰에 &lt;code&gt;before:add:region&lt;/code&gt; 되기 전 ( before : add : region ) 및 이후 ( &lt;code&gt;add:region&lt;/code&gt; )로 시작됩니다. 이 이벤트 핸들러는 뷰 인스턴스, 리젼 이름 문자열 및 리젼 인스턴스를 이벤트 인수로받습니다. 리전은 두 이벤트 모두에 대해 완전히 인스턴스화됩니다.</target>
        </trans-unit>
        <trans-unit id="a68e72411e65855d3ec0af1d8b6f92f4021c295a" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:destroy:children&lt;/code&gt;) and after (&lt;code&gt;destroy:children&lt;/code&gt;) destroying the children in the &lt;code&gt;CollectionView&lt;/code&gt;. These events will only fire if there are &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 이벤트 는 &lt;code&gt;CollectionView&lt;/code&gt; 에서 하위를 &lt;code&gt;before:destroy:children&lt;/code&gt; 하기 전 ( before : destroy : children ) 및 이후 ( &lt;code&gt;destroy:children&lt;/code&gt; )에서 발생합니다 . 이 이벤트는 &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt; 가있는 경우에만 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="3a10100f20fec626829e9286e90595370a3bd05b" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:empty&lt;/code&gt;) and after (&lt;code&gt;empty&lt;/code&gt;) emptying a region's view. These events will not fire if there is no view in the region, even if the region detaches DOM from within the region's &lt;code&gt;el&lt;/code&gt;. The view will not be detached or destroyed during &lt;code&gt;before:empty&lt;/code&gt;, but will be detached or destroyed during the &lt;code&gt;empty&lt;/code&gt;.</source>
          <target state="translated">이러한 이벤트 는 영역의 뷰를 비우기 전 ( &lt;code&gt;before:empty&lt;/code&gt; ) 및 후 ( &lt;code&gt;empty&lt;/code&gt; )로 시작됩니다. 영역이 영역의 &lt;code&gt;el&lt;/code&gt; 내에서 DOM을 분리하더라도 영역에보기가 없으면 이러한 이벤트가 실행되지 않습니다 . 뷰는 분리 또는 동안 파괴되지 않습니다 &lt;code&gt;before:empty&lt;/code&gt; ,하지만 동안 분리되거나 파괴 될 것이다 &lt;code&gt;empty&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d31a3f7832bd8c95900ffa6d62655e5457da98d1" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:filter&lt;/code&gt;) and after (&lt;code&gt;filter&lt;/code&gt;) filtering the children in the &lt;code&gt;CollectionView&lt;/code&gt;. This event will only fire if there are &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;collectionview#defining-the-viewfilter&quot;&gt;&lt;code&gt;viewFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 이벤트 는 &lt;code&gt;CollectionView&lt;/code&gt; 에서 자식을 필터링 하기 전 ( &lt;code&gt;before:filter&lt;/code&gt; ) 및 after ( &lt;code&gt;filter&lt;/code&gt; )에서 발생합니다 . 이 이벤트는 &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;collectionview#defining-the-viewfilter&quot;&gt; &lt;code&gt;viewFilter&lt;/code&gt; &lt;/a&gt; 가있는 경우에만 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="8c78d5d84a00e947011573e0c5baa0ad017cc374" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:remove:child&lt;/code&gt;) and after (&lt;code&gt;remove:child&lt;/code&gt;) each child view is removed to the &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt;. A view may be removed from the &lt;code&gt;children&lt;/code&gt; if it is destroyed, if it is removed from the &lt;code&gt;collection&lt;/code&gt; or if it is removed with &lt;a href=&quot;collectionview#removing-a-child-view&quot;&gt;&lt;code&gt;removeChildView&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이러한 이벤트 화재 전에 ( &lt;code&gt;before:remove:child&lt;/code&gt; ) 후와 ( &lt;code&gt;remove:child&lt;/code&gt; ) 각 아이 뷰가 제거되어 &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt; . 뷰 가 삭제 되거나 &lt;code&gt;collection&lt;/code&gt; 에서 제거 되거나 &lt;a href=&quot;collectionview#removing-a-child-view&quot;&gt; &lt;code&gt;removeChildView&lt;/code&gt; &lt;/a&gt; 로 제거 된 경우 &lt;code&gt;children&lt;/code&gt; 에서 뷰가 제거 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="206a7b4ce21be291634c4d6ae228503f39a0d201" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:remove:region&lt;/code&gt;) and after (&lt;code&gt;remove:region&lt;/code&gt;) a region is removed from a view. This event handler will receive the view instance, the region name string, and the region instance as event arguments. The region will be not be destroyed in the before event, but is destroyed by &lt;code&gt;remove:region&lt;/code&gt;.</source>
          <target state="translated">이러한 이벤트 는 영역이 뷰에서 &lt;code&gt;before:remove:region&lt;/code&gt; 되기 전 ( before : remove : region ) 및 이후 ( &lt;code&gt;remove:region&lt;/code&gt; ) 발생합니다. 이 이벤트 핸들러는 뷰 인스턴스, 리젼 이름 문자열 및 리젼 인스턴스를 이벤트 인수로받습니다. 지역은 이전 이벤트에서 파괴되지 않지만 &lt;code&gt;remove:region&lt;/code&gt; 에 의해 파괴됩니다 .</target>
        </trans-unit>
        <trans-unit id="05868598747b7dde8e17e0c3eb765e7ba8f44ffd" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:show&lt;/code&gt;) and after (&lt;code&gt;show&lt;/code&gt;) showing anything in a region. A view may or may not be rendered during &lt;code&gt;before:show&lt;/code&gt;, but a view will be rendered by &lt;code&gt;show&lt;/code&gt;.</source>
          <target state="translated">이러한 이벤트 는 한 지역의 모든 것을 &lt;code&gt;show&lt;/code&gt; &lt;code&gt;before:show&lt;/code&gt; 전 ( before : show ) 및 이후 ( show )로 시작됩니다. 뷰는 &lt;code&gt;before:show&lt;/code&gt; 동안 렌더링되거나 렌더링되지 않을 수 있지만,보기는 &lt;code&gt;show&lt;/code&gt; 로 렌더링됩니다 .</target>
        </trans-unit>
        <trans-unit id="35dbf1e830eb7dcc655878567246235e684c8f57" translate="yes" xml:space="preserve">
          <source>These events fire before (&lt;code&gt;before:sort&lt;/code&gt;) and after (&lt;code&gt;sort&lt;/code&gt;) sorting the children in the &lt;code&gt;CollectionView&lt;/code&gt;. These events will only fire if there are &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt;&lt;code&gt;children&lt;/code&gt;&lt;/a&gt; and a &lt;a href=&quot;collectionview#defining-the-viewcomparator&quot;&gt;&lt;code&gt;viewComparator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이러한 이벤트 는 &lt;code&gt;CollectionView&lt;/code&gt; 에서 하위를 정렬 하기 전 ( &lt;code&gt;before:sort&lt;/code&gt; ) 및 이후 ( &lt;code&gt;sort&lt;/code&gt; )로 시작 됩니다. 이 이벤트는 &lt;a href=&quot;collectionview#collectionviews-children&quot;&gt; &lt;code&gt;children&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;collectionview#defining-the-viewcomparator&quot;&gt; &lt;code&gt;viewComparator&lt;/code&gt; &lt;/a&gt; 가있는 경우에만 발생합니다</target>
        </trans-unit>
        <trans-unit id="0fe8533759ae215bdf626983e503059403d4102c" translate="yes" xml:space="preserve">
          <source>These events will be passed the &lt;code&gt;CollectionView&lt;/code&gt; instance and the array of views being attached. The views in the array may or may not be rendered or attached for &lt;code&gt;before:render:children&lt;/code&gt;, but will be rendered and attached by &lt;code&gt;render:children&lt;/code&gt;.</source>
          <target state="translated">이러한 이벤트는 &lt;code&gt;CollectionView&lt;/code&gt; 인스턴스와 연결된 뷰의 배열 로 전달됩니다 . 배열의 뷰는 &lt;code&gt;before:render:children&lt;/code&gt; 에 대해 렌더링되거나 첨부되지 않을 수 있지만 &lt;code&gt;render:children&lt;/code&gt; 에 의해 렌더링 및 첨부됩니다 .</target>
        </trans-unit>
        <trans-unit id="5937afe5507c70ec708f7c7cbb12c8731abe3b0b" translate="yes" xml:space="preserve">
          <source>These handlers work exactly as they do on &lt;code&gt;View&lt;/code&gt; - &lt;a href=&quot;marionette.view#events&quot;&gt;see the &lt;code&gt;View&lt;/code&gt; documentation&lt;/a&gt;</source>
          <target state="translated">그들은에서처럼이 핸들러는 정확히 작동 &lt;code&gt;View&lt;/code&gt; - &lt;a href=&quot;marionette.view#events&quot;&gt;투시 &lt;code&gt;View&lt;/code&gt; 문서를&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ee786a5450e0e79401b3f279c07f98e0abddbea7" translate="yes" xml:space="preserve">
          <source>These methods can be called directly on the container, to iterate and process the views held by the container.</source>
          <target state="translated">이러한 메소드는 컨테이너에서 직접 호출하여 컨테이너가 보유한보기를 반복하고 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="ed07dc914b77fbed9ee7e110890d676c358a3cc8" translate="yes" xml:space="preserve">
          <source>These methods provide ways for interacting with the view scoped to it's &lt;code&gt;el&lt;/code&gt;&lt;em&gt;and&lt;/em&gt; all of the view's children. To restate &lt;code&gt;events&lt;/code&gt; and &lt;code&gt;this.$()&lt;/code&gt; will query the view's template and all of the children. Marionette's added interfaces attempt to scope interactions with only the view's template, leaving the children to handle themselves.</source>
          <target state="translated">이러한 방법은 그것의에 범위 뷰와 상호 작용하기위한 방법을 제공 &lt;code&gt;el&lt;/code&gt; &lt;em&gt;과&lt;/em&gt; 뷰의 모든 아이를. &lt;code&gt;events&lt;/code&gt; 와 &lt;code&gt;this.$()&lt;/code&gt; 를 다시 말하면 뷰의 템플릿과 모든 자식을 쿼리합니다. Marionette의 추가 된 인터페이스는 뷰의 템플릿만으로 상호 작용의 범위를 지정하려고 시도하여 자식이 스스로 처리하도록합니다.</target>
        </trans-unit>
        <trans-unit id="905a9d285547ca4e125b88726a3e6fe262034a98" translate="yes" xml:space="preserve">
          <source>This can be HTML that's currently in the DOM:</source>
          <target state="translated">이것은 현재 DOM에있는 HTML 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3e5b62d35d3e78f2e59f752382d9021e941e693" translate="yes" xml:space="preserve">
          <source>This can be done for an individual view definition:</source>
          <target state="translated">개별 뷰 정의에 대해 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="26f25434db8e9e5e9dfd6ba32f612d50c1e2fd1f" translate="yes" xml:space="preserve">
          <source>This can be useful in unit testing your views.</source>
          <target state="translated">뷰를 단위 테스트 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="ee63954eb50a7ff41117f60d7444e7e855c237b6" translate="yes" xml:space="preserve">
          <source>This document covers the basic usage patterns and concepts across Marionette. This includes things like calling conventions, setting attributes, common option patterns etc.</source>
          <target state="translated">이 문서는 마리오네트 전체의 기본 사용 패턴과 개념을 다룹니다. 여기에는 호출 규칙, 속성 설정, 공통 옵션 패턴 등이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="192d63c01ded42950753083df2bff71cd96f9118" translate="yes" xml:space="preserve">
          <source>This does not work in Mn 3 - instead do:</source>
          <target state="translated">Mn 3에서는 작동하지 않습니다. 대신 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="5ce9c252ffc0ac6ede30c4a16cf8d23804072ef7" translate="yes" xml:space="preserve">
          <source>This doesn't have to be an underscore template, you can pass your own rendering function:</source>
          <target state="translated">밑줄 템플릿 일 필요는 없습니다. 자체 렌더링 기능을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0b7cc89d1678c12ac48ee7ac3eaed0361ab8744" translate="yes" xml:space="preserve">
          <source>This example will animate with a fade effect showing and hiding the view:</source>
          <target state="translated">이 예제는 뷰를 표시하거나 숨기고 페이드 효과로 애니메이션합니다.</target>
        </trans-unit>
        <trans-unit id="d412f7fadff19ea4a28e000a83ad0576e87a4704" translate="yes" xml:space="preserve">
          <source>This example will make a view slide down from the top of the screen instead of just appearing in place:</source>
          <target state="translated">이 예제는 화면이 제자리에 표시되지 않고 화면 상단에서 아래로 슬라이드되도록합니다.</target>
        </trans-unit>
        <trans-unit id="50a3f7340f21104eab7d46d737b558aff6881b86" translate="yes" xml:space="preserve">
          <source>This flag indicates whether &lt;a href=&quot;events#a-child-views-event-prefix&quot;&gt;&lt;code&gt;childViewEventPrefix&lt;/code&gt;&lt;/a&gt; for all views will return the default value of &lt;code&gt;'childview'&lt;/code&gt; or if it will return &lt;code&gt;false&lt;/code&gt; disabling &lt;a href=&quot;events#event-bubbling&quot;&gt;automatic event bubbling&lt;/a&gt;.</source>
          <target state="translated">이 플래그는 모든 뷰에 대한 &lt;a href=&quot;events#a-child-views-event-prefix&quot;&gt; &lt;code&gt;childViewEventPrefix&lt;/code&gt; &lt;/a&gt; 가 기본값 &lt;code&gt;'childview'&lt;/code&gt; 를 리턴하는지 아니면 &lt;code&gt;false&lt;/code&gt; &lt;a href=&quot;events#event-bubbling&quot;&gt;자동 이벤트 버블 링 사용&lt;/a&gt; 안함 을 리턴 하는지 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="d5203ffd0e21a1e978c29c3120832649b0621e80" translate="yes" xml:space="preserve">
          <source>This function is actually an alias of &lt;code&gt;setComparator(null, options)&lt;/code&gt;. It is useful for removing the comparator. &lt;code&gt;removeComparator&lt;/code&gt; also accepts &lt;code&gt;preventRender&lt;/code&gt; as a option.</source>
          <target state="translated">이 함수는 실제로 &lt;code&gt;setComparator(null, options)&lt;/code&gt; 의 별칭입니다 . 비교기를 제거 할 때 유용합니다. &lt;code&gt;removeComparator&lt;/code&gt; 는 또한 &lt;code&gt;preventRender&lt;/code&gt; 를 옵션으로 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="d322e1468e61203cf9107d3e564b01f6dfd04c14" translate="yes" xml:space="preserve">
          <source>This function is actually an alias of &lt;code&gt;setFilter(null, options)&lt;/code&gt;. It is useful for removing filters. &lt;code&gt;removeFilter&lt;/code&gt; also accepts &lt;code&gt;preventRender&lt;/code&gt; as a option.</source>
          <target state="translated">이 함수는 실제로 &lt;code&gt;setFilter(null, options)&lt;/code&gt; 의 별칭입니다 . 필터를 제거하는 데 유용합니다. &lt;code&gt;removeFilter&lt;/code&gt; 는 또한 &lt;code&gt;preventRender&lt;/code&gt; 를 옵션으로 허용 합니다.</target>
        </trans-unit>
        <trans-unit id="b7b960eb93429098fe98536b79caf14c2573b861" translate="yes" xml:space="preserve">
          <source>This function takes a single optional argument to pass along to the events.</source>
          <target state="translated">이 함수는 하나의 선택적 인수를 사용하여 이벤트에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="dc449c76d9b88e74f8dc83cb8db506e9b09e58b9" translate="yes" xml:space="preserve">
          <source>This gives us a clear definition of how this object interacts with the &lt;code&gt;star&lt;/code&gt; radio channel.</source>
          <target state="translated">이를 통해이 객체가 &lt;code&gt;star&lt;/code&gt; 라디오 채널 과 상호 작용하는 방식을 명확하게 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72798f7c2f7ab2dde9921f590ab4a56acf8b6fd8" translate="yes" xml:space="preserve">
          <source>This is a proxy for &lt;a href=&quot;marionette.region#detaching-existing-views&quot;&gt;region.detachView()&lt;/a&gt;</source>
          <target state="translated">이것은 &lt;a href=&quot;marionette.region#detaching-existing-views&quot;&gt;region.detachView ()&lt;/a&gt; 의 프록시입니다.</target>
        </trans-unit>
        <trans-unit id="972c3839e489caadb1842143226831ed41e1dff0" translate="yes" xml:space="preserve">
          <source>This is equivalent to a view's &lt;code&gt;showChildView&lt;/code&gt; which can be used as:</source>
          <target state="translated">이것은 다음과 같이 사용할 수 있는 뷰의 &lt;code&gt;showChildView&lt;/code&gt; 와 같습니다.</target>
        </trans-unit>
        <trans-unit id="9cb63f7616eeb220e5fd3f667125598ce54cded2" translate="yes" xml:space="preserve">
          <source>This is the ideal event to clean up any external DOM listeners such as &lt;code&gt;jQuery&lt;/code&gt; plugins that use DOM &lt;em&gt;within&lt;/em&gt; the &lt;code&gt;el&lt;/code&gt; of the view and not the view's &lt;code&gt;el&lt;/code&gt; itself.</source>
          <target state="translated">이 같은 외부 DOM 리스너를 정리하는 이상적인 이벤트입니다 &lt;code&gt;jQuery&lt;/code&gt; 그 사용 DOM 플러그인 &lt;em&gt;내에서 &lt;/em&gt; &lt;code&gt;el&lt;/code&gt; 뷰가 아닌 뷰의 &lt;code&gt;el&lt;/code&gt; 자체를.</target>
        </trans-unit>
        <trans-unit id="b0e5f05c4b15e118e8947ecb8799c3c96e9af5b5" translate="yes" xml:space="preserve">
          <source>This is the ideal event to setup any external DOM listeners such as &lt;code&gt;jQuery&lt;/code&gt; plugins that use DOM &lt;em&gt;within&lt;/em&gt; the &lt;code&gt;el&lt;/code&gt; of the view and not the view's &lt;code&gt;el&lt;/code&gt; itself.</source>
          <target state="translated">이 같은 외부 DOM 리스너 설정에 이상적인 이벤트입니다 &lt;code&gt;jQuery&lt;/code&gt; 그 사용 DOM 플러그인 &lt;em&gt;내에서 &lt;/em&gt; &lt;code&gt;el&lt;/code&gt; 뷰가 아닌 뷰의 &lt;code&gt;el&lt;/code&gt; 자체를.</target>
        </trans-unit>
        <trans-unit id="b32566e2eb9dc101f4a63cde392e0e80e1df646c" translate="yes" xml:space="preserve">
          <source>This means that the behavior can access the view during its own &lt;code&gt;initialize&lt;/code&gt; method. The view &lt;code&gt;initialize&lt;/code&gt; is called later with the information eventually injected by the behavior. The &lt;code&gt;initialize&lt;/code&gt; event is triggered on the behavior indicating that the view is fully initialized.</source>
          <target state="translated">이는 동작이 자체 &lt;code&gt;initialize&lt;/code&gt; 메소드 중에 뷰에 액세스 할 수 있음을 의미합니다 . 뷰 &lt;code&gt;initialize&lt;/code&gt; 는 나중에 동작에 의해 주입 된 정보와 함께 나중에 호출됩니다. &lt;code&gt;initialize&lt;/code&gt; 이벤트는 뷰가 완전히 초기화되고 있음을 나타내는 동작에 트리거됩니다.</target>
        </trans-unit>
        <trans-unit id="530a51c9baa5940fff7cc23323234a0bd0ce625a" translate="yes" xml:space="preserve">
          <source>This method accepts the child view instance to remove as its parameter. It returns the removed view;</source>
          <target state="translated">이 메서드는 자식 뷰 인스턴스를 매개 변수로 제거하도록 허용합니다. 제거 된보기를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2e77568be6ed5ea729fc2fd27e4254c4be930505" translate="yes" xml:space="preserve">
          <source>This method can be used to unbind callbacks from entities' events.</source>
          <target state="translated">이 메소드는 엔티티 이벤트에서 콜백을 바인드 해제하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8eed3ba63f1a9d96d2f647560e90b7f28be8f444" translate="yes" xml:space="preserve">
          <source>This method can be used to unbind radio reply handler from entities' events.</source>
          <target state="translated">이 메소드는 엔티티의 이벤트에서 무선 응답 핸들러를 바인드 해제하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c57cababedb4b4ad4da8e0e8f3d2dc07a936dee9" translate="yes" xml:space="preserve">
          <source>This method is called internally when rendering and &lt;a href=&quot;events.class#sort-and-beforesort-events&quot;&gt;&lt;code&gt;sort&lt;/code&gt; and &lt;code&gt;before:sort&lt;/code&gt; events&lt;/a&gt; will trigger.</source>
          <target state="translated">이 메소드는 렌더링 및 &lt;a href=&quot;events.class#sort-and-beforesort-events&quot;&gt; &lt;code&gt;sort&lt;/code&gt; 및 &lt;code&gt;before:sort&lt;/code&gt; 이벤트&lt;/a&gt; 가 트리거 될 때 내부적으로 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="7b1ef56eea78e6913715382044b81cdc716b0a3f" translate="yes" xml:space="preserve">
          <source>This method is the same as &lt;a href=&quot;#removing-a-child-view&quot;&gt;&lt;code&gt;removeChildView&lt;/code&gt;&lt;/a&gt; with the exception that the removed view is not destroyed.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#removing-a-child-view&quot;&gt; &lt;code&gt;removeChildView&lt;/code&gt; &lt;/a&gt; 와 동일하지만 제거 된 뷰가 삭제되지 않는다는 점이 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="840c60bf1427eab4d850ede1afe26e40384e0260" translate="yes" xml:space="preserve">
          <source>This method is used to bind a backbone &quot;entity&quot; to methods on a target object.</source>
          <target state="translated">이 메소드는 백본 &quot;엔티티&quot;를 대상 오브젝트의 메소드에 바인드하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="74b450068ef409936a3b562c3f2a7bd7cbdad480" translate="yes" xml:space="preserve">
          <source>This method is used to bind any object that works with the &lt;a href=&quot;#events-api&quot;&gt;&lt;code&gt;Backbone.Events&lt;/code&gt; API&lt;/a&gt;. This includes all Backbone classes, Marionette classes and &lt;a href=&quot;backbone.radio&quot;&gt;Radio&lt;/a&gt; channels.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#events-api&quot;&gt; &lt;code&gt;Backbone.Events&lt;/code&gt; API&lt;/a&gt; 와 작동하는 오브젝트를 바인드하는 데 사용됩니다 . 여기에는 모든 백본 클래스, 마리오네트 클래스 및 &lt;a href=&quot;backbone.radio&quot;&gt;라디오&lt;/a&gt; 채널 이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="fe0b54d654edf08438d6abd0e7d6983477d70d28" translate="yes" xml:space="preserve">
          <source>This method is used to bind any object that works with the &lt;a href=&quot;https://github.com/marionettejs/backbone.radio#backboneradiorequests&quot;&gt;&lt;code&gt;Backbone.Radio&lt;/code&gt; Request API&lt;/a&gt;. This includes &lt;a href=&quot;backbone.radio&quot;&gt;Radio&lt;/a&gt; channels.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;https://github.com/marionettejs/backbone.radio#backboneradiorequests&quot;&gt; &lt;code&gt;Backbone.Radio&lt;/code&gt; Request API&lt;/a&gt; 와 함께 작동하는 모든 객체를 바인딩하는 데 사용됩니다 . 여기에는 &lt;a href=&quot;backbone.radio&quot;&gt;라디오&lt;/a&gt; 채널 이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="e9c748d123f16e9660421f91878048a98329dcea" translate="yes" xml:space="preserve">
          <source>This method is used to bind backbone radio replies to methods on a target object.</source>
          <target state="translated">이 메소드는 백본 라디오 응답을 대상 오브젝트의 메소드에 바인딩하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="23968d8c6dfdd85d673d5e3d846fe63724f172b9" translate="yes" xml:space="preserve">
          <source>This method is used to unbind any object that works with the &lt;a href=&quot;#events-api&quot;&gt;&lt;code&gt;Backbone.Events&lt;/code&gt; API&lt;/a&gt;. This includes all Backbone classes, Marionette classes and &lt;a href=&quot;backbone.radio&quot;&gt;Radio&lt;/a&gt; channels.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#events-api&quot;&gt; &lt;code&gt;Backbone.Events&lt;/code&gt; API&lt;/a&gt; 와 작동하는 오브젝트를 바인드 해제하는 데 사용됩니다 . 여기에는 모든 백본 클래스, 마리오네트 클래스 및 &lt;a href=&quot;backbone.radio&quot;&gt;라디오&lt;/a&gt; 채널 이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="33e2b268faa06a470aa10ddcb5f5f57695e27492" translate="yes" xml:space="preserve">
          <source>This method is used to unbind any object that works with the &lt;a href=&quot;https://github.com/marionettejs/backbone.radio#backboneradiorequests&quot;&gt;&lt;code&gt;Backbone.Radio&lt;/code&gt; Request API&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;https://github.com/marionettejs/backbone.radio#backboneradiorequests&quot;&gt; &lt;code&gt;Backbone.Radio&lt;/code&gt; Request API&lt;/a&gt; 와 함께 작동하는 오브젝트를 바인드 해제하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="223fce5c9d3984926c716ce11f31d19fd0f45f89" translate="yes" xml:space="preserve">
          <source>This method will return a boolean indicating if the mnobject has been destroyed.</source>
          <target state="translated">이 메소드는 mnobject가 파괴되었는지 여부를 나타내는 부울을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="535a2b8bb028e92ae0337895ace879759010320b" translate="yes" xml:space="preserve">
          <source>This region can be useful for handling the &lt;a href=&quot;events.class#collectionview-emptyview-region-events&quot;&gt;EmptyView Region Events&lt;/a&gt;.</source>
          <target state="translated">이 지역은 &lt;a href=&quot;events.class#collectionview-emptyview-region-events&quot;&gt;EmptyView 지역 이벤트&lt;/a&gt; 를 처리하는 데 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="249fb2925ca74d22444aa15336645700cdae3452" translate="yes" xml:space="preserve">
          <source>This system is recursive, so it works for any deeply nested structure. The child views you show can render their own child views within their onRender callbacks!</source>
          <target state="translated">이 시스템은 재귀 적이므로 깊이 중첩 된 구조에서 작동합니다. 표시되는 자식보기는 onRender 콜백 내에서 자체 자식보기를 렌더링 할 수 있습니다!</target>
        </trans-unit>
        <trans-unit id="be6b99b7d57c8bab99f663adc457271908069614" translate="yes" xml:space="preserve">
          <source>This will destroy the view, clean up any event handlers and remove it from the DOM. When a region is emptied &lt;a href=&quot;events.class#empty-and-beforeempty-events&quot;&gt;empty events are triggered&lt;/a&gt;.</source>
          <target state="translated">이것은 뷰를 파괴하고 이벤트 핸들러를 정리하고 DOM에서 제거합니다. 영역이 비워지면 &lt;a href=&quot;events.class#empty-and-beforeempty-events&quot;&gt;비어있는 이벤트가 트리거&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="ba846a79bd719082b066bf9828c5cc12471dddd5" translate="yes" xml:space="preserve">
          <source>This will immediately render &lt;code&gt;RootView&lt;/code&gt; and fire the usual triggers such as &lt;code&gt;before:attach&lt;/code&gt; and &lt;code&gt;attach&lt;/code&gt; in addition to the &lt;code&gt;before:render&lt;/code&gt; and &lt;code&gt;render&lt;/code&gt; triggers.</source>
          <target state="translated">그러면 즉시 &lt;code&gt;RootView&lt;/code&gt; 가 &lt;code&gt;before:render&lt;/code&gt; 되고 before : render 및 &lt;code&gt;render&lt;/code&gt; 트리거 외에도 &lt;code&gt;before:attach&lt;/code&gt; 및 &lt;code&gt;attach&lt;/code&gt; 와 같은 일반적인 트리거가 실행됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
