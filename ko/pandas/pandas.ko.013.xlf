<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="pandas">
    <body>
      <group id="pandas">
        <trans-unit id="a59e3c25fd3b24018f82d6e78aab09df9da55afb" translate="yes" xml:space="preserve">
          <source>Tolerance may be a scalar value, which applies the same tolerance to all values, or list-like, which applies variable tolerance per element. List-like includes list, tuple, array, Series, and must be the same size as the index and its dtype must exactly match the index&amp;rsquo;s type.</source>
          <target state="translated">허용 오차는 모든 값에 동일한 허용 오차를 적용하는 스칼라 값이거나 요소마다 가변 허용 오차를 적용하는 목록과 유사합니다. List-like에는 list, tuple, array, Series가 포함되며 인덱스와 크기가 같아야하며 dtype은 인덱스 유형과 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="438d59c882dbce394d6e196af918874fe7506de0" translate="yes" xml:space="preserve">
          <source>Top-level conversions</source>
          <target state="translated">최상위 전환</target>
        </trans-unit>
        <trans-unit id="d0d74b49d7c639bfa0e6805ff9e03ecdb2ba614e" translate="yes" xml:space="preserve">
          <source>Top-level dealing with datetimelike</source>
          <target state="translated">datetimelike를 다루는 최상위 레벨</target>
        </trans-unit>
        <trans-unit id="c2b18ef89f62058c5b6e7a08484c550135bd39d8" translate="yes" xml:space="preserve">
          <source>Top-level dealing with intervals</source>
          <target state="translated">인터벌을 다루는 최상위 레벨</target>
        </trans-unit>
        <trans-unit id="c951f33494edd3fa05d83436cbe2244b7b8a92ba" translate="yes" xml:space="preserve">
          <source>Top-level evaluation</source>
          <target state="translated">최상위 평가</target>
        </trans-unit>
        <trans-unit id="e93d5371b962fddf006f4bda8d5be5ae4cd8c45e" translate="yes" xml:space="preserve">
          <source>Top-level factorize method that dispatches here.</source>
          <target state="translated">여기서 전달하는 최상위 factorize 메소드입니다.</target>
        </trans-unit>
        <trans-unit id="390318a195f1ca1dd21e9efb2596562c794c538c" translate="yes" xml:space="preserve">
          <source>Top-level isna.</source>
          <target state="translated">최상위 아레나.</target>
        </trans-unit>
        <trans-unit id="574bc63673dc888b61f6f6ee7b3fe3a406b764a7" translate="yes" xml:space="preserve">
          <source>Top-level missing data</source>
          <target state="translated">최상위 결측 데이터</target>
        </trans-unit>
        <trans-unit id="762c14c6b40cc359019440dfd147867b5460f638" translate="yes" xml:space="preserve">
          <source>Top-level notna.</source>
          <target state="translated">최상위 수준.</target>
        </trans-unit>
        <trans-unit id="5e217af2445a00d3e8186ca26581738737c4c32a" translate="yes" xml:space="preserve">
          <source>Top-level unique method for any 1-d array-like object.</source>
          <target state="translated">1 차원 배열 유사 객체에 대한 최상위 고유 방법입니다.</target>
        </trans-unit>
        <trans-unit id="0498396e1c9f0bbfc17094e169cf1eac74ec20e4" translate="yes" xml:space="preserve">
          <source>Total bytes consumed by the elements of an ndarray.</source>
          <target state="translated">ndarray 요소가 소비 한 총 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="62511550774b90e55fa9f4d081340a2b9a412907" translate="yes" xml:space="preserve">
          <source>Total bytes consumed by the elements of the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3ca10de168b7c48fcb87f5e00dd4b7b5bf8ade" translate="yes" xml:space="preserve">
          <source>Total duration of timedelta in seconds (to ns precision).</source>
          <target state="translated">총 타임 델타 지속 시간 (초) (ns 정밀도까지)</target>
        </trans-unit>
        <trans-unit id="d72955d9b5fecbca2c7de8a94ac1b40e4c668022" translate="yes" xml:space="preserve">
          <source>Transform each element of a list-like to a row, replicating the index values.</source>
          <target state="translated">목록과 같은 각 요소를 행으로 변환하여 인덱스 값을 복제합니다.</target>
        </trans-unit>
        <trans-unit id="128e1f4b9550d5de2680e93bcd4491ed569011ea" translate="yes" xml:space="preserve">
          <source>Transform function producing a Series with like indexes.</source>
          <target state="translated">인덱스가 유사한 Series를 생성하는 변형 함수.</target>
        </trans-unit>
        <trans-unit id="dc1c231275a16e11dae243561efa84b2936b1b19" translate="yes" xml:space="preserve">
          <source>Transformation</source>
          <target state="translated">Transformation</target>
        </trans-unit>
        <trans-unit id="b39aaeab2088196b762ce54aefa57ae15117548b" translate="yes" xml:space="preserve">
          <source>Transformed DataFrame.</source>
          <target state="translated">변환 된 DataFrame.</target>
        </trans-unit>
        <trans-unit id="07edff8c6ab5d2b6ba73b34c78a1792f548b27e1" translate="yes" xml:space="preserve">
          <source>Transforming</source>
          <target state="translated">Transforming</target>
        </trans-unit>
        <trans-unit id="2cb2d33ae76b7ca78d3e4f0435b740292c6fba4b" translate="yes" xml:space="preserve">
          <source>Transitioning to &lt;code&gt;pytest&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pytest&lt;/code&gt; 로 전환</target>
        </trans-unit>
        <trans-unit id="ca3b38a43002d63900d830f30d7fc175af55811e" translate="yes" xml:space="preserve">
          <source>Transpose index and columns.</source>
          <target state="translated">인덱스와 열을 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="5471bd00b64f3b22931b3486299b1428633de97f" translate="yes" xml:space="preserve">
          <source>Transposing a DataFrame with mixed dtypes will result in a homogeneous DataFrame with the &lt;code&gt;object&lt;/code&gt; dtype. In such a case, a copy of the data is always made.</source>
          <target state="translated">혼합 된 dtype으로 DataFrame을 조옮김하면 &lt;code&gt;object&lt;/code&gt; dtype 과 동종의 DataFrame이 발생 합니다 . 이 경우 항상 데이터 사본이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="e118b5d1464272cbfb06582b43dab648175398cd" translate="yes" xml:space="preserve">
          <source>Trellis plotting interface</source>
          <target state="translated">격자 플롯 인터페이스</target>
        </trans-unit>
        <trans-unit id="935665411175cbace174f6cf9759b5cca22bfa5d" translate="yes" xml:space="preserve">
          <source>Trim values above a given threshold.</source>
          <target state="translated">주어진 임계 값을 초과하는 값을 잘라냅니다.</target>
        </trans-unit>
        <trans-unit id="5ee8bc72aab647d4822203325b1f9b0670b5d3bd" translate="yes" xml:space="preserve">
          <source>Trim values at input threshold(s).</source>
          <target state="translated">입력 임계 값에서 값을 자릅니다.</target>
        </trans-unit>
        <trans-unit id="aa68c903a91958058c148b20b729e4c95dba2d4c" translate="yes" xml:space="preserve">
          <source>Trim values below a given threshold.</source>
          <target state="translated">주어진 임계 값 미만의 값을 트림합니다.</target>
        </trans-unit>
        <trans-unit id="e0d2449911dd1e3e181e76b86082b23cec0cbd02" translate="yes" xml:space="preserve">
          <source>True (default) : returns a Series for Series &lt;code&gt;x&lt;/code&gt; or a Categorical for all other inputs. The values stored within are Interval dtype.</source>
          <target state="translated">True (기본값) : Series &lt;code&gt;x&lt;/code&gt; 의 Series 또는 다른 모든 입력의 Categorical을 반환합니다 . 저장된 값은 간격 dtype입니다.</target>
        </trans-unit>
        <trans-unit id="b96e69e4470a931a678f47f0731641dbdd741ec9" translate="yes" xml:space="preserve">
          <source>True always show memory usage. False never shows memory usage. A value of &amp;lsquo;deep&amp;rsquo; is equivalent to &amp;ldquo;True with deep introspection&amp;rdquo;. Memory usage is shown in human-readable units (base-2 representation). Without deep introspection a memory estimation is made based in column dtype and number of rows assuming values consume the same memory amount for corresponding dtypes. With deep memory introspection, a real memory usage calculation is performed at the cost of computational resources.</source>
          <target state="translated">True는 항상 메모리 사용량을 보여줍니다. False는 메모리 사용량을 표시하지 않습니다. 'deep'의 값은&amp;ldquo;deep introspection이있는 True&amp;rdquo;와 같습니다. 메모리 사용량은 사람이 읽을 수있는 단위로 표시됩니다 (base-2 표현). 심도있는 내성없이 열 dtype 및 행 수를 기반으로 메모리 추정이 이루어지며 값이 해당 dtype에 대해 동일한 메모리 양을 소비한다고 가정합니다. 깊은 메모리 검사를 통해 계산 리소스 비용으로 실제 메모리 사용량 계산이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="fe0d29d42f3643e2a79296aac43508bbd4c0ed86" translate="yes" xml:space="preserve">
          <source>True if &amp;ldquo;other&amp;rdquo; is an Index and it has the same elements as calling index; False otherwise.</source>
          <target state="translated">&quot;other&quot;가 색인이고 호출 색인과 동일한 요소를 갖는 경우 true입니다. 그렇지 않으면 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="4ad6a574c171da95c365416ad1738d06cc1d2362" translate="yes" xml:space="preserve">
          <source>True if DataFrame is entirely empty (no items), meaning any of the axes are of length 0.</source>
          <target state="translated">DataFrame이 완전히 비어 있으면 (항목 없음) True이며 모든 축의 길이가 0입니다.</target>
        </trans-unit>
        <trans-unit id="24c200dfaefa892ffcbfa20a17d543d9c316700e" translate="yes" xml:space="preserve">
          <source>True if all elements are the same in both objects, False otherwise.</source>
          <target state="translated">두 개체에서 모든 요소가 동일한 경우 True이고, 그렇지 않으면 False입니다.</target>
        </trans-unit>
        <trans-unit id="1352a71e8580d1d89f592a17f1fa016fca39aa32" translate="yes" xml:space="preserve">
          <source>True if the Index is categorical.</source>
          <target state="translated">인덱스가 범주 형이면 참입니다.</target>
        </trans-unit>
        <trans-unit id="cbb27a618f22a115d7e3c9e0d589d3a26b7adf91" translate="yes" xml:space="preserve">
          <source>True, False, and NA values, and thousands separators have defaults, but can be explicitly specified, too. Supply the values you would like as strings or lists of strings!</source>
          <target state="translated">True, False 및 NA 값과 수천 구분 기호에는 기본값이 있지만 명시 적으로 지정할 수도 있습니다. 문자열 또는 문자열 목록으로 원하는 값을 제공하십시오!</target>
        </trans-unit>
        <trans-unit id="680c6f1c86a4eb174e2f911061183231fb73550a" translate="yes" xml:space="preserve">
          <source>True, because &lt;code&gt;1&lt;/code&gt; is considered True.</source>
          <target state="translated">사실은, 때문에 &lt;code&gt;1&lt;/code&gt; 사실로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="69740065ef35451ed08541fd917b42f319c7f0d0" translate="yes" xml:space="preserve">
          <source>True, because nonzero integers are considered True.</source>
          <target state="translated">0이 아닌 정수는 True로 간주되므로 True입니다.</target>
        </trans-unit>
        <trans-unit id="27c28093e366a87a83548198c541efcbf82fdaa2" translate="yes" xml:space="preserve">
          <source>True, use the provided separator, writing in a csv format for allowing easy pasting into excel.</source>
          <target state="translated">사실, 엑셀에 쉽게 붙여 넣을 수 있도록 제공된 구분 기호를 CSV 형식으로 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="6c9ee22a59020278eba1d78e75b502abfa111e3b" translate="yes" xml:space="preserve">
          <source>True: negative values in &lt;code&gt;indices&lt;/code&gt; indicate missing values. These values are set to &lt;code&gt;fill_value&lt;/code&gt;. Any other other negative values raise a &lt;code&gt;ValueError&lt;/code&gt;.</source>
          <target state="translated">참 : &lt;code&gt;indices&lt;/code&gt; 음수 값 은 결 측값을 나타냅니다. 이 값은 &lt;code&gt;fill_value&lt;/code&gt; 로 설정됩니다 . 다른 음수 값은 &lt;code&gt;ValueError&lt;/code&gt; 를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="ad3c8a164cdfd9b415c0ee7fb94f84d7ade80419" translate="yes" xml:space="preserve">
          <source>True: overwrite original DataFrame&amp;rsquo;s values with values from &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">사실 :의 값으로 덮어 쓰기 원래 DataFrame의 값을 &lt;code&gt;other&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d7324147751e0f3b064cfd111b6c3f3a09b389ee" translate="yes" xml:space="preserve">
          <source>Truncate a Series or DataFrame before and after some index value.</source>
          <target state="translated">인덱스 값 전후에 Series 또는 DataFrame을 자릅니다.</target>
        </trans-unit>
        <trans-unit id="deda5ec901fcc858b59825f5c581a548de2a2282" translate="yes" xml:space="preserve">
          <source>Truncate all rows after this index value.</source>
          <target state="translated">이 인덱스 값 뒤의 모든 행을 자릅니다.</target>
        </trans-unit>
        <trans-unit id="cc53dc9a6acd80b44ed48233c2fc8496343d55e2" translate="yes" xml:space="preserve">
          <source>Truncate all rows before this index value.</source>
          <target state="translated">이 인덱스 값 앞에있는 모든 행을 자릅니다.</target>
        </trans-unit>
        <trans-unit id="9b24521e8b032633ea56add3e1243aeea92836a9" translate="yes" xml:space="preserve">
          <source>Try to apply reduction procedures. If the DataFrame is empty, &lt;code&gt;apply&lt;/code&gt; will use &lt;code&gt;reduce&lt;/code&gt; to determine whether the result should be a Series or a DataFrame. If &lt;code&gt;reduce=None&lt;/code&gt; (the default), &lt;code&gt;apply&lt;/code&gt;&amp;rsquo;s return value will be guessed by calling &lt;code&gt;func&lt;/code&gt; on an empty Series (note: while guessing, exceptions raised by &lt;code&gt;func&lt;/code&gt; will be ignored). If &lt;code&gt;reduce=True&lt;/code&gt; a Series will always be returned, and if &lt;code&gt;reduce=False&lt;/code&gt; a DataFrame will always be returned.</source>
          <target state="translated">축소 절차를 적용하십시오. DataFrame이 비어있는 경우 &lt;code&gt;apply&lt;/code&gt; 는 &lt;code&gt;reduce&lt;/code&gt; 를 사용 하여 결과가 Series인지 DataFrame인지를 결정합니다. 경우 &lt;code&gt;reduce=None&lt;/code&gt; (기본값), &lt;code&gt;apply&lt;/code&gt; 의 반환 값을 호출하여 추측됩니다 &lt;code&gt;func&lt;/code&gt; 빈 시리즈를 (참고 : 추측하면서,에 의해 발행되는 예외 &lt;code&gt;func&lt;/code&gt; 무시됩니다). &lt;code&gt;reduce=True&lt;/code&gt; 이면 Series가 항상 반환되고 &lt;code&gt;reduce=False&lt;/code&gt; 이면 DataFrame이 항상 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3ccb9e1860e8ea56d3597fa357015fa09f9e36b0" translate="yes" xml:space="preserve">
          <source>Try to avoid using random data. However random data might be OK in some cases, like if the function you are documenting deals with probability distributions, or if the amount of data needed to make the function result meaningful is too much, such that creating it manually is very cumbersome. In those cases, always use a fixed random seed to make the generated examples predictable. Example:</source>
          <target state="translated">무작위 데이터 사용을 피하십시오. 그러나 문서화하는 함수가 확률 분포를 다루거나 함수 결과를 의미있게 만드는 데 필요한 데이터의 양이 너무 많은 경우와 같이 임의의 데이터는 문제가되지 않을 수 있습니다. 이 경우 항상 고정 된 랜덤 시드를 사용하여 생성 된 예제를 예측 가능하게 만드십시오. 예:</target>
        </trans-unit>
        <trans-unit id="fd69d7f5c5a46e08dfe48d5d75b571fe56278826" translate="yes" xml:space="preserve">
          <source>Try to cast the result back to the input type (if possible).</source>
          <target state="translated">가능하면 결과를 입력 유형으로 다시 캐스트하십시오.</target>
        </trans-unit>
        <trans-unit id="3f5f77d3a1e795a7dcf3e0c987f3621564def43a" translate="yes" xml:space="preserve">
          <source>Try to convert the axes to the proper dtypes.</source>
          <target state="translated">축을 적절한 dtype으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="ebfe0f5943f27d1d497778a4366bc02fb3f0fb82" translate="yes" xml:space="preserve">
          <source>Try to find better dtype for elementwise function results. If False, leave as dtype=object.</source>
          <target state="translated">요소 별 함수 결과에 대해 더 나은 dtype을 찾으십시오. False이면 dtype = object로 두십시오.</target>
        </trans-unit>
        <trans-unit id="b0d1669a1b78fa42745d4a04920b324151e04033" translate="yes" xml:space="preserve">
          <source>Tryies to return a string representing a frequency guess, generated by infer_freq.</source>
          <target state="translated">infer_freq에 의해 생성 된 주파수 추측을 나타내는 문자열을 리턴하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="792de1ca58d9c5095b65b345bd726ae4b415bd14" translate="yes" xml:space="preserve">
          <source>Tryies to return a string representing a frequency guess, generated by infer_freq. Returns None if it can&amp;rsquo;t autodetect the frequency.</source>
          <target state="translated">infer_freq에 의해 생성 된 주파수 추측을 나타내는 문자열을 리턴하려고 시도합니다. 주파수를 자동 감지 할 수 없으면 None을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="51b741d0ce3607c856c6d61bfa9751cb445ad116" translate="yes" xml:space="preserve">
          <source>Trying the bug-producing code out on the &lt;em&gt;master&lt;/em&gt; branch is often a worthwhile exercise to confirm the bug still exists. It is also worth searching existing bug reports and pull requests to see if the issue has already been reported and/or fixed.</source>
          <target state="translated">&lt;em&gt;마스터&lt;/em&gt; 브랜치 에서 버그 생성 코드를 시험해 보는 것은 종종 버그가 여전히 존재하는지 확인하기위한 가치있는 연습입니다. 또한 기존 버그 보고서를 검색하고 문제가 이미보고 및 / 또는 수정되었는지 확인하기 위해 요청을 가져 오는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="95851c3889d863ca2eea659bba9a4593703c5327" translate="yes" xml:space="preserve">
          <source>Tuple of (rows, columns) for the layout of the histograms.</source>
          <target state="translated">히스토그램의 레이아웃을위한 튜플 (행, 열).</target>
        </trans-unit>
        <trans-unit id="4bfa2fe085bf3b7386d557a42dc448372bd6cc5d" translate="yes" xml:space="preserve">
          <source>Tutorial series written in 2016 by &lt;a href=&quot;https://github.com/TomAugspurger&quot;&gt;Tom Augspurger&lt;/a&gt;. The source may be found in the GitHub repository &lt;a href=&quot;https://github.com/TomAugspurger/effective-pandas&quot;&gt;TomAugspurger/effective-pandas&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/TomAugspurger&quot;&gt;Tom Augspurger&lt;/a&gt; 가 2016 년에 쓴 튜토리얼 시리즈 . 소스는 GitHub 리포지토리 &lt;a href=&quot;https://github.com/TomAugspurger/effective-pandas&quot;&gt;TomAugspurger / effective-pandas&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="654171647baa6be8557a5d627cf35c7075ebb257" translate="yes" xml:space="preserve">
          <source>Tutorials</source>
          <target state="translated">Tutorials</target>
        </trans-unit>
        <trans-unit id="926da0435188b344811b1d6ac5bac5f66bb55cb4" translate="yes" xml:space="preserve">
          <source>Two DateOffset&amp;rsquo;s per month repeating on the first day of the month and day_of_month.</source>
          <target state="translated">매월 1 일과 day_of_month에 반복되는 매월 2 개의 DateOffset이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e27569ec2fca74e119d2de19350b3feadd65788" translate="yes" xml:space="preserve">
          <source>Two DateOffset&amp;rsquo;s per month repeating on the last day of the month and day_of_month.</source>
          <target state="translated">매월 마지막 날과 day_of_month에서 반복되는 한 달에 두 개의 DateOffset이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc1c8ebdd43a23d446ae0dcd51eae34fce8519cd" translate="yes" xml:space="preserve">
          <source>Two intervals overlap if they share a common point, including closed endpoints. Intervals that only have an open endpoint in common do not overlap.</source>
          <target state="translated">닫힌 끝점을 포함하여 공통점을 공유하는 경우 두 간격이 겹칩니다. 공통 엔드 포인트 만있는 간격은 겹치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6d3cb912fd23a983cef568d3e3daebfbd0d5f976" translate="yes" xml:space="preserve">
          <source>Two scripts are provided to assist with this. These scripts distribute testing across 4 threads.</source>
          <target state="translated">이를 지원하기 위해 두 개의 스크립트가 제공됩니다. 이 스크립트는 4 개의 스레드에 테스트를 분산시킵니다.</target>
        </trans-unit>
        <trans-unit id="8fcf815e48e35213a32002dba5c3aa458d90ed1c" translate="yes" xml:space="preserve">
          <source>Two-dimensional size-mutable, potentially heterogeneous tabular data structure with labeled axes (rows and columns).</source>
          <target state="translated">레이블이 지정된 축 (행 및 열)을 가진 2 차원 크기 변경 가능, 이종 가능성이있는 테이블 형식 데이터 구조.</target>
        </trans-unit>
        <trans-unit id="c35c5e18cef57a4b72031e2083f6c8db822c9f56" translate="yes" xml:space="preserve">
          <source>Two-dimensional size-mutable, potentially heterogeneous tabular data structure with labeled axes (rows and columns). Arithmetic operations align on both row and column labels. Can be thought of as a dict-like container for Series objects. The primary pandas data structure.</source>
          <target state="translated">레이블이 지정된 축 (행 및 열)을 가진 2 차원 크기 변경 가능, 이종 가능성이있는 테이블 형식 데이터 구조. 산술 연산은 행 및 열 레이블 모두에 정렬됩니다. Series 객체의 dict-like 컨테이너로 생각할 수 있습니다. 기본 팬더 데이터 구조.</target>
        </trans-unit>
        <trans-unit id="6b55ec26af9b6fa5599655724c5685eb0a05ab92" translate="yes" xml:space="preserve">
          <source>Type for categorical data with the categories and orderedness.</source>
          <target state="translated">범주와 순서가있는 범주 형 데이터의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="d9bbb3fc33b4fd823fe26ece8e660f790bdfb418" translate="yes" xml:space="preserve">
          <source>Type for categorical data.</source>
          <target state="translated">범주 형 데이터의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="2b8920d7008f21df33001158c6ee0d224ec65e1d" translate="yes" xml:space="preserve">
          <source>Type matches caller unless &lt;code&gt;expand=True&lt;/code&gt; (see Notes).</source>
          <target state="translated">&lt;code&gt;expand=True&lt;/code&gt; 가 아닌 한 유형은 발신자와 일치합니다 (참고 사항 참조).</target>
        </trans-unit>
        <trans-unit id="d189f51d0e03a5f25d787122cbce0aedcde3122a" translate="yes" xml:space="preserve">
          <source>Type of date conversion. &amp;lsquo;epoch&amp;rsquo; = epoch milliseconds, &amp;lsquo;iso&amp;rsquo; = ISO8601. The default depends on the &lt;code&gt;orient&lt;/code&gt;. For &lt;code&gt;orient='table'&lt;/code&gt;, the default is &amp;lsquo;iso&amp;rsquo;. For all other orients, the default is &amp;lsquo;epoch&amp;rsquo;.</source>
          <target state="translated">날짜 변환 유형 'epoch'= 에포크 밀리 초, 'iso'= ISO8601. 기본값은 &lt;code&gt;orient&lt;/code&gt; 에 따라 다릅니다 . 들어 &lt;code&gt;orient='table'&lt;/code&gt; , 기본값은 'ISO'입니다. 다른 모든 방향의 경우 기본값은 'epoch'입니다.</target>
        </trans-unit>
        <trans-unit id="ede740ca8094494603bbb904ba0745a3e152c60c" translate="yes" xml:space="preserve">
          <source>Type of merge to be performed.</source>
          <target state="translated">수행 할 병합 유형입니다.</target>
        </trans-unit>
        <trans-unit id="9af8f14bd15271db0f113f7c146e7fa9294b1caa" translate="yes" xml:space="preserve">
          <source>TypeError</source>
          <target state="translated">TypeError</target>
        </trans-unit>
        <trans-unit id="2a9f0bfdbfa408980305c8c5e63d0d239e2245c1" translate="yes" xml:space="preserve">
          <source>TypeError if ndarray-like but cannot infer the dtype</source>
          <target state="translated">ndarray와 유사하지만 dtype을 유추 할 수없는 경우 TypeError</target>
        </trans-unit>
        <trans-unit id="91e12dcf5ba78c469a672fa6634a53249b004cfa" translate="yes" xml:space="preserve">
          <source>TypeError if not a dtype</source>
          <target state="translated">dtype이 아닌 경우 TypeError</target>
        </trans-unit>
        <trans-unit id="d160c5845a8a77a5befb4851a7053d8bdf35eb94" translate="yes" xml:space="preserve">
          <source>Typecode or data-type to which the array is cast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17eb2c82fcacff48603d16dd7fbfdf451f6008d6" translate="yes" xml:space="preserve">
          <source>UInt16Dtype[source]</source>
          <target state="translated">UInt16Dtype[source]</target>
        </trans-unit>
        <trans-unit id="b85cd57dd4b49164b9b7d4eef55a03d921345e20" translate="yes" xml:space="preserve">
          <source>UInt32Dtype[source]</source>
          <target state="translated">UInt32Dtype[source]</target>
        </trans-unit>
        <trans-unit id="09f1e3ede86b2f12609fad96a9d9dde34a0f5ec6" translate="yes" xml:space="preserve">
          <source>UInt64Dtype[source]</source>
          <target state="translated">UInt64Dtype[source]</target>
        </trans-unit>
        <trans-unit id="7166944023c6a2386fe2e6d727864b6fa8989028" translate="yes" xml:space="preserve">
          <source>UInt64Index[source]</source>
          <target state="translated">UInt64Index[source]</target>
        </trans-unit>
        <trans-unit id="32ebc521102753d5e62127e0650321dc3aa23b5c" translate="yes" xml:space="preserve">
          <source>UInt8Dtype[source]</source>
          <target state="translated">UInt8Dtype[source]</target>
        </trans-unit>
        <trans-unit id="363cb5cb9b015bf8fe75ee8f6f3ad675ca5618cc" translate="yes" xml:space="preserve">
          <source>UNION</source>
          <target state="translated">UNION</target>
        </trans-unit>
        <trans-unit id="52c6c1812015585dc1092393a1f244f60d68c60a" translate="yes" xml:space="preserve">
          <source>UPDATE</source>
          <target state="translated">UPDATE</target>
        </trans-unit>
        <trans-unit id="a1c366cacdc2e4f2ca5e9f514afccf66ad1dfa3e" translate="yes" xml:space="preserve">
          <source>Ubuntu</source>
          <target state="translated">Ubuntu</target>
        </trans-unit>
        <trans-unit id="3a09d891d627ee00f4529c902987ffb259b2b026" translate="yes" xml:space="preserve">
          <source>Unbiased expanding skewness.</source>
          <target state="translated">편향되지 않은 확장 왜곡.</target>
        </trans-unit>
        <trans-unit id="1ea5fa98463037b2dfc538cda708a2a263aa8a21" translate="yes" xml:space="preserve">
          <source>Unbiased rolling skewness.</source>
          <target state="translated">편견없는 롤링 왜곡.</target>
        </trans-unit>
        <trans-unit id="cdcfc305e5faf9598eda2759513999eca636dd11" translate="yes" xml:space="preserve">
          <source>Under Review.</source>
          <target state="translated">검토 중.</target>
        </trans-unit>
        <trans-unit id="334952709d748d5bca635d7d7211392c841bdb9f" translate="yes" xml:space="preserve">
          <source>Unicode form</source>
          <target state="translated">유니 코드 형식</target>
        </trans-unit>
        <trans-unit id="b7f6236475e09088b80b8284094031a9df6659c9" translate="yes" xml:space="preserve">
          <source>Unicode formatting</source>
          <target state="translated">유니 코드 형식</target>
        </trans-unit>
        <trans-unit id="9e79a7de30252b5acf0234ae02e96fa26962ae73" translate="yes" xml:space="preserve">
          <source>Union matching dtypes</source>
          <target state="translated">유니온 매칭 dtypes</target>
        </trans-unit>
        <trans-unit id="126ec7cbebffc6ae8ed2b29703d2e8fede74fee3" translate="yes" xml:space="preserve">
          <source>Union mismatched dtypes</source>
          <target state="translated">조합 불일치 dtypes</target>
        </trans-unit>
        <trans-unit id="36351ac0afceeda0c1d08bb29b8b1617b3a80bf0" translate="yes" xml:space="preserve">
          <source>Unique numbers for each group.</source>
          <target state="translated">각 그룹의 고유 번호</target>
        </trans-unit>
        <trans-unit id="e49d8283a3dc695ddb68ac1a3f0ba81eb4638a97" translate="yes" xml:space="preserve">
          <source>Uniques are returned in order of appearance. Hash table-based unique, therefore does NOT sort.</source>
          <target state="translated">모양 순서대로 고유 항목이 반환됩니다. 고유 한 해시 테이블 기반이므로 정렬되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="996e177835339c07a9f8eb705aad44aead7faa1c" translate="yes" xml:space="preserve">
          <source>Unit used for conversion if ts_input is of type int or float. The valid values are &amp;lsquo;D&amp;rsquo;, &amp;lsquo;h&amp;rsquo;, &amp;lsquo;m&amp;rsquo;, &amp;lsquo;s&amp;rsquo;, &amp;lsquo;ms&amp;rsquo;, &amp;lsquo;us&amp;rsquo;, and &amp;lsquo;ns&amp;rsquo;. For example, &amp;lsquo;s&amp;rsquo; means seconds and &amp;lsquo;ms&amp;rsquo; means milliseconds.</source>
          <target state="translated">ts_input이 int 또는 float 유형 인 경우 변환에 사용되는 단위입니다. 유효한 값은 'D', 'h', 'm', 's', 'ms', 'us'및 'ns'입니다. 예를 들어 's'는 초를 의미하고 'ms'는 밀리 초를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="8d61a3edb34524a5a05bf3757e9fbf301b748952" translate="yes" xml:space="preserve">
          <source>Unlike in &lt;code&gt;in_any_int_dtype&lt;/code&gt;, timedelta64 instances will return False.</source>
          <target state="translated">&lt;code&gt;in_any_int_dtype&lt;/code&gt; 과 달리 timedelta64 인스턴스는 False를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9107c1b85ad521c9c3ab9b57eff832dbbd96daf1" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;code&gt;append()&lt;/code&gt; method, which appends to the original list and returns &lt;code&gt;None&lt;/code&gt;, &lt;a href=&quot;../reference/api/pandas.dataframe.append#pandas.DataFrame.append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; here &lt;strong&gt;does not&lt;/strong&gt; modify &lt;code&gt;df1&lt;/code&gt; and returns its copy with &lt;code&gt;df2&lt;/code&gt; appended.</source>
          <target state="translated">달리 &lt;code&gt;append()&lt;/code&gt; 원래 목록 및 반환에 추가하는 방법, &lt;code&gt;None&lt;/code&gt; , &lt;a href=&quot;../reference/api/pandas.dataframe.append#pandas.DataFrame.append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt; 여기 &lt;strong&gt;없는&lt;/strong&gt; 수정 &lt;code&gt;df1&lt;/code&gt; 과 함께 복사본을 반환 &lt;code&gt;df2&lt;/code&gt; 추가.</target>
        </trans-unit>
        <trans-unit id="0e4a8eaaa58094730caea3e21438273c1b4363d4" translate="yes" xml:space="preserve">
          <source>Unordered Categorical.</source>
          <target state="translated">정렬되지 않은 범주 형.</target>
        </trans-unit>
        <trans-unit id="660a819cccdea59c0000b3f4a246718b52d09d3d" translate="yes" xml:space="preserve">
          <source>Unpivot a DataFrame from wide format to long format</source>
          <target state="translated">넓은 형식에서 긴 형식으로 DataFrame 피벗 해제</target>
        </trans-unit>
        <trans-unit id="49f050e6b15ee8d77f6fbb27e1620d25533495db" translate="yes" xml:space="preserve">
          <source>Unpivot a DataFrame from wide format to long format, optionally leaving identifier variables set.</source>
          <target state="translated">선택적으로 식별자 변수를 설정 한 상태로 DataFrame을 와이드 형식에서 긴 형식으로 피벗 해제합니다.</target>
        </trans-unit>
        <trans-unit id="5d9fdd48484aa174ae102960e3229be55ba84910" translate="yes" xml:space="preserve">
          <source>Unpivoted DataFrame.</source>
          <target state="translated">피벗되지 않은 DataFrame.</target>
        </trans-unit>
        <trans-unit id="cbcb221a1c5bbc10d0aae9db2d9b4988f5fd813c" translate="yes" xml:space="preserve">
          <source>Unserialized JSON objects.</source>
          <target state="translated">직렬화되지 않은 JSON 객체.</target>
        </trans-unit>
        <trans-unit id="516e20090c90fe803ead8ca6abb8149ecc31c04f" translate="yes" xml:space="preserve">
          <source>Unstack prescribed level(s) from index axis onto column axis.</source>
          <target state="translated">규정 된 수준을 인덱스 축에서 열 축으로 쌓아 놓습니다.</target>
        </trans-unit>
        <trans-unit id="301ab97b49dbbc394361c9b6ef9e5d90b8b6aab5" translate="yes" xml:space="preserve">
          <source>Unstack, a.k.a.</source>
          <target state="translated">언 스택, 일명</target>
        </trans-unit>
        <trans-unit id="186533331776394f8b181daa13230b5b66df25bf" translate="yes" xml:space="preserve">
          <source>Unstack, a.k.a. pivot, Series with MultiIndex to produce DataFrame.</source>
          <target state="translated">DataFrame을 생성하기 위해 멀티 인덱스가있는 시리즈를 언 스택 (unstack)합니다.</target>
        </trans-unit>
        <trans-unit id="2d1008190ace9c886e26bf275bb4a5e80e3bbeae" translate="yes" xml:space="preserve">
          <source>Unstack, a.k.a. pivot, Series with MultiIndex to produce DataFrame. The level involved will automatically get sorted.</source>
          <target state="translated">DataFrame을 생성하기 위해 멀티 인덱스가있는 시리즈를 언 스택 (unstack)합니다. 관련된 레벨이 자동으로 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="acabd91eb78cd0b4b6a8148aebdeae84b991bc15" translate="yes" xml:space="preserve">
          <source>Unstacked Series.</source>
          <target state="translated">스택되지 않은 시리즈.</target>
        </trans-unit>
        <trans-unit id="bed83ff42be0a53b7b4fc6f46a97677fdc84d914" translate="yes" xml:space="preserve">
          <source>Unused, accepted for homogeneity with other index types.</source>
          <target state="translated">사용하지 않고 다른 인덱스 유형과 동질성을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="f13be7738e1389f72c0f88aa84d17719f746bf4a" translate="yes" xml:space="preserve">
          <source>Unused.</source>
          <target state="translated">Unused.</target>
        </trans-unit>
        <trans-unit id="6e89e7fdc28b18c222d714ca95a5e10b4e09d947" translate="yes" xml:space="preserve">
          <source>Update all of pandas existing tests and code to use the new argument</source>
          <target state="translated">팬더의 기존 테스트 및 코드를 모두 업데이트하여 새 인수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="73858c862ae0e30df8fc502655e79901602d3854" translate="yes" xml:space="preserve">
          <source>Update null elements with value in the same location in &lt;code&gt;other&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;other&lt;/code&gt; 의 같은 위치에있는 값으로 null 요소를 업데이트하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f8638726c2f3d26fbe3ccd4a27ac0e1a6bce40d" translate="yes" xml:space="preserve">
          <source>Update the data in place if possible.</source>
          <target state="translated">가능하면 데이터를 제자리에 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="a2f8c9b450ade110f509acde91196a7cbadf6e6f" translate="yes" xml:space="preserve">
          <source>Updates to the data shared by shallow copy and original is reflected in both; deep copy remains unchanged.</source>
          <target state="translated">얕은 사본과 원본이 공유하는 데이터에 대한 업데이트는 둘 다에 반영됩니다. 깊은 사본은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3a7eee25e856d046d67c072320c3f8f697961793" translate="yes" xml:space="preserve">
          <source>Updating a pandas docstring</source>
          <target state="translated">팬더 문서화 문자열 업데이트</target>
        </trans-unit>
        <trans-unit id="bfecf25d9f73f9608d0ed07c22f73b557d3c678d" translate="yes" xml:space="preserve">
          <source>Updating your pull request</source>
          <target state="translated">풀 요청 업데이트</target>
        </trans-unit>
        <trans-unit id="e7f5d2fb64058ffd3450d104d98b041fb57ea748" translate="yes" xml:space="preserve">
          <source>Upper left cell column to dump data frame.</source>
          <target state="translated">데이터 프레임을 덤프 할 왼쪽 상단 셀 열입니다.</target>
        </trans-unit>
        <trans-unit id="3d24eba99e2dba1fe94f0d332c07892ce18457fa" translate="yes" xml:space="preserve">
          <source>Upper left cell row to dump data frame.</source>
          <target state="translated">데이터 프레임을 덤프 할 왼쪽 상단 셀 행.</target>
        </trans-unit>
        <trans-unit id="3dca6ef3b3fce519c24f5be609533ac5a5b62497" translate="yes" xml:space="preserve">
          <source>Upsample again, providing a &lt;code&gt;fill value&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;fill value&lt;/code&gt; 제공하여 다시 업 샘플링하십시오 .</target>
        </trans-unit>
        <trans-unit id="68e73f886010989498b6248b5fde9112b6dd35ee" translate="yes" xml:space="preserve">
          <source>Upsample again, providing a &lt;code&gt;method&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;method&lt;/code&gt; 제공하여 다시 업 샘플링하십시오 .</target>
        </trans-unit>
        <trans-unit id="dee213af0cd383ec6acfb52a0aa649e45ff98f99" translate="yes" xml:space="preserve">
          <source>Upsample the series into 30 second bins and fill the &lt;code&gt;NaN&lt;/code&gt; values using the &lt;code&gt;bfill&lt;/code&gt; method.</source>
          <target state="translated">시리즈를 30 초 빈으로 업 샘플링하고 &lt;code&gt;bfill&lt;/code&gt; 방법을 사용하여 &lt;code&gt;NaN&lt;/code&gt; 값을 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="38fcf91c10c45683b26a3352667109b2e83f532e" translate="yes" xml:space="preserve">
          <source>Upsample the series into 30 second bins and fill the &lt;code&gt;NaN&lt;/code&gt; values using the &lt;code&gt;pad&lt;/code&gt; method.</source>
          <target state="translated">시리즈를 30 초 빈으로 업 샘플링하고 &lt;code&gt;pad&lt;/code&gt; 방법을 사용하여 &lt;code&gt;NaN&lt;/code&gt; 값을 채 웁니다 .</target>
        </trans-unit>
        <trans-unit id="e86afe0e366fa589ca411aa925bb0e16f1f9fbcb" translate="yes" xml:space="preserve">
          <source>Upsample the series into 30 second bins.</source>
          <target state="translated">시리즈를 30 초 단위로 업 샘플링하십시오.</target>
        </trans-unit>
        <trans-unit id="e482e122d3a9b17b0e7dfad356cd119039b4f714" translate="yes" xml:space="preserve">
          <source>Upsampling</source>
          <target state="translated">Upsampling</target>
        </trans-unit>
        <trans-unit id="be77849dd47ce3b1d4a7ddcde17215161c4f2932" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.dtypes.value_counts()&lt;/code&gt; instead.</source>
          <target state="translated">대신 &lt;code&gt;.dtypes.value_counts()&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="18c0d150b62da8675ff23a6c3487d95196bd3fa3" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.pipe&lt;/code&gt; when chaining together functions that expect Series, DataFrames or GroupBy objects. Instead of writing</source>
          <target state="translated">Series, DataFrames 또는 GroupBy 객체가 필요한 함수를 함께 연결할 때는 &lt;code&gt;.pipe&lt;/code&gt; 를 사용하십시오 . 쓰는 대신</target>
        </trans-unit>
        <trans-unit id="20191ee6041d5c75a6e51ff342afb4c5a4df017b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;.pipe&lt;/code&gt; when you want to improve readability by chaining together functions that expect Series, DataFrames, GroupBy or Resampler objects. Instead of writing</source>
          <target state="translated">Series, DataFrames, GroupBy 또는 Resampler 객체가 필요한 함수를 연결하여 가독성을 향상 시키려면 &lt;code&gt;.pipe&lt;/code&gt; 를 사용하십시오 . 쓰는 대신</target>
        </trans-unit>
        <trans-unit id="cb8a1b182e86ee11f3cad4e6ca1567321b00bc43" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Styler.set_properties&lt;/code&gt; when the style doesn&amp;rsquo;t actually depend on the values.</source>
          <target state="translated">스타일이 실제로 값에 의존하지 않는 경우 &lt;code&gt;Styler.set_properties&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f6f9144340a8355911d8eeec0457c84342fc37ad" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;closed='left'&lt;/code&gt; to exclude &lt;code&gt;end&lt;/code&gt; if it falls on the boundary.</source>
          <target state="translated">경계에있는 경우 &lt;code&gt;end&lt;/code&gt; 를 제외 하려면 &lt;code&gt;closed='left'&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="70fd9083679fe206b62c006f7b1666c66e7dbf3d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;closed='right'&lt;/code&gt; to exclude &lt;code&gt;start&lt;/code&gt; if it falls on the boundary.</source>
          <target state="translated">경계에 해당하는 경우 &lt;code&gt;start&lt;/code&gt; 을 제외 하려면 &lt;code&gt;closed='right'&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce7e8cc7e19e5a27e963d5bf647831d2015ed1cb" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;cut&lt;/code&gt; when you need to segment and sort data values into bins. This function is also useful for going from a continuous variable to a categorical variable. For example, &lt;code&gt;cut&lt;/code&gt; could convert ages to groups of age ranges. Supports binning into an equal number of bins, or a pre-specified array of bins.</source>
          <target state="translated">데이터 값을 구간으로 분류하고 정렬해야하는 경우 &lt;code&gt;cut&lt;/code&gt; 을 사용하십시오 . 이 함수는 연속 변수에서 범주 형 변수로 이동할 때도 유용합니다. 예를 들어 &lt;code&gt;cut&lt;/code&gt; 은 연령을 연령 범위의 그룹으로 변환 할 수 있습니다. 같은 수의 빈 또는 미리 지정된 빈 배열로 비닝을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c2648f05bfce00b8db452f1c17c1305810ea05d8" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;drop&lt;/code&gt; optional when bins is not unique</source>
          <target state="translated">휴지통이 고유하지 않은 경우 &lt;code&gt;drop&lt;/code&gt; 옵션 사용</target>
        </trans-unit>
        <trans-unit id="72d55a9aae68fa180527dbc6d5cfdb1aa0015611" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;inplace=True&lt;/code&gt; to modify the original DataFrame.</source>
          <target state="translated">원래 DataFrame을 수정 하려면 &lt;code&gt;inplace=True&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="625eb1be0029844644c7e5439bd95b9b9564e1fe" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;return_type='dict'&lt;/code&gt; when you want to tweak the appearance of the lines after plotting. In this case a dict containing the Lines making up the boxes, caps, fliers, medians, and whiskers is returned.</source>
          <target state="translated">플로팅 후 선 모양을 조정 하려면 &lt;code&gt;return_type='dict'&lt;/code&gt; 를 사용하십시오 . 이 경우 상자, 캡, 전단지, 중앙값 및 수염을 구성하는 라인이 포함 된 dict가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="50e6d8aec25834a7d8b1f7068b955c4f5e15f1c4" translate="yes" xml:space="preserve">
          <source>Use &lt;em&gt;composition&lt;/em&gt;. See &lt;a href=&quot;http://en.wikipedia.org/wiki/Composition_over_inheritance&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">사용 &lt;em&gt;구성&lt;/em&gt; . &lt;a href=&quot;http://en.wikipedia.org/wiki/Composition_over_inheritance&quot;&gt;여기를&lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="eec6b863b19dfc04c990ceb7adf5d5b71c711f82" translate="yes" xml:space="preserve">
          <source>Use BigQuery&amp;rsquo;s legacy SQL dialect. For more information see &lt;a href=&quot;https://cloud.google.com/bigquery/docs/reference/legacy-sql&quot;&gt;BigQuery Legacy SQL Reference&lt;/a&gt;.</source>
          <target state="translated">BigQuery의 기존 SQL 언어를 사용하십시오. 자세한 정보는 &lt;a href=&quot;https://cloud.google.com/bigquery/docs/reference/legacy-sql&quot;&gt;BigQuery Legacy SQL 참조를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2f975e1b67b52da15129a88ea9c8a1a92d6abb20" translate="yes" xml:space="preserve">
          <source>Use BigQuery&amp;rsquo;s standard SQL, which is compliant with the SQL 2011 standard. For more information see &lt;a href=&quot;https://cloud.google.com/bigquery/docs/reference/standard-sql/&quot;&gt;BigQuery Standard SQL Reference&lt;/a&gt;.</source>
          <target state="translated">SQL 2011 표준을 준수하는 BigQuery의 표준 SQL을 사용하십시오. 자세한 정보는 &lt;a href=&quot;https://cloud.google.com/bigquery/docs/reference/standard-sql/&quot;&gt;BigQuery Standard SQL 참조를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ff156ad0169758422c7730401e2fd4a8ab68a14" translate="yes" xml:space="preserve">
          <source>Use a Categorical for efficient storage of an object-dtype column with many repeated values.</source>
          <target state="translated">반복되는 값이 많은 개체 유형 열을 효율적으로 저장하려면 범주 형을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="184fb640f3b866b718e6df0396baf2bfbd496e21" translate="yes" xml:space="preserve">
          <source>Use a dictionary to format specific columns.</source>
          <target state="translated">사전을 사용하여 특정 열의 형식을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="1df1556354329063e636daed03c6b51539fe5ff3" translate="yes" xml:space="preserve">
          <source>Use a function from the Numpy library.</source>
          <target state="translated">Numpy 라이브러리의 함수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="984f3f705713fe09fabb5c107be52c6b1606c6e4" translate="yes" xml:space="preserve">
          <source>Use a numpy.dtype or Python type to cast entire pandas object to the same type. Alternatively, use {col: dtype, &amp;hellip;}, where col is a column label and dtype is a numpy.dtype or Python type to cast one or more of the DataFrame&amp;rsquo;s columns to column-specific types.</source>
          <target state="translated">pandapy.dtype 또는 Python 유형을 사용하여 전체 팬더 객체를 동일한 유형으로 캐스팅하십시오. 또는 {col : dtype,&amp;hellip;}을 사용하십시오. 여기서 col은 열 레이블이고 dtype은 하나 이상의 DataFrame 열을 열별 유형으로 캐스팅하기위한 numpy.dtype 또는 Python 유형입니다.</target>
        </trans-unit>
        <trans-unit id="ecc3c612540055a7a6f2713ba8f3490a136983c5" translate="yes" xml:space="preserve">
          <source>Use a standard estimation bias correction.</source>
          <target state="translated">표준 추정 바이어스 보정을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="08df8e1ac372622d0ca8b429d86aef4a5f92fe34" translate="yes" xml:space="preserve">
          <source>Use an operator implementation from pandas that depends on operators that are already defined on the underlying elements (scalars) of the ExtensionArray.</source>
          <target state="translated">ExtensionArray의 기본 요소 (스칼라)에 이미 정의 된 연산자에 의존하는 팬더의 연산자 구현을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5a0c5a1d921aa53584d61416896934246a0e141f" translate="yes" xml:space="preserve">
          <source>Use either &lt;code&gt;mapper&lt;/code&gt; and &lt;code&gt;axis&lt;/code&gt; to specify the axis to target with &lt;code&gt;mapper&lt;/code&gt;, or &lt;code&gt;index&lt;/code&gt; and/or &lt;code&gt;columns&lt;/code&gt;.</source>
          <target state="translated">중 하나를 사용 &lt;code&gt;mapper&lt;/code&gt; 하고 &lt;code&gt;axis&lt;/code&gt; 으로 대상 축을 지정 &lt;code&gt;mapper&lt;/code&gt; , 또는 &lt;code&gt;index&lt;/code&gt; 및 / 또는 &lt;code&gt;columns&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c055f1b1d0508ccdb8d4a00b140254e7f89293e8" translate="yes" xml:space="preserve">
          <source>Use intersection of keys from both frames</source>
          <target state="translated">두 프레임의 키 교차를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="163ae3ffcc8c4c7d969033251ff93d8f5d9d38da" translate="yes" xml:space="preserve">
          <source>Use keys from left frame only</source>
          <target state="translated">왼쪽 프레임의 키만 사용</target>
        </trans-unit>
        <trans-unit id="ffd5c934bb73f7b701940c84f451b3a7fcdd7f86" translate="yes" xml:space="preserve">
          <source>Use keys from right frame only</source>
          <target state="translated">오른쪽 프레임의 키만 사용</target>
        </trans-unit>
        <trans-unit id="eabf8020dcd089fe91c30d2d94b87f883a6f963a" translate="yes" xml:space="preserve">
          <source>Use multicolumn to enhance MultiIndex columns. The default will be read from the config module.</source>
          <target state="translated">다중 열을 사용하여 다중 인덱스 열을 향상시킵니다. 구성 모듈에서 기본값을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="5c66a5098bd75af92df10d16f35742f395a6d699" translate="yes" xml:space="preserve">
          <source>Use multirow to enhance MultiIndex rows. Requires adding a usepackage{multirow} to your LaTeX preamble. Will print centered labels (instead of top-aligned) across the contained rows, separating groups via clines. The default will be read from the pandas config module.</source>
          <target state="translated">다중 행을 사용하여 다중 색인 행을 향상시킵니다. LaTeX 프리앰블에 usepackage {multirow}를 추가해야합니다. 포함 된 행에 가운데 맞춤 레이블 대신 상단에 정렬 된 레이블을 인쇄하여 클라인을 통해 그룹을 분리합니다. 기본값은 pandas 구성 모듈에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="0bb67b30a1a23a7acbd2988a9ef902cac0ae5bf3" translate="yes" xml:space="preserve">
          <source>Use pandas DataFrames in your &lt;a href=&quot;https://scikit-learn.org/&quot;&gt;scikit-learn&lt;/a&gt; ML pipeline.</source>
          <target state="translated">&lt;a href=&quot;https://scikit-learn.org/&quot;&gt;scikit-learn&lt;/a&gt; ML 파이프 라인 에서 pandas DataFrames를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ff0eebc148fe52a19c6412649e16b673f5eed11" translate="yes" xml:space="preserve">
          <source>Use row_levels and column_levels to determine the row and column coordinates respectively. row_levels and column_levels are the names (labels) or numbers of the levels. {row_levels, column_levels} must be a partition of the MultiIndex level names (or numbers).</source>
          <target state="translated">row_levels 및 column_levels를 사용하여 행 및 열 좌표를 각각 결정하십시오. row_levels 및 column_levels는 레벨의 이름 (레이블) 또는 숫자입니다. {row_levels, column_levels}는 다중 색인 레벨 이름 (또는 숫자)의 파티션이어야합니다.</target>
        </trans-unit>
        <trans-unit id="9e8ad113f244242b2e93f6aab9956bdc4c87adc4" translate="yes" xml:space="preserve">
          <source>Use sort_values instead.</source>
          <target state="translated">대신 sort_values를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8d4e50c531d056a4a6a78a320955866f3a5dbe3c" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;http://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_local_server&quot;&gt;local webserver flow&lt;/a&gt; instead of the &lt;a href=&quot;http://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_console&quot;&gt;console flow&lt;/a&gt; when getting user credentials.</source>
          <target state="translated">사용자 자격 증명을 얻을 때 &lt;a href=&quot;http://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_console&quot;&gt;콘솔 흐름&lt;/a&gt; 대신 &lt;a href=&quot;http://google-auth-oauthlib.readthedocs.io/en/latest/reference/google_auth_oauthlib.flow.html#google_auth_oauthlib.flow.InstalledAppFlow.run_local_server&quot;&gt;로컬 웹 서버 흐름을&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6bf90090d871a76af9e5de08a7f0296cb9d1c62f" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;https://cloud.google.com/bigquery/docs/reference/storage/&quot;&gt;BigQuery Storage API&lt;/a&gt; to download query results quickly, but at an increased cost. To use this API, first &lt;a href=&quot;https://console.cloud.google.com/apis/library/bigquerystorage.googleapis.com&quot;&gt;enable it in the Cloud Console&lt;/a&gt;. You must also have the &lt;a href=&quot;https://cloud.google.com/bigquery/docs/access-control#roles&quot;&gt;bigquery.readsessions.create&lt;/a&gt; permission on the project you are billing queries to.</source>
          <target state="translated">&lt;a href=&quot;https://cloud.google.com/bigquery/docs/reference/storage/&quot;&gt;BigQuery Storage API&lt;/a&gt; 를 사용하면 쿼리 결과를 신속하게 다운로드 할 수 있지만 비용이 많이 듭니다. 이 API를 사용하려면 먼저 &lt;a href=&quot;https://console.cloud.google.com/apis/library/bigquerystorage.googleapis.com&quot;&gt;클라우드 콘솔&lt;/a&gt; 에서이 API를 활성화하십시오 . 또한 쿼리를 청구 할 프로젝트에 대한 &lt;a href=&quot;https://cloud.google.com/bigquery/docs/access-control#roles&quot;&gt;bigquery.readsessions.create&lt;/a&gt; 권한 이 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="6fdfcff0fe6ff02a97629ec9f15f1e08c333acd4" translate="yes" xml:space="preserve">
          <source>Use the bottleneck library to accelerate if it is installed, the default is True Valid values: False,True [default: True] [currently: True]compute.use_numexpr : bool Use the numexpr library to accelerate computation if it is installed, the default is True Valid values: False,True [default: True] [currently: True]display.chop_threshold : float or None if set to a float value, all float values smaller then the given threshold will be displayed as exactly 0 by repr and friends. [default: None] [currently: None]display.colheader_justify : &amp;lsquo;left&amp;rsquo;/&amp;rsquo;right&amp;rsquo; Controls the justification of column headers. used by DataFrameFormatter. [default: right] [currently: right]display.column_space No description available. [default: 12] [currently: 12]display.date_dayfirst : boolean When True, prints and parses dates with the day first, eg 20/01/2005 [default: False] [currently: False]display.date_yearfirst : boolean When True, prints and parses dates with the year first, eg 2005/01/20 [default: False] [currently: False]display.encoding : str/unicode Defaults to the detected encoding of the console. Specifies the encoding to be used for strings returned by to_string, these are generally strings meant to be displayed on the console. [default: UTF-8] [currently: UTF-8]display.expand_frame_repr : boolean Whether to print out the full DataFrame repr for wide DataFrames across multiple lines, &lt;code&gt;max_columns&lt;/code&gt; is still respected, but the output will wrap-around across multiple &amp;ldquo;pages&amp;rdquo; if its width exceeds &lt;code&gt;display.width&lt;/code&gt;. [default: True] [currently: True]display.float_format : callable The callable should accept a floating point number and return a string with the desired format of the number. This is used in some places like SeriesFormatter. See formats.format.EngFormatter for an example. [default: None] [currently: None]display.html.border : int A &lt;code&gt;border=value&lt;/code&gt; attribute is inserted in the &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; tag for the DataFrame HTML repr. [default: 1] [currently: 1]display.html.table_schema : boolean Whether to publish a Table Schema representation for frontends that support it. (default: False) [default: False] [currently: False]display.html.use_mathjax : boolean When True, Jupyter notebook will process table contents using MathJax, rendering mathematical expressions enclosed by the dollar symbol. (default: True) [default: True] [currently: True]display.large_repr : &amp;lsquo;truncate&amp;rsquo;/&amp;rsquo;info&amp;rsquo; For DataFrames exceeding max_rows/max_cols, the repr (and HTML repr) can show a truncated table (the default from 0.13), or switch to the view from df.info() (the behaviour in earlier versions of pandas). [default: truncate] [currently: truncate]display.latex.escape : bool This specifies if the to_latex method of a Dataframe uses escapes special characters. Valid values: False,True [default: True] [currently: True]display.latex.longtable :bool This specifies if the to_latex method of a Dataframe uses the longtable format. Valid values: False,True [default: False] [currently: False]display.latex.multicolumn : bool This specifies if the to_latex method of a Dataframe uses multicolumns to pretty-print MultiIndex columns. Valid values: False,True [default: True] [currently: True]display.latex.multicolumn_format : bool This specifies if the to_latex method of a Dataframe uses multicolumns to pretty-print MultiIndex columns. Valid values: False,True [default: l] [currently: l]display.latex.multirow : bool This specifies if the to_latex method of a Dataframe uses multirows to pretty-print MultiIndex rows. Valid values: False,True [default: False] [currently: False]display.latex.repr : boolean Whether to produce a latex DataFrame representation for jupyter environments that support it. (default: False) [default: False] [currently: False]display.max_categories : int This sets the maximum number of categories pandas should output when printing out a &lt;code&gt;Categorical&lt;/code&gt; or a Series of dtype &amp;ldquo;category&amp;rdquo;. [default: 8] [currently: 8]display.max_columns : int If max_cols is exceeded, switch to truncate view. Depending on &lt;code&gt;large_repr&lt;/code&gt;, objects are either centrally truncated or printed as a summary view. &amp;lsquo;None&amp;rsquo; value means unlimited.</source>
          <target state="translated">병목 현상 라이브러리를 사용하여 설치 한 경우 가속합니다. 기본값은 True입니다. 유효한 값 : False, True [기본값 : True] [현재 : True] compute.use_numexpr : bool numexpr 라이브러리가 설치된 경우 계산을 가속화하려면 기본값입니다. 유효한 값 : False, True [default : True] [현재 : True] display.chop_threshold : float 또는 None float 값으로 설정하면 지정된 임계 값보다 작은 모든 float 값이 repr 및 friends에 의해 정확히 0으로 표시됩니다. . [default : None] [현재 : 없음] display.colheader_justify : 'left'/ 'right'열 머리글의 자리 맞추기를 제어합니다. DataFrameFormatter에서 사용합니다. [default : right] [현재 : right] display.column_space 설명이 없습니다. [default : 12] [현재 : 12] display.date_dayfirst : boolean True 인 경우 날짜를 맨 처음으로 인쇄하고 구문 분석합니다 (예 : 20/01/2005 [default :False] [현재 : False] display.date_yearfirst : boolean True 인 경우 날짜를 연도로 먼저 인쇄하고 구문 분석합니다. 예 : 2005/01/20 [default : False] [현재 : False] display.encoding : str / unicode 기본값은 콘솔 인코딩이 감지되었습니다. to_string에 의해 리턴 된 문자열에 사용될 인코딩을 지정합니다. 일반적으로 콘솔에 표시되는 문자열입니다. [default : UTF-8] [현재 : UTF-8] display.expand_frame_repr : boolean 여러 줄에 걸쳐 넓은 DataFrame에 대한 전체 DataFrame repr을 인쇄할지 여부,이들은 일반적으로 콘솔에 표시되는 문자열입니다. [default : UTF-8] [현재 : UTF-8] display.expand_frame_repr : boolean 여러 줄에 걸쳐 넓은 DataFrame에 대한 전체 DataFrame repr을 인쇄할지 여부,이들은 일반적으로 콘솔에 표시되는 문자열입니다. [default : UTF-8] [현재 : UTF-8] display.expand_frame_repr : boolean 여러 줄에 걸쳐 넓은 DataFrame에 대한 전체 DataFrame repr을 인쇄할지 여부, &lt;code&gt;max_columns&lt;/code&gt; 는 여전히 존중되지만 너비가 &lt;code&gt;display.width&lt;/code&gt; 를 초과하면 출력이 여러 &quot;페이지&quot;에서 줄 바꿈됩니다 . [default : True] [현재 : True] display.float_format : callable 호출 가능은 부동 소수점 숫자를 허용하고 원하는 숫자 형식의 문자열을 반환해야합니다. 이것은 SeriesFormatter와 같은 일부 장소에서 사용됩니다. 예를 들어 modes.format.EngFormatter를 참조하십시오. [default : None] [현재 : None] display.html.border : int &lt;code&gt;border=value&lt;/code&gt; 속성이 &lt;code&gt;&amp;lt;table&amp;gt;&lt;/code&gt; 에 삽입됩니다DataFrame HTML repr에 대한 태그입니다. [default : 1] [현재 : 1] display.html.table_schema : boolean 지원하는 프런트 엔드에 대한 테이블 스키마 표현을 게시할지 여부입니다. (기본값 : False) [default : False] [현재 : False] display.html.use_mathjax : boolean True 인 경우 Jupyter 노트북은 MathJax를 사용하여 테이블 내용을 처리하여 수학 기호를 달러 기호로 묶습니다. (기본값 : True) [default : True] [현재 : True] display.large_repr : 'truncate'/ 'info'max_rows / max_cols를 초과하는 DataFrame의 경우 repr (및 HTML repr)에서 잘린 테이블 (기본값은 0.13)을 표시 할 수 있습니다. ) 또는 df.info () (이전 버전의 팬더 동작)에서보기로 전환하십시오. [default : truncate] [현재 : truncate] display.latex.escape : bool 데이터 프레임의 to_latex 메서드가 특수 문자를 이스케이프 처리하는지 여부를 지정합니다.유효한 값 : False, True [기본값 : True] [현재 : True] display.latex.longtable : bool 데이터 프레임의 to_latex 메서드가 longtable 형식을 사용하는지 여부를 지정합니다. 유효한 값 : False, True [기본값 : False] [현재 : False] display.latex.multicolumn : bool 데이터 프레임의 to_latex 메서드가 다중 열을 사용하여 MultiIndex 열을 예쁜 인쇄할지 여부를 지정합니다. 유효한 값 : False, True [기본값 : True] [현재 : True] display.latex.multicolumn_format : bool 데이터 프레임의 to_latex 메서드가 다중 열을 사용하여 MultiIndex 열을 예쁜 인쇄할지 여부를 지정합니다. 유효한 값 : False, True [기본값 : l] [현재 : l] display.latex.multirow : bool 데이터 프레임의 to_latex 메서드가 다중 행을 사용하여 MultiIndex 행을 예쁘게 인쇄하는지 여부를 지정합니다. 유효한 값 : False, True [기본값 : False] [현재 : False] display.latex.repr :boolean 지원하는 Jupyter 환경에 대한 라텍스 DataFrame 표현을 생성할지 여부입니다. (기본값 : False) [default : False] [현재 : False] display.max_categories : int 이것은 팬더가 인쇄 할 때 출력해야하는 최대 범주 수를 설정합니다. &lt;code&gt;Categorical&lt;/code&gt; 또는 일련의 dtype &quot;카테고리&quot;. [default : 8] [현재 : 8] display.max_columns : int max_cols를 초과하면 잘림보기로 전환하십시오. &lt;code&gt;large_repr&lt;/code&gt; 에 따라 객체는 중앙에서 잘 리거나 요약보기로 인쇄됩니다. '없음'값은 무제한을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="700cbb72c809da2a17932073eef6e726214cadeb" translate="yes" xml:space="preserve">
          <source>Use the index from the left DataFrame as the join key(s). If it is a MultiIndex, the number of keys in the other DataFrame (either the index or a number of columns) must match the number of levels.</source>
          <target state="translated">왼쪽 DataFrame의 인덱스를 조인 키로 사용하십시오. MultiIndex 인 경우 다른 DataFrame의 키 수 (인덱스 또는 여러 열)는 수준 수와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="771c6b42b2f56fe9ec6963863ec7797b9a807f4b" translate="yes" xml:space="preserve">
          <source>Use the index from the right DataFrame as the join key. Same caveats as left_index.</source>
          <target state="translated">오른쪽 DataFrame의 인덱스를 조인 키로 사용하십시오. left_index와 동일한 경고</target>
        </trans-unit>
        <trans-unit id="f412d262450d57388e86a623707c5654cbfc0304" translate="yes" xml:space="preserve">
          <source>Use the index of the left DataFrame as the join key.</source>
          <target state="translated">왼쪽 DataFrame의 인덱스를 조인 키로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6a37deb8aa995bb88fd357fe29e6b7a23c9e6dcd" translate="yes" xml:space="preserve">
          <source>Use the index of the right DataFrame as the join key.</source>
          <target state="translated">올바른 DataFrame의 인덱스를 조인 키로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="16418f51aa032ae290deab0448d8486fbffbff50" translate="yes" xml:space="preserve">
          <source>Use the library &lt;code&gt;tqdm&lt;/code&gt; to show the progress bar for the upload, chunk by chunk.</source>
          <target state="translated">라이브러리 &lt;code&gt;tqdm&lt;/code&gt; 을 사용하여 청크 단위로 업로드 진행률 표시 줄을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="7e5fa5b1659bc5412acc5199d3637ae107cef3fe" translate="yes" xml:space="preserve">
          <source>Use the method to control the axis:</source>
          <target state="translated">축을 제어하는 ​​방법을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9c2ba1f6312ce4e48c13029e065ab619529f6332" translate="yes" xml:space="preserve">
          <source>Use the method to control the broadcast axis:</source>
          <target state="translated">브로드 캐스트 축을 제어하는 ​​방법을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="22ae3f4706c4bf5ca26f3bc8095db84c41e2f7ef" translate="yes" xml:space="preserve">
          <source>Use union of keys from both frames</source>
          <target state="translated">두 프레임의 키 조합 사용</target>
        </trans-unit>
        <trans-unit id="19444b70e0611aa0e6cb05ccbde39645527db392" translate="yes" xml:space="preserve">
          <source>Used as labels for the resulting bins. Must be of the same length as the resulting bins. If False, return only integer indicators of the bins.</source>
          <target state="translated">결과 빈의 레이블로 사용됩니다. 결과 출력 함과 길이가 같아야합니다. False이면 bin의 정수 표시기 만 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="fdca91236b5bbc3f7d4f14858c6afe584cbb2218" translate="yes" xml:space="preserve">
          <source>Used for moving to next business day.</source>
          <target state="translated">다음 영업일로 이동하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="edcdd215d452f9578239f8d3bd2fce8067b2a472" translate="yes" xml:space="preserve">
          <source>Used for substituting each value in a Series with another value, that may be derived from a function, a &lt;code&gt;dict&lt;/code&gt; or a &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">함수, &lt;code&gt;dict&lt;/code&gt; 또는 &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; 에서 파생 된 Series의 각 값을 다른 값으로 대체하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="914d4a629b03ab5dd7a2b912da4154bafa741e23" translate="yes" xml:space="preserve">
          <source>Used to determine the groups for the groupby. If &lt;code&gt;by&lt;/code&gt; is a function, it&amp;rsquo;s called on each value of the object&amp;rsquo;s index. If a dict or Series is passed, the Series or dict VALUES will be used to determine the groups (the Series&amp;rsquo; values are first aligned; see &lt;code&gt;.align()&lt;/code&gt; method). If an ndarray is passed, the values are used as-is determine the groups. A label or list of labels may be passed to group by the columns in &lt;code&gt;self&lt;/code&gt;. Notice that a tuple is interpreted as a (single) key.</source>
          <target state="translated">그룹 별 그룹을 결정하는 데 사용됩니다. 경우 &lt;code&gt;by&lt;/code&gt; 기능입니다, 그것은 개체의 인덱스의 각 값에라고. dict 또는 Series가 전달되면 Series 또는 dict VALUES를 사용하여 그룹을 결정합니다 (Series의 값이 먼저 정렬됩니다. &lt;code&gt;.align()&lt;/code&gt; 메서드 참조 ). ndarray가 전달되면 값이 그대로 사용되어 그룹을 결정합니다. 레이블 또는 레이블 목록은 &lt;code&gt;self&lt;/code&gt; 열에 의해 그룹으로 전달 될 수 있습니다 . 튜플은 (단일) 키로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="4e6491795f646a7b27bd141cb1ca6273bdc31d38" translate="yes" xml:space="preserve">
          <source>Useful to replicate and rearrange a MultiIndex for combination with another Index with n_repeat items.</source>
          <target state="translated">n_repeat 항목이있는 다른 인덱스와 조합하기 위해 MultiIndex를 복제하고 재정렬하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="bec249e659662f7d5947bf09a1ea1d4a552885b0" translate="yes" xml:space="preserve">
          <source>User Guide</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b8e6fc57a07634b504a6fe75b9f6fa74377f47" translate="yes" xml:space="preserve">
          <source>Users brand-new to pandas should start with &lt;a href=&quot;../getting_started/10min#min&quot;&gt;10 minutes to pandas&lt;/a&gt;.</source>
          <target state="translated">팬더를 처음 접하는 사용자는 &lt;a href=&quot;../getting_started/10min#min&quot;&gt;10 분부터 팬더로&lt;/a&gt; 시작해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b0c86eb749ef9711133ac01a59c7d397d4a96c76" translate="yes" xml:space="preserve">
          <source>Users can use the &lt;code&gt;validate&lt;/code&gt; argument to automatically check whether there are unexpected duplicates in their merge keys. Key uniqueness is checked before merge operations and so should protect against memory overflows. Checking key uniqueness is also a good way to ensure user data structures are as expected.</source>
          <target state="translated">사용자는 &lt;code&gt;validate&lt;/code&gt; 인수를 사용하여 병합 키에 예기치 않은 중복이 있는지 자동으로 확인할 수 있습니다. 병합 작업 전에 키 고유성을 확인하므로 메모리 오버플로를 방지해야합니다. 키 고유성을 확인하는 것도 사용자 데이터 구조가 예상대로 이루어 지도록하는 좋은 방법입니다.</target>
        </trans-unit>
        <trans-unit id="d0a694eef0a9ad23a327513357f90aec1ada1d91" translate="yes" xml:space="preserve">
          <source>Users should not call this directly. Rather, it is invoked by &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.array.html#numpy.array&quot;&gt;&lt;code&gt;numpy.array()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.asarray.html#numpy.asarray&quot;&gt;&lt;code&gt;numpy.asarray()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자는 이것을 직접 호출해서는 안됩니다. 오히려 &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.array.html#numpy.array&quot;&gt; &lt;code&gt;numpy.array()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.asarray.html#numpy.asarray&quot;&gt; &lt;code&gt;numpy.asarray()&lt;/code&gt; &lt;/a&gt; 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="8941173c7d1a88e64f9495a2d9902d7f4b873203" translate="yes" xml:space="preserve">
          <source>Users should use &lt;code&gt;period_array()&lt;/code&gt; to create new instances.</source>
          <target state="translated">사용자는 &lt;code&gt;period_array()&lt;/code&gt; 를 사용하여 새 인스턴스를 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="7c51f1e35ab5b0c2b60d43ff8d0a8b908ffc2fec" translate="yes" xml:space="preserve">
          <source>Users who are familiar with SQL but new to pandas might be interested in a &lt;a href=&quot;../getting_started/comparison/comparison_with_sql#compare-with-sql-join&quot;&gt;comparison with SQL&lt;/a&gt;.</source>
          <target state="translated">SQL에 익숙하지만 판다에 익숙하지 않은 사용자는 SQL &lt;a href=&quot;../getting_started/comparison/comparison_with_sql#compare-with-sql-join&quot;&gt;과&lt;/a&gt; 의 비교에 관심이있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="426166693293410a194625f0edc7839492080dc5" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;https://pypi.org/project/pytest-xdist&quot;&gt;pytest-xdist&lt;/a&gt;, one can speed up local testing on multicore machines. To use this feature, you will need to install &lt;code&gt;pytest-xdist&lt;/code&gt; via:</source>
          <target state="translated">&lt;a href=&quot;https://pypi.org/project/pytest-xdist&quot;&gt;pytest-xdist를&lt;/a&gt; 사용하면 멀티 코어 머신에서 로컬 테스트 속도를 높일 수 있습니다. 이 기능을 사용하려면 다음을 통해 &lt;code&gt;pytest-xdist&lt;/code&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e4d0161751612fa558c88cb2b4636a8e911a46c7" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;fill_value&lt;/code&gt; fills Nones prior to passing the column to the merge function.</source>
          <target state="translated">&lt;code&gt;fill_value&lt;/code&gt; 를 사용 하면 열을 병합 함수에 전달하기 전에 없음을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="cc56f847f5b3581bd38c30acacd21c8231331d58" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;hypothesis&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;hypothesis&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="bc62043ee8f6268a8878d181134a1cf4a5e69d7e" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;pytest&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pytest&lt;/code&gt; 사용</target>
        </trans-unit>
        <trans-unit id="9b7149ef9b2a7a84586ceda8d10517a312a3094c" translate="yes" xml:space="preserve">
          <source>Using Numba</source>
          <target state="translated">Numba 사용</target>
        </trans-unit>
        <trans-unit id="e91cdc544974bc18d2601ae335f9945eb1324829" translate="yes" xml:space="preserve">
          <source>Using Pandas and XlsxWriter to create Excel charts</source>
          <target state="translated">Pandas 및 XlsxWriter를 사용하여 Excel 차트 만들기</target>
        </trans-unit>
        <trans-unit id="120d561aef735e8b901a7bc6aa0b5043e37a215b" translate="yes" xml:space="preserve">
          <source>Using SQLAlchemy makes it possible to use any DB supported by that library. If a DBAPI2 object, only sqlite3 is supported.</source>
          <target state="translated">SQLAlchemy를 사용하면 해당 라이브러리에서 지원하는 모든 DB를 사용할 수 있습니다. DBAPI2 오브젝트 인 경우 sqlite3 만 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="5dc2cdbbdc0a6a941ca0f360c31b873dc32f76aa" translate="yes" xml:space="preserve">
          <source>Using SQLAlchemy makes it possible to use any DB supported by that library. Legacy support is provided for sqlite3.Connection objects.</source>
          <target state="translated">SQLAlchemy를 사용하면 해당 라이브러리에서 지원하는 모든 DB를 사용할 수 있습니다. sqlite3.Connection 객체에 대한 레거시 지원이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b7be2ff881fde47ae80054d53a95fa77faa2dc2b" translate="yes" xml:space="preserve">
          <source>Using a &lt;code&gt;sep&lt;/code&gt; in &lt;code&gt;pd.read_csv&lt;/code&gt; other than a single character:</source>
          <target state="translated">사용 &lt;code&gt;sep&lt;/code&gt; 에서 &lt;code&gt;pd.read_csv&lt;/code&gt; 단일 문자 이외 :</target>
        </trans-unit>
        <trans-unit id="fb61aa0e018ee51347b43f0a7526bef1998377b2" translate="yes" xml:space="preserve">
          <source>Using a DataFrame column as weights. Rows with larger value in the &lt;code&gt;num_specimen_seen&lt;/code&gt; column are more likely to be sampled.</source>
          <target state="translated">DataFrame 열을 가중치로 사용 &lt;code&gt;num_specimen_seen&lt;/code&gt; 열 에서 더 큰 값을 가진 행 이 샘플링 될 가능성이 높습니다.</target>
        </trans-unit>
        <trans-unit id="e036228dc9018c68b843ce1cf9fe7c56a8527252" translate="yes" xml:space="preserve">
          <source>Using a Series, the number of places for specific columns can be specified with the column names as index and the number of decimal places as value</source>
          <target state="translated">Series를 사용하면 특정 열의 자리 수를 열 이름을 인덱스로 지정하고 소수 자릿수를 값으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15bbab47a1cc3d92a75b0d85e261c443f16ab3ec" translate="yes" xml:space="preserve">
          <source>Using a compiled regex with flags</source>
          <target state="translated">플래그와 함께 컴파일 된 정규식 사용</target>
        </trans-unit>
        <trans-unit id="c5b984dafbcc353db8249a7fe861d67dafaec72b" translate="yes" xml:space="preserve">
          <source>Using a non-unix epoch origin</source>
          <target state="translated">비 유닉스 신기원 사용</target>
        </trans-unit>
        <trans-unit id="d1865f3be016d0f7cef8155a68185f7e773d2df7" translate="yes" xml:space="preserve">
          <source>Using a numpy universal function (in this case the same as &lt;code&gt;np.sqrt(df)&lt;/code&gt;):</source>
          <target state="translated">numpy 범용 함수 사용 (이 경우 &lt;code&gt;np.sqrt(df)&lt;/code&gt; 와 동일 ) :</target>
        </trans-unit>
        <trans-unit id="8e787ebc732080f27a6ff292230b2e8190d437c0" translate="yes" xml:space="preserve">
          <source>Using a reducing function on either axis</source>
          <target state="translated">어느 축에서든 축소 기능 사용</target>
        </trans-unit>
        <trans-unit id="29cd74c2e5c6fa2aed948435e098c60374817533" translate="yes" xml:space="preserve">
          <source>Using a unix epoch time</source>
          <target state="translated">유닉스 시대 시간 사용</target>
        </trans-unit>
        <trans-unit id="c49b713b5e55028869df42d6cfa53b4dc2e08760" translate="yes" xml:space="preserve">
          <source>Using axis-style parameters</source>
          <target state="translated">축 스타일 파라미터 사용</target>
        </trans-unit>
        <trans-unit id="b6de15f86e007435cdece1c3e681b8fa40e9333c" translate="yes" xml:space="preserve">
          <source>Using explicit names, instead of the column names</source>
          <target state="translated">열 이름 대신 명시 적 이름 사용</target>
        </trans-unit>
        <trans-unit id="4933c0c3ab46bd51fd15adf913594af05a0df2c3" translate="yes" xml:space="preserve">
          <source>Using if/truth statements with pandas</source>
          <target state="translated">팬더와 함께 if / truth 문 사용</target>
        </trans-unit>
        <trans-unit id="0b43fac916c33e1161b56e87a1683348f661e58b" translate="yes" xml:space="preserve">
          <source>Using ndarray</source>
          <target state="translated">ndarray 사용</target>
        </trans-unit>
        <trans-unit id="c365bad2d4db0194276476a489e760e811540376" translate="yes" xml:space="preserve">
          <source>Using polynomial interpolation.</source>
          <target state="translated">다항식 보간 사용.</target>
        </trans-unit>
        <trans-unit id="a3dc2ee823828f157a4cb1418c795a8c1b062601" translate="yes" xml:space="preserve">
          <source>Using regex groups (extract second group and swap case):</source>
          <target state="translated">정규식 그룹 사용 (두 번째 그룹 추출 및 교체 사례) :</target>
        </trans-unit>
        <trans-unit id="63e3d103b486e99681b49f5aded95795c27c7e41" translate="yes" xml:space="preserve">
          <source>Using the IndexSlice class for a more intuitive command:</source>
          <target state="translated">보다 직관적 인 명령을 위해 IndexSlice 클래스 사용</target>
        </trans-unit>
        <trans-unit id="ea90f137cd3d7772dca24b621e85197b36d0f9dd" translate="yes" xml:space="preserve">
          <source>Using the default slice command:</source>
          <target state="translated">기본 슬라이스 명령 사용 :</target>
        </trans-unit>
        <trans-unit id="6aa326ae6dad6edab1a002da06593eaca191f657" translate="yes" xml:space="preserve">
          <source>Using the other two forms that mimic the API for &lt;code&gt;datetime.datetime&lt;/code&gt;:</source>
          <target state="translated">API를 모방 다른 두 가지 형태로 사용 &lt;code&gt;datetime.datetime&lt;/code&gt; 를 :</target>
        </trans-unit>
        <trans-unit id="13d69d33d9f21d84fb23b18de59c383a0a0266ed" translate="yes" xml:space="preserve">
          <source>Using the primary calling convention:</source>
          <target state="translated">기본 통화 규칙 사용 :</target>
        </trans-unit>
        <trans-unit id="f8b8d7a59139089e92be8565e082a95af765430e" translate="yes" xml:space="preserve">
          <source>Vaex</source>
          <target state="translated">Vaex</target>
        </trans-unit>
        <trans-unit id="c42e8d3980fddf7ed29754d8ebcbb02540c31477" translate="yes" xml:space="preserve">
          <source>Valid regular expression.</source>
          <target state="translated">유효한 정규식.</target>
        </trans-unit>
        <trans-unit id="da433f04f8b795f5b82c11defecd596bda4d771b" translate="yes" xml:space="preserve">
          <source>Value between 0 &amp;lt;= q &amp;lt;= 1, the quantile(s) to compute.</source>
          <target state="translated">0 &amp;lt;= q &amp;lt;= 1 사이의 값, 계산할 Quantile (s).</target>
        </trans-unit>
        <trans-unit id="ffd6598e0be40e6fe4832421e93cc349c7e17880" translate="yes" xml:space="preserve">
          <source>Value to be converted to Timestamp.</source>
          <target state="translated">타임 스탬프로 변환 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="56b68add8862326b02ab0302406d276162fb4fbd" translate="yes" xml:space="preserve">
          <source>Value to mark &amp;ldquo;not found&amp;rdquo;.</source>
          <target state="translated">&quot;찾을 수 없음&quot;을 표시하는 값입니다.</target>
        </trans-unit>
        <trans-unit id="a879a00b6b3b8b106a33489a22d7895dd3dcbefc" translate="yes" xml:space="preserve">
          <source>Value to replace any values matching &lt;code&gt;to_replace&lt;/code&gt; with. For a DataFrame a dict of values can be used to specify which value to use for each column (columns not in the dict will not be filled). Regular expressions, strings and lists or dicts of such objects are also allowed.</source>
          <target state="translated">&lt;code&gt;to_replace&lt;/code&gt; 와 일치하는 값을 대체 할 값 입니다. DataFrame의 경우 값 dict를 사용하여 각 열에 사용할 값을 지정할 수 있습니다 (dict에없는 열은 채워지지 않음). 정규 표현식, 문자열 및 이러한 객체의 목록 또는 dict도 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="e7e1f2ee93406a328727d11de6676ad7331c179c" translate="yes" xml:space="preserve">
          <source>Value to replace missing values with</source>
          <target state="translated">결 측값을 대체 할 값</target>
        </trans-unit>
        <trans-unit id="90886ca717da9107e5198f6052cdc6d140f264b9" translate="yes" xml:space="preserve">
          <source>Value to set the axis name attribute.</source>
          <target state="translated">축 이름 속성을 설정하는 값입니다.</target>
        </trans-unit>
        <trans-unit id="b348722020d6796c9a72b0320bd645c72988fd9f" translate="yes" xml:space="preserve">
          <source>Value to use for filling NaN values.</source>
          <target state="translated">NaN 값을 채우는 데 사용할 값입니다.</target>
        </trans-unit>
        <trans-unit id="fe1128c0895fca6559f64fb62e8dce8a4175b044" translate="yes" xml:space="preserve">
          <source>Value to use for missing values, applied during upsampling (note this does not fill NaNs that already were present).</source>
          <target state="translated">업 샘플링 중에 적용되는 결 측값에 사용할 값입니다 (이미 존재했던 NaN을 채우지는 않습니다).</target>
        </trans-unit>
        <trans-unit id="416886e4c2d5fd9209d057bb1fc0a4a001901316" translate="yes" xml:space="preserve">
          <source>Value to use for missing values. Defaults to NaN, but can be any &amp;ldquo;compatible&amp;rdquo; value</source>
          <target state="translated">결 측값에 사용할 값입니다. 기본값은 NaN이지만 &quot;호환 가능한&quot;값일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a560ca76cd09ad17375ac1ee8aa67bef91575585" translate="yes" xml:space="preserve">
          <source>Value to use for missing values. Defaults to NaN, but can be any &amp;ldquo;compatible&amp;rdquo; value.</source>
          <target state="translated">결 측값에 사용할 값입니다. 기본값은 NaN이지만 &quot;호환 가능한&quot;값일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05da114e86006396d3ba2924fa1fe9bdbbebf386" translate="yes" xml:space="preserve">
          <source>Value to use in the &lt;code&gt;labels&lt;/code&gt; array to indicate missing values.</source>
          <target state="translated">누락 된 값을 나타 내기 위해 &lt;code&gt;labels&lt;/code&gt; 배열 에 사용할 값입니다.</target>
        </trans-unit>
        <trans-unit id="7534cf43291aed16fbd535a3c9b276f4255ef53d" translate="yes" xml:space="preserve">
          <source>Value to use to fill holes (e.g. 0), alternately a dict/Series/DataFrame of values specifying which value to use for each index (for a Series) or column (for a DataFrame). Values not in the dict/Series/DataFrame will not be filled. This value cannot be a list.</source>
          <target state="translated">홀을 채우는 데 사용할 값 (예 : 0), 각 인덱스 (시리즈) 또는 열 (DataFrame)에 사용할 값을 지정하는 dict / Series / DataFrame 값. dict / Series / DataFrame에없는 값은 채워지지 않습니다. 이 값은 목록이 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="484267409aeaa186db069428bdd811d3c469865c" translate="yes" xml:space="preserve">
          <source>Value to use when replacing NaN values.</source>
          <target state="translated">NaN 값을 바꿀 때 사용할 값입니다.</target>
        </trans-unit>
        <trans-unit id="05f7d9da500b4abe7efbbe645623daa69b38fcca" translate="yes" xml:space="preserve">
          <source>Value(s) between 0 and 1 providing the quantile(s) to compute.</source>
          <target state="translated">계산할 Quantile (들)을 제공하는 0과 1 사이의 값.</target>
        </trans-unit>
        <trans-unit id="ca5e1888f7ff9f4679a3377b455596a48d014681" translate="yes" xml:space="preserve">
          <source>ValueError</source>
          <target state="translated">ValueError</target>
        </trans-unit>
        <trans-unit id="c2a73dc2e5622d27d837979a58687e470870d34a" translate="yes" xml:space="preserve">
          <source>ValueError :</source>
          <target state="translated">ValueError :</target>
        </trans-unit>
        <trans-unit id="6c8f3a50824c54f095adbdf6c5e3a029452a18f6" translate="yes" xml:space="preserve">
          <source>ValueError if the freq cannot be converted</source>
          <target state="translated">주파수를 변환 할 수없는 경우 ValueError</target>
        </trans-unit>
        <trans-unit id="50e858dfb72147153569ebcd4e118b2589c4f6ce" translate="yes" xml:space="preserve">
          <source>ValueError:</source>
          <target state="translated">ValueError:</target>
        </trans-unit>
        <trans-unit id="d7613af2949341d5019f39fbbef6c4582c2a4442" translate="yes" xml:space="preserve">
          <source>Values at the specified freq.</source>
          <target state="translated">지정된 주파수에서의 값.</target>
        </trans-unit>
        <trans-unit id="8d7d3d56cfeee841ef72f807d9b086ab815db9bd" translate="yes" xml:space="preserve">
          <source>Values considered &amp;ldquo;missing&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;결측&amp;rdquo;으로 간주되는 값</target>
        </trans-unit>
        <trans-unit id="039594d9ec5a0ba9321a4b54e784342fa8c1ec78" translate="yes" xml:space="preserve">
          <source>Values is a level of this MultiIndex converted to a single &lt;a href=&quot;pandas.index#pandas.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt; (or subclass thereof).</source>
          <target state="translated">값은이 MultiIndex의 수준으로 단일 &lt;a href=&quot;pandas.index#pandas.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt; (또는 그 하위 클래스) 로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="d5ed4268ee72c1e662973fa7e5faf5230f346b03" translate="yes" xml:space="preserve">
          <source>Values must be hashable and have the same length as &lt;code&gt;data&lt;/code&gt;. Non-unique index values are allowed. Will default to RangeIndex (0, 1, 2, &amp;hellip;, n) if not provided. If both a dict and index sequence are used, the index will override the keys found in the dict.</source>
          <target state="translated">값은 해시 가능해야하며 data와 길이가 같아야 &lt;code&gt;data&lt;/code&gt; . 고유하지 않은 인덱스 값이 허용됩니다. 제공되지 않으면 기본적으로 RangeIndex (0, 1, 2,&amp;hellip;, n)로 설정됩니다. dict 및 색인 순서가 모두 사용되면 색인은 dict에서 찾은 키를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="598d68d07149fd77c855a3675dbefd3f3238bd09" translate="yes" xml:space="preserve">
          <source>Values of the DataFrame are replaced with other values dynamically. This differs from updating with &lt;code&gt;.loc&lt;/code&gt; or &lt;code&gt;.iloc&lt;/code&gt;, which require you to specify a location to update with some value.</source>
          <target state="translated">DataFrame의 값은 다른 값으로 동적으로 바뀝니다. 이는 &lt;code&gt;.loc&lt;/code&gt; 또는 &lt;code&gt;.iloc&lt;/code&gt; 으로 업데이트하는 것과 다르며 , 값을 업데이트 할 위치를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="89439b321846e12cbf2095e1202a5bccbb606a56" translate="yes" xml:space="preserve">
          <source>Values of the Series are replaced with other values dynamically. This differs from updating with &lt;code&gt;.loc&lt;/code&gt; or &lt;code&gt;.iloc&lt;/code&gt;, which require you to specify a location to update with some value.</source>
          <target state="translated">시리즈의 값은 다른 값으로 동적으로 대체됩니다. 이는 &lt;code&gt;.loc&lt;/code&gt; 또는 &lt;code&gt;.iloc&lt;/code&gt; 으로 업데이트하는 것과 다르며 , 값을 업데이트 할 위치를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="dd97615f4873fd997b552da4ee473f604ea0f8d6" translate="yes" xml:space="preserve">
          <source>Values should be arrays or Series.</source>
          <target state="translated">값은 배열 또는 계열이어야합니다.</target>
        </trans-unit>
        <trans-unit id="8782db389bad70efa4ab6b4035c0e33ea809d473" translate="yes" xml:space="preserve">
          <source>Values to consider as False.</source>
          <target state="translated">거짓으로 간주되는 값.</target>
        </trans-unit>
        <trans-unit id="464c7c5f88a20d0db456aa9b1c16c34cc782b8ef" translate="yes" xml:space="preserve">
          <source>Values to consider as True.</source>
          <target state="translated">True로 간주 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="e14fd14e48a03840922e0acb5e2dbf17dc807a53" translate="yes" xml:space="preserve">
          <source>Values to group by in the columns.</source>
          <target state="translated">열에서 그룹화 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="d9d28c6307aae0b65b95e2bf0cbb821fe8aad383" translate="yes" xml:space="preserve">
          <source>Values to group by in the rows.</source>
          <target state="translated">행에서 그룹화 할 값입니다.</target>
        </trans-unit>
        <trans-unit id="78ca406c0689b1cb7aa9242e838132006504254c" translate="yes" xml:space="preserve">
          <source>Values to insert into &lt;code&gt;self&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 에 삽입 할 값 입니다.</target>
        </trans-unit>
        <trans-unit id="3443eed9dae222352dd23ccae14ed45f7afe9f70" translate="yes" xml:space="preserve">
          <source>Values used to determine the groups.</source>
          <target state="translated">그룹을 결정하는 데 사용되는 값입니다.</target>
        </trans-unit>
        <trans-unit id="13749218a9adc080dd9bf04b5a83c2314bf719d9" translate="yes" xml:space="preserve">
          <source>Variance of values within each group.</source>
          <target state="translated">각 그룹 내 값의 차이</target>
        </trans-unit>
        <trans-unit id="eed586eefe864080b44edb04ae092d2677441a64" translate="yes" xml:space="preserve">
          <source>Various tutorials</source>
          <target state="translated">다양한 튜토리얼</target>
        </trans-unit>
        <trans-unit id="af8867db3c91034662bb83a07677cc2fd1e62025" translate="yes" xml:space="preserve">
          <source>Vectorize</source>
          <target state="translated">Vectorize</target>
        </trans-unit>
        <trans-unit id="ac1dedd01b5fad8bc873e09d5bfd4c0415da7889" translate="yes" xml:space="preserve">
          <source>Vectorized apply of DateOffset to DatetimeIndex, raises NotImplentedError for offsets without a vectorized implementation.</source>
          <target state="translated">DateTimeIndex에 DateOffset을 벡터화하여 적용하면 벡터화 된 구현없이 오프셋에 대해 NotImplentedError가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="06a6eaaabd40081567251c3f1e3eff13409f3dd2" translate="yes" xml:space="preserve">
          <source>Vectorized string functions for Series and Index. NAs stay NA unless handled otherwise by a particular method. Patterned after Python&amp;rsquo;s string methods, with some inspiration from R&amp;rsquo;s stringr package.</source>
          <target state="translated">시리즈 및 인덱스에 대한 벡터화 된 문자열 함수 NA는 특정 방법으로 달리 처리하지 않는 한 NA를 유지합니다. R의 stringr 패키지에서 영감을 받아 Python의 문자열 메소드를 따라 패턴 화되었습니다.</target>
        </trans-unit>
        <trans-unit id="7831e4b4a10a8f50a8af637a3ced1a704bd6dee1" translate="yes" xml:space="preserve">
          <source>Vectorized string methods</source>
          <target state="translated">벡터화 된 문자열 메서드</target>
        </trans-unit>
        <trans-unit id="bbfbd52ad095fe7fae949ed22a1925a3ea9265f8" translate="yes" xml:space="preserve">
          <source>Verify that the IntervalArray is valid.</source>
          <target state="translated">IntervalArray가 유효한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ca690ebe009f629b2ef7ce7c2119e0ccd65efe39" translate="yes" xml:space="preserve">
          <source>Verify that the IntervalIndex is valid.</source>
          <target state="translated">IntervalIndex가 유효한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="71ef3b0bdcedcf3fbea2d515d1b0ebbecfcaa900" translate="yes" xml:space="preserve">
          <source>Version control, Git, and GitHub</source>
          <target state="translated">버전 관리, Git 및 GitHub</target>
        </trans-unit>
        <trans-unit id="29de7db8d5812e540e315bc3efa1e371e9df3d39" translate="yes" xml:space="preserve">
          <source>Version to use in the output dta file. Version 114 can be used read by Stata 10 and later. Version 117 can be read by Stata 13 or later. Version 114 limits string variables to 244 characters or fewer while 117 allows strings with lengths up to 2,000,000 characters.</source>
          <target state="translated">출력 dta 파일에서 사용할 버전입니다. 버전 114는 Stata 10 이상에서 읽을 수 있습니다. 버전 117은 Stata 13 이상에서 읽을 수 있습니다. 버전 114는 문자열 변수를 244 자 이하로 제한하는 반면 117은 최대 2,000,000 자 길이의 문자열을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="b1374fde18759eaa0fd694d2f9018fb37c97993f" translate="yes" xml:space="preserve">
          <source>Vertical bar plot.</source>
          <target state="translated">수직 막대 플롯.</target>
        </trans-unit>
        <trans-unit id="edaf87381353dc5103c9469450ddd93a9997ec00" translate="yes" xml:space="preserve">
          <source>Video tutorials</source>
          <target state="translated">비디오 자습서</target>
        </trans-unit>
        <trans-unit id="6a06e8495189132db418ae810fb661ffa7c56ba6" translate="yes" xml:space="preserve">
          <source>Viewing data</source>
          <target state="translated">데이터보기</target>
        </trans-unit>
        <trans-unit id="3fb0214cbca096c30b3e1b6363cfdc4fffea8dc7" translate="yes" xml:space="preserve">
          <source>Viewing the first 5 lines</source>
          <target state="translated">처음 5 줄보기</target>
        </trans-unit>
        <trans-unit id="463eb436d42f4ede4837191a5786c727d132d5d6" translate="yes" xml:space="preserve">
          <source>Viewing the first &lt;code&gt;n&lt;/code&gt; lines (three in this case)</source>
          <target state="translated">처음 &lt;code&gt;n&lt;/code&gt; 줄 보기 (이 경우 3 줄)</target>
        </trans-unit>
        <trans-unit id="f86e126d0ee23eb31efc593bf9013dc73169413c" translate="yes" xml:space="preserve">
          <source>Viewing the last 5 lines</source>
          <target state="translated">마지막 5 줄보기</target>
        </trans-unit>
        <trans-unit id="ead17bf4f4e18d810e807eb0e7f35c49ac39da7d" translate="yes" xml:space="preserve">
          <source>Viewing the last &lt;code&gt;n&lt;/code&gt; lines (three in this case)</source>
          <target state="translated">마지막 &lt;code&gt;n&lt;/code&gt; 줄 보기 (이 경우 3 줄)</target>
        </trans-unit>
        <trans-unit id="d175985b87dd9f620aa960059c730b4a35e3bcb5" translate="yes" xml:space="preserve">
          <source>Visualization</source>
          <target state="translated">Visualization</target>
        </trans-unit>
        <trans-unit id="1c255b91e71a2fddc2e75f8455387053d412a4c1" translate="yes" xml:space="preserve">
          <source>WHERE</source>
          <target state="translated">WHERE</target>
        </trans-unit>
        <trans-unit id="6828afe8852386b4788c39621501c1d447ab8e44" translate="yes" xml:space="preserve">
          <source>Walk the pytables group hierarchy for pandas objects</source>
          <target state="translated">팬더 객체에 대한 pytables 그룹 계층 구조를 걷습니다.</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="30d6d7ccd9fe97a47017194dae5a70a5c0021832" translate="yes" xml:space="preserve">
          <source>Warning raised when reading a file that doesn&amp;rsquo;t use the default &amp;lsquo;c&amp;rsquo; parser.</source>
          <target state="translated">기본 'c'구문 분석기를 사용하지 않는 파일을 읽을 때 경고가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0caaadb5d2e8fec36befa4dce65e6bd578408214" translate="yes" xml:space="preserve">
          <source>Warning raised when reading different dtypes in a column from a file.</source>
          <target state="translated">파일에서 열의 다른 dtype을 읽을 때 경고가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b5e348be328d880004677a8cd21158198283f29e" translate="yes" xml:space="preserve">
          <source>Warning raised when there is a possible performance impact.</source>
          <target state="translated">성능에 영향을 줄 수있는 경우 경고가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2229aba6da05b699c545f4ad976bbbac370b52e6" translate="yes" xml:space="preserve">
          <source>Warning: Starting in 0.20.0, the .ix indexer is deprecated, in favor of the more strict .iloc and .loc indexers.</source>
          <target state="translated">경고 : 0.20.0부터는 더 엄격한 .iloc 및 .loc 인덱서를 위해 .ix ​​인덱서가 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f16aa3be99fc50d1603498ebbc66eb83c2de49d8" translate="yes" xml:space="preserve">
          <source>Warning: yearfirst=True is not strict, but will prefer to parse with year first (this is a known bug, based on dateutil behavior).</source>
          <target state="translated">경고 : yearfirst = True는 엄격하지는 않지만 연도 첫 번째 구문 분석을 선호합니다 (dateutil 동작에 따라 알려진 버그입니다).</target>
        </trans-unit>
        <trans-unit id="63d2a494201c2d726c62af93601b975a9a95c61e" translate="yes" xml:space="preserve">
          <source>We &amp;ldquo;append&amp;rdquo; the parent docstring to the children docstrings, which are initially empty.</source>
          <target state="translated">우리는 부모 docstring을 자식 docstring에&amp;ldquo;추가&amp;rdquo;하는데, 처음에는 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="40410b0638954666aa32914003df80b8c40b6382" translate="yes" xml:space="preserve">
          <source>We &lt;em&gt;highly&lt;/em&gt; recommend using keyword arguments to clarify your intent.</source>
          <target state="translated">우리는 &lt;em&gt;매우&lt;/em&gt; 당신의 의도를 명확히하기 위해 키워드 인수를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a8a186984f567f59ddc2d14c3debf4f75591758f" translate="yes" xml:space="preserve">
          <source>We achieve our result by using &lt;code&gt;apply&lt;/code&gt; (row-wise):</source>
          <target state="translated">&lt;code&gt;apply&lt;/code&gt; (행 단위) 를 사용하여 결과를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="1ed1b9bd1cbf8047710697bbbcd03706363e983b" translate="yes" xml:space="preserve">
          <source>We aim to make operations like this natural and easy to express using pandas. We&amp;rsquo;ll address each area of GroupBy functionality then provide some non-trivial examples / use cases.</source>
          <target state="translated">우리는 팬더를 사용하여 이러한 자연스럽고 표현하기 쉬운 작업을 목표로합니다. 우리는 GroupBy 기능의 각 영역을 다루고 사소한 예 / 사용 사례를 제공 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="c6483f86bcee89a4e6655b5a3666ca4c64eaa582" translate="yes" xml:space="preserve">
          <source>We are able to preserve the join keys:</source>
          <target state="translated">조인 키를 보존 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a373f8540c91612586e8267b03ce8fe608d074fa" translate="yes" xml:space="preserve">
          <source>We are now passing ndarrays into the Cython function, fortunately Cython plays very nicely with NumPy.</source>
          <target state="translated">우리는 이제 ndarray를 Cython 함수로 전달하고 있습니다. 운 좋게도 Cython은 NumPy와 매우 잘 어울립니다.</target>
        </trans-unit>
        <trans-unit id="d3a106ee9ee5fc484d6459ef08e098101bb07f05" translate="yes" xml:space="preserve">
          <source>We can add another object to the same file:</source>
          <target state="translated">같은 파일에 다른 객체를 추가 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="ac04ea9c6184cade333734d28f514a8f8fbb4dc6" translate="yes" xml:space="preserve">
          <source>We can also calculate multiple types of aggregations for any given value column.</source>
          <target state="translated">주어진 값 열에 대해 여러 유형의 집계를 계산할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="87360ec2fd2fefde8583136215f4dc6c480752ae" translate="yes" xml:space="preserve">
          <source>We can also fill missing values using the &lt;code&gt;fill_value&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;fill_value&lt;/code&gt; 매개 변수를 사용하여 결 측값을 채울 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="64aeda62d8005aa7d59f745caaa3e320b51c1126" translate="yes" xml:space="preserve">
          <source>We can also propagate non-null values forward or backward.</source>
          <target state="translated">널이 아닌 값을 앞뒤로 전파 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="82e094e1c0d9f69faaabb170a1191ebc8e9eec6c" translate="yes" xml:space="preserve">
          <source>We can also reindex the columns.</source>
          <target state="translated">열을 다시 색인 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a9241fe13d125c92fedc43f30dfef36a64e1f2d" translate="yes" xml:space="preserve">
          <source>We can fill in the missing values by passing a value to the keyword &lt;code&gt;fill_value&lt;/code&gt;. Because the index is not monotonically increasing or decreasing, we cannot use arguments to the keyword &lt;code&gt;method&lt;/code&gt; to fill the &lt;code&gt;NaN&lt;/code&gt; values.</source>
          <target state="translated">키워드 &lt;code&gt;fill_value&lt;/code&gt; 에 값을 전달하여 누락 된 값을 채울 수 있습니다 . 인덱스가 단조 증가 또는 감소하지 않기 때문에 키워드 &lt;code&gt;method&lt;/code&gt; 에 인수를 사용 하여 &lt;code&gt;NaN&lt;/code&gt; 값 을 채울 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="1b2db2a6808bec614370b1c7f957b27eab347d6e" translate="yes" xml:space="preserve">
          <source>We can groupby different levels of a hierarchical index using the &lt;code&gt;level&lt;/code&gt; parameter:</source>
          <target state="translated">&lt;code&gt;level&lt;/code&gt; 매개 변수를 사용하여 서로 다른 레벨의 계층 인덱스를 그룹화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ea76065de2e7d6e780d0ab25da750642d1b5e388" translate="yes" xml:space="preserve">
          <source>We can omit the the index by passing the keyword &lt;code&gt;index&lt;/code&gt; and setting it to false.</source>
          <target state="translated">키워드 &lt;code&gt;index&lt;/code&gt; 를 전달하고 false로 설정 하여 인덱스를 생략 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f498793430e40e734f6b029133f48e3818406fc1" translate="yes" xml:space="preserve">
          <source>We can use indexed DataFrames as well.</source>
          <target state="translated">인덱스 데이터 프레임도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bf6a0d5fe6e8e2306b0ef84dd3d8cb816cddd0d5" translate="yes" xml:space="preserve">
          <source>We can use the &lt;code&gt;drop&lt;/code&gt; parameter to avoid the old index being added as a column:</source>
          <target state="translated">&lt;code&gt;drop&lt;/code&gt; 매개 변수를 사용하여 이전 색인이 열로 추가되지 않도록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9ec436c366e4e9876176a65085a94783330320f" translate="yes" xml:space="preserve">
          <source>We demonstrate how to use Numba to just-in-time compile our code. We simply take the plain Python code from above and annotate with the &lt;code&gt;@jit&lt;/code&gt; decorator.</source>
          <target state="translated">우리는 Numba를 사용하여 코드를 적시에 컴파일하는 방법을 보여줍니다. 위에서 간단한 파이썬 코드를 &lt;code&gt;@jit&lt;/code&gt; 데코레이터로 주석을 달았습니다 .</target>
        </trans-unit>
        <trans-unit id="208d18ee73d660cbd56f96d3fe8eb575be40e323" translate="yes" xml:space="preserve">
          <source>We distinguish the &lt;em&gt;display&lt;/em&gt; value from the &lt;em&gt;actual&lt;/em&gt; value in &lt;code&gt;Styler&lt;/code&gt;. To control the display value, the text is printed in each cell, use &lt;code&gt;Styler.format&lt;/code&gt;. Cells can be formatted according to a &lt;a href=&quot;https://docs.python.org/3/library/string.html#format-specification-mini-language&quot;&gt;format spec string&lt;/a&gt; or a callable that takes a single value and returns a string.</source>
          <target state="translated">&lt;code&gt;Styler&lt;/code&gt; 의 &lt;em&gt;디스플레이&lt;/em&gt; 값과 &lt;em&gt;실제&lt;/em&gt; 값을 구분합니다 . 표시 값을 제어하려면 텍스트가 각 셀에 인쇄됩니다 . &lt;code&gt;Styler.format&lt;/code&gt; 을 사용 하십시오 . 셀은 형식 지정 &lt;a href=&quot;https://docs.python.org/3/library/string.html#format-specification-mini-language&quot;&gt;문자열&lt;/a&gt; 또는 단일 값을 사용하고 문자열을 반환하는 호출 가능 항목 에 따라 형식을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="53d95540e955064e56294b28dcea80af21767625" translate="yes" xml:space="preserve">
          <source>We encourage you to use method chains to build up a style piecewise, before finally rending at the end of the chain.</source>
          <target state="translated">체인의 끝에서 끝날 때까지 메소드 체인을 사용하여 스타일을 조각별로 작성하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="cc766c2cf7f07925f3683806db7fc0d4cd23b017" translate="yes" xml:space="preserve">
          <source>We get another huge improvement simply by providing type information:</source>
          <target state="translated">타입 정보를 제공하는 것만으로도 크게 개선되었습니다.</target>
        </trans-unit>
        <trans-unit id="bd2d7c462734bc530b7d66fddb1c1dd7279aa788" translate="yes" xml:space="preserve">
          <source>We have a &lt;code&gt;DataFrame&lt;/code&gt; to which we want to apply a function row-wise.</source>
          <target state="translated">우리는이 &lt;code&gt;DataFrame&lt;/code&gt; 우리가 함수가 행 방향으로 적용 할에 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc2c8060afbf10ed1619ff7273a95c4e111fca22" translate="yes" xml:space="preserve">
          <source>We have two autosummary templates for classes.</source>
          <target state="translated">클래스에 대한 두 개의 자동 요약 템플릿이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf58221e02bb5a8b76e3928ba63b1b6ae799d7ae" translate="yes" xml:space="preserve">
          <source>We highly recommend validating the data in your accessor&amp;rsquo;s &lt;code&gt;__init__&lt;/code&gt;. In our &lt;code&gt;GeoAccessor&lt;/code&gt;, we validate that the data contains the expected columns, raising an &lt;code&gt;AttributeError&lt;/code&gt; when the validation fails. For a &lt;code&gt;Series&lt;/code&gt; accessor, you should validate the &lt;code&gt;dtype&lt;/code&gt; if the accessor applies only to certain dtypes.</source>
          <target state="translated">접근 자의 &lt;code&gt;__init__&lt;/code&gt; 데이터의 유효성을 검사하는 것이 좋습니다 . 우리에 &lt;code&gt;GeoAccessor&lt;/code&gt; , 우리는 데이터가 상승, 예상되는 열이 포함되어 있는지 확인 &lt;code&gt;AttributeError&lt;/code&gt; 를 검증이 실패 할 때. A의 &lt;code&gt;Series&lt;/code&gt; 접근, 당신은 확인해야합니다 &lt;code&gt;dtype&lt;/code&gt; 접근 특정 dtypes에만 적용합니다.</target>
        </trans-unit>
        <trans-unit id="478526087bc925570ad3f135531d1297bf8a5538" translate="yes" xml:space="preserve">
          <source>We may take elements using negative integers for positive indices, starting from the end of the object, just like with Python lists.</source>
          <target state="translated">파이썬 목록과 마찬가지로 객체의 끝부터 시작하여 양의 인덱스에 음의 정수를 사용하는 요소를 취할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0848c3f923c126e1c7028e1a6a867079338b0f36" translate="yes" xml:space="preserve">
          <source>We only asof within 10ms between the quote time and the trade time and we exclude exact matches on time. However &lt;em&gt;prior&lt;/em&gt; data will propagate forward</source>
          <target state="translated">우리는 인용 시간과 거래 시간 사이에 10ms 이내에만 가능하며 정시에 정확한 경기를 배제합니다. 그러나 &lt;em&gt;이전&lt;/em&gt; 데이터는 앞으로 전파됩니다</target>
        </trans-unit>
        <trans-unit id="003b043e804ba30c987396676334e8461e16eb4d" translate="yes" xml:space="preserve">
          <source>We only asof within 2ms between the quote time and the trade time</source>
          <target state="translated">우리는 인용 시간과 거래 시간 사이에 2ms 이내에만 가능합니다</target>
        </trans-unit>
        <trans-unit id="5034f2430ad087894b302fc0f992003722338c04" translate="yes" xml:space="preserve">
          <source>We prefer this to the &lt;code&gt;pytest.warns&lt;/code&gt; context manager because ours checks that the warning&amp;rsquo;s stacklevel is set correctly. The stacklevel is what ensure the &lt;em&gt;user&amp;rsquo;s&lt;/em&gt; file name and line number is printed in the warning, rather than something internal to pandas. It represents the number of function calls from user code (e.g. &lt;code&gt;df.some_operation()&lt;/code&gt;) to the function that actually emits the warning. Our linter will fail the build if you use &lt;code&gt;pytest.warns&lt;/code&gt; in a test.</source>
          <target state="translated">경고의 스택 수준이 올바르게 설정되어 있는지 확인하기 때문에 &lt;code&gt;pytest.warns&lt;/code&gt; 컨텍스트 관리자 보다 선호 합니다. 스택 레벨은 팬더 내부가 아닌 &lt;em&gt;사용자의&lt;/em&gt; 파일 이름과 줄 번호가 경고에 인쇄되도록하는 것입니다. 사용자 코드 (예 : &lt;code&gt;df.some_operation()&lt;/code&gt; )에서 실제로 경고를 발생시키는 함수 까지의 함수 호출 수를 나타냅니다 . 테스트에서 &lt;code&gt;pytest.warns&lt;/code&gt; 를 사용하면 빌드가 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="a2a346cabec464372f5c364312efebce73c40713" translate="yes" xml:space="preserve">
          <source>We provide a test suite for ensuring that your extension arrays satisfy the expected behavior. To use the test suite, you must provide several pytest fixtures and inherit from the base test class. The required fixtures are found in &lt;a href=&quot;https://github.com/pandas-dev/pandas/blob/master/pandas/tests/extension/conftest.py&quot;&gt;https://github.com/pandas-dev/pandas/blob/master/pandas/tests/extension/conftest.py&lt;/a&gt;.</source>
          <target state="translated">확장 어레이가 예상되는 동작을 만족시킬 수 있도록 테스트 스위트를 제공합니다. 테스트 스위트를 사용하려면 여러 pytest 픽스쳐를 제공하고 기본 테스트 클래스에서 상속해야합니다. 필요한 고정물은 &lt;a href=&quot;https://github.com/pandas-dev/pandas/blob/master/pandas/tests/extension/conftest.py&quot;&gt;https://github.com/pandas-dev/pandas/blob/master/pandas/tests/extension/conftest.py에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="14ebc5add8747fa524d5294d47d6e0850ea2acfb" translate="yes" xml:space="preserve">
          <source>We provide the basics in pandas to easily create decent looking plots. See the &lt;a href=&quot;../ecosystem#ecosystem-visualization&quot;&gt;ecosystem&lt;/a&gt; section for visualization libraries that go beyond the basics documented here.</source>
          <target state="translated">팬더의 기본을 제공하여 괜찮은 모양의 플롯을 쉽게 만들 수 있습니다. 여기에 문서화 된 기본 사항 이상의 시각화 라이브러리에 대해서는 &lt;a href=&quot;../ecosystem#ecosystem-visualization&quot;&gt;에코 시스템&lt;/a&gt; 섹션을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="a69ceb5e57e445fd190ca4c6b1a5e68b0997ff79" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;a href=&quot;pandas.dataframe.to_numpy#pandas.DataFrame.to_numpy&quot;&gt;&lt;code&gt;DataFrame.to_numpy()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;pandas.dataframe.to_numpy#pandas.DataFrame.to_numpy&quot;&gt; &lt;code&gt;DataFrame.to_numpy()&lt;/code&gt; &lt;/a&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="08dc82107227f4b06511ee512fd1de9e67e10e7a" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;a href=&quot;pandas.index.array#pandas.Index.array&quot;&gt;&lt;code&gt;Index.array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pandas.index.to_numpy#pandas.Index.to_numpy&quot;&gt;&lt;code&gt;Index.to_numpy()&lt;/code&gt;&lt;/a&gt;, depending on whether you need a reference to the underlying data or a NumPy array.</source>
          <target state="translated">기본 데이터 또는 NumPy 배열에 대한 참조가 필요한지 여부에 따라 &lt;a href=&quot;pandas.index.array#pandas.Index.array&quot;&gt; &lt;code&gt;Index.array&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;pandas.index.to_numpy#pandas.Index.to_numpy&quot;&gt; &lt;code&gt;Index.to_numpy()&lt;/code&gt; &lt;/a&gt; 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="0f363c695d7e2853e48d9b3e349263190ee6e414" translate="yes" xml:space="preserve">
          <source>We recommend using &lt;a href=&quot;pandas.series.array#pandas.Series.array&quot;&gt;&lt;code&gt;Series.array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt;&lt;code&gt;Series.to_numpy()&lt;/code&gt;&lt;/a&gt;, depending on whether you need a reference to the underlying data or a NumPy array.</source>
          <target state="translated">기본 데이터 또는 NumPy 배열에 대한 참조가 필요한지 여부에 따라 &lt;a href=&quot;pandas.series.array#pandas.Series.array&quot;&gt; &lt;code&gt;Series.array&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt; &lt;code&gt;Series.to_numpy()&lt;/code&gt; &lt;/a&gt; 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="276dd17c9a587dd025fd8054ad2d688939f2a70a" translate="yes" xml:space="preserve">
          <source>We represent an IntegerArray with 2 numpy arrays:</source>
          <target state="translated">우리는 2 개의 numpy 배열을 가진 IntegerArray를 나타냅니다 :</target>
        </trans-unit>
        <trans-unit id="43ae22e64054eee4edde3abf3637ceadcd56f3de" translate="yes" xml:space="preserve">
          <source>We use the standard convention for referencing the matplotlib API:</source>
          <target state="translated">matplotlib API를 참조하기 위해 표준 규칙을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c23edeb09cb6ac75ac0b40d6eb9dfcc02bcfaf09" translate="yes" xml:space="preserve">
          <source>We will demonstrate the basics, see the &lt;a href=&quot;cookbook#cookbook-plotting&quot;&gt;cookbook&lt;/a&gt; for some advanced strategies.</source>
          <target state="translated">우리는 기본 사항을 설명하고 고급 전략에 대한 &lt;a href=&quot;cookbook#cookbook-plotting&quot;&gt;요리 책&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="06fbc6434257f2f77eecff50e5a1cd034e70b66f" translate="yes" xml:space="preserve">
          <source>We would name this file &lt;code&gt;test_cool_feature.py&lt;/code&gt; and put in an appropriate place in the &lt;code&gt;pandas/tests/&lt;/code&gt; structure.</source>
          <target state="translated">이 파일의 이름을 &lt;code&gt;test_cool_feature.py&lt;/code&gt; 로 지정하고 &lt;code&gt;pandas/tests/&lt;/code&gt; 구조 의 적절한 위치에 배치합니다 .</target>
        </trans-unit>
        <trans-unit id="89ed8c16ecef55c94f5e4643f3e18e6dc2043d65" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;d like to make it easier for users to find these projects, if you know of other substantial projects that you feel should be on this list, please let us know.</source>
          <target state="translated">이 목록에 있어야 할 다른 실질적인 프로젝트에 대해 알고 있다면 알려 주시기 바랍니다.</target>
        </trans-unit>
        <trans-unit id="1f0d4a40c311d765600587cc6f63c4e10e3eafe9" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll give a brief intro to the data structures, then consider all of the broad categories of functionality and methods in separate sections.</source>
          <target state="translated">데이터 구조에 대해 간략하게 소개 한 다음 광범위한 범주의 기능 및 방법을 모두 별도의 섹션에서 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="0ae5eccc0c4a556e2b48bb680bd279db55b8dde2" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll now kick off a three-step process:</source>
          <target state="translated">이제 3 단계 프로세스를 시작하겠습니다.</target>
        </trans-unit>
        <trans-unit id="10e6bd615616d3dd1d8b14add5672ae8746d449e" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll rewrite our &lt;code&gt;highlight-max&lt;/code&gt; to handle either Series (from &lt;code&gt;.apply(axis=0 or 1)&lt;/code&gt;) or DataFrames (from &lt;code&gt;.apply(axis=None)&lt;/code&gt;). We&amp;rsquo;ll also allow the color to be adjustable, to demonstrate that &lt;code&gt;.apply&lt;/code&gt;, and &lt;code&gt;.applymap&lt;/code&gt; pass along keyword arguments.</source>
          <target state="translated">Series ( &lt;code&gt;.apply(axis=0 or 1)&lt;/code&gt; ) 또는 DataFrames ( &lt;code&gt;.apply(axis=None)&lt;/code&gt; ) 을 처리하기 위해 &lt;code&gt;highlight-max&lt;/code&gt; 를 다시 작성합니다 . 또한 색상을 조정하여 &lt;code&gt;.apply&lt;/code&gt; 및 &lt;code&gt;.applymap&lt;/code&gt; 이 키워드 인수와 함께 전달됨 을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="159d163fa57bcd0b14d3f4978b201602523dd7f1" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll start off with a quick reference guide pairing some common R operations using &lt;a href=&quot;https://cran.r-project.org/package=dplyr&quot;&gt;dplyr&lt;/a&gt; with pandas equivalents.</source>
          <target state="translated">&lt;a href=&quot;https://cran.r-project.org/package=dplyr&quot;&gt;dplyr&lt;/a&gt; 을 사용 하여 팬더에 해당하는 몇 가지 일반적인 R 작업을 페어링하는 빠른 참조 안내서부터 시작하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="0b6a81fdafac489ae42a2457199a41786380211d" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll start with a quick, non-comprehensive overview of the fundamental data structures in pandas to get you started. The fundamental behavior about data types, indexing, and axis labeling / alignment apply across all of the objects. To get started, import NumPy and load pandas into your namespace:</source>
          <target state="translated">시작하기 위해 팬더의 기본 데이터 구조에 대한 포괄적이고 포괄적 인 개요부터 시작하겠습니다. 데이터 유형, 인덱싱 및 축 레이블링 / 정렬에 대한 기본 동작은 모든 객체에 적용됩니다. 시작하려면 NumPy를 가져 와서 팬더를 네임 스페이스에로드하십시오.</target>
        </trans-unit>
        <trans-unit id="dee2dc2b4d8d869b4a335a6c5f4e8c9bf8cc7b1a" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ll use the following template:</source>
          <target state="translated">다음 템플릿을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="cf5e0503af0c2facdb698cddfc9ea5b96d482f65" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve gotten another big improvement. Let&amp;rsquo;s check again where the time is spent:</source>
          <target state="translated">우리는 또 다른 큰 개선을 얻었습니다. 시간이 소비되는 곳을 다시 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f82be68a7fb4e7dec88f27463de94ad355242ee5" translate="yes" xml:space="preserve">
          <source>Week</source>
          <target state="translated">Week</target>
        </trans-unit>
        <trans-unit id="fe3f61ddecbabd9df7b81c596b0e344f7a9a1ef0" translate="yes" xml:space="preserve">
          <source>Week number of the year (Monday as the first day of the week) as a decimal number [00,53]. All days in a new year preceding the first Monday are considered to be in week 0.</source>
          <target state="translated">연도의 주 번호 (월요일의 첫 번째 요일)를 10 진수로 표시합니다 [00,53]. 첫 번째 월요일 이전의 새해의 모든 날은 0 주로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="3aadb81eb1a1699671247b51c01b0cc44432b8bb" translate="yes" xml:space="preserve">
          <source>Week number of the year (Sunday as the first day of the week) as a decimal number [00,53]. All days in a new year preceding the first Sunday are considered to be in week 0.</source>
          <target state="translated">연도의 주 번호 (일요일의 첫 번째 요일)를 10 진수로 표시합니다 [00,53]. 첫 번째 일요일 이전의 새해의 모든 날은 0 주로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="ae4d401c1a4f25ec8086ee891e99815d27c2ac1f" translate="yes" xml:space="preserve">
          <source>Week.apply()</source>
          <target state="translated">Week.apply()</target>
        </trans-unit>
        <trans-unit id="2ea63c38639d2f41feff58a8f5bee0c11f01d0ac" translate="yes" xml:space="preserve">
          <source>Week.apply_index()</source>
          <target state="translated">Week.apply_index()</target>
        </trans-unit>
        <trans-unit id="d399c7c8de3bbcd8117f8e6e94f590b4e71cd672" translate="yes" xml:space="preserve">
          <source>Week.base</source>
          <target state="translated">Week.base</target>
        </trans-unit>
        <trans-unit id="04afe26a45d8a8d73c09907bb58f218a67da3aab" translate="yes" xml:space="preserve">
          <source>Week.copy()</source>
          <target state="translated">Week.copy()</target>
        </trans-unit>
        <trans-unit id="fdb5f2fe37eb6fdfe12c399f6833723ea7e80e3b" translate="yes" xml:space="preserve">
          <source>Week.freqstr</source>
          <target state="translated">Week.freqstr</target>
        </trans-unit>
        <trans-unit id="ffcdf8f135e8a23ec919d4ff0f9f55c95927e0cf" translate="yes" xml:space="preserve">
          <source>Week.isAnchored()</source>
          <target state="translated">Week.isAnchored()</target>
        </trans-unit>
        <trans-unit id="555e5439462bfd854ceddaaec5090f41fede7156" translate="yes" xml:space="preserve">
          <source>Week.kwds</source>
          <target state="translated">Week.kwds</target>
        </trans-unit>
        <trans-unit id="0ddf2abd99bc8bdb3bea7c4e1e066cd7c4bbf73d" translate="yes" xml:space="preserve">
          <source>Week.name</source>
          <target state="translated">Week.name</target>
        </trans-unit>
        <trans-unit id="89c4cfc4854cb94d50e1dcb282025a4140533496" translate="yes" xml:space="preserve">
          <source>Week.nanos</source>
          <target state="translated">Week.nanos</target>
        </trans-unit>
        <trans-unit id="307856caed15c8ab0682d665f0cab83ee759b9f0" translate="yes" xml:space="preserve">
          <source>Week.normalize</source>
          <target state="translated">Week.normalize</target>
        </trans-unit>
        <trans-unit id="114acbc33fdd764b4598e5188dacb62dd85b046f" translate="yes" xml:space="preserve">
          <source>Week.onOffset()</source>
          <target state="translated">Week.onOffset()</target>
        </trans-unit>
        <trans-unit id="bd355446a8a25d6031315e7cff03557559f81ab6" translate="yes" xml:space="preserve">
          <source>Week.rollback()</source>
          <target state="translated">Week.rollback()</target>
        </trans-unit>
        <trans-unit id="1fc0235444db6e1e7b27c624996d23c22902bf3f" translate="yes" xml:space="preserve">
          <source>Week.rollforward()</source>
          <target state="translated">Week.rollforward()</target>
        </trans-unit>
        <trans-unit id="f6caa2d3180c67f24a3e9dad730b1489eb370da3" translate="yes" xml:space="preserve">
          <source>Week.rule_code</source>
          <target state="translated">Week.rule_code</target>
        </trans-unit>
        <trans-unit id="4479d9e9e60e5c4a660f52b0c3aa3ea36acec440" translate="yes" xml:space="preserve">
          <source>WeekOfMonth</source>
          <target state="translated">WeekOfMonth</target>
        </trans-unit>
        <trans-unit id="cf6568fc5ac2465f23e3b100948d004c7f69190f" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.apply()</source>
          <target state="translated">WeekOfMonth.apply()</target>
        </trans-unit>
        <trans-unit id="2ab406caef7053bcfa1ba04234139b92f4898a33" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.apply_index()</source>
          <target state="translated">WeekOfMonth.apply_index()</target>
        </trans-unit>
        <trans-unit id="98fa89d70c03074699d14f851176eb07a79c5b3a" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.base</source>
          <target state="translated">WeekOfMonth.base</target>
        </trans-unit>
        <trans-unit id="4b17d3716cffc78e73b163f0dd7bbf6711095053" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.copy()</source>
          <target state="translated">WeekOfMonth.copy()</target>
        </trans-unit>
        <trans-unit id="fa5d6058fe2a19d364efa47cfab2df8f25db82b4" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.freqstr</source>
          <target state="translated">WeekOfMonth.freqstr</target>
        </trans-unit>
        <trans-unit id="bba514c842f4011cf97d88bb6144ce2d96e81301" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.isAnchored()</source>
          <target state="translated">WeekOfMonth.isAnchored()</target>
        </trans-unit>
        <trans-unit id="9891edac55b553d1dd9064d890a2fad51759efdf" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.kwds</source>
          <target state="translated">WeekOfMonth.kwds</target>
        </trans-unit>
        <trans-unit id="ea7f176d18009039b337d9d9644e7655410a9dbb" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.name</source>
          <target state="translated">WeekOfMonth.name</target>
        </trans-unit>
        <trans-unit id="4223cc0f6d0434592aeeb0f219087e45612abdd1" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.nanos</source>
          <target state="translated">WeekOfMonth.nanos</target>
        </trans-unit>
        <trans-unit id="da712defeb66da6630af6d1f616c83b0816681e4" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.normalize</source>
          <target state="translated">WeekOfMonth.normalize</target>
        </trans-unit>
        <trans-unit id="d5324bd33937198e4319b5d916e32e9ebdf8f6a4" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.onOffset()</source>
          <target state="translated">WeekOfMonth.onOffset()</target>
        </trans-unit>
        <trans-unit id="f3f592d4d4858873ef2a71ade526f849dc97ed9c" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.rollback()</source>
          <target state="translated">WeekOfMonth.rollback()</target>
        </trans-unit>
        <trans-unit id="a237bcf97a357ae7a25d60524545bd3bb1c2542d" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.rollforward()</source>
          <target state="translated">WeekOfMonth.rollforward()</target>
        </trans-unit>
        <trans-unit id="472a35b2d03ca2226280c71e37437c6f2088f423" translate="yes" xml:space="preserve">
          <source>WeekOfMonth.rule_code</source>
          <target state="translated">WeekOfMonth.rule_code</target>
        </trans-unit>
        <trans-unit id="da94621ef8999a8ac972599f062234bc846d53f9" translate="yes" xml:space="preserve">
          <source>Weekday as a decimal number [0(Sunday),6].</source>
          <target state="translated">평일을 10 진수로 표시 [0 (일요일), 6].</target>
        </trans-unit>
        <trans-unit id="202222909e680eb046bb5844a287c34bdb3afdb7" translate="yes" xml:space="preserve">
          <source>Weekly offset.</source>
          <target state="translated">주간 오프셋.</target>
        </trans-unit>
        <trans-unit id="72d15f7d9a40b01277c4341044c04afdefd5876f" translate="yes" xml:space="preserve">
          <source>Weekmask of valid business days, passed to &lt;code&gt;numpy.busdaycalendar&lt;/code&gt;, only used when custom frequency strings are passed. The default value None is equivalent to &amp;lsquo;Mon Tue Wed Thu Fri&amp;rsquo;.</source>
          <target state="translated">에 전달 유효한 일의 Weekmask, &lt;code&gt;numpy.busdaycalendar&lt;/code&gt; 은 지정 주파수 문자열이 전달되는 경우에만 사용. 기본값 None은 'Mon Tue Wed Thu Fri'과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8374b24155b155d171fa90b81bc7996eccced804" translate="yes" xml:space="preserve">
          <source>Weekmask of valid business days, passed to &lt;code&gt;numpy.busdaycalendar&lt;/code&gt;.</source>
          <target state="translated">유효한 영업일의 주 &lt;code&gt;numpy.busdaycalendar&lt;/code&gt; 로 numpy.busdaycalendar로 전달되었습니다 .</target>
        </trans-unit>
        <trans-unit id="897888bd5751f5716b4307fda3c9e3db66f3bf5a" translate="yes" xml:space="preserve">
          <source>Wes McKinney is the Benevolent Dictator for Life (BDFL).</source>
          <target state="translated">Wes McKinney는 생명의 자비로운 독재자 (BDFL)입니다.</target>
        </trans-unit>
        <trans-unit id="d8a152a201fdedd56c09dd4b18b7b017ea556352" translate="yes" xml:space="preserve">
          <source>Wes McKinney&amp;rsquo;s (pandas BDFL) blog</source>
          <target state="translated">웨스 맥키 니 (팬더 BDFL) 블로그</target>
        </trans-unit>
        <trans-unit id="664ec2b7c6626f568d548eafe9b484ca52d9e724" translate="yes" xml:space="preserve">
          <source>What if you wanted to highlight just the maximum value in the entire table? Use &lt;code&gt;.apply(function, axis=None)&lt;/code&gt; to indicate that your function wants the entire table, not one column or row at a time. Let&amp;rsquo;s try that next.</source>
          <target state="translated">전체 테이블에서 최대 값 만 강조 표시하려면 어떻게해야합니까? 사용 &lt;code&gt;.apply(function, axis=None)&lt;/code&gt; 함수는 전체 테이블을 한 번에없는 하나의 열 또는 행을 원한다는 것을 나타냅니다. 다음에 해봅시다.</target>
        </trans-unit>
        <trans-unit id="8fdb080faedd14c64ffe92326926270aa2b60f0e" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s new in 0.25.0 (July 18, 2019)</source>
          <target state="translated">0.25.0의 새로운 기능 (2019 년 7 월 18 일)</target>
        </trans-unit>
        <trans-unit id="84848e07e5f15a6368f1abcf75501f60407628f3" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;arg&lt;/code&gt; is a dictionary, values in Series that are not in the dictionary (as keys) are converted to &lt;code&gt;NaN&lt;/code&gt;. However, if the dictionary is a &lt;code&gt;dict&lt;/code&gt; subclass that defines &lt;code&gt;__missing__&lt;/code&gt; (i.e. provides a method for default values), then this default is used rather than &lt;code&gt;NaN&lt;/code&gt;.</source>
          <target state="translated">때 &lt;code&gt;arg&lt;/code&gt; 사전입니다 (키)을 사전에없는 시리즈의 값으로 변환됩니다 &lt;code&gt;NaN&lt;/code&gt; 가 . 그러나 사전이 &lt;code&gt;__missing__&lt;/code&gt; 을 정의 하는 (즉, 기본값에 대한 메소드를 제공 하는) &lt;code&gt;dict&lt;/code&gt; 서브 클래스 인 경우 &lt;code&gt;NaN&lt;/code&gt; 대신이 기본값이 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="4a629ca65ed3e2b53a2653af2fb6f28853869e52" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;data&lt;/code&gt; is a &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;pandas.index#pandas.Index&quot;&gt;&lt;code&gt;Index&lt;/code&gt;&lt;/a&gt;, or &lt;code&gt;ExtensionArray&lt;/code&gt;, the &lt;code&gt;dtype&lt;/code&gt; will be taken from the data.</source>
          <target state="translated">때 &lt;code&gt;data&lt;/code&gt; A는 &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;pandas.index#pandas.Index&quot;&gt; &lt;code&gt;Index&lt;/code&gt; &lt;/a&gt; , 또는 &lt;code&gt;ExtensionArray&lt;/code&gt; 의 &lt;code&gt;dtype&lt;/code&gt; 데이터에서 이동합니다.</target>
        </trans-unit>
        <trans-unit id="b26451d772c37350185a221549cb3da766ba4e9c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;data&lt;/code&gt; is an Index or Series, the underlying array will be extracted from &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;data&lt;/code&gt; 인덱스 또는 일련의 기본 어레이로부터 추출 될 &lt;code&gt;data&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6f55025e139e1ea4a1d176fe427cb2547b40464" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;data&lt;/code&gt; is not 1-dimensional.</source>
          <target state="translated">경우 &lt;code&gt;data&lt;/code&gt; 1 차원 아니다.</target>
        </trans-unit>
        <trans-unit id="633c3b0fede651f5070f4b31c047a0ad941cb811" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;deep=False&lt;/code&gt;, a new object will be created without copying the calling object&amp;rsquo;s data or index (only references to the data and index are copied). Any changes to the data of the original will be reflected in the shallow copy (and vice versa).</source>
          <target state="translated">때 &lt;code&gt;deep=False&lt;/code&gt; 새로운 객체는 호출 개체의 데이터 또는 인덱스 (복사되는 데이터와 인덱스 만 참조)을 복사하지 않고 생성됩니다. 원본 데이터에 대한 모든 변경 사항은 얕은 사본에 반영되며 그 반대도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="4dadf63d39355c7633e3ea16f95da962fa26660d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;deep=True&lt;/code&gt; (default), a new object will be created with a copy of the calling object&amp;rsquo;s data and indices. Modifications to the data or indices of the copy will not be reflected in the original object (see notes below).</source>
          <target state="translated">때 &lt;code&gt;deep=True&lt;/code&gt; (기본값), 새로운 객체가 호출하는 객체의 데이터와 인덱스의 사본이 생성됩니다. 사본의 데이터 또는 색인에 대한 수정 사항은 원본 객체에 반영되지 않습니다 (아래 참고 참조).</target>
        </trans-unit>
        <trans-unit id="1412cce4a536a03dcf74a1e073acc5f38c7a66c3" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;deep=True&lt;/code&gt;, data is copied but actual Python objects will not be copied recursively, only the reference to the object. This is in contrast to &lt;code&gt;copy.deepcopy&lt;/code&gt; in the Standard Library, which recursively copies object data (see examples below).</source>
          <target state="translated">때 &lt;code&gt;deep=True&lt;/code&gt; , 데이터가 복사되어 있지만 실제 파이썬 객체는, 재귀 적 객체에 대한 참조 만 복사되지 않습니다. 이는 표준 라이브러리의 &lt;code&gt;copy.deepcopy&lt;/code&gt; 와 대조적으로 객체 데이터를 재귀 적으로 복사합니다 (아래 예 참조).</target>
        </trans-unit>
        <trans-unit id="698da391d0d8420164854ec7d7972344263ee78a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;drop&lt;/code&gt; is False (the default), a DataFrame is returned. The newly created columns will come first in the DataFrame, followed by the original Series values. When &lt;code&gt;drop&lt;/code&gt; is True, a &lt;code&gt;Series&lt;/code&gt; is returned. In either case, if &lt;code&gt;inplace=True&lt;/code&gt;, no value is returned.</source>
          <target state="translated">때 &lt;code&gt;drop&lt;/code&gt; (기본값) False입니다하는 DataFrame이 반환됩니다. 새로 생성 된 열은 DataFrame에서 먼저 나온 다음 원래 Series 값이 뒤 따릅니다. 때 &lt;code&gt;drop&lt;/code&gt; True 인하는 &lt;code&gt;Series&lt;/code&gt; 반환됩니다. 두 경우 모두 &lt;code&gt;inplace=True&lt;/code&gt; 이면 값이 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="98bb210d512bead4e20db684ceb400531c53e5b0" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;errors&lt;/code&gt; is not either &lt;code&gt;&amp;lsquo;ignore&amp;rsquo;&lt;/code&gt; or &lt;code&gt;&amp;lsquo;raise&amp;rsquo;&lt;/code&gt;</source>
          <target state="translated">때 &lt;code&gt;errors&lt;/code&gt; 중 하나없는 &lt;code&gt;&amp;lsquo;ignore&amp;rsquo;&lt;/code&gt; 또는 &lt;code&gt;&amp;lsquo;raise&amp;rsquo;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5bd7bd661c270225216e4ff0bcf96cca3e999fee" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;errors=&amp;rsquo;raise&amp;rsquo;&lt;/code&gt; and there&amp;rsquo;s overlapping non-NA data.</source>
          <target state="translated">&lt;code&gt;errors=&amp;rsquo;raise&amp;rsquo;&lt;/code&gt; 때 비 NA 데이터가 겹치는 경우</target>
        </trans-unit>
        <trans-unit id="d7c6b4c4b301dcacae4cb36904290440316003e1" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;freq&lt;/code&gt; is not passed, shift the index without realigning the data. If &lt;code&gt;freq&lt;/code&gt; is passed (in this case, the index must be date or datetime, or it will raise a &lt;code&gt;NotImplementedError&lt;/code&gt;), the index will be increased using the periods and the &lt;code&gt;freq&lt;/code&gt;.</source>
          <target state="translated">때 &lt;code&gt;freq&lt;/code&gt; 전달되지 데이터를 재조정하지 않고 인덱스를 이동. &lt;code&gt;freq&lt;/code&gt; 가 전달 되면 (이 경우 인덱스는 날짜 또는 날짜 / 시간이거나 &lt;code&gt;NotImplementedError&lt;/code&gt; 가 발생 함 ) 기간 및 &lt;code&gt;freq&lt;/code&gt; 를 사용하여 인덱스가 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="24cb26b7f4f6662f42d0db6c2c3521cac1d74beb" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;indices&lt;/code&gt; contains negative values other than &lt;code&gt;-1&lt;/code&gt; and &lt;code&gt;allow_fill&lt;/code&gt; is True.</source>
          <target state="translated">경우 &lt;code&gt;indices&lt;/code&gt; 이외의 음의 값을 포함 &lt;code&gt;-1&lt;/code&gt; 및 &lt;code&gt;allow_fill&lt;/code&gt; 참이다.</target>
        </trans-unit>
        <trans-unit id="e5edaa84138910db9e7f22918782c0550972dc23" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;inplace&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt;, a copy of the &lt;code&gt;DataFrame&lt;/code&gt; with the new or modified columns is returned and the original frame is unchanged.</source>
          <target state="translated">&lt;code&gt;inplace&lt;/code&gt; 가 &lt;code&gt;False&lt;/code&gt; 로 설정 되면 새 열 또는 수정 된 열이 있는 &lt;code&gt;DataFrame&lt;/code&gt; 의 복사본 이 반환되고 원래 프레임은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a027af5fff689d5970cdac0acd9a9b2b525068f9" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;other&lt;/code&gt; is a &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt;, the columns of a DataFrame are aligned with the index of &lt;code&gt;other&lt;/code&gt; and broadcast:</source>
          <target state="translated">때 &lt;code&gt;other&lt;/code&gt; A는 &lt;a href=&quot;pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; 하는 DataFrame의 열을 인덱스로 정렬 &lt;code&gt;other&lt;/code&gt; 방송 :</target>
        </trans-unit>
        <trans-unit id="c84d437b4d44f816a605f14eb6a5c02f99005d16" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;other&lt;/code&gt; is not specified, the output will be self correlation (e.g. all 1&amp;rsquo;s), except for &lt;a href=&quot;pandas.dataframe#pandas.DataFrame&quot;&gt;&lt;code&gt;DataFrame&lt;/code&gt;&lt;/a&gt; inputs with &lt;code&gt;pairwise&lt;/code&gt; set to &lt;code&gt;True&lt;/code&gt;.</source>
          <target state="translated">때 &lt;code&gt;other&lt;/code&gt; 지정되지 않은, 출력을 제외하고 자기 상관 관계 (예 : 모두 1)이 될 것입니다 &lt;a href=&quot;pandas.dataframe#pandas.DataFrame&quot;&gt; &lt;code&gt;DataFrame&lt;/code&gt; 의&lt;/a&gt; 와 입력 &lt;code&gt;pairwise&lt;/code&gt; 로 설정 &lt;code&gt;True&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="824d36d88f8257d693d442aab5aaf270c628119b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;pairwise&lt;/code&gt; is set to &lt;code&gt;False&lt;/code&gt;, only matching columns between &lt;code&gt;self&lt;/code&gt; and &lt;code&gt;other&lt;/code&gt; will be used.</source>
          <target state="translated">&lt;code&gt;pairwise&lt;/code&gt; 가 &lt;code&gt;False&lt;/code&gt; 로 설정 되면 &lt;code&gt;self&lt;/code&gt; 와 &lt;code&gt;other&lt;/code&gt; 사이의 일치하는 열만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6cb1a15c79f43bda18f8fbced4f9df0b3b6261fc" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;pairwise&lt;/code&gt; is set to &lt;code&gt;True&lt;/code&gt;, the output will be a MultiIndex DataFrame with the original index on the first level, and the &lt;code&gt;other&lt;/code&gt; DataFrame columns on the second level.</source>
          <target state="translated">&lt;code&gt;pairwise&lt;/code&gt; 가 &lt;code&gt;True&lt;/code&gt; 로 설정 되면 출력은 첫 번째 수준의 원래 인덱스와 두 번째 수준의 &lt;code&gt;other&lt;/code&gt; DataFrame 열이있는 MultiIndex DataFrame이됩니다.</target>
        </trans-unit>
        <trans-unit id="d3456064fa6892d968ebd4d898b3b0f918838107" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;pat&lt;/code&gt; is a compiled regex, all flags should be included in the compiled regex. Use of &lt;code&gt;case&lt;/code&gt;, &lt;code&gt;flags&lt;/code&gt;, or &lt;code&gt;regex=False&lt;/code&gt; with a compiled regex will raise an error.</source>
          <target state="translated">때 &lt;code&gt;pat&lt;/code&gt; 컴파일 된 정규식, 모든 플래그는 컴파일 된 정규식에 포함되어야한다. 컴파일 된 정규식 에 &lt;code&gt;case&lt;/code&gt; , &lt;code&gt;flags&lt;/code&gt; 또는 &lt;code&gt;regex=False&lt;/code&gt; 를 사용하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1f71c418df4d0713f3cb3305c6a2e45802016d6a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;pat&lt;/code&gt; is a string and &lt;code&gt;regex&lt;/code&gt; is False, every &lt;code&gt;pat&lt;/code&gt; is replaced with &lt;code&gt;repl&lt;/code&gt; as with &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.replace&quot;&gt;&lt;code&gt;str.replace()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">때 &lt;code&gt;pat&lt;/code&gt; 문자열과 &lt;code&gt;regex&lt;/code&gt; 거짓이며, 모든 &lt;code&gt;pat&lt;/code&gt; 로 대체 &lt;code&gt;repl&lt;/code&gt; 에서와 같이 &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#str.replace&quot;&gt; &lt;code&gt;str.replace()&lt;/code&gt; &lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="3ae8a85fc80eb19330172a8575714f5dc174e73a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;pat&lt;/code&gt; is a string and &lt;code&gt;regex&lt;/code&gt; is True (the default), the given &lt;code&gt;pat&lt;/code&gt; is compiled as a regex. When &lt;code&gt;repl&lt;/code&gt; is a string, it replaces matching regex patterns as with &lt;code&gt;re.sub()&lt;/code&gt;. NaN value(s) in the Series are left as is:</source>
          <target state="translated">때 &lt;code&gt;pat&lt;/code&gt; 문자열과 &lt;code&gt;regex&lt;/code&gt; true (디폴트), 주어진 &lt;code&gt;pat&lt;/code&gt; 정규식으로 컴파일됩니다. 경우 &lt;code&gt;repl&lt;/code&gt; 문자열이며, 그와 같이 일치하는 정규식 패턴을 대체 &lt;code&gt;re.sub()&lt;/code&gt; . 시리즈의 NaN 값은 그대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="2480d3b5e08947ecb55308b072d091cb044453b5" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;repl&lt;/code&gt; is a callable, it is called on every &lt;code&gt;pat&lt;/code&gt; using &lt;a href=&quot;https://docs.python.org/3/library/re.html#re.sub&quot;&gt;&lt;code&gt;re.sub()&lt;/code&gt;&lt;/a&gt;. The callable should expect one positional argument (a regex object) and return a string.</source>
          <target state="translated">하면 &lt;code&gt;repl&lt;/code&gt; 호출 가능, 그것은마다 호출됩니다 &lt;code&gt;pat&lt;/code&gt; 사용 &lt;a href=&quot;https://docs.python.org/3/library/re.html#re.sub&quot;&gt; &lt;code&gt;re.sub()&lt;/code&gt; &lt;/a&gt; . 콜 러블은 하나의 위치 인수 (정규 객체)를 예상하고 문자열을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="12a7b6833d6941a0a50247de3f6832a87c1cd54d" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;value=None&lt;/code&gt; and &lt;code&gt;to_replace&lt;/code&gt; is a scalar, list or tuple, &lt;code&gt;replace&lt;/code&gt; uses the method parameter (default &amp;lsquo;pad&amp;rsquo;) to do the replacement. So this is why the &amp;lsquo;a&amp;rsquo; values are being replaced by 10 in rows 1 and 2 and &amp;lsquo;b&amp;rsquo; in row 4 in this case. The command &lt;code&gt;s.replace('a', None)&lt;/code&gt; is actually equivalent to &lt;code&gt;s.replace(to_replace='a', value=None, method='pad')&lt;/code&gt;:</source>
          <target state="translated">되면 &lt;code&gt;value=None&lt;/code&gt; 과 &lt;code&gt;to_replace&lt;/code&gt; 는 스칼라 목록 또는 튜플없고, &lt;code&gt;replace&lt;/code&gt; 사용을 대체 할 수있는 방법은 파라미터 (디폴트 '패드'). 따라서이 경우 'a'값이 1 행과 2 행에서 10으로, 4 행에서 'b'로 대체되는 이유입니다. &lt;code&gt;s.replace('a', None)&lt;/code&gt; 명령 은 실제로 &lt;code&gt;s.replace(to_replace='a', value=None, method='pad')&lt;/code&gt; 같습니다.</target>
        </trans-unit>
        <trans-unit id="4b99fedab983a09a6b838160842c60e8f31cbcb2" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;values&lt;/code&gt; is a Series or DataFrame the index and column must match. Note that &amp;lsquo;falcon&amp;rsquo; does not match based on the number of legs in df2.</source>
          <target state="translated">때 &lt;code&gt;values&lt;/code&gt; 시리즈 또는 DataFrame 인 인덱스 컬럼이 일치해야합니다. 'falcon'은 df2의 레그 수에 따라 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f1e9f921168fdd4c6dc9434a6d701a2d2838dc75" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;values&lt;/code&gt; is a dict, we can pass values to check for each column separately:</source>
          <target state="translated">경우 &lt;code&gt;values&lt;/code&gt; 사전인가는, 우리는 개별적으로 각 열에 대해 체크 값을 전달할 수있다 :</target>
        </trans-unit>
        <trans-unit id="1b19dea60803386e3166721bc8e351ce113cc79b" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;values&lt;/code&gt; is a list check whether every value in the DataFrame is present in the list (which animals have 0 or 2 legs or wings)</source>
          <target state="translated">되면 &lt;code&gt;values&lt;/code&gt; 리스트 체크 (이는 동물이 0 또는 2 다리 또는 측면)을 DataFrame마다 값리스트에 존재하는지이며</target>
        </trans-unit>
        <trans-unit id="52a2f01ab1547a0df3b9a2d1a2b91b84657a2d16" translate="yes" xml:space="preserve">
          <source>When True, attempt to create a MultiIndex if possible</source>
          <target state="translated">True 인 경우 가능하면 MultiIndex를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="3253d170611f6314b1bb68684b9864884fb4fb10" translate="yes" xml:space="preserve">
          <source>When a date offset is created for a negative number of periods, the date is first rolled forward. The pseudo code is:</source>
          <target state="translated">음수의 기간 동안 날짜 오프셋이 작성되면 날짜가 먼저 롤 포워드됩니다. 의사 코드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9cdeaf55a6e46935668be63f419d531c51aa737f" translate="yes" xml:space="preserve">
          <source>When a value is missing in only one of &lt;code&gt;left&lt;/code&gt; or &lt;code&gt;right&lt;/code&gt;. When a value in &lt;code&gt;left&lt;/code&gt; is greater than the corresponding value in &lt;code&gt;right&lt;/code&gt;.</source>
          <target state="translated">값은 단 하나의 누락 된 경우 &lt;code&gt;left&lt;/code&gt; 또는 &lt;code&gt;right&lt;/code&gt; . 의 값이되면 &lt;code&gt;left&lt;/code&gt; 의 대응 값보다 큰 &lt;code&gt;right&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e3f3627274c6fdaa4d1296b656c8aebccf9cd751" translate="yes" xml:space="preserve">
          <source>When accessed, your accessor will be initialized with the pandas object the user is interacting with. So the signature must be</source>
          <target state="translated">액세스하면 접근자가 사용자와 상호 작용하는 팬더 객체로 초기화됩니다. 따라서 서명은</target>
        </trans-unit>
        <trans-unit id="4db4d1e1e93df05b8d7243099c9f7f28c34e2154" translate="yes" xml:space="preserve">
          <source>When adjust is False, weighted averages are calculated recursively as:</source>
          <target state="translated">adjust가 False 인 경우 가중치 평균은 다음과 같이 재귀 적으로 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="40cb4157a2276c84be23e830b63695f1330e757d" translate="yes" xml:space="preserve">
          <source>When adjust is True (default), weighted averages are calculated using weights (1-alpha)**(n-1), (1-alpha)**(n-2), &amp;hellip;, 1-alpha, 1.</source>
          <target state="translated">adjust가 True (기본값) 인 경우 가중 평균은 가중치 (1-alpha) ** (n-1), (1-alpha) ** (n-2),&amp;hellip;, 1-alpha, 1을 사용하여 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="c1ada028e394d1059d5d625fce1aff8673015a1d" translate="yes" xml:space="preserve">
          <source>When calling apply, add group keys to index to identify pieces.</source>
          <target state="translated">apply를 호출 할 때 그룹 키를 추가하여 조각을 식별하십시오.</target>
        </trans-unit>
        <trans-unit id="3bf3b17ed8190c81462c457693e28e4e0702232b" translate="yes" xml:space="preserve">
          <source>When calling the method, keywords arguments &lt;code&gt;head(n=3)&lt;/code&gt; are preferred to positional arguments &lt;code&gt;head(3)&lt;/code&gt;.</source>
          <target state="translated">메소드를 호출 할 때 키워드 인수 &lt;code&gt;head(n=3)&lt;/code&gt; 가 위치 인수 &lt;code&gt;head(3)&lt;/code&gt; 보다 선호됩니다 .</target>
        </trans-unit>
        <trans-unit id="1038b9555896e68c9d9d9a5aa3bbcefbc38a65d0" translate="yes" xml:space="preserve">
          <source>When clocks moved backward due to DST, ambiguous times may arise. For example in Central European Time (UTC+01), when going from 03:00 DST to 02:00 non-DST, 02:30:00 local time occurs both at 00:30:00 UTC and at 01:30:00 UTC. In such a situation, the &lt;code&gt;ambiguous&lt;/code&gt; parameter dictates how ambiguous times should be handled.</source>
          <target state="translated">DST로 인해 시계가 뒤로 이동하면 모호한 시간이 발생할 수 있습니다. 예를 들어 중부 유럽 표준시 (UTC + 01)의 경우 03:00 DST에서 02:00 DST 이외의 시간으로 02:30:00 현지 시간은 00:30:00 UTC와 01:30:00에 모두 발생합니다. UTC. 이러한 상황에서 &lt;code&gt;ambiguous&lt;/code&gt; 매개 변수는 모호한 시간을 처리하는 방법을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d7a6a3779a60543d34b1c7b51db13486c33aae0a" translate="yes" xml:space="preserve">
          <source>When comparing to an arbitrary sequence, the number of columns must match the number elements in &lt;code&gt;other&lt;/code&gt;:</source>
          <target state="translated">임의 순서와 비교할 때 열 수는 &lt;code&gt;other&lt;/code&gt; 의 숫자 요소와 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="dbb6a810cec96d01ab3e2ff73be4d764c28ee194" translate="yes" xml:space="preserve">
          <source>When comparing two numbers, if the first number has magnitude less than 1e-5, we compare the two numbers directly and check whether they are equivalent within the specified precision. Otherwise, we compare the &lt;strong&gt;ratio&lt;/strong&gt; of the second number to the first number and check whether it is equivalent to 1 within the specified precision.</source>
          <target state="translated">두 숫자를 비교할 때 첫 번째 숫자의 크기가 1e-5보다 작 으면 두 숫자를 직접 비교하여 지정된 정밀도 내에서 같은지 확인합니다. 그렇지 않으면 두 번째 숫자와 첫 번째 숫자 의 &lt;strong&gt;비율&lt;/strong&gt; 을 비교 하여 지정된 정밀도 내에서 1과 같은지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="637ced76108fad73d6872646d080c34db0fb927b" translate="yes" xml:space="preserve">
          <source>When concatenating all &lt;code&gt;Series&lt;/code&gt; along the index (axis=0), a &lt;code&gt;Series&lt;/code&gt; is returned. When &lt;code&gt;objs&lt;/code&gt; contains at least one &lt;code&gt;DataFrame&lt;/code&gt;, a &lt;code&gt;DataFrame&lt;/code&gt; is returned. When concatenating along the columns (axis=1), a &lt;code&gt;DataFrame&lt;/code&gt; is returned.</source>
          <target state="translated">인덱스를 따라 모든 &lt;code&gt;Series&lt;/code&gt; 를 연결하면 (축 = 0) &lt;code&gt;Series&lt;/code&gt; 가 반환됩니다. 때 &lt;code&gt;objs&lt;/code&gt; 적어도 하나 포함 &lt;code&gt;DataFrame&lt;/code&gt; 을 하는 &lt;code&gt;DataFrame&lt;/code&gt; 가 반환됩니다. 열을 따라 연결할 때 (axis = 1) &lt;code&gt;DataFrame&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="f0db97e498bfb10687747cf4f4f999c1402f1f31" translate="yes" xml:space="preserve">
          <source>When converting a DatetimeArray/Index with non-regular values, so that a frequency cannot be inferred.</source>
          <target state="translated">비정규 값으로 DatetimeArray / Index를 변환 할 때 빈도를 유추 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1100386ed8ea6d9629a1a290dbb6310caefe32b9" translate="yes" xml:space="preserve">
          <source>When creating this branch, make sure your master branch is up to date with the latest upstream master version. To update your local master branch, you can do:</source>
          <target state="translated">이 분기를 만들 때 마스터 분기가 최신 업스트림 마스터 버전으로 최신 상태인지 확인하십시오. 로컬 마스터 브랜치를 업데이트하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="c4c7dd9d9c3acf5623be8c1b8ef40c03661c86cf" translate="yes" xml:space="preserve">
          <source>When data with a &lt;code&gt;datetime64[ns]&lt;/code&gt; or &lt;code&gt;timedelta64[ns]&lt;/code&gt; dtype is passed, pandas will always return a &lt;code&gt;DatetimeArray&lt;/code&gt; or &lt;code&gt;TimedeltaArray&lt;/code&gt; rather than a &lt;code&gt;PandasArray&lt;/code&gt;. This is for symmetry with the case of timezone-aware data, which NumPy does not natively support.</source>
          <target state="translated">경우와 데이터 &lt;code&gt;datetime64[ns]&lt;/code&gt; 또는 &lt;code&gt;timedelta64[ns]&lt;/code&gt; DTYPE 전달, 팬더 항상 리턴 &lt;code&gt;DatetimeArray&lt;/code&gt; 또는 &lt;code&gt;TimedeltaArray&lt;/code&gt; 를 (A)보다 오히려 &lt;code&gt;PandasArray&lt;/code&gt; . 이는 NumPy가 기본적으로 지원하지 않는 시간대 인식 데이터의 경우와 대칭을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="feaf1730baf09043e523a84bb3a9f4637a606898" translate="yes" xml:space="preserve">
          <source>When deciding what is related, you should mainly use your common sense and think about what can be useful for the users reading the documentation, especially the less experienced ones.</source>
          <target state="translated">관련 내용을 결정할 때는 주로 상식을 사용하고 문서를 읽는 사용자, 특히 경험이 적은 문서를 읽는 사용자에게 유용한 것이 무엇인지 생각해야합니다.</target>
        </trans-unit>
        <trans-unit id="b705982d8224621f64188a411430232a68f971e6" translate="yes" xml:space="preserve">
          <source>When dict is used as the &lt;code&gt;to_replace&lt;/code&gt; value, it is like key(s) in the dict are the to_replace part and value(s) in the dict are the value parameter.</source>
          <target state="translated">dict가 &lt;code&gt;to_replace&lt;/code&gt; 값 으로 사용될 때 dict의 키는 to_replace 부분이고 dict의 값은 value 매개 변수와 같습니다.</target>
        </trans-unit>
        <trans-unit id="bd7b0838ec9a86d35682dae47beecfb14725b1e4" translate="yes" xml:space="preserve">
          <source>When doing a PR with a docstring update, it is good to post the output of the validation script in a comment on github.</source>
          <target state="translated">docstring 업데이트로 PR을 수행 할 때 github에 대한 주석에 유효성 검증 스크립트의 출력을 게시하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="36805fe980f0f47951bcaa93f77efeb76b128434" translate="yes" xml:space="preserve">
          <source>When gluing together multiple DataFrames, you have a choice of how to handle the other axes (other than the one being concatenated). This can be done in the following two ways:</source>
          <target state="translated">여러 DataFrame을 함께 붙일 때 다른 축 (연결된 축 제외)을 처리하는 방법을 선택할 수 있습니다. 다음 두 가지 방법으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="542684db958778c261342ddedd76fb90002eebac" translate="yes" xml:space="preserve">
          <source>When grouping with &lt;code&gt;by&lt;/code&gt;, a Series mapping columns to &lt;code&gt;return_type&lt;/code&gt; is returned:</source>
          <target state="translated">&lt;code&gt;by&lt;/code&gt; 로 그룹화하면 &lt;code&gt;return_type&lt;/code&gt; 에 대한 Series 맵핑 열 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="17db09436383d41b5d603278ec30be4a5223d7f8" translate="yes" xml:space="preserve">
          <source>When ignore_na is False (default), weights are based on absolute positions. For example, the weights of x and y used in calculating the final weighted average of [x, None, y] are (1-alpha)**2 and 1 (if adjust is True), and (1-alpha)**2 and alpha (if adjust is False).</source>
          <target state="translated">ignore_na가 False (기본값) 인 경우 가중치는 절대 위치를 기준으로합니다. 예를 들어, [x, None, y]의 최종 가중 평균을 계산하는 데 사용되는 x 및 y의 가중치는 (1-alpha) ** 2 및 1 (adjust가 true 인 경우) 및 (1-alpha) **입니다. 2와 알파 (adjust가 False 인 경우).</target>
        </trans-unit>
        <trans-unit id="b7f965abc3a4138667124af03caf3a160dac0fe5" translate="yes" xml:space="preserve">
          <source>When ignore_na is True (reproducing pre-0.15.0 behavior), weights are based on relative positions. For example, the weights of x and y used in calculating the final weighted average of [x, None, y] are 1-alpha and 1 (if adjust is True), and 1-alpha and alpha (if adjust is False).</source>
          <target state="translated">ignore_na가 True 인 경우 (0.15.0 이전 버전의 동작 재현) 가중치는 상대 위치를 기반으로합니다. 예를 들어 [x, None, y]의 최종 가중 평균을 계산하는 데 사용되는 x 및 y의 가중치는 1- 알파 및 1 (조정이 true 인 경우)이고 1- 알파 및 알파 (조정이 False 인 경우)입니다.</target>
        </trans-unit>
        <trans-unit id="ce796429ced037639277ebc7f731943f6311abfc" translate="yes" xml:space="preserve">
          <source>When illustrating examples with a single &lt;code&gt;Series&lt;/code&gt; use the name &lt;code&gt;s&lt;/code&gt;, and if illustrating with a single &lt;code&gt;DataFrame&lt;/code&gt; use the name &lt;code&gt;df&lt;/code&gt;. For indices, &lt;code&gt;idx&lt;/code&gt; is the preferred name. If a set of homogeneous &lt;code&gt;Series&lt;/code&gt; or &lt;code&gt;DataFrame&lt;/code&gt; is used, name them &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt;, &lt;code&gt;s3&lt;/code&gt;&amp;hellip; or &lt;code&gt;df1&lt;/code&gt;, &lt;code&gt;df2&lt;/code&gt;, &lt;code&gt;df3&lt;/code&gt;&amp;hellip; If the data is not homogeneous, and more than one structure is needed, name them with something meaningful, for example &lt;code&gt;df_main&lt;/code&gt; and &lt;code&gt;df_to_join&lt;/code&gt;.</source>
          <target state="translated">단일 &lt;code&gt;Series&lt;/code&gt; 로 예제를 설명 할 때는 이름 &lt;code&gt;s&lt;/code&gt; 를 사용하고 단일 &lt;code&gt;DataFrame&lt;/code&gt; 으로 설명 할 경우 이름 &lt;code&gt;df&lt;/code&gt; 를 사용하십시오 . 색인의 경우 &lt;code&gt;idx&lt;/code&gt; 가 선호되는 이름입니다. 균일 한 세트의 경우 &lt;code&gt;Series&lt;/code&gt; 또는 &lt;code&gt;DataFrame&lt;/code&gt; 가 사용되며, 이름을 그들 &lt;code&gt;s1&lt;/code&gt; , &lt;code&gt;s2&lt;/code&gt; , &lt;code&gt;s3&lt;/code&gt; ... 또는 &lt;code&gt;df1&lt;/code&gt; , &lt;code&gt;df2&lt;/code&gt; , &lt;code&gt;df3&lt;/code&gt; 데이터가 균일하지 않고, 하나 명 이상의 구조가 필요한 경우 ... 예를 들어 의미있는 뭔가로 이름을 &lt;code&gt;df_main&lt;/code&gt; 및 &lt;code&gt;df_to_join&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f1f0b7bfcf4c317abdc8abca7d7e7d604ff0b80" translate="yes" xml:space="preserve">
          <source>When improving a single function or method&amp;rsquo;s docstring, it is not necessarily needed to build the full documentation (see next section). However, there is a script that checks a docstring (for example for the &lt;code&gt;DataFrame.mean&lt;/code&gt; method):</source>
          <target state="translated">단일 함수 또는 메소드의 docstring을 개선 할 때 반드시 전체 문서를 작성할 필요는 없습니다 (다음 섹션 참조). 그러나 docstring을 확인하는 스크립트가 있습니다 (예 : &lt;code&gt;DataFrame.mean&lt;/code&gt; 메소드).</target>
        </trans-unit>
        <trans-unit id="b53bd16fbdd18fccb0d835e451b2bbc685238e87" translate="yes" xml:space="preserve">
          <source>When integer position is out of bounds</source>
          <target state="translated">정수 위치가 범위를 벗어난 경우</target>
        </trans-unit>
        <trans-unit id="6c5658aad193c3c37a8452fd030a092a4b0597bd" translate="yes" xml:space="preserve">
          <source>When joining columns on columns (potentially a many-to-many join), any indexes on the passed &lt;code&gt;DataFrame&lt;/code&gt; objects &lt;strong&gt;will be discarded&lt;/strong&gt;.</source>
          <target state="translated">열의 열을 조인하면 (다수의 조인) 전달 된 &lt;code&gt;DataFrame&lt;/code&gt; 개체의 인덱스 &lt;strong&gt;가 삭제됩니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="390078ce51ab1ece7bb4f8f7ba39b5511eb51838" translate="yes" xml:space="preserve">
          <source>When label does not exist in DataFrame</source>
          <target state="translated">DataFrame에 레이블이없는 경우</target>
        </trans-unit>
        <trans-unit id="2dda8007fb361e4e9b2052d13b012732628747db" translate="yes" xml:space="preserve">
          <source>When not passing &lt;code&gt;others&lt;/code&gt;, all values are concatenated into a single string:</source>
          <target state="translated">&lt;code&gt;others&lt;/code&gt; 값을 전달하지 않으면 모든 값이 단일 문자열로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="32c285eece6af8b9de24a06d9e4f702c78e2b2bf" translate="yes" xml:space="preserve">
          <source>When one uses a dict as the &lt;code&gt;to_replace&lt;/code&gt; value, it is like the value(s) in the dict are equal to the &lt;code&gt;value&lt;/code&gt; parameter. &lt;code&gt;s.replace({'a': None})&lt;/code&gt; is equivalent to &lt;code&gt;s.replace(to_replace={'a': None}, value=None, method=None)&lt;/code&gt;:</source>
          <target state="translated">dict를 &lt;code&gt;to_replace&lt;/code&gt; 값 으로 사용하면 dict 의 값이 &lt;code&gt;value&lt;/code&gt; 매개 변수와 같습니다. &lt;code&gt;s.replace({'a': None})&lt;/code&gt; 은 &lt;code&gt;s.replace(to_replace={'a': None}, value=None, method=None)&lt;/code&gt; 같습니다.</target>
        </trans-unit>
        <trans-unit id="de02d9232d5829a47b83b4cc08a5e72e59c5bace" translate="yes" xml:space="preserve">
          <source>When pull requests are merged into the &lt;em&gt;pandas&lt;/em&gt;&lt;code&gt;master&lt;/code&gt; branch, the main parts of the documentation are also built by Travis-CI. These docs are then hosted &lt;a href=&quot;https://dev.pandas.io&quot;&gt;here&lt;/a&gt;, see also the &lt;a href=&quot;#contributing-ci&quot;&gt;Continuous Integration&lt;/a&gt; section.</source>
          <target state="translated">풀 요청이 &lt;em&gt;팬더 &lt;/em&gt; &lt;code&gt;master&lt;/code&gt; 브랜치 로 병합 되면 설명서의 주요 부분도 Travis-CI에 의해 작성됩니다. 이 문서는 호스팅 &lt;a href=&quot;https://dev.pandas.io&quot;&gt;여기에&lt;/a&gt; , 또한 참조 &lt;a href=&quot;#contributing-ci&quot;&gt;연속 통합&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b44d74ec06335d73747996508562fdd7c4b7085e" translate="yes" xml:space="preserve">
          <source>When quotechar is specified and quoting is not &lt;code&gt;QUOTE_NONE&lt;/code&gt;, indicate whether or not to interpret two consecutive quotechar elements INSIDE a field as a single &lt;code&gt;quotechar&lt;/code&gt; element.</source>
          <target state="translated">quotechar이 지정되고 인용이 &lt;code&gt;QUOTE_NONE&lt;/code&gt; 이 아닌 경우 , 필드 내에서 두 개의 연속 인용 문자 요소를 단일 &lt;code&gt;quotechar&lt;/code&gt; 요소 로 해석할지 여부를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="872fd821127a903d4955e6044a083f92bcef47b6" translate="yes" xml:space="preserve">
          <source>When relating to other libraries (mainly &lt;code&gt;numpy&lt;/code&gt;), use the name of the module first (not an alias like &lt;code&gt;np&lt;/code&gt;). If the function is in a module which is not the main one, like &lt;code&gt;scipy.sparse&lt;/code&gt;, list the full module (e.g. &lt;code&gt;scipy.sparse.coo_matrix&lt;/code&gt;).</source>
          <target state="translated">다른 라이브러리 (주로 &lt;code&gt;numpy&lt;/code&gt; )와 관련된 경우 먼저 모듈의 이름을 사용하십시오 ( &lt;code&gt;np&lt;/code&gt; 와 같은 별명이 아님 ). 함수가 &lt;code&gt;scipy.sparse&lt;/code&gt; 와 같이 기본이 아닌 모듈에있는 경우 전체 모듈을 나열하십시오 (예 : &lt;code&gt;scipy.sparse.coo_matrix&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="411448cfc4df3ae34129aa0d3409c4fe277fed55" translate="yes" xml:space="preserve">
          <source>When replacing multiple &lt;code&gt;bool&lt;/code&gt; or &lt;code&gt;datetime64&lt;/code&gt; objects and the arguments to &lt;code&gt;to_replace&lt;/code&gt; does not match the type of the value being replaced</source>
          <target state="translated">여러 &lt;code&gt;bool&lt;/code&gt; 또는 &lt;code&gt;datetime64&lt;/code&gt; 객체를 교체 할 때 &lt;code&gt;to_replace&lt;/code&gt; 에 대한 인수 가 교체되는 값의 유형과 일치하지 않는 경우</target>
        </trans-unit>
        <trans-unit id="be6b09af0c6aba65e5d516638dd8ae5612d7c120" translate="yes" xml:space="preserve">
          <source>When resampling data, missing values may appear (e.g., when the resampling frequency is higher than the original frequency). The &lt;code&gt;nearest&lt;/code&gt; method will replace &lt;code&gt;NaN&lt;/code&gt; values that appeared in the resampled data with the value from the nearest member of the sequence, based on the index value. Missing values that existed in the original data will not be modified. If &lt;code&gt;limit&lt;/code&gt; is given, fill only this many values in each direction for each of the original values.</source>
          <target state="translated">데이터를 리샘플링 할 때 결 측값이 나타날 수 있습니다 (예 : 리샘플링 주파수가 원래 주파수보다 높을 때). &lt;code&gt;nearest&lt;/code&gt; 방법을 대체 할 것이다 &lt;code&gt;NaN&lt;/code&gt; 인덱스 값에 기초하여 상기 시퀀스의 부재로부터 가까운 값으로 리샘플링 된 데이터에 나타난 값. 원래 데이터에 존재했던 결 측값은 수정되지 않습니다. 경우 &lt;code&gt;limit&lt;/code&gt; 주어, 원래 값의 각각에 대해 각 방향으로 만이 많은 값을 채운다.</target>
        </trans-unit>
        <trans-unit id="f92b30c1e1a6c666818625e8fb24d7e1a0f101d9" translate="yes" xml:space="preserve">
          <source>When specifying the parameter types, Python built-in data types can be used directly (the Python type is preferred to the more verbose string, integer, boolean, etc):</source>
          <target state="translated">매개 변수 유형을 지정할 때 Python 내장 데이터 유형을 직접 사용할 수 있습니다 (Python 유형은 더 자세한 문자열, 정수, 부울 등을 선호합니다).</target>
        </trans-unit>
        <trans-unit id="6b42f98d793e16e63d298298fecc50fa1fd9cb03" translate="yes" xml:space="preserve">
          <source>When the DataFrame has mixed dtypes, we get a transposed DataFrame with the &lt;code&gt;object&lt;/code&gt; dtype:</source>
          <target state="translated">DataFrame에 dtype이 혼합되면 dtype &lt;code&gt;object&lt;/code&gt; 와 조옮김 DataFrame이 나타 납니다.</target>
        </trans-unit>
        <trans-unit id="986f0e3871a4ecfbf5b66d14050a24a4818420d7" translate="yes" xml:space="preserve">
          <source>When the calling object is a TimedeltaArray, the return type is ndarray. When the calling object is a TimedeltaIndex, the return type is a Float64Index. When the calling object is a Series, the return type is Series of type &lt;code&gt;float64&lt;/code&gt; whose index is the same as the original.</source>
          <target state="translated">호출 객체가 TimedeltaArray 인 경우 반환 유형은 ndarray입니다. 호출 객체가 TimedeltaIndex 인 경우 반환 유형은 Float64Index입니다. 호출 객체가 Series 인 경우 반환 유형은 &lt;code&gt;float64&lt;/code&gt; 유형의 Series이며 인덱스는 원본과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="b54d3965f8d3f4ed20a2848da8c4c77dc0d1ac50" translate="yes" xml:space="preserve">
          <source>When the dtype is homogeneous in the original DataFrame, we get a transposed DataFrame with the same dtype:</source>
          <target state="translated">원래의 DataFrame에서 dtype이 동종인 경우 동일한 dtype으로 조옮김 DataFrame을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="a829be98ffdbae5a526529860303301c9f5d9efe" translate="yes" xml:space="preserve">
          <source>When the index is inserted under another level, we can specify under which one with the parameter &lt;code&gt;col_fill&lt;/code&gt;:</source>
          <target state="translated">색인이 다른 레벨에 삽입되면 &lt;code&gt;col_fill&lt;/code&gt; 매개 변수를 사용하여 어느 레벨을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="137c1713cbb665fc14c73205eb74bab466a78d3a" translate="yes" xml:space="preserve">
          <source>When the indices are out of bounds for the array.</source>
          <target state="translated">인덱스가 배열의 범위를 벗어난 경우</target>
        </trans-unit>
        <trans-unit id="526871eca415ad4976ebe8dbeb8ce984ac55fb18" translate="yes" xml:space="preserve">
          <source>When the pattern matches more than one string in the Series, all matches are returned:</source>
          <target state="translated">Series에서 패턴이 둘 이상의 문자열과 일치하면 모든 일치 항목이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="67aaffd5e2428478ab54542297df50ed2edbed57" translate="yes" xml:space="preserve">
          <source>When the requested timezone cannot be found.</source>
          <target state="translated">요청한 시간대를 찾을 수없는 경우</target>
        </trans-unit>
        <trans-unit id="724465bcabdf5ad12d816f4256c012ab02eb69c0" translate="yes" xml:space="preserve">
          <source>When the table already exists and &lt;code&gt;if_exists&lt;/code&gt; is &amp;lsquo;fail&amp;rsquo; (the default).</source>
          <target state="translated">테이블이 이미 존재하고 &lt;code&gt;if_exists&lt;/code&gt; 가 'fail'(기본값) 인 경우</target>
        </trans-unit>
        <trans-unit id="37c1c658d030353b69d980ed39918bbd37867599" translate="yes" xml:space="preserve">
          <source>When there are any &lt;code&gt;index&lt;/code&gt;, &lt;code&gt;columns&lt;/code&gt; combinations with multiple values. &lt;code&gt;DataFrame.pivot_table&lt;/code&gt; when you need to aggregate.</source>
          <target state="translated">어떤이있는 경우 &lt;code&gt;index&lt;/code&gt; , &lt;code&gt;columns&lt;/code&gt; 여러 값 조합. 집계해야 할 때 &lt;code&gt;DataFrame.pivot_table&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c7dcf2b13d836d8e5cd84f648cf1b5c57f5c3bb2" translate="yes" xml:space="preserve">
          <source>When there are duplicate values that cannot all fit in a Series of &lt;code&gt;n&lt;/code&gt; elements:</source>
          <target state="translated">일련의 &lt;code&gt;n&lt;/code&gt; 개 요소 에 모두 적용 할 수없는 중복 값이있는 경우 :</target>
        </trans-unit>
        <trans-unit id="bce9c5cfde3159b7dee94853084aa241c34d7f69" translate="yes" xml:space="preserve">
          <source>When to switch from the verbose to the truncated output. If the DataFrame has more than &lt;code&gt;max_cols&lt;/code&gt; columns, the truncated output is used. By default, the setting in &lt;code&gt;pandas.options.display.max_info_columns&lt;/code&gt; is used.</source>
          <target state="translated">상세에서 잘린 출력으로 전환 할 때 DataFrame 이상이있는 경우 &lt;code&gt;max_cols&lt;/code&gt; 열 잘린 출력이 사용됩니다. 기본적으로 &lt;code&gt;pandas.options.display.max_info_columns&lt;/code&gt; 의 설정 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b37a804e6e41127bfad29c4306b45de53e73b2df" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;Styler.apply(func, axis=None)&lt;/code&gt;, the function must return a DataFrame with the same index and column labels.</source>
          <target state="translated">사용시 &lt;code&gt;Styler.apply(func, axis=None)&lt;/code&gt; , 함수는 동일한 인덱스 및 열 라벨와 DataFrame을 반환해야한다.</target>
        </trans-unit>
        <trans-unit id="4b5c9b8fc8e549b8e006268c40c0723ac834bff5" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;expand=True&lt;/code&gt;, the split elements will expand out into separate columns. If NaN is present, it is propagated throughout the columns during the split.</source>
          <target state="translated">사용하는 경우 &lt;code&gt;expand=True&lt;/code&gt; , 분할 요소는 별도 열로 밖으로 확장됩니다. NaN이 있으면 분할하는 동안 열 전체에 전파됩니다.</target>
        </trans-unit>
        <trans-unit id="4c5a9d0277936066be7d2f2843b04396898f8974" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;keep='all'&lt;/code&gt;, all duplicate items are maintained:</source>
          <target state="translated">사용하는 경우 &lt;code&gt;keep='all'&lt;/code&gt; , 모든 중복 항목이 유지됩니다</target>
        </trans-unit>
        <trans-unit id="315c9ed7c20453242eee108cd70becf1f9dc30fc" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;keep='last'&lt;/code&gt;, ties are resolved in reverse order:</source>
          <target state="translated">사용하는 경우 &lt;code&gt;keep='last'&lt;/code&gt; , 넥타이는 역순으로 해결 :</target>
        </trans-unit>
        <trans-unit id="c9fa8d4c0e1d57c3258b880b66b359610ba3955c" translate="yes" xml:space="preserve">
          <source>When using the &amp;lsquo;index&amp;rsquo; orientation, the column names can be specified manually:</source>
          <target state="translated">'인덱스'방향을 사용하는 경우 열 이름을 수동으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a5e9197895d77f2129e1594627201c9aaa9ce48" translate="yes" xml:space="preserve">
          <source>When we draw a dice 6000 times, we expect to get each value around 1000 times. But when we draw two dices and sum the result, the distribution is going to be quite different. A histogram illustrates those distributions.</source>
          <target state="translated">주사위를 6000 번 그릴 때 각 값은 약 1000 배가 될 것으로 예상됩니다. 그러나 우리가 두 개의 오지를 그리고 결과를 합하면 분포는 상당히 다를 것입니다. 히스토그램은 이러한 분포를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c56d3d43a87fc11354ce04fef9a3b040e787b284" translate="yes" xml:space="preserve">
          <source>When we reset the index, the old index is added as a column, and a new sequential index is used:</source>
          <target state="translated">인덱스를 재설정하면 이전 인덱스가 열로 추가되고 새로운 순차 인덱스가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c32935bbda5fc841806edb88198852464f8e8cee" translate="yes" xml:space="preserve">
          <source>When writing style functions, you take care of producing the CSS attribute / value pairs you want. Pandas matches those up with the CSS classes that identify each cell.</source>
          <target state="translated">스타일 함수를 작성할 때 원하는 CSS 속성 / 값 쌍을 생성합니다. 팬더는 각 셀을 식별하는 CSS 클래스와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="263278c083269b77285aa9571251f5635d9f8d70" translate="yes" xml:space="preserve">
          <source>When you want every pairing of the elements in two iterables, it can be easier to use the &lt;a href=&quot;../reference/api/pandas.multiindex.from_product#pandas.MultiIndex.from_product&quot;&gt;&lt;code&gt;MultiIndex.from_product()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">두 개의 iterable에서 요소의 모든 쌍을 원할 때 &lt;a href=&quot;../reference/api/pandas.multiindex.from_product#pandas.MultiIndex.from_product&quot;&gt; &lt;code&gt;MultiIndex.from_product()&lt;/code&gt; &lt;/a&gt; 메소드 를 사용하는 것이 더 쉬울 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="689df68b89aa82dfd47326209affc957ca044460" translate="yes" xml:space="preserve">
          <source>When you want to update the feature branch with changes in master after you created the branch, check the section on &lt;a href=&quot;#contributing-update-pr&quot;&gt;updating a PR&lt;/a&gt;.</source>
          <target state="translated">분기를 생성 한 후 마스터에서 변경 사항으로 기능 분기를 업데이트하려면 &lt;a href=&quot;#contributing-update-pr&quot;&gt;PR 업데이트&lt;/a&gt; 섹션을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c3e06de33d3da280d127d0465fcb6057c3c87f3" translate="yes" xml:space="preserve">
          <source>When you want your changes to appear publicly on your GitHub page, push your forked feature branch&amp;rsquo;s commits:</source>
          <target state="translated">변경 사항을 GitHub 페이지에 공개적으로 표시하려면 분기 기능 분기의 커밋을 푸시하십시오.</target>
        </trans-unit>
        <trans-unit id="859279367089a6d96bcf1e5c6c122a62a6e0dcce" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re ready to ask for a code review, file a pull request. Before you do, once again make sure that you have followed all the guidelines outlined in this document regarding code style, tests, performance tests, and documentation. You should also double check your branch changes against the branch it was based on:</source>
          <target state="translated">코드 검토를 요청할 준비가되면 풀 요청을 제출하십시오. 수행하기 전에 코드 스타일, 테스트, 성능 테스트 및 문서와 관련하여이 문서에 요약 된 모든 지침을 다시 한 번 확인하십시오. 또한 다음을 기반으로 한 지점과 지점 변경 사항을 다시 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="907a50cdf0e404fa16d8ec46ed1cf8f7f4c436d4" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;cond&lt;/code&gt; is False, keep the original value. Where True, replace with corresponding value from &lt;code&gt;other&lt;/code&gt;. If &lt;code&gt;cond&lt;/code&gt; is callable, it is computed on the Series/DataFrame and should return boolean Series/DataFrame or array. The callable must not change input Series/DataFrame (though pandas doesn&amp;rsquo;t check it).</source>
          <target state="translated">어디 &lt;code&gt;cond&lt;/code&gt; 거짓이다, 원래 값을 유지한다. True 인 경우 &lt;code&gt;other&lt;/code&gt; 의 해당 값으로 바꾸십시오 . &lt;code&gt;cond&lt;/code&gt; 를 호출 할 수 있으면 Series / DataFrame에서 계산되며 부울 Series / DataFrame 또는 배열을 반환해야합니다. 콜 러블은 팬더가 확인하지 않아도 입력 시리즈 / 데이터 프레임을 변경해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="074ea680722fd2f03880dd703ff27577e31f9bb9" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;cond&lt;/code&gt; is True, keep the original value. Where False, replace with corresponding value from &lt;code&gt;other&lt;/code&gt;. If &lt;code&gt;cond&lt;/code&gt; is callable, it is computed on the Series/DataFrame and should return boolean Series/DataFrame or array. The callable must not change input Series/DataFrame (though pandas doesn&amp;rsquo;t check it).</source>
          <target state="translated">어디 &lt;code&gt;cond&lt;/code&gt; True입니다, 원래 값을 유지한다. False 인 경우 &lt;code&gt;other&lt;/code&gt; 의 해당 값으로 바꾸십시오 . &lt;code&gt;cond&lt;/code&gt; 를 호출 할 수 있으면 Series / DataFrame에서 계산되며 부울 Series / DataFrame 또는 배열을 반환해야합니다. 콜 러블은 팬더가 확인하지 않아도 입력 시리즈 / 데이터 프레임을 변경해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="115729b31bfba27ceafd5b66785e295c64fdbe25" translate="yes" xml:space="preserve">
          <source>Where the value is a callable, evaluated on &lt;code&gt;df&lt;/code&gt;:</source>
          <target state="translated">값이 호출 가능한 경우 &lt;code&gt;df&lt;/code&gt; 에서 평가됩니다 .</target>
        </trans-unit>
        <trans-unit id="f9992f51fe4ba5d0709875d722d1f6c069802346" translate="yes" xml:space="preserve">
          <source>Where there are duplicate values:</source>
          <target state="translated">중복 값이있는 경우 :</target>
        </trans-unit>
        <trans-unit id="155b8b8ce82236d8d4c14dc102d2a18531f1c8a5" translate="yes" xml:space="preserve">
          <source>Where to reorder levels.</source>
          <target state="translated">레벨을 재정렬 할 위치</target>
        </trans-unit>
        <trans-unit id="dbee33813cd8c18a476718c9787a8d500ee8f51b" translate="yes" xml:space="preserve">
          <source>Where to send the output. By default, the output is printed to sys.stdout. Pass a writable buffer if you need to further process the output.</source>
          <target state="translated">출력을 보낼 곳. 기본적으로 출력은 sys.stdout에 인쇄됩니다. 출력을 추가로 처리해야 할 경우 쓰기 가능한 버퍼를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="4af9617f74f3fb16e775a0d165421fe00441bc1b" translate="yes" xml:space="preserve">
          <source>Where to start?</source>
          <target state="translated">어디서 시작하나요?</target>
        </trans-unit>
        <trans-unit id="8c0be4d149f3b4fb1243671a27f9eb0e08a7fd3f" translate="yes" xml:space="preserve">
          <source>Where x coefficients correspond to the values of each dimension and t is linearly spaced between -pi and +pi. Each row of frame then corresponds to a single curve.</source>
          <target state="translated">여기서 x 계수는 각 차원의 값에 해당하고 t는 -pi와 + pi 사이에 선형으로 간격을두고 있습니다. 프레임의 각 행은 단일 곡선에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="b67ec6ea21c47c8522487bf095c6157e49ddc8eb" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; can be compiled as a regex pattern.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; 를 정규식 패턴으로 컴파일 할 수 있는지 여부</target>
        </trans-unit>
        <trans-unit id="86e221cd05a39625ddfcbfa2be6370d460c8b0ea" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; has dict-like properties.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; 에 dict-like 속성이 있는지 여부</target>
        </trans-unit>
        <trans-unit id="b54fda8c33339cb35d33701e66c3b8ec9c220bc2" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; has file-like properties.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; 에 파일과 같은 속성이 있는지 여부</target>
        </trans-unit>
        <trans-unit id="a7ed8449cf7d0793d51602e9eef86dc25501d3b3" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; has list-like properties.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; 에 목록과 유사한 속성이 있는지 여부</target>
        </trans-unit>
        <trans-unit id="9db5eddf72afca49f5b966f94392dc8e6944ebaa" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; is a named tuple.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; 가 명명 된 튜플 인지 여부</target>
        </trans-unit>
        <trans-unit id="c64d7f907803c16c6e49c8f748ccccfa9b906318" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; is a number or not.</source>
          <target state="translated">여부 &lt;code&gt;obj&lt;/code&gt; 수 여부입니다.</target>
        </trans-unit>
        <trans-unit id="34cf150a8ca6f437db64563df8973f109a697e99" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; is a regex pattern.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; 가 정규식 패턴 인지 여부</target>
        </trans-unit>
        <trans-unit id="bd5749eee622c804c8bc82797e6f33311cf5462b" translate="yes" xml:space="preserve">
          <source>Whether &lt;code&gt;obj&lt;/code&gt; is an iterator.</source>
          <target state="translated">&lt;code&gt;obj&lt;/code&gt; 가 반복자 인지 여부</target>
        </trans-unit>
        <trans-unit id="4bcd2b9d6e3db50df0f74ff54eba5b932a7e2c86" translate="yes" xml:space="preserve">
          <source>Whether a copy or a reference is returned for a setting operation may depend on the context. This is sometimes called &lt;code&gt;chained assignment&lt;/code&gt; and should be avoided. See &lt;a href=&quot;indexing#indexing-view-versus-copy&quot;&gt;Returning a View versus Copy&lt;/a&gt;.</source>
          <target state="translated">설정 조작을 위해 사본 또는 참조가 리턴되는지 여부는 컨텍스트에 따라 달라질 수 있습니다. 이를 &lt;code&gt;chained assignment&lt;/code&gt; 이라고도 하며 피해야합니다. &lt;a href=&quot;indexing#indexing-view-versus-copy&quot;&gt;보기와 복사 반환을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8cd5f8136312f916e2c889d78891edf83599ba90" translate="yes" xml:space="preserve">
          <source>Whether a copy or a reference is returned for a setting operation, may depend on the context. This is sometimes called &lt;code&gt;chained assignment&lt;/code&gt; and should be avoided. See &lt;a href=&quot;#indexing-view-versus-copy&quot;&gt;Returning a View versus Copy&lt;/a&gt;.</source>
          <target state="translated">설정 조작에 대해 사본 또는 참조가 리턴되는지 여부는 컨텍스트에 따라 달라질 수 있습니다. 이를 &lt;code&gt;chained assignment&lt;/code&gt; 이라고도 하며 피해야합니다. &lt;a href=&quot;#indexing-view-versus-copy&quot;&gt;보기와 복사 반환을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a33e7df555080b16ccf1f2b63f9343cd96dc1049" translate="yes" xml:space="preserve">
          <source>Whether each column contains at least one True element (the default).</source>
          <target state="translated">각 열에 하나 이상의 True 요소가 포함되는지 여부 (기본값)</target>
        </trans-unit>
        <trans-unit id="d211088a9d601f48a1f668dcaf97f6bf784cee44" translate="yes" xml:space="preserve">
          <source>Whether each element in the DataFrame is contained in values.</source>
          <target state="translated">DataFrame의 각 요소가 값에 포함되어 있는지 여부</target>
        </trans-unit>
        <trans-unit id="c7f0330178934acf893370d010d341574b01df37" translate="yes" xml:space="preserve">
          <source>Whether elements with &amp;ldquo;display: none&amp;rdquo; should be parsed</source>
          <target state="translated">&quot;display : none&quot;이있는 요소를 구문 분석해야하는지 여부</target>
        </trans-unit>
        <trans-unit id="22776b3b28f0c13d149788d783fd9c3ab3eee812" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of a boolean dtype.</source>
          <target state="translated">배열 또는 dtype이 부울 dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="53db8fc094cc1cc97f1bf97cbe083085ee34e071" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of a complex dtype.</source>
          <target state="translated">배열 또는 dtype이 복잡한 dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="7c21199c933bdbdd7b8dc3a0541115e44f148500" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of a float dtype.</source>
          <target state="translated">배열 또는 dtype이 float dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="cd6dd72e71a3321a0db85699b6d193d5372ea446" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of a numeric dtype.</source>
          <target state="translated">배열 또는 dtype이 숫자 dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="a3429cd2e6e4c2e26b2d4302bbfd449abdc1301b" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of a signed integer dtype and not an instance of timedelta64.</source>
          <target state="translated">배열 또는 dtype이 timedelta64 인스턴스가 아닌 부호있는 정수 dtype인지 여부</target>
        </trans-unit>
        <trans-unit id="940b6df13ab4ccab12f141c3b704b36fc3ffbe4e" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of an integer dtype and not an instance of timedelta64.</source>
          <target state="translated">배열 또는 dtype이 timedelta64 인스턴스가 아닌 정수 dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="40c091440f319d97fb52c4a9c24fca04f3df7942" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of an unsigned integer dtype.</source>
          <target state="translated">배열 또는 dtype이 부호없는 정수 dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="a5ba3b5c819993a163d111fb07cee5ceb50803ac" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of the datetime64 dtype.</source>
          <target state="translated">배열 또는 dtype이 datetime64 dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="c894c79ede346e315a03b8c10cf686f5f6924ade" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of the datetime64[ns] dtype.</source>
          <target state="translated">배열 또는 dtype이 datetime64 [ns] dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="4b137d4adc74a6d1641de347eebb0c6b74a95171" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of the int64 dtype.</source>
          <target state="translated">배열 또는 dtype이 int64 dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="9ac065439de9fc591ba644f0ac832c5f7751a4d5" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of the string dtype.</source>
          <target state="translated">배열 또는 dtype이 문자열 dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="c72ce182e5fe9c83684834808592f516c47fab39" translate="yes" xml:space="preserve">
          <source>Whether or not the array or dtype is of the timedelta64[ns] dtype.</source>
          <target state="translated">배열 또는 dtype이 timedelta64 [ns] dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="a365b6d8116fa8fa1987026c6225c9eac8dbd333" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like is a datetime array-like with a timezone component in its dtype.</source>
          <target state="translated">배열과 같은 것이 dtype에 시간대 구성 요소가있는 날짜 및 시간과 같은지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="b5a80f9880539a0ac520fc4d7ce23b42cf218378" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like is a pandas sparse array.</source>
          <target state="translated">배열과 같은 것이 팬더 스파 스 배열인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="3900a48b1137ab24dec388430e1d4e924326abdc" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like is a periodical index.</source>
          <target state="translated">배열과 같은 것이주기적인 색인인지 여부.</target>
        </trans-unit>
        <trans-unit id="c3a710f4ed959c060d39be5dff8e4962f596542d" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like is of a Categorical instance.</source>
          <target state="translated">배열과 같은 것이 범주 형 인스턴스인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="f809d324731060928d914f55f0a0eadfc72b5593" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like is of a pandas extension class instance.</source>
          <target state="translated">배열과 같은 것이 pandas 확장 클래스 인스턴스인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="e95735a5f5ecf4c52d61bee7ccc101a9c724a3a6" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like or dtype is of a DatetimeTZDtype dtype.</source>
          <target state="translated">배열 형 또는 dtype이 DatetimeTZDtype dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="47d9d3b4a779f209a34bc13fe9cd8ca6afe22de4" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like or dtype is of the Categorical dtype.</source>
          <target state="translated">배열 형 또는 dtype이 범주 형 dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="7158b97d2da253b4a9e4c28d7994cbfe409e7a8f" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like or dtype is of the Interval dtype.</source>
          <target state="translated">배열과 같은 dtype이 Interval dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="7b9336a72c1cb249a8bf147d7e27ebe050b6a6a0" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like or dtype is of the Period dtype.</source>
          <target state="translated">배열과 같은 dtype이 Period dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="acafae59a5ca0680733c7028502fe13aa53acf37" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like or dtype is of the datetime64 dtype.</source>
          <target state="translated">배열 형 또는 dtype이 datetime64 dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="0dd9ea660da9d2e9ab3d744f879956331247ba29" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like or dtype is of the object dtype.</source>
          <target state="translated">배열 형 또는 dtype이 객체 dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="14853464945259cb0d8e591c090fdd9b5d66aacf" translate="yes" xml:space="preserve">
          <source>Whether or not the array-like or dtype is of the timedelta64 dtype.</source>
          <target state="translated">배열 형 또는 dtype이 timedelta64 dtype인지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="25ad7ccc1ef77bde78c2fcef7af04718e5003467" translate="yes" xml:space="preserve">
          <source>Whether or not the categorical is treated as a ordered categorical. If not given, do not change the ordered information.</source>
          <target state="translated">범주 형이 순서 형 범주 형으로 취급되는지 여부 제공되지 않은 경우 주문 정보를 변경하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="e911bed13c87e76be6978f04e54d6475b9dcfaf6" translate="yes" xml:space="preserve">
          <source>Whether or not the elements should be ranked in ascending order.</source>
          <target state="translated">요소가 오름차순으로 정렬되어야하는지 여부</target>
        </trans-unit>
        <trans-unit id="47f285d4b910a88654633df2b85c61ded3fb361e" translate="yes" xml:space="preserve">
          <source>Whether or not the new_categories should be considered as a rename of the old categories or as reordered categories.</source>
          <target state="translated">new_categories가 이전 범주의 이름을 바꾸거나 재정렬 된 범주로 간주해야하는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="6085149711bcc6aa77ae2cd6cc60714feb74fa01" translate="yes" xml:space="preserve">
          <source>Whether or not there are quoted values in &lt;code&gt;self&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; 인용 된 값이 있는지 여부</target>
        </trans-unit>
        <trans-unit id="e0953b28e960b5132ae06e6c50755a74a171fa93" translate="yes" xml:space="preserve">
          <source>Whether or not this categorical is treated as a ordered categorical. If True, the resulting categorical will be ordered. An ordered categorical respects, when sorted, the order of its &lt;code&gt;categories&lt;/code&gt; attribute (which in turn is the &lt;code&gt;categories&lt;/code&gt; argument, if provided).</source>
          <target state="translated">이 범주가 정렬 된 범주 형으로 취급되는지 여부 True 인 경우 결과 범주 형이 주문됩니다. 정렬 된 범주 형 범주는 정렬 될 때 &lt;code&gt;categories&lt;/code&gt; 속성 의 순서를 따릅니다 (차례로 제공된 경우 &lt;code&gt;categories&lt;/code&gt; 인수 임).</target>
        </trans-unit>
        <trans-unit id="f0e3117bb9b9850047dcaffe10ee037111938f59" translate="yes" xml:space="preserve">
          <source>Whether or not this categorical is treated as an ordered categorical. If not given here or in &lt;code&gt;dtype&lt;/code&gt;, the resulting categorical will be unordered.</source>
          <target state="translated">이 범주가 정렬 된 범주 형으로 취급되는지 여부 here 또는 &lt;code&gt;dtype&lt;/code&gt; 으로 지정되지 않으면 결과 범주가 정렬되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c886c11f08c3cf79796ad3859236bb2ebaf99261" translate="yes" xml:space="preserve">
          <source>Whether or not to add the categories inplace or return a copy of this categorical with added categories.</source>
          <target state="translated">카테고리를 추가하거나 카테고리를 추가하여이 카테고리의 사본을 리턴할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="ae65567c4f49b1706573053f6df13a6bca942c7b" translate="yes" xml:space="preserve">
          <source>Whether or not to display the returned rankings in percentile form.</source>
          <target state="translated">반환 된 순위를 백분위 수 형식으로 표시할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="0932682dcfb8c61fb8c1d712ea0d3ecbac2f28a7" translate="yes" xml:space="preserve">
          <source>Whether or not to drop unused categories inplace or return a copy of this categorical with unused categories dropped.</source>
          <target state="translated">사용하지 않는 범주를 제자리에 버릴지 여부 또는 사용되지 않은 범주를 버린이 범주의 사본을 리턴할지 여부</target>
        </trans-unit>
        <trans-unit id="60d0b46ba7814fe567d93ff178d253945b560041" translate="yes" xml:space="preserve">
          <source>Whether or not to include the default NaN values when parsing the data. Depending on whether &lt;code&gt;na_values&lt;/code&gt; is passed in, the behavior is as follows:</source>
          <target state="translated">데이터를 구문 분석 할 때 기본 NaN 값을 포함할지 여부입니다. &lt;code&gt;na_values&lt;/code&gt; 가 전달 되는지 여부에 따라 동작은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f7c3985ceb1c9341da1f2004466ddb9109bcebf2" translate="yes" xml:space="preserve">
          <source>Whether or not to remove the categories inplace or return a copy of this categorical with removed categories.</source>
          <target state="translated">카테고리를 제자리에서 제거할지 또는 제거 된 카테고리와 함께이 범주의 사본을 리턴할지 여부.</target>
        </trans-unit>
        <trans-unit id="102352f97f600fdcc02f3cd27e0caac2f2ebaac7" translate="yes" xml:space="preserve">
          <source>Whether or not to rename the categories inplace or return a copy of this categorical with renamed categories.</source>
          <target state="translated">카테고리의 이름을 변경하거나 이름이 바뀐 카테고리로이 범주의 사본을 리턴할지 여부.</target>
        </trans-unit>
        <trans-unit id="f6a4770058338b225bbfb54f535e8e7a5e026d92" translate="yes" xml:space="preserve">
          <source>Whether or not to reorder the categories in-place or return a copy of this categorical with reordered categories.</source>
          <target state="translated">범주를 제자리에서 재정렬할지 또는 재정렬 된 범주와 함께이 범주의 사본을 반환할지 여부.</target>
        </trans-unit>
        <trans-unit id="c2bbeeb7dc01f1760cb5c9a522c695db925c7c3d" translate="yes" xml:space="preserve">
          <source>Whether or not to reorder the categories inplace or return a copy of this categorical with reordered categories.</source>
          <target state="translated">범주를 제자리에 다시 정렬할지 또는 재정렬 된 범주와 함께이 범주의 복사본을 반환할지 여부</target>
        </trans-unit>
        <trans-unit id="d4b36acbe27f2136c54ab7655a06cff1adf58b47" translate="yes" xml:space="preserve">
          <source>Whether or not to return a copy.</source>
          <target state="translated">사본을 반환할지 여부.</target>
        </trans-unit>
        <trans-unit id="d46237d36861d5cb4ff96d17161a29bb72f3be14" translate="yes" xml:space="preserve">
          <source>Whether or not to set the ordered attribute in-place or return a copy of this categorical with ordered set to False.</source>
          <target state="translated">정렬 된 속성을 제자리에 설정할지 또는 정렬하지 않고 정렬 된이 범주의 사본을 False로 리턴할지 여부</target>
        </trans-unit>
        <trans-unit id="cf76be43556fb1c1c180d537267fd15249eac9ba" translate="yes" xml:space="preserve">
          <source>Whether or not to set the ordered attribute in-place or return a copy of this categorical with ordered set to True.</source>
          <target state="translated">정렬 된 속성을 제자리에 설정할지 또는 정렬 된 순서를 가진이 범주의 사본을 True로 리턴할지 여부.</target>
        </trans-unit>
        <trans-unit id="879e7ad5a4a5f54e20b712af28f664358d342aab" translate="yes" xml:space="preserve">
          <source>Whether the &lt;code&gt;arr_or_dtype&lt;/code&gt; is an extension array type.</source>
          <target state="translated">&lt;code&gt;arr_or_dtype&lt;/code&gt; 이 확장 배열 유형 인지 여부</target>
        </trans-unit>
        <trans-unit id="23f890daf73cb275b7a44a01564d8732e2dcb51d" translate="yes" xml:space="preserve">
          <source>Whether the categories have an ordered relationship.</source>
          <target state="translated">카테고리의 순서 관계가 있는지 여부</target>
        </trans-unit>
        <trans-unit id="09c3d2427d684ae4fc5f673fb6c1adb55b009481" translate="yes" xml:space="preserve">
          <source>Whether the dummy-encoded columns should be backed by a &lt;a href=&quot;pandas.sparsearray#pandas.SparseArray&quot;&gt;&lt;code&gt;SparseArray&lt;/code&gt;&lt;/a&gt; (True) or a regular NumPy array (False).</source>
          <target state="translated">더미 인코딩 열이 &lt;a href=&quot;pandas.sparsearray#pandas.SparseArray&quot;&gt; &lt;code&gt;SparseArray&lt;/code&gt; &lt;/a&gt; (True) 또는 일반 NumPy 배열 (False)에 의해 백업되어야하는지 여부</target>
        </trans-unit>
        <trans-unit id="a7575c0b17a9b6e9510d93b5945c7ffe9c82ff33" translate="yes" xml:space="preserve">
          <source>Whether the first interval should be left-inclusive or not.</source>
          <target state="translated">첫 번째 간격을 포함해야하는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="8972b129def0820104e3c0936a8a2e65b2368f34" translate="yes" xml:space="preserve">
          <source>Whether the generated HTML is for IPython Notebook.</source>
          <target state="translated">생성 된 HTML이 IPython Notebook 용인지 여부</target>
        </trans-unit>
        <trans-unit id="7ecac6a9347cc2f745741986971bf2c6b5dec571" translate="yes" xml:space="preserve">
          <source>Whether the index type is compatible with the provided type.</source>
          <target state="translated">색인 유형이 제공된 유형과 호환되는지 여부</target>
        </trans-unit>
        <trans-unit id="a87bae20ecf50580f800f3c2eb7f007c57232176" translate="yes" xml:space="preserve">
          <source>Whether the indices should result in an ascending or descending sort.</source>
          <target state="translated">지수가 오름차순인지 내림차순인지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2cac93871cf98f3351eb71d46d76b4f24eef2a5f" translate="yes" xml:space="preserve">
          <source>Whether the interval is closed on the left-side, right-side, both or neither</source>
          <target state="translated">간격이 왼쪽, 오른쪽 또는 양쪽에서 닫혔는지 여부</target>
        </trans-unit>
        <trans-unit id="5512ae9872c22d606571477c180759a0cd24c0a3" translate="yes" xml:space="preserve">
          <source>Whether the interval is closed on the left-side, right-side, both or neither. See the Notes for more detailed explanation.</source>
          <target state="translated">간격이 왼쪽, 오른쪽 또는 둘 다에 닫혀 있는지 여부입니다. 자세한 설명은 참고를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9132ca891de79caa48e65f5999e79f9f15525504" translate="yes" xml:space="preserve">
          <source>Whether the intervals are closed on the left-side, right-side, both or neither</source>
          <target state="translated">간격이 왼쪽, 오른쪽 또는 양쪽에서 닫혔는지 여부</target>
        </trans-unit>
        <trans-unit id="0bb928bdf06342a9ba750f6e31b9169f1b5c051b" translate="yes" xml:space="preserve">
          <source>Whether the intervals are closed on the left-side, right-side, both or neither.</source>
          <target state="translated">간격이 왼쪽, 오른쪽 또는 둘 다에 닫혀 있는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="8ff13d02e8369a7390718dd434a1f82b6dd375f9" translate="yes" xml:space="preserve">
          <source>Whether the query should modify the data in place or return a modified copy.</source>
          <target state="translated">쿼리에서 데이터를 수정해야하는지 또는 수정 된 복사본을 반환해야하는지 여부</target>
        </trans-unit>
        <trans-unit id="9acff264a1aa51d46c1fdbb3d092b77b1d1a7002" translate="yes" xml:space="preserve">
          <source>Whether the type is an integer type.</source>
          <target state="translated">유형이 정수 유형인지 여부</target>
        </trans-unit>
        <trans-unit id="f61a168f35420da34626d22f17b841f30c8d82e0" translate="yes" xml:space="preserve">
          <source>Whether to append columns to existing index.</source>
          <target state="translated">기존 인덱스에 열을 추가할지 여부</target>
        </trans-unit>
        <trans-unit id="f6769d95c60e48e4bcc65ec513d5e37e4380717b" translate="yes" xml:space="preserve">
          <source>Whether to check that the &lt;code&gt;names&lt;/code&gt; attribute for both the &lt;code&gt;index&lt;/code&gt; and &lt;code&gt;column&lt;/code&gt; attributes of the DataFrame is identical, i.e.</source>
          <target state="translated">여부를 확인하기 위해 &lt;code&gt;names&lt;/code&gt; 양쪽에 대한 속성 &lt;code&gt;index&lt;/code&gt; 및 &lt;code&gt;column&lt;/code&gt; DataFrame의 속성 것은 동일하다, 즉</target>
        </trans-unit>
        <trans-unit id="6cf067a90d1bc28ee4c26ff4d5abf93a285170f9" translate="yes" xml:space="preserve">
          <source>Whether to check the DataFrame class is identical.</source>
          <target state="translated">DataFrame 클래스를 확인할지 여부는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="05303ae7b7bb50f921d15a561433db59c6d1bf3f" translate="yes" xml:space="preserve">
          <source>Whether to check the DataFrame dtype is identical.</source>
          <target state="translated">DataFrame dtype을 확인할지 여부는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="27c02e72b950f7d226b044103d4d231bd93a33dc" translate="yes" xml:space="preserve">
          <source>Whether to check the Index class, dtype and inferred_type are identical.</source>
          <target state="translated">인덱스 클래스를 확인할지 여부는 dtype과 inferred_type이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="951c14276d9425a34b3c81114cedd3ef1c8fbfa9" translate="yes" xml:space="preserve">
          <source>Whether to check the Index class, dtype and inferred_type are identical. If &amp;lsquo;equiv&amp;rsquo;, then RangeIndex can be substituted for Int64Index as well.</source>
          <target state="translated">인덱스 클래스를 확인할지 여부는 dtype과 inferred_type이 동일합니다. 'equiv'이면 RangeIndex를 Int64Index로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b694de03dadeefc42e768c2013e714c9a0c6f220" translate="yes" xml:space="preserve">
          <source>Whether to check the Series and Index names attribute.</source>
          <target state="translated">계열 및 색인 이름 속성을 확인할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="bd04c6faa103115280a90db9aad999654abf585b" translate="yes" xml:space="preserve">
          <source>Whether to check the Series class is identical.</source>
          <target state="translated">Series 클래스를 확인할지 여부는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="2c65017bce594011e4ce33917945134a538310d0" translate="yes" xml:space="preserve">
          <source>Whether to check the Series dtype is identical.</source>
          <target state="translated">Series dtype을 확인할지 여부는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f9a6db4a35770f56402fb602b1faf306b042086b" translate="yes" xml:space="preserve">
          <source>Whether to check the columns class, dtype and inferred_type are identical. Is passed as the &lt;code&gt;exact&lt;/code&gt; argument of &lt;a href=&quot;pandas.testing.assert_index_equal#pandas.testing.assert_index_equal&quot;&gt;&lt;code&gt;assert_index_equal()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">열 클래스를 확인할지 여부는 dtype과 inferred_type이 동일합니다. &lt;a href=&quot;pandas.testing.assert_index_equal#pandas.testing.assert_index_equal&quot;&gt; &lt;code&gt;assert_index_equal()&lt;/code&gt; &lt;/a&gt; 의 &lt;code&gt;exact&lt;/code&gt; 인수 로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="12a946e17a2ab180e5591e60c352796eed2bf4ef" translate="yes" xml:space="preserve">
          <source>Whether to check the names attribute.</source>
          <target state="translated">이름 속성을 확인할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="a125c78103daa434686dedaef5a5d5205e9da7a6" translate="yes" xml:space="preserve">
          <source>Whether to compare by the index (0 or &amp;lsquo;index&amp;rsquo;) or columns (1 or &amp;lsquo;columns&amp;rsquo;).</source>
          <target state="translated">인덱스 (0 또는 '인덱스') 또는 열 (1 또는 '열')로 비교할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="cc9bd59cb75ad10e0f499f270512e00841264439" translate="yes" xml:space="preserve">
          <source>Whether to compare by the index (0 or &amp;lsquo;index&amp;rsquo;) or columns (1 or &amp;lsquo;columns&amp;rsquo;). For Series input, axis to match Series index on.</source>
          <target state="translated">인덱스 (0 또는 '인덱스') 또는 열 (1 또는 '열')로 비교할지 여부입니다. 시리즈 입력의 경우 시리즈 인덱스와 일치하는 축입니다.</target>
        </trans-unit>
        <trans-unit id="480b99dfbb949b6f6125888e54aa057965d8ace4" translate="yes" xml:space="preserve">
          <source>Whether to compare internal Categorical exactly.</source>
          <target state="translated">내부 범주를 정확하게 비교할지 여부</target>
        </trans-unit>
        <trans-unit id="20709e04c5f473b9f4439c69137d6a5a6df1ed35" translate="yes" xml:space="preserve">
          <source>Whether to compare number exactly.</source>
          <target state="translated">숫자를 정확하게 비교할지 여부.</target>
        </trans-unit>
        <trans-unit id="32e33c0d0ff7eafc269438bf1d39439f7a2508c7" translate="yes" xml:space="preserve">
          <source>Whether to convert the index to datetime.datetime if it is a DatetimeIndex.</source>
          <target state="translated">DatetimeIndex 인 경우 인덱스를 datetime.datetime으로 변환할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="e7118a64439700ad6ec9de5344c486bd16b7f4ef" translate="yes" xml:space="preserve">
          <source>Whether to copy &lt;code&gt;values&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;values&lt;/code&gt; 을 복사할지 여부 .</target>
        </trans-unit>
        <trans-unit id="614ea6914bf833ca099af1f6261d14722a8fa7ea" translate="yes" xml:space="preserve">
          <source>Whether to copy the &lt;code&gt;values&lt;/code&gt; and &lt;code&gt;mask&lt;/code&gt;.</source>
          <target state="translated">여부는 복사 &lt;code&gt;values&lt;/code&gt; 과 &lt;code&gt;mask&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bcddbb1a8af47e6a749d83020b6aa1006a50048" translate="yes" xml:space="preserve">
          <source>Whether to copy the data, even if not necessary. Depending on the type of &lt;code&gt;data&lt;/code&gt;, creating the new array may require copying data, even if &lt;code&gt;copy=False&lt;/code&gt;.</source>
          <target state="translated">필요하지 않더라도 데이터를 복사할지 여부 &lt;code&gt;data&lt;/code&gt; 유형에 따라 새 배열을 만들려면 &lt;code&gt;copy=False&lt;/code&gt; 인 경우에도 데이터를 복사해야 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fb9a6945c9da5892ce7c61e5e95925a3023a5690" translate="yes" xml:space="preserve">
          <source>Whether to copy the data, even if not necessary. If False, a copy is made only if the old dtype does not match the new dtype.</source>
          <target state="translated">필요하지 않더라도 데이터를 복사할지 여부 False이면 이전 dtype이 새 dtype과 일치하지 않는 경우에만 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="8c89b0a0f2ca5318211b06dec99f00fd486155fb" translate="yes" xml:space="preserve">
          <source>Whether to copy the ordinals before storing.</source>
          <target state="translated">저장하기 전에 서수를 복사할지 여부.</target>
        </trans-unit>
        <trans-unit id="aa50ec90c48448b0d3d09b94bea451df9a5f8b7a" translate="yes" xml:space="preserve">
          <source>Whether to copy the underlying array of data.</source>
          <target state="translated">기본 데이터 배열을 복사할지 여부</target>
        </trans-unit>
        <trans-unit id="6760d93be483b04fef3f0b473318faf3f56f1920" translate="yes" xml:space="preserve">
          <source>Whether to copy the underlying array of values.</source>
          <target state="translated">기본 값 배열을 복사할지 여부</target>
        </trans-unit>
        <trans-unit id="3677ef46abbb6b5d638c4a4b47315208e079ce86" translate="yes" xml:space="preserve">
          <source>Whether to copy underlying data.</source>
          <target state="translated">기본 데이터를 복사할지 여부</target>
        </trans-unit>
        <trans-unit id="5a038186442240fa2a86e573c4a13d18e5636a5e" translate="yes" xml:space="preserve">
          <source>Whether to drop duplicates in place or to return a copy</source>
          <target state="translated">복제본을 제자리에 놓을 지 또는 사본을 반환할지</target>
        </trans-unit>
        <trans-unit id="31cd45da2fc7226a28db113813d2938fe6318be0" translate="yes" xml:space="preserve">
          <source>Whether to drop labels from the index (0 or &amp;lsquo;index&amp;rsquo;) or columns (1 or &amp;lsquo;columns&amp;rsquo;).</source>
          <target state="translated">인덱스 (0 또는 '인덱스') 또는 열 (1 또는 '열')에서 레이블을 삭제할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="f6dedee7ed871e07a59400dd539a064c75a0c4a9" translate="yes" xml:space="preserve">
          <source>Whether to drop rows in the resulting Frame/Series with missing values. Stacking a column level onto the index axis can create combinations of index and column values that are missing from the original dataframe. See Examples section.</source>
          <target state="translated">결 측값이있는 결과 프레임 / 시리즈에서 행을 삭제할지 여부. 열 수준을 인덱스 축에 쌓으면 원래 데이터 프레임에서 누락 된 인덱스와 열 값의 조합이 만들어 질 수 있습니다. 예제 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="79d2d140969e06e02bd9a0caca1cf50cde758978" translate="yes" xml:space="preserve">
          <source>Whether to ensure that the returned value is a not a view on another array. Note that &lt;code&gt;copy=False&lt;/code&gt; does not &lt;em&gt;ensure&lt;/em&gt; that &lt;code&gt;to_numpy()&lt;/code&gt; is no-copy. Rather, &lt;code&gt;copy=True&lt;/code&gt; ensure that a copy is made, even if not strictly necessary.</source>
          <target state="translated">반환 값이 다른 배열에 대한 뷰가 아닌지 확인합니다. 주 &lt;code&gt;copy=False&lt;/code&gt; 없는 &lt;em&gt;보장&lt;/em&gt; 이 &lt;code&gt;to_numpy()&lt;/code&gt; 더 복사하지 않습니다. 오히려 &lt;code&gt;copy=True&lt;/code&gt; 는 꼭 필요한 것은 아니지만 복사가 이루어 지도록합니다.</target>
        </trans-unit>
        <trans-unit id="fbb32f7260db29ce2cac48eb28428250b5f132ef" translate="yes" xml:space="preserve">
          <source>Whether to explicitly copy the incoming &lt;code&gt;data&lt;/code&gt; array.</source>
          <target state="translated">들어오는 &lt;code&gt;data&lt;/code&gt; 배열 을 명시 적으로 복사할지 여부</target>
        </trans-unit>
        <trans-unit id="079d9c0583ffcad2bcae56f266aa6c47d83acdf9" translate="yes" xml:space="preserve">
          <source>Whether to first categorize object arrays before hashing. This is more efficient when the array contains duplicate values.</source>
          <target state="translated">해시하기 전에 먼저 객체 배열을 분류할지 여부입니다. 배열에 중복 값이 ​​포함되어 있으면 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="24341d975c84bd2cab533cb2cfadc7db8145ce70" translate="yes" xml:space="preserve">
          <source>Whether to get k-1 dummies out of k categorical levels by removing the first level.</source>
          <target state="translated">첫 번째 레벨을 제거하여 k 개의 범주 레벨에서 k-1 인형을 가져올 지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="6d7de50e4e90d9f6c88aa5f73ef9892f2af23ced" translate="yes" xml:space="preserve">
          <source>Whether to ignore any NaT elements</source>
          <target state="translated">NaT 요소를 무시할지 여부</target>
        </trans-unit>
        <trans-unit id="dfeef7b5704c336635f2f63faeefd4a0a954e47c" translate="yes" xml:space="preserve">
          <source>Whether to include &lt;code&gt;data.index&lt;/code&gt; in the schema.</source>
          <target state="translated">스키마에 &lt;code&gt;data.index&lt;/code&gt; 를 포함할지 여부</target>
        </trans-unit>
        <trans-unit id="69f2dfb80e7c583b92e52aa432703a31f552336a" translate="yes" xml:space="preserve">
          <source>Whether to include a field &lt;code&gt;pandas_version&lt;/code&gt; with the version of pandas that generated the schema.</source>
          <target state="translated">스키마를 생성 한 pandas 버전에 &lt;code&gt;pandas_version&lt;/code&gt; 필드를 포함할지 여부 입니다.</target>
        </trans-unit>
        <trans-unit id="61e7cad09b74d9523bae74a46fed56525838019f" translate="yes" xml:space="preserve">
          <source>Whether to include the index values in the JSON string. Not including the index (&lt;code&gt;index=False&lt;/code&gt;) is only supported when orient is &amp;lsquo;split&amp;rsquo; or &amp;lsquo;table&amp;rsquo;.</source>
          <target state="translated">JSON 문자열에 색인 값을 포함할지 여부 orient가 'split'또는 'table'인 경우에만 색인 ( &lt;code&gt;index=False&lt;/code&gt; )을 포함하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="829ccda7ff3ddf504640fb7bb1de63f5f742ff2e" translate="yes" xml:space="preserve">
          <source>Whether to interpret &lt;code&gt;to_replace&lt;/code&gt; and/or &lt;code&gt;value&lt;/code&gt; as regular expressions. If this is &lt;code&gt;True&lt;/code&gt; then &lt;code&gt;to_replace&lt;/code&gt;&lt;em&gt;must&lt;/em&gt; be a string. Alternatively, this could be a regular expression or a list, dict, or array of regular expressions in which case &lt;code&gt;to_replace&lt;/code&gt; must be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;to_replace&lt;/code&gt; 및 / 또는 &lt;code&gt;value&lt;/code&gt; 을 정규식 으로 해석할지 여부 이것이 &lt;code&gt;True&lt;/code&gt; 이면 &lt;code&gt;to_replace&lt;/code&gt; &lt;em&gt;는&lt;/em&gt; 문자열 &lt;em&gt;이어야&lt;/em&gt; 합니다. 또는 정규 표현식이거나 정규 표현식의 목록, dict 또는 배열 일 수 있으며,이 경우 &lt;code&gt;to_replace&lt;/code&gt; 는 &lt;code&gt;None&lt;/code&gt; 이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="059b670232ce9b96a4755e583fd1201d3892dfc6" translate="yes" xml:space="preserve">
          <source>Whether to parallelize reading using multiple threads.</source>
          <target state="translated">여러 스레드를 사용하여 읽기를 병렬화할지 여부</target>
        </trans-unit>
        <trans-unit id="9b1fc76deaa2fbdff899e0942b3064c1aaaff6ea" translate="yes" xml:space="preserve">
          <source>Whether to perform the operation in place on the data.</source>
          <target state="translated">데이터에서 작업을 수행할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="e70de5a36e83d3eb8fa9cabc674a98ae76824d04" translate="yes" xml:space="preserve">
          <source>Whether to print column labels, default True.</source>
          <target state="translated">열 레이블을 인쇄할지 여부, 기본값은 True입니다.</target>
        </trans-unit>
        <trans-unit id="d4043c34d833aebb482be8b86bfcf54b13f6b518" translate="yes" xml:space="preserve">
          <source>Whether to print index (row) labels.</source>
          <target state="translated">색인 (행) 레이블을 인쇄할지 여부.</target>
        </trans-unit>
        <trans-unit id="ac3786a830e519e431f4d22b3deccbde853cb7e5" translate="yes" xml:space="preserve">
          <source>Whether to print the full summary. By default, the setting in &lt;code&gt;pandas.options.display.max_info_columns&lt;/code&gt; is followed.</source>
          <target state="translated">전체 요약을 인쇄할지 여부 기본적으로 &lt;code&gt;pandas.options.display.max_info_columns&lt;/code&gt; 의 설정 이 따릅니다.</target>
        </trans-unit>
        <trans-unit id="822960fd378361c92f866987bab14c6731788aad" translate="yes" xml:space="preserve">
          <source>Whether to reset output index to midnight</source>
          <target state="translated">출력 색인을 자정으로 재설정할지 여부</target>
        </trans-unit>
        <trans-unit id="463d414e3c929a36dadaf0dff7a3da1b86f42a26" translate="yes" xml:space="preserve">
          <source>Whether to return a copy of the original object or not.</source>
          <target state="translated">원본 객체의 사본을 반환할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="0d9ec3e7b77438b4723261e6a03fc44877ee790e" translate="yes" xml:space="preserve">
          <source>Whether to return a new %(klass)s instance.</source>
          <target state="translated">새 % (klass) 인스턴스를 반환할지 여부</target>
        </trans-unit>
        <trans-unit id="8d395e3bbd17854fbadd8ac7b179489b9e25ff57" translate="yes" xml:space="preserve">
          <source>Whether to return a new DataFrame. If True then value of copy is ignored.</source>
          <target state="translated">새 DataFrame을 반환할지 여부 True이면 복사 값이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="f70307c4c16aeae2c304f636a8a48db0df778b4d" translate="yes" xml:space="preserve">
          <source>Whether to return a new Series. If True then value of copy is ignored.</source>
          <target state="translated">새 시리즈를 반환할지 여부 True이면 복사 값이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c40f05d086533bc3f61b990c30d1eee76d14d5f1" translate="yes" xml:space="preserve">
          <source>Whether to return the (bins, labels) or not. Can be useful if bins is given as a scalar.</source>
          <target state="translated">(바인딩, 라벨)을 반환할지 여부. 빈이 스칼라로 제공되는 경우 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9a2325de6aaa3cd0b4ed39a825eff6977fff94d" translate="yes" xml:space="preserve">
          <source>Whether to return the bins or not. Useful when bins is provided as a scalar.</source>
          <target state="translated">출력 함 반환 여부. 구간이 스칼라로 제공 될 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5f6ec8c7097b0e808006d61b5467a63c05b98e29" translate="yes" xml:space="preserve">
          <source>Whether to round the result of a DateOffset addition down to the previous midnight.</source>
          <target state="translated">DateOffset 추가 결과를 이전 자정으로 내림할지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="f676621a7d6e94a1edcabb96ea81c3545d433e4d" translate="yes" xml:space="preserve">
          <source>Whether to search for prior, subsequent, or closest matches.</source>
          <target state="translated">이전, 이후 또는 가장 일치하는 항목을 검색할지 여부</target>
        </trans-unit>
        <trans-unit id="9a7f3ce1d34190884bad83912e5d23932d9f3944" translate="yes" xml:space="preserve">
          <source>Whether to show axis grid lines</source>
          <target state="translated">축 그리드 선 표시 여부</target>
        </trans-unit>
        <trans-unit id="0e570581777bb9a490c51ad5b32749939fac5299" translate="yes" xml:space="preserve">
          <source>Whether to show axis grid lines.</source>
          <target state="translated">축 그리드 선을 표시할지 여부</target>
        </trans-unit>
        <trans-unit id="cb1aecfea707c5a6a0e267acf6cea372942182ba" translate="yes" xml:space="preserve">
          <source>Whether to show the non-null counts. By default, this is shown only if the frame is smaller than &lt;code&gt;pandas.options.display.max_info_rows&lt;/code&gt; and &lt;code&gt;pandas.options.display.max_info_columns&lt;/code&gt;. A value of True always shows the counts, and False never shows the counts.</source>
          <target state="translated">널이 아닌 수를 표시할지 여부. 기본적으로 프레임이 &lt;code&gt;pandas.options.display.max_info_rows&lt;/code&gt; 및 &lt;code&gt;pandas.options.display.max_info_columns&lt;/code&gt; 보다 작은 경우에만 표시됩니다 . True 값은 항상 카운트를 표시하고 False는 카운트를 표시하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9423858ca0259300004040194ab4aaa0323abeb7" translate="yes" xml:space="preserve">
          <source>Whether to sort the resulting Index.</source>
          <target state="translated">결과 색인을 정렬할지 여부</target>
        </trans-unit>
        <trans-unit id="b32f8913fc7fd86d449faf14482864d16c081852" translate="yes" xml:space="preserve">
          <source>Whether to sort the resulting index.</source>
          <target state="translated">결과 색인을 정렬할지 여부</target>
        </trans-unit>
        <trans-unit id="a821e3ed2db995ff5f5e85efc8b38f97ac4e8779" translate="yes" xml:space="preserve">
          <source>Whether to sort the resulting index. By default, the values are attempted to be sorted, but any TypeError from incomparable elements is caught by pandas.</source>
          <target state="translated">결과 색인을 정렬할지 여부 기본적으로 값을 정렬하려고 시도하지만 비교할 수없는 요소의 TypeError는 팬더에 의해 잡 힙니다.</target>
        </trans-unit>
        <trans-unit id="dde550efd70425ac91abbaca6d2f05764c9841e7" translate="yes" xml:space="preserve">
          <source>Whether to use true division, like in Python &amp;gt;= 3</source>
          <target state="translated">Python&amp;gt; = 3과 같이 진정한 나눗셈을 사용할지 여부</target>
        </trans-unit>
        <trans-unit id="409e30ae70ff87f67bcc9017ec1d6e35df75f10c" translate="yes" xml:space="preserve">
          <source>Whether x-axes will be shared among subplots</source>
          <target state="translated">하위 플롯간에 x 축을 공유할지 여부</target>
        </trans-unit>
        <trans-unit id="0b92a72844c2f58921d71d168ff98abebab9ad7d" translate="yes" xml:space="preserve">
          <source>Whether y-axes will be shared among subplots</source>
          <target state="translated">서브 플로트간에 y 축을 공유할지 여부</target>
        </trans-unit>
        <trans-unit id="351a93741537e3b00c326e85d6bc8b864d324e73" translate="yes" xml:space="preserve">
          <source>Which axis to use for up- or down-sampling. For &lt;code&gt;Series&lt;/code&gt; this will default to 0, i.e. along the rows. Must be &lt;code&gt;DatetimeIndex&lt;/code&gt;, &lt;code&gt;TimedeltaIndex&lt;/code&gt; or &lt;code&gt;PeriodIndex&lt;/code&gt;.</source>
          <target state="translated">업 샘플링 또는 다운 샘플링에 사용할 축 들어 &lt;code&gt;Series&lt;/code&gt; 이것은 즉, 행에 따라 0으로 기본 설정됩니다. &lt;code&gt;DatetimeIndex&lt;/code&gt; , &lt;code&gt;TimedeltaIndex&lt;/code&gt; 또는 &lt;code&gt;PeriodIndex&lt;/code&gt; 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="e14dfe26bdfe6299d3617c19bf5fc4c9ac5b873c" translate="yes" xml:space="preserve">
          <source>Which bin edge label to label bucket with. The default is &amp;lsquo;left&amp;rsquo; for all frequency offsets except for &amp;lsquo;M&amp;rsquo;, &amp;lsquo;A&amp;rsquo;, &amp;lsquo;Q&amp;rsquo;, &amp;lsquo;BM&amp;rsquo;, &amp;lsquo;BA&amp;rsquo;, &amp;lsquo;BQ&amp;rsquo;, and &amp;lsquo;W&amp;rsquo; which all have a default of &amp;lsquo;right&amp;rsquo;.</source>
          <target state="translated">버킷에 레이블을 지정할 빈 가장자리 레이블입니다. 기본값은 모두 '오른쪽'인 'M', 'A', 'Q', 'BM', 'BA', 'BQ'및 'W'를 제외한 모든 주파수 오프셋에 대한 기본값은 '왼쪽'입니다.</target>
        </trans-unit>
        <trans-unit id="9ab9404f8905635ac93c012ec29d2d386dac81b4" translate="yes" xml:space="preserve">
          <source>Which side of bin interval is closed. The default is &amp;lsquo;left&amp;rsquo; for all frequency offsets except for &amp;lsquo;M&amp;rsquo;, &amp;lsquo;A&amp;rsquo;, &amp;lsquo;Q&amp;rsquo;, &amp;lsquo;BM&amp;rsquo;, &amp;lsquo;BA&amp;rsquo;, &amp;lsquo;BQ&amp;rsquo;, and &amp;lsquo;W&amp;rsquo; which all have a default of &amp;lsquo;right&amp;rsquo;.</source>
          <target state="translated">빈 간격의 어느 쪽이 닫혀 있습니까? 기본값은 모두 '오른쪽'인 'M', 'A', 'Q', 'BM', 'BA', 'BQ'및 'W'를 제외한 모든 주파수 오프셋에 대한 기본값은 '왼쪽'입니다.</target>
        </trans-unit>
        <trans-unit id="1a2dc0fcb2d990edb0299a920c76feaa41d98a83" translate="yes" xml:space="preserve">
          <source>Which will create a MultiIndex:</source>
          <target state="translated">MultiIndex를 생성합니다 :</target>
        </trans-unit>
        <trans-unit id="406b790245ac7245ba8f7e04e8b262a4910d4241" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;Index&lt;/code&gt; objects are copied when &lt;code&gt;deep=True&lt;/code&gt;, the underlying numpy array is not copied for performance reasons. Since &lt;code&gt;Index&lt;/code&gt; is immutable, the underlying data can be safely shared and a copy is not needed.</source>
          <target state="translated">&lt;code&gt;deep=True&lt;/code&gt; 일 때 &lt;code&gt;Index&lt;/code&gt; 객체는 복사 되지만 성능상의 이유로 기본 numpy 배열은 복사되지 않습니다. 이후 &lt;code&gt;Index&lt;/code&gt; 불변이며, 기본 데이터를 안전하게 공유 할 수 있으며, 사본이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6650e6308a36a9b15d3ed97470102fe3537e1a6d" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;apply&lt;/code&gt; is a very flexible method, its downside is that using it can be quite a bit slower than using more specific methods like &lt;code&gt;agg&lt;/code&gt; or &lt;code&gt;transform&lt;/code&gt;. Pandas offers a wide range of method that will be much faster than using &lt;code&gt;apply&lt;/code&gt; for their specific purposes, so try to use them before reaching for &lt;code&gt;apply&lt;/code&gt;.</source>
          <target state="translated">동안 &lt;code&gt;apply&lt;/code&gt; 매우 유연한 방법, 그 단점을 사용하는 방법 등을 구체적으로 사용하는 것보다 상당히 느릴 수 있다는 것이다 &lt;code&gt;agg&lt;/code&gt; 또는 &lt;code&gt;transform&lt;/code&gt; . Pandas는 특정 목적으로 &lt;code&gt;apply&lt;/code&gt; 를 사용하는 것보다 훨씬 빠른 방법을 제공 하므로 &lt;code&gt;apply&lt;/code&gt; 에 도달하기 전에 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8951e325451a6dfb7f3a44fd79fe07ed7a1f43c5" translate="yes" xml:space="preserve">
          <source>While not especially efficient (since a new object must be created), you can append a single row to a &lt;code&gt;DataFrame&lt;/code&gt; by passing a &lt;code&gt;Series&lt;/code&gt; or dict to &lt;code&gt;append&lt;/code&gt;, which returns a new &lt;code&gt;DataFrame&lt;/code&gt; as above.</source>
          <target state="translated">특히 효율적이지 않지만 (새 객체를 만들어야하므로) &lt;code&gt;Series&lt;/code&gt; 또는 dict to &lt;code&gt;append&lt;/code&gt; 를 전달하여 단일 행을 &lt;code&gt;DataFrame&lt;/code&gt; 에 추가 하면 위와 같이 새 &lt;code&gt;DataFrame&lt;/code&gt; 이 반환 됩니다.</target>
        </trans-unit>
        <trans-unit id="84a9e79a81ff4f2e7be900e69d400bd8f96ac034" translate="yes" xml:space="preserve">
          <source>While pandas provides a rich set of methods, containers, and data types, your needs may not be fully satisfied. Pandas offers a few options for extending pandas.</source>
          <target state="translated">팬더는 다양한 메소드, 컨테이너 및 데이터 유형을 제공하지만 사용자의 요구가 완전히 충족되지 않을 수 있습니다. 팬더는 팬더 확장을위한 몇 가지 옵션을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f434314ddb865cdc18e6752e27c11123cefa549c" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;slice_shift&lt;/code&gt; is faster than &lt;code&gt;shift&lt;/code&gt;, you may pay for it later during alignment.</source>
          <target state="translated">그동안 &lt;code&gt;slice_shift&lt;/code&gt; 이 빠르게보다 &lt;code&gt;shift&lt;/code&gt; , 나중에 정렬하는 동안 그것을 지불 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e77a6501b0d679dcb0cdc5dd1b078e7f9afc86e5" translate="yes" xml:space="preserve">
          <source>Why more than one data structure?</source>
          <target state="translated">왜 하나 이상의 데이터 구조입니까?</target>
        </trans-unit>
        <trans-unit id="94fd44cb58ca1992a5db505e73d6e603a16d0efb" translate="yes" xml:space="preserve">
          <source>Wide panel to long format.</source>
          <target state="translated">와이드 패널에서 긴 형식으로.</target>
        </trans-unit>
        <trans-unit id="1c94b23591a4f27d60ceb9d65106d89f9f9151b3" translate="yes" xml:space="preserve">
          <source>Wide panel to long format. Less flexible but more user-friendly than melt.</source>
          <target state="translated">와이드 패널에서 긴 형식으로. 융통성보다는 유연성이 떨어지지 만 사용자에게 친숙합니다.</target>
        </trans-unit>
        <trans-unit id="411642ffcf8cc3e213979fd3c846c900cae28397" translate="yes" xml:space="preserve">
          <source>Width to wrap a line in characters.</source>
          <target state="translated">문자를 줄 바꿈하는 너비입니다.</target>
        </trans-unit>
        <trans-unit id="dbe740051d15e77cb5dfa2c8f7ae30bd51564eeb" translate="yes" xml:space="preserve">
          <source>Will be used for display in, e.g. &lt;code&gt;Series.dtype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Series.dtype&lt;/code&gt; 과 같은 디스플레이에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="41dfc0a6c92707948578891c51d98c6443be63cc" translate="yes" xml:space="preserve">
          <source>Window</source>
          <target state="translated">Window</target>
        </trans-unit>
        <trans-unit id="68fe8f958724479a101c0326f7607d389d321758" translate="yes" xml:space="preserve">
          <source>Window Functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d3c8daa3ebadd6963d2332eb9a3e18118a4e41c" translate="yes" xml:space="preserve">
          <source>Windows : none</source>
          <target state="translated">윈도우 : 없음</target>
        </trans-unit>
        <trans-unit id="09e62fb3d3d6dc636d99be2830e422ff68860e91" translate="yes" xml:space="preserve">
          <source>Windows does not support the &lt;code&gt;xargs&lt;/code&gt; command (unless installed for example via the &lt;a href=&quot;http://www.mingw.org/&quot;&gt;MinGW&lt;/a&gt; toolchain), but one can imitate the behaviour as follows:</source>
          <target state="translated">Windows는 &lt;code&gt;xargs&lt;/code&gt; 명령을 지원하지 않지만 (예 : &lt;a href=&quot;http://www.mingw.org/&quot;&gt;MinGW&lt;/a&gt; 툴체인을 통해 설치되지 않은 경우 ) 다음과 같이 동작을 모방 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7591e74c17cf52feb4b291b5415b48fdd9166b77" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;dropna&lt;/code&gt; set to &lt;code&gt;False&lt;/code&gt; we can also see NaN index values.</source>
          <target state="translated">&lt;code&gt;dropna&lt;/code&gt; 를 &lt;code&gt;False&lt;/code&gt; 로 설정 하면 NaN 인덱스 값도 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3e5a58ba1474d074b0c855e98ceb62d98a6b4b6" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;ignore_index&lt;/code&gt; set to True:</source>
          <target state="translated">와 &lt;code&gt;ignore_index&lt;/code&gt; 의 True로 설정 :</target>
        </trans-unit>
        <trans-unit id="e682613fb87e0cfba41cec598462761fc2a5c34c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;inclusive&lt;/code&gt; set to &lt;code&gt;False&lt;/code&gt; boundary values are excluded:</source>
          <target state="translated">함께 &lt;code&gt;inclusive&lt;/code&gt; 으로 설정 &lt;code&gt;False&lt;/code&gt; 경계 값 제외 :</target>
        </trans-unit>
        <trans-unit id="d70ff7b3e9584094652332b3c586545145ccecc9" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;inplace=False&lt;/code&gt;, the new categorical is returned. With &lt;code&gt;inplace=True&lt;/code&gt;, there is no return value.</source>
          <target state="translated">으로 &lt;code&gt;inplace=False&lt;/code&gt; 새로운 범주가 반환됩니다. 로 &lt;code&gt;inplace=True&lt;/code&gt; , 더 리턴 값이 없다.</target>
        </trans-unit>
        <trans-unit id="f465bd5d6fc9f75666c775e3a994c5277d569d71" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;normalize&lt;/code&gt; set to &lt;code&gt;True&lt;/code&gt;, returns the relative frequency by dividing all values by the sum of values.</source>
          <target state="translated">&lt;code&gt;normalize&lt;/code&gt; 를 &lt;code&gt;True&lt;/code&gt; 로 설정 하면 모든 값을 값의 합으로 나누어 상대 주파수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d03449a2d05c1719a27dd299dba590355941f9ff" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;slice&lt;/code&gt; objects.</source>
          <target state="translated">와 &lt;code&gt;slice&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="8a615de2f5e31705b273a5229ce30e65a9df020c" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;sort=True&lt;/code&gt;, the &lt;code&gt;uniques&lt;/code&gt; will be sorted, and &lt;code&gt;labels&lt;/code&gt; will be shuffled so that the relationship is the maintained.</source>
          <target state="translated">로 &lt;code&gt;sort=True&lt;/code&gt; 의 &lt;code&gt;uniques&lt;/code&gt; 분류되며, &lt;code&gt;labels&lt;/code&gt; 의 관계가 유지되도록 단행 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="fb708201c30a58c25523a11436d7a28fa2fec92d" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;verify_integrity&lt;/code&gt; set to True:</source>
          <target state="translated">와 &lt;code&gt;verify_integrity&lt;/code&gt; 의 True로 설정 :</target>
        </trans-unit>
        <trans-unit id="bb99b16518db947d54df9a05abf535cf6b04a6c9" translate="yes" xml:space="preserve">
          <source>With a &amp;ldquo;stacked&amp;rdquo; &lt;code&gt;DataFrame&lt;/code&gt; or &lt;code&gt;Series&lt;/code&gt; (having a &lt;code&gt;MultiIndex&lt;/code&gt; as the &lt;code&gt;index&lt;/code&gt;), the inverse operation of &lt;code&gt;stack&lt;/code&gt; is &lt;code&gt;unstack&lt;/code&gt;, which by default unstacks the &lt;strong&gt;last level&lt;/strong&gt;:</source>
          <target state="translated">&quot;스택 된&quot; &lt;code&gt;DataFrame&lt;/code&gt; 또는 &lt;code&gt;Series&lt;/code&gt; ( &lt;code&gt;MultiIndex&lt;/code&gt; 를 &lt;code&gt;index&lt;/code&gt; )에서 &lt;code&gt;stack&lt;/code&gt; 의 역 연산 은 &lt;code&gt;unstack&lt;/code&gt; 이며 기본적으로 &lt;strong&gt;마지막 레벨을 &lt;/strong&gt;언 스택 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="e5036c3e0f6df29704ffbb7dea300f0ccc4b3715" translate="yes" xml:space="preserve">
          <source>With a &lt;code&gt;slice&lt;/code&gt; object.</source>
          <target state="translated">A를 &lt;code&gt;slice&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="aee03e7a99a4d63fa88e911d144a4352efc42bc5" translate="yes" xml:space="preserve">
          <source>With a boolean array whose length matches the columns.</source>
          <target state="translated">길이가 열과 일치하는 부울 배열</target>
        </trans-unit>
        <trans-unit id="f237df6f9252a913e260ff3badedab7c154b4838" translate="yes" xml:space="preserve">
          <source>With a boolean mask the same length as the index.</source>
          <target state="translated">부울 마스크를 사용하면 인덱스와 길이가 같습니다.</target>
        </trans-unit>
        <trans-unit id="dda007944d63f089727eb70793373617b8767c3b" translate="yes" xml:space="preserve">
          <source>With a callable function that expects the Series or DataFrame.</source>
          <target state="translated">Series 또는 DataFrame을 기대하는 호출 가능한 함수</target>
        </trans-unit>
        <trans-unit id="6e067c62142339d0717ea5379c5209d2b281445c" translate="yes" xml:space="preserve">
          <source>With a callable, useful in method chains. The &lt;code&gt;x&lt;/code&gt; passed to the &lt;code&gt;lambda&lt;/code&gt; is the DataFrame being sliced. This selects the rows whose index label even.</source>
          <target state="translated">메소드 체인에 유용한 호출 가능. &lt;code&gt;lambda&lt;/code&gt; 전달 된 &lt;code&gt;x&lt;/code&gt; 는 슬라이스되는 DataFrame입니다. 인덱스 레이블이 짝수 인 행을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="e2de180789da94c610f8184e9c92bdb21f0dce87" translate="yes" xml:space="preserve">
          <source>With a dict, the number of places for specific columns can be specified with the column names as key and the number of decimal places as value</source>
          <target state="translated">dict를 사용하면 열 이름을 키로, 소수 자릿수를 값으로 사용하여 특정 열의 자리 수를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="268f23e1685fb62dc26c58c66fd7c8a60b53482d" translate="yes" xml:space="preserve">
          <source>With a list of integers.</source>
          <target state="translated">정수 목록이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3527efe8e362c867daba31b190d7b149dc553954" translate="yes" xml:space="preserve">
          <source>With a scalar integer.</source>
          <target state="translated">스칼라 정수</target>
        </trans-unit>
        <trans-unit id="2cee32768824581250b82cf3464754562a44f6c1" translate="yes" xml:space="preserve">
          <source>With heterogenous data, the lowest common type will have to be used.</source>
          <target state="translated">이기종 데이터의 경우 가장 낮은 공통 유형을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="c581d3ffea66627b46a84ceeef011711972661cd" translate="yes" xml:space="preserve">
          <source>With lists of integers.</source>
          <target state="translated">정수 목록이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0c4a6baa2322a3867d7709ca97fff0f772c7fab" translate="yes" xml:space="preserve">
          <source>With more than one value:</source>
          <target state="translated">둘 이상의 값으로</target>
        </trans-unit>
        <trans-unit id="477a3a149f6d19ee116e6e2b6f7cb2d7f2b1eca7" translate="yes" xml:space="preserve">
          <source>With multiple id columns</source>
          <target state="translated">여러 ID 열</target>
        </trans-unit>
        <trans-unit id="f3e2f5f9dab013c6a7ef811944664945bf1be6f2" translate="yes" xml:space="preserve">
          <source>With pandas, column selection is done by passing a list of column names to your DataFrame:</source>
          <target state="translated">팬더를 사용하면 열 이름 목록을 DataFrame에 전달하여 열을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="d1baf1779a1a9f61f8da771fa8410d352b782cbc" translate="yes" xml:space="preserve">
          <source>With scalar integers.</source>
          <target state="translated">스칼라 정수</target>
        </trans-unit>
        <trans-unit id="676563e9aa16b37ee7bb915a3f1c275643187e50" translate="yes" xml:space="preserve">
          <source>With stubnames [&amp;lsquo;A&amp;rsquo;, &amp;lsquo;B&amp;rsquo;], this function expects to find one or more group of columns with format A-suffix1, A-suffix2,&amp;hellip;, B-suffix1, B-suffix2,&amp;hellip; You specify what you want to call this suffix in the resulting long format with &lt;code&gt;j&lt;/code&gt; (for example &lt;code&gt;j=&amp;rsquo;year&amp;rsquo;&lt;/code&gt;)</source>
          <target state="translated">스텁 이름 [ 'A', 'B']을 사용하면이 함수는 형식이 A-suffix1, A-suffix2,&amp;hellip;, B-suffix1, B-suffix2 인 하나 이상의 열 그룹을 찾을 것으로 예상합니다. &lt;code&gt;j&lt;/code&gt; 를 사용 하여 긴 형식으로이 접미사를 호출하십시오 (예 : &lt;code&gt;j=&amp;rsquo;year&amp;rsquo;&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="88be41d156307a291564b940fe613fedb3dddf39" translate="yes" xml:space="preserve">
          <source>With the &amp;lsquo;keep&amp;rsquo; parameter, the selection behaviour of duplicated values can be changed. The value &amp;lsquo;first&amp;rsquo; keeps the first occurrence for each set of duplicated entries. The default value of keep is &amp;lsquo;first&amp;rsquo;.</source>
          <target state="translated">'keep'매개 변수를 사용하면 복제 된 값의 선택 동작을 변경할 수 있습니다. 'first'값은 각 중복 항목 세트에 대해 첫 번째 발생을 유지합니다. keep의 기본값은 'first'입니다.</target>
        </trans-unit>
        <trans-unit id="9ea41341cd10db335ab7af75a8790e97bc90c1d1" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;name&lt;/code&gt; parameter set we set a custom name for the yielded namedtuples:</source>
          <target state="translated">으로 &lt;code&gt;name&lt;/code&gt; 매개 변수를 우리가 굴복 namedtuples에 대한 사용자 지정 이름을 설정 :</target>
        </trans-unit>
        <trans-unit id="f79a85a04e14f729d57a4e08aec072bead273225" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;tz&lt;/code&gt; parameter, we can change the DatetimeIndex to other time zones:</source>
          <target state="translated">으로 &lt;code&gt;tz&lt;/code&gt; 매개 변수, 우리는 다른 시간대에 DatetimeIndex을 변경할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="932fefd596d9b20b6c83c665a9e1d936ffcbfd62" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;tz=None&lt;/code&gt;, we can remove the time zone information while keeping the local time (not converted to UTC):</source>
          <target state="translated">&lt;code&gt;tz=None&lt;/code&gt; 을 사용하면 현지 시간을 유지하면서 시간대 정보를 제거 할 수 있습니다 (UTC로 변환되지 않음).</target>
        </trans-unit>
        <trans-unit id="141c115f799d02a71683c4d9b4567760b0b1e534" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;tz=None&lt;/code&gt;, we can remove the timezone (after converting to UTC if necessary):</source>
          <target state="translated">&lt;code&gt;tz=None&lt;/code&gt; 을 사용하면 시간대를 제거 할 수 있습니다 (필요한 경우 UTC로 변환 한 후).</target>
        </trans-unit>
        <trans-unit id="df7a168ce7f24eda6bf5b05b717dda33bf878ad1" translate="yes" xml:space="preserve">
          <source>Without a little bit of context many of these arguments don&amp;rsquo;t make much sense. Let&amp;rsquo;s revisit the above example. Suppose we wanted to associate specific keys with each of the pieces of the chopped up DataFrame. We can do this using the &lt;code&gt;keys&lt;/code&gt; argument:</source>
          <target state="translated">약간의 맥락이 없다면 이러한 주장 중 많은 부분이 의미가 없습니다. 위의 예를 다시 살펴 보겠습니다. 특정 키를 잘게 잘린 DataFrame의 각 조각과 연결하려고한다고 가정합니다. &lt;code&gt;keys&lt;/code&gt; 인수를 사용하여이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="78afe455af4da05512804607872f0e31af62c9ae" translate="yes" xml:space="preserve">
          <source>Without filling the missing values you get:</source>
          <target state="translated">결 측값을 채우지 않으면 다음과 같은 이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="de664ffc9468de3bcb32cfa2b4af8a8b29b4d78e" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;n&lt;/code&gt; parameter, the outputs of &lt;code&gt;rsplit&lt;/code&gt; and &lt;code&gt;split&lt;/code&gt; are identical.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 매개 변수가 없으면 &lt;code&gt;rsplit&lt;/code&gt; 및 &lt;code&gt;split&lt;/code&gt; 의 출력 이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="75bb90c9bc196df1aec374b3df0b2a84c13f3830" translate="yes" xml:space="preserve">
          <source>Working with categories</source>
          <target state="translated">카테고리 작업</target>
        </trans-unit>
        <trans-unit id="2e481cab17f2a48dbcb2e44baa39ed3a7aac4433" translate="yes" xml:space="preserve">
          <source>Working with missing data</source>
          <target state="translated">누락 된 데이터 작업</target>
        </trans-unit>
        <trans-unit id="7181810c540518b9158e4576133fc1536a22701c" translate="yes" xml:space="preserve">
          <source>Working with options</source>
          <target state="translated">옵션 작업</target>
        </trans-unit>
        <trans-unit id="4d89f171cd4b6a5e3b13a9c049cf45c6543b35fb" translate="yes" xml:space="preserve">
          <source>Working with text data</source>
          <target state="translated">텍스트 데이터 작업</target>
        </trans-unit>
        <trans-unit id="03aadeb23b8e7055c0a48ecf6eb50e8edddab538" translate="yes" xml:space="preserve">
          <source>Working with the code</source>
          <target state="translated">코드 작업</target>
        </trans-unit>
        <trans-unit id="e356dc9e193234ce62e83e2251cfdb8ad56d79bc" translate="yes" xml:space="preserve">
          <source>Works exactly like relativedelta in terms of the keyword args you pass in, use of the keyword n is discouraged&amp;ndash; you would be better off specifying n in the keywords you use, but regardless it is there for you. n is needed for DateOffset subclasses.</source>
          <target state="translated">전달하는 키워드 인수 측면에서 relativedelta와 정확히 동일하게 작동하므로 키워드 n을 사용하지 않는 것이 좋습니다. 사용하는 키워드에 n을 지정하는 것이 좋습니다. DateOffset 서브 클래스에는 n이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e651ec94cff9276272e3a04d5e2ffd34208a5824" translate="yes" xml:space="preserve">
          <source>Works on different Index of types.</source>
          <target state="translated">다른 유형의 인덱스에서 작동합니다.</target>
        </trans-unit>
        <trans-unit id="30bffa03f8735cbc1234a62f7fd066d119a3d464" translate="yes" xml:space="preserve">
          <source>World Bank</source>
          <target state="translated">세계 은행</target>
        </trans-unit>
        <trans-unit id="c8d19d3de16186ed90608b4170c930f7a18b3c62" translate="yes" xml:space="preserve">
          <source>Wrap long strings in the Series/Index to be formatted in paragraphs with length less than a given width.</source>
          <target state="translated">주어진 너비보다 길이가 짧은 단락에서 서식을 지정하도록 시리즈 / 인덱스에 긴 문자열을 줄 바꿈하십시오.</target>
        </trans-unit>
        <trans-unit id="394425c10464dc8577445f01060182d0104c2181" translate="yes" xml:space="preserve">
          <source>Write DataFrame index as a column. Uses &lt;code&gt;index_label&lt;/code&gt; as the column name in the table.</source>
          <target state="translated">DataFrame 인덱스를 열로 작성하십시오. &lt;code&gt;index_label&lt;/code&gt; 을 테이블의 열 이름으로 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="c164f66aede4d77e94cbf139d32c258bfdc1ae00" translate="yes" xml:space="preserve">
          <source>Write DataFrame to a SQL database.</source>
          <target state="translated">SQL 데이터베이스에 DataFrame을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="6f2e27368add3b50a0ecf9ba34b4932f3c45fed9" translate="yes" xml:space="preserve">
          <source>Write DataFrame to a comma-separated values (csv) file.</source>
          <target state="translated">DataFrame을 쉼표로 구분 된 값 (csv) 파일에 씁니다.</target>
        </trans-unit>
        <trans-unit id="92d4292c33ad00372f279e5ab3be8c6bc620bd5d" translate="yes" xml:space="preserve">
          <source>Write DataFrame to an Excel file.</source>
          <target state="translated">DataFrame을 Excel 파일에 씁니다.</target>
        </trans-unit>
        <trans-unit id="d40f6901eb637b818417c804b4b777c928e3b517" translate="yes" xml:space="preserve">
          <source>Write DataFrame to an HDF5 file.</source>
          <target state="translated">DataFrame을 HDF5 파일에 씁니다.</target>
        </trans-unit>
        <trans-unit id="683955a691078d823568f49c7634935a3f07f3f4" translate="yes" xml:space="preserve">
          <source>Write MultiIndex and Hierarchical Rows as merged cells.</source>
          <target state="translated">다중 인덱스 및 계층 행을 병합 된 셀로 씁니다.</target>
        </trans-unit>
        <trans-unit id="3b27b95178c702f107b1f90d2a6695cb61861b96" translate="yes" xml:space="preserve">
          <source>Write Styler to an Excel sheet.</source>
          <target state="translated">스타일러를 Excel 시트에 씁니다.</target>
        </trans-unit>
        <trans-unit id="c1b3cff87dd1d9c51b928c32a4c2070d51a615f8" translate="yes" xml:space="preserve">
          <source>Write a DataFrame to Google BigQuery.</source>
          <target state="translated">Google BigQuery에 DataFrame을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="b83334d4a758569938692544de7dc98076100bbb" translate="yes" xml:space="preserve">
          <source>Write a DataFrame to a Google BigQuery table.</source>
          <target state="translated">Google BigQuery 테이블에 DataFrame을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="264d8b4cb7c15325021244c380397e40b38bc3c8" translate="yes" xml:space="preserve">
          <source>Write a DataFrame to a comma-separated values (csv) file.</source>
          <target state="translated">쉼표로 구분 된 값 (csv) 파일에 DataFrame을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="a523402a24bfeeb314ecf21c86f23560c3abf482" translate="yes" xml:space="preserve">
          <source>Write a DataFrame to the binary parquet format.</source>
          <target state="translated">이진 마루 형식으로 DataFrame을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="eb96fbd75c944650b2892e1eedafd8292c8c2b5d" translate="yes" xml:space="preserve">
          <source>Write a HDF file from a DataFrame.</source>
          <target state="translated">DataFrame에서 HDF 파일을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="adfd99572318beb377f0cb70269307883e59e692" translate="yes" xml:space="preserve">
          <source>Write a csv file.</source>
          <target state="translated">CSV 파일을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="cd97aa18da561ab532fce87a169854e944f45498" translate="yes" xml:space="preserve">
          <source>Write a description of your changes in the &lt;code&gt;Preview Discussion&lt;/code&gt; tab</source>
          <target state="translated">&lt;code&gt;Preview Discussion&lt;/code&gt; 탭 에서 변경 사항에 대한 설명을 작성 하십시오.</target>
        </trans-unit>
        <trans-unit id="99530cd9f65dbec1f783bd1b35af668db65927f0" translate="yes" xml:space="preserve">
          <source>Write a new test that asserts a warning is issued when calling with the deprecated argument</source>
          <target state="translated">더 이상 사용되지 않는 인수로 호출 할 때 경고가 표시되도록하는 새 테스트 작성</target>
        </trans-unit>
        <trans-unit id="6af60f969a23a9b1aebe377291ec8a0bad9311f1" translate="yes" xml:space="preserve">
          <source>Write a text representation of object to the system clipboard. This can be pasted into Excel, for example.</source>
          <target state="translated">객체의 텍스트 표현을 시스템 클립 보드에 씁니다. 예를 들어 Excel에 붙여 넣을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc9ea651d8391f3377170ce9108678eea0fe4a93" translate="yes" xml:space="preserve">
          <source>Write as a PyTables Table structure which may perform worse but allow more flexible operations like searching / selecting subsets of the data</source>
          <target state="translated">PyTables Table 구조로 작성하면 성능이 저하 될 수 있지만 데이터 하위 집합 검색 / 선택과 같은보다 유연한 작업이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="a75b07386bdff928c15327548914dd3f90837ad2" translate="yes" xml:space="preserve">
          <source>Write engine to use, &amp;lsquo;openpyxl&amp;rsquo; or &amp;lsquo;xlsxwriter&amp;rsquo;. You can also set this via the options &lt;code&gt;io.excel.xlsx.writer&lt;/code&gt;, &lt;code&gt;io.excel.xls.writer&lt;/code&gt;, and &lt;code&gt;io.excel.xlsm.writer&lt;/code&gt;.</source>
          <target state="translated">사용할 'openpyxl'또는 'xlsxwriter'엔진을 작성하십시오. &lt;code&gt;io.excel.xlsx.writer&lt;/code&gt; , &lt;code&gt;io.excel.xls.writer&lt;/code&gt; 및 &lt;code&gt;io.excel.xlsm.writer&lt;/code&gt; 옵션을 통해이를 설정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="42c9f77aa546749e5e409b9a021c5df5eaaf4681" translate="yes" xml:space="preserve">
          <source>Write object to a comma-separated values (csv) file.</source>
          <target state="translated">쉼표로 구분 된 값 (csv) 파일에 개체를 씁니다.</target>
        </trans-unit>
        <trans-unit id="adfe60fd5c0ee1f3f300dc2347df46c02c0aa7c5" translate="yes" xml:space="preserve">
          <source>Write object to an Excel sheet.</source>
          <target state="translated">Excel 시트에 개체를 씁니다.</target>
        </trans-unit>
        <trans-unit id="0901b93d2c7065602e706ec71296edd57110fe25" translate="yes" xml:space="preserve">
          <source>Write out feather-format for DataFrames.</source>
          <target state="translated">DataFrames의 깃털 형식을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="9f1a0f0ecee27ddc45993d06d571c030c79d7e48" translate="yes" xml:space="preserve">
          <source>Write out the binary feather-format for DataFrames.</source>
          <target state="translated">DataFrames에 대한 바이너리 페더 형식을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="c429dec21f3d07efe528c5818d5d0fa48b48796e" translate="yes" xml:space="preserve">
          <source>Write out the column names. If a list of string is given it is assumed to be aliases for the column names.</source>
          <target state="translated">열 이름을 작성하십시오. 문자열 목록이 제공되면 열 이름의 별명으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="d2423909a29f087eb651dbb2cad4b8ed73036aa2" translate="yes" xml:space="preserve">
          <source>Write out the column names. If a list of strings is given it is assumed to be aliases for the column names.</source>
          <target state="translated">열 이름을 작성하십시오. 문자열 목록이 제공되면 열 이름의 별명으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="fda48a754b1e3702b9516e31a3de2de6ff9df0b8" translate="yes" xml:space="preserve">
          <source>Write out the column names. If a list of strings is given, it is assumed to be aliases for the column names.</source>
          <target state="translated">열 이름을 작성하십시오. 문자열 목록이 제공되면 열 이름의 별명으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="873525b5438b1e02d7f69a4f6268bc115d2d0a25" translate="yes" xml:space="preserve">
          <source>Write out to a csv file.</source>
          <target state="translated">csv 파일에 씁니다.</target>
        </trans-unit>
        <trans-unit id="aa6bc24af392de08d25642fd5dd308e8723e29b5" translate="yes" xml:space="preserve">
          <source>Write records stored in a DataFrame to a SQL database.</source>
          <target state="translated">DataFrame에 저장된 레코드를 SQL 데이터베이스에 씁니다.</target>
        </trans-unit>
        <trans-unit id="b9fd5810df30326ae7fde3ba95cab45fa3098e3d" translate="yes" xml:space="preserve">
          <source>Write row names (index).</source>
          <target state="translated">행 이름 (인덱스)을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="511426d26f200a023b7d5ad3fc99ff32bb2749b3" translate="yes" xml:space="preserve">
          <source>Write the contained data to an HDF5 file using HDFStore.</source>
          <target state="translated">HDFStore를 사용하여 포함 된 데이터를 HDF5 파일에 씁니다.</target>
        </trans-unit>
        <trans-unit id="1f9d4e129d8d3fc01ca5bc5124c5580fb253c46c" translate="yes" xml:space="preserve">
          <source>Write the index to Stata dataset.</source>
          <target state="translated">Stata 데이터 세트에 색인을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="12f897a5ded22c1bef9f9106497f8bbd242b47cf" translate="yes" xml:space="preserve">
          <source>Write to a sql table.</source>
          <target state="translated">SQL 테이블에 씁니다.</target>
        </trans-unit>
        <trans-unit id="f5bab973a04bdb9274be05e67d70a26b25b02ee1" translate="yes" xml:space="preserve">
          <source>Write to hdf.</source>
          <target state="translated">hdf에 씁니다.</target>
        </trans-unit>
        <trans-unit id="5f435830a7c07f19c4072a88821b38028c3f69e6" translate="yes" xml:space="preserve">
          <source>Writer</source>
          <target state="translated">Writer</target>
        </trans-unit>
        <trans-unit id="4b19fc4ef6b77bca2f9cb30932840328dcfca1a9" translate="yes" xml:space="preserve">
          <source>Writes the DataFrame to a Stata dataset file. &amp;ldquo;dta&amp;rdquo; files contain a Stata dataset.</source>
          <target state="translated">DataFrame을 Stata 데이터 세트 파일에 씁니다. &quot;dta&quot;파일에는 Stata 데이터 세트가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a92ea7d38a931f7a222a6472dce41648e41db131" translate="yes" xml:space="preserve">
          <source>Writing a docstring</source>
          <target state="translated">독 스트링 작성</target>
        </trans-unit>
        <trans-unit id="e914923daddf6518b20e2032c77cdef423d939ac" translate="yes" xml:space="preserve">
          <source>Writing good code is not just about what you write. It is also about &lt;em&gt;how&lt;/em&gt; you write it. During &lt;a href=&quot;#contributing-ci&quot;&gt;Continuous Integration&lt;/a&gt; testing, several tools will be run to check your code for stylistic errors. Generating any warnings will cause the test to fail. Thus, good style is a requirement for submitting code to &lt;em&gt;pandas&lt;/em&gt;.</source>
          <target state="translated">좋은 코드를 작성하는 것은 단지 당신이 쓰는 것에 관한 것이 아닙니다. 또한 &lt;em&gt;어떻게 쓰는지&lt;/em&gt; 에 관한 것입니다. &lt;a href=&quot;#contributing-ci&quot;&gt;Continuous Integration&lt;/a&gt; 테스트 중에 코드에 문체 오류가 있는지 확인하기 위해 여러 도구가 실행됩니다. 경고를 생성하면 테스트가 실패합니다. 따라서 &lt;em&gt;pandas에&lt;/em&gt; 코드를 제출하려면 좋은 스타일이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="ab2816d4bb9622be7220e5163963f6a9c487ee4d" translate="yes" xml:space="preserve">
          <source>Writing tests</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e81cf0fb90ea960486d9d80b22afe143323a01" translate="yes" xml:space="preserve">
          <source>X is a specific day of the week. Y is a certain month of the year</source>
          <target state="translated">X는 특정 요일입니다. Y는 연중 특정 달입니다</target>
        </trans-unit>
        <trans-unit id="a5510f6f11a8f7d32126db4ecd6f44bce6bcf456" translate="yes" xml:space="preserve">
          <source>XLsxWriter</source>
          <target state="translated">XLsxWriter</target>
        </trans-unit>
        <trans-unit id="b5b7f5d30699e5d4e15b4875dbd3728c364030a0" translate="yes" xml:space="preserve">
          <source>Year with century as a decimal number.</source>
          <target state="translated">십진수로 세기를 가진 년.</target>
        </trans-unit>
        <trans-unit id="c64879d90ccc2fc0d06f018314bfc95458d99f67" translate="yes" xml:space="preserve">
          <source>Year without century as a decimal number [00,99].</source>
          <target state="translated">세기가없는 연도 (10 진수) [00,99].</target>
        </trans-unit>
        <trans-unit id="1ac165ee16905744dd627392257b78d2b5789bc6" translate="yes" xml:space="preserve">
          <source>YearBegin</source>
          <target state="translated">YearBegin</target>
        </trans-unit>
        <trans-unit id="fdd77a631d0eb873f7d3b0dac6851d398444ab6c" translate="yes" xml:space="preserve">
          <source>YearBegin.apply()</source>
          <target state="translated">YearBegin.apply()</target>
        </trans-unit>
        <trans-unit id="672e0c9cdc1b071415ff684a724f92e4d420fade" translate="yes" xml:space="preserve">
          <source>YearBegin.apply_index()</source>
          <target state="translated">YearBegin.apply_index()</target>
        </trans-unit>
        <trans-unit id="5d524321f5fb37988d0d83f373cdeb8cd9a45737" translate="yes" xml:space="preserve">
          <source>YearBegin.base</source>
          <target state="translated">YearBegin.base</target>
        </trans-unit>
        <trans-unit id="850021a848b1fc34cc164d40576e5ba9edea00b8" translate="yes" xml:space="preserve">
          <source>YearBegin.copy()</source>
          <target state="translated">YearBegin.copy()</target>
        </trans-unit>
        <trans-unit id="73a6c9537c18476d419ef0fcb77ef08b25c31056" translate="yes" xml:space="preserve">
          <source>YearBegin.freqstr</source>
          <target state="translated">YearBegin.freqstr</target>
        </trans-unit>
        <trans-unit id="cc2599fd1415af77db1d6fe1086b987c11e32bb4" translate="yes" xml:space="preserve">
          <source>YearBegin.isAnchored()</source>
          <target state="translated">YearBegin.isAnchored()</target>
        </trans-unit>
        <trans-unit id="699be22356cb032aa21378a467cade3e8dc2df9b" translate="yes" xml:space="preserve">
          <source>YearBegin.kwds</source>
          <target state="translated">YearBegin.kwds</target>
        </trans-unit>
        <trans-unit id="e68325e106debc2cdea74e6cb896060354399b86" translate="yes" xml:space="preserve">
          <source>YearBegin.name</source>
          <target state="translated">YearBegin.name</target>
        </trans-unit>
        <trans-unit id="cdb7a9f727765eb6d04c675af79ee8ba31e95284" translate="yes" xml:space="preserve">
          <source>YearBegin.nanos</source>
          <target state="translated">YearBegin.nanos</target>
        </trans-unit>
        <trans-unit id="49944295085396d076ab76e727ffd1ebb6ab0503" translate="yes" xml:space="preserve">
          <source>YearBegin.normalize</source>
          <target state="translated">YearBegin.normalize</target>
        </trans-unit>
        <trans-unit id="97a411e08b2df85b21131a643a61b6c013513dd4" translate="yes" xml:space="preserve">
          <source>YearBegin.onOffset()</source>
          <target state="translated">YearBegin.onOffset()</target>
        </trans-unit>
        <trans-unit id="45e0c1689f38462c0f2d560229b934f25c901805" translate="yes" xml:space="preserve">
          <source>YearBegin.rollback()</source>
          <target state="translated">YearBegin.rollback()</target>
        </trans-unit>
        <trans-unit id="70e33f36e92a7135b43807223828e9514d5479ff" translate="yes" xml:space="preserve">
          <source>YearBegin.rollforward()</source>
          <target state="translated">YearBegin.rollforward()</target>
        </trans-unit>
        <trans-unit id="bb88e81513b6e329bf6cf17fee7a48f8bc4a934a" translate="yes" xml:space="preserve">
          <source>YearBegin.rule_code</source>
          <target state="translated">YearBegin.rule_code</target>
        </trans-unit>
        <trans-unit id="af4c7e983311e56413b0407da79b71ce0f3cddd5" translate="yes" xml:space="preserve">
          <source>YearEnd</source>
          <target state="translated">YearEnd</target>
        </trans-unit>
        <trans-unit id="dff72c415986f2a06b2fe20403d7616cd9ed15f9" translate="yes" xml:space="preserve">
          <source>YearEnd.apply()</source>
          <target state="translated">YearEnd.apply()</target>
        </trans-unit>
        <trans-unit id="49751f8e3f83951f0d9ef2a783ed86fbb8156c67" translate="yes" xml:space="preserve">
          <source>YearEnd.apply_index()</source>
          <target state="translated">YearEnd.apply_index()</target>
        </trans-unit>
        <trans-unit id="8cf6200a6413c48b5ad861746fdc009e4ef71c86" translate="yes" xml:space="preserve">
          <source>YearEnd.base</source>
          <target state="translated">YearEnd.base</target>
        </trans-unit>
        <trans-unit id="1336794d93bd406cae3ff76ef17d8bd61b043c67" translate="yes" xml:space="preserve">
          <source>YearEnd.copy()</source>
          <target state="translated">YearEnd.copy()</target>
        </trans-unit>
        <trans-unit id="5d6a62799b417202d2c595d55874af1dfb172245" translate="yes" xml:space="preserve">
          <source>YearEnd.freqstr</source>
          <target state="translated">YearEnd.freqstr</target>
        </trans-unit>
        <trans-unit id="327371506ca5103e7a0bdb7c0e1199013191736e" translate="yes" xml:space="preserve">
          <source>YearEnd.isAnchored()</source>
          <target state="translated">YearEnd.isAnchored()</target>
        </trans-unit>
        <trans-unit id="4049ad87a77bd7e5092b1c50e33a427059a1fe19" translate="yes" xml:space="preserve">
          <source>YearEnd.kwds</source>
          <target state="translated">YearEnd.kwds</target>
        </trans-unit>
        <trans-unit id="60111ed5e5fd4a1fb24155acfb40a4645ff3d734" translate="yes" xml:space="preserve">
          <source>YearEnd.name</source>
          <target state="translated">YearEnd.name</target>
        </trans-unit>
        <trans-unit id="eeb6cb64a863c1bfdab88227efcf78795aa58515" translate="yes" xml:space="preserve">
          <source>YearEnd.nanos</source>
          <target state="translated">YearEnd.nanos</target>
        </trans-unit>
        <trans-unit id="95cd3f53f2a8e489b3312b84824dca77474215e4" translate="yes" xml:space="preserve">
          <source>YearEnd.normalize</source>
          <target state="translated">YearEnd.normalize</target>
        </trans-unit>
        <trans-unit id="8c66764417acee91205d28eb1237bb244b3087ce" translate="yes" xml:space="preserve">
          <source>YearEnd.onOffset()</source>
          <target state="translated">YearEnd.onOffset()</target>
        </trans-unit>
        <trans-unit id="a04cce1ee1073cd84e81d04379fc214a88e96d9e" translate="yes" xml:space="preserve">
          <source>YearEnd.rollback()</source>
          <target state="translated">YearEnd.rollback()</target>
        </trans-unit>
        <trans-unit id="2083f051a8a5c69c23d8ae084b08643da4ccb340" translate="yes" xml:space="preserve">
          <source>YearEnd.rollforward()</source>
          <target state="translated">YearEnd.rollforward()</target>
        </trans-unit>
        <trans-unit id="916c51f4aded10974ec6a161d5e1b8a1a72c0633" translate="yes" xml:space="preserve">
          <source>YearEnd.rule_code</source>
          <target state="translated">YearEnd.rule_code</target>
        </trans-unit>
        <trans-unit id="385293fedd37db0c53eb1d1277411a52288a8243" translate="yes" xml:space="preserve">
          <source>YearOffset</source>
          <target state="translated">YearOffset</target>
        </trans-unit>
        <trans-unit id="c5aa0b8ef3a1a08f40903ebeb4d9f2c7099effb9" translate="yes" xml:space="preserve">
          <source>YearOffset.apply()</source>
          <target state="translated">YearOffset.apply()</target>
        </trans-unit>
        <trans-unit id="656961d5067d551adabb1a1c361921bb16776ad6" translate="yes" xml:space="preserve">
          <source>YearOffset.apply_index()</source>
          <target state="translated">YearOffset.apply_index()</target>
        </trans-unit>
        <trans-unit id="4a709facb8dfe39e2b7e85e918df9dc70a533400" translate="yes" xml:space="preserve">
          <source>YearOffset.base</source>
          <target state="translated">YearOffset.base</target>
        </trans-unit>
        <trans-unit id="392cff2f7aee0fcaa3458c72bc1427d581d6d46f" translate="yes" xml:space="preserve">
          <source>YearOffset.copy()</source>
          <target state="translated">YearOffset.copy()</target>
        </trans-unit>
        <trans-unit id="28f766af4926cc0a241e47df1b6f2ba0ece24488" translate="yes" xml:space="preserve">
          <source>YearOffset.freqstr</source>
          <target state="translated">YearOffset.freqstr</target>
        </trans-unit>
        <trans-unit id="d05aa244f37ad68a9a4dd1c51fa6abca6e6f2dc2" translate="yes" xml:space="preserve">
          <source>YearOffset.isAnchored()</source>
          <target state="translated">YearOffset.isAnchored()</target>
        </trans-unit>
        <trans-unit id="ba53ad5f93c4ed5da296eabd872e3b753b8335ca" translate="yes" xml:space="preserve">
          <source>YearOffset.kwds</source>
          <target state="translated">YearOffset.kwds</target>
        </trans-unit>
        <trans-unit id="85ce4ba997c816bdf238daea3962400267db30eb" translate="yes" xml:space="preserve">
          <source>YearOffset.name</source>
          <target state="translated">YearOffset.name</target>
        </trans-unit>
        <trans-unit id="d54e0c2c005751ca858beecaa4c2b283fdfa3644" translate="yes" xml:space="preserve">
          <source>YearOffset.nanos</source>
          <target state="translated">YearOffset.nanos</target>
        </trans-unit>
        <trans-unit id="1ad7af4431f6af4982a6562ce2f2da70d863e8b6" translate="yes" xml:space="preserve">
          <source>YearOffset.normalize</source>
          <target state="translated">YearOffset.normalize</target>
        </trans-unit>
        <trans-unit id="9cdc5dbf542a1ebc16f36eb9638445512dc4b34b" translate="yes" xml:space="preserve">
          <source>YearOffset.onOffset()</source>
          <target state="translated">YearOffset.onOffset()</target>
        </trans-unit>
        <trans-unit id="4ee811f1d7142855999fc4f39678a3ac46bef58b" translate="yes" xml:space="preserve">
          <source>YearOffset.rollback()</source>
          <target state="translated">YearOffset.rollback()</target>
        </trans-unit>
        <trans-unit id="92fd38da1fceabd1a6d9254b034ca68ea1a02b63" translate="yes" xml:space="preserve">
          <source>YearOffset.rollforward()</source>
          <target state="translated">YearOffset.rollforward()</target>
        </trans-unit>
        <trans-unit id="249ea2a40140c2a3029dafe5a15998ad3d5502b6" translate="yes" xml:space="preserve">
          <source>YearOffset.rule_code</source>
          <target state="translated">YearOffset.rule_code</target>
        </trans-unit>
        <trans-unit id="c970e3f1e790a2a4cd28b40401902501b9bc2d74" translate="yes" xml:space="preserve">
          <source>Yields:</source>
          <target state="translated">Yields:</target>
        </trans-unit>
        <trans-unit id="731e015904379ec830640f3703bd01e3a51c8462" translate="yes" xml:space="preserve">
          <source>You are highly encouraged to install these libraries, as they provide speed improvements, especially when working with large data sets.</source>
          <target state="translated">이러한 라이브러리는 특히 대용량 데이터 세트 작업시 속도 향상을 제공하므로 이러한 라이브러리를 설치하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="63a54d1261a5ad1fc50692dcfa178c28097d2721" translate="yes" xml:space="preserve">
          <source>You are highly encouraged to read &lt;a href=&quot;user_guide/io#io-html-gotchas&quot;&gt;HTML Table Parsing gotchas&lt;/a&gt;. It explains issues surrounding the installation and usage of the above three libraries.</source>
          <target state="translated">&lt;a href=&quot;user_guide/io#io-html-gotchas&quot;&gt;HTML Table Parsing gotchas&lt;/a&gt; 를 읽는 것이 좋습니다 . 위 세 라이브러리의 설치 및 사용과 관련된 문제에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="14a654306fee6edf7438333e1db79653827cf52f" translate="yes" xml:space="preserve">
          <source>You can &lt;strong&gt;not pass&lt;/strong&gt; a &lt;code&gt;Series&lt;/code&gt; directly as a &lt;code&gt;ndarray&lt;/code&gt; typed parameter to a Cython function. Instead pass the actual &lt;code&gt;ndarray&lt;/code&gt; using the &lt;a href=&quot;../reference/api/pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt;&lt;code&gt;Series.to_numpy()&lt;/code&gt;&lt;/a&gt;. The reason is that the Cython definition is specific to an ndarray and not the passed &lt;code&gt;Series&lt;/code&gt;.</source>
          <target state="translated">당신은 할 수 &lt;strong&gt;통과하지 &lt;/strong&gt; &lt;code&gt;Series&lt;/code&gt; A와 직접 &lt;code&gt;ndarray&lt;/code&gt; 사이 썬 함수에 입력 매개 변수입니다. 대신 &lt;a href=&quot;../reference/api/pandas.series.to_numpy#pandas.Series.to_numpy&quot;&gt; &lt;code&gt;Series.to_numpy()&lt;/code&gt; &lt;/a&gt; 사용하여 실제 &lt;code&gt;ndarray&lt;/code&gt; 를 전달하십시오 . 그 이유는 Cython 정의가 전달 된 &lt;code&gt;Series&lt;/code&gt; 가 아닌 ndarray에만 해당하기 때문입니다 .</target>
        </trans-unit>
        <trans-unit id="964182a98660c212cd70f5b139f3f83307b0dc4d" translate="yes" xml:space="preserve">
          <source>You can also append to an existing Excel file:</source>
          <target state="translated">기존 Excel 파일에 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7596c3bc47b26e16034cae06d000d436dbae3f17" translate="yes" xml:space="preserve">
          <source>You can also construct a &lt;code&gt;MultiIndex&lt;/code&gt; from a &lt;code&gt;DataFrame&lt;/code&gt; directly, using the method &lt;a href=&quot;../reference/api/pandas.multiindex.from_frame#pandas.MultiIndex.from_frame&quot;&gt;&lt;code&gt;MultiIndex.from_frame()&lt;/code&gt;&lt;/a&gt;. This is a complementary method to &lt;a href=&quot;../reference/api/pandas.multiindex.to_frame#pandas.MultiIndex.to_frame&quot;&gt;&lt;code&gt;MultiIndex.to_frame()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../reference/api/pandas.multiindex.from_frame#pandas.MultiIndex.from_frame&quot;&gt; &lt;code&gt;MultiIndex.from_frame()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 &lt;code&gt;DataFrame&lt;/code&gt; 에서 직접 &lt;code&gt;MultiIndex&lt;/code&gt; 를 생성 할 수도 있습니다 . 이것은 &lt;a href=&quot;../reference/api/pandas.multiindex.to_frame#pandas.MultiIndex.to_frame&quot;&gt; &lt;code&gt;MultiIndex.to_frame()&lt;/code&gt; &lt;/a&gt; 의 보완적인 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="4c0dbf88c2b603343a63495d28081346c0f3fde8" translate="yes" xml:space="preserve">
          <source>You can also create these other plots using the methods &lt;code&gt;DataFrame.plot.&amp;lt;kind&amp;gt;&lt;/code&gt; instead of providing the &lt;code&gt;kind&lt;/code&gt; keyword argument. This makes it easier to discover plot methods and the specific arguments they use:</source>
          <target state="translated">&lt;code&gt;kind&lt;/code&gt; 키워드 인수 를 제공하는 대신 &lt;code&gt;DataFrame.plot.&amp;lt;kind&amp;gt;&lt;/code&gt; 메소드를 사용하여 이러한 다른 플롯을 작성할 수도 있습니다 . 이를 통해 플롯 메소드와 이들이 사용하는 특정 인수를보다 쉽게 ​​발견 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dcf24abd0cd5fba8c1c3ec8de8adc41985fe9abb" translate="yes" xml:space="preserve">
          <source>You can also pass a dict to &lt;code&gt;concat&lt;/code&gt; in which case the dict keys will be used for the &lt;code&gt;keys&lt;/code&gt; argument (unless other keys are specified):</source>
          <target state="translated">dict를 &lt;code&gt;concat&lt;/code&gt; 에 전달 하면 dict 키가 &lt;code&gt;keys&lt;/code&gt; 인수에 사용됩니다 (다른 키가 지정되지 않은 경우).</target>
        </trans-unit>
        <trans-unit id="8971f5d06619f997c03e3252097d17143d01f29c" translate="yes" xml:space="preserve">
          <source>You can also pass a list of dicts or Series:</source>
          <target state="translated">dicts 또는 Series 목록을 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdada7fe196ffcdf573aeb79d198bcdf989afc76" translate="yes" xml:space="preserve">
          <source>You can also pass the list-like object to the &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt;&lt;code&gt;Series&lt;/code&gt;&lt;/a&gt; constructor with the dtype.</source>
          <target state="translated">dtype 을 사용하여 목록과 유사한 객체를 &lt;a href=&quot;../reference/api/pandas.series#pandas.Series&quot;&gt; &lt;code&gt;Series&lt;/code&gt; &lt;/a&gt; 생성자에 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a0a4d28f631eaf577752967b06e63165c1ff9be" translate="yes" xml:space="preserve">
          <source>You can also run the benchmark suite using the version of &lt;code&gt;pandas&lt;/code&gt; already installed in your current Python environment. This can be useful if you do not have virtualenv or conda, or are using the &lt;code&gt;setup.py develop&lt;/code&gt; approach discussed above; for the in-place build you need to set &lt;code&gt;PYTHONPATH&lt;/code&gt;, e.g. &lt;code&gt;PYTHONPATH=&quot;$PWD/..&quot; asv [remaining arguments]&lt;/code&gt;. You can run benchmarks using an existing Python environment by:</source>
          <target state="translated">현재 Python 환경에 이미 설치된 &lt;code&gt;pandas&lt;/code&gt; 버전을 사용하여 벤치 마크 제품군을 실행할 수도 있습니다. virtualenv 또는 conda가 없거나 위에서 설명한 &lt;code&gt;setup.py develop&lt;/code&gt; 접근 방식을 사용하는 경우 유용 할 수 있습니다 . 전체 빌드의 경우 &lt;code&gt;PYTHONPATH&lt;/code&gt; 를 설정해야합니다 ( 예 : &lt;code&gt;PYTHONPATH=&quot;$PWD/..&quot; asv [remaining arguments]&lt;/code&gt; . 다음과 같은 방법으로 기존 Python 환경을 사용하여 벤치 마크를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ecf6b4938bb797ed25a045ab4b5d1d61ac64325" translate="yes" xml:space="preserve">
          <source>You can also run this command on an entire directory if necessary:</source>
          <target state="translated">필요한 경우 전체 디렉토리에서이 명령을 실행할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="561e9aaa94d259af14791c84c1b35c96da8cec09" translate="yes" xml:space="preserve">
          <source>You can also specify the mapping type.</source>
          <target state="translated">매핑 유형을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="560afe50723f995759a6b440af21b9bad31fdeb0" translate="yes" xml:space="preserve">
          <source>You can also specify to use multiple cores to speed up the documentation build:</source>
          <target state="translated">여러 코어를 사용하여 문서 작성 속도를 높이도록 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7314e43d3cfeb21c3ad25dfa53d7b1ecf9770954" translate="yes" xml:space="preserve">
          <source>You can also supply a point inside an interval.</source>
          <target state="translated">간격 내에 점을 제공 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d1c351be28bc73a692bb6164718ff48ea21d775e" translate="yes" xml:space="preserve">
          <source>You can also use &lt;code&gt;reset_index&lt;/code&gt; with &lt;code&gt;MultiIndex&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reset_index&lt;/code&gt; 와 함께 &lt;code&gt;MultiIndex&lt;/code&gt; 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="983b08125da677e05a5dee465432a626974129aa" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;^&lt;/code&gt; operator:</source>
          <target state="translated">&lt;code&gt;^&lt;/code&gt; 연산자를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e843b2c36994229001a1fc151226d9916da0c8a" translate="yes" xml:space="preserve">
          <source>You can apply &lt;strong&gt;conditional formatting&lt;/strong&gt;, the visual styling of a DataFrame depending on the data within, by using the &lt;code&gt;DataFrame.style&lt;/code&gt; property. This is a property that returns a &lt;code&gt;Styler&lt;/code&gt; object, which has useful methods for formatting and displaying DataFrames.</source>
          <target state="translated">&lt;code&gt;DataFrame.style&lt;/code&gt; 속성 을 사용하면 데이터에 따라 DataFrame의 시각적 스타일 인 &lt;strong&gt;조건부 서식을&lt;/strong&gt; 적용 할 수 있습니다 . 이것은 DataFrames를 형식화하고 표시하는 데 유용한 메소드가 있는 &lt;code&gt;Styler&lt;/code&gt; 오브젝트 를 리턴하는 특성입니다 .</target>
        </trans-unit>
        <trans-unit id="579c3ea1e6f3a827405458d2c91e1baa2576e67d" translate="yes" xml:space="preserve">
          <source>You can change the semantics of the expression by passing the keyword argument &lt;code&gt;parser='python'&lt;/code&gt;. This enforces the same semantics as evaluation in Python space. Likewise, you can pass &lt;code&gt;engine='python'&lt;/code&gt; to evaluate an expression using Python itself as a backend. This is not recommended as it is inefficient compared to using &lt;code&gt;numexpr&lt;/code&gt; as the engine.</source>
          <target state="translated">키워드 인수 &lt;code&gt;parser='python'&lt;/code&gt; 을 전달하여 표현식의 의미를 변경할 수 있습니다 . 이것은 파이썬 공간에서의 평가와 동일한 의미를 강제합니다. 마찬가지로 &lt;code&gt;engine='python'&lt;/code&gt; 을 전달 하여 파이썬 자체를 백엔드로 사용하여 표현식을 평가할 수 있습니다. &lt;code&gt;numexpr&lt;/code&gt; 을 엔진 으로 사용 하는 것과 비교할 때 비효율적이므로 권장하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e17920b8db95ff1d805877c58fa79f23d1a36af6" translate="yes" xml:space="preserve">
          <source>You can check if an element belongs to it</source>
          <target state="translated">요소가 속하는지 확인할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="3d5d1d508c9e80225db867f1374c2ae9e233c1d4" translate="yes" xml:space="preserve">
          <source>You can concatenate a mix of &lt;code&gt;Series&lt;/code&gt; and &lt;code&gt;DataFrame&lt;/code&gt; objects. The &lt;code&gt;Series&lt;/code&gt; will be transformed to &lt;code&gt;DataFrame&lt;/code&gt; with the column name as the name of the &lt;code&gt;Series&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Series&lt;/code&gt; 와 &lt;code&gt;DataFrame&lt;/code&gt; 객체를 혼합하여 연결할 수 있습니다 . &lt;code&gt;Series&lt;/code&gt; 로 변환한다 &lt;code&gt;DataFrame&lt;/code&gt; 의 이름과 열 이름 &lt;code&gt;Series&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2b42e93a9b2abfcd6b12c8ffb5f719579e077df8" translate="yes" xml:space="preserve">
          <source>You can construct a &lt;code&gt;Timedelta&lt;/code&gt; scalar through various arguments:</source>
          <target state="translated">다양한 인수를 통해 &lt;code&gt;Timedelta&lt;/code&gt; 스칼라를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="966843b4eadaeebb266ee800f515eaa11941188e" translate="yes" xml:space="preserve">
          <source>You can control the precision of floats using pandas&amp;rsquo; regular &lt;code&gt;display.precision&lt;/code&gt; option.</source>
          <target state="translated">팬더의 일반 &lt;code&gt;display.precision&lt;/code&gt; 옵션을 사용하여 부동 소수점의 정밀도를 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c049812aea37e7b42d961f0e5c515e8b51db49a4" translate="yes" xml:space="preserve">
          <source>You can create &amp;ldquo;heatmaps&amp;rdquo; with the &lt;code&gt;background_gradient&lt;/code&gt; method. These require matplotlib, and we&amp;rsquo;ll use &lt;a href=&quot;http://stanford.edu/~mwaskom/software/seaborn/&quot;&gt;Seaborn&lt;/a&gt; to get a nice colormap.</source>
          <target state="translated">&lt;code&gt;background_gradient&lt;/code&gt; 메소드를 사용하여&amp;ldquo;히트 맵&amp;rdquo;을 만들 수 있습니다 . 여기에는 matplotlib이 필요하며 &lt;a href=&quot;http://stanford.edu/~mwaskom/software/seaborn/&quot;&gt;Seaborn&lt;/a&gt; 을 사용 하여 멋진 컬러 맵을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6e130c78c74069e17a350b8899812755a6add8b" translate="yes" xml:space="preserve">
          <source>You can find a nice example in &lt;a href=&quot;https://github.com/geopandas/geopandas&quot;&gt;geopandas&lt;/a&gt; project.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/geopandas/geopandas&quot;&gt;geopandas&lt;/a&gt; 프로젝트 에서 좋은 예를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3680b5bd5f2a4596f2df6ec993b5733a97e1d370" translate="yes" xml:space="preserve">
          <source>You can get a list of available options and their descriptions with &lt;code&gt;describe_option&lt;/code&gt;. When called with no argument &lt;code&gt;describe_option&lt;/code&gt; will print out the descriptions for all available options.</source>
          <target state="translated">&lt;code&gt;describe_option&lt;/code&gt; 을 사용하여 사용 가능한 옵션 및 설명 목록을 얻을 수 있습니다 . 인수없이 &lt;code&gt;describe_option&lt;/code&gt; 을 호출하면 사용 가능한 모든 옵션에 대한 설명 이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="9f4a8e5d2a461a883415d5c683e1cf566d603c48" translate="yes" xml:space="preserve">
          <source>You can include &amp;ldquo;bar charts&amp;rdquo; in your DataFrame.</source>
          <target state="translated">DataFrame에&amp;ldquo;막 대형 차트&amp;rdquo;를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="378a29afab859ac62e525fef8a996c5f329ed5d9" translate="yes" xml:space="preserve">
          <source>You can mix the indexer types for the index and columns. Use &lt;code&gt;:&lt;/code&gt; to select the entire axis.</source>
          <target state="translated">인덱스와 열에 인덱서 유형을 혼합 할 수 있습니다. &lt;code&gt;:&lt;/code&gt; 를 사용 하여 전체 축을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="87689b0eff91765c61013506dbe27658beb497f2" translate="yes" xml:space="preserve">
          <source>You can only apply styles, you can&amp;rsquo;t insert new HTML entities</source>
          <target state="translated">스타일 만 적용 할 수 있으며 새로운 HTML 엔터티를 삽입 할 수 없습니다</target>
        </trans-unit>
        <trans-unit id="6e8ee1976677f83629270ce44caceb9cb5445fbc" translate="yes" xml:space="preserve">
          <source>You can only style the &lt;em&gt;values&lt;/em&gt;, not the index or columns</source>
          <target state="translated">색인이나 열이 아닌 &lt;em&gt;값만&lt;/em&gt; 스타일 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef354a6b81d902ce07848af270a874a1fb9d7617" translate="yes" xml:space="preserve">
          <source>You can operate with &lt;code&gt;+&lt;/code&gt; and &lt;code&gt;*&lt;/code&gt; over an Interval and the operation is applied to each of its bounds, so the result depends on the type of the bound elements</source>
          <target state="translated">간격에 대해 &lt;code&gt;+&lt;/code&gt; 및 &lt;code&gt;*&lt;/code&gt; 를 사용하여 작업 할 수 있으며 작업이 각 범위에 적용되므로 결과는 바인딩 된 요소의 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="148f39d32c098c15848f3fe3ba4ab0b6ac32d07a" translate="yes" xml:space="preserve">
          <source>You can pass a list of columns to &lt;code&gt;[]&lt;/code&gt; to select columns in that order. If a column is not contained in the DataFrame, an exception will be raised. Multiple columns can also be set in this manner:</source>
          <target state="translated">열 목록을 &lt;code&gt;[]&lt;/code&gt; 에 전달하여 순서대로 열을 선택할 수 있습니다. 열이 DataFrame에 포함되어 있지 않으면 예외가 발생합니다. 이 방법으로 여러 열을 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="420b22fcc5dda33dda47de5e406c78162e11004b" translate="yes" xml:space="preserve">
          <source>You can pass other keywords supported by matplotlib &lt;code&gt;hist&lt;/code&gt;. For example, horizontal and cumulative histograms can be drawn by &lt;code&gt;orientation='horizontal'&lt;/code&gt; and &lt;code&gt;cumulative=True&lt;/code&gt;.</source>
          <target state="translated">matplotlib &lt;code&gt;hist&lt;/code&gt; 가 지원하는 다른 키워드를 전달할 수 있습니다 . 예를 들어, 가로 및 누적 히스토그램은 &lt;code&gt;orientation='horizontal'&lt;/code&gt; 및 &lt;code&gt;cumulative=True&lt;/code&gt; 로 그릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aa34a7fddf3f299e15490a4623cda1533c78fe53" translate="yes" xml:space="preserve">
          <source>You can plot one column versus another using the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; keywords in &lt;a href=&quot;../reference/api/pandas.dataframe.plot#pandas.DataFrame.plot&quot;&gt;&lt;code&gt;plot()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../reference/api/pandas.dataframe.plot#pandas.DataFrame.plot&quot;&gt; &lt;code&gt;plot()&lt;/code&gt; &lt;/a&gt; 에서 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 키워드를 사용하여 한 열과 다른 열을 플로팅 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="367483810a3e1f0eae798ccc5af3bb5def89bbbe" translate="yes" xml:space="preserve">
          <source>You can refer to column names that contain spaces by surrounding them in backticks.</source>
          <target state="translated">공백을 포함하는 열 이름은 백틱으로 묶어서 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c1f751ec7299d1bb034d39ec0445aff85f19c79" translate="yes" xml:space="preserve">
          <source>You can replace &lt;code&gt;HEAD&lt;/code&gt; with the name of the branch you are working on, and report benchmarks that changed by more than 10%. The command uses &lt;code&gt;conda&lt;/code&gt; by default for creating the benchmark environments. If you want to use virtualenv instead, write:</source>
          <target state="translated">당신은 대체 할 수 &lt;code&gt;HEAD&lt;/code&gt; 를 10 % 이상 변경하는 것이 작업중인 브랜치의 이름 및 보고서 벤치 마크. 이 명령은 벤치 마크 환경을 만들기 위해 기본적으로 &lt;code&gt;conda&lt;/code&gt; 를 사용 합니다. virtualenv를 대신 사용하려면 다음과 같이 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="da039ddad983a3aaa24311f7e97c48b1048db010" translate="yes" xml:space="preserve">
          <source>You can set the date format or datetime format:</source>
          <target state="translated">날짜 형식 또는 날짜 / 시간 형식을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b7d5c220b84cc67ad7c80bbba204827731b062a" translate="yes" xml:space="preserve">
          <source>You can specify the return orientation.</source>
          <target state="translated">반환 방향을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51f7271e99eeb718962bcce9dbc7fb273f58af3c" translate="yes" xml:space="preserve">
          <source>You can substitute and append in one shot with something like</source>
          <target state="translated">한 번에 다음과 같은 것으로 대체하고 추가 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="dfcefa89bfb1395dfeb0ecfb19ab774e324538f0" translate="yes" xml:space="preserve">
          <source>You can tell &lt;code&gt;make.py&lt;/code&gt; to compile only a single section of the docs, greatly reducing the turn-around time for checking your changes.</source>
          <target state="translated">당신은 말할 수 &lt;code&gt;make.py&lt;/code&gt; 크게 변경 사항을 확인하기 위해 턴 어라운드 시간을 줄일 문서의 단 하나의 섹션을 컴파일.</target>
        </trans-unit>
        <trans-unit id="815f536232e20ec961f126ae6cc822520940198a" translate="yes" xml:space="preserve">
          <source>You can test the bounds (&lt;code&gt;closed='right'&lt;/code&gt;, so &lt;code&gt;0 &amp;lt; x &amp;lt;= 5&lt;/code&gt;):</source>
          <target state="translated">범위를 테스트 할 수 있습니다 ( &lt;code&gt;closed='right'&lt;/code&gt; , 따라서 &lt;code&gt;0 &amp;lt; x &amp;lt;= 5&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="367c1bc1afc913efc601908ca2926dd2e8eeff44" translate="yes" xml:space="preserve">
          <source>You can then click on &lt;code&gt;Commits&lt;/code&gt; and &lt;code&gt;Files Changed&lt;/code&gt; to make sure everything looks okay one last time</source>
          <target state="translated">그런 다음 &lt;code&gt;Commits&lt;/code&gt; 및 &lt;code&gt;Files Changed&lt;/code&gt; 을 클릭하여 마지막으로 모든 것이 제대로 표시되도록 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="c2d7226bf5c8c9bc4e188c50d09609738a78ad51" translate="yes" xml:space="preserve">
          <source>You can then select subsets from the pivoted &lt;code&gt;DataFrame&lt;/code&gt;:</source>
          <target state="translated">그런 다음 피벗 된 &lt;code&gt;DataFrame&lt;/code&gt; 에서 하위 집합을 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7bffb9845e246d401c90d93b6a23cac674adae60" translate="yes" xml:space="preserve">
          <source>You can then verify the changes look ok, then git &lt;a href=&quot;#contributing-commit-code&quot;&gt;commit&lt;/a&gt; and &lt;a href=&quot;#contributing-push-code&quot;&gt;push&lt;/a&gt;.</source>
          <target state="translated">그런 다음 변경 사항이 제대로 표시되는지 확인한 다음 git &lt;a href=&quot;#contributing-commit-code&quot;&gt;commit&lt;/a&gt; 및을 &lt;a href=&quot;#contributing-push-code&quot;&gt;누릅니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b609e35928d18a5fd4f340dc74b61036a0b2674c" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;random_state&lt;/code&gt; for reproducibility.</source>
          <target state="translated">재현성을 위해 &lt;code&gt;random_state&lt;/code&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f75869aea2873dc9d99bbee6201b72de59d6ae69" translate="yes" xml:space="preserve">
          <source>You can use the string alias for &lt;code&gt;dtype&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;dtype&lt;/code&gt; 에 문자열 별칭을 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="82ece827193eb73c7dae1dcd31c62c5b524a095a" translate="yes" xml:space="preserve">
          <source>You can write</source>
          <target state="translated">당신은 쓸 수 있습니다</target>
        </trans-unit>
        <trans-unit id="b22fc21d68eb0faf7726595c52557dc0922cba9b" translate="yes" xml:space="preserve">
          <source>You defer by raising &lt;code&gt;NotImplemented&lt;/code&gt; when any Series are present in &lt;code&gt;inputs&lt;/code&gt;. Pandas will extract the arrays and call the ufunc again.</source>
          <target state="translated">&lt;code&gt;inputs&lt;/code&gt; 시리즈가있을 때 &lt;code&gt;NotImplemented&lt;/code&gt; 를 높이면 지연됩니다 . 팬더는 배열을 추출하고 ufunc를 다시 호출합니다.</target>
        </trans-unit>
        <trans-unit id="6d0fba5ca5db0f849ed35d26e5621882020eeb5a" translate="yes" xml:space="preserve">
          <source>You define a &lt;code&gt;_HANDLED_TYPES&lt;/code&gt; tuple as an attribute on the class. Pandas inspect this to determine whether the ufunc is valid for the types present.</source>
          <target state="translated">&lt;code&gt;_HANDLED_TYPES&lt;/code&gt; 튜플을 클래스의 속성으로 정의합니다 . 팬더는 이것을 검사하여 ufunc가 존재하는 유형에 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="f646aa8ec60569903f780ea6732f2bec83e72aef" translate="yes" xml:space="preserve">
          <source>You get the times that are &lt;em&gt;not&lt;/em&gt; between two times by setting &lt;code&gt;start_time&lt;/code&gt; later than &lt;code&gt;end_time&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;end_time&lt;/code&gt; 이후에 &lt;code&gt;start_time&lt;/code&gt; 을 설정하여 두 번 사이 가 &lt;em&gt;아닌&lt;/em&gt; 시간을 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="ee56f7e59d382b375065058389338b3ac36d4d43" translate="yes" xml:space="preserve">
          <source>You may access an index on a &lt;code id=&quot;indexing-columns-multiple&quot;&gt;Series&lt;/code&gt; or column on a &lt;code&gt;DataFrame&lt;/code&gt; directly as an attribute:</source>
          <target state="translated">&lt;code&gt;DataFrame&lt;/code&gt; 의 &lt;code id=&quot;indexing-columns-multiple&quot;&gt;Series&lt;/code&gt; 또는 열의 인덱스에 특성으로 직접 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="962af4e6aa961aa14ebad72e732c9c8292902db1" translate="yes" xml:space="preserve">
          <source>You may also provide a callable to create the new categories</source>
          <target state="translated">당신은 또한 새로운 카테고리를 만들 호출 가능을 제공 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="834bd3ca796c0e4badb6645d2fea473eb49e46d0" translate="yes" xml:space="preserve">
          <source>You may find this useful for applying a transform (in-place) to a subset of the columns.</source>
          <target state="translated">이 기능은 열의 하위 집합에 적절한 위치에 변환을 적용 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e75e51e5868dbb20cb8738df812925054c0802d6" translate="yes" xml:space="preserve">
          <source>You need to invoke as &lt;code&gt;option_context(pat, val, [(pat, val), ...])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;option_context(pat, val, [(pat, val), ...])&lt;/code&gt; 으로 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bcfcd504da18fc42281ff97696f2ef0f2c11a9d1" translate="yes" xml:space="preserve">
          <source>You should &lt;strong&gt;never modify&lt;/strong&gt; something you are iterating over. This is not guaranteed to work in all cases. Depending on the data types, the iterator returns a copy and not a view, and writing to it will have no effect.</source>
          <target state="translated">반복하는 것을 &lt;strong&gt;수정&lt;/strong&gt; 해서는 &lt;strong&gt;안됩니다&lt;/strong&gt; . 모든 경우에 해당되는 것은 아닙니다. 데이터 유형에 따라 반복자는 뷰가 아닌 사본을 리턴하므로 기록에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e1e6e24d97621d5a61a9dd79c5d41ea8694e5601" translate="yes" xml:space="preserve">
          <source>You should not use &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; for simple expressions or for expressions involving small DataFrames. In fact, &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; is many orders of magnitude slower for smaller expressions/objects than plain ol&amp;rsquo; Python. A good rule of thumb is to only use &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt;&lt;code&gt;eval()&lt;/code&gt;&lt;/a&gt; when you have a &lt;code&gt;DataFrame&lt;/code&gt; with more than 10,000 rows.</source>
          <target state="translated">간단한 표현식이나 작은 DataFrame과 관련된 표현식에는 &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt; 을 사용해서는 안됩니다 . 실제로 &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt; 은 일반 ol 'Python보다 작은 표현식 / 객체의 경우 수십 배 느립니다. 일반적으로 행 수가 10,000 개가 넘는 &lt;code&gt;DataFrame&lt;/code&gt; 이있는 경우 &lt;a href=&quot;../reference/api/pandas.eval#pandas.eval&quot;&gt; &lt;code&gt;eval()&lt;/code&gt; &lt;/a&gt; 만 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="ea07aa9caf4936728c5b020833ef4c8c56e22cad" translate="yes" xml:space="preserve">
          <source>You should run:</source>
          <target state="translated">다음을 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="774ba0ce1a4df454b286ac2aea4c1ec11984539c" translate="yes" xml:space="preserve">
          <source>You should use &lt;code&gt;ignore_index&lt;/code&gt; with this method to instruct DataFrame to discard its index. If you wish to preserve the index, you should construct an appropriately-indexed DataFrame and append or concatenate those objects.</source>
          <target state="translated">이 메소드와 함께 &lt;code&gt;ignore_index&lt;/code&gt; 를 사용 하여 인덱스를 삭제하도록 DataFrame에 지시해야합니다. 인덱스를 유지하려면 적절하게 인덱스 된 DataFrame을 구성하고 해당 개체를 추가하거나 연결해야합니다.</target>
        </trans-unit>
        <trans-unit id="5db15e758333ad2ccaef0c05df356a416448bcf0" translate="yes" xml:space="preserve">
          <source>You want your master branch to reflect only production-ready code, so create a feature branch for making your changes. For example:</source>
          <target state="translated">마스터 브랜치에 프로덕션 준비 코드 만 반영하기를 원하므로 변경을위한 기능 브랜치를 작성하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="482e6c791e7dcccd7ec0aa4e615e6f908e426473" translate="yes" xml:space="preserve">
          <source>You will need to install Numba. This is easy with &lt;code&gt;conda&lt;/code&gt;, by using: &lt;code&gt;conda install numba&lt;/code&gt;, see &lt;a href=&quot;../install#install-miniconda&quot;&gt;installing using miniconda&lt;/a&gt;.</source>
          <target state="translated">Numba를 설치해야합니다. 이와 함께 쉽게 &lt;code&gt;conda&lt;/code&gt; : 사용하여, &lt;code&gt;conda install numba&lt;/code&gt; , 참조 &lt;a href=&quot;../install#install-miniconda&quot;&gt;miniconda를 사용하여 설치&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="83557e193341c5bc86bfcc08a38e4afba0e51632" translate="yes" xml:space="preserve">
          <source>You will need your own fork to work on the code. Go to the &lt;a href=&quot;https://github.com/pandas-dev/pandas&quot;&gt;pandas project page&lt;/a&gt; and hit the &lt;code&gt;Fork&lt;/code&gt; button. You will want to clone your fork to your machine:</source>
          <target state="translated">코드 작업을하려면 자신의 포크가 필요합니다. &lt;a href=&quot;https://github.com/pandas-dev/pandas&quot;&gt;팬더 프로젝트 페이지로&lt;/a&gt; 이동 하여 &lt;code&gt;Fork&lt;/code&gt; 버튼을 누르십시오. 포크를 머신에 복제하려고합니다.</target>
        </trans-unit>
        <trans-unit id="097a7fefe8b028a60baaf56fc29663f4f2505e50" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll also need to</source>
          <target state="translated">당신은 또한 필요합니다</target>
        </trans-unit>
        <trans-unit id="a13290e79b36041faf90db5b43c5219bd37945ea" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ve seen a few methods for data-driven styling. &lt;code&gt;Styler&lt;/code&gt; also provides a few other options for styles that don&amp;rsquo;t depend on the data.</source>
          <target state="translated">데이터 중심 스타일링을위한 몇 가지 방법을 보았습니다. &lt;code&gt;Styler&lt;/code&gt; 는 데이터에 의존하지 않는 스타일에 대한 몇 가지 다른 옵션도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bf0f154b6b41ddff7b5adfdf54569270e4dc5742" translate="yes" xml:space="preserve">
          <source>Zero presents a problem. Should it roll forward or back? We arbitrarily have it rollforward:</source>
          <target state="translated">0은 문제를 나타냅니다. 롤 포워드 또는 롤백해야합니까? 우리는 임의로 롤 포워드합니다.</target>
        </trans-unit>
        <trans-unit id="2d0297345177ec7405b29e43975bd2ebec6deecd" translate="yes" xml:space="preserve">
          <source>Zero-copy view to the array backing the Series.</source>
          <target state="translated">Series를 지원하는 어레이에 대한 제로 복사보기.</target>
        </trans-unit>
        <trans-unit id="27f4d2f24fb01668d7628034c810f68c5a73ab28" translate="yes" xml:space="preserve">
          <source>__getitem__</source>
          <target state="translated">__getitem__</target>
        </trans-unit>
        <trans-unit id="2a13cb19a4f9ff982c9a09bdcab8bfa48f379556" translate="yes" xml:space="preserve">
          <source>__len__</source>
          <target state="translated">__len__</target>
        </trans-unit>
        <trans-unit id="9ee9a2e726df3c6cea7a3e9b1df605665618f616" translate="yes" xml:space="preserve">
          <source>__repr__ : A default repr for the ExtensionArray.</source>
          <target state="translated">__repr__ : A default repr for the ExtensionArray.</target>
        </trans-unit>
        <trans-unit id="cca2cfbda5d0c655ba295d49eef8553e927e062d" translate="yes" xml:space="preserve">
          <source>_concat_same_type</source>
          <target state="translated">_concat_same_type</target>
        </trans-unit>
        <trans-unit id="fc32093a807ff62b73794dd86a20df66105b8d89" translate="yes" xml:space="preserve">
          <source>_formatter : Print scalars inside a Series or DataFrame.</source>
          <target state="translated">_formatter : Print scalars inside a Series or DataFrame.</target>
        </trans-unit>
        <trans-unit id="61a7e9f882863837f6bbc3f4f2568e75977f31db" translate="yes" xml:space="preserve">
          <source>_from_factorized</source>
          <target state="translated">_from_factorized</target>
        </trans-unit>
        <trans-unit id="cc6a31c380c524feecc0753a618f9041ee51e5b1" translate="yes" xml:space="preserve">
          <source>_from_sequence</source>
          <target state="translated">_from_sequence</target>
        </trans-unit>
        <trans-unit id="3109985c189e64785f88e38ba7c4eb495556cfc8" translate="yes" xml:space="preserve">
          <source>_from_sequence_of_strings</source>
          <target state="translated">_from_sequence_of_strings</target>
        </trans-unit>
        <trans-unit id="aa0812bcbce36c86caa7e88ea9c4f1533a569283" translate="yes" xml:space="preserve">
          <source>_is_boolean</source>
          <target state="translated">_is_boolean</target>
        </trans-unit>
        <trans-unit id="f6bec03cdbdadc28a5b98eca915e77c3dda3cb28" translate="yes" xml:space="preserve">
          <source>_is_numeric</source>
          <target state="translated">_is_numeric</target>
        </trans-unit>
        <trans-unit id="ac9417503c2d4f9dcc57bdc7074c42c6135072f2" translate="yes" xml:space="preserve">
          <source>_reduce</source>
          <target state="translated">_reduce</target>
        </trans-unit>
        <trans-unit id="82b9367638270efa0a1abe01bd5efb4bedb9a270" translate="yes" xml:space="preserve">
          <source>a = b + 1 a + 2</source>
          <target state="translated">a = b + 1 a + 2</target>
        </trans-unit>
        <trans-unit id="ffd45dc539b47d4c0561fb2aef63711fac69e5b3" translate="yes" xml:space="preserve">
          <source>a DataFrame</source>
          <target state="translated">DataFrame</target>
        </trans-unit>
        <trans-unit id="d59a3db38b8e9d5e46cd041855e63de1be133714" translate="yes" xml:space="preserve">
          <source>a Python dict</source>
          <target state="translated">Python dict</target>
        </trans-unit>
        <trans-unit id="99b44acfda74e726f219e436349e0d9e0cfe75f8" translate="yes" xml:space="preserve">
          <source>a Window or Rolling sub-classed for the particular operation</source>
          <target state="translated">특정 작업을 위해 하위 클래스로 분류 된 창 또는 롤링</target>
        </trans-unit>
        <trans-unit id="3382194927619b5d7840c8d1f4c9b183a9cf5bf9" translate="yes" xml:space="preserve">
          <source>a Window sub-classed for the particular operation</source>
          <target state="translated">특정 오퍼레이션을 위해 서브 클래스 화 된 Window</target>
        </trans-unit>
        <trans-unit id="19872f923c2a569052449f4ef53d07b010ea543c" translate="yes" xml:space="preserve">
          <source>a dict of item-&amp;gt;dtype of what to downcast if possible, or the string &amp;lsquo;infer&amp;rsquo; which will try to downcast to an appropriate equal type (e.g. float64 to int64 if possible)</source>
          <target state="translated">가능한 경우 다운 캐스트 할 항목의 항목-&amp;gt; 형식 또는 적절한 동일한 유형으로 다운 캐스트하려고하는 문자열 '추론'(예 : 가능한 경우 float64에서 int64로)</target>
        </trans-unit>
        <trans-unit id="586bbbd6e9abc0971f2777f9ad666bd92a99c881" translate="yes" xml:space="preserve">
          <source>a dictionary of keyword arguments passed into &lt;code&gt;func&lt;/code&gt;.</source>
          <target state="translated">키워드 인자의 사전에 전달 &lt;code&gt;func&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3f656edc273a0b8ed48861ea4650f43a5366c3fb" translate="yes" xml:space="preserve">
          <source>a frequency</source>
          <target state="translated">빈도</target>
        </trans-unit>
        <trans-unit id="f318b41d7c9d0f5de7372a9dcf6b75c6e47b8a49" translate="yes" xml:space="preserve">
          <source>a scalar value (like 5)</source>
          <target state="translated">스칼라 값 (예 : 5)</target>
        </trans-unit>
        <trans-unit id="6ab914dc0acc9a249575a0f5363f3e54d2793359" translate="yes" xml:space="preserve">
          <source>a single nth value for the row or a list of nth values</source>
          <target state="translated">행의 단일 n 번째 값 또는 n 번째 값 목록</target>
        </trans-unit>
        <trans-unit id="8082397ae9e83997e40a4b6d319b7616f5767a75" translate="yes" xml:space="preserve">
          <source>a subject line with &lt;code&gt;&amp;lt; 80&lt;/code&gt; chars.</source>
          <target state="translated">&lt;code&gt;&amp;lt; 80&lt;/code&gt; 자로 된 제목 줄</target>
        </trans-unit>
        <trans-unit id="ca189e7ee6e39036a4bf1fb41fe49f64e9a77401" translate="yes" xml:space="preserve">
          <source>a tuple (width, height) in inches</source>
          <target state="translated">인치 단위의 튜플 (너비, 높이)</target>
        </trans-unit>
        <trans-unit id="6747c88c43085637ba5379af758c0da115c85f2d" translate="yes" xml:space="preserve">
          <source>a unique identifier to avoid CSS collisions; generated automatically</source>
          <target state="translated">CSS 충돌을 피하기위한 고유 식별자; 자동 생성</target>
        </trans-unit>
        <trans-unit id="8824cdd6007632d5c5a27f499d62346811a853bf" translate="yes" xml:space="preserve">
          <source>a valid indexer to limit &lt;code&gt;data&lt;/code&gt; to &lt;em&gt;before&lt;/em&gt; applying the function. Consider using a pandas.IndexSlice</source>
          <target state="translated">함수 &lt;em&gt;를&lt;/em&gt; 적용 하기 &lt;em&gt;전에 &lt;/em&gt; &lt;code&gt;data&lt;/code&gt; 를 제한하는 유효한 인덱서 팬더 사용을 고려하십시오.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9d7c6919e86376355b6a88208d202c6ea8b103f6" translate="yes" xml:space="preserve">
          <source>a valid slice for &lt;code&gt;data&lt;/code&gt; to limit the style application to</source>
          <target state="translated">스타일 응용 프로그램을 제한 할 수 있는 유효한 &lt;code&gt;data&lt;/code&gt; 조각</target>
        </trans-unit>
        <trans-unit id="e786f557deecf6f4dc77241a62f2345db38c5e02" translate="yes" xml:space="preserve">
          <source>a valid slice for &lt;code&gt;data&lt;/code&gt; to limit the style application to.</source>
          <target state="translated">스타일 응용 프로그램을 제한 할 &lt;code&gt;data&lt;/code&gt; 의 유효한 슬라이스</target>
        </trans-unit>
        <trans-unit id="82451b41fd7878180b6aa2b54e369cbec4e8032c" translate="yes" xml:space="preserve">
          <source>abs</source>
          <target state="translated">abs</target>
        </trans-unit>
        <trans-unit id="1a9b658e1556b7d611ac3015d6db8be3376f5b9b" translate="yes" xml:space="preserve">
          <source>after_head_rows</source>
          <target state="translated">after_head_rows</target>
        </trans-unit>
        <trans-unit id="fd85dd112428e9267423c228853c7cced038dba3" translate="yes" xml:space="preserve">
          <source>after_rows</source>
          <target state="translated">after_rows</target>
        </trans-unit>
        <trans-unit id="18fb7485fd159c98d9c39753bbaf3c0b89c0a003" translate="yes" xml:space="preserve">
          <source>after_table</source>
          <target state="translated">after_table</target>
        </trans-unit>
        <trans-unit id="02adca6c84d0bc3bedcb9321586e18488e3b8b89" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;api/pandas.tseries.offsets.businessday#pandas.tseries.offsets.BusinessDay&quot;&gt;&lt;code&gt;pandas.tseries.offsets.BusinessDay&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;api/pandas.tseries.offsets.businessday#pandas.tseries.offsets.BusinessDay&quot;&gt; &lt;code&gt;pandas.tseries.offsets.BusinessDay&lt;/code&gt; 의&lt;/a&gt; 별칭</target>
        </trans-unit>
        <trans-unit id="dda4315d24b5f32c18ff167b6dbcf84c9e0383f6" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;api/pandas.tseries.offsets.businessmonthbegin#pandas.tseries.offsets.BusinessMonthBegin&quot;&gt;&lt;code&gt;pandas.tseries.offsets.BusinessMonthBegin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;api/pandas.tseries.offsets.businessmonthbegin#pandas.tseries.offsets.BusinessMonthBegin&quot;&gt; &lt;code&gt;pandas.tseries.offsets.BusinessMonthBegin&lt;/code&gt; 의&lt;/a&gt; 별칭</target>
        </trans-unit>
        <trans-unit id="c395cb61df117cde108f3cf561f5571107945084" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;api/pandas.tseries.offsets.businessmonthend#pandas.tseries.offsets.BusinessMonthEnd&quot;&gt;&lt;code&gt;pandas.tseries.offsets.BusinessMonthEnd&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;api/pandas.tseries.offsets.businessmonthend#pandas.tseries.offsets.BusinessMonthEnd&quot;&gt; &lt;code&gt;pandas.tseries.offsets.BusinessMonthEnd&lt;/code&gt; 의&lt;/a&gt; 별칭</target>
        </trans-unit>
        <trans-unit id="0d94fcd94f9243150b18ac84b459a8ef69f8f73c" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;api/pandas.tseries.offsets.custombusinessday#pandas.tseries.offsets.CustomBusinessDay&quot;&gt;&lt;code&gt;pandas.tseries.offsets.CustomBusinessDay&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;api/pandas.tseries.offsets.custombusinessday#pandas.tseries.offsets.CustomBusinessDay&quot;&gt; &lt;code&gt;pandas.tseries.offsets.CustomBusinessDay&lt;/code&gt; 의&lt;/a&gt; 별칭</target>
        </trans-unit>
        <trans-unit id="3c39bd7519bc8ea519dd2f70cf1c352e5028388b" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;api/pandas.tseries.offsets.custombusinessmonthbegin#pandas.tseries.offsets.CustomBusinessMonthBegin&quot;&gt;&lt;code&gt;pandas.tseries.offsets.CustomBusinessMonthBegin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;api/pandas.tseries.offsets.custombusinessmonthbegin#pandas.tseries.offsets.CustomBusinessMonthBegin&quot;&gt; &lt;code&gt;pandas.tseries.offsets.CustomBusinessMonthBegin&lt;/code&gt; 의&lt;/a&gt; 별칭</target>
        </trans-unit>
        <trans-unit id="5b60336611ea7d9297aa08fc5d699598685559bb" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;api/pandas.tseries.offsets.custombusinessmonthend#pandas.tseries.offsets.CustomBusinessMonthEnd&quot;&gt;&lt;code&gt;pandas.tseries.offsets.CustomBusinessMonthEnd&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;api/pandas.tseries.offsets.custombusinessmonthend#pandas.tseries.offsets.CustomBusinessMonthEnd&quot;&gt; &lt;code&gt;pandas.tseries.offsets.CustomBusinessMonthEnd&lt;/code&gt; 의&lt;/a&gt; 별칭</target>
        </trans-unit>
        <trans-unit id="e6e5720ba3fb89ccc746e31dc63e8d4f94a945bb" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;pandas.tseries.offsets.businessday#pandas.tseries.offsets.BusinessDay&quot;&gt;&lt;code&gt;pandas.tseries.offsets.BusinessDay&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;pandas.tseries.offsets.businessday#pandas.tseries.offsets.BusinessDay&quot;&gt; &lt;code&gt;pandas.tseries.offsets.BusinessDay&lt;/code&gt; 의&lt;/a&gt; 별칭</target>
        </trans-unit>
        <trans-unit id="1cae3a0c4758d553219f84ca6e522d5f1245e022" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;pandas.tseries.offsets.businessmonthbegin#pandas.tseries.offsets.BusinessMonthBegin&quot;&gt;&lt;code&gt;pandas.tseries.offsets.BusinessMonthBegin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;pandas.tseries.offsets.businessmonthbegin#pandas.tseries.offsets.BusinessMonthBegin&quot;&gt; &lt;code&gt;pandas.tseries.offsets.BusinessMonthBegin&lt;/code&gt; 의&lt;/a&gt; 별칭</target>
        </trans-unit>
        <trans-unit id="7ae31aa088fe5eb568b051c1b5212e9b45dba7a5" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;pandas.tseries.offsets.businessmonthend#pandas.tseries.offsets.BusinessMonthEnd&quot;&gt;&lt;code&gt;pandas.tseries.offsets.BusinessMonthEnd&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;pandas.tseries.offsets.businessmonthend#pandas.tseries.offsets.BusinessMonthEnd&quot;&gt; &lt;code&gt;pandas.tseries.offsets.BusinessMonthEnd&lt;/code&gt; 의&lt;/a&gt; 별칭</target>
        </trans-unit>
        <trans-unit id="6dc86978f535fd44292a946062a517bc3145b038" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;pandas.tseries.offsets.custombusinessday#pandas.tseries.offsets.CustomBusinessDay&quot;&gt;&lt;code&gt;pandas.tseries.offsets.CustomBusinessDay&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;pandas.tseries.offsets.custombusinessday#pandas.tseries.offsets.CustomBusinessDay&quot;&gt; &lt;code&gt;pandas.tseries.offsets.CustomBusinessDay&lt;/code&gt; 의&lt;/a&gt; 별칭</target>
        </trans-unit>
        <trans-unit id="c15daed6c957c2d42f380052068e516fa7ca71fb" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;pandas.tseries.offsets.custombusinessmonthbegin#pandas.tseries.offsets.CustomBusinessMonthBegin&quot;&gt;&lt;code&gt;pandas.tseries.offsets.CustomBusinessMonthBegin&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;pandas.tseries.offsets.custombusinessmonthbegin#pandas.tseries.offsets.CustomBusinessMonthBegin&quot;&gt; &lt;code&gt;pandas.tseries.offsets.CustomBusinessMonthBegin&lt;/code&gt; 의&lt;/a&gt; 별칭</target>
        </trans-unit>
        <trans-unit id="954b0ff42382ce7c1315468ed25627f98dbb521f" translate="yes" xml:space="preserve">
          <source>alias of &lt;a href=&quot;pandas.tseries.offsets.custombusinessmonthend#pandas.tseries.offsets.CustomBusinessMonthEnd&quot;&gt;&lt;code&gt;pandas.tseries.offsets.CustomBusinessMonthEnd&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;pandas.tseries.offsets.custombusinessmonthend#pandas.tseries.offsets.CustomBusinessMonthEnd&quot;&gt; &lt;code&gt;pandas.tseries.offsets.CustomBusinessMonthEnd&lt;/code&gt; 의&lt;/a&gt; 별칭</target>
        </trans-unit>
        <trans-unit id="810f04379483324c9091718ee7e5758ddaac3a4e" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;pandas.core.arrays.categorical.CategoricalAccessor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pandas.core.arrays.categorical.CategoricalAccessor&lt;/code&gt; 의 별칭</target>
        </trans-unit>
        <trans-unit id="dfd474c50ba9fc14f802160748271a432356e8ba" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;pandas.core.arrays.sparse.SparseAccessor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pandas.core.arrays.sparse.SparseAccessor&lt;/code&gt; 의 별칭</target>
        </trans-unit>
        <trans-unit id="27eeb8ea415c6e1be2846af4566cb1bdd2496237" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;pandas.core.arrays.sparse.SparseFrameAccessor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pandas.core.arrays.sparse.SparseFrameAccessor&lt;/code&gt; 의 별칭</target>
        </trans-unit>
        <trans-unit id="e56ad61a31cc51996527187885020124e71a56cc" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;pandas.core.indexes.accessors.CombinedDatetimelikeProperties&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pandas.core.indexes.accessors.CombinedDatetimelikeProperties&lt;/code&gt; 의 별칭</target>
        </trans-unit>
        <trans-unit id="8a934df534bf4f769826be5f36cde2b41c53015f" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;pandas.core.strings.StringMethods&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pandas.core.strings.StringMethods&lt;/code&gt; 의 별칭</target>
        </trans-unit>
        <trans-unit id="c5496525f55919dbb22d8eeb9af9c758dcfeb247" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;pandas.plotting._core.PlotAccessor&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pandas.plotting._core.PlotAccessor&lt;/code&gt; 의 별칭</target>
        </trans-unit>
        <trans-unit id="75e30df2853420689fbb4cc87429f32c0e318530" translate="yes" xml:space="preserve">
          <source>all inputs are ordered and their categories are not identical</source>
          <target state="translated">모든 입력이 주문되고 카테고리가 동일하지 않습니다</target>
        </trans-unit>
        <trans-unit id="51e6163f3ce440079bf4f0dfbf8d754ef7e86c74" translate="yes" xml:space="preserve">
          <source>all inputs do not have the same dtype</source>
          <target state="translated">모든 입력이 동일한 dtype을 갖지 않습니다</target>
        </trans-unit>
        <trans-unit id="082214d74d8e4fd21f3035e9e59b1b690b2ff7d8" translate="yes" xml:space="preserve">
          <source>all inputs do not have the same ordered property</source>
          <target state="translated">모든 입력에 동일한 순서의 속성이 없습니다</target>
        </trans-unit>
        <trans-unit id="62207ed2c904cfb7df33d107a612947694fb8eea" translate="yes" xml:space="preserve">
          <source>allowed orients are &lt;code&gt;{'split','records','index',
'columns','values', 'table'}&lt;/code&gt;</source>
          <target state="translated">허용되는 방향은 &lt;code&gt;{'split','records','index', 'columns','values', 'table'}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6604b0a2ef623275a766a425757674718f109e2c" translate="yes" xml:space="preserve">
          <source>allowed orients are &lt;code&gt;{'split','records','index'}&lt;/code&gt;</source>
          <target state="translated">허용되는 방향은 &lt;code&gt;{'split','records','index'}&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e50881816be0f66cd59f1d9ed102c632aea4cd4e" translate="yes" xml:space="preserve">
          <source>allowed values are: {&amp;lsquo;split&amp;rsquo;,&amp;rsquo;records&amp;rsquo;,&amp;rsquo;index&amp;rsquo;,&amp;rsquo;columns&amp;rsquo;,&amp;rsquo;values&amp;rsquo;,&amp;rsquo;table&amp;rsquo;}</source>
          <target state="translated">허용되는 값은 { 'split', 'records', 'index', 'columns', 'values', 'table'}입니다.</target>
        </trans-unit>
        <trans-unit id="7b4d4169a816e702e75ecec56d7d51d847c3bda7" translate="yes" xml:space="preserve">
          <source>allowed values are: {&amp;lsquo;split&amp;rsquo;,&amp;rsquo;records&amp;rsquo;,&amp;rsquo;index&amp;rsquo;,&amp;rsquo;table&amp;rsquo;}</source>
          <target state="translated">허용되는 값은 { 'split', 'records', 'index', 'table'}입니다.</target>
        </trans-unit>
        <trans-unit id="11b27b3ea879a27786419b3cb7b8c1ad880abd85" translate="yes" xml:space="preserve">
          <source>amount of transparency applied</source>
          <target state="translated">적용된 투명도</target>
        </trans-unit>
        <trans-unit id="306841b315291f7caaffeb39e878f6c76493b22b" translate="yes" xml:space="preserve">
          <source>an instance of &lt;code&gt;CategoricalDtype&lt;/code&gt;.</source>
          <target state="translated">의 인스턴스 &lt;code&gt;CategoricalDtype&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bc8a5d18fc6388b455dbf4c36a039e7b0c42336" translate="yes" xml:space="preserve">
          <source>an ndarray</source>
          <target state="translated">Ndarray</target>
        </trans-unit>
        <trans-unit id="c1d0241e5e1de71794cb14c648de1b823d6980c4" translate="yes" xml:space="preserve">
          <source>and returning a float</source>
          <target state="translated">플로트를 반환</target>
        </trans-unit>
        <trans-unit id="f93dec143c6320f0f6794318d09302d80c3ff610" translate="yes" xml:space="preserve">
          <source>and returning a float. Note that the returned matrix from corr will have 1 along the diagonals and will be symmetric regardless of the callable&amp;rsquo;s behavior .. versionadded:: 0.24.0</source>
          <target state="translated">플로트를 반환합니다. corr에서 반환 된 행렬은 대각선을 따라 1을 가지며 콜 러블의 동작에 관계없이 대칭입니다 .. versionadded :: 0.24.0</target>
        </trans-unit>
        <trans-unit id="8c8a69b0ef138d1984bf97c4c13192f8f00adfef" translate="yes" xml:space="preserve">
          <source>and then running:</source>
          <target state="translated">그런 다음 실행 중입니다.</target>
        </trans-unit>
        <trans-unit id="28a7dbc3c3bbdb58be7401b29b20f9bb5303bb67" translate="yes" xml:space="preserve">
          <source>api.extensions.ExtensionArray[source]</source>
          <target state="translated">api.extensions.ExtensionArray[source]</target>
        </trans-unit>
        <trans-unit id="93b9005c9a4332027627abb214b93139c8fa4f5c" translate="yes" xml:space="preserve">
          <source>api.extensions.ExtensionDtype[source]</source>
          <target state="translated">api.extensions.ExtensionDtype[source]</target>
        </trans-unit>
        <trans-unit id="88f427ff62dffefd6aeee7b206a6d2cb63de4755" translate="yes" xml:space="preserve">
          <source>append: Insert new values to the existing table.</source>
          <target state="translated">추가 : 기존 테이블에 새 값을 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="07d9b8e96b35f07d644a1dd0c5032dc3f7bcec86" translate="yes" xml:space="preserve">
          <source>applied when &lt;code&gt;cond&lt;/code&gt; returns false</source>
          <target state="translated">&lt;code&gt;cond&lt;/code&gt; 가 false를 반환 할 때 적용</target>
        </trans-unit>
        <trans-unit id="c80aef1977e5cf4b0874986927ac4ddaa47ae83f" translate="yes" xml:space="preserve">
          <source>applied when &lt;code&gt;cond&lt;/code&gt; returns true</source>
          <target state="translated">&lt;code&gt;cond&lt;/code&gt; 가 true를 반환 할 때 적용</target>
        </trans-unit>
        <trans-unit id="3226cfc1f4cad6ffe139426b3c0ee64182023102" translate="yes" xml:space="preserve">
          <source>apply the specified dropna operation before counting which row is the nth row. Needs to be None, &amp;lsquo;any&amp;rsquo; or &amp;lsquo;all&amp;rsquo;</source>
          <target state="translated">어떤 행이 n 번째 행인지 계산하기 전에 지정된 dropna 연산을 적용하십시오. None, 'any'또는 'all'이어야 함</target>
        </trans-unit>
        <trans-unit id="d48353f6a40d1721ff9bde322144a5437cb6d608" translate="yes" xml:space="preserve">
          <source>apply to each column (&lt;code&gt;axis=0&lt;/code&gt; or &lt;code&gt;'index'&lt;/code&gt;), to each row (&lt;code&gt;axis=1&lt;/code&gt; or &lt;code&gt;'columns'&lt;/code&gt;), or to the entire DataFrame at once with &lt;code&gt;axis=None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;axis=None&lt;/code&gt; 으로 각 열 ( &lt;code&gt;axis=0&lt;/code&gt; 또는 &lt;code&gt;'index'&lt;/code&gt; ), 각 행 ( &lt;code&gt;axis=1&lt;/code&gt; 또는 &lt;code&gt;'columns'&lt;/code&gt; ) 또는 전체 DataFrame에 한 번에 적용 합니다.</target>
        </trans-unit>
        <trans-unit id="28646b3f5fa6eeead4d86ffe347d4b7b2af6f213" translate="yes" xml:space="preserve">
          <source>argsort / _values_for_argsort</source>
          <target state="translated">argsort / _values_for_argsort</target>
        </trans-unit>
        <trans-unit id="8717eb9fb34290564de45cc430974da8a1c2a01e" translate="yes" xml:space="preserve">
          <source>array of ints</source>
          <target state="translated">정수 배열</target>
        </trans-unit>
        <trans-unit id="12145c7b38e49bf9343c7e0fa21a5d94a86aec6b" translate="yes" xml:space="preserve">
          <source>array type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="942a99a470e5c5584e2f7646ef685c82e0205089" translate="yes" xml:space="preserve">
          <source>array-like</source>
          <target state="translated">array-like</target>
        </trans-unit>
        <trans-unit id="216e7c1e7b569bcbbd0c2c85d23cf92a263ca1b2" translate="yes" xml:space="preserve">
          <source>array-like : The shape of &lt;code&gt;threshold&lt;/code&gt; should match the object it&amp;rsquo;s compared to. When &lt;code&gt;self&lt;/code&gt; is a Series, &lt;code&gt;threshold&lt;/code&gt; should be the length. When &lt;code&gt;self&lt;/code&gt; is a DataFrame, &lt;code&gt;threshold&lt;/code&gt; should 2-D and the same shape as &lt;code&gt;self&lt;/code&gt; for &lt;code&gt;axis=None&lt;/code&gt;, or 1-D and the same length as the axis being compared.</source>
          <target state="translated">array-like : &lt;code&gt;threshold&lt;/code&gt; 의 모양이 비교할 객체와 일치해야합니다. 때 &lt;code&gt;self&lt;/code&gt; 일련이며, &lt;code&gt;threshold&lt;/code&gt; 길이이어야한다. 되면 &lt;code&gt;self&lt;/code&gt; DataFrame이고, &lt;code&gt;threshold&lt;/code&gt; 2-D와 같은 형상으로한다 &lt;code&gt;self&lt;/code&gt; 위한 &lt;code&gt;axis=None&lt;/code&gt; , 1-D 또는 상기 축과 같은 길이가 비교된다.</target>
        </trans-unit>
        <trans-unit id="d98947d13d1644f94331cf7cbd49d98feaad8499" translate="yes" xml:space="preserve">
          <source>array: numpy.ndarray or ExtensionArray</source>
          <target state="translated">배열 : numpy.ndarray 또는 ExtensionArray</target>
        </trans-unit>
        <trans-unit id="e0fcea2804706fb6a89cffbf68d910560e9036d9" translate="yes" xml:space="preserve">
          <source>arrays.DatetimeArray()</source>
          <target state="translated">arrays.DatetimeArray()</target>
        </trans-unit>
        <trans-unit id="6ee66389bbf8e281955c91075a4f4daa208e9069" translate="yes" xml:space="preserve">
          <source>arrays.IntegerArray()</source>
          <target state="translated">arrays.IntegerArray()</target>
        </trans-unit>
        <trans-unit id="7269be488c459303166baae75ea0992ea3057771" translate="yes" xml:space="preserve">
          <source>arrays.IntervalArray[source]</source>
          <target state="translated">arrays.IntervalArray[source]</target>
        </trans-unit>
        <trans-unit id="0a63649fde342c9cf5e155c58e9018ccce14eff8" translate="yes" xml:space="preserve">
          <source>arrays.PandasArray()</source>
          <target state="translated">arrays.PandasArray()</target>
        </trans-unit>
        <trans-unit id="7f2b79c8f3194887c1469b485ebe405cbc893397" translate="yes" xml:space="preserve">
          <source>arrays.PeriodArray()</source>
          <target state="translated">arrays.PeriodArray()</target>
        </trans-unit>
        <trans-unit id="b56d85b685cb476d3ffad5c922008431268e8c74" translate="yes" xml:space="preserve">
          <source>arrays.TimedeltaArray()</source>
          <target state="translated">arrays.TimedeltaArray()</target>
        </trans-unit>
        <trans-unit id="13dd19122ab128e701acc49aa5833a366f94e168" translate="yes" xml:space="preserve">
          <source>as_matrix)</source>
          <target state="translated">as_matrix)</target>
        </trans-unit>
        <trans-unit id="ff68d881651cb08130aff0faa867f7269bd2e7b8" translate="yes" xml:space="preserve">
          <source>average: average rank of group</source>
          <target state="translated">평균 : 그룹의 평균 순위</target>
        </trans-unit>
        <trans-unit id="3d8a8c581b06fe6cbfddbd66371015bafd16db2c" translate="yes" xml:space="preserve">
          <source>average: average rank of the group</source>
          <target state="translated">평균 : 그룹의 평균 순위</target>
        </trans-unit>
        <trans-unit id="0ab52e936d9488b9058d5f2440f64656fb1684ad" translate="yes" xml:space="preserve">
          <source>axis : {0 or &amp;lsquo;index&amp;rsquo;, 1 or &amp;lsquo;columns&amp;rsquo;, None}, default None</source>
          <target state="translated">축 : {0 또는 '인덱스', 1 또는 '열', 없음}, 기본값 없음</target>
        </trans-unit>
        <trans-unit id="e71f86e7beaf058258ae34b0b21405f490c19887" translate="yes" xml:space="preserve">
          <source>backfill / bfill: use NEXT index value if no exact match</source>
          <target state="translated">백필 / bfill : 정확히 일치하지 않으면 NEXT 인덱스 값을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="59e6bc9d1a353b2f733f8ee7978bed28314d7c7c" translate="yes" xml:space="preserve">
          <source>backfill / bfill: use next valid observation to fill gap</source>
          <target state="translated">백필 / bfill : 다음 유효한 관찰을 사용하여 간격을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="cf73c128b9b52c20e87f75a2f108f37a963f8706" translate="yes" xml:space="preserve">
          <source>before_cellstyle</source>
          <target state="translated">before_cellstyle</target>
        </trans-unit>
        <trans-unit id="c33d42963c402a0dd31e7522ec17fdc937a73aa9" translate="yes" xml:space="preserve">
          <source>before_head_rows</source>
          <target state="translated">before_head_rows</target>
        </trans-unit>
        <trans-unit id="fd1b079d4e6c2a51537964d042424de052a0d12b" translate="yes" xml:space="preserve">
          <source>before_rows</source>
          <target state="translated">before_rows</target>
        </trans-unit>
        <trans-unit id="edd2e9f8f26c26459dffa07e6a139efb90f009c4" translate="yes" xml:space="preserve">
          <source>before_style</source>
          <target state="translated">before_style</target>
        </trans-unit>
        <trans-unit id="cf9b7a9ab136921a880da7060f6631a1968fbbff" translate="yes" xml:space="preserve">
          <source>before_table</source>
          <target state="translated">before_table</target>
        </trans-unit>
        <trans-unit id="7e57cfe843145135aee1f4d0d63ceb7842093712" translate="yes" xml:space="preserve">
          <source>binary</source>
          <target state="translated">binary</target>
        </trans-unit>
        <trans-unit id="2232b22bf948232d7f95373a85375de40a574b3b" translate="yes" xml:space="preserve">
          <source>blosc</source>
          <target state="translated">blosc</target>
        </trans-unit>
        <trans-unit id="02083f4579e08a612425c0c1a17ee47add783b94" translate="yes" xml:space="preserve">
          <source>body</source>
          <target state="translated">body</target>
        </trans-unit>
        <trans-unit id="5039d155a71c0a5f7a2b2654ad49cb7ee47a8980" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="translated">bool</target>
        </trans-unit>
        <trans-unit id="a19bdd06b060f70e1c9f515b950042b9247147f0" translate="yes" xml:space="preserve">
          <source>bool contains flags to determine if time is dst or not (note that this flag is only applicable for ambiguous fall dst dates)</source>
          <target state="translated">bool에는 시간이 dst인지 여부를 판별하는 플래그가 포함되어 있습니다 (이 플래그는 모호한 dst 날짜에만 적용 가능함).</target>
        </trans-unit>
        <trans-unit id="87e632f3179c07ced93d2599fda9a64af0719a67" translate="yes" xml:space="preserve">
          <source>bool or array-like of bool</source>
          <target state="translated">부울 또는 부울의 배열</target>
        </trans-unit>
        <trans-unit id="a9f6fa1d0a387c444753833a5bb5b36ec14d3cfe" translate="yes" xml:space="preserve">
          <source>bool or ndarray</source>
          <target state="translated">부울 또는 ndarray</target>
        </trans-unit>
        <trans-unit id="79d09674344709a525fd45b9340ed28b333c707a" translate="yes" xml:space="preserve">
          <source>bool-ndarray where True signifies a DST time, False designates a non-DST time (note that this flag is only applicable for ambiguous times)</source>
          <target state="translated">bool-ndarray 여기서 True는 DST 시간을 나타내고 False는 DST 이외의 시간을 나타냅니다 (이 플래그는 모호한 시간에만 적용 가능함)</target>
        </trans-unit>
        <trans-unit id="f6dbfd877372f87384c7453339b2c71c87276747" translate="yes" xml:space="preserve">
          <source>bool-ndarray where True signifies a DST time, False signifies a non-DST time (note that this flag is only applicable for ambiguous times)</source>
          <target state="translated">bool-ndarray 여기서 True는 DST 시간을 나타내고 False는 DST 이외의 시간을 나타냅니다 (이 플래그는 모호한 시간에만 적용됨)</target>
        </trans-unit>
        <trans-unit id="222e686e5997516b282570151b9200cab2b39c0b" translate="yes" xml:space="preserve">
          <source>bool. If True -&amp;gt; try parsing the index.</source>
          <target state="translated">부울. True이면-&amp;gt; 인덱스를 구문 분석하십시오.</target>
        </trans-unit>
        <trans-unit id="48647474b89fa8f56ed6bda0f8148a17b51b97bd" translate="yes" xml:space="preserve">
          <source>boolean</source>
          <target state="translated">boolean</target>
        </trans-unit>
        <trans-unit id="d4f8d19ccd13318d38a5459d5f99cdb05420e814" translate="yes" xml:space="preserve">
          <source>boolean array</source>
          <target state="translated">부울 배열</target>
        </trans-unit>
        <trans-unit id="6d08ff419841aad18e12caaa9fb8ed0ba5515cd2" translate="yes" xml:space="preserve">
          <source>boolean. If True -&amp;gt; try parsing the index.</source>
          <target state="translated">부울. True이면-&amp;gt; 인덱스를 구문 분석하십시오.</target>
        </trans-unit>
        <trans-unit id="948d7dff670a9172846239a49fd93e889ee7c750" translate="yes" xml:space="preserve">
          <source>bottom: assign highest rank to NaN values if ascending</source>
          <target state="translated">bottom : 오름차순 인 경우 NaN 값에 최고 순위 지정</target>
        </trans-unit>
        <trans-unit id="8db630b2fa25fbac6db66496b2a6e39a96500f46" translate="yes" xml:space="preserve">
          <source>bottom: smallest rank if descending</source>
          <target state="translated">하단 : 내림차순으로 가장 작은 순위</target>
        </trans-unit>
        <trans-unit id="0dc98bfe676a06905551a0fcc9ee8fb53f166099" translate="yes" xml:space="preserve">
          <source>break_long_words = False</source>
          <target state="translated">break_long_words = 거짓</target>
        </trans-unit>
        <trans-unit id="2ca9e6ee4ff04bf13d31848e1137bd837f8db16d" translate="yes" xml:space="preserve">
          <source>break_on_hyphens = False</source>
          <target state="translated">break_on_hyphens = 거짓</target>
        </trans-unit>
        <trans-unit id="11e2a3cdc620965c89bd30a1aee1cb2b6defe50d" translate="yes" xml:space="preserve">
          <source>by-default copy the data, this is compat only and ignored</source>
          <target state="translated">기본적으로 데이터를 복사합니다. 이것은 compat 전용이며 무시됩니다</target>
        </trans-unit>
        <trans-unit id="a6ac27575bfefaa949a22069b958018290ec6ae9" translate="yes" xml:space="preserve">
          <source>bysort</source>
          <target state="translated">bysort</target>
        </trans-unit>
        <trans-unit id="daf529a73101c2be626b99fc6938163e7a27620b" translate="yes" xml:space="preserve">
          <source>bytes</source>
          <target state="translated">bytes</target>
        </trans-unit>
        <trans-unit id="72cd8d65f7c97849370d3b897063beaf3efc417e" translate="yes" xml:space="preserve">
          <source>bytes used</source>
          <target state="translated">사용 된 바이트</target>
        </trans-unit>
        <trans-unit id="ab0c1ada844d6ca288c154eb270f994d79397559" translate="yes" xml:space="preserve">
          <source>call &lt;code&gt;result = op(values, ExtensionArray)&lt;/code&gt;</source>
          <target state="translated">호출 &lt;code&gt;result = op(values, ExtensionArray)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="021ce54cf4460e3d6551baea02d784522d9a994c" translate="yes" xml:space="preserve">
          <source>callable</source>
          <target state="translated">callable</target>
        </trans-unit>
        <trans-unit id="9e9b0d6ba8364a3e3f9e222efb42ddb61497290f" translate="yes" xml:space="preserve">
          <source>callable : a callable that is called on all items in the old categories and whose return values comprise the new categories.</source>
          <target state="translated">callable : 이전 범주의 모든 항목에서 호출되고 반환 값이 새 범주를 구성하는 호출 가능.</target>
        </trans-unit>
        <trans-unit id="0c8bcf686ff47bd51d0b2a18bcadd45b862e2565" translate="yes" xml:space="preserve">
          <source>callable with signature &lt;code&gt;(pd_table, conn, keys, data_iter)&lt;/code&gt;.</source>
          <target state="translated">서명으로 호출 가능 &lt;code&gt;(pd_table, conn, keys, data_iter)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6b241c77386a16c561389a0a08fc9d13955b9ae2" translate="yes" xml:space="preserve">
          <source>callable: callable with input two 1d ndarrays</source>
          <target state="translated">호출 가능 : 2 개의 1d ndarray 입력으로 호출 가능</target>
        </trans-unit>
        <trans-unit id="c9a98bc13ad91667f43043c54c39114ed8d09392" translate="yes" xml:space="preserve">
          <source>callable: called with the value of an individual cell</source>
          <target state="translated">호출 가능 : 개별 셀의 값으로 호출</target>
        </trans-unit>
        <trans-unit id="e5c8438ec8bab99cf47492ad7dd21e3f111f6ede" translate="yes" xml:space="preserve">
          <source>caption</source>
          <target state="translated">caption</target>
        </trans-unit>
        <trans-unit id="37fa780ff092fe10f8b0993f114413f8027a7c13" translate="yes" xml:space="preserve">
          <source>caption to attach to the table</source>
          <target state="translated">테이블에 첨부 할 캡션</target>
        </trans-unit>
        <trans-unit id="7baec8f44d3c98ebffad676dfab6491a89131fe7" translate="yes" xml:space="preserve">
          <source>captions</source>
          <target state="translated">captions</target>
        </trans-unit>
        <trans-unit id="9d989e8d27dc9e0ec3389fc855f142c3d40f0c50" translate="yes" xml:space="preserve">
          <source>cat</source>
          <target state="translated">cat</target>
        </trans-unit>
        <trans-unit id="5be4eaf45438af8c5d689d4cd8a1f93cf1d13021" translate="yes" xml:space="preserve">
          <source>categorical</source>
          <target state="translated">categorical</target>
        </trans-unit>
        <trans-unit id="5ccbf9c9c5fc1bc34df8238a97094968f38f5165" translate="yes" xml:space="preserve">
          <source>category</source>
          <target state="translated">category</target>
        </trans-unit>
        <trans-unit id="6e6172eeaf7b89956b6b541b9e9efe62d1312252" translate="yes" xml:space="preserve">
          <source>category[T]</source>
          <target state="translated">category[T]</target>
        </trans-unit>
        <trans-unit id="d141a0626faf9f0aaa16e8ffd2517098d1947d0a" translate="yes" xml:space="preserve">
          <source>cellstyle</source>
          <target state="translated">cellstyle</target>
        </trans-unit>
        <trans-unit id="305047e96ec089021660ee5965f893ac80268731" translate="yes" xml:space="preserve">
          <source>center</source>
          <target state="translated">center</target>
        </trans-unit>
        <trans-unit id="94dbe0b609c8835bf46415054b98b602747dda74" translate="yes" xml:space="preserve">
          <source>collections.abc.Mapping</source>
          <target state="translated">collections.abc.Mapping</target>
        </trans-unit>
        <trans-unit id="aa60230ab00282b5a1f3f1993b2d1c503e7d15a5" translate="yes" xml:space="preserve">
          <source>column</source>
          <target state="translated">column</target>
        </trans-unit>
        <trans-unit id="eb31a69dbe0031422887fa6a2ff319c57f84c554" translate="yes" xml:space="preserve">
          <source>column names to designate as the primary key. The default &lt;code&gt;None&lt;/code&gt; will set &lt;code&gt;&amp;lsquo;primaryKey&amp;rsquo;&lt;/code&gt; to the index level or levels if the index is unique.</source>
          <target state="translated">기본 키로 지정할 열 이름. 기본 &lt;code&gt;None&lt;/code&gt; 은 인덱스가 고유 한 경우 &lt;code&gt;&amp;lsquo;primaryKey&amp;rsquo;&lt;/code&gt; 를 인덱스 레벨로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="4f1b1dbedec9c3b99e9ddb2477a8188aa8eba202" translate="yes" xml:space="preserve">
          <source>columns</source>
          <target state="translated">columns</target>
        </trans-unit>
        <trans-unit id="6ff16b36dc77810e63bda254427a1d6965fa127a" translate="yes" xml:space="preserve">
          <source>complex</source>
          <target state="translated">complex</target>
        </trans-unit>
        <trans-unit id="0aa018222dafc6a7ff38f1424ccb96e100bb0441" translate="yes" xml:space="preserve">
          <source>compress the range by these values.</source>
          <target state="translated">이 값으로 범위를 압축하십시오.</target>
        </trans-unit>
        <trans-unit id="a19feeeb16d2e5c190761b94c68868241d50bf67" translate="yes" xml:space="preserve">
          <source>compression)</source>
          <target state="translated">compression)</target>
        </trans-unit>
        <trans-unit id="a3a6d933d976b146ecbb9fdc0d2d6146cda6767e" translate="yes" xml:space="preserve">
          <source>compute.[use_bottleneck, use_numexpr]</source>
          <target state="translated">계산합니다. [use_bottleneck, use_numexpr]</target>
        </trans-unit>
        <trans-unit id="4f08ad2a59eafa3f5b4814df56c3556a56241881" translate="yes" xml:space="preserve">
          <source>configuration = {&amp;lsquo;query&amp;rsquo;: {&amp;lsquo;useQueryCache&amp;rsquo;: False}}</source>
          <target state="translated">구성 = { 'query': { 'useQueryCache': False}}</target>
        </trans-unit>
        <trans-unit id="58cfc8163522a4089c7b51df30c6a18ddc15a7e5" translate="yes" xml:space="preserve">
          <source>construct_array_type</source>
          <target state="translated">construct_array_type</target>
        </trans-unit>
        <trans-unit id="679ebc569848a8b8eabee59ce5510bd2003ed6a3" translate="yes" xml:space="preserve">
          <source>construct_from_string</source>
          <target state="translated">construct_from_string</target>
        </trans-unit>
        <trans-unit id="f84e2e2dadd87384fb55f25886926b777e8378f1" translate="yes" xml:space="preserve">
          <source>copy</source>
          <target state="translated">copy</target>
        </trans-unit>
        <trans-unit id="b9fbf61b94064bee4f32c354b5ce9c119a0b6156" translate="yes" xml:space="preserve">
          <source>copy the data</source>
          <target state="translated">데이터를 복사</target>
        </trans-unit>
        <trans-unit id="a0de739acee2497e2b4f8fd3113cc36e3188ba5d" translate="yes" xml:space="preserve">
          <source>cyberpandas</source>
          <target state="translated">cyberpandas</target>
        </trans-unit>
        <trans-unit id="37a7e934bf0ededd92616da09502eb6f3e7db8f1" translate="yes" xml:space="preserve">
          <source>data set</source>
          <target state="translated">데이터 세트</target>
        </trans-unit>
        <trans-unit id="8d1602fed7b6039d750425defaae668d323cb1e4" translate="yes" xml:space="preserve">
          <source>data.dtype</source>
          <target state="translated">data.dtype</target>
        </trans-unit>
        <trans-unit id="58431a7c54a18d1f90386ec0f9e02e2660606ae3" translate="yes" xml:space="preserve">
          <source>data: contains a numpy integer array of the appropriate dtype</source>
          <target state="translated">데이터 : 적절한 dtype의 numpy 정수 배열을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="e927d0677c77241b707442314346326278051dd6" translate="yes" xml:space="preserve">
          <source>date</source>
          <target state="translated">date</target>
        </trans-unit>
        <trans-unit id="816612369e61701a56dca5732acf50e12ef1acf2" translate="yes" xml:space="preserve">
          <source>date + BDay(0) == BDay.rollforward(date)</source>
          <target state="translated">날짜 + BDay (0) == BDay.rollforward (날짜)</target>
        </trans-unit>
        <trans-unit id="5b7338178ac5aa9db00b095a8b4eacf6135ca2e5" translate="yes" xml:space="preserve">
          <source>date = rollback(date) # does nothing if date is valid return date + &amp;lt;n number of periods&amp;gt;</source>
          <target state="translated">date = rollback (date) # 날짜가 유효한 반환 날짜 + &amp;lt;n 기간 수&amp;gt; 인 경우 아무 작업도 수행하지 않습니다</target>
        </trans-unit>
        <trans-unit id="46b64bee465cee372dfd408647726eb21430ad9e" translate="yes" xml:space="preserve">
          <source>date = rollforward(date) # does nothing is date is valid return date + &amp;lt;n number of periods&amp;gt;</source>
          <target state="translated">날짜 = 롤 포워드 (날짜) # 날짜가 유효하지 않음 반환 날짜 + &amp;lt;n 기간 수&amp;gt;</target>
        </trans-unit>
        <trans-unit id="9b60fa62d5302d2317cc2d23ce13299d52019510" translate="yes" xml:space="preserve">
          <source>date corresponding to a proleptic Gregorian ordinal</source>
          <target state="translated">proleptic 그레고리력 서수에 해당하는 날짜</target>
        </trans-unit>
        <trans-unit id="aaf2380c0fc8c2f6b4573c1ec8628184a6d72557" translate="yes" xml:space="preserve">
          <source>date, time -&amp;gt; datetime with same date and time fields</source>
          <target state="translated">날짜, 시간-&amp;gt; 날짜 및 시간 필드가 동일한 datetime</target>
        </trans-unit>
        <trans-unit id="89ffad089c042f31dcc81269da38bef3ca44ab1f" translate="yes" xml:space="preserve">
          <source>datetime</source>
          <target state="translated">datetime</target>
        </trans-unit>
        <trans-unit id="e6efbb61348f24afba1c8ddd30d2ad8be7bcb213" translate="yes" xml:space="preserve">
          <source>datetime.date</source>
          <target state="translated">datetime.date</target>
        </trans-unit>
        <trans-unit id="53910fb46a116dbf1909866b879783e783b61217" translate="yes" xml:space="preserve">
          <source>datetime.datetime</source>
          <target state="translated">datetime.datetime</target>
        </trans-unit>
        <trans-unit id="7aa220c0303fac5e8b4de9d5804f64dc59b4956b" translate="yes" xml:space="preserve">
          <source>datetime.time</source>
          <target state="translated">datetime.time</target>
        </trans-unit>
        <trans-unit id="1fc9e8eb1cd8948bf8678d1f51b39845b917f7f1" translate="yes" xml:space="preserve">
          <source>datetime.time or string in appropriate format (&amp;ldquo;%H:%M&amp;rdquo;, &amp;ldquo;%H%M&amp;rdquo;, &amp;ldquo;%I:%M%p&amp;rdquo;, &amp;ldquo;%I%M%p&amp;rdquo;, &amp;ldquo;%H:%M:%S&amp;rdquo;, &amp;ldquo;%H%M%S&amp;rdquo;, &amp;ldquo;%I:%M:%S%p&amp;rdquo;, &amp;ldquo;%I%M%S%p&amp;rdquo;).</source>
          <target state="translated">적절한 형식의 datetime.time 또는 문자열 (&amp;ldquo;% H : % M&amp;rdquo;,&amp;ldquo;% H % M&amp;rdquo;,&amp;ldquo;% I : % M % p&amp;rdquo;,&amp;ldquo;% I % M % p&amp;rdquo;,&amp;ldquo;% H : % M : % S&amp;rdquo;,&amp;ldquo;% H % M % S&amp;rdquo;,&amp;ldquo;% I : % M : % S % p&amp;rdquo;,&amp;ldquo;% I % M % S % p&amp;rdquo;).</target>
        </trans-unit>
        <trans-unit id="3f0104c3ae690c900897cfff32dcdbbb5ba029cd" translate="yes" xml:space="preserve">
          <source>datetime.timedelta</source>
          <target state="translated">datetime.timedelta</target>
        </trans-unit>
        <trans-unit id="0fb3ae40f588133ae5802cbed8f9fd6a649b4fbf" translate="yes" xml:space="preserve">
          <source>datetime.timedelta or numpy.array of datetime.timedelta</source>
          <target state="translated">datetime.timedelta 또는 datetime.timedelta의 numpy.array</target>
        </trans-unit>
        <trans-unit id="e44b3722a7390f248cc0919a5cd1649f32c365a9" translate="yes" xml:space="preserve">
          <source>datetime.tzinfo, pytz.tzinfo.BaseTZInfo, dateutil.tz.tz.tzfile, or None</source>
          <target state="translated">datetime.tzinfo, pytz.tzinfo.BaseTZInfo, dateutil.tz.tz.tz 파일 또는 없음</target>
        </trans-unit>
        <trans-unit id="17e71b5cb64b28aea54d0c08ecadc4b107161a2d" translate="yes" xml:space="preserve">
          <source>datetime64</source>
          <target state="translated">datetime64</target>
        </trans-unit>
        <trans-unit id="e4e03a2ae12ced7b834afd93fdce32a99f5cd107" translate="yes" xml:space="preserve">
          <source>datetime64[ns, tz]</source>
          <target state="translated">datetime64 [ns, tz]</target>
        </trans-unit>
        <trans-unit id="7e27504844123f60d4b8ff6cd1297b22ab28d3bd" translate="yes" xml:space="preserve">
          <source>datetime64[ns]</source>
          <target state="translated">datetime64[ns]</target>
        </trans-unit>
        <trans-unit id="a2620cbc10f5198dd03e3f5a1569eb5dcf9a6a87" translate="yes" xml:space="preserve">
          <source>day</source>
          <target state="translated">day</target>
        </trans-unit>
        <trans-unit id="5548ae4f34cbb6e30414532924e2088d915b460f" translate="yes" xml:space="preserve">
          <source>days</source>
          <target state="translated">days</target>
        </trans-unit>
        <trans-unit id="45932d6fa98f39c5cd3f08cd951d8dc70fc5f7de" translate="yes" xml:space="preserve">
          <source>decimal</source>
          <target state="translated">decimal</target>
        </trans-unit>
        <trans-unit id="f3c06e2b6b3586b1fa2de5819bd6966722a11efe" translate="yes" xml:space="preserve">
          <source>decimal.Decimal</source>
          <target state="translated">decimal.Decimal</target>
        </trans-unit>
        <trans-unit id="fb5c2b2537654d1a04f24f6460a5a1b9c6419ba7" translate="yes" xml:space="preserve">
          <source>def __add__(date):</source>
          <target state="translated">데프 __add __ (날짜) :</target>
        </trans-unit>
        <trans-unit id="3322c4f58452d135c34c8d7806b766219c8daec7" translate="yes" xml:space="preserve">
          <source>default is &amp;lsquo;columns&amp;rsquo;</source>
          <target state="translated">기본값은 '열'입니다</target>
        </trans-unit>
        <trans-unit id="e786964741eaeb3a9488626c1030891f9bb2b9a9" translate="yes" xml:space="preserve">
          <source>default is &amp;lsquo;index&amp;rsquo;</source>
          <target state="translated">기본값은 '인덱스'입니다</target>
        </trans-unit>
        <trans-unit id="4c8c999aecbfb8a0405f9596260ac19b117043fc" translate="yes" xml:space="preserve">
          <source>default is &lt;code&gt;'columns'&lt;/code&gt;</source>
          <target state="translated">기본값은 &lt;code&gt;'columns'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="78766b662dce941510eb16a97552b2cddc9a4a2d" translate="yes" xml:space="preserve">
          <source>default is &lt;code&gt;'index'&lt;/code&gt;</source>
          <target state="translated">기본값은 &lt;code&gt;'index'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="67a8e06a3758145b99e10325cfb923bc048bb753" translate="yes" xml:space="preserve">
          <source>default: exact matches only.</source>
          <target state="translated">기본값 : 정확히 일치합니다.</target>
        </trans-unit>
        <trans-unit id="e762759dc5a3a39c9915c6077067e546b482c8fe" translate="yes" xml:space="preserve">
          <source>default: matches where the label is within an interval only.</source>
          <target state="translated">기본값 : 레이블이 간격 내에있는 위치와 만 일치합니다.</target>
        </trans-unit>
        <trans-unit id="c3c69fb4214c8ed5a226b32f99f24ae28f3203a2" translate="yes" xml:space="preserve">
          <source>default_rank: this is the default behaviour obtained without using any parameter.</source>
          <target state="translated">default_rank : 이것은 매개 변수를 사용하지 않고 얻은 기본 동작입니다.</target>
        </trans-unit>
        <trans-unit id="225bfc6cfe8554a7b9bd370306e1982e7eac0afa" translate="yes" xml:space="preserve">
          <source>definition self.</source>
          <target state="translated">정의 자기.</target>
        </trans-unit>
        <trans-unit id="4bc651aa687a145ec88e53e86d10ab6b440f49b0" translate="yes" xml:space="preserve">
          <source>degrees of freedom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abad4fc93d2dc37efc2fbef2a221496c4f5406c1" translate="yes" xml:space="preserve">
          <source>dense: like &amp;lsquo;min&amp;rsquo;, but rank always increases by 1 between groups</source>
          <target state="translated">밀도 : '최소'와 같지만 그룹 간 순위는 항상 1 씩 증가합니다.</target>
        </trans-unit>
        <trans-unit id="7bf9f6ce97242d77dc756bf3fedcd1ec02cb4d9a" translate="yes" xml:space="preserve">
          <source>df1 differs from df2 as column &amp;lsquo;b&amp;rsquo; is of a different type.</source>
          <target state="translated">열 'b'가 다른 유형이므로 df1이 df2와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5401e1aad6ec4d09e4d7ad0f3d2b7faa6c3f6a87" translate="yes" xml:space="preserve">
          <source>df1 equals itself.</source>
          <target state="translated">df1은 그 자체와 같습니다.</target>
        </trans-unit>
        <trans-unit id="b6ad6d2c058eb2ee863119150ff2b2fbc3e4718c" translate="yes" xml:space="preserve">
          <source>df: DataFrame</source>
          <target state="translated">df : DataFrame</target>
        </trans-unit>
        <trans-unit id="76e94348139b788d21edc7b9cd011af238d0de03" translate="yes" xml:space="preserve">
          <source>dict</source>
          <target state="translated">dict</target>
        </trans-unit>
        <trans-unit id="f6bf37907bbde342c67bce12e18b9ea9e184584b" translate="yes" xml:space="preserve">
          <source>dict of axis labels -&amp;gt; functions, function names or list of such.</source>
          <target state="translated">축 레이블 dict-&amp;gt; 함수, 함수 이름 또는 해당 목록.</target>
        </trans-unit>
        <trans-unit id="1dd3f6e77dc6ab33d18dc75879f9eb32f27dd3b5" translate="yes" xml:space="preserve">
          <source>dict of key/value = group key/DataFrame.boxplot return value</source>
          <target state="translated">키 / 값 dict = 그룹 키 /DataFrame.boxplot 반환 값</target>
        </trans-unit>
        <trans-unit id="38bcbf7f5bb099df5611061bd4d7f3d52f5a9fba" translate="yes" xml:space="preserve">
          <source>dict of {str : int}</source>
          <target state="translated">{str : int}의 dict</target>
        </trans-unit>
        <trans-unit id="86d7a76b2ea5d3da57d5910d9a85a67f55b86cbb" translate="yes" xml:space="preserve">
          <source>dict, e.g. {&amp;lsquo;foo&amp;rsquo; : [1, 3]} -&amp;gt; parse columns 1, 3 as date and call result &amp;lsquo;foo&amp;rsquo;</source>
          <target state="translated">dict, 예 : { 'foo': [1, 3]}-&amp;gt; 열 1, 3을 날짜로 구문 분석하고 결과 'foo'를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="964100a92019918e9ebe70297be4fbc8a47e31af" translate="yes" xml:space="preserve">
          <source>dict, list or collections.abc.Mapping</source>
          <target state="translated">dict, list 또는 collections.abc.Mapping</target>
        </trans-unit>
        <trans-unit id="72bb937447dfba273042dee0a801df9a1b6c3e0f" translate="yes" xml:space="preserve">
          <source>dict-like or functions are transformations to apply to the index. Scalar or hashable sequence-like will alter the &lt;code&gt;Series.name&lt;/code&gt; attribute.</source>
          <target state="translated">dict-like 또는 함수는 인덱스에 적용 할 변환입니다. 스칼라 또는 해시 가능 시퀀스와 같이 &lt;code&gt;Series.name&lt;/code&gt; 속성 이 변경됩니다 .</target>
        </trans-unit>
        <trans-unit id="12d466bc9deadc1eeb8837490d4e0995ba4639f2" translate="yes" xml:space="preserve">
          <source>dict-like: specifies a mapping from old categories to new. Categories not contained in the mapping are passed through and extra categories in the mapping are ignored.</source>
          <target state="translated">dict-like : 이전 카테고리에서 새로운 카테고리로의 맵핑을 지정합니다. 매핑에 포함되지 않은 범주는 전달되고 매핑의 추가 범주는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="daada068492996ffdd6026118dbf0910ab73a5ae" translate="yes" xml:space="preserve">
          <source>dict:</source>
          <target state="translated">dict:</target>
        </trans-unit>
        <trans-unit id="e7c6e439f2ab245dd2dbbec690661d9dfc304e59" translate="yes" xml:space="preserve">
          <source>display.[chop_threshold, colheader_justify, column_space, date_dayfirst, date_yearfirst, encoding, expand_frame_repr, float_format]</source>
          <target state="translated">표시. [chop_threshold, colheader_justify, column_space, date_dayfirst, date_yearfirst, 인코딩, expand_frame_repr, float_format]</target>
        </trans-unit>
        <trans-unit id="b1f9edb031d4b67767db111fda606cadf9802f50" translate="yes" xml:space="preserve">
          <source>display.[large_repr]</source>
          <target state="translated">display.[large_repr]</target>
        </trans-unit>
        <trans-unit id="a6b3487180f7029ad89b13e6d7bfd155bab44fde" translate="yes" xml:space="preserve">
          <source>display.[max_categories, max_columns, max_colwidth, max_info_columns, max_info_rows, max_rows, max_seq_items, memory_usage, min_rows, multi_sparse, notebook_repr_html, pprint_nest_depth, precision, show_dimensions]</source>
          <target state="translated">[max_categories, max_columns, max_colwidth, max_info_columns, max_info_rows, max_rows, max_seq_items, memory_usage, min_rows, multi_sparse, notebook_repr_html, pprint_nest_depth, precision, show_dimensions]</target>
        </trans-unit>
        <trans-unit id="a67eab13c8b1bc2624789d59b6c6db92f0556963" translate="yes" xml:space="preserve">
          <source>display.[width]</source>
          <target state="translated">display.[width]</target>
        </trans-unit>
        <trans-unit id="314d866271b9a31d5062bf6458878bcd6885b99d" translate="yes" xml:space="preserve">
          <source>display.html.[border, table_schema, use_mathjax]</source>
          <target state="translated">display.html. [테두리, table_schema, use_mathjax]</target>
        </trans-unit>
        <trans-unit id="9e1df9bade936a704e7ac91b2ef6b8deed2426d1" translate="yes" xml:space="preserve">
          <source>display.latex.[escape, longtable, multicolumn, multicolumn_format, multirow, repr]</source>
          <target state="translated">display.latex. [이스케이프, longtable, 다중 열, 다중 열 형식, 다중 행, repr]</target>
        </trans-unit>
        <trans-unit id="0445227617bbf7170dbc4d4398850f82cd14ccdf" translate="yes" xml:space="preserve">
          <source>display.unicode.[ambiguous_as_wide, east_asian_width]</source>
          <target state="translated">display.unicode. [ambiguous_as_wide, east_asian_width]</target>
        </trans-unit>
        <trans-unit id="64709ddd6756f32a974c78b999673e75676b9289" translate="yes" xml:space="preserve">
          <source>drop_whitespace = True</source>
          <target state="translated">drop_whitespace = True</target>
        </trans-unit>
        <trans-unit id="e2e1f80d898dd3f17179067b50e48580fa17c031" translate="yes" xml:space="preserve">
          <source>dropna</source>
          <target state="translated">dropna</target>
        </trans-unit>
        <trans-unit id="f7e663289261bf5663f14748dd0817050df83f40" translate="yes" xml:space="preserve">
          <source>dt</source>
          <target state="translated">dt</target>
        </trans-unit>
        <trans-unit id="63eb44aa9dfe2c9c81d4ede5c878a887b7f21327" translate="yes" xml:space="preserve">
          <source>dtype</source>
          <target state="translated">dtype</target>
        </trans-unit>
        <trans-unit id="76c95d1dceaf08133d5356b5ee99d16f16b6cf6e" translate="yes" xml:space="preserve">
          <source>dtypes</source>
          <target state="translated">dtypes</target>
        </trans-unit>
        <trans-unit id="06e13cfb26186c4ada12071d39bb29ab86509a70" translate="yes" xml:space="preserve">
          <source>e.g. If the dtypes are float16 and float32, dtype will be upcast to float32. By numpy.find_common_type convention, mixing int64 and and uint64 will result in a float64 dtype.</source>
          <target state="translated">예를 들어 dtypes가 float16 및 float32이면 dtype은 float32로 업 캐스트됩니다. numpy.find_common_type 규칙에 따라 int64와 uint64를 혼합하면 float64 dtype이됩니다.</target>
        </trans-unit>
        <trans-unit id="efc8e0335dc268da536a7c88a30c377a9e7ca388" translate="yes" xml:space="preserve">
          <source>e.g. If the dtypes are float16 and float32, dtype will be upcast to float32. If dtypes are int32 and uint8, dtype will be upcase to int32. By numpy.find_common_type convention, mixing int64 and uint64 will result in a float64 dtype.</source>
          <target state="translated">예를 들어 dtypes가 float16 및 float32이면 dtype은 float32로 업 캐스트됩니다. dtypes가 int32 및 uint8이면 dtype은 int32로 변경됩니다. numpy.find_common_type 규칙에 따라 int64와 uint64를 혼합하면 float64 dtype이됩니다.</target>
        </trans-unit>
        <trans-unit id="8be6c48184410904556ed249dee6d6c85eb62b3e" translate="yes" xml:space="preserve">
          <source>e.g. If the dtypes are float16 and float32, dtype will be upcast to float32. If dtypes are int32 and uint8, dtype will be upcast to int32. By &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.find_common_type.html#numpy.find_common_type&quot;&gt;&lt;code&gt;numpy.find_common_type()&lt;/code&gt;&lt;/a&gt; convention, mixing int64 and uint64 will result in a float64 dtype.</source>
          <target state="translated">예를 들어 dtypes가 float16 및 float32이면 dtype은 float32로 업 캐스트됩니다. dtypes가 int32 및 uint8이면 dtype은 int32로 업 캐스트됩니다. 에 의해 &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/generated/numpy.find_common_type.html#numpy.find_common_type&quot;&gt; &lt;code&gt;numpy.find_common_type()&lt;/code&gt; &lt;/a&gt; 규칙, 혼합 INT64 및 UINT64는 float64의 DTYPE가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ebf9e0ade3165c1026b5b7102ba531fce0861838" translate="yes" xml:space="preserve">
          <source>encoding for data &amp;amp; key when strings</source>
          <target state="translated">문자열 일 때 데이터 및 키 인코딩</target>
        </trans-unit>
        <trans-unit id="7a92f3d26362d6557d5701de77a63a01df61e57f" translate="yes" xml:space="preserve">
          <source>end</source>
          <target state="translated">end</target>
        </trans-unit>
        <trans-unit id="2db9c59cccbf07e0832c4104ea542a08f3f08bda" translate="yes" xml:space="preserve">
          <source>every header file must include a header guard to avoid name collisions if re-included</source>
          <target state="translated">모든 헤더 파일에는 다시 포함 된 경우 이름 충돌을 피하기 위해 헤더 가드가 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="7362ea9ba6c81feab9c6dac5bae238b35346c63d" translate="yes" xml:space="preserve">
          <source>exception pandas.errors.DtypeWarning[source]</source>
          <target state="translated">예외 pandas.errors.DtypeWarning [출처]</target>
        </trans-unit>
        <trans-unit id="002bf63e1ecded2295330bb24ab77460410c9c51" translate="yes" xml:space="preserve">
          <source>exception pandas.errors.EmptyDataError[source]</source>
          <target state="translated">예외 pandas.errors.EmptyDataError [source]</target>
        </trans-unit>
        <trans-unit id="fa8103edfc210f3f49e77686955801561d3ea292" translate="yes" xml:space="preserve">
          <source>exception pandas.errors.OutOfBoundsDatetime</source>
          <target state="translated">예외 pandas.errors.OutOfBoundsDatetime</target>
        </trans-unit>
        <trans-unit id="ba52101c39dac77f49fbfc53de4258b65141c62c" translate="yes" xml:space="preserve">
          <source>exception pandas.errors.ParserError[source]</source>
          <target state="translated">예외 pandas.errors.ParserError [source]</target>
        </trans-unit>
        <trans-unit id="c7551c654f5f80ec293a24c96cf9dfaf3bb16cec" translate="yes" xml:space="preserve">
          <source>exception pandas.errors.ParserWarning[source]</source>
          <target state="translated">예외 pandas.errors.ParserWarning [출처]</target>
        </trans-unit>
        <trans-unit id="41895d532f01708bffc0faae43668823676db7d6" translate="yes" xml:space="preserve">
          <source>exception pandas.errors.PerformanceWarning[source]</source>
          <target state="translated">예외 pandas.errors.PerformanceWarning [출처]</target>
        </trans-unit>
        <trans-unit id="acfe6b81bae4d2ae038d5e323d5083ce60e50982" translate="yes" xml:space="preserve">
          <source>exception pandas.errors.UnsortedIndexError[source]</source>
          <target state="translated">예외 pandas.errors.UnsortedIndexError [source]</target>
        </trans-unit>
        <trans-unit id="cfb54fb5957c5b1bf89778342d758e64bb2b5d1a" translate="yes" xml:space="preserve">
          <source>exception pandas.errors.UnsupportedFunctionCall[source]</source>
          <target state="translated">예외 pandas.errors.UnsupportedFunctionCall [source]</target>
        </trans-unit>
        <trans-unit id="637487c884f6dd9a4a638fab826509cfdba90fa9" translate="yes" xml:space="preserve">
          <source>existing</source>
          <target state="translated">existing</target>
        </trans-unit>
        <trans-unit id="9d7096270ea41f76b735b8447ea58590c994bb6b" translate="yes" xml:space="preserve">
          <source>expand_tabs = False</source>
          <target state="translated">expand_tabs = 거짓</target>
        </trans-unit>
        <trans-unit id="b5e736a7937ef0c6619c5ed6c434df626f7754d3" translate="yes" xml:space="preserve">
          <source>f(t) = x_1/sqrt(2) + x_2 sin(t) + x_3 cos(t) +</source>
          <target state="translated">f (t) = x_1 / sqrt (2) + x_2 sin (t) + x_3 cos (t) +</target>
        </trans-unit>
        <trans-unit id="6c22d38537bdcc43476daae95bca36b03d889a03" translate="yes" xml:space="preserve">
          <source>factorize / _values_for_factorize</source>
          <target state="translated">factorize / _values_for_factorize</target>
        </trans-unit>
        <trans-unit id="77fc3eda0c6bc2b83cd33c0332bcba22b7f1bbd1" translate="yes" xml:space="preserve">
          <source>fail: Raise a ValueError.</source>
          <target state="translated">실패 : ValueError를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="dcb927c4acfb53d11e624d79bad62a3552e38e03" translate="yes" xml:space="preserve">
          <source>fastparquet</source>
          <target state="translated">fastparquet</target>
        </trans-unit>
        <trans-unit id="fffb93451eecb7150ca24b574999098178be49f1" translate="yes" xml:space="preserve">
          <source>figure size in inches by default</source>
          <target state="translated">기본적으로 그림 크기 (인치)</target>
        </trans-unit>
        <trans-unit id="326cf1564c87a06ae137b146f3ae533ee02fd78e" translate="yes" xml:space="preserve">
          <source>fillna</source>
          <target state="translated">fillna</target>
        </trans-unit>
        <trans-unit id="e684587d1bf30043974111cb691d9e2f9b2fb6b5" translate="yes" xml:space="preserve">
          <source>finished, default is False</source>
          <target state="translated">완료, 기본값은 False입니다</target>
        </trans-unit>
        <trans-unit id="e05460298378c07f83d046cd2aabece68ae3d2e5" translate="yes" xml:space="preserve">
          <source>first: ranks assigned in order they appear in the array</source>
          <target state="translated">첫 번째 : 배열에 표시되는 순서대로 지정된 순위</target>
        </trans-unit>
        <trans-unit id="685e80366130387cb75c055248326976d16fdf8d" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="translated">float</target>
        </trans-unit>
        <trans-unit id="6ea568bf7fdc3c06d8eba9e284eee910cea23657" translate="yes" xml:space="preserve">
          <source>float : every value is compared to &lt;code&gt;threshold&lt;/code&gt;.</source>
          <target state="translated">float : 모든 값이 &lt;code&gt;threshold&lt;/code&gt; 과 비교됩니다 .</target>
        </trans-unit>
        <trans-unit id="5f3ffd8eab8a9617d566ed427779776551e6417a" translate="yes" xml:space="preserve">
          <source>float or Series</source>
          <target state="translated">플로트 또는 시리즈</target>
        </trans-unit>
        <trans-unit id="b0b92ac6e6b9824f42563edfd2ccc340a154ad54" translate="yes" xml:space="preserve">
          <source>float, decimal.Decimal or None</source>
          <target state="translated">float, decimal. 10 진수 또는 없음</target>
        </trans-unit>
        <trans-unit id="f1c6f2a988096d2f732f80117b66826eddf315b9" translate="yes" xml:space="preserve">
          <source>floating</source>
          <target state="translated">floating</target>
        </trans-unit>
        <trans-unit id="f1e8594984b9557a04db01ded2d94b0a1498ea8e" translate="yes" xml:space="preserve">
          <source>for each group</source>
          <target state="translated">각 그룹</target>
        </trans-unit>
        <trans-unit id="7f2cf332931cf566c68ab797227f9db0c0213919" translate="yes" xml:space="preserve">
          <source>for each group.</source>
          <target state="translated">각 그룹마다.</target>
        </trans-unit>
        <trans-unit id="f84a4ca322881722f1eac45e9e1c4f6f9f47ea29" translate="yes" xml:space="preserve">
          <source>format -&amp;gt; strftime() style string.</source>
          <target state="translated">형식-&amp;gt; strftime () 스타일 문자열.</target>
        </trans-unit>
        <trans-unit id="34e28107873893c0c23829ecd1687f13cefc4cf3" translate="yes" xml:space="preserve">
          <source>fredapi</source>
          <target state="translated">fredapi</target>
        </trans-unit>
        <trans-unit id="5e92a9c6fa5eb0f32413689c0208e8c66050ebe2" translate="yes" xml:space="preserve">
          <source>fredapi is a Python interface to the &lt;a href=&quot;https://fred.stlouisfed.org/&quot;&gt;Federal Reserve Economic Data (FRED)&lt;/a&gt; provided by the Federal Reserve Bank of St. Louis. It works with both the FRED database and ALFRED database that contains point-in-time data (i.e. historic data revisions). fredapi provides a wrapper in Python to the FRED HTTP API, and also provides several convenient methods for parsing and analyzing point-in-time data from ALFRED. fredapi makes use of pandas and returns data in a Series or DataFrame. This module requires a FRED API key that you can obtain for free on the FRED website.</source>
          <target state="translated">fredapi는 세인트루이스 연방 준비 은행이 제공하는 &lt;a href=&quot;https://fred.stlouisfed.org/&quot;&gt;FRED (Federal Reserve Economic Data&lt;/a&gt; )에 대한 Python 인터페이스 입니다. 특정 시점 데이터 (이력 데이터 개정)가 포함 된 FRED 데이터베이스 및 ALFRED 데이터베이스와 함께 작동합니다. fredapi는 Python에서 FRED HTTP API로 래퍼를 제공하고 ALFRED의 특정 시점 데이터를 구문 분석하고 분석하기위한 몇 가지 편리한 메소드를 제공합니다. fredapi는 팬더를 사용하고 Series 또는 DataFrame의 데이터를 반환합니다. 이 모듈에는 FRED 웹 사이트에서 무료로 얻을 수있는 FRED API 키가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2cef0d5777885ba0adb346cb5c174766b3b0de0f" translate="yes" xml:space="preserve">
          <source>freq : pd.tseries.offsets.Offset</source>
          <target state="translated">주파수 : pd.tseries.offsets.Offset</target>
        </trans-unit>
        <trans-unit id="8897ea199eed4c8d12cc1b34d6059070bf4b663a" translate="yes" xml:space="preserve">
          <source>from the root of the pandas repository. Now &lt;code&gt;black&lt;/code&gt; and &lt;code&gt;flake8&lt;/code&gt; will be run each time you commit changes. You can skip these checks with &lt;code&gt;git commit --no-verify&lt;/code&gt;.</source>
          <target state="translated">pandas 저장소의 루트에서. 이제 변경 사항을 커밋 할 때마다 &lt;code&gt;black&lt;/code&gt; 및 &lt;code&gt;flake8&lt;/code&gt; 이 실행됩니다. &lt;code&gt;git commit --no-verify&lt;/code&gt; 로 이러한 검사를 건너 뛸 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c218e39efa2e1aae69f39d2054528369ce1e1f46" translate="yes" xml:space="preserve">
          <source>function</source>
          <target state="translated">function</target>
        </trans-unit>
        <trans-unit id="15aea2093e87352c0628e165f155626f2be34f9b" translate="yes" xml:space="preserve">
          <source>function to apply to the Series/DataFrame. &lt;code&gt;args&lt;/code&gt;, and &lt;code&gt;kwargs&lt;/code&gt; are passed into &lt;code&gt;func&lt;/code&gt;. Alternatively a &lt;code&gt;(callable, data_keyword)&lt;/code&gt; tuple where &lt;code&gt;data_keyword&lt;/code&gt; is a string indicating the keyword of &lt;code&gt;callable&lt;/code&gt; that expects the Series/DataFrame.</source>
          <target state="translated">Series / DataFrame에 적용하는 기능. &lt;code&gt;args&lt;/code&gt; 와 &lt;code&gt;kwargs&lt;/code&gt; 는 &lt;code&gt;func&lt;/code&gt; 에 전달됩니다 . 또는 &lt;code&gt;(callable, data_keyword)&lt;/code&gt; 튜플. 여기서 &lt;code&gt;data_keyword&lt;/code&gt; 는 Series / DataFrame을 예상하는 &lt;code&gt;callable&lt;/code&gt; 의 키워드를 나타내는 문자열 입니다.</target>
        </trans-unit>
        <trans-unit id="8c6c67aecf10f2ab2af2df5397d49c18a8521575" translate="yes" xml:space="preserve">
          <source>functional style: tests are like &lt;code&gt;test_*&lt;/code&gt; and &lt;em&gt;only&lt;/em&gt; take arguments that are either fixtures or parameters</source>
          <target state="translated">기능적 스타일 : 테스트는 &lt;code&gt;test_*&lt;/code&gt; 와 유사 하며 조명기 또는 매개 변수 인 인수 &lt;em&gt;만&lt;/em&gt; 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0946920e09f9ed7ce3bf9b7fd407cde0b884979c" translate="yes" xml:space="preserve">
          <source>gcsfs</source>
          <target state="translated">gcsfs</target>
        </trans-unit>
        <trans-unit id="ec130a22b0338c3a6df7d8343a47624b223d406a" translate="yes" xml:space="preserve">
          <source>groupby</source>
          <target state="translated">groupby</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
