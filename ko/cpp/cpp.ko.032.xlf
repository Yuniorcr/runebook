<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="cpp">
    <body>
      <group id="cpp">
        <trans-unit id="774bef41a15c0456dd25b34d91eb7dfe9a206311" translate="yes" xml:space="preserve">
          <source>null-terminated byte strings</source>
          <target state="translated">null로 끝나는 바이트 문자열</target>
        </trans-unit>
        <trans-unit id="03efd83f9356c1291a2495fe8b550c4b7a696b95" translate="yes" xml:space="preserve">
          <source>null-terminated character string containing the name of the type.</source>
          <target state="translated">형식 이름이 포함 된 null로 끝나는 문자열</target>
        </trans-unit>
        <trans-unit id="4e51166ec12687b85a5739f209a9d7a15975276f" translate="yes" xml:space="preserve">
          <source>null-terminated character string determining file access mode</source>
          <target state="translated">파일 액세스 모드를 결정하는 널 종료 문자열</target>
        </trans-unit>
        <trans-unit id="9fc8d047f02dd8bbb79f58dfcb482448c07b424e" translate="yes" xml:space="preserve">
          <source>null-terminated character string determining new file access mode</source>
          <target state="translated">새로운 파일 액세스 모드를 결정하는 null로 끝나는 문자열</target>
        </trans-unit>
        <trans-unit id="0f4dbee2869d70c7077e7444856f514a6fe5f6de" translate="yes" xml:space="preserve">
          <source>null-terminated character string identifying the name of the environmental variable to look for</source>
          <target state="translated">찾을 환경 변수의 이름을 식별하는 null로 끝나는 문자열</target>
        </trans-unit>
        <trans-unit id="cd43faf876168d6e96b34fbd29e5ed45ec238f65" translate="yes" xml:space="preserve">
          <source>null-terminated character string to be written</source>
          <target state="translated">쓸 null로 끝나는 문자열</target>
        </trans-unit>
        <trans-unit id="570e3431d93bf594671d9f583b355a8c0057a630" translate="yes" xml:space="preserve">
          <source>null-terminated multibyte strings</source>
          <target state="translated">널 종료 멀티 바이트 문자열</target>
        </trans-unit>
        <trans-unit id="50dcfaeafa7aa89e9a3713c5534938294a015b62" translate="yes" xml:space="preserve">
          <source>null-terminated wide string to be written</source>
          <target state="translated">쓸 널 종료 와이드 문자열</target>
        </trans-unit>
        <trans-unit id="eb08ad03717304c12da6691ed0202dc256599d52" translate="yes" xml:space="preserve">
          <source>null-terminated wide strings</source>
          <target state="translated">널로 끝나는 넓은 문자열</target>
        </trans-unit>
        <trans-unit id="3b7fcd61c44b7b2afe1af66ff1167fa63e6d616b" translate="yes" xml:space="preserve">
          <source>null_memory_resource</source>
          <target state="translated">null_memory_resource</target>
        </trans-unit>
        <trans-unit id="91a5614103ea4acca0182069fb5ef8c8430ee987" translate="yes" xml:space="preserve">
          <source>nullopt</source>
          <target state="translated">nullopt</target>
        </trans-unit>
        <trans-unit id="edc651d144067799cb46b63c0ecef4b77b30111f" translate="yes" xml:space="preserve">
          <source>nullopt_t</source>
          <target state="translated">nullopt_t</target>
        </trans-unit>
        <trans-unit id="16a5e241ffa80e4de1639efff4e17ad05a0a8929" translate="yes" xml:space="preserve">
          <source>nullptr</source>
          <target state="translated">nullptr</target>
        </trans-unit>
        <trans-unit id="616ab5cc7d6c51e3a5e47f6be0c379ea81439148" translate="yes" xml:space="preserve">
          <source>nullptr, the pointer literal</source>
          <target state="translated">널 리터럴, 포인터 리터럴</target>
        </trans-unit>
        <trans-unit id="11aed17101a0cc1348d82911ef9434d82ba75668" translate="yes" xml:space="preserve">
          <source>nullptr_t</source>
          <target state="translated">nullptr_t</target>
        </trans-unit>
        <trans-unit id="9c6c337ee51971e973c9fdc9f4140c220df7f249" translate="yes" xml:space="preserve">
          <source>num</source>
          <target state="translated">num</target>
        </trans-unit>
        <trans-unit id="5da65d1cedf5ee6d65f5b8201fcbea7851a85cb2" translate="yes" xml:space="preserve">
          <source>num_get</source>
          <target state="translated">num_get</target>
        </trans-unit>
        <trans-unit id="4e869f89f4d79e183ba10df1816cc1cf8650d513" translate="yes" xml:space="preserve">
          <source>num_put</source>
          <target state="translated">num_put</target>
        </trans-unit>
        <trans-unit id="ba0ec2e7f1e0204b4d6e3afb7cafb278b227c319" translate="yes" xml:space="preserve">
          <source>number of &lt;a href=&quot;http://en.cppreference.com/w/cpp/regex/ecmascript#Sub-expressions&quot;&gt;marked subexpressions&lt;/a&gt; plus 1, that is, &lt;code&gt;1+e.mark_count()&lt;/code&gt;</source>
          <target state="translated">숫자 &lt;a href=&quot;http://en.cppreference.com/w/cpp/regex/ecmascript#Sub-expressions&quot;&gt;표시 표현식&lt;/a&gt; 더하기 1, &lt;code&gt;1+e.mark_count()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fbef9291025e9d09821724d58c7cbb94363b29a4" translate="yes" xml:space="preserve">
          <source>number of &lt;code&gt;radix&lt;/code&gt; digits that can be represented without change</source>
          <target state="translated">수 &lt;code&gt;radix&lt;/code&gt; 변화없이 표현 될 수 자릿수</target>
        </trans-unit>
        <trans-unit id="90ab0d1520ed7736969418690dce6f1f498fe870" translate="yes" xml:space="preserve">
          <source>number of base &lt;code&gt;FLT_RADIX&lt;/code&gt; digits that can be represented without losing precision for &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;double&lt;/code&gt; and &lt;code&gt;long double&lt;/code&gt; respectively</source>
          <target state="translated">&lt;code&gt;float&lt;/code&gt; , &lt;code&gt;double&lt;/code&gt; 및 &lt;code&gt;long double&lt;/code&gt; 의 정밀도를 각각 잃지 않고 표현할 수있는 기본 &lt;code&gt;FLT_RADIX&lt;/code&gt; 자릿수</target>
        </trans-unit>
        <trans-unit id="b90b8cb2ef35be36a8a72f5593ca9dbe8ac028a3" translate="yes" xml:space="preserve">
          <source>number of bits in a byte</source>
          <target state="translated">바이트의 비트 수</target>
        </trans-unit>
        <trans-unit id="96f6aa440fe00319edb0cf1dfc463e1f42b599a0" translate="yes" xml:space="preserve">
          <source>number of bits that are set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">로 설정된 비트 수 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdaaea14e5d4de86cdb9e605ac618530a740d000" translate="yes" xml:space="preserve">
          <source>number of bits that the bitset can hold, i.e. the template parameter &lt;code&gt;N&lt;/code&gt;.</source>
          <target state="translated">비트 세트에 저장할 수있는 비트의 수는 파라미터 템플릿 즉, &lt;code&gt;N&lt;/code&gt; 이 .</target>
        </trans-unit>
        <trans-unit id="fb6bbb07f0c7a43b48e6d7d5be43b89aabf6e6d4" translate="yes" xml:space="preserve">
          <source>number of byte available in the array pointed to by dst</source>
          <target state="translated">dst가 가리키는 배열에서 사용 가능한 바이트 수</target>
        </trans-unit>
        <trans-unit id="e801c1a3cf7b9225e972bf4d8575d2b9d55ad111" translate="yes" xml:space="preserve">
          <source>number of bytes available in the array pointed to by dst</source>
          <target state="translated">dst가 가리키는 배열에서 사용 가능한 바이트 수</target>
        </trans-unit>
        <trans-unit id="f3decac98a65148bc8a86d53ac44a2a77858dc88" translate="yes" xml:space="preserve">
          <source>number of bytes to allocate</source>
          <target state="translated">할당 할 바이트 수</target>
        </trans-unit>
        <trans-unit id="c9cfc4e03a8b5b1e13664332f53e661afdd2e3db" translate="yes" xml:space="preserve">
          <source>number of bytes to allocate. An integral multiple of &lt;code&gt;alignment&lt;/code&gt;</source>
          <target state="translated">할당 할 바이트 수 의 정수 배가 &lt;code&gt;alignment&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d5d4194750625ef4a788bb18fd8cf8778387ae6d" translate="yes" xml:space="preserve">
          <source>number of bytes to copy</source>
          <target state="translated">복사 할 바이트 수</target>
        </trans-unit>
        <trans-unit id="5df6a939291dc2a7d142afffba7a92e4952b5829" translate="yes" xml:space="preserve">
          <source>number of bytes to examine</source>
          <target state="translated">검사 할 바이트 수</target>
        </trans-unit>
        <trans-unit id="5162b8829eb294853dc1f82480b6c555f6b6f67c" translate="yes" xml:space="preserve">
          <source>number of bytes to fill</source>
          <target state="translated">채울 바이트 수</target>
        </trans-unit>
        <trans-unit id="7edf192d1d9a9edd933cd2cd1520b4b49c521ad8" translate="yes" xml:space="preserve">
          <source>number of characters copied.</source>
          <target state="translated">복사 된 문자 수</target>
        </trans-unit>
        <trans-unit id="b7a5a225a88cef56b116d9daeec8d02aca318c33" translate="yes" xml:space="preserve">
          <source>number of characters of the given string to compare</source>
          <target state="translated">주어진 문자열에서 비교할 문자 수</target>
        </trans-unit>
        <trans-unit id="5f878bdc7d5e7f48feb5c3ab0265eb59d94d7015" translate="yes" xml:space="preserve">
          <source>number of characters of the given view to compare</source>
          <target state="translated">주어진 뷰에서 비교할 문자 수</target>
        </trans-unit>
        <trans-unit id="7a031e417c695e4fccc65c09fade6550afe37ad3" translate="yes" xml:space="preserve">
          <source>number of characters of this string to compare</source>
          <target state="translated">비교할이 문자열의 문자 수</target>
        </trans-unit>
        <trans-unit id="6aabcd31c624151cd143a7b62d760da1209392ae" translate="yes" xml:space="preserve">
          <source>number of characters of this view to compare</source>
          <target state="translated">이 뷰에서 비교할 문자 수</target>
        </trans-unit>
        <trans-unit id="fab66f0e2a050215cc4c2022478e62bc378b656e" translate="yes" xml:space="preserve">
          <source>number of characters to append</source>
          <target state="translated">추가 할 문자 수</target>
        </trans-unit>
        <trans-unit id="f114cdfba7027e3732904a22de0cd936cd93958f" translate="yes" xml:space="preserve">
          <source>number of characters to extract</source>
          <target state="translated">추출 할 문자 수</target>
        </trans-unit>
        <trans-unit id="1ba94a849ad3621de9b88d1bb96008c4ad95fbe0" translate="yes" xml:space="preserve">
          <source>number of characters to include in the view</source>
          <target state="translated">뷰에 포함 할 문자 수</target>
        </trans-unit>
        <trans-unit id="3d1872d3d7590d0cc6eca9083512c70d4d99476f" translate="yes" xml:space="preserve">
          <source>number of characters to insert</source>
          <target state="translated">삽입 할 문자 수</target>
        </trans-unit>
        <trans-unit id="6aa2d2eb228915e81d73b2faa5c9e843f9a0bda4" translate="yes" xml:space="preserve">
          <source>number of characters to read</source>
          <target state="translated">읽을 문자 수</target>
        </trans-unit>
        <trans-unit id="c7c408702ffb93c0591a2cc406c1ae701fb0f13e" translate="yes" xml:space="preserve">
          <source>number of characters to remove</source>
          <target state="translated">제거 할 문자 수</target>
        </trans-unit>
        <trans-unit id="f6a93e797a5c15f5f90cee7b9afe71aa0d9b0d0f" translate="yes" xml:space="preserve">
          <source>number of characters to remove from the end of the view</source>
          <target state="translated">보기 끝에서 제거 할 문자 수</target>
        </trans-unit>
        <trans-unit id="27e2dd6709d6926a962689bc253b091df7eafb2c" translate="yes" xml:space="preserve">
          <source>number of characters to remove from the start of the view</source>
          <target state="translated">보기 시작 부분에서 제거 할 문자 수</target>
        </trans-unit>
        <trans-unit id="a434640a65ca8470d40d309fa9610529c1adb3f5" translate="yes" xml:space="preserve">
          <source>number of characters to replace with</source>
          <target state="translated">바꿀 문자 수</target>
        </trans-unit>
        <trans-unit id="ebe4abbeea8b17d21caa74a2d1e24b769e32105a" translate="yes" xml:space="preserve">
          <source>number of characters to shift the position relative to origin</source>
          <target state="translated">원점을 기준으로 위치를 이동하는 문자 수</target>
        </trans-unit>
        <trans-unit id="8988f497dbd1e3f192db05a88fc984393f802772" translate="yes" xml:space="preserve">
          <source>number of characters to skip</source>
          <target state="translated">건너 뛸 문자 수</target>
        </trans-unit>
        <trans-unit id="02a5fa3ebdfe605640216593a57044966f54a558" translate="yes" xml:space="preserve">
          <source>number of characters to use from &lt;code&gt;str&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;str&lt;/code&gt; 에서 사용할 문자 수</target>
        </trans-unit>
        <trans-unit id="35084b4ddbea82100f27cf8e4b2a38e162a6b4a1" translate="yes" xml:space="preserve">
          <source>number of characters to write</source>
          <target state="translated">쓸 문자 수</target>
        </trans-unit>
        <trans-unit id="d102d13894dc563ad1fd07096de178ba86d8220c" translate="yes" xml:space="preserve">
          <source>number of copies to insert</source>
          <target state="translated">삽입 할 매수</target>
        </trans-unit>
        <trans-unit id="ede9b6724807e45cad00a7a933181663ca092bc6" translate="yes" xml:space="preserve">
          <source>number of decimal digits necessary to differentiate all values of this type</source>
          <target state="translated">이 유형의 모든 값을 구별하는 데 필요한 소수 자릿수</target>
        </trans-unit>
        <trans-unit id="465284df4f28aca11ced2fed6dd3d59dc95a0068" translate="yes" xml:space="preserve">
          <source>number of decimal digits that are guaranteed to be preserved in text -&amp;gt; &lt;code&gt;float&lt;/code&gt;/&lt;code&gt;double&lt;/code&gt;/&lt;code&gt;long double&lt;/code&gt; -&amp;gt; text roundtrip without change due to rounding or overflow (see &lt;code&gt;&lt;a href=&quot;../types/numeric_limits/digits10&quot;&gt;std::numeric_limits::digits10&lt;/a&gt;&lt;/code&gt; for explanation)</source>
          <target state="translated">반올림 또는 오버플로로 인해 변경되지 않은 텍스트-&amp;gt; &lt;code&gt;float&lt;/code&gt; / &lt;code&gt;double&lt;/code&gt; / &lt;code&gt;long double&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;../types/numeric_limits/digits10&quot;&gt;std::numeric_limits::digits10&lt;/a&gt;&lt;/code&gt; &amp;gt; 텍스트 왕복 으로 유지되는 소수 자릿수 (설명은 std :: numeric_limits :: digits10 참조 )</target>
        </trans-unit>
        <trans-unit id="856114e4483a7995c129ebd9581b3e72390e5909" translate="yes" xml:space="preserve">
          <source>number of decimal digits that are guaranteed to be preserved in text -&amp;gt; &lt;code&gt;float&lt;/code&gt;/&lt;code&gt;double&lt;/code&gt;/&lt;code&gt;long double&lt;/code&gt; -&amp;gt; text roundtrip without change due to rounding or overflow (see &lt;code&gt;&lt;a href=&quot;numeric_limits/digits10&quot;&gt;std::numeric_limits::digits10&lt;/a&gt;&lt;/code&gt; for explanation)</source>
          <target state="translated">반올림 또는 오버플로로 인해 변경되지 않은 텍스트-&amp;gt; &lt;code&gt;float&lt;/code&gt; / &lt;code&gt;double&lt;/code&gt; / &lt;code&gt;long double&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;numeric_limits/digits10&quot;&gt;std::numeric_limits::digits10&lt;/a&gt;&lt;/code&gt; &amp;gt; 텍스트 왕복 으로 유지되는 소수 자릿수 (설명은 std :: numeric_limits :: digits10 참조 )</target>
        </trans-unit>
        <trans-unit id="c5a0fc5a7864aa5ee480fb63d4bdc8012bdfcc80" translate="yes" xml:space="preserve">
          <source>number of decimal digits that can be represented without change</source>
          <target state="translated">변경없이 표현할 수있는 소수 자릿수</target>
        </trans-unit>
        <trans-unit id="fdd50815af6ed75e16b16443d98f13d245b1da47" translate="yes" xml:space="preserve">
          <source>number of element in the array</source>
          <target state="translated">배열의 요소 수</target>
        </trans-unit>
        <trans-unit id="2e7b584d21ee67f93cda81ddeb81a0d6b45b915a" translate="yes" xml:space="preserve">
          <source>number of elements &lt;code&gt;it&lt;/code&gt; should be advanced</source>
          <target state="translated">고급 요소 &lt;code&gt;it&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ae3dbddb260c12e612045a057103786be7d3e022" translate="yes" xml:space="preserve">
          <source>number of elements &lt;code&gt;it&lt;/code&gt; should be descended</source>
          <target state="translated">요소 수 &lt;code&gt;it&lt;/code&gt; 하강해야</target>
        </trans-unit>
        <trans-unit id="222f4efafdbdd7f11a44236f962f6b8557e6e093" translate="yes" xml:space="preserve">
          <source>number of elements in the array</source>
          <target state="translated">배열의 요소 수</target>
        </trans-unit>
        <trans-unit id="4200da6d3612e688a02a65dc09ebd22173a0878b" translate="yes" xml:space="preserve">
          <source>number of elements in the sequence</source>
          <target state="translated">시퀀스의 요소 수</target>
        </trans-unit>
        <trans-unit id="e8503c250a8e72bb95e2ec5309237593d6d31eb3" translate="yes" xml:space="preserve">
          <source>number of elements satisfying the condition.</source>
          <target state="translated">조건을 만족하는 요소 수</target>
        </trans-unit>
        <trans-unit id="e0aba2d6273bc7147315c7bd3c2d8de2711463ba" translate="yes" xml:space="preserve">
          <source>number of elements to advance</source>
          <target state="translated">진행할 요소 수</target>
        </trans-unit>
        <trans-unit id="ef9180738e1a4da50c5deeb7583bf5dc6261810d" translate="yes" xml:space="preserve">
          <source>number of elements to construct</source>
          <target state="translated">구성 할 요소 수</target>
        </trans-unit>
        <trans-unit id="02d291e81dad929ad203d866a7eebed5255d7fa9" translate="yes" xml:space="preserve">
          <source>number of elements to modify</source>
          <target state="translated">수정할 요소 수</target>
        </trans-unit>
        <trans-unit id="6b7d2b72e5ed0a7f1e55716fc8af4380f80f6565" translate="yes" xml:space="preserve">
          <source>number of files that can be open simultaneously</source>
          <target state="translated">동시에 열 수있는 파일 수</target>
        </trans-unit>
        <trans-unit id="0d183baaee5159c57481adac0d53660dd24f224d" translate="yes" xml:space="preserve">
          <source>number of its occurrence under the same conditions (on the same time/space interval) is &amp;mu;.</source>
          <target state="translated">동일한 조건 (동일한 시간 / 공간 간격)에서 발생 횟수는 &amp;mu;입니다.</target>
        </trans-unit>
        <trans-unit id="0d507963bd163e912028d2bb06021f787953f684" translate="yes" xml:space="preserve">
          <source>number of objects</source>
          <target state="translated">객체 수</target>
        </trans-unit>
        <trans-unit id="3d1ad0f5e20b3a343e971bcebf819e631b9e22e8" translate="yes" xml:space="preserve">
          <source>number of objects earlier passed to &lt;code&gt;allocate()&lt;/code&gt;</source>
          <target state="translated">이전에 &lt;code&gt;allocate()&lt;/code&gt; 전달 된 객체 수</target>
        </trans-unit>
        <trans-unit id="7aef4b7b71db8832376f1f2a72e0c18aa4cbc777" translate="yes" xml:space="preserve">
          <source>number of objects of type U the memory was for</source>
          <target state="translated">메모리가 사용 된 U 유형의 오브젝트 수</target>
        </trans-unit>
        <trans-unit id="9fd1913e331c28919b8d0c0548e8dc73a1ad047d" translate="yes" xml:space="preserve">
          <source>number of positions to shift the bits</source>
          <target state="translated">비트를 이동시킬 위치의 수</target>
        </trans-unit>
        <trans-unit id="1742ad27624f6a360d644e82248f72781ce5418f" translate="yes" xml:space="preserve">
          <source>number of positions to shift the elements by</source>
          <target state="translated">요소를 이동시킬 위치 수</target>
        </trans-unit>
        <trans-unit id="23747ac9f0fec90c2d6dddffc88d4958cd8063d2" translate="yes" xml:space="preserve">
          <source>number of processor clock ticks per second</source>
          <target state="translated">초당 프로세서 클럭 틱 수</target>
        </trans-unit>
        <trans-unit id="1f8e7dfe590bef758c46db85b6b580cf3e90c79d" translate="yes" xml:space="preserve">
          <source>number of samples to make</source>
          <target state="translated">만들 샘플 수</target>
        </trans-unit>
        <trans-unit id="1b79ca938bc5c1248d9ddf138822da31aa926eed" translate="yes" xml:space="preserve">
          <source>number of the elements to copy</source>
          <target state="translated">복사 할 요소 수</target>
        </trans-unit>
        <trans-unit id="c9cc7d0d9960fdd5ab6249de3e5494f801acc38d" translate="yes" xml:space="preserve">
          <source>number of the elements to generate</source>
          <target state="translated">생성 할 요소 수</target>
        </trans-unit>
        <trans-unit id="70a275d1eec935299db03fae5dadee5d052b9313" translate="yes" xml:space="preserve">
          <source>number of ticks on the right-hand side of the operator</source>
          <target state="translated">운전자의 오른쪽에있는 진드기의 수</target>
        </trans-unit>
        <trans-unit id="a9491d64d5d79aac60532fbcf2a40b1385efe282" translate="yes" xml:space="preserve">
          <source>number of wide characters available in the array pointed to by dst</source>
          <target state="translated">dst가 가리키는 배열에서 사용 가능한 와이드 문자 수</target>
        </trans-unit>
        <trans-unit id="3621bb101a3cc288e27c9e2b69fd9227f58992c1" translate="yes" xml:space="preserve">
          <source>number of wide characters to copy</source>
          <target state="translated">복사 할 와이드 문자 수</target>
        </trans-unit>
        <trans-unit id="dfd3553130c3914e061e6e252f5a4042383082e0" translate="yes" xml:space="preserve">
          <source>number of wide characters to examine</source>
          <target state="translated">조사 할 와이드 문자 수</target>
        </trans-unit>
        <trans-unit id="c3cf3c1b891c428d1636d9044afb62cdcab0415a" translate="yes" xml:space="preserve">
          <source>number of wide characters to fill</source>
          <target state="translated">채울 와이드 문자 수</target>
        </trans-unit>
        <trans-unit id="77f21d6260b3961d3652dd165dd95475f5574120" translate="yes" xml:space="preserve">
          <source>number to add to the put pointer</source>
          <target state="translated">풋 포인터에 추가 할 숫자</target>
        </trans-unit>
        <trans-unit id="7e5440aa7b8ac4d2ba7dc440d393be3177b77535" translate="yes" xml:space="preserve">
          <source>number used to initialize the bitset</source>
          <target state="translated">비트 셋을 초기화하는 데 사용되는 숫자</target>
        </trans-unit>
        <trans-unit id="cd3975cf19285a9174cd900ee54239ac019476fc" translate="yes" xml:space="preserve">
          <source>numeric</source>
          <target state="translated">numeric</target>
        </trans-unit>
        <trans-unit id="44bbb8671cae95fa0b330ca5f11b8cf209a015cd" translate="yes" xml:space="preserve">
          <source>numeric array containing the values of the base</source>
          <target state="translated">밑의 값을 포함하는 숫자 형 배열</target>
        </trans-unit>
        <trans-unit id="83d67fa34d9f718c7022553f4adc2a66744c2500" translate="yes" xml:space="preserve">
          <source>numeric array containing the values of the exponent</source>
          <target state="translated">지수 값을 포함하는 숫자 형 배열</target>
        </trans-unit>
        <trans-unit id="d8283434b8294b398422142e446116de740ac010" translate="yes" xml:space="preserve">
          <source>numeric arrays and array slices</source>
          <target state="translated">숫자 형 배열 및 배열 슬라이스</target>
        </trans-unit>
        <trans-unit id="9d29c730bd0e439c38ea97010d82e020fda741b1" translate="yes" xml:space="preserve">
          <source>numeric arrays to compare</source>
          <target state="translated">비교할 숫자 형 배열</target>
        </trans-unit>
        <trans-unit id="5b7d85ff20976a14758c0978cfeb05db72416437" translate="yes" xml:space="preserve">
          <source>numeric arrays to compute inverse tangent of</source>
          <target state="translated">의 역 탄젠트를 계산하는 숫자 형 배열</target>
        </trans-unit>
        <trans-unit id="4a349d470598afc9c0118eb540b8b12fb4db26da" translate="yes" xml:space="preserve">
          <source>numeric arrays, array masks and array slices</source>
          <target state="translated">숫자 형 배열, 배열 마스크 및 배열 슬라이스</target>
        </trans-unit>
        <trans-unit id="449a37e7a0752cb833c3fbce346911f18958607c" translate="yes" xml:space="preserve">
          <source>numeric conversion</source>
          <target state="translated">숫자 변환</target>
        </trans-unit>
        <trans-unit id="90411679b504991295ce127e96e54d5fcd141b8b" translate="yes" xml:space="preserve">
          <source>numeric digits</source>
          <target state="translated">숫자</target>
        </trans-unit>
        <trans-unit id="1aa88a5de1257d2dd23bda2ede3d552b54b683e3" translate="yes" xml:space="preserve">
          <source>numeric literal operator template</source>
          <target state="translated">숫자 리터럴 연산자 템플릿</target>
        </trans-unit>
        <trans-unit id="db24c54408ca6215f5c2aee2662977d486f1e7a2" translate="yes" xml:space="preserve">
          <source>numeric promotion</source>
          <target state="translated">숫자 프로모션</target>
        </trans-unit>
        <trans-unit id="4ab4ab8fd62362a42e446fcdb330eeaf73418c31" translate="yes" xml:space="preserve">
          <source>numeric_limits</source>
          <target state="translated">numeric_limits</target>
        </trans-unit>
        <trans-unit id="9e04233e93e5e986a7d417ec05363626c625d929" translate="yes" xml:space="preserve">
          <source>numpunct</source>
          <target state="translated">numpunct</target>
        </trans-unit>
        <trans-unit id="501e5c2a48341eface0f2d9f125c9cc834338658" translate="yes" xml:space="preserve">
          <source>numpunct_byname</source>
          <target state="translated">numpunct_byname</target>
        </trans-unit>
        <trans-unit id="8c1efea6bf9b8e3cc16fcc40576fdc7118cff0dd" translate="yes" xml:space="preserve">
          <source>nw</source>
          <target state="translated">nw</target>
        </trans-unit>
        <trans-unit id="9b5c0b859faba061dd60fd8070fce74fcee29d0b" translate="yes" xml:space="preserve">
          <source>obj</source>
          <target state="translated">obj</target>
        </trans-unit>
        <trans-unit id="d62b0267ba305dc94a5514738301a81227f8abcb" translate="yes" xml:space="preserve">
          <source>object (convertible to &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt;) identifying characters to search for</source>
          <target state="translated">검색 할 문자를 식별하는 객체 ( &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; 로 변환 가능 )</target>
        </trans-unit>
        <trans-unit id="23d2f50470586fdc9fbdc1f8ce9471b3bdf11f5f" translate="yes" xml:space="preserve">
          <source>object (convertible to &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt;) to compare to</source>
          <target state="translated">비교할 객체 ( &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; 로 변환 가능 )</target>
        </trans-unit>
        <trans-unit id="eaa30a63294050512a16c5329a46d6e06dae9bf6" translate="yes" xml:space="preserve">
          <source>object (convertible to &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt;) to initialize the characters of the string with</source>
          <target state="translated">문자열 문자를 초기화하는 객체 ( &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; 로 변환 가능 )</target>
        </trans-unit>
        <trans-unit id="0ff07de4e02cb1c0456341ac9d5dfce8e90bfdf6" translate="yes" xml:space="preserve">
          <source>object (convertible to &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt;) to initialize the string with</source>
          <target state="translated">문자열을 초기화하는 객체 ( &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; 로 변환 가능 )</target>
        </trans-unit>
        <trans-unit id="749e5e1b7854c2791c6f6c3d09ce21a1b7ef8b34" translate="yes" xml:space="preserve">
          <source>object (convertible to &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt;) to insert the characters from</source>
          <target state="translated">문자를 삽입 할 객체 ( &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; 로 변환 가능 )</target>
        </trans-unit>
        <trans-unit id="b8ed64c2258a5fef238025c62c3e2c31fec0831f" translate="yes" xml:space="preserve">
          <source>object (convertible to &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt;) to search for</source>
          <target state="translated">검색 할 객체 ( &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; 로 변환 가능 )</target>
        </trans-unit>
        <trans-unit id="8a1f2cc683990fd94261272144f252fa3cb1ef6e" translate="yes" xml:space="preserve">
          <source>object (convertible to &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt;) with the characters to use for replacement</source>
          <target state="translated">대체에 사용할 문자가 포함 된 객체 ( &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; 로 변환 가능 )</target>
        </trans-unit>
        <trans-unit id="e9822bdbd422f7882498940b8928ee49c66ef4e2" translate="yes" xml:space="preserve">
          <source>object convertible to &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; to initialize the string with</source>
          <target state="translated">문자열을 초기화 하기 위해 &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; 로 변환 가능한 객체</target>
        </trans-unit>
        <trans-unit id="11f83550b364e60b5034fb9207adeff4db9a6c3e" translate="yes" xml:space="preserve">
          <source>object convertible to &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; with the characters to append</source>
          <target state="translated">추가 할 문자를 사용하여 &lt;code&gt;&lt;a href=&quot;../basic_string_view&quot;&gt;std::basic_string_view&lt;/a&gt;&lt;/code&gt; 로 변환 할 수있는 객체</target>
        </trans-unit>
        <trans-unit id="b5511347a8a34a94e098b989c739e3f47459b44f" translate="yes" xml:space="preserve">
          <source>object in the implementation defined order, i.e. orders the referred types</source>
          <target state="translated">구현에서 정의 된 순서의 객체, 즉 참조 된 형식의 순서</target>
        </trans-unit>
        <trans-unit id="83c75182b8288ba6c7102017998944282313041a" translate="yes" xml:space="preserve">
          <source>object of type &lt;code&gt;X::const_pointer&lt;/code&gt; with no change in semantics.</source>
          <target state="translated">의미 상 변화가없는 &lt;code&gt;X::const_pointer&lt;/code&gt; 유형의 객체 .</target>
        </trans-unit>
        <trans-unit id="01d3cca06bd0b00051a605b308fce11c908e3d6e" translate="yes" xml:space="preserve">
          <source>object of type &lt;code&gt;X::const_void_pointer&lt;/code&gt; with no change in semantics.</source>
          <target state="translated">의미 상 변화가없는 &lt;code&gt;X::const_void_pointer&lt;/code&gt; 유형의 객체 .</target>
        </trans-unit>
        <trans-unit id="bf7d57c4e5e3b8d8722018d7101fbedd3fb6b706" translate="yes" xml:space="preserve">
          <source>object parameter</source>
          <target state="translated">객체 매개 변수</target>
        </trans-unit>
        <trans-unit id="c79515e0ed0d45f9c2b9ebb23b467b1b3e5d7bc4" translate="yes" xml:space="preserve">
          <source>object representation</source>
          <target state="translated">객체 표현</target>
        </trans-unit>
        <trans-unit id="7449bbb4d4fb2c3ef6140079194356f9374a73b5" translate="yes" xml:space="preserve">
          <source>object to reference</source>
          <target state="translated">참조 할 객체</target>
        </trans-unit>
        <trans-unit id="2513abf9f60870cef4e235760076e9f7d376e95b" translate="yes" xml:space="preserve">
          <source>object to swap with</source>
          <target state="translated">교환 할 객체</target>
        </trans-unit>
        <trans-unit id="07aa1adb1f2c50240e0ac7bf41dd05dbcfb4a6a3" translate="yes" xml:space="preserve">
          <source>object type, capable of holding all information needed to control a C I/O stream</source>
          <target state="translated">CI / O 스트림을 제어하는 ​​데 필요한 모든 정보를 보유 할 수있는 객체 유형</target>
        </trans-unit>
        <trans-unit id="37d487e486576e8582191f5d20fecdcfec9ef6d5" translate="yes" xml:space="preserve">
          <source>object types are (possibly cv-qualified) types that are not function types, reference types, or the type &lt;code&gt;void&lt;/code&gt; (see also &lt;code&gt;&lt;a href=&quot;../types/is_object&quot;&gt;std::is_object&lt;/a&gt;&lt;/code&gt;);</source>
          <target state="translated">객체 유형은 함수 유형, 참조 유형 또는 &lt;code&gt;void&lt;/code&gt; 유형이 아닌 (cv-qualified) 유형입니다 ( &lt;code&gt;&lt;a href=&quot;../types/is_object&quot;&gt;std::is_object&lt;/a&gt;&lt;/code&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="722401e1e428886414d114d3954679915b441a37" translate="yes" xml:space="preserve">
          <source>object whose contained value to assign</source>
          <target state="translated">할당 할 값이 포함 된 객체</target>
        </trans-unit>
        <trans-unit id="b31e6095601e66d89c6288ce1561bddaf0afdcb8" translate="yes" xml:space="preserve">
          <source>object whose value to replace</source>
          <target state="translated">값을 바꿀 객체</target>
        </trans-unit>
        <trans-unit id="f76863b859b26b99adb024777204b843b5c01fb8" translate="yes" xml:space="preserve">
          <source>object with implementation defined proxy type</source>
          <target state="translated">구현 정의 프록시 유형을 가진 객체</target>
        </trans-unit>
        <trans-unit id="603903973360085e58735d1f0248651fe29fd9f3" translate="yes" xml:space="preserve">
          <source>object&lt;code&gt;= &lt;/code&gt;&lt;code&gt;{ &lt;/code&gt;arg1, arg2, ...&lt;code&gt;}&lt;/code&gt;</source>
          <target state="translated">object &lt;code&gt;= &lt;/code&gt; &lt;code&gt;{ &lt;/code&gt; arg1, arg2, ... &lt;code&gt;}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8ba82b2912656e4462c1cbfca8288477205d6c94" translate="yes" xml:space="preserve">
          <source>object&lt;code&gt;[ { &lt;/code&gt;arg1, arg2, ...&lt;code&gt;} ]&lt;/code&gt;</source>
          <target state="translated">객체 &lt;code&gt;[ { &lt;/code&gt; arg1, arg2, ... &lt;code&gt;} ]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0f7f39ec7e62249ee81dac2c3f1b3586a4fd52e" translate="yes" xml:space="preserve">
          <source>objects</source>
          <target state="translated">objects</target>
        </trans-unit>
        <trans-unit id="5948175fc134eab430f7172b78a04b0e7fdad716" translate="yes" xml:space="preserve">
          <source>objects of lock-free &lt;code&gt;&lt;a href=&quot;../../atomic/atomic&quot;&gt;std::atomic&lt;/a&gt;&lt;/code&gt; types (since C++11)</source>
          <target state="translated">잠금이없는 &lt;code&gt;&lt;a href=&quot;../../atomic/atomic&quot;&gt;std::atomic&lt;/a&gt;&lt;/code&gt; 유형의 객체 (C ++ 11부터)</target>
        </trans-unit>
        <trans-unit id="22c9abf1ca3bde35f2a844a8bd9bcef2e7d9ed70" translate="yes" xml:space="preserve">
          <source>objects of type &lt;code&gt;volatile &lt;a href=&quot;sig_atomic_t&quot;&gt;std::sig_atomic_t&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;volatile &lt;a href=&quot;sig_atomic_t&quot;&gt;std::sig_atomic_t&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;sig_atomic_t&quot;&gt;std :: sig_atomic_t&lt;/a&gt; 유형의 객체</target>
        </trans-unit>
        <trans-unit id="5bce0768528d26a98eaa91d4272d8a6ddffa7ca2" translate="yes" xml:space="preserve">
          <source>objects to swap</source>
          <target state="translated">바꿀 객체</target>
        </trans-unit>
        <trans-unit id="39a478d0e2fdfa1c1f5466da8ef1e53fdb7f0e85" translate="yes" xml:space="preserve">
          <source>obtain information about the time zone at the stored time point</source>
          <target state="translated">저장된 시점에서 시간대에 대한 정보를 얻습니다</target>
        </trans-unit>
        <trans-unit id="d82d8ee271a83207342e558b477d6a8f3d09d381" translate="yes" xml:space="preserve">
          <source>obtain information associated with a &lt;code&gt;sys_time&lt;/code&gt; or &lt;code&gt;local_time&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sys_time&lt;/code&gt; 또는 &lt;code&gt;local_time&lt;/code&gt; 과 관련된 정보를 얻 습니다.</target>
        </trans-unit>
        <trans-unit id="4dc2ef7fc0f2135abf6cb86cacb52062ac588206" translate="yes" xml:space="preserve">
          <source>obtains a copy of the associated locale</source>
          <target state="translated">관련 로케일의 사본을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="59d4ef561c569a2e3a367f358fbdf3a19ad44510" translate="yes" xml:space="preserve">
          <source>obtains a copy of the current character</source>
          <target state="translated">현재 캐릭터의 사본을 얻습니다</target>
        </trans-unit>
        <trans-unit id="aba25749be0919790c9c5f6a11d4108349a0f67b" translate="yes" xml:space="preserve">
          <source>obtains a copy of the time zone pointer</source>
          <target state="translated">시간대 포인터의 사본을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="f7382457f3a6ae1e208a341dc0b27e1a025837e2" translate="yes" xml:space="preserve">
          <source>obtains a dereferenceable pointer to its argument</source>
          <target state="translated">인수에 대한 역 참조 가능한 포인터를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="e270ebcb8cdf6b6bd2299a3582cf7dbc1997e20f" translate="yes" xml:space="preserve">
          <source>obtains a facet from a locale</source>
          <target state="translated">로케일에서 패싯을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="b3d09fbe466a530054319d88792f2315b8b6c368" translate="yes" xml:space="preserve">
          <source>obtains a pointer to the associated strstreambuf</source>
          <target state="translated">관련된 strstreambuf에 대한 포인터를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="6804a9462134792dd573842a620549bf4f63feda" translate="yes" xml:space="preserve">
          <source>obtains a pointer to the beginning of a contiguous range</source>
          <target state="translated">연속 범위의 시작에 대한 포인터를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="fa3d4b0a896ebbb83d0921235c6397f0c832e64c" translate="yes" xml:space="preserve">
          <source>obtains a pointer to the final destination stream buffer</source>
          <target state="translated">최종 목적지 스트림 버퍼에 대한 포인터를 얻는다</target>
        </trans-unit>
        <trans-unit id="bb761fc240e832fdea07c9f4abededabdf462c9c" translate="yes" xml:space="preserve">
          <source>obtains a pointer to the stored exception</source>
          <target state="translated">저장된 예외에 대한 포인터를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="458d57f7d710a30569ba7fbd7e8c43333289a2d3" translate="yes" xml:space="preserve">
          <source>obtains a pointer to the stored target</source>
          <target state="translated">저장된 대상에 대한 포인터를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="947b32f83ac7df664c4a4dbd25a4ec31af197c17" translate="yes" xml:space="preserve">
          <source>obtains a pointer to the underlying basic_syncbuf</source>
          <target state="translated">기본 basic_syncbuf에 대한 포인터를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="caac36c0106daa04608ab12e152f84c8840fb6d1" translate="yes" xml:space="preserve">
          <source>obtains a pointer to the value of a pointed-to variant given the index or the type (if unique), returns null on error</source>
          <target state="translated">인덱스 또는 유형 (유일한 경우)이 지정된 지정된 변형 값에 대한 포인터를 가져오고 오류시 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4d0d03b3fbb315661b3545cb65ca22b14c0f51fe" translate="yes" xml:space="preserve">
          <source>obtains a raw pointer from a fancy pointer (inverse of pointer_to)</source>
          <target state="translated">멋진 포인터에서 raw 포인터를 얻습니다 (pointer_to와 반대)</target>
        </trans-unit>
        <trans-unit id="dc3fd09d2c5458ce01e764bfe058e6f1e3213e4b" translate="yes" xml:space="preserve">
          <source>obtains a raw pointer from a pointer-like type</source>
          <target state="translated">포인터와 같은 유형에서 원시 포인터를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="b53ed9bee4075089086855348971622c43bcc1de" translate="yes" xml:space="preserve">
          <source>obtains a reference to const to its argument</source>
          <target state="translated">인수에 대한 const에 대한 참조를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="032142ad766348a39feea94d69f295fd6cc722b0" translate="yes" xml:space="preserve">
          <source>obtains a reference to its argument for use in unevaluated context</source>
          <target state="translated">평가되지 않은 컨텍스트에서 사용하기위한 인수에 대한 참조를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="3b266003f031520774bd07ea71389507dfcb4e5f" translate="yes" xml:space="preserve">
          <source>obtains a reference to the &quot;C&quot; locale</source>
          <target state="translated">&quot;C&quot;로케일에 대한 참조를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="695a8d667b1fc9cedc199ca9df857ff5dee6e4c2" translate="yes" xml:space="preserve">
          <source>obtains a subspan</source>
          <target state="translated">서브 스팬을 얻습니다</target>
        </trans-unit>
        <trans-unit id="33e42e94e1ab3e59d13a8c9d2040be248828a220" translate="yes" xml:space="preserve">
          <source>obtains a subspan consisting of the first N elements of the sequence</source>
          <target state="translated">시퀀스의 첫 번째 N 요소로 구성된 서브 스팬을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="5ab5bc96d325813f8a0cdeef212d77af653dc24b" translate="yes" xml:space="preserve">
          <source>obtains a subspan consisting of the last N elements of the sequence</source>
          <target state="translated">시퀀스의 마지막 N 개 요소로 구성된 서브 스팬을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="7761cb7b5331598e036244003b926c75afbdfe4c" translate="yes" xml:space="preserve">
          <source>obtains actual address of an object, even if the</source>
          <target state="translated">다음과 같은 경우에도 객체의 실제 주소를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="582e2f1d566c912403de2cfd558b5fa02d0c71ab" translate="yes" xml:space="preserve">
          <source>obtains an &lt;code&gt;inner_allocator&lt;/code&gt; reference</source>
          <target state="translated">&lt;code&gt;inner_allocator&lt;/code&gt; 참조를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="c400ed3adfebf01f7a9aee7048dfd4d74b9dde20" translate="yes" xml:space="preserve">
          <source>obtains an &lt;code&gt;outer_allocator&lt;/code&gt; reference</source>
          <target state="translated">&lt;code&gt;outer_allocator&lt;/code&gt; 참조를 얻습니다</target>
        </trans-unit>
        <trans-unit id="e49ed699bf452f6526c6f8633e5e8a16fcbf4b07" translate="yes" xml:space="preserve">
          <source>obtains an rvalue reference</source>
          <target state="translated">rvalue 참조를 얻습니다</target>
        </trans-unit>
        <trans-unit id="fbb5499ba37bd45b847336adfc98fc98ea269f7e" translate="yes" xml:space="preserve">
          <source>obtains an rvalue reference if the move constructor does not throw</source>
          <target state="translated">이동 생성자가 던지지 않으면 rvalue 참조를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="71893d618837e37338fecc0138ce11e73d239894" translate="yes" xml:space="preserve">
          <source>obtains iterator type or &lt;code&gt;subrange&lt;/code&gt; type of a &lt;a href=&quot;../ranges/range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; which also models &lt;a href=&quot;../ranges/range&quot;&gt;&lt;code&gt;__ForwardingRange&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../ranges/range&quot;&gt; &lt;code&gt;__ForwardingRange&lt;/code&gt; 를&lt;/a&gt; 모델링 하는 &lt;a href=&quot;../ranges/range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 의 반복자 유형 또는 &lt;code&gt;subrange&lt;/code&gt; 유형을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="5eb88c35684e02a4d8f1c2025f4bbea6eeda1362" translate="yes" xml:space="preserve">
          <source>obtains iterator type or &lt;code&gt;subrange&lt;/code&gt; type of a &lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; which also models &lt;a href=&quot;range&quot;&gt;&lt;code&gt;__ForwardingRange&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;range&quot;&gt; &lt;code&gt;__ForwardingRange&lt;/code&gt; 를&lt;/a&gt; 모델링 하는 &lt;a href=&quot;range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 의 반복자 유형 또는 &lt;code&gt;subrange&lt;/code&gt; 유형을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="bb6e2594c9331bc1a447a9e52d0fdedb46352bf8" translate="yes" xml:space="preserve">
          <source>obtains iterator type or &lt;code&gt;subrange&lt;/code&gt; type of a &lt;a href=&quot;ranges/range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; which also models &lt;a href=&quot;ranges/range&quot;&gt;&lt;code&gt;__ForwardingRange&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;ranges/range&quot;&gt; &lt;code&gt;__ForwardingRange&lt;/code&gt; 를&lt;/a&gt; 모델링 하는 &lt;a href=&quot;ranges/range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt; 의 반복자 유형 또는 &lt;code&gt;subrange&lt;/code&gt; 유형을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0f092c79289951dc3379d8d8d59463545c947490" translate="yes" xml:space="preserve">
          <source>obtains preferred ordering of day, month, and year</source>
          <target state="translated">일, 월 및 연도의 우선 순위를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="269151bd4aec883dca8ac59aaf5e7d2893b9c063" translate="yes" xml:space="preserve">
          <source>obtains the &quot;C&quot; locale character classification table</source>
          <target state="translated">&quot;C&quot;로케일 문자 분류 표를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="fe5825fe47c1476d2fb6b6008f36b68d805fd148" translate="yes" xml:space="preserve">
          <source>obtains the 32-bit values stored in std::seed_seq</source>
          <target state="translated">std :: seed_seq에 저장된 32 비트 값을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="47194bbcb310c6bfc76c757d98e379bc8394d74e" translate="yes" xml:space="preserve">
          <source>obtains the &lt;code&gt;error_category&lt;/code&gt; for this &lt;code&gt;error_condition&lt;/code&gt;</source>
          <target state="translated">이 &lt;code&gt;error_condition&lt;/code&gt; 에 대한 &lt;code&gt;error_category&lt;/code&gt; 를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="2866d551a5128b5e815ede83a1e7d6332f689965" translate="yes" xml:space="preserve">
          <source>obtains the &lt;code&gt;typeid&lt;/code&gt; of the stored target</source>
          <target state="translated">저장된 대상 의 &lt;code&gt;typeid&lt;/code&gt; 를 얻습니다</target>
        </trans-unit>
        <trans-unit id="02e69ff5d9ea1abd8ae6e505eb1e85fe526c40af" translate="yes" xml:space="preserve">
          <source>obtains the absolute value of the duration</source>
          <target state="translated">지속 시간의 절대 값을 얻습니다</target>
        </trans-unit>
        <trans-unit id="cf073ef6dc4657f1e63504f60efff6776b32559d" translate="yes" xml:space="preserve">
          <source>obtains the address of an object, even if &lt;code&gt;operator&amp;amp;&lt;/code&gt; is overloaded</source>
          <target state="translated">&lt;code&gt;operator&amp;amp;&lt;/code&gt; 가 오버로드 된 경우에도 객체의 주소를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="c07de43091d262c7c571b7441cc5fe599af5a5fd" translate="yes" xml:space="preserve">
          <source>obtains the allocator to use after copying a standard container</source>
          <target state="translated">표준 컨테이너를 복사 한 후 사용할 할당자를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="b5d6ca316e4a59044f4b4b77278425b00f8df83d" translate="yes" xml:space="preserve">
          <source>obtains the character classification table</source>
          <target state="translated">문자 분류 표를 얻습니다</target>
        </trans-unit>
        <trans-unit id="4c2d31f7958f53efce6bb5a0f16c4bb0de672c99" translate="yes" xml:space="preserve">
          <source>obtains the current new handler</source>
          <target state="translated">현재의 새로운 핸들러를 얻는다</target>
        </trans-unit>
        <trans-unit id="bbf6d53aa4eba965551e678eda1816fa1c21022e" translate="yes" xml:space="preserve">
          <source>obtains the current terminate_handler</source>
          <target state="translated">현재 terminate_handler를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="785ecf39a6184a37e165e08d47b2343016af6ca3" translate="yes" xml:space="preserve">
          <source>obtains the current unexpected_handler</source>
          <target state="translated">현재 unexpected_handler를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="5263c3578eb963846ee7a1d9c49592998c6dd1ab" translate="yes" xml:space="preserve">
          <source>obtains the entropy estimate for the non-deterministic random number generator</source>
          <target state="translated">비 결정적 난수 생성기에 대한 엔트로피 추정값을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="c6d7dd8484fc81606750af1ba616a082ef5f4b3a" translate="yes" xml:space="preserve">
          <source>obtains the error_category for this error_code</source>
          <target state="translated">이 error_code에 대한 error_category를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="34956034b67b3039d1cc4d5b249ba70f7265d117" translate="yes" xml:space="preserve">
          <source>obtains the error_condition for this error_code</source>
          <target state="translated">이 error_code에 대한 error_condition을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="c653539e1fb51cfeb0b3ccde230613226343cda6" translate="yes" xml:space="preserve">
          <source>obtains the explanatory string</source>
          <target state="translated">설명 문자열을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="2ef3713e17ed858d6e0fb0ec828e17088d87f20e" translate="yes" xml:space="preserve">
          <source>obtains the explanatory string for this error_code</source>
          <target state="translated">이 error_code에 대한 설명 문자열을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="b078fb1525e5170a0b1bf8c7e3e2332e68f024c3" translate="yes" xml:space="preserve">
          <source>obtains the iterator and sentinel types of a range</source>
          <target state="translated">범위의 반복자와 센티넬 유형을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="b811a4a8cd79b476cdc910987dda7b2d6f753818" translate="yes" xml:space="preserve">
          <source>obtains the list of probabilities</source>
          <target state="translated">확률 목록을 얻습니다</target>
        </trans-unit>
        <trans-unit id="b972e1e39f7e17fd37462eb2acbe6b38de1eff1f" translate="yes" xml:space="preserve">
          <source>obtains the name of the category</source>
          <target state="translated">카테고리의 이름을 얻습니다</target>
        </trans-unit>
        <trans-unit id="1f26918ee5afef98abc6b981a2e09b26a2b23936" translate="yes" xml:space="preserve">
          <source>obtains the name of this &lt;code&gt;time_zone&lt;/code&gt;</source>
          <target state="translated">이 &lt;code&gt;time_zone&lt;/code&gt; 의 이름을 얻습니다</target>
        </trans-unit>
        <trans-unit id="061c94cbae279b89ee2011a3fe226ad4b34eb844" translate="yes" xml:space="preserve">
          <source>obtains the number of 32-bit values stored in std::seed_seq</source>
          <target state="translated">std :: seed_seq에 저장된 32 비트 값 수를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="42acc667d3e14c689c594a2b0ee8e1b851392c35" translate="yes" xml:space="preserve">
          <source>obtains the number of characters available for input in the associated input sequence, if known</source>
          <target state="translated">알려진 경우 연관된 입력 순서로 입력 할 수있는 문자 수를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="245270b20b2c0216a58b6c38069f3b8c59f257df" translate="yes" xml:space="preserve">
          <source>obtains the number of characters immediately available in the get area</source>
          <target state="translated">get 영역에서 즉시 사용 가능한 문자 수를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="d9233e114c92bbad0bb38f8f110c5c413b5fefab" translate="yes" xml:space="preserve">
          <source>obtains the number of characters written</source>
          <target state="translated">쓴 문자 수를 얻습니다</target>
        </trans-unit>
        <trans-unit id="6d5fe5650c99757eefb27ecd9c1ef03c4a8d7ea9" translate="yes" xml:space="preserve">
          <source>obtains the number of dimensions of an array type</source>
          <target state="translated">배열 유형의 차원 수를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="081877f70c595e1fc18be1211379144f43f4439d" translate="yes" xml:space="preserve">
          <source>obtains the pointer to the underlying array</source>
          <target state="translated">기본 배열에 대한 포인터를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="a3d61fc7d4f35d6b07a315e58aa683dc937a27f6" translate="yes" xml:space="preserve">
          <source>obtains the size of &lt;code&gt;tuple&lt;/code&gt; at compile time</source>
          <target state="translated">컴파일 타임 에 &lt;code&gt;tuple&lt;/code&gt; 의 크기를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="100dfcc589c8e13be5331c833ba954a8993ac9d9" translate="yes" xml:space="preserve">
          <source>obtains the size of a &lt;code&gt;pair&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pair&lt;/code&gt; 의 크기를 얻습니다</target>
        </trans-unit>
        <trans-unit id="b0c8b64c63c6c02cfaafabfeaf65422c7af4bffd" translate="yes" xml:space="preserve">
          <source>obtains the size of a range whose size can be calculated in constant time</source>
          <target state="translated">일정한 시간에 크기를 계산할 수있는 범위의 크기를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="8fc5da4511b3487c6c5bbab577458834ec580a60" translate="yes" xml:space="preserve">
          <source>obtains the size of a static-extent &lt;code&gt;span&lt;/code&gt;</source>
          <target state="translated">정적 확장 &lt;code&gt;span&lt;/code&gt; 의 크기를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="b246b055aa41999e19f3cdbdf96df103bcf08e24" translate="yes" xml:space="preserve">
          <source>obtains the size of an &lt;code&gt;array&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; 의 크기를 얻습니다</target>
        </trans-unit>
        <trans-unit id="eea7154efe3a7275a518cce33e769f5d61200327" translate="yes" xml:space="preserve">
          <source>obtains the size of an array type along a specified dimension</source>
          <target state="translated">지정된 차원을 따라 배열 유형의 크기를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="bab5189634e6543cf4713b7f9ce09873fb4927c9" translate="yes" xml:space="preserve">
          <source>obtains the size of the variant's list of alternatives at compile time</source>
          <target state="translated">컴파일시 변형의 대안 목록 크기를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="40f01a03ca22eb55ac3505ca88b17a0a625169c8" translate="yes" xml:space="preserve">
          <source>obtains the stored time point as a &lt;code&gt;local_time&lt;/code&gt;</source>
          <target state="translated">저장된 시점을 &lt;code&gt;local_time&lt;/code&gt; 으로 얻습니다.</target>
        </trans-unit>
        <trans-unit id="22caace39fe6f4de08515eb17d6c11745244baf5" translate="yes" xml:space="preserve">
          <source>obtains the stored time point as a &lt;code&gt;sys_time&lt;/code&gt;</source>
          <target state="translated">저장된 시점을 &lt;code&gt;sys_time&lt;/code&gt; 으로 얻습니다.</target>
        </trans-unit>
        <trans-unit id="fc041616be4acf54df7270817bc2e66b0db8f00d" translate="yes" xml:space="preserve">
          <source>obtains the target of a symbolic link</source>
          <target state="translated">심볼릭 링크의 대상을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="6a75326657ce933d9713c8ea196b72772d7a2780" translate="yes" xml:space="preserve">
          <source>obtains the time of leap second insertion</source>
          <target state="translated">윤초 삽입 시간 확보</target>
        </trans-unit>
        <trans-unit id="a1853f1cc2b3a296fbc6eca3b168805cc492a16d" translate="yes" xml:space="preserve">
          <source>obtains the type of the alternative specified by its index, at compile time</source>
          <target state="translated">컴파일 타임에 인덱스로 지정된 대안의 유형을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="9a16f803070e8c397bd2f65e05bcd1a320a1c3bb" translate="yes" xml:space="preserve">
          <source>obtains the type of the elements of &lt;code&gt;array&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;array&lt;/code&gt; 요소의 유형을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="31271a30fb1fc0a62160266a5a2c386f70241d9b" translate="yes" xml:space="preserve">
          <source>obtains the type of the elements of &lt;code&gt;pair&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pair&lt;/code&gt; 의 요소 유형을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="fa7742d4bc5df70647ea7110e16bb1b4c1c067c4" translate="yes" xml:space="preserve">
          <source>obtains the type of the elements of a static-extent &lt;code&gt;span&lt;/code&gt;</source>
          <target state="translated">정적 확장 &lt;code&gt;span&lt;/code&gt; 의 요소 유형을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="40a5536ff5df4b19244f88d05a4c2fdd8a3c64dc" translate="yes" xml:space="preserve">
          <source>obtains the type of the specified element</source>
          <target state="translated">지정된 요소의 타입을 얻는다</target>
        </trans-unit>
        <trans-unit id="22e320ba6b2ef22a3ca6ff638bf4aefc231afcb9" translate="yes" xml:space="preserve">
          <source>obtains the type's alignment requirements</source>
          <target state="translated">유형의 정렬 요구 사항을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="848152f73f9f08773dd2b20d625885a859f200dd" translate="yes" xml:space="preserve">
          <source>obtains the underlying integer type for a given enumeration type</source>
          <target state="translated">주어진 열거 형에 대한 기본 정수 유형을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="bc40e4421a2a0475aeb04eabc7348fae45666133" translate="yes" xml:space="preserve">
          <source>obtains the value of the error_code</source>
          <target state="translated">error_code의 값을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="c3f9a8208f695f2121bc2833465a670d8e7e36f8" translate="yes" xml:space="preserve">
          <source>obtains the value of the error_condition</source>
          <target state="translated">error_condition의 값을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="89144074d73cd99468bd6452d6b47226d0da5ab7" translate="yes" xml:space="preserve">
          <source>obtains uninitialized storage</source>
          <target state="translated">초기화되지 않은 스토리지를 얻습니다.</target>
        </trans-unit>
        <trans-unit id="9390794b3bf6179b58bc06edb8692ccf8e9c4767" translate="yes" xml:space="preserve">
          <source>obuf</source>
          <target state="translated">obuf</target>
        </trans-unit>
        <trans-unit id="c40aa649814e362e3f1fc63e4205db7cdb1ac5ed" translate="yes" xml:space="preserve">
          <source>occur</source>
          <target state="translated">occur</target>
        </trans-unit>
        <trans-unit id="40b12a563b2d94c4c7e23dbfa080625c9ba553e0" translate="yes" xml:space="preserve">
          <source>occurs.</source>
          <target state="translated">occurs.</target>
        </trans-unit>
        <trans-unit id="8eb277b706a2a088c3330b5723d58b4e931be024" translate="yes" xml:space="preserve">
          <source>octal</source>
          <target state="translated">octal</target>
        </trans-unit>
        <trans-unit id="0ded749f1a1cd0d2443303d960ad8054df9b245e" translate="yes" xml:space="preserve">
          <source>octal-literal</source>
          <target state="translated">octal-literal</target>
        </trans-unit>
        <trans-unit id="98b05b1f5d33257ba934dfb40ba7a5d6b9789456" translate="yes" xml:space="preserve">
          <source>octal-literal is the digit zero (&lt;code&gt;0&lt;/code&gt;) followed by zero or more octal digits (&lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt;, &lt;code&gt;4&lt;/code&gt;, &lt;code&gt;5&lt;/code&gt;, &lt;code&gt;6&lt;/code&gt;, &lt;code&gt;7&lt;/code&gt;)</source>
          <target state="translated">8 진 리터럴은 숫자 0 ( &lt;code&gt;0&lt;/code&gt; ) 다음에 0 개 이상의 8 진수 ( &lt;code&gt;0&lt;/code&gt; , &lt;code&gt;1&lt;/code&gt; , &lt;code&gt;2&lt;/code&gt; , &lt;code&gt;3&lt;/code&gt; , &lt;code&gt;4&lt;/code&gt; , &lt;code&gt;5&lt;/code&gt; , &lt;code&gt;6&lt;/code&gt; , &lt;code&gt;7&lt;/code&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="b9205f63f0852b4dfe13f7e5fc2e20c274d1d84f" translate="yes" xml:space="preserve">
          <source>octal-literalinteger-suffix(optional)</source>
          <target state="translated">octal-literalinteger-suffix(optional)</target>
        </trans-unit>
        <trans-unit id="f4cac5a11d714908356926d07076dc7b66e639e7" translate="yes" xml:space="preserve">
          <source>octal-literalud-suffix</source>
          <target state="translated">octal-literalud-suffix</target>
        </trans-unit>
        <trans-unit id="ea5728146ffb996eb41d5ea3ad43c0d526b54a04" translate="yes" xml:space="preserve">
          <source>odr-used</source>
          <target state="translated">odr-used</target>
        </trans-unit>
        <trans-unit id="ff99bcd59ad6fc3ded296dd63c752b56e4af4829" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;*this&lt;/code&gt; to a copy of &lt;code&gt;f&lt;/code&gt;, as if by executing &lt;code&gt;function(f).swap(*this);&lt;/code&gt;</source>
          <target state="translated">중 &lt;code&gt;*this&lt;/code&gt; 사본에 &lt;code&gt;f&lt;/code&gt; , 것처럼 실행함으로써, &lt;code&gt;function(f).swap(*this);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="402322247c9f60c0293ca909a83a49bb7ca197d3" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;*this&lt;/code&gt; to the callable &lt;code&gt;f&lt;/code&gt;, as if by executing &lt;code&gt;function(&lt;a href=&quot;../../forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;F&amp;gt;(f)).swap(*this);&lt;/code&gt;. This operator does not participate in overload resolution unless &lt;code&gt;f&lt;/code&gt; is &lt;a href=&quot;../../../named_req/callable&quot;&gt;Callable&lt;/a&gt; for argument types &lt;code&gt;Args...&lt;/code&gt; and return type &lt;code&gt;R&lt;/code&gt;.(since C++14)</source>
          <target state="translated">중 &lt;code&gt;*this&lt;/code&gt; 호출 가능으로 &lt;code&gt;f&lt;/code&gt; , 마치 의해 실행 &lt;code&gt;function(&lt;a href=&quot;../../forward&quot;&gt;std::forward&lt;/a&gt;&amp;lt;F&amp;gt;(f)).swap(*this);&lt;/code&gt; . 인수 유형 &lt;code&gt;Args...&lt;/code&gt; 대해 &lt;code&gt;f&lt;/code&gt; 가 &lt;a href=&quot;../../../named_req/callable&quot;&gt;호출 가능&lt;/a&gt; 하고 유형 &lt;code&gt;R&lt;/code&gt; 을 리턴 하지 않는 한이 연산자는 과부하 해결에 참여하지 않습니다 (C ++ 14부터).</target>
        </trans-unit>
        <trans-unit id="68b45ad38f7920f44684e23efefe5647e3763e22" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;*this&lt;/code&gt;. If &lt;code&gt;other&lt;/code&gt; is</source>
          <target state="translated">의 &lt;code&gt;*this&lt;/code&gt; . 만약 &lt;code&gt;other&lt;/code&gt; IS</target>
        </trans-unit>
        <trans-unit id="d1494792d999a47f09277b22dc85496a481c54b9" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;&lt;a href=&quot;../../types/integral_constant&quot;&gt;std::integral_constant&lt;/a&gt;&amp;lt;int, N&amp;gt;&lt;/code&gt; with &lt;code&gt;N &amp;gt; 0&lt;/code&gt; to indicate that &lt;code&gt;T&lt;/code&gt; should be treated as N'th placeholder type.</source>
          <target state="translated">의 &lt;code&gt;&lt;a href=&quot;../../types/integral_constant&quot;&gt;std::integral_constant&lt;/a&gt;&amp;lt;int, N&amp;gt;&lt;/code&gt; 과 &lt;code&gt;N &amp;gt; 0&lt;/code&gt; 것을 나타내는 &lt;code&gt;T&lt;/code&gt; 가 N 번째 자리 형으로 처리한다.</target>
        </trans-unit>
        <trans-unit id="85f36a4873716927879dc70a3f1df989752382a3" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;&lt;a href=&quot;../../types/integral_constant&quot;&gt;std::true_type&lt;/a&gt;&lt;/code&gt; to indicate that &lt;code&gt;T&lt;/code&gt; should be treated by &lt;code&gt;&lt;a href=&quot;bind&quot;&gt;std::bind&lt;/a&gt;&lt;/code&gt; as if it were the type of a bind subexpression: when a bind-generated function object is invoked, a bound argument of this type will be invoked as a function object and will be given all the unbound arguments passed to the bind-generated object.</source>
          <target state="translated">의 &lt;code&gt;&lt;a href=&quot;../../types/integral_constant&quot;&gt;std::true_type&lt;/a&gt;&lt;/code&gt; 을 나타 내기 위해 &lt;code&gt;T&lt;/code&gt; 가 에 의해 처리되어야한다 &lt;code&gt;&lt;a href=&quot;bind&quot;&gt;std::bind&lt;/a&gt;&lt;/code&gt; 은 바인드 표현식의 유형을 것처럼 : 바인딩 생성 된 함수 객체가 호출 될 때,이 유형의 바운드 인수는 함수로 호출됩니다 바인드 생성 된 오브젝트에 전달 된 모든 언 바운드 인수가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="aa030fe36b8afcbec0bba4ccdbc4b7ca069d305b" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">의 &lt;code&gt;T&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="be39e16e7d5e46fb2a10d93a9bc2f003d1ff080b" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;T&lt;/code&gt;. If &lt;code&gt;&lt;a href=&quot;iterator_traits&quot;&gt;std::iterator_traits&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; is not specialized, then &lt;code&gt;std::iter_difference_t&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;code&gt;std::incrementable_traits&amp;lt;T&amp;gt;::difference_type&lt;/code&gt;. Otherwise, it is &lt;code&gt;&lt;a href=&quot;iterator_traits&quot;&gt;std::iterator_traits&lt;/a&gt;&amp;lt;T&amp;gt;::difference_type&lt;/code&gt;.</source>
          <target state="translated">의 &lt;code&gt;T&lt;/code&gt; . 만약 &lt;code&gt;&lt;a href=&quot;iterator_traits&quot;&gt;std::iterator_traits&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; 전문되어 있지 않은 경우, &lt;code&gt;std::iter_difference_t&amp;lt;T&amp;gt;&lt;/code&gt; IS &lt;code&gt;std::incrementable_traits&amp;lt;T&amp;gt;::difference_type&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;iterator_traits&quot;&gt;std::iterator_traits&lt;/a&gt;&amp;lt;T&amp;gt;::difference_type&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1c1f08597d189d452f76c228f7a58e9a2ac02efd" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;T&lt;/code&gt;. If &lt;code&gt;&lt;a href=&quot;iterator_traits&quot;&gt;std::iterator_traits&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; is not specialized, then &lt;code&gt;std::iter_value_t&amp;lt;T&amp;gt;&lt;/code&gt; is &lt;code&gt;std::readable_traits&amp;lt;T&amp;gt;::value_type&lt;/code&gt;. Otherwise, it is &lt;code&gt;&lt;a href=&quot;iterator_traits&quot;&gt;std::iterator_traits&lt;/a&gt;&amp;lt;T&amp;gt;::value_type&lt;/code&gt;.</source>
          <target state="translated">의 &lt;code&gt;T&lt;/code&gt; . 만약 &lt;code&gt;&lt;a href=&quot;iterator_traits&quot;&gt;std::iterator_traits&lt;/a&gt;&amp;lt;T&amp;gt;&lt;/code&gt; 전문되어 있지 않은 경우, &lt;code&gt;std::iter_value_t&amp;lt;T&amp;gt;&lt;/code&gt; IS &lt;code&gt;std::readable_traits&amp;lt;T&amp;gt;::value_type&lt;/code&gt; . 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;iterator_traits&quot;&gt;std::iterator_traits&lt;/a&gt;&amp;lt;T&amp;gt;::value_type&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d74dbe8c05b03b73ee04d10cbdc2f24f35128e0d" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;T&lt;/code&gt;. The &quot;see below&quot; portion of the constraint on this alias template is satisfied if and only if the expression &lt;code&gt;ranges::iter_move(&lt;a href=&quot;../utility/declval&quot;&gt;std::declval&lt;/a&gt;&amp;lt;T&amp;amp;&amp;gt;())&lt;/code&gt; is valid and has a referenceable type (in particular, not &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="translated">의 &lt;code&gt;T&lt;/code&gt; . 이 별명 템플리트에 대한 제한 조건의 &quot;아래 참조&quot;부분은 표현식 &lt;code&gt;ranges::iter_move(&lt;a href=&quot;../utility/declval&quot;&gt;std::declval&lt;/a&gt;&amp;lt;T&amp;amp;&amp;gt;())&lt;/code&gt; 가 유효하고 참조 가능한 유형 (특히 &lt;code&gt;void&lt;/code&gt; 가 아님) 인 경우에만 충족됩니다. .</target>
        </trans-unit>
        <trans-unit id="6207cf9597280a46dce2f7bbc2c1c8aa24435ca6" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;T&lt;/code&gt;. This is the common reference type between its reference type and an lvalue reference to its value type.</source>
          <target state="translated">의 &lt;code&gt;T&lt;/code&gt; . 이것은 참조 유형과 값 유형에 대한 lvalue 참조 사이의 공통 참조 유형입니다.</target>
        </trans-unit>
        <trans-unit id="fe7755970baf3259dc281b967564cad7e284fd9b" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;other&lt;/code&gt; to &lt;code&gt;*this&lt;/code&gt;. &lt;code&gt;other&lt;/code&gt; is in a valid state with an unspecified value.</source>
          <target state="translated">&lt;code&gt;*this&lt;/code&gt; 에 &lt;code&gt;other&lt;/code&gt; 것 . &lt;code&gt;other&lt;/code&gt; 값은 지정되지 않은 유효한 상태입니다.</target>
        </trans-unit>
        <trans-unit id="0b79074a025fb552868c0fcffc9ad37a8dadce75" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;other&lt;/code&gt; to the</source>
          <target state="translated">의 &lt;code&gt;other&lt;/code&gt; 받는 사람</target>
        </trans-unit>
        <trans-unit id="0c8b53105c1dc7897b40404f254be42a0d7c6b33" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;other&lt;/code&gt;, as if by executing &lt;code&gt;function(other).swap(*this);&lt;/code&gt;</source>
          <target state="translated">의 &lt;code&gt;other&lt;/code&gt; 경우와 같이 실행하여 &lt;code&gt;function(other).swap(*this);&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3cc5519d1705f5680cbfde323dcf3ece495a589a" translate="yes" xml:space="preserve">
          <source>of &lt;code&gt;std::function&lt;/code&gt;. If a &lt;code&gt;std::function&lt;/code&gt; contains no target, it is called</source>
          <target state="translated">의 &lt;code&gt;std::function&lt;/code&gt; . 경우 &lt;code&gt;std::function&lt;/code&gt; 어떤 대상을 포함하지 않는, 그것은이라고합니다</target>
        </trans-unit>
        <trans-unit id="849d491bec5b71b0904f19a1bccc77a27e1e303c" translate="yes" xml:space="preserve">
          <source>of M</source>
          <target state="translated">M의</target>
        </trans-unit>
        <trans-unit id="cab7818da181a8c0f7d171d0a4e827ed5e5de6f4" translate="yes" xml:space="preserve">
          <source>of M 3) A reads the value stored by an atomic modification X, X precedes B in the</source>
          <target state="translated">3) A는 원자 수정 X에 의해 저장된 값을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="83b0804a31360aedb7fa4aafeb8800d028e772f3" translate="yes" xml:space="preserve">
          <source>of M.</source>
          <target state="translated">M.</target>
        </trans-unit>
        <trans-unit id="f12f3c8acb036c0132166d9b146f6636c4b003cc" translate="yes" xml:space="preserve">
          <source>of a &lt;a href=&quot;for&quot;&gt;for loop&lt;/a&gt;, in the</source>
          <target state="translated">에 &lt;a href=&quot;for&quot;&gt;for 루프&lt;/a&gt; 의</target>
        </trans-unit>
        <trans-unit id="bfcb370a91da93d2dd07dfda98789f6b431fa226" translate="yes" xml:space="preserve">
          <source>of a &lt;a href=&quot;range-for&quot;&gt;range for loop&lt;/a&gt;, in the</source>
          <target state="translated">(A)의 &lt;a href=&quot;range-for&quot;&gt;루프의 범위&lt;/a&gt; 에있는</target>
        </trans-unit>
        <trans-unit id="7a50ece89abffb6a35bf5adc1611e9c596df1187" translate="yes" xml:space="preserve">
          <source>of a C++ program are values, &lt;a href=&quot;objects&quot;&gt;objects&lt;/a&gt;, &lt;a href=&quot;reference&quot;&gt;references&lt;/a&gt;, &lt;a href=&quot;structured_binding&quot;&gt;structured bindings&lt;/a&gt;(since C++17), &lt;a href=&quot;functions&quot;&gt;functions&lt;/a&gt;, &lt;a href=&quot;enum&quot;&gt;enumerators&lt;/a&gt;, &lt;a href=&quot;type-id&quot;&gt;types&lt;/a&gt;, class members, &lt;a href=&quot;templates&quot;&gt;templates&lt;/a&gt;, &lt;a href=&quot;template_specialization&quot;&gt;template specializations&lt;/a&gt;, &lt;a href=&quot;namespace&quot;&gt;namespaces&lt;/a&gt;, and &lt;a href=&quot;parameter_pack&quot;&gt;parameter packs&lt;/a&gt;. Preprocessor &lt;a href=&quot;../preprocessor/replace&quot;&gt;macros&lt;/a&gt; are not C++ entities.</source>
          <target state="translated">C ++ 프로그램에는 값, &lt;a href=&quot;objects&quot;&gt;객체&lt;/a&gt; , &lt;a href=&quot;reference&quot;&gt;참조&lt;/a&gt; , &lt;a href=&quot;structured_binding&quot;&gt;구조적 바인딩&lt;/a&gt; (C ++ 17부터), &lt;a href=&quot;functions&quot;&gt;함수&lt;/a&gt; , &lt;a href=&quot;enum&quot;&gt;열거 자&lt;/a&gt; , &lt;a href=&quot;type-id&quot;&gt;유형&lt;/a&gt; , 클래스 멤버, &lt;a href=&quot;templates&quot;&gt;템플릿&lt;/a&gt; , &lt;a href=&quot;template_specialization&quot;&gt;템플릿 전문화&lt;/a&gt; , &lt;a href=&quot;namespace&quot;&gt;네임 스페이스&lt;/a&gt; 및 &lt;a href=&quot;parameter_pack&quot;&gt;매개 변수 팩이 있습니다&lt;/a&gt; . 전 처리기 &lt;a href=&quot;../preprocessor/replace&quot;&gt;매크로&lt;/a&gt; 는 C ++ 엔터티가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="ef5cf300ffae31b12e760d002e7dd01316d48827" translate="yes" xml:space="preserve">
          <source>of a class definition, is a brace-enclosed sequence of any number of the following:</source>
          <target state="translated">클래스 정의는 다음 중 임의의 수의 중괄호로 묶인 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="a6fdbccc89a82086da285ca3f76b69f186de0512" translate="yes" xml:space="preserve">
          <source>of a complex number is provided by &lt;a href=&quot;abs&quot;&gt;&lt;code&gt;std::abs&lt;/code&gt;&lt;/a&gt;, which is more costly to compute. In some situations, it may be replaced by &lt;code&gt;std::norm&lt;/code&gt;, for example, if &lt;code&gt;abs(z1) &amp;gt; abs(z2)&lt;/code&gt; then &lt;code&gt;norm(z1) &amp;gt; norm(z2)&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;abs&quot;&gt; &lt;code&gt;std::abs&lt;/code&gt; &lt;/a&gt; 가 복소수를 제공 하므로 계산 비용이 많이 듭니다. 경우에 따라 &lt;code&gt;std::norm&lt;/code&gt; 으로 대체 될 수 있습니다 &lt;code&gt;abs(z1) &amp;gt; abs(z2)&lt;/code&gt; 예 : abs (z1)&amp;gt; abs (z2) 이면 &lt;code&gt;norm(z1) &amp;gt; norm(z2)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1063337ffcf26b558f8820430054ca88c9ac620f" translate="yes" xml:space="preserve">
          <source>of a larger expression &lt;code&gt;e&lt;/code&gt;, where that larger expression is either a &lt;a href=&quot;expressions#Discarded-value_expressions&quot;&gt;discarded-value expression&lt;/a&gt; or has the lvalue-to-rvalue conversion applied to it</source>
          <target state="translated">더 큰 표현식 &lt;code&gt;e&lt;/code&gt; 의 경우 , 더 큰 표현식은 &lt;a href=&quot;expressions#Discarded-value_expressions&quot;&gt;폐기 된 값 표현식&lt;/a&gt; 이거나 lvalue-to-rvalue 변환이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="680e6ce2870022e455f6dc2f1a0300484aaa9f37" translate="yes" xml:space="preserve">
          <source>of a thread</source>
          <target state="translated">실의</target>
        </trans-unit>
        <trans-unit id="865bedffe0974bfa6c48a08e7b80ba753e65789c" translate="yes" xml:space="preserve">
          <source>of a variable provides its initial value at the time of construction.</source>
          <target state="translated">변수는 구성시 초기 값을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b62bd3794b2072ce2d3d164e6c5b87f5f96bdd49" translate="yes" xml:space="preserve">
          <source>of all atomic operations that are so tagged.</source>
          <target state="translated">태그가 지정된 모든 원자 연산 중</target>
        </trans-unit>
        <trans-unit id="df3280d84c7319751665111b8ff99a54f78b878c" translate="yes" xml:space="preserve">
          <source>of an</source>
          <target state="translated">의</target>
        </trans-unit>
        <trans-unit id="43d6a5c1ad568d274c5d5a43c41c1f438ac0414a" translate="yes" xml:space="preserve">
          <source>of an expression &lt;code&gt;e&lt;/code&gt; is a (possibly empty) set of id-expressions that appear within &lt;code&gt;e&lt;/code&gt;, combined as follows:</source>
          <target state="translated">표현식의 &lt;code&gt;e&lt;/code&gt; 는 다음과 같이 &lt;code&gt;e&lt;/code&gt; 안에 나타나는 id- 표현식 집합입니다 (비어있을 수 있음) .</target>
        </trans-unit>
        <trans-unit id="396e5d5372d4128098619c5c268598f72004b29c" translate="yes" xml:space="preserve">
          <source>of an expression is defined as follows:</source>
          <target state="translated">식의 정의는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="ccbdfabe9648edd10bfd62ee98cbc5480f175d3b" translate="yes" xml:space="preserve">
          <source>of an object is the set of bits that hold the value of its type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">객체의는 &lt;code&gt;T&lt;/code&gt; 유형의 값을 보유하는 비트 세트입니다 .</target>
        </trans-unit>
        <trans-unit id="56ffaaf2052ac94132b7bff7396d9c32fe19be65" translate="yes" xml:space="preserve">
          <source>of an unknown normally distributed value given n+1 independent measurements, each with additive errors of unknown standard deviation, as in physical measurements. Or, alternatively, when estimating the unknown mean of a normal distribution with unknown standard deviation, given n+1 samples.</source>
          <target state="translated">n + 1의 독립적 인 측정이 주어 졌을 때 미지의 정규 분포 값, 각각은 물리적 측정에서와 같이 표준 편차가 알려지지 않은 부가 오차가 있습니다. 또는 대안으로, n + 1 표본이 주어지면 표준 편차가 알려지지 않은 정규 분포의 미지 평균을 추정 할 때.</target>
        </trans-unit>
        <trans-unit id="1b6fde577852a7b184ad939a286ce3a83b347b37" translate="yes" xml:space="preserve">
          <source>of any atomic object 2) a &lt;code&gt;memory_order_seq_cst&lt;/code&gt; load gets its value either from the last &lt;code&gt;memory_order_seq_cst&lt;/code&gt; modification, or from some non-&lt;code&gt;memory_order_seq_cst&lt;/code&gt; modification that does not</source>
          <target state="translated">원자 객체의 2) &lt;code&gt;memory_order_seq_cst&lt;/code&gt; 로드는 마지막 &lt;code&gt;memory_order_seq_cst&lt;/code&gt; 수정 또는 non- &lt;code&gt;memory_order_seq_cst&lt;/code&gt; 수정 에서 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="189fb793dbef795697226a09b855dd7b661c56bf" translate="yes" xml:space="preserve">
          <source>of any type is the alignment of &lt;code&gt;&lt;a href=&quot;../types/max_align_t&quot;&gt;std::max_align_t&lt;/a&gt;&lt;/code&gt;. If a type's alignment is made stricter (larger) than &lt;code&gt;&lt;a href=&quot;../types/max_align_t&quot;&gt;std::max_align_t&lt;/a&gt;&lt;/code&gt; using &lt;a href=&quot;alignas&quot;&gt;alignas&lt;/a&gt;, it is known as a type with</source>
          <target state="translated">모든 유형의 &lt;code&gt;&lt;a href=&quot;../types/max_align_t&quot;&gt;std::max_align_t&lt;/a&gt;&lt;/code&gt; 정렬입니다 . 유형의 정렬이보다 엄격한 (더 큰)했을 경우 &lt;code&gt;&lt;a href=&quot;../types/max_align_t&quot;&gt;std::max_align_t&lt;/a&gt;&lt;/code&gt; 사용하여 &lt;a href=&quot;alignas&quot;&gt;alignas를&lt;/a&gt; , 그것은 유형으로 알려져있다</target>
        </trans-unit>
        <trans-unit id="e9c3f59a18e7ea12e11fc3675b9dbd19cf10b604" translate="yes" xml:space="preserve">
          <source>of classes, for the description of form (3), see &lt;a href=&quot;class#Forward_declaration&quot;&gt;Forward declaration&lt;/a&gt;. The following only apply to form (1) and (2).</source>
          <target state="translated">(3) 양식에 대한 설명은 클래스 &lt;a href=&quot;class#Forward_declaration&quot;&gt;선언을&lt;/a&gt; 참조하십시오 . 다음은 양식 (1) 및 (2)에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="4f2fdc78045318e8c990f0488339af4a63401c35" translate="yes" xml:space="preserve">
          <source>of expressions are ordered between different threads of execution. They are defined in the following terms:</source>
          <target state="translated">여러 실행 스레드간에식이 순서대로 정렬됩니다. 이들은 다음 용어로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="e9274421e3ae876da874f68ac60b3ecd65e66a96" translate="yes" xml:space="preserve">
          <source>of floating-point expressions, that is optimizations that omit rounding errors and floating-point exceptions that would be observed if the expression was evaluated exactly as written. For example, allows the implementation of &lt;code&gt;(x*y) + z&lt;/code&gt; with a single fused multiply-add CPU instruction. The default value is implementation-defined, usually &lt;code&gt;ON&lt;/code&gt;.</source>
          <target state="translated">부동 소수점 표현식, 즉 반올림 오류와 부동 소수점 예외를 생략하는 최적화입니다. 이는 표현식이 작성된대로 정확하게 평가 된 경우 관찰됩니다. 예를 들어, 단일 통합 다중 추가 CPU 명령어 로 &lt;code&gt;(x*y) + z&lt;/code&gt; 를 구현할 수 있습니다 . 기본값은 구현 정의이며 일반적으로 &lt;code&gt;ON&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e35a33fb96f5a889681f574d485f7dfc4a6b367b" translate="yes" xml:space="preserve">
          <source>of its type and loading it into the CPU raises a hardware exception, such as SNaN (&quot;signalling not-a-number&quot;) floating-point values or NaT (&quot;not-a-thing&quot;) integers).</source>
          <target state="translated">유형에 따라 CPU에로드하면 SNaN ( &quot;숫자가 아닌&quot;) 부동 소수점 값 또는 NaT ( &quot;가 아닌&quot;정수)와 같은 하드웨어 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3dc4cdeb212d195a2e007f2f0eed646d10725262" translate="yes" xml:space="preserve">
          <source>of non-pointer literal type (after conversions as required by context). A literal constant expression of array or class type requires that each subobject is initialized with a constant expression.</source>
          <target state="translated">비 포인터 리터럴 유형 (컨텍스트에 필요한 변환 후) 배열 또는 클래스 유형의 리터럴 상수 표현식을 사용하려면 각 서브 오브젝트가 상수 표현식으로 초기화되어야합니다.</target>
        </trans-unit>
        <trans-unit id="6543378e34802e871e5a2f51db1e30703ebd1cd3" translate="yes" xml:space="preserve">
          <source>of non-static data members and bit-fields(since C++14), for a sequence of one or more initial members (in order of declaration), if the members have layout-compatible types and if they are bit-fields, they have the same width(since C++14).</source>
          <target state="translated">비 정적 데이터 멤버 및 비트 필드 (C ++ 14부터), 하나 이상의 초기 멤버 시퀀스에 대해 (선언 순서대로) 멤버가 레이아웃 호환 유형을 가지고 있고 비트 필드 인 경우, 그들은 같은 너비를 가지고 있습니다 (C ++ 14부터).</target>
        </trans-unit>
        <trans-unit id="c82ef2d92dd2defb4bdc6af03abdd0f0a0f152f0" translate="yes" xml:space="preserve">
          <source>of only the characters found in another byte string</source>
          <target state="translated">다른 바이트 문자열에있는 문자 만</target>
        </trans-unit>
        <trans-unit id="1dcafcdb201f3b3a22efae590b6f1b08c1c64784" translate="yes" xml:space="preserve">
          <source>of only the characters not found in another byte string</source>
          <target state="translated">다른 바이트 문자열에서 찾을 수없는 문자 만</target>
        </trans-unit>
        <trans-unit id="4f0129eaaa8264067a3a7e2e1919d0abe0fbf2c1" translate="yes" xml:space="preserve">
          <source>of only the wide</source>
          <target state="translated">넓은 것의</target>
        </trans-unit>
        <trans-unit id="45f1109d5598e565c7dfebd58ad96504e4c767c9" translate="yes" xml:space="preserve">
          <source>of only the wide characters found in another wide string</source>
          <target state="translated">다른 넓은 문자열에서 발견 된 넓은 문자 만</target>
        </trans-unit>
        <trans-unit id="63c42efa3c14d3df40acf51b0ecf18763c5933f6" translate="yes" xml:space="preserve">
          <source>of that structured binding. In the tuple-like case, this is the type returned by &lt;code&gt;&lt;a href=&quot;../utility/tuple/tuple_element&quot;&gt;std::tuple_element&lt;/a&gt;&lt;/code&gt;, which may not be a reference even though the structured binding itself in fact always behaves like a reference in this case. This effectively emulates the behavior of binding to a struct whose non-static data members have the types returned by &lt;code&gt;tuple_element&lt;/code&gt;, with the referenceness of the binding itself being a mere implementation detail.</source>
          <target state="translated">그 구조적 바인딩의. 튜플과 같은 경우 &lt;code&gt;&lt;a href=&quot;../utility/tuple/tuple_element&quot;&gt;std::tuple_element&lt;/a&gt;&lt;/code&gt; 의해 반환되는 유형 이며 , 구조적 바인딩 자체가 실제로는 항상이 경우에 참조처럼 동작하더라도 참조가 아닐 수 있습니다. 이것은 비 정적 데이터 멤버가 &lt;code&gt;tuple_element&lt;/code&gt; 에 의해 리턴 된 유형을 갖는 구조체에 바인딩하는 동작을 효과적으로 모방합니다 . 바인딩 자체의 참조는 단순한 구현 세부 사항입니다.</target>
        </trans-unit>
        <trans-unit id="6a876d21dfbc565eeefa3a363961e1975f2e898e" translate="yes" xml:space="preserve">
          <source>of that type. A pointer whose value is null does not point to an object or a function (dereferencing a null pointer is undefined behavior), and compares equal to all pointers of the same type whose value is also</source>
          <target state="translated">그 유형의. 값이 null 인 포인터는 객체 또는 함수를 가리 키지 않으며 (널 포인터를 정의하는 것은 정의되지 않은 동작 임) 값이 같은 동일한 유형의 모든 포인터와 같음</target>
        </trans-unit>
        <trans-unit id="2433d42b31be0114ba699e084450e187d8dbc41e" translate="yes" xml:space="preserve">
          <source>of the &lt;a href=&quot;for&quot;&gt;for loop&lt;/a&gt;, in the</source>
          <target state="translated">의 &lt;a href=&quot;for&quot;&gt;대 루프&lt;/a&gt; 에있는</target>
        </trans-unit>
        <trans-unit id="b630fbecb7b05c91cad3392bae80005150c0eeca" translate="yes" xml:space="preserve">
          <source>of the &lt;a href=&quot;if&quot;&gt;if statement&lt;/a&gt; or &lt;a href=&quot;switch&quot;&gt;switch statement&lt;/a&gt;(since C++17), in the</source>
          <target state="translated">의 &lt;a href=&quot;if&quot;&gt;if 문&lt;/a&gt; 이나 &lt;a href=&quot;switch&quot;&gt;switch 문&lt;/a&gt; (C ++ 17부터),의</target>
        </trans-unit>
        <trans-unit id="8105f1e5a5661f4ecc0a62462d039e0f2da3053a" translate="yes" xml:space="preserve">
          <source>of the &lt;a href=&quot;if&quot;&gt;if statement&lt;/a&gt;, &lt;a href=&quot;while&quot;&gt;while loop&lt;/a&gt;, or &lt;a href=&quot;switch&quot;&gt;switch statement&lt;/a&gt; begins at the point of declaration and ends at the end of the controlled statement.</source>
          <target state="translated">의 &lt;a href=&quot;if&quot;&gt;if 문&lt;/a&gt; , &lt;a href=&quot;while&quot;&gt;while 루프는&lt;/a&gt; , 또는 &lt;a href=&quot;switch&quot;&gt;스위치 문은&lt;/a&gt; 제어 문장의 끝에 선언과 끝의 시점에서 시작한다.</target>
        </trans-unit>
        <trans-unit id="9d3b4eb680479e7e8a89a62ef64d2e3a72089a86" translate="yes" xml:space="preserve">
          <source>of the &lt;code&gt;i&lt;/code&gt;th integer divided by the sum of all &lt;code&gt;n&lt;/code&gt; weights.</source>
          <target state="translated">의 &lt;code&gt;i&lt;/code&gt; 번째 정수는 모두 합계로 나눈 &lt;code&gt;n&lt;/code&gt; 가중치.</target>
        </trans-unit>
        <trans-unit id="880165beddd1eb50f54b10696a9d8709a2f59734" translate="yes" xml:space="preserve">
          <source>of the bit field is introduced by the decl-specifier-seq of the &lt;a href=&quot;declarations&quot;&gt;declaration syntax&lt;/a&gt;.</source>
          <target state="translated">비트 필드의는 &lt;a href=&quot;declarations&quot;&gt;선언 구문&lt;/a&gt; 의 decl-specifier-seq에 의해 도입됩니다 .</target>
        </trans-unit>
        <trans-unit id="21c6e594c7bfbe5b08bab8b9f65b8940e1a66911" translate="yes" xml:space="preserve">
          <source>of the class &lt;code&gt;any&lt;/code&gt; object. The stored instance is called the contained object. Two states are equivalent if they are either both empty or if both are not empty and if the contained objects are equivalent.</source>
          <target state="translated">클래스의 &lt;code&gt;any&lt;/code&gt; 객체. 저장된 인스턴스를 포함 된 개체라고합니다. 두 상태가 모두 비어 있거나 비어 있지 않은 경우와 포함 된 객체가 동일한 경우 두 상태가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="7b45d78fd720b6582049d02edb023df9290ac7b6" translate="yes" xml:space="preserve">
          <source>of the conversion is performed. See the table below for exact effects otherwise the behavior is undefined.</source>
          <target state="translated">변환 중 수행됩니다. 정확한 효과는 아래 표를 참조하십시오. 그렇지 않으면 동작이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="26a05cb49d5a305ee0b961f5e679146bdb9f095e" translate="yes" xml:space="preserve">
          <source>of the conversion. In the case when &lt;code&gt;*&lt;/code&gt; is used, the</source>
          <target state="translated">전환의. &lt;code&gt;*&lt;/code&gt; 를 사용 하는 경우</target>
        </trans-unit>
        <trans-unit id="790fc9ed8905000f1b78aad32e5c0fc6775d3a62" translate="yes" xml:space="preserve">
          <source>of the current thread.</source>
          <target state="translated">현재 스레드의</target>
        </trans-unit>
        <trans-unit id="3159766e0f782d4b37508c17670e94c5aef241b8" translate="yes" xml:space="preserve">
          <source>of the declaration grammar is constrained to</source>
          <target state="translated">선언문의</target>
        </trans-unit>
        <trans-unit id="79d1c1859a8ae64da71db5bf1ebff96db6a7e678" translate="yes" xml:space="preserve">
          <source>of the enumeration.</source>
          <target state="translated">열거.</target>
        </trans-unit>
        <trans-unit id="d80c28202f2b4351da089a23a4895da369a347fd" translate="yes" xml:space="preserve">
          <source>of the expression. The static type does not change while the program is executing.</source>
          <target state="translated">표현의. 프로그램이 실행되는 동안 정적 유형은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3014ecf748fe459b49d0e98d73a3487ce753ffe2" translate="yes" xml:space="preserve">
          <source>of the first byte in memory after the end of the storage occupied by the object.</source>
          <target state="translated">오브젝트가 점유 한 스토리지 종료 후 메모리의 첫 번째 바이트.</target>
        </trans-unit>
        <trans-unit id="bd66e9dec65ff76c503ad555f2d77b0418de8274" translate="yes" xml:space="preserve">
          <source>of the first byte in memory occupied by the object. A pointer past the end of an object</source>
          <target state="translated">객체가 차지하는 메모리의 첫 번째 바이트. 객체의 끝을 지나는 포인터</target>
        </trans-unit>
        <trans-unit id="191f742373e2b055db6f9dc37b39a71fd06d9ca5" translate="yes" xml:space="preserve">
          <source>of the function declaration contains the keyword &lt;code&gt;auto&lt;/code&gt;, trailing return type may be omitted, and will be deduced by the compiler from the type of the expression used in the &lt;a href=&quot;return&quot;&gt;return&lt;/a&gt; statement. If the return type does not use &lt;code&gt;decltype(auto)&lt;/code&gt;, the deduction follows the rules of &lt;a href=&quot;template_argument_deduction#Other_contexts&quot;&gt;template argument deduction&lt;/a&gt;.</source>
          <target state="translated">함수 선언의 키워드는 &lt;code&gt;auto&lt;/code&gt; 키워드를 포함하며 후행 리턴 유형은 생략 될 수 있으며 &lt;a href=&quot;return&quot;&gt;리턴&lt;/a&gt; 명령문에 사용 된 표현식 유형에서 컴파일러에 의해 추론됩니다 . 리턴 타입이 &lt;code&gt;decltype(auto)&lt;/code&gt; 사용하지 않는 경우 , 추론은 &lt;a href=&quot;template_argument_deduction#Other_contexts&quot;&gt;템플리트 인수 추론&lt;/a&gt; 규칙을 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="ec47c91e032e1916036f628d901022fe11469ffc" translate="yes" xml:space="preserve">
          <source>of the function type or its template parameter types or its &lt;a href=&quot;explicit&quot;&gt;explicit specifier&lt;/a&gt;(since C++20) are SFINAE errors. If the evaluation of a substituted type/expression causes a side-effect such as instantiation of some template specialization, generation of an implicitly-defined member function, etc, errors in those side-effects are treated as hard errors. A &lt;a href=&quot;lambda&quot;&gt;lambda expression&lt;/a&gt; is not considered part of the immediate context.(since C++20).</source>
          <target state="translated">함수 유형 또는 해당 템플리트 매개 변수 유형 또는 &lt;a href=&quot;explicit&quot;&gt;명시 적 지정자&lt;/a&gt; (C ++ 20부터)는 SFINAE 오류입니다. 대체 된 유형 / 표현의 평가로 일부 템플릿 전문화의 인스턴스화, 암시 적으로 정의 된 멤버 함수 생성 등과 같은 부작용이 발생하는 경우 해당 부작용의 오류는 심각한 오류로 처리됩니다. &lt;a href=&quot;lambda&quot;&gt;람다식이&lt;/a&gt; 바로 컨텍스트의 일부로 간주되지 않는다. (20 ++ C입니다).</target>
        </trans-unit>
        <trans-unit id="b2831ca3ee5fca6dcf0c2c909093a8c768730f83" translate="yes" xml:space="preserve">
          <source>of the i-th identifier is &lt;code&gt;&lt;i&gt;cv&lt;/i&gt; T_i&lt;/code&gt;.</source>
          <target state="translated">i 번째 식별자의는 &lt;code&gt;&lt;i&gt;cv&lt;/i&gt; T_i&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="611ec0d2a524204d234f5ba1e825fd5b6a982873" translate="yes" xml:space="preserve">
          <source>of the interpreted integer value</source>
          <target state="translated">해석 된 정수 값</target>
        </trans-unit>
        <trans-unit id="5ceda57a2cf4abe181883e21c796b8f30ac7ef93" translate="yes" xml:space="preserve">
          <source>of the lambda.</source>
          <target state="translated">람다</target>
        </trans-unit>
        <trans-unit id="a35f037de0257565d74a29fcbea82222561ae6ed" translate="yes" xml:space="preserve">
          <source>of the lambda. The result of the lookup must be a &lt;a href=&quot;objects&quot;&gt;variable&lt;/a&gt; with automatic storage duration declared in the reaching scope. The variable (or &lt;code&gt;this&lt;/code&gt;) is</source>
          <target state="translated">람다 조회 결과 는 도달 범위에 선언 된 자동 저장 기간 이있는 &lt;a href=&quot;objects&quot;&gt;변수&lt;/a&gt; 여야합니다 . 변수 (또는 &lt;code&gt;this&lt;/code&gt; )는</target>
        </trans-unit>
        <trans-unit id="8ad57abd419e9daef77aa8d3f7327d941f0a9d83" translate="yes" xml:space="preserve">
          <source>of the locale</source>
          <target state="translated">로케일</target>
        </trans-unit>
        <trans-unit id="37e3eaf0295478356c73b37a950e1348740b8eab" translate="yes" xml:space="preserve">
          <source>of the month.</source>
          <target state="translated">이달의.</target>
        </trans-unit>
        <trans-unit id="346ed6f7ed57f850813d6c78caef44fdde346e1c" translate="yes" xml:space="preserve">
          <source>of the month;</source>
          <target state="translated">이달의;</target>
        </trans-unit>
        <trans-unit id="c5bfc4bb4e2fe9f1483e933287eb22eff740d6b9" translate="yes" xml:space="preserve">
          <source>of the other operand (call it &lt;code&gt;Y&lt;/code&gt;) of type &lt;code&gt;TY&lt;/code&gt; as follows:</source>
          <target state="translated">&lt;code&gt;TY&lt;/code&gt; 유형 의 다른 피연산자 ( &lt;code&gt;Y&lt;/code&gt; 라고 함 )의 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d47d39e1ad2cf4252e111dac4fa1dacd0b4bcc1a" translate="yes" xml:space="preserve">
          <source>of the target type (ignoring cv-qualification) that is</source>
          <target state="translated">대상 유형의 (cv-qualification 무시)</target>
        </trans-unit>
        <trans-unit id="6930340e403858377cdaa290fbee4297d424db96" translate="yes" xml:space="preserve">
          <source>of the template, that is, a specific type or a specific function lvalue. Specializations may also be provided explicitly: &lt;a href=&quot;template_specialization&quot;&gt;full specializations&lt;/a&gt; are allowed for both class and function templates, &lt;a href=&quot;partial_specialization&quot;&gt;partial specializations&lt;/a&gt; are only allowed for class templates.</source>
          <target state="translated">템플릿, 즉 특정 유형 또는 특정 함수 lvalue. 전문화는 명시 적으로 제공 될 수도 있습니다. 클래스 및 함수 템플릿 모두에 대해 &lt;a href=&quot;template_specialization&quot;&gt;전체 전문화&lt;/a&gt; 가 허용되며 클래스 템플릿에만 &lt;a href=&quot;partial_specialization&quot;&gt;부분 전문화&lt;/a&gt; 가 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="10c6dc9e4e9c83412ce9bd814b8eb7bbfd9608ed" translate="yes" xml:space="preserve">
          <source>of the thread</source>
          <target state="translated">실의</target>
        </trans-unit>
        <trans-unit id="0f039dceb5f69106e71c20a280c6fc0dd8aa56ce" translate="yes" xml:space="preserve">
          <source>of two reference types &lt;code&gt;T1&lt;/code&gt; and &lt;code&gt;T2&lt;/code&gt; is defined as follows:</source>
          <target state="translated">두 가지 참조 유형 &lt;code&gt;T1&lt;/code&gt; 및 &lt;code&gt;T2&lt;/code&gt; 중 하나 는 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="6eeb0e03ccec703e0e49a773b0c00e6106941b4a" translate="yes" xml:space="preserve">
          <source>of type &lt;code&gt;T&lt;/code&gt; is an expression &lt;a href=&quot;implicit_cast&quot;&gt;implicitly converted&lt;/a&gt; to type T, where the converted expression is a constant expression, and the implicit conversion sequence contains only:</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 유형의 T 는 &lt;a href=&quot;implicit_cast&quot;&gt;암시 적으로&lt;/a&gt; T 유형으로 변환 된 표현식입니다. 여기서 변환 된 표현식은 상수 표현식이며 암시 적 변환 시퀀스에는 다음 만 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="da7a68734367828e30b94927f4c2b43ed2c0f652" translate="yes" xml:space="preserve">
          <source>off</source>
          <target state="translated">off</target>
        </trans-unit>
        <trans-unit id="53a610e925bbc0a175e365d31241ae75aeead651" translate="yes" xml:space="preserve">
          <source>offset</source>
          <target state="translated">offset</target>
        </trans-unit>
        <trans-unit id="190fe195e266ccf48d6885ff3cfa4f0bd6b37f0d" translate="yes" xml:space="preserve">
          <source>offsetof</source>
          <target state="translated">offsetof</target>
        </trans-unit>
        <trans-unit id="7a85f4764bbd6daf1c3545efbbf0f279a6dc0beb" translate="yes" xml:space="preserve">
          <source>ok</source>
          <target state="translated">ok</target>
        </trans-unit>
        <trans-unit id="5c30f02acacec7a0651ee106156be7d1e2841853" translate="yes" xml:space="preserve">
          <source>old_filename</source>
          <target state="translated">old_filename</target>
        </trans-unit>
        <trans-unit id="345e25ad941d1a0c1e28013e89fbaef9d7ab4ea4" translate="yes" xml:space="preserve">
          <source>old_p</source>
          <target state="translated">old_p</target>
        </trans-unit>
        <trans-unit id="401d4d5e21492d490958c1f20e24a0bf741374e0" translate="yes" xml:space="preserve">
          <source>old_value</source>
          <target state="translated">old_value</target>
        </trans-unit>
        <trans-unit id="db3d405b10675998c030223177d42e71b4e7a312" translate="yes" xml:space="preserve">
          <source>on</source>
          <target state="translated">on</target>
        </trans-unit>
        <trans-unit id="818acde3e9fd40ecee408dbe2233e6ad35623f79" translate="yes" xml:space="preserve">
          <source>on some atomic M, and, in a different thread, B performs a</source>
          <target state="translated">일부 원자 M에서, 그리고 다른 스레드에서 B는</target>
        </trans-unit>
        <trans-unit id="cc005f40be426c6e67bf8331c06d8cb9d8600ac5" translate="yes" xml:space="preserve">
          <source>on some implementations, the get area is emptied by seekpos() and the second underflow() is necessary to observe the effects.</source>
          <target state="translated">일부 구현에서, get 영역은 seekpos ()에 의해 비워지고 영향을 관찰하기 위해 두 번째 underflow ()가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2ee58bfcf9ac3465c4f7c1983870f52602836cd7" translate="yes" xml:space="preserve">
          <source>on the affected memory location: no reads or writes in the current thread can be reordered before this load. All writes in other threads that release the same atomic variable are visible in the current thread (see &lt;a href=&quot;memory_order#Release-Acquire_ordering&quot;&gt;Release-Acquire ordering&lt;/a&gt; below)</source>
          <target state="translated">영향을받는 메모리 위치에서 :이로드 전에 현재 스레드에서 읽기 또는 쓰기를 다시 정렬 할 수 없습니다. 동일한 원자 변수를 해제하는 다른 스레드의 모든 쓰기는 현재 스레드에서 볼 수 있습니다 (아래의 &lt;a href=&quot;memory_order#Release-Acquire_ordering&quot;&gt;Release-Acquire 순서&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="11b86fd9b57f724d1ff8dd2655ed26f054dc14cb" translate="yes" xml:space="preserve">
          <source>on the affected memory location: no reads or writes in the current thread dependent on the value currently loaded can be reordered before this load. Writes to data-dependent variables in other threads that release the same atomic variable are visible in the current thread. On most platforms, this affects compiler optimizations only (see &lt;a href=&quot;memory_order#Release-Consume_ordering&quot;&gt;Release-Consume ordering&lt;/a&gt; below)</source>
          <target state="translated">영향을받는 메모리 위치에서 : 현재로드 된 값에 따라 현재 스레드에서 읽기 또는 쓰기가이로드 전에 재정렬 될 수 없습니다. 동일한 원자 변수를 해제하는 다른 스레드의 데이터 종속 변수에 대한 쓰기는 현재 스레드에서 볼 수 있습니다. 대부분의 플랫폼에서 이는 컴파일러 최적화에만 영향을 미칩니다 (아래의 &lt;a href=&quot;memory_order#Release-Consume_ordering&quot;&gt;릴리스-소비 순서&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="200e2a1797342067bd0915680e84cb1a80d40736" translate="yes" xml:space="preserve">
          <source>on the equivalence classes determined by &lt;code&gt;equiv&lt;/code&gt;.</source>
          <target state="translated">등가 클래스에 의해 결정 &lt;code&gt;equiv&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bd581b05b0d751a6c2269252b2c6dbc9f02f9879" translate="yes" xml:space="preserve">
          <source>on the new thread of execution.</source>
          <target state="translated">새로운 실행 스레드에서.</target>
        </trans-unit>
        <trans-unit id="baf8f83199a235f49a2c7c113711b92f0ebb33c1" translate="yes" xml:space="preserve">
          <source>on the right-hand side of a &lt;a href=&quot;type_alias&quot;&gt;type alias&lt;/a&gt; declaration;</source>
          <target state="translated">&lt;a href=&quot;type_alias&quot;&gt;타입 별칭&lt;/a&gt; 선언 의 오른쪽에 ;</target>
        </trans-unit>
        <trans-unit id="f4831597f4b67413d594436644c0983548b51192" translate="yes" xml:space="preserve">
          <source>on the same atomic M, and B reads a value written by any part of the release sequence headed by A.</source>
          <target state="translated">동일한 원자 M에서 B는 A가 이끄는 릴리즈 시퀀스의 일부에 의해 쓰여진 값을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="1d98b14f0e8ec9f4a327468c5a20cd57aee35587" translate="yes" xml:space="preserve">
          <source>once_flag</source>
          <target state="translated">once_flag</target>
        </trans-unit>
        <trans-unit id="fe05bcdcdc4928012781a5f1a2a77cbb5398e106" translate="yes" xml:space="preserve">
          <source>one</source>
          <target state="translated">one</target>
        </trans-unit>
        <trans-unit id="aec5e1796732217eb7a4aab04669815ab310e2d0" translate="yes" xml:space="preserve">
          <source>one application of &lt;code&gt;operator/=&lt;/code&gt; for each element in the half-open range &lt;code&gt;[a, end())&lt;/code&gt;</source>
          <target state="translated">반 개방 범위 &lt;code&gt;[a, end())&lt;/code&gt; 에서 각 요소에 대해 &lt;code&gt;operator/=&lt;/code&gt; 를 한 번 적용</target>
        </trans-unit>
        <trans-unit id="40faaae7faddc2af3d45eb21d83eda04e6743438" translate="yes" xml:space="preserve">
          <source>one is a &lt;a href=&quot;data_members#Standard_layout&quot;&gt;standard-layout&lt;/a&gt; class object and the other is the first non-static data member of that object, or, if the object has no non-static data members, any base class subobject of that object, or</source>
          <target state="translated">하나는 &lt;a href=&quot;data_members#Standard_layout&quot;&gt;표준 레이아웃&lt;/a&gt; 클래스 개체이고 다른 하나는 해당 개체의 첫 번째 비 정적 데이터 멤버이거나, 개체에 비 정적 데이터 멤버가없는 경우 해당 개체의 기본 클래스 하위 개체이거나</target>
        </trans-unit>
        <trans-unit id="d658c3f36f1f8d8812a76423c16a34e9c8011184" translate="yes" xml:space="preserve">
          <source>one is a pointer to complete object type, the other has integral or unscoped enumeration type. In this case, the result type has the type of the pointer.</source>
          <target state="translated">하나는 완전한 객체 유형을 가리키는 포인터이고 다른 하나는 정수 또는 범위가없는 열거 유형을가집니다. 이 경우 결과 유형에는 포인터 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a738538d2b1b07732b6de5835392ffeda116eca2" translate="yes" xml:space="preserve">
          <source>one is a union object and the other is a non-static data member of that object, or</source>
          <target state="translated">하나는 공용체이고 다른 하나는 해당 객체의 비 정적 데이터 멤버이거나</target>
        </trans-unit>
        <trans-unit id="d81b33a1a8772c0419906181becb3826e9d4cbcd" translate="yes" xml:space="preserve">
          <source>one more than the largest integer power of the radix that is a valid finite floating-point value</source>
          <target state="translated">유효한 유한 부동 소수점 값인 기수의 최대 정수보다 큰 1</target>
        </trans-unit>
        <trans-unit id="55fd5508220ac551ee7cafce16e603708f0ea452" translate="yes" xml:space="preserve">
          <source>one more than the smallest negative power of the radix that is a valid normalized floating-point value</source>
          <target state="translated">유효한 정규화 된 부동 소수점 값인 기수의 가장 작은 음의 힘보다 하나 더</target>
        </trans-unit>
        <trans-unit id="59de5a5bf68319c19d43a166b5648bf8d20a1c3d" translate="yes" xml:space="preserve">
          <source>one of</source>
          <target state="translated">중 하나</target>
        </trans-unit>
        <trans-unit id="94629267e7518b0b9eccf1d213d6bc65d7be8dc5" translate="yes" xml:space="preserve">
          <source>one of *?+{ was not preceded by a valid regular expression</source>
          <target state="translated">*? + {중 하나 앞에 올바른 정규식이 없습니다.</target>
        </trans-unit>
        <trans-unit id="1ee01ddbe19fb5b1cf40d53081a655a6eda567ac" translate="yes" xml:space="preserve">
          <source>one of &lt;a href=&quot;../keyword/class&quot;&gt;class&lt;/a&gt; or &lt;a href=&quot;../keyword/struct&quot;&gt;struct&lt;/a&gt;. The keywords are identical except for the default &lt;a href=&quot;access&quot;&gt;member access&lt;/a&gt; and the default &lt;a href=&quot;derived_class&quot;&gt;base class access&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../keyword/class&quot;&gt;class&lt;/a&gt; 또는 &lt;a href=&quot;../keyword/struct&quot;&gt;struct&lt;/a&gt; 중 하나입니다 . 키워드는 기본 &lt;a href=&quot;access&quot;&gt;멤버 액세스&lt;/a&gt; 및 기본 &lt;a href=&quot;derived_class&quot;&gt;기본 클래스 액세스를&lt;/a&gt; 제외하고 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="55a909b93c596d9dade1f02e33fb1aed217d47bd" translate="yes" xml:space="preserve">
          <source>one of &lt;a href=&quot;../keyword/class&quot;&gt;class&lt;/a&gt;, &lt;a href=&quot;../keyword/struct&quot;&gt;struct&lt;/a&gt;, &lt;a href=&quot;../keyword/union&quot;&gt;union&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../keyword/class&quot;&gt;클래스&lt;/a&gt; , &lt;a href=&quot;../keyword/struct&quot;&gt;구조체&lt;/a&gt; , &lt;a href=&quot;../keyword/union&quot;&gt;노조&lt;/a&gt; 중 하나</target>
        </trans-unit>
        <trans-unit id="bb424054957fbd3fc4f434cf5ec0ad9a2651eff3" translate="yes" xml:space="preserve">
          <source>one of &lt;code&gt;*=&lt;/code&gt;, &lt;code&gt;/=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;, &lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;, &lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;, &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;, &lt;code&gt;&amp;amp;=&lt;/code&gt;, &lt;code&gt;^=&lt;/code&gt;, &lt;code&gt;|=&lt;/code&gt;</source>
          <target state="translated">하나 &lt;code&gt;*=&lt;/code&gt; , &lt;code&gt;/=&lt;/code&gt; &lt;code&gt;%=&lt;/code&gt; , &lt;code&gt;+=&lt;/code&gt; &lt;code&gt;-=&lt;/code&gt; , &lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt; , &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; , &lt;code&gt;&amp;amp;=&lt;/code&gt; , &lt;code&gt;^=&lt;/code&gt; , &lt;code&gt;|=&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c43cee033da234ab54121c8637981a452b8119b" translate="yes" xml:space="preserve">
          <source>one of &lt;code&gt;&lt;a href=&quot;fp_categories&quot;&gt;FP_INFINITE&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;fp_categories&quot;&gt;FP_NAN&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;fp_categories&quot;&gt;FP_NORMAL&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;fp_categories&quot;&gt;FP_SUBNORMAL&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;fp_categories&quot;&gt;FP_ZERO&lt;/a&gt;&lt;/code&gt; or implementation-defined type, specifying the category of &lt;code&gt;arg&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;fp_categories&quot;&gt;FP_INFINITE&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;fp_categories&quot;&gt;FP_NAN&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;fp_categories&quot;&gt;FP_NORMAL&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;fp_categories&quot;&gt;FP_SUBNORMAL&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;fp_categories&quot;&gt;FP_ZERO&lt;/a&gt;&lt;/code&gt; 또는 구현 정의 유형 중 하나이며 &lt;code&gt;arg&lt;/code&gt; 의 범주를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="8e0df86f7c7300c85bcdc950bc059fb125a2df94" translate="yes" xml:space="preserve">
          <source>one of &lt;code&gt;default&lt;/code&gt;, &lt;code&gt;audit&lt;/code&gt;, or &lt;code&gt;axiom&lt;/code&gt;; the default is &lt;code&gt;default&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; , &lt;code&gt;audit&lt;/code&gt; 또는 &lt;code&gt;axiom&lt;/code&gt; 중 하나 ; 디폴트는 &lt;code&gt;default&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bb012818a1084148bd464e21606c85f8b5a73354" translate="yes" xml:space="preserve">
          <source>one of &lt;code&gt;enum&lt;/code&gt;, &lt;code&gt;enum class&lt;/code&gt;(since C++11), or &lt;code&gt;enum struct&lt;/code&gt;(since C++11)</source>
          <target state="translated">하나 &lt;code&gt;enum&lt;/code&gt; , &lt;code&gt;enum class&lt;/code&gt; (11 ++ C) 이후, 또는 &lt;code&gt;enum struct&lt;/code&gt; (11 ++ C 보낸)</target>
        </trans-unit>
        <trans-unit id="031b6b678a3780f3cd666eb90b71a4f6cf1bba88" translate="yes" xml:space="preserve">
          <source>one of &lt;code&gt;private&lt;/code&gt;, &lt;code&gt;public&lt;/code&gt;, or &lt;code&gt;protected&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;private&lt;/code&gt; , &lt;code&gt;public&lt;/code&gt; 또는 &lt;code&gt;protected&lt;/code&gt; 중 하나</target>
        </trans-unit>
        <trans-unit id="28f5aef893c3ab3996f6b79d09c6f43693881d93" translate="yes" xml:space="preserve">
          <source>one of the conflicting evaluations</source>
          <target state="translated">상충되는 평가 중 하나</target>
        </trans-unit>
        <trans-unit id="126b5d62e9a0ccf5a50c265ffc4198ed57469ab4" translate="yes" xml:space="preserve">
          <source>one operand of a relational or equality operator with the other operand an integer constant expression, with the resulting expression being the entire controlling expression &lt;a href=&quot;../../language/if&quot;&gt;if&lt;/a&gt;, &lt;a href=&quot;../../language/switch&quot;&gt;switch&lt;/a&gt;, &lt;a href=&quot;../../language/while&quot;&gt;while&lt;/a&gt;, &lt;a href=&quot;../../language/do&quot;&gt;do-while&lt;/a&gt;, &lt;a href=&quot;../../language/for&quot;&gt;for&lt;/a&gt;.</source>
          <target state="translated">전체 제어 발현되는 수득 식 다른 피연산자 정수 상수 식 관계형 또는 항등 연산자의 하나의 피연산자 &lt;a href=&quot;../../language/if&quot;&gt;의 경우&lt;/a&gt; , &lt;a href=&quot;../../language/switch&quot;&gt;스위치&lt;/a&gt; , &lt;a href=&quot;../../language/while&quot;&gt;반면&lt;/a&gt; , &lt;a href=&quot;../../language/do&quot;&gt;동시에 할일&lt;/a&gt; , &lt;a href=&quot;../../language/for&quot;&gt;대&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="26490aff5c0e6ee43de8c8878d9099bda07a6b42" translate="yes" xml:space="preserve">
          <source>one or more whitespace characters are required</source>
          <target state="translated">하나 이상의 공백 문자가 필요합니다</target>
        </trans-unit>
        <trans-unit id="e2bcbaa54c6bc29b001324da5c2283f7361c88d8" translate="yes" xml:space="preserve">
          <source>one past the end iterator for the sequence to parse</source>
          <target state="translated">시퀀스를 파싱하기 위해 end iterator를 지나서</target>
        </trans-unit>
        <trans-unit id="b71e87c1cb335c4a8d0c410907a1d64ada534588" translate="yes" xml:space="preserve">
          <source>one past the end pointer for the array of characters to classify</source>
          <target state="translated">분류 할 문자 배열의 끝 포인터를 지나서</target>
        </trans-unit>
        <trans-unit id="17c6cf14c7f2e9eb961f5a1713a90b5230090f15" translate="yes" xml:space="preserve">
          <source>one past the end pointer for the array of characters to convert</source>
          <target state="translated">변환 할 문자 배열의 끝 포인터를 지나서</target>
        </trans-unit>
        <trans-unit id="704f5518c184cfad74cd9f77b5241fd2aff2fc9e" translate="yes" xml:space="preserve">
          <source>one past the end pointer for the array of characters to search</source>
          <target state="translated">검색 할 문자 배열의 끝 포인터를 지나서</target>
        </trans-unit>
        <trans-unit id="d3630c6dc200fb572b19dca079b0655a7ea741e5" translate="yes" xml:space="preserve">
          <source>one past the end pointer for the first string</source>
          <target state="translated">첫 번째 문자열의 끝 포인터를 지나서</target>
        </trans-unit>
        <trans-unit id="108cc0fd57e3834f1cca8a009c93e3530ced61b5" translate="yes" xml:space="preserve">
          <source>one past the end pointer for the second string</source>
          <target state="translated">하나는 두 번째 문자열의 끝 포인터를 지나서</target>
        </trans-unit>
        <trans-unit id="d491c5b58745fef6050d3addaa0ee0725f593c88" translate="yes" xml:space="preserve">
          <source>one past the end pointer for the sequence to hash</source>
          <target state="translated">해시 할 시퀀스의 끝 포인터를 지나서</target>
        </trans-unit>
        <trans-unit id="268b691a6c01f282af7705fe4c3f04b11ef0f530" translate="yes" xml:space="preserve">
          <source>one past the end pointer for the sequence to transform</source>
          <target state="translated">시퀀스의 끝 포인터를 지나서 변형</target>
        </trans-unit>
        <trans-unit id="def2314acd2f7913f35a60737db4953ad5584dea" translate="yes" xml:space="preserve">
          <source>one type is a signed integer type, the other type is the corresponding unsigned integer type, and the value is representable in both types; or</source>
          <target state="translated">하나의 유형은 부호있는 정수 유형이고 다른 유형은 해당하는 부호없는 정수 유형이며 값은 두 유형 모두에서 표현 가능합니다. 또는</target>
        </trans-unit>
        <trans-unit id="effa55b9be8f40ffa58b95d8845964ee790e8658" translate="yes" xml:space="preserve">
          <source>one type is pointer to &lt;code&gt;void&lt;/code&gt; and the other is a pointer to a character type (&lt;code&gt;char&lt;/code&gt;, &lt;code&gt;signed char&lt;/code&gt;, or &lt;code&gt;unsigned char&lt;/code&gt;).</source>
          <target state="translated">한 유형은 &lt;code&gt;void&lt;/code&gt; 에 대한 포인터이고 다른 유형은 문자 유형 ( &lt;code&gt;char&lt;/code&gt; , &lt;code&gt;signed char&lt;/code&gt; 또는 &lt;code&gt;unsigned char&lt;/code&gt; )에 대한 포인터 입니다.</target>
        </trans-unit>
        <trans-unit id="927d58e37ed32ee00d55ab0a65a577e6fc3edac4" translate="yes" xml:space="preserve">
          <source>one use case for changing buffer size is when a better size is known.</source>
          <target state="translated">버퍼 크기를 변경하는 한 가지 사용 사례는 더 나은 크기를 알고있는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="fb2cab9ff06e59ef97cfa35bb4578eb876414f11" translate="yes" xml:space="preserve">
          <source>ones. In a</source>
          <target state="translated">그들. 안에</target>
        </trans-unit>
        <trans-unit id="2f231e46cd55900e8152505251d0d95ba5f3e52f" translate="yes" xml:space="preserve">
          <source>only a partitioning is needed; heterogeneous comparisons permitted</source>
          <target state="translated">파티셔닝 만 필요합니다. 이기종 비교 허용</target>
        </trans-unit>
        <trans-unit id="949410a59129740e465a7348df8d6a2d9e833425" translate="yes" xml:space="preserve">
          <source>only deduce &lt;code&gt;T&lt;/code&gt; from the &lt;code&gt;valarray&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;valarray&lt;/code&gt; 에서 &lt;code&gt;T&lt;/code&gt; 만 추론</target>
        </trans-unit>
        <trans-unit id="572beb16ed6b089b447b67cad6c4f71de836f420" translate="yes" xml:space="preserve">
          <source>only if lookup finds a function template with a non-type parameter</source>
          <target state="translated">조회에서 유형이 아닌 매개 변수가있는 함수 템플리트를 찾은 경우에만</target>
        </trans-unit>
        <trans-unit id="f49225bec575c1d45031fc170963028558832921" translate="yes" xml:space="preserve">
          <source>only need to be a power of two</source>
          <target state="translated">2의 거듭 제곱이면됩니다</target>
        </trans-unit>
        <trans-unit id="72d2afef6f3a89c15de54208fe363800ef98cfb7" translate="yes" xml:space="preserve">
          <source>only non-dependent void is allowed</source>
          <target state="translated">비 의존적 공백 만 허용됩니다</target>
        </trans-unit>
        <trans-unit id="d54c95b5a912b680afacf4326707f244398e8e02" translate="yes" xml:space="preserve">
          <source>only one type specifier is allowed in a decl-specifier-seq, with the following exceptions:</source>
          <target state="translated">decl-specifier-seq에는 다음 유형을 제외하고 하나의 유형 지정자 만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="dd5c96eb9ff5a909fdcdf07eb633e27a6b75e244" translate="yes" xml:space="preserve">
          <source>only required to be accessible in the context of the declaration</source>
          <target state="translated">선언의 맥락에서 접근 가능해야한다</target>
        </trans-unit>
        <trans-unit id="0151a3eb5b67274d884819058929d5396f86d457" translate="yes" xml:space="preserve">
          <source>only the expression before conversion is required to be constant</source>
          <target state="translated">변환 전의 식만 일정해야합니다.</target>
        </trans-unit>
        <trans-unit id="cff3177ebf18a8772a364dc99cee82206c013a68" translate="yes" xml:space="preserve">
          <source>only the literal zero is allowed</source>
          <target state="translated">리터럴 0 만 허용됩니다</target>
        </trans-unit>
        <trans-unit id="4cb299bec802f2b8dc663b9b717b296458e10373" translate="yes" xml:space="preserve">
          <source>only the minus sign is recognized (not the plus sign), and only for signed integer types of &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">빼기 부호 만 인식되고 (더하기 부호는 아님) 부호있는 정수 유형의 &lt;code&gt;value&lt;/code&gt; 에만 인식됩니다 .</target>
        </trans-unit>
        <trans-unit id="c0b7777fc6dbd26adb0acaa2e9139e639420545f" translate="yes" xml:space="preserve">
          <source>only used if both are present</source>
          <target state="translated">둘 다 존재하는 경우에만 사용</target>
        </trans-unit>
        <trans-unit id="d13150fd106676133ad3bd816c2c7a57a3638029" translate="yes" xml:space="preserve">
          <source>oooo</source>
          <target state="translated">oooo</target>
        </trans-unit>
        <trans-unit id="824f601c2a81ee6bab79ccd4792304c738d17630" translate="yes" xml:space="preserve">
          <source>op</source>
          <target state="translated">op</target>
        </trans-unit>
        <trans-unit id="7d836f4befca2bda3e8abb1f7bd93345a5b10ae9" translate="yes" xml:space="preserve">
          <source>op1</source>
          <target state="translated">op1</target>
        </trans-unit>
        <trans-unit id="8f7f92bfbdfef3c33b3089d0edc4daf8d43e5342" translate="yes" xml:space="preserve">
          <source>op2</source>
          <target state="translated">op2</target>
        </trans-unit>
        <trans-unit id="5fc7e38bffe00ca46add89145464a2eaf759d5c2" translate="yes" xml:space="preserve">
          <source>open</source>
          <target state="translated">open</target>
        </trans-unit>
        <trans-unit id="baa255405cd708663ff3b9bbfcc4bc69fdb55c8b" translate="yes" xml:space="preserve">
          <source>open an existing stream with a different name</source>
          <target state="translated">다른 이름으로 기존 스트림을 엽니 다</target>
        </trans-unit>
        <trans-unit id="f533b961b2385751ae142b484ba3f9c579dd6891" translate="yes" xml:space="preserve">
          <source>open for reading</source>
          <target state="translated">열다</target>
        </trans-unit>
        <trans-unit id="3b3e0b96dcf0ed835f9a277b12d5f353d6dc2019" translate="yes" xml:space="preserve">
          <source>open for writing</source>
          <target state="translated">쓰기 위해 열다</target>
        </trans-unit>
        <trans-unit id="5ba9bdf702a8925dba0a22180d41d39050f61722" translate="yes" xml:space="preserve">
          <source>open in &lt;a href=&quot;../c#Binary_and_text_modes&quot;&gt;binary mode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../c#Binary_and_text_modes&quot;&gt;이진 모드로&lt;/a&gt; 열기</target>
        </trans-unit>
        <trans-unit id="7592f6b86f9ec6f0a50aeb3f0a7f98f0279d1df5" translate="yes" xml:space="preserve">
          <source>open in &lt;a href=&quot;c#Binary_and_text_modes&quot;&gt;binary mode&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;c#Binary_and_text_modes&quot;&gt;이진 모드로&lt;/a&gt; 열기</target>
        </trans-unit>
        <trans-unit id="f961d78c2c626fa1597680ffdd66acf69bbd96d2" translate="yes" xml:space="preserve">
          <source>openmode</source>
          <target state="translated">openmode</target>
        </trans-unit>
        <trans-unit id="1ac6e113ac932435e209c611c793f5adf67a571f" translate="yes" xml:space="preserve">
          <source>openmode &amp;amp; ~ate</source>
          <target state="translated">오픈 모드 &amp;amp; ~ ate</target>
        </trans-unit>
        <trans-unit id="397e1cc03e7b718f2fdab43b8dc860aae7c1de77" translate="yes" xml:space="preserve">
          <source>opens a file</source>
          <target state="translated">파일을 엽니 다</target>
        </trans-unit>
        <trans-unit id="3a076f115e9bfb0e71e4286066bd4ec9744abbe3" translate="yes" xml:space="preserve">
          <source>opens a file and associates it with the stream</source>
          <target state="translated">파일을 열고 스트림과 연결</target>
        </trans-unit>
        <trans-unit id="b886b689b2fde4718fbee6826cef23c4b7ab2019" translate="yes" xml:space="preserve">
          <source>opens a file and configures it as the associated character sequence</source>
          <target state="translated">파일을 열고 연관된 문자 순서로 구성</target>
        </trans-unit>
        <trans-unit id="425b23e8bbe580cc0e295a566d8fc7f6f50d62b7" translate="yes" xml:space="preserve">
          <source>opens a named message catalog</source>
          <target state="translated">명명 된 메시지 카탈로그를 엽니 다</target>
        </trans-unit>
        <trans-unit id="fe4bd618ca8f27e9d43aaaa47161ef4782031898" translate="yes" xml:space="preserve">
          <source>operand</source>
          <target state="translated">operand</target>
        </trans-unit>
        <trans-unit id="880628bd451518cf4353fb15b22d572f2c37b7fb" translate="yes" xml:space="preserve">
          <source>operands</source>
          <target state="translated">operands</target>
        </trans-unit>
        <trans-unit id="af80c6044d59205e5b533a2724f9462ad3977966" translate="yes" xml:space="preserve">
          <source>operations when using these policies (vectorization-unsafe functions are the ones that synchronize-with another function, e.g. &lt;code&gt;&lt;a href=&quot;../thread/mutex/unlock&quot;&gt;std::mutex::unlock&lt;/a&gt;&lt;/code&gt; synchronizes-with the next &lt;code&gt;&lt;a href=&quot;../thread/mutex/lock&quot;&gt;std::mutex::lock&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">이러한 정책을 사용할 때의 작업 (벡터화 안전하지 않은 기능은 다른 기능과 동기화되는 기능입니다 (예 : &lt;code&gt;&lt;a href=&quot;../thread/mutex/unlock&quot;&gt;std::mutex::unlock&lt;/a&gt;&lt;/code&gt; 동기화-다음 &lt;code&gt;&lt;a href=&quot;../thread/mutex/lock&quot;&gt;std::mutex::lock&lt;/a&gt;&lt;/code&gt; )).</target>
        </trans-unit>
        <trans-unit id="fe96dd39756ac41b74283a9292652d366d73931f" translate="yes" xml:space="preserve">
          <source>operator</source>
          <target state="translated">operator</target>
        </trans-unit>
        <trans-unit id="dcff243ad64729ad910cbfed94694476d61c004d" translate="yes" xml:space="preserve">
          <source>operator T</source>
          <target state="translated">연산자 T</target>
        </trans-unit>
        <trans-unit id="d2d5a8c56a1983c9337cbc58779a7f4cab8401b5" translate="yes" xml:space="preserve">
          <source>operator auto forbidden</source>
          <target state="translated">운영자 자동 금지</target>
        </trans-unit>
        <trans-unit id="e011aff0bdf1698fe1cb46533af9422bde1e1d0b" translate="yes" xml:space="preserve">
          <source>operator auto was technically allowed</source>
          <target state="translated">운영자 자동 기술적으로 허용되었습니다</target>
        </trans-unit>
        <trans-unit id="25d649bd58477f623519a755180f0afc6761326d" translate="yes" xml:space="preserve">
          <source>operator auto_ptr&amp;lt;Y&amp;gt;operator auto_ptr_ref&amp;lt;Y&amp;gt;</source>
          <target state="translated">연산자 auto_ptr &amp;lt;Y&amp;gt; 연산자 auto_ptr_ref &amp;lt;Y&amp;gt;</target>
        </trans-unit>
        <trans-unit id="a3258f7eccecfd99a45a6a9e4304c7d048fb9855" translate="yes" xml:space="preserve">
          <source>operator basic_string_view</source>
          <target state="translated">연산자 basic_string_view</target>
        </trans-unit>
        <trans-unit id="7e1a4670c678f2c859d552c85c3ef9af22c34de6" translate="yes" xml:space="preserve">
          <source>operator bool</source>
          <target state="translated">운영자 부울</target>
        </trans-unit>
        <trans-unit id="f5f1c40517612b75ed26af616626c7c21905ef5d" translate="yes" xml:space="preserve">
          <source>operator boolhas_value</source>
          <target state="translated">연산자 boolhas_value</target>
        </trans-unit>
        <trans-unit id="e240c1bc1e05a1f3d79e70a5113c4d9292cc14ac" translate="yes" xml:space="preserve">
          <source>operator creates a pointer pointing to the object or function operand.</source>
          <target state="translated">연산자는 객체 또는 함수 피연산자를 가리키는 포인터를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="83c908b7ee98e37004c9d4cd741dc8031951831c" translate="yes" xml:space="preserve">
          <source>operator delete, operator delete[]</source>
          <target state="translated">운영자 삭제, 운영자 삭제 []</target>
        </trans-unit>
        <trans-unit id="58a8bc333a5f89ef531395c92522c394bb2e1e31" translate="yes" xml:space="preserve">
          <source>operator deleteoperator delete[]</source>
          <target state="translated">연산자 deleteoperator delete []</target>
        </trans-unit>
        <trans-unit id="91a369eb7b954deeef762f14ed70924b9ec56904" translate="yes" xml:space="preserve">
          <source>operator int</source>
          <target state="translated">연산자 int</target>
        </trans-unit>
        <trans-unit id="714ae0aa5d63f7851cbc742be402807f753f19f4" translate="yes" xml:space="preserve">
          <source>operator is overloaded</source>
          <target state="translated">운영자 과부하</target>
        </trans-unit>
        <trans-unit id="77f434263bf217f704f929707b45be7ea22c52ab" translate="yes" xml:space="preserve">
          <source>operator local_timeget_local_time</source>
          <target state="translated">연산자 local_timeget_local_time</target>
        </trans-unit>
        <trans-unit id="56872ce168479feb20192a6636224651d7100575" translate="yes" xml:space="preserve">
          <source>operator new, operator new[]</source>
          <target state="translated">연산자 new, 연산자 new []</target>
        </trans-unit>
        <trans-unit id="84dd3df490cfd107fe37ceca374941bea5516ac2" translate="yes" xml:space="preserve">
          <source>operator newoperator new[]</source>
          <target state="translated">연산자 newoperator new []</target>
        </trans-unit>
        <trans-unit id="a08317205d28f88cad551e5aba65d5d01def4a81" translate="yes" xml:space="preserve">
          <source>operator overloading</source>
          <target state="translated">연산자 과부하</target>
        </trans-unit>
        <trans-unit id="2698e149982423b6ce2a74a201e38858bb1ef8f9" translate="yes" xml:space="preserve">
          <source>operator precisionto_duration</source>
          <target state="translated">연산자 정밀도</target>
        </trans-unit>
        <trans-unit id="32ab673f4b5b5cf703be2600b1dcf5303ac6cc97" translate="yes" xml:space="preserve">
          <source>operator provides access to an object or function pointed-to by the pointer operand.</source>
          <target state="translated">연산자는 포인터 피연산자가 가리키는 객체 또는 함수에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5d4b69e2100f4d8103cf4b135d844c00d449fe8e" translate="yes" xml:space="preserve">
          <source>operator provides access to an object pointed-to by the &lt;a href=&quot;pointer&quot;&gt;pointer&lt;/a&gt; or &lt;a href=&quot;array&quot;&gt;array&lt;/a&gt; operand.</source>
          <target state="translated">연산자는 &lt;a href=&quot;pointer&quot;&gt;포인터&lt;/a&gt; 또는 &lt;a href=&quot;array&quot;&gt;배열&lt;/a&gt; 피연산자가 가리키는 객체에 대한 액세스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="1109a8f39bb248321a8c015590cc49c8e55b33c3" translate="yes" xml:space="preserve">
          <source>operator provides function semantics for any object.</source>
          <target state="translated">연산자는 모든 객체에 대한 기능 의미를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ad71d57dcb8f7ed79960e05dc77f1258b55b75fd" translate="yes" xml:space="preserve">
          <source>operator replaces the contents of the object &lt;code&gt;a&lt;/code&gt; with a copy of the contents of &lt;code&gt;b&lt;/code&gt; (&lt;code&gt;b&lt;/code&gt; is not modified). For class types, this is a special member function, described in &lt;a href=&quot;as_operator&quot;&gt;copy assignment operator&lt;/a&gt;.</source>
          <target state="translated">연산자는 객체 &lt;code&gt;a&lt;/code&gt; 의 내용을 &lt;code&gt;b&lt;/code&gt; 의 내용 사본으로 바꿉니다 ( &lt;code&gt;b&lt;/code&gt; 는 수정되지 않음). 클래스 유형의 경우 이는 &lt;a href=&quot;as_operator&quot;&gt;복사 지정 연산자에&lt;/a&gt; 설명 된 특수 멤버 함수 입니다.</target>
        </trans-unit>
        <trans-unit id="1e458e62337b1e2c277e069fb14d48135fd854cc" translate="yes" xml:space="preserve">
          <source>operator replaces the contents of the object &lt;code&gt;a&lt;/code&gt; with the contents of &lt;code&gt;b&lt;/code&gt;, avoiding copying if possible (&lt;code&gt;b&lt;/code&gt; may be modified). For class types, this is a special member function, described in &lt;a href=&quot;move_operator&quot;&gt;move assignment operator&lt;/a&gt;. (since C++11).</source>
          <target state="translated">연산자는 객체 &lt;code&gt;a&lt;/code&gt; 의 내용을 &lt;code&gt;b&lt;/code&gt; 의 내용으로 바꾸고 가능한 경우 복사를 피합니다 ( &lt;code&gt;b&lt;/code&gt; 는 수정 가능). 클래스 유형의 경우 이는 &lt;a href=&quot;move_operator&quot;&gt;이동 지정 연산자에&lt;/a&gt; 설명 된 특수 멤버 함수 입니다. (C ++ 11부터).</target>
        </trans-unit>
        <trans-unit id="a37bbd346ed7c03c8cdc5208d5e503386ed2dda8" translate="yes" xml:space="preserve">
          <source>operator std::size_t</source>
          <target state="translated">연산자 std :: size_t</target>
        </trans-unit>
        <trans-unit id="4d706008b77fbfcd2f04312f4edb5bc14ab57a52" translate="yes" xml:space="preserve">
          <source>operator sys_daysoperator local_days</source>
          <target state="translated">연산자 sys_daysoperator local_days</target>
        </trans-unit>
        <trans-unit id="3cbaf25cb5c02d5e12cfd0dfa7a7cd3944c293fd" translate="yes" xml:space="preserve">
          <source>operator sys_timeget_sys_time</source>
          <target state="translated">연산자 sys_timeget_sys_time</target>
        </trans-unit>
        <trans-unit id="56794489bf71fe290d09e323a11359d4075fd72b" translate="yes" xml:space="preserve">
          <source>operator unsigned</source>
          <target state="translated">운영자 서명되지 않은</target>
        </trans-unit>
        <trans-unit id="58e0c53669ebdec7e7f0769959193662d08dd43f" translate="yes" xml:space="preserve">
          <source>operator void*operator bool</source>
          <target state="translated">연산자 void * 연산자 bool</target>
        </trans-unit>
        <trans-unit id="924a0d114282e2c9fa9287bdbc467a78ec38b4cc" translate="yes" xml:space="preserve">
          <source>operator!</source>
          <target state="translated">operator!</target>
        </trans-unit>
        <trans-unit id="4a8fcb6b12f03d8dcbcde286954231b181558d7f" translate="yes" xml:space="preserve">
          <source>operator!=</source>
          <target state="translated">operator!=</target>
        </trans-unit>
        <trans-unit id="4e21a9252f67d5af13e1425072106d3c03df6aa8" translate="yes" xml:space="preserve">
          <source>operator!=operator&amp;gt;operator&amp;lt;=operator&amp;gt;=</source>
          <target state="translated">operator!=operator&amp;gt;operator&amp;lt;=operator&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="818408520a70c786be141e62d2669791c574ae35" translate="yes" xml:space="preserve">
          <source>operator&quot;&quot;d</source>
          <target state="translated">operator&quot;&quot;d</target>
        </trans-unit>
        <trans-unit id="aa4091a5497a2f6cecf06bcc334ed83a656d1e69" translate="yes" xml:space="preserve">
          <source>operator&quot;&quot;h</source>
          <target state="translated">operator&quot;&quot;h</target>
        </trans-unit>
        <trans-unit id="234a7d3ef0af6a87d1a4fe745ef06f4b565bdab9" translate="yes" xml:space="preserve">
          <source>operator&quot;&quot;ifoperator&quot;&quot;ioperator&quot;&quot;il</source>
          <target state="translated">operator&quot;&quot;ifoperator&quot;&quot;ioperator&quot;&quot;il</target>
        </trans-unit>
        <trans-unit id="a1b6d91ba5815badfb970e486df30bb47dec9c2d" translate="yes" xml:space="preserve">
          <source>operator&quot;&quot;min</source>
          <target state="translated">operator&quot;&quot;min</target>
        </trans-unit>
        <trans-unit id="0765228f2619413e916313e54b0f1bd36b7909c0" translate="yes" xml:space="preserve">
          <source>operator&quot;&quot;ms</source>
          <target state="translated">operator&quot;&quot;ms</target>
        </trans-unit>
        <trans-unit id="0d21ac48a815eea1f8428e1ff56a1493f73f19eb" translate="yes" xml:space="preserve">
          <source>operator&quot;&quot;ns</source>
          <target state="translated">operator&quot;&quot;ns</target>
        </trans-unit>
        <trans-unit id="a2fa5fcf72ee8fcbb8d5d13814a0b29b59b93c06" translate="yes" xml:space="preserve">
          <source>operator&quot;&quot;s</source>
          <target state="translated">operator&quot;&quot;s</target>
        </trans-unit>
        <trans-unit id="0ed8b6bfa6800b65c98f4587e0a9ea5ca726cb4a" translate="yes" xml:space="preserve">
          <source>operator&quot;&quot;sv</source>
          <target state="translated">operator&quot;&quot;sv</target>
        </trans-unit>
        <trans-unit id="0796f0a3898cee5d4061015f8ebf392283b27d2b" translate="yes" xml:space="preserve">
          <source>operator&quot;&quot;us</source>
          <target state="translated">operator&quot;&quot;us</target>
        </trans-unit>
        <trans-unit id="5316242f16060764a06a135dfb648cd1a281c232" translate="yes" xml:space="preserve">
          <source>operator&quot;&quot;y</source>
          <target state="translated">operator&quot;&quot;y</target>
        </trans-unit>
        <trans-unit id="c864d24589c756188ef9a9007f21c22ad8f9969a" translate="yes" xml:space="preserve">
          <source>operator&amp;amp; may be overloaded for a pointer wrapper class to obtain a pointer to pointer:</source>
          <target state="translated">포인터에 대한 포인터를 얻기 위해 포인터 래퍼 클래스에 대해 operator &amp;amp;가 오버로드 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e24a138edf6199a6362626cc75a588728244e8a9" translate="yes" xml:space="preserve">
          <source>operator&amp;amp;&amp;amp;operator||</source>
          <target state="translated">operator&amp;amp;&amp;amp;operator||</target>
        </trans-unit>
        <trans-unit id="8d2accba6fcac4ccdcd3d0c65a57aa033a76e65c" translate="yes" xml:space="preserve">
          <source>operator&amp;amp;,|,^&lt;small&gt;(std::bitset)&lt;/small&gt;</source>
          <target state="translated">operator&amp;amp;,|,^&lt;small&gt;(std::bitset)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="93e5405bc39c3930e31562b01a57cc90c0ba5858" translate="yes" xml:space="preserve">
          <source>operator&amp;amp;=operator|=operator^=operator~</source>
          <target state="translated">operator&amp;amp;=operator|=operator^=operator~</target>
        </trans-unit>
        <trans-unit id="28e2b37439799daeca131c05061f2f96d52bbac5" translate="yes" xml:space="preserve">
          <source>operator&amp;amp;operator|operator^</source>
          <target state="translated">operator&amp;amp;operator|operator^</target>
        </trans-unit>
        <trans-unit id="3ecbb54538b2955784d58a98f294cbb0f9c1860f" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;</source>
          <target state="translated">operator&amp;gt;</target>
        </trans-unit>
        <trans-unit id="647e1bfd25083284b070866d8e216143b84d67f2" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;&amp;gt;</source>
          <target state="translated">operator&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="7247b9d4c7ae27c03170bd2dc3ef99226b3d7426" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;&amp;gt;(std::basic_istream)</source>
          <target state="translated">operator&amp;gt;&amp;gt;(std::basic_istream)</target>
        </trans-unit>
        <trans-unit id="3645360a5f414b5f4d7d1f9a3e55b69dac74fdb7" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::basic_string)</source>
          <target state="translated">operator&amp;gt;(std::basic_string)</target>
        </trans-unit>
        <trans-unit id="9ca9ce78f905a9aee5b92e501125c15d33d0c421" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::bernoulli_distribution)</source>
          <target state="translated">operator&amp;gt;(std::bernoulli_distribution)</target>
        </trans-unit>
        <trans-unit id="853c57b06fce442967371e5f360d2b45bbc4b331" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::binomial_distribution)</source>
          <target state="translated">operator&amp;gt;(std::binomial_distribution)</target>
        </trans-unit>
        <trans-unit id="aac272afbc235ccf3046e0625cf66035cb50c3ea" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::bitset)</source>
          <target state="translated">operator&amp;gt;(std::bitset)</target>
        </trans-unit>
        <trans-unit id="012bc26d4b7ff2fd766ea0585c4acd387658fbd9" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::cauchy_distribution)</source>
          <target state="translated">operator&amp;gt;(std::cauchy_distribution)</target>
        </trans-unit>
        <trans-unit id="55d89e39b0983c5a0024d51f10029a880a43a56a" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::chi_squared_distribution)</source>
          <target state="translated">operator&amp;gt;(std::chi_squared_distribution)</target>
        </trans-unit>
        <trans-unit id="c7d8e4d5c702fc3868fdecd24ecbfbafd9cf8da8" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::complex)</source>
          <target state="translated">operator&amp;gt;(std::complex)</target>
        </trans-unit>
        <trans-unit id="614a054e5b2a72d6be4582ac12ec07f2673d543e" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::discard_block_engine)</source>
          <target state="translated">operator&amp;gt;(std::discard_block_engine)</target>
        </trans-unit>
        <trans-unit id="2dce34d90d2a45e7bcc9f49d330c375624d324d4" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::discrete_distribution)</source>
          <target state="translated">operator&amp;gt;(std::discrete_distribution)</target>
        </trans-unit>
        <trans-unit id="c4a44dd7fbe5a50c0cc01d2f84a55d86d3e0eb28" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::exponential_distribution)</source>
          <target state="translated">operator&amp;gt;(std::exponential_distribution)</target>
        </trans-unit>
        <trans-unit id="3f185a4e75e2257c16b8c66c1da3a948e69b6b75" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::extreme_value_distribution)</source>
          <target state="translated">operator&amp;gt;(std::extreme_value_distribution)</target>
        </trans-unit>
        <trans-unit id="7d160eb31d21d959e6b34bfb7b90d14842f44a25" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::filesystem::path)</source>
          <target state="translated">operator&amp;gt;(std::filesystem::path)</target>
        </trans-unit>
        <trans-unit id="44a1866c3441a06b876f8fc4a59850ccc3a09b5f" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::fisher_f_distribution)</source>
          <target state="translated">operator&amp;gt;(std::fisher_f_distribution)</target>
        </trans-unit>
        <trans-unit id="4abcc55ecbb8bcee217503aa9b5e74c22678fa67" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::gamma_distribution)</source>
          <target state="translated">operator&amp;gt;(std::gamma_distribution)</target>
        </trans-unit>
        <trans-unit id="8b629c9cb48b6fbb1cc51e7c477e9632f8074e89" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::geometric_distribution)</source>
          <target state="translated">operator&amp;gt;(std::geometric_distribution)</target>
        </trans-unit>
        <trans-unit id="d23ec81abb32bc31f5425b2c00adea56ba815fd7" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::independent_bits_engine)</source>
          <target state="translated">operator&amp;gt;(std::independent_bits_engine)</target>
        </trans-unit>
        <trans-unit id="5684950cbbd0decc4e0860f64c1edf6a3b4e1b99" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::linear_congruential_engine)</source>
          <target state="translated">operator&amp;gt;(std::linear_congruential_engine)</target>
        </trans-unit>
        <trans-unit id="e0337b490399745ef16ee5533d7fe4d1fae5b762" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::lognormal_distribution)</source>
          <target state="translated">operator&amp;gt;(std::lognormal_distribution)</target>
        </trans-unit>
        <trans-unit id="d4c62a0db915ca5460d4b5ec24f73c8d4a9d1cf5" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::mersenne_twister_engine)</source>
          <target state="translated">operator&amp;gt;(std::mersenne_twister_engine)</target>
        </trans-unit>
        <trans-unit id="77325d7c31baa0038b034b3f1291e4afd34f9cb6" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::negative_binomial_distribution)</source>
          <target state="translated">operator&amp;gt;(std::negative_binomial_distribution)</target>
        </trans-unit>
        <trans-unit id="0c7dcddb0dc25097a78300515de40f9932685070" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::normal_distribution)</source>
          <target state="translated">operator&amp;gt;(std::normal_distribution)</target>
        </trans-unit>
        <trans-unit id="029d22020fa11b623b401a9b8255d8bfa159fb23" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::piecewise_constant_distribution)</source>
          <target state="translated">operator&amp;gt;(std::piecewise_constant_distribution)</target>
        </trans-unit>
        <trans-unit id="5b62b989b238991349de8a7b317d4d1cec65330f" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::piecewise_linear_distribution)</source>
          <target state="translated">operator&amp;gt;(std::piecewise_linear_distribution)</target>
        </trans-unit>
        <trans-unit id="8ea651ade44e5caa38e0d4cd4b43c8d8ccfb4506" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::poisson_distribution)</source>
          <target state="translated">operator&amp;gt;(std::poisson_distribution)</target>
        </trans-unit>
        <trans-unit id="7761c24109bab6bd76ad5b47359d20ca2472a8d3" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::shuffle_order_engine)</source>
          <target state="translated">operator&amp;gt;(std::shuffle_order_engine)</target>
        </trans-unit>
        <trans-unit id="2cee51da094e5caecb04cd248d0d583802c7e750" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::student_t_distribution)</source>
          <target state="translated">operator&amp;gt;(std::student_t_distribution)</target>
        </trans-unit>
        <trans-unit id="11c82f02ce9e3833198bd6fc189db71ef0c6e213" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::subtract_with_carry_engine)</source>
          <target state="translated">operator&amp;gt;(std::subtract_with_carry_engine)</target>
        </trans-unit>
        <trans-unit id="e204322062fd2580efd31983a6fc1fa0b9bbfc22" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::uniform_int_distribution)</source>
          <target state="translated">operator&amp;gt;(std::uniform_int_distribution)</target>
        </trans-unit>
        <trans-unit id="693445fc254a1ee6b427881b1f9fb70b5bf92e39" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::uniform_real_distribution)</source>
          <target state="translated">operator&amp;gt;(std::uniform_real_distribution)</target>
        </trans-unit>
        <trans-unit id="f193fbebf46a746fdf8cd61af2d140737f43fed5" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;(std::weibull_distribution)</source>
          <target state="translated">operator&amp;gt;(std::weibull_distribution)</target>
        </trans-unit>
        <trans-unit id="950508e2334c7c9ed398c003c9487ac022a9d654" translate="yes" xml:space="preserve">
          <source>operator&amp;gt;=</source>
          <target state="translated">operator&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="80ac820c2d3dee3a687909f5fdbe7e17ba25c9d3" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;</source>
          <target state="translated">operator&amp;lt;</target>
        </trans-unit>
        <trans-unit id="d9430819c4c6bb2e3e8aac70446c597c475ee291" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;</target>
        </trans-unit>
        <trans-unit id="36ac1f6033b3cc5a07e484d8a7b5ba216b027511" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt; (std::chrono::file_time)</source>
          <target state="translated">연산자 &amp;lt;&amp;lt; (std :: chrono :: file_time)</target>
        </trans-unit>
        <trans-unit id="6e15c98e55b47c50ce7f8cd77bae3574f05683f6" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt; (std::chrono::gps_time)</source>
          <target state="translated">연산자 &amp;lt;&amp;lt; (std :: chrono :: gps_time)</target>
        </trans-unit>
        <trans-unit id="a17b36a0a4ff2e9a70be636bfdb03f69918280ac" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt; (std::chrono::local_time)</source>
          <target state="translated">연산자 &amp;lt;&amp;lt; (std :: chrono :: local_time)</target>
        </trans-unit>
        <trans-unit id="c0bac9e5c2286319e62b738a74d7d644d6ea56c5" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt; (std::chrono::sys_time)</source>
          <target state="translated">연산자 &amp;lt;&amp;lt; (std :: chrono :: sys_time)</target>
        </trans-unit>
        <trans-unit id="1ea532fb1741c0b009a399b60fbe5fb6897024fb" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt; (std::chrono::tai_time)</source>
          <target state="translated">연산자 &amp;lt;&amp;lt; (std :: chrono :: tai_time)</target>
        </trans-unit>
        <trans-unit id="df74006832fad49e60c7856b2c8dbc8ab1473a6b" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt; (std::chrono::utc_time)</source>
          <target state="translated">연산자 &amp;lt;&amp;lt; (std :: chrono :: utc_time)</target>
        </trans-unit>
        <trans-unit id="0d7d37d90f2e80b356ae490e2e2b32ae972929bd" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;(std::basic_ostream)</source>
          <target state="translated">operator&amp;lt;&amp;lt;(std::basic_ostream)</target>
        </trans-unit>
        <trans-unit id="9127baaf48e7b4a7f1359cba63d509189ee9e24e" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;(std::basic_string_view)</source>
          <target state="translated">operator&amp;lt;&amp;lt;(std::basic_string_view)</target>
        </trans-unit>
        <trans-unit id="b9d1f8c37344b5c86fbb402246562727d94671b1" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;(std::sub_match)</source>
          <target state="translated">operator&amp;lt;&amp;lt;(std::sub_match)</target>
        </trans-unit>
        <trans-unit id="d50f6a13725bc47e0d2ff7d2637c4203a65e7e0b" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;(std::thread::id)</source>
          <target state="translated">operator&amp;lt;&amp;lt;(std::thread::id)</target>
        </trans-unit>
        <trans-unit id="6464794baec8ba316b235eb923a220f094b15bba" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;(std::basic_string)</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;(std::basic_string)</target>
        </trans-unit>
        <trans-unit id="757960b05c363f83a6d3f971ca27867ea9c26808" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;(std::complex)</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;(std::complex)</target>
        </trans-unit>
        <trans-unit id="bfad6fc910e6e98e41c4ba44dbf6d7815a035a36" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;(std::filesystem::path)</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;(std::filesystem::path)</target>
        </trans-unit>
        <trans-unit id="1757023fc96227b1db1a275f8d6a93a892d00ed4" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::bernoulli_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::bernoulli_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="391abf83db785281e8382dda25af66f51c8dd0d5" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::binomial_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::binomial_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0522c98607e56dcea3b7b074eb7037ceaacd0ff2" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::bitset)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::bitset)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="21edcee464c4cc14ab22c98ca0f614e2519f8a7a" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::cauchy_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::cauchy_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b30971324e052f405fdefa0fd0de3c28ad2ff6ac" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::chi_squared_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::chi_squared_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="66dbb5ff81b579dfbf72caacbf92e69829558968" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::discard_block_engine)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::discard_block_engine)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5fe4b8fa153eefb86fe1cfa99f3aba39bd7643f9" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::discrete_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::discrete_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f0adf9f132dbf1755d507adda4e171fb41d6ec7a" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::exponential_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::exponential_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a42f8d632e87dfc99bf120d0f1e2b40815cbb4f5" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::extreme_value_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::extreme_value_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="38244a987fe023f8aef8f225a030e7ab5904bf29" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::fisher_f_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::fisher_f_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="42e1eca805962b9af3592b2262d754497894b90d" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::gamma_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::gamma_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c3e90970598b9fe6ae67fc0973c5d38fec8af204" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::geometric_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::geometric_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="39fa13fd6dac6df61c727090c8c4e03454fbd46c" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::independent_bits_engine)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::independent_bits_engine)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="07a53052cc5c387c9e5d3feecfe494bfd6e4a2f6" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::linear_congruential_engine)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::linear_congruential_engine)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="41fc993ddd9c914686c14c7c47230815d86dfbd7" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::lognormal_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::lognormal_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="716c32e5c5c51ea565ac3a4f6b9dfddaac583ce1" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::mersenne_twister_engine)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::mersenne_twister_engine)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="45659de85ba04668b39ffc6d3c0da603ce880e23" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::negative_binomial_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::negative_binomial_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="19dc93a3839bded9e48d71f029e0deb3c20a958e" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::normal_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::normal_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e73bf7e494d98ef9745ef44abbb426a51add3878" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::piecewise_constant_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::piecewise_constant_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c3045c17528b2e812d052c38c27d193ae458a9fe" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::piecewise_linear_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::piecewise_linear_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d7402fac7997c6a9e1cb4bf54c84bab4fcb5d0aa" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::poisson_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::poisson_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2d721ca10556344979c221020f8b98daa5305399" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::shuffle_order_engine)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::shuffle_order_engine)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="28732312f25607baccc4f37f1d14bfef369fffce" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::student_t_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::student_t_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3c9dcdce5fdb75f0fef07bc23f4a4f204a09e52e" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::subtract_with_carry_engine)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::subtract_with_carry_engine)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b929d9e25fb90a71791e9561c2157d07e13b5305" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::uniform_int_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::uniform_int_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="94f63dd3bf810a717c1d5f6c50b19c5f4e968436" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::uniform_real_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::uniform_real_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="278e31b36dc33ab92d9bd038ca2b74e579300183" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::weibull_distribution)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;,&amp;gt;&amp;gt;&lt;small&gt;(std::weibull_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="268f801adbcca74c7147ca17e5ba7c11a14aac8c" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;=operator&amp;gt;&amp;gt;=operator&amp;lt;&amp;lt;operator&amp;gt;&amp;gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;=operator&amp;gt;&amp;gt;=operator&amp;lt;&amp;lt;operator&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="93d7afc75a59fb68f8f5f7a531f0c482b5c2390a" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;&amp;lt;operator&amp;gt;&amp;gt;</source>
          <target state="translated">operator&amp;lt;&amp;lt;operator&amp;gt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="efd42e017680c3bddd296c80275f38000cfb8b48" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::move_iterator)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::move_iterator)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3aba49287c4052e23dd6603cefe4b9267e73c0f8" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::reverse_iterator)&lt;/small&gt;</source>
          <target state="translated">operator&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::reverse_iterator)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a54a2f3ba8d2872e26b31ab577ac05647f18ac48" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;=</source>
          <target state="translated">operator&amp;lt;=</target>
        </trans-unit>
        <trans-unit id="d7b2ee71ae92f1e0bc99caa378f97e4857d321c9" translate="yes" xml:space="preserve">
          <source>operator&amp;lt;=&amp;gt;</source>
          <target state="translated">operator&amp;lt;=&amp;gt;</target>
        </trans-unit>
        <trans-unit id="143b5f4591bb464f5cb8e0ad5fc11b5f82d08c94" translate="yes" xml:space="preserve">
          <source>operator()</source>
          <target state="translated">operator()</target>
        </trans-unit>
        <trans-unit id="0cb24446f11a47efe3882e42fa2f96c7364960e3" translate="yes" xml:space="preserve">
          <source>operator*</source>
          <target state="translated">operator*</target>
        </trans-unit>
        <trans-unit id="72ea5051de931531a56492bdb93935c2ec0df3ff" translate="yes" xml:space="preserve">
          <source>operator*operator-&amp;gt;</source>
          <target state="translated">operator*operator-&amp;gt;</target>
        </trans-unit>
        <trans-unit id="3d7e662812432c121d02b6cd24760b4a8531f3f8" translate="yes" xml:space="preserve">
          <source>operator+</source>
          <target state="translated">operator+</target>
        </trans-unit>
        <trans-unit id="e7ffd80e94defbca007e55482faf73c346974ac2" translate="yes" xml:space="preserve">
          <source>operator++operator++(int)</source>
          <target state="translated">operator++operator++(int)</target>
        </trans-unit>
        <trans-unit id="de2b1624c5a29749db1eebf1fb9b629a0f397cb3" translate="yes" xml:space="preserve">
          <source>operator++operator++(int)operator+=operator+operator--operator--(int)operator-=operator-</source>
          <target state="translated">operator++operator++(int)operator+=operator+operator--operator--(int)operator-=operator-</target>
        </trans-unit>
        <trans-unit id="d6f2f332de59e97078b06f0ad27bb23dc637024f" translate="yes" xml:space="preserve">
          <source>operator++operator++(int)operator--operator--(int)</source>
          <target state="translated">operator++operator++(int)operator--operator--(int)</target>
        </trans-unit>
        <trans-unit id="1b4a528be6a97eb65f88da46448254751f14b642" translate="yes" xml:space="preserve">
          <source>operator+, operator-(std::time_point)</source>
          <target state="translated">연산자 +, 연산자-(std :: time_point)</target>
        </trans-unit>
        <trans-unit id="1e6fe00481eb957e267940c007058708d6e6c26a" translate="yes" xml:space="preserve">
          <source>operator+,-,*,/ (std::complex)</source>
          <target state="translated">연산자 +,-, *, / (std :: complex)</target>
        </trans-unit>
        <trans-unit id="2edb637df573876dfa282b6553854385b901049d" translate="yes" xml:space="preserve">
          <source>operator+,-,*,/,%,&amp;amp;,|,^,&amp;lt;&amp;lt;,&amp;gt;&amp;gt;,&amp;amp;&amp;amp;,|| (std::valarray)</source>
          <target state="translated">연산자 +,-, *, /, %, &amp;amp;, |, ^, &amp;lt;&amp;lt;, &amp;gt;&amp;gt;, &amp;amp;&amp;amp;, || (std :: valarray)</target>
        </trans-unit>
        <trans-unit id="9f8537fd72fb7ed04739333d451389bd829eec5c" translate="yes" xml:space="preserve">
          <source>operator+,-,*,/,%&lt;small&gt;(std::chrono::duration)&lt;/small&gt;</source>
          <target state="translated">operator+,-,*,/,%&lt;small&gt;(std::chrono::duration)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f91dbdfff0ce596e656f5fba87bd22128cfad2ea" translate="yes" xml:space="preserve">
          <source>operator+=</source>
          <target state="translated">operator+=</target>
        </trans-unit>
        <trans-unit id="593ed1702567db50ae3c1f3e935758a288003c66" translate="yes" xml:space="preserve">
          <source>operator+=operator-=</source>
          <target state="translated">operator+=operator-=</target>
        </trans-unit>
        <trans-unit id="c77d5e4d52a67be9a8056434889e75e912ce7bc6" translate="yes" xml:space="preserve">
          <source>operator+=operator-=operator&amp;amp;=operator|=operator^=</source>
          <target state="translated">operator+=operator-=operator&amp;amp;=operator|=operator^=</target>
        </trans-unit>
        <trans-unit id="fe610520b038d76fa20b7159c817dd69a43bf569" translate="yes" xml:space="preserve">
          <source>operator+=operator-=operator*=operator/=</source>
          <target state="translated">operator+=operator-=operator*=operator/=</target>
        </trans-unit>
        <trans-unit id="1303f57bde7aef4ac39d7f9ab28a2f4aa3be4b49" translate="yes" xml:space="preserve">
          <source>operator+=operator-=operator*=operator/=operator%=</source>
          <target state="translated">operator+=operator-=operator*=operator/=operator%=</target>
        </trans-unit>
        <trans-unit id="4ecbc3193fa2bb80dd1b94bc86642b8135b91ed9" translate="yes" xml:space="preserve">
          <source>operator+=operator-=operator*=operator/=operator%=operator&amp;amp;=operator|=operator^=operator&amp;lt;&amp;lt;=operator&amp;gt;&amp;gt;=</source>
          <target state="translated">operator+=operator-=operator*=operator/=operator%=operator&amp;amp;=operator|=operator^=operator&amp;lt;&amp;lt;=operator&amp;gt;&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="4788f721bbe33b6a793ccdb7daa8c17f668ba459" translate="yes" xml:space="preserve">
          <source>operator+operator-</source>
          <target state="translated">operator+operator-</target>
        </trans-unit>
        <trans-unit id="513671d61a43cdf4983170eeeae801dd7666ae22" translate="yes" xml:space="preserve">
          <source>operator+operator-operator*operator/</source>
          <target state="translated">operator+operator-operator*operator/</target>
        </trans-unit>
        <trans-unit id="5e644ca56632bb7406e04c76c04b60fcf55c4ed4" translate="yes" xml:space="preserve">
          <source>operator+operator-operator*operator/operator%</source>
          <target state="translated">operator+operator-operator*operator/operator%</target>
        </trans-unit>
        <trans-unit id="c985e4a0b0ec2fa8e44a080781af610b455611a3" translate="yes" xml:space="preserve">
          <source>operator+operator-operator*operator/operator%operator&amp;amp;operator|operator^operator&amp;lt;&amp;lt;operator&amp;gt;&amp;gt;operator&amp;amp;&amp;amp;operator||</source>
          <target state="translated">operator+operator-operator*operator/operator%operator&amp;amp;operator|operator^operator&amp;lt;&amp;lt;operator&amp;gt;&amp;gt;operator&amp;amp;&amp;amp;operator||</target>
        </trans-unit>
        <trans-unit id="e52af931ce468e9ae161574a1eb6994707ce3693" translate="yes" xml:space="preserve">
          <source>operator+operator-operator~operator!</source>
          <target state="translated">operator+operator-operator~operator!</target>
        </trans-unit>
        <trans-unit id="cdc80d12f6928650662852321bb39a7abd091ac2" translate="yes" xml:space="preserve">
          <source>operator-</source>
          <target state="translated">operator-</target>
        </trans-unit>
        <trans-unit id="59bd9a9587fa47fe06864dd8c49e6b005eec316f" translate="yes" xml:space="preserve">
          <source>operator-&amp;gt;operator*</source>
          <target state="translated">operator-&amp;gt;operator*</target>
        </trans-unit>
        <trans-unit id="9beba778856a827b903a1a14fbd6eaf720b14a28" translate="yes" xml:space="preserve">
          <source>operator-(std::move_iterator)</source>
          <target state="translated">operator-(std::move_iterator)</target>
        </trans-unit>
        <trans-unit id="3d6080b31f0d8ce651bfcc0bd98c03d10325124e" translate="yes" xml:space="preserve">
          <source>operator-(std::reverse_iterator)</source>
          <target state="translated">operator-(std::reverse_iterator)</target>
        </trans-unit>
        <trans-unit id="58b0e22d9b98a03ce3b80e85438cb96008980194" translate="yes" xml:space="preserve">
          <source>operator-&lt;small&gt;(std::move_iterator)&lt;/small&gt;</source>
          <target state="translated">operator-&lt;small&gt;(std::move_iterator)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e338271e7d09a2cd044313db223626e70fd3b7fc" translate="yes" xml:space="preserve">
          <source>operator-&lt;small&gt;(std::reverse_iterator)&lt;/small&gt;</source>
          <target state="translated">operator-&lt;small&gt;(std::reverse_iterator)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b8b356ba83f47ecc07fb654bd4b866b761196f6e" translate="yes" xml:space="preserve">
          <source>operator/</source>
          <target state="translated">operator/</target>
        </trans-unit>
        <trans-unit id="0e4329abf0895e5f8a998114fb4326de47f95db6" translate="yes" xml:space="preserve">
          <source>operator=</source>
          <target state="translated">operator=</target>
        </trans-unit>
        <trans-unit id="e3eaccd5d4f674c5c400b94262383f802c8f9db5" translate="yes" xml:space="preserve">
          <source>operator==</source>
          <target state="translated">operator==</target>
        </trans-unit>
        <trans-unit id="ac1b59f771df022f2ed37b88567207079fc3d873" translate="yes" xml:space="preserve">
          <source>operator==, !=, &amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=(std::optional)</source>
          <target state="translated">operator ==,! =, &amp;lt;, &amp;lt;=,&amp;gt;,&amp;gt; = (std :: 선택 사항)</target>
        </trans-unit>
        <trans-unit id="cafedb91381ff510d6ce65013bbc136ac4e191e0" translate="yes" xml:space="preserve">
          <source>operator==, !=, &amp;lt;, &amp;lt;=, &amp;gt;, &amp;gt;=(std::variant)</source>
          <target state="translated">operator ==,! =, &amp;lt;, &amp;lt;=,&amp;gt;,&amp;gt; = (std :: variant)</target>
        </trans-unit>
        <trans-unit id="75460745ed9610351c9673c39ee490d8cb5d3ee6" translate="yes" xml:space="preserve">
          <source>operator==,!=(std::allocator)</source>
          <target state="translated">operator==,!=(std::allocator)</target>
        </trans-unit>
        <trans-unit id="c2f9ec5f506ac25d7f7a643683100483d5736ef3" translate="yes" xml:space="preserve">
          <source>operator==,!=(std::complex)</source>
          <target state="translated">operator==,!=(std::complex)</target>
        </trans-unit>
        <trans-unit id="6bb4c40a1fdbf42819e61a797d5b06634ed1d439" translate="yes" xml:space="preserve">
          <source>operator==,!=(std::istream_iterator)</source>
          <target state="translated">operator==,!=(std::istream_iterator)</target>
        </trans-unit>
        <trans-unit id="59fbdf5caceab5047777246846ab43bc68fe673b" translate="yes" xml:space="preserve">
          <source>operator==,!=(std::istreambuf_iterator)</source>
          <target state="translated">operator==,!=(std::istreambuf_iterator)</target>
        </trans-unit>
        <trans-unit id="cf1d335c15e41cfd74242a8b2fcbef2868fd5e03" translate="yes" xml:space="preserve">
          <source>operator==,!=(std::match_results)</source>
          <target state="translated">operator==,!=(std::match_results)</target>
        </trans-unit>
        <trans-unit id="b578f8ce14dae1bdea68ae65ec0cbc804d1c7e16" translate="yes" xml:space="preserve">
          <source>operator==,!=(std::scoped_allocator_adaptor)</source>
          <target state="translated">operator==,!=(std::scoped_allocator_adaptor)</target>
        </trans-unit>
        <trans-unit id="c744f67bf3db10b95a4f12f8183b514c0ea91f30" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;(std::error_condition)</source>
          <target state="translated">operator==,!=,&amp;lt;(std::error_condition)</target>
        </trans-unit>
        <trans-unit id="39c96d767de0026c555a2e68d7affe7eeee3f450" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::array)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::array)</target>
        </trans-unit>
        <trans-unit id="ad738bca001556de57c0e789fa92810448021dc8" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::deque)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::deque)</target>
        </trans-unit>
        <trans-unit id="1ab74b972ad6ed91b972a388a9eb09366a1e822c" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::filesystem::path)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::filesystem::path)</target>
        </trans-unit>
        <trans-unit id="cb6251ccc48b57c0f9b4032ba68e6a3a0fc60760" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::forward_list)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::forward_list)</target>
        </trans-unit>
        <trans-unit id="f6b18593b27524e4121859182c512fe75bfdde89" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::list)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::list)</target>
        </trans-unit>
        <trans-unit id="419c215dca75e7bc71def9069a9c90bc2a930ee8" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::map)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::map)</target>
        </trans-unit>
        <trans-unit id="1aeaeaae3fb2588a92798c4a619c115f220a86b5" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::multimap)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::multimap)</target>
        </trans-unit>
        <trans-unit id="5497b5f12811409199e137b05c915287bd833912" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::multiset)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::multiset)</target>
        </trans-unit>
        <trans-unit id="87e5270a76d803c69efec46224e50f489dfd2ab6" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::queue)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::queue)</target>
        </trans-unit>
        <trans-unit id="bc6038e5b48954eab3e3895f00e4a9c7866a274e" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::set)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::set)</target>
        </trans-unit>
        <trans-unit id="f264c55c82bc409efc3ddb87e82803b425d1e642" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::stack)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::stack)</target>
        </trans-unit>
        <trans-unit id="e0c566c2462466eb55ffec96771a65a25f0d153d" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::thread::id)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::thread::id)</target>
        </trans-unit>
        <trans-unit id="7040200a06ec178bd2ec7049a31308b8b1a33ea7" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::time_point)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::time_point)</target>
        </trans-unit>
        <trans-unit id="725a8b19c494e7ae91f6881857c940ced677fba8" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::valarray)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::valarray)</target>
        </trans-unit>
        <trans-unit id="c72bae315b1bff44ae675ff0085fc75509154fc8" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::vector)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=(std::vector)</target>
        </trans-unit>
        <trans-unit id="6c8ff31898494859a1d6ca942cbb0c5e4ed0f5f2" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::basic_string)&lt;/small&gt;</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::basic_string)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ab8e01d16f05467543866a29ebf8e20321084281" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::basic_string_view)&lt;/small&gt;</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::basic_string_view)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e91f1945fe553ec9a3891644438e5c06cfd1fa01" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::chrono::duration)&lt;/small&gt;</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::chrono::duration)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ecfdaac9b9f38ed2545994b2c7e59b3abac5f21b" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::pair&lt;/small&gt;)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::pair&lt;/small&gt;)</target>
        </trans-unit>
        <trans-unit id="383d675eb1f09fd9a37fc8f568d2ab9dcd1b6c67" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::sub_match)&lt;/small&gt;</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::sub_match)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="225e8042604466054dea178e8e154985b1ef24ff" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::tuple&lt;/small&gt;)</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::tuple&lt;/small&gt;)</target>
        </trans-unit>
        <trans-unit id="f058aae00f7cc072f78081f8a7028dfb3883a923" translate="yes" xml:space="preserve">
          <source>operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::unique_ptr)&lt;/small&gt;</source>
          <target state="translated">operator==,!=,&amp;lt;,&amp;lt;=,&amp;gt;,&amp;gt;=&lt;small&gt;(std::unique_ptr)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b777e3bb752a8cde25ccdf746212077a5a885e47" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::bernoulli_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::bernoulli_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e5dbbb7084710c3b32dae7ca45db3cd7b1f01545" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::binomial_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::binomial_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="02e64c79db19871ee2ce4e75912a9b523e94b2e0" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::bitset&lt;/small&gt;)</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::bitset&lt;/small&gt;)</target>
        </trans-unit>
        <trans-unit id="dfb4fe85d934e6d3ad6867857ed15196d205e65a" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::cauchy_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::cauchy_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="7eb0f79a7ee832948c818c05c76a3a8f8d897853" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::chi_squared_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::chi_squared_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="96c0f1ff0b83d96b59b693c3c3e0d5c06f33065a" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::discard_block_engine)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::discard_block_engine)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b4e76c283f0981c2b0601ecbc46e9074c920259a" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::discrete_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::discrete_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9f0fea0d4e295e97d3c8c3c449eca00a54e2fb09" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::exponential_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::exponential_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="cfdc19aab5375aa9f5eec191754f6fe4a0332d41" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::extreme_value_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::extreme_value_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9e4e60c8fb8af4c9487bd5e0941d474593d7c7de" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::fisher_f_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::fisher_f_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="68e2512d7ed869140087cbb35cf0ae0b8c79aa2d" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::function)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::function)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="e99703d70a755480dc613e701f81269860270328" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::gamma_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::gamma_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="47908385286f488b9b6b385cd63eec6172de07c2" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::geometric_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::geometric_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="19b422d8344977255ea0c11b3ce2f2ef65ec1c18" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::independent_bits_engine)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::independent_bits_engine)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="faccc575ce0ef4169ba3e3df3fa2ad91498557c2" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::linear_congruential_engine)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::linear_congruential_engine)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="64c643e84d0aa20681e18ab5137c8227ab6903ef" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::lognormal_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::lognormal_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="fe7732138bb703e57a0de0583117c3c26a38d832" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::mersenne_twister_engine)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::mersenne_twister_engine)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c3c8d877d1efccaf168cd93953734247ab3acc2a" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::negative_binomial_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::negative_binomial_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3fb0c58201259a91ea809402a3b72c36d272f53a" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::normal_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::normal_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="19e5564fda789b552f1964f9eb2dbf79c906dc2c" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::piecewise_constant_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::piecewise_constant_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ceb2b347af147527001a1c9c4a38569059ddcdb0" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::piecewise_linear_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::piecewise_linear_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="ea8b4b75388bc2e24222180f5ec0b5823f748498" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::poisson_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::poisson_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="49f03ef31e688a1f55f027a05671286c9b20527e" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::shuffle_order_engine)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::shuffle_order_engine)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="96755f9c254da22f65864d3b805a28f7d28ae36e" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::student_t_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::student_t_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2423872e78470a1d5f88a8e7e04d0084117dea40" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::subtract_with_carry_engine)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::subtract_with_carry_engine)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="dad456f1b1c012aea8827412485f6209a36747c7" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::uniform_int_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::uniform_int_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="892a093d8ad6b3ab4f592eea86f6aa34b08d0169" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::uniform_real_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::uniform_real_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3b0cc85e336a9321f7bec70f0d36fdb47b76ae66" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::unordered_map)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::unordered_map)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4661cbd96b19f303d66a15fdcf53664590f86f56" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::unordered_multimap)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::unordered_multimap)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="4f26f01e28df9cff8f4ef45d6ecc8cd4c267535c" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::unordered_multiset)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::unordered_multiset)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="f64a6c0cfbcaf9fd9315072a065e0e378925c288" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::unordered_set)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::unordered_set)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="50563541292304b59e408316962a4ddfe09bbc9b" translate="yes" xml:space="preserve">
          <source>operator==,!=&lt;small&gt;(std::weibull_distribution)&lt;/small&gt;</source>
          <target state="translated">operator==,!=&lt;small&gt;(std::weibull_distribution)&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a86734014e1d063892251dcfed385144a93c8fd0" translate="yes" xml:space="preserve">
          <source>operator==operator!=</source>
          <target state="translated">operator==operator!=</target>
        </trans-unit>
        <trans-unit id="f0c2e64971d88ad4ae799ef0253ac06070a101c8" translate="yes" xml:space="preserve">
          <source>operator==operator!=operator&amp;lt;</source>
          <target state="translated">operator==operator!=operator&amp;lt;</target>
        </trans-unit>
        <trans-unit id="a743ac9bd357f532b97331ba078ad1e2b028f2ed" translate="yes" xml:space="preserve">
          <source>operator==operator!=operator&amp;lt;  operator&amp;lt;=  operator&amp;gt;  operator&amp;gt;=</source>
          <target state="translated">operator == 연산자! = 연산자 &amp;lt;연산자 &amp;lt;= 연산자&amp;gt; 연산자&amp;gt; =</target>
        </trans-unit>
        <trans-unit id="1310195131ab4abcb4cf950f9adca53da3fecbff" translate="yes" xml:space="preserve">
          <source>operator==operator!=operator&amp;lt;operator&amp;gt;operator&amp;lt;=operator&amp;gt;=</source>
          <target state="translated">operator==operator!=operator&amp;lt;operator&amp;gt;operator&amp;lt;=operator&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="a7c3449d8414cf0e1579ccdb13f7383d2485de0b" translate="yes" xml:space="preserve">
          <source>operator==operator!=operator&amp;lt;operator&amp;lt;=operator&amp;gt;operator&amp;gt;=</source>
          <target state="translated">operator==operator!=operator&amp;lt;operator&amp;lt;=operator&amp;gt;operator&amp;gt;=</target>
        </trans-unit>
        <trans-unit id="d0b0646b2487fc590973415de333d17dc9baaa51" translate="yes" xml:space="preserve">
          <source>operator@ (a)</source>
          <target state="translated">운영자 @ (a)</target>
        </trans-unit>
        <trans-unit id="332648861f4e6e78a9f33812f2196f4b26ef547b" translate="yes" xml:space="preserve">
          <source>operator@ (a, 0)</source>
          <target state="translated">연산자 @ (a, 0)</target>
        </trans-unit>
        <trans-unit id="f1dff4f9c6c5335d485f38208cc731a9bdb50e93" translate="yes" xml:space="preserve">
          <source>operator@ (a, b)</source>
          <target state="translated">연산자 @ (a, b)</target>
        </trans-unit>
        <trans-unit id="667c3eecf32238f5222df4d4f2b657d718826e4a" translate="yes" xml:space="preserve">
          <source>operator[]</source>
          <target state="translated">operator[]</target>
        </trans-unit>
        <trans-unit id="b06732f947307087eb0331d1754e064008cfcce1" translate="yes" xml:space="preserve">
          <source>operator^operator&amp;amp;operator|</source>
          <target state="translated">operator^operator&amp;amp;operator|</target>
        </trans-unit>
        <trans-unit id="697823d308688f7c73ec9a1160acc4fc207ea540" translate="yes" xml:space="preserve">
          <source>operators</source>
          <target state="translated">operators</target>
        </trans-unit>
        <trans-unit id="319a126900fb6506b0c312f8fb1b58bbcc5f4985" translate="yes" xml:space="preserve">
          <source>operators (delete[])</source>
          <target state="translated">연산자 (삭제 [])</target>
        </trans-unit>
        <trans-unit id="049deeecb4250a66c26f17fd75886fa291faf48d" translate="yes" xml:space="preserve">
          <source>operators (new[])</source>
          <target state="translated">연산자 (신규 [])</target>
        </trans-unit>
        <trans-unit id="a370fa4ed1c911d6b46bc274107d3b3e18f29a05" translate="yes" xml:space="preserve">
          <source>operators (std::allocator)</source>
          <target state="translated">연산자 (std :: allocator)</target>
        </trans-unit>
        <trans-unit id="527dc159bace48e7ede93ddfbffec7c9da95ce0c" translate="yes" xml:space="preserve">
          <source>operators (std::array)</source>
          <target state="translated">연산자 (std :: array)</target>
        </trans-unit>
        <trans-unit id="10d3d737f38085c82902a74c2196dd7625ff7f98" translate="yes" xml:space="preserve">
          <source>operators (std::basic_string)</source>
          <target state="translated">연산자 (std :: basic_string)</target>
        </trans-unit>
        <trans-unit id="6db8712e4f7994ac6faabd76a0dd7c599b0d30d5" translate="yes" xml:space="preserve">
          <source>operators (std::basic_string_view)</source>
          <target state="translated">연산자 (std :: basic_string_view)</target>
        </trans-unit>
        <trans-unit id="fbce1797cedb5a1a49f020e2335e2c75826fa917" translate="yes" xml:space="preserve">
          <source>operators (std::bernoulli_distribution)</source>
          <target state="translated">연산자 (std :: bernoulli_distribution)</target>
        </trans-unit>
        <trans-unit id="8085db65dcf1d7124014d551f2d68f7ffe80ff48" translate="yes" xml:space="preserve">
          <source>operators (std::binomial_distribution)</source>
          <target state="translated">연산자 (std :: binomial_distribution)</target>
        </trans-unit>
        <trans-unit id="2632a0aeb83b26394e473d89196dbee84f46a938" translate="yes" xml:space="preserve">
          <source>operators (std::bitset)</source>
          <target state="translated">연산자 (std :: bitset)</target>
        </trans-unit>
        <trans-unit id="8443569d359a408ccc545a2f2b264a272e597f3c" translate="yes" xml:space="preserve">
          <source>operators (std::cauchy_distribution)</source>
          <target state="translated">연산자 (std :: cauchy_distribution)</target>
        </trans-unit>
        <trans-unit id="4c5692060c8137ee3c3b3f1534c3a1b1fab28a53" translate="yes" xml:space="preserve">
          <source>operators (std::chi_squared_distribution)</source>
          <target state="translated">연산자 (std :: chi_squared_distribution)</target>
        </trans-unit>
        <trans-unit id="a1c4ef119b6de2a31f5101fd9f1e8dc3472d0a25" translate="yes" xml:space="preserve">
          <source>operators (std::chrono::duration)</source>
          <target state="translated">연산자 (std :: chrono :: duration)</target>
        </trans-unit>
        <trans-unit id="cd0a858805e4c4dc575d47590a63fb6210c8a68f" translate="yes" xml:space="preserve">
          <source>operators (std::complex)</source>
          <target state="translated">연산자 (std :: complex)</target>
        </trans-unit>
        <trans-unit id="37300b76ebd01666bb2cf47bda67eb9c205422cf" translate="yes" xml:space="preserve">
          <source>operators (std::deque)</source>
          <target state="translated">연산자 (std :: deque)</target>
        </trans-unit>
        <trans-unit id="c7955e10b3550e98106142a31d3bae5c71efe02e" translate="yes" xml:space="preserve">
          <source>operators (std::discard_block_engine)</source>
          <target state="translated">연산자 (std :: discard_block_engine)</target>
        </trans-unit>
        <trans-unit id="e3e468d87a57ad3d7821f88ad889df78b2a31f82" translate="yes" xml:space="preserve">
          <source>operators (std::discrete_distribution)</source>
          <target state="translated">연산자 (std :: discrete_distribution)</target>
        </trans-unit>
        <trans-unit id="3192d2c8deb0992272514679656b19f7a98b1826" translate="yes" xml:space="preserve">
          <source>operators (std::error_condition)</source>
          <target state="translated">연산자 (std :: error_condition)</target>
        </trans-unit>
        <trans-unit id="6766339d4c344e185aab00b38b9b557e2c25fe40" translate="yes" xml:space="preserve">
          <source>operators (std::exponential_distribution)</source>
          <target state="translated">연산자 (std :: exponential_distribution)</target>
        </trans-unit>
        <trans-unit id="b1da078330371c02f7884b39b88c9d96fcd22c8f" translate="yes" xml:space="preserve">
          <source>operators (std::extreme_value_distribution)</source>
          <target state="translated">연산자 (std :: extreme_value_distribution)</target>
        </trans-unit>
        <trans-unit id="0044976792a31dfee643a3c82bed2892f72a06dd" translate="yes" xml:space="preserve">
          <source>operators (std::filesystem::path)</source>
          <target state="translated">연산자 (std :: filesystem :: path)</target>
        </trans-unit>
        <trans-unit id="83f8763fa4f3a079498fa271df185f934ce6cce7" translate="yes" xml:space="preserve">
          <source>operators (std::fisher_f_distribution)</source>
          <target state="translated">연산자 (std :: fisher_f_distribution)</target>
        </trans-unit>
        <trans-unit id="9f86b285959f8f8e9c7f3a8e8368ce8ccb0bfe3b" translate="yes" xml:space="preserve">
          <source>operators (std::forward_list)</source>
          <target state="translated">연산자 (std :: forward_list)</target>
        </trans-unit>
        <trans-unit id="5b51d45b5d5a18f27c6c59fb566dd46b8fc24470" translate="yes" xml:space="preserve">
          <source>operators (std::function)</source>
          <target state="translated">연산자 (std :: function)</target>
        </trans-unit>
        <trans-unit id="da796eac6e148fd51ab679afb581198c9b8ad170" translate="yes" xml:space="preserve">
          <source>operators (std::gamma_distribution)</source>
          <target state="translated">연산자 (std :: gamma_distribution)</target>
        </trans-unit>
        <trans-unit id="18087e7df35f4bba6539d0c436f43f8f41718b50" translate="yes" xml:space="preserve">
          <source>operators (std::geometric_distribution)</source>
          <target state="translated">연산자 (std :: geometric_distribution)</target>
        </trans-unit>
        <trans-unit id="0ad6bdafe85ec13b9d0c61ff7e68fe8c30a0506e" translate="yes" xml:space="preserve">
          <source>operators (std::independent_bits_engine)</source>
          <target state="translated">연산자 (std :: independent_bits_engine)</target>
        </trans-unit>
        <trans-unit id="c120b30c71e40ac90519ad911cc91e0552749403" translate="yes" xml:space="preserve">
          <source>operators (std::istream_iterator)</source>
          <target state="translated">연산자 (std :: istream_iterator)</target>
        </trans-unit>
        <trans-unit id="7fc9e7975a409fe0d40333197e8669987b9fea1b" translate="yes" xml:space="preserve">
          <source>operators (std::istreambuf_iterator)</source>
          <target state="translated">연산자 (std :: istreambuf_iterator)</target>
        </trans-unit>
        <trans-unit id="14c47623127aef4d80e9f809109e6151a97c4c15" translate="yes" xml:space="preserve">
          <source>operators (std::linear_congruential_engine)</source>
          <target state="translated">연산자 (std :: linear_congruential_engine)</target>
        </trans-unit>
        <trans-unit id="ce7a928bd07766304d1f11fe9934885b173f73f6" translate="yes" xml:space="preserve">
          <source>operators (std::list)</source>
          <target state="translated">연산자 (std :: list)</target>
        </trans-unit>
        <trans-unit id="f93743974be3414edb55c933d1f12780f24abb5b" translate="yes" xml:space="preserve">
          <source>operators (std::lognormal_distribution)</source>
          <target state="translated">연산자 (std :: lognormal_distribution)</target>
        </trans-unit>
        <trans-unit id="f66c5ef868184d01f9759510883948f0d54f9a1c" translate="yes" xml:space="preserve">
          <source>operators (std::map)</source>
          <target state="translated">연산자 (std :: map)</target>
        </trans-unit>
        <trans-unit id="85d9a0080e623dbef41aad975ed2d4bab6bcf192" translate="yes" xml:space="preserve">
          <source>operators (std::match_results)</source>
          <target state="translated">연산자 (std :: match_results)</target>
        </trans-unit>
        <trans-unit id="f36afdcf0aefb5f10f9c4e0b9e4d421e6ef15184" translate="yes" xml:space="preserve">
          <source>operators (std::mersenne_twister_engine)</source>
          <target state="translated">연산자 (std :: mersenne_twister_engine)</target>
        </trans-unit>
        <trans-unit id="9ef8fc6c7aee216492b0a03bc596aed6900744fd" translate="yes" xml:space="preserve">
          <source>operators (std::move_iterator)</source>
          <target state="translated">연산자 (std :: move_iterator)</target>
        </trans-unit>
        <trans-unit id="066f84f843677a2f640075ab45bffa1850205a1d" translate="yes" xml:space="preserve">
          <source>operators (std::multimap)</source>
          <target state="translated">연산자 (std :: multimap)</target>
        </trans-unit>
        <trans-unit id="0bb61182ea75125fb3c3dffcc341c76c5105019e" translate="yes" xml:space="preserve">
          <source>operators (std::multiset)</source>
          <target state="translated">연산자 (std :: multiset)</target>
        </trans-unit>
        <trans-unit id="35bcd01d012c5152f38363c495448584d4f38102" translate="yes" xml:space="preserve">
          <source>operators (std::negative_binomial_distribution)</source>
          <target state="translated">연산자 (std :: negative_binomial_distribution)</target>
        </trans-unit>
        <trans-unit id="57881f46a28a8d3307c8c54e2b05652c9b735eaa" translate="yes" xml:space="preserve">
          <source>operators (std::normal_distribution)</source>
          <target state="translated">연산자 (std :: normal_distribution)</target>
        </trans-unit>
        <trans-unit id="ad75a08a7b146a8d77bec7ba66dfaa45712da199" translate="yes" xml:space="preserve">
          <source>operators (std::optional)</source>
          <target state="translated">연산자 (std :: optional)</target>
        </trans-unit>
        <trans-unit id="2059b0a47d2e9f214eb797b46dd279f307a2e673" translate="yes" xml:space="preserve">
          <source>operators (std::pair)</source>
          <target state="translated">연산자 (std :: pair)</target>
        </trans-unit>
        <trans-unit id="f9df13506936e990ffa3b794f28c437c22ba81f1" translate="yes" xml:space="preserve">
          <source>operators (std::piecewise_constant_distribution)</source>
          <target state="translated">연산자 (std :: piecewise_constant_distribution)</target>
        </trans-unit>
        <trans-unit id="06a4d5dc4843d4905055727008d87c716ca5fa30" translate="yes" xml:space="preserve">
          <source>operators (std::piecewise_linear_distribution)</source>
          <target state="translated">연산자 (std :: piecewise_linear_distribution)</target>
        </trans-unit>
        <trans-unit id="f3fe8dfdd6e8cb28af06acb47ddea90fa675f6a7" translate="yes" xml:space="preserve">
          <source>operators (std::poisson_distribution)</source>
          <target state="translated">연산자 (std :: poisson_distribution)</target>
        </trans-unit>
        <trans-unit id="1cde7e9d36f915af126635205e7c1cf89611af9f" translate="yes" xml:space="preserve">
          <source>operators (std::queue)</source>
          <target state="translated">연산자 (std :: queue)</target>
        </trans-unit>
        <trans-unit id="f855e492f945deec45276dca8dc1d8358c8a9d34" translate="yes" xml:space="preserve">
          <source>operators (std::reverse_iterator)</source>
          <target state="translated">연산자 (std :: reverse_iterator)</target>
        </trans-unit>
        <trans-unit id="c56cc885420c629c19f242bb7b4e2fa7f5780045" translate="yes" xml:space="preserve">
          <source>operators (std::scoped_allocator_adaptor)</source>
          <target state="translated">연산자 (std :: scoped_allocator_adaptor)</target>
        </trans-unit>
        <trans-unit id="24dddcb5d55f5718542f257c37ade262d6e529b8" translate="yes" xml:space="preserve">
          <source>operators (std::set)</source>
          <target state="translated">연산자 (std :: set)</target>
        </trans-unit>
        <trans-unit id="4e1c57c1166ff4c91cfa36c2dfcca3cb43a74784" translate="yes" xml:space="preserve">
          <source>operators (std::shuffle_order_engine)</source>
          <target state="translated">연산자 (std :: shuffle_order_engine)</target>
        </trans-unit>
        <trans-unit id="11501f17e5a597a6b7b58735cc86c63150632add" translate="yes" xml:space="preserve">
          <source>operators (std::stack)</source>
          <target state="translated">연산자 (std :: stack)</target>
        </trans-unit>
        <trans-unit id="62fdf3f5a7397179bb16a06c3df799d2a7a7e238" translate="yes" xml:space="preserve">
          <source>operators (std::student_t_distribution)</source>
          <target state="translated">연산자 (std :: student_t_distribution)</target>
        </trans-unit>
        <trans-unit id="40ee7aa824ccefa0cd921dd1dd1356d3045c63cd" translate="yes" xml:space="preserve">
          <source>operators (std::sub_match)</source>
          <target state="translated">연산자 (std :: sub_match)</target>
        </trans-unit>
        <trans-unit id="f3108afcbcb414f69f4f0d62e557a9fab9e34df7" translate="yes" xml:space="preserve">
          <source>operators (std::subtract_with_carry_engine)</source>
          <target state="translated">연산자 (std :: subtract_with_carry_engine)</target>
        </trans-unit>
        <trans-unit id="b76da79fae0d942d640876f956e4a2bac6727c9b" translate="yes" xml:space="preserve">
          <source>operators (std::thread::id)</source>
          <target state="translated">연산자 (std :: thread :: id)</target>
        </trans-unit>
        <trans-unit id="a0663ad4b520f7c6c1ced08e9cf5774b622e7547" translate="yes" xml:space="preserve">
          <source>operators (std::time_point)</source>
          <target state="translated">연산자 (std :: time_point)</target>
        </trans-unit>
        <trans-unit id="1b79c1bfcb646dc94649c9eedb1b6c23c4c571b3" translate="yes" xml:space="preserve">
          <source>operators (std::tuple)</source>
          <target state="translated">연산자 (std :: tuple)</target>
        </trans-unit>
        <trans-unit id="410a9cb87b5aee0039d4fa239880004d7353795d" translate="yes" xml:space="preserve">
          <source>operators (std::uniform_int_distribution)</source>
          <target state="translated">연산자 (std :: uniform_int_distribution)</target>
        </trans-unit>
        <trans-unit id="224a73ad2cae37f52673a32480bb8e21f5ec8fa7" translate="yes" xml:space="preserve">
          <source>operators (std::uniform_real_distribution)</source>
          <target state="translated">연산자 (std :: uniform_real_distribution)</target>
        </trans-unit>
        <trans-unit id="703875e75f7dab8d605564c4315030907ff3f52d" translate="yes" xml:space="preserve">
          <source>operators (std::unique_ptr)</source>
          <target state="translated">연산자 (std :: unique_ptr)</target>
        </trans-unit>
        <trans-unit id="b19c0a74734b02afb925564a11348abd49b6bde4" translate="yes" xml:space="preserve">
          <source>operators (std::unordered_map)</source>
          <target state="translated">연산자 (std :: unorder_map)</target>
        </trans-unit>
        <trans-unit id="39d6c6292d2cefe7362c2fe5efb848b1cafd82a7" translate="yes" xml:space="preserve">
          <source>operators (std::unordered_multimap)</source>
          <target state="translated">연산자 (std :: unorder_multimap)</target>
        </trans-unit>
        <trans-unit id="b7cf1c8dc49cc3c7fb51aaf701eba2d6a0538ec1" translate="yes" xml:space="preserve">
          <source>operators (std::unordered_multiset)</source>
          <target state="translated">연산자 (std :: unorder_multiset)</target>
        </trans-unit>
        <trans-unit id="1d4cbea29f1f3899536580d0e1c2e956c07ede2f" translate="yes" xml:space="preserve">
          <source>operators (std::unordered_set)</source>
          <target state="translated">연산자 (std :: unorder_set)</target>
        </trans-unit>
        <trans-unit id="5058e77650eaf81575bab5d327520a464dc94922" translate="yes" xml:space="preserve">
          <source>operators (std::valarray)</source>
          <target state="translated">연산자 (std :: valarray)</target>
        </trans-unit>
        <trans-unit id="daf37faac98d8559c28bfdf7d158a396df5d52c6" translate="yes" xml:space="preserve">
          <source>operators (std::variant)</source>
          <target state="translated">연산자 (std :: variant)</target>
        </trans-unit>
        <trans-unit id="4511d7d8f6152b904dd0de907eaa45a40c4fc61c" translate="yes" xml:space="preserve">
          <source>operators (std::vector)</source>
          <target state="translated">연산자 (std :: vector)</target>
        </trans-unit>
        <trans-unit id="8266d76ef8cb59ca1c1b1873582e64b072959d5d" translate="yes" xml:space="preserve">
          <source>operators (std::weibull_distribution)</source>
          <target state="translated">연산자 (std :: weibull_distribution)</target>
        </trans-unit>
        <trans-unit id="92edd653aa2d55b2e82aea6ea29820f5d36d0a47" translate="yes" xml:space="preserve">
          <source>operators are usually more efficient in contexts where the returned value is not used.</source>
          <target state="translated">연산자는 일반적으로 반환 된 값이 사용되지 않는 상황에서 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="cce6e700a90a9cf2fd59816733028274fe08313a" translate="yes" xml:space="preserve">
          <source>operators increments or decrements the value of the object and returns a reference to the result.</source>
          <target state="translated">연산자는 객체의 값을 늘리거나 줄이고 결과에 대한 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e90f989e52674a30ad8cf30042d6e99cb73f705e" translate="yes" xml:space="preserve">
          <source>operators provide access to a data member or member function of the class pointed-to by the pointer operand.</source>
          <target state="translated">연산자는 포인터 피연산자가 가리키는 클래스의 데이터 멤버 또는 멤버 함수에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="01097f3777271a4ae55c4e4750e94b1fcce079bc" translate="yes" xml:space="preserve">
          <source>operators provide access to a data member or member function of the object operand.</source>
          <target state="translated">연산자는 객체 피연산자의 데이터 멤버 또는 멤버 함수에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f28ad067e4be210623d467599da70d4737bd316e" translate="yes" xml:space="preserve">
          <source>operators replace the contents of the object &lt;code&gt;a&lt;/code&gt; with the result of a binary operation between the previous value of &lt;code&gt;a&lt;/code&gt; and the value of &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">연산자는 객체의 컨텐츠 교체 &lt;code&gt;a&lt;/code&gt; 이전 값과 이진 연산의 결과 및 값 &lt;code&gt;b&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ed1d09fcdec51dd6a084a1bff3c15ac894f774f" translate="yes" xml:space="preserve">
          <source>operators:</source>
          <target state="translated">operators:</target>
        </trans-unit>
        <trans-unit id="1e2ef392ffd66d46f4e24ff71e1f2deed38da08b" translate="yes" xml:space="preserve">
          <source>operators: &lt;code&gt;+&lt;/code&gt;&lt;code&gt;-&lt;/code&gt;&lt;code&gt;*&lt;/code&gt;&lt;code&gt;/&lt;/code&gt;&lt;code&gt;%&lt;/code&gt;&lt;code&gt;^&lt;/code&gt;&lt;code&gt;&amp;amp;&lt;/code&gt;&lt;code&gt;|&lt;/code&gt;&lt;code&gt;=&lt;/code&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;code&gt;+=&lt;/code&gt;&lt;code&gt;-=&lt;/code&gt;&lt;code&gt;*=&lt;/code&gt;&lt;code&gt;/=&lt;/code&gt;&lt;code&gt;%=&lt;/code&gt;&lt;code&gt;^=&lt;/code&gt;&lt;code&gt;&amp;amp;=&lt;/code&gt;&lt;code&gt;|=&lt;/code&gt;&lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;==&lt;/code&gt;&lt;code&gt;!=&lt;/code&gt;&lt;code&gt;&amp;lt;=&lt;/code&gt;&lt;code&gt;&amp;gt;=&lt;/code&gt;&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;code&gt;||&lt;/code&gt;&lt;code&gt;,&lt;/code&gt;&lt;code&gt;.*&lt;/code&gt;&lt;code&gt;-&amp;gt;*&lt;/code&gt;. In a binary fold, both ops must be the same.</source>
          <target state="translated">연산자 : &lt;code&gt;+&lt;/code&gt; &lt;code&gt;-&lt;/code&gt; &lt;code&gt;*&lt;/code&gt; &lt;code&gt;/&lt;/code&gt; &lt;code&gt;%&lt;/code&gt; &lt;code&gt;^&lt;/code&gt; &lt;code&gt;&amp;amp;&lt;/code&gt; &lt;code&gt;|&lt;/code&gt; &lt;code&gt;=&lt;/code&gt; &lt;code&gt;&amp;lt;&lt;/code&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt; &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt; &lt;code&gt;+=&lt;/code&gt; &lt;code&gt;-=&lt;/code&gt; &lt;code&gt;*=&lt;/code&gt; &lt;code&gt;/=&lt;/code&gt; &lt;code&gt;%=&lt;/code&gt; &lt;code&gt;^=&lt;/code&gt; &lt;code&gt;&amp;amp;=&lt;/code&gt; &lt;code&gt;|=&lt;/code&gt; &lt;code&gt;&amp;lt;&amp;lt;=&lt;/code&gt; &lt;code&gt;&amp;gt;&amp;gt;=&lt;/code&gt; &lt;code&gt;==&lt;/code&gt; &lt;code&gt;!=&lt;/code&gt; &lt;code&gt;&amp;lt;=&lt;/code&gt; &lt;code&gt;&amp;gt;=&lt;/code&gt; &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; &lt;code&gt;||&lt;/code&gt; &lt;code&gt;,&lt;/code&gt; &lt;code&gt;.*&lt;/code&gt; &lt;code&gt;-&amp;gt;*&lt;/code&gt; . 이진 접기에서 두 op는 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="568acf434674877caa2f89b13459644b7ce1a561" translate="yes" xml:space="preserve">
          <source>operator~</source>
          <target state="translated">operator~</target>
        </trans-unit>
        <trans-unit id="7e3095ce41008a9bb9d29b20e989ec28c602c29c" translate="yes" xml:space="preserve">
          <source>option, in POSIX. This is effectively the same as the &lt;code&gt;extended&lt;/code&gt; option with the addition of newline '\n' as an alternation separator in addtion to '|'.</source>
          <target state="translated">POSIX에서 옵션. 이는 '|'에 추가하여 개행 문자 '\ n'을 대체 구분 기호로 추가 한 &lt;code&gt;extended&lt;/code&gt; 옵션과 사실상 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="48a7b8889e1542650266c14a18c8708488fa1951" translate="yes" xml:space="preserve">
          <source>optional</source>
          <target state="translated">optional</target>
        </trans-unit>
        <trans-unit id="530fc48dcc7548a46f23e89d4ad8fbb85d75be50" translate="yes" xml:space="preserve">
          <source>optional (since C++17)string literal that will appear as compiler error if bool_constexpr is false</source>
          <target state="translated">bool_constexpr이 false 인 경우 컴파일러 오류로 표시되는 선택적 (C ++ 17부터) 문자열 리터럴</target>
        </trans-unit>
        <trans-unit id="0b75a815decd02e77e65598f92c274d58f851c22" translate="yes" xml:space="preserve">
          <source>optional initializer (except where required, such as when initializing references or const objects). See &lt;a href=&quot;initialization&quot;&gt;Initialization&lt;/a&gt; for details.</source>
          <target state="translated">선택적 초기화 기 (참조 또는 const 객체를 초기화 할 때와 같이 필요한 경우 제외). 자세한 내용은 &lt;a href=&quot;initialization&quot;&gt;초기화&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="44fb5cc6c2544fd1dc2c85cd0972e18e26b7c23a" translate="yes" xml:space="preserve">
          <source>optional list of &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;</source>
          <target state="translated">선택적 &lt;a href=&quot;attributes&quot;&gt;속성&lt;/a&gt; 목록</target>
        </trans-unit>
        <trans-unit id="bffd92d1ac753f7d99c6b62c8ac505189a8d7c53" translate="yes" xml:space="preserve">
          <source>optional list of &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;, applies to the formal parameter</source>
          <target state="translated">선택적 &lt;a href=&quot;attributes&quot;&gt;속성&lt;/a&gt; 목록은 공식 매개 변수에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="801e77a666634f90bc896ccd2253e8a584c80756" translate="yes" xml:space="preserve">
          <source>optional list of &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;. These attributes are applied to the type of the function, not the function itself. The attributes for the function appear after the identifier within the declarator and are combined with the attributes that appear in the beginning of the declaration, if any.</source>
          <target state="translated">선택적 &lt;a href=&quot;attributes&quot;&gt;속성&lt;/a&gt; 목록 . 이러한 속성은 함수 자체가 아니라 함수 유형에 적용됩니다. 함수의 속성은 선언자 내 식별자 뒤에 표시되며 선언의 시작 부분에있는 속성과 결합됩니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="94fa026ebfd63c73689e99e979d8d3b03a0a1ba1" translate="yes" xml:space="preserve">
          <source>optional list of &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;. These attributes are combined with the attributes after the identifier in the declarator (see top of this page), if any.</source>
          <target state="translated">선택적 &lt;a href=&quot;attributes&quot;&gt;속성&lt;/a&gt; 목록 . 이러한 속성은 선언자에서 식별자 뒤에있는 속성과 결합됩니다 (이 페이지 상단 참조).</target>
        </trans-unit>
        <trans-unit id="28f5f2f857960e1effa9d162681b9382e68705e5" translate="yes" xml:space="preserve">
          <source>optional list of one or more parent classes and the model of inheritance used for each (see &lt;a href=&quot;derived_class&quot;&gt;derived class&lt;/a&gt;)</source>
          <target state="translated">하나 이상의 부모 클래스의 선택적 목록 및 각 &lt;a href=&quot;derived_class&quot;&gt;클래스에&lt;/a&gt; 사용되는 상속 모델 ( 파생 클래스 참조 )</target>
        </trans-unit>
        <trans-unit id="69418912ddca71fa86ee9ec7602d8c3cbbf772c0" translate="yes" xml:space="preserve">
          <source>optional sequence of any number of &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;</source>
          <target state="translated">여러 &lt;a href=&quot;attributes&quot;&gt;속성&lt;/a&gt; 의 선택적 순서</target>
        </trans-unit>
        <trans-unit id="46c4d43a50062722eb76de33a4018a6a75b270bd" translate="yes" xml:space="preserve">
          <source>optional sequence of any number of &lt;a href=&quot;attributes&quot;&gt;attributes&lt;/a&gt;, may include &lt;a href=&quot;alignas&quot;&gt;alignas specifier&lt;/a&gt;</source>
          <target state="translated">임의의 수의 &lt;a href=&quot;attributes&quot;&gt;속성&lt;/a&gt; 의 선택적 순서 는 &lt;a href=&quot;alignas&quot;&gt;alignas 지정자를&lt;/a&gt; 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="38f305be01355dd204f759cf96422de943c55993" translate="yes" xml:space="preserve">
          <source>optionally provides the number of characters available for input from the file</source>
          <target state="translated">선택적으로 파일에서 입력 할 수있는 문자 수를 제공합니다</target>
        </trans-unit>
        <trans-unit id="c97846b2a334cfd3b461939e9de689636838d638" translate="yes" xml:space="preserve">
          <source>optionally, a &lt;a href=&quot;name&quot;&gt;name&lt;/a&gt;.</source>
          <target state="translated">선택적으로 &lt;a href=&quot;name&quot;&gt;name&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="513f8de9259fe7658fe14d1352c54ccf070e911f" translate="yes" xml:space="preserve">
          <source>options</source>
          <target state="translated">options</target>
        </trans-unit>
        <trans-unit id="fa6700f4360833f97c1b70d58064a5b92fa23081" translate="yes" xml:space="preserve">
          <source>options controlling &lt;a href=&quot;copy_file&quot;&gt;&lt;code&gt;copy_file()&lt;/code&gt;&lt;/a&gt; when the file already exists</source>
          <target state="translated">파일이 이미 존재하는 경우 &lt;a href=&quot;copy_file&quot;&gt; &lt;code&gt;copy_file()&lt;/code&gt; &lt;/a&gt; 을 제어하는 ​​옵션</target>
        </trans-unit>
        <trans-unit id="2bac3d5a4a358521245ea6ddeaf0369976119c50" translate="yes" xml:space="preserve">
          <source>options controlling the action taken by this function</source>
          <target state="translated">이 기능으로 수행되는 작업을 제어하는 ​​옵션</target>
        </trans-unit>
        <trans-unit id="28b53cb5bf5232b92913c03163523a57b278b82e" translate="yes" xml:space="preserve">
          <source>options controlling the effects of &lt;a href=&quot;copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; on subdirectories</source>
          <target state="translated">하위 디렉토리에 대한 &lt;a href=&quot;copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt; 의 영향을 제어하는 ​​옵션</target>
        </trans-unit>
        <trans-unit id="78f098d5bd2be6eb45497edb01eee85c5bbf4edd" translate="yes" xml:space="preserve">
          <source>options controlling the effects of &lt;a href=&quot;copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; on symbolic links</source>
          <target state="translated">심볼릭 링크에서 &lt;a href=&quot;copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt; 의 영향을 제어하는 ​​옵션</target>
        </trans-unit>
        <trans-unit id="d7743fa574d2f8f947ad95f4bdfdafdcc06c0a85" translate="yes" xml:space="preserve">
          <source>options controlling the kind of copying &lt;a href=&quot;copy&quot;&gt;&lt;code&gt;copy()&lt;/code&gt;&lt;/a&gt; does</source>
          <target state="translated">&lt;a href=&quot;copy&quot;&gt; &lt;code&gt;copy()&lt;/code&gt; &lt;/a&gt; 의 복사 종류를 제어하는 ​​옵션 은</target>
        </trans-unit>
        <trans-unit id="cac9fc22fef8e74e059c33fde9fa11bc60656c73" translate="yes" xml:space="preserve">
          <source>options for iterating directory contents</source>
          <target state="translated">디렉토리 내용을 반복하기위한 옵션</target>
        </trans-unit>
        <trans-unit id="fdf56be715be9ff3077a27eb0f6bab4d9ec604c5" translate="yes" xml:space="preserve">
          <source>options specific to matching</source>
          <target state="translated">일치하는 옵션</target>
        </trans-unit>
        <trans-unit id="93d10cdf6209ce42c86c61d4bc6f913e778c2cf6" translate="yes" xml:space="preserve">
          <source>opts</source>
          <target state="translated">opts</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="f72780eb100d9526618c8dfb2476d069854f3d3e" translate="yes" xml:space="preserve">
          <source>or 1-erf(arg), is returned.</source>
          <target state="translated">또는 1-erf (arg)가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="236e44d9cc3d783cd5c92433c49b95699f6315fc" translate="yes" xml:space="preserve">
          <source>or RAII, is a C++ programming technique&lt;sup id=&quot;cite_ref-1&quot;&gt;&lt;a href=&quot;raii#cite_note-1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;&lt;sup id=&quot;cite_ref-2&quot;&gt;&lt;a href=&quot;raii#cite_note-2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt; which binds the life cycle of a resource that must be acquired before use (allocated heap memory, thread of execution, open socket, open file, locked mutex, disk space, database connection&amp;mdash;anything that exists in limited supply) to the &lt;a href=&quot;lifetime&quot;&gt;lifetime&lt;/a&gt; of an object.</source>
          <target state="translated">또는 RAII는 C ++ 프로그래밍 기술이다. &lt;sup id=&quot;cite_ref-1&quot;&gt;&lt;a href=&quot;raii#cite_note-1&quot;&gt;[1] &lt;/a&gt;&lt;/sup&gt;&lt;sup id=&quot;cite_ref-2&quot;&gt;&lt;a href=&quot;raii#cite_note-2&quot;&gt;[2]&lt;/a&gt;&lt;/sup&gt; 사용하기 전에 확보해야하는 자원의 수명주기 (할당 된 힙 메모리, 실행 스레드, 열린 소켓, 열린 파일, 잠긴 뮤텍스, 디스크 공간, 데이터베이스) 연결 &amp;mdash; 제한된 공급에 존재하는 모든 것)을 개체 의 &lt;a href=&quot;lifetime&quot;&gt;수명&lt;/a&gt; 에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="3927572c45dc7a8d20da56759afcb9b30937e4d2" translate="yes" xml:space="preserve">
          <source>or a</source>
          <target state="translated">또는</target>
        </trans-unit>
        <trans-unit id="d85ae60d77be87b4d38b07013b1ff89f1b8ab490" translate="yes" xml:space="preserve">
          <source>or a buffer using variable argument list</source>
          <target state="translated">또는 가변 인수 목록을 사용하는 버퍼</target>
        </trans-unit>
        <trans-unit id="b99a100b364b16b39aa0192339ab8aa5cb98cd3f" translate="yes" xml:space="preserve">
          <source>or a non-type template parameter of class type (in which case it is known as a</source>
          <target state="translated">또는 클래스 유형의 비 유형 템플릿 매개 변수 (이 경우에는</target>
        </trans-unit>
        <trans-unit id="88aea5d3e79706e5210a2cb9421bbe6c98e4fd25" translate="yes" xml:space="preserve">
          <source>or a pointer to it was constructed;</source>
          <target state="translated">또는 그것에 대한 포인터가 구성되었습니다.</target>
        </trans-unit>
        <trans-unit id="8620463ab1c748f75506ed93d2da7bfe1a2eb01f" translate="yes" xml:space="preserve">
          <source>or a sequence of enclosing namespace specifiers separated by ::, ending with identifier, in which case this is a</source>
          <target state="translated">또는 ::로 구분되고 식별자로 끝나는 묶는 네임 스페이스 지정자 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="8ee65c7a92fcbee89e79dde2094e10cbd980e729" translate="yes" xml:space="preserve">
          <source>or be a function parameter pack.</source>
          <target state="translated">또는 함수 매개 변수 팩일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0abe78d3f9c26ab712bd97d420be8f4c52c0bfc" translate="yes" xml:space="preserve">
          <source>or both:</source>
          <target state="translated">아니면 둘다:</target>
        </trans-unit>
        <trans-unit id="00e04763b09a6fc0054b4cd6ae51cbf76359b80c" translate="yes" xml:space="preserve">
          <source>or calls &lt;code&gt;promise.return_value(expr)&lt;/code&gt; for &lt;code&gt;co_return expr&lt;/code&gt; where expr has non-void type</source>
          <target state="translated">또는 expr이 무효가 아닌 유형 인 &lt;code&gt;co_return expr&lt;/code&gt; 에 대해 promise.return_value &lt;code&gt;promise.return_value(expr)&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="f1ce70ceb46ab4335c5a000ffcfe4fa1a470dfa3" translate="yes" xml:space="preserve">
          <source>or due to exception.</source>
          <target state="translated">또는 예외로 인해.</target>
        </trans-unit>
        <trans-unit id="992a562f18809bf7f7bad47df7eaf41c3b8bbdbe" translate="yes" xml:space="preserve">
          <source>or if the pointer goes out of scope:</source>
          <target state="translated">또는 포인터가 범위를 벗어난 경우 :</target>
        </trans-unit>
        <trans-unit id="8e9c91aea2a3db9ad56a08b4ce255621086ec841" translate="yes" xml:space="preserve">
          <source>or it was bound to a reference.</source>
          <target state="translated">또는 참조에 바인딩되었습니다.</target>
        </trans-unit>
        <trans-unit id="fede30d067e948f0b1df282d890c3f9b28c88f04" translate="yes" xml:space="preserve">
          <source>or more</source>
          <target state="translated">이상</target>
        </trans-unit>
        <trans-unit id="cdf7e64224c690907cff1fdd8950ccd99411a553" translate="yes" xml:space="preserve">
          <source>or pointer to a non-array object created by a &lt;a href=&quot;new&quot;&gt;new-expression&lt;/a&gt;, or a pointer to a base subobject of a non-array object created by a &lt;a href=&quot;new&quot;&gt;new-expression&lt;/a&gt;. If expression is anything else, including if it is a pointer obtained by the array form of &lt;a href=&quot;new&quot;&gt;new-expression&lt;/a&gt;, the behavior is &lt;a href=&quot;ub&quot;&gt;undefined&lt;/a&gt;.</source>
          <target state="translated">또는 의해 생성 된 비 배열 객체 포인터 &lt;a href=&quot;new&quot;&gt;새로운 표현&lt;/a&gt; 하거나하여 만든 비 - 배열 오브젝트의베이스 하위 객체에 대한 포인터 &lt;a href=&quot;new&quot;&gt;의 새로운 표현&lt;/a&gt; . &lt;a href=&quot;new&quot;&gt;new-expression&lt;/a&gt; 의 배열 형식으로 얻은 포인터 인 경우를 포함하여 expression이 다른 항목이면 동작이 &lt;a href=&quot;ub&quot;&gt;정의되지 않습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f0029cfb506c43312fd6f181ff73b830c09081f9" translate="yes" xml:space="preserve">
          <source>or the function template has to be declared as a template before the class body, in which case the friend declaration within &lt;code&gt;Foo&amp;lt;T&amp;gt;&lt;/code&gt; can refer to the full specialization of &lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt; for its &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="translated">또는 함수 템플릿을 클래스 본문 전에 템플릿으로 선언해야합니다.이 경우 &lt;code&gt;Foo&amp;lt;T&amp;gt;&lt;/code&gt; 내의 친구 선언 은 &lt;code&gt;T&lt;/code&gt; 에 대한 &lt;code&gt;operator&amp;lt;&amp;lt;&lt;/code&gt; 의 전체 전문화를 참조 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6766e4802afe07044e5fe568981fea186fe6f89b" translate="yes" xml:space="preserve">
          <source>or the largest contiguous sequence of &lt;a href=&quot;bit_field&quot;&gt;bit fields&lt;/a&gt; of non-zero length</source>
          <target state="translated">또는 길이가 0이 아닌 가장 큰 연속 &lt;a href=&quot;bit_field&quot;&gt;비트 필드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="40aa2bf9bccf2e7f1c75bd5cdb63f83e6b1ddea1" translate="yes" xml:space="preserve">
          <source>or the name of a namespace, in which case this is</source>
          <target state="translated">또는 네임 스페이스의 이름입니다.이 경우</target>
        </trans-unit>
        <trans-unit id="d8613ac1de7491f01c66f5e6ff0f69380f117868" translate="yes" xml:space="preserve">
          <source>or the predefined variable &lt;code&gt;__func__&lt;/code&gt;.</source>
          <target state="translated">또는 가변 미리 &lt;code&gt;__func__&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="5a1883319fdc4fe5729d90e504eb2f3a2565639c" translate="yes" xml:space="preserve">
          <source>or the variable or the &lt;code&gt;this&lt;/code&gt; pointer is named in a potentially-evaluated expression within an expression that depends on a generic lambda parameter(until C++17) (including when the implicit &lt;code&gt;this-&amp;gt;&lt;/code&gt; is added before a use of non-static class member). For this purpose, the operand of &lt;code&gt;&lt;a href=&quot;typeid&quot;&gt;typeid&lt;/a&gt;&lt;/code&gt; is always considered potentially-evaluated. Entities might be implicitly captured even if they are only named within a &lt;a href=&quot;if#Constexpr_If&quot;&gt;discarded statement&lt;/a&gt;.(since C++17)</source>
          <target state="translated">또는 변수 또는 &lt;code&gt;this&lt;/code&gt; 포인터는 일반 람다 매개 변수 (C ++ 17까지)에 의존하는 표현식 내에서 잠재적으로 평가되는 표현식에서 명명됩니다 ( 비 정적 클래스를 사용하기 전에 암시 적 &lt;code&gt;this-&amp;gt;&lt;/code&gt; 가 추가 된 경우 포함) 회원). 이를 위해 &lt;code&gt;&lt;a href=&quot;typeid&quot;&gt;typeid&lt;/a&gt;&lt;/code&gt; 의 피연산자 는 항상 잠재적으로 평가 된 것으로 간주됩니다. &lt;a href=&quot;if#Constexpr_If&quot;&gt;폐기 된 명령문&lt;/a&gt; 내에서만 이름이 지정된 경우에도 엔티티가 내재적으로 캡처 될 수 있습니다 (C ++ 17부터).</target>
        </trans-unit>
        <trans-unit id="de9e5c41121327fae9c321f101ab83cc845666c7" translate="yes" xml:space="preserve">
          <source>or until the first whitespace character, whichever appears first. Always stores a null character in addition to the characters matched (so the argument array must have room for at least</source>
          <target state="translated">또는 첫 번째 공백 문자가 나타날 때까지. 일치하는 문자 외에 항상 널 문자를 저장합니다 (따라서 인수 배열에는 최소한 공간이 있어야합니다)</target>
        </trans-unit>
        <trans-unit id="78c12eced0f3b98b1564f6e9d33f6d58cf85f66d" translate="yes" xml:space="preserve">
          <source>or, there are &lt;code&gt;memory_order_seq_cst&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;atomic_thread_fence&quot;&gt;std::atomic_thread_fence&lt;/a&gt;&lt;/code&gt;s X and Y such that A is</source>
          <target state="translated">또는 &lt;code&gt;memory_order_seq_cst&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;atomic_thread_fence&quot;&gt;std::atomic_thread_fence&lt;/a&gt;&lt;/code&gt; s X 및 Y가 있으므로 A는</target>
        </trans-unit>
        <trans-unit id="76f1f69030c0379d40e31cee1ced992646f76541" translate="yes" xml:space="preserve">
          <source>or, there is a &lt;code&gt;memory_order_seq_cst&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;atomic_thread_fence&quot;&gt;std::atomic_thread_fence&lt;/a&gt;&lt;/code&gt; Y such that Y is</source>
          <target state="translated">또는 &lt;code&gt;memory_order_seq_cst&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;atomic_thread_fence&quot;&gt;std::atomic_thread_fence&lt;/a&gt;&lt;/code&gt; Y가 있으므로 Y는</target>
        </trans-unit>
        <trans-unit id="31005d83eb25d3ded961cf520d40119f0f295af5" translate="yes" xml:space="preserve">
          <source>or.</source>
          <target state="translated">or.</target>
        </trans-unit>
        <trans-unit id="0ded42e1f5dd49bb1d3f9da38a084b03d892716e" translate="yes" xml:space="preserve">
          <source>or_eq</source>
          <target state="translated">or_eq</target>
        </trans-unit>
        <trans-unit id="cce55e4309a753985bdd21919395fdc17daa11e4" translate="yes" xml:space="preserve">
          <source>order</source>
          <target state="translated">order</target>
        </trans-unit>
        <trans-unit id="37ea82972e2771737d4c9c67601b922594cb9c0c" translate="yes" xml:space="preserve">
          <source>order of template parameters inconsistent for compare-with-T cases</source>
          <target state="translated">T와 비교하는 경우에 일치하지 않는 템플리트 매개 변수의 순서</target>
        </trans-unit>
        <trans-unit id="c1ddf9363503b08bf50b346ddb7cf4bbf84495a4" translate="yes" xml:space="preserve">
          <source>ordinary character types (&lt;code&gt;char&lt;/code&gt;, &lt;code&gt;signed char&lt;/code&gt;, &lt;code&gt;unsigned char&lt;/code&gt;)</source>
          <target state="translated">일반 문자 유형 ( &lt;code&gt;char&lt;/code&gt; , &lt;code&gt;signed char&lt;/code&gt; , &lt;code&gt;unsigned char&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="b284f94827db1fa2970d9e2014f080413b547a7e" translate="yes" xml:space="preserve">
          <source>origin</source>
          <target state="translated">origin</target>
        </trans-unit>
        <trans-unit id="83230913e2ff2c5cb01b23aa6ec0a263e5219d54" translate="yes" xml:space="preserve">
          <source>original-namespace-definition</source>
          <target state="translated">original-namespace-definition</target>
        </trans-unit>
        <trans-unit id="999a3419d9959d3c39b11dcc67d79c7888b4b765" translate="yes" xml:space="preserve">
          <source>os</source>
          <target state="translated">os</target>
        </trans-unit>
        <trans-unit id="10fbb252c7bd85f7f45cb46a9e1bfe47e5150ef8" translate="yes" xml:space="preserve">
          <source>ost</source>
          <target state="translated">ost</target>
        </trans-unit>
        <trans-unit id="2c7663a7afc63f46360f1b958e4d15c78f0d4d44" translate="yes" xml:space="preserve">
          <source>ostream</source>
          <target state="translated">ostream</target>
        </trans-unit>
        <trans-unit id="d09cdc501c35ee006e871792924c4f9f539c13e6" translate="yes" xml:space="preserve">
          <source>ostream_iterator</source>
          <target state="translated">ostream_iterator</target>
        </trans-unit>
        <trans-unit id="4beb8d8fd6d4ce857c5fab948ee6e4cbe0b30eeb" translate="yes" xml:space="preserve">
          <source>ostreambuf_iterator</source>
          <target state="translated">ostreambuf_iterator</target>
        </trans-unit>
        <trans-unit id="e037505c6584fccf3edfba0b958bfc43051f3ddf" translate="yes" xml:space="preserve">
          <source>ostrstream</source>
          <target state="translated">ostrstream</target>
        </trans-unit>
        <trans-unit id="d0941e68da8f38151ff86a61fc59f7c5cf9fcaa2" translate="yes" xml:space="preserve">
          <source>other</source>
          <target state="translated">other</target>
        </trans-unit>
        <trans-unit id="4f8096255fc4eb60cc964b3adea7c4760cd0da10" translate="yes" xml:space="preserve">
          <source>other directory_entry</source>
          <target state="translated">다른 directory_entry</target>
        </trans-unit>
        <trans-unit id="a68ad84146b1625ae6b0c18653cdc6065bf9b22c" translate="yes" xml:space="preserve">
          <source>other names declared at block scope such as typedefs, enumerations, and enumerators.</source>
          <target state="translated">typedef, 열거 및 열거 자와 같이 블록 범위에서 선언 된 다른 이름.</target>
        </trans-unit>
        <trans-unit id="a474824ff46030ab3cab30245942c5dadf67a88d" translate="yes" xml:space="preserve">
          <source>other string to compare to</source>
          <target state="translated">비교할 다른 문자열</target>
        </trans-unit>
        <trans-unit id="35bb2f774af435a1b0473f18a2633888d87c9ad4" translate="yes" xml:space="preserve">
          <source>other values</source>
          <target state="translated">다른 값들</target>
        </trans-unit>
        <trans-unit id="3d292f79491079726b76eefac01e25880cc6c24f" translate="yes" xml:space="preserve">
          <source>otherwise (e.g. an &lt;a href=&quot;enum&quot;&gt;enumerator&lt;/a&gt; is a prvalue expression, a specialization of a concept is a bool prvalue(since C++20)). The type of the expression is determined as follows:</source>
          <target state="translated">그렇지 않으면 (예를 들어 &lt;a href=&quot;enum&quot;&gt;열거&lt;/a&gt; 자는 prvalue 표현식이고, 개념의 전문화는 bool prvalue (C ++ 20부터)입니다.) 표현식의 유형은 다음과 같이 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="7bf197f9dad611bbc178959ca27b7238e470d92d" translate="yes" xml:space="preserve">
          <source>otherwise (if &lt;code&gt;E1&lt;/code&gt; is an rvalue(until C++17)xvalue (which may be &lt;a href=&quot;implicit_cast#Temporary_materialization&quot;&gt;materialized&lt;/a&gt; from prvalue)(since C++17)), the result is an rvalue(until C++11)xvalue(since C++11) designating that data member;</source>
          <target state="translated">그렇지 IF ( &lt;code&gt;E1&lt;/code&gt; 은 C가 ++ 17)가 xValue가 (될 수있는 때까지 r- 수치는 (인 &lt;a href=&quot;implicit_cast#Temporary_materialization&quot;&gt;구체화 된&lt;/a&gt; 결과는 r- 수치가있는 xValue (C ++ 11까지) (C 이후이다 prvalue부터) (일) 17 ++ C 때문에) ++ 11) 해당 데이터 멤버 지정;</target>
        </trans-unit>
        <trans-unit id="21415dd6acfd848d8be7bde71376a89b5752c9a0" translate="yes" xml:space="preserve">
          <source>otherwise (if &lt;code&gt;E1&lt;/code&gt; is an rvalue(until C++17)xvalue (which may be &lt;a href=&quot;implicit_cast#Temporary_materialization&quot;&gt;materialized&lt;/a&gt; from prvalue)(since C++17)), the result is an rvalue(until C++11)xvalue(since C++11) designating that non-static data member of &lt;code&gt;E1&lt;/code&gt;.</source>
          <target state="translated">그렇지 IF ( &lt;code&gt;E1&lt;/code&gt; 은 C가 ++ 17)가 xValue가 (될 수있는 때까지 r- 수치는 (인 &lt;a href=&quot;implicit_cast#Temporary_materialization&quot;&gt;구체화 된&lt;/a&gt; 결과는 r- 수치가있는 xValue (C ++ 11까지) (C 이후이다 prvalue부터) (일) 17 ++ C 때문에) ++ 11) &lt;code&gt;E1&lt;/code&gt; 의 비 정적 데이터 멤버 지정 .</target>
        </trans-unit>
        <trans-unit id="2797246c807e98578c4212b4cf041fb2d41f7f2f" translate="yes" xml:space="preserve">
          <source>otherwise (type-constraint is &lt;code&gt;Concept&lt;/code&gt; without an argument list), the constraint expression &lt;code&gt;Concept&amp;lt;T&amp;gt;&lt;/code&gt; must be valid and return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 (type-constraint는 인수 목록이없는 &lt;code&gt;Concept&lt;/code&gt; ) 제약 조건 표현식 &lt;code&gt;Concept&amp;lt;T&amp;gt;&lt;/code&gt; 는 유효하고 &lt;code&gt;true&lt;/code&gt; 를 반환해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="a58022c1c8c78e6f02830b0f04739c2419d2b439" translate="yes" xml:space="preserve">
          <source>otherwise &lt;code&gt;std::get&amp;lt;v.index()&amp;gt;(v) &amp;gt;= std::get&amp;lt;v.index()&amp;gt;(w)&lt;/code&gt;. The behavior is undefined if &lt;code&gt;std::get&amp;lt;i&amp;gt;(v) &amp;gt;= std::get&amp;lt;i&amp;gt;(w)&lt;/code&gt; is not a valid expression returning a type convertible to bool, for any &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;std::get&amp;lt;v.index()&amp;gt;(v) &amp;gt;= std::get&amp;lt;v.index()&amp;gt;(w)&lt;/code&gt; 입니다. &lt;code&gt;std::get&amp;lt;i&amp;gt;(v) &amp;gt;= std::get&amp;lt;i&amp;gt;(w)&lt;/code&gt; 가 모든 &lt;code&gt;i&lt;/code&gt; 에 대해 bool로 변환 가능한 유형을 리턴하는 유효한 표현식이 아닌 경우 동작이 정의되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="78e15352865c28148f8f808485a2373264ca150b" translate="yes" xml:space="preserve">
          <source>otherwise &lt;code&gt;view::counted(E, F)&lt;/code&gt; is expression-equivalent to &lt;code&gt;ranges::subrange{std::counted_iterator{E, F}, std::default_sentinel}&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;view::counted(E, F)&lt;/code&gt; 는 expression &lt;code&gt;ranges::subrange{std::counted_iterator{E, F}, std::default_sentinel}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6d8674ec85ae8b79b2bea01217f17d5f7c90c1ba" translate="yes" xml:space="preserve">
          <source>otherwise if &lt;code&gt;v.index() &amp;gt; w.index()&lt;/code&gt;, returns &lt;code&gt;false&lt;/code&gt;;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;v.index() &amp;gt; w.index()&lt;/code&gt; 경우 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="cf75917ad3d4f314f29493733f89ba97772517f2" translate="yes" xml:space="preserve">
          <source>otherwise if &lt;code&gt;v.index() &amp;gt; w.index()&lt;/code&gt;, returns &lt;code&gt;true&lt;/code&gt;;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;v.index() &amp;gt; w.index()&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="86695cbfb1da96f3e609489c3da2e714d2003744" translate="yes" xml:space="preserve">
          <source>otherwise if &lt;code&gt;v.index() &amp;lt; w.index()&lt;/code&gt;, returns &lt;code&gt;false&lt;/code&gt;;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;v.index() &amp;lt; w.index()&lt;/code&gt; 경우 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="456e1053e3403c9be12977a3e29335fd2b184cd2" translate="yes" xml:space="preserve">
          <source>otherwise if &lt;code&gt;v.index() &amp;lt; w.index()&lt;/code&gt;, returns &lt;code&gt;true&lt;/code&gt;;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;v.index() &amp;lt; w.index()&lt;/code&gt; 인 &lt;code&gt;true&lt;/code&gt; 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="f52271cf3919306d588007f412e2501520655c59" translate="yes" xml:space="preserve">
          <source>otherwise if &lt;code&gt;v.valueless_by_exception()&lt;/code&gt;, returns &lt;code&gt;false&lt;/code&gt;;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;v.valueless_by_exception()&lt;/code&gt; 인 경우 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="efe8ce769a0bf2e35d128c3a1c574d8fa7f092a4" translate="yes" xml:space="preserve">
          <source>otherwise if &lt;code&gt;v.valueless_by_exception()&lt;/code&gt;, returns &lt;code&gt;true&lt;/code&gt;;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;v.valueless_by_exception()&lt;/code&gt; 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="863bd17386770e53a43fe3fe0e5eefee3e57e0d3" translate="yes" xml:space="preserve">
          <source>otherwise if &lt;code&gt;w.valueless_by_exception()&lt;/code&gt;, returns &lt;code&gt;false&lt;/code&gt;;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;w.valueless_by_exception()&lt;/code&gt; 인 경우 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="46d45c3966bc9ff7964250a6bb14823765393ad3" translate="yes" xml:space="preserve">
          <source>otherwise if &lt;code&gt;w.valueless_by_exception()&lt;/code&gt;, returns &lt;code&gt;true&lt;/code&gt;;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;w.valueless_by_exception()&lt;/code&gt; 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="6685353c5a0da91e52940a9905efe3de21e7405d" translate="yes" xml:space="preserve">
          <source>otherwise returns &lt;code&gt;std::get&amp;lt;v.index()&amp;gt;(v) != std::get&amp;lt;v.index()&amp;gt;(w)&lt;/code&gt;. The behavior is undefined if &lt;code&gt;std::get&amp;lt;i&amp;gt;(v) != std::get&amp;lt;i&amp;gt;(w)&lt;/code&gt; is not a valid expression returning a type convertible to bool, for any &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;std::get&amp;lt;v.index()&amp;gt;(v) != std::get&amp;lt;v.index()&amp;gt;(w)&lt;/code&gt; 합니다. &lt;code&gt;std::get&amp;lt;i&amp;gt;(v) != std::get&amp;lt;i&amp;gt;(w)&lt;/code&gt; 가 모든 &lt;code&gt;i&lt;/code&gt; 에 대해 bool로 변환 가능한 유형을 리턴하는 유효한 표현식이 아닌 경우 동작이 정의되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e7caf53e9ec3ad8577ed8bd63e173b1717cfc1e3" translate="yes" xml:space="preserve">
          <source>otherwise returns &lt;code&gt;std::get&amp;lt;v.index()&amp;gt;(v) &amp;gt; std::get&amp;lt;v.index()&amp;gt;(w)&lt;/code&gt;. The behavior is undefined if &lt;code&gt;std::get&amp;lt;i&amp;gt;(v) &amp;gt; std::get&amp;lt;i&amp;gt;(w)&lt;/code&gt; is not a valid expression returning a type convertible to bool, for any &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;std::get&amp;lt;v.index()&amp;gt;(v) &amp;gt; std::get&amp;lt;v.index()&amp;gt;(w)&lt;/code&gt; 합니다. &lt;code&gt;std::get&amp;lt;i&amp;gt;(v) &amp;gt; std::get&amp;lt;i&amp;gt;(w)&lt;/code&gt; 가 모든 &lt;code&gt;i&lt;/code&gt; 에 대해 bool로 변환 가능한 유형을 리턴하는 유효한 표현식이 아닌 경우 동작이 정의되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="47ab7ef124a032f67c3b2132d8d011c93a16b88c" translate="yes" xml:space="preserve">
          <source>otherwise returns &lt;code&gt;std::get&amp;lt;v.index()&amp;gt;(v) &amp;lt; std::get&amp;lt;v.index()&amp;gt;(w)&lt;/code&gt;. The behavior is undefined if &lt;code&gt;std::get&amp;lt;i&amp;gt;(v) &amp;lt; std::get&amp;lt;i&amp;gt;(w)&lt;/code&gt; is not a valid expression returning a type convertible to bool, for any &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;std::get&amp;lt;v.index()&amp;gt;(v) &amp;lt; std::get&amp;lt;v.index()&amp;gt;(w)&lt;/code&gt; 합니다. &lt;code&gt;std::get&amp;lt;i&amp;gt;(v) &amp;lt; std::get&amp;lt;i&amp;gt;(w)&lt;/code&gt; 가 모든 &lt;code&gt;i&lt;/code&gt; 에 대해 bool로 변환 가능한 유형을 리턴하는 유효한 표현식이 아닌 경우 동작이 정의되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="cfe06b7bbdcc708fabaa442decbb2b009bdf5ddb" translate="yes" xml:space="preserve">
          <source>otherwise returns &lt;code&gt;std::get&amp;lt;v.index()&amp;gt;(v) &amp;lt;= std::get&amp;lt;v.index()&amp;gt;(w)&lt;/code&gt;. The behavior is undefined if &lt;code&gt;std::get&amp;lt;i&amp;gt;(v) &amp;lt;= std::get&amp;lt;i&amp;gt;(w)&lt;/code&gt; is not a valid expression returning a type convertible to bool, for any &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;std::get&amp;lt;v.index()&amp;gt;(v) &amp;lt;= std::get&amp;lt;v.index()&amp;gt;(w)&lt;/code&gt; 합니다. &lt;code&gt;std::get&amp;lt;i&amp;gt;(v) &amp;lt;= std::get&amp;lt;i&amp;gt;(w)&lt;/code&gt; 가 모든 &lt;code&gt;i&lt;/code&gt; 에 대해 bool로 변환 가능한 유형을 리턴하는 유효한 표현식이 아닌 경우 동작이 정의되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ef9b8e3fd30aa22e52dcdf04db77f2d2c4236e35" translate="yes" xml:space="preserve">
          <source>otherwise returns &lt;code&gt;std::get&amp;lt;v.index()&amp;gt;(v) == std::get&amp;lt;v.index()&amp;gt;(w)&lt;/code&gt;. The behavior is undefined if &lt;code&gt;std::get&amp;lt;i&amp;gt;(v) == std::get&amp;lt;i&amp;gt;(w)&lt;/code&gt; is not a valid expression returning a type convertible to bool, for any &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;std::get&amp;lt;v.index()&amp;gt;(v) == std::get&amp;lt;v.index()&amp;gt;(w)&lt;/code&gt; 합니다. &lt;code&gt;std::get&amp;lt;i&amp;gt;(v) == std::get&amp;lt;i&amp;gt;(w)&lt;/code&gt; 가 모든 &lt;code&gt;i&lt;/code&gt; 에 대해 bool로 변환 가능한 유형을 리턴하는 유효한 표현식이 아닌 경우 동작이 정의되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c55daad49911226f68425b814320663ade9c5ed3" translate="yes" xml:space="preserve">
          <source>otherwise returns an object composed from</source>
          <target state="translated">그렇지 않으면에서 구성된 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c7f17ef4864b41c20164b657f672d69c7ca04211" translate="yes" xml:space="preserve">
          <source>otherwise, (since C++14) the implicit conversion sequence is a user-defined conversion sequence with the second standard conversion sequence an identity conversion.</source>
          <target state="translated">그렇지 않으면 (C ++ 14부터) 암시 적 변환 시퀀스는 두 번째 표준 변환 시퀀스와 동일성 변환을 갖는 사용자 정의 변환 시퀀스입니다.</target>
        </trans-unit>
        <trans-unit id="442e58d01c81ab4ce5fa17854c707677af5668cf" translate="yes" xml:space="preserve">
          <source>otherwise, &lt;code&gt;&lt;a href=&quot;iterator_tags&quot;&gt;std::bidirectional_iterator_tag&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;Iter&lt;/code&gt; satisfies &lt;a href=&quot;../named_req/bidirectionaliterator#Concept&quot;&gt;&lt;code&gt;__LegacyBidirectionalIterator&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">그렇지 않은 경우, &lt;code&gt;&lt;a href=&quot;iterator_tags&quot;&gt;std::bidirectional_iterator_tag&lt;/a&gt;&lt;/code&gt; 가 &lt;code&gt;Iter&lt;/code&gt; 가 &lt;a href=&quot;../named_req/bidirectionaliterator#Concept&quot;&gt; &lt;code&gt;__LegacyBidirectionalIterator&lt;/code&gt; 를&lt;/a&gt; 만족 하면</target>
        </trans-unit>
        <trans-unit id="cbdb71bf16738a3953c3323e4c220a46b4a259ed" translate="yes" xml:space="preserve">
          <source>otherwise, &lt;code&gt;&lt;a href=&quot;iterator_tags&quot;&gt;std::forward_iterator_tag&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;Iter&lt;/code&gt; satisfies &lt;a href=&quot;../named_req/forwarditerator#Concept&quot;&gt;&lt;code&gt;__LegacyForwardIterator&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">그렇지 않으면, &lt;code&gt;Iter&lt;/code&gt; 가 &lt;a href=&quot;../named_req/forwarditerator#Concept&quot;&gt; &lt;code&gt;__LegacyForwardIterator&lt;/code&gt; 를&lt;/a&gt; 만족 하면 &lt;code&gt;&lt;a href=&quot;iterator_tags&quot;&gt;std::forward_iterator_tag&lt;/a&gt;&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="34a81fe0724def991ffeb2a1a438685456e9f5ae" translate="yes" xml:space="preserve">
          <source>otherwise, &lt;code&gt;&lt;a href=&quot;iterator_tags&quot;&gt;std::input_iterator_tag&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;&lt;a href=&quot;iterator_tags&quot;&gt;std::input_iterator_tag&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d947ed53c53a1190ea7ac80990b3fa0845fc2e50" translate="yes" xml:space="preserve">
          <source>otherwise, &lt;code&gt;&lt;a href=&quot;iterator_tags&quot;&gt;std::random_access_iterator_tag&lt;/a&gt;&lt;/code&gt; if &lt;code&gt;Iter&lt;/code&gt; satisfies &lt;a href=&quot;../named_req/randomaccessiterator#Concept&quot;&gt;&lt;code&gt;__LegacyRandomAccessIterator&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="translated">그렇지 않으면, &lt;code&gt;&lt;a href=&quot;iterator_tags&quot;&gt;std::random_access_iterator_tag&lt;/a&gt;&lt;/code&gt; 가 &lt;code&gt;Iter&lt;/code&gt; 가 &lt;a href=&quot;../named_req/randomaccessiterator#Concept&quot;&gt; &lt;code&gt;__LegacyRandomAccessIterator&lt;/code&gt; 를&lt;/a&gt; 만족 하면 ,</target>
        </trans-unit>
        <trans-unit id="5be509a70706a3e272e9ff743b09294fba66f65e" translate="yes" xml:space="preserve">
          <source>otherwise, &lt;code&gt;INVOKE(f, t1, t2, ..., tN)&lt;/code&gt; is equivalent to &lt;code&gt;f(t1, t2, ..., tN)&lt;/code&gt; (that is, &lt;code&gt;f&lt;/code&gt; is a &lt;a href=&quot;functionobject&quot;&gt;FunctionObject&lt;/a&gt;)</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;INVOKE(f, t1, t2, ..., tN)&lt;/code&gt; 는 &lt;code&gt;f(t1, t2, ..., tN)&lt;/code&gt; (즉, &lt;code&gt;f&lt;/code&gt; 는 &lt;a href=&quot;functionobject&quot;&gt;FunctionObject&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="32a9bbd0971cbdedbbd6b3f1346eb0cdad2f64b5" translate="yes" xml:space="preserve">
          <source>otherwise, &lt;code&gt;P&lt;/code&gt; is a parameter pack, &lt;code&gt;E&lt;/code&gt; is a fold-expression &lt;code&gt;(C&amp;lt;P&amp;gt; &amp;amp;&amp;amp; ...)&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면, &lt;code&gt;P&lt;/code&gt; 는 매개 변수 팩이고, &lt;code&gt;E&lt;/code&gt; 는 접는 표현입니다 &lt;code&gt;(C&amp;lt;P&amp;gt; &amp;amp;&amp;amp; ...)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="c98ad1d89bbdacfbcc92adea6b7e5f2a3d76c3ac" translate="yes" xml:space="preserve">
          <source>otherwise, &lt;code&gt;std::uses_allocator_v&amp;lt;T, Alloc&amp;gt;&lt;/code&gt; is true, and</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;std::uses_allocator_v&amp;lt;T, Alloc&amp;gt;&lt;/code&gt; 는 true이며</target>
        </trans-unit>
        <trans-unit id="e9256554e3aff68e8171c4cf6a8231ab2cf58a85" translate="yes" xml:space="preserve">
          <source>otherwise, &lt;code&gt;view::counted(E, F)&lt;/code&gt; is ill-formed.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;view::counted(E, F)&lt;/code&gt; 이 잘못되었습니다.</target>
        </trans-unit>
        <trans-unit id="3ae9b5defe3115bd5f41d97e71c9870ff2419773" translate="yes" xml:space="preserve">
          <source>otherwise, define N as the number of nonempty filename elements that are neither dot nor dot-dot in &lt;code&gt;[b, base.end())&lt;/code&gt;, minus the number of dot-dot filename elements, If N &amp;lt; 0, returns a default-constructed path.</source>
          <target state="translated">그렇지 않은 경우 N을 &lt;code&gt;[b, base.end())&lt;/code&gt; 에서 점 또는 점이 아닌 비어 있지 않은 파일 이름 요소 의 수에서 빼기 점 파일 이름 요소의 수를 뺀 값으로 정의하십시오. N &amp;lt;0 인 경우 기본 구성을 반환합니다. 통로.</target>
        </trans-unit>
        <trans-unit id="d50de985bcfc6a09c430d2fb2737866d695434c7" translate="yes" xml:space="preserve">
          <source>otherwise, exchanges values of &lt;code&gt;rhs&lt;/code&gt; and &lt;code&gt;*this&lt;/code&gt;. If an exception is thrown, the state of &lt;code&gt;*this&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; depends on exception safety of variant's move constructor.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;rhs&lt;/code&gt; 값 과 &lt;code&gt;*this&lt;/code&gt; 를 교환합니다 . 예외가 발생하면 &lt;code&gt;*this&lt;/code&gt; 와 &lt;code&gt;rhs&lt;/code&gt; 의 상태 는 variant의 이동 생성자의 예외 안전성에 따라 달라집니다.</target>
        </trans-unit>
        <trans-unit id="f8083e1cb95e22e50a1b312290fd79a72e7923fd" translate="yes" xml:space="preserve">
          <source>otherwise, if &lt;code&gt;&lt;a href=&quot;../types/remove_cvref&quot;&gt;std::remove_cvref_t&lt;/a&gt;&amp;lt;decltype(t1)&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;../utility/functional/reference_wrapper&quot;&gt;std::reference_wrapper&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;INVOKE(f, t1)&lt;/code&gt; is equivalent to &lt;code&gt;t1.get().*f&lt;/code&gt;(since C++17)</source>
          <target state="translated">그렇지 않은 경우 &lt;code&gt;&lt;a href=&quot;../types/remove_cvref&quot;&gt;std::remove_cvref_t&lt;/a&gt;&amp;lt;decltype(t1)&amp;gt;&lt;/code&gt; 이 &lt;code&gt;&lt;a href=&quot;../utility/functional/reference_wrapper&quot;&gt;std::reference_wrapper&lt;/a&gt;&lt;/code&gt; 의 특수화 이면 &lt;code&gt;INVOKE(f, t1)&lt;/code&gt; 은 &lt;code&gt;t1.get().*f&lt;/code&gt; (C ++ 17부터)</target>
        </trans-unit>
        <trans-unit id="e0a0d35018a2565fe6ac8728066ff054c6ca620c" translate="yes" xml:space="preserve">
          <source>otherwise, if &lt;code&gt;&lt;a href=&quot;../types/remove_cvref&quot;&gt;std::remove_cvref_t&lt;/a&gt;&amp;lt;decltype(t1)&amp;gt;&lt;/code&gt; is a specialization of &lt;code&gt;&lt;a href=&quot;../utility/functional/reference_wrapper&quot;&gt;std::reference_wrapper&lt;/a&gt;&lt;/code&gt;, then &lt;code&gt;INVOKE(f, t1, t2, ..., tN)&lt;/code&gt; is equivalent to &lt;code&gt;(t1.get().*f)(t2, ..., tN)&lt;/code&gt;(since C++17)</source>
          <target state="translated">그렇지 않은 경우 &lt;code&gt;&lt;a href=&quot;../types/remove_cvref&quot;&gt;std::remove_cvref_t&lt;/a&gt;&amp;lt;decltype(t1)&amp;gt;&lt;/code&gt; 이 &lt;code&gt;&lt;a href=&quot;../utility/functional/reference_wrapper&quot;&gt;std::reference_wrapper&lt;/a&gt;&lt;/code&gt; 의 특수화 이면 &lt;code&gt;INVOKE(f, t1, t2, ..., tN)&lt;/code&gt; &lt;code&gt;(t1.get().*f)(t2, ..., tN)&lt;/code&gt; ) 은 (t1.get (). * f) 와 같습니다 . (t2, ..., tN) (C ++ 17부터)</target>
        </trans-unit>
        <trans-unit id="8b365ad2ee8d308ad0db0fcfbc3b962ede81720e" translate="yes" xml:space="preserve">
          <source>otherwise, if &lt;code&gt;E1&lt;/code&gt; is an lvalue, the result is an lvalue designating that non-static data member of &lt;code&gt;E1&lt;/code&gt;,</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;E1&lt;/code&gt; 이 lvalue 인 경우 결과는 &lt;code&gt;E1&lt;/code&gt; 의 비 정적 데이터 멤버를 지정하는 lvalue입니다 .</target>
        </trans-unit>
        <trans-unit id="25f6854ab6c452d635ebc200632b41e700b5e66f" translate="yes" xml:space="preserve">
          <source>otherwise, if &lt;code&gt;a &amp;lt; b&lt;/code&gt; equals &lt;code&gt;true&lt;/code&gt;, returns &lt;code&gt;std::strong_ordering::less&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면, &lt;code&gt;a &amp;lt; b&lt;/code&gt; 동일 &lt;code&gt;true&lt;/code&gt; , 반환 &lt;code&gt;std::strong_ordering::less&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0206cd8a85a6502d3ad83a5b07e30310403c1b74" translate="yes" xml:space="preserve">
          <source>otherwise, if &lt;code&gt;a &amp;lt; b&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns &lt;code&gt;std::partial_ordering::less&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;a &amp;lt; b&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우 &lt;code&gt;std::partial_ordering::less&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6e551fe8f88634a0927989ab278a069173231d2" translate="yes" xml:space="preserve">
          <source>otherwise, if &lt;code&gt;a &amp;lt; b&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns &lt;code&gt;std::strong_ordering::less&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;a &amp;lt; b&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우 &lt;code&gt;std::strong_ordering::less&lt;/code&gt; 반환합니다</target>
        </trans-unit>
        <trans-unit id="bc61679c9e050df21aba695164cfce889e4ef07a" translate="yes" xml:space="preserve">
          <source>otherwise, if &lt;code&gt;a &amp;lt; b&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, returns &lt;code&gt;std::weak_ordering::less&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;a &amp;lt; b&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우 &lt;code&gt;std::weak_ordering::less&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f28669c3bd4cb58d1175c84a2a6df167315fb8bc" translate="yes" xml:space="preserve">
          <source>otherwise, if &lt;code&gt;c1&lt;/code&gt; and &lt;code&gt;c2&lt;/code&gt; are both copies of &lt;code&gt;X::eof()&lt;/code&gt;, yields true</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;c1&lt;/code&gt; 과 &lt;code&gt;c2&lt;/code&gt; 가 모두 &lt;code&gt;X::eof()&lt;/code&gt; 사본 인 경우 true를 생성합니다</target>
        </trans-unit>
        <trans-unit id="3bb2b7d056e6b7e7f6f1beb8984e9c13c5b90a16" translate="yes" xml:space="preserve">
          <source>otherwise, if &lt;code&gt;t1&lt;/code&gt; does not satisfy the previous items, then &lt;code&gt;INVOKE(f, t1)&lt;/code&gt; is equivalent to &lt;code&gt;(*t1).*f&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면, &lt;code&gt;t1&lt;/code&gt; 이 이전 항목을 만족시키지 않으면 &lt;code&gt;INVOKE(f, t1)&lt;/code&gt; 은 &lt;code&gt;(*t1).*f&lt;/code&gt; 과 같습니다 . * f</target>
        </trans-unit>
        <trans-unit id="f320a22f7a5a9967acfb1cadc57533feeb4cc37a" translate="yes" xml:space="preserve">
          <source>otherwise, if &lt;code&gt;t1&lt;/code&gt; does not satisfy the previous items, then &lt;code&gt;INVOKE(f, t1, t2, ..., tN)&lt;/code&gt; is equivalent to &lt;code&gt;((*t1).*f)(t2, ..., tN)&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;t1&lt;/code&gt; 이 이전 항목을 만족하지 않으면 &lt;code&gt;INVOKE(f, t1, t2, ..., tN)&lt;/code&gt; 은 &lt;code&gt;((*t1).*f)(t2, ..., tN)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1dd8c1903cf061b8c4c7669b3187fdcca3b57a6f" translate="yes" xml:space="preserve">
          <source>otherwise, if N = 0 and &lt;code&gt;a == end() || a-&amp;gt;empty()&lt;/code&gt;, returns &lt;code&gt;path(&quot;.&quot;)&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 N = 0이고 &lt;code&gt;a == end() || a-&amp;gt;empty()&lt;/code&gt; 는 &lt;code&gt;path(&quot;.&quot;)&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="374244b5d34c41c46f718b552cd25a9ce1e21d3d" translate="yes" xml:space="preserve">
          <source>otherwise, if N == 1 and &lt;code&gt;f&lt;/code&gt; is a &lt;a href=&quot;../language/pointer#Pointers_to_data_members&quot;&gt;pointer to data member&lt;/a&gt; of class &lt;code&gt;T&lt;/code&gt;:</source>
          <target state="translated">그렇지 않으면 N == 1이고 &lt;code&gt;f&lt;/code&gt; 가 클래스 &lt;code&gt;T&lt;/code&gt; 의&lt;a href=&quot;../language/pointer#Pointers_to_data_members&quot;&gt;데이터 멤버&lt;/a&gt; 에 대한 포인터 인 경우 :</target>
        </trans-unit>
        <trans-unit id="2fb46787fdfbfe50355e8621ebf1014385e8e5d9" translate="yes" xml:space="preserve">
          <source>otherwise, if any of the arguments is NaN, NaN is returned</source>
          <target state="translated">그렇지 않으면, 인수 중 하나가 NaN이면 NaN이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="e31c38b1612dceab9b278c69d3526fc3591172aa" translate="yes" xml:space="preserve">
          <source>otherwise, if both &lt;code&gt;*this&lt;/code&gt; and &lt;code&gt;rhs&lt;/code&gt; hold the same alternative, calls &lt;code&gt;swap(std::get&amp;lt;i&amp;gt;(*this), std:get&amp;lt;i&amp;gt;(rhs))&lt;/code&gt; where &lt;code&gt;i&lt;/code&gt; is &lt;code&gt;index()&lt;/code&gt;. If an exception is thrown, the state of the values depends on the exception safety of the swap function called.</source>
          <target state="translated">그렇지 않으면, &lt;code&gt;*this&lt;/code&gt; 와 &lt;code&gt;rhs&lt;/code&gt; 가 모두 동일한 대안을 가지고 있다면 , &lt;code&gt;swap(std::get&amp;lt;i&amp;gt;(*this), std:get&amp;lt;i&amp;gt;(rhs))&lt;/code&gt; 호출합니다 . 여기서 &lt;code&gt;i&lt;/code&gt; 는 &lt;code&gt;index()&lt;/code&gt; 입니다. 예외가 발생하면 값의 상태는 호출 된 스왑 함수의 예외 안전에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5feab22d6c0c3685d0792a0f57970b188ce42462" translate="yes" xml:space="preserve">
          <source>otherwise, if one of &lt;code&gt;c1&lt;/code&gt; and &lt;code&gt;c2&lt;/code&gt; is a copy of &lt;code&gt;X::eof()&lt;/code&gt; and the other is not, yields false</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;c1&lt;/code&gt; 및 &lt;code&gt;c2&lt;/code&gt; 중 하나가 &lt;code&gt;X::eof()&lt;/code&gt; 의 사본이고 다른 하나가 아닌 경우 false를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c7ecf43c8b588e39f5a518bd76831b271c54cd14" translate="yes" xml:space="preserve">
          <source>otherwise, if overload resolution finds no operator co_await, the awaiter is awaitable, as-is</source>
          <target state="translated">그렇지 않으면, 과부하 해결에서 연산자 co_await를 찾지 못하면 대기자는 그대로 대기 가능합니다.</target>
        </trans-unit>
        <trans-unit id="f755857d52adc382bac5de5e6cdb4f5d32ca291d" translate="yes" xml:space="preserve">
          <source>otherwise, if overload resolution is ambiguous, the program is ill-formed</source>
          <target state="translated">그렇지 않으면, 과부하 해결이 모호한 경우 프로그램이 잘못 형성됩니다</target>
        </trans-unit>
        <trans-unit id="56de50c8f950cd75c0d385c839a2226cc2093616" translate="yes" xml:space="preserve">
          <source>otherwise, if the current coroutine's Promise type has the member function &lt;code&gt;await_transform&lt;/code&gt;, then the awaitable is &lt;code&gt;promise.await_transform(expr)&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면 현재 코 루틴의 Promise 유형에 &lt;code&gt;await_transform&lt;/code&gt; 멤버 함수가 있으면 대기 가능 항목은 promise입니다 &lt;code&gt;promise.await_transform(expr)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="34fce02cf32a52ad3ca8c0128718d6dc7dba7a3c" translate="yes" xml:space="preserve">
          <source>otherwise, if the declaration sets in &lt;code&gt;Bi&lt;/code&gt; and in &lt;code&gt;C&lt;/code&gt; are different, the result is an ambiguous merge: the new lookup set of &lt;code&gt;C&lt;/code&gt; has an invalid declaration and a union of the subobjects ealier merged into &lt;code&gt;C&lt;/code&gt; and introduced from &lt;code&gt;Bi&lt;/code&gt;. This invalid lookup set may not be an error if it is discarded later.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;Bi&lt;/code&gt; 와 &lt;code&gt;C&lt;/code&gt; 의 선언 세트 가 다른 경우 결과가 모호하게 병합됩니다. 새로운 &lt;code&gt;C&lt;/code&gt; 조회 세트에 유효하지 않은 선언이 있고 하위 오브젝트 ealier가 &lt;code&gt;C&lt;/code&gt; 에 병합되어 &lt;code&gt;Bi&lt;/code&gt; 에서 도입되었습니다 . 이 잘못된 조회 세트는 나중에 삭제하면 오류가 아닐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e485874aaacf2317c06f2ac543d51411fe905da1" translate="yes" xml:space="preserve">
          <source>otherwise, if the destination type is a (possibly cv-qualified) aggregate class, it is initialized as described in &lt;a href=&quot;aggregate_initialization&quot;&gt;aggregate initialization&lt;/a&gt; except that narrowing conversions are permitted, designated initializers are not allowed, a temporary bound to a reference does not have its lifetime extended, there is no brace elision, and any elements without an initializer are &lt;a href=&quot;value_initialization&quot;&gt;value-initialized&lt;/a&gt;.</source>
          <target state="translated">그렇지 않으면, 대상 유형이 (cv-qualified) 집계 클래스 인 경우 축소 변환이 허용되고 지정된 이니셜 라이저가 허용되지 않고 참조에 대한 임시 바인딩 수명이 연장되지 않는 것을 제외하고 &lt;a href=&quot;aggregate_initialization&quot;&gt;집계 초기화에&lt;/a&gt; 설명 된대로 초기화됩니다. , 중괄호 제거가 없으며 이니셜 라이저가없는 요소는 &lt;a href=&quot;value_initialization&quot;&gt;값으로 초기화&lt;/a&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="888d6824e8133cb8eba24becc7835fdd910dfcb7" translate="yes" xml:space="preserve">
          <source>otherwise, nothing is done: the objects with automatic storage duration (and their subobjects) are initialized to indeterminate values.</source>
          <target state="translated">그렇지 않으면 아무것도 수행되지 않습니다. 자동 저장 기간이있는 객체 (및 해당 하위 객체)는 불확실한 값으로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="e81bff0c0ab63d5876ff4c02ca020d2c924c87c7" translate="yes" xml:space="preserve">
          <source>otherwise, returns &lt;code&gt;std::partial_ordering::greater&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;std::partial_ordering::greater&lt;/code&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="30e554157d8ce0aec542cf4f4b782e83e2a3f0ed" translate="yes" xml:space="preserve">
          <source>otherwise, returns &lt;code&gt;std::strong_equality::nonequal&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;std::strong_equality::nonequal&lt;/code&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="23ac1f07a795bd24fe7e0ef3785b7fbf51e0a3ce" translate="yes" xml:space="preserve">
          <source>otherwise, returns &lt;code&gt;std::strong_ordering::greater&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;std::strong_ordering::greater&lt;/code&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="83ae9b04de7eabd9dfbc0c7a5d00d35523dc6e2f" translate="yes" xml:space="preserve">
          <source>otherwise, returns &lt;code&gt;std::weak_equality::nonequivalent&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;std::weak_equality::nonequivalent&lt;/code&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d83441b9f25acdf337b47a7fcfbdf2e21d51e9ad" translate="yes" xml:space="preserve">
          <source>otherwise, returns &lt;code&gt;std::weak_ordering::greater&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;std::weak_ordering::greater&lt;/code&gt; 반환합니다.</target>
        </trans-unit>
        <trans-unit id="82ab18d3676ae8512700c189599c1533af12ae0f" translate="yes" xml:space="preserve">
          <source>otherwise, returns a value &lt;code&gt;f&lt;/code&gt; such that &lt;code&gt;X::eq_int_type(f, X::eof())&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;X::eq_int_type(f, X::eof())&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 가 되도록 값 &lt;code&gt;f&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6eeeb2ae9c796d9f404a56ceaf673d1c091e66ca" translate="yes" xml:space="preserve">
          <source>otherwise, the awaitable is expr, as-is.</source>
          <target state="translated">그렇지 않으면, 대기는 그대로 expr입니다.</target>
        </trans-unit>
        <trans-unit id="8e9d839d57813e43fc95f6639fc57269f684ad3a" translate="yes" xml:space="preserve">
          <source>otherwise, the conversion is with style &lt;code&gt;e&lt;/code&gt; or &lt;code&gt;E&lt;/code&gt; and precision</source>
          <target state="translated">그렇지 않으면 변환은 스타일 &lt;code&gt;e&lt;/code&gt; 또는 &lt;code&gt;E&lt;/code&gt; 및 정밀도로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="a1cad5bcd263c6742992fea4562ec431a32e64f9" translate="yes" xml:space="preserve">
          <source>otherwise, the new lookup set of &lt;code&gt;C&lt;/code&gt; has the shared declaration sets and the union of the subobjects ealier merged into &lt;code&gt;C&lt;/code&gt; and introduced from &lt;code&gt;Bi&lt;/code&gt;</source>
          <target state="translated">그렇지 않은 경우, 새로운 &lt;code&gt;C&lt;/code&gt; 조회 세트 는 공유 선언 세트를 가지며 하위 오브젝트 ealier의 결합은 &lt;code&gt;C&lt;/code&gt; 로 병합되어 &lt;code&gt;Bi&lt;/code&gt; 에서 도입됩니다.</target>
        </trans-unit>
        <trans-unit id="6ed3c647fd1a8a00c0bdc039a39cdb440cac3be7" translate="yes" xml:space="preserve">
          <source>otherwise, the program is ill-formed (this means &lt;code&gt;std::uses_allocator_v&amp;lt;T, Alloc&amp;gt;&lt;/code&gt; is true, but the type does not follow either of the two allowed conventions)</source>
          <target state="translated">그렇지 않으면 프로그램이 잘못 구성됩니다 ( &lt;code&gt;std::uses_allocator_v&amp;lt;T, Alloc&amp;gt;&lt;/code&gt; 는 true이지만 유형이 허용되는 두 규칙 중 하나를 따르지 않음을 의미 함)</target>
        </trans-unit>
        <trans-unit id="a4db4b97f9246dca5971b6a7801a88bc3577a791" translate="yes" xml:space="preserve">
          <source>otherwise, the result is an lvalue designating that static data member.</source>
          <target state="translated">그렇지 않으면 결과는 해당 정적 데이터 멤버를 지정하는 lvalue입니다.</target>
        </trans-unit>
        <trans-unit id="5942f6905a1e653a5c6239ebdd26ae2e1af1f368" translate="yes" xml:space="preserve">
          <source>otherwise, the result is unspecified</source>
          <target state="translated">그렇지 않으면 결과가 지정되지 않습니다</target>
        </trans-unit>
        <trans-unit id="9366a9e21a3721361a0f89bb10e5fee0a5a51b3c" translate="yes" xml:space="preserve">
          <source>otherwise, the set is the set of all types</source>
          <target state="translated">그렇지 않으면 세트는 모든 유형의 세트입니다</target>
        </trans-unit>
        <trans-unit id="7a5e4d7dfbf5b0c94fab1358d9f16a81dbaed5ec" translate="yes" xml:space="preserve">
          <source>otherwise, will pad before</source>
          <target state="translated">그렇지 않으면 전에 패딩합니다</target>
        </trans-unit>
        <trans-unit id="0c5411f5ed614f77d7c4164f0e6f75588fdf2720" translate="yes" xml:space="preserve">
          <source>otherwise, will use conversion specifier &lt;code&gt;%G&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면 전환 지정자 &lt;code&gt;%G&lt;/code&gt; 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f4800df8d1bc61fc95220645938cd65532a64067" translate="yes" xml:space="preserve">
          <source>out</source>
          <target state="translated">out</target>
        </trans-unit>
        <trans-unit id="413aa5e5f92be696fe612d23e5a90e8dee605dea" translate="yes" xml:space="preserve">
          <source>out-of-bounds index referred the undefined primary template</source>
          <target state="translated">범위를 벗어난 인덱스는 정의되지 않은 기본 템플릿을 참조했습니다.</target>
        </trans-unit>
        <trans-unit id="ef872575887f53875d81ae1d8c156395152b5dfd" translate="yes" xml:space="preserve">
          <source>out-of-bounds index resulted in undefined behavior</source>
          <target state="translated">범위를 벗어난 인덱스로 인해 정의되지 않은 동작이 발생했습니다</target>
        </trans-unit>
        <trans-unit id="4c41a9bfbeab14992d757ab7c457d6dadbabeb0d" translate="yes" xml:space="preserve">
          <source>out-parameter for error reporting in the non-throwing overload</source>
          <target state="translated">비 투척 과부하에서 오류보고를위한 외부 매개 변수</target>
        </trans-unit>
        <trans-unit id="bd381ccf5feabd5257eedca474acace3565fb0de" translate="yes" xml:space="preserve">
          <source>out-parameter for error reporting in the non-throwing overloads</source>
          <target state="translated">비 투척 과부하에서 오류보고를위한 외부 매개 변수</target>
        </trans-unit>
        <trans-unit id="5b2a62458f300c9c6890884f9cbc33cb39415e7a" translate="yes" xml:space="preserve">
          <source>out_of_range</source>
          <target state="translated">out_of_range</target>
        </trans-unit>
        <trans-unit id="e8773ac79bcde9e4374e204797cc25e4369f490e" translate="yes" xml:space="preserve">
          <source>outerAlloc</source>
          <target state="translated">outerAlloc</target>
        </trans-unit>
        <trans-unit id="e39af021bd199ac3c1db7085c7df5cebacc11c78" translate="yes" xml:space="preserve">
          <source>outer_allocator</source>
          <target state="translated">outer_allocator</target>
        </trans-unit>
        <trans-unit id="ce6b62e451aea0de7d7ac216bf57af095b20e350" translate="yes" xml:space="preserve">
          <source>output file stream to write to</source>
          <target state="translated">쓸 출력 파일 스트림</target>
        </trans-unit>
        <trans-unit id="a11a5b57c8b0975e1533e01f3b7f6c20eed17c11" translate="yes" xml:space="preserve">
          <source>output iterator such that the expression &lt;code&gt;*dest=rt&lt;/code&gt; is valid for a value &lt;code&gt;rt&lt;/code&gt; of &lt;code&gt;result_type&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;*dest=rt&lt;/code&gt; 표현식 이 &lt;code&gt;result_type&lt;/code&gt; 의 값 &lt;code&gt;rt&lt;/code&gt; 에 유효하도록 출력 반복자</target>
        </trans-unit>
        <trans-unit id="f65b8a7c042aeee84d541175563018dfcc619f81" translate="yes" xml:space="preserve">
          <source>output iterator that writes to &lt;code&gt;&lt;a href=&quot;../io/basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io/basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt; 쓰는 출력 반복자</target>
        </trans-unit>
        <trans-unit id="62f80194d19be2b1f9df0f5b34180b7575f7f931" translate="yes" xml:space="preserve">
          <source>output iterator that writes to &lt;code&gt;&lt;a href=&quot;../io/basic_streambuf&quot;&gt;std::basic_streambuf&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../io/basic_streambuf&quot;&gt;std::basic_streambuf&lt;/a&gt;&lt;/code&gt; 쓰는 출력 반복자</target>
        </trans-unit>
        <trans-unit id="28e643600362dd3b395b9b2fd6ffebc149bd0ad8" translate="yes" xml:space="preserve">
          <source>output iterator that writes to &lt;code&gt;&lt;a href=&quot;io/basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io/basic_ostream&quot;&gt;std::basic_ostream&lt;/a&gt;&lt;/code&gt; 쓰는 출력 반복자</target>
        </trans-unit>
        <trans-unit id="1f004fa4cbbe96c0086371a9d00a401b10f5b143" translate="yes" xml:space="preserve">
          <source>output iterator that writes to &lt;code&gt;&lt;a href=&quot;io/basic_streambuf&quot;&gt;std::basic_streambuf&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;io/basic_streambuf&quot;&gt;std::basic_streambuf&lt;/a&gt;&lt;/code&gt; 쓰는 출력 반복자</target>
        </trans-unit>
        <trans-unit id="c98e06449d5b570c155aa5856bdf2e8a6a07a5cb" translate="yes" xml:space="preserve">
          <source>output iterator to store the result of the replacement</source>
          <target state="translated">대체 결과를 저장하기위한 출력 반복자</target>
        </trans-unit>
        <trans-unit id="7dc88f2dce4ff222eb15c575cae78d72f1897040" translate="yes" xml:space="preserve">
          <source>output iterator where the result of the conversion is written</source>
          <target state="translated">변환 결과가 기록되는 출력 반복자</target>
        </trans-unit>
        <trans-unit id="7ffc505e30193f6ae0ed786a0bcb54c29a414b7e" translate="yes" xml:space="preserve">
          <source>output of a signed decimal integer value</source>
          <target state="translated">부호있는 십진 정수 값의 출력</target>
        </trans-unit>
        <trans-unit id="7b36b832a983903c83735e4df976b1c3fc44ec32" translate="yes" xml:space="preserve">
          <source>output of an unsigned decimal integer value</source>
          <target state="translated">부호없는 10 진수 정수 값의 출력</target>
        </trans-unit>
        <trans-unit id="365e037ad84cb72f1cfb53f5e6e392563572a3e3" translate="yes" xml:space="preserve">
          <source>output of an unsigned lowercase hexadecimal integer value</source>
          <target state="translated">부호없는 소문자 16 진 정수 값의 출력</target>
        </trans-unit>
        <trans-unit id="53b63b70bb5e6ce7ae35f4306dc4a24de39d0850" translate="yes" xml:space="preserve">
          <source>output of an unsigned octal integer value</source>
          <target state="translated">부호없는 8 진 정수 값의 출력</target>
        </trans-unit>
        <trans-unit id="3a57058a1e68f27680c785445b681f6cfc86ff6e" translate="yes" xml:space="preserve">
          <source>output of an unsigned uppercase hexadecimal integer value</source>
          <target state="translated">부호없는 대문자 16 진 정수 값의 출력</target>
        </trans-unit>
        <trans-unit id="2cefd8688022dd4ae0bef136789a00b35b4cddf2" translate="yes" xml:space="preserve">
          <source>output sequence</source>
          <target state="translated">출력 순서</target>
        </trans-unit>
        <trans-unit id="7824a06f7477e20b1776944e1f604065a0a05a42" translate="yes" xml:space="preserve">
          <source>output stream</source>
          <target state="translated">출력 스트림</target>
        </trans-unit>
        <trans-unit id="9e13a5aba4f8867a2c517aa9119fd07c1bdcf1a4" translate="yes" xml:space="preserve">
          <source>output stream to insert data to</source>
          <target state="translated">데이터를 삽입 할 출력 스트림</target>
        </trans-unit>
        <trans-unit id="9e7b1a72382bca729712dbefb75d2b004145200a" translate="yes" xml:space="preserve">
          <source>output stream to insert the data into</source>
          <target state="translated">데이터를 삽입하기위한 출력 스트림</target>
        </trans-unit>
        <trans-unit id="61a76e367d55570909cbd78adda9b188b00786b5" translate="yes" xml:space="preserve">
          <source>output stream to insert the data to</source>
          <target state="translated">데이터를 삽입 할 출력 스트림</target>
        </trans-unit>
        <trans-unit id="9bb384c8295acfa7122bc5344e97bf2c0afed557" translate="yes" xml:space="preserve">
          <source>output stream to prepare</source>
          <target state="translated">출력 스트림 준비</target>
        </trans-unit>
        <trans-unit id="e0c6f2685a022e0f8a46fbf87105abda90e4fde8" translate="yes" xml:space="preserve">
          <source>output stream to write the representation to</source>
          <target state="translated">표현을 출력하는 출력 스트림</target>
        </trans-unit>
        <trans-unit id="22749d12733719f81292ef5168277e7e79c8456d" translate="yes" xml:space="preserve">
          <source>output the byte order mark at the start of the output sequence</source>
          <target state="translated">출력 순서의 시작시에 바이트 순서 마크를 출력</target>
        </trans-unit>
        <trans-unit id="1704a4871d44d1189f777d763c7b60a8c7de5269" translate="yes" xml:space="preserve">
          <source>output to stderr via cerr flushes out the pending output on cout, while output to stderr via clog does not.</source>
          <target state="translated">cerr을 통한 stderr 로의 출력은 cout에서 보류중인 출력을 플러시하지만 clog를 통한 stderr 로의 출력은 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b1e4de34a13aff4890913f09b1058055a04e73a6" translate="yes" xml:space="preserve">
          <source>output wide stream to write to</source>
          <target state="translated">쓰기 위해 넓은 스트림 출력</target>
        </trans-unit>
        <trans-unit id="46a3b201b9ca3177eb8ba6b30ac41d0dd9c2b614" translate="yes" xml:space="preserve">
          <source>outputs &lt;code&gt;'\0'&lt;/code&gt;</source>
          <target state="translated">출력 &lt;code&gt;'\0'&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="08495f887278c74eb21dc07388e44debc3cc5401" translate="yes" xml:space="preserve">
          <source>outputs &lt;code&gt;'\n'&lt;/code&gt; and flushes the output stream</source>
          <target state="translated">출력 &lt;code&gt;'\n'&lt;/code&gt; 및 출력 스트림을 플래시</target>
        </trans-unit>
        <trans-unit id="c272e73dbd8fef281a42cbe3cdaefcff9a8bccd7" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;day&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;day&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="4ef65458e8ca1503eb15761c1422b569158e4643" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;day&lt;/code&gt; into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 &lt;code&gt;day&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="b0a5b6aada173fb81a62976efbafba0ccd07e739" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;duration&lt;/code&gt; into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 &lt;code&gt;duration&lt;/code&gt; 을 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="c8364ada0784a04cc7d80467967229e69c618a43" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;local_info&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;local_info&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="8f222c7a039fce82c0e8efd0413b153b72aa65d5" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;month&lt;/code&gt; into a stream</source>
          <target state="translated">한 &lt;code&gt;month&lt;/code&gt; 을 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="0719256dd71a944cccf4d3de0e58826dfdaa3956" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;month&lt;/code&gt; into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 한 &lt;code&gt;month&lt;/code&gt; 을 스트림으로 출력 합니다.</target>
        </trans-unit>
        <trans-unit id="c2c6106b7e25e0feab3874ca2f3de2cfb302b967" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;month_day&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;month_day&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="b59b44d1139dfb636eb7f36aa96238561a679f7a" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;month_day&lt;/code&gt; into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 &lt;code&gt;month_day&lt;/code&gt; 를 스트림으로 출력 합니다.</target>
        </trans-unit>
        <trans-unit id="6d53e77754cd6c1ad2d5380d8cd1a777af795c4a" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;month_day_last&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;month_day_last&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="77ce8a1e23370d3512093d0d57f67c7b6b78b9f9" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;month_weekday&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;month_weekday&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="cabec4d2f7f902730dab87a3bf9c25b7e5e4efd2" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;month_weekday_last&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;month_weekday_last&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="97007a9f830e58aa4ea79f32856a58e4e62b92a5" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;sys_info&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;sys_info&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="1a8f5f3d86781833d56de037c7786cfc60c3df0c" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;time_of_day&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;time_of_day&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="8495491b45695bb18aea64c47f670d08539ce2c1" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;weekday&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;weekday&lt;/code&gt; 을 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="0196c750bd26ddb55b65eb5a5f37ee412aaa97c9" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;weekday&lt;/code&gt; into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 &lt;code&gt;weekday&lt;/code&gt; 을 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="757cdd4d98b132e95d352e8e7a047e0ae44ddf4e" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;weekday_indexed&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;weekday_indexed&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="fef8fa74c8572e5b72f083c4b2717013d66a0f0e" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;weekday_last&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;weekday_last&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="a4678164595863f823ee61ede9b725c5897cc9ee" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;year&lt;/code&gt; into a stream</source>
          <target state="translated">1 &lt;code&gt;year&lt;/code&gt; 을 스트림으로 출력하다</target>
        </trans-unit>
        <trans-unit id="0e64a3b6bd8a84f13fbe3e738234121a06f1c3f6" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;year&lt;/code&gt; into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 &lt;code&gt;year&lt;/code&gt; 을 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="e883c2cccccce46e3a46a2c9373b14523886c986" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;year_month&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;year_month&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="23a7c9496ae9350f4b4f12e06ada493b26ca3c0f" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;year_month&lt;/code&gt; into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 &lt;code&gt;year_month&lt;/code&gt; 를 스트림으로 출력 합니다.</target>
        </trans-unit>
        <trans-unit id="33978f5e1c841ecb7b7039e4131967be990f5e15" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;year_month_day&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;year_month_day&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="a944f3ae6419b4f18f8f95d4e1e2f55dc34beab8" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;year_month_day&lt;/code&gt; into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 &lt;code&gt;year_month_day&lt;/code&gt; 를 스트림으로 출력 합니다.</target>
        </trans-unit>
        <trans-unit id="305aa9ad10008ef25a85160d6c1ea1faca7ce248" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;year_month_day_last&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;year_month_day_last&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="3e3c4e337a9f03368be6b055e39946f12da38444" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;year_month_weekday&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;year_month_weekday&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="2e69f05064f188a36cac929c3e5630abdb335a99" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;year_month_weekday_last&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;year_month_weekday_last&lt;/code&gt; 를 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="a11d6d2cdd2618764d4219f7956e627a06eb7a2b" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;zoned_time&lt;/code&gt; into a stream</source>
          <target state="translated">&lt;code&gt;zoned_time&lt;/code&gt; 을 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="642bf44ada693e515c537f2cf9af2858a1840b22" translate="yes" xml:space="preserve">
          <source>outputs a &lt;code&gt;zoned_time&lt;/code&gt; into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 &lt;code&gt;zoned_time&lt;/code&gt; 을 스트림으로 출력 합니다.</target>
        </trans-unit>
        <trans-unit id="3313ec303ea9db2a14cd5d0e019ddf53173dbb71" translate="yes" xml:space="preserve">
          <source>outputs a file_time into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 file_time을 스트림으로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="2b28bb4077b6eae5d992979a9ff08554d2edd51e" translate="yes" xml:space="preserve">
          <source>outputs a gps_time into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 gps_time을 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="b1df354a15694462b0bafde243a011ec81475799" translate="yes" xml:space="preserve">
          <source>outputs a local_time into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 local_time을 스트림으로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="448d10c458b7bd23c941a14a0a4ef5ece9787f7e" translate="yes" xml:space="preserve">
          <source>outputs a sys_time into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 sys_time을 스트림으로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="8450896ea1b6d54a39f44a46dc998b67d9c1cca3" translate="yes" xml:space="preserve">
          <source>outputs a tai_time into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 tai_time을 스트림으로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="1c056bac519d707416bac56228f0a93ad8ed510c" translate="yes" xml:space="preserve">
          <source>outputs a utc_time into a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 utc_time을 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="b4e7b993508f9c84bf253fa2c026020ab5bc1e61" translate="yes" xml:space="preserve">
          <source>outputs the matched character subsequence</source>
          <target state="translated">일치하는 문자 하위 시퀀스를 출력합니다.</target>
        </trans-unit>
        <trans-unit id="dc4345f2581f41b5bf2cfa6c9f6fc385e0ffba93" translate="yes" xml:space="preserve">
          <source>outputs the value and the category name to an output stream</source>
          <target state="translated">값과 범주 이름을 출력 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="9eddaf36bab656435cdc7d73ce1a6d9f37cf13d0" translate="yes" xml:space="preserve">
          <source>outputs the value of the managed pointer to an output stream</source>
          <target state="translated">관리 포인터의 값을 출력 스트림에 출력합니다</target>
        </trans-unit>
        <trans-unit id="df9752fac85ac7571d8bdfe15b7ad2b80b613d9f" translate="yes" xml:space="preserve">
          <source>outputs the value of the stored pointer to an output stream</source>
          <target state="translated">저장된 포인터의 값을 출력 스트림으로 출력</target>
        </trans-unit>
        <trans-unit id="45e18dad51fd9e8869897fba48fa93d118e5e404" translate="yes" xml:space="preserve">
          <source>outside</source>
          <target state="translated">outside</target>
        </trans-unit>
        <trans-unit id="9457734874f267501b5518062771025a28095487" translate="yes" xml:space="preserve">
          <source>over-aligned type</source>
          <target state="translated">과도하게 정렬 된 유형</target>
        </trans-unit>
        <trans-unit id="10e80591d92f76de99d040a135745da09e965721" translate="yes" xml:space="preserve">
          <source>overflow</source>
          <target state="translated">overflow</target>
        </trans-unit>
        <trans-unit id="1a4602a20cdb7f16250c22acc3ab36016dcfb0c2" translate="yes" xml:space="preserve">
          <source>overflow_error</source>
          <target state="translated">overflow_error</target>
        </trans-unit>
        <trans-unit id="e34546a4e577d0aa3df4580130e12a8276cad0fb" translate="yes" xml:space="preserve">
          <source>overhead). The standard library implementation calls version (1)</source>
          <target state="translated">간접비). 표준 라이브러리 구현은 버전 (1)을 호출합니다.</target>
        </trans-unit>
        <trans-unit id="37c2b9654dfbe507ee0521f8428ba621433bf508" translate="yes" xml:space="preserve">
          <source>overload disambiguation tag matching the tag used by non-throwing operator new</source>
          <target state="translated">비 투사 연산자가 사용하는 태그와 일치하는 과부하 명확성 태그 new</target>
        </trans-unit>
        <trans-unit id="b284ec9cef268e14794d1eacd32bd6e1ef463355" translate="yes" xml:space="preserve">
          <source>overload resolution</source>
          <target state="translated">과부하 해결</target>
        </trans-unit>
        <trans-unit id="dba4816f33d9c220b2a8d374ef52489986654e1b" translate="yes" xml:space="preserve">
          <source>overloaded operators, including conversion, allocation, and deallocation functions refer to the same function from each definition (unless referring to one defined within the definition)</source>
          <target state="translated">변환, 할당 및 할당 해제 기능을 포함하여 오버로드 된 연산자는 각 정의에서 동일한 기능을 참조합니다 (정의 내에 정의 된 기능을 참조하지 않는 한)</target>
        </trans-unit>
        <trans-unit id="3d79ec2038cb9958300cc1502b6f7ddf1d32ba3d" translate="yes" xml:space="preserve">
          <source>overloads for arithmetic types</source>
          <target state="translated">산술 유형의 과부하</target>
        </trans-unit>
        <trans-unit id="a0a7ba2ff6276f92fabf72b8e31ce3555d6996e7" translate="yes" xml:space="preserve">
          <source>overloads for iterator types</source>
          <target state="translated">반복자 유형의 과부하</target>
        </trans-unit>
        <trans-unit id="8d7358e850a33a0c38751d5abe8941d471f4edbe" translate="yes" xml:space="preserve">
          <source>overloads taking (void*,size_t,const nothrow_t&amp;amp;) were specified, but could never be called</source>
          <target state="translated">과부하 (void *, size_t, const nothrow_t &amp;amp;)를 지정했지만 호출 할 수 없었습니다</target>
        </trans-unit>
        <trans-unit id="1a95769f3608d94e2e3437861b788d1372b0d1cf" translate="yes" xml:space="preserve">
          <source>override</source>
          <target state="translated">override</target>
        </trans-unit>
        <trans-unit id="35a9d2726990b0429eec186c59fac2fa11d62ffe" translate="yes" xml:space="preserve">
          <source>override specifier</source>
          <target state="translated">재정의 지정자</target>
        </trans-unit>
        <trans-unit id="0f75d94c7b692ef90300468e3034103e0e279714" translate="yes" xml:space="preserve">
          <source>override specifier (since C++11)</source>
          <target state="translated">재정의 지정자 (C ++ 11부터)</target>
        </trans-unit>
        <trans-unit id="91d064fd1293a64580f13a33e58475f3a6d982f2" translate="yes" xml:space="preserve">
          <source>overrides</source>
          <target state="translated">overrides</target>
        </trans-unit>
        <trans-unit id="3147f1fef24dc6746423b62bea28a02c563a6062" translate="yes" xml:space="preserve">
          <source>overwrites every element of the array with the corresponding element of another array</source>
          <target state="translated">배열의 모든 요소를 ​​다른 배열의 해당 요소로 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="96ed1c7c40d555a02927acb313e5f8885426da4a" translate="yes" xml:space="preserve">
          <source>owner_before</source>
          <target state="translated">owner_before</target>
        </trans-unit>
        <trans-unit id="9a6f895e38c9caafacb7a0256dab453a6746bfea" translate="yes" xml:space="preserve">
          <source>owner_less</source>
          <target state="translated">owner_less</target>
        </trans-unit>
        <trans-unit id="e2b5daceb36a66352b4478c7aed184168066425f" translate="yes" xml:space="preserve">
          <source>owner_less&amp;lt;void&amp;gt;</source>
          <target state="translated">owner_less&amp;lt;void&amp;gt;</target>
        </trans-unit>
        <trans-unit id="4c5cd2c6755d7d867dde9fbcf83d9ad8f1bb956f" translate="yes" xml:space="preserve">
          <source>owns</source>
          <target state="translated">owns</target>
        </trans-unit>
        <trans-unit id="1c7e6baec95099241975905b8ce02ab0534ee47a" translate="yes" xml:space="preserve">
          <source>owns_lock</source>
          <target state="translated">owns_lock</target>
        </trans-unit>
        <trans-unit id="516b9783fca517eecbd1d064da2d165310b19759" translate="yes" xml:space="preserve">
          <source>p</source>
          <target state="translated">p</target>
        </trans-unit>
        <trans-unit id="ddf5df93a2495765290d7224670f09bc886b89b9" translate="yes" xml:space="preserve">
          <source>p, expected</source>
          <target state="translated">p, 예상</target>
        </trans-unit>
        <trans-unit id="45891a9741576e7803be4d463ac5f217934e248e" translate="yes" xml:space="preserve">
          <source>p1, p2</source>
          <target state="translated">p1, p2</target>
        </trans-unit>
        <trans-unit id="1f566258c19833877252be5a43ce2965c1e76026" translate="yes" xml:space="preserve">
          <source>pImpl breaks this compilation dependency; changes to the implementation do not cause recompilation. Consequently, if a library uses pImpl in its ABI, newer versions of the library may change the implementation while remaining ABI-compatible with older versions.</source>
          <target state="translated">pImpl은이 컴파일 종속성을 중단합니다. 구현 변경으로 인해 재 컴파일이 발생하지 않습니다. 따라서 라이브러리가 ABI에서 pImpl을 사용하는 경우 최신 버전의 라이브러리는 이전 버전과 ABI 호환을 유지하면서 구현을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6acd621280932e6f3f2f8783e06992590b6c7a53" translate="yes" xml:space="preserve">
          <source>pack</source>
          <target state="translated">pack</target>
        </trans-unit>
        <trans-unit id="ca7a7c50fd4f6e90e11ca8658a10fd39d3fd36b3" translate="yes" xml:space="preserve">
          <source>packaged task whose state to swap with</source>
          <target state="translated">상태를 바꿀 패키지 작업</target>
        </trans-unit>
        <trans-unit id="ee0fe150a1648a0009c443da6d2922bd757d5ddf" translate="yes" xml:space="preserve">
          <source>packaged tasks whose states to swap</source>
          <target state="translated">상태를 바꿀 패키지 작업</target>
        </trans-unit>
        <trans-unit id="5c243f267ff6d79dd5e228549b4c267a8e812308" translate="yes" xml:space="preserve">
          <source>packaged_task</source>
          <target state="translated">packaged_task</target>
        </trans-unit>
        <trans-unit id="82b25a31363a64aabd74b67298af45204a180d0d" translate="yes" xml:space="preserve">
          <source>packages a function to store its return value for asynchronous retrieval</source>
          <target state="translated">비동기 검색을 위해 반환 값을 저장하는 함수를 패키지화합니다.</target>
        </trans-unit>
        <trans-unit id="492aa26f18b42f5faf7cca2d89750b7d924b37bc" translate="yes" xml:space="preserve">
          <source>packs the output of a random number engine into blocks of a specified number of bits</source>
          <target state="translated">난수 엔진의 출력을 지정된 비트 수의 블록으로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="dd4355d9d6a2995312181255c8360adb304d044d" translate="yes" xml:space="preserve">
          <source>padding</source>
          <target state="translated">padding</target>
        </trans-unit>
        <trans-unit id="d2c2ce0216aad2d3f280b05422e55b0972043af1" translate="yes" xml:space="preserve">
          <source>padding character used when the results needs to be padded to the field width</source>
          <target state="translated">결과를 필드 너비에 채워야 할 때 사용되는 채우기 문자</target>
        </trans-unit>
        <trans-unit id="20166cc53d5425725047eed891b696d5a1eafd10" translate="yes" xml:space="preserve">
          <source>pair</source>
          <target state="translated">pair</target>
        </trans-unit>
        <trans-unit id="a48b466c1d14cba0acdae89597da274994d5105b" translate="yes" xml:space="preserve">
          <source>pair of &lt;a href=&quot;../../named_req/inputiterator&quot;&gt;LegacyInputIterators&lt;/a&gt; that specify a UTF-8 encoded character sequence</source>
          <target state="translated">UTF-8 인코딩 문자 시퀀스를 지정하는 &lt;a href=&quot;../../named_req/inputiterator&quot;&gt;LegacyInputIterator&lt;/a&gt; 쌍</target>
        </trans-unit>
        <trans-unit id="010008313f26e750193971eb048d0fb0b52d30e8" translate="yes" xml:space="preserve">
          <source>pair of &lt;a href=&quot;../../named_req/inputiterator&quot;&gt;LegacyInputIterators&lt;/a&gt; that specify a character sequence</source>
          <target state="translated">문자 순서를 지정하는 &lt;a href=&quot;../../named_req/inputiterator&quot;&gt;LegacyInputIterator&lt;/a&gt; 쌍</target>
        </trans-unit>
        <trans-unit id="bf023b7a6d390654ddbf087f7d3a28ad68393905" translate="yes" xml:space="preserve">
          <source>pair of &lt;a href=&quot;../../named_req/inputiterator&quot;&gt;LegacyInputIterators&lt;/a&gt; that specify a multicharacter sequence that represents a path name</source>
          <target state="translated">경로 이름을 나타내는 다중 문자 시퀀스를 지정하는 &lt;a href=&quot;../../named_req/inputiterator&quot;&gt;LegacyInputIterator&lt;/a&gt; 쌍</target>
        </trans-unit>
        <trans-unit id="7ef676a30a5447c8d453412af2e3019baa460b8e" translate="yes" xml:space="preserve">
          <source>pair of iterators forming the range from which to make the sampling (the population)</source>
          <target state="translated">샘플링을 수행 할 범위 (집단)를 형성하는 반복자 쌍</target>
        </trans-unit>
        <trans-unit id="9293edb3b77df0588690672e36258892543b4bec" translate="yes" xml:space="preserve">
          <source>pair of values to replace the contents of this pair</source>
          <target state="translated">이 쌍의 내용을 대체 할 값 쌍</target>
        </trans-unit>
        <trans-unit id="5fbc2ab76f40905c0321a272973bd7fe7311eeae" translate="yes" xml:space="preserve">
          <source>pair of values to swap</source>
          <target state="translated">교환 할 값 쌍</target>
        </trans-unit>
        <trans-unit id="4067a31a2395b3963ef8bb7ae86001e5e575a5da" translate="yes" xml:space="preserve">
          <source>pair of values used to initialize both elements of this 2-tuple</source>
          <target state="translated">이 2- 튜플의 두 요소를 초기화하는 데 사용되는 값 쌍</target>
        </trans-unit>
        <trans-unit id="120a735d67c84f49807aa5f80603b180f204b55c" translate="yes" xml:space="preserve">
          <source>pair of values used to initialize both elements of this pair</source>
          <target state="translated">이 쌍의 두 요소를 초기화하는 데 사용되는 값 쌍</target>
        </trans-unit>
        <trans-unit id="30430fa8525dd9d114a885a21ef41e8154b56928" translate="yes" xml:space="preserve">
          <source>pair piecewise construction may copy the arguments</source>
          <target state="translated">쌍으로 구성하면 인수를 복사 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="40afdf601cb8f74a4d0fab5b2fa8b03231b3122c" translate="yes" xml:space="preserve">
          <source>pair to replace the contents of this 2-tuple</source>
          <target state="translated">이 2 개의 튜플의 내용을 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="17eea86290a4f74f1e6712109d162404205c37bf" translate="yes" xml:space="preserve">
          <source>pair whose contents to extract</source>
          <target state="translated">내용을 추출 할 쌍</target>
        </trans-unit>
        <trans-unit id="de27b295d85a33be3a5b460bf80592c0a2e88f6e" translate="yes" xml:space="preserve">
          <source>pairs to compare</source>
          <target state="translated">비교할 쌍</target>
        </trans-unit>
        <trans-unit id="555cadc072eccaf750e6c49c19e696da497c47af" translate="yes" xml:space="preserve">
          <source>pairs whose contents to swap</source>
          <target state="translated">내용을 바꿀 쌍</target>
        </trans-unit>
        <trans-unit id="7d4d2662d1b8b4a06ebf11d690c56e7140e9eba2" translate="yes" xml:space="preserve">
          <source>palloc</source>
          <target state="translated">palloc</target>
        </trans-unit>
        <trans-unit id="849c1d6f8f00978660ac8562dbf9f8bcb33db3ef" translate="yes" xml:space="preserve">
          <source>parallel forward progress guarantee</source>
          <target state="translated">병렬 진행 진행 보증</target>
        </trans-unit>
        <trans-unit id="df06651788c884556a0b4b290fb40475ec9a45ba" translate="yes" xml:space="preserve">
          <source>param</source>
          <target state="translated">param</target>
        </trans-unit>
        <trans-unit id="094311c7640a8b4787c78f63161f0cbd0c893523" translate="yes" xml:space="preserve">
          <source>parameter and &amp;beta; is known as the</source>
          <target state="translated">매개 변수와 &amp;beta;는</target>
        </trans-unit>
        <trans-unit id="08c53dbe35a72ae21e083dfa554fa3b2b93ca87c" translate="yes" xml:space="preserve">
          <source>parameter declarations</source>
          <target state="translated">매개 변수 선언</target>
        </trans-unit>
        <trans-unit id="8bae887eb64c9d99c63415bbc9cac9692e6fad60" translate="yes" xml:space="preserve">
          <source>parameter mapping</source>
          <target state="translated">파라미터 매핑</target>
        </trans-unit>
        <trans-unit id="027f307694ad70ce0758f43866d59f4a3db1d2c6" translate="yes" xml:space="preserve">
          <source>parameter type list (but not the return type)</source>
          <target state="translated">매개 변수 유형 목록 (반환 유형은 아님)</target>
        </trans-unit>
        <trans-unit id="df28bf7b3a2496c15255bf4f8bd34b86b72f28f1" translate="yes" xml:space="preserve">
          <source>parameter-list</source>
          <target state="translated">parameter-list</target>
        </trans-unit>
        <trans-unit id="caa98615005e80047c7381959471f4a0a8c11373" translate="yes" xml:space="preserve">
          <source>parameter-pack</source>
          <target state="translated">parameter-pack</target>
        </trans-unit>
        <trans-unit id="15fd8ff31b11e44465a60dd5bcfade2c4ff42c01" translate="yes" xml:space="preserve">
          <source>parameter-pack&lt;code&gt;...&lt;/code&gt;</source>
          <target state="translated">parameter-pack&lt;code&gt;...&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="648d85d4deed6cb9dfdf5959665ccd0d4101b6d1" translate="yes" xml:space="preserve">
          <source>parameter.</source>
          <target state="translated">parameter.</target>
        </trans-unit>
        <trans-unit id="1ca3d271d5d6ff7a0aa776819d8ba1d2d284b41e" translate="yes" xml:space="preserve">
          <source>parameter. It represents the half-width at half-maximum (HWHM) and is also called scale parameter. The default value is &lt;code&gt;1.0&lt;/code&gt;.</source>
          <target state="translated">매개 변수. 절반 최대 반폭 (HWHM)을 나타내며 스케일 매개 변수라고도합니다. 기본값은 &lt;code&gt;1.0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="aa22f944a347faf33086707fce52b07dc4f28c4b" translate="yes" xml:space="preserve">
          <source>parameter. It specifies the location of the peak and is also called location parameter. The default value is &lt;code&gt;0.0&lt;/code&gt;.</source>
          <target state="translated">매개 변수. 피크의 위치를 ​​지정하며 위치 매개 변수라고도합니다. 기본값은 &lt;code&gt;0.0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c217d34ba4ef603734af9c300a1b569d24cacbe3" translate="yes" xml:space="preserve">
          <source>parameter. The shape parameter is sometimes denoted by the letter k and the scale parameter is sometimes denoted by the letter &amp;theta;.</source>
          <target state="translated">매개 변수. 모양 매개 변수는 때때로 문자 k로 표시되고 스케일 매개 변수는 때때로 문자 &amp;theta;로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="bd2a0f5ff9872c4fb53012a32fc945714cec69e7" translate="yes" xml:space="preserve">
          <source>parameter:</source>
          <target state="translated">parameter:</target>
        </trans-unit>
        <trans-unit id="274674988e1a551b182e31569f43d2edf81ccde1" translate="yes" xml:space="preserve">
          <source>parameters to pass to &lt;code&gt;f&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; 에 전달할 매개 변수</target>
        </trans-unit>
        <trans-unit id="2ed042371fff9565d706b672b1388fb5158bf066" translate="yes" xml:space="preserve">
          <source>parameters to pass to the stored callable function target</source>
          <target state="translated">저장된 호출 가능 함수 대상에 전달할 매개 변수</target>
        </trans-unit>
        <trans-unit id="fd7b034e09b752c24942cd9b0b20c29db2dc3e90" translate="yes" xml:space="preserve">
          <source>params</source>
          <target state="translated">params</target>
        </trans-unit>
        <trans-unit id="737be83a56af1bea26a3c65974fee27cce007d29" translate="yes" xml:space="preserve">
          <source>parent directory</source>
          <target state="translated">부모 디렉토리</target>
        </trans-unit>
        <trans-unit id="955696e5911eae404f635ead1b6e20c2c5d9a206" translate="yes" xml:space="preserve">
          <source>parent_path</source>
          <target state="translated">parent_path</target>
        </trans-unit>
        <trans-unit id="deba527ee1b974266815bd9087bd2a68b7f43065" translate="yes" xml:space="preserve">
          <source>parentheses around the value and the currency symbol are used to represent the sign</source>
          <target state="translated">값 주위의 괄호와 통화 기호는 부호를 나타내는 데 사용됩니다</target>
        </trans-unit>
        <trans-unit id="357a9b049e423ab19c0052030c20a6aa1750227d" translate="yes" xml:space="preserve">
          <source>parenthesized throw-expression not allowed in ?: if other operand is non-void</source>
          <target state="translated">?에서 괄호로 묶은 throw-expression이 허용되지 않음 : 다른 피연산자가 무효가 아닌 경우</target>
        </trans-unit>
        <trans-unit id="376da7c6d50f471f38ca0d0f02a00dcee2a566ae" translate="yes" xml:space="preserve">
          <source>parenthesized throw-expressions accepted</source>
          <target state="translated">괄호로 묶은 던져 표현 허용</target>
        </trans-unit>
        <trans-unit id="8e6d82aa365454d79b931a4663d1c66471443c58" translate="yes" xml:space="preserve">
          <source>parm</source>
          <target state="translated">parm</target>
        </trans-unit>
        <trans-unit id="a4acc31147dfea2c9d21c1b224150e58177e7261" translate="yes" xml:space="preserve">
          <source>parm_n</source>
          <target state="translated">parm_n</target>
        </trans-unit>
        <trans-unit id="89add9adcae083e806e85d1955e79839776fec33" translate="yes" xml:space="preserve">
          <source>parse</source>
          <target state="translated">parse</target>
        </trans-unit>
        <trans-unit id="db398e32d68c7c1e7abb6eec0862546cdc8d764f" translate="yes" xml:space="preserve">
          <source>parses &lt;b&gt;day of the year&lt;/b&gt; as a decimal number (range &lt;code&gt;[001,366]&lt;/code&gt;), leading zeroes permitted but not required</source>
          <target state="translated">&lt;b&gt;연중 일을&lt;/b&gt; 10 진수 (범위 &lt;code&gt;[001,366]&lt;/code&gt; ) 로 구문 분석 &lt;b&gt;하여&lt;/b&gt; 선행 0을 허용하지만 필수는 아닙니다</target>
        </trans-unit>
        <trans-unit id="ee22716439667270406652ee42c8ac7c10736eac" translate="yes" xml:space="preserve">
          <source>parses &lt;b&gt;hour&lt;/b&gt; as a decimal number, 12 hour clock (range &lt;code&gt;[01,12]&lt;/code&gt;), leading zeroes permitted but not required</source>
          <target state="translated">&lt;b&gt;hour&lt;/b&gt; 를 10 진수 12 시간 시계 (범위 &lt;code&gt;[01,12]&lt;/code&gt; ) 로 구문 분석 하며 선행 0은 허용되지만 필수는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="4924a0f02e233c0e3612e6e7ada0c5dff975b30f" translate="yes" xml:space="preserve">
          <source>parses &lt;b&gt;hour&lt;/b&gt; from 12-hour clock using the alternative numeric system, e.g. 六 reads as 06 in ja_JP locale</source>
          <target state="translated">대체 숫자 시스템을 사용하여 12 &lt;b&gt;시간제&lt;/b&gt; 에서 &lt;b&gt;시간&lt;/b&gt; 을 구문 분석 합니다 (예 : _는 ja_JP 로케일에서 06으로 읽습니다)</target>
        </trans-unit>
        <trans-unit id="fdc899b2eb631ffc82a0fd47c1a71dd139469900" translate="yes" xml:space="preserve">
          <source>parses &lt;b&gt;hour&lt;/b&gt; from 24-hour clock using the alternative numeric system, e.g. 十八 parses as 18 in ja_JP locale</source>
          <target state="translated">대체 숫자 시스템을 사용하여 24 &lt;b&gt;시간제&lt;/b&gt; 에서 &lt;b&gt;시간&lt;/b&gt; 을 구문 분석 합니다 (예 : 十八는 ja_JP 로케일에서 18로 구문 분석 함)</target>
        </trans-unit>
        <trans-unit id="f18d2e7d1ed5036fb55346b72337f4c86879e286" translate="yes" xml:space="preserve">
          <source>parses &lt;b&gt;minute&lt;/b&gt; as a decimal number (range &lt;code&gt;[00,59]&lt;/code&gt;), leading zeroes permitted but not required</source>
          <target state="translated">&lt;b&gt;분&lt;/b&gt; 을 10 진수 (범위 &lt;code&gt;[00,59]&lt;/code&gt; ) 로 구문 분석 하여 선행 0을 허용하지만 필수는 아닙니다</target>
        </trans-unit>
        <trans-unit id="eb77b57953d764a82d442ab67526cb9599e47ff1" translate="yes" xml:space="preserve">
          <source>parses &lt;b&gt;minute&lt;/b&gt; using the alternative numeric system, e.g. 二十五 parses as 25 in ja_JP locale</source>
          <target state="translated">대체 숫자 시스템을 사용하여 &lt;b&gt;분&lt;/b&gt; 을 구문 분석 합니다. 예 : 二 十五는 ja_JP 로케일에서 25로 구문 분석합니다</target>
        </trans-unit>
        <trans-unit id="4d44689a4492ae852acb660be4a1c1ed041e6a95" translate="yes" xml:space="preserve">
          <source>parses &lt;b&gt;second&lt;/b&gt; as a decimal number (range &lt;code&gt;[00,60]&lt;/code&gt;), leading zeroes permitted but not required</source>
          <target state="translated">&lt;b&gt;초&lt;/b&gt; 를 10 진수로 분석 하고 (범위 &lt;code&gt;[00,60]&lt;/code&gt; ) 선행 0을 허용하지만 필수는 아닙니다</target>
        </trans-unit>
        <trans-unit id="ff46e74805b75aed3735cf5b8c78a62324193202" translate="yes" xml:space="preserve">
          <source>parses &lt;b&gt;second&lt;/b&gt; using the alternative numeric system, e.g. 二十四 parses as 24 in ja_JP locale</source>
          <target state="translated">대체 숫자 시스템을 사용하여 &lt;b&gt;두 번째&lt;/b&gt; 구문 분석 ( 예 : ja_JP 로케일에서 二十 四 구문 분석은 24)</target>
        </trans-unit>
        <trans-unit id="0b7c8f983fb77cc50328b0fbc573f53017182b9d" translate="yes" xml:space="preserve">
          <source>parses &lt;b&gt;weekday&lt;/b&gt; as a decimal number, where Sunday is &lt;code&gt;0&lt;/code&gt; (range &lt;code&gt;[0-6]&lt;/code&gt;)</source>
          <target state="translated">&lt;b&gt;평일&lt;/b&gt; 을 10 진수로 구문 분석합니다 . 여기서 일요일은 &lt;code&gt;0&lt;/code&gt; (범위 &lt;code&gt;[0-6]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a954307b0ad1770e128a31e1feeff4a04e428c05" translate="yes" xml:space="preserve">
          <source>parses &lt;b&gt;weekday&lt;/b&gt; as a decimal number, where Sunday is &lt;code&gt;0&lt;/code&gt;, using the alternative numeric system, e.g. 二 parses as 2 in ja_JP locale</source>
          <target state="translated">대체 숫자 시스템을 사용하여 일요일이 &lt;code&gt;0&lt;/code&gt; 인 &lt;b&gt;평일&lt;/b&gt; 을 10 진수로 구문 분석 합니다 (예 : ja_JP 로케일에서 2로 구문 분석).</target>
        </trans-unit>
        <trans-unit id="3eb17314f2975aa547f0d4b34516b47e13807d11" translate="yes" xml:space="preserve">
          <source>parses &lt;b&gt;year&lt;/b&gt; as offset from locale's alternative calendar period &lt;code&gt;%EC&lt;/code&gt;</source>
          <target state="translated">로케일의 대체 달력 기간 &lt;code&gt;%EC&lt;/code&gt; 에서 오프셋으로 &lt;b&gt;연도&lt;/b&gt; 를 구문 분석합니다</target>
        </trans-unit>
        <trans-unit id="18f818a9e9e5b94b71657815d4f1fe2efbe9d7c7" translate="yes" xml:space="preserve">
          <source>parses &lt;b&gt;year&lt;/b&gt; in the alternative representation, e.g.平成23年 (year Heisei 23) which writes 2011 to tm_year in ja_JP locale</source>
          <target state="translated">대체 표현으로 &lt;b&gt;연도&lt;/b&gt; 를 구문 분석합니다 ( 예 : ja_JP 로케일로 2011 년을 tm_year에 쓰는 平 成 23 年 (연 Heisei 23)).</target>
        </trans-unit>
        <trans-unit id="ea330c8e654e285a28ee6afff6a0f213cd4404c7" translate="yes" xml:space="preserve">
          <source>parses a &lt;code&gt;chrono&lt;/code&gt; object from a stream</source>
          <target state="translated">스트림에서 &lt;code&gt;chrono&lt;/code&gt; 객체를 파싱</target>
        </trans-unit>
        <trans-unit id="018a408e439c3fa32dd80458752500ed8ac3c634" translate="yes" xml:space="preserve">
          <source>parses a &lt;code&gt;day&lt;/code&gt; from a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 스트림에서 &lt;code&gt;day&lt;/code&gt; 를 구문 분석 합니다.</target>
        </trans-unit>
        <trans-unit id="7d965d3e06299753caf7843584f983d16ed52639" translate="yes" xml:space="preserve">
          <source>parses a &lt;code&gt;duration&lt;/code&gt; from a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 스트림에서 &lt;code&gt;duration&lt;/code&gt; 을 구문 분석 합니다.</target>
        </trans-unit>
        <trans-unit id="206f5fd0c970edbdf697eb355ff6a70bcc5eeab6" translate="yes" xml:space="preserve">
          <source>parses a &lt;code&gt;month&lt;/code&gt; from a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 스트림에서 &lt;code&gt;month&lt;/code&gt; 을 구문 분석 합니다.</target>
        </trans-unit>
        <trans-unit id="6fb571a3faa6bcf5d84feaf1b276f3815e4e05ff" translate="yes" xml:space="preserve">
          <source>parses a &lt;code&gt;month_day&lt;/code&gt; from a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 스트림에서 &lt;code&gt;month_day&lt;/code&gt; 를 구문 분석 합니다.</target>
        </trans-unit>
        <trans-unit id="4b70f6af4a4c1972d3e1e3752be6a8b68429ccaf" translate="yes" xml:space="preserve">
          <source>parses a &lt;code&gt;weekday&lt;/code&gt; from a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 스트림에서 &lt;code&gt;weekday&lt;/code&gt; 을 구문 분석 합니다.</target>
        </trans-unit>
        <trans-unit id="442406fc78ff15f3c127e54f297d341f11ded429" translate="yes" xml:space="preserve">
          <source>parses a &lt;code&gt;year&lt;/code&gt; from a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 스트림에서 &lt;code&gt;year&lt;/code&gt; 을 구문 분석 합니다.</target>
        </trans-unit>
        <trans-unit id="80d2bee1805268902d4b0b857ffe08b267f5e500" translate="yes" xml:space="preserve">
          <source>parses a &lt;code&gt;year_month&lt;/code&gt; from a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 스트림에서 &lt;code&gt;year_month&lt;/code&gt; 를 구문 분석 합니다.</target>
        </trans-unit>
        <trans-unit id="62d92757b1cbf2004577933121c79fbc3b929de5" translate="yes" xml:space="preserve">
          <source>parses a &lt;code&gt;year_month_day&lt;/code&gt; from a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 스트림에서 &lt;code&gt;year_month_day&lt;/code&gt; 를 구문 분석 합니다.</target>
        </trans-unit>
        <trans-unit id="0430e96741d7613d003040db6c2889927eab34ef" translate="yes" xml:space="preserve">
          <source>parses a date/time value of specified format</source>
          <target state="translated">지정된 형식의 날짜 / 시간 값을 구문 분석합니다</target>
        </trans-unit>
        <trans-unit id="ab8885842115e125db870d73571bdaf3a87db497" translate="yes" xml:space="preserve">
          <source>parses a file_time from a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 스트림에서 file_time을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="d46c0c9942a3892f80b171d6b3c626704189df84" translate="yes" xml:space="preserve">
          <source>parses a gps_time from a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 스트림에서 gps_time을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="2386c69762f1c13c984f9d5776e3528c19dae168" translate="yes" xml:space="preserve">
          <source>parses a local_time from a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 스트림에서 local_time을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="1e9609190f477eb63b7a735061f9e6d0cfb8bc5d" translate="yes" xml:space="preserve">
          <source>parses a monetary value</source>
          <target state="translated">화폐 가치를 분석하다</target>
        </trans-unit>
        <trans-unit id="fdd21913bb194be4d1a1a01d790010a5d2f028b1" translate="yes" xml:space="preserve">
          <source>parses a monetary value from an input stream</source>
          <target state="translated">입력 스트림에서 화폐 가치를 분석</target>
        </trans-unit>
        <trans-unit id="e9ec1047d9a696d0f3551b105f30fb9877f2f69e" translate="yes" xml:space="preserve">
          <source>parses a number from an input stream</source>
          <target state="translated">입력 스트림에서 숫자를 파싱</target>
        </trans-unit>
        <trans-unit id="50e69ff41aaf4559775cc9797a28f201aff02d2d" translate="yes" xml:space="preserve">
          <source>parses a sys_time from a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 스트림에서 sys_time을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="5177a12e2ce523830c7d3f0913bf5ac861fb0e4e" translate="yes" xml:space="preserve">
          <source>parses a tai_time from a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 스트림에서 tai_time을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="c2f46cf16e7c5a2d4704f864649d1261c25acfae" translate="yes" xml:space="preserve">
          <source>parses a utc_time from a stream according to the provided format</source>
          <target state="translated">제공된 형식에 따라 스트림에서 utc_time을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="84a9a3cc1792ac29ccba60f5a8ce4bc28b8ae719" translate="yes" xml:space="preserve">
          <source>parses and constructs a monetary value from an input character sequence</source>
          <target state="translated">입력 문자 시퀀스에서 화폐 가치를 분석하고 구성</target>
        </trans-unit>
        <trans-unit id="4a20b7ca5a04187edb304bfaba23682b0d86a547" translate="yes" xml:space="preserve">
          <source>parses full &lt;b&gt;year&lt;/b&gt; as a 4 digit decimal number, leading zeroes permitted but not required</source>
          <target state="translated">&lt;b&gt;1 년&lt;/b&gt; 전체를 4 자리 10 진수로 구문 분석하며 앞에 오는 0은 허용되지만 필수는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="199576f40b7b85a3b4ca72223e6d950cffe5f071" translate="yes" xml:space="preserve">
          <source>parses last 2 digits of &lt;b&gt;year&lt;/b&gt; as a decimal number. Range &lt;code&gt;[69,99]&lt;/code&gt; results in values 1969 to 1999, range &lt;code&gt;[00,68]&lt;/code&gt; results in 2000-2068</source>
          <target state="translated">&lt;b&gt;연도의&lt;/b&gt; 마지막 두 자리를 10 진수로 구문 분석 합니다. 범위 &lt;code&gt;[69,99]&lt;/code&gt; 는 1969에서 1999 사이의 값이되며 범위 &lt;code&gt;[00,68]&lt;/code&gt; 은 2000-2068의 결과입니다</target>
        </trans-unit>
        <trans-unit id="0ebd4ec653189663cddc494930816f973c32bc2f" translate="yes" xml:space="preserve">
          <source>parses last 2 digits of &lt;b&gt;year&lt;/b&gt; using the alternative numeric system, e.g. 十一 is parsed as 11 in ja_JP locale</source>
          <target state="translated">대체 숫자 시스템을 사용하여 &lt;b&gt;연도의&lt;/b&gt; 마지막 2 자리를 구문 분석 합니다. 예를 들어 十一는 ja_JP 로케일에서 11로 구문 분석됩니다</target>
        </trans-unit>
        <trans-unit id="cc17714f75b3a58d3df00e20b81a1b0e0bc20cb9" translate="yes" xml:space="preserve">
          <source>parses locale's standard 12-hour clock time (in POSIX, &lt;b&gt;&quot;%I : %M : %S %p&quot;&lt;/b&gt;)</source>
          <target state="translated">로캘의 표준 12 시간 시계 시간을 구문 분석합니다 (POSIX에서 &lt;b&gt;&quot;% I : % M : % S % p&quot;&lt;/b&gt; ).</target>
        </trans-unit>
        <trans-unit id="049706b44f57c89524ff2c956dc3d6c984a90d7c" translate="yes" xml:space="preserve">
          <source>parses narrow string representations of date and time</source>
          <target state="translated">날짜와 시간의 좁은 문자열 표현을 구문 분석합니다</target>
        </trans-unit>
        <trans-unit id="c1c731dc57f5fb26bafa3979401dd0fcdd60c84d" translate="yes" xml:space="preserve">
          <source>parses narrow string representations of date and time using custom input iterator</source>
          <target state="translated">사용자 정의 입력 반복자를 사용하여 날짜 및 시간의 좁은 문자열 표현을 구문 분석합니다</target>
        </trans-unit>
        <trans-unit id="5f3d757eaf5219e6fa443e27a16aa9b0eacc9e9f" translate="yes" xml:space="preserve">
          <source>parses narrow string representations of monetary values</source>
          <target state="translated">화폐 가치의 좁은 문자열 표현을 파싱</target>
        </trans-unit>
        <trans-unit id="09354742a52013d6f925fdd695a5071aed24fb88" translate="yes" xml:space="preserve">
          <source>parses narrow string representations of monetary values using custom input iterator</source>
          <target state="translated">사용자 정의 입력 반복자를 사용하여 통화 값의 좁은 문자열 표현을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="23595053e5d5a0cd1eacd643adef579523573d02" translate="yes" xml:space="preserve">
          <source>parses numeric values from an input character sequence</source>
          <target state="translated">입력 문자 시퀀스에서 숫자 값을 구문 분석합니다</target>
        </trans-unit>
        <trans-unit id="3b055a81956ee3e511235a0237538a2f8b45079f" translate="yes" xml:space="preserve">
          <source>parses the &lt;b&gt;day of the month&lt;/b&gt; as a decimal number (range &lt;code&gt;[01,31]&lt;/code&gt;), leading zeroes permitted but not required</source>
          <target state="translated">&lt;b&gt;월&lt;/b&gt; 의 &lt;b&gt;일을&lt;/b&gt; 10 진수 (범위 &lt;code&gt;[01,31]&lt;/code&gt; ) 로 구문 분석하여 앞에 오는 0을 허용하지만 필수는 아닙니다</target>
        </trans-unit>
        <trans-unit id="be50151d0ff2ad92bc23d85688b0a446b592e4b5" translate="yes" xml:space="preserve">
          <source>parses the &lt;b&gt;day of the month&lt;/b&gt; using the alternative numeric system, e.g 二十七 parses as 27 in ja_JP locale, leading zeroes permitted but not required</source>
          <target state="translated">대체 숫자 시스템을 사용하여 &lt;b&gt;날짜를&lt;/b&gt; 구문 분석합니다 ( 예 : 二 十七 ja_JP 로케일에서 27로 구문 분석, 선행 0은 허용되지만 필수는 아님)</target>
        </trans-unit>
        <trans-unit id="f4c01e844ce5b9e35d478c91f640f00e458b8e63" translate="yes" xml:space="preserve">
          <source>parses the &lt;b&gt;hour&lt;/b&gt; as a decimal number, 24 hour clock (range &lt;code&gt;[00-23]&lt;/code&gt;), leading zeroes permitted but not required</source>
          <target state="translated">&lt;b&gt;시간&lt;/b&gt; 을 10 진수 24 시간 시계 (범위 &lt;code&gt;[00-23]&lt;/code&gt; ) 로 구문 분석하여 선행 0을 허용하지만 필수는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="2e5291e729d8b20b0d5b5cb195b546f6587a467e" translate="yes" xml:space="preserve">
          <source>parses the &lt;b&gt;month&lt;/b&gt; as a decimal number (range &lt;code&gt;[01,12]&lt;/code&gt;), leading zeroes permitted but not required</source>
          <target state="translated">&lt;b&gt;월&lt;/b&gt; 을 10 진수 (범위 &lt;code&gt;[01,12]&lt;/code&gt; ) 로 구문 분석하여 선행 0을 허용하지만 필수는 아닙니다</target>
        </trans-unit>
        <trans-unit id="929a0d7b5e17cd9a9bfe39ff464656e7dc1969cd" translate="yes" xml:space="preserve">
          <source>parses the &lt;b&gt;month&lt;/b&gt; using the alternative numeric system, e.g. 十二 parses as 12 in ja_JP locale</source>
          <target state="translated">대체 숫자 시스템을 사용 하여 &lt;b&gt;월&lt;/b&gt; 을 구문 분석합니다 ( 예 : ja_JP 로케일에서 十二 구문을 12로 구문 분석)</target>
        </trans-unit>
        <trans-unit id="e75844490768f82138d6852d5d1a365ef54fee09" translate="yes" xml:space="preserve">
          <source>parses the &lt;b&gt;week of the year&lt;/b&gt; as a decimal number (Monday is the first day of the week) (range &lt;code&gt;[00,53]&lt;/code&gt;), leading zeroes permitted but not required</source>
          <target state="translated">&lt;b&gt;연중 주를&lt;/b&gt; 10 진수 (월요일이 첫 번째 요일) (범위 &lt;code&gt;[00,53]&lt;/code&gt; ) 로 구문 분석하며 앞에 0이 허용되지만 필수는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="97ab7b4801433753d4f174433414d7f4f79d8e4a" translate="yes" xml:space="preserve">
          <source>parses the &lt;b&gt;week of the year&lt;/b&gt; as a decimal number (Sunday is the first day of the week) (range &lt;code&gt;[00,53]&lt;/code&gt;), leading zeroes permitted but not required</source>
          <target state="translated">&lt;b&gt;연중 주를&lt;/b&gt; 10 진수 (일요일이 첫 번째 요일) (범위 &lt;code&gt;[00,53]&lt;/code&gt; ) 로 구문 분석하며 선행 0은 허용되지만 필수는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0ee18ad964d80a07a22665492a8f48284256dac0" translate="yes" xml:space="preserve">
          <source>parses the &lt;b&gt;week of the year&lt;/b&gt;, as by &lt;code&gt;%U&lt;/code&gt;, using the alternative numeric system, e.g. 五十二 parses as 52 in ja_JP locale</source>
          <target state="translated">구문 분석 할 &lt;b&gt;올해의 주&lt;/b&gt; 등에 의해, &lt;code&gt;%U&lt;/code&gt; 대체 숫자 시스템을 사용하여, 예를 들어五十二파싱는 ko_KR 로케일 52</target>
        </trans-unit>
        <trans-unit id="ce9fe9bc0c24c675bd658c2601c41928192cf100" translate="yes" xml:space="preserve">
          <source>parses the &lt;b&gt;week of the year&lt;/b&gt;, as by &lt;code&gt;%W&lt;/code&gt;, using the alternative numeric system, e.g. 五十二 parses as 52 in ja_JP locale</source>
          <target state="translated">구문 분석 할 &lt;b&gt;년 주&lt;/b&gt; 등에 의해, &lt;code&gt;%W&lt;/code&gt; 대안 숫자 시스템을 사용하여, 예五十二파싱는 ko_KR 로케일 52</target>
        </trans-unit>
        <trans-unit id="d81147552ac421669ea5dd02541c50278b14d232" translate="yes" xml:space="preserve">
          <source>parses the first 2 digits of &lt;b&gt;year&lt;/b&gt; as a decimal number (range &lt;code&gt;[00,99]&lt;/code&gt;)</source>
          <target state="translated">&lt;b&gt;연도&lt;/b&gt; 의 처음 두 자리를 10 진수로 구문 분석합니다 (범위 &lt;code&gt;[00,99]&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="3d3e9cdda62955c901aa6b894a666df6b466e9ae" translate="yes" xml:space="preserve">
          <source>parses the locale's alternative date and time string format, e.g. expecting 平成23年 (year Heisei 23) instead of 2011年 (year 2011) in ja_JP locale</source>
          <target state="translated">로케일의 대체 날짜 및 시간 문자열 형식을 구문 분석합니다 (예 : ja_JP 로케일에서 2011 年 (2011 년) 대신 平 成 23 年 (Heisei 23 년) 예상)</target>
        </trans-unit>
        <trans-unit id="21df391fb3ec851df2e0f653068aeb58f820a469" translate="yes" xml:space="preserve">
          <source>parses the locale's alternative date representation, e.g. expecting 平成23年 (year Heisei 23) instead of 2011年 (year 2011) in ja_JP locale</source>
          <target state="translated">예를 들어 ja_JP 로켈에서 2011 年 (2011 년) 대신 平 成 23 年 (Heisei 23 년)을 예상하여 로케일의 대체 날짜 표현을 구문 분석합니다.</target>
        </trans-unit>
        <trans-unit id="ca897cb0d940d2c04bbdb0338eb0920fb273304e" translate="yes" xml:space="preserve">
          <source>parses the locale's alternative time representation</source>
          <target state="translated">로케일의 대체 시간 표현을 구문 분석합니다</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
