<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="38fa2b975a8b6b4a3d3bf21a07ac779da6179bf8" translate="yes" xml:space="preserve">
          <source>a float &lt;code&gt;cached_gaussian&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6b35fc604217468fc6d89abf074eb38712618f" translate="yes" xml:space="preserve">
          <source>a full string specifying every real and imaginary part, e.g. &lt;code&gt;&amp;lsquo; %.4e %+.4ej %.4e %+.4ej %.4e %+.4ej&amp;rsquo;&lt;/code&gt; for 3 columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a967621935781dbcc252b4a8b7d96f97a3cfb15" translate="yes" xml:space="preserve">
          <source>a future value, &lt;a href=&quot;numpy.fv#numpy.fv&quot;&gt;&lt;code&gt;fv&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e19c74a71f45e1129086651da5d9eac4640584" translate="yes" xml:space="preserve">
          <source>a future value, &lt;a href=&quot;numpy.fv#numpy.fv&quot;&gt;&lt;code&gt;fv&lt;/code&gt;&lt;/a&gt; (e.g., 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1753c0d76b344c4afe3b81d53fc356b2c9ebe4fe" translate="yes" xml:space="preserve">
          <source>a list of length 1, 2, or 3 specifying the ufunc buffer-size, the error mode integer, and the error call-back function. Normally, these values are looked up in a thread-specific dictionary. Passing them here circumvents that look up and uses the low-level specification provided for the error mode. This may be useful, for example, as an optimization for calculations requiring many ufunc calls on small arrays in a loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a016fa87293ad87bf7d20c139907d4294ea1c51" translate="yes" xml:space="preserve">
          <source>a list of specifiers, one per column - in this case, the real and imaginary part must have separate specifiers, e.g. &lt;code&gt;[&amp;lsquo;%.3e + %.3ej&amp;rsquo;, &amp;lsquo;(%.15e%+.15ej)&amp;rsquo;]&lt;/code&gt; for 2 columns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754b3f88fe33809498963069c46fb70a1dd37618" translate="yes" xml:space="preserve">
          <source>a local file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca4cb12a95fc655dfb15fbc902c4327211a0f3f" translate="yes" xml:space="preserve">
          <source>a present value, &lt;a href=&quot;numpy.pv#numpy.pv&quot;&gt;&lt;code&gt;pv&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b5254931af84f023d149f4ef57b6e3483f413e" translate="yes" xml:space="preserve">
          <source>a present value, &lt;a href=&quot;numpy.pv#numpy.pv&quot;&gt;&lt;code&gt;pv&lt;/code&gt;&lt;/a&gt; (e.g., an amount borrowed)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f700e7c94c2cf78162bf09d2c7b35da27688852" translate="yes" xml:space="preserve">
          <source>a remote URL that has been downloaded and stored locally in the &lt;a href=&quot;numpy.datasource#numpy.DataSource&quot;&gt;&lt;code&gt;DataSource&lt;/code&gt;&lt;/a&gt; directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8177c15205bb62fb37d25bf262fbb7d33cc77467" translate="yes" xml:space="preserve">
          <source>a remote URL that has not been downloaded, but is valid and accessible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4908db613729ad16f59838856c8fc6378cb91a" translate="yes" xml:space="preserve">
          <source>a single specifier, &lt;code&gt;fmt=&amp;rsquo;%.4e&amp;rsquo;&lt;/code&gt;, resulting in numbers formatted like &lt;code&gt;&amp;lsquo; (%s+%sj)&amp;rsquo; % (fmt, fmt)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f0357554cfbce37a16e4d5a7d774ab825a16e0" translate="yes" xml:space="preserve">
          <source>a tuple giving the shape of the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a7e14c9afd05529942ab7c758fc5563081473ff" translate="yes" xml:space="preserve">
          <source>a typecode for the data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4909bcee736f21faba4c4b4db99ca3259c9745b0" translate="yes" xml:space="preserve">
          <source>absolute(&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;b&lt;/code&gt;) &amp;lt;= (&lt;code&gt;atol&lt;/code&gt; + &lt;code&gt;rtol&lt;/code&gt; * absolute(&lt;code&gt;b&lt;/code&gt;))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d1bbce297de3c304a9fefc3b483181872a5c6b" translate="yes" xml:space="preserve">
          <source>add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b59bfab0854033aead66d1b6faf7f43e0ee041" translate="yes" xml:space="preserve">
          <source>add_data_dir()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9200d797d00907bd4a67510f47960da2cec4c889" translate="yes" xml:space="preserve">
          <source>add_data_files()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d39e075ad580ed9430d688b578bea0106ca860d7" translate="yes" xml:space="preserve">
          <source>add_extension()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d009ac9f079e7fdced9a90ef1200c3fb1c35715" translate="yes" xml:space="preserve">
          <source>add_headers()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a628a8da50197850cf2b27e98a076e5dfaec48a9" translate="yes" xml:space="preserve">
          <source>add_include_dirs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="679396cba67a48464bf811972c38f924aa64b48e" translate="yes" xml:space="preserve">
          <source>add_installed_library()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d86799367064b55c54776185a9fa95324d5115" translate="yes" xml:space="preserve">
          <source>add_library()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57577ee9b0c4153aed9b6032a828bc2bd94141bd" translate="yes" xml:space="preserve">
          <source>add_npy_pkg_config()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2afe23be8ed398ab8857f6343100631a790dc6cd" translate="yes" xml:space="preserve">
          <source>add_scripts()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383afd61f3ac7b75fb75aad69f134fad0b8ca518" translate="yes" xml:space="preserve">
          <source>add_subpackage()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8751d9764b9e420b466b6d3a1af017a0677f6373" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;numpy.bool_&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99307e4954f163e794234187dca9613b68cf3950" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;numpy.ma.core.MaskedArray&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827cd73e1f786ecc41180e5c9b752f33e09cfa0d" translate="yes" xml:space="preserve">
          <source>alias of &lt;code&gt;numpy.testing._private.nosetester.NoseTester&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02b51f76b609588ff1bb008fcb09d85646814f4d" translate="yes" xml:space="preserve">
          <source>all values are clipped to the region [0, len(&lt;em&gt;op&lt;/em&gt;) ).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e081f07cc9e5db663fff9d5cac2d3850671bcc16" translate="yes" xml:space="preserve">
          <source>along the selected axis. This basic operations is repeated for arrays with greater than 1 dimension so that the reduction takes place for every 1-D sub-array along the selected axis. An iterator with the selected dimension removed handles this looping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e181e2672f11aab90682d40ae1f74cb4a59a352d" translate="yes" xml:space="preserve">
          <source>alternative matrix product with different broadcasting rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c33156b55ff5d884c15ca93f63965475efbc0f" translate="yes" xml:space="preserve">
          <source>an element can be uniquely represented with fewer digits only print it with that many.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="823a758cbccc512d56ec862367d06a05b288cc90" translate="yes" xml:space="preserve">
          <source>an integer &lt;code&gt;has_gauss&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a89b6dbc62e2ecbe0ebcd0a5d73de4e21d1c4f" translate="yes" xml:space="preserve">
          <source>an integer &lt;code&gt;pos&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15910dec81f9c9a98e1ebad416875d0df4e025aa" translate="yes" xml:space="preserve">
          <source>an interest &lt;a href=&quot;numpy.rate#numpy.rate&quot;&gt;&lt;code&gt;rate&lt;/code&gt;&lt;/a&gt; compounded once per period, of which there are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2289bbf94306c82e816811105ebeeca253ecaa1e" translate="yes" xml:space="preserve">
          <source>an ndarray of type &lt;code&gt;str&lt;/code&gt; or &amp;lsquo;unicode`</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826247ffac909fe163f4e2b88062934b2cab458d" translate="yes" xml:space="preserve">
          <source>an ndarray of type &lt;code&gt;str&lt;/code&gt; or &lt;code&gt;unicode&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cffa50a32cb13a240d705317bcec65dd1f31b6ad" translate="yes" xml:space="preserve">
          <source>and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4f65b085945d03c1edb6b232a29375d1161de81" translate="yes" xml:space="preserve">
          <source>and (optional) specification of whether payment is made at the beginning (&lt;code&gt;when&lt;/code&gt; = {&amp;lsquo;begin&amp;rsquo;, 1}) or the end (&lt;code&gt;when&lt;/code&gt; = {&amp;lsquo;end&amp;rsquo;, 0}) of each period</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797c67830de97564fba53da317ed1e492268c79b" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;chebval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D Chebyshev series of the same degrees and sample points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da14b6b88d2fad669bca837faa7ed9c787dac966" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;chebval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D Chebyshev series of the same degrees and sample points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b716423ee6b9dd4aa2dd31986d3fc4926ba22b66" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;hermeval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D HermiteE series of the same degrees and sample points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb7be95d49eb169e5fef85fb85e12dd1e27bfcb" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;hermeval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D HermiteE series of the same degrees and sample points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fad303d6d70cbfff9a7cadca76594a240d4779ba" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;hermval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D Hermite series of the same degrees and sample points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69130e5b9bd31179248eb5d2f9a0cc5ecfe9349f" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;hermval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D Hermite series of the same degrees and sample points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b94de589bf13a5bc17957bebab8021561c8051b" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;lagval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D Laguerre series of the same degrees and sample points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="887de847ecb98d0a4ffe26b974e5d6faac855e03" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;lagval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D Laguerre series of the same degrees and sample points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77be8fffad26eba68998db6b5b7dc00aa86c4875" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;legval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D Legendre series of the same degrees and sample points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fe9099e7bf711386734009f432d373ed86b575a" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;legval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D Legendre series of the same degrees and sample points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1fd063b78f7302ac115ff2db5fed9d22cf0052" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;polyval2d(x, y, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 2-D polynomials of the same degrees and sample points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5af8d835e165267cf6cfd34fea99066b079ba1c" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;np.dot(V, c.flat)&lt;/code&gt; and &lt;code&gt;polyval3d(x, y, z, c)&lt;/code&gt; will be the same up to roundoff. This equivalence is useful both for least squares fitting and for the evaluation of a large number of 3-D polynomials of the same degrees and sample points.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="382d318bf063c46cf188d091802ccd3ceed61a68" translate="yes" xml:space="preserve">
          <source>and &lt;em&gt;q&lt;/em&gt; and &lt;em&gt;r&lt;/em&gt; are the quotient and remainder obtained by dividing &lt;em&gt;j - i&lt;/em&gt; by &lt;em&gt;k&lt;/em&gt;: &lt;em&gt;j - i = q k + r&lt;/em&gt;, so that &lt;em&gt;i + (m - 1) k &amp;lt; j&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22dee2ded64b247edd9bb6cbefb4906380e62c94" translate="yes" xml:space="preserve">
          <source>and Weibull distributions are generalizations of the Rayleigh.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b7fa8b50a0f68e7ae7fb7f5f808bd52fd91e87" translate="yes" xml:space="preserve">
          <source>and a variance of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eba91851b59fbd345fa178868b5887e29f7f53ae" translate="yes" xml:space="preserve">
          <source>and has coefficients</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc9b2575f7bdeb4f2787fbcb14ff87e5fbb029e" translate="yes" xml:space="preserve">
          <source>and is defined up to &lt;code&gt;m - 1&lt;/code&gt; integration constants &lt;code&gt;k&lt;/code&gt;. The constants determine the low-order polynomial part</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4683fb165059225c66d63bb15b9988a1ac779b7" translate="yes" xml:space="preserve">
          <source>and more generally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="664546cd37a839e1b840acdc8c4f50e6856fb9a0" translate="yes" xml:space="preserve">
          <source>and substituting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6e187cb772692898db3e1fc4d23ad7cc69833d" translate="yes" xml:space="preserve">
          <source>and supports advancing an arbitrary number of steps as well as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced0174f90d515de4d6888cde32613f58e4b7761" translate="yes" xml:space="preserve">
          <source>and supports arbitrary advancing and jumping the sequence in increments of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e04253ffbb0d8d03e5791d061b4cb87bb54996d2" translate="yes" xml:space="preserve">
          <source>and that distinct seeds will not run into each other for at least</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6874ad5db55244006ef6ac097dd2fe8ac21f02c" translate="yes" xml:space="preserve">
          <source>and the Standard Cauchy distribution just sets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4cae9d3c50690186c19a112f66b187f09b75655" translate="yes" xml:space="preserve">
          <source>and the argument you are passing is an integer extracted from a NumPy array, then you have stumbled upon this problem. The solution is to modify the &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; type conversion system to accept NumPy array scalars in addition to the standard integer types. Fortunately, this capability has been provided for you. Simply copy the file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33581168ac25635a1502a03f9acdea3d138f136f" translate="yes" xml:space="preserve">
          <source>and the columns of &lt;code&gt;u&lt;/code&gt; are the eigenvectors of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b93a06443dca8775a4bd856d451ba43367d3470" translate="yes" xml:space="preserve">
          <source>and the following code in setup.py:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b8f2299cbba682a4b579a73f467a4ec1857066" translate="yes" xml:space="preserve">
          <source>and the interval of integration is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92fe9067409398d8dd3631850b053951d71f69ef" translate="yes" xml:space="preserve">
          <source>and the value of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed0e732aab882afaf6a1228703532b501012189b" translate="yes" xml:space="preserve">
          <source>and then for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5b8e8768392651dd13b01808c68fe276b01006" translate="yes" xml:space="preserve">
          <source>and thus</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c4523bbdf66e159a75d6197c389881a96a68bb" translate="yes" xml:space="preserve">
          <source>and will be installed as foo.ini in the &amp;lsquo;lib&amp;rsquo; subpath.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c81302cd0823545f8a863a80235cc693225c079a" translate="yes" xml:space="preserve">
          <source>any Python object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec28c258907898600c82ebfbed34c70f2e49b318" translate="yes" xml:space="preserve">
          <source>anywhere within the interval &lt;code&gt;[a, b)&lt;/code&gt;, and zero elsewhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a87fcaba4776688561773c2988046382ce315f29" translate="yes" xml:space="preserve">
          <source>arch type true-aln uint-aln &amp;mdash;- &amp;mdash;- &amp;mdash;&amp;mdash;&amp;ndash; &amp;mdash;&amp;mdash;&amp;ndash; x86_64 complex64 4 8 x86_64 float128 16 8 x86 float96 4 -</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3adb0d1ab1039cafb57396c156866d8e70606717" translate="yes" xml:space="preserve">
          <source>are integers which specify the &lt;a href=&quot;generated/numpy.ndarray.strides#numpy.ndarray.strides&quot;&gt;&lt;code&gt;strides&lt;/code&gt;&lt;/a&gt; of the array. The &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-column-major&quot;&gt;column-major&lt;/a&gt; order (used, for example, in the Fortran language and in &lt;em&gt;Matlab&lt;/em&gt;) and &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-row-major&quot;&gt;row-major&lt;/a&gt; order (used in C) schemes are just specific kinds of strided scheme, and correspond to memory that can be &lt;em&gt;addressed&lt;/em&gt; by the strides:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d263c54f38b65b019759a7add5f9ed7acd93456" translate="yes" xml:space="preserve">
          <source>are negative. The numerous properties of the sine and related functions are included in any standard trigonometry text.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92381ae5f44b48309b90fa949376d9d4d941a336" translate="yes" xml:space="preserve">
          <source>are orthogonal matrices,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669792700179361c9d8fe73151e2b79db8b5caec" translate="yes" xml:space="preserve">
          <source>are the Chebyshev functions of degree</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afadeb92ac28d92d6b69092e6d32440796d181a" translate="yes" xml:space="preserve">
          <source>are the weights. This problem is solved by setting up as the (typically) overdetermined matrix equation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d56af6aa2f265c010d81963817477c3d92c441" translate="yes" xml:space="preserve">
          <source>are the weights. This problem is solved by setting up the (typically) over-determined matrix equation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb04f4d11c6a65b9a5894e03caa30b736a99d26" translate="yes" xml:space="preserve">
          <source>are the weights. This problem is solved by setting up the (typically) overdetermined matrix equation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d46636cf4afdc2dacf36f1f6721764924cafd51" translate="yes" xml:space="preserve">
          <source>argmax()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9763909b010e579a85ed5b5990e3baf43612e411" translate="yes" xml:space="preserve">
          <source>argmin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c562cf9f77bcad33a5839a227c798328253eb298" translate="yes" xml:space="preserve">
          <source>argsort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e0d844833034105ca9d0a0031301081b281f21c" translate="yes" xml:space="preserve">
          <source>array concatenator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2a594f8e6ee27f50955a3a17ae9a3c3dbd440f6" translate="yes" xml:space="preserve">
          <source>arrays to be broadcast together so that the loop progresses in C-style contiguous fashion over the broadcasted array. The corresponding C-structure is the &lt;a href=&quot;#c.PyArrayMultiIterObject&quot;&gt;&lt;code&gt;PyArrayMultiIterObject&lt;/code&gt;&lt;/a&gt; whose memory layout must begin any object, &lt;em&gt;obj&lt;/em&gt;, passed in to the &lt;a href=&quot;c-api.array#c.PyArray_Broadcast&quot;&gt;&lt;code&gt;PyArray_Broadcast&lt;/code&gt;&lt;/a&gt; (obj) function. Broadcasting is performed by adjusting array iterators so that each iterator represents the broadcasted shape and size, but has its strides adjusted so that the correct element from the array is used at each iteration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2de9943568aa25a2f59576f5bf4c9cf947bfe4c" translate="yes" xml:space="preserve">
          <source>ary[2:3]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713b3beefc88807b0a6f0684e0af35113c39a1cc" translate="yes" xml:space="preserve">
          <source>ary[3:]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e96c1cfc8d64c7da732c5c9ff3e4beca0ed7e69" translate="yes" xml:space="preserve">
          <source>ary[:2]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df211ccdd94a63e0bcb9e6ae427a249484a49d60" translate="yes" xml:space="preserve">
          <source>as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a960f0a485739de9ec7e0394dd5e46da6afde09" translate="yes" xml:space="preserve">
          <source>as below</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee457007e2d9666b30d79d9cb8e25f231845260" translate="yes" xml:space="preserve">
          <source>at the beginning (&lt;code&gt;when&lt;/code&gt; = {&amp;lsquo;begin&amp;rsquo;, 1}) or the end (&lt;code&gt;when&lt;/code&gt; = {&amp;lsquo;end&amp;rsquo;, 0}) of each period</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98018726794f8b04a48022ae18afacaad6b59d5e" translate="yes" xml:space="preserve">
          <source>at the end of a test module will run the tests when that module is called in the python interpreter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e086ba9c9e10e78de6d782cc24fedd67fde0aa0f" translate="yes" xml:space="preserve">
          <source>attosecond</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c317cd0735d9046d7675c475fa1c6dce647953f" translate="yes" xml:space="preserve">
          <source>attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="083bcca22f7d139f5a50d8fb6729483051f02a96" translate="yes" xml:space="preserve">
          <source>average for masked arrays &amp;ndash; useful if your data contains &amp;ldquo;missing&amp;rdquo; values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1369bfbbe10bd2ebc62f0589fce7ed99832bc438" translate="yes" xml:space="preserve">
          <source>axis, makes an angle at the origin (measured counter-clockwise from that axis), and departs from the origin. The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d71f5ee7c92d6dc9e92ffdad17b8bd49418f98" translate="yes" xml:space="preserve">
          <source>b</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a75f3a39cafb8c7f65dea6d083ffeea8039d373b" translate="yes" xml:space="preserve">
          <source>base object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e1c8a86a313a7779b1bfcf7cabd8019190084ce" translate="yes" xml:space="preserve">
          <source>be a non-homogeneous stepsize, we minimize the &amp;ldquo;consistency error&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e22fe1595747cabbf0c6dbd3d0193fcaf00847f" translate="yes" xml:space="preserve">
          <source>be a random vector which has components that follow a standard gamma distribution, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a295e0bdde1938d1fbfd343e5a3e569e868e1465" translate="yes" xml:space="preserve">
          <source>beta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="370e9b2e420241288c5f58e112540e67765eedf2" translate="yes" xml:space="preserve">
          <source>between the true gradient and its estimate from a linear combination of the neighboring grid-points:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38e4f23119f7668c81c56c877acdc10f397299d2" translate="yes" xml:space="preserve">
          <source>big-endian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5f3eb11a8562c01ee623d2b5bbe0b69287b0b4" translate="yes" xml:space="preserve">
          <source>binary ufunc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c596313963d944ee7c9dae1238e7716785af61b" translate="yes" xml:space="preserve">
          <source>bitgen - pointer to the bit generator struct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5039d155a71c0a5f7a2b2654ad49cb7ee47a8980" translate="yes" xml:space="preserve">
          <source>bool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48647474b89fa8f56ed6bda0f8148a17b51b97bd" translate="yes" xml:space="preserve">
          <source>boolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72a486442cabd3f8fe75d717b106695d47f6c72" translate="yes" xml:space="preserve">
          <source>boolean (single boolean array); if there is more than one boolean array as index or the shape does not match exactly, the boolean array will be converted to an integer array instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55fe08ce363e1662570c4fe7b96c7e56a55568f5" translate="yes" xml:space="preserve">
          <source>breaking up the inner 1-D loop into bufsize chunks (with a possible remainder).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723e98a2d81120cdb2cafeea0da074deed788ae4" translate="yes" xml:space="preserve">
          <source>broadcast an array to a given shape.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4546e9e027d603e9c2e2dca4965d842153f7f06e" translate="yes" xml:space="preserve">
          <source>broadcast.index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001b43ff0c9a255aabcaf017c15d7f06c9327de8" translate="yes" xml:space="preserve">
          <source>broadcast.iters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae463d3c99a46c06a1a04c8ebf434cdf7bea2ab4" translate="yes" xml:space="preserve">
          <source>broadcast.nd</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f59b3723747ef995372e2df514a875f0b77266" translate="yes" xml:space="preserve">
          <source>broadcast.ndim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58795340849dd72449d2807c5f578701f9a5187a" translate="yes" xml:space="preserve">
          <source>broadcast.numiter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56edfa480a13ddef44b9b091ea2882b26a4d728d" translate="yes" xml:space="preserve">
          <source>broadcast.reset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4302be9815d6142b26e931693ba676d717243ff5" translate="yes" xml:space="preserve">
          <source>broadcast.shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bb73758ac5f83a30015a7a88885b5b708cc414e" translate="yes" xml:space="preserve">
          <source>broadcast.size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="343029df606fb81c3dcc1ca4beb284c059610b41" translate="yes" xml:space="preserve">
          <source>buffers of the specified size created to handle the data from all the inputs and outputs of a ufunc. The default size of a buffer is 10,000 elements. Whenever buffer-based calculation would be needed, but all input arrays are smaller than the buffer size, those misbehaved or incorrectly-typed arrays will be copied before the calculation proceeds. Adjusting the size of the buffer may therefore alter the speed at which ufunc calculations of various sorts are completed. A simple interface for setting this variable is accessible using the function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984b5b8886ad46f0fdc91e64ad75197f42c78692" translate="yes" xml:space="preserve">
          <source>builtin string and buffer objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04321f572e0fabbee0a1a93777cd88d54e09dd4d" translate="yes" xml:space="preserve">
          <source>busdaycalendar.holidays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bae0b2b6fcf64fd9b8a4f9e45f94bb607c5b5f8" translate="yes" xml:space="preserve">
          <source>busdaycalendar.weekmask</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de6166af23fd580ad4ad571cccf47df6413c2dd4" translate="yes" xml:space="preserve">
          <source>but if &lt;code&gt;rate = 0&lt;/code&gt; then:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e7449493d258f7bb8348e8f7cd4455f0ad3d56" translate="yes" xml:space="preserve">
          <source>but if every element in the array can be uniquely represented with an equal number of fewer digits, use that many digits for all elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c633e2eacc0b593ab472c852512249bd4ce0787b" translate="yes" xml:space="preserve">
          <source>by computing a vector &lt;code&gt;x&lt;/code&gt; that minimizes the squared Euclidean 2-norm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40479b6eef6dbf9dda3d35355ab344bc2bfabcd9" translate="yes" xml:space="preserve">
          <source>by directly taking a view of the masked array as a &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;numpy.ndarray&lt;/code&gt;&lt;/a&gt; or one of its subclass (which is actually what using the &lt;a href=&quot;maskedarray.baseclass#numpy.ma.MaskedArray.data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; attribute does).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8283daaf9438ff9c1dd10cc76adcff6d06a04ce" translate="yes" xml:space="preserve">
          <source>by using the &lt;a href=&quot;generated/numpy.ma.getdata#numpy.ma.getdata&quot;&gt;&lt;code&gt;getdata&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a516841ba77a5b4648de2cd0dfcb30ea46dbb4" translate="yes" xml:space="preserve">
          <source>c</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1073936e61f1b10ce87f9dbff9b82ef782adee2b" translate="yes" xml:space="preserve">
          <source>call the iterator&amp;rsquo;s &lt;code&gt;close&lt;/code&gt; method once finished iterating, which will trigger the write-back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63aa3c962332c23c697960da2a61a9def61426e1" translate="yes" xml:space="preserve">
          <source>call: Call a function specified using the &lt;a href=&quot;numpy.seterrcall#numpy.seterrcall&quot;&gt;&lt;code&gt;seterrcall&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51708db3ecef0cfd27706b2aa23721be5883b75a" translate="yes" xml:space="preserve">
          <source>calls &lt;code&gt;val = myiter.next()&lt;/code&gt; repeatedly until &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#StopIteration&quot;&gt;&lt;code&gt;StopIteration&lt;/code&gt;&lt;/a&gt; is raised by the iterator. There are several ways to iterate over an array that may be useful: default iteration, flat iteration, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ea5970d70ac5f73a36e071b5c4433bc114cd92" translate="yes" xml:space="preserve">
          <source>cancastscalarkindto</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5502d07d8688e83594cf91157dbb3e6ad5aa71b4" translate="yes" xml:space="preserve">
          <source>cancastto</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e9b3430d204f0df99d98d8c03dfcf376a8c649" translate="yes" xml:space="preserve">
          <source>castdict</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebef4e6bdecc3f0df29f7de5c3e87a0b7d64410d" translate="yes" xml:space="preserve">
          <source>chararray.T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0886dd26712f2fe3f62874d7a7635cbe157ff05" translate="yes" xml:space="preserve">
          <source>chararray.argsort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e34e755af986f23fd5041b8b7cc617e6754456b3" translate="yes" xml:space="preserve">
          <source>chararray.astype()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c228d15af6ce72f8781676ab954dac9c06550da" translate="yes" xml:space="preserve">
          <source>chararray.base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f2e7f4869844d623e92591aab70f5f6e24214b" translate="yes" xml:space="preserve">
          <source>chararray.copy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b315fbac0e29f3fc03c73b36e10351d32da376ee" translate="yes" xml:space="preserve">
          <source>chararray.count()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3af38aab24ccb67d2c9449b1addc4f3dde89b66e" translate="yes" xml:space="preserve">
          <source>chararray.ctypes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6421e04608afd1aa482a92517e5d34846a27c85c" translate="yes" xml:space="preserve">
          <source>chararray.data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0232137ab8b8ab246e3e2e1fc2820c98db9e86" translate="yes" xml:space="preserve">
          <source>chararray.decode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889579d431306f233f264aaa2f522cd8002799ba" translate="yes" xml:space="preserve">
          <source>chararray.dtype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a35d98272bae2bee59431afb0d19f25eb7ade8d" translate="yes" xml:space="preserve">
          <source>chararray.dump()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1b2985e51ca160b7ec10c06b5046f671382d74" translate="yes" xml:space="preserve">
          <source>chararray.dumps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03b0811474628f6be4083acb70378eab2aa8a130" translate="yes" xml:space="preserve">
          <source>chararray.encode()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d045ecd37690ed3dafe37dd487f97399fad88ad6" translate="yes" xml:space="preserve">
          <source>chararray.endswith()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffcdb5d9c2c0ab6a11f7560e2778b662c6ead5d" translate="yes" xml:space="preserve">
          <source>chararray.expandtabs()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03720bacb068488037411665dd5084d8dbce517c" translate="yes" xml:space="preserve">
          <source>chararray.fill()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd727bc24ae8c548b7423414ac6783801eefda47" translate="yes" xml:space="preserve">
          <source>chararray.find()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f3e3ccd095b73426fac852f3ee7bf59e936f64" translate="yes" xml:space="preserve">
          <source>chararray.flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21002856b53a6441f0d5e344c5d48be638767e39" translate="yes" xml:space="preserve">
          <source>chararray.flat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="095da7c453a206efaff703877886586fd5685d01" translate="yes" xml:space="preserve">
          <source>chararray.flatten()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c8606ecd97087d8212bcffc68979bf5329d8c7b" translate="yes" xml:space="preserve">
          <source>chararray.getfield()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d0dfc685f3a58431ab287e68de034eb55961f99" translate="yes" xml:space="preserve">
          <source>chararray.imag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b8500695c7409aeea012b6b809d4fe43bcb3d7" translate="yes" xml:space="preserve">
          <source>chararray.index()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb20c4bd8ebe0be3bc2cfd18b3e59c42c447154" translate="yes" xml:space="preserve">
          <source>chararray.isalnum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66ecb9b2c5e5b5fcb6b047cb4c9e31417d5c13b" translate="yes" xml:space="preserve">
          <source>chararray.isalpha()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="143613a65da7c189daeb4faf53c4810096e83b3d" translate="yes" xml:space="preserve">
          <source>chararray.isdecimal()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e0213c0d37ff358d18d2ca9e3241f9abbb113c" translate="yes" xml:space="preserve">
          <source>chararray.isdigit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d768e3fa5ec445042ffe66547e027375aba3e72c" translate="yes" xml:space="preserve">
          <source>chararray.islower()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ce33bad5fcbe9bb8578ba7979a9d3d712661922" translate="yes" xml:space="preserve">
          <source>chararray.isnumeric()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7563dfe1944e68a7fe7b7a770ec1e9af568f7f71" translate="yes" xml:space="preserve">
          <source>chararray.isspace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94a0e9047845c243e494978ec22ee72f09f8722a" translate="yes" xml:space="preserve">
          <source>chararray.istitle()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff973ce849e182d387ea033478c5ecd4f26666ca" translate="yes" xml:space="preserve">
          <source>chararray.isupper()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07b3bb5dfab61ae981a8f0a3dcb84be6091ed056" translate="yes" xml:space="preserve">
          <source>chararray.item()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de8c59892875c62ffc1a1ce48b04578445571240" translate="yes" xml:space="preserve">
          <source>chararray.itemsize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f65fa52d4dbbea12feeaca91ccf8c76544703126" translate="yes" xml:space="preserve">
          <source>chararray.join()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020a18b7b7ef5f3e1d15f46c736aae923e0320a4" translate="yes" xml:space="preserve">
          <source>chararray.ljust()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85549df2e98225b226578b8b2cf28279d40f2677" translate="yes" xml:space="preserve">
          <source>chararray.lower()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc5e792d68757d5452a0a7392e5a5593359bdaa" translate="yes" xml:space="preserve">
          <source>chararray.lstrip()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="712efe2d872fefe323b3cb4f74a095c6089f631e" translate="yes" xml:space="preserve">
          <source>chararray.nbytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5da84ca381b2bcb88df35a6fa61a64e7dfe0ec5" translate="yes" xml:space="preserve">
          <source>chararray.ndim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53bcee73d053a28b4c7062ec965a0625b9ce5f32" translate="yes" xml:space="preserve">
          <source>chararray.nonzero()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b1d59cbb6e6290532ba07416863d4ccff19bb5d" translate="yes" xml:space="preserve">
          <source>chararray.put()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c145fdafdb1b4f697e008772eb81d24c87f31c4" translate="yes" xml:space="preserve">
          <source>chararray.ravel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a4a1658890715852e4b3f7954cb7dce6bdc407" translate="yes" xml:space="preserve">
          <source>chararray.real</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc49c60fae14a029c270fa2ce5636735f33304da" translate="yes" xml:space="preserve">
          <source>chararray.repeat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4057ac55ebaae8eb4ccf3adcb9346cac1e18558" translate="yes" xml:space="preserve">
          <source>chararray.replace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27ed5ad9cc1f037913419d39f635cb70b5a3e3c" translate="yes" xml:space="preserve">
          <source>chararray.reshape()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c55368d49823a88748b77a3c014c418e7eafbf4" translate="yes" xml:space="preserve">
          <source>chararray.resize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e17143f324af78cb4a5753b231c1e3f7aa611c83" translate="yes" xml:space="preserve">
          <source>chararray.rfind()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4239c5ca5f8656ae9592f0e373ca0a9215cd52f9" translate="yes" xml:space="preserve">
          <source>chararray.rindex()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a9c1fe3e4518d3ee683abedd9fee18d38f3bc8" translate="yes" xml:space="preserve">
          <source>chararray.rjust()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306a53b506623059a6b9028c93ce8fa2c428a624" translate="yes" xml:space="preserve">
          <source>chararray.rsplit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5eb548163962da5b9d96b40b7f9fc01b7359ad" translate="yes" xml:space="preserve">
          <source>chararray.rstrip()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50b0ad482eabd1fc95445d8eb938a47d547b824e" translate="yes" xml:space="preserve">
          <source>chararray.searchsorted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8a1269d773a72a94193552a016300bc1a7bc267" translate="yes" xml:space="preserve">
          <source>chararray.setfield()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa7150b3d4a7868b081e2994071dacf7abe8e627" translate="yes" xml:space="preserve">
          <source>chararray.setflags()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30076fe7af2da7e4387648aa6c1dba67a4399c0f" translate="yes" xml:space="preserve">
          <source>chararray.shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6e9ddd56ac3e624e2bdf0a0082f90804d58815b" translate="yes" xml:space="preserve">
          <source>chararray.size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7a8f4797b23871a9cd118dee9e7135be60f447" translate="yes" xml:space="preserve">
          <source>chararray.sort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f770eef8be4cc73ef56d96593ba3b62decb2a9c" translate="yes" xml:space="preserve">
          <source>chararray.split()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc07b811ca25bd05973befbd2b31ab3c7596fda" translate="yes" xml:space="preserve">
          <source>chararray.splitlines()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04935a142bacf27094c9711e3676609f938bf684" translate="yes" xml:space="preserve">
          <source>chararray.squeeze()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92b089013501291ca2d9ad9990b60bc62e6f5ad3" translate="yes" xml:space="preserve">
          <source>chararray.startswith()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6ff09354c723678c95a1d20b56ca7ae9157623e" translate="yes" xml:space="preserve">
          <source>chararray.strides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594a551054b5eeb02ba5ac82daf5264a7c130b73" translate="yes" xml:space="preserve">
          <source>chararray.strip()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d89d85706c10d79c9c1a94b4d71f2caea0731c1" translate="yes" xml:space="preserve">
          <source>chararray.swapaxes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed54ca8f1e84b329dd5dfe5f4bcecc51b7949574" translate="yes" xml:space="preserve">
          <source>chararray.swapcase()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606dd5443068499af38925689683c491d45d23a0" translate="yes" xml:space="preserve">
          <source>chararray.take()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b892ea46a6a519b8e38bfeb07f8043b913eead2" translate="yes" xml:space="preserve">
          <source>chararray.title()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b76d2d94f872f842d04fb34ec6a743974f7604" translate="yes" xml:space="preserve">
          <source>chararray.tofile()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbfc507797dad886c94f8f1337de372cd00cd704" translate="yes" xml:space="preserve">
          <source>chararray.tolist()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6cc16936930410ff18660ad5d73749bcc2b6a63" translate="yes" xml:space="preserve">
          <source>chararray.tostring()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01d2b1250e07e89f6bbba7fab6c22db228489f41" translate="yes" xml:space="preserve">
          <source>chararray.translate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6343e9c9a7e24f84b6a29a7abbc9f407502b9c" translate="yes" xml:space="preserve">
          <source>chararray.transpose()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bfa55cfb3d0b77bb03ab483ac428e065685fe3" translate="yes" xml:space="preserve">
          <source>chararray.upper()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00c5462c720bb4df0cee44c74b658ccf3eb3ea6a" translate="yes" xml:space="preserve">
          <source>chararray.view()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dcdfb99c030871657300e47131f41ed74ed92e" translate="yes" xml:space="preserve">
          <source>chararray.zfill()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7135cf4d6d472ba308e86628bd5e53b6a8669ca0" translate="yes" xml:space="preserve">
          <source>chararrays should be created using &lt;a href=&quot;numpy.char.array#numpy.char.array&quot;&gt;&lt;code&gt;numpy.char.array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;numpy.char.asarray#numpy.char.asarray&quot;&gt;&lt;code&gt;numpy.char.asarray&lt;/code&gt;&lt;/a&gt;, rather than this constructor directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9882ebdaffea81f72b5fe1cb9ffd3c121dbe727c" translate="yes" xml:space="preserve">
          <source>choice(a, size=None, replace=True, p=None, axis=0):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d76c34c79cf00add93e463054fe4592f63967161" translate="yes" xml:space="preserve">
          <source>class name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a814a60721cb9d1368e5877060ee79bf1e966c6d" translate="yes" xml:space="preserve">
          <source>class of &lt;a href=&quot;#numpy.ogrid&quot;&gt;&lt;code&gt;ogrid&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.mgrid#numpy.mgrid&quot;&gt;&lt;code&gt;mgrid&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75531da240318b7fed636eec1882b36203273a71" translate="yes" xml:space="preserve">
          <source>class of &lt;a href=&quot;numpy.ogrid#numpy.ogrid&quot;&gt;&lt;code&gt;ogrid&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#numpy.mgrid&quot;&gt;&lt;code&gt;mgrid&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3def21de649e07bec6074edc1295c1dbf2cdb389" translate="yes" xml:space="preserve">
          <source>class.__array__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8b8983057658ed3f6bdc85449803b72b3eaf62c" translate="yes" xml:space="preserve">
          <source>class.__array_finalize__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eddbb2718caf79e115c786ba385877dcd11082b" translate="yes" xml:space="preserve">
          <source>class.__array_function__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5661d1a56502e8ac304b8cfb9310c81795c37acb" translate="yes" xml:space="preserve">
          <source>class.__array_prepare__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="131c845b35b1d855c6e0a8648a35d2a20e71fb72" translate="yes" xml:space="preserve">
          <source>class.__array_priority__</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a99c0e2e81c7dc5265f365bd9f859898939f7f3" translate="yes" xml:space="preserve">
          <source>class.__array_ufunc__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d6fef3822241e04ca21da9bf9dcd3e7a0e96e0" translate="yes" xml:space="preserve">
          <source>class.__array_wrap__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c2a143c1a523e8c38ebec39b270288313b71c4b" translate="yes" xml:space="preserve">
          <source>combination of the four above</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b17a6c606a82dafd93db84a19945afe2d559ed4" translate="yes" xml:space="preserve">
          <source>comments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff51a47a2e8bd4a0e12b2a4ed15def10b2d33eda" translate="yes" xml:space="preserve">
          <source>common usage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f60a5cce0c6d5b2e57e18b2d35ae1e36416abf" translate="yes" xml:space="preserve">
          <source>compare()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc6bb94a5841680eac8b24c50f7f203bddf6efb" translate="yes" xml:space="preserve">
          <source>comparison operators automatically remove whitespace from the end when comparing values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc263fe5becfea01b176b6f2c59c47f5c9e30d7" translate="yes" xml:space="preserve">
          <source>compatible: C char</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f3616403b91bcca29c6d66deaa259fca1c71c2" translate="yes" xml:space="preserve">
          <source>compatible: C double</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a60ffd6205d40bc856a671fa4e08cfcd110cecb" translate="yes" xml:space="preserve">
          <source>compatible: C float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f073b6de757df35ba247c55c3964d7d52b773758" translate="yes" xml:space="preserve">
          <source>compatible: C int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b7f03aa1b19106a86c56ba50e037d5206c806b" translate="yes" xml:space="preserve">
          <source>compatible: C long float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb723e2b32584378f30a8735a6ef6e7629ebbc6b" translate="yes" xml:space="preserve">
          <source>compatible: C long long</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecc77366a9b31571ae5448cf05363adc208831d1" translate="yes" xml:space="preserve">
          <source>compatible: C short</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed63752e426201568429c1b5c39a77e7730a00ec" translate="yes" xml:space="preserve">
          <source>compatible: C unsigned char</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6131bdfb33c7d418305b9d2cdc92ae85a5af9f2a" translate="yes" xml:space="preserve">
          <source>compatible: C unsigned int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f429a2c27a0294f21da19c5c441c9749998f2d" translate="yes" xml:space="preserve">
          <source>compatible: C unsigned short</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6ba6a32bed64cf5a9232cd7c9d35670d71a6b95" translate="yes" xml:space="preserve">
          <source>compatible: Python bool</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a7c3ba21e5c9b98ff9493b3a2332bc01da2acf9" translate="yes" xml:space="preserve">
          <source>compatible: Python bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5c35fe3ca1ebc8ca06a8c3de46cf6805f05c2e" translate="yes" xml:space="preserve">
          <source>compatible: Python complex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccfe9ea4157b60f68bc564e103bab4c8e62c3310" translate="yes" xml:space="preserve">
          <source>compatible: Python float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deaa9d9b419b938f9c813fe1389b8e5d682c08bc" translate="yes" xml:space="preserve">
          <source>compatible: Python int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb789842b4f097658b4d0daf408c1bf46047807e" translate="yes" xml:space="preserve">
          <source>compatible: Python unicode/str</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ff16b36dc77810e63bda254427a1d6965fa127a" translate="yes" xml:space="preserve">
          <source>complex</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0943e701cd3bb43f80ab8d923713de62beda111" translate="yes" xml:space="preserve">
          <source>complex conjugate transpose of &lt;code&gt;self&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad5f2438020ae87682ba05a117c31fb76179fa10" translate="yes" xml:space="preserve">
          <source>complex floating-point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1300290fac80e64e65c897cc636825b3bf98727c" translate="yes" xml:space="preserve">
          <source>complex types are structures with &lt;strong&gt;.real&lt;/strong&gt; and &lt;strong&gt;.imag&lt;/strong&gt; members (in that order).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37255ef72b3305625faa9cc04c3ca5048e18518f" translate="yes" xml:space="preserve">
          <source>complex(nan, 0) is returned for complex nan inputs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83690a45e3eae803665f74f69eb799f7d70796de" translate="yes" xml:space="preserve">
          <source>complex-floating point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd4587e9b05a828702a43458bd940605bda98e3" translate="yes" xml:space="preserve">
          <source>config.add_library(&amp;lsquo;library&amp;rsquo;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd5850fedeefdc811cc0e445479ded0a6afde62b" translate="yes" xml:space="preserve">
          <source>config.add_library()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331bf2074c9d970b8ebe6d7d8e2ba60e3c0d9866" translate="yes" xml:space="preserve">
          <source>config[&amp;lsquo;py_modules&amp;rsquo;].append((packagename, &amp;lsquo;__config__&amp;rsquo;,generate_config_py))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861b5e7fd92cf98d6d3545cff1ed489ad723f192" translate="yes" xml:space="preserve">
          <source>convert single-element &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Union&quot;&gt;&lt;code&gt;ctypes.Union&lt;/code&gt;&lt;/a&gt;s into single-element &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Structure&quot;&gt;&lt;code&gt;ctypes.Structure&lt;/code&gt;&lt;/a&gt;s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f424b5cb8f1c3681591bbe06573826adce5581a" translate="yes" xml:space="preserve">
          <source>coordinate of the outgoing ray&amp;rsquo;s intersection with the unit circle is the sine of that angle. It ranges from -1 for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6545e8d6dcdd2eb58c6821c24f89d1f32babb595" translate="yes" xml:space="preserve">
          <source>copy=True</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f60c889e8ea8c0e2ade969ec8faf5052c61227" translate="yes" xml:space="preserve">
          <source>copying and possibly casting data for any inputs or outputs for which buffers are necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a0dabeeb29109bc2d28ed0ebf2023e137ec5fa" translate="yes" xml:space="preserve">
          <source>copyswap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876097f4459c7470d6688d9ce159e4a8ccab704e" translate="yes" xml:space="preserve">
          <source>copyswapn()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2aed0bd06b228213d0a27ddb7443f7f45243234" translate="yes" xml:space="preserve">
          <source>corresponding function for ndarrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e637d88d91207fbb6f4c83b59c00afe528d0db4" translate="yes" xml:space="preserve">
          <source>corresponds to the offset (in bytes):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46be831c51c8e766d2aebaf7fe6dbef35f54919c" translate="yes" xml:space="preserve">
          <source>create a (read-only) record array from binary data contained in a string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28244d98521e9496fe84466a769190fe12dd1c67" translate="yes" xml:space="preserve">
          <source>create a recarray from a list of records in text form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9767e68c8095efd4a9ea33ce259a6b88dbcf7a7a" translate="yes" xml:space="preserve">
          <source>create a record array from a (flat) list of arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f8915bde7fef5934e28dee4ffea11584d399bef" translate="yes" xml:space="preserve">
          <source>creating a C-structure (usually named &lt;code&gt;Py{Name}Object&lt;/code&gt;) that is binary- compatible with the &lt;a href=&quot;https://docs.python.org/dev/c-api/structures.html#c.PyObject&quot;&gt;&lt;code&gt;PyObject&lt;/code&gt;&lt;/a&gt; structure itself but holds the additional information needed for that particular object;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6ad82f0e649e82403b39a772f1294f3512a9ac1" translate="yes" xml:space="preserve">
          <source>cross product where the last dimension is frozen and must be 3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f38d1083792f074814a156b3c79ea8aa55d751" translate="yes" xml:space="preserve">
          <source>cross1d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f90aad65618261442aaa7b81c1ca6286bc79806" translate="yes" xml:space="preserve">
          <source>ctypes interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d459f0c1fe5f3263aa5ba320fbfa6f7fbe6b0d4" translate="yes" xml:space="preserve">
          <source>current index in broadcasted result</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b798d5ed9f6178d7bd39c0cc2eebe6889dd57698" translate="yes" xml:space="preserve">
          <source>cygwin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dc8e1804c0a14aeb717e91af443219be617042" translate="yes" xml:space="preserve">
          <source>darwin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0698e178c43f5ca032d10e380d5ce7d033ef4d81" translate="yes" xml:space="preserve">
          <source>datatype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ffad089c042f31dcc81269da38bef3ca44ab1f" translate="yes" xml:space="preserve">
          <source>datetime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2620cbc10f5198dd03e3f5a1569eb5dcf9a6a87" translate="yes" xml:space="preserve">
          <source>day</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f613003a3dc4ce3c0aa2ed1706a981b4a8efb7e" translate="yes" xml:space="preserve">
          <source>deciding whether or not to use buffers on the input and output data (mis-aligned and/or wrong data-type)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d03a285acbd7b1cb4c0af2f80e9e9db926c0c9" translate="yes" xml:space="preserve">
          <source>decreases. The covariance matrix shows this clearly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107500c863824eeac2f4fdc0078c651f143cb594" translate="yes" xml:space="preserve">
          <source>decreasing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0ec4c984cc2ae2eeaa723f06ebd1937df5e588" translate="yes" xml:space="preserve">
          <source>depends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bddb160f8427059ace03b13012a6cdcafcdb690f" translate="yes" xml:space="preserve">
          <source>derivative of a polynomial</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63df73b031f4d587816621dedd13df2f4f9e81ee" translate="yes" xml:space="preserve">
          <source>describes the probability of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4e6e3c01fac8a2d031ca58cc4de7fe5906dc8df" translate="yes" xml:space="preserve">
          <source>determine a data-type from formats, names, titles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b8d9663e32a5a6835c5d75b18e60b7e06176ac" translate="yes" xml:space="preserve">
          <source>diagonal 2-D array from a 1-D array specified by the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3aff8b3352ae4e5762d729395050e4c8c2d165d" translate="yes" xml:space="preserve">
          <source>dict or list of dict of keywords to be appended to keywords.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b7dcedc53b850c418147bf57c20afb93f4e6a5c" translate="yes" xml:space="preserve">
          <source>digit so that negative &lt;em&gt;decimals&lt;/em&gt; cause rounding to the nearest 10&amp;rsquo;s, 100&amp;rsquo;s, etc. If out is &lt;code&gt;NULL&lt;/code&gt;, then the output array is created, otherwise the output is placed in &lt;em&gt;out&lt;/em&gt; which must be the correct size and type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="770ead4b281a69b87ba814ae4b8562f19f32d83e" translate="yes" xml:space="preserve">
          <source>dimension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e61d25cc9eb0d69f33b6a8518b99e9e1980400e" translate="yes" xml:space="preserve">
          <source>dimensions of array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65af0351bcffcd198b7a8e7072a7a52674156c38" translate="yes" xml:space="preserve">
          <source>discard field titles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d196e9b488404692df582fc83d89cd86c1de7d2" translate="yes" xml:space="preserve">
          <source>discard the class names of &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Structure&quot;&gt;&lt;code&gt;ctypes.Structure&lt;/code&gt;&lt;/a&gt;s and &lt;a href=&quot;https://docs.python.org/dev/library/ctypes.html#ctypes.Union&quot;&gt;&lt;code&gt;ctypes.Union&lt;/code&gt;&lt;/a&gt;s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866ca3152fe58aab8fea8f1f36dcef620b6854ec" translate="yes" xml:space="preserve">
          <source>distribution is a generalization of the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82e943d406bbded98c104127488b1c684b96ea19" translate="yes" xml:space="preserve">
          <source>distribution.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d05566dfc6bae47522d03d4262d6037630ed367" translate="yes" xml:space="preserve">
          <source>do_something()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e374fbd1d241649219180e3f6556cdeb17929db" translate="yes" xml:space="preserve">
          <source>doesn&amp;rsquo;t change the original polynomial. However, all the multiplications and divisions will be done using Chebyshev series, hence the type of the result.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="694d71d18774cd67340868fe72907c4b8e10c5cb" translate="yes" xml:space="preserve">
          <source>dot multiplication with two arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e073e29338a1d41aba509d862c98767df169d86" translate="yes" xml:space="preserve">
          <source>dotfunc()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b995548c5e5ffd240554fb3e401782a157795a" translate="yes" xml:space="preserve">
          <source>draws have been made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63eb44aa9dfe2c9c81d4ede5c878a887b7f21327" translate="yes" xml:space="preserve">
          <source>dtype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d65447cf0f257af28849b8c6264dfb6d0f3cc3d" translate="yes" xml:space="preserve">
          <source>dtype object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="928c656d6649516e98f229b8253aaf1d477c41b3" translate="yes" xml:space="preserve">
          <source>dtype or string representing a typecode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332d69f959baeae98fab56a711f69c32c706efd6" translate="yes" xml:space="preserve">
          <source>dtype.__reduce__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="730100d67fecfbd742c4f9c469301f51b1b99a56" translate="yes" xml:space="preserve">
          <source>dtype.__setstate__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38718f6be450ebc34e5ddd2f1ad0af5be3a7136" translate="yes" xml:space="preserve">
          <source>dtype.alignment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db374eeb23adc6aee82545b34274ced73d22212c" translate="yes" xml:space="preserve">
          <source>dtype.base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b09b9918657426384fd293dc6c6dc3138d0f2199" translate="yes" xml:space="preserve">
          <source>dtype.byteorder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92e0b0adaca929ce598d180d2eb305740982944d" translate="yes" xml:space="preserve">
          <source>dtype.char</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deaff1f53e2ad4294b50ed2584b4636da61e8a5f" translate="yes" xml:space="preserve">
          <source>dtype.descr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643c69696910fadd237a5b95224cd74870e072e1" translate="yes" xml:space="preserve">
          <source>dtype.fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0b3f86ae682e1188442eac207435a6f6dfd661" translate="yes" xml:space="preserve">
          <source>dtype.flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fed29e361a9273c69431a619bf5089d888c355a" translate="yes" xml:space="preserve">
          <source>dtype.hasobject</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c993883c28f77d4fb4d9b9c7653c1c4053229c55" translate="yes" xml:space="preserve">
          <source>dtype.isalignedstruct</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7404613141c76d96e843ccb003e901d11543f22b" translate="yes" xml:space="preserve">
          <source>dtype.isbuiltin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40b005199a12bf495f9a9137b1e5d144d31a1398" translate="yes" xml:space="preserve">
          <source>dtype.isnative</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67359b4731b252c0f6883cede588730e199d3828" translate="yes" xml:space="preserve">
          <source>dtype.itemsize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7543bba29383632be32e1442fd17bf7baa1ca84e" translate="yes" xml:space="preserve">
          <source>dtype.kind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132f511321791fccd55a21c80c94c2898b01d243" translate="yes" xml:space="preserve">
          <source>dtype.name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd275094e503879b7398282e3495fec0708742a1" translate="yes" xml:space="preserve">
          <source>dtype.names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c587add7d7facce43a2ca773e3aba5630a3a13e3" translate="yes" xml:space="preserve">
          <source>dtype.ndim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e490c70d05e0843a2cb7f13b9081b6602a69fd04" translate="yes" xml:space="preserve">
          <source>dtype.newbyteorder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c151fb6198c46a7ca390ed7d96ccbfe4430ade1" translate="yes" xml:space="preserve">
          <source>dtype.num</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325767462c26252bfff6926a88c21090ac111b72" translate="yes" xml:space="preserve">
          <source>dtype.shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c91b0d5ab49b865064b0e437439035e7770aaf9" translate="yes" xml:space="preserve">
          <source>dtype.str</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b804dc21220d6a81028d91158c7cdd7ef40b7d4b" translate="yes" xml:space="preserve">
          <source>dtype.subdtype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29fe59ccc900093aa58b075484e1268349083728" translate="yes" xml:space="preserve">
          <source>dtype.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9822786b415970fef7d2f7ac592cf1e09ff699a6" translate="yes" xml:space="preserve">
          <source>edgeitems : int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8569df0972f74f25a93d295b37f82f8e9895ca" translate="yes" xml:space="preserve">
          <source>eigenvalues and eigenvectors of a real symmetric or complex Hermitian (conjugate symmetric) array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74e977a44b66ffc1ce5ca067f3dcfcdb78fd65f" translate="yes" xml:space="preserve">
          <source>eigenvalues and eigenvectors of real symmetric or complex Hermitian (conjugate symmetric) arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e24f362802624e65e988826294b76a57949106bb" translate="yes" xml:space="preserve">
          <source>eigenvalues and right eigenvectors for non-symmetric arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c11c77ba59e77db21d0c9051a06daa958f0973d" translate="yes" xml:space="preserve">
          <source>eigenvalues and right eigenvectors of general arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707ce0ac898709f67312be24165684fc84a8ae39" translate="yes" xml:space="preserve">
          <source>eigenvalues and right eigenvectors of general real or complex arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b7c5bb27d21683dfaf6730db73e2b017e68dc33" translate="yes" xml:space="preserve">
          <source>eigenvalues of a non-symmetric array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff63c2b33f1bf013fd7f73542f95a531334c4a3f" translate="yes" xml:space="preserve">
          <source>eigenvalues of a real symmetric or complex Hermitian (conjugate symmetric) array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69cf2a431c5864fe825349c3441fac497875c6b6" translate="yes" xml:space="preserve">
          <source>eigenvalues of general real or complex arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a726573c83e56de369454207866153eb1d530393" translate="yes" xml:space="preserve">
          <source>eigenvalues of non-symmetric arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebed1a1bd106374a4bbf615436b802d28e5a9fbc" translate="yes" xml:space="preserve">
          <source>eigenvalues of real symmetric or complex Hermitian (conjugate symmetric) arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764dfff4f99f1cba19be9b7bb87af681bbd73d32" translate="yes" xml:space="preserve">
          <source>element of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9dae9ec9db0e08ea99f4e05fd27891607a15765" translate="yes" xml:space="preserve">
          <source>elements when the shape in the selected axis is</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="900198081b75108f6b121e67b33afd480337f02e" translate="yes" xml:space="preserve">
          <source>ellipsis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1956830a633e72f92d87c2591365245e60e4c2" translate="yes" xml:space="preserve">
          <source>equivalent function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db7c5989d3e7ec2ebb716cd0bee069b5f5178b0a" translate="yes" xml:space="preserve">
          <source>equivalent function when no data is missing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624afe8ff81b138fbd886600e6d6138f83556f21" translate="yes" xml:space="preserve">
          <source>equivalent function; see for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1306883bced448604a8275a21bbf3cd6574a170d" translate="yes" xml:space="preserve">
          <source>equivalent method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8006f608472f1bc24c0343e0f95d801801d506a3" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;nanpercentile(..., 50)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="016bcc0bb764e09458cabfaee03f3afd16405a35" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;nanquantile(..., 0.5)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7735e981ef85e6afa72b957b018c92c8f163374b" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;percentile(..., 50)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="116888ce0e584314fd11f62fe6e73c9386fdc3bd" translate="yes" xml:space="preserve">
          <source>equivalent to &lt;code&gt;quantile(..., 0.5)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30faa2a9bff49f64b3fd07b91143a28f6ee9aef3" translate="yes" xml:space="preserve">
          <source>equivalent to nanpercentile, but with q in the range [0, 1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="539494e85474bd22686dd584a10af20706cc33df" translate="yes" xml:space="preserve">
          <source>equivalent to percentile, except with q in the range [0, 1].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417b72406b46b2c5fcf5b9fcbcc60479d4142c68" translate="yes" xml:space="preserve">
          <source>equivalent to quantile, but with q in the range [0, 100].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6f76fe76735d8e29b77a77d9d1e5cc572df7c46" translate="yes" xml:space="preserve">
          <source>errstate.__call__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b942e2831f972c22e2b0292ea3a8176ab41cd3b" translate="yes" xml:space="preserve">
          <source>etc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="514e4425ab04e470a8365c9452d2149db06f58e5" translate="yes" xml:space="preserve">
          <source>evaluates pyfunc over input arrays using broadcasting rules of numpy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26dcea074c0bd78db2feb7209b5d00e1e4b7d6f2" translate="yes" xml:space="preserve">
          <source>even if this would print more or fewer digits than necessary to specify the value uniquely.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b57b830c94000da1160929bf7283ab86f49f3c2" translate="yes" xml:space="preserve">
          <source>even: &lt;code&gt;ihfft(hfft(a, 2*len(a) - 2) == a&lt;/code&gt;, within roundoff error,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce1488c0654de9ef5fb411e5e89d3ca5a3240457" translate="yes" xml:space="preserve">
          <source>events occurring within the observed interval</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725b04ae9d29ff5a599d418622d6dda1334b6e8e" translate="yes" xml:space="preserve">
          <source>exec_command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df9559563b12462d8514749042e2ca31bec0c2dd" translate="yes" xml:space="preserve">
          <source>exec_command &amp;mdash; execute command in a specified directory and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3605cab140409fb4bb5b1ed87cf372111d3254" translate="yes" xml:space="preserve">
          <source>exp : Exponential function log : Natural logarithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92a3b0835ee4bb7e12eb176472deca3e6e14d755" translate="yes" xml:space="preserve">
          <source>extra_compiler_args</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0bd321ffaea11e583890596abe8de7b908001cc" translate="yes" xml:space="preserve">
          <source>extra_f77_compile_args</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c71ee0b5da58da5daab5fef2e127b9f275b5412" translate="yes" xml:space="preserve">
          <source>extra_f90_compile_args</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a0a19218e082a343a1b17e5333409af9d98f0f5" translate="yes" xml:space="preserve">
          <source>f</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34740c66e9bde6f63ede1c737388b71a9e995e98" translate="yes" xml:space="preserve">
          <source>f2py_options</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713e3b0d003a0a96a88e01e6e325e3b1f3d0c4df" translate="yes" xml:space="preserve">
          <source>fastclip()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfa68c18bac4cb0c07243b7b2a65d4a2ee78cd35" translate="yes" xml:space="preserve">
          <source>fastputmask()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0caf8ed2e2c39d94bf72741f2ae9123e539fd8a3" translate="yes" xml:space="preserve">
          <source>fasttake()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c941609ac1d104a01c42e9b206912fdac5cc65e7" translate="yes" xml:space="preserve">
          <source>femtosecond</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4e6ecedb04033a6879435a60964c87b41b52d09" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f0&lt;/code&gt; containing a 3-character string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55eb7ee3704413e2136f2f7ecb0a3f0bd2da893a" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f0&lt;/code&gt; containing a 32-bit integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2dd8c98eeacb3a0454ce0d1e0c2cc24e9f0f733" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f1&lt;/code&gt; containing a 2 x 3 sub-array of 64-bit floating-point numbers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22cf569168c52ca030187440d4a10ddbfbfd8a9" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f1&lt;/code&gt; containing a sub-array of shape (3,) containing 64-bit unsigned integers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d08ab054c7e9d7d4ba38f5e4e61011a0066a55ea" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f2&lt;/code&gt; containing a 3 x 4 sub-array containing 10-character strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9891de86c73491b5ad58363d1eee27c1a869f365" translate="yes" xml:space="preserve">
          <source>field named &lt;code&gt;f2&lt;/code&gt; containing a 32-bit floating-point number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d8989cf616d19904ae3a5ff4c4a0ba319468b63" translate="yes" xml:space="preserve">
          <source>file.txt -&amp;gt; (., file.txt)-&amp;gt; parent/file.txt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10ef848ebbad89fe9348318d14a018b5aa082fb" translate="yes" xml:space="preserve">
          <source>fill()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf985a9cbe36e6b54f12e53cbb84da9549bc938" translate="yes" xml:space="preserve">
          <source>fillwithscalar()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34c563a47a7ec77153f984f51d54ab4ee9f00244" translate="yes" xml:space="preserve">
          <source>find_executable &amp;mdash; locate a command using info from environment</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649adc91552d9200989ef4536551bac064614ef7" translate="yes" xml:space="preserve">
          <source>flags:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9eda71accad55a82028c98ee54aab74d7d1d8e1e" translate="yes" xml:space="preserve">
          <source>flatiter.base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63e8acf5e5b985c9ef39d6d2e5bca40431592cf" translate="yes" xml:space="preserve">
          <source>flatiter.coords</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71980daa41701f7dd66e3122ef6c46e253e371e0" translate="yes" xml:space="preserve">
          <source>flatiter.copy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="111d72b58214fd5edc49ae5bd99efcae33b94e7c" translate="yes" xml:space="preserve">
          <source>flatiter.index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c8f92d99ba7855465faeb61d3da7c7d16021c75" translate="yes" xml:space="preserve">
          <source>flip(m) corresponds to &lt;code&gt;m[::-1,::-1,...,::-1]&lt;/code&gt; with &lt;code&gt;::-1&lt;/code&gt; at all positions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a8719f83f8ee20f4a5eda0096a85dbf966db8b" translate="yes" xml:space="preserve">
          <source>flip(m, (0, 1)) corresponds to &lt;code&gt;m[::-1,::-1,...]&lt;/code&gt; with &lt;code&gt;::-1&lt;/code&gt; at position 0 and position 1.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1b52175a077136da59a35cf9a58cfe4d7c569e" translate="yes" xml:space="preserve">
          <source>flip(m, 0) is equivalent to flipud(m).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa1935b7e3f0e41dfa49a231f8b3cbe0667b373" translate="yes" xml:space="preserve">
          <source>flip(m, 1) is equivalent to fliplr(m).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a868dfd7e4c2dd932bb00349ea3d224b34bd402c" translate="yes" xml:space="preserve">
          <source>flip(m, n) corresponds to &lt;code&gt;m[...,::-1,...]&lt;/code&gt; with &lt;code&gt;::-1&lt;/code&gt; at position n.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685e80366130387cb75c055248326976d16fdf8d" translate="yes" xml:space="preserve">
          <source>float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b093abee54a9fde98b4eb34f8a1f370eea716fab" translate="yes" xml:space="preserve">
          <source>floating-point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b8d7939cd264eecdb244e9a94f3079d47d15bf" translate="yes" xml:space="preserve">
          <source>foo/&lt;code&gt;*&lt;/code&gt;.txt`` -&amp;gt; parent/foo/a.txt, parent/foo/b.txt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="833ea48d42ae7901c509d4b894d199b92cdabbc8" translate="yes" xml:space="preserve">
          <source>foo/file.txt -&amp;gt; (foo, foo/file.txt) -&amp;gt; parent/foo/file.txt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43eef9a62abb8b1e1654f8a890aae054abffa82b" translate="yes" xml:space="preserve">
          <source>for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507d778eee60076496a3254a83432c83ecd323ab" translate="yes" xml:space="preserve">
          <source>for &lt;a href=&quot;#numpy.pv&quot;&gt;&lt;code&gt;pv&lt;/code&gt;&lt;/a&gt;, which is then returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c85b1033cb05ead376e57c9c2abdb237426dc49" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;pmt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75f5bf14a755ac1d35f667b483875d227ec687b8" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;rate&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="641bb69e72489381cd39638cd090b0b13192fc14" translate="yes" xml:space="preserve">
          <source>for &lt;code&gt;x &amp;gt; 0&lt;/code&gt; and 0 elsewhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f23394f1b08a704d28df11c3d83d02417d48588" translate="yes" xml:space="preserve">
          <source>for P(x) the probability of &lt;code&gt;x&lt;/code&gt; good results in the drawn sample, g = &lt;code&gt;ngood&lt;/code&gt;, b = &lt;code&gt;nbad&lt;/code&gt;, and n = &lt;code&gt;nsample&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59644f8c38524a802838e9b8763976ea96db31b" translate="yes" xml:space="preserve">
          <source>for definition of the DFT and conventions used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eccc35166ccc0fe84164ed3f8705715de695948" translate="yes" xml:space="preserve">
          <source>for-loops.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9944c746c536ce904925b517e008347a60c708a" translate="yes" xml:space="preserve">
          <source>formatter : dict of callables</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fd7ad719be1fd8671ddcef389110aa45f112d40" translate="yes" xml:space="preserve">
          <source>from an interpreter will run all the test routine in &amp;lsquo;test_matlib.py&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a912e777fc698825555dca9b36374034e4f369f3" translate="yes" xml:space="preserve">
          <source>from the array. This can be a useful construct for defining recursive algorithms. To loop over the entire array requires</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df586a54524690164fa949416cc1a0867d8bd2c" translate="yes" xml:space="preserve">
          <source>from the beginning of the memory block associated with the array. Here,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c6af61b2599e033d6cc1b285fc0b4341444fa1" translate="yes" xml:space="preserve">
          <source>fromstr()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4bb586f04a0c1d93eadab9363a8a3183b4860c" translate="yes" xml:space="preserve">
          <source>fs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46783935fb4a913842ef46305db884e5043b31a7" translate="yes" xml:space="preserve">
          <source>fundamental data-type for &lt;a href=&quot;#numpy.recarray&quot;&gt;&lt;code&gt;recarray&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2809e8161e133b999963df8f39908b398f79dee3" translate="yes" xml:space="preserve">
          <source>generic function accepting an arbitrary mask function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b469a86408c4935b23d7b64b9baf36215b529912" translate="yes" xml:space="preserve">
          <source>generic.T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52258fbec818a1911b91c41ed1eb7ef5d72ba150" translate="yes" xml:space="preserve">
          <source>generic.__array__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5611c1449f7f8c63d58765a700c44e9db832dd1" translate="yes" xml:space="preserve">
          <source>generic.__array_interface__</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4434bc2887cd41c0218bd1488cf0349ac5c6458f" translate="yes" xml:space="preserve">
          <source>generic.__array_priority__</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7fff2a413db4d581cabcf75076300fef64e33fe" translate="yes" xml:space="preserve">
          <source>generic.__array_struct__</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2dc55b18a066c90cd39d05ccc7b01e1c7a6ff35" translate="yes" xml:space="preserve">
          <source>generic.__array_wrap__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19a6a00b128e761d4b407c44f9f3bb65666ba8a8" translate="yes" xml:space="preserve">
          <source>generic.__reduce__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="389d5b5bb216a10ee340bfd5d3308727977062f4" translate="yes" xml:space="preserve">
          <source>generic.__setstate__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e45d1c433f1fda11f60eb85497acc3ba000bbf39" translate="yes" xml:space="preserve">
          <source>generic.all()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64801abe861da5837f771263359a2bab8cae2f10" translate="yes" xml:space="preserve">
          <source>generic.any()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efa2b5577e861f03c3a391c5e8f94f14a10b29de" translate="yes" xml:space="preserve">
          <source>generic.argmax()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79046323116d58903e84d783131070cac83127d" translate="yes" xml:space="preserve">
          <source>generic.argmin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd818f73b366356b240dd8375f1631f96bc9233" translate="yes" xml:space="preserve">
          <source>generic.argsort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce4b14f4138c8bb1ac8ae2f950b82286f5f23259" translate="yes" xml:space="preserve">
          <source>generic.astype()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7adc226216b1b6addb2c6f9f2ac4e51c6361384b" translate="yes" xml:space="preserve">
          <source>generic.base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28026df0591c6f05f04fe89a5670ad060fcd04d7" translate="yes" xml:space="preserve">
          <source>generic.byteswap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2754b64b74be6824e0ad92f2effe6e1bc91a9323" translate="yes" xml:space="preserve">
          <source>generic.choose()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c299bc311d2ef268efe9f6599ec42f61dce43d7" translate="yes" xml:space="preserve">
          <source>generic.clip()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ca223c87753b3c5a460ce0e31ad8739e41570bd" translate="yes" xml:space="preserve">
          <source>generic.compress()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="091975e701b656dcc9d1df46df930af0c00bbe41" translate="yes" xml:space="preserve">
          <source>generic.conjugate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc342944c16e13fe598f18002179579fab7c0dd7" translate="yes" xml:space="preserve">
          <source>generic.copy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="276dff436e45e6127b18680dfeee02e36027f17f" translate="yes" xml:space="preserve">
          <source>generic.cumprod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfaa5bd91164dfe1e61a883a875791bbfb80d851" translate="yes" xml:space="preserve">
          <source>generic.cumsum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff4df79724617f014ff5fa97abe80623c872833" translate="yes" xml:space="preserve">
          <source>generic.data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad46928a853f66cb7ae5970e206881627f413d6" translate="yes" xml:space="preserve">
          <source>generic.diagonal()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a0e5576b79dfe2a653a7eea785bcce74cd97f2" translate="yes" xml:space="preserve">
          <source>generic.dtype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783b525ea62c9bd4d64d31dcbfe3036d2f60214b" translate="yes" xml:space="preserve">
          <source>generic.dump()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3ca0ecbb76902f7f48db4d346f67da46851bc7" translate="yes" xml:space="preserve">
          <source>generic.dumps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d45d75d5179896a47b4d91f372eaccfaa9cfde" translate="yes" xml:space="preserve">
          <source>generic.fill()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef0e932a9f0acf3d185857f24726f4f9233a71fd" translate="yes" xml:space="preserve">
          <source>generic.flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2020599513a2fa26a6c54427d9d1f65f1671b03c" translate="yes" xml:space="preserve">
          <source>generic.flat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ef4fd8b55c86f6d1efe75aaadd1a6f8f893515" translate="yes" xml:space="preserve">
          <source>generic.flatten()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="138bd20652e17a61c33f6adf78139d4c31eecaa1" translate="yes" xml:space="preserve">
          <source>generic.getfield()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5e7d64f7d42d0695b5d23d7a52eed831c5f0f9" translate="yes" xml:space="preserve">
          <source>generic.imag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd42fcc426df74ccd590279d4c90ed5dd81da7e" translate="yes" xml:space="preserve">
          <source>generic.item()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33817c1ed5fec31510a967559ace3a3d6d9afda1" translate="yes" xml:space="preserve">
          <source>generic.itemset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb302b41445c21a9df1b716673db0eaca166893f" translate="yes" xml:space="preserve">
          <source>generic.itemsize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91b8bb2b1eeebdbbf979093ad955442849f6cc4" translate="yes" xml:space="preserve">
          <source>generic.max()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5bce83027d5f4131019a3a04e7766a706207d6" translate="yes" xml:space="preserve">
          <source>generic.mean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be3b366226fe2bf7d5fff4b7d53f6d7e2275939" translate="yes" xml:space="preserve">
          <source>generic.min()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="add5710e5ce19bccc38a6dae2abf75d0e6324fb7" translate="yes" xml:space="preserve">
          <source>generic.nbytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99c0102749d701556ccf6b8ddf87c1c98b18a6d" translate="yes" xml:space="preserve">
          <source>generic.ndim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1660dd6670e607a1e66cf2cb0ab2571665bf51b" translate="yes" xml:space="preserve">
          <source>generic.newbyteorder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d7b0cfda72b4e20f5756e4102f8f8754ac9537" translate="yes" xml:space="preserve">
          <source>generic.nonzero()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a32babeb2a2ccf41bbe5180f77ee3ba1623abd2" translate="yes" xml:space="preserve">
          <source>generic.prod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87522ec89addeb6d404762869cdddd2b39cd056d" translate="yes" xml:space="preserve">
          <source>generic.ptp()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590499edd932463ceeed1fbbebec5d3d71a70c50" translate="yes" xml:space="preserve">
          <source>generic.put()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51a080ab2a704c1983a785d7c67e7b5a0e6334ff" translate="yes" xml:space="preserve">
          <source>generic.ravel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0663f1e7a6bb0ae91f3a9052f114680011ce023d" translate="yes" xml:space="preserve">
          <source>generic.real</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d833eca4393b3f25b2ac09c00008fbc288e0783" translate="yes" xml:space="preserve">
          <source>generic.repeat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f80a4e04b8d6798b9f9c24956ea632fd52bb98a" translate="yes" xml:space="preserve">
          <source>generic.reshape()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7112ffd7f108e99759425319f7ca81e6fff7ce" translate="yes" xml:space="preserve">
          <source>generic.resize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1186d7513cd8a4340b725202a1769916e25379" translate="yes" xml:space="preserve">
          <source>generic.round()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cced9c43ce19de4251617cfbe2e88dd8e3ef17b" translate="yes" xml:space="preserve">
          <source>generic.searchsorted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f61f0f343974a473d68e8ff5536a791b7c8197" translate="yes" xml:space="preserve">
          <source>generic.setfield()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564e1331e20ad0d61cacd0fc7a26a9b8c3d1c3ac" translate="yes" xml:space="preserve">
          <source>generic.setflags()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6513f91115123ee95d4923113c42d0941c19973" translate="yes" xml:space="preserve">
          <source>generic.shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efafe2f79217a1fb31a43927da248fe5439d3328" translate="yes" xml:space="preserve">
          <source>generic.size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81b5a7b74210778abaed8d2c920e6e583500c3e" translate="yes" xml:space="preserve">
          <source>generic.sort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccd76d17a158f7ca25e6e875bae60466516cb782" translate="yes" xml:space="preserve">
          <source>generic.squeeze()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98c9a5da6154d2ba440d083b05fab8ae3abfd2c" translate="yes" xml:space="preserve">
          <source>generic.std()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0c34cf0161e1c4ff3cc16b2cc77fe89c96c801a" translate="yes" xml:space="preserve">
          <source>generic.strides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cc4a97852323265636110d0fd398ad7e1583a0d" translate="yes" xml:space="preserve">
          <source>generic.sum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="919486a3094724bbd0596312ca1abea7be750b06" translate="yes" xml:space="preserve">
          <source>generic.swapaxes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3f9aa6c777fefdeb4558e5913fd15baa6c6d6fc" translate="yes" xml:space="preserve">
          <source>generic.take()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41560a7a0a5c2ab695ea14d1cebb53f9e8ba9e9" translate="yes" xml:space="preserve">
          <source>generic.tofile()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d97f285381580906167dbff1130fd028fd6737c8" translate="yes" xml:space="preserve">
          <source>generic.tolist()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a44c607e1625ba45e062820140c135cfd08f40b" translate="yes" xml:space="preserve">
          <source>generic.tostring()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e486f6387d16d16fd4dac18193bb5dfc820aa3" translate="yes" xml:space="preserve">
          <source>generic.trace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63350a8c6db5c5b1d0312b9d06bdd2f93cd6da8" translate="yes" xml:space="preserve">
          <source>generic.transpose()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae87e6947409bb706fd9a40e6e5714867778b2c4" translate="yes" xml:space="preserve">
          <source>generic.var()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5163ece05c539db28359365a29cc9718bdd7e68c" translate="yes" xml:space="preserve">
          <source>generic.view()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2c3a784af20a2e5307fc8bddced1ceb90f4ea70" translate="yes" xml:space="preserve">
          <source>get array data-descriptor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27582dbef4cfa6462e09b04e12a67858c55da4b" translate="yes" xml:space="preserve">
          <source>get_build_temp_dir()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837557c1f5e315cfc045d05f0429dd0f63a0780c" translate="yes" xml:space="preserve">
          <source>get_config_cmd()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52e4b581efe94506b55c874100a5732e4ae7c785" translate="yes" xml:space="preserve">
          <source>get_distribution()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297dc5a8409850ef4b5874d28826a6f07326ffe5" translate="yes" xml:space="preserve">
          <source>get_info()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1282556a2e25ec335c9734f5f36b0e45c226c413" translate="yes" xml:space="preserve">
          <source>get_subpackage()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49442d151321987cc104b80932241c855853622" translate="yes" xml:space="preserve">
          <source>get_version()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d7f53e03522d9ebfce2a3fc004f97adbb82988" translate="yes" xml:space="preserve">
          <source>getitem()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2178513f0507ddb4b1f23538554ddcb32ef7077" translate="yes" xml:space="preserve">
          <source>goes with the basis function of degree i.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d5482eebd075de44389774fce28c69f45c8a75" translate="yes" xml:space="preserve">
          <source>h</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b411530db4f7f50ad0d157be284dcc0c1ac3e3f" translate="yes" xml:space="preserve">
          <source>has at least 3 continuous derivatives) and let</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51bc56321a9a622b2581fb480f3e4712f27fc44" translate="yes" xml:space="preserve">
          <source>have_f77c()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="997a5c168ae32eef7c32532119717161f2f7af22" translate="yes" xml:space="preserve">
          <source>have_f90c()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc3bdccbbcdc2af4ef75daa7cd1bb13b8ca5b1a" translate="yes" xml:space="preserve">
          <source>higher: &lt;code&gt;j&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ab86a87214a453d9f82538264f190854915247" translate="yes" xml:space="preserve">
          <source>hour</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042dc4512fa3d391c5170cf3aa61e6a638f84342" translate="yes" xml:space="preserve">
          <source>i</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e84014fe8c4f5e59182611501e1abf41de6eb5d5" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;axes&lt;/code&gt; is larger than the last axis of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2b3c5466134b54602fa974d9df78c970c567730" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;indices[i] &amp;gt;= indices[i + 1]&lt;/code&gt;, the i-th generalized &amp;ldquo;row&amp;rdquo; is simply &lt;code&gt;a[indices[i]]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5863fb7c227bd68a4feada36091aed6b10e62ceb" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;indices[i] &amp;gt;= len(a)&lt;/code&gt; or &lt;code&gt;indices[i] &amp;lt; 0&lt;/code&gt;, an error is raised.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="176ac281ce3e81ad34a162ee049969b1790e321c" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;mode=clip&lt;/code&gt;, values in &lt;code&gt;a&lt;/code&gt; (and thus &lt;code&gt;Ba&lt;/code&gt;) may be any (signed) integer; negative integers are mapped to 0; values greater than &lt;code&gt;n-1&lt;/code&gt; are mapped to &lt;code&gt;n-1&lt;/code&gt;; and then the new array is constructed as above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec422e835fc875842e3710356064f0aede84e06" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;mode=raise&lt;/code&gt; (the default), then, first of all, each element of &lt;code&gt;a&lt;/code&gt; (and thus &lt;code&gt;Ba&lt;/code&gt;) must be in the range &lt;code&gt;[0, n-1]&lt;/code&gt;; now, suppose that &lt;code&gt;i&lt;/code&gt; (in that range) is the value at the &lt;code&gt;(j0, j1, &amp;hellip;, jm)&lt;/code&gt; position in &lt;code&gt;Ba&lt;/code&gt; - then the value at the same position in the new array is the value in &lt;code&gt;Bchoices[i]&lt;/code&gt; at that same position;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f7cd17f30786f8aa167ef38c22ae01cad0d1440" translate="yes" xml:space="preserve">
          <source>if &lt;code&gt;mode=wrap&lt;/code&gt;, values in &lt;code&gt;a&lt;/code&gt; (and thus &lt;code&gt;Ba&lt;/code&gt;) may be any (signed) integer; modular arithmetic is used to map integers outside the range &lt;code&gt;[0, n-1]&lt;/code&gt; back into that range; and then the new array is constructed as above;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02e3e65bdf8759c28afd61658b928b4e76e32b09" translate="yes" xml:space="preserve">
          <source>if False no optimization is taken</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc70f7d66e4fa79e2c552ae73dfd3a8dbed77a0" translate="yes" xml:space="preserve">
          <source>if True defaults to the &amp;lsquo;greedy&amp;rsquo; algorithm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd9c714e66d26c173a47a08730c68e6575a82d6" translate="yes" xml:space="preserve">
          <source>if a callable in &lt;a href=&quot;https://docs.python.org/dev/library/formatter.html#module-formatter&quot;&gt;&lt;code&gt;formatter&lt;/code&gt;&lt;/a&gt; does not return a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34f1086d253f1e0f26fa44bb0ce9a74280f23f8" translate="yes" xml:space="preserve">
          <source>if a list is given that starts with &lt;code&gt;einsum_path&lt;/code&gt;, uses this as the contraction path</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18fd0bda86a9a295a91fbc4836d24ffc66e9365e" translate="yes" xml:space="preserve">
          <source>if given, the subpackage path such as the subpackage is in subpackage_path / subpackage_name. If None,the subpackage is assumed to be located in the local path / subpackage_name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0893f52022703300517974a92c9a37361f838819" translate="yes" xml:space="preserve">
          <source>if the dtype is for a user-defined numpy type A user-defined type uses the numpy C-API machinery to extend numpy to handle a new array type. See &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/user/c-info.beyond-basics.html#user-user-defined-data-types&quot;&gt;User-defined data-types&lt;/a&gt; in the NumPy manual.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19221ded7a06c92b21669bf3dbea28bf510c16c" translate="yes" xml:space="preserve">
          <source>if this is a dtype compiled into numpy (such as ints, floats etc)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ace133787885500296098d0109815e8f9978c74" translate="yes" xml:space="preserve">
          <source>if this is a structured array type, with fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bfcc155a32c7a1ffbfee95ee7446e18d5c70bd8" translate="yes" xml:space="preserve">
          <source>ignore: Take no action when the exception occurs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713b5616d1746935c926d6cf853b3d738f789232" translate="yes" xml:space="preserve">
          <source>iinfo.max</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="427f6dcd40fe9d1a2f4fd755e78cce480b94e8d7" translate="yes" xml:space="preserve">
          <source>iinfo.min</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60a1155a25d515f6a2c314c1f0bc91793994ab19" translate="yes" xml:space="preserve">
          <source>imaginary part of scalar</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1781f0d06ab5889476231b5d1247bf4cd2261b73" translate="yes" xml:space="preserve">
          <source>import_ufunc()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655d579d8f603fc86c783a69394281c8f08fddf4" translate="yes" xml:space="preserve">
          <source>in Chebyshev form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;code&gt;roots&lt;/code&gt;. If a zero has multiplicity n, then it must appear in &lt;code&gt;roots&lt;/code&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;code&gt;roots&lt;/code&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f05b768379157e3e9f5c4073d657e0d1e73ef60a" translate="yes" xml:space="preserve">
          <source>in Hermite form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;code&gt;roots&lt;/code&gt;. If a zero has multiplicity n, then it must appear in &lt;code&gt;roots&lt;/code&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;code&gt;roots&lt;/code&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a1b8d470c587297f3a0a10df5ad71ba0ff844c3" translate="yes" xml:space="preserve">
          <source>in HermiteE form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;code&gt;roots&lt;/code&gt;. If a zero has multiplicity n, then it must appear in &lt;code&gt;roots&lt;/code&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;code&gt;roots&lt;/code&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3022bcbad1088df9c33f13a961cca43ee740dce3" translate="yes" xml:space="preserve">
          <source>in Laguerre form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;code&gt;roots&lt;/code&gt;. If a zero has multiplicity n, then it must appear in &lt;code&gt;roots&lt;/code&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;code&gt;roots&lt;/code&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="316c762c5a87e5a5c6abced8887f1b87e58a3d41" translate="yes" xml:space="preserve">
          <source>in Legendre form, where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;code&gt;roots&lt;/code&gt;. If a zero has multiplicity n, then it must appear in &lt;code&gt;roots&lt;/code&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;code&gt;roots&lt;/code&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e76e2124991cd5fe979df7d74abbc4b3fd295462" translate="yes" xml:space="preserve">
          <source>in an integral relative to &lt;code&gt;x&lt;/code&gt;. Then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f636db17bcb2bd246524398e2652265163785824" translate="yes" xml:space="preserve">
          <source>in the Fourier domain, after appropriate padding (padding is necessary to prevent circular convolution). Since multiplication is more efficient (faster) than convolution, the function &lt;a href=&quot;https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.fftconvolve.html#scipy.signal.fftconvolve&quot;&gt;&lt;code&gt;scipy.signal.fftconvolve&lt;/code&gt;&lt;/a&gt; exploits the FFT to calculate the convolution of large data-sets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b273d4149a90717a323e732751d7404646e1978" translate="yes" xml:space="preserve">
          <source>in the equations:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e072e2d5f94c068c73d607c9d66c573dea79ad03" translate="yes" xml:space="preserve">
          <source>in the first 20 lines of the source and use the &lt;code&gt;f77flags&lt;/code&gt; for specified type of the fcompiler (the first character &lt;code&gt;C&lt;/code&gt; is optional).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afee4b2afdccff044d7dfd3d5977fa906fb425f" translate="yes" xml:space="preserve">
          <source>in the modified environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebcd846998b846dfebc5baf9f968661968d6464c" translate="yes" xml:space="preserve">
          <source>in time/space is equivalent to the multiplication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a82d04fe5e9668a80e126d02bd2c72a4cd4a2e81" translate="yes" xml:space="preserve">
          <source>in your &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; interface file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41227da441b1bc2260a07e682205a2c90ce2d560" translate="yes" xml:space="preserve">
          <source>include_dirs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01ff2840aef7bfc3913c3b4552a25015278a7141" translate="yes" xml:space="preserve">
          <source>increases while</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907f71f2de9430e340acca9f6257169509f3cf76" translate="yes" xml:space="preserve">
          <source>increasing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3dfef42e0c22b5d2e5e3638c1b61b47bbb10da" translate="yes" xml:space="preserve">
          <source>inf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3f811fe08257d868c53f8012210b317edd7dbb" translate="yes" xml:space="preserve">
          <source>inf means the numpy.inf object, and the Frobenius norm is the root-of-sum-of-squares norm.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76338eea4944a1a91dd93b9dd7db8ce37752cdc8" translate="yes" xml:space="preserve">
          <source>infstr : str</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72d7a2460765054b54f336a9427f7fbfe87adf92" translate="yes" xml:space="preserve">
          <source>inner over the last dimension, outer over the second to last, and loop/broadcast over the rest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2a6659d9b0b57e374a9d29c8af19b89e8ee53ba" translate="yes" xml:space="preserve">
          <source>inner1d</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2bed20d43796bb396f8b024234177c69c68ae16" translate="yes" xml:space="preserve">
          <source>inputs and produce</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7277204bffc57e9b88bc7b12607dd0477be687c" translate="yes" xml:space="preserve">
          <source>insert padding fields</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c8457cd65849bf5a9285f8b862e990e1a44ac09" translate="yes" xml:space="preserve">
          <source>instead of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83af7ec415f72d6fec1af2b7f05f151760b4aa2" translate="yes" xml:space="preserve">
          <source>int PyArray_NDIM()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a55c6ce46c45f83f23bd73f06a9f6fd4cac8c9" translate="yes" xml:space="preserve">
          <source>int_type: this argument is interpreted as a flat index into the array, specifying which element to copy and return.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1178cafbd64bbbfa77f5ac0a9d5032ed88162781" translate="yes" xml:space="preserve">
          <source>integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba2fc02d86ca927ed7d6ffc1eb03af692ef73831" translate="yes" xml:space="preserve">
          <source>integer arrays/array-likes (fancy)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36e73186b12205a39c51ebf67d8fb8413a4952a1" translate="yes" xml:space="preserve">
          <source>integer value of flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a95a3d37700d8583bc9ca47feb1faea9fdd9fdb3" translate="yes" xml:space="preserve">
          <source>integer_like If an int N, sum over the last N axes of &lt;code&gt;a&lt;/code&gt; and the first N axes of &lt;code&gt;b&lt;/code&gt; in order. The sizes of the corresponding axes must match.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8f394d3679ebaaaa9dceec09d655ab6a39f101d" translate="yes" xml:space="preserve">
          <source>is Dirichlet-distributed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5ce588118c293e887dbe4937c8c511653ae105" translate="yes" xml:space="preserve">
          <source>is a &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; interface file that defines a python module &lt;code&gt;Vector&lt;/code&gt; that wraps the functions in &lt;code&gt;Vector.h&lt;/code&gt; while utilizing the typemaps in &lt;code&gt;numpy.i&lt;/code&gt; to correctly handle the C arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59f688724e843f7558a3d9788b8154a82fbf6b0e" translate="yes" xml:space="preserve">
          <source>is a constant independent of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6eb3ae1ef7cfabfea3af43d447ce20b31f158e" translate="yes" xml:space="preserve">
          <source>is a diagonal matrix consisting of A&amp;rsquo;s so-called singular values, (followed, typically, by zeros), and then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54eb805174d044426c666805519511c1354b734" translate="yes" xml:space="preserve">
          <source>is a vector containing the positive concentration parameters.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="649810debdfaba754dab0f0f0b24fd7a3436ba63" translate="yes" xml:space="preserve">
          <source>is a vector perpendicular to both &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; are arrays of vectors, the vectors are defined by the last axis of &lt;code&gt;a&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; by default, and these axes can have dimensions 2 or 3. Where the dimension of either &lt;code&gt;a&lt;/code&gt; or &lt;code&gt;b&lt;/code&gt; is 2, the third component of the input vector is assumed to be zero and the cross product calculated accordingly. In cases where both input vectors have dimension 2, the z-component of the cross product is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04cf89208d030a31d4e7bc71dfcddee88d16b6ea" translate="yes" xml:space="preserve">
          <source>is an integer,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d39e8726604a8f0ec5d0016ca064a0576f8bced" translate="yes" xml:space="preserve">
          <source>is asymptotically optimal, which is why it appears in most estimators. These are simply plug-in methods that give good starting points for number of bins. In the equations below,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e222cdaaa77fb44a565fff768db44dd0a3e4a7" translate="yes" xml:space="preserve">
          <source>is chi-square distributed, denoted</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ec285792f84b2006557cfe7a76ef03e4dffbd46" translate="yes" xml:space="preserve">
          <source>is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f929b053eb7304b51c9f3bdd85885354fbf926" translate="yes" xml:space="preserve">
          <source>is just</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47b4fff64c5ca2ab27f33c602d1be543983c16c9" translate="yes" xml:space="preserve">
          <source>is not legal C/C++ syntax. Therefore, we cannot provide typemaps of the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab5458a9478d5141488cfb1fec9a7be5cafa5416" translate="yes" xml:space="preserve">
          <source>is proportional to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b6ce4ad36c4bd681c26084c98f8ed7b0e1c6ea" translate="yes" xml:space="preserve">
          <source>is represented by a complex exponential</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62bce82718f573737027b7bca53b98ce084fc8ca" translate="yes" xml:space="preserve">
          <source>is said solution, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72bb9b597bdaaf1e8996cccac792af2076b2e95" translate="yes" xml:space="preserve">
          <source>is simply the diagonal matrix consisting of the reciprocals of A&amp;rsquo;s singular values (again, followed by zeros). &lt;a href=&quot;#rec505eafac9d-1&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3bd232771f2bce19cd7e615abbc27f68743a58" translate="yes" xml:space="preserve">
          <source>is that matrix such that</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bfc0ef0123f6da95d764fd626c229ba9123b4a" translate="yes" xml:space="preserve">
          <source>is the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b0bbfbe80a1d7c643a9a53c6ba70db87950d163" translate="yes" xml:space="preserve">
          <source>is the &lt;em&gt;i&lt;/em&gt;-th element of the shape of the array. Negative indices are interpreted as counting from the end of the array (&lt;em&gt;i.e.&lt;/em&gt;, if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8197e9e3e7801bbed379064ffade5e6c8772399" translate="yes" xml:space="preserve">
          <source>is the Chi-square with q degrees of freedom.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2d1a89245b61df6a2b4e3ef50ec21c4d5ca28c4" translate="yes" xml:space="preserve">
          <source>is the Gamma function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b07c20629d4240894e01ea59ca707736d4a506" translate="yes" xml:space="preserve">
          <source>is the Riemann Zeta function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f10eb2838acc88427325f95231f78cc9eae027a" translate="yes" xml:space="preserve">
          <source>is the binwidth and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="babd9b36c907c9628bde0ab1296acb9d6145b5de" translate="yes" xml:space="preserve">
          <source>is the complex conjugate of the component at frequency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c146247a023415bf0fb19381193572296bcd4a7d" translate="yes" xml:space="preserve">
          <source>is the covariance of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dee470dedb23faec9c2b494d21fd11fc576b9cb" translate="yes" xml:space="preserve">
          <source>is the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab0928e78b29128ec6aab8484e295558c0ebecc" translate="yes" xml:space="preserve">
          <source>is the gamma function,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a239f5e048ffeee86cc4aa0108f9b5aa2a2a1b5c" translate="yes" xml:space="preserve">
          <source>is the gamma function. When</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="362312c60be8472cc2706f930a91683abb5a69e5" translate="yes" xml:space="preserve">
          <source>is the golden ratio. As the jumps wrap around the period, the actual distances between neighboring streams will slowly grow smaller than the jump size, but using the golden ratio this way is a classic method of constructing a low-discrepancy sequence that spreads out the states around the period optimally. You will not be able to jump enough to make those distances small enough to overlap in your lifetime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e4eac64c0432f57c6d78076fd682be87aa7d72" translate="yes" xml:space="preserve">
          <source>is the k&amp;rsquo;th root of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bb07f768c66331db52f97eab1472a022bd0e6b5" translate="yes" xml:space="preserve">
          <source>is the mean and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee5d48736dde92a7e977919b5cbce7a02a0e228" translate="yes" xml:space="preserve">
          <source>is the mode and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ffb2f7e6adf689c3264360ea7cf9c928e3b1eb8" translate="yes" xml:space="preserve">
          <source>is the mode, a location parameter, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="192dc3a5ad7cfc300527dc0b7f2eb912bfd6c1c3" translate="yes" xml:space="preserve">
          <source>is the modified Bessel function of order 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1daf25b67e594550b924cb47e4b3924578fdabb" translate="yes" xml:space="preserve">
          <source>is the modified zeroth-order Bessel function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9860cb9d8fa48b8f96296d82cba525ac397225a" translate="yes" xml:space="preserve">
          <source>is the number of bins. All estimators that compute bin counts are recast to bin width using the &lt;a href=&quot;numpy.ptp#numpy.ptp&quot;&gt;&lt;code&gt;ptp&lt;/code&gt;&lt;/a&gt; of the data. The final bin count is obtained from &lt;code&gt;np.round(np.ceil(range / h))&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="117e453d7cd2ca8c7b5272f542a1736f91ee53d1" translate="yes" xml:space="preserve">
          <source>is the number of dimensions in the broadcasted array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6eec8863959ccd34d440e83bf2ed67e4d59ef3d" translate="yes" xml:space="preserve">
          <source>is the number of dimensions in the underlying array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df10defeffa2bbd51b3bedc9f232c644460393a5" translate="yes" xml:space="preserve">
          <source>is the number of elements in the input,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6f3d71cf6e37e5acc5b895cd3d257965c625aa2" translate="yes" xml:space="preserve">
          <source>is the number of successes,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35aaf38eb0aca33a707bc008f5480790753d5b79" translate="yes" xml:space="preserve">
          <source>is the number of successes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc20222b37f32686dabcbf54a6755c1be3614eb1" translate="yes" xml:space="preserve">
          <source>is the number of trials,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="421663ffd33bddfda2d5e648090f45d32c8b6302" translate="yes" xml:space="preserve">
          <source>is the number of trials, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fcb58cdfb0993cc653a15c6ef63dd6d9fa61ff9" translate="yes" xml:space="preserve">
          <source>is the output, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2061536259128ad9b5f84ca0aedff66806d55059" translate="yes" xml:space="preserve">
          <source>is the probability of success,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c42d4f6a6e83f7fb0926909f8611357388937e8b" translate="yes" xml:space="preserve">
          <source>is the probability of success, and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdb379cc402264383f6c2497862f6a5943982c35" translate="yes" xml:space="preserve">
          <source>is the sampling interval.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20c41dec1ccc2341bec1d757fd7963a9ed0b5fda" translate="yes" xml:space="preserve">
          <source>is the scale parameter, which is the inverse of the rate parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6a63a35975751c040b4fca4892408d08314c203" translate="yes" xml:space="preserve">
          <source>is the scale parameter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a102cab87ca2e1f4adf003574ac9bf463a9dab2" translate="yes" xml:space="preserve">
          <source>is the shape and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d273d6cf5b56fa01adb1e344a138f92994c83dec" translate="yes" xml:space="preserve">
          <source>is the singular value decomposition of A, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea459a57ad089bf11d5aeb92b9183fa1eb03c37" translate="yes" xml:space="preserve">
          <source>is the standard deviation of the normally distributed logarithm of the variable. A log-normal distribution results if a random variable is the &lt;em&gt;product&lt;/em&gt; of a large number of independent, identically-distributed variables in the same way that a normal distribution results if the variable is the &lt;em&gt;sum&lt;/em&gt; of a large number of independent, identically-distributed variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f9440ac2ba91a821bd2d85d567117cb489d8ce" translate="yes" xml:space="preserve">
          <source>is the variance of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="392140062909b5bb864c995eab01cae4c3b8e31f" translate="yes" xml:space="preserve">
          <source>is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30177c181647da939839d9b0459ac0f69d9284b" translate="yes" xml:space="preserve">
          <source>is_array()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40cc65dfc5b18046d55cbd6251c7ab4b7eb6a1ed" translate="yes" xml:space="preserve">
          <source>isfinite : Shows which elements are finite (not one of Not a Number, positive infinity and negative infinity)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1993bf7366fdcedb851409b06bea3388411544" translate="yes" xml:space="preserve">
          <source>isinf : Shows which elements are positive or negative infinity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3814a782f11016f1be500ea4d8221fdfcbae1d81" translate="yes" xml:space="preserve">
          <source>isinf : Shows which elements are positive or negative infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a277b686adbee820c409bb60d3ec6bac6f0a20d5" translate="yes" xml:space="preserve">
          <source>isnan : Shows which elements are Not a Number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea5e79b77913a2ada20fa10fa74e59a40cd345f5" translate="yes" xml:space="preserve">
          <source>isnan : Shows which elements are Not a Number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9e0d0c8f8b48aada984da8021ea670d6932bd45" translate="yes" xml:space="preserve">
          <source>isneginf : Shows which elements are negative infinity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fb97eaa35ad1273588d39af477dabcd60367485" translate="yes" xml:space="preserve">
          <source>isneginf : Shows which elements are negative infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3196054662199823da72358ce8949919be3b608f" translate="yes" xml:space="preserve">
          <source>isposinf : Shows which elements are positive infinity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561d28f94d9c43c4182ea889a445052df4c60956" translate="yes" xml:space="preserve">
          <source>isposinf : Shows which elements are positive infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f1178ff442ec980199de9981134a92e6cf7611" translate="yes" xml:space="preserve">
          <source>it can be slow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5fbcf93e3ed5f889a7977bac4c073116e7d1f3e" translate="yes" xml:space="preserve">
          <source>iter itself can be a Neighborhood iterator: this can be useful for .e.g automatic boundaries handling</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a7ef56f4606d14cc9d2573a013d768cfd63896" translate="yes" xml:space="preserve">
          <source>iterations away from any other seed. And finally, &lt;a href=&quot;bit_generators/mt19937#numpy.random.mt19937.MT19937&quot;&gt;&lt;code&gt;MT19937&lt;/code&gt;&lt;/a&gt; has just an unimaginably huge period. Getting a collision internal to &lt;a href=&quot;bit_generators/generated/numpy.random.seedsequence#numpy.random.SeedSequence&quot;&gt;&lt;code&gt;SeedSequence&lt;/code&gt;&lt;/a&gt; is the way a failure would be observed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60e2d2c12de2aebe46c2f1df260407d083a2445" translate="yes" xml:space="preserve">
          <source>iterations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d4da0ff624d9e66ff3953f0b23e64572653291" translate="yes" xml:space="preserve">
          <source>iterator in a multi-iterator object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d64ba127f75f34fd5301d86c4a15131e023da00" translate="yes" xml:space="preserve">
          <source>iterator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef25ae00f40c8471ee44b720036abcc25e96cee" translate="yes" xml:space="preserve">
          <source>kind</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e11523c5ff23fc1600aca2d8ee5adb542c5ce4b3" translate="yes" xml:space="preserve">
          <source>language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c3d864214f1646b883ef798ce9eacb8f69b2c07" translate="yes" xml:space="preserve">
          <source>large enough to fit a pointer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c0f1fbadc4046b5f2bb9e063b227ef8750d9d6" translate="yes" xml:space="preserve">
          <source>left</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4595b43a1318f86b62effdc9807ca11ba99e2a3" translate="yes" xml:space="preserve">
          <source>legacy mtrand</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693d5d2c7aab74256c3e4ee1480f000a1cbe67b9" translate="yes" xml:space="preserve">
          <source>length of item in bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77524f1070e06aec0b17207fbdf7b5af9799b453" translate="yes" xml:space="preserve">
          <source>length of one element in bytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68090d12ecf18b616498f83b4c6add4a19a30d1" translate="yes" xml:space="preserve">
          <source>like &lt;a href=&quot;#numpy.ogrid&quot;&gt;&lt;code&gt;ogrid&lt;/code&gt;&lt;/a&gt; but returns dense (or fleshed out) mesh grids</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c92d6c6c5060c9cc15451b4f11a90f059274fe" translate="yes" xml:space="preserve">
          <source>like mgrid but returns open (not fleshed out) mesh grids</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b1fc2d50fa3eefe7b50d2d8247ed871be55d794" translate="yes" xml:space="preserve">
          <source>linear: &lt;code&gt;i + (j - i) * fraction&lt;/code&gt;, where &lt;code&gt;fraction&lt;/code&gt; is the fractional part of the index surrounded by &lt;code&gt;i&lt;/code&gt; and &lt;code&gt;j&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ec41b92b14271ab10224d725d226df8eb2535e3" translate="yes" xml:space="preserve">
          <source>linewidth : int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29f466375b3518f6e00d7cd0afc4ba3d2ad38671" translate="yes" xml:space="preserve">
          <source>linux2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4495e74fc7ff695e00bdfedf5591a575dc34947d" translate="yes" xml:space="preserve">
          <source>list of the sources. The list of sources may contain functions (called source generators) which must take an extension instance and a build directory as inputs and return a source file or list of source files or None. If None is returned then no sources are generated. If the Extension instance has no sources after processing all source generators, then no extension module is built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aadf46ad52b563db141c6a8b633250cb09e7740c" translate="yes" xml:space="preserve">
          <source>little-endian</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8338dd49aa0ae9664e20f310eb64751513d7384" translate="yes" xml:space="preserve">
          <source>log: Record error in a Log object specified by &lt;a href=&quot;numpy.seterrcall#numpy.seterrcall&quot;&gt;&lt;code&gt;seterrcall&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5656629587221b8239b7141684c8f69c57c8f23" translate="yes" xml:space="preserve">
          <source>long double</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d948caf7aecd42d146111c4d519bf8f167c0f0" translate="yes" xml:space="preserve">
          <source>long period for each cycle, so one has to both get on or near the same cycle &lt;em&gt;and&lt;/em&gt; seed a nearby position in the cycle. &lt;a href=&quot;bit_generators/philox#numpy.random.philox.Philox&quot;&gt;&lt;code&gt;Philox&lt;/code&gt;&lt;/a&gt; has completely independent cycles determined by the seed. &lt;a href=&quot;bit_generators/sfc64#numpy.random.sfc64.SFC64&quot;&gt;&lt;code&gt;SFC64&lt;/code&gt;&lt;/a&gt; incorporates a 64-bit counter so every unique seed is at least</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e42df7d6bf13770dfa7e1d0c57bde92cf46bb9" translate="yes" xml:space="preserve">
          <source>lower triangle of an array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fba654ef1f2db88e525347ee726af628c37c34" translate="yes" xml:space="preserve">
          <source>lower: &lt;code&gt;i&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b0d31c0d563223024da45691584643ac78c96e8" translate="yes" xml:space="preserve">
          <source>m</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0731498bb0d6bbf3825fbde289392d549930ce57" translate="yes" xml:space="preserve">
          <source>macros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9958b009358a3316429f1a01458c5605e70f6b55" translate="yes" xml:space="preserve">
          <source>make_config_py()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e800c27d14e1b52e35e2b5eeeb48440f630b071" translate="yes" xml:space="preserve">
          <source>make_svn_version_py()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3347bb9a7fc5df3d467af85e6ffadff1237ec5" translate="yes" xml:space="preserve">
          <source>masked_array.mask</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a14847ef81de19f27d2715193132cb70267bbf04" translate="yes" xml:space="preserve">
          <source>matmat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583131ec1be78a30e31ca013fe4f731ae5c9fac3" translate="yes" xml:space="preserve">
          <source>matmul</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fe27285fff392016bb8c583c67246eb6704f6e8" translate="yes" xml:space="preserve">
          <source>matrix multiplication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8944062bc0ad5cd18a3cb385a0804eece766779d" translate="yes" xml:space="preserve">
          <source>matrix objects are always 2-dimensional. Therefore, &lt;a href=&quot;#c.PyArray_Squeeze&quot;&gt;&lt;code&gt;PyArray_Squeeze&lt;/code&gt;&lt;/a&gt; has no effect on arrays of matrix sub-class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51da9d7b2d49a31fd959ed258f5a5b5c62b2ff4c" translate="yes" xml:space="preserve">
          <source>matrix-vector multiplication</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ebea207732d9b4145fc5d2dda5d06b06c9d4276" translate="yes" xml:space="preserve">
          <source>matrix.A</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875278905e7eb0ed8ed6bb63183d7179797cf205" translate="yes" xml:space="preserve">
          <source>matrix.A1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cb8f390392fda7c97c0ced522e718efaa7b0494" translate="yes" xml:space="preserve">
          <source>matrix.H</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="747c9083db6923eba84fd6d16089904f93c8a3c2" translate="yes" xml:space="preserve">
          <source>matrix.I</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5f03a2cc86e5bb54db0af9f330a905f9cdf3504" translate="yes" xml:space="preserve">
          <source>matrix.T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b665fe4d3635f373fd3cf8a2b402ca359e11997e" translate="yes" xml:space="preserve">
          <source>matrix.all()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ce3399833c3eab4edd33bf070e623e5b90dbbe" translate="yes" xml:space="preserve">
          <source>matrix.any()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ec75d8be6bd9c7929c4e4f01c0975068bdad80" translate="yes" xml:space="preserve">
          <source>matrix.argmax()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a04a617f5db44c987d970121c7becbef5ba835" translate="yes" xml:space="preserve">
          <source>matrix.argmin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9f03e6abb6fae7f64b3214bc7f4cdd7fc56330" translate="yes" xml:space="preserve">
          <source>matrix.argpartition()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12418d6872afd2d14b78342683083aa0b0eae63d" translate="yes" xml:space="preserve">
          <source>matrix.argsort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ecebb18556d7b38118fd510a853ab81a3a10e4" translate="yes" xml:space="preserve">
          <source>matrix.astype()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc64aee3b03fe9a36f2f963aed5cf920c81b9a6" translate="yes" xml:space="preserve">
          <source>matrix.base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46297aad2cf1e42258fd15aca369c697ebdea912" translate="yes" xml:space="preserve">
          <source>matrix.byteswap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f19e19e4102f475cb13d8e9f43c9c1c62e77d56" translate="yes" xml:space="preserve">
          <source>matrix.choose()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2946986294351e28f0d733d7bd15735fe3391a" translate="yes" xml:space="preserve">
          <source>matrix.clip()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec6f0a81323fdf35147652dfb99686b8aacef260" translate="yes" xml:space="preserve">
          <source>matrix.compress()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70937b2849a3eef6dcf4a85cd981ab2b30e9bcbb" translate="yes" xml:space="preserve">
          <source>matrix.conj()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4f184cf40451a5e02c97d3c7e57cce467cfe5d" translate="yes" xml:space="preserve">
          <source>matrix.conjugate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7047ca219688b3e827615534f6a59fc9bf75e13f" translate="yes" xml:space="preserve">
          <source>matrix.copy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4ad7858bb51e49495dffc52b7749a85cac40b73" translate="yes" xml:space="preserve">
          <source>matrix.ctypes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2857ba64a315ac4ed59e7293ce8b7efe43c3d000" translate="yes" xml:space="preserve">
          <source>matrix.cumprod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb44be27a4a5c95c929ed83b6efea27170edd67b" translate="yes" xml:space="preserve">
          <source>matrix.cumsum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060011a456a32d263eb70cc88647a7c83ccfbdc5" translate="yes" xml:space="preserve">
          <source>matrix.data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f22bc2833cf47a6b2ce1f35b7b075a4fcbf9fb" translate="yes" xml:space="preserve">
          <source>matrix.diagonal()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c882847efa6d3e7925fd3e98e96b369053856207" translate="yes" xml:space="preserve">
          <source>matrix.dot()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b074dfe7af29c84e0d51b1e6d91672bfe4fedb5" translate="yes" xml:space="preserve">
          <source>matrix.dump()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d533d2e7a874f3780c0cc97b07bfbb6a900608" translate="yes" xml:space="preserve">
          <source>matrix.dumps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="725ca9269f96cc174d13f2d696e52679d92d58cc" translate="yes" xml:space="preserve">
          <source>matrix.fill()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2bb2c470ebac9ad8f28d88458fed72d819c5dd5" translate="yes" xml:space="preserve">
          <source>matrix.flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92b7616830b51f87c7f09c2d9bd2f8db2d8c601" translate="yes" xml:space="preserve">
          <source>matrix.flat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f9fc6e273aa6311b8a30dab76504e6498411dd" translate="yes" xml:space="preserve">
          <source>matrix.flatten()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39af0942d011f1279d22a81d8533cf6901871a47" translate="yes" xml:space="preserve">
          <source>matrix.getA()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79dc64b4f5a9af6dcbab6be2bab1e70561e7d28f" translate="yes" xml:space="preserve">
          <source>matrix.getA1()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6a90665c9c019f7283b6dedbacd9e3d24ba0090" translate="yes" xml:space="preserve">
          <source>matrix.getH()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="594b50abe4187099b51fdacad992e66d6449eee9" translate="yes" xml:space="preserve">
          <source>matrix.getI()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a477a437e5e912674926d9971583daa2db4d5e95" translate="yes" xml:space="preserve">
          <source>matrix.getT()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ad8a825c4ed2d19618c6bc4375eb45fa130f81" translate="yes" xml:space="preserve">
          <source>matrix.getfield()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5345850bcf30576f1d34e09bf5336b9d27f99e" translate="yes" xml:space="preserve">
          <source>matrix.item()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd052642c77ab35742ef74ef4e28a7eca7d3c5cc" translate="yes" xml:space="preserve">
          <source>matrix.itemset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2634fb9829417e855943a15261112cab393dfd1" translate="yes" xml:space="preserve">
          <source>matrix.itemsize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f79548cbb3107575295e0987defe497ace426d2" translate="yes" xml:space="preserve">
          <source>matrix.max()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92068e14ca706ee9f16faeef43dd4ccb79b95927" translate="yes" xml:space="preserve">
          <source>matrix.mean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebc415bf8b99690d9c6dabdd010b782a8f23ccc9" translate="yes" xml:space="preserve">
          <source>matrix.min()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5d2cc6806b10288c0229a248242a4bec8211d83" translate="yes" xml:space="preserve">
          <source>matrix.nbytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a456cab14c3bef0cb27493b99941eb450f05da30" translate="yes" xml:space="preserve">
          <source>matrix.ndim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031296fd5c5af001c0048b76b4b3a868340bd439" translate="yes" xml:space="preserve">
          <source>matrix.newbyteorder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3223d3ab3e2f64f90f92701ebe8871215bab181" translate="yes" xml:space="preserve">
          <source>matrix.nonzero()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094fff157eb6d86292fd20a3c48b9dded60d0fc0" translate="yes" xml:space="preserve">
          <source>matrix.partition()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc01d7bdf1119af632e9ab7cecc80b9cf7da99d6" translate="yes" xml:space="preserve">
          <source>matrix.prod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c707ae16af3075599cf31c1a5ba33e5e3eeb229" translate="yes" xml:space="preserve">
          <source>matrix.ptp()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ae779db6f9da6ad3eee290e425566cb5d7d0669" translate="yes" xml:space="preserve">
          <source>matrix.put()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f153959e1ec46a71e871d8cfac7e829fef36067" translate="yes" xml:space="preserve">
          <source>matrix.ravel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e6a8f1722840bde1179006dc67bb3569b21d7e" translate="yes" xml:space="preserve">
          <source>matrix.repeat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c323623ec04e358a301ccfd48e8c06b638bbc3cc" translate="yes" xml:space="preserve">
          <source>matrix.reshape()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145e8fb8b69ca390e9b5f2283571d431b4658866" translate="yes" xml:space="preserve">
          <source>matrix.resize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831be03c1fdd103210c0d4766abf233b331cdaa7" translate="yes" xml:space="preserve">
          <source>matrix.round()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99e9efc76614be9ee155da578ffff7b88f8efa6e" translate="yes" xml:space="preserve">
          <source>matrix.searchsorted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85058c303b62cb166e1125d6430a4085904a44fd" translate="yes" xml:space="preserve">
          <source>matrix.setfield()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b377868ee66b82da8c853d4ed34ba35c5c4fab8" translate="yes" xml:space="preserve">
          <source>matrix.setflags()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e149142041a14ee48759524a85b9b351786b1f" translate="yes" xml:space="preserve">
          <source>matrix.shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb958a015de8acc6667f8cbbb896f916f7b5b3d" translate="yes" xml:space="preserve">
          <source>matrix.size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcc4a285f11f0168104d50c03e217e635d2fb59" translate="yes" xml:space="preserve">
          <source>matrix.sort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860796aa4ec431cf653553c47d91ca2b43a65728" translate="yes" xml:space="preserve">
          <source>matrix.squeeze()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e73166e4aa1eefbe7185803225c245b5b2659b30" translate="yes" xml:space="preserve">
          <source>matrix.std()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e8c15ed36f1f0ed950372bb30d5e7f67de109d1" translate="yes" xml:space="preserve">
          <source>matrix.strides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="155b9fb07a0a473cb607e9ef4b487faff3d42c87" translate="yes" xml:space="preserve">
          <source>matrix.sum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba96e584760cac5284cb59fd6847b649a10783ab" translate="yes" xml:space="preserve">
          <source>matrix.swapaxes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29887fb95c598f40b94373306216023ae63f5470" translate="yes" xml:space="preserve">
          <source>matrix.take()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cd60a4606df2681c245e814e5d47aeae11c87df" translate="yes" xml:space="preserve">
          <source>matrix.tobytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f14a502bea6557fd907404cdf78acbc3e2e3ed" translate="yes" xml:space="preserve">
          <source>matrix.tofile()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e42b6a3cc8ba924ec25285139adda72bd9a4ef" translate="yes" xml:space="preserve">
          <source>matrix.tolist()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dff74d4e57335741f100681712e3d193f9f17893" translate="yes" xml:space="preserve">
          <source>matrix.tostring()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bc6efdb8d2a87c1cf6c0cf6fba659b442191d13" translate="yes" xml:space="preserve">
          <source>matrix.trace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd80ad2df9eb9c92d92935837cb4e908e5e4e07e" translate="yes" xml:space="preserve">
          <source>matrix.transpose()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="250c9d0858e175c2da5ca412c82a8905680d9d03" translate="yes" xml:space="preserve">
          <source>matrix.var()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4a09bfd02217fb7db117e09b25833001ac2e6e" translate="yes" xml:space="preserve">
          <source>matrix.view()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9302a2fa71bdf5d037a9f0bef3908294a781a042" translate="yes" xml:space="preserve">
          <source>matvec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffda383f347ada1a98d7396a9b725dc7af220c26" translate="yes" xml:space="preserve">
          <source>max(abs(x))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce68a8fdd83c1b6356e70dcabf1def815a8eb6c5" translate="yes" xml:space="preserve">
          <source>max(sum(abs(x), axis=0))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89ea878a1c0d62451211ee70e3b9fd53067b6455" translate="yes" xml:space="preserve">
          <source>max(sum(abs(x), axis=1))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07a0b4a54a7c5e94355201e2d2357c6796f4db00" translate="yes" xml:space="preserve">
          <source>max_work=MAY_SHARE_BOUNDS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed08e945aeedfe4cfff413182c52dc2746f4035e" translate="yes" xml:space="preserve">
          <source>max_work=MAY_SHARE_EXACT (default)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8d18dcb8afe17dbcb34261238315213416379d5" translate="yes" xml:space="preserve">
          <source>memmap.flush()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b9b687f3e115be6174cd7a40735bf1fe264f0e7" translate="yes" xml:space="preserve">
          <source>memmap.shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8a8125d82a99d3bd0d521204e6af1983ed8cb9c" translate="yes" xml:space="preserve">
          <source>memory allocation of the temporary buffers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfbaf8b2d1cdf92bf83857fe1748c0f68de03d47" translate="yes" xml:space="preserve">
          <source>method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7171851c5065518a336252c17f2a346952dfd00" translate="yes" xml:space="preserve">
          <source>microsecond</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63edde09c7db5096516eb238a6e7e52c73989a8" translate="yes" xml:space="preserve">
          <source>midpoint: &lt;code&gt;(i + j) / 2&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7779e9df0bddb39ad9871f3d3faf9f9c59a62c5b" translate="yes" xml:space="preserve">
          <source>millisecond</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db404d0fc00eba2f69ae7a48b59fb849d05ce8af" translate="yes" xml:space="preserve">
          <source>min(abs(x))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ab46b26ada48fc108c116142fd5058d30a6de9" translate="yes" xml:space="preserve">
          <source>min(sum(abs(x), axis=0))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d95651aa5aee0c940152510b4398770d02ff7f" translate="yes" xml:space="preserve">
          <source>min(sum(abs(x), axis=1))</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04987fcab72ade3a87a64267b02a2ad9f8f22484" translate="yes" xml:space="preserve">
          <source>minute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="057d232c59ff49d9358d27ac49c348f994200ed8" translate="yes" xml:space="preserve">
          <source>misc_util</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="021710fa7866431c1dacaa6cd31eeeb47dce64b6" translate="yes" xml:space="preserve">
          <source>month</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26cc3217be640e8220112c25628da6e11c78db95" translate="yes" xml:space="preserve">
          <source>ms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb223929464f7f8b3cb3603be67a044c5e24e160" translate="yes" xml:space="preserve">
          <source>multiply the output of &lt;a href=&quot;#numpy.random.Generator.random&quot;&gt;&lt;code&gt;random&lt;/code&gt;&lt;/a&gt; by &lt;code&gt;(b-a)&lt;/code&gt; and add &lt;code&gt;a&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4733d57376ed5cc87a4ac45c766285a1cfc2f541" translate="yes" xml:space="preserve">
          <source>multiply the output of &lt;a href=&quot;#numpy.random.mtrand.RandomState.random_sample&quot;&gt;&lt;code&gt;random_sample&lt;/code&gt;&lt;/a&gt; by &lt;code&gt;(b-a)&lt;/code&gt; and add &lt;code&gt;a&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae999552a0d2dca14d62e2bc8b764d377b1dd6c" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3e95eab684551b76e65d88d3f7d5c1d5089f72" translate="yes" xml:space="preserve">
          <source>name of the extension</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99bd225be2d8ae4e781e302dca4b9f1f0b83ed96" translate="yes" xml:space="preserve">
          <source>name of the subpackage</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11e623a37e87cf7995c466723ec99688d55cae8c" translate="yes" xml:space="preserve">
          <source>nan</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="411a28e33c8bd927c385301746b68d1876fb8f3b" translate="yes" xml:space="preserve">
          <source>nanosecond</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="457ab9206ab34bebf9d8d3cde8d720170dbd8b14" translate="yes" xml:space="preserve">
          <source>nanstr : str</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5b01580ce43822444ae4c79edcd0dc789028f1" translate="yes" xml:space="preserve">
          <source>native</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="611c628421c4ab3dad90c5f4b0039b0eb0ceef96" translate="yes" xml:space="preserve">
          <source>ndarray.T</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dba9309cee0cd5bec169ee09b88bdee32874b24" translate="yes" xml:space="preserve">
          <source>ndarray.__abs__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="784d74c7af0fc9cb7dfd348883f25be6d3b2d2cd" translate="yes" xml:space="preserve">
          <source>ndarray.__add__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8370fdfe06e98ef67b7a1464a0dfe5dc6638aeca" translate="yes" xml:space="preserve">
          <source>ndarray.__and__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="537749a324defa4c8325a8670753bd8f0666577a" translate="yes" xml:space="preserve">
          <source>ndarray.__array__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e26186916dbd4fec72df54ca56399f8e0acde0f3" translate="yes" xml:space="preserve">
          <source>ndarray.__array_wrap__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011f22ca7136725b9c00d016a860b53ce722001e" translate="yes" xml:space="preserve">
          <source>ndarray.__bool__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7779f399164d3652400ae053c1706b365fa9ef" translate="yes" xml:space="preserve">
          <source>ndarray.__complex__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b2d9313495da9829d7e3b18276525d34c6ba301" translate="yes" xml:space="preserve">
          <source>ndarray.__contains__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ee9f6ba1d65685c21de8e388cecfdbaf9941318" translate="yes" xml:space="preserve">
          <source>ndarray.__copy__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb86bf4ea3e8d578b0c6a1e24cc6c6ed27387cb9" translate="yes" xml:space="preserve">
          <source>ndarray.__deepcopy__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bf5f9a8a1ecf2b557b6c68f0184b8625b107198" translate="yes" xml:space="preserve">
          <source>ndarray.__divmod__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c5939bf0143ba916e6b044dbc98ea1a39cb5224" translate="yes" xml:space="preserve">
          <source>ndarray.__eq__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b362d80139e7f9522ce7650f807b191a3c8dfbc7" translate="yes" xml:space="preserve">
          <source>ndarray.__float__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8094306cf3b2edfa849263c8c154e654d3d66fa" translate="yes" xml:space="preserve">
          <source>ndarray.__floordiv__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482a4808c6c92f205d85d52b55049ff3832d439c" translate="yes" xml:space="preserve">
          <source>ndarray.__ge__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726af678de7f378ff8734690423c64edea9f9082" translate="yes" xml:space="preserve">
          <source>ndarray.__getitem__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a3283880d50b66d82e171c034d23355081525c" translate="yes" xml:space="preserve">
          <source>ndarray.__gt__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f591971b9b503c651aa8cc3747ce19cf7725aa82" translate="yes" xml:space="preserve">
          <source>ndarray.__iadd__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45e4f3e6509c9f9ed8b0c57f44cf0e8571869443" translate="yes" xml:space="preserve">
          <source>ndarray.__iand__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cafa04a939a87637f1297910f8bb9a8262aa837a" translate="yes" xml:space="preserve">
          <source>ndarray.__ifloordiv__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="113e4f8e122e7df6343d9c0b405fbb3adff30aba" translate="yes" xml:space="preserve">
          <source>ndarray.__ilshift__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="456374e0135c538e5bec5d7984bd09153244a780" translate="yes" xml:space="preserve">
          <source>ndarray.__imod__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1e2842fdbcfe549f33ca422a70bb0ee034ab52" translate="yes" xml:space="preserve">
          <source>ndarray.__imul__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae14553e171443fb2af36c9d6c6fe084c894531" translate="yes" xml:space="preserve">
          <source>ndarray.__int__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4b8a3e9bf06247500744ab249b7f4d08370318f" translate="yes" xml:space="preserve">
          <source>ndarray.__invert__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eee83ba999cbb067494be3dd5a803519b92d876" translate="yes" xml:space="preserve">
          <source>ndarray.__ior__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a529454aa2396b4e7bad1259b43b223e99804b9d" translate="yes" xml:space="preserve">
          <source>ndarray.__ipow__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec26f7ff5d68507a151ed9b3c09c0284170cdae8" translate="yes" xml:space="preserve">
          <source>ndarray.__irshift__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b3fd77fa85a465fb12355e5738e7d3596389aa" translate="yes" xml:space="preserve">
          <source>ndarray.__isub__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7a8ecdfc431689049bd4bd1f9da0380036c464d" translate="yes" xml:space="preserve">
          <source>ndarray.__itruediv__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90cea7b1a3a617191ae52c9aae8bfbf53a892c0f" translate="yes" xml:space="preserve">
          <source>ndarray.__ixor__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fe523d9fd90f024ac13443e004d22ffa620235" translate="yes" xml:space="preserve">
          <source>ndarray.__le__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3699870732b6e487631e7751f18b42b7d563ee2" translate="yes" xml:space="preserve">
          <source>ndarray.__len__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcfd72f5e9e35c7fc3387451abb8ef3b2ec00cc9" translate="yes" xml:space="preserve">
          <source>ndarray.__lshift__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5507a4405ea27d31bddfd1c4906f3ca79d6d6fe" translate="yes" xml:space="preserve">
          <source>ndarray.__lt__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="287e3e0fd5fd15844dd302d7c2d80bf0bc51aa49" translate="yes" xml:space="preserve">
          <source>ndarray.__matmul__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0bf9b3d73e5723f14fe330f2c0f26f96e27477" translate="yes" xml:space="preserve">
          <source>ndarray.__mod__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee49efd664130650d141aff28f0951244050a600" translate="yes" xml:space="preserve">
          <source>ndarray.__mul__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf634c2b760a1430a0e58173cf902b73603f23df" translate="yes" xml:space="preserve">
          <source>ndarray.__ne__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43158bddbd2105806fe145a537b047180fe501e8" translate="yes" xml:space="preserve">
          <source>ndarray.__neg__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3762097f8064acf8f525936b1d0011a22c9a09" translate="yes" xml:space="preserve">
          <source>ndarray.__new__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db9eb3f32c94b8229b881ba938638dbef2d5ed4" translate="yes" xml:space="preserve">
          <source>ndarray.__or__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eee5726a3e6dcc90c6dabece248478cc515c58ef" translate="yes" xml:space="preserve">
          <source>ndarray.__pos__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff516d28eceb70cdd52d76bcc0163de30c59a99" translate="yes" xml:space="preserve">
          <source>ndarray.__pow__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fab9aa15466d4b036c62438e249a746ecbb6e60b" translate="yes" xml:space="preserve">
          <source>ndarray.__reduce__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d6e2177b049c25f417bd1802db03f72aaa5a8e0" translate="yes" xml:space="preserve">
          <source>ndarray.__repr__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6878f3b7c9f77f739499f061ac8a04f27a6d80cd" translate="yes" xml:space="preserve">
          <source>ndarray.__rshift__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3993dc75160200d7c7260b1c33ee9b13535741eb" translate="yes" xml:space="preserve">
          <source>ndarray.__setitem__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d324eab95ce1a0644b8a9a55c1175ffcb021e8c0" translate="yes" xml:space="preserve">
          <source>ndarray.__setstate__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b90b89cecccf753c7acf87b7e303ed5b3e30897" translate="yes" xml:space="preserve">
          <source>ndarray.__str__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295692234a6181756593b16762b9c929b08c5c79" translate="yes" xml:space="preserve">
          <source>ndarray.__sub__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08e0a51f9ad3183e24b4ea34d5203222d13210f8" translate="yes" xml:space="preserve">
          <source>ndarray.__truediv__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1bfd1a1bb57c82b57581d9cf1c7a51a2dc8ff04" translate="yes" xml:space="preserve">
          <source>ndarray.__xor__()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25d168319398ae91c07d1b5fdc9c7b24aa73159" translate="yes" xml:space="preserve">
          <source>ndarray.all()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa8a8b4b77fdd8a2afe481cf221925aebd590a8" translate="yes" xml:space="preserve">
          <source>ndarray.any()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6042060ed706e45ed6f4f500049b3cafa65e0ae" translate="yes" xml:space="preserve">
          <source>ndarray.argmax()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab4c2d1ffe9310f054a268575b0d6030efad5743" translate="yes" xml:space="preserve">
          <source>ndarray.argmin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81262cbbdc3636995439dc734c823a942addcce1" translate="yes" xml:space="preserve">
          <source>ndarray.argpartition()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="690ca5883a53b4c7fb5785e82cb9eb506af4aca9" translate="yes" xml:space="preserve">
          <source>ndarray.argsort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32088be6a72dda3932aaeb16610cb86810a181fb" translate="yes" xml:space="preserve">
          <source>ndarray.astype()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edcb23087bb64dce70cbfd7052660aca136bac78" translate="yes" xml:space="preserve">
          <source>ndarray.base</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98953548b597b571ab483eb9501f29590f95b084" translate="yes" xml:space="preserve">
          <source>ndarray.byteswap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a02d14ae301844a47949f3faa560cb81fdd42c2" translate="yes" xml:space="preserve">
          <source>ndarray.choose()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e38458dd62efa12b6dabb055176572510f4e9bb6" translate="yes" xml:space="preserve">
          <source>ndarray.clip()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842de7edbe7b8231807d1d88199c45ff2faad5d5" translate="yes" xml:space="preserve">
          <source>ndarray.compress()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a94a8758f9e65abe36dcb2c3b4154bd7ea74eac" translate="yes" xml:space="preserve">
          <source>ndarray.conj()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a51d8c83dbe059cb91747834ad43bb05878d2fd7" translate="yes" xml:space="preserve">
          <source>ndarray.conjugate()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffcffada24f44e439bd9d517d2a895e80db4cf4d" translate="yes" xml:space="preserve">
          <source>ndarray.copy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520d303f1604b2fa89337e4d50b22d27d330f250" translate="yes" xml:space="preserve">
          <source>ndarray.ctypes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b193bf76ac2e18cb7e3fef53564ffb9051f4b4cd" translate="yes" xml:space="preserve">
          <source>ndarray.cumprod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98663f5ac44cbdac9800bbc255a6a71fc663f547" translate="yes" xml:space="preserve">
          <source>ndarray.cumsum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0df6bff6d09e34326d851b0514cda48ffa3263" translate="yes" xml:space="preserve">
          <source>ndarray.data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="832be20025ee44dc9851f850bbfc85c47343784b" translate="yes" xml:space="preserve">
          <source>ndarray.diagonal()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df5ee7da93ca5553e1e2173795c03fefadbb620" translate="yes" xml:space="preserve">
          <source>ndarray.dot()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4434da68a87693aec0df8ef378ee7d65401ef77d" translate="yes" xml:space="preserve">
          <source>ndarray.dtype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff15522861efb2a478fc69d382b6b8a0b696adc6" translate="yes" xml:space="preserve">
          <source>ndarray.dump()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caed1a20e856e0201222a00a0016e99eda653fe6" translate="yes" xml:space="preserve">
          <source>ndarray.dumps()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c90626b6ee9db54a1267140bbe15e5b6215e5d1" translate="yes" xml:space="preserve">
          <source>ndarray.fill()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c5e4bd80ec66714f96dde0f14199672f3939de" translate="yes" xml:space="preserve">
          <source>ndarray.flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16af29083cd2830170bd3653810396e429268139" translate="yes" xml:space="preserve">
          <source>ndarray.flat</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8b9cdcc9f30a61885e1abb89a99ee848188f87" translate="yes" xml:space="preserve">
          <source>ndarray.flatten()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f695f99cb67d7de4409808daaa03cb8e890bab94" translate="yes" xml:space="preserve">
          <source>ndarray.getfield()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c28894c435f692eef6d503dbef9cd6fac314b2c" translate="yes" xml:space="preserve">
          <source>ndarray.imag</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9270297fd1e02c34262554b39e8b211a4bf8f1" translate="yes" xml:space="preserve">
          <source>ndarray.item()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05f672ab7099a24eca5dafb9b121e7d06f253fd9" translate="yes" xml:space="preserve">
          <source>ndarray.itemset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6a76035c76b5f482b8cadbb347bc548ca3dc0f3" translate="yes" xml:space="preserve">
          <source>ndarray.itemsize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22694d3a9f1d1e1223c0f87e32eb2c9aea014775" translate="yes" xml:space="preserve">
          <source>ndarray.max()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a73f16d59f221938b7df85abfb501a150d993a" translate="yes" xml:space="preserve">
          <source>ndarray.mean()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d887c05f5fc7e679b56612371d46aea0f2d8de66" translate="yes" xml:space="preserve">
          <source>ndarray.min()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b0d71e9bdf59ae4ce90a6f04b08e2b813531614" translate="yes" xml:space="preserve">
          <source>ndarray.nbytes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d55d1c7afaa59dab5ef9f06229bd673d2c60fb7a" translate="yes" xml:space="preserve">
          <source>ndarray.ndim</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f96164c195b613f46a5ca4123192c09cc7710f8" translate="yes" xml:space="preserve">
          <source>ndarray.newbyteorder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657825bcac72a6c0cfb8348fe3dc5597f79dfb99" translate="yes" xml:space="preserve">
          <source>ndarray.nonzero()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da2b8ce697f4a2bf92265bbfee5d56c40f0882b" translate="yes" xml:space="preserve">
          <source>ndarray.partition()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2d719709418e240e11c7200fdd3be2a655a3d9d" translate="yes" xml:space="preserve">
          <source>ndarray.prod()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc175ce20c118a8a053fc384646b17e6e2d1817b" translate="yes" xml:space="preserve">
          <source>ndarray.ptp()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8ec0ce004a49c2b3c427fac7948ceeccba5496" translate="yes" xml:space="preserve">
          <source>ndarray.put()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc80386f7082baedf092a43685f354334fde8b6d" translate="yes" xml:space="preserve">
          <source>ndarray.ravel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5999536e68a62302170ef45990071fc25c599bc7" translate="yes" xml:space="preserve">
          <source>ndarray.real</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a10a39895f06f837d8c338a0dfb03e3c4e3edb8" translate="yes" xml:space="preserve">
          <source>ndarray.repeat()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b18a99411a63bc3fa60e76313049f21cb35b4dff" translate="yes" xml:space="preserve">
          <source>ndarray.reshape()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a5062f26e42cc16996b376ddba02964999980f" translate="yes" xml:space="preserve">
          <source>ndarray.resize()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0722dd589cb18efad44da38dd140d61e1dd9b214" translate="yes" xml:space="preserve">
          <source>ndarray.round()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28be4ced3183c81f99a66c7e54c18cf480719c3b" translate="yes" xml:space="preserve">
          <source>ndarray.searchsorted()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4ff506738ea4d49d1ededfcfec2574289309d3a" translate="yes" xml:space="preserve">
          <source>ndarray.setfield()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297b83666a772693555a6d5cb7e11d31a73d29f3" translate="yes" xml:space="preserve">
          <source>ndarray.setflags()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94fcfafcedcec150dfbdb63a932f2e37c1259c4" translate="yes" xml:space="preserve">
          <source>ndarray.shape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e984f7602859b4228914854c2cf045a1a30ad237" translate="yes" xml:space="preserve">
          <source>ndarray.size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ba2d978796264c002f194b111a37c658a4021d6" translate="yes" xml:space="preserve">
          <source>ndarray.sort()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c46b41eaf0a80d62c711bd25c2582776531c86e2" translate="yes" xml:space="preserve">
          <source>ndarray.squeeze()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="324786dec5213ccd8b1ecff80ffecbe38fce2bb7" translate="yes" xml:space="preserve">
          <source>ndarray.std()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="464f55c1f4f43eb2e1827e928b0c3b7670f9e943" translate="yes" xml:space="preserve">
          <source>ndarray.strides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728b5badf5b0df75ddd5878400af6173b874350f" translate="yes" xml:space="preserve">
          <source>ndarray.sum()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3775b4f24d8ab982449a40901a28819afd47f118" translate="yes" xml:space="preserve">
          <source>ndarray.swapaxes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97f8ee58261ef11d0f4cb25a296edd017660eff0" translate="yes" xml:space="preserve">
          <source>ndarray.take()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c374d3c931339e1f1bd568f5cac7e574a63fd228" translate="yes" xml:space="preserve">
          <source>ndarray.tobytes()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b781df305d1b5748f1cf237be14b51789bf470b" translate="yes" xml:space="preserve">
          <source>ndarray.tofile()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb1dd1b31dacdb0f6e9c43429a6c782a3381e144" translate="yes" xml:space="preserve">
          <source>ndarray.tolist()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5118b527e1f66632dfcd2f9ec160b5a3d0ab19" translate="yes" xml:space="preserve">
          <source>ndarray.tostring()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b2e16bc015be59e5fd89a36282b228fa9cf36e4" translate="yes" xml:space="preserve">
          <source>ndarray.trace()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ea1613eda3064f6a9cd7c572060e80ad8c4232" translate="yes" xml:space="preserve">
          <source>ndarray.transpose()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37650f38d8ec4fac36590a284d08dc1650b69084" translate="yes" xml:space="preserve">
          <source>ndarray.var()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac609d587c2c20e7601e5daa50e76d1fdec22f3" translate="yes" xml:space="preserve">
          <source>ndarray.view()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d97d688f9e7e1bd239fe9928c67289a495fd78" translate="yes" xml:space="preserve">
          <source>ndenumerate.next()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5264d622728dafc9e2f8cc58178ecbaae26d491" translate="yes" xml:space="preserve">
          <source>ndindex.ndincr()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c328a6757d9e76e1fd0f2a3b8022a5d1d885c6c" translate="yes" xml:space="preserve">
          <source>ndindex.next()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dffc22faf698f089e0877346e30abe5339a98966" translate="yes" xml:space="preserve">
          <source>nditer.close()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bdc09e83947343780ac7f46ae18e4033c913b65" translate="yes" xml:space="preserve">
          <source>nditer.copy()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a416813b68a9502f9a8d95b30fc3c58bdc29a4" translate="yes" xml:space="preserve">
          <source>nditer.debug_print()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ae997455f67adf9ca05864ca9af02b9025140e" translate="yes" xml:space="preserve">
          <source>nditer.enable_external_loop()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30cb17e1450115b590e53a945626d624ffb48353" translate="yes" xml:space="preserve">
          <source>nditer.index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ce1541ac91be68c0c09a2afd1db6146db34377" translate="yes" xml:space="preserve">
          <source>nditer.iternext()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04fa871f6fa61e06703c6403429127e446188e9e" translate="yes" xml:space="preserve">
          <source>nditer.itersize</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae23851d9f2f59aba037dee98ee539a69059e14a" translate="yes" xml:space="preserve">
          <source>nditer.multi_index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4d750072d78256d6d3c796f828c3aa47f7e345" translate="yes" xml:space="preserve">
          <source>nditer.operands</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d4fdc9cd935c2bb50539548fd764adfc0d8a8c" translate="yes" xml:space="preserve">
          <source>nditer.remove_axis()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93a237f120c176a42151fb26570983e3ee396586" translate="yes" xml:space="preserve">
          <source>nditer.remove_multi_index()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5f746ba8ef37cb909fa655e0adeb8032f34ebb1" translate="yes" xml:space="preserve">
          <source>nditer.reset()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb36b5bfcd819fc6981a40ece8817704767b0e25" translate="yes" xml:space="preserve">
          <source>nditer.value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b83b60ac02fa5d4968fb0565365402568302ce10" translate="yes" xml:space="preserve">
          <source>nearest: &lt;code&gt;i&lt;/code&gt; or &lt;code&gt;j&lt;/code&gt;, whichever is nearest.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499df10ef30753bf32639931cfeccede7651309d" translate="yes" xml:space="preserve">
          <source>newaxis</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fe6518cc5989c4d080bc896ba8c2f1cd2e770a3" translate="yes" xml:space="preserve">
          <source>next_double - function pointer to produce doubles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83be13d7f37ac6be77e571afb2067160b981254" translate="yes" xml:space="preserve">
          <source>next_uint32 - function pointer to produce 32 bit integers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="597abe284b195b3b115d6f12882dafbac436517c" translate="yes" xml:space="preserve">
          <source>next_uint64 - function pointer to produce 64 bit integers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd1286353570c5703799ba76999323b7c7447b06" translate="yes" xml:space="preserve">
          <source>no</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7268c5bf8d32543d88301ff9f34648417ec9ec18" translate="yes" xml:space="preserve">
          <source>no copy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ec89380c7dc0f85bc62a3fdefdf8b3b6e7b96d" translate="yes" xml:space="preserve">
          <source>none: in this case, the method only works for arrays with one element (&lt;code&gt;a.size == 1&lt;/code&gt;), which element is copied into a standard Python scalar object and returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4a3329772622fa80603b03b73286f6a3c4f2c3" translate="yes" xml:space="preserve">
          <source>nonzero()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbbdb522d825f6e0b0bc09e4b3dd6ce1862ddc3c" translate="yes" xml:space="preserve">
          <source>norm for matrices</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722659deb799e10ea4ddf23ffc9fdb3c8145664a" translate="yes" xml:space="preserve">
          <source>norm for vectors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d1e1bdf71f516f2f62b1fac060d67c732aa3c9" translate="yes" xml:space="preserve">
          <source>not applicable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d76a8584dcff4715f855958f783faea9f1d6b8e" translate="yes" xml:space="preserve">
          <source>not like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da15afe989c5d062cb5642caecd68550cf77846a" translate="yes" xml:space="preserve">
          <source>notfound_action:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0344af2be40f0afe740a84a003112c188a3434e6" translate="yes" xml:space="preserve">
          <source>np.array allows to specify whether the array is written in C-contiguous order (last index varies the fastest), or FORTRAN-contiguous order in memory (first index varies the fastest).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d42907a6ca66ab0178a783c83794b084420603" translate="yes" xml:space="preserve">
          <source>np.busday_count():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a757524c0b9a1e4780ce85a48018fbc23c10e10f" translate="yes" xml:space="preserve">
          <source>np.is_busday():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c203c80ca8c4d05cbc9b81c95e69acbdd6bb623" translate="yes" xml:space="preserve">
          <source>npy-pkg-config files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b42bb2fff21dcd4894013551c7f5ca04f1d4dbb9" translate="yes" xml:space="preserve">
          <source>npy_clear_floatstatus()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe81dae7fc89687c3c953e3cf767eacb0dfe375" translate="yes" xml:space="preserve">
          <source>npy_clear_floatstatus_barrier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06eb1ee434f86d0f6e95dd9030fd8804303b38eb" translate="yes" xml:space="preserve">
          <source>npy_copysign()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ba82edf738b09b4c8fb2488fd82f5623fe9aff0" translate="yes" xml:space="preserve">
          <source>npy_double_to_half()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69b5edf4c9897804bf66fde724040cd3142c2e0c" translate="yes" xml:space="preserve">
          <source>npy_doublebits_to_halfbits()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb3910605efd4d9889bb3d86ad6e0ec2467eb44" translate="yes" xml:space="preserve">
          <source>npy_float_to_half()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cb6f1635fd0cf54cf3912a1f039c7a6341fb0e" translate="yes" xml:space="preserve">
          <source>npy_floatbits_to_halfbits()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e8f0bf7aae74fc5d85d4c237b3afc66a67a8f0" translate="yes" xml:space="preserve">
          <source>npy_get_floatstatus()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5129e58fb7b5eb58051da3bad56a6b8e75656112" translate="yes" xml:space="preserve">
          <source>npy_get_floatstatus_barrier()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="852d4fd86785d4d266df4965b08d55ff0f638b78" translate="yes" xml:space="preserve">
          <source>npy_half_copysign()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831862c8e5bb8043fb61f58113786c6df9cc09f5" translate="yes" xml:space="preserve">
          <source>npy_half_eq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a6a8b178c0fb704dda3620dce99342af5687894" translate="yes" xml:space="preserve">
          <source>npy_half_eq_nonan()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f03861775242faebc150eda56d8bc5356e6a991" translate="yes" xml:space="preserve">
          <source>npy_half_ge()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bdda2e86f5c372745b81ac9b751760a7df73a9" translate="yes" xml:space="preserve">
          <source>npy_half_gt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e7cb1c7da8b93bd0dbc14108cd6736939e42611" translate="yes" xml:space="preserve">
          <source>npy_half_isfinite()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ab87582efa05f7a86b3b8458ae417b35cdf663c" translate="yes" xml:space="preserve">
          <source>npy_half_isinf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e2c60138387821eef1d2c58d39efee4f28f4b1c" translate="yes" xml:space="preserve">
          <source>npy_half_isnan()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="431238eb7b718c243aa614f06e6a74fafc5fc024" translate="yes" xml:space="preserve">
          <source>npy_half_iszero()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472454d07d6317fbf2715a7841db35c15a392831" translate="yes" xml:space="preserve">
          <source>npy_half_le()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17529e581516ad922c3af06c5376c91744440c60" translate="yes" xml:space="preserve">
          <source>npy_half_le_nonan()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fb97829da810e00fdb2792e55df10e8687a784" translate="yes" xml:space="preserve">
          <source>npy_half_lt()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26197bdacb834af836c3d5134d00f368ffa20df" translate="yes" xml:space="preserve">
          <source>npy_half_lt_nonan()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55854004d2efea7564b9e04dc447c56a2106ea3" translate="yes" xml:space="preserve">
          <source>npy_half_ne()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="911826fe8f618eaeaaaf8210426f9caf10463b62" translate="yes" xml:space="preserve">
          <source>npy_half_nextafter()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ceccd5137dcc64e74b5132cb0c22fbbeccccf9" translate="yes" xml:space="preserve">
          <source>npy_half_signbit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f35e27cbd892fab4fb8d8a13e2151e8a4af6c36" translate="yes" xml:space="preserve">
          <source>npy_half_spacing()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b687a12c60d2a6953a449556a0e7ea1a720f3998" translate="yes" xml:space="preserve">
          <source>npy_half_to_double()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58a4e9d869bceddd040652464d238d42f46331c9" translate="yes" xml:space="preserve">
          <source>npy_half_to_float()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa1f6fed52c1b2b1e8e1bf6491c1c74f05aa0d74" translate="yes" xml:space="preserve">
          <source>npy_halfbits_to_doublebits()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="353c9303f438c4ee1e2257d2c66afd2fa046afc2" translate="yes" xml:space="preserve">
          <source>npy_halfbits_to_floatbits()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f517cdd17994386636cd07f3e23a76e75e490efe" translate="yes" xml:space="preserve">
          <source>npy_int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d02c8cf24b47e0bdeff21924a99e6ecf836e16e" translate="yes" xml:space="preserve">
          <source>npy_int16</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab96ce4dee94dfa374b913587136f7b271fd59ab" translate="yes" xml:space="preserve">
          <source>npy_int32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6d488583c594da81683a7aecbec77934929057" translate="yes" xml:space="preserve">
          <source>npy_int64</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a006464a7b9ffda8aab797aecdc59c2d422862b" translate="yes" xml:space="preserve">
          <source>npy_intp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef9f1e8c791fffb0a7e61b2f1609f36298d6f2a" translate="yes" xml:space="preserve">
          <source>npy_isfinite()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85357de08acabcccfeca38cd38ecbc2a0f1b9eaf" translate="yes" xml:space="preserve">
          <source>npy_isinf()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85fc8be8cb2bed6ba0e92c7259ac3c1933e2491d" translate="yes" xml:space="preserve">
          <source>npy_isnan()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a838cf59baf455475b0e5842a22bd846fcaa39a7" translate="yes" xml:space="preserve">
          <source>npy_set_floatstatus_divbyzero()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d6b97b763349eb776a3ae2897b94e8adbf39065" translate="yes" xml:space="preserve">
          <source>npy_set_floatstatus_invalid()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1284868212ee23313a9be350f1366ce5ef35730b" translate="yes" xml:space="preserve">
          <source>npy_set_floatstatus_overflow()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84945cbe2c2999baefc75a8fb456a6ae3b2b2b15" translate="yes" xml:space="preserve">
          <source>npy_set_floatstatus_underflow()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06b79a942ab2aed2845531a67c05f53215ae0fdc" translate="yes" xml:space="preserve">
          <source>npy_short</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95d5948fb3360d70466f539d070feb1d55f6c8f5" translate="yes" xml:space="preserve">
          <source>npy_signbit()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9193fe70c33173a1f6c598fefc53daccd765f73" translate="yes" xml:space="preserve">
          <source>npy_spacing()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e071fc2680a85602add9db162ab671a5a27b446c" translate="yes" xml:space="preserve">
          <source>npy_uint</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff95487d12b6a6c91c56cb8f63cfc2f5487b546f" translate="yes" xml:space="preserve">
          <source>npy_uint16</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0260bf60a1a1e9c708b132434bee4169b0c82b9e" translate="yes" xml:space="preserve">
          <source>npy_uint32</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0ddd3a16110d2e302205be4a31d0b4d70d448e" translate="yes" xml:space="preserve">
          <source>npy_uint64</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="927f3f3e1012ad41b59864eee547e67eba614f35" translate="yes" xml:space="preserve">
          <source>npy_uintp</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5075946c6a34d186b49f267542cc5c18e4073dd5" translate="yes" xml:space="preserve">
          <source>npy_ushort</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7320d5b79df006d13821a301995704836157f8ca" translate="yes" xml:space="preserve">
          <source>ns</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76cd06466d098060a9eb26e5fd2a25cb1f3fe0a3" translate="yes" xml:space="preserve">
          <source>nt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c86d6a214f245d6e35b89aa4368ee3ad414ae4f" translate="yes" xml:space="preserve">
          <source>nuclear norm</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95478293641aa4569f5e523dda46a9a613d4afc6" translate="yes" xml:space="preserve">
          <source>number of array dimensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da14ab22cfe5edeae2267cba7f4b7e08e5eace60" translate="yes" xml:space="preserve">
          <source>number of elements in array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae170dcd2d49a9061d2ab50d697765a992a66a81" translate="yes" xml:space="preserve">
          <source>number of elements in the gentype</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f447632b12174e85e13a6851e62cdb5fa7f25aed" translate="yes" xml:space="preserve">
          <source>numpy.DataSource</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab0251d06911fb7728930219f0af116cfea920f" translate="yes" xml:space="preserve">
          <source>numpy.DataSource()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c61f3227e1f8dc9b4bab9c892ec3330e5ba308" translate="yes" xml:space="preserve">
          <source>numpy.DataSource.abspath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b87908f2d94d39983b555b7e73fdb0d0039c288c" translate="yes" xml:space="preserve">
          <source>numpy.DataSource.exists</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4e50dcd31d7a0dab2621851ee77a1dfea0c240" translate="yes" xml:space="preserve">
          <source>numpy.DataSource.open</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee0776bddd607a64815089f49d986459c7af9229" translate="yes" xml:space="preserve">
          <source>numpy.Inf</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdfcb20647b88977878843fb32a1368fb23cde58" translate="yes" xml:space="preserve">
          <source>numpy.Infinity</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025ecdd709ff0dce561d14b90c61da95ba545574" translate="yes" xml:space="preserve">
          <source>numpy.MachAr</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1d15c3aad4f0d52c0595e203a7f9fdd52ae3ec1" translate="yes" xml:space="preserve">
          <source>numpy.MachAr()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c171a0869a392b25fbce1728b9599427eb2f605" translate="yes" xml:space="preserve">
          <source>numpy.NAN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e454c775bb8957090e4f99fe74f58453369535" translate="yes" xml:space="preserve">
          <source>numpy.NINF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a915668e276949a22b5be17d4daa7409a3f2af2" translate="yes" xml:space="preserve">
          <source>numpy.NZERO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e939978ff6476df3aba47cdecf89788c7e88ee5a" translate="yes" xml:space="preserve">
          <source>numpy.NaN</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70b899fe1332ef8d4b33e2e279d80aee948f08c" translate="yes" xml:space="preserve">
          <source>numpy.PINF</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9977e7f193b251205a1ac2061fb4d36e928fafc" translate="yes" xml:space="preserve">
          <source>numpy.PZERO</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0aa0b93853afd3e552dfe966eab7e8acdd8e759" translate="yes" xml:space="preserve">
          <source>numpy.RankWarning</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c30b16fff2ac613be2d26e170fe14bfde2b911" translate="yes" xml:space="preserve">
          <source>numpy.absolute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243e1dd61827a67f7059dafd5082df739cb8e943" translate="yes" xml:space="preserve">
          <source>numpy.absolute()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618411cc77663eac1edd248fff938763844cc4ca" translate="yes" xml:space="preserve">
          <source>numpy.add</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de43292b0e5bc7af3897d0bf99be618e465d5775" translate="yes" xml:space="preserve">
          <source>numpy.add()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38361a0143e8132f9317b2987899527f3bb5116" translate="yes" xml:space="preserve">
          <source>numpy.all</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4845b67f9d267d16e5cd9e68aa9f29d792207b" translate="yes" xml:space="preserve">
          <source>numpy.all()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90266a4a17fc305381471929f1b06f860c2802c2" translate="yes" xml:space="preserve">
          <source>numpy.allclose</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f02fa44698b8315db8b477edab8ae59048dc8486" translate="yes" xml:space="preserve">
          <source>numpy.allclose()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936686df4043b91254921915bbb6ced7687e0e79" translate="yes" xml:space="preserve">
          <source>numpy.amax</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf96c5f63125f2d4c315e8b56688f5ae14c800d" translate="yes" xml:space="preserve">
          <source>numpy.amax()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4321d1337c29df71a43067eb6a30d5df569932d4" translate="yes" xml:space="preserve">
          <source>numpy.amin</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4213e60c19158343583605e1032dd327afbbff6c" translate="yes" xml:space="preserve">
          <source>numpy.amin()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293c74e7fc2f715d6de968d0c9bf6db1742a4208" translate="yes" xml:space="preserve">
          <source>numpy.angle</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f10941eafc2e57683579e6635a48fc5f859a744a" translate="yes" xml:space="preserve">
          <source>numpy.angle()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853c27d7ef1c18d691867d295ea07272240546da" translate="yes" xml:space="preserve">
          <source>numpy.any</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b817eaa09a56f3a92d17432874fc751f907ea50c" translate="yes" xml:space="preserve">
          <source>numpy.any()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54ea9be7a96287f03bcfc3b08ae44dcf425aaff" translate="yes" xml:space="preserve">
          <source>numpy.append</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74f05204676cf789fdd7af8cc3dbaee6ffff731" translate="yes" xml:space="preserve">
          <source>numpy.append()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c13caa924685de2650d97d6c82be15b20e1e9c" translate="yes" xml:space="preserve">
          <source>numpy.apply_along_axis</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
