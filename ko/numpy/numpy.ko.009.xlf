<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="e9f285095a214517cc70148a152aa9ce3bfb1555" translate="yes" xml:space="preserve">
          <source>Least squares fit of Chebyshev series to data.</source>
          <target state="translated">체비 쇼프 시리즈의 최소 제곱은 데이터에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="5eede6c92597c6ad1ec14f2a50e868bfa8dbcef5" translate="yes" xml:space="preserve">
          <source>Least squares fit of Hermite series to data.</source>
          <target state="translated">Hermite 시리즈의 최소 제곱은 데이터에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="f9834397596bb1c91a60ebd7bed6c56b93f210b5" translate="yes" xml:space="preserve">
          <source>Least squares fit of Laguerre series to data.</source>
          <target state="translated">Laguerre 시리즈의 최소 제곱은 데이터에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="60abe6780ea6293285c10210c3c968485e58937b" translate="yes" xml:space="preserve">
          <source>Least squares fit of Legendre series to data.</source>
          <target state="translated">Legendre 시리즈의 최소 제곱은 데이터에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="f70b890f268681837dd642a40e85f47d99c8ef5c" translate="yes" xml:space="preserve">
          <source>Least squares fit to data.</source>
          <target state="translated">최소 제곱은 데이터에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="82d4ad107d684ab9ad44770f05b7a2542d27bae6" translate="yes" xml:space="preserve">
          <source>Least squares polynomial fit.</source>
          <target state="translated">최소 제곱 다항식 적합.</target>
        </trans-unit>
        <trans-unit id="66b99a01120f0770d01e2e70f30aa7b3e6d8760b" translate="yes" xml:space="preserve">
          <source>Least-squares fit of a polynomial to data.</source>
          <target state="translated">다항식의 데이터에 대한 최소 제곱입니다.</target>
        </trans-unit>
        <trans-unit id="004f7153cd5215d911c25b804b9cb64fc053135e" translate="yes" xml:space="preserve">
          <source>Least-squares solution. If &lt;code&gt;b&lt;/code&gt; is two-dimensional, the solutions are in the &lt;code&gt;K&lt;/code&gt; columns of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">최소 제곱 솔루션. 경우 &lt;code&gt;b&lt;/code&gt; 2 차원의 솔루션은에 &lt;code&gt;K&lt;/code&gt; 용 의 열 &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8e3bf79d3ac96cdf89ed0ca352f8850960c3aecf" translate="yes" xml:space="preserve">
          <source>Leg of the triangle(s). If &lt;code&gt;x1.shape != x2.shape&lt;/code&gt;, they must be broadcastable to a common shape (which becomes the shape of the output).</source>
          <target state="translated">삼각형의 다리. 경우 &lt;code&gt;x1.shape != x2.shape&lt;/code&gt; 들은 (출력의 모양이된다) 공통 캐스트 가능한 형상이어야한다.</target>
        </trans-unit>
        <trans-unit id="7a03f0fe89c9579b9b2b236650c98185edc2fe62" translate="yes" xml:space="preserve">
          <source>Legacy Random Generation</source>
          <target state="translated">레거시 랜덤 생성</target>
        </trans-unit>
        <trans-unit id="47a5d89b5a8a2f363ca5b4a1476eb173fc07ab11" translate="yes" xml:space="preserve">
          <source>Legendre</source>
          <target state="translated">Legendre</target>
        </trans-unit>
        <trans-unit id="4120cea9b471c879abda7b1336aba3d61c52e3bc" translate="yes" xml:space="preserve">
          <source>Legendre Class</source>
          <target state="translated">레전드 클래스</target>
        </trans-unit>
        <trans-unit id="b4a47072941f51eec5be92fa7536302b1cd27189" translate="yes" xml:space="preserve">
          <source>Legendre Module (&lt;code&gt;numpy.polynomial.legendre&lt;/code&gt;)</source>
          <target state="translated">Legendre 모듈 ( &lt;code&gt;numpy.polynomial.legendre&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a6b7c39b7f03fb5bf1916b89cb05334bb7660fc8" translate="yes" xml:space="preserve">
          <source>Legendre Module (numpy.polynomial.legendre)</source>
          <target state="translated">Legendre 모듈 (numpy.polynomial.legendre)</target>
        </trans-unit>
        <trans-unit id="72a4b81826e99e6fe744c1d98416a1d24f591803" translate="yes" xml:space="preserve">
          <source>Legendre coefficients in order of increasing degree, i.e., &lt;code&gt;(1, 2, 3)&lt;/code&gt; gives &lt;code&gt;1*P_0(x) + 2*P_1(x) + 3*P_2(x)&lt;/code&gt;.</source>
          <target state="translated">정도가 증가하는 순서대로 범례 계수, 즉 &lt;code&gt;(1, 2, 3)&lt;/code&gt; 은 &lt;code&gt;1*P_0(x) + 2*P_1(x) + 3*P_2(x)&lt;/code&gt; 냅니다.</target>
        </trans-unit>
        <trans-unit id="dd1aecb7d54479faf64417ed750dd54dbc48134e" translate="yes" xml:space="preserve">
          <source>Legendre coefficients ordered from low to high. If &lt;code&gt;y&lt;/code&gt; was 2-D, the coefficients for the data in column k of &lt;code&gt;y&lt;/code&gt; are in column &lt;code&gt;k&lt;/code&gt;. If &lt;code&gt;deg&lt;/code&gt; is specified as a list, coefficients for terms not included in the fit are set equal to zero in the returned &lt;code&gt;coef&lt;/code&gt;.</source>
          <target state="translated">Legendre 계수는 낮은 순서에서 높은 순서로 정렬됩니다. 경우 &lt;code&gt;y&lt;/code&gt; 는 2-D이고, K의 열 내의 데이터에 대한 계수 &lt;code&gt;y&lt;/code&gt; 를 컬럼에 &lt;code&gt;k&lt;/code&gt; . &lt;code&gt;deg&lt;/code&gt; &lt;code&gt;coef&lt;/code&gt; 지정된 경우 , 적합치에 포함되지 않은 항의 계수는 반환 된 coef 에서 0으로 설정 됩니다.</target>
        </trans-unit>
        <trans-unit id="36661c8b6df50f0810e8abcd38c911e37700210a" translate="yes" xml:space="preserve">
          <source>Legendre series</source>
          <target state="translated">레전드 르 시리즈</target>
        </trans-unit>
        <trans-unit id="cff0f8c14f012c4d84feceb1b721e76e38f2b7e7" translate="yes" xml:space="preserve">
          <source>Legendre series coefficient array of the integral.</source>
          <target state="translated">적분의 Legendre 시리즈 계수 배열.</target>
        </trans-unit>
        <trans-unit id="e423b1233d9fcd2c8894e66b68b4670d1797fcf6" translate="yes" xml:space="preserve">
          <source>Legendre series of power.</source>
          <target state="translated">Legendre 파워 시리즈.</target>
        </trans-unit>
        <trans-unit id="cbfaa0f2130ef078276a68c292602bd146355698" translate="yes" xml:space="preserve">
          <source>Legendre series of the derivative.</source>
          <target state="translated">파생 상품의 Legendre 시리즈.</target>
        </trans-unit>
        <trans-unit id="0c94fd4bbecdfa33cfa2085e96aaf27eb258cb91" translate="yes" xml:space="preserve">
          <source>Legendre series whose graph is a straight line.</source>
          <target state="translated">그래프가 직선 인 Legendre 시리즈.</target>
        </trans-unit>
        <trans-unit id="9c6dd8780cca130b14ebf98dc6a58e0b8fde7f4f" translate="yes" xml:space="preserve">
          <source>Legendre weight function (= 1).</source>
          <target state="translated">레전드 웨이트 기능 (= 1).</target>
        </trans-unit>
        <trans-unit id="4086e8682b0af8e09d2dfa82cd2fdc76b5bc8f8d" translate="yes" xml:space="preserve">
          <source>Legendre.__call__()</source>
          <target state="translated">Legendre.__call__()</target>
        </trans-unit>
        <trans-unit id="38dffd4eba846de64c001288fae359b48ca7be06" translate="yes" xml:space="preserve">
          <source>Legendre.basis()</source>
          <target state="translated">Legendre.basis()</target>
        </trans-unit>
        <trans-unit id="03d79bdd0c244e4a8685e0cc2ed8f9bba14f2e75" translate="yes" xml:space="preserve">
          <source>Legendre.cast()</source>
          <target state="translated">Legendre.cast()</target>
        </trans-unit>
        <trans-unit id="c3757be303c19145dd4cdc1f1fdbe7778af7a9b8" translate="yes" xml:space="preserve">
          <source>Legendre.convert()</source>
          <target state="translated">Legendre.convert()</target>
        </trans-unit>
        <trans-unit id="30694a9a60e1750eef89dd48cd213d03dc835778" translate="yes" xml:space="preserve">
          <source>Legendre.copy()</source>
          <target state="translated">Legendre.copy()</target>
        </trans-unit>
        <trans-unit id="67fd9bca2a23484298ecfc5a44e6dbe767f8deee" translate="yes" xml:space="preserve">
          <source>Legendre.cutdeg()</source>
          <target state="translated">Legendre.cutdeg()</target>
        </trans-unit>
        <trans-unit id="de6280bafa05de1ba0dc2f4ee315b2f1c3f376c2" translate="yes" xml:space="preserve">
          <source>Legendre.degree()</source>
          <target state="translated">Legendre.degree()</target>
        </trans-unit>
        <trans-unit id="065d87c76a899767772e29e52989a91f8e7a3c94" translate="yes" xml:space="preserve">
          <source>Legendre.deriv()</source>
          <target state="translated">Legendre.deriv()</target>
        </trans-unit>
        <trans-unit id="dc4f96a4666e84f37c719b2fad25d196a612cc45" translate="yes" xml:space="preserve">
          <source>Legendre.domain</source>
          <target state="translated">Legendre.domain</target>
        </trans-unit>
        <trans-unit id="11c2423446ff507ce6eb98675dde94c735489c69" translate="yes" xml:space="preserve">
          <source>Legendre.fit()</source>
          <target state="translated">Legendre.fit()</target>
        </trans-unit>
        <trans-unit id="e21bd7963e9b515a9f4b47a6bcd09e263e8089ee" translate="yes" xml:space="preserve">
          <source>Legendre.fromroots()</source>
          <target state="translated">Legendre.fromroots()</target>
        </trans-unit>
        <trans-unit id="d5d912a486cc7b8f50ccecabe4f025c8e6390336" translate="yes" xml:space="preserve">
          <source>Legendre.has_samecoef()</source>
          <target state="translated">Legendre.has_samecoef()</target>
        </trans-unit>
        <trans-unit id="6666d87ba29b4b8ae40e97a1bf2868d699324607" translate="yes" xml:space="preserve">
          <source>Legendre.has_samedomain()</source>
          <target state="translated">Legendre.has_samedomain()</target>
        </trans-unit>
        <trans-unit id="3760f41cb73e83c63c3b041fb1850faaf75fa051" translate="yes" xml:space="preserve">
          <source>Legendre.has_sametype()</source>
          <target state="translated">Legendre.has_sametype()</target>
        </trans-unit>
        <trans-unit id="776a3387bba3bfaabfedc34f80f56441350be257" translate="yes" xml:space="preserve">
          <source>Legendre.has_samewindow()</source>
          <target state="translated">Legendre.has_samewindow()</target>
        </trans-unit>
        <trans-unit id="d270c39a15f9cf84d450407eca8d04e34120a21a" translate="yes" xml:space="preserve">
          <source>Legendre.identity()</source>
          <target state="translated">Legendre.identity()</target>
        </trans-unit>
        <trans-unit id="a025b9af1289248a2a7d813cd3249b6c59a1b90e" translate="yes" xml:space="preserve">
          <source>Legendre.integ()</source>
          <target state="translated">Legendre.integ()</target>
        </trans-unit>
        <trans-unit id="b1309f9dd6fba8397cba7645c87fd874d753067f" translate="yes" xml:space="preserve">
          <source>Legendre.linspace()</source>
          <target state="translated">Legendre.linspace()</target>
        </trans-unit>
        <trans-unit id="3b41ed00816bbf0ea94cb8ce7b846f9374dce867" translate="yes" xml:space="preserve">
          <source>Legendre.mapparms()</source>
          <target state="translated">Legendre.mapparms()</target>
        </trans-unit>
        <trans-unit id="498206cc30a61e0936daddec7420065e1fb22906" translate="yes" xml:space="preserve">
          <source>Legendre.roots()</source>
          <target state="translated">Legendre.roots()</target>
        </trans-unit>
        <trans-unit id="c917ded9bfb105e1d1214678489c4d2d643e0789" translate="yes" xml:space="preserve">
          <source>Legendre.trim()</source>
          <target state="translated">Legendre.trim()</target>
        </trans-unit>
        <trans-unit id="4b818047b63ac1fb3abbf9ee09b84ccf39af0370" translate="yes" xml:space="preserve">
          <source>Legendre.truncate()</source>
          <target state="translated">Legendre.truncate()</target>
        </trans-unit>
        <trans-unit id="a0ba05a259a8b34022dc6e1b217b0390cf104e0b" translate="yes" xml:space="preserve">
          <source>Length &lt;code&gt;(nin + nout) * ntypes&lt;/code&gt; array of &lt;code&gt;char&lt;/code&gt; encoding the &lt;a href=&quot;generated/numpy.dtype.num#numpy.dtype.num&quot;&gt;&lt;code&gt;numpy.dtype.num&lt;/code&gt;&lt;/a&gt; (built-in only) that the corresponding function in the &lt;code&gt;func&lt;/code&gt; array accepts. For instance, for a comparison ufunc with three &lt;code&gt;ntypes&lt;/code&gt;, two &lt;code&gt;nin&lt;/code&gt; and one &lt;code&gt;nout&lt;/code&gt;, where the first function accepts &lt;code&gt;numpy.int32&lt;/code&gt; and the the second &lt;code&gt;numpy.int64&lt;/code&gt;, with both returning &lt;code&gt;numpy.bool_&lt;/code&gt;, &lt;code&gt;types&lt;/code&gt; would be &lt;code&gt;(char[]) {5, 5, 0, 7, 7, 0}&lt;/code&gt; since &lt;code&gt;NPY_INT32&lt;/code&gt; is 5, &lt;code&gt;NPY_INT64&lt;/code&gt; is 7, and &lt;code&gt;NPY_BOOL&lt;/code&gt; is 0.</source>
          <target state="translated">길이 &lt;code&gt;(nin + nout) * ntypes&lt;/code&gt; &lt;code&gt;func&lt;/code&gt; 배열 의 해당 함수가 허용 하는 &lt;a href=&quot;generated/numpy.dtype.num#numpy.dtype.num&quot;&gt; &lt;code&gt;numpy.dtype.num&lt;/code&gt; &lt;/a&gt; (내장 전용)을 인코딩하는 &lt;code&gt;char&lt;/code&gt; 의ntypes 배열입니다 . 예를 들어, 3 개 ufunc 비교를 위해 &lt;code&gt;ntypes&lt;/code&gt; 두 &lt;code&gt;nin&lt;/code&gt; 하나 &lt;code&gt;nout&lt;/code&gt; 제 함수 받아 &lt;code&gt;numpy.int32&lt;/code&gt; 및 제 &lt;code&gt;numpy.int64&lt;/code&gt; 를 모두 복귀와 &lt;code&gt;numpy.bool_&lt;/code&gt; , &lt;code&gt;types&lt;/code&gt; 것 &lt;code&gt;(char[]) {5, 5, 0, 7, 7, 0}&lt;/code&gt; 보낸 &lt;code&gt;NPY_INT32&lt;/code&gt; 는 , 5 &lt;code&gt;NPY_INT64&lt;/code&gt; 는 7이고, &lt;code&gt;NPY_BOOL&lt;/code&gt; 는 0이다.</target>
        </trans-unit>
        <trans-unit id="e599dfd0500969f55b8c9d010461f8e1fcc41925" translate="yes" xml:space="preserve">
          <source>Length of each array element, in number of characters. Default is 1.</source>
          <target state="translated">각 배열 요소의 길이 (문자 수) 기본값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="6dbef5ea0e7b53958b8a2d75b0863dd2996ea77a" translate="yes" xml:space="preserve">
          <source>Length of one array element in bytes.</source>
          <target state="translated">한 배열 요소의 길이 (바이트)</target>
        </trans-unit>
        <trans-unit id="ebd0316d087a92fa193507d4dfe490f6483edcaf" translate="yes" xml:space="preserve">
          <source>Length of the inverse FFT, the number of points along transformation axis in the input to use. If &lt;code&gt;n&lt;/code&gt; is smaller than the length of the input, the input is cropped. If it is larger, the input is padded with zeros. If &lt;code&gt;n&lt;/code&gt; is not given, the length of the input along the axis specified by &lt;code&gt;axis&lt;/code&gt; is used.</source>
          <target state="translated">역 FFT의 길이, 사용할 입력에서 변환 축을 따르는 포인트 수입니다. 경우 &lt;code&gt;n&lt;/code&gt; 은 입력의 길이보다 작은 경우, 입력이 잘려있다. 더 큰 경우 입력이 0으로 채워집니다. 경우 &lt;code&gt;n&lt;/code&gt; 주어지지에 의해 지정된 축 방향 입력의 길이 &lt;code&gt;axis&lt;/code&gt; 사용된다.</target>
        </trans-unit>
        <trans-unit id="c0386e146b5b66f11c90240baf5f54bbd4a84b7b" translate="yes" xml:space="preserve">
          <source>Length of the transformed axis of the output. For &lt;code&gt;n&lt;/code&gt; output points, &lt;code&gt;n//2 + 1&lt;/code&gt; input points are necessary. If the input is longer than this, it is cropped. If it is shorter than this, it is padded with zeros. If &lt;code&gt;n&lt;/code&gt; is not given, it is determined from the length of the input along the axis specified by &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="translated">출력의 변환 된 축의 길이입니다. 들면 &lt;code&gt;n&lt;/code&gt; 개의 출력 지점을, &lt;code&gt;n//2 + 1&lt;/code&gt; 입력 포인트가 필요하다. 입력이 이보다 길면 잘립니다. 이보다 짧으면 0으로 채워집니다. 경우 &lt;code&gt;n&lt;/code&gt; 주어지지 않는, 그것은에 의해 지정된 축 방향 입력의 길이로부터 결정되는 &lt;code&gt;axis&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ef669ab3a842002f9a1fb7bac5550ccceaa27247" translate="yes" xml:space="preserve">
          <source>Length of the transformed axis of the output. For &lt;code&gt;n&lt;/code&gt; output points, &lt;code&gt;n//2+1&lt;/code&gt; input points are necessary. If the input is longer than this, it is cropped. If it is shorter than this, it is padded with zeros. If &lt;code&gt;n&lt;/code&gt; is not given, it is determined from the length of the input along the axis specified by &lt;code&gt;axis&lt;/code&gt;.</source>
          <target state="translated">출력의 변환 된 축의 길이입니다. 들면 &lt;code&gt;n&lt;/code&gt; 개의 출력 지점을, &lt;code&gt;n//2+1&lt;/code&gt; 입력 포인트가 필요하다. 입력이 이보다 길면 잘립니다. 이보다 짧으면 0으로 채워집니다. 경우 &lt;code&gt;n&lt;/code&gt; 주어지지 않는, 그것은에 의해 지정된 축 방향 입력의 길이로부터 결정되는 &lt;code&gt;axis&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9649fc48731a6d9a87c71452f8efbcb7f76b78d4" translate="yes" xml:space="preserve">
          <source>Length of the transformed axis of the output. If &lt;code&gt;n&lt;/code&gt; is smaller than the length of the input, the input is cropped. If it is larger, the input is padded with zeros. If &lt;code&gt;n&lt;/code&gt; is not given, the length of the input along the axis specified by &lt;code&gt;axis&lt;/code&gt; is used.</source>
          <target state="translated">출력의 변환 된 축의 길이입니다. 경우 &lt;code&gt;n&lt;/code&gt; 은 입력의 길이보다 작은 경우, 입력이 잘려있다. 더 큰 경우 입력이 0으로 채워집니다. 경우 &lt;code&gt;n&lt;/code&gt; 주어지지에 의해 지정된 축 방향 입력의 길이 &lt;code&gt;axis&lt;/code&gt; 사용된다.</target>
        </trans-unit>
        <trans-unit id="838e5e82eb9b3c833687dc387dbd43309bd32602" translate="yes" xml:space="preserve">
          <source>Length of the transformed axis of the output. If &lt;code&gt;n&lt;/code&gt; is smaller than the length of the input, the input is cropped. If it is larger, the input is padded with zeros. If &lt;code&gt;n&lt;/code&gt; is not given, the length of the input along the axis specified by &lt;code&gt;axis&lt;/code&gt; is used. See notes about padding issues.</source>
          <target state="translated">출력의 변환 된 축의 길이입니다. 경우 &lt;code&gt;n&lt;/code&gt; 은 입력의 길이보다 작은 경우, 입력이 잘려있다. 더 큰 경우 입력이 0으로 채워집니다. 경우 &lt;code&gt;n&lt;/code&gt; 주어지지에 의해 지정된 축 방향 입력의 길이 &lt;code&gt;axis&lt;/code&gt; 사용된다. 패딩 문제에 대한 참고 사항을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="20b7b6096b899f364abc1b0ab113ac1d88c95817" translate="yes" xml:space="preserve">
          <source>Lentner, Marvin, &amp;ldquo;Elementary Applied Statistics&amp;rdquo;, Bogden and Quigley, 1972.</source>
          <target state="translated">Lentner, Marvin,&amp;ldquo;초등 응용 통계&amp;rdquo;, Bogden and Quigley, 1972.</target>
        </trans-unit>
        <trans-unit id="e99e5b627f7ed42d45bd8cf2acdec386f4c6174c" translate="yes" xml:space="preserve">
          <source>Less robust estimator that that takes into account data variability and data size.</source>
          <target state="translated">데이터 변동성과 데이터 크기를 고려한 덜 강력한 추정량.</target>
        </trans-unit>
        <trans-unit id="ef5fe1edf37940bd463fee8eda068dc8d66b0f8a" translate="yes" xml:space="preserve">
          <source>Let</source>
          <target state="translated">Let</target>
        </trans-unit>
        <trans-unit id="a718bc5ba689b0611826e8a00c42db91a4cc33c1" translate="yes" xml:space="preserve">
          <source>Let &lt;code&gt;M = A.ndim&lt;/code&gt;, &lt;code&gt;N = B.ndim&lt;/code&gt;. Then the result, &lt;code&gt;C&lt;/code&gt;, of &lt;code&gt;op.outer(A, B)&lt;/code&gt; is an array of dimension M + N such that:</source>
          <target state="translated">&lt;code&gt;M = A.ndim&lt;/code&gt; , &lt;code&gt;N = B.ndim&lt;/code&gt; 이라고하자 . 결과는, &lt;code&gt;C&lt;/code&gt; 는 ,의 &lt;code&gt;op.outer(A, B)&lt;/code&gt; 사이즈 M + N되도록 배열이다 :</target>
        </trans-unit>
        <trans-unit id="c21492f5c1039f68826ed62d8fddcbe2ecf43d60" translate="yes" xml:space="preserve">
          <source>Let &lt;code&gt;x.shape&lt;/code&gt; be (10,20,30,40,50) and suppose &lt;code&gt;ind_1&lt;/code&gt; and &lt;code&gt;ind_2&lt;/code&gt; can be broadcast to the shape (2,3,4). Then &lt;code&gt;x[:,ind_1,ind_2]&lt;/code&gt; has shape (10,2,3,4,40,50) because the (20,30)-shaped subspace from X has been replaced with the (2,3,4) subspace from the indices. However, &lt;code&gt;x[:,ind_1,:,ind_2]&lt;/code&gt; has shape (2,3,4,10,30,50) because there is no unambiguous place to drop in the indexing subspace, thus it is tacked-on to the beginning. It is always possible to use &lt;a href=&quot;generated/numpy.ndarray.transpose#numpy.ndarray.transpose&quot;&gt;&lt;code&gt;.transpose()&lt;/code&gt;&lt;/a&gt; to move the subspace anywhere desired. Note that this example cannot be replicated using &lt;a href=&quot;generated/numpy.take#numpy.take&quot;&gt;&lt;code&gt;take&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">하자 &lt;code&gt;x.shape&lt;/code&gt; 이 수 (10,20,30,40,50)와 가정 &lt;code&gt;ind_1&lt;/code&gt; 및 &lt;code&gt;ind_2&lt;/code&gt; 모양 (2,3,4)에 방송 될 수 있습니다. 그런 다음 &lt;code&gt;x[:,ind_1,ind_2]&lt;/code&gt; 모양은 (10,2,3,4,40,50)입니다. X의 (20,30) 모양 부분 공간이 (2,3,4) 부분 공간으로 대체 되었기 때문입니다. 지수. 그러나 &lt;code&gt;x[:,ind_1,:,ind_2]&lt;/code&gt; 모양은 (2,3,4,10,30,50)이며, 색인 부분 공간에서 드롭 할 곳이 없으므로 시작 부분에 고정되어 있기 때문입니다. &lt;a href=&quot;generated/numpy.ndarray.transpose#numpy.ndarray.transpose&quot;&gt; &lt;code&gt;.transpose()&lt;/code&gt; &lt;/a&gt; 를 사용 하여 원하는 곳으로 부분 공간을 이동할 수 있습니다. 이 예제는 &lt;a href=&quot;generated/numpy.take#numpy.take&quot;&gt; &lt;code&gt;take&lt;/code&gt; 를&lt;/a&gt; 사용하여 복제 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="d53ca7c39e959075c64a326e51c71e27bb307d6d" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s consider a list of elements, &lt;code&gt;x&lt;/code&gt;, where values of -9999. represent missing data. We wish to compute the average value of the data and the vector of anomalies (deviations from the average):</source>
          <target state="translated">요소 목록 &lt;code&gt;x&lt;/code&gt; 를 고려해 봅시다 . 여기서 값은 -9999입니다. 누락 된 데이터를 나타냅니다. 데이터의 평균값과 이상 벡터 (평균과의 편차)를 계산하려고합니다.</target>
        </trans-unit>
        <trans-unit id="ab1ea5de1d1447221ec240c0905b303173635736" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s consider an array &lt;code&gt;d&lt;/code&gt; of random floats between 0 and 1. We wish to compute the average of the values of &lt;code&gt;d&lt;/code&gt; while ignoring any data outside the range &lt;code&gt;[0.1, 0.9]&lt;/code&gt;:</source>
          <target state="translated">0과 1 사이의 임의의 부동 소수점 배열 &lt;code&gt;d&lt;/code&gt; 를 고려해 봅시다 . &lt;code&gt;[0.1, 0.9]&lt;/code&gt; 범위 밖의 데이터는 무시하고 &lt;code&gt;d&lt;/code&gt; 값의 평균을 계산하려고합니다 .</target>
        </trans-unit>
        <trans-unit id="39281dff86138ded282e6212c34eb9cda8834f15" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s do 20,000 trials of the model, and count the number that generate zero positive results.</source>
          <target state="translated">모델의 20,000 회 시도를 수행하고 0의 양수 결과를 생성하는 수를 세겠습니다.</target>
        </trans-unit>
        <trans-unit id="538c09161b8497f998404cafc34964ed3a445575" translate="yes" xml:space="preserve">
          <source>Licensed under the 3-clause BSD License.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0484b837c9aac64b9b4f0cbb8a409c60f826cd6" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#c.PyArray_DescrConverter&quot;&gt;&lt;code&gt;PyArray_DescrConverter&lt;/code&gt;&lt;/a&gt; except it aligns C-struct-like objects on word-boundaries as the compiler would.</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_DescrConverter&quot;&gt; &lt;code&gt;PyArray_DescrConverter&lt;/code&gt; &lt;/a&gt; 와 마찬가지로 컴파일러 와 마찬가지로 C 경계와 유사한 객체를 단어 경계에 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="2bf9a983b58a3025088acd0d34cc34c35bed8eba" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;#c.PyArray_DescrConverter2&quot;&gt;&lt;code&gt;PyArray_DescrConverter2&lt;/code&gt;&lt;/a&gt; except it aligns C-struct-like objects on word-boundaries as the compiler would.</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_DescrConverter2&quot;&gt; &lt;code&gt;PyArray_DescrConverter2&lt;/code&gt; &lt;/a&gt; 와 마찬가지로 컴파일러 와 마찬가지로 C 경계와 유사한 객체를 단어 경계에 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="98e8d5db12d0ec6df75e2b77dc6308321b737245" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;generated/numpy.char.find#numpy.char.find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;, but raises &lt;code&gt;ValueError&lt;/code&gt; when the substring is not found.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;generated/numpy.char.find#numpy.char.find&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt; 있지만, 제기 &lt;code&gt;ValueError&lt;/code&gt; 를을 문자열이 발견되지 않을 때.</target>
        </trans-unit>
        <trans-unit id="8cac4055aba9315ef35a508ccbff6fd2fccbce50" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;generated/numpy.char.rfind#numpy.char.rfind&quot;&gt;&lt;code&gt;rfind&lt;/code&gt;&lt;/a&gt;, but raises &lt;code&gt;ValueError&lt;/code&gt; when the substring &lt;code&gt;sub&lt;/code&gt; is not found.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;generated/numpy.char.rfind#numpy.char.rfind&quot;&gt; &lt;code&gt;rfind&lt;/code&gt; &lt;/a&gt; 하지만 제기 &lt;code&gt;ValueError&lt;/code&gt; 를을 문자열 때 &lt;code&gt;sub&lt;/code&gt; 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bfb637364ad5b206ba50bed21f3142c132fe9341" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.find.html#numpy.chararray.find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;, but raises &lt;code&gt;ValueError&lt;/code&gt; when the substring is not found.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.find.html#numpy.chararray.find&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt; 있지만, 제기 &lt;code&gt;ValueError&lt;/code&gt; 를을 문자열이 발견되지 않을 때.</target>
        </trans-unit>
        <trans-unit id="6f8c624e10b2f68f4700be90af9ceef9f419abcf" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.rfind.html#numpy.chararray.rfind&quot;&gt;&lt;code&gt;rfind&lt;/code&gt;&lt;/a&gt;, but raises &lt;code&gt;ValueError&lt;/code&gt; when the substring &lt;code&gt;sub&lt;/code&gt; is not found.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.rfind.html#numpy.chararray.rfind&quot;&gt; &lt;code&gt;rfind&lt;/code&gt; &lt;/a&gt; 하지만 제기 &lt;code&gt;ValueError&lt;/code&gt; 를을 문자열 때 &lt;code&gt;sub&lt;/code&gt; 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="74d7df04563822c7d8ad24dbe267870b77fbb351" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;numpy.char.find#numpy.char.find&quot;&gt;&lt;code&gt;find&lt;/code&gt;&lt;/a&gt;, but raises &lt;code&gt;ValueError&lt;/code&gt; when the substring is not found.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;numpy.char.find#numpy.char.find&quot;&gt; &lt;code&gt;find&lt;/code&gt; &lt;/a&gt; 있지만, 제기 &lt;code&gt;ValueError&lt;/code&gt; 를을 문자열이 발견되지 않을 때.</target>
        </trans-unit>
        <trans-unit id="b35ea9f95fe9a083c883dcd6041e1ed2b46d8192" translate="yes" xml:space="preserve">
          <source>Like &lt;a href=&quot;numpy.char.rfind#numpy.char.rfind&quot;&gt;&lt;code&gt;rfind&lt;/code&gt;&lt;/a&gt;, but raises &lt;code&gt;ValueError&lt;/code&gt; when the substring &lt;code&gt;sub&lt;/code&gt; is not found.</source>
          <target state="translated">마찬가지로 &lt;a href=&quot;numpy.char.rfind#numpy.char.rfind&quot;&gt; &lt;code&gt;rfind&lt;/code&gt; &lt;/a&gt; 하지만 제기 &lt;code&gt;ValueError&lt;/code&gt; 를을 문자열 때 &lt;code&gt;sub&lt;/code&gt; 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="8f6786bbc0e6826ccf967ce3d26832cec08da525" translate="yes" xml:space="preserve">
          <source>Like &lt;code&gt;catch_warnings&lt;/code&gt; this context manager is not threadsafe.</source>
          <target state="translated">&lt;code&gt;catch_warnings&lt;/code&gt; 와 마찬가지로이 컨텍스트 관리자는 스레드로부터 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b0fa83334e9080fab8905202d2a0b49831c3f225" translate="yes" xml:space="preserve">
          <source>Like for other types, NumPy includes a typedef npy_half for the 16 bit float. Unlike for most of the other types, you cannot use this as a normal type in C, since it is a typedef for npy_uint16. For example, 1.0 looks like 0x3c00 to C, and if you do an equality comparison between the different signed zeros, you will get -0.0 != 0.0 (0x8000 != 0x0000), which is incorrect.</source>
          <target state="translated">다른 유형과 마찬가지로 NumPy에는 16 비트 부동 소수점에 대한 typedef npy_half가 포함됩니다. 대부분의 다른 유형과 달리 npy_uint16의 typedef이므로 C에서 일반 유형으로 사용할 수 없습니다. 예를 들어, 1.0은 0x3c00 ~ C처럼 보이며 다른 부호있는 0 사이에서 동등 비교를 수행하면 -0.0! = 0.0 (0x8000! = 0x0000)이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="e112999c2cd378720fa09f5bf6d3cb8761f7e014" translate="yes" xml:space="preserve">
          <source>Like with some other special methods in python, such as &lt;code&gt;__hash__&lt;/code&gt; and &lt;code&gt;__iter__&lt;/code&gt;, it is possible to indicate that your class does &lt;em&gt;not&lt;/em&gt; support ufuncs by setting &lt;code&gt;__array_ufunc__ = None&lt;/code&gt;. Ufuncs always raise &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; when called on an object that sets &lt;code&gt;__array_ufunc__ = None&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;__hash__&lt;/code&gt; 및 &lt;code&gt;__iter__&lt;/code&gt; 와 같은 파이썬의 다른 특수 메소드와 마찬가지로 &lt;code&gt;__array_ufunc__ = None&lt;/code&gt; 을 설정 하여 클래스가 ufunc를 지원 하지 &lt;em&gt;않음&lt;/em&gt; 을 나타낼 수 있습니다 . Ufuncs 는 &lt;code&gt;__array_ufunc__ = None&lt;/code&gt; 을 설정하는 객체에서 호출 될 때 항상 &lt;a href=&quot;https://docs.python.org/dev/library/exceptions.html#TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; 를&lt;/a&gt; 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="a7c04c64ed3f2a9374590c76c50d3b7f1b18e3da" translate="yes" xml:space="preserve">
          <source>Limitations</source>
          <target state="translated">Limitations</target>
        </trans-unit>
        <trans-unit id="aed0f783a12a4ca0992442cfbd711f6845a91b7b" translate="yes" xml:space="preserve">
          <source>Limpert, E., Stahel, W. A., and Abbt, M., &amp;ldquo;Log-normal Distributions across the Sciences: Keys and Clues,&amp;rdquo; BioScience, Vol. 51, No. 5, May, 2001. &lt;a href=&quot;https://stat.ethz.ch/~stahel/lognormal/bioscience.pdf&quot;&gt;https://stat.ethz.ch/~stahel/lognormal/bioscience.pdf&lt;/a&gt;</source>
          <target state="translated">Limpert, E., Stahel, WA 및 Abbt, M.,&amp;ldquo;과학 전반의 로그 정규 분포 : 키와 단서&amp;rdquo;, BioScience, Vol. 51, No. 5, 2001 년 5 월. &lt;a href=&quot;https://stat.ethz.ch/~stahel/lognormal/bioscience.pdf&quot;&gt;https://stat.ethz.ch/~stahel/lognormal/bioscience.pdf&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fbfdf4025591ea0589baa96d7f54fd5d7f0a5dbd" translate="yes" xml:space="preserve">
          <source>Line breaks are not included in the resulting list unless keepends is given and true.</source>
          <target state="translated">keepends가 지정되어 있지 않으면 줄 바꿈은 결과 목록에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="06d74260ba46e8ed76ff22dda956f18a7b66203c" translate="yes" xml:space="preserve">
          <source>Linear algebra</source>
          <target state="translated">선형 대수</target>
        </trans-unit>
        <trans-unit id="ef4be3efd16d5b211ab89b5efbf030ca1bafba61" translate="yes" xml:space="preserve">
          <source>Linear algebra (&lt;code&gt;numpy.linalg&lt;/code&gt;)</source>
          <target state="translated">선형 대수 ( &lt;code&gt;numpy.linalg&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e2be6b18cf91c04a7b6c400bd00876f94a2389cb" translate="yes" xml:space="preserve">
          <source>Linear algebra (numpy.linalg)</source>
          <target state="translated">선형 대수 (numpy.linalg)</target>
        </trans-unit>
        <trans-unit id="b624aab78757a9b353883b1449d6df824049976b" translate="yes" xml:space="preserve">
          <source>Linear algebra on several matrices at once</source>
          <target state="translated">한 번에 여러 행렬에 대한 선형 대수</target>
        </trans-unit>
        <trans-unit id="991cbbcb4b1ecb2172a95ff800353dc3c4b54edd" translate="yes" xml:space="preserve">
          <source>Linear map parameters between domains.</source>
          <target state="translated">도메인 간 선형 맵 매개 변수</target>
        </trans-unit>
        <trans-unit id="26958b7c786c621d84d02830a0b14f77df5b2d9e" translate="yes" xml:space="preserve">
          <source>Linking against the core math library in an extension</source>
          <target state="translated">확장에서 핵심 수학 라이브러리에 대한 링크</target>
        </trans-unit>
        <trans-unit id="d1400c37d080d60eab76dbcb84834f7292aae696" translate="yes" xml:space="preserve">
          <source>Linux timings used Ubuntu 18.04 and GCC 7.4. Windows timings were made on Windows 10 using Microsoft C/C++ Optimizing Compiler Version 19 (Visual Studio 2015). All timings were produced on a i5-3570 processor.</source>
          <target state="translated">Linux 타이밍은 Ubuntu 18.04 및 GCC 7.4를 사용했습니다. Windows 타이밍은 Microsoft C / C ++ 최적화 컴파일러 버전 19 (Visual Studio 2015)를 사용하여 Windows 10에서 이루어졌습니다. 모든 타이밍은 i5-3570 프로세서에서 생성되었습니다.</target>
        </trans-unit>
        <trans-unit id="decb4e37dac06b0a04b2b5a1ce16d06dbaf9430d" translate="yes" xml:space="preserve">
          <source>List of maximum degrees of the form [x_deg, y_deg, z_deg].</source>
          <target state="translated">[x_deg, y_deg, z_deg] 형식의 최대 각도 목록입니다.</target>
        </trans-unit>
        <trans-unit id="16b40ddc35115642a1ebd2b343c063499d9e736a" translate="yes" xml:space="preserve">
          <source>List of maximum degrees of the form [x_deg, y_deg].</source>
          <target state="translated">[x_deg, y_deg] 형식의 최대 각도 목록입니다.</target>
        </trans-unit>
        <trans-unit id="3946ce7ee00307be1e56a351d33b3682868445a4" translate="yes" xml:space="preserve">
          <source>List of roots.</source>
          <target state="translated">뿌리의 목록.</target>
        </trans-unit>
        <trans-unit id="2c7afb1b33d8f0bf102c5fdc5f3bfa27a81be1cb" translate="yes" xml:space="preserve">
          <source>List of the library&amp;rsquo;s source files. See &lt;a href=&quot;#numpy.distutils.misc_util.Configuration.add_library&quot;&gt;&lt;code&gt;add_library&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">라이브러리의 소스 파일 목록 자세한 내용은 &lt;a href=&quot;#numpy.distutils.misc_util.Configuration.add_library&quot;&gt; &lt;code&gt;add_library&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6519aa721c25f67c763afcfac03293aba9cab8a8" translate="yes" xml:space="preserve">
          <source>List of the sources. The list of sources may contain functions (called source generators) which must take an extension instance and a build directory as inputs and return a source file or list of source files or None. If None is returned then no sources are generated. If the Extension instance has no sources after processing all source generators, then no extension module is built.</source>
          <target state="translated">출처 목록. 소스 목록에는 확장 인스턴스와 빌드 디렉토리를 입력으로 사용하여 소스 파일 또는 소스 파일 목록을 리턴하거나 없음을 리턴해야하는 함수 (소스 생성기라고 함)가 포함될 수 있습니다. None이 반환되면 소스가 생성되지 않습니다. 모든 소스 생성기를 처리 한 후 Extension 인스턴스에 소스가없는 경우 확장 모듈이 빌드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="70836ea6cfbd010e5c69675c6ed9768657e90763" translate="yes" xml:space="preserve">
          <source>Literal string representation.</source>
          <target state="translated">리터럴 문자열 표현.</target>
        </trans-unit>
        <trans-unit id="d75a54184aa53b5be4e832c635455d88f3cdc5e6" translate="yes" xml:space="preserve">
          <source>Load a pickle from the current string.</source>
          <target state="translated">현재 문자열에서 피클을로드합니다.</target>
        </trans-unit>
        <trans-unit id="3a504cdc1122f04029c4d408c355532536995f45" translate="yes" xml:space="preserve">
          <source>Load arrays or pickled objects from &lt;code&gt;.npy&lt;/code&gt;, &lt;code&gt;.npz&lt;/code&gt; or pickled files.</source>
          <target state="translated">&lt;code&gt;.npy&lt;/code&gt; , &lt;code&gt;.npz&lt;/code&gt; 또는 pickled 파일 에서 배열 또는 절인 객체를로드 합니다.</target>
        </trans-unit>
        <trans-unit id="9d2a30e3c587d0309a2b15e920e2381e52d3b73a" translate="yes" xml:space="preserve">
          <source>Load data from a text file, with missing values handled as specified.</source>
          <target state="translated">지정된대로 처리 된 결 측값으로 텍스트 파일에서 데이터를로드하십시오.</target>
        </trans-unit>
        <trans-unit id="671e399a95a295b1b112f2ec88bde3aa682ce01d" translate="yes" xml:space="preserve">
          <source>Load data from a text file.</source>
          <target state="translated">텍스트 파일에서 데이터를로드하십시오.</target>
        </trans-unit>
        <trans-unit id="ede7696890a000813048b7b45d0ec4e8eaa41ac3" translate="yes" xml:space="preserve">
          <source>Load data with missing values handled as specified.</source>
          <target state="translated">지정된대로 처리 된 결 측값이있는 데이터를로드하십시오.</target>
        </trans-unit>
        <trans-unit id="0fb4575d68b4fb0f498f6ef6cd58ad29dfef99ec" translate="yes" xml:space="preserve">
          <source>Load the files created by savez_compressed.</source>
          <target state="translated">savez_compressed에 의해 작성된 파일을로드하십시오.</target>
        </trans-unit>
        <trans-unit id="00e2276e50083512489893c74a3667bfb2f8d261" translate="yes" xml:space="preserve">
          <source>Load the memmap and verify data was stored:</source>
          <target state="translated">memmap을로드하고 데이터가 저장되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="4f1b35f9beeb82ff23b55bdd7e4bccbaa09655da" translate="yes" xml:space="preserve">
          <source>Loading files that contain object arrays uses the &lt;code&gt;pickle&lt;/code&gt; module, which is not secure against erroneous or maliciously constructed data. Consider passing &lt;code&gt;allow_pickle=False&lt;/code&gt; to load data that is known not to contain object arrays for the safer handling of untrusted sources.</source>
          <target state="translated">객체 배열이 포함 된 파일을로드하면 &lt;code&gt;pickle&lt;/code&gt; 모듈이 사용되며 잘못되었거나 악의적으로 구성된 데이터에 대해서는 안전하지 않습니다. 신뢰할 수없는 소스를보다 안전하게 처리하기 위해 객체 배열을 포함하지 않는 것으로 알려진 데이터를로드하려면 &lt;code&gt;allow_pickle=False&lt;/code&gt; 를 전달하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="dcd21227c7ed1f7628c4569c3c3b1f97f5e4a3e0" translate="yes" xml:space="preserve">
          <source>Local file path or URL to open.</source>
          <target state="translated">열 로컬 파일 경로 또는 URL.</target>
        </trans-unit>
        <trans-unit id="399e1ff0ce348a172dad0b088afb4891c55b0357" translate="yes" xml:space="preserve">
          <source>Lock instance that is shared so that the same BitGenerator can be used in multiple Generators without corrupting the state. Code that generates values from a bit generator should hold the bit generator&amp;rsquo;s lock.</source>
          <target state="translated">동일한 BitGenerator를 상태를 손상시키지 않고 여러 생성기에서 사용할 수 있도록 공유 된 인스턴스를 잠급니다. 비트 생성기에서 값을 생성하는 코드는 비트 생성기의 잠금을 유지해야합니다.</target>
        </trans-unit>
        <trans-unit id="2d415fb960b72005c6491287e9aedba95abd331c" translate="yes" xml:space="preserve">
          <source>Lock instance that is shared so that the same bit git generator can be used in multiple Generators without corrupting the state. Code that generates values from a bit generator should hold the bit generator&amp;rsquo;s lock.</source>
          <target state="translated">동일한 비트 git 생성기가 상태를 손상시키지 않고 여러 생성기에서 사용될 수 있도록 공유 된 인스턴스를 잠급니다. 비트 생성기에서 값을 생성하는 코드는 비트 생성기의 잠금을 유지해야합니다.</target>
        </trans-unit>
        <trans-unit id="107cbe58cd70b9b9564b7a980ec9a134ba83ff37" translate="yes" xml:space="preserve">
          <source>Log error message:</source>
          <target state="translated">로그 오류 메시지 :</target>
        </trans-unit>
        <trans-unit id="5b18e27bd081f5e88f5467d9d05245be1522ecbd" translate="yes" xml:space="preserve">
          <source>Logarithm is a multivalued function: for each &lt;code&gt;x&lt;/code&gt; there is an infinite number of &lt;code&gt;z&lt;/code&gt; such that &lt;code&gt;10**z = x&lt;/code&gt;. The convention is to return the &lt;code&gt;z&lt;/code&gt; whose imaginary part lies in &lt;code&gt;[-pi, pi]&lt;/code&gt;.</source>
          <target state="translated">대수는 다중 값 함수입니다. 각 &lt;code&gt;x&lt;/code&gt; 에 대해 &lt;code&gt;10**z = x&lt;/code&gt; 와 같은 &lt;code&gt;z&lt;/code&gt; 의 무한 수가 있습니다. 관습은 가상 부분이 &lt;code&gt;[-pi, pi]&lt;/code&gt; 에 있는 &lt;code&gt;z&lt;/code&gt; 를 반환하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="5a52fe88f1d34f63b32537a63132c16ed59948f4" translate="yes" xml:space="preserve">
          <source>Logarithm is a multivalued function: for each &lt;code&gt;x&lt;/code&gt; there is an infinite number of &lt;code&gt;z&lt;/code&gt; such that &lt;code&gt;2**z = x&lt;/code&gt;. The convention is to return the &lt;code&gt;z&lt;/code&gt; whose imaginary part lies in &lt;code&gt;[-pi, pi]&lt;/code&gt;.</source>
          <target state="translated">대수는 다중 값 함수입니다. 각 &lt;code&gt;x&lt;/code&gt; 에 대해 &lt;code&gt;2**z = x&lt;/code&gt; 와 같은 &lt;code&gt;z&lt;/code&gt; 의 무한 수가 있습니다. 관습은 가상 부분이 &lt;code&gt;[-pi, pi]&lt;/code&gt; 에 있는 &lt;code&gt;z&lt;/code&gt; 를 반환하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="04517496328a3b4c1d39612790fc59d3b950de57" translate="yes" xml:space="preserve">
          <source>Logarithm is a multivalued function: for each &lt;code&gt;x&lt;/code&gt; there is an infinite number of &lt;code&gt;z&lt;/code&gt; such that &lt;code&gt;exp(z) = 1 + x&lt;/code&gt;. The convention is to return the &lt;code&gt;z&lt;/code&gt; whose imaginary part lies in &lt;code&gt;[-pi, pi]&lt;/code&gt;.</source>
          <target state="translated">대수는 다중 값 함수입니다. 각 &lt;code&gt;x&lt;/code&gt; 에 대해 &lt;code&gt;exp(z) = 1 + x&lt;/code&gt; 와 같은 &lt;code&gt;z&lt;/code&gt; 의 무한 수가 있습니다. 관습은 가상 부분이 &lt;code&gt;[-pi, pi]&lt;/code&gt; 에 있는 &lt;code&gt;z&lt;/code&gt; 를 반환하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="8f044358a356b12f8f04d65ec46fba2c711db9ca" translate="yes" xml:space="preserve">
          <source>Logarithm is a multivalued function: for each &lt;code&gt;x&lt;/code&gt; there is an infinite number of &lt;code&gt;z&lt;/code&gt; such that &lt;code&gt;exp(z) = x&lt;/code&gt;. The convention is to return the &lt;code&gt;z&lt;/code&gt; whose imaginary part lies in &lt;code&gt;[-pi, pi]&lt;/code&gt;.</source>
          <target state="translated">대수는 다중 값 함수입니다. 각 &lt;code&gt;x&lt;/code&gt; 에 대해 &lt;code&gt;exp(z) = x&lt;/code&gt; 와 같은 &lt;code&gt;z&lt;/code&gt; 의 무한 수가 있습니다. 관습은 가상 부분이 &lt;code&gt;[-pi, pi]&lt;/code&gt; 에 있는 &lt;code&gt;z&lt;/code&gt; 를 반환하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="166930005429709b3b373125970bc9f001b57f22" translate="yes" xml:space="preserve">
          <source>Logarithm of &lt;code&gt;exp(x1) + exp(x2)&lt;/code&gt;. This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">대수의 &lt;code&gt;exp(x1) + exp(x2)&lt;/code&gt; . &lt;code&gt;x1&lt;/code&gt; 과 &lt;code&gt;x2&lt;/code&gt; 가 모두 스칼라 인 경우 스칼라입니다.</target>
        </trans-unit>
        <trans-unit id="0df50307c119146d5dc714638f54a5eccd592099" translate="yes" xml:space="preserve">
          <source>Logarithm of the sum of exponentiations of inputs in base 2.</source>
          <target state="translated">밑이 2 인 입력의 지수 합의 로그입니다.</target>
        </trans-unit>
        <trans-unit id="3a29b9b1054fef950824734dd96565e57e322c96" translate="yes" xml:space="preserve">
          <source>Logarithm of the sum of exponentiations of the inputs in base-2.</source>
          <target state="translated">밑이 2 인 입력의 지수 합의 로그입니다.</target>
        </trans-unit>
        <trans-unit id="273c857a62012f5708232560c688d9c8f7c28ba5" translate="yes" xml:space="preserve">
          <source>Logarithm of the sum of exponentiations of the inputs.</source>
          <target state="translated">입력 지수 합의 로그입니다.</target>
        </trans-unit>
        <trans-unit id="e7b8fad3893b278189df782f86ba4d32084ced17" translate="yes" xml:space="preserve">
          <source>Logarithm to base 10 of the Euler constant (</source>
          <target state="translated">오일러 상수의 밑이 10 인 로그</target>
        </trans-unit>
        <trans-unit id="80963c1ddcee26932e512e1ef164c3f919eb6773" translate="yes" xml:space="preserve">
          <source>Logarithm to base 2 of the Euler constant (</source>
          <target state="translated">오일러 상수의 밑이 2 인 로그 (</target>
        </trans-unit>
        <trans-unit id="dca3308567585813d8c4516ae0b5df7d6382aa24" translate="yes" xml:space="preserve">
          <source>Logic functions</source>
          <target state="translated">논리 기능</target>
        </trans-unit>
        <trans-unit id="acdcdb17721480a7efeeb33b0138faad218dbf31" translate="yes" xml:space="preserve">
          <source>Logical NOT is applied to the elements of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">논리 NOT은 &lt;code&gt;x&lt;/code&gt; 의 요소에 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="98ddc2178009c7731c8ae53ab405983c8f38c802" translate="yes" xml:space="preserve">
          <source>Logical OR is applied to the elements of &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt;. If &lt;code&gt;x1.shape != x2.shape&lt;/code&gt;, they must be broadcastable to a common shape (which becomes the shape of the output).</source>
          <target state="translated">논리 OR은 &lt;code&gt;x1&lt;/code&gt; 및 &lt;code&gt;x2&lt;/code&gt; 의 요소에 적용됩니다 . 경우 &lt;code&gt;x1.shape != x2.shape&lt;/code&gt; 들은 (출력의 모양이된다) 공통 캐스트 가능한 형상이어야한다.</target>
        </trans-unit>
        <trans-unit id="f5bd72920a8d92e6480e74978ed9235cd1d3ad95" translate="yes" xml:space="preserve">
          <source>Logical XOR is applied to the elements of &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt;. If &lt;code&gt;x1.shape != x2.shape&lt;/code&gt;, they must be broadcastable to a common shape (which becomes the shape of the output).</source>
          <target state="translated">논리 XOR은 &lt;code&gt;x1&lt;/code&gt; 및 &lt;code&gt;x2&lt;/code&gt; 의 요소에 적용됩니다 . 경우 &lt;code&gt;x1.shape != x2.shape&lt;/code&gt; 들은 (출력의 모양이된다) 공통 캐스트 가능한 형상이어야한다.</target>
        </trans-unit>
        <trans-unit id="ab411408fbd29ad68b53700b2e7826c03e6703f0" translate="yes" xml:space="preserve">
          <source>Logical operations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9360627c5984485d4c34bec86c9dfebc0835bd0" translate="yes" xml:space="preserve">
          <source>Logspace is equivalent to the code</source>
          <target state="translated">로그 공간은 코드와 동일합니다</target>
        </trans-unit>
        <trans-unit id="cfff3eff895eee45ffb53c164dd9129e264c6241" translate="yes" xml:space="preserve">
          <source>Long arrays can be summarised:</source>
          <target state="translated">긴 배열을 요약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dcabfd17cd19c7e1ebdad9125ee467aec3f27671" translate="yes" xml:space="preserve">
          <source>Low-level floating point manipulation</source>
          <target state="translated">저수준 부동 소수점 조작</target>
        </trans-unit>
        <trans-unit id="20bd4a379661919ac01507844a8735e9e7029b21" translate="yes" xml:space="preserve">
          <source>Low-level function which converts a 16-bit half-precision float into a 32-bit single-precision float, stored as a uint32.</source>
          <target state="translated">16 비트 반 정밀도 부동 소수점을 32 비트 단 정밀도 부동 소수점으로 변환하는 저수준 함수로, uint32로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="e475f5fc68e395b56437c0cdf65cca2d5aa08147" translate="yes" xml:space="preserve">
          <source>Low-level function which converts a 16-bit half-precision float into a 64-bit double-precision float, stored as a uint64.</source>
          <target state="translated">16 비트 반 정밀도 부동 소수점을 64 비트 배정 밀도 부동 소수점으로 변환하는 저수준 기능으로 uint64로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="96bea3d344730e551ebce7080101c44ce0f90690" translate="yes" xml:space="preserve">
          <source>Low-level function which converts a 32-bit single-precision float, stored as a uint32, into a 16-bit half-precision float.</source>
          <target state="translated">uint32로 저장된 32 비트 단 정밀도 부동 소수점을 16 비트 반 정밀도 부동 소수점으로 변환하는 저수준 기능입니다.</target>
        </trans-unit>
        <trans-unit id="ff645f12bfda22b17ebed86ab48b65f035e74b8d" translate="yes" xml:space="preserve">
          <source>Low-level function which converts a 64-bit double-precision float, stored as a uint64, into a 16-bit half-precision float.</source>
          <target state="translated">uint64로 저장된 64 비트 배정 밀도 부동 소수점을 16 비트 반 정밀도 부동 소수점으로 변환하는 저수준 함수입니다.</target>
        </trans-unit>
        <trans-unit id="352aca4d37f9444dfec5d82c349a1052e7d84651" translate="yes" xml:space="preserve">
          <source>Lower boundary of the output interval. All values generated will be greater than or equal to low. The default value is 0.</source>
          <target state="translated">출력 간격의 하한. 생성 된 모든 값은 low보다 크거나 같습니다. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="4bf35d3bbb54e1377461549a2939f7d0b3e69b61" translate="yes" xml:space="preserve">
          <source>Lower limit.</source>
          <target state="translated">하한.</target>
        </trans-unit>
        <trans-unit id="7de9677832dcede5ad99fb5a80acb920b62eed43" translate="yes" xml:space="preserve">
          <source>Lower triangle of &lt;code&gt;m&lt;/code&gt;, of same shape and data-type as &lt;code&gt;m&lt;/code&gt;.</source>
          <target state="translated">삼각형 낮추 &lt;code&gt;m&lt;/code&gt; 동일한 형상과 같은 데이터 타입, &lt;code&gt;m&lt;/code&gt; 이 .</target>
        </trans-unit>
        <trans-unit id="2daaaf38d1f5ab90fa4560a3de14f582045a565c" translate="yes" xml:space="preserve">
          <source>Lower triangle of an array.</source>
          <target state="translated">배열의 아래쪽 삼각형.</target>
        </trans-unit>
        <trans-unit id="83251c72d4ba0cc804bd754996e879943acb761e" translate="yes" xml:space="preserve">
          <source>Lowest (signed) integer to be drawn from the distribution (unless &lt;code&gt;high=None&lt;/code&gt;, in which case this parameter is the &lt;em&gt;highest&lt;/em&gt; such integer).</source>
          <target state="translated">분포에서 추출 할 가장 낮은 (부호있는) 정수 ( &lt;code&gt;high=None&lt;/code&gt; 이 아닌 경우이 매개 변수가 &lt;em&gt;가장 높은&lt;/em&gt; 정수).</target>
        </trans-unit>
        <trans-unit id="b68fc5877ebf9c93e957bc6591a72c392406bb37" translate="yes" xml:space="preserve">
          <source>Lowest (signed) integers to be drawn from the distribution (unless &lt;code&gt;high=None&lt;/code&gt;, in which case this parameter is 0 and this value is used for &lt;code&gt;high&lt;/code&gt;).</source>
          <target state="translated">분포에서 추출 할 가장 낮은 (부호있는) 정수 ( &lt;code&gt;high=None&lt;/code&gt; 이 아닌 경우이 매개 변수가 0이고이 값이 &lt;code&gt;high&lt;/code&gt; 에 사용됨 ).</target>
        </trans-unit>
        <trans-unit id="b948a7f8849519063c3bff20a99bb0099ed30eea" translate="yes" xml:space="preserve">
          <source>Lowest (signed) integers to be drawn from the distribution (unless &lt;code&gt;high=None&lt;/code&gt;, in which case this parameter is one above the &lt;em&gt;highest&lt;/em&gt; such integer).</source>
          <target state="translated">분포에서 추출 할 가장 낮은 (부호있는) 정수 ( &lt;code&gt;high=None&lt;/code&gt; 이 아닌 경우이 매개 변수가 이러한 정수 보다 &lt;em&gt;높은&lt;/em&gt; 정수보다 큼)</target>
        </trans-unit>
        <trans-unit id="c63ae6dd4fc9f9dda66970e827d13f7c73fe841c" translate="yes" xml:space="preserve">
          <source>M</source>
          <target state="translated">M</target>
        </trans-unit>
        <trans-unit id="796395a2ce2426bed5b8f2309da7f84c477d5434" translate="yes" xml:space="preserve">
          <source>M. Abramovitz and I. A. Stegun, &amp;ldquo;Handbook of Mathematical Functions with Formulas, Graphs, and Mathematical Tables,&amp;rdquo; Dover, 1964, p. 69, &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/page_69.htm&quot;&gt;http://www.math.sfu.ca/~cbm/aands/page_69.htm&lt;/a&gt;</source>
          <target state="translated">M. Abramovitz 및 IA Stegun,&amp;ldquo;수식, 그래프 및 수학 표가있는 수학 함수 핸드북&amp;rdquo;, Dover, 1964, p. 69, &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/page_69.htm&quot;&gt;http://www.math.sfu.ca/~cbm/aands/page_69.htm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14d9022ecb1d459d96a2cc474aaed3bd680af3c4" translate="yes" xml:space="preserve">
          <source>M. Abramowitz and I. A. Stegun, &lt;em&gt;Handbook of Mathematical Functions&lt;/em&gt;, 10th printing, New York: Dover, 1964, pp. 379. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/page_379.htm&quot;&gt;http://www.math.sfu.ca/~cbm/aands/page_379.htm&lt;/a&gt;</source>
          <target state="translated">M. Abramowitz와 IA Stegun, &lt;em&gt;수학 함수 핸드북&lt;/em&gt; , 10 번째 인쇄, 뉴욕 : Dover, 1964, pp. 379. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/page_379.htm&quot;&gt;http://www.math.sfu.ca/~cbm/aands/page_379.htm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0cb7cd22c76edc78df8480ba3d6f4832ff91ded4" translate="yes" xml:space="preserve">
          <source>M. Abramowitz and I. A. Stegun, Handbook of Mathematical Functions. New York, NY: Dover, 1972, pg. 83.</source>
          <target state="translated">M. Abramowitz와 IA Stegun, 수학 함수 핸드북. 뉴욕, 뉴욕 : 도버, 1972, pg. 83.</target>
        </trans-unit>
        <trans-unit id="43e43bd133d6863cb7a9de2d689e513b6c81217e" translate="yes" xml:space="preserve">
          <source>M. Abramowitz and I. A. Stegun, Handbook of Mathematical Functions. New York, NY: Dover, 1972, pg. 83. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</source>
          <target state="translated">M. Abramowitz와 IA Stegun, 수학 함수 핸드북. 뉴욕, 뉴욕 : 도버, 1972, pg. 83. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53b1c9c8eb0cf262b57729e4b91b33dc7f1eea81" translate="yes" xml:space="preserve">
          <source>M. Abramowitz and I. A. Stegun, Handbook of Mathematical Functions. New York, NY: Dover, 1972.</source>
          <target state="translated">M. Abramowitz와 IA Stegun, 수학 함수 핸드북. 뉴욕, 뉴욕 : 1972 년 도버.</target>
        </trans-unit>
        <trans-unit id="ee284bd1edf39da7accb49887b022f2a6880ffff" translate="yes" xml:space="preserve">
          <source>M. Abramowitz and I.A. Stegun, &amp;ldquo;Handbook of Mathematical Functions&amp;rdquo;, 10th printing, 1964, pp. 67. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</source>
          <target state="translated">M. Abramowitz와 IA Stegun,&amp;ldquo;수학적 기능 핸드북&amp;rdquo;, 10 회 인쇄, 1964, pp. 67. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b4d7af77e2474b1e03deb4c841c43fa44b4fa670" translate="yes" xml:space="preserve">
          <source>M. Abramowitz and I.A. Stegun, &amp;ldquo;Handbook of Mathematical Functions&amp;rdquo;, 10th printing, 1964, pp. 79. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</source>
          <target state="translated">M. Abramowitz와 IA Stegun,&amp;ldquo;수학 기능 안내서&amp;rdquo;, 10 회 인쇄, 1964, pp. 79. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1000d3b7bf23c3293db40f1e12e55a155eb71f88" translate="yes" xml:space="preserve">
          <source>M. Abramowitz and I.A. Stegun, &amp;ldquo;Handbook of Mathematical Functions&amp;rdquo;, 10th printing, 1964, pp. 86. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</source>
          <target state="translated">M. Abramowitz와 IA Stegun,&amp;ldquo;수학적 기능 핸드북&amp;rdquo;, 10 회 인쇄, 1964, pp. 86. &lt;a href=&quot;http://www.math.sfu.ca/~cbm/aands/&quot;&gt;http://www.math.sfu.ca/~cbm/aands/&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="10401d4904a530878ef500d4c01e13971fc1a5ec" translate="yes" xml:space="preserve">
          <source>M. Matsumoto and T. Nishimura, &amp;ldquo;Mersenne Twister: A 623-dimensionally equidistributed uniform pseudorandom number generator,&amp;rdquo; &lt;em&gt;ACM Trans. on Modeling and Computer Simulation&lt;/em&gt;, Vol. 8, No. 1, pp. 3-30, Jan. 1998.</source>
          <target state="translated">M. Matsumoto 및 T. Nishimura,&amp;ldquo;Mersenne Twister : 623 차원으로 균일하게 분포 된 균일 한 의사 난수 생성기&amp;rdquo; &lt;em&gt;ACM Trans. 모델링 및 컴퓨터 시뮬레이션&lt;/em&gt; , Vol. 8, No. 1, 3-30 페이지, 1998 년 1 월</target>
        </trans-unit>
        <trans-unit id="a563fa6014f9030bc1091eda42860c70e53a75fd" translate="yes" xml:space="preserve">
          <source>M. Sullivan and M. Sullivan, III, &amp;ldquo;Algebra and Trignometry, Enhanced With Graphing Utilities,&amp;rdquo; Prentice-Hall, pg. 318, 1996.</source>
          <target state="translated">M. Sullivan 및 M. Sullivan, III,&amp;ldquo;그래프 유틸리티를 사용하여 개선 된 대수 및 삼각법,&amp;rdquo;Prentice-Hall, pg. 318, 1996.</target>
        </trans-unit>
        <trans-unit id="57cfa503fff95bbc068ee0b81926d66666383d31" translate="yes" xml:space="preserve">
          <source>M.S. Bartlett, &amp;ldquo;Periodogram Analysis and Continuous Spectra&amp;rdquo;, Biometrika 37, 1-16, 1950.</source>
          <target state="translated">MS Bartlett, &quot;주기도 분석 및 연속 스펙트럼&quot;, Biometrika 37, 1-16, 1950.</target>
        </trans-unit>
        <trans-unit id="6774190d7f255e538acfbf2555afa1d8c09f5542" translate="yes" xml:space="preserve">
          <source>MATLAB reference documention, &amp;ldquo;Rank&amp;rdquo; &lt;a href=&quot;https://www.mathworks.com/help/techdoc/ref/rank.html&quot;&gt;https://www.mathworks.com/help/techdoc/ref/rank.html&lt;/a&gt;</source>
          <target state="translated">MATLAB 참조 문서,&amp;ldquo;순위&amp;rdquo; &lt;a href=&quot;https://www.mathworks.com/help/techdoc/ref/rank.html&quot;&gt;https://www.mathworks.com/help/techdoc/ref/rank.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9af4fc7b8138d2f8740cae99324e5b71bdbe2bdd" translate="yes" xml:space="preserve">
          <source>MATLAB work-a-like for 1-D and 2-D arrays.</source>
          <target state="translated">MATLAB은 1-D 및 2-D 배열과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="808ffbf65afa62d125344d9b3e8790439801c809" translate="yes" xml:space="preserve">
          <source>MATLAB work-alike for 1-D and 2-D arrays.</source>
          <target state="translated">MATLAB은 1 차원 배열과 2 차원 배열에서 동일하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="e6d7ea525d9c1cb77d6dada4577419a88b5aaac1" translate="yes" xml:space="preserve">
          <source>MT19937</source>
          <target state="translated">MT19937</target>
        </trans-unit>
        <trans-unit id="7bce0d7ca3c21db35ede8db2f12fac05579372a1" translate="yes" xml:space="preserve">
          <source>MT19937 - The standard Python BitGenerator. Adds a &lt;a href=&quot;generated/numpy.random.mt19937.mt19937.jumped#numpy.random.mt19937.MT19937.jumped&quot;&gt;&lt;code&gt;jumped&lt;/code&gt;&lt;/a&gt; function that returns a new generator with state as-if</source>
          <target state="translated">MT19937-표준 Python BitGenerator. 상태를 그대로 사용하여 새 생성기를 반환 하는 &lt;a href=&quot;generated/numpy.random.mt19937.mt19937.jumped#numpy.random.mt19937.MT19937.jumped&quot;&gt; &lt;code&gt;jumped&lt;/code&gt; &lt;/a&gt; 함수를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f07c8771fb3a7c7f33effbe38f0f59fb2b7a1664" translate="yes" xml:space="preserve">
          <source>MT19937.cffi</source>
          <target state="translated">MT19937.cffi</target>
        </trans-unit>
        <trans-unit id="4b48a5628ec9fca0df3fd9eaa04078cf1112d33c" translate="yes" xml:space="preserve">
          <source>MT19937.ctypes</source>
          <target state="translated">MT19937.ctypes</target>
        </trans-unit>
        <trans-unit id="d3960fe8caf716caa3faa711048f8eaf2c190c8f" translate="yes" xml:space="preserve">
          <source>MT19937.jumped()</source>
          <target state="translated">MT19937.jumped()</target>
        </trans-unit>
        <trans-unit id="70c54bc2b37814767b0b16267d4e49e0eaa1c1c3" translate="yes" xml:space="preserve">
          <source>MT19937.state</source>
          <target state="translated">MT19937.state</target>
        </trans-unit>
        <trans-unit id="b222baa318eb3fe2118a721645104a17a2e12508" translate="yes" xml:space="preserve">
          <source>Machine epsilon varies from machine to machine and between data types but Python floats on most platforms have a machine epsilon equal to 2.2204460492503131e-16. You can use &amp;lsquo;np.finfo(float).eps&amp;rsquo; to print out the machine epsilon for floats.</source>
          <target state="translated">머신 엡실론은 머신마다 그리고 데이터 유형에 따라 다르지만 대부분의 플랫폼에서 파이썬 플로트의 머신 엡실론은 2.2204460492503131e-16과 같습니다. 'np.finfo (float) .eps'를 사용하여 수레를위한 기계 엡실론을 인쇄 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9bdb316446a309b3484ba517636f47e09d947903" translate="yes" xml:space="preserve">
          <source>Machine limits for floating point types.</source>
          <target state="translated">부동 소수점 유형의 기계 한계.</target>
        </trans-unit>
        <trans-unit id="73e3d143745510a6549d96b020546b5898bd3c32" translate="yes" xml:space="preserve">
          <source>Machine limits for integer types.</source>
          <target state="translated">정수 유형의 기계 한계.</target>
        </trans-unit>
        <trans-unit id="368e3c884a3e6998248ff9097641dc2397f91307" translate="yes" xml:space="preserve">
          <source>Macro form of &lt;a href=&quot;#c.PyArray_Empty&quot;&gt;&lt;code&gt;PyArray_Empty&lt;/code&gt;&lt;/a&gt; which takes a type-number, &lt;em&gt;typenum&lt;/em&gt;, instead of a data-type object.</source>
          <target state="translated">매크로 형태 &lt;a href=&quot;#c.PyArray_Empty&quot;&gt; &lt;code&gt;PyArray_Empty&lt;/code&gt; &lt;/a&gt; 형식 번호, 소요 &lt;em&gt;typenum를&lt;/em&gt; 대신 데이터 타입 오브젝트.</target>
        </trans-unit>
        <trans-unit id="d915b8d6481f66730d8c850695157c13eec17e68" translate="yes" xml:space="preserve">
          <source>Macro form of &lt;a href=&quot;#c.PyArray_Zeros&quot;&gt;&lt;code&gt;PyArray_Zeros&lt;/code&gt;&lt;/a&gt; which takes a type-number instead of a data-type object.</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_Zeros&quot;&gt; &lt;code&gt;PyArray_Zeros&lt;/code&gt; 의&lt;/a&gt; 매크로 형식으로 , 데이터 형식 개체 대신 형식 번호를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="899bd694d29ace1be956ab35177075021977560b" translate="yes" xml:space="preserve">
          <source>Macros</source>
          <target state="translated">Macros</target>
        </trans-unit>
        <trans-unit id="8bebd0ebb56dc9f842a18e7b970fa8970cc84b64" translate="yes" xml:space="preserve">
          <source>Macros to allocate, free, and reallocate dimension and strides memory.</source>
          <target state="translated">차원을 할당, 해제 및 재 할당하는 매크로 및 메모리를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="992eddad2fa60737c0e7d9f0d9c8fd77cb0a2291" translate="yes" xml:space="preserve">
          <source>Macros to allocate, free, and reallocate memory. These macros are used internally to create arrays.</source>
          <target state="translated">메모리를 할당, 해제 및 재 할당하는 매크로 이 매크로는 내부적으로 배열을 만드는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="41c3032490e05b7582198a7d382a11e14cafbdbb" translate="yes" xml:space="preserve">
          <source>Main difference between &lt;a href=&quot;#numpy.linalg.eigvals&quot;&gt;&lt;code&gt;eigvals&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numpy.linalg.eig#numpy.linalg.eig&quot;&gt;&lt;code&gt;eig&lt;/code&gt;&lt;/a&gt;: the eigenvectors aren&amp;rsquo;t returned.</source>
          <target state="translated">&lt;a href=&quot;#numpy.linalg.eigvals&quot;&gt; &lt;code&gt;eigvals&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;numpy.linalg.eig#numpy.linalg.eig&quot;&gt; &lt;code&gt;eig&lt;/code&gt; 의&lt;/a&gt; 주요 차이점 : 고유 벡터는 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="17f0481e62f92478758daba6f45708b9902f91ce" translate="yes" xml:space="preserve">
          <source>Main difference from eigh: the eigenvectors are not computed.</source>
          <target state="translated">eigh와의 주요 차이점 : 고유 벡터는 계산되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="589abefef4e6719e397197cb478d2737f78ba6e4" translate="yes" xml:space="preserve">
          <source>Mainly for backwards compatibility to the Numeric C-API and for simple casts to non-flexible types. Return a new array object with the elements of &lt;em&gt;arr&lt;/em&gt; cast to the data-type &lt;em&gt;typenum&lt;/em&gt; which must be one of the enumerated types and not a flexible type.</source>
          <target state="translated">주로 Numeric C-API와의 하위 호환성 및 비 유연한 유형으로의 간단한 캐스트 용입니다. &lt;em&gt;arr&lt;/em&gt; 요소를 데이터 유형 &lt;em&gt;typenum으로&lt;/em&gt; 캐스트 한 새로운 배열 객체를 리턴합니다 .이 유형은 유연한 유형이 아닌 열거 된 유형 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="7f52e3105dfcc1e64146f131b70d4ac8a75b94c2" translate="yes" xml:space="preserve">
          <source>Make N-D coordinate arrays for vectorized evaluations of N-D scalar/vector fields over N-D grids, given one-dimensional coordinate arrays x1, x2,&amp;hellip;, xn.</source>
          <target state="translated">1 차원 좌표 배열 x1, x2,&amp;hellip;, xn이 주어지면 ND 그리드에서 ND 스칼라 / 벡터 필드의 벡터화 된 평가를 위해 ND 좌표 배열을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a9929b5560d41717cc4e17b183714853c07910d6" translate="yes" xml:space="preserve">
          <source>Make a (&lt;em&gt;very&lt;/em&gt; coarse) grid for computing a Mandelbrot set:</source>
          <target state="translated">Mandelbrot 세트를 계산하기 위해 ( &lt;em&gt;매우&lt;/em&gt; 거친) 그리드를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="793de80198f3e7d633a262558162ceb1ded1e015" translate="yes" xml:space="preserve">
          <source>Make a new copy of the data-type object. If &lt;code&gt;False&lt;/code&gt;, the result may just be a reference to a built-in data-type object.</source>
          <target state="translated">데이터 유형 오브젝트의 새 사본을 작성하십시오. 경우 &lt;code&gt;False&lt;/code&gt; , 결과는 내장 데이터 타입 객체에 대한 참조 할 수있다.</target>
        </trans-unit>
        <trans-unit id="a831e4a92979555625b23c66a3d09803048cd6ec" translate="yes" xml:space="preserve">
          <source>Make function raise KnownFailureException exception if given condition is true.</source>
          <target state="translated">주어진 조건이 참이면 함수에서 KnownFailureException 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="9a732c043a4153afa349bff5ecfd6f57666bdf5e" translate="yes" xml:space="preserve">
          <source>Make function raise SkipTest exception if a given condition is true.</source>
          <target state="translated">주어진 조건이 참이면 함수가 SkipTest 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="6858d151467d19f1cb2875295def91538137e0f5" translate="yes" xml:space="preserve">
          <source>Make sure a copy is made of &lt;em&gt;op&lt;/em&gt;. If this flag is not present, data is not copied if it can be avoided.</source>
          <target state="translated">사본이 &lt;em&gt;op&lt;/em&gt; 로 만들어 졌는지 확인하십시오 . 이 플래그가 없으면 피할 수 있으면 데이터가 복사되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fa253a65eff13dcd45a6381940ea3d563851c87f" translate="yes" xml:space="preserve">
          <source>Make sure that &lt;code&gt;actual_type&lt;/code&gt; is compatible with &lt;code&gt;desired_type&lt;/code&gt;. For example, this allows character and byte types, or int and long types, to match. This is now equivalent to &lt;code&gt;PyArray_EquivTypenums()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;actual_type&lt;/code&gt; 이 &lt;code&gt;desired_type&lt;/code&gt; 과 호환 되는지 확인하십시오 . 예를 들어, 문자 및 바이트 유형 또는 int 및 long 유형을 일치시킬 수 있습니다. 이것은 이제 &lt;code&gt;PyArray_EquivTypenums()&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="9b2a551f742bd2a7cf675451084c5fbd575db246" translate="yes" xml:space="preserve">
          <source>Make sure the result is a base-class ndarray. By default, if &lt;em&gt;op&lt;/em&gt; is an instance of a subclass of ndarray, an instance of that same subclass is returned. If this flag is set, an ndarray object will be returned instead.</source>
          <target state="translated">결과가 기본 클래스 ndarray인지 확인하십시오. 기본적으로 &lt;em&gt;op&lt;/em&gt; 가 ndarray의 서브 클래스 인스턴스 인 경우 동일한 서브 클래스의 인스턴스가 리턴됩니다. 이 플래그를 설정하면 대신 ndarray 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="a66f646163bc787161e9da29b0a054fbc6624c6d" translate="yes" xml:space="preserve">
          <source>Make sure the resulting array is a copy of the original.</source>
          <target state="translated">결과 배열이 원본의 사본인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="39d90f5a018cb286b90a3644f5e4eda749a94075" translate="yes" xml:space="preserve">
          <source>Make sure the resulting object is an actual ndarray, and not a sub-class.</source>
          <target state="translated">결과 객체가 하위 클래스가 아닌 실제 ndarray인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="dc2a4442b24ed7738f50875398d3eedbc2d1aafc" translate="yes" xml:space="preserve">
          <source>Make sure the returned array can be written to.</source>
          <target state="translated">반환 된 배열을 쓸 수 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f2cb8de0de4ac461ccef8b3f6699d7773164c9a7" translate="yes" xml:space="preserve">
          <source>Make sure the returned array has a data-type descriptor that is in machine byte-order, over-riding any specification in the &lt;em&gt;dtype&lt;/em&gt; argument. Normally, the byte-order requirement is determined by the &lt;em&gt;dtype&lt;/em&gt; argument. If this flag is set and the dtype argument does not indicate a machine byte-order descriptor (or is NULL and the object is already an array with a data-type descriptor that is not in machine byte- order), then a new data-type descriptor is created and used with its byte-order field set to native.</source>
          <target state="translated">반환 된 배열에 &lt;em&gt;dtype&lt;/em&gt; 인수의 사양을 &lt;em&gt;재정 의하여&lt;/em&gt; 컴퓨터 바이트 순서의 데이터 형식 설명자가 있는지 확인하십시오 . 일반적으로 바이트 순서 요구 사항은 &lt;em&gt;dtype&lt;/em&gt; 인수에 의해 결정됩니다 . 이 플래그가 설정되고 dtype 인수가 기계 바이트 순서 설명자를 나타내지 않거나 (또는 ​​NULL이고 오브젝트가 이미 기계 바이트 순서가 아닌 데이터 유형 설명자를 가진 배열 인 경우) 새 데이터 type descriptor는 바이트 순서 필드를 native로 설정하여 생성 및 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cc7b28e40eab8c8cfe24c22e8e90c3868c988c89" translate="yes" xml:space="preserve">
          <source>Make sure the returned array has strides that are multiples of the element size.</source>
          <target state="translated">반환 된 배열에 요소 크기의 배수 인 보폭이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ff416e45483051472f44c5631669234da57230ad" translate="yes" xml:space="preserve">
          <source>Make sure the returned array is C-style contiguous</source>
          <target state="translated">반환 된 배열이 C 스타일 연속인지 확인하십시오</target>
        </trans-unit>
        <trans-unit id="76ac22505382624e9142f85a5dd50a913b6940a1" translate="yes" xml:space="preserve">
          <source>Make sure the returned array is Fortran-style contiguous.</source>
          <target state="translated">반환 된 배열이 포트란 스타일의 연속인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a3fb7cfe1b008b6ba165b89e7102a19142fa050d" translate="yes" xml:space="preserve">
          <source>Make sure the returned array is aligned on proper boundaries for its data type. An aligned array has the data pointer and every strides factor as a multiple of the alignment factor for the data-type- descriptor.</source>
          <target state="translated">반환 된 배열이 해당 데이터 형식에 적합한 경계에 정렬되어 있는지 확인하십시오. 정렬 된 배열에는 데이터 포인터와 모든 보폭 요소가 데이터 유형 설명자에 대한 정렬 요소의 배수로 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8243dc037100f878288a764547cbc0e678b232cd" translate="yes" xml:space="preserve">
          <source>Makes a copy of the given iterator. This function is provided primarily to enable multi-threaded iteration of the data.</source>
          <target state="translated">주어진 이터레이터의 복사본을 만듭니다. 이 기능은 주로 데이터의 다중 스레드 반복을 가능하게하기 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="9994f58a6845d6543e990f0db03b5691b328bb3d" translate="yes" xml:space="preserve">
          <source>Making changes to the view changes the underlying array</source>
          <target state="translated">뷰를 변경하면 기본 배열이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="7a8542defa1f2f46558700bed760e59b4ae9473a" translate="yes" xml:space="preserve">
          <source>Making proper sets</source>
          <target state="translated">적절한 세트 만들기</target>
        </trans-unit>
        <trans-unit id="f072320f52e480cd4cee7848612d896de0342201" translate="yes" xml:space="preserve">
          <source>Manipulating a MaskedArray</source>
          <target state="translated">마스크 배열 조작</target>
        </trans-unit>
        <trans-unit id="186df05b293e739802129eb3df4baaf8fda61676" translate="yes" xml:space="preserve">
          <source>Manually adding two vectors, using broadcasting:</source>
          <target state="translated">방송을 사용하여 두 개의 벡터를 수동으로 추가 :</target>
        </trans-unit>
        <trans-unit id="7ff15d6fb98077a9b63faafb800abb9fe78fcf46" translate="yes" xml:space="preserve">
          <source>Many of these methods take an argument named &lt;em&gt;axis&lt;/em&gt;. In such cases,</source>
          <target state="translated">이러한 메소드 중 다수는 &lt;em&gt;axis&lt;/em&gt; 라는 인수를 사용 합니다. 그런 경우는,</target>
        </trans-unit>
        <trans-unit id="9ede0036fbda2644b0badedec4f5663550b9b1ac" translate="yes" xml:space="preserve">
          <source>Many other distributions are also supported.</source>
          <target state="translated">다른 많은 배포판도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8e22a4dd259d1679b0a51f9039d6bfdead73e93b" translate="yes" xml:space="preserve">
          <source>Mask an array inside a given interval.</source>
          <target state="translated">주어진 간격 내에서 배열을 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="da9a1c569bf731b67119f643ede378ad4e3f1519" translate="yes" xml:space="preserve">
          <source>Mask an array outside a given interval.</source>
          <target state="translated">지정된 간격을 벗어난 배열을 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="6cfe071d1d905293fc1a86d3d41da5c8b38fd4a8" translate="yes" xml:space="preserve">
          <source>Mask an array where &lt;code&gt;not&lt;/code&gt; equal to a given value.</source>
          <target state="translated">주어진 값과 같지 &lt;code&gt;not&lt;/code&gt; 배열을 마스크합니다 .</target>
        </trans-unit>
        <trans-unit id="bfd71c8af0182463deeb8b929bb8db010e999aa1" translate="yes" xml:space="preserve">
          <source>Mask an array where a condition is met.</source>
          <target state="translated">조건이 충족되는 배열을 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="745c1555706e0f77e6ffe2c2813a3fb36374ff35" translate="yes" xml:space="preserve">
          <source>Mask an array where equal to a given value.</source>
          <target state="translated">주어진 값과 동일한 배열을 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="f9729990c0e40052af76c9e13494e2abd95504a0" translate="yes" xml:space="preserve">
          <source>Mask an array where greater than a given value.</source>
          <target state="translated">주어진 값보다 큰 배열을 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="ec4efca3f5e96d9a3bd62aaca7a5391e583c37d0" translate="yes" xml:space="preserve">
          <source>Mask an array where greater than or equal to a given value.</source>
          <target state="translated">주어진 값보다 크거나 같은 배열을 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="c0c78b88c4cc26e562d4c01312db539d600c13b8" translate="yes" xml:space="preserve">
          <source>Mask an array where invalid values occur (NaNs or infs).</source>
          <target state="translated">유효하지 않은 값이 발생하는 배열을 마스킹하십시오 (NaN 또는 infs).</target>
        </trans-unit>
        <trans-unit id="bafddbcc3a701d825f4b8c81b4a6586eda8f72f6" translate="yes" xml:space="preserve">
          <source>Mask an array where less than a given value.</source>
          <target state="translated">주어진 값보다 작은 배열을 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="cf298275c5da246fc15e63b817a590139fdfaf20" translate="yes" xml:space="preserve">
          <source>Mask an array where less than or equal to a given value.</source>
          <target state="translated">주어진 값보다 작거나 같은 배열을 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="f25a93425a69cec34a64e945a78ff3354d106c87" translate="yes" xml:space="preserve">
          <source>Mask array &lt;code&gt;b&lt;/code&gt; conditional on &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">어레이 마스크 &lt;code&gt;b&lt;/code&gt; 조건부 &lt;code&gt;a&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b6351290c3e2bd1325051b50aa84be0096715800" translate="yes" xml:space="preserve">
          <source>Mask cols of a 2D array that contain masked values.</source>
          <target state="translated">마스크 된 값을 포함하는 2D 배열의 마스크 열.</target>
        </trans-unit>
        <trans-unit id="5989c0ba273f4fa26213980d7a2122d0b5463f7a" translate="yes" xml:space="preserve">
          <source>Mask columns of a 2D array that contain masked values.</source>
          <target state="translated">마스크 된 값을 포함하는 2D 배열의 열을 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="888fa953c6e1c3b95fb32020739a8fb7290b6a16" translate="yes" xml:space="preserve">
          <source>Mask inside a given interval.</source>
          <target state="translated">주어진 간격 내에서 마스크.</target>
        </trans-unit>
        <trans-unit id="8875894bb1277ca00fff30f310af81531740e9e5" translate="yes" xml:space="preserve">
          <source>Mask invalid values (NaNs or infs).</source>
          <target state="translated">유효하지 않은 값 (NaN 또는 infs)을 마스크하십시오.</target>
        </trans-unit>
        <trans-unit id="3c5cc469c703297ad73e0cbd2085f332b3c12da4" translate="yes" xml:space="preserve">
          <source>Mask outside a given interval.</source>
          <target state="translated">지정된 간격을 벗어난 마스크.</target>
        </trans-unit>
        <trans-unit id="00af5e48341996dadc0cdb5fdf0842273fe5b864" translate="yes" xml:space="preserve">
          <source>Mask rows and/or columns of a 2D array that contain masked values.</source>
          <target state="translated">마스크 된 값을 포함하는 2D 배열의 행 및 / 또는 열을 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="036b308dd6f036875453ed63e39c90f458b31d97" translate="yes" xml:space="preserve">
          <source>Mask rows and/or columns of a 2D array.</source>
          <target state="translated">2D 배열의 행 및 / 또는 열을 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="fa07a97e90fa3a048da5dc5176f7f8f08808a1e7" translate="yes" xml:space="preserve">
          <source>Mask rows of a 2D array that contain masked values.</source>
          <target state="translated">마스크 된 값을 포함하는 2D 배열의 행을 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="cdcf6bd79fa7623a0f0d4537e494029fd7cec8d6" translate="yes" xml:space="preserve">
          <source>Mask the array &lt;code&gt;x&lt;/code&gt; where the data are exactly equal to value.</source>
          <target state="translated">데이터가 정확히 값과 동일한 배열 &lt;code&gt;x&lt;/code&gt; 를 마스크하십시오 .</target>
        </trans-unit>
        <trans-unit id="6d4dbf0aaf4fae78661a0147024893bc953fbf99" translate="yes" xml:space="preserve">
          <source>Mask using floating point equality.</source>
          <target state="translated">부동 소수점 동등성을 사용하여 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="1a7c6742714332311a709c878556f33860c1ca12" translate="yes" xml:space="preserve">
          <source>Mask where &lt;code&gt;not&lt;/code&gt; equal to a given value.</source>
          <target state="translated">여기서 마스크 &lt;code&gt;not&lt;/code&gt; 소정 값과 동일.</target>
        </trans-unit>
        <trans-unit id="6a25717d456c673a4a868df938fb9bd46105d77b" translate="yes" xml:space="preserve">
          <source>Mask where a condition is met.</source>
          <target state="translated">조건이 충족되는 마스크.</target>
        </trans-unit>
        <trans-unit id="2e77dd6d757e07506b660bea8d79d9b375bb9e96" translate="yes" xml:space="preserve">
          <source>Mask where equal to a given value (integers).</source>
          <target state="translated">주어진 값 (정수)과 동일한 곳에 마스크.</target>
        </trans-unit>
        <trans-unit id="819bdc07b0b19e7e594b197983e674371983eb93" translate="yes" xml:space="preserve">
          <source>Mask where equal to a given value.</source>
          <target state="translated">주어진 값과 동일한 곳에서 마스크.</target>
        </trans-unit>
        <trans-unit id="99e92ea0dacc268463873d122e4916bac3c6166d" translate="yes" xml:space="preserve">
          <source>Mask where greater than a given value.</source>
          <target state="translated">주어진 값보다 큰 곳을 가리십시오.</target>
        </trans-unit>
        <trans-unit id="377f44d52c44c29b0aa5a55900c31b4b9e499dd4" translate="yes" xml:space="preserve">
          <source>Mask where greater than or equal to a given value.</source>
          <target state="translated">지정된 값 이상인 마스크.</target>
        </trans-unit>
        <trans-unit id="f0e79008b6bfb135c14c930dd9b5fa3a89ff7ec3" translate="yes" xml:space="preserve">
          <source>Mask where less than a given value.</source>
          <target state="translated">주어진 값보다 작은 곳에 마스크.</target>
        </trans-unit>
        <trans-unit id="c86db9f027cb5e25560c169de275edc638940064" translate="yes" xml:space="preserve">
          <source>Mask where less than or equal to a given value.</source>
          <target state="translated">주어진 값 이하의 마스크.</target>
        </trans-unit>
        <trans-unit id="0d15a34ef50017c16ffef8d56380f0190f6e4176" translate="yes" xml:space="preserve">
          <source>Mask whole rows and/or columns of a 2D array that contain masked values. The masking behavior is selected using the &lt;code&gt;axis&lt;/code&gt; parameter.</source>
          <target state="translated">마스크 된 값을 포함하는 2D 배열의 전체 행 및 / 또는 열을 마스크합니다. 마스킹 동작은 &lt;code&gt;axis&lt;/code&gt; 매개 변수를 사용하여 선택 됩니다.</target>
        </trans-unit>
        <trans-unit id="fcd2fc9f9e2cbbcb1423bbce02ea7377a87d9394" translate="yes" xml:space="preserve">
          <source>Mask. Must be convertible to an array of booleans with the same shape as &lt;code&gt;data&lt;/code&gt;. True indicates a masked (i.e. invalid) data.</source>
          <target state="translated">마스크. &lt;code&gt;data&lt;/code&gt; 와 모양이 같은 부울 배열로 변환 할 수 있어야합니다 . True는 마스크 된 (즉, 유효하지 않은) 데이터를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="77690385e03cf5be1602ed7d25dbb1c74983e23a" translate="yes" xml:space="preserve">
          <source>Masked array interpretation of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">의 마스크 배열 해석 . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2736171df63d3cbe517f0bae324f23b6232dfa60" translate="yes" xml:space="preserve">
          <source>Masked array operations</source>
          <target state="translated">마스크 배열 연산</target>
        </trans-unit>
        <trans-unit id="2d4d75f30e0b052c284673be22985a3e26fd2369" translate="yes" xml:space="preserve">
          <source>Masked arrays</source>
          <target state="translated">마스크 배열</target>
        </trans-unit>
        <trans-unit id="26652000ec64c331ba43c810f4acf18412b0f68b" translate="yes" xml:space="preserve">
          <source>Masked arrays (&lt;code&gt;numpy.ma&lt;/code&gt;)</source>
          <target state="translated">마스크 배열 ( &lt;code&gt;numpy.ma&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="078e11437b77503c6af41321e9f5a89af35fcaa3" translate="yes" xml:space="preserve">
          <source>Masked arrays (numpy.ma)</source>
          <target state="translated">마스크 배열 (numpy.ma)</target>
        </trans-unit>
        <trans-unit id="7153e6f35343b699d95430ff8793f79f62547cd2" translate="yes" xml:space="preserve">
          <source>Masked arrays also support standard numpy ufuncs. The output is then a masked array. The result of a unary ufunc is masked wherever the input is masked. The result of a binary ufunc is masked wherever any of the input is masked. If the ufunc also returns the optional context output (a 3-element tuple containing the name of the ufunc, its arguments and its domain), the context is processed and entries of the output masked array are masked wherever the corresponding input fall outside the validity domain:</source>
          <target state="translated">마스크 배열은 표준 numpy ufunc도 지원합니다. 그러면 출력이 마스킹 된 배열입니다. 단항 ufunc의 결과는 입력이 마스킹 될 때마다 마스킹됩니다. 이진 ufunc의 결과는 입력이 마스킹 될 때마다 마스킹됩니다. ufunc가 선택적 컨텍스트 출력 (ufunc의 이름, 인수 및 도메인을 포함하는 3 요소 튜플)도 반환하는 경우 컨텍스트가 처리되고 출력 마스킹 된 배열의 항목이 해당 입력이 유효성을 벗어난 곳이면 마스킹됩니다 도메인:</target>
        </trans-unit>
        <trans-unit id="2feff57b9d5e5a78c57621737acc9551d5fb918f" translate="yes" xml:space="preserve">
          <source>Masked arrays are arrays that may have missing or invalid entries. The &lt;a href=&quot;#module-numpy.ma&quot;&gt;&lt;code&gt;numpy.ma&lt;/code&gt;&lt;/a&gt; module provides a nearly work-alike replacement for numpy that supports data arrays with masks.</source>
          <target state="translated">마스크 배열은 항목이 없거나 유효하지 않은 배열입니다. &lt;a href=&quot;#module-numpy.ma&quot;&gt; &lt;code&gt;numpy.ma&lt;/code&gt; 의&lt;/a&gt; 모듈은 NumPy와의 거의 작업 모두 대체를 제공 마스크가 지원하는 데이터 배열이.</target>
        </trans-unit>
        <trans-unit id="3f5b01b275571ce9babfb349e3e312bc47fa839e" translate="yes" xml:space="preserve">
          <source>Masked arrays are arrays that may have missing or invalid entries. The &lt;a href=&quot;maskedarray.generic#module-numpy.ma&quot;&gt;&lt;code&gt;numpy.ma&lt;/code&gt;&lt;/a&gt; module provides a nearly work-alike replacement for numpy that supports data arrays with masks.</source>
          <target state="translated">마스크 배열은 항목이 없거나 유효하지 않은 배열입니다. &lt;a href=&quot;maskedarray.generic#module-numpy.ma&quot;&gt; &lt;code&gt;numpy.ma&lt;/code&gt; 의&lt;/a&gt; 모듈은 NumPy와의 거의 작업 모두 대체를 제공 마스크가 지원하는 데이터 배열이.</target>
        </trans-unit>
        <trans-unit id="0540687eb24d38593064d3dec8d6776ae8362128" translate="yes" xml:space="preserve">
          <source>Masked arrays arithmetics</source>
          <target state="translated">마스크 배열 산술</target>
        </trans-unit>
        <trans-unit id="2a10f17f192630fac9e2659b01202ca989fcde7d" translate="yes" xml:space="preserve">
          <source>Masked elements are ignored.</source>
          <target state="translated">마스크 된 요소는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="a1ab6894299ae6aae7ef94e3acf9c5526b0895b9" translate="yes" xml:space="preserve">
          <source>Masked elements are set to 0 internally.</source>
          <target state="translated">마스크 된 요소는 내부적으로 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="97b5ab568e51a37efa7e81ef1c6b7490d9852f4c" translate="yes" xml:space="preserve">
          <source>Masked elements are set to 1 internally for computation.</source>
          <target state="translated">마스크 된 요소는 계산을 위해 내부적으로 1로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="f459802409051eaa7a4da3a38b8b3e649cb95c03" translate="yes" xml:space="preserve">
          <source>Masked entries are ignored, and result elements which are not finite will be masked.</source>
          <target state="translated">마스크 된 항목은 무시되며 유한하지 않은 결과 요소는 마스크됩니다.</target>
        </trans-unit>
        <trans-unit id="b67c6e592961bc4088100d1e724368d014dd740f" translate="yes" xml:space="preserve">
          <source>Masked entries are ignored.</source>
          <target state="translated">마스크 된 항목은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="a553f9a17153e944aa3ccf0663ddf7bdd834bdc5" translate="yes" xml:space="preserve">
          <source>Masked values are considered as False during computation.</source>
          <target state="translated">마스크 된 값은 계산 중에 False로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="6c8cae7fd974732de54350b0ecabf2b49f4bd07f" translate="yes" xml:space="preserve">
          <source>Masked values are not compared directly.</source>
          <target state="translated">마스크 된 값은 직접 비교되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8b7bd1ffbc4df578f27392c4f72e5f827148711a" translate="yes" xml:space="preserve">
          <source>Masked values are replaced by 0.</source>
          <target state="translated">마스크 된 값은 0으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="594673afbc6460668c76a5b5a60900b4eb69ed4e" translate="yes" xml:space="preserve">
          <source>Masked values are set to 0 internally during the computation. However, their position is saved, and the result will be masked at the same locations.</source>
          <target state="translated">마스크 된 값은 계산 중에 내부적으로 0으로 설정됩니다. 그러나 위치가 저장되고 결과가 같은 위치에 숨겨집니다.</target>
        </trans-unit>
        <trans-unit id="c62cda838d0dd89db4f7db7a848bed90b8a35029" translate="yes" xml:space="preserve">
          <source>Masked values are set to 1 internally during the computation. However, their position is saved, and the result will be masked at the same locations.</source>
          <target state="translated">마스크 된 값은 계산 중에 내부적으로 1로 설정됩니다. 그러나 위치가 저장되고 결과가 같은 위치에 숨겨집니다.</target>
        </trans-unit>
        <trans-unit id="0d54b7cdcf2aacde324dff6e5bfaee0441c90af7" translate="yes" xml:space="preserve">
          <source>Masked values in the input array result in rows of zeros.</source>
          <target state="translated">입력 배열에서 마스크 된 값은 행이 0이됩니다.</target>
        </trans-unit>
        <trans-unit id="46f85aa5a353da87d3752c17130ba68a2f9115ff" translate="yes" xml:space="preserve">
          <source>Masked values of True exclude the corresponding element from any computation.</source>
          <target state="translated">마스크 된 True 값은 해당 요소를 계산에서 제외합니다.</target>
        </trans-unit>
        <trans-unit id="e483ca2e474474c0115e70cf1df3652e7e71e77d" translate="yes" xml:space="preserve">
          <source>MaskedArray interpretation of &lt;code&gt;a&lt;/code&gt;.</source>
          <target state="translated">의 MaskedArray 해석 . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="20350351979da6675c245e446543b5c06d79da69" translate="yes" xml:space="preserve">
          <source>MaskedArray methods</source>
          <target state="translated">MaskedArray 메서드</target>
        </trans-unit>
        <trans-unit id="36eef88f9e59e296f6ba9abe6367cd57b8fabee2" translate="yes" xml:space="preserve">
          <source>MaskedArray.T</source>
          <target state="translated">MaskedArray.T</target>
        </trans-unit>
        <trans-unit id="e17190e574e1c6de156753c9b065e38a9376c85f" translate="yes" xml:space="preserve">
          <source>MaskedArray.__abs__()</source>
          <target state="translated">MaskedArray.__abs__()</target>
        </trans-unit>
        <trans-unit id="4c5beb6649fcf04681433a7ebdca9956aed5ec6d" translate="yes" xml:space="preserve">
          <source>MaskedArray.__add__()</source>
          <target state="translated">MaskedArray.__add__()</target>
        </trans-unit>
        <trans-unit id="421e10c77680329d49bb9737bb7abc28463207e4" translate="yes" xml:space="preserve">
          <source>MaskedArray.__and__()</source>
          <target state="translated">MaskedArray.__and__()</target>
        </trans-unit>
        <trans-unit id="fada5de9b74bd344d17ff17846c4bd7d09dc8ec5" translate="yes" xml:space="preserve">
          <source>MaskedArray.__array__()</source>
          <target state="translated">MaskedArray.__array__()</target>
        </trans-unit>
        <trans-unit id="090520da30f28f47ff34b0675dc4cfba52313678" translate="yes" xml:space="preserve">
          <source>MaskedArray.__array_priority__</source>
          <target state="translated">MaskedArray.__array_priority__</target>
        </trans-unit>
        <trans-unit id="3850984710cdf39034ba996313c98f23d5b2df9a" translate="yes" xml:space="preserve">
          <source>MaskedArray.__array_wrap__()</source>
          <target state="translated">MaskedArray.__array_wrap__()</target>
        </trans-unit>
        <trans-unit id="777801a9212371f85a428b465acd2c96402cbfb0" translate="yes" xml:space="preserve">
          <source>MaskedArray.__bool__()</source>
          <target state="translated">MaskedArray.__bool__()</target>
        </trans-unit>
        <trans-unit id="efb175793e0186c34683a4fcb1d1cf5491acc106" translate="yes" xml:space="preserve">
          <source>MaskedArray.__contains__()</source>
          <target state="translated">MaskedArray.__contains__()</target>
        </trans-unit>
        <trans-unit id="05bac951e4103953d43b28841001972c2c09a472" translate="yes" xml:space="preserve">
          <source>MaskedArray.__copy__()</source>
          <target state="translated">MaskedArray.__copy__()</target>
        </trans-unit>
        <trans-unit id="48e8b4072b356b5f6fb2ea3cc4a44eb836ce6d39" translate="yes" xml:space="preserve">
          <source>MaskedArray.__deepcopy__()</source>
          <target state="translated">MaskedArray.__deepcopy__()</target>
        </trans-unit>
        <trans-unit id="2e0879e5e2662c5b7bec6d8240c414de65e1878a" translate="yes" xml:space="preserve">
          <source>MaskedArray.__delitem__()</source>
          <target state="translated">MaskedArray.__delitem__()</target>
        </trans-unit>
        <trans-unit id="ab799a52b2b144674a2920b57d6fb16fd77e185f" translate="yes" xml:space="preserve">
          <source>MaskedArray.__div__()</source>
          <target state="translated">MaskedArray.__div__()</target>
        </trans-unit>
        <trans-unit id="c40d7cec7bfe9dd6ab450d46b504989d029ed2f1" translate="yes" xml:space="preserve">
          <source>MaskedArray.__divmod__()</source>
          <target state="translated">MaskedArray.__divmod__()</target>
        </trans-unit>
        <trans-unit id="31b2f1c182adb284ba514a01be32170ad7fca9d8" translate="yes" xml:space="preserve">
          <source>MaskedArray.__eq__()</source>
          <target state="translated">MaskedArray.__eq__()</target>
        </trans-unit>
        <trans-unit id="c0a1ce4250661dd853b1e06f87ab8dac408d08ad" translate="yes" xml:space="preserve">
          <source>MaskedArray.__float__()</source>
          <target state="translated">MaskedArray.__float__()</target>
        </trans-unit>
        <trans-unit id="c760fe1447ecc3aa37cfb9102932a85018b3dafc" translate="yes" xml:space="preserve">
          <source>MaskedArray.__floordiv__()</source>
          <target state="translated">MaskedArray.__floordiv__()</target>
        </trans-unit>
        <trans-unit id="ee7563ffce3b171861962dcda9493c8d6ea3ed49" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ge__()</source>
          <target state="translated">MaskedArray.__ge__()</target>
        </trans-unit>
        <trans-unit id="82fcceeb833f853fcf31878a9b2755ca3b83dad5" translate="yes" xml:space="preserve">
          <source>MaskedArray.__getitem__()</source>
          <target state="translated">MaskedArray.__getitem__()</target>
        </trans-unit>
        <trans-unit id="9ed68261ffa77dc15fd5c9bb460e16946aa3df57" translate="yes" xml:space="preserve">
          <source>MaskedArray.__getstate__()</source>
          <target state="translated">MaskedArray.__getstate__()</target>
        </trans-unit>
        <trans-unit id="5a94e729c8538503cbcb25ba506eda001f10eef6" translate="yes" xml:space="preserve">
          <source>MaskedArray.__gt__()</source>
          <target state="translated">MaskedArray.__gt__()</target>
        </trans-unit>
        <trans-unit id="5bf01a17a65fea68034c80a57ef6ea67f24bf648" translate="yes" xml:space="preserve">
          <source>MaskedArray.__iadd__()</source>
          <target state="translated">MaskedArray.__iadd__()</target>
        </trans-unit>
        <trans-unit id="3f290bfa30bdb27d86e902d735f6bd7a3ebdd997" translate="yes" xml:space="preserve">
          <source>MaskedArray.__iand__()</source>
          <target state="translated">MaskedArray.__iand__()</target>
        </trans-unit>
        <trans-unit id="a013bde0bc2086e80993b2e6453749be7566713a" translate="yes" xml:space="preserve">
          <source>MaskedArray.__idiv__()</source>
          <target state="translated">MaskedArray.__idiv__()</target>
        </trans-unit>
        <trans-unit id="6b16248d7544de200904fad546fc0e0bf49d5d30" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ifloordiv__()</source>
          <target state="translated">MaskedArray.__ifloordiv__()</target>
        </trans-unit>
        <trans-unit id="e867a020a9a28fcaaaeebcd0b9a09276f34baacb" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ilshift__()</source>
          <target state="translated">MaskedArray.__ilshift__()</target>
        </trans-unit>
        <trans-unit id="a6177a6fe00279423505c3d2049817ef902c9f89" translate="yes" xml:space="preserve">
          <source>MaskedArray.__imod__()</source>
          <target state="translated">MaskedArray.__imod__()</target>
        </trans-unit>
        <trans-unit id="b2c2e20491238cbe7365526c778bb2bbeb1a9d92" translate="yes" xml:space="preserve">
          <source>MaskedArray.__imul__()</source>
          <target state="translated">MaskedArray.__imul__()</target>
        </trans-unit>
        <trans-unit id="8a9abb4f5e69b652a91dedbea90a17391081121c" translate="yes" xml:space="preserve">
          <source>MaskedArray.__int__()</source>
          <target state="translated">MaskedArray.__int__()</target>
        </trans-unit>
        <trans-unit id="89500ad2db959507c40e092a4338242970ecf920" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ior__()</source>
          <target state="translated">MaskedArray.__ior__()</target>
        </trans-unit>
        <trans-unit id="f6e0374c35f94019edb4b446250c41ffb2f2fed6" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ipow__()</source>
          <target state="translated">MaskedArray.__ipow__()</target>
        </trans-unit>
        <trans-unit id="464e0df1d1343a8a83ded812b19b8824e3be674f" translate="yes" xml:space="preserve">
          <source>MaskedArray.__irshift__()</source>
          <target state="translated">MaskedArray.__irshift__()</target>
        </trans-unit>
        <trans-unit id="93662970a9f68651b0f13dddd859eee1c0cc852a" translate="yes" xml:space="preserve">
          <source>MaskedArray.__isub__()</source>
          <target state="translated">MaskedArray.__isub__()</target>
        </trans-unit>
        <trans-unit id="97afb01534849ce41926c144adb54602527c52de" translate="yes" xml:space="preserve">
          <source>MaskedArray.__itruediv__()</source>
          <target state="translated">MaskedArray.__itruediv__()</target>
        </trans-unit>
        <trans-unit id="e96f966e7a5dbcf51d23a0d0e3ddedabf690b6a0" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ixor__()</source>
          <target state="translated">MaskedArray.__ixor__()</target>
        </trans-unit>
        <trans-unit id="bfe0157861dd1f9b0a231126eaf62a9189b87c49" translate="yes" xml:space="preserve">
          <source>MaskedArray.__le__()</source>
          <target state="translated">MaskedArray.__le__()</target>
        </trans-unit>
        <trans-unit id="dfcf580e54d121ccd612e4d1a45624b4bf8d1bc1" translate="yes" xml:space="preserve">
          <source>MaskedArray.__len__()</source>
          <target state="translated">MaskedArray.__len__()</target>
        </trans-unit>
        <trans-unit id="7d5ce46d9782038b232fd02c47b999130a7413d8" translate="yes" xml:space="preserve">
          <source>MaskedArray.__long__()</source>
          <target state="translated">MaskedArray.__long__()</target>
        </trans-unit>
        <trans-unit id="663699b5db72d62ee50222aef2e15e6ad8befaa7" translate="yes" xml:space="preserve">
          <source>MaskedArray.__lshift__()</source>
          <target state="translated">MaskedArray.__lshift__()</target>
        </trans-unit>
        <trans-unit id="981e3ec8c47bf66b67cbcfc222695e682740ef5c" translate="yes" xml:space="preserve">
          <source>MaskedArray.__lt__()</source>
          <target state="translated">MaskedArray.__lt__()</target>
        </trans-unit>
        <trans-unit id="e012d6b8cd5b77bcbe0a7677af22fead34c5e6bc" translate="yes" xml:space="preserve">
          <source>MaskedArray.__mod__()</source>
          <target state="translated">MaskedArray.__mod__()</target>
        </trans-unit>
        <trans-unit id="621981dba1b2c2c21d05b7718ab7bc6b94dde4de" translate="yes" xml:space="preserve">
          <source>MaskedArray.__mul__()</source>
          <target state="translated">MaskedArray.__mul__()</target>
        </trans-unit>
        <trans-unit id="451a40eda1d0439b5952565ebd5be0b93178765b" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ne__()</source>
          <target state="translated">MaskedArray.__ne__()</target>
        </trans-unit>
        <trans-unit id="449fa0f7176203d64b7688836d07d289af8aaada" translate="yes" xml:space="preserve">
          <source>MaskedArray.__or__()</source>
          <target state="translated">MaskedArray.__or__()</target>
        </trans-unit>
        <trans-unit id="74a1bdc16196c2ca4cb42e9ddf2dfa11e81379c0" translate="yes" xml:space="preserve">
          <source>MaskedArray.__pow__()</source>
          <target state="translated">MaskedArray.__pow__()</target>
        </trans-unit>
        <trans-unit id="628ddbd485b2a3c762a1acfa9b1ed8ea95f6ae2a" translate="yes" xml:space="preserve">
          <source>MaskedArray.__radd__()</source>
          <target state="translated">MaskedArray.__radd__()</target>
        </trans-unit>
        <trans-unit id="e614928ac12233029fee60e611f9fd93534a1549" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rand__()</source>
          <target state="translated">MaskedArray.__rand__()</target>
        </trans-unit>
        <trans-unit id="60d56dcc3079a28858f7341d86340a9f6456c4ae" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rdivmod__()</source>
          <target state="translated">MaskedArray.__rdivmod__()</target>
        </trans-unit>
        <trans-unit id="58cfbddeeee8f3d20b2cb0a7c8e4b95d69260328" translate="yes" xml:space="preserve">
          <source>MaskedArray.__reduce__()</source>
          <target state="translated">MaskedArray.__reduce__()</target>
        </trans-unit>
        <trans-unit id="22bff568add5c50c81a9b76411f74a0165340bc3" translate="yes" xml:space="preserve">
          <source>MaskedArray.__repr__()</source>
          <target state="translated">MaskedArray.__repr__()</target>
        </trans-unit>
        <trans-unit id="37da21dfefb5612acac5c5b158edd891d71eaa33" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rfloordiv__()</source>
          <target state="translated">MaskedArray.__rfloordiv__()</target>
        </trans-unit>
        <trans-unit id="ba081ab522355f8c737fc96eeefb42e5ff706d35" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rlshift__()</source>
          <target state="translated">MaskedArray.__rlshift__()</target>
        </trans-unit>
        <trans-unit id="556c4be401c91f224ede894f1fd54e9f20d1b10a" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rmod__()</source>
          <target state="translated">MaskedArray.__rmod__()</target>
        </trans-unit>
        <trans-unit id="d258f963823807ebafdac4bd7b4899a4ad5b3d81" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rmul__()</source>
          <target state="translated">MaskedArray.__rmul__()</target>
        </trans-unit>
        <trans-unit id="6c3504184a32bdc300bf50151f75a50cfb6319e8" translate="yes" xml:space="preserve">
          <source>MaskedArray.__ror__()</source>
          <target state="translated">MaskedArray.__ror__()</target>
        </trans-unit>
        <trans-unit id="b16d994e6cc6bacd92021c5be6a1f21c448c82be" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rpow__()</source>
          <target state="translated">MaskedArray.__rpow__()</target>
        </trans-unit>
        <trans-unit id="c263bb6b6626def1b808e0fb37da7db4a0ebdd03" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rrshift__()</source>
          <target state="translated">MaskedArray.__rrshift__()</target>
        </trans-unit>
        <trans-unit id="2024b9cd2546c77971dd14447cc764030b99e828" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rshift__()</source>
          <target state="translated">MaskedArray.__rshift__()</target>
        </trans-unit>
        <trans-unit id="9b18fd997fad99869943ae5ae86581115d42c76a" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rsub__()</source>
          <target state="translated">MaskedArray.__rsub__()</target>
        </trans-unit>
        <trans-unit id="1f99227921386926b66e1c80505362e37c730585" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rtruediv__()</source>
          <target state="translated">MaskedArray.__rtruediv__()</target>
        </trans-unit>
        <trans-unit id="f78ffc8f65b81494cb55cee0002a4b0ada2f7ea9" translate="yes" xml:space="preserve">
          <source>MaskedArray.__rxor__()</source>
          <target state="translated">MaskedArray.__rxor__()</target>
        </trans-unit>
        <trans-unit id="e2418f087c527a32587d4136ae5e11918bd6852f" translate="yes" xml:space="preserve">
          <source>MaskedArray.__setitem__()</source>
          <target state="translated">MaskedArray.__setitem__()</target>
        </trans-unit>
        <trans-unit id="fd4da74423f8b70de86f76a2c1393f4543b02dca" translate="yes" xml:space="preserve">
          <source>MaskedArray.__setmask__()</source>
          <target state="translated">MaskedArray.__setmask__()</target>
        </trans-unit>
        <trans-unit id="3f08573f36e15c86d5119deeed078db9cf2f9c35" translate="yes" xml:space="preserve">
          <source>MaskedArray.__setstate__()</source>
          <target state="translated">MaskedArray.__setstate__()</target>
        </trans-unit>
        <trans-unit id="bf1a7de4e02395cb1d82eb3102a1b212087fb9cc" translate="yes" xml:space="preserve">
          <source>MaskedArray.__str__()</source>
          <target state="translated">MaskedArray.__str__()</target>
        </trans-unit>
        <trans-unit id="36b295d86fb340a017c207e36c8ebf83a6e16a78" translate="yes" xml:space="preserve">
          <source>MaskedArray.__sub__()</source>
          <target state="translated">MaskedArray.__sub__()</target>
        </trans-unit>
        <trans-unit id="a89d7e18e21d53f656570951adaedf72a5d05f92" translate="yes" xml:space="preserve">
          <source>MaskedArray.__truediv__()</source>
          <target state="translated">MaskedArray.__truediv__()</target>
        </trans-unit>
        <trans-unit id="a9754cec53ed0199a3d0e11dd63f20ddf46718a9" translate="yes" xml:space="preserve">
          <source>MaskedArray.__xor__()</source>
          <target state="translated">MaskedArray.__xor__()</target>
        </trans-unit>
        <trans-unit id="e5c6d58a06d7326fe5c3b8675bf582f779908979" translate="yes" xml:space="preserve">
          <source>MaskedArray.all()</source>
          <target state="translated">MaskedArray.all()</target>
        </trans-unit>
        <trans-unit id="8e1c2703f802467d9be6b41fd4750421b30e4e78" translate="yes" xml:space="preserve">
          <source>MaskedArray.anom()</source>
          <target state="translated">MaskedArray.anom()</target>
        </trans-unit>
        <trans-unit id="ceaaae3b924788c52bbc3430b2ea479db323a8fa" translate="yes" xml:space="preserve">
          <source>MaskedArray.any()</source>
          <target state="translated">MaskedArray.any()</target>
        </trans-unit>
        <trans-unit id="b63e7e734845f2e2d00786798d483b6f14625034" translate="yes" xml:space="preserve">
          <source>MaskedArray.argmax()</source>
          <target state="translated">MaskedArray.argmax()</target>
        </trans-unit>
        <trans-unit id="1d5ecf97f71ab691cf38b6c6ce5d2340f025638f" translate="yes" xml:space="preserve">
          <source>MaskedArray.argmin()</source>
          <target state="translated">MaskedArray.argmin()</target>
        </trans-unit>
        <trans-unit id="5f36204da3705060bd71f1d51d51b88f55d27d4b" translate="yes" xml:space="preserve">
          <source>MaskedArray.argsort()</source>
          <target state="translated">MaskedArray.argsort()</target>
        </trans-unit>
        <trans-unit id="553ea17b1dc12eebdf6169924b18d2d2f67e5e36" translate="yes" xml:space="preserve">
          <source>MaskedArray.astype()</source>
          <target state="translated">MaskedArray.astype()</target>
        </trans-unit>
        <trans-unit id="8b903ed2f76d12382ddb4618a18e0d58c21ed045" translate="yes" xml:space="preserve">
          <source>MaskedArray.base</source>
          <target state="translated">MaskedArray.base</target>
        </trans-unit>
        <trans-unit id="a41536928c95f5bbcde8ddd69d27b894c4f41213" translate="yes" xml:space="preserve">
          <source>MaskedArray.baseclass</source>
          <target state="translated">MaskedArray.baseclass</target>
        </trans-unit>
        <trans-unit id="e9f76b44c9ca3946a8973c001ef5105ca5c0a87a" translate="yes" xml:space="preserve">
          <source>MaskedArray.byteswap()</source>
          <target state="translated">MaskedArray.byteswap()</target>
        </trans-unit>
        <trans-unit id="6d6d5940ea9cd2aa53d30efb8451b5d30eb2cde7" translate="yes" xml:space="preserve">
          <source>MaskedArray.choose()</source>
          <target state="translated">MaskedArray.choose()</target>
        </trans-unit>
        <trans-unit id="15f1f394124b62be99d1e91448f88c1ef69b9f14" translate="yes" xml:space="preserve">
          <source>MaskedArray.clip()</source>
          <target state="translated">MaskedArray.clip()</target>
        </trans-unit>
        <trans-unit id="cf476639b180537cbfa338fde8bb6d05c515b926" translate="yes" xml:space="preserve">
          <source>MaskedArray.compress()</source>
          <target state="translated">MaskedArray.compress()</target>
        </trans-unit>
        <trans-unit id="2ee7894999c452973a3887d5a0c1ffb1b8b3389f" translate="yes" xml:space="preserve">
          <source>MaskedArray.compressed()</source>
          <target state="translated">MaskedArray.compressed()</target>
        </trans-unit>
        <trans-unit id="35832e57568e0633c816ac034fbb4ab85736d2c2" translate="yes" xml:space="preserve">
          <source>MaskedArray.conj()</source>
          <target state="translated">MaskedArray.conj()</target>
        </trans-unit>
        <trans-unit id="8161480b13b89c370614b9b7777fdfda08ce6c7d" translate="yes" xml:space="preserve">
          <source>MaskedArray.conjugate()</source>
          <target state="translated">MaskedArray.conjugate()</target>
        </trans-unit>
        <trans-unit id="cb7ea380c906751da3d908d0bc4c7d88be3c4655" translate="yes" xml:space="preserve">
          <source>MaskedArray.copy()</source>
          <target state="translated">MaskedArray.copy()</target>
        </trans-unit>
        <trans-unit id="eac1ac7efd8d1836918e8e816c3820b3155826b4" translate="yes" xml:space="preserve">
          <source>MaskedArray.count()</source>
          <target state="translated">MaskedArray.count()</target>
        </trans-unit>
        <trans-unit id="3144614ff73f87e362e1bacfaafb61802dea0782" translate="yes" xml:space="preserve">
          <source>MaskedArray.ctypes</source>
          <target state="translated">MaskedArray.ctypes</target>
        </trans-unit>
        <trans-unit id="d22189d1da9868a7c7aedc78be065098ff0416a8" translate="yes" xml:space="preserve">
          <source>MaskedArray.cumprod()</source>
          <target state="translated">MaskedArray.cumprod()</target>
        </trans-unit>
        <trans-unit id="5323344bfd65c29d84a1c64f8e69c1669e31d747" translate="yes" xml:space="preserve">
          <source>MaskedArray.cumsum()</source>
          <target state="translated">MaskedArray.cumsum()</target>
        </trans-unit>
        <trans-unit id="1b54195e4a96c4925d78934db276897c666ad669" translate="yes" xml:space="preserve">
          <source>MaskedArray.diagonal()</source>
          <target state="translated">MaskedArray.diagonal()</target>
        </trans-unit>
        <trans-unit id="4e8d0af404b08c3a3152d122be74acd3793116ba" translate="yes" xml:space="preserve">
          <source>MaskedArray.dtype</source>
          <target state="translated">MaskedArray.dtype</target>
        </trans-unit>
        <trans-unit id="88627982cc7c9adcc1bb4a9df2f00ba018e75677" translate="yes" xml:space="preserve">
          <source>MaskedArray.dump()</source>
          <target state="translated">MaskedArray.dump()</target>
        </trans-unit>
        <trans-unit id="c23b1641ee5386a065ac10728a6cce4884c7f67c" translate="yes" xml:space="preserve">
          <source>MaskedArray.dumps()</source>
          <target state="translated">MaskedArray.dumps()</target>
        </trans-unit>
        <trans-unit id="7fbcbdc6bf48542a304589331c558cf1018351f9" translate="yes" xml:space="preserve">
          <source>MaskedArray.fill()</source>
          <target state="translated">MaskedArray.fill()</target>
        </trans-unit>
        <trans-unit id="09ddd16dd4582a56c01d30b2628ebe76693f330b" translate="yes" xml:space="preserve">
          <source>MaskedArray.fill_value</source>
          <target state="translated">MaskedArray.fill_value</target>
        </trans-unit>
        <trans-unit id="e1deb1c4efd17c8372828e46fb5b407cc4b2e560" translate="yes" xml:space="preserve">
          <source>MaskedArray.filled()</source>
          <target state="translated">MaskedArray.filled()</target>
        </trans-unit>
        <trans-unit id="eb23b7e1f28825cf3159c8d72cf7cf6cbb51dd50" translate="yes" xml:space="preserve">
          <source>MaskedArray.flags</source>
          <target state="translated">MaskedArray.flags</target>
        </trans-unit>
        <trans-unit id="bf6011a45fdc5bf282b9d2ac9e76b5bf0e1f7c3c" translate="yes" xml:space="preserve">
          <source>MaskedArray.flat</source>
          <target state="translated">MaskedArray.flat</target>
        </trans-unit>
        <trans-unit id="33a07dd74f9702dedccdd5f96fc5fd2279f599e7" translate="yes" xml:space="preserve">
          <source>MaskedArray.flatten()</source>
          <target state="translated">MaskedArray.flatten()</target>
        </trans-unit>
        <trans-unit id="4be2c990604cbc6d1aaaddaf107bba8d516117ba" translate="yes" xml:space="preserve">
          <source>MaskedArray.get_fill_value()</source>
          <target state="translated">MaskedArray.get_fill_value()</target>
        </trans-unit>
        <trans-unit id="928bdb3c7088feb611a13b7ed937bda6d3220a9f" translate="yes" xml:space="preserve">
          <source>MaskedArray.harden_mask()</source>
          <target state="translated">MaskedArray.harden_mask()</target>
        </trans-unit>
        <trans-unit id="5776b1ede267a30ef16553c04ba5ccdb9eeff035" translate="yes" xml:space="preserve">
          <source>MaskedArray.hardmask</source>
          <target state="translated">MaskedArray.hardmask</target>
        </trans-unit>
        <trans-unit id="668ec5b189835b07e81e62fe1b71655e19e0507d" translate="yes" xml:space="preserve">
          <source>MaskedArray.ids()</source>
          <target state="translated">MaskedArray.ids()</target>
        </trans-unit>
        <trans-unit id="53e1ece9ef7129ef016e75a408bef90f4ad7d6ec" translate="yes" xml:space="preserve">
          <source>MaskedArray.imag</source>
          <target state="translated">MaskedArray.imag</target>
        </trans-unit>
        <trans-unit id="de5139068e5b47613ceaace681bfe53e63d1f61b" translate="yes" xml:space="preserve">
          <source>MaskedArray.iscontiguous()</source>
          <target state="translated">MaskedArray.iscontiguous()</target>
        </trans-unit>
        <trans-unit id="0e176d5d52767b30c459a6e7b13d20b466bf1d48" translate="yes" xml:space="preserve">
          <source>MaskedArray.item()</source>
          <target state="translated">MaskedArray.item()</target>
        </trans-unit>
        <trans-unit id="cfba9a15335c8528880cc19c17d0e647a32068f6" translate="yes" xml:space="preserve">
          <source>MaskedArray.itemsize</source>
          <target state="translated">MaskedArray.itemsize</target>
        </trans-unit>
        <trans-unit id="04fdc3f52df94b1c56e45fc9a1c659f3dce4bb06" translate="yes" xml:space="preserve">
          <source>MaskedArray.mask</source>
          <target state="translated">MaskedArray.mask</target>
        </trans-unit>
        <trans-unit id="f7920c6fc70c30e09826d1b4db0853ba739f0c58" translate="yes" xml:space="preserve">
          <source>MaskedArray.max()</source>
          <target state="translated">MaskedArray.max()</target>
        </trans-unit>
        <trans-unit id="84aef084adaa9295fd7004b2e6df5ba7218f7649" translate="yes" xml:space="preserve">
          <source>MaskedArray.mean()</source>
          <target state="translated">MaskedArray.mean()</target>
        </trans-unit>
        <trans-unit id="e62b69c6c1fbdc0c92dd5be409d3ff75463d7b92" translate="yes" xml:space="preserve">
          <source>MaskedArray.min()</source>
          <target state="translated">MaskedArray.min()</target>
        </trans-unit>
        <trans-unit id="9d50a4ea8c39e75b51c56fc27766681c03605f9d" translate="yes" xml:space="preserve">
          <source>MaskedArray.nbytes</source>
          <target state="translated">MaskedArray.nbytes</target>
        </trans-unit>
        <trans-unit id="d961e99d89d50c2a542202334c0207facc5249e3" translate="yes" xml:space="preserve">
          <source>MaskedArray.ndim</source>
          <target state="translated">MaskedArray.ndim</target>
        </trans-unit>
        <trans-unit id="4633254dc56bab337b80fc955927d8309b0ed52f" translate="yes" xml:space="preserve">
          <source>MaskedArray.nonzero()</source>
          <target state="translated">MaskedArray.nonzero()</target>
        </trans-unit>
        <trans-unit id="54bb93776bf2142f0aa0a828fc6e756123625c29" translate="yes" xml:space="preserve">
          <source>MaskedArray.prod()</source>
          <target state="translated">MaskedArray.prod()</target>
        </trans-unit>
        <trans-unit id="99cae07f34822d1dd041989028d8ee89cccd5389" translate="yes" xml:space="preserve">
          <source>MaskedArray.product()</source>
          <target state="translated">MaskedArray.product()</target>
        </trans-unit>
        <trans-unit id="2e7dc82587dbf756ef0595225d7b1d599cc87ce9" translate="yes" xml:space="preserve">
          <source>MaskedArray.ptp()</source>
          <target state="translated">MaskedArray.ptp()</target>
        </trans-unit>
        <trans-unit id="62a23add4cab019a98b922506c67216415f559e6" translate="yes" xml:space="preserve">
          <source>MaskedArray.put()</source>
          <target state="translated">MaskedArray.put()</target>
        </trans-unit>
        <trans-unit id="3f6efa7f32913b6da0be6764da3a9e63b134cec7" translate="yes" xml:space="preserve">
          <source>MaskedArray.ravel()</source>
          <target state="translated">MaskedArray.ravel()</target>
        </trans-unit>
        <trans-unit id="c4effceac6d7be9d7ab7d937a9db7f7953fa9e79" translate="yes" xml:space="preserve">
          <source>MaskedArray.real</source>
          <target state="translated">MaskedArray.real</target>
        </trans-unit>
        <trans-unit id="7326a995559827a69ede462348e23f83e42d93a6" translate="yes" xml:space="preserve">
          <source>MaskedArray.recordmask</source>
          <target state="translated">MaskedArray.recordmask</target>
        </trans-unit>
        <trans-unit id="267909c329e4c4b017551dc7517cc359a683518c" translate="yes" xml:space="preserve">
          <source>MaskedArray.repeat()</source>
          <target state="translated">MaskedArray.repeat()</target>
        </trans-unit>
        <trans-unit id="a94977c091d0244a0f27092e41c24dcdde9bf364" translate="yes" xml:space="preserve">
          <source>MaskedArray.reshape()</source>
          <target state="translated">MaskedArray.reshape()</target>
        </trans-unit>
        <trans-unit id="cbda91fe973c5af4d1846b187c12f7c07e3d89b5" translate="yes" xml:space="preserve">
          <source>MaskedArray.resize()</source>
          <target state="translated">MaskedArray.resize()</target>
        </trans-unit>
        <trans-unit id="f1abf4fda3fba4d3ce13f3d5cf8da8c643afeed1" translate="yes" xml:space="preserve">
          <source>MaskedArray.round()</source>
          <target state="translated">MaskedArray.round()</target>
        </trans-unit>
        <trans-unit id="2895bb54b7a42e82d551bd6bbf427486346a72fd" translate="yes" xml:space="preserve">
          <source>MaskedArray.searchsorted()</source>
          <target state="translated">MaskedArray.searchsorted()</target>
        </trans-unit>
        <trans-unit id="a055b62e486436524db64f93e8dfc6ce3b327aec" translate="yes" xml:space="preserve">
          <source>MaskedArray.set_fill_value()</source>
          <target state="translated">MaskedArray.set_fill_value()</target>
        </trans-unit>
        <trans-unit id="31782d715c88bcd8daea7ea4af3dfcca778bc8fb" translate="yes" xml:space="preserve">
          <source>MaskedArray.shape</source>
          <target state="translated">MaskedArray.shape</target>
        </trans-unit>
        <trans-unit id="172bb2adad3b1105f040ef0c9a0d2e13374f0f8e" translate="yes" xml:space="preserve">
          <source>MaskedArray.sharedmask</source>
          <target state="translated">MaskedArray.sharedmask</target>
        </trans-unit>
        <trans-unit id="42fa7b56c2ec36f7a2ce85354d7df622368c5b81" translate="yes" xml:space="preserve">
          <source>MaskedArray.shrink_mask()</source>
          <target state="translated">MaskedArray.shrink_mask()</target>
        </trans-unit>
        <trans-unit id="1391bd094b99dc658b9bc0b597891b86fe8ac123" translate="yes" xml:space="preserve">
          <source>MaskedArray.size</source>
          <target state="translated">MaskedArray.size</target>
        </trans-unit>
        <trans-unit id="3e9f77bc727602c7f06ec08f0e0833f8045ca3ce" translate="yes" xml:space="preserve">
          <source>MaskedArray.soften_mask()</source>
          <target state="translated">MaskedArray.soften_mask()</target>
        </trans-unit>
        <trans-unit id="2571e1acb7d9d777b4ec5146329c893d5becacf5" translate="yes" xml:space="preserve">
          <source>MaskedArray.sort()</source>
          <target state="translated">MaskedArray.sort()</target>
        </trans-unit>
        <trans-unit id="7d7f8f1e563fdcf47b4158ec9e719af4e62f25a5" translate="yes" xml:space="preserve">
          <source>MaskedArray.squeeze()</source>
          <target state="translated">MaskedArray.squeeze()</target>
        </trans-unit>
        <trans-unit id="aea8c3834e6535e96618bcf0b7d60c8e60ab0fa7" translate="yes" xml:space="preserve">
          <source>MaskedArray.std()</source>
          <target state="translated">MaskedArray.std()</target>
        </trans-unit>
        <trans-unit id="c3efd00e4ff0921ced2fdd2986e21ca60d6c0b60" translate="yes" xml:space="preserve">
          <source>MaskedArray.strides</source>
          <target state="translated">MaskedArray.strides</target>
        </trans-unit>
        <trans-unit id="0b63a55c529457179aabd0f78400c7c33bfbaa7a" translate="yes" xml:space="preserve">
          <source>MaskedArray.sum()</source>
          <target state="translated">MaskedArray.sum()</target>
        </trans-unit>
        <trans-unit id="dd19aac1ecec927ddad154727c08f83ca8578d79" translate="yes" xml:space="preserve">
          <source>MaskedArray.swapaxes()</source>
          <target state="translated">MaskedArray.swapaxes()</target>
        </trans-unit>
        <trans-unit id="b52a30451c462e14e36823697aa308554aa7fad1" translate="yes" xml:space="preserve">
          <source>MaskedArray.take()</source>
          <target state="translated">MaskedArray.take()</target>
        </trans-unit>
        <trans-unit id="b3c5f3666f109883066c2156500193c3ad4ea580" translate="yes" xml:space="preserve">
          <source>MaskedArray.tobytes()</source>
          <target state="translated">MaskedArray.tobytes()</target>
        </trans-unit>
        <trans-unit id="b73a7f5b23f879fac97ae6f917b3886157a29306" translate="yes" xml:space="preserve">
          <source>MaskedArray.tofile()</source>
          <target state="translated">MaskedArray.tofile()</target>
        </trans-unit>
        <trans-unit id="f187971871a325f15b94fad80ebc2b2b0db2cbfb" translate="yes" xml:space="preserve">
          <source>MaskedArray.toflex()</source>
          <target state="translated">MaskedArray.toflex()</target>
        </trans-unit>
        <trans-unit id="7d0dfcc5b0a713e57ed58e89559617d27b529e95" translate="yes" xml:space="preserve">
          <source>MaskedArray.tolist()</source>
          <target state="translated">MaskedArray.tolist()</target>
        </trans-unit>
        <trans-unit id="5ec3a56e7fb1946bb4c7cc194f8bc3202eb68474" translate="yes" xml:space="preserve">
          <source>MaskedArray.torecords()</source>
          <target state="translated">MaskedArray.torecords()</target>
        </trans-unit>
        <trans-unit id="f8092ae3dee10c77a715b4324e29f9011ae8d44f" translate="yes" xml:space="preserve">
          <source>MaskedArray.tostring()</source>
          <target state="translated">MaskedArray.tostring()</target>
        </trans-unit>
        <trans-unit id="2c5e50518d438a035f54e2c053b853f347501ed6" translate="yes" xml:space="preserve">
          <source>MaskedArray.trace()</source>
          <target state="translated">MaskedArray.trace()</target>
        </trans-unit>
        <trans-unit id="8026a479aff94481ee480cb7aa37c1ee94f8f1e7" translate="yes" xml:space="preserve">
          <source>MaskedArray.transpose()</source>
          <target state="translated">MaskedArray.transpose()</target>
        </trans-unit>
        <trans-unit id="6e03e18e2a096eb3a22fa2cf5f4256ef7024dab0" translate="yes" xml:space="preserve">
          <source>MaskedArray.unshare_mask()</source>
          <target state="translated">MaskedArray.unshare_mask()</target>
        </trans-unit>
        <trans-unit id="b556a190400c66097d79e2b72687a5a08af7fec4" translate="yes" xml:space="preserve">
          <source>MaskedArray.var()</source>
          <target state="translated">MaskedArray.var()</target>
        </trans-unit>
        <trans-unit id="c5f3a708208150cae733763b773c9177d7b2ab71" translate="yes" xml:space="preserve">
          <source>MaskedArray.view()</source>
          <target state="translated">MaskedArray.view()</target>
        </trans-unit>
        <trans-unit id="c35712362d09d1fde6ef51380a1116ff20f33e04" translate="yes" xml:space="preserve">
          <source>Masking an entry</source>
          <target state="translated">항목 마스킹</target>
        </trans-unit>
        <trans-unit id="c49fce08321becc4e560fc4e6283b6aee1f9d826" translate="yes" xml:space="preserve">
          <source>Masking condition. When &lt;code&gt;condition&lt;/code&gt; tests floating point values for equality, consider using &lt;code&gt;masked_values&lt;/code&gt; instead.</source>
          <target state="translated">마스킹 조건. &lt;code&gt;condition&lt;/code&gt; 부동 소수점 값이 &lt;code&gt;masked_values&lt;/code&gt; 테스트 할 때는 대신 masked_values를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1649bfe9af58749e1526df511ef4aba3c9d3b175" translate="yes" xml:space="preserve">
          <source>Masking value.</source>
          <target state="translated">마스킹 가치.</target>
        </trans-unit>
        <trans-unit id="370101c55e76bb32e62a76c0f757b67a5a083820" translate="yes" xml:space="preserve">
          <source>Math operations</source>
          <target state="translated">수학 연산</target>
        </trans-unit>
        <trans-unit id="8edc9ac7baa876487a18001d1e0613039a5fb80e" translate="yes" xml:space="preserve">
          <source>Mathematical functions</source>
          <target state="translated">수학 함수</target>
        </trans-unit>
        <trans-unit id="a2411671b4e30b66c4de3508c28669a0a99ca993" translate="yes" xml:space="preserve">
          <source>Mathematical functions with automatic domain (&lt;code&gt;numpy.emath&lt;/code&gt;)</source>
          <target state="translated">자동 도메인을 사용한 수학 함수 ( &lt;code&gt;numpy.emath&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="9d9b3dbd8a223e0bba1f3266afe5f1e501d861c7" translate="yes" xml:space="preserve">
          <source>Mathematical functions with automatic domain (numpy.emath)</source>
          <target state="translated">자동 도메인을 사용한 수학 함수 (numpy.emath)</target>
        </trans-unit>
        <trans-unit id="9c606acb2ce0339f738ed3784d4aa65cd89266e6" translate="yes" xml:space="preserve">
          <source>Matlab&amp;rsquo;s &amp;ldquo;square bracket stacking&amp;rdquo;, &lt;code&gt;[A, B, ...; p, q, ...]&lt;/code&gt;, is equivalent to &lt;code&gt;np.block([[A, B, ...], [p, q, ...]])&lt;/code&gt;.</source>
          <target state="translated">Matlab의 &quot;대괄호 스태킹&quot;, &lt;code&gt;[A, B, ...; p, q, ...]&lt;/code&gt; 은 &lt;code&gt;np.block([[A, B, ...], [p, q, ...]])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3041fb1a9552bc68cf9d768c9ca41302e19b08ee" translate="yes" xml:space="preserve">
          <source>Matrices for which the eigenvalues and right eigenvectors will be computed</source>
          <target state="translated">고유 값과 올바른 고유 벡터가 계산되는 행렬</target>
        </trans-unit>
        <trans-unit id="bd71c67a3b83eb62de12972765eea9308c3b483b" translate="yes" xml:space="preserve">
          <source>Matrices have special attributes which make calculations easier. These are</source>
          <target state="translated">행렬에는 계산을 쉽게 해주는 특별한 속성이 있습니다. 이것들은</target>
        </trans-unit>
        <trans-unit id="bcd75d9e13488f4540b60e5c631a7f37e4815042" translate="yes" xml:space="preserve">
          <source>Matrix Multiplication:</source>
          <target state="translated">행렬 곱셈 :</target>
        </trans-unit>
        <trans-unit id="1c3a96f8aba8970d9d6caf64351791564bceb887" translate="yes" xml:space="preserve">
          <source>Matrix and vector products</source>
          <target state="translated">매트릭스 및 벡터 제품</target>
        </trans-unit>
        <trans-unit id="5e18783ea85014d84417a3fa00821d04caeba753" translate="yes" xml:space="preserve">
          <source>Matrix eigenvalues</source>
          <target state="translated">행렬 고유 값</target>
        </trans-unit>
        <trans-unit id="40c589f9f4a5b151749136504a38d2d5530d342f" translate="yes" xml:space="preserve">
          <source>Matrix library</source>
          <target state="translated">매트릭스 라이브러리</target>
        </trans-unit>
        <trans-unit id="8b55a6a8a5389ef7ea9f564856c667b255967c7c" translate="yes" xml:space="preserve">
          <source>Matrix library (&lt;code&gt;numpy.matlib&lt;/code&gt;)</source>
          <target state="translated">매트릭스 라이브러리 ( &lt;code&gt;numpy.matlib&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="429cbbce0f3fceab49855d88d16b0551e9e94f6f" translate="yes" xml:space="preserve">
          <source>Matrix library (numpy.matlib)</source>
          <target state="translated">매트릭스 라이브러리 (numpy.matlib)</target>
        </trans-unit>
        <trans-unit id="7534ae125b6c73fbdfeb028dda63ff770c999c03" translate="yes" xml:space="preserve">
          <source>Matrix multiplication and dot product, &lt;a href=&quot;numpy.matmul#numpy.matmul&quot;&gt;&lt;code&gt;numpy.matmul&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;numpy.dot#numpy.dot&quot;&gt;&lt;code&gt;numpy.dot&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">행렬의 곱셈과 내적, &lt;a href=&quot;numpy.matmul#numpy.matmul&quot;&gt; &lt;code&gt;numpy.matmul&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;numpy.dot#numpy.dot&quot;&gt; &lt;code&gt;numpy.dot&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f772fbaf62a2ba86c269a549f33d02c5640227c" translate="yes" xml:space="preserve">
          <source>Matrix objects</source>
          <target state="translated">매트릭스 객체</target>
        </trans-unit>
        <trans-unit id="1239733584e290e3f1b657d90ad11c24f7e3aa1c" translate="yes" xml:space="preserve">
          <source>Matrix objects are always two-dimensional. This has far-reaching implications, in that m.ravel() is still two-dimensional (with a 1 in the first dimension) and item selection returns two-dimensional objects so that sequence behavior is fundamentally different than arrays.</source>
          <target state="translated">매트릭스 객체는 항상 2 차원입니다. 이것은 m.ravel ()이 여전히 2 차원 (1 차원에 1을 가짐)이고 항목 선택이 2 차원 객체를 반환하므로 시퀀스 동작이 배열과 근본적으로 다르다는 점에서 광범위한 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="b1258e279551dcc0c0a1d9f474a5e8fa1eb6a3e9" translate="yes" xml:space="preserve">
          <source>Matrix objects can be created using a string notation to allow Matlab-style syntax where spaces separate columns and semicolons (&amp;lsquo;;&amp;rsquo;) separate rows.</source>
          <target state="translated">공백으로 구분 된 열과 세미콜론 ( ';')으로 구분되는 Matlab 스타일 구문을 허용하기 위해 문자열 표기법을 사용하여 행렬 객체를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0659424b6f6e6ba9c750d2d8f06b93eb8a45444" translate="yes" xml:space="preserve">
          <source>Matrix objects over-ride multiplication to be matrix-multiplication. &lt;strong&gt;Make sure you understand this for functions that you may want to receive matrices. Especially in light of the fact that asanyarray(m) returns a matrix when m is a matrix.&lt;/strong&gt;</source>
          <target state="translated">행렬 객체는 곱셈을 재정 의하여 곱셈을 재정의합니다. &lt;strong&gt;행렬을 받고자하는 함수에 대해서는이 점을 이해해야합니다. 특히 asanyarray (m)은 m이 행렬 일 때 행렬을 반환한다는 사실에 비추어 말입니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6a78dfd0bffc4abcfc8dc1f8a8a98299d812ea14" translate="yes" xml:space="preserve">
          <source>Matrix objects over-ride multiplication, &amp;lsquo;*&amp;rsquo;, and power, &amp;lsquo;**&amp;rsquo;, to be matrix-multiplication and matrix power, respectively. If your subroutine can accept sub-classes and you do not convert to base- class arrays, then you must use the ufuncs multiply and power to be sure that you are performing the correct operation for all inputs.</source>
          <target state="translated">행렬 객체는 곱셈 '*'와 거듭 제곱 '**'을 각각 행렬 곱셈과 행렬 거듭 제곱보다 우선합니다. 서브 루틴이 서브 클래스를 승인 할 수 있고 기본 클래스 배열로 변환하지 않는 경우 ufuncs 곱셈 및 검정력을 사용하여 모든 입력에 대해 올바른 조작을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="4d230609d3a6dfa3ab2b48e0b4e688cf8615e043" translate="yes" xml:space="preserve">
          <source>Matrix objects over-ride power to be matrix raised to a power. The same warning about using power inside a function that uses asanyarray(&amp;hellip;) to get an array object holds for this fact.</source>
          <target state="translated">행렬 객체는 행렬로 거듭 제곱되도록 전력을 무시합니다. asanyarray (&amp;hellip;)를 사용하여 배열 객체를 얻는 함수 내에서 power를 사용하는 것과 동일한 경고 가이 사실을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="7e58eeff901c3e787a5323e02d9f0b643f9dfd7f" translate="yes" xml:space="preserve">
          <source>Matrix of ones of given shape, dtype, and order.</source>
          <target state="translated">주어진 모양, dtype 및 순서의 행렬.</target>
        </trans-unit>
        <trans-unit id="a67134d0dce9346181b20853a7a58547f1d92b46" translate="yes" xml:space="preserve">
          <source>Matrix of ones.</source>
          <target state="translated">그것들의 행렬.</target>
        </trans-unit>
        <trans-unit id="7eb8b5b4dc4efa5e2c91b73b66b0be4240f9b0e0" translate="yes" xml:space="preserve">
          <source>Matrix operators &lt;code&gt;@&lt;/code&gt; and &lt;code&gt;@=&lt;/code&gt; were introduced in Python 3.5 following PEP465. NumPy 1.10.0 has a preliminary implementation of &lt;code&gt;@&lt;/code&gt; for testing purposes. Further documentation can be found in the &lt;a href=&quot;generated/numpy.matmul#numpy.matmul&quot;&gt;&lt;code&gt;matmul&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="translated">행렬 연산자 &lt;code&gt;@&lt;/code&gt; 및 &lt;code&gt;@=&lt;/code&gt; 는 PEP465에 이어 Python 3.5에 도입되었습니다. NumPy 1.10.0에는 테스트 목적으로 &lt;code&gt;@&lt;/code&gt; 의 예비 구현이 있습니다. 추가 문서는 &lt;a href=&quot;generated/numpy.matmul#numpy.matmul&quot;&gt; &lt;code&gt;matmul&lt;/code&gt; &lt;/a&gt; 문서 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="025aa631aa3f7a37fa0212eecb3bfd7f6d680982" translate="yes" xml:space="preserve">
          <source>Matrix or stack of matrices to be pseudo-inverted.</source>
          <target state="translated">의사 역전 될 행렬 또는 행렬의 스택.</target>
        </trans-unit>
        <trans-unit id="d802170b72cd5e4ecc742ea9861e066f1bca4f62" translate="yes" xml:space="preserve">
          <source>Matrix or vector norm.</source>
          <target state="translated">행렬 또는 벡터 규범.</target>
        </trans-unit>
        <trans-unit id="aab9fc5f608bc90f75464347e5d57824b70c522d" translate="yes" xml:space="preserve">
          <source>Matrix product of two arrays.</source>
          <target state="translated">두 배열의 행렬 곱.</target>
        </trans-unit>
        <trans-unit id="f0cc4d7cb8b9330c48229ac370190f421a972745" translate="yes" xml:space="preserve">
          <source>Matrix to be &amp;ldquo;powered&amp;rdquo;.</source>
          <target state="translated">&quot;전원이 공급되는&quot;매트릭스.</target>
        </trans-unit>
        <trans-unit id="882e4155da73104b466babc5f460e0df7d90c7e1" translate="yes" xml:space="preserve">
          <source>Matrix to be factored.</source>
          <target state="translated">인수 분해 할 행렬.</target>
        </trans-unit>
        <trans-unit id="73e056b434063ebe9da3e6c2cb5602ee3dca1475" translate="yes" xml:space="preserve">
          <source>Matrix to be inverted.</source>
          <target state="translated">거꾸로 될 행렬.</target>
        </trans-unit>
        <trans-unit id="cb67cd252bd81e4941e754f44eb78480817d31c7" translate="yes" xml:space="preserve">
          <source>Matrix vector multiplication:</source>
          <target state="translated">행렬 벡터 곱셈 :</target>
        </trans-unit>
        <trans-unit id="2523a7c271ebabcb6c4841289ddc8a8f4279f903" translate="yes" xml:space="preserve">
          <source>Max and min values for integers</source>
          <target state="translated">정수의 최대 값과 최소값</target>
        </trans-unit>
        <trans-unit id="1d91d9f14c54c4e95c5ae6d92b53aa4417546aa3" translate="yes" xml:space="preserve">
          <source>Maximum discontinuity between values, default is &lt;code&gt;pi&lt;/code&gt;.</source>
          <target state="translated">값 사이의 최대 불연속, 기본값은 &lt;code&gt;pi&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="88274f4f2ee4be5a95a8bcce7f347a366f7a2067" translate="yes" xml:space="preserve">
          <source>Maximum iterations in finding the solution</source>
          <target state="translated">솔루션을 찾을 때 최대 반복</target>
        </trans-unit>
        <trans-unit id="88320379693a46d01600d183ef332ece54011631" translate="yes" xml:space="preserve">
          <source>Maximum number of digits to print. May be None if &lt;a href=&quot;numpy.unique#numpy.unique&quot;&gt;&lt;code&gt;unique&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;True&lt;/code&gt;, but must be an integer if unique is &lt;code&gt;False&lt;/code&gt;.</source>
          <target state="translated">인쇄 할 최대 자릿수입니다. &lt;a href=&quot;numpy.unique#numpy.unique&quot;&gt; &lt;code&gt;unique&lt;/code&gt; &lt;/a&gt; 가 &lt;code&gt;True&lt;/code&gt; 이면 None 일 수 있지만 unique가 &lt;code&gt;False&lt;/code&gt; 이면 정수 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="d47a4bb599c600574e447bf7235a1209d164396c" translate="yes" xml:space="preserve">
          <source>Maximum of &lt;code&gt;a&lt;/code&gt;. If &lt;code&gt;axis&lt;/code&gt; is None, the result is a scalar value. If &lt;code&gt;axis&lt;/code&gt; is given, the result is an array of dimension &lt;code&gt;a.ndim - 1&lt;/code&gt;.</source>
          <target state="translated">최대 . 경우 &lt;code&gt;axis&lt;/code&gt; 포함되지 않은 경우, 결과는 스칼라 값이다. 경우 &lt;code&gt;axis&lt;/code&gt; 주어지고 그 결과 차원 배열이다 &lt;code&gt;a.ndim - 1&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b132d96a0eadfc30321cda97e2a4c0676845abd4" translate="yes" xml:space="preserve">
          <source>Maximum of the &amp;lsquo;sturges&amp;rsquo; and &amp;lsquo;fd&amp;rsquo; estimators. Provides good all around performance.</source>
          <target state="translated">'sturges'및 'fd'추정기의 최대 값. 모든 주변 성능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5134dac3ae1321d397cbee74e822d9e38285e887" translate="yes" xml:space="preserve">
          <source>Maximum power allowed. This is mainly to limit growth of the series to unmanageable size. Default is 16</source>
          <target state="translated">허용되는 최대 전력. 이것은 주로 시리즈의 성장을 관리 할 수없는 크기로 제한하는 것입니다. 기본값은 16</target>
        </trans-unit>
        <trans-unit id="4f01f894bba16ec08391452f753dbe735aec39d6" translate="yes" xml:space="preserve">
          <source>Maximum value of given dtype.</source>
          <target state="translated">주어진 dtype의 최대 값.</target>
        </trans-unit>
        <trans-unit id="979382f5445397232386ff9913eed09e269718c3" translate="yes" xml:space="preserve">
          <source>Maximum value. If &lt;code&gt;None&lt;/code&gt;, clipping is not performed on upper interval edge. Not more than one of &lt;code&gt;a_min&lt;/code&gt; and &lt;code&gt;a_max&lt;/code&gt; may be &lt;code&gt;None&lt;/code&gt;. If &lt;code&gt;a_min&lt;/code&gt; or &lt;code&gt;a_max&lt;/code&gt; are array_like, then the three arrays will be broadcasted to match their shapes.</source>
          <target state="translated">최대 값. 경우 &lt;code&gt;None&lt;/code&gt; 클리핑은 상부 에지 간격에 대해 수행되지 않는다. 아니 그 이상보다 &lt;code&gt;a_min&lt;/code&gt; 및 &lt;code&gt;a_max&lt;/code&gt; 할 수 &lt;code&gt;None&lt;/code&gt; . 경우 &lt;code&gt;a_min&lt;/code&gt; 또는 &lt;code&gt;a_max&lt;/code&gt; 이 array_like되어, 다음 세 가지 배열은 자신의 모양과 일치하는 방송됩니다.</target>
        </trans-unit>
        <trans-unit id="361e7c515a3286a7f4b81b0a1f913747c47a211e" translate="yes" xml:space="preserve">
          <source>May be &amp;lsquo;no&amp;rsquo;, &amp;lsquo;equiv&amp;rsquo;, &amp;lsquo;safe&amp;rsquo;, &amp;lsquo;same_kind&amp;rsquo;, or &amp;lsquo;unsafe&amp;rsquo;. See &lt;a href=&quot;generated/numpy.can_cast#numpy.can_cast&quot;&gt;&lt;code&gt;can_cast&lt;/code&gt;&lt;/a&gt; for explanations of the parameter values.</source>
          <target state="translated">'no', 'equiv', 'safe', 'same_kind'또는 'unsafe'일 수 있습니다. 매개 변수 값에 대한 설명은 &lt;a href=&quot;generated/numpy.can_cast#numpy.can_cast&quot;&gt; &lt;code&gt;can_cast&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e80ed9fbae4c9125ec6f6e33ae973e6364d25e9a" translate="yes" xml:space="preserve">
          <source>Mean (&amp;ldquo;centre&amp;rdquo;) of the distribution.</source>
          <target state="translated">분포의 평균 ( &quot;중심&quot;).</target>
        </trans-unit>
        <trans-unit id="ce5575103897e6dd52c0ab28f5294b03821eb00c" translate="yes" xml:space="preserve">
          <source>Mean of the N-dimensional distribution.</source>
          <target state="translated">N 차원 분포의 평균.</target>
        </trans-unit>
        <trans-unit id="109c6b97741d24ee1b6e0ace7f40eb2284aad45a" translate="yes" xml:space="preserve">
          <source>Mean value of the underlying normal distribution. Default is 0.</source>
          <target state="translated">기본 정규 분포의 평균값입니다. 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="19cd7d185cfd95a703e62d43597e9ae28e0646e5" translate="yes" xml:space="preserve">
          <source>Meaning</source>
          <target state="translated">Meaning</target>
        </trans-unit>
        <trans-unit id="9f86f77abecf55b9f3cb2d1b470b2c87cd469c3f" translate="yes" xml:space="preserve">
          <source>Means Delta Degrees of Freedom. The divisor used in calculations is &lt;code&gt;N - ddof&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; represents the number of elements. By default &lt;code&gt;ddof&lt;/code&gt; is zero.</source>
          <target state="translated">델타 자유도를 의미합니다. 계산에 사용 된 제수는 &lt;code&gt;N - ddof&lt;/code&gt; 이며 여기서 &lt;code&gt;N&lt;/code&gt; 은 요소 수를 나타냅니다. 기본적으로 &lt;code&gt;ddof&lt;/code&gt; 는 0입니다.</target>
        </trans-unit>
        <trans-unit id="c1d3bb50bd8c49d9b94d835e52cdd8d898555c19" translate="yes" xml:space="preserve">
          <source>Means Delta Degrees of Freedom. The divisor used in calculations is &lt;code&gt;N - ddof&lt;/code&gt;, where &lt;code&gt;N&lt;/code&gt; represents the number of non-NaN elements. By default &lt;code&gt;ddof&lt;/code&gt; is zero.</source>
          <target state="translated">델타 자유도를 의미합니다. 계산에 사용 된 제수는 &lt;code&gt;N - ddof&lt;/code&gt; 이며 여기서 &lt;code&gt;N&lt;/code&gt; 은 비 NaN 요소의 수를 나타냅니다. 기본적으로 &lt;code&gt;ddof&lt;/code&gt; 는 0입니다.</target>
        </trans-unit>
        <trans-unit id="2ba6e54b38478c48737f09bbe9788dc72a7f2cf2" translate="yes" xml:space="preserve">
          <source>Mem-map the stored array, and then access the second row directly from disk:</source>
          <target state="translated">저장된 배열을 mem-map 한 다음 디스크에서 직접 두 번째 행에 액세스하십시오.</target>
        </trans-unit>
        <trans-unit id="37ca91147588ee518578bc578622d12a42cc579b" translate="yes" xml:space="preserve">
          <source>Memory Alignment</source>
          <target state="translated">메모리 정렬</target>
        </trans-unit>
        <trans-unit id="94bcb527ae746c0ce270cfdf2c1a98587963a7d6" translate="yes" xml:space="preserve">
          <source>Memory Managed Argout View Arrays</source>
          <target state="translated">메모리 관리 Argout View 어레이</target>
        </trans-unit>
        <trans-unit id="5f056fc3e51653197be30f5d63ce02176b918b10" translate="yes" xml:space="preserve">
          <source>Memory address of the start of the array data. Default is None, in which case a new array is created.</source>
          <target state="translated">어레이 데이터 시작의 메모리 주소입니다. 기본값은 없음이며,이 경우 새 배열이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="62dd13277bc63a2e8a286c15ace431b8a0d94a7c" translate="yes" xml:space="preserve">
          <source>Memory areas of all kinds can be pointed to by an ndarray, necessitating these flags. If you get an arbitrary &lt;code&gt;PyArrayObject&lt;/code&gt; in C-code, you need to be aware of the flags that are set. If you need to guarantee a certain kind of array (like &lt;a href=&quot;#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt;&lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#c.NPY_ARRAY_BEHAVED&quot;&gt;&lt;code&gt;NPY_ARRAY_BEHAVED&lt;/code&gt;&lt;/a&gt;), then pass these requirements into the PyArray_FromAny function.</source>
          <target state="translated">ndarray로 모든 종류의 메모리 영역을 가리킬 수 있으므로 이러한 플래그가 필요합니다. C 코드에서 임의의 &lt;code&gt;PyArrayObject&lt;/code&gt; 를 얻는 경우 설정된 플래그를 알고 있어야합니다. &lt;a href=&quot;#c.NPY_ARRAY_C_CONTIGUOUS&quot;&gt; &lt;code&gt;NPY_ARRAY_C_CONTIGUOUS&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#c.NPY_ARRAY_BEHAVED&quot;&gt; &lt;code&gt;NPY_ARRAY_BEHAVED&lt;/code&gt; &lt;/a&gt; 와 같은 특정 종류의 배열을 보장 해야하는 경우 이러한 요구 사항을 PyArray_FromAny 함수에 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="475bc2651561a3c3ff5fe7691308be8b459d93e5" translate="yes" xml:space="preserve">
          <source>Memory layout</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c5536b98ab016fe61807564b4a34c80211a7613" translate="yes" xml:space="preserve">
          <source>Memory management</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3091004774833453b69799b69324dc3683b2051" translate="yes" xml:space="preserve">
          <source>Memory mapping files</source>
          <target state="translated">메모리 매핑 파일</target>
        </trans-unit>
        <trans-unit id="ab97ff6f2dba5d3f1cd5aeb9b43d517c7ff39baa" translate="yes" xml:space="preserve">
          <source>Memory model</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8573ea7625e0b925b466cc05d95be90df5a0e066" translate="yes" xml:space="preserve">
          <source>Memory ranges</source>
          <target state="translated">메모리 범위</target>
        </trans-unit>
        <trans-unit id="2d53d6fbb3fd00441b1332b5f1d39e80b6ee3e65" translate="yes" xml:space="preserve">
          <source>Memory-mapped file arrays</source>
          <target state="translated">메모리 매핑 된 파일 배열</target>
        </trans-unit>
        <trans-unit id="b1991b8dc93ae60cb920fa83ac2316d4205bbeaa" translate="yes" xml:space="preserve">
          <source>Memory-mapped files are used for accessing small segments of large files on disk, without reading the entire file into memory. NumPy&amp;rsquo;s memmap&amp;rsquo;s are array-like objects. This differs from Python&amp;rsquo;s &lt;code&gt;mmap&lt;/code&gt; module, which uses file-like objects.</source>
          <target state="translated">메모리 매핑 된 파일은 전체 파일을 메모리로 읽지 않고 디스크에서 큰 파일의 작은 세그먼트에 액세스하는 데 사용됩니다. NumPy의 memmap은 배열과 같은 객체입니다. 이것은 파일과 같은 객체를 사용하는 Python의 &lt;code&gt;mmap&lt;/code&gt; 모듈 과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="2f23ac794ef2c62dffc8c712d6134826c44e2102" translate="yes" xml:space="preserve">
          <source>Memory-mapped files are useful for reading and/or modifying small segments of a large file with regular layout, without reading the entire file into memory. A simple subclass of the ndarray uses a memory-mapped file for the data buffer of the array. For small files, the over-head of reading the entire file into memory is typically not significant, however for large files using memory mapping can save considerable resources.</source>
          <target state="translated">메모리 매핑 된 파일은 전체 파일을 메모리로 읽지 않고 규칙적인 레이아웃으로 큰 파일의 작은 세그먼트를 읽거나 수정하는 데 유용합니다. ndarray의 간단한 서브 클래스는 어레이의 데이터 버퍼에 메모리 매핑 된 파일을 사용합니다. 작은 파일의 경우 전체 파일을 메모리로 읽는 오버 헤드는 일반적으로 중요하지 않지만 메모리 매핑을 사용하는 큰 파일의 경우 상당한 리소스를 절약 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60b448a9a6c1eaee2ebc55b825c9890107d5f34a" translate="yes" xml:space="preserve">
          <source>Memory-mapped files cannot be larger than 2GB on 32-bit systems.</source>
          <target state="translated">메모리 매핑 된 파일은 32 비트 시스템에서 2GB보다 클 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fd8c18e9db26b53b8952bdbc069e5973922049e1" translate="yes" xml:space="preserve">
          <source>Memory-mapped-file arrays have one additional method (besides those they inherit from the ndarray): &lt;a href=&quot;generated/numpy.memmap.flush#numpy.memmap.flush&quot;&gt;&lt;code&gt;.flush()&lt;/code&gt;&lt;/a&gt; which must be called manually by the user to ensure that any changes to the array actually get written to disk.</source>
          <target state="translated">메모리 매핑 파일 배열에는 ndarray에서 상속되는 메소드 외에 하나의 추가 메소드가 있습니다. &lt;a href=&quot;generated/numpy.memmap.flush#numpy.memmap.flush&quot;&gt; &lt;code&gt;.flush()&lt;/code&gt; &lt;/a&gt; 사용자가 배열을 변경하면 실제로 디스크에 기록되도록 수동으로 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="2e44691543bdfbb8d17cee6cc934d0e08a71bf21" translate="yes" xml:space="preserve">
          <source>Mersenne Twister (MT19937)</source>
          <target state="translated">메르 센 트위스터 (MT19937)</target>
        </trans-unit>
        <trans-unit id="c7b840ec3d10f8e47e37f43cd8b2b281eacf51cf" translate="yes" xml:space="preserve">
          <source>Message to give on raising a KnownFailureException exception. Default is None.</source>
          <target state="translated">KnownFailureException 예외 발생시 제공되는 메시지입니다. 기본값은 없음입니다.</target>
        </trans-unit>
        <trans-unit id="9ecc2017c2757f60f4986ac8f5a3da153f8a8ebc" translate="yes" xml:space="preserve">
          <source>Message to give on raising a SkipTest exception. Default is None.</source>
          <target state="translated">SkipTest 예외 발생시 제공되는 메시지입니다. 기본값은 없음입니다.</target>
        </trans-unit>
        <trans-unit id="d087ba0cad85ad307ada79b5244249397f71a150" translate="yes" xml:space="preserve">
          <source>Metadata about this dtype.</source>
          <target state="translated">이 dtype에 대한 메타 데이터.</target>
        </trans-unit>
        <trans-unit id="597abccf59d77873379e7398915aadc0b7e7cbaf" translate="yes" xml:space="preserve">
          <source>Metadata specific to the C implementation of the particular dtype. Added for NumPy 1.7.0.</source>
          <target state="translated">특정 dtype의 C 구현과 관련된 메타 데이터. NumPy 1.7.0에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="219ceecaba9b954e275194321283849b23e1c282" translate="yes" xml:space="preserve">
          <source>Method to sort an array in-place.</source>
          <target state="translated">배열을 적절하게 정렬하는 방법.</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="70f3b0c55696e17549c215369e76598e954b8a84" translate="yes" xml:space="preserve">
          <source>Minimum dimensions 2:</source>
          <target state="translated">최소 치수 2 :</target>
        </trans-unit>
        <trans-unit id="53429462ac64f61f4bc78e4b621f6905aa05ea2f" translate="yes" xml:space="preserve">
          <source>Minimum number of characters to be printed. The value is not truncated if it has more characters.</source>
          <target state="translated">인쇄 할 최소 문자 수입니다. 더 많은 문자가 있으면 값이 잘리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a5622f8eb32976197ade8b6663c66f69924550b3" translate="yes" xml:space="preserve">
          <source>Minimum number of dimensions. Default is 0.</source>
          <target state="translated">최소 치수 수 기본값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="fcfeed1a84a844412b482f150ba740981d93fdd2" translate="yes" xml:space="preserve">
          <source>Minimum of &lt;code&gt;a&lt;/code&gt;. If &lt;code&gt;axis&lt;/code&gt; is None, the result is a scalar value. If &lt;code&gt;axis&lt;/code&gt; is given, the result is an array of dimension &lt;code&gt;a.ndim - 1&lt;/code&gt;.</source>
          <target state="translated">최소 . 경우 &lt;code&gt;axis&lt;/code&gt; 포함되지 않은 경우, 결과는 스칼라 값이다. 경우 &lt;code&gt;axis&lt;/code&gt; 주어지고 그 결과 차원 배열이다 &lt;code&gt;a.ndim - 1&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9f39f922dfb12aa9f84b1b8de412fb85dc86dd89" translate="yes" xml:space="preserve">
          <source>Minimum value of given dtype.</source>
          <target state="translated">주어진 dtype의 최소값.</target>
        </trans-unit>
        <trans-unit id="8471f2fac90600b5054b0fac3d3fbd0d0871370c" translate="yes" xml:space="preserve">
          <source>Minimum value. If &lt;code&gt;None&lt;/code&gt;, clipping is not performed on lower interval edge. Not more than one of &lt;code&gt;a_min&lt;/code&gt; and &lt;code&gt;a_max&lt;/code&gt; may be &lt;code&gt;None&lt;/code&gt;.</source>
          <target state="translated">최소값. 경우 &lt;code&gt;None&lt;/code&gt; 클리핑은 하부 에지 간격에 대해 수행되지 않는다. 아니 그 이상보다 &lt;code&gt;a_min&lt;/code&gt; 및 &lt;code&gt;a_max&lt;/code&gt; 할 수 &lt;code&gt;None&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e83d383bd0585ef50b8d7aebdacb03ed7fee94f2" translate="yes" xml:space="preserve">
          <source>Minimum/maximum</source>
          <target state="translated">Minimum/maximum</target>
        </trans-unit>
        <trans-unit id="ebd764f3ab249b5419cbd72a1e642543cec1fc34" translate="yes" xml:space="preserve">
          <source>Minuend and subtrahend polynomials, respectively.</source>
          <target state="translated">Minuend 및 Subtrahend 다항식.</target>
        </trans-unit>
        <trans-unit id="43ff260c5b4a26e9c40eb9fd48703c498064db8c" translate="yes" xml:space="preserve">
          <source>Mis-aligned or a loop data-type that does not match the input and/or output data-type is handled using buffered code where-in data is copied to a temporary buffer and cast to the correct data-type if necessary prior to calling the underlying 1-D function. The temporary buffers are created in (element) sizes no bigger than the user settable buffer-size value. Thus, the loop must be flexible enough to call the underlying 1-D computational loop enough times to complete the total calculation in chunks no bigger than the buffer-size.</source>
          <target state="translated">입력 및 / 또는 출력 데이터 유형과 일치하지 않는 잘못 정렬 된 또는 루프 데이터 유형은 버퍼링 된 코드를 사용하여 처리됩니다. 여기에서 데이터는 임시 버퍼에 복사되고 호출 전에 필요한 경우 올바른 데이터 유형으로 캐스트됩니다 기본 1 차원 함수. 임시 버퍼는 사용자가 설정할 수있는 버퍼 크기 값보다 크지 않은 (요소) 크기로 생성됩니다. 따라서 루프는 버퍼 크기보다 크지 않은 청크로 총 계산을 완료 할 수있을 정도로 기본 1D 계산 루프를 호출 할 수있을 정도로 유연해야합니다.</target>
        </trans-unit>
        <trans-unit id="ed9fcf7ba2565e6d2d0b1e8d961ecfab0762c9e5" translate="yes" xml:space="preserve">
          <source>Miscellanea</source>
          <target state="translated">Miscellanea</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="1c3358e8dc8fd1048b3037dac2fe7d6a0fc0e20b" translate="yes" xml:space="preserve">
          <source>Miscellaneous Macros</source>
          <target state="translated">기타 매크로</target>
        </trans-unit>
        <trans-unit id="9904bbe0c22c26b81720013677bd2f67f784943b" translate="yes" xml:space="preserve">
          <source>Miscellaneous routines</source>
          <target state="translated">기타 루틴</target>
        </trans-unit>
        <trans-unit id="a1a06c30c3aa2542d5fc842e51637823128b6cd8" translate="yes" xml:space="preserve">
          <source>Mixed scalar-array operations use a different set of casting rules that ensure that a scalar cannot &amp;ldquo;upcast&amp;rdquo; an array unless the scalar is of a fundamentally different kind of data (&lt;em&gt;i.e.&lt;/em&gt;, under a different hierarchy in the data-type hierarchy) than the array. This rule enables you to use scalar constants in your code (which, as Python types, are interpreted accordingly in ufuncs) without worrying about whether the precision of the scalar constant will cause upcasting on your large (small precision) array.</source>
          <target state="translated">혼합 스칼라 배열 연산은 스칼라가 기본적으로 다른 종류의 데이터 ( &lt;em&gt;즉&lt;/em&gt; , 데이터 유형 계층의 다른 계층 구조)가 아닌 한 스칼라가 배열을 &quot;업 캐스트&quot;할 수 없도록하는 다른 캐스트 규칙 세트를 사용 합니다. 정렬. 이 규칙을 사용하면 스칼라 상수의 정밀도가 큰 (작은 정밀도) 배열에서 업 캐스팅을 유발하는지에 대한 걱정없이 코드에서 스칼라 상수를 사용할 수 있습니다 (파이썬 유형으로 ufunc로 해석 됨).</target>
        </trans-unit>
        <trans-unit id="05a7d94e375e28326c8f08f19c2f7a5016861e71" translate="yes" xml:space="preserve">
          <source>Mixin defining all operator special methods using __array_ufunc__.</source>
          <target state="translated">__array_ufunc__를 사용하여 모든 연산자 특수 메소드를 정의하는 믹스 인.</target>
        </trans-unit>
        <trans-unit id="04b2a305460e8353ac84a081a6fefdfae948c9ab" translate="yes" xml:space="preserve">
          <source>Mode &amp;lsquo;same&amp;rsquo; returns output of length &lt;code&gt;max(M, N)&lt;/code&gt;. Boundary effects are still visible.</source>
          <target state="translated">모드 '동일'은 길이 &lt;code&gt;max(M, N)&lt;/code&gt; 출력을 반환합니다 . 경계 효과는 여전히 보입니다.</target>
        </trans-unit>
        <trans-unit id="2ad305c29e046a9bbd6419bf2ca2271efbc3459b" translate="yes" xml:space="preserve">
          <source>Mode &amp;lsquo;valid&amp;rsquo; returns output of length &lt;code&gt;max(M, N) - min(M, N) + 1&lt;/code&gt;. The convolution product is only given for points where the signals overlap completely. Values outside the signal boundary have no effect.</source>
          <target state="translated">'valid'모드는 길이 &lt;code&gt;max(M, N) - min(M, N) + 1&lt;/code&gt; 출력을 반환합니다 . 회선 제품은 신호가 완전히 겹치는 지점에만 제공됩니다. 신호 경계 밖의 값은 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="685ee951078bb491f363a6827a5b49d79e2953c2" translate="yes" xml:space="preserve">
          <source>Mode (&amp;ldquo;center&amp;rdquo;) of the distribution.</source>
          <target state="translated">분포의 모드 ( &quot;중심&quot;).</target>
        </trans-unit>
        <trans-unit id="43db663d16155e82c37d403ed5edade977d27209" translate="yes" xml:space="preserve">
          <source>Mode to open &lt;code&gt;path&lt;/code&gt;. Mode &amp;lsquo;r&amp;rsquo; for reading, &amp;lsquo;w&amp;rsquo; for writing, &amp;lsquo;a&amp;rsquo; to append. Available modes depend on the type of object specified by &lt;code&gt;path&lt;/code&gt;. Default is &amp;lsquo;r&amp;rsquo;.</source>
          <target state="translated">&lt;code&gt;path&lt;/code&gt; 를 여는 모드 . 읽기 모드 'r', 쓰기 'w', 추가 할 'a' 사용 가능한 모드는 &lt;code&gt;path&lt;/code&gt; 로 지정된 객체 유형에 따라 다릅니다 . 기본값은 'r'입니다.</target>
        </trans-unit>
        <trans-unit id="7e420f6da1cdb113407719794b0d12f455d2b0fa" translate="yes" xml:space="preserve">
          <source>Modified Bessel function of the first kind, order 0.</source>
          <target state="translated">첫 번째 종류의 수정 된 Bessel 함수, 차수 0.</target>
        </trans-unit>
        <trans-unit id="7c22361fe160dcfd8fbd8ff992ce4dac6ac826f4" translate="yes" xml:space="preserve">
          <source>Modified internal rate of return</source>
          <target state="translated">수정 된 내부 수익률</target>
        </trans-unit>
        <trans-unit id="3693ae60bdbdb30338d796259119d3333f8877f7" translate="yes" xml:space="preserve">
          <source>Modified internal rate of return.</source>
          <target state="translated">수정 된 내부 수익률.</target>
        </trans-unit>
        <trans-unit id="e1234dafd137d090a0b791f4954b8d3ed2717659" translate="yes" xml:space="preserve">
          <source>Modify a sequence in-place by shuffling its contents.</source>
          <target state="translated">내용을 섞어서 순서대로 수정하십시오.</target>
        </trans-unit>
        <trans-unit id="2edff5667f2c4fa3e6c9ded450245aea50fd3821" translate="yes" xml:space="preserve">
          <source>Modifying Array Values</source>
          <target state="translated">배열 값 수정</target>
        </trans-unit>
        <trans-unit id="2925323696375432da2bdb20965941b637ed11ee" translate="yes" xml:space="preserve">
          <source>Modifying a mask</source>
          <target state="translated">마스크 수정</target>
        </trans-unit>
        <trans-unit id="45801f46809b869c74f69159a8e07f840af80a26" translate="yes" xml:space="preserve">
          <source>Modifying axes</source>
          <target state="translated">축 수정</target>
        </trans-unit>
        <trans-unit id="35246c3e63c4f06392e613b4ced2a364bc875864" translate="yes" xml:space="preserve">
          <source>Modifying the mask</source>
          <target state="translated">마스크 수정</target>
        </trans-unit>
        <trans-unit id="a0a7094d11eee2fe15f311c849d1e9b9435359e8" translate="yes" xml:space="preserve">
          <source>Module to filter for. Note that the module (and its file) must match exactly and cannot be a submodule. This may make it unreliable for external modules.</source>
          <target state="translated">필터링 할 모듈입니다. 모듈 (및 파일)은 정확히 일치해야하며 하위 모듈 일 수 없습니다. 외부 모듈에 적합하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09c66a7bbc720598a898fc4ed190b9b93fc831e7" translate="yes" xml:space="preserve">
          <source>Module with a number of other functions for performing set operations on arrays.</source>
          <target state="translated">어레이에서 세트 작업을 수행하기위한 여러 가지 다른 기능이있는 모듈.</target>
        </trans-unit>
        <trans-unit id="86c444a83fb28ad922f7fe61ce50baf91d6575e5" translate="yes" xml:space="preserve">
          <source>Modules in &lt;code&gt;numpy.distutils&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;numpy.distutils&lt;/code&gt; 의 모듈</target>
        </trans-unit>
        <trans-unit id="fa6fb2da7ca749ad258209be56fcef14ef89919e" translate="yes" xml:space="preserve">
          <source>Modules in numpy.distutils</source>
          <target state="translated">numpy.distutils의 모듈</target>
        </trans-unit>
        <trans-unit id="ef301966908209badbf2e02bcb1970f7d3596794" translate="yes" xml:space="preserve">
          <source>More flexible way of loading data from a text file.</source>
          <target state="translated">텍스트 파일에서보다 유연한 데이터 로딩 방법.</target>
        </trans-unit>
        <trans-unit id="727573d55a0cf704c5c47d6a2b66ec269c23bc7b" translate="yes" xml:space="preserve">
          <source>More general matrix identity function.</source>
          <target state="translated">보다 일반적인 행렬 식별 기능.</target>
        </trans-unit>
        <trans-unit id="879e8925c737c755cedd54732466895861d298da" translate="yes" xml:space="preserve">
          <source>More generally, if &lt;code&gt;ndim(a) = r &amp;gt; 0&lt;/code&gt; and &lt;code&gt;ndim(b) = s &amp;gt; 0&lt;/code&gt;:</source>
          <target state="translated">보다 일반적으로, &lt;code&gt;ndim(a) = r &amp;gt; 0&lt;/code&gt; 및 &lt;code&gt;ndim(b) = s &amp;gt; 0&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="a7a1be23d7c56fdf5bcd983531ad08d86bee5af1" translate="yes" xml:space="preserve">
          <source>More information is available in the C-API section of the manual.</source>
          <target state="translated">자세한 내용은 설명서의 C-API 섹션에 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f15235e22d1d3b440ae6f6a14bf143806d4cd52" translate="yes" xml:space="preserve">
          <source>More often, we need to group a number of tests together, so we create a test class:</source>
          <target state="translated">더 자주 여러 테스트를 그룹화해야하므로 테스트 클래스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="f9934d7359558ecd3f9b2af93ffd2c25c423a537" translate="yes" xml:space="preserve">
          <source>More than one dimension:</source>
          <target state="translated">하나 이상의 차원 :</target>
        </trans-unit>
        <trans-unit id="ce96773863949497eac145716fd3c3eb95ba3896" translate="yes" xml:space="preserve">
          <source>Most C libraries used with &lt;a href=&quot;https://docs.python.org/dev/library/distutils.html#module-distutils&quot;&gt;&lt;code&gt;distutils&lt;/code&gt;&lt;/a&gt; are only used to build python extensions, but libraries built through this method will be installed so that they can be reused by third-party packages.</source>
          <target state="translated">&lt;a href=&quot;https://docs.python.org/dev/library/distutils.html#module-distutils&quot;&gt; &lt;code&gt;distutils&lt;/code&gt; &lt;/a&gt; 와 함께 사용되는 대부분의 C 라이브러리 는 Python 확장을 빌드하는 데만 사용되지만이 방법을 통해 빌드 된 라이브러리는 타사 패키지에서 재사용 할 수 있도록 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="0c459a2c6de76fda6877ab938b7a90ed70498166" translate="yes" xml:space="preserve">
          <source>Most implementations of &lt;code&gt;__array_function__&lt;/code&gt; will start with two checks:</source>
          <target state="translated">&lt;code&gt;__array_function__&lt;/code&gt; 의 대부분의 구현은 두 가지 검사로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="ae16ee52abc8ba5337202bc1d5fb75330847ce41" translate="yes" xml:space="preserve">
          <source>Most likely, no actual prototypes to be wrapped will have the argument names &lt;code&gt;IN_ARRAY1&lt;/code&gt; and &lt;code&gt;DIM1&lt;/code&gt;. We use the &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt;&lt;code&gt;%apply&lt;/code&gt; directive to apply the typemap for one-dimensional input arrays of type &lt;code&gt;double&lt;/code&gt; to the actual prototype used by &lt;code&gt;rms&lt;/code&gt;. Using &lt;code&gt;numpy.i&lt;/code&gt; effectively, therefore, requires knowing what typemaps are available and what they do.</source>
          <target state="translated">랩핑 될 실제 프로토 타입이 &lt;code&gt;IN_ARRAY1&lt;/code&gt; 및 &lt;code&gt;DIM1&lt;/code&gt; 인수 이름을 갖지 않을 가능성이 높습니다 . &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG &lt;/a&gt; &lt;code&gt;%apply&lt;/code&gt; 지시문을 사용하여 &lt;code&gt;double&lt;/code&gt; 유형의 1 차원 입력 배열에 대한 유형 맵을 &lt;code&gt;rms&lt;/code&gt; 가 사용하는 실제 프로토 타입에 적용합니다 . 따라서 &lt;code&gt;numpy.i&lt;/code&gt; 를 효과적으로 사용 하려면 사용 가능한 유형 맵과 수행 방식을 알아야합니다.</target>
        </trans-unit>
        <trans-unit id="bca44742c94530c67354bc48187063296ebe64db" translate="yes" xml:space="preserve">
          <source>Most references to the Bartlett window come from the signal processing literature, where it is used as one of many windowing functions for smoothing values. Note that convolution with this window produces linear interpolation. It is also known as an apodization (which means&amp;rdquo;removing the foot&amp;rdquo;, i.e. smoothing discontinuities at the beginning and end of the sampled signal) or tapering function. The fourier transform of the Bartlett is the product of two sinc functions. Note the excellent discussion in Kanasewich.</source>
          <target state="translated">Bartlett 창에 대한 대부분의 참조는 신호 처리 문헌에서 가져 오며, 값을 평활화하기위한 여러 가지 창 함수 중 하나로 사용됩니다. 이 창과의 컨볼 루션은 선형 보간을 생성합니다. 또한 아포 디제이 션 ( &quot;발 제거&quot;, 즉 샘플링 된 신호의 시작과 끝에서 불연속을 부드럽게 함) 또는 테이퍼링 기능이라고도합니다. Bartlett의 푸리에 변환은 두 가지 sinc 함수의 곱입니다. Kanasewich의 훌륭한 토론에 주목하십시오.</target>
        </trans-unit>
        <trans-unit id="0bf5c6fd2b24422effecd17c8eb75faa78782406" translate="yes" xml:space="preserve">
          <source>Most references to the Blackman window come from the signal processing literature, where it is used as one of many windowing functions for smoothing values. It is also known as an apodization (which means &amp;ldquo;removing the foot&amp;rdquo;, i.e. smoothing discontinuities at the beginning and end of the sampled signal) or tapering function. It is known as a &amp;ldquo;near optimal&amp;rdquo; tapering function, almost as good (by some measures) as the kaiser window.</source>
          <target state="translated">Blackman 윈도우에 대한 대부분의 참조는 신호 처리 문헌에서 가져온 것으로, 값을 평활화하기위한 많은 윈도우 기능 중 하나로 사용됩니다. 또한 아포 디제이 션 ( &quot;발 제거&quot;, 즉 샘플링 된 신호의 시작과 끝에서 스무딩 불연속을 의미 함) 또는 테이퍼링 기능이라고도합니다. 카이저 윈도우만큼이나 (일부 측정에 의해) 거의 &quot;최적화&quot;테이퍼링 기능으로 알려져 있습니다.</target>
        </trans-unit>
        <trans-unit id="74870920266af5304942919dc9aaa86ec8f10887" translate="yes" xml:space="preserve">
          <source>Most references to the Hanning window come from the signal processing literature, where it is used as one of many windowing functions for smoothing values. It is also known as an apodization (which means &amp;ldquo;removing the foot&amp;rdquo;, i.e. smoothing discontinuities at the beginning and end of the sampled signal) or tapering function.</source>
          <target state="translated">Hanning 윈도우에 대한 대부분의 참조는 신호 처리 문헌에서 가져온 것으로, 값을 평활화하기위한 많은 윈도우 기능 중 하나로 사용됩니다. 또한 아포 디제이 션 ( &quot;발 제거&quot;, 즉 샘플링 된 신호의 시작과 끝에서 스무딩 불연속을 의미 함) 또는 테이퍼링 기능이라고도합니다.</target>
        </trans-unit>
        <trans-unit id="2ca48b8d5e3e50e78c422e35a691239d38698c97" translate="yes" xml:space="preserve">
          <source>Most references to the Kaiser window come from the signal processing literature, where it is used as one of many windowing functions for smoothing values. It is also known as an apodization (which means &amp;ldquo;removing the foot&amp;rdquo;, i.e. smoothing discontinuities at the beginning and end of the sampled signal) or tapering function.</source>
          <target state="translated">카이저 창에 대한 대부분의 참조는 신호 처리 문헌에서 가져 오며, 값을 평활화하기위한 여러 가지 창 함수 중 하나로 사용됩니다. 또한 아포 디제이 션 ( &quot;발 제거&quot;, 즉 샘플링 된 신호의 시작과 끝에서 스무딩 불연속을 의미 함) 또는 테이퍼링 기능이라고도합니다.</target>
        </trans-unit>
        <trans-unit id="a2b903e2ec5cbbd5b69be7e0d572c1f12689bc37" translate="yes" xml:space="preserve">
          <source>Move array axes to new positions.</source>
          <target state="translated">배열 축을 새 위치로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="4bfdf5c628c76924daf3471919cc5173f84a54c2" translate="yes" xml:space="preserve">
          <source>Move axes of an array to new positions.</source>
          <target state="translated">배열의 축을 새 위치로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="b5e6b83cec58a786829011e6cd45b7ec63d837da" translate="yes" xml:space="preserve">
          <source>Move data from the source array, &lt;code&gt;src&lt;/code&gt;, into the destination array, &lt;code&gt;dest&lt;/code&gt;, performing a data-type conversion if necessary. If an error occurs return -1 (otherwise 0). The shape of &lt;code&gt;src&lt;/code&gt; must be broadcastable to the shape of &lt;code&gt;dest&lt;/code&gt;. The data areas of dest and src may overlap.</source>
          <target state="translated">필요한 경우 데이터 유형 변환을 수행 하여 소스 배열 &lt;code&gt;src&lt;/code&gt; 에서 대상 배열 &lt;code&gt;dest&lt;/code&gt; 로 데이터를 이동 하십시오. 오류가 발생하면 -1을 반환하십시오 (그렇지 않으면 0). 의 모양 &lt;code&gt;src&lt;/code&gt; 의 형상 캐스트 가능한해야합니다 &lt;code&gt;dest&lt;/code&gt; . dest 및 src의 데이터 영역이 겹칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8766a0d057565c5710a3fb9f292facb34ed488b9" translate="yes" xml:space="preserve">
          <source>Multi-dimensional arrays are only shuffled along the first axis:</source>
          <target state="translated">다차원 배열은 첫 번째 축을 따라 섞입니다.</target>
        </trans-unit>
        <trans-unit id="0adfe5f38279518c9e2501466e0baf3fc963f67a" translate="yes" xml:space="preserve">
          <source>Multidimensional Array Indexing Order Issues</source>
          <target state="translated">다차원 배열 인덱싱 순서 문제</target>
        </trans-unit>
        <trans-unit id="8f9ce9bf55e0e2d1a6dbb8e6eaa119f06fda7fdb" translate="yes" xml:space="preserve">
          <source>Multidimensional array iterator.</source>
          <target state="translated">다차원 배열 반복자.</target>
        </trans-unit>
        <trans-unit id="0999eff5bea05407bfec561cbbc69596f3d9c2f0" translate="yes" xml:space="preserve">
          <source>Multidimensional histogram</source>
          <target state="translated">다차원 히스토그램</target>
        </trans-unit>
        <trans-unit id="5630adba3530142bd257538daf6416bb396d8676" translate="yes" xml:space="preserve">
          <source>Multidimensional index iterator.</source>
          <target state="translated">다차원 인덱스 반복자.</target>
        </trans-unit>
        <trans-unit id="e804db67daf50964d4f43972ecd4ffdaeb11febe" translate="yes" xml:space="preserve">
          <source>Multiple vector cross-products. Note that the direction of the cross product vector is defined by the &lt;code&gt;right-hand rule&lt;/code&gt;.</source>
          <target state="translated">다중 벡터 교차 제품. 교차 곱 벡터의 방향은 &lt;code&gt;right-hand rule&lt;/code&gt; 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="3e215025477d5285ed30323c89369a0da1e539e7" translate="yes" xml:space="preserve">
          <source>Multiplication by scalars is not allowed, use &lt;code&gt;*&lt;/code&gt; instead.</source>
          <target state="translated">스칼라로 곱할 수 없습니다 . 대신 &lt;code&gt;*&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7c31a38c60f561f08e608709b6c083a519126169" translate="yes" xml:space="preserve">
          <source>Multiplication:</source>
          <target state="translated">Multiplication:</target>
        </trans-unit>
        <trans-unit id="3bb19435bde4887352a113d4d5c4dd6a4cc3ffc0" translate="yes" xml:space="preserve">
          <source>Multiply a Chebyshev series by x.</source>
          <target state="translated">Chebyshev 계열에 x를 곱합니다.</target>
        </trans-unit>
        <trans-unit id="e3033368fb120d59889e073494b3e9e0ebd7b593" translate="yes" xml:space="preserve">
          <source>Multiply a Hermite series by x.</source>
          <target state="translated">Hermite 시리즈에 x를 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="24f719f09448b7ce6825aca1328f5f145fff8b20" translate="yes" xml:space="preserve">
          <source>Multiply a Laguerre series by x.</source>
          <target state="translated">Laguerre 계열에 x를 곱합니다.</target>
        </trans-unit>
        <trans-unit id="baf2f27a56f88e7335f500fda90145ff72efa244" translate="yes" xml:space="preserve">
          <source>Multiply a Legendre series by x.</source>
          <target state="translated">Legendre 시리즈에 x를 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="5e8268b6df4bd10137e37b8f5a896f6c068f959e" translate="yes" xml:space="preserve">
          <source>Multiply a polynomial by x.</source>
          <target state="translated">다항식에 x를 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="52a611c74a7589e64b22e92b37abeb2dc2eb3b37" translate="yes" xml:space="preserve">
          <source>Multiply arguments element-wise.</source>
          <target state="translated">인수를 요소별로 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="848f745adfbb2d60e00e0ed4647503593b06470a" translate="yes" xml:space="preserve">
          <source>Multiply one Chebyshev series by another.</source>
          <target state="translated">한 체비 쇼프 계열에 다른 체비 쇼프 계열을 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="b295cb58378ef903f0a06d1a5b49f15d852e5456" translate="yes" xml:space="preserve">
          <source>Multiply one Hermite series by another.</source>
          <target state="translated">Hermite 시리즈에 다른 시리즈를 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="0a2c6b0921da476ffc70f28f3eb03de1b6536451" translate="yes" xml:space="preserve">
          <source>Multiply one Laguerre series by another.</source>
          <target state="translated">하나의 Laguerre 계열에 다른 계열을 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="dbe512b4d9d026c2d706a0637ee4f5defdd3451c" translate="yes" xml:space="preserve">
          <source>Multiply one Legendre series by another.</source>
          <target state="translated">하나의 Legendre 시리즈에 다른 Legendre 시리즈를 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="4a9b28e444d6e76af59d43a821edb797d9f14967" translate="yes" xml:space="preserve">
          <source>Multiply one polynomial by another.</source>
          <target state="translated">하나의 다항식에 다른 다항식을 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="33de6a055e5cad1fcad737613722274fdd860310" translate="yes" xml:space="preserve">
          <source>Multiply other by self, and return a new masked array.</source>
          <target state="translated">self에 다른 것을 곱하고 새로운 마스크 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aeadd2348bb83d358fe97d0423fad249eebe1cad" translate="yes" xml:space="preserve">
          <source>Multiply self by other in-place.</source>
          <target state="translated">다른 제자리에 자기를 곱하십시오.</target>
        </trans-unit>
        <trans-unit id="0f3371354dc1333f548d1e01b0ebf5624dcc4cc6" translate="yes" xml:space="preserve">
          <source>Multiply self by other, and return a new masked array.</source>
          <target state="translated">self와 other를 곱하고 마스크 된 새 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6a2faaa5d85906b782921993e3864239130f8aeb" translate="yes" xml:space="preserve">
          <source>Multiply the Hermite series &lt;code&gt;c&lt;/code&gt; by x, where x is the independent variable.</source>
          <target state="translated">Hermite 시리즈 &lt;code&gt;c&lt;/code&gt; 에 x를 곱합니다 . 여기서 x는 독립 변수입니다.</target>
        </trans-unit>
        <trans-unit id="52797661c4288a141efa0e14228dbad81f7a1584" translate="yes" xml:space="preserve">
          <source>Multiply the Laguerre series &lt;code&gt;c&lt;/code&gt; by x, where x is the independent variable.</source>
          <target state="translated">Laguerre 시리즈 &lt;code&gt;c&lt;/code&gt; 에 x를 곱합니다 . 여기서 x는 독립 변수입니다.</target>
        </trans-unit>
        <trans-unit id="cf31b4718202370fd2fe9ae1066afd857e045164" translate="yes" xml:space="preserve">
          <source>Multiply the Legendre series &lt;code&gt;c&lt;/code&gt; by x, where x is the independent variable.</source>
          <target state="translated">Legendre 시리즈 &lt;code&gt;c&lt;/code&gt; 에 x를 곱하십시오 . 여기서 x는 독립 변수입니다.</target>
        </trans-unit>
        <trans-unit id="f9258a0217a289e319365de2e1098012093c13ce" translate="yes" xml:space="preserve">
          <source>Multiply the polynomial &lt;code&gt;c&lt;/code&gt; by x, where x is the independent variable.</source>
          <target state="translated">다항식 &lt;code&gt;c&lt;/code&gt; 에 x를 곱합니다 . 여기서 x는 독립 변수입니다.</target>
        </trans-unit>
        <trans-unit id="9da34bef86bd2d6e0a76a0a32767a72e5685d3fc" translate="yes" xml:space="preserve">
          <source>Multithreaded Generation</source>
          <target state="translated">멀티 스레드 생성</target>
        </trans-unit>
        <trans-unit id="d8dbfef1ac41e4d8ef20fc843ce033e5c1b54760" translate="yes" xml:space="preserve">
          <source>Must be called with the same objects and memory locations returned from &lt;a href=&quot;#c.PyArray_AsCArray&quot;&gt;&lt;code&gt;PyArray_AsCArray&lt;/code&gt;&lt;/a&gt; (&amp;hellip;). This function cleans up memory that otherwise would get leaked.</source>
          <target state="translated">&lt;a href=&quot;#c.PyArray_AsCArray&quot;&gt; &lt;code&gt;PyArray_AsCArray&lt;/code&gt; &lt;/a&gt; (&amp;hellip;) 에서 반환 된 동일한 객체 및 메모리 위치로 호출해야합니다 . 이 함수는 그렇지 않으면 누출 될 메모리를 정리합니다.</target>
        </trans-unit>
        <trans-unit id="c2e38423bb80d5abbde285bcad0d010d91adeaef" translate="yes" xml:space="preserve">
          <source>Must to an array of length &lt;em&gt;ntypes&lt;/em&gt; containing &lt;code&gt;PyUFuncGenericFunction&lt;/code&gt; items. These items are pointers to functions that actually implement the underlying (element-by-element) function</source>
          <target state="translated">&lt;code&gt;PyUFuncGenericFunction&lt;/code&gt; 항목을 포함하는 길이 &lt;em&gt;ntype&lt;/em&gt; 의 배열이어야 합니다. 이러한 항목은 실제로 기본 (요소 별) 함수를 구현하는 함수에 대한 포인터입니다.</target>
        </trans-unit>
        <trans-unit id="782f5114f09ea32f407b005598a924c1ad9a456d" translate="yes" xml:space="preserve">
          <source>N arrays to specify the coordinates of the values along each dimension of F. The length of the array must match the size of the corresponding dimension</source>
          <target state="translated">F의 각 차원을 따라 값의 좌표를 지정하는 N 개의 배열. 배열의 길이는 해당 차원의 크기와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="222389e7bc6cacf85da67b078baadcdedb1cffa2" translate="yes" xml:space="preserve">
          <source>N arrays with N dimensions each, with N the number of input sequences. Together these arrays form an open mesh.</source>
          <target state="translated">N 개의 입력 시퀀스 수와 함께 N 개의 차원을 갖는 N 개의 배열. 이 배열들은 함께 열린 메쉬를 형성합니다.</target>
        </trans-unit>
        <trans-unit id="336c6d7bebdc02721941a72169314218610ad9d0" translate="yes" xml:space="preserve">
          <source>N scalars to specify a constant sample distance for each dimension. i.e. &lt;code&gt;dx&lt;/code&gt;, &lt;code&gt;dy&lt;/code&gt;, &lt;code&gt;dz&lt;/code&gt;, &amp;hellip;</source>
          <target state="translated">각 차원에 대해 일정한 샘플 거리를 지정하는 N 스칼라 즉 &lt;code&gt;dx&lt;/code&gt; , &lt;code&gt;dy&lt;/code&gt; , &lt;code&gt;dz&lt;/code&gt; ...</target>
        </trans-unit>
        <trans-unit id="9d5928686902dc9c57ae25af3939959d2e6fe530" translate="yes" xml:space="preserve">
          <source>N-D Iterators</source>
          <target state="translated">ND 반복자</target>
        </trans-unit>
        <trans-unit id="257621f4bdcff32a42e107baccfda4b91de38144" translate="yes" xml:space="preserve">
          <source>N-dimensional enumeration</source>
          <target state="translated">N 차원 열거</target>
        </trans-unit>
        <trans-unit id="8763f0b10a483985413b51aeced5f782b294a72c" translate="yes" xml:space="preserve">
          <source>ND:</source>
          <target state="translated">ND:</target>
        </trans-unit>
        <trans-unit id="2ab0c0141de9fec63b0edc408e84fd87e7cdae4f" translate="yes" xml:space="preserve">
          <source>NIST &amp;ldquo;Engineering Statistics Handbook&amp;rdquo; &lt;a href=&quot;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3666.htm&quot;&gt;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3666.htm&lt;/a&gt;</source>
          <target state="translated">NIST&amp;ldquo;엔지니어링 통계 핸드북&amp;rdquo; &lt;a href=&quot;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3666.htm&quot;&gt;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3666.htm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54f6df602bb65a556fc612644ec60a13b8558479" translate="yes" xml:space="preserve">
          <source>NIST/SEMATECH e-Handbook of Statistical Methods, &amp;ldquo;Cauchy Distribution&amp;rdquo;, &lt;a href=&quot;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3663.htm&quot;&gt;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3663.htm&lt;/a&gt;</source>
          <target state="translated">통계 방법의 NIST / SEMATECH e- 핸드북,&amp;ldquo;코시 분포&amp;rdquo;, &lt;a href=&quot;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3663.htm&quot;&gt;https://www.itl.nist.gov/div898/handbook/eda/section3/eda3663.htm&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f9042839ddd6d4539c71814a1002e68b678259c" translate="yes" xml:space="preserve">
          <source>NO_IMPORT_ARRAY</source>
          <target state="translated">NO_IMPORT_ARRAY</target>
        </trans-unit>
        <trans-unit id="f6019c3c564c5205922236a600e26d027f05cb26" translate="yes" xml:space="preserve">
          <source>NO_IMPORT_UFUNC</source>
          <target state="translated">NO_IMPORT_UFUNC</target>
        </trans-unit>
        <trans-unit id="6d05226b8223077fa3cc68b39febc18eca15ef82" translate="yes" xml:space="preserve">
          <source>NPY format</source>
          <target state="translated">NPY 형식</target>
        </trans-unit>
        <trans-unit id="337fd9067c6deff8a5ebc9014ebc7d624cf123c1" translate="yes" xml:space="preserve">
          <source>NPY_1_PI</source>
          <target state="translated">NPY_1_PI</target>
        </trans-unit>
        <trans-unit id="a6a2b9e6c0b059bb4b87e001261c7877544a568f" translate="yes" xml:space="preserve">
          <source>NPY_2_PI</source>
          <target state="translated">NPY_2_PI</target>
        </trans-unit>
        <trans-unit id="4fe84e8afdf790cc009ab97f6e1c27654a720490" translate="yes" xml:space="preserve">
          <source>NPY_ALLOW_C_API</source>
          <target state="translated">NPY_ALLOW_C_API</target>
        </trans-unit>
        <trans-unit id="6e63c59b25b2f1ae7c4d3b417f7809aa98c28674" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_ALIGNED</source>
          <target state="translated">NPY_ARRAY_ALIGNED</target>
        </trans-unit>
        <trans-unit id="2ffafaa78d8c4fecd3c0b1d27c9413a4fdee61f3" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_BEHAVED</source>
          <target state="translated">NPY_ARRAY_BEHAVED</target>
        </trans-unit>
        <trans-unit id="7ac6c56ffc307210c7d2b809d4ca0d4d0b6e05ec" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_BEHAVED_NS</source>
          <target state="translated">NPY_ARRAY_BEHAVED_NS</target>
        </trans-unit>
        <trans-unit id="edd4043c4a06868f295a214d83dfed623929d145" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_CARRAY</source>
          <target state="translated">NPY_ARRAY_CARRAY</target>
        </trans-unit>
        <trans-unit id="73253f62835ab8362457a267c502596fd7c60214" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_CARRAY_RO</source>
          <target state="translated">NPY_ARRAY_CARRAY_RO</target>
        </trans-unit>
        <trans-unit id="e2e24b56ba889d26e4ede4b56d61f8a860bd60d9" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_DEFAULT</source>
          <target state="translated">NPY_ARRAY_DEFAULT</target>
        </trans-unit>
        <trans-unit id="53c578dc59241dd86b870d992111776f4c38fd9b" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_ELEMENTSTRIDES</source>
          <target state="translated">NPY_ARRAY_ELEMENTSTRIDES</target>
        </trans-unit>
        <trans-unit id="75b683ce5a4aa35f1bcb6da9b67bb0aeb19a7ce6" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_ENSUREARRAY</source>
          <target state="translated">NPY_ARRAY_ENSUREARRAY</target>
        </trans-unit>
        <trans-unit id="59780ff44a04b8cad6f0b9d531a9862c90277eaa" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_ENSURECOPY</source>
          <target state="translated">NPY_ARRAY_ENSURECOPY</target>
        </trans-unit>
        <trans-unit id="74002bdc560d67dd6901005c0039edcfe7f0cf8d" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_FARRAY</source>
          <target state="translated">NPY_ARRAY_FARRAY</target>
        </trans-unit>
        <trans-unit id="f26364be823be94e78ff7bf31a8a24049f006322" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_FARRAY_RO</source>
          <target state="translated">NPY_ARRAY_FARRAY_RO</target>
        </trans-unit>
        <trans-unit id="e61baa1f9fafe2ca0110808483cbb4dc9984804b" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_FORCECAST</source>
          <target state="translated">NPY_ARRAY_FORCECAST</target>
        </trans-unit>
        <trans-unit id="63b26fcb6a1dac9dcc79df92170ad53ea1f2777d" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_F_CONTIGUOUS</source>
          <target state="translated">NPY_ARRAY_F_CONTIGUOUS</target>
        </trans-unit>
        <trans-unit id="7e35153b4b5b24e8b0690e3988b1e1a6639fc50d" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_INOUT_ARRAY</source>
          <target state="translated">NPY_ARRAY_INOUT_ARRAY</target>
        </trans-unit>
        <trans-unit id="3d4e9de3031cdc7ad722e7dbefa12e177df353a5" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_INOUT_FARRAY</source>
          <target state="translated">NPY_ARRAY_INOUT_FARRAY</target>
        </trans-unit>
        <trans-unit id="99d9325c069d50130d1b3305f23bc92c807e39a1" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_IN_ARRAY</source>
          <target state="translated">NPY_ARRAY_IN_ARRAY</target>
        </trans-unit>
        <trans-unit id="182b1ac7f50dd939c6f5d75eb862767cfb8e9a27" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_IN_FARRAY</source>
          <target state="translated">NPY_ARRAY_IN_FARRAY</target>
        </trans-unit>
        <trans-unit id="9e47a058e68e19235d40014a3f60d7b03cac2fcb" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_NOTSWAPPED</source>
          <target state="translated">NPY_ARRAY_NOTSWAPPED</target>
        </trans-unit>
        <trans-unit id="24483eb67706f344803af485b96a771167286853" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_OUT_ARRAY</source>
          <target state="translated">NPY_ARRAY_OUT_ARRAY</target>
        </trans-unit>
        <trans-unit id="6698df272cecae8523725b3006063086326731aa" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_OUT_FARRAY</source>
          <target state="translated">NPY_ARRAY_OUT_FARRAY</target>
        </trans-unit>
        <trans-unit id="dbfdbd392f27342bf73282e03e6827d8f56bd21a" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_OWNDATA</source>
          <target state="translated">NPY_ARRAY_OWNDATA</target>
        </trans-unit>
        <trans-unit id="350d622f1940a9670e41559d4851271cee66e99f" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_UPDATEIFCOPY</source>
          <target state="translated">NPY_ARRAY_UPDATEIFCOPY</target>
        </trans-unit>
        <trans-unit id="0b12b30bab548f70f03cd258cbf5273a77f8db3a" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_UPDATE_ALL</source>
          <target state="translated">NPY_ARRAY_UPDATE_ALL</target>
        </trans-unit>
        <trans-unit id="2ded6d3612d5b00b36c96078c4d6a67103aae522" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_WRITEABLE</source>
          <target state="translated">NPY_ARRAY_WRITEABLE</target>
        </trans-unit>
        <trans-unit id="d75f518bf650047e6b9a2a697fc67f6a6e995176" translate="yes" xml:space="preserve">
          <source>NPY_ARRAY_WRITEBACKIFCOPY</source>
          <target state="translated">NPY_ARRAY_WRITEBACKIFCOPY</target>
        </trans-unit>
        <trans-unit id="8222d0f7cda090bda4a17436864cd5ca14a78555" translate="yes" xml:space="preserve">
          <source>NPY_AUXDATA_CLONE()</source>
          <target state="translated">NPY_AUXDATA_CLONE()</target>
        </trans-unit>
        <trans-unit id="0bb66df47a87cd515a3dfa9fef8e221553af886f" translate="yes" xml:space="preserve">
          <source>NPY_AUXDATA_FREE()</source>
          <target state="translated">NPY_AUXDATA_FREE()</target>
        </trans-unit>
        <trans-unit id="7a7b71de9df8137df0546d4391577ae61abd6d96" translate="yes" xml:space="preserve">
          <source>NPY_BEGIN_THREADS</source>
          <target state="translated">NPY_BEGIN_THREADS</target>
        </trans-unit>
        <trans-unit id="71b0dca69f3e736fcf5ec45d451b735234b3e2af" translate="yes" xml:space="preserve">
          <source>NPY_BEGIN_THREADS_DEF</source>
          <target state="translated">NPY_BEGIN_THREADS_DEF</target>
        </trans-unit>
        <trans-unit id="d45b22dcc5f7b9bb9471e92aca93a7066bf39217" translate="yes" xml:space="preserve">
          <source>NPY_BEGIN_THREADS_DESCR()</source>
          <target state="translated">NPY_BEGIN_THREADS_DESCR()</target>
        </trans-unit>
        <trans-unit id="367f04da908fd209da34871c0e8383b3befb7f7a" translate="yes" xml:space="preserve">
          <source>NPY_BEGIN_THREADS_THRESHOLDED()</source>
          <target state="translated">NPY_BEGIN_THREADS_THRESHOLDED()</target>
        </trans-unit>
        <trans-unit id="27b751a27a0094fe7e11605b1265cd251f2702e0" translate="yes" xml:space="preserve">
          <source>NPY_BIG_ENDIAN</source>
          <target state="translated">NPY_BIG_ENDIAN</target>
        </trans-unit>
        <trans-unit id="a52701a1ff200affb98ff49192eb11a2d5f18966" translate="yes" xml:space="preserve">
          <source>NPY_BOOL</source>
          <target state="translated">NPY_BOOL</target>
        </trans-unit>
        <trans-unit id="7bea837ae2db5f5aeffb0c99c7613a890cf8e861" translate="yes" xml:space="preserve">
          <source>NPY_BYTE</source>
          <target state="translated">NPY_BYTE</target>
        </trans-unit>
        <trans-unit id="2b217d4cdc625fd9e077904e3fcd8b888ab83c20" translate="yes" xml:space="preserve">
          <source>NPY_BYTE_ORDER</source>
          <target state="translated">NPY_BYTE_ORDER</target>
        </trans-unit>
        <trans-unit id="a538db4e62dedc2c4274617e136d413c164ad171" translate="yes" xml:space="preserve">
          <source>NPY_CASTING</source>
          <target state="translated">NPY_CASTING</target>
        </trans-unit>
        <trans-unit id="79a6c9fa05f65a9773bb60198cabab5d6479939c" translate="yes" xml:space="preserve">
          <source>NPY_CDOUBLE</source>
          <target state="translated">NPY_CDOUBLE</target>
        </trans-unit>
        <trans-unit id="dde91f04351cadef9cc0068ae6b9b588e9363dec" translate="yes" xml:space="preserve">
          <source>NPY_CFLOAT</source>
          <target state="translated">NPY_CFLOAT</target>
        </trans-unit>
        <trans-unit id="baee94726684ef2f8056b57374a0f3504a0339ef" translate="yes" xml:space="preserve">
          <source>NPY_CLIP</source>
          <target state="translated">NPY_CLIP</target>
        </trans-unit>
        <trans-unit id="ab5f879fc529bc2acf208e75b18c18bd48302b76" translate="yes" xml:space="preserve">
          <source>NPY_CLIPMODE</source>
          <target state="translated">NPY_CLIPMODE</target>
        </trans-unit>
        <trans-unit id="42d6acd8d6caa79d689d6ca7007f2cd54fabb26e" translate="yes" xml:space="preserve">
          <source>NPY_CLONGDOUBLE</source>
          <target state="translated">NPY_CLONGDOUBLE</target>
        </trans-unit>
        <trans-unit id="fd775fc37497ae110e0cfd44f0b82ed60732f3d0" translate="yes" xml:space="preserve">
          <source>NPY_COMPLEX128</source>
          <target state="translated">NPY_COMPLEX128</target>
        </trans-unit>
        <trans-unit id="b3718a97bfc69ddf4fe83b3cacdd65a2ac68c637" translate="yes" xml:space="preserve">
          <source>NPY_COMPLEX64</source>
          <target state="translated">NPY_COMPLEX64</target>
        </trans-unit>
        <trans-unit id="08ee4bb306297080422d44c63dd100eb4da05629" translate="yes" xml:space="preserve">
          <source>NPY_CORDER</source>
          <target state="translated">NPY_CORDER</target>
        </trans-unit>
        <trans-unit id="445849a5876655e5b0434b67a7d5fb9035a99aff" translate="yes" xml:space="preserve">
          <source>NPY_CPU_AMD64</source>
          <target state="translated">NPY_CPU_AMD64</target>
        </trans-unit>
        <trans-unit id="5e0a4ef72fc219b99800734ef05c9c29ca7b4d45" translate="yes" xml:space="preserve">
          <source>NPY_CPU_IA64</source>
          <target state="translated">NPY_CPU_IA64</target>
        </trans-unit>
        <trans-unit id="576ad8bd965cfd87064b091a02fec5a09f3be12c" translate="yes" xml:space="preserve">
          <source>NPY_CPU_PARISC</source>
          <target state="translated">NPY_CPU_PARISC</target>
        </trans-unit>
        <trans-unit id="b67c2cb06a0034f67047434219521647e35d2a28" translate="yes" xml:space="preserve">
          <source>NPY_CPU_PPC</source>
          <target state="translated">NPY_CPU_PPC</target>
        </trans-unit>
        <trans-unit id="aa3a704be31b1592c2d6772cee782fca604235f5" translate="yes" xml:space="preserve">
          <source>NPY_CPU_PPC64</source>
          <target state="translated">NPY_CPU_PPC64</target>
        </trans-unit>
        <trans-unit id="74fe0a8c2d7ded634be17a89b45434271c572a7d" translate="yes" xml:space="preserve">
          <source>NPY_CPU_S390</source>
          <target state="translated">NPY_CPU_S390</target>
        </trans-unit>
        <trans-unit id="3f1035e080caf74542087c667fe07d694a1c6f02" translate="yes" xml:space="preserve">
          <source>NPY_CPU_SPARC</source>
          <target state="translated">NPY_CPU_SPARC</target>
        </trans-unit>
        <trans-unit id="fda98b87cc8c6926dcda1ba4e17057a0bb9d52e9" translate="yes" xml:space="preserve">
          <source>NPY_CPU_SPARC64</source>
          <target state="translated">NPY_CPU_SPARC64</target>
        </trans-unit>
        <trans-unit id="baa424069bdc2bf5e1bef5d0c1dae4e4d04b6c03" translate="yes" xml:space="preserve">
          <source>NPY_DATETIME</source>
          <target state="translated">NPY_DATETIME</target>
        </trans-unit>
        <trans-unit id="740d421f29beb7d31d82582e894e5398cfd7f53b" translate="yes" xml:space="preserve">
          <source>NPY_DEFAULT_TYPE</source>
          <target state="translated">NPY_DEFAULT_TYPE</target>
        </trans-unit>
        <trans-unit id="0f021557ba9cd03b2412e6a77a1a16fca582c87a" translate="yes" xml:space="preserve">
          <source>NPY_DISABLE_C_API</source>
          <target state="translated">NPY_DISABLE_C_API</target>
        </trans-unit>
        <trans-unit id="5d42a9fafe5d991d8d8ad77c418b751461ec53fb" translate="yes" xml:space="preserve">
          <source>NPY_DOUBLE</source>
          <target state="translated">NPY_DOUBLE</target>
        </trans-unit>
        <trans-unit id="02708bc92f659bb3dcf4a89cb2c3a3dd7bea1a58" translate="yes" xml:space="preserve">
          <source>NPY_END_ALLOW_THREADS</source>
          <target state="translated">NPY_END_ALLOW_THREADS</target>
        </trans-unit>
        <trans-unit id="11e52c9b56bd5928ee6dce1eb2e77bbb2649aac0" translate="yes" xml:space="preserve">
          <source>NPY_END_THREADS</source>
          <target state="translated">NPY_END_THREADS</target>
        </trans-unit>
        <trans-unit id="549ccd89e4d53745c6207ffed6a5e9e3cd4488e4" translate="yes" xml:space="preserve">
          <source>NPY_END_THREADS_DESCR()</source>
          <target state="translated">NPY_END_THREADS_DESCR()</target>
        </trans-unit>
        <trans-unit id="fbd73ba42fddea4ee6ad8d2cb539afb1935641a0" translate="yes" xml:space="preserve">
          <source>NPY_EQUIV_CASTING</source>
          <target state="translated">NPY_EQUIV_CASTING</target>
        </trans-unit>
        <trans-unit id="4c9f408708dd27289647c380e1b64be0385f40bf" translate="yes" xml:space="preserve">
          <source>NPY_EULER</source>
          <target state="translated">NPY_EULER</target>
        </trans-unit>
        <trans-unit id="ca7971018ca35eee1879ede9cf3645f67bfca264" translate="yes" xml:space="preserve">
          <source>NPY_FAIL</source>
          <target state="translated">NPY_FAIL</target>
        </trans-unit>
        <trans-unit id="f875fa3d764fa3bd36a4845d1f91d55e2b4488c0" translate="yes" xml:space="preserve">
          <source>NPY_FALSE</source>
          <target state="translated">NPY_FALSE</target>
        </trans-unit>
        <trans-unit id="358586666002fff54c090fc108ee937e99bbef69" translate="yes" xml:space="preserve">
          <source>NPY_FLOAT</source>
          <target state="translated">NPY_FLOAT</target>
        </trans-unit>
        <trans-unit id="5b1e0e4d5e954afb2341fa83c46e5aa7552f44ea" translate="yes" xml:space="preserve">
          <source>NPY_FLOAT16</source>
          <target state="translated">NPY_FLOAT16</target>
        </trans-unit>
        <trans-unit id="997c282c77aa064788d2c8c41df0afecf628c57f" translate="yes" xml:space="preserve">
          <source>NPY_FLOAT32</source>
          <target state="translated">NPY_FLOAT32</target>
        </trans-unit>
        <trans-unit id="b696f7737e74e8db3905f5fc982b8e44bb22859e" translate="yes" xml:space="preserve">
          <source>NPY_FLOAT64</source>
          <target state="translated">NPY_FLOAT64</target>
        </trans-unit>
        <trans-unit id="52a46bb4be646f04df911f951cf4e88f206777da" translate="yes" xml:space="preserve">
          <source>NPY_FORTRANORDER</source>
          <target state="translated">NPY_FORTRANORDER</target>
        </trans-unit>
        <trans-unit id="9ac5cf7bd324a16ddcce3fc5ec3638c28f29e0cf" translate="yes" xml:space="preserve">
          <source>NPY_FPE_DIVIDEBYZERO</source>
          <target state="translated">NPY_FPE_DIVIDEBYZERO</target>
        </trans-unit>
        <trans-unit id="5811a7400e2dbe58119b24c68c7b33bb0411a322" translate="yes" xml:space="preserve">
          <source>NPY_FPE_INVALID</source>
          <target state="translated">NPY_FPE_INVALID</target>
        </trans-unit>
        <trans-unit id="eb8203e0906d4df4cf041f71832e313f5f274745" translate="yes" xml:space="preserve">
          <source>NPY_FPE_OVERFLOW</source>
          <target state="translated">NPY_FPE_OVERFLOW</target>
        </trans-unit>
        <trans-unit id="4a3503b9dff318bd843caad9bb38ebe365b1d696" translate="yes" xml:space="preserve">
          <source>NPY_FPE_UNDERFLOW</source>
          <target state="translated">NPY_FPE_UNDERFLOW</target>
        </trans-unit>
        <trans-unit id="a970eb729b36e0d4f4cac1e44ee2fe14ba3d2a4a" translate="yes" xml:space="preserve">
          <source>NPY_FROM_FIELDS</source>
          <target state="translated">NPY_FROM_FIELDS</target>
        </trans-unit>
        <trans-unit id="42246608cb8d49ecb7d1d533545e066fe5be1437" translate="yes" xml:space="preserve">
          <source>NPY_HALF</source>
          <target state="translated">NPY_HALF</target>
        </trans-unit>
        <trans-unit id="bc5927dd3c6132804cf4018ecafd356c61f15ffd" translate="yes" xml:space="preserve">
          <source>NPY_HALF_NAN</source>
          <target state="translated">NPY_HALF_NAN</target>
        </trans-unit>
        <trans-unit id="a337d64d8b35e4b7bad6727b05fbaa670dc0d880" translate="yes" xml:space="preserve">
          <source>NPY_HALF_NEGONE</source>
          <target state="translated">NPY_HALF_NEGONE</target>
        </trans-unit>
        <trans-unit id="4ff0abfb1d0e9e88aa028c95d5966418eed41685" translate="yes" xml:space="preserve">
          <source>NPY_HALF_NINF</source>
          <target state="translated">NPY_HALF_NINF</target>
        </trans-unit>
        <trans-unit id="a67fb04bffe1fe80fa81f0392e591468b482491b" translate="yes" xml:space="preserve">
          <source>NPY_HALF_NZERO</source>
          <target state="translated">NPY_HALF_NZERO</target>
        </trans-unit>
        <trans-unit id="9f2f4c584696728b25aef14ce85631e596d3ae87" translate="yes" xml:space="preserve">
          <source>NPY_HALF_ONE</source>
          <target state="translated">NPY_HALF_ONE</target>
        </trans-unit>
        <trans-unit id="3b5b0faeef37df979df28b0679f4491fb2db8c64" translate="yes" xml:space="preserve">
          <source>NPY_HALF_PINF</source>
          <target state="translated">NPY_HALF_PINF</target>
        </trans-unit>
        <trans-unit id="988f6ef015845ed37c403058b93c1e52f22847e7" translate="yes" xml:space="preserve">
          <source>NPY_HALF_PZERO</source>
          <target state="translated">NPY_HALF_PZERO</target>
        </trans-unit>
        <trans-unit id="358a08142b2b4823b0bb3368d0f114d12c1d0542" translate="yes" xml:space="preserve">
          <source>NPY_INFINITY</source>
          <target state="translated">NPY_INFINITY</target>
        </trans-unit>
        <trans-unit id="0ae07a3e9ffc9ecae7b9e9fa5cd26bc60e1f7b1d" translate="yes" xml:space="preserve">
          <source>NPY_INT</source>
          <target state="translated">NPY_INT</target>
        </trans-unit>
        <trans-unit id="535e0ce309f1a8c926c278507180c826f79ab5ee" translate="yes" xml:space="preserve">
          <source>NPY_INT16</source>
          <target state="translated">NPY_INT16</target>
        </trans-unit>
        <trans-unit id="d1f68bc9f8e8da069fc67a0cce95dc24da2de0db" translate="yes" xml:space="preserve">
          <source>NPY_INT32</source>
          <target state="translated">NPY_INT32</target>
        </trans-unit>
        <trans-unit id="13c6656ee10bef572e65aa1f69891a24030d6b2e" translate="yes" xml:space="preserve">
          <source>NPY_INT64</source>
          <target state="translated">NPY_INT64</target>
        </trans-unit>
        <trans-unit id="0421d46f2032ffa9c77f0b5d2c6a9279f4640c8b" translate="yes" xml:space="preserve">
          <source>NPY_INT8</source>
          <target state="translated">NPY_INT8</target>
        </trans-unit>
        <trans-unit id="28fb13870588b31f7e8ef953a5e1fac1e4dcbd72" translate="yes" xml:space="preserve">
          <source>NPY_INTP</source>
          <target state="translated">NPY_INTP</target>
        </trans-unit>
        <trans-unit id="0a3e136541d1b393cd74baa63288f18e1f7d6d0f" translate="yes" xml:space="preserve">
          <source>NPY_ITEM_HASOBJECT</source>
          <target state="translated">NPY_ITEM_HASOBJECT</target>
        </trans-unit>
        <trans-unit id="add14360987a70b070e6ee2cf7d6c1f28db11c8c" translate="yes" xml:space="preserve">
          <source>NPY_ITEM_IS_POINTER</source>
          <target state="translated">NPY_ITEM_IS_POINTER</target>
        </trans-unit>
        <trans-unit id="951b512c573a16b82dbf4d9988144744b36d6aa6" translate="yes" xml:space="preserve">
          <source>NPY_ITER_ALIGNED</source>
          <target state="translated">NPY_ITER_ALIGNED</target>
        </trans-unit>
        <trans-unit id="d503366ef84d1f87d6d64e70e2867df203bb7e9a" translate="yes" xml:space="preserve">
          <source>NPY_ITER_ALLOCATE</source>
          <target state="translated">NPY_ITER_ALLOCATE</target>
        </trans-unit>
        <trans-unit id="3861be794a7c5c6a5b45b50623091414188cac12" translate="yes" xml:space="preserve">
          <source>NPY_ITER_ARRAYMASK</source>
          <target state="translated">NPY_ITER_ARRAYMASK</target>
        </trans-unit>
        <trans-unit id="eb80262ed9f6ec7d9bc9b37ace10951d5fd76283" translate="yes" xml:space="preserve">
          <source>NPY_ITER_BUFFERED</source>
          <target state="translated">NPY_ITER_BUFFERED</target>
        </trans-unit>
        <trans-unit id="75f4f0128425d9bd99d8425d20d43330e01c1450" translate="yes" xml:space="preserve">
          <source>NPY_ITER_COMMON_DTYPE</source>
          <target state="translated">NPY_ITER_COMMON_DTYPE</target>
        </trans-unit>
        <trans-unit id="e3846d90f90dbff1dd021fd9f2ba76d6532ad143" translate="yes" xml:space="preserve">
          <source>NPY_ITER_CONTIG</source>
          <target state="translated">NPY_ITER_CONTIG</target>
        </trans-unit>
        <trans-unit id="1a53187fb36f46479ac1c68c0dd17386f818b95e" translate="yes" xml:space="preserve">
          <source>NPY_ITER_COPY</source>
          <target state="translated">NPY_ITER_COPY</target>
        </trans-unit>
        <trans-unit id="6522a3f5d006b07601c1404c3367bd53f060cf4c" translate="yes" xml:space="preserve">
          <source>NPY_ITER_COPY_IF_OVERLAP</source>
          <target state="translated">NPY_ITER_COPY_IF_OVERLAP</target>
        </trans-unit>
        <trans-unit id="e2a6b5c6108c9390c915d11a0195f7bba6bd2183" translate="yes" xml:space="preserve">
          <source>NPY_ITER_DELAY_BUFALLOC</source>
          <target state="translated">NPY_ITER_DELAY_BUFALLOC</target>
        </trans-unit>
        <trans-unit id="09e15fd792a1f362fe072ea079c0c478f36a7356" translate="yes" xml:space="preserve">
          <source>NPY_ITER_DONT_NEGATE_STRIDES</source>
          <target state="translated">NPY_ITER_DONT_NEGATE_STRIDES</target>
        </trans-unit>
        <trans-unit id="adf6cd7f7db5000b4248853f45fa80e337726503" translate="yes" xml:space="preserve">
          <source>NPY_ITER_EXTERNAL_LOOP</source>
          <target state="translated">NPY_ITER_EXTERNAL_LOOP</target>
        </trans-unit>
        <trans-unit id="0bb09f985af3cb3889f3791933fa590ee14cb356" translate="yes" xml:space="preserve">
          <source>NPY_ITER_F_INDEX</source>
          <target state="translated">NPY_ITER_F_INDEX</target>
        </trans-unit>
        <trans-unit id="555a1e1460c23742cfca9272fe55f7990e5607cf" translate="yes" xml:space="preserve">
          <source>NPY_ITER_GROWINNER</source>
          <target state="translated">NPY_ITER_GROWINNER</target>
        </trans-unit>
        <trans-unit id="07debd32f9c4650079039d4f3bf74b66d3b4e55f" translate="yes" xml:space="preserve">
          <source>NPY_ITER_MULTI_INDEX</source>
          <target state="translated">NPY_ITER_MULTI_INDEX</target>
        </trans-unit>
        <trans-unit id="78d69e1cc1b9a06f3dca137714287863d362f56e" translate="yes" xml:space="preserve">
          <source>NPY_ITER_NBO</source>
          <target state="translated">NPY_ITER_NBO</target>
        </trans-unit>
        <trans-unit id="9399c909ab80667660ef0588d0ad8f850312f1ed" translate="yes" xml:space="preserve">
          <source>NPY_ITER_NO_BROADCAST</source>
          <target state="translated">NPY_ITER_NO_BROADCAST</target>
        </trans-unit>
        <trans-unit id="144e3567d0e3ae560c2a49bae772f841bc966c10" translate="yes" xml:space="preserve">
          <source>NPY_ITER_NO_SUBTYPE</source>
          <target state="translated">NPY_ITER_NO_SUBTYPE</target>
        </trans-unit>
        <trans-unit id="d6c2e133048a41b0ffc16c86dadafe096ccd8393" translate="yes" xml:space="preserve">
          <source>NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE</source>
          <target state="translated">NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE</target>
        </trans-unit>
        <trans-unit id="86af273b1fdd7d4cb865bf64d1f2040354bd327d" translate="yes" xml:space="preserve">
          <source>NPY_ITER_RANGED</source>
          <target state="translated">NPY_ITER_RANGED</target>
        </trans-unit>
        <trans-unit id="7971fb00574c81fb34409364c146473c56dbf8dc" translate="yes" xml:space="preserve">
          <source>NPY_ITER_READONLY</source>
          <target state="translated">NPY_ITER_READONLY</target>
        </trans-unit>
        <trans-unit id="d30f5beecb8739336ec9a52ba0114e55e975198b" translate="yes" xml:space="preserve">
          <source>NPY_ITER_REDUCE_OK</source>
          <target state="translated">NPY_ITER_REDUCE_OK</target>
        </trans-unit>
        <trans-unit id="502b3424abf58dbb3d1ceb433a47e81d8b0e3917" translate="yes" xml:space="preserve">
          <source>NPY_ITER_REFS_OK</source>
          <target state="translated">NPY_ITER_REFS_OK</target>
        </trans-unit>
        <trans-unit id="36638f67e4efec772c894ad29e6156e8d16849e0" translate="yes" xml:space="preserve">
          <source>NPY_ITER_UPDATEIFCOPY</source>
          <target state="translated">NPY_ITER_UPDATEIFCOPY</target>
        </trans-unit>
        <trans-unit id="5d7333bc90727e1291399c10ef4e65cff1a56a77" translate="yes" xml:space="preserve">
          <source>NPY_ITER_WRITEMASKED</source>
          <target state="translated">NPY_ITER_WRITEMASKED</target>
        </trans-unit>
        <trans-unit id="116e43226bff43a6b828a35ce3aa5e4b45c3a521" translate="yes" xml:space="preserve">
          <source>NPY_ITER_WRITEONLY</source>
          <target state="translated">NPY_ITER_WRITEONLY</target>
        </trans-unit>
        <trans-unit id="c59890574c7265c43cf00e61d54cfeca26a23d1d" translate="yes" xml:space="preserve">
          <source>NPY_ITER_ZEROSIZE_OK</source>
          <target state="translated">NPY_ITER_ZEROSIZE_OK</target>
        </trans-unit>
        <trans-unit id="7b539733fdc41a617f0e75bf3fc61058d2ef5dd3" translate="yes" xml:space="preserve">
          <source>NPY_KEEPORDER</source>
          <target state="translated">NPY_KEEPORDER</target>
        </trans-unit>
        <trans-unit id="b930102f97091392950b021dc9057355aaad78a4" translate="yes" xml:space="preserve">
          <source>NPY_LIST_PICKLE</source>
          <target state="translated">NPY_LIST_PICKLE</target>
        </trans-unit>
        <trans-unit id="d82ed442cc074c6da2981d2f67d1b4419d87e14d" translate="yes" xml:space="preserve">
          <source>NPY_LITTLE_ENDIAN</source>
          <target state="translated">NPY_LITTLE_ENDIAN</target>
        </trans-unit>
        <trans-unit id="5b5d7aa2496f5a64eada54a95b44f0474550349b" translate="yes" xml:space="preserve">
          <source>NPY_LOG10E</source>
          <target state="translated">NPY_LOG10E</target>
        </trans-unit>
        <trans-unit id="7aab830d18a0705fa295f7782d2599fb5ad73d56" translate="yes" xml:space="preserve">
          <source>NPY_LOG2E</source>
          <target state="translated">NPY_LOG2E</target>
        </trans-unit>
        <trans-unit id="aa9cf538a1405fe5aea6d8187f8605dc710d0394" translate="yes" xml:space="preserve">
          <source>NPY_LOGE10</source>
          <target state="translated">NPY_LOGE10</target>
        </trans-unit>
        <trans-unit id="17eb50a24cf39c27e3fc6aeea6dd0bd029987cda" translate="yes" xml:space="preserve">
          <source>NPY_LOGE2</source>
          <target state="translated">NPY_LOGE2</target>
        </trans-unit>
        <trans-unit id="f10cccd0bdbf755ac259ccb0fee661b68e74bb3f" translate="yes" xml:space="preserve">
          <source>NPY_LONG</source>
          <target state="translated">NPY_LONG</target>
        </trans-unit>
        <trans-unit id="b99928355baa342b7d18f1ad3e75d2de96afda93" translate="yes" xml:space="preserve">
          <source>NPY_LONGDOUBLE</source>
          <target state="translated">NPY_LONGDOUBLE</target>
        </trans-unit>
        <trans-unit id="b4eca3253d6bc931e09477160aac8f7327b12f46" translate="yes" xml:space="preserve">
          <source>NPY_LONGLONG</source>
          <target state="translated">NPY_LONGLONG</target>
        </trans-unit>
        <trans-unit id="80b08aea8c13730920c447564c89076770dc86c6" translate="yes" xml:space="preserve">
          <source>NPY_LOOP_END_THREADS</source>
          <target state="translated">NPY_LOOP_END_THREADS</target>
        </trans-unit>
        <trans-unit id="0afdd98d0e7a829fca082e217fa673cfc8a2b5ff" translate="yes" xml:space="preserve">
          <source>NPY_MASK</source>
          <target state="translated">NPY_MASK</target>
        </trans-unit>
        <trans-unit id="c90549506655105cbb987e1070987555834fa318" translate="yes" xml:space="preserve">
          <source>NPY_MAXDIMS</source>
          <target state="translated">NPY_MAXDIMS</target>
        </trans-unit>
        <trans-unit id="64982cb8261cfbf5f8f8fa1f5c7f201e509cd37c" translate="yes" xml:space="preserve">
          <source>NPY_MAX_BUFSIZE</source>
          <target state="translated">NPY_MAX_BUFSIZE</target>
        </trans-unit>
        <trans-unit id="b186a355f206e3e61c0a25fd922ff9e771690671" translate="yes" xml:space="preserve">
          <source>NPY_MIN_BUFSIZE</source>
          <target state="translated">NPY_MIN_BUFSIZE</target>
        </trans-unit>
        <trans-unit id="b58f11f26efe8aa1400ef46cdeb45135e04c290d" translate="yes" xml:space="preserve">
          <source>NPY_NAN</source>
          <target state="translated">NPY_NAN</target>
        </trans-unit>
        <trans-unit id="19a2ab6b90aae9b5c684cbf64e4490e85f3790bf" translate="yes" xml:space="preserve">
          <source>NPY_NEEDS_INIT</source>
          <target state="translated">NPY_NEEDS_INIT</target>
        </trans-unit>
        <trans-unit id="765b53035063832be152ddff7841354268e5f2f3" translate="yes" xml:space="preserve">
          <source>NPY_NEEDS_PYAPI</source>
          <target state="translated">NPY_NEEDS_PYAPI</target>
        </trans-unit>
        <trans-unit id="94f34cdc34fe8074494dd904e5f1d723755b2af8" translate="yes" xml:space="preserve">
          <source>NPY_NEIGHBORHOOD_ITER_CIRCULAR_PADDING: circular padding. Outside bounds values will be as if the array was repeated. For example, for the array [1, 2, 3, 4], x[-2] will be 3, x[-2] will be 4, x[4] will be 1, x[5] will be 2, etc&amp;hellip;</source>
          <target state="translated">NPY_NEIGHBORHOOD_ITER_CIRCULAR_PADDING : 원형 패딩. 외부 경계 값은 배열이 반복 된 것처럼됩니다. 예를 들어, 배열 [1, 2, 3, 4]의 경우 x [-2]는 3이되고 x [-2]는 4가되고 x [4]는 1이되고 x [5]는 2가됩니다. 기타&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="7ec4bbcbebf55d8a260446399663bf95eafa64a8" translate="yes" xml:space="preserve">
          <source>NPY_NEIGHBORHOOD_ITER_CONSTANT_PADDING: constant padding. Outside bounds values will be the same as the first item in fill_value.</source>
          <target state="translated">NPY_NEIGHBORHOOD_ITER_CONSTANT_PADDING : 상수 패딩. 범위를 벗어난 값은 fill_value의 첫 번째 항목과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f8df6e0dfd643545d8608a17e2f3ae7fe6a11675" translate="yes" xml:space="preserve">
          <source>NPY_NEIGHBORHOOD_ITER_MIRROR_PADDING: mirror padding. Outside bounds values will be as if the array items were mirrored. For example, for the array [1, 2, 3, 4], x[-2] will be 2, x[-2] will be 1, x[4] will be 4, x[5] will be 1, etc&amp;hellip;</source>
          <target state="translated">NPY_NEIGHBORHOOD_ITER_MIRROR_PADDING : 미러 패딩. 범위를 벗어난 값은 배열 항목이 미러링 된 것과 같습니다. 예를 들어, 배열 [1, 2, 3, 4]의 경우 x [-2]는 2, x [-2]는 1, x [4]는 4, x [5]는 1, 기타&amp;hellip;</target>
        </trans-unit>
        <trans-unit id="fb1e302bb07ace1a66ce9313a05ad5827a4b01da" translate="yes" xml:space="preserve">
          <source>NPY_NEIGHBORHOOD_ITER_ONE_PADDING: one padding, Outside bounds values will be 1.</source>
          <target state="translated">NPY_NEIGHBORHOOD_ITER_ONE_PADDING : 패딩 하나, 외부 경계 값은 1입니다.</target>
        </trans-unit>
        <trans-unit id="b645918dbfbe7aa8484c343f033ead3c5f2f26cf" translate="yes" xml:space="preserve">
          <source>NPY_NEIGHBORHOOD_ITER_ZERO_PADDING: zero padding. Outside bounds values will be 0.</source>
          <target state="translated">NPY_NEIGHBORHOOD_ITER_ZERO_PADDING : 패딩이 없습니다. 범위를 벗어난 값은 0입니다.</target>
        </trans-unit>
        <trans-unit id="be76b1061b6bbc38030d74a5b2eb5c90a04dcf13" translate="yes" xml:space="preserve">
          <source>NPY_NOTYPE</source>
          <target state="translated">NPY_NOTYPE</target>
        </trans-unit>
        <trans-unit id="07dfad5c7de4b84f199211989aae8639dd3f19e1" translate="yes" xml:space="preserve">
          <source>NPY_NTYPES</source>
          <target state="translated">NPY_NTYPES</target>
        </trans-unit>
        <trans-unit id="7ea5ff7e627a17c98946f6d6911efe7293175f3e" translate="yes" xml:space="preserve">
          <source>NPY_NZERO</source>
          <target state="translated">NPY_NZERO</target>
        </trans-unit>
        <trans-unit id="c2140d8d738013bca7a5fa347638b4d089a1c282" translate="yes" xml:space="preserve">
          <source>NPY_OBJECT</source>
          <target state="translated">NPY_OBJECT</target>
        </trans-unit>
        <trans-unit id="61c1f0e02099ee92532122ccd8c5d4e3e7623b37" translate="yes" xml:space="preserve">
          <source>NPY_OBJECT_DTYPE_FLAGS</source>
          <target state="translated">NPY_OBJECT_DTYPE_FLAGS</target>
        </trans-unit>
        <trans-unit id="bee79cf8509d85905ebb9b6892b00ceaaf6bc4b5" translate="yes" xml:space="preserve">
          <source>NPY_ORDER</source>
          <target state="translated">NPY_ORDER</target>
        </trans-unit>
        <trans-unit id="7480b7495bd93607e0adab34e25b5ec2fe3c2a7f" translate="yes" xml:space="preserve">
          <source>NPY_OUT_ARRAY</source>
          <target state="translated">NPY_OUT_ARRAY</target>
        </trans-unit>
        <trans-unit id="4853d086e9afc879a91103aa14a84fcb82f9b6fb" translate="yes" xml:space="preserve">
          <source>NPY_PI</source>
          <target state="translated">NPY_PI</target>
        </trans-unit>
        <trans-unit id="b29387549f8ad8f987d0fb8ec127c377fa756fc0" translate="yes" xml:space="preserve">
          <source>NPY_PI_2</source>
          <target state="translated">NPY_PI_2</target>
        </trans-unit>
        <trans-unit id="c405e8d2836cb8981b4c416dac630f478df64669" translate="yes" xml:space="preserve">
          <source>NPY_PI_4</source>
          <target state="translated">NPY_PI_4</target>
        </trans-unit>
        <trans-unit id="7410e9436af8a54d284e4d5ba6437fec38feb391" translate="yes" xml:space="preserve">
          <source>NPY_PZERO</source>
          <target state="translated">NPY_PZERO</target>
        </trans-unit>
        <trans-unit id="f4f91fa01dd656fb4cc14772d0a8a2f222b13bd9" translate="yes" xml:space="preserve">
          <source>NPY_SAFE_CASTING</source>
          <target state="translated">NPY_SAFE_CASTING</target>
        </trans-unit>
        <trans-unit id="38936f82ec1dc5b02b184e352b57d654b7702bd1" translate="yes" xml:space="preserve">
          <source>NPY_SAME_KIND_CASTING</source>
          <target state="translated">NPY_SAME_KIND_CASTING</target>
        </trans-unit>
        <trans-unit id="723af35795607e2d6c45f53cce80f34e8afcc0ed" translate="yes" xml:space="preserve">
          <source>NPY_SCALARKIND</source>
          <target state="translated">NPY_SCALARKIND</target>
        </trans-unit>
        <trans-unit id="900f6d197e8cae5106f53d1fde0704ea946bccc2" translate="yes" xml:space="preserve">
          <source>NPY_SCALAR_PRIORITY</source>
          <target state="translated">NPY_SCALAR_PRIORITY</target>
        </trans-unit>
        <trans-unit id="dc6e723cf42ed78834dfd3a704cf29bdbcb105cf" translate="yes" xml:space="preserve">
          <source>NPY_SHORT</source>
          <target state="translated">NPY_SHORT</target>
        </trans-unit>
        <trans-unit id="f3c652be009e0b3b7cd600711d5a78b7c3e9762e" translate="yes" xml:space="preserve">
          <source>NPY_SIGINT_OFF</source>
          <target state="translated">NPY_SIGINT_OFF</target>
        </trans-unit>
        <trans-unit id="7f3fd6e320e922cfa24c562187d49e0c0ae53762" translate="yes" xml:space="preserve">
          <source>NPY_SIGINT_ON</source>
          <target state="translated">NPY_SIGINT_ON</target>
        </trans-unit>
        <trans-unit id="9188b69c370334915f72069e382276e674f7fed3" translate="yes" xml:space="preserve">
          <source>NPY_SIGJMP_BUF</source>
          <target state="translated">NPY_SIGJMP_BUF</target>
        </trans-unit>
        <trans-unit id="6132eef50a8b80307588ce1409e897167f80718a" translate="yes" xml:space="preserve">
          <source>NPY_SIGLONGJMP</source>
          <target state="translated">NPY_SIGLONGJMP</target>
        </trans-unit>
        <trans-unit id="717174397106f6d8c4ba8504395e08a468805768" translate="yes" xml:space="preserve">
          <source>NPY_SIGSETJMP</source>
          <target state="translated">NPY_SIGSETJMP</target>
        </trans-unit>
        <trans-unit id="062a534489d75645f7c4a45af01e65d54b1d7fdd" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_DOUBLE</source>
          <target state="translated">NPY_SIZEOF_DOUBLE</target>
        </trans-unit>
        <trans-unit id="ddfcfc9b46e434249b7e1692afbc5d15eed6e962" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_FLOAT</source>
          <target state="translated">NPY_SIZEOF_FLOAT</target>
        </trans-unit>
        <trans-unit id="9db9e843ae2f790d707d93d52ef66ce770e861a5" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_INT</source>
          <target state="translated">NPY_SIZEOF_INT</target>
        </trans-unit>
        <trans-unit id="21119a50243e3b0178c4b00e32e011d04b3c3aa6" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_LONG</source>
          <target state="translated">NPY_SIZEOF_LONG</target>
        </trans-unit>
        <trans-unit id="36ee2253a56f84d52aaa1523f491843c16c6e36f" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_LONGLONG</source>
          <target state="translated">NPY_SIZEOF_LONGLONG</target>
        </trans-unit>
        <trans-unit id="d1b5e3fc754fe03235a7b81322dc029111227273" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_LONG_DOUBLE</source>
          <target state="translated">NPY_SIZEOF_LONG_DOUBLE</target>
        </trans-unit>
        <trans-unit id="b22f6b875740631ef2de70f6ec463aba47de42e8" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_PY_INTPTR_T</source>
          <target state="translated">NPY_SIZEOF_PY_INTPTR_T</target>
        </trans-unit>
        <trans-unit id="4fa0c2e5c7bac26ee0f40824e499b2bc6547d2bd" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_PY_LONG_LONG</source>
          <target state="translated">NPY_SIZEOF_PY_LONG_LONG</target>
        </trans-unit>
        <trans-unit id="21e23497741a38f3f315f897c5b6fb87f57d9abb" translate="yes" xml:space="preserve">
          <source>NPY_SIZEOF_SHORT</source>
          <target state="translated">NPY_SIZEOF_SHORT</target>
        </trans-unit>
        <trans-unit id="f7be51fd1b23ec24e89af35b5f5b0a318ee6681c" translate="yes" xml:space="preserve">
          <source>NPY_STRING</source>
          <target state="translated">NPY_STRING</target>
        </trans-unit>
        <trans-unit id="c282a1d100ab18644a9b0da0f04342e16fde902d" translate="yes" xml:space="preserve">
          <source>NPY_SUBTYPE_PRIORITY</source>
          <target state="translated">NPY_SUBTYPE_PRIORITY</target>
        </trans-unit>
        <trans-unit id="6b0fa8142e98f763ab8b87fd9dc2e3cd20562691" translate="yes" xml:space="preserve">
          <source>NPY_SUCCEED</source>
          <target state="translated">NPY_SUCCEED</target>
        </trans-unit>
        <trans-unit id="12ee9f7c5d6ef66f1a6c0f34fa26e531ce3ae1b0" translate="yes" xml:space="preserve">
          <source>NPY_TIMEDELTA</source>
          <target state="translated">NPY_TIMEDELTA</target>
        </trans-unit>
        <trans-unit id="7e3c963f739b307f23e4b34bb0ce64349ec685a8" translate="yes" xml:space="preserve">
          <source>NPY_TRUE</source>
          <target state="translated">NPY_TRUE</target>
        </trans-unit>
        <trans-unit id="c1690cbd75cc0ac74fc451f58915cafc47128281" translate="yes" xml:space="preserve">
          <source>NPY_TYPES</source>
          <target state="translated">NPY_TYPES</target>
        </trans-unit>
        <trans-unit id="39615da24848825c5a7392d962b2477f24ec4807" translate="yes" xml:space="preserve">
          <source>NPY_UBYTE</source>
          <target state="translated">NPY_UBYTE</target>
        </trans-unit>
        <trans-unit id="edc0008780e7f23d27809736552c21d91351467a" translate="yes" xml:space="preserve">
          <source>NPY_UINT</source>
          <target state="translated">NPY_UINT</target>
        </trans-unit>
        <trans-unit id="4d8c43477a4514ba8d814ed9658279cbb22d4c9b" translate="yes" xml:space="preserve">
          <source>NPY_UINT16</source>
          <target state="translated">NPY_UINT16</target>
        </trans-unit>
        <trans-unit id="0a7a42a36d93e0aafd38f45b5b2dcebb7ca97378" translate="yes" xml:space="preserve">
          <source>NPY_UINT32</source>
          <target state="translated">NPY_UINT32</target>
        </trans-unit>
        <trans-unit id="41721af31acd9e813df41335a21cddf4dbe68bb9" translate="yes" xml:space="preserve">
          <source>NPY_UINT64</source>
          <target state="translated">NPY_UINT64</target>
        </trans-unit>
        <trans-unit id="9653c22566cfa0445a8f3e893bad4b01b6c19eb8" translate="yes" xml:space="preserve">
          <source>NPY_UINT8</source>
          <target state="translated">NPY_UINT8</target>
        </trans-unit>
        <trans-unit id="fa88c7591052839c4d45a4ca3501f8a47d7c2225" translate="yes" xml:space="preserve">
          <source>NPY_UINTP</source>
          <target state="translated">NPY_UINTP</target>
        </trans-unit>
        <trans-unit id="ddc0072166c50a8e097e0fc66efa8b9b53b1a816" translate="yes" xml:space="preserve">
          <source>NPY_ULONG</source>
          <target state="translated">NPY_ULONG</target>
        </trans-unit>
        <trans-unit id="d404f8c30c6fd0908c3a4cfdbbcadf5aec35a913" translate="yes" xml:space="preserve">
          <source>NPY_ULONGLONG</source>
          <target state="translated">NPY_ULONGLONG</target>
        </trans-unit>
        <trans-unit id="28c42f9583182d87a074f5e857ce5673621c172b" translate="yes" xml:space="preserve">
          <source>NPY_UNICODE</source>
          <target state="translated">NPY_UNICODE</target>
        </trans-unit>
        <trans-unit id="dccde0ebd5101bcbb89de1ce736c02228004420d" translate="yes" xml:space="preserve">
          <source>NPY_UNLIKELY</source>
          <target state="translated">NPY_UNLIKELY</target>
        </trans-unit>
        <trans-unit id="30ea47c9e2fac6de756b8b7230727b9e766c239f" translate="yes" xml:space="preserve">
          <source>NPY_UNSAFE_CASTING</source>
          <target state="translated">NPY_UNSAFE_CASTING</target>
        </trans-unit>
        <trans-unit id="55b4d55e586f9a4a02f3278716cad943a193e998" translate="yes" xml:space="preserve">
          <source>NPY_UNUSED</source>
          <target state="translated">NPY_UNUSED</target>
        </trans-unit>
        <trans-unit id="723ea141fddc3b6b4b02b195ce3665b788983b5e" translate="yes" xml:space="preserve">
          <source>NPY_USERDEF</source>
          <target state="translated">NPY_USERDEF</target>
        </trans-unit>
        <trans-unit id="f5a8b36c7d83a162ab0006d08d8ac0e0f156d23d" translate="yes" xml:space="preserve">
          <source>NPY_USE_GETITEM</source>
          <target state="translated">NPY_USE_GETITEM</target>
        </trans-unit>
        <trans-unit id="b89bd57f4f8e5cc1cba37a891c4c8410316aac6b" translate="yes" xml:space="preserve">
          <source>NPY_USE_SETITEM</source>
          <target state="translated">NPY_USE_SETITEM</target>
        </trans-unit>
        <trans-unit id="cc79e8dd62b2b6a6e7449b9a4d751846101bea34" translate="yes" xml:space="preserve">
          <source>NPY_USHORT</source>
          <target state="translated">NPY_USHORT</target>
        </trans-unit>
        <trans-unit id="098f027d0e504c1dfc633885e430313882c636c7" translate="yes" xml:space="preserve">
          <source>NPY_VERSION</source>
          <target state="translated">NPY_VERSION</target>
        </trans-unit>
        <trans-unit id="c2162e27e826af36c6b4eeaf95829ccccec2d6d3" translate="yes" xml:space="preserve">
          <source>NPY_VOID</source>
          <target state="translated">NPY_VOID</target>
        </trans-unit>
        <trans-unit id="2028b3d403b5722a2b0d0db2d4b911180edb5cb1" translate="yes" xml:space="preserve">
          <source>NPY_WRAP</source>
          <target state="translated">NPY_WRAP</target>
        </trans-unit>
        <trans-unit id="dec97ffbeb62ca7f1d28e38b4bfeb069149244fa" translate="yes" xml:space="preserve">
          <source>NZERO : Defines negative zero.</source>
          <target state="translated">NZERO : 음의 0을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="1a8a27b973da427541744ef5f7eded5c3fdceec5" translate="yes" xml:space="preserve">
          <source>NaN values are propagated, that is if at least one item is NaN, the corresponding max value will be NaN as well. To ignore NaN values (MATLAB behavior), please use nanmax.</source>
          <target state="translated">NaN 값이 전파됩니다. 즉, 하나 이상의 항목이 NaN 인 경우 해당 최대 값도 NaN이됩니다. NaN 값 (MATLAB 동작)을 무시하려면 nanmax를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cfe2895510d66df90c24ea144e4bfbca9d1542d3" translate="yes" xml:space="preserve">
          <source>NaN values are propagated, that is if at least one item is NaN, the corresponding min value will be NaN as well. To ignore NaN values (MATLAB behavior), please use nanmin.</source>
          <target state="translated">NaN 값이 전파됩니다. 즉, 하나 이상의 항목이 NaN 인 경우 해당하는 최소값도 NaN이됩니다. NaN 값 (MATLAB 동작)을 무시하려면 nanmin을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="976e203d4327fea36cd374f3eed8964477674242" translate="yes" xml:space="preserve">
          <source>Name of module(s) whose docstrings to go through.</source>
          <target state="translated">docstring이 통과 할 모듈의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="40abec161decd95c4a4db2e6e216375078b6b6d2" translate="yes" xml:space="preserve">
          <source>Name of the extension.</source>
          <target state="translated">확장명입니다.</target>
        </trans-unit>
        <trans-unit id="ea8c2185be76bdf8ef5645d6fdbcb1872d750862" translate="yes" xml:space="preserve">
          <source>Name of the installed library.</source>
          <target state="translated">설치된 라이브러리의 이름</target>
        </trans-unit>
        <trans-unit id="27c0ec46fe2e1efbac60d15fc8a04749563c4cf5" translate="yes" xml:space="preserve">
          <source>Name of the library, which can have &amp;lsquo;lib&amp;rsquo; as a prefix, but without an extension.</source>
          <target state="translated">접두사로 'lib'를 사용할 수 있지만 확장자가없는 라이브러리의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="42a267dab62000699523424cadc903a6f5a1925d" translate="yes" xml:space="preserve">
          <source>Name of the subpackage to get the configuration. &amp;lsquo;*&amp;rsquo; in subpackage_name is handled as a wildcard.</source>
          <target state="translated">구성을 가져올 서브 패키지의 이름입니다. subpackage_name의 '*'는 와일드 카드로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="0f1b03c4b6909300a55fd037cae6deb91eda8170" translate="yes" xml:space="preserve">
          <source>Name of this function adheres to Python 3.2+ reference, but should work in all versions down to 2.6.</source>
          <target state="translated">이 함수의 이름은 Python 3.2+ 참조를 준수하지만 2.6 이하의 모든 버전에서 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="3c85ca1037489f94c6ef34b11f180eadfd7275e0" translate="yes" xml:space="preserve">
          <source>Named repeat rule</source>
          <target state="translated">명명 된 반복 규칙</target>
        </trans-unit>
        <trans-unit id="368b76becbd7e27da0e0624a1460ac594f34c1e3" translate="yes" xml:space="preserve">
          <source>Named tuple containing CFFI wrapper</source>
          <target state="translated">CFFI 래퍼를 포함하는 명명 된 튜플</target>
        </trans-unit>
        <trans-unit id="916e8359209758e3636cc7629adf25335926e5f1" translate="yes" xml:space="preserve">
          <source>Named tuple containing ctypes wrapper</source>
          <target state="translated">ctypes 래퍼를 포함하는 명명 된 튜플</target>
        </trans-unit>
        <trans-unit id="13231ecaba15980966dbe90ac1a511d180555212" translate="yes" xml:space="preserve">
          <source>Natural logarithm of 10 (</source>
          <target state="translated">자연 로그 10 (</target>
        </trans-unit>
        <trans-unit id="456d7bdd5982d22f33ab5610f1fcaa19a6b255b3" translate="yes" xml:space="preserve">
          <source>Natural logarithm of 2 (</source>
          <target state="translated">2의 자연 로그</target>
        </trans-unit>
        <trans-unit id="f45b16bd2c2e2f912c62883b92010d94f1a0527c" translate="yes" xml:space="preserve">
          <source>Natural logarithm of &lt;code&gt;1 + x&lt;/code&gt;, element-wise. This is a scalar if &lt;code&gt;x&lt;/code&gt; is a scalar.</source>
          <target state="translated">요소 별 &lt;code&gt;1 + x&lt;/code&gt; 의 자연 로그 &lt;code&gt;x&lt;/code&gt; 가 스칼라 인 경우 스칼라입니다.</target>
        </trans-unit>
        <trans-unit id="56bba5168d2d3a43ac95c113f4be22cece09a199" translate="yes" xml:space="preserve">
          <source>Natural logarithm, element-wise.</source>
          <target state="translated">요소 별 자연 로그.</target>
        </trans-unit>
        <trans-unit id="24ad64c3269250006e40388ed78cd214c08e4b7e" translate="yes" xml:space="preserve">
          <source>Nditer code: Since this often calls the strided copy code, it must check for &amp;ldquo;uint alignment&amp;rdquo;.</source>
          <target state="translated">Nditer 코드 : 이것은 종종 strided copy 코드를 호출하므로 &quot;uint alignment&quot;를 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="0d99cbe950a65be4984296cf302a77132ddb5c11" translate="yes" xml:space="preserve">
          <source>Nearly identical to &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt;&lt;code&gt;PyArray_FromAny&lt;/code&gt;&lt;/a&gt; (&amp;hellip;) except &lt;em&gt;requirements&lt;/em&gt; can contain &lt;a href=&quot;#c.NPY_ARRAY_NOTSWAPPED&quot;&gt;&lt;code&gt;NPY_ARRAY_NOTSWAPPED&lt;/code&gt;&lt;/a&gt; (over-riding the specification in &lt;em&gt;dtype&lt;/em&gt;) and &lt;a href=&quot;#c.NPY_ARRAY_ELEMENTSTRIDES&quot;&gt;&lt;code&gt;NPY_ARRAY_ELEMENTSTRIDES&lt;/code&gt;&lt;/a&gt; which indicates that the array should be aligned in the sense that the strides are multiples of the element size.</source>
          <target state="translated">&lt;em&gt;요구 사항에 &lt;/em&gt;&lt;a href=&quot;#c.NPY_ARRAY_NOTSWAPPED&quot;&gt; &lt;code&gt;NPY_ARRAY_NOTSWAPPED&lt;/code&gt; &lt;/a&gt; ( dtype 의 사양을 &lt;em&gt;재정의 함&lt;/em&gt; )와 &lt;a href=&quot;#c.NPY_ARRAY_ELEMENTSTRIDES&quot;&gt; &lt;code&gt;NPY_ARRAY_ELEMENTSTRIDES&lt;/code&gt; &lt;/a&gt; 가 포함될 수 있다는 점을 제외하고 &lt;a href=&quot;#c.PyArray_FromAny&quot;&gt; &lt;code&gt;PyArray_FromAny&lt;/code&gt; &lt;/a&gt; (&amp;hellip;)와 거의 동일하며 , 보폭이 요소 크기의 배수라는 점에서 배열을 정렬해야 함을 나타냅니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="3ed35edb6c5b09bfa411d9db049d16fe1142a1fc" translate="yes" xml:space="preserve">
          <source>Negative &lt;em&gt;i&lt;/em&gt; and &lt;em&gt;j&lt;/em&gt; are interpreted as &lt;em&gt;n + i&lt;/em&gt; and &lt;em&gt;n + j&lt;/em&gt; where &lt;em&gt;n&lt;/em&gt; is the number of elements in the corresponding dimension. Negative &lt;em&gt;k&lt;/em&gt; makes stepping go towards smaller indices.</source>
          <target state="translated">음수 &lt;em&gt;i&lt;/em&gt; 및 &lt;em&gt;j&lt;/em&gt; 는 &lt;em&gt;n + i&lt;/em&gt; 및 &lt;em&gt;n + j&lt;/em&gt; 로 해석되며 , 여기서 &lt;em&gt;n&lt;/em&gt; 은 해당 차원의 요소 수입니다. 음수 &lt;em&gt;k&lt;/em&gt; 는 스테핑을 더 작은 지수로 옮깁니다.</target>
        </trans-unit>
        <trans-unit id="cbc6aae97ca20bcb3198671594cdfa7c2443be75" translate="yes" xml:space="preserve">
          <source>Negative, decreasing, and complex inputs are allowed:</source>
          <target state="translated">음수, 감소 및 복잡한 입력이 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="4adacacf6118c3709ed61abc23793abc96c8717d" translate="yes" xml:space="preserve">
          <source>Neighborhood iterator</source>
          <target state="translated">이웃 반복자</target>
        </trans-unit>
        <trans-unit id="d8dfca473c116cc811f805f2ae47c35f3fec6321" translate="yes" xml:space="preserve">
          <source>Neighborhood iterators are subclasses of the iterator object, and can be used to iter over a neighborhood of a point. For example, you may want to iterate over every voxel of a 3d image, and for every such voxel, iterate over an hypercube. Neighborhood iterator automatically handle boundaries, thus making this kind of code much easier to write than manual boundaries handling, at the cost of a slight overhead.</source>
          <target state="translated">이웃 반복자는 반복자 객체의 서브 클래스이며 점의 이웃을 반복하는 데 사용할 수 있습니다. 예를 들어, 3D 이미지의 모든 복셀을 반복하고 그러한 모든 복셀에 대해 하이퍼 큐브를 반복 할 수 있습니다. Neighborhood 반복자는 경계를 자동으로 처리하므로 약간의 오버 헤드 비용으로 이러한 유형의 코드를 수동 경계 처리보다 훨씬 쉽게 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="616eefe2686c871c01ce4c082e56ab62a97ff62c" translate="yes" xml:space="preserve">
          <source>Neither argument is complex-conjugated:</source>
          <target state="translated">어느 쪽의 주장도 복잡하게 결합되어 있지 않습니다 :</target>
        </trans-unit>
        <trans-unit id="58c55490f160a10ce66fb3ba65116eb49f0ec0e5" translate="yes" xml:space="preserve">
          <source>Nesting this context manager will work as expected when the forwarding rule is &amp;ldquo;always&amp;rdquo; (default). Unfiltered and unrecorded warnings will be passed out and be matched by the outer level. On the outmost level they will be printed (or caught by another warnings context). The forwarding rule argument can modify this behaviour.</source>
          <target state="translated">전달 규칙이 &quot;항상&quot;(기본값) 인 경우이 컨텍스트 관리자를 중첩하면 예상대로 작동합니다. 필터링되지 않고 기록되지 않은 경고는 전달되고 외부 수준과 일치합니다. 최하위 레벨에서 인쇄되거나 다른 경고 컨텍스트에 의해 포착됩니다. 전달 규칙 인수는이 동작을 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7985483741a688b60bf8e376856fb34e3a23c470" translate="yes" xml:space="preserve">
          <source>Never declare a non-pointer instance of the struct</source>
          <target state="translated">구조체의 포인터가 아닌 인스턴스를 선언하지 마십시오</target>
        </trans-unit>
        <trans-unit id="359bcf616ef070777f6e75a045811fa19d53b5d7" translate="yes" xml:space="preserve">
          <source>Never perform pointer arithmatic</source>
          <target state="translated">포인터 산술을 수행하지 마십시오</target>
        </trans-unit>
        <trans-unit id="7ac2caaec5aa9259816bcfde96f3922ab10fd8ce" translate="yes" xml:space="preserve">
          <source>Never perform pointer arithmetic</source>
          <target state="translated">포인터 산술을 수행하지 마십시오</target>
        </trans-unit>
        <trans-unit id="a65ce50fd9c1242c2a5073e8363c3709c956a51c" translate="yes" xml:space="preserve">
          <source>Never use &lt;code&gt;sizeof(PyUFuncObject)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sizeof(PyUFuncObject)&lt;/code&gt; 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="dc40b4325640ebd6d5f9bb5ba4d67ecfa6093e24" translate="yes" xml:space="preserve">
          <source>Never use &lt;code&gt;sizof(PyArray_Descr)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;sizof(PyArray_Descr)&lt;/code&gt; 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="7070214ffce34d23b7afd16ef2b37ef083393284" translate="yes" xml:space="preserve">
          <source>Never use semicolons after the threading support macros.</source>
          <target state="translated">스레딩 지원 매크로 후에 세미콜론을 사용하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="e32dff4a060dad5a565bcd1b38b35bf2ffa7fb0b" translate="yes" xml:space="preserve">
          <source>New &amp;lsquo;reduced&amp;rsquo;, &amp;lsquo;complete&amp;rsquo;, and &amp;lsquo;raw&amp;rsquo; options for mode were added in NumPy 1.8.0 and the old option &amp;lsquo;full&amp;rsquo; was made an alias of &amp;lsquo;reduced&amp;rsquo;. In addition the options &amp;lsquo;full&amp;rsquo; and &amp;lsquo;economic&amp;rsquo; were deprecated. Because &amp;lsquo;full&amp;rsquo; was the previous default and &amp;lsquo;reduced&amp;rsquo; is the new default, backward compatibility can be maintained by letting &lt;code&gt;mode&lt;/code&gt; default. The &amp;lsquo;raw&amp;rsquo; option was added so that LAPACK routines that can multiply arrays by q using the Householder reflectors can be used. Note that in this case the returned arrays are of type np.double or np.cdouble and the h array is transposed to be FORTRAN compatible. No routines using the &amp;lsquo;raw&amp;rsquo; return are currently exposed by numpy, but some are available in lapack_lite and just await the necessary work.</source>
          <target state="translated">NumPy 1.8.0에는 모드에 대한 새로운 '축소됨', '완료'및 '원시'옵션이 추가되었으며 이전 옵션 인 '전체'는 '감소됨'의 별칭이되었습니다. 또한 'full'및 'economic'옵션은 더 이상 사용되지 않습니다. 'full'이 이전 기본값이고 'reduced'가 새로운 기본값이므로 &lt;code&gt;mode&lt;/code&gt; default를 설정 하여 이전 버전과의 호환성을 유지할 수 있습니다 . 가정용 반사기를 사용하여 배열에 q를 곱할 수있는 LAPACK 루틴을 사용할 수 있도록 'raw'옵션이 추가되었습니다. 이 경우 반환 된 배열은 np.double 또는 np.cdouble 형식이며 h 배열은 FORTRAN 호환 가능하도록 바뀝니다. 'raw'리턴을 사용하는 루틴은 현재 numpy에 의해 노출되지 않지만 일부는 lapack_lite에서 사용할 수 있으며 필요한 작업을 기다립니다.</target>
        </trans-unit>
        <trans-unit id="1a0e8c6cd3c028bd2e05356bb8359f25dacf1900" translate="yes" xml:space="preserve">
          <source>New &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; object with the given change to the byte order.</source>
          <target state="translated">바이트 순서가 지정된 새로운 &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="f287856e3d51c21d5ea4b1fe501ebf681db8e842" translate="yes" xml:space="preserve">
          <source>New Basic RNGs</source>
          <target state="translated">새로운 기본 RNG</target>
        </trans-unit>
        <trans-unit id="2c2128005b22176a410cc4633d46460dd191aa7e" translate="yes" xml:space="preserve">
          <source>New Python Types Defined</source>
          <target state="translated">새로운 파이썬 타입 정의</target>
        </trans-unit>
        <trans-unit id="7e0f24a840910ce77406e6c3faa2578e0ee8b90e" translate="yes" xml:space="preserve">
          <source>New array holding the result. If &lt;code&gt;out&lt;/code&gt; was specified, &lt;code&gt;out&lt;/code&gt; is returned.</source>
          <target state="translated">결과를 보유하는 새로운 배열. 경우 &lt;code&gt;out&lt;/code&gt; 지정, &lt;code&gt;out&lt;/code&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="38a5ab042919ce6f9d90bed68a738e6b078703dd" translate="yes" xml:space="preserve">
          <source>New array object with the dtype reflecting given change to the byte order.</source>
          <target state="translated">주어진 바이트 순서 변경을 반영한 dtype의 새로운 배열 객체.</target>
        </trans-unit>
        <trans-unit id="71c51f79a440f52228e3edc751262a54d784d72f" translate="yes" xml:space="preserve">
          <source>New arrays can be constructed using the routines detailed in &lt;a href=&quot;routines.array-creation#routines-array-creation&quot;&gt;Array creation routines&lt;/a&gt;, and also by using the low-level &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt;&lt;code&gt;ndarray&lt;/code&gt;&lt;/a&gt; constructor:</source>
          <target state="translated">새로운 배열은 &lt;a href=&quot;routines.array-creation#routines-array-creation&quot;&gt;Array creation&lt;/a&gt; routines에 자세히 설명 된 루틴 과 하위 수준 &lt;a href=&quot;generated/numpy.ndarray#numpy.ndarray&quot;&gt; &lt;code&gt;ndarray&lt;/code&gt; &lt;/a&gt; 생성자를 사용하여 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d4fac23052b1dcb2b4624f5d9cba16c9e7c228c" translate="yes" xml:space="preserve">
          <source>New data types</source>
          <target state="translated">새로운 데이터 유형</target>
        </trans-unit>
        <trans-unit id="4ba85c7a6d9f8bb8efc5f21139a7cecc28876866" translate="yes" xml:space="preserve">
          <source>New dtype object with the given change to the byte order.</source>
          <target state="translated">바이트 순서가 지정된 새로운 dtype 객체.</target>
        </trans-unit>
        <trans-unit id="5de72a4252ab8f9cac47a6df57c940e02e2a54e8" translate="yes" xml:space="preserve">
          <source>New in version 1.10.</source>
          <target state="translated">버전 1.10의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="ee74779525ce6ea3a8b1fc727a0ddc5193261706" translate="yes" xml:space="preserve">
          <source>New in version 1.10.0.</source>
          <target state="translated">버전 1.10.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="2137c292e37fe9b62a7e56dcac5cca8d87c732c0" translate="yes" xml:space="preserve">
          <source>New in version 1.10.2.</source>
          <target state="translated">버전 1.10.2의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="b57cc8087c9358677643b8f46aefe5ea6a0ebecf" translate="yes" xml:space="preserve">
          <source>New in version 1.11.0.</source>
          <target state="translated">버전 1.11.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="1f52d8d8231fcffc9a4988e057ca01cae7f187ff" translate="yes" xml:space="preserve">
          <source>New in version 1.12.</source>
          <target state="translated">버전 1.12의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="2face774ecc2c81a3c162fc20b62b01c5a40600b" translate="yes" xml:space="preserve">
          <source>New in version 1.12.0.</source>
          <target state="translated">버전 1.12.0의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="32bc036cd949326de853c34209b68daa86ff42a4" translate="yes" xml:space="preserve">
          <source>New in version 1.13.</source>
          <target state="translated">버전 1.13의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="812239edd4c38dabb4bc944f5a4da690ae31f9fb" translate="yes" xml:space="preserve">
          <source>New in version 1.13.0.</source>
          <target state="translated">버전 1.13.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="a7fcdebd6983bded23b35d285d786921ce208679" translate="yes" xml:space="preserve">
          <source>New in version 1.14.</source>
          <target state="translated">버전 1.14의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="6b2dcd4a8e241be9f4eae8bcb83efab5457748ea" translate="yes" xml:space="preserve">
          <source>New in version 1.14.0.</source>
          <target state="translated">버전 1.14.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="0c7220d3e19e89998d3991680045d41d18ccc08e" translate="yes" xml:space="preserve">
          <source>New in version 1.15.</source>
          <target state="translated">버전 1.15의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="09e4bf640113b06a25e56a4fbced8359329ae65c" translate="yes" xml:space="preserve">
          <source>New in version 1.15.0.</source>
          <target state="translated">버전 1.15.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="85339f6ed2b31c74822cb66dd6a2d31bfa788c2c" translate="yes" xml:space="preserve">
          <source>New in version 1.16.</source>
          <target state="translated">버전 1.16의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="61f4d2a2c8ffd5cf207c22ed59f99b38e13075d9" translate="yes" xml:space="preserve">
          <source>New in version 1.16.0.</source>
          <target state="translated">버전 1.16.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="62d4a9f6a334052c56ff0415a29a69f7c240cf9f" translate="yes" xml:space="preserve">
          <source>New in version 1.16: Now handles ufunc kwargs</source>
          <target state="translated">버전 1.16의 새로운 기능 : ufunc kwargs 처리</target>
        </trans-unit>
        <trans-unit id="42dfbb15856498938c409aa40c4ada4a73e21225" translate="yes" xml:space="preserve">
          <source>New in version 1.17.</source>
          <target state="translated">버전 1.17의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="5cea599387052388cbd15216728091ac0d338428" translate="yes" xml:space="preserve">
          <source>New in version 1.17.0.</source>
          <target state="translated">버전 1.17.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="6f0af1a4dfa46010272d778c802279254c6462c9" translate="yes" xml:space="preserve">
          <source>New in version 1.3.0.</source>
          <target state="translated">버전 1.3.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="9527813b2a3a3264011530b12d4eddf3ee7657b0" translate="yes" xml:space="preserve">
          <source>New in version 1.4.0.</source>
          <target state="translated">버전 1.4.0의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="458a5758c6edd3424a27a61b460f5140fa37df00" translate="yes" xml:space="preserve">
          <source>New in version 1.5.</source>
          <target state="translated">버전 1.5의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="c49cc9996bfcd59e0da5f20e5bce367a012c5e0f" translate="yes" xml:space="preserve">
          <source>New in version 1.5.0.</source>
          <target state="translated">버전 1.5.0의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="5d1d2b91339374b014df11afd4f98aa79d1344f9" translate="yes" xml:space="preserve">
          <source>New in version 1.6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfdfe03f7110f5405041e6eca339a00633ba49ec" translate="yes" xml:space="preserve">
          <source>New in version 1.6.0.</source>
          <target state="translated">버전 1.6.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="f7f92c6e6757974911ee86348b393509f5bdd7e0" translate="yes" xml:space="preserve">
          <source>New in version 1.7.</source>
          <target state="translated">버전 1.7의 새로운 기능.</target>
        </trans-unit>
        <trans-unit id="3dcb523c8b35ef7bba188a1b72a37583d73585c0" translate="yes" xml:space="preserve">
          <source>New in version 1.7.0.</source>
          <target state="translated">버전 1.7.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="636a6686cd06672fd21e245ea6635b6a844c2465" translate="yes" xml:space="preserve">
          <source>New in version 1.8.0.</source>
          <target state="translated">버전 1.8.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="0fafb453d87efde6f16b32de7b47ff78521304b8" translate="yes" xml:space="preserve">
          <source>New in version 1.9.0.</source>
          <target state="translated">버전 1.9.0의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="f8cec398c70fd8647fa6846f110c387ca17f4512" translate="yes" xml:space="preserve">
          <source>New in version 1.9.1.</source>
          <target state="translated">버전 1.9.1의 새로운 기능</target>
        </trans-unit>
        <trans-unit id="b8491900b81de43a6e32f0c78b17bad686513b91" translate="yes" xml:space="preserve">
          <source>New instance of generator jumped iter times</source>
          <target state="translated">생성기의 새로운 인스턴스가 반복 횟수를 뛰어 넘었습니다.</target>
        </trans-unit>
        <trans-unit id="fc2b6cc9627169b86508e4b8ab48bafeca6f7653" translate="yes" xml:space="preserve">
          <source>New instance of series with reduced degree.</source>
          <target state="translated">감소 된 시리즈의 새로운 인스턴스.</target>
        </trans-unit>
        <trans-unit id="a5da6859165928f5c813a374a7d4b0543322485c" translate="yes" xml:space="preserve">
          <source>New instance of series with truncated coefficients.</source>
          <target state="translated">잘린 계수를 가진 새로운 계열의 인스턴스.</target>
        </trans-unit>
        <trans-unit id="b02c9ab716cd5d08c0fc39e2b190c65f62de6f0b" translate="yes" xml:space="preserve">
          <source>New since June 16, 2006:</source>
          <target state="translated">2006 년 6 월 16 일 이후의 새로운 기능 :</target>
        </trans-unit>
        <trans-unit id="163a2d38fe73630c6f811cc1ebd4ca50c54bc0cf" translate="yes" xml:space="preserve">
          <source>New view of array with the same data.</source>
          <target state="translated">동일한 데이터를 가진 새로운 배열보기.</target>
        </trans-unit>
        <trans-unit id="8c38aca7649def5a3434c6c996d36271b6eb6ab0" translate="yes" xml:space="preserve">
          <source>New views into arrays mean the object reference counts for the data buffer increase. Simply doing away with the original array object will not remove the data buffer if other views of it still exist.</source>
          <target state="translated">배열에 대한 새로운 뷰는 데이터 버퍼 증가에 대한 객체 참조 횟수를 의미합니다. 원래 배열 객체를 제거해도 다른 뷰가 여전히 존재하는 경우 데이터 버퍼가 제거되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8949ee1ec6ebd06bb3b176ea29d7ed7db2f74765" translate="yes" xml:space="preserve">
          <source>Newline to use when reading text file.</source>
          <target state="translated">텍스트 파일을 읽을 때 사용할 줄 바꿈.</target>
        </trans-unit>
        <trans-unit id="50bc63095955b830ba997c7e6236445603ecf3c8" translate="yes" xml:space="preserve">
          <source>Next we create a histogram H with random bin content:</source>
          <target state="translated">다음으로 임의의 빈 내용으로 히스토그램 H를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1e57e92090bec2209645d4afb9ffad76205ecb4b" translate="yes" xml:space="preserve">
          <source>Next, an appropriate 1-D loop is selected from the 1-D loops available to the ufunc based on the input array types. This 1-D loop is selected by trying to match the signature of the data-types of the inputs against the available signatures. The signatures corresponding to built-in types are stored in the types member of the ufunc structure. The signatures corresponding to user-defined types are stored in a linked-list of function-information with the head element stored as a &lt;code&gt;CObject&lt;/code&gt; in the userloops dictionary keyed by the data-type number (the first user-defined type in the argument list is used as the key). The signatures are searched until a signature is found to which the input arrays can all be cast safely (ignoring any scalar arguments which are not allowed to determine the type of the result). The implication of this search procedure is that &amp;ldquo;lesser types&amp;rdquo; should be placed below &amp;ldquo;larger types&amp;rdquo; when the signatures are stored. If no 1-D loop is found, then an error is reported. Otherwise, the argument_list is updated with the stored signature &amp;mdash; in case casting is necessary and to fix the output types assumed by the 1-D loop.</source>
          <target state="translated">다음으로 입력 배열 유형에 따라 ufunc에 사용 가능한 1D 루프에서 적절한 1D 루프를 선택합니다. 이 1D 루프는 입력의 데이터 유형 서명과 사용 가능한 서명을 일치시켜 선택합니다. 내장 유형에 해당하는 서명은 ufunc 구조의 유형 멤버에 저장됩니다. 사용자 정의 유형에 해당하는 서명은 &lt;code&gt;CObject&lt;/code&gt; 로 저장된 head 요소와 함께 함수 정보의 링크 된 목록에 저장됩니다.데이터 유형 번호로 키가 지정된 userloops 사전에서 (인수 목록의 첫 번째 사용자 정의 유형이 키로 사용됨). 입력 배열이 모두 안전하게 캐스팅 될 수있는 서명이 발견 될 때까지 서명이 검색됩니다 (결과 유형을 결정할 수없는 스칼라 인수는 무시). 이 검색 절차의 의미는 서명이 저장 될 때 &quot;더 적은 유형&quot;이 &quot;더 큰 유형&quot;아래에 배치되어야한다는 것입니다. 1-D 루프가 없으면 오류가보고됩니다. 그렇지 않으면, 캐스팅이 필요하고 1-D 루프에 의해 가정 된 출력 유형을 수정하기 위해 argument_list가 저장된 서명으로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="bf186c484ce590fa10a51c09653de8be6d2834d2" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;__init__&lt;/code&gt; method is needed because the array is fully initialized after the &lt;code&gt;__new__&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;__new__&lt;/code&gt; 메소드 후에 배열이 완전히 초기화되므로 &lt;code&gt;__init__&lt;/code&gt; 메소드가 필요 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9cae83812416c083c256005088174c317c5a449a" translate="yes" xml:space="preserve">
          <source>No copy is performed if the input is already an &lt;code&gt;ndarray&lt;/code&gt;. If &lt;code&gt;a&lt;/code&gt; is a subclass of &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt;, a base class &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt;&lt;code&gt;MaskedArray&lt;/code&gt;&lt;/a&gt; is returned.</source>
          <target state="translated">입력이 이미 &lt;code&gt;ndarray&lt;/code&gt; 이면 복사가 수행되지 않습니다 . 경우 &lt;code&gt;a&lt;/code&gt; 의 서브 클래스입니다 &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; &lt;/a&gt; , 기본 클래스 &lt;a href=&quot;../maskedarray.baseclass#numpy.ma.MaskedArray&quot;&gt; &lt;code&gt;MaskedArray&lt;/code&gt; 가&lt;/a&gt; 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="76323b6da52d7b072aa3d27e6e9d4ecedea40add" translate="yes" xml:space="preserve">
          <source>Non-Fortran files use a separate syntax for defining template blocks that should be repeated using a variable expansion similar to the named repeat rules of the Fortran-specific repeats.</source>
          <target state="translated">비 포트란 파일은 포트란 특정 반복의 명명 된 반복 규칙과 유사한 변수 확장을 사용하여 반복해야하는 템플릿 블록을 정의하기 위해 별도의 구문을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4a8530b9290c7b89c5a133ea25958b92a0343e30" translate="yes" xml:space="preserve">
          <source>Non-centrality parameter, the sum of the squares of the numerator means, must be &amp;gt;= 0.</source>
          <target state="translated">분자 평균의 제곱의 합인 비 중심 모수는&amp;gt; = 0이어야합니다.</target>
        </trans-unit>
        <trans-unit id="9c0b7a927a0015195afa15eb9f2b48afcee390b4" translate="yes" xml:space="preserve">
          <source>Non-centrality, must be non-negative.</source>
          <target state="translated">비중 심은 음수가 아니어야합니다.</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="f7041ff08b00120258d466a2faf6be32fb853f32" translate="yes" xml:space="preserve">
          <source>None &amp;ndash; Same as &amp;lsquo;A&amp;rsquo;.</source>
          <target state="translated">없음 &amp;ndash; 'A'와 같습니다.</target>
        </trans-unit>
        <trans-unit id="b888371d49cbde0d245f7788f812064eb17c0ad9" translate="yes" xml:space="preserve">
          <source>None of these methods is completely satisfactory if some entries have been marked as invalid. As a general rule, where a representation of the array is required without any masked entries, it is recommended to fill the array with the &lt;a href=&quot;generated/numpy.ma.filled#numpy.ma.filled&quot;&gt;&lt;code&gt;filled&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">일부 항목이 유효하지 않은 것으로 표시되면 이러한 방법 중 어느 것도 만족스럽지 않습니다. 어레이의 표현은 어떤 항목이 마스크없이 필요한 원칙적으로, 함께 배열 채우기 위해 권장 &lt;a href=&quot;generated/numpy.ma.filled#numpy.ma.filled&quot;&gt; &lt;code&gt;filled&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="d4e8532c794e2fc5caff50dd156382c7720e5446" translate="yes" xml:space="preserve">
          <source>None or no argument: reverses the order of the axes.</source>
          <target state="translated">인수가 없거나 없음 : 축의 순서를 반대로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="e47d8eef8570b0e18926c18050534f730ab8e5c8" translate="yes" xml:space="preserve">
          <source>Norm of the matrix or vector(s).</source>
          <target state="translated">행렬 또는 벡터의 규범.</target>
        </trans-unit>
        <trans-unit id="b8c54e5e1e867a54e9d75697c450f4be835f910e" translate="yes" xml:space="preserve">
          <source>Normalization</source>
          <target state="translated">Normalization</target>
        </trans-unit>
        <trans-unit id="0b0217a85ab435c082afb52e02247358f17b1f00" translate="yes" xml:space="preserve">
          <source>Normalization mode (see &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt;&lt;code&gt;numpy.fft&lt;/code&gt;&lt;/a&gt;). Default is None.</source>
          <target state="translated">정규화 모드 ( &lt;a href=&quot;../routines.fft#module-numpy.fft&quot;&gt; &lt;code&gt;numpy.fft&lt;/code&gt; &lt;/a&gt; 참조 ) 기본값은 없음입니다.</target>
        </trans-unit>
        <trans-unit id="d3993a186bf900c9e7069eda8aac128d0fadacaa" translate="yes" xml:space="preserve">
          <source>Normalized covariance matrix</source>
          <target state="translated">정규화 된 공분산 행렬</target>
        </trans-unit>
        <trans-unit id="dc19d5f7dd31b35abbf5fbcd85986e7c1aaed7a5" translate="yes" xml:space="preserve">
          <source>Normals</source>
          <target state="translated">Normals</target>
        </trans-unit>
        <trans-unit id="0cbceae856b9c0cbd7495596dcc85b9b32547ec4" translate="yes" xml:space="preserve">
          <source>Normals (&lt;a href=&quot;generated/numpy.random.generator.standard_normal#numpy.random.Generator.standard_normal&quot;&gt;&lt;code&gt;standard_normal&lt;/code&gt;&lt;/a&gt;)</source>
          <target state="translated">법선 ( &lt;a href=&quot;generated/numpy.random.generator.standard_normal#numpy.random.Generator.standard_normal&quot;&gt; &lt;code&gt;standard_normal&lt;/code&gt; &lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="1f42a8cc1d95dfa1e8aaac37d55ee0fd4cbf72c7" translate="yes" xml:space="preserve">
          <source>Norms and other numbers</source>
          <target state="translated">규범 및 기타 숫자</target>
        </trans-unit>
        <trans-unit id="d624a05adbd192dbe2a67a3ef1a9be0886fcc8bd" translate="yes" xml:space="preserve">
          <source>Not a Number (NaN), positive infinity and negative infinity evaluate to &lt;code&gt;True&lt;/code&gt; because these are not equal to zero.</source>
          <target state="translated">숫자가 아님 (NaN), 양의 무한대 및 음의 무한대는 0이 아니므 로 &lt;code&gt;True&lt;/code&gt; 로 평가 됩니다.</target>
        </trans-unit>
        <trans-unit id="8356fe7ff6e3e49c80008f397fe45e20cb3a2f85" translate="yes" xml:space="preserve">
          <source>Not a Number, positive infinity and negative infinity are considered to be non-finite.</source>
          <target state="translated">숫자가 아닌 양의 무한대와 음의 무한대는 무한대로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="e52d39123568232ca635480c53e43b0469ba9eab" translate="yes" xml:space="preserve">
          <source>Not a Number, positive infinity and negative infinity.</source>
          <target state="translated">숫자가 아니라 양의 무한대와 음의 무한대가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c846f67ecb1917ec7e71fb5a8684749f42f0bc4f" translate="yes" xml:space="preserve">
          <source>Not implemented (virtual attribute)</source>
          <target state="translated">구현되지 않음 (가상 속성)</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="9afbacf486c94c55e4d034463db7bf2d4c536c67" translate="yes" xml:space="preserve">
          <source>Note : Although tile may be used for broadcasting, it is strongly recommended to use numpy&amp;rsquo;s broadcasting operations and functions.</source>
          <target state="translated">참고 : 방송에 타일을 사용할 수 있지만 numpy의 방송 작업 및 기능을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="259d59fbe7f0cc857f345f0e3e7e778ac1aa68e9" translate="yes" xml:space="preserve">
          <source>Note how</source>
          <target state="translated">참고 사항</target>
        </trans-unit>
        <trans-unit id="af3f83322f07820f94f42dd87d4f38eaa0e197b2" translate="yes" xml:space="preserve">
          <source>Note how in all cases the leading coefficient is always 1.</source>
          <target state="translated">모든 경우에 선행 계수가 항상 1 인 방법에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="d26d19110910e4826f9f87789fa949520b0996d8" translate="yes" xml:space="preserve">
          <source>Note how the convolution operator flips the second array before &amp;ldquo;sliding&amp;rdquo; the two across one another:</source>
          <target state="translated">컨볼 루션 연산자가 두 배열을 서로 &quot;슬라이딩&quot;하기 전에 두 번째 배열을 뒤집는 방법에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="73485c551679de8ea4306656d0c9328c71ffa786" translate="yes" xml:space="preserve">
          <source>Note on string types</source>
          <target state="translated">문자열 유형에 대한 참고 사항</target>
        </trans-unit>
        <trans-unit id="61b12eb74ee5a29a04ee8a4cf874454eec65e1b8" translate="yes" xml:space="preserve">
          <source>Note that +0 and -0 are distinct floating point numbers, as are +inf and -inf.</source>
          <target state="translated">+0 및 -0은 + inf 및 -inf와 같이 고유 한 부동 소수점 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="413f63febbc514d91f5b20aa1b682b931fd8a13f" translate="yes" xml:space="preserve">
          <source>Note that 3 = 6 / 2!, and that the constants are given in the order of integrations. Constant of the highest-order polynomial term comes first:</source>
          <target state="translated">3 = 6 / 2!이며 상수는 적분 순서대로 제공됩니다. 고차 다항식의 상수가 우선합니다.</target>
        </trans-unit>
        <trans-unit id="33ed96a05ac01ee77e6588fa7daed4c8d2903c35" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#c.npy_clear_floatstatus_barrier&quot;&gt;&lt;code&gt;npy_clear_floatstatus_barrier&lt;/code&gt;&lt;/a&gt; is preferable as it prevents aggressive compiler optimizations reordering the call relative to the code setting the status, which could lead to incorrect results.</source>
          <target state="translated">참고 &lt;a href=&quot;#c.npy_clear_floatstatus_barrier&quot;&gt; &lt;code&gt;npy_clear_floatstatus_barrier&lt;/code&gt; 는&lt;/a&gt; 이 잘못된 결과로 이어질 수있는 상태를 설정하는 코드를 호출 상대적으로 재정렬 적극적인 컴파일러 최적화를 방지로 바람직하다.</target>
        </trans-unit>
        <trans-unit id="85b21f1a6771aff0ba6f35f6104e5f5ecceb9fb5" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#c.npy_get_floatstatus_barrier&quot;&gt;&lt;code&gt;npy_get_floatstatus_barrier&lt;/code&gt;&lt;/a&gt; is preferable as it prevents aggressive compiler optimizations reordering the call relative to the code setting the status, which could lead to incorrect results.</source>
          <target state="translated">참고 &lt;a href=&quot;#c.npy_get_floatstatus_barrier&quot;&gt; &lt;code&gt;npy_get_floatstatus_barrier&lt;/code&gt; 는&lt;/a&gt; 이 잘못된 결과로 이어질 수있는 상태를 설정하는 코드를 호출 상대적으로 재정렬 적극적인 컴파일러 최적화를 방지로 바람직하다.</target>
        </trans-unit>
        <trans-unit id="884c974c1824245efec48b1737298664c2d93974" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;#numpy.vdot&quot;&gt;&lt;code&gt;vdot&lt;/code&gt;&lt;/a&gt; handles multidimensional arrays differently than &lt;a href=&quot;numpy.dot#numpy.dot&quot;&gt;&lt;code&gt;dot&lt;/code&gt;&lt;/a&gt;: it does &lt;em&gt;not&lt;/em&gt; perform a matrix product, but flattens input arguments to 1-D vectors first. Consequently, it should only be used for vectors.</source>
          <target state="translated">참고 &lt;a href=&quot;#numpy.vdot&quot;&gt; &lt;code&gt;vdot&lt;/code&gt; &lt;/a&gt; 다르게보다 다차원 배열을 처리하는 &lt;a href=&quot;numpy.dot#numpy.dot&quot;&gt; &lt;code&gt;dot&lt;/code&gt; &lt;/a&gt; 는 않는다 : &lt;em&gt;없는&lt;/em&gt; 제 1-D 벡터를 입력 인수 매트릭스 생성물을 수행하지만, 평탄화. 따라서 벡터에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="43b655e0c3385ff52e0a83639474b14aafde8528" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;generated/numpy.asarray#numpy.asarray&quot;&gt;&lt;code&gt;asarray&lt;/code&gt;&lt;/a&gt; always returns the base-class ndarray. If you are confident that your use of the array object can handle any subclass of an ndarray, then &lt;a href=&quot;generated/numpy.asanyarray#numpy.asanyarray&quot;&gt;&lt;code&gt;asanyarray&lt;/code&gt;&lt;/a&gt; can be used to allow subclasses to propagate more cleanly through your subroutine. In principal a subclass could redefine any aspect of the array and therefore, under strict guidelines, &lt;a href=&quot;generated/numpy.asanyarray#numpy.asanyarray&quot;&gt;&lt;code&gt;asanyarray&lt;/code&gt;&lt;/a&gt; would rarely be useful. However, most subclasses of the array object will not redefine certain aspects of the array object such as the buffer interface, or the attributes of the array. One important example, however, of why your subroutine may not be able to handle an arbitrary subclass of an array is that matrices redefine the &amp;ldquo;*&amp;rdquo; operator to be matrix-multiplication, rather than element-by-element multiplication.</source>
          <target state="translated">참고 &lt;a href=&quot;generated/numpy.asarray#numpy.asarray&quot;&gt; &lt;code&gt;asarray&lt;/code&gt; &lt;/a&gt; 항상 기본 클래스 ndarray를 반환합니다. 배열 객체를 사용하여 ndarray의 서브 클래스를 처리 할 수 ​​있다고 확신하는 경우 &lt;a href=&quot;generated/numpy.asanyarray#numpy.asanyarray&quot;&gt; &lt;code&gt;asanyarray&lt;/code&gt; &lt;/a&gt; 를 사용하여 서브 클래스가 서브 루틴을 통해보다 깨끗하게 전파 될 수 있습니다. 원칙적으로 서브 클래스는 임의의 배열의 형태이므로, 엄격한 가이드 라인 하에서, 재정의 수 &lt;a href=&quot;generated/numpy.asanyarray#numpy.asanyarray&quot;&gt; &lt;code&gt;asanyarray&lt;/code&gt; 을&lt;/a&gt;거의 유용하지 않습니다. 그러나 배열 객체의 대부분의 서브 클래스는 버퍼 인터페이스 또는 배열의 속성과 같은 배열 객체의 특정 측면을 재정의하지 않습니다. 그러나 서브 루틴이 배열의 임의 서브 클래스를 처리 할 수없는 이유 중 하나의 중요한 예는 행렬이 &quot;*&quot;연산자를 요소 별 곱셈이 아닌 행렬 곱셈으로 재정의한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="2994c8b1000ee96c6bafac35b90d5196f4331cc6" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;numpy.extract#numpy.extract&quot;&gt;&lt;code&gt;extract&lt;/code&gt;&lt;/a&gt; does the exact opposite of &lt;a href=&quot;#numpy.place&quot;&gt;&lt;code&gt;place&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">참고 &lt;a href=&quot;numpy.extract#numpy.extract&quot;&gt; &lt;code&gt;extract&lt;/code&gt; &lt;/a&gt; 의 정반대 않는 &lt;a href=&quot;#numpy.place&quot;&gt; &lt;code&gt;place&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8afbc898891b0fe68b1eecfbf68a1cf24bd85a7a" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;numpy.place#numpy.place&quot;&gt;&lt;code&gt;place&lt;/code&gt;&lt;/a&gt; does the exact opposite of &lt;a href=&quot;#numpy.extract&quot;&gt;&lt;code&gt;extract&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그 주 &lt;a href=&quot;numpy.place#numpy.place&quot;&gt; &lt;code&gt;place&lt;/code&gt; &lt;/a&gt; 의 정확한 반대하지 &lt;a href=&quot;#numpy.extract&quot;&gt; &lt;code&gt;extract&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f0cd8ed70085b11cd28942641b9028c9aba83b5" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;config.paths&lt;/code&gt; method is applied to all lists that may contain paths. &lt;code&gt;extra_info&lt;/code&gt; is a dictionary or a list of dictionaries that content will be appended to keyword arguments. The list &lt;code&gt;depends&lt;/code&gt; contains paths to files or directories that the sources of the extension module depend on. If any path in the &lt;code&gt;depends&lt;/code&gt; list is newer than the extension module, then the module will be rebuilt.</source>
          <target state="translated">참고 &lt;code&gt;config.paths&lt;/code&gt; 의 방법은 경로를 포함 할 수있는 모든 목록에 적용됩니다. &lt;code&gt;extra_info&lt;/code&gt; 는 키워드 인수에 내용이 추가되는 사전 또는 사전 목록입니다. 목록 &lt;code&gt;depends&lt;/code&gt; 확장 모듈의 소스가 의존하는 파일 또는 디렉토리의 경로를 포함합니다. &lt;code&gt;depends&lt;/code&gt; 목록의 경로가 확장 모듈보다 최신이면 모듈이 다시 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="13ca491ea761bf62a2d2e0b70d53573f8b01deeb" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;mask&lt;/code&gt; is set to &lt;code&gt;nomask&lt;/code&gt; if possible.</source>
          <target state="translated">참고 &lt;code&gt;mask&lt;/code&gt; 로 설정되어 &lt;code&gt;nomask&lt;/code&gt; 가능합니다.</target>
        </trans-unit>
        <trans-unit id="653a93daba5d03116d06838a5a76a1330934f611" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;str&lt;/code&gt; refers to either null terminated bytes or unicode strings depending on the Python version. In code targeting both Python 2 and 3 &lt;code&gt;np.unicode_&lt;/code&gt; should be used as a dtype for strings. See &lt;a href=&quot;#string-dtype-note&quot;&gt;Note on string types&lt;/a&gt;.</source>
          <target state="translated">참고 것을 &lt;code&gt;str&lt;/code&gt; 파이썬 버전에 따라 널 종료 바이트 유니 코드 문자열 중 하나를 의미합니다. 모두 파이썬 (2, 3) 코드에 타겟팅 &lt;code&gt;np.unicode_&lt;/code&gt; 를 문자열 DTYPE 용으로 사용되어야한다. &lt;a href=&quot;#string-dtype-note&quot;&gt;문자열 유형에 대한 참고 사항을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="577f40a867da04018fffaab4749ee48c7ab85bee" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;test_&lt;/code&gt; functions or methods should not have a docstring, because that makes it hard to identify the test from the output of running the test suite with &lt;code&gt;verbose=2&lt;/code&gt; (or similar verbosity setting). Use plain comments (&lt;code&gt;#&lt;/code&gt;) if necessary.</source>
          <target state="translated">참고 것을 &lt;code&gt;test_&lt;/code&gt; 그게 하드로 테스트 스위트를 실행의 출력에서 테스트를 식별 할 수 있기 때문에 함수 또는 메소드는 문서화 문자열을하지 말았어야 &lt;code&gt;verbose=2&lt;/code&gt; (또는 이와 유사한 상세 설정). 필요한 경우 일반 주석 ( &lt;code&gt;#&lt;/code&gt; )을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="02e2af0a66e4601c973f5ec5d0ddca41b2da6bef" translate="yes" xml:space="preserve">
          <source>Note that C++ type &lt;code&gt;bool&lt;/code&gt; is not supported in the list in the &lt;a href=&quot;#available-typemaps&quot;&gt;Available Typemaps&lt;/a&gt; section. NumPy bools are a single byte, while the C++ &lt;code&gt;bool&lt;/code&gt; is four bytes (at least on my system). Therefore:</source>
          <target state="translated">C ++ 유형 &lt;code&gt;bool&lt;/code&gt; 은 &lt;a href=&quot;#available-typemaps&quot;&gt;사용 가능한 유형 맵&lt;/a&gt; 섹션 의 목록에서 지원되지 않습니다 . NumPy bool은 단일 바이트이며 C ++ &lt;code&gt;bool&lt;/code&gt; 은 4 바이트입니다 (적어도 내 시스템에서는). 따라서:</target>
        </trans-unit>
        <trans-unit id="d6fea2f832bdac55a57e8bcf7203f52e450af3e1" translate="yes" xml:space="preserve">
          <source>Note that NumPy submodules still use a file named &lt;code&gt;info.py&lt;/code&gt; in which the module docstring and &lt;code&gt;__all__&lt;/code&gt; dict are defined. These files will be removed at some point.</source>
          <target state="translated">NumPy 하위 모듈은 여전히 docstring 및 &lt;code&gt;__all__&lt;/code&gt; dict 모듈 이 정의 된 &lt;code&gt;info.py&lt;/code&gt; 라는 파일을 사용합니다 . 이 파일들은 언젠가 제거 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="8d0bc3c9921682280a85d9ad74708f6af3774f00" translate="yes" xml:space="preserve">
          <source>Note that arrays with hard-coded dimensions are not supported. These cannot follow the double pointer signatures of these typemaps.</source>
          <target state="translated">하드 코딩 된 차원을 가진 배열은 지원되지 않습니다. 이들은 이러한 유형 맵의 이중 포인터 서명을 따를 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="48706be1cfd595ac0f989289e2a8fb9947cff916" translate="yes" xml:space="preserve">
          <source>Note that as the order of the arguments are reversed, the side must be too. The &lt;a href=&quot;numpy.searchsorted#numpy.searchsorted&quot;&gt;&lt;code&gt;searchsorted&lt;/code&gt;&lt;/a&gt; call is marginally faster, as it does not do any monotonicity checks. Perhaps more importantly, it supports all dtypes.</source>
          <target state="translated">인수의 순서가 반대이므로 측면도 마찬가지입니다. &lt;a href=&quot;numpy.searchsorted#numpy.searchsorted&quot;&gt; &lt;code&gt;searchsorted&lt;/code&gt; &lt;/a&gt; 은 어떤 단순성 검사를하지 않는 한 호출, 빠른 변두리에있다. 더 중요한 것은 모든 dtype을 지원한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e4dd030963aaaf3be4bd9f6afb2a54167cbe9671" translate="yes" xml:space="preserve">
          <source>Note that computing a monthly mortgage payment is only one use for this function. For example, pmt returns the periodic deposit one must make to achieve a specified future balance given an initial deposit, a fixed, periodically compounded interest rate, and the total number of periods.</source>
          <target state="translated">월간 모기지 상환 계산은이 기능에 한 번만 사용됩니다. 예를 들어, pmt는 초기 예금, 고정적이고 정기적으로 복합 이자율 및 총 기간 수를 고려하여 지정된 미래 잔액을 달성하기 위해 만들어야하는 정기적 예금을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6b262586803e1839adc1dd7ba61528562de1c4dc" translate="yes" xml:space="preserve">
          <source>Note that element</source>
          <target state="translated">그 요소에 유의하십시오</target>
        </trans-unit>
        <trans-unit id="3361278c66a9a950ab868f2606daa6d980ba0742" translate="yes" xml:space="preserve">
          <source>Note that fitting polynomial coefficients is inherently badly conditioned when the degree of the polynomial is large or the interval of sample points is badly centered. The quality of the fit should always be checked in these cases. When polynomial fits are not satisfactory, splines may be a good alternative.</source>
          <target state="translated">다항식의 차수가 크거나 샘플 포인트의 간격이 잘못 중심이되면 다항식 계수 피팅은 본질적으로 잘못 조정됩니다. 이 경우 적합도는 항상 확인해야합니다. 다항식 피팅이 만족스럽지 않으면 스플라인이 좋은 대안이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0754d929f5032a758a77b70b619d10e1a6b0a14a" translate="yes" xml:space="preserve">
          <source>Note that for complex numbers, the absolute value is taken before squaring, so that the result is always real and nonnegative.</source>
          <target state="translated">복소수의 경우, 제곱하기 전에 절대 값이 사용되므로 결과는 항상 실수이고 음이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c532f8402b234b1805dc32ad508ed06d2d992bc4" translate="yes" xml:space="preserve">
          <source>Note that for floating-point input, the mean is computed using the same precision the input has. Depending on the input data, this can cause the results to be inaccurate, especially for &lt;code&gt;float32&lt;/code&gt; (see example below). Specifying a higher-precision accumulator using the &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; keyword can alleviate this issue.</source>
          <target state="translated">부동 소수점 입력의 경우 평균은 입력과 동일한 정밀도를 사용하여 계산됩니다. 입력 데이터에 따라, 특히 &lt;code&gt;float32&lt;/code&gt; 의 경우 결과가 정확하지 않을 수 있습니다 (아래 예 참조). &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt; 키워드를 사용하여 고정밀 누산기를 지정 하면이 문제를 완화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28ec6b24f09abee0bf153ce2a68e94e6fc60a244" translate="yes" xml:space="preserve">
          <source>Note that for floating-point input, the mean is computed using the same precision the input has. Depending on the input data, this can cause the results to be inaccurate, especially for &lt;code&gt;float32&lt;/code&gt;. Specifying a higher-precision accumulator using the &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; keyword can alleviate this issue.</source>
          <target state="translated">부동 소수점 입력의 경우 평균은 입력과 동일한 정밀도를 사용하여 계산됩니다. 입력 데이터에 따라, 특히 &lt;code&gt;float32&lt;/code&gt; 의 경우 결과가 정확하지 않을 수 있습니다 . &lt;a href=&quot;numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt; 키워드를 사용하여 고정밀 누산기를 지정 하면이 문제를 완화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9429c3e4d702a779857d710d5ba3d4bb8d91e3db" translate="yes" xml:space="preserve">
          <source>Note that for higher dimensional inserts &lt;code&gt;obj=0&lt;/code&gt; behaves very different from &lt;code&gt;obj=[0]&lt;/code&gt; just like &lt;code&gt;arr[:,0,:] = values&lt;/code&gt; is different from &lt;code&gt;arr[:,[0],:] = values&lt;/code&gt;.</source>
          <target state="translated">고차원 인서트의 경우 &lt;code&gt;obj=0&lt;/code&gt; 은 &lt;code&gt;arr[:,0,:] = values&lt;/code&gt; 가 &lt;code&gt;arr[:,[0],:] = values&lt;/code&gt; :] = values 와 다른 것처럼 &lt;code&gt;obj=[0]&lt;/code&gt; 과 매우 다르게 동작 합니다 .</target>
        </trans-unit>
        <trans-unit id="64098939d0cc3bd11f1e190ea4842decacbcc08d" translate="yes" xml:space="preserve">
          <source>Note that higher-dimensional arrays are flattened!</source>
          <target state="translated">더 높은 차원의 배열은 평평합니다!</target>
        </trans-unit>
        <trans-unit id="18c7921c177ba1f557c86613521ffad6b35f74d0" translate="yes" xml:space="preserve">
          <source>Note that if an operand is given the flag &lt;a href=&quot;#c.NPY_ITER_COPY&quot;&gt;&lt;code&gt;NPY_ITER_COPY&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#c.NPY_ITER_UPDATEIFCOPY&quot;&gt;&lt;code&gt;NPY_ITER_UPDATEIFCOPY&lt;/code&gt;&lt;/a&gt;, a copy will be made in preference to buffering. Buffering will still occur when the array was broadcast so elements need to be duplicated to get a constant stride.</source>
          <target state="translated">피연산자에 &lt;a href=&quot;#c.NPY_ITER_COPY&quot;&gt; &lt;code&gt;NPY_ITER_COPY&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#c.NPY_ITER_UPDATEIFCOPY&quot;&gt; &lt;code&gt;NPY_ITER_UPDATEIFCOPY&lt;/code&gt; &lt;/a&gt; 플래그가 제공되면 버퍼링보다 복사가 우선합니다. 버퍼링은 어레이가 브로드 캐스트 될 때 계속 발생하므로 일정한 보폭을 얻으려면 요소를 복제해야합니다.</target>
        </trans-unit>
        <trans-unit id="b29d0e1167132199e264175b7a1e173cb2ad60e1" translate="yes" xml:space="preserve">
          <source>Note that if an uninitialized return array is created, values of False will leave those values &lt;strong&gt;uninitialized&lt;/strong&gt;.</source>
          <target state="translated">초기화되지 않은 리턴 배열이 작성되면 False 값은 해당 값을 &lt;strong&gt;초기화되지 않은 상태로 유지&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="e7d909696047578f38bea71bdf411f55070df9d2" translate="yes" xml:space="preserve">
          <source>Note that if the C function signature was in a different order:</source>
          <target state="translated">C 함수 서명이 다른 순서 인 경우 :</target>
        </trans-unit>
        <trans-unit id="01a168adfe5fe1f5dd6875481bec15e4f9aa1985" translate="yes" xml:space="preserve">
          <source>Note that if you want to do a reduction on an automatically allocated output, you must use &lt;a href=&quot;#c.NpyIter_GetOperandArray&quot;&gt;&lt;code&gt;NpyIter_GetOperandArray&lt;/code&gt;&lt;/a&gt; to get its reference, then set every value to the reduction unit before doing the iteration loop. In the case of a buffered reduction, this means you must also specify the flag &lt;a href=&quot;#c.NPY_ITER_DELAY_BUFALLOC&quot;&gt;&lt;code&gt;NPY_ITER_DELAY_BUFALLOC&lt;/code&gt;&lt;/a&gt;, then reset the iterator after initializing the allocated operand to prepare the buffers.</source>
          <target state="translated">자동 할당 출력에서 ​​축소를 수행하려면 &lt;a href=&quot;#c.NpyIter_GetOperandArray&quot;&gt; &lt;code&gt;NpyIter_GetOperandArray&lt;/code&gt; &lt;/a&gt; 를 사용 하여 참조를 얻은 다음 반복 루프를 수행하기 전에 모든 값을 축소 단위로 설정해야합니다. 버퍼링 된 감소의 경우 이는 &lt;a href=&quot;#c.NPY_ITER_DELAY_BUFALLOC&quot;&gt; &lt;code&gt;NPY_ITER_DELAY_BUFALLOC&lt;/code&gt; &lt;/a&gt; 플래그를 지정한 다음 할당 된 피연산자를 초기화 한 후 반복기를 재설정하여 버퍼를 준비 해야 함을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="2b010bbfdb300bcd389c385bed7ea27b3386f09b" translate="yes" xml:space="preserve">
          <source>Note that in binary 160 = 1010 0000, 64 = 0100 0000, 192 = 1100 0000, and 32 = 0010 0000.</source>
          <target state="translated">이진수 160 = 1010 0000, 64 = 0100 0000, 192 = 1100 0000, 32 = 0010 0000입니다.</target>
        </trans-unit>
        <trans-unit id="6720060be8821678605a9cb8b96c71daf2200a5d" translate="yes" xml:space="preserve">
          <source>Note that it is not required for &lt;code&gt;__array_function__&lt;/code&gt; implementations to include &lt;em&gt;all&lt;/em&gt; of the corresponding NumPy function&amp;rsquo;s optional arguments (e.g., &lt;code&gt;broadcast_to&lt;/code&gt; above omits the irrelevant &lt;code&gt;subok&lt;/code&gt; argument). Optional arguments are only passed in to &lt;code&gt;__array_function__&lt;/code&gt; if they were explicitly used in the NumPy function call.</source>
          <target state="translated">&lt;code&gt;__array_function__&lt;/code&gt; 구현에 해당하는 NumPy 함수의 선택적 인수를 &lt;em&gt;모두&lt;/em&gt; 포함 &lt;em&gt;할&lt;/em&gt; 필요는 없습니다 (예를 들어, &lt;code&gt;broadcast_to&lt;/code&gt; 는 관련없는 &lt;code&gt;subok&lt;/code&gt; 인수를 생략 함 ). 선택적 인수는 NumPy 함수 호출에 명시 적으로 사용 된 경우 에만 &lt;code&gt;__array_function__&lt;/code&gt; 에 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="401f22bf499be24336e06ca8c727f49552e9ba96" translate="yes" xml:space="preserve">
          <source>Note that it would be more straightforward in the above example to extract the required elements directly with &lt;code&gt;x[:2, :3]&lt;/code&gt;.</source>
          <target state="translated">위의 예에서 &lt;code&gt;x[:2, :3]&lt;/code&gt; 필요한 요소를 직접 추출하는 것이 더 간단합니다 .</target>
        </trans-unit>
        <trans-unit id="aaaef84f5e6e416f2f83a03c812a03e6bee63048" translate="yes" xml:space="preserve">
          <source>Note that not all data-type information can be supplied with a type-object: for example, &lt;code&gt;flexible&lt;/code&gt; data-types have a default &lt;em&gt;itemsize&lt;/em&gt; of 0, and require an explicitly given size to be useful.</source>
          <target state="translated">모든 데이터 유형 정보에 유형 객체를 제공 할 수있는 것은 아닙니다. 예를 들어, &lt;code&gt;flexible&lt;/code&gt; 데이터 유형은 기본 항목 &lt;em&gt;크기&lt;/em&gt; 가 0이며 명시 적으로 지정된 크기가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2e81c263eba620a31c6f05237f30bb45194a05fe" translate="yes" xml:space="preserve">
          <source>Note that once the iterator is closed we can not access &lt;a href=&quot;generated/numpy.nditer.operands#numpy.nditer.operands&quot;&gt;&lt;code&gt;operands&lt;/code&gt;&lt;/a&gt; and must use a reference created inside the context manager.</source>
          <target state="translated">반복자가 닫히면 &lt;a href=&quot;generated/numpy.nditer.operands#numpy.nditer.operands&quot;&gt; &lt;code&gt;operands&lt;/code&gt; &lt;/a&gt; 액세스 할 수 없으며 컨텍스트 관리자 내에 작성된 참조를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="a0072c6c9282c50699dd3bb094606976a4136251" translate="yes" xml:space="preserve">
          <source>Note that operations on integer scalar types (such as &lt;code&gt;int16&lt;/code&gt;) are handled like floating point, and are affected by these settings.</source>
          <target state="translated">정수 스칼라 유형 (예 : &lt;code&gt;int16&lt;/code&gt; )에 대한 연산은 부동 소수점처럼 처리되며 이러한 설정의 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="09f50c6ff377ac0a2ca64d0c66fbaa9d2065ec9a" translate="yes" xml:space="preserve">
          <source>Note that some examples may use &lt;code&gt;None&lt;/code&gt; instead of &lt;code&gt;np.newaxis&lt;/code&gt;. These are the same objects:</source>
          <target state="translated">일부 예제 에서는 &lt;code&gt;np.newaxis&lt;/code&gt; 대신 &lt;code&gt;None&lt;/code&gt; 을 사용할 수 있습니다 . 이들은 동일한 객체입니다.</target>
        </trans-unit>
        <trans-unit id="ffa9fecdeba09a0f43a75d04eeb01c1da54d7720" translate="yes" xml:space="preserve">
          <source>Note that sorting is first according to the elements of &lt;code&gt;a&lt;/code&gt;. Secondary sorting is according to the elements of &lt;code&gt;b&lt;/code&gt;.</source>
          <target state="translated">먼저 정렬 요소에 따른되어 있습니다 . 2 차 정렬은 &lt;code&gt;b&lt;/code&gt; 의 요소에 따릅니다 . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2ab2cbf3d7d05721e26131cbe4f74f5e6c689750" translate="yes" xml:space="preserve">
          <source>Note that the above may not produce exact integers:</source>
          <target state="translated">위의 정확한 정수를 생성하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="816b54542ce937e025129bb5a02d396360440696" translate="yes" xml:space="preserve">
          <source>Note that the covariance matrix must be positive semidefinite (a.k.a. nonnegative-definite). Otherwise, the behavior of this method is undefined and backwards compatibility is not guaranteed.</source>
          <target state="translated">공분산 행렬은 양의 반정의 (일명 음이 아닌-정의) 여야합니다. 그렇지 않으면이 메소드의 동작이 정의되지 않으며 이전 버전과의 호환성이 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="51fdfec7c0c161ff5cf20da12ebf59920f92cef4" translate="yes" xml:space="preserve">
          <source>Note that the order in which the diagonal is filled varies depending on the flip function.</source>
          <target state="translated">대각선이 채워지는 순서는 플립 기능에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="724f6e013fa8829f11659c1f81abf24921dbd546" translate="yes" xml:space="preserve">
          <source>Note that the order in which the diagonal is retrieved varies depending on the flip function.</source>
          <target state="translated">대각선이 검색되는 순서는 플립 기능에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="a99c18cf39a32483fd943f4224186f409906587f" translate="yes" xml:space="preserve">
          <source>Note that the output of &lt;a href=&quot;generated/numpy.ma.compressed#numpy.ma.compressed&quot;&gt;&lt;code&gt;compressed&lt;/code&gt;&lt;/a&gt; is always 1D.</source>
          <target state="translated">&lt;a href=&quot;generated/numpy.ma.compressed#numpy.ma.compressed&quot;&gt; &lt;code&gt;compressed&lt;/code&gt; &lt;/a&gt; 출력 은 항상 1D입니다.</target>
        </trans-unit>
        <trans-unit id="fe6f42e3829661cf63ecd7296a8f95be4fb61504" translate="yes" xml:space="preserve">
          <source>Note that the result of each integration is &lt;em&gt;multiplied&lt;/em&gt; by &lt;code&gt;scl&lt;/code&gt;. Why is this important to note? Say one is making a linear change of variable</source>
          <target state="translated">각 통합의 결과 에 &lt;code&gt;scl&lt;/code&gt; 을&lt;em&gt;곱&lt;/em&gt; 합니다 . 이것이 중요한 이유는 무엇입니까? 변수를 선형 적으로 변경한다고 가정 해보십시오.</target>
        </trans-unit>
        <trans-unit id="87d64ab0ec81404f96e3a3fd6a0cf4af1b48cd4a" translate="yes" xml:space="preserve">
          <source>Note that the result shape is identical to the (broadcast) indexing array shapes &lt;code&gt;ind_1, ..., ind_N&lt;/code&gt;.</source>
          <target state="translated">결과 모양은 (브로드 캐스트) 인덱싱 배열 모양 &lt;code&gt;ind_1, ..., ind_N&lt;/code&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="970776667a9fe553514eecc1dd1a72278348d24e" translate="yes" xml:space="preserve">
          <source>Note that the scalar types are not &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; objects, even though they can be used in place of one whenever a data type specification is needed in NumPy.</source>
          <target state="translated">NumPy에서 데이터 유형 스펙이 필요할 때마다 대신 스칼라 유형 을 사용할 수 있지만 스칼라 유형은 &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt; 오브젝트 가 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="c59a59639135c22037a5377f994f5afdc88bff2a" translate="yes" xml:space="preserve">
          <source>Note that the strided-copy and strided-cast code are deeply intertwined and so any arrays being processed by them must be both uint and true aligned, even though the copy-code only needs uint alignment and the cast code only true alignment. If there is ever a big rewrite of this code it would be good to allow them to use different alignments.</source>
          <target state="translated">strided-copy 코드와 strided-cast 코드는 깊이 얽혀 있으므로 복사 코드에 uint 정렬 만 필요하고 cast 코드에만 진정한 정렬이 필요하더라도 처리되는 배열은 uint와 true로 정렬되어야합니다. 이 코드를 크게 다시 작성하는 경우 다른 정렬을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f3272a5f558b3fab42d4539ad3dc738bcb4ce852" translate="yes" xml:space="preserve">
          <source>Note that there are three parts to the long version of the printout. The first is the coefficients, the second is the domain, and the third is the window:</source>
          <target state="translated">인쇄물의 긴 버전에는 세 부분이 있습니다. 첫 번째는 계수이고, 두 번째는 도메인이며, 세 번째는 윈도우입니다.</target>
        </trans-unit>
        <trans-unit id="3a9c78ac3abf35e5e3337780f5e62c12c7df494d" translate="yes" xml:space="preserve">
          <source>Note that this distribution is very similar to the binomial distribution, except that in this case, samples are drawn without replacement, whereas in the Binomial case samples are drawn with replacement (or the sample space is infinite). As the sample space becomes large, this distribution approaches the binomial.</source>
          <target state="translated">이 분포는 이항 분포와 매우 유사하지만이 경우 표본은 교체없이 추출되는 반면, 이항 경우에서는 표본이 교체로 그려집니다 (또는 표본 공간이 무한대라는 점). 표본 공간이 커지면이 분포는 이항에 접근합니다.</target>
        </trans-unit>
        <trans-unit id="207f864735403916ab64725fc35836347eea06c9" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;code&gt;data_as&lt;/code&gt;, a reference will not be kept to the array: code like &lt;code&gt;ctypes.c_void_p((a + b).ctypes.data)&lt;/code&gt; will result in a pointer to a deallocated array, and should be spelt &lt;code&gt;(a + b).ctypes.data_as(ctypes.c_void_p)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;data_as&lt;/code&gt; 와 달리 참조는 배열에 유지되지 않습니다. &lt;code&gt;ctypes.c_void_p((a + b).ctypes.data)&lt;/code&gt; 와 같은 코드 는 할당이 해제 된 배열에 대한 포인터를 생성하며 철자가 &lt;code&gt;(a + b).ctypes.data_as(ctypes.c_void_p)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fa5eae61b870cb56e093988870d6dd9877647aa6" translate="yes" xml:space="preserve">
          <source>Note that unlike &lt;code&gt;numpy.ndarray&lt;/code&gt;, &lt;code&gt;ArrayLike&lt;/code&gt; does not allow operations with arbitrary, unrecognized types. This ensures that interactions with ArrayLike preserve a well-defined casting hierarchy.</source>
          <target state="translated">달리합니다 &lt;code&gt;numpy.ndarray&lt;/code&gt; 가 , &lt;code&gt;ArrayLike&lt;/code&gt; 가 임의의, 인식 할 수없는 유형의 작업을 허용하지 않습니다. 이를 통해 ArrayLike와의 상호 작용은 잘 정의 된 캐스팅 계층 구조를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="6653eb59198778eef2da729298a76ec147105c9f" translate="yes" xml:space="preserve">
          <source>Note that we picked datetimes that cross a DST boundary. Passing in a &lt;code&gt;pytz&lt;/code&gt; timezone object will print the appropriate offset</source>
          <target state="translated">DST 경계를 넘는 날짜 시간을 선택했습니다. &lt;code&gt;pytz&lt;/code&gt; 시간대 객체를 전달 하면 적절한 오프셋이 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="ff6a8871cdaa44abafcf71b9b33d5e54dbc5be42" translate="yes" xml:space="preserve">
          <source>Note that we support &lt;code&gt;DATA_TYPE*&lt;/code&gt; argout typemaps in 1D, but not 2D or 3D. This is because of a quirk with the &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; typemap syntax and cannot be avoided. Note that for these types of 1D typemaps, the Python function will take a single argument representing &lt;code&gt;DIM1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DATA_TYPE*&lt;/code&gt; argout 유형 맵은 1D로 지원 하지만 2D 또는 3D 는 지원 하지 않습니다. 이것은 &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; 타입 맵 구문에 문제가 있기 때문에 피할 수 없습니다. 이러한 유형의 1D 유형 맵의 경우 Python 함수는 &lt;code&gt;DIM1&lt;/code&gt; 을 나타내는 단일 인수를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="11034ab53fb8599a1310cf4207146288e154fc02" translate="yes" xml:space="preserve">
          <source>Note that when &lt;code&gt;a == 1&lt;/code&gt;, the normalization factor &lt;code&gt;v1 / (v1**2 - ddof * v2)&lt;/code&gt; goes over to &lt;code&gt;1 / (np.sum(f) - ddof)&lt;/code&gt; as it should.</source>
          <target state="translated">참고 때 &lt;code&gt;a == 1&lt;/code&gt; 정규화 인자 &lt;code&gt;v1 / (v1**2 - ddof * v2)&lt;/code&gt; 를 넘어 &lt;code&gt;1 / (np.sum(f) - ddof)&lt;/code&gt; 예상대로.</target>
        </trans-unit>
        <trans-unit id="ee0fb9212f997bf3174d26345ac37f18f11183de" translate="yes" xml:space="preserve">
          <source>Note that without the &lt;code&gt;np.ix_&lt;/code&gt; call, only the diagonal elements would be selected, as was used in the previous example. This difference is the most important thing to remember about indexing with multiple advanced indexes.</source>
          <target state="translated">&lt;code&gt;np.ix_&lt;/code&gt; 호출 이 없으면 이전 예제에서 사용 된 것처럼 대각선 요소 만 선택됩니다. 이 차이점은 여러 고급 인덱스를 사용하여 인덱싱 할 때 기억해야 할 가장 중요한 사항입니다.</target>
        </trans-unit>
        <trans-unit id="7b3edd40f42578284bf324094d774023e21eda09" translate="yes" xml:space="preserve">
          <source>Note that you get the time reversed, complex conjugated result when the two input sequences change places, i.e., &lt;code&gt;c_{va}[k] = c^{*}_{av}[-k]&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;c_{va}[k] = c^{*}_{av}[-k]&lt;/code&gt; : 두 입력 시퀀스가 ​​장소를 변경할 때 시간이 바뀌고 복잡한 공액 결과를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="ba5c8fb85c6ca6f109e49af951ef9e99c064bb30" translate="yes" xml:space="preserve">
          <source>Note that, for complex numbers, &lt;a href=&quot;#numpy.std&quot;&gt;&lt;code&gt;std&lt;/code&gt;&lt;/a&gt; takes the absolute value before squaring, so that the result is always real and nonnegative.</source>
          <target state="translated">복소수의 경우 &lt;a href=&quot;#numpy.std&quot;&gt; &lt;code&gt;std&lt;/code&gt; &lt;/a&gt; 는 제곱하기 전에 절대 값을 취하므로 결과는 항상 실수이고 음이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="67ff0ed45eb77e75fcc2a8d19c65a90ea73589bb" translate="yes" xml:space="preserve">
          <source>Note that, for complex numbers, &lt;a href=&quot;numpy.std#numpy.std&quot;&gt;&lt;code&gt;std&lt;/code&gt;&lt;/a&gt; takes the absolute value before squaring, so that the result is always real and nonnegative.</source>
          <target state="translated">복소수의 경우 &lt;a href=&quot;numpy.std#numpy.std&quot;&gt; &lt;code&gt;std&lt;/code&gt; &lt;/a&gt; 는 제곱하기 전에 절대 값을 취하므로 결과는 항상 실수이고 음이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="65e93cf7b4b44a5b77a394d19e4276d3eaadfbbd" translate="yes" xml:space="preserve">
          <source>Note that, in the old API that was deprecated in version 1.7, this function had the return type &lt;code&gt;int&lt;/code&gt;.</source>
          <target state="translated">버전 1.7에서 폐기 된 이전 API에서이 함수의 반환 유형은 &lt;code&gt;int&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c60913e9a1e7e3a8383e344378c5f7011cb280cd" translate="yes" xml:space="preserve">
          <source>Note that, when we modify x, y changes, but not z:</source>
          <target state="translated">x를 수정하면 y는 변경되지만 z는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7868473a32c7a3c40bb3a312d03eac57c7a37527" translate="yes" xml:space="preserve">
          <source>Note the order of the parameters. &lt;a href=&quot;#numpy.arctan2&quot;&gt;&lt;code&gt;arctan2&lt;/code&gt;&lt;/a&gt; is defined also when &lt;code&gt;x2&lt;/code&gt; = 0 and at several other special points, obtaining values in the range &lt;code&gt;[-pi, pi]&lt;/code&gt;:</source>
          <target state="translated">매개 변수의 순서를 참고하십시오. &lt;a href=&quot;#numpy.arctan2&quot;&gt; &lt;code&gt;arctan2&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;x2&lt;/code&gt; = 0 일 때 와 다른 여러 특수 지점 에서도 정의 되어 &lt;code&gt;[-pi, pi]&lt;/code&gt; 범위의 값을 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="3999859e7edf0b6850997e2b685c81e41f6bf30b" translate="yes" xml:space="preserve">
          <source>Note the unusual interpretation of sample when an array_like:</source>
          <target state="translated">array_like 인 경우 샘플의 비정상적인 해석에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="111feaa1cd8151a1eb25cfbf746ea648c6673cdc" translate="yes" xml:space="preserve">
          <source>Note: Prior to NumPy 1.10.0, less strict checks were in place: missing core dimensions were created by prepending 1&amp;rsquo;s to the shape as necessary, core dimensions with the same label were broadcast together, and undetermined dimensions were created with size 1.</source>
          <target state="translated">참고 : NumPy 1.10.0 이전에는 덜 엄격한 검사가 수행되었습니다. 필요에 따라 1을 셰이프 앞에 추가하여 누락 된 코어 치수를 작성하고 동일한 레이블을 가진 코어 치수를 함께 브로드 캐스트하고 크기가 1 인 결정되지 않은 치수를 작성했습니다.</target>
        </trans-unit>
        <trans-unit id="d21079fa664fe20f0bcb604959e5d77d12a5f0cb" translate="yes" xml:space="preserve">
          <source>Note: This function returns an array with at least one-dimension (1-d) so it will not preserve 0-d arrays.</source>
          <target state="translated">참고 :이 함수는 1 차원 이상의 배열을 반환하므로 0 차원 배열을 유지하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="f57a8f12c91535f8b3bf8808e86d3137e06887d9" translate="yes" xml:space="preserve">
          <source>Nothing happens if &lt;code&gt;a&lt;/code&gt; is not a masked array.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; 가 마스크 배열이 아닌 경우 아무 일도 일어나지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a10912bd64eec5f116a9c3fe1369faded07c9f4b" translate="yes" xml:space="preserve">
          <source>Nothing returned by this function.</source>
          <target state="translated">이 함수는 아무것도 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="184b0a59161cac7480934a6869880704e9ffc1c5" translate="yes" xml:space="preserve">
          <source>Notice how the final element of the &lt;a href=&quot;numpy.fft.fft#numpy.fft.fft&quot;&gt;&lt;code&gt;fft&lt;/code&gt;&lt;/a&gt; output is the complex conjugate of the second element, for real input. For &lt;a href=&quot;#numpy.fft.rfft&quot;&gt;&lt;code&gt;rfft&lt;/code&gt;&lt;/a&gt;, this symmetry is exploited to compute only the non-negative frequency terms.</source>
          <target state="translated">&lt;a href=&quot;numpy.fft.fft#numpy.fft.fft&quot;&gt; &lt;code&gt;fft&lt;/code&gt; &lt;/a&gt; 출력 의 최종 요소가 실제 입력을 위해 두 번째 요소의 복합 켤레 인 방법에 주목하십시오 . 들면 &lt;a href=&quot;#numpy.fft.rfft&quot;&gt; &lt;code&gt;rfft&lt;/code&gt; &lt;/a&gt; 이 대칭은 비 - 음의 주파수 조건을 계산하는데 이용된다.</target>
        </trans-unit>
        <trans-unit id="9d24afb4770f955e79718f663c68d81c2708b5a7" translate="yes" xml:space="preserve">
          <source>Notice how the last term in the input to the ordinary &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt;&lt;code&gt;ifft&lt;/code&gt;&lt;/a&gt; is the complex conjugate of the second term, and the output has zero imaginary part everywhere. When calling &lt;a href=&quot;#numpy.fft.irfft&quot;&gt;&lt;code&gt;irfft&lt;/code&gt;&lt;/a&gt;, the negative frequencies are not specified, and the output array is purely real.</source>
          <target state="translated">일반 &lt;a href=&quot;numpy.fft.ifft#numpy.fft.ifft&quot;&gt; &lt;code&gt;ifft&lt;/code&gt; &lt;/a&gt; 에 대한 입력의 마지막 항이 두 번째 항의 복소수 복소수이며 출력이 어디에서나 가상의 부분이 없는지 확인하십시오. &lt;a href=&quot;#numpy.fft.irfft&quot;&gt; &lt;code&gt;irfft&lt;/code&gt; 를&lt;/a&gt; 호출 하면 음의 주파수가 지정되지 않고 출력 배열은 순수하게 실제입니다.</target>
        </trans-unit>
        <trans-unit id="0cb564d7e3f343c55b0fae22523656706209711d" translate="yes" xml:space="preserve">
          <source>Notice that the above 3 flags are defined so that a new, well- behaved array has these flags defined as true.</source>
          <target state="translated">위의 3 개 플래그는 올바르게 작동하는 새로운 배열에 이러한 플래그가 true로 정의되도록 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="847535dd495885c3e2ed82b62e1abcb626ece607" translate="yes" xml:space="preserve">
          <source>Notice that the initial value is used as one of the elements for which the maximum is determined, unlike for the default argument Python&amp;rsquo;s max function, which is only used for empty iterables.</source>
          <target state="translated">초기 값은 빈 iterables에만 사용되는 기본 인수 Python의 max 함수와 달리 최대 값이 결정되는 요소 중 하나로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="98ab17cc2cf9317019aeddb2bbabfef19cd3a629" translate="yes" xml:space="preserve">
          <source>Notice that the initial value is used as one of the elements for which the minimum is determined, unlike for the default argument Python&amp;rsquo;s max function, which is only used for empty iterables.</source>
          <target state="translated">초기 값은 빈 iterables에만 사용되는 기본 인수 Python의 max 함수와 달리 최소값이 결정되는 요소 중 하나로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8b99552cfe5ebf21e89509d47400467670883a7d" translate="yes" xml:space="preserve">
          <source>Notice that this isn&amp;rsquo;t the same as Python&amp;rsquo;s &lt;code&gt;default&lt;/code&gt; argument.</source>
          <target state="translated">이것은 파이썬의 &lt;code&gt;default&lt;/code&gt; 인수 와 동일하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a4854dca388c79f7bb12e14a8a161b7a492c001a" translate="yes" xml:space="preserve">
          <source>Now multiply a diagonal matrix by &lt;code&gt;Q&lt;/code&gt; on one side and by &lt;code&gt;Q.T&lt;/code&gt; on the other:</source>
          <target state="translated">이제 대각선 행렬 에 한쪽 에 &lt;code&gt;Q&lt;/code&gt; 를 곱하고 다른쪽에 &lt;code&gt;Q.T&lt;/code&gt; 를 곱하십시오 .</target>
        </trans-unit>
        <trans-unit id="653b19d1d4883b62177051122cc7aeebf0172920" translate="yes" xml:space="preserve">
          <source>Now returns an empty list instead of None for a fully masked array</source>
          <target state="translated">이제 완전히 마스크 된 배열에 대해 None 대신 빈 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1f39ae5d13c5ad14506d67df0c86ac586848a064" translate="yes" xml:space="preserve">
          <source>Now we can iterate over &lt;code&gt;a_itor&lt;/code&gt;, and it will return arrays of size two. Since &lt;code&gt;buf_size&lt;/code&gt; was smaller than any dimension, the first dimension will be iterated over first:</source>
          <target state="translated">이제 &lt;code&gt;a_itor&lt;/code&gt; 반복하고 크기 2의 배열을 반환합니다. 이후 &lt;code&gt;buf_size&lt;/code&gt; 모든 사이즈보다 작습니다, 첫 번째 차원은 첫 번째 반복 한을 넘는 것입니다 :</target>
        </trans-unit>
        <trans-unit id="2ae5aab236f57788a41324d9fac04d9f996796fb" translate="yes" xml:space="preserve">
          <source>Now you can do the following to test your module:</source>
          <target state="translated">이제 다음을 수행하여 모듈을 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4103944902505e88c56a448e8658e10eed8eb1b4" translate="yes" xml:space="preserve">
          <source>Now, do one experiment throwing the dice 10 time, and 10 times again, and another throwing the dice 20 times, and 20 times again:</source>
          <target state="translated">이제 주사위 하나를 10 번, 다시 10 번 던지고 다른 하나는 주사위를 20 번, 20 번 던지는 실험을합니다 :</target>
        </trans-unit>
        <trans-unit id="8a0435f8dfb75dd633a8592e953b3a61869c66ed" translate="yes" xml:space="preserve">
          <source>Now, throw the dice 20 times, and 20 times again:</source>
          <target state="translated">이제 주사위를 20 번, 다시 20 번 던지십시오 :</target>
        </trans-unit>
        <trans-unit id="53a0393525e01988d9f9cb1a6b35b57bda883e2e" translate="yes" xml:space="preserve">
          <source>Now, we create indices to manipulate a 3-D array:</source>
          <target state="translated">이제 3 차원 배열을 조작하기위한 인덱스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="34a30eac154cabdf7a90e0db5f0c2478a5065e89" translate="yes" xml:space="preserve">
          <source>NpyAuxData_CloneFunc</source>
          <target state="translated">NpyAuxData_CloneFunc</target>
        </trans-unit>
        <trans-unit id="4c4fef0ec03464a7b11bd65b370680102da32d76" translate="yes" xml:space="preserve">
          <source>NpyAuxData_FreeFunc</source>
          <target state="translated">NpyAuxData_FreeFunc</target>
        </trans-unit>
        <trans-unit id="4e3a83bac5637b7f866d954fa04d5054091c36cc" translate="yes" xml:space="preserve">
          <source>NpyIter</source>
          <target state="translated">NpyIter</target>
        </trans-unit>
        <trans-unit id="8af20c5dee7afb2fdfe083ea49a8e985dcebda12" translate="yes" xml:space="preserve">
          <source>NpyIter_AdvancedNew()</source>
          <target state="translated">NpyIter_AdvancedNew()</target>
        </trans-unit>
        <trans-unit id="b997b8b2b511720cd1069c024299823f83302c9e" translate="yes" xml:space="preserve">
          <source>NpyIter_Copy()</source>
          <target state="translated">NpyIter_Copy()</target>
        </trans-unit>
        <trans-unit id="3fb78c3f62b576c1af874d751640db8eff8c9979" translate="yes" xml:space="preserve">
          <source>NpyIter_CreateCompatibleStrides()</source>
          <target state="translated">NpyIter_CreateCompatibleStrides()</target>
        </trans-unit>
        <trans-unit id="6ad45ab8ae95fe7da10aaac502dcfd57dbf572fa" translate="yes" xml:space="preserve">
          <source>NpyIter_Deallocate()</source>
          <target state="translated">NpyIter_Deallocate()</target>
        </trans-unit>
        <trans-unit id="e39e8d7265758ca02d07e1e363c5debc0123f813" translate="yes" xml:space="preserve">
          <source>NpyIter_EnableExternalLoop()</source>
          <target state="translated">NpyIter_EnableExternalLoop()</target>
        </trans-unit>
        <trans-unit id="bb2c139e38956ebdf5ce855ccf3149ea641f8b05" translate="yes" xml:space="preserve">
          <source>NpyIter_GetAxisStrideArray()</source>
          <target state="translated">NpyIter_GetAxisStrideArray()</target>
        </trans-unit>
        <trans-unit id="1c71d1d0e6fd6d70024c7dd931246be434c73502" translate="yes" xml:space="preserve">
          <source>NpyIter_GetBufferSize()</source>
          <target state="translated">NpyIter_GetBufferSize()</target>
        </trans-unit>
        <trans-unit id="87a85869fc34454e6204a9b83263efd25b3b19a8" translate="yes" xml:space="preserve">
          <source>NpyIter_GetDataPtrArray()</source>
          <target state="translated">NpyIter_GetDataPtrArray()</target>
        </trans-unit>
        <trans-unit id="62cedbb3cbc591b2ae980b3bc6c8c39f71d0c16b" translate="yes" xml:space="preserve">
          <source>NpyIter_GetDescrArray()</source>
          <target state="translated">NpyIter_GetDescrArray()</target>
        </trans-unit>
        <trans-unit id="4d029059dda4dad1438f1bd80a75d454f99834d6" translate="yes" xml:space="preserve">
          <source>NpyIter_GetGetMultiIndex()</source>
          <target state="translated">NpyIter_GetGetMultiIndex()</target>
        </trans-unit>
        <trans-unit id="66611101d6de9d68cce0bd7a8cf2f113e7678aaf" translate="yes" xml:space="preserve">
          <source>NpyIter_GetIndexPtr()</source>
          <target state="translated">NpyIter_GetIndexPtr()</target>
        </trans-unit>
        <trans-unit id="cca4420e7f21331a3412d9afdd62effd1a37e0d5" translate="yes" xml:space="preserve">
          <source>NpyIter_GetInitialDataPtrArray()</source>
          <target state="translated">NpyIter_GetInitialDataPtrArray()</target>
        </trans-unit>
        <trans-unit id="3e2852a223ce3a2b4862d0d75cd1f8c82ebb096d" translate="yes" xml:space="preserve">
          <source>NpyIter_GetInnerFixedStrideArray()</source>
          <target state="translated">NpyIter_GetInnerFixedStrideArray()</target>
        </trans-unit>
        <trans-unit id="a28fb690d09a18949fd479bfd69414cd7025ffd8" translate="yes" xml:space="preserve">
          <source>NpyIter_GetInnerLoopSizePtr()</source>
          <target state="translated">NpyIter_GetInnerLoopSizePtr()</target>
        </trans-unit>
        <trans-unit id="459e9e1f94992501dfb6860694a283afdd8b7cd8" translate="yes" xml:space="preserve">
          <source>NpyIter_GetInnerStrideArray()</source>
          <target state="translated">NpyIter_GetInnerStrideArray()</target>
        </trans-unit>
        <trans-unit id="2b51d4d2bf86336410a4e52bb5d565c6529f946c" translate="yes" xml:space="preserve">
          <source>NpyIter_GetIterIndex()</source>
          <target state="translated">NpyIter_GetIterIndex()</target>
        </trans-unit>
        <trans-unit id="46f9917bbb45a59125169b7d51e52942d1ae839d" translate="yes" xml:space="preserve">
          <source>NpyIter_GetIterIndexRange()</source>
          <target state="translated">NpyIter_GetIterIndexRange()</target>
        </trans-unit>
        <trans-unit id="e7b47088c34a7caf54317e4c555ce5eeee306bf9" translate="yes" xml:space="preserve">
          <source>NpyIter_GetIterSize()</source>
          <target state="translated">NpyIter_GetIterSize()</target>
        </trans-unit>
        <trans-unit id="b37332e2ac83c27d275077f93c1a5465ad79ccdf" translate="yes" xml:space="preserve">
          <source>NpyIter_GetIterView()</source>
          <target state="translated">NpyIter_GetIterView()</target>
        </trans-unit>
        <trans-unit id="260ac3818c138694453f685279c2631308cb9db4" translate="yes" xml:space="preserve">
          <source>NpyIter_GetMultiIndexFunc</source>
          <target state="translated">NpyIter_GetMultiIndexFunc</target>
        </trans-unit>
        <trans-unit id="8e9bba8a229eb928a91402e6ca604c155e3edd64" translate="yes" xml:space="preserve">
          <source>NpyIter_GetNDim()</source>
          <target state="translated">NpyIter_GetNDim()</target>
        </trans-unit>
        <trans-unit id="50db8bb821c577506b545754506219ead592b053" translate="yes" xml:space="preserve">
          <source>NpyIter_GetNOp()</source>
          <target state="translated">NpyIter_GetNOp()</target>
        </trans-unit>
        <trans-unit id="3af90f6f35483cf45c99c7df56d9615992da54dd" translate="yes" xml:space="preserve">
          <source>NpyIter_GetOperandArray()</source>
          <target state="translated">NpyIter_GetOperandArray()</target>
        </trans-unit>
        <trans-unit id="a30bb289b8e86739e36ea60928a2ed64312d2fec" translate="yes" xml:space="preserve">
          <source>NpyIter_GetReadFlags()</source>
          <target state="translated">NpyIter_GetReadFlags()</target>
        </trans-unit>
        <trans-unit id="9c3fe550cadce766e0ebaa92151a7d483873ef4a" translate="yes" xml:space="preserve">
          <source>NpyIter_GetShape()</source>
          <target state="translated">NpyIter_GetShape()</target>
        </trans-unit>
        <trans-unit id="acd9a2ff8ce509672e11ffa76fdbabff9b0c7181" translate="yes" xml:space="preserve">
          <source>NpyIter_GetWriteFlags()</source>
          <target state="translated">NpyIter_GetWriteFlags()</target>
        </trans-unit>
        <trans-unit id="d3120c654191cddf0b70bae47a341b3c86669393" translate="yes" xml:space="preserve">
          <source>NpyIter_GotoIndex()</source>
          <target state="translated">NpyIter_GotoIndex()</target>
        </trans-unit>
        <trans-unit id="4f1654c5ff8fe66cc2194f6b61e83a8e796fe628" translate="yes" xml:space="preserve">
          <source>NpyIter_GotoIterIndex()</source>
          <target state="translated">NpyIter_GotoIterIndex()</target>
        </trans-unit>
        <trans-unit id="d041142525a40cf564e2e7e029c65f6509b0a323" translate="yes" xml:space="preserve">
          <source>NpyIter_GotoMultiIndex()</source>
          <target state="translated">NpyIter_GotoMultiIndex()</target>
        </trans-unit>
        <trans-unit id="ed0864809f09d890d29d15054f92994f033a3f43" translate="yes" xml:space="preserve">
          <source>NpyIter_HasDelayedBufAlloc()</source>
          <target state="translated">NpyIter_HasDelayedBufAlloc()</target>
        </trans-unit>
        <trans-unit id="02c750ba9fcfc1c225387cebcaf21e29ccbc7ab1" translate="yes" xml:space="preserve">
          <source>NpyIter_HasExternalLoop()</source>
          <target state="translated">NpyIter_HasExternalLoop()</target>
        </trans-unit>
        <trans-unit id="1495f8b014a812b7d5168151357e69d6e80056fa" translate="yes" xml:space="preserve">
          <source>NpyIter_HasIndex()</source>
          <target state="translated">NpyIter_HasIndex()</target>
        </trans-unit>
        <trans-unit id="ca93af25bd286e2ffe55a87884c419afcd79bfcd" translate="yes" xml:space="preserve">
          <source>NpyIter_HasMultiIndex()</source>
          <target state="translated">NpyIter_HasMultiIndex()</target>
        </trans-unit>
        <trans-unit id="476b949116e329f3c582aec5e76ce2e141633429" translate="yes" xml:space="preserve">
          <source>NpyIter_IsBuffered()</source>
          <target state="translated">NpyIter_IsBuffered()</target>
        </trans-unit>
        <trans-unit id="0e9bbd57db7393e50498619291fc91b81f37f813" translate="yes" xml:space="preserve">
          <source>NpyIter_IsFirstVisit()</source>
          <target state="translated">NpyIter_IsFirstVisit()</target>
        </trans-unit>
        <trans-unit id="1f0a2dba542604a7f3103127f1353c17a14acca2" translate="yes" xml:space="preserve">
          <source>NpyIter_IsGrowInner()</source>
          <target state="translated">NpyIter_IsGrowInner()</target>
        </trans-unit>
        <trans-unit id="89d075475c669dbbf16b180a78f6a538e870d992" translate="yes" xml:space="preserve">
          <source>NpyIter_IterNextFunc</source>
          <target state="translated">NpyIter_IterNextFunc</target>
        </trans-unit>
        <trans-unit id="959108f7b8a46be14788dcc6f2c656a40adf98c1" translate="yes" xml:space="preserve">
          <source>NpyIter_MultiNew()</source>
          <target state="translated">NpyIter_MultiNew()</target>
        </trans-unit>
        <trans-unit id="1d0fc99dccddcd13dec9ec17ac48fd49dd80c577" translate="yes" xml:space="preserve">
          <source>NpyIter_RemoveMultiIndex()</source>
          <target state="translated">NpyIter_RemoveMultiIndex()</target>
        </trans-unit>
        <trans-unit id="a202ae5802958f468dad8c3e99a4bb5293a4dde8" translate="yes" xml:space="preserve">
          <source>NpyIter_RequiresBuffering()</source>
          <target state="translated">NpyIter_RequiresBuffering()</target>
        </trans-unit>
        <trans-unit id="c109fda112a4bfc0725b7a5833fd46c5602a3173" translate="yes" xml:space="preserve">
          <source>NpyIter_Reset()</source>
          <target state="translated">NpyIter_Reset()</target>
        </trans-unit>
        <trans-unit id="f1294ce3152cab7ceda644b504d717770b89e5c7" translate="yes" xml:space="preserve">
          <source>NpyIter_ResetBasePointers()</source>
          <target state="translated">NpyIter_ResetBasePointers()</target>
        </trans-unit>
        <trans-unit id="7a0acf29df8ba8a7bb014f05220b41b68cf91300" translate="yes" xml:space="preserve">
          <source>NpyIter_ResetToIterIndexRange()</source>
          <target state="translated">NpyIter_ResetToIterIndexRange()</target>
        </trans-unit>
        <trans-unit id="73626c9be0436b0d908d20d700956f6f6ce365b0" translate="yes" xml:space="preserve">
          <source>NpyIter_Type</source>
          <target state="translated">NpyIter_Type</target>
        </trans-unit>
        <trans-unit id="148fb3e1f0f3a0a5a25d7af63d9dc5d6da0841ea" translate="yes" xml:space="preserve">
          <source>NumPy</source>
          <target state="translated">NumPy</target>
        </trans-unit>
        <trans-unit id="a9d2a1b57f4f20938978d4d1c165136857a81954" translate="yes" xml:space="preserve">
          <source>NumPy &amp;mdash; it provides packages like:</source>
          <target state="translated">NumPy &amp;mdash; 다음과 같은 패키지를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f41afbb931d30bf51df3c5d024df1c8569665b6f" translate="yes" xml:space="preserve">
          <source>NumPy Array Scalars and SWIG</source>
          <target state="translated">NumPy 어레이 스칼라 및 SWIG</target>
        </trans-unit>
        <trans-unit id="51ad55a9768d51db51dfc0fe1a4177bdd94eb2e8" translate="yes" xml:space="preserve">
          <source>NumPy C API</source>
          <target state="translated">NumPy C API</target>
        </trans-unit>
        <trans-unit id="3ee0e4047919b43a08c3c67ba0e3fc5e60d9cdaa" translate="yes" xml:space="preserve">
          <source>NumPy C Code Explanations</source>
          <target state="translated">NumPy C 코드 설명</target>
        </trans-unit>
        <trans-unit id="b6796af8c026b629052c1b19daa9ac3e40093d9f" translate="yes" xml:space="preserve">
          <source>NumPy C-API</source>
          <target state="translated">NumPy C-API</target>
        </trans-unit>
        <trans-unit id="dd9b8569488631e17e9c539e945f4151de6b16a5" translate="yes" xml:space="preserve">
          <source>NumPy Distutils - Users Guide</source>
          <target state="translated">NumPy Distutils-사용자 안내서</target>
        </trans-unit>
        <trans-unit id="c956147a86ea5dbf2bd113161d5a9a92844fee2c" translate="yes" xml:space="preserve">
          <source>NumPy Distutils preprocesses C source files (extension: &lt;code&gt;.c.src&lt;/code&gt;) written in a custom templating language to generate C code. The &lt;code&gt;@&lt;/code&gt; symbol is used to wrap macro-style variables to empower a string substitution mechanism that might describe (for instance) a set of data types.</source>
          <target state="translated">NumPy Distutils 는 C 코드를 생성하기 위해 사용자 정의 템플릿 언어로 작성된 C 소스 파일 (확장자 : &lt;code&gt;.c.src&lt;/code&gt; )을 사전 처리 합니다. &lt;code&gt;@&lt;/code&gt; 의 기호 (예를 들어)을 설명 할 수 문자열 대체 메커니즘 데이터 유형의 집합 권한을 부여하는 매크로 스타일의 변수를 포장하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="df1797f9e232d63f819933885e2ac94ec0352d11" translate="yes" xml:space="preserve">
          <source>NumPy Reference</source>
          <target state="translated">NumPy 참조</target>
        </trans-unit>
        <trans-unit id="23bd4c05c1a40776eacbfc3e62d23e6f2151bb0f" translate="yes" xml:space="preserve">
          <source>NumPy Reference, section &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/c-api.generalized-ufuncs.html&quot;&gt;Generalized Universal Function API&lt;/a&gt;.</source>
          <target state="translated">NumPy Reference, &lt;a href=&quot;https://docs.scipy.org/doc/numpy/reference/c-api.generalized-ufuncs.html&quot;&gt;Generalized Universal Function API&lt;/a&gt; 섹션 .</target>
        </trans-unit>
        <trans-unit id="da31cee45cf66b17220997ed18c1c784b896e561" translate="yes" xml:space="preserve">
          <source>NumPy User Guide, section &lt;a href=&quot;https://docs.scipy.org/doc/numpy/user/basics.io.genfromtxt.html&quot;&gt;I/O with NumPy&lt;/a&gt;.</source>
          <target state="translated">NumPy 사용 설명서, &lt;a href=&quot;https://docs.scipy.org/doc/numpy/user/basics.io.genfromtxt.html&quot;&gt;NumPy를 사용한 I / O&lt;/a&gt; 섹션 .</target>
        </trans-unit>
        <trans-unit id="dfb797f6ad28f48ccb741b2ddb48976e23e00a3f" translate="yes" xml:space="preserve">
          <source>NumPy allows the subtraction of two Datetime values, an operation which produces a number with a time unit. Because NumPy doesn&amp;rsquo;t have a physical quantities system in its core, the timedelta64 data type was created to complement datetime64.</source>
          <target state="translated">NumPy를 사용하면 두 개의 Datetime 값을 뺄 수 있으며 시간 단위를 사용하여 숫자를 생성하는 연산입니다. NumPy의 코어에는 물리적 수량 시스템이 없으므로 timedelta64 데이터 유형은 datetime64를 보완하기 위해 만들어졌습니다.</target>
        </trans-unit>
        <trans-unit id="3681d5d48b000e09eb74bcf9d80a233df272bb0f" translate="yes" xml:space="preserve">
          <source>NumPy and SWIG</source>
          <target state="translated">NUMPY와 SWIG</target>
        </trans-unit>
        <trans-unit id="c826d8c52c25e4bbad4a786ac8dfdcf96c8f11ac" translate="yes" xml:space="preserve">
          <source>NumPy and Swig</source>
          <target state="translated">NumPy와 Swig</target>
        </trans-unit>
        <trans-unit id="45e9cb3043e5f97824505a55cbdfc5294d3ba613" translate="yes" xml:space="preserve">
          <source>NumPy arrays consist of two major components, the raw array data (from now on, referred to as the data buffer), and the information about the raw array data. The data buffer is typically what people think of as arrays in C or Fortran, a contiguous (and fixed) block of memory containing fixed sized data items. NumPy also contains a significant set of data that describes how to interpret the data in the data buffer. This extra information contains (among other things):</source>
          <target state="translated">NumPy 배열은 두 가지 주요 구성 요소, 즉 원시 배열 데이터 (지금부터 데이터 버퍼라고 함)와 원시 배열 데이터에 대한 정보로 구성됩니다. 데이터 버퍼는 일반적으로 사람들이 고정 된 크기의 데이터 항목을 포함하는 연속 된 (고정 된) 메모리 블록 인 C 또는 Fortran의 배열이라고 생각합니다. NumPy에는 데이터 버퍼의 데이터를 해석하는 방법을 설명하는 중요한 데이터 세트도 포함되어 있습니다. 이 추가 정보에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="acba6e54dd52e6409526789be99f698cf4b66810" translate="yes" xml:space="preserve">
          <source>NumPy binary files (NPY, NPZ)</source>
          <target state="translated">NumPy 이진 파일 (NPY, NPZ)</target>
        </trans-unit>
        <trans-unit id="e9e0392d352bfceb00b69b8aae489d3cfcd35b94" translate="yes" xml:space="preserve">
          <source>NumPy core libraries</source>
          <target state="translated">NumPy 핵심 라이브러리</target>
        </trans-unit>
        <trans-unit id="ccf16bd0788fff6636ddfa05a6cb0f611b1a5988" translate="yes" xml:space="preserve">
          <source>NumPy core math library</source>
          <target state="translated">NumPy 핵심 수학 라이브러리</target>
        </trans-unit>
        <trans-unit id="973c555328d9b9a87fd43d16a1a900328d00f946" translate="yes" xml:space="preserve">
          <source>NumPy data type descriptions are instances of the &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt;&lt;code&gt;dtype&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">NumPy 데이터 형식 설명은 &lt;a href=&quot;generated/numpy.dtype#numpy.dtype&quot;&gt; &lt;code&gt;dtype&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="be9b40e5263a5085939745fd3402fa19fc002ecb" translate="yes" xml:space="preserve">
          <source>NumPy distutils - users guide</source>
          <target state="translated">NumPy distutils-사용자 안내서</target>
        </trans-unit>
        <trans-unit id="7682241df5064b6dcd3fa7f5b4aadf68c8c520d1" translate="yes" xml:space="preserve">
          <source>NumPy distutils supports automatic conversion of source files named &amp;lt;somefile&amp;gt;.src. This facility can be used to maintain very similar code blocks requiring only simple changes between blocks. During the build phase of setup, if a template file named &amp;lt;somefile&amp;gt;.src is encountered, a new file named &amp;lt;somefile&amp;gt; is constructed from the template and placed in the build directory to be used instead. Two forms of template conversion are supported. The first form occurs for files named &amp;lt;file&amp;gt;.ext.src where ext is a recognized Fortran extension (f, f90, f95, f77, for, ftn, pyf). The second form is used for all other cases.</source>
          <target state="translated">NumPy distutils는 &amp;lt;somefile&amp;gt; .src라는 소스 파일의 자동 변환을 지원합니다. 이 기능을 사용하면 블록간에 간단한 변경 만 필요한 매우 유사한 코드 블록을 유지할 수 있습니다. 설정의 빌드 단계에서 &amp;lt;somefile&amp;gt; .src라는 템플리트 파일이 발견되면 &amp;lt;somefile&amp;gt;이라는 새 파일이 템플리트에서 구성되고 대신 빌드 디렉토리에 배치됩니다. 두 가지 형식의 템플릿 변환이 지원됩니다. 첫 번째 형식은 &amp;lt;file&amp;gt; .ext.src라는 파일에서 발생합니다. 여기서 ext는 인식되는 Fortran 확장명입니다 (f, f90, f95, f77, for, ftn, pyf). 두 번째 양식은 다른 모든 경우에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="52e91b4c51a9db40b4247ecf6771ad0f610935f6" translate="yes" xml:space="preserve">
          <source>NumPy distutils supports automatic conversion of source files named &amp;lt;somefile&amp;gt;.src. This facility can be used to maintain very similar code blocks requiring only simple changes between blocks. During the build phase of setup, if a template file named &amp;lt;somefile&amp;gt;.src is encountered, a new file named &amp;lt;somefile&amp;gt; is constructed from the template and placed in the build directory to be used instead. Two forms of template conversion are supported. The first form occurs for files named &amp;lt;file&amp;gt;.ext.src where ext is a recognized Fortran extension (f, f90, f95, f77, for, ftn, pyf). The second form is used for all other cases. See &lt;a href=&quot;distutils_guide#templating&quot;&gt;Conversion of .src files using Templates&lt;/a&gt;.</source>
          <target state="translated">NumPy distutils는 &amp;lt;somefile&amp;gt; .src라는 소스 파일의 자동 변환을 지원합니다. 이 기능을 사용하면 블록간에 간단한 변경 만 필요한 매우 유사한 코드 블록을 유지할 수 있습니다. 설정의 빌드 단계에서 &amp;lt;somefile&amp;gt; .src라는 템플리트 파일이 발견되면 &amp;lt;somefile&amp;gt;이라는 새 파일이 템플리트에서 구성되고 대신 빌드 디렉토리에 배치됩니다. 두 가지 형식의 템플릿 변환이 지원됩니다. 첫 번째 형식은 &amp;lt;file&amp;gt; .ext.src라는 파일에서 발생합니다. 여기서 ext는 인식되는 Fortran 확장명입니다 (f, f90, f95, f77, for, ftn, pyf). 두 번째 양식은 다른 모든 경우에 사용됩니다. &lt;a href=&quot;distutils_guide#templating&quot;&gt;템플릿을 사용하여 .src 파일 변환을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="99117692035516c5cb720484aff4e4e585660600" translate="yes" xml:space="preserve">
          <source>NumPy has a set of rules for dealing with arrays that have differing shapes which are applied whenever functions take multiple operands which combine element-wise. This is called &lt;a href=&quot;ufuncs#ufuncs-broadcasting&quot;&gt;broadcasting&lt;/a&gt;. The &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt;&lt;code&gt;nditer&lt;/code&gt;&lt;/a&gt; object can apply these rules for you when you need to write such a function.</source>
          <target state="translated">NumPy에는 함수가 요소별로 결합하는 여러 피연산자를 사용할 때마다 적용되는 다른 모양을 가진 배열을 처리하기위한 규칙 세트가 있습니다. 이것을 &lt;a href=&quot;ufuncs#ufuncs-broadcasting&quot;&gt;방송&lt;/a&gt; 이라고 합니다. &lt;a href=&quot;generated/numpy.nditer#numpy.nditer&quot;&gt; &lt;code&gt;nditer&lt;/code&gt; 의&lt;/a&gt; 이 같은 함수를 작성해야하는 경우 객체는 이러한 규칙을 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60168f40b56e28aca9cf44fb018703394a1b278b" translate="yes" xml:space="preserve">
          <source>NumPy has the following versioning scheme (numbers given are examples; they can be &amp;gt; 9) in principle):</source>
          <target state="translated">NumPy에는 다음과 같은 버전 관리 체계가 있습니다 (주어진 숫자는 예제이며 9보다 클 수 있음).</target>
        </trans-unit>
        <trans-unit id="79eee1716a93d0c26d644ba6dc16d49583d1dea3" translate="yes" xml:space="preserve">
          <source>NumPy includes several constants:</source>
          <target state="translated">NumPy는 여러 상수를 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="7f95e3acee5a2de64945dfe9e2cae9083154d9ea" translate="yes" xml:space="preserve">
          <source>NumPy internals</source>
          <target state="translated">NumPy 내부</target>
        </trans-unit>
        <trans-unit id="c8046368fea8bda3d4541728b814c2be74d1348d" translate="yes" xml:space="preserve">
          <source>NumPy provides a C-API to enable users to extend the system and get access to the array object for use in other routines. The best way to truly understand the C-API is to read the source code. If you are unfamiliar with (C) source code, however, this can be a daunting experience at first. Be assured that the task becomes easier with practice, and you may be surprised at how simple the C-code can be to understand. Even if you don&amp;rsquo;t think you can write C-code from scratch, it is much easier to understand and modify already-written source code then create it &lt;em&gt;de novo&lt;/em&gt;.</source>
          <target state="translated">NumPy는 C-API를 제공하여 사용자가 시스템을 확장하고 다른 루틴에서 사용하기 위해 배열 객체에 액세스 할 수 있도록합니다. C-API를 진정으로 이해하는 가장 좋은 방법은 소스 코드를 읽는 것입니다. 그러나 (C) 소스 코드에 익숙하지 않다면 처음에는 어려운 경험이 될 수 있습니다. 실습을 통해 작업이 쉬워 지므로 C 코드를 이해하기가 얼마나 간단한 지 놀랄 수 있습니다. C 코드를 처음부터 작성할 수 없다고 생각하더라도 이미 작성된 소스 코드를 이해하고 수정 한 다음 &lt;em&gt;새로운&lt;/em&gt; 코드를 작성하는 것이 훨씬 쉽습니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
