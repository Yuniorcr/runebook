<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="numpy">
    <body>
      <group id="numpy">
        <trans-unit id="4374aaee247fb237ce6c97d5c8d64bbe474d16de" translate="yes" xml:space="preserve">
          <source>to</source>
          <target state="translated">to</target>
        </trans-unit>
        <trans-unit id="9b1fda8ace6e89d25e3a8cbabcfb78e28c9ddeb0" translate="yes" xml:space="preserve">
          <source>to +1 for</source>
          <target state="translated">에 +1</target>
        </trans-unit>
        <trans-unit id="16e306ad4de2ed181679e6ab7fcaaee69ea6e7e1" translate="yes" xml:space="preserve">
          <source>to fix the data length problem, and &lt;a href=&quot;#input-arrays&quot;&gt;Input Arrays&lt;/a&gt; will work fine, but &lt;a href=&quot;#in-place-arrays&quot;&gt;In-Place Arrays&lt;/a&gt; might fail type-checking.</source>
          <target state="translated">데이터 길이 문제를 해결하고 &lt;a href=&quot;#input-arrays&quot;&gt;입력 배열&lt;/a&gt; 은 정상적으로 작동하지만 내부 &lt;a href=&quot;#in-place-arrays&quot;&gt;배열&lt;/a&gt; 은 유형 검사에 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="95ae7b35dde44fa5c9d357b7f07fa08e3cb46013" translate="yes" xml:space="preserve">
          <source>to represent each value uniquely. Different elements may have a different number of digits. The value of the &lt;code&gt;precision&lt;/code&gt; option is ignored.</source>
          <target state="translated">각 값을 고유하게 나타냅니다. 다른 요소는 다른 자릿수를 가질 수 있습니다. &lt;code&gt;precision&lt;/code&gt; 옵션 의 값 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="5dd8cb2bcd4a9b931952c41222fa43febd3bb03f" translate="yes" xml:space="preserve">
          <source>to the working build directory for you project, and this problem will be fixed. It is suggested that you do this anyway, as it only increases the capabilities of your Python interface.</source>
          <target state="translated">프로젝트의 작업 빌드 디렉토리로 이동하면이 문제가 해결됩니다. 파이썬 인터페이스의 기능 만 향상시키기 때문에 어쨌든이 작업을 수행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0379d428ea0f0836a773a332a60958d79cf24b5a" translate="yes" xml:space="preserve">
          <source>transpose</source>
          <target state="translated">transpose</target>
        </trans-unit>
        <trans-unit id="5f946e1ced44070d1839f34b41052d7bd12f3944" translate="yes" xml:space="preserve">
          <source>tuple of array dimensions</source>
          <target state="translated">배열 차원의 튜플</target>
        </trans-unit>
        <trans-unit id="695101fbec8a1b13644c179a7dd1f7522255d005" translate="yes" xml:space="preserve">
          <source>tuple of bytes steps in each dimension</source>
          <target state="translated">각 차원의 튜플 바이트 단계</target>
        </trans-unit>
        <trans-unit id="e4446d1731f587461a48f513954e125002636bb7" translate="yes" xml:space="preserve">
          <source>tuple of int_types: functions as does a single int_type argument, except that the argument is interpreted as an nd-index into the array.</source>
          <target state="translated">int_types의 튜플 : 인수가 배열의 nd-index로 해석되는 것을 제외하고는 단일 int_type 인수와 동일한 기능을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0e46bf3f7ea41c027482ef49f372e0e7d17dcfc2" translate="yes" xml:space="preserve">
          <source>tuple of ints: &lt;code&gt;i&lt;/code&gt; in the &lt;code&gt;j&lt;/code&gt;-th place in the tuple means &lt;code&gt;a&lt;/code&gt;&amp;rsquo;s &lt;code&gt;i&lt;/code&gt;-th axis becomes &lt;code&gt;a.transpose()&lt;/code&gt;&amp;rsquo;s &lt;code&gt;j&lt;/code&gt;-th axis.</source>
          <target state="translated">int 치의 튜플 : &lt;code&gt;i&lt;/code&gt; 에서 &lt;code&gt;j&lt;/code&gt; 튜플 번째 장소 수단 의 &lt;code&gt;i&lt;/code&gt; 번째 축이된다 &lt;code&gt;a.transpose()&lt;/code&gt; S ' &lt;code&gt;j&lt;/code&gt; 번째 축. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d28c5d1a070327205b30fe8531773766ea947a03" translate="yes" xml:space="preserve">
          <source>tuple of iterators along &lt;code&gt;self&lt;/code&gt;&amp;rsquo;s &amp;ldquo;components.&amp;rdquo;</source>
          <target state="translated">&lt;code&gt;self&lt;/code&gt; '구성 요소'에 따른 반복자 튜플</target>
        </trans-unit>
        <trans-unit id="bb8ce8fa84c719c1bbcf894bbe004f41bdb9ca06" translate="yes" xml:space="preserve">
          <source>two 128-bit floats, platform?</source>
          <target state="translated">128 비트 플로트 2 개, 플랫폼?</target>
        </trans-unit>
        <trans-unit id="4a273fc5b4b2f1ccd2810a037fdece1201f24956" translate="yes" xml:space="preserve">
          <source>two 32-bit floats</source>
          <target state="translated">2 개의 32 비트 플로트</target>
        </trans-unit>
        <trans-unit id="3137ebae0faac986aa18ecd2cf17247e93cf8551" translate="yes" xml:space="preserve">
          <source>two 64-bit floats</source>
          <target state="translated">2 개의 64 비트 수레</target>
        </trans-unit>
        <trans-unit id="d1d4a988d03f6a10ddf77712e9a2326afd520a52" translate="yes" xml:space="preserve">
          <source>two 96-bit floats, platform?</source>
          <target state="translated">96 비트 플로트 2 개, 플랫폼?</target>
        </trans-unit>
        <trans-unit id="51e69892ab49df85c6230ccc57f8e1d1606caccc" translate="yes" xml:space="preserve">
          <source>u</source>
          <target state="translated">u</target>
        </trans-unit>
        <trans-unit id="f176e851b7e196ef0d57ceb9e9c0d534373fab76" translate="yes" xml:space="preserve">
          <source>ufunc.accumulate()</source>
          <target state="translated">ufunc.accumulate()</target>
        </trans-unit>
        <trans-unit id="3afb2f2c14b058d406a7d011ba9e9fcb61cb4d5b" translate="yes" xml:space="preserve">
          <source>ufunc.at()</source>
          <target state="translated">ufunc.at()</target>
        </trans-unit>
        <trans-unit id="b2203289069bb97ba80f99e40ed94c691de1e5d3" translate="yes" xml:space="preserve">
          <source>ufunc.identity</source>
          <target state="translated">ufunc.identity</target>
        </trans-unit>
        <trans-unit id="7f555ddeb7c7ab8bb8e00ea4525da52b4aa57d26" translate="yes" xml:space="preserve">
          <source>ufunc.nargs</source>
          <target state="translated">ufunc.nargs</target>
        </trans-unit>
        <trans-unit id="11242754eba2d4a40a968da3622059ecc44c27bc" translate="yes" xml:space="preserve">
          <source>ufunc.nin</source>
          <target state="translated">ufunc.nin</target>
        </trans-unit>
        <trans-unit id="6f73343cc6915896eef6f0fc25b8f995ccdd30a6" translate="yes" xml:space="preserve">
          <source>ufunc.nout</source>
          <target state="translated">ufunc.nout</target>
        </trans-unit>
        <trans-unit id="243b3229b9bbd3c76f87557d62d03aaae946243b" translate="yes" xml:space="preserve">
          <source>ufunc.ntypes</source>
          <target state="translated">ufunc.ntypes</target>
        </trans-unit>
        <trans-unit id="0ca5a5c1905a8786fd349c797dbd655dce528380" translate="yes" xml:space="preserve">
          <source>ufunc.outer()</source>
          <target state="translated">ufunc.outer()</target>
        </trans-unit>
        <trans-unit id="740194df52956c6a322db7bcdcab2b25c5a1eb8d" translate="yes" xml:space="preserve">
          <source>ufunc.reduce()</source>
          <target state="translated">ufunc.reduce()</target>
        </trans-unit>
        <trans-unit id="055c89ccb210644ad33e5681a3a32b73719c2341" translate="yes" xml:space="preserve">
          <source>ufunc.reduceat()</source>
          <target state="translated">ufunc.reduceat()</target>
        </trans-unit>
        <trans-unit id="466a95f51c8cc8d8d5e429f560cb744517f8b29b" translate="yes" xml:space="preserve">
          <source>ufunc.signature</source>
          <target state="translated">ufunc.signature</target>
        </trans-unit>
        <trans-unit id="3ffc066183d2e5c8b2ed6e5dbd4492deded40174" translate="yes" xml:space="preserve">
          <source>ufunc.types</source>
          <target state="translated">ufunc.types</target>
        </trans-unit>
        <trans-unit id="8012ff51a005eaa8ed8f4c08ccdce580f462fff6" translate="yes" xml:space="preserve">
          <source>unchanged</source>
          <target state="translated">unchanged</target>
        </trans-unit>
        <trans-unit id="a1a69d7d1c031266d6f1c7384fcd34f9b338ab59" translate="yes" xml:space="preserve">
          <source>unsigned Py_intptr_t (an integer that is the size of a pointer on the platform).</source>
          <target state="translated">부호없는 Py_intptr_t (플랫폼의 포인터 크기 인 정수).</target>
        </trans-unit>
        <trans-unit id="fdc18dcd473df56e24394a603bf719736a1efe79" translate="yes" xml:space="preserve">
          <source>unsigned byte</source>
          <target state="translated">부호없는 바이트</target>
        </trans-unit>
        <trans-unit id="31d916941b2254a2d922c096a6c0813816f84bdb" translate="yes" xml:space="preserve">
          <source>unsigned char; The constants &lt;a href=&quot;c-api.array#c.NPY_FALSE&quot;&gt;&lt;code&gt;NPY_FALSE&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;c-api.array#c.NPY_TRUE&quot;&gt;&lt;code&gt;NPY_TRUE&lt;/code&gt;&lt;/a&gt; are also defined.</source>
          <target state="translated">부호없는 숯; 상수 &lt;a href=&quot;c-api.array#c.NPY_FALSE&quot;&gt; &lt;code&gt;NPY_FALSE&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;c-api.array#c.NPY_TRUE&quot;&gt; &lt;code&gt;NPY_TRUE&lt;/code&gt; &lt;/a&gt; 도 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="2626ac7a48f1f07a409dbf9acb1e5814c8a9defa" translate="yes" xml:space="preserve">
          <source>unsigned int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0808dbcd7aef8dc0ee223e4d84cd8a2ddafdc83" translate="yes" xml:space="preserve">
          <source>unsigned integer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995d911a51805fb95053a05be72eb2908963d90c" translate="yes" xml:space="preserve">
          <source>unsigned short</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2b128800d4e129def769b7ec5decc00517fa8b" translate="yes" xml:space="preserve">
          <source>us</source>
          <target state="translated">us</target>
        </trans-unit>
        <trans-unit id="bb5dbce7c7fc91e42137b7ed0b685952e8d18f3b" translate="yes" xml:space="preserve">
          <source>used the nditer as a context manager using the &lt;code&gt;with&lt;/code&gt; statement, and the temporary data will be written back when the context is exited.</source>
          <target state="translated">&lt;code&gt;with&lt;/code&gt; 문을 사용하여 nditer를 컨텍스트 관리자로 사용 했으며 컨텍스트가 종료되면 임시 데이터가 다시 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="6d8b8731ae45d0b6f7734d6c02fc8c99ebc80ed3" translate="yes" xml:space="preserve">
          <source>values automatically have whitespace removed from the end when indexed</source>
          <target state="translated">인덱싱 할 때 값의 끝에서 공백이 자동으로 제거됩니다</target>
        </trans-unit>
        <trans-unit id="5baec5c424b72a798ed9e6ad67fb93a926716bd8" translate="yes" xml:space="preserve">
          <source>values to insert at those indices. Its shape and dimension are broadcast to match that of &lt;a href=&quot;numpy.indices#numpy.indices&quot;&gt;&lt;code&gt;indices&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">해당 인덱스에 삽입 할 값입니다. 그것의 모양과 차원은 &lt;a href=&quot;numpy.indices#numpy.indices&quot;&gt; &lt;code&gt;indices&lt;/code&gt; &lt;/a&gt; 의 모양과 일치하도록 방송됩니다 .</target>
        </trans-unit>
        <trans-unit id="4de50d502d1b349419ea8b503c480391588e6829" translate="yes" xml:space="preserve">
          <source>variable PATH. Equivalent to posix &lt;code&gt;which&lt;/code&gt; command.</source>
          <target state="translated">변수 PATH. posix &lt;code&gt;which&lt;/code&gt; 명령과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="e09f1aceeed50982588504b15839a69838e80256" translate="yes" xml:space="preserve">
          <source>vecmat</source>
          <target state="translated">vecmat</target>
        </trans-unit>
        <trans-unit id="9bc50cca69cebe36a27161a0fa8f357300da80cd" translate="yes" xml:space="preserve">
          <source>vector-matrix multiplication</source>
          <target state="translated">벡터 행렬 곱셈</target>
        </trans-unit>
        <trans-unit id="c7e235514259ccc281233d75d56bc01af9e085dd" translate="yes" xml:space="preserve">
          <source>vector-vector multiplication</source>
          <target state="translated">벡터-벡터 곱셈</target>
        </trans-unit>
        <trans-unit id="9e26fc16e498359404951f7d38e364302a88ad14" translate="yes" xml:space="preserve">
          <source>vectorize.__call__()</source>
          <target state="translated">vectorize.__call__()</target>
        </trans-unit>
        <trans-unit id="19399207372e8d7c054365b0a529ccf2981f3b82" translate="yes" xml:space="preserve">
          <source>vectorized string operations are provided as methods (e.g. &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.endswith.html#numpy.chararray.endswith&quot;&gt;&lt;code&gt;endswith&lt;/code&gt;&lt;/a&gt;) and infix operators (e.g. &lt;code&gt;&quot;+&quot;, &quot;*&quot;, &quot;%&quot;&lt;/code&gt;)</source>
          <target state="translated">벡터화 된 문자열 연산은 메소드 (예 : &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/reference/generated/numpy.chararray.endswith.html#numpy.chararray.endswith&quot;&gt; &lt;code&gt;endswith&lt;/code&gt; &lt;/a&gt; ) 및 삽입 연산자 (예 : &lt;code&gt;&quot;+&quot;, &quot;*&quot;, &quot;%&quot;&lt;/code&gt; )로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="6b72c98ed88bb4df85be360c468c57b064be204e" translate="yes" xml:space="preserve">
          <source>vectorized string operations are provided as methods (e.g. &lt;a href=&quot;numpy.char.chararray.endswith#numpy.char.chararray.endswith&quot;&gt;&lt;code&gt;endswith&lt;/code&gt;&lt;/a&gt;) and infix operators (e.g. &lt;code&gt;&quot;+&quot;, &quot;*&quot;, &quot;%&quot;&lt;/code&gt;)</source>
          <target state="translated">벡터화 된 문자열 연산은 메소드 (예 : &lt;a href=&quot;numpy.char.chararray.endswith#numpy.char.chararray.endswith&quot;&gt; &lt;code&gt;endswith&lt;/code&gt; &lt;/a&gt; ) 및 삽입 연산자 (예 : &lt;code&gt;&quot;+&quot;, &quot;*&quot;, &quot;%&quot;&lt;/code&gt; )로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b595ca1ad64c45adbaa59fe3b6b7fb1e998d72d6" translate="yes" xml:space="preserve">
          <source>vectorized string operations are provided as methods (e.g. &lt;code&gt;str.endswith&lt;/code&gt;) and infix operators (e.g. &lt;code&gt;+, *, %&lt;/code&gt;)</source>
          <target state="translated">벡터화 된 문자열 연산은 메소드 (예 : &lt;code&gt;str.endswith&lt;/code&gt; ) 및 삽입 연산자 (예 : &lt;code&gt;+, *, %&lt;/code&gt; )로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="e122cd45e8e9df8c348e263b4143f2a68e76e98d" translate="yes" xml:space="preserve">
          <source>vectorized string operations are provided as methods (e.g. &lt;code&gt;str.endswith&lt;/code&gt;) and infix operators (e.g. &lt;code&gt;+&lt;/code&gt;, &lt;code&gt;*&lt;/code&gt;,``%``)</source>
          <target state="translated">벡터화 된 문자열 연산은 메소드 (예 : &lt;code&gt;str.endswith&lt;/code&gt; ) 및 삽입 연산자 (예 : &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;*&lt;/code&gt; ,``%``)로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="bfd190f5456486754027935ce9caa900beed7ccd" translate="yes" xml:space="preserve">
          <source>version:</source>
          <target state="translated">version:</target>
        </trans-unit>
        <trans-unit id="e9cede9b80ea3abd89c755f1117337d429162c86" translate="yes" xml:space="preserve">
          <source>void</source>
          <target state="translated">void</target>
        </trans-unit>
        <trans-unit id="48b1339239922b5e07d5ce4184fcf5e87effde2b" translate="yes" xml:space="preserve">
          <source>von Mises, R., &amp;ldquo;Mathematical Theory of Probability and Statistics&amp;rdquo;, New York: Academic Press, 1964.</source>
          <target state="translated">von Mises, R., &quot;확률과 통계의 수학 이론&quot;, 뉴욕 : Academic Press, 1964</target>
        </trans-unit>
        <trans-unit id="3ddc3bec9c70c5c7e765cd8cf5fa5aa389917ef0" translate="yes" xml:space="preserve">
          <source>warn: Print a &lt;code&gt;RuntimeWarning&lt;/code&gt; (via the Python &lt;a href=&quot;https://docs.python.org/dev/library/warnings.html#module-warnings&quot;&gt;&lt;code&gt;warnings&lt;/code&gt;&lt;/a&gt; module).</source>
          <target state="translated">경고 : Python &lt;a href=&quot;https://docs.python.org/dev/library/warnings.html#module-warnings&quot;&gt; &lt;code&gt;warnings&lt;/code&gt; &lt;/a&gt; 모듈을 통해 &lt;code&gt;RuntimeWarning&lt;/code&gt; 을 인쇄하십시오 .</target>
        </trans-unit>
        <trans-unit id="c0ee32d825d6ddb4025ab74af0609969ecc419c8" translate="yes" xml:space="preserve">
          <source>week</source>
          <target state="translated">week</target>
        </trans-unit>
        <trans-unit id="916d4dfd40fa788d4f97c5cbd19732b935ee5e9e" translate="yes" xml:space="preserve">
          <source>what are the names of the &amp;ldquo;&lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-field&quot;&gt;fields&lt;/a&gt;&amp;rdquo; of the structure, by which they can be &lt;a href=&quot;arrays.indexing#arrays-indexing-fields&quot;&gt;accessed&lt;/a&gt;,</source>
          <target state="translated">은 &quot;의 이름이 무엇입니까 &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-field&quot;&gt;필드&lt;/a&gt; 가 될 수있는 구조&quot;, &lt;a href=&quot;arrays.indexing#arrays-indexing-fields&quot;&gt;액세스는&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="4bdf2c9a9320c2bb30296f2a5be0fd38903dcd4d" translate="yes" xml:space="preserve">
          <source>what exactly &lt;code&gt;seq&lt;/code&gt; is. Is it a single value to be altered in-place? Is it an array, and if so what is its length? Is it input-only? Output-only? Input-output? &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; cannot determine these details, and does not attempt to do so.</source>
          <target state="translated">정확히 &lt;code&gt;seq&lt;/code&gt; 는 무엇입니까 . 제자리에서 변경되는 단일 값입니까? 배열입니까, 그렇다면 길이는 얼마입니까? 입력 전용입니까? 출력 전용? 입출력? &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; 는 이러한 세부 정보를 확인할 수 없으며 그렇게 시도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="52be18891fe12a3ccc69a948daf4a9df395f8160" translate="yes" xml:space="preserve">
          <source>what is the data-type of each &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-field&quot;&gt;field&lt;/a&gt;, and</source>
          <target state="translated">무엇 각각의 데이터 타입 &lt;a href=&quot;https://docs.scipy.org/doc/numpy-1.17.0/glossary.html#term-field&quot;&gt;필드&lt;/a&gt; , 및</target>
        </trans-unit>
        <trans-unit id="d0192f6d7a8d53807254215b637508c53444c530" translate="yes" xml:space="preserve">
          <source>when &lt;code&gt;i = len(indices) - 1&lt;/code&gt; (so for the last index), &lt;code&gt;indices[i+1] = a.shape[axis]&lt;/code&gt;.</source>
          <target state="translated">경우 &lt;code&gt;i = len(indices) - 1&lt;/code&gt; (그래서 마지막 인덱스) &lt;code&gt;indices[i+1] = a.shape[axis]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46148cc3b4d2b3ac8073f14b0cba7f25ffff54bd" translate="yes" xml:space="preserve">
          <source>where</source>
          <target state="translated">where</target>
        </trans-unit>
        <trans-unit id="cfaf285482cf6c4f89cd534ed09bc1fa065bdd59" translate="yes" xml:space="preserve">
          <source>where &amp;lt;package install directory&amp;gt; is the package (or sub-package) directory such as &amp;lsquo;/usr/lib/python2.4/site-packages/mypackage&amp;rsquo; (&amp;lsquo;C: Python2.4 Lib site-packages mypackage&amp;rsquo;) or &amp;lsquo;/usr/lib/python2.4/site- packages/mypackage/mysubpackage&amp;rsquo; (&amp;lsquo;C: Python2.4 Lib site-packages mypackage mysubpackage&amp;rsquo;).</source>
          <target state="translated">여기서 &amp;lt;package install directory&amp;gt;는 '/usr/lib/python2.4/site-packages/mypackage'('C : Python2.4 Lib site-packages mypackage') 또는 '와 같은 패키지 (또는 하위 패키지) 디렉토리입니다. /usr/lib/python2.4/site- packages / mypackage / mysubpackage '('C : Python2.4 Lib 사이트 패키지 mypackage mysubpackage ').</target>
        </trans-unit>
        <trans-unit id="27722a8f94c49a1d17c79d2d98a28d7cd4fd50e2" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the elements of &lt;code&gt;x&lt;/code&gt; and the last index is the degree of the Chebyshev polynomial.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt; . &lt;code&gt;V&lt;/code&gt; 의 주요 지수는 &lt;code&gt;x&lt;/code&gt; 의 원소를 색인하고 마지막 지수는 체비 쇼프 다항식의 차수입니다.</target>
        </trans-unit>
        <trans-unit id="833860b51f45a74ee06a8481e7b59dec2776a9c5" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the elements of &lt;code&gt;x&lt;/code&gt; and the last index is the degree of the Hermite polynomial.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt; . &lt;code&gt;V&lt;/code&gt; 의 주요 지수는 &lt;code&gt;x&lt;/code&gt; 의 요소를 색인화하고 마지막 색인은 Hermite 다항식의 차수입니다.</target>
        </trans-unit>
        <trans-unit id="c69795dbab93fd4905d0bc022d8ac56b6e1e0f54" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the elements of &lt;code&gt;x&lt;/code&gt; and the last index is the degree of the HermiteE polynomial.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt; . &lt;code&gt;V&lt;/code&gt; 의 주요 지수는 &lt;code&gt;x&lt;/code&gt; 의 요소를 색인화하고 마지막 색인은 HermiteE 다항식의 차수입니다.</target>
        </trans-unit>
        <trans-unit id="bde30796ed968ed7657f0df45af477fbb40047da" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the elements of &lt;code&gt;x&lt;/code&gt; and the last index is the degree of the Laguerre polynomial.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt; . &lt;code&gt;V&lt;/code&gt; 의 주요 지수는 &lt;code&gt;x&lt;/code&gt; 의 원소를 색인하고 마지막 지수는 Laguerre 다항식의 차수입니다.</target>
        </trans-unit>
        <trans-unit id="c6b4ff5c9a6986803c5708a92c411c4b253dec9c" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the elements of &lt;code&gt;x&lt;/code&gt; and the last index is the degree of the Legendre polynomial.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt; . &lt;code&gt;V&lt;/code&gt; 의 주요 지수는 &lt;code&gt;x&lt;/code&gt; 의 요소를 색인화하고 마지막 색인은 Legendre 다항식의 차수입니다.</target>
        </trans-unit>
        <trans-unit id="538f7fb88a53c793cea30da00779237a649749e0" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the elements of &lt;code&gt;x&lt;/code&gt; and the last index is the power of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg&lt;/code&gt; . &lt;code&gt;V&lt;/code&gt; 의 주요 지수는 &lt;code&gt;x&lt;/code&gt; 의 요소를 색인화하고 마지막 색인은 &lt;code&gt;x&lt;/code&gt; 의 거듭 제곱입니다 .</target>
        </trans-unit>
        <trans-unit id="4de9c198e8ca08018e505031f38efeea306eb563" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; and &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y)&lt;/code&gt; and the last index encodes the degrees of the Chebyshev polynomials.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; 및 &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt; 입니다. &lt;code&gt;V&lt;/code&gt; 의 주요 지수 는 점 &lt;code&gt;(x, y)&lt;/code&gt; 을 색인화하고 마지막 색인은 체비 쇼프 다항식의 차수를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="9c023f7138aa8d794b6a146fabd54c47a0508cbe" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; and &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y)&lt;/code&gt; and the last index encodes the degrees of the Hermite polynomials.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; 및 &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt; 입니다. &lt;code&gt;V&lt;/code&gt; 의 선행 지수 는 점 &lt;code&gt;(x, y)&lt;/code&gt; 을 색인화하고 마지막 색인은 은자 다항식의 차수를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="d3cf2ba80598064afebb705d3f96da951d339ad7" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; and &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y)&lt;/code&gt; and the last index encodes the degrees of the HermiteE polynomials.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; 및 &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt; 입니다. &lt;code&gt;V&lt;/code&gt; 의 선행 지수 는 점 &lt;code&gt;(x, y)&lt;/code&gt; 을 색인화하고 마지막 색인은 HermiteE 다항식의 차수를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="931ddf7a677dd0bb054e68bb0682795a7ecb2d44" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; and &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y)&lt;/code&gt; and the last index encodes the degrees of the Laguerre polynomials.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; 및 &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt; 입니다. &lt;code&gt;V&lt;/code&gt; 의 주요 지수 는 점 &lt;code&gt;(x, y)&lt;/code&gt; 을 색인화하고 마지막 색인은 Laguerre 다항식의 차수를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="5b4f668563e3498fcf093b6cc70e0bf28243dbb5" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; and &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y)&lt;/code&gt; and the last index encodes the degrees of the Legendre polynomials.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; 및 &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt; 입니다. &lt;code&gt;V&lt;/code&gt; 의 주요 지수 는 점 &lt;code&gt;(x, y)&lt;/code&gt; 을 색인화하고 마지막 색인은 Legendre 다항식의 차수를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="ae534bb750508bd12922fca33e07ed9e9147c7d1" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; and &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y)&lt;/code&gt; and the last index encodes the powers of &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= deg[0]&lt;/code&gt; 및 &lt;code&gt;0 &amp;lt;= j &amp;lt;= deg[1]&lt;/code&gt; 입니다. &lt;code&gt;V&lt;/code&gt; 의 주요 지수 는 점 &lt;code&gt;(x, y)&lt;/code&gt; 을 색인화하고 마지막 색인은 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 의 거듭 제곱을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="968a8f99ae65dc781347987604737e4885f0347e" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y, z)&lt;/code&gt; and the last index encodes the degrees of the Chebyshev polynomials.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt; , &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt; 및 &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt; 입니다. &lt;code&gt;V&lt;/code&gt; 의 선행 지수 는 점 &lt;code&gt;(x, y, z)&lt;/code&gt; 을 색인화하고 마지막 색인은 체비 쇼프 다항식의 차수를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="290595042428a0adec26dcab062e9c72d203d119" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y, z)&lt;/code&gt; and the last index encodes the degrees of the Hermite polynomials.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt; , &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt; 및 &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt; 입니다. &lt;code&gt;V&lt;/code&gt; 의 선행 지수 는 점 &lt;code&gt;(x, y, z)&lt;/code&gt; 을 색인화하고 마지막 색인은 은자 다항식의 차수를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="a3522d9ec4777ff57457a39fea3d27eb87e001f3" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y, z)&lt;/code&gt; and the last index encodes the degrees of the HermiteE polynomials.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt; , &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt; 및 &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt; 입니다. &lt;code&gt;V&lt;/code&gt; 의 선행 지수 는 점 &lt;code&gt;(x, y, z)&lt;/code&gt; 을 색인화하고 마지막 색인은 HermiteE 다항식의 차수를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="e21aabee789ef859247cb7d579e69b9306ad94e9" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y, z)&lt;/code&gt; and the last index encodes the degrees of the Laguerre polynomials.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt; , &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt; 및 &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt; 입니다. &lt;code&gt;V&lt;/code&gt; 의 주요 지수 는 점 &lt;code&gt;(x, y, z)&lt;/code&gt; 을 색인화하고 마지막 색인은 Laguerre 다항식의 차수를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="0fec4bcf4d4a798ecc63d7a8b21b974ec59ac767" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y, z)&lt;/code&gt; and the last index encodes the degrees of the Legendre polynomials.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt; , &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt; 및 &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt; 입니다. &lt;code&gt;V&lt;/code&gt; 의 주요 인덱스는 점 &lt;code&gt;(x, y, z)&lt;/code&gt; 을 색인화하고 마지막 색인은 Legendre 다항식의 차수를 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="ef93d8eb54977daa7c98c55d5dde9a9422edf21b" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt;. The leading indices of &lt;code&gt;V&lt;/code&gt; index the points &lt;code&gt;(x, y, z)&lt;/code&gt; and the last index encodes the powers of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;0 &amp;lt;= i &amp;lt;= l&lt;/code&gt; , &lt;code&gt;0 &amp;lt;= j &amp;lt;= m&lt;/code&gt; 및 &lt;code&gt;0 &amp;lt;= j &amp;lt;= n&lt;/code&gt; 입니다. &lt;code&gt;V&lt;/code&gt; 의 주요 지수 는 점 &lt;code&gt;(x, y, z)&lt;/code&gt; 을 색인화하고 마지막 색인은 &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; 및 &lt;code&gt;z&lt;/code&gt; 의 거듭 제곱을 인코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="4b8c6ec18c2c43533633b2d6348c84d0e98e4282" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;V&lt;/code&gt; is the pseudo Vandermonde matrix of &lt;code&gt;x&lt;/code&gt;, the elements of &lt;code&gt;c&lt;/code&gt; are the coefficients to be solved for, and the elements of &lt;code&gt;y&lt;/code&gt; are the observed values. This equation is then solved using the singular value decomposition of &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;V&lt;/code&gt; 는 의사 가상의 Vandermonde 행렬 &lt;code&gt;x&lt;/code&gt; 이며, &lt;code&gt;c&lt;/code&gt; 의 요소는 풀어야 할 계수이며, &lt;code&gt;y&lt;/code&gt; 의 요소 는 관측 된 값입니다. 이 방정식은 &lt;code&gt;V&lt;/code&gt; 의 특이 값 분해를 사용하여 해결됩니다 .</target>
        </trans-unit>
        <trans-unit id="bed15d23c255396f5ff96e362455881dfb6045bf" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;V&lt;/code&gt; is the weighted pseudo Vandermonde matrix of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt; are the coefficients to be solved for, &lt;code&gt;w&lt;/code&gt; are the weights, &lt;code&gt;y&lt;/code&gt; are the observed values. This equation is then solved using the singular value decomposition of &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;V&lt;/code&gt; 는 &lt;code&gt;x&lt;/code&gt; 의 가중 의사 Vandermonde 행렬이고 , &lt;code&gt;c&lt;/code&gt; 는 풀어야 할 계수이고, &lt;code&gt;w&lt;/code&gt; 는 가중치이며, &lt;code&gt;y&lt;/code&gt; 는 관측 값입니다. 이 방정식은 &lt;code&gt;V&lt;/code&gt; 의 특이 값 분해를 사용하여 해결됩니다 .</target>
        </trans-unit>
        <trans-unit id="d134ecc4ceb9149fc7a25fccd08e5a7a0a731874" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;V&lt;/code&gt; is the weighted pseudo Vandermonde matrix of &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;c&lt;/code&gt; are the coefficients to be solved for, &lt;code&gt;w&lt;/code&gt; are the weights, and &lt;code&gt;y&lt;/code&gt; are the observed values. This equation is then solved using the singular value decomposition of &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;V&lt;/code&gt; 는 &lt;code&gt;x&lt;/code&gt; 의 가중 의사 Vandermonde 행렬이고 , &lt;code&gt;c&lt;/code&gt; 는 풀어야 할 계수이고, &lt;code&gt;w&lt;/code&gt; 는 가중이며, &lt;code&gt;y&lt;/code&gt; 는 관측 값입니다. 이 방정식은 &lt;code&gt;V&lt;/code&gt; 의 특이 값 분해를 사용하여 해결됩니다 .</target>
        </trans-unit>
        <trans-unit id="d6ef8bc2bec31043ebddcd21aa113fe148170b4b" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;n == len(roots) - 1&lt;/code&gt;; note that this implies that &lt;code&gt;1&lt;/code&gt; is always returned for</source>
          <target state="translated">여기서 &lt;code&gt;n == len(roots) - 1&lt;/code&gt; ; 이것은 &lt;code&gt;1&lt;/code&gt; 이 항상 반환 된다는 것을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="4156f50382951be2ffb97afbef02067c099be6a8" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;n&lt;/code&gt; is &lt;code&gt;deg&lt;/code&gt;.</source>
          <target state="translated">여기서 &lt;code&gt;n&lt;/code&gt; 은 &lt;code&gt;deg&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5da8ce8d8d1ee0181c57af0f31c56ab31f259987" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;n&lt;/code&gt; is the number of streams spawned. If a program uses an aggressive million streams, about</source>
          <target state="translated">여기서 &lt;code&gt;n&lt;/code&gt; 은 생성 된 스트림 수입니다. 프로그램이 공격적인 백만 개의 스트림을 사용하는 경우</target>
        </trans-unit>
        <trans-unit id="227e7320c448b66cb7c7d238597d7f3a2804dfcf" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;p&lt;/code&gt; is the probability of success of an individual trial.</source>
          <target state="translated">여기서 &lt;code&gt;p&lt;/code&gt; 는 개별 시행의 성공 확률입니다.</target>
        </trans-unit>
        <trans-unit id="97e11a7633599dcc0b171bd3aeedc2980516829b" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;seq&lt;/code&gt; would be a NumPy array of &lt;code&gt;double&lt;/code&gt; values, and its length &lt;code&gt;n&lt;/code&gt; would be extracted from &lt;code&gt;seq&lt;/code&gt; internally before being passed to the C routine. Even better, since NumPy supports construction of arrays from arbitrary Python sequences, &lt;code&gt;seq&lt;/code&gt; itself could be a nearly arbitrary sequence (so long as each element can be converted to a &lt;code&gt;double&lt;/code&gt;) and the wrapper code would internally convert it to a NumPy array before extracting its data and length.</source>
          <target state="translated">여기서 &lt;code&gt;seq&lt;/code&gt; 는 &lt;code&gt;double&lt;/code&gt; 값 의 NumPy 배열이며 길이 &lt;code&gt;n&lt;/code&gt; 은 C 루틴으로 전달되기 전에 &lt;code&gt;seq&lt;/code&gt; 에서 내부적 으로 추출됩니다 . 더 나은 점은 NumPy가 임의의 파이썬 시퀀스에서 배열 생성을 지원하기 때문에 &lt;code&gt;seq&lt;/code&gt; 자체는 거의 임의의 시퀀스 일 수 있습니다 (각 요소가 &lt;code&gt;double&lt;/code&gt; 로 변환 될 수있는 한 ) 래퍼 코드는 추출하기 전에 내부적으로 NumPy 배열로 변환합니다 데이터와 길이.</target>
        </trans-unit>
        <trans-unit id="3fa7dcc068f2c1b22079c4e51b9b1d150978fe4d" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;x2&lt;/code&gt; is often taken to be 0.5, but 0 and 1 are also sometimes used.</source>
          <target state="translated">여기서 &lt;code&gt;x2&lt;/code&gt; 는 종종 0.5로 간주되지만 0과 1도 종종 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6a9eda89bfd511983f4021317b7dd5833b1e827e" translate="yes" xml:space="preserve">
          <source>where &lt;code&gt;{bits}&lt;/code&gt; is the number of bits in the type and can be &lt;strong&gt;8&lt;/strong&gt;, &lt;strong&gt;16&lt;/strong&gt;, &lt;strong&gt;32&lt;/strong&gt;, &lt;strong&gt;64&lt;/strong&gt;, 128, and 256 for integer types; 16, &lt;strong&gt;32&lt;/strong&gt; , &lt;strong&gt;64&lt;/strong&gt;, 80, 96, 128, and 256 for floating-point types; and 32, &lt;strong&gt;64&lt;/strong&gt;, &lt;strong&gt;128&lt;/strong&gt;, 160, 192, and 512 for complex-valued types. Which bit-widths are available is platform dependent. The bolded bit-widths are usually available on all platforms.</source>
          <target state="translated">여기서 &lt;code&gt;{bits}&lt;/code&gt; 는 유형의 비트 수이며 정수 유형의 경우 &lt;strong&gt;8&lt;/strong&gt; , &lt;strong&gt;16&lt;/strong&gt; , &lt;strong&gt;32&lt;/strong&gt; , &lt;strong&gt;64&lt;/strong&gt; , 128 및 256 일 수 있습니다. 부동 소수점 유형의 경우 16, &lt;strong&gt;32&lt;/strong&gt; , &lt;strong&gt;64&lt;/strong&gt; , 80, 96, 128 및 256; 복소수 유형의 경우 32, &lt;strong&gt;64&lt;/strong&gt; , &lt;strong&gt;128&lt;/strong&gt; , 160, 192 및 512. 사용 가능한 비트 폭은 플랫폼에 따라 다릅니다. 굵은 비트 폭은 일반적으로 모든 플랫폼에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdc8cdc0932dfe2cf825eb22285d6dc4584efd79" translate="yes" xml:space="preserve">
          <source>where &lt;strong&gt;I&lt;/strong&gt; is the &lt;code&gt;n&lt;/code&gt;-by-&lt;code&gt;n&lt;/code&gt; identity matrix. &lt;a href=&quot;#r6c2ffae921d1-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;</source>
          <target state="translated">여기서 &lt;strong&gt;I는&lt;/strong&gt; 은 IS &lt;code&gt;n&lt;/code&gt; -by- &lt;code&gt;n&lt;/code&gt; 항등 행렬이. &lt;a href=&quot;#r6c2ffae921d1-2&quot; id=&quot;id2&quot;&gt;[2]&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9d65fe7270866ad53495d99232a820922277569" translate="yes" xml:space="preserve">
          <source>where R is a non-nan real value. Complex values with the same nan placements are sorted according to the non-nan part if it exists. Non-nan values are sorted as before.</source>
          <target state="translated">여기서 R은 난값이 아닌 실제 값입니다. Nan 배치가 동일한 복합 값은 Nan이 아닌 파트에 따라 정렬됩니다. 난이 아닌 값은 이전과 같이 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="5caa3907f70cffcfedf3fb4994a98de6a74be54f" translate="yes" xml:space="preserve">
          <source>where in this case the</source>
          <target state="translated">이 경우에</target>
        </trans-unit>
        <trans-unit id="a0047659d01e6a2429cd941ed10ecc15806ec5e4" translate="yes" xml:space="preserve">
          <source>where p = probability.</source>
          <target state="translated">여기서 p = 확률.</target>
        </trans-unit>
        <trans-unit id="ca92675847cdd29f796e592505c1d46281fcc976" translate="yes" xml:space="preserve">
          <source>where the</source>
          <target state="translated">어디</target>
        </trans-unit>
        <trans-unit id="2c1ce56b739d1a90c6c7a8decdd89da276904513" translate="yes" xml:space="preserve">
          <source>where the &lt;code&gt;r_n&lt;/code&gt; are the roots specified in &lt;code&gt;roots&lt;/code&gt;. If a zero has multiplicity n, then it must appear in &lt;code&gt;roots&lt;/code&gt; n times. For instance, if 2 is a root of multiplicity three and 3 is a root of multiplicity 2, then &lt;code&gt;roots&lt;/code&gt; looks something like [2, 2, 2, 3, 3]. The roots can appear in any order.</source>
          <target state="translated">여기서 &lt;code&gt;r_n&lt;/code&gt; 은 roots에 지정된 &lt;code&gt;roots&lt;/code&gt; 입니다. 0에 다중도 n이 있으면 &lt;code&gt;roots&lt;/code&gt; n 번 나타나야합니다 . 예를 들어,이 경우 다양성 세와 3의 루트 다양성이의 루트입니다, 다음 &lt;code&gt;roots&lt;/code&gt; 처럼 보이는 뭔가 [2, 2, 2, 3, 3]. 뿌리는 어떤 순서로도 나타날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de25e1e31fb8e144046ff201f8ad1ae5facb6b87" translate="yes" xml:space="preserve">
          <source>where the normalization, B, is the beta function,</source>
          <target state="translated">정규화 B는 베타 함수입니다.</target>
        </trans-unit>
        <trans-unit id="1279820475c803c32a1be658737be93ee2a97148" translate="yes" xml:space="preserve">
          <source>where the points &lt;code&gt;(a, b)&lt;/code&gt; consist of all pairs formed by taking &lt;code&gt;a&lt;/code&gt; from &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;b&lt;/code&gt; from &lt;code&gt;y&lt;/code&gt;. The resulting points form a grid with &lt;code&gt;x&lt;/code&gt; in the first dimension and &lt;code&gt;y&lt;/code&gt; in the second.</source>
          <target state="translated">여기서, 점 &lt;code&gt;(a, b)&lt;/code&gt; 취함으로써 형성되는 모든 쌍으로 구성 &lt;code&gt;a&lt;/code&gt; 으로부터 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;b&lt;/code&gt; 에서 &lt;code&gt;y&lt;/code&gt; . 결과 점 은 첫 번째 차원에 &lt;code&gt;x&lt;/code&gt; 가 있고 두 번째 차원에 &lt;code&gt;y&lt;/code&gt; 가 있는 그리드를 형성합니다 .</target>
        </trans-unit>
        <trans-unit id="a6af8e5313e77ee7d6837ec79be794a7042e7075" translate="yes" xml:space="preserve">
          <source>where the points &lt;code&gt;(a, b, c)&lt;/code&gt; consist of all triples formed by taking &lt;code&gt;a&lt;/code&gt; from &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;b&lt;/code&gt; from &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;c&lt;/code&gt; from &lt;code&gt;z&lt;/code&gt;. The resulting points form a grid with &lt;code&gt;x&lt;/code&gt; in the first dimension, &lt;code&gt;y&lt;/code&gt; in the second, and &lt;code&gt;z&lt;/code&gt; in the third.</source>
          <target state="translated">여기서 점 &lt;code&gt;(a, b, c)&lt;/code&gt; 촬영에 의해 형성된 모든 트리플 구성 &lt;code&gt;a&lt;/code&gt; 으로부터 &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;b&lt;/code&gt; 에서 &lt;code&gt;y&lt;/code&gt; 와 &lt;code&gt;c&lt;/code&gt; 에서 &lt;code&gt;z&lt;/code&gt; . 얻어진 점은 그리드 형성 &lt;code&gt;x&lt;/code&gt; 제 치수, &lt;code&gt;y&lt;/code&gt; 번째, 그리고 &lt;code&gt;z&lt;/code&gt; 세번째하여.</target>
        </trans-unit>
        <trans-unit id="365862a50c0682caa8baa6f30edca76e3e5f81ed" translate="yes" xml:space="preserve">
          <source>where:</source>
          <target state="translated">where:</target>
        </trans-unit>
        <trans-unit id="e37dbee4cae0df6201c1f4811e9b9537f69aabb6" translate="yes" xml:space="preserve">
          <source>which evaluates to:</source>
          <target state="translated">다음과 같이 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="a01e140cc92cbe722c0b95c684104ebb6b342985" translate="yes" xml:space="preserve">
          <source>which extends in the obvious way to higher dimensions, and the inverses in higher dimensions also extend in the same way.</source>
          <target state="translated">명백한 방식으로 더 높은 차원으로 확장되고 더 높은 차원의 역도 같은 방식으로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="ced4c5cabdd3ef65db772d8c6ef758745f7d3e32" translate="yes" xml:space="preserve">
          <source>which is different from a common alternative,</source>
          <target state="translated">일반적인 대안과는 다른</target>
        </trans-unit>
        <trans-unit id="9ee66060f3ffdf52489d6d257097e268641308e4" translate="yes" xml:space="preserve">
          <source>which is related to &lt;code&gt;c_{av}[k]&lt;/code&gt; by &lt;code&gt;c'_{av}[k] = c_{av}[-k]&lt;/code&gt;.</source>
          <target state="translated">이는이 관련된 &lt;code&gt;c_{av}[k]&lt;/code&gt; 가 &lt;code&gt;c'_{av}[k] = c_{av}[-k]&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="778d43b6da6e59d12f7b859a3d029062778f7c7d" translate="yes" xml:space="preserve">
          <source>which part of the memory block each field takes.</source>
          <target state="translated">각 필드가 차지하는 메모리 블록의 부분.</target>
        </trans-unit>
        <trans-unit id="03234ac0a2f49221ceb858c5491d51de84061ef9" translate="yes" xml:space="preserve">
          <source>which provides 5 pointers. The first is an opaque pointer to the data structure used by the BitGenerators. The next three are function pointers which return the next 64- and 32-bit unsigned integers, the next random double and the next raw value. This final function is used for testing and so can be set to the next 64-bit unsigned integer function if not needed. Functions inside &lt;code&gt;Generator&lt;/code&gt; use this structure as in</source>
          <target state="translated">5 개의 포인터를 제공합니다. 첫 번째는 BitGenerator가 사용하는 데이터 구조에 대한 불투명 포인터입니다. 다음 세 개는 다음 64 및 32 비트 부호없는 정수, 다음 임의의 double 및 다음 원시 값을 반환하는 함수 포인터입니다. 이 최종 함수는 테스트에 사용되므로 필요하지 않은 경우 다음 64 비트 부호없는 정수 함수로 설정할 수 있습니다. &lt;code&gt;Generator&lt;/code&gt; 내부의 함수 는 다음과 같이이 구조를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="63577216ef75495c55551997ebb50867df34281b" translate="yes" xml:space="preserve">
          <source>which would have provided automatic type conversions for arrays of type &lt;code&gt;Py_complex&lt;/code&gt;, &lt;code&gt;npy_cfloat&lt;/code&gt; and &lt;code&gt;npy_cdouble&lt;/code&gt;. However, it seemed unlikely that there would be any independent (non-Python, non-NumPy) application code that people would be using &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; to generate a Python interface to, that also used these definitions for complex types. More likely, these application codes will define their own complex types, or in the case of C++, use &lt;code&gt;std::complex&lt;/code&gt;. Assuming these data structures are compatible with Python and NumPy complex types, &lt;code&gt;%numpy_typemap&lt;/code&gt; expansions as above (with the user&amp;rsquo;s complex type substituted for the first argument) should work.</source>
          <target state="translated">&lt;code&gt;Py_complex&lt;/code&gt; , &lt;code&gt;npy_cfloat&lt;/code&gt; 및 &lt;code&gt;npy_cdouble&lt;/code&gt; 유형의 배열에 대한 자동 유형 변환을 제공했을 것 입니다. 그러나 사람들이 &lt;a href=&quot;http://www.swig.org&quot;&gt;SWIG&lt;/a&gt; 를 사용하여 Python 인터페이스를 생성하고 복잡한 유형에 대해 이러한 정의를 사용 하는 독립적 인 (비 Python, NonNumPy) 응용 프로그램 코드가 없을 것 같습니다 . 이러한 응용 프로그램 코드는 고유 한 복잡한 유형을 정의하거나 C ++의 경우 &lt;code&gt;std::complex&lt;/code&gt; 합니다. 이러한 데이터 구조가 Python 및 NumPy 복합 유형과 호환 가능 &lt;code&gt;%numpy_typemap&lt;/code&gt; 가정하면 위의 % numpy_typemap 확장 (사용자의 복합 유형이 첫 번째 인수로 대체 됨)이 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="2776b6c93cb7c4153849413953e56a2e5f33d80a" translate="yes" xml:space="preserve">
          <source>width:</source>
          <target state="translated">width:</target>
        </trans-unit>
        <trans-unit id="5c7e83ac1040b10c50be2504c71c5845f663b6fd" translate="yes" xml:space="preserve">
          <source>will compile the &lt;code&gt;library&lt;/code&gt; sources without optimization flags.</source>
          <target state="translated">최적화 플래그없이 &lt;code&gt;library&lt;/code&gt; 소스를 컴파일합니다 .</target>
        </trans-unit>
        <trans-unit id="8d20a2ce8660814e46481f17cf57f185c268fa43" translate="yes" xml:space="preserve">
          <source>will install data files to the following locations</source>
          <target state="translated">다음 위치에 데이터 파일을 설치합니다</target>
        </trans-unit>
        <trans-unit id="9431832ed81f189de77da34df58a265d7a0dab02" translate="yes" xml:space="preserve">
          <source>will install these data files to:</source>
          <target state="translated">이 데이터 파일을 다음 위치에 설치합니다.</target>
        </trans-unit>
        <trans-unit id="fcf97db7680020e322957977ba54cdaae4e7c664" translate="yes" xml:space="preserve">
          <source>will result in typemaps that will produce code that reference improper data lengths. You can implement the following macro expansion:</source>
          <target state="translated">부적절한 데이터 길이를 참조하는 코드를 생성하는 유형 맵이 생성됩니다. 다음과 같은 매크로 확장을 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d09fffb5db2d7f631ba43ccc256617b444056d2e" translate="yes" xml:space="preserve">
          <source>win32</source>
          <target state="translated">win32</target>
        </trans-unit>
        <trans-unit id="8fcd25a39d2037183044a8897e9a5333d727fded" translate="yes" xml:space="preserve">
          <source>with</source>
          <target state="translated">with</target>
        </trans-unit>
        <trans-unit id="85906e975567ef059f93ee1ec6cded27b66be258" translate="yes" xml:space="preserve">
          <source>with a and v sequences being zero-padded where necessary and conj being the conjugate.</source>
          <target state="translated">a 및 v 서열은 필요한 경우 제로-패딩되고 컨쥬 게이트는 컨쥬 게이트이다.</target>
        </trans-unit>
        <trans-unit id="fb4da7b2e3434f85dca212e250f77b33115633d3" translate="yes" xml:space="preserve">
          <source>with assert_warns(SomeWarning):</source>
          <target state="translated">assert_warns (일부 경고) :</target>
        </trans-unit>
        <trans-unit id="475445d83d4b5fb4eb9cadb9634afa9926972eb2" translate="yes" xml:space="preserve">
          <source>with the weight function</source>
          <target state="translated">무게 기능으로</target>
        </trans-unit>
        <trans-unit id="e9106aaf08247a295732f94cac129b955c2a6cce" translate="yes" xml:space="preserve">
          <source>with their Taylor series expansion, this translates into solving the following the linear system:</source>
          <target state="translated">Taylor 시리즈 확장으로 다음과 같은 선형 시스템을 해결합니다.</target>
        </trans-unit>
        <trans-unit id="e2ac21e5524a785601b5d72a44f59a41ff0de1fa" translate="yes" xml:space="preserve">
          <source>with which we now extract only three elements:</source>
          <target state="translated">이제 세 가지 요소 만 추출합니다.</target>
        </trans-unit>
        <trans-unit id="73978edcd3b1eeaba9e3510afd89a742dbbd379c" translate="yes" xml:space="preserve">
          <source>work space</source>
          <target state="translated">작업 공간</target>
        </trans-unit>
        <trans-unit id="d664dcdca19ca8d9b446631ef2412473ee2226f1" translate="yes" xml:space="preserve">
          <source>worst case</source>
          <target state="translated">최악의 경우</target>
        </trans-unit>
        <trans-unit id="6f1f2b93f598ca8c33b6833c0a41bac0f1e8474a" translate="yes" xml:space="preserve">
          <source>wrap values &amp;lt; 0 by adding len(&lt;em&gt;op&lt;/em&gt;) and values &amp;gt;=len(&lt;em&gt;op&lt;/em&gt;) by subtracting len(&lt;em&gt;op&lt;/em&gt;) until they are in range;</source>
          <target state="translated">랩 값 &amp;lt;렌 (0 첨가하여 &lt;em&gt;영업 이익&lt;/em&gt; ) 및 값&amp;gt; = LEN ( &lt;em&gt;OP&lt;/em&gt; 렌 (감산하여) &lt;em&gt;연산&lt;/em&gt; 들은 범위까지);</target>
        </trans-unit>
        <trans-unit id="11f6ad8ec52a2984abaafd7c3b516503785c2072" translate="yes" xml:space="preserve">
          <source>x</source>
          <target state="translated">x</target>
        </trans-unit>
        <trans-unit id="308f064ded46d05826bfd10e2ded24601eb24df9" translate="yes" xml:space="preserve">
          <source>x is equal to linspace(self.domain[0], self.domain[1], n) and y is the series evaluated at element of x.</source>
          <target state="translated">x는 linspace (self.domain [0], self.domain [1], n)과 같고 y는 x의 요소에서 평가 된 계열입니다.</target>
        </trans-unit>
        <trans-unit id="59dd422e447dd066581be0b92845e52e84b598c5" translate="yes" xml:space="preserve">
          <source>x-coordinates of the &lt;code&gt;M&lt;/code&gt; sample (data) points &lt;code&gt;(x[i], y[i])&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; 샘플 (데이터) 점 의 x 좌표 &lt;code&gt;(x[i], y[i])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ba94ec9deda2ba79411318119236f9d9739ce86c" translate="yes" xml:space="preserve">
          <source>x-coordinates of the M sample points &lt;code&gt;(x[i], y[i])&lt;/code&gt;.</source>
          <target state="translated">M 샘플 포인트의 x 좌표 &lt;code&gt;(x[i], y[i])&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5cb437551401adf121138e8924c8f0383053f491" translate="yes" xml:space="preserve">
          <source>x.__getitem__(y) &amp;lt;==&amp;gt; x[y]</source>
          <target state="translated">x .__ getitem __ (y) &amp;lt;==&amp;gt; x [y]</target>
        </trans-unit>
        <trans-unit id="fdc9be9752ea52874fd39a2bdad0f5823c5b6118" translate="yes" xml:space="preserve">
          <source>x.__setitem__(i, y) &amp;lt;==&amp;gt; x[i]=y</source>
          <target state="translated">x .__ setitem __ (i, y) &amp;lt;==&amp;gt; x [i] = y</target>
        </trans-unit>
        <trans-unit id="da421920ce1bd5a03d063f77e2157e2573edaac2" translate="yes" xml:space="preserve">
          <source>xP_i(x) = (-(i + 1)*P_{i + 1}(x) + (2i + 1)P_{i}(x) - iP_{i - 1}(x))</source>
          <target state="translated">xP_i (x) = (-(i + 1) * P_ {i + 1} (x) + (2i + 1) P_ {i} (x)-iP_ {i-1} (x))</target>
        </trans-unit>
        <trans-unit id="1b073b5ec82f790856556cc378140ccaef2424ed" translate="yes" xml:space="preserve">
          <source>xP_i(x) = (P_{i + 1}(x) + iP_{i - 1}(x)))</source>
          <target state="translated">xP_i (x) = (P_ {i + 1} (x) + iP_ {i-1} (x)))</target>
        </trans-unit>
        <trans-unit id="ef078637a19fed7e5c5fce6ae955f054edcce03b" translate="yes" xml:space="preserve">
          <source>xP_i(x) = (P_{i + 1}(x)/2 + i*P_{i - 1}(x))</source>
          <target state="translated">xP_i (x) = (P_ {i + 1} (x) / 2 + i * P_ {i-1} (x))</target>
        </trans-unit>
        <trans-unit id="7e771f58043b3b39cee02a1814b5e97f817e4084" translate="yes" xml:space="preserve">
          <source>y : A floating point representation of Not a Number.</source>
          <target state="translated">y : 숫자가 아닌 부동 소수점 표현.</target>
        </trans-unit>
        <trans-unit id="fe74eb20b81eed402c9b311b14c54faa75f17f0e" translate="yes" xml:space="preserve">
          <source>y = floor(&lt;code&gt;x1&lt;/code&gt;/&lt;code&gt;x2&lt;/code&gt;) This is a scalar if both &lt;code&gt;x1&lt;/code&gt; and &lt;code&gt;x2&lt;/code&gt; are scalars.</source>
          <target state="translated">y = floor ( &lt;code&gt;x1&lt;/code&gt; / &lt;code&gt;x2&lt;/code&gt; ) &lt;code&gt;x1&lt;/code&gt; 과 &lt;code&gt;x2&lt;/code&gt; 가 모두 스칼라 인 경우 스칼라입니다.</target>
        </trans-unit>
        <trans-unit id="0153765279a24863ca46c77e0a9178c4b4e2152f" translate="yes" xml:space="preserve">
          <source>y is an array of the same subtype as &lt;code&gt;a&lt;/code&gt;, with shape &lt;code&gt;(a.size,)&lt;/code&gt;. Note that matrices are special cased for backward compatibility, if &lt;code&gt;a&lt;/code&gt; is a matrix, then y is a 1-D ndarray.</source>
          <target state="translated">y는 shape &lt;code&gt;(a.size,)&lt;/code&gt; 가 &lt;code&gt;a&lt;/code&gt; 와 동일한 하위 유형의 배열입니다 . 행렬은 역 호환성을 위해 특수한 경우입니다. &lt;code&gt;a&lt;/code&gt; 가 행렬 인 경우 y는 1 차원 ndarray입니다.</target>
        </trans-unit>
        <trans-unit id="71b29d0659535339d20f2f2d3906d3133889c3fc" translate="yes" xml:space="preserve">
          <source>y-coordinates of the sample points. Several data sets of sample points sharing the same x-coordinates can be fitted at once by passing in a 2D-array that contains one dataset per column.</source>
          <target state="translated">샘플 포인트의 y 좌표 열당 하나의 데이터 집합을 포함하는 2D 배열을 전달하여 동일한 x 좌표를 공유하는 여러 샘플 점 데이터 집합을 한 번에 맞출 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c5bcca9b96afa5b616e3604f848cc87a49f687f" translate="yes" xml:space="preserve">
          <source>y-coordinates of the sample points. Several sets of sample points sharing the same x-coordinates can be (independently) fit with one call to &lt;a href=&quot;#numpy.polynomial.polynomial.polyfit&quot;&gt;&lt;code&gt;polyfit&lt;/code&gt;&lt;/a&gt; by passing in for &lt;code&gt;y&lt;/code&gt; a 2-D array that contains one data set per column.</source>
          <target state="translated">샘플 포인트의 y 좌표 동일한 x 좌표를 공유하는 여러 샘플 포인트 세트는 &lt;a href=&quot;#numpy.polynomial.polynomial.polyfit&quot;&gt; &lt;code&gt;polyfit&lt;/code&gt; &lt;/a&gt; 하나의 데이터 세트를 포함하는 2 차원 배열 을 &lt;code&gt;y&lt;/code&gt; 로 전달 하여 한 번의 polyfit 호출에 독립적으로 맞출 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4ff0b1538469338a0073e2cdaab6a517801b6ab4" translate="yes" xml:space="preserve">
          <source>year</source>
          <target state="translated">year</target>
        </trans-unit>
        <trans-unit id="fb360f9c09ac8c5edb2f18be5de4e80ea4c430d0" translate="yes" xml:space="preserve">
          <source>yes</source>
          <target state="translated">yes</target>
        </trans-unit>
        <trans-unit id="321f014e68afc5d27fa673e253b66c1d1a885e28" translate="yes" xml:space="preserve">
          <source>zero-dimensional numpy arrays</source>
          <target state="translated">0 차원 numpy 배열</target>
        </trans-unit>
        <trans-unit id="851d6a9d4f40adec7bdb22e6aa7d78c29e7bad48" translate="yes" xml:space="preserve">
          <source>zero-terminated bytes (not recommended)</source>
          <target state="translated">0으로 끝나는 바이트 (권장되지 않음)</target>
        </trans-unit>
        <trans-unit id="7b16e4ea6cc467a3916252ca6ee5a838978ad9b6" translate="yes" xml:space="preserve">
          <source>{&amp;lsquo;&amp;gt;&amp;rsquo;, &amp;lsquo;B&amp;rsquo;} - big endian</source>
          <target state="translated">{&amp;lsquo;&amp;gt;&amp;rsquo;, &amp;lsquo;B&amp;rsquo;} - big endian</target>
        </trans-unit>
        <trans-unit id="69450a331083a0b68e4b8ea4f8d3ea5eed96797f" translate="yes" xml:space="preserve">
          <source>{&amp;lsquo;&amp;lt;&amp;rsquo;, &amp;lsquo;L&amp;rsquo;} - little endian</source>
          <target state="translated">{&amp;lsquo;&amp;lt;&amp;rsquo;, &amp;lsquo;L&amp;rsquo;} - little endian</target>
        </trans-unit>
        <trans-unit id="4a18b0c9674466129cdcccc0b853d0e7924dffb5" translate="yes" xml:space="preserve">
          <source>{&amp;lsquo;=&amp;rsquo;, &amp;lsquo;N&amp;rsquo;} - native order</source>
          <target state="translated">{&amp;lsquo;=&amp;rsquo;, &amp;lsquo;N&amp;rsquo;} - native order</target>
        </trans-unit>
        <trans-unit id="d8c7bacdfb9bb97d8000c8d86e26ecc69e84c128" translate="yes" xml:space="preserve">
          <source>{&amp;lsquo;|&amp;rsquo;, &amp;lsquo;I&amp;rsquo;} - ignore (no change to byte order)</source>
          <target state="translated">{&amp;lsquo;|&amp;rsquo;, &amp;lsquo;I&amp;rsquo;} - ignore (no change to byte order)</target>
        </trans-unit>
        <trans-unit id="129c2a92772859dd050db619eaedbf46e847091c" translate="yes" xml:space="preserve">
          <source>~n/2</source>
          <target state="translated">~n/2</target>
        </trans-unit>
        <trans-unit id="ff8c31042699d05d07f6e439438f8c8528e3badb" translate="yes" xml:space="preserve">
          <source>~self</source>
          <target state="translated">~self</target>
        </trans-unit>
        <trans-unit id="8105745e3f0510d3e2e069ea766a5a441edea419" translate="yes" xml:space="preserve">
          <source>“descr” : dtype.descr</source>
          <target state="translated">“descr” : dtype.descr</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
