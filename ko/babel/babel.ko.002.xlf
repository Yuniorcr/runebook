<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="babel">
    <body>
      <group id="babel">
        <trans-unit id="fca05f940ebb6a2ecea2890d1a4bcd46b50abfd8" translate="yes" xml:space="preserve">
          <source>Target only Chrome 52</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3ae7fc18fdbeab819cde5dc07a0a60d4a9a0221" translate="yes" xml:space="preserve">
          <source>Target specific browsers via browserslist</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4be37be90bfccb09eab627d2a5d3f9b1c85287e5" translate="yes" xml:space="preserve">
          <source>Technical details</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a9e753763be816d1e8fcceb585df8e749a4404" translate="yes" xml:space="preserve">
          <source>That means that the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89b9de910965b003fb1a73e87e2100009b2e5652" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugins.json&quot;&gt;data&lt;/a&gt; for this is generated by running the &lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/scripts/build-data.js&quot;&gt;build-data script&lt;/a&gt; which pulls in data from &lt;a href=&quot;https://kangax.github.io/compat-table&quot;&gt;compat-table&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2acf656287dd5606911cc2aa9e5a8e0c8b5903e" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://github.com/tc39&quot;&gt;TC39&lt;/a&gt; categorizes proposals into the following stages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65ca682bac84cf0a047840bd027a38798c30e870" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;do { .. }&lt;/code&gt; expression executes a block (with one or many statements in it), and the final statement completion value inside the block becomes the completion value of the do expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f86653f04ce6e2769ac386097332820bb02452" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;env&lt;/code&gt; key will be taken from &lt;code&gt;process.env.BABEL_ENV&lt;/code&gt;, when this is not available then it uses &lt;code&gt;process.env.NODE_ENV&lt;/code&gt; if even that is not available then it defaults to &lt;code&gt;&quot;development&quot;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52320681644791000fed795e770ae342cad2cf4d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;runtime&lt;/code&gt; transformer plugin does three things:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254fb827eb4727bb36de63457c39e850d86c6ae1" translate="yes" xml:space="preserve">
          <source>The Babel repo is managed as a monorepo; it's composed of many npm packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39ee4075faedb0d5af87f43c3cbc2ec307f6a57" translate="yes" xml:space="preserve">
          <source>The TC39 stage process is also explained in detail across a few posts by Yehuda Katz (@wycatz) over at &lt;a href=&quot;https://thefeedbackloop.xyz&quot;&gt;thefeedbackloop.xyz&lt;/a&gt;: &lt;a href=&quot;https://thefeedbackloop.xyz/tc39-a-process-sketch-stages-0-and-1/&quot;&gt;Stage 0 and 1&lt;/a&gt;, &lt;a href=&quot;https://thefeedbackloop.xyz/tc39-process-sketch-stage-2/&quot;&gt;Stage 2&lt;/a&gt;, &lt;a href=&quot;https://thefeedbackloop.xyz/tc39-process-sketch-stage-3/&quot;&gt;Stage 3&lt;/a&gt;, and Stage 4 coming soon.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27bfb33eed2c8e82aa0c863d006ba69b80e6d775" translate="yes" xml:space="preserve">
          <source>The class constructor call proposal has been withdrawn (&lt;a href=&quot;https://github.com/tc39/ecma262/blob/master/withdrawn-proposals.md#withdrawn-proposals&quot;&gt;Withdrawn Proposals&lt;/a&gt;) and &lt;a href=&quot;https://github.com/babel/babel/wiki/Babel-7&quot;&gt;it will be removed in Babel 7&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d57f1247f2c0f10b2258ca5a416e657142e24d30" translate="yes" xml:space="preserve">
          <source>The default behavior without options runs all transforms (behaves the same as &lt;a href=&quot;https://babeljs.io/docs/plugins/preset-latest/&quot;&gt;babel-preset-latest&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28e5e37b9515f77dde625dc36232d0fc5bf9bca0" translate="yes" xml:space="preserve">
          <source>The gist of Stage 1 is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3d1cc767665de8aa532256295dd638caab9341" translate="yes" xml:space="preserve">
          <source>The gist of Stage 2 is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edde476c1cdd0834517cb58d5a0e1a3bf1f4087" translate="yes" xml:space="preserve">
          <source>The gist of Stage 3 is:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4343fd6e3867000931eb76c41073fec0034ebd90" translate="yes" xml:space="preserve">
          <source>The javascript &lt;a href=&quot;http://mdn.io/date&quot;&gt;Date&lt;/a&gt; works this way:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96f66e25bbbf634c2a2f9eae92ce902796678075" translate="yes" xml:space="preserve">
          <source>The move makes it much easier to release and develop in sync with the rest of Babel!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eabe7c3985106a9225dc268a0a952c9c517d36f" translate="yes" xml:space="preserve">
          <source>The possible options are the same as the &lt;code&gt;include&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d444dc0f36539cf1694fb0b475f0ebf9a9965a85" translate="yes" xml:space="preserve">
          <source>The require hook will bind itself to node's require and automatically compile files on the fly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdbe2b2ecd38dbb5620219054aaed16c93be8daa" translate="yes" xml:space="preserve">
          <source>The root from which all sources are relative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6272275ef77c1e8a76f92da2301604d19fcba20d" translate="yes" xml:space="preserve">
          <source>The simple plugin that reverses names (from the homepage):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11cad8b8b5f43aedb3ae8d78487fd491d4c6e030" translate="yes" xml:space="preserve">
          <source>The transformation plugin is typically used only in development, but the runtime itself will be depended on by your deployed/published code. See the examples below for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa086532e01e09d8392a5225ed1604ec2f5e180f" translate="yes" xml:space="preserve">
          <source>The transformer will alias these built-ins to &lt;code&gt;core-js&lt;/code&gt; so you can use them seamlessly without having to require the polyfill.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a1f7e396e38e04c9d6397fca7411df31d1dccf" translate="yes" xml:space="preserve">
          <source>There are a few things to note about the default semantics.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2734d5b27c149920dbf68b117ce8da2c1c6c7e7" translate="yes" xml:space="preserve">
          <source>There are many more options available in the babel CLI, see &lt;a href=&quot;../api/index#options&quot;&gt;options&lt;/a&gt;, &lt;code&gt;babel --help&lt;/code&gt; and other sections for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d387d2039e83048f54c05c0f1f05e122f09be5d" translate="yes" xml:space="preserve">
          <source>There are some caveats, but you can use &lt;a href=&quot;https://www.npmjs.com/package/babel-plugin-add-module-exports&quot;&gt;babel-plugin-add-module-exports&lt;/a&gt;, so that updating to Babel 6 isn't a breaking change since users that don't use ES modules don't have to do &lt;code&gt;require(&quot;your-module&quot;).default&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92dd3eda97b7bdaf31b1c026e7d224c563fefa9" translate="yes" xml:space="preserve">
          <source>There are two primary reasons for this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1979c23801456c7a0ec7b500a8ec81e6147afcaf" translate="yes" xml:space="preserve">
          <source>There is also the &lt;code&gt;loose&lt;/code&gt; option for some of these plugins.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="540f78d9383865ebd2ed0c185fdbe4afb708f9b3" translate="yes" xml:space="preserve">
          <source>These are only usable if you enable their syntax plugin. See &lt;a href=&quot;../syntax-async-functions/index&quot;&gt;syntax-async-functions&lt;/a&gt; for information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aeb270a03dee744d692b4e589b7fc301b60a616" translate="yes" xml:space="preserve">
          <source>These plugins allow Babel to &lt;strong&gt;parse&lt;/strong&gt; specific types of syntax (not transform).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2aeee9eef06ae300f2aff97e261e0f328271b2b" translate="yes" xml:space="preserve">
          <source>These plugins apply transformations to your code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b487e5c9b93ecb9e4f4b099238ada2ee791a142" translate="yes" xml:space="preserve">
          <source>These plugins are in the minify repo.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e6b6e7da43f3b4302e4c436c3cd82bd15d6647f" translate="yes" xml:space="preserve">
          <source>These plugins have no effect anymore, as a newer babylon version enabled them by default</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0ee95090fd3b33af4e48fbefe5cb3370885d194" translate="yes" xml:space="preserve">
          <source>These proposals are subject to change so &lt;strong&gt;&lt;em&gt;use with extreme caution&lt;/em&gt;&lt;/strong&gt;, especially for anything pre stage-3. We plan to update stage-x presets when proposals change after each TC39 meeting when possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e0fdb92d8665adadf4e3bfe738213252f78ccd" translate="yes" xml:space="preserve">
          <source>This also works with scoped packages:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1b4243d77c6fd36a92bf302751138fe7c856b6" translate="yes" xml:space="preserve">
          <source>This changes RegExp constructors into literals if the RegExp arguments are strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff064156cf53b11af021ca6cb57e1c86f98b0d60" translate="yes" xml:space="preserve">
          <source>This check will only validate consts. If you need it to compile down to &lt;code&gt;var&lt;/code&gt; then you must also install and enable &lt;a href=&quot;../transform-es2015-block-scoping/index&quot;&gt;&lt;code&gt;transform-es2015-block-scoping&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8af38d553337e5ef611335c626adaddaa2d47ee" translate="yes" xml:space="preserve">
          <source>This check will only validate consts. If you need it to compile down to `var` then you must also install and enable &lt;a href=&quot;../transform-es2015-block-scoping/index&quot;&gt;transform-es2015-block-scoping&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b3d5e0d70ce8c176ec2a1cd9a05ac38a8cee5e" translate="yes" xml:space="preserve">
          <source>This example is not the best usage because it is too simple and using a ternary operator is a better option but you can have a much more complex condition in the &lt;code&gt;do { ... }&lt;/code&gt; expression with several &lt;code&gt;if ... else&lt;/code&gt; chains:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0f85668deb2aea4aaa89b4eaf0f7fed255b0834" translate="yes" xml:space="preserve">
          <source>This example only includes the polyfills and code transforms needed for the last two versions of each browser, and versions of Safari greater than or equal to 7. We use &lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;browserslist&lt;/a&gt; to parse this information, so you can use &lt;a href=&quot;https://github.com/ai/browserslist#queries&quot;&gt;any valid query format supported by browserslist&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352cc5c09e402ba61dc5caaeb507654184ea8f07" translate="yes" xml:space="preserve">
          <source>This injects the external helpers into &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1b3a57e67f4ab38f89d193e46544273dcb61fb" translate="yes" xml:space="preserve">
          <source>This is a case that you have to be aware of if you intend to use this plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a6c165690300e838f42804fed27c0440c0bf352" translate="yes" xml:space="preserve">
          <source>This is a special preset that will contain all yearly presets so user&amp;rsquo;s won&amp;rsquo;t need to specify each one individually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36529a7d7340d92e1ab636181ade4d2725c003e" translate="yes" xml:space="preserve">
          <source>This is an example from the &lt;a href=&quot;https://github.com/jeffmo/es-trailing-function-commas&quot;&gt;Proposal&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a159c7395ea9afe072701c5e374565e05382d5" translate="yes" xml:space="preserve">
          <source>This is an object of keys that represent different environments. For example, you may have: &lt;code&gt;{env:{production:{/*specificoptions*/}}}&lt;/code&gt; which will use those options when the environment variable &lt;code&gt;BABEL_ENV&lt;/code&gt; is set to &lt;code&gt;&quot;production&quot;&lt;/code&gt;. If &lt;code&gt;BABEL_ENV&lt;/code&gt; isn&amp;rsquo;t set then &lt;code&gt;NODE_ENV&lt;/code&gt; will be used, if it&amp;rsquo;s not set then it defaults to &lt;code&gt;&quot;development&quot;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f70d58c5fc4df94c62dbeab16f7f4dd664594c" translate="yes" xml:space="preserve">
          <source>This is mostly for ensuring backwards compatibility, since most users list &amp;ldquo;es2015&amp;rdquo; before &amp;ldquo;stage-0&amp;rdquo;. For more information, see &lt;a href=&quot;https://github.com/babel/notes/blob/master/2016/2016-08/august-01.md#potential-api-changes-for-traversal&quot;&gt;notes on potential traversal API changes&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa3b15a17e1e360463e2ad01bfe48499ea2c89fe" translate="yes" xml:space="preserve">
          <source>This is where the &lt;code&gt;transform-runtime&lt;/code&gt; plugin comes in: all of the helpers will reference the module &lt;code&gt;babel-runtime&lt;/code&gt; to avoid duplication across your compiled output. The runtime will be compiled into your build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcaeb8f6fdeea1a650b66e5d775f88ce96a80f2f" translate="yes" xml:space="preserve">
          <source>This isn&amp;rsquo;t ideal since it relies on the regenerator runtime being included, which pollutes the global scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd154de1704f42d2fb4672474a4a6038ac0e44b4" translate="yes" xml:space="preserve">
          <source>This means if two transforms both visit the &amp;ldquo;Program&amp;rdquo; node, the transforms will run in either plugin or preset order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="810c9001a9122b20fde788a0bf34ddeaccd6a259" translate="yes" xml:space="preserve">
          <source>This means is that you can seamlessly use these native built-ins and static methods without worrying about where they come from.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="166529cc29a08435e3d580eb867134287d8938ec" translate="yes" xml:space="preserve">
          <source>This means that the following &lt;strong&gt;will&lt;/strong&gt; work:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1925451989dbd40cd87913b7122216014057d06" translate="yes" xml:space="preserve">
          <source>This means that you can use the regenerator runtime without polluting your current environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcd1c5226f16f6ff8fd2b7d8c7a09240c0e0fcb" translate="yes" xml:space="preserve">
          <source>This means you can use new built-ins like &lt;code&gt;Promise&lt;/code&gt; or &lt;code&gt;WeakMap&lt;/code&gt;, static methods like &lt;code&gt;Array.from&lt;/code&gt; or &lt;code&gt;Object.assign&lt;/code&gt;, instance methods like &lt;code&gt;Array.prototype.includes&lt;/code&gt;, and generator functions (provided you use the &lt;a href=&quot;../../plugins/transform-regenerator/index&quot;&gt;regenerator&lt;/a&gt; plugin). The polyfill adds to the global scope as well as native prototypes like &lt;code&gt;String&lt;/code&gt; in order to do this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae8233b99178c18a7fd46a5428d3e6a215c79cc7" translate="yes" xml:space="preserve">
          <source>This option enables a new plugin that replaces the statement &lt;code&gt;import &quot;babel-polyfill&quot;&lt;/code&gt; or &lt;code&gt;require(&quot;babel-polyfill&quot;)&lt;/code&gt; with individual requires for &lt;code&gt;babel-polyfill&lt;/code&gt; based on environment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f943b66817095966fc6628e9dcd690fde0ec0d11" translate="yes" xml:space="preserve">
          <source>This option is useful for &amp;ldquo;blacklisting&amp;rdquo; a transform like &lt;code&gt;transform-regenerator&lt;/code&gt; if you don&amp;rsquo;t use generators and don&amp;rsquo;t want to include &lt;code&gt;regeneratorRuntime&lt;/code&gt; (when using &lt;code&gt;useBuiltIns&lt;/code&gt;) or for using another plugin like &lt;a href=&quot;https://github.com/MatAtBread/fast-async&quot;&gt;fast-async&lt;/a&gt; instead of &lt;a href=&quot;../transform-async-generator-functions/index&quot;&gt;Babel&amp;rsquo;s async-to-gen&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b42bc54e52c06465fd8e91acdb0fbd48b9359336" translate="yes" xml:space="preserve">
          <source>This option is useful if there is a bug in a native implementation, or a combination of a non-supported feature + a supported one doesn&amp;rsquo;t work.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7865156860f1c598c983eaedcb4b7879599554" translate="yes" xml:space="preserve">
          <source>This option wraps all template literal expressions with &lt;code&gt;String&lt;/code&gt;. See &lt;a href=&quot;https://github.com/babel/babel/issues/1065&quot;&gt;babel/babel#1065&lt;/a&gt; for more info.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483c48cd7ffe8be916c564f6fec1b0404c6f1d0d" translate="yes" xml:space="preserve">
          <source>This option wraps the generated function in &lt;code&gt;.bind(this)&lt;/code&gt; and keeps uses of &lt;code&gt;this&lt;/code&gt; inside the function as-is, instead of using a renamed &lt;code&gt;this&lt;/code&gt;. It also adds a runtime check to ensure the functions are not instantiated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e328a01539eac72918602ea2b0f6fb8505efdc08" translate="yes" xml:space="preserve">
          <source>This plugin actually converts duplicate keys in objects to be computed properties, which then must be handled by the &lt;a href=&quot;../transform-es2015-computed-properties/index&quot;&gt;transform-es2015-computed-properties&lt;/a&gt; plugin. The final result won&amp;rsquo;t contain any object literals with duplicate keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df3bca394c1b5420f2fc061e425263e6ac74d8d0" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;http://flowtype.org/docs/quick-reference.html#_&quot;&gt;flow syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ba22d23ce86c288ee1afc2cbd93149125a3be99" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;http://wiki.ecmascript.org/doku.php?id=strawman:do_expressions&quot;&gt;do-expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f890ec9c8dbeb44526c7ea215d170e53e98142e7" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://facebook.github.io/react/docs/jsx-in-depth.html&quot;&gt;JSX&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9376469239b2af614785743d19bf2449932782d" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://github.com/jeffmo/es-trailing-function-commas&quot;&gt;trailing function commas&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="406d702174f9aa0a974f05bb66f469490e467943" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://github.com/leebyron/ecmascript-more-export-from&quot;&gt;export extensions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d822b22d43a1760eedc47e2c26d730f00c2c3549" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://github.com/rwaldron/exponentiation-operator&quot;&gt;exponentiation operators&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e797f2ead855f40e6be15663707a60dbc337300c" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://github.com/sebmarkbage/ecmascript-rest-spread&quot;&gt;object rest spread syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf0aedb7c079ed4a777a0ec55555e2b3a3d4a81" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://github.com/tc39/proposal-class-public-fields&quot;&gt;class properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2319fc3663865cdce3d7734b87df1d32791d3534" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://github.com/wycats/javascript-decorators/blob/master/README.md&quot;&gt;decorators&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecab27bada6236c230d78dea98b28b7b0cc2a205" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse &lt;a href=&quot;https://github.com/zenparsing/es-function-bind&quot;&gt;function bind syntax&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdedf2f09220c1b24f8caa831c24fd1f3746569" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to parse the &lt;a href=&quot;https://github.com/allenwb/ESideas/blob/master/Generator%20metaproperty.md&quot;&gt;&lt;code&gt;function.sent&lt;/code&gt; meta property&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="487cd49eec0da9e6d3ab4ca308d4bc8e769466b6" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to transform all `__proto__` assignments to a method that will do a shallow copy of all properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a4123d6ec2368add606e240de21be306bcf600" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to transform async functions into a Bluebird coroutine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe54e060b0ee18f633c72a56a7e2d6ba8c93b432" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to transform boolean literals into !0 for true and !1 for false</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce9d848d7a2fcdaf0a87ffb4b95d190a517a710" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to transform class constructors.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="447355ae8595805f2492650f7cc0a595c03ea217" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to transform named function expressions into function declarations to get around some particularly nasty JScript bugs related to name function expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac6e4ef909b9d015626ffc3cecb2297861e4ad08" translate="yes" xml:space="preserve">
          <source>This plugin allows Babel to transform valid identifier property key literals into identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beedb55274274710b6dc2cbedd968c404db66bc2" translate="yes" xml:space="preserve">
          <source>This plugin inlines consecutive property assignments, array pushes, etc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34a29253b999a810e26f6f8d84ad3bc8cddd6484" translate="yes" xml:space="preserve">
          <source>This plugin is recommended in a library/tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df09c81930d3d5d5687940f118bf2595d9b2a631" translate="yes" xml:space="preserve">
          <source>This plugin may be enabled via &lt;code&gt;babel-plugin-transform-es2015-modules-commonjs&lt;/code&gt;. If you wish to disable it you can either turn &lt;code&gt;strict&lt;/code&gt; off or pass &lt;code&gt;strictMode: false&lt;/code&gt; as an option to the commonjs transform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7af9d62805c2199e4b215e74ecfc18239bfa32" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-async-generator-functions/index&quot;&gt;async-generator-functions&lt;/a&gt; and &lt;a href=&quot;../transform-regenerator/index&quot;&gt;transform-regenerator&lt;/a&gt; if generator support is not supported natively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c46cbc2bea11c0236ed8288a94b2323a48108f" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-class-constructor-call/index&quot;&gt;transform-class-constructor-call&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3900bdc5b9309a0826e53cdd03f08404962d1a3e" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-class-properties/index&quot;&gt;transform-class-properties&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b800963e2d58219c3d1dfd30bc8dd3cef0ee752" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-decorators/index&quot;&gt;transform-decorators&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97aa3c61ae52e87ba3c99941270bfa032a9a348d" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-do-expressions/index&quot;&gt;transform-do-expressions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e5154bfc5032e1d49d12085777e945477e2daea" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-exponentiation-operator/index&quot;&gt;transform-exponentiation-operator&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e82fe0d35bd25a89b479acc39be01a7c6e29b4c0" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-export-extensions/index&quot;&gt;export-extensions&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf830ff08c993a007870f1536f17d25929cdf631" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-flow-strip-types/index&quot;&gt;transform-flow-strip-types&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0eb9a87d28dcea464545eb09b40497f427c2706" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-function-bind/index&quot;&gt;transform-function-bind&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad471a0fe44ff6586054e7b7bbedc74fa6e8b84c" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-object-rest-spread/index&quot;&gt;transform-object-rest-spread&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b42cee99a54c18ff9b57a39816491eeae70a62a" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-react-jsx/index&quot;&gt;transform-react-jsx&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d865bd7ed4353c390be39d26f96f48108b5bc753" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;../transform-regenerator/index&quot;&gt;transform-regenerator&lt;/a&gt;, &lt;a href=&quot;../transform-async-to-generator/index&quot;&gt;transform-async-to-generator&lt;/a&gt;, or &lt;a href=&quot;../transform-async-to-module-method/index&quot;&gt;transform-async-to-module-method&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f1d20e2267a7fe5b2c2c3b4d0f505f0043e174a" translate="yes" xml:space="preserve">
          <source>This plugin only allows Babel to parse this syntax. If you want to transform it then see &lt;a href=&quot;https://github.com/airbnb/babel-plugin-dynamic-import-webpack&quot;&gt;dynamic-import-webpack&lt;/a&gt; or &lt;a href=&quot;https://github.com/airbnb/babel-plugin-dynamic-import-node&quot;&gt;dynamic-import-node&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea977ae31048808e8a12772b128cb52eabd3724" translate="yes" xml:space="preserve">
          <source>This plugin only removes flow types. It doesn't actually check if the types are valid itself. You'll need to use flow itself or a different babel plugin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1846511ae5e80b9e461077086e24400aef332d" translate="yes" xml:space="preserve">
          <source>This plugin places a &quot;use strict&quot;; directive at the top of all files to enable strict mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="981de2db5b0383fbac4772d6fa5e88555081d2be" translate="yes" xml:space="preserve">
          <source>This plugin removes all console.* calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02deb564327c8e9dc963ff22f1f9273955344ce4" translate="yes" xml:space="preserve">
          <source>This plugin removes all debugger; statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a07f39b61893d3a866fe38b2e65675d5fa8004" translate="yes" xml:space="preserve">
          <source>This plugin transforms &lt;code&gt;undefined&lt;/code&gt; into &lt;code&gt;void 0&lt;/code&gt; which returns undefined regardless of if it&amp;rsquo;s been reassigned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91dbb2b2aad2e5eefdde7581794bc31305e3e12d" translate="yes" xml:space="preserve">
          <source>This plugin transforms ES2015 modules to AMD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b576883b92e5236017c11c040d655e7fe37028f" translate="yes" xml:space="preserve">
          <source>This plugin transforms ES2015 modules to CommonJS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1af9b572bc692766b59ad585e4ca9803529aae1" translate="yes" xml:space="preserve">
          <source>This plugin transforms ES2015 modules to SystemJS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15ca47c643a5b118ad1cd98791b60f4155279dfb" translate="yes" xml:space="preserve">
          <source>This plugin transforms ES2015 modules to UMD.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b384a01dac23eedad8e4b79379a1552ca92b3493" translate="yes" xml:space="preserve">
          <source>This plugin transforms ES2015 parameters to ES5, this includes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffbb71223211f387c6ff1a76e2782a7a76e2a758" translate="yes" xml:space="preserve">
          <source>This plugin transforms undefined into void 0 which returns undefined regardless of if it's been reassigned</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21dbf0fd790f355fb5e248d1089dbd3ba1670d06" translate="yes" xml:space="preserve">
          <source>This plugin uses the &lt;a href=&quot;https://github.com/facebook/regenerator&quot;&gt;regenerator&lt;/a&gt; module to transform async and generator functions. &lt;code&gt;regeneratorRuntime&lt;/code&gt; is not included.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70d3af1761ebf3a7b065296e823e08eee6cd37ae" translate="yes" xml:space="preserve">
          <source>This plugin will transform all `Object.setPrototypeOf` calls to a method that will do a shallow defaults of all properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcd9e149fd2b6301e4609a57f4a493d2d1128745" translate="yes" xml:space="preserve">
          <source>This plugin will transform code in mainly two ways - 1) Reduce as much statements as possible into expressions, and 2) Make expressions as uniform as possible for better compressibility</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fee42aa0850050c9e812a60ad74ceb7c85a8e5fc" translate="yes" xml:space="preserve">
          <source>This preset includes the following plugins/presets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22c120bf16c52c5de5134319d0a228895c8b3408" translate="yes" xml:space="preserve">
          <source>This preset includes the following plugins:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c1f870693dec24233f5925c8fdc9ef2c6ff8f0" translate="yes" xml:space="preserve">
          <source>This repo will be made read-only, as all of the issues/labels have been moved over as well. Please report any bugs and open pull requests over on the &lt;a href=&quot;https://github.com/babel/babel&quot;&gt;main mono-repo&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d3d12cc5d9b383d4ca9dafdd0ef92ade0be48a" translate="yes" xml:space="preserve">
          <source>This should be straightforward to do in most cases. There might be cases where plugins should be split up more or certain plugins aren&amp;rsquo;t standalone enough (or impossible to do).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47f64d6a2d716a84eac85982ce90821e3e2400c5" translate="yes" xml:space="preserve">
          <source>This transform &lt;strong&gt;should be enabled only in production&lt;/strong&gt; (e.g., just before minifying your code) because although it improves runtime performance, it makes warning messages more cryptic.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2031adfbc7d474039d4d228b0e6f519606840c65" translate="yes" xml:space="preserve">
          <source>This transformer wraps all `typeof` expressions with a method that replicates native behaviour. (ie. returning &quot;symbol&quot; for symbols)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c629508fca045e8105c9915d1ec5a5cc15eda2f5" translate="yes" xml:space="preserve">
          <source>This will add &lt;code&gt;babel-external-helpers&lt;/code&gt; to your .bin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026a1b51141f4ae9210d00418354632033de3bfa" translate="yes" xml:space="preserve">
          <source>This will also work for &lt;code&gt;core-js&lt;/code&gt; directly (&lt;code&gt;import &quot;core-js&quot;;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da64d9a45fed60d097c6a4fbcb4a15e724afe22" translate="yes" xml:space="preserve">
          <source>This will emulate a full ES2015+ environment and is intended to be used in an application rather than a library/tool. This polyfill is automatically loaded when using &lt;code&gt;babel-node&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd2d0dd9c1356fcbb44a699a33ee85032b21f7c" translate="yes" xml:space="preserve">
          <source>This will heavily improve with the startup and compilation of your files. There are however scenarios where you want to change this behaviour and there are environment variables exposed to allow you to do this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdc854f347be70f1b54e9ff5979cb3f6809ab11b" translate="yes" xml:space="preserve">
          <source>Thus, if you set &lt;code&gt;exactGlobals&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; and do not pass any overrides, the first example of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7c621fd9490220a8c66ce9ea1fcb04010451174" translate="yes" xml:space="preserve">
          <source>To build the helpers, you will need to use &lt;code&gt;babel-cli&lt;/code&gt;. You can install &lt;code&gt;babel-cli&lt;/code&gt; with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="837325bc0ccd5a69f889c223083e18a9b24918ed" translate="yes" xml:space="preserve">
          <source>To compile a file &lt;strong&gt;every time that you change it&lt;/strong&gt;, use the &lt;code&gt;--watch&lt;/code&gt; or &lt;code&gt;-w&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7ff286542252a979dbe9088dd55e7df91cc728" translate="yes" xml:space="preserve">
          <source>To include the polyfill you need to require it at the top of the &lt;strong&gt;entry point&lt;/strong&gt; to your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81826bda8e672670d3823fe080c54ff839078282" translate="yes" xml:space="preserve">
          <source>To make your own preset, you just need to export a config.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88b01154308a7a0a8f36fdca6059b1853f87071f" translate="yes" xml:space="preserve">
          <source>To prevent these errors - set the &lt;code&gt;uglify&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt;, which enables all transformation plugins and as a result, your code is fully compiled to ES5. However, the &lt;code&gt;useBuiltIns&lt;/code&gt; option will still work as before and only include the polyfills that your target(s) need.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9a815345b695a4fbfa00dde2ce4f574362aa7f" translate="yes" xml:space="preserve">
          <source>Toggles including plugins from the &lt;a href=&quot;https://babeljs.io/docs/plugins/preset-es2015/&quot;&gt;es2015 preset&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b03d175459a88b6e64a9dfb8a906ef7b8c57f9ec" translate="yes" xml:space="preserve">
          <source>Toggles including plugins from the &lt;a href=&quot;https://babeljs.io/docs/plugins/preset-es2016/&quot;&gt;es2016 preset&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c32905abc64b71454993d783af236a90c76642" translate="yes" xml:space="preserve">
          <source>Toggles including plugins from the &lt;a href=&quot;https://babeljs.io/docs/plugins/preset-es2017/&quot;&gt;es2017 preset&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6c78e5932e2c2bb51b2c6604c2c2032985ef602" translate="yes" xml:space="preserve">
          <source>Toggles syntax highlighting the code as JavaScript for terminals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70026fcb5177a88428d154068260031ba6897577" translate="yes" xml:space="preserve">
          <source>Toggles whether or not generator functions are transformed to use a regenerator runtime that does not pollute the global scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc53b130cd17879093d457c4fd9c138a5660419" translate="yes" xml:space="preserve">
          <source>Toggles whether or not inlined Babel helpers (&lt;code&gt;classCallCheck&lt;/code&gt;, &lt;code&gt;extends&lt;/code&gt;, etc.) are replaced with calls to &lt;code&gt;moduleName&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbb09ee13af83c105405aff28525a15f53c4232b" translate="yes" xml:space="preserve">
          <source>Toggles whether or not new built-ins (&lt;code&gt;Promise&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;Map&lt;/code&gt;, etc.) are transformed to use a non-global polluting polyfill.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a6ecd6094dd71ce92160cc8fd42b4628ba1b102" translate="yes" xml:space="preserve">
          <source>Transform Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f40463652acd8e1315a367d98d845b93984db15" translate="yes" xml:space="preserve">
          <source>Transform object initializer mutators into Object.defineProperties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="762741251c181b297635134b9535702b030f867b" translate="yes" xml:space="preserve">
          <source>Transform plugins will enable the corresponding syntax plugin so you don't have to specify both.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4acaad501e695ffe3e9b658c49973714167b387" translate="yes" xml:space="preserve">
          <source>Transform rest properties for object destructuring assignment and spread properties for object literals</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b08d1a35edf68e61367cd6034b790035393df5" translate="yes" xml:space="preserve">
          <source>Transforms class properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7494f19d66dff6def987c451dd42bf3cca6afa4b" translate="yes" xml:space="preserve">
          <source>Transforms the passed in &lt;code&gt;code&lt;/code&gt;. Returning an object with the generated code, source map, and AST.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac2eb13d2f2a86f9d68b40a32244b2a214e1b8f6" translate="yes" xml:space="preserve">
          <source>Treat React JSX elements as value types and hoist them to the highest scope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7abe6704dc0340e53da6327dc83ce31abb4e861f" translate="yes" xml:space="preserve">
          <source>Tries to evaluate expressions and inline the result. For now only deals with numbers and strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550ec89d533e8a398d76c928b1379cbaa6bdd311" translate="yes" xml:space="preserve">
          <source>Try it Out in the REPL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d6fe0b06380304878fccab9e4b8dbcfb062906" translate="yes" xml:space="preserve">
          <source>Turn JSX into React Pre-0.12 function calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb4c76547c75c0ae2ace50262abe9f0a8a96ef9" translate="yes" xml:space="preserve">
          <source>Turn JSX into React function calls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3abcbe7c07b553fbd1627d1182cfd1e2b2be4ca9" translate="yes" xml:space="preserve">
          <source>Turn JSX into React function calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e519c6acc00ab176fad4bceca99bccc17448bfd" translate="yes" xml:space="preserve">
          <source>Turn async functions into ES2015 generators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60079ad5f671ec53187007eece2ecd08da49e8b9" translate="yes" xml:space="preserve">
          <source>Turn async generator functions and for-await statements to ES2015 generators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d134f6525f1724c9ef542787d213258484a0f15" translate="yes" xml:space="preserve">
          <source>Turn flow type annotations into comments</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896cae08745a30fbf9c8a9a5732bfb09a8974eb0" translate="yes" xml:space="preserve">
          <source>Turn valid member expression property literals into plain identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0417a20eed9a2bdc5f52ac9a59f93baca7c0371" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;boolean&lt;/code&gt; Default: &lt;code&gt;false&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe869ac0809a32605659081106354bf706927c0" translate="yes" xml:space="preserve">
          <source>Type: &lt;code&gt;string&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d2c26e4b9f0065fc6aea48e91f33660deb1bcb" translate="yes" xml:space="preserve">
          <source>Uglify has support for ES2015 syntax via &lt;a href=&quot;https://github.com/mishoo/UglifyJS2/tree/harmony&quot;&gt;uglify-es&lt;/a&gt;. If you are using syntax unsupported by &lt;code&gt;uglify-es&lt;/code&gt;, we recommend using &lt;a href=&quot;https://github.com/babel/minify&quot;&gt;babel-minify&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a32990927e0551bc7afc670f864f50bdbfa3ddd1" translate="yes" xml:space="preserve">
          <source>Undefined to void transform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adddbb7e71b65495eede8bbd78c935b388257960" translate="yes" xml:space="preserve">
          <source>Under loose mode, methods are defined on the class prototype with simple assignments instead of being defined. This can result in the following not working:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="802089dd1f079609cc0d4a407ef19839fab1f3e8" translate="yes" xml:space="preserve">
          <source>Universal Module Definition (UMD)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="86af0eadc92a3466be16956b3ef897cfba227287" translate="yes" xml:space="preserve">
          <source>Usage in Browser</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe14ff67310173ba989b6bb05d907bb99c6fd1a7" translate="yes" xml:space="preserve">
          <source>Usage in Node / Browserify / Webpack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6e8ba01898d0fa2f2f4d3a539065f4b1e336ebc" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../preset-env/index&quot;&gt;preset-env&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7675763e4a344330f6b3e563edd2f1d41f932a53" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://github.com/ai/browserslist&quot;&gt;browserslist&lt;/a&gt; to declare supported environments by performing queries like &lt;code&gt;&amp;gt; 1%, last 2 versions&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e0b50b0e1dedd8ae55f5faef2770241258c3f4" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&quot;babelrc&quot;: false&lt;/code&gt; in &lt;a href=&quot;../api/index#options&quot;&gt;options&lt;/a&gt; to stop lookup behavior, or provide the &lt;a href=&quot;../cli/index#babel-ignoring-babelrc&quot;&gt;&lt;code&gt;--no-babelrc&lt;/code&gt; CLI flag&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce496f59a33970927dacfb4d858b2e8051a414c6" translate="yes" xml:space="preserve">
          <source>Use external data such as &lt;a href=&quot;https://github.com/kangax/compat-table&quot;&gt;&lt;code&gt;compat-table&lt;/code&gt;&lt;/a&gt; to determine browser support. (We should create PRs there when necessary)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67344c219a97897794470ddf0efe896ab3fc6aff" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;--plugins&lt;/code&gt; option to specify plugins to use in compilation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a910d50096c1a07a19f269815418beef49fd986" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;--presets&lt;/code&gt; option to specify plugins to use in compilation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47f753782c9d1f2d3a7d382ecbe502582595533" translate="yes" xml:space="preserve">
          <source>Use via &lt;code&gt;package.json&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254550be6f0ce4335476259029c3eaa67808f04e" translate="yes" xml:space="preserve">
          <source>Using Plugins</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c8d8c946fed5a9bdeb9912a75d48ee4dd85edc7" translate="yes" xml:space="preserve">
          <source>Using Presets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72073604c9c4bc9ed4dbc8ad358bdbfbaae79ce5" translate="yes" xml:space="preserve">
          <source>Using a do expression you can add logic inside JSX:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa21a59ae1dca94a9e4a9bf8787d301e2403ed8" translate="yes" xml:space="preserve">
          <source>Using with &lt;code&gt;document.querySelectorAll&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bd3aa4a3e0261dc08ace935eab2e9edddf7a59" translate="yes" xml:space="preserve">
          <source>Usually Babel will place helpers at the top of your file to do common tasks to avoid duplicating the code around in the current file. Sometimes these helpers can get a little bulky and add unnecessary duplication across files. The &lt;code&gt;runtime&lt;/code&gt; transformer replaces all the helper calls to a module.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7cfb6c4b38b8f685840aceb43c8381b73ecf99" translate="yes" xml:space="preserve">
          <source>Valid options include any:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bba5ca923905ea7020283b3f47e33aca8b5e78e4" translate="yes" xml:space="preserve">
          <source>Validate ES2015 constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5054ca9858ffab20b9d1dad5f47771dbd559feb3" translate="yes" xml:space="preserve">
          <source>Very handy for conditions inside JSX: &lt;a href=&quot;https://github.com/reactjs/react-future/issues/35#issuecomment-120009203&quot;&gt;reactjs/react-future#35&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4405c792ed50fa36373e59a216bef4c54fb317" translate="yes" xml:space="preserve">
          <source>Via &lt;code&gt;.babelrc&lt;/code&gt; (Recommended)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bde3bf5863ab1bfad9da31e26d8182ba9f947e4d" translate="yes" xml:space="preserve">
          <source>Via CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d421a131c2d3aba786670411141757ce88f431e7" translate="yes" xml:space="preserve">
          <source>Via Node API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb0ad805cff3aa7d74ec9095dd4a6347697ef898" translate="yes" xml:space="preserve">
          <source>View the output</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a90b03795aa47319db1655e7316ffd52e0d18c" translate="yes" xml:space="preserve">
          <source>We can install Babel CLI locally by running:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48d3a5cf7b590e91b9fd1b5225dbfdeb6f07ce2" translate="yes" xml:space="preserve">
          <source>We can periodically run &lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/scripts/build-data.js&quot;&gt;build-data.js&lt;/a&gt; which generates &lt;a href=&quot;https://github.com/babel/babel-preset-env/blob/master/data/plugins.json&quot;&gt;plugins.json&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9417b564c5d49c85c74f9ae28ab53ca447b563a" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;ve assembled some for common environments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042adfdaabd1425f58a0b59a2280650b6dc0bafd" translate="yes" xml:space="preserve">
          <source>What does this actually mean though? Basically, you can use built-ins such as &lt;code&gt;Promise&lt;/code&gt;, &lt;code&gt;Set&lt;/code&gt;, &lt;code&gt;Symbol&lt;/code&gt;, etc., as well use all the Babel features that require a polyfill seamlessly, without global pollution, making it extremely suitable for libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6058a99d9bc1a11e5c9957a8649df5906380808" translate="yes" xml:space="preserve">
          <source>What the &lt;code&gt;runtime&lt;/code&gt; transformer does is transform the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf7e1155d570d64a97965333a7692b4a5001f9c" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;Bar.prototype.foo&lt;/code&gt; is defined it triggers the setter on &lt;code&gt;Foo&lt;/code&gt;. This is a case that is very unlikely to appear in production code however it&amp;rsquo;s something to keep in mind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="114d14dcae99fd4112bd9e8fd38f67f11d56504a" translate="yes" xml:space="preserve">
          <source>When arguments for user script have names conflicting with node options, double dash placed before script name can be used to resolve ambiguities</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7fcd99bbc7aa7e586e518dd0e7d232384ff78c" translate="yes" xml:space="preserve">
          <source>When nothing is specified before the &lt;code&gt;::&lt;/code&gt; operator, the function is bound to its object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7349531366f162cf8febfd70846f99dab5bc8d0" translate="yes" xml:space="preserve">
          <source>When spreading props, use &lt;code&gt;Object.assign&lt;/code&gt; directly instead of Babel&amp;rsquo;s extend helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4733a18175013db8ae2fea927f0a93744163ef" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;uglify-js&lt;/code&gt; to minify your code, you may run into syntax errors when targeting later browsers since &lt;code&gt;uglify-js&lt;/code&gt; does not support any ES2015+ syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f33830e3ba936d4042ef695bf96fd1afc80613c" translate="yes" xml:space="preserve">
          <source>Whenever you use a generator function or async function:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1e8123023addb3fb104a72b806ab476212fb4ac" translate="yes" xml:space="preserve">
          <source>While this plugin doesn&amp;rsquo;t shorten the output in any way, it does optimize it for repetition-based compression algorithms such as gzip</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0716e5cdddedb753c7a3151a3856d779c856297f" translate="yes" xml:space="preserve">
          <source>While you &lt;em&gt;can&lt;/em&gt; install Babel CLI globally on your machine, it&amp;rsquo;s much better to install it &lt;strong&gt;locally&lt;/strong&gt; project by project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a745cc4f8050526614eeab20b51161bab69b244" translate="yes" xml:space="preserve">
          <source>Whitelist of helpers to ONLY include</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b6fb06564a0fea8e2fa0ed3e3790d8910ba8e02" translate="yes" xml:space="preserve">
          <source>Why you should enforce Dangling Commas for Multiline Statements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d77989c1e3c0e0ace735631597dc367ffdfa6f32" translate="yes" xml:space="preserve">
          <source>Why?</source>
          <target state="translated">Why?</target>
        </trans-unit>
        <trans-unit id="829eba028f78ea2da9b95d2c5d4d50bcb0e5501f" translate="yes" xml:space="preserve">
          <source>Will only work with code of the form &lt;code&gt;Object.assign&lt;/code&gt; or &lt;code&gt;Object['assign']&lt;/code&gt;. The following patterns are not supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bbb3e3a8f514b74d6f7b4454be8fff47c9bf827" translate="yes" xml:space="preserve">
          <source>Will run &lt;code&gt;transform-decorators-legacy&lt;/code&gt; then &lt;code&gt;transform-class-properties&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16970e60e41aa68bbc8cb4b753aa12a2d747b162" translate="yes" xml:space="preserve">
          <source>Will run in the following order: &lt;code&gt;stage-2&lt;/code&gt;, &lt;code&gt;react&lt;/code&gt;, then &lt;code&gt;es2015&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b94412239c90bacf98013f579ae3c475b395f3d0" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;https://www.npmjs.com&quot;&gt;npm&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f600945afad9df68aa6615a566db4804b8823d28" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;webpack.config.js&lt;/code&gt;, add &lt;code&gt;babel-polyfill&lt;/code&gt; to your entry array:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bf60a08d100412a557c9ec4468e26a3fc8d3190" translate="yes" xml:space="preserve">
          <source>With options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c7eb270960aa3ac6e52e054d8c057afaa88ba9f" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;runtime&lt;/code&gt; transformer, however, it is compiled to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284472a16763efe49cd65bada9c3fb4caaf780c5" translate="yes" xml:space="preserve">
          <source>Without any configuration options, babel-preset-env behaves exactly the same as babel-preset-latest (or babel-preset-es2015, babel-preset-es2016, and babel-preset-es2017 together).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703c6eb398214673f74fdca9cf5f8628a7a7dd05" translate="yes" xml:space="preserve">
          <source>Without options:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ed3bc56e59bbae6788ce24db8003627deb910b3" translate="yes" xml:space="preserve">
          <source>You Don&amp;rsquo;t Know JS</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2fb8adb2d7cbbc5b342e6b1da53b7a4fa68a07" translate="yes" xml:space="preserve">
          <source>You can also check out the React &lt;a href=&quot;https://facebook.github.io/react/docs/hello-world.html&quot;&gt;Getting Started page&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf3d35ecba6e2418639c768375950f43f2de5fc" translate="yes" xml:space="preserve">
          <source>You can also configure it to only include the polyfills and transforms needed for the browsers you support. Compiling only what&amp;rsquo;s needed can make your bundles smaller and your life easier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4ead46136cb88b663a524f0a97ee07a4b15b43" translate="yes" xml:space="preserve">
          <source>You can also override the names of particular libraries when this module is running in the browser. For example the &lt;code&gt;es6-promise&lt;/code&gt; library exposes itself as &lt;code&gt;global.Promise&lt;/code&gt; rather than &lt;code&gt;global.es6Promise&lt;/code&gt;. This can be accommodated by:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72455140be58bf5100feade06bd2fd53b56d0120" translate="yes" xml:space="preserve">
          <source>You can also pass options down to the &lt;code&gt;es2015&lt;/code&gt; preset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba80c278399f772dc195509117f6b0b4858e7fb7" translate="yes" xml:space="preserve">
          <source>You can also provide any &lt;a href=&quot;https://github.com/babel/babylon/#plugins&quot;&gt;&lt;code&gt;plugins&lt;/code&gt; option&lt;/a&gt; from babylon:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19ef343570bd2995e8b624cba777b0fa854f352" translate="yes" xml:space="preserve">
          <source>You can also specify an relative/absolute path to your plugin/preset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="152458f4e739f56ec9cc4904afc76bb9a908776b" translate="yes" xml:space="preserve">
          <source>You can also use React without using Babel: &lt;a href=&quot;https://facebook.github.io/react/docs/react-without-jsx.html&quot;&gt;React Without JSX&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb7946e4475e6a6d12e8b98b718a793a927529d" translate="yes" xml:space="preserve">
          <source>You can alternatively choose to specify your &lt;code&gt;.babelrc&lt;/code&gt; config from within &lt;code&gt;package.json&lt;/code&gt; like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9605a26d2fb7a716b8196b2674551462e2c7f81d" translate="yes" xml:space="preserve">
          <source>You can output the file using</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e6fc8a2b25deb28c06caa83cfbac4a425be594" translate="yes" xml:space="preserve">
          <source>You can pass in all other &lt;a href=&quot;https://babeljs.io/docs/usage/api/#options&quot;&gt;options&lt;/a&gt; as well, including &lt;code&gt;plugins&lt;/code&gt; and &lt;code&gt;presets&lt;/code&gt;. But note that the closest &lt;a href=&quot;https://babeljs.io/docs/usage/babelrc/&quot;&gt;&lt;code&gt;.babelrc&lt;/code&gt;&lt;/a&gt; to each file still applies, and takes precedence over any options you pass in here.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78aa89bf9dc0db976e3b2a59b02b897858b614f" translate="yes" xml:space="preserve">
          <source>You can pass these options from the Babel CLI like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958569ce5383c38526196d0b52b3ca98cfd1f00f" translate="yes" xml:space="preserve">
          <source>You can set this environment variable with the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c977719f0c38ed5dff0e5b9d26dc6e444700ad7a" translate="yes" xml:space="preserve">
          <source>You can tell Babel to not place any declarations at the top of your files and instead just point them to a reference contained within the external helpers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c9e9ce29bfa272886f66054c0806ed443f6b23" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;env&lt;/code&gt; option to set specific options when in a certain environment:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d470c98b591f2c19f872b12aad9e0a385159703e" translate="yes" xml:space="preserve">
          <source>You may alternatively/selectively include what you need:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe68177c6328578e150534bdde1c0dd4b4711197" translate="yes" xml:space="preserve">
          <source>You must include the &lt;a href=&quot;https://babeljs.io/docs/usage/polyfill/&quot;&gt;polyfill&lt;/a&gt; separately when using features that require it, like generators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbdbd548e5a3291bbc9bc89545b9b3b33488fe35" translate="yes" xml:space="preserve">
          <source>You need to import/inject this file before executing your own code (instructions below).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f85ce322453eba3d3797e43c95391cd993356828" translate="yes" xml:space="preserve">
          <source>You need to use either the &lt;a href=&quot;../../usage/polyfill/index&quot;&gt;Babel polyfill&lt;/a&gt; or the &lt;a href=&quot;https://github.com/facebook/regenerator/blob/master/packages/regenerator-runtime/runtime.js&quot;&gt;regenerator runtime&lt;/a&gt; so that &lt;code&gt;regeneratorRuntime&lt;/code&gt; will be defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbb634ad67c9689efb0feaaa2b7e86c8244ed8c" translate="yes" xml:space="preserve">
          <source>You should be able to use this plugin instead of &lt;code&gt;babel-plugin-flow-strip-types&lt;/code&gt; to preserve the &lt;code&gt;/* @flow */&lt;/code&gt; directive and still use flow.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d47778d3f6b6b256cd1ec83d1c2865c1ae2aeb1f" translate="yes" xml:space="preserve">
          <source>You should not be using &lt;code&gt;babel-node&lt;/code&gt; in production. It is unnecessarily heavy, with high memory usage due to the cache being stored in memory. You will also always experience a startup performance penalty as the entire app needs to be compiled on the fly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47fcbd9db7c1b0617d6ac3bc5c7a924e33e297b" translate="yes" xml:space="preserve">
          <source>You will need to add some plugins for Babel to do anything (they affect the 2nd stage, transformation).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ca148658dc48e94913d34208f28e71e40ef326" translate="yes" xml:space="preserve">
          <source>[facebook/react#3226] Optimizing Compiler: Reuse Constant Value Types like ReactElement</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f823e65e5e088a8e6f6d4e87540d9bfafb0ddbcd" translate="yes" xml:space="preserve">
          <source>[facebook/react#3228] Optimizing Compiler: Inline React Elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b859c02e14c4d66cce479ee37cb2812926a22b30" translate="yes" xml:space="preserve">
          <source>allow the exported global name to be overridden via the &lt;code&gt;globals&lt;/code&gt; map. Any override must again be a valid identifier or valid member expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c411f04d5c37acd73f129a9af9384a6b76b0894b" translate="yes" xml:space="preserve">
          <source>always include arrow functions, explicitly exclude generators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b91ebc25205b3604d85904482bdfc50ba47f64" translate="yes" xml:space="preserve">
          <source>always use the full import string instead of the basename when generating the global names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08d145ec5123014ec279e72ed61a11bb0ece95a" translate="yes" xml:space="preserve">
          <source>and &lt;code&gt;babel-runtime&lt;/code&gt; as a production dependency (with &lt;code&gt;--save&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49344ca2044e139c9c524f4d6e16c1714f041ba" translate="yes" xml:space="preserve">
          <source>anyTypeAnnotation</source>
          <target state="translated">anyTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="c8e9d3e0c6efc85c0ae397f44dfa481f29e4b877" translate="yes" xml:space="preserve">
          <source>arrayExpression</source>
          <target state="translated">arrayExpression</target>
        </trans-unit>
        <trans-unit id="bd21952389fa0a362c7ece326dc0f5dc077524e8" translate="yes" xml:space="preserve">
          <source>arrayPattern</source>
          <target state="translated">arrayPattern</target>
        </trans-unit>
        <trans-unit id="3a2c98b0713311b6563e732fe9ae0efae80e2e90" translate="yes" xml:space="preserve">
          <source>arrayTypeAnnotation</source>
          <target state="translated">arrayTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="c39dc4f12ff4934139794389eb44df5819df7ff2" translate="yes" xml:space="preserve">
          <source>arrowFunctionExpression</source>
          <target state="translated">arrowFunctionExpression</target>
        </trans-unit>
        <trans-unit id="a5266761e75e3b7f5e614de997e940d854dca064" translate="yes" xml:space="preserve">
          <source>assignmentExpression</source>
          <target state="translated">assignmentExpression</target>
        </trans-unit>
        <trans-unit id="7c41403fd6261bde0509c2d789daf44c3e7887bd" translate="yes" xml:space="preserve">
          <source>assignmentPattern</source>
          <target state="translated">assignmentPattern</target>
        </trans-unit>
        <trans-unit id="b7e04b33fdd186ab6bd2deace04ea6b551b9bd4a" translate="yes" xml:space="preserve">
          <source>async</source>
          <target state="translated">async</target>
        </trans-unit>
        <trans-unit id="4d6be6d5de817d604556a34f11d0dc27c3fbdb08" translate="yes" xml:space="preserve">
          <source>async generator transform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c79e584ec7e1c9e37ae2d1e2ba302a45d653e810" translate="yes" xml:space="preserve">
          <source>async-generator-functions</source>
          <target state="translated">async-generator-functions</target>
        </trans-unit>
        <trans-unit id="4ca996194182aaa53f9a0b2e4d2ad8a3188d9dbd" translate="yes" xml:space="preserve">
          <source>async-generators</source>
          <target state="translated">async-generators</target>
        </trans-unit>
        <trans-unit id="97a7ae8be104c21ab6284c944e3a363aca958a44" translate="yes" xml:space="preserve">
          <source>async-to-generator</source>
          <target state="translated">async-to-generator</target>
        </trans-unit>
        <trans-unit id="319ea96708b438928141ff0e25a316c27675f586" translate="yes" xml:space="preserve">
          <source>async-to-module-method</source>
          <target state="translated">async-to-module-method</target>
        </trans-unit>
        <trans-unit id="76b6d04ce9043b9d560c2e27bdd14784b8cb08d9" translate="yes" xml:space="preserve">
          <source>asyncGenerators</source>
          <target state="translated">asyncGenerators</target>
        </trans-unit>
        <trans-unit id="2d4404ecb0c2ad1d43b5d2725d3340918907eb63" translate="yes" xml:space="preserve">
          <source>awaitExpression</source>
          <target state="translated">awaitExpression</target>
        </trans-unit>
        <trans-unit id="cad160f3d4cd7c33896f42a479eeaa1b5bedc5fb" translate="yes" xml:space="preserve">
          <source>babel</source>
          <target state="translated">babel</target>
        </trans-unit>
        <trans-unit id="8699053435fb5b35e824818ac53f43eae4a2dcbb" translate="yes" xml:space="preserve">
          <source>babel comes with a second CLI which works exactly the same as Node.js&amp;rsquo;s CLI, only it will compile ES6 code before running it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ada5216478d316f122cbb620864f482d0cb38719" translate="yes" xml:space="preserve">
          <source>babel-node</source>
          <target state="translated">babel-node</target>
        </trans-unit>
        <trans-unit id="586cf48f6baecce6b72405e1fd706e71d100e08c" translate="yes" xml:space="preserve">
          <source>babel-preset-modern-browsers</source>
          <target state="translated">babel-preset-modern-browsers</target>
        </trans-unit>
        <trans-unit id="3e33467403644b87e797bc6f5d7930e5e1be46f0" translate="yes" xml:space="preserve">
          <source>babel.transform()</source>
          <target state="translated">babel.transform()</target>
        </trans-unit>
        <trans-unit id="7fbd09c4bb61a9def541fe4f5c4b5a18037ee08c" translate="yes" xml:space="preserve">
          <source>babel.transform(code: string, options?: Object)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b938c286c8d8889e3bb98d6cf11ba5d86ec308" translate="yes" xml:space="preserve">
          <source>babel.transformFile()</source>
          <target state="translated">babel.transformFile()</target>
        </trans-unit>
        <trans-unit id="8f60fd35d1287c726c464cbcb9370e6a9ffbbac5" translate="yes" xml:space="preserve">
          <source>babel.transformFile(filename: string, options?: Object, callback: Function)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82628334f2e7c5b2a1d5b7c333abf1418f216232" translate="yes" xml:space="preserve">
          <source>babel.transformFileSync()</source>
          <target state="translated">babel.transformFileSync()</target>
        </trans-unit>
        <trans-unit id="f41f3f7dadafc8cc778a32a0bd56b0609d8ec964" translate="yes" xml:space="preserve">
          <source>babel.transformFileSync(filename: string, options?: Object)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4077b085b97a9818973c5b371a2504eb6cc5b292" translate="yes" xml:space="preserve">
          <source>babel.transformFromAst()</source>
          <target state="translated">babel.transformFromAst()</target>
        </trans-unit>
        <trans-unit id="0ce19ae09881054af194e3bf7438d0d95f635c4c" translate="yes" xml:space="preserve">
          <source>babel.transformFromAst(ast: Object, code?: string, options?: Object)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c936aebb597679cca9d59d79ddb8d915354142a" translate="yes" xml:space="preserve">
          <source>because again the transform is only using the basename of the import.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b81e7a1297622fb04be8b4c124bd347a06ef025" translate="yes" xml:space="preserve">
          <source>binaryExpression</source>
          <target state="translated">binaryExpression</target>
        </trans-unit>
        <trans-unit id="5a307c1a3cd6970d690906d3549dc16aaf810b13" translate="yes" xml:space="preserve">
          <source>bindExpression</source>
          <target state="translated">bindExpression</target>
        </trans-unit>
        <trans-unit id="fb1e13a7f3c6dd71000b5645307c46c68955c32b" translate="yes" xml:space="preserve">
          <source>blockStatement</source>
          <target state="translated">blockStatement</target>
        </trans-unit>
        <trans-unit id="e4f18be30bcb738f22c2db0f39a72b3f33ef77d1" translate="yes" xml:space="preserve">
          <source>booleanLiteral</source>
          <target state="translated">booleanLiteral</target>
        </trans-unit>
        <trans-unit id="66eb2c401c18a6978a2625712f871b99f1ffedd2" translate="yes" xml:space="preserve">
          <source>booleanLiteralTypeAnnotation</source>
          <target state="translated">booleanLiteralTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="db88926b77ad4dcb0e1f7bbfb4096e1407888b6b" translate="yes" xml:space="preserve">
          <source>booleanTypeAnnotation</source>
          <target state="translated">booleanTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="099e8a7f93f38518b0fd864a4d866c5c09a18ce6" translate="yes" xml:space="preserve">
          <source>breakStatement</source>
          <target state="translated">breakStatement</target>
        </trans-unit>
        <trans-unit id="0425602a818409c2ab4120c3a91030bfbc9842c1" translate="yes" xml:space="preserve">
          <source>callExpression</source>
          <target state="translated">callExpression</target>
        </trans-unit>
        <trans-unit id="af3f9bf534ffc651023e209bd92c9526a0ffc124" translate="yes" xml:space="preserve">
          <source>catchClause</source>
          <target state="translated">catchClause</target>
        </trans-unit>
        <trans-unit id="9ce28666816687f0fe7d5c659e66ec597a6768b6" translate="yes" xml:space="preserve">
          <source>check-es2015-constants</source>
          <target state="translated">check-es2015-constants</target>
        </trans-unit>
        <trans-unit id="535165be142db28b6ff5da0ee05538bde599b452" translate="yes" xml:space="preserve">
          <source>class-constructor-call</source>
          <target state="translated">class-constructor-call</target>
        </trans-unit>
        <trans-unit id="682d853d146d7fa138501ffb16b2d9695464c287" translate="yes" xml:space="preserve">
          <source>class-properties</source>
          <target state="translated">class-properties</target>
        </trans-unit>
        <trans-unit id="b80fe2c01638105674f1999ed42154f78bdde803" translate="yes" xml:space="preserve">
          <source>classBody</source>
          <target state="translated">classBody</target>
        </trans-unit>
        <trans-unit id="f5787b06aff55a53f5079abcee3524707dfb4092" translate="yes" xml:space="preserve">
          <source>classDeclaration</source>
          <target state="translated">classDeclaration</target>
        </trans-unit>
        <trans-unit id="f45b7b3a042594a3aa1133e446db4a518a492177" translate="yes" xml:space="preserve">
          <source>classExpression</source>
          <target state="translated">classExpression</target>
        </trans-unit>
        <trans-unit id="3414ecfd9cf247d997e5824a250c0eeb31d6a370" translate="yes" xml:space="preserve">
          <source>classImplements</source>
          <target state="translated">classImplements</target>
        </trans-unit>
        <trans-unit id="a28abbe15406faddf7659ca2fccf1451acc39cbf" translate="yes" xml:space="preserve">
          <source>classMethod</source>
          <target state="translated">classMethod</target>
        </trans-unit>
        <trans-unit id="50f5c5caab5fe50d5fd29fd4776150439e4a0fef" translate="yes" xml:space="preserve">
          <source>classProperty</source>
          <target state="translated">classProperty</target>
        </trans-unit>
        <trans-unit id="e6fb06210fafc02fd7479ddbed2d042cc3a5155e" translate="yes" xml:space="preserve">
          <source>code</source>
          <target state="translated">code</target>
        </trans-unit>
        <trans-unit id="fcb3e608283f105f77b5c06975a119832dcf534a" translate="yes" xml:space="preserve">
          <source>conditionalExpression</source>
          <target state="translated">conditionalExpression</target>
        </trans-unit>
        <trans-unit id="e338884dd974d37ca743083ec4a7682b0fea5a30" translate="yes" xml:space="preserve">
          <source>continueStatement</source>
          <target state="translated">continueStatement</target>
        </trans-unit>
        <trans-unit id="a2140086284dca2ca9149b86f9f738149c557e12" translate="yes" xml:space="preserve">
          <source>debuggerStatement</source>
          <target state="translated">debuggerStatement</target>
        </trans-unit>
        <trans-unit id="528e552e3fc7d119e739bd5a2f09e4e5f354e362" translate="yes" xml:space="preserve">
          <source>declareClass</source>
          <target state="translated">declareClass</target>
        </trans-unit>
        <trans-unit id="7db1d04e70000ea45d005c6314f2d6fbdd2839dc" translate="yes" xml:space="preserve">
          <source>declareExportDeclaration</source>
          <target state="translated">declareExportDeclaration</target>
        </trans-unit>
        <trans-unit id="86ce8220128a9f6d03b7b42bf2510a65b0ff6f4e" translate="yes" xml:space="preserve">
          <source>declareFunction</source>
          <target state="translated">declareFunction</target>
        </trans-unit>
        <trans-unit id="1d312cf314dc8625323d029d97e218de7bff1fb7" translate="yes" xml:space="preserve">
          <source>declareInterface</source>
          <target state="translated">declareInterface</target>
        </trans-unit>
        <trans-unit id="4e2a5e1b4a06abeff6ff355e5fac7026c3ee239d" translate="yes" xml:space="preserve">
          <source>declareModule</source>
          <target state="translated">declareModule</target>
        </trans-unit>
        <trans-unit id="9ba443960cf517aa0b530052f207888a316802af" translate="yes" xml:space="preserve">
          <source>declareModuleExports</source>
          <target state="translated">declareModuleExports</target>
        </trans-unit>
        <trans-unit id="42e338807ec1965391b9ae185e27ad8e57beecfa" translate="yes" xml:space="preserve">
          <source>declareOpaqueType</source>
          <target state="translated">declareOpaqueType</target>
        </trans-unit>
        <trans-unit id="9beb788b95c56dc23c6202b6244b90ac2e9d7ef4" translate="yes" xml:space="preserve">
          <source>declareTypeAlias</source>
          <target state="translated">declareTypeAlias</target>
        </trans-unit>
        <trans-unit id="184489f488d38a6d6d1c40a24b5ba37839e841e7" translate="yes" xml:space="preserve">
          <source>declareVariable</source>
          <target state="translated">declareVariable</target>
        </trans-unit>
        <trans-unit id="ee329fb660d413c67e1d067f80ee172e6e8b17ed" translate="yes" xml:space="preserve">
          <source>decorator</source>
          <target state="translated">decorator</target>
        </trans-unit>
        <trans-unit id="fd7fb081046c7d4af0a878e9da15da0ceab884bb" translate="yes" xml:space="preserve">
          <source>decorators</source>
          <target state="translated">decorators</target>
        </trans-unit>
        <trans-unit id="8c6aa25e6cb9026a984b4aa1baf5206dea83a8c4" translate="yes" xml:space="preserve">
          <source>default value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d981bf920ab98c455a9796d062745b9d6b5cbfb" translate="yes" xml:space="preserve">
          <source>directive</source>
          <target state="translated">directive</target>
        </trans-unit>
        <trans-unit id="b6b1abe1e8fd7c1321c930f873c359251c4ff84b" translate="yes" xml:space="preserve">
          <source>directiveLiteral</source>
          <target state="translated">directiveLiteral</target>
        </trans-unit>
        <trans-unit id="4fb43da463630634ba7bf73abe3f33a693bf9b27" translate="yes" xml:space="preserve">
          <source>do-expressions</source>
          <target state="translated">do-expressions</target>
        </trans-unit>
        <trans-unit id="863e35967242f9d277654876edebf20d5c4bb7bc" translate="yes" xml:space="preserve">
          <source>doExpression</source>
          <target state="translated">doExpression</target>
        </trans-unit>
        <trans-unit id="2f957f0bc60f9a6fb6a585fb887f091ccfa7fc8c" translate="yes" xml:space="preserve">
          <source>doWhileStatement</source>
          <target state="translated">doWhileStatement</target>
        </trans-unit>
        <trans-unit id="84fc50220ede69f2f7d823fd283052aef56d4ad2" translate="yes" xml:space="preserve">
          <source>dynamic-import</source>
          <target state="translated">dynamic-import</target>
        </trans-unit>
        <trans-unit id="bb7af8d2f4661d22663b7b321044557afa9dd60a" translate="yes" xml:space="preserve">
          <source>emptyStatement</source>
          <target state="translated">emptyStatement</target>
        </trans-unit>
        <trans-unit id="395b60984a77731751224767cd2a7115730a70fd" translate="yes" xml:space="preserve">
          <source>emptyTypeAnnotation</source>
          <target state="translated">emptyTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="920f8f5815b381ea692e9e7c2f7119f2b1aa620a" translate="yes" xml:space="preserve">
          <source>env</source>
          <target state="translated">env</target>
        </trans-unit>
        <trans-unit id="2bddb453f91528c5bca5ac42f85c2002b5102cbf" translate="yes" xml:space="preserve">
          <source>es2015</source>
          <target state="translated">es2015</target>
        </trans-unit>
        <trans-unit id="d05e16721e099911412ccf26bf91287cc7abfbd1" translate="yes" xml:space="preserve">
          <source>es2015-arrow-functions</source>
          <target state="translated">es2015-arrow-functions</target>
        </trans-unit>
        <trans-unit id="b3ac0b520bf8f77bdd0b088f53fbacda9cd3ef68" translate="yes" xml:space="preserve">
          <source>es2015-block-scoped-functions</source>
          <target state="translated">es2015-block-scoped-functions</target>
        </trans-unit>
        <trans-unit id="8112b6dbc309e0c0fbe07c650a0185d9850a51bb" translate="yes" xml:space="preserve">
          <source>es2015-block-scoping</source>
          <target state="translated">es2015-block-scoping</target>
        </trans-unit>
        <trans-unit id="f0ee5aba023344bf3c580795459b1f33123a6c57" translate="yes" xml:space="preserve">
          <source>es2015-classes</source>
          <target state="translated">es2015-classes</target>
        </trans-unit>
        <trans-unit id="c6c168922f47c023422bd88454251599bd1bd172" translate="yes" xml:space="preserve">
          <source>es2015-computed-properties</source>
          <target state="translated">es2015-computed-properties</target>
        </trans-unit>
        <trans-unit id="9847227b2d21acd71c608e2686d25a5acfeace9f" translate="yes" xml:space="preserve">
          <source>es2015-destructuring</source>
          <target state="translated">es2015-destructuring</target>
        </trans-unit>
        <trans-unit id="2df878556a15001c2ca422f36ccbe6ea26e1a611" translate="yes" xml:space="preserve">
          <source>es2015-duplicate-keys</source>
          <target state="translated">es2015-duplicate-keys</target>
        </trans-unit>
        <trans-unit id="8b5c990dc3e717d67db2b4d3b83c6d204455fb78" translate="yes" xml:space="preserve">
          <source>es2015-for-of</source>
          <target state="translated">es2015-for-of</target>
        </trans-unit>
        <trans-unit id="0886e4c32976fbf969a91153984ce788c27b9967" translate="yes" xml:space="preserve">
          <source>es2015-function-name</source>
          <target state="translated">es2015-function-name</target>
        </trans-unit>
        <trans-unit id="fcd07de845e9b22a8d9ddbfd5a3713de9efe78ce" translate="yes" xml:space="preserve">
          <source>es2015-literals</source>
          <target state="translated">es2015-literals</target>
        </trans-unit>
        <trans-unit id="4a50064a8612cf51c7437d3b3fa85578053c53f4" translate="yes" xml:space="preserve">
          <source>es2015-modules-amd</source>
          <target state="translated">es2015-modules-amd</target>
        </trans-unit>
        <trans-unit id="56b82ff8b7ddbf2b763b0077f22877fee28e5cd5" translate="yes" xml:space="preserve">
          <source>es2015-modules-commonjs</source>
          <target state="translated">es2015-modules-commonjs</target>
        </trans-unit>
        <trans-unit id="26b89cfadfbb6d3819dd7ed16879fef2c6d0e6d8" translate="yes" xml:space="preserve">
          <source>es2015-modules-systemjs</source>
          <target state="translated">es2015-modules-systemjs</target>
        </trans-unit>
        <trans-unit id="5c688b4643dc8cb45f17cc6085a4215f579881ee" translate="yes" xml:space="preserve">
          <source>es2015-modules-umd</source>
          <target state="translated">es2015-modules-umd</target>
        </trans-unit>
        <trans-unit id="7c84d558e65ccf7285e035ea49d6783342f0c9f9" translate="yes" xml:space="preserve">
          <source>es2015-object-super</source>
          <target state="translated">es2015-object-super</target>
        </trans-unit>
        <trans-unit id="e63e25fa2caff00b7813f3d25c4936200bf7e427" translate="yes" xml:space="preserve">
          <source>es2015-parameters</source>
          <target state="translated">es2015-parameters</target>
        </trans-unit>
        <trans-unit id="be84424530936276d1692e040019d1c7e5126be8" translate="yes" xml:space="preserve">
          <source>es2015-shorthand-properties</source>
          <target state="translated">es2015-shorthand-properties</target>
        </trans-unit>
        <trans-unit id="6d78dc61c8a4adc9d45c64491c80ad0d7c976ead" translate="yes" xml:space="preserve">
          <source>es2015-spread</source>
          <target state="translated">es2015-spread</target>
        </trans-unit>
        <trans-unit id="b38e2e2aa2a3abc48ee8d7b4d8650ad397dac898" translate="yes" xml:space="preserve">
          <source>es2015-sticky-regex</source>
          <target state="translated">es2015-sticky-regex</target>
        </trans-unit>
        <trans-unit id="3da2136e7164efe55d2579b74882894edf22ca16" translate="yes" xml:space="preserve">
          <source>es2015-template-literals</source>
          <target state="translated">es2015-template-literals</target>
        </trans-unit>
        <trans-unit id="a618119d4b2a408475be879ad4299e6b4186f8e5" translate="yes" xml:space="preserve">
          <source>es2015-typeof-symbol</source>
          <target state="translated">es2015-typeof-symbol</target>
        </trans-unit>
        <trans-unit id="91a9f969055b691148d5178ef57203bf01ab3e6b" translate="yes" xml:space="preserve">
          <source>es2015-unicode-regex</source>
          <target state="translated">es2015-unicode-regex</target>
        </trans-unit>
        <trans-unit id="139a6dc78bee16dab8bae5ac789d730b614b917b" translate="yes" xml:space="preserve">
          <source>es2016</source>
          <target state="translated">es2016</target>
        </trans-unit>
        <trans-unit id="911015d28bbfae967ffe9225bd0fbdb225773f33" translate="yes" xml:space="preserve">
          <source>es2017</source>
          <target state="translated">es2017</target>
        </trans-unit>
        <trans-unit id="f60f076e11849e27431010dca7e1665144518ac3" translate="yes" xml:space="preserve">
          <source>es3-member-expression-literals</source>
          <target state="translated">es3-member-expression-literals</target>
        </trans-unit>
        <trans-unit id="77a8351c726e07bc072fd9efc2fb378467e61bcf" translate="yes" xml:space="preserve">
          <source>es3-property-literals</source>
          <target state="translated">es3-property-literals</target>
        </trans-unit>
        <trans-unit id="1e36d7d72d760621bc84fb7db110eeafda4fafd1" translate="yes" xml:space="preserve">
          <source>es5-property-mutators</source>
          <target state="translated">es5-property-mutators</target>
        </trans-unit>
        <trans-unit id="822bc13e2d55b402eb4233cb23c9d414a7a03bc1" translate="yes" xml:space="preserve">
          <source>eval</source>
          <target state="translated">eval</target>
        </trans-unit>
        <trans-unit id="506c2bc94b6b36144dfbe59caef1c72f41e0143d" translate="yes" xml:space="preserve">
          <source>existentialTypeParam</source>
          <target state="translated">existentialTypeParam</target>
        </trans-unit>
        <trans-unit id="582a24f961c6cfbb94cfe409575033a564037b55" translate="yes" xml:space="preserve">
          <source>exponentiation-operator</source>
          <target state="translated">exponentiation-operator</target>
        </trans-unit>
        <trans-unit id="df87bbe47417a3c8c0be4f807d33c66c903859d5" translate="yes" xml:space="preserve">
          <source>export-extensions</source>
          <target state="translated">export-extensions</target>
        </trans-unit>
        <trans-unit id="5e8cdc1d5a9f3d1ae894153781736b15b9101230" translate="yes" xml:space="preserve">
          <source>exportAllDeclaration</source>
          <target state="translated">exportAllDeclaration</target>
        </trans-unit>
        <trans-unit id="d2cddec9eccb66a68dc376fc2f761e4d2c57cec6" translate="yes" xml:space="preserve">
          <source>exportDefaultDeclaration</source>
          <target state="translated">exportDefaultDeclaration</target>
        </trans-unit>
        <trans-unit id="a421884b7c78fea2ae754785eafb7ec321844d74" translate="yes" xml:space="preserve">
          <source>exportDefaultSpecifier</source>
          <target state="translated">exportDefaultSpecifier</target>
        </trans-unit>
        <trans-unit id="bcbfdf574c382527f2ad67cd06dbcf873300da80" translate="yes" xml:space="preserve">
          <source>exportNamedDeclaration</source>
          <target state="translated">exportNamedDeclaration</target>
        </trans-unit>
        <trans-unit id="5b3db3c5620706b822d8a0d70a90db443a90fb3f" translate="yes" xml:space="preserve">
          <source>exportNamespaceSpecifier</source>
          <target state="translated">exportNamespaceSpecifier</target>
        </trans-unit>
        <trans-unit id="a1a83bb9fd249b34543abb78891b80e0c5f69086" translate="yes" xml:space="preserve">
          <source>exportSpecifier</source>
          <target state="translated">exportSpecifier</target>
        </trans-unit>
        <trans-unit id="17cb48d0bc0ba0bdafe3ea8a6f1d1894597345f0" translate="yes" xml:space="preserve">
          <source>expressionStatement</source>
          <target state="translated">expressionStatement</target>
        </trans-unit>
        <trans-unit id="72cae668e2b756da38fe179c26e838e05e1053e6" translate="yes" xml:space="preserve">
          <source>external-helpers</source>
          <target state="translated">external-helpers</target>
        </trans-unit>
        <trans-unit id="971c419dd609331343dee105fffd0f4608dc0bf2" translate="yes" xml:space="preserve">
          <source>file</source>
          <target state="translated">file</target>
        </trans-unit>
        <trans-unit id="d8f7e9c783be82328ffc2f348b0f257b671c1107" translate="yes" xml:space="preserve">
          <source>flow</source>
          <target state="translated">flow</target>
        </trans-unit>
        <trans-unit id="8ea1ce94e1646af4d7bbfa9df2c39190452dcd77" translate="yes" xml:space="preserve">
          <source>flow-comments</source>
          <target state="translated">flow-comments</target>
        </trans-unit>
        <trans-unit id="7b1330af389b148c754cb832addd6334b4852e42" translate="yes" xml:space="preserve">
          <source>flow-strip-types</source>
          <target state="translated">flow-strip-types</target>
        </trans-unit>
        <trans-unit id="98c5c3db301c05ceb7ca735ec5da5a7582d00f1e" translate="yes" xml:space="preserve">
          <source>forAwaitStatement</source>
          <target state="translated">forAwaitStatement</target>
        </trans-unit>
        <trans-unit id="38741ccfd7155879ddb52462f095e0fab1cac43e" translate="yes" xml:space="preserve">
          <source>forInStatement</source>
          <target state="translated">forInStatement</target>
        </trans-unit>
        <trans-unit id="bcfe8bffc2250f7bf914b8001fa4d5aa2a59451a" translate="yes" xml:space="preserve">
          <source>forOfStatement</source>
          <target state="translated">forOfStatement</target>
        </trans-unit>
        <trans-unit id="98c803b1a5b150a08aae07a8428a4f0a93b1dafa" translate="yes" xml:space="preserve">
          <source>forStatement</source>
          <target state="translated">forStatement</target>
        </trans-unit>
        <trans-unit id="e80fe57f11f25d23c2b701bd1d83cc4e3e5d3bde" translate="yes" xml:space="preserve">
          <source>from &lt;a href=&quot;https://github.com/getify/You-Dont-Know-JS/blob/master/types%20%26%20grammar/ch5.md#statement-completion-values&quot;&gt;You Don&amp;rsquo;t Know JS&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d8f1fe255e66a5007cf4ec087f57e5588f7538a" translate="yes" xml:space="preserve">
          <source>function-bind</source>
          <target state="translated">function-bind</target>
        </trans-unit>
        <trans-unit id="54cc08aa9e71c593439ec175a33ecf1dc2f9dacd" translate="yes" xml:space="preserve">
          <source>function-sent</source>
          <target state="translated">function-sent</target>
        </trans-unit>
        <trans-unit id="a7f404b2fd0d36364a70b1cbb5349d464ae12dc4" translate="yes" xml:space="preserve">
          <source>functionDeclaration</source>
          <target state="translated">functionDeclaration</target>
        </trans-unit>
        <trans-unit id="5fbfb4dc5d51132c2b0b318fbb251680f627729e" translate="yes" xml:space="preserve">
          <source>functionExpression</source>
          <target state="translated">functionExpression</target>
        </trans-unit>
        <trans-unit id="a90e220571ac6642e2c94aaf8974e6a322b26e85" translate="yes" xml:space="preserve">
          <source>functionTypeAnnotation</source>
          <target state="translated">functionTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="cd61d9aa2ff281abff59da18bc7ace9fda428535" translate="yes" xml:space="preserve">
          <source>functionTypeParam</source>
          <target state="translated">functionTypeParam</target>
        </trans-unit>
        <trans-unit id="c6f5e4cf08e4a200a344ac68363ae64972eb1740" translate="yes" xml:space="preserve">
          <source>generators</source>
          <target state="translated">generators</target>
        </trans-unit>
        <trans-unit id="7f7563c5e55adc8b505394c986acd5d8e914d39d" translate="yes" xml:space="preserve">
          <source>genericTypeAnnotation</source>
          <target state="translated">genericTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="9027cc5a2c1321de60a2d71ccde6229d1152d6d3" translate="yes" xml:space="preserve">
          <source>global</source>
          <target state="translated">global</target>
        </trans-unit>
        <trans-unit id="fe496ef16b61f1ca59c6ad116819de7c38fb43c0" translate="yes" xml:space="preserve">
          <source>however the following &lt;strong&gt;will not&lt;/strong&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fae9fd39301eb7e657d4dad32a828cda5d7399e5" translate="yes" xml:space="preserve">
          <source>identifier</source>
          <target state="translated">identifier</target>
        </trans-unit>
        <trans-unit id="439835363cb66a8f6e222388b6c55d3d3c3eaffa" translate="yes" xml:space="preserve">
          <source>ifStatement</source>
          <target state="translated">ifStatement</target>
        </trans-unit>
        <trans-unit id="62fdfbd55d19b2a4671102ad7bca17d875f8207a" translate="yes" xml:space="preserve">
          <source>import</source>
          <target state="translated">import</target>
        </trans-unit>
        <trans-unit id="b3cae324797488e0dc2b6e99f4258ba5e7ff9b5c" translate="yes" xml:space="preserve">
          <source>importDeclaration</source>
          <target state="translated">importDeclaration</target>
        </trans-unit>
        <trans-unit id="e8e3064e0072c55500619b4eb594d569ee0be127" translate="yes" xml:space="preserve">
          <source>importDefaultSpecifier</source>
          <target state="translated">importDefaultSpecifier</target>
        </trans-unit>
        <trans-unit id="fc36502b077ce8707a2f99a9a431aabb89615e1a" translate="yes" xml:space="preserve">
          <source>importNamespaceSpecifier</source>
          <target state="translated">importNamespaceSpecifier</target>
        </trans-unit>
        <trans-unit id="c815f52e57af180185ff669be0423f6b7fc4771d" translate="yes" xml:space="preserve">
          <source>importSpecifier</source>
          <target state="translated">importSpecifier</target>
        </trans-unit>
        <trans-unit id="fe4b0042b5d2afd4554a086f1fe219810e622493" translate="yes" xml:space="preserve">
          <source>inline-consecutive-adds</source>
          <target state="translated">inline-consecutive-adds</target>
        </trans-unit>
        <trans-unit id="9083be87375a321f340d1c307ff86d5773045761" translate="yes" xml:space="preserve">
          <source>inline-environment-variables</source>
          <target state="translated">inline-environment-variables</target>
        </trans-unit>
        <trans-unit id="9932602590a211e4212d37bce91e6ff51c4ad16b" translate="yes" xml:space="preserve">
          <source>interfaceDeclaration</source>
          <target state="translated">interfaceDeclaration</target>
        </trans-unit>
        <trans-unit id="6c97859da13c5cc33fb47a6f61a07fdbef216aca" translate="yes" xml:space="preserve">
          <source>interfaceExtends</source>
          <target state="translated">interfaceExtends</target>
        </trans-unit>
        <trans-unit id="0b90284fac4a699b12c65be3fdb3b5bf117988eb" translate="yes" xml:space="preserve">
          <source>intersectionTypeAnnotation</source>
          <target state="translated">intersectionTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="f321bb51407fecc5d2801890431ad1e0f9922dbf" translate="yes" xml:space="preserve">
          <source>into the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92faafca1fe03556e2b26b6a5896f4a8d255ee10" translate="yes" xml:space="preserve">
          <source>it will still transpile both to one browser global:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36a8a5bd6d3266169336732f1eded03b65a5a496" translate="yes" xml:space="preserve">
          <source>it will transpile into two references to the same browser global:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a954927e82fa73ae837841ab25ff200d9a8fe17" translate="yes" xml:space="preserve">
          <source>it will transpile to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8bdac675fd45ab04ccb8d41878891f821ad700c" translate="yes" xml:space="preserve">
          <source>jSXAttribute</source>
          <target state="translated">jSXAttribute</target>
        </trans-unit>
        <trans-unit id="4eafa456cf080266332833bea1b214ad76218d27" translate="yes" xml:space="preserve">
          <source>jSXClosingElement</source>
          <target state="translated">jSXClosingElement</target>
        </trans-unit>
        <trans-unit id="35f4204218ce1009aa31e74ac8f2e9a720090e5a" translate="yes" xml:space="preserve">
          <source>jSXElement</source>
          <target state="translated">jSXElement</target>
        </trans-unit>
        <trans-unit id="6d44ea46c873aa395309a2945d4ea4d9743229c3" translate="yes" xml:space="preserve">
          <source>jSXEmptyExpression</source>
          <target state="translated">jSXEmptyExpression</target>
        </trans-unit>
        <trans-unit id="ad972917e2825938ce85513876c5ecbdb508acaf" translate="yes" xml:space="preserve">
          <source>jSXExpressionContainer</source>
          <target state="translated">jSXExpressionContainer</target>
        </trans-unit>
        <trans-unit id="cfeb19f88c341a4857f4deea816778bae8cf3aa0" translate="yes" xml:space="preserve">
          <source>jSXIdentifier</source>
          <target state="translated">jSXIdentifier</target>
        </trans-unit>
        <trans-unit id="abd1c51417fbda9461a194566242c6e0485c952b" translate="yes" xml:space="preserve">
          <source>jSXMemberExpression</source>
          <target state="translated">jSXMemberExpression</target>
        </trans-unit>
        <trans-unit id="0621d98f75bdc9eea74520f9b6ff17942d59a714" translate="yes" xml:space="preserve">
          <source>jSXNamespacedName</source>
          <target state="translated">jSXNamespacedName</target>
        </trans-unit>
        <trans-unit id="1438e7bdf2b744997d6942f7a446a14ae8c3564d" translate="yes" xml:space="preserve">
          <source>jSXOpeningElement</source>
          <target state="translated">jSXOpeningElement</target>
        </trans-unit>
        <trans-unit id="cc970abc16b0d9ff0326ccef27350898490dc0ea" translate="yes" xml:space="preserve">
          <source>jSXSpreadAttribute</source>
          <target state="translated">jSXSpreadAttribute</target>
        </trans-unit>
        <trans-unit id="de86df4acab07a79482bc3b0ff872d5ea34fe02c" translate="yes" xml:space="preserve">
          <source>jSXSpreadChild</source>
          <target state="translated">jSXSpreadChild</target>
        </trans-unit>
        <trans-unit id="e190c211d7c4e1066a3deb91ccf34291dcb88ff9" translate="yes" xml:space="preserve">
          <source>jSXText</source>
          <target state="translated">jSXText</target>
        </trans-unit>
        <trans-unit id="85db84918d245d59d83d49ac118b5cc958c6f7b8" translate="yes" xml:space="preserve">
          <source>jscript</source>
          <target state="translated">jscript</target>
        </trans-unit>
        <trans-unit id="1ceda45a552fbddb3a16b9e6bda6847bb7c076dc" translate="yes" xml:space="preserve">
          <source>jsx</source>
          <target state="translated">jsx</target>
        </trans-unit>
        <trans-unit id="f3f9ec226cf3b5bdd6baf5b71ea156e7c0ebcdcd" translate="yes" xml:space="preserve">
          <source>labeledStatement</source>
          <target state="translated">labeledStatement</target>
        </trans-unit>
        <trans-unit id="f255391fb5988b15b0a434a83f380954a3c2a7c8" translate="yes" xml:space="preserve">
          <source>logicalExpression</source>
          <target state="translated">logicalExpression</target>
        </trans-unit>
        <trans-unit id="011a49ff944f130af22cc314b7f3af17b242cc2c" translate="yes" xml:space="preserve">
          <source>member-expression-literals</source>
          <target state="translated">member-expression-literals</target>
        </trans-unit>
        <trans-unit id="fb793e7799db448c719c9b2a5feeaa4ad5a6b53a" translate="yes" xml:space="preserve">
          <source>memberExpression</source>
          <target state="translated">memberExpression</target>
        </trans-unit>
        <trans-unit id="45995fb8ee4728557e1004152ce29fb0b862826a" translate="yes" xml:space="preserve">
          <source>merge-sibling-variables</source>
          <target state="translated">merge-sibling-variables</target>
        </trans-unit>
        <trans-unit id="72d07cf4458f8df2c5df8063ef7af7c896d7078e" translate="yes" xml:space="preserve">
          <source>metaProperty</source>
          <target state="translated">metaProperty</target>
        </trans-unit>
        <trans-unit id="1827aa4f492637b3c008f0ee1cf27aa1c4143d9a" translate="yes" xml:space="preserve">
          <source>minify-booleans</source>
          <target state="translated">minify-booleans</target>
        </trans-unit>
        <trans-unit id="f28b2ce675607434398d5ff00960e9f079139515" translate="yes" xml:space="preserve">
          <source>minify-constant-folding</source>
          <target state="translated">minify-constant-folding</target>
        </trans-unit>
        <trans-unit id="b01acbfa053ee0af658ebffbf90f3f697bd3021b" translate="yes" xml:space="preserve">
          <source>minify-dead-code-elimination</source>
          <target state="translated">minify-dead-code-elimination</target>
        </trans-unit>
        <trans-unit id="ee8ad586fc2994d52e19f91af67fabb23834442d" translate="yes" xml:space="preserve">
          <source>minify-flip-comparisons</source>
          <target state="translated">minify-flip-comparisons</target>
        </trans-unit>
        <trans-unit id="b97fde7b2d2fcc3634c64f7231febbaab8382b90" translate="yes" xml:space="preserve">
          <source>minify-guarded-expressions</source>
          <target state="translated">minify-guarded-expressions</target>
        </trans-unit>
        <trans-unit id="ffbbce0f4f0acf1369599efeb1b4cd66761608da" translate="yes" xml:space="preserve">
          <source>minify-infinity</source>
          <target state="translated">minify-infinity</target>
        </trans-unit>
        <trans-unit id="f30c32fc6819131f788ca6bcaa3a7aeceeb8a070" translate="yes" xml:space="preserve">
          <source>minify-mangle-names</source>
          <target state="translated">minify-mangle-names</target>
        </trans-unit>
        <trans-unit id="7dfcb595de62117f2fddedc9edaa5e736035ee87" translate="yes" xml:space="preserve">
          <source>minify-numeric-literals</source>
          <target state="translated">minify-numeric-literals</target>
        </trans-unit>
        <trans-unit id="5c84ca859f5bdf2bcf02a727ac34ba1b1bdc0d87" translate="yes" xml:space="preserve">
          <source>minify-replace</source>
          <target state="translated">minify-replace</target>
        </trans-unit>
        <trans-unit id="b91fb7a2f0f7a7a4af1879e28ba1a5c66ea51767" translate="yes" xml:space="preserve">
          <source>minify-simplify</source>
          <target state="translated">minify-simplify</target>
        </trans-unit>
        <trans-unit id="e270cda95f281296b13273daaf885818cbca510b" translate="yes" xml:space="preserve">
          <source>minify-type-constructors</source>
          <target state="translated">minify-type-constructors</target>
        </trans-unit>
        <trans-unit id="c4065e13ed6d5dfde521a2e9201c319ec052886f" translate="yes" xml:space="preserve">
          <source>mixedTypeAnnotation</source>
          <target state="translated">mixedTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="6ae999552a0d2dca14d62e2bc8b764d377b1dd6c" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">name</target>
        </trans-unit>
        <trans-unit id="c16d9b29506b5f44c2cc46b29deb05837ec0d5b2" translate="yes" xml:space="preserve">
          <source>newExpression</source>
          <target state="translated">newExpression</target>
        </trans-unit>
        <trans-unit id="05bb54181c0423c2e0d78872a59b512fc6fa3ebc" translate="yes" xml:space="preserve">
          <source>node-env-inline</source>
          <target state="translated">node-env-inline</target>
        </trans-unit>
        <trans-unit id="bd9b6fa6ff953cbee48ce28a3f6c91859e53be7d" translate="yes" xml:space="preserve">
          <source>noop</source>
          <target state="translated">noop</target>
        </trans-unit>
        <trans-unit id="b72b00b6f91b19e446dbeb54a1d31e183dd7415b" translate="yes" xml:space="preserve">
          <source>nullLiteral</source>
          <target state="translated">nullLiteral</target>
        </trans-unit>
        <trans-unit id="4f57a27f2b843a88d1d6a9295036234e50bb0721" translate="yes" xml:space="preserve">
          <source>nullLiteralTypeAnnotation</source>
          <target state="translated">nullLiteralTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="fe54af78ef390287a0feafcdb5e61522b3d603d3" translate="yes" xml:space="preserve">
          <source>nullableTypeAnnotation</source>
          <target state="translated">nullableTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="bd90e86ae4e41bd0b1970451a25f6c138112a8d3" translate="yes" xml:space="preserve">
          <source>numberTypeAnnotation</source>
          <target state="translated">numberTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="c6d2bde2b7289710a99cc7c858b6a158e6e7f794" translate="yes" xml:space="preserve">
          <source>numericLiteral</source>
          <target state="translated">numericLiteral</target>
        </trans-unit>
        <trans-unit id="f6655bd4a24326215068226b6b8156c8dd5989d3" translate="yes" xml:space="preserve">
          <source>numericLiteralTypeAnnotation</source>
          <target state="translated">numericLiteralTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="8e4f6f89f995393abe85a1ca7bdb59237dec9949" translate="yes" xml:space="preserve">
          <source>object-assign</source>
          <target state="translated">object-assign</target>
        </trans-unit>
        <trans-unit id="845bbf2195b8f2981678d17a747d41e8776de5f1" translate="yes" xml:space="preserve">
          <source>object-rest-spread</source>
          <target state="translated">object-rest-spread</target>
        </trans-unit>
        <trans-unit id="eba7fb2d7826dcc06854f88a07ebe6ce1d2735c0" translate="yes" xml:space="preserve">
          <source>object-set-prototype-of-to-assign</source>
          <target state="translated">object-set-prototype-of-to-assign</target>
        </trans-unit>
        <trans-unit id="169002a56678b701c013a358d724886bc7e7ad4e" translate="yes" xml:space="preserve">
          <source>objectExpression</source>
          <target state="translated">objectExpression</target>
        </trans-unit>
        <trans-unit id="6fa71dd27b6536340bcf202ec8e56898cdd1cb89" translate="yes" xml:space="preserve">
          <source>objectMethod</source>
          <target state="translated">objectMethod</target>
        </trans-unit>
        <trans-unit id="0f82a9429acb32fa8e253c09dd155ff735140475" translate="yes" xml:space="preserve">
          <source>objectPattern</source>
          <target state="translated">objectPattern</target>
        </trans-unit>
        <trans-unit id="652523aaa67abb906c971400a1eb19e8d387a279" translate="yes" xml:space="preserve">
          <source>objectProperty</source>
          <target state="translated">objectProperty</target>
        </trans-unit>
        <trans-unit id="8e03d1000917c0dfc5c8272cb0032e4a7448553f" translate="yes" xml:space="preserve">
          <source>objectTypeAnnotation</source>
          <target state="translated">objectTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="59fdf10d2e91ad761499f517fddcb9071e4861e0" translate="yes" xml:space="preserve">
          <source>objectTypeCallProperty</source>
          <target state="translated">objectTypeCallProperty</target>
        </trans-unit>
        <trans-unit id="71aeea290517f5df2869831f5a3ff3dca944dbe6" translate="yes" xml:space="preserve">
          <source>objectTypeIndexer</source>
          <target state="translated">objectTypeIndexer</target>
        </trans-unit>
        <trans-unit id="bc7337101dbd6c74de136cfde2c597dfbd080a7c" translate="yes" xml:space="preserve">
          <source>objectTypeProperty</source>
          <target state="translated">objectTypeProperty</target>
        </trans-unit>
        <trans-unit id="99c190342bdbc157950f158bba2306587a774632" translate="yes" xml:space="preserve">
          <source>objectTypeSpreadProperty</source>
          <target state="translated">objectTypeSpreadProperty</target>
        </trans-unit>
        <trans-unit id="2921cab52a7452ed36f2ec0b7571c4e68200e0a1" translate="yes" xml:space="preserve">
          <source>opaqueType</source>
          <target state="translated">opaqueType</target>
        </trans-unit>
        <trans-unit id="513f8de9259fe7658fe14d1352c54ccf070e911f" translate="yes" xml:space="preserve">
          <source>options</source>
          <target state="translated">options</target>
        </trans-unit>
        <trans-unit id="9dac371dbaf39902676f9c063f2d5fd6b79f54fa" translate="yes" xml:space="preserve">
          <source>parenthesizedExpression</source>
          <target state="translated">parenthesizedExpression</target>
        </trans-unit>
        <trans-unit id="7aa4803a408d9148285db183db9a255c52b44106" translate="yes" xml:space="preserve">
          <source>preserveComments</source>
          <target state="translated">preserveComments</target>
        </trans-unit>
        <trans-unit id="33a7e081fff06ba342ece7695fbf072473205fa5" translate="yes" xml:space="preserve">
          <source>preset-flow</source>
          <target state="translated">preset-flow</target>
        </trans-unit>
        <trans-unit id="ad76094d516ddb3f9f355f832801c18f691bdd90" translate="yes" xml:space="preserve">
          <source>preset-latest is deprecated</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e967f1d2f06082facad846d1e4676be155fb0bb8" translate="yes" xml:space="preserve">
          <source>preset-stage-1</source>
          <target state="translated">preset-stage-1</target>
        </trans-unit>
        <trans-unit id="83d75d6d8a4ac9bcef68af2748f91894695ed139" translate="yes" xml:space="preserve">
          <source>preset-stage-2</source>
          <target state="translated">preset-stage-2</target>
        </trans-unit>
        <trans-unit id="5aadacfeee79d5d0d579df8d47d531a4e3226bc6" translate="yes" xml:space="preserve">
          <source>preset-stage-3</source>
          <target state="translated">preset-stage-3</target>
        </trans-unit>
        <trans-unit id="81d9aeea0e1a408d65b6660a176c5de83dc98e7b" translate="yes" xml:space="preserve">
          <source>program</source>
          <target state="translated">program</target>
        </trans-unit>
        <trans-unit id="76c8e36fda875781ab3b36fda9b94ab96a338238" translate="yes" xml:space="preserve">
          <source>property-literals</source>
          <target state="translated">property-literals</target>
        </trans-unit>
        <trans-unit id="1d5fda58578fd7fc46a0f11d2d71eb23de3a24b1" translate="yes" xml:space="preserve">
          <source>proto-to-assign</source>
          <target state="translated">proto-to-assign</target>
        </trans-unit>
        <trans-unit id="7ed81edcc8cc4c98198be2082f1ab8f9188c364d" translate="yes" xml:space="preserve">
          <source>qualifiedTypeIdentifier</source>
          <target state="translated">qualifiedTypeIdentifier</target>
        </trans-unit>
        <trans-unit id="6b810c90aa9a99858230c3d5ed479096a190fa4b" translate="yes" xml:space="preserve">
          <source>react</source>
          <target state="translated">react</target>
        </trans-unit>
        <trans-unit id="9b6b5a7b7ee7497a0cebea211d7ac99c137f220c" translate="yes" xml:space="preserve">
          <source>react-constant-elements</source>
          <target state="translated">react-constant-elements</target>
        </trans-unit>
        <trans-unit id="19daf8cc553c9709b0b096d19ff8a6ec4d4c36e4" translate="yes" xml:space="preserve">
          <source>react-display-name</source>
          <target state="translated">react-display-name</target>
        </trans-unit>
        <trans-unit id="193e7d3ceef708fcf1f204bc3b24a528322733c0" translate="yes" xml:space="preserve">
          <source>react-inline-elements</source>
          <target state="translated">react-inline-elements</target>
        </trans-unit>
        <trans-unit id="92e008088b7beb002325e5b1d7f6ed8801edc72e" translate="yes" xml:space="preserve">
          <source>react-jsx</source>
          <target state="translated">react-jsx</target>
        </trans-unit>
        <trans-unit id="0e4f979ace31f9096e02e11dbdbc07466c5c56a2" translate="yes" xml:space="preserve">
          <source>react-jsx-compat</source>
          <target state="translated">react-jsx-compat</target>
        </trans-unit>
        <trans-unit id="88bcd08958cbe7b6e35f2b0477e59669e81bbdd3" translate="yes" xml:space="preserve">
          <source>react-jsx-self</source>
          <target state="translated">react-jsx-self</target>
        </trans-unit>
        <trans-unit id="f9dadafe2620105ecf1f4f70d54308b283e634d1" translate="yes" xml:space="preserve">
          <source>react-jsx-source</source>
          <target state="translated">react-jsx-source</target>
        </trans-unit>
        <trans-unit id="fbde76b9e47de801d78b3e9d254b3ac042c5de49" translate="yes" xml:space="preserve">
          <source>regExpLiteral</source>
          <target state="translated">regExpLiteral</target>
        </trans-unit>
        <trans-unit id="034314bb2720d7fb2640e98635c126c83339c0f1" translate="yes" xml:space="preserve">
          <source>regenerator</source>
          <target state="translated">regenerator</target>
        </trans-unit>
        <trans-unit id="ea70af6969d20e5fddabf4f591f1e39e94b4865a" translate="yes" xml:space="preserve">
          <source>regenerator runtime</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81fe0c00b11201d8f501db71462cee4d10244342" translate="yes" xml:space="preserve">
          <source>regexp-constructors</source>
          <target state="translated">regexp-constructors</target>
        </trans-unit>
        <trans-unit id="e98d0bb33344e9306c4e1c7055f79f3c0d69e29c" translate="yes" xml:space="preserve">
          <source>remove-console</source>
          <target state="translated">remove-console</target>
        </trans-unit>
        <trans-unit id="e94423cc7b2646bfab1f2bc596e8edcc8d419c6d" translate="yes" xml:space="preserve">
          <source>remove-debugger</source>
          <target state="translated">remove-debugger</target>
        </trans-unit>
        <trans-unit id="0a48183746f530339e47445033dfda582d4216cf" translate="yes" xml:space="preserve">
          <source>restElement</source>
          <target state="translated">restElement</target>
        </trans-unit>
        <trans-unit id="a84272e011392ae4085938c38675f43e502e14c2" translate="yes" xml:space="preserve">
          <source>restProperty</source>
          <target state="translated">restProperty</target>
        </trans-unit>
        <trans-unit id="90b87cebe3d64ede84c4d2b8d3b4686662d5d3a4" translate="yes" xml:space="preserve">
          <source>returnStatement</source>
          <target state="translated">returnStatement</target>
        </trans-unit>
        <trans-unit id="f2e18ffc17e2595362b5468aac34221e09934bf8" translate="yes" xml:space="preserve">
          <source>runtime</source>
          <target state="translated">runtime</target>
        </trans-unit>
        <trans-unit id="307cb911178c1d9aa9c5df3a59349bed6f418b90" translate="yes" xml:space="preserve">
          <source>sequenceExpression</source>
          <target state="translated">sequenceExpression</target>
        </trans-unit>
        <trans-unit id="4836df3db50976b2fde7da0e6954c0787d522ef6" translate="yes" xml:space="preserve">
          <source>shorthand</source>
          <target state="translated">shorthand</target>
        </trans-unit>
        <trans-unit id="2aa27f7bd9bb38a552847571aadfb84a03414607" translate="yes" xml:space="preserve">
          <source>simplify-comparison-operators</source>
          <target state="translated">simplify-comparison-operators</target>
        </trans-unit>
        <trans-unit id="6822fadd3cdcf92a989c81552847bc132c6493fc" translate="yes" xml:space="preserve">
          <source>skip passing &lt;code&gt;globals&lt;/code&gt; overrides to the &lt;code&gt;toIdentifier&lt;/code&gt; function. Instead, they are used exactly as written, so you will get errors if you do not use valid identifiers or valid uncomputed (dot) member expressions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b522ac62b806405a56839a8f1c0c502947689181" translate="yes" xml:space="preserve">
          <source>spreadElement</source>
          <target state="translated">spreadElement</target>
        </trans-unit>
        <trans-unit id="0692ad40d82d00a03b3625c5c9ce0dbcc65ed590" translate="yes" xml:space="preserve">
          <source>spreadProperty</source>
          <target state="translated">spreadProperty</target>
        </trans-unit>
        <trans-unit id="c49709a5579c312f42b0bfd73397586b6d05ecd1" translate="yes" xml:space="preserve">
          <source>strict-mode</source>
          <target state="translated">strict-mode</target>
        </trans-unit>
        <trans-unit id="b1ceeac5b32965037b3182a3e8dd8102de8b8668" translate="yes" xml:space="preserve">
          <source>stringLiteral</source>
          <target state="translated">stringLiteral</target>
        </trans-unit>
        <trans-unit id="ba787e1537efdbdb40223833eacb70ec913ce0ca" translate="yes" xml:space="preserve">
          <source>stringLiteralTypeAnnotation</source>
          <target state="translated">stringLiteralTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="c7091a63778a10b1a695531083614d8cd974dfa8" translate="yes" xml:space="preserve">
          <source>stringTypeAnnotation</source>
          <target state="translated">stringTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="8451ba8a14d79753d34cb33b51ba46b4b025eb81" translate="yes" xml:space="preserve">
          <source>super</source>
          <target state="translated">super</target>
        </trans-unit>
        <trans-unit id="135389000b1b817826fccbf8fe56b1b1eb7c63ba" translate="yes" xml:space="preserve">
          <source>switchCase</source>
          <target state="translated">switchCase</target>
        </trans-unit>
        <trans-unit id="d48caf4d6fe1b8008d661aab99b8f25000239fa0" translate="yes" xml:space="preserve">
          <source>switchStatement</source>
          <target state="translated">switchStatement</target>
        </trans-unit>
        <trans-unit id="2f0f7d3d2328abdf122137eeb19031c7b9ea9985" translate="yes" xml:space="preserve">
          <source>syntax-dynamic-import</source>
          <target state="translated">syntax-dynamic-import</target>
        </trans-unit>
        <trans-unit id="06599a6b8c1ea936575e1e631af5a680e8c25a3f" translate="yes" xml:space="preserve">
          <source>syntax-jsx</source>
          <target state="translated">syntax-jsx</target>
        </trans-unit>
        <trans-unit id="4e55557d631cfcfa48bba0cfff6b74f276489958" translate="yes" xml:space="preserve">
          <source>syntax-trailing-function-commas</source>
          <target state="translated">syntax-trailing-function-commas</target>
        </trans-unit>
        <trans-unit id="efdb915a1e5ab721f5c7f455263685482224e0b4" translate="yes" xml:space="preserve">
          <source>taggedTemplateExpression</source>
          <target state="translated">taggedTemplateExpression</target>
        </trans-unit>
        <trans-unit id="eb349075d871bbe10f6ef0a0fb0f79556472259d" translate="yes" xml:space="preserve">
          <source>templateElement</source>
          <target state="translated">templateElement</target>
        </trans-unit>
        <trans-unit id="ddf4d2567a2779914f8d96c2aa4a0679a3267b96" translate="yes" xml:space="preserve">
          <source>templateLiteral</source>
          <target state="translated">templateLiteral</target>
        </trans-unit>
        <trans-unit id="24ccccc48ad3ba4806ef314024c61cf41813bd7b" translate="yes" xml:space="preserve">
          <source>the &lt;code&gt;runtime&lt;/code&gt; transformer however turns this into:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c2a4a63cd2f4212d04ce99409e04b6547f575dc" translate="yes" xml:space="preserve">
          <source>the following is generated:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c440806efa4097d4b23787e59a2396e46d477dd" translate="yes" xml:space="preserve">
          <source>then it&amp;rsquo;ll transpile to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367057961bb681456a2050d34595dd55952db0fc" translate="yes" xml:space="preserve">
          <source>this will &lt;em&gt;not&lt;/em&gt; transpile to &lt;code&gt;factory(global.fizz.buzz)&lt;/code&gt;. Instead, it will transpile to &lt;code&gt;factory(global.fizzBuzz)&lt;/code&gt; based on the logic in &lt;code&gt;toIdentifier&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda1c479303fe23324601a27a924d7b7196e1095" translate="yes" xml:space="preserve">
          <source>thisExpression</source>
          <target state="translated">thisExpression</target>
        </trans-unit>
        <trans-unit id="75c96e4a3721d11f625b90cd4e231d92a2b8411b" translate="yes" xml:space="preserve">
          <source>thisTypeAnnotation</source>
          <target state="translated">thisTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="2ae7b9fa9083ff58b2758d7c03a36b841aa258c1" translate="yes" xml:space="preserve">
          <source>throwStatement</source>
          <target state="translated">throwStatement</target>
        </trans-unit>
        <trans-unit id="c7c8f637e458041da64e787db193d78389032462" translate="yes" xml:space="preserve">
          <source>trailing-commas, async, exponentiation will be removed in the next major since they are stage 4 already</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df77a91522a9661b07f71f42e69e3b44fc67a478" translate="yes" xml:space="preserve">
          <source>transform-async-generator-functions</source>
          <target state="translated">transform-async-generator-functions</target>
        </trans-unit>
        <trans-unit id="f732b3f8e316e3cf5cf113d9028455ffca423327" translate="yes" xml:space="preserve">
          <source>transform-async-to-generator</source>
          <target state="translated">transform-async-to-generator</target>
        </trans-unit>
        <trans-unit id="d68111f9bf81277d395ca80173a12cd4e2ec936a" translate="yes" xml:space="preserve">
          <source>transform-class-properties</source>
          <target state="translated">transform-class-properties</target>
        </trans-unit>
        <trans-unit id="98bdfd49c150c389979f424ecaed50e58cd45b9b" translate="yes" xml:space="preserve">
          <source>transform-do-expressions</source>
          <target state="translated">transform-do-expressions</target>
        </trans-unit>
        <trans-unit id="84fff2813fd7906e266c0b31bdcd3f389e82c37d" translate="yes" xml:space="preserve">
          <source>transform-es2015-arrow-functions</source>
          <target state="translated">transform-es2015-arrow-functions</target>
        </trans-unit>
        <trans-unit id="95682d3efb4b8e02b38dff870720b0fd0a59f7e9" translate="yes" xml:space="preserve">
          <source>transform-es2015-block-scoped-functions</source>
          <target state="translated">transform-es2015-block-scoped-functions</target>
        </trans-unit>
        <trans-unit id="333d4d05820150ff3833f1f9b1f2a8bbc5f4bdbd" translate="yes" xml:space="preserve">
          <source>transform-es2015-block-scoping</source>
          <target state="translated">transform-es2015-block-scoping</target>
        </trans-unit>
        <trans-unit id="9e4e9181ca93b762a44d86ae69b939a58910d0ea" translate="yes" xml:space="preserve">
          <source>transform-es2015-classes</source>
          <target state="translated">transform-es2015-classes</target>
        </trans-unit>
        <trans-unit id="6754987584d24f54e2f93e9338ffce6e9849eeba" translate="yes" xml:space="preserve">
          <source>transform-es2015-computed-properties</source>
          <target state="translated">transform-es2015-computed-properties</target>
        </trans-unit>
        <trans-unit id="a9159e1c970ecdbafe5128a39729e0bf453a2dee" translate="yes" xml:space="preserve">
          <source>transform-es2015-destructuring</source>
          <target state="translated">transform-es2015-destructuring</target>
        </trans-unit>
        <trans-unit id="2d3d0127ff42bb6a2a050778d23e23c110664ecc" translate="yes" xml:space="preserve">
          <source>transform-es2015-duplicate-keys</source>
          <target state="translated">transform-es2015-duplicate-keys</target>
        </trans-unit>
        <trans-unit id="2265130129e9789fcc2361ac0fed784925ceafeb" translate="yes" xml:space="preserve">
          <source>transform-es2015-for-of</source>
          <target state="translated">transform-es2015-for-of</target>
        </trans-unit>
        <trans-unit id="fbc074315042348a777d6346bb5149d105d8141b" translate="yes" xml:space="preserve">
          <source>transform-es2015-function-name</source>
          <target state="translated">transform-es2015-function-name</target>
        </trans-unit>
        <trans-unit id="fb03dc0cd3cb6e5c48026bd24a0d5147cdd70b92" translate="yes" xml:space="preserve">
          <source>transform-es2015-literals</source>
          <target state="translated">transform-es2015-literals</target>
        </trans-unit>
        <trans-unit id="cca74175692316bd664689713e82208aeb72f6fd" translate="yes" xml:space="preserve">
          <source>transform-es2015-modules-commonjs</source>
          <target state="translated">transform-es2015-modules-commonjs</target>
        </trans-unit>
        <trans-unit id="3cfc9a4906f2f53ea270760f1f984da47dd886cc" translate="yes" xml:space="preserve">
          <source>transform-es2015-object-super</source>
          <target state="translated">transform-es2015-object-super</target>
        </trans-unit>
        <trans-unit id="d80a51371b87c54006cab15000ae824ce03684bf" translate="yes" xml:space="preserve">
          <source>transform-es2015-parameters</source>
          <target state="translated">transform-es2015-parameters</target>
        </trans-unit>
        <trans-unit id="0b373714b53ac2d5befcccd345db21e6f4394df8" translate="yes" xml:space="preserve">
          <source>transform-es2015-shorthand-properties</source>
          <target state="translated">transform-es2015-shorthand-properties</target>
        </trans-unit>
        <trans-unit id="1831793796bcf1662623203590513fc7a2ceb012" translate="yes" xml:space="preserve">
          <source>transform-es2015-spread</source>
          <target state="translated">transform-es2015-spread</target>
        </trans-unit>
        <trans-unit id="cf9f5dd7451fd9bdba9465ff090ff21ce13166a2" translate="yes" xml:space="preserve">
          <source>transform-es2015-sticky-regex</source>
          <target state="translated">transform-es2015-sticky-regex</target>
        </trans-unit>
        <trans-unit id="4c08d4cdd1062219932169ec9bd9d047ad50f502" translate="yes" xml:space="preserve">
          <source>transform-es2015-template-literals</source>
          <target state="translated">transform-es2015-template-literals</target>
        </trans-unit>
        <trans-unit id="60581ab5ea547b3137eb59287697afc2e78b1bbd" translate="yes" xml:space="preserve">
          <source>transform-es2015-typeof-symbol</source>
          <target state="translated">transform-es2015-typeof-symbol</target>
        </trans-unit>
        <trans-unit id="91b4ae908638143f863d4f6cbff94b885d2a0458" translate="yes" xml:space="preserve">
          <source>transform-es2015-unicode-regex</source>
          <target state="translated">transform-es2015-unicode-regex</target>
        </trans-unit>
        <trans-unit id="fe811b2c7fade01c44d1b9b65d9dd6e87662fecd" translate="yes" xml:space="preserve">
          <source>transform-exponentiation-operator</source>
          <target state="translated">transform-exponentiation-operator</target>
        </trans-unit>
        <trans-unit id="aa8db23d263203f592f6fccbc21c424f22892b28" translate="yes" xml:space="preserve">
          <source>transform-export-extensions</source>
          <target state="translated">transform-export-extensions</target>
        </trans-unit>
        <trans-unit id="929688e40ba7ff96a7eb2d5265d251524b060175" translate="yes" xml:space="preserve">
          <source>transform-flow-strip-types</source>
          <target state="translated">transform-flow-strip-types</target>
        </trans-unit>
        <trans-unit id="b65f4fadafa5501bcf8e489b5d37a3e5e500b22d" translate="yes" xml:space="preserve">
          <source>transform-function-bind</source>
          <target state="translated">transform-function-bind</target>
        </trans-unit>
        <trans-unit id="8335de01eb02e4b0db129cb84241a8da0bc7182f" translate="yes" xml:space="preserve">
          <source>transform-object-rest-spread</source>
          <target state="translated">transform-object-rest-spread</target>
        </trans-unit>
        <trans-unit id="24f479b3fbd743946cf7e0dfc66ec412c151daf9" translate="yes" xml:space="preserve">
          <source>transform-react-display-name</source>
          <target state="translated">transform-react-display-name</target>
        </trans-unit>
        <trans-unit id="e1ab0a14cf4238bb4b6e8541ad6c43a985672221" translate="yes" xml:space="preserve">
          <source>transform-react-jsx</source>
          <target state="translated">transform-react-jsx</target>
        </trans-unit>
        <trans-unit id="df56e67d05c24ef4c07d5508085626e03051cc52" translate="yes" xml:space="preserve">
          <source>transform-regenerator</source>
          <target state="translated">transform-regenerator</target>
        </trans-unit>
        <trans-unit id="5ffe533b830f08a0326348a9160afafc8ada44db" translate="yes" xml:space="preserve">
          <source>true</source>
          <target state="translated">true</target>
        </trans-unit>
        <trans-unit id="5f30e701a3ce849ac14025cf5531f9360df65093" translate="yes" xml:space="preserve">
          <source>tryStatement</source>
          <target state="translated">tryStatement</target>
        </trans-unit>
        <trans-unit id="9db806b9f003460af015e6a9caa3fa7b6eb7f34f" translate="yes" xml:space="preserve">
          <source>tupleTypeAnnotation</source>
          <target state="translated">tupleTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="ba2dbe8c0038dd3215c2bcfde73eb585e9e6305b" translate="yes" xml:space="preserve">
          <source>typeAlias</source>
          <target state="translated">typeAlias</target>
        </trans-unit>
        <trans-unit id="49c0be80975f581bb0d83d343982b598a7b71380" translate="yes" xml:space="preserve">
          <source>typeAnnotation</source>
          <target state="translated">typeAnnotation</target>
        </trans-unit>
        <trans-unit id="7acfe16035db23c602b2123394dd0ca0e69f4357" translate="yes" xml:space="preserve">
          <source>typeCastExpression</source>
          <target state="translated">typeCastExpression</target>
        </trans-unit>
        <trans-unit id="956f13a7f69dc7861f730d3aeba5b2b2337f626d" translate="yes" xml:space="preserve">
          <source>typeParameter</source>
          <target state="translated">typeParameter</target>
        </trans-unit>
        <trans-unit id="da6b87d682dc96c20ca03fd3a54d5cfeba26fc76" translate="yes" xml:space="preserve">
          <source>typeParameterDeclaration</source>
          <target state="translated">typeParameterDeclaration</target>
        </trans-unit>
        <trans-unit id="0f561ac824cbc4e10483d8af5b35fc0a79da269d" translate="yes" xml:space="preserve">
          <source>typeParameterInstantiation</source>
          <target state="translated">typeParameterInstantiation</target>
        </trans-unit>
        <trans-unit id="82c0245be203057eacb6b5cda5294fc229bcc385" translate="yes" xml:space="preserve">
          <source>typeofTypeAnnotation</source>
          <target state="translated">typeofTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="cc315d27753bc5cbc608e5294b753c566892ef03" translate="yes" xml:space="preserve">
          <source>umd</source>
          <target state="translated">umd</target>
        </trans-unit>
        <trans-unit id="2bf18f65b9747d66a114d6ebe7a199254ada476f" translate="yes" xml:space="preserve">
          <source>unaryExpression</source>
          <target state="translated">unaryExpression</target>
        </trans-unit>
        <trans-unit id="f0a4c116d2c8e8601dc51579236202aabad4c94c" translate="yes" xml:space="preserve">
          <source>undefined-to-void</source>
          <target state="translated">undefined-to-void</target>
        </trans-unit>
        <trans-unit id="15873beb7af1bc5c075a8d8b2ae0bd2aee6abfc6" translate="yes" xml:space="preserve">
          <source>unionTypeAnnotation</source>
          <target state="translated">unionTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="4fdfad4dab50d0a50a3531c2c11e2c51e95f7a82" translate="yes" xml:space="preserve">
          <source>updateExpression</source>
          <target state="translated">updateExpression</target>
        </trans-unit>
        <trans-unit id="5c380d5e137555c746b661ebb502591931feb6b7" translate="yes" xml:space="preserve">
          <source>usually turns into:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5b4e786e382d03c28e9edfab2d8149378ae69df" translate="yes" xml:space="preserve">
          <source>var</source>
          <target state="translated">var</target>
        </trans-unit>
        <trans-unit id="b8596bb70046f2aaa02254ec09e351ec852772a3" translate="yes" xml:space="preserve">
          <source>variableDeclaration</source>
          <target state="translated">variableDeclaration</target>
        </trans-unit>
        <trans-unit id="dfd0a4de32f8f528d02694e4d5f578c248159505" translate="yes" xml:space="preserve">
          <source>variableDeclarator</source>
          <target state="translated">variableDeclarator</target>
        </trans-unit>
        <trans-unit id="be4878919d44c946cd2095c3f09a97a521fe00a6" translate="yes" xml:space="preserve">
          <source>voidTypeAnnotation</source>
          <target state="translated">voidTypeAnnotation</target>
        </trans-unit>
        <trans-unit id="691a77cd21a31b1b144537311a05b0bb5ff8fd2d" translate="yes" xml:space="preserve">
          <source>vs</source>
          <target state="translated">vs</target>
        </trans-unit>
        <trans-unit id="7e370d6105d8a670c596d68b36d92bf1ac5c80af" translate="yes" xml:space="preserve">
          <source>whileStatement</source>
          <target state="translated">whileStatement</target>
        </trans-unit>
        <trans-unit id="8c085a5fcf227ac81a198425a6f06bbd1a475e44" translate="yes" xml:space="preserve">
          <source>will transpile to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08c64ae7da23704400a8efd603312718e6c4a86" translate="yes" xml:space="preserve">
          <source>withStatement</source>
          <target state="translated">withStatement</target>
        </trans-unit>
        <trans-unit id="86855e171847ed7febec2c645c2bd09ec99c87fe" translate="yes" xml:space="preserve">
          <source>yieldExpression</source>
          <target state="translated">yieldExpression</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
