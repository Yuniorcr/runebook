<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="ember">
    <body>
      <group id="ember">
        <trans-unit id="259617466814dab7ee239a6cb08ccd0c6cf63ad9" translate="yes" xml:space="preserve">
          <source>An optional boolean. If falsy, the warning will be displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d4d0e2726f270a0b0e1eb3d24d277ebb5e98e4" translate="yes" xml:space="preserve">
          <source>An optional label. This is useful for tooling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ade0e9c435f407193894ad24428f419ab10cca7" translate="yes" xml:space="preserve">
          <source>An optional model argument can be used for routes whose paths contain dynamic segments. This argument will become the model context of the linked route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5578f6c7adb66c4e71c478fd4f253de05d686cc8" translate="yes" xml:space="preserve">
          <source>An optional paramter that if set to `true` causes the promise to fulfill with the callback's success arguments as an array. This is useful if the node function has multiple success paramters. If you set this paramter to an array with names, the promise will fulfill with a hash with these names as keys and the success parameters as values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29c842c186926290569207c94c1496fbea50ae71" translate="yes" xml:space="preserve">
          <source>An optional string for identifying the promise.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b5c7ed975b395b86706ece50e898ec81ef5be8" translate="yes" xml:space="preserve">
          <source>An optional target can be passed in as the 2nd argument that will be set as the &quot;this&quot; for the callback. This is a good way to give your function access to the object triggering the event. When the target parameter is used the callback becomes the third argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad56b83e88617534d6efc0455f3cba813e7c5b29" translate="yes" xml:space="preserve">
          <source>An options hash with a &lt;code&gt;queryParams&lt;/code&gt; property may be provided as the final argument to add query parameters to the destination URL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e99bd8851a8c1e21e0899057936304d4f9f5ec02" translate="yes" xml:space="preserve">
          <source>An overridable method called when objects are instantiated. By default, does nothing unless it is overridden during class definition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a185885182ba5b812ef8fd0d0b7d413f174dd3d" translate="yes" xml:space="preserve">
          <source>An owner object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eda0fc1a49d4da33d8de7ed9e252a116506debb" translate="yes" xml:space="preserve">
          <source>Analogous to the &lt;code&gt;loading&lt;/code&gt; event, you could manage the &lt;code&gt;error&lt;/code&gt; event at the application level to avoid writing the same code for multiple routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3270f7bfa9cfbfb16e0304d6f3e70d4952490dc0" translate="yes" xml:space="preserve">
          <source>And Ember makes use of our new helper function to replace the content inside the &lt;code&gt;{{ }}&lt;/code&gt; with the formatted amount.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a606b6661260a7a59324c809666dc5fe86f26a95" translate="yes" xml:space="preserve">
          <source>And calling &lt;code&gt;modelFor&lt;/code&gt; returned the result of the &lt;code&gt;model&lt;/code&gt; hook.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d930c4217f924dfa7432e8ab0f217c1d57139a50" translate="yes" xml:space="preserve">
          <source>And can then be detected in an application and used to send the user to an &lt;code&gt;under-maintenance&lt;/code&gt; route:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f808f9f869b6b3a7f5f8b0cb1aa83e5f8cc1f1ab" translate="yes" xml:space="preserve">
          <source>And here's what our generator prints out:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ccfb227e02188d1a6099f47dec4a2899ab2cb3" translate="yes" xml:space="preserve">
          <source>And our API might setup these relationships like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="093ac7197a3ab6824a8db25169552604bf3185ba" translate="yes" xml:space="preserve">
          <source>And so we need to change it to look like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41bf132516ee160b661225a174fe8ef6b99ab116" translate="yes" xml:space="preserve">
          <source>And the following application code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7c832f55b6bf0ad54136a9b9a4c99e15beebd3" translate="yes" xml:space="preserve">
          <source>And the following component template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd57da9ac459cb354e27395ee58a9b5ea9450b4" translate="yes" xml:space="preserve">
          <source>And then add the &lt;code&gt;{{outlet}}&lt;/code&gt; helper to your template where you want the nested template to display:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f11afecc22f8319d64744b13769de65d8b8e7542" translate="yes" xml:space="preserve">
          <source>And then let's update our new template (&lt;code&gt;/app/templates/rentals.hbs&lt;/code&gt;) with some initial content. We'll come back to this page in a bit to add in the actual rental properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7de96cbb44a1491ee841ac09e0486623ee14a153" translate="yes" xml:space="preserve">
          <source>And then use it in the component's template:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93bb7cea089a59a66a8c88a8ec0b2a43d54d618b" translate="yes" xml:space="preserve">
          <source>And two named arguments:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c291e4ba7a0d7d9d4db7adb6563d3f90f88340" translate="yes" xml:space="preserve">
          <source>And you attempted to save a record that did not validate on the backend:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f667d37fa5f016a26f06a9872a7f2160c41fbaa" translate="yes" xml:space="preserve">
          <source>And you can optionally override the following methods:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c53a5609268d8cc3b657e64edfd02e22ffa9dc" translate="yes" xml:space="preserve">
          <source>Another common task to perform on an enumerable is to take the enumerable as input, and return an Array after filtering it based on some criteria.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8461c31aaae42ec56856084e31327466738e04d" translate="yes" xml:space="preserve">
          <source>Another use case for pushing in records is if your application has a streaming connection to a backend. If a record is created or modified, you want to update the UI immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea03de2438b80b08c0d2d6fd50c0f66b720e4691" translate="yes" xml:space="preserve">
          <source>Another way to inject a service is to provide the name of the service as the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e550138b92434dcdf6b44555879aa1edcad0aa02" translate="yes" xml:space="preserve">
          <source>Another way to preserve native event behaviors and use an action, is to assign a (closure) action to an inline event handler. Consider the template below which includes an &lt;code&gt;onclick&lt;/code&gt; handler on a &lt;code&gt;button&lt;/code&gt; element:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cb070bee6806669fac22f1d37552f007d2c7985" translate="yes" xml:space="preserve">
          <source>Another way to say this is that the &lt;code&gt;value&lt;/code&gt; property of &lt;code&gt;input&lt;/code&gt; is &lt;a href=&quot;https://guides.emberjs.com/object-model/bindings/&quot;&gt;&lt;strong&gt;bound&lt;/strong&gt;&lt;/a&gt; to the &lt;code&gt;value&lt;/code&gt; property of the component. If the property changes, either by the user typing in the input field, or by assigning a new value to it in our program, the new value of the property is present in both the rendered web page and in the code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="322444d3bb52c341f429ca0454f292dc242f315b" translate="yes" xml:space="preserve">
          <source>Any</source>
          <target state="translated">Any</target>
        </trans-unit>
        <trans-unit id="61705f9b76ff585c3fc229ef27f86a4bd443f9b1" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;belongsTo&lt;/code&gt; relationships in the JSON representation should be the dasherized version of the property's name. For example, if you have a model:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aa59a9bfdd546f74777b72ed6d3a1e7e76147ff" translate="yes" xml:space="preserve">
          <source>Any additional arguments you wish to pass to the method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d93ab8dd51e3f38d20c35d5f03147f74fccc7b" translate="yes" xml:space="preserve">
          <source>Any callbacks registered with &lt;code&gt;onInjectHelpers&lt;/code&gt; will be called once the helpers have been injected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6784962c5c85317454cd4e07dd7e38080869c4" translate="yes" xml:space="preserve">
          <source>Any object that has this mixin applied can be used in observer operations. That includes &lt;code&gt;Ember.Object&lt;/code&gt; and most objects you will interact with as you write your Ember application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c13cc317849a06291912ab3d658733cd2683f03" translate="yes" xml:space="preserve">
          <source>Any other status codes will be treated as an &quot;adapter error&quot;. The request promise will be rejected, similarly to the &quot;invalid&quot; case, but with an instance of &lt;code&gt;DS.AdapterError&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6df25135550e72ebbfba360e5b60bb4aa2e8483" translate="yes" xml:space="preserve">
          <source>Any other status codes will be treated as an adapter error. The request promise will be rejected, similarly to the invalid case, but with an instance of &lt;code&gt;DS.AdapterError&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="964c6055e03db34dbdbce82677a4153ec608b92b" translate="yes" xml:space="preserve">
          <source>Any time the &quot;name&quot; property on the component changes, the DOM will be updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32134b0e43d18da466539ef39c3442aa4a2e7c83" translate="yes" xml:space="preserve">
          <source>Any | Promise&amp;lt;any&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5958b0f53cb499388dd9ee04a106a30b02c5d1" translate="yes" xml:space="preserve">
          <source>Apache</source>
          <target state="translated">Apache</target>
        </trans-unit>
        <trans-unit id="b291beb8793f4f3308c463951165dad483715a6c" translate="yes" xml:space="preserve">
          <source>Application</source>
          <target state="translated">Application</target>
        </trans-unit>
        <trans-unit id="db44f1a1d5a0bed952609e71cb45a89b07826b89" translate="yes" xml:space="preserve">
          <source>Application Initializers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28077dc5dca8cfd41ec7bf28339c995ce45280cf" translate="yes" xml:space="preserve">
          <source>Application Instance Initializers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02fbb2c871fdfdcb61f55fa6840fac8c9796223c" translate="yes" xml:space="preserve">
          <source>Application initializers are run as your application boots, and provide the primary means to configure &lt;a href=&quot;../dependency-injection&quot;&gt;dependency injections&lt;/a&gt; in your application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ae28ca7909073017188af82529c637aece67b6" translate="yes" xml:space="preserve">
          <source>Application initializers can be created with Ember CLI's &lt;code&gt;initializer&lt;/code&gt; generator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0327b249608fb10533fa4bc5c32423fb329e7456" translate="yes" xml:space="preserve">
          <source>Application instance initializers are run as an application instance is loaded. They provide a way to configure the initial state of your application, as well as to set up dependency injections that are local to the application instance (e.g. A/B testing configurations).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd764e59f8aa96def75203a863b05b52311f69c0" translate="yes" xml:space="preserve">
          <source>Application instance initializers can be created with Ember CLI's &lt;code&gt;instance-initializer&lt;/code&gt; generator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f43feef2b58cdfeed8d85c69f39aeaa788357d99" translate="yes" xml:space="preserve">
          <source>Application is not Detected Without Reload</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573a080ef2363bb5ed2ae5d7c4dbda02e5cb947b" translate="yes" xml:space="preserve">
          <source>ApplicationInstance</source>
          <target state="translated">ApplicationInstance</target>
        </trans-unit>
        <trans-unit id="e1f46a19d20b853668d9e13a3d5f5eb836a9cb36" translate="yes" xml:space="preserve">
          <source>Applications and Instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77cbe978decf7e18ac53e8ff64911f09e83509bc" translate="yes" xml:space="preserve">
          <source>Architecture Overview</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b312ee2ba740cc6cf8c66435bc1ab39c75b14a" translate="yes" xml:space="preserve">
          <source>Arguments should match those passed to &lt;code&gt;Ember.addListener&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="e72896fe1492e71f21a94a64857102dbaaa2693c" translate="yes" xml:space="preserve">
          <source>Array of promises.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e3da0e5afcc95be3e15b8063c5fa0302b0266c1" translate="yes" xml:space="preserve">
          <source>Array.[]</source>
          <target state="translated">Array.[]</target>
        </trans-unit>
        <trans-unit id="aba67a4b44f8228cd28b9688b767e7ce828d9382" translate="yes" xml:space="preserve">
          <source>ArrayProxy</source>
          <target state="translated">ArrayProxy</target>
        </trans-unit>
        <trans-unit id="b90cc9bfd23567a2ff5ba1f00e7c63ca6da8755e" translate="yes" xml:space="preserve">
          <source>Arrays</source>
          <target state="translated">Arrays</target>
        </trans-unit>
        <trans-unit id="08461a5115a2a0f38cef54d472eed75041f3b96f" translate="yes" xml:space="preserve">
          <source>Arrays and objects defined directly on any &lt;code&gt;Ember.Object&lt;/code&gt; are shared across all instances of that class.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51fca31fb04e58d6c6096ec6d3f367922c2d2c5c" translate="yes" xml:space="preserve">
          <source>Array|Promise</source>
          <target state="translated">Array|Promise</target>
        </trans-unit>
        <trans-unit id="7f7804c4ad6b8ec101018686c9b412921306b2e4" translate="yes" xml:space="preserve">
          <source>As Ember CLI runs, it takes the &lt;code&gt;ember-tutorial&lt;/code&gt; CSS file and puts it in a file called &lt;code&gt;vendor.css&lt;/code&gt;. The &lt;code&gt;vendor.css&lt;/code&gt; file is referenced in &lt;code&gt;app/index.html&lt;/code&gt;, making the styles available at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3addcbfe9779e3c434f4307dffe878d46aed0782" translate="yes" xml:space="preserve">
          <source>As a result of this type injection, all factories of the type &lt;code&gt;route&lt;/code&gt; will be instantiated with the property &lt;code&gt;logger&lt;/code&gt; injected. The value of &lt;code&gt;logger&lt;/code&gt; will come from the factory named &lt;code&gt;logger:main&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311ea72dae21bedf22e80bf4e5eb3f57f08f802c" translate="yes" xml:space="preserve">
          <source>As a user looks through our list of rentals, they may want to have some interactive options to help them make a decision. Let's add the ability to toggle the size of the image for each rental. To do this, we'll use a component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122dcca7a8a0de9f8e49a807d3d18e056bffe6f9" translate="yes" xml:space="preserve">
          <source>As an analogy, JSON API is to JavaScript apps and API servers what SQL is to server-side frameworks and databases. Popular frameworks like Ruby on Rails, Laravel, Django, Spring and more work out of the box with many different databases, like MySQL, PostgreSQL, SQL Server, and more.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a6716ba26e03617c92f53fd2352147c7252db8" translate="yes" xml:space="preserve">
          <source>As an application grows in size, it will have many templates backed by controllers and components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa189213dcb346106d5e9872d77e6451881b369f" translate="yes" xml:space="preserve">
          <source>As an example, consider the router:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1576ebe2d9b67dd183a72d25dc37d740c1367d47" translate="yes" xml:space="preserve">
          <source>As an exercise, here is the above &lt;code&gt;format-currency&lt;/code&gt; helper re-factored into a class-based helper:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfeef8dd340e62de1345b3bdb4f7d25f54691a8" translate="yes" xml:space="preserve">
          <source>As another example, let's make a helper utilizing an authentication service that welcomes users by their name if they're logged in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da0df0da65c3ae7e6622548b6eab04753b236bfe" translate="yes" xml:space="preserve">
          <source>As before when we created the &lt;a href=&quot;../simple-component&quot;&gt;&lt;code&gt;rental-listing&lt;/code&gt; component&lt;/a&gt;, the &quot;generate component&quot; CLI command creates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f8b74691d28ef085474c5c7e3a4ee5281aefb5" translate="yes" xml:space="preserve">
          <source>As components are rendered, re-rendered and finally removed, Ember provides &lt;em&gt;lifecycle hooks&lt;/em&gt; that allow you to run code at specific times in a component's life.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49eff526078dcae910ad5947d7b287b225607e5e" translate="yes" xml:space="preserve">
          <source>As illustrated in the diagram above, the adapter cannot always return the requested record immediately. In this case, the adapter must make an &lt;em&gt;asynchronous&lt;/em&gt; request to the server, and only when that request finishes loading can the record be created with its backing data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99ca4fb1beac8d51bfa495913434c4c345bda40c" translate="yes" xml:space="preserve">
          <source>As in the case of &lt;code&gt;store.query()&lt;/code&gt;, a query object can also be passed to &lt;code&gt;store.queryRecord()&lt;/code&gt; and is available for the adapter's &lt;code&gt;queryRecord()&lt;/code&gt; to use to qualify the request. However the adapter must return a single model object, not an array containing one element, otherwise Ember Data will throw an exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97635391398fda444388d21e716aa21408aa8b50" translate="yes" xml:space="preserve">
          <source>As in the earlier examples, the comment's &lt;code&gt;belongsTo&lt;/code&gt; relationship will also be cleared by Ember Data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="003bea68cedf87e1780da824c13d59df1ff7af25" translate="yes" xml:space="preserve">
          <source>As instances, these helpers also have access to the container an will accept injected dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacc2d627b5f266fe9cf7bfe4a641b468cba56ef" translate="yes" xml:space="preserve">
          <source>As it is the basic object type in Ember, being able to test a simple &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html&quot;&gt;&lt;code&gt;Ember.Object&lt;/code&gt;&lt;/a&gt; sets the foundation for testing more specific parts of your Ember application such as controllers, components, etc. Testing an &lt;code&gt;Ember.Object&lt;/code&gt; is as simple as creating an instance of the object, setting its state, and running assertions against the object. By way of example, let's look at a few common cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3138a71e853aa2b60d90fb77188c71cc96882ed8" translate="yes" xml:space="preserve">
          <source>As mentioned above, you should wrap any non-Ember async callbacks in &lt;code&gt;Ember.run&lt;/code&gt;. If you don't, Ember will try to approximate a beginning and end for you. Consider the following callback:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6634d6a8d88308b3254746b73f8e595c194c13b" translate="yes" xml:space="preserve">
          <source>As mentioned before, our initial test just made sure everything was running properly. Now let's replace that test with the list of tasks we want our app to handle (described up above).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2be8e0adcfa1aa4f96496cec6a785cbd688f7be" translate="yes" xml:space="preserve">
          <source>As mentioned earlier on the &lt;a href=&quot;../acceptance-test&quot;&gt;Planning the Application page&lt;/a&gt;, an Ember acceptance test automates interacting with our app in a similar way to a visitor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26aba4ddf9df1ce20c811d263d5fbec26355bc10" translate="yes" xml:space="preserve">
          <source>As mentioned earlier, we schedule work (in the form of function invocations) on queues, and these queues are processed to completion in priority order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b6f125ee3d6d0295e5a3907e1391e9db734bb3" translate="yes" xml:space="preserve">
          <source>As part of making your app upgrades as smooth as possible, the Inspector gathers your deprecations, groups them, and displays them in a way that helps you fix them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d09613c1dfb00458167443cf419d127edf67f08" translate="yes" xml:space="preserve">
          <source>As seen in the &lt;a href=&quot;https://guides.emberjs.com/templates/writing-helpers&quot;&gt;Writing Helpers&lt;/a&gt; guide. The helper function expects the unnamed arguments as an array as the first argument. It expects the named arguments as an object as the second argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cd927a14867ce3ef7598750785a48449a7e9ac" translate="yes" xml:space="preserve">
          <source>As the proxy is an ObjectProxy, and the json now its content, all the json properties will be available directly from the proxy.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0114ed3606496cbcb98afe5e657a3825b6b500" translate="yes" xml:space="preserve">
          <source>As they search for a rental, users might also want to narrow their search to a specific city. While our &lt;a href=&quot;../simple-component&quot;&gt;initial&lt;/a&gt; rental listing component only displayed rental information, this new filter component will also allow the user to provide input in the form of filter criteria.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ef82893252744a1b499132ad853ca79e552d0e0" translate="yes" xml:space="preserve">
          <source>As usual, there's a generator that makes this easy for us. Make a new component by typing:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306d333a4f71d5816d13abcfd58bba336166f4ce" translate="yes" xml:space="preserve">
          <source>As we continue through this tutorial, we'll use these acceptance tests as our checklist. Once all the tests are passing, we'll have accomplished our high level goals.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7796b3fe19b6a004e5933a00e42c6dcd9bb59bf3" translate="yes" xml:space="preserve">
          <source>As with the &lt;code&gt;loading&lt;/code&gt; substate, on a thrown error or rejected promise returned from the &lt;code&gt;articles.overview&lt;/code&gt; route's &lt;code&gt;model&lt;/code&gt; hook (or &lt;code&gt;beforeModel&lt;/code&gt; or &lt;code&gt;afterModel&lt;/code&gt;) Ember will look for an error template or route in the following order:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b02e3a13a7b798f9d11208cf0cde6353127b34" translate="yes" xml:space="preserve">
          <source>As you can see, the Inspector shows the routes you defined as well as the routes automatically generated by Ember.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f17c2c0791521047c64cdf9285d0e75e021ffab" translate="yes" xml:space="preserve">
          <source>As you learn about Ember, you'll see code like &lt;code&gt;Ember.Component.extend()&lt;/code&gt; and &lt;code&gt;DS.Model.extend()&lt;/code&gt;. Here, you'll learn about this &lt;code&gt;extend()&lt;/code&gt; method, as well as other major features of the Ember object model.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f06ca2c81b8c26f02d96e6329c0db6f670de11b" translate="yes" xml:space="preserve">
          <source>As you move forward with these template guides, keep in mind that a helper can be used anywhere a normal value can be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ba2b8e94ac60de39a520e332a62669c801c7e1" translate="yes" xml:space="preserve">
          <source>As you upgrade between releases, you might also notice that your terminal log begins to stream template-related deprecation warnings during the compile process, making it difficult to review your compilation logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8030db38771f4501e97ea4289def0f67f21d001c" translate="yes" xml:space="preserve">
          <source>As you're developing your Ember app, you'll likely run into common scenarios that aren't addressed by Ember itself, such as authentication or using SASS for your stylesheets. Ember CLI provides a common format called &lt;a href=&quot;#toc_addons&quot;&gt;Ember Addons&lt;/a&gt; for distributing reusable libraries to solve these problems. Additionally, you may want to make use of front-end dependencies like a CSS framework or a JavaScript datepicker that aren't specific to Ember apps.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d41f5be85b9fec5163ff038a3caf2635c6cc436c" translate="yes" xml:space="preserve">
          <source>As your application boots, it creates an &lt;a href=&quot;http://emberjs.com/api/classes/Ember.ApplicationInstance.html&quot;&gt;&lt;code&gt;Ember.ApplicationInstance&lt;/code&gt;&lt;/a&gt; that is used to manage its stateful aspects. This instance acts as the &quot;owner&quot; of objects instantiated for your app.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85482f7bde92f968b723a7c1cccba703446c7834" translate="yes" xml:space="preserve">
          <source>As your application grows, you will notice you are sharing UI elements between multiple pages, or using them multiple times on the same page. Ember makes it easy to refactor your templates into reusable components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d2cec2e9dfda4b6eb086f48956a67e9aa6066ef" translate="yes" xml:space="preserve">
          <source>Assimilation</source>
          <target state="translated">Assimilation</target>
        </trans-unit>
        <trans-unit id="d55c9f6900701a0c15d2e9897b19c81c1438d26a" translate="yes" xml:space="preserve">
          <source>Assume that a &lt;code&gt;User&lt;/code&gt; can own a &lt;code&gt;Profile&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc0eae4a846d9c5ab77883eacc28131689ac5ea1" translate="yes" xml:space="preserve">
          <source>Assuming you have already generated the &lt;code&gt;posts&lt;/code&gt; route, to generate the above nested route you would run:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b593995c88f61a609044a01e37e8e4ccc22e065" translate="yes" xml:space="preserve">
          <source>Assumptions</source>
          <target state="translated">Assumptions</target>
        </trans-unit>
        <trans-unit id="d113e9e9b47b09d806bb34df02a659f0a2190023" translate="yes" xml:space="preserve">
          <source>Async helpers also come in handy when you want to group interaction into one helper. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a694f132ffd5ee023d8bfe4db469892d873344c" translate="yes" xml:space="preserve">
          <source>Asynchronous Helpers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b882aa063e2d0be0004d24a29b1095b58191cf32" translate="yes" xml:space="preserve">
          <source>Asynchronous Routing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d1e1b8e9ce65e96225bf275b064f8840bc64f84" translate="yes" xml:space="preserve">
          <source>Asynchronous calls typically return a promise (or deferred). This is an object which has a state: it can be given handlers for when it's fulfilled or rejected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6afba5345b52f9fe856d72fb2e116d021abf742" translate="yes" xml:space="preserve">
          <source>Asynchronous example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="024ed461313ea710758c8440ffa3aac3c8cae37e" translate="yes" xml:space="preserve">
          <source>Asynchronous helpers are &quot;aware&quot; of (and wait for) asynchronous behavior within your application, making it much easier to write deterministic tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7474c0015a7cbc566fad6bd0c470876572283c8e" translate="yes" xml:space="preserve">
          <source>At a high-level, we break application boot into two distinct phases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604422ae04a00582512d890ad9756cc860609209" translate="yes" xml:space="preserve">
          <source>At every level of nesting (including the top level), Ember automatically provides a route for the &lt;code&gt;/&lt;/code&gt; path named &lt;code&gt;index&lt;/code&gt;. To see when a new level of nesting occurs, check the router, whenever you see a &lt;code&gt;function&lt;/code&gt;, that's a new level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a72286828b045fa20348b567c081a976787f702" translate="yes" xml:space="preserve">
          <source>At first, using Ember Data may feel different than the way you're used to writing JavaScript applications. Many developers are familiar with using AJAX to fetch raw JSON data from an endpoint, which may appear easy at first. Over time, however, complexity leaks out into your application code, making it hard to maintain.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e76c294bed3108976242f61fd1d7d056da52ddb" translate="yes" xml:space="preserve">
          <source>At most one model for each &lt;a href=&quot;https://guides.emberjs.com/routing/defining-your-routes/#toc_dynamic-segments&quot;&gt;dynamic segment&lt;/a&gt;. By default, Ember.js will replace each segment with the value of the corresponding object's &lt;code&gt;id&lt;/code&gt; property. In the example above, the second argument is each &lt;code&gt;photo&lt;/code&gt; object, and the &lt;code&gt;id&lt;/code&gt; property is used to fill in the dynamic segment with either &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt;, or &lt;code&gt;3&lt;/code&gt;. If there is no model to pass to the component, you can provide an explicit value instead:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec9405efb0386846a8807b3a31fe58f288690e6" translate="yes" xml:space="preserve">
          <source>At the end of a RunLoop, any methods scheduled in this way will be invoked. Methods will be invoked in an order matching the named queues defined in the &lt;code&gt;run.queues&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12f96c29406b183c26ea71c6b64edde12cc58a84" translate="yes" xml:space="preserve">
          <source>At the heart of Ember is Ember-Runtime, a set of core functions that provide cross-platform compatibility and object property observing. Ember-Runtime is small and performance-focused so you can use it alongside other cross-platform libraries such as jQuery. For more details, see &lt;a href=&quot;https://emberjs.com/api/modules/ember-runtime.html&quot;&gt;Ember-Runtime&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43473effc2c8cbc495a11ccde511f0bb67d7a225" translate="yes" xml:space="preserve">
          <source>At the start of a beta cycle the Ember core team evaluates each new feature. Features deemed stable are made available in the next beta and enabled by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02fcc07119232c1ede969118b71afe87945155cc" translate="yes" xml:space="preserve">
          <source>At this point all our tests should pass, including the &lt;a href=&quot;../acceptance-test&quot;&gt;list of acceptance tests&lt;/a&gt; we created as our beginning requirements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58954f132b5aa897d1883f8a43334615e25f69ec" translate="yes" xml:space="preserve">
          <source>At this point you can do a &lt;a href=&quot;../deploying&quot;&gt;deployment&lt;/a&gt; and share your Super Rentals application to the world or you can use this as a base to explore other Ember features and addons. Regardless, we hope this has helped you get started with creating your own ambitious applications with Ember!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd9b5e5f7f22993de86e7de87f658cef6b36b95" translate="yes" xml:space="preserve">
          <source>At this point, our block content has access to everything it needs to render, via the wrapping &lt;code&gt;blog-post&lt;/code&gt; component's template helpers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59905693b637d9aa355e39ca35e76a2ee37223da" translate="yes" xml:space="preserve">
          <source>At this point, we should be able to navigate between our &lt;code&gt;about&lt;/code&gt;, &lt;code&gt;contact&lt;/code&gt;, and &lt;code&gt;rentals&lt;/code&gt; pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b835a3f78cc768ce62c5e13c229075402e14a03" translate="yes" xml:space="preserve">
          <source>At this point, you can continue to the &lt;a href=&quot;../routes-and-templates&quot;&gt;next page&lt;/a&gt; or read more about Ember testing below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2586793eebaa431e6679b739ad4e25168985bbad" translate="yes" xml:space="preserve">
          <source>At this point, you can either persist your changes via &lt;code&gt;save()&lt;/code&gt; or you can roll back your changes. Calling &lt;a href=&quot;http://emberjs.com/api/data/classes/DS.Model.html#method_rollbackAttributes&quot;&gt;&lt;code&gt;rollbackAttributes()&lt;/code&gt;&lt;/a&gt; for a saved record reverts all the &lt;code&gt;changedAttributes&lt;/code&gt; to their original value. If the record &lt;code&gt;isNew&lt;/code&gt; it will be removed from the store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eaadbd3b4c608776e71642462b140b1a321d4080" translate="yes" xml:space="preserve">
          <source>Attaching Actions to Non-Clickable Elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="977cdd4c60c3eae70e9b9de3d34e8c4109852a3f" translate="yes" xml:space="preserve">
          <source>Attaching actions to DOM elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e3da4707f8656a453fa96b571d97b75794ccd21" translate="yes" xml:space="preserve">
          <source>Attempts to add the passed object to the receiver if the object is not already present in the collection. If the object is present, this method has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f777a9ed3b994806a472032ec849e0ef34ecf7d" translate="yes" xml:space="preserve">
          <source>Attempts to remove the passed object from the receiver collection if the object is present in the collection. If the object is not present, this method has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="6ec6d89f423d9e38d748baf4b1f1836781f0fcbf" translate="yes" xml:space="preserve">
          <source>Attribute Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73a05430770622de21c0faf0e251227cc79d971d" translate="yes" xml:space="preserve">
          <source>Attribute names in your JSON payload should be the camelCased versions of the attributes in your Ember.js models.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6652617f2c799eb11ee727b16c5646c48af6905" translate="yes" xml:space="preserve">
          <source>Attributes</source>
          <target state="translated">Attributes</target>
        </trans-unit>
        <trans-unit id="15394d673370c824cbd9257b3097ca11b176e7b1" translate="yes" xml:space="preserve">
          <source>Attributes are used when turning the JSON payload returned from your server into a record, and when serializing a record to save back to the server after it has been modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d56438642f0ab238478bbefcab98fbaa14d46450" translate="yes" xml:space="preserve">
          <source>Augments a constructor's own properties and functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2f9b618879ca0736d07b6619b258226caebaa0e" translate="yes" xml:space="preserve">
          <source>Augments a constructor's prototype with additional properties and functions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011acab72ef31d6e6dae85d00b4256899c4da349" translate="yes" xml:space="preserve">
          <source>Authoring Adapters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e5647323a0775b905f99dd49c5c2ec27e1e176a" translate="yes" xml:space="preserve">
          <source>Authoring Serializers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56874b2f851d69474fb406c3ad51fd76a8ff5fb2" translate="yes" xml:space="preserve">
          <source>AutoLocation</source>
          <target state="translated">AutoLocation</target>
        </trans-unit>
        <trans-unit id="7db19ea1a02598dc4c77a174c421e0eb0a38f24b" translate="yes" xml:space="preserve">
          <source>Autoruns are Embers way of not punishing you in production if you forget to open a run loop before you schedule callbacks on it. While this is useful in production, these are still situations that should be revealed in testing to help you find and fix them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59a379f080719fed1325dfc72ce9981cf59d3b60" translate="yes" xml:space="preserve">
          <source>Autoruns are disabled in testing for several reasons:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37a6cbb6987ffc5fdcbe4fb1796799b4e5212e38" translate="yes" xml:space="preserve">
          <source>Available queues, and their order, can be found at &lt;code&gt;run.queues&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f922b385a7e9f8d156ca4612a64f10a2b41eefb6" translate="yes" xml:space="preserve">
          <source>Backburner has support for stitching the stacktraces together so that you can track down where an erroring &lt;code&gt;Ember.run.later&lt;/code&gt; is being initiated from. Unfortunately, this is quite slow and is not appropriate for production or even normal development.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5565b8908d86a903cc35e6eae119d03aeaae8b40" translate="yes" xml:space="preserve">
          <source>Background Reloading</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724fb49b1a2edb91c740412ddea2584f33b4cf3a" translate="yes" xml:space="preserve">
          <source>Basic Routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630b1b43052c22e1bd9799b5673582e36f998969" translate="yes" xml:space="preserve">
          <source>Basic Usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ada93b2847db3d5c94fbfbd017b469ec1eecca6" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;/posts&lt;/code&gt; represents a fixed model, we don't need any additional information to know what to retrieve. However, if we want a route to represent a single post, we would not want to have to hardcode every possible post into the router.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ccc7f51247a5205c6481d94736daa12929e2a1" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;Ember.Application&lt;/code&gt; inherits from &lt;code&gt;Ember.Namespace&lt;/code&gt;, any classes you create will have useful string representations when calling &lt;code&gt;toString()&lt;/code&gt;. See the &lt;code&gt;Ember.Namespace&lt;/code&gt; documentation for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55a8c0c55c4e28bb69a194bcb179205c321affcc" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;get&lt;/code&gt; unifies the syntax for accessing all these kinds of properties, it can make many refactorings easier, such as replacing a simple property with a computed property, or vice versa.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9f1a41d095d76e52560e285eb25bb5dd766819" translate="yes" xml:space="preserve">
          <source>Because HTML &lt;code&gt;input&lt;/code&gt; elements are self closing &lt;code&gt;layout&lt;/code&gt; and &lt;code&gt;layoutName&lt;/code&gt; properties will not be applied. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.View.html&quot;&gt;Ember.View&lt;/a&gt;'s layout section for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602c7bf83c39faf41cf7612a43c086d011bc111a" translate="yes" xml:space="preserve">
          <source>Because HTML &lt;code&gt;textarea&lt;/code&gt; elements do not contain inner HTML the &lt;code&gt;layout&lt;/code&gt; and &lt;code&gt;layoutName&lt;/code&gt; properties will not be applied. See &lt;a href=&quot;https://emberjs.com/api/classes/Ember.View.html&quot;&gt;Ember.View&lt;/a&gt;'s layout section for more information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba56f36cf9504193e7d77883e84347df4194d7b2" translate="yes" xml:space="preserve">
          <source>Because of Ember's support for bindings and observers, you will always access properties using the get method, and set properties using the set method. This allows the observing objects to be notified and computed properties to be handled properly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8ae91d71186c8162e9906575f83ad0c71bb6c38" translate="yes" xml:space="preserve">
          <source>Because of this asynchronicity, the store immediately returns a &lt;em&gt;promise&lt;/em&gt; from the &lt;code&gt;find()&lt;/code&gt; method. Similarly, any requests that the store makes to the adapter also return promises.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d641c61aa5f85907b53d2a176b90a86200658fbd" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;fullName&lt;/code&gt; computed property depends on &lt;code&gt;firstName&lt;/code&gt;, updating &lt;code&gt;firstName&lt;/code&gt; will fire observers on &lt;code&gt;fullName&lt;/code&gt; as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc82e24ccce33a201125d0a9e25397d88d38a3a" translate="yes" xml:space="preserve">
          <source>Because the priority is first to last, the &quot;sync&quot; queue has higher priority than the &quot;render&quot; or &quot;destroy&quot; queue.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca516588fe4aad411d8ce205b4c2db67008a7f2e" translate="yes" xml:space="preserve">
          <source>Because we only plan to display static content on our about page, we won't adjust the &lt;code&gt;/app/routes/about.js&lt;/code&gt; route handler file right now. Instead, let's open our &lt;code&gt;/app/templates/about.hbs&lt;/code&gt; template file and add some info about Super Rentals:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdd6c7e36bfcc169635cb2a250fa0ec9a5191758" translate="yes" xml:space="preserve">
          <source>Becomes true whenever the array currently has observers watching changes on the array.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a6eefa17e5e40fcc7e29e936936740d9b86b04" translate="yes" xml:space="preserve">
          <source>Before implementing a map, we need to make a 3rd party map API available to our Ember app. There are several ways to include 3rd party libraries in Ember. See the guides section on &lt;a href=&quot;https://guides.emberjs.com/addons-and-dependencies/managing-dependencies/&quot;&gt;managing dependencies&lt;/a&gt; as a starting point when you need to add one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184486c397e2c3cf6e270cc0294995f58c89b4c2" translate="yes" xml:space="preserve">
          <source>Before you start writing any Ember code, it's a good idea to get an overview of how an Ember application works.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c8d5f7603f2678d521765ce966807c817dad7a" translate="yes" xml:space="preserve">
          <source>Begins a new RunLoop. Any deferred actions invoked after the begin will be buffered until you invoke a matching call to &lt;code&gt;run.end()&lt;/code&gt;. This is a lower-level way to use a RunLoop instead of using &lt;code&gt;run()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9773bb2a4e6fbd3e49a503a393c63119abf5b295" translate="yes" xml:space="preserve">
          <source>Behind the scenes, the CDN will distribute your content geographically with the goal of end-users being able to fetch your content with the lowest latency possible. For example, if a user is in India, they'd likely get content served from India faster than from the United States.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bf548552e758a473fb421db7fd35efa4f3e605" translate="yes" xml:space="preserve">
          <source>BelongsTo: &lt;code&gt;{ serialize: 'id', deserialize: 'id' }&lt;/code&gt; HasMany: &lt;code&gt;{ serialize: false, deserialize: 'ids' }&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92540263d683ad033101e89c7ab3438af02cd9e3" translate="yes" xml:space="preserve">
          <source>BelongsToReference</source>
          <target state="translated">BelongsToReference</target>
        </trans-unit>
        <trans-unit id="34bcf95e632553eda17103e231139562411bada0" translate="yes" xml:space="preserve">
          <source>Below are some common issues you may encounter when using the Inspector, along with the necessary steps to solve them. If your issue is not listed below, please submit an issue to the Inspector's &lt;a href=&quot;https://github.com/emberjs/ember-inspector&quot;&gt;GitHub repo&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="695b0847861d155aac843f4e4ca8e305041ec8f4" translate="yes" xml:space="preserve">
          <source>Below are some samples of ways to use lifecycle hooks within your components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b3e9556caf521f66e82350368ec5ac768ca0c64" translate="yes" xml:space="preserve">
          <source>Below is an example of a per-type serializer (&lt;code&gt;post&lt;/code&gt; type).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f7d46e71b9894cafca4065f881ca95a83b2f4d" translate="yes" xml:space="preserve">
          <source>Below is the same deprecation-workflow file as above, now with a regular expression on line 7 to remove some redundant messages. Note that the double quotes around &lt;code&gt;matchMessage&lt;/code&gt; have also been replaced with forward slashes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8a9a448876963b1a5013979ed02936a580daf1c" translate="yes" xml:space="preserve">
          <source>Below we add a remove action to the &lt;code&gt;cart-contents&lt;/code&gt; component. Notice that below we access the &lt;code&gt;cart&lt;/code&gt; service with a call to&lt;code&gt;this.get&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3473ae839d7876b9c12e956bc85aa276fbfee546" translate="yes" xml:space="preserve">
          <source>Besides ES6, you'll see a lot of content about compiling/transpiling CoffeeScript, a short-hand language which can &quot;compile&quot; to JavaScript.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bd0ed1d9030f89c91af701f519d5b94d60de999" translate="yes" xml:space="preserve">
          <source>Besides properties, double curly braces (&lt;code&gt;{{}}&lt;/code&gt;) may also contain helpers and components, which we'll discuss later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47be2ca9b139f48a82092d21ad3c72eab6501a34" translate="yes" xml:space="preserve">
          <source>Besides the custom class name for the value being &lt;code&gt;true&lt;/code&gt;, you can also specify a class name which is used when the value is &lt;code&gt;false&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e41f7d1bc0d0c7928ac6d1fa13f85a10f010279b" translate="yes" xml:space="preserve">
          <source>Beta features that receive negative feedback from the community are disabled in the next beta point release, and are not included in the next stable release. They may still be included in the next beta cycle if the issues/concerns are resolved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f5a3e51e94cbb9080af9327164878aa332067a" translate="yes" xml:space="preserve">
          <source>Binding Element Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f37cd8b58ca3436726a232f6276b6be473416cd" translate="yes" xml:space="preserve">
          <source>Binding dynamic attribute</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967382f86044b6efc91dfee8f4e2b4ed941211cd" translate="yes" xml:space="preserve">
          <source>Bindings</source>
          <target state="translated">Bindings</target>
        </trans-unit>
        <trans-unit id="f9fb8189ac6f1cb7e0b9631557e27da8a854c72c" translate="yes" xml:space="preserve">
          <source>Block Form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c105cc5dcc58a17f4df8de56aee738e2affa3ce3" translate="yes" xml:space="preserve">
          <source>Block form</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49100a3290d374e27e83d19e957ac12342793e83" translate="yes" xml:space="preserve">
          <source>Block params, like function arguments in JavaScript, are positional. &lt;code&gt;person&lt;/code&gt; is what each item is named in the above template, but &lt;code&gt;human&lt;/code&gt; would work just as well.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9eec850bd8792a378b84e4f28265bdea7e3c7a6" translate="yes" xml:space="preserve">
          <source>Blog dates are properly formatted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e963a85c0c8a238f5361e2429d62278cf5e7dc39" translate="yes" xml:space="preserve">
          <source>Bookmark Me</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="5c7f3b824274f00a1a1136adcf6ac0c94cc5233f" translate="yes" xml:space="preserve">
          <source>Boolean value class name bindings whose property names are in a camelCase-style format will be converted to a dasherized format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d63b221c33e6a800a0a8b60a2835cfc7c99d59" translate="yes" xml:space="preserve">
          <source>Boolean|Array</source>
          <target state="translated">Boolean|Array</target>
        </trans-unit>
        <trans-unit id="b662f901820aa84703a5ab27406f020b71d12fac" translate="yes" xml:space="preserve">
          <source>Boot a new instance of &lt;code&gt;Ember.ApplicationInstance&lt;/code&gt; for the current application and navigate it to the given &lt;code&gt;url&lt;/code&gt;. Returns a &lt;code&gt;Promise&lt;/code&gt; that resolves with the instance when the initial routing and rendering is complete, or rejects with any error that occurred during the boot process.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95fba81bae1171011d3f83b597f4397b483f650b" translate="yes" xml:space="preserve">
          <source>Both LESS and Sass are types of CSS preprocessor markup intended to give you much more control over your CSS. During the build process, the LESS or Sass resources compile down to vanilla CSS (which can be executed in a browser).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89800a13eb0f94d7dbcccff2650f44de3da79f96" translate="yes" xml:space="preserve">
          <source>Both callbacks will be passed the observed object, starting index of the change as well as a count of the items to be removed and added. You can use these callbacks to optionally inspect the array during the change, clear caches, or do any other bookkeeping necessary.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f8a0bed1ace1b0a0bdc6b8c1770fd716ea80639" translate="yes" xml:space="preserve">
          <source>Both will result in:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6f071f5d1cc63649929752e477025e55f321df" translate="yes" xml:space="preserve">
          <source>Bound template names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d322fc75b209892986aecddff9f51e3a71cdf28" translate="yes" xml:space="preserve">
          <source>Bound:</source>
          <target state="translated">Bound:</target>
        </trans-unit>
        <trans-unit id="1f688a06e547b5c3a43787858bd62f64749948d7" translate="yes" xml:space="preserve">
          <source>Bower</source>
          <target state="translated">Bower</target>
        </trans-unit>
        <trans-unit id="b025f7993f95344119634bb5b50e594147ae1a68" translate="yes" xml:space="preserve">
          <source>Browser Applications (Manual Boot)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b8f118d4bcfd41266285e6076c5e95f509a6757" translate="yes" xml:space="preserve">
          <source>Browser events may bubble up the DOM which potentially target parent component(s) in succession. To enable bubbling &lt;code&gt;return true;&lt;/code&gt; from the event handler method in your component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b15d854cfd26c3a30d616d8c01e10ae84ecf8196" translate="yes" xml:space="preserve">
          <source>Browsers that support the &lt;code&gt;history&lt;/code&gt; API will use &lt;code&gt;HistoryLocation&lt;/code&gt;, those that do not, but still support the &lt;code&gt;hashchange&lt;/code&gt; event will use &lt;code&gt;HashLocation&lt;/code&gt;, and in the rare case neither is supported will use &lt;code&gt;NoneLocation&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9ec828f41619019abe66fcb1522f78d729dcdd" translate="yes" xml:space="preserve">
          <source>Browsers that update themselves (without user intervention).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f261aee464809e1efb47e6e6abe22ebb1ee313" translate="yes" xml:space="preserve">
          <source>Bubbling</source>
          <target state="translated">Bubbling</target>
        </trans-unit>
        <trans-unit id="5dae71cf45c8a0e9183a358920801e89f36db04b" translate="yes" xml:space="preserve">
          <source>Build targets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1abd6bb45baaafc89778e0a9b4a7b6c23db4a86" translate="yes" xml:space="preserve">
          <source>Build targets can also be leveraged in other ways.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fa25106b200476be5023b7fcc1482fb3e8d675" translate="yes" xml:space="preserve">
          <source>Building For Production</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c95c403d24822dffbdf94a7023c8ec2a153b6c4" translate="yes" xml:space="preserve">
          <source>Building a Complex Component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9f06e233758385d11a72ecfb17f98f65687a46c" translate="yes" xml:space="preserve">
          <source>Building a Data Custom Adapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17241a49497275e3e421151e5f4ee28e0a030424" translate="yes" xml:space="preserve">
          <source>Building a Simple Component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3245d43f4e9a449ac5c57e3e7dc226da1811bda" translate="yes" xml:space="preserve">
          <source>Building your app to be deployed to production.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d640a1770c22e89b504595a96b4dce39204681f" translate="yes" xml:space="preserve">
          <source>Builds a URL for a &lt;code&gt;record.save()&lt;/code&gt; call when the record has been deleted locally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="289ae0cc6ffa2786ea63f4cedac431aa1484e1cd" translate="yes" xml:space="preserve">
          <source>Builds a URL for a &lt;code&gt;record.save()&lt;/code&gt; call when the record has been update locally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d350078e26d21f68136280426da67e8a907f343e" translate="yes" xml:space="preserve">
          <source>Builds a URL for a &lt;code&gt;record.save()&lt;/code&gt; call when the record was created locally using &lt;code&gt;store.createRecord()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfb681ca48cfff21ea2a7ad620205777787d787" translate="yes" xml:space="preserve">
          <source>Builds a URL for a &lt;code&gt;store.findAll(type)&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7d2314d8c9f05f30039eb7bae0132751cf51c6b" translate="yes" xml:space="preserve">
          <source>Builds a URL for a &lt;code&gt;store.findRecord(type, id)&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82391b65699069ed3c665e2b23aac1e08fddb98f" translate="yes" xml:space="preserve">
          <source>Builds a URL for a &lt;code&gt;store.query(type, query)&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32be656fe1758525ec4dd75f03d80311884b6b3" translate="yes" xml:space="preserve">
          <source>Builds a URL for a &lt;code&gt;store.queryRecord(type, query)&lt;/code&gt; call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40808a15f11cbe2c37ecc100f6b988095474cdc8" translate="yes" xml:space="preserve">
          <source>Builds a URL for a given type and optional ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25e79b0b1e91c20a07cd7f9cd8210c28d74d38d8" translate="yes" xml:space="preserve">
          <source>Builds a URL for coalesceing multiple &lt;code&gt;store.findRecord(type, id)&lt;/code&gt; records into 1 request when the adapter's &lt;code&gt;coalesceFindRequests&lt;/code&gt; property is true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c2479aa18da61dd22009ae36e8b89dfec12911" translate="yes" xml:space="preserve">
          <source>Builds a URL for fetching a async belongsTo relationship when a url is not provided by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a35268be645341dac3e743b249648a36a1e1d1d2" translate="yes" xml:space="preserve">
          <source>Builds a URL for fetching a async hasMany relationship when a url is not provided by the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7998e59d701a8696fc25146f2f6266408261fbbd" translate="yes" xml:space="preserve">
          <source>Built-in Helpers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8946a7120570480ad6f64547621ff0e3a3252d35" translate="yes" xml:space="preserve">
          <source>But ES5 code is usually more verbose than the original Javascript, and over time, as browsers gain the ability to execute the new features in JavaScript and older browsers lose users, many users won't really want this verbose code as it increases their app's size and load times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd136bf9fc0af13e9982e53db70c41367980fbfd" translate="yes" xml:space="preserve">
          <source>But once loaded on a model instance, it will behave as an object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70648fb1a98c6183bbac202e5d24fe2d631d6029" translate="yes" xml:space="preserve">
          <source>But our server expects data in this format:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edfc7552deebbb18f0fcd23aa280b2438c4b3da" translate="yes" xml:space="preserve">
          <source>But the following will:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dac8b3afa0ebd029a579db73918b0978c18de432" translate="yes" xml:space="preserve">
          <source>But what about the opposite direction? How does data flow back out of the component to the parent? In Ember, components use &lt;strong&gt;actions&lt;/strong&gt; to communicate events and changes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed83b386ca22cd097b5f221caba2b9ded956d8f" translate="yes" xml:space="preserve">
          <source>But what if you have an Ember.js app that you need to embed into an existing page, or run alongside other JavaScript frameworks, or serve from the same domain as another app?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44849edc12fbad6421a2a5d67b046e93c35939f6" translate="yes" xml:space="preserve">
          <source>But when you need to add static methods or static properties to the class itself you can use &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Object.html#method_reopenClass&quot;&gt;&lt;code&gt;reopenClass()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af15bb4c3ad741a787ed9fcac10a5493b70ceee7" translate="yes" xml:space="preserve">
          <source>By comparison, using the computed macro abstracts some of this away:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb2b99cc531eb6e5f54f2b2cc13877e3bf5e2b6" translate="yes" xml:space="preserve">
          <source>By convention these property names are camelCase in Ember Data models. As with the &lt;code&gt;type&lt;/code&gt; names, this is different from the example attribute and relationship names shown in the &lt;a href=&quot;http://jsonapi.org/format/&quot;&gt;JSON API spec&lt;/a&gt;. The examples in the spec use dash-case for attribute and relationship names. However, the spec does not require attribute or relationship names to follow any specific casing convention. If you are using Ember Data's own &lt;code&gt;JSONAPISerializer&lt;/code&gt; it will assume the attribute and relationship names from your API are dash-case and automatically transform them to camelCase when it creates the normalized JSON object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a94cca917e76603ba78868852ea9942b1e2e7611" translate="yes" xml:space="preserve">
          <source>By convention, properties or variables that hold classes are PascalCased, while instances are not. So, for example, the variable &lt;code&gt;Person&lt;/code&gt; would point to a class, while &lt;code&gt;person&lt;/code&gt; would point to an instance (usually of the &lt;code&gt;Person&lt;/code&gt; class). You should stick to these naming conventions in your Ember applications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab7fef8badbfed80576079ff75199dd7efbf2f94" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;{{link-to}}&lt;/code&gt; is enabled. any passed value to the &lt;code&gt;disabled&lt;/code&gt; component property will disable the &lt;code&gt;link-to&lt;/code&gt; component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd831ff22c0fdce17ff2fbad1e0840c3c362767" translate="yes" xml:space="preserve">
          <source>By default &lt;code&gt;{{link-to}}&lt;/code&gt; renders an &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; element. This can be overridden for a single use of &lt;code&gt;{{link-to}}&lt;/code&gt; by supplying a &lt;code&gt;tagName&lt;/code&gt; option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0398305836f98f70adca9c5d83e3d35006a6fa44" translate="yes" xml:space="preserve">
          <source>By default Ember Data comes with several built-in adapters. Feel free to use these adapters as a starting point for creating your own custom adapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7c5bdd0380508662b5ce4ff9cdb98e82cbd0f2" translate="yes" xml:space="preserve">
          <source>By default calling &lt;code&gt;post.get('comments')&lt;/code&gt; will trigger the following requests(assuming the comments haven't been loaded before):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb7ced8ab34ae69dc13ee5e220022b7b95fba3cd" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;JSONAPIAdapter&lt;/code&gt; will attempt to pluralize and dasherize the model name to generate the path name. If this convention does not conform to your backend you can override the &lt;code&gt;pathForType&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d58a10585b3658a8e0ee4f17436744695172053" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;{{action}}&lt;/code&gt; helper will ignore click events with pressed modifier keys. You can supply an &lt;code&gt;allowedKeys&lt;/code&gt; option to specify which keys should not be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3166c3a64a70eab5fdd5e557efed5160e0e5900a" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;{{link-to}}&lt;/code&gt; component prevents the default browser action by calling &lt;code&gt;preventDefault()&lt;/code&gt; as this sort of action bubbling is normally handled internally and we do not want to take the browser to a new URL (for example).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b7dee22c48ccfb7d072f4ae78b8ba2ffa57fed" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;{{link-to}}&lt;/code&gt; component will bind to the &lt;code&gt;active&lt;/code&gt;, &lt;code&gt;loading&lt;/code&gt;, and &lt;code&gt;disabled&lt;/code&gt; classes. It is discouraged to override these directly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6794c13710418e025c164e113b742dab502de0a" translate="yes" xml:space="preserve">
          <source>By default the &lt;code&gt;{{link-to}}&lt;/code&gt; component will bind to the &lt;code&gt;href&lt;/code&gt; and &lt;code&gt;title&lt;/code&gt; attributes. It's discouraged that you override these defaults, however you can push onto the array if needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06e4f4feb085cf8d074a20af9a83d65b953097b4" translate="yes" xml:space="preserve">
          <source>By default the JSONAPIAdapter will send each find request coming from a &lt;code&gt;store.find&lt;/code&gt; or from accessing a relationship separately to the server. If your server supports passing ids as a query string, you can set coalesceFindRequests to true to coalesce all find requests within a single runloop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="504f6aacc74b51a8d89f5e840d19d39dc16e91db" translate="yes" xml:space="preserve">
          <source>By default the RESTAdapter will send each find request coming from a &lt;code&gt;store.find&lt;/code&gt; or from accessing a relationship separately to the server. If your server supports passing ids as a query string, you can set coalesceFindRequests to true to coalesce all find requests within a single runloop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6edefa7d3f9a325dcac88789a517e9953f3829" translate="yes" xml:space="preserve">
          <source>By default the adapter will target the current domain. If you would like to specify a new domain you can do so by setting the &lt;code&gt;host&lt;/code&gt; property on the adapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc72cda19d335e0c30a7dffc44c4b6e212506ce4" translate="yes" xml:space="preserve">
          <source>By default the boolean transform only allows for values of &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;. You can opt into allowing &lt;code&gt;null&lt;/code&gt; values for boolean attributes via &lt;code&gt;DS.attr('boolean', { allowNull: true })&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387da59df6f8a56a8fbef265b3e9683a41f7097b" translate="yes" xml:space="preserve">
          <source>By default the controller's &lt;code&gt;model&lt;/code&gt; will be the route's model, so it does not need to be passed unless you wish to change which model is being used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88f29fafe048e43628ee4aec43e238b5dc79cec5" translate="yes" xml:space="preserve">
          <source>By default the function backing the computed property will only be called once and the result will be cached. You can specify various properties that your computed property depends on. This will force the cached result to be recomputed if the dependencies are modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c137c99672cba4b157461ab3d46594e1a5abe4d5" translate="yes" xml:space="preserve">
          <source>By default the modelName for a model is its name in dasherized form. This means that a payload key like &quot;blogPost&quot; would be normalized to &quot;blog-post&quot; when Ember Data looks up the model. Usually, Ember Data can use the correct inflection to do this for you. Most of the time, you won't need to override &lt;code&gt;modelNameFromPayloadKey&lt;/code&gt; for this purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c77ad946e971938391972b9f793a7a818ea528c" translate="yes" xml:space="preserve">
          <source>By default the modelName for a model is its name in dasherized form. Usually, Ember Data can use the correct inflection to do this for you. Most of the time, you won't need to override &lt;code&gt;modelNameFromPayloadType&lt;/code&gt; for this purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de92b9f8150e4df8e69de5b8e22cae5f3178e5c9" translate="yes" xml:space="preserve">
          <source>By default the modelName for a model is its singularized name in dasherized form. Usually, Ember Data can use the correct inflection to do this for you. Most of the time, you won't need to override &lt;code&gt;modelNameFromPayloadType&lt;/code&gt; for this purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6800977c0484482dcb2cb2742379c10c0625d474" translate="yes" xml:space="preserve">
          <source>By default the payload type is the camelized model name. Usually, Ember Data can use the correct inflection to do this for you. Most of the time, you won't need to override &lt;code&gt;payloadTypeFromModelName&lt;/code&gt; for this purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f18c6cc0cf8419c23c178cfc2fc4de15f7a881e" translate="yes" xml:space="preserve">
          <source>By default the payload type is the pluralized model name. Usually, Ember Data can use the correct inflection to do this for you. Most of the time, you won't need to override &lt;code&gt;payloadTypeFromModelName&lt;/code&gt; for this purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f27d0d1c29dc7731cfb2b55d2d8109145de649bd" translate="yes" xml:space="preserve">
          <source>By default the snapshot's id (String) is set on the json hash via json[primaryKey] = snapshot.id.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8d86af84b8ba24fc9bbc906d3fc240124920b92" translate="yes" xml:space="preserve">
          <source>By default the store will try to coalesce all &lt;code&gt;fetchRecord&lt;/code&gt; calls within the same runloop into as few requests as possible by calling groupRecordsForFindMany and passing it into a findMany call. You can opt out of this behaviour by either not implementing the findMany hook or by setting coalesceFindRequests to false.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="481a70ca186a88fd4ee402205ad3861d43ae6686" translate="yes" xml:space="preserve">
          <source>By default the value of the &lt;code&gt;headers&lt;/code&gt; property of the adapter is returned.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1358c19a54d35cea536679b1310b38c92948d937" translate="yes" xml:space="preserve">
          <source>By default this hook just returns the json payload passed to it. You might want to override it in two cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e463052a16e66f773f873c51aab318423fe874f" translate="yes" xml:space="preserve">
          <source>By default this hook returns &lt;code&gt;false&lt;/code&gt;, as most UIs should not block user interactions while waiting on data update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b897102d575e89bf0a2b71be0d85083134b480" translate="yes" xml:space="preserve">
          <source>By default this hook returns &lt;code&gt;true&lt;/code&gt; so the data for the record is updated in the background.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ac5e2eb4137e0a7f4543e8db2fadbbd1949b391" translate="yes" xml:space="preserve">
          <source>By default this method returns &lt;code&gt;true&lt;/code&gt;, indicating that a background reload should always be triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c15feeb92091ec4574c102af2950a0b12b0095a4" translate="yes" xml:space="preserve">
          <source>By default this methods returns &lt;code&gt;true&lt;/code&gt; if the passed &lt;code&gt;snapshotRecordArray&lt;/code&gt; is empty (meaning that there are no records locally available yet), otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac286970e65a66ed46573d9fb4eebe5d33dc9ce0" translate="yes" xml:space="preserve">
          <source>By default, &lt;code&gt;import&lt;/code&gt;ed assets will be copied to &lt;code&gt;dist/&lt;/code&gt; as they are, with the existing directory structure maintained.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcfd723bf5a7dbc5a600bf49491f8d54a7c6be67" translate="yes" xml:space="preserve">
          <source>By default, Ember CLI does not generate a file for its application route. To extend the behavior of the ember application route we will run the command &lt;code&gt;ember generate route application&lt;/code&gt;. Ember CLI does however generate an application template, so when asked whether we want to overwrite &lt;code&gt;app/templates/application.hbs&lt;/code&gt; we will answer 'n'.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb67730642c060b291fd8097d1a3f7e283b32d8" translate="yes" xml:space="preserve">
          <source>By default, Ember Data uses and recommends the &lt;code&gt;JSONAPISerializer&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b421f430e90e01048a2284b47bf293a3d391586" translate="yes" xml:space="preserve">
          <source>By default, Ember Data will &lt;code&gt;POST&lt;/code&gt; newly created records to their type url.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc388b9f9fbf30c27d4c38581e1dfed911c7e214" translate="yes" xml:space="preserve">
          <source>By default, Ember will attempt to instantiate a registered factory when it is looked up. When registering an already instantiated object instead of a class, use the &lt;code&gt;instantiate: false&lt;/code&gt; option to avoid attempts to re-instantiate it during lookups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2d76a4c9eebb602f6b3e859ce500dd273905c1e" translate="yes" xml:space="preserve">
          <source>By default, Ember will lookup a route's controller that matches the name of the route (i.e. &lt;code&gt;App.PostController&lt;/code&gt; for &lt;code&gt;App.PostRoute&lt;/code&gt;). However, if you would like to define a specific controller to use, you can do so using this property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca133aebe6d5f58f902cdeb7505db4d5e9e8caf" translate="yes" xml:space="preserve">
          <source>By default, Ember will use &lt;code&gt;pushState&lt;/code&gt; to update the URL in the address bar in response to a controller query param property change. If you would like to use &lt;code&gt;replaceState&lt;/code&gt; instead, which prevents an additional item from being added to your browser's history, you can specify this as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b1135bc0a8d2816333641964de7a779056ffc03" translate="yes" xml:space="preserve">
          <source>By default, Ember.js will extend the prototypes of native JavaScript objects in the following ways:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2346823cdf60d6253f5a11f022e58817de7bef12" translate="yes" xml:space="preserve">
          <source>By default, a route handler will render the template with the same name as the route. Take this router:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5cfecead5797053c6caf503b3b9088ec223de1" translate="yes" xml:space="preserve">
          <source>By default, an action will stop bubbling once a handler defined on the &lt;code&gt;actions&lt;/code&gt; hash handles it. To continue bubbling the action, you must return &lt;code&gt;true&lt;/code&gt; from the handler:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db95e1ddc416ca4dcc871a866afbc49b8abcf3d8" translate="yes" xml:space="preserve">
          <source>By default, attributes are passed through as-is, unless you specified an attribute type (&lt;code&gt;DS.attr('date')&lt;/code&gt;). If you specify a transform, the JavaScript value will be serialized when inserted into the JSON hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1b2b7d2b99362e2156353bd07439b10a9f15d39" translate="yes" xml:space="preserve">
          <source>By default, belongs-to relationships are converted into IDs when inserted into the JSON hash.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d439431cda7033139db4a539bfbf7a27c9249cbe" translate="yes" xml:space="preserve">
          <source>By default, calling &lt;code&gt;Ember.Application.create()&lt;/code&gt; will automatically initialize your application by calling the &lt;code&gt;Ember.Application.initialize()&lt;/code&gt; method. If you need to delay initialization, you can call your app's &lt;code&gt;deferReadiness()&lt;/code&gt; method. When you are ready for your app to be initialized, call its &lt;code&gt;advanceReadiness()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3921b9dc08e373e9d7465188c32b5c7838b109f" translate="yes" xml:space="preserve">
          <source>By default, each component is backed by a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element. If you were to look at a rendered component in your developer tools, you would see a DOM representation that looked something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b939d68aa4956ef0e362b83dce5142a34a01e09f" translate="yes" xml:space="preserve">
          <source>By default, helpers and components do not accept &lt;em&gt;data attributes&lt;/em&gt;. For example</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cf516ec9031f8a0657f90941a4445c3807f4cd4" translate="yes" xml:space="preserve">
          <source>By default, helpers are &lt;em&gt;stateless&lt;/em&gt;. They are passed inputs (parameters and a hash), they perform an operation on those inputs, and return a single output. They have no side-effects and don't save any information that is used on subsequent runs of the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e61f18b8cb9b58e044b028111987ced90ec2b750" translate="yes" xml:space="preserve">
          <source>By default, if a model promise rejects during a transition, the transition is aborted, no new destination route templates are rendered, and an error is logged to the console.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f523b2abe862b013a9c330366793eecbc8c121a3" translate="yes" xml:space="preserve">
          <source>By default, if your route has a dynamic segment ending in &lt;code&gt;_id&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d54476788d0aaf696ac7249976396c8f62fcb0b" translate="yes" xml:space="preserve">
          <source>By default, it creates a JSON object with a key for each attribute and belongsTo relationship.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc01aca9ddad6593518924f00fc71526261dc06" translate="yes" xml:space="preserve">
          <source>By default, it pluralizes the type's name (for example, 'post' becomes 'posts' and 'person' becomes 'people').</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f39e95b2bceecaa468b43bc7bc3713edfbdc52ab" translate="yes" xml:space="preserve">
          <source>By default, it pluralizes the type's name (for example, 'post' becomes 'posts' and 'person' becomes 'people'). To override the pluralization see &lt;a href=&quot;#method_pathForType&quot;&gt;pathForType&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b9ce8f8dc442252e04d7b7433af6a43768e10cf" translate="yes" xml:space="preserve">
          <source>By default, query param values in Ember are &quot;sticky&quot;, in that if you make changes to a query param and then leave and re-enter the route, the new value of that query param will be preserved (rather than reset to its default). This is a particularly handy default for preserving sort/filter parameters as you navigate back and forth between routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cdcbdedd1009d87591c7874cc98d33d692ece43" translate="yes" xml:space="preserve">
          <source>By default, registrations are treated as &quot;singletons&quot;. This simply means that an instance will be created when it is first looked up, and this same instance will be cached and returned from subsequent lookups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db37c21ab60a34deca18f6033d7aba2d4e5552c0" translate="yes" xml:space="preserve">
          <source>By default, specifying &lt;code&gt;foo&lt;/code&gt; as a controller query param property will bind to a query param whose key is &lt;code&gt;foo&lt;/code&gt;, e.g. &lt;code&gt;?foo=123&lt;/code&gt;. You can also map a controller property to a different query param key using the following configuration syntax:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0073a1ec75825f7d847ed41eec405ae5254f86db" translate="yes" xml:space="preserve">
          <source>By default, the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.Templates.helpers.html#method_action&quot;&gt;&lt;code&gt;{{action}}&lt;/code&gt;&lt;/a&gt; helper listens for click events and triggers the action when the user clicks on the element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbed8bdb5ac81c386a4c87a428dd6cd0d8fcf5e0" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;setupController&lt;/code&gt; hook sets the &lt;code&gt;model&lt;/code&gt; property of the controller to the &lt;code&gt;model&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff6c981fe4aced844298461f508dffc81659763" translate="yes" xml:space="preserve">
          <source>By default, the &lt;code&gt;{{action}}&lt;/code&gt; helper prevents the default browser action of the DOM event. If you want to allow the browser action, you can stop Ember from preventing it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cffaa4862efc54226cf88901c712194f75c8576" translate="yes" xml:space="preserve">
          <source>By default, the RESTAdapter will send the query params sorted alphabetically to the server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921e00e5dedf98782420379db324a08f350606a9" translate="yes" xml:space="preserve">
          <source>By default, the action handler receives the first parameter of the event listener, the event object the browser passes to the handler, so &lt;code&gt;bandDidChange&lt;/code&gt; prints &lt;code&gt;Event {}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9db4e9a65c7168d1e0ee06a4bff3243460adb1bd" translate="yes" xml:space="preserve">
          <source>By default, the application sets up these event listeners on the document body. However, in cases where you are embedding an Ember application inside an existing page, you may want it to set up the listeners on an element inside the body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c05478471a1decbce75890fa12c2d46840e12aa7" translate="yes" xml:space="preserve">
          <source>By default, the application's &lt;code&gt;Ember.EventDispatcher&lt;/code&gt; listens for a set of standard DOM events, such as &lt;code&gt;mousedown&lt;/code&gt; and &lt;code&gt;keyup&lt;/code&gt;, and delegates them to your application's &lt;code&gt;Ember.View&lt;/code&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c82a0d32d4ba3b8aa8a3e3616a54138c3fd231e" translate="yes" xml:space="preserve">
          <source>By default, the data will be deserialized using a default serializer (the application serializer if it exists).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790465ab5555e9fbfb798b4e477576ff07b98827" translate="yes" xml:space="preserve">
          <source>By default, the name of the Boolean property is dasherized. You can customize the class name applied by delimiting it with a colon:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c617b39af17acb89a63dac6e50e0941fe679624" translate="yes" xml:space="preserve">
          <source>By default, the render buffer will use a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; tag for views.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15fe058599ba8351b2ae7aa80bb97bec6a180d05" translate="yes" xml:space="preserve">
          <source>By default, the router will begin trying to translate the current URL into application state once the browser emits the &lt;code&gt;DOMContentReady&lt;/code&gt; event. If you need to defer routing, you can call the application's &lt;code&gt;deferReadiness()&lt;/code&gt; method. Once routing can begin, call the &lt;code&gt;advanceReadiness()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b81d8fed92bf147220dfee742151538020231ee" translate="yes" xml:space="preserve">
          <source>By default, the store will talk to your backend using a standard REST mechanism. You can customize how the store talks to your backend by specifying a custom adapter:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483b91ed636b9ad3863e53255b6f4826d53bcfb2" translate="yes" xml:space="preserve">
          <source>By default, the value of the target property is set to the router, and is injected when a controller is instantiated. This injection is applied as part of the application's initialization process. In most cases the &lt;code&gt;target&lt;/code&gt; property will automatically be set to the logical consumer of actions for the controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60286e5362a48018810276af0272f1c5f23d0897" translate="yes" xml:space="preserve">
          <source>By default, when you extend an Ember class a property defined in the subclass overrides a property with the same name that is defined in the superclass. However, there are some cases where it is preferable to build up a property's value by combining the superclass' property value with the subclass' value. An example of this in use within Ember is the &lt;code&gt;classNames&lt;/code&gt; property of &lt;code&gt;Ember.View&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141551cc0f38eb0e3405d80788a76b219cd01eab" translate="yes" xml:space="preserve">
          <source>By default, when you extend an Ember class a property defined in the subclass overrides a property with the same name that is defined in the superclass. However, there are some cases where it is preferable to build up a property's value by merging the superclass property value with the subclass property's value. An example of this in use within Ember is the &lt;code&gt;queryParams&lt;/code&gt; property of routes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ad3553f9d6ef3c9e3238830ddef88e713377559" translate="yes" xml:space="preserve">
          <source>By default, when you run &lt;code&gt;ember test --server&lt;/code&gt;, Ember CLI runs the &lt;a href=&quot;https://github.com/testem/testem&quot;&gt;Testem test runner&lt;/a&gt;, which runs Qunit in Chrome and &lt;a href=&quot;http://phantomjs.org/&quot;&gt;PhantomJS&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0850d5e1a158bd3b887c16df76f38a385718772" translate="yes" xml:space="preserve">
          <source>By default, your application will render the &lt;a href=&quot;https://guides.emberjs.com/routing/defining-your-routes/#toc_the-application-route&quot;&gt;application template&lt;/a&gt; and attach it to the document's &lt;code&gt;body&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff3b597e0cf19fb03a609816b67c53bcc0cc4cd1" translate="yes" xml:space="preserve">
          <source>By example having a user that has many pets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf547008e8efe197154dbdf1126f1f6ccd7729f9" translate="yes" xml:space="preserve">
          <source>By measuring the render time, the Inspector adds a slight delay to the rendering process. As such, the duration is not an exact representation of expected rendering time for a production application. Thus, the rendering duration is more useful to compare times than as an absolute measure of performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="737735ccfb0b0b447ca4c19d08766c885d30f5b8" translate="yes" xml:space="preserve">
          <source>By overwriting &lt;code&gt;modelNameFromPayloadType&lt;/code&gt; you can specify that the &lt;code&gt;administrator&lt;/code&gt; model should be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023a30eaf5a49f0481c0ef84076c43c8239bcdd2" translate="yes" xml:space="preserve">
          <source>By overwriting &lt;code&gt;modelNameFromPayloadType&lt;/code&gt; you can specify that the &lt;code&gt;post&lt;/code&gt; model should be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="429e37999eda7e7026bbcc4685fdb4cba268e8ca" translate="yes" xml:space="preserve">
          <source>By overwriting &lt;code&gt;payloadTypeFromModelName&lt;/code&gt; you can specify that the namespaces model name for the &lt;code&gt;administrator&lt;/code&gt; should be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bef8b706f04806f62e4f3468b01e30a26956abbe" translate="yes" xml:space="preserve">
          <source>By overwriting &lt;code&gt;payloadTypeFromModelName&lt;/code&gt; you can specify that the namespaces model name for the &lt;code&gt;post&lt;/code&gt; should be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b69f4a933f416671bd7cfd56698b349b63d52ac" translate="yes" xml:space="preserve">
          <source>By providing a standardized interface for dealing with enumerables, Ember.js allows you to completely change the way your underlying data is stored without having to modify the other parts of your application that access it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bfd482b47c320acff2577091c26c8387983ce16" translate="yes" xml:space="preserve">
          <source>By providing everything you need to build production-ready web applications in an integrated package, Ember makes starting new projects a breeze.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="493ca33d3e956aba796b32641e7de45853baef52" translate="yes" xml:space="preserve">
          <source>By supplying the &lt;code&gt;target&lt;/code&gt; attribute, the action helper will look to invoke the &lt;code&gt;sendMessage&lt;/code&gt; action directly on the messaging service, saving us from writing code on the component that just passes the action along to the service.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f540306cc9ff4546e79d387aa4b20b793e6a737" translate="yes" xml:space="preserve">
          <source>By the end of this section we want to have created the following new routes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b6c4b8addee6f0bec9b64fdc066f75fd594e81" translate="yes" xml:space="preserve">
          <source>CDN</source>
          <target state="translated">CDN</target>
        </trans-unit>
        <trans-unit id="194e13da720a1f025685e5d677eba8a1aff3860a" translate="yes" xml:space="preserve">
          <source>CSS</source>
          <target state="translated">CSS</target>
        </trans-unit>
        <trans-unit id="60790f7c84170a8b87051d7e857118ffeb0465ee" translate="yes" xml:space="preserve">
          <source>Caching</source>
          <target state="translated">Caching</target>
        </trans-unit>
        <trans-unit id="f8e8bd547385dcdb567e64eed96b27618759fa66" translate="yes" xml:space="preserve">
          <source>Call &lt;code&gt;advanceReadiness&lt;/code&gt; after any asynchronous setup logic has completed. Each call to &lt;code&gt;deferReadiness&lt;/code&gt; must be matched by a call to &lt;code&gt;advanceReadiness&lt;/code&gt; or the application will never become ready and routing will not begin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ec1ee53fa58864a3a279aec91ea9afb93d2426" translate="yes" xml:space="preserve">
          <source>Call on a computed property to set it into non-cached mode. When in this mode the computed property will not automatically cache the return value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f44c3bca04c871d9cce398e922b64605e5f12d" translate="yes" xml:space="preserve">
          <source>Call on a computed property to set it into read-only mode. When in this mode the computed property will throw an error when set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ece183225a0efccddb554ff9914214d421b2a9" translate="yes" xml:space="preserve">
          <source>Callback to call to add records. Takes an array of objects containing wrapped records. The object should have the following properties: columnValues: {Object} The key and value of a table cell. object: {Object} The actual record object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31fc6a6a159d6dbc0be6149d6e051f1901169db1" translate="yes" xml:space="preserve">
          <source>Callback to call to add types. Takes an array of objects containing wrapped types (returned from `wrapModelType`).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16d7f263d8d77f14c773310b60047fb833dd247" translate="yes" xml:space="preserve">
          <source>Callback to call when a record has changed. Takes an array of objects containing wrapped records.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85170d57b160a05d2cb7daeb1d359f0514acf701" translate="yes" xml:space="preserve">
          <source>Callback to call when a record has removed. Takes the following parameters: index: The array index where the records were removed. count: The number of records removed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5888b3b2af36f99abf196278c53bfcad6e7f355" translate="yes" xml:space="preserve">
          <source>Callback to call when a type has changed. Takes an array of objects containing wrapped types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c373ab9d6183b08354b5457d57725dd9c3e8ff" translate="yes" xml:space="preserve">
          <source>Called after a component has been rendered, both on initial render and in subsequent rerenders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1de915ef5025b2b3dfae5f875e92af0cbf4f00b" translate="yes" xml:space="preserve">
          <source>Called before a component has been rendered, both on initial render and in subsequent rerenders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5220d073a68753a16fcc7159a1a84c8a9fb24306" translate="yes" xml:space="preserve">
          <source>Called by the store in order to fetch a JSON array for all of the records for a given type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b861ca24cb698668a4e51f066df8e204b2074ae" translate="yes" xml:space="preserve">
          <source>Called by the store in order to fetch a JSON array for the records that match a particular query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07913b3cddfe3e5bb7fa158c83a8a1fd77b8662" translate="yes" xml:space="preserve">
          <source>Called by the store in order to fetch a JSON array for the unloaded records in a has-many relationship that were originally specified as a URL (inside of &lt;code&gt;links&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd9c181dfd5aac6e6292b97414bb4fddc81c496" translate="yes" xml:space="preserve">
          <source>Called by the store in order to fetch a JSON object for the record that matches a particular query.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7ba4c9eb5b5ad30545c0e1396e35020edd3b9c" translate="yes" xml:space="preserve">
          <source>Called by the store in order to fetch several records together if &lt;code&gt;coalesceFindRequests&lt;/code&gt; is true</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07993193edeccb40c95509b85ab278ef5eb47b1b" translate="yes" xml:space="preserve">
          <source>Called by the store in order to fetch the JSON for a given type and ID.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1bd6ed1a95e6c7c1673ee61040c3c013263dc08" translate="yes" xml:space="preserve">
          <source>Called by the store in order to fetch the JSON for the unloaded record in a belongs-to relationship that was originally specified as a URL (inside of &lt;code&gt;links&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6031012196f11987168ec8c1ea5dbd4aa45e207f" translate="yes" xml:space="preserve">
          <source>Called by the store when a newly created record is saved via the &lt;code&gt;save&lt;/code&gt; method on a model record instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d18e2db923c7409ea762495e71a794c5a973c2" translate="yes" xml:space="preserve">
          <source>Called by the store when a record is deleted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b8f66f968f001148fa8e9d616947867cbdcf3c" translate="yes" xml:space="preserve">
          <source>Called by the store when an existing record is saved via the &lt;code&gt;save&lt;/code&gt; method on a model record instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32cc3cefb827f777de74e944cf0cec9e9e538217" translate="yes" xml:space="preserve">
          <source>Called when a record is saved in order to convert the record into JSON.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940016a46367b993027f4a6eb7a7cec32dab99be" translate="yes" xml:space="preserve">
          <source>Called when a view is going to insert an element into the DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bd5839ef774ee327ed87ffa8bc3a5a3ff0fdfe7" translate="yes" xml:space="preserve">
          <source>Called when the Application has become ready, immediately before routing begins. The call will be delayed until the DOM has become ready.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cee6f951c093c92d81556036e5b471a3824ed8ad" translate="yes" xml:space="preserve">
          <source>Called when the attributes passed into the component have been changed. Called only during a rerender, not during an initial render.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5df6af31449bb3b8fbae1f8c15c88edfbead15be" translate="yes" xml:space="preserve">
          <source>Called when the attributes passed into the component have been updated. Called both during the initial render of a container and during a rerender. Can be used in place of an observer; code placed here will be executed every time any attribute updates.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c54a29823f015442bd8e473503a54ddbec8ae63f" translate="yes" xml:space="preserve">
          <source>Called when the component has updated and rerendered itself. Called only during a rerender, not during an initial render.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51947d6791a9aa9c03b4e63e7bd9b52b22025810" translate="yes" xml:space="preserve">
          <source>Called when the component is about to update and rerender itself. Called only during a rerender, not during an initial render.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ad3d81c1e2e4ad1eb7d97e0f6c959590ef9203" translate="yes" xml:space="preserve">
          <source>Called when the element of the view has been inserted into the DOM. Override this function to do any set up that requires an element in the document body.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="907d16b959f42a5bd7d5c46e12fd9d1c8bb0d6d1" translate="yes" xml:space="preserve">
          <source>Called when the element of the view is going to be destroyed. Override this function to do any teardown that requires an element, like removing event listeners.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9f356c8691eabcd3901d6e85188d65cad60ce7" translate="yes" xml:space="preserve">
          <source>Called when the view is about to rerender, but before anything has been torn down. This is a good opportunity to tear down any manual observers you have installed based on the DOM state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77d4ecd7f8cfc957713f72f7f4c448941441154d" translate="yes" xml:space="preserve">
          <source>Calling &lt;code&gt;store.modelFor('post').typeForRelationship('comments', store)&lt;/code&gt; will return &lt;code&gt;Comment&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e89327371bccfb98e0b46706675f8f1f52e3f9d3" translate="yes" xml:space="preserve">
          <source>Calling Actions Up Multiple Component Layers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7071c545851f37eb37c1b3f58d880ced6e0fae" translate="yes" xml:space="preserve">
          <source>Calling setURL or replaceURL will not trigger onUpdateURL callbacks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="581e2c16fe7a15e4aad968df53b2f8942d5ba5ff" translate="yes" xml:space="preserve">
          <source>Calls &lt;a href=&quot;https://emberjs.com/api/classes/Ember.String.html#method_loc&quot;&gt;Ember.String.loc&lt;/a&gt; with the provided string. This is a convenient way to localize text within a template. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54845d6d7056e375222d17c661743ba8f5b73b44" translate="yes" xml:space="preserve">
          <source>Calls an action passed to a component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abb1cc03ac8cbd5a4a12688e595371b2bff8a781" translate="yes" xml:space="preserve">
          <source>Cancels a scheduled item. Must be a value returned by &lt;code&gt;run.later()&lt;/code&gt;, &lt;code&gt;run.once()&lt;/code&gt;, &lt;code&gt;run.scheduleOnce()&lt;/code&gt;, &lt;code&gt;run.next()&lt;/code&gt;, &lt;code&gt;run.debounce()&lt;/code&gt;, or &lt;code&gt;run.throttle()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f30fe844089a04e968d09094ef088ea5f30265b5" translate="yes" xml:space="preserve">
          <source>Cancels subscription for given name, target, and method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84fce85e81800125fd16f26deda02a8b1e33bfcb" translate="yes" xml:space="preserve">
          <source>Causes the run loop to process any pending events. This is used to ensure that any async operations from other helpers (or your assertions) have been processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="480bd17189258d07915ad129dccf24a948c44df7" translate="yes" xml:space="preserve">
          <source>Chaining</source>
          <target state="translated">Chaining</target>
        </trans-unit>
        <trans-unit id="747444332aeffc3eef2ce370832ee8b221d62ed1" translate="yes" xml:space="preserve">
          <source>Chaining computed properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81876a75b6c11d0a4a7380ac5fc0f13d84b555c0" translate="yes" xml:space="preserve">
          <source>Changing the Root Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb56b2f4a1aef06e4d9dd6e8298c509bdda1163" translate="yes" xml:space="preserve">
          <source>Check if a factory is registered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa8aeb8c59d2a88646dcb3fe653d3aa8f2882934" translate="yes" xml:space="preserve">
          <source>Check if the given hasMany relationship should be serialized</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8531c2fa636cf04afcdf80299056cf9845483471" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;http://emberjs.com/api/classes/Ember.run.html&quot;&gt;Ember.run&lt;/a&gt; API documentation, as well as the &lt;a href=&quot;https://github.com/ebryn/backburner.js/&quot;&gt;Backburner library&lt;/a&gt; that powers the run loop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d66c3d0758e71b315e012814dc35df62cfab9d2" translate="yes" xml:space="preserve">
          <source>Checkbox</source>
          <target state="translated">Checkbox</target>
        </trans-unit>
        <trans-unit id="2c523bf7495538892687c542b2d9888fc469e533" translate="yes" xml:space="preserve">
          <source>Checkboxes</source>
          <target state="translated">Checkboxes</target>
        </trans-unit>
        <trans-unit id="2fea3eb05dc07ef413a334c57e3448cfdc7061fa" translate="yes" xml:space="preserve">
          <source>Checkboxes are special forms of the &lt;code&gt;{{input}}&lt;/code&gt; helper. To create a &lt;code&gt;&amp;lt;checkbox /&amp;gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63abc7d166e5489e52e8532c4605f9920ab8846e" translate="yes" xml:space="preserve">
          <source>Checkboxes support the following properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec5b28c16b98617fce9a0441529a68fdff7760a8" translate="yes" xml:space="preserve">
          <source>Checks if there is error messages for the given attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1baaea011091ccfa9c198d18dfa05fa409d82fad" translate="yes" xml:space="preserve">
          <source>Checks to see if object has any subscriptions for named event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1d78e80a3d1cfe1b1677a5f1fcea77d3b76974c" translate="yes" xml:space="preserve">
          <source>Checks to see if the &lt;code&gt;methodName&lt;/code&gt; exists on the &lt;code&gt;obj&lt;/code&gt;, and if it does, invokes it with the arguments passed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e7f44a4ef57294461392b0f97b47b97960bdd1" translate="yes" xml:space="preserve">
          <source>Child Routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ff0a9f717a03d6f4a43a6aa747bb449696f4978" translate="yes" xml:space="preserve">
          <source>Choose your default test adapter (for your framework of choice).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03eecb491aabc0a3bea5e6829c6a18dc79a95bef" translate="yes" xml:space="preserve">
          <source>Choosing the Tests to Run</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ad93534b1bc3e406a31d7d2de47a9a7588513b2" translate="yes" xml:space="preserve">
          <source>Class name bindings can also refer to object values that are found by traversing a path relative to the component itself:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10455455dce8b613df1c4e35477b1db3756890d9" translate="yes" xml:space="preserve">
          <source>Class-based Helpers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c66339770f835564b69524d6f6c3cd3115ae3ddf" translate="yes" xml:space="preserve">
          <source>ClassNamesSupport</source>
          <target state="translated">ClassNamesSupport</target>
        </trans-unit>
        <trans-unit id="a12f30e28b7a0b706621e95213c2fde92a5c107e" translate="yes" xml:space="preserve">
          <source>Classes and Instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4bf31ff5f00cb52c9d7a699eb816ad616cedca" translate="yes" xml:space="preserve">
          <source>Classes and Namespaces</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a336025c2265637f53cae22e49873a6ad98f457b" translate="yes" xml:space="preserve">
          <source>Clean pushState paths accessed by hashchange-only browsers will be redirected to the hash-equivalent and vice versa so future transitions are consistent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7db198a937ac58d5e998c1fdbce3834a5ff9eca3" translate="yes" xml:space="preserve">
          <source>Click Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d0a52c3c9a82f88d20f9f8a4657142368e17d2" translate="yes" xml:space="preserve">
          <source>Click on &quot;Add To Chrome&quot;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5976030bb81ba6b90246a4dee24078bc8417982" translate="yes" xml:space="preserve">
          <source>Click on &quot;Add to Firefox&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f7791258eecbe6193ef5d03ff47d36757aad2d" translate="yes" xml:space="preserve">
          <source>Click on &lt;code&gt;Extensions&lt;/code&gt; -&amp;gt; &lt;code&gt;Preferences&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5580bfb649a1da8081b63d4ebd44de405b36429a" translate="yes" xml:space="preserve">
          <source>Click on a row to inspect a given instance using the Object Inspector.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="379c516f5c15eac1d40a91cb1e693e83637f6da9" translate="yes" xml:space="preserve">
          <source>Click on the &quot;Transition Plan&quot; link for information on how to remove the deprecation warning, and you'll be taken to a helpful deprecation guide on the Ember website.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9113c8defc5399b1aa6b4fec9072cb353a3d7d3d" translate="yes" xml:space="preserve">
          <source>Click on the &quot;clear&quot; icon to remove existing render logs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ec2e736bf7fe50756ce9a0bcd3523f37cae1301" translate="yes" xml:space="preserve">
          <source>Click on the &lt;code&gt;X&lt;/code&gt; button to deselect a template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796078e8de827c6698b68a62649cbb4c1095fd53" translate="yes" xml:space="preserve">
          <source>Click on the Container tab, and you will see a list of instances the container is holding. Click on a type to see the list of all instances of that type maintained by the container.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adf537e0824a80b60b87af4f63469a8405ee3ec6" translate="yes" xml:space="preserve">
          <source>Click on the Modified pill to display unsaved record modifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b943ddc6135f658fa557860d510a52c379b9c797" translate="yes" xml:space="preserve">
          <source>Clicking on the title will load the detail page for that rental.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd1afbd7e4939e9163a0ec17f8b17a1fedc7b7f" translate="yes" xml:space="preserve">
          <source>Clicking the anchor element will send the action to the component. Ember will then go into the &lt;code&gt;actions&lt;/code&gt; hash and call the &lt;code&gt;toggleImageSize&lt;/code&gt; function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90804f8c754c8310afc2b41baf7b63b6f847a702" translate="yes" xml:space="preserve">
          <source>Clicking the pencil icon will bring you to GitHub's editor for that guide so you can edit right away, using the Markdown markup language. This is the fastest way to correct a typo, a missing word, or an error in a code sample.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b82c472e746e3fd9af72f1ba7bcd6b3d181d33eb" translate="yes" xml:space="preserve">
          <source>Clicks an element and triggers any actions triggered by the element's &lt;code&gt;click&lt;/code&gt; event and returns a promise that fulfills when all resulting async behavior is complete.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="838b42ab129d05b0ee07878b727af5ab4c3e6f1c" translate="yes" xml:space="preserve">
          <source>Clicks an element and triggers any actions triggered by the element's &lt;code&gt;click&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164ef5e38864d4d58b039aa64508346d0cecf5b2" translate="yes" xml:space="preserve">
          <source>Closure actions curry both their scope and any arguments. When invoked, any additional arguments are added to the already curried list. Actions should be invoked using the &lt;a href=&quot;https://emberjs.com/api/classes/Ember.Component.html#method_sendAction&quot;&gt;sendAction&lt;/a&gt; method. The first argument to &lt;code&gt;sendAction&lt;/code&gt; is the action to be called, and additional arguments are passed to the action function. This has interesting properties combined with currying of arguments. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d73d01f1b8fca7f36388046a29b091f528215d00" translate="yes" xml:space="preserve">
          <source>Code behind these flags can be conditionally enabled (or completely removed) based on your project's configuration. This allows newly developed features to be selectively released when the Ember.js community considers them ready for production use.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b559ac5e97bf45f37354e8975188e8aa3c53283" translate="yes" xml:space="preserve">
          <source>CoffeeScript vs TypeScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38218836e07bdda937162d7b0216b975d919c27" translate="yes" xml:space="preserve">
          <source>CoffeeScript, TypeScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f07ac22a9e938c6666a19f6f6ddb015f1dbbaa47" translate="yes" xml:space="preserve">
          <source>Common questions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54c6dae38b2e4ee4620d2efe61fbe54a454e78b" translate="yes" xml:space="preserve">
          <source>Community Adapters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="932fc24342f848e62f86a992ce46d14cea5534fa" translate="yes" xml:space="preserve">
          <source>Community Serializers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f554b1c07762d0870ca65951a8df3711d4dafd1f" translate="yes" xml:space="preserve">
          <source>Compares two javascript values and returns:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="869703afacb76a26aab32c260052c78aac8886a6" translate="yes" xml:space="preserve">
          <source>Compares two objects, returning true if they are equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d96a1036b5e38a5de3f96368bd5667e3cac493" translate="yes" xml:space="preserve">
          <source>Compiling Assets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92c529e0731c57efd7550480196484040b33c3e" translate="yes" xml:space="preserve">
          <source>Component</source>
          <target state="translated">Component</target>
        </trans-unit>
        <trans-unit id="c351e01a2c27390d70e5588f4f284fdd026fb578" translate="yes" xml:space="preserve">
          <source>Component teardown can be triggered by a number of different conditions. For instance, the user may navigate to a different route, or a conditional Handlebars block surrounding your component may change:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc817416b5aedbc0794fa6e9aeedcb322fb2beb" translate="yes" xml:space="preserve">
          <source>Component.$()</source>
          <target state="translated">Component.$()</target>
        </trans-unit>
        <trans-unit id="9289473eeedaee09d76c8cf1b6994d8550debf46" translate="yes" xml:space="preserve">
          <source>Components</source>
          <target state="translated">Components</target>
        </trans-unit>
        <trans-unit id="dee01526752adccd47df414f0a334d4bc423cf42" translate="yes" xml:space="preserve">
          <source>Components and Inline Views</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4d10117cc9c08eb89933f817e9683f815301c3b" translate="yes" xml:space="preserve">
          <source>Components are a great way to create powerful, interactive, and self-contained custom HTML elements. It is important to test the component's methods &lt;em&gt;and&lt;/em&gt; the user's interaction with the component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22e647444f84eaa2d6bf9212922b4c5210e3f1c" translate="yes" xml:space="preserve">
          <source>Components are isolated from their surroundings, so any data that the component needs has to be passed in.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7600552cbd48bcc21fbeb5951cbbfb283522988d" translate="yes" xml:space="preserve">
          <source>Components built this way are commonly referred to as &quot;Contextual Components&quot;, allowing inner components to be wrapped within the context of outer components without breaking encapsulation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9444352fd41bcf5fb044e4ea4bdb531612af1d3" translate="yes" xml:space="preserve">
          <source>Components can be tested with integration tests using the &lt;code&gt;moduleForComponent&lt;/code&gt; helper.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcdbd63111aaf9f2949257c006e5ab6a1037db3" translate="yes" xml:space="preserve">
          <source>Components can have properties passed in (&lt;a href=&quot;../passing-properties-to-a-component&quot;&gt;Passing Properties to a Component&lt;/a&gt;), but they can also return output to be used in a block expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c13999953421707c0688017343c023fa037088ec" translate="yes" xml:space="preserve">
          <source>Components can respond to user-initiated events by implementing a method that matches the event name. A &lt;code&gt;jQuery.Event&lt;/code&gt; object will be passed as the argument to this method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf9667dd99d1a4ab3a3f942917890c459085fce" translate="yes" xml:space="preserve">
          <source>Components can respond to user-initiated events in one of three ways: method implementation, through an event manager, and through &lt;code&gt;{{action}}&lt;/code&gt; helper use in their template or layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e4c9585bb6867e3b1c128817d8dbf5a0038fbde" translate="yes" xml:space="preserve">
          <source>Components consist of two parts: a template written in Handlebars, and a source file written in JavaScript that defines the component's behavior. For example, our property rental application might have a component for displaying all the rentals called &lt;code&gt;all-rentals&lt;/code&gt;, and another component for displaying an individual rental called &lt;code&gt;rental-tile&lt;/code&gt;. The &lt;code&gt;rental-tile&lt;/code&gt; component might define a behavior that lets the user hide and show the image property of the rental.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f1714f9c27f754d6e8c95e906eb92e5ab55c6f2" translate="yes" xml:space="preserve">
          <source>Components must have a &lt;code&gt;-&lt;/code&gt; in their name to avoid conflicts with built-in controls that wrap HTML elements. This is consistent with the same requirement in web components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebb732fe5076f69890585a717aabfc02a0314526" translate="yes" xml:space="preserve">
          <source>Components must have at least one dash in their name. So &lt;code&gt;blog-post&lt;/code&gt; is an acceptable name, and so is &lt;code&gt;audio-player-controls&lt;/code&gt;, but &lt;code&gt;post&lt;/code&gt; is not. This prevents clashes with current or future HTML element names, aligns Ember components with the W3C &lt;a href=&quot;https://dvcs.w3.org/hg/webcomponents/raw-file/tip/spec/custom/index.html&quot;&gt;Custom Elements&lt;/a&gt; spec, and ensures Ember detects the components automatically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0136f792e2f374d5e0077eea6f63f8e26a41ae" translate="yes" xml:space="preserve">
          <source>Components starting in Ember 2 utilize closure actions. Closure actions allow components to directly invoke functions provided by outer components.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bd86bd3f0d5ae194697eb2880e50cca80f426b" translate="yes" xml:space="preserve">
          <source>Computed Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056c10e3d36630c455735266e719f05d69f77f02" translate="yes" xml:space="preserve">
          <source>Computed Properties and Aggregate Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5585f6460b929d2746cbae383ac6276367598ba0" translate="yes" xml:space="preserve">
          <source>Computed Property Macros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f894d8b66d8c6a278137be22df2054b961b15b70" translate="yes" xml:space="preserve">
          <source>Computed properties allow you to treat a function like a property:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f472735cc51501ed69538bec41a83f7dfab5487" translate="yes" xml:space="preserve">
          <source>Computed properties are methods defined with the &lt;code&gt;property&lt;/code&gt; modifier declared at the end, such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb4a39572a63b64514d5e321d2820dec621f2d5" translate="yes" xml:space="preserve">
          <source>Computed properties in action</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d5edbbb5a16fc8d61460b5baa879b45e208231" translate="yes" xml:space="preserve">
          <source>Computed properties on the proxy itself can depend on delegated properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3868a8aafe0d74d9d87834ecb7ac09eccb3705" translate="yes" xml:space="preserve">
          <source>Computed properties, by default, observe any changes made to the properties they depend on and are dynamically updated when they're called. Let's use computed properties to dynamically update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce3328400d0e27d5267b835b5114a97e8b568579" translate="yes" xml:space="preserve">
          <source>Computed property macros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa2b77221b0b8fc8354d70c28047624776fcb78" translate="yes" xml:space="preserve">
          <source>ComputedProperty</source>
          <target state="translated">ComputedProperty</target>
        </trans-unit>
        <trans-unit id="7921dcd57190f62e54f020ddda3b1dd353ce81ca" translate="yes" xml:space="preserve">
          <source>Concatenates the given arguments into a string.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6a56385d0729f6ff4bf27671cc845cb6f2cfde5" translate="yes" xml:space="preserve">
          <source>Conditionals</source>
          <target state="translated">Conditionals</target>
        </trans-unit>
        <trans-unit id="526f10204b1ae0a288ec906170fd307d374a9085" translate="yes" xml:space="preserve">
          <source>Configuration hash for this route's queryParams. The possible configuration options and their defaults are as follows (assuming a query param whose controller property is &lt;code&gt;page&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12a1b7ea3d8321e2cb0ff8114e91a28fd5e20c5c" translate="yes" xml:space="preserve">
          <source>Configuring Attrs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065c7bfb7a34b6c74d4158725b8e5a5fb17008ed" translate="yes" xml:space="preserve">
          <source>Configuring Ember CLI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701e5a0385fd0f12089a4a23021b09573805c1c8" translate="yes" xml:space="preserve">
          <source>Configuring Your App</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72726babe24edbc56420837f3baa9b5292dd1454" translate="yes" xml:space="preserve">
          <source>Consider the following HTML snippet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc53f41d4c528eb43347a836891919335055512d" translate="yes" xml:space="preserve">
          <source>Consider the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d098cf65197f999e263e622ce25613b75f1a3315" translate="yes" xml:space="preserve">
          <source>Constrains the rules on &lt;code&gt;Ember.isNone&lt;/code&gt; by returning true for empty strings and empty arrays.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66eac9f25fca6275eb856b36876c61d8b049218e" translate="yes" xml:space="preserve">
          <source>Consuming yielded values with block params</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3726b469347bce68f6b7d9495f67ffcdec02d32b" translate="yes" xml:space="preserve">
          <source>ContainerDebugAdapter</source>
          <target state="translated">ContainerDebugAdapter</target>
        </trans-unit>
        <trans-unit id="4f8bf21182b67f593171c66703195f85e0a69ec2" translate="yes" xml:space="preserve">
          <source>ContainerProxyMixin</source>
          <target state="translated">ContainerProxyMixin</target>
        </trans-unit>
        <trans-unit id="3a132dbcaf90ce2515cdb61e723280cbc4e3ab43" translate="yes" xml:space="preserve">
          <source>ContainerProxyMixin  (public)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a65010d3dc2e8ddcf18334f983bd7a3bd2c5904" translate="yes" xml:space="preserve">
          <source>Content Delivery Network</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a36a5ffa6e0dcfb64fac1b2b3d6fb176de9689de" translate="yes" xml:space="preserve">
          <source>Controller</source>
          <target state="translated">Controller</target>
        </trans-unit>
        <trans-unit id="6411cb6767fa46af749b8367eea345429838939c" translate="yes" xml:space="preserve">
          <source>ControllerMixin</source>
          <target state="translated">ControllerMixin</target>
        </trans-unit>
        <trans-unit id="fd28161568c4e8e181bf8b34d2eb64190067fd07" translate="yes" xml:space="preserve">
          <source>Controllers</source>
          <target state="translated">Controllers</target>
        </trans-unit>
        <trans-unit id="5685ea45fdfc3b44d5b40abaed1fda373580cbe1" translate="yes" xml:space="preserve">
          <source>Controllers behave like a specialized type of Component that is rendered by the router when entering a Route.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4807f26692e140abd14b61cabaa6121fac1423fc" translate="yes" xml:space="preserve">
          <source>Convenience method to call &lt;code&gt;propertyWillChange&lt;/code&gt; and &lt;code&gt;propertyDidChange&lt;/code&gt; in succession.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aad7f1645c004117500b377da7c095acc6e1e27" translate="yes" xml:space="preserve">
          <source>Convention Over Configuration with JSON API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="653ebe743a2aa219350d9ce7bdb58ebebf536681" translate="yes" xml:space="preserve">
          <source>Conventional Names</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae76c6f53467daa5641e1d997e5bff9dce55639" translate="yes" xml:space="preserve">
          <source>Convert an array of errors in JSON-API format into an object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fce8c91db9a02943e1e8841d46f805d334cfd208" translate="yes" xml:space="preserve">
          <source>Convert an hash of errors into an array with errors in JSON-API format.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a2a610fb9541b15b27e82a851993193a8b4cac" translate="yes" xml:space="preserve">
          <source>Converts a camelized string into all lower case separated by underscores.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1cc9891f4bdce3226cd29c4d87de01321d20aee" translate="yes" xml:space="preserve">
          <source>Converts the enumerable into an array and sorts by the keys specified in the argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabc1e7e87211d60a85e8c964c38235b0264ec85" translate="yes" xml:space="preserve">
          <source>Converts the model name to a pluralized version of the model name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1adf51b92ea541bb5f7384b851e7a9a0b8ee119" translate="yes" xml:space="preserve">
          <source>Copy and paste the &lt;code&gt;scientists&lt;/code&gt; template into the &lt;code&gt;people-list&lt;/code&gt; component's template and edit it to look as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b776dcbb1bda113b5b45102d1506f58e750aa3" translate="yes" xml:space="preserve">
          <source>Copy properties from a source object to a target object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45b1f73ec9a1ec0a25cc6d0e50d7ded3bbcca6fe" translate="yes" xml:space="preserve">
          <source>Copyable</source>
          <target state="translated">Copyable</target>
        </trans-unit>
        <trans-unit id="c872753511d558c4ce512746cf585786dd025a3c" translate="yes" xml:space="preserve">
          <source>Core Concepts</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48f01b76f25ddd51376c3333729fd69b72eec2fc" translate="yes" xml:space="preserve">
          <source>CoreObject</source>
          <target state="translated">CoreObject</target>
        </trans-unit>
        <trans-unit id="fbfa3f22b91f92060a3f623f364178ea2589a1b2" translate="yes" xml:space="preserve">
          <source>CoreView</source>
          <target state="translated">CoreView</target>
        </trans-unit>
        <trans-unit id="6e157c5da4410b7e9de85f5c93026b9176e69064" translate="yes" xml:space="preserve">
          <source>Create</source>
          <target state="translated">Create</target>
        </trans-unit>
        <trans-unit id="b9526228c544b20e109151b82b17d3dbd68dc5c5" translate="yes" xml:space="preserve">
          <source>Create &lt;code&gt;store.createRecord('post').save()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0b19e45593cb03505b17ca088731175b081d540" translate="yes" xml:space="preserve">
          <source>Create a JSON representation of the record, using the serialization strategy of the store's adapter.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25b547b3ac607576e056cb271a92a484659bcd33" translate="yes" xml:space="preserve">
          <source>Create a New Application</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="515fe114a9221b7fc721200f18cec01dedf65d27" translate="yes" xml:space="preserve">
          <source>Create a UI Component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13412c2617a8047e5922a66a40aa9cef368046e" translate="yes" xml:space="preserve">
          <source>Create a new application container</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c89c7248013612d565a3a2186de4ca4c3e0d6eaa" translate="yes" xml:space="preserve">
          <source>Create a new record in the current store. The properties passed to this method are set on the newly created record.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac15e5b724f89c996e1b1382f23646c43733ae61" translate="yes" xml:space="preserve">
          <source>Create a new subclass of &lt;code&gt;DS.Adapter&lt;/code&gt; in the &lt;code&gt;app/adapters&lt;/code&gt; folder:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8775068e70f4e6f7a4afc3d3e3f5752951513325" translate="yes" xml:space="preserve">
          <source>Creates a new property that is an alias for another property on an object. Calls to &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt; this property behave as though they were called on the original property, but also print a deprecation warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2fb2f43349188f285311ea91472f98d1bc2fb8a" translate="yes" xml:space="preserve">
          <source>Creates a new property that is an alias for another property on an object. Calls to &lt;code&gt;get&lt;/code&gt; or &lt;code&gt;set&lt;/code&gt; this property behave as though they were called on the original property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47deeed9a98337e27fcf940d6379cd77d869e576" translate="yes" xml:space="preserve">
          <source>Creates a new subclass.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3c657bcaf8e95b6ee1501b6bd89eebff80ce548" translate="yes" xml:space="preserve">
          <source>Creates a property that lazily looks up a service in the container. There are no restrictions as to what objects a service can be injected into.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1112c9c8c4be1c72becf013a77d9dab5a234c486" translate="yes" xml:space="preserve">
          <source>Creates a property that lazily looks up another controller in the container. Can only be used when defining another controller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="722b1a096289105d16f7a891475f97822ad88af0" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of the passed object. A deep copy of the object is returned if the optional &lt;code&gt;deep&lt;/code&gt; argument is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a86ef97aa81c1d80c234008adffc28895967a27" translate="yes" xml:space="preserve">
          <source>Creates an &lt;code&gt;Ember.NativeArray&lt;/code&gt; from an Array like object. Does not modify the original object's contents. Ember.A is not needed if &lt;code&gt;EmberENV.EXTEND_PROTOTYPES&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt; (the default value). However, it is recommended that you use Ember.A when creating addons for ember or when you can not guarantee that &lt;code&gt;EmberENV.EXTEND_PROTOTYPES&lt;/code&gt; will be &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87a26141de566c599f33d2fc9171daa242bc9c9f" translate="yes" xml:space="preserve">
          <source>Creates an instance of a class. Accepts either no arguments, or an object containing values to initialize the newly instantiated object with.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c16143675aabddb742ce5826d188cbea9d05a8f" translate="yes" xml:space="preserve">
          <source>Creating Custom Transformations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc0084a59073aacee885d03a737cc91194ecd22" translate="yes" xml:space="preserve">
          <source>Creating Instances</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a8bb719e828702dad64946b98f8dcefa64c44c" translate="yes" xml:space="preserve">
          <source>Creating Records</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa0d93e1c516044da44ef30b46c32705f34ce4f7" translate="yes" xml:space="preserve">
          <source>Creating Your App</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac81805c96f32285d32d5bfd32d6e40679e326f3" translate="yes" xml:space="preserve">
          <source>Creating a Handlebars Helper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93dbba427455af5f80ba1b73bc0d4338da85e7a1" translate="yes" xml:space="preserve">
          <source>Creating a New App</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b3d9b4501b995a73300323c150dcc8cf5b5756" translate="yes" xml:space="preserve">
          <source>Creating a new application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5feb73a487895df4cb14371bfb4ea1e430a39e6" translate="yes" xml:space="preserve">
          <source>Creating a re-usable &quot;widget&quot; or control might be a good use-case for this. Browsers implement some of their controls using their own version of a shadow DOM.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8c929aaded92db6af448528537ead00d4bd27b" translate="yes" xml:space="preserve">
          <source>Creating an Adapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57eb53d53d918c1add64e5f5c0dd57c0983501ef" translate="yes" xml:space="preserve">
          <source>Creating an inflector and adding rules later.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d15977932557189728dcf9ea68ec4910bbf0695" translate="yes" xml:space="preserve">
          <source>Creating an inflector with a nondefault ruleset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa5d71ff1bd0aa79911f92a29c0608c0dff5a616" translate="yes" xml:space="preserve">
          <source>Creating an inflector with no rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bdce6024c6a7683df6c6da2d64f103ff53eae35" translate="yes" xml:space="preserve">
          <source>Creating an inflector with the default ember ruleset.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b1256f060a62d19d365dcad8f69dad94f636d1" translate="yes" xml:space="preserve">
          <source>Creating the Component</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2ab14b7dda4b3f6baf24658f362ea634f1d508e" translate="yes" xml:space="preserve">
          <source>Creating, Updating and Deleting</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3341a2c6371017e85fa8feb57eb615df6c8aad3c" translate="yes" xml:space="preserve">
          <source>Currently, our app is using hard-coded data for our rental listings, defined in the &lt;code&gt;rentals&lt;/code&gt; route handler. As our application grows, we will want to persist our rental data on a server, and make it easier to do advanced operations on the data, such as querying.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d15c190dc061fa90f26db6002884164fa174ee6" translate="yes" xml:space="preserve">
          <source>Currently, the engine name is the only argument that can be passed to &lt;code&gt;{{mount}}&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21b58c0349cfc51bdc825f0f41fdaa16f82487e3" translate="yes" xml:space="preserve">
          <source>Currently, there are three officially supported scenarios/configurations. Usages outside of these scenarios are not guaranteed to work, but please feel free to file bug reports documenting your experience and any issues you encountered to help expand support.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52642800afdb31d65c2a9656c65b3547305e84cc" translate="yes" xml:space="preserve">
          <source>Custom Property Grouping</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4952f257ef3693e4573c0ab2526c9015d562e6" translate="yes" xml:space="preserve">
          <source>Custom Test Helpers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f37d1984d82bbf5a162e24db6d2c39dcfd660e0" translate="yes" xml:space="preserve">
          <source>Custom Transforms</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3735d11e7313b67a150955ac1886ca2cca3fae82" translate="yes" xml:space="preserve">
          <source>Custom implementation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7f0ac9e007291a6ccc21d036f4711505ad9d0b1" translate="yes" xml:space="preserve">
          <source>Customization</source>
          <target state="translated">Customization</target>
        </trans-unit>
        <trans-unit id="ef4fb06a424c03e1a072a34b308cd44842a84b99" translate="yes" xml:space="preserve">
          <source>Customizing Adapters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2951552899ca7516d39f3ab7f7ecc4eb7f01dfe0" translate="yes" xml:space="preserve">
          <source>Customizing Attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22baa3509cca117e09f31c66c888ddc0005f384e" translate="yes" xml:space="preserve">
          <source>Customizing Serializers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e15b7f56b26e5a5332324164fa7bd7abdf7a2e05" translate="yes" xml:space="preserve">
          <source>Customizing a Component&amp;#x27;s Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="755f1ee8516d02bf440a09c80d093f655a5cf410" translate="yes" xml:space="preserve">
          <source>Customizing a Component's Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bfd754dfdecef994aac335298945cc921fd3791" translate="yes" xml:space="preserve">
          <source>Customizing an App-Wide Serializer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e82f46565f87f30780c1a0ce05e27e7bfeeb153" translate="yes" xml:space="preserve">
          <source>Customizing meta</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="430e2e489f5695872bc2cd3586dba7cdd12cbe11" translate="yes" xml:space="preserve">
          <source>Customizing the Element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eded6b6ea092b8cfdd9a014d41efc694c9b21b3" translate="yes" xml:space="preserve">
          <source>Customizing the Element's Class</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f4a2e869e38612cb7d4a3aac6832a92630fe3ae" translate="yes" xml:space="preserve">
          <source>Customizing the JSONAPIAdapter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f5636098cd458ce9d22939f8e3e8deab0e9bd0" translate="yes" xml:space="preserve">
          <source>DELETE</source>
          <target state="translated">DELETE</target>
        </trans-unit>
        <trans-unit id="915b5eea1f31c57ae8a9c30ce548d144dfd3e821" translate="yes" xml:space="preserve">
          <source>DOM update and event callbacks</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ee0d2dca289c3eb54f4cc5e98db8d63e9b0794b" translate="yes" xml:space="preserve">
          <source>DS</source>
          <target state="translated">DS</target>
        </trans-unit>
        <trans-unit id="9614a58dc65986de7f6a5d8324c7fa4fc99aaac3" translate="yes" xml:space="preserve">
          <source>DS (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a06ea2d2f091d9b336f76447075f884d7fff2a3" translate="yes" xml:space="preserve">
          <source>DS (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="248dcf9f89496a83692c52d319da9c85d56fa7a9" translate="yes" xml:space="preserve">
          <source>DS.AbortError</source>
          <target state="translated">DS.AbortError</target>
        </trans-unit>
        <trans-unit id="64789b7fa774032bde1965c518a4a27a4654fa08" translate="yes" xml:space="preserve">
          <source>DS.Adapter</source>
          <target state="translated">DS.Adapter</target>
        </trans-unit>
        <trans-unit id="bfaaa86ffd063266eb26dbaad5c2739068cf951f" translate="yes" xml:space="preserve">
          <source>DS.Adapter (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cb8e7a8ab65824e6b1a5bc3832012f7a8378a66" translate="yes" xml:space="preserve">
          <source>DS.Adapter (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bebbcbfcab54d1351cc189e58edbc0f70fd5b6f" translate="yes" xml:space="preserve">
          <source>DS.Adapter.coalesceFindRequests</source>
          <target state="translated">DS.Adapter.coalesceFindRequests</target>
        </trans-unit>
        <trans-unit id="da08c437bbe9f74850a511ac1ac5b8c55797fb87" translate="yes" xml:space="preserve">
          <source>DS.Adapter.createRecord()</source>
          <target state="translated">DS.Adapter.createRecord()</target>
        </trans-unit>
        <trans-unit id="5a2e083320080087266449afbfcd9eeb7cb8a062" translate="yes" xml:space="preserve">
          <source>DS.Adapter.defaultSerializer</source>
          <target state="translated">DS.Adapter.defaultSerializer</target>
        </trans-unit>
        <trans-unit id="c7f2446f4921940f4bc4ebde7fd63b34eb56c86c" translate="yes" xml:space="preserve">
          <source>DS.Adapter.deleteRecord()</source>
          <target state="translated">DS.Adapter.deleteRecord()</target>
        </trans-unit>
        <trans-unit id="c413e3a329c705d028432952b115efffdec60c86" translate="yes" xml:space="preserve">
          <source>DS.Adapter.findAll()</source>
          <target state="translated">DS.Adapter.findAll()</target>
        </trans-unit>
        <trans-unit id="58a08e224274d6f86e446365a1fb119878927fa6" translate="yes" xml:space="preserve">
          <source>DS.Adapter.findMany()</source>
          <target state="translated">DS.Adapter.findMany()</target>
        </trans-unit>
        <trans-unit id="34e28fe4f03e7764062da48efb8a834491d965bc" translate="yes" xml:space="preserve">
          <source>DS.Adapter.findRecord()</source>
          <target state="translated">DS.Adapter.findRecord()</target>
        </trans-unit>
        <trans-unit id="4bd992b961479679f7845b99851bae4ee627e15c" translate="yes" xml:space="preserve">
          <source>DS.Adapter.generateIdForRecord()</source>
          <target state="translated">DS.Adapter.generateIdForRecord()</target>
        </trans-unit>
        <trans-unit id="72c017ff64cc54e2d2fb054b746b491c131eeae0" translate="yes" xml:space="preserve">
          <source>DS.Adapter.groupRecordsForFindMany()</source>
          <target state="translated">DS.Adapter.groupRecordsForFindMany()</target>
        </trans-unit>
        <trans-unit id="a08f4244e9d29d981f61b1df1f374d96291f7998" translate="yes" xml:space="preserve">
          <source>DS.Adapter.query()</source>
          <target state="translated">DS.Adapter.query()</target>
        </trans-unit>
        <trans-unit id="9261fb6925317981fd36b2d638f4e3ee34856f31" translate="yes" xml:space="preserve">
          <source>DS.Adapter.queryRecord()</source>
          <target state="translated">DS.Adapter.queryRecord()</target>
        </trans-unit>
        <trans-unit id="153b4ab98f00bc4e8b84280cfcf2a8d9ababaa3c" translate="yes" xml:space="preserve">
          <source>DS.Adapter.serialize()</source>
          <target state="translated">DS.Adapter.serialize()</target>
        </trans-unit>
        <trans-unit id="812cc40cdee95d8e3dfbf8586a4ea22958490e47" translate="yes" xml:space="preserve">
          <source>DS.Adapter.shouldBackgroundReloadAll()</source>
          <target state="translated">DS.Adapter.shouldBackgroundReloadAll()</target>
        </trans-unit>
        <trans-unit id="4bc744b3a7ecb89b4493e5de0d3a03779f8f303f" translate="yes" xml:space="preserve">
          <source>DS.Adapter.shouldBackgroundReloadRecord()</source>
          <target state="translated">DS.Adapter.shouldBackgroundReloadRecord()</target>
        </trans-unit>
        <trans-unit id="512829442825de982a08932df933d7def3d9e3c1" translate="yes" xml:space="preserve">
          <source>DS.Adapter.shouldReloadAll()</source>
          <target state="translated">DS.Adapter.shouldReloadAll()</target>
        </trans-unit>
        <trans-unit id="622fa296a1796697e2216af539c0257559e37e72" translate="yes" xml:space="preserve">
          <source>DS.Adapter.shouldReloadRecord()</source>
          <target state="translated">DS.Adapter.shouldReloadRecord()</target>
        </trans-unit>
        <trans-unit id="ef6778a39d50a2f175272917c0be3a4bd72313ae" translate="yes" xml:space="preserve">
          <source>DS.Adapter.updateRecord()</source>
          <target state="translated">DS.Adapter.updateRecord()</target>
        </trans-unit>
        <trans-unit id="9554f0fb21e2c3b0bd573bf2af4461f75bf2e445" translate="yes" xml:space="preserve">
          <source>DS.AdapterError</source>
          <target state="translated">DS.AdapterError</target>
        </trans-unit>
        <trans-unit id="8319776575058eabe2ac5d85cc07329cebd31e08" translate="yes" xml:space="preserve">
          <source>DS.AdapterPopulatedRecordArray</source>
          <target state="translated">DS.AdapterPopulatedRecordArray</target>
        </trans-unit>
        <trans-unit id="2f3d4b0a37d537dbca88065d39c1056a2874036b" translate="yes" xml:space="preserve">
          <source>DS.AdapterPopulatedRecordArray (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dc35fb01ae439c6a64d6b5d36f3edeb4edbabac" translate="yes" xml:space="preserve">
          <source>DS.AdapterPopulatedRecordArray (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948ac7cf372adc3666edfb21344b6725a8733438" translate="yes" xml:space="preserve">
          <source>DS.BelongsToReference</source>
          <target state="translated">DS.BelongsToReference</target>
        </trans-unit>
        <trans-unit id="a6371957f08123bb0dcb09a6d3bd1ab47286b536" translate="yes" xml:space="preserve">
          <source>DS.BelongsToReference (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc71c649a301aa1a9f6bc1d7caefc99ce2ea594" translate="yes" xml:space="preserve">
          <source>DS.BelongsToReference.id()</source>
          <target state="translated">DS.BelongsToReference.id()</target>
        </trans-unit>
        <trans-unit id="b94efec936562c48bc8b270ae9aebb3f4cfe85a4" translate="yes" xml:space="preserve">
          <source>DS.BelongsToReference.link()</source>
          <target state="translated">DS.BelongsToReference.link()</target>
        </trans-unit>
        <trans-unit id="9226328e165bc8d9fce8f9fa77fc72ef1e889f2c" translate="yes" xml:space="preserve">
          <source>DS.BelongsToReference.load()</source>
          <target state="translated">DS.BelongsToReference.load()</target>
        </trans-unit>
        <trans-unit id="be665981db2c809bbd98ebbb11df159449ba53aa" translate="yes" xml:space="preserve">
          <source>DS.BelongsToReference.meta()</source>
          <target state="translated">DS.BelongsToReference.meta()</target>
        </trans-unit>
        <trans-unit id="5e4dac6df6518256ceb59fdc48f33c21a1ac8299" translate="yes" xml:space="preserve">
          <source>DS.BelongsToReference.push()</source>
          <target state="translated">DS.BelongsToReference.push()</target>
        </trans-unit>
        <trans-unit id="5cf8e36610a523a28a8526e26121b8a392a4138f" translate="yes" xml:space="preserve">
          <source>DS.BelongsToReference.reload()</source>
          <target state="translated">DS.BelongsToReference.reload()</target>
        </trans-unit>
        <trans-unit id="be2b5dd3e4f4f501dc8c879d2a1a561c510793e2" translate="yes" xml:space="preserve">
          <source>DS.BelongsToReference.remoteType()</source>
          <target state="translated">DS.BelongsToReference.remoteType()</target>
        </trans-unit>
        <trans-unit id="f4f4851f8615275dac4ff912065472e89fe80a22" translate="yes" xml:space="preserve">
          <source>DS.BelongsToReference.value()</source>
          <target state="translated">DS.BelongsToReference.value()</target>
        </trans-unit>
        <trans-unit id="96e5aad1875d0a88df63658c79931f4200b9b1bd" translate="yes" xml:space="preserve">
          <source>DS.BooleanTransform</source>
          <target state="translated">DS.BooleanTransform</target>
        </trans-unit>
        <trans-unit id="5d637a1344e714d7f5f9cd7f28a31e21b35bfae4" translate="yes" xml:space="preserve">
          <source>DS.BooleanTransform (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="918867368c69081a6b2b2d2c9416e8fcd9322d38" translate="yes" xml:space="preserve">
          <source>DS.BuildURLMixin</source>
          <target state="translated">DS.BuildURLMixin</target>
        </trans-unit>
        <trans-unit id="d7fac8aa16f6617aa04ea98ecb195e0d98aab7e3" translate="yes" xml:space="preserve">
          <source>DS.BuildURLMixin (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2163f215cd6ebe27d25be046f39418f9b8c77369" translate="yes" xml:space="preserve">
          <source>DS.BuildURLMixin.buildURL()</source>
          <target state="translated">DS.BuildURLMixin.buildURL()</target>
        </trans-unit>
        <trans-unit id="fa53d38eeeef2da5cdcbb84e7db63e807b4a71b1" translate="yes" xml:space="preserve">
          <source>DS.BuildURLMixin.pathForType()</source>
          <target state="translated">DS.BuildURLMixin.pathForType()</target>
        </trans-unit>
        <trans-unit id="29d104f7b1737e598e2fd199fd47f25fd2770458" translate="yes" xml:space="preserve">
          <source>DS.BuildURLMixin.urlForCreateRecord()</source>
          <target state="translated">DS.BuildURLMixin.urlForCreateRecord()</target>
        </trans-unit>
        <trans-unit id="2919ad39496dde90eccd84c80ec1ec9c336acb1f" translate="yes" xml:space="preserve">
          <source>DS.BuildURLMixin.urlForDeleteRecord()</source>
          <target state="translated">DS.BuildURLMixin.urlForDeleteRecord()</target>
        </trans-unit>
        <trans-unit id="d2256ce58ceb5b4ca660066fc671e9ce96329187" translate="yes" xml:space="preserve">
          <source>DS.BuildURLMixin.urlForFindAll()</source>
          <target state="translated">DS.BuildURLMixin.urlForFindAll()</target>
        </trans-unit>
        <trans-unit id="abc0e3585c5c8dd69682f606512e37f0d9892ea3" translate="yes" xml:space="preserve">
          <source>DS.BuildURLMixin.urlForFindBelongsTo()</source>
          <target state="translated">DS.BuildURLMixin.urlForFindBelongsTo()</target>
        </trans-unit>
        <trans-unit id="87851985ea87452dcbd3a8a52f873f460e6c4a31" translate="yes" xml:space="preserve">
          <source>DS.BuildURLMixin.urlForFindHasMany()</source>
          <target state="translated">DS.BuildURLMixin.urlForFindHasMany()</target>
        </trans-unit>
        <trans-unit id="7626704e0e8a84346f9cfbb62a95e1a34261a09b" translate="yes" xml:space="preserve">
          <source>DS.BuildURLMixin.urlForFindMany()</source>
          <target state="translated">DS.BuildURLMixin.urlForFindMany()</target>
        </trans-unit>
        <trans-unit id="dbe3a3e1a0fba2457e48292b9148784f12dd0c1e" translate="yes" xml:space="preserve">
          <source>DS.BuildURLMixin.urlForFindRecord()</source>
          <target state="translated">DS.BuildURLMixin.urlForFindRecord()</target>
        </trans-unit>
        <trans-unit id="32ab2785498e0541d901cb1250990696cbac67cc" translate="yes" xml:space="preserve">
          <source>DS.BuildURLMixin.urlForQuery()</source>
          <target state="translated">DS.BuildURLMixin.urlForQuery()</target>
        </trans-unit>
        <trans-unit id="5e81fde5cdfc622d918fa321e24e44e20fdd7d68" translate="yes" xml:space="preserve">
          <source>DS.BuildURLMixin.urlForQueryRecord()</source>
          <target state="translated">DS.BuildURLMixin.urlForQueryRecord()</target>
        </trans-unit>
        <trans-unit id="81eb67a42e15e0b7bc71ecbaee3fa3005c4cfb9f" translate="yes" xml:space="preserve">
          <source>DS.BuildURLMixin.urlForUpdateRecord()</source>
          <target state="translated">DS.BuildURLMixin.urlForUpdateRecord()</target>
        </trans-unit>
        <trans-unit id="b7df4ab3aaa4b5fcc8cb7c7e06e5ebea2c2a340c" translate="yes" xml:space="preserve">
          <source>DS.ConflictError</source>
          <target state="translated">DS.ConflictError</target>
        </trans-unit>
        <trans-unit id="9e1d7252d4c9a6f321e3647e95286c4f27e7b24f" translate="yes" xml:space="preserve">
          <source>DS.DateTransform</source>
          <target state="translated">DS.DateTransform</target>
        </trans-unit>
        <trans-unit id="af03052067bc08635eb0160859ce0a00b39a62d4" translate="yes" xml:space="preserve">
          <source>DS.DateTransform (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceae46d754426bbbdb2f48e8e13720b6e38d65cc" translate="yes" xml:space="preserve">
          <source>DS.EmbeddedRecordsMixin</source>
          <target state="translated">DS.EmbeddedRecordsMixin</target>
        </trans-unit>
        <trans-unit id="2d6f86ab90d6fec168b69e4eb63021b599bb5084" translate="yes" xml:space="preserve">
          <source>DS.EmbeddedRecordsMixin (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12cbe12802402e96d218af88765c6350c814c98e" translate="yes" xml:space="preserve">
          <source>DS.EmbeddedRecordsMixin.normalize()</source>
          <target state="translated">DS.EmbeddedRecordsMixin.normalize()</target>
        </trans-unit>
        <trans-unit id="49a54e09346e88422282c0d03ec337166b5083f0" translate="yes" xml:space="preserve">
          <source>DS.EmbeddedRecordsMixin.removeEmbeddedForeignKey()</source>
          <target state="translated">DS.EmbeddedRecordsMixin.removeEmbeddedForeignKey()</target>
        </trans-unit>
        <trans-unit id="1f3b42e69eac03bc4313ceb93d9285ed570fb890" translate="yes" xml:space="preserve">
          <source>DS.EmbeddedRecordsMixin.serializeBelongsTo()</source>
          <target state="translated">DS.EmbeddedRecordsMixin.serializeBelongsTo()</target>
        </trans-unit>
        <trans-unit id="9f78ad763128876587d33c8344ddf5afb0c6e1a1" translate="yes" xml:space="preserve">
          <source>DS.EmbeddedRecordsMixin.serializeHasMany()</source>
          <target state="translated">DS.EmbeddedRecordsMixin.serializeHasMany()</target>
        </trans-unit>
        <trans-unit id="8da55d740ffc6ca7f3bc858323b2f80fd4ccc42f" translate="yes" xml:space="preserve">
          <source>DS.Ember.HTMLBars.helpers</source>
          <target state="translated">DS.Ember.HTMLBars.helpers</target>
        </trans-unit>
        <trans-unit id="8c0547fd5345040e0543f48f299015bf75bf9b6d" translate="yes" xml:space="preserve">
          <source>DS.Ember.HTMLBars.helpers (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3733331610557060cdbd524261c7810baf5a1bd8" translate="yes" xml:space="preserve">
          <source>DS.Ember.HTMLBars.helpers.pluralize()</source>
          <target state="translated">DS.Ember.HTMLBars.helpers.pluralize()</target>
        </trans-unit>
        <trans-unit id="3e5c31f5e3c62b1ad0822b0cf4630082d9830a1c" translate="yes" xml:space="preserve">
          <source>DS.Errors</source>
          <target state="translated">DS.Errors</target>
        </trans-unit>
        <trans-unit id="197ad7a2f69b103e43a57eed08b665351f8aea0a" translate="yes" xml:space="preserve">
          <source>DS.Errors (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda89517d17c61fc246f181d12b5977102ca5a4c" translate="yes" xml:space="preserve">
          <source>DS.Errors (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00a48642cbd9714f9212cfc293dc8192bda9de5f" translate="yes" xml:space="preserve">
          <source>DS.Errors.errorsFor()</source>
          <target state="translated">DS.Errors.errorsFor()</target>
        </trans-unit>
        <trans-unit id="06977938ac727534ef6144c932f48aba0a4c7452" translate="yes" xml:space="preserve">
          <source>DS.Errors.has()</source>
          <target state="translated">DS.Errors.has()</target>
        </trans-unit>
        <trans-unit id="f696b1b18c596f5aeaeaa46cd8c7b412c5b62e55" translate="yes" xml:space="preserve">
          <source>DS.Errors.isEmpty</source>
          <target state="translated">DS.Errors.isEmpty</target>
        </trans-unit>
        <trans-unit id="b88fa640737a39b2b4736b7862cd568936cd9c53" translate="yes" xml:space="preserve">
          <source>DS.Errors.length</source>
          <target state="translated">DS.Errors.length</target>
        </trans-unit>
        <trans-unit id="f10325074d12490d41efe595aebaed8ef3f833a2" translate="yes" xml:space="preserve">
          <source>DS.Errors.messages</source>
          <target state="translated">DS.Errors.messages</target>
        </trans-unit>
        <trans-unit id="ea3f5bec66c886e20a1bc81b1215e21011e5efad" translate="yes" xml:space="preserve">
          <source>DS.FilteredRecordArray</source>
          <target state="translated">DS.FilteredRecordArray</target>
        </trans-unit>
        <trans-unit id="4c225dc11c9e27066072627c0807e44adb2e316f" translate="yes" xml:space="preserve">
          <source>DS.FilteredRecordArray (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f563532a629aa19eb9e4fd5a6fff05a468bab1" translate="yes" xml:space="preserve">
          <source>DS.FilteredRecordArray (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b23da3f69a42bce22cb3bdfe2cdde134f9640331" translate="yes" xml:space="preserve">
          <source>DS.FilteredRecordArray.filterFunction()</source>
          <target state="translated">DS.FilteredRecordArray.filterFunction()</target>
        </trans-unit>
        <trans-unit id="3724b6aca6a1c92600f39b5c95caf0834f870de2" translate="yes" xml:space="preserve">
          <source>DS.ForbiddenError</source>
          <target state="translated">DS.ForbiddenError</target>
        </trans-unit>
        <trans-unit id="a4867762c82563c07a37b14bcd756b815ab6e3a2" translate="yes" xml:space="preserve">
          <source>DS.HasManyReference</source>
          <target state="translated">DS.HasManyReference</target>
        </trans-unit>
        <trans-unit id="74bcd3ecb3f828e9d303f653e2a7df93062223eb" translate="yes" xml:space="preserve">
          <source>DS.HasManyReference (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a691efd27a9db76107ef31c67f7ab7173dd8278a" translate="yes" xml:space="preserve">
          <source>DS.HasManyReference.link()</source>
          <target state="translated">DS.HasManyReference.link()</target>
        </trans-unit>
        <trans-unit id="49c1a1a9db862c6266162dcda780494529fa95e8" translate="yes" xml:space="preserve">
          <source>DS.HasManyReference.load()</source>
          <target state="translated">DS.HasManyReference.load()</target>
        </trans-unit>
        <trans-unit id="724dcb2deb311ed48662c0699da94680e5ab6b90" translate="yes" xml:space="preserve">
          <source>DS.HasManyReference.meta()</source>
          <target state="translated">DS.HasManyReference.meta()</target>
        </trans-unit>
        <trans-unit id="e4a666d57f7c3e5a491001cd809e56ec743b95d0" translate="yes" xml:space="preserve">
          <source>DS.HasManyReference.push()</source>
          <target state="translated">DS.HasManyReference.push()</target>
        </trans-unit>
        <trans-unit id="5107f4bb200e82e3be2639309f65060ec4d231f9" translate="yes" xml:space="preserve">
          <source>DS.HasManyReference.reload()</source>
          <target state="translated">DS.HasManyReference.reload()</target>
        </trans-unit>
        <trans-unit id="af65c4b301b1da6c07c55db3f2f6137fade6a676" translate="yes" xml:space="preserve">
          <source>DS.HasManyReference.remoteType()</source>
          <target state="translated">DS.HasManyReference.remoteType()</target>
        </trans-unit>
        <trans-unit id="e63b8e3b1578283d601d67cbcc02dd4048f66a2d" translate="yes" xml:space="preserve">
          <source>DS.HasManyReference.value()</source>
          <target state="translated">DS.HasManyReference.value()</target>
        </trans-unit>
        <trans-unit id="84c57037f95e2d8dd122947e8925fe4d1d842e9c" translate="yes" xml:space="preserve">
          <source>DS.InvalidError</source>
          <target state="translated">DS.InvalidError</target>
        </trans-unit>
        <trans-unit id="949fb5576c457f27222a181c46ca5556a3e65fe1" translate="yes" xml:space="preserve">
          <source>DS.JSONAPIAdapter</source>
          <target state="translated">DS.JSONAPIAdapter</target>
        </trans-unit>
        <trans-unit id="f5b325aa33f4836ce434b838162617bc3d012a48" translate="yes" xml:space="preserve">
          <source>DS.JSONAPIAdapter (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21daa6292932068b44e7318354ee95b0131c636" translate="yes" xml:space="preserve">
          <source>DS.JSONAPIAdapter (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e841d5e4091798f369c7c5996613165a5d1b2a5b" translate="yes" xml:space="preserve">
          <source>DS.JSONAPIAdapter.coalesceFindRequests</source>
          <target state="translated">DS.JSONAPIAdapter.coalesceFindRequests</target>
        </trans-unit>
        <trans-unit id="9343b8913cfe3a00d8d1ef41bb1e018bcdceaec4" translate="yes" xml:space="preserve">
          <source>DS.JSONAPISerializer</source>
          <target state="translated">DS.JSONAPISerializer</target>
        </trans-unit>
        <trans-unit id="a2b54e247fe012a1afbbf8126666ec450143b952" translate="yes" xml:space="preserve">
          <source>DS.JSONAPISerializer (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2deaf4e48aee5bf6aa0b862e409cf29484d6557" translate="yes" xml:space="preserve">
          <source>DS.JSONAPISerializer (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f6362d7d6049e1800b61f47b00c089ed29e50a" translate="yes" xml:space="preserve">
          <source>DS.JSONAPISerializer.keyForAttribute()</source>
          <target state="translated">DS.JSONAPISerializer.keyForAttribute()</target>
        </trans-unit>
        <trans-unit id="42e121f546f5403500cfb2216ddd866b7638bb3e" translate="yes" xml:space="preserve">
          <source>DS.JSONAPISerializer.keyForRelationship()</source>
          <target state="translated">DS.JSONAPISerializer.keyForRelationship()</target>
        </trans-unit>
        <trans-unit id="e0c48eb64ed77c189175aca7283c1dd7e30e82e6" translate="yes" xml:space="preserve">
          <source>DS.JSONAPISerializer.modelNameFromPayloadKey()</source>
          <target state="translated">DS.JSONAPISerializer.modelNameFromPayloadKey()</target>
        </trans-unit>
        <trans-unit id="4236ee7349e1c72534113a20272d4e06f6946071" translate="yes" xml:space="preserve">
          <source>DS.JSONAPISerializer.modelNameFromPayloadType()</source>
          <target state="translated">DS.JSONAPISerializer.modelNameFromPayloadType()</target>
        </trans-unit>
        <trans-unit id="86f2de0cb76e797b4993a9224799311a9b250bdb" translate="yes" xml:space="preserve">
          <source>DS.JSONAPISerializer.payloadKeyFromModelName()</source>
          <target state="translated">DS.JSONAPISerializer.payloadKeyFromModelName()</target>
        </trans-unit>
        <trans-unit id="2d056bf9bdaf188f4d0b89fd993370e5c698085b" translate="yes" xml:space="preserve">
          <source>DS.JSONAPISerializer.payloadTypeFromModelName()</source>
          <target state="translated">DS.JSONAPISerializer.payloadTypeFromModelName()</target>
        </trans-unit>
        <trans-unit id="528c698bb61c34ab8bffc936d552bf67dce25f4b" translate="yes" xml:space="preserve">
          <source>DS.JSONAPISerializer.pushPayload()</source>
          <target state="translated">DS.JSONAPISerializer.pushPayload()</target>
        </trans-unit>
        <trans-unit id="67e6d81ce859b5bfe665f77fa80110736d95b9ce" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer</source>
          <target state="translated">DS.JSONSerializer</target>
        </trans-unit>
        <trans-unit id="f463730ce3b2e13aa30bad7109d3fbea6cfc8836" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b9c58bcfdc6ab76d5aad7c9ddec8fb8bcfd89ba" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e98c35cb64c1dfbc8f0fb66939007269d4189c00" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.attrs</source>
          <target state="translated">DS.JSONSerializer.attrs</target>
        </trans-unit>
        <trans-unit id="813cc7482a1c93113b3f8200f5c391e06bcb475e" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.extractAttributes()</source>
          <target state="translated">DS.JSONSerializer.extractAttributes()</target>
        </trans-unit>
        <trans-unit id="0f74e2e528d3c593bc0f72b9c3d0b38bb2f11900" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.extractErrors()</source>
          <target state="translated">DS.JSONSerializer.extractErrors()</target>
        </trans-unit>
        <trans-unit id="98380a96dd1af7e4c76bde0868591d3cf234fe83" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.extractId()</source>
          <target state="translated">DS.JSONSerializer.extractId()</target>
        </trans-unit>
        <trans-unit id="96e09f72192285f3937020eaaf2955ea36d6b47c" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.extractMeta()</source>
          <target state="translated">DS.JSONSerializer.extractMeta()</target>
        </trans-unit>
        <trans-unit id="7ad7ddc6a609390ba8436d8fb95761cd3c7931e6" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.extractPolymorphicRelationship()</source>
          <target state="translated">DS.JSONSerializer.extractPolymorphicRelationship()</target>
        </trans-unit>
        <trans-unit id="21b1b2a788f2fa1d6dd7d9b9f1f531a4c107b5f6" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.extractRelationship()</source>
          <target state="translated">DS.JSONSerializer.extractRelationship()</target>
        </trans-unit>
        <trans-unit id="f006d3cb5ba6ef67d0ab466e59fbbca6c823b62c" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.extractRelationships()</source>
          <target state="translated">DS.JSONSerializer.extractRelationships()</target>
        </trans-unit>
        <trans-unit id="4d12f388ce936b346bbef2f44bc012f32dee6236" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.keyForAttribute()</source>
          <target state="translated">DS.JSONSerializer.keyForAttribute()</target>
        </trans-unit>
        <trans-unit id="72f2d5e2d639571b3bbaab388b7434e8f5474cc8" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.keyForLink()</source>
          <target state="translated">DS.JSONSerializer.keyForLink()</target>
        </trans-unit>
        <trans-unit id="133d0b47661fda45d278e58b318e4245b7667e28" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.keyForRelationship()</source>
          <target state="translated">DS.JSONSerializer.keyForRelationship()</target>
        </trans-unit>
        <trans-unit id="cdbbdd44b36825cbc759a8e9df0d2770aa871b42" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.modelNameFromPayloadKey()</source>
          <target state="translated">DS.JSONSerializer.modelNameFromPayloadKey()</target>
        </trans-unit>
        <trans-unit id="458db3426bb249595875a9507ba241a276ca3c3f" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.modelNameFromPayloadType()</source>
          <target state="translated">DS.JSONSerializer.modelNameFromPayloadType()</target>
        </trans-unit>
        <trans-unit id="e2a1646533a96666862bc3a78bada2117cee4ce1" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalize()</source>
          <target state="translated">DS.JSONSerializer.normalize()</target>
        </trans-unit>
        <trans-unit id="1854da56b3991c39a8d983010e437d657a302d22" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalizeArrayResponse()</source>
          <target state="translated">DS.JSONSerializer.normalizeArrayResponse()</target>
        </trans-unit>
        <trans-unit id="00d0e5b61a67af769a34be34f703e11dcbce6b9c" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalizeCreateRecordResponse()</source>
          <target state="translated">DS.JSONSerializer.normalizeCreateRecordResponse()</target>
        </trans-unit>
        <trans-unit id="c5d8dcc9330d924e6d393853c66e3653b6db6f5a" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalizeDeleteRecordResponse()</source>
          <target state="translated">DS.JSONSerializer.normalizeDeleteRecordResponse()</target>
        </trans-unit>
        <trans-unit id="92e56eadf48f64726479ccae54110c9aec0cc317" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalizeFindAllResponse()</source>
          <target state="translated">DS.JSONSerializer.normalizeFindAllResponse()</target>
        </trans-unit>
        <trans-unit id="e0678d2b9e3a15ce67c3b3b2f70280b878ba99b8" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalizeFindBelongsToResponse()</source>
          <target state="translated">DS.JSONSerializer.normalizeFindBelongsToResponse()</target>
        </trans-unit>
        <trans-unit id="49074ead8b8f22acc557ff84aab2c11541a97135" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalizeFindHasManyResponse()</source>
          <target state="translated">DS.JSONSerializer.normalizeFindHasManyResponse()</target>
        </trans-unit>
        <trans-unit id="143a283ecb031b9fc88565feb1ed850a875b32dd" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalizeFindManyResponse()</source>
          <target state="translated">DS.JSONSerializer.normalizeFindManyResponse()</target>
        </trans-unit>
        <trans-unit id="7c9f5c24bcae4bebb77c5f75ba80a5edd50293a1" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalizeFindRecordResponse()</source>
          <target state="translated">DS.JSONSerializer.normalizeFindRecordResponse()</target>
        </trans-unit>
        <trans-unit id="c39ce55a633224ea2032302710f3f211f5557f44" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalizeQueryRecordResponse()</source>
          <target state="translated">DS.JSONSerializer.normalizeQueryRecordResponse()</target>
        </trans-unit>
        <trans-unit id="7e519238a2678ce1b6f38aa0592d9df2b2a3bccf" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalizeQueryResponse()</source>
          <target state="translated">DS.JSONSerializer.normalizeQueryResponse()</target>
        </trans-unit>
        <trans-unit id="47f75d5fab1b7b761dd2b65dbefd48c8fef8aad3" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalizeResponse()</source>
          <target state="translated">DS.JSONSerializer.normalizeResponse()</target>
        </trans-unit>
        <trans-unit id="c1dc42b579288f7d8eb5b5f5fd780c84a8ccfecd" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalizeSaveResponse()</source>
          <target state="translated">DS.JSONSerializer.normalizeSaveResponse()</target>
        </trans-unit>
        <trans-unit id="d2c4cca5bb65489a57574e014238d005f0a660cb" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalizeSingleResponse()</source>
          <target state="translated">DS.JSONSerializer.normalizeSingleResponse()</target>
        </trans-unit>
        <trans-unit id="5ce8b432636d76c482b684a7fbf5e96287b636fc" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.normalizeUpdateRecordResponse()</source>
          <target state="translated">DS.JSONSerializer.normalizeUpdateRecordResponse()</target>
        </trans-unit>
        <trans-unit id="663c8b8e50d497f8c40cb323e2e253f2e7fed52e" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.primaryKey</source>
          <target state="translated">DS.JSONSerializer.primaryKey</target>
        </trans-unit>
        <trans-unit id="f9242ea12089c2e896da8f42c63a708ceb03e132" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.serialize()</source>
          <target state="translated">DS.JSONSerializer.serialize()</target>
        </trans-unit>
        <trans-unit id="46b09f46d890d8936c5d4d8e78e1d581443b4ffa" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.serializeAttribute()</source>
          <target state="translated">DS.JSONSerializer.serializeAttribute()</target>
        </trans-unit>
        <trans-unit id="8590bbf3a5efbe09366571cdc8b9bdc63c12e072" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.serializeBelongsTo()</source>
          <target state="translated">DS.JSONSerializer.serializeBelongsTo()</target>
        </trans-unit>
        <trans-unit id="990479b10982724c94a2417690f8634995d75a2e" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.serializeHasMany()</source>
          <target state="translated">DS.JSONSerializer.serializeHasMany()</target>
        </trans-unit>
        <trans-unit id="821d2d746943d87105cb71a95cb14c0e4cdea832" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.serializeId()</source>
          <target state="translated">DS.JSONSerializer.serializeId()</target>
        </trans-unit>
        <trans-unit id="69d0c49327bee9d0d90e5c05d14ed4cf07edea4f" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.serializeIntoHash()</source>
          <target state="translated">DS.JSONSerializer.serializeIntoHash()</target>
        </trans-unit>
        <trans-unit id="3646cc05af303986b8c5a36232c0441b87746e63" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.serializePolymorphicType()</source>
          <target state="translated">DS.JSONSerializer.serializePolymorphicType()</target>
        </trans-unit>
        <trans-unit id="7bf2e278bed38ddbe71a458a8cd4e2c8c4ce07cc" translate="yes" xml:space="preserve">
          <source>DS.JSONSerializer.shouldSerializeHasMany()</source>
          <target state="translated">DS.JSONSerializer.shouldSerializeHasMany()</target>
        </trans-unit>
        <trans-unit id="60f0b1bb666d3b0666d71fee82644ec1b66ac444" translate="yes" xml:space="preserve">
          <source>DS.ManyArray</source>
          <target state="translated">DS.ManyArray</target>
        </trans-unit>
        <trans-unit id="242cffcf8b58fd9f5a7f35fb209dc9a93000fac6" translate="yes" xml:space="preserve">
          <source>DS.ManyArray (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b0cf82baf58f255418907c07849982842fc0f55" translate="yes" xml:space="preserve">
          <source>DS.ManyArray (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ec1f2140c8d1932b2d77ffca5faf55b91a2e85" translate="yes" xml:space="preserve">
          <source>DS.ManyArray.isLoaded</source>
          <target state="translated">DS.ManyArray.isLoaded</target>
        </trans-unit>
        <trans-unit id="1bcdd19dda414fc931a211858dd7b24b1e1773de" translate="yes" xml:space="preserve">
          <source>DS.ManyArray.meta</source>
          <target state="translated">DS.ManyArray.meta</target>
        </trans-unit>
        <trans-unit id="0297009dd605d5f79e1b5568762fb2fbf64e53df" translate="yes" xml:space="preserve">
          <source>DS.ManyArray.reload()</source>
          <target state="translated">DS.ManyArray.reload()</target>
        </trans-unit>
        <trans-unit id="851b26436120acade1de4fd8a7506fb8c88fadbc" translate="yes" xml:space="preserve">
          <source>DS.ManyArray.save()</source>
          <target state="translated">DS.ManyArray.save()</target>
        </trans-unit>
        <trans-unit id="15e19b9ecdc78ca3f172fd38d1439e831b4f5144" translate="yes" xml:space="preserve">
          <source>DS.Model</source>
          <target state="translated">DS.Model</target>
        </trans-unit>
        <trans-unit id="98c9718e2cb668e524b8229deb7f397fac2c5463" translate="yes" xml:space="preserve">
          <source>DS.Model (events)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc0d86a46975730e186870d3c75242457d5ab76" translate="yes" xml:space="preserve">
          <source>DS.Model (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78457ebdce34a9d64d511ea7941b1f9c524188b" translate="yes" xml:space="preserve">
          <source>DS.Model (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749f85a23d5e8a7f5a5bb7591bd87f1f09110343" translate="yes" xml:space="preserve">
          <source>DS.Model.adapterError</source>
          <target state="translated">DS.Model.adapterError</target>
        </trans-unit>
        <trans-unit id="405faeae044a47dfb5b4ca9bfab98e02767b4aac" translate="yes" xml:space="preserve">
          <source>DS.Model.attributes</source>
          <target state="translated">DS.Model.attributes</target>
        </trans-unit>
        <trans-unit id="70bc2a6969472ff3e047a4c11815af5c94693a0d" translate="yes" xml:space="preserve">
          <source>DS.Model.becameError (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="544e69ea42406a1f4b8f147d26f25abebc3db83b" translate="yes" xml:space="preserve">
          <source>DS.Model.becameInvalid (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28df6c8dd40492f3c9fd010d65e2a964cf3b1af" translate="yes" xml:space="preserve">
          <source>DS.Model.belongsTo()</source>
          <target state="translated">DS.Model.belongsTo()</target>
        </trans-unit>
        <trans-unit id="b11f2404204618112ac327f88ee25ff80cb73bb7" translate="yes" xml:space="preserve">
          <source>DS.Model.changedAttributes()</source>
          <target state="translated">DS.Model.changedAttributes()</target>
        </trans-unit>
        <trans-unit id="79c7507dd2391a8dc812417280c3d1f48f3c0815" translate="yes" xml:space="preserve">
          <source>DS.Model.deleteRecord()</source>
          <target state="translated">DS.Model.deleteRecord()</target>
        </trans-unit>
        <trans-unit id="a5811281389fc9bce3e0172174f7260e05634622" translate="yes" xml:space="preserve">
          <source>DS.Model.destroyRecord()</source>
          <target state="translated">DS.Model.destroyRecord()</target>
        </trans-unit>
        <trans-unit id="b9ca2e6f38b71a97bf740add36c72f20a68a1ce0" translate="yes" xml:space="preserve">
          <source>DS.Model.didCreate (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f60f379f83f3f6795470a390265b123f214fe8e6" translate="yes" xml:space="preserve">
          <source>DS.Model.didDefineProperty()</source>
          <target state="translated">DS.Model.didDefineProperty()</target>
        </trans-unit>
        <trans-unit id="be2fa5fd45326b12ca2aa434083ae78100a4d709" translate="yes" xml:space="preserve">
          <source>DS.Model.didDelete (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b57ea537e8f1e3f39509d28559b44b7b8f61cf88" translate="yes" xml:space="preserve">
          <source>DS.Model.didLoad (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91131d49360502bb39f07e0c82dcf03a7591fd8e" translate="yes" xml:space="preserve">
          <source>DS.Model.didUpdate (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53cf7bdb8531bb4f21dbf79be7dda910788ff5f6" translate="yes" xml:space="preserve">
          <source>DS.Model.dirtyType</source>
          <target state="translated">DS.Model.dirtyType</target>
        </trans-unit>
        <trans-unit id="b5254168d762d25a649e2145b2c46cf363f54b21" translate="yes" xml:space="preserve">
          <source>DS.Model.eachAttribute()</source>
          <target state="translated">DS.Model.eachAttribute()</target>
        </trans-unit>
        <trans-unit id="cc6499f48486fa0508b47556b28748f03935827e" translate="yes" xml:space="preserve">
          <source>DS.Model.eachRelatedType()</source>
          <target state="translated">DS.Model.eachRelatedType()</target>
        </trans-unit>
        <trans-unit id="e0b18f19fa745c2d8b39f82173bb7f8b5749c851" translate="yes" xml:space="preserve">
          <source>DS.Model.eachRelationship()</source>
          <target state="translated">DS.Model.eachRelationship()</target>
        </trans-unit>
        <trans-unit id="26a4d16a1cd5c2c162ce2b7f5d59ceb5361046d2" translate="yes" xml:space="preserve">
          <source>DS.Model.eachTransformedAttribute()</source>
          <target state="translated">DS.Model.eachTransformedAttribute()</target>
        </trans-unit>
        <trans-unit id="466edb59bd4042b30acc8f0ac8557bf4411009be" translate="yes" xml:space="preserve">
          <source>DS.Model.errors</source>
          <target state="translated">DS.Model.errors</target>
        </trans-unit>
        <trans-unit id="60984489cb7287902b6eb1a6ffc5b802bf7fc4bc" translate="yes" xml:space="preserve">
          <source>DS.Model.fields</source>
          <target state="translated">DS.Model.fields</target>
        </trans-unit>
        <trans-unit id="51b9778c490a51c2dfc7f86077e73f0cb032ed4f" translate="yes" xml:space="preserve">
          <source>DS.Model.hasDirtyAttributes</source>
          <target state="translated">DS.Model.hasDirtyAttributes</target>
        </trans-unit>
        <trans-unit id="bdbdf754f020d7b780e69c2fc34210e2a69687c7" translate="yes" xml:space="preserve">
          <source>DS.Model.hasMany()</source>
          <target state="translated">DS.Model.hasMany()</target>
        </trans-unit>
        <trans-unit id="35bb0ebad48b664e5e2b39c7a5265ac3f9948d15" translate="yes" xml:space="preserve">
          <source>DS.Model.id</source>
          <target state="translated">DS.Model.id</target>
        </trans-unit>
        <trans-unit id="f6cbb82104fea848c62b9dd01a55d6c6a117720c" translate="yes" xml:space="preserve">
          <source>DS.Model.inverseFor()</source>
          <target state="translated">DS.Model.inverseFor()</target>
        </trans-unit>
        <trans-unit id="cf342b4a4e6a50b2b9eba7e009e00f2cf32671df" translate="yes" xml:space="preserve">
          <source>DS.Model.isDeleted</source>
          <target state="translated">DS.Model.isDeleted</target>
        </trans-unit>
        <trans-unit id="ece42db5c4fd3c9d1c35c4a2ea73226caa46800a" translate="yes" xml:space="preserve">
          <source>DS.Model.isEmpty</source>
          <target state="translated">DS.Model.isEmpty</target>
        </trans-unit>
        <trans-unit id="c0beee373ed2dadd75aabc041e4d8f489d78cb1b" translate="yes" xml:space="preserve">
          <source>DS.Model.isError</source>
          <target state="translated">DS.Model.isError</target>
        </trans-unit>
        <trans-unit id="9d99ed147e8ac60ff179f8a2c35096ee3f6c45c2" translate="yes" xml:space="preserve">
          <source>DS.Model.isLoaded</source>
          <target state="translated">DS.Model.isLoaded</target>
        </trans-unit>
        <trans-unit id="89891efb8f7ffef41b4aead89eef415b34b5a3c7" translate="yes" xml:space="preserve">
          <source>DS.Model.isLoading</source>
          <target state="translated">DS.Model.isLoading</target>
        </trans-unit>
        <trans-unit id="9d51423698391bd48b3b96a91855faef034064a6" translate="yes" xml:space="preserve">
          <source>DS.Model.isNew</source>
          <target state="translated">DS.Model.isNew</target>
        </trans-unit>
        <trans-unit id="aa9c8be0ce25fea26b9ad8902697d17159256476" translate="yes" xml:space="preserve">
          <source>DS.Model.isReloading</source>
          <target state="translated">DS.Model.isReloading</target>
        </trans-unit>
        <trans-unit id="f31989e4daca393aca210b29dda5465d3bb57e1f" translate="yes" xml:space="preserve">
          <source>DS.Model.isSaving</source>
          <target state="translated">DS.Model.isSaving</target>
        </trans-unit>
        <trans-unit id="74d446b2d852887ba417566c7656c0b1c9fe89dc" translate="yes" xml:space="preserve">
          <source>DS.Model.isValid</source>
          <target state="translated">DS.Model.isValid</target>
        </trans-unit>
        <trans-unit id="4a6a3283e8bcd5e1f4abab2fd7313bdb94a57227" translate="yes" xml:space="preserve">
          <source>DS.Model.modelName</source>
          <target state="translated">DS.Model.modelName</target>
        </trans-unit>
        <trans-unit id="4ed73add5c7655e53eca02070bf9201fae66f297" translate="yes" xml:space="preserve">
          <source>DS.Model.ready (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fffb2ecd5a71c248b6f3bd5a3b2a55d352da23b" translate="yes" xml:space="preserve">
          <source>DS.Model.relatedTypes</source>
          <target state="translated">DS.Model.relatedTypes</target>
        </trans-unit>
        <trans-unit id="a880e9dc2b763201eaaf29bb01020ebc6dbe5606" translate="yes" xml:space="preserve">
          <source>DS.Model.relationshipNames</source>
          <target state="translated">DS.Model.relationshipNames</target>
        </trans-unit>
        <trans-unit id="6770f17e82c2067aa54ba73f17bd13b04d8c0391" translate="yes" xml:space="preserve">
          <source>DS.Model.relationships</source>
          <target state="translated">DS.Model.relationships</target>
        </trans-unit>
        <trans-unit id="08f3425a983ec34f4db5f2c83d90e075be50642d" translate="yes" xml:space="preserve">
          <source>DS.Model.relationshipsByName</source>
          <target state="translated">DS.Model.relationshipsByName</target>
        </trans-unit>
        <trans-unit id="8083cd1507d3254cb7f830259428551b92c53cf8" translate="yes" xml:space="preserve">
          <source>DS.Model.reload()</source>
          <target state="translated">DS.Model.reload()</target>
        </trans-unit>
        <trans-unit id="81245bf432c1de2d03577e332bd6611cc120614c" translate="yes" xml:space="preserve">
          <source>DS.Model.rollbackAttribute()</source>
          <target state="translated">DS.Model.rollbackAttribute()</target>
        </trans-unit>
        <trans-unit id="f6f4a31c797e6c56a0e8459301d4e5586c16d0d4" translate="yes" xml:space="preserve">
          <source>DS.Model.rollbackAttributes()</source>
          <target state="translated">DS.Model.rollbackAttributes()</target>
        </trans-unit>
        <trans-unit id="7df8a156e7c1cca66e6ab1a4b19f5dba0b8a15aa" translate="yes" xml:space="preserve">
          <source>DS.Model.rolledBack (event)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e633b72feb4ab1ef364ad5873df827e804d6756b" translate="yes" xml:space="preserve">
          <source>DS.Model.save()</source>
          <target state="translated">DS.Model.save()</target>
        </trans-unit>
        <trans-unit id="ac04893c5a16e3bc39a06835faa42430b14494e0" translate="yes" xml:space="preserve">
          <source>DS.Model.serialize()</source>
          <target state="translated">DS.Model.serialize()</target>
        </trans-unit>
        <trans-unit id="2c9a4ef5326585ceeabee8db96e274ef2f025b38" translate="yes" xml:space="preserve">
          <source>DS.Model.toJSON()</source>
          <target state="translated">DS.Model.toJSON()</target>
        </trans-unit>
        <trans-unit id="00624e8f9016f287c2b9943f0c6d58db8f13c699" translate="yes" xml:space="preserve">
          <source>DS.Model.transformedAttributes</source>
          <target state="translated">DS.Model.transformedAttributes</target>
        </trans-unit>
        <trans-unit id="399740cd4b073f2c8848329b06f9a00b0c4014f3" translate="yes" xml:space="preserve">
          <source>DS.Model.typeForRelationship()</source>
          <target state="translated">DS.Model.typeForRelationship()</target>
        </trans-unit>
        <trans-unit id="dad6f8820abbf872b67e2d4231658ec209c9a696" translate="yes" xml:space="preserve">
          <source>DS.Model.unloadRecord()</source>
          <target state="translated">DS.Model.unloadRecord()</target>
        </trans-unit>
        <trans-unit id="df5d40e000c5f5d5f900d453a473634a3ba14456" translate="yes" xml:space="preserve">
          <source>DS.Model|Array</source>
          <target state="translated">DS.Model|Array</target>
        </trans-unit>
        <trans-unit id="03cd9a6a9e05baee862142e2c2b945300de0c5ab" translate="yes" xml:space="preserve">
          <source>DS.Model|null</source>
          <target state="translated">DS.Model|null</target>
        </trans-unit>
        <trans-unit id="13955329409e5d8fcff8752bee7cdfe98d2c57cf" translate="yes" xml:space="preserve">
          <source>DS.NotFoundError</source>
          <target state="translated">DS.NotFoundError</target>
        </trans-unit>
        <trans-unit id="ee4c26b0e2a21c1ca7fe5eec75f84429032b1f28" translate="yes" xml:space="preserve">
          <source>DS.NumberTransform</source>
          <target state="translated">DS.NumberTransform</target>
        </trans-unit>
        <trans-unit id="a570dbaf699cc92b5233b2f35f5c41f01532ad57" translate="yes" xml:space="preserve">
          <source>DS.NumberTransform (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc9f3cdac115ecfbc54b81f9a2040a22789b6f9" translate="yes" xml:space="preserve">
          <source>DS.PromiseArray</source>
          <target state="translated">DS.PromiseArray</target>
        </trans-unit>
        <trans-unit id="2c83e17b698a45c3c21f19af9363a95708e01b5a" translate="yes" xml:space="preserve">
          <source>DS.PromiseManyArray</source>
          <target state="translated">DS.PromiseManyArray</target>
        </trans-unit>
        <trans-unit id="9287f42ecc31dda58fb9137210ba8daebdad0619" translate="yes" xml:space="preserve">
          <source>DS.PromiseObject</source>
          <target state="translated">DS.PromiseObject</target>
        </trans-unit>
        <trans-unit id="99e413fe8fade3ce422f290f209b571eeda0a76d" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter</source>
          <target state="translated">DS.RESTAdapter</target>
        </trans-unit>
        <trans-unit id="6532c39ac2bafc736dd6c8f20c7f82e4d46a50f7" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3dfe2a41834ad9393f353629c802429b6f8337" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab9e103feb6be6ad2cb170825892df3419fff89f" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.coalesceFindRequests</source>
          <target state="translated">DS.RESTAdapter.coalesceFindRequests</target>
        </trans-unit>
        <trans-unit id="27472742fb036aaa9550211aa2d2a838c8830f20" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.createRecord()</source>
          <target state="translated">DS.RESTAdapter.createRecord()</target>
        </trans-unit>
        <trans-unit id="2d45bd386265d34490410857ccb4f96a3c0b053f" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.dataForRequest()</source>
          <target state="translated">DS.RESTAdapter.dataForRequest()</target>
        </trans-unit>
        <trans-unit id="55976002a825706d0db758ea79c2caf5ecb4c47e" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.deleteRecord()</source>
          <target state="translated">DS.RESTAdapter.deleteRecord()</target>
        </trans-unit>
        <trans-unit id="73c7c02a4ad594ed4331c24970a447fd762142fd" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.findAll()</source>
          <target state="translated">DS.RESTAdapter.findAll()</target>
        </trans-unit>
        <trans-unit id="12533b6981318da50d7633041fcf2acce961da81" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.findBelongsTo()</source>
          <target state="translated">DS.RESTAdapter.findBelongsTo()</target>
        </trans-unit>
        <trans-unit id="7f7f9452f3f0000038364abd7185f120f290c04f" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.findHasMany()</source>
          <target state="translated">DS.RESTAdapter.findHasMany()</target>
        </trans-unit>
        <trans-unit id="0b7c6494311c98633f57cef0d537b4e8cd457da5" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.findMany()</source>
          <target state="translated">DS.RESTAdapter.findMany()</target>
        </trans-unit>
        <trans-unit id="f82db285cdb4f46e435e6805f6ddb64f42427119" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.findRecord()</source>
          <target state="translated">DS.RESTAdapter.findRecord()</target>
        </trans-unit>
        <trans-unit id="9640031d314d1db22c7cfc9a52ad1a82981604cc" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.groupRecordsForFindMany()</source>
          <target state="translated">DS.RESTAdapter.groupRecordsForFindMany()</target>
        </trans-unit>
        <trans-unit id="8f4551e50d2cb165d86d159634ace6bb106f9131" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.handleResponse()</source>
          <target state="translated">DS.RESTAdapter.handleResponse()</target>
        </trans-unit>
        <trans-unit id="a65b174b8cb58ff5b9c49c4da12c97e8804bac2f" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.headers</source>
          <target state="translated">DS.RESTAdapter.headers</target>
        </trans-unit>
        <trans-unit id="02809f3c76115fe244f59a410279a19dda254c4d" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.headersForRequest()</source>
          <target state="translated">DS.RESTAdapter.headersForRequest()</target>
        </trans-unit>
        <trans-unit id="0c8a7214b8da77b146e5136330acb0f14c438d29" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.host</source>
          <target state="translated">DS.RESTAdapter.host</target>
        </trans-unit>
        <trans-unit id="72d3a2f97ac4294559a8b95e3e73d95aeaab3882" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.isInvalid()</source>
          <target state="translated">DS.RESTAdapter.isInvalid()</target>
        </trans-unit>
        <trans-unit id="28551a5a9c3836b7aaf44439708b7ed41bb9ef7c" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.isSuccess()</source>
          <target state="translated">DS.RESTAdapter.isSuccess()</target>
        </trans-unit>
        <trans-unit id="413b520d032c01e860f4f2ce610000ba25b9cc72" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.methodForRequest()</source>
          <target state="translated">DS.RESTAdapter.methodForRequest()</target>
        </trans-unit>
        <trans-unit id="6d21ddbda7e717cc7059d288701683eec606cb08" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.namespace</source>
          <target state="translated">DS.RESTAdapter.namespace</target>
        </trans-unit>
        <trans-unit id="6655c5d70c122547c3c80a6d6606cdf8002b6cef" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.query()</source>
          <target state="translated">DS.RESTAdapter.query()</target>
        </trans-unit>
        <trans-unit id="b4043b363037b4aef34a0a77bcd48efd0945c887" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.queryRecord()</source>
          <target state="translated">DS.RESTAdapter.queryRecord()</target>
        </trans-unit>
        <trans-unit id="1e15dec651e335b0240b8d1204fc0ae7551086a6" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.sortQueryParams()</source>
          <target state="translated">DS.RESTAdapter.sortQueryParams()</target>
        </trans-unit>
        <trans-unit id="0d0d62901721382de33d52504bf8d5b0df412a13" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.updateRecord()</source>
          <target state="translated">DS.RESTAdapter.updateRecord()</target>
        </trans-unit>
        <trans-unit id="644c0d52e80276e0fc582ce00867afba0eb1e7b6" translate="yes" xml:space="preserve">
          <source>DS.RESTAdapter.urlForRequest()</source>
          <target state="translated">DS.RESTAdapter.urlForRequest()</target>
        </trans-unit>
        <trans-unit id="4ea0f1897c86dd3d00f84506f4a9adcc39ab638f" translate="yes" xml:space="preserve">
          <source>DS.RESTSerializer</source>
          <target state="translated">DS.RESTSerializer</target>
        </trans-unit>
        <trans-unit id="9d072d23eda9d1f53acca4ccdd9c1cad6dfd7290" translate="yes" xml:space="preserve">
          <source>DS.RESTSerializer (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="799cfb98021161f31e0dbac4ee3e0ff00b5800ec" translate="yes" xml:space="preserve">
          <source>DS.RESTSerializer (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec159f2a22fdc1317718d788c5feee911baee3b6" translate="yes" xml:space="preserve">
          <source>DS.RESTSerializer.extractPolymorphicRelationship()</source>
          <target state="translated">DS.RESTSerializer.extractPolymorphicRelationship()</target>
        </trans-unit>
        <trans-unit id="6a4c862d8181845b6569e0d464bb911c268a881d" translate="yes" xml:space="preserve">
          <source>DS.RESTSerializer.keyForPolymorphicType()</source>
          <target state="translated">DS.RESTSerializer.keyForPolymorphicType()</target>
        </trans-unit>
        <trans-unit id="5472505f7dad2f39f16cf881188a2e1f4496fd80" translate="yes" xml:space="preserve">
          <source>DS.RESTSerializer.modelNameFromPayloadKey()</source>
          <target state="translated">DS.RESTSerializer.modelNameFromPayloadKey()</target>
        </trans-unit>
        <trans-unit id="8ea8fcf6d0b93e459e59a2c2e331977ee17dbabc" translate="yes" xml:space="preserve">
          <source>DS.RESTSerializer.modelNameFromPayloadType()</source>
          <target state="translated">DS.RESTSerializer.modelNameFromPayloadType()</target>
        </trans-unit>
        <trans-unit id="09cca07aa94862fc7e01d68b9c060942eb17e212" translate="yes" xml:space="preserve">
          <source>DS.RESTSerializer.normalize()</source>
          <target state="translated">DS.RESTSerializer.normalize()</target>
        </trans-unit>
        <trans-unit id="49b634b9fec15eb1b144d62a58a3e5651011f8a7" translate="yes" xml:space="preserve">
          <source>DS.RESTSerializer.payloadKeyFromModelName()</source>
          <target state="translated">DS.RESTSerializer.payloadKeyFromModelName()</target>
        </trans-unit>
        <trans-unit id="abfcc82cadfea483a7b341d96e39509ec40a8257" translate="yes" xml:space="preserve">
          <source>DS.RESTSerializer.payloadTypeFromModelName()</source>
          <target state="translated">DS.RESTSerializer.payloadTypeFromModelName()</target>
        </trans-unit>
        <trans-unit id="fa428cddcf6085652f50c564cfbcbedeea9788a3" translate="yes" xml:space="preserve">
          <source>DS.RESTSerializer.pushPayload()</source>
          <target state="translated">DS.RESTSerializer.pushPayload()</target>
        </trans-unit>
        <trans-unit id="512eb9cc155264bdce287a4837a2d71d15dbfd00" translate="yes" xml:space="preserve">
          <source>DS.RESTSerializer.serialize()</source>
          <target state="translated">DS.RESTSerializer.serialize()</target>
        </trans-unit>
        <trans-unit id="6bcf448f2e5dd0f87fd586184d9946db8dbd1920" translate="yes" xml:space="preserve">
          <source>DS.RESTSerializer.serializeIntoHash()</source>
          <target state="translated">DS.RESTSerializer.serializeIntoHash()</target>
        </trans-unit>
        <trans-unit id="9a7b5a31bc63b22f93aa86768090dd9d81259bb5" translate="yes" xml:space="preserve">
          <source>DS.RESTSerializer.serializePolymorphicType()</source>
          <target state="translated">DS.RESTSerializer.serializePolymorphicType()</target>
        </trans-unit>
        <trans-unit id="f0af423c03e9966036e9ad78293498269e928cca" translate="yes" xml:space="preserve">
          <source>DS.RecordArray</source>
          <target state="translated">DS.RecordArray</target>
        </trans-unit>
        <trans-unit id="81889f04a4bc746d73eb6ae3a8b2ee97e279a21d" translate="yes" xml:space="preserve">
          <source>DS.RecordArray (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8847809bcab102f86ccb8a7af952b90ccb4ee486" translate="yes" xml:space="preserve">
          <source>DS.RecordArray (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b69f4128be0f6f990c394f925338f854a3d413" translate="yes" xml:space="preserve">
          <source>DS.RecordArray.isLoaded</source>
          <target state="translated">DS.RecordArray.isLoaded</target>
        </trans-unit>
        <trans-unit id="320200ca08ce5b915acbfae50f06a6c0987fdb87" translate="yes" xml:space="preserve">
          <source>DS.RecordArray.isUpdating</source>
          <target state="translated">DS.RecordArray.isUpdating</target>
        </trans-unit>
        <trans-unit id="3c441ca256bc4cffd460465dcea0cf65d7dd89e6" translate="yes" xml:space="preserve">
          <source>DS.RecordArray.save()</source>
          <target state="translated">DS.RecordArray.save()</target>
        </trans-unit>
        <trans-unit id="05d3b095d1d9269edf3a7753aed3148dcc7cd330" translate="yes" xml:space="preserve">
          <source>DS.RecordArray.type</source>
          <target state="translated">DS.RecordArray.type</target>
        </trans-unit>
        <trans-unit id="0116ff7afcd9524d7bb5cd83324f23160201211e" translate="yes" xml:space="preserve">
          <source>DS.RecordArray.update()</source>
          <target state="translated">DS.RecordArray.update()</target>
        </trans-unit>
        <trans-unit id="b85410fd94f6f2191d91eaf42f17759d958c882a" translate="yes" xml:space="preserve">
          <source>DS.RecordReference</source>
          <target state="translated">DS.RecordReference</target>
        </trans-unit>
        <trans-unit id="6455b9520f83a46b9990dbc3b019ac068c3f4beb" translate="yes" xml:space="preserve">
          <source>DS.RecordReference (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c01abc49186c40156f467294ac1850cda88be5d" translate="yes" xml:space="preserve">
          <source>DS.RecordReference.id()</source>
          <target state="translated">DS.RecordReference.id()</target>
        </trans-unit>
        <trans-unit id="1919ddbb49d46ced3619240941f3168f1daf8c36" translate="yes" xml:space="preserve">
          <source>DS.RecordReference.load()</source>
          <target state="translated">DS.RecordReference.load()</target>
        </trans-unit>
        <trans-unit id="50addb4a7f320da47e3154b8e51babe51c96cb9c" translate="yes" xml:space="preserve">
          <source>DS.RecordReference.push()</source>
          <target state="translated">DS.RecordReference.push()</target>
        </trans-unit>
        <trans-unit id="184144c7cf1b31219a6b1981c38de625934c5a78" translate="yes" xml:space="preserve">
          <source>DS.RecordReference.reload()</source>
          <target state="translated">DS.RecordReference.reload()</target>
        </trans-unit>
        <trans-unit id="e61947d6c663282644d6de27e164c7604e0e37a6" translate="yes" xml:space="preserve">
          <source>DS.RecordReference.remoteType()</source>
          <target state="translated">DS.RecordReference.remoteType()</target>
        </trans-unit>
        <trans-unit id="1cc7937f9e4ffdeab6b712722c50f9f6185b82f2" translate="yes" xml:space="preserve">
          <source>DS.RecordReference.value()</source>
          <target state="translated">DS.RecordReference.value()</target>
        </trans-unit>
        <trans-unit id="3cd76a0b135eb77a5f75dda38d9c47eff36b229b" translate="yes" xml:space="preserve">
          <source>DS.Reference</source>
          <target state="translated">DS.Reference</target>
        </trans-unit>
        <trans-unit id="e0da698217affd5ed233bb776edd3a5cfe048996" translate="yes" xml:space="preserve">
          <source>DS.RootState</source>
          <target state="translated">DS.RootState</target>
        </trans-unit>
        <trans-unit id="33bfaefed24f2773b07d5fd91629b9b9c5e427fb" translate="yes" xml:space="preserve">
          <source>DS.Serializer</source>
          <target state="translated">DS.Serializer</target>
        </trans-unit>
        <trans-unit id="fe563b39971ed613513f54c3e2af41062174d4cf" translate="yes" xml:space="preserve">
          <source>DS.Serializer (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b62d4723de26af3985dae944c266d33fe77497c" translate="yes" xml:space="preserve">
          <source>DS.Serializer (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb32d6f6ce41963f6ccfb8d6309fd2a31cebca86" translate="yes" xml:space="preserve">
          <source>DS.Serializer.normalize()</source>
          <target state="translated">DS.Serializer.normalize()</target>
        </trans-unit>
        <trans-unit id="29229b5d9d9517c776d0f4840c42d65f48aef156" translate="yes" xml:space="preserve">
          <source>DS.Serializer.normalizeResponse()</source>
          <target state="translated">DS.Serializer.normalizeResponse()</target>
        </trans-unit>
        <trans-unit id="4d36a3597dbae81b41d1faf9bd419797d3800b86" translate="yes" xml:space="preserve">
          <source>DS.Serializer.serialize()</source>
          <target state="translated">DS.Serializer.serialize()</target>
        </trans-unit>
        <trans-unit id="70eb94c8700c9f7628d032afc5beb60dca0b9e46" translate="yes" xml:space="preserve">
          <source>DS.Serializer.store</source>
          <target state="translated">DS.Serializer.store</target>
        </trans-unit>
        <trans-unit id="64a452e80f4c17d4f656fae6732951915db4c8e8" translate="yes" xml:space="preserve">
          <source>DS.ServerError</source>
          <target state="translated">DS.ServerError</target>
        </trans-unit>
        <trans-unit id="0b4d0f2d388ada0a6fbd6f68001cedfde1e9f45f" translate="yes" xml:space="preserve">
          <source>DS.Snapshot</source>
          <target state="translated">DS.Snapshot</target>
        </trans-unit>
        <trans-unit id="8958d596578610f78b7c922e2e4d46f0193354dd" translate="yes" xml:space="preserve">
          <source>DS.SnapshotRecordArray</source>
          <target state="translated">DS.SnapshotRecordArray</target>
        </trans-unit>
        <trans-unit id="8b7cf6dc795a4dd153b933cd3e52697cc5b3162a" translate="yes" xml:space="preserve">
          <source>DS.Store</source>
          <target state="translated">DS.Store</target>
        </trans-unit>
        <trans-unit id="913c1aae01fcca5cb62e8c46ea8f7d329298c207" translate="yes" xml:space="preserve">
          <source>DS.Store (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae37d8212f34c1a54dd2f078bc3642a70dc03c1" translate="yes" xml:space="preserve">
          <source>DS.Store (properties)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fdcc70ba8b11c8ef9fbbd7ce8dea6956a8fdb62" translate="yes" xml:space="preserve">
          <source>DS.Store.adapter</source>
          <target state="translated">DS.Store.adapter</target>
        </trans-unit>
        <trans-unit id="82fd64dd423fd2c04e4b980ed0ad0f2719550e68" translate="yes" xml:space="preserve">
          <source>DS.Store.adapterFor()</source>
          <target state="translated">DS.Store.adapterFor()</target>
        </trans-unit>
        <trans-unit id="67d1383731597fb954ea9061ce1ed90b8c198a8e" translate="yes" xml:space="preserve">
          <source>DS.Store.createRecord()</source>
          <target state="translated">DS.Store.createRecord()</target>
        </trans-unit>
        <trans-unit id="26d842290451d4ed66a8b2109f1967709fa15b01" translate="yes" xml:space="preserve">
          <source>DS.Store.deleteRecord()</source>
          <target state="translated">DS.Store.deleteRecord()</target>
        </trans-unit>
        <trans-unit id="c28e4c8623be6b8ff48f59d51d1ae0796be1acdb" translate="yes" xml:space="preserve">
          <source>DS.Store.findAll()</source>
          <target state="translated">DS.Store.findAll()</target>
        </trans-unit>
        <trans-unit id="1f49abf08ee08962fdf8e653881cb1f928a0ab21" translate="yes" xml:space="preserve">
          <source>DS.Store.findRecord()</source>
          <target state="translated">DS.Store.findRecord()</target>
        </trans-unit>
        <trans-unit id="04fbd6e7f4caa1048f4511e67004bd2eaed7500c" translate="yes" xml:space="preserve">
          <source>DS.Store.getReference()</source>
          <target state="translated">DS.Store.getReference()</target>
        </trans-unit>
        <trans-unit id="b02396131e04f7b13050030d91f8edfc82aeaf03" translate="yes" xml:space="preserve">
          <source>DS.Store.hasRecordForId()</source>
          <target state="translated">DS.Store.hasRecordForId()</target>
        </trans-unit>
        <trans-unit id="56a2fd9f57f75055db22432a2703b79764696cee" translate="yes" xml:space="preserve">
          <source>DS.Store.modelFor()</source>
          <target state="translated">DS.Store.modelFor()</target>
        </trans-unit>
        <trans-unit id="df035dcab3b803126c13a78ed6f41497fcab6690" translate="yes" xml:space="preserve">
          <source>DS.Store.normalize()</source>
          <target state="translated">DS.Store.normalize()</target>
        </trans-unit>
        <trans-unit id="32643346596a44f68013f0088516f19b02070093" translate="yes" xml:space="preserve">
          <source>DS.Store.peekAll()</source>
          <target state="translated">DS.Store.peekAll()</target>
        </trans-unit>
        <trans-unit id="861403676b3d33b5894c6f1e74412d1424dccc23" translate="yes" xml:space="preserve">
          <source>DS.Store.peekRecord()</source>
          <target state="translated">DS.Store.peekRecord()</target>
        </trans-unit>
        <trans-unit id="9ef35c29adc21c39d491209709ccc7156b1cbd15" translate="yes" xml:space="preserve">
          <source>DS.Store.push()</source>
          <target state="translated">DS.Store.push()</target>
        </trans-unit>
        <trans-unit id="d94e0881b7d8f294caad3707204ba1d2aa53c74a" translate="yes" xml:space="preserve">
          <source>DS.Store.pushPayload()</source>
          <target state="translated">DS.Store.pushPayload()</target>
        </trans-unit>
        <trans-unit id="83f122d4c444a8754c3557f81a17b51fdbcc8963" translate="yes" xml:space="preserve">
          <source>DS.Store.query()</source>
          <target state="translated">DS.Store.query()</target>
        </trans-unit>
        <trans-unit id="30f4c0c887030835ec4a2e73d4039a5e9ed28c8e" translate="yes" xml:space="preserve">
          <source>DS.Store.queryRecord()</source>
          <target state="translated">DS.Store.queryRecord()</target>
        </trans-unit>
        <trans-unit id="bac8b06c09d537126577cfb9bf2aa2ae3c8a070c" translate="yes" xml:space="preserve">
          <source>DS.Store.serializerFor()</source>
          <target state="translated">DS.Store.serializerFor()</target>
        </trans-unit>
        <trans-unit id="0cf52af7c6e4239beacefadd92f86c2eb5b87599" translate="yes" xml:space="preserve">
          <source>DS.Store.unloadAll()</source>
          <target state="translated">DS.Store.unloadAll()</target>
        </trans-unit>
        <trans-unit id="99ac7207ce67201f044898071e97a6f60604ba78" translate="yes" xml:space="preserve">
          <source>DS.Store.unloadRecord()</source>
          <target state="translated">DS.Store.unloadRecord()</target>
        </trans-unit>
        <trans-unit id="b3ad50ecfad491c041f885cd541e5502389cddd4" translate="yes" xml:space="preserve">
          <source>DS.String</source>
          <target state="translated">DS.String</target>
        </trans-unit>
        <trans-unit id="f3b8fda7fdbfcfbc2b6f0ea31e847880c5035c69" translate="yes" xml:space="preserve">
          <source>DS.String (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebff5aac0f6a339601f9ce8f67a6f3acf7da2b1e" translate="yes" xml:space="preserve">
          <source>DS.String.pluralize()</source>
          <target state="translated">DS.String.pluralize()</target>
        </trans-unit>
        <trans-unit id="338357912b4c9be05f8478aa349c58ac02ced3be" translate="yes" xml:space="preserve">
          <source>DS.String.singularize()</source>
          <target state="translated">DS.String.singularize()</target>
        </trans-unit>
        <trans-unit id="7be09705f4168e23f6fd1c06c22c29de0618b4e2" translate="yes" xml:space="preserve">
          <source>DS.StringTransform</source>
          <target state="translated">DS.StringTransform</target>
        </trans-unit>
        <trans-unit id="71a38bc020c9793df9a54ca25fdc6707b7ab2b6f" translate="yes" xml:space="preserve">
          <source>DS.StringTransform (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdece904c62e98963e51511f0b44672798809ff0" translate="yes" xml:space="preserve">
          <source>DS.TimeoutError</source>
          <target state="translated">DS.TimeoutError</target>
        </trans-unit>
        <trans-unit id="a4fb5d70b7bb359a3920c9ad7c2b3ed4d1441d28" translate="yes" xml:space="preserve">
          <source>DS.Transform</source>
          <target state="translated">DS.Transform</target>
        </trans-unit>
        <trans-unit id="60bbaf3bd81aca51092f2b4d490fdc484246036b" translate="yes" xml:space="preserve">
          <source>DS.Transform (methods)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9360b4a9e897a936bea79c2bb54296db5b79c1" translate="yes" xml:space="preserve">
          <source>DS.Transform.deserialize()</source>
          <target state="translated">DS.Transform.deserialize()</target>
        </trans-unit>
        <trans-unit id="22ab692cac62405637e600dad56726a02e591722" translate="yes" xml:space="preserve">
          <source>DS.Transform.serialize()</source>
          <target state="translated">DS.Transform.serialize()</target>
        </trans-unit>
        <trans-unit id="8db6124329f29683f4b580bc5c3525b557e69bee" translate="yes" xml:space="preserve">
          <source>DS.UnauthorizedError</source>
          <target state="translated">DS.UnauthorizedError</target>
        </trans-unit>
        <trans-unit id="7567a35396a119863ce626ba4d006fa74735ae91" translate="yes" xml:space="preserve">
          <source>DS.VERSION</source>
          <target state="translated">DS.VERSION</target>
        </trans-unit>
        <trans-unit id="6ca0df0881f65a30b2c023fff32542213a55e066" translate="yes" xml:space="preserve">
          <source>DS.attr()</source>
          <target state="translated">DS.attr()</target>
        </trans-unit>
        <trans-unit id="2ee5be4fe0d0cf86bb91c2d8ed63cb96948f4035" translate="yes" xml:space="preserve">
          <source>DS.belongsTo()</source>
          <target state="translated">DS.belongsTo()</target>
        </trans-unit>
        <trans-unit id="e32ad212f5cf7826c7cdeeff718fde1263aa0b83" translate="yes" xml:space="preserve">
          <source>DS.diff-array()</source>
          <target state="translated">DS.diff-array()</target>
        </trans-unit>
        <trans-unit id="f72f06a367c10783958e87fb59c64a98c086e0eb" translate="yes" xml:space="preserve">
          <source>DS.errorsArrayToHash()</source>
          <target state="translated">DS.errorsArrayToHash()</target>
        </trans-unit>
        <trans-unit id="aef2e21a738324df539226fff8a30fcf6e37ee28" translate="yes" xml:space="preserve">
          <source>DS.errorsHashToArray()</source>
          <target state="translated">DS.errorsHashToArray()</target>
        </trans-unit>
        <trans-unit id="bbf64cece4bbae756229d464e670b4166a044191" translate="yes" xml:space="preserve">
          <source>DS.hasMany()</source>
          <target state="translated">DS.hasMany()</target>
        </trans-unit>
        <trans-unit id="9106fe550d0d6539c5dbaa76a1854d79745f6c57" translate="yes" xml:space="preserve">
          <source>DS.normalizeModelName()</source>
          <target state="translated">DS.normalizeModelName()</target>
        </trans-unit>
        <trans-unit id="172e82f527504d8908797f6d818a9bd0046924b2" translate="yes" xml:space="preserve">
          <source>Dasherizes and singularizes the model name in the payload to match the format Ember Data uses internally for the model name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e429bcc9c2e4a41a3c7a4d96203be6cb273b11" translate="yes" xml:space="preserve">
          <source>Data</source>
          <target state="translated">Data</target>
        </trans-unit>
        <trans-unit id="95c3d9e3b7b45343a2ff3036a47420971fa30e2b" translate="yes" xml:space="preserve">
          <source>Data Adapter Not Detected</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6839d8f3062524de9c3e80997d9e10d166ac76bd" translate="yes" xml:space="preserve">
          <source>Data Tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa795d2173bcd46fbf8a4a49f1f040c24ce6ede" translate="yes" xml:space="preserve">
          <source>Data that is not a part of the primary request but includes linked relationships should be placed in an array under the &lt;code&gt;included&lt;/code&gt; key. For example, if you request &lt;code&gt;/articles/1&lt;/code&gt; and the backend also returned any comments associated with that person the response should look like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec97091a2b1383dd2136511c9633ef21bb3bc9b9" translate="yes" xml:space="preserve">
          <source>DataAdapter</source>
          <target state="translated">DataAdapter</target>
        </trans-unit>
        <trans-unit id="3932fc01b678198b204838e48a2b586a44cf2df4" translate="yes" xml:space="preserve">
          <source>Date picker libraries usually attach to an &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element, so we will use jQuery to find an appropriate input within our component's template.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b22fbb068ee1e17e5e5a3cb3ec0c264d0269d5f6" translate="yes" xml:space="preserve">
          <source>Deactivate existing routes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b79a6b7df7dc7a85f13bb803f1c55e3700858030" translate="yes" xml:space="preserve">
          <source>Dealing with deprecations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd604d99e75e45d38bc7ac8fc714cde0097d901f" translate="yes" xml:space="preserve">
          <source>Debug</source>
          <target state="translated">Debug</target>
        </trans-unit>
        <trans-unit id="895b27c88016513d278a0ce3dc0663fae3829d58" translate="yes" xml:space="preserve">
          <source>Debugging</source>
          <target state="translated">Debugging</target>
        </trans-unit>
        <trans-unit id="e2ac1260a70fc92fd9627a7709eb57ab3e2a26aa" translate="yes" xml:space="preserve">
          <source>Debugging Promises</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2663e7a8a7cfb358822721e5f772abf7baf97d4a" translate="yes" xml:space="preserve">
          <source>Default &lt;code&gt;handleResponse&lt;/code&gt; implementation uses this hook to decide if the response is a success.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1663f39108c210749dcdddf1ccca990e148e6b3" translate="yes" xml:space="preserve">
          <source>Default &lt;code&gt;handleResponse&lt;/code&gt; implementation uses this hook to decide if the response is an invalid error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2070e3e812ec184f38ba4592fa8a3640c037b35" translate="yes" xml:space="preserve">
          <source>Default value can also be a function. This is useful it you want to return a new object for each attribute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54d6cdabdcdf75020817f575d330a4fbf1f324f" translate="yes" xml:space="preserve">
          <source>Default values and deserialization</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bd0b1eca40d7f21375d97691a65858fa1e0bb5b" translate="yes" xml:space="preserve">
          <source>DefaultResolver</source>
          <target state="translated">DefaultResolver</target>
        </trans-unit>
        <trans-unit id="93848b819a3675ab2e6597f08b888c1f1365cdce" translate="yes" xml:space="preserve">
          <source>Define a Route</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff0051889cf09c7eb190f256cf63a37bc901592" translate="yes" xml:space="preserve">
          <source>Define a dependency injection onto a specific factory or all factories of a type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bacd39ef745414409c16cefd19522f9a32bd0ee" translate="yes" xml:space="preserve">
          <source>Define a property as a function that should be executed when a specified event or events are triggered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="426f1a77269632eb69522a62e27e920c93dc3bf8" translate="yes" xml:space="preserve">
          <source>Define an assertion that will throw an exception if the condition is not met.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd7bff6eb3035504129406090fc247e03e0ecef" translate="yes" xml:space="preserve">
          <source>Define the event handler in the component (which is designed to receive the browser event object).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636492f919d65805b4c12f03e2d7e7394c732094" translate="yes" xml:space="preserve">
          <source>Define your application's store like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee860cfbf6780b5dbd014062daa21dfc0e1bedc6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L110&quot;&gt; addon/-private/adapters/build-url-mixin.js:110 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51f328123c6cba80acea685614df2280486dd21" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L137&quot;&gt; addon/-private/adapters/build-url-mixin.js:137 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9eef1e6eaf192d61e94ec3c89d166e03d3fdf44" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L161&quot;&gt; addon/-private/adapters/build-url-mixin.js:161 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dd2d599070dc7310b3284480b318aa78ccbe024" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L191&quot;&gt; addon/-private/adapters/build-url-mixin.js:191 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902c5c5b4b83bdf948224afa004a12b43d55d76c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L216&quot;&gt; addon/-private/adapters/build-url-mixin.js:216 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f41d7fc27c21e91a067cf90e13bdc392121495" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L244&quot;&gt; addon/-private/adapters/build-url-mixin.js:244 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c0fe82925317316c86d5ed13afbed7be815f72" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L271&quot;&gt; addon/-private/adapters/build-url-mixin.js:271 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a7a9f82d13381fbe5b3e5eb1d1d4a20af21e72" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L298&quot;&gt; addon/-private/adapters/build-url-mixin.js:298 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efbbc5adf726f6d06db4f14622dc1fd0f12edab2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L323&quot;&gt; addon/-private/adapters/build-url-mixin.js:323 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eeda4526bdb5d28a8b415ff8316ebebb1f20802" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L33&quot;&gt; addon/-private/adapters/build-url-mixin.js:33 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="225dd1cc93ae1353ff4539d8284646e35da2beaf" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L348&quot;&gt; addon/-private/adapters/build-url-mixin.js:348 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9536bc8f7325bc3681fe74bb8148872f2a0b73c4" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/adapters/build-url-mixin.js#L410&quot;&gt; addon/-private/adapters/build-url-mixin.js:410 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01c79135fad65277df286ce9b8f67ea63d751cb" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/core.js#L1&quot;&gt; addon/-private/system/diff-array.js:1 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9a020eefc94c6355425342844db3b7387ebd200" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/core.js#L12&quot;&gt; addon/-private/system/relationships/has-many.js:12 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d94c1f16e3593c8a65b138af1b8384161df17d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/core.js#L15&quot;&gt; addon/-private/core.js:15 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9740aa048a3b17896fc5c9ce32cb11dff73711f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/core.js#L342&quot;&gt; addon/-private/adapters/errors.js:342 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d314a186caaeb22d9c666f1f812635864a5c44" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/core.js#L38&quot;&gt; addon/attr.js:38 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="259590326870b466d91867aad0ed045b061361e7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/core.js#L415&quot;&gt; addon/-private/adapters/errors.js:415 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a286f9c7349bac510574dbe488c94094a0dca0a6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/core.js#L5&quot;&gt; addon/-private/system/relationships/belongs-to.js:5 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64035d5105c6b39e9635e5c5430e3064d2c553c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/core.js#L6&quot;&gt; addon/-private/system/normalize-model-name.js:6 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9426c2f4226e35ff367b20610ace35444bad58b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/many-array.js#L214&quot;&gt; addon/-private/system/many-array.js:214 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30f2dfc7d52861a5ede6af526421a23e8f65e243" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/many-array.js#L241&quot;&gt; addon/-private/system/many-array.js:241 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e68107f71290cdebb9b74a251ad76002e9e8a7e7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/many-array.js#L59&quot;&gt; addon/-private/system/many-array.js:59 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05a90baf01a0566e3ccb56c67e16ad8b8311a028" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/many-array.js#L76&quot;&gt; addon/-private/system/many-array.js:76 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d951e60bacb0f225f6189a0aa4b01b4d03c62e5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/errors.js#L136&quot;&gt; addon/-private/system/model/errors.js:136 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c66f03fae486f6dc620cba93707d26944cdc65e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/errors.js#L158&quot;&gt; addon/-private/system/model/errors.js:158 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5cca526e47b7460607b107849422268becd3d4e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/errors.js#L194&quot;&gt; addon/-private/system/model/errors.js:194 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fdf94de47ff266f95f29feaf4df714647d77afe" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/errors.js#L202&quot;&gt; addon/-private/system/model/errors.js:202 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef03aca753de81382eba60f064bd4e642c97b960" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/errors.js#L405&quot;&gt; addon/-private/system/model/errors.js:405 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9800df69a87035c233aba2f1e9f5d5e191c3610" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L104&quot;&gt; addon/-private/system/model/model.js:104 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="501d79639306f468610fd470964c21fe3efe562e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1044&quot;&gt; addon/-private/system/model/model.js:1044 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6bab584f20e67e24d1c188013fa914d2be07697" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L115&quot;&gt; addon/-private/system/model/model.js:115 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ef1e267d2a46f1862e1bd410d21576b2611914d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1159&quot;&gt; addon/-private/system/model/model.js:1159 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="535500b604f0b847758735c6c0f6d5d1c216f642" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1205&quot;&gt; addon/-private/system/model/model.js:1205 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d89b1b92169134ad13d641fa252f203326b6ab5b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1235&quot;&gt; addon/-private/system/model/model.js:1235 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e92bb95428acec0f3e0f2e23dd72ce22cd1e589f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1354&quot;&gt; addon/-private/system/model/model.js:1354 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06eb9b07c5e27397d0ccb857f6fb320fe2f5c35" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L137&quot;&gt; addon/-private/system/model/model.js:137 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a391c6f9cd4d9b9bd7c61677cbf04098f532745" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1397&quot;&gt; addon/-private/system/model/model.js:1397 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4752e47b809dafe4218b23e9f000b4d4f2f3574f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1446&quot;&gt; addon/-private/system/model/model.js:1446 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84cf35ffeedc2a74b4db6c5091bae60f4ab97c6c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1481&quot;&gt; addon/-private/system/model/model.js:1481 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242556ca68d4f3be45b9adc4ca479e8a625c310a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1519&quot;&gt; addon/-private/system/model/model.js:1519 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dc36f13b2b8a23ffa0cae8508de151c94ca0a00" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1590&quot;&gt; addon/-private/system/model/model.js:1590 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7ecba0d55c67326bf0abec1fbb764413579910" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1631&quot;&gt; addon/-private/system/model/model.js:1631 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f8d32a3d2895f3c46496f150d75c125e3eac024" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L164&quot;&gt; addon/-private/system/model/model.js:164 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ca5020dfec5cff71b504de5c7e1ff71e508f48" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1684&quot;&gt; addon/-private/system/model/model.js:1684 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf4ef91e002f00d7bfbb3e3ebeff638dababf19f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1734&quot;&gt; addon/-private/system/model/model.js:1734 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2de700cb92f707f1827e8a6b651df0c8334e1b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1783&quot;&gt; addon/-private/system/model/model.js:1783 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b9e05d5ed434340626d3e7cb057e78e8c4738c6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1855&quot;&gt; addon/-private/system/model/model.js:1855 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5db4f373e790abc417d94fc38049f3504e299f8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L187&quot;&gt; addon/-private/system/model/model.js:187 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e2db186255d4dcf831e2b6326d82e59f559c459" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L1888&quot;&gt; addon/-private/system/model/model.js:1888 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="180a2a94624cfd665483ba3f6344fb61e21e7d5e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L225&quot;&gt; addon/-private/system/model/model.js:225 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78695403708f87abd634f48f39da9ade79c52eb" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L247&quot;&gt; addon/-private/system/model/model.js:247 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685b31f530decefc140d5b2faaa404f92288ff96" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L258&quot;&gt; addon/-private/system/model/model.js:258 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0dda6bc51a7f9ed52b8cd18802dfa99c17bae4b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L280&quot;&gt; addon/-private/system/model/model.js:280 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16937005844c6afe37240e0069122fc2d6394042" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L301&quot;&gt; addon/-private/system/model/model.js:301 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b27e3f21fdaf53c4d8316b8ea135d1914c22956d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L318&quot;&gt; addon/-private/system/model/model.js:318 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8da22c3cbb0dbf565d44c95003ecd48db6cd46" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L346&quot;&gt; addon/-private/system/model/model.js:346 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28aed88eef338b0c965f5897ad915d3ede681194" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L410&quot;&gt; addon/-private/system/model/model.js:410 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6b28472a39810fedad3c2e991c4cdbc2dfbb00" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L419&quot;&gt; addon/-private/system/model/model.js:419 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8099ccbdff101402c2ac368171aa6b0490e574" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L437&quot;&gt; addon/-private/system/model/model.js:437 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98493d338dd009fae2fae522d53f38d09b42224c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L459&quot;&gt; addon/-private/system/model/model.js:459 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c26f6bdcaf4095320179229dbd0a0dc03a78989c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L467&quot;&gt; addon/-private/system/model/model.js:467 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f34f7a805851c097c1894105989fb50a23a687dc" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L474&quot;&gt; addon/-private/system/model/model.js:474 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295cdb2ace816f02b215408dac0bdf8491f4b68d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L481&quot;&gt; addon/-private/system/model/model.js:481 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2f56c4f123356ae8a2e045932acb40d8b4bacfb" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L488&quot;&gt; addon/-private/system/model/model.js:488 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ead4aa12ea47a678b8fde526d8968af78adcae" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L495&quot;&gt; addon/-private/system/model/model.js:495 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92227f7c90f7989c9a243c06f0a97cb31cf2b8ec" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L502&quot;&gt; addon/-private/system/model/model.js:502 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d615f526d7c5d9cec40f7c9478374c5f23a91007" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L509&quot;&gt; addon/-private/system/model/model.js:509 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a941d554a2e30de85afbbee5b607ddc0803ebbf1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L537&quot;&gt; addon/-private/system/model/model.js:537 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84b3753fa28fa151c7183f37a7e2588ee028f569" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L569&quot;&gt; addon/-private/system/model/model.js:569 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="513005aac3a9e1ce4afec9479050cd9f12f851bf" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L619&quot;&gt; addon/-private/system/model/model.js:619 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28723e4ddf22aa51e18a8613ec767acd826b8546" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L643&quot;&gt; addon/-private/system/model/model.js:643 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="796155869ef7988cf14e1cd5ac994a62153b4da6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L709&quot;&gt; addon/-private/system/model/model.js:709 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90098cdd63b25ac528688f76b48fcea82620e754" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L742&quot;&gt; addon/-private/system/model/model.js:742 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0365edada61f9d9d9c43a5c2a318c0abd005cf1d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L788&quot;&gt; addon/-private/system/model/model.js:788 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51e3bfbd0d57c0b6e3016d230f1aaf3d9f30c53d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L849&quot;&gt; addon/-private/system/model/model.js:849 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5f164c439b35c485dfbaa991f3d1d93385f3cde" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L90&quot;&gt; addon/-private/system/model/model.js:90 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd166ed261d5581014c43a28aa41e3bb410e8e71" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/model/model.js#L914&quot;&gt; addon/-private/system/model/model.js:914 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c28df6f65aa7eea1ea52c8c859b2aa9fbeb89f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/filtered-record-array.js#L27&quot;&gt; addon/-private/system/record-arrays/filtered-record-array.js:27 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea603cb8f413e12466bbde18e223c7d2ddae6ca8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L112&quot;&gt; addon/-private/system/record-arrays/record-array.js:112 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca49daf5a20f0b28d3f5068a4f3fdb813d4b2bd" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L180&quot;&gt; addon/-private/system/record-arrays/record-array.js:180 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="625c8980e3be69a7ee84afe7bef9632a6f467c27" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L40&quot;&gt; addon/-private/system/record-arrays/record-array.js:40 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c264ea38480c01aca1e3a353d05feae65482b2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L54&quot;&gt; addon/-private/system/record-arrays/record-array.js:54 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19689b53a4c4c5288f62b2db30e0122072dc70b4" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/record-arrays/record-array.js#L86&quot;&gt; addon/-private/system/record-arrays/record-array.js:86 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b760479ddaf2160c1888af546ecb986328b877" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/belongs-to.js#L116&quot;&gt; addon/-private/system/references/belongs-to.js:116 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2fb0db68e43ea39d9c11612fe3e716b17e29d46" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/belongs-to.js#L156&quot;&gt; addon/-private/system/references/belongs-to.js:156 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e48f446485ef56c2313fba9fc6be219be62d6b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/belongs-to.js#L198&quot;&gt; addon/-private/system/references/belongs-to.js:198 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e0c56107d479b520263f4b8a286606740fedc8e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/belongs-to.js#L266&quot;&gt; addon/-private/system/references/belongs-to.js:266 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a886d83c7d30a7074b04749a8df21dedcc2835" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/belongs-to.js#L31&quot;&gt; addon/-private/system/references/belongs-to.js:31 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420d8b282d20ebecff7c207033f184cb7fa326c3" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/belongs-to.js#L324&quot;&gt; addon/-private/system/references/belongs-to.js:324 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0d5a0d9e2cb04d93c841bccdef0b1745a91628c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/belongs-to.js#L371&quot;&gt; addon/-private/system/references/belongs-to.js:371 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83f85230c96f1bd36a916b3b9ddb89607974a5c0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/belongs-to.js#L74&quot;&gt; addon/-private/system/references/belongs-to.js:74 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b536950d1cb13d036a60c5f22f11a20997588f11" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/has-many.js#L162&quot;&gt; addon/-private/system/references/has-many.js:162 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c0dde69bd0a203b7a592e3a4b328feca729fda" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/has-many.js#L206&quot;&gt; addon/-private/system/references/has-many.js:206 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b627d6547c3e5d73cd1bba0eabce07670cbecd5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/has-many.js#L319&quot;&gt; addon/-private/system/references/has-many.js:319 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5416307d51581c26863323c890d255d26b8cff" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/has-many.js#L36&quot;&gt; addon/-private/system/references/has-many.js:36 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad114259b5bb758f48f4235fef1badcdbd6629e6" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/has-many.js#L365&quot;&gt; addon/-private/system/references/has-many.js:365 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1565b674ed4db1da125b5748d370f72b0e88c862" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/has-many.js#L410&quot;&gt; addon/-private/system/references/has-many.js:410 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf7d4e31aec460359b6a54ecb3fba8eaaab2869" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/has-many.js#L83&quot;&gt; addon/-private/system/references/has-many.js:83 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199882b717bfc24477cfd8ab5b8ddbfabb00545a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/record.js#L120&quot;&gt; addon/-private/system/references/record.js:120 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d894beb5b2078ee9f8b95450257ccd5a3b1832f5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/record.js#L140&quot;&gt; addon/-private/system/references/record.js:140 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ab1882444f254d3cb3d5c9a00ab4db4eea2390d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/record.js#L21&quot;&gt; addon/-private/system/references/record.js:21 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232b910f105d2a1a1d75ead8f64c25f70f3b62d9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/record.js#L42&quot;&gt; addon/-private/system/references/record.js:42 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474cfed8722a77a102d4afe4d8ca0d75a498f7fa" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/record.js#L62&quot;&gt; addon/-private/system/references/record.js:62 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609ac301c79adca498105fe1a2c3e271fa58041c" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/references/record.js#L98&quot;&gt; addon/-private/system/references/record.js:98 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="520a95414757d429b9b2181d962e6ee550d2629d" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L1018&quot;&gt; addon/-private/system/store.js:1018 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10c5462b16d15ae2b30fa19ddbc03236cb7a60e4" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L1077&quot;&gt; addon/-private/system/store.js:1077 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7d075f84cd8c69e3dd68398a5989e21bcf68f76" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L1212&quot;&gt; addon/-private/system/store.js:1212 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2da0b34e596a285def7c9b007ccba782d8193080" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L1298&quot;&gt; addon/-private/system/store.js:1298 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b39300b258fe661776c7641543e6fe0add4712" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L1416&quot;&gt; addon/-private/system/store.js:1416 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38fcbe5db84fbd9563271552caffdca5a6ca7e0e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L1674&quot;&gt; addon/-private/system/store.js:1674 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3245bac94312637fd50caa8b7f730045d7c72eed" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L1710&quot;&gt; addon/-private/system/store.js:1710 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2ce0ff9ea42d32d832d947b2c0b4568b38d7e7" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L2076&quot;&gt; addon/-private/system/store.js:2076 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cadce5548abf8b88e6304fd03efd5052c80c7410" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L2153&quot;&gt; addon/-private/system/store.js:2153 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050101afaf51b84ce302454d08a5aaa0a05b4d33" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L2450&quot;&gt; addon/-private/system/store.js:2450 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d5fa92de2336aefab8bf903ae511beec1baaf1a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L247&quot;&gt; addon/-private/system/store.js:247 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727919a318f13ec49dac8a195473e2486c61bf9f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L2525&quot;&gt; addon/-private/system/store.js:2525 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6884a1866a27dc48d2d001c39b6d83929505bcce" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L2624&quot;&gt; addon/-private/system/store.js:2624 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70f43ada79ea7e25f14d0e2d9b49b8921e0c93f9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L2654&quot;&gt; addon/-private/system/store.js:2654 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac418af90708b5dc3a8c1a5a56310a08db600414" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L321&quot;&gt; addon/-private/system/store.js:321 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3db5c2da6cf3e1cc3ab8024550f1e70a6491ca8a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L406&quot;&gt; addon/-private/system/store.js:406 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347987bfe3658d18898acefde8bc8a50e054ce6f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L426&quot;&gt; addon/-private/system/store.js:426 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dd621ca0cdec3f3d6002f10f26d0e6698423e00" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L473&quot;&gt; addon/-private/system/store.js:473 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34102f93e15878fcff548efa6586617fbb2228ac" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/-private/system/store.js#L975&quot;&gt; addon/-private/system/store.js:975 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c94c8196b71e8c2c569a1a0857811e8ca9078024" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L122&quot;&gt; addon/adapter.js:122 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06481dc5433ec6bacd9ba4d3b5aab2d25858941e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L155&quot;&gt; addon/adapter.js:155 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db65379c7c26571acff8ab0e3defa7dc9fd9b70e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L186&quot;&gt; addon/adapter.js:186 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e085577090fb3985dc3fef64a5158e004965827" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L223&quot;&gt; addon/adapter.js:223 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da47c7078aa1c4f1780a7ad8760724ef735dbdc" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L257&quot;&gt; addon/adapter.js:257 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de16349b11dabb43a80a9cd630d7df4c7c8bb46f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L284&quot;&gt; addon/adapter.js:284 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e71bb0a23abaf6a7b6ce5f865951c6d15c31bbd9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L325&quot;&gt; addon/adapter.js:325 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e5e4fc30e8a5401a6c0e4f337541dbde63c62b9" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L375&quot;&gt; addon/adapter.js:375 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2682d0817a8acb20eaf8a7644b9cf865268a1cb5" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L417&quot;&gt; addon/adapter.js:417 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e4e7dde159b299541a2664918db5db35fd9fe33" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L428&quot;&gt; addon/adapter.js:428 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="783bc0209e8459d52aed7db87dae3d827167c781" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L465&quot;&gt; addon/adapter.js:465 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a091c1c371170e6ff9f5cc3fc6fc7ffa67426438" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L485&quot;&gt; addon/adapter.js:485 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32421b51367848c2b0db31a07bca6d3e2b35118a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L535&quot;&gt; addon/adapter.js:535 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609f8c468c22cdfb3c81daf1d19fcbc6f1b9da82" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L590&quot;&gt; addon/adapter.js:590 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61778b3f0c8828fda408f46b254fcde56e7c0dd3" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L630&quot;&gt; addon/adapter.js:630 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89d9538ecb6af1dae2dca8d79b213087cf16c7e" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L65&quot;&gt; addon/adapter.js:65 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4b6d9860090751072fcdbbbe44796fe908cf15" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapter.js#L87&quot;&gt; addon/adapter.js:87 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b70349a60365f5ebc19462d5c75f7b656c52f467" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/json-api.js#L192&quot;&gt; addon/adapters/json-api.js:192 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490ef5c0b9496360fb8d32d16a4f78c46816d57a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1007&quot;&gt; addon/adapters/rest.js:1007 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad39dfbd993431c3dab8dfedb1e730881941301a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1243&quot;&gt; addon/adapters/rest.js:1243 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c69293fdc66097dbd35abe4a2b25fc58dbb086d8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1301&quot;&gt; addon/adapters/rest.js:1301 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f101b323fb8f8abd0647f7f0c5319ce2e7bdf75" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1321&quot;&gt; addon/adapters/rest.js:1321 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444c1b7263ed8883240368c177db87e6d6aeb0ee" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L1358&quot;&gt; addon/adapters/rest.js:1358 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61a7e7c211f6c091b86d040dfc9a10a3595e4132" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L289&quot;&gt; addon/adapters/rest.js:289 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7550df681ca8d233efab8a4b782935b1d9bc0659" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L346&quot;&gt; addon/adapters/rest.js:346 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf7117dd6181cd307f5f6d09f2da70f08a3ff0a" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L395&quot;&gt; addon/adapters/rest.js:395 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4e10d0056ed816f4dd073e21c64418a92c2389" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L413&quot;&gt; addon/adapters/rest.js:413 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb79f41e264c516f9379ace52ca53c2c330725f2" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L430&quot;&gt; addon/adapters/rest.js:430 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759d31e1cc3c30d080ea2943b84d4e7dcd9f4a4b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L452&quot;&gt; addon/adapters/rest.js:452 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976f133a7ec1f5ffccb41f4e621bbf469825166f" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L485&quot;&gt; addon/adapters/rest.js:485 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5455e245e3fa421121e4e007e9830bed3672031" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L521&quot;&gt; addon/adapters/rest.js:521 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e0102da48ad42c5126a7c094cefb1f60ae6a487" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L557&quot;&gt; addon/adapters/rest.js:557 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b5762f633a62530586b7ed4b14108e377c3ade" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L594&quot;&gt; addon/adapters/rest.js:594 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb55a7929a3e889e6ad292330ef890044fdc3a8" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L641&quot;&gt; addon/adapters/rest.js:641 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d3b283a84fe23123588b03078a3743f5c9203b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L695&quot;&gt; addon/adapters/rest.js:695 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1134936e5e82fdc61051309b2881bcb94aabdcd0" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L747&quot;&gt; addon/adapters/rest.js:747 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9c1b54baa22016edc751edb0ca8437f5ef1191" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L782&quot;&gt; addon/adapters/rest.js:782 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fea02e1834ea496f9e35dbf25abef348d8e57869" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L819&quot;&gt; addon/adapters/rest.js:819 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="903f89bf5df3f971c69433980923d901c328a7c1" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L869&quot;&gt; addon/adapters/rest.js:869 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0935a756ea34301552ae3e7c53ebf7010c1d1001" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L933&quot;&gt; addon/adapters/rest.js:933 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17a25ef1d7fac6ccc1f0bbc7454c3996da8dff8b" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/adapters/rest.js#L992&quot;&gt; addon/adapters/rest.js:992 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfdd3a408ec4ef9712217816739935fb9998a5fe" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializer.js#L129&quot;&gt; addon/serializer.js:129 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4b41156bb6b5420b52bab0268ba08a862356af" translate="yes" xml:space="preserve">
          <source>Defined in &lt;a href=&quot;https://github.com/emberjs/data/tree/v2.14.10/addon/serializer.js#L29&quot;&gt; addon/serializer.js:29 &lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
