<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="laravel">
    <body>
      <group id="laravel">
        <trans-unit id="94be3589a07b26452083745d697da2a4cf67c084" translate="yes" xml:space="preserve">
          <source>The output handler callback.</source>
          <target state="translated">출력 핸들러 콜백</target>
        </trans-unit>
        <trans-unit id="1592218a62638fe8ddbe41a6ffe64a302dc3c079" translate="yes" xml:space="preserve">
          <source>The output interface implementation.</source>
          <target state="translated">출력 인터페이스 구현</target>
        </trans-unit>
        <trans-unit id="efef637298017b96c00db29f6fbb04f51dea6a63" translate="yes" xml:space="preserve">
          <source>The paginator implementation.</source>
          <target state="translated">페이지 매김 구현.</target>
        </trans-unit>
        <trans-unit id="ac5a21d50bbeee8cd105d3f06e77d65b3f449d1a" translate="yes" xml:space="preserve">
          <source>The panel component renders the given block of text in a panel that has a slightly different background color than the rest of the message. This allows you to draw attention to a given block of text:</source>
          <target state="translated">패널 구성 요소는 나머지 메시지와 배경색이 약간 다른 패널에서 지정된 텍스트 블록을 렌더링합니다. 이를 통해 주어진 텍스트 블록에 주목할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e93b51d43e7cb513d86c518478cd839282f2231f" translate="yes" xml:space="preserve">
          <source>The panel component renders the given block of text in a panel that has a slightly different background color than the rest of the notification. This allows you to draw attention to a given block of text:</source>
          <target state="translated">패널 구성 요소는 나머지 알림과 배경색이 약간 다른 패널에서 지정된 텍스트 블록을 렌더링합니다. 이를 통해 주어진 텍스트 블록에 주목할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5f58475cf813553f8558bb5f62dde1c4eeb2334" translate="yes" xml:space="preserve">
          <source>The parameter names for the route.</source>
          <target state="translated">경로의 매개 변수 이름입니다.</target>
        </trans-unit>
        <trans-unit id="ee43f2aac1dddb44c5ce00a1e90083ee8a374d7d" translate="yes" xml:space="preserve">
          <source>The parameter override stack.</source>
          <target state="translated">매개 변수 대체 스택</target>
        </trans-unit>
        <trans-unit id="e4766db45f665e17e55fa192e169308d5c2cb7b2" translate="yes" xml:space="preserve">
          <source>The parameters set for this resource instance.</source>
          <target state="translated">이 자원 인스턴스에 설정된 매개 변수.</target>
        </trans-unit>
        <trans-unit id="7282c6d7c50ee64fe886677d37c2a61bd9c866f9" translate="yes" xml:space="preserve">
          <source>The parameters to pass to the command.</source>
          <target state="translated">명령에 전달할 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="902c331440e6a8019042c2868d8cf1991c3b0ad1" translate="yes" xml:space="preserve">
          <source>The parameters to pass to the method.</source>
          <target state="translated">메소드에 전달할 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="8836bb158d112ff7068e1e120206a763d7673269" translate="yes" xml:space="preserve">
          <source>The parent model instance.</source>
          <target state="translated">부모 모델 인스턴스</target>
        </trans-unit>
        <trans-unit id="a43200c593618940b314d78b25a9683fbe867ddf" translate="yes" xml:space="preserve">
          <source>The parent model of the relationship.</source>
          <target state="translated">관계의 상위 모델입니다.</target>
        </trans-unit>
        <trans-unit id="42ec5036ce81e5c38f017303e70c4596b4478a11" translate="yes" xml:space="preserve">
          <source>The parent placeholder for the request.</source>
          <target state="translated">요청의 부모 자리 표시 자</target>
        </trans-unit>
        <trans-unit id="f3a36f3c1bd0a8184ab4a287ddc8e69705df7b61" translate="yes" xml:space="preserve">
          <source>The password reset token.</source>
          <target state="translated">비밀번호 재설정 토큰.</target>
        </trans-unit>
        <trans-unit id="b53f647f4d451b23820c56e1589709aa1a3c92d1" translate="yes" xml:space="preserve">
          <source>The password token repository.</source>
          <target state="translated">비밀번호 토큰 저장소</target>
        </trans-unit>
        <trans-unit id="c0a14434a92eaa0f8e4a8f4af13ef54ebf2eb75a" translate="yes" xml:space="preserve">
          <source>The path resource or null on failure.</source>
          <target state="translated">경로 리소스 또는 실패시 null</target>
        </trans-unit>
        <trans-unit id="7e8bdfc1d1507fa4bd04ea87a5760cf7e62cf892" translate="yes" xml:space="preserve">
          <source>The path the client should be redirected to.</source>
          <target state="translated">클라이언트가 경로 재 지정되어야하는 경로.</target>
        </trans-unit>
        <trans-unit id="7b7820185ffd5d7ec8d2f633f034237b7bd8fb57" translate="yes" xml:space="preserve">
          <source>The path the user should be redirected to.</source>
          <target state="translated">사용자를 리디렉션해야하는 경로입니다.</target>
        </trans-unit>
        <trans-unit id="9e27ef61662e43c88e72c2eee7996b29b12ffeb9" translate="yes" xml:space="preserve">
          <source>The path to the manifest file.</source>
          <target state="translated">매니페스트 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="add09e0cc8a57734ee01c90eac0ba6175f978a27" translate="yes" xml:space="preserve">
          <source>The path to the view file.</source>
          <target state="translated">뷰 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="5565f02a538d3706e36f4b7f26090d42dbd6ad9a" translate="yes" xml:space="preserve">
          <source>The path where sessions should be stored.</source>
          <target state="translated">세션을 저장해야하는 경로입니다.</target>
        </trans-unit>
        <trans-unit id="b0213bfbcc42800df8dd2a5938b0bfbd0e4e1f00" translate="yes" xml:space="preserve">
          <source>The paths that should be published by group.</source>
          <target state="translated">그룹별로 게시해야하는 경로입니다.</target>
        </trans-unit>
        <trans-unit id="d11b7aa3cd9a7dcedcefcbc9eb709c9a04d3cdfd" translate="yes" xml:space="preserve">
          <source>The paths that should be published.</source>
          <target state="translated">게시해야 할 경로입니다.</target>
        </trans-unit>
        <trans-unit id="b0b8fd52944cfe758ddc216bf307a8431ba07d9d" translate="yes" xml:space="preserve">
          <source>The paths to all of the migration files.</source>
          <target state="translated">모든 마이그레이션 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="d24aad41128f2e7bb10ce0967a69013ddb6ede07" translate="yes" xml:space="preserve">
          <source>The person the message is from.</source>
          <target state="translated">메시지를 보낸 사람입니다.</target>
        </trans-unit>
        <trans-unit id="bfef9e48f15949bd41a84c3faab39c974797e6ca" translate="yes" xml:space="preserve">
          <source>The phone number notifications should be sent from.</source>
          <target state="translated">전화 번호 알림을 보내야합니다.</target>
        </trans-unit>
        <trans-unit id="0e98ca2d23c07036c9363987590e8028cf913c2a" translate="yes" xml:space="preserve">
          <source>The phone number the message should be sent from.</source>
          <target state="translated">메시지를 보내야 할 전화 번호입니다.</target>
        </trans-unit>
        <trans-unit id="dc620da65b7fc93a01bb325161eb357150060b37" translate="yes" xml:space="preserve">
          <source>The pipeline instance for the bus.</source>
          <target state="translated">버스의 파이프 라인 인스턴스</target>
        </trans-unit>
        <trans-unit id="f0f4eb636554a4a6c4812d67a352786093ae4d49" translate="yes" xml:space="preserve">
          <source>The pipes to send commands through before dispatching.</source>
          <target state="translated">전달하기 전에 명령을 보낼 파이프입니다.</target>
        </trans-unit>
        <trans-unit id="2db08da63e33c232061b617ac848e94dac12da18" translate="yes" xml:space="preserve">
          <source>The pivot table columns to retrieve.</source>
          <target state="translated">검색 할 피벗 테이블 열입니다.</target>
        </trans-unit>
        <trans-unit id="c0c920060f899f778786960e4dcadd050e7ecef6" translate="yes" xml:space="preserve">
          <source>The plain text view to use for the message.</source>
          <target state="translated">메시지에 사용할 일반 텍스트보기입니다.</target>
        </trans-unit>
        <trans-unit id="9387956fd1a68c29b28cfd48bf1cae7c0d6e2cf2" translate="yes" xml:space="preserve">
          <source>The plug-ins registered with the transport.</source>
          <target state="translated">전송에 등록 된 플러그인</target>
        </trans-unit>
        <trans-unit id="8494185e12456cfb943f79032e45853adae481d9" translate="yes" xml:space="preserve">
          <source>The plural rules are derived from code of the Zend Framework (2010-09-25), which is subject to the new BSD license (http://framework.zend.com/license/new-bsd) Copyright (c) 2005-2010 - Zend Technologies USA Inc. (http://www.zend.com)</source>
          <target state="translated">복수 규칙은 새로운 BSD 라이센스 (http://framework.zend.com/license/new-bsd)의 적용을받는 Zend Framework (2010-09-25) 코드에서 파생됩니다. Copyright (c) 2005- 2010-Zend Technologies USA Inc. (http://www.zend.com)</target>
        </trans-unit>
        <trans-unit id="5e96ed07e7f2bc957d119c34510dec2c79157892" translate="yes" xml:space="preserve">
          <source>The policy mappings for the application.</source>
          <target state="translated">응용 프로그램의 정책 매핑</target>
        </trans-unit>
        <trans-unit id="0025ea8fe17d7750364b5c1207ecf3ccba7379dc" translate="yes" xml:space="preserve">
          <source>The possible column modifiers.</source>
          <target state="translated">가능한 열 수정 자.</target>
        </trans-unit>
        <trans-unit id="366dd2fd160dd0d6a6eb478f54ae2b04954b51e1" translate="yes" xml:space="preserve">
          <source>The possible column serials.</source>
          <target state="translated">가능한 열 일련 번호.</target>
        </trans-unit>
        <trans-unit id="609e7048910da4cc45affa2dd59942ede34f8b94" translate="yes" xml:space="preserve">
          <source>The prefix of the table.</source>
          <target state="translated">테이블의 접두사입니다.</target>
        </trans-unit>
        <trans-unit id="3c4236448d5f55af1bd56351f4f7111fe092aa19" translate="yes" xml:space="preserve">
          <source>The primary key for the model.</source>
          <target state="translated">모델의 기본 키입니다.</target>
        </trans-unit>
        <trans-unit id="001b18b67380189d8314bdc4f69188b4186b95a5" translate="yes" xml:space="preserve">
          <source>The priority-sorted list of middleware.</source>
          <target state="translated">우선 순위별로 분류 된 미들웨어 목록.</target>
        </trans-unit>
        <trans-unit id="bc2f39cab13defd205f6e8092263c494f5ceffbb" translate="yes" xml:space="preserve">
          <source>The protected &lt;code&gt;sendResetLinkResponse&lt;/code&gt; method of the &lt;code&gt;SendsPasswordResetEmails&lt;/code&gt; trait now accepts the incoming &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; as its first argument. If you are overriding this method, you should update your method's signature:</source>
          <target state="translated">&lt;code&gt;SendsPasswordResetEmails&lt;/code&gt; 특성 의 보호 된 &lt;code&gt;sendResetLinkResponse&lt;/code&gt; 메소드는 이제 들어오는 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 를 첫 번째 인수로 승인합니다 . 이 메소드를 재정의하는 경우 메소드의 서명을 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="8148dffec1ace6dbbd3a172bdb7429da13d96a93" translate="yes" xml:space="preserve">
          <source>The protected &lt;code&gt;sendResetResponse&lt;/code&gt; method of the &lt;code&gt;ResetsPasswords&lt;/code&gt; trait now accepts the incoming &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; as its first argument. If you are overriding this method, you should update your method's signature:</source>
          <target state="translated">&lt;code&gt;ResetsPasswords&lt;/code&gt; 특성 의 보호 된 &lt;code&gt;sendResetResponse&lt;/code&gt; 메소드는 이제 들어오는 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 를 첫 번째 인수로 승인합니다 . 이 메소드를 재정의하는 경우 메소드의 서명을 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="761134f7975522e4a73337958ecbd9c5c6302007" translate="yes" xml:space="preserve">
          <source>The provider class names.</source>
          <target state="translated">제공자 클래스 이름</target>
        </trans-unit>
        <trans-unit id="efff598d2ac852eaaf4231191ec70c6bad0a4277" translate="yes" xml:space="preserve">
          <source>The provider to publish.</source>
          <target state="translated">게시 할 공급자입니다.</target>
        </trans-unit>
        <trans-unit id="0f9d970794e236a1ea851682597121e45bb730cb" translate="yes" xml:space="preserve">
          <source>The published components will be placed in your &lt;code&gt;resources/js/components&lt;/code&gt; directory. Once the components have been published, you should register them in your &lt;code&gt;resources/js/app.js&lt;/code&gt; file:</source>
          <target state="translated">공개 된 컴포넌트는 &lt;code&gt;resources/js/components&lt;/code&gt; 디렉토리에 배치됩니다 . 컴포넌트가 공개되면 &lt;code&gt;resources/js/app.js&lt;/code&gt; 파일에 등록해야 합니다.</target>
        </trans-unit>
        <trans-unit id="362d9f3883e1e03c1cdad16aa4a99b8ecb8a8ef1" translate="yes" xml:space="preserve">
          <source>The query above will produce the following SQL:</source>
          <target state="translated">위의 쿼리는 다음 SQL을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="44cb5a6276e5382ddb901d8206b16b6d3a2551ba" translate="yes" xml:space="preserve">
          <source>The query builder also includes a few functions to help you do &quot;pessimistic locking&quot; on your &lt;code&gt;select&lt;/code&gt; statements. To run the statement with a &quot;shared lock&quot;, you may use the &lt;code&gt;sharedLock&lt;/code&gt; method on a query. A shared lock prevents the selected rows from being modified until your transaction commits:</source>
          <target state="translated">쿼리 빌더에는 &lt;code&gt;select&lt;/code&gt; 문 에서 &quot;비관적 잠금&quot;을 수행하는 데 도움이되는 몇 가지 함수도 포함되어 있습니다. &quot;공유 잠금&quot;으로 명령문을 실행하려면 쿼리 에서 &lt;code&gt;sharedLock&lt;/code&gt; 메소드를 사용할 수 있습니다 . 공유 잠금은 트랜잭션이 커밋 될 때까지 선택한 행이 수정되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="9c272a61d4a7bd24c8447c8b82ec8b370b55f411" translate="yes" xml:space="preserve">
          <source>The query builder also provides a quick way to &quot;union&quot; two queries together. For example, you may create an initial query and use the &lt;code&gt;union&lt;/code&gt; method to union it with a second query:</source>
          <target state="translated">쿼리 빌더는 또한 두 쿼리를 함께 &quot;결합&quot;하는 빠른 방법을 제공합니다. 예를 들어 초기 쿼리를 만들고 &lt;code&gt;union&lt;/code&gt; 메서드를 사용하여 두 번째 쿼리와 통합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="98ba14c8c1556a3a72125410b708b4a2f1e00fbc" translate="yes" xml:space="preserve">
          <source>The query builder also provides a variety of aggregate methods such as &lt;code&gt;count&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;avg&lt;/code&gt;, and &lt;code&gt;sum&lt;/code&gt;. You may call any of these methods after constructing your query:</source>
          <target state="translated">쿼리 빌더는 또한 &lt;code&gt;count&lt;/code&gt; , &lt;code&gt;max&lt;/code&gt; , &lt;code&gt;min&lt;/code&gt; , &lt;code&gt;avg&lt;/code&gt; 및 &lt;code&gt;sum&lt;/code&gt; 과 같은 다양한 집계 방법을 제공합니다 . 쿼리를 생성 한 후 다음 메소드 중 하나를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b60ecf12cc627cc468fefe0d3fbcfe9eaf4c317" translate="yes" xml:space="preserve">
          <source>The query builder also provides an &lt;code&gt;insert&lt;/code&gt; method for inserting records into the database table. The &lt;code&gt;insert&lt;/code&gt; method accepts an array of column names and values:</source>
          <target state="translated">조회 빌더는 데이터베이스 테이블에 레코드를 &lt;code&gt;insert&lt;/code&gt; 하기위한 삽입 메소드 도 제공 합니다. &lt;code&gt;insert&lt;/code&gt; 방법은 열 이름 및 값들의 어레이를 수용 :</target>
        </trans-unit>
        <trans-unit id="60b628cfc040a806a32ab4d5df96d0e35a8cc9ba" translate="yes" xml:space="preserve">
          <source>The query builder also provides convenient methods for incrementing or decrementing the value of a given column. This is a shortcut, providing a more expressive and terse interface compared to manually writing the &lt;code&gt;update&lt;/code&gt; statement.</source>
          <target state="translated">쿼리 빌더는 또한 주어진 열의 값을 늘리거나 줄이는 편리한 방법을 제공합니다. 이 방법은 바로 가기로 수동으로 &lt;code&gt;update&lt;/code&gt; 문을 작성하는 것보다 표현력이 뛰어나고 간결한 인터페이스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="e5673be9809243bcffb70dd972a60c508469ca05" translate="yes" xml:space="preserve">
          <source>The query builder may also be used to delete records from the table via the &lt;code&gt;delete&lt;/code&gt; method. You may constrain &lt;code&gt;delete&lt;/code&gt; statements by adding &lt;code&gt;where&lt;/code&gt; clauses before calling the &lt;code&gt;delete&lt;/code&gt; method:</source>
          <target state="translated">쿼리 작성기를 사용하여 &lt;code&gt;delete&lt;/code&gt; 메소드 를 통해 테이블에서 레코드를 삭제할 수도 있습니다 . &lt;code&gt;delete&lt;/code&gt; 메소드 를 호출하기 전에 &lt;code&gt;where&lt;/code&gt; 절 을 추가하여 &lt;code&gt;delete&lt;/code&gt; 문을 제한 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b860f116e9363b689e9e99cad6734fd060e09999" translate="yes" xml:space="preserve">
          <source>The query builder may also be used to write join statements. To perform a basic &quot;inner join&quot;, you may use the &lt;code&gt;join&lt;/code&gt; method on a query builder instance. The first argument passed to the &lt;code&gt;join&lt;/code&gt; method is the name of the table you need to join to, while the remaining arguments specify the column constraints for the join. Of course, as you can see, you can join to multiple tables in a single query:</source>
          <target state="translated">쿼리 빌더를 사용하여 결합 문을 작성할 수도 있습니다. 기본 &quot;내부 조인&quot;을 수행하려면 쿼리 작성기 인스턴스 에서 &lt;code&gt;join&lt;/code&gt; 메서드를 사용할 수 있습니다 . &lt;code&gt;join&lt;/code&gt; 메소드에 전달 된 첫 번째 인수는 조인 해야하는 테이블의 이름이며 나머지 인수는 조인에 대한 열 제한 조건을 지정합니다. 물론 알 수 있듯이 단일 쿼리에서 여러 테이블에 조인 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b75c6409200e4302f40387da75028b27ddc3c7d" translate="yes" xml:space="preserve">
          <source>The query grammar implementation.</source>
          <target state="translated">쿼리 문법 구현.</target>
        </trans-unit>
        <trans-unit id="3903eb8353a382e2211e9c94b26faca4828d11e8" translate="yes" xml:space="preserve">
          <source>The query parameters to add to all URLs.</source>
          <target state="translated">모든 URL에 추가 할 쿼리 매개 변수입니다.</target>
        </trans-unit>
        <trans-unit id="7897df1c5d66a8deaf393edee2a496eb0065c6c9" translate="yes" xml:space="preserve">
          <source>The query post processor implementation.</source>
          <target state="translated">쿼리 후 프로세서 구현</target>
        </trans-unit>
        <trans-unit id="596c396a4eeff80c8cb80d06886473b2e62a48e9" translate="yes" xml:space="preserve">
          <source>The query string variable used to store the page.</source>
          <target state="translated">페이지를 저장하는 데 사용되는 쿼리 문자열 변수입니다.</target>
        </trans-unit>
        <trans-unit id="ade94f6695e0c79d24f37cf20e44ae98d3025022" translate="yes" xml:space="preserve">
          <source>The query union statements.</source>
          <target state="translated">쿼리 통합 문</target>
        </trans-unit>
        <trans-unit id="7a595d4308adfb8d55aab5690e470aa0815de055" translate="yes" xml:space="preserve">
          <source>The queue URL prefix.</source>
          <target state="translated">대기열 URL 접두사</target>
        </trans-unit>
        <trans-unit id="251de1a5309840eedd548c43e7d2105a547998a6" translate="yes" xml:space="preserve">
          <source>The queue configuration file is stored in &lt;code&gt;config/queue.php&lt;/code&gt;. In this file you will find connection configurations for each of the queue drivers that are included with the framework, which includes a database, &lt;a href=&quot;https://kr.github.io/beanstalkd/&quot;&gt;Beanstalkd&lt;/a&gt;, &lt;a href=&quot;https://aws.amazon.com/sqs/&quot;&gt;Amazon SQS&lt;/a&gt;, &lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt;, and a synchronous driver that will execute jobs immediately (for local use). A &lt;code&gt;null&lt;/code&gt; queue driver is also included which discards queued jobs.</source>
          <target state="translated">큐 설정 파일은 &lt;code&gt;config/queue.php&lt;/code&gt; 에 저장됩니다 . 이 파일에는 프레임 워크에 포함 된 각 큐 드라이버에 대한 연결 구성이 있으며 여기에는 데이터베이스, &lt;a href=&quot;https://kr.github.io/beanstalkd/&quot;&gt;Beanstalkd&lt;/a&gt; , &lt;a href=&quot;https://aws.amazon.com/sqs/&quot;&gt;Amazon SQS&lt;/a&gt; , &lt;a href=&quot;https://redis.io&quot;&gt;Redis&lt;/a&gt; 및 로컬로 사용하기 위해 즉시 작업을 실행하는 동기 드라이버가 포함됩니다. 대기중인 작업을 삭제 하는 &lt;code&gt;null&lt;/code&gt; 큐 드라이버도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="20efc614107e1046236f81717131c099fa600e7b" translate="yes" xml:space="preserve">
          <source>The queue implementation.</source>
          <target state="translated">큐 구현.</target>
        </trans-unit>
        <trans-unit id="9dcb7b9053dcdd289bb23463f94284a70ee68b08" translate="yes" xml:space="preserve">
          <source>The queue listener instance.</source>
          <target state="translated">큐 리스너 인스턴스</target>
        </trans-unit>
        <trans-unit id="6abc329182160980328a1e76f7f56b484da95049" translate="yes" xml:space="preserve">
          <source>The queue manager instance.</source>
          <target state="translated">큐 관리자 인스턴스</target>
        </trans-unit>
        <trans-unit id="e757ccabdb84d34d5d4beb9aa51f8fc63eeb2c31" translate="yes" xml:space="preserve">
          <source>The queue message data.</source>
          <target state="translated">큐 메시지 데이터</target>
        </trans-unit>
        <trans-unit id="08a4eaea09c51e96856c6d0f4ffbb55f8e3c0988" translate="yes" xml:space="preserve">
          <source>The queue name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f757eae1008e6c3b3f3aedba01be35065a8f2896" translate="yes" xml:space="preserve">
          <source>The queue resolver callback.</source>
          <target state="translated">큐 해석기 콜백</target>
        </trans-unit>
        <trans-unit id="1f0bb54188344db6d24ee49c0064a8bd1ab7b5fb" translate="yes" xml:space="preserve">
          <source>The queue resolver instance.</source>
          <target state="translated">큐 분석기 인스턴스.</target>
        </trans-unit>
        <trans-unit id="99a10f1bc4202008531860cbe5957ace38b01cc6" translate="yes" xml:space="preserve">
          <source>The queue uses the &lt;a href=&quot;cache&quot;&gt;cache&lt;/a&gt; to store restart signals, so you should verify a cache driver is properly configured for your application before using this feature.</source>
          <target state="translated">큐는 &lt;a href=&quot;cache&quot;&gt;캐시&lt;/a&gt; 를 사용하여 재시작 신호를 저장하므로이 기능을 사용하기 전에 애플리케이션에 맞게 캐시 드라이버가 올바르게 구성되어 있는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="5a2cb5843f79c9d9f87ea929dc8e4ab226ee2ee6" translate="yes" xml:space="preserve">
          <source>The queue worker command line.</source>
          <target state="translated">큐 워커 명령 행.</target>
        </trans-unit>
        <trans-unit id="a9d19bafe1650cadd34fe56f7b2a32e1d51e0415" translate="yes" xml:space="preserve">
          <source>The queue worker instance.</source>
          <target state="translated">큐 작업자 인스턴스</target>
        </trans-unit>
        <trans-unit id="02db72366d16c6c14ebe7595a3e32269f47ae41e" translate="yes" xml:space="preserve">
          <source>The rate limiter instance.</source>
          <target state="translated">속도 제한 기 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="f89e151cfbb32960099f93afd6cdd6673952dd6c" translate="yes" xml:space="preserve">
          <source>The raw attachments for the message.</source>
          <target state="translated">메시지의 원시 첨부 파일</target>
        </trans-unit>
        <trans-unit id="70441c97dad9e48320e44350b32b7f46ecd2ba83" translate="yes" xml:space="preserve">
          <source>The recommended response to send to the client.</source>
          <target state="translated">클라이언트에게 보내는 권장 응답입니다.</target>
        </trans-unit>
        <trans-unit id="4a1eb40248ef873ce553ce9eadac2d57d14dc10b" translate="yes" xml:space="preserve">
          <source>The reconnector instance for the connection.</source>
          <target state="translated">연결을위한 재 연결기 인스턴스.</target>
        </trans-unit>
        <trans-unit id="2f8c4fb4fc46b3fe0087b0ade046c694803d3d5d" translate="yes" xml:space="preserve">
          <source>The redirector instance.</source>
          <target state="translated">리디렉터 인스턴스</target>
        </trans-unit>
        <trans-unit id="0aa28db9c9b23594984c138c26867439741ea8dd" translate="yes" xml:space="preserve">
          <source>The registered after creating callbacks.</source>
          <target state="translated">콜백 생성 후 등록되었습니다.</target>
        </trans-unit>
        <trans-unit id="609972ce5c8714c07b32df2d2c883a13c19ae775" translate="yes" xml:space="preserve">
          <source>The registered after making callbacks.</source>
          <target state="translated">콜백 한 후 등록되었습니다.</target>
        </trans-unit>
        <trans-unit id="98cf3b7ca0029a15047bb64f7d9657e7f47d36be" translate="yes" xml:space="preserve">
          <source>The registered aliases keyed by the abstract name.</source>
          <target state="translated">추상 이름으로 키가 등록 된 별명.</target>
        </trans-unit>
        <trans-unit id="f9e436b2cfbb51b6a5dac896bb616cc4c422b710" translate="yes" xml:space="preserve">
          <source>The registered channel authenticators.</source>
          <target state="translated">등록 된 채널 인증 자</target>
        </trans-unit>
        <trans-unit id="9a2197b3b9bf3e17ff17ca1d340c4e9f5070355c" translate="yes" xml:space="preserve">
          <source>The registered component paths.</source>
          <target state="translated">등록 된 구성 요소 경로</target>
        </trans-unit>
        <trans-unit id="c11789175d838051d947155acafe1079d4e33227" translate="yes" xml:space="preserve">
          <source>The registered custom driver creators.</source>
          <target state="translated">등록 된 커스텀 드라이버 제작자.</target>
        </trans-unit>
        <trans-unit id="a5427beac44b1a01dd2a8c283d3d690adfabe633" translate="yes" xml:space="preserve">
          <source>The registered custom provider creators.</source>
          <target state="translated">등록 된 사용자 지정 공급자 제작자</target>
        </trans-unit>
        <trans-unit id="4a6bd0e9fd703ab21d8e46d49e4ca9d5046e3462" translate="yes" xml:space="preserve">
          <source>The registered event listeners.</source>
          <target state="translated">등록 된 이벤트 리스너</target>
        </trans-unit>
        <trans-unit id="044f8eb9a6674a4fbe18a213d45a4f8b1b69c84d" translate="yes" xml:space="preserve">
          <source>The registered model states.</source>
          <target state="translated">등록 된 모델 상태입니다.</target>
        </trans-unit>
        <trans-unit id="bb8cabee1bba7044d317c148c0dd33b1a0b78941" translate="yes" xml:space="preserve">
          <source>The registered post create hooks.</source>
          <target state="translated">등록 된 게시물은 후크를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="60d081e3edf6cb3091d7c0e9ba5bb65f98896345" translate="yes" xml:space="preserve">
          <source>The registered route value binders.</source>
          <target state="translated">등록 된 경로 값 바인더</target>
        </trans-unit>
        <trans-unit id="00a6d22c8493b09dacd0b1e9ab9ffdd2cf823538" translate="yes" xml:space="preserve">
          <source>The registered string macros.</source>
          <target state="translated">등록 된 문자열 매크로</target>
        </trans-unit>
        <trans-unit id="b4d12c41dfa51c810e441bd098f2e1fb9b281683" translate="yes" xml:space="preserve">
          <source>The registered type aliases.</source>
          <target state="translated">등록 된 유형 별명.</target>
        </trans-unit>
        <trans-unit id="c638d1b9ea8c2ac338c8b6abdb53bbd79029039b" translate="yes" xml:space="preserve">
          <source>The regular expression requirements.</source>
          <target state="translated">정규식 요구 사항</target>
        </trans-unit>
        <trans-unit id="9ffb5bae50a57b0c2a20edc53067010eaab3ed9e" translate="yes" xml:space="preserve">
          <source>The related model instance.</source>
          <target state="translated">관련 모델 인스턴스</target>
        </trans-unit>
        <trans-unit id="db6c7e8e552443aa2d0da70d751330354d867bfa" translate="yes" xml:space="preserve">
          <source>The relations to eager load on every query.</source>
          <target state="translated">모든 쿼리에 대한 열망과의 관계.</target>
        </trans-unit>
        <trans-unit id="7314a154a25cacabcd3a7c9a9665ab32c9d57374" translate="yes" xml:space="preserve">
          <source>The relationship counts that should be eager loaded on every query.</source>
          <target state="translated">모든 쿼리에서 열망해야하는 관계 수입니다.</target>
        </trans-unit>
        <trans-unit id="e7d25ed3c6f0210d3f6f56e56debdef06a81cab8" translate="yes" xml:space="preserve">
          <source>The relationships loaded on the model.</source>
          <target state="translated">모델에로드 된 관계</target>
        </trans-unit>
        <trans-unit id="fb7d96639bd22d3f1dd60ed2855cc72cece4d17d" translate="yes" xml:space="preserve">
          <source>The relationships that should be eager loaded.</source>
          <target state="translated">열망해야 할 관계.</target>
        </trans-unit>
        <trans-unit id="f43d3cfedbfc7e31ebcdbcaa31d8367219432736" translate="yes" xml:space="preserve">
          <source>The relationships that should be touched on save.</source>
          <target state="translated">저장해야 할 관계가 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="f48f20dc9a99fe46d638995db9051021a18ffb50" translate="yes" xml:space="preserve">
          <source>The repository instance.</source>
          <target state="translated">저장소 인스턴스.</target>
        </trans-unit>
        <trans-unit id="0290628eed4cf9f05965d03a3f63b5e7ba5e01e6" translate="yes" xml:space="preserve">
          <source>The request currently being dispatched.</source>
          <target state="translated">요청이 현재 발송 중입니다.</target>
        </trans-unit>
        <trans-unit id="16cd0e6127f2b2c0da38cdb38d99f4298234d1b5" translate="yes" xml:space="preserve">
          <source>The request instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e508174b4aa5a5bf0fb940197fd16418290c373" translate="yes" xml:space="preserve">
          <source>The resolved engine instances.</source>
          <target state="translated">해결 된 엔진 인스턴스</target>
        </trans-unit>
        <trans-unit id="263b880247bac8bda5d3639243ef18b5cb7ed7eb" translate="yes" xml:space="preserve">
          <source>The resolved object instances.</source>
          <target state="translated">해결 된 객체 인스턴스.</target>
        </trans-unit>
        <trans-unit id="b7ca514d8a4692cad4731417b0756ecf1275ab12" translate="yes" xml:space="preserve">
          <source>The resource controller.</source>
          <target state="translated">자원 제어기.</target>
        </trans-unit>
        <trans-unit id="56f60d2d0ee2d9172ad28e8b6e094f5b7caace53" translate="yes" xml:space="preserve">
          <source>The resource instance.</source>
          <target state="translated">자원 인스턴스.</target>
        </trans-unit>
        <trans-unit id="a95d6132a19bf75b0b6aaff23867371d166e5e24" translate="yes" xml:space="preserve">
          <source>The resource name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf011891c2177b36703816d90e75f2d2072e3b87" translate="yes" xml:space="preserve">
          <source>The resource options.</source>
          <target state="translated">자원 옵션.</target>
        </trans-unit>
        <trans-unit id="ecdd5344f0d0bc88ac377e9afed6b88830188429" translate="yes" xml:space="preserve">
          <source>The resource registrar.</source>
          <target state="translated">자원 등록 기관.</target>
        </trans-unit>
        <trans-unit id="18f7638073d9c9c042d64634548cc9e1ae8943ce" translate="yes" xml:space="preserve">
          <source>The resource that this resource collects.</source>
          <target state="translated">이 자원이 수집하는 자원.</target>
        </trans-unit>
        <trans-unit id="368a409de12958befa5dce1336f79e9c9e53a178" translate="yes" xml:space="preserve">
          <source>The resource's registration status.</source>
          <target state="translated">자원의 등록 상태</target>
        </trans-unit>
        <trans-unit id="fc8405290cd1dbfe9984bcdfaa8040afc301a7be" translate="yes" xml:space="preserve">
          <source>The response instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="601ecb069cd20113a2fbfbc01aa7d5c00f4a2465" translate="yes" xml:space="preserve">
          <source>The response message.</source>
          <target state="translated">응답 메시지</target>
        </trans-unit>
        <trans-unit id="164352520448d04206d3c52f17e7f82e87ac15dc" translate="yes" xml:space="preserve">
          <source>The response to delegate to.</source>
          <target state="translated">위임 할 응답입니다.</target>
        </trans-unit>
        <trans-unit id="c46e5c096c954839dae212913abf0e66c72ea5f5" translate="yes" xml:space="preserve">
          <source>The results of &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; queries are always returned as &lt;code&gt;Collection&lt;/code&gt; instances.</source>
          <target state="translated">&lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; 쿼리 의 결과 는 항상 &lt;code&gt;Collection&lt;/code&gt; 인스턴스 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="e89ccf76734c773e099357ff32d1ed203045589b" translate="yes" xml:space="preserve">
          <source>The returned slice will preserve keys by default. If you do not wish to preserve the original keys, you can use the &lt;a href=&quot;#method-values&quot;&gt;&lt;code&gt;values&lt;/code&gt;&lt;/a&gt; method to reindex them.</source>
          <target state="translated">반환 된 슬라이스는 기본적으로 키를 유지합니다. 원래 키를 유지하지 않으려면 &lt;a href=&quot;#method-values&quot;&gt; &lt;code&gt;values&lt;/code&gt; &lt;/a&gt; 방법을 사용하여 키 를 다시 색인화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a14154883b57e0c7b912f901032bff78f7e71482" translate="yes" xml:space="preserve">
          <source>The root namespace being applied to controller actions.</source>
          <target state="translated">컨트롤러 작업에 적용되는 루트 네임 스페이스입니다.</target>
        </trans-unit>
        <trans-unit id="12d7248b5b63b0f50370c1fe342dfff1893a4bf8" translate="yes" xml:space="preserve">
          <source>The route URL generator instance.</source>
          <target state="translated">라우트 URL 생성기 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="e4314c17af324483d9457a5618d6c73f931972f2" translate="yes" xml:space="preserve">
          <source>The route action array.</source>
          <target state="translated">라우트 조치 배열.</target>
        </trans-unit>
        <trans-unit id="43594284ed9c99e26403f8c7bf94fbf14a35d0ac" translate="yes" xml:space="preserve">
          <source>The route collection instance.</source>
          <target state="translated">라우트 콜렉션 인스턴스</target>
        </trans-unit>
        <trans-unit id="6c4d429aef6dcb0a75a4c587813e6400e8929041" translate="yes" xml:space="preserve">
          <source>The route collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d12a8e106ea4940f34cc43c9258574f57ae31dc0" translate="yes" xml:space="preserve">
          <source>The route group attribute stack.</source>
          <target state="translated">라우트 그룹 속성 스택</target>
        </trans-unit>
        <trans-unit id="a455aa3aa2749300af7a2f9fa84acd6a95434ca0" translate="yes" xml:space="preserve">
          <source>The route instance.</source>
          <target state="translated">라우트 인스턴스</target>
        </trans-unit>
        <trans-unit id="df66c11304009f1b54e125f8792abe4b667f8351" translate="yes" xml:space="preserve">
          <source>The route resolver callback.</source>
          <target state="translated">경로 확인자 콜백</target>
        </trans-unit>
        <trans-unit id="3906436aa7329cdc1ee66acc6218655c856ea8b9" translate="yes" xml:space="preserve">
          <source>The route to redirect to if validation fails.</source>
          <target state="translated">유효성 검사에 실패한 경우 리디렉션 할 경로입니다.</target>
        </trans-unit>
        <trans-unit id="d24dce3024d5f1af716ce11fe35be7264b0f321f" translate="yes" xml:space="preserve">
          <source>The router allows you to register routes that respond to any HTTP verb:</source>
          <target state="translated">라우터를 사용하면 모든 HTTP 동사에 응답하는 경로를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0465864a655c463a577b3c77df0b72b06e830975" translate="yes" xml:space="preserve">
          <source>The router instance used by the route.</source>
          <target state="translated">경로에서 사용되는 라우터 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="faa4bc3d702668e81503a764428cce9b603c0348" translate="yes" xml:space="preserve">
          <source>The router instance.</source>
          <target state="translated">라우터 인스턴스</target>
        </trans-unit>
        <trans-unit id="6cc811c5e9481003ccadc11cd22103afb0283867" translate="yes" xml:space="preserve">
          <source>The rules to be applied to the data.</source>
          <target state="translated">데이터에 적용 할 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="570a23552f38197d69e2a011de8ecb76ae5677a4" translate="yes" xml:space="preserve">
          <source>The schedule instance.</source>
          <target state="translated">스케줄 인스턴스.</target>
        </trans-unit>
        <trans-unit id="81b99f1fe8e457d4b8064a35b17a4be3d2224ad4" translate="yes" xml:space="preserve">
          <source>The scheduling mutex implementation.</source>
          <target state="translated">스케줄링 뮤텍스 구현.</target>
        </trans-unit>
        <trans-unit id="7058245333e873938ae018da8b2f68e3cc3534dd" translate="yes" xml:space="preserve">
          <source>The schema builder supports several types of indexes. First, let's look at an example that specifies a column's values should be unique. To create the index, we can chain the &lt;code&gt;unique&lt;/code&gt; method onto the column definition:</source>
          <target state="translated">스키마 빌더는 여러 유형의 인덱스를 지원합니다. 먼저 열의 값이 고유해야하는 것을 지정하는 예를 살펴 보겠습니다. 인덱스를 만들려면 &lt;code&gt;unique&lt;/code&gt; 메서드를 열 정의에 연결하면됩니다.</target>
        </trans-unit>
        <trans-unit id="a386f666e32958882381582f86a3d21257541764" translate="yes" xml:space="preserve">
          <source>The schema grammar implementation.</source>
          <target state="translated">스키마 문법 구현.</target>
        </trans-unit>
        <trans-unit id="f2a64cc6787dc789508b1e20276bb56a934a25b3" translate="yes" xml:space="preserve">
          <source>The schema grammar instance.</source>
          <target state="translated">스키마 문법 인스턴스.</target>
        </trans-unit>
        <trans-unit id="c67ab5019d90e90447a8fcbbdbb1bd654737438b" translate="yes" xml:space="preserve">
          <source>The schema table builder's &lt;code&gt;softDeletesTz&lt;/code&gt; method now accepts the column name as its first argument, while the &lt;code&gt;$precision&lt;/code&gt; has been moved to the second argument position:</source>
          <target state="translated">스키마 테이블 빌더의 &lt;code&gt;softDeletesTz&lt;/code&gt; 메소드는 이제 열 이름을 첫 번째 인수로 승인하지만 &lt;code&gt;$precision&lt;/code&gt; 은 두 번째 인수 위치로 이동되었습니다.</target>
        </trans-unit>
        <trans-unit id="a5daa9bae128676a36465ea436362153e47cd1d1" translate="yes" xml:space="preserve">
          <source>The search is done using a &quot;loose&quot; comparison, meaning a string with an integer value will be considered equal to an integer of the same value. To use &quot;strict&quot; comparison, pass &lt;code&gt;true&lt;/code&gt; as the second argument to the method:</source>
          <target state="translated">검색은 &quot;느슨한&quot;비교를 사용하여 수행됩니다. 즉, 정수 값을 가진 문자열은 동일한 값의 정수와 동일한 것으로 간주됩니다. &quot;엄격한&quot;비교를 사용하려면 메소드의 두 번째 인수로 &lt;code&gt;true&lt;/code&gt; 를 전달 하십시오.</target>
        </trans-unit>
        <trans-unit id="ce0905e4abdb850343d56e2f176dcfd9eb788b69" translate="yes" xml:space="preserve">
          <source>The second value passed to the &lt;code&gt;env&lt;/code&gt; function is the &quot;default value&quot;. This value will be used if no environment variable exists for the given key.</source>
          <target state="translated">&lt;code&gt;env&lt;/code&gt; 함수에 전달 된 두 번째 값 은 &quot;default value&quot;입니다. 지정된 키에 환경 변수가없는 경우이 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1bd05754b6ce6bfca0f28b161ee7ff587267b074" translate="yes" xml:space="preserve">
          <source>The serializable Closure instance.</source>
          <target state="translated">직렬화 가능한 Closure 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="abad29def428c274e9e432458e6b092003d55332" translate="yes" xml:space="preserve">
          <source>The service container fires an event each time it resolves an object. You may listen to this event using the &lt;code&gt;resolving&lt;/code&gt; method:</source>
          <target state="translated">서비스 컨테이너는 객체를 확인할 때마다 이벤트를 발생시킵니다. &lt;code&gt;resolving&lt;/code&gt; 방법을 사용하여이 이벤트를들을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="04d8c9727f91f339f25c94ff55f2ad1a99b4c713" translate="yes" xml:space="preserve">
          <source>The session &lt;code&gt;driver&lt;/code&gt; configuration option defines where session data will be stored for each request. Laravel ships with several great drivers out of the box:</source>
          <target state="translated">세션 &lt;code&gt;driver&lt;/code&gt; 구성 옵션은 각 요청에 대해 세션 데이터가 저장 될 위치를 정의합니다. 라 라벨은 기본적으로 몇 가지 훌륭한 드라이버를 제공합니다 :</target>
        </trans-unit>
        <trans-unit id="0294783c646bb296c15b37388845bf0ad918ad81" translate="yes" xml:space="preserve">
          <source>The session ID.</source>
          <target state="translated">세션 ID</target>
        </trans-unit>
        <trans-unit id="86b6ac08faffa1def8fbf6e2d869a7286b5809d1" translate="yes" xml:space="preserve">
          <source>The session attributes.</source>
          <target state="translated">세션 속성.</target>
        </trans-unit>
        <trans-unit id="57161d1200f661bda65ef38b3db791a65474da62" translate="yes" xml:space="preserve">
          <source>The session configuration file is stored at &lt;code&gt;config/session.php&lt;/code&gt;. Be sure to review the options available to you in this file. By default, Laravel is configured to use the &lt;code&gt;file&lt;/code&gt; session driver, which will work well for many applications. In production applications, you may consider using the &lt;code&gt;memcached&lt;/code&gt; or &lt;code&gt;redis&lt;/code&gt; drivers for even faster session performance.</source>
          <target state="translated">세션 설정 파일은 &lt;code&gt;config/session.php&lt;/code&gt; 에 저장됩니다 . 이 파일에서 사용 가능한 옵션을 검토하십시오. 기본적으로 Laravel은 &lt;code&gt;file&lt;/code&gt; 세션 드라이버 를 사용하도록 구성되어 있으며 많은 응용 프로그램에서 잘 작동합니다. 프로덕션 응용 프로그램에서는 더 빠른 세션 성능을 위해 &lt;code&gt;memcached&lt;/code&gt; 또는 &lt;code&gt;redis&lt;/code&gt; 드라이버 사용을 고려할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="91e236fb26b51e7fe36eb0d22aad3aa86c4437bd" translate="yes" xml:space="preserve">
          <source>The session handler implementation.</source>
          <target state="translated">세션 핸들러 구현</target>
        </trans-unit>
        <trans-unit id="d7e638c00c25a4feef58c4fd0f743467b64e59c4" translate="yes" xml:space="preserve">
          <source>The session manager.</source>
          <target state="translated">세션 관리자</target>
        </trans-unit>
        <trans-unit id="884f1740f402897a2f164554c12b7dd3c84282c9" translate="yes" xml:space="preserve">
          <source>The session name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adcd7b939db251de80585036622f87e72dd2279b" translate="yes" xml:space="preserve">
          <source>The session resolver callable.</source>
          <target state="translated">세션 리졸버가 호출 가능합니다.</target>
        </trans-unit>
        <trans-unit id="ecc519636990ae2e0954fb3e16f4559d1c199dac" translate="yes" xml:space="preserve">
          <source>The session store instance.</source>
          <target state="translated">세션 저장소 인스턴스</target>
        </trans-unit>
        <trans-unit id="c92af64a0fcb75ffc669012ff68d72ab5a2702bf" translate="yes" xml:space="preserve">
          <source>The session store will be returned if no value is passed to the function:</source>
          <target state="translated">함수에 값이 전달되지 않으면 세션 저장소가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="2e929d5585d7e896e78b2c57df639b8515474223" translate="yes" xml:space="preserve">
          <source>The session used by the guard.</source>
          <target state="translated">가드가 사용하는 세션.</target>
        </trans-unit>
        <trans-unit id="6a3b4eb0dd200d18724aa6b891c02d73281760af" translate="yes" xml:space="preserve">
          <source>The signatures of the &lt;code&gt;make&lt;/code&gt; and &lt;code&gt;forever&lt;/code&gt; methods of the &lt;code&gt;Illuminate\Contracts\Cookie\Factory&lt;/code&gt; interface &lt;a href=&quot;https://github.com/laravel/framework/pull/23200&quot;&gt;have been changed&lt;/a&gt;. If you are implementing this interface, you should update these methods in your implementation.</source>
          <target state="translated">&lt;code&gt;Illuminate\Contracts\Cookie\Factory&lt;/code&gt; 인터페이스 의 &lt;code&gt;make&lt;/code&gt; 및 &lt;code&gt;forever&lt;/code&gt; 메소드의 서명 &lt;a href=&quot;https://github.com/laravel/framework/pull/23200&quot;&gt;이 변경되었습니다&lt;/a&gt; . 이 인터페이스를 구현하는 경우 구현에서 이러한 메소드를 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="d59c8151600595473a9e55c3b69f4c14dc2e4029" translate="yes" xml:space="preserve">
          <source>The simplest way to create a client is using the &lt;code&gt;passport:client&lt;/code&gt; Artisan command. This command may be used to create your own clients for testing your OAuth2 functionality. When you run the &lt;code&gt;client&lt;/code&gt; command, Passport will prompt you for more information about your client and will provide you with a client ID and secret:</source>
          <target state="translated">클라이언트를 작성하는 가장 간단한 방법은 &lt;code&gt;passport:client&lt;/code&gt; Artisan 명령을 사용하는 것입니다. 이 명령은 OAuth2 기능을 테스트하기위한 고유 한 클라이언트를 작성하는 데 사용될 수 있습니다. &lt;code&gt;client&lt;/code&gt; 명령 을 실행하면 Passport는 클라이언트에 대한 추가 정보를 입력하라는 메시지를 표시하고 클라이언트 ID와 비밀을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ea90c701f257c730f923f4d607874a7d268ef754" translate="yes" xml:space="preserve">
          <source>The simplest way to implement a custom, HTTP request based authentication system is by using the &lt;code&gt;Auth::viaRequest&lt;/code&gt; method. This method allows you to quickly define your authentication process using a single Closure.</source>
          <target state="translated">사용자 정의 HTTP 요청 기반 인증 시스템을 구현하는 가장 간단한 방법은 &lt;code&gt;Auth::viaRequest&lt;/code&gt; 메소드를 사용하는 것입니다. 이 방법을 사용하면 단일 폐쇄를 사용하여 인증 프로세스를 빠르게 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="79d700d475ad702f4044cb1bebf2b4ebc8a52645" translate="yes" xml:space="preserve">
          <source>The singleton instance of the loader.</source>
          <target state="translated">로더의 싱글 톤 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="fab8ddb58e362e0f813cce9ab58891bd9732bf56" translate="yes" xml:space="preserve">
          <source>The size related validation rules.</source>
          <target state="translated">크기 관련 유효성 검사 규칙</target>
        </trans-unit>
        <trans-unit id="605630b9691153511785ccc54cb7a21860c87180" translate="yes" xml:space="preserve">
          <source>The slot contents for the component.</source>
          <target state="translated">구성 요소의 슬롯 내용.</target>
        </trans-unit>
        <trans-unit id="2d1871832d6b1b3bc8339dca6aafb59eaa2a1b5d" translate="yes" xml:space="preserve">
          <source>The socket ID for the user that raised the event.</source>
          <target state="translated">이벤트를 발생시킨 사용자의 소켓 ID입니다.</target>
        </trans-unit>
        <trans-unit id="8fc290930ccdc8a7b287fe1315bd018e78efddd1" translate="yes" xml:space="preserve">
          <source>The stack of concretions currently being built.</source>
          <target state="translated">현재 건설중인 쌓기의 스택.</target>
        </trans-unit>
        <trans-unit id="4b92f0bf1d8b4ec4237a0cbc2344c976b13a204e" translate="yes" xml:space="preserve">
          <source>The stack of in-progress loops.</source>
          <target state="translated">진행중인 루프의 스택.</target>
        </trans-unit>
        <trans-unit id="8038d0433773bf60b25f8b2e7ca2294f6745e69f" translate="yes" xml:space="preserve">
          <source>The stack of in-progress push sections.</source>
          <target state="translated">진행중인 푸시 섹션의 스택</target>
        </trans-unit>
        <trans-unit id="d39bd07a9c764bbdc84fd825c9f7bd336a38618d" translate="yes" xml:space="preserve">
          <source>The stack of in-progress sections.</source>
          <target state="translated">진행중인 섹션의 스택.</target>
        </trans-unit>
        <trans-unit id="ebd9c42853a29668af47d49aad93db273d858e71" translate="yes" xml:space="preserve">
          <source>The states to apply.</source>
          <target state="translated">적용 할 주.</target>
        </trans-unit>
        <trans-unit id="c207e8c763ad759dd13455d9527eb1762978a1b5" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;macro&lt;/code&gt; method allows you to add methods to the &lt;code&gt;Collection&lt;/code&gt; class at run time. Refer to the documentation on &lt;a href=&quot;#extending-collections&quot;&gt;extending collections&lt;/a&gt; for more information.</source>
          <target state="translated">정적 &lt;code&gt;macro&lt;/code&gt; 메서드를 사용하면 런타임에 &lt;code&gt;Collection&lt;/code&gt; 클래스에 메서드를 추가 할 수 있습니다 . 자세한 내용은 &lt;a href=&quot;#extending-collections&quot;&gt;컬렉션 확장&lt;/a&gt; 에 대한 설명서 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9ea08eec7738c3c976ac9e2159f5771903109ba9" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;make&lt;/code&gt; method creates a new collection instance. See the &lt;a href=&quot;#creating-collections&quot;&gt;Creating Collections&lt;/a&gt; section.</source>
          <target state="translated">정적 &lt;code&gt;make&lt;/code&gt; 메소드는 새 콜렉션 인스턴스를 작성합니다. &lt;a href=&quot;#creating-collections&quot;&gt;컬렉션 만들기&lt;/a&gt; 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="000b939d44ff6405366f72b958c90793e21826a4" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;times&lt;/code&gt; method creates a new collection by invoking the callback a given amount of times:</source>
          <target state="translated">정적 &lt;code&gt;times&lt;/code&gt; 메소드는 주어진 횟수만큼 콜백을 호출하여 새 콜렉션을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="9469ee9100967bd5e14ce083001fc58b16e2b4f4" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;unwrap&lt;/code&gt; method returns the collection's underlying items from the given value when applicable:</source>
          <target state="translated">정적 &lt;code&gt;unwrap&lt;/code&gt; 메소드는 적용 가능한 경우 주어진 값에서 콜렉션의 기본 항목을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="351963f9964f48652441cde6fbab1a66f4ae4866" translate="yes" xml:space="preserve">
          <source>The static &lt;code&gt;wrap&lt;/code&gt; method wraps the given value in a collection when applicable:</source>
          <target state="translated">정적 &lt;code&gt;wrap&lt;/code&gt; 메소드는 적용 가능한 경우 주어진 값을 콜렉션에 랩합니다.</target>
        </trans-unit>
        <trans-unit id="3e1bb0172b2343d1e22fc96a472fede0f2a29f44" translate="yes" xml:space="preserve">
          <source>The status code to use for the response.</source>
          <target state="translated">응답에 사용할 상태 코드입니다.</target>
        </trans-unit>
        <trans-unit id="ab516660be008eab1ea7722ad92001711b12c0c7" translate="yes" xml:space="preserve">
          <source>The storage engine that should be used for the table.</source>
          <target state="translated">테이블에 사용해야하는 스토리지 엔진.</target>
        </trans-unit>
        <trans-unit id="a74693e7d566223803fcb4ac643b0d5a409e1f5a" translate="yes" xml:space="preserve">
          <source>The storage format of the model's date columns.</source>
          <target state="translated">모델 날짜 열의 저장 형식입니다.</target>
        </trans-unit>
        <trans-unit id="58d00d23ebef7e4b18f49156da48b1f9044dd2f3" translate="yes" xml:space="preserve">
          <source>The streamed content of the response.</source>
          <target state="translated">응답의 스트리밍 컨텐츠.</target>
        </trans-unit>
        <trans-unit id="92f5b66fce4d57ca46c4301a2f56e395878b52bb" translate="yes" xml:space="preserve">
          <source>The string under validation.</source>
          <target state="translated">유효성 검사중인 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="07fca087272bfb1228ca05e1b9c6b2e880ee0a46" translate="yes" xml:space="preserve">
          <source>The subject of the message.</source>
          <target state="translated">메시지의 제목</target>
        </trans-unit>
        <trans-unit id="2dfe9b67a6294019a5ca9507a49ba9c03554e6f1" translate="yes" xml:space="preserve">
          <source>The subject of the notification.</source>
          <target state="translated">통지의 주제.</target>
        </trans-unit>
        <trans-unit id="5aedf455f4444ff3e0d1252119d24d7f36685ac9" translate="yes" xml:space="preserve">
          <source>The subscriber classes to register.</source>
          <target state="translated">등록 할 가입자 클래스.</target>
        </trans-unit>
        <trans-unit id="72efd8976f8b653257fb21c090272816e5b7870f" translate="yes" xml:space="preserve">
          <source>The table associated with the model.</source>
          <target state="translated">모델과 관련된 테이블입니다.</target>
        </trans-unit>
        <trans-unit id="b6636efce945f5b844f6606ce5e3b686d0f1a55c" translate="yes" xml:space="preserve">
          <source>The table component allows you to transform a Markdown table into an HTML table. The component accepts the Markdown table as its content. Table column alignment is supported using the default Markdown table alignment syntax:</source>
          <target state="translated">테이블 구성 요소를 사용하면 마크 다운 테이블을 HTML 테이블로 변환 할 수 있습니다. 구성 요소는 마크 다운 테이블을 컨텐츠로 승인합니다. 테이블 열 정렬은 기본 Markdown 테이블 정렬 구문을 사용하여 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="ac480daa8961851dade10b123fa7553c8828f61c" translate="yes" xml:space="preserve">
          <source>The table containing the users.</source>
          <target state="translated">사용자가 포함 된 테이블입니다.</target>
        </trans-unit>
        <trans-unit id="70671f05af37162c8d962e5cfc1ddad2830aa79a" translate="yes" xml:space="preserve">
          <source>The table headers for the command.</source>
          <target state="translated">명령의 테이블 헤더</target>
        </trans-unit>
        <trans-unit id="a647d0ac66871217262d0eda401391f559a35c64" translate="yes" xml:space="preserve">
          <source>The table joins for the query.</source>
          <target state="translated">쿼리에 대한 테이블 조인</target>
        </trans-unit>
        <trans-unit id="9010826d40f8e19e4307e63c14b94fb45c8924cd" translate="yes" xml:space="preserve">
          <source>The table prefix for the connection.</source>
          <target state="translated">연결을위한 테이블 접두사입니다.</target>
        </trans-unit>
        <trans-unit id="ff34db9a5246ad70031dc50f2490a2cb456c32e4" translate="yes" xml:space="preserve">
          <source>The table the blueprint describes.</source>
          <target state="translated">청사진이 설명하는 표.</target>
        </trans-unit>
        <trans-unit id="28229fa2f11ef37fd72a1ea3db398999cfd869c6" translate="yes" xml:space="preserve">
          <source>The table the join clause is joining to.</source>
          <target state="translated">조인 절이 조인하는 테이블입니다.</target>
        </trans-unit>
        <trans-unit id="a1c808e39a1d0802e86ea84272bab211b871a5ea" translate="yes" xml:space="preserve">
          <source>The table to run the query against.</source>
          <target state="translated">쿼리를 실행할 테이블입니다.</target>
        </trans-unit>
        <trans-unit id="0f597a9d03181cb363c716a58101aa481ce2e583" translate="yes" xml:space="preserve">
          <source>The table which the query is targeting.</source>
          <target state="translated">쿼리가 대상으로하는 테이블입니다.</target>
        </trans-unit>
        <trans-unit id="f9f57e81a603df6cc58d93c504709a35203899ae" translate="yes" xml:space="preserve">
          <source>The tag names.</source>
          <target state="translated">태그 이름.</target>
        </trans-unit>
        <trans-unit id="f7ac75ddb7d42cf1ed0db2229a0d46c47fac2a21" translate="yes" xml:space="preserve">
          <source>The tag set instance.</source>
          <target state="translated">태그 세트 인스턴스</target>
        </trans-unit>
        <trans-unit id="e6e30172d78007afa1d8eb6f5f7a70701907efb7" translate="yes" xml:space="preserve">
          <source>The tags that were assigned to the key.</source>
          <target state="translated">키에 지정된 태그입니다.</target>
        </trans-unit>
        <trans-unit id="8c8ec9420a8341e205092121dace68183dc6ae22" translate="yes" xml:space="preserve">
          <source>The tags to publish.</source>
          <target state="translated">게시 할 태그입니다.</target>
        </trans-unit>
        <trans-unit id="21426025f08b38e4c8e99f9fd019ee83a46f06f4" translate="yes" xml:space="preserve">
          <source>The target being tapped.</source>
          <target state="translated">목표물을 두드리고 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4da7a593b36855a0518d6f27745a74332d8fede" translate="yes" xml:space="preserve">
          <source>The temporary file resource.</source>
          <target state="translated">임시 파일 리소스</target>
        </trans-unit>
        <trans-unit id="d29ff031bedf05275f0039e818893f2ce1dab694" translate="yes" xml:space="preserve">
          <source>The test being run.</source>
          <target state="translated">테스트가 실행 중입니다.</target>
        </trans-unit>
        <trans-unit id="7f7d94ab637f05b8821fafe07a855f689ebe8ce4" translate="yes" xml:space="preserve">
          <source>The text / label for the action.</source>
          <target state="translated">액션의 텍스트 / 라벨.</target>
        </trans-unit>
        <trans-unit id="dc176e2faba262f9929bdb0253df0827fa4ff8fe" translate="yes" xml:space="preserve">
          <source>The text content of the message.</source>
          <target state="translated">메시지의 텍스트 내용</target>
        </trans-unit>
        <trans-unit id="78ecec34dc389b6cf3b91762e1fcc609e2741a7a" translate="yes" xml:space="preserve">
          <source>The throttled request.</source>
          <target state="translated">조절 된 요청입니다.</target>
        </trans-unit>
        <trans-unit id="ff925b4ac5b682308ad51747d9142199b714e9f1" translate="yes" xml:space="preserve">
          <source>The timestamp indicating when the job should timeout.</source>
          <target state="translated">작업이 시간 종료되어야하는 시간을 나타내는 시간 소인.</target>
        </trans-unit>
        <trans-unit id="b31512cbd68c54dad88a9e89b51425ebb5a34758" translate="yes" xml:space="preserve">
          <source>The timestamp of the end of the current duration.</source>
          <target state="translated">현재 지속 시간 종료의 타임 스탬프입니다.</target>
        </trans-unit>
        <trans-unit id="b92f0a4703fc19402ceb9c0cbb466e700c82d8e0" translate="yes" xml:space="preserve">
          <source>The timezone the date should be evaluated on.</source>
          <target state="translated">날짜를 평가해야하는 시간대</target>
        </trans-unit>
        <trans-unit id="4822bc10088131f2e2ada0734ad38e425aada932" translate="yes" xml:space="preserve">
          <source>The title field of the attachment field.</source>
          <target state="translated">첨부 파일 필드의 제목 필드</target>
        </trans-unit>
        <trans-unit id="1d4072edcdf635d0ee832538ca8012af02ce09fc" translate="yes" xml:space="preserve">
          <source>The token database table.</source>
          <target state="translated">토큰 데이터베이스 테이블.</target>
        </trans-unit>
        <trans-unit id="ce4a944aaa46dea95371afcc79aa0c58c866b85f" translate="yes" xml:space="preserve">
          <source>The total number of items before slicing.</source>
          <target state="translated">슬라이스 전의 총 항목 수입니다.</target>
        </trans-unit>
        <trans-unit id="a5f4249eec9da9470e388c3cd7f2bf76586dd5a7" translate="yes" xml:space="preserve">
          <source>The total number of items in the array being iterated.</source>
          <target state="translated">반복되는 배열의 총 항목 수입니다.</target>
        </trans-unit>
        <trans-unit id="49bbb67f8dc2f8d1fa0512778dd06bee98082949" translate="yes" xml:space="preserve">
          <source>The translation replacements for the translation being rendered.</source>
          <target state="translated">번역중인 번역을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="ee8e29d48de7dc939a36b7d4f9d8f93a595d543a" translate="yes" xml:space="preserve">
          <source>The type of class being generated.</source>
          <target state="translated">생성되는 클래스의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="2d24cc5fcb0f5b7079e14d397702c0120c738448" translate="yes" xml:space="preserve">
          <source>The type of join being performed.</source>
          <target state="translated">수행중인 조인 유형입니다.</target>
        </trans-unit>
        <trans-unit id="5dd6bca065f5d4ecd689d277be205f971b1146a1" translate="yes" xml:space="preserve">
          <source>The type of the polymorphic relation.</source>
          <target state="translated">다형성 관계의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="e837d173527d3e77cbb6b1090734ad39a2225065" translate="yes" xml:space="preserve">
          <source>The underlying container instance.</source>
          <target state="translated">기본 컨테이너 인스턴스</target>
        </trans-unit>
        <trans-unit id="9ad916de6e07699a45d35acdb5612d7cad70d299" translate="yes" xml:space="preserve">
          <source>The underlying job record.</source>
          <target state="translated">기본 작업 기록.</target>
        </trans-unit>
        <trans-unit id="8ab3a9e0a6b67e9e6e335efc87f28772701d2a28" translate="yes" xml:space="preserve">
          <source>The underlying logger implementation.</source>
          <target state="translated">기본 로거 구현</target>
        </trans-unit>
        <trans-unit id="b0c437bd2beab584bc144487c106f633dfeab59d" translate="yes" xml:space="preserve">
          <source>The underlying object.</source>
          <target state="translated">기본 개체입니다.</target>
        </trans-unit>
        <trans-unit id="f301c22722a1a8356b09a117c658be20c34d02f4" translate="yes" xml:space="preserve">
          <source>The underlying queue job instance.</source>
          <target state="translated">기본 큐 작업 인스턴스</target>
        </trans-unit>
        <trans-unit id="b988f2134cf971ad4817b031091500f179c52985" translate="yes" xml:space="preserve">
          <source>The underlying resource.</source>
          <target state="translated">기본 리소스</target>
        </trans-unit>
        <trans-unit id="17e75b55666e5d5ae74cb918d824095115af2efe" translate="yes" xml:space="preserve">
          <source>The underlying response instance.</source>
          <target state="translated">기본 응답 인스턴스</target>
        </trans-unit>
        <trans-unit id="f1dfb580510acd5c8f3435e1ab8bb2e5ea04f3aa" translate="yes" xml:space="preserve">
          <source>The unique identifier for the notification.</source>
          <target state="translated">알림의 고유 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="e5752ae046b5fbc7351f998c7f29237a2ed74ca7" translate="yes" xml:space="preserve">
          <source>The unique identifier of the model.</source>
          <target state="translated">모델의 고유 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="9531c600853530f8b4223dbfd5769ad70e0d84ae" translate="yes" xml:space="preserve">
          <source>The unused &lt;code&gt;options&lt;/code&gt; argument of the &lt;code&gt;Illuminate\Foundation\Application&lt;/code&gt; class' &lt;code&gt;register&lt;/code&gt; method has been removed. If you are overriding this method, you should update your method's signature:</source>
          <target state="translated">&lt;code&gt;Illuminate\Foundation\Application&lt;/code&gt; 클래스의 &lt;code&gt;register&lt;/code&gt; 메소드 의 사용되지 않은 &lt;code&gt;options&lt;/code&gt; 인수 가 제거되었습니다. 이 메소드를 재정의하는 경우 메소드의 서명을 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="76bbb754bf9cab4e9ebcc97d9224c60b8790d4d1" translate="yes" xml:space="preserve">
          <source>The user emoji icon for the message.</source>
          <target state="translated">메시지의 사용자 이모 지 아이콘.</target>
        </trans-unit>
        <trans-unit id="6d86f1ff2c7e67cba710d84c1174313c189623a4" translate="yes" xml:space="preserve">
          <source>The user has been authenticated.</source>
          <target state="translated">사용자가 인증되었습니다.</target>
        </trans-unit>
        <trans-unit id="6f334a7b748574a902e38177597fba429d30f87f" translate="yes" xml:space="preserve">
          <source>The user has been registered.</source>
          <target state="translated">사용자가 등록되었습니다.</target>
        </trans-unit>
        <trans-unit id="03c3f3fd14d96d990f6ceb432de3b6e717cd57c5" translate="yes" xml:space="preserve">
          <source>The user has logged out of the application.</source>
          <target state="translated">사용자가 응용 프로그램에서 로그 아웃했습니다.</target>
        </trans-unit>
        <trans-unit id="478709e557cf90ed3bbe37741eec388ead3ca14e" translate="yes" xml:space="preserve">
          <source>The user image icon for the message.</source>
          <target state="translated">메시지의 사용자 이미지 아이콘.</target>
        </trans-unit>
        <trans-unit id="0959d1e85098f21adafb87770cc296a926901dfa" translate="yes" xml:space="preserve">
          <source>The user provider implementation.</source>
          <target state="translated">사용자 제공자 구현.</target>
        </trans-unit>
        <trans-unit id="abcfedd81fa68455cfb0ec897c75b5cc0995d3a9" translate="yes" xml:space="preserve">
          <source>The user resolver callable.</source>
          <target state="translated">사용자 리졸버가 호출 가능합니다.</target>
        </trans-unit>
        <trans-unit id="f2785046c757357d117b5a8c8e29e47c0d9096d8" translate="yes" xml:space="preserve">
          <source>The user resolver callback.</source>
          <target state="translated">사용자 리졸버 콜백</target>
        </trans-unit>
        <trans-unit id="7f3e851e6d656f66917aa4f25b66c027b5829d91" translate="yes" xml:space="preserve">
          <source>The user resolver shared by various services.</source>
          <target state="translated">다양한 서비스가 공유하는 사용자 해결 프로그램입니다.</target>
        </trans-unit>
        <trans-unit id="b03b1819d6ab78080d4c4b1cd7eac731ae6209c7" translate="yes" xml:space="preserve">
          <source>The user the attempter was trying to authenticate as.</source>
          <target state="translated">시도자가 인증을 시도한 사용자입니다.</target>
        </trans-unit>
        <trans-unit id="991c31171fd879bb8b9501eac26c1d9cd7555318" translate="yes" xml:space="preserve">
          <source>The user the command should run as.</source>
          <target state="translated">명령을 실행해야하는 사용자</target>
        </trans-unit>
        <trans-unit id="33e7f66129d63caf8084a77ba47aaceb084ec7f8" translate="yes" xml:space="preserve">
          <source>The user we last attempted to retrieve.</source>
          <target state="translated">마지막으로 검색을 시도한 사용자입니다.</target>
        </trans-unit>
        <trans-unit id="eb011f8f964fbc3f1d8226e0def127773755ba07" translate="yes" xml:space="preserve">
          <source>The user.</source>
          <target state="translated">사용자.</target>
        </trans-unit>
        <trans-unit id="a7509c52848002be31db1d30395a03ffa3e89d15" translate="yes" xml:space="preserve">
          <source>The username to send the message from.</source>
          <target state="translated">메시지를 보낼 사용자 이름입니다.</target>
        </trans-unit>
        <trans-unit id="17c65b2c84ac03320eef6cb97e212a61a13cc57d" translate="yes" xml:space="preserve">
          <source>The validation error message.</source>
          <target state="translated">유효성 검사 오류 메시지</target>
        </trans-unit>
        <trans-unit id="04ec0b5ea4de5f500778e64fb8042731a4ffbeee" translate="yes" xml:space="preserve">
          <source>The validation rules that imply the field is required.</source>
          <target state="translated">필드를 암시하는 유효성 검사 규칙이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="52cea3c083bf0077073af1e40ab30369af7010a1" translate="yes" xml:space="preserve">
          <source>The validation rules that may be applied to files.</source>
          <target state="translated">파일에 적용될 수있는 유효성 검사 규칙</target>
        </trans-unit>
        <trans-unit id="a214dccaffafc13138095ef01bde1dade3d8b141" translate="yes" xml:space="preserve">
          <source>The validation rules which depend on other fields as parameters.</source>
          <target state="translated">다른 필드를 매개 변수로 사용하는 유효성 검증 규칙.</target>
        </trans-unit>
        <trans-unit id="e79792af26bb12e0110123aa3c13fa12cf55e007" translate="yes" xml:space="preserve">
          <source>The validator also allows you to attach callbacks to be run after validation is completed. This allows you to easily perform further validation and even add more error messages to the message collection. To get started, use the &lt;code&gt;after&lt;/code&gt; method on a validator instance:</source>
          <target state="translated">유효성 검사기는 유효성 검사가 완료된 후 실행할 콜백을 첨부 할 수도 있습니다. 이를 통해 추가 검증을 쉽게 수행하고 메시지 수집에 더 많은 오류 메시지를 추가 할 수 있습니다. 시작하려면 유효성 검사기 인스턴스 에서 &lt;code&gt;after&lt;/code&gt; 메서드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1efad989d3ba7a320ef01cb90a05a29f0b4171c1" translate="yes" xml:space="preserve">
          <source>The validator instance.</source>
          <target state="translated">유효성 검사기 인스턴스</target>
        </trans-unit>
        <trans-unit id="17910fd1025c8285b31c86579bf160394803ed67" translate="yes" xml:space="preserve">
          <source>The validators used by the routes.</source>
          <target state="translated">경로에서 사용 된 유효성 검사기</target>
        </trans-unit>
        <trans-unit id="6daf4a5f6df348781c1d439c71c7c374f3d314ec" translate="yes" xml:space="preserve">
          <source>The value for &lt;code&gt;$carry&lt;/code&gt; on the first iteration is &lt;code&gt;null&lt;/code&gt;; however, you may specify its initial value by passing a second argument to &lt;code&gt;reduce&lt;/code&gt;:</source>
          <target state="translated">첫 번째 반복에서 &lt;code&gt;$carry&lt;/code&gt; 의 값 은 &lt;code&gt;null&lt;/code&gt; . 그러나 다음을 &lt;code&gt;reduce&lt;/code&gt; 두 번째 인수를 전달하여 초기 값을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e9048ea9673d1ad8bdccecb637db42ea4310c7eb" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="157d1e8a08dca776dd2e01cb74459d2b6b870275" translate="yes" xml:space="preserve">
          <source>The value is an empty array or empty &lt;code&gt;Countable&lt;/code&gt; object.</source>
          <target state="translated">값이 빈 배열이거나 비어있는 &lt;code&gt;Countable&lt;/code&gt; 개체입니다.</target>
        </trans-unit>
        <trans-unit id="061868d471368e7000b71c52038b35dccf93e542" translate="yes" xml:space="preserve">
          <source>The value is an empty string.</source>
          <target state="translated">값은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="0d7e7d59ae6444a87afbe50c77ba904921dc2e88" translate="yes" xml:space="preserve">
          <source>The value is an integer where 1 is the highest priority and 5 is the lowest.</source>
          <target state="translated">값은 1이 가장 높은 우선 순위이고 5가 가장 낮은 정수입니다.</target>
        </trans-unit>
        <trans-unit id="711cb6f84f883c1ae7df775cf9aed799b759099b" translate="yes" xml:space="preserve">
          <source>The value is an uploaded file with no path.</source>
          <target state="translated">값은 경로가없는 업로드 된 파일입니다.</target>
        </trans-unit>
        <trans-unit id="6888c5949df1c7a77a3be83f0305f656b8d817ad" translate="yes" xml:space="preserve">
          <source>The value of the expression.</source>
          <target state="translated">표현식의 값입니다.</target>
        </trans-unit>
        <trans-unit id="38800f33ee4efa9ac81c649d15abdb07a7fce567" translate="yes" xml:space="preserve">
          <source>The value of the polymorphic relation.</source>
          <target state="translated">다형성 관계의 값.</target>
        </trans-unit>
        <trans-unit id="1601801c27c07c18ca583c7a2415e03c7ebcb18c" translate="yes" xml:space="preserve">
          <source>The value that was retrieved.</source>
          <target state="translated">검색된 값입니다.</target>
        </trans-unit>
        <trans-unit id="9e81d39ebe7a2b1327a1239a7373073d3bc53cdd" translate="yes" xml:space="preserve">
          <source>The value that was written.</source>
          <target state="translated">작성된 값입니다.</target>
        </trans-unit>
        <trans-unit id="39ff959a4cb1cc7c2f334da6aa7539edae71cf71" translate="yes" xml:space="preserve">
          <source>The vendor path.</source>
          <target state="translated">공급 업체 경로.</target>
        </trans-unit>
        <trans-unit id="707b34c0cbc7dc0182476c83bbde4465a1706f60" translate="yes" xml:space="preserve">
          <source>The verbs used in the resource URIs.</source>
          <target state="translated">자원 URI에 사용되는 동사.</target>
        </trans-unit>
        <trans-unit id="9caa59f20b33fc4532537e76434a837cf7ac16c0" translate="yes" xml:space="preserve">
          <source>The verified user.</source>
          <target state="translated">확인 된 사용자</target>
        </trans-unit>
        <trans-unit id="fef9b7ec0888871040e13ad692f156c04a37a7c5" translate="yes" xml:space="preserve">
          <source>The view composer events.</source>
          <target state="translated">뷰 작성기 이벤트</target>
        </trans-unit>
        <trans-unit id="1b4f34f5b9982381fb6984f4ee1e48098080e706" translate="yes" xml:space="preserve">
          <source>The view data for the message.</source>
          <target state="translated">메시지의보기 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="6104c14e27801982d3214fa3e60787f0f87ecddb" translate="yes" xml:space="preserve">
          <source>The view factory implementation.</source>
          <target state="translated">뷰 팩토리 구현</target>
        </trans-unit>
        <trans-unit id="ad8822413f8c1b262c11320d8f4aad7a7388d6c6" translate="yes" xml:space="preserve">
          <source>The view factory instance.</source>
          <target state="translated">뷰 팩토리 인스턴스</target>
        </trans-unit>
        <trans-unit id="bb00fcd493cdb0b4f8520e12316f3dc732a8a332" translate="yes" xml:space="preserve">
          <source>The view factory resolver callback.</source>
          <target state="translated">뷰 팩토리 리졸버 콜백</target>
        </trans-unit>
        <trans-unit id="50a56ee78bc61de00eb3c7710dcc642c7046c946" translate="yes" xml:space="preserve">
          <source>The view finder implementation.</source>
          <target state="translated">뷰 파인더 구현.</target>
        </trans-unit>
        <trans-unit id="c3cb48db5dc1a414221a9fa624829dc51ab42ca2" translate="yes" xml:space="preserve">
          <source>The view that was last to be rendered.</source>
          <target state="translated">마지막으로 렌더링 된 뷰입니다.</target>
        </trans-unit>
        <trans-unit id="17be7bff4f0b2ea81b770722336aa0165c31c70d" translate="yes" xml:space="preserve">
          <source>The view to be rendered.</source>
          <target state="translated">렌더링 할 뷰입니다.</target>
        </trans-unit>
        <trans-unit id="ec784a65f31d480cb11e3f916c7f1125f1dadfc8" translate="yes" xml:space="preserve">
          <source>The view to use for the message.</source>
          <target state="translated">메시지에 사용할보기입니다.</target>
        </trans-unit>
        <trans-unit id="fa951d6479d905db5220de2c424926ef0ae15958" translate="yes" xml:space="preserve">
          <source>The views that need to be exported.</source>
          <target state="translated">내 보내야하는보기</target>
        </trans-unit>
        <trans-unit id="e824bb682736e368dc8df6013d8007d1019fbfbf" translate="yes" xml:space="preserve">
          <source>The where constraints for the query.</source>
          <target state="translated">쿼리에 대한 where 제약 조건</target>
        </trans-unit>
        <trans-unit id="86305091cca3d9a38fa0c3ec56065049f12fb99f" translate="yes" xml:space="preserve">
          <source>The wildcard listeners.</source>
          <target state="translated">와일드 카드 리스너</target>
        </trans-unit>
        <trans-unit id="ddfa44fe69f849ba9e7115ea619e94b5d521199d" translate="yes" xml:space="preserve">
          <source>The working path to regenerate from.</source>
          <target state="translated">재생산 할 작업 경로.</target>
        </trans-unit>
        <trans-unit id="161310574c5a47f885cd6467b63a3e77674cee01" translate="yes" xml:space="preserve">
          <source>Then attach this middleware to a route:</source>
          <target state="translated">그런 다음이 미들웨어를 경로에 연결하십시오.</target>
        </trans-unit>
        <trans-unit id="39c210aeb4928d0d9a2d41f1886b73cb2abc2349" translate="yes" xml:space="preserve">
          <source>Then you should add the following Braintree SDK calls to your &lt;code&gt;AppServiceProvider&lt;/code&gt; service provider's &lt;code&gt;boot&lt;/code&gt; method:</source>
          <target state="translated">그런 다음 &lt;code&gt;AppServiceProvider&lt;/code&gt; 서비스 제공 업체의 &lt;code&gt;boot&lt;/code&gt; 방법에 다음 Braintree SDK 호출을 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b131abe2615203f387c2a03a60226568c1e3edf6" translate="yes" xml:space="preserve">
          <source>Then, once you have created the &lt;code&gt;meta&lt;/code&gt; tag, you can instruct a library like jQuery to automatically add the token to all request headers. This provides simple, convenient CSRF protection for your AJAX based applications:</source>
          <target state="translated">그런 다음 &lt;code&gt;meta&lt;/code&gt; 태그를 만든 후에 는 jQuery와 같은 라이브러리가 모든 요청 헤더에 자동으로 토큰을 추가하도록 지시 할 수 있습니다. 이를 통해 AJAX 기반 애플리케이션에 대해 간단하고 편리한 CSRF 보호 기능을 제공합니다</target>
        </trans-unit>
        <trans-unit id="d8834ae3158eab3458ec6a4b61cecb4d659d5abf" translate="yes" xml:space="preserve">
          <source>Then, update any reference to the old directories in your &lt;code&gt;webpack.mix.js&lt;/code&gt; file:</source>
          <target state="translated">그런 다음 &lt;code&gt;webpack.mix.js&lt;/code&gt; 파일 에서 이전 디렉토리에 대한 참조를 업데이트 하십시오.</target>
        </trans-unit>
        <trans-unit id="f46ab02d9a619a36b2686f2513a4b155775a6713" translate="yes" xml:space="preserve">
          <source>Then, when configuring the mailable within its &lt;code&gt;build&lt;/code&gt; method, call the &lt;code&gt;markdown&lt;/code&gt; method instead of the &lt;code&gt;view&lt;/code&gt; method. The &lt;code&gt;markdown&lt;/code&gt; methods accepts the name of the Markdown template and an optional array of data to make available to the template:</source>
          <target state="translated">그런 다음 &lt;code&gt;build&lt;/code&gt; 메소드 내에서 mailable을 구성 할 때 &lt;code&gt;view&lt;/code&gt; 메소드 대신 &lt;code&gt;markdown&lt;/code&gt; 메소드를 호출하십시오 . &lt;code&gt;markdown&lt;/code&gt; 방법은 마크 다운 템플릿과 템플릿에 사용할 수 있도록 데이터의 선택적 배열의 이름을 받아 들인다 :</target>
        </trans-unit>
        <trans-unit id="2b5f8400f8cf2eecc92b3cdd65e0feedb0a826a6" translate="yes" xml:space="preserve">
          <source>Then, when running your &lt;a href=&quot;#running-the-queue-worker&quot;&gt;queue worker&lt;/a&gt;, you should specify the maximum number of times a job should be attempted using the &lt;code&gt;--tries&lt;/code&gt; switch on the &lt;code&gt;queue:work&lt;/code&gt; command. If you do not specify a value for the &lt;code&gt;--tries&lt;/code&gt; option, jobs will be attempted indefinitely:</source>
          <target state="translated">그런 다음 &lt;a href=&quot;#running-the-queue-worker&quot;&gt;큐 작업자를&lt;/a&gt; 실행할 때 &lt;code&gt;queue:work&lt;/code&gt; 명령 에서 &lt;code&gt;--tries&lt;/code&gt; 스위치를 사용하여 작업을 시도 할 최대 횟수를 지정해야합니다 . &lt;code&gt;--tries&lt;/code&gt; 옵션에 값을 지정하지 않으면 작업이 무기한 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="4d6b7bdb0dde82bf20180d4ff9db3d841472c5af" translate="yes" xml:space="preserve">
          <source>Then, you may use the &lt;code&gt;logoutOtherDevices&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade. This method requires the user to provide their current password, which your application should accept through an input form:</source>
          <target state="translated">그런 다음 &lt;code&gt;Auth&lt;/code&gt; 파사드 에서 &lt;code&gt;logoutOtherDevices&lt;/code&gt; 메소드를 사용할 수 있습니다 . 이 방법을 사용하려면 사용자가 현재 비밀번호를 제공해야하며, 애플리케이션은 입력 양식을 통해 승인해야합니다.</target>
        </trans-unit>
        <trans-unit id="7ac63e128e20270751d97b64ab3ad08a646ce00a" translate="yes" xml:space="preserve">
          <source>Then, you only need to &lt;a href=&quot;events&quot;&gt;fire the event&lt;/a&gt; as you normally would. Once the event has been fired, a &lt;a href=&quot;queues&quot;&gt;queued job&lt;/a&gt; will automatically broadcast the event over your specified broadcast driver.</source>
          <target state="translated">그런 다음 평소대로 &lt;a href=&quot;events&quot;&gt;이벤트&lt;/a&gt; 를 시작하면됩니다. 이벤트가 시작되면 &lt;a href=&quot;queues&quot;&gt;대기중인 작업&lt;/a&gt; 이 지정된 브로드 캐스트 드라이버를 통해 자동으로 이벤트를 브로드 캐스트합니다.</target>
        </trans-unit>
        <trans-unit id="c697e48a5bcfe4e8d4e6273e500fc78caf2a7e25" translate="yes" xml:space="preserve">
          <source>There are a few important things to note about the &lt;code&gt;putFile&lt;/code&gt; method. Note that we only specified a directory name, not a file name. By default, the &lt;code&gt;putFile&lt;/code&gt; method will generate a unique ID to serve as the file name. The file's extension will be determined by examining the file's MIME type. The path to the file will be returned by the &lt;code&gt;putFile&lt;/code&gt; method so you can store the path, including the generated file name, in your database.</source>
          <target state="translated">&lt;code&gt;putFile&lt;/code&gt; 메소드 에 대해 몇 가지 중요한 사항이 있습니다. 파일 이름이 아닌 디렉토리 이름 만 지정했습니다. 기본적으로 &lt;code&gt;putFile&lt;/code&gt; 메소드는 파일 이름으로 사용할 고유 ID를 생성합니다. 파일의 확장자는 파일의 MIME 유형을 검사하여 결정됩니다. 파일에 대한 경로는 &lt;code&gt;putFile&lt;/code&gt; 메소드에 의해 리턴 되므로 생성 된 파일 이름을 포함한 경로를 데이터베이스에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd26868f4a5feb2a2ca0bb1bca97358048ace6d0" translate="yes" xml:space="preserve">
          <source>There are a few important things to note about this example. Note that we only specified a directory name, not a file name. By default, the &lt;code&gt;store&lt;/code&gt; method will generate a unique ID to serve as the file name. The file's extension will be determined by examining the file's MIME type. The path to the file will be returned by the &lt;code&gt;store&lt;/code&gt; method so you can store the path, including the generated file name, in your database.</source>
          <target state="translated">이 예제에서주의해야 할 몇 가지 사항이 있습니다. 파일 이름이 아닌 디렉토리 이름 만 지정했습니다. 기본적으로 &lt;code&gt;store&lt;/code&gt; 메소드는 파일 이름으로 사용할 고유 ID를 생성합니다. 파일의 확장자는 파일의 MIME 유형을 검사하여 결정됩니다. 파일에 대한 경로는 &lt;code&gt;store&lt;/code&gt; 메소드에 의해 리턴 되므로 생성 된 파일 이름을 포함한 경로를 데이터베이스에 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c944c16dba1c6549f839b502058b6671f8e5d523" translate="yes" xml:space="preserve">
          <source>There are a variety of other methods available on &lt;code&gt;UploadedFile&lt;/code&gt; instances. Check out the &lt;a href=&quot;http://api.symfony.com/3.0/Symfony/Component/HttpFoundation/File/UploadedFile.html&quot;&gt;API documentation for the class&lt;/a&gt; for more information regarding these methods.</source>
          <target state="translated">&lt;code&gt;UploadedFile&lt;/code&gt; 인스턴스 에는 다양한 다른 방법이 있습니다 . 이러한 메소드에 대한 자세한 정보 &lt;a href=&quot;http://api.symfony.com/3.0/Symfony/Component/HttpFoundation/File/UploadedFile.html&quot;&gt;는 클래스&lt;/a&gt; 의 API 문서를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="b24f30ff99c6e9a7d884dd787e0f9706a391c5dd" translate="yes" xml:space="preserve">
          <source>There are several middleware included in the Laravel framework, including middleware for authentication and CSRF protection. All of these middleware are located in the &lt;code&gt;app/Http/Middleware&lt;/code&gt; directory.</source>
          <target state="translated">Laravel 프레임 워크에는 인증 용 미들웨어 및 CSRF 보호를 포함하여 여러 미들웨어가 포함되어 있습니다. 이 미들웨어는 모두 &lt;code&gt;app/Http/Middleware&lt;/code&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="17ee2130be0c3d6048b43a8d1fd42decf0e20d1d" translate="yes" xml:space="preserve">
          <source>There are several ways to paginate items. The simplest is by using the &lt;code&gt;paginate&lt;/code&gt; method on the &lt;a href=&quot;queries&quot;&gt;query builder&lt;/a&gt; or an &lt;a href=&quot;eloquent&quot;&gt;Eloquent query&lt;/a&gt;. The &lt;code&gt;paginate&lt;/code&gt; method automatically takes care of setting the proper limit and offset based on the current page being viewed by the user. By default, the current page is detected by the value of the &lt;code&gt;page&lt;/code&gt; query string argument on the HTTP request. Of course, this value is automatically detected by Laravel, and is also automatically inserted into links generated by the paginator.</source>
          <target state="translated">항목을 페이지 매김하는 방법에는 여러 가지가 있습니다. 가장 간단한 방법은 &lt;a href=&quot;queries&quot;&gt;쿼리 작성기&lt;/a&gt; 또는 &lt;a href=&quot;eloquent&quot;&gt;Eloquent 쿼리&lt;/a&gt; 에서 &lt;code&gt;paginate&lt;/code&gt; 방법을 사용하는 것 입니다. &lt;code&gt;paginate&lt;/code&gt; 방법 은 사용자 가보고 있는 현재 페이지를 기반으로 적절한 제한 및 오프셋 설정을 자동으로 처리합니다. 기본적으로 현재 페이지는 HTTP 요청 의 &lt;code&gt;page&lt;/code&gt; 쿼리 문자열 인수 값으로 감지됩니다 . 물론이 값은 Laravel에 의해 자동으로 감지되며 페이지 매김자가 생성 한 링크에도 자동으로 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="6323966b53cb3ad38229f144aecaacda02daa8df" translate="yes" xml:space="preserve">
          <source>There are two other methods you may use to create models by mass assigning attributes: &lt;code&gt;firstOrCreate&lt;/code&gt; and &lt;code&gt;firstOrNew&lt;/code&gt;. The &lt;code&gt;firstOrCreate&lt;/code&gt; method will attempt to locate a database record using the given column / value pairs. If the model can not be found in the database, a record will be inserted with the attributes from the first parameter, along with those in the optional second parameter.</source>
          <target state="translated">속성을 대량 할당하여 모델을 작성하는 데 사용할 수있는 두 가지 다른 방법 ( &lt;code&gt;firstOrCreate&lt;/code&gt; 및 &lt;code&gt;firstOrNew&lt;/code&gt; )이 있습니다. &lt;code&gt;firstOrCreate&lt;/code&gt; 의 방법은 지정된 열 / 값 쌍을 사용하여 데이터베이스 레코드를 찾을 시도합니다. 데이터베이스에서 모델을 찾을 수없는 경우 선택적 두 번째 매개 변수의 속성과 함께 첫 번째 매개 변수의 속성과 함께 레코드가 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="da338e7212619951f3694d471235cdd9d2a14563" translate="yes" xml:space="preserve">
          <source>There are two primary ways of working with session data in Laravel: the global &lt;code&gt;session&lt;/code&gt; helper and via a &lt;code&gt;Request&lt;/code&gt; instance. First, let's look at accessing the session via a &lt;code&gt;Request&lt;/code&gt; instance, which can be type-hinted on a controller method. Remember, controller method dependencies are automatically injected via the Laravel &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;:</source>
          <target state="translated">라 라벨에서 세션 데이터를 다루는 주요 방법은 글로벌 &lt;code&gt;session&lt;/code&gt; 헬퍼와 &lt;code&gt;Request&lt;/code&gt; 인스턴스 를 통한 두 가지 방법이 있습니다. 먼저 컨트롤러 인스턴스에서 입력 할 수 있는 &lt;code&gt;Request&lt;/code&gt; 인스턴스 를 통해 세션에 액세스하는 방법을 살펴 보겠습니다 . 컨트롤러 메소드 의존성은 Laravel &lt;a href=&quot;container&quot;&gt;서비스 컨테이너&lt;/a&gt; 를 통해 자동으로 주입됩니다 .</target>
        </trans-unit>
        <trans-unit id="39ecbdfabb951c3295b24d81d63f4f9b2deed6db" translate="yes" xml:space="preserve">
          <source>There is absolutely no practical difference between facades and helper functions. When using helper functions, you may still test them exactly as you would the corresponding facade. For example, given the following route:</source>
          <target state="translated">파사드와 도우미 기능에는 실질적인 차이가 없습니다. 도우미 기능을 사용할 때 해당 파사드와 동일한 방식으로 테스트 할 수 있습니다. 예를 들어 다음과 같은 경로가 주어집니다.</target>
        </trans-unit>
        <trans-unit id="63715cb4916f857a2c435be121299f0936ac9504" translate="yes" xml:space="preserve">
          <source>There is little practical difference between using the session via an HTTP request instance versus using the global &lt;code&gt;session&lt;/code&gt; helper. Both methods are &lt;a href=&quot;testing&quot;&gt;testable&lt;/a&gt; via the &lt;code&gt;assertSessionHas&lt;/code&gt; method which is available in all of your test cases.</source>
          <target state="translated">HTTP 요청 인스턴스를 통한 세션 사용과 글로벌 &lt;code&gt;session&lt;/code&gt; 도우미 사용 사이에는 실질적인 차이가 거의 없습니다 . 두 가지 방법은 &lt;a href=&quot;testing&quot;&gt;검증&lt;/a&gt; 비아 &lt;code&gt;assertSessionHas&lt;/code&gt; 의 테스트 케이스 모두에서 사용할 수 있습니다 방법.</target>
        </trans-unit>
        <trans-unit id="c0dd6c9e694c8daf8cc02aec5be71416d616c604" translate="yes" xml:space="preserve">
          <source>There is no need to bind classes into the container if they do not depend on any interfaces. The container does not need to be instructed on how to build these objects, since it can automatically resolve these objects using reflection.</source>
          <target state="translated">클래스가 인터페이스에 의존하지 않는 경우 클래스를 컨테이너에 바인딩 할 필요가 없습니다. 컨테이너는 리플렉션을 사용하여 이러한 오브젝트를 자동으로 해결할 수 있으므로 이러한 오브젝트를 빌드하는 방법에 대한 지시를받을 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="f357a9b2727c54260ac2cfbec57ab0eddd7762a2" translate="yes" xml:space="preserve">
          <source>These Closures also receive the evaluated attribute array of the factory that defines them:</source>
          <target state="translated">이러한 클로저는 또한이를 정의하는 팩토리의 평가 된 속성 배열을받습니다.</target>
        </trans-unit>
        <trans-unit id="250feee64bf8f1fc01fc0c9d5f2f791159d942fe" translate="yes" xml:space="preserve">
          <source>These directives are convenient shortcuts for writing &lt;code&gt;@if&lt;/code&gt; and &lt;code&gt;@unless&lt;/code&gt; statements. The &lt;code&gt;@can&lt;/code&gt; and &lt;code&gt;@cannot&lt;/code&gt; statements above respectively translate to the following statements:</source>
          <target state="translated">이 지시문은 &lt;code&gt;@if&lt;/code&gt; 및 &lt;code&gt;@unless&lt;/code&gt; 문 을 작성하기위한 편리한 바로 가기입니다 . 위의 &lt;code&gt;@can&lt;/code&gt; 및 &lt;code&gt;@cannot&lt;/code&gt; 문은 각각 다음 문으로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="4575e37225c4dc15363ee57a03ca574eca74d8bb" translate="yes" xml:space="preserve">
          <source>These events will be mocked, so that handlers will not actually be executed.</source>
          <target state="translated">이러한 이벤트는 조롱되므로 핸들러가 실제로 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e9daa907c7c37be0a8e01bc035701d4e4f537dc4" translate="yes" xml:space="preserve">
          <source>These jobs will be mocked, so that handlers will not actually be executed.</source>
          <target state="translated">이러한 작업은 조롱되므로 핸들러가 실제로 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d75a8a6de391de46892a4774b5d857d47282cb18" translate="yes" xml:space="preserve">
          <source>These methods are typically the same across all guards.</source>
          <target state="translated">이러한 방법은 일반적으로 모든 경비에서 동일합니다.</target>
        </trans-unit>
        <trans-unit id="0e498c5be0710d3a168ef2eeb0f56a471d736364" translate="yes" xml:space="preserve">
          <source>These methods may be combined with additional constraints to create even more finely tuned schedules that only run on certain days of the week. For example, to schedule a command to run weekly on Monday:</source>
          <target state="translated">이러한 방법은 추가 제약 조건과 결합하여 특정 요일에만 실행되는 더 미세 조정 된 일정을 만들 수 있습니다. 예를 들어 월요일에 매주 실행되도록 명령을 예약하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="22bbe46bbf7c15b3c13ed34bd36a06a777c6a44d" translate="yes" xml:space="preserve">
          <source>Think of gates and policies like routes and controllers. Gates provide a simple, Closure based approach to authorization while policies, like controllers, group their logic around a particular model or resource. We'll explore gates first and then examine policies.</source>
          <target state="translated">경로 및 컨트롤러와 같은 게이트 및 정책을 생각하십시오. 게이트는 권한 부여에 대한 간단한 폐쇄 기반 접근 방식을 제공하는 반면 컨트롤러와 같은 정책은 특정 모델이나 리소스를 중심으로 논리를 그룹화합니다. 먼저 게이트를 탐색 한 다음 정책을 검토하겠습니다.</target>
        </trans-unit>
        <trans-unit id="0f8f50c4ce100dc010e8f792f6e565bb1e1f9df5" translate="yes" xml:space="preserve">
          <source>This &lt;code&gt;/oauth/token&lt;/code&gt; route will return a JSON response containing &lt;code&gt;access_token&lt;/code&gt;, &lt;code&gt;refresh_token&lt;/code&gt;, and &lt;code&gt;expires_in&lt;/code&gt; attributes. The &lt;code&gt;expires_in&lt;/code&gt; attribute contains the number of seconds until the access token expires.</source>
          <target state="translated">이 &lt;code&gt;/oauth/token&lt;/code&gt; 경로는 &lt;code&gt;access_token&lt;/code&gt; , &lt;code&gt;refresh_token&lt;/code&gt; 및 &lt;code&gt;expires_in&lt;/code&gt; 속성을 포함하는 JSON 응답을 반환 합니다. &lt;code&gt;expires_in&lt;/code&gt; 속성이 만료 된 액세스 토큰까지 (초)을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="42e93dd14ff73457ccf8641a6271e7be337937bd" translate="yes" xml:space="preserve">
          <source>This Cron will call the Laravel command scheduler every minute. When the &lt;code&gt;schedule:run&lt;/code&gt; command is executed, Laravel will evaluate your scheduled tasks and runs the tasks that are due.</source>
          <target state="translated">이 Cron은 1 분마다 Laravel 명령 스케줄러를 호출합니다. 때 &lt;code&gt;schedule:run&lt;/code&gt; 명령이 실행, Laravel은 예약 된 작업을 평가하고 기인 작업을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="11f00a1b51fc2579cd093f89f38a6b1cd1bef1b3" translate="yes" xml:space="preserve">
          <source>This Passport middleware will attach a &lt;code&gt;laravel_token&lt;/code&gt; cookie to your outgoing responses. This cookie contains an encrypted JWT that Passport will use to authenticate API requests from your JavaScript application. Now, you may make requests to your application's API without explicitly passing an access token:</source>
          <target state="translated">이 Passport 미들웨어는 발신 응답에 &lt;code&gt;laravel_token&lt;/code&gt; 쿠키를 첨부합니다 . 이 쿠키에는 Passport가 JavaScript 응용 프로그램의 API 요청을 인증하는 데 사용하는 암호화 된 JWT가 포함되어 있습니다. 이제 액세스 토큰을 명시 적으로 전달하지 않고도 애플리케이션의 API에 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44c0f6d33fb99ac3bcc826e6ae638a622a48b01e" translate="yes" xml:space="preserve">
          <source>This class was originally copied from Symfony 3.</source>
          <target state="translated">이 클래스는 원래 Symfony 3에서 복사되었습니다.</target>
        </trans-unit>
        <trans-unit id="2605038c92b9562230cbbd281a885f1969f7953e" translate="yes" xml:space="preserve">
          <source>This command reduces all of your route registrations into a single method call within a cached file, improving the performance of route registration when registering hundreds of routes.</source>
          <target state="translated">이 명령은 모든 경로 등록을 캐시 된 파일 내에서 단일 메소드 호출로 줄여서 수백 개의 경로를 등록 할 때 경로 등록 성능을 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="6e30a34e3d6cf851681fc758f864ee0d21f53e16" translate="yes" xml:space="preserve">
          <source>This command should be used on fresh applications and will install a layout view, registration and login views, as well as routes for all authentication end-points. A &lt;code&gt;HomeController&lt;/code&gt; will also be generated to handle post-login requests to your application's dashboard.</source>
          <target state="translated">이 명령은 새로운 응용 프로그램에서 사용해야하며 모든 인증 끝점에 대한 경로뿐만 아니라 레이아웃보기, 등록 및 로그인보기를 설치합니다. &lt;code&gt;HomeController&lt;/code&gt; 는 또한 응용 프로그램의 대시 보드에 후 로그인 요청을 처리하기 위해 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="bae645acef1a1f785b158e0876106a364f60ca14" translate="yes" xml:space="preserve">
          <source>This command will combine all of Laravel's configuration files into a single, cached file, which greatly reduces the number of trips the framework must make to the filesystem when loading your configuration values.</source>
          <target state="translated">이 명령은 모든 라 라벨의 구성 파일을 하나의 캐시 된 파일로 결합하여 구성 값을로드 할 때 프레임 워크가 파일 시스템으로 이동해야하는 횟수를 크게 줄입니다.</target>
        </trans-unit>
        <trans-unit id="17b6d891838ca9931ea868ff424af174dc8854df" translate="yes" xml:space="preserve">
          <source>This command will generate a controller at &lt;code&gt;app/Http/Controllers/PhotoController.php&lt;/code&gt;. The controller will contain a method for each of the available resource operations.</source>
          <target state="translated">이 명령은 &lt;code&gt;app/Http/Controllers/PhotoController.php&lt;/code&gt; 에 컨트롤러를 생성합니다 . 컨트롤러에는 사용 가능한 각 리소스 작업에 대한 방법이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5fd442a4e9d1218cbac79ea95d06bcdf66a49ec4" translate="yes" xml:space="preserve">
          <source>This command will instruct all queue workers to gracefully &quot;die&quot; after they finish processing their current job so that no existing jobs are lost. Since the queue workers will die when the &lt;code&gt;queue:restart&lt;/code&gt; command is executed, you should be running a process manager such as &lt;a href=&quot;#supervisor-configuration&quot;&gt;Supervisor&lt;/a&gt; to automatically restart the queue workers.</source>
          <target state="translated">이 명령은 모든 큐 작업자가 현재 작업 처리를 완료 한 후 기존 작업이 손실되지 않도록 정상적으로 &quot;사료&quot;하도록 지시합니다. &lt;code&gt;queue:restart&lt;/code&gt; 명령이 실행될 때 큐 워커가 종료되므로 큐 워커 를 자동으로 다시 시작하려면 &lt;a href=&quot;#supervisor-configuration&quot;&gt;Supervisor&lt;/a&gt; 와 같은 프로세스 관리자를 실행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="399fc357ac467cd96f7b88876f70626d907c2949" translate="yes" xml:space="preserve">
          <source>This command will place a fresh notification class in your &lt;code&gt;app/Notifications&lt;/code&gt; directory. Each notification class contains a &lt;code&gt;via&lt;/code&gt; method and a variable number of message building methods (such as &lt;code&gt;toMail&lt;/code&gt; or &lt;code&gt;toDatabase&lt;/code&gt;) that convert the notification to a message optimized for that particular channel.</source>
          <target state="translated">이 명령은 &lt;code&gt;app/Notifications&lt;/code&gt; 디렉토리 에 새로운 알림 클래스를 배치합니다 . 각 알림 클래스에는 알림을 특정 채널에 최적화 된 메시지로 변환 하는 &lt;code&gt;via&lt;/code&gt; 메소드 및 다양한 수의 메시지 작성 메소드 (예 : &lt;code&gt;toMail&lt;/code&gt; 또는 &lt;code&gt;toDatabase&lt;/code&gt; )가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a280714c39404156fde1cf8944d1f26897feed0" translate="yes" xml:space="preserve">
          <source>This command will place a new &lt;code&gt;CheckAge&lt;/code&gt; class within your &lt;code&gt;app/Http/Middleware&lt;/code&gt; directory. In this middleware, we will only allow access to the route if the supplied &lt;code&gt;age&lt;/code&gt; is greater than 200. Otherwise, we will redirect the users back to the &lt;code&gt;home&lt;/code&gt; URI:</source>
          <target state="translated">이 명령은 &lt;code&gt;app/Http/Middleware&lt;/code&gt; 디렉토리 내에 새로운 &lt;code&gt;CheckAge&lt;/code&gt; 클래스를 배치합니다 . 이 미들웨어에서는 제공된 &lt;code&gt;age&lt;/code&gt; 이 200보다 큰 경우에만 경로에 대한 액세스를 허용합니다. 그렇지 않으면 사용자를 &lt;code&gt;home&lt;/code&gt; URI로 다시 리디렉션합니다 .</target>
        </trans-unit>
        <trans-unit id="c94fe969d324cb1fd9735ad5b2ff1069cfdd3c82" translate="yes" xml:space="preserve">
          <source>This command will place the new observer in your &lt;code&gt;App/Observers&lt;/code&gt; directory. If this directory does not exist, Artisan will create it for you. Your fresh observer will look like the following:</source>
          <target state="translated">이 명령은 새 관찰자를 &lt;code&gt;App/Observers&lt;/code&gt; 디렉토리에 배치합니다. 이 디렉토리가 존재하지 않으면 Artisan이 자동으로 작성합니다. 새로운 관찰자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c3a7c35b52b03c40f6623187cda6c218fcc2f407" translate="yes" xml:space="preserve">
          <source>This command will place the views in the &lt;code&gt;resources/views/vendor/pagination&lt;/code&gt; directory. The &lt;code&gt;bootstrap-4.blade.php&lt;/code&gt; file within this directory corresponds to the default pagination view. You may edit this file to modify the pagination HTML.</source>
          <target state="translated">이 명령은 views를 &lt;code&gt;resources/views/vendor/pagination&lt;/code&gt; 디렉토리에 배치합니다. 이 디렉토리에 있는 &lt;code&gt;bootstrap-4.blade.php&lt;/code&gt; 파일은 기본 페이지 매김보기에 해당합니다. 페이지 매김 HTML을 수정하기 위해이 파일을 편집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d49325eb85019289a231adda896cf575cc43e10" translate="yes" xml:space="preserve">
          <source>This command will publish the Markdown mail components to the &lt;code&gt;resources/views/vendor/mail&lt;/code&gt; directory. The &lt;code&gt;mail&lt;/code&gt; directory will contain a &lt;code&gt;html&lt;/code&gt; and a &lt;code&gt;markdown&lt;/code&gt; directory, each containing their respective representations of every available component. The components in the &lt;code&gt;html&lt;/code&gt; directory are used to generate the HTML version of your email, and their counterparts in the &lt;code&gt;markdown&lt;/code&gt; directory are used to generate the plain-text version. You are free to customize these components however you like.</source>
          <target state="translated">이 명령은 Markdown 메일 구성 요소를 &lt;code&gt;resources/views/vendor/mail&lt;/code&gt; 디렉토리에 공개합니다. &lt;code&gt;mail&lt;/code&gt; 디렉토리는 포함 &lt;code&gt;html&lt;/code&gt; 과 &lt;code&gt;markdown&lt;/code&gt; 각각의 가능한 모든 구성 요소의 각각의 표현을 포함하는 디렉토리. &lt;code&gt;html&lt;/code&gt; 디렉토리 의 컴포넌트는 이메일의 HTML 버전 을 생성하는 데 사용되며 &lt;code&gt;markdown&lt;/code&gt; 디렉토리의 해당 컴포넌트 는 일반 텍스트 버전을 생성하는 데 사용됩니다. 그러나 원하는대로 이러한 구성 요소를 자유롭게 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fefe0a639196a834119577f76342429668c91dd" translate="yes" xml:space="preserve">
          <source>This command will publish the Markdown mail components to the &lt;code&gt;resources/views/vendor/mail&lt;/code&gt; directory. The &lt;code&gt;mail&lt;/code&gt; directory will contain a &lt;code&gt;html&lt;/code&gt; and a &lt;code&gt;markdown&lt;/code&gt; directory, each containing their respective representations of every available component. You are free to customize these components however you like.</source>
          <target state="translated">이 명령은 Markdown 메일 구성 요소를 &lt;code&gt;resources/views/vendor/mail&lt;/code&gt; 디렉토리에 공개합니다. &lt;code&gt;mail&lt;/code&gt; 디렉토리는 포함 &lt;code&gt;html&lt;/code&gt; 과 &lt;code&gt;markdown&lt;/code&gt; 각각의 가능한 모든 구성 요소의 각각의 표현을 포함하는 디렉토리. 그러나 원하는대로 이러한 구성 요소를 자유롭게 사용자 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29977df36ae228df57a75baa1fb7ff9f9662bb32" translate="yes" xml:space="preserve">
          <source>This cookie is primarily sent as a convenience since some JavaScript frameworks and libraries, like Angular and Axios, automatically place its value in the &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; header.</source>
          <target state="translated">Angular 및 Axios와 같은 일부 JavaScript 프레임 워크 및 라이브러리는 자동으로 &lt;code&gt;X-XSRF-TOKEN&lt;/code&gt; 헤더에 값을 배치하므로이 쿠키는 주로 편의상 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="6217d3635e9925429b5fd9f8d6232961b0604be8" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you by the &lt;code&gt;event:generate&lt;/code&gt; and &lt;code&gt;make:event&lt;/code&gt; Artisan commands. The &lt;code&gt;Events&lt;/code&gt; directory, as you might expect, houses &lt;a href=&quot;events&quot;&gt;event classes&lt;/a&gt;. Events may be used to alert other parts of your application that a given action has occurred, providing a great deal of flexibility and decoupling.</source>
          <target state="translated">이 디렉토리는 기본적으로 존재하지 않지만 &lt;code&gt;event:generate&lt;/code&gt; 및 &lt;code&gt;make:event&lt;/code&gt; Artisan 명령으로 작성됩니다. &lt;code&gt;Events&lt;/code&gt; 디렉토리, 예상대로, 주택 &lt;a href=&quot;events&quot;&gt;이벤트 클래스를&lt;/a&gt; . 이벤트는 응용 프로그램의 다른 부분에 특정 동작이 발생했음을 알리는 데 사용될 수 있으며, 이는 많은 유연성과 분리를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c40ea5a925783298fa24288dabdcf73b4f6a0b03" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;event:generate&lt;/code&gt; or &lt;code&gt;make:listener&lt;/code&gt; Artisan commands. The &lt;code&gt;Listeners&lt;/code&gt; directory contains the classes that handle your &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt;. Event listeners receive an event instance and perform logic in response to the event being fired. For example, a &lt;code&gt;UserRegistered&lt;/code&gt; event might be handled by a &lt;code&gt;SendWelcomeEmail&lt;/code&gt; listener.</source>
          <target state="translated">이 디렉토리는 기본적으로 존재하지 않지만 &lt;code&gt;event:generate&lt;/code&gt; 또는 &lt;code&gt;make:listener&lt;/code&gt; Artisan 명령 을 실행하면 자동으로 작성됩니다 . &lt;code&gt;Listeners&lt;/code&gt; 디렉토리는 처리하는 클래스가 포함되어 &lt;a href=&quot;events&quot;&gt;이벤트를&lt;/a&gt; . 이벤트 리스너는 이벤트 인스턴스를 수신하고 이벤트 발생에 대한 응답으로 로직을 수행합니다. 예를 들어, &lt;code&gt;UserRegistered&lt;/code&gt; 이벤트는 &lt;code&gt;SendWelcomeEmail&lt;/code&gt; 리스너에 의해 처리 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b87df831d1202301ade256d97c5e976abfe4fe4e" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:job&lt;/code&gt; Artisan command. The &lt;code&gt;Jobs&lt;/code&gt; directory houses the &lt;a href=&quot;queues&quot;&gt;queueable jobs&lt;/a&gt; for your application. Jobs may be queued by your application or run synchronously within the current request lifecycle. Jobs that run synchronously during the current request are sometimes referred to as &quot;commands&quot; since they are an implementation of the &lt;a href=&quot;https://en.wikipedia.org/wiki/Command_pattern&quot;&gt;command pattern&lt;/a&gt;.</source>
          <target state="translated">이 디렉토리는 기본적으로 존재하지 않지만 &lt;code&gt;make:job&lt;/code&gt; Artisan 명령 을 실행하면 자동으로 작성 됩니다. &lt;code&gt;Jobs&lt;/code&gt; 디렉토리는 주택 &lt;a href=&quot;queues&quot;&gt;queueable 작업을&lt;/a&gt; 응용 프로그램에 대한. 작업은 애플리케이션에 의해 대기되거나 현재 요청 수명주기 내에서 동 기적으로 실행될 수 있습니다. 현재 요청 중에 동기식으로 실행되는 작업은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Command_pattern&quot;&gt;명령 패턴&lt;/a&gt; 의 구현이므로 &quot;명령&quot;이라고도합니다 .</target>
        </trans-unit>
        <trans-unit id="832e55e9b0ee24f6bf2179dbf163c9f1530a16d2" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:mail&lt;/code&gt; Artisan command. The &lt;code&gt;Mail&lt;/code&gt; directory contains all of your classes that represent emails sent by your application. Mail objects allow you to encapsulate all of the logic of building an email in a single, simple class that may be sent using the &lt;code&gt;Mail::send&lt;/code&gt; method.</source>
          <target state="translated">이 디렉토리는 기본적으로 존재하지 않지만 &lt;code&gt;make:mail&lt;/code&gt; Artisan 명령 을 실행하면 생성됩니다 . &lt;code&gt;Mail&lt;/code&gt; 디렉토리는 응용 프로그램에서 보낸 이메일을 나타내는 당신의 모든 클래스를 포함합니다. Mail 객체를 사용하면 &lt;code&gt;Mail::send&lt;/code&gt; 메소드를 사용하여 전송 될 수있는 하나의 간단한 클래스로 이메일을 작성하는 모든 논리를 캡슐화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2f5b6abb3a7fc9dafe172078105b3f0c5f45eef3" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:notification&lt;/code&gt; Artisan command. The &lt;code&gt;Notifications&lt;/code&gt; directory contains all of the &quot;transactional&quot; notifications that are sent by your application, such as simple notifications about events that happen within your application. Laravel's notification features abstracts sending notifications over a variety of drivers such as email, Slack, SMS, or stored in a database.</source>
          <target state="translated">이 디렉토리는 기본적으로 존재하지 않지만 &lt;code&gt;make:notification&lt;/code&gt; Artisan 명령 을 실행하면 자동으로 작성 됩니다. &lt;code&gt;Notifications&lt;/code&gt; 디렉토리는 응용 프로그램 내에서 발생하는 이벤트에 대한 간단한 알림으로, 응용 프로그램에서 전송되는 &quot;트랜잭션&quot;알림을 제공합니다. 라 라벨의 알림 기능은 이메일, 슬랙, SMS 또는 데이터베이스에 저장된 다양한 드라이버를 통해 알림을 보내는 것을 추상화합니다.</target>
        </trans-unit>
        <trans-unit id="57d2ad1572f71be0bbe7362f058f8f6e67b576e2" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:policy&lt;/code&gt; Artisan command. The &lt;code&gt;Policies&lt;/code&gt; directory contains the authorization policy classes for your application. Policies are used to determine if a user can perform a given action against a resource. For more information, check out the &lt;a href=&quot;authorization&quot;&gt;authorization documentation&lt;/a&gt;.</source>
          <target state="translated">이 디렉토리는 기본적으로 존재하지 않지만 &lt;code&gt;make:policy&lt;/code&gt; Artisan 명령 을 실행하면 자동으로 작성 됩니다. &lt;code&gt;Policies&lt;/code&gt; 디렉토리는 응용 프로그램에 대한 권한 부여 정책 클래스가 포함되어 있습니다. 정책은 사용자가 리소스에 대해 지정된 작업을 수행 할 수 있는지 확인하는 데 사용됩니다. 자세한 정보는 &lt;a href=&quot;authorization&quot;&gt;인증 문서를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="9bd3470038eaf834011d343ac2bd40e52d779c7f" translate="yes" xml:space="preserve">
          <source>This directory does not exist by default, but will be created for you if you execute the &lt;code&gt;make:rule&lt;/code&gt; Artisan command. The &lt;code&gt;Rules&lt;/code&gt; directory contains the custom validation rule objects for your application. Rules are used to encapsulate complicated validation logic in a simple object. For more information, check out the &lt;a href=&quot;validation&quot;&gt;validation documentation&lt;/a&gt;.</source>
          <target state="translated">이 디렉토리는 기본적으로 존재하지 않지만 &lt;code&gt;make:rule&lt;/code&gt; Artisan 명령 을 실행하면 자동으로 작성 됩니다. &lt;code&gt;Rules&lt;/code&gt; 디렉토리는 응용 프로그램에 대한 사용자 지정 유효성 검사 규칙 객체가 포함되어 있습니다. 규칙은 복잡한 유효성 검사 논리를 간단한 개체로 캡슐화하는 데 사용됩니다. 자세한 내용은 &lt;a href=&quot;validation&quot;&gt;유효성 검사 설명서를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f4a6992b53e0d095931623cf73e13581b5be2bf" translate="yes" xml:space="preserve">
          <source>This documentation assumes you are already familiar with OAuth2. If you do not know anything about OAuth2, consider familiarizing yourself with the general terminology and features of OAuth2 before continuing.</source>
          <target state="translated">이 문서는 사용자가 이미 OAuth2에 익숙하다고 가정합니다. OAuth2에 대해 전혀 모르는 경우 계속하기 전에 OAuth2의 일반 용어 및 기능을 숙지하십시오.</target>
        </trans-unit>
        <trans-unit id="617efbc260fee123d38f1617f82ed61f6c049047" translate="yes" xml:space="preserve">
          <source>This extended pipeline catches any exceptions that occur during each slice.</source>
          <target state="translated">이 확장 파이프 라인은 각 슬라이스 중에 발생하는 모든 예외를 포착합니다.</target>
        </trans-unit>
        <trans-unit id="2979a64c24aac70e0d65868e264cef5f974553d6" translate="yes" xml:space="preserve">
          <source>This feature requires that your application can interact with a &lt;a href=&quot;redis&quot;&gt;Redis server&lt;/a&gt;.</source>
          <target state="translated">이 기능을 사용하려면 애플리케이션이 &lt;a href=&quot;redis&quot;&gt;Redis 서버&lt;/a&gt; 와 상호 작용할 수 있어야 합니다 .</target>
        </trans-unit>
        <trans-unit id="1a8f93d3536354b2662cc1d8b44a43577e105067" translate="yes" xml:space="preserve">
          <source>This function also accepts asterisks as wildcards and will fill the target accordingly:</source>
          <target state="translated">이 함수는 또한 별표를 와일드 카드로 허용하고 그에 따라 대상을 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="75b74a49a2c92c3b66f1caa8eeef739090ff2afe" translate="yes" xml:space="preserve">
          <source>This function also accepts wildcards and will set values on the target accordingly:</source>
          <target state="translated">이 함수는 또한 와일드 카드를 허용하며 이에 따라 대상에 값을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="078c08d0f6382e1d401e2124496083d863db5358" translate="yes" xml:space="preserve">
          <source>This interface is simple. The &lt;code&gt;getAuthIdentifierName&lt;/code&gt; method should return the name of the &quot;primary key&quot; field of the user and the &lt;code&gt;getAuthIdentifier&lt;/code&gt; method should return the &quot;primary key&quot; of the user. In a MySQL back-end, again, this would be the auto-incrementing primary key. The &lt;code&gt;getAuthPassword&lt;/code&gt; should return the user's hashed password. This interface allows the authentication system to work with any User class, regardless of what ORM or storage abstraction layer you are using. By default, Laravel includes a &lt;code&gt;User&lt;/code&gt; class in the &lt;code&gt;app&lt;/code&gt; directory which implements this interface, so you may consult this class for an implementation example.</source>
          <target state="translated">이 인터페이스는 간단합니다. &lt;code&gt;getAuthIdentifierName&lt;/code&gt; 의 방법은 사용자의 &quot;기본 키&quot;필드의 이름을 반환해야하고 &lt;code&gt;getAuthIdentifier&lt;/code&gt; 의 방법은 사용자의 &quot;기본 키&quot;를 반환해야합니다. MySQL 백엔드에서는 다시 자동 증분 기본 키가됩니다. &lt;code&gt;getAuthPassword&lt;/code&gt; 는 사용자의 해시 암호를 반환해야합니다. 이 인터페이스를 사용하면 사용중인 ORM 또는 스토리지 추상화 계층에 관계없이 인증 시스템이 모든 사용자 클래스와 작동 할 수 있습니다. 기본적으로 Laravel 은이 인터페이스를 구현 하는 &lt;code&gt;app&lt;/code&gt; 디렉토리 에 &lt;code&gt;User&lt;/code&gt; 클래스를 포함 하므로 구현 예제는이 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="240280de5b0b7ac5729715d855a5fab8809b451b" translate="yes" xml:space="preserve">
          <source>This is a high-level overview of resources and resource collections. You are highly encouraged to read the other sections of this documentation to gain a deeper understanding of the customization and power offered to you by resources.</source>
          <target state="translated">리소스 및 리소스 모음에 대한 고급 개요입니다. 자원이 제공하는 사용자 정의 및 성능에 대한 심층적 인 이해를 위해이 문서의 다른 섹션을 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="45224e730d201b1ddab3df4212506770369c8ffb" translate="yes" xml:space="preserve">
          <source>This is done in case any actions are overwritten with new controllers.</source>
          <target state="translated">새 컨트롤러로 작업을 덮어 쓰는 경우에 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="46031c381dbe3d4f81bdcbce704886df43ac0b05" translate="yes" xml:space="preserve">
          <source>This is done in case any names are fluently defined or if routes are overwritten.</source>
          <target state="translated">이는 이름이 유창하게 정의되거나 경로를 덮어 쓰는 경우에 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="75261c07aaea9fd7aa4785d7b7f5456c35ce1e49" translate="yes" xml:space="preserve">
          <source>This is identical to manually defining the following Gate definitions:</source>
          <target state="translated">이것은 다음 게이트 정의를 수동으로 정의하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5a47866abe16c6f137216e7fcd2394afb8cf72bc" translate="yes" xml:space="preserve">
          <source>This is more efficient on larger data-sets, etc.</source>
          <target state="translated">더 큰 데이터 세트 등에서 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="b7cbcba7a746724f5c9abbfc73abe33c15e4081d" translate="yes" xml:space="preserve">
          <source>This is to avoid possible database type comparison errors.</source>
          <target state="translated">이는 가능한 데이터베이스 유형 비교 오류를 피하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="822111267832779ec07dca95506a0159fa80c5c7" translate="yes" xml:space="preserve">
          <source>This is used to add the --env option to every available command.</source>
          <target state="translated">사용 가능한 모든 명령에 --env 옵션을 추가하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b32fe2084ebe4bba91e86e54f21bf2db446d0395" translate="yes" xml:space="preserve">
          <source>This loop will execute 1 query to retrieve all of the books on the table, then another query for each book to retrieve the author. So, if we have 25 books, this loop would run 26 queries: 1 for the original book, and 25 additional queries to retrieve the author of each book.</source>
          <target state="translated">이 루프는 하나의 쿼리를 실행하여 테이블에있는 모든 책을 검색 한 다음 각 책에 대해 다른 쿼리를 작성하여 저자를 검색합니다. 따라서 25 개의 책이있는 경우이 루프는 26 개의 쿼리를 실행합니다 (원본에 대해 1 개, 각 책의 저자를 검색하기 위해 25 개의 추가 쿼리).</target>
        </trans-unit>
        <trans-unit id="b3fbeefb4eb14c1e3b0de0b0abbb18570769ff54" translate="yes" xml:space="preserve">
          <source>This method belongs to Symfony HttpFoundation and is not usually needed when using Laravel.</source>
          <target state="translated">이 방법은 Symfony HttpFoundation에 속하며 일반적으로 Laravel을 사용할 때 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9d7a25f7a03f67dd46f2a58cb98e125132498b92" translate="yes" xml:space="preserve">
          <source>This method can be useful when combined with factories to create &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; models:</source>
          <target state="translated">이 방법은 공장과 결합하여 &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; 모델 을 생성 할 때 유용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e722018c41ca9d685c89714e1e4445ef8f5f2f83" translate="yes" xml:space="preserve">
          <source>This method didn't match rest of framework's &quot;onQueue&quot; phrasing. Added &quot;onQueue&quot;.</source>
          <target state="translated">이 방법은 나머지 프레임 워크의 &quot;onQueue&quot;구문과 일치하지 않습니다. &quot;onQueue&quot;가 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="4805f89b0c71744ef267df9921f72b794abe1052" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-contains&quot;&gt;&lt;code&gt;contains&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">이 메소드에는 &lt;a href=&quot;#method-contains&quot;&gt; &lt;code&gt;contains&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 서명이 있습니다 . 그러나 모든 값은 &quot;엄격한&quot;비교를 사용하여 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="a748223dffaf28d04e4c3f533874d1d8d0567d07" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-sortby&quot;&gt;&lt;code&gt;sortBy&lt;/code&gt;&lt;/a&gt; method, but will sort the collection in the opposite order.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#method-sortby&quot;&gt; &lt;code&gt;sortBy&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 서명을 갖지만 콜렉션을 반대 순서로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="ac595c9f3afbba78dc79d4cb17bed5b2b1e13061" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-sortkeys&quot;&gt;&lt;code&gt;sortKeys&lt;/code&gt;&lt;/a&gt; method, but will sort the collection in the opposite order.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#method-sortkeys&quot;&gt; &lt;code&gt;sortKeys&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 서명을 갖지만 콜렉션을 반대 순서로 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="345c075118a537d69d258eba7743c22572cd9461" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-unique&quot;&gt;&lt;code&gt;unique&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;#method-unique&quot;&gt; &lt;code&gt;unique&lt;/code&gt; &lt;/a&gt; 방법 과 동일한 서명을 갖습니다 . 그러나 모든 값은 &quot;엄격한&quot;비교를 사용하여 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="ace3aa553b0b55fe3069de24f139a0faca58a0b9" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-where&quot;&gt;&lt;code&gt;where&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#method-where&quot;&gt; &lt;code&gt;where&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 서명을 갖습니다 . 그러나 모든 값은 &quot;엄격한&quot;비교를 사용하여 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="ebc30d5ce54bec8362f0d5f58f619a036c016639" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-wherein&quot;&gt;&lt;code&gt;whereIn&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#method-wherein&quot;&gt; &lt;code&gt;whereIn&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 서명을 갖습니다 . 그러나 모든 값은 &quot;엄격한&quot;비교를 사용하여 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="895ad2b89b5447f1bba9fd1b0c500f32657aabda" translate="yes" xml:space="preserve">
          <source>This method has the same signature as the &lt;a href=&quot;#method-wherenotin&quot;&gt;&lt;code&gt;whereNotIn&lt;/code&gt;&lt;/a&gt; method; however, all values are compared using &quot;strict&quot; comparisons.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#method-wherenotin&quot;&gt; &lt;code&gt;whereNotIn&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 서명을 갖습니다 . 그러나 모든 값은 &quot;엄격한&quot;비교를 사용하여 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="4bc69f2e4baba01cd2f99618c0d480b5e42e25d0" translate="yes" xml:space="preserve">
          <source>This method interacts with jQuery. If jQuery is not available on the page, Dusk will automatically inject it into the page so it is available for the test's duration.</source>
          <target state="translated">이 메소드는 jQuery와 상호 작용합니다. 페이지에서 jQuery를 사용할 수없는 경우 Dusk는 자동으로 페이지에 삽입하여 테스트 기간 동안 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ece61a641fe6b4632db3697e236185f29590eb3e" translate="yes" xml:space="preserve">
          <source>This method is especially useful in &lt;a href=&quot;views&quot;&gt;views&lt;/a&gt; when working with a grid system such as &lt;a href=&quot;https://getbootstrap.com/css/#grid&quot;&gt;Bootstrap&lt;/a&gt;. Imagine you have a collection of &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; models you want to display in a grid:</source>
          <target state="translated">이 방법은 특히 유용 &lt;a href=&quot;views&quot;&gt;뷰&lt;/a&gt; 같은 그리드 시스템과 함께 작동 할 때 &lt;a href=&quot;https://getbootstrap.com/css/#grid&quot;&gt;부트 스트랩&lt;/a&gt; . 그리드에 표시하려는 &lt;a href=&quot;eloquent&quot;&gt;Eloquent&lt;/a&gt; 모델 모음이 있다고 가정하십시오 .</target>
        </trans-unit>
        <trans-unit id="0c495dc2bcdd5f864c3fcb57106509ef9e4f3b5b" translate="yes" xml:space="preserve">
          <source>This method is used for all request verbs (GET, POST, PUT, and DELETE)</source>
          <target state="translated">이 메소드는 모든 요청 동사 (GET, POST, PUT 및 DELETE)에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="845e64260c91a9ee49e1c3a107b3048b623d18da" translate="yes" xml:space="preserve">
          <source>This method only asks for confirmation in production.</source>
          <target state="translated">이 방법은 생산 확인 만 요구합니다.</target>
        </trans-unit>
        <trans-unit id="f66fc2b4a9ceecc33ca886b8cf01f6ef4580a8c1" translate="yes" xml:space="preserve">
          <source>This method only merges the first level of the configuration array. If your users partially define a multi-dimensional configuration array, the missing options will not be merged.</source>
          <target state="translated">이 방법은 구성 배열의 첫 번째 수준 만 병합합니다. 사용자가 다차원 구성 배열을 부분적으로 정의하면 누락 된 옵션이 병합되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2c5abb963129485669c93a34535df47207f24f00" translate="yes" xml:space="preserve">
          <source>This method protects developers from running forceDelete when trait is missing.</source>
          <target state="translated">이 방법은 특성이없는 경우 개발자가 forceDelete를 실행하지 못하도록합니다.</target>
        </trans-unit>
        <trans-unit id="50e0c18702f8f8bd9fc8b98cae8d464e3a6b7d96" translate="yes" xml:space="preserve">
          <source>This method will automatically take care of pushing a job onto the queue so the message is sent in the background. Of course, you will need to &lt;a href=&quot;queues&quot;&gt;configure your queues&lt;/a&gt; before using this feature.</source>
          <target state="translated">이 방법은 자동으로 작업을 대기열로 푸시하여 메시지가 백그라운드로 전송되도록합니다. 물론 이 기능을 사용하기 전에 &lt;a href=&quot;queues&quot;&gt;대기열&lt;/a&gt; 을 구성해야 합니다.</target>
        </trans-unit>
        <trans-unit id="ce868ef0515637d9c9679f9cdbe395316b925290" translate="yes" xml:space="preserve">
          <source>This method will set the trial period ending date on the subscription record within the database, as well as instruct Stripe / Braintree to not begin billing the customer until after this date.</source>
          <target state="translated">이 방법을 사용하면 데이터베이스 내 구독 레코드의 평가판 기간 종료 날짜를 설정하고이 날짜 이후까지 고객에게 청구를 시작하지 않도록 Stripe / Braintree에 지시합니다.</target>
        </trans-unit>
        <trans-unit id="af9313f4ae8b779b619ece9671a08eb3a7d54d42" translate="yes" xml:space="preserve">
          <source>This option is particularly useful for legacy projects where you don't require Webpack compilation for your JavaScript.</source>
          <target state="translated">이 옵션은 JavaScript 용 웹팩 컴파일이 필요없는 레거시 프로젝트에 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7f74c496aa99b9ddac41234790217ccd880b66dc" translate="yes" xml:space="preserve">
          <source>This route creates new personal access tokens. It requires two pieces of data: the token's &lt;code&gt;name&lt;/code&gt; and the &lt;code&gt;scopes&lt;/code&gt; that should be assigned to the token:</source>
          <target state="translated">이 경로는 새로운 개인용 액세스 토큰을 만듭니다. 토큰 &lt;code&gt;name&lt;/code&gt; 과 토큰에 할당해야하는 &lt;code&gt;scopes&lt;/code&gt; 의 두 가지 데이터가 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="faefcfb73caacdb47ac8d1c66ba3faca0dae2450" translate="yes" xml:space="preserve">
          <source>This route is used to create new clients. It requires two pieces of data: the client's &lt;code&gt;name&lt;/code&gt; and a &lt;code&gt;redirect&lt;/code&gt; URL. The &lt;code&gt;redirect&lt;/code&gt; URL is where the user will be redirected after approving or denying a request for authorization.</source>
          <target state="translated">이 경로는 새 클라이언트를 만드는 데 사용됩니다. 클라이언트 &lt;code&gt;name&lt;/code&gt; 과 &lt;code&gt;redirect&lt;/code&gt; URL 이라는 두 가지 데이터가 필요합니다 . &lt;code&gt;redirect&lt;/code&gt; URL은 사용자가 승인 또는 허가에 대한 요청을 거부 한 후 리디렉션됩니다 곳입니다.</target>
        </trans-unit>
        <trans-unit id="93f37d01f9fec2dff79671cd224fd0cefb6f2d21" translate="yes" xml:space="preserve">
          <source>This route is used to delete clients:</source>
          <target state="translated">이 경로는 클라이언트를 삭제하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9b984230f1bf503efe2a6bcf7be796bad3123716" translate="yes" xml:space="preserve">
          <source>This route is used to update clients. It requires two pieces of data: the client's &lt;code&gt;name&lt;/code&gt; and a &lt;code&gt;redirect&lt;/code&gt; URL. The &lt;code&gt;redirect&lt;/code&gt; URL is where the user will be redirected after approving or denying a request for authorization. The route will return the updated client instance:</source>
          <target state="translated">이 경로는 클라이언트를 업데이트하는 데 사용됩니다. 클라이언트 &lt;code&gt;name&lt;/code&gt; 과 &lt;code&gt;redirect&lt;/code&gt; URL 이라는 두 가지 데이터가 필요합니다 . &lt;code&gt;redirect&lt;/code&gt; URL은 사용자가 승인 또는 허가에 대한 요청을 거부 한 후 리디렉션됩니다 곳입니다. 경로는 업데이트 된 클라이언트 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f3728d6210d969608be203aa88862ae05335c710" translate="yes" xml:space="preserve">
          <source>This route may be used to delete personal access tokens:</source>
          <target state="translated">이 경로는 개인 액세스 토큰을 삭제하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7072d20b9450b9cbc74f4c5bc52c2ddce1a6e6cd" translate="yes" xml:space="preserve">
          <source>This route returns all of the &lt;a href=&quot;#token-scopes&quot;&gt;scopes&lt;/a&gt; defined for your application. You may use this route to list the scopes a user may assign to a personal access token:</source>
          <target state="translated">이 경로는 응용 프로그램에 대해 정의 된 모든 &lt;a href=&quot;#token-scopes&quot;&gt;범위를&lt;/a&gt; 반환합니다 . 이 경로를 사용하여 사용자가 개인 액세스 토큰에 할당 할 수있는 범위를 나열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64490007fda2fb38f740f72a07bc298db2f6a7d5" translate="yes" xml:space="preserve">
          <source>This route returns all of the clients for the authenticated user. This is primarily useful for listing all of the user's clients so that they may edit or delete them:</source>
          <target state="translated">이 경로는 인증 된 사용자의 모든 클라이언트를 반환합니다. 이것은 주로 모든 사용자의 클라이언트를 나열하거나 편집 할 수 있도록 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d84a8473857720f14e29821baa13eaf466a2afa6" translate="yes" xml:space="preserve">
          <source>This route returns all of the personal access tokens that the authenticated user has created. This is primarily useful for listing all of the user's tokens so that they may edit or delete them:</source>
          <target state="translated">이 경로는 인증 된 사용자가 만든 모든 개인 액세스 토큰을 반환합니다. 이는 주로 모든 사용자 토큰을 나열하여 편집하거나 삭제할 수 있도록하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="941bbafd793b5297ecf3d481e402e2a10c822eac" translate="yes" xml:space="preserve">
          <source>This service provider only defines a &lt;code&gt;register&lt;/code&gt; method, and uses that method to define an implementation of &lt;code&gt;Riak\Connection&lt;/code&gt; in the service container. If you don't understand how the service container works, check out &lt;a href=&quot;container&quot;&gt;its documentation&lt;/a&gt;.</source>
          <target state="translated">이 서비스 공급자는 &lt;code&gt;register&lt;/code&gt; 방법 만 정의 &lt;code&gt;Riak\Connection&lt;/code&gt; 방법을 사용 하여 서비스 컨테이너에서 Riak \ Connection 구현을 정의합니다 . 서비스 컨테이너의 작동 방식을 이해하지 못하는 경우 &lt;a href=&quot;container&quot;&gt;해당 문서를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="a448f422797405b6f5867321cec7436e5ea04ab9" translate="yes" xml:space="preserve">
          <source>This single command will remove the Vue scaffolding and replace it with React scaffolding, including an example component.</source>
          <target state="translated">이 단일 명령은 Vue 스캐 폴딩을 제거하고 컴포넌트 예를 포함하여 React 스캐 폴딩으로 대체합니다.</target>
        </trans-unit>
        <trans-unit id="323c1aaa34fae011bd2eb28a8bd8f01712af0f26" translate="yes" xml:space="preserve">
          <source>This single route declaration creates multiple routes to handle a variety of actions on the resource. The generated controller will already have methods stubbed for each of these actions, including notes informing you of the HTTP verbs and URIs they handle.</source>
          <target state="translated">이 단일 경로 선언은 리소스에 대한 다양한 작업을 처리하기 위해 여러 경로를 만듭니다. 생성 된 컨트롤러에는 처리하는 HTTP 동사 및 URI를 알려주는 메모를 포함하여 이러한 각 조치에 대해 스텁 된 메소드가 이미 있습니다.</target>
        </trans-unit>
        <trans-unit id="888c89bf3d2b560e251249db6fca8c336eb28819" translate="yes" xml:space="preserve">
          <source>This statement tells the container that it should inject the &lt;code&gt;RedisEventPusher&lt;/code&gt; when a class needs an implementation of &lt;code&gt;EventPusher&lt;/code&gt;. Now we can type-hint the &lt;code&gt;EventPusher&lt;/code&gt; interface in a constructor, or any other location where dependencies are injected by the service container:</source>
          <target state="translated">이 문장은 클래스에 &lt;code&gt;EventPusher&lt;/code&gt; 구현이 필요할 때 컨테이너에 &lt;code&gt;RedisEventPusher&lt;/code&gt; 를 주입해야한다고 지시합니다 . 이제 생성자 또는 서비스 컨테이너가 의존성을 주입하는 다른 위치에 &lt;code&gt;EventPusher&lt;/code&gt; 인터페이스를 타이핑 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ede46c8983c76aff69d19d4255e927f562a6d5ff" translate="yes" xml:space="preserve">
          <source>This table provides a quick reference to all of the Laravel contracts and their equivalent facades:</source>
          <target state="translated">이 표는 모든 라 라벨 계약 및 이에 상응하는 정면에 대한 빠른 참조를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7d49fdcb2be752536b073e37f3d371601c5bd08b" translate="yes" xml:space="preserve">
          <source>This test can be used to test the login screen generated by the &lt;code&gt;make:auth&lt;/code&gt; Artisan command.</source>
          <target state="translated">이 테스트는 &lt;code&gt;make:auth&lt;/code&gt; Artisan 명령으로 생성 된 로그인 화면을 테스트하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="81e14ad267234094f56871810d9af02e61cd24ee" translate="yes" xml:space="preserve">
          <source>This trait is utilized by the default &lt;code&gt;App\User&lt;/code&gt; model and contains one method that may be used to send notifications: &lt;code&gt;notify&lt;/code&gt;. The &lt;code&gt;notify&lt;/code&gt; method expects to receive a notification instance:</source>
          <target state="translated">이 특성은 기본 &lt;code&gt;App\User&lt;/code&gt; 모델에서 사용되며 알림을 보내는 데 사용할 수있는 한 가지 방법이 있습니다 : &lt;code&gt;notify&lt;/code&gt; . 는 &lt;code&gt;notify&lt;/code&gt; 알림 인스턴스를받을 방법이 기대를 :</target>
        </trans-unit>
        <trans-unit id="9d08c03725a8c04b48e266e756fa55f442041709" translate="yes" xml:space="preserve">
          <source>This validation rule implies the attribute is &quot;required&quot;.</source>
          <target state="translated">이 유효성 검사 규칙은 특성이 &quot;필수&quot;임을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="09e1356d9f303cc2587bf4a5dbae44d0efa9bbea" translate="yes" xml:space="preserve">
          <source>This will give you an instance of the default Redis server. You may also pass the connection or cluster name to the &lt;code&gt;connection&lt;/code&gt; method to get a specific server or cluster as defined in your Redis configuration:</source>
          <target state="translated">기본 Redis 서버의 인스턴스가 제공됩니다. Redis 구성에 정의 된대로 특정 서버 또는 클러스터를 얻기 위해 연결 또는 클러스터 이름을 &lt;code&gt;connection&lt;/code&gt; 방법으로 전달할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="80aa677152aa6202197a36527101a8e2a2cbadc2" translate="yes" xml:space="preserve">
          <source>This will likely be because the job previously exceeded a timeout.</source>
          <target state="translated">작업이 이전에 시간 초과를 초과했기 때문일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d94d697d47d3f6a1649d50872e28e1ddfc59c7f" translate="yes" xml:space="preserve">
          <source>This will prevent errors in daemon queue situations.</source>
          <target state="translated">이렇게하면 데몬 큐 상황에서 오류가 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dffddf2f855ed7cbfa3f356855f60b8fd27a10d7" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;posts&lt;/code&gt; does not contain a &lt;code&gt;country_id&lt;/code&gt; column, the &lt;code&gt;hasManyThrough&lt;/code&gt; relation provides access to a country's posts via &lt;code&gt;$country-&amp;gt;posts&lt;/code&gt;. To perform this query, Eloquent inspects the &lt;code&gt;country_id&lt;/code&gt; on the intermediate &lt;code&gt;users&lt;/code&gt; table. After finding the matching user IDs, they are used to query the &lt;code&gt;posts&lt;/code&gt; table.</source>
          <target state="translated">&lt;code&gt;posts&lt;/code&gt; 에 &lt;code&gt;country_id&lt;/code&gt; 열이 포함되어 있지는 않지만 &lt;code&gt;hasManyThrough&lt;/code&gt; 관계는 &lt;code&gt;$country-&amp;gt;posts&lt;/code&gt; 를 통해 국가의 게시물에 대한 액세스를 제공합니다 . 이 쿼리를 수행하기 위해 Eloquent 는 중간 &lt;code&gt;users&lt;/code&gt; 테이블 에서 &lt;code&gt;country_id&lt;/code&gt; 를 검사 합니다. 일치하는 사용자 ID를 찾은 후 &lt;code&gt;posts&lt;/code&gt; 테이블 을 쿼리하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="35a840e4613e1b8d30d5f33e57592df1865d0387" translate="yes" xml:space="preserve">
          <source>Though disabled by default, source maps may be activated by calling the &lt;code&gt;mix.sourceMaps()&lt;/code&gt; method in your &lt;code&gt;webpack.mix.js&lt;/code&gt; file. Though it comes with a compile/performance cost, this will provide extra debugging information to your browser's developer tools when using compiled assets.</source>
          <target state="translated">기본적으로 비활성화되어 있지만 &lt;code&gt;webpack.mix.js&lt;/code&gt; 파일 에서 &lt;code&gt;mix.sourceMaps()&lt;/code&gt; 메소드를 호출하여 소스 맵을 활성화 할 수 있습니다 . 컴파일 / 성능 비용이 함께 제공되지만 컴파일 된 자산을 사용할 때 브라우저 개발자 도구에 추가 디버깅 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4c41b959c498347341317d938d26abe7ecbdc549" translate="yes" xml:space="preserve">
          <source>Throttle a callback for a maximum number of executions over a given duration.</source>
          <target state="translated">주어진 기간 동안 최대 실행 횟수 동안 콜백을 조절합니다.</target>
        </trans-unit>
        <trans-unit id="76acdde12af8bcae84914197d5f22e76aa7a0f8f" translate="yes" xml:space="preserve">
          <source>ThrottleRequests</source>
          <target state="translated">ThrottleRequests</target>
        </trans-unit>
        <trans-unit id="f616160a633337cbd19460f2042edbb49746d094" translate="yes" xml:space="preserve">
          <source>ThrottleRequests (Routing\Middleware)</source>
          <target state="translated">ThrottleRequests (Routing \ Middleware)</target>
        </trans-unit>
        <trans-unit id="41140a570c8ea4a67d22b31444f319e479cee7a0" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::__construct()</source>
          <target state="translated">ThrottleRequests::__construct()</target>
        </trans-unit>
        <trans-unit id="d2ea5dffca0d7dc390b2ba09f53e8ed1b6f37eb1" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::addHeaders()</source>
          <target state="translated">ThrottleRequests::addHeaders()</target>
        </trans-unit>
        <trans-unit id="92f562a3120490d6ebcbad3688b991e531d463ac" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::buildException()</source>
          <target state="translated">ThrottleRequests::buildException()</target>
        </trans-unit>
        <trans-unit id="e0ea9eb291663c7a991681941f7fa8c7a29f5471" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::calculateRemainingAttempts()</source>
          <target state="translated">ThrottleRequests::calculateRemainingAttempts()</target>
        </trans-unit>
        <trans-unit id="4a2ddac04f830ca177ee5cd1701a8065d252d529" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::getHeaders()</source>
          <target state="translated">ThrottleRequests::getHeaders()</target>
        </trans-unit>
        <trans-unit id="9706589098c4f01c2e641ee9318fcc9f5e406abf" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::getTimeUntilNextRetry()</source>
          <target state="translated">ThrottleRequests::getTimeUntilNextRetry()</target>
        </trans-unit>
        <trans-unit id="c90e5ab43f2d080509bb3584659362943dd05c75" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::handle()</source>
          <target state="translated">ThrottleRequests::handle()</target>
        </trans-unit>
        <trans-unit id="1812bd1714ef7cc25ea2654bd64a7d9befdccf44" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::resolveMaxAttempts()</source>
          <target state="translated">ThrottleRequests::resolveMaxAttempts()</target>
        </trans-unit>
        <trans-unit id="5607ffbf70d208488bfb3d57a3d53ab7c2edd99e" translate="yes" xml:space="preserve">
          <source>ThrottleRequests::resolveRequestSignature()</source>
          <target state="translated">ThrottleRequests::resolveRequestSignature()</target>
        </trans-unit>
        <trans-unit id="f45ecaaf6aa70c35f23a5c9000c3707fb5978c04" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsException</source>
          <target state="translated">ThrottleRequestsException</target>
        </trans-unit>
        <trans-unit id="026e4e7a81d60717429d648c0101fc27c1248652" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsException (Http\Exceptions)</source>
          <target state="translated">ThrottleRequestsException (Http \ Exceptions)</target>
        </trans-unit>
        <trans-unit id="f3bc7caaa76536474d0dfefef999450de1e83da8" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsException::__construct()</source>
          <target state="translated">ThrottleRequestsException::__construct()</target>
        </trans-unit>
        <trans-unit id="2d3b4df5ced5519de91850c430e6857094a6c021" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis</source>
          <target state="translated">ThrottleRequestsWithRedis</target>
        </trans-unit>
        <trans-unit id="118b9685f1ac44e59b9294fcb5e4d0612efdd5d7" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis (Routing\Middleware)</source>
          <target state="translated">ThrottleRequestsWithRedis (Routing \ Middleware)</target>
        </trans-unit>
        <trans-unit id="d07e49fee75631d1b6da9143e95cbb6fd3ccd5b7" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::__construct()</source>
          <target state="translated">ThrottleRequestsWithRedis::__construct()</target>
        </trans-unit>
        <trans-unit id="fe2d82353422a137a9b1022693166898be23737d" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::calculateRemainingAttempts()</source>
          <target state="translated">ThrottleRequestsWithRedis::calculateRemainingAttempts()</target>
        </trans-unit>
        <trans-unit id="1dacf6d923c06960a722081ceb507bd905ce852b" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::getTimeUntilNextRetry()</source>
          <target state="translated">ThrottleRequestsWithRedis::getTimeUntilNextRetry()</target>
        </trans-unit>
        <trans-unit id="1408fbb1b635315a8d66b3df139aca99f98283c8" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::handle()</source>
          <target state="translated">ThrottleRequestsWithRedis::handle()</target>
        </trans-unit>
        <trans-unit id="fde3553d5a6afb19488b42f8c36c953d96daee16" translate="yes" xml:space="preserve">
          <source>ThrottleRequestsWithRedis::tooManyAttempts()</source>
          <target state="translated">ThrottleRequestsWithRedis::tooManyAttempts()</target>
        </trans-unit>
        <trans-unit id="f56f467e70eb907e626934d36ab338370d8124b2" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins</source>
          <target state="translated">ThrottlesLogins</target>
        </trans-unit>
        <trans-unit id="f61763828aea717b53856f4c1f255f21a62b794d" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins (Foundation\Auth)</source>
          <target state="translated">스로틀 로그인 (Foundation \ Auth)</target>
        </trans-unit>
        <trans-unit id="51b7d4973b269c2d30d76c8d57d7f0c5ff6c7807" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::clearLoginAttempts()</source>
          <target state="translated">ThrottlesLogins::clearLoginAttempts()</target>
        </trans-unit>
        <trans-unit id="730575ab7a25acec7edad3b74f1ae766d89565d3" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::decayMinutes()</source>
          <target state="translated">ThrottlesLogins::decayMinutes()</target>
        </trans-unit>
        <trans-unit id="feab3084cff7eca1a6beca648158f23b5ab96b53" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::fireLockoutEvent()</source>
          <target state="translated">ThrottlesLogins::fireLockoutEvent()</target>
        </trans-unit>
        <trans-unit id="6ce9524a2fc792888e38d1dd38da31866cc83308" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::hasTooManyLoginAttempts()</source>
          <target state="translated">ThrottlesLogins::hasTooManyLoginAttempts()</target>
        </trans-unit>
        <trans-unit id="94a1090d99d5baaf4f7811f3833fc68bf1da73c7" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::incrementLoginAttempts()</source>
          <target state="translated">ThrottlesLogins::incrementLoginAttempts()</target>
        </trans-unit>
        <trans-unit id="cb4e59b867991b940d0f92cbf5010d761b6fc770" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::limiter()</source>
          <target state="translated">ThrottlesLogins::limiter()</target>
        </trans-unit>
        <trans-unit id="d4dae703f5fad666353be343b5404681237b840d" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::maxAttempts()</source>
          <target state="translated">ThrottlesLogins::maxAttempts()</target>
        </trans-unit>
        <trans-unit id="2d533f286e0081ac3e92f17257b97f36f0d0f7cf" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::sendLockoutResponse()</source>
          <target state="translated">ThrottlesLogins::sendLockoutResponse()</target>
        </trans-unit>
        <trans-unit id="669aec4fda568056bc4fe05d901b3f2494cfc945" translate="yes" xml:space="preserve">
          <source>ThrottlesLogins::throttleKey()</source>
          <target state="translated">ThrottlesLogins::throttleKey()</target>
        </trans-unit>
        <trans-unit id="40cb586c144e3fec6f7fae2ec8174c2c0bf42ac8" translate="yes" xml:space="preserve">
          <source>Throughout the Laravel documentation, many of the examples will use facades to demonstrate various features of the framework.</source>
          <target state="translated">라 라벨 문서 전체에서, 많은 예제는 파사드를 사용하여 프레임 워크의 다양한 기능을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ec59aa675d34e1ceb86b8aa1cf4849f340395c20" translate="yes" xml:space="preserve">
          <source>Throw a bad method call exception for the given method.</source>
          <target state="translated">주어진 메소드에 대해 잘못된 메소드 호출 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="25010b383a119206e9eae5b1d911d488b7e9dc97" translate="yes" xml:space="preserve">
          <source>Throw a method not allowed HTTP exception.</source>
          <target state="translated">HTTP 예외를 허용하지 않는 메소드를 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="553949a80aac37e0af8a8a707fc147468587ad06" translate="yes" xml:space="preserve">
          <source>Throw an HttpException with the given data.</source>
          <target state="translated">주어진 데이터로 HttpException을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="89f750f1fb24776f394c764e13938122d08235f6" translate="yes" xml:space="preserve">
          <source>Throw an exception for an unresolvable primitive.</source>
          <target state="translated">해결할 수없는 프리미티브에 대한 예외를 처리하십시오.</target>
        </trans-unit>
        <trans-unit id="9808cf2e27f60d4a45fdadaba8485e55745c21b1" translate="yes" xml:space="preserve">
          <source>Throw an exception if the query doesn't have an orderBy clause.</source>
          <target state="translated">쿼리에 orderBy 절이 없으면 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="14ca209e5c20fc387bad3a95f33fdc97d914d85a" translate="yes" xml:space="preserve">
          <source>Throw an exception that the concrete is not instantiable.</source>
          <target state="translated">콘크리트를 인스턴스화 할 수 없다는 예외를 던지십시오.</target>
        </trans-unit>
        <trans-unit id="8abf11297f412ee4fff55514bb434f634e293565" translate="yes" xml:space="preserve">
          <source>Throwable</source>
          <target state="translated">Throwable</target>
        </trans-unit>
        <trans-unit id="16a23412d0d2d6862fc6c9091c7546c8441ee1f2" translate="yes" xml:space="preserve">
          <source>Throws an unauthorized exception.</source>
          <target state="translated">무단 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5e6e803af098086761b526b070d4b16f1ceb9420" translate="yes" xml:space="preserve">
          <source>Throws the response in a HttpResponseException instance.</source>
          <target state="translated">HttpResponseException 인스턴스에서 응답을 던집니다.</target>
        </trans-unit>
        <trans-unit id="a72b6d93881fddd0bce9b4508e6dcc9da26e4838" translate="yes" xml:space="preserve">
          <source>Time Based Attempts</source>
          <target state="translated">시간 기반 시도</target>
        </trans-unit>
        <trans-unit id="d4c45de0fe64ac43c72a798c67faaadadfaa1b90" translate="yes" xml:space="preserve">
          <source>Timeout</source>
          <target state="translated">Timeout</target>
        </trans-unit>
        <trans-unit id="c04ed1238a14de2b02d7fd14a7e9605bb1b10b96" translate="yes" xml:space="preserve">
          <source>Timestamps</source>
          <target state="translated">Timestamps</target>
        </trans-unit>
        <trans-unit id="791214dda21a45673e6a00a407416e403372c00e" translate="yes" xml:space="preserve">
          <source>Timezones</source>
          <target state="translated">Timezones</target>
        </trans-unit>
        <trans-unit id="656428c6aa8b5394307f88bf7b20104a86fe51c1" translate="yes" xml:space="preserve">
          <source>To &quot;check&quot; a checkbox field, you may use the &lt;code&gt;check&lt;/code&gt; method. Like many other input related methods, a full CSS selector is not required. If an exact selector match can't be found, Dusk will search for a checkbox with a matching &lt;code&gt;name&lt;/code&gt; attribute:</source>
          <target state="translated">확인란 필드를 &quot;확인&quot;하려면 &lt;code&gt;check&lt;/code&gt; 방법을 사용할 수 있습니다 . 다른 많은 입력 관련 방법과 마찬가지로 전체 CSS 선택기가 필요하지 않습니다. 정확한 선택기 일치를 찾을 수없는 경우 Dusk는 &lt;code&gt;name&lt;/code&gt; 속성 이 일치하는 확인란을 검색 합니다.</target>
        </trans-unit>
        <trans-unit id="94f6880a88183c5573661364fd7eaee097a6fc5c" translate="yes" xml:space="preserve">
          <source>To &quot;select&quot; a radio button option, you may use the &lt;code&gt;radio&lt;/code&gt; method. Like many other input related methods, a full CSS selector is not required. If an exact selector match can't be found, Dusk will search for a radio with matching &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;value&lt;/code&gt; attributes:</source>
          <target state="translated">라디오 버튼 옵션을 &quot;선택&quot;하기 위해 &lt;code&gt;radio&lt;/code&gt; 방법을 사용할 수 있습니다 . 다른 많은 입력 관련 방법과 마찬가지로 전체 CSS 선택기가 필요하지 않습니다. 정확한 선택기 일치를 찾을 수없는 경우 Dusk는 &lt;code&gt;name&lt;/code&gt; 및 &lt;code&gt;value&lt;/code&gt; 속성 이 일치하는 라디오를 검색 합니다.</target>
        </trans-unit>
        <trans-unit id="6578fd04c01214fc32eaa159f087a800c50b19e9" translate="yes" xml:space="preserve">
          <source>To &quot;unsecure&quot; a site and revert back to serving its traffic over plain HTTP, use the &lt;code&gt;unsecure&lt;/code&gt; command. Like the &lt;code&gt;secure&lt;/code&gt; command, this command accepts the host name that you wish to unsecure:</source>
          <target state="translated">사이트를 &quot;비보안&quot;하고 일반 HTTP를 통한 트래픽 제공으로 되돌리려면 &lt;code&gt;unsecure&lt;/code&gt; 명령을 사용하십시오 . &lt;code&gt;secure&lt;/code&gt; 명령 과 마찬가지로이 명령은 안전하지 않은 호스트 이름을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="97798142c88085858c10b19aa386f1e1b0eabc0b" translate="yes" xml:space="preserve">
          <source>To access your notifications from your JavaScript client, you should define a notification controller for your application which returns the notifications for a notifiable entity, such as the current user. You may then make an HTTP request to that controller's URI from your JavaScript client.</source>
          <target state="translated">JavaScript 클라이언트에서 알림에 액세스하려면 현재 사용자와 같이 통지 가능한 엔티티에 대한 알림을 리턴하는 애플리케이션의 알림 컨트롤러를 정의해야합니다. 그런 다음 JavaScript 클라이언트에서 해당 컨트롤러의 URI에 HTTP 요청을 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3da5298222350e85a51b24499f97e373d28a03e4" translate="yes" xml:space="preserve">
          <source>To accomplish this, the &lt;code&gt;Illuminate\Mail\Mailable&lt;/code&gt; class offers a &lt;code&gt;locale&lt;/code&gt; method to set the desired language. The application will change into this locale when the mailable is being formatted and then revert back to the previous locale when formatting is complete:</source>
          <target state="translated">이를 위해 &lt;code&gt;Illuminate\Mail\Mailable&lt;/code&gt; 클래스는 원하는 언어를 설정 하는 &lt;code&gt;locale&lt;/code&gt; 메소드를 제공합니다 . 메일 러블을 포맷 할 때 응용 프로그램이이 로캘로 변경된 다음 포맷이 완료되면 이전 로캘로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="2f3a1648875a8c8d735796c8f8b8c5b9c3eafaad" translate="yes" xml:space="preserve">
          <source>To accomplish this, the &lt;code&gt;Illuminate\Notifications\Notification&lt;/code&gt; class now offers a &lt;code&gt;locale&lt;/code&gt; method to set the desired language. The application will change into this locale when the notification is being formatted and then revert back to the previous locale when formatting is complete:</source>
          <target state="translated">이를 위해 &lt;code&gt;Illuminate\Notifications\Notification&lt;/code&gt; 클래스는 이제 원하는 언어를 설정 하는 &lt;code&gt;locale&lt;/code&gt; 메소드를 제공합니다 . 알림 형식이 지정되면 응용 프로그램이이 로캘로 변경된 다음 서식이 완료되면 이전 로캘로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="b4d7de6fd697cde275fd7490bd9f4303d78636a1" translate="yes" xml:space="preserve">
          <source>To accomplish this, the &lt;code&gt;Illuminate\Notifications\Notification&lt;/code&gt; class offers a &lt;code&gt;locale&lt;/code&gt; method to set the desired language. The application will change into this locale when the notification is being formatted and then revert back to the previous locale when formatting is complete:</source>
          <target state="translated">이를 위해 &lt;code&gt;Illuminate\Notifications\Notification&lt;/code&gt; 클래스는 원하는 언어를 설정 하는 &lt;code&gt;locale&lt;/code&gt; 메소드를 제공합니다 . 알림 형식이 지정되면 응용 프로그램이이 로캘로 변경된 다음 서식이 완료되면 이전 로캘로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="ed9beddc50d32c93c766ce8fc447b633a222d026" translate="yes" xml:space="preserve">
          <source>To add attachments to an email, use the &lt;code&gt;attach&lt;/code&gt; method within the mailable class' &lt;code&gt;build&lt;/code&gt; method. The &lt;code&gt;attach&lt;/code&gt; method accepts the full path to the file as its first argument:</source>
          <target state="translated">전자 메일에 첨부 파일을 추가하려면 mailable 클래스의 &lt;code&gt;build&lt;/code&gt; 메소드 내에서 &lt;code&gt;attach&lt;/code&gt; 메소드를 사용하십시오 . 는 &lt;code&gt;attach&lt;/code&gt; 방법은 첫 번째 인수로 파일의 전체 경로를 허용합니다</target>
        </trans-unit>
        <trans-unit id="e290d86f324f73e9b35bbb4d6fd573949739a3f7" translate="yes" xml:space="preserve">
          <source>To append text to a field without clearing its content, you may use the &lt;code&gt;append&lt;/code&gt; method:</source>
          <target state="translated">내용을 지우지 않고 필드에 텍스트를 추가하려면 사용할 수 있습니다 &lt;code&gt;append&lt;/code&gt; 방법 :</target>
        </trans-unit>
        <trans-unit id="642d1755c83988cefb1048a5b2250cdd8e77384d" translate="yes" xml:space="preserve">
          <source>To assign a global scope to a model, you should override a given model's &lt;code&gt;boot&lt;/code&gt; method and use the &lt;code&gt;addGlobalScope&lt;/code&gt; method:</source>
          <target state="translated">모델에 전역 범위를 할당하려면 주어진 모델의 &lt;code&gt;boot&lt;/code&gt; 방법을 재정의 하고 &lt;code&gt;addGlobalScope&lt;/code&gt; 방법을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="adc3a915381fd9a9bdfad652556224e28fa76c5d" translate="yes" xml:space="preserve">
          <source>To assign a shortcut when defining an option, you may specify it before the option name and use a | delimiter to separate the shortcut from the full option name:</source>
          <target state="translated">옵션을 정의 할 때 단축키를 지정하려면 옵션 이름 앞에 단축키를 지정하고 | 전체 옵션 이름에서 바로 가기를 구분하는 구분 기호 :</target>
        </trans-unit>
        <trans-unit id="018ce81ebde7e612ef90ecec77bbcdd7f437d270" translate="yes" xml:space="preserve">
          <source>To assign middleware to all routes within a group, you may use the &lt;code&gt;middleware&lt;/code&gt; method before defining the group. Middleware are executed in the order they are listed in the array:</source>
          <target state="translated">그룹 내의 모든 경로에 미들웨어를 할당하려면 그룹 을 정의하기 전에 &lt;code&gt;middleware&lt;/code&gt; 방법을 사용할 수 있습니다 . 미들웨어는 배열에 나열된 순서대로 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="c449725d68d126d9e6a108bd4f1b3265fb7f414c" translate="yes" xml:space="preserve">
          <source>To assist you in building these types of applications, Laravel makes it easy to &quot;broadcast&quot; your &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt; over a WebSocket connection. Broadcasting your Laravel events allows you to share the same event names between your server-side code and your client-side JavaScript application.</source>
          <target state="translated">이러한 유형의 응용 프로그램을 구축하는 데 도움을주기 위해 Laravel을 사용 하면 WebSocket 연결을 통해 &lt;a href=&quot;events&quot;&gt;이벤트&lt;/a&gt; 를 &quot;브로드 캐스트&quot;할 수 있습니다 . Laravel 이벤트를 브로드 캐스트하면 서버 측 코드와 클라이언트 측 JavaScript 응용 프로그램간에 동일한 이벤트 이름을 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eed0e6aeed2737f67a652f8d654b9b3794efb68d" translate="yes" xml:space="preserve">
          <source>To authorize an action using gates, you should use the &lt;code&gt;allows&lt;/code&gt; or &lt;code&gt;denies&lt;/code&gt; methods. Note that you are not required to pass the currently authenticated user to these methods. Laravel will automatically take care of passing the user into the gate Closure:</source>
          <target state="translated">게이트를 사용하여 작업 권한을 부여하려면 사용해야 &lt;code&gt;allows&lt;/code&gt; 또는 &lt;code&gt;denies&lt;/code&gt; 방법. 현재 인증 된 사용자를 이러한 방법으로 전달할 필요는 없습니다. Laravel은 자동으로 사용자를 게이트 클로저로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="0689015a7b6df90ea58f4b3adb517a9d814723ff" translate="yes" xml:space="preserve">
          <source>To avoid JavaScript errors, be sure to load these files in the proper order:</source>
          <target state="translated">JavaScript 오류를 방지하려면 다음 파일을 올바른 순서로로드하십시오.</target>
        </trans-unit>
        <trans-unit id="a93fc5240b81e394f5e95c88315edc2667627593" translate="yes" xml:space="preserve">
          <source>To better understand when you may want to use the &lt;code&gt;toOthers&lt;/code&gt; method, let's imagine a task list application where a user may create a new task by entering a task name. To create a task, your application might make a request to a &lt;code&gt;/task&lt;/code&gt; end-point which broadcasts the task's creation and returns a JSON representation of the new task. When your JavaScript application receives the response from the end-point, it might directly insert the new task into its task list like so:</source>
          <target state="translated">&lt;code&gt;toOthers&lt;/code&gt; 메소드 를 사용하려는시기를 더 잘 이해하기 위해 사용자가 태스크 이름을 입력하여 새 태스크를 작성할 수있는 태스크 목록 애플리케이션을 상상해보십시오. 작업을 생성하기 위해 응용 프로그램은 &lt;code&gt;/task&lt;/code&gt; 엔드 포인트에 요청 하여 작업 생성을 브로드 캐스트하고 새 작업의 JSON 표현을 반환 할 수 있습니다. JavaScript 애플리케이션이 엔드 포인트에서 응답을 받으면 다음과 같이 새 태스크를 태스크 목록에 직접 삽입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50632dcd79f4e73b87365472ad938a8b37dc2baa" translate="yes" xml:space="preserve">
          <source>To broadcast client events, you may use Echo's &lt;code&gt;whisper&lt;/code&gt; method:</source>
          <target state="translated">클라이언트 이벤트를 브로드 캐스트하려면 Echo의 &lt;code&gt;whisper&lt;/code&gt; 방법을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="27d60647284f4a8bc8b3173375b8f4057737a46d" translate="yes" xml:space="preserve">
          <source>To cancel a subscription, call the &lt;code&gt;cancel&lt;/code&gt; method on the user's subscription:</source>
          <target state="translated">구독을 취소하려면 사용자의 구독 에서 &lt;code&gt;cancel&lt;/code&gt; 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d6a347b8ddc8138873e6d6c2ee411999feffd4b" translate="yes" xml:space="preserve">
          <source>To click a link, you may use the &lt;code&gt;clickLink&lt;/code&gt; method on the browser instance. The &lt;code&gt;clickLink&lt;/code&gt; method will click the link that has the given display text:</source>
          <target state="translated">링크를 클릭하기 위해 브라우저 인스턴스 에서 &lt;code&gt;clickLink&lt;/code&gt; 메소드를 사용할 수 있습니다 . &lt;code&gt;clickLink&lt;/code&gt; 의 방법은 주어진 디스플레이 텍스트가 링크를 클릭합니다 :</target>
        </trans-unit>
        <trans-unit id="9c1ea582af298fa254ddc8096f67ad108df83a09" translate="yes" xml:space="preserve">
          <source>To connect to your MySQL or PostgreSQL database from your host machine's database client, you should connect to &lt;code&gt;127.0.0.1&lt;/code&gt; and port &lt;code&gt;33060&lt;/code&gt; (MySQL) or &lt;code&gt;54320&lt;/code&gt; (PostgreSQL). The username and password for both databases is &lt;code&gt;homestead&lt;/code&gt; / &lt;code&gt;secret&lt;/code&gt;.</source>
          <target state="translated">호스트 시스템의 데이터베이스 클라이언트에서 MySQL 또는 PostgreSQL 데이터베이스에 연결하려면 &lt;code&gt;127.0.0.1&lt;/code&gt; 및 포트 &lt;code&gt;33060&lt;/code&gt; (MySQL) 또는 &lt;code&gt;54320&lt;/code&gt; (PostgreSQL)에 연결해야합니다 . 두 데이터베이스의 사용자 이름과 비밀번호는 &lt;code&gt;homestead&lt;/code&gt; / &lt;code&gt;secret&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0780f765ae74c760a8da467968a8781cd3b1c301" translate="yes" xml:space="preserve">
          <source>To convert a model and its loaded &lt;a href=&quot;eloquent-relationships&quot;&gt;relationships&lt;/a&gt; to an array, you should use the &lt;code&gt;toArray&lt;/code&gt; method. This method is recursive, so all attributes and all relations (including the relations of relations) will be converted to arrays:</source>
          <target state="translated">모델과로드 된 &lt;a href=&quot;eloquent-relationships&quot;&gt;관계&lt;/a&gt; 를 배열 로 변환하려면 &lt;code&gt;toArray&lt;/code&gt; 메소드를 사용해야합니다 . 이 메소드는 재귀 적이므로 모든 속성 및 모든 관계 (관계 관계 포함)가 배열로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="fd8281b1ce280c8c1d7f0bd5d7626429904416ea" translate="yes" xml:space="preserve">
          <source>To convert a model to JSON, you should use the &lt;code&gt;toJson&lt;/code&gt; method. Like &lt;code&gt;toArray&lt;/code&gt;, the &lt;code&gt;toJson&lt;/code&gt; method is recursive, so all attributes and relations will be converted to JSON. You may also specify JSON encoding options &lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt;supported by PHP&lt;/a&gt;:</source>
          <target state="translated">모델을 JSON으로 변환하려면 &lt;code&gt;toJson&lt;/code&gt; 메소드를 사용해야합니다 . 마찬가지로 &lt;code&gt;toArray&lt;/code&gt; 의 &lt;code&gt;toJson&lt;/code&gt; 의 모든 속성과 관계가 JSON으로 변환 할 수 있도록 방법은 재귀입니다. &lt;a href=&quot;http://php.net/manual/en/function.json-encode.php&quot;&gt;PHP가 지원하는&lt;/a&gt; JSON 인코딩 옵션을 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c276d4f58b07e55bc2eca27ccedf15f8818d830f" translate="yes" xml:space="preserve">
          <source>To create a factory, use the &lt;code&gt;make:factory&lt;/code&gt;&lt;a href=&quot;artisan&quot;&gt;Artisan command&lt;/a&gt;:</source>
          <target state="translated">팩토리를 만들려면 &lt;code&gt;make:factory&lt;/code&gt; &lt;a href=&quot;artisan&quot;&gt;Artisan 명령을&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e454cbabf938eb5a1a35f1cccbe08022c0303d66" translate="yes" xml:space="preserve">
          <source>To create a migration, use the &lt;code&gt;make:migration&lt;/code&gt;&lt;a href=&quot;artisan&quot;&gt;Artisan command&lt;/a&gt;:</source>
          <target state="translated">마이그레이션을 작성하려면 &lt;code&gt;make:migration&lt;/code&gt; &lt;a href=&quot;artisan&quot;&gt;Artisan 명령을&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b98ad379d32eff8129efa8aa080c203cd377fda" translate="yes" xml:space="preserve">
          <source>To create a new command, use the &lt;code&gt;make:command&lt;/code&gt; Artisan command. This command will create a new command class in the &lt;code&gt;app/Console/Commands&lt;/code&gt; directory. Don't worry if this directory does not exist in your application, since it will be created the first time you run the &lt;code&gt;make:command&lt;/code&gt; Artisan command. The generated command will include the default set of properties and methods that are present on all commands:</source>
          <target state="translated">새 명령을 작성하려면 &lt;code&gt;make:command&lt;/code&gt; Artisan 명령을 사용하십시오 . 이 명령은 &lt;code&gt;app/Console/Commands&lt;/code&gt; 디렉토리 에 새 명령 클래스를 작성합니다 . &lt;code&gt;make:command&lt;/code&gt; Artisan 명령을 처음 실행할 때 작성 되므로이 디렉토리가 응용 프로그램에 존재하지 않아도 걱정하지 마십시오 . 생성 된 명령에는 모든 명령에 존재하는 기본 특성 및 메소드 세트가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="27f9180a9f165de9178905be1082c2f8867a21de" translate="yes" xml:space="preserve">
          <source>To create a new database table, use the &lt;code&gt;create&lt;/code&gt; method on the &lt;code&gt;Schema&lt;/code&gt; facade. The &lt;code&gt;create&lt;/code&gt; method accepts two arguments. The first is the name of the table, while the second is a &lt;code&gt;Closure&lt;/code&gt; which receives a &lt;code&gt;Blueprint&lt;/code&gt; object that may be used to define the new table:</source>
          <target state="translated">새 데이터베이스 테이블을 작성하려면 &lt;code&gt;Schema&lt;/code&gt; 파사드 에서 &lt;code&gt;create&lt;/code&gt; 메소드를 사용하십시오 . &lt;code&gt;create&lt;/code&gt; 방법은 두 개의 인수를 사용할 수 있습니다. 첫 번째는 테이블의 이름이고 두 번째는 새 테이블을 정의하는 데 사용할 수 있는 &lt;code&gt;Blueprint&lt;/code&gt; 객체를 받는 &lt;code&gt;Closure&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="dd3405917a5907aa118a063f37845dd6bb347245" translate="yes" xml:space="preserve">
          <source>To create a new middleware, use the &lt;code&gt;make:middleware&lt;/code&gt; Artisan command:</source>
          <target state="translated">새 미들웨어를 작성하려면 &lt;code&gt;make:middleware&lt;/code&gt; Artisan 명령을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="46eb4e41a80a19b082150f2e05aea66132ebf059" translate="yes" xml:space="preserve">
          <source>To create a new record in the database, create a new model instance, set attributes on the model, then call the &lt;code&gt;save&lt;/code&gt; method:</source>
          <target state="translated">데이터베이스에서 새 레코드를 작성하려면 새 모델 인스턴스를 작성하고 모델에서 속성을 설정 한 후 &lt;code&gt;save&lt;/code&gt; 메소드 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="200221820a7a3bc86e704c6ed09e32fda100fb03" translate="yes" xml:space="preserve">
          <source>To create a new test case, use the &lt;code&gt;make:test&lt;/code&gt; Artisan command:</source>
          <target state="translated">새로운 테스트 케이스를 만들려면 &lt;code&gt;make:test&lt;/code&gt; Artisan 명령을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba01eb43778a2ec8e66967bcc2206ca77b374e4d" translate="yes" xml:space="preserve">
          <source>To create a resource collection, you should use the &lt;code&gt;--collection&lt;/code&gt; flag when creating the resource. Or, including the word &lt;code&gt;Collection&lt;/code&gt; in the resource name will indicate to Laravel that it should create a collection resource. Collection resources extend the &lt;code&gt;Illuminate\Http\Resources\Json\ResourceCollection&lt;/code&gt; class:</source>
          <target state="translated">자원 콜렉션을 작성하려면 자원을 작성할 때 &lt;code&gt;--collection&lt;/code&gt; 플래그를 사용해야합니다 . 또는 리소스 이름에 &lt;code&gt;Collection&lt;/code&gt; 이라는 단어를 포함하면 Laravel에 컬렉션 리소스를 만들어야 함을 나타냅니다. 컬렉션 리소스는 &lt;code&gt;Illuminate\Http\Resources\Json\ResourceCollection&lt;/code&gt; 클래스를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="4266e3d7358b3618595153450c5007305495db27" translate="yes" xml:space="preserve">
          <source>To create a subscription, first retrieve an instance of your billable model, which typically will be an instance of &lt;code&gt;App\User&lt;/code&gt;. Once you have retrieved the model instance, you may use the &lt;code&gt;newSubscription&lt;/code&gt; method to create the model's subscription:</source>
          <target state="translated">구독을 작성하려면 먼저 청구 가능 모델의 인스턴스 (일반적으로 &lt;code&gt;App\User&lt;/code&gt; 인스턴스)를 검색하십시오 . 모델 인스턴스를 검색 한 후 &lt;code&gt;newSubscription&lt;/code&gt; 메소드를 사용하여 모델의 구독을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="17bedd4172a6374fb3925828ca9b40af8d37610a" translate="yes" xml:space="preserve">
          <source>To create our custom cache driver, we first need to implement the &lt;code&gt;Illuminate\Contracts\Cache\Store&lt;/code&gt;&lt;a href=&quot;contracts&quot;&gt;contract&lt;/a&gt;. So, a MongoDB cache implementation would look something like this:</source>
          <target state="translated">사용자 지정 캐시 드라이버를 만들려면 먼저 &lt;code&gt;Illuminate\Contracts\Cache\Store&lt;/code&gt; &lt;a href=&quot;contracts&quot;&gt;contract&lt;/a&gt; 를 구현해야합니다 . 따라서 MongoDB 캐시 구현은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e007816e53d2968cc1b3fcf843626c4f0de37df4" translate="yes" xml:space="preserve">
          <source>To create the symbolic link, you may use the &lt;code&gt;storage:link&lt;/code&gt; Artisan command:</source>
          <target state="translated">심볼릭 링크를 만들려면 &lt;code&gt;storage:link&lt;/code&gt; 장인 명령을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="23d1975a5b78c8f4e9d30d199953f519d9d98c0b" translate="yes" xml:space="preserve">
          <source>To defer the loading of a provider, set the &lt;code&gt;defer&lt;/code&gt; property to &lt;code&gt;true&lt;/code&gt; and define a &lt;code&gt;provides&lt;/code&gt; method. The &lt;code&gt;provides&lt;/code&gt; method should return the service container bindings registered by the provider:</source>
          <target state="translated">공급자의 로딩을 연기하기 위해 설정 &lt;code&gt;defer&lt;/code&gt; 에 재산 &lt;code&gt;true&lt;/code&gt; 과 정의 &lt;code&gt;provides&lt;/code&gt; 방법. 가 &lt;code&gt;provides&lt;/code&gt; 방법은 공급자에 의해 등록 된 서비스 컨테이너 바인딩을 반환해야합니다 :</target>
        </trans-unit>
        <trans-unit id="025cf5854a5a54aaa6da2f4a1f338a32a1f84c1b" translate="yes" xml:space="preserve">
          <source>To define a mutator, define a &lt;code&gt;setFooAttribute&lt;/code&gt; method on your model where &lt;code&gt;Foo&lt;/code&gt; is the &quot;studly&quot; cased name of the column you wish to access. So, again, let's define a mutator for the &lt;code&gt;first_name&lt;/code&gt; attribute. This mutator will be automatically called when we attempt to set the value of the &lt;code&gt;first_name&lt;/code&gt; attribute on the model:</source>
          <target state="translated">뮤 테이터를 정의하려면 모델에서 &lt;code&gt;setFooAttribute&lt;/code&gt; 메소드를 정의 하십시오. 여기서 &lt;code&gt;Foo&lt;/code&gt; 는 액세스하려는 컬럼의 &quot;스터드&quot;케이스 이름입니다. 다시 &lt;code&gt;first_name&lt;/code&gt; 속성에 대한 뮤 테이터를 정의 해 봅시다 . 이 뮤 테이터는 모델 에서 &lt;code&gt;first_name&lt;/code&gt; 속성 의 값을 설정하려고 할 때 자동으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="2e7bc1582ba8c38dffdd177244df948cb7e19357" translate="yes" xml:space="preserve">
          <source>To define an accessor, create a &lt;code&gt;getFooAttribute&lt;/code&gt; method on your model where &lt;code&gt;Foo&lt;/code&gt; is the &quot;studly&quot; cased name of the column you wish to access. In this example, we'll define an accessor for the &lt;code&gt;first_name&lt;/code&gt; attribute. The accessor will automatically be called by Eloquent when attempting to retrieve the value of the &lt;code&gt;first_name&lt;/code&gt; attribute:</source>
          <target state="translated">접근 &lt;code&gt;getFooAttribute&lt;/code&gt; 정의하려면 모델에서 getFooAttribute 메소드를 작성 하십시오. 여기서 &lt;code&gt;Foo&lt;/code&gt; 는 액세스하려는 컬럼의 &quot;놀라운&quot;대소 문자 이름입니다. 이 예에서는 &lt;code&gt;first_name&lt;/code&gt; 속성에 대한 접근자를 정의 합니다. &lt;code&gt;first_name&lt;/code&gt; 속성 의 값을 검색하려고 할 때 접근자는 Eloquent에 의해 자동으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="55b13a3b12edfe3fea0d0ff9a74cffab4b073ac3" translate="yes" xml:space="preserve">
          <source>To define the inverse of a many-to-many relationship, you place another call to &lt;code&gt;belongsToMany&lt;/code&gt; on your related model. To continue our user roles example, let's define the &lt;code&gt;users&lt;/code&gt; method on the &lt;code&gt;Role&lt;/code&gt; model:</source>
          <target state="translated">다 대 다 관계의 역수를 정의하기 위해 관련 모델 에서 &lt;code&gt;belongsToMany&lt;/code&gt; 를 다시 호출합니다 . 사용자 역할 예제를 계속하려면 &lt;code&gt;Role&lt;/code&gt; 모델 에서 &lt;code&gt;users&lt;/code&gt; 메소드를 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="b3879940e7d2392ed0079f614270582b3f48eddc" translate="yes" xml:space="preserve">
          <source>To delete a model, call the &lt;code&gt;delete&lt;/code&gt; method on a model instance:</source>
          <target state="translated">모델을 삭제하려면 모델 인스턴스 에서 &lt;code&gt;delete&lt;/code&gt; 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="640a752181c4d8662649dc869f1b8fb2f9f5e74c" translate="yes" xml:space="preserve">
          <source>To delete all of your failed jobs, you may use the &lt;code&gt;queue:flush&lt;/code&gt; command:</source>
          <target state="translated">실패한 모든 작업을 삭제하려면 &lt;code&gt;queue:flush&lt;/code&gt; 명령을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8aa87cca3d9517a523f1914db6abeb5137f95017" translate="yes" xml:space="preserve">
          <source>To destroy the machine, you may use the &lt;code&gt;vagrant destroy --force&lt;/code&gt; command.</source>
          <target state="translated">기계를 파괴하려면 &lt;code&gt;vagrant destroy --force&lt;/code&gt; 명령을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="80ca6568023ea2fbb83d7cf030058a8213b8212d" translate="yes" xml:space="preserve">
          <source>To determine if a given model instance has been soft deleted, use the &lt;code&gt;trashed&lt;/code&gt; method:</source>
          <target state="translated">주어진 모델 인스턴스가 &lt;code&gt;trashed&lt;/code&gt; 삭제되었는지 확인하려면 trashed 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a484dd5d5f72a97ea2036062f66a53c27e95dec9" translate="yes" xml:space="preserve">
          <source>To determine if an item is present in the session, even if its value is &lt;code&gt;null&lt;/code&gt;, you may use the &lt;code&gt;exists&lt;/code&gt; method. The &lt;code&gt;exists&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the item is present:</source>
          <target state="translated">세션에 항목이 있는지 확인하려면 값이 &lt;code&gt;null&lt;/code&gt; 인 경우도 &lt;code&gt;exists&lt;/code&gt; 메소드를 사용할 수 있습니다 . 는 &lt;code&gt;exists&lt;/code&gt; 메소드가 리턴 &lt;code&gt;true&lt;/code&gt; 항목이있는 경우 :</target>
        </trans-unit>
        <trans-unit id="c7d78952af8eb61da2a9365dce7d44c15d9ff846" translate="yes" xml:space="preserve">
          <source>To determine if an item is present in the session, you may use the &lt;code&gt;has&lt;/code&gt; method. The &lt;code&gt;has&lt;/code&gt; method returns &lt;code&gt;true&lt;/code&gt; if the item is present and is not &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">세션에 항목이 있는지 확인하기 위해 &lt;code&gt;has&lt;/code&gt; 메소드를 사용할 수 있습니다 . 은 &lt;code&gt;has&lt;/code&gt; 메소드가 리턴 &lt;code&gt;true&lt;/code&gt; 항목이 존재하고 있지 않은 경우 &lt;code&gt;null&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d4d1fbe92117c822265748960ce0e0f1a34bc239" translate="yes" xml:space="preserve">
          <source>To determine if the user is already logged into your application, you may use the &lt;code&gt;check&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade, which will return &lt;code&gt;true&lt;/code&gt; if the user is authenticated:</source>
          <target state="translated">사용자가 이미 응용 프로그램에 로그인했는지 확인하려면 &lt;code&gt;Auth&lt;/code&gt; 파사드 에서 &lt;code&gt;check&lt;/code&gt; 메소드를 사용 하면 사용자가 인증되면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="05203652b90dcb31ffddd95179b907c4fca692bf" translate="yes" xml:space="preserve">
          <source>To determine if the user was once an active subscriber, but has cancelled their subscription, you may use the &lt;code&gt;cancelled&lt;/code&gt; method:</source>
          <target state="translated">사용자가 한 번 활성 구독자 였지만 구독을 취소했는지 확인하려면 &lt;code&gt;cancelled&lt;/code&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b964d5d3297017551f58fc75b21be06bd06383a4" translate="yes" xml:space="preserve">
          <source>To determine the MIME type of the uploaded file, the file's contents will be read and the framework will attempt to guess the MIME type, which may be different from the client provided MIME type.</source>
          <target state="translated">업로드 된 파일의 MIME 유형을 결정하기 위해 파일의 내용을 읽고 프레임 워크는 MIME 유형을 추측하려고 시도합니다. MIME 유형은 클라이언트가 제공 한 MIME 유형과 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0c90cbe3bd8849e26c68a6f8ab971ff2e0e5257" translate="yes" xml:space="preserve">
          <source>To disable maintenance mode, use the &lt;code&gt;up&lt;/code&gt; command:</source>
          <target state="translated">유지 관리 모드를 비활성화하려면 &lt;code&gt;up&lt;/code&gt; 명령을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="eb50348ad8ea04e9c8739d6497ab1cb0fee8e4c4" translate="yes" xml:space="preserve">
          <source>To dispatch an event, you may pass an instance of the event to the &lt;code&gt;event&lt;/code&gt; helper. The helper will dispatch the event to all of its registered listeners. Since the &lt;code&gt;event&lt;/code&gt; helper is globally available, you may call it from anywhere in your application:</source>
          <target state="translated">이벤트를 전달하기 위해 이벤트 인스턴스를 &lt;code&gt;event&lt;/code&gt; 도우미에 전달할 수 있습니다 . 도우미는 등록 된 모든 리스너에게 이벤트를 전달합니다. 때문에 &lt;code&gt;event&lt;/code&gt; 도우미가 전 세계적으로 사용할 수 있으며, 당신은 당신의 응용 프로그램에서 어디에서 호출 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="e76ad782b950b60e8101b5663a9681ba6cf011d4" translate="yes" xml:space="preserve">
          <source>To display an error message, use the &lt;code&gt;error&lt;/code&gt; method. Error message text is typically displayed in red:</source>
          <target state="translated">오류 메시지를 표시하려면 &lt;code&gt;error&lt;/code&gt; 방법을 사용하십시오 . 오류 메시지 텍스트는 일반적으로 빨간색으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="16c4eaae1cfd816050fa069d3a7dc64bd54ff8a3" translate="yes" xml:space="preserve">
          <source>To drop a column, use the &lt;code&gt;dropColumn&lt;/code&gt; method on the Schema builder. Before dropping columns from a SQLite database, you will need to add the &lt;code&gt;doctrine/dbal&lt;/code&gt; dependency to your &lt;code&gt;composer.json&lt;/code&gt; file and run the &lt;code&gt;composer update&lt;/code&gt; command in your terminal to install the library:</source>
          <target state="translated">열을 삭제하려면 스키마 빌더 에서 &lt;code&gt;dropColumn&lt;/code&gt; 메소드를 사용하십시오 . SQLite 데이터베이스에서 열을 삭제하기 전에 &lt;code&gt;composer.json&lt;/code&gt; 파일에 &lt;code&gt;doctrine/dbal&lt;/code&gt; 종속성을 추가하고 터미널에서 &lt;code&gt;composer update&lt;/code&gt; 명령을 실행 하여 라이브러리를 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="62c143139b5bc24433b9f742f4cc48b3b3be35ba" translate="yes" xml:space="preserve">
          <source>To drop a foreign key, you may use the &lt;code&gt;dropForeign&lt;/code&gt; method. Foreign key constraints use the same naming convention as indexes. So, we will concatenate the table name and the columns in the constraint then suffix the name with &quot;_foreign&quot;:</source>
          <target state="translated">외래 키를 삭제하려면 &lt;code&gt;dropForeign&lt;/code&gt; 메서드를 사용할 수 있습니다 . 외래 키 제약 조건은 인덱스와 동일한 명명 규칙을 사용합니다. 따라서 테이블 이름과 제약 조건의 열을 연결 한 다음 이름에 &quot;_foreign&quot;을 붙입니다.</target>
        </trans-unit>
        <trans-unit id="ecd1bb2b51ccb4eb92f9dd03fbcf7628b504e896" translate="yes" xml:space="preserve">
          <source>To drop an existing table, you may use the &lt;code&gt;drop&lt;/code&gt; or &lt;code&gt;dropIfExists&lt;/code&gt; methods:</source>
          <target state="translated">기존 테이블을 삭제하려면 사용할 수 있습니다 &lt;code&gt;drop&lt;/code&gt; 또는 &lt;code&gt;dropIfExists&lt;/code&gt; 방법 :</target>
        </trans-unit>
        <trans-unit id="3b0c41426bb5ac1987bd00fef84247b9de8f3179" translate="yes" xml:space="preserve">
          <source>To drop an index, you must specify the index's name. By default, Laravel automatically assigns a reasonable name to the indexes. Concatenate the table name, the name of the indexed column, and the index type. Here are some examples:</source>
          <target state="translated">색인을 삭제하려면 색인 이름을 지정해야합니다. 기본적으로 Laravel은 적절한 이름을 색인에 자동으로 할당합니다. 테이블 이름, 인덱싱 된 열의 이름 및 인덱스 유형을 연결하십시오. 여기 몇 가지 예가 있어요.</target>
        </trans-unit>
        <trans-unit id="7648a4da11a3205cf5f7cc755060a72d6269bb5d" translate="yes" xml:space="preserve">
          <source>To eager load nested relationships, you may use &quot;dot&quot; syntax. For example, let's eager load all of the book's authors and all of the author's personal contacts in one Eloquent statement:</source>
          <target state="translated">중첩 된 관계를로드하기 위해 &quot;점&quot;구문을 사용할 수 있습니다. 예를 들어, 모든 책의 저자와 저자의 모든 개인 연락처를 하나의 Eloquent 문에 간절히로드 해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="68200e67247da28b6a333a25c1201d31f4b3c77a" translate="yes" xml:space="preserve">
          <source>To enable &lt;a href=&quot;https://www.vagrantup.com/docs/networking/public_network.html&quot;&gt;DHCP&lt;/a&gt;, just remove the &lt;code&gt;ip&lt;/code&gt; option from your configuration:</source>
          <target state="translated">&lt;a href=&quot;https://www.vagrantup.com/docs/networking/public_network.html&quot;&gt;DHCP&lt;/a&gt; 를 활성화하려면 구성에서 &lt;code&gt;ip&lt;/code&gt; 옵션을 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ca1ec99a3d3c64894270306c9432b3044815718" translate="yes" xml:space="preserve">
          <source>To enable &lt;a href=&quot;https://www.vagrantup.com/docs/synced-folders/nfs.html&quot;&gt;NFS&lt;/a&gt;, you only need to add a simple flag to your synced folder configuration:</source>
          <target state="translated">&lt;a href=&quot;https://www.vagrantup.com/docs/synced-folders/nfs.html&quot;&gt;NFS&lt;/a&gt; 를 활성화하려면 동기화 된 폴더 구성에 간단한 플래그 만 추가하면됩니다.</target>
        </trans-unit>
        <trans-unit id="b9e7ab967470b89bb4d66771ecab394d3975b8cd" translate="yes" xml:space="preserve">
          <source>To enable a &lt;a href=&quot;https://www.vagrantup.com/docs/networking/public_network.html&quot;&gt;bridged&lt;/a&gt; interface, configure a &lt;code&gt;bridge&lt;/code&gt; setting and change the network type to &lt;code&gt;public_network&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://www.vagrantup.com/docs/networking/public_network.html&quot;&gt;브리지 된&lt;/a&gt; 인터페이스 를 활성화하려면 &lt;code&gt;bridge&lt;/code&gt; 설정을 구성 하고 네트워크 유형을 &lt;code&gt;public_network&lt;/code&gt; 로 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="5e1daa9ded7298f8e7ef8a4ee4e35f9120d3894c" translate="yes" xml:space="preserve">
          <source>To enable caching for a given disk, you may add a &lt;code&gt;cache&lt;/code&gt; directive to the disk's configuration options. The &lt;code&gt;cache&lt;/code&gt; option should be an array of caching options containing the &lt;code&gt;disk&lt;/code&gt; name, the &lt;code&gt;expire&lt;/code&gt; time in seconds, and the cache &lt;code&gt;prefix&lt;/code&gt;:</source>
          <target state="translated">주어진 디스크에 대해 캐싱을 사용하려면 디스크의 구성 옵션에 &lt;code&gt;cache&lt;/code&gt; 지정 문을 추가 할 수 있습니다. &lt;code&gt;cache&lt;/code&gt; 옵션이 포함 된 캐싱 옵션의 배열이 &lt;code&gt;disk&lt;/code&gt; 이름의이 &lt;code&gt;expire&lt;/code&gt; 시간 (초), 그리고 캐시 &lt;code&gt;prefix&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="17888f61404ccc06db6999aaba544db89e287285" translate="yes" xml:space="preserve">
          <source>To enable maintenance mode, execute the &lt;code&gt;down&lt;/code&gt; Artisan command:</source>
          <target state="translated">유지 관리 모드를 활성화하려면 &lt;code&gt;down&lt;/code&gt; Artisan 명령을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb23dfcf84012efe9e2d8eada854b760c00c5c5b" translate="yes" xml:space="preserve">
          <source>To encourage active collaboration, Laravel strongly encourages pull requests, not just bug reports. &quot;Bug reports&quot; may also be sent in the form of a pull request containing a failing test.</source>
          <target state="translated">적극적인 협업을 장려하기 위해 Laravel은 버그 보고서뿐만 아니라 풀 요청을 강력히 권장합니다. &quot;버그 보고서&quot;는 실패한 테스트가 포함 된 풀 요청 형식으로 전송 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d7920019f41c00505bcf84078f4cc19f972dfe6" translate="yes" xml:space="preserve">
          <source>To execute an &lt;code&gt;insert&lt;/code&gt; statement, you may use the &lt;code&gt;insert&lt;/code&gt; method on the &lt;code&gt;DB&lt;/code&gt; facade. Like &lt;code&gt;select&lt;/code&gt;, this method takes the raw SQL query as its first argument and bindings as its second argument:</source>
          <target state="translated">&lt;code&gt;insert&lt;/code&gt; 문 을 실행하기 위해 &lt;code&gt;DB&lt;/code&gt; 파사드 에서 &lt;code&gt;insert&lt;/code&gt; 메소드를 사용할 수 있습니다 . &lt;code&gt;select&lt;/code&gt; 와 마찬가지로이 메소드는 원시 SQL 쿼리를 첫 번째 인수로 사용하고 바인딩을 두 번째 인수로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="1615e51d6f1d51a93f2c2e64de563e9dccb845e1" translate="yes" xml:space="preserve">
          <source>To execute code on every cache operation, you may listen for the &lt;a href=&quot;events&quot;&gt;events&lt;/a&gt; fired by the cache. Typically, you should place these event listeners within your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">모든 캐시 작업에서 코드를 실행하기 위해 캐시에서 &lt;a href=&quot;events&quot;&gt;발생한 이벤트를&lt;/a&gt; 수신 할 수 있습니다 . 일반적으로 이러한 이벤트 리스너를 &lt;code&gt;EventServiceProvider&lt;/code&gt; 내에 배치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="80acd04bf9f8b9010bd15f7fd8fe94dbbe47d1d9" translate="yes" xml:space="preserve">
          <source>To force Dusk to use its own environment file when running tests, create a &lt;code&gt;.env.dusk.{environment}&lt;/code&gt; file in the root of your project. For example, if you will be initiating the &lt;code&gt;dusk&lt;/code&gt; command from your &lt;code&gt;local&lt;/code&gt; environment, you should create a &lt;code&gt;.env.dusk.local&lt;/code&gt; file.</source>
          <target state="translated">테스트를 실행할 때 Dusk가 자체 환경 파일을 사용하도록하려면 프로젝트 루트에 &lt;code&gt;.env.dusk.{environment}&lt;/code&gt; 파일을 작성하십시오. 예를 들어, &lt;code&gt;local&lt;/code&gt; 환경 에서 &lt;code&gt;dusk&lt;/code&gt; 명령을 시작하려면 &lt;code&gt;.env.dusk.local&lt;/code&gt; 파일을 작성해야 합니다.</target>
        </trans-unit>
        <trans-unit id="c25061f0ae2b45bc330626ad6733fee1d425f151" translate="yes" xml:space="preserve">
          <source>To generate a Dusk test, use the &lt;code&gt;dusk:make&lt;/code&gt; Artisan command. The generated test will be placed in the &lt;code&gt;tests/Browser&lt;/code&gt; directory:</source>
          <target state="translated">Dusk 테스트를 생성하려면 &lt;code&gt;dusk:make&lt;/code&gt; Artisan 명령을 사용하십시오 . 생성 된 테스트는 &lt;code&gt;tests/Browser&lt;/code&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="092d809168c1f4a00d68b7ef8703a826bb6289a0" translate="yes" xml:space="preserve">
          <source>To generate a URL to this route, you may use the &lt;code&gt;route&lt;/code&gt; helper like so:</source>
          <target state="translated">이 경로에 대한 URL을 생성하려면 다음과 같이 &lt;code&gt;route&lt;/code&gt; 도우미를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="13cb6400553114e750389676b28e1e7ca2c01cb9" translate="yes" xml:space="preserve">
          <source>To generate a component, use the &lt;code&gt;dusk:component&lt;/code&gt; Artisan command. New components are placed in the &lt;code&gt;test/Browser/Components&lt;/code&gt; directory:</source>
          <target state="translated">구성 요소를 생성하려면 &lt;code&gt;dusk:component&lt;/code&gt; 아티 즌 명령을 사용하십시오 . 새로운 구성 요소는 &lt;code&gt;test/Browser/Components&lt;/code&gt; 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="452c8d10570f0b622337b98b84370622da84b07d" translate="yes" xml:space="preserve">
          <source>To generate a mailable with a corresponding Markdown template, you may use the &lt;code&gt;--markdown&lt;/code&gt; option of the &lt;code&gt;make:mail&lt;/code&gt; Artisan command:</source>
          <target state="translated">해당 Markdown 템플릿으로 메일을 생성하려면 &lt;code&gt;make:mail&lt;/code&gt; Artisan 명령 의 &lt;code&gt;--markdown&lt;/code&gt; 옵션을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="34a98adeb579a10208e80c5246da9559f0ef6b3e" translate="yes" xml:space="preserve">
          <source>To generate a notification with a corresponding Markdown template, you may use the &lt;code&gt;--markdown&lt;/code&gt; option of the &lt;code&gt;make:notification&lt;/code&gt; Artisan command:</source>
          <target state="translated">해당 Markdown 템플릿으로 알림을 생성하려면 &lt;code&gt;make:notification&lt;/code&gt; Artisan 명령 의 &lt;code&gt;--markdown&lt;/code&gt; 옵션을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="429591bde77bf79a891645e842682c78259b0316" translate="yes" xml:space="preserve">
          <source>To generate a page object, use the &lt;code&gt;dusk:page&lt;/code&gt; Artisan command. All page objects will be placed in the &lt;code&gt;tests/Browser/Pages&lt;/code&gt; directory:</source>
          <target state="translated">페이지 객체를 생성하려면 &lt;code&gt;dusk:page&lt;/code&gt; 아티 즌 명령을 사용하십시오 . 모든 페이지 객체는 &lt;code&gt;tests/Browser/Pages&lt;/code&gt; 디렉토리에 위치합니다 :</target>
        </trans-unit>
        <trans-unit id="bccfdfb4fe344f863bf8aa13fb33cbaeb4136ccd" translate="yes" xml:space="preserve">
          <source>To generate a resource class, you may use the &lt;code&gt;make:resource&lt;/code&gt; Artisan command. By default, resources will be placed in the &lt;code&gt;app/Http/Resources&lt;/code&gt; directory of your application. Resources extend the &lt;code&gt;Illuminate\Http\Resources\Json\JsonResource&lt;/code&gt; class:</source>
          <target state="translated">자원 클래스를 생성하려면 &lt;code&gt;make:resource&lt;/code&gt; Artisan 명령을 사용할 수 있습니다 . 기본적으로 리소스는 &lt;code&gt;app/Http/Resources&lt;/code&gt; 의 app / Http / Resources 디렉토리에 배치됩니다 . 자원은 &lt;code&gt;Illuminate\Http\Resources\Json\JsonResource&lt;/code&gt; 클래스를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="d9b2df8b2395a903bf2ec9612844cb7857c9c9f3" translate="yes" xml:space="preserve">
          <source>To generate a seeder, execute the &lt;code&gt;make:seeder&lt;/code&gt;&lt;a href=&quot;artisan&quot;&gt;Artisan command&lt;/a&gt;. All seeders generated by the framework will be placed in the &lt;code&gt;database/seeds&lt;/code&gt; directory:</source>
          <target state="translated">시더를 생성하려면 &lt;code&gt;make:seeder&lt;/code&gt; &lt;a href=&quot;artisan&quot;&gt;Artisan 명령을 실행하십시오&lt;/a&gt; . 프레임 워크에서 생성 된 모든 &lt;code&gt;database/seeds&lt;/code&gt; 디렉토리에 배치됩니다 .</target>
        </trans-unit>
        <trans-unit id="6942811e41a653d165d71494ef1dd4ba5657e149" translate="yes" xml:space="preserve">
          <source>To get a better understanding of the &lt;code&gt;validate&lt;/code&gt; method, let's jump back into the &lt;code&gt;store&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;validate&lt;/code&gt; 메소드에 대한 이해를 높이기 위해 &lt;code&gt;store&lt;/code&gt; 메소드 로 되돌아가 보자 .</target>
        </trans-unit>
        <trans-unit id="5a6de9ae7cd647f820978dffecb864f2890b54a0" translate="yes" xml:space="preserve">
          <source>To get started with Socialite, use Composer to add the package to your project's dependencies:</source>
          <target state="translated">Socialite를 시작하려면 Composer를 사용하여 패키지를 프로젝트의 종속성에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="50ff081e326cb293f0e1b51b255bb5d006a1a060" translate="yes" xml:space="preserve">
          <source>To get started, call the &lt;code&gt;Auth::viaRequest&lt;/code&gt; method within the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;AuthServiceProvider&lt;/code&gt;. The &lt;code&gt;viaRequest&lt;/code&gt; method accepts a guard name as its first argument. This name can be any string that describes your custom guard. The second argument passed to the method should be a Closure that receives the incoming HTTP request and returns a user instance or, if authentication fails, &lt;code&gt;null&lt;/code&gt;:</source>
          <target state="translated">시작하려면 &lt;code&gt;AuthServiceProvider&lt;/code&gt; 의 &lt;code&gt;boot&lt;/code&gt; 메소드 내에서 &lt;code&gt;Auth::viaRequest&lt;/code&gt; 메소드를 호출하십시오 . &lt;code&gt;viaRequest&lt;/code&gt; 의 방법은 첫 번째 인수로 가드 이름을 받아들입니다. 이 이름은 사용자 지정 가드를 설명하는 문자열 일 수 있습니다. 메소드에 전달 된 두 번째 인수는 들어오는 HTTP 요청을 수신하고 사용자 인스턴스를 리턴하거나 인증이 실패하는 경우 &lt;code&gt;null&lt;/code&gt; 인 Closure 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="272cdafb972d36cbc538bc182cc95009c88307df" translate="yes" xml:space="preserve">
          <source>To get started, define a &lt;code&gt;$dispatchesEvents&lt;/code&gt; property on your Eloquent model that maps various points of the Eloquent model's lifecycle to your own &lt;a href=&quot;events&quot;&gt;event classes&lt;/a&gt;:</source>
          <target state="translated">시작하려면 Eloquent 모델 라이프 사이클의 다양한 지점을 고유 한 &lt;a href=&quot;events&quot;&gt;이벤트 클래스에&lt;/a&gt; 매핑하는 Eloquent 모델에서 &lt;code&gt;$dispatchesEvents&lt;/code&gt; 속성을 정의 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ffe243da1e0a49bf8d06d82ec7edbd4894bf96f" translate="yes" xml:space="preserve">
          <source>To get started, define a &lt;code&gt;tap&lt;/code&gt; array on the channel's configuration. The &lt;code&gt;tap&lt;/code&gt; array should contain a list of classes that should have an opportunity to customize (or &quot;tap&quot; into) the Monolog instance after it is created:</source>
          <target state="translated">시작하려면 채널 구성에서 &lt;code&gt;tap&lt;/code&gt; 배열을 정의하십시오 . &lt;code&gt;tap&lt;/code&gt; 어레이가 정의 할 수있는 기회 (또는으로 &quot;탭&quot;)로 만든 후 모놀로그 인스턴스 있어야 클래스들의 목록을 포함한다 :</target>
        </trans-unit>
        <trans-unit id="685f06bcf06ac345e7c42f5b5a23436202a57d40" translate="yes" xml:space="preserve">
          <source>To get started, install Passport via the Composer package manager:</source>
          <target state="translated">시작하려면 Composer 패키지 관리자를 통해 Passport를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="270a3d727636f144351377351bd90bad8b861411" translate="yes" xml:space="preserve">
          <source>To get started, let's create an Eloquent model. Models typically live in the &lt;code&gt;app&lt;/code&gt; directory, but you are free to place them anywhere that can be auto-loaded according to your &lt;code&gt;composer.json&lt;/code&gt; file. All Eloquent models extend &lt;code&gt;Illuminate\Database\Eloquent\Model&lt;/code&gt; class.</source>
          <target state="translated">시작하기 위해 Eloquent 모델을 만들어 봅시다. 모델은 일반적으로 &lt;code&gt;app&lt;/code&gt; 디렉토리에 있지만 &lt;code&gt;composer.json&lt;/code&gt; 파일 에 따라 자동로드 할 수있는 위치에 자유롭게 배치 할 수 있습니다 . 모든 Eloquent 모델은 &lt;code&gt;Illuminate\Database\Eloquent\Model&lt;/code&gt; 클래스를 확장합니다.</target>
        </trans-unit>
        <trans-unit id="c430b941b76735c598394d0ed6c5b9496335e97d" translate="yes" xml:space="preserve">
          <source>To get started, let's write a test that verifies we can log into our application. After generating a test, we can modify it to navigate to the login page, enter some credentials, and click the &quot;Login&quot; button. To create a browser instance, call the &lt;code&gt;browse&lt;/code&gt; method:</source>
          <target state="translated">시작하기 위해 응용 프로그램에 로그인 할 수 있는지 확인하는 테스트를 작성해 봅시다. 테스트를 생성 한 후에는 로그인 페이지로 이동하여 자격 증명을 입력 한 후 &quot;로그인&quot;버튼을 클릭하여 테스트를 수정할 수 있습니다. 브라우저 인스턴스를 작성하려면 &lt;code&gt;browse&lt;/code&gt; 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="5378dfa2aad04e9a3c0de61652a64d04eb153296" translate="yes" xml:space="preserve">
          <source>To get started, open your &lt;code&gt;tests/DuskTestCase.php&lt;/code&gt; file, which is the base Dusk test case for your application. Within this file, you can remove the call to the &lt;code&gt;startChromeDriver&lt;/code&gt; method. This will stop Dusk from automatically starting the ChromeDriver:</source>
          <target state="translated">시작하려면 &lt;code&gt;tests/DuskTestCase.php&lt;/code&gt; 파일 (응용 프로그램의 기본 Dusk 테스트 사례)을 엽니 다 . 이 파일 내에서 &lt;code&gt;startChromeDriver&lt;/code&gt; 메소드에 대한 호출을 제거 할 수 있습니다 . 이렇게하면 Dusk가 ChromeDriver를 자동으로 시작하지 못하게됩니다.</target>
        </trans-unit>
        <trans-unit id="1aae117fc636492e242f74e761e598a233989ec3" translate="yes" xml:space="preserve">
          <source>To get started, verify that your &lt;code&gt;App\User&lt;/code&gt; model implements the &lt;code&gt;Illuminate\Contracts\Auth\CanResetPassword&lt;/code&gt; contract. Of course, the &lt;code&gt;App\User&lt;/code&gt; model included with the framework already implements this interface, and uses the &lt;code&gt;Illuminate\Auth\Passwords\CanResetPassword&lt;/code&gt; trait to include the methods needed to implement the interface.</source>
          <target state="translated">시작하려면 &lt;code&gt;App\User&lt;/code&gt; 모델이 &lt;code&gt;Illuminate\Contracts\Auth\CanResetPassword&lt;/code&gt; 계약을 구현 하는지 확인하십시오 . 물론 프레임 워크에 포함 된 &lt;code&gt;App\User&lt;/code&gt; 모델은 이미이 인터페이스를 구현하고 &lt;code&gt;Illuminate\Auth\Passwords\CanResetPassword&lt;/code&gt; 특성을 사용하여 인터페이스를 구현하는 데 필요한 메소드를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="c92f9465707f57511e9f939e082ad681aec17c8a" translate="yes" xml:space="preserve">
          <source>To get started, verify that your &lt;code&gt;App\User&lt;/code&gt; model implements the &lt;code&gt;Illuminate\Contracts\Auth\MustVerifyEmail&lt;/code&gt; contract:</source>
          <target state="translated">시작하려면 &lt;code&gt;App\User&lt;/code&gt; 모델이 &lt;code&gt;Illuminate\Contracts\Auth\MustVerifyEmail&lt;/code&gt; 계약을 구현 하는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="8c14f3657e19be9e1fc064be8988f32821dc65de" translate="yes" xml:space="preserve">
          <source>To get started, you should add the &lt;code&gt;laravel/dusk&lt;/code&gt; Composer dependency to your project:</source>
          <target state="translated">시작하려면 프로젝트에 &lt;code&gt;laravel/dusk&lt;/code&gt; Composer 종속성을 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="a2b02071162da4e35b6fdedcaa2b56bc006f6158" translate="yes" xml:space="preserve">
          <source>To give your application a speed boost, you should cache all of your configuration files into a single file using the &lt;code&gt;config:cache&lt;/code&gt; Artisan command. This will combine all of the configuration options for your application into a single file which will be loaded quickly by the framework.</source>
          <target state="translated">응용 프로그램의 속도를 높이려면 &lt;code&gt;config:cache&lt;/code&gt; Artisan 명령을 사용하여 모든 구성 파일을 단일 파일로 캐시해야합니다 . 이것은 응용 프로그램의 모든 구성 옵션을 단일 파일로 결합하여 프레임 워크에 의해 빠르게로드됩니다.</target>
        </trans-unit>
        <trans-unit id="543c1c3914baae9abc2579b86041852f19d145d5" translate="yes" xml:space="preserve">
          <source>To help you learn more about what's happening within your application, Laravel provides robust logging services that allow you to log messages to files, the system error log, and even to Slack to notify your entire team.</source>
          <target state="translated">Laravel은 응용 프로그램 내에서 발생하는 상황에 대해 자세히 알아볼 수 있도록 파일, 시스템 오류 로그 및 Slack에 메시지를 기록하여 팀 전체에 알리는 강력한 로깅 서비스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="13bff7c8def6a38cc2ffabc55e389b8bca742e78" translate="yes" xml:space="preserve">
          <source>To include the first view that exists from a given array of views, you may use the &lt;code&gt;includeFirst&lt;/code&gt; directive:</source>
          <target state="translated">주어진 뷰 배열에서 존재하는 첫 번째 뷰를 포함하려면 &lt;code&gt;includeFirst&lt;/code&gt; 지시문을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e3bc5cd8f098f799a7d24fdeccec1ff055a95e0" translate="yes" xml:space="preserve">
          <source>To indicate that the task should run on only one server, use the &lt;code&gt;onOneServer&lt;/code&gt; method when defining the scheduled task. The first server to obtain the task will secure an atomic lock on the job to prevent other servers from running the same task at the same time:</source>
          <target state="translated">작업이 하나의 서버에서만 실행되도록 하려면 예약 된 작업을 정의 할 때 &lt;code&gt;onOneServer&lt;/code&gt; 메서드를 사용하십시오 . 작업을 얻는 첫 번째 서버는 다른 서버가 같은 작업을 동시에 실행하지 못하도록 작업에 대한 원자 잠금을 보호합니다.</target>
        </trans-unit>
        <trans-unit id="1cf3ee9fd8f52403ed09690a3207e42b229d8822" translate="yes" xml:space="preserve">
          <source>To inform Laravel that a given event should be broadcast, implement the &lt;code&gt;Illuminate\Contracts\Broadcasting\ShouldBroadcast&lt;/code&gt; interface on the event class. This interface is already imported into all event classes generated by the framework so you may easily add it to any of your events.</source>
          <target state="translated">지정된 이벤트를 브로드 캐스트해야한다고 Laravel에 알리려면 이벤트 클래스 에서 &lt;code&gt;Illuminate\Contracts\Broadcasting\ShouldBroadcast&lt;/code&gt; 인터페이스를 구현하십시오 . 이 인터페이스는 이미 프레임 워크에서 생성 된 모든 이벤트 클래스로 가져 오기 때문에 이벤트에 쉽게 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2052c488c890f65e0e479e9ffc60b190e98f15c1" translate="yes" xml:space="preserve">
          <source>To install Elasticsearch, add the &lt;code&gt;elasticsearch&lt;/code&gt; option to your &lt;code&gt;Homestead.yaml&lt;/code&gt; file and specify a supported version, which may be a major version or an exact version number (major.minor.patch). The default installation will create a cluster named 'homestead'. You should never give Elasticsearch more than half of the operating system's memory, so make sure your Homestead machine has at least twice the Elasticsearch allocation:</source>
          <target state="translated">Elasticsearch를 설치하려면 &lt;code&gt;elasticsearch&lt;/code&gt; 옵션을 &lt;code&gt;Homestead.yaml&lt;/code&gt; 파일에 추가하고 지원되는 버전 (주 버전 또는 정확한 버전 번호 (major.minor.patch) 일 수 있음)을 지정하십시오. 기본 설치는 'homestead'라는 클러스터를 만듭니다. Elasticsearch에 운영 체제 메모리의 절반 이상을 제공해서는 안되므로 Homestead 머신에 Elasticsearch 할당량의 두 배 이상이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="b988d4840316c5d966e5c189df68a0adde5b26f5" translate="yes" xml:space="preserve">
          <source>To install Homestead directly into your project, require it using Composer:</source>
          <target state="translated">Homestead를 프로젝트에 직접 설치하려면 Composer를 사용하여이를 요구하십시오.</target>
        </trans-unit>
        <trans-unit id="e5572ad7908b4b0cc0eddfa5d382712b52133237" translate="yes" xml:space="preserve">
          <source>To install MongoDB Community Edition, update your &lt;code&gt;Homestead.yaml&lt;/code&gt; file with the following configuration option:</source>
          <target state="translated">MongoDB Community Edition을 설치하려면 다음 구성 옵션으로 &lt;code&gt;Homestead.yaml&lt;/code&gt; 파일을 업데이트하십시오 .</target>
        </trans-unit>
        <trans-unit id="0e293c50b18b2626e75c344eed36e197aeade7d8" translate="yes" xml:space="preserve">
          <source>To instruct the validator to ignore the user's ID, we'll use the &lt;code&gt;Rule&lt;/code&gt; class to fluently define the rule. In this example, we'll also specify the validation rules as an array instead of using the &lt;code&gt;|&lt;/code&gt; character to delimit the rules:</source>
          <target state="translated">유효성 검사기에서 사용자의 ID를 무시하도록 지시하기 위해 &lt;code&gt;Rule&lt;/code&gt; 클래스를 사용하여 규칙 을 유창하게 정의합니다. 이 예에서는 유효성 검사 규칙을 &lt;code&gt;|&lt;/code&gt; 규칙을 구분하는 문자 :</target>
        </trans-unit>
        <trans-unit id="0f5b3ba7a06a0003ff749cb0167a671213d82dc3" translate="yes" xml:space="preserve">
          <source>To join a presence channel, you may use Echo's &lt;code&gt;join&lt;/code&gt; method. The &lt;code&gt;join&lt;/code&gt; method will return a &lt;code&gt;PresenceChannel&lt;/code&gt; implementation which, along with exposing the &lt;code&gt;listen&lt;/code&gt; method, allows you to subscribe to the &lt;code&gt;here&lt;/code&gt;, &lt;code&gt;joining&lt;/code&gt;, and &lt;code&gt;leaving&lt;/code&gt; events.</source>
          <target state="translated">프레즌스 채널에 참여하려면 Echo의 &lt;code&gt;join&lt;/code&gt; 방법을 사용할 수 있습니다 . &lt;code&gt;join&lt;/code&gt; 방법은 반환 &lt;code&gt;PresenceChannel&lt;/code&gt; 의 (가) 노출과 함께, 구현 &lt;code&gt;listen&lt;/code&gt; , 당신이에 가입 할 수 있도록 방법을 &lt;code&gt;here&lt;/code&gt; , &lt;code&gt;joining&lt;/code&gt; 및 &lt;code&gt;leaving&lt;/code&gt; 이벤트를.</target>
        </trans-unit>
        <trans-unit id="bcc77c77d05fdd7ea30c76cdad2efbd139d55e21" translate="yes" xml:space="preserve">
          <source>To keep the &lt;code&gt;queue:work&lt;/code&gt; process running permanently in the background, you should use a process monitor such as &lt;a href=&quot;#supervisor-configuration&quot;&gt;Supervisor&lt;/a&gt; to ensure that the queue worker does not stop running.</source>
          <target state="translated">유지하기 위해 &lt;code&gt;queue:work&lt;/code&gt; 백그라운드에서 영구적으로 실행중인 프로세스를, 당신은 같은 프로세스 모니터를 사용한다 &lt;a href=&quot;#supervisor-configuration&quot;&gt;감독자&lt;/a&gt; 큐 노동자 실행을 중지하지 않도록.</target>
        </trans-unit>
        <trans-unit id="bfa358575ba19a7dab080df6fb5301f2b3f7c17c" translate="yes" xml:space="preserve">
          <source>To learn about Laravel's powerful validation features, let's look at a complete example of validating a form and displaying the error messages back to the user.</source>
          <target state="translated">Laravel의 강력한 유효성 검사 기능에 대해 알아 보려면 양식의 유효성을 검사하고 오류 메시지를 사용자에게 다시 표시하는 완전한 예를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="0cc31a3f61b4daf485409efb9173393c95070265" translate="yes" xml:space="preserve">
          <source>To learn more about Laravel Nova, check out the &lt;a href=&quot;https://nova.laravel.com&quot;&gt;Nova website&lt;/a&gt;.</source>
          <target state="translated">Laravel Nova에 대한 자세한 내용은 &lt;a href=&quot;https://nova.laravel.com&quot;&gt;Nova 웹 사이트를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="a7828286d9227e4c39b614e60f2e2cbec9673d82" translate="yes" xml:space="preserve">
          <source>To learn more about email verification, check out the &lt;a href=&quot;verification&quot;&gt;complete documentation&lt;/a&gt;.</source>
          <target state="translated">이메일 확인에 대한 자세한 내용은 &lt;a href=&quot;verification&quot;&gt;전체 설명서를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b70ff9d8212ccd283ce2b36b3901b4586f7d0c5" translate="yes" xml:space="preserve">
          <source>To learn more about the additional fields supported by Stripe or Braintree, check out Stripe's &lt;a href=&quot;https://stripe.com/docs/api#create_customer&quot;&gt;documentation on customer creation&lt;/a&gt; or the corresponding &lt;a href=&quot;https://developers.braintreepayments.com/reference/request/customer/create/php&quot;&gt;Braintree documentation&lt;/a&gt;.</source>
          <target state="translated">Stripe 또는 Braintree에서 지원하는 추가 필드에 대한 자세한 내용은 &lt;a href=&quot;https://stripe.com/docs/api#create_customer&quot;&gt;고객 생성에 대한&lt;/a&gt; Stripe 설명서 또는 해당 &lt;a href=&quot;https://developers.braintreepayments.com/reference/request/customer/create/php&quot;&gt;Braintree 설명서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f76a2ac2a112b3d048b0260774d1cf5713a19536" translate="yes" xml:space="preserve">
          <source>To leave a channel, you may call the &lt;code&gt;leave&lt;/code&gt; method on your Echo instance:</source>
          <target state="translated">채널을 나가 려면 Echo 인스턴스 에서 &lt;code&gt;leave&lt;/code&gt; 메소드를 호출하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="c37d53972e07bbb7ec8cd5d8372fe8de80442d7e" translate="yes" xml:space="preserve">
          <source>To limit the number of results returned from the query, or to skip a given number of results in the query, you may use the &lt;code&gt;skip&lt;/code&gt; and &lt;code&gt;take&lt;/code&gt; methods:</source>
          <target state="translated">쿼리에서 반환되는 결과 수를 제한하거나 쿼리에서 지정된 수의 결과를 &lt;code&gt;skip&lt;/code&gt; 려면 skip 및 &lt;code&gt;take&lt;/code&gt; 메서드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b3286189a5268807974bcf1577d15a0014734d68" translate="yes" xml:space="preserve">
          <source>To listen for client events, you may use the &lt;code&gt;listenForWhisper&lt;/code&gt; method:</source>
          <target state="translated">클라이언트 이벤트를 청취하려면 &lt;code&gt;listenForWhisper&lt;/code&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1ceab1d7ff97eaba9ae2f4d7db52057025ddf646" translate="yes" xml:space="preserve">
          <source>To load a relationship only when it has not already been loaded, use the &lt;code&gt;loadMissing&lt;/code&gt; method:</source>
          <target state="translated">아직로드되지 않은 경우에만 관계를로드하려면 &lt;code&gt;loadMissing&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5a0bfd48505fcbac7c32453f93682f5b70057cd8" translate="yes" xml:space="preserve">
          <source>To log a user into the application by their ID, you may use the &lt;code&gt;loginUsingId&lt;/code&gt; method. This method accepts the primary key of the user you wish to authenticate:</source>
          <target state="translated">ID로 사용자를 응용 프로그램에 로그인하려면 &lt;code&gt;loginUsingId&lt;/code&gt; 메소드를 사용할 수 있습니다 . 이 방법은 인증하려는 사용자의 기본 키를 승인합니다.</target>
        </trans-unit>
        <trans-unit id="f1af86d8c7d4145814422e4d86195204d874f142" translate="yes" xml:space="preserve">
          <source>To log users out of your application, you may use the &lt;code&gt;logout&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade. This will clear the authentication information in the user's session:</source>
          <target state="translated">애플리케이션에서 사용자를 로그 &lt;code&gt;logout&lt;/code&gt; 하려면 &lt;code&gt;Auth&lt;/code&gt; 파사드 에서 로그 아웃 방법을 사용할 수 있습니다 . 사용자 세션의 인증 정보가 지워집니다.</target>
        </trans-unit>
        <trans-unit id="43c753e15897941a6e9096a80d24fe4a0c004d36" translate="yes" xml:space="preserve">
          <source>To make this a cinch, Laravel utilizes the &lt;a href=&quot;https://github.com/vlucas/phpdotenv&quot;&gt;DotEnv&lt;/a&gt; PHP library by Vance Lucas. In a fresh Laravel installation, the root directory of your application will contain a &lt;code&gt;.env.example&lt;/code&gt; file. If you install Laravel via Composer, this file will automatically be renamed to &lt;code&gt;.env&lt;/code&gt;. Otherwise, you should rename the file manually.</source>
          <target state="translated">이 문제를 해결하기 위해 Laravel은 Vance Lucas 의 &lt;a href=&quot;https://github.com/vlucas/phpdotenv&quot;&gt;DotEnv&lt;/a&gt; PHP 라이브러리를 활용합니다 . 새로 설치 한 Laravel 설치에서는 응용 프로그램의 루트 디렉토리에 &lt;code&gt;.env.example&lt;/code&gt; 파일 이 포함 됩니다. Composer를 통해 Laravel을 설치하면이 파일의 이름이 자동으로 &lt;code&gt;.env&lt;/code&gt; 로 바뀝니다 . 그렇지 않으면 파일 이름을 수동으로 바꿔야합니다.</target>
        </trans-unit>
        <trans-unit id="6a1c306de784b0403b163c053d8dcee292005093" translate="yes" xml:space="preserve">
          <source>To manually log users out of your application, you may use the &lt;code&gt;logout&lt;/code&gt; method on the &lt;code&gt;Auth&lt;/code&gt; facade. This will clear the authentication information in the user's session:</source>
          <target state="translated">애플리케이션에서 사용자를 수동으로 로그 &lt;code&gt;logout&lt;/code&gt; 하려면 &lt;code&gt;Auth&lt;/code&gt; 파사드 에서 로그 아웃 방법을 사용할 수 있습니다 . 사용자 세션의 인증 정보가 지워집니다.</target>
        </trans-unit>
        <trans-unit id="b177887edd63645e620c90eb6c58dbdb25dc401e" translate="yes" xml:space="preserve">
          <source>To modify the form fields that are required when a new user registers with your application, or to customize how new users are stored into your database, you may modify the &lt;code&gt;RegisterController&lt;/code&gt; class. This class is responsible for validating and creating new users of your application.</source>
          <target state="translated">새 사용자가 응용 프로그램에 등록 할 때 필요한 양식 필드를 수정하거나 데이터베이스에 새 사용자가 저장되는 방식을 사용자 지정하려면 &lt;code&gt;RegisterController&lt;/code&gt; 클래스를 수정하면 됩니다. 이 클래스는 애플리케이션의 새 사용자를 확인하고 작성합니다.</target>
        </trans-unit>
        <trans-unit id="5a68ca117926f87761095293b212ce54709c931a" translate="yes" xml:space="preserve">
          <source>To obtain an instance of the current HTTP request via dependency injection, you should type-hint the &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; class on your controller method. The incoming request instance will automatically be injected by the &lt;a href=&quot;container&quot;&gt;service container&lt;/a&gt;:</source>
          <target state="translated">종속성 주입을 통해 현재 HTTP 요청의 인스턴스를 얻으 려면 컨트롤러 메소드 에서 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 클래스를 입력해야합니다. 들어오는 요청 인스턴스는 &lt;a href=&quot;container&quot;&gt;서비스 컨테이너에&lt;/a&gt; 의해 자동으로 주입됩니다 .</target>
        </trans-unit>
        <trans-unit id="84c24ecb9267dce66aaab63f0506714133e19e32" translate="yes" xml:space="preserve">
          <source>To pad to the left, you should specify a negative size. No padding will take place if the absolute value of the given size is less than or equal to the length of the array:</source>
          <target state="translated">왼쪽으로 채우려면 음수 크기를 지정해야합니다. 주어진 크기의 절대 값이 배열의 길이보다 작거나 같으면 패딩이 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d9e8b2d12ca581fc9be15172e53119f7c0a2c370" translate="yes" xml:space="preserve">
          <source>To perform a &quot;cross join&quot; use the &lt;code&gt;crossJoin&lt;/code&gt; method with the name of the table you wish to cross join to. Cross joins generate a cartesian product between the first table and the joined table:</source>
          <target state="translated">&quot;크로스 조인&quot;을 수행하려면 크로스 조인 하려는 테이블 이름과 함께 &lt;code&gt;crossJoin&lt;/code&gt; 메서드를 사용하십시오 . 교차 조인은 첫 번째 테이블과 조인 된 테이블 사이에 직교 곱을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="dd2928639fa94e8fdaa5af0de378f61ae57bf42a" translate="yes" xml:space="preserve">
          <source>To populate the default model with attributes, you may pass an array or Closure to the &lt;code&gt;withDefault&lt;/code&gt; method:</source>
          <target state="translated">기본 모델을 속성으로 채우려면 &lt;code&gt;withDefault&lt;/code&gt; 메소드에 배열 또는 클로저를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e112d842952bb50d6632ab8139a4db3aa9543ddf" translate="yes" xml:space="preserve">
          <source>To prompt newly registered users to verify their email, the &lt;code&gt;User&lt;/code&gt; model should be marked with the &lt;code&gt;MustVerifyEmail&lt;/code&gt; interface:</source>
          <target state="translated">새로 등록한 사용자에게 이메일을 확인하도록 프롬프트하려면 &lt;code&gt;User&lt;/code&gt; 모델에 &lt;code&gt;MustVerifyEmail&lt;/code&gt; 인터페이스 가 표시되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="a658cec1777fdaf2a72ee2c0f61899058838b748" translate="yes" xml:space="preserve">
          <source>To provision buckets, add a &lt;code&gt;buckets&lt;/code&gt; directive to your Homestead configuration file:</source>
          <target state="translated">버킷을 프로비저닝하려면 Homestead 구성 파일에 &lt;code&gt;buckets&lt;/code&gt; 지시문을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="ecd3aff0cabb741203c8b37c746b84dd56d22f03" translate="yes" xml:space="preserve">
          <source>To publish the Passport Vue components, use the &lt;code&gt;vendor:publish&lt;/code&gt; Artisan command:</source>
          <target state="translated">Passport Vue 구성 요소를 공개하려면 &lt;code&gt;vendor:publish&lt;/code&gt; Artisan 명령을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f625d39c7ae40b9b2ebecc6fd225f97e8e4926a" translate="yes" xml:space="preserve">
          <source>To quickly generate an API resource controller that does not include the &lt;code&gt;create&lt;/code&gt; or &lt;code&gt;edit&lt;/code&gt; methods, use the &lt;code&gt;--api&lt;/code&gt; switch when executing the &lt;code&gt;make:controller&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;create&lt;/code&gt; 또는 &lt;code&gt;edit&lt;/code&gt; 메소드를 포함하지 않는 API 자원 제어기를 빠르게 생성하려면 &lt;code&gt;make:controller&lt;/code&gt; 명령을 실행할 때 &lt;code&gt;--api&lt;/code&gt; 스위치를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f681e9527d46804e62ce3d973bc602db6addde03" translate="yes" xml:space="preserve">
          <source>To register an explicit binding, use the router's &lt;code&gt;model&lt;/code&gt; method to specify the class for a given parameter. You should define your explicit model bindings in the &lt;code&gt;boot&lt;/code&gt; method of the &lt;code&gt;RouteServiceProvider&lt;/code&gt; class:</source>
          <target state="translated">명시 적 바인딩을 등록하려면 라우터의 &lt;code&gt;model&lt;/code&gt; 메소드를 사용하여 지정된 매개 변수의 클래스를 지정하십시오. &lt;code&gt;RouteServiceProvider&lt;/code&gt; 클래스 의 &lt;code&gt;boot&lt;/code&gt; 메소드 에서 명시 적 모델 바인딩을 정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="63c2f2640fa276e69b0847e383151b11e1e1493e" translate="yes" xml:space="preserve">
          <source>To register an observer, use the &lt;code&gt;observe&lt;/code&gt; method on the model you wish to observe. You may register observers in the &lt;code&gt;boot&lt;/code&gt; method of one of your service providers. In this example, we'll register the observer in the &lt;code&gt;AppServiceProvider&lt;/code&gt;:</source>
          <target state="translated">관찰자를 등록하려면 &lt;code&gt;observe&lt;/code&gt; 하려는 모델 에서 관찰 방법을 사용하십시오 . 서비스 제공 업체 중 하나의 &lt;code&gt;boot&lt;/code&gt; 방법으로 관찰자를 등록 할 수 있습니다 . 이 예제에서는 &lt;code&gt;AppServiceProvider&lt;/code&gt; 에 옵저버를 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="1f64294a151b76e0743fad6ffa0391496aa35a36" translate="yes" xml:space="preserve">
          <source>To register the custom cache driver with Laravel, we will use the &lt;code&gt;extend&lt;/code&gt; method on the &lt;code&gt;Cache&lt;/code&gt; facade. The call to &lt;code&gt;Cache::extend&lt;/code&gt; could be done in the &lt;code&gt;boot&lt;/code&gt; method of the default &lt;code&gt;App\Providers\AppServiceProvider&lt;/code&gt; that ships with fresh Laravel applications, or you may create your own service provider to house the extension - just don't forget to register the provider in the &lt;code&gt;config/app.php&lt;/code&gt; provider array:</source>
          <target state="translated">Laravel에 커스텀 캐시 드라이버를 등록하기 위해 &lt;code&gt;Cache&lt;/code&gt; 파사드 에서 &lt;code&gt;extend&lt;/code&gt; 메소드를 사용합니다 . &lt;code&gt;Cache::extend&lt;/code&gt; 대한 호출 은 새로운 Laravel 응용 프로그램과 함께 &lt;code&gt;App\Providers\AppServiceProvider&lt;/code&gt; 되는 기본 App \ Providers \ AppServiceProvider 의 &lt;code&gt;boot&lt;/code&gt; 방법 으로 수행 하거나 확장을 수용 할 고유 한 서비스 공급자를 만들 수 있습니다. 에서 공급자 &lt;code&gt;config/app.php&lt;/code&gt; 제공 어레이 :</target>
        </trans-unit>
        <trans-unit id="4955bfe3d9802b5b5aebdf773b4b30168960f60e" translate="yes" xml:space="preserve">
          <source>To register your package's &lt;a href=&quot;views&quot;&gt;views&lt;/a&gt; with Laravel, you need to tell Laravel where the views are located. You may do this using the service provider's &lt;code&gt;loadViewsFrom&lt;/code&gt; method. The &lt;code&gt;loadViewsFrom&lt;/code&gt; method accepts two arguments: the path to your view templates and your package's name. For example, if your package's name is &lt;code&gt;courier&lt;/code&gt;, you would add the following to your service provider's &lt;code&gt;boot&lt;/code&gt; method:</source>
          <target state="translated">패키지의 &lt;a href=&quot;views&quot;&gt;뷰&lt;/a&gt; 를 Laravel에 등록하려면 뷰가있는 위치를 Laravel에 알려야합니다. 서비스 제공 업체의 &lt;code&gt;loadViewsFrom&lt;/code&gt; 메소드를 사용하여이를 수행 할 수 있습니다 . &lt;code&gt;loadViewsFrom&lt;/code&gt; 의 보기 템플릿과 패키지의 이름과 경로, 방법은 두 개의 인수를 사용할 수 있습니다. 예를 들어 패키지 이름이 &lt;code&gt;courier&lt;/code&gt; 인 경우 서비스 제공 업체의 &lt;code&gt;boot&lt;/code&gt; 방법에 다음을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="4e804e0cd1e82bc695ca7bfc167f4379e182ff7e" translate="yes" xml:space="preserve">
          <source>To register your package's Artisan commands with Laravel, you may use the &lt;code&gt;commands&lt;/code&gt; method. This method expects an array of command class names. Once the commands have been registered, you may execute them using the &lt;a href=&quot;artisan&quot;&gt;Artisan CLI&lt;/a&gt;:</source>
          <target state="translated">Laravel에 패키지의 Artisan 명령을 등록하기 위해 &lt;code&gt;commands&lt;/code&gt; 방법을 사용할 수 있습니다 . 이 메소드는 일련의 명령 클래스 이름이 필요합니다. 명령이 등록되면 &lt;a href=&quot;artisan&quot;&gt;Artisan CLI를&lt;/a&gt; 사용하여 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d886e9674dd87f6dfbc0393b2cfc1f6af17e668b" translate="yes" xml:space="preserve">
          <source>To register your provider, add it to the array:</source>
          <target state="translated">제공자를 등록하려면 배열에 제공자를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="7cf16f5dd77ed8590484b4aa1b36589e1289c4e9" translate="yes" xml:space="preserve">
          <source>To remove a record from your index, &lt;code&gt;delete&lt;/code&gt; the model from the database. This form of removal is even compatible with &lt;a href=&quot;eloquent#soft-deleting&quot;&gt;soft deleted&lt;/a&gt; models:</source>
          <target state="translated">색인에서 레코드를 제거하려면 데이터베이스에서 모델을 &lt;code&gt;delete&lt;/code&gt; 하십시오. 이 형태의 제거는 &lt;a href=&quot;eloquent#soft-deleting&quot;&gt;소프트 삭제 된&lt;/a&gt; 모델 과도 호환 됩니다 .</target>
        </trans-unit>
        <trans-unit id="2ea0dbb203616b2c33b4c78fac5b0ebb474e6ee9" translate="yes" xml:space="preserve">
          <source>To rename a column, you may use the &lt;code&gt;renameColumn&lt;/code&gt; method on the Schema builder. Before renaming a column, be sure to add the &lt;code&gt;doctrine/dbal&lt;/code&gt; dependency to your &lt;code&gt;composer.json&lt;/code&gt; file:</source>
          <target state="translated">열의 이름을 바꾸려면 스키마 빌더 에서 &lt;code&gt;renameColumn&lt;/code&gt; 메소드를 사용할 수 있습니다 . 열의 이름을 바꾸기 전에 &lt;code&gt;composer.json&lt;/code&gt; 파일에 &lt;code&gt;doctrine/dbal&lt;/code&gt; 종속성을 추가해야 합니다.</target>
        </trans-unit>
        <trans-unit id="091919443422939bcf786c9d5a36172e7d3ea5fb" translate="yes" xml:space="preserve">
          <source>To rename an existing database table, use the &lt;code&gt;rename&lt;/code&gt; method:</source>
          <target state="translated">기존 데이터베이스 테이블의 &lt;code&gt;rename&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="b7d86e81fb51dc803f08b538ef0729760adf01f2" translate="yes" xml:space="preserve">
          <source>To rename an index, you may use the &lt;code&gt;renameIndex&lt;/code&gt; method. This method accepts the current index name as its first argument and the desired name as its second argument:</source>
          <target state="translated">인덱스의 이름을 바꾸려면 &lt;code&gt;renameIndex&lt;/code&gt; 메서드를 사용할 수 있습니다 . 이 메소드는 현재 색인 이름을 첫 번째 인수로, 원하는 이름을 두 번째 인수로 승인합니다.</target>
        </trans-unit>
        <trans-unit id="22e9111b7229a39c7b002797027f32b6aa4b375f" translate="yes" xml:space="preserve">
          <source>To replace the place-holders when retrieving a translation string, pass an array of replacements as the second argument to the &lt;code&gt;__&lt;/code&gt; function:</source>
          <target state="translated">변환 문자열을 검색 할 때 자리 표시자를 바꾸려면 두 번째 인수로 대체 배열을 &lt;code&gt;__&lt;/code&gt; 함수에 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="852ec9ce100b766e1dabc067c6e4803b98d9951a" translate="yes" xml:space="preserve">
          <source>To retrieve a tagged cache item, pass the same ordered list of tags to the &lt;code&gt;tags&lt;/code&gt; method and then call the &lt;code&gt;get&lt;/code&gt; method with the key you wish to retrieve:</source>
          <target state="translated">태그가 지정된 캐시 항목을 검색하려면 동일한 순서의 태그 목록을 &lt;code&gt;tags&lt;/code&gt; 메소드에 전달한 다음 검색하려는 키를 사용하여 &lt;code&gt;get&lt;/code&gt; 메소드 를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="a1b0a43f7c2a176192bf75db791d4ce93ca401b7" translate="yes" xml:space="preserve">
          <source>To retrieve a token, make a request to the &lt;code&gt;oauth/token&lt;/code&gt; endpoint:</source>
          <target state="translated">토큰을 검색하려면 &lt;code&gt;oauth/token&lt;/code&gt; 엔드 포인트에 요청하십시오 .</target>
        </trans-unit>
        <trans-unit id="0d2350f50b7b6016e94fef9225160e2e9b1cf897" translate="yes" xml:space="preserve">
          <source>To retrieve an array of all messages for all fields, use the &lt;code&gt;all&lt;/code&gt; method:</source>
          <target state="translated">모든 필드의 모든 메시지 배열을 검색하려면 &lt;code&gt;all&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b2f4f59b930b73e675a934af295a04a5dc4d6b2" translate="yes" xml:space="preserve">
          <source>To retrieve flashed input from the previous request, use the &lt;code&gt;old&lt;/code&gt; method on the &lt;code&gt;Request&lt;/code&gt; instance. The &lt;code&gt;old&lt;/code&gt; method will pull the previously flashed input data from the &lt;a href=&quot;session&quot;&gt;session&lt;/a&gt;:</source>
          <target state="translated">이전 요청에서 플래시 입력을 검색하려면 &lt;code&gt;Request&lt;/code&gt; 인스턴스 에서 &lt;code&gt;old&lt;/code&gt; 메소드를 사용하십시오 . &lt;code&gt;old&lt;/code&gt; 방법은에서 이전에 번쩍 입력 데이터 끌어 &lt;a href=&quot;session&quot;&gt;세션&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="e57c65e4f2bd72a03408ba0dc409a66e477818a7" translate="yes" xml:space="preserve">
          <source>To retrieve the first error message for a given field, use the &lt;code&gt;first&lt;/code&gt; method:</source>
          <target state="translated">주어진 필드에 대한 첫 번째 오류 메시지를 검색하려면 첫 &lt;code&gt;first&lt;/code&gt; 방법을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="06261d6366d424e8f7f49293ca349c2da4fa2354" translate="yes" xml:space="preserve">
          <source>To retrieve the full URL for the incoming request you may use the &lt;code&gt;url&lt;/code&gt; or &lt;code&gt;fullUrl&lt;/code&gt; methods. The &lt;code&gt;url&lt;/code&gt; method will return the URL without the query string, while the &lt;code&gt;fullUrl&lt;/code&gt; method includes the query string:</source>
          <target state="translated">들어오는 요청에 대한 전체 URL을 검색하려면 &lt;code&gt;url&lt;/code&gt; 또는 &lt;code&gt;fullUrl&lt;/code&gt; 메소드를 사용할 수 있습니다 . &lt;code&gt;url&lt;/code&gt; 그동안 방법은 쿼리 문자열없이 URL을 반환합니다 &lt;code&gt;fullUrl&lt;/code&gt; 의 방법은 쿼리 문자열을 포함합니다 :</target>
        </trans-unit>
        <trans-unit id="98febc282d99e6f5006bbb2dab6f8dca54755f03" translate="yes" xml:space="preserve">
          <source>To retry all of your failed jobs, execute the &lt;code&gt;queue:retry&lt;/code&gt; command and pass &lt;code&gt;all&lt;/code&gt; as the ID:</source>
          <target state="translated">실패한 모든 작업을 재 시도하려면 &lt;code&gt;queue:retry&lt;/code&gt; 명령을 실행하고 &lt;code&gt;all&lt;/code&gt; ID로 전달 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a19cf952b23d5c0dfe2cca1b6d286a18bd777fab" translate="yes" xml:space="preserve">
          <source>To rollback the latest migration operation, you may use the &lt;code&gt;rollback&lt;/code&gt; command. This command rolls back the last &quot;batch&quot; of migrations, which may include multiple migration files:</source>
          <target state="translated">최신 마이그레이션 작업을 롤백하려면 사용할 수 있습니다 &lt;code&gt;rollback&lt;/code&gt; 명령을 사용합니다. 이 명령은 여러 마이그레이션 파일을 포함 할 수있는 마이그레이션의 마지막 &quot;일괄 처리&quot;를 롤백합니다.</target>
        </trans-unit>
        <trans-unit id="0b0b251fd25668f03a5a58fb1024ecc9911bd153" translate="yes" xml:space="preserve">
          <source>To route Slack notifications to the proper location, define a &lt;code&gt;routeNotificationForSlack&lt;/code&gt; method on your notifiable entity. This should return the webhook URL to which the notification should be delivered. Webhook URLs may be generated by adding an &quot;Incoming Webhook&quot; service to your Slack team:</source>
          <target state="translated">Slack 알림을 올바른 위치로 라우팅하려면 통지 가능한 엔티티에서 &lt;code&gt;routeNotificationForSlack&lt;/code&gt; 메소드를 정의 하십시오. 알림을 전달할 웹 후크 URL을 반환해야합니다. Slack 팀에 &quot;들어오는 Webhook&quot;서비스를 추가하여 Webhook URL을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0eee248e98f8dc83ec47097acb8f1532dbf0e472" translate="yes" xml:space="preserve">
          <source>To run Dusk tests on &lt;a href=&quot;https://codeship.com&quot;&gt;Codeship&lt;/a&gt;, add the following commands to your Codeship project. Of course, these commands are a starting point and you are free to add additional commands as needed:</source>
          <target state="translated">&lt;a href=&quot;https://codeship.com&quot;&gt;Codeship&lt;/a&gt; 에서 Dusk 테스트를 실행하려면 Codeship 프로젝트에 다음 명령을 추가하십시오. 물론 이러한 명령은 시작점이며 필요에 따라 추가 명령을 자유롭게 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d31cc4db2640b1cf27703620baca1d30eb79dfec" translate="yes" xml:space="preserve">
          <source>To run Dusk tests on &lt;a href=&quot;https://www.heroku.com/continuous-integration&quot;&gt;Heroku CI&lt;/a&gt;, add the following Google Chrome buildpack and scripts to your Heroku &lt;code&gt;app.json&lt;/code&gt; file:</source>
          <target state="translated">&lt;a href=&quot;https://www.heroku.com/continuous-integration&quot;&gt;Heroku CI&lt;/a&gt; 에서 Dusk 테스트를 실행하려면 Heroku &lt;code&gt;app.json&lt;/code&gt; 파일에 다음 Chrome 빌드 팩 및 스크립트를 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="5c5f3c001f9531ebe7ea39f41e92bd9fefd3c64a" translate="yes" xml:space="preserve">
          <source>To run a basic query, you may use the &lt;code&gt;select&lt;/code&gt; method on the &lt;code&gt;DB&lt;/code&gt; facade:</source>
          <target state="translated">기본 쿼리를 실행하려면 &lt;code&gt;DB&lt;/code&gt; 파사드 에서 &lt;code&gt;select&lt;/code&gt; 메소드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dfd619aec69135f0f0ee0aa42d7f4da5478081db" translate="yes" xml:space="preserve">
          <source>To run a task or story that is defined in your &lt;code&gt;Envoy.blade.php&lt;/code&gt; file, execute Envoy's &lt;code&gt;run&lt;/code&gt; command, passing the name of the task or story you would like to execute. Envoy will run the task and display the output from the servers as the task is running:</source>
          <target state="translated">&lt;code&gt;Envoy.blade.php&lt;/code&gt; 파일에 정의 된 작업 또는 스토리를 실행하려면 Envoy의 &lt;code&gt;run&lt;/code&gt; 명령을 실행하고 실행하려는 작업 또는 스토리의 이름을 전달하십시오. Envoy는 작업을 실행하고 작업이 실행될 때 서버의 출력을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="2bc24ae026ce6c07654f3e6d619b2b95c45df201" translate="yes" xml:space="preserve">
          <source>To run all of your outstanding migrations, execute the &lt;code&gt;migrate&lt;/code&gt; Artisan command:</source>
          <target state="translated">미해결 마이그레이션을 모두 실행하려면 &lt;code&gt;migrate&lt;/code&gt; Artisan 명령을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="70c9b37913abdec2921f6addabed896467532ba3" translate="yes" xml:space="preserve">
          <source>To run your Dusk tests on Travis CI, we will need to use the &quot;sudo-enabled&quot; Ubuntu 14.04 (Trusty) environment. Since Travis CI is not a graphical environment, we will need to take some extra steps in order to launch a Chrome browser. In addition, we will use &lt;code&gt;php artisan serve&lt;/code&gt; to launch PHP's built-in web server:</source>
          <target state="translated">Travis CI에서 Dusk 테스트를 실행하려면 &quot;sudo-enabled&quot;Ubuntu 14.04 (Trusty) 환경을 사용해야합니다. Travis CI는 그래픽 환경이 아니므로 Chrome 브라우저를 시작하려면 몇 가지 추가 단계를 수행해야합니다. 또한, PHP의 내장 웹 서버를 시작 &lt;code&gt;php artisan serve&lt;/code&gt; 위해 php artisan serve 를 사용할 것입니다 :</target>
        </trans-unit>
        <trans-unit id="274640fc6653319ed63a7271c53791fd1de95950" translate="yes" xml:space="preserve">
          <source>To run your browser tests, use the &lt;code&gt;dusk&lt;/code&gt; Artisan command:</source>
          <target state="translated">브라우저 테스트를 실행하려면 &lt;code&gt;dusk&lt;/code&gt; Artisan 명령을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0164429e41cfb9815e08a799b49fadb43f1086c9" translate="yes" xml:space="preserve">
          <source>To run your tests, use the &lt;code&gt;dusk&lt;/code&gt; Artisan command. The &lt;code&gt;dusk&lt;/code&gt; command accepts any argument that is also accepted by the &lt;code&gt;phpunit&lt;/code&gt; command:</source>
          <target state="translated">테스트를 실행하려면 &lt;code&gt;dusk&lt;/code&gt; Artisan 명령을 사용하십시오 . &lt;code&gt;dusk&lt;/code&gt; 명령은 또한에 의해 허용되는 모든 인수 받아 &lt;code&gt;phpunit&lt;/code&gt; 을의 명령을 :</target>
        </trans-unit>
        <trans-unit id="50e719da114a389fd0cfd15cad6929e14e53000c" translate="yes" xml:space="preserve">
          <source>To see a listing of all of your linked directories, run the &lt;code&gt;valet links&lt;/code&gt; command. You may use &lt;code&gt;valet unlink app-name&lt;/code&gt; to destroy the symbolic link.</source>
          <target state="translated">연결된 모든 디렉토리의 목록을 보려면 &lt;code&gt;valet links&lt;/code&gt; 명령을 실행하십시오 . &lt;code&gt;valet unlink app-name&lt;/code&gt; 을 사용하여 심볼릭 링크를 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e74b65d829df09348616f1e34fd27f32303591c8" translate="yes" xml:space="preserve">
          <source>To see how read / write connections should be configured, let's look at this example:</source>
          <target state="translated">읽기 / 쓰기 연결을 구성하는 방법을 보려면 다음 예를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="c752cb6564d9dd8476b9d1d2f5b0bab4bf401e07" translate="yes" xml:space="preserve">
          <source>To select a value in a dropdown selection box, you may use the &lt;code&gt;select&lt;/code&gt; method. Like the &lt;code&gt;type&lt;/code&gt; method, the &lt;code&gt;select&lt;/code&gt; method does not require a full CSS selector. When passing a value to the &lt;code&gt;select&lt;/code&gt; method, you should pass the underlying option value instead of the display text:</source>
          <target state="translated">드롭 다운 선택 상자에 값을 선택하려면, 당신은 사용할 수 있습니다 &lt;code&gt;select&lt;/code&gt; 방법. &lt;code&gt;type&lt;/code&gt; 메소드 와 마찬가지로 &lt;code&gt;select&lt;/code&gt; 메소드에는 전체 CSS 선택기가 필요하지 않습니다. &lt;code&gt;select&lt;/code&gt; 메소드에 값을 전달할 때 표시 텍스트 대신 기본 옵션 값을 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="33024ce9a7a13a8292fae73a16aa2c7aeaa9614b" translate="yes" xml:space="preserve">
          <source>To send a message, use the &lt;code&gt;to&lt;/code&gt; method on the &lt;code&gt;Mail&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;. The &lt;code&gt;to&lt;/code&gt; method accepts an email address, a user instance, or a collection of users. If you pass an object or collection of objects, the mailer will automatically use their &lt;code&gt;email&lt;/code&gt; and &lt;code&gt;name&lt;/code&gt; properties when setting the email recipients, so make sure these attributes are available on your objects. Once you have specified your recipients, you may pass an instance of your mailable class to the &lt;code&gt;send&lt;/code&gt; method:</source>
          <target state="translated">메시지를 보내려면 &lt;code&gt;Mail&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;파사드&lt;/a&gt; 에서 &lt;code&gt;to&lt;/code&gt; 메소드를 사용하십시오 . &lt;code&gt;to&lt;/code&gt; 방법은 이메일 주소, 사용자 인스턴스, 또는 사용자의 컬렉션을 받아들입니다. 객체 또는 객체 모음을 전달하면 전자 메일 수신자가 전자 메일 수신자를 설정할 때 &lt;code&gt;email&lt;/code&gt; 및 &lt;code&gt;name&lt;/code&gt; 속성을 자동으로 사용 하므로 이러한 속성을 객체에서 사용할 수 있는지 확인하십시오. 수신자를 지정한 후에는 mailable 클래스의 인스턴스를 &lt;code&gt;send&lt;/code&gt; 메소드로 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e911bd07326bc5e0b2797563b265082bbbcbd131" translate="yes" xml:space="preserve">
          <source>To send output to the console, use the &lt;code&gt;line&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;comment&lt;/code&gt;, &lt;code&gt;question&lt;/code&gt; and &lt;code&gt;error&lt;/code&gt; methods. Each of these methods will use appropriate ANSI colors for their purpose. For example, let's display some general information to the user. Typically, the &lt;code&gt;info&lt;/code&gt; method will display in the console as green text:</source>
          <target state="translated">콘솔에 출력을 보내려면 &lt;code&gt;line&lt;/code&gt; , &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;comment&lt;/code&gt; , &lt;code&gt;question&lt;/code&gt; 및 &lt;code&gt;error&lt;/code&gt; 메소드를 사용하십시오. 이러한 각 방법은 용도에 따라 적절한 ANSI 색상을 사용합니다. 예를 들어, 일반적인 정보를 사용자에게 표시해 봅시다. 일반적으로 &lt;code&gt;info&lt;/code&gt; 메소드는 콘솔에 녹색 텍스트로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="b4c4eac2b9a0b17f7abb9dabb449f62f5ef72c94" translate="yes" xml:space="preserve">
          <source>To send the notification to a channel: &lt;code&gt;#channel&lt;/code&gt;</source>
          <target state="translated">채널에 알림을 보내려면 &lt;code&gt;#channel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="012f6d29c8a89afe305855925b2f868b4abe3260" translate="yes" xml:space="preserve">
          <source>To send the notification to a user: &lt;code&gt;@user&lt;/code&gt;</source>
          <target state="translated">사용자에게 알림을 보내려면 : &lt;code&gt;@user&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f565fb954039d44527ee2e09a8a477f33a2e7d3" translate="yes" xml:space="preserve">
          <source>To set configuration values at runtime, pass an array to the &lt;code&gt;config&lt;/code&gt; helper:</source>
          <target state="translated">런타임에 구성 값을 설정하려면 배열을 &lt;code&gt;config&lt;/code&gt; 도우미에 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="72bd3612beb87bc532614cc809ca66cf02d4768d" translate="yes" xml:space="preserve">
          <source>To share a site, navigate to the site's directory in your terminal and run the &lt;code&gt;valet share&lt;/code&gt; command. A publicly accessible URL will be inserted into your clipboard and is ready to paste directly into your browser. That's it.</source>
          <target state="translated">사이트를 공유하려면 터미널에서 사이트의 디렉토리로 이동하여 &lt;code&gt;valet share&lt;/code&gt; 명령을 실행하십시오 . 공개적으로 액세스 할 수있는 URL이 클립 보드에 삽입되고 브라우저에 직접 붙여 넣을 수 있습니다. 그게 다야.</target>
        </trans-unit>
        <trans-unit id="408d422a25f98e3f349a02f74e197ec6e23a7609" translate="yes" xml:space="preserve">
          <source>To solve this problem, Homestead includes its own &lt;code&gt;share&lt;/code&gt; command. To get started, SSH into your Homestead machine via &lt;code&gt;vagrant ssh&lt;/code&gt; and run &lt;code&gt;share homestead.test&lt;/code&gt;. This will share the &lt;code&gt;homestead.test&lt;/code&gt; site from your &lt;code&gt;Homestead.yaml&lt;/code&gt; configuration file. Of course, you may substitute any of your other configured sites for &lt;code&gt;homestead.test&lt;/code&gt;:</source>
          <target state="translated">이 문제를 해결하기 위해 Homestead에는 자체 &lt;code&gt;share&lt;/code&gt; 명령이 포함되어 있습니다. 시작하려면 &lt;code&gt;vagrant ssh&lt;/code&gt; 를 통해 Homestead 시스템에 SSH를 연결 하고 &lt;code&gt;share homestead.test&lt;/code&gt; 를 실행하십시오 . &lt;code&gt;Homestead.yaml&lt;/code&gt; 구성 파일 에서 &lt;code&gt;homestead.test&lt;/code&gt; 사이트를 공유 합니다. 물론 &lt;code&gt;homestead.test&lt;/code&gt; 를 위해 다른 구성된 사이트를 대체 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5003241dc2806635639ac36df2f7638a8707f658" translate="yes" xml:space="preserve">
          <source>To solve this, you may use the &lt;code&gt;App\Http\Middleware\TrustProxies&lt;/code&gt; middleware that is included in your Laravel application, which allows you to quickly customize the load balancers or proxies that should be trusted by your application. Your trusted proxies should be listed as an array on the &lt;code&gt;$proxies&lt;/code&gt; property of this middleware. In addition to configuring the trusted proxies, you may configure the proxy &lt;code&gt;$headers&lt;/code&gt; that should be trusted:</source>
          <target state="translated">이 문제를 해결하기 위해 Laravel 응용 프로그램에 포함 된 &lt;code&gt;App\Http\Middleware\TrustProxies&lt;/code&gt; 미들웨어를 사용하면 응용 프로그램에서 신뢰할 수있는로드 밸런서 또는 프록시를 신속하게 사용자 정의 할 수 있습니다. 신뢰할 수있는 프록시는 이 미들웨어 의 &lt;code&gt;$proxies&lt;/code&gt; 특성에 배열로 나열되어야합니다 . 신뢰할 수있는 프록시 구성 외에도 신뢰할 수있는 프록시 &lt;code&gt;$headers&lt;/code&gt; 를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de37e9d3f52c9080ca391c0a59874bc0987e413c" translate="yes" xml:space="preserve">
          <source>To specify that a listener should be queued, add the &lt;code&gt;ShouldQueue&lt;/code&gt; interface to the listener class. Listeners generated by the &lt;code&gt;event:generate&lt;/code&gt; Artisan command already have this interface imported into the current namespace, so you can use it immediately:</source>
          <target state="translated">리스너가 큐잉되도록 지정하려면 &lt;code&gt;ShouldQueue&lt;/code&gt; 인터페이스를 리스너 클래스에 추가하십시오 . &lt;code&gt;event:generate&lt;/code&gt; Artisan 명령으로 생성 된 리스너는 이미이 인터페이스를 현재 네임 스페이스로 가져 왔으므로 즉시 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5160d2f61f2d57dd3eab6df4d0eecf9dbaab8f7" translate="yes" xml:space="preserve">
          <source>To specify the tax percentage a user pays on a subscription, implement the &lt;code&gt;taxPercentage&lt;/code&gt; method on your billable model, and return a numeric value between 0 and 100, with no more than 2 decimal places.</source>
          <target state="translated">사용자가 구독에 대해 지불하는 세금 비율을 지정하려면 청구 가능 모델 에서 &lt;code&gt;taxPercentage&lt;/code&gt; 메소드를 구현하고 소수점 이하 두 자리 이하의 0에서 100 사이의 숫자 값을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="03022980f93ad930997c926628f2cc392341ecb4" translate="yes" xml:space="preserve">
          <source>To start a worker that verifies that all of the &lt;code&gt;high&lt;/code&gt; queue jobs are processed before continuing to any jobs on the &lt;code&gt;low&lt;/code&gt; queue, pass a comma-delimited list of queue names to the &lt;code&gt;work&lt;/code&gt; command:</source>
          <target state="translated">&lt;code&gt;low&lt;/code&gt; 대기열의 작업을 계속하기 전에 모든 &lt;code&gt;high&lt;/code&gt; 대기열 작업이 처리 되는지 확인하는 작업자를 시작하려면 쉼표로 구분 된 대기열 이름 목록을 &lt;code&gt;work&lt;/code&gt; 명령에 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="1fb3cd9803c7024ebe63c024226492f11eff5663" translate="yes" xml:space="preserve">
          <source>To stop sharing your site, hit &lt;code&gt;Control + C&lt;/code&gt; to cancel the process.</source>
          <target state="translated">사이트 공유를 중지하려면 &lt;code&gt;Control + C&lt;/code&gt; 를 눌러 프로세스를 취소하십시오.</target>
        </trans-unit>
        <trans-unit id="5d0d2fb5c813ce7dad4bfb3f46c9bb677e53678f" translate="yes" xml:space="preserve">
          <source>To store an uploaded file, you will typically use one of your configured &lt;a href=&quot;filesystem&quot;&gt;filesystems&lt;/a&gt;. The &lt;code&gt;UploadedFile&lt;/code&gt; class has a &lt;code&gt;store&lt;/code&gt; method which will move an uploaded file to one of your disks, which may be a location on your local filesystem or even a cloud storage location like Amazon S3.</source>
          <target state="translated">업로드 된 파일을 저장하려면 일반적으로 구성된 &lt;a href=&quot;filesystem&quot;&gt;파일 시스템&lt;/a&gt; 중 하나를 사용합니다 . &lt;code&gt;UploadedFile&lt;/code&gt; 의 클래스는이 &lt;code&gt;store&lt;/code&gt; 아마존 S3와 같은 로컬 파일 시스템의 위치 또는 클라우드 저장 위치 될 수있다 당신의 디스크 중 하나에 업로드 된 파일을 이동 방법.</target>
        </trans-unit>
        <trans-unit id="6d699ccecc16ce70fe4a3a3bf58dff3ebbd9674f" translate="yes" xml:space="preserve">
          <source>To store data in the session, you will typically use the &lt;code&gt;put&lt;/code&gt; method or the &lt;code&gt;session&lt;/code&gt; helper:</source>
          <target state="translated">세션에 데이터를 저장하려면 일반적으로 &lt;code&gt;put&lt;/code&gt; 메소드 또는 &lt;code&gt;session&lt;/code&gt; 헬퍼를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ebb9055994a5e15c542c8811d58de296afc3c9fd" translate="yes" xml:space="preserve">
          <source>To update a searchable model, you only need to update the model instance's properties and &lt;code&gt;save&lt;/code&gt; the model to your database. Scout will automatically persist the changes to your search index:</source>
          <target state="translated">검색 가능한 모델을 업데이트하려면 모델 인스턴스의 속성 만 업데이트 하고 모델을 데이터베이스에 &lt;code&gt;save&lt;/code&gt; 하면됩니다. 스카우트는 검색 색인에 대한 변경 사항을 자동으로 유지합니다.</target>
        </trans-unit>
        <trans-unit id="d18b35ed671e2ef1c1cabd5fc2c3895389243826" translate="yes" xml:space="preserve">
          <source>To use the Amazon SES driver you must first install the Amazon AWS SDK for PHP. You may install this library by adding the following line to your &lt;code&gt;composer.json&lt;/code&gt; file's &lt;code&gt;require&lt;/code&gt; section and running the &lt;code&gt;composer update&lt;/code&gt; command:</source>
          <target state="translated">Amazon SES 드라이버를 사용하려면 먼저 PHP 용 Amazon AWS SDK를 설치해야합니다. &lt;code&gt;composer.json&lt;/code&gt; 파일의 &lt;code&gt;require&lt;/code&gt; 섹션에 다음 줄을 추가 하고 &lt;code&gt;composer update&lt;/code&gt; 명령을 실행 하여이 라이브러리를 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1a4680d48e665e82f308c6e0e49cf767d02ec0db" translate="yes" xml:space="preserve">
          <source>To use the Mailgun driver, first install Guzzle, then set the &lt;code&gt;driver&lt;/code&gt; option in your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file to &lt;code&gt;mailgun&lt;/code&gt;. Next, verify that your &lt;code&gt;config/services.php&lt;/code&gt; configuration file contains the following options:</source>
          <target state="translated">Mailgun 드라이버를 사용하려면 먼저 목구멍를 설치 한 후 설정 &lt;code&gt;driver&lt;/code&gt; 사용자의 옵션 &lt;code&gt;config/mail.php&lt;/code&gt; 에 구성 파일 &lt;code&gt;mailgun&lt;/code&gt; 을 . 그런 다음 &lt;code&gt;config/services.php&lt;/code&gt; 구성 파일에 다음 옵션이 포함되어 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="5456ec815d98a4f0478a171a3b5c15982bf1b522" translate="yes" xml:space="preserve">
          <source>To use the Parallels provider, you will need to install &lt;a href=&quot;https://github.com/Parallels/vagrant-parallels&quot;&gt;Parallels Vagrant plug-in&lt;/a&gt;. It is free of charge.</source>
          <target state="translated">Parallels 제공자를 사용하려면 &lt;a href=&quot;https://github.com/Parallels/vagrant-parallels&quot;&gt;Parallels Vagrant 플러그인&lt;/a&gt; 을 설치해야합니다 . 무료입니다.</target>
        </trans-unit>
        <trans-unit id="37b80d826cf8e98e029e071484ac960d39fec3f1" translate="yes" xml:space="preserve">
          <source>To use the SparkPost driver, first install Guzzle, then set the &lt;code&gt;driver&lt;/code&gt; option in your &lt;code&gt;config/mail.php&lt;/code&gt; configuration file to &lt;code&gt;sparkpost&lt;/code&gt;. Next, verify that your &lt;code&gt;config/services.php&lt;/code&gt; configuration file contains the following options:</source>
          <target state="translated">SparkPost 드라이버를 사용하려면 먼저 목구멍를 설치 한 후 설정 &lt;code&gt;driver&lt;/code&gt; 사용자의 옵션 &lt;code&gt;config/mail.php&lt;/code&gt; 에 구성 파일 &lt;code&gt;sparkpost&lt;/code&gt; 을 . 그런 다음 &lt;code&gt;config/services.php&lt;/code&gt; 구성 파일에 다음 옵션이 포함되어 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="dc2e7402bf828827a6371d7d30851e598725ca53" translate="yes" xml:space="preserve">
          <source>To use the VMware provider, you will need to purchase both VMware Fusion / Workstation and the &lt;a href=&quot;https://www.vagrantup.com/vmware&quot;&gt;VMware Vagrant plug-in&lt;/a&gt;. Though it is not free, VMware can provide faster shared folder performance out of the box.</source>
          <target state="translated">VMware 제공자를 사용하려면 VMware Fusion / Workstation 및 &lt;a href=&quot;https://www.vagrantup.com/vmware&quot;&gt;VMware Vagrant 플러그인을&lt;/a&gt; 모두 구매해야합니다 . 무료는 아니지만 VMware는 기본적으로 더 빠른 공유 폴더 성능을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdaf40746f822e29cd470ac01215f4bf3192ff4b" translate="yes" xml:space="preserve">
          <source>To use the command, navigate to one of your projects and run &lt;code&gt;valet link app-name&lt;/code&gt; in your terminal. Valet will create a symbolic link in &lt;code&gt;~/.config/valet/Sites&lt;/code&gt; which points to your current working directory.</source>
          <target state="translated">이 명령을 사용하려면 프로젝트 중 하나를 탐색하고 터미널에서 &lt;code&gt;valet link app-name&lt;/code&gt; 을 실행하십시오. Valet는 &lt;code&gt;~/.config/valet/Sites&lt;/code&gt; 에 현재 작업 디렉토리를 가리키는 심볼릭 링크를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="be252639f123264102fa20868380715d248036e4" translate="yes" xml:space="preserve">
          <source>To use the component in your application, you may drop it into one of your HTML templates. For example, after running the &lt;code&gt;make:auth&lt;/code&gt; Artisan command to scaffold your application's authentication and registration screens, you could drop the component into the &lt;code&gt;home.blade.php&lt;/code&gt; Blade template:</source>
          <target state="translated">애플리케이션에서 컴포넌트를 사용하기 위해 HTML 템플리트 중 하나에 드롭 할 수 있습니다. 예를 들어, &lt;code&gt;make:auth&lt;/code&gt; Artisan 명령을 실행하여 응용 프로그램의 인증 및 등록 화면을 스캐 폴딩 한 후 구성 요소를 &lt;code&gt;home.blade.php&lt;/code&gt; Blade 템플릿에 놓을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c94ea6183f85438b68072f066dc504634440a67a" translate="yes" xml:space="preserve">
          <source>To utilize the PhpRedis extension, you should change the &lt;code&gt;client&lt;/code&gt; option of your Redis configuration to &lt;code&gt;phpredis&lt;/code&gt;. This option is found in your &lt;code&gt;config/database.php&lt;/code&gt; configuration file:</source>
          <target state="translated">PhpRedis 확장을 활용하려면 Redis 구성 의 &lt;code&gt;client&lt;/code&gt; 옵션을 &lt;code&gt;phpredis&lt;/code&gt; 로 변경해야합니다 . 이 옵션은 &lt;code&gt;config/database.php&lt;/code&gt; 구성 파일에 있습니다 :</target>
        </trans-unit>
        <trans-unit id="6ff342e54e4dfe7e4bff2ec6db5f8a7164354dc7" translate="yes" xml:space="preserve">
          <source>To utilize this feature, your application must be using the &lt;code&gt;memcached&lt;/code&gt; or &lt;code&gt;redis&lt;/code&gt; cache driver as your application's default cache driver. In addition, all servers must be communicating with the same central cache server.</source>
          <target state="translated">이 기능을 사용하려면 응용 프로그램에서 &lt;code&gt;memcached&lt;/code&gt; 또는 &lt;code&gt;redis&lt;/code&gt; 캐시 드라이버를 응용 프로그램의 기본 캐시 드라이버로 사용해야합니다 . 또한 모든 서버는 동일한 중앙 캐시 서버와 통신해야합니다.</target>
        </trans-unit>
        <trans-unit id="60fd09be655e90ac7cca0abc9d4c7425c94abffc" translate="yes" xml:space="preserve">
          <source>To verify that an incoming request has a valid signature, you should call the &lt;code&gt;hasValidSignature&lt;/code&gt; method on the incoming &lt;code&gt;Request&lt;/code&gt;:</source>
          <target state="translated">들어오는 요청이 유효한 서명이 있는지 확인하려면 호출해야 &lt;code&gt;hasValidSignature&lt;/code&gt; 의 수신에 방법 &lt;code&gt;Request&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="61a47584d8a0ca2dae5114b003e8ac7a2b82a89a" translate="yes" xml:space="preserve">
          <source>To view all of your failed jobs that have been inserted into your &lt;code&gt;failed_jobs&lt;/code&gt; database table, you may use the &lt;code&gt;queue:failed&lt;/code&gt; Artisan command:</source>
          <target state="translated">&lt;code&gt;failed_jobs&lt;/code&gt; 데이터베이스 테이블 에 삽입 된 모든 실패한 작업을 보려면 &lt;code&gt;queue:failed&lt;/code&gt; Artisan 명령을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="142c9559c12bc88a498471d2875a6e5b576e2c3c" translate="yes" xml:space="preserve">
          <source>Toggles a model (or models) from the parent.</source>
          <target state="translated">부모에서 모델을 토글합니다.</target>
        </trans-unit>
        <trans-unit id="ee2c1396902d1faccb1000191f15eada0b7cead5" translate="yes" xml:space="preserve">
          <source>Toggling Associations</source>
          <target state="translated">토글 링 협회</target>
        </trans-unit>
        <trans-unit id="8d14891c995d2727a52d38ab9fa25843708c9757" translate="yes" xml:space="preserve">
          <source>Token Lifetimes</source>
          <target state="translated">토큰 수명</target>
        </trans-unit>
        <trans-unit id="84e5bcc2ff3dea8e9ea28f1827069745d1dde3eb" translate="yes" xml:space="preserve">
          <source>Token Scopes</source>
          <target state="translated">토큰 범위</target>
        </trans-unit>
        <trans-unit id="bf235e0182bbd24fc2b791146dbfdf86334dd481" translate="yes" xml:space="preserve">
          <source>TokenGuard</source>
          <target state="translated">TokenGuard</target>
        </trans-unit>
        <trans-unit id="f30e15f1fa9c1a5837f0d74d5fdb64898ac7ee3a" translate="yes" xml:space="preserve">
          <source>TokenGuard (Auth)</source>
          <target state="translated">토큰 가드 (Auth)</target>
        </trans-unit>
        <trans-unit id="0fc0a9bffac4e4ac2a6d1e45fbefcf153089bada" translate="yes" xml:space="preserve">
          <source>TokenGuard::__construct()</source>
          <target state="translated">TokenGuard::__construct()</target>
        </trans-unit>
        <trans-unit id="693775f5f6bc5cb2d4663583beb20258a25b49db" translate="yes" xml:space="preserve">
          <source>TokenGuard::getTokenForRequest()</source>
          <target state="translated">TokenGuard::getTokenForRequest()</target>
        </trans-unit>
        <trans-unit id="3f1238fd1d435050b35d1e13f16c2dfcc5935fd2" translate="yes" xml:space="preserve">
          <source>TokenGuard::setRequest()</source>
          <target state="translated">TokenGuard::setRequest()</target>
        </trans-unit>
        <trans-unit id="60361033b9a7112c72880d3d4ea25fc7bf09eaf2" translate="yes" xml:space="preserve">
          <source>TokenGuard::user()</source>
          <target state="translated">TokenGuard::user()</target>
        </trans-unit>
        <trans-unit id="aac0dfb9633188bc0874c81a88c5b0ddbf84d2de" translate="yes" xml:space="preserve">
          <source>TokenGuard::validate()</source>
          <target state="translated">TokenGuard::validate()</target>
        </trans-unit>
        <trans-unit id="908161a439bc03926da251ac31a2db7435b8cec7" translate="yes" xml:space="preserve">
          <source>TokenMismatchException</source>
          <target state="translated">TokenMismatchException</target>
        </trans-unit>
        <trans-unit id="a32521282ec075ccd27b1bc8699f4dc2df3bba01" translate="yes" xml:space="preserve">
          <source>TokenMismatchException (Session)</source>
          <target state="translated">TokenMismatchException (세션)</target>
        </trans-unit>
        <trans-unit id="ebea413aec80f97277983277db2b060232fcd712" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface</source>
          <target state="translated">TokenRepositoryInterface</target>
        </trans-unit>
        <trans-unit id="983e37abb7af88e275399dbc99365f08cef32051" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface (Auth\Passwords)</source>
          <target state="translated">토큰 리포지토리 인터페이스 (Auth \ Passwords)</target>
        </trans-unit>
        <trans-unit id="1c642a02e26200dcf5bcbadc6683344bbe2add69" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface::create()</source>
          <target state="translated">TokenRepositoryInterface::create()</target>
        </trans-unit>
        <trans-unit id="4561ceedb81c4d444a0001024c84b704d6a3a9e8" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface::delete()</source>
          <target state="translated">TokenRepositoryInterface::delete()</target>
        </trans-unit>
        <trans-unit id="2a3fdbfff361ed69fe9642fd3c48bec16bf2c203" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface::deleteExpired()</source>
          <target state="translated">TokenRepositoryInterface::deleteExpired()</target>
        </trans-unit>
        <trans-unit id="2d8b212bf5a8c438b1c31d8eca4002f15839ab48" translate="yes" xml:space="preserve">
          <source>TokenRepositoryInterface::exists()</source>
          <target state="translated">TokenRepositoryInterface::exists()</target>
        </trans-unit>
        <trans-unit id="6133bf55a4cbf57f5e103520a84d7ead14df13c6" translate="yes" xml:space="preserve">
          <source>Tokenizer PHP Extension</source>
          <target state="translated">토큰 화기 PHP 확장</target>
        </trans-unit>
        <trans-unit id="3f552db8e66c5a451cc8a623fff824ec72c31ca4" translate="yes" xml:space="preserve">
          <source>Top Level Meta Data</source>
          <target state="translated">최상위 메타 데이터</target>
        </trans-unit>
        <trans-unit id="3983cc8a2992b1d4a225bd7f7f25e794d2d2473d" translate="yes" xml:space="preserve">
          <source>Touch all of the related models for the relationship.</source>
          <target state="translated">관계에 대한 모든 관련 모델을 터치하십시오.</target>
        </trans-unit>
        <trans-unit id="e8839e6d532510bd74417c5e8840972a0969c96e" translate="yes" xml:space="preserve">
          <source>Touch the owning relations of the model.</source>
          <target state="translated">모델의 소유 관계를 터치하십시오.</target>
        </trans-unit>
        <trans-unit id="0f5b54507e68fc572bd10613f006a543f5471cf5" translate="yes" xml:space="preserve">
          <source>Touching Parent Timestamps</source>
          <target state="translated">감동적인 부모 타임 스탬프</target>
        </trans-unit>
        <trans-unit id="d1a616085a1a99a58e14bafaa350abc6783a3160" translate="yes" xml:space="preserve">
          <source>Traits</source>
          <target state="translated">Traits</target>
        </trans-unit>
        <trans-unit id="8dfe0518202854295bdaef3a304bdb0527048e30" translate="yes" xml:space="preserve">
          <source>TransactionBeginning</source>
          <target state="translated">TransactionBeginning</target>
        </trans-unit>
        <trans-unit id="948b0e5da336f07d6c4b6bd3c587812881797c95" translate="yes" xml:space="preserve">
          <source>TransactionBeginning (Database\Events)</source>
          <target state="translated">트랜잭션 시작 (데이터베이스 \ 이벤트)</target>
        </trans-unit>
        <trans-unit id="7a702855cbe75e18b011ba230077fa47dd021f60" translate="yes" xml:space="preserve">
          <source>TransactionCommitted</source>
          <target state="translated">TransactionCommitted</target>
        </trans-unit>
        <trans-unit id="958e4e566c24961dc635533a70d51579307d0a2c" translate="yes" xml:space="preserve">
          <source>TransactionCommitted (Database\Events)</source>
          <target state="translated">TransactionCommitted (데이터베이스 \ 이벤트)</target>
        </trans-unit>
        <trans-unit id="b465884757971fffe7310b98cda554b8c64e365d" translate="yes" xml:space="preserve">
          <source>TransactionRolledBack</source>
          <target state="translated">TransactionRolledBack</target>
        </trans-unit>
        <trans-unit id="952c0d09b11628c8783f68ddc7ccfea96222d62f" translate="yes" xml:space="preserve">
          <source>TransactionRolledBack (Database\Events)</source>
          <target state="translated">TransactionRolledBack (데이터베이스 \ 이벤트)</target>
        </trans-unit>
        <trans-unit id="15108eb0cf869073104791753d6f6c249da3c412" translate="yes" xml:space="preserve">
          <source>Transform an array of attributes to their displayable form.</source>
          <target state="translated">속성 배열을 표시 가능한 형식으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="a176fa9cf30f846b0f6b2ab728e47610cabf1aab" translate="yes" xml:space="preserve">
          <source>Transform each item in the collection using a callback.</source>
          <target state="translated">콜백을 사용하여 컬렉션의 각 항목을 변환합니다.</target>
        </trans-unit>
        <trans-unit id="44e7099521c5a6413c38f633fcddaa97bb34b6c0" translate="yes" xml:space="preserve">
          <source>Transform the given value if it is present.</source>
          <target state="translated">주어진 값이 있으면 변환합니다.</target>
        </trans-unit>
        <trans-unit id="d7f291ff11311edb3962c96eef070674aa65c1d6" translate="yes" xml:space="preserve">
          <source>Transform the given value.</source>
          <target state="translated">주어진 값을 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="63c21a595a215720e2fe8d9a1021b5217023eff5" translate="yes" xml:space="preserve">
          <source>Transform the resource into a JSON array.</source>
          <target state="translated">리소스를 JSON 배열로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="7ffc15a9d1c7de7e27d42d519c77cfbc794b8b53" translate="yes" xml:space="preserve">
          <source>Transform the resource into an HTTP response.</source>
          <target state="translated">자원을 HTTP 응답으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="4421731ff5e6f6ca8c55643a26beb613c6ab28ef" translate="yes" xml:space="preserve">
          <source>Transform the resource into an array.</source>
          <target state="translated">자원을 배열로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="8155ddfb1d9c3f2785e625776c5fd22e1cf7e7df" translate="yes" xml:space="preserve">
          <source>Transform the use variables before serialization.</source>
          <target state="translated">직렬화 전에 사용 변수를 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="d42ea4ed7bef62d5764b1a19580e9803b3ae674c" translate="yes" xml:space="preserve">
          <source>TransformsRequest</source>
          <target state="translated">TransformsRequest</target>
        </trans-unit>
        <trans-unit id="8dcae2f3fbf8c0930bb2f7ed759e0c40483040fb" translate="yes" xml:space="preserve">
          <source>TransformsRequest (Foundation\Http)</source>
          <target state="translated">TransformsRequest (Foundation \ Http)</target>
        </trans-unit>
        <trans-unit id="7abd2c3cc0054fc5bf02f82b6621f73a413150b9" translate="yes" xml:space="preserve">
          <source>TransformsRequest::clean()</source>
          <target state="translated">TransformsRequest::clean()</target>
        </trans-unit>
        <trans-unit id="47e9091aa2aa427da8472cffa5ca380dc9bd1b71" translate="yes" xml:space="preserve">
          <source>TransformsRequest::cleanArray()</source>
          <target state="translated">TransformsRequest::cleanArray()</target>
        </trans-unit>
        <trans-unit id="0c250e7838d1ee0670115defd328c74424e8a05d" translate="yes" xml:space="preserve">
          <source>TransformsRequest::cleanParameterBag()</source>
          <target state="translated">TransformsRequest::cleanParameterBag()</target>
        </trans-unit>
        <trans-unit id="507ee192353316b293fde9ecf2c737df5aef78ff" translate="yes" xml:space="preserve">
          <source>TransformsRequest::cleanValue()</source>
          <target state="translated">TransformsRequest::cleanValue()</target>
        </trans-unit>
        <trans-unit id="d266a8d4c9d6a1516f4a7ddc7d9c733a27ad2782" translate="yes" xml:space="preserve">
          <source>TransformsRequest::handle()</source>
          <target state="translated">TransformsRequest::handle()</target>
        </trans-unit>
        <trans-unit id="3f0bf4e714a26debdc3a85c164ef4b9506507f83" translate="yes" xml:space="preserve">
          <source>TransformsRequest::transform()</source>
          <target state="translated">TransformsRequest::transform()</target>
        </trans-unit>
        <trans-unit id="02bfc7ccea233eab48efd808b43684a21112aa5c" translate="yes" xml:space="preserve">
          <source>Translate the given value into the appropriate JSON binding parameter.</source>
          <target state="translated">주어진 값을 적절한 JSON 바인딩 매개 변수로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="ac26a7a94ea2e66490f932b6415a09ef6f2a913c" translate="yes" xml:space="preserve">
          <source>Translation</source>
          <target state="translated">Translation</target>
        </trans-unit>
        <trans-unit id="892b80554120122958b64e52444d816ef98e6774" translate="yes" xml:space="preserve">
          <source>Translation files that use translation strings as keys are stored as JSON files in the &lt;code&gt;resources/lang&lt;/code&gt; directory. For example, if your application has a Spanish translation, you should create a &lt;code&gt;resources/lang/es.json&lt;/code&gt; file:</source>
          <target state="translated">변환 문자열을 키로 사용하는 변환 파일은 &lt;code&gt;resources/lang&lt;/code&gt; 디렉토리 에 JSON 파일로 저장됩니다 . 예를 들어, 응용 프로그램에 스페인어 번역이있는 경우 &lt;code&gt;resources/lang/es.json&lt;/code&gt; 파일을 작성해야 합니다.</target>
        </trans-unit>
        <trans-unit id="2eba37e5175d817df5561b3605f81efc47befef9" translate="yes" xml:space="preserve">
          <source>TranslationServiceProvider</source>
          <target state="translated">TranslationServiceProvider</target>
        </trans-unit>
        <trans-unit id="8ad8302d110b05d7e02330dac58628134fdcff02" translate="yes" xml:space="preserve">
          <source>Translations</source>
          <target state="translated">Translations</target>
        </trans-unit>
        <trans-unit id="1fafc51374f712ba586dcd4ca179bb592b7dbf3b" translate="yes" xml:space="preserve">
          <source>Translator</source>
          <target state="translated">Translator</target>
        </trans-unit>
        <trans-unit id="78af8bcd052d2610b390898713f436f04f393f09" translate="yes" xml:space="preserve">
          <source>Translator (Contracts)</source>
          <target state="translated">번역기 (계약)</target>
        </trans-unit>
        <trans-unit id="d87d36448de5f3592a1324c51a29009327711e04" translate="yes" xml:space="preserve">
          <source>Translator (Translation)</source>
          <target state="translated">번역기 (번역)</target>
        </trans-unit>
        <trans-unit id="b0c903b57c57694404a98032e87667af6a150337" translate="yes" xml:space="preserve">
          <source>Translator::__construct()</source>
          <target state="translated">Translator::__construct()</target>
        </trans-unit>
        <trans-unit id="a2a9cbf23641623bf97c512141704543792c70de" translate="yes" xml:space="preserve">
          <source>Translator::addJsonPath()</source>
          <target state="translated">Translator::addJsonPath()</target>
        </trans-unit>
        <trans-unit id="545ae36902e47122a0acbe9c6888710568b00eea" translate="yes" xml:space="preserve">
          <source>Translator::addLines()</source>
          <target state="translated">Translator::addLines()</target>
        </trans-unit>
        <trans-unit id="1044080afa69ce558c7b0305acb0903ea414e0ec" translate="yes" xml:space="preserve">
          <source>Translator::addNamespace()</source>
          <target state="translated">Translator::addNamespace()</target>
        </trans-unit>
        <trans-unit id="2faad4a06100fdae1b2ab28cbb2ec56064aad732" translate="yes" xml:space="preserve">
          <source>Translator::choice()</source>
          <target state="translated">Translator::choice()</target>
        </trans-unit>
        <trans-unit id="f8e658ad7e4209ee3d6e0770b8659af7aed4fea5" translate="yes" xml:space="preserve">
          <source>Translator::get()</source>
          <target state="translated">Translator::get()</target>
        </trans-unit>
        <trans-unit id="8c7fbf04718b74c0f44222a961cb8ca68a34ab4b" translate="yes" xml:space="preserve">
          <source>Translator::getFallback()</source>
          <target state="translated">Translator::getFallback()</target>
        </trans-unit>
        <trans-unit id="06a629824ce40e421a645d74a8bd983635a907b7" translate="yes" xml:space="preserve">
          <source>Translator::getFromJson()</source>
          <target state="translated">Translator::getFromJson()</target>
        </trans-unit>
        <trans-unit id="fb535d2484004ad584c5bb5fc197aa3c51b44747" translate="yes" xml:space="preserve">
          <source>Translator::getLine()</source>
          <target state="translated">Translator::getLine()</target>
        </trans-unit>
        <trans-unit id="f767f4cbfcb0184ac9e6a73006265cb7c44fbf2e" translate="yes" xml:space="preserve">
          <source>Translator::getLoader()</source>
          <target state="translated">Translator::getLoader()</target>
        </trans-unit>
        <trans-unit id="f327547672c3398305b145971f1faeca39244438" translate="yes" xml:space="preserve">
          <source>Translator::getLocale()</source>
          <target state="translated">Translator::getLocale()</target>
        </trans-unit>
        <trans-unit id="c7768ffce3a502eccbcf461ce8bd917ea04e91de" translate="yes" xml:space="preserve">
          <source>Translator::getSelector()</source>
          <target state="translated">Translator::getSelector()</target>
        </trans-unit>
        <trans-unit id="3bb68bdafe205112070cf111c5cbe4218922d2c2" translate="yes" xml:space="preserve">
          <source>Translator::has()</source>
          <target state="translated">Translator::has()</target>
        </trans-unit>
        <trans-unit id="9b4885166d31817e5b3dad6d0e5438eb136cd778" translate="yes" xml:space="preserve">
          <source>Translator::hasForLocale()</source>
          <target state="translated">Translator::hasForLocale()</target>
        </trans-unit>
        <trans-unit id="a17cacdba92342c2551e4a172b97a9731ed216ec" translate="yes" xml:space="preserve">
          <source>Translator::isLoaded()</source>
          <target state="translated">Translator::isLoaded()</target>
        </trans-unit>
        <trans-unit id="27e5b0eeb401cf522b1fd772e940d0c5e7df0ab6" translate="yes" xml:space="preserve">
          <source>Translator::load()</source>
          <target state="translated">Translator::load()</target>
        </trans-unit>
        <trans-unit id="b727c6f7295c3d729584db1e6557ea6afbafd62e" translate="yes" xml:space="preserve">
          <source>Translator::locale()</source>
          <target state="translated">Translator::locale()</target>
        </trans-unit>
        <trans-unit id="0b51cbd93f60d59e5718114fbb8e3c8d98387939" translate="yes" xml:space="preserve">
          <source>Translator::localeArray()</source>
          <target state="translated">Translator::localeArray()</target>
        </trans-unit>
        <trans-unit id="8c43abd6b8f0e4cc58939727230088294dbb2a08" translate="yes" xml:space="preserve">
          <source>Translator::localeForChoice()</source>
          <target state="translated">Translator::localeForChoice()</target>
        </trans-unit>
        <trans-unit id="b18888f6f7d9104580c012f25b3490cf2f5d5825" translate="yes" xml:space="preserve">
          <source>Translator::makeReplacements()</source>
          <target state="translated">Translator::makeReplacements()</target>
        </trans-unit>
        <trans-unit id="d49af2575400a22295295eee299723b75e79bedb" translate="yes" xml:space="preserve">
          <source>Translator::parseKey()</source>
          <target state="translated">Translator::parseKey()</target>
        </trans-unit>
        <trans-unit id="e5d800a9579cbfe0fcc3b560e3f2bca0d0b2b278" translate="yes" xml:space="preserve">
          <source>Translator::setFallback()</source>
          <target state="translated">Translator::setFallback()</target>
        </trans-unit>
        <trans-unit id="4a14a700b6df4acfb5af974e1bb9ffafd1dca897" translate="yes" xml:space="preserve">
          <source>Translator::setLoaded()</source>
          <target state="translated">Translator::setLoaded()</target>
        </trans-unit>
        <trans-unit id="d6ef8a1d39c70924a81590b8669a3b7a2be2c9d4" translate="yes" xml:space="preserve">
          <source>Translator::setLocale()</source>
          <target state="translated">Translator::setLocale()</target>
        </trans-unit>
        <trans-unit id="c98ab96c6f41345239df135e251ac6ad5466442b" translate="yes" xml:space="preserve">
          <source>Translator::setSelector()</source>
          <target state="translated">Translator::setSelector()</target>
        </trans-unit>
        <trans-unit id="ed6f1ddb75f2026a0be6733aff9dec00469140b6" translate="yes" xml:space="preserve">
          <source>Translator::sortReplacements()</source>
          <target state="translated">Translator::sortReplacements()</target>
        </trans-unit>
        <trans-unit id="00ce90b9111e13ed3aab1ed1e226774721df6711" translate="yes" xml:space="preserve">
          <source>Translator::trans()</source>
          <target state="translated">Translator::trans()</target>
        </trans-unit>
        <trans-unit id="fe8ba7e23f2342ea1473a2450612fcd2306c7de2" translate="yes" xml:space="preserve">
          <source>Translator::transChoice()</source>
          <target state="translated">Translator::transChoice()</target>
        </trans-unit>
        <trans-unit id="e3078aebb63eb83c8a0fd5f112dfed61652115de" translate="yes" xml:space="preserve">
          <source>Transliterate a UTF-8 value to ASCII.</source>
          <target state="translated">UTF-8 값을 ASCII로 음역하십시오.</target>
        </trans-unit>
        <trans-unit id="c10d76c9a4b81c39c13a3bbf7cdb7a157dfb1551" translate="yes" xml:space="preserve">
          <source>Transport</source>
          <target state="translated">Transport</target>
        </trans-unit>
        <trans-unit id="53fd1f3608c7dc4629d34c3aaa250a1eef267a0e" translate="yes" xml:space="preserve">
          <source>Transport (Mail\Transport)</source>
          <target state="translated">운송 (Mail \ Transport)</target>
        </trans-unit>
        <trans-unit id="9a3698c4407de5652f2a2491d48ea5481470081c" translate="yes" xml:space="preserve">
          <source>Transport::beforeSendPerformed()</source>
          <target state="translated">Transport::beforeSendPerformed()</target>
        </trans-unit>
        <trans-unit id="0896a8a08e25054ed2b272dbaab125fd2fc4481d" translate="yes" xml:space="preserve">
          <source>Transport::isStarted()</source>
          <target state="translated">Transport::isStarted()</target>
        </trans-unit>
        <trans-unit id="574e31444bdd763058be79605a172d2bdc60c506" translate="yes" xml:space="preserve">
          <source>Transport::numberOfRecipients()</source>
          <target state="translated">Transport::numberOfRecipients()</target>
        </trans-unit>
        <trans-unit id="39340f42e3ded3448d708767dab39504de6a68e4" translate="yes" xml:space="preserve">
          <source>Transport::ping()</source>
          <target state="translated">Transport::ping()</target>
        </trans-unit>
        <trans-unit id="1cb14cd242558e4358abec9ad4016b510bf7e7b9" translate="yes" xml:space="preserve">
          <source>Transport::registerPlugin()</source>
          <target state="translated">Transport::registerPlugin()</target>
        </trans-unit>
        <trans-unit id="f8b9fb8246ce25f938740256db9d1c75662299d3" translate="yes" xml:space="preserve">
          <source>Transport::sendPerformed()</source>
          <target state="translated">Transport::sendPerformed()</target>
        </trans-unit>
        <trans-unit id="c82a76172f865d5951ddacb98bef5d2dc08b2b3f" translate="yes" xml:space="preserve">
          <source>Transport::start()</source>
          <target state="translated">Transport::start()</target>
        </trans-unit>
        <trans-unit id="dff5f8bf527727eb9e5e42a4e247da56db0b1abd" translate="yes" xml:space="preserve">
          <source>Transport::stop()</source>
          <target state="translated">Transport::stop()</target>
        </trans-unit>
        <trans-unit id="348527f5c76c34673a5590763d2840949bfc15a3" translate="yes" xml:space="preserve">
          <source>TransportManager</source>
          <target state="translated">TransportManager</target>
        </trans-unit>
        <trans-unit id="4ab1542be2b820af1ebc031871c0aeec1e1bd395" translate="yes" xml:space="preserve">
          <source>TransportManager (Mail)</source>
          <target state="translated">TransportManager (메일)</target>
        </trans-unit>
        <trans-unit id="d454752176a3136381888d895311e8f629b5a9d8" translate="yes" xml:space="preserve">
          <source>TransportManager::addSesCredentials()</source>
          <target state="translated">TransportManager::addSesCredentials()</target>
        </trans-unit>
        <trans-unit id="137d60740276ca9d26588a9d77205536c05b93d9" translate="yes" xml:space="preserve">
          <source>TransportManager::createArrayDriver()</source>
          <target state="translated">TransportManager::createArrayDriver()</target>
        </trans-unit>
        <trans-unit id="9fdfaf571e8160dd2e36aa8c1dce1e8c3113852a" translate="yes" xml:space="preserve">
          <source>TransportManager::createLogDriver()</source>
          <target state="translated">TransportManager::createLogDriver()</target>
        </trans-unit>
        <trans-unit id="5c70e3e581c1512df21febf4d22b6274566cebb9" translate="yes" xml:space="preserve">
          <source>TransportManager::createMailDriver()</source>
          <target state="translated">TransportManager::createMailDriver()</target>
        </trans-unit>
        <trans-unit id="907a9925dc69e1c4df03578fab4b518eee4a4c46" translate="yes" xml:space="preserve">
          <source>TransportManager::createMailgunDriver()</source>
          <target state="translated">TransportManager::createMailgunDriver()</target>
        </trans-unit>
        <trans-unit id="45347adbe9508de06da89a9ddbadccff860b0f60" translate="yes" xml:space="preserve">
          <source>TransportManager::createMandrillDriver()</source>
          <target state="translated">TransportManager::createMandrillDriver()</target>
        </trans-unit>
        <trans-unit id="07d756976790ffe2ac599b36e34047a89b023cf9" translate="yes" xml:space="preserve">
          <source>TransportManager::createSendmailDriver()</source>
          <target state="translated">TransportManager::createSendmailDriver()</target>
        </trans-unit>
        <trans-unit id="119249c4b9f5744cacabbb2dc96109263980cf9c" translate="yes" xml:space="preserve">
          <source>TransportManager::createSesDriver()</source>
          <target state="translated">TransportManager::createSesDriver()</target>
        </trans-unit>
        <trans-unit id="5f0a74e828ba32a0c503d0ecef6a33e8d7f94dc4" translate="yes" xml:space="preserve">
          <source>TransportManager::createSmtpDriver()</source>
          <target state="translated">TransportManager::createSmtpDriver()</target>
        </trans-unit>
        <trans-unit id="338c8692ea6cf03061ab91763132bea1ad2a2842" translate="yes" xml:space="preserve">
          <source>TransportManager::createSparkPostDriver()</source>
          <target state="translated">TransportManager::createSparkPostDriver()</target>
        </trans-unit>
        <trans-unit id="b5c19bee2b486433a6281aadb2bbd5609bbf249b" translate="yes" xml:space="preserve">
          <source>TransportManager::getDefaultDriver()</source>
          <target state="translated">TransportManager::getDefaultDriver()</target>
        </trans-unit>
        <trans-unit id="0c4b7372dccdede8bbd6247a7fe5bb08e4e3db19" translate="yes" xml:space="preserve">
          <source>TransportManager::guzzle()</source>
          <target state="translated">TransportManager::guzzle()</target>
        </trans-unit>
        <trans-unit id="3a58000114cdf9df0dcb03b1763523a0c0a9c449" translate="yes" xml:space="preserve">
          <source>TransportManager::setDefaultDriver()</source>
          <target state="translated">TransportManager::setDefaultDriver()</target>
        </trans-unit>
        <trans-unit id="89e581f1b56f0e9ddaa6c57b46dc7d03c4f48a4d" translate="yes" xml:space="preserve">
          <source>Travis CI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42c3405d1604503a7c71a50d39464993257565f7" translate="yes" xml:space="preserve">
          <source>TrimStrings</source>
          <target state="translated">TrimStrings</target>
        </trans-unit>
        <trans-unit id="f13249d2492a1d94e2aaea76b44b60b1d8fdf32c" translate="yes" xml:space="preserve">
          <source>TrimStrings (Foundation\Http)</source>
          <target state="translated">TrimStrings (Foundation \ Http)</target>
        </trans-unit>
        <trans-unit id="ffb61cfa7c211442685b765ba5fbe6a6c0de65b6" translate="yes" xml:space="preserve">
          <source>TrimStrings::transform()</source>
          <target state="translated">TrimStrings::transform()</target>
        </trans-unit>
        <trans-unit id="c492359c9644362a44d310c80aeaa60ad9983f68" translate="yes" xml:space="preserve">
          <source>Trusting All Proxies</source>
          <target state="translated">모든 프록시 신뢰</target>
        </trans-unit>
        <trans-unit id="783d8ac11c0b42c21fde826c688d61117460f3c0" translate="yes" xml:space="preserve">
          <source>Truth Test Constraints</source>
          <target state="translated">진실 테스트 제약</target>
        </trans-unit>
        <trans-unit id="f4928c2c8acd69985bbd8af6b576c35718f54b65" translate="yes" xml:space="preserve">
          <source>Two important columns to note are the &lt;code&gt;commentable_id&lt;/code&gt; and &lt;code&gt;commentable_type&lt;/code&gt; columns on the &lt;code&gt;comments&lt;/code&gt; table. The &lt;code&gt;commentable_id&lt;/code&gt; column will contain the ID value of the post or video, while the &lt;code&gt;commentable_type&lt;/code&gt; column will contain the class name of the owning model. The &lt;code&gt;commentable_type&lt;/code&gt; column is how the ORM determines which &quot;type&quot; of owning model to return when accessing the &lt;code&gt;commentable&lt;/code&gt; relation.</source>
          <target state="translated">참고해야 할 두 가지 중요한 열 은 &lt;code&gt;comments&lt;/code&gt; 테이블 의 &lt;code&gt;commentable_id&lt;/code&gt; 및 &lt;code&gt;commentable_type&lt;/code&gt; 열입니다 . &lt;code&gt;commentable_id&lt;/code&gt; 의 그동안 열은 후 또는 비디오의 ID 값을 포함합니다 &lt;code&gt;commentable_type&lt;/code&gt; 의 열이 소유 모델의 클래스 이름을 포함합니다. &lt;code&gt;commentable_type&lt;/code&gt; 의 열은 ORM가 액세스 할 때 반환 모델을 소유 한 &quot;타입&quot;결정하는 방법이다 &lt;code&gt;commentable&lt;/code&gt; 관계.</target>
        </trans-unit>
        <trans-unit id="467a662930545928b625fc9eb71668342fa78a98" translate="yes" xml:space="preserve">
          <source>Two of the primary benefits of using Blade are &lt;em&gt;template inheritance&lt;/em&gt; and &lt;em&gt;sections&lt;/em&gt;. To get started, let's take a look at a simple example. First, we will examine a &quot;master&quot; page layout. Since most web applications maintain the same general layout across various pages, it's convenient to define this layout as a single Blade view:</source>
          <target state="translated">블레이드 사용의 주요 이점 중 두 가지는 &lt;em&gt;템플릿 상속&lt;/em&gt; 과 &lt;em&gt;섹션&lt;/em&gt; 입니다. 시작하려면 간단한 예를 살펴 보겠습니다. 먼저 &quot;마스터&quot;페이지 레이아웃을 살펴 보겠습니다. 대부분의 웹 응용 프로그램은 다양한 페이지에서 동일한 일반 레이아웃을 유지하므로이 레이아웃을 단일 블레이드보기로 정의하는 것이 편리합니다.</target>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="fc0cab06a1bd741742fdd6b8b63b561aea8d7477" translate="yes" xml:space="preserve">
          <source>Type-Hinting Dependencies</source>
          <target state="translated">타입 힌트 의존성</target>
        </trans-unit>
        <trans-unit id="a94e652ac375c1a94078c9bb4d7c4a8be4293a21" translate="yes" xml:space="preserve">
          <source>Typical Eloquent foreign key conventions will be used when performing the relationship's queries. If you would like to customize the keys of the relationship, you may pass them as the third and fourth arguments to the &lt;code&gt;hasManyThrough&lt;/code&gt; method. The third argument is the name of the foreign key on the intermediate model. The fourth argument is the name of the foreign key on the final model. The fifth argument is the local key, while the sixth argument is the local key of the intermediate model:</source>
          <target state="translated">관계의 쿼리를 수행 할 때 일반적인 Eloquent 외래 키 규칙이 사용됩니다. 관계의 키를 사용자 정의하려면이 키를 세 번째 및 네 번째 인수로 &lt;code&gt;hasManyThrough&lt;/code&gt; 메소드에 전달하십시오. 세 번째 인수는 중간 모델의 외래 키 이름입니다. 네 번째 인수는 최종 모델의 외래 키 이름입니다. 다섯 번째 인수는 로컬 키이고 여섯 번째 인수는 중간 모델의 로컬 키입니다.</target>
        </trans-unit>
        <trans-unit id="c8332f2b01cadebb5b2480bc3f6c55203b172aea" translate="yes" xml:space="preserve">
          <source>Typically, events should be registered via the &lt;code&gt;EventServiceProvider&lt;/code&gt;&lt;code&gt;$listen&lt;/code&gt; array; however, you may also register Closure based events manually in the &lt;code&gt;boot&lt;/code&gt; method of your &lt;code&gt;EventServiceProvider&lt;/code&gt;:</source>
          <target state="translated">일반적으로 이벤트는 &lt;code&gt;EventServiceProvider&lt;/code&gt; &lt;code&gt;$listen&lt;/code&gt; 배열을 통해 등록해야합니다 . 그러나 &lt;code&gt;EventServiceProvider&lt;/code&gt; 의 &lt;code&gt;boot&lt;/code&gt; 방법 으로 Closure 기반 이벤트를 수동으로 등록 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0b40f7c14f2637e6f42618d3e4b0f83d978858ac" translate="yes" xml:space="preserve">
          <source>Typically, if you want to consume your API from your JavaScript application, you would need to manually send an access token to the application and pass it with each request to your application. However, Passport includes a middleware that can handle this for you. All you need to do is add the &lt;code&gt;CreateFreshApiToken&lt;/code&gt; middleware to your &lt;code&gt;web&lt;/code&gt; middleware group in your &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; file:</source>
          <target state="translated">일반적으로 JavaScript 응용 프로그램에서 API를 사용하려면 수동으로 응용 프로그램에 액세스 토큰을 보내고 각 요청과 함께 응용 프로그램에 전달해야합니다. 그러나 Passport에는이를 처리 할 수있는 미들웨어가 포함되어 있습니다. &lt;code&gt;app/Http/Kernel.php&lt;/code&gt; 파일 의 &lt;code&gt;web&lt;/code&gt; 미들웨어 그룹에 &lt;code&gt;CreateFreshApiToken&lt;/code&gt; 미들웨어를 추가하기 만하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="05b5eaabeb508e3a6aeaeda163163369c747d9d9" translate="yes" xml:space="preserve">
          <source>Typically, it would not be possible to mock or stub a truly static class method. However, since facades use dynamic methods to proxy method calls to objects resolved from the service container, we actually can test facades just as we would test an injected class instance. For example, given the following route:</source>
          <target state="translated">일반적으로 정적 클래스 메소드를 조롱하거나 스터브하는 것은 불가능합니다. 그러나 파사드는 서비스 컨테이너에서 확인 된 객체에 대한 메소드 호출을 프록시하기 위해 동적 메소드를 사용하기 때문에 실제로 주입 된 클래스 인스턴스를 테스트하는 것처럼 파사드를 테스트 할 수 있습니다. 예를 들어 다음과 같은 경로가 주어집니다.</target>
        </trans-unit>
        <trans-unit id="d4f519996ec88fd36cfd12ff886a1080eb9e52ec" translate="yes" xml:space="preserve">
          <source>Typically, notifications should be short, informational messages that notify users of something that occurred in your application. For example, if you are writing a billing application, you might send an &quot;Invoice Paid&quot; notification to your users via the email and SMS channels.</source>
          <target state="translated">일반적으로 알림은 응용 프로그램에서 발생한 것을 사용자에게 알리는 간단한 정보 메시지입니다. 예를 들어 결제 응용 프로그램을 작성하는 경우 전자 메일 및 SMS 채널을 통해 사용자에게 &quot;인보이스 유료&quot;알림을 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="296917a2a8be921a07ccbcdb2a3fbd08e01122d5" translate="yes" xml:space="preserve">
          <source>Typically, the &lt;code&gt;$this-&amp;gt;collection&lt;/code&gt; property of a resource collection is automatically populated with the result of mapping each item of the collection to its singular resource class. The singular resource class is assumed to be the collection's class name without the trailing &lt;code&gt;Collection&lt;/code&gt; string.</source>
          <target state="translated">일반적으로 자원 콜렉션 의 &lt;code&gt;$this-&amp;gt;collection&lt;/code&gt; 특성은 콜렉션의 각 항목을 단일 자원 클래스에 맵핑 한 결과로 자동으로 채워집니다. 단일 자원 클래스는 후행 &lt;code&gt;Collection&lt;/code&gt; 문자열이 없는 콜렉션의 클래스 이름 인 것으로 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="735ee9ac75dd65d29fb3a80c4a907d9f53b9b052" translate="yes" xml:space="preserve">
          <source>Typically, this string should be 32 characters long. The key can be set in the &lt;code&gt;.env&lt;/code&gt; environment file. If you have not renamed the &lt;code&gt;.env.example&lt;/code&gt; file to &lt;code&gt;.env&lt;/code&gt;, you should do that now. &lt;strong&gt;If the application key is not set, your user sessions and other encrypted data will not be secure!&lt;/strong&gt;</source>
          <target state="translated">일반적으로이 문자열은 32 자 여야합니다. 키는 &lt;code&gt;.env&lt;/code&gt; 환경 파일 에서 설정할 수 있습니다 . &lt;code&gt;.env.example&lt;/code&gt; 파일의 이름 을 &lt;code&gt;.env&lt;/code&gt; 로바꾸지 않았다면 지금해야합니다. &lt;strong&gt;응용 프로그램 키가 설정되어 있지 않으면 사용자 세션 및 기타 암호화 된 데이터가 안전하지 않습니다!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6c94b132adaaf3d9eae912c7a7fce8bd770e3743" translate="yes" xml:space="preserve">
          <source>Typically, translation strings are stored in files within the &lt;code&gt;resources/lang&lt;/code&gt; directory. Within this directory there should be a subdirectory for each language supported by the application:</source>
          <target state="translated">일반적으로 변환 문자열은 &lt;code&gt;resources/lang&lt;/code&gt; 디렉토리의 파일에 저장됩니다 . 이 디렉토리에는 응용 프로그램에서 지원하는 각 언어에 대한 서브 디렉토리가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="d4c18c8a9600dbd0fd2eecd227ca5ed7663b9dad" translate="yes" xml:space="preserve">
          <source>Typically, you should declare collection macros in a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;providers&quot;&gt;서비스 제공자&lt;/a&gt; 에서 콜렉션 매크로를 선언해야합니다 .</target>
        </trans-unit>
        <trans-unit id="535ba5a71485075e9f1036212466b10b75ed9d72" translate="yes" xml:space="preserve">
          <source>Typically, you should place these kinds of routes outside of the &lt;code&gt;web&lt;/code&gt; middleware group that the &lt;code&gt;RouteServiceProvider&lt;/code&gt; applies to all routes in the &lt;code&gt;routes/web.php&lt;/code&gt; file. However, you may also exclude the routes by adding their URIs to the &lt;code&gt;$except&lt;/code&gt; property of the &lt;code&gt;VerifyCsrfToken&lt;/code&gt; middleware:</source>
          <target state="translated">일반적으로 이러한 종류의 경로 는 &lt;code&gt;RouteServiceProvider&lt;/code&gt; 가 &lt;code&gt;routes/web.php&lt;/code&gt; 파일 의 모든 경로에 적용 하는 &lt;code&gt;web&lt;/code&gt; 미들웨어 그룹 외부에 배치해야 합니다. 그러나 &lt;code&gt;VerifyCsrfToken&lt;/code&gt; 미들웨어 의 &lt;code&gt;$except&lt;/code&gt; 속성에 URI를 추가하여 경로를 제외 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0ffe02392ca72c0ffb3ef8571a10ff56e42aaf06" translate="yes" xml:space="preserve">
          <source>Typically, you will need to publish your package's configuration file to the application's own &lt;code&gt;config&lt;/code&gt; directory. This will allow users of your package to easily override your default configuration options. To allow your configuration files to be published, call the &lt;code&gt;publishes&lt;/code&gt; method from the &lt;code&gt;boot&lt;/code&gt; method of your service provider:</source>
          <target state="translated">일반적으로 패키지의 구성 파일을 응용 프로그램의 자체 &lt;code&gt;config&lt;/code&gt; 디렉토리 에 게시해야합니다 . 이렇게하면 패키지 사용자가 기본 구성 옵션을 쉽게 무시할 수 있습니다. 구성 파일을 공개하려면 서비스 제공 업체 의 &lt;code&gt;boot&lt;/code&gt; 메소드 에서 &lt;code&gt;publishes&lt;/code&gt; 메소드를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="3cfb59d46bbe01f5debf7f30e1599f2180076b53" translate="yes" xml:space="preserve">
          <source>Typically, you will want to mark a notification as &quot;read&quot; when a user views it. The &lt;code&gt;Illuminate\Notifications\Notifiable&lt;/code&gt; trait provides a &lt;code&gt;markAsRead&lt;/code&gt; method, which updates the &lt;code&gt;read_at&lt;/code&gt; column on the notification's database record:</source>
          <target state="translated">일반적으로 사용자가 볼 때 알림을 &quot;읽기&quot;로 표시하려고합니다. &lt;code&gt;Illuminate\Notifications\Notifiable&lt;/code&gt; 특성 제공 &lt;code&gt;markAsRead&lt;/code&gt; 의 업데이트한다 방법, &lt;code&gt;read_at&lt;/code&gt; 통지의 데이터베이스 레코드에 열을 :</target>
        </trans-unit>
        <trans-unit id="44afa892e3c4cc5b03a8bac17155555f26b5da6b" translate="yes" xml:space="preserve">
          <source>Typically, you will want to pass some data to your view that you can utilize when rendering the email's HTML. There are two ways you may make data available to your view. First, any public property defined on your mailable class will automatically be made available to the view. So, for example, you may pass data into your mailable class' constructor and set that data to public properties defined on the class:</source>
          <target state="translated">일반적으로 이메일의 HTML을 렌더링 할 때 활용할 수있는 일부 데이터를보기에 전달하려고합니다. 데이터를보기에 제공 할 수있는 두 가지 방법이 있습니다. 먼저, 메일 가능 클래스에 정의 된 모든 공용 속성이보기에 자동으로 제공됩니다. 예를 들어, 메일 가능 클래스의 생성자에 데이터를 전달하고 해당 데이터를 클래스에 정의 된 공용 속성으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04d5402187271595cbeac2d262033e3372090d34" translate="yes" xml:space="preserve">
          <source>Typically, you won't just be returning simple strings or arrays from your route actions. Instead, you will be returning full &lt;code&gt;Illuminate\Http\Response&lt;/code&gt; instances or &lt;a href=&quot;views&quot;&gt;views&lt;/a&gt;.</source>
          <target state="translated">일반적으로 경로 작업에서 간단한 문자열이나 배열을 반환하지는 않습니다. 대신 전체 &lt;code&gt;Illuminate\Http\Response&lt;/code&gt; 인스턴스 또는 &lt;a href=&quot;views&quot;&gt;뷰를&lt;/a&gt; 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="4a61fe5e239019d1661a709c3259c8559061fec9" translate="yes" xml:space="preserve">
          <source>Typing Values</source>
          <target state="translated">값 입력</target>
        </trans-unit>
        <trans-unit id="5bda711f43a583c45406bf46c954a905f2ba7ce7" translate="yes" xml:space="preserve">
          <source>UNSIGNED BIGINT equivalent column.</source>
          <target state="translated">UNSIGNED BIGINT 동등한 열.</target>
        </trans-unit>
        <trans-unit id="e03eee26fc7887b9056288f86e3bdf804ef59546" translate="yes" xml:space="preserve">
          <source>UNSIGNED DECIMAL equivalent column with a precision (total digits) and scale (decimal digits).</source>
          <target state="translated">정밀도 (총 자릿수) 및 스케일 (소수 자릿수)을 갖는 UNSIGNED DECIMAL 동등한 열.</target>
        </trans-unit>
        <trans-unit id="c3dd5a319fde30a675b0b4b68b7cc36dd2ce7442" translate="yes" xml:space="preserve">
          <source>UNSIGNED INTEGER equivalent column.</source>
          <target state="translated">UNSIGNED INTEGER 해당 열.</target>
        </trans-unit>
        <trans-unit id="19e0dd9a64224d3ecf365ffb19a1abb152cdf288" translate="yes" xml:space="preserve">
          <source>UNSIGNED MEDIUMINT equivalent column.</source>
          <target state="translated">서명되지 않은 MEDIUMINT 동등한 열.</target>
        </trans-unit>
        <trans-unit id="ee44c22a63696c24a9e3971e0ef29cd69d50e62f" translate="yes" xml:space="preserve">
          <source>UNSIGNED SMALLINT equivalent column.</source>
          <target state="translated">UNSIGNED SMALLINT 동등한 열.</target>
        </trans-unit>
        <trans-unit id="ff003a2e20467103dc95ab390476fd279d19adc1" translate="yes" xml:space="preserve">
          <source>UNSIGNED TINYINT equivalent column.</source>
          <target state="translated">UNSIGNED TINYINT 동등한 열.</target>
        </trans-unit>
        <trans-unit id="969889215d3804c32a99c97486cf4c2be8200d66" translate="yes" xml:space="preserve">
          <source>UPDATED_AT</source>
          <target state="translated">UPDATED_AT</target>
        </trans-unit>
        <trans-unit id="cb371c93c5aa0e62198efd303ae2c17474416d1a" translate="yes" xml:space="preserve">
          <source>URI</source>
          <target state="translated">URI</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="a2ff1b89306266fdfb7dd3cf39c2b7aae264eb1b" translate="yes" xml:space="preserve">
          <source>URL (Support\Facades)</source>
          <target state="translated">URL (지원 \ Facades)</target>
        </trans-unit>
        <trans-unit id="99626f5a4c900275b7580bbbb16c9ce11a67c90a" translate="yes" xml:space="preserve">
          <source>URL Generation</source>
          <target state="translated">URL 생성</target>
        </trans-unit>
        <trans-unit id="27d83fd095a3b51079fa9ae8ae8171abb85ef82e" translate="yes" xml:space="preserve">
          <source>URL Generator &amp;amp; Callable Syntax</source>
          <target state="translated">URL 생성기 및 호출 가능 구문</target>
        </trans-unit>
        <trans-unit id="6250a4626287c0bcd6af545e309c6a117d332ba3" translate="yes" xml:space="preserve">
          <source>URL Processing</source>
          <target state="translated">URL 처리</target>
        </trans-unit>
        <trans-unit id="b863134024e3bf201723778dc23ae884c4298f10" translate="yes" xml:space="preserve">
          <source>URL::getFacadeAccessor()</source>
          <target state="translated">URL::getFacadeAccessor()</target>
        </trans-unit>
        <trans-unit id="01f03837323aab32409bb99c50d6c475179c49df" translate="yes" xml:space="preserve">
          <source>URLs</source>
          <target state="translated">URLs</target>
        </trans-unit>
        <trans-unit id="32940a1c4f5724ee6d9d18524938fce491d078ce" translate="yes" xml:space="preserve">
          <source>URLs For Controller Actions</source>
          <target state="translated">컨트롤러 작업의 URL</target>
        </trans-unit>
        <trans-unit id="c9861bfde4322bd47b9bcc5fbe6e9b031d7be01e" translate="yes" xml:space="preserve">
          <source>URLs For Named Routes</source>
          <target state="translated">명명 된 경로의 URL</target>
        </trans-unit>
        <trans-unit id="e7817261c2a27fb49cb7da1109db45cd0b897251" translate="yes" xml:space="preserve">
          <source>UUID equivalent column.</source>
          <target state="translated">UUID 동등한 열.</target>
        </trans-unit>
        <trans-unit id="cd195acce4959407bbecd28a63a95b159a75424d" translate="yes" xml:space="preserve">
          <source>Ubuntu 18.04</source>
          <target state="translated">우분투 18.04</target>
        </trans-unit>
        <trans-unit id="07869ad9b7845828aeca7f1485ba710b2dc5535e" translate="yes" xml:space="preserve">
          <source>Ultimately, this makes it easier to avoid &quot;N+1&quot; query problems within your resources. The &lt;code&gt;whenLoaded&lt;/code&gt; method may be used to conditionally load a relationship. In order to avoid unnecessarily loading relationships, this method accepts the name of the relationship instead of the relationship itself:</source>
          <target state="translated">궁극적으로 리소스 내에서 &quot;N + 1&quot;쿼리 문제를 피하는 것이 더 쉽습니다. &lt;code&gt;whenLoaded&lt;/code&gt; 방법은 조건부 관계를로드하기 위해 사용될 수있다. 불필요하게 관계를로드하지 않도록하기 위해이 메소드는 관계 자체 대신 관계 이름을 승인합니다.</target>
        </trans-unit>
        <trans-unit id="d0b6cea0c96c89e4e4c2e88b35054671c085ffd9" translate="yes" xml:space="preserve">
          <source>UnauthorizedException</source>
          <target state="translated">UnauthorizedException</target>
        </trans-unit>
        <trans-unit id="35998d02e20191f89b93e5327fd111e82dcf5a93" translate="yes" xml:space="preserve">
          <source>UnauthorizedException (Validation)</source>
          <target state="translated">UnauthorizedException (유효성 검증)</target>
        </trans-unit>
        <trans-unit id="5e88dc1eddd83be73576dd3417e0313df0fdfb4f" translate="yes" xml:space="preserve">
          <source>UnauthorizedHttpException</source>
          <target state="translated">UnauthorizedHttpException</target>
        </trans-unit>
        <trans-unit id="869b9de9f915a255d9939e696b2bc052f345da58" translate="yes" xml:space="preserve">
          <source>Uncountable word forms.</source>
          <target state="translated">셀 수없는 단어 형태.</target>
        </trans-unit>
        <trans-unit id="abb763f9dea77985f6c5124d9ac058ea2db81530" translate="yes" xml:space="preserve">
          <source>Under the hood, Laravel utilizes the &lt;a href=&quot;https://github.com/Seldaek/monolog&quot;&gt;Monolog&lt;/a&gt; library, which provides support for a variety of powerful log handlers. Laravel makes it a cinch to configure these handlers, allowing you to mix and match them to customize your application's log handling.</source>
          <target state="translated">Laravel은 &lt;a href=&quot;https://github.com/Seldaek/monolog&quot;&gt;Monolog&lt;/a&gt; 라이브러리를 사용하여 다양한 강력한 로그 처리기를 지원합니다. Laravel은 이러한 처리기를 구성하여 응용 프로그램의 로그 처리를 사용자 정의하기 위해 이들 처리기를 혼합하고 일치시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a37f9d2b0e71dad0332527a62a587f91eef4b74" translate="yes" xml:space="preserve">
          <source>Under the hood, the &lt;code&gt;cache&lt;/code&gt; helper is going to call the &lt;code&gt;get&lt;/code&gt; method on the class underlying the &lt;code&gt;Cache&lt;/code&gt; facade. So, even though we are using the helper function, we can write the following test to verify that the method was called with the argument we expected:</source>
          <target state="translated">후드 아래에서 &lt;code&gt;cache&lt;/code&gt; 도우미는 &lt;code&gt;Cache&lt;/code&gt; 파사드의 기본이되는 클래스 에서 &lt;code&gt;get&lt;/code&gt; 메서드 를 호출합니다 . 따라서 helper 함수를 사용하더라도 다음 테스트를 작성하여 예상 한 인수로 메소드가 호출되었는지 검증 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="750d588b4487042bc3cb4df2f07a673b613d2ee0" translate="yes" xml:space="preserve">
          <source>UnexpectedValueException</source>
          <target state="translated">UnexpectedValueException</target>
        </trans-unit>
        <trans-unit id="5e38e0b07f9b18e7261ca02b5a2ad3ba15f29bfa" translate="yes" xml:space="preserve">
          <source>Unicode Content</source>
          <target state="translated">유니 코드 내용</target>
        </trans-unit>
        <trans-unit id="313f6ac7158154d571bf6bf60f8a41f3199887c3" translate="yes" xml:space="preserve">
          <source>Uninstall the Valet daemon entirely.</source>
          <target state="translated">Valet 데몬을 완전히 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="a7f6fb72911fd3490eb3210219daae3c1d77f8c6" translate="yes" xml:space="preserve">
          <source>Union the collection with the given items.</source>
          <target state="translated">컬렉션을 주어진 아이템과 통합합니다.</target>
        </trans-unit>
        <trans-unit id="00002b164c08859d5a15579e55c8f17ce6478546" translate="yes" xml:space="preserve">
          <source>Unions</source>
          <target state="translated">Unions</target>
        </trans-unit>
        <trans-unit id="87c6f410754d2f5d42cbccc33576be0d5edc865c" translate="yes" xml:space="preserve">
          <source>Unique</source>
          <target state="translated">Unique</target>
        </trans-unit>
        <trans-unit id="e4286fc9472d175a44248d76c7be621486e35980" translate="yes" xml:space="preserve">
          <source>Unique (Validation\Rules)</source>
          <target state="translated">고유 (유효성 검사 규칙)</target>
        </trans-unit>
        <trans-unit id="04d91cab5caa2d39c0a4a55c48559fa030b56996" translate="yes" xml:space="preserve">
          <source>Unique::__toString()</source>
          <target state="translated">Unique::__toString()</target>
        </trans-unit>
        <trans-unit id="65a74a72e4ea3969054b3da600a94655bebe2809" translate="yes" xml:space="preserve">
          <source>Unique::ignore()</source>
          <target state="translated">Unique::ignore()</target>
        </trans-unit>
        <trans-unit id="a6f715dcf805ab87f2c27d5026e65bd042072b4b" translate="yes" xml:space="preserve">
          <source>Unique::ignoreModel()</source>
          <target state="translated">Unique::ignoreModel()</target>
        </trans-unit>
        <trans-unit id="a42a000167a82dfbca8440a95cea4046b369bd1b" translate="yes" xml:space="preserve">
          <source>Universal To</source>
          <target state="translated">범용</target>
        </trans-unit>
        <trans-unit id="15af64a17a16be21eea3c0397cbef630f7cae431" translate="yes" xml:space="preserve">
          <source>Unlike facades, which do not require you to require them in your class' constructor, contracts allow you to define explicit dependencies for your classes. Some developers prefer to explicitly define their dependencies in this way and therefore prefer to use contracts, while other developers enjoy the convenience of facades.</source>
          <target state="translated">클래스 생성자에서 요구하지 않는 파사드와는 달리 계약을 사용하면 클래스에 대한 명시 적 종속성을 정의 할 수 있습니다. 일부 개발자는 이러한 방식으로 종속성을 명시 적으로 정의하는 것을 선호하므로 계약을 선호하는 반면 다른 개발자는 외관의 편의성을 누리고 있습니다.</target>
        </trans-unit>
        <trans-unit id="df3660864ac96501205f2b18444128c21bf72ea2" translate="yes" xml:space="preserve">
          <source>Unlike most other collection methods, &lt;code&gt;forget&lt;/code&gt; does not return a new modified collection; it modifies the collection it is called on.</source>
          <target state="translated">대부분의 다른 수집 방법과 달리 &lt;code&gt;forget&lt;/code&gt; 은 새로운 수정 된 수집을 반환하지 않습니다. 호출 된 콜렉션을 수정합니다.</target>
        </trans-unit>
        <trans-unit id="7e0edb2c8b91ae6881442e750bef8566fcff6fd7" translate="yes" xml:space="preserve">
          <source>Unlike most other collection methods, &lt;code&gt;transform&lt;/code&gt; modifies the collection itself. If you wish to create a new collection instead, use the &lt;a href=&quot;#method-map&quot;&gt;&lt;code&gt;map&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">대부분의 다른 수집 방법과 달리 &lt;code&gt;transform&lt;/code&gt; 은 컬렉션 자체를 수정합니다. 대신 새 컬렉션을 만들려면 &lt;a href=&quot;#method-map&quot;&gt; &lt;code&gt;map&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4e2e857a6e1df693c6239dd9b9712cbc75d6a5b5" translate="yes" xml:space="preserve">
          <source>Unlike traditional static method calls, &lt;a href=&quot;facades&quot;&gt;facades&lt;/a&gt; may be mocked. This provides a great advantage over traditional static methods and grants you the same testability you would have if you were using dependency injection. When testing, you may often want to mock a call to a Laravel facade in one of your controllers. For example, consider the following controller action:</source>
          <target state="translated">전통적인 정적 메소드 호출과 달리, &lt;a href=&quot;facades&quot;&gt;파사드&lt;/a&gt; 가 조롱 될 수 있습니다. 이는 기존 정적 메소드에 비해 큰 이점을 제공하며 종속성 주입을 사용하는 경우와 동일한 테스트 가능성을 제공합니다. 테스트 할 때 종종 컨트롤러 중 하나에서 Laravel 파사드에 대한 호출을 조롱하는 것이 좋습니다. 예를 들어, 다음 제어기 조치를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="1aa3965966efcf18122d576ca7bc093bba8fbdb8" translate="yes" xml:space="preserve">
          <source>Unserialize the data if needed.</source>
          <target state="translated">필요한 경우 데이터를 직렬화 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="5bf7c0ff451bed65a9c2e4e1fe482dae6b81a123" translate="yes" xml:space="preserve">
          <source>Unserialize the given value.</source>
          <target state="translated">주어진 값을 직렬화 해제합니다.</target>
        </trans-unit>
        <trans-unit id="cd6d0ada08b545e2653d6498d810b3322eea3a2f" translate="yes" xml:space="preserve">
          <source>Unserialize the value.</source>
          <target state="translated">값을 직렬화 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="bdf0a99a0cfb1cab1e92001c08e290e0efb56223" translate="yes" xml:space="preserve">
          <source>Unset a configuration option.</source>
          <target state="translated">구성 옵션을 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="a90c92ae24574960012fc865d8f004d1b1c3101f" translate="yes" xml:space="preserve">
          <source>Unset a loaded relationship.</source>
          <target state="translated">로드 된 관계를 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="aeb5904c46fe8d323c82deb5faf0054d24da62d9" translate="yes" xml:space="preserve">
          <source>Unset a parameter on the route if it is set.</source>
          <target state="translated">경로가 설정된 경우 경로에서 매개 변수를 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="09d5a2d9dc1d4b088677b8b13c371ac00446afa7" translate="yes" xml:space="preserve">
          <source>Unset a piece of data from the view.</source>
          <target state="translated">보기에서 데이터 조각을 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="e13e0f38cf2059b5f5262a594ee8df5847060466" translate="yes" xml:space="preserve">
          <source>Unset an attribute on the model.</source>
          <target state="translated">모델에서 속성을 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="7dbb6f558d8169343d27b436d4954dfa6da7d9d9" translate="yes" xml:space="preserve">
          <source>Unset an attribute on the resource.</source>
          <target state="translated">자원에서 속성을 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="b7029217f969563e9641c4ba12f4ae0b70864ea0" translate="yes" xml:space="preserve">
          <source>Unset the connection resolver for models.</source>
          <target state="translated">모델의 연결 해결 프로그램을 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="be8adb7a8e9c689499e07a4e4e2fd35a20e6f4b4" translate="yes" xml:space="preserve">
          <source>Unset the event dispatcher for models.</source>
          <target state="translated">모델의 이벤트 디스패처를 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="9989c7f33bcdb6d9c9fb5a628896075a176fa7f1" translate="yes" xml:space="preserve">
          <source>Unset the event dispatcher for this connection.</source>
          <target state="translated">이 연결에 대한 이벤트 디스패처를 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="0b7daa3ef3c66022a3deba8d0ccd067c11ab5ed5" translate="yes" xml:space="preserve">
          <source>Unset the event dispatcher instance on the connection.</source>
          <target state="translated">연결에서 이벤트 디스패처 인스턴스를 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="6caca4c2079af3469a1f9aa423844c66a6a25bfa" translate="yes" xml:space="preserve">
          <source>Unset the given disk instances.</source>
          <target state="translated">주어진 디스크 인스턴스를 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="9cc43daff0f7a9c86c2e448c690f0777bd68810b" translate="yes" xml:space="preserve">
          <source>Unset the item at a given offset.</source>
          <target state="translated">주어진 오프셋에서 항목을 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="9a19bf398044905ec67d259cba26b685a447fd25" translate="yes" xml:space="preserve">
          <source>Unset the item at the given key.</source>
          <target state="translated">주어진 키에서 항목을 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="c952df7ad7ba3c3a04f544ecc2b98a97287e40a4" translate="yes" xml:space="preserve">
          <source>Unset the value at a given offset.</source>
          <target state="translated">주어진 오프셋에서 값을 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="eeb834ea544594277d6eb0b918a39128ad861f52" translate="yes" xml:space="preserve">
          <source>Unset the value at the given offset.</source>
          <target state="translated">주어진 오프셋에서 값을 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="541793c5701d1c15bc51625e27e54f88a0670674" translate="yes" xml:space="preserve">
          <source>Unset the value for a given offset.</source>
          <target state="translated">주어진 오프셋에 대한 값을 설정 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="f9ed626adc67df10ef841fc12e4fffbaea51e059" translate="yes" xml:space="preserve">
          <source>UpCommand</source>
          <target state="translated">UpCommand</target>
        </trans-unit>
        <trans-unit id="133cc624ca5d53bafe25787c2e1282d19812f6fb" translate="yes" xml:space="preserve">
          <source>UpCommand (Foundation)</source>
          <target state="translated">UpCommand (재단)</target>
        </trans-unit>
        <trans-unit id="25f824f86fa25bc3043f07bcfe24943270761c40" translate="yes" xml:space="preserve">
          <source>UpCommand::handle()</source>
          <target state="translated">UpCommand::handle()</target>
        </trans-unit>
        <trans-unit id="03bd1051c57685f0f9be5a94e120dda5171f4afd" translate="yes" xml:space="preserve">
          <source>Update a record in the database.</source>
          <target state="translated">데이터베이스에서 레코드를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="002f5ef3ebcfc628843d0cf7b8ddb2feb32f677c" translate="yes" xml:space="preserve">
          <source>Update an existing pivot record on the table.</source>
          <target state="translated">테이블에서 기존 피벗 레코드를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="73a1e9e01c757831d62c2c95c024ca78761b0e2b" translate="yes" xml:space="preserve">
          <source>Update the &quot;package.json&quot; file.</source>
          <target state="translated">&quot;package.json&quot;파일을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="bf8b8ec88f5ac1c125a7a4611faa241b4fbc00a9" translate="yes" xml:space="preserve">
          <source>Update the &quot;remember me&quot; token for the given user in storage.</source>
          <target state="translated">스토리지에서 지정된 사용자의 &quot;기억&quot;토큰을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="8d85d72e6cbd850f06dbb495dbef9000096f3617" translate="yes" xml:space="preserve">
          <source>Update the &quot;reserved at&quot; timestamp of the job.</source>
          <target state="translated">작업의 &quot;예약 된 시간&quot;타임 스탬프를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="0e6cf51be4c34b3965829f09b6898ed8a890bbc9" translate="yes" xml:space="preserve">
          <source>Update the Sass files for the application.</source>
          <target state="translated">애플리케이션의 Sass 파일을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="e664460e77379ec3300dade4b2b4ce40ca90eef1" translate="yes" xml:space="preserve">
          <source>Update the Webpack configuration.</source>
          <target state="translated">웹팩 구성을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="11edb18c0d4b80953e40c9a3d76d1dbd22da2510" translate="yes" xml:space="preserve">
          <source>Update the bootstrapping files.</source>
          <target state="translated">부트 스트랩 파일을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="905546f37849de4c75c785dd2e6d4b2a41ababf4" translate="yes" xml:space="preserve">
          <source>Update the creation and update timestamps.</source>
          <target state="translated">작성 및 업데이트 타임 스탬프를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="07f869893e250ccccf293b1a3f116d644cb41fd6" translate="yes" xml:space="preserve">
          <source>Update the example component.</source>
          <target state="translated">예제 구성 요소를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="148a5534b7d7eb95f711ebbe8a8ae958c56678b4" translate="yes" xml:space="preserve">
          <source>Update the given package array.</source>
          <target state="translated">지정된 패키지 배열을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="8c9894cdf51b9b80a7579943b2d52edb31257c5b" translate="yes" xml:space="preserve">
          <source>Update the group stack with the given attributes.</source>
          <target state="translated">주어진 속성으로 그룹 스택을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="95b7b1cfc33a3ac27790b9f06e48e6ec180bacb8" translate="yes" xml:space="preserve">
          <source>Update the model in the database.</source>
          <target state="translated">데이터베이스에서 모델을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="4c357e933efe3fd4ff108b97cf06c09af63817b0" translate="yes" xml:space="preserve">
          <source>Update the model's update timestamp.</source>
          <target state="translated">모델의 업데이트 타임 스탬프를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="d73f622fadf5aca1b559e04ab1a8d9bd028e95ea" translate="yes" xml:space="preserve">
          <source>Update the parent model on the relationship.</source>
          <target state="translated">관계에서 상위 모델을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="d2a282689bfa27edada19bcc74df552c14f28c5f" translate="yes" xml:space="preserve">
          <source>Update the session with the given ID.</source>
          <target state="translated">주어진 ID로 세션을 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="ec9e4a51844915dfc4414d64b1af57a13f9ce582" translate="yes" xml:space="preserve">
          <source>Update your &lt;code&gt;laravel/framework&lt;/code&gt; dependency to &lt;code&gt;5.7.*&lt;/code&gt; in your &lt;code&gt;composer.json&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;composer.json&lt;/code&gt; 파일 에서 &lt;code&gt;laravel/framework&lt;/code&gt; 종속을 &lt;code&gt;5.7.*&lt;/code&gt; 로 업데이트하십시오 .</target>
        </trans-unit>
        <trans-unit id="c76d18079a076ee34ffc62b5b9bd0909da356dce" translate="yes" xml:space="preserve">
          <source>Updates</source>
          <target state="translated">Updates</target>
        </trans-unit>
        <trans-unit id="93fe4180e870c7c673ccf65b42f6ab5f9b05ae35" translate="yes" xml:space="preserve">
          <source>Updates can also be performed against any number of models that match a given query. In this example, all flights that are &lt;code&gt;active&lt;/code&gt; and have a &lt;code&gt;destination&lt;/code&gt; of &lt;code&gt;San Diego&lt;/code&gt; will be marked as delayed:</source>
          <target state="translated">주어진 쿼리와 일치하는 여러 모델에 대해서도 업데이트를 수행 할 수 있습니다. 이 예에서 모든 항공편 &lt;code&gt;active&lt;/code&gt; 과는이 &lt;code&gt;destination&lt;/code&gt; 의 &lt;code&gt;San Diego&lt;/code&gt; 지연으로 표시됩니다 :</target>
        </trans-unit>
        <trans-unit id="9356b969eea16c86811c9445deb0962c55187fa9" translate="yes" xml:space="preserve">
          <source>Updating A Record On A Pivot Table</source>
          <target state="translated">피벗 테이블에서 레코드 업데이트</target>
        </trans-unit>
        <trans-unit id="1c1786f6cf4784e48504e429f9238b5d18f3f6ae" translate="yes" xml:space="preserve">
          <source>Updating Column Attributes</source>
          <target state="translated">열 속성 업데이트</target>
        </trans-unit>
        <trans-unit id="7d3336de02aa02f967c096f71d0efd6a5f436a21" translate="yes" xml:space="preserve">
          <source>Updating Credit Cards</source>
          <target state="translated">신용 카드 업데이트</target>
        </trans-unit>
        <trans-unit id="7df9a4cf600a48f460195272caa546a2cd3708c2" translate="yes" xml:space="preserve">
          <source>Updating Dependencies</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="178207d52bb680531ef40ebce399a3763b5e6752" translate="yes" xml:space="preserve">
          <source>Updating Envoy</source>
          <target state="translated">사절 업데이트</target>
        </trans-unit>
        <trans-unit id="1866dde603755a649eef61154cacb2f74e9ace28" translate="yes" xml:space="preserve">
          <source>Updating Homestead</source>
          <target state="translated">농가 업데이트</target>
        </trans-unit>
        <trans-unit id="d5f938ba11d6e8912b7b98b91a74c13494ca3782" translate="yes" xml:space="preserve">
          <source>Updating JSON Columns</source>
          <target state="translated">JSON 열 업데이트</target>
        </trans-unit>
        <trans-unit id="e5b09343b2238bb74ea50d37eff3231b6eb0978f" translate="yes" xml:space="preserve">
          <source>Updating Records</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3485fdf3ae3831ba56f645c6f462d9a81292dd" translate="yes" xml:space="preserve">
          <source>Upgrade Guide</source>
          <target state="translated">업그레이드 안내서</target>
        </trans-unit>
        <trans-unit id="a7dd3a1d8ed51cf30314c15a934d4cae0718aa5a" translate="yes" xml:space="preserve">
          <source>Upgrading</source>
          <target state="translated">Upgrading</target>
        </trans-unit>
        <trans-unit id="d505533398635ad971e0ccd38b7c3af38267f58e" translate="yes" xml:space="preserve">
          <source>Upgrading To 5.7.0 From 5.6</source>
          <target state="translated">5.6에서 5.7.0으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="605ab121b0528444f54d7535cf18ad408ae5b7dc" translate="yes" xml:space="preserve">
          <source>Upgrading To Valet 2.0</source>
          <target state="translated">Valet 2.0으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="023fd83a0de52728b167fe09fbf61b2660601158" translate="yes" xml:space="preserve">
          <source>UploadedFile</source>
          <target state="translated">UploadedFile</target>
        </trans-unit>
        <trans-unit id="0fae64d1bc9acb27d0e1c2b4e9cab51326ba47b0" translate="yes" xml:space="preserve">
          <source>UploadedFile (Http)</source>
          <target state="translated">UploadedFile (Http)</target>
        </trans-unit>
        <trans-unit id="929cdbfae255d063719196518f122ff600026a9a" translate="yes" xml:space="preserve">
          <source>UploadedFile::createFromBase()</source>
          <target state="translated">UploadedFile::createFromBase()</target>
        </trans-unit>
        <trans-unit id="8ca9b5c61903439dbe6b306208888d59eae2c415" translate="yes" xml:space="preserve">
          <source>UploadedFile::fake()</source>
          <target state="translated">UploadedFile::fake()</target>
        </trans-unit>
        <trans-unit id="bec6b04348c3d4d79d97bb39bf4b76eea2cc6b5c" translate="yes" xml:space="preserve">
          <source>UploadedFile::get()</source>
          <target state="translated">UploadedFile::get()</target>
        </trans-unit>
        <trans-unit id="eb17a0f2baf59c892614bb1db35c4e10777b559b" translate="yes" xml:space="preserve">
          <source>UploadedFile::parseOptions()</source>
          <target state="translated">UploadedFile::parseOptions()</target>
        </trans-unit>
        <trans-unit id="bee0d4b4858e108447d498caaf1760a65e535671" translate="yes" xml:space="preserve">
          <source>UploadedFile::store()</source>
          <target state="translated">UploadedFile::store()</target>
        </trans-unit>
        <trans-unit id="80446ee3e5915a0c6c137ec25ced82fcaead3852" translate="yes" xml:space="preserve">
          <source>UploadedFile::storeAs()</source>
          <target state="translated">UploadedFile::storeAs()</target>
        </trans-unit>
        <trans-unit id="1efb800abe70f17967219892620a445c0ebc9d89" translate="yes" xml:space="preserve">
          <source>UploadedFile::storePublicly()</source>
          <target state="translated">UploadedFile::storePublicly()</target>
        </trans-unit>
        <trans-unit id="5754c39d9e8ad5919ce457740d4cbe045b8c566a" translate="yes" xml:space="preserve">
          <source>UploadedFile::storePubliclyAs()</source>
          <target state="translated">UploadedFile::storePubliclyAs()</target>
        </trans-unit>
        <trans-unit id="e2aa20e71f24069d864f6960094daa88183d169b" translate="yes" xml:space="preserve">
          <source>UriValidator</source>
          <target state="translated">UriValidator</target>
        </trans-unit>
        <trans-unit id="b9ef8e5c22c477698492f2eb201d546b80e4d992" translate="yes" xml:space="preserve">
          <source>UriValidator (Routing\Matching)</source>
          <target state="translated">UriValidator (라우팅 \ 매칭)</target>
        </trans-unit>
        <trans-unit id="a1ffb6435d5b897a1a9505be58529ca105e7c2b1" translate="yes" xml:space="preserve">
          <source>UriValidator::matches()</source>
          <target state="translated">UriValidator::matches()</target>
        </trans-unit>
        <trans-unit id="9eff5906156c95b179bf55d811165d62dbf6f86e" translate="yes" xml:space="preserve">
          <source>UrlGenerationException</source>
          <target state="translated">UrlGenerationException</target>
        </trans-unit>
        <trans-unit id="885ede85647c1a7b223cc3e8e0925b2257f4658d" translate="yes" xml:space="preserve">
          <source>UrlGenerationException (Routing\Exceptions)</source>
          <target state="translated">UrlGenerationException (라우팅 \ 예외)</target>
        </trans-unit>
        <trans-unit id="a75bc3a2dc94e7d269950325bc494454f3d84051" translate="yes" xml:space="preserve">
          <source>UrlGenerationException::forMissingParameters()</source>
          <target state="translated">UrlGenerationException::forMissingParameters()</target>
        </trans-unit>
        <trans-unit id="0769e65016ed0c832ab200b2aa5f1bd9d7c92758" translate="yes" xml:space="preserve">
          <source>UrlGenerator</source>
          <target state="translated">UrlGenerator</target>
        </trans-unit>
        <trans-unit id="b1e2ed20c7649a6018d6ee4f1ad2e204e0db0e05" translate="yes" xml:space="preserve">
          <source>UrlGenerator (Contracts)</source>
          <target state="translated">UrlGenerator (계약)</target>
        </trans-unit>
        <trans-unit id="43458e6fc9284c0a508e0b54a744075649ddcd6e" translate="yes" xml:space="preserve">
          <source>UrlGenerator (Routing)</source>
          <target state="translated">UrlGenerator (라우팅)</target>
        </trans-unit>
        <trans-unit id="962077cfbfeafaa6253c938f85a8dba9cafae24b" translate="yes" xml:space="preserve">
          <source>UrlGenerator::__construct()</source>
          <target state="translated">UrlGenerator::__construct()</target>
        </trans-unit>
        <trans-unit id="da33d4331a00ff0816ebdb06fb9c8eaf2c90748f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::action()</source>
          <target state="translated">UrlGenerator::action()</target>
        </trans-unit>
        <trans-unit id="a83c1ab93b408a5da87b592ab85b7090eb1321e6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::asset()</source>
          <target state="translated">UrlGenerator::asset()</target>
        </trans-unit>
        <trans-unit id="6f88971227ce1bd491fca24e780bc700e853af1f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::assetFrom()</source>
          <target state="translated">UrlGenerator::assetFrom()</target>
        </trans-unit>
        <trans-unit id="32152f3f1615212665fc00469e3fadf773b1de37" translate="yes" xml:space="preserve">
          <source>UrlGenerator::current()</source>
          <target state="translated">UrlGenerator::current()</target>
        </trans-unit>
        <trans-unit id="2facd0534bc9480e4c20c0a251d1e9a3766da62f" translate="yes" xml:space="preserve">
          <source>UrlGenerator::defaults()</source>
          <target state="translated">UrlGenerator::defaults()</target>
        </trans-unit>
        <trans-unit id="644fec71bb011a37dd3a037828713c3102f8a1ae" translate="yes" xml:space="preserve">
          <source>UrlGenerator::extractQueryString()</source>
          <target state="translated">UrlGenerator::extractQueryString()</target>
        </trans-unit>
        <trans-unit id="930dbb951463ea5132f8f86c24825d1df188f732" translate="yes" xml:space="preserve">
          <source>UrlGenerator::forceRootUrl()</source>
          <target state="translated">UrlGenerator::forceRootUrl()</target>
        </trans-unit>
        <trans-unit id="44324252ab95b010591205848107f64eae2ece3e" translate="yes" xml:space="preserve">
          <source>UrlGenerator::forceScheme()</source>
          <target state="translated">UrlGenerator::forceScheme()</target>
        </trans-unit>
        <trans-unit id="e5ac6e06a412bcd30f0eb5b5e4e1c8981e87b69c" translate="yes" xml:space="preserve">
          <source>UrlGenerator::format()</source>
          <target state="translated">UrlGenerator::format()</target>
        </trans-unit>
        <trans-unit id="471c2173777b81f2c0a978ff1916746caa917310" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatAction()</source>
          <target state="translated">UrlGenerator::formatAction()</target>
        </trans-unit>
        <trans-unit id="f63022f163ec7f591a9530793b4bf3e803fe2b74" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatHostUsing()</source>
          <target state="translated">UrlGenerator::formatHostUsing()</target>
        </trans-unit>
        <trans-unit id="ba9558b4fc925020bac08b64e6aa98800bf077da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatParameters()</source>
          <target state="translated">UrlGenerator::formatParameters()</target>
        </trans-unit>
        <trans-unit id="77bc4e8f54322b0ed0c88425db13e228caed07a4" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatPathUsing()</source>
          <target state="translated">UrlGenerator::formatPathUsing()</target>
        </trans-unit>
        <trans-unit id="d3c233468f2a2a061916a36043db0a969b73ccba" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatRoot()</source>
          <target state="translated">UrlGenerator::formatRoot()</target>
        </trans-unit>
        <trans-unit id="f921db8fec662e2d3a34f7f81cea8393f02001f4" translate="yes" xml:space="preserve">
          <source>UrlGenerator::formatScheme()</source>
          <target state="translated">UrlGenerator::formatScheme()</target>
        </trans-unit>
        <trans-unit id="18904ae888c8163de2140cf5e9c9fcc8ac854381" translate="yes" xml:space="preserve">
          <source>UrlGenerator::full()</source>
          <target state="translated">UrlGenerator::full()</target>
        </trans-unit>
        <trans-unit id="4843c6f1e994ef77abaf5a340e9d49fe158eaf98" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getDefaultParameters()</source>
          <target state="translated">UrlGenerator::getDefaultParameters()</target>
        </trans-unit>
        <trans-unit id="e69d68e8e68722142ae11988c2b9bccc9d4224bc" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getPreviousUrlFromSession()</source>
          <target state="translated">UrlGenerator::getPreviousUrlFromSession()</target>
        </trans-unit>
        <trans-unit id="47adfe9ee6d750475c97577a69ed7056997ab075" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getRequest()</source>
          <target state="translated">UrlGenerator::getRequest()</target>
        </trans-unit>
        <trans-unit id="9ceb4fe2dd747f996e60a5cf9604850dba51dbec" translate="yes" xml:space="preserve">
          <source>UrlGenerator::getSession()</source>
          <target state="translated">UrlGenerator::getSession()</target>
        </trans-unit>
        <trans-unit id="c66d6d241e6efe575ef5c97b8f1015a20d6eba84" translate="yes" xml:space="preserve">
          <source>UrlGenerator::hasValidSignature()</source>
          <target state="translated">UrlGenerator::hasValidSignature()</target>
        </trans-unit>
        <trans-unit id="ca1cb3b12049ce569522f22cf2b619ab2168ffef" translate="yes" xml:space="preserve">
          <source>UrlGenerator::isValidUrl()</source>
          <target state="translated">UrlGenerator::isValidUrl()</target>
        </trans-unit>
        <trans-unit id="d2d25b87c42581a75d02cef68ebc5bb978512ff8" translate="yes" xml:space="preserve">
          <source>UrlGenerator::pathFormatter()</source>
          <target state="translated">UrlGenerator::pathFormatter()</target>
        </trans-unit>
        <trans-unit id="68667b7bb1b86d45ff800caabb6ca6b0e3a75ad6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::previous()</source>
          <target state="translated">UrlGenerator::previous()</target>
        </trans-unit>
        <trans-unit id="085f58c8ee1be5809a1eb56bb0def52fe0899402" translate="yes" xml:space="preserve">
          <source>UrlGenerator::removeIndex()</source>
          <target state="translated">UrlGenerator::removeIndex()</target>
        </trans-unit>
        <trans-unit id="796c12bf7e518d5b6caa6e3b04876f9d41e2e1b6" translate="yes" xml:space="preserve">
          <source>UrlGenerator::route()</source>
          <target state="translated">UrlGenerator::route()</target>
        </trans-unit>
        <trans-unit id="3f4b888a055754d4bd2a2e496a6472a71a5f1232" translate="yes" xml:space="preserve">
          <source>UrlGenerator::routeUrl()</source>
          <target state="translated">UrlGenerator::routeUrl()</target>
        </trans-unit>
        <trans-unit id="546e38149374e7d15613b598c3cda70058e0379d" translate="yes" xml:space="preserve">
          <source>UrlGenerator::secure()</source>
          <target state="translated">UrlGenerator::secure()</target>
        </trans-unit>
        <trans-unit id="9e06c873e1ff0be7027c084e83ca847125148f36" translate="yes" xml:space="preserve">
          <source>UrlGenerator::secureAsset()</source>
          <target state="translated">UrlGenerator::secureAsset()</target>
        </trans-unit>
        <trans-unit id="0049d696c4c49ab56330e02b64abf7c5782c2f21" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setKeyResolver()</source>
          <target state="translated">UrlGenerator::setKeyResolver()</target>
        </trans-unit>
        <trans-unit id="7bb84eafb7b49f8faf7aad9b8973b34509555187" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRequest()</source>
          <target state="translated">UrlGenerator::setRequest()</target>
        </trans-unit>
        <trans-unit id="789e4a0b11bf0edae16be4459b76d327a98e3f44" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRootControllerNamespace()</source>
          <target state="translated">UrlGenerator::setRootControllerNamespace()</target>
        </trans-unit>
        <trans-unit id="fb3f373477aa5a6ec53629555cabdc2308a9cd60" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setRoutes()</source>
          <target state="translated">UrlGenerator::setRoutes()</target>
        </trans-unit>
        <trans-unit id="4ff19c4e0f57466ea6fc6dfa735551d5e85bac88" translate="yes" xml:space="preserve">
          <source>UrlGenerator::setSessionResolver()</source>
          <target state="translated">UrlGenerator::setSessionResolver()</target>
        </trans-unit>
        <trans-unit id="7eaed9594e126480c5f9c637fb9b88556faea2da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::signedRoute()</source>
          <target state="translated">UrlGenerator::signedRoute()</target>
        </trans-unit>
        <trans-unit id="508e07bbc212c1d6693da067f10d6a3d810056da" translate="yes" xml:space="preserve">
          <source>UrlGenerator::temporarySignedRoute()</source>
          <target state="translated">UrlGenerator::temporarySignedRoute()</target>
        </trans-unit>
        <trans-unit id="e75eb34daec7052fa4f1c5ef75a0e419594ddb18" translate="yes" xml:space="preserve">
          <source>UrlGenerator::to()</source>
          <target state="translated">UrlGenerator::to()</target>
        </trans-unit>
        <trans-unit id="4d80db61d2d377e640cbb363d032fd4a26ee4e0c" translate="yes" xml:space="preserve">
          <source>UrlGenerator::toRoute()</source>
          <target state="translated">UrlGenerator::toRoute()</target>
        </trans-unit>
        <trans-unit id="af56f7f12d9fd2230182fbdd0a6bb833213966ca" translate="yes" xml:space="preserve">
          <source>UrlRoutable</source>
          <target state="translated">UrlRoutable</target>
        </trans-unit>
        <trans-unit id="88831b58f6d1222d31691ec4661fb51691d9589f" translate="yes" xml:space="preserve">
          <source>UrlRoutable (Contracts)</source>
          <target state="translated">UrlRoutable (계약)</target>
        </trans-unit>
        <trans-unit id="26867eb6098ebe702718474a39808543575a18cf" translate="yes" xml:space="preserve">
          <source>UrlRoutable::getRouteKey()</source>
          <target state="translated">UrlRoutable::getRouteKey()</target>
        </trans-unit>
        <trans-unit id="531de13b5fac1fca950c86df5cd3cd3c56af20ab" translate="yes" xml:space="preserve">
          <source>UrlRoutable::getRouteKeyName()</source>
          <target state="translated">UrlRoutable::getRouteKeyName()</target>
        </trans-unit>
        <trans-unit id="f64287f41a85f084f8752d60b768a92aa5c5dea2" translate="yes" xml:space="preserve">
          <source>UrlRoutable::resolveRouteBinding()</source>
          <target state="translated">UrlRoutable::resolveRouteBinding()</target>
        </trans-unit>
        <trans-unit id="82d9aa8714d152b96d98145954211474a4a200b4" translate="yes" xml:space="preserve">
          <source>UrlWindow</source>
          <target state="translated">UrlWindow</target>
        </trans-unit>
        <trans-unit id="4ac09d342c760e171ef290e74de15fb664e0758f" translate="yes" xml:space="preserve">
          <source>UrlWindow (Pagination)</source>
          <target state="translated">UrlWindow (매개)</target>
        </trans-unit>
        <trans-unit id="254ee6bbdd5efd79d6d42ad23b9937c22c401a12" translate="yes" xml:space="preserve">
          <source>UrlWindow::__construct()</source>
          <target state="translated">UrlWindow::__construct()</target>
        </trans-unit>
        <trans-unit id="a8710b73bc828e6c8f0822bf04003e610c0db5cb" translate="yes" xml:space="preserve">
          <source>UrlWindow::currentPage()</source>
          <target state="translated">UrlWindow::currentPage()</target>
        </trans-unit>
        <trans-unit id="364f275d33ecdb278caba77beaf055db29737f00" translate="yes" xml:space="preserve">
          <source>UrlWindow::get()</source>
          <target state="translated">UrlWindow::get()</target>
        </trans-unit>
        <trans-unit id="710443fde65d94cfc63eedfc96ba98f04acb5c30" translate="yes" xml:space="preserve">
          <source>UrlWindow::getAdjacentUrlRange()</source>
          <target state="translated">UrlWindow::getAdjacentUrlRange()</target>
        </trans-unit>
        <trans-unit id="f3e3248b32fec4e45b1a7bc4a3bee3e3f2318828" translate="yes" xml:space="preserve">
          <source>UrlWindow::getFinish()</source>
          <target state="translated">UrlWindow::getFinish()</target>
        </trans-unit>
        <trans-unit id="c122b588961947ddb91ff54012612f8df543dd7d" translate="yes" xml:space="preserve">
          <source>UrlWindow::getFullSlider()</source>
          <target state="translated">UrlWindow::getFullSlider()</target>
        </trans-unit>
        <trans-unit id="a2a4408d81c496eef32b1bd4f094b611b7188eb9" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSliderTooCloseToBeginning()</source>
          <target state="translated">UrlWindow::getSliderTooCloseToBeginning()</target>
        </trans-unit>
        <trans-unit id="1d6e0206f309c298f5ae5fcd088665a799719b54" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSliderTooCloseToEnding()</source>
          <target state="translated">UrlWindow::getSliderTooCloseToEnding()</target>
        </trans-unit>
        <trans-unit id="4f04e8bc590290708741548077563e5ad0f2e67b" translate="yes" xml:space="preserve">
          <source>UrlWindow::getSmallSlider()</source>
          <target state="translated">UrlWindow::getSmallSlider()</target>
        </trans-unit>
        <trans-unit id="7d90fac9aa941967c93f97cec7322364ee9590ef" translate="yes" xml:space="preserve">
          <source>UrlWindow::getStart()</source>
          <target state="translated">UrlWindow::getStart()</target>
        </trans-unit>
        <trans-unit id="b131c59f5e016f4708ef17de7064718df2080c67" translate="yes" xml:space="preserve">
          <source>UrlWindow::getUrlSlider()</source>
          <target state="translated">UrlWindow::getUrlSlider()</target>
        </trans-unit>
        <trans-unit id="1f9db9230bc50f04616b2fbcf0215e94d105cadc" translate="yes" xml:space="preserve">
          <source>UrlWindow::hasPages()</source>
          <target state="translated">UrlWindow::hasPages()</target>
        </trans-unit>
        <trans-unit id="09c4f7c2a4e5c08140573da3f0f13d9b494e5e76" translate="yes" xml:space="preserve">
          <source>UrlWindow::lastPage()</source>
          <target state="translated">UrlWindow::lastPage()</target>
        </trans-unit>
        <trans-unit id="920ce395356ed4a66196648b5dd3fdf76c6236e5" translate="yes" xml:space="preserve">
          <source>UrlWindow::make()</source>
          <target state="translated">UrlWindow::make()</target>
        </trans-unit>
        <trans-unit id="cd92a2af065149bb26b02b77ff1a08bf20165eae" translate="yes" xml:space="preserve">
          <source>Use the write pdo for query.</source>
          <target state="translated">쿼리에 쓰기 pdo를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4cf361c53629d5b3a5f597c733c74c5fb7ac7600" translate="yes" xml:space="preserve">
          <source>Used to extract a sub-section of the data for faster iteration.</source>
          <target state="translated">빠른 반복을 위해 데이터의 하위 섹션을 추출하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9f8a2389a20ca0752aa9e95093515517e90e194c" translate="yes" xml:space="preserve">
          <source>User</source>
          <target state="translated">User</target>
        </trans-unit>
        <trans-unit id="f6e6901a736331a2d03d0bae71f2aa30c7a437c7" translate="yes" xml:space="preserve">
          <source>User (Foundation\Auth)</source>
          <target state="translated">사용자 (Foundation \ Auth)</target>
        </trans-unit>
        <trans-unit id="c5894e60fa9cbc30ade4b7159bc3b136927b3eb5" translate="yes" xml:space="preserve">
          <source>User Preferred Locales</source>
          <target state="translated">사용자 선호 로케일</target>
        </trans-unit>
        <trans-unit id="00694732aa07caf73ddfd791cbe4fa72d599807b" translate="yes" xml:space="preserve">
          <source>User exposed observable events.</source>
          <target state="translated">사용자가 관찰 가능한 이벤트를 노출했습니다.</target>
        </trans-unit>
        <trans-unit id="19932fcd6dd1e91b6f6ec9819c90fd63e29c3f4e" translate="yes" xml:space="preserve">
          <source>UserProvider</source>
          <target state="translated">UserProvider</target>
        </trans-unit>
        <trans-unit id="b1bacba86cebdb93ac86015e7becb4856b6787db" translate="yes" xml:space="preserve">
          <source>UserProvider (Contracts)</source>
          <target state="translated">UserProvider (계약)</target>
        </trans-unit>
        <trans-unit id="683fa399ea4e3bea06e0f6293d7beffac735ea8c" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveByCredentials()</source>
          <target state="translated">UserProvider::retrieveByCredentials()</target>
        </trans-unit>
        <trans-unit id="4d5d883b153ed3c4b328c3b600b9be62a29d66f5" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveById()</source>
          <target state="translated">UserProvider::retrieveById()</target>
        </trans-unit>
        <trans-unit id="f643afb3ac6a9e952d9007cdb9e0117047753cbf" translate="yes" xml:space="preserve">
          <source>UserProvider::retrieveByToken()</source>
          <target state="translated">UserProvider::retrieveByToken()</target>
        </trans-unit>
        <trans-unit id="2800a0be963e2c4eab0cca73e021a0fdc9bbca68" translate="yes" xml:space="preserve">
          <source>UserProvider::updateRememberToken()</source>
          <target state="translated">UserProvider::updateRememberToken()</target>
        </trans-unit>
        <trans-unit id="66b7b24c2b975df0a3277fc043c17a1d74c004c1" translate="yes" xml:space="preserve">
          <source>UserProvider::validateCredentials()</source>
          <target state="translated">UserProvider::validateCredentials()</target>
        </trans-unit>
        <trans-unit id="2e7db576eadb453c186f445a796970d3e0af302f" translate="yes" xml:space="preserve">
          <source>Username Customization</source>
          <target state="translated">사용자 이름 사용자 정의</target>
        </trans-unit>
        <trans-unit id="2c1db596d2dfc88f58701d9fe9d57e9dcdcc4032" translate="yes" xml:space="preserve">
          <source>Using A Global &lt;code&gt;from&lt;/code&gt; Address</source>
          <target state="translated">주소 &lt;code&gt;from&lt;/code&gt; 글로벌 사용</target>
        </trans-unit>
        <trans-unit id="216f35abbad1de6e68b33b2cdcc8837d76c280f4" translate="yes" xml:space="preserve">
          <source>Using An Example Application</source>
          <target state="translated">예제 응용 프로그램 사용</target>
        </trans-unit>
        <trans-unit id="a9d983ec2ba25e12439b4bb33bb9cb4ff20cec94" translate="yes" xml:space="preserve">
          <source>Using Another Domain</source>
          <target state="translated">다른 도메인 사용</target>
        </trans-unit>
        <trans-unit id="25112a4804e46ede87116524e3f34212886cddfb" translate="yes" xml:space="preserve">
          <source>Using Closures</source>
          <target state="translated">클로저 사용</target>
        </trans-unit>
        <trans-unit id="25786ca0bd0d30fd8fa61a08279117e107aabca9" translate="yes" xml:space="preserve">
          <source>Using Components</source>
          <target state="translated">컴포넌트 사용</target>
        </trans-unit>
        <trans-unit id="24932eb2b8d5b43b0680490a8468087bc33abbd5" translate="yes" xml:space="preserve">
          <source>Using Cursors</source>
          <target state="translated">커서 사용</target>
        </trans-unit>
        <trans-unit id="fa10774d0e271ce1daa32ba7d67741dff0dd4dd8" translate="yes" xml:space="preserve">
          <source>Using Extensions</source>
          <target state="translated">확장 사용</target>
        </trans-unit>
        <trans-unit id="686c3d4bfe9f7aa5efa5e0095401e7adf93fea51" translate="yes" xml:space="preserve">
          <source>Using Factories</source>
          <target state="translated">공장 사용</target>
        </trans-unit>
        <trans-unit id="f2036f1ba7e70d3832aa3097ae413a7dc03e90ba" translate="yes" xml:space="preserve">
          <source>Using Forms</source>
          <target state="translated">양식 사용</target>
        </trans-unit>
        <trans-unit id="9ee6d0556e77496962a7f68fc2938ee8a2b4b239" translate="yes" xml:space="preserve">
          <source>Using Model Factories</source>
          <target state="translated">모델 팩토리 사용</target>
        </trans-unit>
        <trans-unit id="9024e7794fa530c1d7fe273d02883b5baa90cf94" translate="yes" xml:space="preserve">
          <source>Using Multiple Database Connections</source>
          <target state="translated">여러 데이터베이스 연결 사용</target>
        </trans-unit>
        <trans-unit id="3705315f35938a6abf481834794518bd704bd8ea" translate="yes" xml:space="preserve">
          <source>Using Multiple Redis Connections</source>
          <target state="translated">여러 Redis 연결 사용</target>
        </trans-unit>
        <trans-unit id="70946ec4b6a6083b237c2f5b126322c2957bd26c" translate="yes" xml:space="preserve">
          <source>Using Named Bindings</source>
          <target state="translated">명명 된 바인딩 사용</target>
        </trans-unit>
        <trans-unit id="55cb1e4b38a0c574a47a6387cc78f55aea1bb2bc" translate="yes" xml:space="preserve">
          <source>Using OAuth2 with authorization codes is how most developers are familiar with OAuth2. When using authorization codes, a client application will redirect a user to your server where they will either approve or deny the request to issue an access token to the client.</source>
          <target state="translated">인증 코드와 함께 OAuth2를 사용하면 대부분의 개발자가 OAuth2에 익숙합니다. 인증 코드를 사용할 때 클라이언트 응용 프로그램은 사용자를 서버로 리디렉션하여 클라이언트에 대한 액세스 토큰 발급 요청을 승인하거나 거부합니다.</target>
        </trans-unit>
        <trans-unit id="96139a5c99e2a55f4e1d42578e8b77ebaa7c6ecd" translate="yes" xml:space="preserve">
          <source>Using Other Browsers</source>
          <target state="translated">다른 브라우저 사용</target>
        </trans-unit>
        <trans-unit id="547f3d366f6ba6dbebb442ff52e5209ac22bfe3d" translate="yes" xml:space="preserve">
          <source>Using React</source>
          <target state="translated">반응 사용</target>
        </trans-unit>
        <trans-unit id="1f29841b38fd243f89b80a9f29f63a4ed2ee9216" translate="yes" xml:space="preserve">
          <source>Using Rule Objects</source>
          <target state="translated">규칙 객체 사용</target>
        </trans-unit>
        <trans-unit id="e2228f5e9598a5d7c4ea863d0e5acf274d8ad1a0" translate="yes" xml:space="preserve">
          <source>Using Short Keys</source>
          <target state="translated">단축키 사용</target>
        </trans-unit>
        <trans-unit id="c142408ff0ea25a774b51389fb5125e10d488f17" translate="yes" xml:space="preserve">
          <source>Using The &lt;code&gt;from&lt;/code&gt; Method</source>
          <target state="translated">사용 &lt;code&gt;from&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="e828f2da10d4699211aea8ec287ea22dc98d8e4a" translate="yes" xml:space="preserve">
          <source>Using The Encrypter</source>
          <target state="translated">암호화 기 사용</target>
        </trans-unit>
        <trans-unit id="32e4c8f87a22afe4dc721aef0e4172613cbd432a" translate="yes" xml:space="preserve">
          <source>Using The Keyboard</source>
          <target state="translated">키보드 사용</target>
        </trans-unit>
        <trans-unit id="6acef1ffb7973221335871f1416a7eb621f9bb2c" translate="yes" xml:space="preserve">
          <source>Using The Mouse</source>
          <target state="translated">마우스 사용</target>
        </trans-unit>
        <trans-unit id="2be585cd02cbac6e6aa7f3a5e76a42890611569a" translate="yes" xml:space="preserve">
          <source>Using The Notifiable Trait</source>
          <target state="translated">통지 가능한 특성 사용</target>
        </trans-unit>
        <trans-unit id="bc0066137ddde9f57acea92265960870ddbc85d4" translate="yes" xml:space="preserve">
          <source>Using The Notification Facade</source>
          <target state="translated">알림 파사드 사용</target>
        </trans-unit>
        <trans-unit id="2c4389b8f20380044dd4d1a71631f1bd707c2a9a" translate="yes" xml:space="preserve">
          <source>Using The Session</source>
          <target state="translated">세션 사용</target>
        </trans-unit>
        <trans-unit id="4ddeb48ad6c4a3dbd99803569688896b32d1a88b" translate="yes" xml:space="preserve">
          <source>Using Translation Strings As Keys</source>
          <target state="translated">변환 문자열을 키로 사용</target>
        </trans-unit>
        <trans-unit id="dd22fed353795223638fa3d57ab7cca926b4236a" translate="yes" xml:space="preserve">
          <source>Using a few simple methods, you may access all of the user input from your &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; instance without worrying about which HTTP verb was used for the request. Regardless of the HTTP verb, the &lt;code&gt;input&lt;/code&gt; method may be used to retrieve user input:</source>
          <target state="translated">몇 가지 간단한 방법 을 사용하면 요청에 사용 된 HTTP 동사에 대해 걱정하지 않고 &lt;code&gt;Illuminate\Http\Request&lt;/code&gt; 인스턴스 에서 모든 사용자 입력에 액세스 할 수 있습니다 . HTTP 동사에 관계없이 &lt;code&gt;input&lt;/code&gt; 방법을 사용하여 사용자 입력을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="406c1ebda5c578fc0028f36c7519ac73224c8118" translate="yes" xml:space="preserve">
          <source>Using either the &lt;code&gt;pingBefore($url)&lt;/code&gt; or &lt;code&gt;thenPing($url)&lt;/code&gt; feature requires the Guzzle HTTP library. You can add Guzzle to your project using the Composer package manager:</source>
          <target state="translated">중 하나를 사용 &lt;code&gt;pingBefore($url)&lt;/code&gt; 또는 &lt;code&gt;thenPing($url)&lt;/code&gt; 기능은 목구멍 HTTP 라이브러리가 필요합니다. Composer 패키지 관리자를 사용하여 프로젝트에 Guzzle을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e30d58ca464af791be0f4dd1b5adbb1b8914db2" translate="yes" xml:space="preserve">
          <source>Using real-time facades, you may treat any class in your application as if it were a facade. To illustrate how this can be used, let's examine an alternative. For example, let's assume our &lt;code&gt;Podcast&lt;/code&gt; model has a &lt;code&gt;publish&lt;/code&gt; method. However, in order to publish the podcast, we need to inject a &lt;code&gt;Publisher&lt;/code&gt; instance:</source>
          <target state="translated">실시간 파사드를 사용하면 애플리케이션의 모든 클래스를 파사드 인 것처럼 취급 할 수 있습니다. 이것이 어떻게 사용되는지 설명하기 위해 대안을 살펴 보자. 예를 들어, &lt;code&gt;Podcast&lt;/code&gt; 모델에 &lt;code&gt;publish&lt;/code&gt; 방법 이 있다고 가정합니다 . 그러나 팟 캐스트를 발행하려면 &lt;code&gt;Publisher&lt;/code&gt; 인스턴스 를 주입해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1989c15c720e800a884e34521b523d9b38a95afa" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Cache&lt;/code&gt; facade, you may access various cache stores via the &lt;code&gt;store&lt;/code&gt; method. The key passed to the &lt;code&gt;store&lt;/code&gt; method should correspond to one of the stores listed in the &lt;code&gt;stores&lt;/code&gt; configuration array in your &lt;code&gt;cache&lt;/code&gt; configuration file:</source>
          <target state="translated">&lt;code&gt;Cache&lt;/code&gt; 파사드를 사용하면 &lt;code&gt;store&lt;/code&gt; 메소드 를 통해 다양한 캐시 저장소에 액세스 할 수 있습니다 . &lt;code&gt;store&lt;/code&gt; 메소드에 전달 된 키는 &lt;code&gt;cache&lt;/code&gt; 구성 파일 의 &lt;code&gt;stores&lt;/code&gt; 구성 배열에 나열된 상점 중 하나에 해당해야 합니다.</target>
        </trans-unit>
        <trans-unit id="b7a1520a74cd435ee873b2f1ed48c86b342a6b5f" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Route::fallback&lt;/code&gt; method, you may define a route that will be executed when no other route matches the incoming request. Typically, unhandled requests will automatically render a &quot;404&quot; page via your application's exception handler. However, since you may define the &lt;code&gt;fallback&lt;/code&gt; route within your &lt;code&gt;routes/web.php&lt;/code&gt; file, all middleware in the &lt;code&gt;web&lt;/code&gt; middleware group will apply to the route. Of course, you are free to add additional middleware to this route as needed:</source>
          <target state="translated">&lt;code&gt;Route::fallback&lt;/code&gt; 메서드를 사용하면 들어오는 요청과 일치하는 다른 경로가 없을 때 실행될 경로를 정의 할 수 있습니다. 일반적으로 처리되지 않은 요청은 응용 프로그램의 예외 처리기를 통해 &quot;404&quot;페이지를 자동으로 렌더링합니다. 그러나 &lt;code&gt;routes/web.php&lt;/code&gt; 파일 내에 &lt;code&gt;fallback&lt;/code&gt; 경로를 정의 할 수 있으므로 &lt;code&gt;web&lt;/code&gt; 미들웨어 그룹 의 모든 미들웨어 가 해당 경로에 적용됩니다. 물론 필요에 따라이 경로에 추가 미들웨어를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65f521afa14d4f75e7a8432c2968b7b3abc4f8a2" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; methods on the &lt;code&gt;Queue&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, you may specify callbacks to be executed before or after a queued job is processed. These callbacks are a great opportunity to perform additional logging or increment statistics for a dashboard. Typically, you should call these methods from a &lt;a href=&quot;providers&quot;&gt;service provider&lt;/a&gt;. For example, we may use the &lt;code&gt;AppServiceProvider&lt;/code&gt; that is included with Laravel:</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;파사드&lt;/a&gt; 에서 &lt;code&gt;before&lt;/code&gt; 및 &lt;code&gt;after&lt;/code&gt; 메소드를 사용하여 대기중인 작업이 처리되기 전 또는 후에 실행될 콜백을 지정할 수 있습니다. 이러한 콜백은 대시 보드에 대한 추가 로깅 또는 증분 통계를 수행 할 수있는 좋은 기회입니다. 일반적으로 &lt;a href=&quot;providers&quot;&gt;서비스 제공 업체&lt;/a&gt; 에서이 메소드를 호출해야합니다 . 예를 들어 Laravel에 포함 된 &lt;code&gt;AppServiceProvider&lt;/code&gt; 를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b783bcb9ebc1f36e40dc3bc7c1644f534e87b195" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;before&lt;/code&gt; and &lt;code&gt;after&lt;/code&gt; methods, you may specify code to be executed before and after the scheduled task is complete:</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; 및 &lt;code&gt;after&lt;/code&gt; 메소드를 사용하여 예약 된 작업이 완료되기 전후에 실행될 코드를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="678c4bdbc0980fe89557af54092436241e5d6049" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;emailOutputTo&lt;/code&gt; method, you may e-mail the output to an e-mail address of your choice. Before e-mailing the output of a task, you should configure Laravel's &lt;a href=&quot;mail&quot;&gt;e-mail services&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;emailOutputTo&lt;/code&gt; 메소드를 사용하여 출력을 선택한 이메일 주소로 이메일로 보낼 수 있습니다. 작업 출력을 이메일로 보내기 전에 Laravel의 &lt;a href=&quot;mail&quot;&gt;이메일 서비스를&lt;/a&gt; 구성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="805cc0a60fdd61923070deec51473812bc87daf6" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;first&lt;/code&gt; method, you may create the first view that exists in a given array of views. This is useful if your application or package allows views to be customized or overwritten:</source>
          <target state="translated">&lt;code&gt;first&lt;/code&gt; 방법을 사용하면 주어진보기 배열에 존재하는 첫 번째보기를 만들 수 있습니다. 응용 프로그램이나 패키지에서보기를 사용자 정의하거나 덮어 쓸 수있는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d89c7129bfcb2320bd6e3cf389f22cc353c3275e" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;looping&lt;/code&gt; method on the &lt;code&gt;Queue&lt;/code&gt;&lt;a href=&quot;facades&quot;&gt;facade&lt;/a&gt;, you may specify callbacks that execute before the worker attempts to fetch a job from a queue. For example, you might register a Closure to rollback any transactions that were left open by a previously failed job:</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; &lt;a href=&quot;facades&quot;&gt;파사드&lt;/a&gt; 에서 &lt;code&gt;looping&lt;/code&gt; 방법을 사용하여 작업자가 대기열에서 작업을 가져 오기 전에 실행되는 콜백을 지정할 수 있습니다. 예를 들어, 이전에 실패한 작업으로 열린 트랜잭션을 롤백하기 위해 Closure를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c88eb0e8a9ad89538b979ac4c1c5c209c1188062" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;pingBefore&lt;/code&gt; and &lt;code&gt;thenPing&lt;/code&gt; methods, the scheduler can automatically ping a given URL before or after a task is complete. This method is useful for notifying an external service, such as &lt;a href=&quot;https://envoyer.io&quot;&gt;Laravel Envoyer&lt;/a&gt;, that your scheduled task is commencing or has finished execution:</source>
          <target state="translated">은 Using &lt;code&gt;pingBefore&lt;/code&gt; 및 &lt;code&gt;thenPing&lt;/code&gt; 작업이 완료되기 전에 또는 그 이후에 방법, 스케줄러는 자동으로 해당 URL을 Ping 할 수 있습니다. 이 방법은 &lt;a href=&quot;https://envoyer.io&quot;&gt;Laravel Envoyer&lt;/a&gt; 와 같은 외부 서비스에 예약 된 작업이 시작되었거나 실행이 완료 되었음을 알리는 데 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="50064d12b24b039c91d1244e92a456d73c9241ec" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;psubscribe&lt;/code&gt; method, you may subscribe to a wildcard channel, which may be useful for catching all messages on all channels. The &lt;code&gt;$channel&lt;/code&gt; name will be passed as the second argument to the provided callback &lt;code&gt;Closure&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;psubscribe&lt;/code&gt; 메소드를 사용하면 와일드 카드 채널을 구독 할 수 있으며 모든 채널의 모든 메시지를 포착하는 데 유용 할 수 있습니다. &lt;code&gt;$channel&lt;/code&gt; 이름이 제공 콜백에 두 번째 인수로 전달됩니다 &lt;code&gt;Closure&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7cff7155c545f37c1ab3e589532cfcfadb593e62" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;queue&lt;/code&gt; method on the &lt;code&gt;Artisan&lt;/code&gt; facade, you may even queue Artisan commands so they are processed in the background by your &lt;a href=&quot;queues&quot;&gt;queue workers&lt;/a&gt;. Before using this method, make sure you have configured your queue and are running a queue listener:</source>
          <target state="translated">&lt;code&gt;Artisan&lt;/code&gt; 파사드 에서 &lt;code&gt;queue&lt;/code&gt; 방법을 사용하면 &lt;a href=&quot;queues&quot;&gt;대기열 작업자&lt;/a&gt; 가 백그라운드에서 처리하도록 Artisan 명령을 대기열에 넣을 수도 있습니다 . 이 방법을 사용하기 전에 큐를 구성하고 큐 리스너를 실행 중인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="27a24dbd64e1ac755132eb44feff861706999322" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;timezone&lt;/code&gt; method, you may specify that a scheduled task's time should be interpreted within a given timezone:</source>
          <target state="translated">&lt;code&gt;timezone&lt;/code&gt; 방법을 사용하여 예약 된 작업 시간을 지정된 시간대 내에서 해석하도록 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3ed6eadd37b5bc0955a052e8e60637bdc9c6048" translate="yes" xml:space="preserve">
          <source>Using the Memcached driver requires the &lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;Memcached PECL package&lt;/a&gt; to be installed. You may list all of your Memcached servers in the &lt;code&gt;config/cache.php&lt;/code&gt; configuration file:</source>
          <target state="translated">Memcached 드라이버를 사용하려면 &lt;a href=&quot;https://pecl.php.net/package/memcached&quot;&gt;Memcached PECL 패키지&lt;/a&gt; 가 설치되어 있어야합니다. &lt;code&gt;config/cache.php&lt;/code&gt; 구성 파일 에 모든 Memcached 서버를 나열 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bcb12112c0f1179c9c17c9f8020135846a27f2d8" translate="yes" xml:space="preserve">
          <source>Utilizing A Local Scope</source>
          <target state="translated">로컬 범위 활용</target>
        </trans-unit>
        <trans-unit id="976bf1c80ce87f4d5095dac7464aeabbcb5981e2" translate="yes" xml:space="preserve">
          <source>UuidInterface</source>
          <target state="translated">UuidInterface</target>
        </trans-unit>
        <trans-unit id="1033afd1ffe433be3334a586831b5b90e719c44a" translate="yes" xml:space="preserve">
          <source>VARCHAR equivalent column with a optional length.</source>
          <target state="translated">선택적 길이의 VARCHAR 동등한 열.</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">VERSION</target>
        </trans-unit>
        <trans-unit id="7c4318788e30db66abddf721412f42bf7eac6d83" translate="yes" xml:space="preserve">
          <source>VISIBILITY_PRIVATE</source>
          <target state="translated">VISIBILITY_PRIVATE</target>
        </trans-unit>
        <trans-unit id="17fd123d652bb24f8e16616f88600967f74eeb90" translate="yes" xml:space="preserve">
          <source>VISIBILITY_PUBLIC</source>
          <target state="translated">VISIBILITY_PUBLIC</target>
        </trans-unit>
        <trans-unit id="1f185450ee544ae965bb9573dd704b8abfefef26" translate="yes" xml:space="preserve">
          <source>Valet 2.0 transitions Valet's underlying web server from Caddy to Nginx. Before upgrading to this version you should run the following commands to stop and uninstall the existing Caddy daemon:</source>
          <target state="translated">Valet 2.0은 Valet의 기본 웹 서버를 Caddy에서 Nginx로 전환합니다. 이 버전으로 업그레이드하기 전에 다음 명령을 실행하여 기존 Caddy 데몬을 중지하고 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="eb51daea5519daa59c110af3ff0fdce0f775a821" translate="yes" xml:space="preserve">
          <source>Valet Or Homestead</source>
          <target state="translated">발렛 또는 농가</target>
        </trans-unit>
        <trans-unit id="26fa6221d420c739c957e39e36b8669ec9493b9a" translate="yes" xml:space="preserve">
          <source>Valet even includes a command to share your local sites with the world. No additional software installation is required once Valet is installed.</source>
          <target state="translated">Valet에는 로컬 사이트를 전세계와 공유하는 명령도 포함되어 있습니다. Valet를 설치 한 후에는 추가 소프트웨어를 설치할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="15bee6457bf5499b6941a3d7bc06352107aef258" translate="yes" xml:space="preserve">
          <source>Valet is a Laravel development environment for Mac minimalists. No Vagrant, no &lt;code&gt;/etc/hosts&lt;/code&gt; file. You can even share your sites publicly using local tunnels. &lt;em&gt;Yeah, we like it too.&lt;/em&gt;</source>
          <target state="translated">Valet은 Mac 미니멀리스트를위한 Laravel 개발 환경입니다. 방랑 없음, &lt;code&gt;/etc/hosts&lt;/code&gt; 파일 없음 로컬 터널을 사용하여 사이트를 공개적으로 공유 할 수도 있습니다. &lt;em&gt;예, 우리도 좋아합니다.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="42c0b9ead0c11c596b4a96ec474adae3a3c540be" translate="yes" xml:space="preserve">
          <source>Valet only supports Mac, and requires you to install PHP and a database server directly onto your local machine. This is easily achieved by using &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; with commands like &lt;code&gt;brew install php&lt;/code&gt; and &lt;code&gt;brew install mysql&lt;/code&gt;. Valet provides a blazing fast local development environment with minimal resource consumption, so it's great for developers who only require PHP / MySQL and do not need a fully virtualized development environment.</source>
          <target state="translated">Valet는 Mac 만 지원하며 PHP와 데이터베이스 서버를 로컬 컴퓨터에 직접 설치해야합니다. 이것은 &lt;code&gt;brew install php&lt;/code&gt; 및 &lt;code&gt;brew install mysql&lt;/code&gt; 과 같은 명령으로 &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt; 를 사용하면 쉽게 달성됩니다 . Valet는 최소한의 리소스 소비로 놀라 울 정도로 빠른 로컬 개발 환경을 제공하므로 PHP / MySQL 만 필요하고 완전히 가상화 된 개발 환경이 필요하지 않은 개발자에게 적합합니다.</target>
        </trans-unit>
        <trans-unit id="6dbfbc5d8337390ade7cc39d221ef41687ed6cab" translate="yes" xml:space="preserve">
          <source>Valet will automatically start its daemon each time your machine boots. There is no need to run &lt;code&gt;valet start&lt;/code&gt; or &lt;code&gt;valet install&lt;/code&gt; ever again once the initial Valet installation is complete.</source>
          <target state="translated">Valet는 컴퓨터가 부팅 할 때마다 데몬을 자동으로 시작합니다. 최초 Valet 설치가 완료된 후에는 &lt;code&gt;valet start&lt;/code&gt; 또는 &lt;code&gt;valet install&lt;/code&gt; 을 다시 실행할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="57e96c6ba747a0c200bcccb1b419a4e886fdbece" translate="yes" xml:space="preserve">
          <source>Validate a given attribute against a rule.</source>
          <target state="translated">주어진 속성을 규칙과 비교하여 검증하십시오.</target>
        </trans-unit>
        <trans-unit id="bf05c9bb9c98f61e1d302485ed610ec9dbcd9444" translate="yes" xml:space="preserve">
          <source>Validate a given rule against a route and request.</source>
          <target state="translated">경로 및 요청에 대해 지정된 규칙의 유효성을 검사하십시오.</target>
        </trans-unit>
        <trans-unit id="d4b6027fe5ad73a4c290bbac11d3555f16f1dd96" translate="yes" xml:space="preserve">
          <source>Validate a password reset for the given credentials.</source>
          <target state="translated">주어진 자격 증명에 대한 비밀번호 재설정을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6a0c4f022d9c795fc1f2a61e99f93f887e2bccd4" translate="yes" xml:space="preserve">
          <source>Validate a user against the given credentials.</source>
          <target state="translated">주어진 자격 증명에 대해 사용자를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="6bffe55f8f623a1224d882b06bf194cbc65a7546" translate="yes" xml:space="preserve">
          <source>Validate a user's credentials.</source>
          <target state="translated">사용자의 자격 증명을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="88bf33d745c16d038c737ecf51b73fe1debde309" translate="yes" xml:space="preserve">
          <source>Validate an attribute is contained within a list of values.</source>
          <target state="translated">속성이 값 목록에 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ef0b710d34997d403a7854d04236bae2cc162119" translate="yes" xml:space="preserve">
          <source>Validate an attribute is not contained within a list of values.</source>
          <target state="translated">속성이 값 목록에 포함되어 있지 않은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0bbbeba79817c9a5086a8f0076e7f31f685c95fe" translate="yes" xml:space="preserve">
          <source>Validate an attribute is unique among other values.</source>
          <target state="translated">속성이 다른 값 중에서 고유한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a3688c63a10d1a97aac77c7d7a69dc854a8bc94d" translate="yes" xml:space="preserve">
          <source>Validate an attribute using a custom rule object.</source>
          <target state="translated">사용자 정의 규칙 오브젝트를 사용하여 속성을 유효성 검증하십시오.</target>
        </trans-unit>
        <trans-unit id="f4742cb9bd40c1efc47dd7a72490be12a8a03997" translate="yes" xml:space="preserve">
          <source>Validate and return the decoded response JSON.</source>
          <target state="translated">디코딩 된 응답 JSON을 유효성 검증하고 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="ff4e36dc555e99bd821546820b2d9af938a738d9" translate="yes" xml:space="preserve">
          <source>Validate that a required attribute exists.</source>
          <target state="translated">필수 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f04da6cab263ff3bee6b08cace4a973dfc32e6c1" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alpha-numeric characters, dashes, and underscores.</source>
          <target state="translated">속성에 영숫자, 대시 및 밑줄 만 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="72d23bac999a5932fc758e21a78a5e2845978ce6" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alpha-numeric characters.</source>
          <target state="translated">속성에 영숫자 만 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e9fe65d0f707ad143edd22baff2365eff37d90d3" translate="yes" xml:space="preserve">
          <source>Validate that an attribute contains only alphabetic characters.</source>
          <target state="translated">속성에 알파벳 문자 만 포함되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="343482576c652c62c3f758f2a8a84b67326b95c3" translate="yes" xml:space="preserve">
          <source>Validate that an attribute does not pass a regular expression check.</source>
          <target state="translated">속성이 정규식 검사를 통과하지 않는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="528c4f3f775ec32d1a02f06f86ad0bedbe080102" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists even if not filled.</source>
          <target state="translated">채워지지 않은 경우에도 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="59fc4f9414926244586f0a65035d9015f551562d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when all other attributes do not.</source>
          <target state="translated">다른 모든 속성이없는 경우 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="7ae72d0c62fd66b764922dea73382cf9b3a9d7cc" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when all other attributes exists.</source>
          <target state="translated">다른 모든 속성이 존재하는 경우 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a7d4b77cb04bb7993b55744bfbfb9c5a9121f630" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute does not have a given value.</source>
          <target state="translated">다른 속성에 지정된 값이없는 경우 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e3d1586f41a80f5392410201a83d37a9cced3e5f" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute does not.</source>
          <target state="translated">다른 속성이없는 경우 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6910ffad2ed3ac501d9ab9ba6c93157d14ad4f89" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when another attribute has a given value.</source>
          <target state="translated">다른 속성에 지정된 값이있는 경우 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b18848b3e6ba7b069c97d7d249349ed0630d5cfa" translate="yes" xml:space="preserve">
          <source>Validate that an attribute exists when any other attribute exists.</source>
          <target state="translated">다른 속성이 존재하는 경우 속성이 존재하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ef3dc2da8cb7d76ce0b640a4401ed6d3dc777054" translate="yes" xml:space="preserve">
          <source>Validate that an attribute has a given number of digits.</source>
          <target state="translated">속성에 주어진 자릿수가 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c25adb3ce0614ad4841b984aed069bc89daf9267" translate="yes" xml:space="preserve">
          <source>Validate that an attribute has a matching confirmation.</source>
          <target state="translated">속성이 일치하는 확인인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="78e4c4963c6610602a85d57f4f87027bdfa9f56d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a boolean.</source>
          <target state="translated">속성이 부울인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ef297e9dda78fca255cd04f6680efefd38de0e98" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a string.</source>
          <target state="translated">속성이 문자열인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="917ef08a453ae5c72f72992ab2adcf047729f5f2" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IP.</source>
          <target state="translated">속성이 유효한 IP인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="002b3a6923d6a6558705d6522dc586406140c54c" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IPv4.</source>
          <target state="translated">속성이 유효한 IPv4인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="81443e60479152cb9295ec1af294468b2ff78709" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid IPv6.</source>
          <target state="translated">속성이 유효한 IPv6인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8f537f1355b5fcd44027e9d4f1b106b8f1ea8172" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid URL.</source>
          <target state="translated">속성이 유효한 URL인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="4cea5b6196d6fcd64b9c9c78609e744d9ef9686c" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid date.</source>
          <target state="translated">속성이 유효한 날짜인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="69de406e80d83d478d4ffc643d664935eb791d9e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid e-mail address.</source>
          <target state="translated">속성이 유효한 전자 메일 주소인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="797b268481d712b46de1e235d3fc9a2de04fa53a" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is a valid timezone.</source>
          <target state="translated">속성이 유효한 시간대인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6408631ac8cfe3a1a98def64a84e4afc540e8bb6" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an active URL.</source>
          <target state="translated">속성이 활성 URL인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ce8e0538d7ffc7023a95490c83b9fe970007ec61" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an array.</source>
          <target state="translated">속성이 배열인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="803717010ab309ed8d3cc551e176e4584906c4dd" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is an integer.</source>
          <target state="translated">속성이 정수인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="2e0946185badb69b3adbf87c3fbf61a0abafaaba" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is between a given number of digits.</source>
          <target state="translated">속성이 주어진 자릿수 사이에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="9be0fabb9bb58086041743aeaf2dedf2b9718d36" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is different from another attribute.</source>
          <target state="translated">속성이 다른 속성과 다른지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="e663a2c5c85ab2612a48b0b4c0bf70e7d11619a4" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is equal to another date.</source>
          <target state="translated">속성이 다른 날짜와 같은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3feaa754c65000f926bd8e4073b7024445588a3e" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is greater than another attribute.</source>
          <target state="translated">속성이 다른 속성보다 큰지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="800ca0d2cf10da481e4165f16419d6ae6c5e5952" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is greater than or equal another attribute.</source>
          <target state="translated">속성이 다른 속성보다 크거나 같은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="2742f5408d37a36fc6242e7d86d75c1e62792d4d" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is less than another attribute.</source>
          <target state="translated">속성이 다른 속성보다 작은 지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="caf6a3a079ce556bd86acaee877ac71b916a4715" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is less than or equal another attribute.</source>
          <target state="translated">속성이 다른 속성보다 작거나 같은지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="fb28b05b8f72a7b43101e797cc2643264b66ab9b" translate="yes" xml:space="preserve">
          <source>Validate that an attribute is numeric.</source>
          <target state="translated">속성이 숫자인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="c8e5167bcea5859f503cb801c69f60f028a1aee9" translate="yes" xml:space="preserve">
          <source>Validate that an attribute matches a date format.</source>
          <target state="translated">속성이 날짜 형식과 일치하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="d76daf0f330118c6b2aa7427b4b1da2b505404eb" translate="yes" xml:space="preserve">
          <source>Validate that an attribute passes a regular expression check.</source>
          <target state="translated">속성이 정규식 검사를 통과했는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="3a539f3f8586772f9fd67bffc1c95b62d8d3f105" translate="yes" xml:space="preserve">
          <source>Validate that an attribute was &quot;accepted&quot;.</source>
          <target state="translated">속성이 &quot;수락&quot;되었는지 확인하십시오.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
