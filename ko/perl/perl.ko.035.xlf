<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="perl">
    <body>
      <group id="perl">
        <trans-unit id="fd4f487a995fc117ee3f859541e8cb6d7b1f0e03" translate="yes" xml:space="preserve">
          <source>Push an SV onto the end of the array, creating the array if necessary. A small internal helper function to remove a commonly duplicated idiom.</source>
          <target state="translated">필요한 경우 SV를 어레이의 끝으로 밀어서 어레이를 만듭니다. 자주 복제되는 관용구를 제거하는 작은 내부 도우미 기능입니다.</target>
        </trans-unit>
        <trans-unit id="b343c728ee2d1e80e5d3bfd57c4ca6151b8a3b56" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack and mortalizes the SV. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHs&lt;/code&gt; and &lt;code&gt;mXPUSHs&lt;/code&gt; .</source>
          <target state="translated">SV를 스택에 밀어 넣고 SV를 치명적으로 만듭니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;PUSHs&lt;/code&gt; 및 &lt;code&gt;mXPUSHs&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5312b573b0539c30e0048cb9b278d19e1907b13" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack, extending the stack if necessary and mortalizes the SV. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHs&lt;/code&gt; and &lt;code&gt;mPUSHs&lt;/code&gt; .</source>
          <target state="translated">SV를 스택에 밀어 넣고 필요한 경우 스택을 확장하고 SV를 치명적으로 만듭니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;XPUSHs&lt;/code&gt; 및 &lt;code&gt;mPUSHs&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3bca75cd1625b95babebf1b4bb8d0ca93544cbe6" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack, extending the stack if necessary. Does not handle 'set' magic. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHmortal&lt;/code&gt; , &lt;code&gt;PUSHs&lt;/code&gt; and &lt;code&gt;PUSHmortal&lt;/code&gt; .</source>
          <target state="translated">SV를 스택에 밀어 넣고 필요한 경우 스택을 확장합니다. '세트'마법을 처리하지 않습니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;XPUSHmortal&lt;/code&gt; , &lt;code&gt;PUSHs&lt;/code&gt; 및 &lt;code&gt;PUSHmortal&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="824e75a21802eb656ab26e370eb8bc67c5ffb828" translate="yes" xml:space="preserve">
          <source>Push an SV onto the stack. The stack must have room for this element. Does not handle 'set' magic. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHmortal&lt;/code&gt; , &lt;code&gt;XPUSHs&lt;/code&gt; and &lt;code&gt;XPUSHmortal&lt;/code&gt; .</source>
          <target state="translated">SV를 스택에 밀어 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. '세트'마법을 처리하지 않습니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;PUSHmortal&lt;/code&gt; , &lt;code&gt;XPUSHs&lt;/code&gt; 및 &lt;code&gt;XPUSHmortal&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb6dc36faa3e9d71d279164e8a1bebbda0173b52" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHi&lt;/code&gt; , &lt;code&gt;mPUSHi&lt;/code&gt; and &lt;code&gt;PUSHi&lt;/code&gt; .</source>
          <target state="translated">스택에 정수를 밀어 넣고 필요한 경우 스택을 확장하십시오. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;XPUSHi&lt;/code&gt; , &lt;code&gt;mPUSHi&lt;/code&gt; 및 &lt;code&gt;PUSHi&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="88647ad486844ab79cd57c5f883ba3b63d0d33c3" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack, extending the stack if necessary. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mXPUSHi&lt;/code&gt; instead. See also &lt;code&gt;PUSHi&lt;/code&gt; and &lt;code&gt;mPUSHi&lt;/code&gt; .</source>
          <target state="translated">스택에 정수를 밀어 넣고 필요한 경우 스택을 확장하십시오. '설정된'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 선언하려면 dTARGET 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출해야합니다. XSUB에서 목록을 리턴하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;mXPUSHi&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;PUSHi&lt;/code&gt; 및 &lt;code&gt;mPUSHi&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="68712d908f28865c0c0fdea7d6b33cd088c74252" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHi&lt;/code&gt; , &lt;code&gt;mXPUSHi&lt;/code&gt; and &lt;code&gt;XPUSHi&lt;/code&gt; .</source>
          <target state="translated">스택에 정수를 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;PUSHi&lt;/code&gt; , &lt;code&gt;mXPUSHi&lt;/code&gt; 및 &lt;code&gt;XPUSHi&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3fa57788c5592676cc0034ebc6edf40f41590038" translate="yes" xml:space="preserve">
          <source>Push an integer onto the stack. The stack must have room for this element. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mPUSHi&lt;/code&gt; instead. See also &lt;code&gt;XPUSHi&lt;/code&gt; and &lt;code&gt;mXPUSHi&lt;/code&gt; .</source>
          <target state="translated">스택에 정수를 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. '설정된'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 선언하려면 dTARGET 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출해야합니다. XSUB에서 목록을 리턴하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;mPUSHi&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;XPUSHi&lt;/code&gt; 및 &lt;code&gt;mXPUSHi&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8504827aba00612364edada9d7d5d6f00e686e9f" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack, extending the stack if necessary. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;XPUSHu&lt;/code&gt; , &lt;code&gt;mPUSHu&lt;/code&gt; and &lt;code&gt;PUSHu&lt;/code&gt; .</source>
          <target state="translated">부호없는 정수를 스택에 밀어 넣고 필요한 경우 스택을 확장합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;XPUSHu&lt;/code&gt; , &lt;code&gt;mPUSHu&lt;/code&gt; 및 &lt;code&gt;PUSHu&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a877c4f095d8e369d65c6c9f26769538191ceb6a" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack, extending the stack if necessary. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mXPUSHu&lt;/code&gt; instead. See also &lt;code&gt;PUSHu&lt;/code&gt; and &lt;code&gt;mPUSHu&lt;/code&gt; .</source>
          <target state="translated">부호없는 정수를 스택에 밀어 넣고 필요한 경우 스택을 확장합니다. '설정된'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 선언하려면 dTARGET 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출해야합니다. XSUB에서 목록을 리턴하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;mXPUSHu&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;PUSHu&lt;/code&gt; 및 &lt;code&gt;mPUSHu&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f5198e2166eb928f9d3653b92f6feb785e942a5" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack. The stack must have room for this element. Does not use &lt;code&gt;TARG&lt;/code&gt; . See also &lt;code&gt;PUSHu&lt;/code&gt; , &lt;code&gt;mXPUSHu&lt;/code&gt; and &lt;code&gt;XPUSHu&lt;/code&gt; .</source>
          <target state="translated">부호없는 정수를 스택에 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용하지 않습니다 . &lt;code&gt;PUSHu&lt;/code&gt; , &lt;code&gt;mXPUSHu&lt;/code&gt; 및 &lt;code&gt;XPUSHu&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="613f8f689dc3e62438ff571be557fb9cb05e44a4" translate="yes" xml:space="preserve">
          <source>Push an unsigned integer onto the stack. The stack must have room for this element. Handles 'set' magic. Uses &lt;code&gt;TARG&lt;/code&gt; , so &lt;code&gt;dTARGET&lt;/code&gt; or &lt;code&gt;dXSTARG&lt;/code&gt; should be called to declare it. Do not call multiple &lt;code&gt;TARG&lt;/code&gt; -oriented macros to return lists from XSUB's - see &lt;code&gt;mPUSHu&lt;/code&gt; instead. See also &lt;code&gt;XPUSHu&lt;/code&gt; and &lt;code&gt;mXPUSHu&lt;/code&gt; .</source>
          <target state="translated">부호없는 정수를 스택에 넣습니다. 스택에는이 요소를위한 공간이 있어야합니다. '설정된'마법을 처리합니다. &lt;code&gt;TARG&lt;/code&gt; 를 사용 하므로 &lt;code&gt;dTARGET&lt;/code&gt; 선언하려면 dTARGET 또는 &lt;code&gt;dXSTARG&lt;/code&gt; 를 호출해야합니다. XSUB에서 목록을 반환하기 위해 여러 &lt;code&gt;TARG&lt;/code&gt; 지향 매크로를 호출하지 마십시오 . 대신 &lt;code&gt;mPUSHu&lt;/code&gt; 를 참조하십시오 . &lt;code&gt;XPUSHu&lt;/code&gt; 및 &lt;code&gt;mXPUSHu&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="18581b2c0e575f64a8c4dfe4233bd04ffb3c85d9" translate="yes" xml:space="preserve">
          <source>Push the current state of the stack pointer onto the mark stack. This is so that when we've finished adding items to the argument stack, Perl knows how many things we've added recently.</source>
          <target state="translated">스택 포인터의 현재 상태를 마크 스택으로 밉니다. 이를 통해 인수 스택에 항목을 추가하면 Perl이 최근에 추가 한 항목 수를 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd9eb04bba7369fac67bb272487aea83de30e396" translate="yes" xml:space="preserve">
          <source>Pushes a character with the given ordinal value back onto the given handle's input stream. Only one character of pushback per handle is guaranteed.</source>
          <target state="translated">주어진 서수 값을 가진 문자를 주어진 핸들의 입력 스트림으로 다시 푸시합니다. 핸들 당 하나의 푸시 백 문자 만 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="a106600342c596f57fb0e1a9b6c18c52f7dcd966" translate="yes" xml:space="preserve">
          <source>Pushes an SV onto the end of the array. The array will grow automatically to accommodate the addition. This takes ownership of one reference count.</source>
          <target state="translated">SV를 어레이의 끝으로 밉니다. 추가를 수용하기 위해 배열이 자동으로 커집니다. 이것은 하나의 참조 카운트의 소유권을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="6ccf168fe998779643f2545e93fe3eb3325a7626" translate="yes" xml:space="preserve">
          <source>Pushes the elements of &lt;code&gt;list&lt;/code&gt; to the end of the array.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 의 요소를 배열의 끝으로 푸시합니다 .</target>
        </trans-unit>
        <trans-unit id="1a67421c65ebcbec6ecf93fc8121206f9a6219cd" translate="yes" xml:space="preserve">
          <source>Pushes the elements of &lt;code&gt;list&lt;/code&gt; to the start of the array.</source>
          <target state="translated">&lt;code&gt;list&lt;/code&gt; 의 요소를 배열의 시작 부분으로 푸시합니다 .</target>
        </trans-unit>
        <trans-unit id="434a3543d1b51e838730a1e98071665a5312262b" translate="yes" xml:space="preserve">
          <source>Pushing multiple values in a hash option</source>
          <target state="translated">해시 옵션에서 여러 값 푸시</target>
        </trans-unit>
        <trans-unit id="7fd768e4fe7bd6bb51e495079370749b0bfeabc8" translate="yes" xml:space="preserve">
          <source>Put</source>
          <target state="translated">Put</target>
        </trans-unit>
        <trans-unit id="d1bc442ba313a7f986c75035df11c1f76cbd7483" translate="yes" xml:space="preserve">
          <source>Put 'hints' in the .ph files which will help in locating problems with</source>
          <target state="translated">문제를 찾는 데 도움이되는 .ph 파일에 '힌트'를 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="c69babd8dd4a14457309b07c58ef1458d1787046" translate="yes" xml:space="preserve">
          <source>Put &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale;&lt;/code&gt; in your script. The \w character class is taken from the current locale.</source>
          <target state="translated">넣어 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale;&lt;/code&gt; 스크립트에서. \ w 문자 클래스는 현재 로케일에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="47739ad806e984d84c33acd817d5e256d5c4587a" translate="yes" xml:space="preserve">
          <source>Put Pod::Simple into trace/debug mode</source>
          <target state="translated">포드 :: 간단한 추적 / 디버그 모드로 전환</target>
        </trans-unit>
        <trans-unit id="493df581b024ed00be76e886a1aae031377cfaee" translate="yes" xml:space="preserve">
          <source>Put a file on the remote server. &lt;code&gt;LOCAL_FILE&lt;/code&gt; may be a name or a filehandle. If &lt;code&gt;LOCAL_FILE&lt;/code&gt; is a filehandle then &lt;code&gt;REMOTE_FILE&lt;/code&gt; must be specified. If &lt;code&gt;REMOTE_FILE&lt;/code&gt; is not specified then the file will be stored in the current directory with the same leafname as &lt;code&gt;LOCAL_FILE&lt;/code&gt; .</source>
          <target state="translated">원격 서버에 파일을 넣습니다. &lt;code&gt;LOCAL_FILE&lt;/code&gt; 은 이름 또는 파일 핸들 일 수 있습니다. 경우 &lt;code&gt;LOCAL_FILE&lt;/code&gt; 파일 핸들입니다 다음 &lt;code&gt;REMOTE_FILE&lt;/code&gt; 지정해야합니다. 경우 &lt;code&gt;REMOTE_FILE&lt;/code&gt; 지정되지 파일은 같은 leafname와 현재 디렉토리에 저장됩니다 &lt;code&gt;LOCAL_FILE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0cd4b6437b681f5228767353df5b194b9775df90" translate="yes" xml:space="preserve">
          <source>Put an asterisk &lt;code&gt;*&lt;/code&gt; before the &lt;code&gt;v&lt;/code&gt; to override the string to use to separate the numbers:</source>
          <target state="translated">숫자를 구분하는 데 사용할 문자열을 대체 하려면 &lt;code&gt;v&lt;/code&gt; 앞에 별표 ( &lt;code&gt;*&lt;/code&gt; ) 를 넣으십시오 .</target>
        </trans-unit>
        <trans-unit id="d14f55f6fdcb5da01d44dd7ed243c1db7e277d01" translate="yes" xml:space="preserve">
          <source>Put site-specific architecture-dependent files into one of the following directories:</source>
          <target state="translated">사이트 별 아키텍처 종속 파일을 다음 디렉토리 중 하나에 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="7fa7153c9aa3d5d40471d6b1b2c0b52e0c1b025d" translate="yes" xml:space="preserve">
          <source>Put that in your</source>
          <target state="translated">당신의 그것을 넣어</target>
        </trans-unit>
        <trans-unit id="04d814d0c7034933ffea79f71cd116536449e7fb" translate="yes" xml:space="preserve">
          <source>Put the resulting &lt;b&gt;.ph&lt;/b&gt; files beneath &lt;b&gt;destination_dir&lt;/b&gt;, instead of beneath the default Perl library location (&lt;code&gt;$Config{'installsitearch'}&lt;/code&gt; ).</source>
          <target state="translated">결과 &lt;b&gt;.ph&lt;/b&gt; 파일을 기본 Perl 라이브러리 위치 ( &lt;code&gt;$Config{'installsitearch'}&lt;/code&gt; ) 대신 &lt;b&gt;destination_dir&lt;/b&gt; 아래에 두십시오 .</target>
        </trans-unit>
        <trans-unit id="40e6c0e0dc40286e99d3fc85cf70570e01de66ee" translate="yes" xml:space="preserve">
          <source>Put this code in a separate file to be run in more than one process. Call the file</source>
          <target state="translated">이 코드를 별도의 파일에 넣어 두 개 이상의 프로세스에서 실행하십시오. 파일을 불러</target>
        </trans-unit>
        <trans-unit id="60ff5dc8b3b8ee10ac653e6d6e0aa7e9f1322412" translate="yes" xml:space="preserve">
          <source>Put this code in a separate file to be run in more than one process. Call this file</source>
          <target state="translated">이 코드를 별도의 파일에 넣어 두 개 이상의 프로세스에서 실행하십시오. 이 파일을 불러</target>
        </trans-unit>
        <trans-unit id="9a2c16ad1dd4ceb42756fb3731b8a42274bc8054" translate="yes" xml:space="preserve">
          <source>Put this in</source>
          <target state="translated">이것을 넣어</target>
        </trans-unit>
        <trans-unit id="3984468ef6d986678e93740602be8433d764ca26" translate="yes" xml:space="preserve">
          <source>Put together, a grammar to match a basic identifier becomes</source>
          <target state="translated">기본 식별자와 일치하는 문법은</target>
        </trans-unit>
        <trans-unit id="b81b3040dcaf2eeda56068119211b063246e32f5" translate="yes" xml:space="preserve">
          <source>Puts a C function into the chain of check functions for a specified op type. This is the preferred way to manipulate the &lt;a href=&quot;#PL_check&quot;&gt;PL_check&lt;/a&gt; array.</source>
          <target state="translated">지정된 op 유형의 검사 기능 체인에 C 기능을 넣습니다. 이것은 &lt;a href=&quot;#PL_check&quot;&gt;PL_check&lt;/a&gt; 배열 을 조작하기 위해 선호되는 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="d77f4ddf35623d313f60eab18e7956a5f55b5242" translate="yes" xml:space="preserve">
          <source>Puts the targets necessary for 'make dist' together into one make fragment.</source>
          <target state="translated">'make dist'에 필요한 대상을 하나의 make 조각으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0d94544ade0f2950579f15818313dfb90a811531" translate="yes" xml:space="preserve">
          <source>Putting a C value on Perl stack</source>
          <target state="translated">Perl 스택에 C 값 넣기</target>
        </trans-unit>
        <trans-unit id="c3c0fee583fe73ce38904eadb090b95782b9afc1" translate="yes" xml:space="preserve">
          <source>Putting a fancy &lt;b&gt;data structure&lt;/b&gt; into linear order so that it can be stored as a &lt;b&gt;string&lt;/b&gt; in a disk file or database, or sent through a &lt;b&gt;pipe&lt;/b&gt;. Also called marshalling.</source>
          <target state="translated">멋진 &lt;b&gt;데이터 구조&lt;/b&gt; 를 선형 순서로 배치 하여 디스크 파일이나 데이터베이스에 &lt;b&gt;문자열&lt;/b&gt; 로 저장 하거나 &lt;b&gt;파이프를&lt;/b&gt; 통해 보낼 수 있습니다. 마샬링이라고도합니다.</target>
        </trans-unit>
        <trans-unit id="6ebbf4b51e58300b77d8060b5d5709fd9450e224" translate="yes" xml:space="preserve">
          <source>Putting all the parts together, we get a regexp that matches numbers:</source>
          <target state="translated">모든 부품을 합하면 숫자와 일치하는 정규 표현식이 나타납니다.</target>
        </trans-unit>
        <trans-unit id="6a9848562f434be6cca42f48ae11db504a53636d" translate="yes" xml:space="preserve">
          <source>Putting it all together, you have:</source>
          <target state="translated">모두 합치면 다음이 있습니다.</target>
        </trans-unit>
        <trans-unit id="50ce8d29cdd017042415616b75b34f884b476435" translate="yes" xml:space="preserve">
          <source>Python 2.3 MRO related links</source>
          <target state="translated">파이썬 2.3 MRO 관련 링크</target>
        </trans-unit>
        <trans-unit id="c3156e00d3c2588c639e0d3cf6821258b05761c7" translate="yes" xml:space="preserve">
          <source>Q</source>
          <target state="translated">Q</target>
        </trans-unit>
        <trans-unit id="b7b445f989c7a304e6e26500eee0e35e636e184c" translate="yes" xml:space="preserve">
          <source>Q and A</source>
          <target state="translated">Q와 A</target>
        </trans-unit>
        <trans-unit id="908d9b09fc523e58d49da45f3501c5e3ad0a3b94" translate="yes" xml:space="preserve">
          <source>Q and A (or FAQ)</source>
          <target state="translated">Q와 A (또는 FAQ)</target>
        </trans-unit>
        <trans-unit id="3c1785f5e41e8062b156fa579adb0413cfb85e23" translate="yes" xml:space="preserve">
          <source>QNX auxiliary files</source>
          <target state="translated">QNX 보조 파일</target>
        </trans-unit>
        <trans-unit id="4cf27a6f1f7cbc27550b7c2ba303e89cb36e8e14" translate="yes" xml:space="preserve">
          <source>QNX specific subclass of ExtUtils::MM_Unix</source>
          <target state="translated">ExtUtils :: MM_Unix의 QNX 특정 서브 클래스</target>
        </trans-unit>
        <trans-unit id="20d507c7120c3d5b527b26a3fb978cdf1ac44faf" translate="yes" xml:space="preserve">
          <source>QUANTIFIERS</source>
          <target state="translated">QUANTIFIERS</target>
        </trans-unit>
        <trans-unit id="9decc00e3d065b650a870ccca4c5e0654258f0b8" translate="yes" xml:space="preserve">
          <source>QUEUE CREATION</source>
          <target state="translated">큐 생성</target>
        </trans-unit>
        <trans-unit id="41017e2c9792619e0fd0ffe76075b745bc93b06d" translate="yes" xml:space="preserve">
          <source>QUICK CHECKLIST</source>
          <target state="translated">빠른 체크리스트</target>
        </trans-unit>
        <trans-unit id="a500376a8fe35f15c46f906227d1a82650ca2b3c" translate="yes" xml:space="preserve">
          <source>QUICK OVERVIEW</source>
          <target state="translated">빠른 개요</target>
        </trans-unit>
        <trans-unit id="3aad6cae9d9ca0517324f333e5937179f5104dbc" translate="yes" xml:space="preserve">
          <source>QUICK START GUIDE</source>
          <target state="translated">빠른 시작 가이드</target>
        </trans-unit>
        <trans-unit id="d4dc74dd982660ab83c02728a67c70b0e21df160" translate="yes" xml:space="preserve">
          <source>Qualification applies only to symbol names (strings). References are left unchanged under the assumption that they are glob references, which are qualified by their nature.</source>
          <target state="translated">규정은 기호 이름 (문자열)에만 적용됩니다. 참조는 그 특성에 의해 검증 된 glob 참조라는 가정하에 변경되지 않은 채로 있습니다.</target>
        </trans-unit>
        <trans-unit id="c45166c7ba50383e7b4bfb3006de5b43bce7b9e2" translate="yes" xml:space="preserve">
          <source>Quantifier follows nothing in regex; marked by &amp;lt;-- HERE in m/(?i)+ &amp;lt;-- HERE /</source>
          <target state="translated">정량자는 정규 표현식에서 아무 것도 따르지 않습니다. m / (? i) +에서 &amp;lt;-HERE로 표시됨</target>
        </trans-unit>
        <trans-unit id="6078532ab203b30b0c8e32bb799fd87d65f55236" translate="yes" xml:space="preserve">
          <source>Quantifiers</source>
          <target state="translated">Quantifiers</target>
        </trans-unit>
        <trans-unit id="829f1fa0b9ca1bfbdf96c60ba3b43a6dd4a86313" translate="yes" xml:space="preserve">
          <source>Quantifiers are greedy by default and match the &lt;b&gt;longest&lt;/b&gt; leftmost.</source>
          <target state="translated">수량자는 기본적으로 탐욕스럽고 &lt;b&gt;가장&lt;/b&gt; 왼쪽에 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="69e4a0b3ec967fedffed9c96cbabb3d643636072" translate="yes" xml:space="preserve">
          <source>Quantifiers can be used to specify how many of the previous thing you want to match on, where &quot;thing&quot; means either a literal character, one of the metacharacters listed above, or a group of characters or metacharacters in parentheses.</source>
          <target state="translated">수량자를 사용하여 일치시킬 이전 항목 수를 지정할 수 있습니다. 여기서 &quot;thing&quot;은 리터럴 문자, 위에 나열된 메타 문자 중 하나 또는 괄호 안의 문자 또는 메타 문자 그룹을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="cdf8e30d84d95e2be133e931e5890cc3b6507fac" translate="yes" xml:space="preserve">
          <source>Queries or adds to the internal table of already encountered references. You must use &lt;code&gt;Reset&lt;/code&gt; to explicitly clear the table if needed. Such references are not dumped; instead, their names are inserted wherever they are encountered subsequently. This is useful especially for properly dumping subroutine references.</source>
          <target state="translated">이미 발생한 참조의 내부 테이블을 쿼리하거나 추가합니다. 필요한 경우 &lt;code&gt;Reset&lt;/code&gt; 을 사용 하여 테이블을 명시 적으로 지워야합니다. 이러한 참조는 폐기되지 않습니다. 대신, 이름은 이후에 접할 때마다 삽입됩니다. 서브 루틴 참조를 올바르게 덤프하는 데 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="c8acae1546ffca641266d1ea873cf1eb072da5bd" translate="yes" xml:space="preserve">
          <source>Queries or replaces the internal array of user supplied names for the values that will be dumped. When called without arguments, returns the names. When called with an array of replacement names, returns the object itself. If the number of replacement names exceeds the number of values to be named, the excess names will not be used. If the number of replacement names falls short of the number of values to be named, the list of replacement names will be exhausted and remaining values will not be renamed. When called with any other type of argument, dies.</source>
          <target state="translated">덤프 될 값에 대한 사용자 제공 이름의 내부 배열을 쿼리하거나 바꿉니다. 인수없이 호출되면 이름을 반환합니다. 대체 이름 배열과 함께 호출되면 객체 자체를 반환합니다. 대체 이름 수가 명명 될 값 수를 초과하면 초과 이름이 사용되지 않습니다. 대체 이름 수가 이름을 지정할 값의 수보다 적 으면 대체 이름 목록이 소진되고 나머지 값의 이름은 바뀌지 않습니다. 다른 유형의 인수와 함께 호출하면 사망합니다.</target>
        </trans-unit>
        <trans-unit id="83faf5aa5b94da12a4877cf033f633d81c2d8f0f" translate="yes" xml:space="preserve">
          <source>Queries or replaces the internal array of values that will be dumped. When called without arguments, returns the values as a list. When called with a reference to an array of replacement values, returns the object itself. When called with any other type of argument, dies.</source>
          <target state="translated">덤프 될 내부 값 배열을 쿼리하거나 바꿉니다. 인수없이 호출하면 값을 목록으로 반환합니다. 대체 값 배열에 대한 참조와 함께 호출되면 객체 자체를 반환합니다. 다른 유형의 인수와 함께 호출하면 사망합니다.</target>
        </trans-unit>
        <trans-unit id="fe5bf8c7bc573767cc25100f7b66c5ffcfebc291" translate="yes" xml:space="preserve">
          <source>Queries the option named OPTNAME associated with SOCKET at a given LEVEL. Options may exist at multiple protocol levels depending on the socket type, but at least the uppermost socket level SOL_SOCKET (defined in the &lt;code&gt;Socket&lt;/code&gt; module) will exist. To query options at another level the protocol number of the appropriate protocol controlling the option should be supplied. For example, to indicate that an option is to be interpreted by the TCP protocol, LEVEL should be set to the protocol number of TCP, which you can get using &lt;code&gt;&lt;a href=&quot;functions/getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">주어진 LEVEL에서 SOCKET과 연관된 OPTNAME이라는 옵션을 조회합니다. 소켓 유형에 따라 여러 프로토콜 수준에서 옵션이 존재할 수 있지만 최소한 &lt;code&gt;Socket&lt;/code&gt; 모듈에 정의 된 최상위 소켓 수준 SOL_SOCKET 이 존재합니다. 다른 수준에서 옵션을 쿼리하려면 옵션을 제어하는 ​​적절한 프로토콜의 프로토콜 번호를 제공해야합니다. 예를 들어, 옵션이 TCP 프로토콜에 의해 해석됨을 나타내려면 LEVEL을 TCP의 프로토콜 번호로 설정해야하며 &lt;code&gt;&lt;a href=&quot;functions/getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt; 을 사용하여 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="54784f5a723388f9bef25d885ee8470caa2dcfd6" translate="yes" xml:space="preserve">
          <source>Queries the option named OPTNAME associated with SOCKET at a given LEVEL. Options may exist at multiple protocol levels depending on the socket type, but at least the uppermost socket level SOL_SOCKET (defined in the &lt;code&gt;Socket&lt;/code&gt; module) will exist. To query options at another level the protocol number of the appropriate protocol controlling the option should be supplied. For example, to indicate that an option is to be interpreted by the TCP protocol, LEVEL should be set to the protocol number of TCP, which you can get using &lt;code&gt;&lt;a href=&quot;getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">주어진 LEVEL에서 SOCKET과 연관된 OPTNAME이라는 옵션을 조회합니다. 소켓 유형에 따라 여러 프로토콜 수준에서 옵션이 존재할 수 있지만 최소한 &lt;code&gt;Socket&lt;/code&gt; 모듈에 정의 된 최상위 소켓 수준 SOL_SOCKET 이 존재합니다. 다른 수준에서 옵션을 쿼리하려면 옵션을 제어하는 ​​적절한 프로토콜의 프로토콜 번호를 제공해야합니다. 예를 들어, 옵션이 TCP 프로토콜에 의해 해석됨을 나타내려면 LEVEL을 TCP의 프로토콜 번호로 설정해야하며 &lt;code&gt;&lt;a href=&quot;getprotobyname&quot;&gt;getprotobyname&lt;/a&gt;&lt;/code&gt; 을 사용하여 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="49ce437d64f5ded5d2e1a936b1bee65897d9e9e3" translate="yes" xml:space="preserve">
          <source>Query locale information</source>
          <target state="translated">로캘 정보 쿼리</target>
        </trans-unit>
        <trans-unit id="aff0621a85b75d3f9b0bce73acd70ea9b7db4b3c" translate="yes" xml:space="preserve">
          <source>Query, download and build perl modules from CPAN sites</source>
          <target state="translated">CPAN 사이트에서 펄 모듈 쿼리, 다운로드 및 빌드</target>
        </trans-unit>
        <trans-unit id="5c87d5f3328b7d4c3f7fd3f209b9b98dd39e0104" translate="yes" xml:space="preserve">
          <source>Querying the layers of filehandles</source>
          <target state="translated">파일 핸들 레이어 쿼리</target>
        </trans-unit>
        <trans-unit id="ab73d69ba359e14fb19fa0dc0701d52b9c7d7ee1" translate="yes" xml:space="preserve">
          <source>Questions With Answers</source>
          <target state="translated">답변이있는 질문</target>
        </trans-unit>
        <trans-unit id="f6d4d2bb4bfe6fa0f2303afcf56e54256bae7acb" translate="yes" xml:space="preserve">
          <source>Questions or discussion about POD and Pod::Simple should be sent to the pod-people@perl.org mail list. Send an empty email to pod-people-subscribe@perl.org to subscribe.</source>
          <target state="translated">POD 및 Pod :: Simple에 대한 질문 또는 토론은 pod-people@perl.org 메일 목록으로 보내야합니다. 구독하려면 빈 이메일을 pod-people-subscribe@perl.org로 보내십시오.</target>
        </trans-unit>
        <trans-unit id="3bbcc3a96b399b2a6b4ea7037ef3c410c2e98989" translate="yes" xml:space="preserve">
          <source>Queues created by &lt;a href=&quot;queue&quot;&gt;Thread::Queue&lt;/a&gt; can be used in both threaded and non-threaded applications.</source>
          <target state="translated">&lt;a href=&quot;queue&quot;&gt;Thread :: Queue에&lt;/a&gt; 의해 생성 된 큐 는 스레드 및 스레드되지 않은 응용 프로그램 모두에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82dcd86a2d0fdd9674d5180af12a2c81e22b15c2" translate="yes" xml:space="preserve">
          <source>Queues: Passing Data Around</source>
          <target state="translated">큐 : 데이터 전달</target>
        </trans-unit>
        <trans-unit id="911283fe22324c9b4dbb9d98fa5ce51d04af8b5f" translate="yes" xml:space="preserve">
          <source>Quick Check</source>
          <target state="translated">빠른 확인</target>
        </trans-unit>
        <trans-unit id="7d2b679e22dfa3101d1ba7bf2ec43c351c8ef687" translate="yes" xml:space="preserve">
          <source>Quick Guide</source>
          <target state="translated">빠른 설명</target>
        </trans-unit>
        <trans-unit id="43d8515e5495635935ae41fcaff947601379b8c7" translate="yes" xml:space="preserve">
          <source>Quick commands for handling typemaps</source>
          <target state="translated">타입 맵 처리를위한 빠른 명령</target>
        </trans-unit>
        <trans-unit id="490efc6e3853d704426e2197c066d80aa96aeb58" translate="yes" xml:space="preserve">
          <source>Quick cycle of developers release may break the OS/2 build time to time, looking into</source>
          <target state="translated">개발자 릴리스의 빠른주기는 OS / 2 빌드를 때때로 깨뜨릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7994ebd90d60dd15b911eb3a9daf502e60683411" translate="yes" xml:space="preserve">
          <source>Quit and close the connection to the remote POP3 server. Any messages marked as deleted will be deleted from the remote mailbox.</source>
          <target state="translated">원격 POP3 서버에 대한 연결을 종료하고 닫습니다. 삭제 된 것으로 표시된 모든 메시지는 원격 사서함에서 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="34ba20e3026462af76a067e043daf2ecc8d444ff" translate="yes" xml:space="preserve">
          <source>Quit the remote server and close the socket connection.</source>
          <target state="translated">원격 서버를 종료하고 소켓 연결을 닫으십시오.</target>
        </trans-unit>
        <trans-unit id="5a1be35f7e41fc0e73dfaa10a8ca1c7fe5bd8ed0" translate="yes" xml:space="preserve">
          <source>Quit. (&quot;quit&quot; doesn't work for this, unless you've made an alias) This is the only supported way to exit the debugger, though typing &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; twice might work.</source>
          <target state="translated">떠나다. (별칭을 만들지 않는 한 &quot;quit&quot;는 작동하지 않습니다.) &lt;code&gt;&lt;a href=&quot;functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; 를 두 번 입력해도 작동 하지만 디버거를 종료 할 수있는 유일한 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="f9f4964b91e9849afca9359e00981ce1ba0c07f9" translate="yes" xml:space="preserve">
          <source>Quotations are taken from writings of J.R.R. Tolkien pertaining to his Legendarium, almost always from</source>
          <target state="translated">그의 전설에 관한 JRR Tolkien의 글에서 인용 한 내용은 거의 항상</target>
        </trans-unit>
        <trans-unit id="98a0090e1373d2c389fb1b8448a5ea356c875f06" translate="yes" xml:space="preserve">
          <source>Quote and Quote-like Operators</source>
          <target state="translated">견적 및 견적 유사 연산자</target>
        </trans-unit>
        <trans-unit id="97af8d62d18823e045a526635c4c59c15b6c1c41" translate="yes" xml:space="preserve">
          <source>Quote, don't escape.</source>
          <target state="translated">견적, 탈출하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="19d0f80e917312a7bee3d680b3a00ddf182f6146" translate="yes" xml:space="preserve">
          <source>Quote-Like Operators</source>
          <target state="translated">따옴표와 같은 연산자</target>
        </trans-unit>
        <trans-unit id="12a1279b6935c9782ab3606a3d82d28493446688" translate="yes" xml:space="preserve">
          <source>Quoted-Printable encoding and decoding</source>
          <target state="translated">인용 인쇄 가능한 인코딩 및 디코딩</target>
        </trans-unit>
        <trans-unit id="46e26eec4abf3af9d0fe512a58ece61ef23ba7c0" translate="yes" xml:space="preserve">
          <source>Quotes an item to become safe against spaces in shell interpolation. An item is enclosed in double quotes if:</source>
          <target state="translated">쉘 보간에서 공백으로부터 안전 해 지도록 항목을 인용합니다. 다음과 같은 경우 항목을 큰 따옴표로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="8b284dd175a44a8a9dddaf84217e26829062b72d" translate="yes" xml:space="preserve">
          <source>Quotes macro literal value suitable for being used on a command line so that when expanded by make, will be received by command as given to this method:</source>
          <target state="translated">make에 의해 확장 될 때이 메소드에 지정된대로 명령에 의해 수신되도록 명령 행에서 사용하기에 적합한 매크로 리터럴 값을 인용합니다.</target>
        </trans-unit>
        <trans-unit id="dc8a67ea92998f4331c08d3d68c3f23ba931af7d" translate="yes" xml:space="preserve">
          <source>Quoting characters that have the other 3 properties is done to enhance the readability of the regular expression and not because they actually need to be quoted for regular expression purposes (characters with the White_Space property are likely to be indistinguishable on the page or screen from those with the Pattern_White_Space property; and the other two properties contain non-printing characters).</source>
          <target state="translated">다른 3 개의 속성을 가진 문자를 인용하면 정규 표현식의 가독성을 높이기 위해 수행되며 실제로는 정규 표현식 목적으로 인용해야하기 때문이 아닙니다. Pattern_White_Space 속성; 다른 두 속성에는 인쇄 할 수없는 문자가 포함됩니다).</target>
        </trans-unit>
        <trans-unit id="5f374f604fe8ce3a7bacd1735dcfc8594696a7c1" translate="yes" xml:space="preserve">
          <source>Quoting metacharacters</source>
          <target state="translated">메타 문자 인용</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="45297e8f2e4a57d399e54f4d5e56a33edf6b4546" translate="yes" xml:space="preserve">
          <source>RADIAL COORDINATE CONVERSIONS</source>
          <target state="translated">레디얼 코디네이트 변환</target>
        </trans-unit>
        <trans-unit id="69e27356ef629022720d868ab0c0e3394775b6c1" translate="yes" xml:space="preserve">
          <source>README</source>
          <target state="translated">README</target>
        </trans-unit>
        <trans-unit id="26170ec3dc64f8b7fd572cb5f04130dc738bac40" translate="yes" xml:space="preserve">
          <source>README and other Additional Files.</source>
          <target state="translated">README 및 기타 추가 파일.</target>
        </trans-unit>
        <trans-unit id="533ffdbfecaff72ef5b73243babdff48010c62e3" translate="yes" xml:space="preserve">
          <source>README, INSTALL, release notes, changelogs</source>
          <target state="translated">읽어보기, 설치, 릴리스 정보, 변경 로그</target>
        </trans-unit>
        <trans-unit id="470d8527a3d01cd4a3fa0aa7c03769a6948b44d1" translate="yes" xml:space="preserve">
          <source>README.amiga</source>
          <target state="translated">README.amiga</target>
        </trans-unit>
        <trans-unit id="bd5f281c6e53763c512b64a62b1dbc5e3498f53d" translate="yes" xml:space="preserve">
          <source>README.cygwin</source>
          <target state="translated">README.cygwin</target>
        </trans-unit>
        <trans-unit id="60cd92e33be1c1434cc8683be9e91fdb03ffbe8d" translate="yes" xml:space="preserve">
          <source>README.dos</source>
          <target state="translated">README.dos</target>
        </trans-unit>
        <trans-unit id="922bfc9ad896762e1f22202551026c11023937f3" translate="yes" xml:space="preserve">
          <source>README.os2</source>
          <target state="translated">README.os2</target>
        </trans-unit>
        <trans-unit id="b0c3afe965a614f26f700a578dd90289b911ca42" translate="yes" xml:space="preserve">
          <source>README.perl</source>
          <target state="translated">README.perl</target>
        </trans-unit>
        <trans-unit id="31876ad7c4fa164eaa1a9292560713f19237c9c2" translate="yes" xml:space="preserve">
          <source>README.plan9</source>
          <target state="translated">README.plan9</target>
        </trans-unit>
        <trans-unit id="6b3e64ef3c5318ac15169a07784569d9f4e12561" translate="yes" xml:space="preserve">
          <source>README.vms</source>
          <target state="translated">README.vms</target>
        </trans-unit>
        <trans-unit id="db69da694a77bb707c14a29a590fb116537bf27c" translate="yes" xml:space="preserve">
          <source>README.vos</source>
          <target state="translated">README.vos</target>
        </trans-unit>
        <trans-unit id="41c68db7205269a6d1d13c4ce257a527520c44f3" translate="yes" xml:space="preserve">
          <source>README_vms</source>
          <target state="translated">README_vms</target>
        </trans-unit>
        <trans-unit id="eb1962cbc26755fee15d4db8b14b86dda178492f" translate="yes" xml:space="preserve">
          <source>READONLY LEXICONS</source>
          <target state="translated">즉시 렉시콘</target>
        </trans-unit>
        <trans-unit id="9227274777f845910cc80f878804555a988622c1" translate="yes" xml:space="preserve">
          <source>REALLY</source>
          <target state="translated">REALLY</target>
        </trans-unit>
        <trans-unit id="8447f2362022482a81d1cf6ed91fac3a8d3dd564" translate="yes" xml:space="preserve">
          <source>RECOMMENDED SUBROUTINE/METHOD OVERRIDES</source>
          <target state="translated">권장 된 약물 / 방법 오버라이드</target>
        </trans-unit>
        <trans-unit id="d4730753022e62db3135b00e0df88859d25187e8" translate="yes" xml:space="preserve">
          <source>REFERENCES</source>
          <target state="translated">REFERENCES</target>
        </trans-unit>
        <trans-unit id="992d441e1d5a432b866f670478b3060e05a3c28e" translate="yes" xml:space="preserve">
          <source>REGEXP Functions</source>
          <target state="translated">REGEXP 기능</target>
        </trans-unit>
        <trans-unit id="b14e18379b628e870f6f6fd151b87b951e254cfd" translate="yes" xml:space="preserve">
          <source>REGISTRY</source>
          <target state="translated">REGISTRY</target>
        </trans-unit>
        <trans-unit id="9d38a5cfeee787c359c7fd682499c0d9ef995e51" translate="yes" xml:space="preserve">
          <source>REGULAR EXPRESSION DIFFERENCES</source>
          <target state="translated">정규 표현의 차이점</target>
        </trans-unit>
        <trans-unit id="5e59f903969a9f7836cb496c8ed4243a5e1f9f3b" translate="yes" xml:space="preserve">
          <source>REGULAR EXPRESSIONS</source>
          <target state="translated">정규 표현</target>
        </trans-unit>
        <trans-unit id="2c29e02d995cad9b8885a946bb3c7595f553f5cb" translate="yes" xml:space="preserve">
          <source>RELEASE CONSIDERATIONS</source>
          <target state="translated">릴리스 고려 사항</target>
        </trans-unit>
        <trans-unit id="dd03acb9188bb0e265cc49975a06589f80338e36" translate="yes" xml:space="preserve">
          <source>RELIC SUPPORT</source>
          <target state="translated">유물 지원</target>
        </trans-unit>
        <trans-unit id="da675baaaaccfefe8840cfac4dbaa63fca633fd5" translate="yes" xml:space="preserve">
          <source>REPLACEMENT</source>
          <target state="translated">REPLACEMENT</target>
        </trans-unit>
        <trans-unit id="7a45c85de3ea0dcc5d2b7a5ee8dde0f92121b9d1" translate="yes" xml:space="preserve">
          <source>REPLACEMENTLIST</source>
          <target state="translated">REPLACEMENTLIST</target>
        </trans-unit>
        <trans-unit id="ba425109137803e3e683ec8acbacf662eb955f0b" translate="yes" xml:space="preserve">
          <source>REPLACING</source>
          <target state="translated">REPLACING</target>
        </trans-unit>
        <trans-unit id="fa95d2a9ab9e8fba299d2cca664ea01713832e35" translate="yes" xml:space="preserve">
          <source>REPORTING BUGS</source>
          <target state="translated">버그 신고</target>
        </trans-unit>
        <trans-unit id="24635e62e8ddd92f4cc5da2504b648ac5429a3fd" translate="yes" xml:space="preserve">
          <source>REPOSITORY</source>
          <target state="translated">REPOSITORY</target>
        </trans-unit>
        <trans-unit id="654940d635d2437b881bdb8207c502ab1ddc4cc7" translate="yes" xml:space="preserve">
          <source>REQUIRED MODULES</source>
          <target state="translated">필요한 모듈</target>
        </trans-unit>
        <trans-unit id="5f121318efb144a8b6001419391a5b20c6c3f189" translate="yes" xml:space="preserve">
          <source>REQUIREMENTS</source>
          <target state="translated">REQUIREMENTS</target>
        </trans-unit>
        <trans-unit id="d4abe5aceb44522d22d765689b2e66a4d13b95b1" translate="yes" xml:space="preserve">
          <source>REQUIRES</source>
          <target state="translated">REQUIRES</target>
        </trans-unit>
        <trans-unit id="84a1adbee1321bc20135c0d8dc5a30d33e63abca" translate="yes" xml:space="preserve">
          <source>RESOURCES</source>
          <target state="translated">RESOURCES</target>
        </trans-unit>
        <trans-unit id="18c30fdfe09a62b00ef42fca3ca524381be1daae" translate="yes" xml:space="preserve">
          <source>RESTRICTIONS</source>
          <target state="translated">RESTRICTIONS</target>
        </trans-unit>
        <trans-unit id="3f16f13a6e4e56262a53083e00fe054e7f080605" translate="yes" xml:space="preserve">
          <source>RESULTS</source>
          <target state="translated">RESULTS</target>
        </trans-unit>
        <trans-unit id="dad39ba788d6c9557da1d5f8eca6a0c122f53cc6" translate="yes" xml:space="preserve">
          <source>RETURN</source>
          <target state="translated">RETURN</target>
        </trans-unit>
        <trans-unit id="a3cfa01beb76631f6551ac88fe216890eda21375" translate="yes" xml:space="preserve">
          <source>RETURN VALUE</source>
          <target state="translated">반품 가치</target>
        </trans-unit>
        <trans-unit id="2db226ae6a2200c9de52d48b59300653cddbcd5c" translate="yes" xml:space="preserve">
          <source>REVISION</source>
          <target state="translated">REVISION</target>
        </trans-unit>
        <trans-unit id="2883ce0cefe517af5eaa69e7f4cac285cbe4b2a6" translate="yes" xml:space="preserve">
          <source>REVISION HISTORY</source>
          <target state="translated">개정 이력</target>
        </trans-unit>
        <trans-unit id="38db668f060e18560a74ae3771e265dfe3889471" translate="yes" xml:space="preserve">
          <source>RFC 1321</source>
          <target state="translated">RFC 1321</target>
        </trans-unit>
        <trans-unit id="4b6fc20dacd7531202f028b2a5f35f72a25e23ad" translate="yes" xml:space="preserve">
          <source>RFC 2047, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2047.html&quot;&gt;http://www.faqs.org/rfcs/rfc2047.html&lt;/a&gt; and many other locations.</source>
          <target state="translated">RFC 2047, &lt;a href=&quot;http://www.faqs.org/rfcs/rfc2047.html&quot;&gt;http://www.faqs.org/rfcs/rfc2047.html&lt;/a&gt; 및 기타 여러 위치</target>
        </trans-unit>
        <trans-unit id="7f6129b443adb8eb4ab8117c73a7ec03cac31938" translate="yes" xml:space="preserve">
          <source>RFC 2277,</source>
          <target state="translated">RFC 2277,</target>
        </trans-unit>
        <trans-unit id="7f2e6cca0447e13526ac21e21f0f5ede40828910" translate="yes" xml:space="preserve">
          <source>RFC 2781 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2152.txt&quot;&gt;http://www.ietf.org/rfc/rfc2152.txt&lt;/a&gt;</source>
          <target state="translated">RFC 2781 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2152.txt&quot;&gt;http://www.ietf.org/rfc/rfc2152.txt&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c8f0184cbd20d399e4fafa72684d0a3bc66aa63" translate="yes" xml:space="preserve">
          <source>RFC 2781 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2781.txt&quot;&gt;http://www.ietf.org/rfc/rfc2781.txt&lt;/a&gt;,</source>
          <target state="translated">RFC 2781 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2781.txt&quot;&gt;http://www.ietf.org/rfc/rfc2781.txt&lt;/a&gt; ,</target>
        </trans-unit>
        <trans-unit id="9a7991d40b82d0c4a446272f5d53049fc02d0908" translate="yes" xml:space="preserve">
          <source>RFC 3066,</source>
          <target state="translated">RFC 3066,</target>
        </trans-unit>
        <trans-unit id="945ba2e2f75806caad55592ebe29a1b3ebf6f309" translate="yes" xml:space="preserve">
          <source>RFC 3164 - The BSD syslog Protocol</source>
          <target state="translated">RFC 3164-BSD syslog 프로토콜</target>
        </trans-unit>
        <trans-unit id="35a8129d80ee0812edff3359c57630a4510d47b2" translate="yes" xml:space="preserve">
          <source>RFC 3195 - Reliable Delivery for syslog</source>
          <target state="translated">RFC 3195-syslog를위한 안정적인 제공</target>
        </trans-unit>
        <trans-unit id="f63a110e3985b9f7489a8dd961b8827b5aaff064" translate="yes" xml:space="preserve">
          <source>RFCs</source>
          <target state="translated">RFCs</target>
        </trans-unit>
        <trans-unit id="3b3e632ab723286b647cad0535870ece0660f6d3" translate="yes" xml:space="preserve">
          <source>RISC OS perl can emulate Unix filenames with &lt;code&gt;/&lt;/code&gt; as path separator, or go native and use &lt;code&gt;.&lt;/code&gt; for path separator and &lt;code&gt;:&lt;/code&gt; to signal filesystems and disk names.</source>
          <target state="translated">RISC OS perl은 &lt;code&gt;/&lt;/code&gt; 를 경로 구분 기호로 사용 하여 Unix 파일 이름을 에뮬레이트 하거나 네이티브로 사용할 수 있습니다 &lt;code&gt;.&lt;/code&gt; 파일 시스템 및 디스크 이름을 알리기위한 경로 구분 기호 및 &lt;code&gt;:&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4054eb80e50d0195d33685c2f02f4383c18ad22b" translate="yes" xml:space="preserve">
          <source>RISKS</source>
          <target state="translated">RISKS</target>
        </trans-unit>
        <trans-unit id="e9293cd4021d2be8e0346d4819a5adbfc3a7de03" translate="yes" xml:space="preserve">
          <source>ROADMAP</source>
          <target state="translated">ROADMAP</target>
        </trans-unit>
        <trans-unit id="670ec780e0a50ca50c215927161baaa7b818b213" translate="yes" xml:space="preserve">
          <source>ROUTINES</source>
          <target state="translated">ROUTINES</target>
        </trans-unit>
        <trans-unit id="6771a11eec6289a48258037c9914e3b00de3f1aa" translate="yes" xml:space="preserve">
          <source>RSA Data Security, Inc. makes no representations concerning either the merchantability of this software or the suitability of this software for any particular purpose. It is provided &quot;as is&quot; without express or implied warranty of any kind.</source>
          <target state="translated">RSA Data Security, Inc.는이 소프트웨어의 상품성 또는 특정 목적에의 적합성에 관해 어떠한 진술도하지 않습니다. 어떠한 종류의 명시 적 또는 묵시적 보증없이 &quot;있는 그대로&quot;제공됩니다.</target>
        </trans-unit>
        <trans-unit id="b84b5482f8ea9657c275606b7d97ddc22b265005" translate="yes" xml:space="preserve">
          <source>RSX (see &lt;a href=&quot;#Prerequisites&quot;&gt;Prerequisites&lt;/a&gt;) for these commands to work, and you may need a port of</source>
          <target state="translated">이러한 명령이 작동하려면 RSX ( &lt;a href=&quot;#Prerequisites&quot;&gt;전제 조건&lt;/a&gt; 참조 ) 및 포트가 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09a688848d40f14304b5c2aa4866907e65d56982" translate="yes" xml:space="preserve">
          <source>RSYNC Mirrors</source>
          <target state="translated">RSYNC 거울</target>
        </trans-unit>
        <trans-unit id="5511eae951bd620a04e76a09544cf2f828d716d6" translate="yes" xml:space="preserve">
          <source>RT #95409</source>
          <target state="translated">RT # 95409</target>
        </trans-unit>
        <trans-unit id="ad173e04d8ecca3dab1c425136333c79954a3f23" translate="yes" xml:space="preserve">
          <source>RUN</source>
          <target state="translated">RUN</target>
        </trans-unit>
        <trans-unit id="8cac8d655edc79a094b3e30b1c55e024f2c6e794" translate="yes" xml:space="preserve">
          <source>RUN CONFIGURE.</source>
          <target state="translated">구성 실행</target>
        </trans-unit>
        <trans-unit id="b13f5492647cca89dd8a96d290c5eafb261ca74d" translate="yes" xml:space="preserve">
          <source>RUNTIME ISSUES FOR PERL ON SOLARIS.</source>
          <target state="translated">SOLARIS에서 Perl에 대한 런타임 문제.</target>
        </trans-unit>
        <trans-unit id="4c4c370e208c216b8f67b45a9afe337259faf5a2" translate="yes" xml:space="preserve">
          <source>R_CURSOR is the only valid flag at present.</source>
          <target state="translated">R_CURSOR는 현재 유일하게 유효한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="27dcabf4bc9d4bc26e8365f7cbcd0b89fe9f1cae" translate="yes" xml:space="preserve">
          <source>R_RECNOSYNC is the only valid flag at present.</source>
          <target state="translated">R_RECNOSYNC는 현재 유일하게 유효한 플래그입니다.</target>
        </trans-unit>
        <trans-unit id="0142508fcc1a59990a5e718d13aae5a93f357a6f" translate="yes" xml:space="preserve">
          <source>Race conditions are caused by unsynchronized access to shared data. Without explicit synchronization, there's no way to be sure that nothing has happened to the shared data between the time you access it and the time you update it. Even this simple code fragment has the possibility of error:</source>
          <target state="translated">경쟁 조건은 공유 데이터에 대한 동기화되지 않은 액세스로 인해 발생합니다. 명시적인 동기화가 없으면 액세스 한 시간과 업데이트 한 시간 사이에 공유 데이터에 아무런 변화가 없는지 확인할 수 없습니다. 이 간단한 코드 조각조차도 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b85f3b7cd0929657b9bd9be9a4a78ee21defd6c" translate="yes" xml:space="preserve">
          <source>Radical rewrites of large chunks of the Perl interpreter have the potential to introduce new bugs.</source>
          <target state="translated">Perl 인터프리터의 큰 덩어리에 대한 급진적 인 재 작성은 새로운 버그를 일으킬 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="be5fa4743a2b3554b929168cb16beddcc9abba29" translate="yes" xml:space="preserve">
          <source>Rafa&amp;euml;l Garcia-Suarez, Bart Lateur, Max Maischein, Anno Siegel, Michael Schwern</source>
          <target state="translated">Rafa&amp;euml;l Garcia-Suarez, Bart Lateur, 막스 마이 쉐인, Anno Siegel, Michael Schwern</target>
        </trans-unit>
        <trans-unit id="b14d9c3308f836cd95d5d2ae0777a6058e1bed73" translate="yes" xml:space="preserve">
          <source>Rainer Tammer &amp;lt;tammer@tammer.net&amp;gt;</source>
          <target state="translated">레이너 탐머 &amp;lt;tammer@tammer.net&amp;gt;</target>
        </trans-unit>
        <trans-unit id="0023298eb104a37087c2d3cbae94ab43a267b787" translate="yes" xml:space="preserve">
          <source>Raise an exception using &lt;code&gt;confess&lt;/code&gt; from &lt;a href=&quot;../carp&quot;&gt;Carp&lt;/a&gt;, eg:</source>
          <target state="translated">&lt;a href=&quot;../carp&quot;&gt;Carp의 &lt;/a&gt; &lt;code&gt;confess&lt;/code&gt; 을 사용하여 예외를 제기하십시오 . 예 :</target>
        </trans-unit>
        <trans-unit id="8cb06e0cd5423ee186d2232bd87bcb32b63e7f3b" translate="yes" xml:space="preserve">
          <source>Raise an exception using &lt;code&gt;croak&lt;/code&gt; from &lt;a href=&quot;../carp&quot;&gt;Carp&lt;/a&gt;, eg:</source>
          <target state="translated">다음 과 같이 &lt;a href=&quot;../carp&quot;&gt;Carp의 &lt;/a&gt; &lt;code&gt;croak&lt;/code&gt; 을 사용하여 예외를 발생 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="c54a401d07b29f2d86e60a3408b97357c9c95496" translate="yes" xml:space="preserve">
          <source>Randal L. Schwartz writes about profiling in &quot;Speeding up Your Perl Programs&quot; for</source>
          <target state="translated">Randal L. Schwartz는 &quot;Perl 프로그램 속도 향상&quot;에서 프로파일 링에 대해 썼습니다.</target>
        </trans-unit>
        <trans-unit id="aecb3c514c687cc0abeadea10afb2b02d82b5aca" translate="yes" xml:space="preserve">
          <source>Randomize parameter</source>
          <target state="translated">무작위 화 매개 변수</target>
        </trans-unit>
        <trans-unit id="639e3ac9bf3c15f412dffa9f6f9c04017303eefc" translate="yes" xml:space="preserve">
          <source>Range Operators</source>
          <target state="translated">범위 연산자</target>
        </trans-unit>
        <trans-unit id="9bac9d8e3ab0b378aaa92fe98e4aacdcbc341e48" translate="yes" xml:space="preserve">
          <source>Ranges containing &lt;code&gt;\N{...}&lt;/code&gt; in the &lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; (and &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt;) transliteration operators are treated differently than the equivalent ranges in regular expression pattersn. They should, but don't, cause the values in the ranges to all be treated as Unicode code points, and not native ones. (&lt;a href=&quot;perlre#Version-8-Regular-Expressions&quot;&gt;Version 8 Regular Expressions in perlre&lt;/a&gt; gives details as to how it should work.)</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/tr&quot;&gt;tr///&lt;/a&gt;&lt;/code&gt; (및 &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y///&lt;/a&gt;&lt;/code&gt; ) 음역 연산자에 &lt;code&gt;\N{...}&lt;/code&gt; 을 포함 하는 범위는 정규 표현식 패턴에서 동등한 범위와 다르게 처리됩니다. 그것들은 범위의 값이 모두 네이티브 코드 포인트가 아닌 유니 코드 코드 포인트로 취급되도록해야합니다. ( &lt;a href=&quot;perlre#Version-8-Regular-Expressions&quot;&gt;perlre에서 버전 8 정규 표현식은&lt;/a&gt; 작동 방법에 관한 세부 사항을 제공합니다.)</target>
        </trans-unit>
        <trans-unit id="3ac184a00f5d5e81e131d86e9b47ba228f878d6f" translate="yes" xml:space="preserve">
          <source>Ranges that map to &lt;code&gt;$default&lt;/code&gt; , &lt;code&gt;&quot;0&quot;&lt;/code&gt; , behave somewhat differently. For these, each code point maps to itself. So, in the first line in the example, &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(0)))&lt;/a&gt;&lt;/code&gt; is 0, &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(1)))&lt;/a&gt;&lt;/code&gt; is 1, .. &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(96)))&lt;/a&gt;&lt;/code&gt; is 96.</source>
          <target state="translated">&lt;code&gt;$default&lt;/code&gt; , &lt;code&gt;&quot;0&quot;&lt;/code&gt; 에 매핑되는 범위 는 약간 다르게 동작합니다. 이를 위해 각 코드 포인트는 자체적으로 매핑됩니다. 따라서 예제의 첫 번째 줄에서 &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(0)))&lt;/a&gt;&lt;/code&gt; 는 0이고 &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(1)))&lt;/a&gt;&lt;/code&gt; 는 1입니다. &lt;code&gt;&lt;a href=&quot;../functions/ord&quot;&gt;ord(uc(chr(96)))&lt;/a&gt;&lt;/code&gt; 는 96입니다. .</target>
        </trans-unit>
        <trans-unit id="6ac838b75fa9d93172982fdbee6a0fdb28f19017" translate="yes" xml:space="preserve">
          <source>Raphael_Manfredi!at!pobox.com</source>
          <target state="translated">Raphael_Manfredi!at!pobox.com</target>
        </trans-unit>
        <trans-unit id="54712c3ed00d8ce0c2e3a6b85abbea1e379bb426" translate="yes" xml:space="preserve">
          <source>Rather like Getopt::Std's getopts:</source>
          <target state="translated">오히려 Getopt :: Std의 getopts와 같이 :</target>
        </trans-unit>
        <trans-unit id="960b861936010943ac07ac480ae7d8624a71e2d4" translate="yes" xml:space="preserve">
          <source>Rather than calling the specified processor on each individual piece of code (i.e. on the bits between quotelikes), the &lt;code&gt;'code...'&lt;/code&gt; partial filters operate on the entire source code, but with the quotelike bits (and, in the case of &lt;code&gt;'code_no_comments'&lt;/code&gt; , the comments) &quot;blanked out&quot;.</source>
          <target state="translated">각 개별 코드 조각 (예 : 인용 &lt;code&gt;'code...'&lt;/code&gt; 사이의 비트)에서 지정된 프로세서를 호출하는 대신 'code ...' 부분 필터는 전체 소스 코드에서 작동하지만 인용 부호 비트 (및 &lt;code&gt;'code_no_comments'&lt;/code&gt; , 주석)이 &quot;공백 됨&quot;.</target>
        </trans-unit>
        <trans-unit id="a8782cdf0f3b4bc2f2a2c02de3c7d4fefe8fe5e7" translate="yes" xml:space="preserve">
          <source>Rather than causing Perl to abort and dump core, the &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; operator invokes the VMS debugger. If you continue to execute the Perl program under the debugger, control will be transferred to the label specified as the argument to &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt;, or, if no label was specified, back to the beginning of the program. All other state of the program (</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; 운영자는 코어를 중단하고 덤프하지 않고 VMS 디버거를 호출합니다. 디버거에서 Perl 프로그램을 계속 실행하면 제어는 &lt;code&gt;&lt;a href=&quot;functions/dump&quot;&gt;dump&lt;/a&gt;&lt;/code&gt; 의 인수로 지정된 레이블로 전송 되거나 레이블이 지정되지 않은 경우 프로그램 시작으로 다시 이동됩니다. 프로그램의 다른 모든 상태 (</target>
        </trans-unit>
        <trans-unit id="a3447d08dbbb43de106eae02bb7588c613a64d47" translate="yes" xml:space="preserve">
          <source>Rather than iterating through the array, &lt;code&gt;@h&lt;/code&gt; like this:</source>
          <target state="translated">&lt;code&gt;@h&lt;/code&gt; 는 배열을 반복하지 않고 다음 과 같이합니다.</target>
        </trans-unit>
        <trans-unit id="0ba567eee2b9c54359919e71a72ac93305e4e900" translate="yes" xml:space="preserve">
          <source>Rather than returning a &lt;code&gt;Pod::ParseTree&lt;/code&gt; , pass the parse-tree as an argument to the referenced subroutine (or named method of the parser object) and return the result instead of the parse-tree object.</source>
          <target state="translated">&lt;code&gt;Pod::ParseTree&lt;/code&gt; 반환하는 대신 구문 분석 트리를 참조 된 서브 루틴 (또는 파서 객체의 명명 된 메서드)에 인수로 전달하고 구문 분석 트리 객체 대신 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="21ad00b67279483cb2f1a049ab8ad14f7abfff12" translate="yes" xml:space="preserve">
          <source>Rather than storing a sentinel at the end of a data item (or a list of items), we could precede the data with a count. Again, we pack keys and values of a hash, preceding each with an unsigned short length count, and up front we store the number of pairs:</source>
          <target state="translated">데이터 항목 (또는 항목 목록)의 끝에 센티넬을 저장하는 대신 데이터 앞에 카운트를 지정할 수 있습니다. 다시, 우리는 각각의 부호없는 짧은 길이 카운트 앞에 키와 해시의 값을 묶고, 먼저 쌍의 수를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="b323fa99aea3713aacf8ae1a80086b503b9a2ebf" translate="yes" xml:space="preserve">
          <source>Rather than this:</source>
          <target state="translated">이보다는 :</target>
        </trans-unit>
        <trans-unit id="24f10661814f8bcbc7d422331f86ee1432e30684" translate="yes" xml:space="preserve">
          <source>Rather than trying to match the input against the keywords, we match the combined set of keywords against the input. The pattern matching operation &lt;code&gt;$kwds =~ /\b($cmd\w*)/g&lt;/code&gt; does several things at the same time. It makes sure that the given command begins where a keyword begins (&lt;code&gt;\b&lt;/code&gt; ). It tolerates abbreviations due to the added &lt;code&gt;\w*&lt;/code&gt; . It tells us the number of matches (&lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; @matches&lt;/code&gt; ) and all the keywords that were actually matched. You could hardly ask for more.</source>
          <target state="translated">입력을 키워드와 일치 시키려고하지 않고 결합 된 키워드 세트를 입력과 일치시킵니다. 패턴 일치 작업 &lt;code&gt;$kwds =~ /\b($cmd\w*)/g&lt;/code&gt; 는 동시에 여러 작업을 수행합니다. 주어진 명령이 키워드가 시작되는 위치 ( &lt;code&gt;\b&lt;/code&gt; )에서 시작되도록합니다 . 추가 된 &lt;code&gt;\w*&lt;/code&gt; 로 인해 약어를 허용 합니다. 일치 횟수 ( &lt;code&gt;&lt;a href=&quot;functions/scalar&quot;&gt;scalar&lt;/a&gt; @matches&lt;/code&gt; )와 실제로 일치하는 모든 키워드를 알려줍니다 . 더 많은 것을 요구할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="98cb94b52a420b753d7056cb4d301d163b5f24a9" translate="yes" xml:space="preserve">
          <source>Raw output. Instead of producing a human-readable report, outputs a line in machine-readable form for each definition/use of a variable/sub/format.</source>
          <target state="translated">원시 출력. 사람이 읽을 수있는 보고서를 작성하는 대신 변수 / 하위 / 형식의 각 정의 / 사용에 대해 기계가 읽을 수있는 형태로 라인을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="caadded21212ee777b82941fc97c8e21f9d9eb4f" translate="yes" xml:space="preserve">
          <source>Raw tar header -- not useful for most users</source>
          <target state="translated">원시 타르 헤더-대부분의 사용자에게 유용하지 않습니다</target>
        </trans-unit>
        <trans-unit id="647d68a92bffee01f0ecfc9cfacfb204335146b1" translate="yes" xml:space="preserve">
          <source>Re-enable an entry in this BHK structure, by setting the appropriate flag.</source>
          <target state="translated">적절한 플래그를 설정하여이 BHK 구조에서 항목을 다시 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="c7ce193ee0e134e6a49d173985b5d921f2b5ce47" translate="yes" xml:space="preserve">
          <source>Reachability doesn't necessarily mean that the remote host is actually functioning beyond its ability to echo packets. tcp is slightly better at indicating the health of a system than icmp because it uses more of the networking stack to respond.</source>
          <target state="translated">도달 가능성이 반드시 원격 호스트가 실제로 패킷을 에코하는 기능 이상으로 기능하고 있음을 의미하지는 않습니다. tcp는 더 많은 네트워킹 스택을 사용하여 응답하기 때문에 icmp보다 시스템 상태를 나타내는 데 약간 더 좋습니다.</target>
        </trans-unit>
        <trans-unit id="852b438f91ad9eb2cdd84419a675a216d543c687" translate="yes" xml:space="preserve">
          <source>Read</source>
          <target state="translated">Read</target>
        </trans-unit>
        <trans-unit id="bb510d523e3559f1dd31a12b9ab3443e6d1eb043" translate="yes" xml:space="preserve">
          <source>Read &amp;amp; Write to the database.</source>
          <target state="translated">데이터베이스를 읽고 씁니다.</target>
        </trans-unit>
        <trans-unit id="fdce8d24a2a2e7b37555fd2756a9d51eacebc665" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; to help you decide which of &lt;code&gt;/s&lt;/code&gt; and &lt;code&gt;/m&lt;/code&gt; (or both) you might want to use: &lt;code&gt;/s&lt;/code&gt; allows dot to include newline, and &lt;code&gt;/m&lt;/code&gt; allows caret and dollar to match next to a newline, not just at the end of the string. You do need to make sure that you've actually got a multiline string in there.</source>
          <target state="translated">&lt;code&gt;/s&lt;/code&gt; 및 &lt;code&gt;/m&lt;/code&gt; 중 하나 (또는 둘 다)를 사용하여 원하는 것을 결정하는 데 도움이되는 &lt;a href=&quot;perlre&quot;&gt;perlre&lt;/a&gt; 를 읽으십시오 . &lt;code&gt;/s&lt;/code&gt; 는 점이 개행을 포함하도록 허용 하고 &lt;code&gt;/m&lt;/code&gt; 은 끝 부분이 아니라 개행 옆에 캐럿과 달러가 일치하도록 허용합니다. 문자열의. 실제로 여러 줄로 된 문자열이 있는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="e6ec605136e3a8392d3b3c34e52fe32d6a841de5" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt;, &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt;, &lt;a href=&quot;h2xs&quot;&gt;h2xs&lt;/a&gt;, &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt;, and &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt;.</source>
          <target state="translated">읽기 &lt;a href=&quot;perlxstut&quot;&gt;perlxstut&lt;/a&gt; , &lt;a href=&quot;perlxs&quot;&gt;perlxs&lt;/a&gt; , &lt;a href=&quot;h2xs&quot;&gt;h2xs는&lt;/a&gt; , &lt;a href=&quot;perlguts&quot;&gt;perlguts&lt;/a&gt; 및 &lt;a href=&quot;perlapi&quot;&gt;perlapi&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="115c8291258f382229f6753be5b1c82468c882c2" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;SIZE&lt;/code&gt; bytes from the shared memory segment at &lt;code&gt;POS&lt;/code&gt; . Returns the string read, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if there was an error. The return value becomes tainted. See &lt;a href=&quot;../functions/shmread&quot;&gt;shmread&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;POS&lt;/code&gt; 의 공유 메모리 세그먼트에서 &lt;code&gt;SIZE&lt;/code&gt; 바이트를 읽습니다 . 읽은 문자열을 반환하거나 오류가있는 경우 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . 반환 값이 오염됩니다. &lt;a href=&quot;../functions/shmread&quot;&gt;shmread를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a25663c537f022e0f372f2cbbe12e60f624c4ef" translate="yes" xml:space="preserve">
          <source>Read &lt;code&gt;SIZE&lt;/code&gt; bytes of data from the server and place it into &lt;code&gt;BUFFER&lt;/code&gt; , also performing any &amp;lt;CRLF&amp;gt; translation necessary. &lt;code&gt;TIMEOUT&lt;/code&gt; is optional, if not given, the timeout value from the command connection will be used.</source>
          <target state="translated">서버에서 &lt;code&gt;SIZE&lt;/code&gt; 바이트의 데이터를 읽고 &lt;code&gt;BUFFER&lt;/code&gt; 에 배치하고 필요한 &amp;lt;CRLF&amp;gt; 변환도 수행하십시오. &lt;code&gt;TIMEOUT&lt;/code&gt; 은 선택 사항이며, 지정하지 않으면 명령 연결의 시간 초과 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bcd1cac37334c28f94a5a1f13002c1b9c161efeb" translate="yes" xml:space="preserve">
          <source>Read RFC 1950 files/buffers</source>
          <target state="translated">RFC 1950 파일 / 버퍼 읽기</target>
        </trans-unit>
        <trans-unit id="4c474aa41d748aeded351b2b82635d904b9da7ca" translate="yes" xml:space="preserve">
          <source>Read RFC 1951 files/buffers</source>
          <target state="translated">RFC 1951 파일 / 버퍼 읽기</target>
        </trans-unit>
        <trans-unit id="9674cc4cd21ee5a1adf68bfae1b32a2e0b35087c" translate="yes" xml:space="preserve">
          <source>Read RFC 1952 files/buffers</source>
          <target state="translated">RFC 1952 파일 / 버퍼 읽기</target>
        </trans-unit>
        <trans-unit id="276580730ef1defd3b269e41373718655fc1f8b1" translate="yes" xml:space="preserve">
          <source>Read YAMLish data from iterator</source>
          <target state="translated">반복자에서 YAMLish 데이터 읽기</target>
        </trans-unit>
        <trans-unit id="3401450e1edb9cded52db8b9f6b72e38b73e0be8" translate="yes" xml:space="preserve">
          <source>Read YAMLish from a &lt;a href=&quot;../iterator&quot;&gt;TAP::Parser::Iterator&lt;/a&gt; and return the data structure it represents.</source>
          <target state="translated">&lt;a href=&quot;../iterator&quot;&gt;TAP :: Parser :: Iterator&lt;/a&gt; 에서 YAMLish를 읽고 그것이 나타내는 데이터 구조를 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="941b148e1edab00bee2330ed7ac82ddf4e74edf3" translate="yes" xml:space="preserve">
          <source>Read a message from the queue. Returns the type of the message read. See &lt;a href=&quot;../functions/msgrcv&quot;&gt;msgrcv&lt;/a&gt;. The BUF becomes tainted.</source>
          <target state="translated">큐에서 메시지를 읽습니다. 읽은 메시지의 유형을 반환합니다. &lt;a href=&quot;../functions/msgrcv&quot;&gt;msgrcv를&lt;/a&gt; 참조하십시오 . BUF가 오염됩니다.</target>
        </trans-unit>
        <trans-unit id="3e2328757ae1c800d4e10ae414e17971850a69f5" translate="yes" xml:space="preserve">
          <source>Read a single character.</source>
          <target state="translated">단일 문자를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="a07c6817a15867b0dc47cde38731ba9873326685" translate="yes" xml:space="preserve">
          <source>Read a single line</source>
          <target state="translated">한 줄 읽기</target>
        </trans-unit>
        <trans-unit id="553549240039452847251f6622903ab2d2337784" translate="yes" xml:space="preserve">
          <source>Read about &lt;a href=&quot;functions/do&quot;&gt;do&lt;/a&gt; and &lt;a href=&quot;functions/eval&quot;&gt;eval&lt;/a&gt; and &lt;a href=&quot;functions/require&quot;&gt;require&lt;/a&gt; and &lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt;.</source>
          <target state="translated">정보를 참조 &lt;a href=&quot;functions/do&quot;&gt;할&lt;/a&gt; 및 &lt;a href=&quot;functions/eval&quot;&gt;평가&lt;/a&gt; 와 &lt;a href=&quot;functions/require&quot;&gt;요구&lt;/a&gt; 및 &lt;a href=&quot;functions/use&quot;&gt;사용&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f501e785d8f60607eb8fd29020b8ae54ebe01044" translate="yes" xml:space="preserve">
          <source>Read about back-quotes and about &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; in &lt;a href=&quot;perlfunc&quot;&gt;perlfunc&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;perlfunc&quot;&gt;perlfunc의&lt;/a&gt; 역 따옴표 및 &lt;code&gt;&lt;a href=&quot;functions/system&quot;&gt;system&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec&lt;/a&gt;&lt;/code&gt; 에 대해 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="007c6ee7681668b24b579a3ecbbdba86f7191bbe" translate="yes" xml:space="preserve">
          <source>Read access via Git</source>
          <target state="translated">Git을 통한 읽기 액세스</target>
        </trans-unit>
        <trans-unit id="e6736eaa1ab69e3d90ab95af13fafa160ed47c93" translate="yes" xml:space="preserve">
          <source>Read access via rsync</source>
          <target state="translated">rsync를 통한 읽기 액세스</target>
        </trans-unit>
        <trans-unit id="78e2b2049458202a1fc5f7c18fb55aa58bb1e225" translate="yes" xml:space="preserve">
          <source>Read access via the web</source>
          <target state="translated">웹을 통한 읽기 액세스</target>
        </trans-unit>
        <trans-unit id="bb2c8ec09bc65616d8ed5815b01859080def7101" translate="yes" xml:space="preserve">
          <source>Read and execute debugger commands from</source>
          <target state="translated">에서 디버거 명령을 읽고 실행</target>
        </trans-unit>
        <trans-unit id="00ebc21a3cf3bbcb1e390623db3b54ac9cad53d9" translate="yes" xml:space="preserve">
          <source>Read and match distroprefs</source>
          <target state="translated">distroprefs를 읽고 일치</target>
        </trans-unit>
        <trans-unit id="1de275b3a330a676e1b3a19bf0483a26f7bea910" translate="yes" xml:space="preserve">
          <source>Read and write a subset of YAML for CPAN Meta files</source>
          <target state="translated">CPAN 메타 파일에 대한 YAML 서브 세트 읽기 및 쓰기</target>
        </trans-unit>
        <trans-unit id="d3dae8f537b10a514d29cfd0d4064e961135e516" translate="yes" xml:space="preserve">
          <source>Read bzip2 files/buffers</source>
          <target state="translated">bzip2 파일 / 버퍼 읽기</target>
        </trans-unit>
        <trans-unit id="5f496354721b34074a6d09386d4dfd90a7648131" translate="yes" xml:space="preserve">
          <source>Read data from the remote server until a line consisting of a single '.'. Any lines starting with '..' will have one of the '.'s removed.</source>
          <target state="translated">단일 '.'로 구성된 행까지 원격 서버에서 데이터를 읽습니다. '..'로 시작하는 모든 줄은 '.'중 하나가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="58cff263782110131a866571e46995cb57864bc1" translate="yes" xml:space="preserve">
          <source>Read from a file. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt; . If the buffer &lt;code&gt;$buf&lt;/code&gt; is not large enough for the read then Perl will extend it to make room for the request.</source>
          <target state="translated">파일에서 읽습니다. &lt;code&gt;POSIX::open&lt;/code&gt; 을 호출하여 얻은 것과 같은 파일 디스크립터를 사용합니다 . 버퍼 &lt;code&gt;$buf&lt;/code&gt; 가 읽기에 충분히 크지 않으면 Perl은이를 확장하여 요청을위한 공간을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="18cc7e8fd48d963fa396269e4c2ab7dfc690c7a1" translate="yes" xml:space="preserve">
          <source>Read on...</source>
          <target state="translated">읽어...</target>
        </trans-unit>
        <trans-unit id="38a567871f2319ef4608911cbaae63388beacceb" translate="yes" xml:space="preserve">
          <source>Read some bytes from the file. Returns the number of bytes actually read, 0 on end-of-file, undef on error.</source>
          <target state="translated">파일에서 일부 바이트를 읽습니다. 실제로 읽은 바이트 수, 파일 끝에서 0, 오류시 undef를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6da6ecf1c98213777d74b19843e6892f664218a5" translate="yes" xml:space="preserve">
          <source>Read the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445df6f2b2a25f8116b39a5d89fac539c3d48c64" translate="yes" xml:space="preserve">
          <source>Read the FAQs and documentation specific to the port of perl to your operating system (eg, &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt;, &lt;a href=&quot;perlplan9&quot;&gt;perlplan9&lt;/a&gt;, ...). These should contain more detailed information on the vagaries of your perl.</source>
          <target state="translated">운영 체제에 대한 perl 포트 관련 FAQ 및 문서를 읽으십시오 (예 : &lt;a href=&quot;perlvms&quot;&gt;perlvms&lt;/a&gt; , &lt;a href=&quot;perlplan9&quot;&gt;perlplan9&lt;/a&gt; 등). 여기에는 펄의 화장실에 대한 자세한 정보가 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a3f312a281ee3fabbb4644cfca212e21dc23d819" translate="yes" xml:space="preserve">
          <source>Read the given tar file into memory. The first argument can either be the name of a file or a reference to an already open filehandle (or an IO::Zlib object if it's compressed)</source>
          <target state="translated">제공된 tar 파일을 메모리로 읽습니다. 첫 번째 인수는 파일 이름이거나 이미 열려있는 파일 핸들에 대한 참조이거나 압축 된 경우 IO :: Zlib 객체 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b74d7333cb35735ec7d211619b3f8a0c7fbd713" translate="yes" xml:space="preserve">
          <source>Read zip files/buffers</source>
          <target state="translated">zip 파일 / 버퍼 읽기</target>
        </trans-unit>
        <trans-unit id="d5283d26eb840638e1f550dc557572ba6542f3d4" translate="yes" xml:space="preserve">
          <source>Read-Only Values</source>
          <target state="translated">읽기 전용 값</target>
        </trans-unit>
        <trans-unit id="5683a14e485b7046ea3107db40da5d887aa290ef" translate="yes" xml:space="preserve">
          <source>Read-only access to the data in the file.</source>
          <target state="translated">파일의 데이터에 대한 읽기 전용 액세스</target>
        </trans-unit>
        <trans-unit id="bdc983681241a5008bf0f2decf61749fdd356f1d" translate="yes" xml:space="preserve">
          <source>Read-only optrees</source>
          <target state="translated">읽기 전용 optree</target>
        </trans-unit>
        <trans-unit id="cbcc1694c685273c78534f0d3e2cd46541b02c0d" translate="yes" xml:space="preserve">
          <source>Read/Write/Modify Perl/XS typemap files</source>
          <target state="translated">Perl / XS 타입 맵 파일 읽기 / 쓰기 / 수정</target>
        </trans-unit>
        <trans-unit id="5aee42c0aa7d8176e37f9692354e87f3f5b4679f" translate="yes" xml:space="preserve">
          <source>Readers have been known to skip important parts of &lt;a href=&quot;../perlguts&quot;&gt;perlguts&lt;/a&gt;, causing much frustration for all.</source>
          <target state="translated">독자들은 &lt;a href=&quot;../perlguts&quot;&gt;perlguts의&lt;/a&gt; 중요한 부분을 건너 뛰어 모든 사람에게 많은 좌절감을 안겨주 는 것으로 알려져 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecba0bec4829317939306f304d19e964a7a84e1d" translate="yes" xml:space="preserve">
          <source>Reading &lt;code&gt;Devel::Peek&lt;/code&gt; output takes a bit of practise, so let's go through it line by line.</source>
          <target state="translated">Reading &lt;code&gt;Devel::Peek&lt;/code&gt; 출력에는 약간의 연습이 필요하므로 한 줄씩 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="720629d599316203605d35ccc57d80ad0c87c1df" translate="yes" xml:space="preserve">
          <source>Reading an input line does not split it for you. You get to split it to an array yourself. And the split() operator has different arguments than &lt;b&gt;awk&lt;/b&gt;'s.</source>
          <target state="translated">입력 라인을 읽는다고해서 분리되지는 않습니다. 직접 배열로 나눕니다. split () 연산자는 &lt;b&gt;awk&lt;/b&gt; 와 다른 인수를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="aca2d568455adb5d39f1f5a67763764982820867" translate="yes" xml:space="preserve">
          <source>Reading from &lt;code&gt;STDIN&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;STDIN&lt;/code&gt; 에서 읽기</target>
        </trans-unit>
        <trans-unit id="43278435f6048011353ab3e1550aec2934094377" translate="yes" xml:space="preserve">
          <source>Reading from STDIN</source>
          <target state="translated">STDIN에서 읽기</target>
        </trans-unit>
        <trans-unit id="a3daaeaef0f24df245aaa3148b442905754f46bb" translate="yes" xml:space="preserve">
          <source>Reading in a file that you know happens to be encoded in one of the Unicode or legacy encodings does not magically turn the data into Unicode in Perl's eyes. To do that, specify the appropriate layer when opening files</source>
          <target state="translated">유니 코드 또는 레거시 인코딩 중 하나로 인코딩 된 것으로 알려진 파일을 읽는다고해도 데이터가 Perl의 눈에 유니 코드로 바뀌지는 않습니다. 그렇게하려면 파일을 열 때 적절한 레이어를 지정하십시오</target>
        </trans-unit>
        <trans-unit id="4846fec17a47b45717c157bbd8a0f9bd1ad2e3c9" translate="yes" xml:space="preserve">
          <source>Reading in the whole file at one time is called slurping. It can be useful but it may be a memory hog. Most text file processing can be done a line at a time with Perl's looping constructs.</source>
          <target state="translated">한 번에 전체 파일을 읽는 것을 slurping이라고합니다. 유용 할 수 있지만 메모리 호그 일 수 있습니다. 대부분의 텍스트 파일 처리는 Perl의 반복 구성을 사용하여 한 번에 한 줄씩 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3765f01b49c43d45e4334a57b6fc21c7972c3951" translate="yes" xml:space="preserve">
          <source>Readline Support / History in the Debugger</source>
          <target state="translated">디버거의 Readline 지원 / 히스토리</target>
        </trans-unit>
        <trans-unit id="fd63187370525346d69be8508f8b50f415e9e87c" translate="yes" xml:space="preserve">
          <source>Reads &lt;code&gt;$size&lt;/code&gt; bytes from the compressed file into &lt;code&gt;$buffer&lt;/code&gt; . If &lt;code&gt;$size&lt;/code&gt; is not specified, it will default to 4096. If the scalar &lt;code&gt;$buffer&lt;/code&gt; is not large enough, it will be extended automatically.</source>
          <target state="translated">압축 파일에서 &lt;code&gt;$size&lt;/code&gt; 바이트를 &lt;code&gt;$buffer&lt;/code&gt; 로 읽습니다 . 경우 &lt;code&gt;$size&lt;/code&gt; 지정되지 않은 스칼라 경우, 4096로 설정됩니다 &lt;code&gt;$buffer&lt;/code&gt; , 자동 연장됩니다 충분한이 없습니다.</target>
        </trans-unit>
        <trans-unit id="206a7f5e7297aa5bd7492bad4e008ac4bc46e49d" translate="yes" xml:space="preserve">
          <source>Reads SIZE bytes from a memory segment at ADDR starting at position POS. VAR must be a variable that will hold the data read. Returns true if successful, or false if there is an error. memread() taints the variable.</source>
          <target state="translated">POSI 위치에서 시작하여 ADDR의 메모리 세그먼트에서 SIZE 바이트를 읽습니다. VAR은 읽은 데이터를 보유 할 변수 여야합니다. 성공하면 true를, 오류가 있으면 false를 반환합니다. memread ()는 변수를 오염시킵니다.</target>
        </trans-unit>
        <trans-unit id="799d4c2bbc52577dcbc3f454b2dcc4d5b936f889" translate="yes" xml:space="preserve">
          <source>Reads a block of compressed data (the size of the compressed block is determined by the &lt;code&gt;Buffer&lt;/code&gt; option in the constructor), uncompresses it and writes any uncompressed data into &lt;code&gt;$buffer&lt;/code&gt; . If the &lt;code&gt;Append&lt;/code&gt; parameter is set in the constructor, the uncompressed data will be appended to the &lt;code&gt;$buffer&lt;/code&gt; parameter. Otherwise &lt;code&gt;$buffer&lt;/code&gt; will be overwritten.</source>
          <target state="translated">압축 된 데이터 블록을 읽고 (압축 된 블록의 크기 는 생성자 의 &lt;code&gt;Buffer&lt;/code&gt; 옵션에 의해 결정됨 ) 압축을 풀고 압축되지 않은 데이터를 &lt;code&gt;$buffer&lt;/code&gt; 씁니다 . &lt;code&gt;Append&lt;/code&gt; 매개 변수가 생성자에 설정되어 있으면 압축되지 않은 데이터가 &lt;code&gt;$buffer&lt;/code&gt; 매개 변수에 추가됩니다 . 그렇지 않으면 &lt;code&gt;$buffer&lt;/code&gt; 를 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="a18e9d62cd14286629fc6e76754c10fff378cc5e" translate="yes" xml:space="preserve">
          <source>Reads a single line.</source>
          <target state="translated">한 줄을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="60ee44c28be29184ce4a73c61b1ec7edf4671344" translate="yes" xml:space="preserve">
          <source>Reads are permitted i.e. opened &quot;r&quot; or &quot;w+&quot; (or even &quot;a+&quot; - ick).</source>
          <target state="translated">&quot;r&quot;또는 &quot;w +&quot;(또는 &quot;a +&quot;-ick)을 열 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42f0afdf9d8c38585692746943b6766dbe732c8a" translate="yes" xml:space="preserve">
          <source>Reads from</source>
          <target state="translated">에서 읽습니다</target>
        </trans-unit>
        <trans-unit id="d2dc0c11f98a08996cb17f6c2572663d3f74f26f" translate="yes" xml:space="preserve">
          <source>Reads from the filehandle whose typeglob is contained in EXPR (or from &lt;code&gt;*ARGV&lt;/code&gt; if EXPR is not provided). In scalar context, each call reads and returns the next line until end-of-file is reached, whereupon the subsequent call returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. In list context, reads until end-of-file is reached and returns a list of lines. Note that the notion of &quot;line&quot; used here is whatever you may have defined with &lt;code&gt;$/&lt;/code&gt; or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). See &lt;a href=&quot;perlvar#%24%2f&quot;&gt;$/ in perlvar&lt;/a&gt;.</source>
          <target state="translated">typeglob가 EXPR에 포함 된 파일 핸들 (또는 EXPR이 제공되지 않은 경우 &lt;code&gt;*ARGV&lt;/code&gt; ) 에서 읽습니다 . 스칼라 컨텍스트에서 각 호출은 파일 끝에 도달 할 때까지 다음 행을 읽고 리턴하며, 이후 호출은 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 . 목록 컨텍스트에서 파일 끝에 도달 할 때까지 읽고 행 목록을 리턴합니다. 여기서 사용 된 &quot;라인&quot;개념은 &lt;code&gt;$/&lt;/code&gt; 또는 &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; 정의한 모든 개념입니다 ). &lt;a href=&quot;perlvar#%24%2f&quot;&gt;perlvar에서 $ /를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b4d819b245f8997ea46d716718b7b5137afee52" translate="yes" xml:space="preserve">
          <source>Reads from the filehandle whose typeglob is contained in EXPR (or from &lt;code&gt;*ARGV&lt;/code&gt; if EXPR is not provided). In scalar context, each call reads and returns the next line until end-of-file is reached, whereupon the subsequent call returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. In list context, reads until end-of-file is reached and returns a list of lines. Note that the notion of &quot;line&quot; used here is whatever you may have defined with &lt;code&gt;$/&lt;/code&gt; or &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; ). See &lt;a href=&quot;../perlvar#%24%2f&quot;&gt;$/ in perlvar&lt;/a&gt;.</source>
          <target state="translated">typeglob가 EXPR에 포함 된 파일 핸들 (또는 EXPR이 제공되지 않은 경우 &lt;code&gt;*ARGV&lt;/code&gt; ) 에서 읽습니다 . 스칼라 컨텍스트에서 각 호출은 파일 끝에 도달 할 때까지 다음 행을 읽고 리턴하며, 이후 호출은 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 . 목록 컨텍스트에서 파일 끝에 도달 할 때까지 읽고 행 목록을 리턴합니다. 여기서 사용 된 &quot;라인&quot;개념은 &lt;code&gt;$/&lt;/code&gt; 또는 &lt;code&gt;$INPUT_RECORD_SEPARATOR&lt;/code&gt; 정의한 모든 개념입니다 ). &lt;a href=&quot;../perlvar#%24%2f&quot;&gt;perlvar에서 $ /를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5686d4cf607b2427e345e3a17783aa2d6f48772a" translate="yes" xml:space="preserve">
          <source>Reads in the next chunk of text to be lexed, appending it to &lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt;linestr&lt;/a&gt;. This should be called when lexing code has looked to the end of the current chunk and wants to know more. It is usual, but not necessary, for lexing to have consumed the entirety of the current chunk at this time.</source>
          <target state="translated">&lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt; linestr에&lt;/a&gt; 추가하여 다음 텍스트 청크에서 읽을 수 있습니다. 렉싱 코드가 현재 청크의 끝을보고 자세한 내용을 알고 싶을 때 호출해야합니다. 이 시점에서 렉싱이 현재 청크 전체를 소비하는 것이 일반적이지만 반드시 필요한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0e502d5f8379d8469e98c1ca45f22f6d653d22e2" translate="yes" xml:space="preserve">
          <source>Reads into</source>
          <target state="translated">읽습니다</target>
        </trans-unit>
        <trans-unit id="0c3577c9b285cf2945e65a6e8c5f9d480cfc5c7d" translate="yes" xml:space="preserve">
          <source>Reads optional spaces, in Perl style, in the text currently being lexed. The spaces may include ordinary whitespace characters and Perl-style comments. &lt;code&gt;#line&lt;/code&gt; directives are processed if encountered. &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt; is moved past the spaces, so that it points at a non-space character (or the end of the input text).</source>
          <target state="translated">현재 어휘 분석중인 텍스트에서 선택적 공백을 Perl 스타일로 읽습니다. 공백에는 일반 공백 문자와 Perl 스타일 주석이 포함될 수 있습니다. &lt;code&gt;#line&lt;/code&gt; 지시문이 있으면 처리됩니다. &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr&lt;/a&gt; 은 공백을지나 이동하므로 공백이 아닌 문자 (또는 입력 텍스트의 끝)를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="8320a729c06e516aca0a96e512d594788146ecaf" translate="yes" xml:space="preserve">
          <source>Reads or writes the System V shared memory segment ID starting at position POS for size SIZE by attaching to it, copying in/out, and detaching from it. When reading, VAR must be a variable that will hold the data read. When writing, if STRING is too long, only SIZE bytes are used; if STRING is too short, nulls are written to fill out SIZE bytes. Return true if successful, false on error. shmread() taints the variable. See also &lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt;, &lt;code&gt;IPC::SysV&lt;/code&gt; , and the &lt;code&gt;IPC::Shareable&lt;/code&gt; module from CPAN.</source>
          <target state="translated">크기 SIZE의 POS 위치에서 시작하여 System V 공유 메모리 세그먼트 ID를 첨부, 복사, 분리 및 분리하여 읽거나 씁니다. 읽을 때 VAR은 읽은 데이터를 보유 할 변수 여야합니다. 쓸 때 STRING이 너무 길면 SIZE 바이트 만 사용됩니다. STRING이 너무 짧은 경우 SIZE 바이트를 채우기 위해 널이 작성됩니다. 성공하면 true를, 에러가 발생하면 false를 반환합니다. shmread ()는 변수를 오염시킵니다. 참조 &lt;a href=&quot;../perlipc#SysV-IPC&quot;&gt;시스템 V IPC는 perlipc에서&lt;/a&gt; , &lt;code&gt;IPC::SysV&lt;/code&gt; 및 &lt;code&gt;IPC::Shareable&lt;/code&gt; CPAN에서 모듈.</target>
        </trans-unit>
        <trans-unit id="f125d7e184df479fec94e499e44324e6ceb7098a" translate="yes" xml:space="preserve">
          <source>Reads or writes the System V shared memory segment ID starting at position POS for size SIZE by attaching to it, copying in/out, and detaching from it. When reading, VAR must be a variable that will hold the data read. When writing, if STRING is too long, only SIZE bytes are used; if STRING is too short, nulls are written to fill out SIZE bytes. Return true if successful, false on error. shmread() taints the variable. See also &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;SysV IPC in perlipc&lt;/a&gt;, &lt;code&gt;IPC::SysV&lt;/code&gt; , and the &lt;code&gt;IPC::Shareable&lt;/code&gt; module from CPAN.</source>
          <target state="translated">크기 SIZE의 POS 위치에서 시작하여 System V 공유 메모리 세그먼트 ID를 첨부, 복사, 분리 및 분리하여 읽거나 씁니다. 읽을 때 VAR은 읽은 데이터를 보유 할 변수 여야합니다. 쓸 때 STRING이 너무 길면 SIZE 바이트 만 사용됩니다. STRING이 너무 짧은 경우 SIZE 바이트를 채우기 위해 널이 작성됩니다. 성공하면 true를, 에러가 발생하면 false를 반환합니다. shmread ()는 변수를 오염시킵니다. 참조 &lt;a href=&quot;perlipc#SysV-IPC&quot;&gt;시스템 V IPC는 perlipc에서&lt;/a&gt; , &lt;code&gt;IPC::SysV&lt;/code&gt; 및 &lt;code&gt;IPC::Shareable&lt;/code&gt; CPAN에서 모듈.</target>
        </trans-unit>
        <trans-unit id="ff3932830db44982eec2ae215d9491c4fc84e2b9" translate="yes" xml:space="preserve">
          <source>Reads the YAML stream from a file instead of a string.</source>
          <target state="translated">문자열 대신 파일에서 YAML 스트림을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="b5f50fa24a3e4fd3d77314b2073891ffb95299e6" translate="yes" xml:space="preserve">
          <source>Reads the contents of</source>
          <target state="translated">내용을 읽습니다</target>
        </trans-unit>
        <trans-unit id="c0ef207c7fee9445bbf063cb6e3bc97ad3d05a6b" translate="yes" xml:space="preserve">
          <source>Reads the contents of &lt;code&gt;$input&lt;/code&gt; , compresses it and writes the compressed data to &lt;code&gt;$output&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$input&lt;/code&gt; 의 내용을 읽고 압축 한 다음 압축 된 데이터를 &lt;code&gt;$output&lt;/code&gt; 씁니다 .</target>
        </trans-unit>
        <trans-unit id="69012285115dba7938e88e4e1d96760f57b6f1cd" translate="yes" xml:space="preserve">
          <source>Reads the next (Unicode) character in the text currently being lexed. Returns the codepoint (unsigned integer value) of the character read, and moves &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt;bufptr&lt;/a&gt; past the character, or returns -1 if lexing has reached the end of the input text. To non-destructively examine the next character, use &lt;a href=&quot;#lex_peek_unichar&quot;&gt;lex_peek_unichar&lt;/a&gt; instead.</source>
          <target state="translated">현재 어휘 분석중인 텍스트에서 다음 (유니 코드) 문자를 읽습니다. 읽은 문자의 코드 포인트 (부호없는 정수 값)를 리턴하고 문자를지나 &lt;a href=&quot;#PL_parser-%3ebufptr&quot;&gt;PL_parser-&amp;gt; bufptr을&lt;/a&gt; 이동 시키 거나 렉싱이 입력 텍스트의 끝에 도달하면 -1을 리턴합니다. 다음 문자를 비파괴 적으로 검사하려면 &lt;a href=&quot;#lex_peek_unichar&quot;&gt;lex_peek_unichar를&lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="91c6ed682ed41c74c87caf67fe452fd0fd42fdad" translate="yes" xml:space="preserve">
          <source>Reads the next line from the compressed file into &lt;code&gt;$line&lt;/code&gt; .</source>
          <target state="translated">압축 파일에서 다음 행을 &lt;code&gt;$line&lt;/code&gt; 으로 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="20f7c17840218f6790c690d1641eb71144f6c802" translate="yes" xml:space="preserve">
          <source>Real elapsed time &quot;wallclock seconds&quot;.</source>
          <target state="translated">실제 경과 시간 &quot;wallclock seconds&quot;.</target>
        </trans-unit>
        <trans-unit id="aec77234378ed55865902c265252eec7cd62f206" translate="yes" xml:space="preserve">
          <source>Real number. For example &lt;code&gt;3.14&lt;/code&gt; , &lt;code&gt;-6.23E24&lt;/code&gt; and so on.</source>
          <target state="translated">실수 예를 들어 &lt;code&gt;3.14&lt;/code&gt; , &lt;code&gt;-6.23E24&lt;/code&gt; 등입니다.</target>
        </trans-unit>
        <trans-unit id="76f20337385d20643255669a22fe71db0ac20c35" translate="yes" xml:space="preserve">
          <source>Real numbers (floats and doubles) are in native machine format only. Due to the multiplicity of floating-point formats and the lack of a standard &quot;network&quot; representation for them, no facility for interchange has been made. This means that packed floating-point data written on one machine may not be readable on another, even if both use IEEE floating-point arithmetic (because the endianness of the memory representation is not part of the IEEE spec). See also &lt;a href=&quot;../perlport&quot;&gt;perlport&lt;/a&gt;.</source>
          <target state="translated">실수 (floats 및 doubles)는 기본 머신 형식입니다. 다수의 부동 소수점 형식과 표준 &quot;네트워크&quot;표현이 없기 때문에 교환 기능이 없습니다. 즉, 둘 다 IEEE 부동 소수점 산술을 사용하더라도 (메모리 표현의 엔디안이 IEEE 사양의 일부가 아니기 때문에) 한 시스템에서 작성된 팩형 부동 소수점 데이터는 다른 시스템에서 읽을 수 없습니다. &lt;a href=&quot;../perlport&quot;&gt;perlport&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="511f764d325082297dba12502ae4d85c90f1ad3d" translate="yes" xml:space="preserve">
          <source>Real numbers (floats and doubles) are in native machine format only. Due to the multiplicity of floating-point formats and the lack of a standard &quot;network&quot; representation for them, no facility for interchange has been made. This means that packed floating-point data written on one machine may not be readable on another, even if both use IEEE floating-point arithmetic (because the endianness of the memory representation is not part of the IEEE spec). See also &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt;.</source>
          <target state="translated">실수 (floats 및 doubles)는 기본 머신 형식입니다. 다수의 부동 소수점 형식과 표준 &quot;네트워크&quot;표현이 없기 때문에 교환 기능이 없습니다. 즉, 둘 다 IEEE 부동 소수점 산술을 사용하더라도 (메모리 표현의 엔디안이 IEEE 사양의 일부가 아니기 때문에) 한 시스템에서 작성된 팩형 부동 소수점 데이터는 다른 시스템에서 읽을 수 없습니다. &lt;a href=&quot;perlport&quot;&gt;perlport&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="345756ac5d37feff0f0546c1865e36b9fef67964" translate="yes" xml:space="preserve">
          <source>Real-valued asin and acos</source>
          <target state="translated">진정한 가치의 asin과 acos</target>
        </trans-unit>
        <trans-unit id="cabe4e85411c8ef34282f94190186b8b9fc58c2f" translate="yes" xml:space="preserve">
          <source>Reallocates the lexer buffer (&lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt;linestr&lt;/a&gt;) to accommodate at least</source>
          <target state="translated">렉서 버퍼 ( &lt;a href=&quot;#PL_parser-%3elinestr&quot;&gt;PL_parser-&amp;gt; linestr&lt;/a&gt; )를 재 할당하여 최소한 수용</target>
        </trans-unit>
        <trans-unit id="6938dd783f19a2f3db9807cf29082d79ed6cb489" translate="yes" xml:space="preserve">
          <source>Reallocation</source>
          <target state="translated">Reallocation</target>
        </trans-unit>
        <trans-unit id="4190f114778ebce2a04705901ceb6f8314011d5a" translate="yes" xml:space="preserve">
          <source>Really</source>
          <target state="translated">Really</target>
        </trans-unit>
        <trans-unit id="66af3b687388d0a216b97c12ae6eef0ac4e6badc" translate="yes" xml:space="preserve">
          <source>Really means this:</source>
          <target state="translated">정말 이것을 의미합니다 :</target>
        </trans-unit>
        <trans-unit id="811ca5b8b081194af2cb6112878b04c438c79ce4" translate="yes" xml:space="preserve">
          <source>Really really odious function to implement. Returns absolute name of file which would have &lt;code&gt;name&lt;/code&gt; if CWD were &lt;code&gt;dir&lt;/code&gt; . &lt;code&gt;Dir&lt;/code&gt; defaults to the current dir.</source>
          <target state="translated">구현하기 위해 정말 정말 이상한 기능입니다. CWD가 &lt;code&gt;dir&lt;/code&gt; 이면 &lt;code&gt;name&lt;/code&gt; 을 가진 파일의 절대 이름을 반환 합니다. &lt;code&gt;Dir&lt;/code&gt; 의 기본값은 현재 디렉토리입니다.</target>
        </trans-unit>
        <trans-unit id="8b1549347e4087fcd87d6c01881ced2f24ad2286" translate="yes" xml:space="preserve">
          <source>Rearranged slightly by Elizabeth Mattijsen &amp;lt;liz@dijkmat.nl&amp;lt;gt&amp;gt; to put less emphasis on yield().</source>
          <target state="translated">yield ()에 덜 중점을두기 위해 Elizabeth Mattijsen &amp;lt;liz@dijkmat.nl &amp;lt;gt&amp;gt;에 의해 약간 재정렬되었습니다.</target>
        </trans-unit>
        <trans-unit id="5c5705151cccd0f7888f60304194ae2c9cd9a3ff" translate="yes" xml:space="preserve">
          <source>Reasonable effort was made to make this module efficient. Nevertheless, changing the size of a record in the middle of a large file will always be fairly slow, because everything after the new record must be moved.</source>
          <target state="translated">이 모듈을 효율적으로 만들기 위해 합리적인 노력을 기울였습니다. 그럼에도 불구하고, 큰 파일의 중간에있는 레코드의 크기를 변경하면 새 레코드 이후의 모든 항목을 이동해야하기 때문에 항상 느리게 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="b3679c3f6c1d56464e9b8199c035d6cb387d84b7" translate="yes" xml:space="preserve">
          <source>Recall that the usual method of determining the type of scalar you have is to use &lt;code&gt;Sv*OK&lt;/code&gt; macros. Because a scalar can be both a number and a string, usually these macros will always return TRUE and calling the &lt;code&gt;Sv*V&lt;/code&gt; macros will do the appropriate conversion of string to integer/double or integer/double to string.</source>
          <target state="translated">스칼라 유형을 결정하는 일반적인 방법은 &lt;code&gt;Sv*OK&lt;/code&gt; 매크로 를 사용하는 것 입니다. 스칼라는 숫자와 문자열이 될 수 있으므로 일반적으로 이러한 매크로는 항상 TRUE를 반환하고 &lt;code&gt;Sv*V&lt;/code&gt; 매크로를 호출하면 문자열을 정수 / 이중 또는 정수 / 이중을 문자열로 적절히 변환합니다.</target>
        </trans-unit>
        <trans-unit id="ec663ccb44dacf5122cda8bcd99fadf939083b21" translate="yes" xml:space="preserve">
          <source>Recall that which of &lt;code&gt;yes-pattern&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-pattern&lt;/a&gt;&lt;/code&gt; actually matches is already determined. The ordering of the matches is the same as for the chosen subexpression.</source>
          <target state="translated">리콜의 것을 &lt;code&gt;yes-pattern&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;functions/no&quot;&gt;no-pattern&lt;/a&gt;&lt;/code&gt; 실제로 이미 결정과 일치하지 않습니다. 일치하는 순서는 선택한 하위 표현식의 순서와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="baa982fd4e6e1dcbe436dae28b9ec1d7a59a9b35" translate="yes" xml:space="preserve">
          <source>Receives a message on a socket. Attempts to receive LENGTH characters of data into variable SCALAR from the specified SOCKET filehandle. SCALAR will be grown or shrunk to the length actually read. Takes the same flags as the system call of the same name. Returns the address of the sender if SOCKET's protocol supports this; returns an empty string otherwise. If there's an error, returns the undefined value. This call is actually implemented in terms of recvfrom(2) system call. See &lt;a href=&quot;../perlipc#UDP%3a-Message-Passing&quot;&gt;UDP: Message Passing in perlipc&lt;/a&gt; for examples.</source>
          <target state="translated">소켓에서 메시지를받습니다. 지정된 SOCKET 파일 핸들에서 변수의 SCALAR로 LENGTH 자 데이터를 수신하려고 시도합니다. SCALAR는 실제로 읽은 길이만큼 커지거나 줄어 듭니다. 같은 이름의 시스템 호출과 같은 플래그를 사용합니다. SOCKET의 프로토콜이이를 지원하면 발신자의 주소를 반환합니다. 그렇지 않으면 빈 문자열을 반환합니다. 오류가 있으면 정의되지 않은 값을 반환합니다. 이 호출은 실제로 recvfrom (2) 시스템 호출 측면에서 구현됩니다. 예를 보려면 &lt;a href=&quot;../perlipc#UDP%3a-Message-Passing&quot;&gt;UDP : perlipc에서 메시지 전달을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f25c6e85b1574838eeb148ca7e9557ca09fab6e8" translate="yes" xml:space="preserve">
          <source>Receives a message on a socket. Attempts to receive LENGTH characters of data into variable SCALAR from the specified SOCKET filehandle. SCALAR will be grown or shrunk to the length actually read. Takes the same flags as the system call of the same name. Returns the address of the sender if SOCKET's protocol supports this; returns an empty string otherwise. If there's an error, returns the undefined value. This call is actually implemented in terms of recvfrom(2) system call. See &lt;a href=&quot;perlipc#UDP%3a-Message-Passing&quot;&gt;UDP: Message Passing in perlipc&lt;/a&gt; for examples.</source>
          <target state="translated">소켓에서 메시지를받습니다. 지정된 SOCKET 파일 핸들에서 변수의 SCALAR로 LENGTH 자 데이터를 수신하려고 시도합니다. SCALAR는 실제로 읽은 길이만큼 커지거나 줄어 듭니다. 같은 이름의 시스템 호출과 같은 플래그를 사용합니다. SOCKET의 프로토콜이이를 지원하면 발신자의 주소를 반환합니다. 그렇지 않으면 빈 문자열을 반환합니다. 오류가 있으면 정의되지 않은 값을 반환합니다. 이 호출은 실제로 recvfrom (2) 시스템 호출 측면에서 구현됩니다. 예를 보려면 &lt;a href=&quot;perlipc#UDP%3a-Message-Passing&quot;&gt;UDP : perlipc에서 메시지 전달을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb0fdbf19a5aad7a7c626acf2e170a45e9945622" translate="yes" xml:space="preserve">
          <source>Recent additions and current maintenance by Paul Evans, &amp;lt;leonerd@leonerd.org.uk&amp;gt;.</source>
          <target state="translated">Paul Evans의 최근 추가 및 현재 유지 관리 &amp;lt;leonerd@leonerd.org.uk&amp;gt;.</target>
        </trans-unit>
        <trans-unit id="34eaa50bdc006fd02951d60039d068fbfe490ffb" translate="yes" xml:space="preserve">
          <source>Recent changes in this release, especially incompatibilities</source>
          <target state="translated">이 릴리스의 최근 변경 사항, 특히 비 호환성</target>
        </trans-unit>
        <trans-unit id="ce746d3f125725bd67a16fc76426e418eb2553c2" translate="yes" xml:space="preserve">
          <source>Recent perl test suite is quite memory hungry. In addition to the comments above on memory limitations it is also worth checking for _CEE_RUNOPTS in your environment. Perl now has (in miniperlmain.c) a C #pragma to set CEE run options, but the environment variable wins.</source>
          <target state="translated">최근의 펄 테스트 스위트는 메모리가 많이 부족합니다. 메모리 제한에 대한 위의 주석 외에도 환경에서 _CEE_RUNOPTS를 확인하는 것이 좋습니다. Perl은 miniEElmain.c에서 C # 실행을 설정하여 CEE 실행 옵션을 설정했지만 환경 변수가 우선합니다.</target>
        </trans-unit>
        <trans-unit id="cd809045ecd1f6fec2192a41771410596322bb48" translate="yes" xml:space="preserve">
          <source>Recent versions of</source>
          <target state="translated">최신 버전</target>
        </trans-unit>
        <trans-unit id="895baf2f2b923b6b05ff0ce7fe4004e464717b54" translate="yes" xml:space="preserve">
          <source>Recent versions of Emacs come with a start file for making &lt;b&gt;emacs&lt;/b&gt; act like a syntax-directed editor that understands (some of) Perl's syntax. See &lt;a href=&quot;perlfaq3&quot;&gt;perlfaq3&lt;/a&gt;.</source>
          <target state="translated">최신 버전의 Emacs에는 &lt;b&gt;emacs가&lt;/b&gt; Perl의 구문을 이해하는 구문 지정 편집기처럼 작동하도록 하는 시작 파일 이 있습니다. &lt;a href=&quot;perlfaq3&quot;&gt;perlfaq3를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="73e20a3b8b070519bf410698695bcd5424fa0a92" translate="yes" xml:space="preserve">
          <source>Recent versions of MakeMaker will only install man pages on Unix-like operating systems.</source>
          <target state="translated">최신 버전의 MakeMaker는 Unix와 같은 운영 체제에만 매뉴얼 페이지를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="49d40e56ce8bbf7d9e92f3015c908f2c59ec4661" translate="yes" xml:space="preserve">
          <source>Recently someone mentioned to me that the Memoize module made his program run slower instead of faster. It turned out that he was memoizing the following function:</source>
          <target state="translated">최근 누군가 Memoize 모듈이 프로그램을 더 빨리 실행하는 대신 느리게 실행한다고 언급했습니다. 그가 다음 기능을 기억하고 있음이 밝혀졌습니다.</target>
        </trans-unit>
        <trans-unit id="8f7f4c997bb15ee0fbad757704fc3f421c86dab0" translate="yes" xml:space="preserve">
          <source>Recently, the plan has been to release a new version of Perl roughly every April, but getting the release right is more important than sticking rigidly to a calendar date, so the release date is somewhat flexible. The historical release dates can be viewed at &lt;a href=&quot;http://www.cpan.org/src/README.html&quot;&gt;http://www.cpan.org/src/README.html&lt;/a&gt;.</source>
          <target state="translated">최근에는 약 4 월마다 새로운 버전의 Perl을 출시 할 계획이지만 달력 날짜를 엄격하게 고수하는 것보다 릴리스를 올바르게하는 것이 중요하므로 릴리스 날짜가 다소 유연합니다. 출시 날짜는 &lt;a href=&quot;http://www.cpan.org/src/README.html&quot;&gt;http://www.cpan.org/src/README.html&lt;/a&gt; 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8eddef3b133a821ffbd00447eb75db2f14179551" translate="yes" xml:space="preserve">
          <source>Recipes for using Locale::Maketext</source>
          <target state="translated">Locale :: Maketext를 사용하기위한 레시피</target>
        </trans-unit>
        <trans-unit id="df930bc1bb6845ff74e797986a213fc6ce80656c" translate="yes" xml:space="preserve">
          <source>Recognise (or not) a number. The type of the number is returned (0 if unrecognised), otherwise it is a bit-ORed combination of IS_NUMBER_IN_UV, IS_NUMBER_GREATER_THAN_UV_MAX, IS_NUMBER_NOT_INT, IS_NUMBER_NEG, IS_NUMBER_INFINITY, IS_NUMBER_NAN (defined in perl.h).</source>
          <target state="translated">숫자를 인식하십시오. 숫자 유형이 반환되고 (인식되지 않으면 0), 그렇지 않으면 IS_NUMBER_IN_UV, IS_NUMBER_GREATER_THAN_UV_MAX, IS_NUMBER_NOT_INT, IS_NUMBER_NEG, IS_NUMBER_INFINITY, IS_NUMBER_NAN (perl.h에 정의)의 비트 OR 조합입니다.</target>
        </trans-unit>
        <trans-unit id="48f945d6ce4d07d534f69be50ec9c9e2fe4d3f0a" translate="yes" xml:space="preserve">
          <source>Recognized options:</source>
          <target state="translated">인식 된 옵션 :</target>
        </trans-unit>
        <trans-unit id="a0a67cdef15b0f52eba76cf8612a8ed9d2d8a77f" translate="yes" xml:space="preserve">
          <source>Recommended Options AIX 5.1/5.2/5.3/6.1 and 7.1 (32-bit)</source>
          <target state="translated">권장 옵션 AIX 5.1 / 5.2 / 5.3 / 6.1 및 7.1 (32 비트)</target>
        </trans-unit>
        <trans-unit id="f3d64f9e3ff3dcc4eefb2197e40d43309ca7e6a3" translate="yes" xml:space="preserve">
          <source>Recommended Options AIX 5.1/5.2/5.3/6.1 and 7.1 (64-bit)</source>
          <target state="translated">권장 옵션 AIX 5.1 / 5.2 / 5.3 / 6.1 및 7.1 (64 비트)</target>
        </trans-unit>
        <trans-unit id="b31d2b6abba1e2f8179abfdd96b832d8bddf377a" translate="yes" xml:space="preserve">
          <source>Recommended Options AIX 5.1/5.2/5.3/6.1 and 7.1 (threaded/32-bit)</source>
          <target state="translated">권장 옵션 AIX 5.1 / 5.2 / 5.3 / 6.1 및 7.1 (스레드 / 32 비트)</target>
        </trans-unit>
        <trans-unit id="c49f6af3c553991267db33b3d58f14d3e0aa9ee3" translate="yes" xml:space="preserve">
          <source>Recommended Options AIX 5.1/5.2/5.3/6.1 and 7.1 (threaded/64-bit)</source>
          <target state="translated">권장 옵션 AIX 5.1 / 5.2 / 5.3 / 6.1 및 7.1 (스레드 / 64 비트)</target>
        </trans-unit>
        <trans-unit id="49b95470925487b65a9afb790a266994f3a7ddad" translate="yes" xml:space="preserve">
          <source>Recommended Use</source>
          <target state="translated">추천 된 사용</target>
        </trans-unit>
        <trans-unit id="f182056a2720c2953d88f0e5cd69ae2848c028f4" translate="yes" xml:space="preserve">
          <source>Record locking with fcntl()? Then the module might support an undo log and get real transactions. What a tour de force that would be.</source>
          <target state="translated">fcntl ()로 레코드 잠금? 그러면 모듈이 실행 취소 로그를 지원하고 실제 트랜잭션을 얻을 수 있습니다. 투어가 얼마나 힘이 될까요?</target>
        </trans-unit>
        <trans-unit id="f1e619d50396ad4502ee425b4e5f3f5650d0bbc5" translate="yes" xml:space="preserve">
          <source>Records read from the tied array do not have the record separator string on the end; this is to allow</source>
          <target state="translated">연결된 배열에서 읽은 레코드의 끝에 레코드 구분자 문자열이 없습니다. 이것은 허용하는 것입니다</target>
        </trans-unit>
        <trans-unit id="da9b3804e9ca9a33e54f8c3271667fff796fffbf" translate="yes" xml:space="preserve">
          <source>Records read in from the file are cached, to avoid having to re-read them repeatedly. If you read the same record twice, the first time it will be stored in memory, and the second time it will be fetched from the</source>
          <target state="translated">파일에서 읽은 레코드는 반복해서 다시 읽을 필요가 없도록 캐시됩니다. 동일한 레코드를 두 번 읽는 경우 처음으로 메모리에 저장되고 두 번째로 레코드에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7b78cb40d570e3f60ca3b4da5f634f6d92a8fb93" translate="yes" xml:space="preserve">
          <source>Recurse into subdirectories specified in podpath (default behaviour).</source>
          <target state="translated">podpath에 지정된 하위 디렉토리로 재귀합니다 (기본 동작).</target>
        </trans-unit>
        <trans-unit id="d3a3445b075ca5a8f04946e660b954c88e2059b2" translate="yes" xml:space="preserve">
          <source>Recurse to a named subpattern. Identical to &lt;code&gt;(?&lt;i&gt;PARNO&lt;/i&gt;)&lt;/code&gt; except that the parenthesis to recurse to is determined by name. If multiple parentheses have the same name, then it recurses to the leftmost.</source>
          <target state="translated">명명 된 하위 패턴으로 반복합니다. 동일 &lt;code&gt;(?&lt;i&gt;PARNO&lt;/i&gt;)&lt;/code&gt; 괄호는 재귀 것을 제외하고는 이름에 의해 결정한다. 여러 괄호의 이름이 같은 경우 가장 왼쪽으로 반복됩니다.</target>
        </trans-unit>
        <trans-unit id="8f1975a7def41720ec9c94792bc4fc65a7c012e4" translate="yes" xml:space="preserve">
          <source>Recursion</source>
          <target state="translated">Recursion</target>
        </trans-unit>
        <trans-unit id="246ee04b92279ada2c0b85fda5857fb7391b5be9" translate="yes" xml:space="preserve">
          <source>Recursive patterns</source>
          <target state="translated">재귀 패턴</target>
        </trans-unit>
        <trans-unit id="d7f3d9dfa25161f3fe4649ab6fce65682b6e58a7" translate="yes" xml:space="preserve">
          <source>Recursive search.</source>
          <target state="translated">재귀 검색</target>
        </trans-unit>
        <trans-unit id="97820f2ec75d21b98b64fe84aa408e0ba63fd922" translate="yes" xml:space="preserve">
          <source>Recursive subpattern. Treat the contents of a given capture buffer in the current pattern as an independent subpattern and attempt to match it at the current position in the string. Information about capture state from the caller for things like backreferences is available to the subpattern, but capture buffers set by the subpattern are not visible to the caller.</source>
          <target state="translated">재귀 하위 패턴 현재 패턴의 지정된 캡처 버퍼의 컨텐츠를 독립 서브 패턴으로 취급하고 문자열의 현재 위치에서 일치 시키십시오. 역 참조와 같은 항목에 대한 호출자의 캡처 상태에 대한 정보는 서브 패턴에 사용 가능하지만 서브 패턴에 의해 설정된 캡처 버퍼는 호출자에게 보이지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f516457f12f560502881547f1fc2790272897352" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;clean&lt;/code&gt; method on all items contained in the bundle.</source>
          <target state="translated">번들에 포함 된 모든 항목에 대해 &lt;code&gt;clean&lt;/code&gt; 메소드를 반복적으로 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="8a9c50c69ca21ecd2a0997b67c05e3cb6d8e1a38" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;get&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">번들에 포함 된 모든 항목에 대해 &lt;code&gt;get&lt;/code&gt; 메소드를 반복적으로 실행합니다.</target>
        </trans-unit>
        <trans-unit id="7d5a98448c254c7fce0f1fe10cc12f05a5008e72" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;install&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">번들에 포함 된 모든 항목 에서 &lt;code&gt;install&lt;/code&gt; 방법을 반복적으로 실행</target>
        </trans-unit>
        <trans-unit id="0d569a98c2caf9322c96ff9458f79ae70190174a" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;make&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">번들에 포함 된 모든 항목에 대해 &lt;code&gt;make&lt;/code&gt; 메소드를 반복적으로 실행합니다.</target>
        </trans-unit>
        <trans-unit id="c0a4dc899fe7c2753be17aee552394719cd44ec2" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;readme&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">번들에 포함 된 모든 항목에 대해 &lt;code&gt;readme&lt;/code&gt; 메소드를 반복적으로 실행합니다.</target>
        </trans-unit>
        <trans-unit id="7e62e1ec8c6026586ce9a911ace00bab6074bea8" translate="yes" xml:space="preserve">
          <source>Recursively runs the &lt;code&gt;test&lt;/code&gt; method on all items contained in the bundle</source>
          <target state="translated">번들에 포함 된 모든 항목에 대해 &lt;code&gt;test&lt;/code&gt; 방법을 반복적으로 실행</target>
        </trans-unit>
        <trans-unit id="56d7296135bfeab6ee6d5a820ce1e8dc27ad1624" translate="yes" xml:space="preserve">
          <source>RedHatism for &lt;code&gt;PREREQ_PRINT&lt;/code&gt; . The output format is different, though:</source>
          <target state="translated">대한 RedHatism &lt;code&gt;PREREQ_PRINT&lt;/code&gt; . 그러나 출력 형식은 다릅니다.</target>
        </trans-unit>
        <trans-unit id="ff05cca01ccf8ffdeed27cada2b61209b9002a1b" translate="yes" xml:space="preserve">
          <source>Redeclaration of &quot;sendpath&quot; with a different storage class specifier</source>
          <target state="translated">다른 스토리지 클래스 지정자를 사용한 &quot;sendpath&quot;의 재 선언</target>
        </trans-unit>
        <trans-unit id="b77aad5fb24921ef76ac8f3e500ed93fddae8f2a" translate="yes" xml:space="preserve">
          <source>Redirection</source>
          <target state="translated">Redirection</target>
        </trans-unit>
        <trans-unit id="c973a7f5a8278a6641ee3f8e956a635bbcd7ebfa" translate="yes" xml:space="preserve">
          <source>Redo a previous command (defaults to the previous command).</source>
          <target state="translated">이전 명령을 다시 실행하십시오 (기본값은 이전 명령).</target>
        </trans-unit>
        <trans-unit id="8b58a997692ccbb4a9f3f4fa304e4fe3018df980" translate="yes" xml:space="preserve">
          <source>Redo last command that started with pattern. See &lt;code&gt;o recallCommand&lt;/code&gt; , too.</source>
          <target state="translated">패턴으로 시작한 마지막 명령을 다시 실행하십시오. &lt;code&gt;o recallCommand&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a4bb08e2752cb1397dda0f71ef9cf4a2939b7a5e" translate="yes" xml:space="preserve">
          <source>Redo number'th previous command.</source>
          <target state="translated">이전 명령의 번호를 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="1ffb4e2ba37698b18269edd6a43127d0871bbd89" translate="yes" xml:space="preserve">
          <source>Reduce the number to the shortest form. This routine is called automatically whenever it is needed.</source>
          <target state="translated">숫자를 가장 짧은 형식으로 줄이십시오. 이 루틴은 필요할 때마다 자동으로 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="501beaa6a05572fe80fbb3fbd41c4a5535a6ef36" translate="yes" xml:space="preserve">
          <source>Reduced to a standard form to facilitate comparison.</source>
          <target state="translated">비교를 용이하게하기 위해 표준 형식으로 축소되었습니다.</target>
        </trans-unit>
        <trans-unit id="f00e8d287f10014aba639a418b99c2272caeffd5" translate="yes" xml:space="preserve">
          <source>Reduces &lt;code&gt;@list&lt;/code&gt; by calling &lt;code&gt;BLOCK&lt;/code&gt; in a scalar context multiple times, setting &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; each time. The first call will be with &lt;code&gt;$a&lt;/code&gt; and &lt;code&gt;$b&lt;/code&gt; set to the first two elements of the list, subsequent calls will be done by setting &lt;code&gt;$a&lt;/code&gt; to the result of the previous call and &lt;code&gt;$b&lt;/code&gt; to the next element in the list.</source>
          <target state="translated">감소 &lt;code&gt;@list&lt;/code&gt; 를 호출하여 &lt;code&gt;BLOCK&lt;/code&gt; 설정, 스칼라 문맥 여러 번에 &lt;code&gt;$a&lt;/code&gt; 와 &lt;code&gt;$b&lt;/code&gt; 할 때마다. 첫 번째 호출은 &lt;code&gt;$a&lt;/code&gt; 및 &lt;code&gt;$b&lt;/code&gt; 가 목록의 처음 두 요소로 설정되고 후속 호출은 &lt;code&gt;$a&lt;/code&gt; 를 이전 호출의 결과 로 설정 하고 &lt;code&gt;$b&lt;/code&gt; 를 목록의 다음 요소로 설정하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="abb09f24d1bc63bc502ea1307f407f20e427bdf6" translate="yes" xml:space="preserve">
          <source>Reenable a member of the XOP which has been disabled.</source>
          <target state="translated">비활성화 된 XOP 멤버를 다시 활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="a01849f5926530cff0486291b0913ad6097a74e9" translate="yes" xml:space="preserve">
          <source>Reenables overloading in the current lexical scope.</source>
          <target state="translated">현재 어휘 범위에서 과부하를 다시 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="e39fb607bec457bbec70d0b4d2e6890866daaa98" translate="yes" xml:space="preserve">
          <source>Reenables overloading only for specific ops in the current lexical scope.</source>
          <target state="translated">현재 어휘 범위의 특정 작업에 대해서만 오버로드를 다시 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="49241d1a0c34625fcb3a1e12e5c0773fb1c8acdc" translate="yes" xml:space="preserve">
          <source>Ref to array of *.c file names. Initialised from a directory scan and the values portion of the XS attribute hash. This is not currently used by MakeMaker but may be handy in Makefile.PLs.</source>
          <target state="translated">* .c 파일 이름의 배열을 참조하십시오. 디렉토리 스캔 및 XS 속성 해시의 값 부분에서 초기화되었습니다. 이것은 현재 MakeMaker에서 사용되지 않지만 Makefile.PL에서 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f81efa83fe1fc38e8187073f2e0f52f064e535b" translate="yes" xml:space="preserve">
          <source>Ref to array of *.h file names. Similar to C.</source>
          <target state="translated">* .h 파일 이름의 배열을 참조하십시오. C와 유사</target>
        </trans-unit>
        <trans-unit id="9d8fd40f71bcbcbe2653e07a1c5b85da1cb0996a" translate="yes" xml:space="preserve">
          <source>Ref to array of executable files. The files will be copied to the INST_SCRIPT directory. Make realclean will delete them from there again.</source>
          <target state="translated">실행 파일의 배열을 참조하십시오. 파일이 INST_SCRIPT 디렉토리로 복사됩니다. realclean을 사용하면 다시 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="d5aae7a215c3c723e9edaabfefe238e519090018" translate="yes" xml:space="preserve">
          <source>Ref to array of subdirectories containing Makefile.PLs e.g. ['sdbm'] in ext/SDBM_File</source>
          <target state="translated">ext / SDBM_File의 [ 'sdbm']과 같이 Makefile.PL을 포함하는 서브 디렉토리의 배열을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b3246e33411973b519919af08976977fb427aefe" translate="yes" xml:space="preserve">
          <source>Ref to array of subdirectories containing library files. Defaults to [ 'lib', $(BASEEXT) ]. The directories will be scanned and</source>
          <target state="translated">라이브러리 파일을 포함하는 하위 디렉토리의 배열을 참조하십시오. 기본값은 [ 'lib', $ (BASEEXT)]입니다. 디렉토리가 스캔되고</target>
        </trans-unit>
        <trans-unit id="f8aa887f63e79a2bb90542b3f76da6c5f5bbc259" translate="yes" xml:space="preserve">
          <source>Ref to array of typemap file names. Use this when the typemaps are in some directory other than the current directory or when they are not named &lt;b&gt;typemap&lt;/b&gt;. The last typemap in the list takes precedence. A typemap in the current directory has highest precedence, even if it isn't listed in TYPEMAPS. The default system typemap has lowest precedence.</source>
          <target state="translated">타입 맵 파일 이름의 배열을 참조하십시오. 타입 맵이 현재 디렉토리가 아닌 다른 디렉토리에 있거나 이름이 &lt;b&gt;typemap&lt;/b&gt; 이 아닌 경우에 이것을 사용하십시오 . 목록의 마지막 유형 맵이 우선합니다. TYPEMAPS에 나열되어 있지 않더라도 현재 디렉토리의 유형 맵이 가장 높은 우선 순위를 갖습니다. 기본 시스템 유형 맵이 우선 순위가 가장 낮습니다.</target>
        </trans-unit>
        <trans-unit id="daea75a6a04da98b5df7c9f5a64eefec91ec11f6" translate="yes" xml:space="preserve">
          <source>Refer to &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt; for details on writing typemaps.</source>
          <target state="translated">타입 맵 작성에 대한 자세한 내용은 &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a36238bcb820ac10d7fd2ebcaada73b3581fba1" translate="yes" xml:space="preserve">
          <source>Refer to the</source>
          <target state="translated">참조</target>
        </trans-unit>
        <trans-unit id="9b040ece9e8bbd30990175a9f5306428cd1d82bf" translate="yes" xml:space="preserve">
          <source>Refer to the LWP::UserAgent manpage for more details.</source>
          <target state="translated">자세한 내용은 LWP :: UserAgent 맨 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9432d6c3a3648b15dc0cea89b8e3582be2f2c693" translate="yes" xml:space="preserve">
          <source>Refer to the documentation in zlib.h for instructions on how to fly &lt;code&gt;deflateTune&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;deflateTune&lt;/code&gt; 을 비행하는 방법에 대한 지침은 zlib.h의 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="272eaac3a581c717e2c1bd7c98e040f99bd3050b" translate="yes" xml:space="preserve">
          <source>Reference Counts and Mortality</source>
          <target state="translated">참조 횟수 및 사망률</target>
        </trans-unit>
        <trans-unit id="6cc196b03aa468ab5cdd3b85dfb4b8e2460c2497" translate="yes" xml:space="preserve">
          <source>Reference Manual</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6ba86e068ebcbb24f4c6f6a21a664050593544" translate="yes" xml:space="preserve">
          <source>Reference to an array of search directories. These are searched in order before looking in &lt;code&gt;@INC&lt;/code&gt; (if &lt;b&gt;-inc&lt;/b&gt;). Current directory is used if none are specified.</source>
          <target state="translated">검색 디렉토리 배열에 대한 참조 &lt;code&gt;@INC&lt;/code&gt; (if &lt;b&gt;-inc&lt;/b&gt; )를보기 전에 순서대로 검색됩니다 . 지정되지 않은 경우 현재 디렉토리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5d20d0fee3b91643dd8d272ac33d01ca95179d82" translate="yes" xml:space="preserve">
          <source>References</source>
          <target state="translated">References</target>
        </trans-unit>
        <trans-unit id="a0dc93bc9a996d0e87ee1869448bc7db3c222320" translate="yes" xml:space="preserve">
          <source>References are a special type of scalar that point to other data types (including other references).</source>
          <target state="translated">참조는 다른 데이터 유형 (다른 참조 포함)을 가리키는 특수한 유형의 스칼라입니다.</target>
        </trans-unit>
        <trans-unit id="50974befcb2bfc7d0ac736bc11229b81ee3eaf79" translate="yes" xml:space="preserve">
          <source>References are also used to support object-oriented programming. In perl's OO lexicon, an object is simply a reference that has been blessed into a package (or class). Once blessed, the programmer may now use the reference to access the various methods in the class.</source>
          <target state="translated">참조는 객체 지향 프로그래밍을 지원하는 데에도 사용됩니다. 펄의 OO 사전에서 객체는 단순히 패키지 (또는 클래스)에 축복 된 참조입니다. 축복을받은 프로그래머는 이제 참조를 사용하여 수업의 다양한 방법에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f023cf599a124b750291900889f7d314ec9caf2" translate="yes" xml:space="preserve">
          <source>References are documented in &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; and &lt;a href=&quot;perlreftut&quot;&gt;perlreftut&lt;/a&gt;. Examples of complex data structures are given in &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; and &lt;a href=&quot;perllol&quot;&gt;perllol&lt;/a&gt;. Examples of structures and object-oriented classes are in &lt;a href=&quot;perlootut&quot;&gt;perlootut&lt;/a&gt;.</source>
          <target state="translated">참조는 &lt;a href=&quot;perlref&quot;&gt;perlref&lt;/a&gt; 및 &lt;a href=&quot;perlreftut&quot;&gt;perlreftut에&lt;/a&gt; 문서화되어 있습니다. 복잡한 데이터 구조의 예는 &lt;a href=&quot;perldsc&quot;&gt;perldsc&lt;/a&gt; 및 &lt;a href=&quot;perllol&quot;&gt;perllol에 제공&lt;/a&gt; 됩니다. 구조와 객체 지향 클래스의 예는 &lt;a href=&quot;perlootut&quot;&gt;perlootut에&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="92593a68da730f578acc31005d526d5997c8f515" translate="yes" xml:space="preserve">
          <source>References are easy to use in Perl. There is just one overriding principle: in general, Perl does no implicit referencing or dereferencing. When a scalar is holding a reference, it always behaves as a simple scalar. It doesn't magically start being an array or hash or subroutine; you have to tell it explicitly to do so, by dereferencing it.</source>
          <target state="translated">Perl에서는 쉽게 참조 할 수 있습니다. 대체 원칙은 하나뿐입니다. 일반적으로 Perl은 암시 적 참조 또는 역 참조를 수행하지 않습니다. 스칼라가 참조를 보유 할 때 항상 스칼라처럼 동작합니다. 마술처럼 배열이나 해시 또는 서브 루틴이되기 시작하지는 않습니다. 역 참조함으로써 명시 적으로 지시해야합니다.</target>
        </trans-unit>
        <trans-unit id="1768d90c9296a75485266d150073e447cb77523f" translate="yes" xml:space="preserve">
          <source>References are often returned by special subroutines called constructors. Perl objects are just references to a special type of object that happens to know which package it's associated with. Constructors are just special subroutines that know how to create that association. They do so by starting with an ordinary reference, and it remains an ordinary reference even while it's also being an object. Constructors are often named &lt;code&gt;new()&lt;/code&gt; . You</source>
          <target state="translated">참조는 종종 생성자라는 특수 서브 루틴에 의해 리턴됩니다. Perl 객체는 패키지와 관련된 특별한 유형의 객체에 대한 참조 일뿐입니다. 생성자는 해당 연관을 작성하는 방법을 알고있는 특수 서브 루틴입니다. 그것들은 보통의 참조로 시작함으로써 이루어지며, 그것이 객체 인 동안에도 일반적인 참조로 남아 있습니다. 생성자는 종종 &lt;code&gt;new()&lt;/code&gt; 명명 됩니다. 당신</target>
        </trans-unit>
        <trans-unit id="3d3bfc78ea450f4a47c9b2b5d8626d9e79a01328" translate="yes" xml:space="preserve">
          <source>References can be created in several ways.</source>
          <target state="translated">참조는 여러 가지 방법으로 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9b0a1db4852d1281bb8500fdd9246c477d9a5c6" translate="yes" xml:space="preserve">
          <source>References in Perl are like names for arrays and hashes. They're Perl's private, internal names, so you can be sure they're unambiguous. Unlike &quot;Barack Obama&quot;, a reference only refers to one thing, and you always know what it refers to. If you have a reference to an array, you can recover the entire array from it. If you have a reference to a hash, you can recover the entire hash. But the reference is still an easy, compact scalar value.</source>
          <target state="translated">Perl의 참조는 배열 및 해시의 이름과 같습니다. 이들은 Perl의 비공개 내부 이름이므로 모호하지 않은지 확인할 수 있습니다. &quot;바락 오바마&quot;와 달리, 참조는 한 가지만을 의미하며, 그 의미를 항상 알고 있습니다. 배열에 대한 참조가 있으면 전체 배열을 복구 할 수 있습니다. 해시에 대한 참조가 있으면 전체 해시를 복구 할 수 있습니다. 그러나 참조는 여전히 쉽고 컴팩트 한 스칼라 값입니다.</target>
        </trans-unit>
        <trans-unit id="acbfdecb2d2391d9c8e96eacd3749584f501d4a2" translate="yes" xml:space="preserve">
          <source>References of the appropriate type can spring into existence if you dereference them in a context that assumes they exist. Because we haven't talked about dereferencing yet, we can't show you any examples yet.</source>
          <target state="translated">적절한 유형의 참조는 존재한다고 가정하는 컨텍스트에서 참조를 역 참조하면 존재하게 될 수 있습니다. 아직 역 참조에 대해 이야기하지 않았으므로 아직 예제를 보여줄 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="aeef9819bba63f30920ae81ea30d63fa3edcd4c4" translate="yes" xml:space="preserve">
          <source>References to other programs or functions are normally in the form of man page references so that cross-referencing tools can provide the user with links and the like. It's possible to overdo this, though, so be careful not to clutter your documentation with too much markup. References to other programs that are not given as man page references should be enclosed in B&amp;lt;&amp;gt;.</source>
          <target state="translated">다른 프로그램 또는 기능에 대한 참조는 일반적으로 매뉴얼 페이지 참조의 형태로되어 상호 참조 도구가 사용자에게 링크 등을 제공 할 수 있습니다. 그러나이 작업을 과도하게 수행 할 수 있으므로 너무 많은 마크 업으로 문서를 어지럽히 지 않도록주의하십시오. 매뉴얼 페이지 참조로 제공되지 않은 다른 프로그램에 대한 참조는 B &amp;lt;&amp;gt;로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="d09c42c7f2b995dd79a331f98e9794ecbbde7748" translate="yes" xml:space="preserve">
          <source>Referencing</source>
          <target state="translated">Referencing</target>
        </trans-unit>
        <trans-unit id="f870d7a74093b8fc74dfb143b0624f7654233dcd" translate="yes" xml:space="preserve">
          <source>Refetch the stack pointer. Used after a callback. See &lt;a href=&quot;perlcall&quot;&gt;perlcall&lt;/a&gt;.</source>
          <target state="translated">스택 포인터를 다시 가져옵니다. 콜백 후에 사용됩니다. &lt;a href=&quot;perlcall&quot;&gt;perlcall을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0571dd6ea81c78a99a9749cc8a5e39a6b2c57a92" translate="yes" xml:space="preserve">
          <source>Reflect the functionality of the module, not the implementation.</source>
          <target state="translated">구현이 아닌 모듈의 기능을 반영하십시오.</target>
        </trans-unit>
        <trans-unit id="280f134f03fe31eaa265a45b3d43b18db4aca4fa" translate="yes" xml:space="preserve">
          <source>Reflects certain Unicode settings of Perl. See &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; documentation for the &lt;code&gt;-C&lt;/code&gt; switch for more information about the possible values.</source>
          <target state="translated">Perl의 특정 유니 코드 설정을 반영합니다. 가능한 값에 대한 자세한 정보 는 &lt;code&gt;-C&lt;/code&gt; 스위치의 &lt;a href=&quot;perlrun&quot;&gt;perlrun&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="514989ce439f0131fd7d7ae03128f36f34fefe59" translate="yes" xml:space="preserve">
          <source>Reflects if taint mode is on or off. 1 for on (the program was run with &lt;b&gt;-T&lt;/b&gt;), 0 for off, -1 when only taint warnings are enabled (i.e. with &lt;b&gt;-t&lt;/b&gt; or &lt;b&gt;-TU&lt;/b&gt;).</source>
          <target state="translated">오염 모드가 켜져 있는지 여부를 나타냅니다. 오염 경고 만 활성화 된 경우 (즉, &lt;b&gt;-t&lt;/b&gt; 또는 &lt;b&gt;-TU 사용&lt;/b&gt; ) -1 (프로그램은 &lt;b&gt;-T&lt;/b&gt; 로 실행 ), 0은 해제, -1 입니다.&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="6312ec67c8b0215a01635346ff23ce68e5ec5799" translate="yes" xml:space="preserve">
          <source>Regarding aesthetics of code lay out, about the only thing Larry cares strongly about is that the closing curly bracket of a multi-line BLOCK should line up with the keyword that started the construct. Beyond that, he has other preferences that aren't so strong:</source>
          <target state="translated">코드의 미학에 관해서는 Larry가 강하게 신경 쓰는 유일한 점은 여러 줄 블록의 닫는 중괄호가 구문을 시작한 키워드와 일치해야한다는 것입니다. 그 외에도 그는 그렇게 강력하지 않은 다른 환경 설정을 가지고 있습니다.</target>
        </trans-unit>
        <trans-unit id="2790589b45378975738284e2ca51f4e9c6e7a880" translate="yes" xml:space="preserve">
          <source>Regarding precedence, the filetest operators, like &lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;-M&lt;/code&gt; , etc. are treated like named unary operators, but they don't follow this functional parenthesis rule. That means, for example, that &lt;code&gt;-f($file).&quot;.bak&quot;&lt;/code&gt; is equivalent to &lt;code&gt;-f &quot;$file.bak&quot;&lt;/code&gt; .</source>
          <target state="translated">우선 순위와 관련하여 &lt;code&gt;-f&lt;/code&gt; , &lt;code&gt;-M&lt;/code&gt; 등과 같은 파일 테스트 연산자 는 명명 된 단항 연산자처럼 취급되지만이 함수 괄호 규칙을 따르지 않습니다. 예를 들어 &lt;code&gt;-f($file).&quot;.bak&quot;&lt;/code&gt; 는 &lt;code&gt;-f &quot;$file.bak&quot;&lt;/code&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="06476efc9400736e9db491e3b8f7668fdea23d10" translate="yes" xml:space="preserve">
          <source>Regardless of calling context, calling &lt;code&gt;survey&lt;/code&gt; saves its results in its &lt;code&gt;name2path&lt;/code&gt; and &lt;code&gt;path2name&lt;/code&gt; attributes.</source>
          <target state="translated">호출 컨텍스트에 관계없이 호출 &lt;code&gt;survey&lt;/code&gt; 은 결과를 &lt;code&gt;name2path&lt;/code&gt; 및 &lt;code&gt;path2name&lt;/code&gt; 속성 에 저장 합니다.</target>
        </trans-unit>
        <trans-unit id="cb2078f0558afa439d00e67d405247b9ba4edc0b" translate="yes" xml:space="preserve">
          <source>Regardless of the machine architecture on which it runs, the example above should print the following table:</source>
          <target state="translated">실행되는 머신 아키텍처에 관계없이 위의 예는 다음 표를 인쇄해야합니다.</target>
        </trans-unit>
        <trans-unit id="32cd324f16f0c0c9cdd19f6acf5633153c13722a" translate="yes" xml:space="preserve">
          <source>Regardless of the package in which it is declared, if a lexical variable is ascribed an attribute, the handler that is invoked is the one belonging to the package to which it is typed. For example, the following declarations:</source>
          <target state="translated">선언 된 패키지에 관계없이 어휘 변수가 속성에 속하면 호출 된 핸들러는 입력 된 패키지에 속하는 핸들러입니다. 예를 들어 다음과 같은 선언입니다.</target>
        </trans-unit>
        <trans-unit id="b769c472f18cb9e8ca1c53a6014fda42b17a5a44" translate="yes" xml:space="preserve">
          <source>Regex examples:</source>
          <target state="translated">정규식 예 :</target>
        </trans-unit>
        <trans-unit id="d215aa4b8eb14ea4cfa03d5ffdb7cdb3f3dbaea8" translate="yes" xml:space="preserve">
          <source>Regex options may be placed on the end (&lt;code&gt;'/expected/i'&lt;/code&gt; ).</source>
          <target state="translated">정규식 옵션은 끝에 배치 할 수 있습니다 ( &lt;code&gt;'/expected/i'&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d956a551e67ebad4724cd69086824a44b7bd001d" translate="yes" xml:space="preserve">
          <source>Regexes are treated mostly as double-quoted strings, so variable substitution works:</source>
          <target state="translated">정규 표현식은 대부분 큰 따옴표로 묶은 문자열로 취급되므로 변수 대체가 작동합니다.</target>
        </trans-unit>
        <trans-unit id="cfae4e7b72fa21099236ad796e16fa7db3a6c71a" translate="yes" xml:space="preserve">
          <source>Regexes must match a part of the string</source>
          <target state="translated">정규 표현식은 문자열의 일부와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="338cff56c80a479d055611c7247bcf9a164e1505" translate="yes" xml:space="preserve">
          <source>Regexp Quote-Like Operators</source>
          <target state="translated">정규식 견적 유사 연산자</target>
        </trans-unit>
        <trans-unit id="4c193fd7834dd4e2f2d0c3df7459dd9b6d0cff66" translate="yes" xml:space="preserve">
          <source>Regexp-like quote. See &lt;a href=&quot;../perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">정규 표현식과 같은 인용문. &lt;a href=&quot;../perlop#Regexp-Quote-Like-Operators&quot;&gt;perlop의 정규 표현식 인용 유사 연산자를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ca599ed3fe6de770a51caf60b0f6908ce450eaf" translate="yes" xml:space="preserve">
          <source>Regexp-like quote. See &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;Regexp Quote-Like Operators in perlop&lt;/a&gt;.</source>
          <target state="translated">정규 표현식과 같은 인용문. &lt;a href=&quot;perlop#Regexp-Quote-Like-Operators&quot;&gt;perlop의 정규 표현식 인용 유사 연산자를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6d463a4b21b2664cb244b9f40e3a444f1afd09cd" translate="yes" xml:space="preserve">
          <source>Register a closure to be called when this job is destroyed. The callback will be passed the &lt;code&gt;TAP::Parser::Scheduler::Job&lt;/code&gt; object as it's only argument.</source>
          <target state="translated">이 작업이 파괴 될 때 호출 할 클로저를 등록하십시오. 콜백은 인수 일 뿐이 므로 &lt;code&gt;TAP::Parser::Scheduler::Job&lt;/code&gt; 객체에 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="32768c69ecf0dff5e646d0bfd71db75d2879eebb" translate="yes" xml:space="preserve">
          <source>Register a custom op. See &lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;Custom Operators in perlguts&lt;/a&gt;.</source>
          <target state="translated">사용자 지정 op를 등록하십시오. &lt;a href=&quot;perlguts#Custom-Operators&quot;&gt;perlguts의 사용자 정의 연산자를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b5424e4e93ac098b5e8beea3526819cfd99f58b1" translate="yes" xml:space="preserve">
          <source>Register a set of hooks to be called when the Perl lexical scope changes at compile time. See &lt;a href=&quot;perlguts#Compile-time-scope-hooks&quot;&gt;Compile-time scope hooks in perlguts&lt;/a&gt;.</source>
          <target state="translated">컴파일시 Perl 어휘 범위가 변경 될 때 호출 될 후크 세트를 등록하십시오. &lt;a href=&quot;perlguts#Compile-time-scope-hooks&quot;&gt;perlguts의 컴파일 시간 범위 후크를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="df9ad37004c27557ab53b912f7280b8fb9962ace" translate="yes" xml:space="preserve">
          <source>Registered CPAN sites</source>
          <target state="translated">등록 된 CPAN 사이트</target>
        </trans-unit>
        <trans-unit id="7877ae3d518e5a3ac907b1ca5135e66d3b9d8241" translate="yes" xml:space="preserve">
          <source>Registers a custom mro plugin. See &lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt; for details.</source>
          <target state="translated">커스텀 mro 플러그인을 등록합니다. 자세한 내용은 &lt;a href=&quot;perlmroapi&quot;&gt;perlmroapi&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d7129f516a29ae1b88f95a70e0ada41004cf9e1d" translate="yes" xml:space="preserve">
          <source>Registers a new &lt;a href=&quot;sourcehandler&quot;&gt;TAP::Parser::SourceHandler&lt;/a&gt; with this factory.</source>
          <target state="translated">이 팩토리에 새로운 &lt;a href=&quot;sourcehandler&quot;&gt;TAP :: Parser :: SourceHandler&lt;/a&gt; 를 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="a2077a060ced5f4acb1e56596b98c0e4478aa005" translate="yes" xml:space="preserve">
          <source>Registers call-backs to wait for user input (i.e., during &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; method). This supersedes tkRunning.</source>
          <target state="translated">콜백을 등록하여 사용자 입력을 기다립니다 (예 : &lt;code&gt;&lt;a href=&quot;../functions/readline&quot;&gt;readline&lt;/a&gt;&lt;/code&gt; 방법). 이것은 tkRunning을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="e27b06aab15f95234c4446552363f21ecaed6e8c" translate="yes" xml:space="preserve">
          <source>Registry also implies thread support. When a new thread is created, all references are replaced with new ones, including all objects. If a hash uses the reference address of an object as a key, that connection would be broken. With a registered object, its id will be updated in all hashes registered with it.</source>
          <target state="translated">레지스트리는 또한 스레드 지원을 의미합니다. 새 스레드가 작성되면 모든 참조가 모든 오브젝트를 포함하여 새 참조로 바뀝니다. 해시가 객체의 참조 주소를 키로 사용하는 경우 해당 연결이 끊어집니다. 등록 된 객체를 사용하면 등록 된 모든 해시에서 해당 ID가 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="4bacb90045e51515a8cca4133e12bf8882319e99" translate="yes" xml:space="preserve">
          <source>Regops</source>
          <target state="translated">Regops</target>
        </trans-unit>
        <trans-unit id="ab140354a34bd045ff52d42f722acc1c4ffada22" translate="yes" xml:space="preserve">
          <source>Regular Expressions</source>
          <target state="translated">정규식</target>
        </trans-unit>
        <trans-unit id="0fbc4a31dd22babd111133268afa4401e34123ac" translate="yes" xml:space="preserve">
          <source>Regular expression checks for safe file names or mail addresses using &lt;code&gt;\w&lt;/code&gt; may be spoofed by an &lt;code&gt;LC_CTYPE&lt;/code&gt; locale that claims that characters such as &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; and &lt;code&gt;&quot;|&quot;&lt;/code&gt; are alphanumeric.</source>
          <target state="translated">&lt;code&gt;\w&lt;/code&gt; 사용하여 안전한 파일 이름 또는 메일 주소를 정규식으로 확인 하는 경우 &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; 및 &lt;code&gt;&quot;|&quot;&lt;/code&gt; 와 같은 문자를 주장 하는 &lt;code&gt;LC_CTYPE&lt;/code&gt; 로캘 로 스푸핑 될 수 있습니다. 영숫자입니다.</target>
        </trans-unit>
        <trans-unit id="f653e70d0a5f34832e6fd555fea8d484a6091ad7" translate="yes" xml:space="preserve">
          <source>Regular expression look-ahead</source>
          <target state="translated">정규 표현식 미리보기</target>
        </trans-unit>
        <trans-unit id="6656538264030cf82789e744d1ce709e6f5c78ee" translate="yes" xml:space="preserve">
          <source>Regular expression modifiers are usually written in documentation as e.g., &quot;the &lt;code&gt;/x&lt;/code&gt; modifier&quot;, even though the delimiter in question might not really be a slash. The modifiers &lt;code&gt;/imsxadlup&lt;/code&gt; may also be embedded within the regular expression itself using the &lt;code&gt;(?...)&lt;/code&gt; construct, see &lt;a href=&quot;#Extended-Patterns&quot;&gt;Extended Patterns&lt;/a&gt; below.</source>
          <target state="translated">정규식 수정자는 문제의 구분자가 실제로 슬래시가 아니더라도 일반적으로 &quot; &lt;code&gt;/x&lt;/code&gt; 수정 자&quot; 와 같은 문서로 작성됩니다 . 수정 자 &lt;code&gt;/imsxadlup&lt;/code&gt; 은 &lt;code&gt;(?...)&lt;/code&gt; 구문을 사용하여 정규 표현식 자체에 포함시킬 수도 있습니다 ( 아래 &lt;a href=&quot;#Extended-Patterns&quot;&gt;확장 패턴&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="b7b9b0569784ec03684164534290764251f5a4a5" translate="yes" xml:space="preserve">
          <source>Regular expression pattern matching may surprise you if you're not accustomed to Unicode. Starting in Perl 5.14, several pattern modifiers are available to control this, called the character set modifiers. Details are given in &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;Character set modifiers in perlre&lt;/a&gt;.</source>
          <target state="translated">정규식 패턴 일치는 유니 코드에 익숙하지 않은 경우 놀라게 할 수 있습니다. Perl 5.14부터는 문자 집합 수정 자라고하는 여러 가지 패턴 수정자를 사용하여이를 제어 할 수 있습니다. 자세한 내용은 &lt;a href=&quot;perlre#Character-set-modifiers&quot;&gt;perlre의 문자 세트 수정 자에 나와&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a6506eb05d7e28ac20c066a5dc5a473a5b60331" translate="yes" xml:space="preserve">
          <source>Regular expression patterns can be compiled using &lt;a href=&quot;perlop#qr%2fSTRING%2fmsixpodualn&quot;&gt;qr//&lt;/a&gt; with actual matching deferred to later. Again, it is whether or not the compilation was done within the scope of &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; that determines the match behavior, not if the matches are done within such a scope or not.</source>
          <target state="translated">정규식 패턴은 실제 매칭이 나중에 연기되는 &lt;a href=&quot;perlop#qr%2fSTRING%2fmsixpodualn&quot;&gt;qr //&lt;/a&gt; 를 사용하여 컴파일 될 수 있습니다 . 다시 말하지만, 그것은 컴파일의 범위 내에서 수행되었는지 여부이다 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 일치하는 이러한 범위 여부 내에 완료되지 않을 경우 경기의 행동을 결정한다.</target>
        </trans-unit>
        <trans-unit id="3172c4ae8fee97c04bb506eac2e6f47443f5a679" translate="yes" xml:space="preserve">
          <source>Regular expressions</source>
          <target state="translated">정규식</target>
        </trans-unit>
        <trans-unit id="58710b0061794045424cb99635316dd1d5bcaa15" translate="yes" xml:space="preserve">
          <source>Regular expressions - Perl's regular expression engine is so called NFA (Non-deterministic Finite Automaton), which among other things means that it can rather easily consume large amounts of both time and space if the regular expression may match in several ways. Careful crafting of the regular expressions can help but quite often there really isn't much one can do (the book &quot;Mastering Regular Expressions&quot; is required reading, see &lt;a href=&quot;perlfaq2&quot;&gt;perlfaq2&lt;/a&gt;). Running out of space manifests itself by Perl running out of memory.</source>
          <target state="translated">정규 표현식-Perl의 정규 표현식 엔진은 NFA (Non-deterministic Finite Automaton)라고하며, 정규 표현식이 여러 가지 방식으로 일치 할 경우 많은 시간과 공간을 쉽게 소비 할 수 있습니다. 정규 표현식을 신중하게 작성하면 도움이 될 수 있지만 실제로는 할 수있는 일이 많지 않습니다 ( &quot;정규 표현식 마스터 링&quot;책을 읽으 &lt;a href=&quot;perlfaq2&quot;&gt;려면 perlfaq2&lt;/a&gt; 참조 ). 공간 부족은 Perl 메모리 부족으로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="be374f79f7a6dda7b312225eccc1af30acb48497" translate="yes" xml:space="preserve">
          <source>Regular expressions also play a big role in</source>
          <target state="translated">정규 표현식도 큰 역할을합니다</target>
        </trans-unit>
        <trans-unit id="e793789416bdeebd608abb2fbd64ea7f19b94580" translate="yes" xml:space="preserve">
          <source>Regular expressions have the undeserved reputation of being abstract and difficult to understand. Regular expressions are constructed using simple concepts like conditionals and loops and are no more difficult to understand than the corresponding &lt;code&gt;if&lt;/code&gt; conditionals and &lt;code&gt;while&lt;/code&gt; loops in the Perl language itself. In fact, the main challenge in learning regular expressions is just getting used to the terse notation used to express these concepts.</source>
          <target state="translated">정규 표현식은 추상적이며 이해하기 어려운 과분한 명성을 가지고 있습니다. 정규식은 조건부 및 루프와 같은 간단한 개념을 사용하여 구성 되며 Perl 언어 자체 의 해당 &lt;code&gt;if&lt;/code&gt; 조건부 및 &lt;code&gt;while&lt;/code&gt; 루프 보다 이해하기 어렵습니다 . 실제로 정규 표현식을 배우는 데있어 주요 과제는 이러한 개념을 표현하는 데 사용되는 간결한 표기법에 익숙해지는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7c932d258fd79007d480838ca74a010e59fd68d2" translate="yes" xml:space="preserve">
          <source>Regular expressions match whole characters. For example, &lt;code&gt;&quot;.&quot;&lt;/code&gt; matches a whole character instead of only a single byte.</source>
          <target state="translated">정규식은 전체 문자와 일치합니다. 예를 들어 &lt;code&gt;&quot;.&quot;&lt;/code&gt; 단일 바이트 대신 전체 문자를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="a79155533f0f2c06638d1868af933b0e25966e2d" translate="yes" xml:space="preserve">
          <source>Regular expressions provide a terse and powerful programming language. As with most other power tools, power comes together with the ability to wreak havoc.</source>
          <target state="translated">정규 표현식은 간결하고 강력한 프로그래밍 언어를 제공합니다. 대부분의 다른 전동 공구와 마찬가지로 전원에는 혼란을 일으킬 수있는 기능이 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="632284d6d44cd285a0879407d2b79c59fd92e9cc" translate="yes" xml:space="preserve">
          <source>Regular file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2c6bd7eee60827022c13e6cc38e892107043fd" translate="yes" xml:space="preserve">
          <source>Regular variables and functions are quite easy to pass: just pass in a reference to an existing or anonymous variable or function:</source>
          <target state="translated">일반 변수 및 함수는 전달하기가 매우 쉽습니다. 기존 또는 익명 변수 또는 함수에 대한 참조를 전달하면됩니다.</target>
        </trans-unit>
        <trans-unit id="d6331fbf9d7d8d43382e44e21b406e367129ecf9" translate="yes" xml:space="preserve">
          <source>Reinitialize the connection, flushing all I/O and account information.</source>
          <target state="translated">모든 I / O 및 계정 정보를 비우고 연결을 다시 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="3df1d5b7df0c57f96ce32609e0558ca2f232e641" translate="yes" xml:space="preserve">
          <source>Reinitializes the Test::Builder singleton to its original state. Mostly useful for tests run in persistent environments where the same test might be run multiple times in the same process.</source>
          <target state="translated">Test :: Builder 싱글 톤을 원래 상태로 다시 초기화합니다. 동일한 프로세스에서 동일한 테스트가 여러 번 실행될 수있는 지속적 환경에서 테스트에 주로 유용합니다.</target>
        </trans-unit>
        <trans-unit id="207e12a4b3002c04d19de8b0142ced7d247caee9" translate="yes" xml:space="preserve">
          <source>Reinventing the wheel</source>
          <target state="translated">바퀴 재발견</target>
        </trans-unit>
        <trans-unit id="717630b2cad6e540d8db910a43ea8b5ec4baa4f7" translate="yes" xml:space="preserve">
          <source>Related to this, you probably should not use the &lt;code&gt;-r&lt;/code&gt; option of Configure in AIX, because that affects of how the &lt;code&gt;nm&lt;/code&gt; tool is used.</source>
          <target state="translated">이와 관련 하여 &lt;code&gt;nm&lt;/code&gt; 도구 사용 방법에 영향을주기 때문에 AIX에서 Configure 의 &lt;code&gt;-r&lt;/code&gt; 옵션을 사용하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="354032ada697719ccb58ca87cd221831508c42b3" translate="yes" xml:space="preserve">
          <source>Relational Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad91c52a0a60eb223f0b73047b8954c0e909fcea" translate="yes" xml:space="preserve">
          <source>Relative backreferences</source>
          <target state="translated">상대 역 참조</target>
        </trans-unit>
        <trans-unit id="9025d894508169e5e903de46adc4c6ac9d714912" translate="yes" xml:space="preserve">
          <source>Relative referencing</source>
          <target state="translated">상대 참조</target>
        </trans-unit>
        <trans-unit id="d41f56cea1ac933d25c57aebc6522e2b6c58eb87" translate="yes" xml:space="preserve">
          <source>Release</source>
          <target state="translated">Release</target>
        </trans-unit>
        <trans-unit id="8ebf1f02960a88683ce31dd07c926d87fc656eab" translate="yes" xml:space="preserve">
          <source>Release 5.005 grandfathered old global symbol names by providing preprocessor macros for extension source compatibility. As of release 5.6, these preprocessor definitions are not available by default. The POLLUTE flag specifies that the old names should still be defined:</source>
          <target state="translated">릴리스 5.005는 확장 소스 호환성을위한 전 처리기 매크로를 제공하여 이전 전역 심볼 이름을 사용했습니다. 릴리스 5.6부터는 이러한 전 처리기 정의를 기본적으로 사용할 수 없습니다. POLLUTE 플래그는 이전 이름을 계속 정의하도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="656417ddc071609de63ac9a1f4d853854b5a0fdc" translate="yes" xml:space="preserve">
          <source>Release considerations</source>
          <target state="translated">릴리스 고려 사항</target>
        </trans-unit>
        <trans-unit id="fac91889aeb38f3b3b4a4db4a0e6d3642a61874e" translate="yes" xml:space="preserve">
          <source>Release notes or changelogs should be produced for each release of your software describing user-visible changes to your module, in terms relevant to the user.</source>
          <target state="translated">릴리스 노트 또는 변경 로그는 사용자와 관련하여 사용자가 볼 수있는 모듈 변경 사항을 설명하는 각 소프트웨어 릴리스에 대해 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="6ba1c61f378b869ee5ff1bf4815e10dba0616c84" translate="yes" xml:space="preserve">
          <source>Releases a Perl interpreter. See &lt;a href=&quot;perlembed&quot;&gt;perlembed&lt;/a&gt;.</source>
          <target state="translated">Perl 인터프리터를 해제합니다. &lt;a href=&quot;perlembed&quot;&gt;perlembed를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="be7b5a45a9634bcc78901f710b5c0f2b2c340dd7" translate="yes" xml:space="preserve">
          <source>Releases a mutual exclusion lock on sv if a suitable module has been loaded.</source>
          <target state="translated">적합한 모듈이로드 된 경우 sv에서 상호 배제 잠금을 해제합니다.</target>
        </trans-unit>
        <trans-unit id="15aaabc3fc05a859dc53c1dbd9485280dc3c8707" translate="yes" xml:space="preserve">
          <source>Relevant only if Perl is compiled with the &lt;code&gt;malloc&lt;/code&gt; included with the Perl distribution; that is, if &lt;code&gt;perl -V:d_mymalloc&lt;/code&gt; is &quot;define&quot;.</source>
          <target state="translated">Perl 배포에 포함 된 &lt;code&gt;malloc&lt;/code&gt; 으로 Perl을 컴파일 한 경우에만 해당됩니다 . 즉, &lt;code&gt;perl -V:d_mymalloc&lt;/code&gt; 이 &quot;define&quot;인 경우입니다.</target>
        </trans-unit>
        <trans-unit id="943874c75240886ef86a43aa1a27aa553887e60b" translate="yes" xml:space="preserve">
          <source>Relevant only if your Perl executable was built with &lt;b&gt;-DDEBUGGING&lt;/b&gt;, this controls the behaviour of global destruction of objects and other references. See &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;PERL_DESTRUCT_LEVEL in perlhacktips&lt;/a&gt; for more information.</source>
          <target state="translated">Perl 실행 파일이 &lt;b&gt;-DDEBUGGING&lt;/b&gt; 으로 빌드 된 경우에만 관련 이 &lt;b&gt;있으며&lt;/b&gt; , 이는 오브젝트 및 기타 참조의 글로벌 소멸 동작을 제어합니다. 자세한 정보 &lt;a href=&quot;perlhacktips#PERL_DESTRUCT_LEVEL&quot;&gt;는 perlhacktips의 PERL_DESTRUCT_LEVEL&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9212a457c3732633841ee386978ed99e344f1331" translate="yes" xml:space="preserve">
          <source>Relies on being called from within CPAN.pm.</source>
          <target state="translated">CPAN.pm 내에서 호출되어야합니다.</target>
        </trans-unit>
        <trans-unit id="bc501c27012ecb7ab368ca72ce5b915779f3eaba" translate="yes" xml:space="preserve">
          <source>Reloads all indices if they have not been read for more than &lt;code&gt;$CPAN::Config-&amp;gt;{index_expire}&lt;/code&gt; days.</source>
          <target state="translated">&lt;code&gt;$CPAN::Config-&amp;gt;{index_expire}&lt;/code&gt; 일 이상 읽지 않은 경우 모든 인덱스를 다시로드합니다 .</target>
        </trans-unit>
        <trans-unit id="fd0fbd5e977146b9d49a1bb9513dae2c00d4cab0" translate="yes" xml:space="preserve">
          <source>Remember not to encode a full URI, you need to escape each component separately and then join them together.</source>
          <target state="translated">전체 URI를 인코딩하지 마십시오. 각 구성 요소를 개별적으로 이스케이프 한 후 함께 결합해야합니다.</target>
        </trans-unit>
        <trans-unit id="9a11550a2b50920bc08b8bae13e607c48b5110ac" translate="yes" xml:space="preserve">
          <source>Remember not to use &lt;code&gt;=&lt;/code&gt; when you need &lt;code&gt;=~&lt;/code&gt; ; these two constructs are quite different:</source>
          <target state="translated">사용하지 않는 기억 &lt;code&gt;=&lt;/code&gt; 당신이 필요로 할 때 &lt;code&gt;=~&lt;/code&gt; ; 이 두 구성은 상당히 다릅니다.</target>
        </trans-unit>
        <trans-unit id="67fc2e258765c2443b977ec7fde73394c2ad46f9" translate="yes" xml:space="preserve">
          <source>Remember that &quot;my&quot;, &quot;our&quot;, &quot;local&quot; and &quot;state&quot; bind tighter than comma.</source>
          <target state="translated">&quot;my&quot;, &quot;our&quot;, &quot;local&quot;및 &quot;state&quot;는 쉼표보다 더 밀접하게 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="1eaeae41b9d2cba51fd4b49832eb6ea43d3d9e3e" translate="yes" xml:space="preserve">
          <source>Remember that &lt;a href=&quot;../builder&quot;&gt;Test::Builder&lt;/a&gt;'s diag function will not add newlines to the end of output and test_diag will. So to check</source>
          <target state="translated">기억 &lt;a href=&quot;../builder&quot;&gt;테스트 :: 빌더&lt;/a&gt; 의 DIAG 기능은 출력과 test_diag 의지의 끝에 줄 바꿈을 추가하지 않습니다. 그래서 확인</target>
        </trans-unit>
        <trans-unit id="ca827509fa317de9b151f205a99c10ad34bc2a42" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;$^N&lt;/code&gt; is set to whatever was matched by the last completed capture group. This prints</source>
          <target state="translated">기억 &lt;code&gt;$^N&lt;/code&gt; 마지막으로 완성 된 캡처 그룹에 의해 일치 된대로 설정됩니다. 이것은 인쇄</target>
        </trans-unit>
        <trans-unit id="b2a6bc5b994852a181e7009e78d2e536abe58494" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; merely truncates toward 0. For rounding to a certain number of digits, &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; is usually the easiest route.</source>
          <target state="translated">그 기억 &lt;code&gt;&lt;a href=&quot;functions/int&quot;&gt;int()&lt;/a&gt;&lt;/code&gt; 단순히 특정 자릿수로 반올림의 경우 0으로 자릅니다 &lt;code&gt;&lt;a href=&quot;functions/sprintf&quot;&gt;sprintf()&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;functions/printf&quot;&gt;printf()&lt;/a&gt;&lt;/code&gt; 보통 가장 쉬운 방법입니다.</target>
        </trans-unit>
        <trans-unit id="d3286289db77afd9191ea9bf57cb305d2f1b7b35" translate="yes" xml:space="preserve">
          <source>Remember that &lt;code&gt;hv_store&lt;/code&gt; and &lt;code&gt;hv_fetch&lt;/code&gt; return &lt;code&gt;SV**&lt;/code&gt; 's and not just &lt;code&gt;SV*&lt;/code&gt; . To access the scalar value, you must first dereference the return value. However, you should check to make sure that the return value is not NULL before dereferencing it.</source>
          <target state="translated">그 기억 &lt;code&gt;hv_store&lt;/code&gt; 및 &lt;code&gt;hv_fetch&lt;/code&gt; 반환 &lt;code&gt;SV**&lt;/code&gt; 의뿐 아니라 &lt;code&gt;SV*&lt;/code&gt; . 스칼라 값에 액세스하려면 먼저 반환 값을 역 참조해야합니다. 그러나 참조 값을 반환하기 전에 반환 값이 NULL이 아닌지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="dd12c8c58071e3d0f8ec874ed5f0be457402b8c4" translate="yes" xml:space="preserve">
          <source>Remember that Perl distinguishes between a key not existing in the hash, and the key existing in the hash but having a corresponding value of &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. The two possibilities can be tested with the &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined()&lt;/a&gt;&lt;/code&gt; functions.</source>
          <target state="translated">Perl은 해시에 존재하지 않는 키와 해시에 존재하지만 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 의 해당 값을 갖는 키를 구별 합니다. &lt;code&gt;&lt;a href=&quot;functions/exists&quot;&gt;exists()&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;functions/defined&quot;&gt;defined()&lt;/a&gt;&lt;/code&gt; 함수를 사용하여 두 가지 가능성을 테스트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b32d78dc03b8840549601d8279db2304a336e903" translate="yes" xml:space="preserve">
          <source>Remember that a umask is a number, usually given in octal; it is</source>
          <target state="translated">umask는 일반적으로 8 진수로 제공되는 숫자입니다. 그것은</target>
        </trans-unit>
        <trans-unit id="e8d7a726ced16e5e5bdec26b5e8725ff4effd3af" translate="yes" xml:space="preserve">
          <source>Remember that both map and grep expect a LIST argument, so doing this:</source>
          <target state="translated">map과 grep은 LIST 인수를 예상하므로 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="cf98bc15c6d2e6d5b3119e11999c1516475b1b22" translate="yes" xml:space="preserve">
          <source>Remember that it has to be &lt;code&gt;patcopy+1&lt;/code&gt; because the first character of the string is the &lt;code&gt;U&lt;/code&gt; which has been swallowed into &lt;code&gt;datumtype!&lt;/code&gt;</source>
          <target state="translated">문자열의 첫 번째 문자가 &lt;code&gt;datumtype!&lt;/code&gt; 으로 삼킨 &lt;code&gt;U&lt;/code&gt; 이기 때문에 그것은 &lt;code&gt;patcopy+1&lt;/code&gt; 이어야 함 을 기억하십시오 !</target>
        </trans-unit>
        <trans-unit id="2fc569ae6eac2ea65834accd6b0d6887e151184a" translate="yes" xml:space="preserve">
          <source>Remember that lines consisting entirely of whitespace will disappear, since the first part of the alternation can match the entire string and replace it with nothing. If you need to keep embedded blank lines, you have to do a little more work. Instead of matching any whitespace (since that includes a newline), just match the other whitespace:</source>
          <target state="translated">대체의 첫 번째 부분은 전체 문자열과 일치하고 아무것도 대체하지 않기 때문에 공백으로 만 구성된 줄은 사라집니다. 빈 줄을 유지해야하는 경우 조금 더 작업해야합니다. 개행 문자를 포함하므로 공백을 일치시키는 대신 다른 공백을 일치시킵니다.</target>
        </trans-unit>
        <trans-unit id="9e76ea83298c76444ca3d7987b1205c255f1a2be" translate="yes" xml:space="preserve">
          <source>Remember that many operations behave differently in a list context than they do in a scalar one. See &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt; for details.</source>
          <target state="translated">리스트 컨텍스트에서는 많은 연산이 스칼라 연산과 다르게 동작한다는 점을 기억하십시오. 자세한 내용은 &lt;a href=&quot;perldata&quot;&gt;perldata&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="646cf6fab482d7d4b5340740e234cef55c79a20a" translate="yes" xml:space="preserve">
          <source>Remember that most patterns (using //) will need to be anchored with a leading ^, e.g., &lt;code&gt;/^EXIT/&lt;/code&gt; rather than &lt;code&gt;/EXIT/&lt;/code&gt; .</source>
          <target state="translated">(// 사용) 대부분의 패턴은 예를 들어, ^ 선두로 고정 될 필요가있을 것이다 기억 &lt;code&gt;/^EXIT/&lt;/code&gt; 보다는 &lt;code&gt;/EXIT/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b5c399fc5d7626984daea5c2fe086f26307e484" translate="yes" xml:space="preserve">
          <source>Remember that the entry in the hash will still be there even if the referenced variable goes out of scope, and that it is entirely possible for Perl to subsequently allocate a different variable at the same address. This will mean a new variable might accidentally be associated with the value for an old.</source>
          <target state="translated">참조 된 변수가 범위를 벗어난 경우에도 해시의 항목은 계속 존재하며 Perl이 동일한 주소에서 다른 변수를 할당 할 수 있다는 것을 기억하십시오. 이는 새 변수가 실수로 이전 값과 연관 될 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="cf591952a26d00c380cfecee655ada8011d7bc35" translate="yes" xml:space="preserve">
          <source>Remember that unless you are working on a</source>
          <target state="translated">당신이 작업하지 않는 한</target>
        </trans-unit>
        <trans-unit id="6358d39d1e6eaeb38857ebca766827c7301190a1" translate="yes" xml:space="preserve">
          <source>Remember that you don't have to do this for an &lt;code&gt;SV *&lt;/code&gt; . The reference documentation for all core typemaps can be found in &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SV *&lt;/code&gt; 에 대해서는이 작업을 수행 할 필요가 없습니다 . 모든 코어 타입 맵에 대한 참조 문서는 &lt;a href=&quot;perlxstypemap&quot;&gt;perlxstypemap&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="555123372304909e0ad37527dea82816796217cb" translate="yes" xml:space="preserve">
          <source>Remember the following important rule: There is &lt;b&gt;no rule&lt;/b&gt; that relates the behavior of an expression in list context to its behavior in scalar context, or vice versa. It might do two totally different things. Each operator and function decides which sort of value would be most appropriate to return in scalar context. Some operators return the length of the list that would have been returned in list context. Some operators return the first value in the list. Some operators return the last value in the list. Some operators return a count of successful operations. In general, they do what you want, unless you want consistency.</source>
          <target state="translated">다음과 같은 중요한 규칙을 기억하십시오. 목록 컨텍스트의 표현식 동작과 스칼라 컨텍스트의 동작을 연관시키는 &lt;b&gt;규칙&lt;/b&gt; 은 &lt;b&gt;없으며&lt;/b&gt; 그 반대도 마찬가지입니다. 완전히 다른 두 가지 일을 할 수 있습니다. 각 연산자와 함수는 스칼라 컨텍스트에서 반환하기에 가장 적합한 값을 결정합니다. 일부 연산자는 목록 컨텍스트에서 반환 된 목록의 길이를 반환합니다. 일부 연산자는 목록에서 첫 번째 값을 반환합니다. 일부 연산자는 목록에서 마지막 값을 반환합니다. 일부 연산자는 성공적인 작업 수를 반환합니다. 일반적으로 일관성을 원하지 않는 한 원하는대로 수행합니다.</target>
        </trans-unit>
        <trans-unit id="47e3bd79be5e16cdbfb3336b03f971bf4d0bdbdd" translate="yes" xml:space="preserve">
          <source>Remember these important facts:</source>
          <target state="translated">다음과 같은 중요한 사실을 기억하십시오.</target>
        </trans-unit>
        <trans-unit id="fe3be81bb1bc46e2fb0131edbb793025f77c5a69" translate="yes" xml:space="preserve">
          <source>Remember to ask your translators about numeral formatting in their language, so that you can override the &lt;code&gt;numf&lt;/code&gt; method as appropriate. Typical variables in number formatting are: what to use as a decimal point (comma? period?); what to use as a thousands separator (space? nonbreaking space? comma? period? small middot? prime? apostrophe?); and even whether the so-called &quot;thousands separator&quot; is actually for every third digit -- I've heard reports of two hundred thousand being expressible as &quot;2,00,000&quot; for some Indian (Subcontinental) languages, besides the less surprising &quot;200 000&quot;, &quot;200.000&quot;, &quot;200,000&quot;, and &quot;200'000&quot;. Also, using a set of numeral glyphs other than the usual ASCII &quot;0&quot;-&quot;9&quot; might be appreciated, as via &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr/0-9/\x{0966}-\x{096F}/&lt;/a&gt;&lt;/code&gt; for getting digits in Devanagari script (for Hindi, Konkani, others).</source>
          <target state="translated">&lt;code&gt;numf&lt;/code&gt; 방법을 적절히 재정의 할 수 있도록 번역가에게 자국어로 숫자 형식을 지정하도록 요청하십시오 . 숫자 형식의 일반적인 변수는 다음과 같습니다. 소수점으로 사용할 항목 (쉼표? 마침표?); 천 단위 구분 기호 (공백? 비 공백 공간? 쉼표? 마침표; 중간 중간 점? 소수 자릿수?)로 사용할 항목; 소위 &quot;천 단위 구분 기호&quot;가 실제로는 세 번째 숫자에 해당하는지 여부에도 불구하고, 일부 인도 (아대륙) 언어의 경우 2 억이 &quot;200 만&quot;으로 표현 될 수 있다는보고를 들었습니다. 000 &quot;,&quot;200.000 &quot;,&quot;200,000 &quot;및&quot;200'000 &quot;. 또한 일반적인 ASCII &quot;0&quot;- &quot;9&quot;이외의 숫자 글리프 세트를 사용하는 것이 좋습니다. &lt;code&gt;&lt;a href=&quot;../functions/tr&quot;&gt;tr/0-9/\x{0966}-\x{096F}/&lt;/a&gt;&lt;/code&gt; Devanagari 스크립트에서 숫자를 가져옵니다 (힌디어, Konkani 등).</target>
        </trans-unit>
        <trans-unit id="9f2114f10064a04bb74059d053450f0147cd1c5a" translate="yes" xml:space="preserve">
          <source>Remember to check the modules that came with your distribution, and CPAN as well--someone may already have written a module to do it. On Windows, try &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::API&quot;&gt;Win32::API&lt;/a&gt;. On Macs, try &lt;a href=&quot;http://search.cpan.org/perldoc/Mac::Carbon&quot;&gt;Mac::Carbon&lt;/a&gt;. If no module has an interface to the C function, you can inline a bit of C in your Perl source with &lt;a href=&quot;http://search.cpan.org/perldoc/Inline::C&quot;&gt;Inline::C&lt;/a&gt;.</source>
          <target state="translated">배포판과 함께 제공된 모듈과 CPAN도 확인하십시오. 누군가 모듈을 이미 작성했을 수도 있습니다. Windows에서는 &lt;a href=&quot;http://search.cpan.org/perldoc/Win32::API&quot;&gt;Win32 :: API를&lt;/a&gt; 시도하십시오 . Mac에서는 &lt;a href=&quot;http://search.cpan.org/perldoc/Mac::Carbon&quot;&gt;Mac :: Carbon을&lt;/a&gt; 사용해보십시오 . C 함수에 대한 인터페이스가있는 모듈이없는 경우 &lt;a href=&quot;http://search.cpan.org/perldoc/Inline::C&quot;&gt;Inline :: C를&lt;/a&gt; 사용하여 Perl 소스에서 약간의 C를 인라인 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e578e97ce330a4635b211fac80fcb964a9a0c638" translate="yes" xml:space="preserve">
          <source>Remember to free the previous PV buffer. There are many things to check. Beware that the existing pointer may be involved in copy-on-write or other mischief, so do &lt;code&gt;SvOOK_off(sv)&lt;/code&gt; and use &lt;code&gt;sv_force_normal&lt;/code&gt; or &lt;code&gt;SvPV_force&lt;/code&gt; (or check the SvIsCOW flag) first to make sure this modification is safe. Then finally, if it is not a COW, call &lt;code&gt;SvPV_free&lt;/code&gt; to free the previous PV buffer.</source>
          <target state="translated">이전 PV 버퍼를 해제해야합니다. 확인할 사항이 많이 있습니다. 기존 포인터가 기록 중 복사 또는 기타 장난에 관련 될 수 있으므로 &lt;code&gt;SvOOK_off(sv)&lt;/code&gt; 하고 &lt;code&gt;sv_force_normal&lt;/code&gt; 또는 &lt;code&gt;SvPV_force&lt;/code&gt; 를 사용 (또는 SvIsCOW 플래그 확인)하여이 수정이 안전한지 확인하십시오. 마지막으로 COW가 아닌 경우 &lt;code&gt;SvPV_free&lt;/code&gt; 를 호출 하여 이전 PV 버퍼를 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="edbdda7d015901994cff299901620d94df0e7929" translate="yes" xml:space="preserve">
          <source>Remember to keep in mind verb agreement (or adjectives too, in other languages), as in:</source>
          <target state="translated">다음과 같이 동사 동의 (또는 다른 언어의 형용사)도 명심하십시오.</target>
        </trans-unit>
        <trans-unit id="ea14aadc90613c4067d4c78691b62504dd496234" translate="yes" xml:space="preserve">
          <source>Remember to use a hefty wad of stack (I use 2000000)</source>
          <target state="translated">엄청난 양의 스택을 사용해야합니다 (2000000 사용)</target>
        </trans-unit>
        <trans-unit id="288c61995661b35931506b0caae197170c722414" translate="yes" xml:space="preserve">
          <source>Remember we're in our tiny program with a problem, we should have a look at where we are, and what our data looks like. First of all let's view some code at our present position (the first line of code in this case), via '&lt;b&gt;v&lt;/b&gt;':</source>
          <target state="translated">우리는 작은 프로그램에 문제가 있다는 것을 기억하고, 현재 위치와 데이터의 모습을 살펴 봐야합니다. 먼저 ' &lt;b&gt;v&lt;/b&gt; ' 를 통해 현재 위치 (이 경우 첫 번째 코드 줄)에서 일부 코드를 봅니다 .</target>
        </trans-unit>
        <trans-unit id="f6ef210dc6df90e5b38374c442963d215fab9ab2" translate="yes" xml:space="preserve">
          <source>Remember, the returned item is not removed from the queue, so manipulating a &lt;code&gt;peek&lt;/code&gt; ed at reference affects the item on the queue.</source>
          <target state="translated">반환 된 항목은 대기열에서 제거되지 않으므로 참조를 &lt;code&gt;peek&lt;/code&gt; 보면 조작 이 대기열의 항목에 영향을 미칩니다.</target>
        </trans-unit>
        <trans-unit id="8ff4183fe49a6a6309b98413d71a4c51c83971ba" translate="yes" xml:space="preserve">
          <source>Remember: if you want your subclass to be automatically used by the parser, you'll have to register it with &lt;a href=&quot;resultfactory#register_type&quot;&gt;register_type in TAP::Parser::ResultFactory&lt;/a&gt;.</source>
          <target state="translated">기억하십시오 : 구문 분석기가 서브 클래스를 자동으로 사용하려면 &lt;a href=&quot;resultfactory#register_type&quot;&gt;TAP :: Parser :: ResultFactory에서&lt;/a&gt; register_type을 사용하여 서브 클래스를 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="027c26e9ae112bc7c5d4192494b974ff4b801557" translate="yes" xml:space="preserve">
          <source>Remember: the value of &lt;code&gt;$/&lt;/code&gt; is a string, not a regex. &lt;b&gt;awk&lt;/b&gt; has to be better for something. :-)</source>
          <target state="translated">기억하십시오 : &lt;code&gt;$/&lt;/code&gt; 의 값은 정규 표현식이 아닌 문자열입니다. &lt;b&gt;awk&lt;/b&gt; 는 뭔가 더 &lt;b&gt;좋아야&lt;/b&gt; 합니다. :-)</target>
        </trans-unit>
        <trans-unit id="2304aa6585251451562aa451f542cd4915e4816b" translate="yes" xml:space="preserve">
          <source>Remind the translators to consider the case where N is 0: &quot;0 files found&quot; isn't exactly natural-sounding in any language, but it may be unacceptable in many -- or it may condition special kinds of agreement (similar to English &quot;I didN'T find ANY files&quot;).</source>
          <target state="translated">번역가에게 N이 0 인 경우를 고려하도록 상기시켜주십시오. &quot;0 개의 파일을 찾았습니다&quot;는 어떤 언어에서도 자연스럽게 들리지 않지만 많은 경우 받아 들일 수 없을 수도 있습니다. 또는 특별한 종류의 계약 (영어와 유사한 &quot; 파일을 찾지 못했습니다 &quot;).</target>
        </trans-unit>
        <trans-unit id="2c1a02136a4770873ad1351ec44089fc6396abba" translate="yes" xml:space="preserve">
          <source>Remove IO from the list of file descriptors for the next poll.</source>
          <target state="translated">다음 폴의 파일 디스크립터 목록에서 IO를 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="b4205c2e4e5f0753c53b4cd2157f83e877d79608" translate="yes" xml:space="preserve">
          <source>Remove a signal from the SigSet object.</source>
          <target state="translated">SigSet 객체에서 신호를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="7d773b7155edc83b83cb81a8d5e214998acde808" translate="yes" xml:space="preserve">
          <source>Remove all the given handles from the object. This method also works by the &lt;code&gt;&lt;a href=&quot;../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; of the handles. So the exact handles that were added need not be passed, just handles that have an equivalent &lt;code&gt;&lt;a href=&quot;../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">주어진 핸들을 객체에서 모두 제거하십시오. 이 방법은 또한으로 작동 &lt;code&gt;&lt;a href=&quot;../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; 핸들의. 그래서 동등한이 필요 전달되지, 그냥 핸들 추가 된 정확한 핸들 &lt;code&gt;&lt;a href=&quot;../functions/fileno&quot;&gt;fileno&lt;/a&gt;&lt;/code&gt; 를</target>
        </trans-unit>
        <trans-unit id="ec5b86c026a0888d3d21b8af5552020cd0cfcac1" translate="yes" xml:space="preserve">
          <source>Remove and destroy the message queue from the system.</source>
          <target state="translated">시스템에서 메시지 큐를 제거하고 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="6aaf7cd9a2aecb8b071738d93a877aedd07453f1" translate="yes" xml:space="preserve">
          <source>Remove and destroy the semaphore set from the system.</source>
          <target state="translated">시스템에서 세마포어 세트를 제거하고 제거하십시오.</target>
        </trans-unit>
        <trans-unit id="08922679889ead1233ce9875bead229564568322" translate="yes" xml:space="preserve">
          <source>Remove any magic of type</source>
          <target state="translated">유형의 마법을 제거하십시오</target>
        </trans-unit>
        <trans-unit id="15e6d1c7c8255afa8c848bcdf81bba7435f9b1e6" translate="yes" xml:space="preserve">
          <source>Remove any string offset. You should normally use the &lt;code&gt;SvOOK_off&lt;/code&gt; macro wrapper instead.</source>
          <target state="translated">문자열 오프셋을 제거하십시오. 일반적으로 대신 &lt;code&gt;SvOOK_off&lt;/code&gt; 매크로 래퍼를 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ca26333c9cffa9dcdd1f9ac9077e465bdac01657" translate="yes" xml:space="preserve">
          <source>Remove last element of the array and return it.</source>
          <target state="translated">배열의 마지막 요소를 제거하고 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="dd74f70e82f716fe737ebdd68a369175399ee5d4" translate="yes" xml:space="preserve">
          <source>Remove last element of the array and return it. For example:</source>
          <target state="translated">배열의 마지막 요소를 제거하고 반환하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3d7ce8cb1e76d7785d81a4336476884c3f8f3434" translate="yes" xml:space="preserve">
          <source>Remove the directory with the name &lt;code&gt;DIR&lt;/code&gt; . If &lt;code&gt;RECURSE&lt;/code&gt; is</source>
          <target state="translated">이름이 &lt;code&gt;DIR&lt;/code&gt; 인 디렉토리를 제거하십시오 . 경우 &lt;code&gt;RECURSE&lt;/code&gt; 있다</target>
        </trans-unit>
        <trans-unit id="01b3903b90ed14c4b645d49c69219c3c2b4eabbd" translate="yes" xml:space="preserve">
          <source>Remove the first element of the array (shifting other elements down) and return it.</source>
          <target state="translated">배열의 첫 번째 요소를 제거하고 (다른 요소를 아래로 이동) 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="7915d09356edb2d08ee58387fa2807f4d9125c2f" translate="yes" xml:space="preserve">
          <source>Remove the first element of the array (shifting other elements down) and return it. For example:</source>
          <target state="translated">배열의 첫 번째 요소를 제거하고 (다른 요소를 아래로 이동) 반환하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="af6da8ce6c3a71d84dabc65f4953446b1ad5eaa7" translate="yes" xml:space="preserve">
          <source>Remove the shared memory segment from the system or mark it as removed as long as any processes are still attached to it.</source>
          <target state="translated">프로세스가 연결되어있는 한 시스템에서 공유 메모리 세그먼트를 제거하거나 제거 된 것으로 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="fa2b8c36a992cb782bf9b719ffcacdc1994f25af" translate="yes" xml:space="preserve">
          <source>Removed features</source>
          <target state="translated">제거 된 기능</target>
        </trans-unit>
        <trans-unit id="ca09374fc77d4a9c28f5008d23302798f76def3f" translate="yes" xml:space="preserve">
          <source>Removed in Perl 5.10</source>
          <target state="translated">Perl 5.10에서 제거</target>
        </trans-unit>
        <trans-unit id="7feda984d74007c898a3562e8d4b8c724e3687d4" translate="yes" xml:space="preserve">
          <source>Removed in Perl 5.8.8</source>
          <target state="translated">Perl 5.8.8에서 제거</target>
        </trans-unit>
        <trans-unit id="8c003ba205d8c4fe73191a070ec08a0106b9f815" translate="yes" xml:space="preserve">
          <source>Removed in Perl 5.9.0</source>
          <target state="translated">Perl 5.9.0에서 제거</target>
        </trans-unit>
        <trans-unit id="c5063928e2ec4eb91ad2be24363b0ef7098c167e" translate="yes" xml:space="preserve">
          <source>Removed in Perl 5.9.5</source>
          <target state="translated">Perl 5.9.5에서 제거</target>
        </trans-unit>
        <trans-unit id="db90acb7ef3a6dde761f4676e88df84e20802090" translate="yes" xml:space="preserve">
          <source>Removed in Perl v5.10.0.</source>
          <target state="translated">Perl v5.10.0에서 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="9ffd3d68bce71e440bc44944ce7cd567641fc53d" translate="yes" xml:space="preserve">
          <source>Removed in: 5.11.3</source>
          <target state="translated">에서 제거 : 5.11.3</target>
        </trans-unit>
        <trans-unit id="7606a447a1adad6fd32090f792adebaa6d61391c" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;@codes&lt;/code&gt; as valid codes for the parse.</source>
          <target state="translated">&lt;code&gt;@codes&lt;/code&gt; 를 구문 분석에 유효한 코드로 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="5bb1eea9e121152498b29c0887262ecf49f84161" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;@directives&lt;/code&gt; as valid directives for the parse.</source>
          <target state="translated">&lt;code&gt;@directives&lt;/code&gt; 를 구문 분석에 유효한 지시문으로 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="3a7dce2ee5720ded6ace47211f4127a78a8bc823" translate="yes" xml:space="preserve">
          <source>Removes &lt;code&gt;@targets&lt;/code&gt; as valid targets for the parse.</source>
          <target state="translated">&lt;code&gt;@targets&lt;/code&gt; 를 구문 분석에 유효한 대상으로 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="78e457c2afa95057438297f0c2f7a08b01f2bed1" translate="yes" xml:space="preserve">
          <source>Removes a given test from results. This is a no-op if the test name is not found.</source>
          <target state="translated">주어진 테스트를 결과에서 제거합니다. 테스트 이름을 찾을 수 없으면 이것은 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6170266d9cf1abd067a88e768b95c547bffbe239" translate="yes" xml:space="preserve">
          <source>Removes a name from a stash's internal list of effective names. If this is the name returned by &lt;code&gt;HvENAME&lt;/code&gt; , then another name in the list will take its place (&lt;code&gt;HvENAME&lt;/code&gt; will use it).</source>
          <target state="translated">숨김의 유효 이름 목록에서 이름을 제거합니다. 이 이름이 &lt;code&gt;HvENAME&lt;/code&gt; 에서 리턴 한 이름 인 경우 목록의 다른 이름이 대신 사용됩니다 ( &lt;code&gt;HvENAME&lt;/code&gt; 에서 사용함 ).</target>
        </trans-unit>
        <trans-unit id="809993536a04c0412f321f50161f58b0d57e7cfc" translate="yes" xml:space="preserve">
          <source>Removes all key/value pairs with key &lt;code&gt;$key&lt;/code&gt; from the database.</source>
          <target state="translated">데이터베이스에서 키가 &lt;code&gt;$key&lt;/code&gt; 모든 키 / 값 쌍을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="881ae4af57d8a01c05348ec9fb6a313da72be1db" translate="yes" xml:space="preserve">
          <source>Removes all magic of type &lt;code&gt;type&lt;/code&gt; from an SV.</source>
          <target state="translated">형의 모든 마법을 제거 &lt;code&gt;type&lt;/code&gt; SV에의합니다.</target>
        </trans-unit>
        <trans-unit id="8d57ef147df287f0950a79a758b1f234220edab5" translate="yes" xml:space="preserve">
          <source>Removes all magic of type &lt;code&gt;type&lt;/code&gt; with the specified &lt;code&gt;vtbl&lt;/code&gt; from an SV.</source>
          <target state="translated">SV에서 지정된 &lt;code&gt;vtbl&lt;/code&gt; 을 사용하는 &lt;code&gt;type&lt;/code&gt; 의 모든 마술을 제거합니다 .</target>
        </trans-unit>
        <trans-unit id="2fb20ac267a12dd5bf7ea9c2de38f7f76336ee66" translate="yes" xml:space="preserve">
          <source>Removes and returns the first element of the array.</source>
          <target state="translated">배열의 첫 번째 요소를 제거하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="57dd5066c021b71185b5e0fb65bafc28180f3c03" translate="yes" xml:space="preserve">
          <source>Removes and returns the last element of the array.</source>
          <target state="translated">배열의 마지막 요소를 제거하고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="76d90152ed1c0eca472fdee0bd8ef8961b38208a" translate="yes" xml:space="preserve">
          <source>Removes and returns the specified number of items (defaults to 1) from the specified index position in the queue (0 is the head of the queue). When called with no arguments, &lt;code&gt;extract&lt;/code&gt; operates the same as &lt;code&gt;dequeue_nb&lt;/code&gt; .</source>
          <target state="translated">큐의 지정된 인덱스 위치에서 지정된 수의 항목 (기본값은 1)을 제거하고 리턴합니다 (0은 큐의 헤드). 인수없이 호출하면 &lt;code&gt;extract&lt;/code&gt; 는 &lt;code&gt;dequeue_nb&lt;/code&gt; 와 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="8f380bd3157b8fd25954da97a5468fe271c2abeb" translate="yes" xml:space="preserve">
          <source>Removes any entries with names matching any of the given filenames from the in-memory archive. Returns a list of &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects that remain.</source>
          <target state="translated">메모리 내 아카이브에서 지정된 파일 이름과 일치하는 이름을 가진 항목을 제거합니다. 남아있는 &lt;code&gt;Archive::Tar::File&lt;/code&gt; 객체 의 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="46574b8be47fb344cd76c91139f93a27d5320b33" translate="yes" xml:space="preserve">
          <source>Removes files (even if readonly)</source>
          <target state="translated">파일을 제거합니다 (읽기 전용 인 경우에도)</target>
        </trans-unit>
        <trans-unit id="82a08e1d7b6e614e50d42b649760f9cfc8ea485c" translate="yes" xml:space="preserve">
          <source>Removes files and directories - recursively (even if readonly)</source>
          <target state="translated">파일과 디렉토리를 재귀 적으로 제거합니다 (읽기 전용 인 경우에도)</target>
        </trans-unit>
        <trans-unit id="a4f180c566519c24cd55bbd6c9be1a8802527bbf" translate="yes" xml:space="preserve">
          <source>Removes one SV from the end of the array, reducing its size by one and returning the SV (transferring control of one reference count) to the caller. Returns &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; if the array is empty.</source>
          <target state="translated">배열의 끝에서 하나의 SV를 제거하여 크기를 1 씩 줄이고 SV (하나의 참조 카운트 제어 전송)를 호출자에게 반환합니다. 배열이 비어 있으면 &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="776a73e7b3694675ac208e6c27b3b30e60b64342" translate="yes" xml:space="preserve">
          <source>Removes one SV from the start of the array, reducing its size by one and returning the SV (transferring control of one reference count) to the caller. Returns &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; if the array is empty.</source>
          <target state="translated">배열의 시작에서 하나의 SV를 제거하여 크기를 1 씩 줄이고 SV (하나의 참조 카운트 제어 제어)를 호출자에게 반환합니다. 배열이 비어 있으면 &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="735d1cbf14be45e8708ade1447bb133c3aac27be" translate="yes" xml:space="preserve">
          <source>Removes redundant portions of file specifications and returns results in native syntax unless Unix filename reporting has been enabled.</source>
          <target state="translated">Unix 파일 이름보고가 활성화되어 있지 않으면 파일 사양의 중복 부분을 제거하고 기본 구문으로 결과를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="343f1c2f52c3d8dcf7da53d9d80db009530f49dd" translate="yes" xml:space="preserve">
          <source>Removes the elements designated by OFFSET and LENGTH from an array, and replaces them with the elements of LIST, if any. In list context, returns the elements removed from the array. In scalar context, returns the last element removed, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no elements are removed. The array grows or shrinks as necessary. If OFFSET is negative then it starts that far from the end of the array. If LENGTH is omitted, removes everything from OFFSET onward. If LENGTH is negative, removes the elements from OFFSET onward except for -LENGTH elements at the end of the array. If both OFFSET and LENGTH are omitted, removes everything. If OFFSET is past the end of the array and a LENGTH was provided, Perl issues a warning, and splices at the end of the array.</source>
          <target state="translated">배열에서 OFFSET 및 LENGTH로 지정된 요소를 제거하고 LIST의 요소 (있는 경우)로 바꿉니다. 목록 컨텍스트에서 배열에서 제거 된 요소를 반환합니다. 스칼라 컨텍스트에서 마지막으로 제거 된 요소를 반환하거나 요소가 제거되지 않으면 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . 필요에 따라 배열이 커지거나 줄어 듭니다. OFFSET이 음수이면 배열 끝에서 시작합니다. LENGTH를 생략하면 OFFSET부터 모든 항목이 제거됩니다. LENGTH가 음수이면 배열 끝의 -LENGTH 요소를 제외하고 OFFSET에서 요소를 제거합니다. OFFSET과 LENGTH를 모두 생략하면 모든 것이 제거됩니다. OFFSET이 어레이의 끝을 지났고 LENGTH가 제공된 경우 Perl은 경고를 발행하고 어레이의 끝에 스플 라이스합니다.</target>
        </trans-unit>
        <trans-unit id="1e5f1083ce2b66e546ddef1a96560cdca11f2193" translate="yes" xml:space="preserve">
          <source>Removes the elements designated by OFFSET and LENGTH from an array, and replaces them with the elements of LIST, if any. In list context, returns the elements removed from the array. In scalar context, returns the last element removed, or &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no elements are removed. The array grows or shrinks as necessary. If OFFSET is negative then it starts that far from the end of the array. If LENGTH is omitted, removes everything from OFFSET onward. If LENGTH is negative, removes the elements from OFFSET onward except for -LENGTH elements at the end of the array. If both OFFSET and LENGTH are omitted, removes everything. If OFFSET is past the end of the array and a LENGTH was provided, Perl issues a warning, and splices at the end of the array.</source>
          <target state="translated">배열에서 OFFSET 및 LENGTH로 지정된 요소를 제거하고 LIST의 요소 (있는 경우)로 바꿉니다. 목록 컨텍스트에서 배열에서 제거 된 요소를 반환합니다. 스칼라 컨텍스트에서 마지막으로 제거 된 요소를 반환하거나 요소가 제거되지 않으면 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . 필요에 따라 배열이 커지거나 줄어 듭니다. OFFSET이 음수이면 배열 끝에서 시작합니다. LENGTH를 생략하면 OFFSET부터 모든 항목이 제거됩니다. LENGTH가 음수이면 배열 끝의 -LENGTH 요소를 제외하고 OFFSET에서 요소를 제거합니다. OFFSET과 LENGTH를 모두 생략하면 모든 것이 제거됩니다. OFFSET이 어레이의 끝을 지났고 LENGTH가 제공된 경우 Perl은 경고를 발행하고 어레이의 끝에 스플 라이스합니다.</target>
        </trans-unit>
        <trans-unit id="4d4d21ffe02b9208cd41895cba1b6ac56478169b" translate="yes" xml:space="preserve">
          <source>Removes the files listed in a $packlist_file.</source>
          <target state="translated">$ packlist_file에 나열된 파일을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="31c8fa888188962e0f82082eb5ec899f29cb7f2f" translate="yes" xml:space="preserve">
          <source>Removes the last filter that was applied to the DBM file associated with &lt;code&gt;$db&lt;/code&gt; , if present.</source>
          <target state="translated">&lt;code&gt;$db&lt;/code&gt; 와 연관된 DBM 파일에 적용된 마지막 필터를 제거합니다 (있는 경우).</target>
        </trans-unit>
        <trans-unit id="958639ea0aa2c2aa0215e5881cb6e9eecf4443b5" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then it immediately (i.e., non-blocking) returns whatever items there are on the queue. If the queue is empty, then &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">큐 헤드에서 요청 된 항목 수 (기본값은 1)를 제거하고이를 리턴합니다. 대기열에 요청 된 수보다 적은 수의 항목이 포함되어 있으면 대기열에있는 항목을 즉시 (즉, 비 차단) 반환합니다. 큐가 비어 있으면 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="cec50374edbc42fbde5226187a161063372e5a25" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then the thread will be blocked until the requisite number of items are available (i.e., until other threads &amp;lt;enqueue&amp;gt; more items).</source>
          <target state="translated">큐 헤드에서 요청 된 항목 수 (기본값은 1)를 제거하고이를 리턴합니다. 대기열에 요청 된 항목 수보다 적은 수의 항목이 있으면 필요한 수의 항목을 사용할 수있을 때까지 (예 : 다른 스레드가 더 많은 항목을 큐에 넣을 때까지) 스레드가 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="6df6cfbdfddf1fac82ca5fddb9891f3ddb2098dd" translate="yes" xml:space="preserve">
          <source>Removes the requested number of items (default is 1) from the head of the queue, and returns them. If the queue contains fewer than the requested number of items, then the thread will be blocked until the requisite number of items are available, or until the timeout is reached. If the timeout is reached, it returns whatever items there are on the queue, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the queue is empty.</source>
          <target state="translated">큐 헤드에서 요청 된 항목 수 (기본값은 1)를 제거하고이를 리턴합니다. 대기열에 요청 된 수보다 적은 수의 항목이 있으면 필요한 수의 항목을 사용할 수있을 때까지 또는 시간 초과에 도달 할 때까지 스레드가 차단됩니다. 시간 초과에 도달하면 대기열에있는 항목을 반환하거나 대기열이 비어 있으면 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8f94e09734e307d7590468dedfa423f230c227f4" translate="yes" xml:space="preserve">
          <source>Removes the restriction on the %hash's keyset.</source>
          <target state="translated">% hash의 키 세트에 대한 제한을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="05f548f5216a2bff8836328b3856ebee4fa508c8" translate="yes" xml:space="preserve">
          <source>Removing things is a much more dangerous proposition than creating things. As such, there are certain conditions that &lt;code&gt;remove_tree&lt;/code&gt; may encounter that are so dangerous that the only sane action left is to kill the program.</source>
          <target state="translated">물건을 제거하는 것은 물건을 만드는 것보다 훨씬 위험한 제안입니다. 따라서 &lt;code&gt;remove_tree&lt;/code&gt; 에서 발생할 수 있는 특정 조건 이 있으므로 위험한 유일한 조치는 프로그램을 종료하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="80beee49629b23b85284ecc1862bdfaca20ee299" translate="yes" xml:space="preserve">
          <source>Rename a file on the remote FTP server from &lt;code&gt;OLDNAME&lt;/code&gt; to &lt;code&gt;NEWNAME&lt;/code&gt; . This is done by sending the RNFR and RNTO commands.</source>
          <target state="translated">원격 FTP 서버의 파일 이름을 &lt;code&gt;OLDNAME&lt;/code&gt; 에서 &lt;code&gt;NEWNAME&lt;/code&gt; 으로 바꾸십시오 . 이는 RNFR 및 RNTO 명령을 전송하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="dc3012ff7da46214e954150145eb0f38e1b162b8" translate="yes" xml:space="preserve">
          <source>Rename the current file to $new_name.</source>
          <target state="translated">현재 파일의 이름을 $ new_name으로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="2143b98f30e20a57eafd5e99d8e4626187d94b19" translate="yes" xml:space="preserve">
          <source>Rename the file of the in-memory archive to $new_name.</source>
          <target state="translated">메모리 내 아카이브의 파일 이름을 $ new_name으로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="3190f9fa89e7c1a578490836d655b0eef2259cde" translate="yes" xml:space="preserve">
          <source>Renamed to &lt;code&gt;Class::Struct&lt;/code&gt; and modified by Jim Miner, 1997-04-02.</source>
          <target state="translated">1997 년 2 월 22 일 Jim Miner 가 &lt;code&gt;Class::Struct&lt;/code&gt; 로 이름을 바꾸고 수정했습니다.</target>
        </trans-unit>
        <trans-unit id="746933bbfadd0d015fb0f5cef0f99f8789b8c3b4" translate="yes" xml:space="preserve">
          <source>Render Pod with ANSI color escapes</source>
          <target state="translated">ANSI 색상 이스케이프가있는 렌더 포드</target>
        </trans-unit>
        <trans-unit id="d353704fc90d73163b33a1077fefe42f84d9a425" translate="yes" xml:space="preserve">
          <source>Render Pod with terminal escapes</source>
          <target state="translated">터미널 이스케이프가있는 렌더 포드</target>
        </trans-unit>
        <trans-unit id="96a06e164621da6212cb23a64e613b86284d9b8a" translate="yes" xml:space="preserve">
          <source>Renderings usually include a banner line identifying the function name or stringified subref. This suppresses the printing of the banner.</source>
          <target state="translated">렌더링에는 일반적으로 함수 이름 또는 문자열 화 된 하위 참조를 식별하는 배너 라인이 포함됩니다. 배너 인쇄가 억제됩니다.</target>
        </trans-unit>
        <trans-unit id="2465d0a6e5df0d7a39af6d7760dce88c9cf728d8" translate="yes" xml:space="preserve">
          <source>Renders code in a typewriter font, or gives some other indication that this represents program text (&quot;&lt;code&gt;C&amp;lt;gmtime($^T)&amp;gt;&lt;/code&gt; &quot;) or some other form of computerese (&quot;&lt;code&gt;C&amp;lt;drwxr-xr-x&amp;gt;&lt;/code&gt; &quot;).</source>
          <target state="translated">코드를 타자기 글꼴로 렌더링하거나 프로그램 텍스트 ( &quot; &lt;code&gt;C&amp;lt;gmtime($^T)&amp;gt;&lt;/code&gt; &quot;) 또는 다른 형태의 컴퓨터 ( &quot; &lt;code&gt;C&amp;lt;drwxr-xr-x&amp;gt;&lt;/code&gt; &quot;)를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="de8802423802e5328366ef6d324218b46f675df5" translate="yes" xml:space="preserve">
          <source>Renders only bar() from foo.pl. To see main, drop the ',bar'. To see both, add ',-main'</source>
          <target state="translated">foo.pl에서 bar () 만 렌더링합니다. 메인을 보려면 ', bar'를 삭제하십시오. 둘 다 보려면 ', -main'을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="1d7ffe27769737b77fe22a1b19e1f80904630a03" translate="yes" xml:space="preserve">
          <source>Reopen STDIN, STDOUT, and STDERR so they're not connected to the old tty.</source>
          <target state="translated">STDIN, STDOUT 및 STDERR을 다시 열어 이전 tty에 연결되지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="50403581fa8d364c53f5c65182aae61f98504ad4" translate="yes" xml:space="preserve">
          <source>Reopens file and restores pointer; if function fails, underlying filehandle may be closed, or pointer may be in a different position. (VMS)</source>
          <target state="translated">파일을 다시 열고 포인터를 복원합니다. 함수가 실패하면 기본 파일 핸들이 닫히거나 포인터가 다른 위치에있을 수 있습니다. (VMS)</target>
        </trans-unit>
        <trans-unit id="7d932850e50913dc3862aecc2a74417d65c0b852" translate="yes" xml:space="preserve">
          <source>Repeat Step (2) in respect of the second operand.</source>
          <target state="translated">두 번째 피연산자에 대해 단계 (2)를 반복하십시오.</target>
        </trans-unit>
        <trans-unit id="bb07dc7ea8229d420ce2ac387c7ea0a202d45562" translate="yes" xml:space="preserve">
          <source>Repeat last &lt;code&gt;n&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; command.</source>
          <target state="translated">마지막 &lt;code&gt;n&lt;/code&gt; 또는 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 명령을 반복하십시오 .</target>
        </trans-unit>
        <trans-unit id="08efeab209d66736e16ea6a2dfdea9bdfe05db92" translate="yes" xml:space="preserve">
          <source>Repeated Patterns Matching a Zero-length Substring</source>
          <target state="translated">길이가 0 인 하위 문자열과 일치하는 반복 패턴</target>
        </trans-unit>
        <trans-unit id="fde43df7c92f017fb14d13de3aae28a8813ac4fe" translate="yes" xml:space="preserve">
          <source>Repeating Format Lines</source>
          <target state="translated">포맷 라인 반복</target>
        </trans-unit>
        <trans-unit id="43149858d5d5f79dfa2faccd2ca041cee85da454" translate="yes" xml:space="preserve">
          <source>Repeating a character in a character class has no effect; it's considered to be in the set only once.</source>
          <target state="translated">문자 클래스에서 문자를 반복해도 효과가 없습니다. 한 번만 세트에있는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="a85fe8562748724d58fdb6dc77267e0147ad4210" translate="yes" xml:space="preserve">
          <source>Replace &lt;code&gt;5.22.0&lt;/code&gt; with your respective version of Perl.</source>
          <target state="translated">&lt;code&gt;5.22.0&lt;/code&gt; 을 각각의 Perl 버전으로 교체하십시오 .</target>
        </trans-unit>
        <trans-unit id="18962e5ac47b68c698be2cba09a95de209f42f3c" translate="yes" xml:space="preserve">
          <source>Replace functions with equivalents which succeed or die</source>
          <target state="translated">성공하거나 죽는 등가물로 기능 교체</target>
        </trans-unit>
        <trans-unit id="1c92ec8d2541924e350a8c75b34361906527bb30" translate="yes" xml:space="preserve">
          <source>Replace functions with ones that succeed or die with lexical scope</source>
          <target state="translated">어휘 범위로 성공하거나 죽는 함수로 함수 대체</target>
        </trans-unit>
        <trans-unit id="8c07f10b4913cc3e1911ba0677449ebf74f893b6" translate="yes" xml:space="preserve">
          <source>Replace the current content of the file with the new content. This only affects the in-memory archive, not the on-disk version until you write it.</source>
          <target state="translated">파일의 현재 내용을 새 내용으로 바꿉니다. 이것은 메모리 내 아카이브에만 영향을 미치며, 디스크를 작성할 때까지 온 디스크 버전에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bcf1e4e8bdb2fe628a8abd000e1f839c770063f2" translate="yes" xml:space="preserve">
          <source>Replacing &lt;a href=&quot;#precision()&quot;&gt;precision()&lt;/a&gt; with &lt;a href=&quot;#accuracy()&quot;&gt;accuracy()&lt;/a&gt; is probably not what you want, either:</source>
          <target state="translated">교체 &lt;a href=&quot;#precision()&quot;&gt;정밀 ()&lt;/a&gt; 와 &lt;a href=&quot;#accuracy()&quot;&gt;정확성은 ()&lt;/a&gt; 당신도, 원하지 않는 것을 아마 :</target>
        </trans-unit>
        <trans-unit id="04c3d01a224d7079c4a6658a1f97bf7007d32ca6" translate="yes" xml:space="preserve">
          <source>Replacing &lt;code&gt;quotewords('\s+', 0, q{this   is...})&lt;/code&gt; with &lt;code&gt;shellwords(q{this   is...})&lt;/code&gt; is a simpler way to accomplish the same thing.</source>
          <target state="translated">교체 &lt;code&gt;quotewords('\s+', 0, q{this is...})&lt;/code&gt; 와 &lt;code&gt;shellwords(q{this is...})&lt;/code&gt; 같은 일을 수행하는 간단한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="c3db867fce0e13de8877d0bea95da44c88a5728a" translate="yes" xml:space="preserve">
          <source>Report &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; &amp;amp;subroutine&lt;/code&gt; as well.</source>
          <target state="translated">보고서 &lt;code&gt;&lt;a href=&quot;functions/goto&quot;&gt;goto&lt;/a&gt; &amp;amp;subroutine&lt;/code&gt; 뿐만 아니라.</target>
        </trans-unit>
        <trans-unit id="8d6dfbcd24681e5daa1341fd47a225dd5d1dd5cd" translate="yes" xml:space="preserve">
          <source>Report successful build on this system to perl porters. Forces &lt;b&gt;-S&lt;/b&gt; and &lt;b&gt;-C&lt;/b&gt;. Forces and supplies values for &lt;b&gt;-s&lt;/b&gt; and &lt;b&gt;-b&lt;/b&gt;. Only prompts for a return address if it cannot guess it (for use with &lt;b&gt;make&lt;/b&gt;). Honors return address specified with &lt;b&gt;-r&lt;/b&gt;. You can use this with &lt;b&gt;-v&lt;/b&gt; to get more complete data. Only makes a report if this system is less than 60 days old.</source>
          <target state="translated">이 시스템에서 성공적인 빌드를 펄 포터에게보고하십시오. &lt;b&gt;-S&lt;/b&gt; 및 &lt;b&gt;-C를&lt;/b&gt; 강제합니다 . &lt;b&gt;-s&lt;/b&gt; 및 &lt;b&gt;-b&lt;/b&gt; 값을 강제로 제공합니다 . 리턴 주소를 추측 할 수없는 경우에만 프롬프트를 표시합니다 ( &lt;b&gt;make&lt;/b&gt; 와 함께 &lt;b&gt;사용&lt;/b&gt; ). &lt;b&gt;-r로&lt;/b&gt; 지정된 주소를 반환합니다 . 이를 &lt;b&gt;-v&lt;/b&gt; 와 함께 사용 하면보다 완전한 데이터를 얻을 수 있습니다 . 이 시스템이 60 일 미만인 경우에만 보고서를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="046a0ac0fa082001e63886b95b1ea0a1b3dc1186" translate="yes" xml:space="preserve">
          <source>Report unsuccessful build on this system. Forces &lt;b&gt;-C&lt;/b&gt;. Forces and supplies a value for &lt;b&gt;-s&lt;/b&gt;, then requires you to edit the report and say what went wrong. Alternatively, a prepared report may be supplied using &lt;b&gt;-f&lt;/b&gt;. Only prompts for a return address if it cannot guess it (for use with &lt;b&gt;make&lt;/b&gt;). Honors return address specified with &lt;b&gt;-r&lt;/b&gt;. You can use this with &lt;b&gt;-v&lt;/b&gt; to get more complete data. Only makes a report if this system is less than 60 days old.</source>
          <target state="translated">이 시스템에서 실패한 빌드를보고하십시오. 힘 &lt;b&gt;-C&lt;/b&gt; . &lt;b&gt;-s&lt;/b&gt; 값을 강제로 제공하고 제공 한 다음 보고서를 편집하고 무엇이 잘못되었는지 말해야합니다. 또는 &lt;b&gt;-f를&lt;/b&gt; 사용하여 준비된 보고서를 제공 할 수 있습니다 . 리턴 주소를 추측 할 수없는 경우에만 프롬프트를 표시합니다 ( &lt;b&gt;make&lt;/b&gt; 와 함께 &lt;b&gt;사용&lt;/b&gt; ). &lt;b&gt;-r로&lt;/b&gt; 지정된 주소를 반환합니다 . 이를 &lt;b&gt;-v&lt;/b&gt; 와 함께 사용 하면보다 완전한 데이터를 얻을 수 있습니다 . 이 시스템이 60 일 미만인 경우에만 보고서를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="ea266d59d6bb66aa6058e452a22d24952cd32375" translate="yes" xml:space="preserve">
          <source>Reporting Warnings from a Module</source>
          <target state="translated">모듈에서 경고보고</target>
        </trans-unit>
        <trans-unit id="ffdffdcb8b2df49b8674c54cfb9fc8b8d0483959" translate="yes" xml:space="preserve">
          <source>Reports on the SV's length in bytes, calling length magic if available, but does not set the UTF8 flag on the sv. It will fall back to 'get' magic if there is no 'length' magic, but with no indication as to whether it called 'get' magic. It assumes the sv is a PVMG or higher. Use sv_len() instead.</source>
          <target state="translated">SV의 길이를 바이트 단위로보고하고 가능한 경우 length 매직을 호출하지만 sv에 UTF8 플래그를 설정하지는 않습니다. '길이'마법이 없으면 'get'마법으로 대체되지만 'get'마법이라고 불렀는지 여부는 표시되지 않습니다. sv가 PVMG 이상이라고 가정합니다. 대신 sv_len ()을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="df0cd51690b308d83c8c2a5a9e2a3a4a64f9b99c" translate="yes" xml:space="preserve">
          <source>Reports the name of a directory only AFTER all its entries have been reported. Entry point &lt;code&gt;finddepth()&lt;/code&gt; is a shortcut for specifying &lt;code&gt;{ bydepth =&amp;gt; 1 }&lt;/code&gt; in the first argument of &lt;code&gt;find()&lt;/code&gt; .</source>
          <target state="translated">모든 항목이보고 된 후에 만 ​​디렉토리 이름을보고합니다. 엔트리 포인트 &lt;code&gt;finddepth()&lt;/code&gt; 특정하기위한 단축 인 &lt;code&gt;{ bydepth =&amp;gt; 1 }&lt;/code&gt; 의 첫번째 인수 &lt;code&gt;find()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de3875b10d66f76adea8b68994e05e1f77fbfd96" translate="yes" xml:space="preserve">
          <source>Reports whether or not a given result has passed. Anything which is &lt;b&gt;not&lt;/b&gt; a test result returns true. This is merely provided as a convenient shortcut which allows you to do this:</source>
          <target state="translated">주어진 결과가 통과했는지 여부를보고합니다. 테스트 결과 가 &lt;b&gt;아닌&lt;/b&gt; 것은 true를 반환합니다. 이것은 단지 당신이 이것을 할 수있는 편리한 바로 가기로 제공됩니다 :</target>
        </trans-unit>
        <trans-unit id="5162ff86f407ffbb175a07ee29f628d9cf194242" translate="yes" xml:space="preserve">
          <source>Reports whether or not a given result has passed. Anything which is &lt;b&gt;not&lt;/b&gt; a test result returns true. This is merely provided as a convenient shortcut.</source>
          <target state="translated">주어진 결과가 통과했는지 여부를보고합니다. 테스트 결과 가 &lt;b&gt;아닌&lt;/b&gt; 것은 true를 반환합니다. 이것은 단지 편리한 지름길로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="df62cf802fb1309bc3020785649077d1b279257f" translate="yes" xml:space="preserve">
          <source>Repository available at &lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker&quot;&gt;https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker&lt;/a&gt;.</source>
          <target state="translated">리포지토리는 &lt;a href=&quot;https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker&quot;&gt;https://github.com/Perl-Toolchain-Gang/ExtUtils-MakeMaker&lt;/a&gt; 에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ae96cfe64a1056e26aed0b66585fcf6f95903fc4" translate="yes" xml:space="preserve">
          <source>Represent &quot;section&quot; attributes of L codes</source>
          <target state="translated">L 코드의 &quot;섹션&quot;속성을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5cad6326d95f5c394a2a0ece052b89d37477f9a5" translate="yes" xml:space="preserve">
          <source>Represents a single test 'job'.</source>
          <target state="translated">단일 테스트 '작업'을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="5e8100db6b0c279e38c95d1ae67d91b656c907fd" translate="yes" xml:space="preserve">
          <source>Request For Comment, which despite the timid connotations is the name of a series of important standards documents.</source>
          <target state="translated">소심한 의미에도 불구하고 일련의 중요한 표준 문서의 이름 인 의견 요청.</target>
        </trans-unit>
        <trans-unit id="0c7883267dffd6a71ad1378c3d92086cbab7d043" translate="yes" xml:space="preserve">
          <source>Request a queue run for the DOMAIN given.</source>
          <target state="translated">주어진 DOMAIN에 대한 큐 실행을 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="48a73e37efc9cbef432a388c9fbf6879bd9ac341" translate="yes" xml:space="preserve">
          <source>Request help text (a short summary of commands that are understood by this implementation) from the server. Returns the text or undef upon failure.</source>
          <target state="translated">서버에 도움말 텍스트 (이 구현에서 이해하는 간단한 명령 요약)를 요청하십시오. 텍스트를 반환하거나 실패시 undef.</target>
        </trans-unit>
        <trans-unit id="aa1612b368042a2309ea4276ed98c83bd230e51f" translate="yes" xml:space="preserve">
          <source>Request help text from the server. Returns the text or undef upon failure</source>
          <target state="translated">서버에서 도움말을 요청하십시오. 텍스트를 반환하거나 실패시 undef</target>
        </trans-unit>
        <trans-unit id="f4100a502a9c8519f4e6dbb571077788846b32bb" translate="yes" xml:space="preserve">
          <source>Request less of something</source>
          <target state="translated">덜 요청</target>
        </trans-unit>
        <trans-unit id="ddcdf3ecd72e075dd35b1b9f6a5a6a70bbfea05a" translate="yes" xml:space="preserve">
          <source>Request remote server status.</source>
          <target state="translated">원격 서버 상태를 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="06d352bc8e04baba583b9f5e42d86f03d7102ebd" translate="yes" xml:space="preserve">
          <source>Request remote server system identification.</source>
          <target state="translated">원격 서버 시스템 식별을 요청하십시오.</target>
        </trans-unit>
        <trans-unit id="b5945a68b281549f7a7e833e39905826baf9a2a3" translate="yes" xml:space="preserve">
          <source>Request the server to expand the given address Returns an array which contains the text read from the server.</source>
          <target state="translated">지정된 주소를 확장하도록 서버에 요청 서버에서 읽은 텍스트가 포함 된 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2c10131bb29894d768d5b1a8f80ebec41f9e1827" translate="yes" xml:space="preserve">
          <source>Requesting a particular byte ordering may be necessary when you work with binary data coming from some specific architecture whereas your program could run on a totally different system. As an example, assume you have 24 bytes containing a stack frame as it happens on an Intel 8086:</source>
          <target state="translated">특정 아키텍처에서 온 이진 데이터로 작업 할 때 특정 바이트 순서를 요청해야하는 반면 프로그램은 완전히 다른 시스템에서 실행될 수 있습니다. 예를 들어, Intel 8086에서 발생하는 스택 프레임을 포함하는 24 바이트가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="cae9a1066366d922cf90824c30342dd984d71dc4" translate="yes" xml:space="preserve">
          <source>Requesting an unknown identifier is a fatal error.</source>
          <target state="translated">알 수없는 식별자를 요청하는 것은 치명적인 오류입니다.</target>
        </trans-unit>
        <trans-unit id="3bdde830ee962731505722af98db043d4e2b3e60" translate="yes" xml:space="preserve">
          <source>Requests that a human-readable string representation of the numeric address be returned directly, rather than performing a name resolve operation that may convert it into a hostname. This will also avoid potentially-blocking network IO.</source>
          <target state="translated">호스트 이름으로 변환 할 수있는 이름 확인 작업을 수행하지 않고 숫자로 된 사람이 읽을 수있는 문자열 표현을 직접 반환하도록 요청합니다. 또한 잠재적으로 네트워크 IO를 차단하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="34dc163da627f35458c83c8246ac1cb61e2f2f2b" translate="yes" xml:space="preserve">
          <source>Requests that the port number be returned directly as a number representation rather than performing a name resolve operation that may convert it into a service name.</source>
          <target state="translated">포트 번호를 서비스 이름으로 변환 할 수있는 이름 확인 조작을 수행하지 않고 숫자 표시로 직접 리턴하도록 요청합니다.</target>
        </trans-unit>
        <trans-unit id="bfa99d77de6103db99e699a2ff8298f2936928b5" translate="yes" xml:space="preserve">
          <source>Require that at least version</source>
          <target state="translated">최소한 버전이 필요합니다</target>
        </trans-unit>
        <trans-unit id="22fcedf182377afe7d9937912389585bf898ccac" translate="yes" xml:space="preserve">
          <source>Required Software for Compiling Perl on QNX4</source>
          <target state="translated">QNX4에서 Perl을 컴파일하는 데 필요한 소프트웨어</target>
        </trans-unit>
        <trans-unit id="b070a841a6544f8652efff9a9903ca945164a11a" translate="yes" xml:space="preserve">
          <source>Requires a MODULE name as an argument, returns the perl version when that module first appeared in core as ordered by perl version number or undef ( in scalar context ) or an empty list ( in list context ) if that module is not in core.</source>
          <target state="translated">MODULE 이름을 인수로 필요로합니다. 해당 모듈이 코어에없는 경우 해당 모듈이 perl 버전 번호 또는 undef (스칼라 컨텍스트에서) 또는 빈 목록 (목록 컨텍스트에서)에 따라 순서대로 코어에 나타날 때 perl 버전을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8cebc1b242bdc66e2f3ffebb8b55b2acf5d50d89" translate="yes" xml:space="preserve">
          <source>Requires a MODULE name as an argument, returns the perl version when that module first appeared in core as ordered by release date or undef ( in scalar context ) or an empty list ( in list context ) if that module is not in core.</source>
          <target state="translated">인수로 MODULE 이름이 필요하며, 해당 모듈이 코어에없는 경우 릴리스 날짜 또는 undef (스칼라 컨텍스트에서) 또는 비어있는 목록 (목록 컨텍스트에서)에 따라 해당 모듈이 코어에 처음 나타날 때 perl 버전을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="728771158c1bbd5031639e2b1c1d32b18089fed7" translate="yes" xml:space="preserve">
          <source>Requiring end-user programmers to change just a few language constructs, even language constructs which no well-educated developer would ever intentionally use is tantamount to saying &quot;you should not upgrade to a new release of Perl unless you have 100% test coverage and can do a full manual audit of your codebase.&quot; If we were to have tools capable of reliably upgrading Perl source code from one version of Perl to another, this concern could be significantly mitigated.</source>
          <target state="translated">최종 사용자 프로그래머에게 몇 가지 언어 구조 만 변경하도록 요구하며, 잘 교육받은 개발자가 의도적으로 사용하지 않은 언어 구조조차도 &quot;100 % 테스트 적용 범위를 갖추지 않고는 코드베이스에 대한 전체 수동 감사를 수행하십시오. &quot; Perl 소스 코드를 Perl의 한 버전에서 다른 버전으로 안정적으로 업그레이드 할 수있는 도구가 있다면 이러한 문제가 크게 완화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00a9cad2d4b28b35c347301315fac8cb2ab7f4ff" translate="yes" xml:space="preserve">
          <source>Requiring this simple adjustment allows the returned arrays to be significantly smaller than otherwise, up to a factor of 10, speeding up searching through them.</source>
          <target state="translated">이 간단한 조정이 필요하면 반환 된 배열이 다른 것보다 훨씬 작을 수 있으며 최대 10 배까지 빠르게 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f7aaacc976d0136a0413180e35231597c9fc38df" translate="yes" xml:space="preserve">
          <source>Reset back to the default value &lt;code&gt;1&lt;/code&gt; when you are finished.</source>
          <target state="translated">완료되면 기본값 &lt;code&gt;1&lt;/code&gt; 로 다시 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="36172a6b379cf46ef3ee9780179fcadb80e672d8" translate="yes" xml:space="preserve">
          <source>Reset the status of the remote POP3 server. This includes resetting the status of all messages to not be deleted.</source>
          <target state="translated">원격 POP3 서버의 상태를 재설정하십시오. 여기에는 삭제하지 않을 모든 메시지의 상태를 재설정하는 것이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4151da3198bcfc1a5da89032ab14cc889a12317e" translate="yes" xml:space="preserve">
          <source>Reset the status of the server. This may be called after a message has been initiated, but before any data has been sent, to cancel the sending of the message.</source>
          <target state="translated">서버 상태를 재설정하십시오. 메시지가 시작된 후, 그러나 데이터 전송이 시작되기 전에 메시지 전송을 취소하기 위해 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="02dc3ed31f4b7eb772495a9ee888a245d069745b" translate="yes" xml:space="preserve">
          <source>Resets all the output filehandles back to their defaults.</source>
          <target state="translated">모든 출력 파일 핸들을 기본값으로 다시 설정합니다.</target>
        </trans-unit>
        <trans-unit id="df728e7bf105ac7f581a9dd0e636eb42c3068620" translate="yes" xml:space="preserve">
          <source>Resetting &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; is not recommended because you'll wipe out your &lt;code&gt;@ARGV&lt;/code&gt; and &lt;code&gt;@INC&lt;/code&gt; arrays and your &lt;code&gt;%ENV&lt;/code&gt; hash. Resets only package variables; lexical variables are unaffected, but they clean themselves up on scope exit anyway, so you'll probably want to use them instead. See &lt;a href=&quot;#my&quot;&gt;my&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@ARGV&lt;/code&gt; 및 &lt;code&gt;@INC&lt;/code&gt; 배열과 &lt;code&gt;%ENV&lt;/code&gt; 해시를 지우므로 &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; 재설정 하지 않는 것이 좋습니다 . 패키지 변수 만 재설정합니다. 어휘 변수는 영향을받지 않지만 어쨌든 스코프 종료에서 스스로 정리되므로 대신 사용하는 것이 좋습니다. &lt;a href=&quot;#my&quot;&gt;내&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8f162e60a9bad148199eb54adf329825dd227d7" translate="yes" xml:space="preserve">
          <source>Resetting &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; is not recommended because you'll wipe out your &lt;code&gt;@ARGV&lt;/code&gt; and &lt;code&gt;@INC&lt;/code&gt; arrays and your &lt;code&gt;%ENV&lt;/code&gt; hash. Resets only package variables; lexical variables are unaffected, but they clean themselves up on scope exit anyway, so you'll probably want to use them instead. See &lt;a href=&quot;my&quot;&gt;my&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;@ARGV&lt;/code&gt; 및 &lt;code&gt;@INC&lt;/code&gt; 배열과 &lt;code&gt;%ENV&lt;/code&gt; 해시를 지우므로 &lt;code&gt;&quot;A-Z&quot;&lt;/code&gt; 재설정 하지 않는 것이 좋습니다 . 패키지 변수 만 재설정합니다. 어휘 변수는 영향을받지 않지만 어쨌든 스코프 종료에서 스스로 정리되므로 대신 사용하는 것이 좋습니다. &lt;a href=&quot;my&quot;&gt;내&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac7f958cc028becfb4b2bec9c474bd2d5e8b6095" translate="yes" xml:space="preserve">
          <source>Resolve</source>
          <target state="translated">Resolve</target>
        </trans-unit>
        <trans-unit id="76f899686a2e586116d54bb4545f857f59fe7fe9" translate="yes" xml:space="preserve">
          <source>Resolves a POD link target (typically a module or POD file name) and section name to a URL. The resulting link will be returned for the above examples as:</source>
          <target state="translated">POD 링크 대상 (일반적으로 모듈 또는 POD 파일 이름) 및 섹션 이름을 URL로 확인합니다. 위의 예제에서 결과 링크는 다음과 같이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="4fe8cda39bfcaf85efe77cca4bd558244a35eb77" translate="yes" xml:space="preserve">
          <source>Resolves a man page link target and numeric section to a URL. The resulting link will be returned for the above examples as:</source>
          <target state="translated">매뉴얼 페이지 링크 대상 및 숫자 섹션을 URL로 해결합니다. 위의 예제에서 결과 링크는 다음과 같이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="1f335f62fb1319094ed8c85a104148776a182ed6" translate="yes" xml:space="preserve">
          <source>Resolving hostnames into IP addresses</source>
          <target state="translated">호스트 이름을 IP 주소로 확인</target>
        </trans-unit>
        <trans-unit id="817f6d32d45791e684f36eedfcfbf9aabc013c92" translate="yes" xml:space="preserve">
          <source>Resource limits</source>
          <target state="translated">자원 한도</target>
        </trans-unit>
        <trans-unit id="35aa9ad49c5f86755dbf02133b7dfb7ed2b55215" translate="yes" xml:space="preserve">
          <source>Respects current &lt;code&gt;LC_CTYPE&lt;/code&gt; locale for code points &amp;lt; 256; and uses Unicode rules for the remaining code points (this last can only happen if the UTF8 flag is also set). See &lt;a href=&quot;../perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">코드 포인트 &amp;lt;256에 대한 현재 &lt;code&gt;LC_CTYPE&lt;/code&gt; 로캘을 존중합니다 . 나머지 코드 포인트에 대해 유니 코드 규칙을 사용합니다 (UTF8 플래그가 설정된 경우에만 마지막에 발생할 수 있음). &lt;a href=&quot;../perllocale&quot;&gt;perllocale을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b9857e06bf03652fa8f40c743891977f44df6226" translate="yes" xml:space="preserve">
          <source>Respects current &lt;code&gt;LC_CTYPE&lt;/code&gt; locale for code points &amp;lt; 256; and uses Unicode rules for the remaining code points (this last can only happen if the UTF8 flag is also set). See &lt;a href=&quot;perllocale&quot;&gt;perllocale&lt;/a&gt;.</source>
          <target state="translated">코드 포인트 &amp;lt;256에 대한 현재 &lt;code&gt;LC_CTYPE&lt;/code&gt; 로캘을 존중합니다 . 나머지 코드 포인트에 대해 유니 코드 규칙을 사용합니다 (UTF8 플래그가 설정된 경우에만 마지막에 발생할 수 있음). &lt;a href=&quot;perllocale&quot;&gt;perllocale을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4bb5035288ee0c0593db52c81b02f88d18586fd6" translate="yes" xml:space="preserve">
          <source>Restart the debugger by &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt;ing a new session. We try to maintain your history across this, but internal settings and command-line options may be lost.</source>
          <target state="translated">새 세션 을 &lt;code&gt;&lt;a href=&quot;functions/exec&quot;&gt;exec()&lt;/a&gt;&lt;/code&gt; 하여 디버거를 다시 시작하십시오 . 이 기간 동안 기록을 유지하려고하지만 내부 설정 및 명령 줄 옵션이 손실 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63a793362ef3ca43722345085de3438d880f6a16" translate="yes" xml:space="preserve">
          <source>Restore the old pad saved into the local variable opad by PAD_SAVE_LOCAL()</source>
          <target state="translated">PAD_SAVE_LOCAL ()에 의해 로컬 변수 opad에 저장된 이전 패드를 복원</target>
        </trans-unit>
        <trans-unit id="4f1729fcc9821f2a0d1acba3f1a183f1116342c4" translate="yes" xml:space="preserve">
          <source>Restoring original @INC</source>
          <target state="translated">원본 @INC 복원</target>
        </trans-unit>
        <trans-unit id="5d11c1b413768fba80561ed7ba82544986011373" translate="yes" xml:space="preserve">
          <source>Restrict to only generating addresses for this protocol</source>
          <target state="translated">이 프로토콜에 대한 주소 만 생성하도록 제한</target>
        </trans-unit>
        <trans-unit id="ad27d2b05e664f67f8116bdd57edeef1987e5429" translate="yes" xml:space="preserve">
          <source>Restrict to only generating addresses in this address family</source>
          <target state="translated">이 주소 계열에서 주소 만 생성하도록 제한</target>
        </trans-unit>
        <trans-unit id="23b0370fc27402e85db8bdba7a00eab25a9ff0bd" translate="yes" xml:space="preserve">
          <source>Restrict to only generating addresses of this socket type</source>
          <target state="translated">이 소켓 유형의 주소 만 생성하도록 제한</target>
        </trans-unit>
        <trans-unit id="c16e1f0c25289d1e2f2b5219ef38e386a9adf34e" translate="yes" xml:space="preserve">
          <source>Restrict unsafe constructs</source>
          <target state="translated">안전하지 않은 구조 제한</target>
        </trans-unit>
        <trans-unit id="091038df15e856c37352b0be1f97c0135c975070" translate="yes" xml:space="preserve">
          <source>Restrict unsafe operations when compiling</source>
          <target state="translated">컴파일 할 때 안전하지 않은 작업 제한</target>
        </trans-unit>
        <trans-unit id="6dc4fcb6b9bae373de137f9cf069e3fd7447d402" translate="yes" xml:space="preserve">
          <source>Restricted hashes</source>
          <target state="translated">제한된 해시</target>
        </trans-unit>
        <trans-unit id="8617d55e624bcba9c7b74950b1041e1199647dc0" translate="yes" xml:space="preserve">
          <source>Restrictions of Perl on OpenVOS</source>
          <target state="translated">OpenVOS에서 Perl의 제한</target>
        </trans-unit>
        <trans-unit id="9a968126c8536966642d8125340baafc91d326de" translate="yes" xml:space="preserve">
          <source>Restricts the given %hash's set of keys to @keys. If @keys is not given it restricts it to its current keyset. No more keys can be added. delete() and exists() will still work, but will not alter the set of allowed keys. &lt;b&gt;Note&lt;/b&gt;: the current implementation prevents the hash from being bless()ed while it is in a locked state. Any attempt to do so will raise an exception. Of course you can still bless() the hash before you call lock_keys() so this shouldn't be a problem.</source>
          <target state="translated">주어진 % hash의 키 세트를 @keys로 제한합니다. @keys가 제공되지 않으면 현재 키 세트로 제한됩니다. 더 이상 키를 추가 할 수 없습니다. delete () 및 exist ()는 여전히 작동하지만 허용 된 키 세트를 변경하지는 않습니다. &lt;b&gt;참고&lt;/b&gt; : 현재 구현은 해시가 잠금 상태에있는 동안 해시가 축복되는 것을 방지합니다. 그렇게하려고 시도하면 예외가 발생합니다. 물론 lock_keys ()를 호출하기 전에 해시를 축복 () 할 수 있으므로 문제가되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a0ee06cbf0d3a077c8ec64125db655ac2b8a4f75" translate="yes" xml:space="preserve">
          <source>Result types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="396addc43726f471d8b20eaa47f9efcfd781e187" translate="yes" xml:space="preserve">
          <source>Resulting in the program</source>
          <target state="translated">프로그램 결과</target>
        </trans-unit>
        <trans-unit id="612e12d29278b5519294bc25cdaddffec6d0f1c6" translate="yes" xml:space="preserve">
          <source>Results</source>
          <target state="translated">Results</target>
        </trans-unit>
        <trans-unit id="2efc1923ac09640c75b64277892d583e2361bb83" translate="yes" xml:space="preserve">
          <source>Results are never tainted because otherwise even output from print, for example &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print(1/7)&lt;/a&gt;&lt;/code&gt;, should be tainted if &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; is in effect.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 로케일 이 유효한 경우 &lt;code&gt;&lt;a href=&quot;functions/print&quot;&gt;print(1/7)&lt;/a&gt;&lt;/code&gt; 와 같은 출력 결과물도 오염되어야하므로 결과가 오염되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="80229b8449770c6d400ff29bbd402430674d8e49" translate="yes" xml:space="preserve">
          <source>Results are never tainted.</source>
          <target state="translated">결과는 오염되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="910730d509932b84b34b414ac4c857477d1d0180" translate="yes" xml:space="preserve">
          <source>Results are tainted if a &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; form that includes &lt;code&gt;LC_CTYPE&lt;/code&gt; is in effect.</source>
          <target state="translated">&lt;code&gt;LC_CTYPE&lt;/code&gt; 을 포함 하는 &lt;code&gt;&lt;a href=&quot;functions/use&quot;&gt;use&lt;/a&gt; locale&lt;/code&gt; 양식이 유효한 경우 결과가 오염됩니다 .</target>
        </trans-unit>
        <trans-unit id="b6c3a225733e64bea8efa2629e852e0f9eb54d2b" translate="yes" xml:space="preserve">
          <source>Retains '::' in type names so that C++ hierarchical types can be mapped.</source>
          <target state="translated">C ++ 계층 형식을 매핑 할 수 있도록 형식 이름에 '::'을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="66a67d8823304f8234e82df960c20ebaacbf345a" translate="yes" xml:space="preserve">
          <source>Retains &lt;code&gt;::&lt;/code&gt; in type names so that C++ hierarchical types can be mapped. Default is false.</source>
          <target state="translated">C ++ 계층 유형을 맵핑 할 수 있도록 &lt;code&gt;::&lt;/code&gt; 를 유형 이름으로 유지합니다 . 기본값은 false입니다.</target>
        </trans-unit>
        <trans-unit id="d7ae391f88a9b63319b85f5152615ab3754281a5" translate="yes" xml:space="preserve">
          <source>Rethink your design.</source>
          <target state="translated">디자인을 다시 생각하십시오.</target>
        </trans-unit>
        <trans-unit id="d864f634d34c4155822d46f8d91b346abeaaef02" translate="yes" xml:space="preserve">
          <source>Rethrows a previously caught exception. See &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;Exception Handling in perlguts&lt;/a&gt;.</source>
          <target state="translated">이전에 발견 된 예외를 다시 발생시킵니다. &lt;a href=&quot;perlguts#Exception-Handling&quot;&gt;perlguts의 예외 처리를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f6bd37434498e4371fd88a4bfb1729adc9d5c9a" translate="yes" xml:space="preserve">
          <source>Retired langfam codes for the Locale::Codes::LangFam module</source>
          <target state="translated">Locale :: Codes :: LangFam 모듈의 폐기 된 랭팜 코드</target>
        </trans-unit>
        <trans-unit id="9e8f8f9dc55113068c79456626250be0fa9383d3" translate="yes" xml:space="preserve">
          <source>Retrieval of PM messages until window creation/destruction. If &lt;code&gt;force&lt;/code&gt; is false, will not dispatch messages if a real message loop is known to be present.</source>
          <target state="translated">창 생성 / 파괴까지 PM 메시지 검색 경우 &lt;code&gt;force&lt;/code&gt; 거짓 진정한 메시지 루프가 존재하는 것으로 알려져 경우, 메시지를 전달하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9c9059c27f17082052b07415cc0c473e3351c1bf" translate="yes" xml:space="preserve">
          <source>Retrieve a value from the &lt;code&gt;c_cc&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object. The &lt;code&gt;c_cc&lt;/code&gt; field is an array so an index must be specified.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; 객체 의 &lt;code&gt;c_cc&lt;/code&gt; 필드 에서 값을 검색 합니다. &lt;code&gt;c_cc&lt;/code&gt; 의 인덱스를 지정해야합니다, 그래서 필드는 배열입니다.</target>
        </trans-unit>
        <trans-unit id="6dd60623ab1f0fead77ed722c84110186b35b3d9" translate="yes" xml:space="preserve">
          <source>Retrieve one line, delimited by CRLF, from the remote server. Returns</source>
          <target state="translated">원격 서버에서 CRLF로 구분 된 한 줄을 검색하십시오. 보고</target>
        </trans-unit>
        <trans-unit id="120622bbd6d958d0f9c367331115c5b3f99cbcf7" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;code&gt;c_cflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; 객체 의 &lt;code&gt;c_cflag&lt;/code&gt; 필드를 검색 합니다.</target>
        </trans-unit>
        <trans-unit id="9a43df9223bf1d671907cb79ad24e65e7a8da945" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;code&gt;c_iflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; 객체 의 &lt;code&gt;c_iflag&lt;/code&gt; 필드를 검색하십시오 .</target>
        </trans-unit>
        <trans-unit id="5e27d54476a270ba05b730aea326a39f970e8caa" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;code&gt;c_lflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; 객체 의 &lt;code&gt;c_lflag&lt;/code&gt; 필드를 검색하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff4743799470ee7b920cd9fd1a21024d975f2d4a" translate="yes" xml:space="preserve">
          <source>Retrieve the &lt;code&gt;c_oflag&lt;/code&gt; field of a &lt;code&gt;termios&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;termios&lt;/code&gt; 객체 의 &lt;code&gt;c_oflag&lt;/code&gt; 필드를 검색 합니다.</target>
        </trans-unit>
        <trans-unit id="6dc4792ca5a24eb7ba3c253287755e63991cec8e" translate="yes" xml:space="preserve">
          <source>Retrieve the datum in</source>
          <target state="translated">데이텀 검색</target>
        </trans-unit>
        <trans-unit id="4511f642a0428b9e7d0d6d89734a7f32ac28109c" translate="yes" xml:space="preserve">
          <source>Retrieve the first name</source>
          <target state="translated">이름을 검색</target>
        </trans-unit>
        <trans-unit id="df345846bd0c2d69e12b4a91aaf669983d7377b1" translate="yes" xml:space="preserve">
          <source>Retrieve the full name, the first and last name joined by a blank.</source>
          <target state="translated">공백으로 결합 된 성 및 이름을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="f95d03de659d7e5c70bd3aa6dbca967eb0f4d19b" translate="yes" xml:space="preserve">
          <source>Retrieve the header, a blank line, then the body (text) of the specified article.</source>
          <target state="translated">지정된 기사의 머리글, 빈 줄, 본문 (텍스트)을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="bc385b4aceaf92215d1828a2e2ea727868f48f2f" translate="yes" xml:space="preserve">
          <source>Retrieve the input baud rate.</source>
          <target state="translated">입력 전송 속도를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="601de4f2ebd867a526f1ea2777ad7a4bbeea163a" translate="yes" xml:space="preserve">
          <source>Retrieve the last name</source>
          <target state="translated">성을 검색</target>
        </trans-unit>
        <trans-unit id="43b2d69c57387d7f84b4fed900b418d5c512cf9b" translate="yes" xml:space="preserve">
          <source>Retrieve the output baud rate.</source>
          <target state="translated">출력 전송 속도를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="153bc75c411348eec881e255f76be1e64881b5cc" translate="yes" xml:space="preserve">
          <source>Retrieve the value of the tied scalar referenced by</source>
          <target state="translated">로 묶인 스칼라 값을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="03ee038fcaef73a536de77451717f2391e453473" translate="yes" xml:space="preserve">
          <source>Retrieves the function that will be used to fix up a call to</source>
          <target state="translated">호출을 수정하는 데 사용될 함수를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="9eec387679e71e59c66232709943e141d44d4414" translate="yes" xml:space="preserve">
          <source>Retrieves the time conversion information from the &lt;code&gt;tzname&lt;/code&gt; variable.</source>
          <target state="translated">&lt;code&gt;tzname&lt;/code&gt; 변수 에서 시간 변환 정보를 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="4da4b9355ca37de19201e461cad40244a9893d34" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a configurable limit on a file or directory.</source>
          <target state="translated">파일 또는 디렉토리에서 구성 가능한 한계 값을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="652c07db1d8a422e8f5d2293abd7abb4ee1fd964" translate="yes" xml:space="preserve">
          <source>Retrieves the value of a configurable limit on a file or directory. This uses file descriptors such as those obtained by calling &lt;code&gt;POSIX::open&lt;/code&gt; .</source>
          <target state="translated">파일 또는 디렉토리에서 구성 가능한 한계 값을 검색합니다. &lt;code&gt;POSIX::open&lt;/code&gt; 을 호출하여 얻은 것과 같은 파일 디스크립터를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="e02559c3356326a3b1e599326bdaca8e1cd1d0bf" translate="yes" xml:space="preserve">
          <source>Retrieves values of system configurable variables.</source>
          <target state="translated">시스템 구성 가능 변수의 값을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="908262fdee5fbef995f0f45380b61275d7e304ec" translate="yes" xml:space="preserve">
          <source>Retrieving the backtrace from Perl level (using for example an XS extension) would be much less exciting than one would hope: normally you would see &lt;code&gt;runops&lt;/code&gt; , &lt;code&gt;entersub&lt;/code&gt; , and not much else. This API is intended to be called &lt;b&gt;from within&lt;/b&gt; the Perl implementation, not from Perl level execution.</source>
          <target state="translated">Perl 레벨에서 역 추적을 검색하는 것 (예 : XS 확장 사용)은 원하는 것보다 훨씬 덜 흥미로울 것입니다. 일반적으로 &lt;code&gt;runops&lt;/code&gt; , &lt;code&gt;entersub&lt;/code&gt; 등을 볼 수 있습니다. 이 API는 Perl 레벨 실행이 아닌 Perl 구현 &lt;b&gt;내&lt;/b&gt; 에서 호출되도록 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="24f096b221f9534bcad007f2b5a32b490950b5b5" translate="yes" xml:space="preserve">
          <source>Return</source>
          <target state="translated">Return</target>
        </trans-unit>
        <trans-unit id="147311f53adc905469208b823e582ec70f5da4cf" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mNO&lt;/code&gt; .</source>
          <target state="translated">XSUB에서 즉시 &lt;code&gt;&amp;amp;PL_sv_no&lt;/code&gt; 를 리턴 하십시오. &lt;code&gt;XST_mNO&lt;/code&gt; 를 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="5551daa758eb4f1962ff204e60ac6d510f876260" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mUNDEF&lt;/code&gt; .</source>
          <target state="translated">XSUB에서 즉시 &lt;code&gt;&amp;amp;PL_sv_undef&lt;/code&gt; 를 리턴 하십시오. &lt;code&gt;XST_mUNDEF&lt;/code&gt; 를 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="465dad58ecf69fa630bc3f710cfd58d97befa558" translate="yes" xml:space="preserve">
          <source>Return &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; from an XSUB immediately. Uses &lt;code&gt;XST_mYES&lt;/code&gt; .</source>
          <target state="translated">XSUB에서 &lt;code&gt;&amp;amp;PL_sv_yes&lt;/code&gt; 를 즉시 리턴 하십시오. &lt;code&gt;XST_mYES&lt;/code&gt; 를 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="d434075170c323a77b75fb6a1dc64742b45bd22e" translate="yes" xml:space="preserve">
          <source>Return API version as a Perl scalar, 1 for Math::BigInt v1.70, 2 for Math::BigInt v1.83.</source>
          <target state="translated">API 버전을 Perl 스칼라로 반환합니다. Math :: BigInt v1.70의 경우 1, Math :: BigInt v1.83의 경우 2입니다.</target>
        </trans-unit>
        <trans-unit id="d3b3f6da169bd793afaccd7c1d1ff1d877478bfb" translate="yes" xml:space="preserve">
          <source>Return Nth root of the object, truncated to int. N is &amp;gt;= 3.</source>
          <target state="translated">int로 잘린 객체의 N 번째 루트를 반환합니다. N은&amp;gt; = 3이다.</target>
        </trans-unit>
        <trans-unit id="ee7ade6a89266f0ce63300ffcdf5e3d44430e5cf" translate="yes" xml:space="preserve">
          <source>Return OBJ1 modulo OBJ2, i.e., the remainder after dividing OBJ1 by OBJ2.</source>
          <target state="translated">OBJ1 모듈로 OBJ2, 즉 OBJ1을 OBJ2로 나눈 후 나머지를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c2d3149d101eee963ecad6da777888bf7deda306" translate="yes" xml:space="preserve">
          <source>Return OBJ1 to the power of OBJ2. By convention, 0**0 = 1.</source>
          <target state="translated">OBJ1을 OBJ2의 거듭 제곱으로 되돌립니다. 일반적으로 0 ** 0 = 1입니다.</target>
        </trans-unit>
        <trans-unit id="a7b7728606fe5548394ca030c9925c7c360c2129" translate="yes" xml:space="preserve">
          <source>Return TRUE if that warnings category has been set to FATAL in the first scope where the object is used. Otherwise returns FALSE.</source>
          <target state="translated">객체가 사용되는 첫 번째 범위에서 해당 경고 범주가 FATAL로 설정된 경우 TRUE를 반환합니다. 그렇지 않으면 FALSE를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b8471d332e30c305b7ffd23da02013a440c0b038" translate="yes" xml:space="preserve">
          <source>Return TRUE if that warnings category is enabled in the calling module. Otherwise returns FALSE.</source>
          <target state="translated">호출 모듈에서 해당 경고 범주가 활성화 된 경우 TRUE를 반환합니다. 그렇지 않으면 FALSE를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="427a27c6e94dc4cf9cfd1ee6dba724c6e8763ad0" translate="yes" xml:space="preserve">
          <source>Return TRUE if that warnings category is enabled in the first scope where the object is used. Otherwise returns FALSE.</source>
          <target state="translated">오브젝트가 사용되는 첫 번째 범위에서 해당 경고 범주가 사용 가능한 경우 TRUE를 리턴하십시오. 그렇지 않으면 FALSE를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c94f996bfa47e593985fe4ec41527489b9731a07" translate="yes" xml:space="preserve">
          <source>Return TRUE if the name is safe.</source>
          <target state="translated">이름이 안전한 경우 TRUE를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="96be94a39b4300e1884dd9adc1a2936e7fc2bdc2" translate="yes" xml:space="preserve">
          <source>Return TRUE if the warnings category &lt;code&gt;$category&lt;/code&gt; has been set to FATAL in the calling module. Otherwise returns FALSE.</source>
          <target state="translated">호출 모듈에서 경고 범주 &lt;code&gt;$category&lt;/code&gt; 가 FATAL로 설정된 경우 TRUE를 반환합니다 . 그렇지 않으면 FALSE를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b108b1cc9affb1337971003aad75911571c79e7b" translate="yes" xml:space="preserve">
          <source>Return TRUE if the warnings category with the same name as the current package has been set to FATAL in the calling module. Otherwise returns FALSE.</source>
          <target state="translated">현재 패키지와 이름이 같은 경고 범주가 호출 모듈에서 FATAL로 설정된 경우 TRUE를 반환합니다. 그렇지 않으면 FALSE를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2702ef79f51a7a603a764187ab2c97d87823ae2a" translate="yes" xml:space="preserve">
          <source>Return TRUE if the warnings category, &lt;code&gt;$category&lt;/code&gt; , is enabled in the calling module. Otherwise returns FALSE.</source>
          <target state="translated">호출 모듈에서 경고 범주 &lt;code&gt;$category&lt;/code&gt; 가 활성화 된 경우 TRUE를 반환합니다 . 그렇지 않으면 FALSE를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="dd8731f1ccd97a2ffba2dcddfde967debf1a72e1" translate="yes" xml:space="preserve">
          <source>Return a SV containing a string that must appear in the pattern. Used by &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; for optimising matches.</source>
          <target state="translated">패턴에 나타나야하는 문자열이 포함 된 SV를 반환합니다. 경기 최적화를 위해 &lt;code&gt;&lt;a href=&quot;functions/split&quot;&gt;split&lt;/a&gt;&lt;/code&gt; 에서 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="ef680f28e15ead0c97150a82245301402d6d3189" translate="yes" xml:space="preserve">
          <source>Return a copy of a string from an XSUB immediately. Uses &lt;code&gt;XST_mPV&lt;/code&gt; .</source>
          <target state="translated">XSUB에서 즉시 문자열 사본을 리턴하십시오. &lt;code&gt;XST_mPV&lt;/code&gt; 를 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="1d8a70dab10ae99b42cd2b1f2b638d4aa167541d" translate="yes" xml:space="preserve">
          <source>Return a double from an XSUB immediately. Uses &lt;code&gt;XST_mNV&lt;/code&gt; .</source>
          <target state="translated">XSUB에서 즉시 double을 반환합니다. &lt;code&gt;XST_mNV&lt;/code&gt; 를 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="e233ff228d377735118fccb83e09d6507766800e" translate="yes" xml:space="preserve">
          <source>Return a formatted report of the information returned by bucket_stats(). An example report looks like this:</source>
          <target state="translated">bucket_stats ()에 의해 반환 된 정보의 형식화 된 보고서를 반환합니다. 예제 보고서는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8b2b0669279235775947aa2a2e43aa996d55f461" translate="yes" xml:space="preserve">
          <source>Return a formatted string about the elapsed (wall-clock) time and about the consumed CPU time.</source>
          <target state="translated">경과 시간 (벽시계) 시간과 소비 된 CPU 시간에 대한 형식화 된 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="00a08fc2a49d16208a3da942556b8e6789f09ae3" translate="yes" xml:space="preserve">
          <source>Return a human readable representation of the scheduling tree. For example:</source>
          <target state="translated">사람이 읽을 수있는 스케줄링 트리 표현을 리턴하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8d29859d693280c46e84547c235fda5f109149f7" translate="yes" xml:space="preserve">
          <source>Return a key based on PATH and ID, which can be used as a key for &lt;code&gt;&lt;a href=&quot;../functions/msgget&quot;&gt;msgget&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../functions/semget&quot;&gt;semget&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../functions/shmget&quot;&gt;shmget&lt;/a&gt;&lt;/code&gt;. See &lt;a href=&quot;http://search.cpan.org/perldoc/ftok&quot;&gt;ftok&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../functions/msgget&quot;&gt;msgget&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;../functions/semget&quot;&gt;semget&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;../functions/shmget&quot;&gt;shmget&lt;/a&gt;&lt;/code&gt; 의 키로 사용할 수있는 PATH 및 ID를 기반으로 키를 리턴하십시오 . &lt;a href=&quot;http://search.cpan.org/perldoc/ftok&quot;&gt;ftok&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1bf5b38903b48414eabe89f5d73486c7f125e1c6" translate="yes" xml:space="preserve">
          <source>Return a list consisting of (signed) numerator and (unsigned) denominator as BigInts.</source>
          <target state="translated">(부호있는) 분자와 (부호없는) 분모로 구성된 목록을 BigInts로 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="451b1d3213ee97d37f98d9e2159d9222ada4e531" translate="yes" xml:space="preserve">
          <source>Return a list of filehandles that may be used upstream in a select() call to signal that this Iterator is ready. Iterators that are not handle based should return an empty list.</source>
          <target state="translated">이 반복자가 준비되었다는 신호를 보내기 위해 select () 호출에서 업스트림으로 사용될 수있는 파일 핸들 목록을 반환합니다. 핸들 기반이 아닌 반복자는 빈 목록을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="43a2d1db010ca6f9905f00e7243c5c3558754b8a" translate="yes" xml:space="preserve">
          <source>Return a list of filehandles that may be used upstream in a select() call to signal that this Iterator is ready. Iterators that are not handle-based should return an empty list.</source>
          <target state="translated">이 반복자가 준비되었다는 신호를 보내기 위해 select () 호출에서 업스트림으로 사용될 수있는 파일 핸들 목록을 반환합니다. 핸들 기반이 아닌 반복자는 빈 목록을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="32067e232db5b4a2fbf7e768b9545020f7badd2e" translate="yes" xml:space="preserve">
          <source>Return a list of login, password and account information for the netrc entry</source>
          <target state="translated">netrc 항목에 대한 로그인, 비밀번호 및 계정 정보 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="bb492aaa479310c3cdf2aa3bd7e3c5fbe533f80a" translate="yes" xml:space="preserve">
          <source>Return a list of symbol names which remain undefined after load_file(). Returns &lt;code&gt;()&lt;/code&gt; if not known. Don't worry if your platform does not provide a mechanism for this. Most do not need it and hence do not provide it, they just return an empty list.</source>
          <target state="translated">load_file () 뒤에 정의되지 않은 기호 이름 목록을 리턴하십시오. 알 수없는 경우 &lt;code&gt;()&lt;/code&gt; 를 반환합니다 . 플랫폼이이를위한 메커니즘을 제공하지 않더라도 걱정하지 마십시오. 대부분은 필요하지 않으므로 제공하지 않고 빈 목록 만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="26152553b41eeb36a45b1fbc384250df3b61d1f3" translate="yes" xml:space="preserve">
          <source>Return a member of the XOP structure.</source>
          <target state="translated">XOP 구조체의 멤버를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="241e1964cd5a05e9777847785a74cc4814336a34" translate="yes" xml:space="preserve">
          <source>Return a non-zero integer if the sign bit on an NV is set, and 0 if it is not.</source>
          <target state="translated">NV의 부호 비트가 설정된 경우 0이 아닌 정수를 반환하고 그렇지 않은 경우 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="891cdbd9e57376291645fa15156771d6e6a9b800" translate="yes" xml:space="preserve">
          <source>Return a pointer to the UTF-8-encoded representation of the SV, and set *lp to its length. May cause the SV to be upgraded to UTF-8 as a side-effect.</source>
          <target state="translated">SV의 UTF-8 인코딩 표현에 대한 포인터를 리턴하고 * lp를 길이로 설정하십시오. SV가 부작용으로 UTF-8로 업그레이드 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c3adaee605a1fad16113ef88e9f64319c503dfa" translate="yes" xml:space="preserve">
          <source>Return a pointer to the UTF-8-encoded representation of the SV. May cause the SV to be upgraded to UTF-8 as a side-effect.</source>
          <target state="translated">SV의 UTF-8 인코딩 표현에 대한 포인터를 리턴하십시오. SV가 부작용으로 UTF-8로 업그레이드 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63b7b069ee4d507ec79e42a1161a1c581d1bcaad" translate="yes" xml:space="preserve">
          <source>Return a pointer to the byte-encoded representation of the SV, and set *lp to its length. May cause the SV to be downgraded from UTF-8 as a side-effect.</source>
          <target state="translated">바이트의 인코딩 된 SV 표현에 대한 포인터를 리턴하고 * lp를 길이로 설정하십시오. SV가 부작용으로 UTF-8에서 다운 그레이드 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07d05795d61474062c0a14f8e1c7b4e50543a85a" translate="yes" xml:space="preserve">
          <source>Return a pointer to the byte-encoded representation of the SV. May cause the SV to be downgraded from UTF-8 as a side-effect.</source>
          <target state="translated">바이트의 인코딩 된 SV 표현에 대한 포인터를 반환합니다. SV가 부작용으로 UTF-8에서 다운 그레이드 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed2c1e0979757933a6bf33adef1b53f07b2683a8" translate="yes" xml:space="preserve">
          <source>Return a real-valued arcus cosine if the input is between [-1, 1], &lt;b&gt;inclusive&lt;/b&gt; the endpoints. For inputs greater than one, zero is returned. For inputs less than minus one, pi is returned.</source>
          <target state="translated">입력 값이 끝점을 &lt;b&gt;포함&lt;/b&gt; 하여 [-1, 1] 사이에있는 경우 실수 값의 코사인을 반환 합니다. 1보다 큰 입력의 경우 0이 반환됩니다. 마이너스 1보다 작은 입력의 경우 pi가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0a96ea8a4c2eeacd78081e85ee39ee9c99c7759b" translate="yes" xml:space="preserve">
          <source>Return a real-valued arcus sine if the input is between [-1, 1], &lt;b&gt;inclusive&lt;/b&gt; the endpoints. For inputs greater than one, pi/2 is returned. For inputs less than minus one, -pi/2 is returned.</source>
          <target state="translated">입력 값이 끝점을 &lt;b&gt;포함&lt;/b&gt; 하여 [-1, 1] 사이에 있으면 실수 아크 사인을 반환 합니다. 1보다 큰 입력의 경우 pi / 2가 반환됩니다. 마이너스 1보다 작은 입력의 경우 -pi / 2가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="fdf6e57474a1d775479b89f8208b393f0a75e6df" translate="yes" xml:space="preserve">
          <source>Return a reference to a hash of the capabilities of the server. APOP is added as a pseudo capability. Note that I've been unable to find a list of the standard capability values, and some appear to be multi-word and some are not. We make an attempt at intelligently parsing them, but it may not be correct.</source>
          <target state="translated">서버 기능의 해시에 대한 참조를 리턴하십시오. APOP는 의사 기능으로 추가됩니다. 표준 기능 값 목록을 찾을 수 없었으며 일부는 여러 단어로 표시되고 일부는 그렇지 않습니다. 지능적으로 구문 분석을 시도하지만 올바르지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5fd404f895e96834df66cd6d02d6a132e5d931b" translate="yes" xml:space="preserve">
          <source>Return a reference to a new Pod::Checker object that inherits from Pod::Parser and is used for calling the required methods later. The following options are recognized:</source>
          <target state="translated">Pod :: Parser에서 상속하고 나중에 필요한 메서드를 호출하는 데 사용되는 새 Pod :: Checker 개체에 대한 참조를 반환합니다. 다음과 같은 옵션이 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="44be791192716cc11f6cf8790fe7a9aa91d55565" translate="yes" xml:space="preserve">
          <source>Return a result from the next available parser. Returns a list containing the parser from which the result came, the stash that corresponds with that parser and the result.</source>
          <target state="translated">사용 가능한 다음 구문 분석기에서 결과를 리턴하십시오. 결과가 나온 구문 분석기, 해당 구문 분석기에 해당하는 숨김 및 결과가 포함 된 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="66a0e0e3adf015ddaa0b315c9b035e774d2c4a4b" translate="yes" xml:space="preserve">
          <source>Return a set of basic information about a hash.</source>
          <target state="translated">해시에 대한 기본 정보 세트를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b0ef823680735fd50aee393df3d6a0a47495877c" translate="yes" xml:space="preserve">
          <source>Return a short description of the provided OP.</source>
          <target state="translated">제공된 OP에 대한 간단한 설명을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="afe505b614a002a8797b055ea858ee27a1314b27" translate="yes" xml:space="preserve">
          <source>Return a string representing the object. The returned string should have no leading zeros, i.e., it should match &lt;code&gt;^(0|[1-9]\d*)$&lt;/code&gt; .</source>
          <target state="translated">객체를 나타내는 문자열을 반환합니다. 반환 된 문자열은 앞에 0이 없어야합니다. 즉 &lt;code&gt;^(0|[1-9]\d*)$&lt;/code&gt; 와 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ad02dc2af39b43751576df209b0fc28331051482" translate="yes" xml:space="preserve">
          <source>Return a string representing this object.</source>
          <target state="translated">이 객체를 나타내는 캐릭터 라인을 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="40d93510e48540756be01ae3bf688bac63f2f0ba" translate="yes" xml:space="preserve">
          <source>Return a true copy of the object.</source>
          <target state="translated">객체의 실제 복사본을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8dce44eeede98380084e686046d4f4c26cb13be4" translate="yes" xml:space="preserve">
          <source>Return a true value if OBJ is an even integer, and a false value otherwise.</source>
          <target state="translated">OBJ가 짝수 인 정수이면 true를, 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6a89d549d64c9589ce257226bcc136decec05091" translate="yes" xml:space="preserve">
          <source>Return a true value if the object is OK, and a false value otherwise. This is a check routine to test the internal state of the object for corruption.</source>
          <target state="translated">객체가 정상이면 참 값을, 그렇지 않으면 거짓 값을 반환합니다. 개체의 내부 상태가 손상되었는지 테스트하는 검사 루틴입니다.</target>
        </trans-unit>
        <trans-unit id="4b56ea11fa7e09fd08e43c32263ce9d2f9c32994" translate="yes" xml:space="preserve">
          <source>Return an SV with the numeric value of the source SV, doing any necessary reference or overload conversion. The caller is expected to have handled get-magic already.</source>
          <target state="translated">필요한 참조 또는 과부하 변환을 수행하여 소스 SV의 숫자 값으로 SV를 반환합니다. 발신자는 이미 get-magic을 처리했을 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="c6ea6ef7047a1702f443e01459bc3f879a9ce1bd" translate="yes" xml:space="preserve">
          <source>Return an absolute file specification from a relative one.</source>
          <target state="translated">상대 파일에서 절대 파일 스펙을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="9949eba6aeab405ed78bd6939d900df50ed3361c" translate="yes" xml:space="preserve">
          <source>Return an array of all registered handles.</source>
          <target state="translated">등록 된 모든 핸들의 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c1e82163b9eb16d68b95807d1026a6e53a268ba0" translate="yes" xml:space="preserve">
          <source>Return an array of handles that are ready for reading. &lt;code&gt;TIMEOUT&lt;/code&gt; is the maximum amount of time to wait before returning an empty list, in seconds, possibly fractional. If &lt;code&gt;TIMEOUT&lt;/code&gt; is not given and any handles are registered then the call will block.</source>
          <target state="translated">읽을 준비가 된 핸들 배열을 반환합니다. &lt;code&gt;TIMEOUT&lt;/code&gt; 은 비어있는 목록을 리턴하기 전에 대기 할 최대 시간 (초)이며 소수 일 수 있습니다. 경우 &lt;code&gt;TIMEOUT&lt;/code&gt; 주어지지하고 핸들을 등록 후, 전화가 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="b56f2614a481fefe74274d254bd95335c5759694" translate="yes" xml:space="preserve">
          <source>Return an empty list from an XSUB immediately.</source>
          <target state="translated">XSUB에서 빈 목록을 즉시 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="158ae144c3e0a50b0764b0f6030b134afc94223e" translate="yes" xml:space="preserve">
          <source>Return an entry from the BHK structure.</source>
          <target state="translated">BHK 구조에서 항목을 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="8f6b2b84ace3e3e1bd4262e9a939baea254bec61" translate="yes" xml:space="preserve">
          <source>Return an integer from an XSUB immediately. Uses &lt;code&gt;XST_mIV&lt;/code&gt; .</source>
          <target state="translated">XSUB에서 즉시 정수를 반환합니다. &lt;code&gt;XST_mIV&lt;/code&gt; 를 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="c26d41edbd3ecefa03ca709a9475c24b1fb205ad" translate="yes" xml:space="preserve">
          <source>Return an integer from an XSUB immediately. Uses &lt;code&gt;XST_mUV&lt;/code&gt; .</source>
          <target state="translated">XSUB에서 즉시 정수를 반환합니다. &lt;code&gt;XST_mUV&lt;/code&gt; 를 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="29da77810c46bf5bf9d644169ef5a8f2a609a982" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing a binary number. The input has a '0b' prefix and matches the regular expression &lt;code&gt;^0[bB](0|1[01]*)$&lt;/code&gt; .</source>
          <target state="translated">이진수를 나타내는 문자열이 주어진 객체를 반환합니다. 입력은 '0b'접두사를 가지며 정규식 &lt;code&gt;^0[bB](0|1[01]*)$&lt;/code&gt; 와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="cb1a519206f28688ca4edd290761e39b7d94833d" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing a hexadecimal number. The input has a '0x' prefix and matches the regular expression &lt;code&gt;^0x(0|[1-9a-fA-F][\da-fA-F]*)$&lt;/code&gt; .</source>
          <target state="translated">16 진수를 나타내는 문자열이 주어진 객체를 반환합니다. 입력은 '0x'접두사를 가지며 정규식 &lt;code&gt;^0x(0|[1-9a-fA-F][\da-fA-F]*)$&lt;/code&gt; 와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="f17a9d7a7bb03786cbbf9b8ebda2c95d3e3444c9" translate="yes" xml:space="preserve">
          <source>Return an object given a string representing an octal number. The input has a '0' prefix and matches the regular expression &lt;code&gt;^0[1-7]*$&lt;/code&gt; .</source>
          <target state="translated">8 진수를 나타내는 문자열이 주어진 객체를 반환합니다. 입력에는 '0'접두사가 있으며 정규식 &lt;code&gt;^0[1-7]*$&lt;/code&gt; 와 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="01e43911ac9c36690a2f4ab465817a65fde7ace6" translate="yes" xml:space="preserve">
          <source>Return an object representing the number 10**N where N &amp;gt;= 0 is a Perl scalar.</source>
          <target state="translated">N&amp;gt; = 0이 Perl 스칼라 인 숫자 10 ** N을 나타내는 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cc772c25af18a23490f3229752980abefde5db66" translate="yes" xml:space="preserve">
          <source>Return an object representing the number one.</source>
          <target state="translated">숫자 1을 나타내는 객체를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="a575fca380d4750e44b2dcf0a1f730c23eb1eaf7" translate="yes" xml:space="preserve">
          <source>Return an object representing the number ten.</source>
          <target state="translated">숫자 10을 나타내는 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ffb46871cf3e82de90a50f6e47e66fb291adad01" translate="yes" xml:space="preserve">
          <source>Return an object representing the number two.</source>
          <target state="translated">숫자 2를 나타내는 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="188180beefc0cddc09d88d3d827fbf9ea081c539" translate="yes" xml:space="preserve">
          <source>Return an object representing the number zero.</source>
          <target state="translated">숫자 0을 나타내는 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="11aecfff98a8afc40b049f542a98ed2aa2e77f95" translate="yes" xml:space="preserve">
          <source>Return an undefined value.</source>
          <target state="translated">정의되지 않은 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="549deb9cfd17d09d388b32e8d8879d7c6170d75b" translate="yes" xml:space="preserve">
          <source>Return array reference of the four-element list of CPU seconds, as with &lt;a href=&quot;../functions/times&quot;&gt;times&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../functions/times&quot;&gt;times&lt;/a&gt; 와 같이 4 원소의 CPU 초리스트의 배열 참조를 돌려 줍니다.</target>
        </trans-unit>
        <trans-unit id="50bda627656d52a5da7d72fbd0b32449c8c04ddc" translate="yes" xml:space="preserve">
          <source>Return as seconds the</source>
          <target state="translated">초로 반환</target>
        </trans-unit>
        <trans-unit id="8050ecfa06653b6203153732192a0001e197bc04" translate="yes" xml:space="preserve">
          <source>Return as seconds the current value of the POSIX high resolution timer specified by &lt;code&gt;$which&lt;/code&gt; . All implementations that support POSIX high resolution timers are supposed to support at least the &lt;code&gt;$which&lt;/code&gt; value of &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; , which is supposed to return results close to the results of &lt;code&gt;gettimeofday&lt;/code&gt; , or the number of seconds since 00:00:00:00 January 1, 1970 Greenwich Mean Time (GMT). Do not assume that CLOCK_REALTIME is zero, it might be one, or something else. Another potentially useful (but not available everywhere) value is &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt; , which guarantees a monotonically increasing time value (unlike time() or gettimeofday(), which can be adjusted). See your system documentation for other possibly supported values.</source>
          <target state="translated">&lt;code&gt;$which&lt;/code&gt; 지정된 POSIX 고해상도 타이머의 현재 값을 초 단위로 반환합니다 . POSIX 고해상도 타이머를 지원하는 모든 구현은 적어도 &lt;code&gt;$which&lt;/code&gt; &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; 값 을 지원해야합니다. 이 값 은 &lt;code&gt;gettimeofday&lt;/code&gt; 결과에 가까운 결과 또는 1 월 1 일 00 : 00 : 00 : 00 이후의 초 수 를 리턴합니다 . 1970 그리니치 평균시 (GMT). CLOCK_REALTIME이 0이라고 가정하지 말고 1 또는 다른 것일 수 있습니다. 잠재적으로 유용한 (그러나 모든 곳에서 제공되지는 않음) 값은 &lt;code&gt;CLOCK_MONOTONIC&lt;/code&gt; 입니다.(단일 조정 가능한 time () 또는 gettimeofday ()와 달리) 단조 증가하는 시간 값을 보장합니다. 지원되는 다른 값에 대해서는 시스템 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="93c21fc7af48808f69e496945f4fd4e94e21bce3" translate="yes" xml:space="preserve">
          <source>Return as seconds the resolution of the POSIX high resolution timer specified by &lt;code&gt;$which&lt;/code&gt; . All implementations that support POSIX high resolution timers are supposed to support at least the &lt;code&gt;$which&lt;/code&gt; value of &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; , see &lt;a href=&quot;#clock_gettime&quot;&gt;clock_gettime&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;$which&lt;/code&gt; 의해 지정된 POSIX 고해상도 타이머의 해상도를 초 단위로 돌려 줍니다. POSIX 고해상도 타이머를 지원하는 모든 구현 은 &lt;code&gt;CLOCK_REALTIME&lt;/code&gt; 의 &lt;code&gt;$which&lt;/code&gt; 값 을 지원해야합니다 ( &lt;a href=&quot;#clock_gettime&quot;&gt;clock_gettime&lt;/a&gt; 참조) .</target>
        </trans-unit>
        <trans-unit id="e78a36f42fa7d49ff1c33db2428ad62e574418ef" translate="yes" xml:space="preserve">
          <source>Return bitwise and. If necessary, the smallest number is padded with leading zeros.</source>
          <target state="translated">비트 단위로 반환합니다. 필요한 경우 가장 작은 숫자는 앞에 0이 채워집니다.</target>
        </trans-unit>
        <trans-unit id="cb6e9a575d0b87f630e4d14061b502a84e725686" translate="yes" xml:space="preserve">
          <source>Return bitwise exclusive or. If necessary, the smallest number is padded with leading zeros.</source>
          <target state="translated">비트 배타적 또는 필요한 경우 가장 작은 숫자는 앞에 0이 채워집니다.</target>
        </trans-unit>
        <trans-unit id="9385ddc48eab9b9c50d7efb48023e971e690c6ce" translate="yes" xml:space="preserve">
          <source>Return bitwise or. If necessary, the smallest number is padded with leading zeros.</source>
          <target state="translated">비트 단위로 반환합니다. 필요한 경우 가장 작은 숫자는 앞에 0이 채워집니다.</target>
        </trans-unit>
        <trans-unit id="38b18a0a6537a1cc8c8b6fbdbdcf12df94a2b726" translate="yes" xml:space="preserve">
          <source>Return count of readable bytes in the buffer. Zero or negative return means no more bytes available.</source>
          <target state="translated">버퍼에서 읽을 수있는 바이트 수를 반환합니다. 0 또는 음수 반환은 더 이상 사용 가능한 바이트가 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="cd4463fd2ee470a2b5cf9a4c7280fd1a57085d7b" translate="yes" xml:space="preserve">
          <source>Return encoding of the document, even if the encoding is not correctly handled.</source>
          <target state="translated">인코딩이 올바르게 처리되지 않은 경우에도 문서의 인코딩을 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="595fc3f7abd6ea0a21e0731028ef13f68f86a25f" translate="yes" xml:space="preserve">
          <source>Return end-of-file indicator. &lt;code&gt;PerlIOBase_eof()&lt;/code&gt; is normally sufficient.</source>
          <target state="translated">파일 끝 표시기를 리턴합니다. &lt;code&gt;PerlIOBase_eof()&lt;/code&gt; 는 일반적으로 충분합니다.</target>
        </trans-unit>
        <trans-unit id="989d4eb1544f5cecb97e15d2c7344839e09b6a8c" translate="yes" xml:space="preserve">
          <source>Return error indicator. &lt;code&gt;PerlIOBase_error()&lt;/code&gt; is normally sufficient.</source>
          <target state="translated">오류 표시기를 반환합니다. &lt;code&gt;PerlIOBase_error()&lt;/code&gt; 는 일반적으로 충분합니다.</target>
        </trans-unit>
        <trans-unit id="5fa68d98b35d49654c48b4d7a8996ea73d2e3793" translate="yes" xml:space="preserve">
          <source>Return factorial of object (1*2*3*4*...).</source>
          <target state="translated">객체의 계승을 반환합니다 (1 * 2 * 3 * 4 * ...).</target>
        </trans-unit>
        <trans-unit id="f6e2cbf875d6114c68a0b4ee75daf0f4c94ed406" translate="yes" xml:space="preserve">
          <source>Return from XSUB, indicating number of items on the stack. This is usually handled by &lt;code&gt;xsubpp&lt;/code&gt; .</source>
          <target state="translated">XSUB에서 반환하여 스택의 항목 수를 나타냅니다. 이것은 일반적으로 &lt;code&gt;xsubpp&lt;/code&gt; 에 의해 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="ad2850550de8af43dfe162fa88bbc2b95920fcb5" translate="yes" xml:space="preserve">
          <source>Return integer log of OBJ to base BASE. This method has two output arguments, the OBJECT and a STATUS. The STATUS is Perl scalar; it is 1 if OBJ is the exact result, 0 if the result was truncted to give OBJ, and undef if it is unknown whether OBJ is the exact result.</source>
          <target state="translated">기본 BASE에 OBJ의 정수 로그를 반환합니다. 이 메소드에는 OBJECT와 STATUS의 두 가지 출력 인수가 있습니다. 상태는 Perl 스칼라입니다. OBJ가 정확한 결과이면 1이고, 결과가 잘려 OBJ를 제공하기 위해 0이면 OBJ가 정확한 결과인지 알 수없는 경우 undef입니다.</target>
        </trans-unit>
        <trans-unit id="401944e8dca9d9309515015e83a9c3e7f09964dc" translate="yes" xml:space="preserve">
          <source>Return modular exponentiation, (OBJ1 ** OBJ2) % OBJ3.</source>
          <target state="translated">모듈 식 지수를 반환합니다 (OBJ1 ** OBJ2) % OBJ3.</target>
        </trans-unit>
        <trans-unit id="1b9909dafd1e851072a366e9a8cf14e8e203c382" translate="yes" xml:space="preserve">
          <source>Return modular multiplicative inverse, i.e., return OBJ3 so that</source>
          <target state="translated">모듈 식 곱셈의 역수를 반환합니다. 즉, OBJ3을 반환하여</target>
        </trans-unit>
        <trans-unit id="0dea4b36ca573d9394db3d77e929d7e71b77ae61" translate="yes" xml:space="preserve">
          <source>Return name and handle of a temporary file safely</source>
          <target state="translated">임시 파일의 이름과 핸들을 안전하게 반환</target>
        </trans-unit>
        <trans-unit id="bd83c943899faf6221cdf045d4f14b83d1a38b0f" translate="yes" xml:space="preserve">
          <source>Return pointer to next readable byte in buffer, accessing via the pointer (dereferencing) is only safe if PerlIO_get_cnt() has returned a positive value. Only positive offsets up to value returned by PerlIO_get_cnt() are allowed.</source>
          <target state="translated">PerlIO_get_cnt ()가 양수 값을 반환 한 경우에만 포인터 (버퍼 참조)를 통한 액세스는 버퍼에서 다음 읽을 수있는 바이트에 대한 포인터를 반환합니다. PerlIO_get_cnt ()에 의해 반환 된 값까지 양의 오프셋 만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="e9400c2a972aac8273d7b5993703cef3de364c28" translate="yes" xml:space="preserve">
          <source>Return position in the file.</source>
          <target state="translated">파일에서 위치를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="2ee013a6d785765733c1c186770c521fa7ad326e" translate="yes" xml:space="preserve">
          <source>Return source code for the body of a subroutine (a block, optionally preceded by a prototype in parens), given a reference to the sub. Because a subroutine can have no names, or more than one name, this method doesn't return a complete subroutine definition -- if you want to eval the result, you should prepend &quot;sub subname &quot;, or &quot;sub &quot; for an anonymous function constructor. Unless the sub was defined in the main:: package, the code will include a package declaration.</source>
          <target state="translated">서브 루틴에 대한 참조가 주어지면 서브 루틴의 본문 (필요한 경우, 프로토 타입이 앞에 나오는 블록)의 소스 코드를 반환합니다. 서브 루틴에는 이름이 없거나 하나 이상의 이름이있을 수 있으므로이 메소드는 완전한 서브 루틴 정의를 리턴하지 않습니다. 결과를 평가하려면 익명 함수에 &quot;sub subname&quot;또는 &quot;sub&quot;를 추가해야합니다. 건설자. 하위가 main :: 패키지에 정의되어 있지 않으면 코드에 패키지 선언이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="20da61fd12905e90a6c28f5d9d067763e08eb16e" translate="yes" xml:space="preserve">
          <source>Return the</source>
          <target state="translated">반환</target>
        </trans-unit>
        <trans-unit id="b13ef84886aa367ccced45d35b02a74b0ce63d0f" translate="yes" xml:space="preserve">
          <source>Return the 'command' being used for opening a file for reading using an external</source>
          <target state="translated">외부를 사용하여 읽을 파일을 여는 데 사용되는 '명령'을 반환</target>
        </trans-unit>
        <trans-unit id="7c4d88fb935d3655575a6cebe057c4b6b6e8de61" translate="yes" xml:space="preserve">
          <source>Return the 'command' being used for opening a file for writing using an external</source>
          <target state="translated">외부를 사용하여 쓰기 위해 파일을 여는 데 사용되는 '명령'을 반환</target>
        </trans-unit>
        <trans-unit id="4b25acaa88f87529f093504b66f0466d2bb94e73" translate="yes" xml:space="preserve">
          <source>Return the (faked) CV corresponding to the main part of the Perl program.</source>
          <target state="translated">Perl 프로그램의 주요 부분에 해당하는 (가짜) CV를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0fde1b84d2cd929e5f496f865362e84cf14b7c26" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;&lt;a href=&quot;../../functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; status for this iterator.</source>
          <target state="translated">이 이터레이터 의 &lt;code&gt;&lt;a href=&quot;../../functions/exit&quot;&gt;exit&lt;/a&gt;&lt;/code&gt; 상태를 리턴하십시오 .</target>
        </trans-unit>
        <trans-unit id="8e6f2a254417828fe1c66669b6e2e1f924bfacb1" translate="yes" xml:space="preserve">
          <source>Return the &lt;code&gt;&lt;a href=&quot;../../functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; status for this iterator.</source>
          <target state="translated">이 반복기 의 &lt;code&gt;&lt;a href=&quot;../../functions/wait&quot;&gt;wait&lt;/a&gt;&lt;/code&gt; 상태를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="62f12e24aeabb29661a5f55adb61e41e418c1cbb" translate="yes" xml:space="preserve">
          <source>Return the AV from the GV.</source>
          <target state="translated">GV에서 AV를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="22e67ba21f72e62248790c4cbcdcfff08f463285" translate="yes" xml:space="preserve">
          <source>Return the BHK's flags.</source>
          <target state="translated">BHK의 깃발을 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="d86808e34dfc460432ef7a0048092ddc2c2f3d18" translate="yes" xml:space="preserve">
          <source>Return the CV from the GV.</source>
          <target state="translated">GV에서 CV를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="db501e6a91d32269fe522aabe42b37024f7d29ba" translate="yes" xml:space="preserve">
          <source>Return the HV from the GV.</source>
          <target state="translated">GV에서 HV를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b09fd6b73251c98f0c6383f15ac2a7a38492e083" translate="yes" xml:space="preserve">
          <source>Return the N'ths digit from X when X is an integer value.</source>
          <target state="translated">X가 정수 값인 경우 X에서 N 번째 숫자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ae4e7fc79bf87d528da99d7549eb69b6a49628fc" translate="yes" xml:space="preserve">
          <source>Return the Nth digit as a Perl scalar. N is a Perl scalar, where zero refers to the rightmost (least significant) digit, and negative values count from the left (most significant digit). If $obj represents the number 123, then</source>
          <target state="translated">N 번째 숫자를 Perl 스칼라로 반환합니다. N은 Perl 스칼라이며, 0은 가장 오른쪽 (최하위) 숫자를 나타내고 음수 값은 왼쪽 (가장 큰 숫자)부터 계산됩니다. $ obj가 숫자 123을 나타내는 경우</target>
        </trans-unit>
        <trans-unit id="95294de0a9d18d8d78c72fe0c4f06b8b579c020d" translate="yes" xml:space="preserve">
          <source>Return the PP function name (e.g. &quot;pp_add&quot;) of op number OPNUM.</source>
          <target state="translated">op 번호 OPNUM의 PP 함수 이름 (예 : &quot;pp_add&quot;)을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="02a39fd6c03ec1a2a83e8aab91a60f356bb07415" translate="yes" xml:space="preserve">
          <source>Return the SV from the GV.</source>
          <target state="translated">GV에서 SV를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="727e15a3c8b6127eecea72f3f105819ff2ffa4e4" translate="yes" xml:space="preserve">
          <source>Return the UTF-8 pointer &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; displaced by &lt;code&gt;off&lt;/code&gt; characters, either forward or backward.</source>
          <target state="translated">UTF-8 환경 포인터가 반환 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 의 에 의해 대체 &lt;code&gt;off&lt;/code&gt; 중 하나를 앞으로 또는 뒤로, 문자.</target>
        </trans-unit>
        <trans-unit id="8d968f68b024aece647e8680c726bc7db9edd52c" translate="yes" xml:space="preserve">
          <source>Return the XOP structure for a given custom op. This macro should be considered internal to OP_NAME and the other access macros: use them instead. This macro does call a function. Prior to 5.19.6, this was implemented as a function.</source>
          <target state="translated">주어진 커스텀 op에 대한 XOP 구조를 반환합니다. 이 매크로는 OP_NAME 내부와 다른 액세스 매크로의 내부로 간주되어야합니다. 대신 사용하십시오. 이 매크로는 함수를 호출합니다. 5.19.6 이전에는 기능으로 구현되었습니다.</target>
        </trans-unit>
        <trans-unit id="634135ecd1da66792d8f094c18bc9346662586a8" translate="yes" xml:space="preserve">
          <source>Return the XOP's flags.</source>
          <target state="translated">XOP의 플래그를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="30487e1855ef653ab46905c98d480b77228f2aab" translate="yes" xml:space="preserve">
          <source>Return the account information for the netrc entry</source>
          <target state="translated">netrc 항목에 대한 계정 정보를 반환</target>
        </trans-unit>
        <trans-unit id="8b881b828bff901023c8e000918699ba5dbd0191" translate="yes" xml:space="preserve">
          <source>Return the address of the symbol $symbol or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if not found. If the target system has separate functions to search for symbols of different types then dl_find_symbol() should search for function symbols first and then other types.</source>
          <target state="translated">$ symbol 기호의 주소를 반환하거나 찾지 못한 경우 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환하십시오 . 대상 시스템에 다른 유형의 심볼을 검색하는 별도의 함수가있는 경우 dl_find_symbol ()은 먼저 함수 심볼을 검색 한 다음 다른 유형을 검색해야합니다.</target>
        </trans-unit>
        <trans-unit id="188e4da3acea0de525e548ebfc63a6dd15038a3f" translate="yes" xml:space="preserve">
          <source>Return the address part of the sockaddr structure for the socket</source>
          <target state="translated">소켓에 대한 sockaddr 구조의 주소 부분을 반환</target>
        </trans-unit>
        <trans-unit id="292e0b9e2c15c4128537706efd8468986e9f767c" translate="yes" xml:space="preserve">
          <source>Return the address part of the sockaddr structure for the socket in a text form xx.xx.xx.xx</source>
          <target state="translated">소켓에 대한 sockaddr 구조의 주소 부분을 xx.xx.xx.xx 텍스트 형식으로 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="417769e36400c4340bd0f0b1764bbffbfb180d51" translate="yes" xml:space="preserve">
          <source>Return the address part of the sockaddr structure for the socket on the peer host</source>
          <target state="translated">피어 호스트의 소켓에 대한 sockaddr 구조의 주소 부분을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="58670ef25d3d2e51912a0db902386a1f7c4b2ddb" translate="yes" xml:space="preserve">
          <source>Return the address part of the sockaddr structure for the socket on the peer host in a text form xx.xx.xx.xx</source>
          <target state="translated">xx.xx.xx.xx 텍스트 형식으로 피어 호스트의 소켓에 대한 sockaddr 구조의 주소 부분을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="ce16968fe75861ae9734d1aaba4d7f185dc04169" translate="yes" xml:space="preserve">
          <source>Return the approximate number of decimal digits of the object. The output is one Perl scalar. This estimate must be greater than or equal to what &lt;code&gt;_len()&lt;/code&gt; returns.</source>
          <target state="translated">객체의 대략적인 소수 자릿수를 반환합니다. 출력은 하나의 Perl 스칼라입니다. 이 추정치는 &lt;code&gt;_len()&lt;/code&gt; 반환 하는 값 보다 크거나 같아야 합니다.</target>
        </trans-unit>
        <trans-unit id="837eb954405e12531332f24b523ef7f8a237f99e" translate="yes" xml:space="preserve">
          <source>Return the binary digest for the message.</source>
          <target state="translated">메시지의 이진 다이제스트를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="76859202fcb0e9ac7e5ba6622f8f634407cadd3a" translate="yes" xml:space="preserve">
          <source>Return the binary digest for the message. The returned string will be 16 bytes long.</source>
          <target state="translated">메시지의 이진 다이제스트를 반환합니다. 반환 된 문자열의 길이는 16 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="4e3446d9a703719a4a80fdf1e47f4551c84d9a32" translate="yes" xml:space="preserve">
          <source>Return the binary string representation of the number. The string must have a '0b' prefix.</source>
          <target state="translated">숫자의 이진 문자열 표현을 반환합니다. 문자열에는 '0b'접두사가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9398b13cea50287ad888ffe06e99baabafe083b5" translate="yes" xml:space="preserve">
          <source>Return the binomial coefficient OBJ1 over OBJ1.</source>
          <target state="translated">OBJ1에 대한 이항 계수 OBJ1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9039484dd443692be46208d331c0b51159f8498e" translate="yes" xml:space="preserve">
          <source>Return the bit string suitable as argument to the core select() call.</source>
          <target state="translated">핵심 select () 호출에 인수로 적합한 비트 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a5f95075e02c5a8968b5fc02a316855e3f107893" translate="yes" xml:space="preserve">
          <source>Return the class of the provided OP: that is, which of the *OP structures it uses. For core ops this currently gets the information out of PL_opargs, which does not always accurately reflect the type used. For custom ops the type is returned from the registration, and it is up to the registree to ensure it is accurate. The value returned will be one of the OA_* constants from op.h.</source>
          <target state="translated">제공된 OP의 클래스, 즉 사용하는 * OP 구조 중 하나를 리턴하십시오. 핵심 op의 경우 현재 PL_opargs에서 정보를 가져옵니다. 이는 항상 사용 된 유형을 정확하게 반영하지는 않습니다. 사용자 지정 작업의 경우 유형이 등록에서 반환되며 정확한지 확인하는 것은 등록 기관에 달려 있습니다. 반환 된 값은 op.h의 OA_ * 상수 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="cdd22a89d0c0732056821d3e2652ff7471889395" translate="yes" xml:space="preserve">
          <source>Return the class that numbers are upgraded to, is in fact returning &lt;code&gt;$Math::BigInt::upgrade&lt;/code&gt; .</source>
          <target state="translated">숫자가 업그레이드 된 클래스를 반환하고 실제로 &lt;code&gt;$Math::BigInt::upgrade&lt;/code&gt; 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="0f8cf3decb17230525b612d2ce53fb4008a0ff26" translate="yes" xml:space="preserve">
          <source>Return the content of the named file.</source>
          <target state="translated">명명 된 파일의 내용을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="df96bc69b3ecead78ca02d2e506c37ff6e94c5b4" translate="yes" xml:space="preserve">
          <source>Return the current position in the stream, as a numeric offset. Not yet supported.</source>
          <target state="translated">스트림의 현재 위치를 숫자 오프셋으로 반환합니다. 아직 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e690559d4145f70cc5d3e5e11e25676e89322515" translate="yes" xml:space="preserve">
          <source>Return the current position in the string, as an opaque object. Not yet supported.</source>
          <target state="translated">문자열에서 현재 위치를 불투명 한 객체로 반환합니다. 아직 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fd7dca073919e493549e6e64d4f75ec4eba58456" translate="yes" xml:space="preserve">
          <source>Return the current read pointer relative to this layer's buffer.</source>
          <target state="translated">이 레이어의 버퍼에 대한 현재의 읽기 포인터를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="6785250f6235af7b741f8a0b71cd239d72b24f42" translate="yes" xml:space="preserve">
          <source>Return the current time using Time::HiRes if available.</source>
          <target state="translated">가능한 경우 Time :: HiRes를 사용하여 현재 시간을 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="dcf7b904f166347e463e02724517b44d0a199a33" translate="yes" xml:space="preserve">
          <source>Return the description of a given custom op. This was once used by the OP_DESC macro, but is no longer: it has only been kept for compatibility, and should not be used.</source>
          <target state="translated">주어진 커스텀 op에 대한 설명을 반환합니다. 이것은 OP_DESC 매크로에서 한 번 사용되었지만 더 이상 사용되지 않습니다. 호환성을 위해서만 유지되었으므로 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="c624b8d833a8785007a3024ede7440f3302ebcf8" translate="yes" xml:space="preserve">
          <source>Return the encoding corresponding to &lt;code&gt;=encoding&lt;/code&gt; , but only if the encoding was recognized and handled.</source>
          <target state="translated">인코딩이 인식되고 처리 된 경우에만 &lt;code&gt;=encoding&lt;/code&gt; encoding에 해당하는 인코딩을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8a8a1fa7c8359855ac34f947f892a45599c7b805" translate="yes" xml:space="preserve">
          <source>Return the exponent of $x as BigInt.</source>
          <target state="translated">BigInt로 $ x의 지수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b123a2f9a5fbb5a8e843bffc94657f572853d43b" translate="yes" xml:space="preserve">
          <source>Return the file pointer. May be based on layers cached concept of position to avoid overhead.</source>
          <target state="translated">파일 포인터를 돌려줍니다. 오버 헤드를 피하기 위해 레이어 캐시 된 위치 개념을 기반으로 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4b8e0a203de9a2f8b0238606074a15dbdb144b6" translate="yes" xml:space="preserve">
          <source>Return the filename and filehandle as before except that the file is automatically removed when the program exits (dependent on $KEEP_ALL). Default is for the file to be removed if a file handle is requested and to be kept if the filename is requested. In a scalar context (where no filename is returned) the file is always deleted either (depending on the operating system) on exit or when it is closed (unless $KEEP_ALL is true when the temp file is created).</source>
          <target state="translated">프로그램이 종료 될 때 파일이 자동으로 제거되는 것을 제외하고 ($ KEEP_ALL에 따라) 파일 이름과 파일 핸들을 이전과 같이 반환하십시오. 기본값은 파일 핸들이 요청되면 파일이 제거되고 파일 이름이 요청되면 유지됩니다. 스칼라 컨텍스트 (파일 이름이 반환되지 않음)에서 파일은 종료시 (운영 체제에 따라) 종료되거나 파일이 닫힐 때 (임시 파일을 만들 때 $ KEEP_ALL이 true가 아닌 한) 항상 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="c5ffe224e48ba96441026249d004d9eab1c64a92" translate="yes" xml:space="preserve">
          <source>Return the first key in the hash.</source>
          <target state="translated">해시의 첫 번째 키를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="cb3e931346eddc9e8b89e84c987ef41ee29ac911" translate="yes" xml:space="preserve">
          <source>Return the flags for the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt; . Assumes a valid slot entry.</source>
          <target state="translated">오프셋 &lt;code&gt;po&lt;/code&gt; 에서 현재 컴파일 패드 이름에 대한 플래그를 반환합니다 . 유효한 슬롯 항목을 가정합니다.</target>
        </trans-unit>
        <trans-unit id="ca9c7b858ab6d79b29bc27e59d4583e4db63e5ff" translate="yes" xml:space="preserve">
          <source>Return the greatest common divisor of OBJ1 and OBJ2.</source>
          <target state="translated">OBJ1과 OBJ2의 최대 공약수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="26f5555affd43554d24ba89d3257ccbb070f4798" translate="yes" xml:space="preserve">
          <source>Return the hexadecimal string representation of the number. The string must have a '0x' prefix.</source>
          <target state="translated">숫자의 16 진 문자열 표시를 리턴하십시오. 문자열에는 '0x'접두사가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="78300a10673d49aac2c7d2638118529a8fd24084" translate="yes" xml:space="preserve">
          <source>Return the integer value of an SV, doing any necessary string conversion. If flags includes SV_GMAGIC, does an mg_get() first. Normally used via the &lt;code&gt;SvIV(sv)&lt;/code&gt; and &lt;code&gt;SvIVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">필요한 문자열 변환을 수행하여 SV의 정수 값을 반환하십시오. 플래그에 SV_GMAGIC이 포함 된 경우 mg_get ()을 먼저 수행합니다. 일반적으로 &lt;code&gt;SvIV(sv)&lt;/code&gt; 및 &lt;code&gt;SvIVx(sv)&lt;/code&gt; 매크로 를 통해 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="20ac31cc084af9a481fcfed39a383ae11d974451" translate="yes" xml:space="preserve">
          <source>Return the integral and fractional parts of a floating-point number.</source>
          <target state="translated">부동 소수점 숫자의 정수 부분을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c524f4cda2007c3b8d1ad04c8509f204d1ef649e" translate="yes" xml:space="preserve">
          <source>Return the internal debugger pointer to the line last executed, and print out that line.</source>
          <target state="translated">내부 디버거 포인터를 마지막으로 실행 한 행으로 되돌리고 해당 행을 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="2e078f55f1b0d95f9f0a40a5c03e2d9dd58e152f" translate="yes" xml:space="preserve">
          <source>Return the length of $x in digits for integer values.</source>
          <target state="translated">정수 값에 대해 $ x의 길이를 숫자로 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="f4ee3e3af109da20881554fc6a69449e5822abcf" translate="yes" xml:space="preserve">
          <source>Return the length of the UTF-8 char encoded string &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; in characters. Stops at &lt;code&gt;e&lt;/code&gt; (inclusive). If &lt;code&gt;e &amp;lt; s&lt;/code&gt; or if the scan would end up past &lt;code&gt;e&lt;/code&gt; , croaks.</source>
          <target state="translated">UTF-8 문자 인코딩 문자열 &lt;code&gt;&lt;a href=&quot;functions/s&quot;&gt;s&lt;/a&gt;&lt;/code&gt; 길이를 문자로 리턴하십시오 . &lt;code&gt;e&lt;/code&gt; 에서 멈 춥니 다 (포함). 만약 &lt;code&gt;e &amp;lt; s&lt;/code&gt; 또는 스캔이 지난 끝낼 것이다 경우 &lt;code&gt;e&lt;/code&gt; , croaks을.</target>
        </trans-unit>
        <trans-unit id="a98197ef5c464a180db80d4a1b70572835f76fe4" translate="yes" xml:space="preserve">
          <source>Return the login id for the netrc entry</source>
          <target state="translated">netrc 항목의 로그인 ID를 반환</target>
        </trans-unit>
        <trans-unit id="7abdbea3f8d8b5305d72c400a8a2fb4c507eeec1" translate="yes" xml:space="preserve">
          <source>Return the mantissa and exponent of a floating-point number.</source>
          <target state="translated">부동 소수점 숫자의 가수와 지수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="52e7ccc84edd95ffadc7b3008a78f1aa229500a2" translate="yes" xml:space="preserve">
          <source>Return the maximum POSIX realtime signal number available, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no POSIX realtime signals are available.</source>
          <target state="translated">사용 가능한 최대 POSIX 실시간 신호 번호를 반환하거나 사용 가능한 POSIX 실시간 신호가 없으면 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d206901a611b7a41b98e11262c76eb9f221e16d5" translate="yes" xml:space="preserve">
          <source>Return the minimum POSIX realtime signal number available, or &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if no POSIX realtime signals are available.</source>
          <target state="translated">사용 가능한 최소 POSIX 실시간 신호 번호를 반환하거나 사용 가능한 POSIX 실시간 신호가 없으면 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1636b01070f7a21a940b683cbf1b65b8f03329c2" translate="yes" xml:space="preserve">
          <source>Return the name for a given custom op. This was once used by the OP_NAME macro, but is no longer: it has only been kept for compatibility, and should not be used.</source>
          <target state="translated">주어진 커스텀 op의 이름을 반환합니다. 한 번 OP_NAME 매크로에서 사용되었지만 더 이상 사용되지 않습니다. 호환성을 위해서만 유지되었으므로 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="5b4a9e25a270f75917473bbf152107544b56c883" translate="yes" xml:space="preserve">
          <source>Return the name of a temporary file in the specified directory using a prefix. The file is guaranteed not to exist at the time the function was called, but such guarantees are good for one clock tick only. Always use the proper form of C</source>
          <target state="translated">접두사를 사용하여 지정된 디렉토리의 임시 파일 이름을 반환하십시오. 파일은 함수가 호출 될 당시에는 존재하지 않는다고 보장되지만 이러한 보장은 한 클럭 틱에만 적합합니다. 항상 올바른 형태의 C를 사용하십시오</target>
        </trans-unit>
        <trans-unit id="3ba16b2b97049c4a659a40c354387eb93cbeb5af" translate="yes" xml:space="preserve">
          <source>Return the name of the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt; . Assumes a valid slot entry.</source>
          <target state="translated">오프셋 &lt;code&gt;po&lt;/code&gt; 에서 현재 컴파일 패드 이름을 반환합니다 . 유효한 슬롯 항목을 가정합니다.</target>
        </trans-unit>
        <trans-unit id="a033252f0cddc65cf92a783d450048bfe503245e" translate="yes" xml:space="preserve">
          <source>Return the name of the provided OP. For core ops this looks up the name from the op_type; for custom ops from the op_ppaddr.</source>
          <target state="translated">제공된 OP의 이름을 반환하십시오. 핵심 op의 경우 op_type에서 이름을 찾습니다. op_ppaddr의 사용자 지정 작업에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4bf700f08ee3f022ac28c6d6ad550913448dc57f" translate="yes" xml:space="preserve">
          <source>Return the name of the temporary directory associated with this object (if the object was created using the &quot;newdir&quot; constructor).</source>
          <target state="translated">&quot;newdir&quot;생성자를 사용하여 오브젝트를 작성한 경우이 오브젝트와 연관된 임시 디렉토리의 이름을 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="e43849324c1a533bb5838dd6a99118c7f4bb297c" translate="yes" xml:space="preserve">
          <source>Return the name of the temporary file associated with this object (if the object was created using the &quot;new&quot; constructor).</source>
          <target state="translated">이 오브젝트와 연관된 임시 파일의 이름을 리턴하십시오 ( &quot;새&quot;생성자를 사용하여 오브젝트를 작성한 경우).</target>
        </trans-unit>
        <trans-unit id="02162d8694654f1de91669f0a540d00b7e0ea019" translate="yes" xml:space="preserve">
          <source>Return the next available job as &lt;a href=&quot;scheduler/job&quot;&gt;TAP::Parser::Scheduler::Job&lt;/a&gt; object or &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if none are available. Returns a &lt;a href=&quot;scheduler/spinner&quot;&gt;TAP::Parser::Scheduler::Spinner&lt;/a&gt; if the scheduler still has pending jobs but none are available to run right now.</source>
          <target state="translated">사용 가능한 다음 작업을 &lt;a href=&quot;scheduler/job&quot;&gt;TAP :: Parser :: Scheduler :: Job&lt;/a&gt; 객체로 반환 하거나 사용 가능한 것이 없으면 &lt;code&gt;&lt;a href=&quot;../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 로 반환하십시오. 스케줄러에 아직 보류중인 작업이 있지만 현재 실행할 수있는 작업이없는 경우 &lt;a href=&quot;scheduler/spinner&quot;&gt;TAP :: Parser :: Scheduler :: Spinner를&lt;/a&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="b08468342f9e7382ad73acce7a48a0ae2c5d49c4" translate="yes" xml:space="preserve">
          <source>Return the next character from the file, or undef if none remain.</source>
          <target state="translated">파일에서 다음 문자를 반환하거나 남아 있지 않으면 undef</target>
        </trans-unit>
        <trans-unit id="feda6626aed77511c6b3df7b02b5d54f5d9359f6" translate="yes" xml:space="preserve">
          <source>Return the next key in the hash.</source>
          <target state="translated">해시에서 다음 키를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="9efe519efe01a23e51434ba5d2dca6b1f2bbfa18" translate="yes" xml:space="preserve">
          <source>Return the next line from the file, or undef on end of string. Can safely be called in an array context. Currently ignores $/ ($INPUT_RECORD_SEPARATOR or $RS when &lt;a href=&quot;../english&quot;&gt;English&lt;/a&gt; is in use) and treats lines as delimited by &quot;\n&quot;.</source>
          <target state="translated">파일에서 다음 줄을 반환하거나 문자열 끝에서 undef를 지정하십시오. 배열 컨텍스트에서 안전하게 호출 할 수 있습니다. 현재 $ / ( &lt;a href=&quot;../english&quot;&gt;영어&lt;/a&gt; 를 사용하는 경우 $ INPUT_RECORD_SEPARATOR 또는 $ RS)를 무시 하고 행을 &quot;\ n&quot;으로 구분하여 처리합니다.</target>
        </trans-unit>
        <trans-unit id="8c2510580b82e526e2c44344deb3c0f42c5dcd23" translate="yes" xml:space="preserve">
          <source>Return the num value of an SV, doing any necessary string or integer conversion. If flags includes SV_GMAGIC, does an mg_get() first. Normally used via the &lt;code&gt;SvNV(sv)&lt;/code&gt; and &lt;code&gt;SvNVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">필요한 문자열 또는 정수 변환을 수행하여 SV의 숫자 값을 반환하십시오. 플래그에 SV_GMAGIC이 포함 된 경우 mg_get ()을 먼저 수행합니다. 일반적으로 &lt;code&gt;SvNV(sv)&lt;/code&gt; 및 &lt;code&gt;SvNVx(sv)&lt;/code&gt; 매크로 를 통해 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="a997a1ffdb6dd3ce7910823fc3237fe33197cb4a" translate="yes" xml:space="preserve">
          <source>Return the number of bytes left to be read in the current buffer.</source>
          <target state="translated">현재 버퍼에서 읽을 남은 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cc25533fdf214ffc53e04458cec2a628e4850dd6" translate="yes" xml:space="preserve">
          <source>Return the number of bytes that last &lt;code&gt;Fill()&lt;/code&gt; put in the buffer.</source>
          <target state="translated">마지막 &lt;code&gt;Fill()&lt;/code&gt; 이 버퍼에 넣은 바이트 수를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3415ff5c3118088729d890b8e343a722f1c7ca32" translate="yes" xml:space="preserve">
          <source>Return the number of trailing decimal zeros. The output is a Perl scalar.</source>
          <target state="translated">후행 십진수 0의 수를 반환합니다. 출력은 Perl 스칼라입니다.</target>
        </trans-unit>
        <trans-unit id="53d6332789548408c852117d2287bf3496bf502b" translate="yes" xml:space="preserve">
          <source>Return the octal string representation of the number. The string must have a '0x' prefix.</source>
          <target state="translated">숫자의 8 진 문자열 표현을 반환합니다. 문자열에는 '0x'접두사가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="0af150d92ccff6cf47986722b93faa80a783bef2" translate="yes" xml:space="preserve">
          <source>Return the parsed YAML data for this result</source>
          <target state="translated">이 결과에 대해 파싱 된 YAML 데이터를 반환</target>
        </trans-unit>
        <trans-unit id="6936f656b1022b3d515521882aee4f8e6b40cc55" translate="yes" xml:space="preserve">
          <source>Return the password for the netrc entry</source>
          <target state="translated">netrc 항목의 비밀번호를 반환</target>
        </trans-unit>
        <trans-unit id="6ee6509326cfe062105e077d56cad48771864d0d" translate="yes" xml:space="preserve">
          <source>Return the port number for the socket on the peer host.</source>
          <target state="translated">피어 호스트의 소켓에 대한 포트 번호를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="bae0c64b302636d3436b0efcbbac0c778918a8b2" translate="yes" xml:space="preserve">
          <source>Return the port number that the socket is using on the local host</source>
          <target state="translated">소켓이 로컬 호스트에서 사용중인 포트 번호를 반환</target>
        </trans-unit>
        <trans-unit id="69ae67650c145a18aadf88178cd2eaf271f56d73" translate="yes" xml:space="preserve">
          <source>Return the positive square root of EXPR. If EXPR is omitted, uses &lt;code&gt;$_&lt;/code&gt; . Works only for non-negative operands unless you've loaded the &lt;code&gt;Math::Complex&lt;/code&gt; module.</source>
          <target state="translated">EXPR의 양의 제곱근을 반환합니다. EXPR이 생략되면 &lt;code&gt;$_&lt;/code&gt; . &lt;code&gt;Math::Complex&lt;/code&gt; 모듈을 로드하지 않은 경우 음이 아닌 피연산자에 대해서만 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="89ca398524ee97aed064f109c0014774b8467f09" translate="yes" xml:space="preserve">
          <source>Return the raw YAMLish source from the most recent &lt;code&gt;&lt;a href=&quot;../../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">가장 최근에 &lt;code&gt;&lt;a href=&quot;../../../functions/read&quot;&gt;read&lt;/a&gt;&lt;/code&gt; YAMLish 소스를 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="de1a7ced0f81af093a8f41863ef2c71d5d568215" translate="yes" xml:space="preserve">
          <source>Return the remaining time in the interval timer specified by &lt;code&gt;$which&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$which&lt;/code&gt; 의해 지정된 간격 타이머의 남은 시간을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f5c943ca1e7b87d7eb64817e23809542799e98fe" translate="yes" xml:space="preserve">
          <source>Return the sever's connection banner</source>
          <target state="translated">서버의 연결 배너를 반환</target>
        </trans-unit>
        <trans-unit id="4e9f81c15dc0ff4925fd465d43570e1f6c64719d" translate="yes" xml:space="preserve">
          <source>Return the sign, of $x, meaning either &lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;-inf&lt;/code&gt; , &lt;code&gt;+inf&lt;/code&gt; or NaN.</source>
          <target state="translated">&lt;code&gt;+&lt;/code&gt; , &lt;code&gt;-&lt;/code&gt; , &lt;code&gt;-inf&lt;/code&gt; , &lt;code&gt;+inf&lt;/code&gt; 또는 NaN을 의미하는 $ x의 부호를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a68dac6ce8097ce942d0b9d9018e95b0ed056421" translate="yes" xml:space="preserve">
          <source>Return the signed bitwise and.</source>
          <target state="translated">부호있는 비트를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="92027d6c5195925ff1e04f4b468405bed61a4ad7" translate="yes" xml:space="preserve">
          <source>Return the signed bitwise exclusive or.</source>
          <target state="translated">부호있는 비트 배타적 또는를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="8aaddf7d04671db3e0e27536bf4bdbd8fdc46681" translate="yes" xml:space="preserve">
          <source>Return the signed bitwise or.</source>
          <target state="translated">부호있는 비트 또는를 반환하십시오.</target>
        </trans-unit>
        <trans-unit id="fdcefa87799574af1010b6f5a87a9651f3b44f50" translate="yes" xml:space="preserve">
          <source>Return the signed mantissa of $x as BigInt.</source>
          <target state="translated">$ x의 부호있는 가수를 BigInt로 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="7f626cb13b8df3915be47a73eb5046f1db65dc55" translate="yes" xml:space="preserve">
          <source>Return the square root of the object, truncated to integer.</source>
          <target state="translated">정수로 잘린 객체의 제곱근을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c947b24354fbf3d8637c5d76e520b817c15cb81e" translate="yes" xml:space="preserve">
          <source>Return the stash associated with an &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; variable. Assumes the slot entry is a valid &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; lexical.</source>
          <target state="translated">과 관련된 숨김 돌려 &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 변수를. 슬롯 항목을 가정하는 것은 유효은 &lt;code&gt;&lt;a href=&quot;functions/our&quot;&gt;our&lt;/a&gt;&lt;/code&gt; 어휘.</target>
        </trans-unit>
        <trans-unit id="3642aef1d3ef36347beebbb348941672ea0fe04e" translate="yes" xml:space="preserve">
          <source>Return the status value.</source>
          <target state="translated">상태 값을 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="ad259b3229b3f03ad7a05da79959b9bdfcb98992" translate="yes" xml:space="preserve">
          <source>Return the type (stash) of the current compiling pad name at offset &lt;code&gt;po&lt;/code&gt; . Must be a valid name. Returns null if not typed.</source>
          <target state="translated">오프셋 &lt;code&gt;po&lt;/code&gt; 에서 현재 컴파일 패드 이름의 유형 (스 태쉬)을 반환합니다 . 유효한 이름이어야합니다. 입력하지 않으면 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6e1fd917f067439cdaa992595eba43fee3a95d2d" translate="yes" xml:space="preserve">
          <source>Return the unsigned integer value of an SV, doing any necessary string conversion. If flags includes SV_GMAGIC, does an mg_get() first. Normally used via the &lt;code&gt;SvUV(sv)&lt;/code&gt; and &lt;code&gt;SvUVx(sv)&lt;/code&gt; macros.</source>
          <target state="translated">필요한 문자열 변환을 수행하여 SV의 부호없는 정수 값을 리턴하십시오. 플래그에 SV_GMAGIC이 포함 된 경우 mg_get ()을 먼저 수행합니다. 일반적으로 &lt;code&gt;SvUV(sv)&lt;/code&gt; 및 &lt;code&gt;SvUVx(sv)&lt;/code&gt; 매크로 를 통해 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="9accb2f2600a64c2a60c9adc4585784021b20200" translate="yes" xml:space="preserve">
          <source>Return to the Mytest directory and add the following code to the end of Mytest.xs:</source>
          <target state="translated">Mytest 디렉토리로 돌아가서 Mytest.xs 끝에 다음 코드를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="16e157ca958c0aa92419c19fe9f34acb7d3e3a49" translate="yes" xml:space="preserve">
          <source>Return true if $x has a denominator of 1 (e.g. no fraction parts), otherwise false. Please note that '-inf', 'inf' and 'NaN' aren't integer.</source>
          <target state="translated">$ x의 분모가 1 인 경우 true를 반환하고 그렇지 않으면 false를 반환합니다. '-inf', 'inf'및 'NaN'은 정수가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="3e5085efd71ecbbc4c4f0d5c30df6dcd9453540b" translate="yes" xml:space="preserve">
          <source>Return true if $x is even, otherwise false.</source>
          <target state="translated">$ x가 짝수이면 true를, 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5a98829c6119b41b7da46ad43316dccea81b06d6" translate="yes" xml:space="preserve">
          <source>Return true if $x is exactly one, otherwise false.</source>
          <target state="translated">$ x가 정확히 1이면 true를, 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="163f49b8f3bbe71386313ef1a2133dfbdc4d8126" translate="yes" xml:space="preserve">
          <source>Return true if $x is exactly zero, otherwise false.</source>
          <target state="translated">$ x가 정확히 0이면 true를, 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="32d892363c3a52bfb8993dc9d140a02c83af3833" translate="yes" xml:space="preserve">
          <source>Return true if $x is negative (smaller than zero), otherwise false. Please note that '-inf' is also negative, while 'NaN' and '+inf' aren't.</source>
          <target state="translated">$ x가 음수 (0보다 작음)이면 true를, 그렇지 않으면 false를 반환합니다. '-inf'도 음수이지만 'NaN'과 '+ inf'는 음수가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="87f25e6b0d7a878983f2344572ab5eda7cad6429" translate="yes" xml:space="preserve">
          <source>Return true if $x is odd, otherwise false.</source>
          <target state="translated">$ x가 홀수이면 true를, 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="45c48544c3d0d53ce836775f04289df45ce6bdab" translate="yes" xml:space="preserve">
          <source>Return true if $x is positive (greater than or equal to zero), otherwise false. Please note that '+inf' is also positive, while 'NaN' and '-inf' aren't.</source>
          <target state="translated">$ x가 양수 (0 이상)이면 true를, 그렇지 않으면 false를 반환합니다. '+ inf'도 긍정적 인 반면 'NaN'과 '-inf'는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8a6297003ef0b9ffe9635e65ad2f17339612fa0b" translate="yes" xml:space="preserve">
          <source>Return true if &lt;code&gt;$var&lt;/code&gt; is tainted.</source>
          <target state="translated">&lt;code&gt;$var&lt;/code&gt; 가 오염 되면 true를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d3c512c943e1db417a0823b6edf8178852e9cfaa" translate="yes" xml:space="preserve">
          <source>Return true if all the tests passed and no parse errors were detected.</source>
          <target state="translated">모든 테스트가 통과되고 구문 분석 오류가 발견되지 않으면 true를 리턴하십시오.</target>
        </trans-unit>
        <trans-unit id="730216ef2c3fed22da3e5fd25b9641b48475824e" translate="yes" xml:space="preserve">
          <source>Return true if the time returned by get_time is high resolution (i.e. if Time::HiRes is available).</source>
          <target state="translated">get_time에 의해 반환 된 시간이 고해상도이면 (즉, Time :: HiRes가 사용 가능한 경우) true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="232f3db04c4faa620bfbfc11fd3689a472ef9881" translate="yes" xml:space="preserve">
          <source>Return value</source>
          <target state="translated">반환 값</target>
        </trans-unit>
        <trans-unit id="f9ab1cc2f5a6f7fa7cf3334ca9e0156816d4a68e" translate="yes" xml:space="preserve">
          <source>Return value: path to the written file.</source>
          <target state="translated">반환 값 : 쓰여진 파일의 경로.</target>
        </trans-unit>
        <trans-unit id="aa37c23df8c6e1a5476cb9bfe9992c9d3632c327" translate="yes" xml:space="preserve">
          <source>Return values (especially for device and inode) may be bogus. (Win32)</source>
          <target state="translated">반환 값 (특히 장치 및 inode의 경우)은 허위 일 수 있습니다. (Win32)</target>
        </trans-unit>
        <trans-unit id="2ee45f810b0d5a87b3109e7a98dc00ce2ad95d67" translate="yes" xml:space="preserve">
          <source>Return values and Errors</source>
          <target state="translated">반환 값과 에러</target>
        </trans-unit>
        <trans-unit id="60b4a13548e07b2bc054b98557e39378fb1b5195" translate="yes" xml:space="preserve">
          <source>Return values are always objects, strings, Perl scalars, or true/false for comparison routines.</source>
          <target state="translated">리턴 값은 항상 비교 루틴의 오브젝트, 문자열, Perl 스칼라 또는 true / false입니다.</target>
        </trans-unit>
        <trans-unit id="a9b10bedc7cb1c3e14966d1a3819d76dfc9e6417" translate="yes" xml:space="preserve">
          <source>Return your results in the most generic form possible and allow the user to choose how to use them. The most generic form possible is usually a Perl data structure which can then be used to generate a text report, HTML, XML, a database query, or whatever else your users require.</source>
          <target state="translated">가능한 가장 일반적인 형태로 결과를 반환하고 사용자가 결과를 사용하는 방법을 선택할 수 있도록합니다. 가능한 가장 일반적인 형태는 일반적으로 텍스트 보고서, HTML, XML, 데이터베이스 쿼리 또는 기타 사용자가 필요로하는 것을 생성하는 데 사용될 수있는 Perl 데이터 구조입니다.</target>
        </trans-unit>
        <trans-unit id="38b4b2f7afdfb729ac6e2e26257ac6ce6b48a054" translate="yes" xml:space="preserve">
          <source>Returned Data</source>
          <target state="translated">반환 된 데이터</target>
        </trans-unit>
        <trans-unit id="aa0028982d694bb71d734c691957ac561c5d4e9c" translate="yes" xml:space="preserve">
          <source>Returned value: A LIST &lt;code&gt;($serialized, $ref1, $ref2, ...)&lt;/code&gt; where $serialized is the serialized form to be used, and the optional $ref1, $ref2, etc... are extra references that you wish to let the Storable engine serialize.</source>
          <target state="translated">반환 값 : LIST &lt;code&gt;($serialized, $ref1, $ref2, ...)&lt;/code&gt; 여기서 $ serialized는 사용할 직렬화 된 형식이고 선택적인 $ ref1, $ ref2 등은 추가 참조입니다. Storable 엔진을 직렬화하십시오.</target>
        </trans-unit>
        <trans-unit id="ce1c2ea608cbde5f032e96aa31f665bfe3cb479f" translate="yes" xml:space="preserve">
          <source>Returned value: none.</source>
          <target state="translated">반환 값 : 없음</target>
        </trans-unit>
        <trans-unit id="8433c4af8bada7af974e6de0632146d31d37a1fc" translate="yes" xml:space="preserve">
          <source>Returned value: object of type &lt;code&gt;class&lt;/code&gt;</source>
          <target state="translated">리턴 값 : &lt;code&gt;class&lt;/code&gt; 유형의 오브젝트</target>
        </trans-unit>
        <trans-unit id="2826cc60681effcff36990251137b663bfeb2b44" translate="yes" xml:space="preserve">
          <source>Returning Data from Perl via the Parameter List</source>
          <target state="translated">매개 변수 목록을 통해 Perl에서 데이터 리턴</target>
        </trans-unit>
        <trans-unit id="03bd8e1f4409ce51cb32918ef08262dbb9855b2f" translate="yes" xml:space="preserve">
          <source>Returning SVs, AVs and HVs through RETVAL</source>
          <target state="translated">RETVAL을 통해 SV, AV 및 HV 반환</target>
        </trans-unit>
        <trans-unit id="5da972aed07dfd92c54f5758d5b006f1b7bd67ff" translate="yes" xml:space="preserve">
          <source>Returning Undef And Empty Lists</source>
          <target state="translated">정의되지 않은 빈 목록 반환</target>
        </trans-unit>
        <trans-unit id="7bbd7e11b07ff21c3115805bbbee9f1ad48a03e0" translate="yes" xml:space="preserve">
          <source>Returning a List in a Scalar Context</source>
          <target state="translated">스칼라 컨텍스트에서리스트 반환</target>
        </trans-unit>
        <trans-unit id="6d881f622789472ae5074294a445f1a5e10a46db" translate="yes" xml:space="preserve">
          <source>Returning a List of Values</source>
          <target state="translated">값 목록 반환</target>
        </trans-unit>
        <trans-unit id="47f8e7e7825fe920d32a8e36d5ca8d5824e35776" translate="yes" xml:space="preserve">
          <source>Returning a Scalar</source>
          <target state="translated">스칼라 반환</target>
        </trans-unit>
        <trans-unit id="70e0a3e67d16c3e259eea9ef950eb9bffb32921e" translate="yes" xml:space="preserve">
          <source>Returning a list in a scalar context</source>
          <target state="translated">스칼라 컨텍스트에서 목록 반환</target>
        </trans-unit>
        <trans-unit id="f076044dab2ccb151f04e64c4086ddafdf56c6db" translate="yes" xml:space="preserve">
          <source>Returning a list of values</source>
          <target state="translated">값 목록 반환</target>
        </trans-unit>
        <trans-unit id="a9369ecc429137365ab52f2e23b2dc4784efa0c0" translate="yes" xml:space="preserve">
          <source>Returning closures from threads should not be relied upon. Depending on the Perl version and the application code, results may range from success, to (apparently harmless) warnings of leaked scalar, or all the way up to crashing of the Perl interpreter.</source>
          <target state="translated">나사산의 복귀 폐쇄에 의존해서는 안됩니다. Perl 버전과 응용 프로그램 코드에 따라 결과는 성공에서 누출 된 스칼라에 대한 경고 (아마도 무해한) 경고 또는 Perl 인터프리터 충돌까지 다양합니다.</target>
        </trans-unit>
        <trans-unit id="71fee7775bbde8a5444661735c97423ac83b2588" translate="yes" xml:space="preserve">
          <source>Returning objects from threads does not work. Depending on the classes involved, you may be able to work around this by returning a serialized version of the object (e.g., using &lt;a href=&quot;data/dumper&quot;&gt;Data::Dumper&lt;/a&gt; or &lt;a href=&quot;storable&quot;&gt;Storable&lt;/a&gt;), and then reconstituting it in the joining thread. If you're using Perl 5.10.0 or later, and if the class supports &lt;a href=&quot;threads/shared#OBJECTS&quot;&gt;shared objects&lt;/a&gt;, you can pass them via &lt;a href=&quot;thread/queue&quot;&gt;shared queues&lt;/a&gt;.</source>
          <target state="translated">스레드에서 객체를 반환하지 않습니다. 관련된 클래스에 따라 직렬화 된 버전의 객체 (예 : &lt;a href=&quot;data/dumper&quot;&gt;Data :: Dumper&lt;/a&gt; 또는 &lt;a href=&quot;storable&quot;&gt;Storable 사용&lt;/a&gt; ) 를 반환 한 다음 결합 스레드에서 재구성 하여이 문제를 해결할 수 있습니다. Perl 5.10.0 이상을 사용 중이고 클래스가 &lt;a href=&quot;threads/shared#OBJECTS&quot;&gt;공유 오브젝트를&lt;/a&gt; 지원하는 경우 &lt;a href=&quot;thread/queue&quot;&gt;공유 큐&lt;/a&gt; 를 통해 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9582a02f141fc4b345b2936eba691cd0654efebc" translate="yes" xml:space="preserve">
          <source>Returns</source>
          <target state="translated">Returns</target>
        </trans-unit>
        <trans-unit id="528b3e4ac6c75972df264473be40759653e505fc" translate="yes" xml:space="preserve">
          <source>Returns $x as a BigInt (truncated towards zero). In BigInt this is the same as &lt;code&gt;copy()&lt;/code&gt; .</source>
          <target state="translated">$ x를 BigInt로 리턴합니다 (0쪽으로 잘림). BigInt에서 이것은 &lt;code&gt;copy()&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="0d3c5a8af51d00f168a13f7248c2c891045778f0" translate="yes" xml:space="preserve">
          <source>Returns -1 on error, which is considered to include the case where the layer cannot provide such a file descriptor.</source>
          <target state="translated">계층에서 이러한 파일 설명자를 제공 할 수없는 경우를 포함하는 것으로 간주되는 오류시 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="888c6b88522c271b9f85a8ccab52efe3a52513f1" translate="yes" xml:space="preserve">
          <source>Returns -1 on failure to get the file pointer.</source>
          <target state="translated">파일 포인터를 가져 오지 못하면 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f57c4c00b98ef849f0e779ee1e73c2774ca69841" translate="yes" xml:space="preserve">
          <source>Returns 0 on end-of-file, 1 if not end-of-file, -1 on error.</source>
          <target state="translated">파일 끝에서 0을, 파일 끝이 아닌 경우 1을, 오류가 발생하면 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e5f02febc55ff88806274778fa60fd3b2c4df15e" translate="yes" xml:space="preserve">
          <source>Returns 0 on success and failure. If &lt;code&gt;Popped()&lt;/code&gt; returns</source>
          <target state="translated">성공 및 실패시 0을 반환합니다. 만약 &lt;code&gt;Popped()&lt;/code&gt; 반환</target>
        </trans-unit>
        <trans-unit id="ba44f8d92ad300a7e94db16c55bfdd6ecdd4afb0" translate="yes" xml:space="preserve">
          <source>Returns 0 on success, -1 on failure.</source>
          <target state="translated">성공하면 0을, 실패하면 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="63b5a5e25f5f4134ba8459b6bef0a63190538c27" translate="yes" xml:space="preserve">
          <source>Returns 0 on success.</source>
          <target state="translated">성공하면 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e8046efb8fc3682fd19fe7808d60a87a9e5c745c" translate="yes" xml:space="preserve">
          <source>Returns 0 on success. On failure returns -1 and should set errno.</source>
          <target state="translated">성공하면 0을 반환합니다. 실패하면 -1을 반환하고 errno를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="73f81b7083f8b1af584f696d11723cadb45e8924" translate="yes" xml:space="preserve">
          <source>Returns 1 (when &lt;code&gt;$a&lt;/code&gt; is greater than &lt;code&gt;$b&lt;/code&gt; ) or 0 (when &lt;code&gt;$a&lt;/code&gt; is equal to &lt;code&gt;$b&lt;/code&gt; ) or -1 (when &lt;code&gt;$a&lt;/code&gt; is less than &lt;code&gt;$b&lt;/code&gt; ).</source>
          <target state="translated">1 ( &lt;code&gt;$a&lt;/code&gt; 가 &lt;code&gt;$b&lt;/code&gt; 보다 큰 경우 ) 또는 0 ( &lt;code&gt;$a&lt;/code&gt; 가 &lt;code&gt;$b&lt;/code&gt; 같은 경우) 또는 -1 ( &lt;code&gt;$a&lt;/code&gt; 가 &lt;code&gt;$b&lt;/code&gt; 보다 작은 경우)을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="cb16034d876707df8f96272a5dff4e89d28412d5" translate="yes" xml:space="preserve">
          <source>Returns 1 if a new stream was found, 0 if none was found, and -1 if an error was encountered.</source>
          <target state="translated">새로운 스트림이 발견되면 1을, 아무것도 발견하지 않으면 0을, 오류가 발생하면 -1을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="0102da941d55e0eb75291f811c83ed21853e46ba" translate="yes" xml:space="preserve">
          <source>Returns 1 if all the modules contained in the distribution are up-to-date. Relies on containsmods.</source>
          <target state="translated">배포에 포함 된 모든 모듈이 최신 상태이면 1을 반환합니다. containsmods에 의존합니다.</target>
        </trans-unit>
        <trans-unit id="e1ee0b0c392190122ec7ba8d9d8a47a433cb8fa9" translate="yes" xml:space="preserve">
          <source>Returns 1 if the bundle itself and all its members are up-to-date.</source>
          <target state="translated">번들 자체와 모든 멤버가 최신 상태이면 1을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c4757e4d71f85ab2279932983f16fd6cf23839fc" translate="yes" xml:space="preserve">
          <source>Returns 1 if the module is installed and up-to-date.</source>
          <target state="translated">모듈이 설치되어 있고 최신 인 경우 1을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="405c713afd3e87c236988bdf5227a773db888110" translate="yes" xml:space="preserve">
          <source>Returns 1 if the next read on FILEHANDLE will return end of file</source>
          <target state="translated">FILEHANDLE의 다음 읽기가 파일 끝을 리턴하면 1을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b1242f6c30157c63339a787c7ddbc442bf5b7836" translate="yes" xml:space="preserve">
          <source>Returns 1 if there is an error (usually when &lt;code&gt;PERLIO_F_ERROR&lt;/code&gt; is set), 0 otherwise.</source>
          <target state="translated">오류가있는 경우 1 (일반적으로 &lt;code&gt;PERLIO_F_ERROR&lt;/code&gt; 가 설정된 경우)을, 그렇지 않으면 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e4230f25ecb39ed98585d80e80f90d64f3e38024" translate="yes" xml:space="preserve">
          <source>Returns 1 if this distribution file seems to be a perl distribution. Normally this is derived from the file name only, but the index from CPAN can contain a hint to achieve a return value of true for other filenames too.</source>
          <target state="translated">이 배포 파일이 perl 배포 인 것처럼 1을 반환합니다. 일반적으로 이는 파일 이름에서만 파생되지만 CPAN의 색인에는 다른 파일 이름에 대해서도 true 값을 리턴하는 힌트가 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e104bab9cb8759f62e14ccebe1f50ead99ecb96" translate="yes" xml:space="preserve">
          <source>Returns 1 on success, 0 on failure.</source>
          <target state="translated">성공하면 1을, 실패하면 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="95ceb615341b2778f45facc3ac91c64f1dcd7626" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;#config&quot;&gt;config&lt;/a&gt; for the $class given. Class names may be fully qualified or abbreviated, eg:</source>
          <target state="translated">주어진 $ class에 대한 &lt;a href=&quot;#config&quot;&gt;설정&lt;/a&gt; 을 반환합니다 . 클래스 이름은 다음과 같이 정규화되거나 약어로 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99ff4197b5764d632b5b57d44604a402c3417883" translate="yes" xml:space="preserve">
          <source>Returns &lt;a href=&quot;../parser&quot;&gt;TAP::Parser&lt;/a&gt; grammar object that will parse the TAP stream from the specified iterator. Both &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;parser&lt;/code&gt; are required arguments. If &lt;code&gt;version&lt;/code&gt; is not set it defaults to &lt;code&gt;12&lt;/code&gt; (see &lt;a href=&quot;#set_version&quot;&gt;set_version&lt;/a&gt; for more details).</source>
          <target state="translated">지정된 반복자에서 TAP 스트림을 구문 분석 할 &lt;a href=&quot;../parser&quot;&gt;TAP :: Parser&lt;/a&gt; 문법 오브젝트를 리턴 합니다. 두 &lt;code&gt;iterator&lt;/code&gt; 및 &lt;code&gt;parser&lt;/code&gt; 인수가 필요합니다. 경우 &lt;code&gt;version&lt;/code&gt; 에 그것을 기본값으로 설정되지 않은 &lt;code&gt;12&lt;/code&gt; (참조 &lt;a href=&quot;#set_version&quot;&gt;set_version&lt;/a&gt; 자세한 내용을).</target>
        </trans-unit>
        <trans-unit id="c991a0d06fdf084bc9de4bde379609419ebafebd" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;$fh&lt;/code&gt; itself if &lt;code&gt;$fh&lt;/code&gt; may be used as a filehandle and is open, or is is a tied handle. Otherwise &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;$fh&lt;/code&gt; 가 파일 핸들로 사용될 수 있고 열려 있거나 묶인 핸들 인 경우 &lt;code&gt;$fh&lt;/code&gt; 자체를 반환 합니다. 그렇지 않으면 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="e7bac7dcd1796b1dda62e6c1d9092908641c82ca" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; for success; on error, returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the first argument is not a valid filehandle, or returns &lt;code&gt;0&lt;/code&gt; and sets &lt;code&gt;$!&lt;/code&gt; for any other failure.</source>
          <target state="translated">성공하려면 &lt;code&gt;1&lt;/code&gt; 을 반환합니다 . 오류가 발생 하면 첫 번째 인수가 유효한 파일 핸들이 아닌 경우 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환 하거나 &lt;code&gt;0&lt;/code&gt; 을 반환 하고 &lt;code&gt;$!&lt;/code&gt; 다른 실패에 대한.</target>
        </trans-unit>
        <trans-unit id="ade90323fde26274914df6d59126343322076239" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; for success; on error, returns &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the first argument is not a valid filehandle, or returns &lt;code&gt;0&lt;/code&gt; and sets &lt;code&gt;$!&lt;/code&gt; for any other failure.</source>
          <target state="translated">성공하려면 &lt;code&gt;1&lt;/code&gt; 을 반환합니다 . 오류가 발생 하면 첫 번째 인수가 유효한 파일 핸들이 아닌 경우 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환 하거나 &lt;code&gt;0&lt;/code&gt; 을 반환 하고 &lt;code&gt;$!&lt;/code&gt; 다른 실패에 대한.</target>
        </trans-unit>
        <trans-unit id="7fba5f4b2a8a65724290b52d186de9858fa6db2c" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;1&lt;/code&gt; upon success, &lt;code&gt;0&lt;/code&gt; otherwise.</source>
          <target state="translated">반환 &lt;code&gt;1&lt;/code&gt; 성공시, &lt;code&gt;0&lt;/code&gt; , 그렇지 않으면.</target>
        </trans-unit>
        <trans-unit id="136cf3a05dcde424fd7cd5db77033d53cc62479d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../../../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the program has never failed.</source>
          <target state="translated">프로그램이 실패하지 않은 경우 &lt;code&gt;&lt;a href=&quot;../../../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0c843475d97734dc686bf6af10cb54c997e3ca80" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;../../../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the program has never passed.</source>
          <target state="translated">프로그램이 통과 한 적이 없으면 &lt;code&gt;&lt;a href=&quot;../../../../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="168d3eac2c65ee157bac98482d92871d6026d13e" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if it was not called yet, otherwise bit 1 is set if on the previous call do_harderror was enabled, bit 2 is set if on previous call do_exception was enabled.</source>
          <target state="translated">아직 호출되지 않은 경우 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환 하고, 그렇지 않으면 이전 호출에서 do_harderror가 활성화 된 경우 비트 1이 설정되고, 이전 호출에서 do_exception이 활성화 된 경우 비트 2가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="01b2691d1600db97fed049bb755ceb8ab99064f6" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if it was not called yet, otherwise return false if errors were not requested to be written to a hard drive, or the drive letter if this was requested.</source>
          <target state="translated">아직 호출되지 않은 경우 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환 하고, 그렇지 않으면 오류가 하드 드라이브에 기록되도록 요청되지 않은 경우 false를 반환하고, 요청 된 경우 드라이브 문자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="627f39ba23bdb2924ba3451ee791b5899ecfb9e5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure.</source>
          <target state="translated">실패시 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0201821892ab945e07f6a5ef79660efddb739cd7" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure. Note: do not use &lt;code&gt;access()&lt;/code&gt; for security purposes. Between the &lt;code&gt;access()&lt;/code&gt; call and the operation you are preparing for the permissions might change: a classic</source>
          <target state="translated">실패시 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . 참고 : 보안 목적으로 &lt;code&gt;access()&lt;/code&gt; 를 사용하지 마십시오 . &lt;code&gt;access()&lt;/code&gt; 호출과 권한을 준비중인 작업 사이에서 다음 과 같이 변경 될 수 있습니다. 클래식</target>
        </trans-unit>
        <trans-unit id="55152abc1dc2e6224fe3924787bee88e509b5731" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure. The &lt;code&gt;$mode&lt;/code&gt; is similar to the mode of &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir()&lt;/a&gt;&lt;/code&gt;, see &lt;a href=&quot;functions/mkdir&quot;&gt;mkdir&lt;/a&gt;, though for &lt;code&gt;mkfifo&lt;/code&gt; you &lt;b&gt;must&lt;/b&gt; specify the &lt;code&gt;$mode&lt;/code&gt; .</source>
          <target state="translated">실패시 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . &lt;code&gt;$mode&lt;/code&gt; 의 모드와 유사 &lt;code&gt;&lt;a href=&quot;functions/mkdir&quot;&gt;mkdir()&lt;/a&gt;&lt;/code&gt; 를 참조 &lt;a href=&quot;functions/mkdir&quot;&gt;MKDIR을&lt;/a&gt; 위해 비록 &lt;code&gt;mkfifo&lt;/code&gt; 이 &lt;b&gt;있어야&lt;/b&gt; 지정 &lt;code&gt;$mode&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de0cd76033a138179245b5e46e05e3b7122e17aa" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; on failure. The &lt;code&gt;signal&lt;/code&gt; must be a number (like &lt;code&gt;SIGHUP&lt;/code&gt; ), not a string (like &lt;code&gt;&quot;SIGHUP&quot;&lt;/code&gt; ), though Perl does try hard to understand you.</source>
          <target state="translated">실패시 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 반환합니다 . &lt;code&gt;signal&lt;/code&gt; (같은 숫자 여야 &lt;code&gt;SIGHUP&lt;/code&gt; ),하지 (같은 문자열 &lt;code&gt;&quot;SIGHUP&quot;&lt;/code&gt; 펄 당신을 이해하기 위해 열심히 노력 않지만).</target>
        </trans-unit>
        <trans-unit id="b498767cb3177d1dfc4a86d61b4be055b2dcfcc2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; or a reference to the method that implements &lt;code&gt;op&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 또는 &lt;code&gt;op&lt;/code&gt; 를 구현하는 메소드에 대한 참조를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="5b31fd014d364bd8f9aff893cccb0d2a3396dcb5" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BZ_OK&lt;/code&gt; if the uncompression was successful, but the end of the compressed data stream has not been reached. Returns &lt;code&gt;BZ_STREAM_END&lt;/code&gt; on successful uncompression and the end of the compression stream has been reached.</source>
          <target state="translated">압축 해제에 성공했지만 압축 된 데이터 스트림의 끝에 도달하지 않은 경우 &lt;code&gt;BZ_OK&lt;/code&gt; 를 리턴 합니다. 압축 해제에 성공하고 압축 스트림의 끝에 도달하면 &lt;code&gt;BZ_STREAM_END&lt;/code&gt; 를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="8cee1dc76991a1ae94bb57e19977e67445c285f0" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BZ_RUN_OK&lt;/code&gt; on success and a &lt;code&gt;bzip2&lt;/code&gt; error code on failure.</source>
          <target state="translated">성공하면 &lt;code&gt;BZ_RUN_OK&lt;/code&gt; 를, 실패 하면 &lt;code&gt;bzip2&lt;/code&gt; 오류 코드를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="b0cc0a3e341e51f71c2e900bee437aaf7e78b43a" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;BZ_STREAM_END&lt;/code&gt; on success and a &lt;code&gt;bzip2&lt;/code&gt; error code on failure.</source>
          <target state="translated">성공하면 &lt;code&gt;BZ_STREAM_END&lt;/code&gt; 를, 실패 하면 &lt;code&gt;bzip2&lt;/code&gt; 오류 코드를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="298af90e00483dcc786cec14907c140555481e3d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;LOCAL_FILE&lt;/code&gt; , or the generated local file name if &lt;code&gt;LOCAL_FILE&lt;/code&gt; is not given. If an error was encountered undef is returned.</source>
          <target state="translated">&lt;code&gt;LOCAL_FILE&lt;/code&gt; 또는 &lt;code&gt;LOCAL_FILE&lt;/code&gt; 이 제공되지 않은 경우 생성 된 로컬 파일 이름을 리턴 합니다. 오류가 발생하면 undef가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="a8b971bb70c1f8924bdec539cc9599d29222d1d2" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;NULL&lt;/code&gt; on failure.</source>
          <target state="translated">실패시 &lt;code&gt;NULL&lt;/code&gt; 을 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="e6f167a2967a820d84c44fba64003e7df81c5006" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;REMOTE_FILE&lt;/code&gt; , or the generated remote filename if &lt;code&gt;REMOTE_FILE&lt;/code&gt; is not given.</source>
          <target state="translated">&lt;code&gt;REMOTE_FILE&lt;/code&gt; 또는 &lt;code&gt;REMOTE_FILE&lt;/code&gt; 이 제공되지 않은 경우 생성 된 원격 파일 이름을 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="2e8469c11a7495a34575028d0cada4d0c590d322" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Z_OK&lt;/code&gt; if successful and &lt;code&gt;Z_STREAM_END&lt;/code&gt; if the end of the compressed data has been successfully reached.</source>
          <target state="translated">반환 &lt;code&gt;Z_OK&lt;/code&gt; 성공하면 &lt;code&gt;Z_STREAM_END&lt;/code&gt; 압축 된 데이터의 끝이 성공적으로 도달 한 경우.</target>
        </trans-unit>
        <trans-unit id="8f59376906d764bd6babf5587091cb994788c043" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Z_OK&lt;/code&gt; if successful and &lt;code&gt;Z_STREAM_END&lt;/code&gt; if the end of the compressed data has been successfully reached. If not successful, &lt;code&gt;$out&lt;/code&gt; will be</source>
          <target state="translated">반환 &lt;code&gt;Z_OK&lt;/code&gt; 성공하면 &lt;code&gt;Z_STREAM_END&lt;/code&gt; 압축 된 데이터의 끝이 성공적으로 도달 한 경우. 성공하지 못하면 &lt;code&gt;$out&lt;/code&gt; 은</target>
        </trans-unit>
        <trans-unit id="d96ce4239a30d936bcce62812ba50c744b76b905" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;Z_OK&lt;/code&gt; if successful.</source>
          <target state="translated">성공하면 &lt;code&gt;Z_OK&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="cafeafb2bd7c17d7b50be85ae47dd3d48969d3d8" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;expr&lt;/code&gt; , sets $^E from WinGetLastError() if &lt;code&gt;expr&lt;/code&gt; is false, and die()s if &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; and $^E are true. The message to die is the concatenated strings &lt;code&gt;name1&lt;/code&gt; and &lt;code&gt;name2&lt;/code&gt; , separated by &lt;code&gt;&quot;: &quot;&lt;/code&gt; from the contents of $^E.</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; 을 반환 하고 &lt;code&gt;expr&lt;/code&gt; 이 false 이면 WinGetLastError ()에서 $ ^ E를 설정 하고 &lt;code&gt;&lt;a href=&quot;functions/die&quot;&gt;die&lt;/a&gt;&lt;/code&gt; 와 $ ^ E가 true이면 die () 를 설정합니다. 메시지 는 $ ^ E의 내용에서 &lt;code&gt;&quot;: &quot;&lt;/code&gt; 구분 된 연결된 문자열 &lt;code&gt;name1&lt;/code&gt; 및 &lt;code&gt;name2&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="aa35bf1c09a2c6ee81db488828bca0efa036827d" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;expr&lt;/code&gt; , sets $^E from WinGetLastError() if &lt;code&gt;expr&lt;/code&gt; is false.</source>
          <target state="translated">&lt;code&gt;expr&lt;/code&gt; 을 반환 하고 &lt;code&gt;expr&lt;/code&gt; 이 false 인 경우 WinGetLastError ()에서 $ ^ E를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="ec258314cd4c89e4c47daf34be20cf66b5d74187" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;x * 2**y&lt;/code&gt; [C99].</source>
          <target state="translated">&lt;code&gt;x * 2**y&lt;/code&gt; 반환합니다 [C99].</target>
        </trans-unit>
        <trans-unit id="c4d4745f47a74fcad081bf6ee100570bea174bb4" translate="yes" xml:space="preserve">
          <source>Returns &lt;code&gt;x&lt;/code&gt; but with the sign of &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; [C99].</source>
          <target state="translated">반환 &lt;code&gt;x&lt;/code&gt; 만의 기호 &lt;code&gt;&lt;a href=&quot;functions/y&quot;&gt;y&lt;/a&gt;&lt;/code&gt; [C99].</target>
        </trans-unit>
        <trans-unit id="7e87db4f05bd1544a961889bb18a4ae3bef71b6a" translate="yes" xml:space="preserve">
          <source>Returns EXPR on success for convenience. You may neglect the return value and manipulate EXPR as the filehandle directly if you prefer.</source>
          <target state="translated">편의상 성공시 EXPR을 리턴합니다. 원하는 경우 리턴 값을 무시하고 EXPR을 파일 핸들로 직접 조작 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1617e19a5623494da8a4feec58e0db0d72c53d05" translate="yes" xml:space="preserve">
          <source>Returns Euler's number &lt;code&gt;e&lt;/code&gt; , aka exp(1).</source>
          <target state="translated">오일러의 숫자 &lt;code&gt;e&lt;/code&gt; 를 일명 exp (1)로 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="850c587f24c6ccb55ebb1e6b233f6f1952faffd8" translate="yes" xml:space="preserve">
          <source>Returns Euler's number &lt;code&gt;e&lt;/code&gt; , aka exp(1). Note that under bigint, this is truncated to an integer, and hence simple '2'.</source>
          <target state="translated">오일러의 숫자 &lt;code&gt;e&lt;/code&gt; 를 일명 exp (1)로 반환 합니다. bigint에서는 정수로 잘 리므로 단순한 '2'입니다.</target>
        </trans-unit>
        <trans-unit id="a3f19dca119e616910757674455d0bfea072343f" translate="yes" xml:space="preserve">
          <source>Returns Euler's number &lt;code&gt;e&lt;/code&gt; raised to the appropriate power, to the wanted accuracy.</source>
          <target state="translated">Euler의 숫자 &lt;code&gt;e&lt;/code&gt; 를 적절한 거듭 제곱하여 원하는 정확도로 올립니다.</target>
        </trans-unit>
        <trans-unit id="fa9f007c83aac949ac30fe49286841418b2898ad" translate="yes" xml:space="preserve">
          <source>Returns PI to the wanted accuracy.</source>
          <target state="translated">원하는 정확도로 PI를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c520053627c64fa3c2459265f3c98c69401d9f5f" translate="yes" xml:space="preserve">
          <source>Returns PI to the wanted accuracy. Note that under bigint, this is truncated to an integer, and hence simple '3'.</source>
          <target state="translated">원하는 정확도로 PI를 반환합니다. bigint에서는 정수로 잘 리므로 단순한 '3'입니다.</target>
        </trans-unit>
        <trans-unit id="327682c084c70fda486bfb3be771a0413c3229c3" translate="yes" xml:space="preserve">
          <source>Returns PI truncated to an integer, with the argument being ignored. This means under BigInt this always returns &lt;code&gt;3&lt;/code&gt; .</source>
          <target state="translated">인수를 무시하고 정수로 잘린 PI를 반환합니다. 이것은 BigInt 하에서 항상 &lt;code&gt;3&lt;/code&gt; 을 반환한다는 것을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="8da410a89af5164a0c8741909120b0e113c9a907" translate="yes" xml:space="preserve">
          <source>Returns PI.</source>
          <target state="translated">PI를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bcf4afe04118d7851c0aac8680ab511af39c9cb4" translate="yes" xml:space="preserve">
          <source>Returns PI. Note that under bigint, this is truncated to an integer, and hence simple '3'.</source>
          <target state="translated">PI를 반환합니다. bigint에서는 정수로 잘 리므로 단순한 '3'입니다.</target>
        </trans-unit>
        <trans-unit id="5c96d003c572d583a1138a19c98afcc3bdf85be8" translate="yes" xml:space="preserve">
          <source>Returns PID on success, -1 on error. The FLAGS argument is ignored in all cases.</source>
          <target state="translated">성공하면 PID를, 에러이면 -1을 반환합니다. FLAGS 인수는 모든 경우에 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="9207286e99fede61c8f119ac35db00d5ebabfdb9" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the remote server supports the given command.</source>
          <target state="translated">원격 서버가 지정된 명령을 지원하면 TRUE를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="fd4c3e721557b5c97a46d6c7f452fa703131e69f" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the terminator was found, else returns FALSE.</source>
          <target state="translated">종료자가 발견되면 TRUE를, 그렇지 않으면 FALSE를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="86dd86eb01ddd05d19d1e07bf5b9874c6c8147fb" translate="yes" xml:space="preserve">
          <source>Returns TRUE if there are any filters applied to the DBM associated with &lt;code&gt;$db&lt;/code&gt; . Otherwise returns FALSE.</source>
          <target state="translated">&lt;code&gt;$db&lt;/code&gt; 와 연관된 DBM에 적용된 필터가있는 경우 TRUE를 리턴합니다 . 그렇지 않으면 FALSE를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="30a9ef16bb3602636a0c4bd0e8ea4e677a26c1f7" translate="yes" xml:space="preserve">
          <source>Returns a $command line which just runs a single test without Test::Harness. No checks are done on the results, they're just printed.</source>
          <target state="translated">Test :: Harness없이 단일 테스트 만 실행하는 $ command 행을 반환합니다. 결과에 대한 점검은 수행되지 않고 방금 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="5829af1348c8ee2d3665fe45c3621cf88b170dca" translate="yes" xml:space="preserve">
          <source>Returns a $command line which runs the given set of $tests with Test::Harness and the given $perl.</source>
          <target state="translated">Test :: Harness 및 지정된 $ perl을 사용하여 지정된 $ tests 세트를 실행하는 $ command 행을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="289c211dd90a016eae30bb66441a63ab247f6da9" translate="yes" xml:space="preserve">
          <source>Returns a 13-element list giving the status info for a file, either the file opened via FILEHANDLE or DIRHANDLE, or named by EXPR. If EXPR is omitted, it stats &lt;code&gt;$_&lt;/code&gt; (not &lt;code&gt;_&lt;/code&gt; !). Returns the empty list if &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; fails. Typically used as follows:</source>
          <target state="translated">FILEHANDLE 또는 DIRHANDLE을 통해 열거 나 EXPR에 의해 명명 된 파일에 대한 상태 정보를 제공하는 13 요소 목록을 리턴합니다. EXPR을 생략하면 &lt;code&gt;$_&lt;/code&gt; ( &lt;code&gt;_&lt;/code&gt; ! 아님)를 통계 합니다. &lt;code&gt;&lt;a href=&quot;functions/stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 가 실패하면 빈 목록을 반환 합니다. 일반적으로 다음과 같이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2ec72fef3a1a2c2a6ed8b2ae5861981436db00c7" translate="yes" xml:space="preserve">
          <source>Returns a 13-element list giving the status info for a file, either the file opened via FILEHANDLE or DIRHANDLE, or named by EXPR. If EXPR is omitted, it stats &lt;code&gt;$_&lt;/code&gt; (not &lt;code&gt;_&lt;/code&gt; !). Returns the empty list if &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; fails. Typically used as follows:</source>
          <target state="translated">FILEHANDLE 또는 DIRHANDLE을 통해 열거 나 EXPR에 의해 명명 된 파일에 대한 상태 정보를 제공하는 13 요소 목록을 리턴합니다. EXPR을 생략하면 &lt;code&gt;$_&lt;/code&gt; ( &lt;code&gt;_&lt;/code&gt; ! 아님)를 통계 합니다. &lt;code&gt;&lt;a href=&quot;stat&quot;&gt;stat&lt;/a&gt;&lt;/code&gt; 가 실패하면 빈 목록을 반환 합니다. 일반적으로 다음과 같이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="078c2738638e39a25c2582868baa02e701ab1516" translate="yes" xml:space="preserve">
          <source>Returns a 32 bit integer representing the hash value of the string passed in. This value is only reliable for the lifetime of the process. It may be different depending on invocation, environment variables, perl version, architectures, and build options.</source>
          <target state="translated">전달 된 문자열의 해시 값을 나타내는 32 비트 정수를 반환합니다.이 값은 프로세스 수명 동안 만 신뢰할 수 있습니다. 호출, 환경 변수, Perl 버전, 아키텍처 및 빌드 옵션에 따라 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e62e0afcdc57c3924bdd7b1920314479b475d8e" translate="yes" xml:space="preserve">
          <source>Returns a 44 character description of this module. Only available for modules listed in The Module List (CPAN/modules/00modlist.long.html or 00modlist.long.txt.gz)</source>
          <target state="translated">이 모듈에 대한 44 자 설명을 리턴합니다. 모듈 목록 (CPAN / modules / 00modlist.long.html 또는 00modlist.long.txt.gz)에 나열된 모듈에만 사용 가능</target>
        </trans-unit>
        <trans-unit id="e390c51112c15ffbe5db64a2c3bcd38009f02ae9" translate="yes" xml:space="preserve">
          <source>Returns a &lt;a href=&quot;parser/aggregator&quot;&gt;TAP::Parser::Aggregator&lt;/a&gt; containing the test results.</source>
          <target state="translated">테스트 결과를 포함 하는 &lt;a href=&quot;parser/aggregator&quot;&gt;TAP :: Parser :: Aggregator&lt;/a&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="a424a5b675f3ec7726f5e9df584409c954569b1f" translate="yes" xml:space="preserve">
          <source>Returns a B::PADLIST object under Perl 5.18 or higher, or a B::AV in earlier versions.</source>
          <target state="translated">Perl 5.18 이상에서 B :: PADLIST 객체 또는 이전 버전에서 B :: AV를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="54a87a96948366f5ea0c054b9ad57a438c86d7b6" translate="yes" xml:space="preserve">
          <source>Returns a Benchmark object.</source>
          <target state="translated">벤치 마크 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a71b4c05ed137f2d3e8d6342391043a58f5a5b03" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value telling whether EXPR has a value other than the undefined value &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. If EXPR is not present, &lt;code&gt;$_&lt;/code&gt; is checked.</source>
          <target state="translated">EXPR에 정의되지 않은 값 &lt;code&gt;&lt;a href=&quot;functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 이외의 값이 있는지 여부를 알려주는 부울 값을 리턴합니다 . EXPR이 없으면 &lt;code&gt;$_&lt;/code&gt; 가 점검됩니다.</target>
        </trans-unit>
        <trans-unit id="0836f5ca4f174fe06136c589e27a3f9ed4bde956" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value telling whether EXPR has a value other than the undefined value &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt;. If EXPR is not present, &lt;code&gt;$_&lt;/code&gt; is checked.</source>
          <target state="translated">EXPR에 정의되지 않은 값 &lt;code&gt;&lt;a href=&quot;undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 이외의 값이 있는지 여부를 알려주는 부울 값을 리턴합니다 . EXPR이 없으면 &lt;code&gt;$_&lt;/code&gt; 가 점검됩니다.</target>
        </trans-unit>
        <trans-unit id="aab2656aa87969cc9dc5ce3c20e33dc2c8b93e83" translate="yes" xml:space="preserve">
          <source>Returns a Digest::SHA object representing the SHA state contained in</source>
          <target state="translated">에 포함 된 SHA 상태를 나타내는 Digest :: SHA 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="63f6546706550d09611771d933ff33e3dea07df0" translate="yes" xml:space="preserve">
          <source>Returns a Digest::SHA object that results from calling</source>
          <target state="translated">호출 결과 Digest :: SHA 객체를 반환합니다</target>
        </trans-unit>
        <trans-unit id="b63524d4a4118ca3217432bfc25b7c379525fb60" translate="yes" xml:space="preserve">
          <source>Returns a Perl value which may be used instead of the corresponding regular expression, or &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if its argument is not recognised.</source>
          <target state="translated">해당 정규 표현식 대신 사용될 수있는 Perl 값을 리턴하거나 인수가 인식되지 않으면 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="d7f67979a4434475a7e25e72d10c05204dab5944" translate="yes" xml:space="preserve">
          <source>Returns a SV a dump of |depth| frames of the call stack, skipping the |skip| innermost ones. depth of 20 is usually enough.</source>
          <target state="translated">SV의 덤프를 | depth | 호출 스택의 프레임을 건너 뛰고 | skip | 내면의 것들. 깊이 20이 충분합니다.</target>
        </trans-unit>
        <trans-unit id="7b38c54c50762d0d3766b9c69ecfd82a584d3bb7" translate="yes" xml:space="preserve">
          <source>Returns a SV describing what the SV passed in is a reference to.</source>
          <target state="translated">전달 된 SV가 참조하는 것을 설명하는 SV를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c6768357aea5c7d88a47d38f0e6a279e8cf943bc" translate="yes" xml:space="preserve">
          <source>Returns a Test::Builder object representing the current state of the test.</source>
          <target state="translated">테스트의 현재 상태를 나타내는 Test :: Builder 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6b725a6e91e3175c5f263c7a33b2dd952f62bd6a" translate="yes" xml:space="preserve">
          <source>Returns a U32 indicating whether the pointer to the string buffer is offset. This hack is used internally to speed up removal of characters from the beginning of a SvPV. When SvOOK is true, then the start of the allocated string buffer is actually &lt;code&gt;SvOOK_offset()&lt;/code&gt; bytes before SvPVX. This offset used to be stored in SvIVX, but is now stored within the spare part of the buffer.</source>
          <target state="translated">문자열 버퍼에 대한 포인터가 오프셋되어 있는지 여부를 나타내는 U32를 반환합니다. 이 핵은 내부적으로 SvPV의 시작 부분에서 캐릭터 제거 속도를 높이기 위해 사용됩니다. SvOOK가 true이면 할당 된 문자열 버퍼의 시작은 실제로 &lt;code&gt;SvOOK_offset()&lt;/code&gt; 이전의 SvOOK_offset () 바이트입니다. 이 오프셋은 SvIVX에 저장되었지만 이제는 버퍼의 예비 부분에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="1bc093229f26a252e76d58b28c1e3335fc644b9e" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating the UTF-8 status of an SV. If things are set-up properly, this indicates whether or not the SV contains UTF-8 encoded data. You should use this</source>
          <target state="translated">SV의 UTF-8 상태를 나타내는 U32 값을 반환합니다. 상황이 올바르게 설정되면 SV에 UTF-8로 인코딩 된 데이터가 포함되어 있는지 여부를 나타냅니다. 이것을 사용해야합니다</target>
        </trans-unit>
        <trans-unit id="fb51edcd90ab824e684efc4efb16d677a578ca29" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a character string.</source>
          <target state="translated">SV에 문자열이 포함되어 있는지 여부를 나타내는 U32 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a5231fcdd123cafb5389cb102ea28e6b610241a3" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a character string. Checks the &lt;b&gt;private&lt;/b&gt; setting. Use &lt;code&gt;SvPOK&lt;/code&gt; instead.</source>
          <target state="translated">SV에 문자열이 포함되어 있는지 여부를 나타내는 U32 값을 반환합니다. &lt;b&gt;개인&lt;/b&gt; 설정을 확인합니다 . 대신 &lt;code&gt;SvPOK&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ebd2b6e3d5583cc0154203cda60cf1640fa9722d" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a double.</source>
          <target state="translated">SV에 double이 포함되어 있는지 여부를 나타내는 U32 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="66ecaa4936290bb692aef7d62b280c98eca97624" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a double. Checks the &lt;b&gt;private&lt;/b&gt; setting. Use &lt;code&gt;SvNOK&lt;/code&gt; instead.</source>
          <target state="translated">SV에 double이 포함되어 있는지 여부를 나타내는 U32 값을 반환합니다. &lt;b&gt;개인&lt;/b&gt; 설정을 확인합니다 . 대신 &lt;code&gt;SvNOK&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c4405c32c509ff06f034a5c5b10bb25707c59fb" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a number, integer or double.</source>
          <target state="translated">SV에 숫자, 정수 또는 double이 포함되어 있는지 여부를 나타내는 U32 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ad5e936ea4eeca57a5da99afcf9f16adcf4ede7c" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains a number, integer or double. Checks the &lt;b&gt;private&lt;/b&gt; setting. Use &lt;code&gt;SvNIOK&lt;/code&gt; instead.</source>
          <target state="translated">SV에 숫자, 정수 또는 double이 포함되어 있는지 여부를 나타내는 U32 값을 반환합니다. &lt;b&gt;개인&lt;/b&gt; 설정을 확인합니다 . 대신 &lt;code&gt;SvNIOK&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f6a61eafc42cc19e0184cc99c2044eff3febadc" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains an integer.</source>
          <target state="translated">SV에 정수가 포함되어 있는지 여부를 나타내는 U32 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cdd8f0a8bc1fc17c47a9a228bdaa77321017185e" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV contains an integer. Checks the &lt;b&gt;private&lt;/b&gt; setting. Use &lt;code&gt;SvIOK&lt;/code&gt; instead.</source>
          <target state="translated">SV에 정수가 포함되어 있는지 여부를 나타내는 U32 값을 반환합니다. &lt;b&gt;개인&lt;/b&gt; 설정을 확인합니다 . 대신 &lt;code&gt;SvIOK&lt;/code&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="2499712c178f4d22d2edb40ec424e1b89f24f911" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the SV is Copy-On-Write (either shared hash key scalars, or full Copy On Write scalars if 5.9.0 is configured for COW).</source>
          <target state="translated">SV가 Copy-On-Write인지 여부를 나타내는 U32 값을 리턴합니다 (공유 해시 키 스칼라 또는 COW에 5.9.0이 구성된 경우 전체 Copy On Write 스칼라).</target>
        </trans-unit>
        <trans-unit id="fe8da2b4b2fa02649f81a16d557e3278d57dad57" translate="yes" xml:space="preserve">
          <source>Returns a U32 value indicating whether the value is defined. This is only meaningful for scalars.</source>
          <target state="translated">값이 정의되어 있는지 여부를 나타내는 U32 값을 반환합니다. 이것은 스칼라에만 의미가 있습니다.</target>
        </trans-unit>
        <trans-unit id="7db7cf06b30a633c79d72700fa34db8ab8260cb5" translate="yes" xml:space="preserve">
          <source>Returns a blessed object reference which the user can then use to send the control strings to the terminal using &lt;b&gt;Tputs&lt;/b&gt; and &lt;b&gt;Tgoto&lt;/b&gt;.</source>
          <target state="translated">사용자가 &lt;b&gt;Tputs&lt;/b&gt; 및 &lt;b&gt;Tgoto를&lt;/b&gt; 사용하여 제어 문자열을 터미널에 보내는 데 사용할 수있는 축복 된 객체 참조를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="78a15a12352318889d6990a965effdfa78241deb" translate="yes" xml:space="preserve">
          <source>Returns a bool giving whether or not the PV in &lt;code&gt;sv&lt;/code&gt; is to be treated as being encoded in UTF-8.</source>
          <target state="translated">&lt;code&gt;sv&lt;/code&gt; 의 PV 가 UTF-8로 인코딩 된 것으로 취급 되는지 여부를 제공하는 부울을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="668940e83ff2919758ac366d8681b177e2201df1" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether Perl would evaluate the SV as true or false. See SvOK() for a defined/undefined test. Does not handle 'get' magic.</source>
          <target state="translated">Perl이 SV를 true 또는 false로 평가할지 여부를 나타내는 부울을 리턴합니다. 정의 / 정의되지 않은 테스트에 대해서는 SvOK ()를 참조하십시오. 'get'매직을 처리하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cd02b6c22910061fceaedd5fa468528ac5b1dd09" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether Perl would evaluate the SV as true or false. See SvOK() for a defined/undefined test. Handles 'get' magic unless the scalar is already SvPOK, SvIOK or SvNOK (the public, not the private flags).</source>
          <target state="translated">Perl이 SV를 true 또는 false로 평가할지 여부를 나타내는 부울을 리턴합니다. 정의 / 정의되지 않은 테스트에 대해서는 SvOK ()를 참조하십시오. 스칼라가 이미 SvPOK, SvIOK 또는 SvNOK (개인 플래그가 아닌 공개)가 아닌 한 'get'매직을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="7f02d0a25d86de18bb57f5e03b59dde94b0fed79" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether or not this module can actually generate colored output. This will be false if it could not load the modules needed for the current platform.</source>
          <target state="translated">이 모듈이 실제로 컬러 출력을 생성 할 수 있는지 여부를 나타내는 부울을 리턴합니다. 현재 플랫폼에 필요한 모듈을로드 할 수없는 경우에는 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="ace1e66ae096c5c691e93ff90dfb3e10f7d8bdc2" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV (or the one it references) is a REGEXP.</source>
          <target state="translated">SV (또는 참조하는 SV)가 REGEXP인지 여부를 나타내는 부울을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d480e6ec9e136a87d7eef30e55c4b80326f8e39f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV contains a signed integer.</source>
          <target state="translated">SV에 부호있는 정수가 포함되어 있는지 여부를 나타내는 부울을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3e14793b0a0f0860cac0b1fb7213102642df0e87" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV contains a v-string.</source>
          <target state="translated">SV에 v- 문자열이 있는지 여부를 나타내는 부울을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="d23b2152485aef3ea2aa81e1117405592429acf1" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV contains an integer that must be interpreted as unsigned. A non-negative integer whose value is within the range of both an IV and a UV may be be flagged as either SvUOK or SVIOK.</source>
          <target state="translated">SV에 부호없는 것으로 해석해야하는 정수가 포함되어 있는지 여부를 나타내는 부울을 리턴합니다. 값이 IV와 UV 범위 내에있는 음이 아닌 정수는 SvUOK 또는 SVIOK로 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="263c966945712aface24be38355efccc0bf91800" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is Copy-On-Write shared hash key scalar.</source>
          <target state="translated">SV가 Copy-On-Write 공유 해시 키 스칼라인지 여부를 나타내는 부울을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e89f32874b6d95f19296b47af499fd6f09ad4b4c" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is an RV pointing to a blessed object. If the SV is not an RV, or if the object is not blessed, then this will return false.</source>
          <target state="translated">SV가 축복 된 객체를 가리키는 RV인지 여부를 나타내는 부울을 반환합니다. SV가 RV가 아니거나 개체가 축복받지 않으면 거짓을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0af59aa44656303bd511d51fde294882427039f5" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is blessed into the specified class. This does not check for subtypes; use &lt;code&gt;sv_derived_from&lt;/code&gt; to verify an inheritance relationship.</source>
          <target state="translated">SV가 지정된 클래스에 축복되었는지 여부를 나타내는 부울을 리턴합니다. 하위 유형은 검사하지 않습니다. 상속 관계를 확인 하려면 &lt;code&gt;sv_derived_from&lt;/code&gt; 을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="865393ef44edd13c13e1aec1f18c188fdd309444" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV is derived from the specified class</source>
          <target state="translated">SV가 지정된 클래스에서 파생되는지 여부를 나타내는 부울을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="4b80301adae3b0f6838e222f02e0e77c5bb14dcf" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the SV performs a specific, named role. The SV can be a Perl object or the name of a Perl class.</source>
          <target state="translated">SV가 명명 된 특정 역할을 수행하는지 여부를 나타내는 부울을 리턴합니다. SV는 Perl 객체이거나 Perl 클래스의 이름 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fbf91f5e759ae1bbefa87328b78d816e0160f0f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character can be the first character of an identifier. This is very close to, but not quite the same as the official Unicode property &lt;code&gt;XID_Start&lt;/code&gt; . The difference is that this returns true only if the input character also matches &lt;a href=&quot;#isWORDCHAR&quot;&gt;isWORDCHAR&lt;/a&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isIDFIRST_A&lt;/code&gt; , &lt;code&gt;isIDFIRST_L1&lt;/code&gt; , &lt;code&gt;isIDFIRST_uni&lt;/code&gt; , &lt;code&gt;isIDFIRST_utf8&lt;/code&gt; , &lt;code&gt;isIDFIRST_LC&lt;/code&gt; , &lt;code&gt;isIDFIRST_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isIDFIRST_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">지정된 문자가 식별자의 첫 번째 문자 일 수 있는지 여부를 나타내는 부울을 리턴합니다. 이것은 공식 유니 코드 속성 &lt;code&gt;XID_Start&lt;/code&gt; 와 매우 유사하지만 동일하지는 않습니다 . 차이점은 입력 문자가 &lt;a href=&quot;#isWORDCHAR&quot;&gt;isWORDCHAR&lt;/a&gt; 과도 일치하는 경우에만 true를 리턴 한다는 것 입니다. 변형 &lt;code&gt;isIDFIRST_A&lt;/code&gt; , &lt;code&gt;isIDFIRST_L1&lt;/code&gt; , &lt;code&gt;isIDFIRST_uni&lt;/code&gt; , &lt;code&gt;isIDFIRST_utf8&lt;/code&gt; , &lt;code&gt;isIDFIRST_LC&lt;/code&gt; , &lt;code&gt;isIDFIRST_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isIDFIRST_LC_utf8&lt;/code&gt; 에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c40ef581f93d7f5544352568ae56e4d7279b6037" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character can be the second or succeeding character of an identifier. This is very close to, but not quite the same as the official Unicode property &lt;code&gt;XID_Continue&lt;/code&gt; . The difference is that this returns true only if the input character also matches &lt;a href=&quot;#isWORDCHAR&quot;&gt;isWORDCHAR&lt;/a&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isIDCONT_A&lt;/code&gt; , &lt;code&gt;isIDCONT_L1&lt;/code&gt; , &lt;code&gt;isIDCONT_uni&lt;/code&gt; , &lt;code&gt;isIDCONT_utf8&lt;/code&gt; , &lt;code&gt;isIDCONT_LC&lt;/code&gt; , &lt;code&gt;isIDCONT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isIDCONT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">지정된 문자가 식별자의 두 번째 문자 또는 후속 문자 일 수 있는지 여부를 나타내는 부울을 리턴합니다. 이것은 공식 유니 코드 속성 &lt;code&gt;XID_Continue&lt;/code&gt; 와 매우 유사하지만 동일하지는 않습니다 . 차이점은 입력 문자가 &lt;a href=&quot;#isWORDCHAR&quot;&gt;isWORDCHAR&lt;/a&gt; 과도 일치하는 경우에만 true를 리턴 한다는 것 입니다. 변형 &lt;code&gt;isIDCONT_A&lt;/code&gt; , &lt;code&gt;isIDCONT_L1&lt;/code&gt; , &lt;code&gt;isIDCONT_uni&lt;/code&gt; , &lt;code&gt;isIDCONT_utf8&lt;/code&gt; , &lt;code&gt;isIDCONT_LC&lt;/code&gt; , &lt;code&gt;isIDCONT_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isIDCONT_LC_utf8&lt;/code&gt; 에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce017fc967cd4b42d5b0d83e9ea0bfc787abd7a8" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a character considered to be a blank, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:blank:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isBLANK_A&lt;/code&gt; , &lt;code&gt;isBLANK_L1&lt;/code&gt; , &lt;code&gt;isBLANK_uni&lt;/code&gt; , &lt;code&gt;isBLANK_utf8&lt;/code&gt; , &lt;code&gt;isBLANK_LC&lt;/code&gt; , &lt;code&gt;isBLANK_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isBLANK_LC_utf8&lt;/code&gt; . Note, however, that some platforms do not have the C library routine &lt;code&gt;isblank()&lt;/code&gt; . In these cases, the variants whose names contain &lt;code&gt;LC&lt;/code&gt; are the same as the corresponding ones without.</source>
          <target state="translated">지정된 문자가 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:blank:]]/&lt;/a&gt;&lt;/code&gt; 와 유사한 공백으로 간주되는 문자인지 여부를 나타내는 부울을 리턴합니다 . 변형 &lt;code&gt;isBLANK_A&lt;/code&gt; , &lt;code&gt;isBLANK_L1&lt;/code&gt; , &lt;code&gt;isBLANK_uni&lt;/code&gt; , &lt;code&gt;isBLANK_utf8&lt;/code&gt; , &lt;code&gt;isBLANK_LC&lt;/code&gt; , &lt;code&gt;isBLANK_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isBLANK_LC_utf8&lt;/code&gt; 에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오 . 그러나 일부 플랫폼에는 C 라이브러리 루틴 &lt;code&gt;isblank()&lt;/code&gt; . 이 경우 이름에 &lt;code&gt;LC&lt;/code&gt; 가 포함 된 변형 은 해당되지 않는 변형 과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="9852ba5728743e1ad6def01123109823a1eede3f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a character that is a word character, analogous to what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\w/&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:word:]]/&lt;/a&gt;&lt;/code&gt; match in a regular expression. A word character is an alphabetic character, a decimal digit, a connecting punctuation character (such as an underscore), or a &quot;mark&quot; character that attaches to one of those (like some sort of accent). &lt;code&gt;isALNUM()&lt;/code&gt; is a synonym provided for backward compatibility, even though a word character includes more than the standard C language meaning of alphanumeric. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isWORDCHAR_A&lt;/code&gt; , &lt;code&gt;isWORDCHAR_L1&lt;/code&gt; , &lt;code&gt;isWORDCHAR_uni&lt;/code&gt; , and &lt;code&gt;isWORDCHAR_utf8&lt;/code&gt; . &lt;code&gt;isWORDCHAR_LC&lt;/code&gt; , &lt;code&gt;isWORDCHAR_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isWORDCHAR_LC_utf8&lt;/code&gt; are also as described there, but additionally include the platform's native underscore.</source>
          <target state="translated">지정된 문자가 정규식에서 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\w/&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:word:]]/&lt;/a&gt;&lt;/code&gt; 와 일치 하는 단어 문자 인 문자인지 여부를 나타내는 부울을 리턴합니다 . 단어 문자는 알파벳 문자, 소수 자릿수, 구두점 문자 (예 : 밑줄) 또는 그 중 하나 (예 : 악센트)에 연결되는 &quot;마크&quot;문자입니다. &lt;code&gt;isALNUM()&lt;/code&gt; 은 단어 문자에 영숫자 표준 C 언어 이상의 의미를 포함하더라도 이전 버전과의 호환성을 위해 제공되는 동의어입니다. 변형 &lt;code&gt;isWORDCHAR_A&lt;/code&gt; , &lt;code&gt;isWORDCHAR_L1&lt;/code&gt; , &lt;code&gt;isWORDCHAR_uni&lt;/code&gt; 및 변형에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오. &lt;code&gt;isWORDCHAR_utf8&lt;/code&gt; 입니다. &lt;code&gt;isWORDCHAR_LC&lt;/code&gt; , &lt;code&gt;isWORDCHAR_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isWORDCHAR_LC_utf8&lt;/code&gt; 도 여기에 설명되어 있지만 플랫폼의 기본 밑줄을 추가로 포함합니다.</target>
        </trans-unit>
        <trans-unit id="f9275c448cc5ba27683786a2d8a8c811d79a675f" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a control character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:cntrl:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isCNTRL_A&lt;/code&gt; , &lt;code&gt;isCNTRL_L1&lt;/code&gt; , &lt;code&gt;isCNTRL_uni&lt;/code&gt; , &lt;code&gt;isCNTRL_utf8&lt;/code&gt; , &lt;code&gt;isCNTRL_LC&lt;/code&gt; , &lt;code&gt;isCNTRL_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isCNTRL_LC_utf8&lt;/code&gt; On EBCDIC platforms, you almost always want to use the &lt;code&gt;isCNTRL_L1&lt;/code&gt; variant.</source>
          <target state="translated">지정된 문자가 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:cntrl:]]/&lt;/a&gt;&lt;/code&gt; 와 유사한 제어 문자인지 여부를 나타내는 부울을 리턴합니다 . 변형 &lt;code&gt;isCNTRL_A&lt;/code&gt; , &lt;code&gt;isCNTRL_L1&lt;/code&gt; , &lt;code&gt;isCNTRL_uni&lt;/code&gt; , &lt;code&gt;isCNTRL_utf8&lt;/code&gt; , &lt;code&gt;isCNTRL_LC&lt;/code&gt; , &lt;code&gt;isCNTRL_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isCNTRL_LC_utf8&lt;/code&gt; 에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오. EBCDIC 플랫폼에서는 거의 항상 &lt;code&gt;isCNTRL_L1&lt;/code&gt; 변형 을 사용하려고합니다 .</target>
        </trans-unit>
        <trans-unit id="bc5f9a2f004ec36fee23916c2d965d58a9667a24" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a digit, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:digit:]]/&lt;/a&gt;&lt;/code&gt;. Variants &lt;code&gt;isDIGIT_A&lt;/code&gt; and &lt;code&gt;isDIGIT_L1&lt;/code&gt; are identical to &lt;code&gt;isDIGIT&lt;/code&gt; . See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isDIGIT_uni&lt;/code&gt; , &lt;code&gt;isDIGIT_utf8&lt;/code&gt; , &lt;code&gt;isDIGIT_LC&lt;/code&gt; , &lt;code&gt;isDIGIT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isDIGIT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">지정된 문자가 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:digit:]]/&lt;/a&gt;&lt;/code&gt; 와 유사한 숫자인지 여부를 나타내는 부울을 리턴합니다 . 변형 &lt;code&gt;isDIGIT_A&lt;/code&gt; 및 &lt;code&gt;isDIGIT_L1&lt;/code&gt; 은 동일 &lt;code&gt;isDIGIT&lt;/code&gt; . 변형 &lt;code&gt;isDIGIT_uni&lt;/code&gt; , &lt;code&gt;isDIGIT_utf8&lt;/code&gt; , &lt;code&gt;isDIGIT_LC&lt;/code&gt; , &lt;code&gt;isDIGIT_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isDIGIT_LC_utf8&lt;/code&gt; 에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5aa05558f472c759c35c257a0ac246e6bf09367" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a either an alphabetic character or decimal digit, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:alnum:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isALPHANUMERIC_A&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_L1&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_uni&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_utf8&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_LC&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isALPHANUMERIC_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">지정된 문자가 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:alnum:]]/&lt;/a&gt;&lt;/code&gt; 과 유사한 알파벳 문자 또는 10 진수인지 여부를 나타내는 부울을 리턴합니다 . 변형 &lt;code&gt;isALPHANUMERIC_A&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_L1&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_uni&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_utf8&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_LC&lt;/code&gt; , &lt;code&gt;isALPHANUMERIC_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isALPHANUMERIC_LC_utf8&lt;/code&gt; 의 변형에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cd3d7d9d640e85535389698d9f2fb18931bac074" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a graphic character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:graph:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isGRAPH_A&lt;/code&gt; , &lt;code&gt;isGRAPH_L1&lt;/code&gt; , &lt;code&gt;isGRAPH_uni&lt;/code&gt; , &lt;code&gt;isGRAPH_utf8&lt;/code&gt; , &lt;code&gt;isGRAPH_LC&lt;/code&gt; , &lt;code&gt;isGRAPH_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isGRAPH_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">지정된 문자가 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:graph:]]/&lt;/a&gt;&lt;/code&gt; 와 유사한 그래픽 문자인지 여부를 나타내는 부울을 리턴합니다 . 변형 &lt;code&gt;isGRAPH_A&lt;/code&gt; , &lt;code&gt;isGRAPH_L1&lt;/code&gt; , &lt;code&gt;isGRAPH_uni&lt;/code&gt; , &lt;code&gt;isGRAPH_utf8&lt;/code&gt; , &lt;code&gt;isGRAPH_LC&lt;/code&gt; , &lt;code&gt;isGRAPH_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isGRAPH_LC_utf8&lt;/code&gt; 에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="08a521e0f9cf14d0eb9b9b50db942ae249b71fc1" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a hexadecimal digit. In the ASCII range these are &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; . Variants &lt;code&gt;isXDIGIT_A()&lt;/code&gt; and &lt;code&gt;isXDIGIT_L1()&lt;/code&gt; are identical to &lt;code&gt;isXDIGIT()&lt;/code&gt; . See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isXDIGIT_uni&lt;/code&gt; , &lt;code&gt;isXDIGIT_utf8&lt;/code&gt; , &lt;code&gt;isXDIGIT_LC&lt;/code&gt; , &lt;code&gt;isXDIGIT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isXDIGIT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">지정된 문자가 16 진수인지 여부를 나타내는 부울을 리턴합니다. ASCII 범위에서 &lt;code&gt;[0-9A-Fa-f]&lt;/code&gt; 입니다. 변형 &lt;code&gt;isXDIGIT_A()&lt;/code&gt; 및 &lt;code&gt;isXDIGIT_L1()&lt;/code&gt; 동일하다 &lt;code&gt;isXDIGIT()&lt;/code&gt; . 변형 &lt;code&gt;isXDIGIT_uni&lt;/code&gt; , &lt;code&gt;isXDIGIT_utf8&lt;/code&gt; , &lt;code&gt;isXDIGIT_LC&lt;/code&gt; , &lt;code&gt;isXDIGIT_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isXDIGIT_LC_utf8&lt;/code&gt; 에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ff52e3b4ced8da14cf21ac0cf2d8d3b48eac969" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a lowercase character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:lower:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isLOWER_A&lt;/code&gt; , &lt;code&gt;isLOWER_L1&lt;/code&gt; , &lt;code&gt;isLOWER_uni&lt;/code&gt; , &lt;code&gt;isLOWER_utf8&lt;/code&gt; , &lt;code&gt;isLOWER_LC&lt;/code&gt; , &lt;code&gt;isLOWER_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isLOWER_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">지정된 문자가 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:lower:]]/&lt;/a&gt;&lt;/code&gt; 와 유사한 소문자인지 여부를 나타내는 부울을 리턴합니다 . 변형 &lt;code&gt;isLOWER_A&lt;/code&gt; , &lt;code&gt;isLOWER_L1&lt;/code&gt; , &lt;code&gt;isLOWER_uni&lt;/code&gt; , &lt;code&gt;isLOWER_utf8&lt;/code&gt; , &lt;code&gt;isLOWER_LC&lt;/code&gt; , &lt;code&gt;isLOWER_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isLOWER_LC_utf8&lt;/code&gt; 에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="41725a26249b072e3854b61782196d712beaccdb" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a printable character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:print:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPRINT_A&lt;/code&gt; , &lt;code&gt;isPRINT_L1&lt;/code&gt; , &lt;code&gt;isPRINT_uni&lt;/code&gt; , &lt;code&gt;isPRINT_utf8&lt;/code&gt; , &lt;code&gt;isPRINT_LC&lt;/code&gt; , &lt;code&gt;isPRINT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isPRINT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">지정된 문자가 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:print:]]/&lt;/a&gt;&lt;/code&gt; 와 유사한 인쇄 가능한 문자인지 여부를 나타내는 부울을 리턴합니다 . 변형 &lt;code&gt;isPRINT_A&lt;/code&gt; , &lt;code&gt;isPRINT_L1&lt;/code&gt; , &lt;code&gt;isPRINT_uni&lt;/code&gt; , &lt;code&gt;isPRINT_utf8&lt;/code&gt; , &lt;code&gt;isPRINT_LC&lt;/code&gt; , &lt;code&gt;isPRINT_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isPRINT_LC_utf8&lt;/code&gt; 에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7793d22c7e9533fb9416bac2c7ec1172e04deac2" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a punctuation character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:punct:]]/&lt;/a&gt;&lt;/code&gt;. Note that the definition of what is punctuation isn't as straightforward as one might desire. See &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;POSIX Character Classes in perlrecharclass&lt;/a&gt; for details. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isPUNCT_A&lt;/code&gt; , &lt;code&gt;isPUNCT_L1&lt;/code&gt; , &lt;code&gt;isPUNCT_uni&lt;/code&gt; , &lt;code&gt;isPUNCT_utf8&lt;/code&gt; , &lt;code&gt;isPUNCT_LC&lt;/code&gt; , &lt;code&gt;isPUNCT_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isPUNCT_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">지정된 문자가 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:punct:]]/&lt;/a&gt;&lt;/code&gt; 와 유사한 문장 부호 문자인지 여부를 나타내는 부울을 리턴합니다 . 문장 부호에 대한 정의는 원하는 것만 큼 간단하지 않습니다. 자세한 내용 &lt;a href=&quot;perlrecharclass#POSIX-Character-Classes&quot;&gt;은 perlrecharclass의 POSIX 문자 클래스&lt;/a&gt; 를 참조하십시오. 변형 &lt;code&gt;isPUNCT_A&lt;/code&gt; , &lt;code&gt;isPUNCT_L1&lt;/code&gt; , &lt;code&gt;isPUNCT_uni&lt;/code&gt; , &lt;code&gt;isPUNCT_utf8&lt;/code&gt; , &lt;code&gt;isPUNCT_LC&lt;/code&gt; , &lt;code&gt;isPUNCT_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isPUNCT_LC_utf8&lt;/code&gt; 에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="32a715a3af988d8bb6cff21868fdb558f44c0512" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is a whitespace character. This is analogous to what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\s/&lt;/a&gt;&lt;/code&gt; matches in a regular expression. Starting in Perl 5.18 this also matches what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; does. Prior to 5.18, only the locale forms of this macro (the ones with &lt;code&gt;LC&lt;/code&gt; in their names) matched precisely what &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; does. In those releases, the only difference, in the non-locale variants, was that &lt;code&gt;isSPACE()&lt;/code&gt; did not match a vertical tab. (See &lt;a href=&quot;#isPSXSPC&quot;&gt;isPSXSPC&lt;/a&gt; for a macro that matches a vertical tab in all releases.) See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isSPACE_A&lt;/code&gt; , &lt;code&gt;isSPACE_L1&lt;/code&gt; , &lt;code&gt;isSPACE_uni&lt;/code&gt; , &lt;code&gt;isSPACE_utf8&lt;/code&gt; , &lt;code&gt;isSPACE_LC&lt;/code&gt; , &lt;code&gt;isSPACE_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isSPACE_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">지정된 문자가 공백 문자인지 여부를 나타내는 부울을 리턴합니다. 이것은 정규 표현식에서 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/\s/&lt;/a&gt;&lt;/code&gt; 와 일치 하는 것과 유사합니다 . Perl 5.18부터는 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; 일치합니다. 5.18 이전에는이 ​​매크로의 로케일 형식 ( 이름에 &lt;code&gt;LC&lt;/code&gt; 가 있는 것 ) 만 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:space:]]/&lt;/a&gt;&lt;/code&gt; 와 정확히 일치했습니다 . 이러한 릴리스에서 로케일이 아닌 변형의 유일한 차이점은 &lt;code&gt;isSPACE()&lt;/code&gt; 가 세로 탭과 일치하지 않았다는 것입니다. (참조 &lt;a href=&quot;#isPSXSPC&quot;&gt;isPSXSPC&lt;/a&gt; 모든 릴리스에서 수직 탭과 일치하는 매크로.)를 참조하십시오 &lt;a href=&quot;#Character-classification&quot;&gt;이 섹션의 상단&lt;/a&gt; 에 대한 설명은 변형 &lt;code&gt;isSPACE_A&lt;/code&gt; , &lt;code&gt;isSPACE_L1&lt;/code&gt; 을, &lt;code&gt;isSPACE_uni&lt;/code&gt; , &lt;code&gt;isSPACE_utf8&lt;/code&gt; , &lt;code&gt;isSPACE_LC&lt;/code&gt; , &lt;code&gt;isSPACE_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isSPACE_LC_utf8&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="eb03db284d9ba50542ef6a78c24086a8ed7602c8" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is an alphabetic character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:alpha:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isALPHA_A&lt;/code&gt; , &lt;code&gt;isALPHA_L1&lt;/code&gt; , &lt;code&gt;isALPHA_uni&lt;/code&gt; , &lt;code&gt;isALPHA_utf8&lt;/code&gt; , &lt;code&gt;isALPHA_LC&lt;/code&gt; , &lt;code&gt;isALPHA_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isALPHA_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">지정된 문자가 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:alpha:]]/&lt;/a&gt;&lt;/code&gt; 와 유사한 알파벳 문자인지 여부를 나타내는 부울을 리턴합니다 . 변형 &lt;code&gt;isALPHA_A&lt;/code&gt; , &lt;code&gt;isALPHA_L1&lt;/code&gt; , &lt;code&gt;isALPHA_uni&lt;/code&gt; , &lt;code&gt;isALPHA_utf8&lt;/code&gt; , &lt;code&gt;isALPHA_LC&lt;/code&gt; , &lt;code&gt;isALPHA_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isALPHA_LC_utf8&lt;/code&gt; 에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="af7aba7401f9e1c72d74964e907a9b2716eb9e27" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is an octal digit, [0-7]. The only two variants are &lt;code&gt;isOCTAL_A&lt;/code&gt; and &lt;code&gt;isOCTAL_L1&lt;/code&gt; ; each is identical to &lt;code&gt;isOCTAL&lt;/code&gt; .</source>
          <target state="translated">지정된 문자가 8 진수 [0-7]인지 여부를 나타내는 부울을 리턴합니다. 유일한 두 변형은 &lt;code&gt;isOCTAL_A&lt;/code&gt; 와 &lt;code&gt;isOCTAL_L1&lt;/code&gt; 입니다 . 각각 &lt;code&gt;isOCTAL&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="15efb9db5798b3f62af85957e91796c0081a1fd0" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is an uppercase character, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:upper:]]/&lt;/a&gt;&lt;/code&gt;. See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isUPPER_A&lt;/code&gt; , &lt;code&gt;isUPPER_L1&lt;/code&gt; , &lt;code&gt;isUPPER_uni&lt;/code&gt; , &lt;code&gt;isUPPER_utf8&lt;/code&gt; , &lt;code&gt;isUPPER_LC&lt;/code&gt; , &lt;code&gt;isUPPER_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isUPPER_LC_utf8&lt;/code&gt; .</source>
          <target state="translated">지정된 문자가 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:upper:]]/&lt;/a&gt;&lt;/code&gt; 와 유사한 대문자인지 여부를 나타내는 부울을 리턴합니다 . 변형 &lt;code&gt;isUPPER_A&lt;/code&gt; , &lt;code&gt;isUPPER_L1&lt;/code&gt; , &lt;code&gt;isUPPER_uni&lt;/code&gt; , &lt;code&gt;isUPPER_utf8&lt;/code&gt; , &lt;code&gt;isUPPER_LC&lt;/code&gt; , &lt;code&gt;isUPPER_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isUPPER_LC_utf8&lt;/code&gt; 에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6fa3ee935b94e5b52cd32b7dfbaa4cfea1f8f549" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified character is one of the 128 characters in the ASCII character set, analogous to &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:ascii:]]/&lt;/a&gt;&lt;/code&gt;. On non-ASCII platforms, it returns TRUE iff this character corresponds to an ASCII character. Variants &lt;code&gt;isASCII_A()&lt;/code&gt; and &lt;code&gt;isASCII_L1()&lt;/code&gt; are identical to &lt;code&gt;isASCII()&lt;/code&gt; . See the &lt;a href=&quot;#Character-classification&quot;&gt;top of this section&lt;/a&gt; for an explanation of variants &lt;code&gt;isASCII_uni&lt;/code&gt; , &lt;code&gt;isASCII_utf8&lt;/code&gt; , &lt;code&gt;isASCII_LC&lt;/code&gt; , &lt;code&gt;isASCII_LC_uvchr&lt;/code&gt; , and &lt;code&gt;isASCII_LC_utf8&lt;/code&gt; . Note, however, that some platforms do not have the C library routine &lt;code&gt;isascii()&lt;/code&gt; . In these cases, the variants whose names contain &lt;code&gt;LC&lt;/code&gt; are the same as the corresponding ones without.</source>
          <target state="translated">지정된 문자가 &lt;code&gt;&lt;a href=&quot;functions/m&quot;&gt;m/[[:ascii:]]/&lt;/a&gt;&lt;/code&gt; 와 유사한 ASCII 문자 세트의 128 자 중 하나인지 여부를 나타내는 부울을 리턴합니다 . 비 ASCII 플랫폼에서는이 문자가 ASCII 문자에 해당하는 경우 TRUE를 리턴합니다. 변형 &lt;code&gt;isASCII_A()&lt;/code&gt; 및 &lt;code&gt;isASCII_L1()&lt;/code&gt; 동일하다 &lt;code&gt;isASCII()&lt;/code&gt; . 변형 &lt;code&gt;isASCII_uni&lt;/code&gt; , &lt;code&gt;isASCII_utf8&lt;/code&gt; , &lt;code&gt;isASCII_LC&lt;/code&gt; , &lt;code&gt;isASCII_LC_uvchr&lt;/code&gt; 및 &lt;code&gt;isASCII_LC_utf8&lt;/code&gt; 에 대한 설명 &lt;a href=&quot;#Character-classification&quot;&gt;은이 섹션&lt;/a&gt; 의 상단을 참조하십시오 . 그러나 일부 플랫폼에는 C 라이브러리 루틴 &lt;code&gt;isascii()&lt;/code&gt; . 이 경우 이름에 &lt;code&gt;LC&lt;/code&gt; 가 포함 된 변형 은 해당되지 않는 변형 과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="62cd19feb336d757e24d1ca5d00decdbb0f34399" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified filehandle is connected to a tty. Similar to the &lt;code&gt;-t&lt;/code&gt; operator, see &lt;a href=&quot;functions/-x&quot;&gt;-X&lt;/a&gt;.</source>
          <target state="translated">지정된 파일 핸들이 tty에 연결되어 있는지 여부를 나타내는 부울을 리턴합니다. &lt;code&gt;-t&lt;/code&gt; 연산자 와 유사하게 &lt;a href=&quot;functions/-x&quot;&gt;-X를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f7c03e1b106b9bca9aa586777ddd8acce73f8bb4" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified hash key exists. &lt;code&gt;hash&lt;/code&gt; can be a valid precomputed hash value, or 0 to ask for it to be computed.</source>
          <target state="translated">지정된 해시 키가 존재하는지 여부를 나타내는 부울을 리턴합니다. &lt;code&gt;hash&lt;/code&gt; 는 유효한 사전 계산 된 해시 값이거나 계산을 요청하는 0입니다.</target>
        </trans-unit>
        <trans-unit id="121353f5b2eaa9a3d9bda681a610cdc561cf253a" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the specified hash key exists. The absolute value of &lt;code&gt;klen&lt;/code&gt; is the length of the key. If &lt;code&gt;klen&lt;/code&gt; is negative the key is assumed to be in UTF-8-encoded Unicode.</source>
          <target state="translated">지정된 해시 키가 존재하는지 여부를 나타내는 부울을 리턴합니다. &lt;code&gt;klen&lt;/code&gt; 의 절대 값은 키의 길이입니다. 경우 &lt;code&gt;klen&lt;/code&gt; 키에 있다고 가정 부정 유니 UTF-8 인코딩.</target>
        </trans-unit>
        <trans-unit id="fe5313e3d6173b21fb5006ca3813abfeade7dee5" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the strings in the two SVs are identical. Is UTF-8 and 'use bytes' aware and coerces its args to strings if necessary. If the flags include SV_GMAGIC, it handles get-magic, too.</source>
          <target state="translated">두 SV의 문자열이 동일한 지 여부를 나타내는 부울을 반환합니다. UTF-8이며 '바이트 사용'을 인식하고 필요한 경우 인수를 문자열로 강제 변환합니다. 플래그에 SV_GMAGIC이 포함되어 있으면 get-magic도 처리합니다.</target>
        </trans-unit>
        <trans-unit id="29d62dc3ef5c0ce2f33205fd37c1d90629e10e6b" translate="yes" xml:space="preserve">
          <source>Returns a boolean indicating whether the strings in the two SVs are identical. Is UTF-8 and 'use bytes' aware, handles get magic, and will coerce its args to strings if necessary.</source>
          <target state="translated">두 SV의 문자열이 동일한 지 여부를 나타내는 부울을 반환합니다. UTF-8 및 '바이트 사용'을 인식하고, 핸들은 마술을 얻고, 필요한 경우 인수를 문자열로 강제 변환합니다.</target>
        </trans-unit>
        <trans-unit id="f17bf5c8034ffaf1b55c10e89659d3e8e5d24b49" translate="yes" xml:space="preserve">
          <source>Returns a boolean status indicating whether or not the given classname is either &lt;code&gt;UNIVERSAL&lt;/code&gt; itself, or one of &lt;code&gt;UNIVERSAL&lt;/code&gt; 's parents by &lt;code&gt;@ISA&lt;/code&gt; inheritance.</source>
          <target state="translated">제공된 클래스 이름이 &lt;code&gt;UNIVERSAL&lt;/code&gt; 자체 인지 또는 &lt;code&gt;@ISA&lt;/code&gt; 상속에 의한 &lt;code&gt;UNIVERSAL&lt;/code&gt; 부모 중 하나 인지 여부를 나타내는 부울 상태를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d7bf100c650c225813f8d3ca45243f2ec361a683" translate="yes" xml:space="preserve">
          <source>Returns a boolean to indicate whether the current object has content. Some special files like directories and so on never will have any content. This method is mainly to make sure you don't get warnings for using uninitialized values when looking at an object's content.</source>
          <target state="translated">현재 객체에 내용이 있는지 여부를 나타내는 부울을 반환합니다. 디렉토리 등과 같은 일부 특수 파일에는 내용이 없습니다. 이 방법은 주로 객체의 내용을 볼 때 초기화되지 않은 값 사용에 대한 경고를받지 않도록하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="9137f275a766c2cceed1614358dbf481ba99d8d3" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not the number of tests planned matches the number of tests run.</source>
          <target state="translated">계획된 테스트 수가 실행 된 테스트 수와 일치하는지 여부를 나타내는 부울 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e97bd77a512fc1c3afe80bad2a24a1469187ca39" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not the test passed, regardless of its TODO status.</source>
          <target state="translated">TODO 상태에 관계없이 테스트 통과 여부를 나타내는 부울 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0d1c38bb380ee78790b9faaa0b57977e6a6be36c" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not the test passed. Remember that for TODO tests, the test always passes.</source>
          <target state="translated">테스트 통과 여부를 나타내는 부울 값을 반환합니다. TODO 테스트의 경우 테스트는 항상 통과합니다.</target>
        </trans-unit>
        <trans-unit id="dd8be11f56eba06f6215a295d4aa9e09ffe0119a" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not this test had a SKIP directive.</source>
          <target state="translated">이 테스트에 SKIP 지시어가 있는지 여부를 나타내는 부울 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="55bf1f2ad9c933e98e212df8ca85bdd535baa36e" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not this test had a TODO directive.</source>
          <target state="translated">이 테스트에 TODO 지시문이 있는지 여부를 나타내는 부울 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="83bb62946ab90d79896ef8fbc93554e612f01341" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not this test has a SKIP directive.</source>
          <target state="translated">이 테스트에 SKIP 지시어가 있는지 여부를 나타내는 부울 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bd95ff22315220944c5d8adc000e9bb0dc47442d" translate="yes" xml:space="preserve">
          <source>Returns a boolean value indicating whether or not this test has a TODO directive.</source>
          <target state="translated">이 테스트에 TODO 지시문이 있는지 여부를 나타내는 부울 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8cfd0dae46cb0c91d7931cd887d4fc847c2ab010" translate="yes" xml:space="preserve">
          <source>Returns a byte count if successful (which may be zero or positive), returns negative value and sets &lt;code&gt;errno&lt;/code&gt; on error. Depending on implementation &lt;code&gt;errno&lt;/code&gt; may be &lt;code&gt;EINTR&lt;/code&gt; if operation was interrupted by a signal.</source>
          <target state="translated">성공하면 바이트 수를 반환하고 (0 또는 양수일 수 있음) 음수 값을 반환 하고 오류시 &lt;code&gt;errno&lt;/code&gt; 를 설정합니다 . 구현에 따라 신호에 의해 작동이 중단 된 경우 &lt;code&gt;errno&lt;/code&gt; 는 &lt;code&gt;EINTR&lt;/code&gt; 일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a92724b847f300275a1d7f6ab34f2957570785e5" translate="yes" xml:space="preserve">
          <source>Returns a code reference which, when passed an appropriate line of TAP, returns the lexed token corresponding to that line. As a result, the basic TAP parsing loop looks similar to the following:</source>
          <target state="translated">적절한 TAP 행을 전달하면 해당 행에 해당하는 어휘 토큰을 반환하는 코드 참조를 반환합니다. 결과적으로 기본 TAP 구문 분석 루프는 다음과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="250bd801628d1959cff347377739bc0fdd695949" translate="yes" xml:space="preserve">
          <source>Returns a copy of the denominator (the part under the line) as positive BigInt.</source>
          <target state="translated">분모 (행 아래 부분)의 사본을 양의 BigInt로 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1459dc1c58bb1dc9cdeee402445d3db69db0dae5" translate="yes" xml:space="preserve">
          <source>Returns a copy of the numerator (the part above the line) as signed BigInt.</source>
          <target state="translated">부호있는 BigInt로 분자 (행 위의 부분)의 사본을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="4886a637f8ba359a81c9933464803da25761aebb" translate="yes" xml:space="preserve">
          <source>Returns a copy of the object as BigFloat, preserving the accuracy as wanted, or the default of 40 digits.</source>
          <target state="translated">개체의 복사본을 BigFloat로 반환하여 원하는 정확도를 유지하거나 기본값은 40 자리입니다.</target>
        </trans-unit>
        <trans-unit id="37c279b2e2c51eeca1b17bd33cccb475f3122b3f" translate="yes" xml:space="preserve">
          <source>Returns a copy of the object as BigInt, truncated to an integer.</source>
          <target state="translated">정수로 잘린 BigInt로 오브젝트의 사본을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="4e8c2cac3d66912d28da94207b4929099540c29c" translate="yes" xml:space="preserve">
          <source>Returns a definition for the POD2MAN macro. This is a program which emulates the pod2man utility. You can add more switches to the command by simply appending them on the macro.</source>
          <target state="translated">POD2MAN 매크로에 대한 정의를 리턴합니다. pod2man 유틸리티를 에뮬레이트하는 프로그램입니다. 매크로에 스위치를 추가하여 명령에 스위치를 더 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b18a469fd6bb6b4730a0fff4118015820804b932" translate="yes" xml:space="preserve">
          <source>Returns a double-quote-surrounded escaped version of STR which can be used as a string in C source code.</source>
          <target state="translated">C 소스 코드에서 문자열로 사용할 수있는 따옴표로 묶은 이스케이프 처리 된 STR 버전을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a5e8b3aa73f7ca4af9783bcbc4977b12160a8928" translate="yes" xml:space="preserve">
          <source>Returns a double-quote-surrounded escaped version of STR which can be used as a string in Perl source code.</source>
          <target state="translated">Perl 소스 코드에서 문자열로 사용할 수있는 따옴표의 따옴표로 묶은 이스케이프 처리 된 버전을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="7e5796d852e1c910eaeb916456a16d42f7d5ee74" translate="yes" xml:space="preserve">
          <source>Returns a duplicate copy of the object.</source>
          <target state="translated">객체의 복제본을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="77f325e9280bdd4d13a1ce4341473e4dd889e86d" translate="yes" xml:space="preserve">
          <source>Returns a filehandle tied to the Net::Cmd object. After issuing a command, you may read from this filehandle using read() or &amp;lt;&amp;gt;. The filehandle will return EOF when the final dot is encountered. Similarly, you may write to the filehandle in order to send data to the server after issuing a command that expects data to be written.</source>
          <target state="translated">Net :: Cmd 객체에 연결된 파일 핸들을 반환합니다. 명령을 실행 한 후 read () 또는 &amp;lt;&amp;gt;를 사용하여이 파일 핸들에서 읽을 수 있습니다. 마지막 점이 발견되면 파일 핸들이 EOF를 반환합니다. 마찬가지로, 데이터 쓰기를 예상하는 명령을 실행 한 후 서버로 데이터를 보내기 위해 파일 핸들에 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28fd9d2bb57f2077c4e81989e929cd22950c29ea" translate="yes" xml:space="preserve">
          <source>Returns a floating seconds since the epoch. This function can be imported, resulting in a nice drop-in replacement for the &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; provided with core Perl; see the &lt;a href=&quot;#EXAMPLES&quot;&gt;EXAMPLES&lt;/a&gt; below.</source>
          <target state="translated">에포크 이후로 떠 다니는 초를 반환합니다. 이 기능을 임포트 할 수있어 코어 Perl과 함께 제공 되는 &lt;code&gt;&lt;a href=&quot;../functions/time&quot;&gt;time&lt;/a&gt;&lt;/code&gt; 대체품을 교체 할 수 있습니다 . 아래 &lt;a href=&quot;#EXAMPLES&quot;&gt;예를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c50f7f4e52b9476b89b80acc01d637ac37ef1468" translate="yes" xml:space="preserve">
          <source>Returns a formatted string representing the runtime returned by &lt;code&gt;elapsed()&lt;/code&gt; . This lets the caller not worry about Benchmark.</source>
          <target state="translated">&lt;code&gt;elapsed()&lt;/code&gt; 반환 한 런타임을 나타내는 형식화 된 문자열을 반환합니다 . 이렇게하면 발신자가 벤치 마크에 대해 걱정하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="b709134b8ac971f48b0ba6587adbc0b2b8bbb287" translate="yes" xml:space="preserve">
          <source>Returns a four-element list giving the user and system times in seconds for this process and any exited children of this process.</source>
          <target state="translated">이 프로세스와 종료 된이 프로세스에 대한 사용자 및 시스템 시간 (초)을 제공하는 4 요소 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="3c6d3dc8137b45cacf9a75e5dbf0aa4a2398a11e" translate="yes" xml:space="preserve">
          <source>Returns a hash containing the configuration, e.g. the version number, lib loaded etc. The following hash keys are currently filled in with the appropriate information.</source>
          <target state="translated">구성이 포함 된 해시를 리턴합니다 (예 : 버전 번호, lib로드 됨). 다음 해시 키는 현재 적절한 정보로 채워져 있습니다.</target>
        </trans-unit>
        <trans-unit id="26fdca20296d88fa1aaff95eb9fde2fd34cb1994" translate="yes" xml:space="preserve">
          <source>Returns a hash reference of Benchmark objects, keyed by name.</source>
          <target state="translated">이름을 기준으로 벤치 마크 객체의 해시 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1ac63bfb3a3e6dd843b2aa85018c53e943ead17c" translate="yes" xml:space="preserve">
          <source>Returns a hash reference. The keys of the hash are the letters &lt;code&gt;D&lt;/code&gt; , &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;L&lt;/code&gt; , &lt;code&gt;I&lt;/code&gt; , and &amp;lt;P&amp;gt;, for development status, support level, language, interface and public licence respectively. The data for the DSLIP status are collected by pause.perl.org when authors register their namespaces. The values of the 5 hash elements are one-character words whose meaning is described in the table below. There are also 5 hash elements &lt;code&gt;DV&lt;/code&gt; , &lt;code&gt;SV&lt;/code&gt; , &lt;code&gt;LV&lt;/code&gt; , &lt;code&gt;IV&lt;/code&gt; , and &amp;lt;PV&amp;gt; that carry a more verbose value of the 5 status variables.</source>
          <target state="translated">해시 참조를 반환합니다. 해시의 키는 각각 개발 상태, 지원 수준, 언어, 인터페이스 및 공용 라이센스에 대한 문자 &lt;code&gt;D&lt;/code&gt; , &lt;code&gt;S&lt;/code&gt; , &lt;code&gt;L&lt;/code&gt; , &lt;code&gt;I&lt;/code&gt; 및 &amp;lt;P&amp;gt;입니다. DSLIP 상태에 대한 데이터는 작성자가 네임 스페이스를 등록 할 때 pause.perl.org에 의해 수집됩니다. 5 개의 해시 요소 값은 아래 표에 설명 된 한 글자 단어입니다. 5 개의 상태 변수에 대한보다 자세한 값을 전달하는 5 개의 해시 요소 &lt;code&gt;DV&lt;/code&gt; , &lt;code&gt;SV&lt;/code&gt; , &lt;code&gt;LV&lt;/code&gt; , &lt;code&gt;IV&lt;/code&gt; 및 &amp;lt;PV&amp;gt;도 있습니다.</target>
        </trans-unit>
        <trans-unit id="846a8a177f18ddd7d4c5cb69da067db90cb82d60" translate="yes" xml:space="preserve">
          <source>Returns a hash with system information. The keys of the hash are</source>
          <target state="translated">시스템 정보가 포함 된 해시를 반환합니다. 해시의 키는</target>
        </trans-unit>
        <trans-unit id="de9d6b1f96735fb6f907afc948d242c14dd6acc6" translate="yes" xml:space="preserve">
          <source>Returns a hashref of raw results, suitable for serialization by YAML.</source>
          <target state="translated">YAML에 의한 직렬화에 적합한 원시 결과의 해시 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6bc298e6a1a0d274c33e8d9fb51b688f54c4bb11" translate="yes" xml:space="preserve">
          <source>Returns a hashref of raw test data, suitable for serialization by YAML.</source>
          <target state="translated">YAML에 의한 직렬화에 적합한 원시 테스트 데이터의 해시 참조를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="f22d7d194b2c4d665ff1b7f0d98a24fc7cedbe6b" translate="yes" xml:space="preserve">
          <source>Returns a letter without colon.</source>
          <target state="translated">콜론없이 문자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1e96317825f6b3e1a7e1022ae8e0f3fc84ab7665" translate="yes" xml:space="preserve">
          <source>Returns a list of &lt;code&gt;Archive::Tar::File&lt;/code&gt; objects that were just added.</source>
          <target state="translated">방금 추가 된 &lt;code&gt;Archive::Tar::File&lt;/code&gt; 객체 의 목록을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d0db60e6b0c64c93b70980380d4f32ebfe27a873" translate="yes" xml:space="preserve">
          <source>Returns a list of C pre-processor options used when compiling this</source>
          <target state="translated">이것을 컴파일 할 때 사용되는 C 전 처리기 옵션 목록을 반환합니다</target>
        </trans-unit>
        <trans-unit id="5e4eb4f62d9548cdeb8a87f9c752ec6862adb849" translate="yes" xml:space="preserve">
          <source>Returns a list of IDs of modules contained in a distribution file. Works only for distributions listed in the 02packages.details.txt.gz file. This typically means that just most recent version of a distribution is covered.</source>
          <target state="translated">배포 파일에 포함 된 모듈의 ID 목록을 반환합니다. 02packages.details.txt.gz 파일에 나열된 배포에 대해서만 작동합니다. 이것은 일반적으로 가장 최신 버전의 배포판 만 다룹니다.</target>
        </trans-unit>
        <trans-unit id="c0f87b3d7a940704d24d36bcd5aed3d9ee92ebf3" translate="yes" xml:space="preserve">
          <source>Returns a list of OS specific files to be removed in the clean target in addition to the usual set.</source>
          <target state="translated">일반 세트 외에 클린 대상에서 제거 할 OS 특정 파일 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="dbf2c278ede2265c40d35666697e630e8eb496d1" translate="yes" xml:space="preserve">
          <source>Returns a list of all non-joined, non-detached Thread objects.</source>
          <target state="translated">결합되지 않은 분리되지 않은 Thread 객체의 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="019d68cae9b1b3e9c9596ada9e8cb4855e2ca21b" translate="yes" xml:space="preserve">
          <source>Returns a list of all of the named buffers defined in the last successful match. If $all is true, then it returns all names defined, if not it returns only names which were involved in the match.</source>
          <target state="translated">마지막으로 성공한 일치에 정의 된 모든 명명 된 버퍼의 목록을 반환합니다. $ all이 true이면 정의 된 모든 이름을 반환하고 그렇지 않은 경우 일치하는 이름 만 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a6a35d54f37dbc604d69e6d60af4c2972bfa7619" translate="yes" xml:space="preserve">
          <source>Returns a list of canonical names of available encodings that have already been loaded. To get a list of all available encodings including those that have not yet been loaded, say:</source>
          <target state="translated">이미로드 된 사용 가능한 인코딩의 정식 이름 목록을 반환합니다. 아직로드되지 않은 인코딩을 포함하여 사용 가능한 모든 인코딩 목록을 얻으려면 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="fa9b1cde71bc5301e223d37824894c6945d8edb5" translate="yes" xml:space="preserve">
          <source>Returns a list of filenames extracted.</source>
          <target state="translated">추출 된 파일 이름 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c721de55976f935f544f746ba999346e964fcbb9" translate="yes" xml:space="preserve">
          <source>Returns a list of handles. If EVENT_MASK is not given then a list of all handles known will be returned. If EVENT_MASK is given then a list of handles will be returned which had one of the events specified by EVENT_MASK happen during the last call ti &lt;code&gt;poll&lt;/code&gt;</source>
          <target state="translated">핸들 목록을 반환합니다. EVENT_MASK가 제공되지 않으면 알려진 모든 핸들 목록이 리턴됩니다. EVENT_MASK가 제공되면 마지막 호출 ti &lt;code&gt;poll&lt;/code&gt; 중에 EVENT_MASK에 의해 지정된 이벤트 중 하나가 발생한 핸들 목록이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="9aef388befca27309e982d59247b0ec6b235feea" translate="yes" xml:space="preserve">
          <source>Returns a list of language tags that are superordinate tags to $lang1 -- it gets this by removing subtags from the end of $lang1 until nothing (or just &quot;i&quot; or &quot;x&quot;) is left.</source>
          <target state="translated">$ lang1에 상위 태그 인 언어 태그 목록을 리턴합니다. 아무 것도 (또는 &quot;i&quot;또는 &quot;x&quot;) 남을 때까지 $ lang1의 끝에서 서브 태그를 제거하여이를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="35a76a46cf0b37621effdd5e8c02449fa5ac9589" translate="yes" xml:space="preserve">
          <source>Returns a list of objects' IDs contained in a bundle. The associated objects may be bundles, modules or distributions.</source>
          <target state="translated">번들에 포함 된 객체의 ID 목록을 반환합니다. 연관된 오브젝트는 번들, 모듈 또는 분배 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e1e002e4535ccd8fdc133ab209134bc583eae51" translate="yes" xml:space="preserve">
          <source>Returns a list of operator names corresponding to those operators in the set.</source>
          <target state="translated">세트의 해당 연산자에 해당하는 연산자 이름 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="66c4008542bffc7b89b12635d94be15a4aaba4b3" translate="yes" xml:space="preserve">
          <source>Returns a list of pragmas each of which is a + or - followed by the pragma name.</source>
          <target state="translated">pragma 이름 뒤에 각각 + 또는-인 pragma 목록을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="230f74d4607a7f27209056bc9bc6af781aa28fef" translate="yes" xml:space="preserve">
          <source>Returns a list of statistics about a hash.</source>
          <target state="translated">해시에 대한 통계 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="fe144bb7531ce29e46cc8ada3f153adf6f969d24" translate="yes" xml:space="preserve">
          <source>Returns a list of the header files that should be used as dependencies for XS code, for this version of Perl on this platform.</source>
          <target state="translated">이 플랫폼에서이 버전의 Perl에 대해 XS 코드에 대한 종속성으로 사용해야하는 헤더 파일 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="93b73efcaddb141a1af7d7aedf65f19131b01a60" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of all the files in the archive.</source>
          <target state="translated">아카이브에있는 모든 파일의 이름 목록을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c807f09f86b09b3cceb4ae58c501a57774d751c3" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of all the files in the archive. The first argument can either be the name of the tar file to list or a reference to an open file handle (e.g. a GLOB reference).</source>
          <target state="translated">아카이브에있는 모든 파일의 이름 목록을 리턴합니다. 첫 번째 인수는 나열 할 tar 파일의 이름이거나 열린 파일 핸들에 대한 참조 (예 : GLOB 참조) 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a7a5fa8705763a28c56a13969e98db8aac5dbd0" translate="yes" xml:space="preserve">
          <source>Returns a list of the names of locally applied patches, equivalent to what is shown by &lt;code&gt;perl -V&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;perl -V&lt;/code&gt; 로 표시되는 것과 동일하게 로컬로 적용된 패치 이름 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="7bc99f0f9cafceff5505406bb1667be25637eab4" translate="yes" xml:space="preserve">
          <source>Returns a list of the original</source>
          <target state="translated">원본의 목록을 반환</target>
        </trans-unit>
        <trans-unit id="c4d5fd8b815f817b4b90a294c1839a12e02dc791" translate="yes" xml:space="preserve">
          <source>Returns a list of two elements. These are the number of new messages and the total number of messages for &lt;code&gt;USER&lt;/code&gt; .</source>
          <target state="translated">두 요소의 목록을 반환합니다. 새 메시지 수와 &lt;code&gt;USER&lt;/code&gt; 의 총 메시지 수입니다 .</target>
        </trans-unit>
        <trans-unit id="6f323d9ef4b0b4a03a48dce624ecba3555edd294" translate="yes" xml:space="preserve">
          <source>Returns a list of two elements. These are the number of undeleted elements and the size of the mbox in octets.</source>
          <target state="translated">두 요소의 목록을 반환합니다. 삭제되지 않은 요소의 수와 옥텟 단위의 mbox 크기입니다.</target>
        </trans-unit>
        <trans-unit id="9af87a9cb1a81e8481bc874715c237016cdd28a2" translate="yes" xml:space="preserve">
          <source>Returns a list of two values, &lt;code&gt;$total&lt;/code&gt; and &lt;code&gt;$failed&lt;/code&gt; , describing the results. &lt;code&gt;$total&lt;/code&gt; is a hash ref summary of all the tests run. Its keys and values are this:</source>
          <target state="translated">결과를 설명하는 &lt;code&gt;$total&lt;/code&gt; 및 &lt;code&gt;$failed&lt;/code&gt; 의 두 값 목록을 리턴합니다 . &lt;code&gt;$total&lt;/code&gt; 은 모든 테스트 실행에 대한 해시 참조 요약입니다. 키와 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="00f12e9332ca79ed6d064f0bd6bc7ec7686b0040" translate="yes" xml:space="preserve">
          <source>Returns a list of whatever looks like formally valid language tags in $whatever. Not very smart, so don't get too creative with what you want to feed it.</source>
          <target state="translated">$ whatever에서 공식적으로 유효한 언어 태그처럼 보이는 목록을 반환합니다. 별로 똑똑하지 않기 때문에 공급하고 싶은 것에 너무 창의적이지 마십시오.</target>
        </trans-unit>
        <trans-unit id="93e99dff8673f03d3aefdd0b2849d5ba7ad37d1e" translate="yes" xml:space="preserve">
          <source>Returns a lowercased version of EXPR. This is the internal function implementing the &lt;code&gt;\L&lt;/code&gt; escape in double-quoted strings.</source>
          <target state="translated">소문자 버전의 EXPR을 리턴합니다. 이것은 큰 따옴표로 묶인 문자열에서 &lt;code&gt;\L&lt;/code&gt; 이스케이프를 구현하는 내부 함수 입니다.</target>
        </trans-unit>
        <trans-unit id="b906e1deb1923677776464c5259e09182656e3a8" translate="yes" xml:space="preserve">
          <source>Returns a make fragment containing any targets which have special meaning to make. For example, .SUFFIXES and .PHONY.</source>
          <target state="translated">특별한 의미가있는 대상을 포함하는 make 조각을 반환합니다. 예를 들어 .SUFFIXES 및 .PHONY입니다.</target>
        </trans-unit>
        <trans-unit id="779fd366b6948f93004ca0affd4a6084facb9568" translate="yes" xml:space="preserve">
          <source>Returns a make fragment containing definitions for the macros init_others() initializes.</source>
          <target state="translated">init_others () 초기화 매크로에 대한 정의가 포함 된 make 조각을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0a1f520e917d7a6a8c26e510f87711bcfe7275b8" translate="yes" xml:space="preserve">
          <source>Returns a make fragment defining all the macros initialized in init_platform() rather than put them in constants().</source>
          <target state="translated">init_platform ()에서 초기화 된 모든 매크로를 constants ()에 넣지 않고 정의하는 make 조각을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="637299bb9b2eaf7440b62525d3ed61fd92685553" translate="yes" xml:space="preserve">
          <source>Returns a make fragment with the makemakerdeflt_target specified. This target is the first target in the Makefile, is the default target and simply points off to 'all' just in case any make variant gets confused or something gets snuck in before the real 'all' target.</source>
          <target state="translated">makemakerdeflt_target이 지정된 make 조각을 리턴합니다. 이 대상은 Makefile의 첫 번째 대상이며 기본 대상이며, make 변형이 혼동되거나 실제 'all'대상 전에 무언가가 스며들 경우를 대비하여 단순히 'all'을 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="cd09a98375c7f928e5683f491e4c838949c93b26" translate="yes" xml:space="preserve">
          <source>Returns a method name, or else a reference to the user-supplied subroutine used to print error messages. Returns &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; if the &lt;b&gt;carp&lt;/b&gt; builtin is used to issue error messages (this is the default behavior).</source>
          <target state="translated">메소드 이름 또는 오류 메시지를 인쇄하는 데 사용되는 사용자 제공 서브 루틴에 대한 참조를 리턴합니다. &lt;b&gt;잉어&lt;/b&gt; 내장이 오류 메시지를 발행하는 데 사용되는 경우 &lt;code&gt;&lt;a href=&quot;../functions/undef&quot;&gt;undef&lt;/a&gt;&lt;/code&gt; 를 리턴 합니다 (기본 동작).&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="bc41b8f81ab3f9aa00c8a62749dd8467621f1c1b" translate="yes" xml:space="preserve">
          <source>Returns a multi-line description of the author</source>
          <target state="translated">저자의 여러 줄 설명을 반환</target>
        </trans-unit>
        <trans-unit id="3507dae02d9454030cfcf0029240323de623cd2b" translate="yes" xml:space="preserve">
          <source>Returns a multi-line description of the bundle</source>
          <target state="translated">번들의 여러 줄 설명을 반환합니다</target>
        </trans-unit>
        <trans-unit id="71e02721bd8079e7f34a2b14848f3ccaad2e4d16" translate="yes" xml:space="preserve">
          <source>Returns a multi-line description of the distribution</source>
          <target state="translated">분포의 여러 줄 설명을 반환합니다</target>
        </trans-unit>
        <trans-unit id="57b4aa253f5016f004528200073a13e30db1494e" translate="yes" xml:space="preserve">
          <source>Returns a multi-line description of the module</source>
          <target state="translated">모듈의 여러 줄 설명을 반환합니다</target>
        </trans-unit>
        <trans-unit id="fe0ad788a356f40c6dcc75e2209325890cc57d20" translate="yes" xml:space="preserve">
          <source>Returns a name for a temporary file.</source>
          <target state="translated">임시 파일의 이름을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0b4edb06f1dfcea66f8530475e32f9627e006e80" translate="yes" xml:space="preserve">
          <source>Returns a native FILE * used by a stdio layer. If there is none, it will create one with PerlIO_exportFILE. In either case the FILE * should be considered as belonging to PerlIO subsystem and should only be closed by calling &lt;code&gt;PerlIO_close()&lt;/code&gt; .</source>
          <target state="translated">stdio 계층에서 사용하는 기본 FILE *를 반환합니다. 없으면 PerlIO_exportFILE을 사용하여 생성합니다. 두 경우 모두 FILE *는 PerlIO 하위 시스템에 속하는 것으로 간주되어야하며 &lt;code&gt;PerlIO_close()&lt;/code&gt; 를 호출하여 종료해야합니다 .</target>
        </trans-unit>
        <trans-unit id="e3e0bc5662a23a4eb7b1063629206afa37cacad3" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;App::Prove::State::Result&lt;/code&gt; instance.</source>
          <target state="translated">새로운 &lt;code&gt;App::Prove::State::Result&lt;/code&gt; 인스턴스를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="072af55c29b21f22fb0dbaadf0bed86846b7e6d7" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;ExtUtils::CBuilder&lt;/code&gt; object. A &lt;code&gt;config&lt;/code&gt; parameter lets you override &lt;code&gt;Config.pm&lt;/code&gt; settings for all operations performed by the object, as in the following example:</source>
          <target state="translated">새로운 &lt;code&gt;ExtUtils::CBuilder&lt;/code&gt; 객체를 반환 합니다. &lt;code&gt;config&lt;/code&gt; 매개 변수는 재정의 할 수 &lt;code&gt;Config.pm&lt;/code&gt; 의 다음의 예에서와 같이, 객체에 의해 수행되는 모든 작업에 대한 설정을 :</target>
        </trans-unit>
        <trans-unit id="547c5e3b401dfbfcf933d775ab30e8a7428a8060" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;TAP::Parser::Aggregator&lt;/code&gt; object.</source>
          <target state="translated">새로운 &lt;code&gt;TAP::Parser::Aggregator&lt;/code&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="1e0e8d9ef34307eb0fef33472e682fd06e8ae96c" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;TAP::Parser::Multiplexer&lt;/code&gt; object.</source>
          <target state="translated">새로운 &lt;code&gt;TAP::Parser::Multiplexer&lt;/code&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="afba8de307940439e9161479c20bd85449a00193" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;TAP::Parser::Source&lt;/code&gt; object.</source>
          <target state="translated">새로운 &lt;code&gt;TAP::Parser::Source&lt;/code&gt; 객체를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="945ed838143cbab9b40f4992e5e493932dca66f7" translate="yes" xml:space="preserve">
          <source>Returns a new &lt;code&gt;TAP::Parser&lt;/code&gt; object.</source>
          <target state="translated">새로운 &lt;code&gt;TAP::Parser&lt;/code&gt; 객체를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="7358c499f3395e1846c123b20835372d326ebe81" translate="yes" xml:space="preserve">
          <source>Returns a new Archive::Tar::File object from a raw 512-byte tar archive chunk.</source>
          <target state="translated">원시 512 바이트 tar 아카이브 청크에서 새로운 Archive :: Tar :: File 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="76931e1bf6e2f2e4f5e180a279c71e682a915e13" translate="yes" xml:space="preserve">
          <source>Returns a new Archive::Tar::File object from an existing file.</source>
          <target state="translated">기존 파일에서 새 Archive :: Tar :: File 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="62ac76734b482c19ca14f4b13dfa032dc8275fff" translate="yes" xml:space="preserve">
          <source>Returns a new Archive::Tar::File object from data.</source>
          <target state="translated">데이터에서 새로운 Archive :: Tar :: File 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ecf6dfd01efe542672ac1b4f915c19832cfc58b4" translate="yes" xml:space="preserve">
          <source>Returns a new Digest::SHA object. Allowed values for</source>
          <target state="translated">새로운 Digest :: SHA 객체를 반환합니다. 에 허용 된 값</target>
        </trans-unit>
        <trans-unit id="79209b046ca6d87244e096a4d7a1a827b30b1488" translate="yes" xml:space="preserve">
          <source>Returns a new Tar object. If given any arguments, &lt;code&gt;new()&lt;/code&gt; calls the &lt;code&gt;&lt;a href=&quot;../functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; method automatically, passing on the arguments provided to the &lt;code&gt;&lt;a href=&quot;../functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; method.</source>
          <target state="translated">새로운 Tar 객체를 돌려줍니다. 인수를 주어진 경우 &lt;code&gt;new()&lt;/code&gt; 부르는 &lt;code&gt;&lt;a href=&quot;../functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; 받는 제공된 인수를 전달하는 자동 방법을 &lt;code&gt;&lt;a href=&quot;../functions/read&quot;&gt;read()&lt;/a&gt;&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="399306dc24ce0e24c63672215dc8bc35cef0eba2" translate="yes" xml:space="preserve">
          <source>Returns a new instance of &lt;code&gt;Test::Builder&lt;/code&gt; . Any output from this child will be indented four spaces more than the parent's indentation. When done, the &lt;code&gt;finalize&lt;/code&gt; method</source>
          <target state="translated">&lt;code&gt;Test::Builder&lt;/code&gt; 의 새 인스턴스를 반환합니다 . 이 자식의 결과는 부모의 들여 쓰기보다 4 칸 더 들여 쓰기됩니다. 완료되면 &lt;code&gt;finalize&lt;/code&gt; 메소드</target>
        </trans-unit>
        <trans-unit id="3379b03088fb9664fb4a626b54d04b8ede428d66" translate="yes" xml:space="preserve">
          <source>Returns a new version object based on the passed in SV:</source>
          <target state="translated">전달 된 SV를 기반으로 새 버전 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c8345487700ba01fc47e18199b150a6447736d3e" translate="yes" xml:space="preserve">
          <source>Returns a new, empty XS parser/compiler object.</source>
          <target state="translated">비어있는 새 XS 파서 / 컴파일러 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d18975b555ce52ec7fd6cf355697113cb2d39403" translate="yes" xml:space="preserve">
          <source>Returns a newly created &lt;code&gt;Data::Dumper&lt;/code&gt; object. The first argument is an anonymous array of values to be dumped. The optional second argument is an anonymous array of names for the values. The names need not have a leading &lt;code&gt;$&lt;/code&gt; sign, and must be comprised of alphanumeric characters. You can begin a name with a &lt;code&gt;*&lt;/code&gt; to specify that the dereferenced type must be dumped instead of the reference itself, for ARRAY and HASH references.</source>
          <target state="translated">새로 만든 &lt;code&gt;Data::Dumper&lt;/code&gt; 개체를 반환 합니다. 첫 번째 인수는 덤프 할 익명 값 배열입니다. 선택적 두 번째 인수는 값의 익명 이름 배열입니다. 이름은 앞에 &lt;code&gt;$&lt;/code&gt; 기호가 없어야하며 영숫자로 구성되어야합니다. ARRAY 및 HASH 참조에 대해 참조 자체 대신에 역 참조 된 유형을 덤프하도록 지정하기 위해 &lt;code&gt;*&lt;/code&gt; 로 이름을 시작할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ce97ca87f8cdcc859ac4cd9c5dff374e29abae6a" translate="yes" xml:space="preserve">
          <source>Returns a non-empty string if EXPR is a reference, the empty string otherwise. If EXPR is not specified, &lt;code&gt;$_&lt;/code&gt; will be used. The value returned depends on the type of thing the reference is a reference to.</source>
          <target state="translated">EXPR이 참조 인 경우 비어 있지 않은 문자열을 반환하고 그렇지 않으면 빈 문자열을 반환합니다. EXPR을 지정하지 않으면 &lt;code&gt;$_&lt;/code&gt; 가 사용됩니다. 반환되는 값은 참조가 참조하는 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="b3001190420830f205689a15705d11072560910d" translate="yes" xml:space="preserve">
          <source>Returns a normalized string representation of &lt;code&gt;$x&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;$x&lt;/code&gt; 의 정규화 된 문자열 표현을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="765e5ff450d6ae85c48fb752c475ad2344b2cec4" translate="yes" xml:space="preserve">
          <source>Returns a numeric value for a Unix-like file descriptor. Returns -1 if there isn't one. Optional. Default is fileno($fh).</source>
          <target state="translated">유닉스 계열 파일 디스크립터의 숫자 값을 리턴합니다. 없는 경우 -1을 반환합니다. 선택 과목. 기본값은 fileno ($ fh)입니다.</target>
        </trans-unit>
        <trans-unit id="b85bb5b249f888f02c33e8bcae92e0d34d8747a2" translate="yes" xml:space="preserve">
          <source>Returns a one-line description of the author</source>
          <target state="translated">저자에 대한 한 줄 설명을 반환합니다</target>
        </trans-unit>
        <trans-unit id="085619845cce2764231d5f073b28a019b850c6be" translate="yes" xml:space="preserve">
          <source>Returns a one-line description of the bundle</source>
          <target state="translated">번들에 대한 단선 설명을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="65f290bc48da4a7f28b295116bf32ff3707ae6f6" translate="yes" xml:space="preserve">
          <source>Returns a one-line description of the distribution</source>
          <target state="translated">분포의 한 줄 설명을 반환합니다</target>
        </trans-unit>
        <trans-unit id="d5e16f9806bf88053e899830890b09a474cdee19" translate="yes" xml:space="preserve">
          <source>Returns a one-line description of the module in four columns: The first column contains the word &lt;code&gt;Module&lt;/code&gt; , the second column consists of one character: an equals sign if this module is already installed and up-to-date, a less-than sign if this module is installed but can be upgraded, and a space if the module is not installed. The third column is the name of the module and the fourth column gives maintainer or distribution information.</source>
          <target state="translated">네 개의 열로 모듈에 대한 한 줄 설명을 리턴합니다. 첫 번째 열에는 &lt;code&gt;Module&lt;/code&gt; 이라는 단어가 포함되고 두 번째 열은 한 문자로 구성됩니다.이 모듈이 이미 설치되어 있고 최신 인 경우에는 등호 이 모듈이 설치되었지만 업그레이드 할 수있는 경우, 모듈이 설치되지 않은 경우 공백이 있습니다. 세 번째 열은 모듈의 이름이고 네 번째 열은 관리자 또는 배포 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="aab97353a9a564a635e7bfd6c1c9333885951735" translate="yes" xml:space="preserve">
          <source>Returns a packed representation of the bucket array associated with a hash. Each element of the array is either an integer K, in which case it represents K empty buckets, or a reference to another array which contains the keys that are in that bucket.</source>
          <target state="translated">해시와 관련된 버킷 배열의 압축 표현을 반환합니다. 배열의 각 요소는 정수 K이며,이 경우 K 개의 빈 버킷을 나타내거나 해당 버킷에있는 키를 포함하는 다른 배열에 대한 참조입니다.</target>
        </trans-unit>
        <trans-unit id="23b2dad34c9af9b9e48afae62db216306d4b693d" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the escaped text as held by dsv.</source>
          <target state="translated">dsv가 보유한 이스케이프 된 텍스트에 대한 포인터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="45854f7b6cfbeb20b8e009a15ca9a490094c4ee3" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the next character after the parsed version string, as well as upgrading the passed in SV to an RV.</source>
          <target state="translated">SV에서 전달 된 SV를 RV로 업그레이드 할뿐만 아니라 구문 분석 된 버전 문자열 다음의 다음 문자에 대한 포인터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="cca5459937679b6b48f08d353b33b366ffeba6a9" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the physical string in the SV. The SV must contain a string. Prior to 5.9.3 it is not safe to execute this macro unless the SV's type &amp;gt;= SVt_PV.</source>
          <target state="translated">SV의 물리적 문자열에 대한 포인터를 반환합니다. SV는 문자열을 포함해야합니다. 5.9.3 이전에는 SV 유형&amp;gt; = SVt_PV가 아니면이 매크로를 실행하는 것이 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="751b690c1de8da5a67e95f434e3bb02c1f97da75" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the prettified text as held by dsv.</source>
          <target state="translated">dsv가 보유한 미리 정의 된 텍스트에 대한 포인터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="47f6a7041767c74944f16c3dd82443358606f5aa" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the spot just after the last character in the string which is in the SV, where there is usually a trailing &lt;code&gt;NUL&lt;/code&gt; character (even though Perl scalars do not strictly require it). See &lt;code&gt;SvCUR&lt;/code&gt; . Access the character as *(SvEND(sv)).</source>
          <target state="translated">SV에있는 문자열의 마지막 문자 바로 뒤에 자리에 대한 포인터를 반환합니다. 여기에는 일반적으로 후행 &lt;code&gt;NUL&lt;/code&gt; 문자가 있습니다 (Perl 스칼라에 반드시 필요하지는 않지만). &lt;code&gt;SvCUR&lt;/code&gt; 을 참조하십시오 . * (SvEND (sv))로 문자에 액세스하십시오.</target>
        </trans-unit>
        <trans-unit id="9bcee1691ca884c9e72f762e9e662369b4236b3e" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the stash for a specified package. See &lt;code&gt;gv_stashpvn&lt;/code&gt; .</source>
          <target state="translated">지정된 패키지의 숨김에 대한 포인터를 리턴합니다. &lt;code&gt;gv_stashpvn&lt;/code&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6e282b84489a62c496fa8f05e9f39ee4b0e980a0" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the stash for a specified package. The &lt;code&gt;namelen&lt;/code&gt; parameter indicates the length of the &lt;code&gt;name&lt;/code&gt; , in bytes. &lt;code&gt;flags&lt;/code&gt; is passed to &lt;code&gt;gv_fetchpvn_flags()&lt;/code&gt; , so if set to &lt;code&gt;GV_ADD&lt;/code&gt; then the package will be created if it does not already exist. If the package does not exist and &lt;code&gt;flags&lt;/code&gt; is 0 (or any other setting that does not create packages) then NULL is returned.</source>
          <target state="translated">지정된 패키지의 숨김에 대한 포인터를 리턴합니다. &lt;code&gt;namelen&lt;/code&gt; 매개 변수의 길이를 나타내는 &lt;code&gt;name&lt;/code&gt; 바이트. &lt;code&gt;flags&lt;/code&gt; 는 &lt;code&gt;gv_fetchpvn_flags()&lt;/code&gt; 로 전달 되므로 &lt;code&gt;GV_ADD&lt;/code&gt; 로 설정 하면 패키지가 없으면 패키지가 생성됩니다. 패키지가 존재하지 않고 &lt;code&gt;flags&lt;/code&gt; 가 0 (또는 패키지를 작성하지 않는 다른 설정)이면 NULL이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="a2df4b092ba2f395387ccc2b641cceca25e59ce9" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the stash for a specified package. Uses &lt;code&gt;strlen&lt;/code&gt; to determine the length of &lt;code&gt;name&lt;/code&gt; , then calls &lt;code&gt;gv_stashpvn()&lt;/code&gt; .</source>
          <target state="translated">지정된 패키지의 숨김에 대한 포인터를 리턴합니다. 용도 &lt;code&gt;strlen&lt;/code&gt; 의 길이를 결정하는 &lt;code&gt;name&lt;/code&gt; , 다음 호출 &lt;code&gt;gv_stashpvn()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9bbcc3b472c525493f720cd9e6594185078b9d5d" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the string in the SV, or a stringified form of the SV if the SV does not contain a string. The SV may cache the stringified version becoming &lt;code&gt;SvPOK&lt;/code&gt; . Handles 'get' magic. The &lt;code&gt;len&lt;/code&gt; variable will be set to the length of the string (this is a macro, so don't use &lt;code&gt;&amp;amp;len&lt;/code&gt; ). See also &lt;code&gt;SvPVx&lt;/code&gt; for a version which guarantees to evaluate sv only once.</source>
          <target state="translated">SV에 문자열에 대한 포인터 또는 SV에 문자열이 포함되지 않은 경우 SV의 문자열 형식을 반환합니다. SV는 스트링 화 된 버전을 &lt;code&gt;SvPOK&lt;/code&gt; 가되는 캐시 할 수있다 . 'get'매직을 처리합니다. &lt;code&gt;len&lt;/code&gt; 변수 (이 그렇게 사용하지 않는, 매크로이다 문자열의 길이로 설정됩니다 &lt;code&gt;&amp;amp;len&lt;/code&gt; ). sv를 한 번만 평가할 수있는 버전 은 &lt;code&gt;SvPVx&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b9cdf7cb07a9c099c40d2da202c258ffd257cb7b" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the string value of an SV, and sets *lp to its length. If flags includes SV_GMAGIC, does an mg_get() first. Coerces sv to a string if necessary. Normally invoked via the &lt;code&gt;SvPV_flags&lt;/code&gt; macro. &lt;code&gt;sv_2pv()&lt;/code&gt; and &lt;code&gt;sv_2pv_nomg&lt;/code&gt; usually end up here too.</source>
          <target state="translated">SV의 문자열 값에 대한 포인터를 리턴하고 * lp를 길이로 설정합니다. 플래그에 SV_GMAGIC이 포함 된 경우 mg_get ()을 먼저 수행합니다. 필요한 경우 sv을 문자열로 강제 변환합니다. 일반적으로 &lt;code&gt;SvPV_flags&lt;/code&gt; 매크로 를 통해 호출됩니다 . &lt;code&gt;sv_2pv()&lt;/code&gt; 및 &lt;code&gt;sv_2pv_nomg&lt;/code&gt; 도 보통 여기에 있습니다.</target>
        </trans-unit>
        <trans-unit id="bccf75c310175c6a4488b8e04da79109516ce3e9" translate="yes" xml:space="preserve">
          <source>Returns a pointer to the upgraded SV. Set the boolean qv if you want to force this SV to be interpreted as an &quot;extended&quot; version.</source>
          <target state="translated">업그레이드 된 SV에 대한 포인터를 반환합니다. 이 SV를 &quot;확장 된&quot;버전으로 해석하도록하려면 부울 qv를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d9806bfe88ab20e21133de039751096c2b5db2cc" translate="yes" xml:space="preserve">
          <source>Returns a pre-compiled regular expression which will match a chunk of TAP corresponding to the token type. For example (not that you should really pay attention to this, &lt;code&gt;$grammar-&amp;gt;syntax_for('comment')&lt;/code&gt; will return &lt;code&gt;&lt;a href=&quot;../../functions/qr&quot;&gt;qr/^#(.*)/&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">토큰 유형에 해당하는 TAP 청크와 일치하는 사전 컴파일 된 정규식을 리턴합니다. 예를 들어 (실제로주의를 기울여야하는 것이 아니라 &lt;code&gt;$grammar-&amp;gt;syntax_for('comment')&lt;/code&gt; 는 &lt;code&gt;&lt;a href=&quot;../../functions/qr&quot;&gt;qr/^#(.*)/&lt;/a&gt;&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="98d799d803f81669100d9de58e2fdb734bd9aa0e" translate="yes" xml:space="preserve">
          <source>Returns a random fractional number greater than or equal to &lt;code&gt;0&lt;/code&gt; and less than the value of EXPR. (EXPR should be positive.) If EXPR is omitted, the value &lt;code&gt;1&lt;/code&gt; is used. Currently EXPR with the value &lt;code&gt;0&lt;/code&gt; is also special-cased as &lt;code&gt;1&lt;/code&gt; (this was undocumented before Perl 5.8.0 and is subject to change in future versions of Perl). Automatically calls &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; unless &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; has already been called. See also &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 보다 크거나 EXPR 값보다 작은 난수를 반환합니다 . (EXPR은 양수 여야합니다.) EXPR을 생략하면 값 &lt;code&gt;1&lt;/code&gt; 이 사용됩니다. 현재 값이 &lt;code&gt;0&lt;/code&gt; 인 EXPR 은 &lt;code&gt;1&lt;/code&gt; 로 특수한 경우도 있습니다 (Perl 5.8.0 이전에 문서화되지 않았으며 향후 Perl 버전에서 변경 될 수 있음). 자동으로 호출 &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; 하지 않는 &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; 이미 호출 된. &lt;code&gt;&lt;a href=&quot;functions/srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf508d90600b43529e14c953f5a97c8d6689b38f" translate="yes" xml:space="preserve">
          <source>Returns a random fractional number greater than or equal to &lt;code&gt;0&lt;/code&gt; and less than the value of EXPR. (EXPR should be positive.) If EXPR is omitted, the value &lt;code&gt;1&lt;/code&gt; is used. Currently EXPR with the value &lt;code&gt;0&lt;/code&gt; is also special-cased as &lt;code&gt;1&lt;/code&gt; (this was undocumented before Perl 5.8.0 and is subject to change in future versions of Perl). Automatically calls &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; unless &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; has already been called. See also &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;0&lt;/code&gt; 보다 크거나 EXPR 값보다 작은 난수를 반환합니다 . (EXPR은 양수 여야합니다.) EXPR을 생략하면 값 &lt;code&gt;1&lt;/code&gt; 이 사용됩니다. 현재 값이 &lt;code&gt;0&lt;/code&gt; 인 EXPR 은 &lt;code&gt;1&lt;/code&gt; 로 특수한 경우도 있습니다 (Perl 5.8.0 이전에 문서화되지 않았으며 향후 Perl 버전에서 변경 될 수 있음). 자동으로 호출 &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; 하지 않는 &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; 이미 호출 된. &lt;code&gt;&lt;a href=&quot;srand&quot;&gt;srand&lt;/a&gt;&lt;/code&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="615f1be3cb3c2f4b6b37c0d2b02695dba53f7f48" translate="yes" xml:space="preserve">
          <source>Returns a reference to %hash</source>
          <target state="translated">% hash에 대한 참조를 반환</target>
        </trans-unit>
        <trans-unit id="4928b52facdef33a297a37259697ab23569e3b20" translate="yes" xml:space="preserve">
          <source>Returns a reference to a HASH where the keys are the message numbers and the values are the References: lines from the articles</source>
          <target state="translated">키가 메시지 번호이고 값이 참조 : 기사의 행인 HASH에 대한 참조를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ffe95d10b42d51f9703da93feb20ddb89337d57f" translate="yes" xml:space="preserve">
          <source>Returns a reference to a hash where the keys are all the group names which match &lt;code&gt;PATTERN&lt;/code&gt; , or all of the groups if no pattern is specified, and each value contains the description text for the group.</source>
          <target state="translated">키가 &lt;code&gt;PATTERN&lt;/code&gt; 과 일치하는 모든 그룹 이름 이거나 패턴이 지정되지 않은 경우 모든 그룹 인 해시에 대한 참조를 리턴 하며 각 값에는 그룹에 대한 설명 텍스트가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="78bd4c7f883c9af6844ec55948d66de1eb64f6e3" translate="yes" xml:space="preserve">
          <source>Returns a reference to a hash where the keys are all the group names which match &lt;code&gt;PATTERN&lt;/code&gt; and each value is the description text for the group.</source>
          <target state="translated">키가 &lt;code&gt;PATTERN&lt;/code&gt; 과 일치하는 모든 그룹 이름 이고 각 값이 그룹의 설명 텍스트 인 해시에 대한 참조를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="7fb7e4208f1f422785ac5e8fe96d8f9097ffac62" translate="yes" xml:space="preserve">
          <source>Returns a reference to a hash where the keys are all the possible distribution names and the values are the distribution descriptions.</source>
          <target state="translated">키가 가능한 모든 배포 이름이고 값이 배포 설명 인 해시에 대한 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="41ec26a19426ec79ed0673c2ccdaab5bd48995f2" translate="yes" xml:space="preserve">
          <source>Returns a reference to a hash where the keys are the group names and each value is a reference to an array containing the time the groups was created and an identifier, possibly an Email address, of the creator.</source>
          <target state="translated">키가 그룹 이름이고 각 값이 그룹이 생성 된 시간 및 작성자의 전자 메일 주소 인 식별자를 포함하는 배열에 대한 참조 인 해시에 대한 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="17453cf382e7663b26c4fee31095feb280394c5f" translate="yes" xml:space="preserve">
          <source>Returns a reference to a hash with keys being features present in current implementation. Several optional features are used in the minimal interface: &lt;code&gt;appname&lt;/code&gt; should be present if the first argument to &lt;code&gt;new&lt;/code&gt; is recognized, and &lt;code&gt;minline&lt;/code&gt; should be present if &lt;code&gt;MinLine&lt;/code&gt; method is not dummy. &lt;code&gt;autohistory&lt;/code&gt; should be present if lines are put into history automatically (maybe subject to &lt;code&gt;MinLine&lt;/code&gt; ), and &lt;code&gt;addhistory&lt;/code&gt; if &lt;code&gt;addhistory&lt;/code&gt; method is not dummy.</source>
          <target state="translated">현재 구현에 존재하는 기능인 키가있는 해시에 대한 참조를 반환합니다. : 여러 가지 옵션 기능은 최소한의 인터페이스에 사용되는 &lt;code&gt;appname&lt;/code&gt; 의 첫 번째 인수하는 경우 존재해야 &lt;code&gt;new&lt;/code&gt; 인식하고 &lt;code&gt;minline&lt;/code&gt; 는 경우에 존재해야 &lt;code&gt;MinLine&lt;/code&gt; 의 방법은 더미 없습니다. &lt;code&gt;autohistory&lt;/code&gt; 라인 (어쩌면 주제 이력 자동 투입하는 경우 존재해야 &lt;code&gt;MinLine&lt;/code&gt; ) 및 &lt;code&gt;addhistory&lt;/code&gt; 경우 &lt;code&gt;addhistory&lt;/code&gt; 방법 더미 아니다.</target>
        </trans-unit>
        <trans-unit id="92e83ba134feb058a413f52ca605c72031800912" translate="yes" xml:space="preserve">
          <source>Returns a reference to a list containing the lines, or</source>
          <target state="translated">줄이 포함 된 목록에 대한 참조를 반환하거나</target>
        </trans-unit>
        <trans-unit id="a73a5311ceb7c81983f36e1603ef6e15eb22357e" translate="yes" xml:space="preserve">
          <source>Returns a reference to a list of all the active messages in &lt;code&gt;GROUP&lt;/code&gt; , or the current group if &lt;code&gt;GROUP&lt;/code&gt; is not specified.</source>
          <target state="translated">&lt;code&gt;GROUP&lt;/code&gt; 의 모든 활성 메시지 목록 또는 &lt;code&gt;GROUP&lt;/code&gt; 이 지정되지 않은 경우 현재 그룹 의 참조를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="3486db5bdeee77ac7492cb70ea10c73309efb0a7" translate="yes" xml:space="preserve">
          <source>Returns a reference to a list which contains a list of groups which are recommended for a new user to subscribe to.</source>
          <target state="translated">새 사용자가 가입하도록 권장되는 그룹 목록이 포함 된 목록에 대한 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d6dfc9d6cb31fa87eb63c1c47373e4ad007e6281" translate="yes" xml:space="preserve">
          <source>Returns a reference to a list which contains the message-ids of all news posted after &lt;code&gt;SINCE&lt;/code&gt; , that are in a groups which matched &lt;code&gt;GROUPS&lt;/code&gt; and a distribution which matches &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;SINCE&lt;/code&gt; 이후에 게시 된 모든 뉴스의 메시지 ID , &lt;code&gt;GROUPS&lt;/code&gt; 와 일치하는 그룹 및 &lt;code&gt;DISTRIBUTIONS&lt;/code&gt; 와 일치하는 분배에 포함 된 목록에 대한 참조를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="178c756c0070fffc4153009701333a87d6109001" translate="yes" xml:space="preserve">
          <source>Returns a reference to an ARRAY of rows, each row is an ARRAY of cells from the above chart, including labels. This:</source>
          <target state="translated">행의 ARRAY에 대한 참조를 리턴합니다. 각 행은 레이블을 포함하여 위 차트에서 셀의 ARRAY입니다. 이:</target>
        </trans-unit>
        <trans-unit id="9a5ebe7eaaeb5e8db14fd11d03baf357b487217a" translate="yes" xml:space="preserve">
          <source>Returns a reference to an anonymous subroutine that, when executed, will call CODEREF with the Safe compartment 'in effect'. In other words, with the package namespace adjusted and the opmask enabled.</source>
          <target state="translated">익명 서브 루틴에 대한 참조를 실행하면 안전 구획이 '효과'로 CODEREF를 호출합니다. 다시 말해, 패키지 네임 스페이스가 조정되고 opmask가 활성화 된 상태입니다.</target>
        </trans-unit>
        <trans-unit id="3afcce74b3b895c14382df3096068d0a37bf36e4" translate="yes" xml:space="preserve">
          <source>Returns a reference to an array where each element, itself an array reference, consists of the three fields of a line of the distrib.pats list maintained by some NNTP servers, namely: a weight, a wildmat and a value which the client may use to construct a Distribution header.</source>
          <target state="translated">각 요소 (자체 배열 참조)가 일부 NNTP 서버에 의해 유지되는 distrib.pats 목록 행의 세 필드로 구성된 배열에 대한 참조를 리턴합니다. 즉, 클라이언트가 사용할 수있는 가중치, 와일드 매트 및 값 배포 헤더를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="29f750b931900c32df3fa44962cae51f18d580a5" translate="yes" xml:space="preserve">
          <source>Returns a reference to an array which contain the names of the fields returned by &lt;code&gt;xover&lt;/code&gt; .</source>
          <target state="translated">&lt;code&gt;xover&lt;/code&gt; 가 반환 한 필드의 이름을 포함하는 배열에 대한 참조를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2ec689a3e517335306f46c2053a044ceacb52aff" translate="yes" xml:space="preserve">
          <source>Returns a reference to the %hash.</source>
          <target state="translated">% hash에 대한 참조를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="6600e08a5af2621b51163cee09e33d4a7b83fec5" translate="yes" xml:space="preserve">
          <source>Returns a reference to the hash.</source>
          <target state="translated">해시에 대한 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="49c469df7eb03b91df007168353935c392b20a6a" translate="yes" xml:space="preserve">
          <source>Returns a reference to the object underlying VARIABLE (the same value that was originally returned by the &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; call that bound the variable to a package.) Returns the undefined value if VARIABLE isn't tied to a package.</source>
          <target state="translated">VARIABLE의 기초가되는 객체에 대한 참조를 리턴합니다 ( 변수를 패키지에 바인드 한 &lt;code&gt;&lt;a href=&quot;functions/tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; 호출에 의해 원래 리턴 된 것과 동일한 값 ). VARIABLE이 패키지에 연결되지 않은 경우 정의되지 않은 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="4fd036a2315a701fec7424b8505f28e3ef7e0a98" translate="yes" xml:space="preserve">
          <source>Returns a reference to the object underlying VARIABLE (the same value that was originally returned by the &lt;code&gt;&lt;a href=&quot;tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; call that bound the variable to a package.) Returns the undefined value if VARIABLE isn't tied to a package.</source>
          <target state="translated">VARIABLE의 기초가되는 객체에 대한 참조를 리턴합니다 ( 변수를 패키지에 바인드 한 &lt;code&gt;&lt;a href=&quot;tie&quot;&gt;tie&lt;/a&gt;&lt;/code&gt; 호출에 의해 원래 리턴 된 것과 동일한 값 ). VARIABLE이 패키지에 연결되지 않은 경우 정의되지 않은 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8e4a9958db2d459ae3e80355de054fcda823a5cd" translate="yes" xml:space="preserve">
          <source>Returns a reference to the regular scalar corresponding to this B::SV object. In other words, this method is the inverse operation to the svref_2object() subroutine. This scalar and other data it points at should be considered read-only: modifying them is neither safe nor guaranteed to have a sensible effect.</source>
          <target state="translated">이 B :: SV 객체에 해당하는 정규 스칼라에 대한 참조를 반환합니다. 즉,이 메소드는 svref_2object () 서브 루틴에 대한 역 연산입니다. 이 스칼라 및이 데이터가 가리키는 기타 데이터는 읽기 전용으로 간주해야합니다. 수정하는 것이 안전하거나 합리적인 효과를 보장하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="71f364b844a4f88bbd2f6745f581b2d05dbe89db" translate="yes" xml:space="preserve">
          <source>Returns a scalar that has the value &lt;code&gt;$num&lt;/code&gt; in a numeric context and the value &lt;code&gt;$string&lt;/code&gt; in a string context.</source>
          <target state="translated">숫자 컨텍스트에서 값이 &lt;code&gt;$num&lt;/code&gt; 이고 문자열 컨텍스트에서 값이 &lt;code&gt;$string&lt;/code&gt; 스칼라를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a823e074342aa3b692686bda146fd73abdf993f1" translate="yes" xml:space="preserve">
          <source>Returns a sort key.</source>
          <target state="translated">정렬 키를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="00388bdb182045c1d860e7a7441d0b87c26ecc13" translate="yes" xml:space="preserve">
          <source>Returns a splice of the array.</source>
          <target state="translated">배열의 스플 라이스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f4933eba0add60e415478da1c68e0c12dbfe3402" translate="yes" xml:space="preserve">
          <source>Returns a string containing a portable, human-readable representation of the current SHA state.</source>
          <target state="translated">사람이 읽을 수있는 이식 가능한 현재 SHA 상태 표현이 포함 된 문자열을 반환합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
